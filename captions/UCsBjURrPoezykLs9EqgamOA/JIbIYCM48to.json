[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "Amazon web services launched in 2006",
    "start": "160",
    "end": "2840"
  },
  {
    "text": "with a total of three products storage",
    "start": "2840",
    "end": "4920"
  },
  {
    "text": "buckets compute instances and a",
    "start": "4920",
    "end": "6960"
  },
  {
    "text": "messaging queue today it offers a",
    "start": "6960",
    "end": "8960"
  },
  {
    "text": "mind-numbing 200 and something services",
    "start": "8960",
    "end": "11360"
  },
  {
    "text": "and what's most confusing is that many",
    "start": "11360",
    "end": "13080"
  },
  {
    "text": "of them appear to do almost the exact",
    "start": "13080",
    "end": "15120"
  },
  {
    "text": "same thing it's kind of like shopping at",
    "start": "15120",
    "end": "16640"
  },
  {
    "text": "a big grocery store where you have",
    "start": "16640",
    "end": "18119"
  },
  {
    "text": "different aisles of product categories",
    "start": "18119",
    "end": "19960"
  },
  {
    "text": "filled with things to buy that meet the",
    "start": "19960",
    "end": "21600"
  },
  {
    "text": "needs of virtually every developer on",
    "start": "21600",
    "end": "23359"
  },
  {
    "text": "the planet in today's video we'll walk",
    "start": "23359",
    "end": "25279"
  },
  {
    "text": "down these aisles to gain an",
    "start": "25279",
    "end": "26880"
  },
  {
    "text": "understanding of over 50 different AWS",
    "start": "26880",
    "end": "29240"
  },
  {
    "text": "products so first let's start with a few",
    "start": "29240",
    "end": "31519"
  },
  {
    "text": "that are above my pay grade that you may",
    "start": "31519",
    "end": "33200"
  },
  {
    "text": "not know exist if you're building robots",
    "start": "33200",
    "end": "35200"
  },
  {
    "start": "34000",
    "end": "40000"
  },
  {
    "text": "you can use robomaker to simulate and",
    "start": "35200",
    "end": "37399"
  },
  {
    "text": "test your robots at scale then once your",
    "start": "37399",
    "end": "39399"
  },
  {
    "text": "robots are in people's homes you can use",
    "start": "39399",
    "end": "41360"
  },
  {
    "start": "40000",
    "end": "46000"
  },
  {
    "text": "iot core to collect data from them",
    "start": "41360",
    "end": "43640"
  },
  {
    "text": "update their software and manage them",
    "start": "43640",
    "end": "45480"
  },
  {
    "text": "remotely if you happen to have a",
    "start": "45480",
    "end": "46840"
  },
  {
    "start": "46000",
    "end": "53000"
  },
  {
    "text": "satellite orbiting Earth you can tap",
    "start": "46840",
    "end": "48480"
  },
  {
    "text": "into Amazon's Global Network of antennas",
    "start": "48480",
    "end": "50680"
  },
  {
    "text": "to connect data through its ground",
    "start": "50680",
    "end": "52160"
  },
  {
    "text": "station service and if you want to start",
    "start": "52160",
    "end": "54120"
  },
  {
    "start": "53000",
    "end": "60000"
  },
  {
    "text": "experimenting and researching the future",
    "start": "54120",
    "end": "55879"
  },
  {
    "text": "of computing you can use bracket to",
    "start": "55879",
    "end": "57879"
  },
  {
    "text": "interact with a quantum computer but",
    "start": "57879",
    "end": "60000"
  },
  {
    "start": "60000",
    "end": "86000"
  },
  {
    "text": "most developers go to the cloud to solve",
    "start": "60000",
    "end": "61840"
  },
  {
    "text": "more practical problems and for that",
    "start": "61840",
    "end": "63640"
  },
  {
    "text": "let's head to the compute aisle one of",
    "start": "63640",
    "end": "65400"
  },
  {
    "text": "the original AWS products was elastic",
    "start": "65400",
    "end": "67759"
  },
  {
    "text": "compute Cloud it's one of the most",
    "start": "67759",
    "end": "69479"
  },
  {
    "text": "fundamental building blocks on the",
    "start": "69479",
    "end": "70840"
  },
  {
    "text": "platform and allows you to create a",
    "start": "70840",
    "end": "72759"
  },
  {
    "text": "virtual computer in the cloud choose",
    "start": "72759",
    "end": "74640"
  },
  {
    "text": "your operating system memory and",
    "start": "74640",
    "end": "76680"
  },
  {
    "text": "computing power then you can rent that",
    "start": "76680",
    "end": "78439"
  },
  {
    "text": "space in the cloud like you're renting",
    "start": "78439",
    "end": "79880"
  },
  {
    "text": "an apartment that you pay for by the",
    "start": "79880",
    "end": "81680"
  },
  {
    "text": "second a common use case is to use an",
    "start": "81680",
    "end": "83720"
  },
  {
    "text": "instance as a server for web application",
    "start": "83720",
    "end": "86320"
  },
  {
    "start": "86000",
    "end": "99000"
  },
  {
    "text": "but one problem is that as your app",
    "start": "86320",
    "end": "88000"
  },
  {
    "text": "grows you'll likely need to distribute",
    "start": "88000",
    "end": "89680"
  },
  {
    "text": "track traffic across multiple instances",
    "start": "89680",
    "end": "92040"
  },
  {
    "text": "in 2009 Amazon introduced elastic load",
    "start": "92040",
    "end": "94920"
  },
  {
    "text": "balancing which allowed developers to",
    "start": "94920",
    "end": "96799"
  },
  {
    "text": "distribute traffic to multiple instances",
    "start": "96799",
    "end": "99040"
  },
  {
    "start": "99000",
    "end": "107000"
  },
  {
    "text": "automatically in addition the cloudwatch",
    "start": "99040",
    "end": "101320"
  },
  {
    "text": "service can collect logs and metrics",
    "start": "101320",
    "end": "103560"
  },
  {
    "text": "from each individual instance the data",
    "start": "103560",
    "end": "105600"
  },
  {
    "text": "collected from cloudwatch can then be",
    "start": "105600",
    "end": "107360"
  },
  {
    "start": "107000",
    "end": "116000"
  },
  {
    "text": "passed off to autoscale in which you",
    "start": "107360",
    "end": "109280"
  },
  {
    "text": "define policies that create new",
    "start": "109280",
    "end": "111119"
  },
  {
    "text": "instances as they become needed based on",
    "start": "111119",
    "end": "113200"
  },
  {
    "text": "the traffic and utilization of your",
    "start": "113200",
    "end": "115159"
  },
  {
    "text": "current infrastructure these tools were",
    "start": "115159",
    "end": "116799"
  },
  {
    "start": "116000",
    "end": "141000"
  },
  {
    "text": "revolutionary at the time but developers",
    "start": "116799",
    "end": "118840"
  },
  {
    "text": "still wanted an easier way to get things",
    "start": "118840",
    "end": "120840"
  },
  {
    "text": "done and that's where elastic beanock",
    "start": "120840",
    "end": "122840"
  },
  {
    "text": "comes in most developers in 2011 just",
    "start": "122840",
    "end": "125039"
  },
  {
    "text": "wanted to deploy a Ruby on Rails app",
    "start": "125039",
    "end": "127159"
  },
  {
    "text": "elastic beanock made that much easier by",
    "start": "127159",
    "end": "129440"
  },
  {
    "text": "providing an additional layer of",
    "start": "129440",
    "end": "130840"
  },
  {
    "text": "abstraction on top of ec2 and other",
    "start": "130840",
    "end": "133360"
  },
  {
    "text": "autoscaling features choose a template",
    "start": "133360",
    "end": "135519"
  },
  {
    "text": "deploy your code and let all the",
    "start": "135519",
    "end": "137120"
  },
  {
    "text": "autoscaling stuff happen automatically",
    "start": "137120",
    "end": "139440"
  },
  {
    "text": "this is often called a platform as a",
    "start": "139440",
    "end": "141319"
  },
  {
    "start": "141000",
    "end": "160000"
  },
  {
    "text": "service but in some cases it's still too",
    "start": "141319",
    "end": "143560"
  },
  {
    "text": "complicated if you don't care about the",
    "start": "143560",
    "end": "144959"
  },
  {
    "text": "underlying infrastructure whatsoever and",
    "start": "144959",
    "end": "147000"
  },
  {
    "text": "just want to deploy a WordPress site",
    "start": "147000",
    "end": "149000"
  },
  {
    "text": "light sale is alternative option where",
    "start": "149000",
    "end": "150920"
  },
  {
    "text": "you can point and click at what you want",
    "start": "150920",
    "end": "152440"
  },
  {
    "text": "to deploy and worry even less about the",
    "start": "152440",
    "end": "154599"
  },
  {
    "text": "underlying configuration in all these",
    "start": "154599",
    "end": "156480"
  },
  {
    "text": "cases you are deploying a static server",
    "start": "156480",
    "end": "158640"
  },
  {
    "text": "that is always running in the cloud but",
    "start": "158640",
    "end": "160760"
  },
  {
    "start": "160000",
    "end": "187000"
  },
  {
    "text": "many Computing jobs are ephemeral which",
    "start": "160760",
    "end": "162800"
  },
  {
    "text": "means they don't rely on any persistent",
    "start": "162800",
    "end": "164760"
  },
  {
    "text": "State on the server so why bother",
    "start": "164760",
    "end": "166480"
  },
  {
    "text": "deploying a server for code like that in",
    "start": "166480",
    "end": "168400"
  },
  {
    "text": "2014 Lambda came out which are functions",
    "start": "168400",
    "end": "171080"
  },
  {
    "text": "as a service or serverless Computing",
    "start": "171080",
    "end": "173400"
  },
  {
    "text": "with Lambda you simply upload your code",
    "start": "173400",
    "end": "175720"
  },
  {
    "text": "then choose an event that decides when",
    "start": "175720",
    "end": "177640"
  },
  {
    "text": "that code should run traffic scaling and",
    "start": "177640",
    "end": "179560"
  },
  {
    "text": "netor networking are all things that",
    "start": "179560",
    "end": "181000"
  },
  {
    "text": "happen entirely in the background and",
    "start": "181000",
    "end": "182760"
  },
  {
    "text": "unlike a dedicated server you only pay",
    "start": "182760",
    "end": "184840"
  },
  {
    "text": "for the exact number of request and",
    "start": "184840",
    "end": "186599"
  },
  {
    "text": "Computing time that you use now if you",
    "start": "186599",
    "end": "188560"
  },
  {
    "start": "187000",
    "end": "196000"
  },
  {
    "text": "don't like writing your own code you can",
    "start": "188560",
    "end": "190200"
  },
  {
    "text": "use the serverless application",
    "start": "190200",
    "end": "191840"
  },
  {
    "text": "repository to find pre-built functions",
    "start": "191840",
    "end": "194280"
  },
  {
    "text": "that you can deploy with the click of a",
    "start": "194280",
    "end": "195599"
  },
  {
    "text": "button but what if you're a huge",
    "start": "195599",
    "end": "197159"
  },
  {
    "start": "196000",
    "end": "205000"
  },
  {
    "text": "Enterprise with a bunch of its own",
    "start": "197159",
    "end": "198640"
  },
  {
    "text": "servers Outpost is a way to rent AWS",
    "start": "198640",
    "end": "201280"
  },
  {
    "text": "apis on your own infrastructure without",
    "start": "201280",
    "end": "203480"
  },
  {
    "text": "needing to throw your old servers in the",
    "start": "203480",
    "end": "205000"
  },
  {
    "start": "205000",
    "end": "219000"
  },
  {
    "text": "garbage in other cases you may want to",
    "start": "205000",
    "end": "206879"
  },
  {
    "text": "interact with AWS from remote or extreme",
    "start": "206879",
    "end": "209360"
  },
  {
    "text": "environment like if you're a scientist",
    "start": "209360",
    "end": "211159"
  },
  {
    "text": "in the Arctic snow devices are like",
    "start": "211159",
    "end": "213080"
  },
  {
    "text": "little mini data centers that can work",
    "start": "213080",
    "end": "214799"
  },
  {
    "text": "without internet in hostile environments",
    "start": "214799",
    "end": "217239"
  },
  {
    "text": "so that gives us some fundamental ways",
    "start": "217239",
    "end": "218760"
  },
  {
    "text": "to compute things but many apps today",
    "start": "218760",
    "end": "220879"
  },
  {
    "start": "219000",
    "end": "236000"
  },
  {
    "text": "are standardized with Docker containers",
    "start": "220879",
    "end": "223040"
  },
  {
    "text": "allowing them to run on multiple",
    "start": "223040",
    "end": "224640"
  },
  {
    "text": "different clouds or Computing",
    "start": "224640",
    "end": "226000"
  },
  {
    "text": "environments with very little effort to",
    "start": "226000",
    "end": "227879"
  },
  {
    "text": "run a container you first need to create",
    "start": "227879",
    "end": "229920"
  },
  {
    "text": "a Docker image and store it somewhere",
    "start": "229920",
    "end": "232000"
  },
  {
    "text": "elastic container registry allows you to",
    "start": "232000",
    "end": "234200"
  },
  {
    "text": "upload an image allowing other tools",
    "start": "234200",
    "end": "236200"
  },
  {
    "start": "236000",
    "end": "249000"
  },
  {
    "text": "like elastic container service to pull",
    "start": "236200",
    "end": "238319"
  },
  {
    "text": "it back down and run it ECS is an API",
    "start": "238319",
    "end": "241239"
  },
  {
    "text": "for starting stopping and allocating",
    "start": "241239",
    "end": "243720"
  },
  {
    "text": "virtual machines to your containers and",
    "start": "243720",
    "end": "245840"
  },
  {
    "text": "allows you to connect them to other",
    "start": "245840",
    "end": "247439"
  },
  {
    "text": "products like load balancers some",
    "start": "247439",
    "end": "249360"
  },
  {
    "start": "249000",
    "end": "255000"
  },
  {
    "text": "companies may want more control over how",
    "start": "249360",
    "end": "251120"
  },
  {
    "text": "their app scales in which case eks is a",
    "start": "251120",
    "end": "253720"
  },
  {
    "text": "tool for running kubernetes but in other",
    "start": "253720",
    "end": "256000"
  },
  {
    "start": "255000",
    "end": "267000"
  },
  {
    "text": "cases you may want your containers to",
    "start": "256000",
    "end": "257840"
  },
  {
    "text": "behave in a more automated way fargate",
    "start": "257840",
    "end": "260040"
  },
  {
    "text": "is a tool that will make your containers",
    "start": "260040",
    "end": "261759"
  },
  {
    "text": "behave like serverless functions",
    "start": "261759",
    "end": "263440"
  },
  {
    "text": "removing the need to allocate ec2",
    "start": "263440",
    "end": "265400"
  },
  {
    "text": "instances for your containers but if",
    "start": "265400",
    "end": "267160"
  },
  {
    "start": "267000",
    "end": "281000"
  },
  {
    "text": "you're building an application and",
    "start": "267160",
    "end": "268560"
  },
  {
    "text": "already have it containerized the",
    "start": "268560",
    "end": "270120"
  },
  {
    "text": "easiest way to deploy it to AWS is app",
    "start": "270120",
    "end": "272639"
  },
  {
    "text": "Runner this is a new product in 2021",
    "start": "272639",
    "end": "275160"
  },
  {
    "text": "where you simply point it to a container",
    "start": "275160",
    "end": "276840"
  },
  {
    "text": "image while it handles all the",
    "start": "276840",
    "end": "278440"
  },
  {
    "text": "orchestration and scaling behind the",
    "start": "278440",
    "end": "280400"
  },
  {
    "text": "scenes but running an application is",
    "start": "280400",
    "end": "282520"
  },
  {
    "start": "281000",
    "end": "299000"
  },
  {
    "text": "only half the battle we also need to",
    "start": "282520",
    "end": "284520"
  },
  {
    "text": "store data in the cloud simple storage",
    "start": "284520",
    "end": "286600"
  },
  {
    "text": "service or S3 was the very first product",
    "start": "286600",
    "end": "289280"
  },
  {
    "text": "offered by AWS it can store any type of",
    "start": "289280",
    "end": "291960"
  },
  {
    "text": "file or object like an image or video",
    "start": "291960",
    "end": "294320"
  },
  {
    "text": "and it's based on the same",
    "start": "294320",
    "end": "295400"
  },
  {
    "text": "infrastructure as Amazon's e-commerce",
    "start": "295400",
    "end": "297560"
  },
  {
    "text": "site it's great for general purpose file",
    "start": "297560",
    "end": "299160"
  },
  {
    "start": "299000",
    "end": "306000"
  },
  {
    "text": "storage but if you don't access your",
    "start": "299160",
    "end": "300759"
  },
  {
    "text": "files very often you can archive them in",
    "start": "300759",
    "end": "302880"
  },
  {
    "text": "Glacier which has a higher latency but a",
    "start": "302880",
    "end": "305120"
  },
  {
    "text": "much lower cost on the other end of the",
    "start": "305120",
    "end": "306919"
  },
  {
    "start": "306000",
    "end": "319000"
  },
  {
    "text": "spectrum you may need storage that is",
    "start": "306919",
    "end": "308680"
  },
  {
    "text": "extremely fast and can handle a lot of",
    "start": "308680",
    "end": "310639"
  },
  {
    "text": "throughput elastic block storage is",
    "start": "310639",
    "end": "312600"
  },
  {
    "text": "ideal for applications that have",
    "start": "312600",
    "end": "314440"
  },
  {
    "text": "intensive data processing requirements",
    "start": "314440",
    "end": "316639"
  },
  {
    "text": "but requires more manual configuration",
    "start": "316639",
    "end": "318440"
  },
  {
    "text": "by the developer now if you want",
    "start": "318440",
    "end": "320160"
  },
  {
    "start": "319000",
    "end": "332000"
  },
  {
    "text": "something that's highly performant and",
    "start": "320160",
    "end": "321840"
  },
  {
    "text": "also fully managed elastic file system",
    "start": "321840",
    "end": "324280"
  },
  {
    "text": "provides all the bells and whistles but",
    "start": "324280",
    "end": "325880"
  },
  {
    "text": "at a much higher cost in addition to raw",
    "start": "325880",
    "end": "328000"
  },
  {
    "text": "files developers also need to store",
    "start": "328000",
    "end": "329960"
  },
  {
    "text": "structured data for their end users and",
    "start": "329960",
    "end": "332120"
  },
  {
    "start": "332000",
    "end": "348000"
  },
  {
    "text": "that brings us to the database aisle",
    "start": "332120",
    "end": "333800"
  },
  {
    "text": "which has a lot of different products to",
    "start": "333800",
    "end": "335400"
  },
  {
    "text": "choose from the first ever database on",
    "start": "335400",
    "end": "337440"
  },
  {
    "text": "AWS was simple DB a general purpose",
    "start": "337440",
    "end": "340520"
  },
  {
    "text": "nosql database but it tends to be a",
    "start": "340520",
    "end": "342720"
  },
  {
    "text": "little too simple for most people",
    "start": "342720",
    "end": "344600"
  },
  {
    "text": "everybody knows you never go full R time",
    "start": "344600",
    "end": "346800"
  },
  {
    "text": "it was followed up a few years later",
    "start": "346800",
    "end": "348360"
  },
  {
    "start": "348000",
    "end": "359000"
  },
  {
    "text": "with Dynamo DB which is a document",
    "start": "348360",
    "end": "350360"
  },
  {
    "text": "database that's very easy to scale",
    "start": "350360",
    "end": "352360"
  },
  {
    "text": "horizontally it's inexpensive and",
    "start": "352360",
    "end": "354479"
  },
  {
    "text": "provides fast read performance but it",
    "start": "354479",
    "end": "356400"
  },
  {
    "text": "isn't very good at modeling relational",
    "start": "356400",
    "end": "358360"
  },
  {
    "text": "data if you're familiar with mongodb",
    "start": "358360",
    "end": "360680"
  },
  {
    "start": "359000",
    "end": "373000"
  },
  {
    "text": "another document database option is",
    "start": "360680",
    "end": "362880"
  },
  {
    "text": "document DB it's a controversial option",
    "start": "362880",
    "end": "365520"
  },
  {
    "text": "that's technically not mongodb that has",
    "start": "365520",
    "end": "367919"
  },
  {
    "text": "a one toone mapping of the mongod DB API",
    "start": "367919",
    "end": "370680"
  },
  {
    "text": "to get around restrictive open source",
    "start": "370680",
    "end": "372520"
  },
  {
    "text": "licensing speaking of which Amazon also",
    "start": "372520",
    "end": "374840"
  },
  {
    "start": "373000",
    "end": "381000"
  },
  {
    "text": "did a similar thing with elastic search",
    "start": "374840",
    "end": "377000"
  },
  {
    "text": "which itself is a great option if you",
    "start": "377000",
    "end": "378720"
  },
  {
    "text": "want to build something like a fulltech",
    "start": "378720",
    "end": "380560"
  },
  {
    "text": "search engine but the majority of",
    "start": "380560",
    "end": "382240"
  },
  {
    "start": "381000",
    "end": "396000"
  },
  {
    "text": "developers out there will opt for a",
    "start": "382240",
    "end": "384240"
  },
  {
    "text": "traditional relational SQL database",
    "start": "384240",
    "end": "386720"
  },
  {
    "text": "Amazon relational database service RDS",
    "start": "386720",
    "end": "389560"
  },
  {
    "text": "supports a variety of different SQL",
    "start": "389560",
    "end": "391280"
  },
  {
    "text": "flavors and can fully manage things like",
    "start": "391280",
    "end": "393479"
  },
  {
    "text": "backups patching and scale but Amazon",
    "start": "393479",
    "end": "396639"
  },
  {
    "start": "396000",
    "end": "418000"
  },
  {
    "text": "also offers its own proprietary flavor",
    "start": "396639",
    "end": "398840"
  },
  {
    "text": "of SQL called Aurora it's compatible",
    "start": "398840",
    "end": "401440"
  },
  {
    "text": "with postgress or MySQL and can be",
    "start": "401440",
    "end": "403759"
  },
  {
    "text": "operated with better performance at a",
    "start": "403759",
    "end": "405560"
  },
  {
    "text": "lower cost in addition Aurora offers a",
    "start": "405560",
    "end": "407919"
  },
  {
    "text": "new serverless option that makes it even",
    "start": "407919",
    "end": "409880"
  },
  {
    "text": "easier to scale and you only pay for the",
    "start": "409880",
    "end": "412080"
  },
  {
    "text": "actual time that the database is in use",
    "start": "412080",
    "end": "414199"
  },
  {
    "text": "relational databases are a great general",
    "start": "414199",
    "end": "416039"
  },
  {
    "text": "purpose option but they're not the only",
    "start": "416039",
    "end": "418000"
  },
  {
    "start": "418000",
    "end": "426000"
  },
  {
    "text": "option Neptune is a graph database that",
    "start": "418000",
    "end": "420319"
  },
  {
    "text": "can achieve better performance on highly",
    "start": "420319",
    "end": "422240"
  },
  {
    "text": "connected data sets like a social graph",
    "start": "422240",
    "end": "424479"
  },
  {
    "text": "or recommendation engine if your current",
    "start": "424479",
    "end": "426360"
  },
  {
    "start": "426000",
    "end": "436000"
  },
  {
    "text": "database is too slow you may want to",
    "start": "426360",
    "end": "428080"
  },
  {
    "text": "bring in elastic cache which is a fully",
    "start": "428080",
    "end": "430400"
  },
  {
    "text": "managed version of redis in inmemory",
    "start": "430400",
    "end": "432479"
  },
  {
    "text": "database that delivers data to your end",
    "start": "432479",
    "end": "434560"
  },
  {
    "text": "users with extremely low latency if you",
    "start": "434560",
    "end": "436800"
  },
  {
    "start": "436000",
    "end": "448000"
  },
  {
    "text": "work with time series data like the",
    "start": "436800",
    "end": "438680"
  },
  {
    "text": "stock market for example you might",
    "start": "438680",
    "end": "440400"
  },
  {
    "text": "benefit from time stream a Time series",
    "start": "440400",
    "end": "442680"
  },
  {
    "text": "database with built-in functions for",
    "start": "442680",
    "end": "444759"
  },
  {
    "text": "time based queries and additional",
    "start": "444759",
    "end": "446479"
  },
  {
    "text": "features for analytics yet another",
    "start": "446479",
    "end": "448680"
  },
  {
    "start": "448000",
    "end": "458000"
  },
  {
    "text": "option is the Quantum Ledger database",
    "start": "448680",
    "end": "450879"
  },
  {
    "text": "which allows you to build an immutable",
    "start": "450879",
    "end": "452560"
  },
  {
    "text": "set of cryptographically signed",
    "start": "452560",
    "end": "454160"
  },
  {
    "text": "transactions very similar to",
    "start": "454160",
    "end": "456000"
  },
  {
    "text": "decentralized blockchain technology now",
    "start": "456000",
    "end": "458520"
  },
  {
    "start": "458000",
    "end": "485000"
  },
  {
    "text": "let's shift gears and talk about",
    "start": "458520",
    "end": "460000"
  },
  {
    "text": "analytics to analyze data you first need",
    "start": "460000",
    "end": "462400"
  },
  {
    "text": "a place to store it and a popular option",
    "start": "462400",
    "end": "464400"
  },
  {
    "text": "for doing that is red shift which is a",
    "start": "464400",
    "end": "466680"
  },
  {
    "text": "data warehouse that tries to get you to",
    "start": "466680",
    "end": "468479"
  },
  {
    "text": "shift away from Oracle warehouses are",
    "start": "468479",
    "end": "470759"
  },
  {
    "text": "often used by big Enterprises to dump",
    "start": "470759",
    "end": "472919"
  },
  {
    "text": "multiple data sources from the business",
    "start": "472919",
    "end": "474680"
  },
  {
    "text": "where they can be analyzed together when",
    "start": "474680",
    "end": "476479"
  },
  {
    "text": "all your data is in one place it's",
    "start": "476479",
    "end": "478199"
  },
  {
    "text": "easier to generate meing meanful",
    "start": "478199",
    "end": "479840"
  },
  {
    "text": "analytics and run machine learning on it",
    "start": "479840",
    "end": "482159"
  },
  {
    "text": "data in a warehouse is structured so it",
    "start": "482159",
    "end": "484240"
  },
  {
    "text": "can be queried but if you need a place",
    "start": "484240",
    "end": "485879"
  },
  {
    "start": "485000",
    "end": "501000"
  },
  {
    "text": "to put a large amount of unstructured",
    "start": "485879",
    "end": "487919"
  },
  {
    "text": "data you can use AWS Lake formation",
    "start": "487919",
    "end": "490599"
  },
  {
    "text": "which is a tool for creating data lakes",
    "start": "490599",
    "end": "492560"
  },
  {
    "text": "or repositories that store a large",
    "start": "492560",
    "end": "494639"
  },
  {
    "text": "amount of unstructured data which can be",
    "start": "494639",
    "end": "496759"
  },
  {
    "text": "used in addition to data warehouses to",
    "start": "496759",
    "end": "498720"
  },
  {
    "text": "query a larger variety of data sources",
    "start": "498720",
    "end": "501400"
  },
  {
    "start": "501000",
    "end": "511000"
  },
  {
    "text": "if you want to analyze real-time data",
    "start": "501400",
    "end": "503159"
  },
  {
    "text": "you can use Kinesis to capture real-time",
    "start": "503159",
    "end": "505440"
  },
  {
    "text": "streams from your infrastructure then",
    "start": "505440",
    "end": "507440"
  },
  {
    "text": "visualize them in your favorite business",
    "start": "507440",
    "end": "509159"
  },
  {
    "text": "and elligence tool or you can use a",
    "start": "509159",
    "end": "511319"
  },
  {
    "start": "511000",
    "end": "523000"
  },
  {
    "text": "stream processing framework like Apache",
    "start": "511319",
    "end": "513320"
  },
  {
    "text": "spark that runs on elastic map reduce",
    "start": "513320",
    "end": "516159"
  },
  {
    "text": "which itself is a service that allows",
    "start": "516159",
    "end": "518039"
  },
  {
    "text": "you to operate on massive data sets",
    "start": "518039",
    "end": "519880"
  },
  {
    "text": "efficiently with a parallel distributed",
    "start": "519880",
    "end": "521919"
  },
  {
    "text": "algorithm now if you don't want to use",
    "start": "521919",
    "end": "523560"
  },
  {
    "start": "523000",
    "end": "532000"
  },
  {
    "text": "Kinesis for streaming data a popular",
    "start": "523560",
    "end": "525800"
  },
  {
    "text": "alternative is Apache kofka it's open",
    "start": "525800",
    "end": "528320"
  },
  {
    "text": "source and Amazon msk is a fully managed",
    "start": "528320",
    "end": "531000"
  },
  {
    "text": "service to get you started but for the",
    "start": "531000",
    "end": "533040"
  },
  {
    "start": "532000",
    "end": "556000"
  },
  {
    "text": "average developer all this data",
    "start": "533040",
    "end": "534680"
  },
  {
    "text": "processing may be a little too",
    "start": "534680",
    "end": "536279"
  },
  {
    "text": "complicated glue is a serverless product",
    "start": "536279",
    "end": "538760"
  },
  {
    "text": "that makes it much easier to extract",
    "start": "538760",
    "end": "540800"
  },
  {
    "text": "transform and load your data it can",
    "start": "540800",
    "end": "542920"
  },
  {
    "text": "automatically connect to other data",
    "start": "542920",
    "end": "544440"
  },
  {
    "text": "sources on AWS like Aurora red shift and",
    "start": "544440",
    "end": "547399"
  },
  {
    "text": "S3 and has a tool called glue studio so",
    "start": "547399",
    "end": "550160"
  },
  {
    "text": "you can create jobs without having to",
    "start": "550160",
    "end": "551839"
  },
  {
    "text": "write any actual source code but one of",
    "start": "551839",
    "end": "553800"
  },
  {
    "text": "the biggest advantages of collecting",
    "start": "553800",
    "end": "555480"
  },
  {
    "text": "massive amounts of data is that you can",
    "start": "555480",
    "end": "557240"
  },
  {
    "start": "556000",
    "end": "571000"
  },
  {
    "text": "use it to help predict the future and",
    "start": "557240",
    "end": "559200"
  },
  {
    "text": "AWS has a bunch of tools in the machine",
    "start": "559200",
    "end": "561240"
  },
  {
    "text": "learning aisle to make that process",
    "start": "561240",
    "end": "562920"
  },
  {
    "text": "easier but first if you don't have any",
    "start": "562920",
    "end": "565120"
  },
  {
    "text": "highquality data of your own you can use",
    "start": "565120",
    "end": "567040"
  },
  {
    "text": "the data exchange to purchase And",
    "start": "567040",
    "end": "569000"
  },
  {
    "text": "subscribe rbe to data from third party",
    "start": "569000",
    "end": "570959"
  },
  {
    "text": "sources once you have some data in the",
    "start": "570959",
    "end": "572800"
  },
  {
    "start": "571000",
    "end": "593000"
  },
  {
    "text": "cloud you can use sag maker to connect",
    "start": "572800",
    "end": "574920"
  },
  {
    "text": "to it and start building machine",
    "start": "574920",
    "end": "576320"
  },
  {
    "text": "learning models with tensor flow or P",
    "start": "576320",
    "end": "578399"
  },
  {
    "text": "torch it operates on multiple levels to",
    "start": "578399",
    "end": "580600"
  },
  {
    "text": "make machine learning easier and",
    "start": "580600",
    "end": "582200"
  },
  {
    "text": "provides a managed Jupiter notebook that",
    "start": "582200",
    "end": "584279"
  },
  {
    "text": "can connect to a GPU instance to train a",
    "start": "584279",
    "end": "586440"
  },
  {
    "text": "machine learning model then deploy it",
    "start": "586440",
    "end": "588000"
  },
  {
    "text": "somewhere useful that's cool but",
    "start": "588000",
    "end": "589720"
  },
  {
    "text": "building your own ml models from scratch",
    "start": "589720",
    "end": "591760"
  },
  {
    "text": "is still extremely difficult if you need",
    "start": "591760",
    "end": "593560"
  },
  {
    "start": "593000",
    "end": "602000"
  },
  {
    "text": "to do image analysis you may as well",
    "start": "593560",
    "end": "595519"
  },
  {
    "text": "just use the recognition API it can",
    "start": "595519",
    "end": "597640"
  },
  {
    "text": "classify all kinds of objects and images",
    "start": "597640",
    "end": "599920"
  },
  {
    "text": "and is likely way better than anything",
    "start": "599920",
    "end": "601600"
  },
  {
    "text": "that you would build on your own or if",
    "start": "601600",
    "end": "603279"
  },
  {
    "start": "602000",
    "end": "610000"
  },
  {
    "text": "you want to build a conversational bot",
    "start": "603279",
    "end": "605120"
  },
  {
    "text": "you might use Lex which runs on the same",
    "start": "605120",
    "end": "607079"
  },
  {
    "text": "technology that powers Alexa devices or",
    "start": "607079",
    "end": "609600"
  },
  {
    "text": "if you just want to have fun and learn",
    "start": "609600",
    "end": "611160"
  },
  {
    "start": "610000",
    "end": "618000"
  },
  {
    "text": "how machine Learning Works you might buy",
    "start": "611160",
    "end": "613000"
  },
  {
    "text": "a deep raser device which is an actual",
    "start": "613000",
    "end": "615160"
  },
  {
    "text": "Ras car that you can drive with your own",
    "start": "615160",
    "end": "617120"
  },
  {
    "text": "machine learning code now that's a",
    "start": "617120",
    "end": "618720"
  },
  {
    "start": "618000",
    "end": "633000"
  },
  {
    "text": "pretty amazing way to get people to use",
    "start": "618720",
    "end": "620360"
  },
  {
    "text": "your Cloud platform but let's change",
    "start": "620360",
    "end": "622240"
  },
  {
    "text": "direction and look at a few other",
    "start": "622240",
    "end": "623880"
  },
  {
    "text": "essential tools that are used by a wide",
    "start": "623880",
    "end": "625959"
  },
  {
    "text": "variety of Developers for security we",
    "start": "625959",
    "end": "628120"
  },
  {
    "text": "have IM where you can can create rules",
    "start": "628120",
    "end": "630240"
  },
  {
    "text": "and determine who has access to what on",
    "start": "630240",
    "end": "632200"
  },
  {
    "text": "your AWS account if you're building a",
    "start": "632200",
    "end": "634399"
  },
  {
    "start": "633000",
    "end": "645000"
  },
  {
    "text": "web or mobile app where users can log",
    "start": "634399",
    "end": "636279"
  },
  {
    "text": "into an account Cognito is a tool that",
    "start": "636279",
    "end": "638639"
  },
  {
    "text": "enables them to log in with a variety of",
    "start": "638639",
    "end": "640720"
  },
  {
    "text": "different authentication methods and",
    "start": "640720",
    "end": "642240"
  },
  {
    "text": "manages the user sessions for you then",
    "start": "642240",
    "end": "644519"
  },
  {
    "text": "once you have a few users logged into",
    "start": "644519",
    "end": "646200"
  },
  {
    "start": "645000",
    "end": "652000"
  },
  {
    "text": "your app you may want to send them push",
    "start": "646200",
    "end": "647920"
  },
  {
    "text": "notifications SNS is a tool that can get",
    "start": "647920",
    "end": "650399"
  },
  {
    "text": "that job done or maybe you want to send",
    "start": "650399",
    "end": "652240"
  },
  {
    "start": "652000",
    "end": "656000"
  },
  {
    "text": "emails to your users SES is the tool for",
    "start": "652240",
    "end": "654839"
  },
  {
    "text": "that now that you know about all these",
    "start": "654839",
    "end": "656160"
  },
  {
    "start": "656000",
    "end": "668000"
  },
  {
    "text": "tools you're going to want an organized",
    "start": "656160",
    "end": "657880"
  },
  {
    "text": "way to provision them cloud formation is",
    "start": "657880",
    "end": "660079"
  },
  {
    "text": "a way to create templates based on your",
    "start": "660079",
    "end": "662279"
  },
  {
    "text": "infrastructure in yaml or Json allowing",
    "start": "662279",
    "end": "664959"
  },
  {
    "text": "you to enable hundreds of different",
    "start": "664959",
    "end": "666399"
  },
  {
    "text": "services with the single click of a",
    "start": "666399",
    "end": "668000"
  },
  {
    "start": "668000",
    "end": "680000"
  },
  {
    "text": "button from there you'll likely want to",
    "start": "668000",
    "end": "669639"
  },
  {
    "text": "interact with those services from a",
    "start": "669639",
    "end": "671040"
  },
  {
    "text": "front-end application like iOS Android",
    "start": "671040",
    "end": "673480"
  },
  {
    "text": "or the web amplify provides sdks that",
    "start": "673480",
    "end": "675920"
  },
  {
    "text": "can connect to your infrastructure from",
    "start": "675920",
    "end": "677600"
  },
  {
    "text": "JavaScript Frameworks and other",
    "start": "677600",
    "end": "679160"
  },
  {
    "text": "front-end applications now the final",
    "start": "679160",
    "end": "681120"
  },
  {
    "start": "680000",
    "end": "706000"
  },
  {
    "text": "thing to remember is that all of this is",
    "start": "681120",
    "end": "682760"
  },
  {
    "text": "going to cost you a ton of money which",
    "start": "682760",
    "end": "684399"
  },
  {
    "text": "goes directly to getting Jeff's rocket",
    "start": "684399",
    "end": "686320"
  },
  {
    "text": "up so make sure to use AWS cost Explorer",
    "start": "686320",
    "end": "689000"
  },
  {
    "text": "and budgets if you don't want to pay for",
    "start": "689000",
    "end": "690680"
  },
  {
    "text": "these big bul jeene Rockets that's the",
    "start": "690680",
    "end": "692519"
  },
  {
    "text": "end of the video it took a ton of work",
    "start": "692519",
    "end": "694560"
  },
  {
    "text": "so please like And subscribe to support",
    "start": "694560",
    "end": "696320"
  },
  {
    "text": "the channel or become a prom member at",
    "start": "696320",
    "end": "698120"
  },
  {
    "text": "fireship iio to get access to more",
    "start": "698120",
    "end": "700079"
  },
  {
    "text": "advanced content about building apps in",
    "start": "700079",
    "end": "701959"
  },
  {
    "text": "the cloud thanks for watching and I will",
    "start": "701959",
    "end": "703760"
  },
  {
    "text": "see you in the next one",
    "start": "703760",
    "end": "707240"
  }
]