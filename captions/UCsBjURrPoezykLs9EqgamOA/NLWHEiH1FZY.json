[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "in this episode we're going to create",
    "start": "520",
    "end": "2159"
  },
  {
    "text": "custom usernames for Firebase users then",
    "start": "2159",
    "end": "5520"
  },
  {
    "text": "validate the usernames asynchronously",
    "start": "5520",
    "end": "7640"
  },
  {
    "text": "using angular",
    "start": "7640",
    "end": "8960"
  },
  {
    "text": "4 users will first authenticate with",
    "start": "8960",
    "end": "11679"
  },
  {
    "text": "ooth then they'll be directed to a",
    "start": "11679",
    "end": "13799"
  },
  {
    "text": "username form and after each key press",
    "start": "13799",
    "end": "16680"
  },
  {
    "text": "the username will be updated based on",
    "start": "16680",
    "end": "19199"
  },
  {
    "text": "whether or not it's available in the",
    "start": "19199",
    "end": "21600"
  },
  {
    "start": "21000",
    "end": "48000"
  },
  {
    "text": "database the first step is to model the",
    "start": "21600",
    "end": "24119"
  },
  {
    "text": "data first we have a user's collection",
    "start": "24119",
    "end": "27119"
  },
  {
    "text": "that saves just basic information about",
    "start": "27119",
    "end": "29080"
  },
  {
    "text": "the user that we want to display",
    "start": "29080",
    "end": "30560"
  },
  {
    "text": "throughout the app then we have a",
    "start": "30560",
    "end": "32480"
  },
  {
    "text": "separate collection of just usernames",
    "start": "32480",
    "end": "35200"
  },
  {
    "text": "where the username itself is the key and",
    "start": "35200",
    "end": "37840"
  },
  {
    "text": "the value is the associated user ID this",
    "start": "37840",
    "end": "40920"
  },
  {
    "text": "allows us to make checks for username",
    "start": "40920",
    "end": "42760"
  },
  {
    "text": "availability much more quickly than we",
    "start": "42760",
    "end": "44719"
  },
  {
    "text": "could if we query the entire list of",
    "start": "44719",
    "end": "46900"
  },
  {
    "text": "[Music]",
    "start": "46900",
    "end": "48360"
  },
  {
    "text": "users now we can start building the off",
    "start": "48360",
    "end": "51079"
  },
  {
    "text": "service we're going to import the",
    "start": "51079",
    "end": "53359"
  },
  {
    "text": "angular Fire 2 package both the database",
    "start": "53359",
    "end": "55920"
  },
  {
    "text": "and the off",
    "start": "55920",
    "end": "57519"
  },
  {
    "text": "module we also import the RX xjs switch",
    "start": "57519",
    "end": "60800"
  },
  {
    "text": "map operator which we'll use to avoid",
    "start": "60800",
    "end": "63079"
  },
  {
    "text": "nested subscriptions when we get the",
    "start": "63079",
    "end": "64720"
  },
  {
    "text": "user",
    "start": "64720",
    "end": "67080"
  },
  {
    "text": "data I'm also creating a dedicated user",
    "start": "67400",
    "end": "70680"
  },
  {
    "text": "class to hold the user data in this case",
    "start": "70680",
    "end": "73240"
  },
  {
    "text": "it's just going to take a username and a",
    "start": "73240",
    "end": "75200"
  },
  {
    "text": "user ID and as the Constructor it'll",
    "start": "75200",
    "end": "77920"
  },
  {
    "text": "take the Firebase off",
    "start": "77920",
    "end": "81240"
  },
  {
    "text": "object in the service Constructor we",
    "start": "84040",
    "end": "86759"
  },
  {
    "text": "first wait for the O object to emit from",
    "start": "86759",
    "end": "89400"
  },
  {
    "text": "Firebase",
    "start": "89400",
    "end": "90520"
  },
  {
    "text": "and then we use that data to query the",
    "start": "90520",
    "end": "93240"
  },
  {
    "text": "database for the actual",
    "start": "93240",
    "end": "96520"
  },
  {
    "text": "username the first function is going to",
    "start": "103759",
    "end": "106000"
  },
  {
    "text": "allow the user to authenticate with",
    "start": "106000",
    "end": "107719"
  },
  {
    "text": "their Google account this codes directly",
    "start": "107719",
    "end": "110200"
  },
  {
    "text": "from the angular Fire 2",
    "start": "110200",
    "end": "112600"
  },
  {
    "text": "package to manage the username process",
    "start": "112600",
    "end": "115320"
  },
  {
    "text": "we start by creating a getter to see if",
    "start": "115320",
    "end": "117200"
  },
  {
    "text": "a username is defined or not",
    "start": "117200",
    "end": "120159"
  },
  {
    "text": "then we create a check username function",
    "start": "120159",
    "end": "122520"
  },
  {
    "text": "which will check the username collection",
    "start": "122520",
    "end": "124719"
  },
  {
    "text": "to see if that particular username is",
    "start": "124719",
    "end": "127479"
  },
  {
    "text": "defined lastly we create a function for",
    "start": "127479",
    "end": "130280"
  },
  {
    "text": "the user to select their username this",
    "start": "130280",
    "end": "132800"
  },
  {
    "text": "updates both the usern name's document",
    "start": "132800",
    "end": "135280"
  },
  {
    "text": "as well as the user specific user",
    "start": "135280",
    "end": "137599"
  },
  {
    "text": "document under their user",
    "start": "137599",
    "end": "140720"
  },
  {
    "text": "ID now we can start building the",
    "start": "141680",
    "end": "145760"
  },
  {
    "start": "142000",
    "end": "271000"
  },
  {
    "text": "component we start by injecting the off",
    "start": "147640",
    "end": "151200"
  },
  {
    "text": "service then we set one variable for the",
    "start": "151200",
    "end": "153800"
  },
  {
    "text": "username text which is what the user",
    "start": "153800",
    "end": "155640"
  },
  {
    "text": "enters into the form then we set a",
    "start": "155640",
    "end": "157720"
  },
  {
    "text": "separate variable for username available",
    "start": "157720",
    "end": "160599"
  },
  {
    "text": "which is a Boolean true or false whether",
    "start": "160599",
    "end": "162760"
  },
  {
    "text": "or not the username is",
    "start": "162760",
    "end": "164879"
  },
  {
    "text": "available first the user will sign in",
    "start": "164879",
    "end": "167080"
  },
  {
    "text": "with Google which will populate their",
    "start": "167080",
    "end": "168760"
  },
  {
    "text": "user ID and then we'll display the form",
    "start": "168760",
    "end": "171560"
  },
  {
    "text": "to fill out the username the check",
    "start": "171560",
    "end": "173920"
  },
  {
    "text": "username function will send the actual",
    "start": "173920",
    "end": "175879"
  },
  {
    "text": "request to the database to see if the",
    "start": "175879",
    "end": "177519"
  },
  {
    "text": "username is available",
    "start": "177519",
    "end": "179959"
  },
  {
    "text": "the return value is converted to a",
    "start": "179959",
    "end": "181560"
  },
  {
    "text": "Boolean then we set that to our username",
    "start": "181560",
    "end": "184120"
  },
  {
    "text": "available",
    "start": "184120",
    "end": "186040"
  },
  {
    "text": "variable then we'll create an event",
    "start": "186040",
    "end": "188239"
  },
  {
    "text": "handler to update the database when the",
    "start": "188239",
    "end": "190440"
  },
  {
    "text": "user selects a valid",
    "start": "190440",
    "end": "193599"
  },
  {
    "text": "username in the template we start with",
    "start": "193959",
    "end": "196599"
  },
  {
    "text": "the sign in with Google",
    "start": "196599",
    "end": "199720"
  },
  {
    "text": "button then once we have a current user",
    "start": "204400",
    "end": "206920"
  },
  {
    "text": "and if their username is undefined then",
    "start": "206920",
    "end": "209480"
  },
  {
    "text": "we display the username",
    "start": "209480",
    "end": "212280"
  },
  {
    "text": "form the input itself uses NG model to",
    "start": "212280",
    "end": "216040"
  },
  {
    "text": "set the username text variable and the",
    "start": "216040",
    "end": "218040"
  },
  {
    "text": "component",
    "start": "218040",
    "end": "220480"
  },
  {
    "text": "typescript then we bind the key up event",
    "start": "221400",
    "end": "224040"
  },
  {
    "text": "to the check username",
    "start": "224040",
    "end": "226599"
  },
  {
    "text": "function now we can display a couple",
    "start": "226599",
    "end": "228720"
  },
  {
    "text": "messages conditionally based on whether",
    "start": "228720",
    "end": "230640"
  },
  {
    "text": "or not that username is",
    "start": "230640",
    "end": "232840"
  },
  {
    "text": "available we can also use the username",
    "start": "232840",
    "end": "235079"
  },
  {
    "text": "available Boolean to disable the button",
    "start": "235079",
    "end": "237879"
  },
  {
    "text": "if that username is already taken",
    "start": "237879",
    "end": "240480"
  },
  {
    "text": "[Music]",
    "start": "240480",
    "end": "250879"
  },
  {
    "text": "so now we have a working username system",
    "start": "258160",
    "end": "260639"
  },
  {
    "text": "and we can see that it updates the",
    "start": "260639",
    "end": "261959"
  },
  {
    "text": "database at both locations when the user",
    "start": "261959",
    "end": "264720"
  },
  {
    "text": "clicks the button",
    "start": "264720",
    "end": "267440"
  },
  {
    "text": "[Music]",
    "start": "267440",
    "end": "271880"
  },
  {
    "start": "271000",
    "end": "339000"
  },
  {
    "text": "our final step is to enforce this",
    "start": "271880",
    "end": "273840"
  },
  {
    "text": "validation on the back end with Firebase",
    "start": "273840",
    "end": "276000"
  },
  {
    "text": "database",
    "start": "276000",
    "end": "278320"
  },
  {
    "text": "rules we do this by setting a validation",
    "start": "278320",
    "end": "280840"
  },
  {
    "text": "Rule and traversing the database calling",
    "start": "280840",
    "end": "283320"
  },
  {
    "text": "root child usernames and then seeing if",
    "start": "283320",
    "end": "286360"
  },
  {
    "text": "the new data the user is trying to enter",
    "start": "286360",
    "end": "288520"
  },
  {
    "text": "already exists in the database if it",
    "start": "288520",
    "end": "290880"
  },
  {
    "text": "does the rule will evaluate to false and",
    "start": "290880",
    "end": "293400"
  },
  {
    "text": "prevent the operation from taking place",
    "start": "293400",
    "end": "297880"
  },
  {
    "text": "[Music]",
    "start": "301610",
    "end": "307060"
  },
  {
    "text": "that's it for this episode if you found",
    "start": "310400",
    "end": "312240"
  },
  {
    "text": "the video helpful please like And",
    "start": "312240",
    "end": "313680"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "313680",
    "end": "315560"
  },
  {
    "text": "channel consider becoming a pro",
    "start": "315560",
    "end": "317240"
  },
  {
    "text": "subscriber at angular firebase.com for",
    "start": "317240",
    "end": "320560"
  },
  {
    "text": "just a few bucks a month you'll get",
    "start": "320560",
    "end": "321759"
  },
  {
    "text": "access to exclusive content as well as",
    "start": "321759",
    "end": "324120"
  },
  {
    "text": "free one-on-one project Consulting",
    "start": "324120",
    "end": "326800"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "326800",
    "end": "328520"
  },
  {
    "text": "next time",
    "start": "328520",
    "end": "331638"
  },
  {
    "text": "audio jump",
    "start": "332039",
    "end": "335479"
  }
]