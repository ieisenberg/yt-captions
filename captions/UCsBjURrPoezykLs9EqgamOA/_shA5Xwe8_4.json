[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "redux a single source of truth for all",
    "start": "160",
    "end": "2639"
  },
  {
    "text": "the data in your javascript application",
    "start": "2639",
    "end": "4880"
  },
  {
    "text": "modern web applications are represented",
    "start": "4880",
    "end": "7040"
  },
  {
    "text": "as a complex tree of components",
    "start": "7040",
    "end": "9040"
  },
  {
    "text": "components that constantly produce and",
    "start": "9040",
    "end": "11040"
  },
  {
    "text": "share data called state and when state",
    "start": "11040",
    "end": "12960"
  },
  {
    "text": "is decentralized it can become difficult",
    "start": "12960",
    "end": "14799"
  },
  {
    "text": "to understand and test redux is both a",
    "start": "14799",
    "end": "17279"
  },
  {
    "start": "17000",
    "end": "60000"
  },
  {
    "text": "pattern and library that helps",
    "start": "17279",
    "end": "18960"
  },
  {
    "text": "developers implement complex state",
    "start": "18960",
    "end": "20720"
  },
  {
    "text": "management requirements at scale it was",
    "start": "20720",
    "end": "22640"
  },
  {
    "text": "created by dan abramov and andrew clark",
    "start": "22640",
    "end": "25119"
  },
  {
    "text": "at facebook and is one of the most loved",
    "start": "25119",
    "end": "27039"
  },
  {
    "text": "and hated libraries in the react",
    "start": "27039",
    "end": "28720"
  },
  {
    "text": "ecosystem it relies on a single",
    "start": "28720",
    "end": "30720"
  },
  {
    "text": "immutable object to store all of the",
    "start": "30720",
    "end": "32640"
  },
  {
    "text": "application state kind of like a",
    "start": "32640",
    "end": "34320"
  },
  {
    "text": "client-side database to change the state",
    "start": "34320",
    "end": "36399"
  },
  {
    "text": "like when a button is clicked an action",
    "start": "36399",
    "end": "38320"
  },
  {
    "text": "will be dispatched which has a name like",
    "start": "38320",
    "end": "40320"
  },
  {
    "text": "an event and a payload with the data",
    "start": "40320",
    "end": "42320"
  },
  {
    "text": "that it wants to change remember the",
    "start": "42320",
    "end": "43920"
  },
  {
    "text": "store is immutable so to change the",
    "start": "43920",
    "end": "45840"
  },
  {
    "text": "state of the application an entirely new",
    "start": "45840",
    "end": "47920"
  },
  {
    "text": "object is created by passing the current",
    "start": "47920",
    "end": "49920"
  },
  {
    "text": "state and the action payload into a",
    "start": "49920",
    "end": "51840"
  },
  {
    "text": "reducer function which returns a new",
    "start": "51840",
    "end": "53840"
  },
  {
    "text": "object with the entire application state",
    "start": "53840",
    "end": "56000"
  },
  {
    "text": "the end result is a one-way data flow",
    "start": "56000",
    "end": "58000"
  },
  {
    "text": "that is predictable and testable and it",
    "start": "58000",
    "end": "60079"
  },
  {
    "start": "60000",
    "end": "152000"
  },
  {
    "text": "also opens the door to awesome dev tools",
    "start": "60079",
    "end": "62160"
  },
  {
    "text": "that allow you to time travel through",
    "start": "62160",
    "end": "63680"
  },
  {
    "text": "your application's data but it comes at",
    "start": "63680",
    "end": "65680"
  },
  {
    "text": "a cost of additional boilerplate code",
    "start": "65680",
    "end": "67760"
  },
  {
    "text": "that might add too much complexity to a",
    "start": "67760",
    "end": "69520"
  },
  {
    "text": "smaller project to get started create a",
    "start": "69520",
    "end": "71520"
  },
  {
    "text": "react app with your favorite tool then",
    "start": "71520",
    "end": "73360"
  },
  {
    "text": "install the redux toolkit first use",
    "start": "73360",
    "end": "75600"
  },
  {
    "text": "configure store to set up the global",
    "start": "75600",
    "end": "77680"
  },
  {
    "text": "store object which will register any",
    "start": "77680",
    "end": "79520"
  },
  {
    "text": "reducers defined elsewhere in the code",
    "start": "79520",
    "end": "81439"
  },
  {
    "text": "then provider will make its data",
    "start": "81439",
    "end": "83040"
  },
  {
    "text": "accessible to the entire component tree",
    "start": "83040",
    "end": "85119"
  },
  {
    "text": "next create a slice like pizza to",
    "start": "85119",
    "end": "87520"
  },
  {
    "text": "represent some data in the store it",
    "start": "87520",
    "end": "89280"
  },
  {
    "text": "should have a unique name and initial",
    "start": "89280",
    "end": "90960"
  },
  {
    "text": "state but most importantly it contains a",
    "start": "90960",
    "end": "93280"
  },
  {
    "text": "collection of reducers which are",
    "start": "93280",
    "end": "94960"
  },
  {
    "text": "functions that take the old state and an",
    "start": "94960",
    "end": "97200"
  },
  {
    "text": "action then define the logic required to",
    "start": "97200",
    "end": "99520"
  },
  {
    "text": "change the state redux toolkit will",
    "start": "99520",
    "end": "101439"
  },
  {
    "text": "automatically generate actions that",
    "start": "101439",
    "end": "103200"
  },
  {
    "text": "correspond to the names of these reducer",
    "start": "103200",
    "end": "105280"
  },
  {
    "text": "functions we can export them then put",
    "start": "105280",
    "end": "107200"
  },
  {
    "text": "them to use in an actual ui component",
    "start": "107200",
    "end": "109600"
  },
  {
    "text": "the beauty of redux is that we can",
    "start": "109600",
    "end": "111119"
  },
  {
    "text": "select data anywhere in the application",
    "start": "111119",
    "end": "113119"
  },
  {
    "text": "without the need for context or prop",
    "start": "113119",
    "end": "115200"
  },
  {
    "text": "drilling instead we can grab any",
    "start": "115200",
    "end": "117040"
  },
  {
    "text": "reactive value or slice in the store",
    "start": "117040",
    "end": "119280"
  },
  {
    "text": "with the use selector hook now to change",
    "start": "119280",
    "end": "121439"
  },
  {
    "text": "the application's data an action needs",
    "start": "121439",
    "end": "123439"
  },
  {
    "text": "to be dispatched to the store that can",
    "start": "123439",
    "end": "125280"
  },
  {
    "text": "be accomplished with the use dispatch",
    "start": "125280",
    "end": "127040"
  },
  {
    "text": "hook which might send an action name and",
    "start": "127040",
    "end": "129119"
  },
  {
    "text": "data payload on a normal browser event",
    "start": "129119",
    "end": "131360"
  },
  {
    "text": "like a button click now serve the",
    "start": "131360",
    "end": "133040"
  },
  {
    "text": "application and install the redux",
    "start": "133040",
    "end": "134879"
  },
  {
    "text": "devtools browser extension unlike a",
    "start": "134879",
    "end": "136959"
  },
  {
    "text": "normal project you're able to inspect",
    "start": "136959",
    "end": "138879"
  },
  {
    "text": "and debug the entire timeline of actions",
    "start": "138879",
    "end": "141200"
  },
  {
    "text": "and state changes in your application",
    "start": "141200",
    "end": "143040"
  },
  {
    "text": "this has been redux in 100 seconds",
    "start": "143040",
    "end": "145280"
  },
  {
    "text": "upgrade to fireship pro if you want to",
    "start": "145280",
    "end": "146959"
  },
  {
    "text": "learn all kinds of other react concepts",
    "start": "146959",
    "end": "148720"
  },
  {
    "text": "in a format like this thanks for",
    "start": "148720",
    "end": "150239"
  },
  {
    "text": "watching and i will see you in the next",
    "start": "150239",
    "end": "152239"
  },
  {
    "text": "one",
    "start": "152239",
    "end": "154800"
  }
]