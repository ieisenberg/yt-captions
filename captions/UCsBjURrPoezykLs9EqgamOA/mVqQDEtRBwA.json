[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "animation is often the x-factor that",
    "start": "199",
    "end": "2909"
  },
  {
    "text": "separates remarkable apps from ordinary",
    "start": "2909",
    "end": "5069"
  },
  {
    "text": "apps in this episode I'm going to cover",
    "start": "5069",
    "end": "7620"
  },
  {
    "text": "five different concepts related to",
    "start": "7620",
    "end": "9450"
  },
  {
    "text": "angular animations including a few new",
    "start": "9450",
    "end": "11580"
  },
  {
    "text": "concepts that were introduced in angular",
    "start": "11580",
    "end": "13620"
  },
  {
    "text": "4.2 angular animations are built on the",
    "start": "13620",
    "end": "17369"
  },
  {
    "text": "web animations API which is very similar",
    "start": "17369",
    "end": "20130"
  },
  {
    "text": "to css3 animations if you're not",
    "start": "20130",
    "end": "23490"
  },
  {
    "text": "comfortable with animation at all I",
    "start": "23490",
    "end": "25109"
  },
  {
    "text": "recommend doing some practice with css3",
    "start": "25109",
    "end": "27150"
  },
  {
    "text": "first and then you'll be able to make",
    "start": "27150",
    "end": "28980"
  },
  {
    "text": "the most out of angular's animation",
    "start": "28980",
    "end": "30750"
  },
  {
    "text": "module the first step to get started is",
    "start": "30750",
    "end": "34079"
  },
  {
    "text": "to import the browser animation module",
    "start": "34079",
    "end": "36780"
  },
  {
    "text": "into whatever module you plan on using",
    "start": "36780",
    "end": "38610"
  },
  {
    "text": "animations in this first example I'm",
    "start": "38610",
    "end": "41399"
  },
  {
    "text": "going to create a fade-in fade-out",
    "start": "41399",
    "end": "42719"
  },
  {
    "start": "42000",
    "end": "42000"
  },
  {
    "text": "animation that will show some content in",
    "start": "42719",
    "end": "45090"
  },
  {
    "text": "a popover when a button is clicked we",
    "start": "45090",
    "end": "47219"
  },
  {
    "text": "import the methods we need from the",
    "start": "47219",
    "end": "49260"
  },
  {
    "text": "animation module and then we'll create a",
    "start": "49260",
    "end": "51360"
  },
  {
    "text": "boolean variable show that will",
    "start": "51360",
    "end": "53550"
  },
  {
    "text": "determine the visibility of the popover",
    "start": "53550",
    "end": "55530"
  },
  {
    "text": "I also create a getter called state name",
    "start": "55530",
    "end": "58350"
  },
  {
    "text": "which will return the boolean variable",
    "start": "58350",
    "end": "60030"
  },
  {
    "text": "as a string either show or hide which we",
    "start": "60030",
    "end": "62280"
  },
  {
    "text": "need when defining the animation itself",
    "start": "62280",
    "end": "63840"
  },
  {
    "text": "in the HTML we use animations by",
    "start": "63840",
    "end": "67619"
  },
  {
    "text": "prefixing the animation name with the @",
    "start": "67619",
    "end": "70049"
  },
  {
    "text": "symbol and then pass at the current",
    "start": "70049",
    "end": "71970"
  },
  {
    "text": "state of whatever variable we're going",
    "start": "71970",
    "end": "74070"
  },
  {
    "text": "to animate in this case the only",
    "start": "74070",
    "end": "76020"
  },
  {
    "text": "possible values will be show or hide and",
    "start": "76020",
    "end": "78450"
  },
  {
    "text": "then we add a button for the user to",
    "start": "78450",
    "end": "80759"
  },
  {
    "text": "toggle this variable the end result",
    "start": "80759",
    "end": "84180"
  },
  {
    "text": "should look something like this it's",
    "start": "84180",
    "end": "85409"
  },
  {
    "text": "just a simple div that fades in and",
    "start": "85409",
    "end": "87630"
  },
  {
    "text": "fades out when that button is clicked",
    "start": "87630",
    "end": "89420"
  },
  {
    "text": "every component has an animations",
    "start": "89420",
    "end": "91890"
  },
  {
    "text": "property which accepts an array first we",
    "start": "91890",
    "end": "94799"
  },
  {
    "text": "pass it a trigger which corresponds to",
    "start": "94799",
    "end": "96659"
  },
  {
    "text": "the name with the @ symbol in the HTML",
    "start": "96659",
    "end": "99270"
  },
  {
    "text": "then we define how each state should",
    "start": "99270",
    "end": "101610"
  },
  {
    "text": "look once the animation is complete when",
    "start": "101610",
    "end": "103799"
  },
  {
    "text": "that popover is being shown the opacity",
    "start": "103799",
    "end": "105869"
  },
  {
    "text": "is 1 when it's hidden the opacity of 0",
    "start": "105869",
    "end": "108479"
  },
  {
    "text": "to actually make this animate we need to",
    "start": "108479",
    "end": "111329"
  },
  {
    "text": "define a transition which sets the time",
    "start": "111329",
    "end": "113579"
  },
  {
    "text": "parameter for the animation to occur in",
    "start": "113579",
    "end": "115950"
  },
  {
    "text": "this case when we transition from show",
    "start": "115950",
    "end": "118049"
  },
  {
    "text": "to hide it will animate in 600",
    "start": "118049",
    "end": "119880"
  },
  {
    "text": "milliseconds and ease out and then when",
    "start": "119880",
    "end": "122219"
  },
  {
    "text": "we transition from hide to show it will",
    "start": "122219",
    "end": "124140"
  },
  {
    "text": "transition in a thousand milliseconds or",
    "start": "124140",
    "end": "126210"
  },
  {
    "text": "one second with an ease in and the end",
    "start": "126210",
    "end": "129390"
  },
  {
    "text": "result is that simple fade in/fade out",
    "start": "129390",
    "end": "131459"
  },
  {
    "text": "animation",
    "start": "131459",
    "end": "133360"
  },
  {
    "text": "now we're going to build an animation",
    "start": "133360",
    "end": "135260"
  },
  {
    "text": "that can handle multiple different",
    "start": "135260",
    "end": "136670"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "states here we have a photo gallery",
    "start": "136670",
    "end": "138980"
  },
  {
    "text": "component and we're going to represent",
    "start": "138980",
    "end": "140990"
  },
  {
    "text": "its state with the position variable",
    "start": "140990",
    "end": "143480"
  },
  {
    "text": "then we'll add a few buttons for the",
    "start": "143480",
    "end": "145430"
  },
  {
    "text": "user to change the state on the",
    "start": "145430",
    "end": "147050"
  },
  {
    "text": "front-end then we'll apply the photo",
    "start": "147050",
    "end": "149150"
  },
  {
    "text": "State trigger to the image itself the",
    "start": "149150",
    "end": "152630"
  },
  {
    "text": "goal is to have the user click these",
    "start": "152630",
    "end": "154130"
  },
  {
    "text": "buttons and have the animation go from",
    "start": "154130",
    "end": "156410"
  },
  {
    "text": "state to state seamlessly so again we",
    "start": "156410",
    "end": "160070"
  },
  {
    "text": "start by defining the trigger and then",
    "start": "160070",
    "end": "162650"
  },
  {
    "text": "we have three different states that we",
    "start": "162650",
    "end": "164180"
  },
  {
    "text": "need to define the move state will move",
    "start": "164180",
    "end": "167570"
  },
  {
    "text": "the image across the screen we do this",
    "start": "167570",
    "end": "169430"
  },
  {
    "text": "by using the transform and translate X",
    "start": "169430",
    "end": "172820"
  },
  {
    "text": "which means translate on the x axis if",
    "start": "172820",
    "end": "175130"
  },
  {
    "text": "you've used css3 animations this should",
    "start": "175130",
    "end": "178010"
  },
  {
    "text": "look very familiar to you",
    "start": "178010",
    "end": "179360"
  },
  {
    "text": "you can adjust the position using both a",
    "start": "179360",
    "end": "181580"
  },
  {
    "text": "percentage or pixel value to enlarge the",
    "start": "181580",
    "end": "185450"
  },
  {
    "text": "image we'll use the transform scale",
    "start": "185450",
    "end": "187730"
  },
  {
    "text": "which will increase the size the image",
    "start": "187730",
    "end": "189920"
  },
  {
    "text": "by a factor of 1.5 to spin the image",
    "start": "189920",
    "end": "193820"
  },
  {
    "text": "we'll use the transform rotate and this",
    "start": "193820",
    "end": "196760"
  },
  {
    "text": "takes degrees as arguments and operates",
    "start": "196760",
    "end": "199310"
  },
  {
    "text": "on all three axes so now we have four",
    "start": "199310",
    "end": "202520"
  },
  {
    "text": "possible States including the default",
    "start": "202520",
    "end": "204350"
  },
  {
    "text": "state and that gives us 16 possible",
    "start": "204350",
    "end": "206720"
  },
  {
    "text": "combinations to animate it'd be very",
    "start": "206720",
    "end": "209390"
  },
  {
    "text": "cumbersome to define each transition",
    "start": "209390",
    "end": "211460"
  },
  {
    "text": "individually but angular offers a",
    "start": "211460",
    "end": "213710"
  },
  {
    "text": "wild-card option which we can use to",
    "start": "213710",
    "end": "216260"
  },
  {
    "text": "apply the transition to every different",
    "start": "216260",
    "end": "218660"
  },
  {
    "text": "possible state so here we apply the",
    "start": "218660",
    "end": "221120"
  },
  {
    "text": "wild-card is a 500 millisecond ease back",
    "start": "221120",
    "end": "224210"
  },
  {
    "text": "in the app we can now see that each of",
    "start": "224210",
    "end": "225590"
  },
  {
    "text": "these 16 combinations will use the 500",
    "start": "225590",
    "end": "228170"
  },
  {
    "text": "millisecond transition what if you",
    "start": "228170",
    "end": "232550"
  },
  {
    "text": "wanted to control the intermediate steps",
    "start": "232550",
    "end": "234500"
  },
  {
    "text": "in an animation you can do this with",
    "start": "234500",
    "end": "236600"
  },
  {
    "text": "keyframes",
    "start": "236600",
    "end": "237760"
  },
  {
    "text": "first make sure you import the keyframe",
    "start": "237760",
    "end": "240410"
  },
  {
    "text": "this method into your component then",
    "start": "240410",
    "end": "243230"
  },
  {
    "text": "we'll use the keyframes as an argument",
    "start": "243230",
    "end": "245360"
  },
  {
    "text": "to the animate method inside the",
    "start": "245360",
    "end": "247460"
  },
  {
    "text": "transition keyframes represent points",
    "start": "247460",
    "end": "250550"
  },
  {
    "text": "and time relative to the length of the",
    "start": "250550",
    "end": "252830"
  },
  {
    "text": "animation itself so in this example we",
    "start": "252830",
    "end": "255140"
  },
  {
    "text": "have a $2,000 second transition so an",
    "start": "255140",
    "end": "257690"
  },
  {
    "text": "offset of 0.33 would represent",
    "start": "257690",
    "end": "259670"
  },
  {
    "text": "approximately 660 milliseconds in this",
    "start": "259670",
    "end": "263390"
  },
  {
    "text": "example we're just translating and",
    "start": "263390",
    "end": "265160"
  },
  {
    "text": "rotating",
    "start": "265160",
    "end": "265760"
  },
  {
    "text": "the image all over the screen just to",
    "start": "265760",
    "end": "267350"
  },
  {
    "text": "demonstrate how keyframes can create",
    "start": "267350",
    "end": "269390"
  },
  {
    "text": "nonlinear animations back in the app we",
    "start": "269390",
    "end": "272780"
  },
  {
    "text": "can see the image moves to the right and",
    "start": "272780",
    "end": "274370"
  },
  {
    "text": "then up before reaching its final",
    "start": "274370",
    "end": "276170"
  },
  {
    "text": "resting state another cool feature about",
    "start": "276170",
    "end": "280880"
  },
  {
    "text": "angular animations is the ability to run",
    "start": "280880",
    "end": "282890"
  },
  {
    "start": "281000",
    "end": "281000"
  },
  {
    "text": "callbacks when an animation is either",
    "start": "282890",
    "end": "284720"
  },
  {
    "text": "started or finished in this example",
    "start": "284720",
    "end": "287180"
  },
  {
    "text": "we're just going to console.log the",
    "start": "287180",
    "end": "288590"
  },
  {
    "text": "animation and its current state",
    "start": "288590",
    "end": "290680"
  },
  {
    "text": "animation callbacks are really similar",
    "start": "290680",
    "end": "292700"
  },
  {
    "text": "to button clicks or any other user of",
    "start": "292700",
    "end": "295070"
  },
  {
    "text": "that we simply called a photo state dot",
    "start": "295070",
    "end": "298250"
  },
  {
    "text": "start and then fire whatever function we",
    "start": "298250",
    "end": "300770"
  },
  {
    "text": "want to fire then back in the type",
    "start": "300770",
    "end": "303260"
  },
  {
    "text": "script we just create a function that",
    "start": "303260",
    "end": "304730"
  },
  {
    "text": "will handle the console login for us",
    "start": "304730",
    "end": "307000"
  },
  {
    "text": "this is especially useful if you want to",
    "start": "307000",
    "end": "309590"
  },
  {
    "text": "run a sequence of animations in a very",
    "start": "309590",
    "end": "311780"
  },
  {
    "text": "choreographed kind of way the last",
    "start": "311780",
    "end": "315260"
  },
  {
    "text": "animation feature I want to talk about",
    "start": "315260",
    "end": "316580"
  },
  {
    "start": "316000",
    "end": "316000"
  },
  {
    "text": "is lists animations which uses two",
    "start": "316580",
    "end": "319190"
  },
  {
    "text": "features that are new and angular 4.2",
    "start": "319190",
    "end": "321380"
  },
  {
    "text": "the new query method allows you to",
    "start": "321380",
    "end": "324020"
  },
  {
    "text": "select elements that are nested within",
    "start": "324020",
    "end": "325730"
  },
  {
    "text": "an animation based on their HTML tag in",
    "start": "325730",
    "end": "328220"
  },
  {
    "text": "this case we'll use it to query all the",
    "start": "328220",
    "end": "330350"
  },
  {
    "text": "images nested within an animation",
    "start": "330350",
    "end": "332180"
  },
  {
    "text": "context",
    "start": "332180",
    "end": "333080"
  },
  {
    "text": "once we've queried those images we can",
    "start": "333080",
    "end": "334880"
  },
  {
    "text": "use stagger to create a delay between",
    "start": "334880",
    "end": "336740"
  },
  {
    "text": "each animation of each image creating a",
    "start": "336740",
    "end": "339320"
  },
  {
    "text": "shutter like effect we start by defining",
    "start": "339320",
    "end": "342560"
  },
  {
    "text": "the trigger and then the transition",
    "start": "342560",
    "end": "345050"
  },
  {
    "text": "we'll just use the wild-card then we can",
    "start": "345050",
    "end": "347870"
  },
  {
    "text": "query every image that is nested within",
    "start": "347870",
    "end": "349640"
  },
  {
    "text": "that trigger and first we'll get the",
    "start": "349640",
    "end": "352460"
  },
  {
    "text": "images and translate them off the screen",
    "start": "352460",
    "end": "355090"
  },
  {
    "text": "then we add an animation within the",
    "start": "355090",
    "end": "357650"
  },
  {
    "text": "context of stagger which will stagger",
    "start": "357650",
    "end": "359630"
  },
  {
    "text": "each item in the collection by 600",
    "start": "359630",
    "end": "361700"
  },
  {
    "text": "milliseconds in most cases you would",
    "start": "361700",
    "end": "364250"
  },
  {
    "text": "make the stagger delay a little bit",
    "start": "364250",
    "end": "365690"
  },
  {
    "text": "faster but I'll keep it slow for this",
    "start": "365690",
    "end": "367790"
  },
  {
    "text": "example in the template we have the",
    "start": "367790",
    "end": "370100"
  },
  {
    "text": "animation trigger to it div passing the",
    "start": "370100",
    "end": "372410"
  },
  {
    "text": "length of the collection to it and then",
    "start": "372410",
    "end": "374840"
  },
  {
    "text": "we loop over a collection of photos",
    "start": "374840",
    "end": "376880"
  },
  {
    "text": "because these images are nested within",
    "start": "376880",
    "end": "379250"
  },
  {
    "text": "the photos animation the query selector",
    "start": "379250",
    "end": "382130"
  },
  {
    "text": "will automatically grab all the images",
    "start": "382130",
    "end": "383990"
  },
  {
    "text": "and put them into an array",
    "start": "383990",
    "end": "385990"
  },
  {
    "text": "back in the app we see that each image",
    "start": "385990",
    "end": "388030"
  },
  {
    "text": "slicing the screen one after the other",
    "start": "388030",
    "end": "391139"
  },
  {
    "text": "that's it for angular animation basics",
    "start": "391139",
    "end": "394150"
  },
  {
    "text": "if this video helped you please like and",
    "start": "394150",
    "end": "396250"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "396250",
    "end": "398110"
  },
  {
    "text": "channel consider becoming a pro member",
    "start": "398110",
    "end": "399910"
  },
  {
    "text": "at angular firebase comm you'll get",
    "start": "399910",
    "end": "402520"
  },
  {
    "text": "access to a free copy of my book as well",
    "start": "402520",
    "end": "405039"
  },
  {
    "text": "as free one on one project consulting",
    "start": "405039",
    "end": "407169"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "407169",
    "end": "409570"
  },
  {
    "text": "soon",
    "start": "409570",
    "end": "411750"
  },
  {
    "text": "[Music]",
    "start": "413330",
    "end": "418358"
  }
]