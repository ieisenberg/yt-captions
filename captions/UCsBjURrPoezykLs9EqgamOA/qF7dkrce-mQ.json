[
  {
    "text": "bitcoin a peer-to-peer electronic cash",
    "start": "719",
    "end": "3360"
  },
  {
    "text": "system",
    "start": "3360",
    "end": "3919"
  },
  {
    "text": "first described in a 2008 white paper",
    "start": "3919",
    "end": "6399"
  },
  {
    "text": "authored by the mysterious satoshi",
    "start": "6399",
    "end": "8240"
  },
  {
    "text": "nakamoto the modern financial system",
    "start": "8240",
    "end": "10400"
  },
  {
    "text": "relies on our trust of big centralized",
    "start": "10400",
    "end": "12480"
  },
  {
    "text": "banks to hold our fiat currencies",
    "start": "12480",
    "end": "14400"
  },
  {
    "text": "and execute transactions but trust is a",
    "start": "14400",
    "end": "16640"
  },
  {
    "text": "weakness that eventually requires",
    "start": "16640",
    "end": "18320"
  },
  {
    "text": "intervention by lawyers and government",
    "start": "18320",
    "end": "20560"
  },
  {
    "text": "bitcoin allows two parties to make",
    "start": "20560",
    "end": "22480"
  },
  {
    "text": "reliable transactions",
    "start": "22480",
    "end": "23920"
  },
  {
    "text": "based on cryptographic proof eliminating",
    "start": "23920",
    "end": "26000"
  },
  {
    "text": "the need for a trustee middleman",
    "start": "26000",
    "end": "27760"
  },
  {
    "text": "the optimists call it digital gold the",
    "start": "27760",
    "end": "29599"
  },
  {
    "text": "pessimists call it fool's gold",
    "start": "29599",
    "end": "31119"
  },
  {
    "text": "but in reality it's just software and",
    "start": "31119",
    "end": "33200"
  },
  {
    "text": "like all software its purpose is to",
    "start": "33200",
    "end": "35200"
  },
  {
    "text": "arrange ones and zeros in a meaningful",
    "start": "35200",
    "end": "37120"
  },
  {
    "text": "way",
    "start": "37120",
    "end": "37600"
  },
  {
    "text": "the protocol that makes it meaningful is",
    "start": "37600",
    "end": "39360"
  },
  {
    "text": "blockchain which allows two parties to",
    "start": "39360",
    "end": "41280"
  },
  {
    "text": "engage in transactions denominated in",
    "start": "41280",
    "end": "43360"
  },
  {
    "text": "bitcoins",
    "start": "43360",
    "end": "44000"
  },
  {
    "text": "or satoshi's and just like dollars and",
    "start": "44000",
    "end": "46160"
  },
  {
    "text": "cents they have value",
    "start": "46160",
    "end": "47520"
  },
  {
    "text": "because we believe they do from a",
    "start": "47520",
    "end": "49200"
  },
  {
    "text": "financial perspective the blockchain",
    "start": "49200",
    "end": "51280"
  },
  {
    "text": "is like a shared public ledger that",
    "start": "51280",
    "end": "53280"
  },
  {
    "text": "contains all transactions from all",
    "start": "53280",
    "end": "55280"
  },
  {
    "text": "bitcoin users",
    "start": "55280",
    "end": "56320"
  },
  {
    "text": "and is distributed and synchronized",
    "start": "56320",
    "end": "58079"
  },
  {
    "text": "around the world which eliminates the",
    "start": "58079",
    "end": "59680"
  },
  {
    "text": "need for a central authority to maintain",
    "start": "59680",
    "end": "61760"
  },
  {
    "text": "and validate it",
    "start": "61760",
    "end": "62640"
  },
  {
    "text": "from a technical perspective think of",
    "start": "62640",
    "end": "64320"
  },
  {
    "text": "the blockchain as a database",
    "start": "64320",
    "end": "66159"
  },
  {
    "text": "structured as a linked list where each",
    "start": "66159",
    "end": "68320"
  },
  {
    "text": "record or block",
    "start": "68320",
    "end": "69439"
  },
  {
    "text": "represents a group of transactions that",
    "start": "69439",
    "end": "71520"
  },
  {
    "text": "have been permanently committed to the",
    "start": "71520",
    "end": "73200"
  },
  {
    "text": "database",
    "start": "73200",
    "end": "73840"
  },
  {
    "text": "it works kind of like a git repo that",
    "start": "73840",
    "end": "75520"
  },
  {
    "text": "can never be rebased the important thing",
    "start": "75520",
    "end": "77680"
  },
  {
    "text": "is that each new block is",
    "start": "77680",
    "end": "79280"
  },
  {
    "text": "linked to the previous one in the",
    "start": "79280",
    "end": "80479"
  },
  {
    "text": "blockchain and its creation goes through",
    "start": "80479",
    "end": "82640"
  },
  {
    "text": "a very strict set of cryptographic rules",
    "start": "82640",
    "end": "84880"
  },
  {
    "text": "each user or wallet has a unique public",
    "start": "84880",
    "end": "87280"
  },
  {
    "text": "key for receiving money",
    "start": "87280",
    "end": "88640"
  },
  {
    "text": "kind of like a username and a unique",
    "start": "88640",
    "end": "90720"
  },
  {
    "text": "private key for spending money",
    "start": "90720",
    "end": "92479"
  },
  {
    "text": "kind of like a password but before you",
    "start": "92479",
    "end": "94720"
  },
  {
    "text": "can spend money you'll need to prove",
    "start": "94720",
    "end": "96240"
  },
  {
    "text": "that you're the owner of a public key",
    "start": "96240",
    "end": "98000"
  },
  {
    "text": "that money has been sent to in the past",
    "start": "98000",
    "end": "100079"
  },
  {
    "text": "each transaction contains a hash or",
    "start": "100079",
    "end": "102320"
  },
  {
    "text": "encrypted representation",
    "start": "102320",
    "end": "103759"
  },
  {
    "text": "of the previous transaction and the new",
    "start": "103759",
    "end": "105840"
  },
  {
    "text": "owner's public key",
    "start": "105840",
    "end": "106960"
  },
  {
    "text": "the hash is then signed with the",
    "start": "106960",
    "end": "108479"
  },
  {
    "text": "previous owner's private key",
    "start": "108479",
    "end": "110000"
  },
  {
    "text": "this makes it possible to validate the",
    "start": "110000",
    "end": "111759"
  },
  {
    "text": "chain of ownership without the need to",
    "start": "111759",
    "end": "113520"
  },
  {
    "text": "expose",
    "start": "113520",
    "end": "114000"
  },
  {
    "text": "the private key and the signature makes",
    "start": "114000",
    "end": "115680"
  },
  {
    "text": "it virtually impossible to",
    "start": "115680",
    "end": "117119"
  },
  {
    "text": "alter the transaction after it's been",
    "start": "117119",
    "end": "118960"
  },
  {
    "text": "issued but what if somebody tries to pay",
    "start": "118960",
    "end": "121200"
  },
  {
    "text": "two different people with bitcoin at the",
    "start": "121200",
    "end": "122880"
  },
  {
    "text": "exact same time",
    "start": "122880",
    "end": "123840"
  },
  {
    "text": "or double spend their money that's where",
    "start": "123840",
    "end": "125520"
  },
  {
    "text": "mining comes in which is a system that",
    "start": "125520",
    "end": "127680"
  },
  {
    "text": "allows multiple computers around the",
    "start": "127680",
    "end": "129440"
  },
  {
    "text": "world",
    "start": "129440",
    "end": "129840"
  },
  {
    "text": "to agree on the appropriate state of the",
    "start": "129840",
    "end": "131920"
  },
  {
    "text": "entire system or ledger",
    "start": "131920",
    "end": "133520"
  },
  {
    "text": "each new transaction is broadcast to all",
    "start": "133520",
    "end": "135840"
  },
  {
    "text": "nodes in the network",
    "start": "135840",
    "end": "136800"
  },
  {
    "text": "the transactions are packaged into a",
    "start": "136800",
    "end": "138480"
  },
  {
    "text": "block then miners will expend computing",
    "start": "138480",
    "end": "140640"
  },
  {
    "text": "power to validate proof of work",
    "start": "140640",
    "end": "142800"
  },
  {
    "text": "they compute a proof for a random",
    "start": "142800",
    "end": "144480"
  },
  {
    "text": "problem that is very difficult to solve",
    "start": "144480",
    "end": "146400"
  },
  {
    "text": "but very easy to verify",
    "start": "146400",
    "end": "148000"
  },
  {
    "text": "the first miner to solve the proof which",
    "start": "148000",
    "end": "149920"
  },
  {
    "text": "happens via dumb luck",
    "start": "149920",
    "end": "151280"
  },
  {
    "text": "gets a portion of the bitcoin as a",
    "start": "151280",
    "end": "152959"
  },
  {
    "text": "reward the block is then broadcast back",
    "start": "152959",
    "end": "155120"
  },
  {
    "text": "to all",
    "start": "155120",
    "end": "155599"
  },
  {
    "text": "other nodes where it's permanently",
    "start": "155599",
    "end": "157040"
  },
  {
    "text": "confirmed on the blockchain this has",
    "start": "157040",
    "end": "158800"
  },
  {
    "text": "been bitcoin in 100 seconds",
    "start": "158800",
    "end": "160720"
  },
  {
    "text": "if you want to see more short videos",
    "start": "160720",
    "end": "162080"
  },
  {
    "text": "like this make sure to like and",
    "start": "162080",
    "end": "163360"
  },
  {
    "text": "subscribe",
    "start": "163360",
    "end": "164080"
  },
  {
    "text": "and if you really want to learn how",
    "start": "164080",
    "end": "165200"
  },
  {
    "text": "blockchain technology works stay tuned",
    "start": "165200",
    "end": "167599"
  },
  {
    "text": "because today we're going beyond 100",
    "start": "167599",
    "end": "169200"
  },
  {
    "text": "seconds to build a blockchain from",
    "start": "169200",
    "end": "170879"
  },
  {
    "text": "scratch with node.js and typescript and",
    "start": "170879",
    "end": "173040"
  },
  {
    "text": "in the process",
    "start": "173040",
    "end": "173680"
  },
  {
    "text": "you'll learn all kinds of useful",
    "start": "173680",
    "end": "174879"
  },
  {
    "text": "information about cryptography",
    "start": "174879",
    "end": "176959"
  },
  {
    "text": "whether you're into cryptocurrency or",
    "start": "176959",
    "end": "178480"
  },
  {
    "text": "not there's many concepts in",
    "start": "178480",
    "end": "180000"
  },
  {
    "text": "cryptography that you should know about",
    "start": "180000",
    "end": "181760"
  },
  {
    "text": "as a developer",
    "start": "181760",
    "end": "182800"
  },
  {
    "text": "things like encryption and signing",
    "start": "182800",
    "end": "184400"
  },
  {
    "text": "hashing functions and algorithms like",
    "start": "184400",
    "end": "186640"
  },
  {
    "text": "sha",
    "start": "186640",
    "end": "187360"
  },
  {
    "text": "rsa and md5 that make all this stuff",
    "start": "187360",
    "end": "190080"
  },
  {
    "text": "possible",
    "start": "190080",
    "end": "190640"
  },
  {
    "text": "over the next few minutes you'll learn",
    "start": "190640",
    "end": "192000"
  },
  {
    "text": "about these concepts by implementing",
    "start": "192000",
    "end": "193680"
  },
  {
    "text": "your own blockchain from scratch",
    "start": "193680",
    "end": "195440"
  },
  {
    "text": "using nothing but node.js and typescript",
    "start": "195440",
    "end": "198159"
  },
  {
    "text": "our blockchain will contain wallets",
    "start": "198159",
    "end": "199840"
  },
  {
    "text": "where users can send money back and",
    "start": "199840",
    "end": "201519"
  },
  {
    "text": "forth",
    "start": "201519",
    "end": "202000"
  },
  {
    "text": "each transaction is added into a block",
    "start": "202000",
    "end": "204560"
  },
  {
    "text": "then that block is mined with a proof of",
    "start": "204560",
    "end": "206720"
  },
  {
    "text": "work system",
    "start": "206720",
    "end": "207519"
  },
  {
    "text": "at which point it can be added and",
    "start": "207519",
    "end": "209040"
  },
  {
    "text": "confirmed on the blockchain and",
    "start": "209040",
    "end": "210560"
  },
  {
    "text": "throughout this process you'll learn",
    "start": "210560",
    "end": "211760"
  },
  {
    "text": "about",
    "start": "211760",
    "end": "212080"
  },
  {
    "text": "all kinds of important concepts and how",
    "start": "212080",
    "end": "213760"
  },
  {
    "text": "they apply to different areas of",
    "start": "213760",
    "end": "215440"
  },
  {
    "text": "development",
    "start": "215440",
    "end": "216239"
  },
  {
    "text": "to get started you'll need node.js",
    "start": "216239",
    "end": "218000"
  },
  {
    "text": "installed on your system",
    "start": "218000",
    "end": "219519"
  },
  {
    "text": "then we'll open up vs code to an empty",
    "start": "219519",
    "end": "221599"
  },
  {
    "text": "directory run npm init y",
    "start": "221599",
    "end": "224159"
  },
  {
    "text": "to create a new node.js project i'll be",
    "start": "224159",
    "end": "226720"
  },
  {
    "text": "using typescript in this code",
    "start": "226720",
    "end": "228080"
  },
  {
    "text": "because we'll be using object-oriented",
    "start": "228080",
    "end": "230080"
  },
  {
    "text": "programming principles to implement the",
    "start": "230080",
    "end": "231840"
  },
  {
    "text": "blockchain and having types will just",
    "start": "231840",
    "end": "233599"
  },
  {
    "text": "make our code a bit more readable",
    "start": "233599",
    "end": "235120"
  },
  {
    "text": "you can install it with npm then create",
    "start": "235120",
    "end": "237360"
  },
  {
    "text": "a ts config file",
    "start": "237360",
    "end": "238640"
  },
  {
    "text": "and copy and paste the values from the",
    "start": "238640",
    "end": "240560"
  },
  {
    "text": "main source code from there we can go",
    "start": "240560",
    "end": "242560"
  },
  {
    "text": "into our package json",
    "start": "242560",
    "end": "243920"
  },
  {
    "text": "and create a script called dev that runs",
    "start": "243920",
    "end": "246400"
  },
  {
    "text": "the typescript compiler with the watch",
    "start": "246400",
    "end": "248319"
  },
  {
    "text": "flag",
    "start": "248319",
    "end": "248879"
  },
  {
    "text": "to constantly compile our code in the",
    "start": "248879",
    "end": "250480"
  },
  {
    "text": "background to plain javascript from",
    "start": "250480",
    "end": "252480"
  },
  {
    "text": "there you should be able to run",
    "start": "252480",
    "end": "253760"
  },
  {
    "text": "npm run dev from the command line to",
    "start": "253760",
    "end": "256160"
  },
  {
    "text": "keep typescript running in the",
    "start": "256160",
    "end": "257519"
  },
  {
    "text": "background",
    "start": "257519",
    "end": "258400"
  },
  {
    "text": "now we'll write all of our source code",
    "start": "258400",
    "end": "260079"
  },
  {
    "text": "in the index cs file",
    "start": "260079",
    "end": "262000"
  },
  {
    "text": "at the top of that file we will import",
    "start": "262000",
    "end": "264240"
  },
  {
    "text": "the crypto library which is a built-in",
    "start": "264240",
    "end": "266560"
  },
  {
    "text": "in node.js as the name implies it's a",
    "start": "266560",
    "end": "269040"
  },
  {
    "text": "modular node that handles a bunch of",
    "start": "269040",
    "end": "271040"
  },
  {
    "text": "different functionality for cryptography",
    "start": "271040",
    "end": "273199"
  },
  {
    "text": "our simple blockchain implementation",
    "start": "273199",
    "end": "274960"
  },
  {
    "text": "here has four classes",
    "start": "274960",
    "end": "276560"
  },
  {
    "text": "a transaction a block a chain and a",
    "start": "276560",
    "end": "279600"
  },
  {
    "text": "wallet",
    "start": "279600",
    "end": "280400"
  },
  {
    "text": "let's start by implementing the",
    "start": "280400",
    "end": "281680"
  },
  {
    "text": "transaction which is the fundamental",
    "start": "281680",
    "end": "283520"
  },
  {
    "text": "purpose of any cryptocurrency",
    "start": "283520",
    "end": "285280"
  },
  {
    "text": "transfer funds from one user to another",
    "start": "285280",
    "end": "287440"
  },
  {
    "text": "user in a transaction",
    "start": "287440",
    "end": "289280"
  },
  {
    "text": "a transaction object has three",
    "start": "289280",
    "end": "291199"
  },
  {
    "text": "properties the amount of the transaction",
    "start": "291199",
    "end": "293600"
  },
  {
    "text": "denominated in bitcoins or fire coins or",
    "start": "293600",
    "end": "296479"
  },
  {
    "text": "whatever you want to call your coin",
    "start": "296479",
    "end": "298240"
  },
  {
    "text": "along with the person paying the money",
    "start": "298240",
    "end": "299759"
  },
  {
    "text": "and the person receiving the money",
    "start": "299759",
    "end": "301360"
  },
  {
    "text": "eventually we'll set up public keys for",
    "start": "301360",
    "end": "303039"
  },
  {
    "text": "these users which you can think of as a",
    "start": "303039",
    "end": "304960"
  },
  {
    "text": "username that will eventually set as",
    "start": "304960",
    "end": "306880"
  },
  {
    "text": "these values in the transaction",
    "start": "306880",
    "end": "308720"
  },
  {
    "text": "one final thing we'll do here is add a",
    "start": "308720",
    "end": "310479"
  },
  {
    "text": "method to the class to convert the",
    "start": "310479",
    "end": "312400"
  },
  {
    "text": "object to a string",
    "start": "312400",
    "end": "313759"
  },
  {
    "text": "as we go through the tutorial we're",
    "start": "313759",
    "end": "315199"
  },
  {
    "text": "going to serialize everything as",
    "start": "315199",
    "end": "316960"
  },
  {
    "text": "strings just to make the cryptographic",
    "start": "316960",
    "end": "318880"
  },
  {
    "text": "objects easier to work with",
    "start": "318880",
    "end": "320320"
  },
  {
    "text": "and now we're ready to move on to the",
    "start": "320320",
    "end": "321840"
  },
  {
    "text": "block implementation",
    "start": "321840",
    "end": "323759"
  },
  {
    "text": "a block is like a container for multiple",
    "start": "323759",
    "end": "326240"
  },
  {
    "text": "transactions",
    "start": "326240",
    "end": "327280"
  },
  {
    "text": "or in our case just a single transaction",
    "start": "327280",
    "end": "329440"
  },
  {
    "text": "to keep things simple",
    "start": "329440",
    "end": "330560"
  },
  {
    "text": "you can think of a block like an element",
    "start": "330560",
    "end": "332479"
  },
  {
    "text": "in an array or more accurately a linked",
    "start": "332479",
    "end": "334880"
  },
  {
    "text": "list",
    "start": "334880",
    "end": "335440"
  },
  {
    "text": "because each block has a reference or",
    "start": "335440",
    "end": "337600"
  },
  {
    "text": "link to the previous block in the chain",
    "start": "337600",
    "end": "339759"
  },
  {
    "text": "with the previous hash property and that",
    "start": "339759",
    "end": "342000"
  },
  {
    "text": "brings up a good cryptographic question",
    "start": "342000",
    "end": "344080"
  },
  {
    "text": "what is a hash a hashing function allows",
    "start": "344080",
    "end": "346560"
  },
  {
    "text": "you to take a value of an arbitrary size",
    "start": "346560",
    "end": "348960"
  },
  {
    "text": "like say a transaction then map it to a",
    "start": "348960",
    "end": "351600"
  },
  {
    "text": "value",
    "start": "351600",
    "end": "352000"
  },
  {
    "text": "with a fixed length like a hexadecimal",
    "start": "352000",
    "end": "354240"
  },
  {
    "text": "string the value returned from the",
    "start": "354240",
    "end": "356000"
  },
  {
    "text": "hashing function",
    "start": "356000",
    "end": "356960"
  },
  {
    "text": "is often called a hash or a hash digest",
    "start": "356960",
    "end": "359600"
  },
  {
    "text": "when you create a hash it cannot be",
    "start": "359600",
    "end": "361120"
  },
  {
    "text": "reversed to reconstruct the",
    "start": "361120",
    "end": "362880"
  },
  {
    "text": "contents of the original value but what",
    "start": "362880",
    "end": "365039"
  },
  {
    "text": "you can do is validate that two values",
    "start": "365039",
    "end": "367199"
  },
  {
    "text": "are identical",
    "start": "367199",
    "end": "368080"
  },
  {
    "text": "by comparing their hashes and that's",
    "start": "368080",
    "end": "370000"
  },
  {
    "text": "important for a blockchain because it",
    "start": "370000",
    "end": "371680"
  },
  {
    "text": "ensures that two blocks can be linked",
    "start": "371680",
    "end": "373440"
  },
  {
    "text": "together without being manipulated",
    "start": "373440",
    "end": "375360"
  },
  {
    "text": "now to create a hash of a block we're",
    "start": "375360",
    "end": "377120"
  },
  {
    "text": "going to implement a getter",
    "start": "377120",
    "end": "378720"
  },
  {
    "text": "that will first stringify the object",
    "start": "378720",
    "end": "380560"
  },
  {
    "text": "itself then we'll use the create hash",
    "start": "380560",
    "end": "382560"
  },
  {
    "text": "function from node crypto",
    "start": "382560",
    "end": "384240"
  },
  {
    "text": "which specifies a specific hashing",
    "start": "384240",
    "end": "386400"
  },
  {
    "text": "algorithm in this case",
    "start": "386400",
    "end": "388360"
  },
  {
    "text": "sha-256 it stands for secure hash",
    "start": "388360",
    "end": "391280"
  },
  {
    "text": "algorithm",
    "start": "391280",
    "end": "391919"
  },
  {
    "text": "with a length of 256 bits it was",
    "start": "391919",
    "end": "394720"
  },
  {
    "text": "developed by the nsa back in 2001",
    "start": "394720",
    "end": "397039"
  },
  {
    "text": "and it's what's known as a one-way",
    "start": "397039",
    "end": "398880"
  },
  {
    "text": "cryptographic function",
    "start": "398880",
    "end": "400240"
  },
  {
    "text": "which means that it can encrypt data but",
    "start": "400240",
    "end": "402000"
  },
  {
    "text": "it cannot decrypt data back to its",
    "start": "402000",
    "end": "403680"
  },
  {
    "text": "original form",
    "start": "403680",
    "end": "404720"
  },
  {
    "text": "we can use the function to hash the",
    "start": "404720",
    "end": "406560"
  },
  {
    "text": "string version of the block",
    "start": "406560",
    "end": "408080"
  },
  {
    "text": "then return the hash value or digest as",
    "start": "408080",
    "end": "410560"
  },
  {
    "text": "a hexadecimal string",
    "start": "410560",
    "end": "412080"
  },
  {
    "text": "and that's all it takes to build a block",
    "start": "412080",
    "end": "413759"
  },
  {
    "text": "in this case it's a transaction",
    "start": "413759",
    "end": "415440"
  },
  {
    "text": "that has a link to the previous",
    "start": "415440",
    "end": "416880"
  },
  {
    "text": "transaction in the form of a hash",
    "start": "416880",
    "end": "418800"
  },
  {
    "text": "and it also contains a timestamp because",
    "start": "418800",
    "end": "420800"
  },
  {
    "text": "all blocks will be placed in",
    "start": "420800",
    "end": "422240"
  },
  {
    "text": "chronological order",
    "start": "422240",
    "end": "423680"
  },
  {
    "text": "now we can move on to the chain which",
    "start": "423680",
    "end": "425280"
  },
  {
    "text": "again is like a linked list of blocks",
    "start": "425280",
    "end": "427680"
  },
  {
    "text": "there should only be one blockchain so",
    "start": "427680",
    "end": "429599"
  },
  {
    "text": "we'll go ahead and make it a singleton",
    "start": "429599",
    "end": "431520"
  },
  {
    "text": "instance",
    "start": "431520",
    "end": "432000"
  },
  {
    "text": "by setting up a static instance property",
    "start": "432000",
    "end": "434880"
  },
  {
    "text": "that is equal to a new chain",
    "start": "434880",
    "end": "436720"
  },
  {
    "text": "instance that'll just ensure that we",
    "start": "436720",
    "end": "438400"
  },
  {
    "text": "have one chain instance instantiated",
    "start": "438400",
    "end": "440400"
  },
  {
    "text": "before anything else",
    "start": "440400",
    "end": "441680"
  },
  {
    "text": "now we can declare a property for the",
    "start": "441680",
    "end": "443360"
  },
  {
    "text": "chain itself which is just an array of",
    "start": "443360",
    "end": "445520"
  },
  {
    "text": "blocks",
    "start": "445520",
    "end": "446080"
  },
  {
    "text": "in the constructor we'll define the",
    "start": "446080",
    "end": "447599"
  },
  {
    "text": "first block in the chain which is called",
    "start": "447599",
    "end": "449440"
  },
  {
    "text": "the genesis block",
    "start": "449440",
    "end": "450639"
  },
  {
    "text": "the previous hash is null because",
    "start": "450639",
    "end": "452319"
  },
  {
    "text": "there's nothing for it to link to",
    "start": "452319",
    "end": "453919"
  },
  {
    "text": "then it instantiates a new transaction",
    "start": "453919",
    "end": "456160"
  },
  {
    "text": "that transfers a hundred coins to",
    "start": "456160",
    "end": "457840"
  },
  {
    "text": "satoshi",
    "start": "457840",
    "end": "458560"
  },
  {
    "text": "notice how we're creating money out of",
    "start": "458560",
    "end": "460080"
  },
  {
    "text": "thin air here that's no different than",
    "start": "460080",
    "end": "461680"
  },
  {
    "text": "when the central bankers or federal",
    "start": "461680",
    "end": "463280"
  },
  {
    "text": "reserve turn on the money printer",
    "start": "463280",
    "end": "464960"
  },
  {
    "text": "now in the blockchain class we'll often",
    "start": "464960",
    "end": "466800"
  },
  {
    "text": "need to grab the last block in the chain",
    "start": "466800",
    "end": "468879"
  },
  {
    "text": "so we'll go ahead and create a getter to",
    "start": "468879",
    "end": "470800"
  },
  {
    "text": "help us out with that",
    "start": "470800",
    "end": "472000"
  },
  {
    "text": "then we'll define a new method named add",
    "start": "472000",
    "end": "474080"
  },
  {
    "text": "block that takes a transaction",
    "start": "474080",
    "end": "476319"
  },
  {
    "text": "the sender's public key and a signature",
    "start": "476319",
    "end": "479039"
  },
  {
    "text": "that we can verify",
    "start": "479039",
    "end": "480080"
  },
  {
    "text": "before adding a new block to the chain a",
    "start": "480080",
    "end": "482080"
  },
  {
    "text": "naive and simple implementation might",
    "start": "482080",
    "end": "484000"
  },
  {
    "text": "look like this",
    "start": "484000",
    "end": "484879"
  },
  {
    "text": "we instantiate a new block taking the",
    "start": "484879",
    "end": "487280"
  },
  {
    "text": "last block's hash and this new",
    "start": "487280",
    "end": "489039"
  },
  {
    "text": "transaction",
    "start": "489039",
    "end": "489840"
  },
  {
    "text": "then we push that new block onto the",
    "start": "489840",
    "end": "491520"
  },
  {
    "text": "chain but the problem is that there's no",
    "start": "491520",
    "end": "493599"
  },
  {
    "text": "way to know that this is a legitimate",
    "start": "493599",
    "end": "495199"
  },
  {
    "text": "transaction",
    "start": "495199",
    "end": "496080"
  },
  {
    "text": "anybody could send arbitrary transaction",
    "start": "496080",
    "end": "498080"
  },
  {
    "text": "data to transfer",
    "start": "498080",
    "end": "499280"
  },
  {
    "text": "coin to someone else we can allow people",
    "start": "499280",
    "end": "501599"
  },
  {
    "text": "to securely send coin back and forth by",
    "start": "501599",
    "end": "503919"
  },
  {
    "text": "implementing a wallet",
    "start": "503919",
    "end": "505120"
  },
  {
    "text": "which is essentially just a wrapper for",
    "start": "505120",
    "end": "507039"
  },
  {
    "text": "a public key and a private key",
    "start": "507039",
    "end": "508800"
  },
  {
    "text": "the public key is for receiving money",
    "start": "508800",
    "end": "510479"
  },
  {
    "text": "the private key is for spending money",
    "start": "510479",
    "end": "512560"
  },
  {
    "text": "to generate a public and private key",
    "start": "512560",
    "end": "514479"
  },
  {
    "text": "we're going to use a different algorithm",
    "start": "514479",
    "end": "516320"
  },
  {
    "text": "called rsa",
    "start": "516320",
    "end": "517680"
  },
  {
    "text": "which stands for the names of the guys",
    "start": "517680",
    "end": "519279"
  },
  {
    "text": "that created it and unlike",
    "start": "519279",
    "end": "520880"
  },
  {
    "text": "sha this is a full encryption algorithm",
    "start": "520880",
    "end": "523599"
  },
  {
    "text": "that can encrypt data",
    "start": "523599",
    "end": "524959"
  },
  {
    "text": "and then decrypt it if you have the",
    "start": "524959",
    "end": "526560"
  },
  {
    "text": "proper key to do so to encrypt a value",
    "start": "526560",
    "end": "529040"
  },
  {
    "text": "you would use the public key to convert",
    "start": "529040",
    "end": "530800"
  },
  {
    "text": "it to ciphertext which is an unreadable",
    "start": "530800",
    "end": "533120"
  },
  {
    "text": "version of the original value then you",
    "start": "533120",
    "end": "535040"
  },
  {
    "text": "would use the private key to decrypt it",
    "start": "535040",
    "end": "537120"
  },
  {
    "text": "back to its original form",
    "start": "537120",
    "end": "538880"
  },
  {
    "text": "but what we're actually more interested",
    "start": "538880",
    "end": "540399"
  },
  {
    "text": "in is using the key pair to create a",
    "start": "540399",
    "end": "542720"
  },
  {
    "text": "digital signature",
    "start": "542720",
    "end": "543839"
  },
  {
    "text": "with signing we don't need to encrypt",
    "start": "543839",
    "end": "545600"
  },
  {
    "text": "the message but instead create a hash of",
    "start": "545600",
    "end": "547920"
  },
  {
    "text": "it we then sign the hash with our",
    "start": "547920",
    "end": "549440"
  },
  {
    "text": "private key",
    "start": "549440",
    "end": "550240"
  },
  {
    "text": "then the message can be verified later",
    "start": "550240",
    "end": "552000"
  },
  {
    "text": "using the public key if anybody tried to",
    "start": "552000",
    "end": "554000"
  },
  {
    "text": "change the message it would produce a",
    "start": "554000",
    "end": "555600"
  },
  {
    "text": "different hash in which case the",
    "start": "555600",
    "end": "557040"
  },
  {
    "text": "verification would fail",
    "start": "557040",
    "end": "558480"
  },
  {
    "text": "and that's really important for a coin",
    "start": "558480",
    "end": "560160"
  },
  {
    "text": "because if we didn't have a signature",
    "start": "560160",
    "end": "561519"
  },
  {
    "text": "then someone could intercept the",
    "start": "561519",
    "end": "563120"
  },
  {
    "text": "transaction message and change the",
    "start": "563120",
    "end": "564880"
  },
  {
    "text": "amount or change the payee",
    "start": "564880",
    "end": "566640"
  },
  {
    "text": "with no way to detect that anything was",
    "start": "566640",
    "end": "568480"
  },
  {
    "text": "out of the ordinary",
    "start": "568480",
    "end": "570000"
  },
  {
    "text": "now when generating the key pair with",
    "start": "570000",
    "end": "571440"
  },
  {
    "text": "node crypto i'm going to format them as",
    "start": "571440",
    "end": "573920"
  },
  {
    "text": "strings",
    "start": "573920",
    "end": "574560"
  },
  {
    "text": "and to do that i'm going to add some",
    "start": "574560",
    "end": "576160"
  },
  {
    "text": "extra options here for encoding the",
    "start": "576160",
    "end": "577920"
  },
  {
    "text": "important one to know",
    "start": "577920",
    "end": "578880"
  },
  {
    "text": "is the format pem which you would",
    "start": "578880",
    "end": "580480"
  },
  {
    "text": "normally save to a file",
    "start": "580480",
    "end": "582080"
  },
  {
    "text": "on the user's computer system where it",
    "start": "582080",
    "end": "583839"
  },
  {
    "text": "could be reused in the future",
    "start": "583839",
    "end": "585279"
  },
  {
    "text": "now that we have a public key and",
    "start": "585279",
    "end": "586640"
  },
  {
    "text": "private key we can use it to send money",
    "start": "586640",
    "end": "588880"
  },
  {
    "text": "to another user",
    "start": "588880",
    "end": "590160"
  },
  {
    "text": "the way we do that is by specifying an",
    "start": "590160",
    "end": "592080"
  },
  {
    "text": "amount and the public key",
    "start": "592080",
    "end": "593760"
  },
  {
    "text": "of the user being paid we can then use",
    "start": "593760",
    "end": "595920"
  },
  {
    "text": "node crypto to create a signature",
    "start": "595920",
    "end": "598000"
  },
  {
    "text": "again an sha 256 format using the",
    "start": "598000",
    "end": "600720"
  },
  {
    "text": "transaction data as the value",
    "start": "600720",
    "end": "602640"
  },
  {
    "text": "we can then create a signature by",
    "start": "602640",
    "end": "604240"
  },
  {
    "text": "signing it with a private key",
    "start": "604240",
    "end": "605839"
  },
  {
    "text": "this is kind of like creating a one-time",
    "start": "605839",
    "end": "607680"
  },
  {
    "text": "password it allows us to verify our",
    "start": "607680",
    "end": "610000"
  },
  {
    "text": "identity with the private key without",
    "start": "610000",
    "end": "612079"
  },
  {
    "text": "actually having to expose the private",
    "start": "612079",
    "end": "613760"
  },
  {
    "text": "key the signature depends on both the",
    "start": "613760",
    "end": "615600"
  },
  {
    "text": "transaction data and the private key",
    "start": "615600",
    "end": "617680"
  },
  {
    "text": "but it can be verified as authentic",
    "start": "617680",
    "end": "619440"
  },
  {
    "text": "using the public key we can now attempt",
    "start": "619440",
    "end": "621440"
  },
  {
    "text": "to add that block to the blockchain by",
    "start": "621440",
    "end": "623440"
  },
  {
    "text": "passing the transaction",
    "start": "623440",
    "end": "624720"
  },
  {
    "text": "the public key and the signature in real",
    "start": "624720",
    "end": "627040"
  },
  {
    "text": "life those values would be transferred",
    "start": "627040",
    "end": "628640"
  },
  {
    "text": "over the internet",
    "start": "628640",
    "end": "629600"
  },
  {
    "text": "then the signature could be verified",
    "start": "629600",
    "end": "631440"
  },
  {
    "text": "let's go ahead and refactor the add",
    "start": "631440",
    "end": "633440"
  },
  {
    "text": "block method",
    "start": "633440",
    "end": "634240"
  },
  {
    "text": "in the chain class it'll use node crypto",
    "start": "634240",
    "end": "636800"
  },
  {
    "text": "to create a signature verification",
    "start": "636800",
    "end": "638959"
  },
  {
    "text": "then pass the same transaction data to",
    "start": "638959",
    "end": "640880"
  },
  {
    "text": "the verifier we can then validate it",
    "start": "640880",
    "end": "642720"
  },
  {
    "text": "by verifying that the transaction data",
    "start": "642720",
    "end": "644480"
  },
  {
    "text": "has not been tampered with",
    "start": "644480",
    "end": "645760"
  },
  {
    "text": "using the sender's public key and the",
    "start": "645760",
    "end": "647920"
  },
  {
    "text": "signature itself",
    "start": "647920",
    "end": "648959"
  },
  {
    "text": "and we're now able to securely verify",
    "start": "648959",
    "end": "650880"
  },
  {
    "text": "that that user is actually trying to",
    "start": "650880",
    "end": "652800"
  },
  {
    "text": "spend that amount of money to the other",
    "start": "652800",
    "end": "654640"
  },
  {
    "text": "user",
    "start": "654640",
    "end": "655600"
  },
  {
    "text": "but there's still one more big issue",
    "start": "655600",
    "end": "657120"
  },
  {
    "text": "with our blockchain and that is the",
    "start": "657120",
    "end": "658880"
  },
  {
    "text": "double spend issue",
    "start": "658880",
    "end": "660160"
  },
  {
    "text": "imagine the spender tried to send money",
    "start": "660160",
    "end": "662160"
  },
  {
    "text": "to two different users at the same time",
    "start": "662160",
    "end": "664320"
  },
  {
    "text": "they could potentially spend more money",
    "start": "664320",
    "end": "665760"
  },
  {
    "text": "than they actually own before their",
    "start": "665760",
    "end": "667519"
  },
  {
    "text": "transaction is confirmed on the",
    "start": "667519",
    "end": "669040"
  },
  {
    "text": "blockchain",
    "start": "669040",
    "end": "669680"
  },
  {
    "text": "the way bitcoin addresses that issue is",
    "start": "669680",
    "end": "671680"
  },
  {
    "text": "with a proof of work system which",
    "start": "671680",
    "end": "673440"
  },
  {
    "text": "requires",
    "start": "673440",
    "end": "674000"
  },
  {
    "text": "each new block to go through a process",
    "start": "674000",
    "end": "675920"
  },
  {
    "text": "called mining where a difficult",
    "start": "675920",
    "end": "677760"
  },
  {
    "text": "computational problem is solved in order",
    "start": "677760",
    "end": "679920"
  },
  {
    "text": "to confirm the block",
    "start": "679920",
    "end": "681120"
  },
  {
    "text": "but it's very easy to verify that work",
    "start": "681120",
    "end": "683200"
  },
  {
    "text": "by multiple other nodes on the system",
    "start": "683200",
    "end": "685200"
  },
  {
    "text": "when mining is distributed around the",
    "start": "685200",
    "end": "686800"
  },
  {
    "text": "world it means you have multiple nodes",
    "start": "686800",
    "end": "688720"
  },
  {
    "text": "competing",
    "start": "688720",
    "end": "689440"
  },
  {
    "text": "to confirm a block on the blockchain and",
    "start": "689440",
    "end": "691680"
  },
  {
    "text": "works like a big lottery the winner of",
    "start": "691680",
    "end": "693519"
  },
  {
    "text": "the lottery earns a portion of the coin",
    "start": "693519",
    "end": "695440"
  },
  {
    "text": "as incentive",
    "start": "695440",
    "end": "696320"
  },
  {
    "text": "which motivates people to invest in the",
    "start": "696320",
    "end": "698079"
  },
  {
    "text": "computing resources to mine a coin",
    "start": "698079",
    "end": "700240"
  },
  {
    "text": "and also to pump the price of the coin",
    "start": "700240",
    "end": "701920"
  },
  {
    "text": "higher and higher because the higher the",
    "start": "701920",
    "end": "703440"
  },
  {
    "text": "price the more money you make",
    "start": "703440",
    "end": "704880"
  },
  {
    "text": "you can think of it like converting",
    "start": "704880",
    "end": "706160"
  },
  {
    "text": "cloud computing resources into money",
    "start": "706160",
    "end": "708560"
  },
  {
    "text": "now to implement a basic proof of work",
    "start": "708560",
    "end": "710560"
  },
  {
    "text": "system we'll go back into our block",
    "start": "710560",
    "end": "712240"
  },
  {
    "text": "class",
    "start": "712240",
    "end": "712720"
  },
  {
    "text": "and add a nonce value which is a",
    "start": "712720",
    "end": "714720"
  },
  {
    "text": "one-time use random number",
    "start": "714720",
    "end": "716560"
  },
  {
    "text": "then in the chain class we'll add a",
    "start": "716560",
    "end": "718240"
  },
  {
    "text": "method called mine that takes that nonce",
    "start": "718240",
    "end": "720639"
  },
  {
    "text": "as an argument",
    "start": "720639",
    "end": "721600"
  },
  {
    "text": "what this method will do is attempt to",
    "start": "721600",
    "end": "723440"
  },
  {
    "text": "find a number that when added to the",
    "start": "723440",
    "end": "725279"
  },
  {
    "text": "nonce",
    "start": "725279",
    "end": "725760"
  },
  {
    "text": "will produce a hash that starts with",
    "start": "725760",
    "end": "727600"
  },
  {
    "text": "four zeros the only real way to figure",
    "start": "727600",
    "end": "729600"
  },
  {
    "text": "out that value is with brute force by",
    "start": "729600",
    "end": "731600"
  },
  {
    "text": "creating a while loop that goes digit by",
    "start": "731600",
    "end": "733600"
  },
  {
    "text": "digit",
    "start": "733600",
    "end": "734079"
  },
  {
    "text": "until we find the requested value to",
    "start": "734079",
    "end": "736240"
  },
  {
    "text": "handle the brute force computation",
    "start": "736240",
    "end": "737920"
  },
  {
    "text": "we'll create a while loop that creates a",
    "start": "737920",
    "end": "739920"
  },
  {
    "text": "hash with the md5 algorithm",
    "start": "739920",
    "end": "742320"
  },
  {
    "text": "it's very similar to sha-256 but is only",
    "start": "742320",
    "end": "745519"
  },
  {
    "text": "128 bits",
    "start": "745519",
    "end": "746880"
  },
  {
    "text": "and is faster to compute we'll continue",
    "start": "746880",
    "end": "748880"
  },
  {
    "text": "to create new hashes",
    "start": "748880",
    "end": "750000"
  },
  {
    "text": "inside the while loop until we find one",
    "start": "750000",
    "end": "751839"
  },
  {
    "text": "that starts with four zeros",
    "start": "751839",
    "end": "753360"
  },
  {
    "text": "when we find it we can return the",
    "start": "753360",
    "end": "754880"
  },
  {
    "text": "solution and then send it off to other",
    "start": "754880",
    "end": "756800"
  },
  {
    "text": "nodes where it can be verified",
    "start": "756800",
    "end": "758160"
  },
  {
    "text": "and the block can finally be confirmed",
    "start": "758160",
    "end": "759920"
  },
  {
    "text": "on the blockchain and that takes care of",
    "start": "759920",
    "end": "761920"
  },
  {
    "text": "our blockchain implementation",
    "start": "761920",
    "end": "763519"
  },
  {
    "text": "if we go down to the example usage here",
    "start": "763519",
    "end": "765600"
  },
  {
    "text": "you can see we instantiate a few wallets",
    "start": "765600",
    "end": "767839"
  },
  {
    "text": "for different users",
    "start": "767839",
    "end": "769279"
  },
  {
    "text": "then allow those users to send money to",
    "start": "769279",
    "end": "771360"
  },
  {
    "text": "each other using their various public",
    "start": "771360",
    "end": "773120"
  },
  {
    "text": "keys",
    "start": "773120",
    "end": "773680"
  },
  {
    "text": "if we go ahead and log out the chain",
    "start": "773680",
    "end": "775040"
  },
  {
    "text": "itself you can see we have a bunch of",
    "start": "775040",
    "end": "776959"
  },
  {
    "text": "blocks or transactions linked to each",
    "start": "776959",
    "end": "778959"
  },
  {
    "text": "other",
    "start": "778959",
    "end": "779519"
  },
  {
    "text": "based on a hash of the previous block",
    "start": "779519",
    "end": "781519"
  },
  {
    "text": "now this blockchain is obviously not",
    "start": "781519",
    "end": "783120"
  },
  {
    "text": "perfect",
    "start": "783120",
    "end": "783680"
  },
  {
    "text": "and something that i just hacked",
    "start": "783680",
    "end": "784800"
  },
  {
    "text": "together to teach you the gist of how a",
    "start": "784800",
    "end": "786480"
  },
  {
    "text": "blockchain works",
    "start": "786480",
    "end": "787440"
  },
  {
    "text": "feel free to grab the full source code",
    "start": "787440",
    "end": "789200"
  },
  {
    "text": "on github if you learned something in",
    "start": "789200",
    "end": "790880"
  },
  {
    "text": "the process",
    "start": "790880",
    "end": "791519"
  },
  {
    "text": "please make sure to like and subscribe",
    "start": "791519",
    "end": "793120"
  },
  {
    "text": "and consider sending me some bitcoin or",
    "start": "793120",
    "end": "795200"
  },
  {
    "text": "sponsoring me on github for just one",
    "start": "795200",
    "end": "797200"
  },
  {
    "text": "dollar a fiat per month",
    "start": "797200",
    "end": "798639"
  },
  {
    "text": "i use all that income to sponsor other",
    "start": "798639",
    "end": "800720"
  },
  {
    "text": "developers myself",
    "start": "800720",
    "end": "801760"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "801760",
    "end": "803680"
  },
  {
    "text": "in the next one",
    "start": "803680",
    "end": "810079"
  }
]