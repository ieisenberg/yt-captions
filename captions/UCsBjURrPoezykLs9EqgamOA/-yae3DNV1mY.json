[
  {
    "text": "infinite scroll is a feature that can",
    "start": "60",
    "end": "1560"
  },
  {
    "text": "have a huge impact on the user",
    "start": "1560",
    "end": "2909"
  },
  {
    "text": "experience by loading data",
    "start": "2909",
    "end": "4470"
  },
  {
    "text": "asynchronously based on scroll position",
    "start": "4470",
    "end": "6960"
  },
  {
    "text": "in this video I'm going to show you how",
    "start": "6960",
    "end": "8790"
  },
  {
    "text": "to implement infinite scroll and angular",
    "start": "8790",
    "end": "11010"
  },
  {
    "text": "with the firestore database but we're",
    "start": "11010",
    "end": "13590"
  },
  {
    "text": "going to do it in a way that not only",
    "start": "13590",
    "end": "14759"
  },
  {
    "text": "allows you to scroll down to load",
    "start": "14759",
    "end": "16440"
  },
  {
    "text": "content but also to scroll up and load",
    "start": "16440",
    "end": "19020"
  },
  {
    "text": "content in the opposite direction this",
    "start": "19020",
    "end": "21480"
  },
  {
    "text": "has been a commonly requested feature",
    "start": "21480",
    "end": "22920"
  },
  {
    "text": "and it would be used if you were doing",
    "start": "22920",
    "end": "24689"
  },
  {
    "text": "something like Facebook Messenger or",
    "start": "24689",
    "end": "26220"
  },
  {
    "text": "slack where you load a timeline of",
    "start": "26220",
    "end": "28199"
  },
  {
    "text": "messages in Reverse we're going to",
    "start": "28199",
    "end": "30300"
  },
  {
    "text": "accomplish this by creating a generic",
    "start": "30300",
    "end": "32130"
  },
  {
    "text": "service in angular and it will not only",
    "start": "32130",
    "end": "34230"
  },
  {
    "text": "retrieve the data but also tell us when",
    "start": "34230",
    "end": "36000"
  },
  {
    "text": "we've reached the end of a collection",
    "start": "36000",
    "end": "37440"
  },
  {
    "text": "and when we are loading new data if",
    "start": "37440",
    "end": "39899"
  },
  {
    "text": "you're new to the channel make sure to",
    "start": "39899",
    "end": "41550"
  },
  {
    "text": "subscribe and grab the source code for",
    "start": "41550",
    "end": "43829"
  },
  {
    "text": "this project from angular firebase comm",
    "start": "43829",
    "end": "45899"
  },
  {
    "text": "I'm going to be starting from a brand",
    "start": "45899",
    "end": "48180"
  },
  {
    "text": "new angular app and it's only dependency",
    "start": "48180",
    "end": "50370"
  },
  {
    "text": "is angular fire so make sure to go to",
    "start": "50370",
    "end": "52620"
  },
  {
    "text": "the documentation and follow the setup",
    "start": "52620",
    "end": "54629"
  },
  {
    "text": "instructions there then the next step is",
    "start": "54629",
    "end": "56969"
  },
  {
    "text": "to create a directive called scrollable",
    "start": "56969",
    "end": "58739"
  },
  {
    "text": "this is going to tell us whether or not",
    "start": "58739",
    "end": "60270"
  },
  {
    "text": "the user is scrolled to either the top",
    "start": "60270",
    "end": "62010"
  },
  {
    "text": "or bottom of the page we're going to do",
    "start": "62010",
    "end": "64350"
  },
  {
    "text": "that by monitoring the scroll event on",
    "start": "64350",
    "end": "66420"
  },
  {
    "text": "the element itself that'd be that",
    "start": "66420",
    "end": "68100"
  },
  {
    "text": "container element and then we're going",
    "start": "68100",
    "end": "69869"
  },
  {
    "text": "to omit our own custom event that will",
    "start": "69869",
    "end": "72060"
  },
  {
    "text": "tell us whether or not it's the bottom",
    "start": "72060",
    "end": "73500"
  },
  {
    "text": "or top you can create a custom event and",
    "start": "73500",
    "end": "75840"
  },
  {
    "text": "angular by using the output decorator",
    "start": "75840",
    "end": "77850"
  },
  {
    "text": "and event emitter so our custom event",
    "start": "77850",
    "end": "80610"
  },
  {
    "text": "here is named scroll position then I'm",
    "start": "80610",
    "end": "83549"
  },
  {
    "text": "going to add element ref to the",
    "start": "83549",
    "end": "85140"
  },
  {
    "text": "constructor but I want to warn you that",
    "start": "85140",
    "end": "86970"
  },
  {
    "text": "using element ref for direct Dom access",
    "start": "86970",
    "end": "89520"
  },
  {
    "text": "can cause issues in angular with",
    "start": "89520",
    "end": "91409"
  },
  {
    "text": "platform server and web worker we can",
    "start": "91409",
    "end": "94049"
  },
  {
    "text": "address this issue by wrapping native",
    "start": "94049",
    "end": "95700"
  },
  {
    "text": "elements in a try-catch block then",
    "start": "95700",
    "end": "97650"
  },
  {
    "text": "provide a fallback such as a load more",
    "start": "97650",
    "end": "99420"
  },
  {
    "text": "button when the Don doesn't actually",
    "start": "99420",
    "end": "101100"
  },
  {
    "text": "exist first we'll set up a host listener",
    "start": "101100",
    "end": "104040"
  },
  {
    "text": "on the element then listen to the scroll",
    "start": "104040",
    "end": "106259"
  },
  {
    "text": "event so keep in mind that your host",
    "start": "106259",
    "end": "108240"
  },
  {
    "text": "element needs to be something scrollable",
    "start": "108240",
    "end": "110060"
  },
  {
    "text": "and we'll set up a function here and put",
    "start": "110060",
    "end": "113399"
  },
  {
    "text": "our try-catch block inside of it",
    "start": "113399",
    "end": "115140"
  },
  {
    "text": "then we need three values from the",
    "start": "115140",
    "end": "117390"
  },
  {
    "text": "native element itself we need scroll top",
    "start": "117390",
    "end": "119640"
  },
  {
    "text": "scroll height and offset height first we",
    "start": "119640",
    "end": "123750"
  },
  {
    "text": "need to know if the user has reached the",
    "start": "123750",
    "end": "125430"
  },
  {
    "text": "bottom of the element so we can do that",
    "start": "125430",
    "end": "127259"
  },
  {
    "text": "by saying top greater than height minus",
    "start": "127259",
    "end": "130020"
  },
  {
    "text": "offset minus one extra pixel when that",
    "start": "130020",
    "end": "132810"
  },
  {
    "text": "condition is met we",
    "start": "132810",
    "end": "133850"
  },
  {
    "text": "our event emitter send out a string",
    "start": "133850",
    "end": "136460"
  },
  {
    "text": "value of bottom four top we can simply",
    "start": "136460",
    "end": "139670"
  },
  {
    "text": "see if the scroll top is at zero before",
    "start": "139670",
    "end": "142460"
  },
  {
    "text": "we go any further let's make sure this",
    "start": "142460",
    "end": "143840"
  },
  {
    "text": "works in an actual component so I'm",
    "start": "143840",
    "end": "146510"
  },
  {
    "text": "going to switch over to the app",
    "start": "146510",
    "end": "147800"
  },
  {
    "text": "component then I'm going to import",
    "start": "147800",
    "end": "150230"
  },
  {
    "text": "observable as well as the pagination",
    "start": "150230",
    "end": "152210"
  },
  {
    "text": "service which we're going to create the",
    "start": "152210",
    "end": "153950"
  },
  {
    "text": "next step then I am setting up an event",
    "start": "153950",
    "end": "155930"
  },
  {
    "text": "handler here that will just console.log",
    "start": "155930",
    "end": "157790"
  },
  {
    "text": "the event from our custom event in the",
    "start": "157790",
    "end": "159860"
  },
  {
    "text": "directive all we need to do is set up a",
    "start": "159860",
    "end": "162620"
  },
  {
    "text": "div and inside that div will add the",
    "start": "162620",
    "end": "165530"
  },
  {
    "text": "scrollable directive and then for the",
    "start": "165530",
    "end": "167990"
  },
  {
    "text": "event we use parentheses with the scroll",
    "start": "167990",
    "end": "170300"
  },
  {
    "text": "position event and then we'll run our",
    "start": "170300",
    "end": "172400"
  },
  {
    "text": "scroll handler and I'm going to add an",
    "start": "172400",
    "end": "174890"
  },
  {
    "text": "extra div in here with some height to it",
    "start": "174890",
    "end": "176330"
  },
  {
    "text": "just so we can actually scroll through",
    "start": "176330",
    "end": "178040"
  },
  {
    "text": "this parent div if you watch the console",
    "start": "178040",
    "end": "180800"
  },
  {
    "text": "to the right you'll see we either get a",
    "start": "180800",
    "end": "182000"
  },
  {
    "text": "bottom or top event once we've reached",
    "start": "182000",
    "end": "183800"
  },
  {
    "text": "the bottom or top of the element itself",
    "start": "183800",
    "end": "185690"
  },
  {
    "text": "and before we get to firestore let's",
    "start": "185690",
    "end": "188270"
  },
  {
    "text": "generate a component called loading",
    "start": "188270",
    "end": "189800"
  },
  {
    "text": "spinner then head over to spin kit and",
    "start": "189800",
    "end": "192230"
  },
  {
    "text": "choose your favorite spinner and just",
    "start": "192230",
    "end": "194360"
  },
  {
    "text": "copy and paste the HTML and CSS into",
    "start": "194360",
    "end": "196760"
  },
  {
    "text": "that component before we build this big",
    "start": "196760",
    "end": "199670"
  },
  {
    "text": "complex pagination service I want to",
    "start": "199670",
    "end": "201770"
  },
  {
    "text": "show you how it's going to be used in",
    "start": "201770",
    "end": "203150"
  },
  {
    "text": "the component to paginate in fire story",
    "start": "203150",
    "end": "205880"
  },
  {
    "text": "you need to send a new query for each",
    "start": "205880",
    "end": "207950"
  },
  {
    "text": "new batch of data that you need the",
    "start": "207950",
    "end": "210050"
  },
  {
    "text": "service I'm creating will allow you to",
    "start": "210050",
    "end": "211580"
  },
  {
    "text": "make a query with some basic",
    "start": "211580",
    "end": "213020"
  },
  {
    "text": "configuration options and this will",
    "start": "213020",
    "end": "215450"
  },
  {
    "text": "populate an observable on the service",
    "start": "215450",
    "end": "217100"
  },
  {
    "text": "that we can subscribe to the first",
    "start": "217100",
    "end": "219830"
  },
  {
    "text": "argument to an it is the collection and",
    "start": "219830",
    "end": "221840"
  },
  {
    "text": "the second is the field that you want to",
    "start": "221840",
    "end": "223730"
  },
  {
    "text": "order by you can order the collection in",
    "start": "223730",
    "end": "225710"
  },
  {
    "text": "Reverse and you can also prepend new",
    "start": "225710",
    "end": "227840"
  },
  {
    "text": "items to the beginning which is what you",
    "start": "227840",
    "end": "229700"
  },
  {
    "text": "would use if you're doing an upward",
    "start": "229700",
    "end": "231200"
  },
  {
    "text": "infinite scroll after the initial query",
    "start": "231200",
    "end": "233720"
  },
  {
    "text": "we'll listen for events in our scroll",
    "start": "233720",
    "end": "235580"
  },
  {
    "text": "handler once we receive the bottom event",
    "start": "235580",
    "end": "238010"
  },
  {
    "text": "we can just call the more method from",
    "start": "238010",
    "end": "239780"
  },
  {
    "text": "the service and that will populate the",
    "start": "239780",
    "end": "241790"
  },
  {
    "text": "next batch of items from firestore so",
    "start": "241790",
    "end": "244460"
  },
  {
    "text": "the service we're building will give you",
    "start": "244460",
    "end": "245690"
  },
  {
    "text": "infinite scroll with just two lines of",
    "start": "245690",
    "end": "247580"
  },
  {
    "text": "code the service will also give us a",
    "start": "247580",
    "end": "249800"
  },
  {
    "text": "data variable that's an observable array",
    "start": "249800",
    "end": "252200"
  },
  {
    "text": "that we can loop over with the async",
    "start": "252200",
    "end": "253880"
  },
  {
    "text": "pipe so we'll display some information",
    "start": "253880",
    "end": "256100"
  },
  {
    "text": "about our boats in the database but the",
    "start": "256100",
    "end": "258590"
  },
  {
    "text": "service also has two other variables",
    "start": "258590",
    "end": "260120"
  },
  {
    "text": "that are important the first one will",
    "start": "260120",
    "end": "262040"
  },
  {
    "text": "tell us once we've reached the end of a",
    "start": "262040",
    "end": "263600"
  },
  {
    "text": "collection and that's the done variable",
    "start": "263600",
    "end": "265820"
  },
  {
    "text": "so we can listen for that",
    "start": "265820",
    "end": "267620"
  },
  {
    "text": "and then say I ran out of boats once we",
    "start": "267620",
    "end": "269180"
  },
  {
    "text": "reach the end we have a another",
    "start": "269180",
    "end": "270800"
  },
  {
    "text": "observable that will tell us whether or",
    "start": "270800",
    "end": "272270"
  },
  {
    "text": "not a new query is loading so we can",
    "start": "272270",
    "end": "274280"
  },
  {
    "text": "show a loading spinner for each new",
    "start": "274280",
    "end": "275630"
  },
  {
    "text": "query and that also helps us prevent",
    "start": "275630",
    "end": "277790"
  },
  {
    "text": "sending multiple unnecessary queries if",
    "start": "277790",
    "end": "280190"
  },
  {
    "text": "we take a look in fire store quickly we",
    "start": "280190",
    "end": "282620"
  },
  {
    "text": "just have a boat's collection that's in",
    "start": "282620",
    "end": "284389"
  },
  {
    "text": "the route and each document has a URL",
    "start": "284389",
    "end": "287060"
  },
  {
    "text": "and a year field so we'll be sorting by",
    "start": "287060",
    "end": "289220"
  },
  {
    "text": "the year when we look in the app we get",
    "start": "289220",
    "end": "292639"
  },
  {
    "text": "the initial loading spinner and then",
    "start": "292639",
    "end": "294860"
  },
  {
    "text": "once we scroll down the loading spinner",
    "start": "294860",
    "end": "296600"
  },
  {
    "text": "will reappear and about a second later",
    "start": "296600",
    "end": "298820"
  },
  {
    "text": "we'll get some new data loaded now we're",
    "start": "298820",
    "end": "302120"
  },
  {
    "text": "finally ready to start building the",
    "start": "302120",
    "end": "303410"
  },
  {
    "text": "service we're going to need angularfire",
    "start": "303410",
    "end": "305660"
  },
  {
    "text": "store and we're also going to make",
    "start": "305660",
    "end": "307760"
  },
  {
    "text": "pretty heavy usage of rxjs behavior",
    "start": "307760",
    "end": "310430"
  },
  {
    "text": "subjects next I'm going to set up an",
    "start": "310430",
    "end": "313010"
  },
  {
    "text": "interface that defines the query",
    "start": "313010",
    "end": "314840"
  },
  {
    "text": "configuration options so we have a",
    "start": "314840",
    "end": "317210"
  },
  {
    "text": "required field of path which is the path",
    "start": "317210",
    "end": "318830"
  },
  {
    "text": "to your collection and then we have the",
    "start": "318830",
    "end": "320960"
  },
  {
    "text": "field that you want to order by then",
    "start": "320960",
    "end": "323030"
  },
  {
    "text": "we'll set default values for limit",
    "start": "323030",
    "end": "324919"
  },
  {
    "text": "reverse and prepend prepends the",
    "start": "324919",
    "end": "327050"
  },
  {
    "text": "important one that's the one that you",
    "start": "327050",
    "end": "328340"
  },
  {
    "text": "would use if you wanted to have the",
    "start": "328340",
    "end": "329660"
  },
  {
    "text": "items at the beginning of the array",
    "start": "329660",
    "end": "331370"
  },
  {
    "text": "instead of added to the end of the array",
    "start": "331370",
    "end": "333669"
  },
  {
    "text": "next I'm going to set up a few behavior",
    "start": "333669",
    "end": "335990"
  },
  {
    "text": "subjects the subjects are all private",
    "start": "335990",
    "end": "338270"
  },
  {
    "text": "variables and they have underscores so",
    "start": "338270",
    "end": "340250"
  },
  {
    "text": "you can keep track of them easily in the",
    "start": "340250",
    "end": "341840"
  },
  {
    "text": "code done will tell us once we've",
    "start": "341840",
    "end": "343849"
  },
  {
    "text": "reached the end of the collection",
    "start": "343849",
    "end": "346389"
  },
  {
    "text": "loading will tell us when a query is in",
    "start": "346389",
    "end": "348919"
  },
  {
    "text": "process and data is the last batch of",
    "start": "348919",
    "end": "351310"
  },
  {
    "text": "information that has been retrieved from",
    "start": "351310",
    "end": "353180"
  },
  {
    "text": "firebase then we'll set the query",
    "start": "353180",
    "end": "356000"
  },
  {
    "text": "configuration as a variable so we can",
    "start": "356000",
    "end": "357680"
  },
  {
    "text": "keep track of it between queries and",
    "start": "357680",
    "end": "359830"
  },
  {
    "text": "that'll be typed to our query config",
    "start": "359830",
    "end": "362180"
  },
  {
    "text": "interface then for each of these",
    "start": "362180",
    "end": "364639"
  },
  {
    "text": "subjects we're going to set an",
    "start": "364639",
    "end": "366380"
  },
  {
    "text": "observable that will be consumed by the",
    "start": "366380",
    "end": "368510"
  },
  {
    "text": "component this will keep all of the data",
    "start": "368510",
    "end": "371180"
  },
  {
    "text": "changes isolated to the service this",
    "start": "371180",
    "end": "374000"
  },
  {
    "text": "part is technically optional but it is",
    "start": "374000",
    "end": "375770"
  },
  {
    "text": "considered a good practice all we need",
    "start": "375770",
    "end": "378620"
  },
  {
    "text": "to do is call as observable on the",
    "start": "378620",
    "end": "380690"
  },
  {
    "text": "source data then the next step is to add",
    "start": "380690",
    "end": "384229"
  },
  {
    "text": "angular firestore to the constructor",
    "start": "384229",
    "end": "386530"
  },
  {
    "text": "then we're going to go through a lot of",
    "start": "386530",
    "end": "388460"
  },
  {
    "text": "code here so I recommend checking out",
    "start": "388460",
    "end": "390199"
  },
  {
    "text": "the main article for detailed",
    "start": "390199",
    "end": "392150"
  },
  {
    "text": "explanations on each of these methods",
    "start": "392150",
    "end": "394250"
  },
  {
    "text": "the first one we'll set up is a knit",
    "start": "394250",
    "end": "396710"
  },
  {
    "text": "which is going to make an initial query",
    "start": "396710",
    "end": "398719"
  },
  {
    "text": "as well as save our query configuration",
    "start": "398719",
    "end": "401360"
  },
  {
    "text": "on the service it requires a path to the",
    "start": "401360",
    "end": "405229"
  },
  {
    "text": "collection as well as a field to order",
    "start": "405229",
    "end": "407210"
  },
  {
    "text": "by and then it has optional defaults",
    "start": "407210",
    "end": "409520"
  },
  {
    "text": "here that you can override by passing",
    "start": "409520",
    "end": "411289"
  },
  {
    "text": "them as an object so we'll set a default",
    "start": "411289",
    "end": "413750"
  },
  {
    "text": "limit up to and then say reverse false",
    "start": "413750",
    "end": "416150"
  },
  {
    "text": "and prepend false now we can use this",
    "start": "416150",
    "end": "420530"
  },
  {
    "text": "object to make a reference to the",
    "start": "420530",
    "end": "422719"
  },
  {
    "text": "firestore collection we're going to",
    "start": "422719",
    "end": "426560"
  },
  {
    "text": "order by the query field if the reverse",
    "start": "426560",
    "end": "429620"
  },
  {
    "text": "property is set to true then we'll go",
    "start": "429620",
    "end": "431389"
  },
  {
    "text": "ahead and order it descending otherwise",
    "start": "431389",
    "end": "433250"
  },
  {
    "text": "it'll be ascending then we'll go ahead",
    "start": "433250",
    "end": "435979"
  },
  {
    "text": "and limit it by whatever set in the",
    "start": "435979",
    "end": "437960"
  },
  {
    "text": "query configuration then I have a map",
    "start": "437960",
    "end": "441289"
  },
  {
    "text": "and update method that I'm going to show",
    "start": "441289",
    "end": "443000"
  },
  {
    "text": "you in just a second here but first I'm",
    "start": "443000",
    "end": "445340"
  },
  {
    "text": "going to show you how we define the",
    "start": "445340",
    "end": "446569"
  },
  {
    "text": "observable data that will actually be",
    "start": "446569",
    "end": "448430"
  },
  {
    "text": "used in the front-end component so we'll",
    "start": "448430",
    "end": "450919"
  },
  {
    "text": "take our source data and then we'll call",
    "start": "450919",
    "end": "452750"
  },
  {
    "text": "the rxjs scan operator on it scan allows",
    "start": "452750",
    "end": "456409"
  },
  {
    "text": "us to build a larger array over time",
    "start": "456409",
    "end": "458870"
  },
  {
    "text": "if the query options are set to prepend",
    "start": "458870",
    "end": "461569"
  },
  {
    "text": "then we want to take the new value and",
    "start": "461569",
    "end": "463810"
  },
  {
    "text": "concatenate it to the beginning of the",
    "start": "463810",
    "end": "466129"
  },
  {
    "text": "array and if it's not set then we just",
    "start": "466129",
    "end": "468529"
  },
  {
    "text": "want to go ahead and concatenate it to",
    "start": "468529",
    "end": "469940"
  },
  {
    "text": "the end scan is a pretty weird operator",
    "start": "469940",
    "end": "472940"
  },
  {
    "text": "to learn so I recommend going to rxjs",
    "start": "472940",
    "end": "475310"
  },
  {
    "text": "marbles and checking it out visually now",
    "start": "475310",
    "end": "478789"
  },
  {
    "text": "let's take a look at that map and update",
    "start": "478789",
    "end": "480979"
  },
  {
    "text": "method it takes the angularfire store",
    "start": "480979",
    "end": "483710"
  },
  {
    "text": "collection and then Maps it down to the",
    "start": "483710",
    "end": "485449"
  },
  {
    "text": "snapshot that we need and then sends it",
    "start": "485449",
    "end": "487699"
  },
  {
    "text": "to our main data source if the",
    "start": "487699",
    "end": "490310"
  },
  {
    "text": "collection is already done or loading we",
    "start": "490310",
    "end": "492259"
  },
  {
    "text": "don't want to make the query so we'll",
    "start": "492259",
    "end": "493580"
  },
  {
    "text": "just return out of the function but",
    "start": "493580",
    "end": "495860"
  },
  {
    "text": "otherwise we'll set the loading state to",
    "start": "495860",
    "end": "497629"
  },
  {
    "text": "true and then we'll call collection",
    "start": "497629",
    "end": "500150"
  },
  {
    "text": "snapshot changes to paginate a cursor",
    "start": "500150",
    "end": "503270"
  },
  {
    "text": "and firestore you have to use the",
    "start": "503270",
    "end": "504889"
  },
  {
    "text": "document snapshot so what we're going to",
    "start": "504889",
    "end": "507589"
  },
  {
    "text": "do is map down the array to the data",
    "start": "507589",
    "end": "510439"
  },
  {
    "text": "that we want to show on the front end as",
    "start": "510439",
    "end": "511909"
  },
  {
    "text": "well as the snapshot you'll see in a",
    "start": "511909",
    "end": "514130"
  },
  {
    "text": "second here how we use the snapshot to",
    "start": "514130",
    "end": "515899"
  },
  {
    "text": "offset all future queries then after we",
    "start": "515899",
    "end": "519740"
  },
  {
    "text": "have this data mapped down we're going",
    "start": "519740",
    "end": "521240"
  },
  {
    "text": "to check and see if the prepend option",
    "start": "521240",
    "end": "523310"
  },
  {
    "text": "is set then we need to reverse each",
    "start": "523310",
    "end": "525529"
  },
  {
    "text": "individual batch to maintain a",
    "start": "525529",
    "end": "527390"
  },
  {
    "text": "consistent order going in Reverse there",
    "start": "527390",
    "end": "530329"
  },
  {
    "text": "may be a better way to do this but I",
    "start": "530329",
    "end": "531740"
  },
  {
    "text": "wasn't able to figure one out for the",
    "start": "531740",
    "end": "533180"
  },
  {
    "text": "upward scroll when you're pre",
    "start": "533180",
    "end": "534870"
  },
  {
    "text": "new items to a list after we have the",
    "start": "534870",
    "end": "537600"
  },
  {
    "text": "values mapped down we'll go ahead and",
    "start": "537600",
    "end": "538980"
  },
  {
    "text": "update them in our main data source at",
    "start": "538980",
    "end": "542670"
  },
  {
    "text": "this point we can set our loading state",
    "start": "542670",
    "end": "544470"
  },
  {
    "text": "to false and we can also check to see if",
    "start": "544470",
    "end": "546779"
  },
  {
    "text": "that was an empty array at which point",
    "start": "546779",
    "end": "548490"
  },
  {
    "text": "we know we have reached the end of the",
    "start": "548490",
    "end": "550200"
  },
  {
    "text": "collection and this is going to be a",
    "start": "550200",
    "end": "552240"
  },
  {
    "text": "one-off operation for each new query so",
    "start": "552240",
    "end": "555000"
  },
  {
    "text": "we're going to say take one and",
    "start": "555000",
    "end": "556860"
  },
  {
    "text": "subscribe this will end your real-time",
    "start": "556860",
    "end": "559800"
  },
  {
    "text": "connection with firebase but pagination",
    "start": "559800",
    "end": "561990"
  },
  {
    "text": "with real-time data introduces a whole",
    "start": "561990",
    "end": "563760"
  },
  {
    "text": "other host of issues and trade-offs that",
    "start": "563760",
    "end": "565560"
  },
  {
    "text": "you have to think about it's beyond the",
    "start": "565560",
    "end": "567480"
  },
  {
    "text": "scope of this video but please reach out",
    "start": "567480",
    "end": "569070"
  },
  {
    "text": "on slack if you want to talk about it",
    "start": "569070",
    "end": "570710"
  },
  {
    "text": "now we're ready to set up a method to",
    "start": "570710",
    "end": "573060"
  },
  {
    "text": "make secondary queries so first we need",
    "start": "573060",
    "end": "575670"
  },
  {
    "text": "to know the cursor that we want to",
    "start": "575670",
    "end": "577470"
  },
  {
    "text": "paginate from if we're a prepending we",
    "start": "577470",
    "end": "580320"
  },
  {
    "text": "want the document snapshot from the",
    "start": "580320",
    "end": "582180"
  },
  {
    "text": "first item in the last batch otherwise",
    "start": "582180",
    "end": "584279"
  },
  {
    "text": "we want the last item in the last batch",
    "start": "584279",
    "end": "586400"
  },
  {
    "text": "if the array is empty we want to return",
    "start": "586400",
    "end": "589230"
  },
  {
    "text": "null otherwise we will get an error from",
    "start": "589230",
    "end": "591690"
  },
  {
    "text": "firestorm the more method is going to",
    "start": "591690",
    "end": "594720"
  },
  {
    "text": "make all subsequent queries first we",
    "start": "594720",
    "end": "597270"
  },
  {
    "text": "need to get the cursor for the",
    "start": "597270",
    "end": "599040"
  },
  {
    "text": "pagination and then we'll create a",
    "start": "599040",
    "end": "601589"
  },
  {
    "text": "firestorm reference it's identical to",
    "start": "601589",
    "end": "604980"
  },
  {
    "text": "the initial query except that it uses",
    "start": "604980",
    "end": "606930"
  },
  {
    "text": "start after and passing that cursor as",
    "start": "606930",
    "end": "609510"
  },
  {
    "text": "an argument",
    "start": "609510",
    "end": "610200"
  },
  {
    "text": "this tells firestore where to offset the",
    "start": "610200",
    "end": "612900"
  },
  {
    "text": "query from then once we have that set we",
    "start": "612900",
    "end": "615779"
  },
  {
    "text": "can call a map and update and our data",
    "start": "615779",
    "end": "617940"
  },
  {
    "text": "source will be updated that was a lot of",
    "start": "617940",
    "end": "620940"
  },
  {
    "text": "code to get through in 10 minutes but",
    "start": "620940",
    "end": "622470"
  },
  {
    "text": "make sure to check out the full article",
    "start": "622470",
    "end": "624150"
  },
  {
    "text": "for detailed explanations on all these",
    "start": "624150",
    "end": "626550"
  },
  {
    "text": "methods my goal is to give you a generic",
    "start": "626550",
    "end": "629250"
  },
  {
    "text": "service that can work with any firestore",
    "start": "629250",
    "end": "631170"
  },
  {
    "text": "collection and give you infinite scroll",
    "start": "631170",
    "end": "633300"
  },
  {
    "text": "either upwards or downwards that's it",
    "start": "633300",
    "end": "636720"
  },
  {
    "text": "for firestore infinite scroll with",
    "start": "636720",
    "end": "638610"
  },
  {
    "text": "angular if this video helped you please",
    "start": "638610",
    "end": "640110"
  },
  {
    "text": "like and subscribe and if you want twice",
    "start": "640110",
    "end": "642480"
  },
  {
    "text": "as much content every week consider",
    "start": "642480",
    "end": "644100"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "644100",
    "end": "645839"
  },
  {
    "text": "firebase comm you'll get exclusive",
    "start": "645839",
    "end": "647850"
  },
  {
    "text": "content a free copy of my book and one",
    "start": "647850",
    "end": "650160"
  },
  {
    "text": "on one project consulting thanks for",
    "start": "650160",
    "end": "652260"
  },
  {
    "text": "watching and I'll see you next time",
    "start": "652260",
    "end": "655880"
  },
  {
    "text": "[Music]",
    "start": "655990",
    "end": "660700"
  },
  {
    "text": "[Applause]",
    "start": "660700",
    "end": "661620"
  },
  {
    "text": "[Music]",
    "start": "661620",
    "end": "666110"
  }
]