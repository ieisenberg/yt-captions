[
  {
    "text": "SST an open source tool that actually",
    "start": "0",
    "end": "2940"
  },
  {
    "text": "makes it fun to build full stack web",
    "start": "2940",
    "end": "4860"
  },
  {
    "text": "applications with AWS the problem with",
    "start": "4860",
    "end": "7560"
  },
  {
    "text": "Amazon web services is that it has too",
    "start": "7560",
    "end": "9720"
  },
  {
    "text": "many web services and putting them all",
    "start": "9720",
    "end": "11460"
  },
  {
    "text": "together in a unified package can be",
    "start": "11460",
    "end": "13320"
  },
  {
    "text": "extremely complicated SST fixes this for",
    "start": "13320",
    "end": "15540"
  },
  {
    "text": "web developers by representing back-end",
    "start": "15540",
    "end": "17520"
  },
  {
    "text": "infrastructure as code typescript code",
    "start": "17520",
    "end": "19740"
  },
  {
    "text": "making it possible to integrate features",
    "start": "19740",
    "end": "21660"
  },
  {
    "text": "like S3 storage buckets Lambda functions",
    "start": "21660",
    "end": "24119"
  },
  {
    "text": "with API Gateway databases like RDS and",
    "start": "24119",
    "end": "26820"
  },
  {
    "text": "dynamodb Cognito user authentication",
    "start": "26820",
    "end": "28980"
  },
  {
    "text": "along with many other features without",
    "start": "28980",
    "end": "30720"
  },
  {
    "text": "ever touching the AWS console and it has",
    "start": "30720",
    "end": "33239"
  },
  {
    "text": "built-in deployment support for",
    "start": "33239",
    "end": "34680"
  },
  {
    "text": "Frameworks like nexjs Astro and spell",
    "start": "34680",
    "end": "37320"
  },
  {
    "text": "kit once initialized it provides a",
    "start": "37320",
    "end": "39120"
  },
  {
    "text": "variety of simple constructs that",
    "start": "39120",
    "end": "40920"
  },
  {
    "text": "represent infrastructure declaratively",
    "start": "40920",
    "end": "42660"
  },
  {
    "text": "under the hood this code is based on",
    "start": "42660",
    "end": "44340"
  },
  {
    "text": "Amazon's Cloud development kit and cloud",
    "start": "44340",
    "end": "46440"
  },
  {
    "text": "formation these constructs are grouped",
    "start": "46440",
    "end": "48300"
  },
  {
    "text": "together in Stacks which can be deployed",
    "start": "48300",
    "end": "50039"
  },
  {
    "text": "together or run locally with the SST Dev",
    "start": "50039",
    "end": "52260"
  },
  {
    "text": "command it provides a local development",
    "start": "52260",
    "end": "54120"
  },
  {
    "text": "environment with live reloading and",
    "start": "54120",
    "end": "55920"
  },
  {
    "text": "provides a web-based console to",
    "start": "55920",
    "end": "57360"
  },
  {
    "text": "managerstack minus the typical AWS pain",
    "start": "57360",
    "end": "59699"
  },
  {
    "text": "point to get started you'll need the AWS",
    "start": "59699",
    "end": "61980"
  },
  {
    "text": "CLI with credentials set up locally next",
    "start": "61980",
    "end": "64378"
  },
  {
    "text": "run the npx create SST command to drop",
    "start": "64379",
    "end": "67260"
  },
  {
    "text": "in a deployment solution to your",
    "start": "67260",
    "end": "68700"
  },
  {
    "text": "favorite framework or initialize it as a",
    "start": "68700",
    "end": "70799"
  },
  {
    "text": "standalone project this will scaffold a",
    "start": "70799",
    "end": "72540"
  },
  {
    "text": "mono repo and the packages directory is",
    "start": "72540",
    "end": "74640"
  },
  {
    "text": "where you write the code to power the",
    "start": "74640",
    "end": "76200"
  },
  {
    "text": "back end inside here we can write",
    "start": "76200",
    "end": "77700"
  },
  {
    "text": "serverless functions in typescript that",
    "start": "77700",
    "end": "79560"
  },
  {
    "text": "are powered by AWS Lambda and use API",
    "start": "79560",
    "end": "82020"
  },
  {
    "text": "Gateway as the front door to see it in",
    "start": "82020",
    "end": "84060"
  },
  {
    "text": "action run the dev command and that will",
    "start": "84060",
    "end": "85860"
  },
  {
    "text": "automatically deploy the required",
    "start": "85860",
    "end": "87180"
  },
  {
    "text": "resources to the cloud as we can see",
    "start": "87180",
    "end": "88979"
  },
  {
    "text": "here on the AWS console what's really",
    "start": "88979",
    "end": "90960"
  },
  {
    "text": "cool though is that we now have a local",
    "start": "90960",
    "end": "92520"
  },
  {
    "text": "development environment and if we go and",
    "start": "92520",
    "end": "94140"
  },
  {
    "text": "change the code in the function it's",
    "start": "94140",
    "end": "95520"
  },
  {
    "text": "immediately reflected in the cloud in",
    "start": "95520",
    "end": "97380"
  },
  {
    "text": "addition it spins up the local SST",
    "start": "97380",
    "end": "99180"
  },
  {
    "text": "console where you can view logs and",
    "start": "99180",
    "end": "101159"
  },
  {
    "text": "manager Stacks a stack is where you",
    "start": "101159",
    "end": "103079"
  },
  {
    "text": "define your infrastructure as code in",
    "start": "103079",
    "end": "105000"
  },
  {
    "text": "the stacks directory we have an API that",
    "start": "105000",
    "end": "107159"
  },
  {
    "text": "can map URLs to Lambda functions pretty",
    "start": "107159",
    "end": "109619"
  },
  {
    "text": "simple but we can expand on this by",
    "start": "109619",
    "end": "111360"
  },
  {
    "text": "adding an event bus which is able to",
    "start": "111360",
    "end": "113040"
  },
  {
    "text": "trigger Lambda functions based on",
    "start": "113040",
    "end": "114540"
  },
  {
    "text": "different events that happen in the",
    "start": "114540",
    "end": "115979"
  },
  {
    "text": "background like when a new database",
    "start": "115979",
    "end": "117420"
  },
  {
    "text": "record is Created from there we can",
    "start": "117420",
    "end": "118979"
  },
  {
    "text": "enable file uploads by adding the bucket",
    "start": "118979",
    "end": "121079"
  },
  {
    "text": "construct to the stack while we're at it",
    "start": "121079",
    "end": "122759"
  },
  {
    "text": "we might add a postgres database with",
    "start": "122759",
    "end": "124560"
  },
  {
    "text": "RDS and add the auth construct to enable",
    "start": "124560",
    "end": "127020"
  },
  {
    "text": "user authentication and we can even",
    "start": "127020",
    "end": "128700"
  },
  {
    "text": "Define cron jobs here that run on a",
    "start": "128700",
    "end": "130560"
  },
  {
    "text": "schedule and point to a specific Lambda",
    "start": "130560",
    "end": "132420"
  },
  {
    "text": "function and finally when the stack is",
    "start": "132420",
    "end": "133980"
  },
  {
    "text": "complete we can add it to the SST config",
    "start": "133980",
    "end": "136200"
  },
  {
    "text": "file then deploy it to the cloud with a",
    "start": "136200",
    "end": "138239"
  },
  {
    "text": "single command this has been SST in 100",
    "start": "138239",
    "end": "140640"
  },
  {
    "text": "seconds thanks for watching and I will",
    "start": "140640",
    "end": "142620"
  },
  {
    "text": "see you in the next one",
    "start": "142620",
    "end": "145580"
  }
]