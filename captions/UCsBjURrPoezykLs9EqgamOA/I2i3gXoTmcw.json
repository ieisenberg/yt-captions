[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "modeling data relationships is one of",
    "start": "30",
    "end": "2370"
  },
  {
    "text": "the single most important concerns for",
    "start": "2370",
    "end": "3990"
  },
  {
    "text": "an app developer in this episode I'm",
    "start": "3990",
    "end": "5850"
  },
  {
    "text": "going to show you how to build a",
    "start": "5850",
    "end": "6810"
  },
  {
    "text": "five-star review system from scratch",
    "start": "6810",
    "end": "8340"
  },
  {
    "text": "using the new fire stored document",
    "start": "8340",
    "end": "10380"
  },
  {
    "text": "database and angular my goal is to give",
    "start": "10380",
    "end": "13049"
  },
  {
    "text": "you a good foundation for building",
    "start": "13049",
    "end": "14340"
  },
  {
    "text": "many-to-many relationships in a no",
    "start": "14340",
    "end": "16560"
  },
  {
    "text": "sequel back-end environment the reason I",
    "start": "16560",
    "end": "18960"
  },
  {
    "text": "chose a five-star review system for this",
    "start": "18960",
    "end": "20460"
  },
  {
    "text": "episode is because the underlying",
    "start": "20460",
    "end": "22289"
  },
  {
    "text": "concepts can be applied to many",
    "start": "22289",
    "end": "23550"
  },
  {
    "text": "different features such as Facebook",
    "start": "23550",
    "end": "25350"
  },
  {
    "text": "Likes reddit votes Instagram hearts and",
    "start": "25350",
    "end": "27720"
  },
  {
    "text": "many other concepts similar to those one",
    "start": "27720",
    "end": "30330"
  },
  {
    "start": "30000",
    "end": "95000"
  },
  {
    "text": "of the most important best practices",
    "start": "30330",
    "end": "31920"
  },
  {
    "text": "with firestore is to create big",
    "start": "31920",
    "end": "33870"
  },
  {
    "text": "collections and small documents to build",
    "start": "33870",
    "end": "36870"
  },
  {
    "text": "this feature we're going to have three",
    "start": "36870",
    "end": "38010"
  },
  {
    "text": "collections in the root of the database",
    "start": "38010",
    "end": "39840"
  },
  {
    "text": "so this first collection is a user's",
    "start": "39840",
    "end": "42300"
  },
  {
    "text": "collection and the only attribute on the",
    "start": "42300",
    "end": "44910"
  },
  {
    "text": "document itself is the display name I",
    "start": "44910",
    "end": "47010"
  },
  {
    "text": "won't have time to cover user",
    "start": "47010",
    "end": "48239"
  },
  {
    "text": "authentication in this video but if",
    "start": "48239",
    "end": "49829"
  },
  {
    "text": "you're new to my channel make sure to",
    "start": "49829",
    "end": "50969"
  },
  {
    "text": "check out my previous firestore Roth",
    "start": "50969",
    "end": "53100"
  },
  {
    "text": "video to get up to speed on that so back",
    "start": "53100",
    "end": "56280"
  },
  {
    "text": "to the database our primary goal here is",
    "start": "56280",
    "end": "58440"
  },
  {
    "text": "to create a relationship between users",
    "start": "58440",
    "end": "60420"
  },
  {
    "text": "and movies through the Stars collection",
    "start": "60420",
    "end": "62719"
  },
  {
    "text": "so if you look at our movies document it",
    "start": "62719",
    "end": "65189"
  },
  {
    "text": "just has the image title and plot of the",
    "start": "65189",
    "end": "67710"
  },
  {
    "text": "movie if we jump over to the Stars",
    "start": "67710",
    "end": "69479"
  },
  {
    "text": "collection you'll see that's where all",
    "start": "69479",
    "end": "70890"
  },
  {
    "text": "the relational data is cat",
    "start": "70890",
    "end": "72450"
  },
  {
    "text": "each star document will save the movie",
    "start": "72450",
    "end": "74520"
  },
  {
    "text": "ID as well as the user ID and the value",
    "start": "74520",
    "end": "77220"
  },
  {
    "text": "of the rating and then because a user",
    "start": "77220",
    "end": "79200"
  },
  {
    "text": "can only post one review for each movie",
    "start": "79200",
    "end": "81150"
  },
  {
    "text": "I've also created a custom ID here to",
    "start": "81150",
    "end": "83460"
  },
  {
    "text": "ensure that there's no accidental data",
    "start": "83460",
    "end": "85439"
  },
  {
    "text": "duplication so we create the document ID",
    "start": "85439",
    "end": "87930"
  },
  {
    "text": "by concatenating that movie ID to the",
    "start": "87930",
    "end": "90450"
  },
  {
    "text": "user ID separated by an underscore and",
    "start": "90450",
    "end": "92820"
  },
  {
    "text": "you'll see this more once we get into",
    "start": "92820",
    "end": "94200"
  },
  {
    "text": "angular if you come from a sequel",
    "start": "94200",
    "end": "96119"
  },
  {
    "start": "95000",
    "end": "197000"
  },
  {
    "text": "background this is very similar to a",
    "start": "96119",
    "end": "97680"
  },
  {
    "text": "many-to-many through relationship so now",
    "start": "97680",
    "end": "100979"
  },
  {
    "text": "I'm jumping into my angular project I'm",
    "start": "100979",
    "end": "102960"
  },
  {
    "text": "assuming you have angularfire to version",
    "start": "102960",
    "end": "104909"
  },
  {
    "text": "5 installed what I'm going to be doing",
    "start": "104909",
    "end": "107130"
  },
  {
    "text": "today is to creating a very generic",
    "start": "107130",
    "end": "108540"
  },
  {
    "text": "middleman service that can connect",
    "start": "108540",
    "end": "110850"
  },
  {
    "text": "relationships between any two documents",
    "start": "110850",
    "end": "112920"
  },
  {
    "text": "to focus on the relationship aspect of",
    "start": "112920",
    "end": "115259"
  },
  {
    "text": "this feature I'm going to just hard code",
    "start": "115259",
    "end": "116880"
  },
  {
    "text": "a user document and movie document",
    "start": "116880",
    "end": "119520"
  },
  {
    "text": "directly in the app component so I'll",
    "start": "119520",
    "end": "121920"
  },
  {
    "text": "set up a variable for the user document",
    "start": "121920",
    "end": "124259"
  },
  {
    "text": "and movie document which are both",
    "start": "124259",
    "end": "125700"
  },
  {
    "text": "angular firestore document types and",
    "start": "125700",
    "end": "127799"
  },
  {
    "text": "then we'll also set another variable for",
    "start": "127799",
    "end": "129810"
  },
  {
    "text": "the user and the movie as an observable",
    "start": "129810",
    "end": "131790"
  },
  {
    "text": "then during ng on",
    "start": "131790",
    "end": "133880"
  },
  {
    "text": "we'll go ahead and load the documents so",
    "start": "133880",
    "end": "136400"
  },
  {
    "text": "in this case I'm just going to hard code",
    "start": "136400",
    "end": "137960"
  },
  {
    "text": "a user ID in here but in the real world",
    "start": "137960",
    "end": "139940"
  },
  {
    "text": "you would get this from an off service",
    "start": "139940",
    "end": "141530"
  },
  {
    "text": "or some other off mechanism and it'll do",
    "start": "141530",
    "end": "144710"
  },
  {
    "text": "the exact same thing for a movie",
    "start": "144710",
    "end": "146000"
  },
  {
    "text": "document but I'd like to point out that",
    "start": "146000",
    "end": "147500"
  },
  {
    "text": "these two documents never contain any",
    "start": "147500",
    "end": "149390"
  },
  {
    "text": "information about the other party it's",
    "start": "149390",
    "end": "151100"
  },
  {
    "text": "all handled through the middleman star",
    "start": "151100",
    "end": "152780"
  },
  {
    "text": "document that we're going to create",
    "start": "152780",
    "end": "153980"
  },
  {
    "text": "later then to turn these references into",
    "start": "153980",
    "end": "157100"
  },
  {
    "text": "observables we call value changes on",
    "start": "157100",
    "end": "159140"
  },
  {
    "text": "each of the documents we can get the",
    "start": "159140",
    "end": "161600"
  },
  {
    "text": "movie ID or user ID on the angularfire",
    "start": "161600",
    "end": "164240"
  },
  {
    "text": "document itself so we can set up a",
    "start": "164240",
    "end": "166970"
  },
  {
    "text": "getter here and then on the angularfire",
    "start": "166970",
    "end": "169610"
  },
  {
    "text": "store document we can call ref ID more",
    "start": "169610",
    "end": "172460"
  },
  {
    "text": "than anything setting up the getter just",
    "start": "172460",
    "end": "173900"
  },
  {
    "text": "helps clean up the code once we get to",
    "start": "173900",
    "end": "175430"
  },
  {
    "text": "the HTML so inside the app component",
    "start": "175430",
    "end": "178700"
  },
  {
    "text": "HTML I'm going to unwrap the movies",
    "start": "178700",
    "end": "181160"
  },
  {
    "text": "observable and I do that by just calling",
    "start": "181160",
    "end": "183500"
  },
  {
    "text": "movie async and then set it as a",
    "start": "183500",
    "end": "185600"
  },
  {
    "text": "template variable of M with that we can",
    "start": "185600",
    "end": "188510"
  },
  {
    "text": "display a title and display the image",
    "start": "188510",
    "end": "190640"
  },
  {
    "text": "URL as well as the movie plot and we'll",
    "start": "190640",
    "end": "193460"
  },
  {
    "text": "come back to this later after we create",
    "start": "193460",
    "end": "195080"
  },
  {
    "text": "the star review component but before we",
    "start": "195080",
    "end": "197750"
  },
  {
    "start": "197000",
    "end": "323000"
  },
  {
    "text": "do that we're first going to build our",
    "start": "197750",
    "end": "198890"
  },
  {
    "text": "service so run ng generate service star",
    "start": "198890",
    "end": "201770"
  },
  {
    "text": "and make sure to specify the app module",
    "start": "201770",
    "end": "204230"
  },
  {
    "text": "the goal of our service is to",
    "start": "204230",
    "end": "206060"
  },
  {
    "text": "communicate with firestore to build that",
    "start": "206060",
    "end": "208280"
  },
  {
    "text": "middle relationship in the star",
    "start": "208280",
    "end": "209960"
  },
  {
    "text": "collection so after importing",
    "start": "209960",
    "end": "212570"
  },
  {
    "text": "angularfire store i'm going to create an",
    "start": "212570",
    "end": "214580"
  },
  {
    "text": "interface here just to reinforce what a",
    "start": "214580",
    "end": "216740"
  },
  {
    "text": "start is so a star is just going to be",
    "start": "216740",
    "end": "219590"
  },
  {
    "text": "the user ID movie ID and then a value",
    "start": "219590",
    "end": "223340"
  },
  {
    "text": "for the star which brings us from 0.5 to",
    "start": "223340",
    "end": "226130"
  },
  {
    "text": "5 from there we can add angularfire",
    "start": "226130",
    "end": "229220"
  },
  {
    "text": "store to the constructor with that done",
    "start": "229220",
    "end": "231830"
  },
  {
    "text": "I want to show you why I have stars as a",
    "start": "231830",
    "end": "233270"
  },
  {
    "text": "root collection and not a sub collection",
    "start": "233270",
    "end": "235190"
  },
  {
    "text": "under users or movies so let's say we",
    "start": "235190",
    "end": "238160"
  },
  {
    "text": "wanted to get all of the movies that a",
    "start": "238160",
    "end": "239690"
  },
  {
    "text": "user has starred we could do that by",
    "start": "239690",
    "end": "241850"
  },
  {
    "text": "calling collection stars then use the",
    "start": "241850",
    "end": "244910"
  },
  {
    "text": "query callback with where to filter them",
    "start": "244910",
    "end": "247430"
  },
  {
    "text": "by the user ID firestore will",
    "start": "247430",
    "end": "249710"
  },
  {
    "text": "automatically index by the user ID so",
    "start": "249710",
    "end": "251840"
  },
  {
    "text": "this will be a fast query even if it's a",
    "start": "251840",
    "end": "253640"
  },
  {
    "text": "massive collection and then in this case",
    "start": "253640",
    "end": "255860"
  },
  {
    "text": "here we want to return the observable of",
    "start": "255860",
    "end": "257630"
  },
  {
    "text": "this query so we just call value changes",
    "start": "257630",
    "end": "259609"
  },
  {
    "text": "on it now the reason it's a root",
    "start": "259609",
    "end": "261709"
  },
  {
    "text": "collection is because we want to query",
    "start": "261710",
    "end": "263360"
  },
  {
    "text": "stars by their movie ID as well so we",
    "start": "263360",
    "end": "265910"
  },
  {
    "text": "can do the exact same thing just",
    "start": "265910",
    "end": "267580"
  },
  {
    "text": "watching out the user ID for the movie",
    "start": "267580",
    "end": "269770"
  },
  {
    "text": "ID if stars were nested as a sub",
    "start": "269770",
    "end": "272379"
  },
  {
    "text": "collection we'd be able to make one of",
    "start": "272379",
    "end": "274000"
  },
  {
    "text": "these queries but not both of them the",
    "start": "274000",
    "end": "276460"
  },
  {
    "text": "last thing we need from our service is",
    "start": "276460",
    "end": "277930"
  },
  {
    "text": "to set the actual relationship so we'll",
    "start": "277930",
    "end": "280780"
  },
  {
    "text": "create a method here that takes a user",
    "start": "280780",
    "end": "282460"
  },
  {
    "text": "ID movie ID and value of the star review",
    "start": "282460",
    "end": "285729"
  },
  {
    "text": "so we'll go ahead and set that to a",
    "start": "285729",
    "end": "288099"
  },
  {
    "text": "JavaScript object type to our star",
    "start": "288099",
    "end": "290110"
  },
  {
    "text": "interface then we can use this data to",
    "start": "290110",
    "end": "292750"
  },
  {
    "text": "also create a custom ID for our document",
    "start": "292750",
    "end": "295090"
  },
  {
    "text": "so I'm going to set that up as user ID",
    "start": "295090",
    "end": "297689"
  },
  {
    "text": "underscore movie ID this technique will",
    "start": "297689",
    "end": "300669"
  },
  {
    "text": "ensure that you don't have any data",
    "start": "300669",
    "end": "301870"
  },
  {
    "text": "duplication assuming you have unique",
    "start": "301870",
    "end": "303729"
  },
  {
    "text": "user IDs and movie IDs it also provides",
    "start": "303729",
    "end": "306250"
  },
  {
    "text": "a quick way to query a star document if",
    "start": "306250",
    "end": "308229"
  },
  {
    "text": "you already have a movie ID and user ID",
    "start": "308229",
    "end": "309969"
  },
  {
    "text": "somewhere else in your code so the only",
    "start": "309969",
    "end": "312310"
  },
  {
    "text": "thing left to do is make a reference to",
    "start": "312310",
    "end": "313750"
  },
  {
    "text": "this path and then call set with star",
    "start": "313750",
    "end": "316210"
  },
  {
    "text": "data that's what we need for now but you",
    "start": "316210",
    "end": "318340"
  },
  {
    "text": "might also want to add a delete method",
    "start": "318340",
    "end": "320050"
  },
  {
    "text": "if you want users to be able to remove",
    "start": "320050",
    "end": "321729"
  },
  {
    "text": "their past stars that's it for the",
    "start": "321729",
    "end": "324310"
  },
  {
    "start": "323000",
    "end": "610000"
  },
  {
    "text": "service now we can move on to the star",
    "start": "324310",
    "end": "326289"
  },
  {
    "text": "review component so after it's been",
    "start": "326289",
    "end": "328840"
  },
  {
    "text": "generated let's go ahead and first add",
    "start": "328840",
    "end": "330400"
  },
  {
    "text": "it to the app component so we're going",
    "start": "330400",
    "end": "332650"
  },
  {
    "text": "to pass it a movie ID and a user ID from",
    "start": "332650",
    "end": "335740"
  },
  {
    "text": "the parent component if you want to",
    "start": "335740",
    "end": "337569"
  },
  {
    "text": "learn more about this check out my",
    "start": "337569",
    "end": "338770"
  },
  {
    "text": "sharing data with components video but",
    "start": "338770",
    "end": "341199"
  },
  {
    "text": "all we're doing here is passing the",
    "start": "341199",
    "end": "342520"
  },
  {
    "text": "movie ID and user ID strings from the",
    "start": "342520",
    "end": "344770"
  },
  {
    "text": "parent to the child and we'll set that",
    "start": "344770",
    "end": "347020"
  },
  {
    "text": "up with the input decorator here in the",
    "start": "347020",
    "end": "348699"
  },
  {
    "text": "type script in just a second inside the",
    "start": "348699",
    "end": "351159"
  },
  {
    "text": "star review type script we'll go ahead",
    "start": "351159",
    "end": "352779"
  },
  {
    "text": "and import the service as well as the",
    "start": "352779",
    "end": "355629"
  },
  {
    "text": "input decorator from angular core then",
    "start": "355629",
    "end": "358539"
  },
  {
    "text": "we can declare our user ID and movie ID",
    "start": "358539",
    "end": "360639"
  },
  {
    "text": "variables with the decorator this just",
    "start": "360639",
    "end": "362979"
  },
  {
    "text": "tells angular to allow these variables",
    "start": "362979",
    "end": "364719"
  },
  {
    "text": "to be passed indirectly through the HTML",
    "start": "364719",
    "end": "367379"
  },
  {
    "text": "before we go any further let's look a",
    "start": "367379",
    "end": "369370"
  },
  {
    "text": "little closer at how this app works so",
    "start": "369370",
    "end": "371379"
  },
  {
    "text": "we have a current user here on the left",
    "start": "371379",
    "end": "372940"
  },
  {
    "text": "and then a movie on the right and if a",
    "start": "372940",
    "end": "375550"
  },
  {
    "text": "movie has no reviews it just says not",
    "start": "375550",
    "end": "377259"
  },
  {
    "text": "reviewed here the user can then hover",
    "start": "377259",
    "end": "379330"
  },
  {
    "text": "over the stars and when they click it it",
    "start": "379330",
    "end": "381190"
  },
  {
    "text": "will actually update the data in",
    "start": "381190",
    "end": "382539"
  },
  {
    "text": "firebase and it will also calculate the",
    "start": "382539",
    "end": "384819"
  },
  {
    "text": "average rating among all users that have",
    "start": "384819",
    "end": "387190"
  },
  {
    "text": "starred this movie so the next step will",
    "start": "387190",
    "end": "390219"
  },
  {
    "text": "be to set up by a variable for the Stars",
    "start": "390219",
    "end": "392229"
  },
  {
    "text": "observable then I'm going to set a",
    "start": "392229",
    "end": "394659"
  },
  {
    "text": "separate observable for the average",
    "start": "394659",
    "end": "396430"
  },
  {
    "text": "rating and we can use our star service",
    "start": "396430",
    "end": "399009"
  },
  {
    "text": "during ng on a net to retrieve the",
    "start": "399009",
    "end": "401350"
  },
  {
    "text": "actual observable list so in this case",
    "start": "401350",
    "end": "403780"
  },
  {
    "text": "we want to show all of the movie stars",
    "start": "403780",
    "end": "405580"
  },
  {
    "text": "so we just called it movie stars with",
    "start": "405580",
    "end": "407710"
  },
  {
    "text": "movie ID then we can use the rxjs map",
    "start": "407710",
    "end": "411430"
  },
  {
    "text": "operator to break this down into an",
    "start": "411430",
    "end": "414130"
  },
  {
    "text": "average rating after a calling map we're",
    "start": "414130",
    "end": "416500"
  },
  {
    "text": "going to have an observable array of",
    "start": "416500",
    "end": "418180"
  },
  {
    "text": "objects",
    "start": "418180",
    "end": "418960"
  },
  {
    "text": "so first we'll map these objects down to",
    "start": "418960",
    "end": "421210"
  },
  {
    "text": "just their number values in other words",
    "start": "421210",
    "end": "423580"
  },
  {
    "text": "the value that users have rated them and",
    "start": "423580",
    "end": "425890"
  },
  {
    "text": "then with that array of numbers we can",
    "start": "425890",
    "end": "428020"
  },
  {
    "text": "then reduce it down to its average this",
    "start": "428020",
    "end": "431320"
  },
  {
    "text": "code might look kind of ugly but this is",
    "start": "431320",
    "end": "433060"
  },
  {
    "text": "the standard way that you would get the",
    "start": "433060",
    "end": "434710"
  },
  {
    "text": "average of an array in plain JavaScript",
    "start": "434710",
    "end": "436660"
  },
  {
    "text": "and if that array is empty we're just",
    "start": "436660",
    "end": "439270"
  },
  {
    "text": "going to say not reviewed that takes",
    "start": "439270",
    "end": "441760"
  },
  {
    "text": "care of the observables but now we need",
    "start": "441760",
    "end": "443530"
  },
  {
    "text": "an event handler that will update",
    "start": "443530",
    "end": "445260"
  },
  {
    "text": "firestore when the user clicks on the",
    "start": "445260",
    "end": "447490"
  },
  {
    "text": "star icon so we already have the method",
    "start": "447490",
    "end": "450040"
  },
  {
    "text": "set up in the service so we just have to",
    "start": "450040",
    "end": "451810"
  },
  {
    "text": "pass the event handler a value and then",
    "start": "451810",
    "end": "454120"
  },
  {
    "text": "it will use the user ID movie ID and",
    "start": "454120",
    "end": "457120"
  },
  {
    "text": "that value to update firestore so let's",
    "start": "457120",
    "end": "461410"
  },
  {
    "text": "jump over to the HTML and put this all",
    "start": "461410",
    "end": "463360"
  },
  {
    "text": "together so for the average rating we",
    "start": "463360",
    "end": "465610"
  },
  {
    "text": "can just call async and we're good to go",
    "start": "465610",
    "end": "467830"
  },
  {
    "text": "it's already been mapped down to the",
    "start": "467830",
    "end": "469240"
  },
  {
    "text": "value that we want to show other users",
    "start": "469240",
    "end": "471790"
  },
  {
    "text": "that have starred a movie we can loop",
    "start": "471790",
    "end": "473770"
  },
  {
    "text": "over the star observable with the async",
    "start": "473770",
    "end": "475660"
  },
  {
    "text": "pipe and then just display some data",
    "start": "475660",
    "end": "477790"
  },
  {
    "text": "about that particular star so we'll say",
    "start": "477790",
    "end": "479980"
  },
  {
    "text": "this user ID gave this movie X amount of",
    "start": "479980",
    "end": "483640"
  },
  {
    "text": "stars so now we can actually build that",
    "start": "483640",
    "end": "486100"
  },
  {
    "text": "form where the user updates their star",
    "start": "486100",
    "end": "488230"
  },
  {
    "text": "rating a lot of this is CSS that I'm not",
    "start": "488230",
    "end": "490480"
  },
  {
    "text": "going to cover but you can get the full",
    "start": "490480",
    "end": "492010"
  },
  {
    "text": "code at the lesson link in the",
    "start": "492010",
    "end": "493900"
  },
  {
    "text": "description so we set up an NG container",
    "start": "493900",
    "end": "496840"
  },
  {
    "text": "here which basically allows you to loop",
    "start": "496840",
    "end": "499360"
  },
  {
    "text": "over something without affecting the Dom",
    "start": "499360",
    "end": "501220"
  },
  {
    "text": "in this case I'm just going to loop over",
    "start": "501220",
    "end": "503770"
  },
  {
    "text": "the integers of 5 through 1 I set up",
    "start": "503770",
    "end": "506350"
  },
  {
    "text": "this loop so they only have to create",
    "start": "506350",
    "end": "507490"
  },
  {
    "text": "two input fields rather than 10 so the",
    "start": "507490",
    "end": "510370"
  },
  {
    "text": "first inputs going to represent a full",
    "start": "510370",
    "end": "512169"
  },
  {
    "text": "star so what we can do is pass the",
    "start": "512169",
    "end": "514750"
  },
  {
    "text": "number down to our start handler so if",
    "start": "514750",
    "end": "517060"
  },
  {
    "text": "the user clicks the fifth star it'll",
    "start": "517060",
    "end": "518800"
  },
  {
    "text": "send a 5 star review up to firestorm and",
    "start": "518800",
    "end": "520930"
  },
  {
    "text": "then we need to set up an ID which is",
    "start": "520930",
    "end": "523390"
  },
  {
    "text": "different for each one so we'll just say",
    "start": "523390",
    "end": "525130"
  },
  {
    "text": "star plus whatever number we're looping",
    "start": "525130",
    "end": "527410"
  },
  {
    "text": "over and these are just HTML radio",
    "start": "527410",
    "end": "530320"
  },
  {
    "text": "buttons with some fancy CSS styling",
    "start": "530320",
    "end": "533200"
  },
  {
    "text": "each input also has a label and it's",
    "start": "533200",
    "end": "535420"
  },
  {
    "text": "important that the four attribute",
    "start": "535420",
    "end": "537100"
  },
  {
    "text": "matches the ID on the input exactly to",
    "start": "537100",
    "end": "540550"
  },
  {
    "text": "create a half star we can duplicate this",
    "start": "540550",
    "end": "542350"
  },
  {
    "text": "process we just have to subtract 0.5",
    "start": "542350",
    "end": "545290"
  },
  {
    "text": "from each number so when we call the",
    "start": "545290",
    "end": "547780"
  },
  {
    "text": "start handler will subtract 0.5 then we",
    "start": "547780",
    "end": "551170"
  },
  {
    "text": "also have different CSS styles on the",
    "start": "551170",
    "end": "552790"
  },
  {
    "text": "half star so that's why we have them",
    "start": "552790",
    "end": "554410"
  },
  {
    "text": "separated as two different inputs like",
    "start": "554410",
    "end": "556420"
  },
  {
    "text": "this the CSS to make this look good on",
    "start": "556420",
    "end": "559360"
  },
  {
    "text": "the front end is actually based on a",
    "start": "559360",
    "end": "560590"
  },
  {
    "text": "code pin so I'll have a link for that in",
    "start": "560590",
    "end": "562420"
  },
  {
    "text": "the description and you can also get the",
    "start": "562420",
    "end": "564190"
  },
  {
    "text": "full code at angular firebase com",
    "start": "564190",
    "end": "566170"
  },
  {
    "text": "so if we check it out on the front end",
    "start": "566170",
    "end": "568090"
  },
  {
    "text": "you can see we have the movie here with",
    "start": "568090",
    "end": "569620"
  },
  {
    "text": "just one average rating of 2.5 if we had",
    "start": "569620",
    "end": "572830"
  },
  {
    "text": "another 5 star rating that average",
    "start": "572830",
    "end": "574570"
  },
  {
    "text": "changes in real-time to 3.75 then if we",
    "start": "574570",
    "end": "579100"
  },
  {
    "text": "go ahead and add another review this",
    "start": "579100",
    "end": "580750"
  },
  {
    "text": "time with firestore pulled up you can",
    "start": "580750",
    "end": "582430"
  },
  {
    "text": "see that the values are being saved in",
    "start": "582430",
    "end": "584050"
  },
  {
    "text": "the back end and real-time as well",
    "start": "584050",
    "end": "586080"
  },
  {
    "text": "that's it four star ratings with angular",
    "start": "586080",
    "end": "588910"
  },
  {
    "text": "and firestorm if this video helped you",
    "start": "588910",
    "end": "590740"
  },
  {
    "text": "please like and subscribe and if you",
    "start": "590740",
    "end": "592690"
  },
  {
    "text": "want to take your app to the next level",
    "start": "592690",
    "end": "593890"
  },
  {
    "text": "with exclusive pro con tent consider",
    "start": "593890",
    "end": "595510"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "595510",
    "end": "596980"
  },
  {
    "text": "firebase com",
    "start": "596980",
    "end": "598180"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "598180",
    "end": "599860"
  },
  {
    "text": "next time",
    "start": "599860",
    "end": "600240"
  },
  {
    "text": "[Music]",
    "start": "600240",
    "end": "603980"
  },
  {
    "text": "[Applause]",
    "start": "603980",
    "end": "604900"
  },
  {
    "text": "[Music]",
    "start": "604900",
    "end": "609380"
  }
]