[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6410"
  },
  {
    "text": "one of the more challenging features to",
    "start": "6410",
    "end": "8670"
  },
  {
    "text": "build on a web application is a",
    "start": "8670",
    "end": "10139"
  },
  {
    "text": "drag-and-drop sortable list and it's",
    "start": "10139",
    "end": "12420"
  },
  {
    "text": "even more challenging if you need to",
    "start": "12420",
    "end": "13830"
  },
  {
    "text": "persist the data in a back-end database",
    "start": "13830",
    "end": "15680"
  },
  {
    "text": "instead of trying to reinvent the wheel",
    "start": "15680",
    "end": "17580"
  },
  {
    "text": "we're going to use a library called",
    "start": "17580",
    "end": "19230"
  },
  {
    "text": "draggable that's maintained by shop live",
    "start": "19230",
    "end": "21210"
  },
  {
    "text": "it's relatively lightweight and we can",
    "start": "21210",
    "end": "23130"
  },
  {
    "text": "wrap it in angular to make drag and drop",
    "start": "23130",
    "end": "24840"
  },
  {
    "text": "features much more enjoyable to code if",
    "start": "24840",
    "end": "26939"
  },
  {
    "text": "you're new the channel like and",
    "start": "26939",
    "end": "28289"
  },
  {
    "text": "subscribe and you can find the source",
    "start": "28289",
    "end": "29849"
  },
  {
    "text": "code on angular firebase comm what we're",
    "start": "29849",
    "end": "32250"
  },
  {
    "start": "30000",
    "end": "65000"
  },
  {
    "text": "building today is a sortable list of",
    "start": "32250",
    "end": "33899"
  },
  {
    "text": "emojis the user can add or remove items",
    "start": "33899",
    "end": "36090"
  },
  {
    "text": "from the list and they can drag items to",
    "start": "36090",
    "end": "38340"
  },
  {
    "text": "change the order and have that order be",
    "start": "38340",
    "end": "40200"
  },
  {
    "text": "saved in the database this is a pretty",
    "start": "40200",
    "end": "42270"
  },
  {
    "text": "complex thing to do from scratch because",
    "start": "42270",
    "end": "44010"
  },
  {
    "text": "if you notice when we drag an item it",
    "start": "44010",
    "end": "45960"
  },
  {
    "text": "creates a mirror of the original element",
    "start": "45960",
    "end": "47640"
  },
  {
    "text": "and toggles a whole bunch of CSS classes",
    "start": "47640",
    "end": "49620"
  },
  {
    "text": "on the container and the individual",
    "start": "49620",
    "end": "51690"
  },
  {
    "text": "items themselves draggable will make",
    "start": "51690",
    "end": "53940"
  },
  {
    "text": "this feature surprisingly easy but also",
    "start": "53940",
    "end": "56039"
  },
  {
    "text": "give us enough flexibility to build",
    "start": "56039",
    "end": "57600"
  },
  {
    "text": "something unique in addition firestore",
    "start": "57600",
    "end": "59699"
  },
  {
    "text": "recently released a couple of new helper",
    "start": "59699",
    "end": "61530"
  },
  {
    "text": "methods that make it easy to add or",
    "start": "61530",
    "end": "63570"
  },
  {
    "text": "remove elements from an array so we'll",
    "start": "63570",
    "end": "65790"
  },
  {
    "start": "65000",
    "end": "110000"
  },
  {
    "text": "take a look at those as well but the",
    "start": "65790",
    "end": "67229"
  },
  {
    "text": "first thing you need to get started is",
    "start": "67229",
    "end": "68580"
  },
  {
    "text": "an angular app with angular fire",
    "start": "68580",
    "end": "70350"
  },
  {
    "text": "installed from there we'll go to the",
    "start": "70350",
    "end": "72030"
  },
  {
    "text": "command line and install draggable with",
    "start": "72030",
    "end": "73890"
  },
  {
    "text": "NPM there are two main elements to this",
    "start": "73890",
    "end": "77250"
  },
  {
    "text": "demo first we have a smart component",
    "start": "77250",
    "end": "79259"
  },
  {
    "text": "which is our emoji component and it",
    "start": "79259",
    "end": "81119"
  },
  {
    "text": "handles retrieving items from the",
    "start": "81119",
    "end": "82500"
  },
  {
    "text": "database and can also add or remove new",
    "start": "82500",
    "end": "84900"
  },
  {
    "text": "emojis to the list then we have a",
    "start": "84900",
    "end": "86700"
  },
  {
    "text": "directive called sortable which I'm",
    "start": "86700",
    "end": "88350"
  },
  {
    "text": "going to call our dumb component because",
    "start": "88350",
    "end": "90270"
  },
  {
    "text": "a directive is essentially just a",
    "start": "90270",
    "end": "91950"
  },
  {
    "text": "component that doesn't have a custom",
    "start": "91950",
    "end": "93659"
  },
  {
    "text": "HTML template it can do pretty much",
    "start": "93659",
    "end": "95820"
  },
  {
    "text": "everything a component can do but",
    "start": "95820",
    "end": "97380"
  },
  {
    "text": "instead it attaches itself to a host",
    "start": "97380",
    "end": "99210"
  },
  {
    "text": "element and extends the functionality of",
    "start": "99210",
    "end": "101189"
  },
  {
    "text": "that element when working with sort of a",
    "start": "101189",
    "end": "103229"
  },
  {
    "text": "list like this you'll usually attach",
    "start": "103229",
    "end": "104759"
  },
  {
    "text": "this to an unordered list and then have",
    "start": "104759",
    "end": "106950"
  },
  {
    "text": "your list items be sortable within it",
    "start": "106950",
    "end": "109259"
  },
  {
    "text": "we'll start by building out the",
    "start": "109259",
    "end": "110850"
  },
  {
    "start": "110000",
    "end": "202000"
  },
  {
    "text": "directive and you'll notice that we're",
    "start": "110850",
    "end": "112649"
  },
  {
    "text": "importing a bunch of things here from",
    "start": "112649",
    "end": "113939"
  },
  {
    "text": "angular core and this is also where",
    "start": "113939",
    "end": "116219"
  },
  {
    "text": "we'll import sortable from Shopify",
    "start": "116219",
    "end": "118290"
  },
  {
    "text": "draggable we're going to implement the",
    "start": "118290",
    "end": "120509"
  },
  {
    "text": "after view and net lifecycle hook on",
    "start": "120509",
    "end": "122340"
  },
  {
    "text": "this directive just so we know that all",
    "start": "122340",
    "end": "124200"
  },
  {
    "text": "of the children elements are available",
    "start": "124200",
    "end": "125579"
  },
  {
    "text": "once we start running the sortable code",
    "start": "125579",
    "end": "127770"
  },
  {
    "text": "on it then we're going to have it emit a",
    "start": "127770",
    "end": "130259"
  },
  {
    "text": "custom event that has the new order of",
    "start": "130259",
    "end": "132270"
  },
  {
    "text": "the sorted item",
    "start": "132270",
    "end": "133550"
  },
  {
    "text": "in order to be able to do that we first",
    "start": "133550",
    "end": "135530"
  },
  {
    "text": "need to pass in the initial items which",
    "start": "135530",
    "end": "137660"
  },
  {
    "text": "we'll do with an input property on the",
    "start": "137660",
    "end": "139580"
  },
  {
    "text": "directive then after the items have been",
    "start": "139580",
    "end": "141710"
  },
  {
    "text": "sorted will emit our own custom event by",
    "start": "141710",
    "end": "144020"
  },
  {
    "text": "using the output decorator and an event",
    "start": "144020",
    "end": "146180"
  },
  {
    "text": "emitter there's quite a few different",
    "start": "146180",
    "end": "147980"
  },
  {
    "text": "events you can track here so I've",
    "start": "147980",
    "end": "149630"
  },
  {
    "text": "commented those out in case you need",
    "start": "149630",
    "end": "151130"
  },
  {
    "text": "them the only one we need is when the",
    "start": "151130",
    "end": "152810"
  },
  {
    "text": "actual sorting has been finished then",
    "start": "152810",
    "end": "155570"
  },
  {
    "text": "we'll inject element ref in the",
    "start": "155570",
    "end": "156890"
  },
  {
    "text": "constructor which will give us access to",
    "start": "156890",
    "end": "158690"
  },
  {
    "text": "the Dom element which in this case",
    "start": "158690",
    "end": "160460"
  },
  {
    "text": "should be an unordered list so once",
    "start": "160460",
    "end": "162800"
  },
  {
    "text": "that's done we can initialize sortable",
    "start": "162800",
    "end": "164600"
  },
  {
    "text": "by creating a new instance of the class",
    "start": "164600",
    "end": "166370"
  },
  {
    "text": "and then passing it the element ref",
    "start": "166370",
    "end": "168800"
  },
  {
    "text": "native element then it takes a second",
    "start": "168800",
    "end": "171200"
  },
  {
    "text": "argument with some options we're going",
    "start": "171200",
    "end": "172910"
  },
  {
    "text": "to specify the draggable elements as the",
    "start": "172910",
    "end": "175190"
  },
  {
    "text": "list items within that list the",
    "start": "175190",
    "end": "177440"
  },
  {
    "text": "draggable library is going to emit its",
    "start": "177440",
    "end": "179330"
  },
  {
    "text": "own custom events which we can intercept",
    "start": "179330",
    "end": "181790"
  },
  {
    "text": "here to emit our own custom event that",
    "start": "181790",
    "end": "183860"
  },
  {
    "text": "will have the newly sorted list again",
    "start": "183860",
    "end": "186260"
  },
  {
    "text": "there are multiple custom events that",
    "start": "186260",
    "end": "187670"
  },
  {
    "text": "you might need but the one that we care",
    "start": "187670",
    "end": "189320"
  },
  {
    "text": "about is sortable stop at that point we",
    "start": "189320",
    "end": "191720"
  },
  {
    "text": "know the user is done sorting the list",
    "start": "191720",
    "end": "193100"
  },
  {
    "text": "so we'll go ahead and take the initial",
    "start": "193100",
    "end": "194930"
  },
  {
    "text": "array reorder it and then you mitt that",
    "start": "194930",
    "end": "196970"
  },
  {
    "text": "out through our custom event emitter so",
    "start": "196970",
    "end": "198860"
  },
  {
    "text": "the parent component can listen to it",
    "start": "198860",
    "end": "200480"
  },
  {
    "text": "and handle it accordingly the sortable",
    "start": "200480",
    "end": "203090"
  },
  {
    "start": "202000",
    "end": "235000"
  },
  {
    "text": "stop event keeps track of all the",
    "start": "203090",
    "end": "204920"
  },
  {
    "text": "elements in the list and it will give us",
    "start": "204920",
    "end": "206600"
  },
  {
    "text": "the new index and the old index of the",
    "start": "206600",
    "end": "209030"
  },
  {
    "text": "item that was moved so we'll use this",
    "start": "209030",
    "end": "211100"
  },
  {
    "text": "method as just a context for mutating",
    "start": "211100",
    "end": "213380"
  },
  {
    "text": "the original data so what we can do here",
    "start": "213380",
    "end": "215780"
  },
  {
    "text": "is take the original data as our",
    "start": "215780",
    "end": "217220"
  },
  {
    "text": "starting point then we can splice off",
    "start": "217220",
    "end": "219140"
  },
  {
    "text": "the old index and then Reese Pleiss it",
    "start": "219140",
    "end": "221420"
  },
  {
    "text": "back into the new index once we have the",
    "start": "221420",
    "end": "224060"
  },
  {
    "text": "array in the format that we want we can",
    "start": "224060",
    "end": "225920"
  },
  {
    "text": "go ahead and omit it out as the value",
    "start": "225920",
    "end": "227900"
  },
  {
    "text": "from our custom event in the next step",
    "start": "227900",
    "end": "230420"
  },
  {
    "text": "we'll have the parent component listen",
    "start": "230420",
    "end": "231740"
  },
  {
    "text": "to this event and then update the",
    "start": "231740",
    "end": "233150"
  },
  {
    "text": "firestore database with the new value",
    "start": "233150",
    "end": "234950"
  },
  {
    "text": "now that we have our directive finished",
    "start": "234950",
    "end": "236959"
  },
  {
    "start": "235000",
    "end": "289000"
  },
  {
    "text": "we'll go into the HTML for the component",
    "start": "236959",
    "end": "239420"
  },
  {
    "text": "we can just insert it into an unordered",
    "start": "239420",
    "end": "241910"
  },
  {
    "text": "list and that will give us access to",
    "start": "241910",
    "end": "243590"
  },
  {
    "text": "both its input properties as well as its",
    "start": "243590",
    "end": "245870"
  },
  {
    "text": "output properties the data that we read",
    "start": "245870",
    "end": "248300"
  },
  {
    "text": "from the database will be an observable",
    "start": "248300",
    "end": "249980"
  },
  {
    "text": "so I'm doing an NG if statement here",
    "start": "249980",
    "end": "252200"
  },
  {
    "text": "with the document and setting that",
    "start": "252200",
    "end": "253910"
  },
  {
    "text": "document as a template variable then",
    "start": "253910",
    "end": "256220"
  },
  {
    "text": "we'll pass that to the data input on the",
    "start": "256220",
    "end": "258709"
  },
  {
    "text": "directive and then lastly we will listen",
    "start": "258709",
    "end": "261350"
  },
  {
    "text": "to our custom stop event and then we'll",
    "start": "261350",
    "end": "263360"
  },
  {
    "text": "write an event handler that will update",
    "start": "263360",
    "end": "265070"
  },
  {
    "text": "the database when that fire",
    "start": "265070",
    "end": "266729"
  },
  {
    "text": "now we can loop over the array of emojis",
    "start": "266729",
    "end": "269250"
  },
  {
    "text": "and render a list item for each one then",
    "start": "269250",
    "end": "272009"
  },
  {
    "text": "while working in HTML I want to add a",
    "start": "272009",
    "end": "273599"
  },
  {
    "text": "couple of extra things first I'll add",
    "start": "273599",
    "end": "275490"
  },
  {
    "text": "another button here that the user can",
    "start": "275490",
    "end": "277259"
  },
  {
    "text": "click to remove an item from an array",
    "start": "277259",
    "end": "279210"
  },
  {
    "text": "then I'll move outside of our loop and",
    "start": "279210",
    "end": "281370"
  },
  {
    "text": "add an additional method that we can use",
    "start": "281370",
    "end": "283020"
  },
  {
    "text": "to add an additional emoji to the array",
    "start": "283020",
    "end": "285360"
  },
  {
    "text": "and these are mostly just so I can show",
    "start": "285360",
    "end": "287219"
  },
  {
    "text": "you the new array methods and firestore",
    "start": "287219",
    "end": "289110"
  },
  {
    "text": "now we'll go into our component type",
    "start": "289110",
    "end": "291210"
  },
  {
    "text": "script and finish this feature out I am",
    "start": "291210",
    "end": "294000"
  },
  {
    "text": "importing an angular fire store and then",
    "start": "294000",
    "end": "296099"
  },
  {
    "text": "also fires store directly from the",
    "start": "296099",
    "end": "297930"
  },
  {
    "text": "firebase app namespace we can inject",
    "start": "297930",
    "end": "300659"
  },
  {
    "text": "angular fire store in the constructor",
    "start": "300659",
    "end": "302250"
  },
  {
    "text": "and then we'll set up one variable for",
    "start": "302250",
    "end": "304469"
  },
  {
    "text": "our document reference so we can make",
    "start": "304469",
    "end": "306180"
  },
  {
    "text": "updates on it and then another one for",
    "start": "306180",
    "end": "307889"
  },
  {
    "text": "the actual observable data then I'll go",
    "start": "307889",
    "end": "310800"
  },
  {
    "text": "ahead and define those during ng on an",
    "start": "310800",
    "end": "312509"
  },
  {
    "text": "it for now I'm just going to point to a",
    "start": "312509",
    "end": "314460"
  },
  {
    "text": "dummy document that I have saved in the",
    "start": "314460",
    "end": "316409"
  },
  {
    "text": "emojis collection then we can define our",
    "start": "316409",
    "end": "318690"
  },
  {
    "text": "observable of that document by calling",
    "start": "318690",
    "end": "320729"
  },
  {
    "text": "value changes on the reference here's",
    "start": "320729",
    "end": "322979"
  },
  {
    "text": "what that document actually looks like",
    "start": "322979",
    "end": "324300"
  },
  {
    "text": "in the database we have an array data",
    "start": "324300",
    "end": "326129"
  },
  {
    "text": "structure here called faves and it",
    "start": "326129",
    "end": "328259"
  },
  {
    "text": "currently has three different emojis in",
    "start": "328259",
    "end": "329669"
  },
  {
    "text": "it when the user sorts this list we can",
    "start": "329669",
    "end": "332159"
  },
  {
    "text": "update the array on fire store by simply",
    "start": "332159",
    "end": "334139"
  },
  {
    "text": "making a reference to the document and",
    "start": "334139",
    "end": "336120"
  },
  {
    "text": "calling update with the new array we set",
    "start": "336120",
    "end": "338819"
  },
  {
    "text": "up the event emitter in the directive to",
    "start": "338819",
    "end": "340710"
  },
  {
    "text": "send the newly sorted array so this is",
    "start": "340710",
    "end": "342779"
  },
  {
    "text": "all the code we need to update the",
    "start": "342779",
    "end": "344490"
  },
  {
    "text": "document on fire store but if you want",
    "start": "344490",
    "end": "346650"
  },
  {
    "start": "345000",
    "end": "393000"
  },
  {
    "text": "to add a single item to the array one",
    "start": "346650",
    "end": "348839"
  },
  {
    "text": "way to do that is with the new fire",
    "start": "348839",
    "end": "350129"
  },
  {
    "text": "store or a union method which will",
    "start": "350129",
    "end": "352169"
  },
  {
    "text": "ensure that a unique item is added to",
    "start": "352169",
    "end": "354270"
  },
  {
    "text": "the existing array this is really nice",
    "start": "354270",
    "end": "356190"
  },
  {
    "text": "when you want to enforce uniqueness in",
    "start": "356190",
    "end": "357990"
  },
  {
    "text": "the array which is exactly what we want",
    "start": "357990",
    "end": "359430"
  },
  {
    "text": "to do here so we'll call fire store",
    "start": "359430",
    "end": "361319"
  },
  {
    "text": "field value array Union and then pass in",
    "start": "361319",
    "end": "364349"
  },
  {
    "text": "the element that we want to add to it if",
    "start": "364349",
    "end": "367259"
  },
  {
    "text": "that value already exists in the array",
    "start": "367259",
    "end": "368819"
  },
  {
    "text": "then nothing will happen but otherwise",
    "start": "368819",
    "end": "370560"
  },
  {
    "text": "it will append that item to the end of",
    "start": "370560",
    "end": "372539"
  },
  {
    "text": "the array you can also remove items from",
    "start": "372539",
    "end": "374940"
  },
  {
    "text": "the array which is also very useful",
    "start": "374940",
    "end": "376409"
  },
  {
    "text": "because a lot of times you don't already",
    "start": "376409",
    "end": "378150"
  },
  {
    "text": "know the index of the item and you just",
    "start": "378150",
    "end": "380009"
  },
  {
    "text": "want it gone so fire store field value",
    "start": "380009",
    "end": "382529"
  },
  {
    "text": "array remove will find that element in",
    "start": "382529",
    "end": "384690"
  },
  {
    "text": "the array and remove it so that takes",
    "start": "384690",
    "end": "386940"
  },
  {
    "text": "care of all of our typescript code but",
    "start": "386940",
    "end": "388529"
  },
  {
    "text": "in order to make drag-and-drop look good",
    "start": "388529",
    "end": "390120"
  },
  {
    "text": "you're going to have to spend quite a",
    "start": "390120",
    "end": "391349"
  },
  {
    "text": "bit of time in your CSS styling one of",
    "start": "391349",
    "end": "393810"
  },
  {
    "start": "393000",
    "end": "476000"
  },
  {
    "text": "the cool things about draggable is that",
    "start": "393810",
    "end": "395459"
  },
  {
    "text": "it will add a whole bunch of different",
    "start": "395459",
    "end": "396509"
  },
  {
    "text": "CSS classes to your elements",
    "start": "396509",
    "end": "398670"
  },
  {
    "text": "depending on what state they're in",
    "start": "398670",
    "end": "399990"
  },
  {
    "text": "within the draggable list for example we",
    "start": "399990",
    "end": "402630"
  },
  {
    "text": "might want to add a style to the",
    "start": "402630",
    "end": "404250"
  },
  {
    "text": "container element when it's being",
    "start": "404250",
    "end": "405480"
  },
  {
    "text": "dragged like a blue border then the",
    "start": "405480",
    "end": "408090"
  },
  {
    "text": "source element that's being dragged we",
    "start": "408090",
    "end": "409650"
  },
  {
    "text": "might want to make that a lighter color",
    "start": "409650",
    "end": "411030"
  },
  {
    "text": "and scale it down a little bit then once",
    "start": "411030",
    "end": "413760"
  },
  {
    "text": "the items placed we'll go ahead and",
    "start": "413760",
    "end": "415170"
  },
  {
    "text": "color the background to green and",
    "start": "415170",
    "end": "416760"
  },
  {
    "text": "draggable will remove this class after a",
    "start": "416760",
    "end": "418770"
  },
  {
    "text": "second so we can get that green flashing",
    "start": "418770",
    "end": "421170"
  },
  {
    "text": "effect when the item is set and another",
    "start": "421170",
    "end": "423510"
  },
  {
    "text": "cool thing draggable does is that it",
    "start": "423510",
    "end": "425070"
  },
  {
    "text": "creates a mirror element of the item",
    "start": "425070",
    "end": "427020"
  },
  {
    "text": "that was selected so you can use that to",
    "start": "427020",
    "end": "429030"
  },
  {
    "text": "build adding more complex UI and to",
    "start": "429030",
    "end": "431160"
  },
  {
    "text": "handle things like animations when we go",
    "start": "431160",
    "end": "433680"
  },
  {
    "text": "to our demo you can see that a lot of",
    "start": "433680",
    "end": "435270"
  },
  {
    "text": "different classes are being swapped out",
    "start": "435270",
    "end": "437010"
  },
  {
    "text": "on the elements as we drag things around",
    "start": "437010",
    "end": "438840"
  },
  {
    "text": "here and as you can imagine doing this",
    "start": "438840",
    "end": "441180"
  },
  {
    "text": "kind of stuff reliably from scratch",
    "start": "441180",
    "end": "442740"
  },
  {
    "text": "takes a lot of time and effort so using",
    "start": "442740",
    "end": "444720"
  },
  {
    "text": "a library like draggable is just going",
    "start": "444720",
    "end": "446550"
  },
  {
    "text": "to make your life a lot easier I'm gonna",
    "start": "446550",
    "end": "448260"
  },
  {
    "text": "go ahead and wrap up the video there if",
    "start": "448260",
    "end": "449640"
  },
  {
    "text": "it helped you please like and subscribe",
    "start": "449640",
    "end": "450900"
  },
  {
    "text": "and if you want to take your development",
    "start": "450900",
    "end": "453270"
  },
  {
    "text": "to the next level consider becoming a",
    "start": "453270",
    "end": "454980"
  },
  {
    "text": "pro member at angular firebase comm to",
    "start": "454980",
    "end": "457500"
  },
  {
    "text": "get access to all kinds of advanced",
    "start": "457500",
    "end": "459150"
  },
  {
    "text": "exclusive content designed to help you",
    "start": "459150",
    "end": "460860"
  },
  {
    "text": "build and ship your app faster thanks",
    "start": "460860",
    "end": "462810"
  },
  {
    "text": "for watching and I'll talk to you soon",
    "start": "462810",
    "end": "466700"
  }
]