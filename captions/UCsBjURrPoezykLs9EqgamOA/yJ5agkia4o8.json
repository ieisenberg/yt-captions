[
  {
    "text": "fomo fear of missing out is the social",
    "start": "80",
    "end": "2399"
  },
  {
    "text": "anxiety you feel when all your friends",
    "start": "2399",
    "end": "4160"
  },
  {
    "text": "get invited to timmy's birthday party",
    "start": "4160",
    "end": "6080"
  },
  {
    "text": "but you're stuck at home watching tv",
    "start": "6080",
    "end": "7839"
  },
  {
    "text": "with your creepy uncle we live in a",
    "start": "7839",
    "end": "9519"
  },
  {
    "text": "world where almost everybody is",
    "start": "9519",
    "end": "11120"
  },
  {
    "text": "psychologically dependent on social",
    "start": "11120",
    "end": "12880"
  },
  {
    "text": "media and that's great news if you're an",
    "start": "12880",
    "end": "14559"
  },
  {
    "text": "app developer because it's easy to",
    "start": "14559",
    "end": "15920"
  },
  {
    "text": "harness people's social anxiety to grow",
    "start": "15920",
    "end": "18000"
  },
  {
    "text": "your user base and make your vc backers",
    "start": "18000",
    "end": "20240"
  },
  {
    "text": "unbelievably rich and happy in today's",
    "start": "20240",
    "end": "22240"
  },
  {
    "text": "tutorial you'll learn how to manipulate",
    "start": "22240",
    "end": "24160"
  },
  {
    "text": "fomo from a marketing perspective",
    "start": "24160",
    "end": "26000"
  },
  {
    "text": "by building an invite-only app inspired",
    "start": "26000",
    "end": "28160"
  },
  {
    "text": "by clubhouse from a technical",
    "start": "28160",
    "end": "29599"
  },
  {
    "text": "perspective",
    "start": "29599",
    "end": "30400"
  },
  {
    "text": "marketers have been using fomo for",
    "start": "30400",
    "end": "32238"
  },
  {
    "text": "thousands of years but the modern term",
    "start": "32239",
    "end": "34079"
  },
  {
    "text": "was coined in 1996 by dr dan herman",
    "start": "34079",
    "end": "37200"
  },
  {
    "text": "it's used shamelessly as a marketing",
    "start": "37200",
    "end": "38960"
  },
  {
    "text": "technique all over the tech world",
    "start": "38960",
    "end": "40719"
  },
  {
    "text": "buy bitcoin get on tick tock get a",
    "start": "40719",
    "end": "42800"
  },
  {
    "text": "google plus invite and most recently",
    "start": "42800",
    "end": "44800"
  },
  {
    "text": "get on clubhouse clubhouse as the name",
    "start": "44800",
    "end": "46960"
  },
  {
    "text": "implies is an invite-only app",
    "start": "46960",
    "end": "48879"
  },
  {
    "text": "where you can listen to people talk",
    "start": "48879",
    "end": "50320"
  },
  {
    "text": "about stuff like elon musk creating more",
    "start": "50320",
    "end": "52399"
  },
  {
    "text": "fomo for bitcoin for example",
    "start": "52399",
    "end": "54239"
  },
  {
    "text": "as an end user it's kind of like being",
    "start": "54239",
    "end": "56000"
  },
  {
    "text": "in an office building where you get to",
    "start": "56000",
    "end": "57520"
  },
  {
    "text": "go to a bunch of meetings all day",
    "start": "57520",
    "end": "59039"
  },
  {
    "text": "sounds like fun but you can only get in",
    "start": "59039",
    "end": "60879"
  },
  {
    "text": "the clubhouse if someone invites you",
    "start": "60879",
    "end": "62480"
  },
  {
    "text": "with your phone number",
    "start": "62480",
    "end": "63680"
  },
  {
    "text": "but once you're in you then get two",
    "start": "63680",
    "end": "65360"
  },
  {
    "text": "invites to send to your best friends",
    "start": "65360",
    "end": "67040"
  },
  {
    "text": "then they invite two of their best",
    "start": "67040",
    "end": "68240"
  },
  {
    "text": "friends and the cycle continues until",
    "start": "68240",
    "end": "70080"
  },
  {
    "text": "you have a massive fomo pyramid",
    "start": "70080",
    "end": "72080"
  },
  {
    "text": "it's not a pyramid scheme it is a it's",
    "start": "72080",
    "end": "74080"
  },
  {
    "text": "not even a scheme per se",
    "start": "74080",
    "end": "75600"
  },
  {
    "text": "it's and that's a much more cost",
    "start": "75600",
    "end": "77040"
  },
  {
    "text": "effective way to get users than spending",
    "start": "77040",
    "end": "78799"
  },
  {
    "text": "most of your series a",
    "start": "78799",
    "end": "79840"
  },
  {
    "text": "on facebook ads the whole thing is a",
    "start": "79840",
    "end": "81759"
  },
  {
    "text": "marketer's dream really you have all the",
    "start": "81759",
    "end": "83520"
  },
  {
    "text": "cool kids talking about it on social",
    "start": "83520",
    "end": "85119"
  },
  {
    "text": "media and if you happen to be a loser",
    "start": "85119",
    "end": "86799"
  },
  {
    "text": "without an invite you'll need to go beg",
    "start": "86799",
    "end": "88400"
  },
  {
    "text": "for one from your best friend",
    "start": "88400",
    "end": "89680"
  },
  {
    "text": "but when your best friend says they gave",
    "start": "89680",
    "end": "91280"
  },
  {
    "text": "out their invites to their better best",
    "start": "91280",
    "end": "92799"
  },
  {
    "text": "friends",
    "start": "92799",
    "end": "93280"
  },
  {
    "text": "you'll just have to pretend like you",
    "start": "93280",
    "end": "94400"
  },
  {
    "text": "don't care and that's what we call 100",
    "start": "94400",
    "end": "96560"
  },
  {
    "text": "organic locally sourced fear of missing",
    "start": "96560",
    "end": "98720"
  },
  {
    "text": "out fomo can literally get people to do",
    "start": "98720",
    "end": "100640"
  },
  {
    "text": "anything",
    "start": "100640",
    "end": "101119"
  },
  {
    "text": "like invest in assets that are worth",
    "start": "101119",
    "end": "102720"
  },
  {
    "text": "almost nothing buy stupid products that",
    "start": "102720",
    "end": "104720"
  },
  {
    "text": "nobody needs",
    "start": "104720",
    "end": "105520"
  },
  {
    "text": "and even download apps that aren't all",
    "start": "105520",
    "end": "107360"
  },
  {
    "text": "that good and now that you know how",
    "start": "107360",
    "end": "108880"
  },
  {
    "text": "powerful it is",
    "start": "108880",
    "end": "109680"
  },
  {
    "text": "let's have some fun and take a look at",
    "start": "109680",
    "end": "111360"
  },
  {
    "text": "how to implement fomo from a technical",
    "start": "111360",
    "end": "113439"
  },
  {
    "text": "perspective",
    "start": "113439",
    "end": "114159"
  },
  {
    "text": "now before we get into the code i want",
    "start": "114159",
    "end": "115840"
  },
  {
    "text": "to point out that we'll be going through",
    "start": "115840",
    "end": "117280"
  },
  {
    "text": "things pretty quickly",
    "start": "117280",
    "end": "118399"
  },
  {
    "text": "but you can reference the full source",
    "start": "118399",
    "end": "119759"
  },
  {
    "text": "code on github and also the article on",
    "start": "119759",
    "end": "122159"
  },
  {
    "text": "fireship io",
    "start": "122159",
    "end": "123280"
  },
  {
    "text": "we'll be using react and firebase for",
    "start": "123280",
    "end": "125280"
  },
  {
    "text": "the refi stack for this demo",
    "start": "125280",
    "end": "127200"
  },
  {
    "text": "but you can apply the same logic to",
    "start": "127200",
    "end": "128879"
  },
  {
    "text": "virtually any tech stack",
    "start": "128879",
    "end": "130479"
  },
  {
    "text": "if we open up the demo you'll notice a",
    "start": "130479",
    "end": "132319"
  },
  {
    "text": "sign in page where the user is first",
    "start": "132319",
    "end": "134319"
  },
  {
    "text": "required to enter their phone number",
    "start": "134319",
    "end": "136160"
  },
  {
    "text": "if that phone number is not on the",
    "start": "136160",
    "end": "137599"
  },
  {
    "text": "invite list in our database",
    "start": "137599",
    "end": "139200"
  },
  {
    "text": "then they can't sign in the invite list",
    "start": "139200",
    "end": "141280"
  },
  {
    "text": "is just a database collection in",
    "start": "141280",
    "end": "143040"
  },
  {
    "text": "firestore where each document id in the",
    "start": "143040",
    "end": "145440"
  },
  {
    "text": "database",
    "start": "145440",
    "end": "146080"
  },
  {
    "text": "is the phone number that's been invited",
    "start": "146080",
    "end": "148000"
  },
  {
    "text": "then it contains a field of sender that",
    "start": "148000",
    "end": "150000"
  },
  {
    "text": "has the user id of whoever sent the",
    "start": "150000",
    "end": "152160"
  },
  {
    "text": "invite",
    "start": "152160",
    "end": "152879"
  },
  {
    "text": "but if the number is on the invite list",
    "start": "152879",
    "end": "154720"
  },
  {
    "text": "then the user can sign in",
    "start": "154720",
    "end": "156160"
  },
  {
    "text": "when the button is clicked it will send",
    "start": "156160",
    "end": "157840"
  },
  {
    "text": "a text message to that phone number",
    "start": "157840",
    "end": "159599"
  },
  {
    "text": "then have the user verify the code in",
    "start": "159599",
    "end": "161360"
  },
  {
    "text": "this form at which point the user is",
    "start": "161360",
    "end": "163440"
  },
  {
    "text": "signed in to the application",
    "start": "163440",
    "end": "164959"
  },
  {
    "text": "and once authenticated they can then",
    "start": "164959",
    "end": "166800"
  },
  {
    "text": "invite the phone numbers of their best",
    "start": "166800",
    "end": "168480"
  },
  {
    "text": "friends",
    "start": "168480",
    "end": "169280"
  },
  {
    "text": "this will create a new invite in the",
    "start": "169280",
    "end": "170800"
  },
  {
    "text": "database which will then trigger a cloud",
    "start": "170800",
    "end": "172959"
  },
  {
    "text": "function",
    "start": "172959",
    "end": "173599"
  },
  {
    "text": "to send that user a text message",
    "start": "173599",
    "end": "175519"
  },
  {
    "text": "inviting them to use the app",
    "start": "175519",
    "end": "177519"
  },
  {
    "text": "now one important thing to point out",
    "start": "177519",
    "end": "178959"
  },
  {
    "text": "here is that firebase will automatically",
    "start": "178959",
    "end": "181440"
  },
  {
    "text": "send the first text message for the user",
    "start": "181440",
    "end": "183440"
  },
  {
    "text": "to verify",
    "start": "183440",
    "end": "184159"
  },
  {
    "text": "the sign in the second message though",
    "start": "184159",
    "end": "186239"
  },
  {
    "text": "that goes to the invited user",
    "start": "186239",
    "end": "188080"
  },
  {
    "text": "will need to be sent programmatically",
    "start": "188080",
    "end": "189840"
  },
  {
    "text": "which is not something that firebase can",
    "start": "189840",
    "end": "191440"
  },
  {
    "text": "do",
    "start": "191440",
    "end": "192080"
  },
  {
    "text": "but there are many programmatic sms apis",
    "start": "192080",
    "end": "194640"
  },
  {
    "text": "out there with the most famous option",
    "start": "194640",
    "end": "196159"
  },
  {
    "text": "being twilio",
    "start": "196159",
    "end": "197120"
  },
  {
    "text": "i'm not a huge fan of twilio myself but",
    "start": "197120",
    "end": "199200"
  },
  {
    "text": "luckily there are a lot of good",
    "start": "199200",
    "end": "200560"
  },
  {
    "text": "alternatives out there",
    "start": "200560",
    "end": "201599"
  },
  {
    "text": "i've heard good things about message",
    "start": "201599",
    "end": "202879"
  },
  {
    "text": "bird and the api we'll be using in this",
    "start": "202879",
    "end": "204959"
  },
  {
    "text": "video",
    "start": "204959",
    "end": "205519"
  },
  {
    "text": "is plivo it has a really nice ui and",
    "start": "205519",
    "end": "208080"
  },
  {
    "text": "will give you a free phone number",
    "start": "208080",
    "end": "209599"
  },
  {
    "text": "and credit to get started in the sandbox",
    "start": "209599",
    "end": "212159"
  },
  {
    "text": "now let's go ahead and jump into the",
    "start": "212159",
    "end": "213680"
  },
  {
    "text": "source code",
    "start": "213680",
    "end": "214560"
  },
  {
    "text": "to build this app i started with a",
    "start": "214560",
    "end": "216400"
  },
  {
    "text": "generic react application",
    "start": "216400",
    "end": "218159"
  },
  {
    "text": "using the create react app tool inside",
    "start": "218159",
    "end": "220480"
  },
  {
    "text": "the project i've installed two",
    "start": "220480",
    "end": "221760"
  },
  {
    "text": "dependencies",
    "start": "221760",
    "end": "222640"
  },
  {
    "text": "firebase and react firebase hooks the",
    "start": "222640",
    "end": "225120"
  },
  {
    "text": "entire front-end source code is",
    "start": "225120",
    "end": "226720"
  },
  {
    "text": "contained",
    "start": "226720",
    "end": "227280"
  },
  {
    "text": "inside the app.js file if we go in there",
    "start": "227280",
    "end": "230239"
  },
  {
    "text": "we'll import our firebase dependencies",
    "start": "230239",
    "end": "232080"
  },
  {
    "text": "which include firebase auth and",
    "start": "232080",
    "end": "233599"
  },
  {
    "text": "firestore",
    "start": "233599",
    "end": "234480"
  },
  {
    "text": "along with a few built-in hooks from",
    "start": "234480",
    "end": "236000"
  },
  {
    "text": "react and then the use off state hook",
    "start": "236000",
    "end": "238400"
  },
  {
    "text": "from react firebase hooks",
    "start": "238400",
    "end": "240159"
  },
  {
    "text": "which allows us to listen to the state",
    "start": "240159",
    "end": "242239"
  },
  {
    "text": "of the current user",
    "start": "242239",
    "end": "243280"
  },
  {
    "text": "whether they're logged in or logged out",
    "start": "243280",
    "end": "245360"
  },
  {
    "text": "and lastly we have use collection data",
    "start": "245360",
    "end": "247599"
  },
  {
    "text": "which allows us to make a query to a",
    "start": "247599",
    "end": "249599"
  },
  {
    "text": "collection in the firestore database",
    "start": "249599",
    "end": "251680"
  },
  {
    "text": "and update the ui in real time whenever",
    "start": "251680",
    "end": "253840"
  },
  {
    "text": "the data in that collection changes",
    "start": "253840",
    "end": "256160"
  },
  {
    "text": "from there we'll need to connect our",
    "start": "256160",
    "end": "257680"
  },
  {
    "text": "firebase project to the react app",
    "start": "257680",
    "end": "259840"
  },
  {
    "text": "we can do that by creating a web app",
    "start": "259840",
    "end": "261840"
  },
  {
    "text": "from the firebase console which will",
    "start": "261840",
    "end": "263440"
  },
  {
    "text": "give us a set of project credentials to",
    "start": "263440",
    "end": "265440"
  },
  {
    "text": "copy",
    "start": "265440",
    "end": "266080"
  },
  {
    "text": "and while we're in the firebase console",
    "start": "266080",
    "end": "267919"
  },
  {
    "text": "let's go over to the authentication tab",
    "start": "267919",
    "end": "270080"
  },
  {
    "text": "and make sure to enable phone",
    "start": "270080",
    "end": "271680"
  },
  {
    "text": "authentication now we can go back to our",
    "start": "271680",
    "end": "273680"
  },
  {
    "text": "code",
    "start": "273680",
    "end": "274080"
  },
  {
    "text": "and initialize the firebase app the two",
    "start": "274080",
    "end": "276240"
  },
  {
    "text": "sdks that we'll be using",
    "start": "276240",
    "end": "277759"
  },
  {
    "text": "are firebase auth and firestore so let's",
    "start": "277759",
    "end": "280400"
  },
  {
    "text": "go ahead and reference those",
    "start": "280400",
    "end": "281680"
  },
  {
    "text": "as global variables in the root app",
    "start": "281680",
    "end": "283919"
  },
  {
    "text": "component we're going to listen to the",
    "start": "283919",
    "end": "285680"
  },
  {
    "text": "user's authentication state",
    "start": "285680",
    "end": "287600"
  },
  {
    "text": "if we do have a user which means they're",
    "start": "287600",
    "end": "289280"
  },
  {
    "text": "logged in then we'll go ahead and render",
    "start": "289280",
    "end": "291680"
  },
  {
    "text": "the send invites component",
    "start": "291680",
    "end": "293520"
  },
  {
    "text": "which takes the current user as a prop",
    "start": "293520",
    "end": "295680"
  },
  {
    "text": "otherwise we'll show the sign up",
    "start": "295680",
    "end": "297199"
  },
  {
    "text": "component the initial user state will be",
    "start": "297199",
    "end": "299120"
  },
  {
    "text": "signed out",
    "start": "299120",
    "end": "299759"
  },
  {
    "text": "so let's go ahead and focus on the sign",
    "start": "299759",
    "end": "301840"
  },
  {
    "text": "up component now in order to implement",
    "start": "301840",
    "end": "304000"
  },
  {
    "text": "phone authentication",
    "start": "304000",
    "end": "305280"
  },
  {
    "text": "the user will need to verify a captcha",
    "start": "305280",
    "end": "307600"
  },
  {
    "text": "normally this means the user has to go",
    "start": "307600",
    "end": "309360"
  },
  {
    "text": "through the annoying",
    "start": "309360",
    "end": "310080"
  },
  {
    "text": "process of verifying that they're not a",
    "start": "310080",
    "end": "312160"
  },
  {
    "text": "spam bot however",
    "start": "312160",
    "end": "313600"
  },
  {
    "text": "the modern user-friendly way to do this",
    "start": "313600",
    "end": "315520"
  },
  {
    "text": "is with an invisible recaptcha",
    "start": "315520",
    "end": "317280"
  },
  {
    "text": "which will attempt to verify the user in",
    "start": "317280",
    "end": "319199"
  },
  {
    "text": "the background and only ask them",
    "start": "319199",
    "end": "320960"
  },
  {
    "text": "questions when it's absolutely necessary",
    "start": "320960",
    "end": "323039"
  },
  {
    "text": "to implement an invisible recaptcha",
    "start": "323039",
    "end": "325120"
  },
  {
    "text": "we'll first set it up as state on the",
    "start": "325120",
    "end": "326960"
  },
  {
    "text": "component",
    "start": "326960",
    "end": "327600"
  },
  {
    "text": "using the use state hook and then we're",
    "start": "327600",
    "end": "329440"
  },
  {
    "text": "going to reference a native dom",
    "start": "329440",
    "end": "331120"
  },
  {
    "text": "element with the use ref hook you need",
    "start": "331120",
    "end": "333440"
  },
  {
    "text": "to have an empty div",
    "start": "333440",
    "end": "334479"
  },
  {
    "text": "somewhere in the ui to attach the",
    "start": "334479",
    "end": "336320"
  },
  {
    "text": "recaptcha to from there we'll",
    "start": "336320",
    "end": "338000"
  },
  {
    "text": "implement a callback and the use effect",
    "start": "338000",
    "end": "340000"
  },
  {
    "text": "hook if the recaptcha has not been",
    "start": "340000",
    "end": "341919"
  },
  {
    "text": "defined yet",
    "start": "341919",
    "end": "342800"
  },
  {
    "text": "then we'll go ahead and define it by",
    "start": "342800",
    "end": "344800"
  },
  {
    "text": "creating a new instance",
    "start": "344800",
    "end": "346240"
  },
  {
    "text": "of a firebase auth recaptcha verifier it",
    "start": "346240",
    "end": "349360"
  },
  {
    "text": "takes the empty div as its first",
    "start": "349360",
    "end": "350960"
  },
  {
    "text": "argument",
    "start": "350960",
    "end": "351680"
  },
  {
    "text": "then options as the second argument",
    "start": "351680",
    "end": "354000"
  },
  {
    "text": "we'll just want to make sure that it has",
    "start": "354000",
    "end": "355520"
  },
  {
    "text": "a size",
    "start": "355520",
    "end": "356160"
  },
  {
    "text": "of invisible from there we can verify it",
    "start": "356160",
    "end": "358319"
  },
  {
    "text": "by calling the verify method",
    "start": "358319",
    "end": "359840"
  },
  {
    "text": "which returns a promise and then once",
    "start": "359840",
    "end": "362080"
  },
  {
    "text": "verified we'll go ahead",
    "start": "362080",
    "end": "363440"
  },
  {
    "text": "and set the recaptcha instance on the",
    "start": "363440",
    "end": "365520"
  },
  {
    "text": "component state",
    "start": "365520",
    "end": "366560"
  },
  {
    "text": "and now that we have that state we can",
    "start": "366560",
    "end": "368240"
  },
  {
    "text": "go into the jsx and",
    "start": "368240",
    "end": "369840"
  },
  {
    "text": "render a phone number verification",
    "start": "369840",
    "end": "371680"
  },
  {
    "text": "component that passes the recaptcha down",
    "start": "371680",
    "end": "374319"
  },
  {
    "text": "as a prop that allows us to only show",
    "start": "374319",
    "end": "376560"
  },
  {
    "text": "the login form",
    "start": "376560",
    "end": "377520"
  },
  {
    "text": "after the recaptcha has been verified",
    "start": "377520",
    "end": "379440"
  },
  {
    "text": "now let's implement the phone number",
    "start": "379440",
    "end": "380800"
  },
  {
    "text": "verification component",
    "start": "380800",
    "end": "382240"
  },
  {
    "text": "its purpose is to collect the user's",
    "start": "382240",
    "end": "384160"
  },
  {
    "text": "phone number digits from a form",
    "start": "384160",
    "end": "386080"
  },
  {
    "text": "then make a read request to firestore to",
    "start": "386080",
    "end": "388240"
  },
  {
    "text": "validate that that number has been",
    "start": "388240",
    "end": "389759"
  },
  {
    "text": "invited",
    "start": "389759",
    "end": "390560"
  },
  {
    "text": "if the number has been invited then",
    "start": "390560",
    "end": "392080"
  },
  {
    "text": "we'll set that value to true",
    "start": "392080",
    "end": "393680"
  },
  {
    "text": "and then the user can log in and",
    "start": "393680",
    "end": "395360"
  },
  {
    "text": "firebase will return a confirmation",
    "start": "395360",
    "end": "397520"
  },
  {
    "text": "result",
    "start": "397520",
    "end": "398319"
  },
  {
    "text": "which is just a confirmation that they",
    "start": "398319",
    "end": "400319"
  },
  {
    "text": "sent a text message to that user",
    "start": "400319",
    "end": "402240"
  },
  {
    "text": "the user will then need to verify that",
    "start": "402240",
    "end": "404000"
  },
  {
    "text": "code in a second form",
    "start": "404000",
    "end": "405680"
  },
  {
    "text": "and once that's verified we can consider",
    "start": "405680",
    "end": "407680"
  },
  {
    "text": "them fully authenticated",
    "start": "407680",
    "end": "409120"
  },
  {
    "text": "now one final thing i'm doing here is",
    "start": "409120",
    "end": "411120"
  },
  {
    "text": "formatting the number with a plus one in",
    "start": "411120",
    "end": "413199"
  },
  {
    "text": "front of it",
    "start": "413199",
    "end": "413840"
  },
  {
    "text": "when working with any programmatic phone",
    "start": "413840",
    "end": "415759"
  },
  {
    "text": "api they almost always want the phone",
    "start": "415759",
    "end": "417440"
  },
  {
    "text": "number",
    "start": "417440",
    "end": "417840"
  },
  {
    "text": "in echo164 format it's just a plus sign",
    "start": "417840",
    "end": "421039"
  },
  {
    "text": "with the country code",
    "start": "421039",
    "end": "422000"
  },
  {
    "text": "followed by the main phone number digits",
    "start": "422000",
    "end": "424240"
  },
  {
    "text": "now in the jsx we're going to create a",
    "start": "424240",
    "end": "426319"
  },
  {
    "text": "controlled form",
    "start": "426319",
    "end": "427199"
  },
  {
    "text": "input with react by setting the value to",
    "start": "427199",
    "end": "429759"
  },
  {
    "text": "the digit state",
    "start": "429759",
    "end": "430960"
  },
  {
    "text": "then we'll update the state with the",
    "start": "430960",
    "end": "432479"
  },
  {
    "text": "current value by listening to the on",
    "start": "432479",
    "end": "434400"
  },
  {
    "text": "change event",
    "start": "434400",
    "end": "435280"
  },
  {
    "text": "and setting the digits to the value in",
    "start": "435280",
    "end": "437360"
  },
  {
    "text": "the form when they change",
    "start": "437360",
    "end": "438560"
  },
  {
    "text": "from there we can implement the use",
    "start": "438560",
    "end": "440080"
  },
  {
    "text": "effect hook and give it the phone number",
    "start": "440080",
    "end": "442080"
  },
  {
    "text": "as a dependency",
    "start": "442080",
    "end": "443360"
  },
  {
    "text": "if the phone number length equals 12",
    "start": "443360",
    "end": "445199"
  },
  {
    "text": "then we know we have a full length phone",
    "start": "445199",
    "end": "446800"
  },
  {
    "text": "number",
    "start": "446800",
    "end": "447280"
  },
  {
    "text": "at which point we can make a read",
    "start": "447280",
    "end": "448720"
  },
  {
    "text": "request to the database to see if that",
    "start": "448720",
    "end": "450800"
  },
  {
    "text": "phone number exists",
    "start": "450800",
    "end": "452000"
  },
  {
    "text": "in the invites collection ref get will",
    "start": "452000",
    "end": "454800"
  },
  {
    "text": "read the document",
    "start": "454800",
    "end": "455840"
  },
  {
    "text": "and if it exists then we'll go ahead and",
    "start": "455840",
    "end": "457680"
  },
  {
    "text": "set the invited state",
    "start": "457680",
    "end": "459039"
  },
  {
    "text": "to exist which will either be true or",
    "start": "459039",
    "end": "461039"
  },
  {
    "text": "false from there we can go back to the",
    "start": "461039",
    "end": "462720"
  },
  {
    "text": "html",
    "start": "462720",
    "end": "463680"
  },
  {
    "text": "and we'll add a button that is hidden if",
    "start": "463680",
    "end": "466000"
  },
  {
    "text": "the user is not invited",
    "start": "466000",
    "end": "467680"
  },
  {
    "text": "but if they are invited then we'll fire",
    "start": "467680",
    "end": "469599"
  },
  {
    "text": "the sign in with phone number method",
    "start": "469599",
    "end": "471280"
  },
  {
    "text": "when the button is clicked",
    "start": "471280",
    "end": "472560"
  },
  {
    "text": "we'll make it an async function so we",
    "start": "472560",
    "end": "474479"
  },
  {
    "text": "can await the auth",
    "start": "474479",
    "end": "476000"
  },
  {
    "text": "sign in with phone number method which",
    "start": "476000",
    "end": "477840"
  },
  {
    "text": "takes the phone number and the recaptcha",
    "start": "477840",
    "end": "479919"
  },
  {
    "text": "as",
    "start": "479919",
    "end": "480240"
  },
  {
    "text": "arguments the return value is the",
    "start": "480240",
    "end": "482400"
  },
  {
    "text": "confirmation result",
    "start": "482400",
    "end": "483599"
  },
  {
    "text": "which again is a confirmation from",
    "start": "483599",
    "end": "485280"
  },
  {
    "text": "firebase that they sent a text message",
    "start": "485280",
    "end": "487360"
  },
  {
    "text": "to that user",
    "start": "487360",
    "end": "488319"
  },
  {
    "text": "the final step in this component is to",
    "start": "488319",
    "end": "490319"
  },
  {
    "text": "then show another form",
    "start": "490319",
    "end": "491599"
  },
  {
    "text": "when that confirmation result is present",
    "start": "491599",
    "end": "493840"
  },
  {
    "text": "it's also a controlled input",
    "start": "493840",
    "end": "495599"
  },
  {
    "text": "on the code state on the component then",
    "start": "495599",
    "end": "497680"
  },
  {
    "text": "below that we have a button",
    "start": "497680",
    "end": "499039"
  },
  {
    "text": "that will fire the verify code function",
    "start": "499039",
    "end": "501199"
  },
  {
    "text": "when it's clicked the verify code",
    "start": "501199",
    "end": "502800"
  },
  {
    "text": "function",
    "start": "502800",
    "end": "503440"
  },
  {
    "text": "is also an async function that will",
    "start": "503440",
    "end": "505440"
  },
  {
    "text": "confirm the code on the confirmation",
    "start": "505440",
    "end": "507199"
  },
  {
    "text": "result",
    "start": "507199",
    "end": "508000"
  },
  {
    "text": "and that's how we get an invited user",
    "start": "508000",
    "end": "509759"
  },
  {
    "text": "logged into the app but now that they're",
    "start": "509759",
    "end": "511599"
  },
  {
    "text": "logged in",
    "start": "511599",
    "end": "512240"
  },
  {
    "text": "we need to give them a way to send",
    "start": "512240",
    "end": "514000"
  },
  {
    "text": "invites to their friends",
    "start": "514000",
    "end": "515680"
  },
  {
    "text": "the frontend implementation happens here",
    "start": "515680",
    "end": "517760"
  },
  {
    "text": "in the send invites component first we",
    "start": "517760",
    "end": "519760"
  },
  {
    "text": "have a database query",
    "start": "519760",
    "end": "520959"
  },
  {
    "text": "that grabs all of the invites that that",
    "start": "520959",
    "end": "522640"
  },
  {
    "text": "user has sent if the query length is",
    "start": "522640",
    "end": "524640"
  },
  {
    "text": "less than two",
    "start": "524640",
    "end": "525440"
  },
  {
    "text": "then we allow that user to create a new",
    "start": "525440",
    "end": "527680"
  },
  {
    "text": "invite in the database with somebody",
    "start": "527680",
    "end": "529519"
  },
  {
    "text": "else's phone number",
    "start": "529519",
    "end": "530800"
  },
  {
    "text": "that's easy enough but the tricky part",
    "start": "530800",
    "end": "532959"
  },
  {
    "text": "is how do we now send a text message to",
    "start": "532959",
    "end": "535040"
  },
  {
    "text": "that user",
    "start": "535040",
    "end": "535920"
  },
  {
    "text": "that's a job that needs to happen from a",
    "start": "535920",
    "end": "537760"
  },
  {
    "text": "backend server which we can implement in",
    "start": "537760",
    "end": "539920"
  },
  {
    "text": "firebase using cloud functions",
    "start": "539920",
    "end": "542160"
  },
  {
    "text": "by running the firebase inet functions",
    "start": "542160",
    "end": "543920"
  },
  {
    "text": "command i can quickly add a back end to",
    "start": "543920",
    "end": "546160"
  },
  {
    "text": "this react app",
    "start": "546160",
    "end": "547279"
  },
  {
    "text": "let's go into the functions directory",
    "start": "547279",
    "end": "549040"
  },
  {
    "text": "and open the index.js file",
    "start": "549040",
    "end": "551360"
  },
  {
    "text": "now what we want our backend to do is",
    "start": "551360",
    "end": "553360"
  },
  {
    "text": "run a cloud function",
    "start": "553360",
    "end": "554640"
  },
  {
    "text": "whenever a new firestore document is",
    "start": "554640",
    "end": "557120"
  },
  {
    "text": "created",
    "start": "557120",
    "end": "557680"
  },
  {
    "text": "in the invites collection that's really",
    "start": "557680",
    "end": "559920"
  },
  {
    "text": "easy to achieve",
    "start": "559920",
    "end": "560880"
  },
  {
    "text": "by simply exporting a function that",
    "start": "560880",
    "end": "563200"
  },
  {
    "text": "points to that path in the database",
    "start": "563200",
    "end": "565120"
  },
  {
    "text": "then we use oncreate to run some backend",
    "start": "565120",
    "end": "567519"
  },
  {
    "text": "code whenever a new document is created",
    "start": "567519",
    "end": "569839"
  },
  {
    "text": "there",
    "start": "569839",
    "end": "570240"
  },
  {
    "text": "to send a text message we need three",
    "start": "570240",
    "end": "572160"
  },
  {
    "text": "pieces of information",
    "start": "572160",
    "end": "573440"
  },
  {
    "text": "we need the from phone number which is",
    "start": "573440",
    "end": "575200"
  },
  {
    "text": "our phone number the two number which is",
    "start": "575200",
    "end": "577279"
  },
  {
    "text": "the one the user has invited to the app",
    "start": "577279",
    "end": "579519"
  },
  {
    "text": "and then the actual message that we want",
    "start": "579519",
    "end": "581279"
  },
  {
    "text": "to send to that phone number",
    "start": "581279",
    "end": "582880"
  },
  {
    "text": "now in order to send the text we need to",
    "start": "582880",
    "end": "584720"
  },
  {
    "text": "use a third party service like twilio or",
    "start": "584720",
    "end": "587279"
  },
  {
    "text": "in this case plibo",
    "start": "587279",
    "end": "588480"
  },
  {
    "text": "plivo has an sdk for node so we can",
    "start": "588480",
    "end": "590800"
  },
  {
    "text": "install that in the functions directory",
    "start": "590800",
    "end": "592480"
  },
  {
    "text": "with npm",
    "start": "592480",
    "end": "593440"
  },
  {
    "text": "we can then import it and then",
    "start": "593440",
    "end": "595040"
  },
  {
    "text": "initialize the client",
    "start": "595040",
    "end": "596480"
  },
  {
    "text": "with our id and token which you'll find",
    "start": "596480",
    "end": "599120"
  },
  {
    "text": "on the dashboard when you sign up for",
    "start": "599120",
    "end": "600800"
  },
  {
    "text": "this service",
    "start": "600800",
    "end": "601839"
  },
  {
    "text": "and finally we send the text message by",
    "start": "601839",
    "end": "604079"
  },
  {
    "text": "calling client",
    "start": "604079",
    "end": "604959"
  },
  {
    "text": "messages create that returns a promise",
    "start": "604959",
    "end": "607519"
  },
  {
    "text": "so we'll make it the return value from",
    "start": "607519",
    "end": "609120"
  },
  {
    "text": "the function",
    "start": "609120",
    "end": "609920"
  },
  {
    "text": "because a cloud function expects a",
    "start": "609920",
    "end": "611760"
  },
  {
    "text": "promise as its return value",
    "start": "611760",
    "end": "613680"
  },
  {
    "text": "you can deploy your backend to the cloud",
    "start": "613680",
    "end": "615200"
  },
  {
    "text": "by running firebase deploy only",
    "start": "615200",
    "end": "617040"
  },
  {
    "text": "functions",
    "start": "617040",
    "end": "617680"
  },
  {
    "text": "and now if you go to the ui and create a",
    "start": "617680",
    "end": "619519"
  },
  {
    "text": "new invite it should send a text message",
    "start": "619519",
    "end": "621760"
  },
  {
    "text": "to that user",
    "start": "621760",
    "end": "623040"
  },
  {
    "text": "congratulations you no longer have fomo",
    "start": "623040",
    "end": "625440"
  },
  {
    "text": "but jomo because you can just build your",
    "start": "625440",
    "end": "627519"
  },
  {
    "text": "own fomo driven app from scratch",
    "start": "627519",
    "end": "629519"
  },
  {
    "text": "i'm going to go ahead and wrap things up",
    "start": "629519",
    "end": "630800"
  },
  {
    "text": "there but i do want to point out that",
    "start": "630800",
    "end": "632560"
  },
  {
    "text": "the code we've implemented",
    "start": "632560",
    "end": "633839"
  },
  {
    "text": "is not fully secure yet because we",
    "start": "633839",
    "end": "635839"
  },
  {
    "text": "haven't implemented firestore rules yet",
    "start": "635839",
    "end": "637920"
  },
  {
    "text": "if you want to learn how to build fully",
    "start": "637920",
    "end": "639279"
  },
  {
    "text": "secure features with react and firebase",
    "start": "639279",
    "end": "641440"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "641440",
    "end": "643279"
  },
  {
    "text": "buyership io",
    "start": "643279",
    "end": "644480"
  },
  {
    "text": "and taking my full course on that topic",
    "start": "644480",
    "end": "646560"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "646560",
    "end": "648320"
  },
  {
    "text": "in the next one",
    "start": "648320",
    "end": "652399"
  }
]