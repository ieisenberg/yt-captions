[
  {
    "text": "today's video is a practical beginners",
    "start": "0",
    "end": "2010"
  },
  {
    "text": "guide to building desktop apps with",
    "start": "2010",
    "end": "3629"
  },
  {
    "text": "electron by the end of this video you",
    "start": "3629",
    "end": "5370"
  },
  {
    "text": "will built a desktop app that's",
    "start": "5370",
    "end": "6629"
  },
  {
    "text": "installable on Mac OS Windows and Linux",
    "start": "6629",
    "end": "8519"
  },
  {
    "text": "using nothing but HTML CSS and",
    "start": "8519",
    "end": "10860"
  },
  {
    "text": "JavaScript you'll learn how to combine",
    "start": "10860",
    "end": "12690"
  },
  {
    "text": "api's from the web no js' and electron",
    "start": "12690",
    "end": "15240"
  },
  {
    "text": "to build a desktop screen capture it",
    "start": "15240",
    "end": "17850"
  },
  {
    "text": "created some native menus captures a",
    "start": "17850",
    "end": "19770"
  },
  {
    "text": "video stream from your system and can",
    "start": "19770",
    "end": "21660"
  },
  {
    "text": "write the raw video file to your",
    "start": "21660",
    "end": "23130"
  },
  {
    "text": "filesystem now if you have no idea how",
    "start": "23130",
    "end": "24869"
  },
  {
    "text": "electron works make sure to check out my",
    "start": "24869",
    "end": "26580"
  },
  {
    "text": "100 seconds of code video on that topic",
    "start": "26580",
    "end": "28410"
  },
  {
    "text": "if you're new you're like and subscribe",
    "start": "28410",
    "end": "29849"
  },
  {
    "text": "and grab the full source code for this",
    "start": "29849",
    "end": "31320"
  },
  {
    "text": "project on fire ship IO now Before we",
    "start": "31320",
    "end": "33719"
  },
  {
    "text": "jump into the code and turn you into an",
    "start": "33719",
    "end": "35370"
  },
  {
    "text": "electron developer there is one thing",
    "start": "35370",
    "end": "36809"
  },
  {
    "text": "you should know a lot of people like to",
    "start": "36809",
    "end": "38550"
  },
  {
    "text": "talk [ __ ] about electron and to be",
    "start": "38550",
    "end": "40440"
  },
  {
    "text": "honest a lot of the criticism is valid",
    "start": "40440",
    "end": "42300"
  },
  {
    "text": "electron apps bundle chromium and nodejs",
    "start": "42300",
    "end": "44460"
  },
  {
    "text": "out of the gate and that tends to lead",
    "start": "44460",
    "end": "46079"
  },
  {
    "text": "to a very large app size even for a",
    "start": "46079",
    "end": "48090"
  },
  {
    "text": "simple app on top of that running",
    "start": "48090",
    "end": "49920"
  },
  {
    "text": "chromium can be a resource intensive so",
    "start": "49920",
    "end": "51750"
  },
  {
    "text": "your app will probably use more CPU and",
    "start": "51750",
    "end": "53520"
  },
  {
    "text": "RAM than a comparable app and",
    "start": "53520",
    "end": "54840"
  },
  {
    "text": "objective-c or a c-sharp but here's the",
    "start": "54840",
    "end": "57120"
  },
  {
    "text": "thing these drawbacks don't matter very",
    "start": "57120",
    "end": "58710"
  },
  {
    "text": "much for most developers when it comes",
    "start": "58710",
    "end": "60300"
  },
  {
    "text": "to the big picture",
    "start": "60300",
    "end": "61079"
  },
  {
    "text": "is fun fun I do bad things if you're a",
    "start": "61079",
    "end": "64228"
  },
  {
    "text": "web or nodejs developer electron offers",
    "start": "64229",
    "end": "66479"
  },
  {
    "text": "an amazing developer experience and it",
    "start": "66479",
    "end": "68430"
  },
  {
    "text": "makes desktop apps a practical business",
    "start": "68430",
    "end": "69960"
  },
  {
    "text": "decision for companies that would",
    "start": "69960",
    "end": "71549"
  },
  {
    "text": "otherwise not consider them even big",
    "start": "71549",
    "end": "73409"
  },
  {
    "text": "companies with tons of talent and cash",
    "start": "73409",
    "end": "74939"
  },
  {
    "text": "still choose electron because it makes",
    "start": "74939",
    "end": "76650"
  },
  {
    "text": "more business sense at the end of the",
    "start": "76650",
    "end": "78299"
  },
  {
    "text": "day the only thing that matters is that",
    "start": "78299",
    "end": "79770"
  },
  {
    "text": "you build an awesome user experience",
    "start": "79770",
    "end": "81299"
  },
  {
    "text": "which you can absolutely do with",
    "start": "81299",
    "end": "82560"
  },
  {
    "text": "electron and your users don't know or",
    "start": "82560",
    "end": "84509"
  },
  {
    "text": "care what technology you use to build",
    "start": "84509",
    "end": "86130"
  },
  {
    "text": "the app I think Winston Churchill said",
    "start": "86130",
    "end": "87750"
  },
  {
    "text": "it best electron is the worst desktop",
    "start": "87750",
    "end": "89759"
  },
  {
    "text": "architecture except for all the others",
    "start": "89759",
    "end": "91320"
  },
  {
    "text": "we've tried now that we have that out of",
    "start": "91320",
    "end": "93090"
  },
  {
    "text": "the way",
    "start": "93090",
    "end": "93479"
  },
  {
    "text": "let's take a closer look at the desktop",
    "start": "93479",
    "end": "95100"
  },
  {
    "text": "app we're building today it's a simple",
    "start": "95100",
    "end": "97020"
  },
  {
    "text": "screen recorder it takes one of the",
    "start": "97020",
    "end": "98759"
  },
  {
    "text": "windows that you have opened on your",
    "start": "98759",
    "end": "100049"
  },
  {
    "text": "desktop and turns it into a video stream",
    "start": "100049",
    "end": "102180"
  },
  {
    "text": "and then we preview that video stream in",
    "start": "102180",
    "end": "103979"
  },
  {
    "text": "our electron app when we click the",
    "start": "103979",
    "end": "105600"
  },
  {
    "text": "record button it will turn the stream",
    "start": "105600",
    "end": "107130"
  },
  {
    "text": "into an actual raw video file when you",
    "start": "107130",
    "end": "109439"
  },
  {
    "text": "click stop it will open another native",
    "start": "109439",
    "end": "111060"
  },
  {
    "text": "menu this time asking where you want to",
    "start": "111060",
    "end": "112920"
  },
  {
    "text": "save the file output and lastly it",
    "start": "112920",
    "end": "114810"
  },
  {
    "text": "writes the raw file to your system so",
    "start": "114810",
    "end": "116909"
  },
  {
    "text": "this will be a really fun project",
    "start": "116909",
    "end": "117899"
  },
  {
    "text": "because you'll need to use node.js for",
    "start": "117899",
    "end": "119490"
  },
  {
    "text": "certain things web technologies for",
    "start": "119490",
    "end": "121229"
  },
  {
    "text": "other things in electron api's as well",
    "start": "121229",
    "end": "123180"
  },
  {
    "text": "this tutorial is designed for you to",
    "start": "123180",
    "end": "125009"
  },
  {
    "text": "follow along but we'll be moving at a",
    "start": "125009",
    "end": "126719"
  },
  {
    "text": "very quick pace so feel free to pause or",
    "start": "126719",
    "end": "129030"
  },
  {
    "text": "slow down the playback",
    "start": "129030",
    "end": "130080"
  },
  {
    "text": "to get started what first want to",
    "start": "130080",
    "end": "131910"
  },
  {
    "text": "generate some initial boilerplate code",
    "start": "131910",
    "end": "133440"
  },
  {
    "text": "to do that I'll be using an awesome tool",
    "start": "133440",
    "end": "135240"
  },
  {
    "text": "called electron Forge along with it's",
    "start": "135240",
    "end": "136920"
  },
  {
    "text": "option for plain vanilla JavaScript but",
    "start": "136920",
    "end": "138960"
  },
  {
    "text": "if you have a preferred framework",
    "start": "138960",
    "end": "140040"
  },
  {
    "text": "there's all kinds of starter projects",
    "start": "140040",
    "end": "141540"
  },
  {
    "text": "out there that you can use and the code",
    "start": "141540",
    "end": "143010"
  },
  {
    "text": "in this project should be relatively",
    "start": "143010",
    "end": "144210"
  },
  {
    "text": "easy to port over to one of those step",
    "start": "144210",
    "end": "146460"
  },
  {
    "text": "one is to open up the command line and",
    "start": "146460",
    "end": "148200"
  },
  {
    "text": "run npx",
    "start": "148200",
    "end": "149190"
  },
  {
    "text": "create electron app with the name of",
    "start": "149190",
    "end": "151050"
  },
  {
    "text": "your app go ahead and open that up and",
    "start": "151050",
    "end": "152910"
  },
  {
    "text": "you'll see electron Forge has given us a",
    "start": "152910",
    "end": "154770"
  },
  {
    "text": "little starter project that's nice and",
    "start": "154770",
    "end": "156660"
  },
  {
    "text": "all but towards the end of the video",
    "start": "156660",
    "end": "157860"
  },
  {
    "text": "we'll look at how electron Forge can",
    "start": "157860",
    "end": "159450"
  },
  {
    "text": "help us build the actual distributable",
    "start": "159450",
    "end": "160890"
  },
  {
    "text": "is that people can install on their",
    "start": "160890",
    "end": "162360"
  },
  {
    "text": "system now if we open the source",
    "start": "162360",
    "end": "164130"
  },
  {
    "text": "directory you can see we have an index",
    "start": "164130",
    "end": "165930"
  },
  {
    "text": "HTML and CSS the HTML is the entry point",
    "start": "165930",
    "end": "169260"
  },
  {
    "text": "to our front-end UI or the render",
    "start": "169260",
    "end": "171300"
  },
  {
    "text": "process then we have index J s which is",
    "start": "171300",
    "end": "173700"
  },
  {
    "text": "the entry point to our main process at",
    "start": "173700",
    "end": "175590"
  },
  {
    "text": "this point let's go ahead and fire up",
    "start": "175590",
    "end": "177330"
  },
  {
    "text": "the app to make sure it's working run",
    "start": "177330",
    "end": "179580"
  },
  {
    "text": "NPM start from the command line and it",
    "start": "179580",
    "end": "181590"
  },
  {
    "text": "should launch the application on your",
    "start": "181590",
    "end": "183060"
  },
  {
    "text": "system now one thing to keep in mind is",
    "start": "183060",
    "end": "185040"
  },
  {
    "text": "that it doesn't do hot reloading like",
    "start": "185040",
    "end": "186930"
  },
  {
    "text": "you might be used to if you work with a",
    "start": "186930",
    "end": "188220"
  },
  {
    "text": "web framework if you make some changes",
    "start": "188220",
    "end": "190140"
  },
  {
    "text": "and want to see them reflected in the",
    "start": "190140",
    "end": "191550"
  },
  {
    "text": "app come down here to the command line",
    "start": "191550",
    "end": "193050"
  },
  {
    "text": "type in RS in the same terminal and your",
    "start": "193050",
    "end": "195750"
  },
  {
    "text": "app will restart let's open up this",
    "start": "195750",
    "end": "197850"
  },
  {
    "text": "index.js file to take a closer look at",
    "start": "197850",
    "end": "200100"
  },
  {
    "text": "how electron works every electron app",
    "start": "200100",
    "end": "201959"
  },
  {
    "text": "has exactly one main process which is",
    "start": "201959",
    "end": "204150"
  },
  {
    "text": "created by this index.js file up here at",
    "start": "204150",
    "end": "206760"
  },
  {
    "text": "the top you can see we're importing two",
    "start": "206760",
    "end": "208260"
  },
  {
    "text": "things from electron app in browser",
    "start": "208260",
    "end": "210120"
  },
  {
    "text": "window app is used to control the",
    "start": "210120",
    "end": "212100"
  },
  {
    "text": "lifecycle of the app and it uses an",
    "start": "212100",
    "end": "214050"
  },
  {
    "text": "event based API let's take a look at",
    "start": "214050",
    "end": "216090"
  },
  {
    "text": "some examples the main event we want to",
    "start": "216090",
    "end": "218040"
  },
  {
    "text": "listen to is ready so we say app on",
    "start": "218040",
    "end": "220260"
  },
  {
    "text": "ready run this function this event will",
    "start": "220260",
    "end": "222510"
  },
  {
    "text": "fire once when the app is actually ready",
    "start": "222510",
    "end": "224010"
  },
  {
    "text": "and you can run whatever initialization",
    "start": "224010",
    "end": "225840"
  },
  {
    "text": "logic you want here now electron Forge",
    "start": "225840",
    "end": "227730"
  },
  {
    "text": "already set this up for us but feel free",
    "start": "227730",
    "end": "229500"
  },
  {
    "text": "to implement your own logic here if we",
    "start": "229500",
    "end": "231480"
  },
  {
    "text": "look below that you can see we're",
    "start": "231480",
    "end": "232800"
  },
  {
    "text": "handling a couple of other events as",
    "start": "232800",
    "end": "234239"
  },
  {
    "text": "well like window all closed because",
    "start": "234239",
    "end": "236340"
  },
  {
    "text": "Mac's have different operating system",
    "start": "236340",
    "end": "238080"
  },
  {
    "text": "behaviors than Windows you can run",
    "start": "238080",
    "end": "239640"
  },
  {
    "text": "platform specific code by checking the",
    "start": "239640",
    "end": "241560"
  },
  {
    "text": "process platform value this is a special",
    "start": "241560",
    "end": "243900"
  },
  {
    "text": "value provided by electron and if it's a",
    "start": "243900",
    "end": "245790"
  },
  {
    "text": "Mac it'll be Darwin or win32 for Windows",
    "start": "245790",
    "end": "248220"
  },
  {
    "text": "so our app has one main process but it",
    "start": "248220",
    "end": "251220"
  },
  {
    "text": "can have multiple render processes going",
    "start": "251220",
    "end": "252840"
  },
  {
    "text": "at the same time a render process is an",
    "start": "252840",
    "end": "255000"
  },
  {
    "text": "instance of chromium so you can think of",
    "start": "255000",
    "end": "256680"
  },
  {
    "text": "each render process as being a tab or",
    "start": "256680",
    "end": "258690"
  },
  {
    "text": "window in the browser we create one by",
    "start": "258690",
    "end": "260789"
  },
  {
    "text": "instantiating a browser window and",
    "start": "260789",
    "end": "262380"
  },
  {
    "text": "there's a bunch of different options",
    "start": "262380",
    "end": "263910"
  },
  {
    "text": "we can pass here but I'm going to set",
    "start": "263910",
    "end": "265500"
  },
  {
    "text": "the node integration to true that allows",
    "start": "265500",
    "end": "267660"
  },
  {
    "text": "us to access node.js Global's directly",
    "start": "267660",
    "end": "269850"
  },
  {
    "text": "in our front-end code so that gives us",
    "start": "269850",
    "end": "271500"
  },
  {
    "text": "an empty browser window now we use load",
    "start": "271500",
    "end": "273510"
  },
  {
    "text": "file to load our index.html into it if",
    "start": "273510",
    "end": "276240"
  },
  {
    "text": "we look at the HTML you can see it's",
    "start": "276240",
    "end": "277920"
  },
  {
    "text": "nothing but a hello world in fact we",
    "start": "277920",
    "end": "280020"
  },
  {
    "text": "don't even have any JavaScript running",
    "start": "280020",
    "end": "281430"
  },
  {
    "text": "on our front-end yet let's change that",
    "start": "281430",
    "end": "283170"
  },
  {
    "text": "by creating a file called render Jas and",
    "start": "283170",
    "end": "285570"
  },
  {
    "text": "then we'll add a script tag pointing to",
    "start": "285570",
    "end": "287340"
  },
  {
    "text": "that file here in our HTML and make sure",
    "start": "287340",
    "end": "289860"
  },
  {
    "text": "to use the defer attribute so the script",
    "start": "289860",
    "end": "291600"
  },
  {
    "text": "loads after the HTML while we're in here",
    "start": "291600",
    "end": "293880"
  },
  {
    "text": "I'm going to go ahead and add Bulma CSS",
    "start": "293880",
    "end": "296070"
  },
  {
    "text": "to the head of the document as well",
    "start": "296070",
    "end": "297540"
  },
  {
    "text": "that'll make our UI look a little more",
    "start": "297540",
    "end": "299310"
  },
  {
    "text": "polished then down here in the body",
    "start": "299310",
    "end": "300960"
  },
  {
    "text": "we'll add a video element to preview the",
    "start": "300960",
    "end": "303060"
  },
  {
    "text": "actual output that's being recorded down",
    "start": "303060",
    "end": "305160"
  },
  {
    "text": "below that we'll add three buttons the",
    "start": "305160",
    "end": "307050"
  },
  {
    "text": "first button will start recording the",
    "start": "307050",
    "end": "308670"
  },
  {
    "text": "second button will stop recording and",
    "start": "308670",
    "end": "310290"
  },
  {
    "text": "the third one allows us to choose the",
    "start": "310290",
    "end": "312360"
  },
  {
    "text": "actual video source from the system now",
    "start": "312360",
    "end": "314700"
  },
  {
    "text": "let's jump into our render js5 if your",
    "start": "314700",
    "end": "316830"
  },
  {
    "text": "web developer you can think of this as",
    "start": "316830",
    "end": "318240"
  },
  {
    "text": "your friend end code and it has access",
    "start": "318240",
    "end": "320100"
  },
  {
    "text": "to everything that you would expect in",
    "start": "320100",
    "end": "321600"
  },
  {
    "text": "the browser let's start by simply making",
    "start": "321600",
    "end": "323280"
  },
  {
    "text": "a reference to the HTML elements in the",
    "start": "323280",
    "end": "325440"
  },
  {
    "text": "Dom we can use document query selector",
    "start": "325440",
    "end": "327630"
  },
  {
    "text": "to grab the video element and then we",
    "start": "327630",
    "end": "329730"
  },
  {
    "text": "can grab our three buttons by using",
    "start": "329730",
    "end": "331440"
  },
  {
    "text": "document get element by ID",
    "start": "331440",
    "end": "333450"
  },
  {
    "text": "our first challenge is getting access to",
    "start": "333450",
    "end": "335370"
  },
  {
    "text": "all of the available screens on the user",
    "start": "335370",
    "end": "337170"
  },
  {
    "text": "system to record luckily electron has a",
    "start": "337170",
    "end": "340169"
  },
  {
    "text": "desktop capture module that we can use",
    "start": "340169",
    "end": "342180"
  },
  {
    "text": "right here in our render process let's",
    "start": "342180",
    "end": "344010"
  },
  {
    "text": "go ahead and import the module using",
    "start": "344010",
    "end": "345480"
  },
  {
    "text": "require electron actually makes the",
    "start": "345480",
    "end": "347310"
  },
  {
    "text": "require function available in the",
    "start": "347310",
    "end": "348870"
  },
  {
    "text": "browser now that we have that imported",
    "start": "348870",
    "end": "350520"
  },
  {
    "text": "we'll go ahead and set up a custom async",
    "start": "350520",
    "end": "352710"
  },
  {
    "text": "function called get video sources and",
    "start": "352710",
    "end": "354660"
  },
  {
    "text": "we'll assign this function as the event",
    "start": "354660",
    "end": "356280"
  },
  {
    "text": "handler when our video select button is",
    "start": "356280",
    "end": "358169"
  },
  {
    "text": "clicked in the function body we can get",
    "start": "358169",
    "end": "360240"
  },
  {
    "text": "access to all of the windows or screens",
    "start": "360240",
    "end": "362490"
  },
  {
    "text": "in the system by calling desktop",
    "start": "362490",
    "end": "364380"
  },
  {
    "text": "captured get sources this method returns",
    "start": "364380",
    "end": "366780"
  },
  {
    "text": "a promise so we'll need to use the await",
    "start": "366780",
    "end": "368640"
  },
  {
    "text": "keyword to await the actual value the",
    "start": "368640",
    "end": "371040"
  },
  {
    "text": "value is an array of objects where each",
    "start": "371040",
    "end": "373020"
  },
  {
    "text": "object is a window or screen available",
    "start": "373020",
    "end": "375180"
  },
  {
    "text": "on the user's computer that we can",
    "start": "375180",
    "end": "376980"
  },
  {
    "text": "record and now that we have access to",
    "start": "376980",
    "end": "378900"
  },
  {
    "text": "this data we just need to implement some",
    "start": "378900",
    "end": "380669"
  },
  {
    "text": "kind of UI element for the user to",
    "start": "380669",
    "end": "382440"
  },
  {
    "text": "select the screen they want to record",
    "start": "382440",
    "end": "383970"
  },
  {
    "text": "that'd be a good use case for a native",
    "start": "383970",
    "end": "385919"
  },
  {
    "text": "popup menu",
    "start": "385919",
    "end": "386669"
  },
  {
    "text": "electron has a menu class but it's",
    "start": "386669",
    "end": "388620"
  },
  {
    "text": "actually designed to run on the main",
    "start": "388620",
    "end": "390180"
  },
  {
    "text": "process we can access things on the main",
    "start": "390180",
    "end": "392520"
  },
  {
    "text": "process using a module called remote",
    "start": "392520",
    "end": "394500"
  },
  {
    "text": "this is one way to handle inter process",
    "start": "394500",
    "end": "396570"
  },
  {
    "text": "communication",
    "start": "396570",
    "end": "397560"
  },
  {
    "text": "or IPC it's a very important concept but",
    "start": "397560",
    "end": "400110"
  },
  {
    "text": "all you need to know for now is that it",
    "start": "400110",
    "end": "401580"
  },
  {
    "text": "allows us to build native menus directly",
    "start": "401580",
    "end": "403380"
  },
  {
    "text": "in our front-end code here we'll set a",
    "start": "403380",
    "end": "404940"
  },
  {
    "text": "variable for the menu itself and then",
    "start": "404940",
    "end": "406680"
  },
  {
    "text": "we'll call menu build from template this",
    "start": "406680",
    "end": "408870"
  },
  {
    "text": "method expects an array of objects where",
    "start": "408870",
    "end": "410820"
  },
  {
    "text": "each object represents a different menu",
    "start": "410820",
    "end": "412680"
  },
  {
    "text": "item in an easy way to create that array",
    "start": "412680",
    "end": "414780"
  },
  {
    "text": "is with JavaScript array map method to",
    "start": "414780",
    "end": "417090"
  },
  {
    "text": "convert our array of input sources into",
    "start": "417090",
    "end": "419010"
  },
  {
    "text": "an array of menu items for each source",
    "start": "419010",
    "end": "421470"
  },
  {
    "text": "we'll return an object where the label",
    "start": "421470",
    "end": "423240"
  },
  {
    "text": "is the source name and then we'll",
    "start": "423240",
    "end": "424980"
  },
  {
    "text": "register an event handler for click that",
    "start": "424980",
    "end": "427050"
  },
  {
    "text": "calls another function that we have not",
    "start": "427050",
    "end": "428610"
  },
  {
    "text": "yet implemented yet called select source",
    "start": "428610",
    "end": "430410"
  },
  {
    "text": "and lastly if we simply call popup on",
    "start": "430410",
    "end": "432720"
  },
  {
    "text": "this menu now if we restart the app and",
    "start": "432720",
    "end": "434700"
  },
  {
    "text": "click that button you can see it gives",
    "start": "434700",
    "end": "436200"
  },
  {
    "text": "us a list of all the windows on our",
    "start": "436200",
    "end": "437760"
  },
  {
    "text": "system at this point clicking on an item",
    "start": "437760",
    "end": "439710"
  },
  {
    "text": "doesn't do anything that's because we",
    "start": "439710",
    "end": "441270"
  },
  {
    "text": "need to implement our select source",
    "start": "441270",
    "end": "443100"
  },
  {
    "text": "function this will also be an async",
    "start": "443100",
    "end": "445229"
  },
  {
    "text": "function and the first thing we do in",
    "start": "445229",
    "end": "446850"
  },
  {
    "text": "here is set the inner text of our video",
    "start": "446850",
    "end": "448860"
  },
  {
    "text": "select button - the name of the source",
    "start": "448860",
    "end": "450600"
  },
  {
    "text": "then to capture video from the source we",
    "start": "450600",
    "end": "452729"
  },
  {
    "text": "need to set up a few options here we'll",
    "start": "452729",
    "end": "454560"
  },
  {
    "text": "set audio to false and then we'll set",
    "start": "454560",
    "end": "456330"
  },
  {
    "text": "the chrome media source to desktop and",
    "start": "456330",
    "end": "458100"
  },
  {
    "text": "the Chrome media source ID to the source",
    "start": "458100",
    "end": "460139"
  },
  {
    "text": "ID we pass to the function from here",
    "start": "460139",
    "end": "462270"
  },
  {
    "text": "we'll use the browser's built-in",
    "start": "462270",
    "end": "463560"
  },
  {
    "text": "navigator API to create a streaming",
    "start": "463560",
    "end": "465510"
  },
  {
    "text": "video we can await navigator media",
    "start": "465510",
    "end": "467729"
  },
  {
    "text": "devices getusermedia with the constraint",
    "start": "467729",
    "end": "470280"
  },
  {
    "text": "options that we defined before this will",
    "start": "470280",
    "end": "472350"
  },
  {
    "text": "provide a stream of video output of",
    "start": "472350",
    "end": "474000"
  },
  {
    "text": "whatever's happening in that window so",
    "start": "474000",
    "end": "475890"
  },
  {
    "text": "all we have to do is grab our HTML video",
    "start": "475890",
    "end": "477630"
  },
  {
    "text": "element and set its source object to the",
    "start": "477630",
    "end": "479940"
  },
  {
    "text": "stream we'll click Play and that should",
    "start": "479940",
    "end": "482010"
  },
  {
    "text": "give us a real-time feed of the window",
    "start": "482010",
    "end": "483690"
  },
  {
    "text": "go ahead and restart the app and then",
    "start": "483690",
    "end": "485669"
  },
  {
    "text": "select a video source this time you",
    "start": "485669",
    "end": "487680"
  },
  {
    "text": "should see a real-time preview of the",
    "start": "487680",
    "end": "489330"
  },
  {
    "text": "video feed in your electron app ok so",
    "start": "489330",
    "end": "492270"
  },
  {
    "text": "now that we have a stream of video",
    "start": "492270",
    "end": "493470"
  },
  {
    "text": "footage from the user's system how do we",
    "start": "493470",
    "end": "495360"
  },
  {
    "text": "record it and then save it as a video",
    "start": "495360",
    "end": "496889"
  },
  {
    "text": "file that we can then play back one way",
    "start": "496889",
    "end": "498960"
  },
  {
    "text": "is to use the browsers built-in media",
    "start": "498960",
    "end": "500880"
  },
  {
    "text": "recorder I'll set the recorder up as a",
    "start": "500880",
    "end": "502680"
  },
  {
    "text": "global variable and then set an empty",
    "start": "502680",
    "end": "504690"
  },
  {
    "text": "array for the recorded chunks this would",
    "start": "504690",
    "end": "506880"
  },
  {
    "text": "allow you to potentially record video in",
    "start": "506880",
    "end": "508500"
  },
  {
    "text": "multiple segments from there we'll go",
    "start": "508500",
    "end": "510720"
  },
  {
    "text": "back down to our select source function",
    "start": "510720",
    "end": "512159"
  },
  {
    "text": "and we'll set up options for the mime",
    "start": "512159",
    "end": "514289"
  },
  {
    "text": "type on the media recorder then it will",
    "start": "514289",
    "end": "516150"
  },
  {
    "text": "instantiate the media recorder class",
    "start": "516150",
    "end": "517680"
  },
  {
    "text": "passing at the stream as the first",
    "start": "517680",
    "end": "519570"
  },
  {
    "text": "argument now the recorder can be",
    "start": "519570",
    "end": "521430"
  },
  {
    "text": "controlled by the user and it has an",
    "start": "521430",
    "end": "523080"
  },
  {
    "text": "event based API",
    "start": "523080",
    "end": "524039"
  },
  {
    "text": "there are two events that we care about",
    "start": "524039",
    "end": "525630"
  },
  {
    "text": "here on data available and onstop will",
    "start": "525630",
    "end": "528720"
  },
  {
    "text": "define handlers for these events as",
    "start": "528720",
    "end": "530190"
  },
  {
    "text": "separate functions",
    "start": "530190",
    "end": "531209"
  },
  {
    "text": "when the video data becomes available we",
    "start": "531209",
    "end": "533249"
  },
  {
    "text": "want to simply grab it and push it to",
    "start": "533249",
    "end": "535259"
  },
  {
    "text": "our recorded chunks array that's easy",
    "start": "535259",
    "end": "537389"
  },
  {
    "text": "enough but when the recording has been",
    "start": "537389",
    "end": "538860"
  },
  {
    "text": "fully stopped we want to take those",
    "start": "538860",
    "end": "540629"
  },
  {
    "text": "recorded chunks and convert them into a",
    "start": "540629",
    "end": "542429"
  },
  {
    "text": "video file we do that by creating a blob",
    "start": "542429",
    "end": "544529"
  },
  {
    "text": "and a blob is essentially just a data",
    "start": "544529",
    "end": "546540"
  },
  {
    "text": "structure to handle raw data like a",
    "start": "546540",
    "end": "548490"
  },
  {
    "text": "video file but what's kind of confusing",
    "start": "548490",
    "end": "550559"
  },
  {
    "text": "is we don't actually want to blow up",
    "start": "550559",
    "end": "551879"
  },
  {
    "text": "here we want a buffer which is also an",
    "start": "551879",
    "end": "554249"
  },
  {
    "text": "object for representing raw data we",
    "start": "554249",
    "end": "556230"
  },
  {
    "text": "create the buffer by calling buffer from",
    "start": "556230",
    "end": "558149"
  },
  {
    "text": "and then awaiting the blobs array buffer",
    "start": "558149",
    "end": "560399"
  },
  {
    "text": "I realize that's pretty weird but it's",
    "start": "560399",
    "end": "562350"
  },
  {
    "text": "just what we have to do to get the data",
    "start": "562350",
    "end": "563790"
  },
  {
    "text": "in the proper format to be played back",
    "start": "563790",
    "end": "565410"
  },
  {
    "text": "as video but now that we have this raw",
    "start": "565410",
    "end": "567300"
  },
  {
    "text": "data we need to give the user a way to",
    "start": "567300",
    "end": "569009"
  },
  {
    "text": "select where they want to save it on",
    "start": "569009",
    "end": "570629"
  },
  {
    "text": "their system electron has a very",
    "start": "570629",
    "end": "572490"
  },
  {
    "text": "powerful dialogue module that runs on",
    "start": "572490",
    "end": "574379"
  },
  {
    "text": "the main process so we can import that",
    "start": "574379",
    "end": "576179"
  },
  {
    "text": "from our remote module it allows us to",
    "start": "576179",
    "end": "578519"
  },
  {
    "text": "easily create native dialogues to do",
    "start": "578519",
    "end": "580199"
  },
  {
    "text": "things like save and open files in this",
    "start": "580199",
    "end": "582480"
  },
  {
    "text": "case we'll wait show save dialogue which",
    "start": "582480",
    "end": "584730"
  },
  {
    "text": "will resolve to the file path that the",
    "start": "584730",
    "end": "586499"
  },
  {
    "text": "user has selected we can customize the",
    "start": "586499",
    "end": "588389"
  },
  {
    "text": "button to say save video and then we'll",
    "start": "588389",
    "end": "590429"
  },
  {
    "text": "set up a default path that timestamps",
    "start": "590429",
    "end": "592319"
  },
  {
    "text": "the video and now that we have the user",
    "start": "592319",
    "end": "594059"
  },
  {
    "text": "selected file path we simply need to",
    "start": "594059",
    "end": "595889"
  },
  {
    "text": "write that file to the system and we can",
    "start": "595889",
    "end": "598079"
  },
  {
    "text": "do that of course in nodejs with the",
    "start": "598079",
    "end": "599970"
  },
  {
    "text": "built-in FS or file system module it's a",
    "start": "599970",
    "end": "602759"
  },
  {
    "text": "node module so we'll need to require it",
    "start": "602759",
    "end": "604499"
  },
  {
    "text": "and the function we're interested in is",
    "start": "604499",
    "end": "606119"
  },
  {
    "text": "write file we can come down here and put",
    "start": "606119",
    "end": "608339"
  },
  {
    "text": "it to use by passing at the file path",
    "start": "608339",
    "end": "610110"
  },
  {
    "text": "and then the buffer as the argument for",
    "start": "610110",
    "end": "612269"
  },
  {
    "text": "the raw data it's a callback based API",
    "start": "612269",
    "end": "614610"
  },
  {
    "text": "so we can pass in a third argument as a",
    "start": "614610",
    "end": "616410"
  },
  {
    "text": "function that will just console.log that",
    "start": "616410",
    "end": "618269"
  },
  {
    "text": "the video was saved successfully and",
    "start": "618269",
    "end": "619860"
  },
  {
    "text": "we're done your desktop app is now a",
    "start": "619860",
    "end": "621839"
  },
  {
    "text": "fully functional screen recorder but I",
    "start": "621839",
    "end": "623850"
  },
  {
    "text": "did promise you one more thing and",
    "start": "623850",
    "end": "625110"
  },
  {
    "text": "that's to package the app for different",
    "start": "625110",
    "end": "626730"
  },
  {
    "text": "operating systems like Mac Windows and",
    "start": "626730",
    "end": "628379"
  },
  {
    "text": "Linux",
    "start": "628379",
    "end": "628889"
  },
  {
    "text": "sounds pretty hard well not so much",
    "start": "628889",
    "end": "631110"
  },
  {
    "text": "electron Forge basically does all this",
    "start": "631110",
    "end": "633059"
  },
  {
    "text": "for us automatically out of the box",
    "start": "633059",
    "end": "634889"
  },
  {
    "text": "open up the terminal and run npm run",
    "start": "634889",
    "end": "637199"
  },
  {
    "text": "make it will automatically detect your",
    "start": "637199",
    "end": "638850"
  },
  {
    "text": "operating system and then build the",
    "start": "638850",
    "end": "640559"
  },
  {
    "text": "distributable for that OS I happen to be",
    "start": "640559",
    "end": "642959"
  },
  {
    "text": "on Windows right now so when I run this",
    "start": "642959",
    "end": "644579"
  },
  {
    "text": "command it creates an out directory and",
    "start": "644579",
    "end": "646649"
  },
  {
    "text": "then you can find the executable in here",
    "start": "646649",
    "end": "648449"
  },
  {
    "text": "to run your application natively I'm",
    "start": "648449",
    "end": "650399"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "650399",
    "end": "651779"
  },
  {
    "text": "I think the key takeaway here is that if",
    "start": "651779",
    "end": "653369"
  },
  {
    "text": "you know JavaScript then you can start",
    "start": "653369",
    "end": "654809"
  },
  {
    "text": "building desktop apps today and if you",
    "start": "654809",
    "end": "656639"
  },
  {
    "text": "want to see more project-based videos",
    "start": "656639",
    "end": "658019"
  },
  {
    "text": "like this on YouTube make sure to LIKE",
    "start": "658019",
    "end": "659699"
  },
  {
    "text": "and subscribe",
    "start": "659699",
    "end": "660310"
  },
  {
    "text": "and leave me a comment down below thanks",
    "start": "660310",
    "end": "662200"
  },
  {
    "text": "for watching and I will talk to you soon",
    "start": "662200",
    "end": "665320"
  },
  {
    "text": "[Music]",
    "start": "665320",
    "end": "671980"
  }
]