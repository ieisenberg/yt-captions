[
  {
    "text": "[Music]",
    "start": "0",
    "end": "5360"
  },
  {
    "text": "yesterday GCP announced a very exciting",
    "start": "6230",
    "end": "8790"
  },
  {
    "text": "new product called cloud run it's a",
    "start": "8790",
    "end": "10620"
  },
  {
    "text": "service that allows you to convert any",
    "start": "10620",
    "end": "12059"
  },
  {
    "text": "back-end code written in any programming",
    "start": "12059",
    "end": "13440"
  },
  {
    "text": "language with any dependencies into a",
    "start": "13440",
    "end": "15690"
  },
  {
    "text": "service function this means you can",
    "start": "15690",
    "end": "17279"
  },
  {
    "text": "deploy fully managed micro services that",
    "start": "17279",
    "end": "19080"
  },
  {
    "text": "will scale automatically while only",
    "start": "19080",
    "end": "20820"
  },
  {
    "text": "paying for the actual resources that you",
    "start": "20820",
    "end": "22470"
  },
  {
    "text": "use in today's video I'll show you how",
    "start": "22470",
    "end": "24150"
  },
  {
    "text": "to take a server-side rendered",
    "start": "24150",
    "end": "25560"
  },
  {
    "text": "JavaScript application containerize it",
    "start": "25560",
    "end": "27630"
  },
  {
    "text": "with docker deploy to cloud run and then",
    "start": "27630",
    "end": "29820"
  },
  {
    "text": "hook it up to firebase hosting if you're",
    "start": "29820",
    "end": "31650"
  },
  {
    "text": "new here like and subscribe and you can",
    "start": "31650",
    "end": "33149"
  },
  {
    "text": "grab the full walkthrough from buyer",
    "start": "33149",
    "end": "34710"
  },
  {
    "text": "ship IO I'm really excited about cloud",
    "start": "34710",
    "end": "36750"
  },
  {
    "text": "run because it's the service I've been",
    "start": "36750",
    "end": "38070"
  },
  {
    "text": "wishing for ever since I started working",
    "start": "38070",
    "end": "39719"
  },
  {
    "text": "with service functions the single",
    "start": "39719",
    "end": "41489"
  },
  {
    "text": "biggest problem with server list has",
    "start": "41489",
    "end": "42719"
  },
  {
    "text": "always been the limitation of the",
    "start": "42719",
    "end": "44010"
  },
  {
    "text": "runtime most cloud providers only offer",
    "start": "44010",
    "end": "46050"
  },
  {
    "text": "a few different programming languages",
    "start": "46050",
    "end": "47399"
  },
  {
    "text": "and if you need any special dependencies",
    "start": "47399",
    "end": "49140"
  },
  {
    "text": "in your runtime then you're basically",
    "start": "49140",
    "end": "50460"
  },
  {
    "text": "out of luck your only real option at",
    "start": "50460",
    "end": "52320"
  },
  {
    "text": "that point is to provision a virtual",
    "start": "52320",
    "end": "54030"
  },
  {
    "text": "machine or use something like App Engine",
    "start": "54030",
    "end": "55890"
  },
  {
    "text": "to deploy your code and those resources",
    "start": "55890",
    "end": "57719"
  },
  {
    "text": "are always online which means you're",
    "start": "57719",
    "end": "59340"
  },
  {
    "text": "always paying for them and you also have",
    "start": "59340",
    "end": "60989"
  },
  {
    "text": "to worry about scaling them up and down",
    "start": "60989",
    "end": "62520"
  },
  {
    "text": "cloud run is basically the best of both",
    "start": "62520",
    "end": "64320"
  },
  {
    "text": "worlds and really the future of cloud",
    "start": "64320",
    "end": "66119"
  },
  {
    "text": "computing in general in my opinion all",
    "start": "66119",
    "end": "67799"
  },
  {
    "text": "you have to do as a developer is write",
    "start": "67799",
    "end": "69510"
  },
  {
    "text": "your code and then wrap it in a docker",
    "start": "69510",
    "end": "71130"
  },
  {
    "text": "image the one thing to keep in mind",
    "start": "71130",
    "end": "72990"
  },
  {
    "text": "though is that your code needs to be",
    "start": "72990",
    "end": "74250"
  },
  {
    "text": "stateless in other words you can't be",
    "start": "74250",
    "end": "76110"
  },
  {
    "text": "saving permanent files to the file",
    "start": "76110",
    "end": "77460"
  },
  {
    "text": "system or be running a sequel database",
    "start": "77460",
    "end": "79590"
  },
  {
    "text": "and expect to have access to that data",
    "start": "79590",
    "end": "81180"
  },
  {
    "text": "later that shouldn't be a problem",
    "start": "81180",
    "end": "82500"
  },
  {
    "text": "because you should be building stateless",
    "start": "82500",
    "end": "83939"
  },
  {
    "text": "applications anyway while using things",
    "start": "83939",
    "end": "85619"
  },
  {
    "text": "like cloud storage fires store or cloud",
    "start": "85619",
    "end": "87960"
  },
  {
    "text": "sequel to manage your persistent data",
    "start": "87960",
    "end": "89640"
  },
  {
    "text": "now let's take a look at a few things",
    "start": "89640",
    "end": "91409"
  },
  {
    "text": "that you might want to start using cloud",
    "start": "91409",
    "end": "92820"
  },
  {
    "text": "run for the first thing is server-side",
    "start": "92820",
    "end": "95100"
  },
  {
    "text": "rendering JavaScript applications I'm",
    "start": "95100",
    "end": "96930"
  },
  {
    "text": "going to show you how to do this with",
    "start": "96930",
    "end": "98009"
  },
  {
    "text": "Knux j/s and view but the same",
    "start": "98009",
    "end": "99689"
  },
  {
    "text": "principles apply to angular Universal or",
    "start": "99689",
    "end": "101970"
  },
  {
    "text": "next j/s with react",
    "start": "101970",
    "end": "103259"
  },
  {
    "text": "you could also hypothetically use it to",
    "start": "103259",
    "end": "104939"
  },
  {
    "text": "build a more traditional web application",
    "start": "104939",
    "end": "106710"
  },
  {
    "text": "like say WordPress or Ruby on Rails as",
    "start": "106710",
    "end": "108780"
  },
  {
    "text": "long as you keep the database outside of",
    "start": "108780",
    "end": "110460"
  },
  {
    "text": "the container and I find this one really",
    "start": "110460",
    "end": "112110"
  },
  {
    "text": "interesting because that means you could",
    "start": "112110",
    "end": "113340"
  },
  {
    "text": "have a wordpress site hosted on firebase",
    "start": "113340",
    "end": "115140"
  },
  {
    "text": "hosting and another use case for cloud",
    "start": "115140",
    "end": "117149"
  },
  {
    "text": "run would just be to create restful api",
    "start": "117149",
    "end": "118920"
  },
  {
    "text": "soar even graph QL api's and feel free",
    "start": "118920",
    "end": "121350"
  },
  {
    "text": "to do it in whatever programming",
    "start": "121350",
    "end": "122460"
  },
  {
    "text": "language you want now let's go ahead and",
    "start": "122460",
    "end": "124259"
  },
  {
    "text": "take a look at a full example from start",
    "start": "124259",
    "end": "125969"
  },
  {
    "text": "to finish we're going to take this",
    "start": "125969",
    "end": "127409"
  },
  {
    "text": "knucks j/s app which is just a view app",
    "start": "127409",
    "end": "129479"
  },
  {
    "text": "that server-side rendered with express",
    "start": "129479",
    "end": "131280"
  },
  {
    "text": "j/s will create a docker image for it",
    "start": "131280",
    "end": "133890"
  },
  {
    "text": "and deploy it as a micro service to",
    "start": "133890",
    "end": "135420"
  },
  {
    "text": "cloud run and as a final touch I'll show",
    "start": "135420",
    "end": "137220"
  },
  {
    "text": "you how to integrate it with firebase",
    "start": "137220",
    "end": "138720"
  },
  {
    "text": "hosting to follow along with this lesson",
    "start": "138720",
    "end": "140520"
  },
  {
    "text": "you'll need to have docker installed on",
    "start": "140520",
    "end": "142020"
  },
  {
    "text": "your local system as well as the Google",
    "start": "142020",
    "end": "143819"
  },
  {
    "text": "Cloud SDK first we need to create an app",
    "start": "143819",
    "end": "146310"
  },
  {
    "text": "or a micro service that we can deploy",
    "start": "146310",
    "end": "147959"
  },
  {
    "text": "I'll be using knucks j/s for this demo",
    "start": "147959",
    "end": "149970"
  },
  {
    "text": "and the reason I chose next is because",
    "start": "149970",
    "end": "151560"
  },
  {
    "text": "it's really easy to get started with",
    "start": "151560",
    "end": "152760"
  },
  {
    "text": "server-side rendering from the",
    "start": "152760",
    "end": "154680"
  },
  {
    "text": "command-line we ran npx create knucks",
    "start": "154680",
    "end": "156630"
  },
  {
    "text": "tap and then it will give us a handful",
    "start": "156630",
    "end": "158280"
  },
  {
    "text": "of options that we can run through",
    "start": "158280",
    "end": "159480"
  },
  {
    "text": "mostly we'll just select the defaults",
    "start": "159480",
    "end": "161040"
  },
  {
    "text": "here the only important thing is to",
    "start": "161040",
    "end": "162510"
  },
  {
    "text": "select Universal as the rendering mode",
    "start": "162510",
    "end": "164459"
  },
  {
    "text": "from there we can open it up in vs code",
    "start": "164459",
    "end": "166770"
  },
  {
    "text": "and then run npm run dev to serve the",
    "start": "166770",
    "end": "169260"
  },
  {
    "text": "app locally that's just running an",
    "start": "169260",
    "end": "170880"
  },
  {
    "text": "Express j/s server with node and you",
    "start": "170880",
    "end": "172950"
  },
  {
    "text": "should see something that looks like",
    "start": "172950",
    "end": "173880"
  },
  {
    "text": "this in the browser on localhost 3000",
    "start": "173880",
    "end": "176070"
  },
  {
    "text": "I'm not going to spend any time changing",
    "start": "176070",
    "end": "177870"
  },
  {
    "text": "the underlying nuts code it's already",
    "start": "177870",
    "end": "179640"
  },
  {
    "text": "ready to go we just need to docker eyes",
    "start": "179640",
    "end": "181410"
  },
  {
    "text": "it I'm not going to get into the",
    "start": "181410",
    "end": "182610"
  },
  {
    "text": "fundamentals of docker in this video but",
    "start": "182610",
    "end": "184230"
  },
  {
    "text": "you can think of an image as an",
    "start": "184230",
    "end": "185580"
  },
  {
    "text": "executable of your application we create",
    "start": "185580",
    "end": "188070"
  },
  {
    "text": "this image by defining a docker file and",
    "start": "188070",
    "end": "190200"
  },
  {
    "text": "in that file we define a series of steps",
    "start": "190200",
    "end": "192060"
  },
  {
    "text": "required to build the actual virtual",
    "start": "192060",
    "end": "193769"
  },
  {
    "text": "machine or container that runs our code",
    "start": "193769",
    "end": "195780"
  },
  {
    "text": "so even if you've never used docker",
    "start": "195780",
    "end": "197280"
  },
  {
    "text": "before it's actually very intuitive and",
    "start": "197280",
    "end": "199320"
  },
  {
    "text": "easy to write a docker file because",
    "start": "199320",
    "end": "200910"
  },
  {
    "text": "you're basically just doing the same",
    "start": "200910",
    "end": "202019"
  },
  {
    "text": "things that you would normally do from",
    "start": "202019",
    "end": "203400"
  },
  {
    "text": "the command line to run your app go",
    "start": "203400",
    "end": "205680"
  },
  {
    "text": "ahead and create a docker file in the",
    "start": "205680",
    "end": "207090"
  },
  {
    "text": "root of the application and the first",
    "start": "207090",
    "end": "208739"
  },
  {
    "text": "step in any docker file is to define the",
    "start": "208739",
    "end": "210570"
  },
  {
    "text": "base image this is usually just a",
    "start": "210570",
    "end": "212430"
  },
  {
    "text": "minimal operating system like a Linux",
    "start": "212430",
    "end": "214260"
  },
  {
    "text": "distro or in our case since we're",
    "start": "214260",
    "end": "215760"
  },
  {
    "text": "building a node app we'll use the node",
    "start": "215760",
    "end": "217200"
  },
  {
    "text": "10 image which is just a Linux distro",
    "start": "217200",
    "end": "219150"
  },
  {
    "text": "with node version 10 installed you can",
    "start": "219150",
    "end": "221010"
  },
  {
    "text": "think of the steps in a docker file",
    "start": "221010",
    "end": "222299"
  },
  {
    "text": "similar to these steps that you would",
    "start": "222299",
    "end": "223650"
  },
  {
    "text": "run from the command line for cloud run",
    "start": "223650",
    "end": "225900"
  },
  {
    "text": "we're going to set the working directory",
    "start": "225900",
    "end": "227370"
  },
  {
    "text": "as user source app that's kind of like",
    "start": "227370",
    "end": "229829"
  },
  {
    "text": "seeding into a directory and then we'll",
    "start": "229829",
    "end": "231810"
  },
  {
    "text": "set an environment variable called port",
    "start": "231810",
    "end": "233430"
  },
  {
    "text": "this environment variable is very",
    "start": "233430",
    "end": "234959"
  },
  {
    "text": "important in this case because cloud",
    "start": "234959",
    "end": "236370"
  },
  {
    "text": "runs going to be looking for this port",
    "start": "236370",
    "end": "238079"
  },
  {
    "text": "and expose it so you can actually",
    "start": "238079",
    "end": "239489"
  },
  {
    "text": "interact with the service after it's",
    "start": "239489",
    "end": "241079"
  },
  {
    "text": "deployed and we'll also define a host",
    "start": "241079",
    "end": "243000"
  },
  {
    "text": "environment variable because next we'll",
    "start": "243000",
    "end": "244650"
  },
  {
    "text": "be looking for the host and the port to",
    "start": "244650",
    "end": "246239"
  },
  {
    "text": "determine how to serve the app the next",
    "start": "246239",
    "end": "248400"
  },
  {
    "text": "thing we'll do is copy the package JSON",
    "start": "248400",
    "end": "250019"
  },
  {
    "text": "files in the working directory and then",
    "start": "250019",
    "end": "252359"
  },
  {
    "text": "we'll run NPM install only for our",
    "start": "252359",
    "end": "254160"
  },
  {
    "text": "production dependencies from there we'll",
    "start": "254160",
    "end": "256049"
  },
  {
    "text": "copy all the source code from our local",
    "start": "256049",
    "end": "257729"
  },
  {
    "text": "project to the working directory then",
    "start": "257729",
    "end": "259919"
  },
  {
    "text": "we'll run NPM build to build the",
    "start": "259919",
    "end": "261750"
  },
  {
    "text": "production next app and then npm start",
    "start": "261750",
    "end": "263880"
  },
  {
    "text": "which is the command that actually",
    "start": "263880",
    "end": "265140"
  },
  {
    "text": "starts the service in this container",
    "start": "265140",
    "end": "267200"
  },
  {
    "text": "so that's our entire dockerfile now that",
    "start": "267200",
    "end": "269090"
  },
  {
    "text": "we have that complete we want to build",
    "start": "269090",
    "end": "270590"
  },
  {
    "text": "the image itself we can run docker build",
    "start": "270590",
    "end": "273290"
  },
  {
    "text": "and then point to the directory that",
    "start": "273290",
    "end": "274940"
  },
  {
    "text": "contains the docker file that's going to",
    "start": "274940",
    "end": "277520"
  },
  {
    "text": "build out the image in a series of steps",
    "start": "277520",
    "end": "279020"
  },
  {
    "text": "or layers and now docker knows how to",
    "start": "279020",
    "end": "281120"
  },
  {
    "text": "reproduce our code so it can scale to an",
    "start": "281120",
    "end": "283130"
  },
  {
    "text": "infinite number of containers after",
    "start": "283130",
    "end": "284900"
  },
  {
    "text": "that's done you'll notice that gives us",
    "start": "284900",
    "end": "285980"
  },
  {
    "text": "an image ID down here at the bottom you",
    "start": "285980",
    "end": "288410"
  },
  {
    "text": "can use that ID to run the container",
    "start": "288410",
    "end": "289790"
  },
  {
    "text": "locally which is generally a good idea",
    "start": "289790",
    "end": "291230"
  },
  {
    "text": "just to make sure everything is working",
    "start": "291230",
    "end": "292550"
  },
  {
    "text": "before you deploy it you can do that",
    "start": "292550",
    "end": "294200"
  },
  {
    "text": "with docker run and then you should see",
    "start": "294200",
    "end": "295730"
  },
  {
    "text": "the same next app being served on",
    "start": "295730",
    "end": "297170"
  },
  {
    "text": "localhost 8080 now that we know that",
    "start": "297170",
    "end": "299570"
  },
  {
    "text": "everything is working properly we need",
    "start": "299570",
    "end": "300920"
  },
  {
    "text": "to tag this image and then upload it to",
    "start": "300920",
    "end": "302960"
  },
  {
    "text": "the Container registry on GCP we can do",
    "start": "302960",
    "end": "305630"
  },
  {
    "text": "that by first running docker tag",
    "start": "305630",
    "end": "306890"
  },
  {
    "text": "followed by the image ID and then",
    "start": "306890",
    "end": "309110"
  },
  {
    "text": "followed by GC r io slash your project",
    "start": "309110",
    "end": "312020"
  },
  {
    "text": "ID slash whatever you want to call this",
    "start": "312020",
    "end": "313850"
  },
  {
    "text": "service that associates the image with",
    "start": "313850",
    "end": "315800"
  },
  {
    "text": "this URL then you can run docker push to",
    "start": "315800",
    "end": "317930"
  },
  {
    "text": "actually upload it to that URL that's",
    "start": "317930",
    "end": "320030"
  },
  {
    "text": "going to take a few minutes but when",
    "start": "320030",
    "end": "321320"
  },
  {
    "text": "it's finished you can go to the GCP",
    "start": "321320",
    "end": "323060"
  },
  {
    "text": "console and see it in the container",
    "start": "323060",
    "end": "324650"
  },
  {
    "text": "registry and just a side note you can",
    "start": "324650",
    "end": "326780"
  },
  {
    "text": "use cloud build to entirely automate",
    "start": "326780",
    "end": "328400"
  },
  {
    "text": "this process if you don't want to do it",
    "start": "328400",
    "end": "329720"
  },
  {
    "text": "manually like I just showed you and I",
    "start": "329720",
    "end": "331370"
  },
  {
    "text": "made a video all about that a few weeks",
    "start": "331370",
    "end": "332930"
  },
  {
    "text": "ago the next step is to take this image",
    "start": "332930",
    "end": "335090"
  },
  {
    "text": "and deploy it as a micro service with",
    "start": "335090",
    "end": "336920"
  },
  {
    "text": "cloud run head over to the container",
    "start": "336920",
    "end": "339020"
  },
  {
    "text": "registry on GC P and verify that the",
    "start": "339020",
    "end": "341300"
  },
  {
    "text": "image that you just uploaded is",
    "start": "341300",
    "end": "342590"
  },
  {
    "text": "available there from there head over to",
    "start": "342590",
    "end": "344240"
  },
  {
    "text": "cloud run and we'll create a new service",
    "start": "344240",
    "end": "346070"
  },
  {
    "text": "by clicking on the create service button",
    "start": "346070",
    "end": "347690"
  },
  {
    "text": "that will give us the option to select a",
    "start": "347690",
    "end": "349910"
  },
  {
    "text": "container image URL which we can do for",
    "start": "349910",
    "end": "351830"
  },
  {
    "text": "our knucks server and just give it a",
    "start": "351830",
    "end": "353540"
  },
  {
    "text": "name and a location and then make sure",
    "start": "353540",
    "end": "355580"
  },
  {
    "text": "to check the button for allow",
    "start": "355580",
    "end": "356870"
  },
  {
    "text": "unauthenticated invocations",
    "start": "356870",
    "end": "358580"
  },
  {
    "text": "this is a public app so we want anybody",
    "start": "358580",
    "end": "360470"
  },
  {
    "text": "to be able to access the service it'll",
    "start": "360470",
    "end": "362480"
  },
  {
    "text": "take a few minutes to finish but when",
    "start": "362480",
    "end": "363710"
  },
  {
    "text": "it's done you should be able to see the",
    "start": "363710",
    "end": "364880"
  },
  {
    "text": "logs coming from the container and then",
    "start": "364880",
    "end": "366650"
  },
  {
    "text": "you'll see a URL that we can use to",
    "start": "366650",
    "end": "367880"
  },
  {
    "text": "access the service over HTTP and if we",
    "start": "367880",
    "end": "370160"
  },
  {
    "text": "open it in a browser we should see the",
    "start": "370160",
    "end": "371690"
  },
  {
    "text": "same exact next app that we were working",
    "start": "371690",
    "end": "373220"
  },
  {
    "text": "with locally now at this point we could",
    "start": "373220",
    "end": "374960"
  },
  {
    "text": "map the service domain to our own custom",
    "start": "374960",
    "end": "376790"
  },
  {
    "text": "domain and that can be done directly",
    "start": "376790",
    "end": "378140"
  },
  {
    "text": "through the cloud run console but cloud",
    "start": "378140",
    "end": "380600"
  },
  {
    "text": "run is also integrated with firebase so",
    "start": "380600",
    "end": "382520"
  },
  {
    "text": "we can actually map this service to our",
    "start": "382520",
    "end": "384140"
  },
  {
    "text": "firebase hosting account at this point",
    "start": "384140",
    "end": "386480"
  },
  {
    "text": "I'm assuming you have the firebase",
    "start": "386480",
    "end": "387620"
  },
  {
    "text": "command line tools installed then run",
    "start": "387620",
    "end": "389390"
  },
  {
    "text": "firebase in it hosting from inside of",
    "start": "389390",
    "end": "391280"
  },
  {
    "text": "the next app you can select all the",
    "start": "391280",
    "end": "392960"
  },
  {
    "text": "default options then choose no when",
    "start": "392960",
    "end": "394730"
  },
  {
    "text": "asked if it's a single page application",
    "start": "394730",
    "end": "396620"
  },
  {
    "text": "firebase will automatically create a",
    "start": "396620",
    "end": "398300"
  },
  {
    "text": "public directory you want to go ahead",
    "start": "398300",
    "end": "399830"
  },
  {
    "text": "and keep that directory",
    "start": "399830",
    "end": "401120"
  },
  {
    "text": "but delete the index.html that's inside",
    "start": "401120",
    "end": "403220"
  },
  {
    "text": "it firebase hosting will get a higher",
    "start": "403220",
    "end": "404900"
  },
  {
    "text": "priority to this index.html file than it",
    "start": "404900",
    "end": "407150"
  },
  {
    "text": "will to rewrites and what we're actually",
    "start": "407150",
    "end": "409070"
  },
  {
    "text": "doing here is rewriting all of our",
    "start": "409070",
    "end": "410690"
  },
  {
    "text": "traffic to that micro service endpoint",
    "start": "410690",
    "end": "412419"
  },
  {
    "text": "we do that by going into the firebase",
    "start": "412419",
    "end": "414889"
  },
  {
    "text": "JSON file add a rewrites array and then",
    "start": "414889",
    "end": "417620"
  },
  {
    "text": "define an object that has a property of",
    "start": "417620",
    "end": "419570"
  },
  {
    "text": "source which points to star star which",
    "start": "419570",
    "end": "421520"
  },
  {
    "text": "will just capture all the routes in this",
    "start": "421520",
    "end": "423080"
  },
  {
    "text": "app and then a second property called",
    "start": "423080",
    "end": "424880"
  },
  {
    "text": "run which will point to the service ID",
    "start": "424880",
    "end": "426680"
  },
  {
    "text": "or the service name that we defined and",
    "start": "426680",
    "end": "428780"
  },
  {
    "text": "cloud run from there we just need to run",
    "start": "428780",
    "end": "430940"
  },
  {
    "text": "firebase deploy only hosting and now we",
    "start": "430940",
    "end": "433220"
  },
  {
    "text": "have a next app deployed to firebase",
    "start": "433220",
    "end": "434930"
  },
  {
    "text": "hosting with full server-side rendering",
    "start": "434930",
    "end": "436580"
  },
  {
    "text": "and like I mentioned earlier you can do",
    "start": "436580",
    "end": "438380"
  },
  {
    "text": "the same thing with angular universal or",
    "start": "438380",
    "end": "440300"
  },
  {
    "text": "react next or whatever you want but more",
    "start": "440300",
    "end": "443000"
  },
  {
    "text": "importantly cloud run basically removes",
    "start": "443000",
    "end": "444590"
  },
  {
    "text": "all the limitations that we used to face",
    "start": "444590",
    "end": "446180"
  },
  {
    "text": "when building serverless apps I'm gonna",
    "start": "446180",
    "end": "447979"
  },
  {
    "text": "go ahead and wrap things up there but",
    "start": "447979",
    "end": "449240"
  },
  {
    "text": "expect more cloud run videos in the",
    "start": "449240",
    "end": "450650"
  },
  {
    "text": "future because it opens the door to all",
    "start": "450650",
    "end": "452060"
  },
  {
    "text": "kinds of interesting possibilities if",
    "start": "452060",
    "end": "454010"
  },
  {
    "text": "this video helped you please like and",
    "start": "454010",
    "end": "455330"
  },
  {
    "text": "subscribe and consider becoming a pro",
    "start": "455330",
    "end": "457100"
  },
  {
    "text": "member at fire ship IO to get access to",
    "start": "457100",
    "end": "459229"
  },
  {
    "text": "even more content thanks for watching",
    "start": "459229",
    "end": "461120"
  },
  {
    "text": "and I will talk to you soon",
    "start": "461120",
    "end": "463890"
  },
  {
    "text": "[Music]",
    "start": "463890",
    "end": "471749"
  }
]