[
  {
    "text": "fire base makes basic user",
    "start": "30",
    "end": "1560"
  },
  {
    "text": "authentication very easy but what",
    "start": "1560",
    "end": "3480"
  },
  {
    "text": "happens if you require additional data",
    "start": "3480",
    "end": "5220"
  },
  {
    "text": "from your user before they're authorized",
    "start": "5220",
    "end": "6930"
  },
  {
    "text": "to start using your app in this episode",
    "start": "6930",
    "end": "9210"
  },
  {
    "text": "I'm going to set up a multi-step signup",
    "start": "9210",
    "end": "11010"
  },
  {
    "text": "form that requires the user to fill out",
    "start": "11010",
    "end": "12929"
  },
  {
    "text": "a catchphrase on their user profile",
    "start": "12929",
    "end": "14730"
  },
  {
    "text": "before they're authorized to start using",
    "start": "14730",
    "end": "16260"
  },
  {
    "text": "the app then we're going to secure all",
    "start": "16260",
    "end": "18090"
  },
  {
    "text": "the application data on both the front",
    "start": "18090",
    "end": "20070"
  },
  {
    "text": "end and the back end this feature works",
    "start": "20070",
    "end": "22140"
  },
  {
    "text": "by setting up a custom user document in",
    "start": "22140",
    "end": "24240"
  },
  {
    "text": "the firestore database we can then",
    "start": "24240",
    "end": "26400"
  },
  {
    "text": "verify that the current user has the",
    "start": "26400",
    "end": "28170"
  },
  {
    "text": "correct information on their document",
    "start": "28170",
    "end": "30000"
  },
  {
    "text": "before they're authorized to perform",
    "start": "30000",
    "end": "31410"
  },
  {
    "text": "certain actions in order to build this",
    "start": "31410",
    "end": "33870"
  },
  {
    "text": "feature I'm going to be using the fire",
    "start": "33870",
    "end": "35399"
  },
  {
    "text": "starter demo app which is on github you",
    "start": "35399",
    "end": "37770"
  },
  {
    "text": "can clone it if you want but this code",
    "start": "37770",
    "end": "39480"
  },
  {
    "text": "can be applied to any angular app that's",
    "start": "39480",
    "end": "41399"
  },
  {
    "text": "using firebase but before we get started",
    "start": "41399",
    "end": "43770"
  },
  {
    "text": "make sure to subscribe and you can find",
    "start": "43770",
    "end": "46020"
  },
  {
    "text": "all the source code at angular firebase",
    "start": "46020",
    "end": "48000"
  },
  {
    "text": "com the first place we're going to start",
    "start": "48000",
    "end": "50160"
  },
  {
    "text": "is in the auth service and in my case",
    "start": "50160",
    "end": "52079"
  },
  {
    "text": "it's in that core module the goal with",
    "start": "52079",
    "end": "54719"
  },
  {
    "text": "the service is to keep track of the",
    "start": "54719",
    "end": "56190"
  },
  {
    "text": "current user and give them the ability",
    "start": "56190",
    "end": "57690"
  },
  {
    "text": "to sign in via email and password the",
    "start": "57690",
    "end": "60840"
  },
  {
    "text": "important imports to take note of here",
    "start": "60840",
    "end": "62460"
  },
  {
    "text": "are angularfire auth and angular fire",
    "start": "62460",
    "end": "64680"
  },
  {
    "text": "store as well as the switch map operator",
    "start": "64680",
    "end": "67020"
  },
  {
    "text": "from rxjs the first thing I'm going to",
    "start": "67020",
    "end": "69450"
  },
  {
    "text": "do is set up an interface to model our",
    "start": "69450",
    "end": "71340"
  },
  {
    "text": "user data we need to have a user ID and",
    "start": "71340",
    "end": "73860"
  },
  {
    "text": "email address which we'll get from",
    "start": "73860",
    "end": "75150"
  },
  {
    "text": "firebase auth and then our custom piece",
    "start": "75150",
    "end": "77070"
  },
  {
    "text": "of data is the catchphrase notice that",
    "start": "77070",
    "end": "79860"
  },
  {
    "text": "you don't need to actually add the",
    "start": "79860",
    "end": "81119"
  },
  {
    "text": "password to the user interface that's",
    "start": "81119",
    "end": "82799"
  },
  {
    "text": "all handled by angularfire auth so our",
    "start": "82799",
    "end": "85830"
  },
  {
    "text": "actual user is going to be an observable",
    "start": "85830",
    "end": "87420"
  },
  {
    "text": "type to this interface then we'll inject",
    "start": "87420",
    "end": "89850"
  },
  {
    "text": "our dependencies in the constructor the",
    "start": "89850",
    "end": "91860"
  },
  {
    "text": "notify service that I'm adding here is",
    "start": "91860",
    "end": "93479"
  },
  {
    "text": "part of the demo app it's not required",
    "start": "93479",
    "end": "95280"
  },
  {
    "text": "but it's used to show the end-user any",
    "start": "95280",
    "end": "97439"
  },
  {
    "text": "problems with the sign-in process then",
    "start": "97439",
    "end": "100259"
  },
  {
    "text": "inside the constructor we'll define the",
    "start": "100259",
    "end": "101939"
  },
  {
    "text": "user variable so we do this by calling",
    "start": "101939",
    "end": "104100"
  },
  {
    "text": "angularfire auth state which gives us an",
    "start": "104100",
    "end": "106530"
  },
  {
    "text": "observable that we can call switch map",
    "start": "106530",
    "end": "108060"
  },
  {
    "text": "on if the current user is logged in then",
    "start": "108060",
    "end": "110909"
  },
  {
    "text": "we'll go ahead and retrieve the user",
    "start": "110909",
    "end": "112380"
  },
  {
    "text": "data from fire store we do that by",
    "start": "112380",
    "end": "114840"
  },
  {
    "text": "calling AFS doc and then point to that",
    "start": "114840",
    "end": "117390"
  },
  {
    "text": "current users user ID and then call",
    "start": "117390",
    "end": "119729"
  },
  {
    "text": "value changes to get the observable if",
    "start": "119729",
    "end": "122100"
  },
  {
    "text": "the users not logged in then we're just",
    "start": "122100",
    "end": "123869"
  },
  {
    "text": "going to return an observable up null",
    "start": "123869",
    "end": "125630"
  },
  {
    "text": "that chunk of code is going to keep",
    "start": "125630",
    "end": "127799"
  },
  {
    "text": "track of the current user at the global",
    "start": "127799",
    "end": "129690"
  },
  {
    "text": "level throughout our application it's",
    "start": "129690",
    "end": "131819"
  },
  {
    "text": "easy for things to go wrong with email",
    "start": "131819",
    "end": "133170"
  },
  {
    "text": "password",
    "start": "133170",
    "end": "133740"
  },
  {
    "text": "for example the user might try to login",
    "start": "133740",
    "end": "135690"
  },
  {
    "text": "with an email address that's already",
    "start": "135690",
    "end": "137370"
  },
  {
    "text": "been taken when that happens we're going",
    "start": "137370",
    "end": "139320"
  },
  {
    "text": "to use this helper method to notify the",
    "start": "139320",
    "end": "141030"
  },
  {
    "text": "user in the front-end after that we're",
    "start": "141030",
    "end": "143610"
  },
  {
    "text": "going to create another helper method",
    "start": "143610",
    "end": "145110"
  },
  {
    "text": "that will create a new user document",
    "start": "145110",
    "end": "147120"
  },
  {
    "text": "when the user first signs up when the",
    "start": "147120",
    "end": "149430"
  },
  {
    "text": "user signs up firebase will give us a",
    "start": "149430",
    "end": "151140"
  },
  {
    "text": "user object we can then use that object",
    "start": "151140",
    "end": "153450"
  },
  {
    "text": "to point to a document in fire store at",
    "start": "153450",
    "end": "156660"
  },
  {
    "text": "this point we're only going to have the",
    "start": "156660",
    "end": "157830"
  },
  {
    "text": "user's email address and user ID so",
    "start": "157830",
    "end": "160050"
  },
  {
    "text": "we'll go ahead and set that to an object",
    "start": "160050",
    "end": "161460"
  },
  {
    "text": "then we can update the document in fire",
    "start": "161460",
    "end": "164010"
  },
  {
    "text": "store now we need a way to create a new",
    "start": "164010",
    "end": "166560"
  },
  {
    "text": "user by having that blog in with an",
    "start": "166560",
    "end": "168360"
  },
  {
    "text": "email address and a password so we'll",
    "start": "168360",
    "end": "170970"
  },
  {
    "text": "create a method that will handle this",
    "start": "170970",
    "end": "172350"
  },
  {
    "text": "data and then we can call angularfire",
    "start": "172350",
    "end": "174360"
  },
  {
    "text": "auth create user with email and password",
    "start": "174360",
    "end": "176960"
  },
  {
    "text": "this is going to return a promise and if",
    "start": "176960",
    "end": "179880"
  },
  {
    "text": "it's successful it will return the user",
    "start": "179880",
    "end": "181770"
  },
  {
    "text": "object and then we'll go ahead and use",
    "start": "181770",
    "end": "183960"
  },
  {
    "text": "that user object to create the user",
    "start": "183960",
    "end": "186210"
  },
  {
    "text": "document in that helper method that we",
    "start": "186210",
    "end": "187890"
  },
  {
    "text": "just defined and lastly we'll catch any",
    "start": "187890",
    "end": "190710"
  },
  {
    "text": "errors and notify the user if there's",
    "start": "190710",
    "end": "192510"
  },
  {
    "text": "any problem with the signup that handles",
    "start": "192510",
    "end": "194880"
  },
  {
    "text": "the first part of the signup but if you",
    "start": "194880",
    "end": "196440"
  },
  {
    "text": "have additional steps you'll need a",
    "start": "196440",
    "end": "197940"
  },
  {
    "text": "method to update data on that user",
    "start": "197940",
    "end": "200070"
  },
  {
    "text": "document this method will take the",
    "start": "200070",
    "end": "202470"
  },
  {
    "text": "current user as well as the data that we",
    "start": "202470",
    "end": "203940"
  },
  {
    "text": "want to update and then we'll point to",
    "start": "203940",
    "end": "205740"
  },
  {
    "text": "that users user ID and fire store and",
    "start": "205740",
    "end": "207960"
  },
  {
    "text": "update the data now let's jump over to",
    "start": "207960",
    "end": "210660"
  },
  {
    "text": "the user form component and put the",
    "start": "210660",
    "end": "212490"
  },
  {
    "text": "service to use first I want to show you",
    "start": "212490",
    "end": "214410"
  },
  {
    "text": "how it's set up in the router so here",
    "start": "214410",
    "end": "216330"
  },
  {
    "text": "I'm in the app routing module and I have",
    "start": "216330",
    "end": "218490"
  },
  {
    "text": "three unrelated components that we're",
    "start": "218490",
    "end": "220200"
  },
  {
    "text": "going to lock down for unauthorized",
    "start": "220200",
    "end": "221880"
  },
  {
    "text": "users later and then our user form",
    "start": "221880",
    "end": "224370"
  },
  {
    "text": "component we're going to load at the",
    "start": "224370",
    "end": "226500"
  },
  {
    "text": "login path we're going to come back here",
    "start": "226500",
    "end": "228780"
  },
  {
    "text": "a little bit later to add a router guard",
    "start": "228780",
    "end": "230490"
  },
  {
    "text": "to secure all of these routes then",
    "start": "230490",
    "end": "233040"
  },
  {
    "text": "you'll also need to go into whichever ng",
    "start": "233040",
    "end": "235050"
  },
  {
    "text": "module uses this component and import",
    "start": "235050",
    "end": "237300"
  },
  {
    "text": "the reactive forms module from angular",
    "start": "237300",
    "end": "239700"
  },
  {
    "text": "forms now we can start writing this",
    "start": "239700",
    "end": "242190"
  },
  {
    "text": "component first we need the off service",
    "start": "242190",
    "end": "244980"
  },
  {
    "text": "and we also need a few reactive forms",
    "start": "244980",
    "end": "247260"
  },
  {
    "text": "pieces including form group form builder",
    "start": "247260",
    "end": "249600"
  },
  {
    "text": "and validators the component is going to",
    "start": "249600",
    "end": "252390"
  },
  {
    "text": "use two separate form groups so the",
    "start": "252390",
    "end": "254520"
  },
  {
    "text": "first form will be the signup form and",
    "start": "254520",
    "end": "256470"
  },
  {
    "text": "the second form will be the detail form",
    "start": "256470",
    "end": "258180"
  },
  {
    "text": "where we collect any additional",
    "start": "258180",
    "end": "259470"
  },
  {
    "text": "information we want from the user in",
    "start": "259470",
    "end": "261209"
  },
  {
    "text": "this case we're only collecting that",
    "start": "261209",
    "end": "262919"
  },
  {
    "text": "catchphrase property but you could",
    "start": "262919",
    "end": "264479"
  },
  {
    "text": "collect any information you want there",
    "start": "264479",
    "end": "266340"
  },
  {
    "text": "then we'll inject form builder in the",
    "start": "266340",
    "end": "268260"
  },
  {
    "text": "constructor as well as the aw service to",
    "start": "268260",
    "end": "270990"
  },
  {
    "text": "create a reactive form you call form",
    "start": "270990",
    "end": "272880"
  },
  {
    "text": "builder group and then you pass it an",
    "start": "272880",
    "end": "274860"
  },
  {
    "text": "object where each key is a corresponding",
    "start": "274860",
    "end": "277440"
  },
  {
    "text": "form field so in this case we have an",
    "start": "277440",
    "end": "279360"
  },
  {
    "text": "email input then we set its value equal",
    "start": "279360",
    "end": "281940"
  },
  {
    "text": "to an array where the first value in",
    "start": "281940",
    "end": "283919"
  },
  {
    "text": "that array is an empty string and then",
    "start": "283919",
    "end": "286260"
  },
  {
    "text": "the second value is another array of",
    "start": "286260",
    "end": "288449"
  },
  {
    "text": "validators these validators are based on",
    "start": "288449",
    "end": "291000"
  },
  {
    "text": "their HTML counterparts in this case we",
    "start": "291000",
    "end": "293550"
  },
  {
    "text": "are going to validate the email is",
    "start": "293550",
    "end": "295080"
  },
  {
    "text": "required and that it has an email format",
    "start": "295080",
    "end": "297419"
  },
  {
    "text": "for the password we're going to use a",
    "start": "297419",
    "end": "299610"
  },
  {
    "text": "regular expression which just validates",
    "start": "299610",
    "end": "301979"
  },
  {
    "text": "that there's at least one number present",
    "start": "301979",
    "end": "303900"
  },
  {
    "text": "in that password string and then we're",
    "start": "303900",
    "end": "306690"
  },
  {
    "text": "also going to validate that it has a",
    "start": "306690",
    "end": "307770"
  },
  {
    "text": "minimum length of 6 and a max length of",
    "start": "307770",
    "end": "310410"
  },
  {
    "text": "25 then we'll set up the second form in",
    "start": "310410",
    "end": "313800"
  },
  {
    "text": "exactly the same way but it's actually",
    "start": "313800",
    "end": "315630"
  },
  {
    "text": "much simpler we'll just say detail form",
    "start": "315630",
    "end": "317910"
  },
  {
    "text": "is the form builder group and its only",
    "start": "317910",
    "end": "320250"
  },
  {
    "text": "field is going to be the catch phrase",
    "start": "320250",
    "end": "321840"
  },
  {
    "text": "which is required and that's all it",
    "start": "321840",
    "end": "324150"
  },
  {
    "text": "takes to set up a reactive form it's",
    "start": "324150",
    "end": "325800"
  },
  {
    "text": "just a series of form fields that are",
    "start": "325800",
    "end": "327960"
  },
  {
    "text": "defined directly in your type script the",
    "start": "327960",
    "end": "330150"
  },
  {
    "text": "main problem is that they generally",
    "start": "330150",
    "end": "331680"
  },
  {
    "text": "create a lot of typescript code so we",
    "start": "331680",
    "end": "333990"
  },
  {
    "text": "can cut down on this code at least a",
    "start": "333990",
    "end": "335310"
  },
  {
    "text": "little bit by using getters so we'll",
    "start": "335310",
    "end": "337620"
  },
  {
    "text": "call signup form get email and we'll",
    "start": "337620",
    "end": "340680"
  },
  {
    "text": "repeat this pattern for each individual",
    "start": "340680",
    "end": "342570"
  },
  {
    "text": "form field when we get to the actual",
    "start": "342570",
    "end": "345270"
  },
  {
    "text": "form HTML you'll see that this",
    "start": "345270",
    "end": "346950"
  },
  {
    "text": "drastically cuts down on the amount of",
    "start": "346950",
    "end": "348570"
  },
  {
    "text": "code that we need to use in the template",
    "start": "348570",
    "end": "350340"
  },
  {
    "text": "the last thing we need is an event",
    "start": "350340",
    "end": "352349"
  },
  {
    "text": "handler for when these forms are",
    "start": "352349",
    "end": "353880"
  },
  {
    "text": "submitted so when they submit the signup",
    "start": "353880",
    "end": "355830"
  },
  {
    "text": "form we'll call our email signup method",
    "start": "355830",
    "end": "357960"
  },
  {
    "text": "from the service with their email value",
    "start": "357960",
    "end": "360210"
  },
  {
    "text": "and password value and for the",
    "start": "360210",
    "end": "362910"
  },
  {
    "text": "catchphrase we simply call the off",
    "start": "362910",
    "end": "364800"
  },
  {
    "text": "service update user method with the",
    "start": "364800",
    "end": "367169"
  },
  {
    "text": "catch phrase that they enter into that",
    "start": "367169",
    "end": "368580"
  },
  {
    "text": "form now we're going to switch over to",
    "start": "368580",
    "end": "370800"
  },
  {
    "text": "the HTML and I'll show you how to use",
    "start": "370800",
    "end": "372450"
  },
  {
    "text": "this reactive form in the template I'm",
    "start": "372450",
    "end": "374460"
  },
  {
    "text": "going to set up an NG container that's",
    "start": "374460",
    "end": "376169"
  },
  {
    "text": "going to wrap both of the forms the",
    "start": "376169",
    "end": "378270"
  },
  {
    "text": "reason for this is that we can unwrap",
    "start": "378270",
    "end": "379950"
  },
  {
    "text": "the user observable to apply some",
    "start": "379950",
    "end": "381900"
  },
  {
    "text": "conditional logic to determine which",
    "start": "381900",
    "end": "383639"
  },
  {
    "text": "form to show so we'll do that by calling",
    "start": "383639",
    "end": "386010"
  },
  {
    "text": "auth user async or we're going to show",
    "start": "386010",
    "end": "388710"
  },
  {
    "text": "an empty object if the user is null and",
    "start": "388710",
    "end": "390930"
  },
  {
    "text": "then we're going to set that to the user",
    "start": "390930",
    "end": "392789"
  },
  {
    "text": "template variable",
    "start": "392789",
    "end": "394080"
  },
  {
    "text": "I realize that looks kind of weird but",
    "start": "394080",
    "end": "396180"
  },
  {
    "text": "it is a very useful technique in angular",
    "start": "396180",
    "end": "399180"
  },
  {
    "text": "the next thing we'll do is set up our",
    "start": "399180",
    "end": "400470"
  },
  {
    "text": "forum group so we do that by calling",
    "start": "400470",
    "end": "402120"
  },
  {
    "text": "forum group with our signup form this",
    "start": "402120",
    "end": "404460"
  },
  {
    "text": "forum should only be shown if we don't",
    "start": "404460",
    "end": "406259"
  },
  {
    "text": "have a user ID meaning the user has no",
    "start": "406259",
    "end": "408180"
  },
  {
    "text": "firebase account at all then I'm going",
    "start": "408180",
    "end": "410520"
  },
  {
    "text": "to add the detail forum right below it",
    "start": "410520",
    "end": "412139"
  },
  {
    "text": "and we're only going to show this forum",
    "start": "412139",
    "end": "413820"
  },
  {
    "text": "if the user is authenticated but they",
    "start": "413820",
    "end": "416070"
  },
  {
    "text": "still don't have that catchphrase on",
    "start": "416070",
    "end": "417449"
  },
  {
    "text": "their user document then I'll set up one",
    "start": "417449",
    "end": "420780"
  },
  {
    "text": "more block here and this one will show",
    "start": "420780",
    "end": "422580"
  },
  {
    "text": "if the user is logged in and they have a",
    "start": "422580",
    "end": "424830"
  },
  {
    "text": "catch phrase meaning that forum is 100%",
    "start": "424830",
    "end": "427020"
  },
  {
    "text": "complete you could extract this into",
    "start": "427020",
    "end": "429840"
  },
  {
    "text": "separate components but I'm just showing",
    "start": "429840",
    "end": "431400"
  },
  {
    "text": "it all in one go here just to keep this",
    "start": "431400",
    "end": "433169"
  },
  {
    "text": "as simple as possible going back to the",
    "start": "433169",
    "end": "435840"
  },
  {
    "text": "signup form will first find our signup",
    "start": "435840",
    "end": "437789"
  },
  {
    "text": "method to the ng submit event then we'll",
    "start": "437789",
    "end": "441180"
  },
  {
    "text": "set a label and a form input for the",
    "start": "441180",
    "end": "443520"
  },
  {
    "text": "email address we connect this input to",
    "start": "443520",
    "end": "446310"
  },
  {
    "text": "our reactive form in the type script by",
    "start": "446310",
    "end": "447840"
  },
  {
    "text": "calling form control name followed by",
    "start": "447840",
    "end": "449639"
  },
  {
    "text": "email because we set validators on this",
    "start": "449639",
    "end": "452070"
  },
  {
    "text": "form we can determine whether or not it",
    "start": "452070",
    "end": "454110"
  },
  {
    "text": "is in a valid state based on the user's",
    "start": "454110",
    "end": "455910"
  },
  {
    "text": "input when the form is not valid we want",
    "start": "455910",
    "end": "458490"
  },
  {
    "text": "to show an error message and we only",
    "start": "458490",
    "end": "460380"
  },
  {
    "text": "want to show it if the form is dirty",
    "start": "460380",
    "end": "461820"
  },
  {
    "text": "which means that the user has started",
    "start": "461820",
    "end": "463680"
  },
  {
    "text": "typing into that form input then we'll",
    "start": "463680",
    "end": "466409"
  },
  {
    "text": "go and do the same exact thing for the",
    "start": "466409",
    "end": "467789"
  },
  {
    "text": "password but the only difference instead",
    "start": "467789",
    "end": "469830"
  },
  {
    "text": "of dirty here I'm going to use touched",
    "start": "469830",
    "end": "471960"
  },
  {
    "text": "the form input is considered touched",
    "start": "471960",
    "end": "474000"
  },
  {
    "text": "when the user has entered their mouse",
    "start": "474000",
    "end": "475889"
  },
  {
    "text": "inside of that form input so that just",
    "start": "475889",
    "end": "478229"
  },
  {
    "text": "gives you another option for determining",
    "start": "478229",
    "end": "479699"
  },
  {
    "text": "when you want to actually display the",
    "start": "479699",
    "end": "481289"
  },
  {
    "text": "error message we can also tell when a",
    "start": "481289",
    "end": "483780"
  },
  {
    "text": "form is valid by calling signup form",
    "start": "483780",
    "end": "486389"
  },
  {
    "text": "valid we can determine if the entire",
    "start": "486389",
    "end": "487860"
  },
  {
    "text": "form is valid as well as all the inputs",
    "start": "487860",
    "end": "489960"
  },
  {
    "text": "contained inside of it as a final touch",
    "start": "489960",
    "end": "492479"
  },
  {
    "text": "we'll disable the submit button so the",
    "start": "492479",
    "end": "494039"
  },
  {
    "text": "user can't accidentally submit an",
    "start": "494039",
    "end": "495690"
  },
  {
    "text": "invalid form when the user submits their",
    "start": "495690",
    "end": "498150"
  },
  {
    "text": "form and they're successfully",
    "start": "498150",
    "end": "499440"
  },
  {
    "text": "authenticated it's going to hide this",
    "start": "499440",
    "end": "501300"
  },
  {
    "text": "initial form and then bring up our",
    "start": "501300",
    "end": "502710"
  },
  {
    "text": "secondary form here so for this one",
    "start": "502710",
    "end": "505409"
  },
  {
    "text": "we'll bind it to the set catchphrase",
    "start": "505409",
    "end": "507060"
  },
  {
    "text": "method and then we'll go ahead and add",
    "start": "507060",
    "end": "509849"
  },
  {
    "text": "the form control name and then another",
    "start": "509849",
    "end": "512039"
  },
  {
    "text": "submit button for that as well the end",
    "start": "512039",
    "end": "515070"
  },
  {
    "text": "result looks something like this we",
    "start": "515070",
    "end": "516570"
  },
  {
    "text": "start typing in the form and then we get",
    "start": "516570",
    "end": "518339"
  },
  {
    "text": "this validation error until we actually",
    "start": "518339",
    "end": "520349"
  },
  {
    "text": "enter a valid email then it has the",
    "start": "520349",
    "end": "522450"
  },
  {
    "text": "green border then we go ahead and enter",
    "start": "522450",
    "end": "524850"
  },
  {
    "text": "our password and we get the green",
    "start": "524850",
    "end": "526529"
  },
  {
    "text": "message that the form looks good so now",
    "start": "526529",
    "end": "529079"
  },
  {
    "text": "we ought then takeda in firebase and",
    "start": "529079",
    "end": "530400"
  },
  {
    "text": "then it brings up the secondary form the",
    "start": "530400",
    "end": "532980"
  },
  {
    "text": "process works as expected at this point",
    "start": "532980",
    "end": "534899"
  },
  {
    "text": "but we still want to set up a router",
    "start": "534899",
    "end": "536790"
  },
  {
    "text": "guard to prevent our users from",
    "start": "536790",
    "end": "538440"
  },
  {
    "text": "navigating away from the forum if they",
    "start": "538440",
    "end": "540240"
  },
  {
    "text": "haven't fully completed it we can do",
    "start": "540240",
    "end": "542519"
  },
  {
    "text": "that by setting up an auth guard that",
    "start": "542519",
    "end": "544019"
  },
  {
    "text": "we'll use in our app routing module",
    "start": "544019",
    "end": "545870"
  },
  {
    "text": "guards use the injectable decorator so",
    "start": "545870",
    "end": "548459"
  },
  {
    "text": "they behave just like services do an",
    "start": "548459",
    "end": "550139"
  },
  {
    "text": "angular first I'm going to import it",
    "start": "550139",
    "end": "552269"
  },
  {
    "text": "into the module and then add it to the",
    "start": "552269",
    "end": "554250"
  },
  {
    "text": "providers array then you can use the",
    "start": "554250",
    "end": "556949"
  },
  {
    "text": "guard on individual routes by setting",
    "start": "556949",
    "end": "558810"
  },
  {
    "text": "the can activate property and you just",
    "start": "558810",
    "end": "560579"
  },
  {
    "text": "pass it to its array of guards now we",
    "start": "560579",
    "end": "564149"
  },
  {
    "text": "can go into the actual auth card file",
    "start": "564149",
    "end": "566100"
  },
  {
    "text": "and we're going to import our auth",
    "start": "566100",
    "end": "568290"
  },
  {
    "text": "service and if you remember from earlier",
    "start": "568290",
    "end": "570360"
  },
  {
    "text": "our off service provides a user",
    "start": "570360",
    "end": "572399"
  },
  {
    "text": "observable so what we're going to do is",
    "start": "572399",
    "end": "574440"
  },
  {
    "text": "convert that user observable into a",
    "start": "574440",
    "end": "576180"
  },
  {
    "text": "boolean that's going to determine",
    "start": "576180",
    "end": "577709"
  },
  {
    "text": "whether or not a user is authorized to",
    "start": "577709",
    "end": "580079"
  },
  {
    "text": "visit a certain route so we're going to",
    "start": "580079",
    "end": "583139"
  },
  {
    "text": "inject the off service in the",
    "start": "583139",
    "end": "584490"
  },
  {
    "text": "constructor and then we're going to use",
    "start": "584490",
    "end": "586139"
  },
  {
    "text": "the angular router as well as the",
    "start": "586139",
    "end": "588000"
  },
  {
    "text": "notification service that I was talking",
    "start": "588000",
    "end": "589860"
  },
  {
    "text": "about earlier the can activate method",
    "start": "589860",
    "end": "592949"
  },
  {
    "text": "inside the guard needs to return a",
    "start": "592949",
    "end": "595050"
  },
  {
    "text": "boolean observable so we first take our",
    "start": "595050",
    "end": "597779"
  },
  {
    "text": "user observable and then we map it down",
    "start": "597779",
    "end": "600000"
  },
  {
    "text": "to a boolean and we determine this",
    "start": "600000",
    "end": "602279"
  },
  {
    "text": "boolean by whether or not the user has",
    "start": "602279",
    "end": "604110"
  },
  {
    "text": "that catch phrase property on their user",
    "start": "604110",
    "end": "606180"
  },
  {
    "text": "document we convert the property to a",
    "start": "606180",
    "end": "608670"
  },
  {
    "text": "boolean by adding a double bang in front",
    "start": "608670",
    "end": "610800"
  },
  {
    "text": "of it if this evaluates to false we're",
    "start": "610800",
    "end": "613860"
  },
  {
    "text": "going to use the router as well as the",
    "start": "613860",
    "end": "615569"
  },
  {
    "text": "notification service to redirect the",
    "start": "615569",
    "end": "617490"
  },
  {
    "text": "user back to the form and then show them",
    "start": "617490",
    "end": "619410"
  },
  {
    "text": "an error message the end result is that",
    "start": "619410",
    "end": "622500"
  },
  {
    "text": "any routes that have this guard applied",
    "start": "622500",
    "end": "624510"
  },
  {
    "text": "to it will not be activated unless the",
    "start": "624510",
    "end": "626910"
  },
  {
    "text": "user has that catch phrase property on",
    "start": "626910",
    "end": "628949"
  },
  {
    "text": "their document in fire store that's only",
    "start": "628949",
    "end": "631980"
  },
  {
    "text": "going to secure routes on the front end",
    "start": "631980",
    "end": "633569"
  },
  {
    "text": "if you have truly sensitive information",
    "start": "633569",
    "end": "635160"
  },
  {
    "text": "there you'll want to also send a back",
    "start": "635160",
    "end": "637110"
  },
  {
    "text": "end database rule in this case you can",
    "start": "637110",
    "end": "640410"
  },
  {
    "text": "check if the catch phrase exists on the",
    "start": "640410",
    "end": "642480"
  },
  {
    "text": "current users document by pointing to",
    "start": "642480",
    "end": "644550"
  },
  {
    "text": "the user document with the request auth",
    "start": "644550",
    "end": "646709"
  },
  {
    "text": "UID",
    "start": "646709",
    "end": "647490"
  },
  {
    "text": "if it's not there the user won't be able",
    "start": "647490",
    "end": "649350"
  },
  {
    "text": "to read or write any documents",
    "start": "649350",
    "end": "650940"
  },
  {
    "text": "associated with this rule",
    "start": "650940",
    "end": "653100"
  },
  {
    "text": "that's it for a multi-step",
    "start": "653100",
    "end": "655200"
  },
  {
    "text": "authentication with firebase if this",
    "start": "655200",
    "end": "657180"
  },
  {
    "text": "video helped you please like and",
    "start": "657180",
    "end": "658410"
  },
  {
    "text": "subscribe and if you want to learn more",
    "start": "658410",
    "end": "660090"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "660090",
    "end": "661950"
  },
  {
    "text": "angular firebase comm you'll get a free",
    "start": "661950",
    "end": "664230"
  },
  {
    "text": "copy of my book as well as one on one",
    "start": "664230",
    "end": "666240"
  },
  {
    "text": "project support thanks for watching and",
    "start": "666240",
    "end": "668730"
  },
  {
    "text": "I'll see you soon",
    "start": "668730",
    "end": "671540"
  },
  {
    "text": "[Music]",
    "start": "673070",
    "end": "677790"
  },
  {
    "text": "[Applause]",
    "start": "677790",
    "end": "678710"
  },
  {
    "text": "[Music]",
    "start": "678710",
    "end": "683200"
  }
]