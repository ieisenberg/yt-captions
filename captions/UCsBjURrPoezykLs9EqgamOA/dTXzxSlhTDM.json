[
  {
    "text": "today we'll turn you our firestore",
    "start": "30",
    "end": "1439"
  },
  {
    "text": "database into a full-text search engine",
    "start": "1439",
    "end": "3330"
  },
  {
    "text": "using algo leo",
    "start": "3330",
    "end": "4560"
  },
  {
    "text": "it's pointing something it's one of my",
    "start": "4560",
    "end": "11610"
  },
  {
    "text": "all-time favorite API s and I use it on",
    "start": "11610",
    "end": "13590"
  },
  {
    "text": "fire ship IO to power content discovery",
    "start": "13590",
    "end": "15690"
  },
  {
    "text": "features like Instant Search what you'll",
    "start": "15690",
    "end": "17910"
  },
  {
    "text": "build today is a pipeline with firebase",
    "start": "17910",
    "end": "19740"
  },
  {
    "text": "cloud functions that automatically",
    "start": "19740",
    "end": "21390"
  },
  {
    "text": "indexes your fire store data in algo Lea",
    "start": "21390",
    "end": "23699"
  },
  {
    "text": "and then we'll look at multiple",
    "start": "23699",
    "end": "25170"
  },
  {
    "text": "implementations to consume that data",
    "start": "25170",
    "end": "26609"
  },
  {
    "text": "from a customer facing app if you're new",
    "start": "26609",
    "end": "28859"
  },
  {
    "text": "here like and subscribe and check out",
    "start": "28859",
    "end": "30359"
  },
  {
    "text": "the full source code at fire ship IO so",
    "start": "30359",
    "end": "33120"
  },
  {
    "text": "let's start by answering the question of",
    "start": "33120",
    "end": "34559"
  },
  {
    "text": "when would you want to use a service",
    "start": "34559",
    "end": "36149"
  },
  {
    "text": "like algo Lea and keep in mind this",
    "start": "36149",
    "end": "38070"
  },
  {
    "text": "video is not sponsored so these are my",
    "start": "38070",
    "end": "39989"
  },
  {
    "text": "own personal opinions no SQL databases",
    "start": "39989",
    "end": "48600"
  },
  {
    "text": "like fire store are designed primarily",
    "start": "48600",
    "end": "50219"
  },
  {
    "text": "for fast reads and to scale seamlessly",
    "start": "50219",
    "end": "53190"
  },
  {
    "text": "but they can be relatively limited on",
    "start": "53190",
    "end": "55110"
  },
  {
    "text": "the types of queries you can make",
    "start": "55110",
    "end": "56340"
  },
  {
    "text": "especially if you need to search across",
    "start": "56340",
    "end": "58050"
  },
  {
    "text": "the entire text of a document or if you",
    "start": "58050",
    "end": "60030"
  },
  {
    "text": "need to filter by multiple properties",
    "start": "60030",
    "end": "61680"
  },
  {
    "text": "simultaneously and keep track of counts",
    "start": "61680",
    "end": "63870"
  },
  {
    "text": "of different properties algo Lea solves",
    "start": "63870",
    "end": "65880"
  },
  {
    "text": "all of these problems for you and more",
    "start": "65880",
    "end": "67500"
  },
  {
    "text": "it's really an ideal solution if you",
    "start": "67500",
    "end": "69510"
  },
  {
    "text": "have something like Amazon where you",
    "start": "69510",
    "end": "71159"
  },
  {
    "text": "have millions of products and you need",
    "start": "71159",
    "end": "72810"
  },
  {
    "text": "to sort these products and filter and",
    "start": "72810",
    "end": "74790"
  },
  {
    "text": "search them in many complex ways now",
    "start": "74790",
    "end": "77640"
  },
  {
    "text": "algo Lea starts off with a free tier but",
    "start": "77640",
    "end": "79680"
  },
  {
    "text": "one of the biggest complaints you might",
    "start": "79680",
    "end": "81000"
  },
  {
    "text": "hear is that it's expensive and I do",
    "start": "81000",
    "end": "82920"
  },
  {
    "text": "think that's a very valid complaint",
    "start": "82920",
    "end": "84270"
  },
  {
    "text": "especially if you have millions of",
    "start": "84270",
    "end": "85650"
  },
  {
    "text": "Records it jumps from free to $29 per",
    "start": "85650",
    "end": "88200"
  },
  {
    "text": "month up to $500 per month but as you'll",
    "start": "88200",
    "end": "90990"
  },
  {
    "text": "see in this video this is kind of a",
    "start": "90990",
    "end": "92340"
  },
  {
    "text": "situation where you get what you pay for",
    "start": "92340",
    "end": "94229"
  },
  {
    "text": "the first thing you want to do is sign",
    "start": "94229",
    "end": "96270"
  },
  {
    "text": "up for an algo Lea account and then it",
    "start": "96270",
    "end": "98009"
  },
  {
    "text": "will walk you through the process of",
    "start": "98009",
    "end": "99240"
  },
  {
    "text": "creating an index I'll go ahead and",
    "start": "99240",
    "end": "101070"
  },
  {
    "text": "create a new index called customers and",
    "start": "101070",
    "end": "102750"
  },
  {
    "text": "this will basically be a mirror of our",
    "start": "102750",
    "end": "104460"
  },
  {
    "text": "fire store data - any personally",
    "start": "104460",
    "end": "106890"
  },
  {
    "text": "identifiable information things like",
    "start": "106890",
    "end": "108780"
  },
  {
    "text": "email addresses and phone numbers are",
    "start": "108780",
    "end": "110579"
  },
  {
    "text": "not something that you want to keep in",
    "start": "110579",
    "end": "111990"
  },
  {
    "text": "the index you should keep in mind that",
    "start": "111990",
    "end": "113759"
  },
  {
    "text": "all this data will be exposed",
    "start": "113759",
    "end": "114869"
  },
  {
    "text": "client-side so you want to leave out any",
    "start": "114869",
    "end": "116939"
  },
  {
    "text": "information that would be considered",
    "start": "116939",
    "end": "118259"
  },
  {
    "text": "sensitive so now that we have this index",
    "start": "118259",
    "end": "120479"
  },
  {
    "text": "setup we have a whole bunch of different",
    "start": "120479",
    "end": "121890"
  },
  {
    "text": "ways to customize it I'll leave the",
    "start": "121890",
    "end": "123990"
  },
  {
    "text": "customization part up to you",
    "start": "123990",
    "end": "125460"
  },
  {
    "text": "but just know that there's a whole bunch",
    "start": "125460",
    "end": "126659"
  },
  {
    "text": "of cool things you can do like set these",
    "start": "126659",
    "end": "128489"
  },
  {
    "text": "searchable attributes tweak the ranking",
    "start": "128489",
    "end": "130739"
  },
  {
    "text": "and sorting algorithms setup typo",
    "start": "130739",
    "end": "132660"
  },
  {
    "text": "tolerance stop",
    "start": "132660",
    "end": "133770"
  },
  {
    "text": "and word proximity and a whole bunch of",
    "start": "133770",
    "end": "136020"
  },
  {
    "text": "other stuff and you could even generate",
    "start": "136020",
    "end": "137850"
  },
  {
    "text": "your own UI demo based on your own",
    "start": "137850",
    "end": "139650"
  },
  {
    "text": "underlying data and that means you can",
    "start": "139650",
    "end": "141570"
  },
  {
    "text": "get a solid mock-up of your search UI",
    "start": "141570",
    "end": "143400"
  },
  {
    "text": "before you write any front-end code so",
    "start": "143400",
    "end": "145560"
  },
  {
    "text": "now that we have this index created we",
    "start": "145560",
    "end": "147150"
  },
  {
    "text": "need a way to dynamically add data to it",
    "start": "147150",
    "end": "149160"
  },
  {
    "text": "and we want to add data to the index",
    "start": "149160",
    "end": "151170"
  },
  {
    "text": "every time a new firestore document is",
    "start": "151170",
    "end": "153300"
  },
  {
    "text": "created as you can see here I have algo",
    "start": "153300",
    "end": "155880"
  },
  {
    "text": "Lea on the left and firestore on the",
    "start": "155880",
    "end": "157650"
  },
  {
    "text": "right when new documents are added to",
    "start": "157650",
    "end": "159510"
  },
  {
    "text": "the database they will automatically be",
    "start": "159510",
    "end": "161220"
  },
  {
    "text": "updated in the index indexing operations",
    "start": "161220",
    "end": "164400"
  },
  {
    "text": "will always happen on the backend which",
    "start": "164400",
    "end": "165990"
  },
  {
    "text": "will do with nodejs and firebase cloud",
    "start": "165990",
    "end": "168000"
  },
  {
    "text": "functions will start from an empty",
    "start": "168000",
    "end": "170250"
  },
  {
    "text": "working directory and then run firebase",
    "start": "170250",
    "end": "172050"
  },
  {
    "text": "to net functions",
    "start": "172050",
    "end": "172980"
  },
  {
    "text": "I'll be using javascript for this demo",
    "start": "172980",
    "end": "174810"
  },
  {
    "text": "but feel free to use typescript if you",
    "start": "174810",
    "end": "176460"
  },
  {
    "text": "prefer that command will give us a",
    "start": "176460",
    "end": "177990"
  },
  {
    "text": "functions directory and you can ignore",
    "start": "177990",
    "end": "179730"
  },
  {
    "text": "all of the other directories that you",
    "start": "179730",
    "end": "180930"
  },
  {
    "text": "see on my screen for now but you can see",
    "start": "180930",
    "end": "182910"
  },
  {
    "text": "all of these frameworks specific",
    "start": "182910",
    "end": "184140"
  },
  {
    "text": "front-end integrations in the full",
    "start": "184140",
    "end": "185550"
  },
  {
    "text": "source code from there will CD into the",
    "start": "185550",
    "end": "187590"
  },
  {
    "text": "functions directory and install algo",
    "start": "187590",
    "end": "189450"
  },
  {
    "text": "leus search this is an API client for",
    "start": "189450",
    "end": "191550"
  },
  {
    "text": "node and it's going to require our API",
    "start": "191550",
    "end": "193590"
  },
  {
    "text": "keys which we can retrieve from the algo",
    "start": "193590",
    "end": "195810"
  },
  {
    "text": "Lea dashboard you'll need your",
    "start": "195810",
    "end": "197430"
  },
  {
    "text": "application ID as well as your admin API",
    "start": "197430",
    "end": "199650"
  },
  {
    "text": "key and then we have this big long",
    "start": "199650",
    "end": "201360"
  },
  {
    "text": "command to save the API keys in the",
    "start": "201360",
    "end": "203700"
  },
  {
    "text": "functions environment and the reason you",
    "start": "203700",
    "end": "205410"
  },
  {
    "text": "want to have these as environment",
    "start": "205410",
    "end": "206700"
  },
  {
    "text": "variables is if you ever have to change",
    "start": "206700",
    "end": "208200"
  },
  {
    "text": "the API key then you can simply reset it",
    "start": "208200",
    "end": "210750"
  },
  {
    "text": "in the environment without having to",
    "start": "210750",
    "end": "212220"
  },
  {
    "text": "redeploy your cloud functions at this",
    "start": "212220",
    "end": "214860"
  },
  {
    "text": "point we can open up the index.js file",
    "start": "214860",
    "end": "216690"
  },
  {
    "text": "and we'll start writing some code we'll",
    "start": "216690",
    "end": "218640"
  },
  {
    "text": "go ahead and import the algo Lea search",
    "start": "218640",
    "end": "220110"
  },
  {
    "text": "client and then we'll make it reference",
    "start": "220110",
    "end": "221820"
  },
  {
    "text": "to the app ID and the admin key that we",
    "start": "221820",
    "end": "224010"
  },
  {
    "text": "have in the functions environment we'll",
    "start": "224010",
    "end": "226290"
  },
  {
    "text": "pass those values to algo Lea search and",
    "start": "226290",
    "end": "228210"
  },
  {
    "text": "then we'll initialize the index by",
    "start": "228210",
    "end": "229830"
  },
  {
    "text": "calling and net index with the name of",
    "start": "229830",
    "end": "231690"
  },
  {
    "text": "our index which in this case there's",
    "start": "231690",
    "end": "233010"
  },
  {
    "text": "customers and now we can reference this",
    "start": "233010",
    "end": "235380"
  },
  {
    "text": "index in any one of our cloud functions",
    "start": "235380",
    "end": "237270"
  },
  {
    "text": "so we'll go ahead and start by creating",
    "start": "237270",
    "end": "238740"
  },
  {
    "text": "a new fire store function called add to",
    "start": "238740",
    "end": "240750"
  },
  {
    "text": "index which makes a reference to a fire",
    "start": "240750",
    "end": "242880"
  },
  {
    "text": "store document whenever a new document",
    "start": "242880",
    "end": "245280"
  },
  {
    "text": "is created in the customers collection",
    "start": "245280",
    "end": "246900"
  },
  {
    "text": "it will run the code inside of this",
    "start": "246900",
    "end": "248790"
  },
  {
    "text": "callback the snapshot contains the newly",
    "start": "248790",
    "end": "251459"
  },
  {
    "text": "created data from the fire store",
    "start": "251459",
    "end": "252959"
  },
  {
    "text": "document that's the data that we want to",
    "start": "252959",
    "end": "255000"
  },
  {
    "text": "duplicate in algo Lea - any personally",
    "start": "255000",
    "end": "257430"
  },
  {
    "text": "identifiable information now we can",
    "start": "257430",
    "end": "259680"
  },
  {
    "text": "identify a record in algo Lea with its",
    "start": "259680",
    "end": "261720"
  },
  {
    "text": "object ID so the object ID will be equal",
    "start": "261720",
    "end": "264510"
  },
  {
    "text": "to the firestore document ID and that's",
    "start": "264510",
    "end": "266610"
  },
  {
    "text": "how we kind of can",
    "start": "266610",
    "end": "267419"
  },
  {
    "text": "the two objects together on both",
    "start": "267419",
    "end": "269250"
  },
  {
    "text": "platforms then the final step is to",
    "start": "269250",
    "end": "271650"
  },
  {
    "text": "return a promise from the function which",
    "start": "271650",
    "end": "273509"
  },
  {
    "text": "will do with index add object with a",
    "start": "273509",
    "end": "275729"
  },
  {
    "text": "javascript object containing the data",
    "start": "275729",
    "end": "277469"
  },
  {
    "text": "and object ID and that's all there is to",
    "start": "277469",
    "end": "280199"
  },
  {
    "text": "it now every new customer document and",
    "start": "280199",
    "end": "282240"
  },
  {
    "text": "firestore will be duplicated in the algo",
    "start": "282240",
    "end": "284400"
  },
  {
    "text": "Lea index but this function will only",
    "start": "284400",
    "end": "286439"
  },
  {
    "text": "run on create and it's possible that the",
    "start": "286439",
    "end": "288479"
  },
  {
    "text": "data might change or might be removed in",
    "start": "288479",
    "end": "290250"
  },
  {
    "text": "the future so we'll set up a couple of",
    "start": "290250",
    "end": "291930"
  },
  {
    "text": "additional cloud functions here to",
    "start": "291930",
    "end": "293340"
  },
  {
    "text": "handle those requirements we'll create a",
    "start": "293340",
    "end": "295650"
  },
  {
    "text": "second cloud function called update",
    "start": "295650",
    "end": "297000"
  },
  {
    "text": "index that runs whenever the firestore",
    "start": "297000",
    "end": "299189"
  },
  {
    "text": "document is updated this function is",
    "start": "299189",
    "end": "301379"
  },
  {
    "text": "almost identical to the last one with",
    "start": "301379",
    "end": "303029"
  },
  {
    "text": "just some minor differences instead of",
    "start": "303029",
    "end": "305039"
  },
  {
    "text": "having the document snapshot we have a",
    "start": "305039",
    "end": "306689"
  },
  {
    "text": "change object which has the firestore",
    "start": "306689",
    "end": "308879"
  },
  {
    "text": "document before the change and after the",
    "start": "308879",
    "end": "310770"
  },
  {
    "text": "change we're only concerned about the",
    "start": "310770",
    "end": "312360"
  },
  {
    "text": "changes afterwards because that's what",
    "start": "312360",
    "end": "313889"
  },
  {
    "text": "we want to update in algo lea and we'll",
    "start": "313889",
    "end": "316020"
  },
  {
    "text": "do that by calling index save object to",
    "start": "316020",
    "end": "318120"
  },
  {
    "text": "update a single object with this new",
    "start": "318120",
    "end": "319889"
  },
  {
    "text": "data and lastly we'll create one",
    "start": "319889",
    "end": "321750"
  },
  {
    "text": "additional function called delete from",
    "start": "321750",
    "end": "323189"
  },
  {
    "text": "index that will run when a document is",
    "start": "323189",
    "end": "325169"
  },
  {
    "text": "deleted from firestore and this one is",
    "start": "325169",
    "end": "327389"
  },
  {
    "text": "the easiest of all we simply call index",
    "start": "327389",
    "end": "329400"
  },
  {
    "text": "delete object and pass it the firestore",
    "start": "329400",
    "end": "331680"
  },
  {
    "text": "document ID and again that's why it's",
    "start": "331680",
    "end": "333569"
  },
  {
    "text": "important that your al-khalil object ID",
    "start": "333569",
    "end": "335520"
  },
  {
    "text": "matches the firestore document ID now we",
    "start": "335520",
    "end": "338639"
  },
  {
    "text": "can deploy our three functions by",
    "start": "338639",
    "end": "340050"
  },
  {
    "text": "running in firebase deploy only",
    "start": "340050",
    "end": "341370"
  },
  {
    "text": "functions from the command line and then",
    "start": "341370",
    "end": "343080"
  },
  {
    "text": "you should see your functions in the",
    "start": "343080",
    "end": "344490"
  },
  {
    "text": "firebase console now at this point we",
    "start": "344490",
    "end": "346830"
  },
  {
    "text": "could create some dummy data manually in",
    "start": "346830",
    "end": "348449"
  },
  {
    "text": "the firebase console but I want to show",
    "start": "348449",
    "end": "350159"
  },
  {
    "text": "you a little trick to quickly see the",
    "start": "350159",
    "end": "351900"
  },
  {
    "text": "database with some fake dummy data we",
    "start": "351900",
    "end": "354270"
  },
  {
    "text": "can install faker J s in the cloud",
    "start": "354270",
    "end": "355800"
  },
  {
    "text": "functions environment which allows us to",
    "start": "355800",
    "end": "357629"
  },
  {
    "text": "generate a massive amount at fake random",
    "start": "357629",
    "end": "359789"
  },
  {
    "text": "data from there I've created a new file",
    "start": "359789",
    "end": "361919"
  },
  {
    "text": "called CJ s in the functions directory",
    "start": "361919",
    "end": "364680"
  },
  {
    "text": "and I'm going to import firebase admin",
    "start": "364680",
    "end": "367050"
  },
  {
    "text": "and then call admin initialize app now",
    "start": "367050",
    "end": "369810"
  },
  {
    "text": "this isn't actually a cloud function",
    "start": "369810",
    "end": "371250"
  },
  {
    "text": "it's just a node script that will run",
    "start": "371250",
    "end": "372930"
  },
  {
    "text": "from the command line in just a second",
    "start": "372930",
    "end": "374550"
  },
  {
    "text": "here we'll go ahead and import faker and",
    "start": "374550",
    "end": "376500"
  },
  {
    "text": "then we'll make it reference to",
    "start": "376500",
    "end": "378150"
  },
  {
    "text": "firestorm then we'll write a function",
    "start": "378150",
    "end": "379860"
  },
  {
    "text": "called fake it and every time this",
    "start": "379860",
    "end": "381389"
  },
  {
    "text": "function is called it will add a new",
    "start": "381389",
    "end": "383189"
  },
  {
    "text": "document to the database with all of its",
    "start": "383189",
    "end": "385289"
  },
  {
    "text": "data being completely random and fake",
    "start": "385289",
    "end": "387060"
  },
  {
    "text": "and lastly we'll create an array that",
    "start": "387060",
    "end": "389099"
  },
  {
    "text": "has the length of the number of",
    "start": "389099",
    "end": "390539"
  },
  {
    "text": "documents that we want to create in this",
    "start": "390539",
    "end": "392129"
  },
  {
    "text": "case 20 and then we'll go ahead and call",
    "start": "392129",
    "end": "394169"
  },
  {
    "text": "this function for each item in the array",
    "start": "394169",
    "end": "395969"
  },
  {
    "text": "now because this script is in the",
    "start": "395969",
    "end": "397889"
  },
  {
    "text": "functions directory it will",
    "start": "397889",
    "end": "399149"
  },
  {
    "text": "automatically pick up our firebase admin",
    "start": "399149",
    "end": "401230"
  },
  {
    "text": "potentials and that means we can simply",
    "start": "401230",
    "end": "403090"
  },
  {
    "text": "go to the command line call node and",
    "start": "403090",
    "end": "405100"
  },
  {
    "text": "point it to the script and the result",
    "start": "405100",
    "end": "407200"
  },
  {
    "text": "should be 20 new documents in your",
    "start": "407200",
    "end": "408640"
  },
  {
    "text": "database now because we've already",
    "start": "408640",
    "end": "410410"
  },
  {
    "text": "deployed our functions this will also",
    "start": "410410",
    "end": "412120"
  },
  {
    "text": "result in 20 function invocations for",
    "start": "412120",
    "end": "414580"
  },
  {
    "text": "the oncreate event and that means if we",
    "start": "414580",
    "end": "416620"
  },
  {
    "text": "refresh our algo Lea index we should see",
    "start": "416620",
    "end": "418720"
  },
  {
    "text": "all of the data there as well if for",
    "start": "418720",
    "end": "420730"
  },
  {
    "text": "whatever reason you don't see your data",
    "start": "420730",
    "end": "422170"
  },
  {
    "text": "in algo Lea at this point check out the",
    "start": "422170",
    "end": "424030"
  },
  {
    "text": "cloud function logs to see if you have",
    "start": "424030",
    "end": "425650"
  },
  {
    "text": "any error messages there this would also",
    "start": "425650",
    "end": "427630"
  },
  {
    "text": "be a good time to validate your update",
    "start": "427630",
    "end": "429520"
  },
  {
    "text": "and delete cloud functions if you update",
    "start": "429520",
    "end": "431590"
  },
  {
    "text": "some data in firestore from the console",
    "start": "431590",
    "end": "433300"
  },
  {
    "text": "you should see it's reflected in algo",
    "start": "433300",
    "end": "435070"
  },
  {
    "text": "Lea after a couple of seconds in",
    "start": "435070",
    "end": "436780"
  },
  {
    "text": "addition if you delete a document from",
    "start": "436780",
    "end": "439270"
  },
  {
    "text": "firestore you should see that the",
    "start": "439270",
    "end": "440800"
  },
  {
    "text": "corresponding object in algo Lea is",
    "start": "440800",
    "end": "442750"
  },
  {
    "text": "removed as well it looks like the",
    "start": "442750",
    "end": "444940"
  },
  {
    "text": "backend implementation for full text",
    "start": "444940",
    "end": "446680"
  },
  {
    "text": "search is working perfectly so we'll go",
    "start": "446680",
    "end": "448480"
  },
  {
    "text": "ahead and move on to the front-end",
    "start": "448480",
    "end": "450160"
  },
  {
    "text": "integration when it comes to the",
    "start": "450160",
    "end": "452350"
  },
  {
    "text": "front-end algo Lea provides a lot of",
    "start": "452350",
    "end": "454000"
  },
  {
    "text": "support for different frameworks",
    "start": "454000",
    "end": "455530"
  },
  {
    "text": "including angular react view iOS and",
    "start": "455530",
    "end": "458440"
  },
  {
    "text": "Android I'll show you the angular",
    "start": "458440",
    "end": "460030"
  },
  {
    "text": "implementation details in this video but",
    "start": "460030",
    "end": "462250"
  },
  {
    "text": "what if you're working with a framework",
    "start": "462250",
    "end": "463570"
  },
  {
    "text": "that's not supported likes felt in that",
    "start": "463570",
    "end": "465910"
  },
  {
    "text": "case you can use the API client directly",
    "start": "465910",
    "end": "467650"
  },
  {
    "text": "or you can use the instant search jst",
    "start": "467650",
    "end": "470020"
  },
  {
    "text": "let's go ahead and start by looking at",
    "start": "470020",
    "end": "472030"
  },
  {
    "text": "these spelt implementation details",
    "start": "472030",
    "end": "473500"
  },
  {
    "text": "because it's not framework specific and",
    "start": "473500",
    "end": "475390"
  },
  {
    "text": "could work with any framework if you",
    "start": "475390",
    "end": "476890"
  },
  {
    "text": "wanted to go this route first we'll go",
    "start": "476890",
    "end": "479080"
  },
  {
    "text": "ahead and install algo Lea search into",
    "start": "479080",
    "end": "480700"
  },
  {
    "text": "the app and you can also install instant",
    "start": "480700",
    "end": "482980"
  },
  {
    "text": "search at this point as well instant",
    "start": "482980",
    "end": "484540"
  },
  {
    "text": "search will give you a bunch of",
    "start": "484540",
    "end": "485680"
  },
  {
    "text": "pre-built widgets but in this case I'm",
    "start": "485680",
    "end": "487540"
  },
  {
    "text": "going to build a completely new UI from",
    "start": "487540",
    "end": "489790"
  },
  {
    "text": "scratch we'll go into our spelt",
    "start": "489790",
    "end": "491470"
  },
  {
    "text": "component and then we'll import on Mount",
    "start": "491470",
    "end": "493630"
  },
  {
    "text": "as well as algo Lea search and we really",
    "start": "493630",
    "end": "496000"
  },
  {
    "text": "only need algo Lea search light in this",
    "start": "496000",
    "end": "497650"
  },
  {
    "text": "case then we'll initialize properties",
    "start": "497650",
    "end": "499750"
  },
  {
    "text": "for the search client as well as the",
    "start": "499750",
    "end": "501370"
  },
  {
    "text": "index that were referencing then we'll",
    "start": "501370",
    "end": "503200"
  },
  {
    "text": "have the query that the user types into",
    "start": "503200",
    "end": "504700"
  },
  {
    "text": "the forum and then the hits that get",
    "start": "504700",
    "end": "506290"
  },
  {
    "text": "returned back from algo Lea with these",
    "start": "506290",
    "end": "508030"
  },
  {
    "text": "search results from there we initialize",
    "start": "508030",
    "end": "510040"
  },
  {
    "text": "the search client which is almost",
    "start": "510040",
    "end": "511510"
  },
  {
    "text": "identical to how we did it in the cloud",
    "start": "511510",
    "end": "513370"
  },
  {
    "text": "function except that we use the search",
    "start": "513370",
    "end": "515260"
  },
  {
    "text": "API key instead of the admin API key",
    "start": "515260",
    "end": "517599"
  },
  {
    "text": "it's extremely important to keep your",
    "start": "517599",
    "end": "519520"
  },
  {
    "text": "admin API key out of your front-end code",
    "start": "519520",
    "end": "521380"
  },
  {
    "text": "because it would allow anybody to modify",
    "start": "521380",
    "end": "523479"
  },
  {
    "text": "or completely destroy your index from",
    "start": "523479",
    "end": "525910"
  },
  {
    "text": "there we'll go ahead and make a",
    "start": "525910",
    "end": "526900"
  },
  {
    "text": "reference to the customers index and",
    "start": "526900",
    "end": "529000"
  },
  {
    "text": "then we can make a search by simply",
    "start": "529000",
    "end": "530620"
  },
  {
    "text": "calling search on that object with the",
    "start": "530620",
    "end": "532600"
  },
  {
    "text": "query parameters that we want to pass",
    "start": "532600",
    "end": "534730"
  },
  {
    "text": "in this case we'll simply be passing the",
    "start": "534730",
    "end": "536710"
  },
  {
    "text": "text that the user types into the form",
    "start": "536710",
    "end": "538420"
  },
  {
    "text": "but you could also pass additional",
    "start": "538420",
    "end": "539680"
  },
  {
    "text": "options here to customize the behavior",
    "start": "539680",
    "end": "541680"
  },
  {
    "text": "now we want to run a query every time",
    "start": "541680",
    "end": "544330"
  },
  {
    "text": "that user types into a form so we'll go",
    "start": "544330",
    "end": "546040"
  },
  {
    "text": "ahead and handle that with a function",
    "start": "546040",
    "end": "547450"
  },
  {
    "text": "called search it will await the results",
    "start": "547450",
    "end": "549490"
  },
  {
    "text": "of a query and then that result object",
    "start": "549490",
    "end": "552190"
  },
  {
    "text": "has a hits property which contains all",
    "start": "552190",
    "end": "554170"
  },
  {
    "text": "of the objects from the Algol iya index",
    "start": "554170",
    "end": "556180"
  },
  {
    "text": "for that search query so every time the",
    "start": "556180",
    "end": "558550"
  },
  {
    "text": "hits property is updated that will cause",
    "start": "558550",
    "end": "560290"
  },
  {
    "text": "spell to react and update the state of",
    "start": "560290",
    "end": "562510"
  },
  {
    "text": "the UI now moving down to the HTML we'll",
    "start": "562510",
    "end": "565510"
  },
  {
    "text": "go ahead and set up a text input and",
    "start": "565510",
    "end": "567160"
  },
  {
    "text": "then we'll bind the value of that text",
    "start": "567160",
    "end": "569020"
  },
  {
    "text": "input to the query property on the",
    "start": "569020",
    "end": "570880"
  },
  {
    "text": "component and we want to run the search",
    "start": "570880",
    "end": "573070"
  },
  {
    "text": "on every key up event so we'll go ahead",
    "start": "573070",
    "end": "574990"
  },
  {
    "text": "and say on key up and then have it fire",
    "start": "574990",
    "end": "577030"
  },
  {
    "text": "the search function and now it's just a",
    "start": "577030",
    "end": "579370"
  },
  {
    "text": "matter of looping over the hits to",
    "start": "579370",
    "end": "580990"
  },
  {
    "text": "display a template for each individual",
    "start": "580990",
    "end": "582970"
  },
  {
    "text": "result we'll set up an image with the",
    "start": "582970",
    "end": "585130"
  },
  {
    "text": "hit Avatar and then we'll display a",
    "start": "585130",
    "end": "586930"
  },
  {
    "text": "heading with a user name but you might",
    "start": "586930",
    "end": "588880"
  },
  {
    "text": "also want to highlight the text that the",
    "start": "588880",
    "end": "590740"
  },
  {
    "text": "user has typed with the results that are",
    "start": "590740",
    "end": "592420"
  },
  {
    "text": "returned",
    "start": "592420",
    "end": "593020"
  },
  {
    "text": "now Algol II returns a highlighted",
    "start": "593020",
    "end": "594880"
  },
  {
    "text": "result that contains the raw HTML of a",
    "start": "594880",
    "end": "597430"
  },
  {
    "text": "property with the text highlighted so",
    "start": "597430",
    "end": "599770"
  },
  {
    "text": "one way to use that data is to bind it",
    "start": "599770",
    "end": "601900"
  },
  {
    "text": "to the inner HTML of a paragraph element",
    "start": "601900",
    "end": "603940"
  },
  {
    "text": "by default it will contain the text of",
    "start": "603940",
    "end": "606310"
  },
  {
    "text": "that property but with the highlighted",
    "start": "606310",
    "end": "608020"
  },
  {
    "text": "part wrapped in an e/m element and you",
    "start": "608020",
    "end": "610390"
  },
  {
    "text": "can actually customize the element used",
    "start": "610390",
    "end": "611860"
  },
  {
    "text": "here from the Algol iya dashboard now to",
    "start": "611860",
    "end": "613990"
  },
  {
    "text": "make the highlight really standout we'll",
    "start": "613990",
    "end": "615760"
  },
  {
    "text": "go ahead and add a global style here for",
    "start": "615760",
    "end": "617560"
  },
  {
    "text": "the emphasis and you can see when we",
    "start": "617560",
    "end": "619390"
  },
  {
    "text": "type into the form in the demo that",
    "start": "619390",
    "end": "621070"
  },
  {
    "text": "these search results are updated and the",
    "start": "621070",
    "end": "623140"
  },
  {
    "text": "user's keywords are highlighted in the",
    "start": "623140",
    "end": "624940"
  },
  {
    "text": "search result",
    "start": "624940",
    "end": "625600"
  },
  {
    "text": "now this UI could obviously use a lot of",
    "start": "625600",
    "end": "627700"
  },
  {
    "text": "work but we now have a full stack full",
    "start": "627700",
    "end": "629710"
  },
  {
    "text": "text search feature in our spelt app",
    "start": "629710",
    "end": "631420"
  },
  {
    "text": "that was pretty easy but if you're using",
    "start": "631420",
    "end": "633370"
  },
  {
    "text": "angular viewer react it's even easier",
    "start": "633370",
    "end": "635320"
  },
  {
    "text": "algo Lia provides a bunch of pre-built",
    "start": "635320",
    "end": "637600"
  },
  {
    "text": "libraries and components for these",
    "start": "637600",
    "end": "639040"
  },
  {
    "text": "frameworks to get started with the",
    "start": "639040",
    "end": "641020"
  },
  {
    "text": "angular version you'll want to follow",
    "start": "641020",
    "end": "642550"
  },
  {
    "text": "the official setup instructions which",
    "start": "642550",
    "end": "644140"
  },
  {
    "text": "will have you install the package and",
    "start": "644140",
    "end": "645610"
  },
  {
    "text": "add it to your ng module and then I've",
    "start": "645610",
    "end": "647950"
  },
  {
    "text": "generated a search component here in my",
    "start": "647950",
    "end": "649450"
  },
  {
    "text": "angular app and you can see that it",
    "start": "649450",
    "end": "650950"
  },
  {
    "text": "relies on 0 typescript whatsoever and",
    "start": "650950",
    "end": "653200"
  },
  {
    "text": "that's because algo leah has already",
    "start": "653200",
    "end": "655060"
  },
  {
    "text": "done that stuff for you under the hood",
    "start": "655060",
    "end": "656440"
  },
  {
    "text": "so you're simply working in the template",
    "start": "656440",
    "end": "658390"
  },
  {
    "text": "to display the actual UI elements that",
    "start": "658390",
    "end": "660580"
  },
  {
    "text": "you want to show the end user the first",
    "start": "660580",
    "end": "662740"
  },
  {
    "text": "thing you'll do is wrap your elements in",
    "start": "662740",
    "end": "664420"
  },
  {
    "text": "the AIS instance search component and",
    "start": "664420",
    "end": "666430"
  },
  {
    "text": "that will give you the context to search",
    "start": "666430",
    "end": "668080"
  },
  {
    "text": "ace",
    "start": "668080",
    "end": "668470"
  },
  {
    "text": "civic index from there you'll want to",
    "start": "668470",
    "end": "670150"
  },
  {
    "text": "display a form input which you can do",
    "start": "670150",
    "end": "671980"
  },
  {
    "text": "with a is search box and you can use the",
    "start": "671980",
    "end": "674410"
  },
  {
    "text": "a is hits component to give you the",
    "start": "674410",
    "end": "676240"
  },
  {
    "text": "context for the hits and the actual",
    "start": "676240",
    "end": "678130"
  },
  {
    "text": "search result object itself and you can",
    "start": "678130",
    "end": "680410"
  },
  {
    "text": "use angular directives to customize the",
    "start": "680410",
    "end": "682210"
  },
  {
    "text": "behavior of the template for example",
    "start": "682210",
    "end": "683830"
  },
  {
    "text": "will say no match is found when the hits",
    "start": "683830",
    "end": "686110"
  },
  {
    "text": "length equals zero and then we'll go",
    "start": "686110",
    "end": "687790"
  },
  {
    "text": "ahead and use ng-if to loop over the",
    "start": "687790",
    "end": "689530"
  },
  {
    "text": "array of hits and display a template for",
    "start": "689530",
    "end": "691750"
  },
  {
    "text": "each result and we can easily highlight",
    "start": "691750",
    "end": "694060"
  },
  {
    "text": "text by using the built in a is",
    "start": "694060",
    "end": "695920"
  },
  {
    "text": "highlight component just specify the",
    "start": "695920",
    "end": "697780"
  },
  {
    "text": "attribute you want to highlight and then",
    "start": "697780",
    "end": "699460"
  },
  {
    "text": "pass in the hit as an input property and",
    "start": "699460",
    "end": "701800"
  },
  {
    "text": "now we have full stack full text search",
    "start": "701800",
    "end": "704020"
  },
  {
    "text": "and angular so at this point it's just a",
    "start": "704020",
    "end": "706090"
  },
  {
    "text": "matter of making it look good with our",
    "start": "706090",
    "end": "707530"
  },
  {
    "text": "design system so I'm gonna go ahead and",
    "start": "707530",
    "end": "710170"
  },
  {
    "text": "wrap things up there but keep in mind",
    "start": "710170",
    "end": "711730"
  },
  {
    "text": "there's a lot more you can do without",
    "start": "711730",
    "end": "712930"
  },
  {
    "text": "Golia like multi property filtering geo",
    "start": "712930",
    "end": "715510"
  },
  {
    "text": "queries and things like that if this",
    "start": "715510",
    "end": "717550"
  },
  {
    "text": "video helped you please like and",
    "start": "717550",
    "end": "718750"
  },
  {
    "text": "subscribe and consider becoming a pro",
    "start": "718750",
    "end": "720610"
  },
  {
    "text": "member at fire ship IO to get access to",
    "start": "720610",
    "end": "722920"
  },
  {
    "text": "even more content",
    "start": "722920",
    "end": "723970"
  },
  {
    "text": "thanks for watching and I will talk to",
    "start": "723970",
    "end": "725710"
  },
  {
    "text": "you soon",
    "start": "725710",
    "end": "727810"
  },
  {
    "text": "[Music]",
    "start": "727810",
    "end": "734390"
  }
]