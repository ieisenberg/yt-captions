[
  {
    "text": "nest js is a node.js framework for",
    "start": "160",
    "end": "2879"
  },
  {
    "text": "building scalable server-side",
    "start": "2879",
    "end": "4560"
  },
  {
    "text": "applications with typescript it provides",
    "start": "4560",
    "end": "6560"
  },
  {
    "text": "a suite of tools that leverage either",
    "start": "6560",
    "end": "8400"
  },
  {
    "text": "fastify or express to facilitate",
    "start": "8400",
    "end": "10639"
  },
  {
    "text": "rapid development and predictable",
    "start": "10639",
    "end": "12559"
  },
  {
    "text": "readable code it supports rest and",
    "start": "12559",
    "end": "14559"
  },
  {
    "text": "graphql apis out of the box or you might",
    "start": "14559",
    "end": "16960"
  },
  {
    "text": "use it to build a full stack application",
    "start": "16960",
    "end": "19119"
  },
  {
    "text": "using the model view controller pattern",
    "start": "19119",
    "end": "21119"
  },
  {
    "text": "similar to frameworks like laravel",
    "start": "21119",
    "end": "23199"
  },
  {
    "text": "or ruby on rails and it contains a ton",
    "start": "23199",
    "end": "25279"
  },
  {
    "text": "of built-in modules to work with",
    "start": "25279",
    "end": "26880"
  },
  {
    "text": "databases",
    "start": "26880",
    "end": "27599"
  },
  {
    "text": "handle security implement streaming and",
    "start": "27599",
    "end": "29679"
  },
  {
    "text": "anything else you can imagine doing in a",
    "start": "29679",
    "end": "31439"
  },
  {
    "text": "server side application",
    "start": "31439",
    "end": "32719"
  },
  {
    "text": "nest has its own very powerful command",
    "start": "32719",
    "end": "34480"
  },
  {
    "text": "line tool and you can scaffold out a new",
    "start": "34480",
    "end": "36239"
  },
  {
    "text": "project with the nest",
    "start": "36239",
    "end": "37360"
  },
  {
    "text": "new command that provides a code base",
    "start": "37360",
    "end": "39280"
  },
  {
    "text": "pre-configured with jest for testing and",
    "start": "39280",
    "end": "41360"
  },
  {
    "text": "set up with typescript to help us write",
    "start": "41360",
    "end": "43120"
  },
  {
    "text": "more readable and reliable code in the",
    "start": "43120",
    "end": "45120"
  },
  {
    "text": "source directory you'll notice a",
    "start": "45120",
    "end": "46320"
  },
  {
    "text": "controller which is a fundamental",
    "start": "46320",
    "end": "48000"
  },
  {
    "text": "building block of the framework",
    "start": "48000",
    "end": "49440"
  },
  {
    "text": "it's responsible for handling incoming",
    "start": "49440",
    "end": "51600"
  },
  {
    "text": "http requests",
    "start": "51600",
    "end": "52879"
  },
  {
    "text": "and returning responses back to the",
    "start": "52879",
    "end": "54559"
  },
  {
    "text": "client to implement a controller simply",
    "start": "54559",
    "end": "56640"
  },
  {
    "text": "add the controller decorator",
    "start": "56640",
    "end": "58000"
  },
  {
    "text": "to a class then inside the class you can",
    "start": "58000",
    "end": "60079"
  },
  {
    "text": "implement methods",
    "start": "60079",
    "end": "61039"
  },
  {
    "text": "and decorate them with http verbs like",
    "start": "61039",
    "end": "63680"
  },
  {
    "text": "git",
    "start": "63680",
    "end": "64080"
  },
  {
    "text": "post patch put etc by default this will",
    "start": "64080",
    "end": "67280"
  },
  {
    "text": "create an http endpoint on the root url",
    "start": "67280",
    "end": "69920"
  },
  {
    "text": "but you can pass a string to the",
    "start": "69920",
    "end": "71280"
  },
  {
    "text": "decorator to",
    "start": "71280",
    "end": "72080"
  },
  {
    "text": "change the route or implement dynamic",
    "start": "72080",
    "end": "74080"
  },
  {
    "text": "route parameters in addition",
    "start": "74080",
    "end": "75680"
  },
  {
    "text": "nest provides other decorators to",
    "start": "75680",
    "end": "77280"
  },
  {
    "text": "control things like the status code and",
    "start": "77280",
    "end": "79200"
  },
  {
    "text": "headers then",
    "start": "79200",
    "end": "80000"
  },
  {
    "text": "in the method itself parameter",
    "start": "80000",
    "end": "81600"
  },
  {
    "text": "decorators can be used to access the",
    "start": "81600",
    "end": "83520"
  },
  {
    "text": "request parameters or body",
    "start": "83520",
    "end": "85360"
  },
  {
    "text": "and finally the return value from the",
    "start": "85360",
    "end": "87200"
  },
  {
    "text": "method is the response body",
    "start": "87200",
    "end": "88960"
  },
  {
    "text": "that gets sent back down to the client",
    "start": "88960",
    "end": "90960"
  },
  {
    "text": "what's awesome about nest",
    "start": "90960",
    "end": "92159"
  },
  {
    "text": "is that you can use the cli to",
    "start": "92159",
    "end": "93759"
  },
  {
    "text": "automatically generate more controllers",
    "start": "93759",
    "end": "95759"
  },
  {
    "text": "to keep your code organized as it grows",
    "start": "95759",
    "end": "97759"
  },
  {
    "text": "in complexity",
    "start": "97759",
    "end": "98640"
  },
  {
    "text": "but there's more to nest than just",
    "start": "98640",
    "end": "99920"
  },
  {
    "text": "controllers a provider is a class that",
    "start": "99920",
    "end": "102000"
  },
  {
    "text": "contains shared logic throughout the",
    "start": "102000",
    "end": "103520"
  },
  {
    "text": "entire application",
    "start": "103520",
    "end": "104720"
  },
  {
    "text": "and can be injected as a dependency",
    "start": "104720",
    "end": "106560"
  },
  {
    "text": "where needed any class with the",
    "start": "106560",
    "end": "108000"
  },
  {
    "text": "injectable decorator can be injected in",
    "start": "108000",
    "end": "109920"
  },
  {
    "text": "the constructor of another class",
    "start": "109920",
    "end": "111680"
  },
  {
    "text": "for example a provider can be",
    "start": "111680",
    "end": "113280"
  },
  {
    "text": "implemented as a guard to handle",
    "start": "113280",
    "end": "115280"
  },
  {
    "text": "role-based user authentication",
    "start": "115280",
    "end": "116960"
  },
  {
    "text": "or it might be implemented as a pipe to",
    "start": "116960",
    "end": "119200"
  },
  {
    "text": "efficiently validate and transform",
    "start": "119200",
    "end": "121040"
  },
  {
    "text": "values in a controller",
    "start": "121040",
    "end": "122479"
  },
  {
    "text": "and lastly we have the module decorator",
    "start": "122479",
    "end": "124719"
  },
  {
    "text": "which allows code to be organized into",
    "start": "124719",
    "end": "126640"
  },
  {
    "text": "smaller chunks",
    "start": "126640",
    "end": "127520"
  },
  {
    "text": "where it can be lazy loaded to run",
    "start": "127520",
    "end": "129440"
  },
  {
    "text": "faster in serverless environments",
    "start": "129440",
    "end": "131360"
  },
  {
    "text": "this has been nest js in 100 seconds if",
    "start": "131360",
    "end": "134000"
  },
  {
    "text": "you want to see more short videos like",
    "start": "134000",
    "end": "135440"
  },
  {
    "text": "this",
    "start": "135440",
    "end": "135760"
  },
  {
    "text": "make sure to hit the like button and",
    "start": "135760",
    "end": "137280"
  },
  {
    "text": "subscribe thanks for watching and i will",
    "start": "137280",
    "end": "139360"
  },
  {
    "text": "see you in the next one",
    "start": "139360",
    "end": "142400"
  }
]