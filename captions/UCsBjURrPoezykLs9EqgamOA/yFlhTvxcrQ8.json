[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "fire-based recently released a new query",
    "start": "30",
    "end": "1890"
  },
  {
    "text": "method called limit to last it's",
    "start": "1890",
    "end": "3659"
  },
  {
    "text": "available in version 7.3 or greater of",
    "start": "3659",
    "end": "5879"
  },
  {
    "text": "the JavaScript SDK and in today's video",
    "start": "5879",
    "end": "7830"
  },
  {
    "text": "I'll show you exactly why it's so useful",
    "start": "7830",
    "end": "9510"
  },
  {
    "text": "by implementing a pagination feature",
    "start": "9510",
    "end": "11639"
  },
  {
    "text": "with firestore if you're new here like",
    "start": "11639",
    "end": "13650"
  },
  {
    "text": "and subscribe and check out a discount",
    "start": "13650",
    "end": "15540"
  },
  {
    "text": "code in the description below for Black",
    "start": "15540",
    "end": "17279"
  },
  {
    "text": "Friday it's active now so feel free to",
    "start": "17279",
    "end": "19350"
  },
  {
    "text": "use that if you want to become any Pro",
    "start": "19350",
    "end": "21060"
  },
  {
    "text": "member you'll get access to the",
    "start": "21060",
    "end": "22470"
  },
  {
    "text": "firestore data modeling course along",
    "start": "22470",
    "end": "24090"
  },
  {
    "text": "with a bunch of other advanced firebase",
    "start": "24090",
    "end": "25619"
  },
  {
    "text": "content for today's video let's start by",
    "start": "25619",
    "end": "28080"
  },
  {
    "text": "talking about the problem that we're",
    "start": "28080",
    "end": "29310"
  },
  {
    "text": "trying to solve you may have a large",
    "start": "29310",
    "end": "30840"
  },
  {
    "text": "collection of data that you want to show",
    "start": "30840",
    "end": "32700"
  },
  {
    "text": "to the user in batches or in other words",
    "start": "32700",
    "end": "35250"
  },
  {
    "text": "you want to split your data into a",
    "start": "35250",
    "end": "36960"
  },
  {
    "text": "discrete set of pages and allow the user",
    "start": "36960",
    "end": "39000"
  },
  {
    "text": "to click through those pages if you've",
    "start": "39000",
    "end": "41160"
  },
  {
    "text": "ever tried to implement pagination and",
    "start": "41160",
    "end": "42719"
  },
  {
    "text": "firestore in the past you might know",
    "start": "42719",
    "end": "44250"
  },
  {
    "text": "that it's pretty easy to go in a forward",
    "start": "44250",
    "end": "45899"
  },
  {
    "text": "direction but going backwards to a",
    "start": "45899",
    "end": "47789"
  },
  {
    "text": "previous page was not so easy",
    "start": "47789",
    "end": "49649"
  },
  {
    "text": "you'd have to follow these four steps",
    "start": "49649",
    "end": "50700"
  },
  {
    "text": "which just isn't very intuitive or",
    "start": "50700",
    "end": "52920"
  },
  {
    "text": "something that you would think would be",
    "start": "52920",
    "end": "54180"
  },
  {
    "text": "relatively easy well I have some good",
    "start": "54180",
    "end": "55949"
  },
  {
    "text": "news for you the limit to last method",
    "start": "55949",
    "end": "57570"
  },
  {
    "text": "makes this process much easier it's",
    "start": "57570",
    "end": "59520"
  },
  {
    "text": "similar to the existing limit method but",
    "start": "59520",
    "end": "61559"
  },
  {
    "text": "instead of limiting to the first end",
    "start": "61559",
    "end": "63300"
  },
  {
    "text": "results it limits to the last end",
    "start": "63300",
    "end": "65220"
  },
  {
    "text": "results over the next few minutes we'll",
    "start": "65220",
    "end": "67229"
  },
  {
    "text": "look at the implementation details from",
    "start": "67229",
    "end": "68880"
  },
  {
    "text": "scratch but I first want to show you the",
    "start": "68880",
    "end": "70799"
  },
  {
    "text": "query functions that make this possible",
    "start": "70799",
    "end": "72479"
  },
  {
    "text": "and make sure to stay tuned until the",
    "start": "72479",
    "end": "74490"
  },
  {
    "text": "end of the video because I'm going to",
    "start": "74490",
    "end": "76020"
  },
  {
    "text": "discuss some of the limitations of",
    "start": "76020",
    "end": "77729"
  },
  {
    "text": "pagination and firestore in general for",
    "start": "77729",
    "end": "80369"
  },
  {
    "start": "80000",
    "end": "180000"
  },
  {
    "text": "this demo we'll be using spelt along",
    "start": "80369",
    "end": "82229"
  },
  {
    "text": "with a new library that I wrote called",
    "start": "82229",
    "end": "83970"
  },
  {
    "text": "spelt fire the pagination queries and",
    "start": "83970",
    "end": "86640"
  },
  {
    "text": "principles applied to all frameworks",
    "start": "86640",
    "end": "88350"
  },
  {
    "text": "across all programming languages but as",
    "start": "88350",
    "end": "90689"
  },
  {
    "text": "you'll see in a few minutes spelt fire",
    "start": "90689",
    "end": "92189"
  },
  {
    "text": "provides some special magic to make",
    "start": "92189",
    "end": "93990"
  },
  {
    "text": "pagination even easier but I know not",
    "start": "93990",
    "end": "96060"
  },
  {
    "text": "everybody's using spelt yet so let's",
    "start": "96060",
    "end": "97860"
  },
  {
    "text": "start by just focusing on the queries",
    "start": "97860",
    "end": "99720"
  },
  {
    "text": "that we need to make for pagination to",
    "start": "99720",
    "end": "101430"
  },
  {
    "text": "work the first thing you'll need to do",
    "start": "101430",
    "end": "103049"
  },
  {
    "text": "is make an initial query on your",
    "start": "103049",
    "end": "104759"
  },
  {
    "text": "collection it needs to be ordered by a",
    "start": "104759",
    "end": "106710"
  },
  {
    "text": "certain field and should be limited to a",
    "start": "106710",
    "end": "108750"
  },
  {
    "text": "specific page size so that's pretty",
    "start": "108750",
    "end": "111060"
  },
  {
    "text": "straightforward but when you want to",
    "start": "111060",
    "end": "112530"
  },
  {
    "text": "navigate to the next page you need to",
    "start": "112530",
    "end": "114240"
  },
  {
    "text": "offset by the last result in that first",
    "start": "114240",
    "end": "116969"
  },
  {
    "text": "page this is pretty straightforward and",
    "start": "116969",
    "end": "119040"
  },
  {
    "text": "uses query methods that have been",
    "start": "119040",
    "end": "120479"
  },
  {
    "text": "available on fire a store from day one",
    "start": "120479",
    "end": "122250"
  },
  {
    "text": "so here we have a function called next",
    "start": "122250",
    "end": "124770"
  },
  {
    "text": "page which takes the last document from",
    "start": "124770",
    "end": "126899"
  },
  {
    "text": "the first query it warders by the same",
    "start": "126899",
    "end": "129179"
  },
  {
    "text": "field but uses the start after method",
    "start": "129179",
    "end": "131430"
  },
  {
    "text": "which will offset from that",
    "start": "131430",
    "end": "133120"
  },
  {
    "text": "ah you so you'll start after the field",
    "start": "133120",
    "end": "134890"
  },
  {
    "text": "value from the last document by the same",
    "start": "134890",
    "end": "137349"
  },
  {
    "text": "field that you're ordering by and it",
    "start": "137349",
    "end": "139390"
  },
  {
    "text": "should limit by the same value as well",
    "start": "139390",
    "end": "141069"
  },
  {
    "text": "now let's say the user hits the next",
    "start": "141069",
    "end": "142840"
  },
  {
    "text": "button a few times but now they want to",
    "start": "142840",
    "end": "144549"
  },
  {
    "text": "navigate back to the previous page in",
    "start": "144549",
    "end": "146560"
  },
  {
    "text": "that case we want to grab the first",
    "start": "146560",
    "end": "148629"
  },
  {
    "text": "document on the most recent query in",
    "start": "148629",
    "end": "150670"
  },
  {
    "text": "this case we'll offset",
    "start": "150670",
    "end": "152500"
  },
  {
    "text": "using the end before method and finally",
    "start": "152500",
    "end": "154810"
  },
  {
    "text": "that's where limit to last comes in that",
    "start": "154810",
    "end": "156940"
  },
  {
    "text": "will give us the results that were seen",
    "start": "156940",
    "end": "158200"
  },
  {
    "text": "on the previous page giving us a full",
    "start": "158200",
    "end": "160000"
  },
  {
    "text": "forward and backward pagination system",
    "start": "160000",
    "end": "161980"
  },
  {
    "text": "now let's take a minute to look at the",
    "start": "161980",
    "end": "163780"
  },
  {
    "text": "full implementation details and spell",
    "start": "163780",
    "end": "165579"
  },
  {
    "text": "the first thing we'll do is install",
    "start": "165579",
    "end": "167260"
  },
  {
    "text": "spelt fire and again this is a library",
    "start": "167260",
    "end": "169480"
  },
  {
    "text": "that I wrote and I'm very excited about",
    "start": "169480",
    "end": "171190"
  },
  {
    "text": "it because it unlocks some UI patterns",
    "start": "171190",
    "end": "173290"
  },
  {
    "text": "and firebase that are really awesome and",
    "start": "173290",
    "end": "175180"
  },
  {
    "text": "if you want to see more videos about",
    "start": "175180",
    "end": "176530"
  },
  {
    "text": "spelt let me know in the comments",
    "start": "176530",
    "end": "178120"
  },
  {
    "text": "because I would be more than happy to",
    "start": "178120",
    "end": "179290"
  },
  {
    "text": "make them the first thing we'll do is",
    "start": "179290",
    "end": "181060"
  },
  {
    "start": "180000",
    "end": "400000"
  },
  {
    "text": "install spelt fire it provides several",
    "start": "181060",
    "end": "183159"
  },
  {
    "text": "components that allow you to access data",
    "start": "183159",
    "end": "185140"
  },
  {
    "text": "from collections documents and user",
    "start": "185140",
    "end": "187329"
  },
  {
    "text": "authentication then we'll initialize our",
    "start": "187329",
    "end": "189609"
  },
  {
    "text": "firebase app in the app component and",
    "start": "189609",
    "end": "191500"
  },
  {
    "text": "use the firebase app component from",
    "start": "191500",
    "end": "193540"
  },
  {
    "text": "spelt fire to set up the context from",
    "start": "193540",
    "end": "195909"
  },
  {
    "text": "there I'll set up a couple of properties",
    "start": "195909",
    "end": "197319"
  },
  {
    "text": "on the component the page size will be",
    "start": "197319",
    "end": "199120"
  },
  {
    "text": "three and the field that we want to",
    "start": "199120",
    "end": "201130"
  },
  {
    "text": "order by is the user name from there",
    "start": "201130",
    "end": "203470"
  },
  {
    "text": "I'll simply paste in the query code that",
    "start": "203470",
    "end": "205329"
  },
  {
    "text": "I showed you earlier the only difference",
    "start": "205329",
    "end": "207250"
  },
  {
    "text": "is that the query is now a function and",
    "start": "207250",
    "end": "209169"
  },
  {
    "text": "the reason we do this is because spelt",
    "start": "209169",
    "end": "210879"
  },
  {
    "text": "is reactive so anytime we change this",
    "start": "210879",
    "end": "212799"
  },
  {
    "text": "function it will update the query that",
    "start": "212799",
    "end": "214599"
  },
  {
    "text": "we send a fire store and update the data",
    "start": "214599",
    "end": "216579"
  },
  {
    "text": "in the UI so now we'll go back into the",
    "start": "216579",
    "end": "219790"
  },
  {
    "text": "UI and we'll set up a collection by",
    "start": "219790",
    "end": "222040"
  },
  {
    "text": "using the collection component from",
    "start": "222040",
    "end": "223540"
  },
  {
    "text": "spelt fire and we'll give it a path of",
    "start": "223540",
    "end": "225549"
  },
  {
    "text": "customers which will read the customers",
    "start": "225549",
    "end": "227470"
  },
  {
    "text": "collection and we'll pass in our query",
    "start": "227470",
    "end": "229329"
  },
  {
    "text": "function as a property to that component",
    "start": "229329",
    "end": "231160"
  },
  {
    "text": "and again whenever the query function",
    "start": "231160",
    "end": "233650"
  },
  {
    "text": "changes it will re execute the request",
    "start": "233650",
    "end": "235750"
  },
  {
    "text": "to fire store now here's where spelt",
    "start": "235750",
    "end": "238000"
  },
  {
    "text": "gets really awesome because it has this",
    "start": "238000",
    "end": "239739"
  },
  {
    "text": "thing called slot prompts it allows me",
    "start": "239739",
    "end": "242079"
  },
  {
    "text": "as a library author to create a variable",
    "start": "242079",
    "end": "244599"
  },
  {
    "text": "in the template called data that is the",
    "start": "244599",
    "end": "246849"
  },
  {
    "text": "data that is unwrapped from this",
    "start": "246849",
    "end": "248530"
  },
  {
    "text": "collection when the data has actually",
    "start": "248530",
    "end": "250599"
  },
  {
    "text": "loaded we can go ahead and loop over it",
    "start": "250599",
    "end": "252579"
  },
  {
    "text": "and show the customer username the ID",
    "start": "252579",
    "end": "254410"
  },
  {
    "text": "and their avatar image under the hood",
    "start": "254410",
    "end": "257079"
  },
  {
    "text": "spell fire is also keeping track of the",
    "start": "257079",
    "end": "259269"
  },
  {
    "text": "loading state very similar to react",
    "start": "259269",
    "end": "261130"
  },
  {
    "text": "suspense if you're familiar with that so",
    "start": "261130",
    "end": "263169"
  },
  {
    "text": "we'll use the loading slot to show a",
    "start": "263169",
    "end": "264700"
  },
  {
    "text": "loading spinner before the",
    "start": "264700",
    "end": "266350"
  },
  {
    "text": "is actually loaded from there we'll go",
    "start": "266350",
    "end": "268330"
  },
  {
    "text": "ahead and set up a couple of buttons",
    "start": "268330",
    "end": "269650"
  },
  {
    "text": "that can run our previous page and next",
    "start": "269650",
    "end": "271690"
  },
  {
    "text": "page functions to go to the previous",
    "start": "271690",
    "end": "274150"
  },
  {
    "text": "page we need to grab the first element",
    "start": "274150",
    "end": "276100"
  },
  {
    "text": "from the current query to go to the next",
    "start": "276100",
    "end": "277840"
  },
  {
    "text": "page we need the last element in the",
    "start": "277840",
    "end": "279400"
  },
  {
    "text": "current query normally we would need to",
    "start": "279400",
    "end": "281320"
  },
  {
    "text": "write some extra JavaScript to calculate",
    "start": "281320",
    "end": "283330"
  },
  {
    "text": "these values but in smelt fire they're",
    "start": "283330",
    "end": "285490"
  },
  {
    "text": "made available as slot props so we",
    "start": "285490",
    "end": "287440"
  },
  {
    "text": "simply say let first let last and as you",
    "start": "287440",
    "end": "290200"
  },
  {
    "text": "might imagine that gives us access to",
    "start": "290200",
    "end": "291700"
  },
  {
    "text": "the first and last documents in the",
    "start": "291700",
    "end": "293680"
  },
  {
    "text": "collection and that's all there is to it",
    "start": "293680",
    "end": "295720"
  },
  {
    "text": "we're now running a paginating query and",
    "start": "295720",
    "end": "297490"
  },
  {
    "text": "fire store they can go in both the",
    "start": "297490",
    "end": "298930"
  },
  {
    "text": "forward direction and a reverse",
    "start": "298930",
    "end": "300610"
  },
  {
    "text": "direction but before we wrap up the",
    "start": "300610",
    "end": "302650"
  },
  {
    "text": "video I do want to talk about some of",
    "start": "302650",
    "end": "304390"
  },
  {
    "text": "the limitations with pagination and",
    "start": "304390",
    "end": "305980"
  },
  {
    "text": "firestore the biggest one in my opinion",
    "start": "305980",
    "end": "308050"
  },
  {
    "text": "is splitting your data into a discrete",
    "start": "308050",
    "end": "310150"
  },
  {
    "text": "number of pages if you want to show a",
    "start": "310150",
    "end": "312280"
  },
  {
    "text": "number of pages and have the user",
    "start": "312280",
    "end": "314020"
  },
  {
    "text": "navigate to a specific page it's really",
    "start": "314020",
    "end": "316450"
  },
  {
    "text": "just not possible on fire store at least",
    "start": "316450",
    "end": "318820"
  },
  {
    "text": "not out of the box if you really need a",
    "start": "318820",
    "end": "320740"
  },
  {
    "text": "feature like this it is possible using a",
    "start": "320740",
    "end": "322660"
  },
  {
    "text": "cloud function to aggregate your data on",
    "start": "322660",
    "end": "324700"
  },
  {
    "text": "the back end when it's created I have a",
    "start": "324700",
    "end": "326680"
  },
  {
    "text": "snippet on fire ship i/o that shows you",
    "start": "326680",
    "end": "328510"
  },
  {
    "text": "how to do this so check that out if you",
    "start": "328510",
    "end": "330220"
  },
  {
    "text": "really need it and also you can use an",
    "start": "330220",
    "end": "332440"
  },
  {
    "text": "offset operator but it's only available",
    "start": "332440",
    "end": "334180"
  },
  {
    "text": "on the admin SDK for nodejs so that",
    "start": "334180",
    "end": "337450"
  },
  {
    "text": "could be very useful as well but again",
    "start": "337450",
    "end": "339190"
  },
  {
    "text": "only works on the server now the next",
    "start": "339190",
    "end": "341350"
  },
  {
    "text": "thing I want to point out is not really",
    "start": "341350",
    "end": "342580"
  },
  {
    "text": "a limitation but more of a caveat that",
    "start": "342580",
    "end": "344740"
  },
  {
    "text": "you should be aware of if your data",
    "start": "344740",
    "end": "346450"
  },
  {
    "text": "changes frequently you might get",
    "start": "346450",
    "end": "348070"
  },
  {
    "text": "unexpected results in your paginate",
    "start": "348070",
    "end": "350080"
  },
  {
    "text": "queries for example if the user is on a",
    "start": "350080",
    "end": "352270"
  },
  {
    "text": "given page and then you add a new",
    "start": "352270",
    "end": "353920"
  },
  {
    "text": "document to the collection it could",
    "start": "353920",
    "end": "355660"
  },
  {
    "text": "change the results on that page so the",
    "start": "355660",
    "end": "358060"
  },
  {
    "text": "data would jump around instantly which",
    "start": "358060",
    "end": "359830"
  },
  {
    "text": "would be a weird behavior then if they",
    "start": "359830",
    "end": "361420"
  },
  {
    "text": "click back to the previous page they'll",
    "start": "361420",
    "end": "363100"
  },
  {
    "text": "get a different set of results than they",
    "start": "363100",
    "end": "364450"
  },
  {
    "text": "saw originally so the bottom line here",
    "start": "364450",
    "end": "366700"
  },
  {
    "text": "is that pagination is most well-suited",
    "start": "366700",
    "end": "368890"
  },
  {
    "text": "for collections that don't change",
    "start": "368890",
    "end": "370480"
  },
  {
    "text": "frequently and that are not real-time",
    "start": "370480",
    "end": "372490"
  },
  {
    "text": "this is especially true if you do",
    "start": "372490",
    "end": "374500"
  },
  {
    "text": "something like infinite scroll which is",
    "start": "374500",
    "end": "376240"
  },
  {
    "text": "just a fancy way to do pagination",
    "start": "376240",
    "end": "378220"
  },
  {
    "text": "because you generally don't want the",
    "start": "378220",
    "end": "379720"
  },
  {
    "text": "position of results to change after they",
    "start": "379720",
    "end": "381730"
  },
  {
    "text": "were loaded in initially I'm gonna go",
    "start": "381730",
    "end": "383470"
  },
  {
    "text": "ahead and wrap things up there if this",
    "start": "383470",
    "end": "384850"
  },
  {
    "text": "video helped you please like and",
    "start": "384850",
    "end": "386050"
  },
  {
    "text": "subscribe and make sure to use the",
    "start": "386050",
    "end": "387700"
  },
  {
    "text": "discount code before it expires on",
    "start": "387700",
    "end": "389320"
  },
  {
    "text": "Friday thanks for watching and I will",
    "start": "389320",
    "end": "391540"
  },
  {
    "text": "talk to you soon",
    "start": "391540",
    "end": "394110"
  },
  {
    "text": "[Music]",
    "start": "396990",
    "end": "401779"
  }
]