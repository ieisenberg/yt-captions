[
  {
    "text": "surreal DB an open-source new SQL",
    "start": "120",
    "end": "3240"
  },
  {
    "text": "database that delivers every feature",
    "start": "3240",
    "end": "5279"
  },
  {
    "text": "you've ever dreamed of acid scalable",
    "start": "5279",
    "end": "7480"
  },
  {
    "text": "fulltech search real time graph",
    "start": "7480",
    "end": "9360"
  },
  {
    "text": "relational multi-tenant temporal schema",
    "start": "9360",
    "end": "11799"
  },
  {
    "text": "list schema full server list embedded",
    "start": "11799",
    "end": "14120"
  },
  {
    "text": "are all words that can describe surreal",
    "start": "14120",
    "end": "16000"
  },
  {
    "text": "DB a multimodel database that combines",
    "start": "16000",
    "end": "18359"
  },
  {
    "text": "elements of relational graph and",
    "start": "18359",
    "end": "20320"
  },
  {
    "text": "document paradigms into a simple package",
    "start": "20320",
    "end": "22680"
  },
  {
    "text": "that can be queried with an SQL like",
    "start": "22680",
    "end": "24519"
  },
  {
    "text": "language development was started by",
    "start": "24519",
    "end": "26240"
  },
  {
    "text": "Jamie and Toby Morgan Hitchcock in 2015",
    "start": "26240",
    "end": "28840"
  },
  {
    "text": "and it was open sourced in July 2022 the",
    "start": "28840",
    "end": "31519"
  },
  {
    "text": "engine is written in Rust and can",
    "start": "31519",
    "end": "33079"
  },
  {
    "text": "support multiple persistence layers like",
    "start": "33079",
    "end": "35000"
  },
  {
    "text": "tikv to scale horizontally in the cloud",
    "start": "35000",
    "end": "37440"
  },
  {
    "text": "or as a single node both in memory or on",
    "start": "37440",
    "end": "40079"
  },
  {
    "text": "disk most importantly though it can",
    "start": "40079",
    "end": "41760"
  },
  {
    "text": "handle complex relationships like",
    "start": "41760",
    "end": "43520"
  },
  {
    "text": "traditional relational databases but",
    "start": "43520",
    "end": "45440"
  },
  {
    "text": "does so without joins instead it uses",
    "start": "45440",
    "end": "47760"
  },
  {
    "text": "techniques like record links and graph",
    "start": "47760",
    "end": "49719"
  },
  {
    "text": "connections that not only handle complex",
    "start": "49719",
    "end": "52039"
  },
  {
    "text": "data models but also result in concise",
    "start": "52039",
    "end": "54719"
  },
  {
    "text": "developer friendly code by default it's",
    "start": "54719",
    "end": "56840"
  },
  {
    "text": "schema list which means you can",
    "start": "56840",
    "end": "58280"
  },
  {
    "text": "implicitly create unstructured data in",
    "start": "58280",
    "end": "60359"
  },
  {
    "text": "any table however you can opt into",
    "start": "60359",
    "end": "62399"
  },
  {
    "text": "schema full tables when the data model",
    "start": "62399",
    "end": "64239"
  },
  {
    "text": "becomes well defined it's also asset",
    "start": "64239",
    "end": "66159"
  },
  {
    "text": "compliant allowing you to run",
    "start": "66159",
    "end": "67400"
  },
  {
    "text": "transactions across multiple tables",
    "start": "67400",
    "end": "69400"
  },
  {
    "text": "which also emit events when the data",
    "start": "69400",
    "end": "71000"
  },
  {
    "text": "changes so you can listen to real-time",
    "start": "71000",
    "end": "73000"
  },
  {
    "text": "updates from a front-end application",
    "start": "73000",
    "end": "74720"
  },
  {
    "text": "kind of like Firebase and the feature",
    "start": "74720",
    "end": "76320"
  },
  {
    "text": "list goes on with things like geospatial",
    "start": "76320",
    "end": "78439"
  },
  {
    "text": "data and predefined analytics views all",
    "start": "78439",
    "end": "80799"
  },
  {
    "text": "of which can be locked down with",
    "start": "80799",
    "end": "82000"
  },
  {
    "text": "permissions out of the box to get",
    "start": "82000",
    "end": "83720"
  },
  {
    "text": "started install it on your machine then",
    "start": "83720",
    "end": "85600"
  },
  {
    "text": "run it locally with the CLI then execute",
    "start": "85600",
    "end": "87880"
  },
  {
    "text": "code using its rest API or a client",
    "start": "87880",
    "end": "90079"
  },
  {
    "text": "library for your favorite language just",
    "start": "90079",
    "end": "91960"
  },
  {
    "text": "like SQL we can use statements like",
    "start": "91960",
    "end": "94119"
  },
  {
    "text": "create to add a record to the database",
    "start": "94119",
    "end": "96439"
  },
  {
    "text": "every record has a unique ID comprised",
    "start": "96439",
    "end": "98720"
  },
  {
    "text": "of two parts the left side is the table",
    "start": "98720",
    "end": "100799"
  },
  {
    "text": "the record belongs to and the right side",
    "start": "100799",
    "end": "102720"
  },
  {
    "text": "can be whatever you want or if left out",
    "start": "102720",
    "end": "104640"
  },
  {
    "text": "it will be automatically generated and",
    "start": "104640",
    "end": "106439"
  },
  {
    "text": "now use set to define the data for that",
    "start": "106439",
    "end": "108680"
  },
  {
    "text": "record or try content for a more Json",
    "start": "108680",
    "end": "111240"
  },
  {
    "text": "like syntax now that we have some data",
    "start": "111240",
    "end": "113159"
  },
  {
    "text": "populated we can query it with a select",
    "start": "113159",
    "end": "115360"
  },
  {
    "text": "statement it supports the wear Clause to",
    "start": "115360",
    "end": "117360"
  },
  {
    "text": "filter by a condition and has a variety",
    "start": "117360",
    "end": "119399"
  },
  {
    "text": "of built-in functions like count to",
    "start": "119399",
    "end": "121360"
  },
  {
    "text": "fetch aggregate data or is to validate",
    "start": "121360",
    "end": "123640"
  },
  {
    "text": "common data formats like an email and if",
    "start": "123640",
    "end": "125759"
  },
  {
    "text": "that's not enough you can even embed",
    "start": "125759",
    "end": "127320"
  },
  {
    "text": "your own JavaScript logic directly into",
    "start": "127320",
    "end": "129599"
  },
  {
    "text": "a query but remember there are no joins",
    "start": "129599",
    "end": "131920"
  },
  {
    "text": "in The Surreal Life instead of foreign",
    "start": "131920",
    "end": "133720"
  },
  {
    "text": "Keys record IDs can be stored in any",
    "start": "133720",
    "end": "136160"
  },
  {
    "text": "other record that makes it possible to",
    "start": "136160",
    "end": "137959"
  },
  {
    "text": "query that data using a simple select",
    "start": "137959",
    "end": "140160"
  },
  {
    "text": "statement that uses dot notation to",
    "start": "140160",
    "end": "142480"
  },
  {
    "text": "specify the fields that should be joined",
    "start": "142480",
    "end": "144239"
  },
  {
    "text": "in that takes care of most relationships",
    "start": "144239",
    "end": "146440"
  },
  {
    "text": "but you can even add graph edges between",
    "start": "146440",
    "end": "148560"
  },
  {
    "text": "records using the Rel statement you can",
    "start": "148560",
    "end": "150760"
  },
  {
    "text": "now query this data efficiently using",
    "start": "150760",
    "end": "152640"
  },
  {
    "text": "arrows to Traverse between nodes and",
    "start": "152640",
    "end": "154400"
  },
  {
    "text": "edges this has been surreal DB in 100",
    "start": "154400",
    "end": "157160"
  },
  {
    "text": "seconds if you want to go beyond 100",
    "start": "157160",
    "end": "158879"
  },
  {
    "text": "seconds check out my new channel Beyond",
    "start": "158879",
    "end": "160800"
  },
  {
    "text": "fireship where I'll be taking you on an",
    "start": "160800",
    "end": "162640"
  },
  {
    "text": "extended surreal Journey thanks for",
    "start": "162640",
    "end": "164480"
  },
  {
    "text": "watching and I will see you in the next",
    "start": "164480",
    "end": "166200"
  },
  {
    "text": "one",
    "start": "166200",
    "end": "168480"
  }
]