[
  {
    "text": "one of the most valuable skills to have",
    "start": "280",
    "end": "1800"
  },
  {
    "text": "as a full stack web developer is without",
    "start": "1800",
    "end": "3600"
  },
  {
    "text": "a doubt node.js and that's not going to",
    "start": "3600",
    "end": "5640"
  },
  {
    "text": "change anytime soon but you might be",
    "start": "5640",
    "end": "7160"
  },
  {
    "text": "wondering why I'm making a node tutorial",
    "start": "7160",
    "end": "8800"
  },
  {
    "text": "in 2020 because if you've been watching",
    "start": "8800",
    "end": "10440"
  },
  {
    "text": "the news you may have heard that node",
    "start": "10440",
    "end": "11759"
  },
  {
    "text": "was killed last week by Deno when I lay",
    "start": "11759",
    "end": "14360"
  },
  {
    "text": "my vengance upon making the extremely",
    "start": "14360",
    "end": "17160"
  },
  {
    "text": "chaotic JavaScript world even more",
    "start": "17160",
    "end": "18760"
  },
  {
    "text": "convoluted if you're just starting to",
    "start": "18760",
    "end": "20400"
  },
  {
    "text": "learn JavaScript this can be very",
    "start": "20400",
    "end": "21800"
  },
  {
    "text": "confusing and you might be wondering",
    "start": "21800",
    "end": "23279"
  },
  {
    "text": "should I learn node or Deno the answer",
    "start": "23279",
    "end": "25240"
  },
  {
    "text": "is node especially if you want to get a",
    "start": "25240",
    "end": "26880"
  },
  {
    "text": "job or build a product when something",
    "start": "26880",
    "end": "28840"
  },
  {
    "text": "becomes as established as node it",
    "start": "28840",
    "end": "30439"
  },
  {
    "text": "doesn't get replaced you'll see things",
    "start": "30439",
    "end": "32000"
  },
  {
    "text": "like this happen all the time a few",
    "start": "32000",
    "end": "33360"
  },
  {
    "text": "years ago everybody was saying graphql",
    "start": "33360",
    "end": "35160"
  },
  {
    "text": "would replace rest and 10 years ago",
    "start": "35160",
    "end": "37000"
  },
  {
    "text": "people were saying no. JS would replace",
    "start": "37000",
    "end": "38640"
  },
  {
    "text": "PHP these predictions never pan out and",
    "start": "38640",
    "end": "40680"
  },
  {
    "text": "are just built on top of hype that being",
    "start": "40680",
    "end": "42640"
  },
  {
    "text": "said I do think Deno is awesome and has",
    "start": "42640",
    "end": "44320"
  },
  {
    "text": "a bright future both both both is good",
    "start": "44320",
    "end": "48680"
  },
  {
    "text": "and if you learn node today those skills",
    "start": "48680",
    "end": "50280"
  },
  {
    "text": "will mostly transfer to Deno tomorrow in",
    "start": "50280",
    "end": "52719"
  },
  {
    "text": "today's video you'll learn the basics of",
    "start": "52719",
    "end": "54280"
  },
  {
    "text": "nodejs in seven easy steps then we'll",
    "start": "54280",
    "end": "56600"
  },
  {
    "text": "put those steps together to build a full",
    "start": "56600",
    "end": "58239"
  },
  {
    "text": "stack web application because in my",
    "start": "58239",
    "end": "60079"
  },
  {
    "text": "opinion the best way to learn how to",
    "start": "60079",
    "end": "61359"
  },
  {
    "text": "code is to build something meaningful",
    "start": "61359",
    "end": "63079"
  },
  {
    "text": "from scratch by the end of the video",
    "start": "63079",
    "end": "64760"
  },
  {
    "text": "we'll deploy our code to the cloud so",
    "start": "64760",
    "end": "66360"
  },
  {
    "text": "you can show off your API to your",
    "start": "66360",
    "end": "67560"
  },
  {
    "text": "friends and family if you're new here",
    "start": "67560",
    "end": "69119"
  },
  {
    "text": "like And subscribe and head over to",
    "start": "69119",
    "end": "70560"
  },
  {
    "text": "fireship iio to follow along with the",
    "start": "70560",
    "end": "72240"
  },
  {
    "text": "full write up to this video step one is",
    "start": "72240",
    "end": "74720"
  },
  {
    "text": "to understand what no. JS is and why you",
    "start": "74720",
    "end": "76720"
  },
  {
    "text": "would want to use it node.js itself is",
    "start": "76720",
    "end": "78680"
  },
  {
    "text": "not a programming language but rather a",
    "start": "78680",
    "end": "80520"
  },
  {
    "text": "runtime that allows you to run",
    "start": "80520",
    "end": "82159"
  },
  {
    "text": "JavaScript on a server you see when",
    "start": "82159",
    "end": "84320"
  },
  {
    "text": "JavaScript first came around in the",
    "start": "84320",
    "end": "85680"
  },
  {
    "text": "1990s it was designed as a simple",
    "start": "85680",
    "end": "87880"
  },
  {
    "text": "scripting language to run in the browser",
    "start": "87880",
    "end": "89920"
  },
  {
    "text": "as the web platform evolved JavaScript",
    "start": "89920",
    "end": "91880"
  },
  {
    "text": "became more and more powerful and in",
    "start": "91880",
    "end": "93640"
  },
  {
    "text": "2009 we saw the initial release of",
    "start": "93640",
    "end": "95479"
  },
  {
    "text": "nodejs now up until this time it was",
    "start": "95479",
    "end": "97880"
  },
  {
    "text": "impossible to write JavaScript code on",
    "start": "97880",
    "end": "99479"
  },
  {
    "text": "the server most servers were written in",
    "start": "99479",
    "end": "101119"
  },
  {
    "text": "languages like Java or PHP it",
    "start": "101119",
    "end": "103479"
  },
  {
    "text": "revolutionized web development because",
    "start": "103479",
    "end": "105159"
  },
  {
    "text": "now a web developer could write a full",
    "start": "105159",
    "end": "106960"
  },
  {
    "text": "stack application in a single language",
    "start": "106960",
    "end": "109240"
  },
  {
    "text": "so that's all node.js is it's a way for",
    "start": "109240",
    "end": "111119"
  },
  {
    "text": "developers to write JavaScript on the",
    "start": "111119",
    "end": "112640"
  },
  {
    "text": "server when it could previously only be",
    "start": "112640",
    "end": "114399"
  },
  {
    "text": "written in a web browser now there are a",
    "start": "114399",
    "end": "116719"
  },
  {
    "text": "lot of low-level implementation details",
    "start": "116719",
    "end": "118560"
  },
  {
    "text": "here that you don't need to know about",
    "start": "118560",
    "end": "119920"
  },
  {
    "text": "as a beginner but if you really want to",
    "start": "119920",
    "end": "121320"
  },
  {
    "text": "dive into how nodejs Works check out my",
    "start": "121320",
    "end": "123399"
  },
  {
    "text": "How It's Made video but what kind of",
    "start": "123399",
    "end": "125200"
  },
  {
    "text": "problems can node.js actually solve",
    "start": "125200",
    "end": "127079"
  },
  {
    "text": "node.js can do a lot so instead of",
    "start": "127079",
    "end": "128840"
  },
  {
    "text": "listing out a bunch of use cases I'll",
    "start": "128840",
    "end": "130479"
  },
  {
    "text": "show you how to build a full stack web",
    "start": "130479",
    "end": "131879"
  },
  {
    "text": "application from scratch this is how",
    "start": "131879",
    "end": "133599"
  },
  {
    "text": "it'll work you visit a URL on the",
    "start": "133599",
    "end": "135560"
  },
  {
    "text": "internet that points to your server when",
    "start": "135560",
    "end": "137760"
  },
  {
    "text": "the request is received we can use node",
    "start": "137760",
    "end": "139640"
  },
  {
    "text": "to handle the request and read a file",
    "start": "139640",
    "end": "141519"
  },
  {
    "text": "from the server's file system and then",
    "start": "141519",
    "end": "143640"
  },
  {
    "text": "respond back to the client so they can",
    "start": "143640",
    "end": "145280"
  },
  {
    "text": "view the HTML in the browser step two",
    "start": "145280",
    "end": "148080"
  },
  {
    "text": "how to install node.js",
    "start": "148080",
    "end": "149920"
  },
  {
    "text": "node can be installed on Windows Mac or",
    "start": "149920",
    "end": "151560"
  },
  {
    "text": "Linux and is probably already installed",
    "start": "151560",
    "end": "153319"
  },
  {
    "text": "on your system in this tutorial I'll be",
    "start": "153319",
    "end": "155120"
  },
  {
    "text": "using Ubuntu via the windows subsystem",
    "start": "155120",
    "end": "157280"
  },
  {
    "text": "for Linux at this point I've just opened",
    "start": "157280",
    "end": "159519"
  },
  {
    "text": "up an empty directory in vs code and",
    "start": "159519",
    "end": "161519"
  },
  {
    "text": "then pulled up a terminal session you",
    "start": "161519",
    "end": "163239"
  },
  {
    "text": "can find out if node is installed on",
    "start": "163239",
    "end": "164560"
  },
  {
    "text": "your system by running node flag V from",
    "start": "164560",
    "end": "166920"
  },
  {
    "text": "the command line as you can see here I'm",
    "start": "166920",
    "end": "168840"
  },
  {
    "text": "running version 12.16 which is the",
    "start": "168840",
    "end": "171120"
  },
  {
    "text": "current long-term support version if you",
    "start": "171120",
    "end": "173200"
  },
  {
    "text": "get an error at this point it means that",
    "start": "173200",
    "end": "174640"
  },
  {
    "text": "you don't have node installed and even",
    "start": "174640",
    "end": "176480"
  },
  {
    "text": "if you do have node installed it'd be a",
    "start": "176480",
    "end": "178040"
  },
  {
    "text": "very good idea to use a package called",
    "start": "178040",
    "end": "179840"
  },
  {
    "text": "called node version manager to manage",
    "start": "179840",
    "end": "181680"
  },
  {
    "text": "the installation of different node",
    "start": "181680",
    "end": "183239"
  },
  {
    "text": "versions on your system there's an NVM",
    "start": "183239",
    "end": "185560"
  },
  {
    "text": "package for mac and Linux or a separate",
    "start": "185560",
    "end": "187560"
  },
  {
    "text": "package for Windows go ahead and follow",
    "start": "187560",
    "end": "189599"
  },
  {
    "text": "the instructions to install NVM on your",
    "start": "189599",
    "end": "191360"
  },
  {
    "text": "system and that will give you the",
    "start": "191360",
    "end": "192720"
  },
  {
    "text": "ability to install any version of",
    "start": "192720",
    "end": "194280"
  },
  {
    "text": "node.js that you want for example you",
    "start": "194280",
    "end": "196319"
  },
  {
    "text": "could run NVM install",
    "start": "196319",
    "end": "198599"
  },
  {
    "text": "12163 then run NVM use to use that",
    "start": "198599",
    "end": "201720"
  },
  {
    "text": "specific version as your runtime and now",
    "start": "201720",
    "end": "203959"
  },
  {
    "text": "that we have node.js installed we can",
    "start": "203959",
    "end": "205360"
  },
  {
    "text": "move on to step three hello world but",
    "start": "205360",
    "end": "207760"
  },
  {
    "text": "first if you're serious about node.js",
    "start": "207760",
    "end": "209200"
  },
  {
    "text": "consider becoming a pro member at fir",
    "start": "209200",
    "end": "211280"
  },
  {
    "text": "ship. it'll give you access to my full",
    "start": "211280",
    "end": "213280"
  },
  {
    "text": "length courses almost all of which cover",
    "start": "213280",
    "end": "215120"
  },
  {
    "text": "Advanced use cases for nodejs but we",
    "start": "215120",
    "end": "217319"
  },
  {
    "text": "need to walk before we can run so how do",
    "start": "217319",
    "end": "219239"
  },
  {
    "text": "we actually use this thing one way to",
    "start": "219239",
    "end": "221120"
  },
  {
    "text": "mess around with node is in repel mode",
    "start": "221120",
    "end": "223040"
  },
  {
    "text": "which stands for read of Al print Loop",
    "start": "223040",
    "end": "225200"
  },
  {
    "text": "when you type node into the command line",
    "start": "225200",
    "end": "227159"
  },
  {
    "text": "it allows you to run JavaScript code and",
    "start": "227159",
    "end": "229000"
  },
  {
    "text": "will print out the results for example",
    "start": "229000",
    "end": "231159"
  },
  {
    "text": "we can type console log hello world and",
    "start": "231159",
    "end": "233400"
  },
  {
    "text": "it will log that value out this is nice",
    "start": "233400",
    "end": "235239"
  },
  {
    "text": "for messing around but go ahead and hit",
    "start": "235239",
    "end": "236879"
  },
  {
    "text": "contrl C twice to shut it down because",
    "start": "236879",
    "end": "239120"
  },
  {
    "text": "in most cases we want to execute",
    "start": "239120",
    "end": "240879"
  },
  {
    "text": "JavaScript code that lives in an actual",
    "start": "240879",
    "end": "242760"
  },
  {
    "text": "file the default entry point into a",
    "start": "242760",
    "end": "244519"
  },
  {
    "text": "node.js app is the index.js file go",
    "start": "244519",
    "end": "247720"
  },
  {
    "text": "ahead and create an index.js file",
    "start": "247720",
    "end": "249400"
  },
  {
    "text": "manually in VSS code then inside that",
    "start": "249400",
    "end": "251959"
  },
  {
    "text": "file add console log hello world you can",
    "start": "251959",
    "end": "254640"
  },
  {
    "text": "now run the code inside this file with",
    "start": "254640",
    "end": "256400"
  },
  {
    "text": "the node command followed by the path to",
    "start": "256400",
    "end": "258400"
  },
  {
    "text": "this file and because it's an index file",
    "start": "258400",
    "end": "260560"
  },
  {
    "text": "you can actually just point to The",
    "start": "260560",
    "end": "261840"
  },
  {
    "text": "Parent Directory congratulations you",
    "start": "261840",
    "end": "264000"
  },
  {
    "text": "just built a node",
    "start": "264000",
    "end": "266840"
  },
  {
    "text": "app step four understand the node run",
    "start": "266919",
    "end": "269560"
  },
  {
    "text": "time",
    "start": "269560",
    "end": "270240"
  },
  {
    "text": "in most ways JavaScript works the same",
    "start": "270240",
    "end": "272160"
  },
  {
    "text": "way it does in the browser as it does in",
    "start": "272160",
    "end": "273919"
  },
  {
    "text": "node.js but there are some very",
    "start": "273919",
    "end": "276000"
  },
  {
    "text": "important differences you should know",
    "start": "276000",
    "end": "277199"
  },
  {
    "text": "about first node has a handful of",
    "start": "277199",
    "end": "279560"
  },
  {
    "text": "buil-in identifiers one of those globals",
    "start": "279560",
    "end": "281880"
  },
  {
    "text": "is console which we've already been",
    "start": "281880",
    "end": "283280"
  },
  {
    "text": "using to log out values to the terminal",
    "start": "283280",
    "end": "285800"
  },
  {
    "text": "there's another Global with a name of",
    "start": "285800",
    "end": "287400"
  },
  {
    "text": "global this object is a name space that",
    "start": "287400",
    "end": "289840"
  },
  {
    "text": "is available throughout the entire node",
    "start": "289840",
    "end": "291560"
  },
  {
    "text": "process for example if we assigned a",
    "start": "291560",
    "end": "294000"
  },
  {
    "text": "lucky number property to Global we could",
    "start": "294000",
    "end": "296000"
  },
  {
    "text": "then access it anywhere else in our code",
    "start": "296000",
    "end": "297919"
  },
  {
    "text": "if you're a front-end web developer you",
    "start": "297919",
    "end": "299280"
  },
  {
    "text": "can compare Global to the window object",
    "start": "299280",
    "end": "301520"
  },
  {
    "text": "in the browser now I think the most",
    "start": "301520",
    "end": "303080"
  },
  {
    "text": "important Global to be familiar with is",
    "start": "303080",
    "end": "305039"
  },
  {
    "text": "process which gives you access to the",
    "start": "305039",
    "end": "307000"
  },
  {
    "text": "currently running node process you might",
    "start": "307000",
    "end": "308919"
  },
  {
    "text": "use it to check the current platform or",
    "start": "308919",
    "end": "310720"
  },
  {
    "text": "operating system which in my case is",
    "start": "310720",
    "end": "312440"
  },
  {
    "text": "Linux or grab an environment variable",
    "start": "312440",
    "end": "314400"
  },
  {
    "text": "from your server but this gives us a",
    "start": "314400",
    "end": "316440"
  },
  {
    "text": "great opportunity to segue into step",
    "start": "316440",
    "end": "318400"
  },
  {
    "text": "five how do events work in node.js",
    "start": "318400",
    "end": "320360"
  },
  {
    "text": "you'll often hear people describe it as",
    "start": "320360",
    "end": "322479"
  },
  {
    "text": "an asynchronous event driven JavaScript",
    "start": "322479",
    "end": "324520"
  },
  {
    "text": "runtime the runtime implements a thing",
    "start": "324520",
    "end": "326520"
  },
  {
    "text": "called an event Loop just like a web",
    "start": "326520",
    "end": "328080"
  },
  {
    "text": "browser does and it allows not to push",
    "start": "328080",
    "end": "330120"
  },
  {
    "text": "intensive operations off to a separate",
    "start": "330120",
    "end": "331960"
  },
  {
    "text": "thread so only very fast non-blocking",
    "start": "331960",
    "end": "334199"
  },
  {
    "text": "operations happen on the main thread and",
    "start": "334199",
    "end": "336240"
  },
  {
    "text": "this is why people often call node",
    "start": "336240",
    "end": "337800"
  },
  {
    "text": "non-blocking it's a design choice that",
    "start": "337800",
    "end": "339680"
  },
  {
    "text": "makes node.js very suitable for things",
    "start": "339680",
    "end": "341440"
  },
  {
    "text": "that require high throughput like",
    "start": "341440",
    "end": "342960"
  },
  {
    "text": "real-time applications web servers and",
    "start": "342960",
    "end": "345400"
  },
  {
    "text": "things like that okay so how does that",
    "start": "345400",
    "end": "347720"
  },
  {
    "text": "affect me as a coder Well normally you",
    "start": "347720",
    "end": "349880"
  },
  {
    "text": "won't have to think about the low-level",
    "start": "349880",
    "end": "351199"
  },
  {
    "text": "details you just need to know how events",
    "start": "351199",
    "end": "353080"
  },
  {
    "text": "and callbacks work in most cases you'll",
    "start": "353080",
    "end": "355400"
  },
  {
    "text": "listen to events events can come in many",
    "start": "355400",
    "end": "357440"
  },
  {
    "text": "forms but one example is on the process",
    "start": "357440",
    "end": "359639"
  },
  {
    "text": "proc Global that we looked at earlier",
    "start": "359639",
    "end": "361520"
  },
  {
    "text": "before a node process finishes it emits",
    "start": "361520",
    "end": "363400"
  },
  {
    "text": "an event named exit we can listen to",
    "start": "363400",
    "end": "365520"
  },
  {
    "text": "this event using on and then register a",
    "start": "365520",
    "end": "367800"
  },
  {
    "text": "callback function as the second argument",
    "start": "367800",
    "end": "370120"
  },
  {
    "text": "when the exit event occurs node.js will",
    "start": "370120",
    "end": "372360"
  },
  {
    "text": "run this function and that's where it",
    "start": "372360",
    "end": "373680"
  },
  {
    "text": "gets the name callback because the",
    "start": "373680",
    "end": "375199"
  },
  {
    "text": "function isn't called the first time",
    "start": "375199",
    "end": "376599"
  },
  {
    "text": "nodejs sees it it's only called after",
    "start": "376599",
    "end": "378800"
  },
  {
    "text": "the exit event occurs at some point in",
    "start": "378800",
    "end": "380639"
  },
  {
    "text": "the future this event is built into node",
    "start": "380639",
    "end": "382919"
  },
  {
    "text": "but you can also create your own from",
    "start": "382919",
    "end": "384360"
  },
  {
    "text": "scratch we'll import an event emitter",
    "start": "384360",
    "end": "386759"
  },
  {
    "text": "from the events module that is built",
    "start": "386759",
    "end": "388240"
  },
  {
    "text": "into node and we'll look at modules in",
    "start": "388240",
    "end": "390080"
  },
  {
    "text": "more detail in just a minute we can",
    "start": "390080",
    "end": "391919"
  },
  {
    "text": "create a custom event emitter by",
    "start": "391919",
    "end": "393520"
  },
  {
    "text": "instantiating the class and then we'll",
    "start": "393520",
    "end": "395319"
  },
  {
    "text": "register a call back that fires on the",
    "start": "395319",
    "end": "397120"
  },
  {
    "text": "lunch event now that the call back is",
    "start": "397120",
    "end": "398919"
  },
  {
    "text": "registered you can simply call event",
    "start": "398919",
    "end": "400840"
  },
  {
    "text": "emitter emit with that event name and",
    "start": "400840",
    "end": "403639"
  },
  {
    "text": "that triggers your call back function to",
    "start": "403639",
    "end": "405080"
  },
  {
    "text": "run as you can see here we emit the",
    "start": "405080",
    "end": "407280"
  },
  {
    "text": "event twice which will run the Callback",
    "start": "407280",
    "end": "409240"
  },
  {
    "text": "function twice this event driven style",
    "start": "409240",
    "end": "411560"
  },
  {
    "text": "of programming is extremely useful when",
    "start": "411560",
    "end": "413319"
  },
  {
    "text": "you have something that is CPU intensive",
    "start": "413319",
    "end": "415680"
  },
  {
    "text": "and with that we can move on to step six",
    "start": "415680",
    "end": "417599"
  },
  {
    "text": "the file system node has a built-in file",
    "start": "417599",
    "end": "419840"
  },
  {
    "text": "system module called FS it can read",
    "start": "419840",
    "end": "422080"
  },
  {
    "text": "write and delete files on the file",
    "start": "422080",
    "end": "423599"
  },
  {
    "text": "system among other things and it can",
    "start": "423599",
    "end": "425520"
  },
  {
    "text": "also do things in a blocking or",
    "start": "425520",
    "end": "427199"
  },
  {
    "text": "non-blocking way allow me to explain",
    "start": "427199",
    "end": "429479"
  },
  {
    "text": "that by showing you an example first",
    "start": "429479",
    "end": "431560"
  },
  {
    "text": "create a file on the file system called",
    "start": "431560",
    "end": "433960"
  },
  {
    "text": "hello.txt and then add whatever text you",
    "start": "433960",
    "end": "436080"
  },
  {
    "text": "want inside of it in our JavaScript code",
    "start": "436080",
    "end": "438520"
  },
  {
    "text": "we'll import two functions from the file",
    "start": "438520",
    "end": "440280"
  },
  {
    "text": "system module called read file and read",
    "start": "440280",
    "end": "442560"
  },
  {
    "text": "file sync anytime you see a function",
    "start": "442560",
    "end": "444680"
  },
  {
    "text": "that ends in sync think blocking or in",
    "start": "444680",
    "end": "447120"
  },
  {
    "text": "other words it will need to finish all",
    "start": "447120",
    "end": "448479"
  },
  {
    "text": "of its work before any any of your other",
    "start": "448479",
    "end": "450120"
  },
  {
    "text": "code can run we can read a text file in",
    "start": "450120",
    "end": "452120"
  },
  {
    "text": "node by simply passing the path to that",
    "start": "452120",
    "end": "454199"
  },
  {
    "text": "file and we'll specify the encoding as",
    "start": "454199",
    "end": "456879"
  },
  {
    "text": "utf8 now reading a file might take a",
    "start": "456879",
    "end": "459120"
  },
  {
    "text": "while especially if it's a very large",
    "start": "459120",
    "end": "460720"
  },
  {
    "text": "file and what you'll notice here when we",
    "start": "460720",
    "end": "462199"
  },
  {
    "text": "run our code is that the second console",
    "start": "462199",
    "end": "464199"
  },
  {
    "text": "log won't run until after that file has",
    "start": "464199",
    "end": "466039"
  },
  {
    "text": "been read luckily you can make your code",
    "start": "466039",
    "end": "468120"
  },
  {
    "text": "non-blocking by refactoring this to a",
    "start": "468120",
    "end": "470120"
  },
  {
    "text": "callback with read file we pass the same",
    "start": "470120",
    "end": "472440"
  },
  {
    "text": "first two arguments and then add a",
    "start": "472440",
    "end": "474199"
  },
  {
    "text": "callback function as the third argument",
    "start": "474199",
    "end": "476199"
  },
  {
    "text": "inside the function we can access an",
    "start": "476199",
    "end": "477800"
  },
  {
    "text": "error object if the operation fails",
    "start": "477800",
    "end": "480199"
  },
  {
    "text": "or when successful the actual text from",
    "start": "480199",
    "end": "482080"
  },
  {
    "text": "the file the super cool thing about this",
    "start": "482080",
    "end": "484159"
  },
  {
    "text": "is that even though the console log to",
    "start": "484159",
    "end": "485879"
  },
  {
    "text": "the text file comes first in our script",
    "start": "485879",
    "end": "487800"
  },
  {
    "text": "it's not the thing that gets executed",
    "start": "487800",
    "end": "489280"
  },
  {
    "text": "first node registers the call back",
    "start": "489280",
    "end": "491120"
  },
  {
    "text": "executes the rest of the script and then",
    "start": "491120",
    "end": "492879"
  },
  {
    "text": "finally runs the call back when the file",
    "start": "492879",
    "end": "494440"
  },
  {
    "text": "has been read so that gives us two",
    "start": "494440",
    "end": "496360"
  },
  {
    "text": "different ways to read a file but",
    "start": "496360",
    "end": "497720"
  },
  {
    "text": "there's actually one other way we could",
    "start": "497720",
    "end": "498960"
  },
  {
    "text": "go about this and that's using a promise",
    "start": "498960",
    "end": "500840"
  },
  {
    "text": "based solution promises are also",
    "start": "500840",
    "end": "502800"
  },
  {
    "text": "asynchronous and non-blocking and they",
    "start": "502800",
    "end": "504680"
  },
  {
    "text": "tend to produce much cleaner code when",
    "start": "504680",
    "end": "506240"
  },
  {
    "text": "compared to callbacks notice how in this",
    "start": "506240",
    "end": "508159"
  },
  {
    "text": "example we're importing file from the",
    "start": "508159",
    "end": "510280"
  },
  {
    "text": "promises namespace this gives us a",
    "start": "510280",
    "end": "512200"
  },
  {
    "text": "function that returns a promise when",
    "start": "512200",
    "end": "513760"
  },
  {
    "text": "called if you're using the latest",
    "start": "513760",
    "end": "515518"
  },
  {
    "text": "bleeding edge version of node you could",
    "start": "515519",
    "end": "517080"
  },
  {
    "text": "potentially use this function with top",
    "start": "517080",
    "end": "518760"
  },
  {
    "text": "level a weight which means you can use a",
    "start": "518760",
    "end": "520320"
  },
  {
    "text": "weight to resolve the promise here at",
    "start": "520320",
    "end": "522080"
  },
  {
    "text": "the top of the script however since",
    "start": "522080",
    "end": "524159"
  },
  {
    "text": "we're currently using node version 12",
    "start": "524159",
    "end": "525880"
  },
  {
    "text": "we'll go ahead and wrap this in an async",
    "start": "525880",
    "end": "527560"
  },
  {
    "text": "function and this async await syntax",
    "start": "527560",
    "end": "529720"
  },
  {
    "text": "will make your code much easier to read",
    "start": "529720",
    "end": "531320"
  },
  {
    "text": "especially when you have multiple async",
    "start": "531320",
    "end": "533000"
  },
  {
    "text": "calls in the same function okay so now",
    "start": "533000",
    "end": "535200"
  },
  {
    "text": "that you know how to read files I want",
    "start": "535200",
    "end": "536600"
  },
  {
    "text": "to backtrack a little bit and talk about",
    "start": "536600",
    "end": "538480"
  },
  {
    "text": "this require function that you've seen",
    "start": "538480",
    "end": "540000"
  },
  {
    "text": "me use in the past couple examples step",
    "start": "540000",
    "end": "542560"
  },
  {
    "text": "seven modules a module is nothing more",
    "start": "542560",
    "end": "545200"
  },
  {
    "text": "than a Javascript file that exports its",
    "start": "545200",
    "end": "547120"
  },
  {
    "text": "code note has a bunch of built-in",
    "start": "547120",
    "end": "548920"
  },
  {
    "text": "modules like fs and events that we've",
    "start": "548920",
    "end": "551079"
  },
  {
    "text": "already looked at and there's a long",
    "start": "551079",
    "end": "552480"
  },
  {
    "text": "list of other modules beyond that the",
    "start": "552480",
    "end": "554440"
  },
  {
    "text": "traditional way to import a module in",
    "start": "554440",
    "end": "556040"
  },
  {
    "text": "node is to use this require function but",
    "start": "556040",
    "end": "558079"
  },
  {
    "text": "a quick side note on that first because",
    "start": "558079",
    "end": "559959"
  },
  {
    "text": "node recently added support for ES",
    "start": "559959",
    "end": "562120"
  },
  {
    "text": "modules which Ed the import export",
    "start": "562120",
    "end": "564440"
  },
  {
    "text": "syntax most node.js code out there",
    "start": "564440",
    "end": "566640"
  },
  {
    "text": "written in vanilla JavaScript still uses",
    "start": "566640",
    "end": "568519"
  },
  {
    "text": "require so it's very important for you",
    "start": "568519",
    "end": "570120"
  },
  {
    "text": "to know as a node.js developer and if",
    "start": "570120",
    "end": "572399"
  },
  {
    "text": "all that's confusing to you well all I",
    "start": "572399",
    "end": "574360"
  },
  {
    "text": "can say is welcome to the JavaScript",
    "start": "574360",
    "end": "576079"
  },
  {
    "text": "world let's look at how we can use",
    "start": "576079",
    "end": "577680"
  },
  {
    "text": "modules in our own codebase create a new",
    "start": "577680",
    "end": "579560"
  },
  {
    "text": "file to serve as your module then go",
    "start": "579560",
    "end": "581640"
  },
  {
    "text": "into your index.js file create a",
    "start": "581640",
    "end": "583560"
  },
  {
    "text": "variable for the module and then import",
    "start": "583560",
    "end": "585560"
  },
  {
    "text": "it using require when you console log it",
    "start": "585560",
    "end": "587760"
  },
  {
    "text": "you'll notice that it's currently just",
    "start": "587760",
    "end": "589079"
  },
  {
    "text": "an empty object in order to make a",
    "start": "589079",
    "end": "590880"
  },
  {
    "text": "module useful you need to export some",
    "start": "590880",
    "end": "592920"
  },
  {
    "text": "code from it in the modules file you can",
    "start": "592920",
    "end": "595200"
  },
  {
    "text": "reference this object with module.",
    "start": "595200",
    "end": "597320"
  },
  {
    "text": "exorts you can add new properties to the",
    "start": "597320",
    "end": "599560"
  },
  {
    "text": "object or redefine it as a new object in",
    "start": "599560",
    "end": "601880"
  },
  {
    "text": "either case whatever you add here will",
    "start": "601880",
    "end": "603680"
  },
  {
    "text": "now be available to use in the other",
    "start": "603680",
    "end": "605399"
  },
  {
    "text": "file and as you can see the object is no",
    "start": "605399",
    "end": "607600"
  },
  {
    "text": "longer empty when we console log it but",
    "start": "607600",
    "end": "609760"
  },
  {
    "text": "at some point you'll very likely want to",
    "start": "609760",
    "end": "611200"
  },
  {
    "text": "use somebody else's code out there in",
    "start": "611200",
    "end": "612640"
  },
  {
    "text": "the world and the primary place to do",
    "start": "612640",
    "end": "614320"
  },
  {
    "text": "that is via node package manager or npm",
    "start": "614320",
    "end": "617240"
  },
  {
    "text": "which was recently acquired by GitHub",
    "start": "617240",
    "end": "618959"
  },
  {
    "text": "which itself was recently acquired by",
    "start": "618959",
    "end": "620480"
  },
  {
    "text": "Microsoft when you installed node",
    "start": "620480",
    "end": "622320"
  },
  {
    "text": "earlier in the video it also installed",
    "start": "622320",
    "end": "624360"
  },
  {
    "text": "npm which is a tool you can use to",
    "start": "624360",
    "end": "626560"
  },
  {
    "text": "install remote packages to use in your",
    "start": "626560",
    "end": "628519"
  },
  {
    "text": "own code the first step we'll want to",
    "start": "628519",
    "end": "630279"
  },
  {
    "text": "take is to open the command line and run",
    "start": "630279",
    "end": "632279"
  },
  {
    "text": "npm and nit we'll use the Y flag to use",
    "start": "632279",
    "end": "634640"
  },
  {
    "text": "the default options and what you'll",
    "start": "634640",
    "end": "636560"
  },
  {
    "text": "notice is that it creates a package Json",
    "start": "636560",
    "end": "638639"
  },
  {
    "text": "file here in the root of the application",
    "start": "638639",
    "end": "640839"
  },
  {
    "text": "this file can contain metadata about",
    "start": "640839",
    "end": "642560"
  },
  {
    "text": "your project but most importantly it",
    "start": "642560",
    "end": "644560"
  },
  {
    "text": "keeps track of the dependencies that you",
    "start": "644560",
    "end": "646160"
  },
  {
    "text": "use here at this point we haven't",
    "start": "646160",
    "end": "647800"
  },
  {
    "text": "installed anything yet so let's go ahead",
    "start": "647800",
    "end": "649519"
  },
  {
    "text": "and change that by opening the command",
    "start": "649519",
    "end": "651160"
  },
  {
    "text": "line again and running npm install",
    "start": "651160",
    "end": "653440"
  },
  {
    "text": "Express Express is a minimal web",
    "start": "653440",
    "end": "655680"
  },
  {
    "text": "application framework and one of the",
    "start": "655680",
    "end": "657279"
  },
  {
    "text": "most popular third party node modules",
    "start": "657279",
    "end": "659279"
  },
  {
    "text": "after running the command you'll notice",
    "start": "659279",
    "end": "660560"
  },
  {
    "text": "a few things happened here in the",
    "start": "660560",
    "end": "662320"
  },
  {
    "text": "package Json file it added Express to",
    "start": "662320",
    "end": "664639"
  },
  {
    "text": "the dependencies and pegged it to a",
    "start": "664639",
    "end": "666440"
  },
  {
    "text": "specific version this dependencies",
    "start": "666440",
    "end": "668120"
  },
  {
    "text": "object allows you to manage multiple",
    "start": "668120",
    "end": "669880"
  },
  {
    "text": "dependencies in a project and then",
    "start": "669880",
    "end": "671440"
  },
  {
    "text": "reinstall them all at once on a",
    "start": "671440",
    "end": "672800"
  },
  {
    "text": "different system now the actual raw",
    "start": "672800",
    "end": "674560"
  },
  {
    "text": "source code for the dependency lives in",
    "start": "674560",
    "end": "676279"
  },
  {
    "text": "this node modules directory you should",
    "start": "676279",
    "end": "678160"
  },
  {
    "text": "never have to modify code in the node",
    "start": "678160",
    "end": "679760"
  },
  {
    "text": "modules directory if you find yourself",
    "start": "679760",
    "end": "681480"
  },
  {
    "text": "writing code in here you're probably",
    "start": "681480",
    "end": "682920"
  },
  {
    "text": "doing it wrong that's because the",
    "start": "682920",
    "end": "684360"
  },
  {
    "text": "package Json controls how this directory",
    "start": "684360",
    "end": "686240"
  },
  {
    "text": "is built it fetches your remote packages",
    "start": "686240",
    "end": "688519"
  },
  {
    "text": "Saves The Source here and that process",
    "start": "688519",
    "end": "690600"
  },
  {
    "text": "should be able to be repeated on any",
    "start": "690600",
    "end": "692320"
  },
  {
    "text": "system now that we have this package",
    "start": "692320",
    "end": "693920"
  },
  {
    "text": "installed we can import it by name in",
    "start": "693920",
    "end": "695800"
  },
  {
    "text": "our JavaScript code in this case we",
    "start": "695800",
    "end": "697760"
  },
  {
    "text": "simply require Express and now we've",
    "start": "697760",
    "end": "699920"
  },
  {
    "text": "reached the point where we're ready to",
    "start": "699920",
    "end": "701120"
  },
  {
    "text": "put these seven steps together to build",
    "start": "701120",
    "end": "702920"
  },
  {
    "text": "a real full stack application and deploy",
    "start": "702920",
    "end": "705000"
  },
  {
    "text": "it to the cloud what we're building here",
    "start": "705000",
    "end": "706959"
  },
  {
    "text": "is actually just your typical full stack",
    "start": "706959",
    "end": "708800"
  },
  {
    "text": "web application our server will live on",
    "start": "708800",
    "end": "711000"
  },
  {
    "text": "a URL and when a user makes a request to",
    "start": "711000",
    "end": "713399"
  },
  {
    "text": "this URL in the browser the server will",
    "start": "713399",
    "end": "715639"
  },
  {
    "text": "respond with some HTML in our code we'll",
    "start": "715639",
    "end": "718079"
  },
  {
    "text": "first create an instance of an Express",
    "start": "718079",
    "end": "720040"
  },
  {
    "text": "app an Express app allows us to create",
    "start": "720040",
    "end": "722279"
  },
  {
    "text": "different URLs and endpoints that a user",
    "start": "722279",
    "end": "724399"
  },
  {
    "text": "can navigate to in the browser and then",
    "start": "724399",
    "end": "726200"
  },
  {
    "text": "we Define code for the server to handle",
    "start": "726200",
    "end": "728200"
  },
  {
    "text": "those requests now I don't want to get",
    "start": "728200",
    "end": "729800"
  },
  {
    "text": "too deep into HTTP but when the user",
    "start": "729800",
    "end": "731839"
  },
  {
    "text": "navigates to a URL in the browser it's",
    "start": "731839",
    "end": "733839"
  },
  {
    "text": "what's known as a git request which",
    "start": "733839",
    "end": "735600"
  },
  {
    "text": "means they're requesting some data on",
    "start": "735600",
    "end": "737120"
  },
  {
    "text": "the server and not trying to modify or",
    "start": "737120",
    "end": "739399"
  },
  {
    "text": "update anything on the server with",
    "start": "739399",
    "end": "741079"
  },
  {
    "text": "Express we can set up an endpoint like",
    "start": "741079",
    "end": "742839"
  },
  {
    "text": "that by calling app.get and then the",
    "start": "742839",
    "end": "745279"
  },
  {
    "text": "first argument is the URL that the user",
    "start": "745279",
    "end": "747399"
  },
  {
    "text": "will navigate to in this case we just",
    "start": "747399",
    "end": "749320"
  },
  {
    "text": "use a forward slash for the root URL but",
    "start": "749320",
    "end": "751720"
  },
  {
    "text": "feel free to create multiple Pages for",
    "start": "751720",
    "end": "753399"
  },
  {
    "text": "your web app by creating different URLs",
    "start": "753399",
    "end": "755639"
  },
  {
    "text": "the second argument here is our callback",
    "start": "755639",
    "end": "757360"
  },
  {
    "text": "function you can think of every request",
    "start": "757360",
    "end": "759000"
  },
  {
    "text": "to this URL as an event and then you",
    "start": "759000",
    "end": "761160"
  },
  {
    "text": "handle that event with this function an",
    "start": "761160",
    "end": "763199"
  },
  {
    "text": "Express gives us two parameters to make",
    "start": "763199",
    "end": "764920"
  },
  {
    "text": "use of the request and the response the",
    "start": "764920",
    "end": "767760"
  },
  {
    "text": "request is the incoming data from the",
    "start": "767760",
    "end": "769519"
  },
  {
    "text": "user in this example we don't really",
    "start": "769519",
    "end": "771600"
  },
  {
    "text": "need to parse any data from the request",
    "start": "771600",
    "end": "773800"
  },
  {
    "text": "however in many cases you might want to",
    "start": "773800",
    "end": "775000"
  },
  {
    "text": "look at the headers or the body of the",
    "start": "775000",
    "end": "776760"
  },
  {
    "text": "request to authenticate a user or",
    "start": "776760",
    "end": "779320"
  },
  {
    "text": "understand what the user is trying to do",
    "start": "779320",
    "end": "780959"
  },
  {
    "text": "at this point we need to implement the",
    "start": "780959",
    "end": "782519"
  },
  {
    "text": "code to handle the request what we want",
    "start": "782519",
    "end": "784600"
  },
  {
    "text": "to do is read some HTML from our file",
    "start": "784600",
    "end": "786880"
  },
  {
    "text": "system and then send it back down to the",
    "start": "786880",
    "end": "789000"
  },
  {
    "text": "browser as you can see here I'm creating",
    "start": "789000",
    "end": "790920"
  },
  {
    "text": "a file called home.html with just some",
    "start": "790920",
    "end": "793639"
  },
  {
    "text": "generic HTML markup inside in our source",
    "start": "793639",
    "end": "796959"
  },
  {
    "text": "code we can then import read file from",
    "start": "796959",
    "end": "799040"
  },
  {
    "text": "node's file system module just like we",
    "start": "799040",
    "end": "801240"
  },
  {
    "text": "did earlier we'll read the file use utf8",
    "start": "801240",
    "end": "804440"
  },
  {
    "text": "encoding then in our callback function",
    "start": "804440",
    "end": "806600"
  },
  {
    "text": "here we'll have access to the HTML",
    "start": "806600",
    "end": "808440"
  },
  {
    "text": "string and we can send a response back",
    "start": "808440",
    "end": "810760"
  },
  {
    "text": "down to the client by calling response.",
    "start": "810760",
    "end": "813079"
  },
  {
    "text": "send and also if there's an error in the",
    "start": "813079",
    "end": "815440"
  },
  {
    "text": "call back we can handle that by sending",
    "start": "815440",
    "end": "817320"
  },
  {
    "text": "a response with a status code of 500",
    "start": "817320",
    "end": "819800"
  },
  {
    "text": "which means a server error so the user",
    "start": "819800",
    "end": "822320"
  },
  {
    "text": "knows that something went wrong on the",
    "start": "822320",
    "end": "823600"
  },
  {
    "text": "server and that's all there is to it we",
    "start": "823600",
    "end": "825680"
  },
  {
    "text": "now have a way to send HTML from the",
    "start": "825680",
    "end": "827839"
  },
  {
    "text": "server to the client now we just need to",
    "start": "827839",
    "end": "829920"
  },
  {
    "text": "tell our Express app to start listening",
    "start": "829920",
    "end": "831680"
  },
  {
    "text": "to incoming requests we do that by",
    "start": "831680",
    "end": "833839"
  },
  {
    "text": "defining a port which will normally come",
    "start": "833839",
    "end": "835839"
  },
  {
    "text": "from a node environment variable then we",
    "start": "835839",
    "end": "838000"
  },
  {
    "text": "call app. listen with that port and when",
    "start": "838000",
    "end": "840440"
  },
  {
    "text": "it starts up we console log that the app",
    "start": "840440",
    "end": "842320"
  },
  {
    "text": "is available on Local Host 3000 you can",
    "start": "842320",
    "end": "844920"
  },
  {
    "text": "start it up by opening the command line",
    "start": "844920",
    "end": "846680"
  },
  {
    "text": "and running node with the current",
    "start": "846680",
    "end": "848079"
  },
  {
    "text": "working directory if you go ahead and",
    "start": "848079",
    "end": "850199"
  },
  {
    "text": "open it in the browser you should see",
    "start": "850199",
    "end": "851680"
  },
  {
    "text": "your HTML return back to you now there",
    "start": "851680",
    "end": "854360"
  },
  {
    "text": "is one important thing you should know",
    "start": "854360",
    "end": "855560"
  },
  {
    "text": "at this point and that's that callbacks",
    "start": "855560",
    "end": "857199"
  },
  {
    "text": "can be very difficult to work with",
    "start": "857199",
    "end": "858680"
  },
  {
    "text": "especially as your app grows in",
    "start": "858680",
    "end": "860120"
  },
  {
    "text": "complexity it often leads to a state",
    "start": "860120",
    "end": "862320"
  },
  {
    "text": "known as callback hell where you have a",
    "start": "862320",
    "end": "864120"
  },
  {
    "text": "bunch of callbacks nested within",
    "start": "864120",
    "end": "865480"
  },
  {
    "text": "callbacks within more callbacks and so",
    "start": "865480",
    "end": "867440"
  },
  {
    "text": "on a great way toid code like this is to",
    "start": "867440",
    "end": "870160"
  },
  {
    "text": "use promises instead of callbacks and",
    "start": "870160",
    "end": "872240"
  },
  {
    "text": "that's very easy to do in node.js",
    "start": "872240",
    "end": "873839"
  },
  {
    "text": "instead of importing read file from FS",
    "start": "873839",
    "end": "876920"
  },
  {
    "text": "we'll import it from fs. promises we can",
    "start": "876920",
    "end": "879839"
  },
  {
    "text": "make our callback function async and",
    "start": "879839",
    "end": "881800"
  },
  {
    "text": "then we can write the response in a",
    "start": "881800",
    "end": "883079"
  },
  {
    "text": "single line of Code by saying response",
    "start": "883079",
    "end": "884880"
  },
  {
    "text": "send and then await the operation to",
    "start": "884880",
    "end": "887040"
  },
  {
    "text": "read file that's much more concise and",
    "start": "887040",
    "end": "889040"
  },
  {
    "text": "readable but it's especially useful when",
    "start": "889040",
    "end": "890839"
  },
  {
    "text": "you have multiple async operations to",
    "start": "890839",
    "end": "892720"
  },
  {
    "text": "handle in a single request so now that",
    "start": "892720",
    "end": "894920"
  },
  {
    "text": "we've built a nodejs app how do we",
    "start": "894920",
    "end": "896600"
  },
  {
    "text": "deploy it to the cloud so people can",
    "start": "896600",
    "end": "898240"
  },
  {
    "text": "actually use it there's a bunch of",
    "start": "898240",
    "end": "899720"
  },
  {
    "text": "different ways we could do it but an",
    "start": "899720",
    "end": "901079"
  },
  {
    "text": "easy and free way is with Google app",
    "start": "901079",
    "end": "902959"
  },
  {
    "text": "engine app engine has what's known as a",
    "start": "902959",
    "end": "904959"
  },
  {
    "text": "standard environment for node.js up to",
    "start": "904959",
    "end": "907120"
  },
  {
    "text": "version 12 and what that does is provide",
    "start": "907120",
    "end": "909480"
  },
  {
    "text": "you with a server in the cloud that",
    "start": "909480",
    "end": "911199"
  },
  {
    "text": "scales automatically based on the",
    "start": "911199",
    "end": "912959"
  },
  {
    "text": "incoming traffic to your app it's",
    "start": "912959",
    "end": "914839"
  },
  {
    "text": "incredibly easy to set up but you first",
    "start": "914839",
    "end": "916600"
  },
  {
    "text": "need to have a Google Cloud platform",
    "start": "916600",
    "end": "918399"
  },
  {
    "text": "account and also the Google Cloud",
    "start": "918399",
    "end": "920639"
  },
  {
    "text": "command line tools installed on your",
    "start": "920639",
    "end": "922279"
  },
  {
    "text": "local system once you have that done you",
    "start": "922279",
    "end": "924440"
  },
  {
    "text": "can simply go into your source code and",
    "start": "924440",
    "end": "926160"
  },
  {
    "text": "create an app.yaml file this file is to",
    "start": "926160",
    "end": "929319"
  },
  {
    "text": "configure your Cloud Server the only",
    "start": "929319",
    "end": "931000"
  },
  {
    "text": "thing we need at this point is to",
    "start": "931000",
    "end": "932240"
  },
  {
    "text": "specify a runtime of node.js version 12",
    "start": "932240",
    "end": "935480"
  },
  {
    "text": "app engine will run your code by looking",
    "start": "935480",
    "end": "937199"
  },
  {
    "text": "in the package Json file for a start",
    "start": "937199",
    "end": "939240"
  },
  {
    "text": "script so let's go in there and Define a",
    "start": "939240",
    "end": "941480"
  },
  {
    "text": "start script that runs node in the",
    "start": "941480",
    "end": "943279"
  },
  {
    "text": "current working directory to start our",
    "start": "943279",
    "end": "944959"
  },
  {
    "text": "Express app from there we can simply",
    "start": "944959",
    "end": "947040"
  },
  {
    "text": "open the command line and run gcloud app",
    "start": "947040",
    "end": "949360"
  },
  {
    "text": "deploy that'll take a minute and then it",
    "start": "949360",
    "end": "951279"
  },
  {
    "text": "will give you a URL where you can access",
    "start": "951279",
    "end": "953160"
  },
  {
    "text": "your app publicly on the web",
    "start": "953160",
    "end": "954759"
  },
  {
    "text": "congratulations you're now a full stack",
    "start": "954759",
    "end": "956800"
  },
  {
    "text": "Cloud architect",
    "start": "956800",
    "end": "960079"
  },
  {
    "text": "if this video helped you please like And",
    "start": "960079",
    "end": "961639"
  },
  {
    "text": "subscribe and if you really want to dive",
    "start": "961639",
    "end": "963199"
  },
  {
    "text": "deep into node.js and express consider",
    "start": "963199",
    "end": "965120"
  },
  {
    "text": "becoming a pro member at fireship iio I",
    "start": "965120",
    "end": "967440"
  },
  {
    "text": "have a whole bunch of advanced content",
    "start": "967440",
    "end": "968839"
  },
  {
    "text": "covering real world use cases with these",
    "start": "968839",
    "end": "970560"
  },
  {
    "text": "Technologies thanks for watching and I",
    "start": "970560",
    "end": "972639"
  },
  {
    "text": "will see you in the next one",
    "start": "972639",
    "end": "975960"
  },
  {
    "text": "[Music]",
    "start": "975960",
    "end": "981729"
  }
]