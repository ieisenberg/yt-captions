[
  {
    "text": "denim a brand new way to write",
    "start": "589",
    "end": "2820"
  },
  {
    "text": "server-side JavaScript it solves many of",
    "start": "2820",
    "end": "4799"
  },
  {
    "text": "the same problems as nodejs and was even",
    "start": "4799",
    "end": "6600"
  },
  {
    "text": "created by the same guy like node it",
    "start": "6600",
    "end": "8730"
  },
  {
    "text": "uses the v8 JavaScript engine under the",
    "start": "8730",
    "end": "10530"
  },
  {
    "text": "hood but the rest of the runtime is",
    "start": "10530",
    "end": "12179"
  },
  {
    "text": "implemented in rust and typescript our",
    "start": "12179",
    "end": "14370"
  },
  {
    "text": "journey into denna land begins in a",
    "start": "14370",
    "end": "16139"
  },
  {
    "text": "single type script file in this file we",
    "start": "16139",
    "end": "17940"
  },
  {
    "text": "have access to all the types in the",
    "start": "17940",
    "end": "19439"
  },
  {
    "text": "runtime which means we can write",
    "start": "19439",
    "end": "20820"
  },
  {
    "text": "strongly typed code and get",
    "start": "20820",
    "end": "22170"
  },
  {
    "text": "documentation and intellisense directly",
    "start": "22170",
    "end": "24090"
  },
  {
    "text": "in the IDE without ever needing to touch",
    "start": "24090",
    "end": "26070"
  },
  {
    "text": "a TS config file the features in the",
    "start": "26070",
    "end": "28320"
  },
  {
    "text": "runtime can be accessed from this demo",
    "start": "28320",
    "end": "30150"
  },
  {
    "text": "namespace let's console.log the current",
    "start": "30150",
    "end": "32369"
  },
  {
    "text": "working directory of the filesystem we",
    "start": "32369",
    "end": "34350"
  },
  {
    "text": "can execute our script with demo run",
    "start": "34350",
    "end": "36090"
  },
  {
    "text": "from the command line but you'll notice",
    "start": "36090",
    "end": "37649"
  },
  {
    "text": "the throws an error and that's because",
    "start": "37649",
    "end": "38969"
  },
  {
    "text": "demo is secure by default you the",
    "start": "38969",
    "end": "41129"
  },
  {
    "text": "developer need to give permission to",
    "start": "41129",
    "end": "42870"
  },
  {
    "text": "perform different actions in the runtime",
    "start": "42870",
    "end": "44399"
  },
  {
    "text": "in this case we can use the allow read",
    "start": "44399",
    "end": "46739"
  },
  {
    "text": "flag to allow this operation security is",
    "start": "46739",
    "end": "49200"
  },
  {
    "text": "great but my favorite thing is how",
    "start": "49200",
    "end": "50700"
  },
  {
    "text": "everything asynchronous is promise based",
    "start": "50700",
    "end": "52620"
  },
  {
    "text": "we can make a network request using the",
    "start": "52620",
    "end": "54719"
  },
  {
    "text": "fetch API just like we would in the",
    "start": "54719",
    "end": "56280"
  },
  {
    "text": "browser and because it supports",
    "start": "56280",
    "end": "57870"
  },
  {
    "text": "top-level wait we don't even need an",
    "start": "57870",
    "end": "59550"
  },
  {
    "text": "async function here we can start",
    "start": "59550",
    "end": "60930"
  },
  {
    "text": "resolving promises without any extra",
    "start": "60930",
    "end": "62699"
  },
  {
    "text": "boilerplate code denno attempts to make",
    "start": "62699",
    "end": "64559"
  },
  {
    "text": "your code as browser compatible as",
    "start": "64559",
    "end": "66060"
  },
  {
    "text": "possible it contains a window object",
    "start": "66060",
    "end": "68010"
  },
  {
    "text": "with lifecycle events that you can",
    "start": "68010",
    "end": "69390"
  },
  {
    "text": "listen to allowing developers to more",
    "start": "69390",
    "end": "71250"
  },
  {
    "text": "easily write code that can interrupt",
    "start": "71250",
    "end": "72659"
  },
  {
    "text": "between browsers and servers not to",
    "start": "72659",
    "end": "74880"
  },
  {
    "text": "mention it can also execute web assembly",
    "start": "74880",
    "end": "76860"
  },
  {
    "text": "binaries but one thing that won't work",
    "start": "76860",
    "end": "78689"
  },
  {
    "text": "in demo are your NPM packages instead",
    "start": "78689",
    "end": "81030"
  },
  {
    "text": "you import packages using the modern yes",
    "start": "81030",
    "end": "83189"
  },
  {
    "text": "module syntax with remote modules being",
    "start": "83189",
    "end": "85350"
  },
  {
    "text": "referenced by their URL when you run",
    "start": "85350",
    "end": "87330"
  },
  {
    "text": "your script for the first time it will",
    "start": "87330",
    "end": "88799"
  },
  {
    "text": "download this code locally and cache it",
    "start": "88799",
    "end": "90479"
  },
  {
    "text": "there's no package JSON and code can be",
    "start": "90479",
    "end": "92460"
  },
  {
    "text": "referenced from any URL very similar to",
    "start": "92460",
    "end": "94650"
  },
  {
    "text": "how things work in the browser demo",
    "start": "94650",
    "end": "96329"
  },
  {
    "text": "provides a set of standard modules to",
    "start": "96329",
    "end": "97950"
  },
  {
    "text": "solve common use cases for example we",
    "start": "97950",
    "end": "100110"
  },
  {
    "text": "can import serve from the HTTP module we",
    "start": "100110",
    "end": "102600"
  },
  {
    "text": "can use it to create a server that's",
    "start": "102600",
    "end": "104130"
  },
  {
    "text": "treated as an async iterable we can then",
    "start": "104130",
    "end": "106200"
  },
  {
    "text": "await every request from the server and",
    "start": "106200",
    "end": "108090"
  },
  {
    "text": "respond to it accordingly and that's an",
    "start": "108090",
    "end": "109829"
  },
  {
    "text": "awesome starting point for a server-side",
    "start": "109829",
    "end": "111509"
  },
  {
    "text": "JavaScript app now then au 1.0 just hit",
    "start": "111509",
    "end": "114180"
  },
  {
    "text": "release candidate 1 so if you start",
    "start": "114180",
    "end": "115950"
  },
  {
    "text": "using it today",
    "start": "115950",
    "end": "116670"
  },
  {
    "text": "consider yourself an early adopter do",
    "start": "116670",
    "end": "118560"
  },
  {
    "text": "you think denno is the future of",
    "start": "118560",
    "end": "119520"
  },
  {
    "text": "server-side JavaScript let me know in",
    "start": "119520",
    "end": "120990"
  },
  {
    "text": "the comments below thanks for watching",
    "start": "120990",
    "end": "122490"
  },
  {
    "text": "hit the like button and I will see you",
    "start": "122490",
    "end": "124229"
  },
  {
    "text": "in the next one",
    "start": "124229",
    "end": "126798"
  }
]