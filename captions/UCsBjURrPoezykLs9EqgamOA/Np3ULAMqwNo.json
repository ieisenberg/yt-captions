[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6500"
  },
  {
    "text": "the router is one of the most powerful",
    "start": "6500",
    "end": "8820"
  },
  {
    "text": "yet underutilized tools and angular in",
    "start": "8820",
    "end": "11460"
  },
  {
    "text": "addition to defining the URL structure",
    "start": "11460",
    "end": "13110"
  },
  {
    "text": "for your app it can also be used to",
    "start": "13110",
    "end": "15089"
  },
  {
    "text": "control performance with lazy loading",
    "start": "15089",
    "end": "16890"
  },
  {
    "text": "and help you write dry code with",
    "start": "16890",
    "end": "18810"
  },
  {
    "text": "resolvers and guards over the next few",
    "start": "18810",
    "end": "21210"
  },
  {
    "text": "minutes you'll learn the basics of the",
    "start": "21210",
    "end": "22470"
  },
  {
    "text": "angular 6 router plus a few advanced",
    "start": "22470",
    "end": "24539"
  },
  {
    "text": "techniques to preload data from firebase",
    "start": "24539",
    "end": "26849"
  },
  {
    "text": "and protect routes from unauthenticated",
    "start": "26849",
    "end": "28920"
  },
  {
    "text": "users if you're new here like and",
    "start": "28920",
    "end": "31109"
  },
  {
    "text": "subscribe and grab the full write-up",
    "start": "31109",
    "end": "32758"
  },
  {
    "text": "from angular firebase com the first",
    "start": "32759",
    "end": "35399"
  },
  {
    "start": "35000",
    "end": "204000"
  },
  {
    "text": "thing we'll do to get started is",
    "start": "35399",
    "end": "36420"
  },
  {
    "text": "generate a brand new angular 6 app with",
    "start": "36420",
    "end": "38610"
  },
  {
    "text": "the router flag that'll just give us a",
    "start": "38610",
    "end": "40800"
  },
  {
    "text": "routing module automatically the first",
    "start": "40800",
    "end": "43170"
  },
  {
    "text": "thing we'll want to look at is the",
    "start": "43170",
    "end": "44430"
  },
  {
    "text": "router outlet when you route to a",
    "start": "44430",
    "end": "46829"
  },
  {
    "text": "component it needs to be the child of",
    "start": "46829",
    "end": "48600"
  },
  {
    "text": "some other component which by default",
    "start": "48600",
    "end": "50520"
  },
  {
    "text": "will be the app component and the root",
    "start": "50520",
    "end": "52199"
  },
  {
    "text": "of the project so the outlet tells",
    "start": "52199",
    "end": "54300"
  },
  {
    "text": "angular where to render a component",
    "start": "54300",
    "end": "55949"
  },
  {
    "text": "based on the URL that the user navigates",
    "start": "55949",
    "end": "57930"
  },
  {
    "text": "to we can define our routes by going",
    "start": "57930",
    "end": "60329"
  },
  {
    "text": "into the app routing module and you'll",
    "start": "60329",
    "end": "62640"
  },
  {
    "text": "see we have an array that's typed to the",
    "start": "62640",
    "end": "64110"
  },
  {
    "text": "routes interface we can define each",
    "start": "64110",
    "end": "66630"
  },
  {
    "text": "route in our application as an object",
    "start": "66630",
    "end": "68670"
  },
  {
    "text": "which will take a couple of",
    "start": "68670",
    "end": "69960"
  },
  {
    "text": "configuration parameters the most basic",
    "start": "69960",
    "end": "72420"
  },
  {
    "text": "use case would be to give your route up",
    "start": "72420",
    "end": "74070"
  },
  {
    "text": "path and then route it to a specific",
    "start": "74070",
    "end": "76049"
  },
  {
    "text": "component that you've generated let's",
    "start": "76049",
    "end": "78479"
  },
  {
    "text": "run ng generate component and we'll call",
    "start": "78479",
    "end": "80850"
  },
  {
    "text": "this the home page now the home page we",
    "start": "80850",
    "end": "83520"
  },
  {
    "text": "could set up as the root path so we'll",
    "start": "83520",
    "end": "85950"
  },
  {
    "text": "give that a path property of an empty",
    "start": "85950",
    "end": "87720"
  },
  {
    "text": "string then set the component option to",
    "start": "87720",
    "end": "90119"
  },
  {
    "text": "the home component if we serve the app",
    "start": "90119",
    "end": "92460"
  },
  {
    "text": "we should see the home component",
    "start": "92460",
    "end": "93750"
  },
  {
    "text": "rendered at the position of that router",
    "start": "93750",
    "end": "95670"
  },
  {
    "text": "outlet then notice how other content in",
    "start": "95670",
    "end": "98400"
  },
  {
    "text": "the home component is still there such",
    "start": "98400",
    "end": "99930"
  },
  {
    "text": "as the logo and header that'd be a good",
    "start": "99930",
    "end": "101970"
  },
  {
    "text": "place to put a nav bar at a footer and",
    "start": "101970",
    "end": "103710"
  },
  {
    "text": "things that'll be present on every page",
    "start": "103710",
    "end": "105570"
  },
  {
    "text": "that's a good start but let's look at",
    "start": "105570",
    "end": "107700"
  },
  {
    "text": "how we can navigate between multiple",
    "start": "107700",
    "end": "108720"
  },
  {
    "text": "components by generating another one",
    "start": "108720",
    "end": "110759"
  },
  {
    "text": "called animals then we can import the",
    "start": "110759",
    "end": "113790"
  },
  {
    "text": "component into our router module and set",
    "start": "113790",
    "end": "115829"
  },
  {
    "text": "up another path and component property",
    "start": "115829",
    "end": "117810"
  },
  {
    "text": "for this route when setting up",
    "start": "117810",
    "end": "119759"
  },
  {
    "text": "hyperlinks in angular you don't use a",
    "start": "119759",
    "end": "121409"
  },
  {
    "text": "normal H rep attribute like you would in",
    "start": "121409",
    "end": "123420"
  },
  {
    "text": "a plain HTML page if you use a regular",
    "start": "123420",
    "end": "125909"
  },
  {
    "text": "href that'll cause your angular app to",
    "start": "125909",
    "end": "127920"
  },
  {
    "text": "completely reload whenever it's clicked",
    "start": "127920",
    "end": "129950"
  },
  {
    "text": "instead we use the router link directive",
    "start": "129950",
    "end": "132510"
  },
  {
    "text": "which tells angular to",
    "start": "132510",
    "end": "133890"
  },
  {
    "text": "treat this as an internal route then we",
    "start": "133890",
    "end": "135960"
  },
  {
    "text": "simply pass it the path that we would",
    "start": "135960",
    "end": "137700"
  },
  {
    "text": "normally route to you with a link so now",
    "start": "137700",
    "end": "140850"
  },
  {
    "text": "if we open up the app in the browser we",
    "start": "140850",
    "end": "142800"
  },
  {
    "text": "can click on this animals link and it",
    "start": "142800",
    "end": "144990"
  },
  {
    "text": "will route us to the corresponding",
    "start": "144990",
    "end": "146459"
  },
  {
    "text": "component so that takes care of your",
    "start": "146459",
    "end": "148470"
  },
  {
    "text": "most basic use case but what happens in",
    "start": "148470",
    "end": "150420"
  },
  {
    "text": "the real world",
    "start": "150420",
    "end": "150990"
  },
  {
    "text": "is generally you're pulling some",
    "start": "150990",
    "end": "152340"
  },
  {
    "text": "information from a database then route",
    "start": "152340",
    "end": "154290"
  },
  {
    "text": "to a specific ID to show more",
    "start": "154290",
    "end": "155670"
  },
  {
    "text": "information about that item and you",
    "start": "155670",
    "end": "157410"
  },
  {
    "text": "might have thousands or millions of",
    "start": "157410",
    "end": "158910"
  },
  {
    "text": "items in your database so you can't just",
    "start": "158910",
    "end": "161190"
  },
  {
    "text": "hard code all of those routes manually",
    "start": "161190",
    "end": "162870"
  },
  {
    "text": "in this next section we'll create a",
    "start": "162870",
    "end": "164640"
  },
  {
    "text": "component called animal detail and we're",
    "start": "164640",
    "end": "167070"
  },
  {
    "text": "going to make it a child route of",
    "start": "167070",
    "end": "168270"
  },
  {
    "text": "animals you can create child routes that",
    "start": "168270",
    "end": "171000"
  },
  {
    "text": "will be rendered inside of their parent",
    "start": "171000",
    "end": "172769"
  },
  {
    "text": "by adding the children property to the",
    "start": "172769",
    "end": "175080"
  },
  {
    "text": "parent route the children property",
    "start": "175080",
    "end": "177209"
  },
  {
    "text": "itself will take an array of routes so",
    "start": "177209",
    "end": "178950"
  },
  {
    "text": "we just have a classic tree structure",
    "start": "178950",
    "end": "180750"
  },
  {
    "text": "here we can define a dynamic URL",
    "start": "180750",
    "end": "183630"
  },
  {
    "text": "parameter by putting a colon in front of",
    "start": "183630",
    "end": "185850"
  },
  {
    "text": "whatever that parameter is in this case",
    "start": "185850",
    "end": "187620"
  },
  {
    "text": "we're going to be looking up animals by",
    "start": "187620",
    "end": "189239"
  },
  {
    "text": "their name in our database so we'll set",
    "start": "189239",
    "end": "191340"
  },
  {
    "text": "up colon name as that URL parameter",
    "start": "191340",
    "end": "193590"
  },
  {
    "text": "doing this means that we can navigate to",
    "start": "193590",
    "end": "195630"
  },
  {
    "text": "routes that will look like animal slash",
    "start": "195630",
    "end": "197610"
  },
  {
    "text": "elephant animal slash hard work or any",
    "start": "197610",
    "end": "200190"
  },
  {
    "text": "other dynamic property that we pass to",
    "start": "200190",
    "end": "202110"
  },
  {
    "text": "the second half of that URL segment",
    "start": "202110",
    "end": "203880"
  },
  {
    "text": "you'll notice that we're dynamically",
    "start": "203880",
    "end": "206100"
  },
  {
    "start": "204000",
    "end": "325000"
  },
  {
    "text": "generating a list of links that we're",
    "start": "206100",
    "end": "207900"
  },
  {
    "text": "pulling from firebase so let me show you",
    "start": "207900",
    "end": "209790"
  },
  {
    "text": "how I do that",
    "start": "209790",
    "end": "210630"
  },
  {
    "text": "in the parent component I have an array",
    "start": "210630",
    "end": "212820"
  },
  {
    "text": "of documents that I pulled from fire",
    "start": "212820",
    "end": "214560"
  },
  {
    "text": "store so I can loop over them",
    "start": "214560",
    "end": "216120"
  },
  {
    "text": "asynchronously with ng4 and the async",
    "start": "216120",
    "end": "219090"
  },
  {
    "text": "pipe then to build a link instead of",
    "start": "219090",
    "end": "221910"
  },
  {
    "text": "passing it a string",
    "start": "221910",
    "end": "222989"
  },
  {
    "text": "I'll put brackets around the router",
    "start": "222989",
    "end": "224340"
  },
  {
    "text": "links so we can pass it an expression",
    "start": "224340",
    "end": "225780"
  },
  {
    "text": "which in this case will be an array",
    "start": "225780",
    "end": "227459"
  },
  {
    "text": "where each item in that array represents",
    "start": "227459",
    "end": "229739"
  },
  {
    "text": "a URL segment so the first half of the",
    "start": "229739",
    "end": "232019"
  },
  {
    "text": "segment is animals and the second half",
    "start": "232019",
    "end": "234000"
  },
  {
    "text": "will be the animals name because this is",
    "start": "234000",
    "end": "237390"
  },
  {
    "text": "a parent component we'll need to tell",
    "start": "237390",
    "end": "238799"
  },
  {
    "text": "the router where to render that child",
    "start": "238799",
    "end": "240870"
  },
  {
    "text": "components which we can do with a router",
    "start": "240870",
    "end": "242640"
  },
  {
    "text": "outlet the actual data in the database",
    "start": "242640",
    "end": "244739"
  },
  {
    "text": "is just a collection of animals that",
    "start": "244739",
    "end": "246660"
  },
  {
    "text": "have a few properties on each document",
    "start": "246660",
    "end": "248730"
  },
  {
    "text": "inside the parent component we can",
    "start": "248730",
    "end": "250560"
  },
  {
    "text": "retrieve these documents with pretty",
    "start": "250560",
    "end": "252060"
  },
  {
    "text": "much just a single line of code we",
    "start": "252060",
    "end": "253709"
  },
  {
    "text": "inject firestore in the constructor and",
    "start": "253709",
    "end": "255420"
  },
  {
    "text": "then reference these documents as the",
    "start": "255420",
    "end": "257729"
  },
  {
    "text": "animals property and call value changes",
    "start": "257729",
    "end": "260609"
  },
  {
    "text": "to listen to them as a real-time",
    "start": "260609",
    "end": "262140"
  },
  {
    "text": "observable and the child the component",
    "start": "262140",
    "end": "264810"
  },
  {
    "text": "things are a little more tricky because",
    "start": "264810",
    "end": "266340"
  },
  {
    "text": "we need to also listen to",
    "start": "266340",
    "end": "267810"
  },
  {
    "text": "the change in the URL parameter to get",
    "start": "267810",
    "end": "270120"
  },
  {
    "text": "the proper animal from the database the",
    "start": "270120",
    "end": "273180"
  },
  {
    "text": "angular router provides a service called",
    "start": "273180",
    "end": "274770"
  },
  {
    "text": "activated route that allows us to listen",
    "start": "274770",
    "end": "276750"
  },
  {
    "text": "to state changes in the router and then",
    "start": "276750",
    "end": "279690"
  },
  {
    "text": "we'll also import the switch map",
    "start": "279690",
    "end": "280950"
  },
  {
    "text": "operator from rxjs the important thing",
    "start": "280950",
    "end": "283919"
  },
  {
    "text": "to understand here is that the component",
    "start": "283919",
    "end": "285630"
  },
  {
    "text": "is only initialized once when the first",
    "start": "285630",
    "end": "287760"
  },
  {
    "text": "route is navigated to any child routes",
    "start": "287760",
    "end": "290070"
  },
  {
    "text": "that are navigated to after that won't",
    "start": "290070",
    "end": "291690"
  },
  {
    "text": "be called with ng on a net so what we",
    "start": "291690",
    "end": "294660"
  },
  {
    "text": "want to do here is use activated route",
    "start": "294660",
    "end": "296610"
  },
  {
    "text": "to listen to changes in that URL",
    "start": "296610",
    "end": "298530"
  },
  {
    "text": "parameter which is the animals name",
    "start": "298530",
    "end": "300270"
  },
  {
    "text": "which we can do by calling route per a",
    "start": "300270",
    "end": "302580"
  },
  {
    "text": "map which returns an observable of the",
    "start": "302580",
    "end": "304740"
  },
  {
    "text": "route parameters then when a change",
    "start": "304740",
    "end": "306660"
  },
  {
    "text": "occurs we'll call switch map to switch",
    "start": "306660",
    "end": "308760"
  },
  {
    "text": "to an observable of the actual animal",
    "start": "308760",
    "end": "310800"
  },
  {
    "text": "data from buyer store notice how we're",
    "start": "310800",
    "end": "313169"
  },
  {
    "text": "calling params get name which matches",
    "start": "313169",
    "end": "314790"
  },
  {
    "text": "the dynamic URL segment that we said and",
    "start": "314790",
    "end": "317010"
  },
  {
    "text": "the router config so that returns the",
    "start": "317010",
    "end": "319919"
  },
  {
    "text": "actual name of the animal which we can",
    "start": "319919",
    "end": "321510"
  },
  {
    "text": "then pass on to fire store to retrieve",
    "start": "321510",
    "end": "323610"
  },
  {
    "text": "as a single document the last step is",
    "start": "323610",
    "end": "326340"
  },
  {
    "start": "325000",
    "end": "386000"
  },
  {
    "text": "just to unwrap this document in the",
    "start": "326340",
    "end": "328050"
  },
  {
    "text": "child component so we can do that with",
    "start": "328050",
    "end": "329700"
  },
  {
    "text": "ng if animal async then set that as a",
    "start": "329700",
    "end": "333479"
  },
  {
    "text": "template variable of animal and we'll",
    "start": "333479",
    "end": "335640"
  },
  {
    "text": "just show some of the properties here in",
    "start": "335640",
    "end": "337229"
  },
  {
    "text": "the components such as the name bio and",
    "start": "337229",
    "end": "339270"
  },
  {
    "text": "image and you know have a structured",
    "start": "339270",
    "end": "341250"
  },
  {
    "text": "router tree that will scale up to as",
    "start": "341250",
    "end": "342960"
  },
  {
    "text": "many documents as you have saved in the",
    "start": "342960",
    "end": "344610"
  },
  {
    "text": "database up until this point we've only",
    "start": "344610",
    "end": "347160"
  },
  {
    "text": "been using router links to navigate but",
    "start": "347160",
    "end": "349080"
  },
  {
    "text": "you can also navigate directly from",
    "start": "349080",
    "end": "350729"
  },
  {
    "text": "inside of the components type script",
    "start": "350729",
    "end": "352260"
  },
  {
    "text": "there are many cases where you just",
    "start": "352260",
    "end": "353940"
  },
  {
    "text": "can't use a link click to navigate to a",
    "start": "353940",
    "end": "356130"
  },
  {
    "text": "page and you want to do it in a more",
    "start": "356130",
    "end": "357419"
  },
  {
    "text": "dynamic way maybe you have some really",
    "start": "357419",
    "end": "359310"
  },
  {
    "text": "ugly animals in your database and you",
    "start": "359310",
    "end": "361080"
  },
  {
    "text": "want to prompt the user to say yes",
    "start": "361080",
    "end": "362520"
  },
  {
    "text": "before navigating in this case we will",
    "start": "362520",
    "end": "364979"
  },
  {
    "text": "import the router directly into our",
    "start": "364979",
    "end": "366419"
  },
  {
    "text": "component will set up a click handler",
    "start": "366419",
    "end": "368460"
  },
  {
    "text": "here that will first prompt the user to",
    "start": "368460",
    "end": "371039"
  },
  {
    "text": "confirm that they want to navigate to",
    "start": "371039",
    "end": "372330"
  },
  {
    "text": "this page and then if they type in yes",
    "start": "372330",
    "end": "374190"
  },
  {
    "text": "we'll go ahead and navigate to that page",
    "start": "374190",
    "end": "375900"
  },
  {
    "text": "manually with the router you can say",
    "start": "375900",
    "end": "378539"
  },
  {
    "text": "router navigate and have it go to the",
    "start": "378539",
    "end": "380789"
  },
  {
    "text": "array of URL segments that you point it",
    "start": "380789",
    "end": "382710"
  },
  {
    "text": "to back in the HTML we can go ahead and",
    "start": "382710",
    "end": "385560"
  },
  {
    "text": "remove the router link and replace it",
    "start": "385560",
    "end": "387900"
  },
  {
    "start": "386000",
    "end": "466000"
  },
  {
    "text": "with the click event that will run our",
    "start": "387900",
    "end": "389789"
  },
  {
    "text": "click handler whenever it's clicked so",
    "start": "389789",
    "end": "392280"
  },
  {
    "text": "the key takeaway here is that you can",
    "start": "392280",
    "end": "393600"
  },
  {
    "text": "navigate anywhere in your angular code",
    "start": "393600",
    "end": "395340"
  },
  {
    "text": "outside of the scope of a regular",
    "start": "395340",
    "end": "396930"
  },
  {
    "text": "hyperlink now I want to go ahead and",
    "start": "396930",
    "end": "398789"
  },
  {
    "text": "switch gears and show you a couple",
    "start": "398789",
    "end": "400169"
  },
  {
    "text": "things that are just super useful to do",
    "start": "400169",
    "end": "401720"
  },
  {
    "text": "with the router let's say you want to",
    "start": "401720",
    "end": "403670"
  },
  {
    "text": "create a catch-all route that will serve",
    "start": "403670",
    "end": "405350"
  },
  {
    "text": "more or less as a 404 page if the user",
    "start": "405350",
    "end": "407810"
  },
  {
    "text": "routes to a component that doesn't exist",
    "start": "407810",
    "end": "409700"
  },
  {
    "text": "we can generate a new component to show",
    "start": "409700",
    "end": "411680"
  },
  {
    "text": "the content and then we'll say path star",
    "start": "411680",
    "end": "414170"
  },
  {
    "text": "star as a wild-card and you want to make",
    "start": "414170",
    "end": "416360"
  },
  {
    "text": "sure that this route is the very last",
    "start": "416360",
    "end": "417890"
  },
  {
    "text": "route in your treaty then if we go and",
    "start": "417890",
    "end": "420050"
  },
  {
    "text": "type in some random URL into the browser",
    "start": "420050",
    "end": "421850"
  },
  {
    "text": "it's going to pull up our error",
    "start": "421850",
    "end": "423440"
  },
  {
    "text": "component instead of just throwing a",
    "start": "423440",
    "end": "425000"
  },
  {
    "text": "regular error to the end user then",
    "start": "425000",
    "end": "427820"
  },
  {
    "text": "another very common thing you might want",
    "start": "427820",
    "end": "429170"
  },
  {
    "text": "to do is instead of routing to a",
    "start": "429170",
    "end": "430730"
  },
  {
    "text": "component you might just want to",
    "start": "430730",
    "end": "432080"
  },
  {
    "text": "redirect to a different route so let's",
    "start": "432080",
    "end": "434180"
  },
  {
    "text": "say we have a common misspelling for",
    "start": "434180",
    "end": "435680"
  },
  {
    "text": "animals we can just redirect to the main",
    "start": "435680",
    "end": "437780"
  },
  {
    "text": "animal's route when you set up a",
    "start": "437780",
    "end": "439940"
  },
  {
    "text": "redirect route you'll have to also add",
    "start": "439940",
    "end": "441470"
  },
  {
    "text": "in the path match option otherwise",
    "start": "441470",
    "end": "443420"
  },
  {
    "text": "angular will throw an error if we go and",
    "start": "443420",
    "end": "446180"
  },
  {
    "text": "navigate to this route in the browser",
    "start": "446180",
    "end": "447290"
  },
  {
    "text": "you'll see it redirects us to the",
    "start": "447290",
    "end": "449180"
  },
  {
    "text": "animals component instead of bringing up",
    "start": "449180",
    "end": "451190"
  },
  {
    "text": "the error component that we just created",
    "start": "451190",
    "end": "453010"
  },
  {
    "text": "another cool thing you can do is use the",
    "start": "453010",
    "end": "455540"
  },
  {
    "text": "router link active directive to provide",
    "start": "455540",
    "end": "457880"
  },
  {
    "text": "a CSS class whenever a certain route is",
    "start": "457880",
    "end": "460280"
  },
  {
    "text": "active this makes it really easy to",
    "start": "460280",
    "end": "462380"
  },
  {
    "text": "build out UI features that show the user",
    "start": "462380",
    "end": "464600"
  },
  {
    "text": "which link they're currently on it",
    "start": "464600",
    "end": "466850"
  },
  {
    "start": "466000",
    "end": "590000"
  },
  {
    "text": "expects a list of CSS classes on the",
    "start": "466850",
    "end": "469100"
  },
  {
    "text": "right-hand side so we'll define an",
    "start": "469100",
    "end": "470930"
  },
  {
    "text": "active CSS class that will make the font",
    "start": "470930",
    "end": "473419"
  },
  {
    "text": "bold and a different color now you can",
    "start": "473419",
    "end": "475850"
  },
  {
    "text": "see we get a clear UI change every time",
    "start": "475850",
    "end": "477740"
  },
  {
    "text": "we go to a different link for the next",
    "start": "477740",
    "end": "479720"
  },
  {
    "text": "few minutes I want to move a little",
    "start": "479720",
    "end": "480800"
  },
  {
    "text": "beyond the basics and talk about guards",
    "start": "480800",
    "end": "482780"
  },
  {
    "text": "to protect routes create reusable code",
    "start": "482780",
    "end": "485090"
  },
  {
    "text": "and preload data into your components a",
    "start": "485090",
    "end": "487370"
  },
  {
    "text": "guard is just an angular service that",
    "start": "487370",
    "end": "489830"
  },
  {
    "text": "has some special interfaces that we can",
    "start": "489830",
    "end": "491600"
  },
  {
    "text": "implement to do things with the router",
    "start": "491600",
    "end": "493310"
  },
  {
    "text": "one of the most common use cases is to",
    "start": "493310",
    "end": "495560"
  },
  {
    "text": "protect routes from unauthorized users",
    "start": "495560",
    "end": "497750"
  },
  {
    "text": "let's go ahead and run ng generate guard",
    "start": "497750",
    "end": "500330"
  },
  {
    "text": "admin that will protect our routes from",
    "start": "500330",
    "end": "502850"
  },
  {
    "text": "any non admin users the special",
    "start": "502850",
    "end": "506540"
  },
  {
    "text": "interface we'll be using here is can",
    "start": "506540",
    "end": "508340"
  },
  {
    "text": "activate which will only activate this",
    "start": "508340",
    "end": "510500"
  },
  {
    "text": "route if that guard results to true",
    "start": "510500",
    "end": "512830"
  },
  {
    "text": "let's go ahead and lock down our animals",
    "start": "512830",
    "end": "515240"
  },
  {
    "text": "route by adding the can activate",
    "start": "515240",
    "end": "516979"
  },
  {
    "text": "property with the admin guard if we go",
    "start": "516979",
    "end": "520099"
  },
  {
    "text": "into the guard itself you'll see it it",
    "start": "520099",
    "end": "521419"
  },
  {
    "text": "is decorated with injectable just like",
    "start": "521419",
    "end": "523280"
  },
  {
    "text": "any other angular service the only",
    "start": "523280",
    "end": "525080"
  },
  {
    "text": "special thing is that has this can",
    "start": "525080",
    "end": "526460"
  },
  {
    "text": "activate interface that gives us some",
    "start": "526460",
    "end": "528290"
  },
  {
    "text": "information about the state at the route",
    "start": "528290",
    "end": "529880"
  },
  {
    "text": "in order for the guard to work we just",
    "start": "529880",
    "end": "532280"
  },
  {
    "text": "need to return a boolean which can be a",
    "start": "532280",
    "end": "534470"
  },
  {
    "text": "primitive work",
    "start": "534470",
    "end": "535490"
  },
  {
    "text": "being observable or promised it's an",
    "start": "535490",
    "end": "537320"
  },
  {
    "text": "observable it's going to automatically",
    "start": "537320",
    "end": "539120"
  },
  {
    "text": "subscribe for you so we'll go ahead and",
    "start": "539120",
    "end": "541670"
  },
  {
    "text": "send an alert that says only admins",
    "start": "541670",
    "end": "543440"
  },
  {
    "text": "allowed and then we'll return false to",
    "start": "543440",
    "end": "545480"
  },
  {
    "text": "block access to this route if we try to",
    "start": "545480",
    "end": "547670"
  },
  {
    "text": "navigate to the animals page you can see",
    "start": "547670",
    "end": "549380"
  },
  {
    "text": "we get this alert and the component is",
    "start": "549380",
    "end": "551149"
  },
  {
    "text": "never rendered but more often than not",
    "start": "551149",
    "end": "553820"
  },
  {
    "text": "you'll need to do this a synchronously",
    "start": "553820",
    "end": "555440"
  },
  {
    "text": "by checking with some API if this user",
    "start": "555440",
    "end": "557779"
  },
  {
    "text": "has authorization we can simulate this",
    "start": "557779",
    "end": "560209"
  },
  {
    "text": "by setting up a timer of 1000",
    "start": "560209",
    "end": "562370"
  },
  {
    "text": "milliseconds then we'll need to map the",
    "start": "562370",
    "end": "564320"
  },
  {
    "text": "emitted value down to a boolean then we",
    "start": "564320",
    "end": "567200"
  },
  {
    "text": "can also use the tap operator to show an",
    "start": "567200",
    "end": "569089"
  },
  {
    "text": "alert or this is a good place to",
    "start": "569089",
    "end": "570500"
  },
  {
    "text": "navigate to a login page or something",
    "start": "570500",
    "end": "572899"
  },
  {
    "text": "along those lines if we try to navigate",
    "start": "572899",
    "end": "575959"
  },
  {
    "text": "to the page at this time you'll see we",
    "start": "575959",
    "end": "577399"
  },
  {
    "text": "get a one-second delay and then it",
    "start": "577399",
    "end": "579260"
  },
  {
    "text": "finally blocks the route after this",
    "start": "579260",
    "end": "580790"
  },
  {
    "text": "observable is resolved",
    "start": "580790",
    "end": "582080"
  },
  {
    "text": "can activate is a very powerful",
    "start": "582080",
    "end": "583940"
  },
  {
    "text": "interface at your disposal but there's",
    "start": "583940",
    "end": "585890"
  },
  {
    "text": "also another one called resolve that can",
    "start": "585890",
    "end": "587930"
  },
  {
    "text": "preload data into your route do you",
    "start": "587930",
    "end": "590899"
  },
  {
    "start": "590000",
    "end": "706000"
  },
  {
    "text": "remember earlier how in the animal",
    "start": "590899",
    "end": "592430"
  },
  {
    "text": "detail component we listen to the name",
    "start": "592430",
    "end": "594320"
  },
  {
    "text": "parameter and then switch map to a",
    "start": "594320",
    "end": "596060"
  },
  {
    "text": "different observable well maybe there's",
    "start": "596060",
    "end": "597950"
  },
  {
    "text": "a better way we can do this imagine we",
    "start": "597950",
    "end": "599839"
  },
  {
    "text": "wanted to preload this data on multiple",
    "start": "599839",
    "end": "601730"
  },
  {
    "text": "different components we would have to",
    "start": "601730",
    "end": "603050"
  },
  {
    "text": "write this code for each one of them",
    "start": "603050",
    "end": "604810"
  },
  {
    "text": "instead of repeating ourselves let's",
    "start": "604810",
    "end": "607070"
  },
  {
    "text": "generate a guard called preload instead",
    "start": "607070",
    "end": "609470"
  },
  {
    "text": "of using they can activate interface",
    "start": "609470",
    "end": "610940"
  },
  {
    "text": "will use the resolve interface and you",
    "start": "610940",
    "end": "613040"
  },
  {
    "text": "could strong type this as well but for",
    "start": "613040",
    "end": "614779"
  },
  {
    "text": "now we'll just use any then we'll change",
    "start": "614779",
    "end": "617209"
  },
  {
    "text": "the method name to resolve and it's",
    "start": "617209",
    "end": "618980"
  },
  {
    "text": "pretty similar to can't activate but",
    "start": "618980",
    "end": "620420"
  },
  {
    "text": "instead will return the actual data that",
    "start": "620420",
    "end": "622430"
  },
  {
    "text": "we want to be available when this route",
    "start": "622430",
    "end": "624290"
  },
  {
    "text": "is navigated to and commonly that's",
    "start": "624290",
    "end": "626870"
  },
  {
    "text": "going to be an observable form because",
    "start": "626870",
    "end": "628399"
  },
  {
    "text": "you're probably pulling this data from",
    "start": "628399",
    "end": "629779"
  },
  {
    "text": "some external API in our case we'll do",
    "start": "629779",
    "end": "632810"
  },
  {
    "text": "it with angular firestorm so we can",
    "start": "632810",
    "end": "634730"
  },
  {
    "text": "inject that in the constructor then the",
    "start": "634730",
    "end": "637100"
  },
  {
    "text": "guard will have the actual parameter",
    "start": "637100",
    "end": "638839"
  },
  {
    "text": "name available as a plain object which",
    "start": "638839",
    "end": "641600"
  },
  {
    "text": "we can retrieve with next parameter in",
    "start": "641600",
    "end": "646100"
  },
  {
    "text": "the data as an observable but we have to",
    "start": "646100",
    "end": "648110"
  },
  {
    "text": "pipe in the first operator because",
    "start": "648110",
    "end": "649760"
  },
  {
    "text": "firebase returns real time stream and we",
    "start": "649760",
    "end": "651980"
  },
  {
    "text": "need this observable to complete in",
    "start": "651980",
    "end": "653660"
  },
  {
    "text": "order for it to work properly",
    "start": "653660",
    "end": "655520"
  },
  {
    "text": "now we can just comment out all of our",
    "start": "655520",
    "end": "657380"
  },
  {
    "text": "previous code and instead we'll just",
    "start": "657380",
    "end": "659300"
  },
  {
    "text": "define the animal as the data that is",
    "start": "659300",
    "end": "661399"
  },
  {
    "text": "now available on this route when it's",
    "start": "661399",
    "end": "663230"
  },
  {
    "text": "navigated to it's now available on the",
    "start": "663230",
    "end": "665420"
  },
  {
    "text": "route data property and then we can",
    "start": "665420",
    "end": "667370"
  },
  {
    "text": "apply it to this route by going back to",
    "start": "667370",
    "end": "668779"
  },
  {
    "text": "our router config then add the result",
    "start": "668779",
    "end": "671089"
  },
  {
    "text": "property to our preload guard if we open",
    "start": "671089",
    "end": "674240"
  },
  {
    "text": "up the app it's going to work in exactly",
    "start": "674240",
    "end": "675440"
  },
  {
    "text": "the same way as it did before but now",
    "start": "675440",
    "end": "677600"
  },
  {
    "text": "we've isolated this code in a reusable",
    "start": "677600",
    "end": "679279"
  },
  {
    "text": "way that we can apply to multiple routes",
    "start": "679279",
    "end": "681470"
  },
  {
    "text": "as needed hopefully that gives you a",
    "start": "681470",
    "end": "683240"
  },
  {
    "text": "basic idea about how powerful the",
    "start": "683240",
    "end": "684920"
  },
  {
    "text": "angular router can be I'm gonna go ahead",
    "start": "684920",
    "end": "686570"
  },
  {
    "text": "and wrap things up there if this video",
    "start": "686570",
    "end": "688220"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "688220",
    "end": "689899"
  },
  {
    "text": "if you really want to master the basics",
    "start": "689899",
    "end": "691220"
  },
  {
    "text": "of angular consider becoming a pro",
    "start": "691220",
    "end": "693290"
  },
  {
    "text": "member at angular firebase comm you'll",
    "start": "693290",
    "end": "695510"
  },
  {
    "text": "get access to a whole bunch of exclusive",
    "start": "695510",
    "end": "697130"
  },
  {
    "text": "content designed to help you build and",
    "start": "697130",
    "end": "698720"
  },
  {
    "text": "ship your app faster thanks for watching",
    "start": "698720",
    "end": "700880"
  },
  {
    "text": "and I'll talk to you soon",
    "start": "700880",
    "end": "704020"
  }
]