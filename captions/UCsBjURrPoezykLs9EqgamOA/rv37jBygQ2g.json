[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "a few weeks ago I showed you how to use",
    "start": "0",
    "end": "1650"
  },
  {
    "text": "ng rx entity adapt Paris today I'm going",
    "start": "1650",
    "end": "4380"
  },
  {
    "text": "to build on this concept and show you",
    "start": "4380",
    "end": "6299"
  },
  {
    "text": "how to use fire store as a persistent",
    "start": "6299",
    "end": "8099"
  },
  {
    "text": "back-end data source you might be aware",
    "start": "8099",
    "end": "10500"
  },
  {
    "text": "that angular fire version 5 has a new",
    "start": "10500",
    "end": "12480"
  },
  {
    "text": "state changes method which we're going",
    "start": "12480",
    "end": "14340"
  },
  {
    "text": "to take advantage of in this episode it",
    "start": "14340",
    "end": "16379"
  },
  {
    "text": "makes it possible to keep track of when",
    "start": "16379",
    "end": "17970"
  },
  {
    "text": "documents are added modified or removed",
    "start": "17970",
    "end": "20580"
  },
  {
    "text": "if you want an example of how this might",
    "start": "20580",
    "end": "22199"
  },
  {
    "text": "be used look no further than the",
    "start": "22199",
    "end": "23640"
  },
  {
    "text": "firebase console itself if we add a new",
    "start": "23640",
    "end": "25680"
  },
  {
    "text": "value to the database you'll see it",
    "start": "25680",
    "end": "27180"
  },
  {
    "text": "flashes green first one second and the",
    "start": "27180",
    "end": "29369"
  },
  {
    "text": "document itself is modified so it",
    "start": "29369",
    "end": "30929"
  },
  {
    "text": "flashes orange if we remove the property",
    "start": "30929",
    "end": "33300"
  },
  {
    "text": "then it flashes red the fire store web",
    "start": "33300",
    "end": "36090"
  },
  {
    "text": "console happens to be built with ng rx",
    "start": "36090",
    "end": "38129"
  },
  {
    "text": "which I learned by watching angular air",
    "start": "38129",
    "end": "39989"
  },
  {
    "text": "episode 135 so make sure to check that",
    "start": "39989",
    "end": "42149"
  },
  {
    "text": "out as well if you're new here click the",
    "start": "42149",
    "end": "44309"
  },
  {
    "text": "subscribe button and follow along with",
    "start": "44309",
    "end": "45930"
  },
  {
    "text": "the source code at angular firebase comm",
    "start": "45930",
    "end": "48860"
  },
  {
    "text": "to get started I'm going to first show",
    "start": "48860",
    "end": "51090"
  },
  {
    "start": "50000",
    "end": "126000"
  },
  {
    "text": "you how we have this app setup based on",
    "start": "51090",
    "end": "52949"
  },
  {
    "text": "the previous video starting with the app",
    "start": "52949",
    "end": "55050"
  },
  {
    "text": "module the main change we made is we",
    "start": "55050",
    "end": "57329"
  },
  {
    "text": "installed angularfire 2 along with",
    "start": "57329",
    "end": "59340"
  },
  {
    "text": "firestorm I'm also including the ng RX",
    "start": "59340",
    "end": "62370"
  },
  {
    "text": "effects module and in the root just",
    "start": "62370",
    "end": "64799"
  },
  {
    "text": "passing it an empty array if you're lost",
    "start": "64799",
    "end": "67380"
  },
  {
    "text": "at this point make sure to go back and",
    "start": "67380",
    "end": "68760"
  },
  {
    "text": "watch the ng RX entity video from there",
    "start": "68760",
    "end": "71939"
  },
  {
    "text": "I'm going to go into our pizza feature",
    "start": "71939",
    "end": "74040"
  },
  {
    "text": "module and I have a new file called",
    "start": "74040",
    "end": "76500"
  },
  {
    "text": "pizza effects that we're going to create",
    "start": "76500",
    "end": "78090"
  },
  {
    "text": "later we also import the effects module",
    "start": "78090",
    "end": "80430"
  },
  {
    "text": "here but call for feature and pass it",
    "start": "80430",
    "end": "82740"
  },
  {
    "text": "the pizza effects file the actual app",
    "start": "82740",
    "end": "85680"
  },
  {
    "text": "we're building is just a collection of",
    "start": "85680",
    "end": "87299"
  },
  {
    "text": "pizzas and the user has the ability to",
    "start": "87299",
    "end": "89189"
  },
  {
    "text": "asynchronously update them from a status",
    "start": "89189",
    "end": "91770"
  },
  {
    "text": "of cooking to delivered the thing that's",
    "start": "91770",
    "end": "94470"
  },
  {
    "text": "interesting is that this app is going to",
    "start": "94470",
    "end": "96630"
  },
  {
    "text": "listen for the state changes coming from",
    "start": "96630",
    "end": "98579"
  },
  {
    "text": "angularfire 2 and then use entity",
    "start": "98579",
    "end": "100740"
  },
  {
    "text": "adapters to update the local data store",
    "start": "100740",
    "end": "103229"
  },
  {
    "text": "currently I've queried all the pizzas",
    "start": "103229",
    "end": "105149"
  },
  {
    "text": "that have a status of cooking so if the",
    "start": "105149",
    "end": "107490"
  },
  {
    "text": "status changes from anything other than",
    "start": "107490",
    "end": "109079"
  },
  {
    "text": "cooking it should be removed from our",
    "start": "109079",
    "end": "110670"
  },
  {
    "text": "local data store if we update the status",
    "start": "110670",
    "end": "113250"
  },
  {
    "text": "from cooking to delivered you'll see",
    "start": "113250",
    "end": "114869"
  },
  {
    "text": "that it gets removed from the local data",
    "start": "114869",
    "end": "116250"
  },
  {
    "text": "store and that action is triggered here",
    "start": "116250",
    "end": "118140"
  },
  {
    "text": "and redux dev tools the key takeaway",
    "start": "118140",
    "end": "120540"
  },
  {
    "text": "here is that you'll always know how your",
    "start": "120540",
    "end": "122100"
  },
  {
    "text": "data is changing relative to the way you",
    "start": "122100",
    "end": "123930"
  },
  {
    "text": "queried it from firestore let's go ahead",
    "start": "123930",
    "end": "126810"
  },
  {
    "start": "126000",
    "end": "207000"
  },
  {
    "text": "and setup the ng RX actions that make",
    "start": "126810",
    "end": "129030"
  },
  {
    "text": "this possible",
    "start": "129030",
    "end": "129869"
  },
  {
    "text": "the first action is query eventually",
    "start": "129869",
    "end": "132330"
  },
  {
    "text": "it's going to make a query to Phi",
    "start": "132330",
    "end": "133819"
  },
  {
    "text": "store and listen to any changes that",
    "start": "133819",
    "end": "136010"
  },
  {
    "text": "happen to that data and from there we're",
    "start": "136010",
    "end": "138560"
  },
  {
    "text": "going to set up added modified and",
    "start": "138560",
    "end": "140359"
  },
  {
    "text": "removed it's important that you keep",
    "start": "140359",
    "end": "141920"
  },
  {
    "text": "these names consistent because they're",
    "start": "141920",
    "end": "143450"
  },
  {
    "text": "returned to us from angularfire - I also",
    "start": "143450",
    "end": "146810"
  },
  {
    "text": "want to show you how to update data on a",
    "start": "146810",
    "end": "148400"
  },
  {
    "text": "fire store document so we'll set up",
    "start": "148400",
    "end": "150439"
  },
  {
    "text": "actions for update and success each of",
    "start": "150439",
    "end": "154159"
  },
  {
    "text": "these actions will have a class that",
    "start": "154159",
    "end": "155750"
  },
  {
    "text": "implements the action interface and has",
    "start": "155750",
    "end": "158060"
  },
  {
    "text": "a custom payload that we defined in the",
    "start": "158060",
    "end": "159709"
  },
  {
    "text": "constructor the query action doesn't",
    "start": "159709",
    "end": "161810"
  },
  {
    "text": "need a payload but the added action will",
    "start": "161810",
    "end": "164329"
  },
  {
    "text": "return an individual Pizza object so we",
    "start": "164329",
    "end": "166760"
  },
  {
    "text": "can type that to our pizza interface",
    "start": "166760",
    "end": "168579"
  },
  {
    "text": "then modified and removed we'll also",
    "start": "168579",
    "end": "171739"
  },
  {
    "text": "follow the same exact pattern they",
    "start": "171739",
    "end": "173569"
  },
  {
    "text": "simply create a payload of a pizza",
    "start": "173569",
    "end": "175519"
  },
  {
    "text": "object the update action is a little",
    "start": "175519",
    "end": "177769"
  },
  {
    "text": "more interesting it's going to take an",
    "start": "177769",
    "end": "179959"
  },
  {
    "text": "entity ID as well as a partial piece of",
    "start": "179959",
    "end": "182659"
  },
  {
    "text": "data that we want to update on the",
    "start": "182659",
    "end": "184280"
  },
  {
    "text": "interface normally typescript wouldn't",
    "start": "184280",
    "end": "186379"
  },
  {
    "text": "let us do this but we can use the",
    "start": "186379",
    "end": "187819"
  },
  {
    "text": "partial type with our Pizza interface to",
    "start": "187819",
    "end": "190370"
  },
  {
    "text": "update individual properties on the",
    "start": "190370",
    "end": "192199"
  },
  {
    "text": "object the success action is only used",
    "start": "192199",
    "end": "195019"
  },
  {
    "text": "to show us when a successful update",
    "start": "195019",
    "end": "197060"
  },
  {
    "text": "operation has been completed so there's",
    "start": "197060",
    "end": "199280"
  },
  {
    "text": "no need to add a payload to it then the",
    "start": "199280",
    "end": "202280"
  },
  {
    "text": "final step is to export all these",
    "start": "202280",
    "end": "204199"
  },
  {
    "text": "actions as a single type now we're going",
    "start": "204199",
    "end": "207889"
  },
  {
    "start": "207000",
    "end": "521000"
  },
  {
    "text": "to jump into the reducer and I'll go",
    "start": "207889",
    "end": "209479"
  },
  {
    "text": "through the whole thing from top to",
    "start": "209479",
    "end": "210739"
  },
  {
    "text": "bottom so first we're gonna import the",
    "start": "210739",
    "end": "213169"
  },
  {
    "text": "actions we just created as well as a few",
    "start": "213169",
    "end": "215180"
  },
  {
    "text": "things here from ng rx then we'll define",
    "start": "215180",
    "end": "217939"
  },
  {
    "text": "our pizza interface which just has an ID",
    "start": "217939",
    "end": "220459"
  },
  {
    "text": "a size and a status which can either be",
    "start": "220459",
    "end": "223250"
  },
  {
    "text": "cooking or delivered then we can use",
    "start": "223250",
    "end": "226699"
  },
  {
    "text": "this interface to initialize our adaptor",
    "start": "226699",
    "end": "228680"
  },
  {
    "text": "this will give us access to a bunch of",
    "start": "228680",
    "end": "230180"
  },
  {
    "text": "helper methods to update the state",
    "start": "230180",
    "end": "231799"
  },
  {
    "text": "consistently from there we use entity",
    "start": "231799",
    "end": "234139"
  },
  {
    "text": "state to extend the main state interface",
    "start": "234139",
    "end": "236540"
  },
  {
    "text": "this ensures that our data conforms to a",
    "start": "236540",
    "end": "238669"
  },
  {
    "text": "specific format for entity and if you",
    "start": "238669",
    "end": "241189"
  },
  {
    "text": "have some initial data you want to set",
    "start": "241189",
    "end": "242509"
  },
  {
    "text": "as the initial state you would do that",
    "start": "242509",
    "end": "244009"
  },
  {
    "text": "here but for now I'm just going to leave",
    "start": "244009",
    "end": "245870"
  },
  {
    "text": "it blank now we're ready to build the",
    "start": "245870",
    "end": "249259"
  },
  {
    "text": "reducer function it takes the old state",
    "start": "249259",
    "end": "251870"
  },
  {
    "text": "as well as the action that's being",
    "start": "251870",
    "end": "253489"
  },
  {
    "text": "dispatched which will be one of our",
    "start": "253489",
    "end": "255199"
  },
  {
    "text": "pizza actions and then we'll set up the",
    "start": "255199",
    "end": "257570"
  },
  {
    "text": "switch statement here and the first one",
    "start": "257570",
    "end": "259459"
  },
  {
    "text": "we'll look for is added so whenever we",
    "start": "259459",
    "end": "261709"
  },
  {
    "text": "get a new item that's added we're going",
    "start": "261709",
    "end": "263300"
  },
  {
    "text": "to add one pizza to the state that will",
    "start": "263300",
    "end": "266210"
  },
  {
    "text": "add one new pizza to the stay",
    "start": "266210",
    "end": "267770"
  },
  {
    "text": "and keep track of its ID and everything",
    "start": "267770",
    "end": "269180"
  },
  {
    "text": "automatically for modified will call",
    "start": "269180",
    "end": "272210"
  },
  {
    "text": "update 1 then pass it the entity ID as",
    "start": "272210",
    "end": "275330"
  },
  {
    "text": "well as that changes that we want to",
    "start": "275330",
    "end": "276740"
  },
  {
    "text": "make then the same basic idea for",
    "start": "276740",
    "end": "279050"
  },
  {
    "text": "removed but this time we'll call remove",
    "start": "279050",
    "end": "281240"
  },
  {
    "text": "1 and it takes the ID as the argument",
    "start": "281240",
    "end": "284319"
  },
  {
    "text": "with just these three actions in the",
    "start": "284319",
    "end": "286550"
  },
  {
    "text": "reducer we can throw around all kinds of",
    "start": "286550",
    "end": "288289"
  },
  {
    "text": "different asynchronous events while",
    "start": "288289",
    "end": "290030"
  },
  {
    "text": "providing a ton of feedback about our",
    "start": "290030",
    "end": "291560"
  },
  {
    "text": "local data store that last step is to",
    "start": "291560",
    "end": "294349"
  },
  {
    "text": "create the selectors that allow us to",
    "start": "294349",
    "end": "296300"
  },
  {
    "text": "slice various pieces of the state that's",
    "start": "296300",
    "end": "298849"
  },
  {
    "text": "done by calling create feature selector",
    "start": "298849",
    "end": "300710"
  },
  {
    "text": "and then ng our X gives us a bunch of",
    "start": "300710",
    "end": "303349"
  },
  {
    "text": "built-in helper methods or you can",
    "start": "303349",
    "end": "305090"
  },
  {
    "text": "create your own to slice different",
    "start": "305090",
    "end": "306860"
  },
  {
    "text": "pieces of the state in this demo we're",
    "start": "306860",
    "end": "309110"
  },
  {
    "text": "only going to be using and select all",
    "start": "309110",
    "end": "311050"
  },
  {
    "text": "now we're ready to build the ng rx",
    "start": "311050",
    "end": "313759"
  },
  {
    "text": "effect the effect will allow us to",
    "start": "313759",
    "end": "316009"
  },
  {
    "text": "isolate asynchronous events so we don't",
    "start": "316009",
    "end": "318169"
  },
  {
    "text": "have to actually trigger those events",
    "start": "318169",
    "end": "319699"
  },
  {
    "text": "from inside a component in other words",
    "start": "319699",
    "end": "321710"
  },
  {
    "text": "component should only dispatch events",
    "start": "321710",
    "end": "323690"
  },
  {
    "text": "and select parts of the store they",
    "start": "323690",
    "end": "325460"
  },
  {
    "text": "shouldn't cause any asynchronous side",
    "start": "325460",
    "end": "326930"
  },
  {
    "text": "effects on their own we're also going to",
    "start": "326930",
    "end": "329090"
  },
  {
    "text": "be using the new ledyba operators from",
    "start": "329090",
    "end": "330860"
  },
  {
    "text": "rxjs five point five so that imports",
    "start": "330860",
    "end": "333740"
  },
  {
    "text": "syntax is slightly different as you see",
    "start": "333740",
    "end": "335630"
  },
  {
    "text": "here the first thing I'm going to do is",
    "start": "335630",
    "end": "337970"
  },
  {
    "text": "inject the actions as well as the",
    "start": "337970",
    "end": "339919"
  },
  {
    "text": "angularfire store library in the",
    "start": "339919",
    "end": "342110"
  },
  {
    "text": "constructor the most important effect",
    "start": "342110",
    "end": "344330"
  },
  {
    "text": "here is query and that's going to make",
    "start": "344330",
    "end": "346400"
  },
  {
    "text": "the query to fire store for collection",
    "start": "346400",
    "end": "348440"
  },
  {
    "text": "and handle the added modified removed",
    "start": "348440",
    "end": "350750"
  },
  {
    "text": "events that come from that collection so",
    "start": "350750",
    "end": "352669"
  },
  {
    "text": "first we call actions of type with the",
    "start": "352669",
    "end": "355580"
  },
  {
    "text": "query action that returns in observable",
    "start": "355580",
    "end": "358460"
  },
  {
    "text": "so we can pipe multiple rxjs operators",
    "start": "358460",
    "end": "361099"
  },
  {
    "text": "here which will make our code more",
    "start": "361099",
    "end": "362330"
  },
  {
    "text": "readable than it has been in previous",
    "start": "362330",
    "end": "363770"
  },
  {
    "text": "tutorials that i've shown you about ng",
    "start": "363770",
    "end": "365990"
  },
  {
    "text": "RX effects the next step is to make a",
    "start": "365990",
    "end": "368599"
  },
  {
    "text": "query to fire store so we do that by",
    "start": "368599",
    "end": "370550"
  },
  {
    "text": "calling angular fire store collection",
    "start": "370550",
    "end": "372349"
  },
  {
    "text": "and then we're going to only query the",
    "start": "372349",
    "end": "375259"
  },
  {
    "text": "pizzas that have a status of cooking",
    "start": "375259",
    "end": "377300"
  },
  {
    "text": "then to get an ng rx friendly observable",
    "start": "377300",
    "end": "380419"
  },
  {
    "text": "from fire store we call state changes",
    "start": "380419",
    "end": "382490"
  },
  {
    "text": "that returns an array of actions so",
    "start": "382490",
    "end": "384919"
  },
  {
    "text": "we'll map that down to each individual",
    "start": "384919",
    "end": "386780"
  },
  {
    "text": "action by calling merge map then we can",
    "start": "386780",
    "end": "389210"
  },
  {
    "text": "dispatch the correct action based on",
    "start": "389210",
    "end": "391430"
  },
  {
    "text": "what's returned from fire store so we'll",
    "start": "391430",
    "end": "393770"
  },
  {
    "text": "call pizza with the action type which",
    "start": "393770",
    "end": "395810"
  },
  {
    "text": "will be added modified or removed and",
    "start": "395810",
    "end": "397610"
  },
  {
    "text": "then the payload will be the actual data",
    "start": "397610",
    "end": "399979"
  },
  {
    "text": "that we update on the",
    "start": "399979",
    "end": "401300"
  },
  {
    "text": "cool store we want both the data and the",
    "start": "401300",
    "end": "404060"
  },
  {
    "text": "document ID so we can map those together",
    "start": "404060",
    "end": "405740"
  },
  {
    "text": "here in the object that's all there is",
    "start": "405740",
    "end": "408470"
  },
  {
    "text": "to it your local data store will now",
    "start": "408470",
    "end": "410240"
  },
  {
    "text": "stay in sync with the data in firebase",
    "start": "410240",
    "end": "412129"
  },
  {
    "text": "and you'll have a lot of flexibility for",
    "start": "412129",
    "end": "414620"
  },
  {
    "text": "managing those changes but we're not",
    "start": "414620",
    "end": "416900"
  },
  {
    "text": "quite done yet",
    "start": "416900",
    "end": "417470"
  },
  {
    "text": "I still want to set up one more effect",
    "start": "417470",
    "end": "418940"
  },
  {
    "text": "so the user can manually update data in",
    "start": "418940",
    "end": "421250"
  },
  {
    "text": "fire store this time we're going to",
    "start": "421250",
    "end": "423800"
  },
  {
    "text": "listen to the update action and when",
    "start": "423800",
    "end": "426590"
  },
  {
    "text": "that occurs will map it down to that",
    "start": "426590",
    "end": "428419"
  },
  {
    "text": "data payload that has the document ID as",
    "start": "428419",
    "end": "431330"
  },
  {
    "text": "well as the data that we want to update",
    "start": "431330",
    "end": "433479"
  },
  {
    "text": "from that point we call switch map and",
    "start": "433479",
    "end": "435889"
  },
  {
    "text": "then with the data that we want to",
    "start": "435889",
    "end": "437300"
  },
  {
    "text": "update we'll make a reference to that",
    "start": "437300",
    "end": "439009"
  },
  {
    "text": "pizza in fire store then the update",
    "start": "439009",
    "end": "441949"
  },
  {
    "text": "action is going to return a promise so",
    "start": "441949",
    "end": "443960"
  },
  {
    "text": "we're going to create an observable from",
    "start": "443960",
    "end": "445610"
  },
  {
    "text": "that promise to take care of that you",
    "start": "445610",
    "end": "447680"
  },
  {
    "text": "can do observable from promise and then",
    "start": "447680",
    "end": "449900"
  },
  {
    "text": "make the update inside of it and lastly",
    "start": "449900",
    "end": "452930"
  },
  {
    "text": "we'll map that down to the success",
    "start": "452930",
    "end": "454669"
  },
  {
    "text": "action once that promise resolves",
    "start": "454669",
    "end": "456590"
  },
  {
    "text": "successfully it also be a good idea to",
    "start": "456590",
    "end": "458659"
  },
  {
    "text": "catch errors here and dispatch an error",
    "start": "458659",
    "end": "460280"
  },
  {
    "text": "action but I'm skipping that part for",
    "start": "460280",
    "end": "462289"
  },
  {
    "text": "now we're almost done at this point we",
    "start": "462289",
    "end": "464539"
  },
  {
    "text": "just need a component for the end user",
    "start": "464539",
    "end": "466279"
  },
  {
    "text": "to interact with we'll go ahead and",
    "start": "466279",
    "end": "468680"
  },
  {
    "text": "import ng rx store as well as the",
    "start": "468680",
    "end": "470690"
  },
  {
    "text": "actions and reducer that we just created",
    "start": "470690",
    "end": "472599"
  },
  {
    "text": "then our actual observable will be an",
    "start": "472599",
    "end": "474889"
  },
  {
    "text": "array of pizzas the store is injected in",
    "start": "474889",
    "end": "477830"
  },
  {
    "text": "the constructor and it's typed to our",
    "start": "477830",
    "end": "479750"
  },
  {
    "text": "pizza interface we'll make the initial",
    "start": "479750",
    "end": "482330"
  },
  {
    "text": "query during ng on an it but first we'll",
    "start": "482330",
    "end": "484940"
  },
  {
    "text": "select the slice of the store we want",
    "start": "484940",
    "end": "486380"
  },
  {
    "text": "for our pizzas variable after that all",
    "start": "486380",
    "end": "489169"
  },
  {
    "text": "we have to do is dispatch the query",
    "start": "489169",
    "end": "490969"
  },
  {
    "text": "action and our front end is going to",
    "start": "490969",
    "end": "493550"
  },
  {
    "text": "have some buttons where the user can",
    "start": "493550",
    "end": "494750"
  },
  {
    "text": "update the state of an individual pizza",
    "start": "494750",
    "end": "497150"
  },
  {
    "text": "the update pizza method is an event",
    "start": "497150",
    "end": "499370"
  },
  {
    "text": "handler that will bind to a button click",
    "start": "499370",
    "end": "501139"
  },
  {
    "text": "and we can just dispatch the update",
    "start": "501139",
    "end": "503210"
  },
  {
    "text": "action with the corresponding payload",
    "start": "503210",
    "end": "505159"
  },
  {
    "text": "the HTML code is incredibly simple we",
    "start": "505159",
    "end": "508039"
  },
  {
    "text": "just loop over the array of pizzas and",
    "start": "508039",
    "end": "510500"
  },
  {
    "text": "then for each one we'll add that update",
    "start": "510500",
    "end": "512959"
  },
  {
    "text": "status button clicking this button will",
    "start": "512959",
    "end": "515180"
  },
  {
    "text": "trigger an asynchronous write operation",
    "start": "515180",
    "end": "517039"
  },
  {
    "text": "which will update the pizza from a",
    "start": "517039",
    "end": "518810"
  },
  {
    "text": "status of cooking to delivered now let's",
    "start": "518810",
    "end": "522110"
  },
  {
    "start": "521000",
    "end": "619000"
  },
  {
    "text": "go into the app and take a closer look",
    "start": "522110",
    "end": "523789"
  },
  {
    "text": "at what's actually happening here the",
    "start": "523789",
    "end": "525920"
  },
  {
    "text": "initial page load pulls the data from",
    "start": "525920",
    "end": "527570"
  },
  {
    "text": "fire store and then adds it to the state",
    "start": "527570",
    "end": "529520"
  },
  {
    "text": "in the entity format if you look at the",
    "start": "529520",
    "end": "532250"
  },
  {
    "text": "actions we first have a query pizzas",
    "start": "532250",
    "end": "534230"
  },
  {
    "text": "action and",
    "start": "534230",
    "end": "534980"
  },
  {
    "text": "we have for added events after that and",
    "start": "534980",
    "end": "537079"
  },
  {
    "text": "of course that gives us four pizzas on",
    "start": "537079",
    "end": "539209"
  },
  {
    "text": "the screen here as well",
    "start": "539209",
    "end": "540290"
  },
  {
    "text": "now let's see what happens when we click",
    "start": "540290",
    "end": "542120"
  },
  {
    "text": "the update status button we get three",
    "start": "542120",
    "end": "544820"
  },
  {
    "text": "actions here first the update and then",
    "start": "544820",
    "end": "546709"
  },
  {
    "text": "it's removed from the local store then",
    "start": "546709",
    "end": "548690"
  },
  {
    "text": "update success after the actual update",
    "start": "548690",
    "end": "550790"
  },
  {
    "text": "promise resolved so even though the",
    "start": "550790",
    "end": "552800"
  },
  {
    "text": "pizza wasn't removed from fire store you",
    "start": "552800",
    "end": "554420"
  },
  {
    "text": "still get the removed action because it",
    "start": "554420",
    "end": "556040"
  },
  {
    "text": "was removed from the local store you",
    "start": "556040",
    "end": "557959"
  },
  {
    "text": "could use that state change to toggle a",
    "start": "557959",
    "end": "559579"
  },
  {
    "text": "CSS class or show a toast message or any",
    "start": "559579",
    "end": "562370"
  },
  {
    "text": "other UI element you can imagine now",
    "start": "562370",
    "end": "564829"
  },
  {
    "text": "let's take a look at one more thing what",
    "start": "564829",
    "end": "566660"
  },
  {
    "text": "happens if we update a property on a",
    "start": "566660",
    "end": "568160"
  },
  {
    "text": "pizza from fire store or any other",
    "start": "568160",
    "end": "570380"
  },
  {
    "text": "client subscribing to this data you'll",
    "start": "570380",
    "end": "572899"
  },
  {
    "text": "see down here in dev tools we get a",
    "start": "572899",
    "end": "574490"
  },
  {
    "text": "modified action which tells us that the",
    "start": "574490",
    "end": "576680"
  },
  {
    "text": "data on the pizza was updated but it",
    "start": "576680",
    "end": "578420"
  },
  {
    "text": "still remains in our base query the end",
    "start": "578420",
    "end": "581120"
  },
  {
    "text": "result is that you now have a system",
    "start": "581120",
    "end": "582589"
  },
  {
    "text": "that will detect changes in fire store",
    "start": "582589",
    "end": "584810"
  },
  {
    "text": "and tell you exactly how they affect",
    "start": "584810",
    "end": "586579"
  },
  {
    "text": "your local ng rx store that's it for ng",
    "start": "586579",
    "end": "590570"
  },
  {
    "text": "rx with angularfire - if this video",
    "start": "590570",
    "end": "592459"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "592459",
    "end": "594199"
  },
  {
    "text": "if you want to learn more every week",
    "start": "594199",
    "end": "595519"
  },
  {
    "text": "consider becoming a pro subscriber at",
    "start": "595519",
    "end": "597649"
  },
  {
    "text": "angular firebase comm you'll get access",
    "start": "597649",
    "end": "600050"
  },
  {
    "text": "to exclusive content a free copy of my",
    "start": "600050",
    "end": "602360"
  },
  {
    "text": "book as well as a bunch of other",
    "start": "602360",
    "end": "603769"
  },
  {
    "text": "resources designed to help you get your",
    "start": "603769",
    "end": "605360"
  },
  {
    "text": "app off the ground thanks for watching",
    "start": "605360",
    "end": "607579"
  },
  {
    "text": "and I'll see you soon",
    "start": "607579",
    "end": "610660"
  },
  {
    "text": "[Music]",
    "start": "610740",
    "end": "615460"
  },
  {
    "text": "[Applause]",
    "start": "615460",
    "end": "616380"
  },
  {
    "text": "[Music]",
    "start": "616380",
    "end": "620860"
  }
]