[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "reactjs is elegant and minimal on the",
    "start": "40",
    "end": "2480"
  },
  {
    "text": "surface just write a JavaScript function",
    "start": "2480",
    "end": "4680"
  },
  {
    "text": "to represent a component that",
    "start": "4680",
    "end": "6240"
  },
  {
    "text": "automatically renders when your data",
    "start": "6240",
    "end": "7680"
  },
  {
    "text": "changes it's simple but also misleading",
    "start": "7680",
    "end": "10240"
  },
  {
    "text": "in reality react is a highly complex UI",
    "start": "10240",
    "end": "12519"
  },
  {
    "text": "library with a good amount of technical",
    "start": "12519",
    "end": "14320"
  },
  {
    "text": "baggage that has accumulated over the",
    "start": "14320",
    "end": "16080"
  },
  {
    "text": "last decade many newer Frameworks",
    "start": "16080",
    "end": "17560"
  },
  {
    "text": "attempt to do things better but react is",
    "start": "17560",
    "end": "19560"
  },
  {
    "text": "still the king and if you want to be a",
    "start": "19560",
    "end": "20880"
  },
  {
    "text": "web developer in 2022 it's a very good",
    "start": "20880",
    "end": "23000"
  },
  {
    "text": "idea to learn it the problem is that",
    "start": "23000",
    "end": "24800"
  },
  {
    "text": "react is unopinionated yet provides many",
    "start": "24800",
    "end": "26840"
  },
  {
    "text": "different ways to solve the same",
    "start": "26840",
    "end": "28359"
  },
  {
    "text": "problems that leaves us Developers with",
    "start": "28359",
    "end": "30199"
  },
  {
    "text": "plenty of room to screw things up with",
    "start": "30199",
    "end": "31880"
  },
  {
    "text": "our own stupid ideas in today's episode",
    "start": "31880",
    "end": "34040"
  },
  {
    "text": "of Code This Not That we'll look at 10",
    "start": "34040",
    "end": "36120"
  },
  {
    "text": "anti-patterns in react along with tips",
    "start": "36120",
    "end": "38120"
  },
  {
    "text": "and tricks to improve our code and also",
    "start": "38120",
    "end": "40000"
  },
  {
    "text": "prepare for a front-end technical",
    "start": "40000",
    "end": "41520"
  },
  {
    "text": "interview before we get started I have",
    "start": "41520",
    "end": "43200"
  },
  {
    "text": "an announcement I'm working on a brand",
    "start": "43200",
    "end": "44800"
  },
  {
    "text": "new course for PR members that teaches",
    "start": "44800",
    "end": "46719"
  },
  {
    "text": "the fundamentals of react in my 100",
    "start": "46719",
    "end": "48760"
  },
  {
    "text": "seconds of code format then puts those",
    "start": "48760",
    "end": "50520"
  },
  {
    "text": "Concepts to use by building multiple",
    "start": "50520",
    "end": "52199"
  },
  {
    "text": "full stack applications from scratch the",
    "start": "52199",
    "end": "54399"
  },
  {
    "text": "course is not finished yet but I'll be",
    "start": "54399",
    "end": "55920"
  },
  {
    "text": "releasing new videos for it every couple",
    "start": "55920",
    "end": "57640"
  },
  {
    "text": "days on fireship iio when I initially",
    "start": "57640",
    "end": "59680"
  },
  {
    "text": "started building a react app I usually",
    "start": "59680",
    "end": "61559"
  },
  {
    "start": "60000",
    "end": "115000"
  },
  {
    "text": "start by writing one big giant component",
    "start": "61559",
    "end": "63960"
  },
  {
    "text": "often in the app component provided by",
    "start": "63960",
    "end": "65640"
  },
  {
    "text": "create react app and that's intentional",
    "start": "65640",
    "end": "67560"
  },
  {
    "text": "because I usually don't know how I want",
    "start": "67560",
    "end": "68920"
  },
  {
    "text": "my code to be organized initially and I",
    "start": "68920",
    "end": "70600"
  },
  {
    "text": "don't want to waste my time over",
    "start": "70600",
    "end": "71960"
  },
  {
    "text": "organizing things before I even know",
    "start": "71960",
    "end": "73600"
  },
  {
    "text": "what I want to do however this results",
    "start": "73600",
    "end": "75280"
  },
  {
    "text": "in an anti-pattern of having one overly",
    "start": "75280",
    "end": "77520"
  },
  {
    "text": "large deeply nested component a",
    "start": "77520",
    "end": "79280"
  },
  {
    "text": "component like this is hard to",
    "start": "79280",
    "end": "81000"
  },
  {
    "text": "understand refactor and test we can",
    "start": "81000",
    "end": "82799"
  },
  {
    "text": "improve this code by refactoring into",
    "start": "82799",
    "end": "84759"
  },
  {
    "text": "reusable components like this Navar",
    "start": "84759",
    "end": "86880"
  },
  {
    "text": "could easily be broken down into one or",
    "start": "86880",
    "end": "88640"
  },
  {
    "text": "more components that better represent",
    "start": "88640",
    "end": "90439"
  },
  {
    "text": "what it does now that may sound like a",
    "start": "90439",
    "end": "92000"
  },
  {
    "text": "lot of work but luckily there's a VSS",
    "start": "92000",
    "end": "94000"
  },
  {
    "text": "code extension called glean that can",
    "start": "94000",
    "end": "95600"
  },
  {
    "text": "Leverage The IDE to do this work for us",
    "start": "95600",
    "end": "97880"
  },
  {
    "text": "install it then highlight the code you",
    "start": "97880",
    "end": "99439"
  },
  {
    "text": "want to extract into its own component",
    "start": "99439",
    "end": "101200"
  },
  {
    "text": "click the light bulb and you'll see a",
    "start": "101200",
    "end": "102560"
  },
  {
    "text": "bunch of options to refactor like render",
    "start": "102560",
    "end": "104960"
  },
  {
    "text": "conditionally or extract component give",
    "start": "104960",
    "end": "107040"
  },
  {
    "text": "it a name then it will automatically",
    "start": "107040",
    "end": "108560"
  },
  {
    "text": "move the code while including the",
    "start": "108560",
    "end": "110000"
  },
  {
    "text": "required props it's a massive timesaver",
    "start": "110000",
    "end": "112119"
  },
  {
    "text": "that I couldn't imagine living without",
    "start": "112119",
    "end": "113680"
  },
  {
    "text": "now when you start refactoring a large",
    "start": "113680",
    "end": "115280"
  },
  {
    "start": "115000",
    "end": "155000"
  },
  {
    "text": "component you might be tempted into",
    "start": "115280",
    "end": "116920"
  },
  {
    "text": "another anti- pattern of nesting",
    "start": "116920",
    "end": "118759"
  },
  {
    "text": "components in this example we've defined",
    "start": "118759",
    "end": "120799"
  },
  {
    "text": "a child component that lives inside the",
    "start": "120799",
    "end": "122840"
  },
  {
    "text": "parent component the child uses a",
    "start": "122840",
    "end": "124600"
  },
  {
    "text": "function defined in the parent and by",
    "start": "124600",
    "end": "126200"
  },
  {
    "text": "defining it here we don't need to",
    "start": "126200",
    "end": "127640"
  },
  {
    "text": "provide a prop for that function it",
    "start": "127640",
    "end": "129560"
  },
  {
    "text": "feels very intuitive and it works",
    "start": "129560",
    "end": "131200"
  },
  {
    "text": "perfectly fine but there's a major",
    "start": "131200",
    "end": "132879"
  },
  {
    "text": "problem here every time the parent",
    "start": "132879",
    "end": "134120"
  },
  {
    "text": "component is rendered it will also",
    "start": "134120",
    "end": "135560"
  },
  {
    "text": "redefine the child component which means",
    "start": "135560",
    "end": "137440"
  },
  {
    "text": "it gets a new memory address and that",
    "start": "137440",
    "end": "139000"
  },
  {
    "text": "could lead to Performance issues and",
    "start": "139000",
    "end": "140599"
  },
  {
    "text": "unpredictable Behavior the solution is",
    "start": "140599",
    "end": "142760"
  },
  {
    "text": "to either not Define a child component",
    "start": "142760",
    "end": "144640"
  },
  {
    "text": "at all or to move the child component",
    "start": "144640",
    "end": "146280"
  },
  {
    "text": "out of the parent and pass the function",
    "start": "146280",
    "end": "147800"
  },
  {
    "text": "in as a prop this example demonstrates",
    "start": "147800",
    "end": "149959"
  },
  {
    "text": "how react is very simple on the surface",
    "start": "149959",
    "end": "151959"
  },
  {
    "text": "but if you don't know exactly what's",
    "start": "151959",
    "end": "153080"
  },
  {
    "text": "going on it's easy to shoot yourself in",
    "start": "153080",
    "end": "154879"
  },
  {
    "text": "the foot here's a similar example of a",
    "start": "154879",
    "end": "156720"
  },
  {
    "start": "155000",
    "end": "195000"
  },
  {
    "text": "component that does too much work and",
    "start": "156720",
    "end": "158680"
  },
  {
    "text": "might end up causing performance issues",
    "start": "158680",
    "end": "160519"
  },
  {
    "text": "let's imagine we have a component with",
    "start": "160519",
    "end": "162239"
  },
  {
    "text": "two different pieces of State on one",
    "start": "162239",
    "end": "163800"
  },
  {
    "text": "piece of State we need to run an",
    "start": "163800",
    "end": "165280"
  },
  {
    "text": "expensive calculation anytime the value",
    "start": "165280",
    "end": "167400"
  },
  {
    "text": "changes the problem with our current",
    "start": "167400",
    "end": "169000"
  },
  {
    "text": "implementation is that anytime the state",
    "start": "169000",
    "end": "170879"
  },
  {
    "text": "changes on this component it will rerun",
    "start": "170879",
    "end": "172800"
  },
  {
    "text": "the expensive calculation even though it",
    "start": "172800",
    "end": "174640"
  },
  {
    "text": "only depends on the one count value it's",
    "start": "174640",
    "end": "176840"
  },
  {
    "text": "not very obvious but you have a",
    "start": "176840",
    "end": "178360"
  },
  {
    "text": "potential performance bottleneck here",
    "start": "178360",
    "end": "179840"
  },
  {
    "text": "here in a situation like this you'll",
    "start": "179840",
    "end": "181440"
  },
  {
    "text": "want to use the use memo hook what it",
    "start": "181440",
    "end": "183640"
  },
  {
    "text": "will do is remember the last value and",
    "start": "183640",
    "end": "185760"
  },
  {
    "text": "only run the actual function when it's",
    "start": "185760",
    "end": "187560"
  },
  {
    "text": "dependent data changes you might also",
    "start": "187560",
    "end": "189519"
  },
  {
    "text": "run into the situation when working with",
    "start": "189519",
    "end": "191159"
  },
  {
    "text": "functions and for that react provides a",
    "start": "191159",
    "end": "193319"
  },
  {
    "text": "used callback hook now another thing you",
    "start": "193319",
    "end": "195280"
  },
  {
    "start": "195000",
    "end": "224000"
  },
  {
    "text": "might run into is that when defining a",
    "start": "195280",
    "end": "197159"
  },
  {
    "text": "brand new component you get an error",
    "start": "197159",
    "end": "198959"
  },
  {
    "text": "when trying to return two sibling",
    "start": "198959",
    "end": "200680"
  },
  {
    "text": "elements together that's because every",
    "start": "200680",
    "end": "202400"
  },
  {
    "text": "component can have only one root element",
    "start": "202400",
    "end": "204519"
  },
  {
    "text": "so what you might do is wrap it with a",
    "start": "204519",
    "end": "206360"
  },
  {
    "text": "div that works perfectly fine but it",
    "start": "206360",
    "end": "208319"
  },
  {
    "text": "leads to a bunch of unnecessary Dives in",
    "start": "208319",
    "end": "210159"
  },
  {
    "text": "your markup and that can cause issues",
    "start": "210159",
    "end": "211599"
  },
  {
    "text": "with accessibility and CSS styling to",
    "start": "211599",
    "end": "214000"
  },
  {
    "text": "address this concern react has a",
    "start": "214000",
    "end": "215680"
  },
  {
    "text": "built-in fragment component or better",
    "start": "215680",
    "end": "217599"
  },
  {
    "text": "yet you can use the shorthand syntax of",
    "start": "217599",
    "end": "219799"
  },
  {
    "text": "an empty element which tells react to",
    "start": "219799",
    "end": "221879"
  },
  {
    "text": "render nothing as the parent element now",
    "start": "221879",
    "end": "224000"
  },
  {
    "start": "224000",
    "end": "280000"
  },
  {
    "text": "as your app grows in complexity and you",
    "start": "224000",
    "end": "225760"
  },
  {
    "text": "start creating more and more components",
    "start": "225760",
    "end": "227239"
  },
  {
    "text": "you'll want to have an opinionated way",
    "start": "227239",
    "end": "228640"
  },
  {
    "text": "to organize them A good rule to follow",
    "start": "228640",
    "end": "230920"
  },
  {
    "text": "is one component per file it can be",
    "start": "230920",
    "end": "232879"
  },
  {
    "text": "tempting to export multiple components",
    "start": "232879",
    "end": "234760"
  },
  {
    "text": "from a single file but things will get",
    "start": "234760",
    "end": "236480"
  },
  {
    "text": "pretty complicated quickly if a",
    "start": "236480",
    "end": "237959"
  },
  {
    "text": "component is going to be exported it's",
    "start": "237959",
    "end": "239760"
  },
  {
    "text": "generally best that it lives in its own",
    "start": "239760",
    "end": "241280"
  },
  {
    "text": "file now in larger projects I would take",
    "start": "241280",
    "end": "243239"
  },
  {
    "text": "things one step further and give every",
    "start": "243239",
    "end": "245040"
  },
  {
    "text": "component its own directory if you name",
    "start": "245040",
    "end": "246879"
  },
  {
    "text": "the file index then you can easily",
    "start": "246879",
    "end": "248640"
  },
  {
    "text": "export it from that directory but inside",
    "start": "248640",
    "end": "250599"
  },
  {
    "text": "the directory you can add other files",
    "start": "250599",
    "end": "252599"
  },
  {
    "text": "like a CSS module for example or",
    "start": "252599",
    "end": "254799"
  },
  {
    "text": "anything else you might need for testing",
    "start": "254799",
    "end": "256680"
  },
  {
    "text": "storybook typescript and so on this is",
    "start": "256680",
    "end": "258840"
  },
  {
    "text": "how they do things by default in angular",
    "start": "258840",
    "end": "260600"
  },
  {
    "text": "and I find it works really well for",
    "start": "260600",
    "end": "262000"
  },
  {
    "text": "large projects now there is one drawback",
    "start": "262000",
    "end": "264120"
  },
  {
    "text": "when naming your component index and",
    "start": "264120",
    "end": "265840"
  },
  {
    "text": "that's the fact that it's kind of",
    "start": "265840",
    "end": "266840"
  },
  {
    "text": "confusing when working with tabs in your",
    "start": "266840",
    "end": "268560"
  },
  {
    "text": "IDE what you can do is give your",
    "start": "268560",
    "end": "270400"
  },
  {
    "text": "component file a regular name then use",
    "start": "270400",
    "end": "272280"
  },
  {
    "text": "the index file to export it that's",
    "start": "272280",
    "end": "274199"
  },
  {
    "text": "called a barrel and it will keep your",
    "start": "274199",
    "end": "275720"
  },
  {
    "text": "Imports nice and concise while also",
    "start": "275720",
    "end": "277479"
  },
  {
    "text": "providing a readable file name for the",
    "start": "277479",
    "end": "279199"
  },
  {
    "text": "IDE one of the biggest problems with big",
    "start": "279199",
    "end": "281560"
  },
  {
    "start": "280000",
    "end": "334000"
  },
  {
    "text": "complex apps though is that they're big",
    "start": "281560",
    "end": "283520"
  },
  {
    "text": "and what that means is that when you",
    "start": "283520",
    "end": "284840"
  },
  {
    "text": "ship your app to production it'll have a",
    "start": "284840",
    "end": "286800"
  },
  {
    "text": "slow initial page load because it takes",
    "start": "286800",
    "end": "288600"
  },
  {
    "text": "a long time for the browser to download",
    "start": "288600",
    "end": "290520"
  },
  {
    "text": "the JavaScript bundle so what can we do",
    "start": "290520",
    "end": "292440"
  },
  {
    "text": "about that if you're using a tool like",
    "start": "292440",
    "end": "294000"
  },
  {
    "text": "nextjs or create react app which are",
    "start": "294000",
    "end": "296240"
  },
  {
    "text": "built on top of webpack it's very easy",
    "start": "296240",
    "end": "298400"
  },
  {
    "text": "to implement code splitting normally to",
    "start": "298400",
    "end": "300440"
  },
  {
    "text": "import code you use an import statement",
    "start": "300440",
    "end": "302840"
  },
  {
    "text": "however browsers now support Dynamic",
    "start": "302840",
    "end": "304639"
  },
  {
    "text": "Imports which allows you to load a",
    "start": "304639",
    "end": "306479"
  },
  {
    "text": "module asynchronously using the import",
    "start": "306479",
    "end": "308680"
  },
  {
    "text": "function when webpack sees that code it",
    "start": "308680",
    "end": "310759"
  },
  {
    "text": "automatically knows to split that code",
    "start": "310759",
    "end": "312639"
  },
  {
    "text": "into a different bundle which won't be",
    "start": "312639",
    "end": "314320"
  },
  {
    "text": "required until after the initial page",
    "start": "314320",
    "end": "316120"
  },
  {
    "text": "load that works fine for plain",
    "start": "316120",
    "end": "317639"
  },
  {
    "text": "JavaScript but not so much when it comes",
    "start": "317639",
    "end": "319759"
  },
  {
    "text": "to react components however react has a",
    "start": "319759",
    "end": "322120"
  },
  {
    "text": "feature to support lazy loading which is",
    "start": "322120",
    "end": "324000"
  },
  {
    "text": "still experimental today but it allows",
    "start": "324000",
    "end": "325880"
  },
  {
    "text": "you to use Dynamic Imports on react",
    "start": "325880",
    "end": "327960"
  },
  {
    "text": "components once a component is dynamic",
    "start": "327960",
    "end": "329919"
  },
  {
    "text": "imported you can then wrap it in the",
    "start": "329919",
    "end": "331280"
  },
  {
    "text": "suspense component to show a fallback UI",
    "start": "331280",
    "end": "333319"
  },
  {
    "text": "when it's loading now another problem",
    "start": "333319",
    "end": "335120"
  },
  {
    "start": "334000",
    "end": "390000"
  },
  {
    "text": "you might run into with big projects is",
    "start": "335120",
    "end": "337080"
  },
  {
    "text": "that you might have one component at the",
    "start": "337080",
    "end": "338440"
  },
  {
    "text": "very top that holds your state but then",
    "start": "338440",
    "end": "340280"
  },
  {
    "text": "you have a deeply nested component that",
    "start": "340280",
    "end": "342160"
  },
  {
    "text": "also needs to use that state what you",
    "start": "342160",
    "end": "343800"
  },
  {
    "text": "have to do is then pass that state as a",
    "start": "343800",
    "end": "345720"
  },
  {
    "text": "prop to a bunch of intermediate",
    "start": "345720",
    "end": "347160"
  },
  {
    "text": "components that don't actually need it",
    "start": "347160",
    "end": "348720"
  },
  {
    "text": "until it finally gets to that child this",
    "start": "348720",
    "end": "350560"
  },
  {
    "text": "is known as prop drilling because it",
    "start": "350560",
    "end": "352160"
  },
  {
    "text": "makes you want to drill a hole into your",
    "start": "352160",
    "end": "353919"
  },
  {
    "text": "brain one solution is to bring in a",
    "start": "353919",
    "end": "355680"
  },
  {
    "text": "state management Library like Redux but",
    "start": "355680",
    "end": "357720"
  },
  {
    "text": "that's a heavy-handed approach when you",
    "start": "357720",
    "end": "359280"
  },
  {
    "text": "have global data that's used everywhere",
    "start": "359280",
    "end": "361120"
  },
  {
    "text": "like an authenticated user for example",
    "start": "361120",
    "end": "363039"
  },
  {
    "text": "you can share it everywhere with the",
    "start": "363039",
    "end": "364479"
  },
  {
    "text": "context API you first provide the data",
    "start": "364479",
    "end": "366639"
  },
  {
    "text": "at a certain point in the component tree",
    "start": "366639",
    "end": "368440"
  },
  {
    "text": "then any component nested under it at",
    "start": "368440",
    "end": "370160"
  },
  {
    "text": "any level can access that data sounds",
    "start": "370160",
    "end": "372599"
  },
  {
    "text": "awesome but it does come at a cost the",
    "start": "372599",
    "end": "374680"
  },
  {
    "text": "context API is something that you should",
    "start": "374680",
    "end": "376360"
  },
  {
    "text": "use sparingly because it makes your",
    "start": "376360",
    "end": "378039"
  },
  {
    "text": "components impossible to reuse without",
    "start": "378039",
    "end": "379880"
  },
  {
    "text": "having that provider as a parent most",
    "start": "379880",
    "end": "381680"
  },
  {
    "text": "apps only have a handful of values that",
    "start": "381680",
    "end": "383280"
  },
  {
    "text": "are truly Global that stuff can go into",
    "start": "383280",
    "end": "385400"
  },
  {
    "text": "context while everything else should be",
    "start": "385400",
    "end": "387000"
  },
  {
    "text": "more localized prop drilling is a",
    "start": "387000",
    "end": "388800"
  },
  {
    "text": "vertical problem but you might also end",
    "start": "388800",
    "end": "390759"
  },
  {
    "start": "390000",
    "end": "420000"
  },
  {
    "text": "up with a horizontal problem called prop",
    "start": "390759",
    "end": "392800"
  },
  {
    "text": "plowing which is a term I just made up",
    "start": "392800",
    "end": "394680"
  },
  {
    "text": "what might happen is that you end up",
    "start": "394680",
    "end": "396199"
  },
  {
    "text": "with components that have a lot of",
    "start": "396199",
    "end": "397800"
  },
  {
    "text": "different props and you end up with this",
    "start": "397800",
    "end": "399440"
  },
  {
    "text": "long repetitive code where each prop has",
    "start": "399440",
    "end": "401440"
  },
  {
    "text": "the same name as the variable passed to",
    "start": "401440",
    "end": "403360"
  },
  {
    "text": "it when you have an object that contains",
    "start": "403360",
    "end": "405120"
  },
  {
    "text": "all the props that you're passing to the",
    "start": "405120",
    "end": "406639"
  },
  {
    "text": "child you can use the spread syntax to",
    "start": "406639",
    "end": "408520"
  },
  {
    "text": "pass them all at the same time that",
    "start": "408520",
    "end": "410080"
  },
  {
    "text": "makes your code much more concise and",
    "start": "410080",
    "end": "411919"
  },
  {
    "text": "personally I'm a big fan of this however",
    "start": "411919",
    "end": "414039"
  },
  {
    "text": "it does make your code less explicit so",
    "start": "414039",
    "end": "415840"
  },
  {
    "text": "I typically only recommend using it when",
    "start": "415840",
    "end": "417560"
  },
  {
    "text": "you have a component with a ton of props",
    "start": "417560",
    "end": "419039"
  },
  {
    "text": "that really justifies its use another",
    "start": "419039",
    "end": "420960"
  },
  {
    "start": "420000",
    "end": "459000"
  },
  {
    "text": "area where your react code can get",
    "start": "420960",
    "end": "422400"
  },
  {
    "text": "pretty messy is with event handlers in",
    "start": "422400",
    "end": "424400"
  },
  {
    "text": "jsx what happens is you might have a",
    "start": "424400",
    "end": "426599"
  },
  {
    "text": "function that takes the event as its",
    "start": "426599",
    "end": "428440"
  },
  {
    "text": "first argument but one or more other",
    "start": "428440",
    "end": "430160"
  },
  {
    "text": "values as secondary arguments that means",
    "start": "430160",
    "end": "432240"
  },
  {
    "text": "to call it you'll need to break out an",
    "start": "432240",
    "end": "433840"
  },
  {
    "text": "arrow function and this can get pretty",
    "start": "433840",
    "end": "435440"
  },
  {
    "text": "messy if used in multiple places a cool",
    "start": "435440",
    "end": "437680"
  },
  {
    "text": "little JavaScript trick here is to",
    "start": "437680",
    "end": "439319"
  },
  {
    "text": "create a curried function basically it's",
    "start": "439319",
    "end": "441759"
  },
  {
    "text": "just a function that returns another",
    "start": "441759",
    "end": "443759"
  },
  {
    "text": "function the outer function takes our",
    "start": "443759",
    "end": "445479"
  },
  {
    "text": "custom arguments while the inner",
    "start": "445479",
    "end": "446919"
  },
  {
    "text": "function handles the event that's passed",
    "start": "446919",
    "end": "448599"
  },
  {
    "text": "by default this eliminates the need to",
    "start": "448599",
    "end": "450479"
  },
  {
    "text": "Define an arrow function for each event",
    "start": "450479",
    "end": "452599"
  },
  {
    "text": "not only does that make your code look a",
    "start": "452599",
    "end": "454000"
  },
  {
    "text": "lot cleaner but it also gives you a",
    "start": "454000",
    "end": "455639"
  },
  {
    "text": "legitimate use case for currying which",
    "start": "455639",
    "end": "457479"
  },
  {
    "text": "will impress your friends and family and",
    "start": "457479",
    "end": "459080"
  },
  {
    "start": "459000",
    "end": "535000"
  },
  {
    "text": "that brings us to anti- pattern number",
    "start": "459080",
    "end": "460759"
  },
  {
    "text": "10 when working with a UST State hook in",
    "start": "460759",
    "end": "462479"
  },
  {
    "text": "a component it's tempting to put all of",
    "start": "462479",
    "end": "464360"
  },
  {
    "text": "your data in a single object it makes",
    "start": "464360",
    "end": "466280"
  },
  {
    "text": "the code look cleaner and may also seem",
    "start": "466280",
    "end": "468039"
  },
  {
    "text": "more performant because you only need to",
    "start": "468039",
    "end": "469520"
  },
  {
    "text": "call set State once however what you",
    "start": "469520",
    "end": "471440"
  },
  {
    "text": "should know is that react 18 will do",
    "start": "471440",
    "end": "473680"
  },
  {
    "text": "automatic batching whenever you update",
    "start": "473680",
    "end": "475520"
  },
  {
    "text": "the state that means calling set State",
    "start": "475520",
    "end": "477199"
  },
  {
    "text": "multiple times in the same function will",
    "start": "477199",
    "end": "478919"
  },
  {
    "text": "not trigger multiple renders therefore",
    "start": "478919",
    "end": "480960"
  },
  {
    "text": "it's not a big deal for performance but",
    "start": "480960",
    "end": "482919"
  },
  {
    "text": "more importantly it makes your code",
    "start": "482919",
    "end": "484840"
  },
  {
    "text": "difficult to extract into a custom hook",
    "start": "484840",
    "end": "486919"
  },
  {
    "text": "in the olden days with react class",
    "start": "486919",
    "end": "488440"
  },
  {
    "text": "components it was common to organize",
    "start": "488440",
    "end": "490280"
  },
  {
    "text": "your code into smart components and dumb",
    "start": "490280",
    "end": "492560"
  },
  {
    "text": "components where the smart components",
    "start": "492560",
    "end": "494120"
  },
  {
    "text": "control the data and the dumb components",
    "start": "494120",
    "end": "495960"
  },
  {
    "text": "just render UI with props there's",
    "start": "495960",
    "end": "497800"
  },
  {
    "text": "nothing wrong with this pattern but",
    "start": "497800",
    "end": "499280"
  },
  {
    "text": "nowadays it's easier to just extract",
    "start": "499280",
    "end": "501280"
  },
  {
    "text": "your logic into a custom hook what I",
    "start": "501280",
    "end": "503479"
  },
  {
    "text": "like to do is build my component with a",
    "start": "503479",
    "end": "505360"
  },
  {
    "text": "bunch of different stateful values at",
    "start": "505360",
    "end": "506879"
  },
  {
    "text": "first then if things get too complex or",
    "start": "506879",
    "end": "508879"
  },
  {
    "text": "I want to use that code in a different",
    "start": "508879",
    "end": "510479"
  },
  {
    "text": "component I extract it into my own",
    "start": "510479",
    "end": "512320"
  },
  {
    "text": "custom hook which itself is just a",
    "start": "512320",
    "end": "514080"
  },
  {
    "text": "JavaScript function and this allows you",
    "start": "514080",
    "end": "515680"
  },
  {
    "text": "to treat virtually all your components",
    "start": "515680",
    "end": "517399"
  },
  {
    "text": "as dumb components while your custom",
    "start": "517399",
    "end": "519240"
  },
  {
    "text": "hooks handle the more complex business",
    "start": "519240",
    "end": "521120"
  },
  {
    "text": "logic and with that we've looked at a",
    "start": "521120",
    "end": "522760"
  },
  {
    "text": "small preview of the different things",
    "start": "522760",
    "end": "524159"
  },
  {
    "text": "you can screw up and react check out my",
    "start": "524159",
    "end": "526040"
  },
  {
    "text": "full course if you want to learn more",
    "start": "526040",
    "end": "527200"
  },
  {
    "text": "about react and here's a special",
    "start": "527200",
    "end": "528680"
  },
  {
    "text": "discount for making it all the way to",
    "start": "528680",
    "end": "530120"
  },
  {
    "text": "the end of this video thanks for",
    "start": "530120",
    "end": "531600"
  },
  {
    "text": "watching and I will see you in the next",
    "start": "531600",
    "end": "533360"
  },
  {
    "text": "one",
    "start": "533360",
    "end": "536360"
  }
]