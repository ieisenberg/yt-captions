[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "in the age of big data and deep learning",
    "start": "160",
    "end": "2480"
  },
  {
    "text": "data visualization is an extremely",
    "start": "2480",
    "end": "4359"
  },
  {
    "text": "important tool for many applications in",
    "start": "4359",
    "end": "6759"
  },
  {
    "text": "this episode we're going to combine the",
    "start": "6759",
    "end": "8519"
  },
  {
    "text": "plotly JS Library along with angular and",
    "start": "8519",
    "end": "11320"
  },
  {
    "text": "Firebase to create three different types",
    "start": "11320",
    "end": "13320"
  },
  {
    "text": "of charts that are capable of handling",
    "start": "13320",
    "end": "15120"
  },
  {
    "text": "real-time data we'll start by building a",
    "start": "15120",
    "end": "17560"
  },
  {
    "text": "basic 2D line chart and then we'll build",
    "start": "17560",
    "end": "20160"
  },
  {
    "text": "up to a 3D topographical chart then",
    "start": "20160",
    "end": "22880"
  },
  {
    "text": "we'll finish up with a tary chart that's",
    "start": "22880",
    "end": "25039"
  },
  {
    "text": "capable of staying in sync with the",
    "start": "25039",
    "end": "26840"
  },
  {
    "text": "real-time back end on Firebase the first",
    "start": "26840",
    "end": "29480"
  },
  {
    "start": "29000",
    "end": "61000"
  },
  {
    "text": "step is to to install the plotly JS",
    "start": "29480",
    "end": "31320"
  },
  {
    "text": "Library which we can do with npm install",
    "start": "31320",
    "end": "33800"
  },
  {
    "text": "plotly.js flag saave then add it to the",
    "start": "33800",
    "end": "37480"
  },
  {
    "text": "script section in the",
    "start": "37480",
    "end": "39640"
  },
  {
    "text": "angular-cli Json file it's worth noting",
    "start": "39640",
    "end": "42840"
  },
  {
    "text": "that plot Le is a pretty big Library so",
    "start": "42840",
    "end": "44719"
  },
  {
    "text": "if you want to slim it down a little bit",
    "start": "44719",
    "end": "46280"
  },
  {
    "text": "go to your node modules and find just",
    "start": "46280",
    "end": "48559"
  },
  {
    "text": "the script that you need for your app in",
    "start": "48559",
    "end": "50600"
  },
  {
    "text": "this case we're using the entire Library",
    "start": "50600",
    "end": "52320"
  },
  {
    "text": "which is probably overkill for most",
    "start": "52320",
    "end": "54280"
  },
  {
    "text": "situations then in your typing. D file",
    "start": "54280",
    "end": "57039"
  },
  {
    "text": "add the plotly class so it's recognized",
    "start": "57039",
    "end": "59120"
  },
  {
    "text": "by typescript",
    "start": "59120",
    "end": "60879"
  },
  {
    "text": "now we can start building our first line",
    "start": "60879",
    "end": "62600"
  },
  {
    "start": "61000",
    "end": "140000"
  },
  {
    "text": "chart this chart will just be completely",
    "start": "62600",
    "end": "64838"
  },
  {
    "text": "static just to show you the general",
    "start": "64839",
    "end": "66479"
  },
  {
    "text": "concepts behind plotly in the HTML",
    "start": "66479",
    "end": "69119"
  },
  {
    "text": "create an empty div and then give it a",
    "start": "69119",
    "end": "70880"
  },
  {
    "text": "template reference variable named chart",
    "start": "70880",
    "end": "73360"
  },
  {
    "text": "then in the component typescript we'll",
    "start": "73360",
    "end": "74960"
  },
  {
    "text": "use viewchild as well as element ref",
    "start": "74960",
    "end": "77720"
  },
  {
    "text": "then we're going to build this chart",
    "start": "77720",
    "end": "78960"
  },
  {
    "text": "service in The Next Step once we start",
    "start": "78960",
    "end": "80640"
  },
  {
    "text": "using live data from Firebase so you can",
    "start": "80640",
    "end": "82759"
  },
  {
    "text": "ignore that for now and we'll also use",
    "start": "82759",
    "end": "85280"
  },
  {
    "text": "the low Dash Library so to get a hold of",
    "start": "85280",
    "end": "88000"
  },
  {
    "text": "the div in the HTML we use viewchild and",
    "start": "88000",
    "end": "90920"
  },
  {
    "text": "then reference that chart variable that",
    "start": "90920",
    "end": "92600"
  },
  {
    "text": "we Nam there then we'll name it l in the",
    "start": "92600",
    "end": "95200"
  },
  {
    "text": "typescript which is more or less an",
    "start": "95200",
    "end": "96840"
  },
  {
    "text": "angular convention then to actually",
    "start": "96840",
    "end": "99520"
  },
  {
    "text": "build a plotly chart there are three",
    "start": "99520",
    "end": "101560"
  },
  {
    "text": "basic variables that you need to be",
    "start": "101560",
    "end": "102840"
  },
  {
    "text": "aware of first we have element which is",
    "start": "102840",
    "end": "105399"
  },
  {
    "text": "the HTML element that will be replaced",
    "start": "105399",
    "end": "108000"
  },
  {
    "text": "by the chart and then we have data",
    "start": "108000",
    "end": "110280"
  },
  {
    "text": "that's the actual data that's going to",
    "start": "110280",
    "end": "111719"
  },
  {
    "text": "be displayed in the chart here we have a",
    "start": "111719",
    "end": "113560"
  },
  {
    "text": "few numbers on the X and Y axis that",
    "start": "113560",
    "end": "115439"
  },
  {
    "text": "will create a basic line chart with a",
    "start": "115439",
    "end": "117280"
  },
  {
    "text": "curve the third variable is style which",
    "start": "117280",
    "end": "119960"
  },
  {
    "text": "defines the style options that vary from",
    "start": "119960",
    "end": "122159"
  },
  {
    "text": "chart to chart then to put everything",
    "start": "122159",
    "end": "124759"
  },
  {
    "text": "together we just call plot le. plot and",
    "start": "124759",
    "end": "127360"
  },
  {
    "text": "pass it The Element data and style back",
    "start": "127360",
    "end": "130319"
  },
  {
    "text": "in the app we can see we get the simple",
    "start": "130319",
    "end": "132000"
  },
  {
    "text": "line chart but it's packed with a bunch",
    "start": "132000",
    "end": "133680"
  },
  {
    "text": "of features from plotly such as the",
    "start": "133680",
    "end": "135760"
  },
  {
    "text": "ability to zoom in and zoom out you can",
    "start": "135760",
    "end": "137560"
  },
  {
    "text": "save it as an image and do all kinds of",
    "start": "137560",
    "end": "139720"
  },
  {
    "text": "different stuff to it so that was pretty",
    "start": "139720",
    "end": "142000"
  },
  {
    "start": "140000",
    "end": "231000"
  },
  {
    "text": "simple now let's build a 3D chart that",
    "start": "142000",
    "end": "144599"
  },
  {
    "text": "uses data from Firebase so I'm building",
    "start": "144599",
    "end": "147720"
  },
  {
    "text": "a basic service here that injects the",
    "start": "147720",
    "end": "150000"
  },
  {
    "text": "angular fire database then it Returns",
    "start": "150000",
    "end": "152200"
  },
  {
    "text": "the data set we want as a Firebase list",
    "start": "152200",
    "end": "154720"
  },
  {
    "text": "observable in this example my database",
    "start": "154720",
    "end": "157080"
  },
  {
    "text": "is a collection of arrays with each",
    "start": "157080",
    "end": "159159"
  },
  {
    "text": "array having its own set of data points",
    "start": "159159",
    "end": "161959"
  },
  {
    "text": "these data points correspond to the",
    "start": "161959",
    "end": "163440"
  },
  {
    "text": "elevation of a mountain and I'll provide",
    "start": "163440",
    "end": "165319"
  },
  {
    "text": "a link to the data set in the",
    "start": "165319",
    "end": "167680"
  },
  {
    "text": "description now getting back to the",
    "start": "167680",
    "end": "169519"
  },
  {
    "text": "component we create a new function for",
    "start": "169519",
    "end": "171360"
  },
  {
    "text": "this chart but this time we pass it the",
    "start": "171360",
    "end": "173239"
  },
  {
    "text": "data as an argument like before we set",
    "start": "173239",
    "end": "175760"
  },
  {
    "text": "the element variable then we format the",
    "start": "175760",
    "end": "178120"
  },
  {
    "text": "data specifically for 3D charts so we",
    "start": "178120",
    "end": "180680"
  },
  {
    "text": "pass the data as the z-axis and set the",
    "start": "180680",
    "end": "183959"
  },
  {
    "text": "type to surface then for the layout or",
    "start": "183959",
    "end": "187120"
  },
  {
    "text": "style we set a few simple parameters",
    "start": "187120",
    "end": "189080"
  },
  {
    "text": "here just to make the chart look good",
    "start": "189080",
    "end": "191760"
  },
  {
    "text": "and again we call plot le. plot and pass",
    "start": "191760",
    "end": "194519"
  },
  {
    "text": "it these",
    "start": "194519",
    "end": "196120"
  },
  {
    "text": "variables now we need to pass the chart",
    "start": "196120",
    "end": "198480"
  },
  {
    "text": "some data so we do this during ngon a",
    "start": "198480",
    "end": "200959"
  },
  {
    "text": "nit by subscribing to the data set in",
    "start": "200959",
    "end": "203400"
  },
  {
    "text": "the",
    "start": "203400",
    "end": "204200"
  },
  {
    "text": "database in this example we don't expect",
    "start": "204200",
    "end": "206440"
  },
  {
    "text": "our data to change so we're just going",
    "start": "206440",
    "end": "208120"
  },
  {
    "text": "to take one and then subscribe to it so",
    "start": "208120",
    "end": "210200"
  },
  {
    "text": "we don't have a long running",
    "start": "210200",
    "end": "211280"
  },
  {
    "text": "subscription and then we'll pass the",
    "start": "211280",
    "end": "213480"
  },
  {
    "text": "data from the subscription to the Topo",
    "start": "213480",
    "end": "215599"
  },
  {
    "text": "chart function back in the app you can",
    "start": "215599",
    "end": "218200"
  },
  {
    "text": "see we get this really cool 3D",
    "start": "218200",
    "end": "220120"
  },
  {
    "text": "interactive chart based on our data and",
    "start": "220120",
    "end": "222239"
  },
  {
    "text": "Firebase and there's a ton of ways you",
    "start": "222239",
    "end": "224120"
  },
  {
    "text": "can customize this so make sure to check",
    "start": "224120",
    "end": "225799"
  },
  {
    "text": "out the plotly docs and the community",
    "start": "225799",
    "end": "227720"
  },
  {
    "text": "for more inspiration on what you can do",
    "start": "227720",
    "end": "230560"
  },
  {
    "text": "so the last type of chart that we'll",
    "start": "230560",
    "end": "231879"
  },
  {
    "start": "231000",
    "end": "355000"
  },
  {
    "text": "build is a chart that can actually",
    "start": "231879",
    "end": "234040"
  },
  {
    "text": "update its appearance based on real-time",
    "start": "234040",
    "end": "236000"
  },
  {
    "text": "data for this example I have some user",
    "start": "236000",
    "end": "238280"
  },
  {
    "text": "rankings that will rank a user based on",
    "start": "238280",
    "end": "240599"
  },
  {
    "text": "their abilities as an analyst designer",
    "start": "240599",
    "end": "242879"
  },
  {
    "text": "or developer then we're going to",
    "start": "242879",
    "end": "245120"
  },
  {
    "text": "visualize this data on a Turner chart",
    "start": "245120",
    "end": "247480"
  },
  {
    "text": "which is basically just a triangle that",
    "start": "247480",
    "end": "249760"
  },
  {
    "text": "compares three different types of data",
    "start": "249760",
    "end": "252239"
  },
  {
    "text": "first we're going to add a function to",
    "start": "252239",
    "end": "253760"
  },
  {
    "text": "our service that will allow us to make",
    "start": "253760",
    "end": "255599"
  },
  {
    "text": "this update in Firebase it just",
    "start": "255599",
    "end": "257440"
  },
  {
    "text": "references a single data point and",
    "start": "257440",
    "end": "259479"
  },
  {
    "text": "updates it with some new",
    "start": "259479",
    "end": "261079"
  },
  {
    "text": "data then in the component we're going",
    "start": "261079",
    "end": "263479"
  },
  {
    "text": "to subscribe to the data in NG on a nit",
    "start": "263479",
    "end": "267040"
  },
  {
    "text": "but before we pass the data to the",
    "start": "267040",
    "end": "268440"
  },
  {
    "text": "function we're going to Pro mer the",
    "start": "268440",
    "end": "270080"
  },
  {
    "text": "chart existing in that element then",
    "start": "270080",
    "end": "272360"
  },
  {
    "text": "we'll go ahead and call the function",
    "start": "272360",
    "end": "274000"
  },
  {
    "text": "that builds the chart but before we get",
    "start": "274000",
    "end": "276720"
  },
  {
    "text": "there let's create a function that will",
    "start": "276720",
    "end": "278240"
  },
  {
    "text": "just randomize the data for a certain",
    "start": "278240",
    "end": "280039"
  },
  {
    "text": "data point then you can attach this",
    "start": "280039",
    "end": "281759"
  },
  {
    "text": "function to a click event so the user",
    "start": "281759",
    "end": "283320"
  },
  {
    "text": "can randomize the data just with a click",
    "start": "283320",
    "end": "285080"
  },
  {
    "text": "of a",
    "start": "285080",
    "end": "286039"
  },
  {
    "text": "button now let's build this Turner chart",
    "start": "286039",
    "end": "289960"
  },
  {
    "text": "we start by passing it The Element as",
    "start": "289960",
    "end": "291800"
  },
  {
    "text": "usual then we map each of the three",
    "start": "291800",
    "end": "294080"
  },
  {
    "text": "categories down to an array of its",
    "start": "294080",
    "end": "296000"
  },
  {
    "text": "values in most cases you'll need to map",
    "start": "296000",
    "end": "298039"
  },
  {
    "text": "your data down to an array for to work",
    "start": "298039",
    "end": "300160"
  },
  {
    "text": "with any kind of data chart the rest of",
    "start": "300160",
    "end": "302479"
  },
  {
    "text": "the code is mostly just presentational",
    "start": "302479",
    "end": "304360"
  },
  {
    "text": "so we just add a few options to give it",
    "start": "304360",
    "end": "306160"
  },
  {
    "text": "some nice looking Styles plotly has a",
    "start": "306160",
    "end": "308720"
  },
  {
    "text": "big library of example so you can",
    "start": "308720",
    "end": "310360"
  },
  {
    "text": "usually find a good starting chart for",
    "start": "310360",
    "end": "312199"
  },
  {
    "text": "most",
    "start": "312199",
    "end": "313280"
  },
  {
    "text": "situations now back in the app if we",
    "start": "313280",
    "end": "315400"
  },
  {
    "text": "click the button that says realtime",
    "start": "315400",
    "end": "316840"
  },
  {
    "text": "update we can see the red circle moving",
    "start": "316840",
    "end": "319039"
  },
  {
    "text": "around the screen that's because it's",
    "start": "319039",
    "end": "320639"
  },
  {
    "text": "actually being updated in the back end",
    "start": "320639",
    "end": "322199"
  },
  {
    "text": "in",
    "start": "322199",
    "end": "324400"
  },
  {
    "text": "Firebase that's it for realtime charts",
    "start": "325280",
    "end": "327639"
  },
  {
    "text": "with plotly and Firebase if this video",
    "start": "327639",
    "end": "329840"
  },
  {
    "text": "helped you please like And subscribe and",
    "start": "329840",
    "end": "331880"
  },
  {
    "text": "if you want help building your own",
    "start": "331880",
    "end": "333120"
  },
  {
    "text": "features consider becoming a pro",
    "start": "333120",
    "end": "335000"
  },
  {
    "text": "subscriber at angular firebase.com",
    "start": "335000",
    "end": "336680"
  },
  {
    "text": "you'll receive a free copy of my book as",
    "start": "336680",
    "end": "339039"
  },
  {
    "text": "well as one-on-one project Consulting",
    "start": "339039",
    "end": "341280"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "341280",
    "end": "342919"
  },
  {
    "text": "next time",
    "start": "342919",
    "end": "346120"
  },
  {
    "text": "[Music]",
    "start": "347300",
    "end": "352328"
  }
]