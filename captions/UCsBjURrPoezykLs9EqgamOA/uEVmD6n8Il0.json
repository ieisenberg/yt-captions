[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "in this video we'll look at seven",
    "start": "160",
    "end": "2000"
  },
  {
    "text": "different ways to deploy",
    "start": "2000",
    "end": "3439"
  },
  {
    "text": "a server side application i built this",
    "start": "3439",
    "end": "5600"
  },
  {
    "text": "api with node.js",
    "start": "5600",
    "end": "6960"
  },
  {
    "text": "and now i'm ready to share it with the",
    "start": "6960",
    "end": "8480"
  },
  {
    "text": "world but one does not simply deploy an",
    "start": "8480",
    "end": "10880"
  },
  {
    "text": "app to production",
    "start": "10880",
    "end": "11840"
  },
  {
    "text": "there's all kinds of different ways to",
    "start": "11840",
    "end": "13120"
  },
  {
    "text": "get the job done with trade-offs between",
    "start": "13120",
    "end": "15040"
  },
  {
    "text": "cost complexity and scalability",
    "start": "15040",
    "end": "17279"
  },
  {
    "text": "on the surface deployment seems like it",
    "start": "17279",
    "end": "19199"
  },
  {
    "text": "should be easy we just need a computer",
    "start": "19199",
    "end": "21039"
  },
  {
    "text": "to host the app which we connect to the",
    "start": "21039",
    "end": "22720"
  },
  {
    "text": "internet so it can handle requests from",
    "start": "22720",
    "end": "24400"
  },
  {
    "text": "all of our users",
    "start": "24400",
    "end": "25359"
  },
  {
    "text": "but resources are limited and that means",
    "start": "25359",
    "end": "27199"
  },
  {
    "text": "we need to synchronize many computers",
    "start": "27199",
    "end": "29199"
  },
  {
    "text": "all over the world",
    "start": "29199",
    "end": "30080"
  },
  {
    "text": "just to keep things running fast by the",
    "start": "30080",
    "end": "31920"
  },
  {
    "text": "end of this video you'll be able to",
    "start": "31920",
    "end": "33440"
  },
  {
    "text": "analyze the trade-offs like a cto to",
    "start": "33440",
    "end": "35680"
  },
  {
    "text": "choose the best deployment strategy for",
    "start": "35680",
    "end": "37440"
  },
  {
    "text": "your server side application",
    "start": "37440",
    "end": "38960"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "38960",
    "end": "40559"
  },
  {
    "text": "then let's jump right into it",
    "start": "40559",
    "end": "42079"
  },
  {
    "start": "42000",
    "end": "100000"
  },
  {
    "text": "first of all let's look at some of the",
    "start": "42079",
    "end": "43680"
  },
  {
    "text": "features in this node.js application",
    "start": "43680",
    "end": "45840"
  },
  {
    "text": "it requires node 16 which is the current",
    "start": "45840",
    "end": "48160"
  },
  {
    "text": "bleeding edge version and that means",
    "start": "48160",
    "end": "49680"
  },
  {
    "text": "wherever we deploy",
    "start": "49680",
    "end": "50719"
  },
  {
    "text": "needs to support that exact version of",
    "start": "50719",
    "end": "52719"
  },
  {
    "text": "node it provides a basic rest api built",
    "start": "52719",
    "end": "55440"
  },
  {
    "text": "with the express js framework nothing",
    "start": "55440",
    "end": "57520"
  },
  {
    "text": "too special",
    "start": "57520",
    "end": "58239"
  },
  {
    "text": "but we want these endpoints to have",
    "start": "58239",
    "end": "59760"
  },
  {
    "text": "extremely fast response times",
    "start": "59760",
    "end": "61600"
  },
  {
    "text": "one of the endpoints though creates a",
    "start": "61600",
    "end": "63280"
  },
  {
    "text": "websocket connection with the client",
    "start": "63280",
    "end": "65198"
  },
  {
    "text": "that means that the connection between",
    "start": "65199",
    "end": "66720"
  },
  {
    "text": "the client and server needs to stay",
    "start": "66720",
    "end": "68640"
  },
  {
    "text": "open for a long time that'll come into",
    "start": "68640",
    "end": "70479"
  },
  {
    "text": "play later because not every deployment",
    "start": "70479",
    "end": "72320"
  },
  {
    "text": "strategy",
    "start": "72320",
    "end": "72880"
  },
  {
    "text": "supports long-lived connections like",
    "start": "72880",
    "end": "74640"
  },
  {
    "text": "that now one other important feature of",
    "start": "74640",
    "end": "76640"
  },
  {
    "text": "this server",
    "start": "76640",
    "end": "77280"
  },
  {
    "text": "is that it's stateless that means it",
    "start": "77280",
    "end": "78960"
  },
  {
    "text": "doesn't store any persistent data in",
    "start": "78960",
    "end": "80960"
  },
  {
    "text": "memory or on the disk",
    "start": "80960",
    "end": "82320"
  },
  {
    "text": "that's needed between different http",
    "start": "82320",
    "end": "84400"
  },
  {
    "text": "requests anything related to the",
    "start": "84400",
    "end": "86000"
  },
  {
    "text": "application state would be stored in a",
    "start": "86000",
    "end": "87920"
  },
  {
    "text": "dedicated database",
    "start": "87920",
    "end": "89119"
  },
  {
    "text": "now to run this app on our local machine",
    "start": "89119",
    "end": "91200"
  },
  {
    "text": "we use the npm start command made",
    "start": "91200",
    "end": "93200"
  },
  {
    "text": "available in the package",
    "start": "93200",
    "end": "94560"
  },
  {
    "text": "json file now the question becomes how",
    "start": "94560",
    "end": "96880"
  },
  {
    "text": "do we do the same thing for a computer",
    "start": "96880",
    "end": "98720"
  },
  {
    "text": "that's accessible to the greater",
    "start": "98720",
    "end": "100240"
  },
  {
    "start": "100000",
    "end": "167000"
  },
  {
    "text": "internet the first option",
    "start": "100240",
    "end": "101680"
  },
  {
    "text": "is to use your own hardware you might",
    "start": "101680",
    "end": "103360"
  },
  {
    "text": "have an old pc laying around or maybe",
    "start": "103360",
    "end": "105360"
  },
  {
    "text": "you want to invest in your own server",
    "start": "105360",
    "end": "107040"
  },
  {
    "text": "rack or you can even use a 100",
    "start": "107040",
    "end": "108799"
  },
  {
    "text": "raspberry pi like i showed in this video",
    "start": "108799",
    "end": "110880"
  },
  {
    "text": "this was actually a common way to deploy",
    "start": "110880",
    "end": "112640"
  },
  {
    "text": "a web application 15",
    "start": "112640",
    "end": "114000"
  },
  {
    "text": "years ago because back in those days the",
    "start": "114000",
    "end": "116079"
  },
  {
    "text": "cloud didn't exist yet",
    "start": "116079",
    "end": "117439"
  },
  {
    "text": "almost every startup today will use the",
    "start": "117439",
    "end": "119119"
  },
  {
    "text": "cloud because it's convenient and",
    "start": "119119",
    "end": "120640"
  },
  {
    "text": "inexpensive but deploying to your own",
    "start": "120640",
    "end": "122320"
  },
  {
    "text": "hardware has some unique advantages",
    "start": "122320",
    "end": "124240"
  },
  {
    "text": "most importantly you own your",
    "start": "124240",
    "end": "125759"
  },
  {
    "text": "infrastructure it's not owned by a tech",
    "start": "125759",
    "end": "127600"
  },
  {
    "text": "company",
    "start": "127600",
    "end": "128000"
  },
  {
    "text": "like amazon or google who can sync you",
    "start": "128000",
    "end": "130000"
  },
  {
    "text": "at any moment if they don't like the cut",
    "start": "130000",
    "end": "131680"
  },
  {
    "text": "of your jip",
    "start": "131680",
    "end": "132400"
  },
  {
    "text": "but managing your own hardware is a",
    "start": "132400",
    "end": "134000"
  },
  {
    "text": "major pain not only do you need to think",
    "start": "134000",
    "end": "135760"
  },
  {
    "text": "about the server configuration itself",
    "start": "135760",
    "end": "137520"
  },
  {
    "text": "but you also have to worry about things",
    "start": "137520",
    "end": "138800"
  },
  {
    "text": "like electricity",
    "start": "138800",
    "end": "139840"
  },
  {
    "text": "air conditioning natural disasters and",
    "start": "139840",
    "end": "142080"
  },
  {
    "text": "things like that",
    "start": "142080",
    "end": "142879"
  },
  {
    "text": "if the electricity or internet goes out",
    "start": "142879",
    "end": "144959"
  },
  {
    "text": "then your website goes down another",
    "start": "144959",
    "end": "146720"
  },
  {
    "text": "challenge is that if you're an",
    "start": "146720",
    "end": "147760"
  },
  {
    "text": "individual working out of your garage",
    "start": "147760",
    "end": "149280"
  },
  {
    "text": "you'll need to request a static ip",
    "start": "149280",
    "end": "151280"
  },
  {
    "text": "address from your internet service",
    "start": "151280",
    "end": "152800"
  },
  {
    "text": "provider",
    "start": "152800",
    "end": "153280"
  },
  {
    "text": "if they don't give you one then you're",
    "start": "153280",
    "end": "154640"
  },
  {
    "text": "pretty much screwed now as your app",
    "start": "154640",
    "end": "156319"
  },
  {
    "text": "grows in popularity",
    "start": "156319",
    "end": "157440"
  },
  {
    "text": "the only way to scale is to buy more",
    "start": "157440",
    "end": "159519"
  },
  {
    "text": "computers and ideally those computers",
    "start": "159519",
    "end": "161680"
  },
  {
    "text": "are located",
    "start": "161680",
    "end": "162480"
  },
  {
    "text": "in different parts of the world which",
    "start": "162480",
    "end": "163840"
  },
  {
    "text": "means you'll also want an international",
    "start": "163840",
    "end": "165599"
  },
  {
    "text": "real estate portfolio",
    "start": "165599",
    "end": "166959"
  },
  {
    "text": "luckily there is an easier way to deploy",
    "start": "166959",
    "end": "169120"
  },
  {
    "start": "167000",
    "end": "246000"
  },
  {
    "text": "a node.js application and it's called",
    "start": "169120",
    "end": "171200"
  },
  {
    "text": "the cloud",
    "start": "171200",
    "end": "172000"
  },
  {
    "text": "i'm going to focus on google cloud",
    "start": "172000",
    "end": "173599"
  },
  {
    "text": "platform for this video but keep in mind",
    "start": "173599",
    "end": "175599"
  },
  {
    "text": "that there are many different cloud",
    "start": "175599",
    "end": "176959"
  },
  {
    "text": "providers out there",
    "start": "176959",
    "end": "177920"
  },
  {
    "text": "offering similar services one option for",
    "start": "177920",
    "end": "180319"
  },
  {
    "text": "deploying to the cloud",
    "start": "180319",
    "end": "181440"
  },
  {
    "text": "is to use compute engine to create a",
    "start": "181440",
    "end": "183280"
  },
  {
    "text": "virtual machine which is basically just",
    "start": "183280",
    "end": "185280"
  },
  {
    "text": "a computer in the cloud",
    "start": "185280",
    "end": "186560"
  },
  {
    "text": "that you pay for by the hour and every",
    "start": "186560",
    "end": "188319"
  },
  {
    "text": "customer on google cloud gets one free",
    "start": "188319",
    "end": "190319"
  },
  {
    "text": "micro instance per month so the cost to",
    "start": "190319",
    "end": "192319"
  },
  {
    "text": "get started in the cloud is way lower",
    "start": "192319",
    "end": "194239"
  },
  {
    "text": "than if you were to buy your own",
    "start": "194239",
    "end": "195680"
  },
  {
    "text": "physical hardware",
    "start": "195680",
    "end": "196720"
  },
  {
    "text": "after creating a new vm on compute",
    "start": "196720",
    "end": "198400"
  },
  {
    "text": "engine it'll take a few steps to get",
    "start": "198400",
    "end": "200239"
  },
  {
    "text": "your app deployed",
    "start": "200239",
    "end": "201360"
  },
  {
    "text": "first you'll need to ssh into it to",
    "start": "201360",
    "end": "203760"
  },
  {
    "text": "interact with the operating system",
    "start": "203760",
    "end": "205519"
  },
  {
    "text": "install your preferred node.js version",
    "start": "205519",
    "end": "207440"
  },
  {
    "text": "then clone your source code to the file",
    "start": "207440",
    "end": "209200"
  },
  {
    "text": "system from there you can start the",
    "start": "209200",
    "end": "210480"
  },
  {
    "text": "application",
    "start": "210480",
    "end": "211280"
  },
  {
    "text": "then go to the firewall settings and",
    "start": "211280",
    "end": "213200"
  },
  {
    "text": "open up port 8080 so it can be accessed",
    "start": "213200",
    "end": "215680"
  },
  {
    "text": "on the internet and now technically your",
    "start": "215680",
    "end": "217599"
  },
  {
    "text": "app is deployed but there are a lot of",
    "start": "217599",
    "end": "219440"
  },
  {
    "text": "things missing here for one you'll need",
    "start": "219440",
    "end": "221120"
  },
  {
    "text": "to reserve a static ip address",
    "start": "221120",
    "end": "223040"
  },
  {
    "text": "then update your dns settings to point a",
    "start": "223040",
    "end": "225280"
  },
  {
    "text": "custom domain to it in addition you'll",
    "start": "225280",
    "end": "227280"
  },
  {
    "text": "need to manage your own ssl certificate",
    "start": "227280",
    "end": "229519"
  },
  {
    "text": "to serve it over https and another",
    "start": "229519",
    "end": "232080"
  },
  {
    "text": "problem",
    "start": "232080",
    "end": "232640"
  },
  {
    "text": "is that it's not going to scale",
    "start": "232640",
    "end": "233840"
  },
  {
    "text": "automatically once the cpu and memory",
    "start": "233840",
    "end": "236159"
  },
  {
    "text": "has been fully utilized the app will",
    "start": "236159",
    "end": "238000"
  },
  {
    "text": "just stop working we could address that",
    "start": "238000",
    "end": "239680"
  },
  {
    "text": "by bringing in",
    "start": "239680",
    "end": "240480"
  },
  {
    "text": "nginx or setting up load balancers but",
    "start": "240480",
    "end": "242959"
  },
  {
    "text": "it's a lot of extra configuration work",
    "start": "242959",
    "end": "244799"
  },
  {
    "text": "that most people don't want to deal with",
    "start": "244799",
    "end": "246480"
  },
  {
    "start": "246000",
    "end": "345000"
  },
  {
    "text": "so the next option we'll look at",
    "start": "246480",
    "end": "248000"
  },
  {
    "text": "is the app engine standard environment",
    "start": "248000",
    "end": "249840"
  },
  {
    "text": "for node.js which is a platform as a",
    "start": "249840",
    "end": "252400"
  },
  {
    "text": "service",
    "start": "252400",
    "end": "252959"
  },
  {
    "text": "it makes it incredibly easy to get our",
    "start": "252959",
    "end": "254799"
  },
  {
    "text": "local node app to a production server",
    "start": "254799",
    "end": "256959"
  },
  {
    "text": "and the cloud fully manages the virtual",
    "start": "256959",
    "end": "258799"
  },
  {
    "text": "machines which means your app scales",
    "start": "258799",
    "end": "260639"
  },
  {
    "text": "automatically as more traffic comes in",
    "start": "260639",
    "end": "262880"
  },
  {
    "text": "all that manual configuration we had to",
    "start": "262880",
    "end": "264479"
  },
  {
    "text": "do in the virtual machine is unnecessary",
    "start": "264479",
    "end": "266479"
  },
  {
    "text": "in app engine",
    "start": "266479",
    "end": "267280"
  },
  {
    "text": "because it's pre-configured to scale",
    "start": "267280",
    "end": "268960"
  },
  {
    "text": "popular types of applications",
    "start": "268960",
    "end": "270800"
  },
  {
    "text": "first we install the google cloud sdk on",
    "start": "270800",
    "end": "273199"
  },
  {
    "text": "our local system",
    "start": "273199",
    "end": "274240"
  },
  {
    "text": "second we create an app.yaml file in the",
    "start": "274240",
    "end": "276639"
  },
  {
    "text": "root of the project",
    "start": "276639",
    "end": "277600"
  },
  {
    "text": "inside the file we specify the runtime",
    "start": "277600",
    "end": "279680"
  },
  {
    "text": "as node 14. we can also use this file to",
    "start": "279680",
    "end": "282400"
  },
  {
    "text": "customize the hosting behavior",
    "start": "282400",
    "end": "284000"
  },
  {
    "text": "and set limits on how the infrastructure",
    "start": "284000",
    "end": "285759"
  },
  {
    "text": "will scale then the third step is to use",
    "start": "285759",
    "end": "287919"
  },
  {
    "text": "the gcloud app deploy command which will",
    "start": "287919",
    "end": "290080"
  },
  {
    "text": "upload the local code to the cloud",
    "start": "290080",
    "end": "292000"
  },
  {
    "text": "then look for the npm start command in",
    "start": "292000",
    "end": "293919"
  },
  {
    "text": "the package json",
    "start": "293919",
    "end": "295040"
  },
  {
    "text": "to run the application then it provides",
    "start": "295040",
    "end": "296960"
  },
  {
    "text": "a url where the actual hosted app can be",
    "start": "296960",
    "end": "299360"
  },
  {
    "text": "accessed and notice how it's http secure",
    "start": "299360",
    "end": "301840"
  },
  {
    "text": "because google manages the ssl",
    "start": "301840",
    "end": "303759"
  },
  {
    "text": "certificate for you",
    "start": "303759",
    "end": "304880"
  },
  {
    "text": "in addition app engine provides task",
    "start": "304880",
    "end": "306880"
  },
  {
    "text": "queues cron jobs",
    "start": "306880",
    "end": "308160"
  },
  {
    "text": "login and a bunch of other tools that",
    "start": "308160",
    "end": "310080"
  },
  {
    "text": "you wouldn't have in a normal vm",
    "start": "310080",
    "end": "311840"
  },
  {
    "text": "it's also important to point out that",
    "start": "311840",
    "end": "313440"
  },
  {
    "text": "app engine is a persistent server which",
    "start": "313440",
    "end": "315600"
  },
  {
    "text": "means it's capable of handling long live",
    "start": "315600",
    "end": "317600"
  },
  {
    "text": "connections like websockets and it's way",
    "start": "317600",
    "end": "319759"
  },
  {
    "text": "easier to get your app online compared",
    "start": "319759",
    "end": "321759"
  },
  {
    "text": "to a regular vm",
    "start": "321759",
    "end": "323120"
  },
  {
    "text": "but here's the catch the reason it's",
    "start": "323120",
    "end": "324720"
  },
  {
    "text": "called the standard environment is",
    "start": "324720",
    "end": "326160"
  },
  {
    "text": "because you have no control",
    "start": "326160",
    "end": "327440"
  },
  {
    "text": "over the runtime itself that makes it",
    "start": "327440",
    "end": "329280"
  },
  {
    "text": "easier for google to scale",
    "start": "329280",
    "end": "330960"
  },
  {
    "text": "but if you have custom runtime",
    "start": "330960",
    "end": "332320"
  },
  {
    "text": "dependencies or a version of node that's",
    "start": "332320",
    "end": "334240"
  },
  {
    "text": "not supported then you won't be able to",
    "start": "334240",
    "end": "335840"
  },
  {
    "text": "use it on the free tier",
    "start": "335840",
    "end": "337120"
  },
  {
    "text": "now although app engine standard is free",
    "start": "337120",
    "end": "339039"
  },
  {
    "text": "initially it becomes more and more",
    "start": "339039",
    "end": "340639"
  },
  {
    "text": "expensive as you scale up",
    "start": "340639",
    "end": "342160"
  },
  {
    "text": "and there may be less expensive",
    "start": "342160",
    "end": "343520"
  },
  {
    "text": "serverless options as we'll see later",
    "start": "343520",
    "end": "345440"
  },
  {
    "start": "345000",
    "end": "383000"
  },
  {
    "text": "the next option though is the app engine",
    "start": "345440",
    "end": "347520"
  },
  {
    "text": "flexible environment the primary",
    "start": "347520",
    "end": "349120"
  },
  {
    "text": "difference",
    "start": "349120",
    "end": "349680"
  },
  {
    "text": "is that instead of a sandboxed",
    "start": "349680",
    "end": "351199"
  },
  {
    "text": "environment you have full control over",
    "start": "351199",
    "end": "352880"
  },
  {
    "text": "the environment with docker",
    "start": "352880",
    "end": "354400"
  },
  {
    "text": "that means you can install any version",
    "start": "354400",
    "end": "355840"
  },
  {
    "text": "of node.js that you'd like along with",
    "start": "355840",
    "end": "357600"
  },
  {
    "text": "any other low-level system dependencies",
    "start": "357600",
    "end": "359840"
  },
  {
    "text": "but at the same time the cloud will",
    "start": "359840",
    "end": "361520"
  },
  {
    "text": "still automatically scale those vms up",
    "start": "361520",
    "end": "363680"
  },
  {
    "text": "or down based on the incoming traffic",
    "start": "363680",
    "end": "365680"
  },
  {
    "text": "and again this is called a platform as a",
    "start": "365680",
    "end": "367600"
  },
  {
    "text": "service and is very similar to things",
    "start": "367600",
    "end": "369440"
  },
  {
    "text": "like heroku",
    "start": "369440",
    "end": "370400"
  },
  {
    "text": "or elastic bean stock on aws all you",
    "start": "370400",
    "end": "372960"
  },
  {
    "text": "have to do is change the runtime to flex",
    "start": "372960",
    "end": "375280"
  },
  {
    "text": "in the app.yaml file",
    "start": "375280",
    "end": "376800"
  },
  {
    "text": "then add a docker file to the root of",
    "start": "376800",
    "end": "378639"
  },
  {
    "text": "the project app engine will",
    "start": "378639",
    "end": "380160"
  },
  {
    "text": "automatically manage the docker image",
    "start": "380160",
    "end": "382000"
  },
  {
    "text": "and containers for you",
    "start": "382000",
    "end": "383440"
  },
  {
    "start": "383000",
    "end": "421000"
  },
  {
    "text": "but in some cases developers want more",
    "start": "383440",
    "end": "385440"
  },
  {
    "text": "control to orchestrate exactly how their",
    "start": "385440",
    "end": "387759"
  },
  {
    "text": "infrastructure scales",
    "start": "387759",
    "end": "388960"
  },
  {
    "text": "and that's where kubernetes comes in i",
    "start": "388960",
    "end": "390800"
  },
  {
    "text": "once heard a wise quote about kubernetes",
    "start": "390800",
    "end": "392720"
  },
  {
    "text": "that went something like you don't",
    "start": "392720",
    "end": "394160"
  },
  {
    "text": "[ __ ] need kubernetes",
    "start": "394160",
    "end": "395440"
  },
  {
    "text": "and i think that's true for the vast",
    "start": "395440",
    "end": "396800"
  },
  {
    "text": "majority of developers out there if you",
    "start": "396800",
    "end": "398400"
  },
  {
    "text": "remember earlier deploying to a regular",
    "start": "398400",
    "end": "400319"
  },
  {
    "text": "vm",
    "start": "400319",
    "end": "400800"
  },
  {
    "text": "requires a lot of configuration",
    "start": "400800",
    "end": "402400"
  },
  {
    "text": "kubernetes also requires a lot of",
    "start": "402400",
    "end": "404160"
  },
  {
    "text": "configuration",
    "start": "404160",
    "end": "405039"
  },
  {
    "text": "but provides a predictable framework for",
    "start": "405039",
    "end": "406960"
  },
  {
    "text": "scaling your infrastructure",
    "start": "406960",
    "end": "408240"
  },
  {
    "text": "it's popular for large teams who have",
    "start": "408240",
    "end": "410080"
  },
  {
    "text": "extreme demands on their infrastructure",
    "start": "410080",
    "end": "411919"
  },
  {
    "text": "apps like robinhood and pokemon go use",
    "start": "411919",
    "end": "414319"
  },
  {
    "text": "kubernetes behind the scenes",
    "start": "414319",
    "end": "416000"
  },
  {
    "text": "but if you're just deploying a little",
    "start": "416000",
    "end": "417280"
  },
  {
    "text": "side project then kubernetes is probably",
    "start": "417280",
    "end": "419599"
  },
  {
    "text": "way too expensive and complicated",
    "start": "419599",
    "end": "421440"
  },
  {
    "start": "421000",
    "end": "497000"
  },
  {
    "text": "but at the other end of the complexity",
    "start": "421440",
    "end": "423599"
  },
  {
    "text": "and cost spectrum we have",
    "start": "423599",
    "end": "425039"
  },
  {
    "text": "serverless functions just like the app",
    "start": "425039",
    "end": "427120"
  },
  {
    "text": "engine standard environment",
    "start": "427120",
    "end": "428400"
  },
  {
    "text": "cloud functions provide a set runtime",
    "start": "428400",
    "end": "430880"
  },
  {
    "text": "and allow you to deploy your code",
    "start": "430880",
    "end": "432319"
  },
  {
    "text": "without ever having to think about the",
    "start": "432319",
    "end": "433759"
  },
  {
    "text": "underlying infrastructure",
    "start": "433759",
    "end": "435039"
  },
  {
    "text": "in fact you can just copy and paste your",
    "start": "435039",
    "end": "436720"
  },
  {
    "text": "code directly into the ui to deploy it",
    "start": "436720",
    "end": "439039"
  },
  {
    "text": "the primary difference here compared to",
    "start": "439039",
    "end": "440639"
  },
  {
    "text": "something like app engine",
    "start": "440639",
    "end": "441840"
  },
  {
    "text": "is that our servers are ephemeral or",
    "start": "441840",
    "end": "443840"
  },
  {
    "text": "short-lived and that allows google to",
    "start": "443840",
    "end": "445680"
  },
  {
    "text": "bill us for the exact amount of",
    "start": "445680",
    "end": "447120"
  },
  {
    "text": "resources that we use instead of paying",
    "start": "447120",
    "end": "449199"
  },
  {
    "text": "a fixed monthly price for a server",
    "start": "449199",
    "end": "451120"
  },
  {
    "text": "we pay a tiny amount each time a",
    "start": "451120",
    "end": "453280"
  },
  {
    "text": "function is invoked in addition you can",
    "start": "453280",
    "end": "455199"
  },
  {
    "text": "trigger cloud functions based on many",
    "start": "455199",
    "end": "457039"
  },
  {
    "text": "different events that happen in the",
    "start": "457039",
    "end": "458240"
  },
  {
    "text": "cloud like when a record is updated in a",
    "start": "458240",
    "end": "460319"
  },
  {
    "text": "database or when a file is uploaded to a",
    "start": "460319",
    "end": "462479"
  },
  {
    "text": "storage bucket and that makes it much",
    "start": "462479",
    "end": "464000"
  },
  {
    "text": "easier to run background jobs compared",
    "start": "464000",
    "end": "466000"
  },
  {
    "text": "to other approaches cloud functions are",
    "start": "466000",
    "end": "467840"
  },
  {
    "text": "a very easy and inexpensive way to",
    "start": "467840",
    "end": "469759"
  },
  {
    "text": "deploy a node app but there are a few",
    "start": "469759",
    "end": "471440"
  },
  {
    "text": "caveats that you need to be aware of",
    "start": "471440",
    "end": "473120"
  },
  {
    "text": "in our case we have an endpoint that",
    "start": "473120",
    "end": "474800"
  },
  {
    "text": "needs to support websockets",
    "start": "474800",
    "end": "476479"
  },
  {
    "text": "however because cloud functions are",
    "start": "476479",
    "end": "478080"
  },
  {
    "text": "short-lived we can't really implement",
    "start": "478080",
    "end": "479919"
  },
  {
    "text": "web sockets in them",
    "start": "479919",
    "end": "480960"
  },
  {
    "text": "another issue you might run into is",
    "start": "480960",
    "end": "482800"
  },
  {
    "text": "something called the cold start time",
    "start": "482800",
    "end": "484560"
  },
  {
    "text": "when a function is first allocated in",
    "start": "484560",
    "end": "486240"
  },
  {
    "text": "the cloud it might take a little while",
    "start": "486240",
    "end": "488080"
  },
  {
    "text": "to get things set up and produce a very",
    "start": "488080",
    "end": "490080"
  },
  {
    "text": "high response time on the initial",
    "start": "490080",
    "end": "491599"
  },
  {
    "text": "request",
    "start": "491599",
    "end": "492319"
  },
  {
    "text": "another drawback is the fact that you",
    "start": "492319",
    "end": "494080"
  },
  {
    "text": "have no control over the runtime when",
    "start": "494080",
    "end": "496160"
  },
  {
    "text": "using a serverless function",
    "start": "496160",
    "end": "497680"
  },
  {
    "start": "497000",
    "end": "554000"
  },
  {
    "text": "but there's actually one more deployment",
    "start": "497680",
    "end": "499360"
  },
  {
    "text": "option we can use to get around this",
    "start": "499360",
    "end": "500800"
  },
  {
    "text": "limitation called cloud run",
    "start": "500800",
    "end": "502479"
  },
  {
    "text": "it works just like a serverless function",
    "start": "502479",
    "end": "504479"
  },
  {
    "text": "but instead of using a predefined",
    "start": "504479",
    "end": "506160"
  },
  {
    "text": "runtime you can customize it by",
    "start": "506160",
    "end": "507840"
  },
  {
    "text": "containerizing your application with",
    "start": "507840",
    "end": "509599"
  },
  {
    "text": "docker",
    "start": "509599",
    "end": "510080"
  },
  {
    "text": "allowing us to specify the bleeding edge",
    "start": "510080",
    "end": "512080"
  },
  {
    "text": "version of node.js",
    "start": "512080",
    "end": "513200"
  },
  {
    "text": "along with any other low-level",
    "start": "513200",
    "end": "514479"
  },
  {
    "text": "dependencies that we might need once",
    "start": "514479",
    "end": "516000"
  },
  {
    "text": "we're able to run this app with docker",
    "start": "516000",
    "end": "517839"
  },
  {
    "text": "we can then upload the image to the",
    "start": "517839",
    "end": "519599"
  },
  {
    "text": "container registry then use the image to",
    "start": "519599",
    "end": "521919"
  },
  {
    "text": "create a new cloud run deployment and",
    "start": "521919",
    "end": "523680"
  },
  {
    "text": "now we have all the benefits of",
    "start": "523680",
    "end": "524959"
  },
  {
    "text": "serverless like automatic scaling",
    "start": "524959",
    "end": "526959"
  },
  {
    "text": "and pay-as-you-go pricing while also",
    "start": "526959",
    "end": "528880"
  },
  {
    "text": "having a lot more control over the",
    "start": "528880",
    "end": "530720"
  },
  {
    "text": "underlying server and as an",
    "start": "530720",
    "end": "532160"
  },
  {
    "text": "added bonus we can set a minimum number",
    "start": "532160",
    "end": "534240"
  },
  {
    "text": "of instances to reduce the cold start",
    "start": "534240",
    "end": "536240"
  },
  {
    "text": "time",
    "start": "536240",
    "end": "536560"
  },
  {
    "text": "although that comes at a higher cost and",
    "start": "536560",
    "end": "538480"
  },
  {
    "text": "with that we have seven different ways",
    "start": "538480",
    "end": "540240"
  },
  {
    "text": "to deploy",
    "start": "540240",
    "end": "540959"
  },
  {
    "text": "a node.js application if you want to see",
    "start": "540959",
    "end": "542959"
  },
  {
    "text": "some of these deployment options in",
    "start": "542959",
    "end": "544399"
  },
  {
    "text": "action",
    "start": "544399",
    "end": "544800"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "544800",
    "end": "546560"
  },
  {
    "text": "fireship io to get access to my full",
    "start": "546560",
    "end": "548800"
  },
  {
    "text": "courses thanks for watching and i will",
    "start": "548800",
    "end": "550959"
  },
  {
    "text": "see you in the next one",
    "start": "550959",
    "end": "555519"
  }
]