[
  {
    "text": "20-19 has been an important year for the",
    "start": "79",
    "end": "2580"
  },
  {
    "text": "way developers handle online payments in",
    "start": "2580",
    "end": "4680"
  },
  {
    "text": "September banks in the EU started",
    "start": "4680",
    "end": "6870"
  },
  {
    "text": "rolling out strong customer",
    "start": "6870",
    "end": "7799"
  },
  {
    "text": "authentication this means that if you",
    "start": "7799",
    "end": "9840"
  },
  {
    "text": "have customers in the EU they may need",
    "start": "9840",
    "end": "11519"
  },
  {
    "text": "to log into their bank's website to",
    "start": "11519",
    "end": "13259"
  },
  {
    "text": "authorize a payment before it can be",
    "start": "13259",
    "end": "14790"
  },
  {
    "text": "processed in today's video we'll look at",
    "start": "14790",
    "end": "17100"
  },
  {
    "text": "two different strategies you can use",
    "start": "17100",
    "end": "18420"
  },
  {
    "text": "with stripe to accept payments in your",
    "start": "18420",
    "end": "20100"
  },
  {
    "text": "app both of which are fully compatible",
    "start": "20100",
    "end": "21630"
  },
  {
    "text": "with this 3d secure process if you're",
    "start": "21630",
    "end": "24000"
  },
  {
    "text": "new here like and subscribe and check",
    "start": "24000",
    "end": "25380"
  },
  {
    "text": "out the stripe payments master course",
    "start": "25380",
    "end": "27029"
  },
  {
    "text": "for everything you need to know about",
    "start": "27029",
    "end": "28439"
  },
  {
    "text": "building a payment system in today's",
    "start": "28439",
    "end": "30630"
  },
  {
    "text": "video we'll be looking at how to handle",
    "start": "30630",
    "end": "32460"
  },
  {
    "text": "one-time payments the easy way to get",
    "start": "32460",
    "end": "34380"
  },
  {
    "text": "paid is with stripe checkout it can be",
    "start": "34380",
    "end": "36510"
  },
  {
    "text": "implemented with Xero back-end code but",
    "start": "36510",
    "end": "38340"
  },
  {
    "text": "has limited options for customization",
    "start": "38340",
    "end": "40110"
  },
  {
    "text": "when we're done with that we'll look at",
    "start": "40110",
    "end": "42120"
  },
  {
    "text": "a more complex approach that combines",
    "start": "42120",
    "end": "43890"
  },
  {
    "text": "stripe elements with the payment intents",
    "start": "43890",
    "end": "45750"
  },
  {
    "text": "API and that will give us full control",
    "start": "45750",
    "end": "47309"
  },
  {
    "text": "over the payment flow and user",
    "start": "47309",
    "end": "49050"
  },
  {
    "text": "experience to get started you'll need to",
    "start": "49050",
    "end": "51329"
  },
  {
    "text": "have a stripe account and then you'll",
    "start": "51329",
    "end": "52739"
  },
  {
    "text": "also want some kind of nodejs back-end",
    "start": "52739",
    "end": "54899"
  },
  {
    "text": "will be using firebase cloud functions",
    "start": "54899",
    "end": "56640"
  },
  {
    "text": "for this video but feel free to use any",
    "start": "56640",
    "end": "58379"
  },
  {
    "text": "node back-end that you want in the",
    "start": "58379",
    "end": "60420"
  },
  {
    "text": "front-end application we just have a",
    "start": "60420",
    "end": "61980"
  },
  {
    "text": "single product and that is the only",
    "start": "61980",
    "end": "63719"
  },
  {
    "text": "product that the user can buy when they",
    "start": "63719",
    "end": "65700"
  },
  {
    "text": "click the purchase button it will bring",
    "start": "65700",
    "end": "67200"
  },
  {
    "text": "up the stripe checkout UI this is a",
    "start": "67200",
    "end": "69479"
  },
  {
    "text": "checkout flow that is completely handled",
    "start": "69479",
    "end": "71400"
  },
  {
    "text": "by stripe that means you don't have to",
    "start": "71400",
    "end": "72900"
  },
  {
    "text": "handle any of the UI coding yourself",
    "start": "72900",
    "end": "74610"
  },
  {
    "text": "stripe will validate the credit card and",
    "start": "74610",
    "end": "76860"
  },
  {
    "text": "process the payment all inside of this",
    "start": "76860",
    "end": "78540"
  },
  {
    "text": "checkout page and it also handles the 3d",
    "start": "78540",
    "end": "81060"
  },
  {
    "text": "secure authentication process for",
    "start": "81060",
    "end": "82770"
  },
  {
    "text": "customers in Europe if the user does not",
    "start": "82770",
    "end": "84479"
  },
  {
    "text": "complete this process by signing into",
    "start": "84479",
    "end": "86460"
  },
  {
    "text": "their own bank and authorizing the",
    "start": "86460",
    "end": "87810"
  },
  {
    "text": "charge the payment will not go through",
    "start": "87810",
    "end": "89540"
  },
  {
    "text": "when the payment is complete you can",
    "start": "89540",
    "end": "91650"
  },
  {
    "text": "specify a redirect URL and stripe will",
    "start": "91650",
    "end": "94110"
  },
  {
    "text": "redirect the user to a success page",
    "start": "94110",
    "end": "95790"
  },
  {
    "text": "along with the ID of the session so you",
    "start": "95790",
    "end": "97979"
  },
  {
    "text": "can retrieve it if necessary and if the",
    "start": "97979",
    "end": "100140"
  },
  {
    "text": "payment is unsuccessful or if the user",
    "start": "100140",
    "end": "101729"
  },
  {
    "text": "cancels you can go to a separate URL",
    "start": "101729",
    "end": "104100"
  },
  {
    "text": "once you've received a payment from a",
    "start": "104100",
    "end": "106140"
  },
  {
    "text": "user you then need to think about how",
    "start": "106140",
    "end": "107970"
  },
  {
    "text": "you'll actually fulfill their purchase",
    "start": "107970",
    "end": "109439"
  },
  {
    "text": "and this is entirely dependent on how",
    "start": "109439",
    "end": "111479"
  },
  {
    "text": "your business operates one option is to",
    "start": "111479",
    "end": "113460"
  },
  {
    "text": "just go into the stripe dashboard and do",
    "start": "113460",
    "end": "115500"
  },
  {
    "text": "all that stuff manually but we're",
    "start": "115500",
    "end": "117210"
  },
  {
    "text": "developers so we want to do everything",
    "start": "117210",
    "end": "118799"
  },
  {
    "text": "programmatically and the way you do that",
    "start": "118799",
    "end": "120869"
  },
  {
    "text": "with striped checkout is with a web hook",
    "start": "120869",
    "end": "122610"
  },
  {
    "text": "when the checkout process has been",
    "start": "122610",
    "end": "124500"
  },
  {
    "text": "completed successfully stripe can send a",
    "start": "124500",
    "end": "126780"
  },
  {
    "text": "web hook with some data to your back-end",
    "start": "126780",
    "end": "128429"
  },
  {
    "text": "server so that means that you need to",
    "start": "128429",
    "end": "130679"
  },
  {
    "text": "have a server that's accessible over",
    "start": "130679",
    "end": "132480"
  },
  {
    "text": "HTTP",
    "start": "132480",
    "end": "133450"
  },
  {
    "text": "which is very easy to do and a perfect",
    "start": "133450",
    "end": "135340"
  },
  {
    "text": "use case for firebase cloud functions",
    "start": "135340",
    "end": "137349"
  },
  {
    "text": "when your cloud function receives the",
    "start": "137349",
    "end": "138880"
  },
  {
    "text": "webhook it will contain data about the",
    "start": "138880",
    "end": "140680"
  },
  {
    "text": "payment intent and you can use that data",
    "start": "140680",
    "end": "142720"
  },
  {
    "text": "to implement some logic that updates",
    "start": "142720",
    "end": "144640"
  },
  {
    "text": "your database or maybe sends an email to",
    "start": "144640",
    "end": "146590"
  },
  {
    "text": "the user or something along those lines",
    "start": "146590",
    "end": "148209"
  },
  {
    "text": "what's amazing about stripe check out is",
    "start": "148209",
    "end": "150489"
  },
  {
    "text": "that we can build a payment system",
    "start": "150489",
    "end": "151720"
  },
  {
    "text": "without writing a single line of",
    "start": "151720",
    "end": "153250"
  },
  {
    "text": "back-end code to get started you'll",
    "start": "153250",
    "end": "155170"
  },
  {
    "text": "first need a stripe account head over to",
    "start": "155170",
    "end": "157090"
  },
  {
    "text": "the stripe dashboard and then make sure",
    "start": "157090",
    "end": "158590"
  },
  {
    "text": "to flip the switch for development mode",
    "start": "158590",
    "end": "160569"
  },
  {
    "text": "under API keys you'll see a publishable",
    "start": "160569",
    "end": "163120"
  },
  {
    "text": "key this key is perfectly safe to use in",
    "start": "163120",
    "end": "165970"
  },
  {
    "text": "your front-end code however you should",
    "start": "165970",
    "end": "167590"
  },
  {
    "text": "never use the secret key in your",
    "start": "167590",
    "end": "168910"
  },
  {
    "text": "front-end code we'll come back here to",
    "start": "168910",
    "end": "171010"
  },
  {
    "text": "retrieve the secret key when we set up",
    "start": "171010",
    "end": "172450"
  },
  {
    "text": "our web hook on firebase cloud functions",
    "start": "172450",
    "end": "174430"
  },
  {
    "text": "now at this point you should know that",
    "start": "174430",
    "end": "175989"
  },
  {
    "text": "there are two different ways you can use",
    "start": "175989",
    "end": "177310"
  },
  {
    "text": "stripe check out the easiest approach is",
    "start": "177310",
    "end": "179470"
  },
  {
    "text": "to use the client only integration to",
    "start": "179470",
    "end": "181959"
  },
  {
    "text": "use this approach we need to go into the",
    "start": "181959",
    "end": "183610"
  },
  {
    "text": "products tab and create some details",
    "start": "183610",
    "end": "185500"
  },
  {
    "text": "about a product that we want to sell one",
    "start": "185500",
    "end": "187180"
  },
  {
    "text": "of the big limitations with this",
    "start": "187180",
    "end": "188830"
  },
  {
    "text": "approach is that we can't calculate our",
    "start": "188830",
    "end": "190720"
  },
  {
    "text": "pricing dynamically all the data is",
    "start": "190720",
    "end": "192640"
  },
  {
    "text": "static based on the values that we enter",
    "start": "192640",
    "end": "194350"
  },
  {
    "text": "here in the dashboard if you have",
    "start": "194350",
    "end": "196120"
  },
  {
    "text": "dynamic pricing or maybe you offer",
    "start": "196120",
    "end": "197799"
  },
  {
    "text": "discounts on a per user basis you'll",
    "start": "197799",
    "end": "199810"
  },
  {
    "text": "likely want to generate your checkout",
    "start": "199810",
    "end": "201370"
  },
  {
    "text": "sessions on a server that allows you to",
    "start": "201370",
    "end": "203680"
  },
  {
    "text": "generate products and their pricing",
    "start": "203680",
    "end": "205180"
  },
  {
    "text": "based on your own internal logic so",
    "start": "205180",
    "end": "207010"
  },
  {
    "text": "you're not dependent on the products",
    "start": "207010",
    "end": "208510"
  },
  {
    "text": "here in the dashboard we look at how to",
    "start": "208510",
    "end": "210220"
  },
  {
    "text": "do that in the full course but for this",
    "start": "210220",
    "end": "211630"
  },
  {
    "text": "simple use case we'll just stick with",
    "start": "211630",
    "end": "213160"
  },
  {
    "text": "the client only integration after you've",
    "start": "213160",
    "end": "215230"
  },
  {
    "text": "created a product go ahead and add a SKU",
    "start": "215230",
    "end": "217120"
  },
  {
    "text": "to it and then copy that SKU ID from",
    "start": "217120",
    "end": "219640"
  },
  {
    "text": "there we'll go ahead and open up a",
    "start": "219640",
    "end": "220959"
  },
  {
    "text": "terminal session and use npx to create a",
    "start": "220959",
    "end": "223390"
  },
  {
    "text": "new svelte app then inside the source",
    "start": "223390",
    "end": "225640"
  },
  {
    "text": "directory I'll create a component called",
    "start": "225640",
    "end": "227470"
  },
  {
    "text": "product spell now in order to run the",
    "start": "227470",
    "end": "229870"
  },
  {
    "text": "checkout process we need to include",
    "start": "229870",
    "end": "231489"
  },
  {
    "text": "stripe J s in this project instead of",
    "start": "231489",
    "end": "233859"
  },
  {
    "text": "installing stripe with NPM we want to",
    "start": "233859",
    "end": "235810"
  },
  {
    "text": "include a script tag in the head of the",
    "start": "235810",
    "end": "237400"
  },
  {
    "text": "document so head into the public folder",
    "start": "237400",
    "end": "239470"
  },
  {
    "text": "to the index.html and add stripe J s",
    "start": "239470",
    "end": "242230"
  },
  {
    "text": "there this ensures that you always have",
    "start": "242230",
    "end": "244299"
  },
  {
    "text": "the latest version of stripe J s and",
    "start": "244299",
    "end": "245950"
  },
  {
    "text": "also allows stripe to perform things",
    "start": "245950",
    "end": "247750"
  },
  {
    "text": "like fraud detection in the background",
    "start": "247750",
    "end": "249489"
  },
  {
    "text": "from there we can go into our product",
    "start": "249489",
    "end": "251139"
  },
  {
    "text": "components and the first thing we'll",
    "start": "251139",
    "end": "252459"
  },
  {
    "text": "want to do is initialize the stripe SDK",
    "start": "252459",
    "end": "254859"
  },
  {
    "text": "by including the script tag we get a",
    "start": "254859",
    "end": "256750"
  },
  {
    "text": "global namespace of stripe which we can",
    "start": "256750",
    "end": "258700"
  },
  {
    "text": "initialize by passing it the publishable",
    "start": "258700",
    "end": "260500"
  },
  {
    "text": "key from the stripe dashboard and that",
    "start": "260500",
    "end": "262930"
  },
  {
    "text": "is how stripe identifies our account",
    "start": "262930",
    "end": "264520"
  },
  {
    "text": "next we'll declare a few props for the",
    "start": "264520",
    "end": "266830"
  },
  {
    "text": "product name image and SKU now if we",
    "start": "266830",
    "end": "269740"
  },
  {
    "text": "want to redirect the user to the",
    "start": "269740",
    "end": "271030"
  },
  {
    "text": "checkout process all we have to do is",
    "start": "271030",
    "end": "272740"
  },
  {
    "text": "set up an async function and then we'll",
    "start": "272740",
    "end": "274810"
  },
  {
    "text": "wait stripe redirect to checkout you can",
    "start": "274810",
    "end": "277270"
  },
  {
    "text": "add multiple items to the checkout",
    "start": "277270",
    "end": "278620"
  },
  {
    "text": "process and set a quantity for each one",
    "start": "278620",
    "end": "280810"
  },
  {
    "text": "then you'll want to set redirect URLs",
    "start": "280810",
    "end": "283000"
  },
  {
    "text": "for successful payments and cancel",
    "start": "283000",
    "end": "284919"
  },
  {
    "text": "payments if stripe is unable to redirect",
    "start": "284919",
    "end": "287289"
  },
  {
    "text": "the user at all it will throw an error",
    "start": "287289",
    "end": "288699"
  },
  {
    "text": "object so if we get an error we'll just",
    "start": "288699",
    "end": "291039"
  },
  {
    "text": "go ahead and show an alert message for",
    "start": "291039",
    "end": "292539"
  },
  {
    "text": "now and now we just need a UI element",
    "start": "292539",
    "end": "294340"
  },
  {
    "text": "for the user to trigger the checkout",
    "start": "294340",
    "end": "296139"
  },
  {
    "text": "process so we'll go down here to the",
    "start": "296139",
    "end": "297939"
  },
  {
    "text": "template and add a button that fires",
    "start": "297939",
    "end": "300159"
  },
  {
    "text": "this method when clicked and it's also",
    "start": "300159",
    "end": "302409"
  },
  {
    "text": "worth noting that when you're working",
    "start": "302409",
    "end": "303729"
  },
  {
    "text": "with a mountain stripe they're based on",
    "start": "303729",
    "end": "305379"
  },
  {
    "text": "a currencies lowest denomination so an",
    "start": "305379",
    "end": "307810"
  },
  {
    "text": "amount of 1999 would be $19.99 in u.s.",
    "start": "307810",
    "end": "313210"
  },
  {
    "text": "dollars so you'll probably want to",
    "start": "313210",
    "end": "314860"
  },
  {
    "text": "divide the amount by 100 when showing",
    "start": "314860",
    "end": "316840"
  },
  {
    "text": "that in your front-end UI and now we can",
    "start": "316840",
    "end": "320050"
  },
  {
    "text": "use this product component somewhere",
    "start": "320050",
    "end": "321490"
  },
  {
    "text": "else in the application so we'll go into",
    "start": "321490",
    "end": "323229"
  },
  {
    "text": "the app component and then declare the",
    "start": "323229",
    "end": "325180"
  },
  {
    "text": "product there then pass in the props",
    "start": "325180",
    "end": "327129"
  },
  {
    "text": "like the SKU and the amount that we want",
    "start": "327129",
    "end": "329080"
  },
  {
    "text": "to use for this product and now we can",
    "start": "329080",
    "end": "331120"
  },
  {
    "text": "run NPM run dev to serve the app locally",
    "start": "331120",
    "end": "333580"
  },
  {
    "text": "when you click the checkout button it",
    "start": "333580",
    "end": "335500"
  },
  {
    "text": "should redirect the user to the checkout",
    "start": "335500",
    "end": "337029"
  },
  {
    "text": "page with your specific product details",
    "start": "337029",
    "end": "339159"
  },
  {
    "text": "after a payment is submitted you'll be",
    "start": "339159",
    "end": "341229"
  },
  {
    "text": "able to see it on the stripe dashboard",
    "start": "341229",
    "end": "342909"
  },
  {
    "text": "it's from here that you can process",
    "start": "342909",
    "end": "344379"
  },
  {
    "text": "refunds see the risk evaluation download",
    "start": "344379",
    "end": "347020"
  },
  {
    "text": "invoices and all that good stuff",
    "start": "347020",
    "end": "348669"
  },
  {
    "text": "now at this point we've received a",
    "start": "348669",
    "end": "350110"
  },
  {
    "text": "payment from the customer but now we",
    "start": "350110",
    "end": "351460"
  },
  {
    "text": "need to do our part to fulfill the",
    "start": "351460",
    "end": "353050"
  },
  {
    "text": "product when the payment intent has",
    "start": "353050",
    "end": "354849"
  },
  {
    "text": "succeeded stripe will instantly send a",
    "start": "354849",
    "end": "356949"
  },
  {
    "text": "web hook to a URL that we specify the",
    "start": "356949",
    "end": "359589"
  },
  {
    "text": "URL can point to an HTTP cloud function",
    "start": "359589",
    "end": "362050"
  },
  {
    "text": "that will then handle the data for that",
    "start": "362050",
    "end": "363819"
  },
  {
    "text": "payment intent and then fulfill the",
    "start": "363819",
    "end": "365500"
  },
  {
    "text": "product for the user so to get started",
    "start": "365500",
    "end": "368139"
  },
  {
    "text": "on the backend we'll need to initialize",
    "start": "368139",
    "end": "369699"
  },
  {
    "text": "firebase cloud functions by running",
    "start": "369699",
    "end": "371349"
  },
  {
    "text": "firebase and net functions from the",
    "start": "371349",
    "end": "372729"
  },
  {
    "text": "command line and I'll be using",
    "start": "372729",
    "end": "374319"
  },
  {
    "text": "typescript in this project from there",
    "start": "374319",
    "end": "376659"
  },
  {
    "text": "we'll CD into the functions directory",
    "start": "376659",
    "end": "378400"
  },
  {
    "text": "and I'll be using Express Jas cores and",
    "start": "378400",
    "end": "381159"
  },
  {
    "text": "also the stripe SDK and then we'll also",
    "start": "381159",
    "end": "383979"
  },
  {
    "text": "want to install types for stripe and",
    "start": "383979",
    "end": "385930"
  },
  {
    "text": "cores this will give us intellisense for",
    "start": "385930",
    "end": "387849"
  },
  {
    "text": "the entire stripe API which is",
    "start": "387849",
    "end": "389529"
  },
  {
    "text": "incredibly useful when building a",
    "start": "389529",
    "end": "391000"
  },
  {
    "text": "payment system on the backend",
    "start": "391000",
    "end": "392529"
  },
  {
    "text": "now one minor thing we need to do for",
    "start": "392529",
    "end": "394300"
  },
  {
    "text": "typescript is go into the TS config and",
    "start": "394300",
    "end": "396639"
  },
  {
    "text": "use the es next Lib now in the index TS",
    "start": "396639",
    "end": "400120"
  },
  {
    "text": "file",
    "start": "400120",
    "end": "400590"
  },
  {
    "text": "we'll start by initializing stripe by",
    "start": "400590",
    "end": "402389"
  },
  {
    "text": "first importing it and then passing it",
    "start": "402389",
    "end": "404190"
  },
  {
    "text": "the secret API key from the stripe",
    "start": "404190",
    "end": "406200"
  },
  {
    "text": "dashboard you can see I've just",
    "start": "406200",
    "end": "407850"
  },
  {
    "text": "hard-coded it into the source code here",
    "start": "407850",
    "end": "409860"
  },
  {
    "text": "but it's generally a better idea to save",
    "start": "409860",
    "end": "411720"
  },
  {
    "text": "it as an environment variable in your",
    "start": "411720",
    "end": "413400"
  },
  {
    "text": "firebase project from there I'm going to",
    "start": "413400",
    "end": "415770"
  },
  {
    "text": "create an Express j/s app so we can",
    "start": "415770",
    "end": "417840"
  },
  {
    "text": "create multiple API endpoints with a",
    "start": "417840",
    "end": "419730"
  },
  {
    "text": "single cloud function this is",
    "start": "419730",
    "end": "421830"
  },
  {
    "text": "technically optional but if you have a",
    "start": "421830",
    "end": "423330"
  },
  {
    "text": "lot of different payment endpoints on",
    "start": "423330",
    "end": "424889"
  },
  {
    "text": "your back-end it generally helps to use",
    "start": "424889",
    "end": "426630"
  },
  {
    "text": "some sort of HTTP framework to help you",
    "start": "426630",
    "end": "428910"
  },
  {
    "text": "manage that complexity or in the full",
    "start": "428910",
    "end": "431370"
  },
  {
    "text": "stripe course we use something called",
    "start": "431370",
    "end": "432600"
  },
  {
    "text": "callable functions which integrate with",
    "start": "432600",
    "end": "434550"
  },
  {
    "text": "the firebase SDK on the front end to",
    "start": "434550",
    "end": "436169"
  },
  {
    "text": "simplify both the front-end and back-end",
    "start": "436169",
    "end": "437550"
  },
  {
    "text": "code but it's beyond the scope of this",
    "start": "437550",
    "end": "439560"
  },
  {
    "text": "video from there we'll create a post",
    "start": "439560",
    "end": "441510"
  },
  {
    "text": "endpoint for our web hook and inside",
    "start": "441510",
    "end": "444120"
  },
  {
    "text": "this hook the first thing we'll want to",
    "start": "444120",
    "end": "445530"
  },
  {
    "text": "do is validate that it actually came",
    "start": "445530",
    "end": "447240"
  },
  {
    "text": "from stripe and not from some random",
    "start": "447240",
    "end": "448889"
  },
  {
    "text": "hacker on the web we can do that by",
    "start": "448889",
    "end": "450930"
  },
  {
    "text": "looking for a stripe signature header",
    "start": "450930",
    "end": "452700"
  },
  {
    "text": "and then we can use a value called the",
    "start": "452700",
    "end": "454950"
  },
  {
    "text": "endpoint secret to decode the data that",
    "start": "454950",
    "end": "457169"
  },
  {
    "text": "was in that request or webhooks sent",
    "start": "457169",
    "end": "458970"
  },
  {
    "text": "from stripe the stripe SDK has a special",
    "start": "458970",
    "end": "461820"
  },
  {
    "text": "method called web hooks construct event",
    "start": "461820",
    "end": "463889"
  },
  {
    "text": "that takes the body of the request the",
    "start": "463889",
    "end": "466289"
  },
  {
    "text": "stripe signature and the endpoint secret",
    "start": "466289",
    "end": "468300"
  },
  {
    "text": "and combines them all together into some",
    "start": "468300",
    "end": "470340"
  },
  {
    "text": "JSON that we can actually use in our",
    "start": "470340",
    "end": "472050"
  },
  {
    "text": "code now the one thing we're missing is",
    "start": "472050",
    "end": "474180"
  },
  {
    "text": "the actual secret key for this web hook",
    "start": "474180",
    "end": "476070"
  },
  {
    "text": "head over to the stripe dashboard and",
    "start": "476070",
    "end": "478289"
  },
  {
    "text": "create a new web hook the URL should be",
    "start": "478289",
    "end": "480900"
  },
  {
    "text": "the actual location that you've deployed",
    "start": "480900",
    "end": "482580"
  },
  {
    "text": "your firebase function to which in our",
    "start": "482580",
    "end": "484470"
  },
  {
    "text": "case would be our main functions URL",
    "start": "484470",
    "end": "486210"
  },
  {
    "text": "followed by payments slash web hook then",
    "start": "486210",
    "end": "489270"
  },
  {
    "text": "for this demo the actual web hook that",
    "start": "489270",
    "end": "491190"
  },
  {
    "text": "you want to listen to is payment intent",
    "start": "491190",
    "end": "493110"
  },
  {
    "text": "dot succeeded and you can also look at",
    "start": "493110",
    "end": "495120"
  },
  {
    "text": "the payment intent payment failed as",
    "start": "495120",
    "end": "496830"
  },
  {
    "text": "well",
    "start": "496830",
    "end": "497220"
  },
  {
    "text": "now once you've created that web hook go",
    "start": "497220",
    "end": "499260"
  },
  {
    "text": "ahead and grab the secret code and then",
    "start": "499260",
    "end": "501419"
  },
  {
    "text": "paste it into your firebase project and",
    "start": "501419",
    "end": "503370"
  },
  {
    "text": "again that would be better as a firebase",
    "start": "503370",
    "end": "504990"
  },
  {
    "text": "environment variable from there we can",
    "start": "504990",
    "end": "507180"
  },
  {
    "text": "simply set up a switch statement to",
    "start": "507180",
    "end": "508889"
  },
  {
    "text": "handle the type of web hook that was",
    "start": "508889",
    "end": "510510"
  },
  {
    "text": "sent I'm going to leave the code",
    "start": "510510",
    "end": "512400"
  },
  {
    "text": "implementation details up to your",
    "start": "512400",
    "end": "513990"
  },
  {
    "text": "imagination here but you would most",
    "start": "513990",
    "end": "515520"
  },
  {
    "text": "likely update the firestore database or",
    "start": "515520",
    "end": "517709"
  },
  {
    "text": "send an email to a customer or something",
    "start": "517709",
    "end": "519599"
  },
  {
    "text": "along those lines it's entirely",
    "start": "519599",
    "end": "521459"
  },
  {
    "text": "dependent on the business logic of your",
    "start": "521459",
    "end": "523169"
  },
  {
    "text": "app and the product that you sell then",
    "start": "523169",
    "end": "525750"
  },
  {
    "text": "if the payment failed you may want to",
    "start": "525750",
    "end": "527160"
  },
  {
    "text": "send the customer an email saying you",
    "start": "527160",
    "end": "528660"
  },
  {
    "text": "have an open invoice and here is where",
    "start": "528660",
    "end": "530550"
  },
  {
    "text": "to pay it and you now have a full stack",
    "start": "530550",
    "end": "532740"
  },
  {
    "text": "payment solution with stripe no",
    "start": "532740",
    "end": "534400"
  },
  {
    "text": "jas and spelled nice but the main",
    "start": "534400",
    "end": "538510"
  },
  {
    "text": "drawback up striped checkout is that it",
    "start": "538510",
    "end": "540250"
  },
  {
    "text": "offers very few options to customize the",
    "start": "540250",
    "end": "542200"
  },
  {
    "text": "user experience so I want to finish off",
    "start": "542200",
    "end": "544750"
  },
  {
    "text": "this video by giving you a rundown of",
    "start": "544750",
    "end": "546460"
  },
  {
    "text": "how to use the payment intents API along",
    "start": "546460",
    "end": "549040"
  },
  {
    "text": "with stripe elements to not only handle",
    "start": "549040",
    "end": "551020"
  },
  {
    "text": "custom payments but also to handle the",
    "start": "551020",
    "end": "553390"
  },
  {
    "text": "3d secure authentication process if it's",
    "start": "553390",
    "end": "555550"
  },
  {
    "text": "necessary in the spell tap you can see",
    "start": "555550",
    "end": "558100"
  },
  {
    "text": "here that we enter some card details and",
    "start": "558100",
    "end": "559900"
  },
  {
    "text": "then if it needs to go through 3ds",
    "start": "559900",
    "end": "561370"
  },
  {
    "text": "secure stripe will automatically bring",
    "start": "561370",
    "end": "563140"
  },
  {
    "text": "up that 3d secure process in your apps",
    "start": "563140",
    "end": "565150"
  },
  {
    "text": "page so the user never really leaves",
    "start": "565150",
    "end": "567070"
  },
  {
    "text": "your app to finish their payment now",
    "start": "567070",
    "end": "569170"
  },
  {
    "text": "there's a lot more code involved in this",
    "start": "569170",
    "end": "570790"
  },
  {
    "text": "process and we're not going to go",
    "start": "570790",
    "end": "572230"
  },
  {
    "text": "through it line by line instead we'll",
    "start": "572230",
    "end": "574000"
  },
  {
    "text": "look at the implementation of five",
    "start": "574000",
    "end": "575590"
  },
  {
    "text": "different steps that you need to take to",
    "start": "575590",
    "end": "577270"
  },
  {
    "text": "handle payment intense with stripe",
    "start": "577270",
    "end": "578830"
  },
  {
    "text": "elements step one is to create a payment",
    "start": "578830",
    "end": "581260"
  },
  {
    "text": "intent on the back end when the user",
    "start": "581260",
    "end": "583150"
  },
  {
    "text": "signifies an intention to pay you money",
    "start": "583150",
    "end": "585280"
  },
  {
    "text": "when that happens you make a request to",
    "start": "585280",
    "end": "587200"
  },
  {
    "text": "your back-end for a payment intent",
    "start": "587200",
    "end": "588790"
  },
  {
    "text": "object which you can create with the",
    "start": "588790",
    "end": "590500"
  },
  {
    "text": "stripe SDK it takes an amount currency",
    "start": "590500",
    "end": "593230"
  },
  {
    "text": "and some additional optional parameters",
    "start": "593230",
    "end": "595180"
  },
  {
    "text": "as well in your front-end code you'll",
    "start": "595180",
    "end": "597010"
  },
  {
    "text": "need to make a request to this end point",
    "start": "597010",
    "end": "598720"
  },
  {
    "text": "in these felt app we'll handle that with",
    "start": "598720",
    "end": "600700"
  },
  {
    "text": "the on mount lifecycle hook although you",
    "start": "600700",
    "end": "602680"
  },
  {
    "text": "should only create one payment intent",
    "start": "602680",
    "end": "604360"
  },
  {
    "text": "per user session in our case we can",
    "start": "604360",
    "end": "607150"
  },
  {
    "text": "request the payment intent using the",
    "start": "607150",
    "end": "608860"
  },
  {
    "text": "browser fetch API and then take the",
    "start": "608860",
    "end": "610990"
  },
  {
    "text": "response and set it as the payment",
    "start": "610990",
    "end": "613120"
  },
  {
    "text": "intent property on the spelt component",
    "start": "613120",
    "end": "616110"
  },
  {
    "text": "that returns the payment intent from our",
    "start": "616110",
    "end": "618400"
  },
  {
    "text": "server which contains an important value",
    "start": "618400",
    "end": "620110"
  },
  {
    "text": "called the client secret once we have",
    "start": "620110",
    "end": "622600"
  },
  {
    "text": "the client secret we can then move on to",
    "start": "622600",
    "end": "624310"
  },
  {
    "text": "the third step which is collecting the",
    "start": "624310",
    "end": "626140"
  },
  {
    "text": "user's credit card information and",
    "start": "626140",
    "end": "627580"
  },
  {
    "text": "building the actual credit card form",
    "start": "627580",
    "end": "629320"
  },
  {
    "text": "striped elements provides pre-built",
    "start": "629320",
    "end": "631420"
  },
  {
    "text": "widgets that we can use to validate",
    "start": "631420",
    "end": "632710"
  },
  {
    "text": "credit card details on the front end all",
    "start": "632710",
    "end": "634900"
  },
  {
    "text": "we have to do is grab a Dom element with",
    "start": "634900",
    "end": "636880"
  },
  {
    "text": "spelt and then we'll mount the striped",
    "start": "636880",
    "end": "638410"
  },
  {
    "text": "card on that element from there we move",
    "start": "638410",
    "end": "640600"
  },
  {
    "text": "on to step number four which is to",
    "start": "640600",
    "end": "642370"
  },
  {
    "text": "process the payment and that happens",
    "start": "642370",
    "end": "644110"
  },
  {
    "text": "entirely on stripe server not your own",
    "start": "644110",
    "end": "646150"
  },
  {
    "text": "server you do that by calling handle",
    "start": "646150",
    "end": "648400"
  },
  {
    "text": "kart payment and it takes the client",
    "start": "648400",
    "end": "650200"
  },
  {
    "text": "secret that you returned from your own",
    "start": "650200",
    "end": "651760"
  },
  {
    "text": "server along with the card element where",
    "start": "651760",
    "end": "653950"
  },
  {
    "text": "the user entered their card details here",
    "start": "653950",
    "end": "655570"
  },
  {
    "text": "on the front end its return value is an",
    "start": "655570",
    "end": "657580"
  },
  {
    "text": "updated payment intent with any charges",
    "start": "657580",
    "end": "659650"
  },
  {
    "text": "that have been added to that intent so",
    "start": "659650",
    "end": "662200"
  },
  {
    "text": "it takes the payment intent you created",
    "start": "662200",
    "end": "663790"
  },
  {
    "text": "on your back-end the card details the",
    "start": "663790",
    "end": "665710"
  },
  {
    "text": "user entered on the front end and turns",
    "start": "665710",
    "end": "667630"
  },
  {
    "text": "that into an",
    "start": "667630",
    "end": "668320"
  },
  {
    "text": "actual charge that you can fulfill at",
    "start": "668320",
    "end": "670330"
  },
  {
    "text": "that point you can show the user a",
    "start": "670330",
    "end": "671620"
  },
  {
    "text": "confirmation in the UI and then you",
    "start": "671620",
    "end": "673330"
  },
  {
    "text": "should actually fulfill the purchase by",
    "start": "673330",
    "end": "674860"
  },
  {
    "text": "running a web hook just like we did with",
    "start": "674860",
    "end": "676750"
  },
  {
    "text": "the previous example so I'm gonna go",
    "start": "676750",
    "end": "678850"
  },
  {
    "text": "ahead and wrap things up there I hope",
    "start": "678850",
    "end": "680170"
  },
  {
    "text": "that gave you an idea of how to work",
    "start": "680170",
    "end": "681610"
  },
  {
    "text": "with stripe checkout and the payment",
    "start": "681610",
    "end": "683290"
  },
  {
    "text": "intense API and if you're serious about",
    "start": "683290",
    "end": "685090"
  },
  {
    "text": "integrating payments into your",
    "start": "685090",
    "end": "686500"
  },
  {
    "text": "progressive web app and consider",
    "start": "686500",
    "end": "687700"
  },
  {
    "text": "becoming a pro member at fire ship IO to",
    "start": "687700",
    "end": "689620"
  },
  {
    "text": "get access to the full course thanks for",
    "start": "689620",
    "end": "692020"
  },
  {
    "text": "watching and I will talk to you soon",
    "start": "692020",
    "end": "693730"
  },
  {
    "text": "oh I like money",
    "start": "693730",
    "end": "696000"
  },
  {
    "text": "[Music]",
    "start": "696000",
    "end": "703119"
  }
]