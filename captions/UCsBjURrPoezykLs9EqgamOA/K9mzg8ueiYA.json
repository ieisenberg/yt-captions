[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "Pascal a procedural highlevel",
    "start": "199",
    "end": "2280"
  },
  {
    "text": "programming language famous for teaching",
    "start": "2280",
    "end": "4160"
  },
  {
    "text": "a generation of kids from the 70s and '",
    "start": "4160",
    "end": "6000"
  },
  {
    "text": "80s how to code it was created by",
    "start": "6000",
    "end": "7720"
  },
  {
    "text": "Nicholas worth in the late 1960s and",
    "start": "7720",
    "end": "10080"
  },
  {
    "start": "10000",
    "end": "63000"
  },
  {
    "text": "named after French mathematician blae",
    "start": "10080",
    "end": "12040"
  },
  {
    "text": "Pascal it was originally based on the",
    "start": "12040",
    "end": "13759"
  },
  {
    "text": "alol 60 language but expanded its data",
    "start": "13759",
    "end": "16080"
  },
  {
    "text": "structuring abilities allowing",
    "start": "16080",
    "end": "17480"
  },
  {
    "text": "developers to build Dynamic recursive",
    "start": "17480",
    "end": "19400"
  },
  {
    "text": "data structures like trees and graphs it",
    "start": "19400",
    "end": "21480"
  },
  {
    "text": "got its big break when it became the",
    "start": "21480",
    "end": "22880"
  },
  {
    "text": "language of choice on the Apple 2 then",
    "start": "22880",
    "end": "24640"
  },
  {
    "text": "Lisa and the Macintosh and eventually",
    "start": "24640",
    "end": "26760"
  },
  {
    "text": "became the default highle language on",
    "start": "26760",
    "end": "28599"
  },
  {
    "text": "nearly every PC over the years it",
    "start": "28599",
    "end": "30519"
  },
  {
    "text": "evolved into a variety of other dialects",
    "start": "30519",
    "end": "32640"
  },
  {
    "text": "most famously turbo Pascal brought to",
    "start": "32640",
    "end": "34600"
  },
  {
    "text": "you by CP Creator Anders hilburg it was",
    "start": "34600",
    "end": "37160"
  },
  {
    "text": "one of the first languages with its own",
    "start": "37160",
    "end": "38719"
  },
  {
    "text": "full screen IDE and in 1983 you could",
    "start": "38719",
    "end": "41320"
  },
  {
    "text": "buy a copy at Circuit City for only",
    "start": "41320",
    "end": "43520"
  },
  {
    "text": "$49.99 which believe it or not was a",
    "start": "43520",
    "end": "45960"
  },
  {
    "text": "great deal it was used extensively in",
    "start": "45960",
    "end": "47600"
  },
  {
    "text": "education to teach people how to code",
    "start": "47600",
    "end": "49520"
  },
  {
    "text": "but also used to build serious desktop",
    "start": "49520",
    "end": "51440"
  },
  {
    "text": "applications and games such as crisis",
    "start": "51440",
    "end": "53520"
  },
  {
    "text": "Mountain gravity Wars and IBM's alleycat",
    "start": "53520",
    "end": "56559"
  },
  {
    "text": "in modern times its popularity has",
    "start": "56559",
    "end": "58399"
  },
  {
    "text": "declined but Pascal dial like Deli are",
    "start": "58399",
    "end": "61120"
  },
  {
    "text": "still in use today and you might find",
    "start": "61120",
    "end": "62640"
  },
  {
    "text": "its syntax surprisingly familiar to get",
    "start": "62640",
    "end": "64680"
  },
  {
    "start": "63000",
    "end": "162000"
  },
  {
    "text": "started install a compiler like the free",
    "start": "64680",
    "end": "66680"
  },
  {
    "text": "Pascal compiler then create a file",
    "start": "66680",
    "end": "68680"
  },
  {
    "text": "ending in. pasas as an alternative you",
    "start": "68680",
    "end": "71119"
  },
  {
    "text": "might use a dedicated IDE like Lazarus",
    "start": "71119",
    "end": "73479"
  },
  {
    "text": "first we use the program keyword to",
    "start": "73479",
    "end": "75119"
  },
  {
    "text": "define the main entry point for the app",
    "start": "75119",
    "end": "76960"
  },
  {
    "text": "then we add the begin and end keyword",
    "start": "76960",
    "end": "78880"
  },
  {
    "text": "with a period which will execute the",
    "start": "78880",
    "end": "80600"
  },
  {
    "text": "actual code in the program this is like",
    "start": "80600",
    "end": "82200"
  },
  {
    "text": "the main function in many other",
    "start": "82200",
    "end": "83560"
  },
  {
    "text": "languages from here we can use the",
    "start": "83560",
    "end": "85079"
  },
  {
    "text": "built-in right line function to say",
    "start": "85079",
    "end": "87040"
  },
  {
    "text": "hello world Pascal is a procedural",
    "start": "87040",
    "end": "89040"
  },
  {
    "text": "language which means in instructions are",
    "start": "89040",
    "end": "90680"
  },
  {
    "text": "executed in a linear sequence one after",
    "start": "90680",
    "end": "92759"
  },
  {
    "text": "the other const is used to Define",
    "start": "92759",
    "end": "94360"
  },
  {
    "text": "immutable global data while VAR is used",
    "start": "94360",
    "end": "96759"
  },
  {
    "text": "to define values that might change",
    "start": "96759",
    "end": "98280"
  },
  {
    "text": "throughout the execution of the program",
    "start": "98280",
    "end": "99920"
  },
  {
    "text": "variables are strongly typed using a",
    "start": "99920",
    "end": "101920"
  },
  {
    "text": "syntax that looks almost identical to",
    "start": "101920",
    "end": "103560"
  },
  {
    "text": "typescript now our main program can be",
    "start": "103560",
    "end": "105399"
  },
  {
    "text": "organized into subprograms of which",
    "start": "105399",
    "end": "107479"
  },
  {
    "text": "there are functions and procedures",
    "start": "107479",
    "end": "109240"
  },
  {
    "text": "notice how they end with a semicolon and",
    "start": "109240",
    "end": "111000"
  },
  {
    "text": "not a period indicating a subprogram at",
    "start": "111000",
    "end": "113439"
  },
  {
    "text": "first glance they look identical but the",
    "start": "113439",
    "end": "115320"
  },
  {
    "text": "difference is that a function returns a",
    "start": "115320",
    "end": "117119"
  },
  {
    "text": "value while a procedure is only used to",
    "start": "117119",
    "end": "119200"
  },
  {
    "text": "execute code or create side effects like",
    "start": "119200",
    "end": "121560"
  },
  {
    "text": "this is OD function takes an integer as",
    "start": "121560",
    "end": "123479"
  },
  {
    "text": "an argument then returns a Boolean value",
    "start": "123479",
    "end": "126000"
  },
  {
    "text": "we use some conditional logic to",
    "start": "126000",
    "end": "127399"
  },
  {
    "text": "determine that then assign the result to",
    "start": "127399",
    "end": "129319"
  },
  {
    "text": "the function name itself which tells",
    "start": "129319",
    "end": "131000"
  },
  {
    "text": "Pascal to return that value from the",
    "start": "131000",
    "end": "132959"
  },
  {
    "text": "function now we can call the function",
    "start": "132959",
    "end": "134400"
  },
  {
    "text": "from the main program and get a value",
    "start": "134400",
    "end": "136319"
  },
  {
    "text": "back Pascal is also very good at complex",
    "start": "136319",
    "end": "138800"
  },
  {
    "text": "data structuring like we might create a",
    "start": "138800",
    "end": "140480"
  },
  {
    "text": "custom type for a record which is a key",
    "start": "140480",
    "end": "142680"
  },
  {
    "text": "value pair or a dictionary in other",
    "start": "142680",
    "end": "144720"
  },
  {
    "text": "languages from there we can assign that",
    "start": "144720",
    "end": "146400"
  },
  {
    "text": "type to a variable then create records",
    "start": "146400",
    "end": "148360"
  },
  {
    "text": "and access their fields with notation",
    "start": "148360",
    "end": "150560"
  },
  {
    "text": "and now that all the code is in place we",
    "start": "150560",
    "end": "152160"
  },
  {
    "text": "can build the executable with the",
    "start": "152160",
    "end": "153560"
  },
  {
    "text": "compiler this has been Pascal in 100",
    "start": "153560",
    "end": "155920"
  },
  {
    "text": "seconds thanks for watching and I will",
    "start": "155920",
    "end": "157640"
  },
  {
    "text": "see you in the next one",
    "start": "157640",
    "end": "160210"
  },
  {
    "text": "[Music]",
    "start": "160210",
    "end": "163979"
  }
]