[
  {
    "text": "[Music]",
    "start": "0",
    "end": "6319"
  },
  {
    "text": "one of the most exciting trends",
    "start": "6319",
    "end": "8280"
  },
  {
    "text": "happening in web development is the",
    "start": "8280",
    "end": "9780"
  },
  {
    "text": "adoption of web components because they",
    "start": "9780",
    "end": "11610"
  },
  {
    "text": "allow us to build applications that",
    "start": "11610",
    "end": "13170"
  },
  {
    "text": "don't walk us in to a specific framework",
    "start": "13170",
    "end": "14730"
  },
  {
    "text": "or a programming style I'm going to be",
    "start": "14730",
    "end": "16710"
  },
  {
    "text": "using web components in production very",
    "start": "16710",
    "end": "18390"
  },
  {
    "text": "soon so I wanted to share some advanced",
    "start": "18390",
    "end": "19859"
  },
  {
    "text": "concepts that I've learned working with",
    "start": "19859",
    "end": "21449"
  },
  {
    "text": "angular elements and I'll even show you",
    "start": "21449",
    "end": "23220"
  },
  {
    "text": "how to achieve a near perfect white",
    "start": "23220",
    "end": "24539"
  },
  {
    "text": "house performance score with the full",
    "start": "24539",
    "end": "25949"
  },
  {
    "text": "power of angular and firebase in your",
    "start": "25949",
    "end": "27660"
  },
  {
    "text": "Java Script bundle if you're new here",
    "start": "27660",
    "end": "29160"
  },
  {
    "text": "like and subscribe and congrats to",
    "start": "29160",
    "end": "31019"
  },
  {
    "text": "Damian right who's last week's t-shirt",
    "start": "31019",
    "end": "32820"
  },
  {
    "text": "winner but don't worry if you missed out",
    "start": "32820",
    "end": "34320"
  },
  {
    "text": "there's another one of a kind t-shirt",
    "start": "34320",
    "end": "35760"
  },
  {
    "text": "going out this week all you have to do",
    "start": "35760",
    "end": "36989"
  },
  {
    "text": "is leave a comment below over the last",
    "start": "36989",
    "end": "39450"
  },
  {
    "text": "few months I've been building a product",
    "start": "39450",
    "end": "40829"
  },
  {
    "text": "called fire ship IO which is just a",
    "start": "40829",
    "end": "42600"
  },
  {
    "text": "better way for me to deliver my content",
    "start": "42600",
    "end": "44550"
  },
  {
    "text": "to you this project needs to be very",
    "start": "44550",
    "end": "46320"
  },
  {
    "text": "fast in search engine optimized but it",
    "start": "46320",
    "end": "48180"
  },
  {
    "text": "also needs to use firebase for user",
    "start": "48180",
    "end": "49860"
  },
  {
    "text": "authentication and dynamic data the",
    "start": "49860",
    "end": "52170"
  },
  {
    "text": "beauty of web components is that I can",
    "start": "52170",
    "end": "53579"
  },
  {
    "text": "pre render all of my static content and",
    "start": "53579",
    "end": "55440"
  },
  {
    "text": "then bootstrap in custom elements when",
    "start": "55440",
    "end": "57300"
  },
  {
    "text": "they're needed throughout this journey",
    "start": "57300",
    "end": "58920"
  },
  {
    "text": "I've used pretty much every web",
    "start": "58920",
    "end": "60090"
  },
  {
    "text": "component tool that's out there and I",
    "start": "60090",
    "end": "61559"
  },
  {
    "text": "found that angular elements is the most",
    "start": "61559",
    "end": "63210"
  },
  {
    "text": "productive for a larger project but",
    "start": "63210",
    "end": "65070"
  },
  {
    "text": "you'll also want to check out stencil",
    "start": "65070",
    "end": "66450"
  },
  {
    "text": "and lit element which I think are both",
    "start": "66450",
    "end": "67950"
  },
  {
    "text": "very promising",
    "start": "67950",
    "end": "68909"
  },
  {
    "text": "the big advantage of elements is that a",
    "start": "68909",
    "end": "70650"
  },
  {
    "text": "you get the full power of angular and B",
    "start": "70650",
    "end": "72540"
  },
  {
    "text": "your components can share the same",
    "start": "72540",
    "end": "73680"
  },
  {
    "text": "dependency injector tree which means you",
    "start": "73680",
    "end": "75360"
  },
  {
    "text": "can easily share data or functionality",
    "start": "75360",
    "end": "77250"
  },
  {
    "text": "between your custom elements and see the",
    "start": "77250",
    "end": "79229"
  },
  {
    "text": "API is stable and being used in",
    "start": "79229",
    "end": "80700"
  },
  {
    "text": "production at Google today we're going",
    "start": "80700",
    "end": "82770"
  },
  {
    "text": "to build a custom element that can lazy",
    "start": "82770",
    "end": "84659"
  },
  {
    "text": "load an image based on the user scroll",
    "start": "84659",
    "end": "86520"
  },
  {
    "text": "position in the browser when the image",
    "start": "86520",
    "end": "88500"
  },
  {
    "text": "is loading it will show this Facebook",
    "start": "88500",
    "end": "90060"
  },
  {
    "text": "style shimmer placeholder then replace",
    "start": "90060",
    "end": "92040"
  },
  {
    "text": "it with the image when it's fully loaded",
    "start": "92040",
    "end": "93299"
  },
  {
    "text": "now we'll jump into some code but if you",
    "start": "93299",
    "end": "95100"
  },
  {
    "text": "haven't already seen my original angular",
    "start": "95100",
    "end": "96450"
  },
  {
    "text": "elements video you'll want to check that",
    "start": "96450",
    "end": "97710"
  },
  {
    "text": "one out which is a little more basic",
    "start": "97710",
    "end": "99060"
  },
  {
    "text": "level the first thing I want to do is go",
    "start": "99060",
    "end": "101700"
  },
  {
    "text": "into your angular app and then run ng",
    "start": "101700",
    "end": "103530"
  },
  {
    "text": "add at angular elements this will",
    "start": "103530",
    "end": "105990"
  },
  {
    "text": "install the dependencies and also add",
    "start": "105990",
    "end": "107670"
  },
  {
    "text": "the polyfills to ensure that your",
    "start": "107670",
    "end": "108990"
  },
  {
    "text": "elements are compatible with all",
    "start": "108990",
    "end": "110159"
  },
  {
    "text": "browsers then you can go into the app",
    "start": "110159",
    "end": "112350"
  },
  {
    "text": "directory and you'll want to just go",
    "start": "112350",
    "end": "113729"
  },
  {
    "text": "ahead and delete everything except for",
    "start": "113729",
    "end": "115470"
  },
  {
    "text": "the app module you'll also notice I've",
    "start": "115470",
    "end": "117659"
  },
  {
    "text": "generated a couple of regular components",
    "start": "117659",
    "end": "119310"
  },
  {
    "text": "in here as well the first thing I want",
    "start": "119310",
    "end": "121020"
  },
  {
    "text": "to do is register our components as",
    "start": "121020",
    "end": "122790"
  },
  {
    "text": "custom elements I'm assuming angular",
    "start": "122790",
    "end": "125070"
  },
  {
    "text": "will have a better way to do this in the",
    "start": "125070",
    "end": "126240"
  },
  {
    "text": "future but currently we import injector",
    "start": "126240",
    "end": "128310"
  },
  {
    "text": "from angular core and create custom",
    "start": "128310",
    "end": "129929"
  },
  {
    "text": "element from angular elements",
    "start": "129929",
    "end": "131780"
  },
  {
    "text": "now if you want to use your elements",
    "start": "131780",
    "end": "133880"
  },
  {
    "text": "within the context of an angular app you",
    "start": "133880",
    "end": "135620"
  },
  {
    "text": "want to add them to the entry components",
    "start": "135620",
    "end": "137390"
  },
  {
    "text": "array the important thing is that we go",
    "start": "137390",
    "end": "138980"
  },
  {
    "text": "down here to the app module and add the",
    "start": "138980",
    "end": "140750"
  },
  {
    "text": "injector to the constructor if you have",
    "start": "140750",
    "end": "142940"
  },
  {
    "text": "a big project there's probably a whole",
    "start": "142940",
    "end": "144560"
  },
  {
    "text": "bunch of different elements to register",
    "start": "144560",
    "end": "145850"
  },
  {
    "text": "it's the way I like to set this up is to",
    "start": "145850",
    "end": "147620"
  },
  {
    "text": "create an array of tuples so the first",
    "start": "147620",
    "end": "150320"
  },
  {
    "text": "item is the angular class name and then",
    "start": "150320",
    "end": "152060"
  },
  {
    "text": "the second item is the name of the",
    "start": "152060",
    "end": "153920"
  },
  {
    "text": "custom element so that's how you'll",
    "start": "153920",
    "end": "155240"
  },
  {
    "text": "actually use it in the Dom so now we can",
    "start": "155240",
    "end": "157970"
  },
  {
    "text": "loop over these elements and we can",
    "start": "157970",
    "end": "159410"
  },
  {
    "text": "actually de structure them directly in",
    "start": "159410",
    "end": "160970"
  },
  {
    "text": "the for loop which i think is a really",
    "start": "160970",
    "end": "162620"
  },
  {
    "text": "nice-looking piece of JavaScript from",
    "start": "162620",
    "end": "164420"
  },
  {
    "text": "there we can call create custom element",
    "start": "164420",
    "end": "165890"
  },
  {
    "text": "and that gives us a dry way to register",
    "start": "165890",
    "end": "167690"
  },
  {
    "text": "a large number of components now let's",
    "start": "167690",
    "end": "170090"
  },
  {
    "text": "switch gears and see how we can create a",
    "start": "170090",
    "end": "171620"
  },
  {
    "text": "single JavaScript bundle that we can use",
    "start": "171620",
    "end": "173450"
  },
  {
    "text": "outside of angular what you're looking",
    "start": "173450",
    "end": "175730"
  },
  {
    "text": "at here is the build script that I wrote",
    "start": "175730",
    "end": "176900"
  },
  {
    "text": "from my original angular elements video",
    "start": "176900",
    "end": "178700"
  },
  {
    "text": "it just takes all of your production",
    "start": "178700",
    "end": "180709"
  },
  {
    "text": "build files and then concatenates them",
    "start": "180709",
    "end": "182420"
  },
  {
    "text": "into a single file in the public",
    "start": "182420",
    "end": "184370"
  },
  {
    "text": "directory so this works fine but it's",
    "start": "184370",
    "end": "186200"
  },
  {
    "text": "kind of a hack I'd recommend checking",
    "start": "186200",
    "end": "187760"
  },
  {
    "text": "out ngx build plus to extend the default",
    "start": "187760",
    "end": "190340"
  },
  {
    "text": "behavior of the CLI and hopefully the",
    "start": "190340",
    "end": "192170"
  },
  {
    "text": "CLI will just support this",
    "start": "192170",
    "end": "193190"
  },
  {
    "text": "out-of-the-box in the future we'll stick",
    "start": "193190",
    "end": "195470"
  },
  {
    "text": "with the simple approach for now and",
    "start": "195470",
    "end": "196880"
  },
  {
    "text": "I've added a couple of build and serve",
    "start": "196880",
    "end": "198350"
  },
  {
    "text": "scripts to my package JSON it first runs",
    "start": "198350",
    "end": "200930"
  },
  {
    "text": "ng build prod and then it runs the build",
    "start": "200930",
    "end": "203090"
  },
  {
    "text": "script with node so now that we have our",
    "start": "203090",
    "end": "205160"
  },
  {
    "text": "Java Script bundled I'm going to put it",
    "start": "205160",
    "end": "206750"
  },
  {
    "text": "to use and just a static HTML page by",
    "start": "206750",
    "end": "209060"
  },
  {
    "text": "adding it as a script to the head of the",
    "start": "209060",
    "end": "211010"
  },
  {
    "text": "document and you can see down here I'm",
    "start": "211010",
    "end": "212750"
  },
  {
    "text": "using this image lazy custom element",
    "start": "212750",
    "end": "214760"
  },
  {
    "text": "which we'll build here in a few minutes",
    "start": "214760",
    "end": "216160"
  },
  {
    "text": "now I'll go ahead and run a light house",
    "start": "216160",
    "end": "218390"
  },
  {
    "text": "audit and keep in mind I'm also not lazy",
    "start": "218390",
    "end": "220579"
  },
  {
    "text": "loading the images at this point either",
    "start": "220579",
    "end": "222010"
  },
  {
    "text": "we get a first contentful pain in 2.5",
    "start": "222010",
    "end": "224930"
  },
  {
    "text": "seconds and time to interactive is 4",
    "start": "224930",
    "end": "227150"
  },
  {
    "text": "seconds I've also added firebase to my",
    "start": "227150",
    "end": "229489"
  },
  {
    "text": "JavaScript bundle so we have 342",
    "start": "229489",
    "end": "231680"
  },
  {
    "text": "kilobytes here and total that needs to",
    "start": "231680",
    "end": "233510"
  },
  {
    "text": "be loaded before the rest of the page",
    "start": "233510",
    "end": "235010"
  },
  {
    "text": "can render but the great thing about",
    "start": "235010",
    "end": "236480"
  },
  {
    "text": "elements is that we can defer this",
    "start": "236480",
    "end": "238070"
  },
  {
    "text": "script until after the page is rendered",
    "start": "238070",
    "end": "239840"
  },
  {
    "text": "so how do we do that we just go into our",
    "start": "239840",
    "end": "241880"
  },
  {
    "text": "script tag and add defer and we're done",
    "start": "241880",
    "end": "243799"
  },
  {
    "text": "if we run the audit again we get a first",
    "start": "243799",
    "end": "245959"
  },
  {
    "text": "paint in 600 milliseconds which might as",
    "start": "245959",
    "end": "248030"
  },
  {
    "text": "well just be 0 and 3 seconds later we",
    "start": "248030",
    "end": "250100"
  },
  {
    "text": "have the full power of angular and",
    "start": "250100",
    "end": "251329"
  },
  {
    "text": "firebase ready on the page so you can",
    "start": "251329",
    "end": "253220"
  },
  {
    "text": "already get amazing performance with",
    "start": "253220",
    "end": "254480"
  },
  {
    "text": "elements but it's only going to get",
    "start": "254480",
    "end": "255799"
  },
  {
    "text": "better in the next few months here as",
    "start": "255799",
    "end": "257120"
  },
  {
    "text": "angular IV becomes production ready so",
    "start": "257120",
    "end": "259760"
  },
  {
    "text": "that's pretty awesome stuff but I want",
    "start": "259760",
    "end": "261200"
  },
  {
    "text": "to share a few advanced pro tips that",
    "start": "261200",
    "end": "262610"
  },
  {
    "text": "I've learned throughout my experience",
    "start": "262610",
    "end": "263870"
  },
  {
    "text": "working with element",
    "start": "263870",
    "end": "264750"
  },
  {
    "text": "the first thing I'd recommend doing is",
    "start": "264750",
    "end": "266280"
  },
  {
    "text": "disabling angular's automatic change",
    "start": "266280",
    "end": "268080"
  },
  {
    "text": "detection or ng zones which you can do",
    "start": "268080",
    "end": "270240"
  },
  {
    "text": "here in the main TS file the reason for",
    "start": "270240",
    "end": "272490"
  },
  {
    "text": "this is that I've run into some really",
    "start": "272490",
    "end": "273900"
  },
  {
    "text": "hard to debug issues that only happen in",
    "start": "273900",
    "end": "275790"
  },
  {
    "text": "production so you'll find that life is",
    "start": "275790",
    "end": "277290"
  },
  {
    "text": "much easier when you tell the component",
    "start": "277290",
    "end": "278880"
  },
  {
    "text": "explicitly when to re-render now if we",
    "start": "278880",
    "end": "281400"
  },
  {
    "text": "go into the component itself you can see",
    "start": "281400",
    "end": "282660"
  },
  {
    "text": "I have imported everything under the",
    "start": "282660",
    "end": "284190"
  },
  {
    "text": "kitchen sink here from angular core you",
    "start": "284190",
    "end": "286050"
  },
  {
    "text": "won't need all these things in your",
    "start": "286050",
    "end": "286860"
  },
  {
    "text": "elements I just want to show you a few",
    "start": "286860",
    "end": "288330"
  },
  {
    "text": "different techniques at your disposal",
    "start": "288330",
    "end": "289680"
  },
  {
    "text": "and also if you don't want to turn off",
    "start": "289680",
    "end": "291300"
  },
  {
    "text": "zones globally you can do it here at the",
    "start": "291300",
    "end": "292890"
  },
  {
    "text": "component level by doing change",
    "start": "292890",
    "end": "294240"
  },
  {
    "text": "detection strategy on push the next big",
    "start": "294240",
    "end": "297060"
  },
  {
    "text": "decision is whether or not to use the",
    "start": "297060",
    "end": "298530"
  },
  {
    "text": "shadow Dom so the term web components",
    "start": "298530",
    "end": "301080"
  },
  {
    "text": "encompasses a few different features one",
    "start": "301080",
    "end": "302970"
  },
  {
    "text": "of which is obviously custom elements",
    "start": "302970",
    "end": "304770"
  },
  {
    "text": "but another one is the shadow Dom if you",
    "start": "304770",
    "end": "307830"
  },
  {
    "text": "turn the shadow Dom on it means that",
    "start": "307830",
    "end": "309419"
  },
  {
    "text": "your CSS Styles will be encapsulated in",
    "start": "309419",
    "end": "311460"
  },
  {
    "text": "this component that can be a good thing",
    "start": "311460",
    "end": "313020"
  },
  {
    "text": "if you don't want your CSS to bleed out",
    "start": "313020",
    "end": "314460"
  },
  {
    "text": "but it can also make your components",
    "start": "314460",
    "end": "316200"
  },
  {
    "text": "harder to style so it's a trade-off",
    "start": "316200",
    "end": "318000"
  },
  {
    "text": "and the shadow Dom also supports slots",
    "start": "318000",
    "end": "319919"
  },
  {
    "text": "which is something that we'll look at",
    "start": "319919",
    "end": "321150"
  },
  {
    "text": "towards the end of this video now there",
    "start": "321150",
    "end": "323310"
  },
  {
    "text": "are two things that I commonly inject in",
    "start": "323310",
    "end": "324810"
  },
  {
    "text": "the constructor element ref will give us",
    "start": "324810",
    "end": "326820"
  },
  {
    "text": "a reference to the actual Dom api's that",
    "start": "326820",
    "end": "329190"
  },
  {
    "text": "exist on this element the next one is",
    "start": "329190",
    "end": "331710"
  },
  {
    "text": "the change detection ref which allows us",
    "start": "331710",
    "end": "333419"
  },
  {
    "text": "to re-render this component manually",
    "start": "333419",
    "end": "335070"
  },
  {
    "text": "instead of relying on the automatic",
    "start": "335070",
    "end": "336840"
  },
  {
    "text": "change detection because we're",
    "start": "336840",
    "end": "338820"
  },
  {
    "text": "displaying an image we'll have our",
    "start": "338820",
    "end": "340110"
  },
  {
    "text": "custom element behave just like a",
    "start": "340110",
    "end": "341400"
  },
  {
    "text": "regular image tag we'll give it a source",
    "start": "341400",
    "end": "343290"
  },
  {
    "text": "attribute and an alt attribute now the",
    "start": "343290",
    "end": "345840"
  },
  {
    "text": "special thing about our custom element",
    "start": "345840",
    "end": "347280"
  },
  {
    "text": "is that it only displays an image when",
    "start": "347280",
    "end": "349020"
  },
  {
    "text": "it's actually visible in the viewport so",
    "start": "349020",
    "end": "351150"
  },
  {
    "text": "for that we're going to emit our own",
    "start": "351150",
    "end": "352440"
  },
  {
    "text": "custom event called is visible now when",
    "start": "352440",
    "end": "355200"
  },
  {
    "text": "it comes to your internal component",
    "start": "355200",
    "end": "356520"
  },
  {
    "text": "State I recommend keeping the input",
    "start": "356520",
    "end": "358320"
  },
  {
    "text": "values as immutable then you have the",
    "start": "358320",
    "end": "360240"
  },
  {
    "text": "flexibility to manage the state however",
    "start": "360240",
    "end": "361650"
  },
  {
    "text": "you want but here's the pattern that I",
    "start": "361650",
    "end": "363000"
  },
  {
    "text": "find especially effective so we'll",
    "start": "363000",
    "end": "365220"
  },
  {
    "text": "create an object with a couple of",
    "start": "365220",
    "end": "366630"
  },
  {
    "text": "properties on it and we only want to",
    "start": "366630",
    "end": "368700"
  },
  {
    "text": "re-render our component if this state",
    "start": "368700",
    "end": "370290"
  },
  {
    "text": "changes then we'll set up a method here",
    "start": "370290",
    "end": "372060"
  },
  {
    "text": "called set state which takes a key and a",
    "start": "372060",
    "end": "373919"
  },
  {
    "text": "value as its arguments and then we can",
    "start": "373919",
    "end": "376140"
  },
  {
    "text": "go ahead and use the spread syntax to",
    "start": "376140",
    "end": "377580"
  },
  {
    "text": "create a new object and set that as the",
    "start": "377580",
    "end": "379380"
  },
  {
    "text": "new state on the component then we can",
    "start": "379380",
    "end": "381330"
  },
  {
    "text": "guarantee a rerender here by calling",
    "start": "381330",
    "end": "383070"
  },
  {
    "text": "detect changes on the change detection",
    "start": "383070",
    "end": "384690"
  },
  {
    "text": "ref this code might look familiar",
    "start": "384690",
    "end": "386400"
  },
  {
    "text": "because it's inspired by the way react",
    "start": "386400",
    "end": "388200"
  },
  {
    "text": "works contrary to popular belief I do",
    "start": "388200",
    "end": "390360"
  },
  {
    "text": "not hate react overall I found this to",
    "start": "390360",
    "end": "392550"
  },
  {
    "text": "be a very reliable way to work with",
    "start": "392550",
    "end": "394050"
  },
  {
    "text": "elements but there's definitely many",
    "start": "394050",
    "end": "395460"
  },
  {
    "text": "different ways you could do this let's",
    "start": "395460",
    "end": "397410"
  },
  {
    "text": "go ahead and switch over to the HT",
    "start": "397410",
    "end": "398639"
  },
  {
    "text": "and put this to use first we'll set up a",
    "start": "398639",
    "end": "400949"
  },
  {
    "text": "div and if the loaded state is false",
    "start": "400949",
    "end": "403319"
  },
  {
    "text": "then we'll go ahead and show that",
    "start": "403319",
    "end": "404340"
  },
  {
    "text": "placeholder you can check out the full",
    "start": "404340",
    "end": "406139"
  },
  {
    "text": "CSS for that animation in the source",
    "start": "406139",
    "end": "407999"
  },
  {
    "text": "code then we'll set up a figure to wrap",
    "start": "407999",
    "end": "410400"
  },
  {
    "text": "the image itself and we'll only show",
    "start": "410400",
    "end": "412080"
  },
  {
    "text": "this if it's visible based on the user",
    "start": "412080",
    "end": "413939"
  },
  {
    "text": "scroll position on the window then we'll",
    "start": "413939",
    "end": "416520"
  },
  {
    "text": "add an image tag inside of here which",
    "start": "416520",
    "end": "418080"
  },
  {
    "text": "will only be loaded over the network",
    "start": "418080",
    "end": "419759"
  },
  {
    "text": "when this visible property flips to true",
    "start": "419759",
    "end": "421529"
  },
  {
    "text": "just because it's visible doesn't mean",
    "start": "421529",
    "end": "423659"
  },
  {
    "text": "it's loaded yet so we'll also hide the",
    "start": "423659",
    "end": "425400"
  },
  {
    "text": "image until it's fully loaded and then",
    "start": "425400",
    "end": "427139"
  },
  {
    "text": "we'll run an event handler once that",
    "start": "427139",
    "end": "428669"
  },
  {
    "text": "event takes place and the last thing to",
    "start": "428669",
    "end": "430740"
  },
  {
    "text": "make note of is that we're passing our",
    "start": "430740",
    "end": "432240"
  },
  {
    "text": "input source to the actual image source",
    "start": "432240",
    "end": "434460"
  },
  {
    "text": "here so again our custom element feels",
    "start": "434460",
    "end": "436740"
  },
  {
    "text": "just like a regular image tag with some",
    "start": "436740",
    "end": "438449"
  },
  {
    "text": "added benefit so now the challenge is",
    "start": "438449",
    "end": "440759"
  },
  {
    "text": "determining whether or not the user has",
    "start": "440759",
    "end": "442379"
  },
  {
    "text": "scrolled to this element to make that",
    "start": "442379",
    "end": "444449"
  },
  {
    "text": "happen we're going to need to access",
    "start": "444449",
    "end": "445740"
  },
  {
    "text": "some native Dom API s we've already set",
    "start": "445740",
    "end": "448680"
  },
  {
    "text": "up a reference to the native element in",
    "start": "448680",
    "end": "450479"
  },
  {
    "text": "the constructor of this component we can",
    "start": "450479",
    "end": "452819"
  },
  {
    "text": "go ahead and call it here and then we",
    "start": "452819",
    "end": "454199"
  },
  {
    "text": "can call get bounding client rect which",
    "start": "454199",
    "end": "456360"
  },
  {
    "text": "will give us the actual measurements of",
    "start": "456360",
    "end": "458129"
  },
  {
    "text": "that dawn element at the top of the",
    "start": "458129",
    "end": "460229"
  },
  {
    "text": "window is less than or equal to the",
    "start": "460229",
    "end": "461879"
  },
  {
    "text": "window inner height then we know that",
    "start": "461879",
    "end": "463319"
  },
  {
    "text": "that element has been scrolled too and",
    "start": "463319",
    "end": "465120"
  },
  {
    "text": "we also want to check that the element",
    "start": "465120",
    "end": "467039"
  },
  {
    "text": "is not already visible because if it is",
    "start": "467039",
    "end": "468810"
  },
  {
    "text": "and there's no point in running this",
    "start": "468810",
    "end": "470069"
  },
  {
    "text": "code but if it is visible for the first",
    "start": "470069",
    "end": "472199"
  },
  {
    "text": "time then we'll go ahead and run our set",
    "start": "472199",
    "end": "473669"
  },
  {
    "text": "state method which will change the state",
    "start": "473669",
    "end": "475439"
  },
  {
    "text": "and then re render the component another",
    "start": "475439",
    "end": "477659"
  },
  {
    "text": "thing we want to do is emit a custom",
    "start": "477659",
    "end": "479399"
  },
  {
    "text": "event when the element becomes visible",
    "start": "479399",
    "end": "481199"
  },
  {
    "text": "I'll cover the implementation of that in",
    "start": "481199",
    "end": "483330"
  },
  {
    "text": "just a minute so there are two different",
    "start": "483330",
    "end": "485789"
  },
  {
    "text": "situations where we want to calculate",
    "start": "485789",
    "end": "487529"
  },
  {
    "text": "the visibility of the element first when",
    "start": "487529",
    "end": "489719"
  },
  {
    "text": "the component is initialized because if",
    "start": "489719",
    "end": "491849"
  },
  {
    "text": "the element is already in the viewport",
    "start": "491849",
    "end": "493379"
  },
  {
    "text": "then we don't want to wait for the user",
    "start": "493379",
    "end": "494550"
  },
  {
    "text": "to scroll to load it then to listen to",
    "start": "494550",
    "end": "497399"
  },
  {
    "text": "the scroll position we can add host",
    "start": "497399",
    "end": "498899"
  },
  {
    "text": "listener then window : scroll to listen",
    "start": "498899",
    "end": "501449"
  },
  {
    "text": "to the global window scroll event and",
    "start": "501449",
    "end": "503430"
  },
  {
    "text": "when that happens we'll go ahead and",
    "start": "503430",
    "end": "505199"
  },
  {
    "text": "calculate the visibility of the element",
    "start": "505199",
    "end": "507240"
  },
  {
    "text": "so that's how we determine when an",
    "start": "507240",
    "end": "508979"
  },
  {
    "text": "elements visible and also rerender at",
    "start": "508979",
    "end": "511050"
  },
  {
    "text": "when it state changes for the image",
    "start": "511050",
    "end": "513360"
  },
  {
    "text": "itself there's a built-in load event",
    "start": "513360",
    "end": "515099"
  },
  {
    "text": "which will fire when the image is fully",
    "start": "515099",
    "end": "516810"
  },
  {
    "text": "loaded so when that takes place we'll go",
    "start": "516810",
    "end": "518550"
  },
  {
    "text": "ahead and set the loaded state to true",
    "start": "518550",
    "end": "520229"
  },
  {
    "text": "again re rendering the component so the",
    "start": "520229",
    "end": "522779"
  },
  {
    "text": "end result looks like this we start with",
    "start": "522779",
    "end": "524250"
  },
  {
    "text": "a placeholder when the image loads it's",
    "start": "524250",
    "end": "525990"
  },
  {
    "text": "displayed and the placeholder is removed",
    "start": "525990",
    "end": "528019"
  },
  {
    "text": "again the great thing about web",
    "start": "528019",
    "end": "529980"
  },
  {
    "text": "components is that we can interact with",
    "start": "529980",
    "end": "531600"
  },
  {
    "text": "them use",
    "start": "531600",
    "end": "532270"
  },
  {
    "text": "vanilla JavaScript in the Dom so we",
    "start": "532270",
    "end": "534580"
  },
  {
    "text": "could use document query selector to",
    "start": "534580",
    "end": "536080"
  },
  {
    "text": "grab the element and append it somewhere",
    "start": "536080",
    "end": "537910"
  },
  {
    "text": "or change its CSS styles or whatever",
    "start": "537910",
    "end": "540520"
  },
  {
    "text": "by default the internal properties and",
    "start": "540520",
    "end": "542590"
  },
  {
    "text": "methods on the component are not",
    "start": "542590",
    "end": "544030"
  },
  {
    "text": "available when you grab it from the Dom",
    "start": "544030",
    "end": "545530"
  },
  {
    "text": "like this but it can be very useful to",
    "start": "545530",
    "end": "547570"
  },
  {
    "text": "expose a public method that can be used",
    "start": "547570",
    "end": "549550"
  },
  {
    "text": "by the developers working with your",
    "start": "549550",
    "end": "551140"
  },
  {
    "text": "elements for example let's set up a log",
    "start": "551140",
    "end": "553420"
  },
  {
    "text": "method that logs out the internal state",
    "start": "553420",
    "end": "555520"
  },
  {
    "text": "of the component the method that I found",
    "start": "555520",
    "end": "557740"
  },
  {
    "text": "works best although I'd like to see this",
    "start": "557740",
    "end": "559420"
  },
  {
    "text": "improved in future versions of angular",
    "start": "559420",
    "end": "561070"
  },
  {
    "text": "elements is to use the input decorator",
    "start": "561070",
    "end": "563440"
  },
  {
    "text": "the reason we do it this way and not",
    "start": "563440",
    "end": "565240"
  },
  {
    "text": "just attach input to a method is that it",
    "start": "565240",
    "end": "567520"
  },
  {
    "text": "gives us context to this or this",
    "start": "567520",
    "end": "569380"
  },
  {
    "text": "component instance so we can console.log",
    "start": "569380",
    "end": "571870"
  },
  {
    "text": "this state which would otherwise be",
    "start": "571870",
    "end": "573520"
  },
  {
    "text": "undefined if it was a regular method now",
    "start": "573520",
    "end": "576490"
  },
  {
    "text": "another thing that's really useful on",
    "start": "576490",
    "end": "577990"
  },
  {
    "text": "the same note is to emit a custom event",
    "start": "577990",
    "end": "580090"
  },
  {
    "text": "that can be listened to in the browser",
    "start": "580090",
    "end": "582030"
  },
  {
    "text": "so we already have an event you made or",
    "start": "582030",
    "end": "584410"
  },
  {
    "text": "set up on this component and we can emit",
    "start": "584410",
    "end": "586750"
  },
  {
    "text": "through that just like we normally would",
    "start": "586750",
    "end": "587950"
  },
  {
    "text": "an angular and we'll also set up a",
    "start": "587950",
    "end": "590440"
  },
  {
    "text": "custom event in the Dom we'll give that",
    "start": "590440",
    "end": "592690"
  },
  {
    "text": "a name of is visible and then we can",
    "start": "592690",
    "end": "594940"
  },
  {
    "text": "reference our native element and",
    "start": "594940",
    "end": "596410"
  },
  {
    "text": "dispatch the event through it if we go",
    "start": "596410",
    "end": "599080"
  },
  {
    "text": "back to the browser we can now grab this",
    "start": "599080",
    "end": "600880"
  },
  {
    "text": "element from the Dom attach an event",
    "start": "600880",
    "end": "602650"
  },
  {
    "text": "listener to it",
    "start": "602650",
    "end": "603670"
  },
  {
    "text": "and handle it however we want using",
    "start": "603670",
    "end": "605320"
  },
  {
    "text": "vanilla JavaScript or some other",
    "start": "605320",
    "end": "606880"
  },
  {
    "text": "framework so I've set up the is visible",
    "start": "606880",
    "end": "609400"
  },
  {
    "text": "listener and then I'm going to console",
    "start": "609400",
    "end": "610990"
  },
  {
    "text": "like the event when it occurs as soon as",
    "start": "610990",
    "end": "613060"
  },
  {
    "text": "the image becomes visible in the",
    "start": "613060",
    "end": "614320"
  },
  {
    "text": "viewport it logs that custom event to",
    "start": "614320",
    "end": "616390"
  },
  {
    "text": "the console so that takes care of that",
    "start": "616390",
    "end": "618790"
  },
  {
    "text": "the next thing I want to show you is",
    "start": "618790",
    "end": "620170"
  },
  {
    "text": "content projection using slots if you",
    "start": "620170",
    "end": "623080"
  },
  {
    "text": "look at the image on the left here",
    "start": "623080",
    "end": "624160"
  },
  {
    "text": "you'll notice a caption underneath that",
    "start": "624160",
    "end": "625660"
  },
  {
    "text": "has a default header and default caption",
    "start": "625660",
    "end": "627580"
  },
  {
    "text": "if we revisit our static HTML you can",
    "start": "627580",
    "end": "630670"
  },
  {
    "text": "see that I have a couple of spans that",
    "start": "630670",
    "end": "632500"
  },
  {
    "text": "are inside of the Lazy image tags the",
    "start": "632500",
    "end": "634960"
  },
  {
    "text": "spans have a slot attribute which",
    "start": "634960",
    "end": "636760"
  },
  {
    "text": "corresponds to a certain place that",
    "start": "636760",
    "end": "638320"
  },
  {
    "text": "they'll be displayed which will define",
    "start": "638320",
    "end": "639850"
  },
  {
    "text": "inside of our custom element so now I'll",
    "start": "639850",
    "end": "642520"
  },
  {
    "text": "switch over to the component HTML and",
    "start": "642520",
    "end": "644440"
  },
  {
    "text": "we'll go ahead and add a figure caption",
    "start": "644440",
    "end": "646270"
  },
  {
    "text": "then we can include slot tags that have",
    "start": "646270",
    "end": "648820"
  },
  {
    "text": "a specific name that defines where this",
    "start": "648820",
    "end": "650800"
  },
  {
    "text": "content will be displayed this is super",
    "start": "650800",
    "end": "652930"
  },
  {
    "text": "useful when you have components that can",
    "start": "652930",
    "end": "654400"
  },
  {
    "text": "be customized but you don't want the",
    "start": "654400",
    "end": "655840"
  },
  {
    "text": "end-user to have to worry about adding",
    "start": "655840",
    "end": "657490"
  },
  {
    "text": "the required markup to it and if you",
    "start": "657490",
    "end": "659650"
  },
  {
    "text": "want the user to just be able to",
    "start": "659650",
    "end": "660910"
  },
  {
    "text": "transclude some markup inside your",
    "start": "660910",
    "end": "662740"
  },
  {
    "text": "component you can simply drop in a slot",
    "start": "662740",
    "end": "664480"
  },
  {
    "text": "tag that",
    "start": "664480",
    "end": "665300"
  },
  {
    "text": "be considered the default slot and the",
    "start": "665300",
    "end": "666980"
  },
  {
    "text": "user can just pass in whatever HTML they",
    "start": "666980",
    "end": "668930"
  },
  {
    "text": "want and it will be rendered here I'm",
    "start": "668930",
    "end": "670910"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "670910",
    "end": "672110"
  },
  {
    "text": "I have a whole bunch of other ideas for",
    "start": "672110",
    "end": "673700"
  },
  {
    "text": "angular element for future videos so",
    "start": "673700",
    "end": "675709"
  },
  {
    "text": "make sure to LIKE and subscribe and if",
    "start": "675709",
    "end": "677570"
  },
  {
    "text": "you want to take your development to the",
    "start": "677570",
    "end": "678800"
  },
  {
    "text": "next level consider becoming a pro",
    "start": "678800",
    "end": "680570"
  },
  {
    "text": "member at angular firebase com go get",
    "start": "680570",
    "end": "682790"
  },
  {
    "text": "access to my following courses my book",
    "start": "682790",
    "end": "684980"
  },
  {
    "text": "as well as a whole bunch of other",
    "start": "684980",
    "end": "686149"
  },
  {
    "text": "resources designed to help you build and",
    "start": "686149",
    "end": "688160"
  },
  {
    "text": "ship apps faster thanks for watching and",
    "start": "688160",
    "end": "690290"
  },
  {
    "text": "I'll talk to you soon",
    "start": "690290",
    "end": "693040"
  }
]