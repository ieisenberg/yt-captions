[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "svelt it's a javascript tool for",
    "start": "80",
    "end": "2000"
  },
  {
    "text": "building ui components just like react",
    "start": "2000",
    "end": "4080"
  },
  {
    "text": "angular or vue but unlike its peers",
    "start": "4080",
    "end": "6080"
  },
  {
    "text": "would ship a javascript runtime to the",
    "start": "6080",
    "end": "8000"
  },
  {
    "text": "browser to make your code work",
    "start": "8000",
    "end": "9440"
  },
  {
    "text": "svelte is a compiler it converts the",
    "start": "9440",
    "end": "11679"
  },
  {
    "text": "declarative code that you'd love to",
    "start": "11679",
    "end": "12960"
  },
  {
    "text": "write as a developer",
    "start": "12960",
    "end": "14080"
  },
  {
    "text": "into imperative code that works with",
    "start": "14080",
    "end": "15839"
  },
  {
    "text": "native browser apis",
    "start": "15839",
    "end": "17279"
  },
  {
    "text": "as a result you get highly performant",
    "start": "17279",
    "end": "19119"
  },
  {
    "text": "code in a very small package",
    "start": "19119",
    "end": "20800"
  },
  {
    "text": "but most importantly it's the only",
    "start": "20800",
    "end": "22400"
  },
  {
    "text": "javascript framework that's actually",
    "start": "22400",
    "end": "23920"
  },
  {
    "text": "enjoyable to use",
    "start": "23920",
    "end": "26800"
  },
  {
    "start": "27000",
    "end": "48000"
  },
  {
    "text": "we create components in dot spelled",
    "start": "27519",
    "end": "29359"
  },
  {
    "text": "files which contain three main parts",
    "start": "29359",
    "end": "31439"
  },
  {
    "text": "a script for your javascript code which",
    "start": "31439",
    "end": "33440"
  },
  {
    "text": "can also be typescript",
    "start": "33440",
    "end": "34800"
  },
  {
    "text": "a style tag for your css which can also",
    "start": "34800",
    "end": "37200"
  },
  {
    "text": "use a preprocessor like sas and the main",
    "start": "37200",
    "end": "39440"
  },
  {
    "text": "template represented as regular html",
    "start": "39440",
    "end": "42000"
  },
  {
    "text": "but it's no ordinary html it's been",
    "start": "42000",
    "end": "44160"
  },
  {
    "text": "empowered with all kinds of extra syntax",
    "start": "44160",
    "end": "46079"
  },
  {
    "text": "for writing declarative code",
    "start": "46079",
    "end": "47600"
  },
  {
    "text": "need reactive state simply define a",
    "start": "47600",
    "end": "49680"
  },
  {
    "start": "48000",
    "end": "67000"
  },
  {
    "text": "variable with the let keyword then",
    "start": "49680",
    "end": "51360"
  },
  {
    "text": "reference it dynamically in the html",
    "start": "51360",
    "end": "53520"
  },
  {
    "text": "using braces if we want to change the",
    "start": "53520",
    "end": "55280"
  },
  {
    "text": "state we can do that by defining a",
    "start": "55280",
    "end": "56960"
  },
  {
    "text": "function then listen",
    "start": "56960",
    "end": "58000"
  },
  {
    "text": "to an event in the dom with on and bind",
    "start": "58000",
    "end": "60320"
  },
  {
    "text": "the function to it as the handler",
    "start": "60320",
    "end": "62000"
  },
  {
    "text": "now when the value of that variable",
    "start": "62000",
    "end": "63680"
  },
  {
    "text": "changes the component will automatically",
    "start": "63680",
    "end": "65600"
  },
  {
    "text": "re-render to show the updated state",
    "start": "65600",
    "end": "67760"
  },
  {
    "start": "67000",
    "end": "82000"
  },
  {
    "text": "in many cases you'll need to run",
    "start": "67760",
    "end": "69119"
  },
  {
    "text": "conditional logic or loops in your",
    "start": "69119",
    "end": "70799"
  },
  {
    "text": "template",
    "start": "70799",
    "end": "71360"
  },
  {
    "text": "instead of fighting against javascript",
    "start": "71360",
    "end": "72799"
  },
  {
    "text": "functions it empowers you with a syntax",
    "start": "72799",
    "end": "74960"
  },
  {
    "text": "where you can clearly create an if else",
    "start": "74960",
    "end": "76720"
  },
  {
    "text": "statement",
    "start": "76720",
    "end": "77200"
  },
  {
    "text": "or a for each loop when working with a",
    "start": "77200",
    "end": "79200"
  },
  {
    "text": "list now when it comes to",
    "start": "79200",
    "end": "80400"
  },
  {
    "text": "cross-component communication",
    "start": "80400",
    "end": "82000"
  },
  {
    "start": "82000",
    "end": "96000"
  },
  {
    "text": "spelt provides multiple different",
    "start": "82000",
    "end": "83280"
  },
  {
    "text": "strategies for sharing data between",
    "start": "83280",
    "end": "85119"
  },
  {
    "text": "components to pass data from a parent to",
    "start": "85119",
    "end": "87360"
  },
  {
    "text": "child you can use props by adding the",
    "start": "87360",
    "end": "89360"
  },
  {
    "text": "export keyword to a variable and now you",
    "start": "89360",
    "end": "91439"
  },
  {
    "text": "can pass data into this component",
    "start": "91439",
    "end": "93040"
  },
  {
    "text": "and if you have a ton of props you can",
    "start": "93040",
    "end": "94479"
  },
  {
    "text": "use the spread syntax to keep your code",
    "start": "94479",
    "end": "96400"
  },
  {
    "start": "96000",
    "end": "114000"
  },
  {
    "text": "looking fit and healthy",
    "start": "96400",
    "end": "97840"
  },
  {
    "text": "now for more complex component trees you",
    "start": "97840",
    "end": "99759"
  },
  {
    "text": "have a context api just like react",
    "start": "99759",
    "end": "102000"
  },
  {
    "text": "and if that wasn't enough spelt also has",
    "start": "102000",
    "end": "103920"
  },
  {
    "text": "a really nice mechanism called stores",
    "start": "103920",
    "end": "106000"
  },
  {
    "text": "which are like observables that can be",
    "start": "106000",
    "end": "107680"
  },
  {
    "text": "shared anywhere in the component tree",
    "start": "107680",
    "end": "109360"
  },
  {
    "text": "and subscribed to in the template by",
    "start": "109360",
    "end": "111040"
  },
  {
    "text": "putting a dollar sign in front of them",
    "start": "111040",
    "end": "112640"
  },
  {
    "text": "after you've built an awesome ui you can",
    "start": "112640",
    "end": "114479"
  },
  {
    "start": "114000",
    "end": "131000"
  },
  {
    "text": "then use the compiler to convert it to",
    "start": "114479",
    "end": "116479"
  },
  {
    "text": "vanilla javascript",
    "start": "116479",
    "end": "117600"
  },
  {
    "text": "and if you're building a full-blown web",
    "start": "117600",
    "end": "119040"
  },
  {
    "text": "application you can use spelt kit to",
    "start": "119040",
    "end": "121119"
  },
  {
    "text": "quickly implement server-side rendering",
    "start": "121119",
    "end": "122880"
  },
  {
    "text": "routing and code splitting this has been",
    "start": "122880",
    "end": "124880"
  },
  {
    "text": "spelt in 100 seconds",
    "start": "124880",
    "end": "126479"
  },
  {
    "text": "hit the like button if you want to see",
    "start": "126479",
    "end": "127680"
  },
  {
    "text": "more thanks for watching and i will see",
    "start": "127680",
    "end": "129840"
  },
  {
    "text": "you in the next one",
    "start": "129840",
    "end": "133120"
  }
]