[
  {
    "text": "an application programming interface or",
    "start": "240",
    "end": "2560"
  },
  {
    "text": "api is a way for two computers to talk",
    "start": "2560",
    "end": "5279"
  },
  {
    "text": "to each other using an api is just like",
    "start": "5279",
    "end": "7839"
  },
  {
    "text": "using a website in your browser but",
    "start": "7839",
    "end": "9920"
  },
  {
    "text": "instead of clicking buttons and filling",
    "start": "9920",
    "end": "11599"
  },
  {
    "text": "out forms you write code to explicitly",
    "start": "11599",
    "end": "13840"
  },
  {
    "text": "request data from a server for example",
    "start": "13840",
    "end": "16160"
  },
  {
    "text": "we could visit the nasa website to look",
    "start": "16160",
    "end": "18160"
  },
  {
    "text": "at asteroids or we could use their rest",
    "start": "18160",
    "end": "20400"
  },
  {
    "text": "api to request the raw json data that is",
    "start": "20400",
    "end": "23039"
  },
  {
    "text": "shown on the screen now most apis in the",
    "start": "23039",
    "end": "25439"
  },
  {
    "text": "world are restful which means they",
    "start": "25439",
    "end": "27199"
  },
  {
    "text": "follow a set of rules or constraints",
    "start": "27199",
    "end": "29359"
  },
  {
    "text": "known as representational state transfer",
    "start": "29359",
    "end": "31760"
  },
  {
    "text": "which has been the de facto standard for",
    "start": "31760",
    "end": "33600"
  },
  {
    "text": "api development since the early 2000s a",
    "start": "33600",
    "end": "36320"
  },
  {
    "text": "restful api organizes data entities or",
    "start": "36320",
    "end": "39200"
  },
  {
    "text": "resources into a bunch of unique urls",
    "start": "39200",
    "end": "41920"
  },
  {
    "text": "well technically not urls but uris or",
    "start": "41920",
    "end": "44719"
  },
  {
    "text": "uniform resource identifiers that",
    "start": "44719",
    "end": "46800"
  },
  {
    "text": "differentiate different types of data",
    "start": "46800",
    "end": "48640"
  },
  {
    "text": "resources on a server a client can get",
    "start": "48640",
    "end": "51199"
  },
  {
    "text": "data about a resource by making a",
    "start": "51199",
    "end": "53280"
  },
  {
    "text": "request to that endpoint over http the",
    "start": "53280",
    "end": "56079"
  },
  {
    "text": "request message has a very specific",
    "start": "56079",
    "end": "58079"
  },
  {
    "text": "format most importantly the start line",
    "start": "58079",
    "end": "60399"
  },
  {
    "text": "contains the uri that you wish to access",
    "start": "60399",
    "end": "62719"
  },
  {
    "text": "which is preceded by an http verb or",
    "start": "62719",
    "end": "65280"
  },
  {
    "text": "request method which signal your intent",
    "start": "65280",
    "end": "67600"
  },
  {
    "text": "with the resource a get request means",
    "start": "67600",
    "end": "69680"
  },
  {
    "text": "you just want to read the data while",
    "start": "69680",
    "end": "71360"
  },
  {
    "text": "post means you want to create a new",
    "start": "71360",
    "end": "72880"
  },
  {
    "text": "resource patch is for updates delete is",
    "start": "72880",
    "end": "75280"
  },
  {
    "text": "for removing data along with a few other",
    "start": "75280",
    "end": "77360"
  },
  {
    "text": "methods beyond those below the start",
    "start": "77360",
    "end": "79280"
  },
  {
    "text": "line we have headers which contain",
    "start": "79280",
    "end": "80960"
  },
  {
    "text": "metadata about the request the accept",
    "start": "80960",
    "end": "82960"
  },
  {
    "text": "header can tell the server you want the",
    "start": "82960",
    "end": "84400"
  },
  {
    "text": "data in a specific format or the",
    "start": "84400",
    "end": "86240"
  },
  {
    "text": "authorization header can be used to tell",
    "start": "86240",
    "end": "88240"
  },
  {
    "text": "the server that you're actually allowed",
    "start": "88240",
    "end": "89840"
  },
  {
    "text": "to make that request then following the",
    "start": "89840",
    "end": "91759"
  },
  {
    "text": "headers we have the body which contains",
    "start": "91759",
    "end": "93920"
  },
  {
    "text": "a custom payload of data the server will",
    "start": "93920",
    "end": "96079"
  },
  {
    "text": "receive the request message then execute",
    "start": "96079",
    "end": "98079"
  },
  {
    "text": "some code usually to read from a",
    "start": "98079",
    "end": "99759"
  },
  {
    "text": "database that can then be formatted into",
    "start": "99759",
    "end": "101840"
  },
  {
    "text": "a response message the top of the",
    "start": "101840",
    "end": "103680"
  },
  {
    "text": "message contains a status code to tell",
    "start": "103680",
    "end": "105759"
  },
  {
    "text": "the client what happened to their",
    "start": "105759",
    "end": "107119"
  },
  {
    "text": "request codes at the 200 level mean that",
    "start": "107119",
    "end": "109360"
  },
  {
    "text": "things went well at the 400 level it",
    "start": "109360",
    "end": "111600"
  },
  {
    "text": "means something was wrong with your",
    "start": "111600",
    "end": "112960"
  },
  {
    "text": "request and at the 500 level it means",
    "start": "112960",
    "end": "115280"
  },
  {
    "text": "that the server failed after the status",
    "start": "115280",
    "end": "117360"
  },
  {
    "text": "code we then have the response headers",
    "start": "117360",
    "end": "119200"
  },
  {
    "text": "which contain information about the",
    "start": "119200",
    "end": "120799"
  },
  {
    "text": "server that's followed by the response",
    "start": "120799",
    "end": "122719"
  },
  {
    "text": "body which contains the data payload and",
    "start": "122719",
    "end": "124960"
  },
  {
    "text": "is usually formatted in json when",
    "start": "124960",
    "end": "127040"
  },
  {
    "text": "talking about apis now an important part",
    "start": "127040",
    "end": "129360"
  },
  {
    "text": "of this architecture is that it's",
    "start": "129360",
    "end": "130800"
  },
  {
    "text": "stateless which means that the two",
    "start": "130800",
    "end": "132560"
  },
  {
    "text": "parties don't need to store any",
    "start": "132560",
    "end": "134080"
  },
  {
    "text": "information about each other and every",
    "start": "134080",
    "end": "136080"
  },
  {
    "text": "request response cycle is independent",
    "start": "136080",
    "end": "138560"
  },
  {
    "text": "from all other communication and this",
    "start": "138560",
    "end": "140560"
  },
  {
    "text": "leads to well-behaved web applications",
    "start": "140560",
    "end": "142480"
  },
  {
    "text": "that are predictable and reliable this",
    "start": "142480",
    "end": "144560"
  },
  {
    "text": "has been restful apis in 100 seconds if",
    "start": "144560",
    "end": "147280"
  },
  {
    "text": "you enjoyed it leave a comment below",
    "start": "147280",
    "end": "148800"
  },
  {
    "text": "then next week i'll pick out the best",
    "start": "148800",
    "end": "150239"
  },
  {
    "text": "one to win this free t-shirt and now",
    "start": "150239",
    "end": "152480"
  },
  {
    "text": "it's time to go beyond 100 seconds to",
    "start": "152480",
    "end": "154640"
  },
  {
    "text": "build a restful api from scratch the",
    "start": "154640",
    "end": "157280"
  },
  {
    "text": "most popular framework for building",
    "start": "157280",
    "end": "158800"
  },
  {
    "text": "restful apis in node is express.js it's",
    "start": "158800",
    "end": "162000"
  },
  {
    "text": "been around forever and it's very",
    "start": "162000",
    "end": "163599"
  },
  {
    "text": "minimal and easy to learn if you know a",
    "start": "163599",
    "end": "165680"
  },
  {
    "text": "little bit of javascript over the next",
    "start": "165680",
    "end": "167519"
  },
  {
    "text": "few minutes we'll use express to build",
    "start": "167519",
    "end": "169519"
  },
  {
    "text": "our own restful api from scratch you'll",
    "start": "169519",
    "end": "171760"
  },
  {
    "text": "learn how to create different endpoints",
    "start": "171760",
    "end": "173360"
  },
  {
    "text": "for your api we'll also look at slightly",
    "start": "173360",
    "end": "175599"
  },
  {
    "text": "more advanced concepts like middleware",
    "start": "175599",
    "end": "177519"
  },
  {
    "text": "and tools in the cloud for deploying",
    "start": "177519",
    "end": "179120"
  },
  {
    "text": "your api like api gateways to get",
    "start": "179120",
    "end": "181840"
  },
  {
    "text": "started you'll want to open up vs code",
    "start": "181840",
    "end": "183920"
  },
  {
    "text": "to an empty directory you'll need to",
    "start": "183920",
    "end": "185920"
  },
  {
    "text": "have node.js installed and i'm using",
    "start": "185920",
    "end": "188000"
  },
  {
    "text": "version 12 for this video to start a new",
    "start": "188000",
    "end": "190560"
  },
  {
    "text": "node project let's run npm init y from",
    "start": "190560",
    "end": "193440"
  },
  {
    "text": "the command line",
    "start": "193440",
    "end": "194800"
  },
  {
    "text": "this will create a package json and give",
    "start": "194800",
    "end": "197040"
  },
  {
    "text": "us a context for installing packages",
    "start": "197040",
    "end": "199120"
  },
  {
    "text": "that we can use in node like express",
    "start": "199120",
    "end": "201840"
  },
  {
    "text": "let's go ahead and install express using",
    "start": "201840",
    "end": "204000"
  },
  {
    "text": "npm install you'll notice that adds",
    "start": "204000",
    "end": "206080"
  },
  {
    "text": "express to our dependencies in the",
    "start": "206080",
    "end": "208000"
  },
  {
    "text": "package.json file from there we'll need",
    "start": "208000",
    "end": "210400"
  },
  {
    "text": "a file to write our code in so let's",
    "start": "210400",
    "end": "212239"
  },
  {
    "text": "create an index.js file at the top of",
    "start": "212239",
    "end": "215040"
  },
  {
    "text": "that file we'll declare a variable for",
    "start": "215040",
    "end": "217120"
  },
  {
    "text": "app which represents the actual api that",
    "start": "217120",
    "end": "219680"
  },
  {
    "text": "we're building and its value is an",
    "start": "219680",
    "end": "221920"
  },
  {
    "text": "import of the express package which",
    "start": "221920",
    "end": "224400"
  },
  {
    "text": "itself is a function so we'll add",
    "start": "224400",
    "end": "225920"
  },
  {
    "text": "parentheses after it to initialize it",
    "start": "225920",
    "end": "228480"
  },
  {
    "text": "now at this point our api hasn't defined",
    "start": "228480",
    "end": "231040"
  },
  {
    "text": "any endpoints but let's go ahead and run",
    "start": "231040",
    "end": "233360"
  },
  {
    "text": "it anyway the way you fire up your api",
    "start": "233360",
    "end": "235840"
  },
  {
    "text": "on the server is by calling app.listen",
    "start": "235840",
    "end": "238560"
  },
  {
    "text": "that tells it to listen on a specific",
    "start": "238560",
    "end": "240560"
  },
  {
    "text": "port which we've defined as its own",
    "start": "240560",
    "end": "242400"
  },
  {
    "text": "separate variable as 8080. then as an",
    "start": "242400",
    "end": "245360"
  },
  {
    "text": "optional second argument to listen we",
    "start": "245360",
    "end": "247280"
  },
  {
    "text": "can fire a callback to let us know when",
    "start": "247280",
    "end": "249519"
  },
  {
    "text": "the api is ready and we'll just have it",
    "start": "249519",
    "end": "251439"
  },
  {
    "text": "console log the main url we can now run",
    "start": "251439",
    "end": "253680"
  },
  {
    "text": "the api by going to the terminal and",
    "start": "253680",
    "end": "255680"
  },
  {
    "text": "running node period to run that index.js",
    "start": "255680",
    "end": "258720"
  },
  {
    "text": "file and it should console.log it's live",
    "start": "258720",
    "end": "261359"
  },
  {
    "text": "on localhost 8080. if we paste the url",
    "start": "261359",
    "end": "264080"
  },
  {
    "text": "into the browser you can see we get a",
    "start": "264080",
    "end": "265680"
  },
  {
    "text": "message of cannot get that's because we",
    "start": "265680",
    "end": "268240"
  },
  {
    "text": "don't have any api endpoints set up yet",
    "start": "268240",
    "end": "270400"
  },
  {
    "text": "but express is still responding with an",
    "start": "270400",
    "end": "272560"
  },
  {
    "text": "error message in fact you can open up",
    "start": "272560",
    "end": "274800"
  },
  {
    "text": "the network tab in chrome if we look",
    "start": "274800",
    "end": "276880"
  },
  {
    "text": "closely we can see that our server",
    "start": "276880",
    "end": "278800"
  },
  {
    "text": "responded with a 404 status code meaning",
    "start": "278800",
    "end": "281440"
  },
  {
    "text": "that page was not found at this point we",
    "start": "281440",
    "end": "283600"
  },
  {
    "text": "know our api is working but debugging it",
    "start": "283600",
    "end": "286000"
  },
  {
    "text": "in the browser is usually not the best",
    "start": "286000",
    "end": "287840"
  },
  {
    "text": "option there are many different ways we",
    "start": "287840",
    "end": "289440"
  },
  {
    "text": "can access our api we could use curl",
    "start": "289440",
    "end": "291600"
  },
  {
    "text": "from the command line we could install a",
    "start": "291600",
    "end": "293199"
  },
  {
    "text": "vs code extension or we could use a rest",
    "start": "293199",
    "end": "295919"
  },
  {
    "text": "client like insomnia or postman i'm",
    "start": "295919",
    "end": "298479"
  },
  {
    "text": "going to be using insomnia throughout",
    "start": "298479",
    "end": "300080"
  },
  {
    "text": "the rest of this video because it",
    "start": "300080",
    "end": "301520"
  },
  {
    "text": "provides a really nice way to format",
    "start": "301520",
    "end": "303120"
  },
  {
    "text": "your requests and also view a history of",
    "start": "303120",
    "end": "305039"
  },
  {
    "text": "all your interactions from insomnia we",
    "start": "305039",
    "end": "307199"
  },
  {
    "text": "can create a new request then simply",
    "start": "307199",
    "end": "309199"
  },
  {
    "text": "paste in our url",
    "start": "309199",
    "end": "310560"
  },
  {
    "text": "we can easily change the http verb from",
    "start": "310560",
    "end": "313120"
  },
  {
    "text": "the drop down menu here click send and",
    "start": "313120",
    "end": "315520"
  },
  {
    "text": "then get the response in a nicely",
    "start": "315520",
    "end": "317120"
  },
  {
    "text": "formatted developer friendly way we can",
    "start": "317120",
    "end": "319280"
  },
  {
    "text": "even see the timeline here with our",
    "start": "319280",
    "end": "320800"
  },
  {
    "text": "request in yellow and the response in",
    "start": "320800",
    "end": "322880"
  },
  {
    "text": "green but now we need to get back to our",
    "start": "322880",
    "end": "324560"
  },
  {
    "text": "javascript and add an endpoint to the",
    "start": "324560",
    "end": "326560"
  },
  {
    "text": "api we can do that by changing an http",
    "start": "326560",
    "end": "329440"
  },
  {
    "text": "verb to the app instance if you type a",
    "start": "329440",
    "end": "332080"
  },
  {
    "text": "period after app you'll get intellisense",
    "start": "332080",
    "end": "334240"
  },
  {
    "text": "on a bunch of different methods that",
    "start": "334240",
    "end": "336000"
  },
  {
    "text": "live on this object and you'll notice",
    "start": "336000",
    "end": "337680"
  },
  {
    "text": "methods for git post patch etc which",
    "start": "337680",
    "end": "340960"
  },
  {
    "text": "represent different http verbs if we",
    "start": "340960",
    "end": "343520"
  },
  {
    "text": "want to add a get endpoint to the",
    "start": "343520",
    "end": "345280"
  },
  {
    "text": "t-shirt uri we can do that by passing",
    "start": "345280",
    "end": "348800"
  },
  {
    "text": "t-shirt as its first argument",
    "start": "348800",
    "end": "351199"
  },
  {
    "text": "that'll automatically set up our server",
    "start": "351199",
    "end": "352960"
  },
  {
    "text": "with that endpoint then it's our job to",
    "start": "352960",
    "end": "355440"
  },
  {
    "text": "handle a request to it which we do by",
    "start": "355440",
    "end": "358080"
  },
  {
    "text": "passing a callback function as the",
    "start": "358080",
    "end": "359840"
  },
  {
    "text": "second argument whenever a client or end",
    "start": "359840",
    "end": "362800"
  },
  {
    "text": "user requests that url it will fire this",
    "start": "362800",
    "end": "365440"
  },
  {
    "text": "callback function to handle the request",
    "start": "365440",
    "end": "367919"
  },
  {
    "text": "the function itself provides access to",
    "start": "367919",
    "end": "370000"
  },
  {
    "text": "two different objects the request object",
    "start": "370000",
    "end": "372400"
  },
  {
    "text": "and the response object the request is",
    "start": "372400",
    "end": "374720"
  },
  {
    "text": "the incoming data while the response is",
    "start": "374720",
    "end": "377039"
  },
  {
    "text": "the data we want to send back to the",
    "start": "377039",
    "end": "378639"
  },
  {
    "text": "client the most important thing it does",
    "start": "378639",
    "end": "380560"
  },
  {
    "text": "is allow us to send a response back to",
    "start": "380560",
    "end": "382479"
  },
  {
    "text": "the client that response can have a",
    "start": "382479",
    "end": "384160"
  },
  {
    "text": "status code like 200 for an ok response",
    "start": "384160",
    "end": "387520"
  },
  {
    "text": "then we can send a data payload along",
    "start": "387520",
    "end": "389759"
  },
  {
    "text": "with it if we pass a javascript object",
    "start": "389759",
    "end": "392080"
  },
  {
    "text": "as the argument then it will send that",
    "start": "392080",
    "end": "393840"
  },
  {
    "text": "data back as json by default let's go",
    "start": "393840",
    "end": "396720"
  },
  {
    "text": "ahead and save the file then restart the",
    "start": "396720",
    "end": "398960"
  },
  {
    "text": "server from the terminal from insomnia",
    "start": "398960",
    "end": "401199"
  },
  {
    "text": "we can then make a get request to",
    "start": "401199",
    "end": "403199"
  },
  {
    "text": "localhost 8080 t-shirt when we do that",
    "start": "403199",
    "end": "406400"
  },
  {
    "text": "we get a json object back as the",
    "start": "406400",
    "end": "408560"
  },
  {
    "text": "response body with a status code of 200.",
    "start": "408560",
    "end": "411680"
  },
  {
    "text": "that's pretty cool but now let's go back",
    "start": "411680",
    "end": "413440"
  },
  {
    "text": "to our code and add a second endpoint",
    "start": "413440",
    "end": "415919"
  },
  {
    "text": "this time a post endpoint followed by a",
    "start": "415919",
    "end": "418400"
  },
  {
    "text": "slash and a dynamic url parameter that",
    "start": "418400",
    "end": "421440"
  },
  {
    "text": "represents the id of that t-shirt there",
    "start": "421440",
    "end": "424000"
  },
  {
    "text": "might be millions of different t-shirts",
    "start": "424000",
    "end": "425680"
  },
  {
    "text": "on this api and a dynamic url allows us",
    "start": "425680",
    "end": "428560"
  },
  {
    "text": "to handle all of them from a single",
    "start": "428560",
    "end": "430560"
  },
  {
    "text": "function when dealing with a post",
    "start": "430560",
    "end": "432240"
  },
  {
    "text": "request it means that the user is trying",
    "start": "432240",
    "end": "434560"
  },
  {
    "text": "to create new data on the server or",
    "start": "434560",
    "end": "436720"
  },
  {
    "text": "create a new t-shirt in this case first",
    "start": "436720",
    "end": "438720"
  },
  {
    "text": "we need the id which we can get from the",
    "start": "438720",
    "end": "440880"
  },
  {
    "text": "url and its value is made available to",
    "start": "440880",
    "end": "443360"
  },
  {
    "text": "us on the request parameters object",
    "start": "443360",
    "end": "445919"
  },
  {
    "text": "second we also need a logo for the",
    "start": "445919",
    "end": "447759"
  },
  {
    "text": "t-shirt but the logo is contained in the",
    "start": "447759",
    "end": "450479"
  },
  {
    "text": "request body which if you remember from",
    "start": "450479",
    "end": "452720"
  },
  {
    "text": "earlier is a custom data payload",
    "start": "452720",
    "end": "454960"
  },
  {
    "text": "contained in the incoming request in",
    "start": "454960",
    "end": "456880"
  },
  {
    "text": "other words the request object in",
    "start": "456880",
    "end": "458639"
  },
  {
    "text": "express allows us to access information",
    "start": "458639",
    "end": "461520"
  },
  {
    "text": "from the request message like the url",
    "start": "461520",
    "end": "463919"
  },
  {
    "text": "parameters the body the headers etc and",
    "start": "463919",
    "end": "467360"
  },
  {
    "text": "now that we have that information we",
    "start": "467360",
    "end": "468960"
  },
  {
    "text": "could use it to save a new record to the",
    "start": "468960",
    "end": "470720"
  },
  {
    "text": "database or something along those lines",
    "start": "470720",
    "end": "472879"
  },
  {
    "text": "that's beyond the scope of this video",
    "start": "472879",
    "end": "474560"
  },
  {
    "text": "what we'll do for right now is check to",
    "start": "474560",
    "end": "476400"
  },
  {
    "text": "make sure that we have a logo in the",
    "start": "476400",
    "end": "478080"
  },
  {
    "text": "request body and if we don't then we'll",
    "start": "478080",
    "end": "480800"
  },
  {
    "text": "send an error response with a 418 status",
    "start": "480800",
    "end": "483919"
  },
  {
    "text": "code and an error message that we need a",
    "start": "483919",
    "end": "486160"
  },
  {
    "text": "logo",
    "start": "486160",
    "end": "487280"
  },
  {
    "text": "but assuming we do have a valid logo we",
    "start": "487280",
    "end": "489280"
  },
  {
    "text": "can just send a response with a t-shirt",
    "start": "489280",
    "end": "491280"
  },
  {
    "text": "that contains that logo and id now let's",
    "start": "491280",
    "end": "493840"
  },
  {
    "text": "go back to insomnia and we'll make a",
    "start": "493840",
    "end": "495680"
  },
  {
    "text": "post request to that t-shirt endpoint",
    "start": "495680",
    "end": "498000"
  },
  {
    "text": "followed by a unique id that can be",
    "start": "498000",
    "end": "500160"
  },
  {
    "text": "whatever you want then in the body",
    "start": "500160",
    "end": "502080"
  },
  {
    "text": "section we'll go ahead and add a request",
    "start": "502080",
    "end": "504400"
  },
  {
    "text": "body with a format of json and it's just",
    "start": "504400",
    "end": "507199"
  },
  {
    "text": "a json object that contains a logo with",
    "start": "507199",
    "end": "509840"
  },
  {
    "text": "a string value if we send that request",
    "start": "509840",
    "end": "512080"
  },
  {
    "text": "you'll notice we get a 500 error",
    "start": "512080",
    "end": "514320"
  },
  {
    "text": "response which means our api code is",
    "start": "514320",
    "end": "516399"
  },
  {
    "text": "broken so what's going on here it's",
    "start": "516399",
    "end": "518399"
  },
  {
    "text": "telling us we have a runtime error",
    "start": "518399",
    "end": "520159"
  },
  {
    "text": "because we can't destructure the",
    "start": "520159",
    "end": "521680"
  },
  {
    "text": "property logo from the request body the",
    "start": "521680",
    "end": "524080"
  },
  {
    "text": "reason for that is that express does not",
    "start": "524080",
    "end": "526399"
  },
  {
    "text": "parse json in the body by default not",
    "start": "526399",
    "end": "529200"
  },
  {
    "text": "everybody uses express to build a json",
    "start": "529200",
    "end": "531279"
  },
  {
    "text": "api so that's not the default behavior",
    "start": "531279",
    "end": "533680"
  },
  {
    "text": "what we need to do here is set up",
    "start": "533680",
    "end": "535360"
  },
  {
    "text": "middleware that tells express to parse",
    "start": "535360",
    "end": "538000"
  },
  {
    "text": "json before the actual data hits the",
    "start": "538000",
    "end": "541120"
  },
  {
    "text": "function that we're using here to handle",
    "start": "541120",
    "end": "542800"
  },
  {
    "text": "the request when you hear the term",
    "start": "542800",
    "end": "544399"
  },
  {
    "text": "middleware think of shared code that",
    "start": "544399",
    "end": "546160"
  },
  {
    "text": "runs before every endpoint callback that",
    "start": "546160",
    "end": "548240"
  },
  {
    "text": "you've defined very common middleware is",
    "start": "548240",
    "end": "550640"
  },
  {
    "text": "built into express itself we can",
    "start": "550640",
    "end": "552480"
  },
  {
    "text": "refactor our code here a little bit to",
    "start": "552480",
    "end": "554399"
  },
  {
    "text": "make a variable for express and then we",
    "start": "554399",
    "end": "556560"
  },
  {
    "text": "can call app.use to apply middleware in",
    "start": "556560",
    "end": "559680"
  },
  {
    "text": "this case the middleware we want to",
    "start": "559680",
    "end": "561360"
  },
  {
    "text": "apply is the express.json middleware now",
    "start": "561360",
    "end": "564560"
  },
  {
    "text": "every request that comes in will first",
    "start": "564560",
    "end": "566480"
  },
  {
    "text": "go through this express json middleware",
    "start": "566480",
    "end": "568720"
  },
  {
    "text": "which will convert the body to json",
    "start": "568720",
    "end": "570959"
  },
  {
    "text": "therefore making it available in our",
    "start": "570959",
    "end": "572800"
  },
  {
    "text": "post callback let's go ahead and save",
    "start": "572800",
    "end": "574959"
  },
  {
    "text": "restart our server and then go back to",
    "start": "574959",
    "end": "576959"
  },
  {
    "text": "insomnia and if we send the same exact",
    "start": "576959",
    "end": "579200"
  },
  {
    "text": "request you'll notice this time we get",
    "start": "579200",
    "end": "581440"
  },
  {
    "text": "back a successful response",
    "start": "581440",
    "end": "583600"
  },
  {
    "text": "in addition if we make the logo an empty",
    "start": "583600",
    "end": "585839"
  },
  {
    "text": "string and try to send the same request",
    "start": "585839",
    "end": "588240"
  },
  {
    "text": "we get a 418 response along with a",
    "start": "588240",
    "end": "590640"
  },
  {
    "text": "message that we need a logo",
    "start": "590640",
    "end": "592720"
  },
  {
    "text": "congratulations you just built a restful",
    "start": "592720",
    "end": "594880"
  },
  {
    "text": "api from scratch with node.js and",
    "start": "594880",
    "end": "597200"
  },
  {
    "text": "express but before we wrap up the video",
    "start": "597200",
    "end": "599440"
  },
  {
    "text": "there's one more thing you should",
    "start": "599440",
    "end": "600560"
  },
  {
    "text": "definitely know about when it comes to",
    "start": "600560",
    "end": "602160"
  },
  {
    "text": "restful apis and that is the open api",
    "start": "602160",
    "end": "604880"
  },
  {
    "text": "spec which provides a standard way to",
    "start": "604880",
    "end": "606880"
  },
  {
    "text": "describe an api in yaml it originally",
    "start": "606880",
    "end": "609279"
  },
  {
    "text": "came about in something called the",
    "start": "609279",
    "end": "610800"
  },
  {
    "text": "swagger framework and what it allows you",
    "start": "610800",
    "end": "612800"
  },
  {
    "text": "to do is describe your api in a way that",
    "start": "612800",
    "end": "615200"
  },
  {
    "text": "can be understood by both humans and",
    "start": "615200",
    "end": "617200"
  },
  {
    "text": "machines and if you're building a",
    "start": "617200",
    "end": "618959"
  },
  {
    "text": "serious api you get all kinds of awesome",
    "start": "618959",
    "end": "621200"
  },
  {
    "text": "benefits in the process your api will be",
    "start": "621200",
    "end": "623600"
  },
  {
    "text": "fully documented making it much easier",
    "start": "623600",
    "end": "625760"
  },
  {
    "text": "for the end user to work with and",
    "start": "625760",
    "end": "627680"
  },
  {
    "text": "because it follows a standard format you",
    "start": "627680",
    "end": "629519"
  },
  {
    "text": "can actually just automatically generate",
    "start": "629519",
    "end": "631519"
  },
  {
    "text": "all of your client-side or server-side",
    "start": "631519",
    "end": "633440"
  },
  {
    "text": "code what i'm using right now is a free",
    "start": "633440",
    "end": "635440"
  },
  {
    "text": "tool called swaggerhub and i can come up",
    "start": "635440",
    "end": "637440"
  },
  {
    "text": "here and hit the export button to",
    "start": "637440",
    "end": "639279"
  },
  {
    "text": "automatically generate a bunch of",
    "start": "639279",
    "end": "640880"
  },
  {
    "text": "boilerplate code now i'm usually not a",
    "start": "640880",
    "end": "642880"
  },
  {
    "text": "huge fan of code generators but there's",
    "start": "642880",
    "end": "644880"
  },
  {
    "text": "a more powerful reason to use open api",
    "start": "644880",
    "end": "647440"
  },
  {
    "text": "when you describe your api with the open",
    "start": "647440",
    "end": "649200"
  },
  {
    "text": "api spec you can then upload the",
    "start": "649200",
    "end": "651040"
  },
  {
    "text": "configuration to tools like api gateway",
    "start": "651040",
    "end": "653760"
  },
  {
    "text": "on aws or google cloud where it can be",
    "start": "653760",
    "end": "656320"
  },
  {
    "text": "secured monitored and connected to",
    "start": "656320",
    "end": "658480"
  },
  {
    "text": "backend infrastructure let me know if",
    "start": "658480",
    "end": "660240"
  },
  {
    "text": "you want to see a full tutorial on that",
    "start": "660240",
    "end": "661760"
  },
  {
    "text": "topic but i'm going to go ahead and wrap",
    "start": "661760",
    "end": "663760"
  },
  {
    "text": "things up there and if you want access",
    "start": "663760",
    "end": "665200"
  },
  {
    "text": "to even more advanced content consider",
    "start": "665200",
    "end": "667120"
  },
  {
    "text": "becoming a pro member at fireship io",
    "start": "667120",
    "end": "669680"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "669680",
    "end": "671519"
  },
  {
    "text": "in the next one",
    "start": "671519",
    "end": "675000"
  }
]