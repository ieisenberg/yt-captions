[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "are you interested in retrieving data",
    "start": "0",
    "end": "1530"
  },
  {
    "text": "from the firestore database in a way",
    "start": "1530",
    "end": "3389"
  },
  {
    "text": "that's both faster and more",
    "start": "3389",
    "end": "4920"
  },
  {
    "text": "cost-effective if so you're watching the",
    "start": "4920",
    "end": "7529"
  },
  {
    "text": "right video today I'm going to show you",
    "start": "7529",
    "end": "9120"
  },
  {
    "text": "how to use firebase cloud functions to",
    "start": "9120",
    "end": "10950"
  },
  {
    "text": "automatically aggregate or add up",
    "start": "10950",
    "end": "13290"
  },
  {
    "text": "information from a sub collection and",
    "start": "13290",
    "end": "15179"
  },
  {
    "text": "then write it to its parent document",
    "start": "15179",
    "end": "16940"
  },
  {
    "text": "take for example a post document that",
    "start": "16940",
    "end": "19859"
  },
  {
    "text": "has a comment sub collection nested",
    "start": "19859",
    "end": "21869"
  },
  {
    "text": "under it whenever a new comment is",
    "start": "21869",
    "end": "24060"
  },
  {
    "text": "created it's going to trigger a cloud",
    "start": "24060",
    "end": "25949"
  },
  {
    "text": "function that will read this comment sub",
    "start": "25949",
    "end": "28230"
  },
  {
    "text": "collection then add up the comment count",
    "start": "28230",
    "end": "30570"
  },
  {
    "text": "and the five most recent comments and",
    "start": "30570",
    "end": "32398"
  },
  {
    "text": "then duplicate them on the post document",
    "start": "32399",
    "end": "34739"
  },
  {
    "text": "on a no sequel document database like",
    "start": "34739",
    "end": "37260"
  },
  {
    "text": "firestore duplication is perfectly",
    "start": "37260",
    "end": "39480"
  },
  {
    "text": "acceptable imagine if we had a post with",
    "start": "39480",
    "end": "41520"
  },
  {
    "text": "a hundred comments we'd have to read all",
    "start": "41520",
    "end": "43200"
  },
  {
    "text": "those comments to get the total every",
    "start": "43200",
    "end": "44760"
  },
  {
    "text": "time someone viewed a post not only is",
    "start": "44760",
    "end": "46770"
  },
  {
    "text": "that slower for the end user but it's",
    "start": "46770",
    "end": "48420"
  },
  {
    "text": "also going to cost a lot more money as",
    "start": "48420",
    "end": "49980"
  },
  {
    "text": "your app scales up my goal today is to",
    "start": "49980",
    "end": "52230"
  },
  {
    "text": "show you how to solve this problem using",
    "start": "52230",
    "end": "53969"
  },
  {
    "text": "back-end data aggregation if you're new",
    "start": "53969",
    "end": "56730"
  },
  {
    "start": "56000",
    "end": "106000"
  },
  {
    "text": "here make sure to subscribe and you can",
    "start": "56730",
    "end": "58410"
  },
  {
    "text": "grab the full source code from angular",
    "start": "58410",
    "end": "60059"
  },
  {
    "text": "firebase com I'm going to be starting",
    "start": "60059",
    "end": "62280"
  },
  {
    "text": "from a brand new angular app so run ng",
    "start": "62280",
    "end": "64378"
  },
  {
    "text": "new it's only dependency is angular fire",
    "start": "64379",
    "end": "66750"
  },
  {
    "text": "too and you can follow the setup",
    "start": "66750",
    "end": "68250"
  },
  {
    "text": "instructions for that on the main repo",
    "start": "68250",
    "end": "70140"
  },
  {
    "text": "if you're not using angular you can skip",
    "start": "70140",
    "end": "72150"
  },
  {
    "text": "ahead to the cloud function code which",
    "start": "72150",
    "end": "73740"
  },
  {
    "text": "is just written in plain JavaScript the",
    "start": "73740",
    "end": "76200"
  },
  {
    "text": "first thing I'll show you is our",
    "start": "76200",
    "end": "77189"
  },
  {
    "text": "underlying data we have a post",
    "start": "77189",
    "end": "79259"
  },
  {
    "text": "collection and then this test post under",
    "start": "79259",
    "end": "81479"
  },
  {
    "text": "it then you can see we have a recent",
    "start": "81479",
    "end": "83070"
  },
  {
    "text": "comments array here which is the five",
    "start": "83070",
    "end": "85229"
  },
  {
    "text": "most recent comments from potentially",
    "start": "85229",
    "end": "87210"
  },
  {
    "text": "hundreds or even thousands of comments",
    "start": "87210",
    "end": "88979"
  },
  {
    "text": "in the subcollection having this data on",
    "start": "88979",
    "end": "91470"
  },
  {
    "text": "the parent dock is extremely useful if",
    "start": "91470",
    "end": "93329"
  },
  {
    "text": "you loop through a list of posts and you",
    "start": "93329",
    "end": "94770"
  },
  {
    "text": "just want to show a quick preview of the",
    "start": "94770",
    "end": "96299"
  },
  {
    "text": "most recent comment as well as the total",
    "start": "96299",
    "end": "98189"
  },
  {
    "text": "comment count the comment sub collection",
    "start": "98189",
    "end": "100920"
  },
  {
    "text": "is very simple it just has a content",
    "start": "100920",
    "end": "103229"
  },
  {
    "text": "property and a created at timestamp at",
    "start": "103229",
    "end": "106590"
  },
  {
    "start": "106000",
    "end": "123000"
  },
  {
    "text": "this point I want to point out that this",
    "start": "106590",
    "end": "107880"
  },
  {
    "text": "is not suitable for every situation it's",
    "start": "107880",
    "end": "110340"
  },
  {
    "text": "ideal when you have documents that",
    "start": "110340",
    "end": "111810"
  },
  {
    "text": "receive many reads but not very many",
    "start": "111810",
    "end": "113700"
  },
  {
    "text": "writes a good example would be Yelp",
    "start": "113700",
    "end": "116159"
  },
  {
    "text": "where many users want to see the reviews",
    "start": "116159",
    "end": "118320"
  },
  {
    "text": "for a location but only a small",
    "start": "118320",
    "end": "120149"
  },
  {
    "text": "percentage actually write a review",
    "start": "120149",
    "end": "122450"
  },
  {
    "text": "getting back to angular you're going to",
    "start": "122450",
    "end": "124829"
  },
  {
    "text": "need to run firebase and NIT functions",
    "start": "124829",
    "end": "126750"
  },
  {
    "text": "if you're in a new project and then",
    "start": "126750",
    "end": "128700"
  },
  {
    "text": "we're not going to install anything",
    "start": "128700",
    "end": "129929"
  },
  {
    "text": "special we can just use the default",
    "start": "129929",
    "end": "131730"
  },
  {
    "text": "packages but make sure they're updated",
    "start": "131730",
    "end": "133660"
  },
  {
    "text": "newest version because firestore is a",
    "start": "133660",
    "end": "135340"
  },
  {
    "text": "relatively new product we'll write this",
    "start": "135340",
    "end": "137410"
  },
  {
    "text": "cloud function in a few minutes let's",
    "start": "137410",
    "end": "139000"
  },
  {
    "text": "first make the query without any data",
    "start": "139000",
    "end": "140740"
  },
  {
    "text": "aggregation I am switching over to the",
    "start": "140740",
    "end": "142810"
  },
  {
    "text": "app component and then I'm going to",
    "start": "142810",
    "end": "144670"
  },
  {
    "text": "import observable from rxjs",
    "start": "144670",
    "end": "146740"
  },
  {
    "text": "as well as angularfire store then I can",
    "start": "146740",
    "end": "149830"
  },
  {
    "text": "go ahead and inject angularfire store in",
    "start": "149830",
    "end": "152500"
  },
  {
    "text": "the constructor from there I'll declare",
    "start": "152500",
    "end": "155020"
  },
  {
    "text": "a variable for our post reference which",
    "start": "155020",
    "end": "157180"
  },
  {
    "text": "is an angular firestore document and",
    "start": "157180",
    "end": "159010"
  },
  {
    "text": "then we'll set another variable for the",
    "start": "159010",
    "end": "161260"
  },
  {
    "text": "observable and we'll do the exact same",
    "start": "161260",
    "end": "163660"
  },
  {
    "text": "thing here for the comments but it'll be",
    "start": "163660",
    "end": "166270"
  },
  {
    "text": "an angular firestore collection then",
    "start": "166270",
    "end": "168820"
  },
  {
    "text": "we'll add one more variable for form",
    "start": "168820",
    "end": "170470"
  },
  {
    "text": "value which we'll get from the form",
    "start": "170470",
    "end": "172480"
  },
  {
    "text": "input in the HTML during ng on an it",
    "start": "172480",
    "end": "176170"
  },
  {
    "text": "will first make a reference to the",
    "start": "176170",
    "end": "177940"
  },
  {
    "text": "document that we want which in this case",
    "start": "177940",
    "end": "179560"
  },
  {
    "text": "is just called test post and then we can",
    "start": "179560",
    "end": "182230"
  },
  {
    "text": "make a reference to its comment sub",
    "start": "182230",
    "end": "184030"
  },
  {
    "text": "collection by calling collection on that",
    "start": "184030",
    "end": "186640"
  },
  {
    "text": "reference so we say post ref collection",
    "start": "186640",
    "end": "189580"
  },
  {
    "text": "comments and it's also important that we",
    "start": "189580",
    "end": "192160"
  },
  {
    "text": "order by something in this case we have",
    "start": "192160",
    "end": "194080"
  },
  {
    "text": "a timestamp on the comments so we'll say",
    "start": "194080",
    "end": "196450"
  },
  {
    "text": "order by created at and make that",
    "start": "196450",
    "end": "198400"
  },
  {
    "text": "descending then to actually retrieve our",
    "start": "198400",
    "end": "201670"
  },
  {
    "text": "post we call post ref value changes and",
    "start": "201670",
    "end": "204459"
  },
  {
    "text": "that returns it as an observable then we",
    "start": "204459",
    "end": "207010"
  },
  {
    "text": "can do the exact same thing for comments",
    "start": "207010",
    "end": "209280"
  },
  {
    "text": "then we're going to switch over to the",
    "start": "209280",
    "end": "211660"
  },
  {
    "text": "HTML and we'll set a template variable",
    "start": "211660",
    "end": "214420"
  },
  {
    "text": "for our post so we unwrap that with the",
    "start": "214420",
    "end": "216550"
  },
  {
    "text": "async pipe and then say as post and then",
    "start": "216550",
    "end": "219880"
  },
  {
    "text": "from there we'll just display the post",
    "start": "219880",
    "end": "221320"
  },
  {
    "text": "title on the post content then we'll go",
    "start": "221320",
    "end": "224560"
  },
  {
    "text": "ahead and set up a form input here and",
    "start": "224560",
    "end": "226570"
  },
  {
    "text": "bind it with ng model then when the user",
    "start": "226570",
    "end": "229540"
  },
  {
    "text": "hits the enter key we'll go ahead and",
    "start": "229540",
    "end": "231190"
  },
  {
    "text": "run a function to update that in the",
    "start": "231190",
    "end": "233200"
  },
  {
    "text": "database right now we have a comments",
    "start": "233200",
    "end": "235690"
  },
  {
    "text": "observable so we'll go ahead and loop",
    "start": "235690",
    "end": "237489"
  },
  {
    "text": "over that with the async pipe but after",
    "start": "237489",
    "end": "239980"
  },
  {
    "text": "we perform some data aggregation we'll",
    "start": "239980",
    "end": "241570"
  },
  {
    "text": "be able to read this information",
    "start": "241570",
    "end": "242830"
  },
  {
    "text": "directly from the post document so at",
    "start": "242830",
    "end": "245950"
  },
  {
    "start": "245000",
    "end": "263000"
  },
  {
    "text": "this point we have our blog post here",
    "start": "245950",
    "end": "247690"
  },
  {
    "text": "and then the user can enter their",
    "start": "247690",
    "end": "249250"
  },
  {
    "text": "comment and it's updated in real time",
    "start": "249250",
    "end": "251489"
  },
  {
    "text": "the problem here is we're reading",
    "start": "251489",
    "end": "253600"
  },
  {
    "text": "multiple documents when we could only",
    "start": "253600",
    "end": "255160"
  },
  {
    "text": "just read one and we also don't have an",
    "start": "255160",
    "end": "257530"
  },
  {
    "text": "efficient way to keep track of a comment",
    "start": "257530",
    "end": "259329"
  },
  {
    "text": "count or any other aggregate data so",
    "start": "259330",
    "end": "262960"
  },
  {
    "text": "let's go ahead and solve this by writing",
    "start": "262960",
    "end": "264640"
  },
  {
    "start": "263000",
    "end": "497000"
  },
  {
    "text": "a cloud function we're going to import",
    "start": "264640",
    "end": "266919"
  },
  {
    "text": "the admin day",
    "start": "266919",
    "end": "268070"
  },
  {
    "text": "and make sure that's initialized then",
    "start": "268070",
    "end": "270830"
  },
  {
    "text": "we're going to run the function whenever",
    "start": "270830",
    "end": "272270"
  },
  {
    "text": "a new comment document is written to the",
    "start": "272270",
    "end": "274639"
  },
  {
    "text": "database so we do that by saying",
    "start": "274639",
    "end": "276770"
  },
  {
    "text": "functions firestore document then point",
    "start": "276770",
    "end": "280220"
  },
  {
    "text": "it to the comment ID nested under the",
    "start": "280220",
    "end": "282770"
  },
  {
    "text": "post using on write we'll run this",
    "start": "282770",
    "end": "286430"
  },
  {
    "text": "function whenever a document is created",
    "start": "286430",
    "end": "288560"
  },
  {
    "text": "updated or deleted first we'll set a",
    "start": "288560",
    "end": "291410"
  },
  {
    "text": "couple variables here for the comment ID",
    "start": "291410",
    "end": "293600"
  },
  {
    "text": "and the post ID so we do that by calling",
    "start": "293600",
    "end": "296180"
  },
  {
    "text": "event params with the corresponding ID",
    "start": "296180",
    "end": "299650"
  },
  {
    "text": "then after we have those IDs will setup",
    "start": "299650",
    "end": "302690"
  },
  {
    "text": "a reference to the post document we're",
    "start": "302690",
    "end": "305690"
  },
  {
    "text": "going to do that with the admin database",
    "start": "305690",
    "end": "307610"
  },
  {
    "text": "which will allow us to bypass any",
    "start": "307610",
    "end": "309950"
  },
  {
    "text": "firestore rules that we have set up then",
    "start": "309950",
    "end": "313850"
  },
  {
    "text": "from there we need to query the",
    "start": "313850",
    "end": "315680"
  },
  {
    "text": "collection of comments that are nested",
    "start": "315680",
    "end": "317479"
  },
  {
    "text": "under this document so we can add them",
    "start": "317479",
    "end": "319430"
  },
  {
    "text": "up and aggregate them in a cloud",
    "start": "319430",
    "end": "322400"
  },
  {
    "text": "function we're using the main firebase",
    "start": "322400",
    "end": "324050"
  },
  {
    "text": "SDK as opposed to angularfire too so we",
    "start": "324050",
    "end": "327500"
  },
  {
    "text": "do things slightly different instead of",
    "start": "327500",
    "end": "329330"
  },
  {
    "text": "calling value changes we call get that",
    "start": "329330",
    "end": "332000"
  },
  {
    "text": "returns a promise with the query",
    "start": "332000",
    "end": "333740"
  },
  {
    "text": "snapshot the query snapshot contains all",
    "start": "333740",
    "end": "336500"
  },
  {
    "text": "of the documents that we need and it",
    "start": "336500",
    "end": "338539"
  },
  {
    "text": "behaves kind of like an array but you",
    "start": "338539",
    "end": "340100"
  },
  {
    "text": "can't use the regular JavaScript",
    "start": "340100",
    "end": "341630"
  },
  {
    "text": "prototype array methods on it to get the",
    "start": "341630",
    "end": "344660"
  },
  {
    "text": "size of the collection we can call a",
    "start": "344660",
    "end": "346130"
  },
  {
    "text": "query snapshot size and then to get all",
    "start": "346130",
    "end": "349940"
  },
  {
    "text": "of the recent comments we'll set up an",
    "start": "349940",
    "end": "351380"
  },
  {
    "text": "array here then we can loop over the",
    "start": "351380",
    "end": "353900"
  },
  {
    "text": "snapshots with for each method and for",
    "start": "353900",
    "end": "357080"
  },
  {
    "text": "each comment we're going to push it to",
    "start": "357080",
    "end": "359090"
  },
  {
    "text": "our array at this point you have an",
    "start": "359090",
    "end": "361370"
  },
  {
    "text": "array of data that you could perform any",
    "start": "361370",
    "end": "362840"
  },
  {
    "text": "kind of data aggregation tasks that you",
    "start": "362840",
    "end": "364760"
  },
  {
    "text": "want but for now we're just going to",
    "start": "364760",
    "end": "366710"
  },
  {
    "text": "splice the last five comments and we'll",
    "start": "366710",
    "end": "369560"
  },
  {
    "text": "also set a property for the last",
    "start": "369560",
    "end": "371389"
  },
  {
    "text": "activity which would be the last time",
    "start": "371389",
    "end": "373070"
  },
  {
    "text": "any user has placed a comment on this",
    "start": "373070",
    "end": "375470"
  },
  {
    "text": "post and then finally we add all of this",
    "start": "375470",
    "end": "379160"
  },
  {
    "text": "data to an object then we can call",
    "start": "379160",
    "end": "381289"
  },
  {
    "text": "update on our document reference then",
    "start": "381289",
    "end": "384440"
  },
  {
    "text": "we'll also go ahead and console log",
    "start": "384440",
    "end": "385970"
  },
  {
    "text": "errors here but overall it's a pretty",
    "start": "385970",
    "end": "388099"
  },
  {
    "text": "simple cloud function I'd like to point",
    "start": "388099",
    "end": "390200"
  },
  {
    "text": "out that if you're doing multiple",
    "start": "390200",
    "end": "391669"
  },
  {
    "text": "updates in this function you'd want to",
    "start": "391669",
    "end": "393260"
  },
  {
    "text": "wrap it in either a transaction or do",
    "start": "393260",
    "end": "395719"
  },
  {
    "text": "them all in a single batch that will",
    "start": "395719",
    "end": "397729"
  },
  {
    "text": "ensure all your aggregate data stays in",
    "start": "397729",
    "end": "399650"
  },
  {
    "text": "sync and is up",
    "start": "399650",
    "end": "400840"
  },
  {
    "text": "atomically the final step is to deploy",
    "start": "400840",
    "end": "404350"
  },
  {
    "text": "this function to firebase so we just run",
    "start": "404350",
    "end": "406600"
  },
  {
    "text": "firebase deploy only functions now let's",
    "start": "406600",
    "end": "409690"
  },
  {
    "text": "modify our angular app to take advantage",
    "start": "409690",
    "end": "411700"
  },
  {
    "text": "of this function back in the app",
    "start": "411700",
    "end": "413410"
  },
  {
    "text": "component first notice that I've removed",
    "start": "413410",
    "end": "415000"
  },
  {
    "text": "the comments observable from ng on a net",
    "start": "415000",
    "end": "417870"
  },
  {
    "text": "instead we're going to lazy load it only",
    "start": "417870",
    "end": "420460"
  },
  {
    "text": "when necessary then users can actually",
    "start": "420460",
    "end": "423100"
  },
  {
    "text": "still add a comment without even loading",
    "start": "423100",
    "end": "424900"
  },
  {
    "text": "the comments collection because we have",
    "start": "424900",
    "end": "426910"
  },
  {
    "text": "the comments ref we can just call add",
    "start": "426910",
    "end": "428440"
  },
  {
    "text": "and pass it some data we're going to",
    "start": "428440",
    "end": "431050"
  },
  {
    "text": "show the user the first five comments",
    "start": "431050",
    "end": "432370"
  },
  {
    "text": "which will be on the document if the",
    "start": "432370",
    "end": "434710"
  },
  {
    "text": "user wants to load more we'll give them",
    "start": "434710",
    "end": "436270"
  },
  {
    "text": "a button to click which will lazily",
    "start": "436270",
    "end": "438430"
  },
  {
    "text": "populate the comments observable in",
    "start": "438430",
    "end": "440669"
  },
  {
    "text": "angular fire to the actual data isn't",
    "start": "440669",
    "end": "443200"
  },
  {
    "text": "read until you call value changes now we",
    "start": "443200",
    "end": "446620"
  },
  {
    "text": "just need to make some changes to our",
    "start": "446620",
    "end": "448150"
  },
  {
    "text": "app component HTML to show the aggregate",
    "start": "448150",
    "end": "450790"
  },
  {
    "text": "data",
    "start": "450790",
    "end": "451150"
  },
  {
    "text": "so first up here will show the total",
    "start": "451150",
    "end": "453700"
  },
  {
    "text": "comment count as well as the timestamp",
    "start": "453700",
    "end": "456310"
  },
  {
    "text": "on the last activity then we'll set up",
    "start": "456310",
    "end": "459729"
  },
  {
    "text": "another for loop because now we have an",
    "start": "459729",
    "end": "462100"
  },
  {
    "text": "array on the document itself",
    "start": "462100",
    "end": "463750"
  },
  {
    "text": "but we only want to show this if the",
    "start": "463750",
    "end": "465789"
  },
  {
    "text": "comments observable isn't populated so",
    "start": "465789",
    "end": "468370"
  },
  {
    "text": "we can just do ng if no comments",
    "start": "468370",
    "end": "470620"
  },
  {
    "text": "observable then we'll go ahead and show",
    "start": "470620",
    "end": "472180"
  },
  {
    "text": "the five most recent comments this data",
    "start": "472180",
    "end": "475060"
  },
  {
    "text": "is already unwrapped by the post",
    "start": "475060",
    "end": "477070"
  },
  {
    "text": "observable so we can just call post",
    "start": "477070",
    "end": "479050"
  },
  {
    "text": "recent comments and we don't need to use",
    "start": "479050",
    "end": "481390"
  },
  {
    "text": "the async pipe and then we'll just go",
    "start": "481390",
    "end": "483640"
  },
  {
    "text": "ahead and display the same exact data if",
    "start": "483640",
    "end": "485620"
  },
  {
    "text": "the user decides they want to load all",
    "start": "485620",
    "end": "487810"
  },
  {
    "text": "of the comments then we'll give them a",
    "start": "487810",
    "end": "489400"
  },
  {
    "text": "button down here to do so so we'll just",
    "start": "489400",
    "end": "491889"
  },
  {
    "text": "say click and then run our load more",
    "start": "491889",
    "end": "493840"
  },
  {
    "text": "event handler and we can show them how",
    "start": "493840",
    "end": "496090"
  },
  {
    "text": "many comments are on this post in the",
    "start": "496090",
    "end": "498550"
  },
  {
    "start": "497000",
    "end": "567000"
  },
  {
    "text": "app itself take a look at the total",
    "start": "498550",
    "end": "500500"
  },
  {
    "text": "comments which is currently 11 and if we",
    "start": "500500",
    "end": "503110"
  },
  {
    "text": "go ahead and add another comment you'll",
    "start": "503110",
    "end": "504880"
  },
  {
    "text": "see it gets updated down there in the",
    "start": "504880",
    "end": "506380"
  },
  {
    "text": "feed and the total comments is updated",
    "start": "506380",
    "end": "508750"
  },
  {
    "text": "to 12 with about maybe a second or so of",
    "start": "508750",
    "end": "510820"
  },
  {
    "text": "latency the latency is a little bit",
    "start": "510820",
    "end": "513400"
  },
  {
    "text": "higher but that is one of the trade-offs",
    "start": "513400",
    "end": "515020"
  },
  {
    "text": "when you're doing aggregation so here",
    "start": "515020",
    "end": "517510"
  },
  {
    "text": "we're looking at the post document and",
    "start": "517510",
    "end": "518800"
  },
  {
    "text": "firestore and you can see it's updated",
    "start": "518800",
    "end": "520990"
  },
  {
    "text": "each time we add a new comment if 99% of",
    "start": "520990",
    "end": "524410"
  },
  {
    "text": "your users read the blog post but don't",
    "start": "524410",
    "end": "526570"
  },
  {
    "text": "leave a comment this is going to vastly",
    "start": "526570",
    "end": "528339"
  },
  {
    "text": "reduce the number of reads that you",
    "start": "528339",
    "end": "530110"
  },
  {
    "text": "execute in firestore not only is that",
    "start": "530110",
    "end": "532630"
  },
  {
    "text": "going to save you money as you gain",
    "start": "532630",
    "end": "534190"
  },
  {
    "text": "more users but it's also going to make",
    "start": "534190",
    "end": "535570"
  },
  {
    "text": "your app much more performant that's it",
    "start": "535570",
    "end": "538120"
  },
  {
    "text": "for data aggregation with firestore if",
    "start": "538120",
    "end": "540160"
  },
  {
    "text": "this video helped you please like and",
    "start": "540160",
    "end": "541660"
  },
  {
    "text": "subscribe and if you want twice as much",
    "start": "541660",
    "end": "543760"
  },
  {
    "text": "content every week consider becoming a",
    "start": "543760",
    "end": "545500"
  },
  {
    "text": "pro subscriber at angular firebase com",
    "start": "545500",
    "end": "547900"
  },
  {
    "text": "you'll get a free copy of my book as",
    "start": "547900",
    "end": "549520"
  },
  {
    "text": "well as an extra video every week and I",
    "start": "549520",
    "end": "551890"
  },
  {
    "text": "even provide one-on-one support via our",
    "start": "551890",
    "end": "553900"
  },
  {
    "text": "slack team thanks for watching and I'll",
    "start": "553900",
    "end": "556330"
  },
  {
    "text": "see you next time",
    "start": "556330",
    "end": "558490"
  },
  {
    "text": "[Music]",
    "start": "558490",
    "end": "563210"
  },
  {
    "text": "[Applause]",
    "start": "563210",
    "end": "564130"
  },
  {
    "text": "[Music]",
    "start": "564130",
    "end": "568620"
  }
]