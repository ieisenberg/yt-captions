[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "8160"
  },
  {
    "text": "welcome to another episode of Code This",
    "start": "8160",
    "end": "9760"
  },
  {
    "text": "Not That where we try to write the best",
    "start": "9760",
    "end": "11000"
  },
  {
    "text": "code possible and avoid the bad stuff",
    "start": "11000",
    "end": "13000"
  },
  {
    "text": "today we're going to look at",
    "start": "13000",
    "end": "13839"
  },
  {
    "text": "intersection Observer and how to",
    "start": "13839",
    "end": "15400"
  },
  {
    "text": "determine the visibility of elements in",
    "start": "15400",
    "end": "17000"
  },
  {
    "text": "the Dom this is a very useful tool",
    "start": "17000",
    "end": "18800"
  },
  {
    "text": "because you can use it for things like",
    "start": "18800",
    "end": "20039"
  },
  {
    "text": "infinite scroll lazy loaded images and",
    "start": "20039",
    "end": "22320"
  },
  {
    "text": "animations in today's video we'll look",
    "start": "22320",
    "end": "24080"
  },
  {
    "text": "at two different ways we can build out",
    "start": "24080",
    "end": "25439"
  },
  {
    "text": "this lazy loaded image feature using",
    "start": "25439",
    "end": "27240"
  },
  {
    "text": "nothing but vanilla JavaScript if you're",
    "start": "27240",
    "end": "28960"
  },
  {
    "text": "new here like And subscribe and grab the",
    "start": "28960",
    "end": "30640"
  },
  {
    "text": "source code from fireship IO and I'll be",
    "start": "30640",
    "end": "32719"
  },
  {
    "text": "giving away the first ever fireship IO",
    "start": "32719",
    "end": "34399"
  },
  {
    "text": "t-shirt all you have to do is leave a",
    "start": "34399",
    "end": "35640"
  },
  {
    "text": "comment below and we'll pick a random",
    "start": "35640",
    "end": "37280"
  },
  {
    "text": "winner next week intersection Observer",
    "start": "37280",
    "end": "39239"
  },
  {
    "text": "is a browser API that we can use to",
    "start": "39239",
    "end": "41200"
  },
  {
    "text": "observe the visibility of an element in",
    "start": "41200",
    "end": "42960"
  },
  {
    "text": "the viewport it's currently supported by",
    "start": "42960",
    "end": "44719"
  },
  {
    "text": "most browsers with the main exception",
    "start": "44719",
    "end": "46320"
  },
  {
    "text": "being Safari but there is a polyfill",
    "start": "46320",
    "end": "48239"
  },
  {
    "text": "that you can use as needed I actually",
    "start": "48239",
    "end": "49800"
  },
  {
    "text": "use it on fireship iO to Lazy load the",
    "start": "49800",
    "end": "51840"
  },
  {
    "text": "comment section the comments live in",
    "start": "51840",
    "end": "53719"
  },
  {
    "text": "fire store so this prevents unnecessary",
    "start": "53719",
    "end": "55680"
  },
  {
    "text": "reads to the database and another thing",
    "start": "55680",
    "end": "57520"
  },
  {
    "text": "you might notice on Fire Ship is that",
    "start": "57520",
    "end": "59039"
  },
  {
    "text": "page transitions are are super fast this",
    "start": "59039",
    "end": "61199"
  },
  {
    "text": "is made possible in part by a library",
    "start": "61199",
    "end": "62920"
  },
  {
    "text": "called quicklink which uses intersection",
    "start": "62920",
    "end": "64680"
  },
  {
    "text": "Observer to preload all the links that",
    "start": "64680",
    "end": "66600"
  },
  {
    "text": "are visible on the page so there's all",
    "start": "66600",
    "end": "68560"
  },
  {
    "text": "kinds of cool use cases but let's go",
    "start": "68560",
    "end": "70200"
  },
  {
    "text": "ahead and get started by writing some",
    "start": "70200",
    "end": "71520"
  },
  {
    "text": "bad code what we have here is just a",
    "start": "71520",
    "end": "73720"
  },
  {
    "text": "basic HTML page and we have some high",
    "start": "73720",
    "end": "75680"
  },
  {
    "text": "resolution images on it that we want to",
    "start": "75680",
    "end": "77520"
  },
  {
    "text": "Lazy load so when the user Scrolls to an",
    "start": "77520",
    "end": "79560"
  },
  {
    "text": "image it will load it and then do this",
    "start": "79560",
    "end": "81360"
  },
  {
    "text": "little CSS animation the CSS itself is",
    "start": "81360",
    "end": "83799"
  },
  {
    "start": "83000",
    "end": "110000"
  },
  {
    "text": "pretty straightforward we start with an",
    "start": "83799",
    "end": "85360"
  },
  {
    "text": "opacity of zero in a transform and then",
    "start": "85360",
    "end": "87439"
  },
  {
    "text": "we fade in by adding this fade class",
    "start": "87439",
    "end": "89240"
  },
  {
    "text": "which sets the OPAC capacity to one then",
    "start": "89240",
    "end": "91320"
  },
  {
    "text": "in the HTML we'll go ahead and reference",
    "start": "91320",
    "end": "93079"
  },
  {
    "text": "a script called appjs and that'll be a",
    "start": "93079",
    "end": "95119"
  },
  {
    "text": "deferred script then you'll notice with",
    "start": "95119",
    "end": "97079"
  },
  {
    "text": "the images in this page that instead of",
    "start": "97079",
    "end": "98720"
  },
  {
    "text": "having a source attribute they have a",
    "start": "98720",
    "end": "100439"
  },
  {
    "text": "data lazy attribute this is our own",
    "start": "100439",
    "end": "102320"
  },
  {
    "text": "custom attribute that we can use to",
    "start": "102320",
    "end": "103680"
  },
  {
    "text": "point to the image itself and then we'll",
    "start": "103680",
    "end": "105320"
  },
  {
    "text": "use our JavaScript to set it as the",
    "start": "105320",
    "end": "107119"
  },
  {
    "text": "actual image source when it becomes",
    "start": "107119",
    "end": "108640"
  },
  {
    "text": "visible in the viewport the first thing",
    "start": "108640",
    "end": "110680"
  },
  {
    "start": "110000",
    "end": "170000"
  },
  {
    "text": "we'll do is grab all of the images in",
    "start": "110680",
    "end": "112079"
  },
  {
    "text": "the Dom by using query selector all then",
    "start": "112079",
    "end": "114920"
  },
  {
    "text": "we'll listen to The Scroll event on the",
    "start": "114920",
    "end": "116399"
  },
  {
    "text": "window and every time the user Scrolls",
    "start": "116399",
    "end": "118240"
  },
  {
    "text": "we'll be able to recalculate whether not",
    "start": "118240",
    "end": "120079"
  },
  {
    "text": "an element is visible after that we can",
    "start": "120079",
    "end": "121799"
  },
  {
    "text": "Loop over each image and run the",
    "start": "121799",
    "end": "123360"
  },
  {
    "text": "calculation the calculation is",
    "start": "123360",
    "end": "125240"
  },
  {
    "text": "determined by the get bounding client",
    "start": "125240",
    "end": "127320"
  },
  {
    "text": "wct value so we'll be looking at the top",
    "start": "127320",
    "end": "129440"
  },
  {
    "text": "of the element if the top of the element",
    "start": "129440",
    "end": "131120"
  },
  {
    "text": "is less than or equal to the window",
    "start": "131120",
    "end": "132760"
  },
  {
    "text": "inner height then we know that it's",
    "start": "132760",
    "end": "134400"
  },
  {
    "text": "visible from there we'll go ahead and",
    "start": "134400",
    "end": "136200"
  },
  {
    "text": "read the data lazy attribute so we know",
    "start": "136200",
    "end": "138280"
  },
  {
    "text": "the true source of the image and once we",
    "start": "138280",
    "end": "140920"
  },
  {
    "text": "have that value we'll just go ahead and",
    "start": "140920",
    "end": "142080"
  },
  {
    "text": "call set attributes for the source and",
    "start": "142080",
    "end": "144879"
  },
  {
    "text": "we'll also go ahead and add that fade",
    "start": "144879",
    "end": "146480"
  },
  {
    "text": "class to run the animation so that",
    "start": "146480",
    "end": "149040"
  },
  {
    "text": "code's actually very simple and it works",
    "start": "149040",
    "end": "151120"
  },
  {
    "text": "but it's also very inefficient and will",
    "start": "151120",
    "end": "153000"
  },
  {
    "text": "very likely cause performance issues if",
    "start": "153000",
    "end": "155239"
  },
  {
    "text": "we go back to the demo you can see that",
    "start": "155239",
    "end": "156640"
  },
  {
    "text": "I'm console pooping every time that",
    "start": "156640",
    "end": "158200"
  },
  {
    "text": "calculation runs by the time we get to",
    "start": "158200",
    "end": "159959"
  },
  {
    "text": "the bottom of the page we've already",
    "start": "159959",
    "end": "161159"
  },
  {
    "text": "taken over 3,000 console poops and not",
    "start": "161159",
    "end": "163480"
  },
  {
    "text": "only that but the event listener is",
    "start": "163480",
    "end": "164840"
  },
  {
    "text": "still running even after all the images",
    "start": "164840",
    "end": "166360"
  },
  {
    "text": "load so it's doing all the calculations",
    "start": "166360",
    "end": "168360"
  },
  {
    "text": "for no reason in the background on the",
    "start": "168360",
    "end": "170239"
  },
  {
    "start": "170000",
    "end": "286000"
  },
  {
    "text": "main thread let's see how we can use",
    "start": "170239",
    "end": "171720"
  },
  {
    "text": "intersection Observer to clean up this",
    "start": "171720",
    "end": "173400"
  },
  {
    "text": "mess we'll start with a function called",
    "start": "173400",
    "end": "175440"
  },
  {
    "text": "lazy load that takes a Dom element as",
    "start": "175440",
    "end": "177440"
  },
  {
    "text": "its argument then we'll create an",
    "start": "177440",
    "end": "179000"
  },
  {
    "text": "intersection Observer for each image",
    "start": "179000",
    "end": "180760"
  },
  {
    "text": "that we want to Lazy load it has a",
    "start": "180760",
    "end": "182680"
  },
  {
    "text": "callback function that has the entries",
    "start": "182680",
    "end": "184560"
  },
  {
    "text": "which are the actual observations on the",
    "start": "184560",
    "end": "186319"
  },
  {
    "text": "element and then Observer is the",
    "start": "186319",
    "end": "187879"
  },
  {
    "text": "interface that we can use to manage the",
    "start": "187879",
    "end": "189519"
  },
  {
    "text": "actual instance of this Observer by",
    "start": "189519",
    "end": "191599"
  },
  {
    "text": "default it will listen to the top level",
    "start": "191599",
    "end": "193159"
  },
  {
    "text": "viewport on the document but you can",
    "start": "193159",
    "end": "195040"
  },
  {
    "text": "pass in an options object if you want to",
    "start": "195040",
    "end": "196840"
  },
  {
    "text": "listen to a specific div or element at",
    "start": "196840",
    "end": "199200"
  },
  {
    "text": "this point I want to make a note that",
    "start": "199200",
    "end": "200280"
  },
  {
    "text": "you can use a single intersection",
    "start": "200280",
    "end": "201640"
  },
  {
    "text": "Observer to listen to multiple images",
    "start": "201640",
    "end": "203720"
  },
  {
    "text": "but in this demo I'm going to give each",
    "start": "203720",
    "end": "205200"
  },
  {
    "text": "image its own Observer and I'll show you",
    "start": "205200",
    "end": "206959"
  },
  {
    "text": "why in just a minute the next step is to",
    "start": "206959",
    "end": "209159"
  },
  {
    "text": "Loop over the entries and see if any of",
    "start": "209159",
    "end": "211040"
  },
  {
    "text": "them are intersecting with the viewport",
    "start": "211040",
    "end": "213040"
  },
  {
    "text": "and fortunately we don't have to do any",
    "start": "213040",
    "end": "214439"
  },
  {
    "text": "of our own calculation we can just call",
    "start": "214439",
    "end": "216200"
  },
  {
    "text": "entry is intersecting which will return",
    "start": "216200",
    "end": "218080"
  },
  {
    "text": "a Boolean true or false however there",
    "start": "218080",
    "end": "220120"
  },
  {
    "text": "are situations where you probably want",
    "start": "220120",
    "end": "221319"
  },
  {
    "text": "to do some calculations here so you have",
    "start": "221319",
    "end": "223159"
  },
  {
    "text": "access to all of the bounding boxes for",
    "start": "223159",
    "end": "224879"
  },
  {
    "text": "the elements from here we need to get",
    "start": "224879",
    "end": "226760"
  },
  {
    "text": "the actual image that has intersected",
    "start": "226760",
    "end": "228640"
  },
  {
    "text": "with the window which we can do by",
    "start": "228640",
    "end": "230159"
  },
  {
    "text": "calling entry Target and then we can run",
    "start": "230159",
    "end": "232439"
  },
  {
    "text": "the same logic that we did in the",
    "start": "232439",
    "end": "233519"
  },
  {
    "text": "previous example that adds the attribute",
    "start": "233519",
    "end": "235599"
  },
  {
    "text": "and the fade class now at this point we",
    "start": "235599",
    "end": "237959"
  },
  {
    "text": "know the image is visible so we can of",
    "start": "237959",
    "end": "240079"
  },
  {
    "text": "the Observer by calling Observer",
    "start": "240079",
    "end": "241599"
  },
  {
    "text": "disconnect that means we won't have any",
    "start": "241599",
    "end": "243200"
  },
  {
    "text": "unnecessary work happening on the main",
    "start": "243200",
    "end": "244680"
  },
  {
    "text": "thread like we did in the previous",
    "start": "244680",
    "end": "245920"
  },
  {
    "text": "example and it's also why I set up an",
    "start": "245920",
    "end": "247560"
  },
  {
    "text": "observer for each image the last thing",
    "start": "247560",
    "end": "249799"
  },
  {
    "text": "we need to do in this function is call",
    "start": "249799",
    "end": "251480"
  },
  {
    "text": "observe on the target element and then",
    "start": "251480",
    "end": "253799"
  },
  {
    "text": "finally we'll Loop over all of the",
    "start": "253799",
    "end": "255120"
  },
  {
    "text": "elements in the Dom and apply this",
    "start": "255120",
    "end": "256639"
  },
  {
    "text": "Observer to them when we reload the page",
    "start": "256639",
    "end": "258600"
  },
  {
    "text": "we get seven console logs initially",
    "start": "258600",
    "end": "260320"
  },
  {
    "text": "which are for the seven images on the",
    "start": "260320",
    "end": "261919"
  },
  {
    "text": "page then as we scroll down we'll start",
    "start": "261919",
    "end": "263960"
  },
  {
    "text": "to intersect with the images and Trigger",
    "start": "263960",
    "end": "265840"
  },
  {
    "text": "additional console logs in total our",
    "start": "265840",
    "end": "268240"
  },
  {
    "text": "code only runs 13 times which is much",
    "start": "268240",
    "end": "270440"
  },
  {
    "text": "better than the 4,000 poops we took a",
    "start": "270440",
    "end": "271840"
  },
  {
    "text": "few minutes ago I'm going to go ahead",
    "start": "271840",
    "end": "273440"
  },
  {
    "text": "and wrap things up there if this video",
    "start": "273440",
    "end": "274919"
  },
  {
    "text": "helped you please like And subscribe",
    "start": "274919",
    "end": "276560"
  },
  {
    "text": "thanks for watching and I will talk to",
    "start": "276560",
    "end": "278320"
  },
  {
    "text": "you soon",
    "start": "278320",
    "end": "281440"
  },
  {
    "text": "[Music]",
    "start": "282320",
    "end": "288040"
  }
]