[
  {
    "text": "solid a declarative javascript framework",
    "start": "160",
    "end": "2399"
  },
  {
    "text": "for building fast uis with maximum",
    "start": "2399",
    "end": "4640"
  },
  {
    "text": "control over reactivity it was created",
    "start": "4640",
    "end": "6879"
  },
  {
    "text": "by ryan carniato in 2018 and is loved by",
    "start": "6879",
    "end": "9760"
  },
  {
    "text": "developers because it's both pragmatic",
    "start": "9760",
    "end": "11679"
  },
  {
    "text": "and extremely performant on the surface",
    "start": "11679",
    "end": "13599"
  },
  {
    "text": "it shares many similarities with react",
    "start": "13599",
    "end": "15519"
  },
  {
    "text": "components are javascript functions that",
    "start": "15519",
    "end": "17119"
  },
  {
    "text": "return jsx for the ui however unlike",
    "start": "17119",
    "end": "19920"
  },
  {
    "text": "react there's no virtual dom it uses a",
    "start": "19920",
    "end": "21920"
  },
  {
    "text": "compiler more like svelt that converts",
    "start": "21920",
    "end": "23840"
  },
  {
    "text": "your code into vanilla javascript to",
    "start": "23840",
    "end": "25599"
  },
  {
    "text": "bring you as close to the dom as",
    "start": "25599",
    "end": "26960"
  },
  {
    "text": "possible the framework itself only",
    "start": "26960",
    "end": "28480"
  },
  {
    "text": "weighs 7 kilobytes and it completely",
    "start": "28480",
    "end": "30080"
  },
  {
    "text": "crushes runtime performance benchmarks",
    "start": "30080",
    "end": "32000"
  },
  {
    "text": "without the need for any extra magic or",
    "start": "32000",
    "end": "34079"
  },
  {
    "text": "weird hacks in your code but most",
    "start": "34079",
    "end": "35920"
  },
  {
    "text": "importantly it's truly reactive a",
    "start": "35920",
    "end": "38000"
  },
  {
    "text": "function component is only called once",
    "start": "38000",
    "end": "40160"
  },
  {
    "text": "which means you can do unheard of things",
    "start": "40160",
    "end": "41920"
  },
  {
    "text": "like you set interval predictably at the",
    "start": "41920",
    "end": "44000"
  },
  {
    "text": "top level data that changes or state is",
    "start": "44000",
    "end": "46480"
  },
  {
    "text": "managed with the create signal primitive",
    "start": "46480",
    "end": "48399"
  },
  {
    "text": "which returns a getter and setter the",
    "start": "48399",
    "end": "50160"
  },
  {
    "text": "framework will observe this data and",
    "start": "50160",
    "end": "51840"
  },
  {
    "text": "surgically update its exact location in",
    "start": "51840",
    "end": "53920"
  },
  {
    "text": "the dom when it changes instead of",
    "start": "53920",
    "end": "55680"
  },
  {
    "text": "re-rendering the entire component again",
    "start": "55680",
    "end": "57840"
  },
  {
    "text": "it's truly reactive to get started",
    "start": "57840",
    "end": "59920"
  },
  {
    "text": "generate a new solid project it uses",
    "start": "59920",
    "end": "62079"
  },
  {
    "text": "veet as the build tool and should look",
    "start": "62079",
    "end": "63680"
  },
  {
    "text": "very familiar if you've ever used react",
    "start": "63680",
    "end": "65680"
  },
  {
    "text": "define a component as a plain javascript",
    "start": "65680",
    "end": "67760"
  },
  {
    "text": "function now when you define the ui with",
    "start": "67760",
    "end": "69680"
  },
  {
    "text": "jsx you actually get a real dom element",
    "start": "69680",
    "end": "72320"
  },
  {
    "text": "instead of some weird framework",
    "start": "72320",
    "end": "73680"
  },
  {
    "text": "abstraction to add reactive state to a",
    "start": "73680",
    "end": "75680"
  },
  {
    "text": "component use the create signal function",
    "start": "75680",
    "end": "77920"
  },
  {
    "text": "it provides a getter and setter and",
    "start": "77920",
    "end": "79840"
  },
  {
    "text": "notice how the getter is a function this",
    "start": "79840",
    "end": "81840"
  },
  {
    "text": "allows the framework to observe the",
    "start": "81840",
    "end": "83280"
  },
  {
    "text": "current value reactively we can easily",
    "start": "83280",
    "end": "85520"
  },
  {
    "text": "create derived state by simply defining",
    "start": "85520",
    "end": "87600"
  },
  {
    "text": "another function based on the original",
    "start": "87600",
    "end": "89600"
  },
  {
    "text": "signal and it also provides a function",
    "start": "89600",
    "end": "91520"
  },
  {
    "text": "to memoize the return value or expensive",
    "start": "91520",
    "end": "93759"
  },
  {
    "text": "computations in some cases you may want",
    "start": "93759",
    "end": "96000"
  },
  {
    "text": "to run code when your data changes for",
    "start": "96000",
    "end": "98320"
  },
  {
    "text": "that createfact allows you to run side",
    "start": "98320",
    "end": "100720"
  },
  {
    "text": "effects any signals referenced in the",
    "start": "100720",
    "end": "102479"
  },
  {
    "text": "body of the function will automatically",
    "start": "102479",
    "end": "104240"
  },
  {
    "text": "be subscribed to to rerun the side",
    "start": "104240",
    "end": "106240"
  },
  {
    "text": "effect whenever the value changes solid",
    "start": "106240",
    "end": "108640"
  },
  {
    "text": "also provides on mount and on cleanup",
    "start": "108640",
    "end": "110720"
  },
  {
    "text": "functions that tap into the beginning",
    "start": "110720",
    "end": "112479"
  },
  {
    "text": "and end of the component lifecycle the",
    "start": "112479",
    "end": "114320"
  },
  {
    "text": "framework also goes out of its way to",
    "start": "114320",
    "end": "116000"
  },
  {
    "text": "make jsx more developer friendly for",
    "start": "116000",
    "end": "118079"
  },
  {
    "text": "example it has a show component to",
    "start": "118079",
    "end": "120000"
  },
  {
    "text": "handle conditional logic and the four",
    "start": "120000",
    "end": "121840"
  },
  {
    "text": "component to simplify loops over a",
    "start": "121840",
    "end": "123680"
  },
  {
    "text": "collection of items when it comes to",
    "start": "123680",
    "end": "125280"
  },
  {
    "text": "collections it also provides a create",
    "start": "125280",
    "end": "127439"
  },
  {
    "text": "store function that can easily handle",
    "start": "127439",
    "end": "129360"
  },
  {
    "text": "nested reactivity and it supports custom",
    "start": "129360",
    "end": "131760"
  },
  {
    "text": "directives with a used keyword which is",
    "start": "131760",
    "end": "133599"
  },
  {
    "text": "a highly efficient way to attach custom",
    "start": "133599",
    "end": "135520"
  },
  {
    "text": "behaviors to different elements and it",
    "start": "135520",
    "end": "137280"
  },
  {
    "text": "has everything else you would expect in",
    "start": "137280",
    "end": "138640"
  },
  {
    "text": "a modern framework like lazy loading",
    "start": "138640",
    "end": "140640"
  },
  {
    "text": "context ssr support and so on this has",
    "start": "140640",
    "end": "143440"
  },
  {
    "text": "been solid in 100 seconds hit the like",
    "start": "143440",
    "end": "145680"
  },
  {
    "text": "button and subscribe if you want to see",
    "start": "145680",
    "end": "147200"
  },
  {
    "text": "more short videos like this thanks for",
    "start": "147200",
    "end": "148879"
  },
  {
    "text": "watching and i will see you in the next",
    "start": "148879",
    "end": "150879"
  },
  {
    "text": "one",
    "start": "150879",
    "end": "153440"
  }
]