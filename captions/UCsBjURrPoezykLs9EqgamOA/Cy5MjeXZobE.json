[
  {
    "text": "infinite scroll allows you to query data",
    "start": "719",
    "end": "2760"
  },
  {
    "text": "on the Fly based on a user scroll",
    "start": "2760",
    "end": "4600"
  },
  {
    "text": "position which is generally a better",
    "start": "4600",
    "end": "6399"
  },
  {
    "text": "user experience than traditional",
    "start": "6399",
    "end": "8040"
  },
  {
    "text": "pagination and it's also easier for you",
    "start": "8040",
    "end": "10240"
  },
  {
    "text": "as a developer to implement in this",
    "start": "10240",
    "end": "12880"
  },
  {
    "text": "episode we're going to build an infinite",
    "start": "12880",
    "end": "14480"
  },
  {
    "text": "scroll feature in angular 4 using",
    "start": "14480",
    "end": "16520"
  },
  {
    "text": "Firebase on the back end to speed up the",
    "start": "16520",
    "end": "19080"
  },
  {
    "text": "development process we're going to use a",
    "start": "19080",
    "end": "21160"
  },
  {
    "text": "package called ngx infinite scroll this",
    "start": "21160",
    "end": "24039"
  },
  {
    "text": "will allow us to listen to as well as",
    "start": "24039",
    "end": "26039"
  },
  {
    "text": "throttle the scroll event which is very",
    "start": "26039",
    "end": "27880"
  },
  {
    "text": "useful when making our queries to",
    "start": "27880",
    "end": "29359"
  },
  {
    "text": "Firebase you can install it by running",
    "start": "29359",
    "end": "31400"
  },
  {
    "text": "npm install ngx infinite scroll then you",
    "start": "31400",
    "end": "34800"
  },
  {
    "text": "can include it in your app module or",
    "start": "34800",
    "end": "37079"
  },
  {
    "text": "whichever module is using it the module",
    "start": "37079",
    "end": "39399"
  },
  {
    "text": "itself exports a directive which we can",
    "start": "39399",
    "end": "41480"
  },
  {
    "text": "use in the HTML we'll get into this more",
    "start": "41480",
    "end": "43640"
  },
  {
    "text": "later but basically it listens for the",
    "start": "43640",
    "end": "45399"
  },
  {
    "text": "scroll event on the window and then",
    "start": "45399",
    "end": "46920"
  },
  {
    "text": "sends a scroll event that we can listen",
    "start": "46920",
    "end": "49600"
  },
  {
    "text": "for at this point let's start building",
    "start": "49600",
    "end": "51840"
  },
  {
    "text": "the service it only has one",
    "start": "51840",
    "end": "53559"
  },
  {
    "text": "responsibility and that's to pull data",
    "start": "53559",
    "end": "55559"
  },
  {
    "text": "from Firebase in this movies collection",
    "start": "55559",
    "end": "57879"
  },
  {
    "text": "which is just a simple collection with",
    "start": "57879",
    "end": "60000"
  },
  {
    "text": "some data about each movie so we can",
    "start": "60000",
    "end": "62399"
  },
  {
    "text": "start by injecting the angular fire",
    "start": "62399",
    "end": "64478"
  },
  {
    "text": "database and then we'll create a",
    "start": "64479",
    "end": "66159"
  },
  {
    "text": "function to get movies the first",
    "start": "66159",
    "end": "68680"
  },
  {
    "text": "argument is the batch size and that's",
    "start": "68680",
    "end": "70479"
  },
  {
    "text": "how many items we want to pull for each",
    "start": "70479",
    "end": "72159"
  },
  {
    "text": "query the last key argument is optional",
    "start": "72159",
    "end": "75000"
  },
  {
    "text": "and that represents the key from the",
    "start": "75000",
    "end": "76360"
  },
  {
    "text": "previous set of records that we pulled",
    "start": "76360",
    "end": "78280"
  },
  {
    "text": "Firebase doesn't have an equivalent to",
    "start": "78280",
    "end": "79960"
  },
  {
    "text": "sqls offset Clause so we need to pass it",
    "start": "79960",
    "end": "82600"
  },
  {
    "text": "a specific key that tells it where to",
    "start": "82600",
    "end": "84159"
  },
  {
    "text": "start the next query so if we get the",
    "start": "84159",
    "end": "86079"
  },
  {
    "text": "last key as an argument then we'll set",
    "start": "86079",
    "end": "87520"
  },
  {
    "text": "it as the start app property before",
    "start": "87520",
    "end": "89079"
  },
  {
    "text": "sending this query to to",
    "start": "89079",
    "end": "90759"
  },
  {
    "text": "Firebase so with that done now we can",
    "start": "90759",
    "end": "92799"
  },
  {
    "text": "start building the component and we'll",
    "start": "92799",
    "end": "94560"
  },
  {
    "text": "actually get started in the HTML first",
    "start": "94560",
    "end": "97880"
  },
  {
    "text": "we're going to Loop over the movies just",
    "start": "97880",
    "end": "99640"
  },
  {
    "text": "like any other observable by passing it",
    "start": "99640",
    "end": "101840"
  },
  {
    "text": "the async pipe then underneath that Loop",
    "start": "101840",
    "end": "104640"
  },
  {
    "text": "we'll create a div that has that",
    "start": "104640",
    "end": "106119"
  },
  {
    "text": "infinite scroll directive that we looked",
    "start": "106119",
    "end": "107960"
  },
  {
    "text": "at earlier the main thing to look at",
    "start": "107960",
    "end": "110119"
  },
  {
    "text": "here is the infinite scroll throttle",
    "start": "110119",
    "end": "112360"
  },
  {
    "text": "which is 1,000 milliseconds or 1 second",
    "start": "112360",
    "end": "115600"
  },
  {
    "text": "then there's the scrolled event which",
    "start": "115600",
    "end": "117280"
  },
  {
    "text": "will emit when the user Scrolls down on",
    "start": "117280",
    "end": "119360"
  },
  {
    "text": "the page the reason we want to throttle",
    "start": "119360",
    "end": "121360"
  },
  {
    "text": "this event is because we'll actually be",
    "start": "121360",
    "end": "123039"
  },
  {
    "text": "sending the Firebase query when this",
    "start": "123039",
    "end": "124759"
  },
  {
    "text": "event goes off if we didn't throttle it",
    "start": "124759",
    "end": "126880"
  },
  {
    "text": "it'd be sending the same redundant query",
    "start": "126880",
    "end": "128440"
  },
  {
    "text": "to Firebase every couple milliseconds",
    "start": "128440",
    "end": "130399"
  },
  {
    "text": "which wouldn't be good and as a final",
    "start": "130399",
    "end": "132760"
  },
  {
    "text": "touch We'll add a loading spinner when",
    "start": "132760",
    "end": "134400"
  },
  {
    "text": "there's still data left to be loaded and",
    "start": "134400",
    "end": "136560"
  },
  {
    "text": "a notification message once we've",
    "start": "136560",
    "end": "138400"
  },
  {
    "text": "reached the end of the database so now",
    "start": "138400",
    "end": "141080"
  },
  {
    "text": "let's put this all together in the",
    "start": "141080",
    "end": "142360"
  },
  {
    "text": "typescript we're going to need the movie",
    "start": "142360",
    "end": "144519"
  },
  {
    "text": "Service as well as a behavior subject",
    "start": "144519",
    "end": "147040"
  },
  {
    "text": "and the low Dash Library we're going to",
    "start": "147040",
    "end": "149599"
  },
  {
    "text": "use the behavior subject to replace a",
    "start": "149599",
    "end": "151800"
  },
  {
    "text": "Firebase list observable this allows us",
    "start": "151800",
    "end": "154280"
  },
  {
    "text": "to concatenate each new batch of data",
    "start": "154280",
    "end": "156400"
  },
  {
    "text": "together as opposed to re querying the",
    "start": "156400",
    "end": "158480"
  },
  {
    "text": "old data along with the new data each",
    "start": "158480",
    "end": "160680"
  },
  {
    "text": "time the next variable we set is the",
    "start": "160680",
    "end": "163560"
  },
  {
    "text": "batch which is just the size we want for",
    "start": "163560",
    "end": "165360"
  },
  {
    "text": "each query then the last key is just the",
    "start": "165360",
    "end": "167800"
  },
  {
    "text": "Firebase push key to offset the next",
    "start": "167800",
    "end": "169879"
  },
  {
    "text": "query then finished is a Boolean that",
    "start": "169879",
    "end": "172360"
  },
  {
    "text": "will tell us whether or not the database",
    "start": "172360",
    "end": "174000"
  },
  {
    "text": "has any data left in it during NG on a",
    "start": "174000",
    "end": "177120"
  },
  {
    "text": "nit we'll load the initial data and then",
    "start": "177120",
    "end": "179159"
  },
  {
    "text": "we can call this same function in the",
    "start": "179159",
    "end": "181360"
  },
  {
    "text": "onscroll event handler as well the",
    "start": "181360",
    "end": "183959"
  },
  {
    "text": "purpose of get movies is to query data",
    "start": "183959",
    "end": "186080"
  },
  {
    "text": "and then concatenate it to the existing",
    "start": "186080",
    "end": "188080"
  },
  {
    "text": "Behavior subject the first thing we'll",
    "start": "188080",
    "end": "189879"
  },
  {
    "text": "do is see if the finished variable is",
    "start": "189879",
    "end": "191519"
  },
  {
    "text": "true and if so we'll just return null",
    "start": "191519",
    "end": "194319"
  },
  {
    "text": "otherwise we'll try to make a query to",
    "start": "194319",
    "end": "195879"
  },
  {
    "text": "the database so we'll call the movie",
    "start": "195879",
    "end": "198799"
  },
  {
    "text": "service.gov then we add one extra item",
    "start": "198799",
    "end": "201040"
  },
  {
    "text": "to the batch and the reason for this is",
    "start": "201040",
    "end": "202879"
  },
  {
    "text": "we need that extra item to use as the",
    "start": "202879",
    "end": "204760"
  },
  {
    "text": "key for any anticipated upcoming queries",
    "start": "204760",
    "end": "207920"
  },
  {
    "text": "then we can use the do operator to run",
    "start": "207920",
    "end": "209959"
  },
  {
    "text": "some arbitrary code whenever this",
    "start": "209959",
    "end": "211640"
  },
  {
    "text": "observable is subscribed to so the first",
    "start": "211640",
    "end": "213959"
  },
  {
    "text": "thing we'll do is set the last key to",
    "start": "213959",
    "end": "215720"
  },
  {
    "text": "that extra item that we queried and then",
    "start": "215720",
    "end": "218560"
  },
  {
    "text": "once that's set we can just slice it off",
    "start": "218560",
    "end": "220360"
  },
  {
    "text": "the array using the low-ash slice",
    "start": "220360",
    "end": "222599"
  },
  {
    "text": "operator so we just want the first two",
    "start": "222599",
    "end": "224879"
  },
  {
    "text": "out of the three items we queried so we",
    "start": "224879",
    "end": "226599"
  },
  {
    "text": "pass it the array with zero is the",
    "start": "226599",
    "end": "228720"
  },
  {
    "text": "starting index and then the batch size",
    "start": "228720",
    "end": "230599"
  },
  {
    "text": "is the ending index the cool thing about",
    "start": "230599",
    "end": "232959"
  },
  {
    "text": "Behavior subjects is you can just call",
    "start": "232959",
    "end": "234920"
  },
  {
    "text": "get value to get whatever value is",
    "start": "234920",
    "end": "236799"
  },
  {
    "text": "currently in that subject so we'll set",
    "start": "236799",
    "end": "239239"
  },
  {
    "text": "that to the current movies variable then",
    "start": "239239",
    "end": "241519"
  },
  {
    "text": "we'll see if the last key in each of",
    "start": "241519",
    "end": "243000"
  },
  {
    "text": "these two arrays is identical and if so",
    "start": "243000",
    "end": "245360"
  },
  {
    "text": "we'll know we've reached the end of the",
    "start": "245360",
    "end": "246439"
  },
  {
    "text": "database and we can just flag that",
    "start": "246439",
    "end": "248159"
  },
  {
    "text": "finished variable as",
    "start": "248159",
    "end": "249840"
  },
  {
    "text": "true and the final step is to just",
    "start": "249840",
    "end": "252079"
  },
  {
    "text": "update the value of the behavior subject",
    "start": "252079",
    "end": "253840"
  },
  {
    "text": "itself and we do that by concatenating",
    "start": "253840",
    "end": "255920"
  },
  {
    "text": "the current movies to the new movies",
    "start": "255920",
    "end": "257720"
  },
  {
    "text": "that we just queried and finally to",
    "start": "257720",
    "end": "260280"
  },
  {
    "text": "execute this code we call take one",
    "start": "260280",
    "end": "262440"
  },
  {
    "text": "because we only need to run this once",
    "start": "262440",
    "end": "264360"
  },
  {
    "text": "and then call",
    "start": "264360",
    "end": "266360"
  },
  {
    "text": "subscribe now if we go back to the app",
    "start": "266360",
    "end": "268479"
  },
  {
    "text": "we can see that whenever we scroll down",
    "start": "268479",
    "end": "270919"
  },
  {
    "text": "the scrolled event fires in the console",
    "start": "270919",
    "end": "273440"
  },
  {
    "text": "and it also loads the new movies from",
    "start": "273440",
    "end": "275479"
  },
  {
    "text": "Firebase when there's no more data to",
    "start": "275479",
    "end": "277520"
  },
  {
    "text": "load it stops showing the loading",
    "start": "277520",
    "end": "279160"
  },
  {
    "text": "spinner and instead shows that message",
    "start": "279160",
    "end": "281400"
  },
  {
    "text": "that we've reached the",
    "start": "281400",
    "end": "283560"
  },
  {
    "text": "end that's it for angular 4 and Firebase",
    "start": "283560",
    "end": "286400"
  },
  {
    "text": "if this video helped you please like And",
    "start": "286400",
    "end": "287919"
  },
  {
    "text": "subscribe and if you want support",
    "start": "287919",
    "end": "289800"
  },
  {
    "text": "building your own angular project",
    "start": "289800",
    "end": "291400"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "291400",
    "end": "293039"
  },
  {
    "text": "angular firebase.com you'll get a free",
    "start": "293039",
    "end": "295039"
  },
  {
    "text": "copy of my book as well as one-on-one",
    "start": "295039",
    "end": "297120"
  },
  {
    "text": "project Consulting thanks for watching",
    "start": "297120",
    "end": "299440"
  },
  {
    "text": "and and I'll see you soon",
    "start": "299440",
    "end": "303199"
  },
  {
    "text": "[Music]",
    "start": "305590",
    "end": "310619"
  }
]