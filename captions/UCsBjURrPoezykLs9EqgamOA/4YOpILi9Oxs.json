[
  {
    "start": "0",
    "end": "140000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "210"
  },
  {
    "text": "if debugging is the process of removing",
    "start": "210",
    "end": "1860"
  },
  {
    "text": "software bugs then programming must be",
    "start": "1860",
    "end": "3750"
  },
  {
    "text": "the process of putting them in in most",
    "start": "3750",
    "end": "5759"
  },
  {
    "text": "cases the bugs we introduce are harmless",
    "start": "5759",
    "end": "7830"
  },
  {
    "text": "but sometimes they can cause us to lose",
    "start": "7830",
    "end": "9750"
  },
  {
    "text": "hundreds of millions of dollars in a few",
    "start": "9750",
    "end": "11400"
  },
  {
    "text": "minutes crash airplanes and spaceships",
    "start": "11400",
    "end": "12840"
  },
  {
    "text": "and kill people",
    "start": "12840",
    "end": "14190"
  },
  {
    "text": "today I want to tell you some stories",
    "start": "14190",
    "end": "15570"
  },
  {
    "text": "about the most damaging hacks and bugs",
    "start": "15570",
    "end": "17460"
  },
  {
    "text": "throughout history and explain seven",
    "start": "17460",
    "end": "19230"
  },
  {
    "text": "software security concepts that every",
    "start": "19230",
    "end": "21060"
  },
  {
    "text": "developer should know if you're new here",
    "start": "21060",
    "end": "22619"
  },
  {
    "text": "like and subscribe and check out the",
    "start": "22619",
    "end": "24150"
  },
  {
    "text": "full write-up on bioship i/o there are",
    "start": "24150",
    "end": "26789"
  },
  {
    "text": "billions upon billions of lines of code",
    "start": "26789",
    "end": "28470"
  },
  {
    "text": "in production today around 50 million",
    "start": "28470",
    "end": "30359"
  },
  {
    "text": "lines for Microsoft Windows and over 2",
    "start": "30359",
    "end": "32668"
  },
  {
    "text": "billion lines across all Google services",
    "start": "32669",
    "end": "34290"
  },
  {
    "text": "and within all this code we have",
    "start": "34290",
    "end": "36239"
  },
  {
    "text": "vulnerabilities that have either not yet",
    "start": "36239",
    "end": "37800"
  },
  {
    "text": "been discovered or not yet been fixed",
    "start": "37800",
    "end": "39750"
  },
  {
    "text": "these are known as zero-day",
    "start": "39750",
    "end": "41250"
  },
  {
    "text": "vulnerabilities because as a developer",
    "start": "41250",
    "end": "43050"
  },
  {
    "text": "you have zero days to get it fixed when",
    "start": "43050",
    "end": "45539"
  },
  {
    "text": "a hacker decides to attack this",
    "start": "45539",
    "end": "46800"
  },
  {
    "text": "vulnerability it's known as a zero-day",
    "start": "46800",
    "end": "48170"
  },
  {
    "text": "exploit remember that one time Equifax",
    "start": "48170",
    "end": "50579"
  },
  {
    "text": "had exposed the credit reports of a",
    "start": "50579",
    "end": "52440"
  },
  {
    "text": "hundred and fifty million people that",
    "start": "52440",
    "end": "54120"
  },
  {
    "text": "wasn't the result of a zero-day exploit",
    "start": "54120",
    "end": "55829"
  },
  {
    "text": "it was the result of a known bug and",
    "start": "55829",
    "end": "57420"
  },
  {
    "text": "Apache struts that had already been",
    "start": "57420",
    "end": "58770"
  },
  {
    "text": "fixed weeks ago what sorry guys hackers",
    "start": "58770",
    "end": "63149"
  },
  {
    "text": "apparently from China had been scanning",
    "start": "63149",
    "end": "64890"
  },
  {
    "text": "the web for servers with this",
    "start": "64890",
    "end": "66299"
  },
  {
    "text": "vulnerability they hit the mother lode",
    "start": "66299",
    "end": "67740"
  },
  {
    "text": "with Equifax and extracted sensitive",
    "start": "67740",
    "end": "69689"
  },
  {
    "text": "information over the next 76 days this",
    "start": "69689",
    "end": "72240"
  },
  {
    "text": "breach has cost the company over a",
    "start": "72240",
    "end": "73799"
  },
  {
    "text": "billion dollars and could have been",
    "start": "73799",
    "end": "75030"
  },
  {
    "text": "prevented by installing a simple",
    "start": "75030",
    "end": "76560"
  },
  {
    "text": "security patch being hacked by a known",
    "start": "76560",
    "end": "78540"
  },
  {
    "text": "vulnerability is not uncommon at all in",
    "start": "78540",
    "end": "80580"
  },
  {
    "text": "fact you're likely shipping code with a",
    "start": "80580",
    "end": "82409"
  },
  {
    "text": "lot of known vulnerabilities right now",
    "start": "82409",
    "end": "84030"
  },
  {
    "text": "if you're a j/s developer go into your",
    "start": "84030",
    "end": "86070"
  },
  {
    "text": "project and hit NPM audit it will give",
    "start": "86070",
    "end": "88290"
  },
  {
    "text": "you a breakdown of all the different",
    "start": "88290",
    "end": "89579"
  },
  {
    "text": "ways you can be hacked via your open",
    "start": "89579",
    "end": "91140"
  },
  {
    "text": "source dependencies now there's no",
    "start": "91140",
    "end": "92880"
  },
  {
    "text": "reason to panic if you have hundreds of",
    "start": "92880",
    "end": "94560"
  },
  {
    "text": "high severity alerts the best way to",
    "start": "94560",
    "end": "96210"
  },
  {
    "text": "avoid being hacked is to simply update",
    "start": "96210",
    "end": "98369"
  },
  {
    "text": "your packages but if you truly want to",
    "start": "98369",
    "end": "100229"
  },
  {
    "text": "understand the flaws that are",
    "start": "100229",
    "end": "101549"
  },
  {
    "text": "compromising these packages you should",
    "start": "101549",
    "end": "103320"
  },
  {
    "text": "enroll in the enterprise security course",
    "start": "103320",
    "end": "104850"
  },
  {
    "text": "from angular Academy it's a ten week",
    "start": "104850",
    "end": "106710"
  },
  {
    "text": "long program that will teach you how to",
    "start": "106710",
    "end": "108240"
  },
  {
    "text": "confidently build secure web",
    "start": "108240",
    "end": "109799"
  },
  {
    "text": "applications you'll find the link in the",
    "start": "109799",
    "end": "111570"
  },
  {
    "text": "description and you can use this code to",
    "start": "111570",
    "end": "113130"
  },
  {
    "text": "take $50 off the enrollment price using",
    "start": "113130",
    "end": "115770"
  },
  {
    "text": "components with known vulnerabilities is",
    "start": "115770",
    "end": "117450"
  },
  {
    "text": "one of the most common ways that web",
    "start": "117450",
    "end": "119100"
  },
  {
    "text": "applications get hacked but it's also",
    "start": "119100",
    "end": "120840"
  },
  {
    "text": "very preventable because as you can see",
    "start": "120840",
    "end": "122520"
  },
  {
    "text": "here most of the issues have already",
    "start": "122520",
    "end": "124170"
  },
  {
    "text": "been patched and keep in mind this issue",
    "start": "124170",
    "end": "126090"
  },
  {
    "text": "isn't unique to JavaScript or NPM all",
    "start": "126090",
    "end": "128399"
  },
  {
    "text": "package managers that rely on open",
    "start": "128399",
    "end": "129989"
  },
  {
    "text": "source code face similar issues",
    "start": "129989",
    "end": "132130"
  },
  {
    "text": "so trust nobody and keep your packages",
    "start": "132130",
    "end": "134020"
  },
  {
    "text": "updated but most of all Sammy is my peer",
    "start": "134020",
    "end": "136510"
  },
  {
    "text": "oh wait a second I didn't mean to say",
    "start": "136510",
    "end": "139270"
  },
  {
    "text": "that last part it was somehow injected",
    "start": "139270",
    "end": "141130"
  },
  {
    "start": "140000",
    "end": "218000"
  },
  {
    "text": "into this video back in 2005 a guy named",
    "start": "141130",
    "end": "143740"
  },
  {
    "text": "Sammy used an exploit known as",
    "start": "143740",
    "end": "145330"
  },
  {
    "text": "cross-site scripting to updated users",
    "start": "145330",
    "end": "147310"
  },
  {
    "text": "myspace profile with this text within a",
    "start": "147310",
    "end": "149560"
  },
  {
    "text": "day it had spread to over a million",
    "start": "149560",
    "end": "151120"
  },
  {
    "text": "users",
    "start": "151120",
    "end": "151720"
  },
  {
    "text": "it was mostly harmless but they did a",
    "start": "151720",
    "end": "153340"
  },
  {
    "text": "rest Sammy can victim of a felony and",
    "start": "153340",
    "end": "154990"
  },
  {
    "text": "worst of all took away his internet for",
    "start": "154990",
    "end": "157120"
  },
  {
    "text": "a year a cross-site scripting exploit",
    "start": "157120",
    "end": "159280"
  },
  {
    "text": "occurs when the attacker manages to run",
    "start": "159280",
    "end": "161320"
  },
  {
    "text": "some JavaScript code on a different",
    "start": "161320",
    "end": "163000"
  },
  {
    "text": "users browser there are a few different",
    "start": "163000",
    "end": "165130"
  },
  {
    "text": "ways to achieve this but the most common",
    "start": "165130",
    "end": "166840"
  },
  {
    "text": "way is for the attacker to save the",
    "start": "166840",
    "end": "168730"
  },
  {
    "text": "script in a web applications database",
    "start": "168730",
    "end": "170650"
  },
  {
    "text": "the malicious script will then be",
    "start": "170650",
    "end": "172390"
  },
  {
    "text": "accessed by a different user that will",
    "start": "172390",
    "end": "174130"
  },
  {
    "text": "execute the JavaScript on the client",
    "start": "174130",
    "end": "175810"
  },
  {
    "text": "side device and at that point the",
    "start": "175810",
    "end": "177700"
  },
  {
    "text": "JavaScript code can submit forms click",
    "start": "177700",
    "end": "179500"
  },
  {
    "text": "on buttons on behalf of the logged in",
    "start": "179500",
    "end": "181420"
  },
  {
    "text": "user so how do you avoid cross-site",
    "start": "181420",
    "end": "183490"
  },
  {
    "text": "scripting attacks as a developer",
    "start": "183490",
    "end": "185110"
  },
  {
    "text": "well the attacker first needs to save",
    "start": "185110",
    "end": "187030"
  },
  {
    "text": "some malicious code on your server so",
    "start": "187030",
    "end": "189100"
  },
  {
    "text": "step one is to do some server-side",
    "start": "189100",
    "end": "190840"
  },
  {
    "text": "validation of incoming data if it's",
    "start": "190840",
    "end": "193150"
  },
  {
    "text": "surrounded by script tags you might not",
    "start": "193150",
    "end": "194890"
  },
  {
    "text": "want to save it but let's imagine you",
    "start": "194890",
    "end": "196450"
  },
  {
    "text": "fail to sanitize the incoming data the",
    "start": "196450",
    "end": "198910"
  },
  {
    "text": "attacker still needs a way to run that",
    "start": "198910",
    "end": "200620"
  },
  {
    "text": "script on the client-side device so the",
    "start": "200620",
    "end": "202630"
  },
  {
    "text": "attacker is counting on you to render",
    "start": "202630",
    "end": "204490"
  },
  {
    "text": "out the raw HTML of the script",
    "start": "204490",
    "end": "206470"
  },
  {
    "text": "fortunately modern front-end frameworks",
    "start": "206470",
    "end": "208240"
  },
  {
    "text": "make it really difficult to shoot",
    "start": "208240",
    "end": "209770"
  },
  {
    "text": "yourself in the foot in react for",
    "start": "209770",
    "end": "211450"
  },
  {
    "text": "example if you want to write unsafe code",
    "start": "211450",
    "end": "213490"
  },
  {
    "text": "you have to use this dangerously set",
    "start": "213490",
    "end": "215380"
  },
  {
    "text": "inner HTML prop just to do so",
    "start": "215380",
    "end": "217540"
  },
  {
    "text": "so with cross-site scripting we have",
    "start": "217540",
    "end": "219460"
  },
  {
    "start": "218000",
    "end": "285000"
  },
  {
    "text": "malicious code running on the browser",
    "start": "219460",
    "end": "220780"
  },
  {
    "text": "but it's also possible to run bad code",
    "start": "220780",
    "end": "223209"
  },
  {
    "text": "directly on a database let's go back to",
    "start": "223209",
    "end": "225790"
  },
  {
    "text": "2008 and look at a company named",
    "start": "225790",
    "end": "227560"
  },
  {
    "text": "Heartland Payment Systems a company with",
    "start": "227560",
    "end": "229630"
  },
  {
    "text": "the highest standards and the most",
    "start": "229630",
    "end": "231100"
  },
  {
    "text": "trusted transactions and also a company",
    "start": "231100",
    "end": "233560"
  },
  {
    "text": "if that was the target of one of the",
    "start": "233560",
    "end": "234850"
  },
  {
    "text": "most elaborate and interesting hacks of",
    "start": "234850",
    "end": "236680"
  },
  {
    "text": "all time the attackers first gained",
    "start": "236680",
    "end": "238720"
  },
  {
    "text": "access to the company's databases by",
    "start": "238720",
    "end": "240820"
  },
  {
    "text": "using a technique known as SQL injection",
    "start": "240820",
    "end": "243370"
  },
  {
    "text": "instead of sending the expected data to",
    "start": "243370",
    "end": "245230"
  },
  {
    "text": "the database",
    "start": "245230",
    "end": "245860"
  },
  {
    "text": "they sent raw SQL statements and because",
    "start": "245860",
    "end": "248470"
  },
  {
    "text": "the data was not validated the database",
    "start": "248470",
    "end": "250270"
  },
  {
    "text": "would run this code as if it came from",
    "start": "250270",
    "end": "251860"
  },
  {
    "text": "the developers now this particular",
    "start": "251860",
    "end": "253630"
  },
  {
    "text": "database contain the information that",
    "start": "253630",
    "end": "255459"
  },
  {
    "text": "you would find on the back of a magnetic",
    "start": "255459",
    "end": "256870"
  },
  {
    "text": "strip on a credit card and they use this",
    "start": "256870",
    "end": "258850"
  },
  {
    "text": "stolen data to create counterfeit credit",
    "start": "258850",
    "end": "260560"
  },
  {
    "text": "cards that actually worked it's",
    "start": "260560",
    "end": "262330"
  },
  {
    "text": "estimated that over a hundred million",
    "start": "262330",
    "end": "263830"
  },
  {
    "text": "cards were compromised and",
    "start": "263830",
    "end": "265270"
  },
  {
    "text": "hacker Albert Gonzalez was sentenced to",
    "start": "265270",
    "end": "267639"
  },
  {
    "text": "20 years in prison",
    "start": "267639",
    "end": "268780"
  },
  {
    "text": "injection attacks similar to this effect",
    "start": "268780",
    "end": "271000"
  },
  {
    "text": "many different types of databases if you",
    "start": "271000",
    "end": "273190"
  },
  {
    "text": "use an ORM or object relational mapping",
    "start": "273190",
    "end": "275169"
  },
  {
    "text": "tool for your database you should be",
    "start": "275169",
    "end": "277000"
  },
  {
    "text": "safe from attacks like this but of",
    "start": "277000",
    "end": "278560"
  },
  {
    "text": "course it's always a good idea to",
    "start": "278560",
    "end": "279819"
  },
  {
    "text": "validate your input before it's sent to",
    "start": "279819",
    "end": "281650"
  },
  {
    "text": "your database another very easy way to",
    "start": "281650",
    "end": "283930"
  },
  {
    "text": "create a big problem as a developer is",
    "start": "283930",
    "end": "285849"
  },
  {
    "start": "285000",
    "end": "366000"
  },
  {
    "text": "to expose or leak a sensitive API key",
    "start": "285849",
    "end": "288580"
  },
  {
    "text": "you can think of a private API key as a",
    "start": "288580",
    "end": "290919"
  },
  {
    "text": "username and password and all bundled up",
    "start": "290919",
    "end": "292750"
  },
  {
    "text": "into a single string and it allows your",
    "start": "292750",
    "end": "294759"
  },
  {
    "text": "servers to securely communicate with",
    "start": "294759",
    "end": "296500"
  },
  {
    "text": "paid services like AWS Google cloud and",
    "start": "296500",
    "end": "299139"
  },
  {
    "text": "so on a few years ago I accidentally",
    "start": "299139",
    "end": "301599"
  },
  {
    "text": "leaked my AWS API key and it was almost",
    "start": "301599",
    "end": "304270"
  },
  {
    "text": "really bad I was using the node SDK for",
    "start": "304270",
    "end": "306970"
  },
  {
    "text": "a service that required the API key I",
    "start": "306970",
    "end": "309009"
  },
  {
    "text": "hard-coded the API key directly in a",
    "start": "309009",
    "end": "311020"
  },
  {
    "text": "source code instead of setting it as an",
    "start": "311020",
    "end": "312729"
  },
  {
    "text": "environment variable I then proceeded to",
    "start": "312729",
    "end": "314860"
  },
  {
    "text": "push the source code to a public github",
    "start": "314860",
    "end": "316990"
  },
  {
    "text": "repo a few weeks went by and then all of",
    "start": "316990",
    "end": "322090"
  },
  {
    "text": "a sudden I get a notification from AWS",
    "start": "322090",
    "end": "323860"
  },
  {
    "text": "that I've maxed out my budget when I",
    "start": "323860",
    "end": "326139"
  },
  {
    "text": "logged into my AWS account I had racked",
    "start": "326139",
    "end": "328240"
  },
  {
    "text": "up charges around $5,000 for ec2",
    "start": "328240",
    "end": "330819"
  },
  {
    "text": "instances running all over the world",
    "start": "330819",
    "end": "332500"
  },
  {
    "text": "luckily Amazon was nice enough to refund",
    "start": "332500",
    "end": "334509"
  },
  {
    "text": "those charges but it definitely made me",
    "start": "334509",
    "end": "336130"
  },
  {
    "text": "feel like an idiot",
    "start": "336130",
    "end": "336880"
  },
  {
    "text": "nowadays automatic scanners can often",
    "start": "336880",
    "end": "339219"
  },
  {
    "text": "detect if you have an exposed API key",
    "start": "339219",
    "end": "341139"
  },
  {
    "text": "and email you a notification but github",
    "start": "341139",
    "end": "343930"
  },
  {
    "text": "isn't the only place that you might leak",
    "start": "343930",
    "end": "345430"
  },
  {
    "text": "an API key when you include a private",
    "start": "345430",
    "end": "347259"
  },
  {
    "text": "key in a client-side web or mobile app a",
    "start": "347259",
    "end": "349270"
  },
  {
    "text": "hacker might be able to find it directly",
    "start": "349270",
    "end": "351279"
  },
  {
    "text": "in your source code now if you do end up",
    "start": "351279",
    "end": "353319"
  },
  {
    "text": "with an exposed API key you can fix the",
    "start": "353319",
    "end": "355270"
  },
  {
    "text": "problem by simply rolling it to a new",
    "start": "355270",
    "end": "357130"
  },
  {
    "text": "value and of course we're moving it from",
    "start": "357130",
    "end": "359199"
  },
  {
    "text": "any public repos or source code many",
    "start": "359199",
    "end": "361779"
  },
  {
    "text": "good API s will help you minimize the",
    "start": "361779",
    "end": "363520"
  },
  {
    "text": "damage by allowing you to assign",
    "start": "363520",
    "end": "365020"
  },
  {
    "text": "privileges to a specific API key this",
    "start": "365020",
    "end": "367539"
  },
  {
    "text": "allows you to follow the principle of",
    "start": "367539",
    "end": "369159"
  },
  {
    "text": "least privilege and only give API keys",
    "start": "369159",
    "end": "371199"
  },
  {
    "text": "access to the resources that they",
    "start": "371199",
    "end": "372849"
  },
  {
    "text": "actually need that will mitigate the",
    "start": "372849",
    "end": "374380"
  },
  {
    "text": "amount of damage that can be done if",
    "start": "374380",
    "end": "375729"
  },
  {
    "text": "that key does end up being leaked if we",
    "start": "375729",
    "end": "377949"
  },
  {
    "text": "look at a major cloud provider like AWS",
    "start": "377949",
    "end": "379810"
  },
  {
    "text": "will see that they offer hundreds of",
    "start": "379810",
    "end": "381520"
  },
  {
    "text": "different services and they might be",
    "start": "381520",
    "end": "383110"
  },
  {
    "text": "used by a company with thousands of",
    "start": "383110",
    "end": "384639"
  },
  {
    "text": "employees working on different projects",
    "start": "384639",
    "end": "386560"
  },
  {
    "text": "sharing a single API key that has access",
    "start": "386560",
    "end": "389110"
  },
  {
    "text": "to everything would be a very bad idea",
    "start": "389110",
    "end": "390940"
  },
  {
    "text": "instead the major cloud providers have a",
    "start": "390940",
    "end": "393159"
  },
  {
    "text": "system called i.m which allows you to",
    "start": "393159",
    "end": "395199"
  },
  {
    "text": "create groups or roles for your",
    "start": "395199",
    "end": "396699"
  },
  {
    "text": "organization once you've created a role",
    "start": "396699",
    "end": "399070"
  },
  {
    "text": "can attach a policy to that role to give",
    "start": "399070",
    "end": "400900"
  },
  {
    "text": "it access to a service that it needs",
    "start": "400900",
    "end": "402960"
  },
  {
    "text": "implementing fine-grained access control",
    "start": "402960",
    "end": "405220"
  },
  {
    "text": "over your data is more important than",
    "start": "405220",
    "end": "406780"
  },
  {
    "text": "ever in 2016 an employee of Morrison's",
    "start": "406780",
    "end": "409540"
  },
  {
    "text": "supermarkets in the UK stole the private",
    "start": "409540",
    "end": "411940"
  },
  {
    "text": "data of over 100,000 employees this",
    "start": "411940",
    "end": "414340"
  },
  {
    "text": "rogue employee did it by simply copying",
    "start": "414340",
    "end": "416290"
  },
  {
    "text": "the data onto a USB stick now this is",
    "start": "416290",
    "end": "419110"
  },
  {
    "text": "obviously unethical and illegal on the",
    "start": "419110",
    "end": "421000"
  },
  {
    "text": "employees part but the company itself is",
    "start": "421000",
    "end": "423160"
  },
  {
    "text": "facing a huge lawsuit and the penalties",
    "start": "423160",
    "end": "425350"
  },
  {
    "text": "for data breaches are becoming larger",
    "start": "425350",
    "end": "427000"
  },
  {
    "text": "with laws like GDP are in the EU so the",
    "start": "427000",
    "end": "429730"
  },
  {
    "text": "bottom line here is to always follow the",
    "start": "429730",
    "end": "431440"
  },
  {
    "text": "principle of least privilege when it",
    "start": "431440",
    "end": "432640"
  },
  {
    "text": "comes to accessing your customer or",
    "start": "432640",
    "end": "434470"
  },
  {
    "text": "employee data in speaking of data you",
    "start": "434470",
    "end": "436720"
  },
  {
    "text": "might come across something called the",
    "start": "436720",
    "end": "437950"
  },
  {
    "text": "CIA triad it's a model for data security",
    "start": "437950",
    "end": "440740"
  },
  {
    "text": "that stands for confidentiality",
    "start": "440740",
    "end": "442000"
  },
  {
    "text": "integrity and availability",
    "start": "442000",
    "end": "444100"
  },
  {
    "text": "generally speaking you make data",
    "start": "444100",
    "end": "445840"
  },
  {
    "text": "confidential by implementing user",
    "start": "445840",
    "end": "447460"
  },
  {
    "text": "authentication so only authorized users",
    "start": "447460",
    "end": "449620"
  },
  {
    "text": "can access the data integrity it means",
    "start": "449620",
    "end": "452110"
  },
  {
    "text": "the data can't be accidentally modified",
    "start": "452110",
    "end": "453820"
  },
  {
    "text": "or deleted without the users",
    "start": "453820",
    "end": "455350"
  },
  {
    "text": "authorization but I think the most",
    "start": "455350",
    "end": "456940"
  },
  {
    "text": "interesting question is how do you make",
    "start": "456940",
    "end": "458620"
  },
  {
    "text": "your data highly available in 2018",
    "start": "458620",
    "end": "461080"
  },
  {
    "start": "460000",
    "end": "539000"
  },
  {
    "text": "github survive the biggest DDoS attack",
    "start": "461080",
    "end": "463600"
  },
  {
    "text": "or a distributed denial of service",
    "start": "463600",
    "end": "465280"
  },
  {
    "text": "attack in history",
    "start": "465280",
    "end": "466210"
  },
  {
    "text": "it took github down for less than 10",
    "start": "466210",
    "end": "468400"
  },
  {
    "text": "minutes but that's still a pretty big",
    "start": "468400",
    "end": "469870"
  },
  {
    "text": "deal considering how many people around",
    "start": "469870",
    "end": "471310"
  },
  {
    "text": "the world depend on github at any given",
    "start": "471310",
    "end": "473170"
  },
  {
    "text": "moment a DDoS attack works by flooding a",
    "start": "473170",
    "end": "475750"
  },
  {
    "text": "service with so much traffic that it",
    "start": "475750",
    "end": "477460"
  },
  {
    "text": "just fails to scale and completely stops",
    "start": "477460",
    "end": "479500"
  },
  {
    "text": "working you can see in this chart how",
    "start": "479500",
    "end": "481390"
  },
  {
    "text": "the inbound traffic suddenly spiked but",
    "start": "481390",
    "end": "483460"
  },
  {
    "text": "the server's treated these as legitimate",
    "start": "483460",
    "end": "485020"
  },
  {
    "text": "requests and responded with a normal",
    "start": "485020",
    "end": "486850"
  },
  {
    "text": "response github is big enough to handle",
    "start": "486850",
    "end": "489190"
  },
  {
    "text": "attacks like this but smaller sites",
    "start": "489190",
    "end": "490870"
  },
  {
    "text": "might not be so lucky in some cases DDoS",
    "start": "490870",
    "end": "493600"
  },
  {
    "text": "attacks have been used to shut down a",
    "start": "493600",
    "end": "494950"
  },
  {
    "text": "service and then request a ransom from",
    "start": "494950",
    "end": "496900"
  },
  {
    "text": "the owner so how do you protect yourself",
    "start": "496900",
    "end": "498550"
  },
  {
    "text": "well the simple answer is to be ready to",
    "start": "498550",
    "end": "501070"
  },
  {
    "text": "scale and that likely means using a big",
    "start": "501070",
    "end": "503050"
  },
  {
    "text": "cloud provider a service like Google",
    "start": "503050",
    "end": "505090"
  },
  {
    "text": "cloud armor has the bandwidth to handle",
    "start": "505090",
    "end": "506530"
  },
  {
    "text": "attacks like this and it can also",
    "start": "506530",
    "end": "508210"
  },
  {
    "text": "prevent many other attacks that we",
    "start": "508210",
    "end": "509590"
  },
  {
    "text": "talked about earlier in the video but at",
    "start": "509590",
    "end": "511390"
  },
  {
    "text": "the end of the day nobody's application",
    "start": "511390",
    "end": "512950"
  },
  {
    "text": "is 100% safe there are likely hackers",
    "start": "512950",
    "end": "515260"
  },
  {
    "text": "out there right now using zero-day",
    "start": "515260",
    "end": "516760"
  },
  {
    "text": "exploits that we don't know about yet",
    "start": "516760",
    "end": "518349"
  },
  {
    "text": "and it's only a matter of time before",
    "start": "518349",
    "end": "519940"
  },
  {
    "text": "the next major data breach is in the",
    "start": "519940",
    "end": "521500"
  },
  {
    "text": "headlines if this video helped you",
    "start": "521500",
    "end": "523120"
  },
  {
    "text": "please like and subscribe and make sure",
    "start": "523120",
    "end": "524770"
  },
  {
    "text": "to check out the enterprise security",
    "start": "524770",
    "end": "526000"
  },
  {
    "text": "course if you really want to master",
    "start": "526000",
    "end": "527830"
  },
  {
    "text": "these concepts thanks for watching and I",
    "start": "527830",
    "end": "529990"
  },
  {
    "text": "will",
    "start": "529990",
    "end": "530390"
  },
  {
    "text": "talk to you soon",
    "start": "530390",
    "end": "532870"
  },
  {
    "text": "[Music]",
    "start": "533040",
    "end": "541209"
  }
]