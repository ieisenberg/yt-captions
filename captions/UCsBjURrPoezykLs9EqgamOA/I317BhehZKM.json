[
  {
    "text": "in this episode I'm going to show you",
    "start": "1120",
    "end": "2960"
  },
  {
    "text": "four different ways to share data",
    "start": "2960",
    "end": "5040"
  },
  {
    "text": "between angular",
    "start": "5040",
    "end": "6720"
  },
  {
    "text": "components parent to child via the input",
    "start": "6720",
    "end": "10430"
  },
  {
    "text": "[Music]",
    "start": "10430",
    "end": "13699"
  },
  {
    "text": "decorator when you declare a variable",
    "start": "14040",
    "end": "16278"
  },
  {
    "text": "with the input decorator in the child",
    "start": "16279",
    "end": "18439"
  },
  {
    "text": "component it allows that variable to be",
    "start": "18439",
    "end": "21080"
  },
  {
    "text": "received from the parent component",
    "start": "21080",
    "end": "23680"
  },
  {
    "text": "template in this case we Define a",
    "start": "23680",
    "end": "25800"
  },
  {
    "text": "message variable in the parent then use",
    "start": "25800",
    "end": "28480"
  },
  {
    "text": "square brackets to pass the data to the",
    "start": "28480",
    "end": "31360"
  },
  {
    "text": "child now the child component can",
    "start": "31360",
    "end": "33640"
  },
  {
    "text": "display the data in its own",
    "start": "33640",
    "end": "35750"
  },
  {
    "text": "[Music]",
    "start": "35750",
    "end": "38960"
  },
  {
    "text": "template child to parent via output and",
    "start": "41840",
    "end": "45320"
  },
  {
    "text": "event emitter another way to share data",
    "start": "45320",
    "end": "48239"
  },
  {
    "text": "is to emit it from the child which can",
    "start": "48239",
    "end": "50800"
  },
  {
    "text": "be listened to by the parent this",
    "start": "50800",
    "end": "53199"
  },
  {
    "text": "approach is ideal when you want to share",
    "start": "53199",
    "end": "55199"
  },
  {
    "text": "data changes that occur on things like",
    "start": "55199",
    "end": "57640"
  },
  {
    "text": "button clicks form entries and other",
    "start": "57640",
    "end": "59960"
  },
  {
    "text": "user",
    "start": "59960",
    "end": "62239"
  },
  {
    "text": "events in the child we declare a message",
    "start": "62399",
    "end": "65320"
  },
  {
    "text": "event variable with the output decorator",
    "start": "65320",
    "end": "68600"
  },
  {
    "text": "and set it equal to a new event",
    "start": "68600",
    "end": "71050"
  },
  {
    "text": "[Music]",
    "start": "71050",
    "end": "75159"
  },
  {
    "text": "emitter then we create a function named",
    "start": "75159",
    "end": "77680"
  },
  {
    "text": "send message that calls emit on this",
    "start": "77680",
    "end": "80479"
  },
  {
    "text": "event with the message we want to",
    "start": "80479",
    "end": "83960"
  },
  {
    "text": "send lastly we create a button to",
    "start": "87079",
    "end": "89520"
  },
  {
    "text": "trigger the this function in the",
    "start": "89520",
    "end": "92310"
  },
  {
    "text": "[Music]",
    "start": "92310",
    "end": "102399"
  },
  {
    "text": "HTML in the parent we create a function",
    "start": "105079",
    "end": "107920"
  },
  {
    "text": "to receive the message and set it equal",
    "start": "107920",
    "end": "110280"
  },
  {
    "text": "to the message",
    "start": "110280",
    "end": "112000"
  },
  {
    "text": "variable the parent can now subscribe to",
    "start": "112000",
    "end": "114280"
  },
  {
    "text": "this message event that's outputed by",
    "start": "114280",
    "end": "116159"
  },
  {
    "text": "the child component then run the receive",
    "start": "116159",
    "end": "118840"
  },
  {
    "text": "message function whenever that event",
    "start": "118840",
    "end": "122479"
  },
  {
    "text": "[Music]",
    "start": "125740",
    "end": "128899"
  },
  {
    "text": "occurs child to parent via view",
    "start": "131760",
    "end": "136080"
  },
  {
    "text": "child view child allows one component to",
    "start": "136080",
    "end": "139080"
  },
  {
    "text": "be injected into another giving the",
    "start": "139080",
    "end": "141120"
  },
  {
    "text": "parent access to all of its attributes",
    "start": "141120",
    "end": "143319"
  },
  {
    "text": "and",
    "start": "143319",
    "end": "144080"
  },
  {
    "text": "functions when caveat however is that",
    "start": "144080",
    "end": "146720"
  },
  {
    "text": "the child won't be available until after",
    "start": "146720",
    "end": "148800"
  },
  {
    "text": "the view is fully initi ized this means",
    "start": "148800",
    "end": "151319"
  },
  {
    "text": "we need to implement the after viw and",
    "start": "151319",
    "end": "153959"
  },
  {
    "text": "knit life cycle hook to receive the data",
    "start": "153959",
    "end": "156840"
  },
  {
    "text": "from the",
    "start": "156840",
    "end": "158160"
  },
  {
    "text": "[Music]",
    "start": "158160",
    "end": "162319"
  },
  {
    "text": "child inside the after viiew init",
    "start": "167560",
    "end": "169800"
  },
  {
    "text": "function we can then access the message",
    "start": "169800",
    "end": "171760"
  },
  {
    "text": "variable that was defined inside the",
    "start": "171760",
    "end": "173599"
  },
  {
    "text": "child component",
    "start": "173599",
    "end": "175090"
  },
  {
    "text": "[Music]",
    "start": "175090",
    "end": "181319"
  },
  {
    "text": "share data between any unrelated",
    "start": "181319",
    "end": "184000"
  },
  {
    "text": "components when passing data between",
    "start": "184000",
    "end": "186120"
  },
  {
    "text": "components that lack a direct connection",
    "start": "186120",
    "end": "188200"
  },
  {
    "text": "such as siblings grandchildren Etc you",
    "start": "188200",
    "end": "191640"
  },
  {
    "text": "should use a shared service when you",
    "start": "191640",
    "end": "194000"
  },
  {
    "text": "have data that always needs to be in",
    "start": "194000",
    "end": "195640"
  },
  {
    "text": "sync I find that the rxjs behavior",
    "start": "195640",
    "end": "198840"
  },
  {
    "text": "subject is very useful in this",
    "start": "198840",
    "end": "201280"
  },
  {
    "text": "situation the main benefit of a behavior",
    "start": "201280",
    "end": "203599"
  },
  {
    "text": "subject is that it ensures every",
    "start": "203599",
    "end": "205720"
  },
  {
    "text": "component consuming the service receives",
    "start": "205720",
    "end": "208159"
  },
  {
    "text": "the most recent up-to-date",
    "start": "208159",
    "end": "211720"
  },
  {
    "text": "data in the service we create a private",
    "start": "211720",
    "end": "214680"
  },
  {
    "text": "Behavior subject that will hold the",
    "start": "214680",
    "end": "216400"
  },
  {
    "text": "current value of the message then we",
    "start": "216400",
    "end": "219080"
  },
  {
    "text": "Define a current message variable set to",
    "start": "219080",
    "end": "222319"
  },
  {
    "text": "an observable that will be used by the",
    "start": "222319",
    "end": "225360"
  },
  {
    "text": "components lastly we create a function",
    "start": "225360",
    "end": "227799"
  },
  {
    "text": "that calls next on the behavior subject",
    "start": "227799",
    "end": "230400"
  },
  {
    "text": "to change its current value",
    "start": "230400",
    "end": "232440"
  },
  {
    "text": "[Music]",
    "start": "232440",
    "end": "239860"
  },
  {
    "text": "the parent child and sibling components",
    "start": "243079",
    "end": "245120"
  },
  {
    "text": "all receive the same treatment we inject",
    "start": "245120",
    "end": "247439"
  },
  {
    "text": "the service in the",
    "start": "247439",
    "end": "249280"
  },
  {
    "text": "Constructor then subscribe to the",
    "start": "249280",
    "end": "251400"
  },
  {
    "text": "current message observable and set its",
    "start": "251400",
    "end": "254200"
  },
  {
    "text": "value equal to the message variable",
    "start": "254200",
    "end": "257690"
  },
  {
    "text": "[Music]",
    "start": "257690",
    "end": "264470"
  },
  {
    "text": "[Music]",
    "start": "268770",
    "end": "272819"
  },
  {
    "text": "now we can create a function in any one",
    "start": "273320",
    "end": "275520"
  },
  {
    "text": "of these components that changes the",
    "start": "275520",
    "end": "277479"
  },
  {
    "text": "value of the message when this function",
    "start": "277479",
    "end": "279600"
  },
  {
    "text": "is executed the new data will",
    "start": "279600",
    "end": "281360"
  },
  {
    "text": "automatically be broadcast to all other",
    "start": "281360",
    "end": "283320"
  },
  {
    "text": "components",
    "start": "283320",
    "end": "286320"
  },
  {
    "text": "[Music]",
    "start": "288160",
    "end": "298100"
  },
  {
    "text": "that's it for data sharing see you next",
    "start": "305880",
    "end": "307920"
  },
  {
    "text": "[Music]",
    "start": "307920",
    "end": "310440"
  },
  {
    "text": "time audio jum",
    "start": "310440",
    "end": "314880"
  }
]