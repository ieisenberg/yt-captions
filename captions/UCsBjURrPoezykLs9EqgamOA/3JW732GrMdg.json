[
  {
    "text": "modern web development sucks we have",
    "start": "40",
    "end": "1959"
  },
  {
    "text": "amazing tools that solve every problem",
    "start": "1959",
    "end": "3800"
  },
  {
    "text": "and technically it's never been easier",
    "start": "3800",
    "end": "5440"
  },
  {
    "text": "to build a billion dooll failed app idea",
    "start": "5440",
    "end": "7680"
  },
  {
    "text": "the problem is that by the time you",
    "start": "7680",
    "end": "9080"
  },
  {
    "text": "deploy it you end up paying 20 different",
    "start": "9080",
    "end": "11080"
  },
  {
    "text": "ycb startups to use their fancy shovels",
    "start": "11080",
    "end": "13639"
  },
  {
    "text": "you think you need an in-memory cache",
    "start": "13639",
    "end": "15040"
  },
  {
    "text": "database to handle your low to five",
    "start": "15040",
    "end": "16560"
  },
  {
    "text": "users you need a cron service you need",
    "start": "16560",
    "end": "18480"
  },
  {
    "text": "authentication performance monitoring",
    "start": "18480",
    "end": "20480"
  },
  {
    "text": "analytics serverless functions and the",
    "start": "20480",
    "end": "22359"
  },
  {
    "text": "list goes on it's no coincidence that",
    "start": "22359",
    "end": "24160"
  },
  {
    "text": "America's homeless population started to",
    "start": "24160",
    "end": "25960"
  },
  {
    "text": "rise immediately after the release of",
    "start": "25960",
    "end": "27599"
  },
  {
    "text": "nextjs in 2016 but what if I told you",
    "start": "27599",
    "end": "30320"
  },
  {
    "text": "you could throw all of these shovels in",
    "start": "30320",
    "end": "31679"
  },
  {
    "text": "the incinerator and use nothing but",
    "start": "31679",
    "end": "33640"
  },
  {
    "text": "postgressql yes the relational database",
    "start": "33640",
    "end": "36200"
  },
  {
    "text": "to achieve 90% of your web development",
    "start": "36200",
    "end": "38320"
  },
  {
    "text": "needs in today's video we'll look at 11",
    "start": "38320",
    "end": "40600"
  },
  {
    "text": "useful unorthodox and just plain weird",
    "start": "40600",
    "end": "43000"
  },
  {
    "text": "ways to use postgress by the end of it",
    "start": "43000",
    "end": "45079"
  },
  {
    "text": "we will have built a full stack",
    "start": "45079",
    "end": "46520"
  },
  {
    "text": "application using nothing but an open",
    "start": "46520",
    "end": "48360"
  },
  {
    "text": "source database but first of all what",
    "start": "48360",
    "end": "50280"
  },
  {
    "text": "makes postgress special and why not use",
    "start": "50280",
    "end": "52079"
  },
  {
    "text": "something like MySQL or SQL light well",
    "start": "52079",
    "end": "54239"
  },
  {
    "text": "out of the box postgress provides",
    "start": "54239",
    "end": "55800"
  },
  {
    "text": "Advanced Data types like binary Json",
    "start": "55800",
    "end": "58199"
  },
  {
    "text": "arrays key value stores and even",
    "start": "58199",
    "end": "60280"
  },
  {
    "text": "geometric types to Define shapes but",
    "start": "60280",
    "end": "62320"
  },
  {
    "text": "more importantly it's extensible and you",
    "start": "62320",
    "end": "64198"
  },
  {
    "text": "can even create your own custom data",
    "start": "64199",
    "end": "65840"
  },
  {
    "text": "types over the years this has led to a",
    "start": "65840",
    "end": "67680"
  },
  {
    "text": "massive ecosystem of extensions where",
    "start": "67680",
    "end": "69720"
  },
  {
    "text": "developers have given it all kinds of",
    "start": "69720",
    "end": "71240"
  },
  {
    "text": "crazy new features it's just like",
    "start": "71240",
    "end": "72759"
  },
  {
    "text": "modding a game where you take something",
    "start": "72759",
    "end": "74320"
  },
  {
    "text": "that sucks like Civilization 7 and",
    "start": "74320",
    "end": "76240"
  },
  {
    "text": "install a bunch of mods to make it",
    "start": "76240",
    "end": "77520"
  },
  {
    "text": "playable now before we get into the",
    "start": "77520",
    "end": "78920"
  },
  {
    "text": "first example I first want to warn you",
    "start": "78920",
    "end": "80840"
  },
  {
    "text": "that just because you can do something",
    "start": "80840",
    "end": "82119"
  },
  {
    "text": "in postgress doesn't mean you should",
    "start": "82119",
    "end": "83799"
  },
  {
    "text": "before you go and cancel all your shovel",
    "start": "83799",
    "end": "85320"
  },
  {
    "text": "subscriptions don't forget to think",
    "start": "85320",
    "end": "86799"
  },
  {
    "text": "critically and make sure you use the",
    "start": "86799",
    "end": "88280"
  },
  {
    "text": "right tool for the job one of the great",
    "start": "88280",
    "end": "89640"
  },
  {
    "text": "debates among web developers is SQL",
    "start": "89640",
    "end": "91799"
  },
  {
    "text": "versus nosql and one of the key selling",
    "start": "91799",
    "end": "93799"
  },
  {
    "text": "points for no SQL is that you can work",
    "start": "93799",
    "end": "95759"
  },
  {
    "text": "with unstructured data like objects with",
    "start": "95759",
    "end": "97880"
  },
  {
    "text": "Dynamic data that might be different for",
    "start": "97880",
    "end": "99560"
  },
  {
    "text": "each record you can't do that in SQL",
    "start": "99560",
    "end": "101320"
  },
  {
    "text": "because every table has a fixed schema",
    "start": "101320",
    "end": "103240"
  },
  {
    "text": "well actually that's not true because",
    "start": "103240",
    "end": "105040"
  },
  {
    "text": "postgress supports binary Json in this",
    "start": "105040",
    "end": "107240"
  },
  {
    "text": "query you'll notice how we create a",
    "start": "107240",
    "end": "108560"
  },
  {
    "text": "table with a Json B type and then insert",
    "start": "108560",
    "end": "110680"
  },
  {
    "text": "some values into it as raw Json strings",
    "start": "110680",
    "end": "113159"
  },
  {
    "text": "so pretty cool and believe it or not we",
    "start": "113159",
    "end": "115079"
  },
  {
    "text": "can actually query this data now we can",
    "start": "115079",
    "end": "116960"
  },
  {
    "text": "use a select statement followed by a",
    "start": "116960",
    "end": "118560"
  },
  {
    "text": "wear clause and then this syntax to",
    "start": "118560",
    "end": "120880"
  },
  {
    "text": "filter and access Fields inside this",
    "start": "120880",
    "end": "122759"
  },
  {
    "text": "unstructured data that feature is built",
    "start": "122759",
    "end": "124520"
  },
  {
    "text": "right into postgress but now we're going",
    "start": "124520",
    "end": "126280"
  },
  {
    "text": "to implement some really crazy stuff",
    "start": "126280",
    "end": "127880"
  },
  {
    "text": "thanks to extensions first though you",
    "start": "127880",
    "end": "129599"
  },
  {
    "text": "might be wondering where do I get a",
    "start": "129599",
    "end": "131080"
  },
  {
    "text": "postgress database it's free and open",
    "start": "131080",
    "end": "133080"
  },
  {
    "text": "source to host locally but an even",
    "start": "133080",
    "end": "135000"
  },
  {
    "text": "easier option is neon the sponsor of",
    "start": "135000",
    "end": "137360"
  },
  {
    "text": "today's video they may not condone all",
    "start": "137360",
    "end": "139040"
  },
  {
    "text": "the crazy stuff I'm showing you in this",
    "start": "139040",
    "end": "140440"
  },
  {
    "text": "video but they provide postgress on a",
    "start": "140440",
    "end": "142280"
  },
  {
    "text": "serverless platform that makes it really",
    "start": "142280",
    "end": "144040"
  },
  {
    "text": "easy to Kickstart and scale your",
    "start": "144040",
    "end": "145680"
  },
  {
    "text": "projects not only do they have an",
    "start": "145680",
    "end": "147000"
  },
  {
    "text": "awesome free tier but there's also",
    "start": "147000",
    "end": "148640"
  },
  {
    "text": "developer friendly guides for all the",
    "start": "148640",
    "end": "150200"
  },
  {
    "text": "biggest Frameworks and OMS developers",
    "start": "150200",
    "end": "152239"
  },
  {
    "text": "already love postgress and neon makes it",
    "start": "152239",
    "end": "154280"
  },
  {
    "text": "even easier to work with by providing",
    "start": "154280",
    "end": "156000"
  },
  {
    "text": "features like branching which allows you",
    "start": "156000",
    "end": "157879"
  },
  {
    "text": "to easily create different data",
    "start": "157879",
    "end": "159239"
  },
  {
    "text": "workflows for development testing and",
    "start": "159239",
    "end": "161239"
  },
  {
    "text": "production and will automatically scale",
    "start": "161239",
    "end": "163040"
  },
  {
    "text": "up with zero effort as your app grows",
    "start": "163040",
    "end": "165040"
  },
  {
    "text": "give neon a try for free right now using",
    "start": "165040",
    "end": "166879"
  },
  {
    "text": "the link below to create a postgress",
    "start": "166879",
    "end": "168560"
  },
  {
    "text": "database then take your connection",
    "start": "168560",
    "end": "169959"
  },
  {
    "text": "details to a VSS code extension like SQL",
    "start": "169959",
    "end": "172080"
  },
  {
    "text": "tools and connect to it locally and now",
    "start": "172080",
    "end": "174040"
  },
  {
    "text": "we're ready to do some really crazy",
    "start": "174040",
    "end": "175360"
  },
  {
    "text": "stuff with extensions developers only",
    "start": "175360",
    "end": "177319"
  },
  {
    "text": "want one thing and it's disgusting a",
    "start": "177319",
    "end": "179519"
  },
  {
    "text": "Chron job which is code that runs on a",
    "start": "179519",
    "end": "181440"
  },
  {
    "text": "schedule now normally you would have to",
    "start": "181440",
    "end": "183000"
  },
  {
    "text": "edit the cron tab file on Linux to",
    "start": "183000",
    "end": "184720"
  },
  {
    "text": "achieve this or pay a sass to do it for",
    "start": "184720",
    "end": "186519"
  },
  {
    "text": "you but postgress will actually give you",
    "start": "186519",
    "end": "188159"
  },
  {
    "text": "a Cron job for free if we install the PG",
    "start": "188159",
    "end": "190159"
  },
  {
    "text": "cron extension we can then write a SQL",
    "start": "190159",
    "end": "192280"
  },
  {
    "text": "statement that runs a KRON schedule give",
    "start": "192280",
    "end": "194239"
  },
  {
    "text": "it a name Define the schedule and then",
    "start": "194239",
    "end": "196040"
  },
  {
    "text": "it will run the SQL statement on that",
    "start": "196040",
    "end": "197799"
  },
  {
    "text": "schedule like you might want to delete",
    "start": "197799",
    "end": "199360"
  },
  {
    "text": "or aggregate a bunch of data on a daily",
    "start": "199360",
    "end": "201200"
  },
  {
    "text": "basis that's cool but another thing you",
    "start": "201200",
    "end": "203080"
  },
  {
    "text": "think you might need but probably don't",
    "start": "203080",
    "end": "204760"
  },
  {
    "text": "is an in-memory cache database like",
    "start": "204760",
    "end": "206760"
  },
  {
    "text": "reddis or mcash well in postgress you",
    "start": "206760",
    "end": "208920"
  },
  {
    "text": "can create your own po man's redus by",
    "start": "208920",
    "end": "210760"
  },
  {
    "text": "using an unlog table as a cache this",
    "start": "210760",
    "end": "212920"
  },
  {
    "text": "prevents right ahead logging where",
    "start": "212920",
    "end": "214400"
  },
  {
    "text": "changes to the database are written to a",
    "start": "214400",
    "end": "216239"
  },
  {
    "text": "log file before being applied to data",
    "start": "216239",
    "end": "218040"
  },
  {
    "text": "files and that provides the D for",
    "start": "218040",
    "end": "219799"
  },
  {
    "text": "durability in asset and that means if",
    "start": "219799",
    "end": "221560"
  },
  {
    "text": "your server crashes unexpectedly",
    "start": "221560",
    "end": "223159"
  },
  {
    "text": "committed transactions will not be lost",
    "start": "223159",
    "end": "225239"
  },
  {
    "text": "however you don't really need that for a",
    "start": "225239",
    "end": "226640"
  },
  {
    "text": "cache and disabling it provides better",
    "start": "226640",
    "end": "228400"
  },
  {
    "text": "performance then you can update the",
    "start": "228400",
    "end": "229959"
  },
  {
    "text": "postgress config to store it in a shared",
    "start": "229959",
    "end": "231920"
  },
  {
    "text": "buffer which will keep the data highly",
    "start": "231920",
    "end": "233640"
  },
  {
    "text": "available in Ram and then summon the",
    "start": "233640",
    "end": "235239"
  },
  {
    "text": "autov vacu demon to avoid bloat and",
    "start": "235239",
    "end": "237280"
  },
  {
    "text": "maybe throw in PG KRON to automatically",
    "start": "237280",
    "end": "239200"
  },
  {
    "text": "delete any entries with an expired time",
    "start": "239200",
    "end": "241120"
  },
  {
    "text": "to live but this wouldn't be a proper",
    "start": "241120",
    "end": "242680"
  },
  {
    "text": "fireship video if I didn't mention Ai",
    "start": "242680",
    "end": "245040"
  },
  {
    "text": "and if you're building an AI app that",
    "start": "245040",
    "end": "246439"
  },
  {
    "text": "uses rag stack you might consider paying",
    "start": "246439",
    "end": "248439"
  },
  {
    "text": "for a vector database but what you could",
    "start": "248439",
    "end": "250200"
  },
  {
    "text": "do instead is just install the PG Vector",
    "start": "250200",
    "end": "252439"
  },
  {
    "text": "extension it provides a vector data type",
    "start": "252439",
    "end": "254480"
  },
  {
    "text": "that allows you to store",
    "start": "254480",
    "end": "255400"
  },
  {
    "text": "multi-dimensional data then you can do",
    "start": "255400",
    "end": "257280"
  },
  {
    "text": "things like make a query for nearest",
    "start": "257280",
    "end": "259040"
  },
  {
    "text": "neighbors based on L2 distance and you",
    "start": "259040",
    "end": "261239"
  },
  {
    "text": "can even take things a step further with",
    "start": "261239",
    "end": "262840"
  },
  {
    "text": "the pgai extension not only does it",
    "start": "262840",
    "end": "264880"
  },
  {
    "text": "handle Vector embeddings but it allows",
    "start": "264880",
    "end": "266759"
  },
  {
    "text": "you to load your own data set and",
    "start": "266759",
    "end": "268479"
  },
  {
    "text": "vectorize it all entirely in SQL code",
    "start": "268479",
    "end": "270759"
  },
  {
    "text": "but speaking of vectors A more",
    "start": "270759",
    "end": "272199"
  },
  {
    "text": "traditional feature you might need is a",
    "start": "272199",
    "end": "273800"
  },
  {
    "text": "full Tech search engine where users type",
    "start": "273800",
    "end": "275680"
  },
  {
    "text": "into a search box and get results even",
    "start": "275680",
    "end": "277400"
  },
  {
    "text": "if they have typos the postgress",
    "start": "277400",
    "end": "279160"
  },
  {
    "text": "actually has built-in support for this",
    "start": "279160",
    "end": "280800"
  },
  {
    "text": "with the TS Vector type it'll take a",
    "start": "280800",
    "end": "282680"
  },
  {
    "text": "string like this and break it up into a",
    "start": "282680",
    "end": "284440"
  },
  {
    "text": "bunch of smaller parts then we can",
    "start": "284440",
    "end": "285840"
  },
  {
    "text": "create a generalized inverted index for",
    "start": "285840",
    "end": "287680"
  },
  {
    "text": "better performance which gives us the",
    "start": "287680",
    "end": "289199"
  },
  {
    "text": "ability to then Rank and query the most",
    "start": "289199",
    "end": "291000"
  },
  {
    "text": "likely results from the data using",
    "start": "291000",
    "end": "292759"
  },
  {
    "text": "double app which is the tech search",
    "start": "292759",
    "end": "294560"
  },
  {
    "text": "operator and now you don't have to pay",
    "start": "294560",
    "end": "296120"
  },
  {
    "text": "for expensive tools like algolia or",
    "start": "296120",
    "end": "298080"
  },
  {
    "text": "elastic search if you're sick of writing",
    "start": "298080",
    "end": "299720"
  },
  {
    "text": "SQL code though one thing you might do",
    "start": "299720",
    "end": "301360"
  },
  {
    "text": "instead is use graphql the magic PG",
    "start": "301360",
    "end": "303800"
  },
  {
    "text": "graphql extension can transform your",
    "start": "303800",
    "end": "305919"
  },
  {
    "text": "database into a graphql API and that",
    "start": "305919",
    "end": "308320"
  },
  {
    "text": "makes it incredibly easy for any",
    "start": "308320",
    "end": "309919"
  },
  {
    "text": "programming language to understand in",
    "start": "309919",
    "end": "311680"
  },
  {
    "text": "query your database just add the",
    "start": "311680",
    "end": "313400"
  },
  {
    "text": "extension and then start writing graphql",
    "start": "313400",
    "end": "315360"
  },
  {
    "text": "resolvers directly in your SQL code and",
    "start": "315360",
    "end": "317520"
  },
  {
    "text": "best of all no additional servers",
    "start": "317520",
    "end": "319120"
  },
  {
    "text": "libraries or paid SAS middlemen are",
    "start": "319120",
    "end": "321039"
  },
  {
    "text": "required but what if you're building a",
    "start": "321039",
    "end": "322400"
  },
  {
    "text": "real-time application using tools like",
    "start": "322400",
    "end": "324400"
  },
  {
    "text": "Firebase or superbase that's a difficult",
    "start": "324400",
    "end": "326479"
  },
  {
    "text": "feature to roll out on your own but a",
    "start": "326479",
    "end": "328080"
  },
  {
    "text": "library called electric SQL fixes this",
    "start": "328080",
    "end": "330520"
  },
  {
    "text": "it's not a PG extension but rather a",
    "start": "330520",
    "end": "332400"
  },
  {
    "text": "sync layer which would sit in between",
    "start": "332400",
    "end": "334080"
  },
  {
    "text": "your database and your front end code to",
    "start": "334080",
    "end": "336000"
  },
  {
    "text": "ensure that the end user always has",
    "start": "336000",
    "end": "337520"
  },
  {
    "text": "fresh data and that means you don't have",
    "start": "337520",
    "end": "339120"
  },
  {
    "text": "to mess around with websockets or write",
    "start": "339120",
    "end": "340800"
  },
  {
    "text": "a bunch of broken code to automatically",
    "start": "340800",
    "end": "342520"
  },
  {
    "text": "fetch data when it changes and as an",
    "start": "342520",
    "end": "344360"
  },
  {
    "text": "added bonus it works great with neon but",
    "start": "344360",
    "end": "346440"
  },
  {
    "text": "another thing developers like to brag",
    "start": "346440",
    "end": "347840"
  },
  {
    "text": "about is rolling their own off usually",
    "start": "347840",
    "end": "349919"
  },
  {
    "text": "by writing some crappy JavaScript",
    "start": "349919",
    "end": "351479"
  },
  {
    "text": "instead of paying a SAS to do that for",
    "start": "351479",
    "end": "353120"
  },
  {
    "text": "them but real men roll their own off",
    "start": "353120",
    "end": "355039"
  },
  {
    "text": "entirely in postgress and that's",
    "start": "355039",
    "end": "356759"
  },
  {
    "text": "possible when you combine a couple of",
    "start": "356759",
    "end": "358240"
  },
  {
    "text": "extensions like PG crypto crypto and PG",
    "start": "358240",
    "end": "360680"
  },
  {
    "text": "Json web token like if we have a table",
    "start": "360680",
    "end": "362919"
  },
  {
    "text": "with a username and password we can use",
    "start": "362919",
    "end": "364840"
  },
  {
    "text": "crypto to Hash the password and also",
    "start": "364840",
    "end": "366960"
  },
  {
    "text": "generate Assa that ensures that when our",
    "start": "366960",
    "end": "368800"
  },
  {
    "text": "database gets hacked the attacker won't",
    "start": "368800",
    "end": "370639"
  },
  {
    "text": "have access to the plain text password",
    "start": "370639",
    "end": "372599"
  },
  {
    "text": "and now to verify a user's login",
    "start": "372599",
    "end": "374160"
  },
  {
    "text": "credentials we can write a simple query",
    "start": "374160",
    "end": "376240"
  },
  {
    "text": "that matches the username to the hashed",
    "start": "376240",
    "end": "378319"
  },
  {
    "text": "password with the Crypt function but the",
    "start": "378319",
    "end": "380039"
  },
  {
    "text": "other thing we'll need is a way to",
    "start": "380039",
    "end": "381560"
  },
  {
    "text": "validate user sessions on the server and",
    "start": "381560",
    "end": "383680"
  },
  {
    "text": "one way to do that is with Json web",
    "start": "383680",
    "end": "385520"
  },
  {
    "text": "tokens and PG JWT makes it really easy",
    "start": "385520",
    "end": "388479"
  },
  {
    "text": "to cryptographically sign a token on the",
    "start": "388479",
    "end": "390440"
  },
  {
    "text": "server and now that we have that we can",
    "start": "390440",
    "end": "392120"
  },
  {
    "text": "Implement roow level security where the",
    "start": "392120",
    "end": "393880"
  },
  {
    "text": "end user can only read and write data",
    "start": "393880",
    "end": "395720"
  },
  {
    "text": "that's actually owned by their username",
    "start": "395720",
    "end": "397599"
  },
  {
    "text": "this is a built-in feature in postgress",
    "start": "397599",
    "end": "399360"
  },
  {
    "text": "where we create policies that Define",
    "start": "399360",
    "end": "401080"
  },
  {
    "text": "rules about how our data can be accessed",
    "start": "401080",
    "end": "403160"
  },
  {
    "text": "and in this case we'll verify the",
    "start": "403160",
    "end": "404440"
  },
  {
    "text": "current user's token before executing",
    "start": "404440",
    "end": "406400"
  },
  {
    "text": "any queries and that means selecting",
    "start": "406400",
    "end": "408199"
  },
  {
    "text": "everything from the horse's table will",
    "start": "408199",
    "end": "409800"
  },
  {
    "text": "only give us the hes owned by that user",
    "start": "409800",
    "end": "412039"
  },
  {
    "text": "at this point we have a pretty complex",
    "start": "412039",
    "end": "413520"
  },
  {
    "text": "application and we should start",
    "start": "413520",
    "end": "414880"
  },
  {
    "text": "collecting some analytics data instead",
    "start": "414880",
    "end": "416599"
  },
  {
    "text": "of Google analytics or another paid SAS",
    "start": "416599",
    "end": "418680"
  },
  {
    "text": "an option you'll want to check out is PG",
    "start": "418680",
    "end": "420520"
  },
  {
    "text": "moon cake basically it turns postgress",
    "start": "420520",
    "end": "422919"
  },
  {
    "text": "into a Time series database and it's",
    "start": "422919",
    "end": "424800"
  },
  {
    "text": "extremely fast and efficient because it",
    "start": "424800",
    "end": "426440"
  },
  {
    "text": "adds support for column store tables",
    "start": "426440",
    "end": "428360"
  },
  {
    "text": "with duck DB execution and all this data",
    "start": "428360",
    "end": "430759"
  },
  {
    "text": "can be dropped into a cloud storage",
    "start": "430759",
    "end": "432199"
  },
  {
    "text": "bucket and or visualized with other open",
    "start": "432199",
    "end": "434080"
  },
  {
    "text": "source tools like grafana that's cool",
    "start": "434080",
    "end": "435960"
  },
  {
    "text": "and all but we'll never actually get any",
    "start": "435960",
    "end": "437680"
  },
  {
    "text": "analytics data if we don't make our data",
    "start": "437680",
    "end": "439599"
  },
  {
    "text": "available on the internet to achieve",
    "start": "439599",
    "end": "441199"
  },
  {
    "text": "that you might think you need to build a",
    "start": "441199",
    "end": "442400"
  },
  {
    "text": "restful API with some programming",
    "start": "442400",
    "end": "444039"
  },
  {
    "text": "language from scratch but another option",
    "start": "444039",
    "end": "446160"
  },
  {
    "text": "is post rest which automatically turns",
    "start": "446160",
    "end": "448280"
  },
  {
    "text": "your database into a uccessful API after",
    "start": "448280",
    "end": "450599"
  },
  {
    "text": "you get it set up you'll be able to go",
    "start": "450599",
    "end": "452080"
  },
  {
    "text": "into the browser then navigate to Local",
    "start": "452080",
    "end": "453879"
  },
  {
    "text": "Host followed by a table name and it",
    "start": "453879",
    "end": "455400"
  },
  {
    "text": "will automatically query your postgress",
    "start": "455400",
    "end": "457039"
  },
  {
    "text": "data and return it in Json format on top",
    "start": "457039",
    "end": "459319"
  },
  {
    "text": "of that you can do all kinds of other",
    "start": "459319",
    "end": "460599"
  },
  {
    "text": "stuff like filtering pagination",
    "start": "460599",
    "end": "462520"
  },
  {
    "text": "authentication and so on and now the",
    "start": "462520",
    "end": "464400"
  },
  {
    "text": "final step to build a true full stack",
    "start": "464400",
    "end": "466199"
  },
  {
    "text": "application is to store some HTML CSS",
    "start": "466199",
    "end": "468840"
  },
  {
    "text": "and JavaScript in the database in fact",
    "start": "468840",
    "end": "470919"
  },
  {
    "text": "there are even some crazies out there",
    "start": "470919",
    "end": "472319"
  },
  {
    "text": "getting react server components to wrun",
    "start": "472319",
    "end": "473960"
  },
  {
    "text": "in post grass and you really can't get",
    "start": "473960",
    "end": "475639"
  },
  {
    "text": "your data any closer to the UI than that",
    "start": "475639",
    "end": "477759"
  },
  {
    "text": "congratulations you're now officially a",
    "start": "477759",
    "end": "479759"
  },
  {
    "text": "certified postgress Rison big shout out",
    "start": "479759",
    "end": "481879"
  },
  {
    "text": "to Neon for reviewing and sponsoring",
    "start": "481879",
    "end": "483840"
  },
  {
    "text": "this video and although they told me",
    "start": "483840",
    "end": "485319"
  },
  {
    "text": "they don't approve of all the crazy",
    "start": "485319",
    "end": "486479"
  },
  {
    "text": "stuff I showed you in this video I'm",
    "start": "486479",
    "end": "488080"
  },
  {
    "text": "just going to go ahead and upload it",
    "start": "488080",
    "end": "489319"
  },
  {
    "text": "anyway thanks for watching and I will",
    "start": "489319",
    "end": "491039"
  },
  {
    "text": "see you in the next one",
    "start": "491039",
    "end": "494080"
  }
]