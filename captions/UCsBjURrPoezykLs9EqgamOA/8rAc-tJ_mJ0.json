[
  {
    "text": "database profiling is critical for",
    "start": "0",
    "end": "2370"
  },
  {
    "text": "finding bottlenecks or other issues that",
    "start": "2370",
    "end": "4589"
  },
  {
    "text": "might be degrading the user experience",
    "start": "4589",
    "end": "6480"
  },
  {
    "text": "in this episode we're going to look at",
    "start": "6480",
    "end": "8519"
  },
  {
    "text": "the built in firebase profiler tool",
    "start": "8519",
    "end": "10380"
  },
  {
    "text": "which will give us a breakdown of the",
    "start": "10380",
    "end": "12389"
  },
  {
    "text": "memory and speed performance of our",
    "start": "12389",
    "end": "14130"
  },
  {
    "text": "database this tutorial is done in the",
    "start": "14130",
    "end": "16379"
  },
  {
    "text": "context of an angular application but in",
    "start": "16379",
    "end": "18630"
  },
  {
    "text": "just as easily be applied to the",
    "start": "18630",
    "end": "20189"
  },
  {
    "text": "firebase JavaScript SDK if you're just",
    "start": "20189",
    "end": "23400"
  },
  {
    "text": "getting started with firebase you'll",
    "start": "23400",
    "end": "24660"
  },
  {
    "text": "need to install the firebase tools",
    "start": "24660",
    "end": "26760"
  },
  {
    "text": "command-line interface and then",
    "start": "26760",
    "end": "28830"
  },
  {
    "text": "initialize your project by running in",
    "start": "28830",
    "end": "30900"
  },
  {
    "text": "firebase and knit to demonstrate this",
    "start": "30900",
    "end": "34020"
  },
  {
    "text": "feature we're going to read and write a",
    "start": "34020",
    "end": "35460"
  },
  {
    "text": "bunch of weather data in the firebase",
    "start": "35460",
    "end": "37050"
  },
  {
    "text": "database which I've acquired here from",
    "start": "37050",
    "end": "39210"
  },
  {
    "text": "the dark sky API so I went ahead and",
    "start": "39210",
    "end": "41790"
  },
  {
    "text": "parsed this JSON into JavaScript and",
    "start": "41790",
    "end": "43829"
  },
  {
    "text": "then I'm importing it in an angular",
    "start": "43829",
    "end": "45840"
  },
  {
    "text": "component here when we save the data to",
    "start": "45840",
    "end": "48300"
  },
  {
    "text": "firebase it's going to look like this a",
    "start": "48300",
    "end": "49829"
  },
  {
    "text": "big object with its own nested objects",
    "start": "49829",
    "end": "52260"
  },
  {
    "text": "and arrays not something you would",
    "start": "52260",
    "end": "53850"
  },
  {
    "text": "consider optimize for efficiency in a no",
    "start": "53850",
    "end": "56129"
  },
  {
    "text": "sequel database then back in the angular",
    "start": "56129",
    "end": "59010"
  },
  {
    "text": "component I'm going to create an",
    "start": "59010",
    "end": "60750"
  },
  {
    "text": "observable stopwatch which will help us",
    "start": "60750",
    "end": "63359"
  },
  {
    "text": "determine the actual latency the user",
    "start": "63359",
    "end": "65220"
  },
  {
    "text": "sees on the front-end so we can start",
    "start": "65220",
    "end": "67650"
  },
  {
    "text": "the stopwatch as soon as we make a",
    "start": "67650",
    "end": "68850"
  },
  {
    "text": "request and then as soon as firebase",
    "start": "68850",
    "end": "70590"
  },
  {
    "text": "returns us an actual object we'll stop",
    "start": "70590",
    "end": "72750"
  },
  {
    "text": "the stopwatch and then all display that",
    "start": "72750",
    "end": "74640"
  },
  {
    "text": "number in milliseconds on the front end",
    "start": "74640",
    "end": "76320"
  },
  {
    "text": "we can do this in rxjs by creating an",
    "start": "76320",
    "end": "78570"
  },
  {
    "text": "observable interval that ticks every one",
    "start": "78570",
    "end": "80610"
  },
  {
    "text": "millisecond and to finish the stopwatch",
    "start": "80610",
    "end": "82799"
  },
  {
    "text": "we just call unsubscribe on it then",
    "start": "82799",
    "end": "85770"
  },
  {
    "text": "going down into the angular component we",
    "start": "85770",
    "end": "88020"
  },
  {
    "text": "can just create a new instance of the",
    "start": "88020",
    "end": "89729"
  },
  {
    "text": "stopwatch and then inject the angular",
    "start": "89729",
    "end": "92369"
  },
  {
    "text": "fired database and the constructor then",
    "start": "92369",
    "end": "94680"
  },
  {
    "text": "the first thing we'll profile is the",
    "start": "94680",
    "end": "96299"
  },
  {
    "text": "write speed to the real-time database",
    "start": "96299",
    "end": "98100"
  },
  {
    "text": "first I'll quickly show you the plain",
    "start": "98100",
    "end": "99840"
  },
  {
    "text": "firebase SDK code basically we just make",
    "start": "99840",
    "end": "102450"
  },
  {
    "text": "a reference to the database and then",
    "start": "102450",
    "end": "104250"
  },
  {
    "text": "push new objects to it then back in",
    "start": "104250",
    "end": "107130"
  },
  {
    "text": "angular we'll do the same thing but",
    "start": "107130",
    "end": "108420"
  },
  {
    "text": "using that angular fire to wrapper and I",
    "start": "108420",
    "end": "111119"
  },
  {
    "text": "want to push 20 objects to the database",
    "start": "111119",
    "end": "113159"
  },
  {
    "text": "so I use a for loop here and then for",
    "start": "113159",
    "end": "115710"
  },
  {
    "text": "each iteration du DB push that's going",
    "start": "115710",
    "end": "118920"
  },
  {
    "text": "to return a promise so once we get to",
    "start": "118920",
    "end": "120719"
  },
  {
    "text": "the very last iteration we will wait for",
    "start": "120719",
    "end": "122969"
  },
  {
    "text": "the promise to resolve and at that point",
    "start": "122969",
    "end": "124649"
  },
  {
    "text": "we'll stop the stopwatch now to run the",
    "start": "124649",
    "end": "127860"
  },
  {
    "text": "firebase profiler tool all we have to do",
    "start": "127860",
    "end": "129660"
  },
  {
    "text": "is bring up the command line and then",
    "start": "129660",
    "end": "131220"
  },
  {
    "text": "run firebase database colon",
    "start": "131220",
    "end": "133720"
  },
  {
    "text": "profile this command will record",
    "start": "133720",
    "end": "135910"
  },
  {
    "text": "everything that's happening in the",
    "start": "135910",
    "end": "137080"
  },
  {
    "text": "database until we actually tell it to",
    "start": "137080",
    "end": "138730"
  },
  {
    "text": "stop now we can go into our angular app",
    "start": "138730",
    "end": "141160"
  },
  {
    "text": "and then run the write method and that's",
    "start": "141160",
    "end": "143770"
  },
  {
    "text": "gonna put 20 different items in the",
    "start": "143770",
    "end": "145300"
  },
  {
    "text": "database and we can see we had 119",
    "start": "145300",
    "end": "148090"
  },
  {
    "text": "milliseconds of latency on the front-end",
    "start": "148090",
    "end": "150300"
  },
  {
    "text": "then we can go back to the command line",
    "start": "150300",
    "end": "152680"
  },
  {
    "text": "and click enter and then we get the",
    "start": "152680",
    "end": "154360"
  },
  {
    "text": "report back from firebase there's a",
    "start": "154360",
    "end": "156820"
  },
  {
    "text": "bunch of different stuff to look at here",
    "start": "156820",
    "end": "158110"
  },
  {
    "text": "but for this operation we want to look",
    "start": "158110",
    "end": "159670"
  },
  {
    "text": "at the right speed so that'll give us",
    "start": "159670",
    "end": "161470"
  },
  {
    "text": "the number of operations that occurred",
    "start": "161470",
    "end": "163270"
  },
  {
    "text": "at this node and the average speed and",
    "start": "163270",
    "end": "165490"
  },
  {
    "text": "will tell us whether or not permission",
    "start": "165490",
    "end": "166900"
  },
  {
    "text": "was denied for that operation we can",
    "start": "166900",
    "end": "169570"
  },
  {
    "text": "also get feedback on memory usage and we",
    "start": "169570",
    "end": "172150"
  },
  {
    "text": "can see each operation here require 29.8",
    "start": "172150",
    "end": "175420"
  },
  {
    "text": "7 kilobytes you can see these figures",
    "start": "175420",
    "end": "177730"
  },
  {
    "text": "for both the uploaded and downloaded",
    "start": "177730",
    "end": "179170"
  },
  {
    "text": "memory ok so now that we have some data",
    "start": "179170",
    "end": "181750"
  },
  {
    "text": "in the database we're gonna start",
    "start": "181750",
    "end": "182890"
  },
  {
    "text": "looking at profiles for reading data the",
    "start": "182890",
    "end": "186190"
  },
  {
    "text": "first thing we're gonna do is read data",
    "start": "186190",
    "end": "187810"
  },
  {
    "text": "as a list and just to show you the",
    "start": "187810",
    "end": "189760"
  },
  {
    "text": "regular firebase code here we just have",
    "start": "189760",
    "end": "191770"
  },
  {
    "text": "a reference and then we'll get the",
    "start": "191770",
    "end": "193270"
  },
  {
    "text": "snapshot of that reference then an",
    "start": "193270",
    "end": "195610"
  },
  {
    "text": "angular we start the stopwatch and then",
    "start": "195610",
    "end": "197590"
  },
  {
    "text": "we make a query for a firebase list then",
    "start": "197590",
    "end": "200709"
  },
  {
    "text": "I add some query parameters here to sort",
    "start": "200709",
    "end": "202750"
  },
  {
    "text": "the elements by the child property of",
    "start": "202750",
    "end": "204790"
  },
  {
    "text": "latitude at this point we don't have an",
    "start": "204790",
    "end": "207010"
  },
  {
    "text": "index built for latitudes so this is",
    "start": "207010",
    "end": "208600"
  },
  {
    "text": "going to be a very efficient inefficient",
    "start": "208600",
    "end": "210430"
  },
  {
    "text": "query but in the next step I'll show you",
    "start": "210430",
    "end": "212320"
  },
  {
    "text": "how to set that up and firebase and",
    "start": "212320",
    "end": "214170"
  },
  {
    "text": "lastly we subscribe to the observable",
    "start": "214170",
    "end": "216580"
  },
  {
    "text": "and then stop the stopwatch once it",
    "start": "216580",
    "end": "218709"
  },
  {
    "text": "emits some data so we'll start a new",
    "start": "218709",
    "end": "221050"
  },
  {
    "text": "profile and then once we run this query",
    "start": "221050",
    "end": "223570"
  },
  {
    "text": "we get a warning from firebase that we",
    "start": "223570",
    "end": "226000"
  },
  {
    "text": "don't have an index on the latitude",
    "start": "226000",
    "end": "227590"
  },
  {
    "text": "property so we can optimize performance",
    "start": "227590",
    "end": "230410"
  },
  {
    "text": "by going into the firebase database",
    "start": "230410",
    "end": "232299"
  },
  {
    "text": "rules and then just adding index on with",
    "start": "232299",
    "end": "235299"
  },
  {
    "text": "the property that we want to index and",
    "start": "235299",
    "end": "237190"
  },
  {
    "text": "firebase will automatically create an",
    "start": "237190",
    "end": "239200"
  },
  {
    "text": "index to optimize sorting by that",
    "start": "239200",
    "end": "241600"
  },
  {
    "text": "property if we rerun the query we get a",
    "start": "241600",
    "end": "244510"
  },
  {
    "text": "slight increase in performance and we no",
    "start": "244510",
    "end": "246670"
  },
  {
    "text": "longer see the warning but this will be",
    "start": "246670",
    "end": "248440"
  },
  {
    "text": "a huge increase in performance as your",
    "start": "248440",
    "end": "250420"
  },
  {
    "text": "list gets bigger the profiler tool will",
    "start": "250420",
    "end": "253090"
  },
  {
    "text": "also warn us if we're making any",
    "start": "253090",
    "end": "254500"
  },
  {
    "text": "unindexed queries so that's another nice",
    "start": "254500",
    "end": "256450"
  },
  {
    "text": "feature of the profiler the next",
    "start": "256450",
    "end": "259479"
  },
  {
    "text": "performance topic we're going to look at",
    "start": "259479",
    "end": "260769"
  },
  {
    "text": "is what happens when you make multiple",
    "start": "260769",
    "end": "262810"
  },
  {
    "text": "queries at the same time intuitively you",
    "start": "262810",
    "end": "265479"
  },
  {
    "text": "might think making a whole bunch of",
    "start": "265479",
    "end": "266710"
  },
  {
    "text": "queries at the same time",
    "start": "266710",
    "end": "267670"
  },
  {
    "text": "gonna be really slow and inefficient but",
    "start": "267670",
    "end": "270160"
  },
  {
    "text": "in reality firebase handles everything",
    "start": "270160",
    "end": "271870"
  },
  {
    "text": "in a non-blocking manner so we can send",
    "start": "271870",
    "end": "273730"
  },
  {
    "text": "multiple requests and it can actually",
    "start": "273730",
    "end": "275350"
  },
  {
    "text": "still be really fast so here I have 20",
    "start": "275350",
    "end": "278200"
  },
  {
    "text": "push keys from the database as an array",
    "start": "278200",
    "end": "280000"
  },
  {
    "text": "and we're going to make a separate",
    "start": "280000",
    "end": "282010"
  },
  {
    "text": "request for each one of these push keys",
    "start": "282010",
    "end": "283950"
  },
  {
    "text": "then I'm going to console.log the",
    "start": "283950",
    "end": "286630"
  },
  {
    "text": "request and the response in different",
    "start": "286630",
    "end": "288340"
  },
  {
    "text": "colors just to show you how firebase",
    "start": "288340",
    "end": "290200"
  },
  {
    "text": "actually handles these requests and then",
    "start": "290200",
    "end": "292900"
  },
  {
    "text": "like before we'll stop the stopwatch",
    "start": "292900",
    "end": "294340"
  },
  {
    "text": "once we get the last item back from",
    "start": "294340",
    "end": "296500"
  },
  {
    "text": "firebase so if we run this code in the",
    "start": "296500",
    "end": "299230"
  },
  {
    "text": "angular app notice we get 20 requests",
    "start": "299230",
    "end": "301840"
  },
  {
    "text": "sent and then we get a batch of 20",
    "start": "301840",
    "end": "303910"
  },
  {
    "text": "responses back all at the same time so",
    "start": "303910",
    "end": "306520"
  },
  {
    "text": "you can break your request into multiple",
    "start": "306520",
    "end": "308320"
  },
  {
    "text": "smaller requests and you won't have any",
    "start": "308320",
    "end": "310150"
  },
  {
    "text": "loss in performance generally speaking",
    "start": "310150",
    "end": "312160"
  },
  {
    "text": "this time I added a hundred millisecond",
    "start": "312160",
    "end": "314200"
  },
  {
    "text": "delay between each request and you can",
    "start": "314200",
    "end": "316090"
  },
  {
    "text": "see we get the responses back in",
    "start": "316090",
    "end": "317680"
  },
  {
    "text": "different sized batches depending on",
    "start": "317680",
    "end": "319330"
  },
  {
    "text": "when they're actually ready in firebase",
    "start": "319330",
    "end": "321180"
  },
  {
    "text": "so the bottom line here is that you can",
    "start": "321180",
    "end": "323620"
  },
  {
    "text": "send multiple simultaneous requests to",
    "start": "323620",
    "end": "325450"
  },
  {
    "text": "firebase without sacrificing much in",
    "start": "325450",
    "end": "327580"
  },
  {
    "text": "terms of performance that's it for",
    "start": "327580",
    "end": "330640"
  },
  {
    "text": "firebase database profiling if this",
    "start": "330640",
    "end": "332890"
  },
  {
    "text": "video helped you please like and",
    "start": "332890",
    "end": "334030"
  },
  {
    "text": "subscribe and if you want to get",
    "start": "334030",
    "end": "335500"
  },
  {
    "text": "involved with the channel consider",
    "start": "335500",
    "end": "336970"
  },
  {
    "text": "joining our slack team or becoming a pro",
    "start": "336970",
    "end": "339250"
  },
  {
    "text": "member at angular firebase comm thanks",
    "start": "339250",
    "end": "342160"
  },
  {
    "text": "for watching and I'll see you next time",
    "start": "342160",
    "end": "344890"
  },
  {
    "text": "[Music]",
    "start": "344890",
    "end": "346250"
  },
  {
    "text": "[Applause]",
    "start": "346250",
    "end": "347180"
  },
  {
    "text": "[Music]",
    "start": "347180",
    "end": "351669"
  }
]