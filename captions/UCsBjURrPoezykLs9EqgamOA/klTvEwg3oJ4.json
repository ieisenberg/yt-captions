[
  {
    "text": "it is April 7 2023 and you're watching",
    "start": "0",
    "end": "3600"
  },
  {
    "text": "the code report one month ago Vector",
    "start": "3600",
    "end": "5580"
  },
  {
    "text": "database weeviate landed 16 million",
    "start": "5580",
    "end": "7740"
  },
  {
    "text": "dollars in series a funding last week",
    "start": "7740",
    "end": "9720"
  },
  {
    "text": "Pinecone DB just got a check for 28",
    "start": "9720",
    "end": "12179"
  },
  {
    "text": "million at a 700 million valuation and",
    "start": "12179",
    "end": "14700"
  },
  {
    "text": "yesterday chroma an open source project",
    "start": "14700",
    "end": "16920"
  },
  {
    "text": "with only 1.2 GitHub Stars raised 18",
    "start": "16920",
    "end": "19619"
  },
  {
    "text": "million for its embeddings database and",
    "start": "19619",
    "end": "21840"
  },
  {
    "text": "I just launched my own Vector database",
    "start": "21840",
    "end": "23400"
  },
  {
    "text": "this morning we're currently pre-revenue",
    "start": "23400",
    "end": "24960"
  },
  {
    "text": "pre-vision and pre-code and valued at",
    "start": "24960",
    "end": "27060"
  },
  {
    "text": "420 million dollars leave your credit",
    "start": "27060",
    "end": "29039"
  },
  {
    "text": "card details in the comments if you'd",
    "start": "29039",
    "end": "30480"
  },
  {
    "text": "like to invest but you might be",
    "start": "30480",
    "end": "31740"
  },
  {
    "text": "wondering what the hell is a vector",
    "start": "31740",
    "end": "33480"
  },
  {
    "text": "database or what the hell is a vector",
    "start": "33480",
    "end": "35219"
  },
  {
    "text": "even well that's easy a vector is just",
    "start": "35219",
    "end": "37200"
  },
  {
    "text": "an array of numbers but what's cool",
    "start": "37200",
    "end": "38820"
  },
  {
    "text": "about vectors is that they can represent",
    "start": "38820",
    "end": "40379"
  },
  {
    "text": "more complex objects like Words",
    "start": "40379",
    "end": "42239"
  },
  {
    "text": "sentences images or audio files in a",
    "start": "42239",
    "end": "45180"
  },
  {
    "text": "continuous High dimensional space called",
    "start": "45180",
    "end": "46920"
  },
  {
    "text": "an embedding it's kind of like this when",
    "start": "46920",
    "end": "48719"
  },
  {
    "text": "you go to a party all of the jocks sit",
    "start": "48719",
    "end": "50579"
  },
  {
    "text": "around the TV and watch football",
    "start": "50579",
    "end": "51660"
  },
  {
    "text": "meanwhile all the girls find the Dance",
    "start": "51660",
    "end": "53520"
  },
  {
    "text": "Floor while you group together with all",
    "start": "53520",
    "end": "55140"
  },
  {
    "text": "the programming introverts to talk about",
    "start": "55140",
    "end": "56699"
  },
  {
    "text": "vectors in the corner notice how all the",
    "start": "56699",
    "end": "58559"
  },
  {
    "text": "similar objects are grouped together",
    "start": "58559",
    "end": "59940"
  },
  {
    "text": "embeddings work the same way except they",
    "start": "59940",
    "end": "62280"
  },
  {
    "text": "map the semantic meaning of words",
    "start": "62280",
    "end": "63719"
  },
  {
    "text": "together or similar features in",
    "start": "63719",
    "end": "65400"
  },
  {
    "text": "virtually any other data type these",
    "start": "65400",
    "end": "67020"
  },
  {
    "text": "embeddings can then be used for things",
    "start": "67020",
    "end": "68340"
  },
  {
    "text": "like recommendation systems search",
    "start": "68340",
    "end": "70200"
  },
  {
    "text": "engines and even text generation like",
    "start": "70200",
    "end": "72119"
  },
  {
    "text": "chat GPT but once you have your",
    "start": "72119",
    "end": "74040"
  },
  {
    "text": "embeddings the question becomes where do",
    "start": "74040",
    "end": "75960"
  },
  {
    "text": "you store them and how do you query them",
    "start": "75960",
    "end": "77460"
  },
  {
    "text": "quickly that's where Vector databases",
    "start": "77460",
    "end": "79320"
  },
  {
    "text": "come in in a relational database you",
    "start": "79320",
    "end": "81119"
  },
  {
    "text": "have rows and columns in a document",
    "start": "81119",
    "end": "82920"
  },
  {
    "text": "database you have documents and",
    "start": "82920",
    "end": "84360"
  },
  {
    "text": "collections but in a vector database you",
    "start": "84360",
    "end": "86460"
  },
  {
    "text": "have arrays of numbers clustered",
    "start": "86460",
    "end": "88020"
  },
  {
    "text": "together based on similarity which can",
    "start": "88020",
    "end": "89880"
  },
  {
    "text": "be queried with ultra low latency making",
    "start": "89880",
    "end": "91920"
  },
  {
    "text": "it an ideal choice for AI driven",
    "start": "91920",
    "end": "93659"
  },
  {
    "text": "applications relational databases like",
    "start": "93659",
    "end": "95520"
  },
  {
    "text": "postgres have tools like PG Vector to",
    "start": "95520",
    "end": "97799"
  },
  {
    "text": "support this type of functionality and",
    "start": "97799",
    "end": "99420"
  },
  {
    "text": "redis also has first class Vector",
    "start": "99420",
    "end": "101220"
  },
  {
    "text": "support but a bunch of new native Vector",
    "start": "101220",
    "end": "103020"
  },
  {
    "text": "databases are popping up like weeviate",
    "start": "103020",
    "end": "105060"
  },
  {
    "text": "and milvis are open source options",
    "start": "105060",
    "end": "106680"
  },
  {
    "text": "written in go then you have Pinecone",
    "start": "106680",
    "end": "108479"
  },
  {
    "text": "which is extremely popular but is not",
    "start": "108479",
    "end": "110340"
  },
  {
    "text": "open source then you have Chromo which",
    "start": "110340",
    "end": "112140"
  },
  {
    "text": "is based on clickhouse under the hood",
    "start": "112140",
    "end": "113579"
  },
  {
    "text": "and many other options from there let's",
    "start": "113579",
    "end": "115619"
  },
  {
    "text": "jump into some code to see what it looks",
    "start": "115619",
    "end": "117360"
  },
  {
    "text": "like here I'm using chroma and",
    "start": "117360",
    "end": "118740"
  },
  {
    "text": "JavaScript and the first thing I I'll do",
    "start": "118740",
    "end": "120479"
  },
  {
    "text": "is create the client then Define an",
    "start": "120479",
    "end": "122280"
  },
  {
    "text": "embedding function in this case it will",
    "start": "122280",
    "end": "124020"
  },
  {
    "text": "use the openai API to update the",
    "start": "124020",
    "end": "126240"
  },
  {
    "text": "embeddings whenever a new data point is",
    "start": "126240",
    "end": "128039"
  },
  {
    "text": "added each data point is just a document",
    "start": "128039",
    "end": "129959"
  },
  {
    "text": "with an IDE and some text and finally we",
    "start": "129959",
    "end": "132540"
  },
  {
    "text": "can query the database by passing a",
    "start": "132540",
    "end": "134280"
  },
  {
    "text": "string of text just like an llm what's",
    "start": "134280",
    "end": "136319"
  },
  {
    "text": "most interesting though is that in the",
    "start": "136319",
    "end": "137940"
  },
  {
    "text": "query result we get the data back in",
    "start": "137940",
    "end": "139920"
  },
  {
    "text": "addition to an array of distances with a",
    "start": "139920",
    "end": "142140"
  },
  {
    "text": "smaller number indicating a higher",
    "start": "142140",
    "end": "143700"
  },
  {
    "text": "degree of similarity that's pretty cool",
    "start": "143700",
    "end": "145440"
  },
  {
    "text": "but the real reason that these databases",
    "start": "145440",
    "end": "147180"
  },
  {
    "text": "are so hot right now is that they can",
    "start": "147180",
    "end": "148680"
  },
  {
    "text": "extend llms with long-term memory you",
    "start": "148680",
    "end": "150720"
  },
  {
    "text": "start with a general purpose model like",
    "start": "150720",
    "end": "152280"
  },
  {
    "text": "open ai's gpt4 metaslama or Google's",
    "start": "152280",
    "end": "155040"
  },
  {
    "text": "Lambda then provide your own data in a",
    "start": "155040",
    "end": "156780"
  },
  {
    "text": "vector database when the user makes a",
    "start": "156780",
    "end": "158340"
  },
  {
    "text": "prompt you can then query relevant",
    "start": "158340",
    "end": "159780"
  },
  {
    "text": "documents from your own database to",
    "start": "159780",
    "end": "161400"
  },
  {
    "text": "update the context which will customize",
    "start": "161400",
    "end": "163260"
  },
  {
    "text": "the final response and it can also",
    "start": "163260",
    "end": "164760"
  },
  {
    "text": "retrieve historical data to give the AI",
    "start": "164760",
    "end": "166680"
  },
  {
    "text": "long-term memory in addition they also",
    "start": "166680",
    "end": "168720"
  },
  {
    "text": "integrate with tools like link chain",
    "start": "168720",
    "end": "170160"
  },
  {
    "text": "that combine multiple llms together it's",
    "start": "170160",
    "end": "172379"
  },
  {
    "text": "all pretty crazy and I'm working on a",
    "start": "172379",
    "end": "173879"
  },
  {
    "text": "tutorial on my second Channel with Wii",
    "start": "173879",
    "end": "175500"
  },
  {
    "text": "V8 so make sure to subscribe over there",
    "start": "175500",
    "end": "176879"
  },
  {
    "text": "if you really want to dive into this",
    "start": "176879",
    "end": "178140"
  },
  {
    "text": "stuff and lastly in related news if you",
    "start": "178140",
    "end": "179879"
  },
  {
    "text": "check out the top training repos in",
    "start": "179879",
    "end": "181440"
  },
  {
    "text": "GitHub today they're almost all trying",
    "start": "181440",
    "end": "182940"
  },
  {
    "text": "to create artificial general",
    "start": "182940",
    "end": "183959"
  },
  {
    "text": "intelligence like Microsoft's Jarvis",
    "start": "183959",
    "end": "185940"
  },
  {
    "text": "Auto GPT and baby AGI which are tools",
    "start": "185940",
    "end": "188940"
  },
  {
    "text": "that use Vector databases and llms to",
    "start": "188940",
    "end": "191220"
  },
  {
    "text": "prove themselves and this is terrifying",
    "start": "191220",
    "end": "193019"
  },
  {
    "text": "as someone who just became a proofed",
    "start": "193019",
    "end": "194519"
  },
  {
    "text": "engineer I never thought I'd become",
    "start": "194519",
    "end": "195780"
  },
  {
    "text": "obsolete twice in one month this has",
    "start": "195780",
    "end": "197519"
  },
  {
    "text": "been the code report thanks for watching",
    "start": "197519",
    "end": "199080"
  },
  {
    "text": "and I will see you in the next one",
    "start": "199080",
    "end": "202580"
  }
]