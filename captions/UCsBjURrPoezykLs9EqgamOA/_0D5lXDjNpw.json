[
  {
    "text": "Jax it's just another accelerated linear",
    "start": "440",
    "end": "3120"
  },
  {
    "text": "algebra library but capable of mega fast",
    "start": "3120",
    "end": "5839"
  },
  {
    "text": "numerical Computing on futuristic new",
    "start": "5839",
    "end": "8000"
  },
  {
    "text": "hardware to understand Jax let's start",
    "start": "8000",
    "end": "10080"
  },
  {
    "text": "with the x or accelerated linear algebra",
    "start": "10080",
    "end": "12599"
  },
  {
    "text": "in Python there's already a great linear",
    "start": "12599",
    "end": "14519"
  },
  {
    "text": "algebra Library called numpy and Jax is",
    "start": "14519",
    "end": "17080"
  },
  {
    "text": "nearly identical to numpy it allows you",
    "start": "17080",
    "end": "19199"
  },
  {
    "text": "to create multi-dimensional arrays then",
    "start": "19199",
    "end": "21199"
  },
  {
    "text": "do scientific Computing with them like",
    "start": "21199",
    "end": "23119"
  },
  {
    "text": "add them together or get the dot product",
    "start": "23119",
    "end": "25279"
  },
  {
    "text": "however Jax enforces some constraints",
    "start": "25279",
    "end": "27359"
  },
  {
    "text": "that numpy does not have like immutable",
    "start": "27359",
    "end": "29560"
  },
  {
    "text": "arrays and pure functions which allows",
    "start": "29560",
    "end": "31880"
  },
  {
    "text": "it to automatically compile to low-level",
    "start": "31880",
    "end": "34120"
  },
  {
    "text": "code that can run on accelerated",
    "start": "34120",
    "end": "35840"
  },
  {
    "text": "Hardware like gpus and tpus the a stands",
    "start": "35840",
    "end": "38719"
  },
  {
    "text": "for autograd Jax was developed by Google",
    "start": "38719",
    "end": "41079"
  },
  {
    "text": "along with team members from the",
    "start": "41079",
    "end": "42280"
  },
  {
    "text": "original autograd Library you see",
    "start": "42280",
    "end": "44160"
  },
  {
    "text": "virtually every facet of machine",
    "start": "44160",
    "end": "45640"
  },
  {
    "text": "learning requires some calculus you'll",
    "start": "45640",
    "end": "47640"
  },
  {
    "text": "need to compute gradients for",
    "start": "47640",
    "end": "49160"
  },
  {
    "text": "optimization algorithms and back",
    "start": "49160",
    "end": "51160"
  },
  {
    "text": "propagation and neural networks and",
    "start": "51160",
    "end": "52800"
  },
  {
    "text": "autograd allows you to automatically",
    "start": "52800",
    "end": "54760"
  },
  {
    "text": "differentiate python functions or in",
    "start": "54760",
    "end": "56879"
  },
  {
    "text": "simple terms it calculate the rate of",
    "start": "56879",
    "end": "58680"
  },
  {
    "text": "change of a function based on its inputs",
    "start": "58680",
    "end": "61199"
  },
  {
    "text": "then finally the J stands for just in",
    "start": "61199",
    "end": "63359"
  },
  {
    "text": "time compilation when you write a",
    "start": "63359",
    "end": "64878"
  },
  {
    "text": "function in Jax it's transformed into a",
    "start": "64879",
    "end": "67119"
  },
  {
    "text": "primitive set of operations these",
    "start": "67119",
    "end": "68880"
  },
  {
    "text": "so-called Jack spers are lazily compiled",
    "start": "68880",
    "end": "71439"
  },
  {
    "text": "and can be evaluated like a mini",
    "start": "71439",
    "end": "73119"
  },
  {
    "text": "functional programming language to get",
    "start": "73119",
    "end": "74799"
  },
  {
    "text": "started install Jacks either for your",
    "start": "74799",
    "end": "76640"
  },
  {
    "text": "CPU GPU or TPU and now we can start",
    "start": "76640",
    "end": "79119"
  },
  {
    "text": "doing high performance array Computing",
    "start": "79119",
    "end": "81040"
  },
  {
    "text": "let's first create a couple of",
    "start": "81040",
    "end": "82159"
  },
  {
    "text": "two-dimensional arrays now in numpy if I",
    "start": "82159",
    "end": "84400"
  },
  {
    "text": "wanted to change the values in an array",
    "start": "84400",
    "end": "86360"
  },
  {
    "text": "I could mutate the data structure",
    "start": "86360",
    "end": "87759"
  },
  {
    "text": "directly but in Jax that's an error",
    "start": "87759",
    "end": "89920"
  },
  {
    "text": "because arrays are immutable instead we",
    "start": "89920",
    "end": "91799"
  },
  {
    "text": "use the at function to select an index",
    "start": "91799",
    "end": "93920"
  },
  {
    "text": "then set to change the value and return",
    "start": "93920",
    "end": "95720"
  },
  {
    "text": "a new array from there we can do some",
    "start": "95720",
    "end": "97280"
  },
  {
    "text": "linear algebra like element wise",
    "start": "97280",
    "end": "99280"
  },
  {
    "text": "addition element wise multiplication or",
    "start": "99280",
    "end": "101600"
  },
  {
    "text": "get the dot product of the two arrays",
    "start": "101600",
    "end": "103520"
  },
  {
    "text": "what's really cool about Jack though is",
    "start": "103520",
    "end": "105360"
  },
  {
    "text": "automatic differentiation imagine you're",
    "start": "105360",
    "end": "107439"
  },
  {
    "text": "building a high yield nuclear warhead in",
    "start": "107439",
    "end": "109360"
  },
  {
    "text": "your mom's basement you'll likely write",
    "start": "109360",
    "end": "110840"
  },
  {
    "text": "a python function that looks like this",
    "start": "110840",
    "end": "112600"
  },
  {
    "text": "that calculates the height of the",
    "start": "112600",
    "end": "113759"
  },
  {
    "text": "mushroom cloud based on the amount of",
    "start": "113759",
    "end": "115439"
  },
  {
    "text": "time after detonation this will give us",
    "start": "115439",
    "end": "117240"
  },
  {
    "text": "the height at any point in time but we",
    "start": "117240",
    "end": "119119"
  },
  {
    "text": "also want to know the instantaneous rate",
    "start": "119119",
    "end": "120960"
  },
  {
    "text": "of change or how fast the cloud is",
    "start": "120960",
    "end": "122759"
  },
  {
    "text": "growing at a given point in time with",
    "start": "122759",
    "end": "124560"
  },
  {
    "text": "Jax we can differentiate this function",
    "start": "124560",
    "end": "126680"
  },
  {
    "text": "by passing our function to Jack's grad",
    "start": "126680",
    "end": "129039"
  },
  {
    "text": "which returns a new function that",
    "start": "129039",
    "end": "130640"
  },
  {
    "text": "computes the derivative but if we modify",
    "start": "130640",
    "end": "132560"
  },
  {
    "text": "this function to take an array of",
    "start": "132560",
    "end": "133959"
  },
  {
    "text": "parameters the end result will be a",
    "start": "133959",
    "end": "135519"
  },
  {
    "text": "gradient which is an array of partial",
    "start": "135519",
    "end": "137599"
  },
  {
    "text": "derivatives giving us the rate of change",
    "start": "137599",
    "end": "139480"
  },
  {
    "text": "with respect to each input variable on",
    "start": "139480",
    "end": "141519"
  },
  {
    "text": "the original function because grad",
    "start": "141519",
    "end": "143239"
  },
  {
    "text": "returns a function we can even apply it",
    "start": "143239",
    "end": "145000"
  },
  {
    "text": "to its own output to differentiate again",
    "start": "145000",
    "end": "147319"
  },
  {
    "text": "and get higher order derivatives but",
    "start": "147319",
    "end": "149120"
  },
  {
    "text": "more importantly you can use math just",
    "start": "149120",
    "end": "150920"
  },
  {
    "text": "like this in Jax to build the future of",
    "start": "150920",
    "end": "152720"
  },
  {
    "text": "machine learning gradients tell us how",
    "start": "152720",
    "end": "154400"
  },
  {
    "text": "to adjust model parameters to decrease",
    "start": "154400",
    "end": "156400"
  },
  {
    "text": "the loss or improve the performance of a",
    "start": "156400",
    "end": "158200"
  },
  {
    "text": "model and you can start building deep",
    "start": "158200",
    "end": "159680"
  },
  {
    "text": "neural networks with it right now using",
    "start": "159680",
    "end": "161599"
  },
  {
    "text": "libraries like flax this has been Jax in",
    "start": "161599",
    "end": "164440"
  },
  {
    "text": "100 seconds but if you truly want to",
    "start": "164440",
    "end": "166040"
  },
  {
    "text": "Master machine learning you'll also need",
    "start": "166040",
    "end": "167680"
  },
  {
    "text": "to understand computer science calculus",
    "start": "167680",
    "end": "170280"
  },
  {
    "text": "and statistics you can start making that",
    "start": "170280",
    "end": "172120"
  },
  {
    "text": "happen today for free thanks to this",
    "start": "172120",
    "end": "173720"
  },
  {
    "text": "video sponsor brilliant not only does",
    "start": "173720",
    "end": "175840"
  },
  {
    "text": "their platform have a massive collection",
    "start": "175840",
    "end": "177480"
  },
  {
    "text": "of content related to these topics but",
    "start": "177480",
    "end": "179440"
  },
  {
    "text": "their fun fun Hands-On exercises will",
    "start": "179440",
    "end": "181440"
  },
  {
    "text": "help you actually retain what you study",
    "start": "181440",
    "end": "183360"
  },
  {
    "text": "just like this video every lesson is",
    "start": "183360",
    "end": "185280"
  },
  {
    "text": "designed to be concise and rewarding",
    "start": "185280",
    "end": "187000"
  },
  {
    "text": "making complex topics in math and",
    "start": "187000",
    "end": "188879"
  },
  {
    "text": "science approachable for everyone you",
    "start": "188879",
    "end": "190680"
  },
  {
    "text": "can try out everything brilliant has to",
    "start": "190680",
    "end": "192360"
  },
  {
    "text": "offer for free for 30 days by visiting",
    "start": "192360",
    "end": "194599"
  },
  {
    "text": "brilliant.org fireship or scan this QR",
    "start": "194599",
    "end": "197400"
  },
  {
    "text": "code for 20% off their premium annual",
    "start": "197400",
    "end": "199640"
  },
  {
    "text": "subscription thanks for watching and I",
    "start": "199640",
    "end": "201480"
  },
  {
    "text": "will see you in the next one",
    "start": "201480",
    "end": "205440"
  }
]