[
  {
    "text": "test-driven development is the single",
    "start": "0",
    "end": "1650"
  },
  {
    "text": "most powerful tool you have for",
    "start": "1650",
    "end": "2970"
  },
  {
    "text": "preventing bugs within your application",
    "start": "2970",
    "end": "4680"
  },
  {
    "text": "that's not just my opinion but it's a",
    "start": "4680",
    "end": "6600"
  },
  {
    "text": "scientifically proven fact in exchange",
    "start": "6600",
    "end": "8940"
  },
  {
    "text": "for effort and productivity you get",
    "start": "8940",
    "end": "10559"
  },
  {
    "text": "better quality software that is more",
    "start": "10559",
    "end": "12300"
  },
  {
    "text": "maintainable long-term lucky for you",
    "start": "12300",
    "end": "14490"
  },
  {
    "text": "angular comes built-in with jasmine and",
    "start": "14490",
    "end": "16500"
  },
  {
    "text": "karma so testing is really easy to get",
    "start": "16500",
    "end": "18660"
  },
  {
    "text": "started with in this video I'll give you",
    "start": "18660",
    "end": "20369"
  },
  {
    "text": "a tour of angular's testing tools and",
    "start": "20369",
    "end": "22350"
  },
  {
    "text": "show you how to deal with third-party",
    "start": "22350",
    "end": "23789"
  },
  {
    "text": "dependencies like firebase if you're new",
    "start": "23789",
    "end": "26160"
  },
  {
    "text": "to the channel make sure to subscribe",
    "start": "26160",
    "end": "27180"
  },
  {
    "text": "and you can always get the full source",
    "start": "27180",
    "end": "29010"
  },
  {
    "text": "code on angular firebase com the first",
    "start": "29010",
    "end": "32250"
  },
  {
    "text": "thing I'm going to do is generate a",
    "start": "32250",
    "end": "33420"
  },
  {
    "text": "brand new angular 5 app and then I'll",
    "start": "33420",
    "end": "35399"
  },
  {
    "text": "show you what all the different testing",
    "start": "35399",
    "end": "36750"
  },
  {
    "text": "files do the angular CLI generates all",
    "start": "36750",
    "end": "39600"
  },
  {
    "text": "of the boilerplate code automatically so",
    "start": "39600",
    "end": "41850"
  },
  {
    "text": "we'll start by looking at the karma",
    "start": "41850",
    "end": "43290"
  },
  {
    "text": "config file karma works by setting up a",
    "start": "43290",
    "end": "45690"
  },
  {
    "text": "web server that will run all of your",
    "start": "45690",
    "end": "47309"
  },
  {
    "text": "tests automatically every time a file",
    "start": "47309",
    "end": "49260"
  },
  {
    "text": "changes you have some configuration",
    "start": "49260",
    "end": "51300"
  },
  {
    "text": "options here if you want to customize",
    "start": "51300",
    "end": "52860"
  },
  {
    "text": "that experience you also have a",
    "start": "52860",
    "end": "55199"
  },
  {
    "text": "protractor config file which is",
    "start": "55199",
    "end": "57000"
  },
  {
    "text": "specifically for end-to-end tests and",
    "start": "57000",
    "end": "59160"
  },
  {
    "text": "end testing uses the browser to simulate",
    "start": "59160",
    "end": "61949"
  },
  {
    "text": "how the end user sees your app so it's",
    "start": "61949",
    "end": "64018"
  },
  {
    "text": "completely decoupled from your main app",
    "start": "64019",
    "end": "65700"
  },
  {
    "text": "code that's why we have this été",
    "start": "65700",
    "end": "67350"
  },
  {
    "text": "directory in the root of the project and",
    "start": "67350",
    "end": "68939"
  },
  {
    "text": "I'll show you how to use it in a future",
    "start": "68939",
    "end": "70560"
  },
  {
    "text": "video now moving into the source",
    "start": "70560",
    "end": "72780"
  },
  {
    "text": "directory we have a test ts file it's",
    "start": "72780",
    "end": "76049"
  },
  {
    "text": "required by karma to load all your spec",
    "start": "76049",
    "end": "77790"
  },
  {
    "text": "files you shouldn't really have to",
    "start": "77790",
    "end": "79229"
  },
  {
    "text": "change anything in here now let's take a",
    "start": "79229",
    "end": "81119"
  },
  {
    "text": "look at our first real test which is the",
    "start": "81119",
    "end": "82619"
  },
  {
    "text": "app component spec ts file this just",
    "start": "82619",
    "end": "85860"
  },
  {
    "text": "looks like a big jumble of code so let's",
    "start": "85860",
    "end": "87509"
  },
  {
    "text": "break the test down into its fundamental",
    "start": "87509",
    "end": "89369"
  },
  {
    "text": "parts the first part of any test is to",
    "start": "89369",
    "end": "91979"
  },
  {
    "text": "describe the test suite in Jasmine you",
    "start": "91979",
    "end": "94259"
  },
  {
    "text": "do this by using the describe keyword",
    "start": "94259",
    "end": "96119"
  },
  {
    "text": "followed by whatever you're testing the",
    "start": "96119",
    "end": "98610"
  },
  {
    "text": "purple text represents jasmine the green",
    "start": "98610",
    "end": "100680"
  },
  {
    "text": "represents what we're going to write we",
    "start": "100680",
    "end": "102780"
  },
  {
    "text": "write all the tests inside this describe",
    "start": "102780",
    "end": "104520"
  },
  {
    "text": "block each one starting with it so we're",
    "start": "104520",
    "end": "107310"
  },
  {
    "text": "going to say it should be awesome then",
    "start": "107310",
    "end": "109560"
  },
  {
    "text": "you'll write an expectation that",
    "start": "109560",
    "end": "110970"
  },
  {
    "text": "verifies whether this is true or false",
    "start": "110970",
    "end": "112740"
  },
  {
    "text": "so with jasmine we could do something",
    "start": "112740",
    "end": "114659"
  },
  {
    "text": "like expect component to be awesome the",
    "start": "114659",
    "end": "117329"
  },
  {
    "text": "end result is that you've described the",
    "start": "117329",
    "end": "119100"
  },
  {
    "text": "behavior of your code in a way that can",
    "start": "119100",
    "end": "120899"
  },
  {
    "text": "be easily read by a non programmer",
    "start": "120899",
    "end": "122869"
  },
  {
    "text": "describing and validating your code in",
    "start": "122869",
    "end": "125100"
  },
  {
    "text": "this way is the reason that testing is",
    "start": "125100",
    "end": "126810"
  },
  {
    "text": "so effective at reducing bugs now we",
    "start": "126810",
    "end": "129270"
  },
  {
    "text": "need something to test so I'm going to",
    "start": "129270",
    "end": "131009"
  },
  {
    "text": "start by generating this alert but",
    "start": "131009",
    "end": "133010"
  },
  {
    "text": "Component it's just a simple button that",
    "start": "133010",
    "end": "135890"
  },
  {
    "text": "will toggle the visibility of this alert",
    "start": "135890",
    "end": "137810"
  },
  {
    "text": "message whenever it's clicked",
    "start": "137810",
    "end": "139280"
  },
  {
    "text": "we'll start by testing its static values",
    "start": "139280",
    "end": "141650"
  },
  {
    "text": "but eventually we'll use angularfire to",
    "start": "141650",
    "end": "143629"
  },
  {
    "text": "to populate it's warning message if we",
    "start": "143629",
    "end": "146239"
  },
  {
    "text": "look at the component type script I just",
    "start": "146239",
    "end": "147530"
  },
  {
    "text": "have a couple of properties hard-coded",
    "start": "147530",
    "end": "149390"
  },
  {
    "text": "in here and then I have a toggle method",
    "start": "149390",
    "end": "151220"
  },
  {
    "text": "that will toggle the value of the hide",
    "start": "151220",
    "end": "153500"
  },
  {
    "text": "content property then the template HTML",
    "start": "153500",
    "end": "156530"
  },
  {
    "text": "just shows these properties and adds a",
    "start": "156530",
    "end": "158450"
  },
  {
    "text": "button that will toggle the visibility",
    "start": "158450",
    "end": "159799"
  },
  {
    "text": "of that message the message is hidden by",
    "start": "159799",
    "end": "162470"
  },
  {
    "text": "default and that's something we're gonna",
    "start": "162470",
    "end": "163909"
  },
  {
    "text": "test here in the upcoming steps so now",
    "start": "163909",
    "end": "166609"
  },
  {
    "text": "let's set up our alert button spec from",
    "start": "166609",
    "end": "168890"
  },
  {
    "text": "scratch the first thing we're going to",
    "start": "168890",
    "end": "170900"
  },
  {
    "text": "do is import angular's testing utilities",
    "start": "170900",
    "end": "172970"
  },
  {
    "text": "and then we're going to describe our",
    "start": "172970",
    "end": "174709"
  },
  {
    "text": "test suite which is the angular button",
    "start": "174709",
    "end": "176599"
  },
  {
    "text": "component at this point we're going to",
    "start": "176599",
    "end": "179329"
  },
  {
    "text": "declare a variable for the fixture and a",
    "start": "179329",
    "end": "181400"
  },
  {
    "text": "fixture is just the test environment for",
    "start": "181400",
    "end": "183889"
  },
  {
    "text": "this component so it provides access to",
    "start": "183889",
    "end": "185569"
  },
  {
    "text": "the component itself as well as its",
    "start": "185569",
    "end": "187220"
  },
  {
    "text": "debug element which is it's rendered",
    "start": "187220",
    "end": "189049"
  },
  {
    "text": "HTML now before each spec we need to set",
    "start": "189049",
    "end": "192470"
  },
  {
    "text": "up a test bed which is just an NG module",
    "start": "192470",
    "end": "194930"
  },
  {
    "text": "specific for this testing environment",
    "start": "194930",
    "end": "196909"
  },
  {
    "text": "the most simple example is just an",
    "start": "196909",
    "end": "198560"
  },
  {
    "text": "isolated test of the component itself",
    "start": "198560",
    "end": "200269"
  },
  {
    "text": "and that's where we're going to start",
    "start": "200269",
    "end": "201530"
  },
  {
    "text": "but this will get increasingly more",
    "start": "201530",
    "end": "203000"
  },
  {
    "text": "complex if you want to compile the",
    "start": "203000",
    "end": "205099"
  },
  {
    "text": "components HTML and CSS then you'll call",
    "start": "205099",
    "end": "207379"
  },
  {
    "text": "this compiled components method after",
    "start": "207379",
    "end": "209000"
  },
  {
    "text": "the test bed after the test beds been",
    "start": "209000",
    "end": "211099"
  },
  {
    "text": "compiled we can then set up a few",
    "start": "211099",
    "end": "212569"
  },
  {
    "text": "variables here that we'll actually use",
    "start": "212569",
    "end": "214340"
  },
  {
    "text": "for testing we can test the component",
    "start": "214340",
    "end": "216590"
  },
  {
    "text": "directly or we can test its rendered",
    "start": "216590",
    "end": "218359"
  },
  {
    "text": "HTML via the debug element and lastly",
    "start": "218359",
    "end": "221449"
  },
  {
    "text": "we'll run angular change detection",
    "start": "221449",
    "end": "222560"
  },
  {
    "text": "before each of these tests but you could",
    "start": "222560",
    "end": "224780"
  },
  {
    "text": "test things before change detection as",
    "start": "224780",
    "end": "226370"
  },
  {
    "text": "well now we're ready to write the first",
    "start": "226370",
    "end": "228260"
  },
  {
    "text": "spec the first thing we'll test is",
    "start": "228260",
    "end": "230359"
  },
  {
    "text": "whether or not the component is created",
    "start": "230359",
    "end": "232220"
  },
  {
    "text": "successfully so we can say it should",
    "start": "232220",
    "end": "234799"
  },
  {
    "text": "create and then we'll expect component",
    "start": "234799",
    "end": "236659"
  },
  {
    "text": "to be truthy just a quick side note",
    "start": "236659",
    "end": "238940"
  },
  {
    "text": "truthy means that something evaluates to",
    "start": "238940",
    "end": "241220"
  },
  {
    "text": "true in a boolean context it doesn't",
    "start": "241220",
    "end": "243349"
  },
  {
    "text": "mean what you're testing is actually the",
    "start": "243349",
    "end": "244970"
  },
  {
    "text": "primitive true value this is one of the",
    "start": "244970",
    "end": "247040"
  },
  {
    "text": "many Jasmine matters and I recommend",
    "start": "247040",
    "end": "248840"
  },
  {
    "text": "going to the docs to get acquainted with",
    "start": "248840",
    "end": "250400"
  },
  {
    "text": "all of them now that we have our spec we",
    "start": "250400",
    "end": "252530"
  },
  {
    "text": "can just run ng test and that'll bring",
    "start": "252530",
    "end": "254690"
  },
  {
    "text": "up a browser window saying whether or",
    "start": "254690",
    "end": "256220"
  },
  {
    "text": "not it passed or failed now I'm just",
    "start": "256220",
    "end": "258109"
  },
  {
    "text": "gonna leave karma running so we can see",
    "start": "258109",
    "end": "259549"
  },
  {
    "text": "how it updates every time we write a new",
    "start": "259549",
    "end": "261320"
  },
  {
    "text": "spec the second spec is going to see",
    "start": "261320",
    "end": "264560"
  },
  {
    "text": "whether or not the content message has a",
    "start": "264560",
    "end": "267190"
  },
  {
    "text": "string of warned in this case the",
    "start": "267190",
    "end": "269290"
  },
  {
    "text": "content was just hard coded as a",
    "start": "269290",
    "end": "271000"
  },
  {
    "text": "property on the component so we can say",
    "start": "271000",
    "end": "273130"
  },
  {
    "text": "a component content to contain the",
    "start": "273130",
    "end": "275410"
  },
  {
    "text": "string of warn the to contain match sure",
    "start": "275410",
    "end": "277720"
  },
  {
    "text": "we'll check for a substring or if it was",
    "start": "277720",
    "end": "279610"
  },
  {
    "text": "an array it would check for an element",
    "start": "279610",
    "end": "281290"
  },
  {
    "text": "in that array now if we save this file",
    "start": "281290",
    "end": "283300"
  },
  {
    "text": "you can see the karma runner on the Left",
    "start": "283300",
    "end": "285370"
  },
  {
    "text": "will update with the spec and it will be",
    "start": "285370",
    "end": "287590"
  },
  {
    "text": "passing as well so the actual message",
    "start": "287590",
    "end": "290320"
  },
  {
    "text": "content is you will be warned so let's",
    "start": "290320",
    "end": "292840"
  },
  {
    "text": "see what happens if we use a Jasmine",
    "start": "292840",
    "end": "294190"
  },
  {
    "text": "matcher that looks for an exact match",
    "start": "294190",
    "end": "295900"
  },
  {
    "text": "this time we'll get a failing test and",
    "start": "295900",
    "end": "298210"
  },
  {
    "text": "it's also going to tell us exactly why",
    "start": "298210",
    "end": "299710"
  },
  {
    "text": "it failed it expected that string of you",
    "start": "299710",
    "end": "301990"
  },
  {
    "text": "have been warned to be warned which",
    "start": "301990",
    "end": "303850"
  },
  {
    "text": "would be false you can also rate specs",
    "start": "303850",
    "end": "306040"
  },
  {
    "text": "based on logical numeric values so let's",
    "start": "306040",
    "end": "308950"
  },
  {
    "text": "say we have a severity level on the",
    "start": "308950",
    "end": "311200"
  },
  {
    "text": "alert and we want to see if it is",
    "start": "311200",
    "end": "312820"
  },
  {
    "text": "greater than two in this case it's",
    "start": "312820",
    "end": "314980"
  },
  {
    "text": "actually 423 so if we say expect",
    "start": "314980",
    "end": "318070"
  },
  {
    "text": "component severity to be greater than",
    "start": "318070",
    "end": "319750"
  },
  {
    "text": "two that should be a passing test so far",
    "start": "319750",
    "end": "322720"
  },
  {
    "text": "we've only tested properties on the",
    "start": "322720",
    "end": "324550"
  },
  {
    "text": "component itself but now let's see if it",
    "start": "324550",
    "end": "326320"
  },
  {
    "text": "actually rendered properly in the Dom so",
    "start": "326320",
    "end": "328600"
  },
  {
    "text": "we'll say it should have an h1 tag of",
    "start": "328600",
    "end": "330460"
  },
  {
    "text": "alert button to do that we use the debug",
    "start": "330460",
    "end": "333850"
  },
  {
    "text": "element and it has a DSL that allows us",
    "start": "333850",
    "end": "336250"
  },
  {
    "text": "to query elements in the Dom so we would",
    "start": "336250",
    "end": "339220"
  },
  {
    "text": "say query by the CSS of h1 then we can",
    "start": "339220",
    "end": "343240"
  },
  {
    "text": "get the native HTML element at that",
    "start": "343240",
    "end": "345850"
  },
  {
    "text": "point we just have the string that's",
    "start": "345850",
    "end": "347290"
  },
  {
    "text": "inside the h1 tag and then we can",
    "start": "347290",
    "end": "349240"
  },
  {
    "text": "validate that it is the alert button",
    "start": "349240",
    "end": "351640"
  },
  {
    "text": "text so now let's move on to a spec that",
    "start": "351640",
    "end": "354520"
  },
  {
    "text": "will tell us whether or not a function",
    "start": "354520",
    "end": "356230"
  },
  {
    "text": "is doing what it's supposed to do we",
    "start": "356230",
    "end": "358360"
  },
  {
    "text": "wrote a toggle method earlier that",
    "start": "358360",
    "end": "359980"
  },
  {
    "text": "toggle is a boolean variable so we'll",
    "start": "359980",
    "end": "362110"
  },
  {
    "text": "say it should toggle the message boolean",
    "start": "362110",
    "end": "363760"
  },
  {
    "text": "and first we'll expect the component",
    "start": "363760",
    "end": "366340"
  },
  {
    "text": "hide content to be truthy because it's",
    "start": "366340",
    "end": "368500"
  },
  {
    "text": "hidden by default then we can execute",
    "start": "368500",
    "end": "371020"
  },
  {
    "text": "that toggle button method then we'll run",
    "start": "371020",
    "end": "373030"
  },
  {
    "text": "another expectation that this time the",
    "start": "373030",
    "end": "375010"
  },
  {
    "text": "component hide content boolean is fall",
    "start": "375010",
    "end": "377260"
  },
  {
    "text": "see that one passes as well so we know",
    "start": "377260",
    "end": "379900"
  },
  {
    "text": "that our method is performing what it's",
    "start": "379900",
    "end": "381970"
  },
  {
    "text": "supposed to perform but what if that",
    "start": "381970",
    "end": "383710"
  },
  {
    "text": "change happens asynchronously as many",
    "start": "383710",
    "end": "385810"
  },
  {
    "text": "things do in angular back in the",
    "start": "385810",
    "end": "387640"
  },
  {
    "text": "component I'm going to define a method",
    "start": "387640",
    "end": "389590"
  },
  {
    "text": "called toggle async which will run the",
    "start": "389590",
    "end": "391690"
  },
  {
    "text": "toggle method after an rxjs timer of 500",
    "start": "391690",
    "end": "395050"
  },
  {
    "text": "milliseconds runs out the spec is going",
    "start": "395050",
    "end": "398080"
  },
  {
    "text": "to be it should toggle the message",
    "start": "398080",
    "end": "399580"
  },
  {
    "text": "boolean asynchrony",
    "start": "399580",
    "end": "400719"
  },
  {
    "text": "then we're going to wrap this in the",
    "start": "400719",
    "end": "403009"
  },
  {
    "text": "fake async helper from angular this",
    "start": "403009",
    "end": "405439"
  },
  {
    "text": "creates a fake angular zone that we can",
    "start": "405439",
    "end": "407300"
  },
  {
    "text": "use to test asynchronous activity the",
    "start": "407300",
    "end": "410060"
  },
  {
    "text": "test is exactly the same as the last one",
    "start": "410060",
    "end": "411860"
  },
  {
    "text": "but calls the toggle async method as you",
    "start": "411860",
    "end": "414409"
  },
  {
    "text": "can see here it fails because angular",
    "start": "414409",
    "end": "416210"
  },
  {
    "text": "doesn't wait for the 500 milliseconds to",
    "start": "416210",
    "end": "418039"
  },
  {
    "text": "run out before testing that property we",
    "start": "418039",
    "end": "420860"
  },
  {
    "text": "also have a tick utility that we can use",
    "start": "420860",
    "end": "422779"
  },
  {
    "text": "here in the fake async block and so if",
    "start": "422779",
    "end": "425330"
  },
  {
    "text": "we set that to 499 milliseconds you can",
    "start": "425330",
    "end": "428479"
  },
  {
    "text": "see here that we still get a failing",
    "start": "428479",
    "end": "430129"
  },
  {
    "text": "test the time when we set is 500",
    "start": "430129",
    "end": "432620"
  },
  {
    "text": "milliseconds so if we add just one more",
    "start": "432620",
    "end": "434360"
  },
  {
    "text": "millisecond to it then the test will",
    "start": "434360",
    "end": "436430"
  },
  {
    "text": "pass that gives you a few basic examples",
    "start": "436430",
    "end": "439819"
  },
  {
    "text": "of angular component testing but now",
    "start": "439819",
    "end": "441740"
  },
  {
    "text": "let's add a service to the mix using an",
    "start": "441740",
    "end": "443270"
  },
  {
    "text": "angular fire - what we're going to do is",
    "start": "443270",
    "end": "445879"
  },
  {
    "text": "create a service that returns an",
    "start": "445879",
    "end": "447409"
  },
  {
    "text": "observable from the firebase real time",
    "start": "447409",
    "end": "449270"
  },
  {
    "text": "database and that's going to replace the",
    "start": "449270",
    "end": "451400"
  },
  {
    "text": "content that we had hard-coded in the",
    "start": "451400",
    "end": "453349"
  },
  {
    "text": "component before if you're not familiar",
    "start": "453349",
    "end": "455870"
  },
  {
    "text": "with angular fire - make sure to follow",
    "start": "455870",
    "end": "457879"
  },
  {
    "text": "the setup instructions on the main",
    "start": "457879",
    "end": "459439"
  },
  {
    "text": "documentation you also need to have a",
    "start": "459439",
    "end": "461360"
  },
  {
    "text": "firebase account and inside the real",
    "start": "461360",
    "end": "463129"
  },
  {
    "text": "time database I have an alerts node with",
    "start": "463129",
    "end": "465199"
  },
  {
    "text": "a test alert that says you have been",
    "start": "465199",
    "end": "467120"
  },
  {
    "text": "warned then I'm going to generate a",
    "start": "467120",
    "end": "469490"
  },
  {
    "text": "service with the CLI and you can test",
    "start": "469490",
    "end": "471680"
  },
  {
    "text": "your service directly but for this video",
    "start": "471680",
    "end": "473389"
  },
  {
    "text": "we're just gonna focus on the component",
    "start": "473389",
    "end": "475120"
  },
  {
    "text": "the service itself is very simple we",
    "start": "475120",
    "end": "477889"
  },
  {
    "text": "just add angular fire database to the",
    "start": "477889",
    "end": "479870"
  },
  {
    "text": "constructor and then we'll set up one",
    "start": "479870",
    "end": "481759"
  },
  {
    "text": "method in here called get content which",
    "start": "481759",
    "end": "483889"
  },
  {
    "text": "will retrieve that message from the",
    "start": "483889",
    "end": "485449"
  },
  {
    "text": "database as an observable when running",
    "start": "485449",
    "end": "487909"
  },
  {
    "text": "your tests you don't want to actually",
    "start": "487909",
    "end": "489169"
  },
  {
    "text": "use live data from the real back-end you",
    "start": "489169",
    "end": "492110"
  },
  {
    "text": "should only simulate how that backend",
    "start": "492110",
    "end": "493759"
  },
  {
    "text": "data would be returned by using what's",
    "start": "493759",
    "end": "495229"
  },
  {
    "text": "called a stub a stub is simply a method",
    "start": "495229",
    "end": "497689"
  },
  {
    "text": "that returns some data in a way that's",
    "start": "497689",
    "end": "499610"
  },
  {
    "text": "predictable and reproducible so what I'm",
    "start": "499610",
    "end": "502969"
  },
  {
    "text": "doing here is setting up a variable",
    "start": "502969",
    "end": "504259"
  },
  {
    "text": "called service stub it's going to be an",
    "start": "504259",
    "end": "506779"
  },
  {
    "text": "object that has a function in it that",
    "start": "506779",
    "end": "508759"
  },
  {
    "text": "returns the observable in the same form",
    "start": "508759",
    "end": "510620"
  },
  {
    "text": "that we had expect back from firebase so",
    "start": "510620",
    "end": "513289"
  },
  {
    "text": "the get content property is a function",
    "start": "513289",
    "end": "514969"
  },
  {
    "text": "that returns an observable of the",
    "start": "514969",
    "end": "517190"
  },
  {
    "text": "message you have been warned this gives",
    "start": "517190",
    "end": "519768"
  },
  {
    "text": "us mock data that we can use to interact",
    "start": "519769",
    "end": "521899"
  },
  {
    "text": "with the service without actually having",
    "start": "521899",
    "end": "523339"
  },
  {
    "text": "to make a real request to firebase then",
    "start": "523339",
    "end": "526640"
  },
  {
    "text": "we can use this stub as a service by",
    "start": "526640",
    "end": "528620"
  },
  {
    "text": "adding it to our test bed in the",
    "start": "528620",
    "end": "530329"
  },
  {
    "text": "providers array but instead of providing",
    "start": "530329",
    "end": "532550"
  },
  {
    "text": "a live service we do an",
    "start": "532550",
    "end": "534500"
  },
  {
    "text": "object that has provide with the message",
    "start": "534500",
    "end": "536390"
  },
  {
    "text": "service and then use value with our",
    "start": "536390",
    "end": "538550"
  },
  {
    "text": "service stub this tells the test",
    "start": "538550",
    "end": "541190"
  },
  {
    "text": "environment to use the stub instead of",
    "start": "541190",
    "end": "543050"
  },
  {
    "text": "the actual live data at this point all",
    "start": "543050",
    "end": "545870"
  },
  {
    "text": "we have to do is write our spec and it",
    "start": "545870",
    "end": "547430"
  },
  {
    "text": "should return this observable like we",
    "start": "547430",
    "end": "548900"
  },
  {
    "text": "would expect this time we'll say it",
    "start": "548900",
    "end": "551480"
  },
  {
    "text": "should have message content defined from",
    "start": "551480",
    "end": "553310"
  },
  {
    "text": "an observable and then what we'll do is",
    "start": "553310",
    "end": "555560"
  },
  {
    "text": "subscribe to that observable and put our",
    "start": "555560",
    "end": "557810"
  },
  {
    "text": "expectations inside the SUBSCRIBE blog",
    "start": "557810",
    "end": "560410"
  },
  {
    "text": "we expect the content to be defined and",
    "start": "560410",
    "end": "563450"
  },
  {
    "text": "to be you have been warned this is the",
    "start": "563450",
    "end": "567080"
  },
  {
    "text": "easiest way to test mock data from a",
    "start": "567080",
    "end": "568760"
  },
  {
    "text": "service but it is limited in certain",
    "start": "568760",
    "end": "570500"
  },
  {
    "text": "respects for example we can't tell how",
    "start": "570500",
    "end": "572480"
  },
  {
    "text": "many times this method has been called",
    "start": "572480",
    "end": "573830"
  },
  {
    "text": "which might be important if you have a",
    "start": "573830",
    "end": "575990"
  },
  {
    "text": "method that is not item potent to",
    "start": "575990",
    "end": "578600"
  },
  {
    "text": "address this I'm going to stub our",
    "start": "578600",
    "end": "580310"
  },
  {
    "text": "service using a different method called",
    "start": "580310",
    "end": "582200"
  },
  {
    "text": "a spy this time we're going to actually",
    "start": "582200",
    "end": "584450"
  },
  {
    "text": "use the live service so we're going to",
    "start": "584450",
    "end": "586130"
  },
  {
    "text": "need to set up our test bed with",
    "start": "586130",
    "end": "587390"
  },
  {
    "text": "angularfire too",
    "start": "587390",
    "end": "588550"
  },
  {
    "text": "then I'll set another variable for our",
    "start": "588550",
    "end": "590660"
  },
  {
    "text": "service and another one for the spy from",
    "start": "590660",
    "end": "593810"
  },
  {
    "text": "there I'm going to add angularfire to to",
    "start": "593810",
    "end": "596270"
  },
  {
    "text": "the import section of the test bed and",
    "start": "596270",
    "end": "598130"
  },
  {
    "text": "then in the provider section I'll take",
    "start": "598130",
    "end": "600140"
  },
  {
    "text": "out the stub and add the live service to",
    "start": "600140",
    "end": "602360"
  },
  {
    "text": "it then we can get rid of our previous",
    "start": "602360",
    "end": "604400"
  },
  {
    "text": "service stub and then we'll set up the",
    "start": "604400",
    "end": "606380"
  },
  {
    "text": "spy here which comes from Jasmin we can",
    "start": "606380",
    "end": "609260"
  },
  {
    "text": "call spy on and then pass it the main",
    "start": "609260",
    "end": "611600"
  },
  {
    "text": "service class as well as the method that",
    "start": "611600",
    "end": "613520"
  },
  {
    "text": "we want to monitor so in this case it's",
    "start": "613520",
    "end": "615440"
  },
  {
    "text": "going to be our get content method we",
    "start": "615440",
    "end": "618230"
  },
  {
    "text": "still don't want to use any live data",
    "start": "618230",
    "end": "620120"
  },
  {
    "text": "from firebase so what we do is tell our",
    "start": "620120",
    "end": "622250"
  },
  {
    "text": "spy to return a value of an observable",
    "start": "622250",
    "end": "624740"
  },
  {
    "text": "of the message what this is going to do",
    "start": "624740",
    "end": "627260"
  },
  {
    "text": "is allow us to see whenever this method",
    "start": "627260",
    "end": "629390"
  },
  {
    "text": "has been called and with what arguments",
    "start": "629390",
    "end": "631310"
  },
  {
    "text": "it was called with and it's never going",
    "start": "631310",
    "end": "633140"
  },
  {
    "text": "to actually make a live request",
    "start": "633140",
    "end": "634550"
  },
  {
    "text": "so it just stubs the return value and to",
    "start": "634550",
    "end": "637640"
  },
  {
    "text": "get the service class we call debug",
    "start": "637640",
    "end": "639350"
  },
  {
    "text": "element injector get with the message",
    "start": "639350",
    "end": "642170"
  },
  {
    "text": "service",
    "start": "642170",
    "end": "642650"
  },
  {
    "text": "so our spy is ready to go now we can",
    "start": "642650",
    "end": "645110"
  },
  {
    "text": "just jump down and write our next spec",
    "start": "645110",
    "end": "647330"
  },
  {
    "text": "this time I want to make sure that the",
    "start": "647330",
    "end": "649520"
  },
  {
    "text": "method is only called once and I want to",
    "start": "649520",
    "end": "651530"
  },
  {
    "text": "make sure that the view is updated with",
    "start": "651530",
    "end": "653240"
  },
  {
    "text": "the corresponding observable data so we",
    "start": "653240",
    "end": "656330"
  },
  {
    "text": "can make sure our service method was",
    "start": "656330",
    "end": "657589"
  },
  {
    "text": "called by calling expect spy to have",
    "start": "657589",
    "end": "660080"
  },
  {
    "text": "been called then we can see how many",
    "start": "660080",
    "end": "662180"
  },
  {
    "text": "times it was called by calling spies",
    "start": "662180",
    "end": "663830"
  },
  {
    "text": "calls all which is an array and then we",
    "start": "663830",
    "end": "666320"
  },
  {
    "text": "can test the length of that array",
    "start": "666320",
    "end": "668079"
  },
  {
    "text": "and it should be one so we'll say two",
    "start": "668079",
    "end": "670720"
  },
  {
    "text": "equal one then we're also unwrapping and",
    "start": "670720",
    "end": "673959"
  },
  {
    "text": "observable in the HTML so I want to make",
    "start": "673959",
    "end": "676209"
  },
  {
    "text": "sure that this method results in an",
    "start": "676209",
    "end": "677829"
  },
  {
    "text": "observable that gets rendered in the",
    "start": "677829",
    "end": "679749"
  },
  {
    "text": "HTML itself so we'll use query on the",
    "start": "679749",
    "end": "682420"
  },
  {
    "text": "debug element to get the message body",
    "start": "682420",
    "end": "684600"
  },
  {
    "text": "then we can look at the native element",
    "start": "684600",
    "end": "687129"
  },
  {
    "text": "inner text and that should be the",
    "start": "687129",
    "end": "688899"
  },
  {
    "text": "message you have been warned so we can",
    "start": "688899",
    "end": "690730"
  },
  {
    "text": "just call to contain warn to verify that",
    "start": "690730",
    "end": "692649"
  },
  {
    "text": "then we can go ahead and save it and",
    "start": "692649",
    "end": "694779"
  },
  {
    "text": "it's going to run our spec and it passes",
    "start": "694779",
    "end": "697239"
  },
  {
    "text": "as expected the spike can do a whole",
    "start": "697239",
    "end": "699129"
  },
  {
    "text": "bunch of other stuff too like see where",
    "start": "699129",
    "end": "700569"
  },
  {
    "text": "the method was called and with which",
    "start": "700569",
    "end": "702100"
  },
  {
    "text": "arguments so check out the Jasmine docs",
    "start": "702100",
    "end": "704379"
  },
  {
    "text": "for more information on that that's it",
    "start": "704379",
    "end": "706689"
  },
  {
    "text": "for angular component testing basics if",
    "start": "706689",
    "end": "708850"
  },
  {
    "text": "this video helped you please like and",
    "start": "708850",
    "end": "710290"
  },
  {
    "text": "subscribe and if you want to learn more",
    "start": "710290",
    "end": "711850"
  },
  {
    "text": "advanced concepts consider becoming a",
    "start": "711850",
    "end": "713499"
  },
  {
    "text": "pro subscriber at angular firebase comm",
    "start": "713499",
    "end": "715749"
  },
  {
    "text": "you'll get a whole bunch of exclusive",
    "start": "715749",
    "end": "717339"
  },
  {
    "text": "content one on one project support via",
    "start": "717339",
    "end": "719290"
  },
  {
    "text": "slack and a free copy of my book thanks",
    "start": "719290",
    "end": "721899"
  },
  {
    "text": "for watching and I'll see you soon",
    "start": "721899",
    "end": "725230"
  },
  {
    "text": "[Music]",
    "start": "725230",
    "end": "729940"
  },
  {
    "text": "[Applause]",
    "start": "729940",
    "end": "730860"
  },
  {
    "text": "[Music]",
    "start": "730860",
    "end": "735339"
  }
]