[
  {
    "text": "in this episode we're going to build",
    "start": "680",
    "end": "2280"
  },
  {
    "text": "toast style notification messages from",
    "start": "2280",
    "end": "4720"
  },
  {
    "text": "scratch the messages will be saved on",
    "start": "4720",
    "end": "6960"
  },
  {
    "text": "the back end in Firebase as well so we",
    "start": "6960",
    "end": "9120"
  },
  {
    "text": "can maintain a full history of the",
    "start": "9120",
    "end": "10719"
  },
  {
    "text": "messages that have been sent the",
    "start": "10719",
    "end": "12519"
  },
  {
    "text": "messages are managed by a central",
    "start": "12519",
    "end": "14440"
  },
  {
    "text": "service that can be injected into any",
    "start": "14440",
    "end": "16400"
  },
  {
    "text": "component this makes it possible to",
    "start": "16400",
    "end": "18960"
  },
  {
    "text": "trigger messages from anywhere in the",
    "start": "18960",
    "end": "20680"
  },
  {
    "text": "app on the front end we're using the",
    "start": "20680",
    "end": "23160"
  },
  {
    "text": "Bulma CSS framework but you could easily",
    "start": "23160",
    "end": "25840"
  },
  {
    "text": "Swap this out for bootstrap or material",
    "start": "25840",
    "end": "28119"
  },
  {
    "text": "or your own custom classes",
    "start": "28119",
    "end": "31560"
  },
  {
    "text": "let's start by building the toast",
    "start": "31560",
    "end": "32879"
  },
  {
    "text": "service we'll first start by importing",
    "start": "32879",
    "end": "36000"
  },
  {
    "text": "the angular fire database then we'll",
    "start": "36000",
    "end": "38559"
  },
  {
    "text": "create a custom message class just to",
    "start": "38559",
    "end": "40879"
  },
  {
    "text": "model our data a message can have a",
    "start": "40879",
    "end": "43160"
  },
  {
    "text": "Content as a string a style and it can",
    "start": "43160",
    "end": "46160"
  },
  {
    "text": "also be dismissed which is a Boolean",
    "start": "46160",
    "end": "48079"
  },
  {
    "text": "value in the Constructor we send it the",
    "start": "48079",
    "end": "50680"
  },
  {
    "text": "content and an optional style argument",
    "start": "50680",
    "end": "53719"
  },
  {
    "text": "if the style is undefined it'll just",
    "start": "53719",
    "end": "55280"
  },
  {
    "text": "default to",
    "start": "55280",
    "end": "57079"
  },
  {
    "text": "info in the service we create a function",
    "start": "57079",
    "end": "59600"
  },
  {
    "text": "to return the Firebase list observable",
    "start": "59600",
    "end": "62239"
  },
  {
    "text": "with the messages in the database we",
    "start": "62239",
    "end": "64600"
  },
  {
    "text": "want to limit this query to the last",
    "start": "64600",
    "end": "66320"
  },
  {
    "text": "five",
    "start": "66320",
    "end": "67840"
  },
  {
    "text": "messages from there we create a function",
    "start": "67840",
    "end": "70280"
  },
  {
    "text": "to create a new message this function",
    "start": "70280",
    "end": "72600"
  },
  {
    "text": "can be called anywhere from any",
    "start": "72600",
    "end": "74000"
  },
  {
    "text": "component and it'll update the Firebase",
    "start": "74000",
    "end": "76600"
  },
  {
    "text": "list",
    "start": "76600",
    "end": "77720"
  },
  {
    "text": "observable it simply takes the content",
    "start": "77720",
    "end": "80200"
  },
  {
    "text": "and style as arguments and builds a new",
    "start": "80200",
    "end": "82439"
  },
  {
    "text": "message and sends that to the",
    "start": "82439",
    "end": "84799"
  },
  {
    "text": "database and the last step is to give",
    "start": "84799",
    "end": "87119"
  },
  {
    "text": "the user the ability to dismiss messages",
    "start": "87119",
    "end": "89960"
  },
  {
    "text": "so we just retrieve a message as an",
    "start": "89960",
    "end": "91600"
  },
  {
    "text": "object and then update its dismissed",
    "start": "91600",
    "end": "94360"
  },
  {
    "text": "attribute to",
    "start": "94360",
    "end": "97159"
  },
  {
    "text": "True before we start building the",
    "start": "97159",
    "end": "99159"
  },
  {
    "text": "component I'm going to build a custom",
    "start": "99159",
    "end": "101079"
  },
  {
    "text": "pipe that will filter out the dismissed",
    "start": "101079",
    "end": "103200"
  },
  {
    "text": "messages and then send them in reversed",
    "start": "103200",
    "end": "105399"
  },
  {
    "text": "order so they display one on top of the",
    "start": "105399",
    "end": "108280"
  },
  {
    "text": "other first I import the filter and",
    "start": "108280",
    "end": "111280"
  },
  {
    "text": "reverse functions from low Dash and the",
    "start": "111280",
    "end": "114200"
  },
  {
    "text": "value going into this pipe will be an",
    "start": "114200",
    "end": "115680"
  },
  {
    "text": "array of messages so we can call reverse",
    "start": "115680",
    "end": "119119"
  },
  {
    "text": "and then we can fill filter out the",
    "start": "119119",
    "end": "120560"
  },
  {
    "text": "dismiss messages and if there's no value",
    "start": "120560",
    "end": "122920"
  },
  {
    "text": "we just return",
    "start": "122920",
    "end": "124920"
  },
  {
    "text": "null now we can put the pipe to use in",
    "start": "124920",
    "end": "127719"
  },
  {
    "text": "the component",
    "start": "127719",
    "end": "129319"
  },
  {
    "text": "template the messages will be in the",
    "start": "129319",
    "end": "131360"
  },
  {
    "text": "form of a fire based list observable",
    "start": "131360",
    "end": "133680"
  },
  {
    "text": "which we can unwrap with the async pipe",
    "start": "133680",
    "end": "136280"
  },
  {
    "text": "we can then chain our custom reverse",
    "start": "136280",
    "end": "138040"
  },
  {
    "text": "pipe to that to sending them in reversed",
    "start": "138040",
    "end": "140400"
  },
  {
    "text": "order and filtered by the dismissed",
    "start": "140400",
    "end": "143480"
  },
  {
    "text": "attribute from there we can use NG class",
    "start": "143480",
    "end": "146560"
  },
  {
    "text": "to display a conditional class based on",
    "start": "146560",
    "end": "148920"
  },
  {
    "text": "the style of the message we pass NG",
    "start": "148920",
    "end": "151640"
  },
  {
    "text": "class in object where the key is the",
    "start": "151640",
    "end": "153720"
  },
  {
    "text": "Bulma CSS class and the value is true or",
    "start": "153720",
    "end": "157080"
  },
  {
    "text": "false based on how the statement",
    "start": "157080",
    "end": "158879"
  },
  {
    "text": "evaluates the final step is to allow the",
    "start": "158879",
    "end": "161760"
  },
  {
    "text": "user to dismiss the message by clicking",
    "start": "161760",
    "end": "163959"
  },
  {
    "text": "a button and we also display the message",
    "start": "163959",
    "end": "168000"
  },
  {
    "text": "content going into the typescript we",
    "start": "168000",
    "end": "170920"
  },
  {
    "text": "first inject the toast service into the",
    "start": "170920",
    "end": "173760"
  },
  {
    "text": "component and then we get a list of",
    "start": "173760",
    "end": "176640"
  },
  {
    "text": "messages as the Firebase list observable",
    "start": "176640",
    "end": "180200"
  },
  {
    "text": "then we set up an event handler to",
    "start": "180200",
    "end": "181840"
  },
  {
    "text": "handle the click of the button to",
    "start": "181840",
    "end": "183480"
  },
  {
    "text": "dismiss the",
    "start": "183480",
    "end": "185040"
  },
  {
    "text": "message in this example I want toast",
    "start": "185040",
    "end": "187480"
  },
  {
    "text": "messages to be Global throughout the",
    "start": "187480",
    "end": "189200"
  },
  {
    "text": "application so I put them in the app",
    "start": "189200",
    "end": "191480"
  },
  {
    "text": "component outside the scope of the",
    "start": "191480",
    "end": "193280"
  },
  {
    "text": "router so they'll still display even if",
    "start": "193280",
    "end": "195599"
  },
  {
    "text": "the user navigates to different",
    "start": "195599",
    "end": "198440"
  },
  {
    "text": "pages now we can inject this service",
    "start": "198440",
    "end": "200799"
  },
  {
    "text": "into any component we want and in this",
    "start": "200799",
    "end": "203200"
  },
  {
    "text": "case we'll just send a few arbitrary",
    "start": "203200",
    "end": "204799"
  },
  {
    "text": "messages from the readme page component",
    "start": "204799",
    "end": "208120"
  },
  {
    "text": "if we go back to the app we can see the",
    "start": "208120",
    "end": "209760"
  },
  {
    "text": "database is being updated after each",
    "start": "209760",
    "end": "211680"
  },
  {
    "text": "button",
    "start": "211680",
    "end": "212799"
  },
  {
    "text": "click you may or may not want to save",
    "start": "212799",
    "end": "215080"
  },
  {
    "text": "these messages in the database but when",
    "start": "215080",
    "end": "217200"
  },
  {
    "text": "you do it opens up some possibilities to",
    "start": "217200",
    "end": "219120"
  },
  {
    "text": "do things with Cloud functions where you",
    "start": "219120",
    "end": "220879"
  },
  {
    "text": "could update something in the database",
    "start": "220879",
    "end": "222640"
  },
  {
    "text": "and then push a message right into the",
    "start": "222640",
    "end": "224760"
  },
  {
    "text": "user's",
    "start": "224760",
    "end": "225420"
  },
  {
    "text": "[Music]",
    "start": "225420",
    "end": "236720"
  },
  {
    "text": "feed that's it for this episode if you",
    "start": "236720",
    "end": "239360"
  },
  {
    "text": "found the helpful please like And",
    "start": "239360",
    "end": "241000"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "241000",
    "end": "242959"
  },
  {
    "text": "channel consider becoming a pro",
    "start": "242959",
    "end": "244560"
  },
  {
    "text": "subscriber at angular firebase.com for",
    "start": "244560",
    "end": "247920"
  },
  {
    "text": "just a few bucks a month you'll get",
    "start": "247920",
    "end": "249079"
  },
  {
    "text": "access to exclusive content as well as",
    "start": "249079",
    "end": "251439"
  },
  {
    "text": "free one-on-one project Consulting",
    "start": "251439",
    "end": "254120"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "254120",
    "end": "255840"
  },
  {
    "text": "next time",
    "start": "255840",
    "end": "258370"
  },
  {
    "text": "[Music]",
    "start": "258370",
    "end": "263880"
  }
]