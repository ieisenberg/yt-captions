[
  {
    "text": "in this episode we're going to replicate",
    "start": "30",
    "end": "2300"
  },
  {
    "text": "Facebook reactions using angular for and",
    "start": "2300",
    "end": "5670"
  },
  {
    "text": "firebase first let's head over to",
    "start": "5670",
    "end": "8460"
  },
  {
    "text": "Facebook just to see how it works you",
    "start": "8460",
    "end": "10889"
  },
  {
    "text": "can hover over like button which brings",
    "start": "10889",
    "end": "13110"
  },
  {
    "text": "up a tooltip with all the different",
    "start": "13110",
    "end": "14759"
  },
  {
    "text": "reactions when you click reaction it",
    "start": "14759",
    "end": "17310"
  },
  {
    "text": "updates your own as well as the list of",
    "start": "17310",
    "end": "20100"
  },
  {
    "text": "other users reactions below that first",
    "start": "20100",
    "end": "24000"
  },
  {
    "text": "thing we're going to do is import the",
    "start": "24000",
    "end": "25650"
  },
  {
    "text": "graphics into our project I found some",
    "start": "25650",
    "end": "28230"
  },
  {
    "text": "free Facebook icons on icon finder calm",
    "start": "28230",
    "end": "30840"
  },
  {
    "text": "and then save them under the assets",
    "start": "30840",
    "end": "33120"
  },
  {
    "text": "folder in the angular project now we can",
    "start": "33120",
    "end": "36000"
  },
  {
    "text": "generate the reaction service and import",
    "start": "36000",
    "end": "39030"
  },
  {
    "text": "the angularfire",
    "start": "39030",
    "end": "40079"
  },
  {
    "text": "auth module as well as the database",
    "start": "40079",
    "end": "41969"
  },
  {
    "text": "module we're also going to make heavy",
    "start": "41969",
    "end": "44280"
  },
  {
    "text": "use of lodash to handle the sorting and",
    "start": "44280",
    "end": "46350"
  },
  {
    "text": "counting of reactions we'll keep track",
    "start": "46350",
    "end": "49260"
  },
  {
    "text": "of the user ID on the service and then",
    "start": "49260",
    "end": "51629"
  },
  {
    "text": "we create an array of the actual emoji",
    "start": "51629",
    "end": "54449"
  },
  {
    "text": "graphics we want each emoji to be tied",
    "start": "54449",
    "end": "57210"
  },
  {
    "text": "to a specific index and we'll save that",
    "start": "57210",
    "end": "59370"
  },
  {
    "text": "index in the database in this case light",
    "start": "59370",
    "end": "62280"
  },
  {
    "text": "will be 0 loved one Wow 2 etc so our",
    "start": "62280",
    "end": "66900"
  },
  {
    "text": "database is a collection of item IDs",
    "start": "66900",
    "end": "68820"
  },
  {
    "text": "things that can be reacted to and each",
    "start": "68820",
    "end": "71640"
  },
  {
    "text": "document is the keys of the users and",
    "start": "71640",
    "end": "74729"
  },
  {
    "text": "the number that corresponds to their",
    "start": "74729",
    "end": "76770"
  },
  {
    "text": "reaction the first thing we'll do is get",
    "start": "76770",
    "end": "79920"
  },
  {
    "text": "the associated reaction score and item",
    "start": "79920",
    "end": "82470"
  },
  {
    "text": "as a firebase object observable next we",
    "start": "82470",
    "end": "87509"
  },
  {
    "text": "create a function that allows the user",
    "start": "87509",
    "end": "89250"
  },
  {
    "text": "to update their reaction which has a",
    "start": "89250",
    "end": "91110"
  },
  {
    "text": "default value of 0 for life we format",
    "start": "91110",
    "end": "94740"
  },
  {
    "text": "the data by passing the user ID is the",
    "start": "94740",
    "end": "96780"
  },
  {
    "text": "key and the reaction is the value and",
    "start": "96780",
    "end": "99180"
  },
  {
    "text": "then we just update that object in",
    "start": "99180",
    "end": "101250"
  },
  {
    "text": "firebase following the same idea we",
    "start": "101250",
    "end": "104759"
  },
  {
    "text": "create another function that allows the",
    "start": "104759",
    "end": "106530"
  },
  {
    "text": "user to remove their reaction from the",
    "start": "106530",
    "end": "108450"
  },
  {
    "text": "database now we create a utility",
    "start": "108450",
    "end": "112259"
  },
  {
    "text": "function to counsel reactions to come",
    "start": "112259",
    "end": "114210"
  },
  {
    "text": "back from firebase it returns a",
    "start": "114210",
    "end": "116100"
  },
  {
    "text": "JavaScript object where the key is the",
    "start": "116100",
    "end": "118140"
  },
  {
    "text": "value of the reaction and the value is",
    "start": "118140",
    "end": "120479"
  },
  {
    "text": "the number of reactions for that type",
    "start": "120479",
    "end": "122939"
  },
  {
    "text": "we'll use it to display the total count",
    "start": "122939",
    "end": "125490"
  },
  {
    "text": "for each reaction type in the component",
    "start": "125490",
    "end": "127409"
  },
  {
    "text": "template the final step is to determine",
    "start": "127409",
    "end": "129899"
  },
  {
    "text": "the current users reaction so we just",
    "start": "129899",
    "end": "132360"
  },
  {
    "text": "check the object for that specific user",
    "start": "132360",
    "end": "134519"
  },
  {
    "text": "ID now we can start building the",
    "start": "134519",
    "end": "137910"
  },
  {
    "text": "front-end component first we're going to",
    "start": "137910",
    "end": "141090"
  },
  {
    "text": "need the input decorator as well as",
    "start": "141090",
    "end": "143640"
  },
  {
    "text": "ondestroy and we'll also inject the",
    "start": "143640",
    "end": "147060"
  },
  {
    "text": "reaction service and we'll use lo - in",
    "start": "147060",
    "end": "149459"
  },
  {
    "text": "here as well the component will accept",
    "start": "149459",
    "end": "151830"
  },
  {
    "text": "an input variable which represents the",
    "start": "151830",
    "end": "153989"
  },
  {
    "text": "parents ID that can be any kind of",
    "start": "153989",
    "end": "156120"
  },
  {
    "text": "content that can be reacted to then",
    "start": "156120",
    "end": "159239"
  },
  {
    "text": "we'll declare a few other variables that",
    "start": "159239",
    "end": "161160"
  },
  {
    "text": "represent the data we're going to be",
    "start": "161160",
    "end": "162690"
  },
  {
    "text": "showing in the template during ng on a",
    "start": "162690",
    "end": "166470"
  },
  {
    "text": "knit we first get big lists of emoji",
    "start": "166470",
    "end": "169049"
  },
  {
    "text": "then we subscribe to the object",
    "start": "169049",
    "end": "171720"
  },
  {
    "text": "observable when it emits a value it'll",
    "start": "171720",
    "end": "174329"
  },
  {
    "text": "be a JavaScript object of user IDs and",
    "start": "174329",
    "end": "176819"
  },
  {
    "text": "their reactions we can use this object",
    "start": "176819",
    "end": "178950"
  },
  {
    "text": "to count the total reactions for each",
    "start": "178950",
    "end": "181290"
  },
  {
    "text": "type as well as determine the current",
    "start": "181290",
    "end": "183209"
  },
  {
    "text": "users reaction from there we create an",
    "start": "183209",
    "end": "189780"
  },
  {
    "text": "event handler that will actually update",
    "start": "189780",
    "end": "192030"
  },
  {
    "text": "or remove a reaction if the user already",
    "start": "192030",
    "end": "194849"
  },
  {
    "text": "has a reaction with a matching value",
    "start": "194849",
    "end": "196980"
  },
  {
    "text": "then we'll go ahead and delete that",
    "start": "196980",
    "end": "198480"
  },
  {
    "text": "reaction if the value is different",
    "start": "198480",
    "end": "201239"
  },
  {
    "text": "it means the users updating or creating",
    "start": "201239",
    "end": "203280"
  },
  {
    "text": "a new reaction so we go ahead and update",
    "start": "203280",
    "end": "205290"
  },
  {
    "text": "that in the database next we create",
    "start": "205290",
    "end": "209669"
  },
  {
    "text": "another event handler that will require",
    "start": "209669",
    "end": "211919"
  },
  {
    "text": "when the user hovers over the like",
    "start": "211919",
    "end": "213540"
  },
  {
    "text": "button which will show the emojis and we",
    "start": "213540",
    "end": "217109"
  },
  {
    "text": "create a utility method to return the",
    "start": "217109",
    "end": "219150"
  },
  {
    "text": "emoji image path in the assets folder",
    "start": "219150",
    "end": "221660"
  },
  {
    "text": "and one more utility method to see if a",
    "start": "221660",
    "end": "225989"
  },
  {
    "text": "reaction type has reactions so we know",
    "start": "225989",
    "end": "228840"
  },
  {
    "text": "whether or not to display it in the",
    "start": "228840",
    "end": "230160"
  },
  {
    "text": "template then we unsubscribe when the",
    "start": "230160",
    "end": "233130"
  },
  {
    "text": "components destroyed to avoid memory",
    "start": "233130",
    "end": "234959"
  },
  {
    "text": "leaks now let's put this all together in",
    "start": "234959",
    "end": "237989"
  },
  {
    "text": "the component HTML first we create a",
    "start": "237989",
    "end": "241230"
  },
  {
    "text": "wrapper around everything and use the",
    "start": "241230",
    "end": "243060"
  },
  {
    "text": "mouse enter mouse we've events to toggle",
    "start": "243060",
    "end": "245430"
  },
  {
    "text": "the physical",
    "start": "245430",
    "end": "246310"
  },
  {
    "text": "of the emojis inside this div we loop",
    "start": "246310",
    "end": "248980"
  },
  {
    "text": "over the six emojis and use our emoji",
    "start": "248980",
    "end": "251800"
  },
  {
    "text": "pass helper to find the Associated",
    "start": "251800",
    "end": "253990"
  },
  {
    "text": "graphic in the assets folder notice how",
    "start": "253990",
    "end": "256570"
  },
  {
    "text": "we also get the index while looping",
    "start": "256570",
    "end": "258310"
  },
  {
    "text": "through this array because that will be",
    "start": "258310",
    "end": "259959"
  },
  {
    "text": "the value we save to the database",
    "start": "259959",
    "end": "261639"
  },
  {
    "text": "corresponding to this reaction type next",
    "start": "261639",
    "end": "265180"
  },
  {
    "text": "we'll add a like button that the user",
    "start": "265180",
    "end": "266740"
  },
  {
    "text": "can click that will add just a generic",
    "start": "266740",
    "end": "268450"
  },
  {
    "text": "light if the user has liked this piece",
    "start": "268450",
    "end": "271210"
  },
  {
    "text": "of content we'll go ahead and add a",
    "start": "271210",
    "end": "272770"
  },
  {
    "text": "conditional class that will color a blue",
    "start": "272770",
    "end": "274990"
  },
  {
    "text": "and make it bold and also we want to",
    "start": "274990",
    "end": "279040"
  },
  {
    "text": "display the type of reaction the users",
    "start": "279040",
    "end": "281230"
  },
  {
    "text": "have in both cases we check to see if",
    "start": "281230",
    "end": "284560"
  },
  {
    "text": "the user reaction is not null we can use",
    "start": "284560",
    "end": "287650"
  },
  {
    "text": "the value of the reaction to get the",
    "start": "287650",
    "end": "290140"
  },
  {
    "text": "corresponding emoji from the emoji list",
    "start": "290140",
    "end": "292990"
  },
  {
    "text": "and it's indexed now we need to display",
    "start": "292990",
    "end": "296380"
  },
  {
    "text": "the total reaction Cal we do this by",
    "start": "296380",
    "end": "299169"
  },
  {
    "text": "looping over the emoji list again and",
    "start": "299169",
    "end": "301110"
  },
  {
    "text": "we'll see if a reaction has taken place",
    "start": "301110",
    "end": "304150"
  },
  {
    "text": "and then we'll get the total count for",
    "start": "304150",
    "end": "306310"
  },
  {
    "text": "that reaction just like before we use",
    "start": "306310",
    "end": "309430"
  },
  {
    "text": "the Emoji path helper to display the",
    "start": "309430",
    "end": "311800"
  },
  {
    "text": "corresponding image then we can get the",
    "start": "311800",
    "end": "314200"
  },
  {
    "text": "count from our reaction count object by",
    "start": "314200",
    "end": "316390"
  },
  {
    "text": "just passing up that index let's try it",
    "start": "316390",
    "end": "320530"
  },
  {
    "text": "out in the app if we hover over the like",
    "start": "320530",
    "end": "322120"
  },
  {
    "text": "button it should bring up the emojis and",
    "start": "322120",
    "end": "323979"
  },
  {
    "text": "if we click it it should add a light",
    "start": "323979",
    "end": "326470"
  },
  {
    "text": "telling us what the light type is the",
    "start": "326470",
    "end": "330280"
  },
  {
    "text": "reaction counts are all kept up to date",
    "start": "330280",
    "end": "332020"
  },
  {
    "text": "in real time so if we have multiple",
    "start": "332020",
    "end": "334180"
  },
  {
    "text": "users reacting to the same piece of",
    "start": "334180",
    "end": "335740"
  },
  {
    "text": "content we'll see the reaction counts be",
    "start": "335740",
    "end": "338830"
  },
  {
    "text": "updated in real time when looking into",
    "start": "338830",
    "end": "341560"
  },
  {
    "text": "the database console we can see that",
    "start": "341560",
    "end": "343419"
  },
  {
    "text": "going to user clicks the reaction it",
    "start": "343419",
    "end": "345669"
  },
  {
    "text": "adds their user ID key and the value for",
    "start": "345669",
    "end": "348610"
  },
  {
    "text": "that reaction to the database",
    "start": "348610",
    "end": "352168"
  },
  {
    "text": "that's it for this episode if you found",
    "start": "355890",
    "end": "358630"
  },
  {
    "text": "the video helpful please like and",
    "start": "358630",
    "end": "360010"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "360010",
    "end": "361930"
  },
  {
    "text": "channel consider becoming a pro",
    "start": "361930",
    "end": "363520"
  },
  {
    "text": "subscriber at angular firebase comm for",
    "start": "363520",
    "end": "367000"
  },
  {
    "text": "just a few bucks a month you'll get",
    "start": "367000",
    "end": "368050"
  },
  {
    "text": "access to your exclusive content as well",
    "start": "368050",
    "end": "370240"
  },
  {
    "text": "as free one on one project consulting",
    "start": "370240",
    "end": "372420"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "372420",
    "end": "374860"
  },
  {
    "text": "next time",
    "start": "374860",
    "end": "377189"
  },
  {
    "text": "[Music]",
    "start": "377420",
    "end": "382920"
  }
]