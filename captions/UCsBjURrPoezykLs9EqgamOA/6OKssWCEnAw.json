[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "it might be a little late to get in on",
    "start": "0",
    "end": "1560"
  },
  {
    "text": "the Bitcoin bubble but it's not too late",
    "start": "1560",
    "end": "3659"
  },
  {
    "text": "to start building apps for people that",
    "start": "3659",
    "end": "5220"
  },
  {
    "text": "use crypto currencies in this episode",
    "start": "5220",
    "end": "7500"
  },
  {
    "text": "I'm going to show you how to use coin",
    "start": "7500",
    "end": "8610"
  },
  {
    "text": "base as a custom authentication provider",
    "start": "8610",
    "end": "10679"
  },
  {
    "text": "for firebase that means your users will",
    "start": "10679",
    "end": "13049"
  },
  {
    "text": "be able to log in to firebase via",
    "start": "13049",
    "end": "14610"
  },
  {
    "text": "coinbase and then you can use the coin",
    "start": "14610",
    "end": "16410"
  },
  {
    "text": "base API to handle Bitcoin transactions",
    "start": "16410",
    "end": "19020"
  },
  {
    "text": "if you're new here make sure to",
    "start": "19020",
    "end": "20490"
  },
  {
    "text": "subscribe and you can follow along with",
    "start": "20490",
    "end": "22140"
  },
  {
    "text": "the source code at angular firebase com",
    "start": "22140",
    "end": "24359"
  },
  {
    "start": "24000",
    "end": "58000"
  },
  {
    "text": "let's first take a look at how this is",
    "start": "24359",
    "end": "25859"
  },
  {
    "text": "going to work the user is going to click",
    "start": "25859",
    "end": "27420"
  },
  {
    "text": "the log in with coinbase button in our",
    "start": "27420",
    "end": "29189"
  },
  {
    "text": "angular app that redirects then the coin",
    "start": "29189",
    "end": "31349"
  },
  {
    "text": "base where they authenticate into their",
    "start": "31349",
    "end": "32910"
  },
  {
    "text": "account then coinbase redirects them",
    "start": "32910",
    "end": "34860"
  },
  {
    "text": "back to angular with an encrypted off",
    "start": "34860",
    "end": "36480"
  },
  {
    "text": "code the code then goes to a cloud",
    "start": "36480",
    "end": "38219"
  },
  {
    "text": "function which exchanges it for an",
    "start": "38219",
    "end": "39840"
  },
  {
    "text": "actual access token and refresh token",
    "start": "39840",
    "end": "42239"
  },
  {
    "text": "from coinbase we can then mint our own",
    "start": "42239",
    "end": "44610"
  },
  {
    "text": "custom firebase authentication token",
    "start": "44610",
    "end": "46649"
  },
  {
    "text": "then send it back to angular and log the",
    "start": "46649",
    "end": "48870"
  },
  {
    "text": "user in as a firebase user learning this",
    "start": "48870",
    "end": "51510"
  },
  {
    "text": "process will also allow you to",
    "start": "51510",
    "end": "52949"
  },
  {
    "text": "authenticate with other providers such",
    "start": "52949",
    "end": "54480"
  },
  {
    "text": "as Instagram Twitter pata Phi and many",
    "start": "54480",
    "end": "57059"
  },
  {
    "text": "others to get started you'll need a coin",
    "start": "57059",
    "end": "59850"
  },
  {
    "start": "58000",
    "end": "93000"
  },
  {
    "text": "base account and you'll want to create a",
    "start": "59850",
    "end": "61530"
  },
  {
    "text": "new o2 application make note of your API",
    "start": "61530",
    "end": "64680"
  },
  {
    "text": "keys and then make sure you set a",
    "start": "64680",
    "end": "66390"
  },
  {
    "text": "redirect URI that points to localhost",
    "start": "66390",
    "end": "68420"
  },
  {
    "text": "4200 slash redirect after that you can",
    "start": "68420",
    "end": "71640"
  },
  {
    "text": "create a brand new angular 5 app and",
    "start": "71640",
    "end": "73470"
  },
  {
    "text": "make sure it has the routing module from",
    "start": "73470",
    "end": "75990"
  },
  {
    "text": "there you'll need to install angularfire",
    "start": "75990",
    "end": "77460"
  },
  {
    "text": "2 and firebase so make sure to follow",
    "start": "77460",
    "end": "79680"
  },
  {
    "text": "the official instructions at the",
    "start": "79680",
    "end": "81090"
  },
  {
    "text": "angularfire repo now inside of our",
    "start": "81090",
    "end": "83850"
  },
  {
    "text": "angular project we're going to",
    "start": "83850",
    "end": "85290"
  },
  {
    "text": "initialize cloud functions we're also",
    "start": "85290",
    "end": "87119"
  },
  {
    "text": "going to use the new typescript option",
    "start": "87119",
    "end": "88950"
  },
  {
    "text": "so make sure your firebase CLI tools are",
    "start": "88950",
    "end": "91380"
  },
  {
    "text": "updated to the latest version I also",
    "start": "91380",
    "end": "94380"
  },
  {
    "start": "93000",
    "end": "167000"
  },
  {
    "text": "have a few dependencies in the cloud",
    "start": "94380",
    "end": "95700"
  },
  {
    "text": "function environment the main one is",
    "start": "95700",
    "end": "97500"
  },
  {
    "text": "Axios which replaces the node HTTP",
    "start": "97500",
    "end": "100350"
  },
  {
    "text": "module the reason we do that is because",
    "start": "100350",
    "end": "102210"
  },
  {
    "text": "promises are a lot easier to work with",
    "start": "102210",
    "end": "103920"
  },
  {
    "text": "and callbacks when dealing with",
    "start": "103920",
    "end": "105720"
  },
  {
    "text": "asynchronous activity and a cloud",
    "start": "105720",
    "end": "107579"
  },
  {
    "text": "function then I also have cores and",
    "start": "107579",
    "end": "110399"
  },
  {
    "text": "crypto which we'll see in use here in",
    "start": "110399",
    "end": "111930"
  },
  {
    "text": "just a second because we're going to be",
    "start": "111930",
    "end": "114420"
  },
  {
    "text": "minting custom off tokens we need to use",
    "start": "114420",
    "end": "116520"
  },
  {
    "text": "our actual service account from firebase",
    "start": "116520",
    "end": "118500"
  },
  {
    "text": "it's just a JSON file and I'll quickly",
    "start": "118500",
    "end": "120990"
  },
  {
    "text": "show you in firebase where you can find",
    "start": "120990",
    "end": "122549"
  },
  {
    "text": "it go to project settings then service",
    "start": "122549",
    "end": "125610"
  },
  {
    "text": "account and then download a new private",
    "start": "125610",
    "end": "127590"
  },
  {
    "text": "key for nodejs then you can go ahead and",
    "start": "127590",
    "end": "130349"
  },
  {
    "text": "save it inside the functions directory",
    "start": "130349",
    "end": "132500"
  },
  {
    "text": "this file",
    "start": "132500",
    "end": "133950"
  },
  {
    "text": "contain sensitive API keys so make sure",
    "start": "133950",
    "end": "136230"
  },
  {
    "text": "not to expose them in your front-end",
    "start": "136230",
    "end": "137819"
  },
  {
    "text": "code or any kind of public git",
    "start": "137819",
    "end": "139500"
  },
  {
    "text": "repository after that we'll go ahead and",
    "start": "139500",
    "end": "141959"
  },
  {
    "text": "import our dependencies and then",
    "start": "141959",
    "end": "143550"
  },
  {
    "text": "initialize cores with origin true I'm",
    "start": "143550",
    "end": "146400"
  },
  {
    "text": "only testing these functions locally so",
    "start": "146400",
    "end": "148530"
  },
  {
    "text": "for right now I'm setting the redirect",
    "start": "148530",
    "end": "150090"
  },
  {
    "text": "URI to localhost 4200 slash redirect I'm",
    "start": "150090",
    "end": "154080"
  },
  {
    "text": "also setting variables for the coinbase",
    "start": "154080",
    "end": "155940"
  },
  {
    "text": "api keys and make sure you follow these",
    "start": "155940",
    "end": "157980"
  },
  {
    "text": "variable names because they're going to",
    "start": "157980",
    "end": "159269"
  },
  {
    "text": "be reformatted as query parameters later",
    "start": "159269",
    "end": "161430"
  },
  {
    "text": "on because they're going to be reused",
    "start": "161430",
    "end": "163500"
  },
  {
    "text": "frequently I'm setting them as a default",
    "start": "163500",
    "end": "165599"
  },
  {
    "text": "params object here now we're ready to",
    "start": "165599",
    "end": "168870"
  },
  {
    "start": "167000",
    "end": "218000"
  },
  {
    "text": "write the first actual cloud function",
    "start": "168870",
    "end": "170280"
  },
  {
    "text": "which is called redirect the only thing",
    "start": "170280",
    "end": "172410"
  },
  {
    "text": "it needs to do is properly format at URL",
    "start": "172410",
    "end": "174540"
  },
  {
    "text": "and then redirect the user to that point",
    "start": "174540",
    "end": "176519"
  },
  {
    "text": "so they can't authenticate into their",
    "start": "176519",
    "end": "178019"
  },
  {
    "text": "coinbase account a useful trick is to",
    "start": "178019",
    "end": "180390"
  },
  {
    "text": "put all of these parameters in an object",
    "start": "180390",
    "end": "182489"
  },
  {
    "text": "and then use query string stringify to",
    "start": "182489",
    "end": "185250"
  },
  {
    "text": "add them to the URL it'll make your code",
    "start": "185250",
    "end": "187769"
  },
  {
    "text": "a lot more readable and maintainable the",
    "start": "187769",
    "end": "189989"
  },
  {
    "text": "scope parameter is the interesting one",
    "start": "189989",
    "end": "191400"
  },
  {
    "text": "that'll tell us the permission level",
    "start": "191400",
    "end": "192989"
  },
  {
    "text": "that we have on the user's account which",
    "start": "192989",
    "end": "194849"
  },
  {
    "text": "in this case will be able to read that",
    "start": "194849",
    "end": "196470"
  },
  {
    "text": "users wallet and you can get additional",
    "start": "196470",
    "end": "198660"
  },
  {
    "text": "details on each of these parameters from",
    "start": "198660",
    "end": "200400"
  },
  {
    "text": "the coinbase Docs so now we're gonna",
    "start": "200400",
    "end": "202709"
  },
  {
    "text": "switch gears into angular and we'll see",
    "start": "202709",
    "end": "204690"
  },
  {
    "text": "how we can trigger this redirect URL",
    "start": "204690",
    "end": "206670"
  },
  {
    "text": "first I'm going to generate a component",
    "start": "206670",
    "end": "209160"
  },
  {
    "text": "for the user details then I'll generate",
    "start": "209160",
    "end": "211799"
  },
  {
    "text": "another to handle the auth redirect and",
    "start": "211799",
    "end": "213870"
  },
  {
    "text": "I'll generate a service so we can share",
    "start": "213870",
    "end": "216239"
  },
  {
    "text": "some functionality between components",
    "start": "216239",
    "end": "218209"
  },
  {
    "start": "218000",
    "end": "308000"
  },
  {
    "text": "let's go ahead and start in the auth",
    "start": "218209",
    "end": "219989"
  },
  {
    "text": "service where we import angularfire auth",
    "start": "219989",
    "end": "222450"
  },
  {
    "text": "then in the constructor we will observe",
    "start": "222450",
    "end": "225389"
  },
  {
    "text": "the auth state from firebase so the user",
    "start": "225389",
    "end": "228540"
  },
  {
    "text": "observable is the current user from",
    "start": "228540",
    "end": "230519"
  },
  {
    "text": "firebase what I do next here is",
    "start": "230519",
    "end": "232500"
  },
  {
    "text": "considered a bad practice and angular",
    "start": "232500",
    "end": "234060"
  },
  {
    "text": "but I'm doing it to keep this demo",
    "start": "234060",
    "end": "235829"
  },
  {
    "text": "simple I'm opening a pop-up window that",
    "start": "235829",
    "end": "238230"
  },
  {
    "text": "points to our redirect cloud function",
    "start": "238230",
    "end": "240329"
  },
  {
    "text": "the proper way to do this is to wrap the",
    "start": "240329",
    "end": "242130"
  },
  {
    "text": "window in its own service so you can use",
    "start": "242130",
    "end": "243750"
  },
  {
    "text": "it in non browser environments such as",
    "start": "243750",
    "end": "246120"
  },
  {
    "text": "on the server or in a mobile app there's",
    "start": "246120",
    "end": "248910"
  },
  {
    "text": "still a lot of code to get through so",
    "start": "248910",
    "end": "250319"
  },
  {
    "text": "I'm just going to cheat a little bit on",
    "start": "250319",
    "end": "251849"
  },
  {
    "text": "this one so that's going to open the",
    "start": "251849",
    "end": "254069"
  },
  {
    "text": "pop-up and then once we actually have",
    "start": "254069",
    "end": "256260"
  },
  {
    "text": "the minted token from firebase we're",
    "start": "256260",
    "end": "258479"
  },
  {
    "text": "going to call sign in with custom token",
    "start": "258479",
    "end": "260789"
  },
  {
    "text": "from angular",
    "start": "260789",
    "end": "262440"
  },
  {
    "text": "this method just allows you to sign in",
    "start": "262440",
    "end": "264660"
  },
  {
    "text": "with your own custom minted token and",
    "start": "264660",
    "end": "266610"
  },
  {
    "text": "once signed in we'll just go ahead and",
    "start": "266610",
    "end": "268410"
  },
  {
    "text": "cheat again and call window close to",
    "start": "268410",
    "end": "270480"
  },
  {
    "text": "close the pop-up before we jump into the",
    "start": "270480",
    "end": "272970"
  },
  {
    "text": "components I'm going to go into the app",
    "start": "272970",
    "end": "274800"
  },
  {
    "text": "routing module and you can see we have",
    "start": "274800",
    "end": "276810"
  },
  {
    "text": "the user details component on the route",
    "start": "276810",
    "end": "279000"
  },
  {
    "text": "path and then we have the auth redirect",
    "start": "279000",
    "end": "281340"
  },
  {
    "text": "component at the redirect path that path",
    "start": "281340",
    "end": "284190"
  },
  {
    "text": "should match the redirect URI you set up",
    "start": "284190",
    "end": "286320"
  },
  {
    "text": "in coinbase",
    "start": "286320",
    "end": "287540"
  },
  {
    "text": "then we'll jump over to the user details",
    "start": "287540",
    "end": "289800"
  },
  {
    "text": "component and right now all this needs",
    "start": "289800",
    "end": "291900"
  },
  {
    "text": "to do is inject the auth service and",
    "start": "291900",
    "end": "293669"
  },
  {
    "text": "then we'll unwrap that user observable",
    "start": "293669",
    "end": "295950"
  },
  {
    "text": "in the HTML later on we'll get the",
    "start": "295950",
    "end": "298139"
  },
  {
    "text": "user's Bitcoin wallet but for now we're",
    "start": "298139",
    "end": "300060"
  },
  {
    "text": "not going to worry about that and the",
    "start": "300060",
    "end": "301650"
  },
  {
    "text": "HTML we can unwrap the user observable",
    "start": "301650",
    "end": "303660"
  },
  {
    "text": "and if it's not defined we'll give the",
    "start": "303660",
    "end": "305340"
  },
  {
    "text": "user a button to login with coinbase",
    "start": "305340",
    "end": "308300"
  },
  {
    "text": "now let's go ahead and run our cloud",
    "start": "308300",
    "end": "310260"
  },
  {
    "text": "functions by running npm run serve from",
    "start": "310260",
    "end": "313110"
  },
  {
    "text": "the functions directory that should tell",
    "start": "313110",
    "end": "315690"
  },
  {
    "text": "you that cloud functions are being",
    "start": "315690",
    "end": "316620"
  },
  {
    "text": "emulated on port 5,000 then if we go",
    "start": "316620",
    "end": "319770"
  },
  {
    "text": "into angular and click login with",
    "start": "319770",
    "end": "321240"
  },
  {
    "text": "coinbase it brings up this pop-up and",
    "start": "321240",
    "end": "323430"
  },
  {
    "text": "redirects us to our coinbase account",
    "start": "323430",
    "end": "326100"
  },
  {
    "text": "it requires the user to sign in with",
    "start": "326100",
    "end": "328080"
  },
  {
    "text": "two-factor authentication so it'll send",
    "start": "328080",
    "end": "330270"
  },
  {
    "text": "them a text message that they didn't",
    "start": "330270",
    "end": "331440"
  },
  {
    "text": "have to verify inside this form after",
    "start": "331440",
    "end": "333390"
  },
  {
    "text": "they log in to the firebase account then",
    "start": "333390",
    "end": "335820"
  },
  {
    "text": "they can click authorize and that",
    "start": "335820",
    "end": "337530"
  },
  {
    "text": "redirects us back to our angular app",
    "start": "337530",
    "end": "339270"
  },
  {
    "text": "inside this pop-up at this point nothing",
    "start": "339270",
    "end": "341550"
  },
  {
    "text": "happens because we still need to mint",
    "start": "341550",
    "end": "343440"
  },
  {
    "text": "our authentication token and create the",
    "start": "343440",
    "end": "345419"
  },
  {
    "text": "user in firebase we're going to do that",
    "start": "345419",
    "end": "347910"
  },
  {
    "text": "by going back to indexed es inside of",
    "start": "347910",
    "end": "350310"
  },
  {
    "text": "our cloud functions directory we're",
    "start": "350310",
    "end": "352350"
  },
  {
    "text": "going to wrap the request response",
    "start": "352350",
    "end": "353550"
  },
  {
    "text": "inside of cores and then we're going to",
    "start": "353550",
    "end": "356250"
  },
  {
    "text": "return a promise from the function",
    "start": "356250",
    "end": "357900"
  },
  {
    "text": "called mint auth token and that's just",
    "start": "357900",
    "end": "360690"
  },
  {
    "text": "going to return our custom token in JSON",
    "start": "360690",
    "end": "362970"
  },
  {
    "text": "format so that looks nice and simple but",
    "start": "362970",
    "end": "366030"
  },
  {
    "text": "there's actually a lot more to it",
    "start": "366030",
    "end": "367200"
  },
  {
    "text": "instead of writing a big long promise",
    "start": "367200",
    "end": "369180"
  },
  {
    "text": "chain I'm going to use an asynchronous",
    "start": "369180",
    "end": "371039"
  },
  {
    "text": "helper function so we do that by using",
    "start": "371039",
    "end": "373380"
  },
  {
    "text": "the async keyword followed by the",
    "start": "373380",
    "end": "375210"
  },
  {
    "text": "function mint auth token and it's going",
    "start": "375210",
    "end": "377550"
  },
  {
    "text": "to take the request as an argument if",
    "start": "377550",
    "end": "379440"
  },
  {
    "text": "you're not familiar with async await",
    "start": "379440",
    "end": "381090"
  },
  {
    "text": "it's nothing more than syntactic sugar",
    "start": "381090",
    "end": "383160"
  },
  {
    "text": "for promises our async function returns",
    "start": "383160",
    "end": "386340"
  },
  {
    "text": "a promise itself and it does that by",
    "start": "386340",
    "end": "388229"
  },
  {
    "text": "awaiting a bunch of other promises",
    "start": "388229",
    "end": "390000"
  },
  {
    "text": "inside of itself it results in way",
    "start": "390000",
    "end": "392460"
  },
  {
    "text": "better code readability when you need to",
    "start": "392460",
    "end": "394140"
  },
  {
    "text": "share values at different",
    "start": "394140",
    "end": "395639"
  },
  {
    "text": "in the promise chain the first thing we",
    "start": "395639",
    "end": "397919"
  },
  {
    "text": "need to do is hit the coin base API for",
    "start": "397919",
    "end": "399539"
  },
  {
    "text": "the access token and refresh token we",
    "start": "399539",
    "end": "402900"
  },
  {
    "text": "can do that by defining our query",
    "start": "402900",
    "end": "404129"
  },
  {
    "text": "parameters just like we did in the",
    "start": "404129",
    "end": "405389"
  },
  {
    "text": "previous function then set that as the",
    "start": "405389",
    "end": "407610"
  },
  {
    "text": "endpoint variable then this login",
    "start": "407610",
    "end": "410099"
  },
  {
    "text": "variable notice it awaits a post request",
    "start": "410099",
    "end": "412560"
  },
  {
    "text": "to this endpoint the value of the login",
    "start": "412560",
    "end": "415680"
  },
  {
    "text": "variable is going to be the response",
    "start": "415680",
    "end": "417360"
  },
  {
    "text": "from this endpoint which should be the",
    "start": "417360",
    "end": "419310"
  },
  {
    "text": "coin base access token and refresh token",
    "start": "419310",
    "end": "422009"
  },
  {
    "text": "well it's really cool is we can just",
    "start": "422009",
    "end": "423840"
  },
  {
    "text": "treat them like normal variables even",
    "start": "423840",
    "end": "425490"
  },
  {
    "text": "though it's an asynchronous operation",
    "start": "425490",
    "end": "427169"
  },
  {
    "text": "that would normally require us to call",
    "start": "427169",
    "end": "428520"
  },
  {
    "text": "then once we have an access token from",
    "start": "428520",
    "end": "430770"
  },
  {
    "text": "home base we can make API calls on the",
    "start": "430770",
    "end": "433110"
  },
  {
    "text": "user's behalf so the first thing we're",
    "start": "433110",
    "end": "435029"
  },
  {
    "text": "going to do is get their user profile by",
    "start": "435029",
    "end": "437400"
  },
  {
    "text": "calling this get coin base user method",
    "start": "437400",
    "end": "439319"
  },
  {
    "text": "that we're going to define next then",
    "start": "439319",
    "end": "441870"
  },
  {
    "text": "that's also going to be a response of",
    "start": "441870",
    "end": "443099"
  },
  {
    "text": "some data including the users coin base",
    "start": "443099",
    "end": "445379"
  },
  {
    "text": "user ID now that we have that we can",
    "start": "445379",
    "end": "447990"
  },
  {
    "text": "actually mint our own custom firebase",
    "start": "447990",
    "end": "450090"
  },
  {
    "text": "auth token so we call admin auth create",
    "start": "450090",
    "end": "453210"
  },
  {
    "text": "custom token with the coin base user ID",
    "start": "453210",
    "end": "455759"
  },
  {
    "text": "then one last thing we're going to do is",
    "start": "455759",
    "end": "457770"
  },
  {
    "text": "save the coin base access token and",
    "start": "457770",
    "end": "459690"
  },
  {
    "text": "refresh token in firebase and I want to",
    "start": "459690",
    "end": "462360"
  },
  {
    "text": "point out that it's really important",
    "start": "462360",
    "end": "463469"
  },
  {
    "text": "that you have good security rules on",
    "start": "463469",
    "end": "464909"
  },
  {
    "text": "these they should really only be",
    "start": "464909",
    "end": "466110"
  },
  {
    "text": "accessed by the admin on a back-end",
    "start": "466110",
    "end": "468360"
  },
  {
    "text": "server then we can just have this",
    "start": "468360",
    "end": "470400"
  },
  {
    "text": "function return the auth token so in",
    "start": "470400",
    "end": "472379"
  },
  {
    "text": "other words it's going to return a",
    "start": "472379",
    "end": "473460"
  },
  {
    "text": "promise of the auth token string now",
    "start": "473460",
    "end": "476639"
  },
  {
    "text": "that we have this access token from",
    "start": "476639",
    "end": "478139"
  },
  {
    "text": "coinbase we can start making calls to",
    "start": "478139",
    "end": "479969"
  },
  {
    "text": "the API I went ahead and extracted this",
    "start": "479969",
    "end": "482490"
  },
  {
    "text": "into its own function because it's",
    "start": "482490",
    "end": "483930"
  },
  {
    "text": "probably something that you'll want to",
    "start": "483930",
    "end": "485159"
  },
  {
    "text": "reuse it makes a get request to coinbase",
    "start": "485159",
    "end": "488250"
  },
  {
    "text": "and the important part here is in this",
    "start": "488250",
    "end": "490469"
  },
  {
    "text": "request we need to have an authorization",
    "start": "490469",
    "end": "491879"
  },
  {
    "text": "header that's formatted in a very",
    "start": "491879",
    "end": "493710"
  },
  {
    "text": "specific way it should say authorization",
    "start": "493710",
    "end": "496259"
  },
  {
    "text": "with bearer and then the actual access",
    "start": "496259",
    "end": "498750"
  },
  {
    "text": "token after it so that's all there is to",
    "start": "498750",
    "end": "501210"
  },
  {
    "text": "it for the cloud function part now we",
    "start": "501210",
    "end": "502800"
  },
  {
    "text": "need to go back to angular and fill out",
    "start": "502800",
    "end": "504779"
  },
  {
    "text": "our redirect component again this is the",
    "start": "504779",
    "end": "507300"
  },
  {
    "text": "component that lives in that pop-up",
    "start": "507300",
    "end": "508919"
  },
  {
    "text": "window that coinbase redirects to after",
    "start": "508919",
    "end": "511529"
  },
  {
    "text": "the user signs in on their coinbase",
    "start": "511529",
    "end": "513000"
  },
  {
    "text": "account coinbase sends back the auth",
    "start": "513000",
    "end": "515789"
  },
  {
    "text": "code in the query parameters so we're",
    "start": "515789",
    "end": "518250"
  },
  {
    "text": "going to use activated route to retrieve",
    "start": "518250",
    "end": "520050"
  },
  {
    "text": "it and we'll also bring in our off",
    "start": "520050",
    "end": "522060"
  },
  {
    "text": "service and the HTTP client from angular",
    "start": "522060",
    "end": "524930"
  },
  {
    "text": "during ng on an it will get the actual",
    "start": "524930",
    "end": "527910"
  },
  {
    "text": "query parameter code",
    "start": "527910",
    "end": "529030"
  },
  {
    "text": "from the URL sent back to us from",
    "start": "529030",
    "end": "530860"
  },
  {
    "text": "coinbase then we can use it to make a",
    "start": "530860",
    "end": "533470"
  },
  {
    "text": "request to our cloud function endpoint",
    "start": "533470",
    "end": "535420"
  },
  {
    "text": "and mint the actual auth token if the",
    "start": "535420",
    "end": "538420"
  },
  {
    "text": "code is defined then we'll point to",
    "start": "538420",
    "end": "539830"
  },
  {
    "text": "localhost 5000 and we'll make a post",
    "start": "539830",
    "end": "543340"
  },
  {
    "text": "request to that endpoint and with the",
    "start": "543340",
    "end": "545350"
  },
  {
    "text": "response we get back which is going to",
    "start": "545350",
    "end": "546940"
  },
  {
    "text": "be that custom auth token we can then",
    "start": "546940",
    "end": "548860"
  },
  {
    "text": "use it to call custom sign in from our",
    "start": "548860",
    "end": "550810"
  },
  {
    "text": "off service which will authenticate the",
    "start": "550810",
    "end": "552700"
  },
  {
    "text": "user then make sure to subscribe to send",
    "start": "552700",
    "end": "555310"
  },
  {
    "text": "the request let's go back to angular and",
    "start": "555310",
    "end": "557800"
  },
  {
    "text": "try out our login button again this time",
    "start": "557800",
    "end": "560500"
  },
  {
    "text": "we go to coinbase as expected and then",
    "start": "560500",
    "end": "562720"
  },
  {
    "text": "authorize and now it's calling the cloud",
    "start": "562720",
    "end": "565720"
  },
  {
    "text": "function and minting that token after a",
    "start": "565720",
    "end": "567880"
  },
  {
    "text": "second or two it closes and we're logged",
    "start": "567880",
    "end": "569860"
  },
  {
    "text": "in to firebase with our custom user ID",
    "start": "569860",
    "end": "571900"
  },
  {
    "text": "you can verify the user is created by",
    "start": "571900",
    "end": "574450"
  },
  {
    "text": "going into your authentication tab in",
    "start": "574450",
    "end": "576490"
  },
  {
    "text": "firebase and you should see your custom",
    "start": "576490",
    "end": "578680"
  },
  {
    "text": "user in there then you'll also want to",
    "start": "578680",
    "end": "580960"
  },
  {
    "text": "go into the real time database and make",
    "start": "580960",
    "end": "583000"
  },
  {
    "text": "sure the access token and refresh token",
    "start": "583000",
    "end": "585130"
  },
  {
    "text": "are saved under that user ID and again",
    "start": "585130",
    "end": "587950"
  },
  {
    "text": "make sure you have these lock down and",
    "start": "587950",
    "end": "589450"
  },
  {
    "text": "your back-end database rules I'm going",
    "start": "589450",
    "end": "592060"
  },
  {
    "text": "to go head and wrap up the video here",
    "start": "592060",
    "end": "593320"
  },
  {
    "text": "but in the next video I'm going to show",
    "start": "593320",
    "end": "594850"
  },
  {
    "text": "you how to use these access and refresh",
    "start": "594850",
    "end": "596560"
  },
  {
    "text": "tokens to make requests to the coinbase",
    "start": "596560",
    "end": "598540"
  },
  {
    "text": "api you'll be able to send and receive",
    "start": "598540",
    "end": "600850"
  },
  {
    "text": "Bitcoin payments as well as see the",
    "start": "600850",
    "end": "602590"
  },
  {
    "text": "balance and users wallet and it opens",
    "start": "602590",
    "end": "604570"
  },
  {
    "text": "the door for all kinds of different",
    "start": "604570",
    "end": "605710"
  },
  {
    "text": "creative cryptocurrency features that's",
    "start": "605710",
    "end": "608650"
  },
  {
    "text": "it for coinbase both with firebase if",
    "start": "608650",
    "end": "610930"
  },
  {
    "text": "this video helped you please like and",
    "start": "610930",
    "end": "612280"
  },
  {
    "text": "subscribe and if you're serious about",
    "start": "612280",
    "end": "613840"
  },
  {
    "text": "building apps with the stack consider",
    "start": "613840",
    "end": "615490"
  },
  {
    "text": "becoming a pro subscriber at angular",
    "start": "615490",
    "end": "617230"
  },
  {
    "text": "firebase com you'll get a free copy of",
    "start": "617230",
    "end": "619330"
  },
  {
    "text": "my book as well as one on one project",
    "start": "619330",
    "end": "621430"
  },
  {
    "text": "support and a whole bunch of other",
    "start": "621430",
    "end": "622750"
  },
  {
    "text": "exclusive content thanks for watching",
    "start": "622750",
    "end": "625270"
  },
  {
    "text": "and I'll see you soon",
    "start": "625270",
    "end": "626860"
  },
  {
    "text": "[Music]",
    "start": "626860",
    "end": "631570"
  },
  {
    "text": "[Applause]",
    "start": "631570",
    "end": "632490"
  },
  {
    "text": "[Music]",
    "start": "632490",
    "end": "636980"
  }
]