[
  {
    "start": "0",
    "end": "114000"
  },
  {
    "text": "one of the leading causes of imposter",
    "start": "80",
    "end": "1680"
  },
  {
    "text": "syndrome among developers is not knowing",
    "start": "1680",
    "end": "3760"
  },
  {
    "text": "docker it makes it hard to go to parties",
    "start": "3760",
    "end": "5440"
  },
  {
    "text": "where everybody's talking about",
    "start": "5440",
    "end": "6480"
  },
  {
    "text": "kubernetes",
    "start": "6480",
    "end": "7440"
  },
  {
    "text": "swarms shuffle sharding while you hide",
    "start": "7440",
    "end": "9440"
  },
  {
    "text": "in the corner googling what is a",
    "start": "9440",
    "end": "10800"
  },
  {
    "text": "container we've all been there at one",
    "start": "10800",
    "end": "12160"
  },
  {
    "text": "point or another",
    "start": "12160",
    "end": "12960"
  },
  {
    "text": "in today's video you'll learn everything",
    "start": "12960",
    "end": "14400"
  },
  {
    "text": "you need to know about docker to survive",
    "start": "14400",
    "end": "16000"
  },
  {
    "text": "as a developer in 2020",
    "start": "16000",
    "end": "17680"
  },
  {
    "text": "we'll take a hands-on approach by",
    "start": "17680",
    "end": "19119"
  },
  {
    "text": "containerizing a node.js application",
    "start": "19119",
    "end": "21199"
  },
  {
    "text": "i'll assume you've never touched a",
    "start": "21199",
    "end": "22320"
  },
  {
    "text": "docker container before so we'll go",
    "start": "22320",
    "end": "23920"
  },
  {
    "text": "through installation and tooling",
    "start": "23920",
    "end": "25439"
  },
  {
    "text": "as well as the most important",
    "start": "25439",
    "end": "26560"
  },
  {
    "text": "instructions in a dockerfile in addition",
    "start": "26560",
    "end": "28640"
  },
  {
    "text": "we'll look at very important advanced",
    "start": "28640",
    "end": "30080"
  },
  {
    "text": "concepts like port forwarding",
    "start": "30080",
    "end": "31760"
  },
  {
    "text": "volumes and how to manage multiple",
    "start": "31760",
    "end": "33600"
  },
  {
    "text": "containers with docker compose",
    "start": "33600",
    "end": "35360"
  },
  {
    "text": "we'll do everything step by step so feel",
    "start": "35360",
    "end": "37280"
  },
  {
    "text": "free to skip ahead with the chapters in",
    "start": "37280",
    "end": "39040"
  },
  {
    "text": "the video description",
    "start": "39040",
    "end": "40399"
  },
  {
    "text": "what is docker from a practical",
    "start": "40399",
    "end": "42000"
  },
  {
    "text": "standpoint it's just a way to package",
    "start": "42000",
    "end": "43840"
  },
  {
    "text": "software so it can run on any hardware",
    "start": "43840",
    "end": "46239"
  },
  {
    "text": "now in order to understand how that",
    "start": "46239",
    "end": "47680"
  },
  {
    "text": "process works there are three things",
    "start": "47680",
    "end": "49200"
  },
  {
    "text": "that you absolutely must know",
    "start": "49200",
    "end": "50879"
  },
  {
    "text": "docker files images and containers a",
    "start": "50879",
    "end": "53680"
  },
  {
    "text": "docker file is a blueprint for building",
    "start": "53680",
    "end": "55840"
  },
  {
    "text": "a docker image",
    "start": "55840",
    "end": "56879"
  },
  {
    "text": "a docker image is a template for running",
    "start": "56879",
    "end": "59120"
  },
  {
    "text": "docker containers",
    "start": "59120",
    "end": "60160"
  },
  {
    "text": "a container is just a running process in",
    "start": "60160",
    "end": "62719"
  },
  {
    "text": "our case we have a node application we",
    "start": "62719",
    "end": "64559"
  },
  {
    "text": "need to have a server that's running the",
    "start": "64559",
    "end": "65840"
  },
  {
    "text": "same version of node and that has also",
    "start": "65840",
    "end": "67760"
  },
  {
    "text": "installed these dependencies",
    "start": "67760",
    "end": "69280"
  },
  {
    "text": "it works on my machine but if someone",
    "start": "69280",
    "end": "70880"
  },
  {
    "text": "else with a different machine tries to",
    "start": "70880",
    "end": "72159"
  },
  {
    "text": "run it with a different version of node",
    "start": "72159",
    "end": "73600"
  },
  {
    "text": "it might break",
    "start": "73600",
    "end": "74479"
  },
  {
    "text": "the whole point of docker is to solve",
    "start": "74479",
    "end": "76240"
  },
  {
    "text": "problems like this by reproducing",
    "start": "76240",
    "end": "78080"
  },
  {
    "text": "environments the developer who creates",
    "start": "78080",
    "end": "79759"
  },
  {
    "text": "the software can define the environment",
    "start": "79759",
    "end": "81439"
  },
  {
    "text": "with a docker file",
    "start": "81439",
    "end": "82720"
  },
  {
    "text": "then any developer at that point can use",
    "start": "82720",
    "end": "84479"
  },
  {
    "text": "the docker file to rebuild the",
    "start": "84479",
    "end": "86000"
  },
  {
    "text": "environment which is saved as an",
    "start": "86000",
    "end": "87520"
  },
  {
    "text": "immutable snapshot known as an image",
    "start": "87520",
    "end": "89680"
  },
  {
    "text": "images can be uploaded to the cloud in",
    "start": "89680",
    "end": "91360"
  },
  {
    "text": "both public and private registries",
    "start": "91360",
    "end": "93280"
  },
  {
    "text": "then any developer or server that wants",
    "start": "93280",
    "end": "95360"
  },
  {
    "text": "to run that software",
    "start": "95360",
    "end": "96640"
  },
  {
    "text": "can pull the image down to create a",
    "start": "96640",
    "end": "98320"
  },
  {
    "text": "container which is just a running",
    "start": "98320",
    "end": "100000"
  },
  {
    "text": "process of that image in other words one",
    "start": "100000",
    "end": "102479"
  },
  {
    "text": "image file can be used to spawn the same",
    "start": "102479",
    "end": "104320"
  },
  {
    "text": "process multiple times in multiple",
    "start": "104320",
    "end": "106240"
  },
  {
    "text": "places",
    "start": "106240",
    "end": "106960"
  },
  {
    "text": "and it's at that point where tools like",
    "start": "106960",
    "end": "108399"
  },
  {
    "text": "kubernetes and swarm come into play",
    "start": "108399",
    "end": "110320"
  },
  {
    "text": "to scale containers to an infinite",
    "start": "110320",
    "end": "111920"
  },
  {
    "text": "workload the best way to really learn",
    "start": "111920",
    "end": "113840"
  },
  {
    "text": "docker",
    "start": "113840",
    "end": "114399"
  },
  {
    "start": "114000",
    "end": "160000"
  },
  {
    "text": "is to use it and to use it we need to",
    "start": "114399",
    "end": "116399"
  },
  {
    "text": "install it if you're on mac or windows i",
    "start": "116399",
    "end": "118320"
  },
  {
    "text": "would highly recommend installing the",
    "start": "118320",
    "end": "119840"
  },
  {
    "text": "docker desktop application it installs",
    "start": "119840",
    "end": "121759"
  },
  {
    "text": "everything you need for the command line",
    "start": "121759",
    "end": "123200"
  },
  {
    "text": "and also gives you a gui where you can",
    "start": "123200",
    "end": "124719"
  },
  {
    "text": "inspect your running containers",
    "start": "124719",
    "end": "126240"
  },
  {
    "text": "once installed you should have access to",
    "start": "126240",
    "end": "127920"
  },
  {
    "text": "docker from the command line and here's",
    "start": "127920",
    "end": "129599"
  },
  {
    "text": "the first command you should memorize",
    "start": "129599",
    "end": "131200"
  },
  {
    "text": "docker which gives you a list of all the",
    "start": "131200",
    "end": "133440"
  },
  {
    "text": "running containers on your system",
    "start": "133440",
    "end": "134959"
  },
  {
    "text": "you'll notice how every container has a",
    "start": "134959",
    "end": "136480"
  },
  {
    "text": "unique id and is also linked to an image",
    "start": "136480",
    "end": "139200"
  },
  {
    "text": "and keep in mind you can find the same",
    "start": "139200",
    "end": "140560"
  },
  {
    "text": "information from the gui as well now the",
    "start": "140560",
    "end": "142400"
  },
  {
    "text": "other thing you'll want to install is",
    "start": "142400",
    "end": "143760"
  },
  {
    "text": "the docker extension for vs code or for",
    "start": "143760",
    "end": "146080"
  },
  {
    "text": "your ide",
    "start": "146080",
    "end": "146959"
  },
  {
    "text": "this will give you language support when",
    "start": "146959",
    "end": "148319"
  },
  {
    "text": "you write your docker files and can also",
    "start": "148319",
    "end": "150239"
  },
  {
    "text": "link up to remote registries and a bunch",
    "start": "150239",
    "end": "152080"
  },
  {
    "text": "of other stuff",
    "start": "152080",
    "end": "152879"
  },
  {
    "text": "now that we have docker installed we can",
    "start": "152879",
    "end": "154480"
  },
  {
    "text": "move on to what is probably the most",
    "start": "154480",
    "end": "156000"
  },
  {
    "text": "important section of this video and",
    "start": "156000",
    "end": "157920"
  },
  {
    "text": "that's the docker file",
    "start": "157920",
    "end": "159120"
  },
  {
    "text": "which contains code to build your docker",
    "start": "159120",
    "end": "161200"
  },
  {
    "start": "160000",
    "end": "366000"
  },
  {
    "text": "image and ultimately run your app as a",
    "start": "161200",
    "end": "163040"
  },
  {
    "text": "container",
    "start": "163040",
    "end": "163840"
  },
  {
    "text": "now to follow along at this point you",
    "start": "163840",
    "end": "165440"
  },
  {
    "text": "can grab my source code from github or",
    "start": "165440",
    "end": "167280"
  },
  {
    "text": "fireship io or better yet",
    "start": "167280",
    "end": "168959"
  },
  {
    "text": "use your own application as a starting",
    "start": "168959",
    "end": "170560"
  },
  {
    "text": "point in this case i just have a single",
    "start": "170560",
    "end": "172319"
  },
  {
    "text": "index.js file",
    "start": "172319",
    "end": "173440"
  },
  {
    "text": "that exposes an api endpoint that sends",
    "start": "173440",
    "end": "175599"
  },
  {
    "text": "back a response",
    "start": "175599",
    "end": "176640"
  },
  {
    "text": "docker is easy then we expose our app",
    "start": "176640",
    "end": "178800"
  },
  {
    "text": "using the port environment variable",
    "start": "178800",
    "end": "180560"
  },
  {
    "text": "and that'll come into play later the",
    "start": "180560",
    "end": "182159"
  },
  {
    "text": "question we're faced with now is how do",
    "start": "182159",
    "end": "183840"
  },
  {
    "text": "we dockerize this app",
    "start": "183840",
    "end": "185200"
  },
  {
    "text": "we'll start by creating a docker file in",
    "start": "185200",
    "end": "187120"
  },
  {
    "text": "the root of the project",
    "start": "187120",
    "end": "188239"
  },
  {
    "text": "the first instruction in our docker file",
    "start": "188239",
    "end": "190239"
  },
  {
    "text": "is from and if you hover over it it will",
    "start": "190239",
    "end": "192159"
  },
  {
    "text": "give you some documentation about what",
    "start": "192159",
    "end": "193680"
  },
  {
    "text": "it does",
    "start": "193680",
    "end": "194319"
  },
  {
    "text": "you could start from scratch with",
    "start": "194319",
    "end": "195599"
  },
  {
    "text": "nothing but the docker runtime however",
    "start": "195599",
    "end": "197440"
  },
  {
    "text": "most docker",
    "start": "197440",
    "end": "198000"
  },
  {
    "text": "files will start with a specific base",
    "start": "198000",
    "end": "199920"
  },
  {
    "text": "image for example",
    "start": "199920",
    "end": "201120"
  },
  {
    "text": "when i type ubuntu you'll notice it's",
    "start": "201120",
    "end": "202879"
  },
  {
    "text": "underlined and when i control click it",
    "start": "202879",
    "end": "204640"
  },
  {
    "text": "it will take me to all the base images",
    "start": "204640",
    "end": "206480"
  },
  {
    "text": "for this flavor of linux and then you'll",
    "start": "206480",
    "end": "208159"
  },
  {
    "text": "notice it supports a variety of",
    "start": "208159",
    "end": "209519"
  },
  {
    "text": "different tags which are just different",
    "start": "209519",
    "end": "211040"
  },
  {
    "text": "variations on this base image",
    "start": "211040",
    "end": "212720"
  },
  {
    "text": "ubuntu doesn't have nodejs installed by",
    "start": "212720",
    "end": "214720"
  },
  {
    "text": "default we could still use this image",
    "start": "214720",
    "end": "216560"
  },
  {
    "text": "and install node.js manually",
    "start": "216560",
    "end": "218159"
  },
  {
    "text": "however there is a better option and",
    "start": "218159",
    "end": "219680"
  },
  {
    "text": "that's to use the officially supported",
    "start": "219680",
    "end": "221280"
  },
  {
    "text": "node.js image",
    "start": "221280",
    "end": "222400"
  },
  {
    "text": "we'll go ahead and use the node version",
    "start": "222400",
    "end": "223920"
  },
  {
    "text": "12 base image which will give us",
    "start": "223920",
    "end": "225440"
  },
  {
    "text": "everything we need to start working with",
    "start": "225440",
    "end": "226799"
  },
  {
    "text": "node in this environment",
    "start": "226799",
    "end": "228159"
  },
  {
    "text": "the next thing we'll want to do is add",
    "start": "228159",
    "end": "229599"
  },
  {
    "text": "our app source code to the image",
    "start": "229599",
    "end": "231440"
  },
  {
    "text": "the working directory instruction is",
    "start": "231440",
    "end": "233120"
  },
  {
    "text": "kind of like when you cd into a",
    "start": "233120",
    "end": "234560"
  },
  {
    "text": "directory",
    "start": "234560",
    "end": "235200"
  },
  {
    "text": "now any subsequent instructions in our",
    "start": "235200",
    "end": "237040"
  },
  {
    "text": "docker file will start from this app",
    "start": "237040",
    "end": "238879"
  },
  {
    "text": "directory",
    "start": "238879",
    "end": "239680"
  },
  {
    "text": "now at this point there is something",
    "start": "239680",
    "end": "241200"
  },
  {
    "text": "very important that you need to",
    "start": "241200",
    "end": "242319"
  },
  {
    "text": "understand",
    "start": "242319",
    "end": "243120"
  },
  {
    "text": "and that's that every instruction in",
    "start": "243120",
    "end": "244640"
  },
  {
    "text": "this docker file is considered its own",
    "start": "244640",
    "end": "246560"
  },
  {
    "text": "step or layer",
    "start": "246560",
    "end": "247760"
  },
  {
    "text": "in order to keep things efficient docker",
    "start": "247760",
    "end": "249519"
  },
  {
    "text": "will attempt to cache layers",
    "start": "249519",
    "end": "251040"
  },
  {
    "text": "if nothing is actually changed now",
    "start": "251040",
    "end": "252959"
  },
  {
    "text": "normally when you're working on a node",
    "start": "252959",
    "end": "254319"
  },
  {
    "text": "project",
    "start": "254319",
    "end": "254879"
  },
  {
    "text": "you get your source code and then you",
    "start": "254879",
    "end": "256320"
  },
  {
    "text": "install your dependencies but in docker",
    "start": "256320",
    "end": "258320"
  },
  {
    "text": "we actually want to install our",
    "start": "258320",
    "end": "259519"
  },
  {
    "text": "dependencies first so they can be cached",
    "start": "259519",
    "end": "261840"
  },
  {
    "text": "in other words we don't want to have to",
    "start": "261840",
    "end": "263440"
  },
  {
    "text": "reinstall all of our node modules every",
    "start": "263440",
    "end": "265360"
  },
  {
    "text": "time we change our app source code we",
    "start": "265360",
    "end": "267040"
  },
  {
    "text": "use the copy instruction which takes two",
    "start": "267040",
    "end": "268960"
  },
  {
    "text": "arguments",
    "start": "268960",
    "end": "269520"
  },
  {
    "text": "the first argument is our local package",
    "start": "269520",
    "end": "271600"
  },
  {
    "text": "json location",
    "start": "271600",
    "end": "272880"
  },
  {
    "text": "and then the second argument is the",
    "start": "272880",
    "end": "274400"
  },
  {
    "text": "place we want to copy it in the",
    "start": "274400",
    "end": "275919"
  },
  {
    "text": "container which is the current working",
    "start": "275919",
    "end": "277520"
  },
  {
    "text": "directory",
    "start": "277520",
    "end": "278400"
  },
  {
    "text": "and now that we have a package json we",
    "start": "278400",
    "end": "280400"
  },
  {
    "text": "can run the npm install command",
    "start": "280400",
    "end": "282720"
  },
  {
    "text": "this is just like opening a terminal",
    "start": "282720",
    "end": "284400"
  },
  {
    "text": "session and running a command",
    "start": "284400",
    "end": "285919"
  },
  {
    "text": "and when it's finished the results will",
    "start": "285919",
    "end": "287360"
  },
  {
    "text": "be committed to the docker image as a",
    "start": "287360",
    "end": "289120"
  },
  {
    "text": "layer",
    "start": "289120",
    "end": "289680"
  },
  {
    "text": "now that we have our modules in the",
    "start": "289680",
    "end": "290880"
  },
  {
    "text": "image we can then copy over our source",
    "start": "290880",
    "end": "292639"
  },
  {
    "text": "code",
    "start": "292639",
    "end": "293280"
  },
  {
    "text": "which we'll do by copying over all of",
    "start": "293280",
    "end": "295120"
  },
  {
    "text": "our local files to the current working",
    "start": "295120",
    "end": "296800"
  },
  {
    "text": "directory",
    "start": "296800",
    "end": "297680"
  },
  {
    "text": "but this actually creates a problem for",
    "start": "297680",
    "end": "299280"
  },
  {
    "text": "us because you'll notice that we have a",
    "start": "299280",
    "end": "300639"
  },
  {
    "text": "node modules folder here in our local",
    "start": "300639",
    "end": "302400"
  },
  {
    "text": "file system",
    "start": "302400",
    "end": "303199"
  },
  {
    "text": "that would also be copied over to the",
    "start": "303199",
    "end": "304880"
  },
  {
    "text": "image and override the node modules that",
    "start": "304880",
    "end": "306880"
  },
  {
    "text": "we install there",
    "start": "306880",
    "end": "308000"
  },
  {
    "text": "what we need is some kind of way for a",
    "start": "308000",
    "end": "309680"
  },
  {
    "text": "docker to ignore our local node modules",
    "start": "309680",
    "end": "311919"
  },
  {
    "text": "we can do that by creating a docker",
    "start": "311919",
    "end": "313600"
  },
  {
    "text": "ignore file",
    "start": "313600",
    "end": "314400"
  },
  {
    "text": "and adding node modules to it it works",
    "start": "314400",
    "end": "316400"
  },
  {
    "text": "just like a git ignore file which you've",
    "start": "316400",
    "end": "318000"
  },
  {
    "text": "probably seen before",
    "start": "318000",
    "end": "319360"
  },
  {
    "text": "okay so at this point we have our source",
    "start": "319360",
    "end": "321199"
  },
  {
    "text": "code in the docker image",
    "start": "321199",
    "end": "322479"
  },
  {
    "text": "but in order to run our code we're using",
    "start": "322479",
    "end": "324240"
  },
  {
    "text": "an environment variable we can set that",
    "start": "324240",
    "end": "326000"
  },
  {
    "text": "environment variable in the container",
    "start": "326000",
    "end": "327520"
  },
  {
    "text": "using the env",
    "start": "327520",
    "end": "328479"
  },
  {
    "text": "instruction now when we actually have a",
    "start": "328479",
    "end": "330080"
  },
  {
    "text": "running container we also want it to be",
    "start": "330080",
    "end": "331919"
  },
  {
    "text": "listening on port 8080 so we can access",
    "start": "331919",
    "end": "334240"
  },
  {
    "text": "the nodejs express app publicly",
    "start": "334240",
    "end": "336240"
  },
  {
    "text": "and we'll look at port some more detail",
    "start": "336240",
    "end": "337600"
  },
  {
    "text": "in just a minute when we run the",
    "start": "337600",
    "end": "338720"
  },
  {
    "text": "container",
    "start": "338720",
    "end": "339280"
  },
  {
    "text": "and that brings us to our final",
    "start": "339280",
    "end": "340479"
  },
  {
    "text": "instruction command there can only be",
    "start": "340479",
    "end": "342400"
  },
  {
    "text": "one of these per docker file and it",
    "start": "342400",
    "end": "344000"
  },
  {
    "text": "tells the container how to run the",
    "start": "344000",
    "end": "345680"
  },
  {
    "text": "actual application",
    "start": "345680",
    "end": "346800"
  },
  {
    "text": "which it does by starting a process to",
    "start": "346800",
    "end": "348639"
  },
  {
    "text": "serve the express app you'll also notice",
    "start": "348639",
    "end": "350639"
  },
  {
    "text": "that unlike run",
    "start": "350639",
    "end": "351600"
  },
  {
    "text": "we've made this command an array of",
    "start": "351600",
    "end": "353120"
  },
  {
    "text": "strings this is known as exec form",
    "start": "353120",
    "end": "355360"
  },
  {
    "text": "and it's the preferred way to do things",
    "start": "355360",
    "end": "356960"
  },
  {
    "text": "unlike a regular command it doesn't",
    "start": "356960",
    "end": "358400"
  },
  {
    "text": "start up a shell session",
    "start": "358400",
    "end": "359840"
  },
  {
    "text": "and that's basically all there is to it",
    "start": "359840",
    "end": "361360"
  },
  {
    "text": "we now have a full set of instructions",
    "start": "361360",
    "end": "362960"
  },
  {
    "text": "for building a docker image",
    "start": "362960",
    "end": "364319"
  },
  {
    "text": "and that brings us to the next question",
    "start": "364319",
    "end": "365919"
  },
  {
    "text": "how do we build a docker image",
    "start": "365919",
    "end": "367520"
  },
  {
    "start": "366000",
    "end": "432000"
  },
  {
    "text": "you build a docker image by running the",
    "start": "367520",
    "end": "369120"
  },
  {
    "text": "docker build command there's a lot of",
    "start": "369120",
    "end": "371039"
  },
  {
    "text": "different options you can pass with the",
    "start": "371039",
    "end": "372319"
  },
  {
    "text": "command but the one you want to know for",
    "start": "372319",
    "end": "373840"
  },
  {
    "text": "right now",
    "start": "373840",
    "end": "374400"
  },
  {
    "text": "is tag or t this will give your image a",
    "start": "374400",
    "end": "376720"
  },
  {
    "text": "name tag that's easy to remember so you",
    "start": "376720",
    "end": "378400"
  },
  {
    "text": "can access it later",
    "start": "378400",
    "end": "379680"
  },
  {
    "text": "when defining the tag name i'd first",
    "start": "379680",
    "end": "381280"
  },
  {
    "text": "recommend setting up a username on",
    "start": "381280",
    "end": "383120"
  },
  {
    "text": "docker hub",
    "start": "383120",
    "end": "384000"
  },
  {
    "text": "and then do that username followed by",
    "start": "384000",
    "end": "385919"
  },
  {
    "text": "whatever you want to call this image",
    "start": "385919",
    "end": "387680"
  },
  {
    "text": "so in my case it would be fireship slash",
    "start": "387680",
    "end": "389840"
  },
  {
    "text": "demo app and you could also add a",
    "start": "389840",
    "end": "391360"
  },
  {
    "text": "version number separated by a colon",
    "start": "391360",
    "end": "393280"
  },
  {
    "text": "from there you simply add the path to",
    "start": "393280",
    "end": "394960"
  },
  {
    "text": "your docker file which in our case is",
    "start": "394960",
    "end": "396639"
  },
  {
    "text": "just a period for the current working",
    "start": "396639",
    "end": "398160"
  },
  {
    "text": "directory",
    "start": "398160",
    "end": "398800"
  },
  {
    "text": "when we run it you'll notice it starts",
    "start": "398800",
    "end": "400319"
  },
  {
    "text": "with step one which is to pull the node",
    "start": "400319",
    "end": "402319"
  },
  {
    "text": "12 image remotely",
    "start": "402319",
    "end": "403520"
  },
  {
    "text": "then it goes through each step in our",
    "start": "403520",
    "end": "404880"
  },
  {
    "text": "docker file and finally it says",
    "start": "404880",
    "end": "406560"
  },
  {
    "text": "successfully built the",
    "start": "406560",
    "end": "407840"
  },
  {
    "text": "image id and now that we have this image",
    "start": "407840",
    "end": "409840"
  },
  {
    "text": "we can use it as a base image to create",
    "start": "409840",
    "end": "411759"
  },
  {
    "text": "other images or we can use it to run",
    "start": "411759",
    "end": "413599"
  },
  {
    "text": "containers",
    "start": "413599",
    "end": "414479"
  },
  {
    "text": "in real life to use this image you'll",
    "start": "414479",
    "end": "416160"
  },
  {
    "text": "most likely push it to a container",
    "start": "416160",
    "end": "417840"
  },
  {
    "text": "registry somewhere",
    "start": "417840",
    "end": "418960"
  },
  {
    "text": "that might be docker hub or your",
    "start": "418960",
    "end": "420479"
  },
  {
    "text": "favorite cloud provider and the command",
    "start": "420479",
    "end": "422240"
  },
  {
    "text": "you would use to do that is",
    "start": "422240",
    "end": "423520"
  },
  {
    "text": "docker push then a developer or server",
    "start": "423520",
    "end": "425840"
  },
  {
    "text": "somewhere else in the world could use",
    "start": "425840",
    "end": "427120"
  },
  {
    "text": "docker pull to pull that image back down",
    "start": "427120",
    "end": "429440"
  },
  {
    "text": "but we just want to run it here locally",
    "start": "429440",
    "end": "430960"
  },
  {
    "text": "in our system so let's do that with the",
    "start": "430960",
    "end": "432800"
  },
  {
    "start": "432000",
    "end": "532000"
  },
  {
    "text": "docker run command",
    "start": "432800",
    "end": "434080"
  },
  {
    "text": "we can supply it with the image id or",
    "start": "434080",
    "end": "435840"
  },
  {
    "text": "the tag name and all that does",
    "start": "435840",
    "end": "437599"
  },
  {
    "text": "is create a running process called a",
    "start": "437599",
    "end": "439360"
  },
  {
    "text": "container and we can see in the terminal",
    "start": "439360",
    "end": "441199"
  },
  {
    "text": "it should say app listening on localhost",
    "start": "441199",
    "end": "443280"
  },
  {
    "text": "8080. but if we open the browser and go",
    "start": "443280",
    "end": "445520"
  },
  {
    "text": "to that address we don't see anything",
    "start": "445520",
    "end": "447360"
  },
  {
    "text": "so why can't i access my container",
    "start": "447360",
    "end": "449039"
  },
  {
    "text": "locally remember we exposed port 8080 in",
    "start": "449039",
    "end": "451759"
  },
  {
    "text": "our docker file",
    "start": "451759",
    "end": "452720"
  },
  {
    "text": "but by default it's not accessible to",
    "start": "452720",
    "end": "454560"
  },
  {
    "text": "the outside world let's refactor our",
    "start": "454560",
    "end": "456240"
  },
  {
    "text": "command to use the p",
    "start": "456240",
    "end": "457199"
  },
  {
    "text": "flag to implement port forwarding from",
    "start": "457199",
    "end": "459199"
  },
  {
    "text": "the docker container to our local",
    "start": "459199",
    "end": "460639"
  },
  {
    "text": "machine",
    "start": "460639",
    "end": "461680"
  },
  {
    "text": "on the left side we'll map a port on our",
    "start": "461680",
    "end": "463599"
  },
  {
    "text": "local machine 5000 in this case",
    "start": "463599",
    "end": "465759"
  },
  {
    "text": "to a port on the docker container 8080",
    "start": "465759",
    "end": "468240"
  },
  {
    "text": "on the right side",
    "start": "468240",
    "end": "469199"
  },
  {
    "text": "and now if we open the browser and go to",
    "start": "469199",
    "end": "470879"
  },
  {
    "text": "localhost 5000 we'll see the app running",
    "start": "470879",
    "end": "473280"
  },
  {
    "text": "there",
    "start": "473280",
    "end": "473919"
  },
  {
    "text": "now one thing to keep in mind at this",
    "start": "473919",
    "end": "475199"
  },
  {
    "text": "point is that the docker container will",
    "start": "475199",
    "end": "476879"
  },
  {
    "text": "still be running even after you close",
    "start": "476879",
    "end": "478560"
  },
  {
    "text": "the terminal window",
    "start": "478560",
    "end": "479919"
  },
  {
    "text": "let's go ahead and open up the dashboard",
    "start": "479919",
    "end": "481599"
  },
  {
    "text": "and stop the container you should",
    "start": "481599",
    "end": "483120"
  },
  {
    "text": "actually have two running containers",
    "start": "483120",
    "end": "484479"
  },
  {
    "text": "here if you've been following along",
    "start": "484479",
    "end": "486240"
  },
  {
    "text": "when you stop the container any state or",
    "start": "486240",
    "end": "488400"
  },
  {
    "text": "data that you created inside of it will",
    "start": "488400",
    "end": "489919"
  },
  {
    "text": "be lost",
    "start": "489919",
    "end": "491039"
  },
  {
    "text": "but there can be situations where you",
    "start": "491039",
    "end": "492639"
  },
  {
    "text": "want to share data across multiple",
    "start": "492639",
    "end": "494479"
  },
  {
    "text": "containers",
    "start": "494479",
    "end": "495360"
  },
  {
    "text": "and the preferred way to do that is with",
    "start": "495360",
    "end": "496960"
  },
  {
    "text": "volumes a volume is just a dedicated",
    "start": "496960",
    "end": "499360"
  },
  {
    "text": "folder on the host machine",
    "start": "499360",
    "end": "500800"
  },
  {
    "text": "and inside this folder a container can",
    "start": "500800",
    "end": "502479"
  },
  {
    "text": "create files that can be remounted into",
    "start": "502479",
    "end": "504800"
  },
  {
    "text": "future containers or multiple containers",
    "start": "504800",
    "end": "506800"
  },
  {
    "text": "at the same time",
    "start": "506800",
    "end": "507759"
  },
  {
    "text": "to create a volume we use the docker",
    "start": "507759",
    "end": "509759"
  },
  {
    "text": "volume create command",
    "start": "509759",
    "end": "511280"
  },
  {
    "text": "now that we have this volume we can",
    "start": "511280",
    "end": "512880"
  },
  {
    "text": "mount it somewhere in our container when",
    "start": "512880",
    "end": "514640"
  },
  {
    "text": "we run it",
    "start": "514640",
    "end": "515518"
  },
  {
    "text": "multiple containers can mount this",
    "start": "515519",
    "end": "516880"
  },
  {
    "text": "volume simultaneously and access the",
    "start": "516880",
    "end": "518880"
  },
  {
    "text": "same set of files",
    "start": "518880",
    "end": "520080"
  },
  {
    "text": "and the files stick around after all the",
    "start": "520080",
    "end": "521760"
  },
  {
    "text": "containers are shut down",
    "start": "521760",
    "end": "523360"
  },
  {
    "text": "now that you know how to run a container",
    "start": "523360",
    "end": "524880"
  },
  {
    "text": "let's talk a little bit about debugging",
    "start": "524880",
    "end": "526880"
  },
  {
    "text": "when things don't go as planned you",
    "start": "526880",
    "end": "528240"
  },
  {
    "text": "might be wondering how do i inspect the",
    "start": "528240",
    "end": "529839"
  },
  {
    "text": "logs and how do i get into my container",
    "start": "529839",
    "end": "531760"
  },
  {
    "text": "and start interacting with the command",
    "start": "531760",
    "end": "533200"
  },
  {
    "start": "532000",
    "end": "575000"
  },
  {
    "text": "line",
    "start": "533200",
    "end": "533680"
  },
  {
    "text": "well this is where docker desktop really",
    "start": "533680",
    "end": "535360"
  },
  {
    "text": "comes in handy if you click on the",
    "start": "535360",
    "end": "536880"
  },
  {
    "text": "running container you can see all the",
    "start": "536880",
    "end": "538399"
  },
  {
    "text": "logs right there",
    "start": "538399",
    "end": "539279"
  },
  {
    "text": "and you can even search through them you",
    "start": "539279",
    "end": "541279"
  },
  {
    "text": "can also execute commands in your",
    "start": "541279",
    "end": "542720"
  },
  {
    "text": "container by clicking on the cli button",
    "start": "542720",
    "end": "544880"
  },
  {
    "text": "and keep in mind you can also do this",
    "start": "544880",
    "end": "546320"
  },
  {
    "text": "from your own command line using the",
    "start": "546320",
    "end": "547920"
  },
  {
    "text": "docker exec command",
    "start": "547920",
    "end": "549680"
  },
  {
    "text": "in any case it puts us in the root of",
    "start": "549680",
    "end": "551440"
  },
  {
    "text": "the file system of that container so we",
    "start": "551440",
    "end": "553279"
  },
  {
    "text": "can then ls to see files",
    "start": "553279",
    "end": "555040"
  },
  {
    "text": "or do whatever we want in our linux",
    "start": "555040",
    "end": "556800"
  },
  {
    "text": "environment that's useful to know but",
    "start": "556800",
    "end": "559040"
  },
  {
    "text": "one of the best things you can do to",
    "start": "559040",
    "end": "560160"
  },
  {
    "text": "keep your containers healthy",
    "start": "560160",
    "end": "561519"
  },
  {
    "text": "is to write simple maintainable micro",
    "start": "561519",
    "end": "563680"
  },
  {
    "text": "services each container should only run",
    "start": "563680",
    "end": "565760"
  },
  {
    "text": "one process",
    "start": "565760",
    "end": "566800"
  },
  {
    "text": "and if your app needs multiple processes",
    "start": "566800",
    "end": "568560"
  },
  {
    "text": "then you should use multiple containers",
    "start": "568560",
    "end": "570399"
  },
  {
    "text": "and docker has a tool designed just for",
    "start": "570399",
    "end": "572160"
  },
  {
    "text": "that called docker compose",
    "start": "572160",
    "end": "574000"
  },
  {
    "text": "it's just a tool for running multiple",
    "start": "574000",
    "end": "575680"
  },
  {
    "start": "575000",
    "end": "662000"
  },
  {
    "text": "docker containers at the same time",
    "start": "575680",
    "end": "577519"
  },
  {
    "text": "we already have a docker file for our",
    "start": "577519",
    "end": "578959"
  },
  {
    "text": "node app but let's imagine that our node",
    "start": "578959",
    "end": "580800"
  },
  {
    "text": "app also needs to access a mysql",
    "start": "580800",
    "end": "582959"
  },
  {
    "text": "database",
    "start": "582959",
    "end": "583839"
  },
  {
    "text": "and we also likely want a volume to",
    "start": "583839",
    "end": "585600"
  },
  {
    "text": "persist the database across multiple",
    "start": "585600",
    "end": "587360"
  },
  {
    "text": "containers",
    "start": "587360",
    "end": "588399"
  },
  {
    "text": "we can manage all that with docker",
    "start": "588399",
    "end": "589760"
  },
  {
    "text": "compose by creating a",
    "start": "589760",
    "end": "591880"
  },
  {
    "text": "docker-compose.yaml file in the root of",
    "start": "591880",
    "end": "593839"
  },
  {
    "text": "our project",
    "start": "593839",
    "end": "594880"
  },
  {
    "text": "inside that file we have a services",
    "start": "594880",
    "end": "596640"
  },
  {
    "text": "object where each key",
    "start": "596640",
    "end": "598240"
  },
  {
    "text": "in that object represents a different",
    "start": "598240",
    "end": "600000"
  },
  {
    "text": "container that we want to run",
    "start": "600000",
    "end": "601519"
  },
  {
    "text": "we'll use web to define our node.js app",
    "start": "601519",
    "end": "603600"
  },
  {
    "text": "that we've already built",
    "start": "603600",
    "end": "604800"
  },
  {
    "text": "and then we'll use build to point it to",
    "start": "604800",
    "end": "606640"
  },
  {
    "text": "the current working directory which is",
    "start": "606640",
    "end": "608160"
  },
  {
    "text": "where it can find the docker file",
    "start": "608160",
    "end": "610240"
  },
  {
    "text": "and then we'll also define the port",
    "start": "610240",
    "end": "611519"
  },
  {
    "text": "forwarding configuration here as well",
    "start": "611519",
    "end": "613360"
  },
  {
    "text": "then we have a separate container called",
    "start": "613360",
    "end": "615040"
  },
  {
    "text": "db which is our mysql database process",
    "start": "615040",
    "end": "618399"
  },
  {
    "text": "after services we'll also define a",
    "start": "618399",
    "end": "620399"
  },
  {
    "text": "volume to store the database data across",
    "start": "620399",
    "end": "622720"
  },
  {
    "text": "multiple containers",
    "start": "622720",
    "end": "623920"
  },
  {
    "text": "and then we can mount that volume in our",
    "start": "623920",
    "end": "625519"
  },
  {
    "text": "db container and hopefully you're",
    "start": "625519",
    "end": "627279"
  },
  {
    "text": "starting to see how much",
    "start": "627279",
    "end": "628240"
  },
  {
    "text": "easier it is to define this stuff as",
    "start": "628240",
    "end": "629760"
  },
  {
    "text": "yaml as opposed to writing it out as",
    "start": "629760",
    "end": "632000"
  },
  {
    "text": "individual commands",
    "start": "632000",
    "end": "633279"
  },
  {
    "text": "and now that we have this configuration",
    "start": "633279",
    "end": "634720"
  },
  {
    "text": "set we can run docker compose up from",
    "start": "634720",
    "end": "636800"
  },
  {
    "text": "the command line which will find this",
    "start": "636800",
    "end": "638399"
  },
  {
    "text": "file",
    "start": "638399",
    "end": "638880"
  },
  {
    "text": "and run all the containers together we",
    "start": "638880",
    "end": "640800"
  },
  {
    "text": "can mess around with our app for a",
    "start": "640800",
    "end": "642000"
  },
  {
    "text": "little while",
    "start": "642000",
    "end": "642560"
  },
  {
    "text": "and then run docker compose down to shut",
    "start": "642560",
    "end": "644800"
  },
  {
    "text": "down all the containers together",
    "start": "644800",
    "end": "646480"
  },
  {
    "text": "i'm going to go ahead and wrap things up",
    "start": "646480",
    "end": "647680"
  },
  {
    "text": "there if this video helped you please",
    "start": "647680",
    "end": "649200"
  },
  {
    "text": "like and subscribe and consider becoming",
    "start": "649200",
    "end": "650959"
  },
  {
    "text": "a pro member at fireship io",
    "start": "650959",
    "end": "652880"
  },
  {
    "text": "where we use docker in a variety of",
    "start": "652880",
    "end": "654560"
  },
  {
    "text": "different project-based courses",
    "start": "654560",
    "end": "656240"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "656240",
    "end": "658079"
  },
  {
    "text": "in the next one",
    "start": "658079",
    "end": "661839"
  }
]