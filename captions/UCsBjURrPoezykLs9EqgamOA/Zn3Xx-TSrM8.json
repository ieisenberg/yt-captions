[
  {
    "text": "realtime map features are part of some",
    "start": "280",
    "end": "2280"
  },
  {
    "text": "of the most successful apps in the world",
    "start": "2280",
    "end": "4120"
  },
  {
    "text": "such as Uber ways and Pok√©mon go in this",
    "start": "4120",
    "end": "7799"
  },
  {
    "text": "episode I'm going to show you how to",
    "start": "7799",
    "end": "9040"
  },
  {
    "text": "start building your own real-time map",
    "start": "9040",
    "end": "10759"
  },
  {
    "text": "features using the mapbox API with",
    "start": "10759",
    "end": "13360"
  },
  {
    "text": "angular 4 on the front end and Firebase",
    "start": "13360",
    "end": "15360"
  },
  {
    "text": "on the back end the demo you're looking",
    "start": "15360",
    "end": "17480"
  },
  {
    "text": "at here allows users to post messages on",
    "start": "17480",
    "end": "19880"
  },
  {
    "text": "the map that are associated with",
    "start": "19880",
    "end": "21359"
  },
  {
    "text": "specific GPS coordinates then the user",
    "start": "21359",
    "end": "24039"
  },
  {
    "text": "can click on the message and fly to",
    "start": "24039",
    "end": "25920"
  },
  {
    "text": "wherever those GPS coordinates happen to",
    "start": "25920",
    "end": "27760"
  },
  {
    "text": "be the important thing to notice here is",
    "start": "27760",
    "end": "30119"
  },
  {
    "text": "that the data in Firebase and the map",
    "start": "30119",
    "end": "32078"
  },
  {
    "text": "are staying in sync in real time so any",
    "start": "32079",
    "end": "34719"
  },
  {
    "text": "user observing this map will have access",
    "start": "34719",
    "end": "36520"
  },
  {
    "text": "to the latest data as soon as it's saved",
    "start": "36520",
    "end": "38320"
  },
  {
    "text": "to the Firebase database before we get",
    "start": "38320",
    "end": "40440"
  },
  {
    "text": "into the code I want to share a helpful",
    "start": "40440",
    "end": "42200"
  },
  {
    "text": "tutorial from West Doyle he spends a",
    "start": "42200",
    "end": "44480"
  },
  {
    "text": "full hour building a RunKeeper inspired",
    "start": "44480",
    "end": "46840"
  },
  {
    "text": "angular 4 app which is a great resource",
    "start": "46840",
    "end": "49039"
  },
  {
    "text": "if you're working with mapbox you can",
    "start": "49039",
    "end": "50600"
  },
  {
    "text": "find the link in the description below",
    "start": "50600",
    "end": "53399"
  },
  {
    "text": "the first step is to sign up for a free",
    "start": "53399",
    "end": "55239"
  },
  {
    "text": "mapbox account and then retrieve your",
    "start": "55239",
    "end": "57600"
  },
  {
    "text": "API access token during the initial",
    "start": "57600",
    "end": "60600"
  },
  {
    "text": "setup mapbox should give you a link to",
    "start": "60600",
    "end": "62760"
  },
  {
    "text": "the CSS that you can include in the",
    "start": "62760",
    "end": "64760"
  },
  {
    "text": "index.html file and then you'll want to",
    "start": "64760",
    "end": "68080"
  },
  {
    "text": "add your access token to your",
    "start": "68080",
    "end": "70080"
  },
  {
    "text": "environment file then you can run npm",
    "start": "70080",
    "end": "72560"
  },
  {
    "text": "install mapbox DGL mapbox has some good",
    "start": "72560",
    "end": "76000"
  },
  {
    "text": "default Maps out of the box but you can",
    "start": "76000",
    "end": "77799"
  },
  {
    "text": "customize them to an infinite number of",
    "start": "77799",
    "end": "80119"
  },
  {
    "text": "combinations in this case I'm using the",
    "start": "80119",
    "end": "82320"
  },
  {
    "text": "cogram app to mimic the color pattern in",
    "start": "82320",
    "end": "84759"
  },
  {
    "text": "an image then you can use the mapbox",
    "start": "84759",
    "end": "87200"
  },
  {
    "text": "editor to customize all the finer",
    "start": "87200",
    "end": "89159"
  },
  {
    "text": "details Within in the map one thing",
    "start": "89159",
    "end": "90880"
  },
  {
    "text": "that's really important when working",
    "start": "90880",
    "end": "92079"
  },
  {
    "text": "with any geolocation data is to make",
    "start": "92079",
    "end": "94320"
  },
  {
    "text": "sure it follows a consistent format in",
    "start": "94320",
    "end": "96799"
  },
  {
    "text": "this example we're going to create a",
    "start": "96799",
    "end": "97960"
  },
  {
    "text": "typescript interface to ensure that it",
    "start": "97960",
    "end": "100079"
  },
  {
    "text": "follows the geojson spec geolocation",
    "start": "100079",
    "end": "103720"
  },
  {
    "text": "data is often shared between multiple",
    "start": "103720",
    "end": "105479"
  },
  {
    "text": "platforms so we want to make sure our",
    "start": "105479",
    "end": "107360"
  },
  {
    "text": "app is following the same spec that",
    "start": "107360",
    "end": "108880"
  },
  {
    "text": "every other API is going to follow the",
    "start": "108880",
    "end": "111240"
  },
  {
    "text": "most important aspect here is the",
    "start": "111240",
    "end": "112759"
  },
  {
    "text": "geometry which is just the GPS",
    "start": "112759",
    "end": "114880"
  },
  {
    "text": "coordinates of a given location we're",
    "start": "114880",
    "end": "117039"
  },
  {
    "text": "also going to create a feature",
    "start": "117039",
    "end": "118399"
  },
  {
    "text": "collection class which is is part of the",
    "start": "118399",
    "end": "120200"
  },
  {
    "text": "geojson spec and it's essentially just",
    "start": "120200",
    "end": "122759"
  },
  {
    "text": "an array of geojson data now we can",
    "start": "122759",
    "end": "125799"
  },
  {
    "text": "start building the service the service",
    "start": "125799",
    "end": "128000"
  },
  {
    "text": "is going to serve two purposes first it",
    "start": "128000",
    "end": "130039"
  },
  {
    "text": "will initialize the map with the API key",
    "start": "130039",
    "end": "133360"
  },
  {
    "text": "and it will also handle all the data",
    "start": "133360",
    "end": "135120"
  },
  {
    "text": "retrieval and updating with Firebase so",
    "start": "135120",
    "end": "137760"
  },
  {
    "text": "we import the angular fire database as",
    "start": "137760",
    "end": "140040"
  },
  {
    "text": "well as our geojson class and the mapbox",
    "start": "140040",
    "end": "142760"
  },
  {
    "text": "GL",
    "start": "142760",
    "end": "144000"
  },
  {
    "text": "library then we can add the access token",
    "start": "144000",
    "end": "146879"
  },
  {
    "text": "from our environment to mapbox and the",
    "start": "146879",
    "end": "148760"
  },
  {
    "text": "Constructor the get markers method will",
    "start": "148760",
    "end": "151440"
  },
  {
    "text": "just return a Firebase list observable",
    "start": "151440",
    "end": "154160"
  },
  {
    "text": "and then when we create a marker it'll",
    "start": "154160",
    "end": "155840"
  },
  {
    "text": "have our gojon format and it will go to",
    "start": "155840",
    "end": "159080"
  },
  {
    "text": "the markers list and lastly we add a",
    "start": "159080",
    "end": "161920"
  },
  {
    "text": "method to remove a marker now we can",
    "start": "161920",
    "end": "164239"
  },
  {
    "text": "build the component there's going to be",
    "start": "164239",
    "end": "165879"
  },
  {
    "text": "a lot going on here so I recommend",
    "start": "165879",
    "end": "167680"
  },
  {
    "text": "pausing the video or checking out the",
    "start": "167680",
    "end": "169239"
  },
  {
    "text": "full lesson on angular firebase.com to",
    "start": "169239",
    "end": "171319"
  },
  {
    "text": "really get a full grasp of everything",
    "start": "171319",
    "end": "173720"
  },
  {
    "text": "after importing the mapbox library and",
    "start": "173720",
    "end": "175519"
  },
  {
    "text": "our map service we defined a variable",
    "start": "175519",
    "end": "177480"
  },
  {
    "text": "for the map itself then add some default",
    "start": "177480",
    "end": "180360"
  },
  {
    "text": "values for the map style and the",
    "start": "180360",
    "end": "182640"
  },
  {
    "text": "latitude and longitude The Source",
    "start": "182640",
    "end": "184680"
  },
  {
    "text": "variable will be the live connection",
    "start": "184680",
    "end": "186680"
  },
  {
    "text": "with mapbox and the markers will supply",
    "start": "186680",
    "end": "189239"
  },
  {
    "text": "the data that updates that Source we",
    "start": "189239",
    "end": "191480"
  },
  {
    "text": "inject the service in the Constructor",
    "start": "191480",
    "end": "193239"
  },
  {
    "text": "and then retrieve the markers from",
    "start": "193239",
    "end": "194720"
  },
  {
    "text": "Firebase during NG on a knit then we'll",
    "start": "194720",
    "end": "197360"
  },
  {
    "text": "initialize the map but first let's check",
    "start": "197360",
    "end": "199360"
  },
  {
    "text": "out the HTML we have a div with an ID of",
    "start": "199360",
    "end": "201959"
  },
  {
    "text": "map this div will be replaced with the",
    "start": "201959",
    "end": "203720"
  },
  {
    "text": "contents the map itself then we Loop",
    "start": "203720",
    "end": "206519"
  },
  {
    "text": "over all the markers in the database",
    "start": "206519",
    "end": "208319"
  },
  {
    "text": "when the user clicks on a marker it'll",
    "start": "208319",
    "end": "210280"
  },
  {
    "text": "fly to that location on the map and they",
    "start": "210280",
    "end": "212920"
  },
  {
    "text": "also have the option to remove a marker",
    "start": "212920",
    "end": "215799"
  },
  {
    "text": "and the last thing we'll do is add a",
    "start": "215799",
    "end": "217200"
  },
  {
    "text": "text input for the user to enter the",
    "start": "217200",
    "end": "219159"
  },
  {
    "text": "message they want placed on the map this",
    "start": "219159",
    "end": "221040"
  },
  {
    "text": "will just be bound to the message",
    "start": "221040",
    "end": "222280"
  },
  {
    "text": "variable with NG",
    "start": "222280",
    "end": "224480"
  },
  {
    "text": "model so the end result is the user",
    "start": "224480",
    "end": "226879"
  },
  {
    "text": "types in a message clicks the map and",
    "start": "226879",
    "end": "229000"
  },
  {
    "text": "that appears on the message as well as",
    "start": "229000",
    "end": "230599"
  },
  {
    "text": "being saved to Firebase then any user",
    "start": "230599",
    "end": "233079"
  },
  {
    "text": "observing this data can click it and",
    "start": "233079",
    "end": "234959"
  },
  {
    "text": "it'll fly to that exact location so now",
    "start": "234959",
    "end": "237760"
  },
  {
    "text": "back in the typescript when we ini",
    "start": "237760",
    "end": "239680"
  },
  {
    "text": "initialize a map we want to figure out",
    "start": "239680",
    "end": "241200"
  },
  {
    "text": "the user's location if possible and",
    "start": "241200",
    "end": "243439"
  },
  {
    "text": "center the map on their exact location",
    "start": "243439",
    "end": "245400"
  },
  {
    "text": "if we can we do that by calling",
    "start": "245400",
    "end": "247760"
  },
  {
    "text": "Navigator",
    "start": "247760",
    "end": "249120"
  },
  {
    "text": "geolocation and that'll give us a",
    "start": "249120",
    "end": "250959"
  },
  {
    "text": "promise and when that promise returns it",
    "start": "250959",
    "end": "253200"
  },
  {
    "text": "should have the coordinates of that user",
    "start": "253200",
    "end": "255879"
  },
  {
    "text": "then we can use the fly to Method from",
    "start": "255879",
    "end": "257519"
  },
  {
    "text": "mapbox to fly to that",
    "start": "257519",
    "end": "259519"
  },
  {
    "text": "location to define the map variable we",
    "start": "259519",
    "end": "262199"
  },
  {
    "text": "call the map class and pass some",
    "start": "262199",
    "end": "264440"
  },
  {
    "text": "configuration options to it the",
    "start": "264440",
    "end": "266680"
  },
  {
    "text": "container corresponds to the div with an",
    "start": "266680",
    "end": "268759"
  },
  {
    "text": "ID of map in the HTML mapbox also has a",
    "start": "268759",
    "end": "272199"
  },
  {
    "text": "bunch of optional parameters you can",
    "start": "272199",
    "end": "273759"
  },
  {
    "text": "pass here so check those out in the",
    "start": "273759",
    "end": "275759"
  },
  {
    "text": "documentation you can also add",
    "start": "275759",
    "end": "277360"
  },
  {
    "text": "additional features to the app here we",
    "start": "277360",
    "end": "279199"
  },
  {
    "text": "add some additional navigation controls",
    "start": "279199",
    "end": "282039"
  },
  {
    "text": "in addition to that you can register",
    "start": "282039",
    "end": "283639"
  },
  {
    "text": "event listeners here we listen for the",
    "start": "283639",
    "end": "286400"
  },
  {
    "text": "click event which will return the GPS",
    "start": "286400",
    "end": "288639"
  },
  {
    "text": "coordinates of wherever that user",
    "start": "288639",
    "end": "290000"
  },
  {
    "text": "clicked so we can then use that to",
    "start": "290000",
    "end": "292199"
  },
  {
    "text": "update the Firebase database first we",
    "start": "292199",
    "end": "294800"
  },
  {
    "text": "convert it to geojson format and then we",
    "start": "294800",
    "end": "297720"
  },
  {
    "text": "add an optional message parameter that's",
    "start": "297720",
    "end": "299680"
  },
  {
    "text": "the message the user enters in the form",
    "start": "299680",
    "end": "302039"
  },
  {
    "text": "and then we send that to the Firebase",
    "start": "302039",
    "end": "304680"
  },
  {
    "text": "database so at this point we just need",
    "start": "304680",
    "end": "306880"
  },
  {
    "text": "to connect this real-time data stream",
    "start": "306880",
    "end": "308800"
  },
  {
    "text": "with the map itself when it's finished",
    "start": "308800",
    "end": "311000"
  },
  {
    "text": "loading it'll trigger the load event and",
    "start": "311000",
    "end": "313479"
  },
  {
    "text": "then we can start connecting that stream",
    "start": "313479",
    "end": "315639"
  },
  {
    "text": "so we call add Source on the map with",
    "start": "315639",
    "end": "317360"
  },
  {
    "text": "the name of Firebase and just pass it in",
    "start": "317360",
    "end": "319759"
  },
  {
    "text": "empty geojson feature collection then we",
    "start": "319759",
    "end": "322880"
  },
  {
    "text": "can set the source as a variable on the",
    "start": "322880",
    "end": "324600"
  },
  {
    "text": "component itself to start feeding data",
    "start": "324600",
    "end": "327319"
  },
  {
    "text": "to the source we subscribe to the",
    "start": "327319",
    "end": "329000"
  },
  {
    "text": "markers observable then we convert the",
    "start": "329000",
    "end": "331240"
  },
  {
    "text": "data to a future collection and call set",
    "start": "331240",
    "end": "333720"
  },
  {
    "text": "data on the source that will push the",
    "start": "333720",
    "end": "336080"
  },
  {
    "text": "latest data to the end user viewing the",
    "start": "336080",
    "end": "338560"
  },
  {
    "text": "map at this point we just need to Define",
    "start": "338560",
    "end": "341080"
  },
  {
    "text": "some styling for the markers themselves",
    "start": "341080",
    "end": "343960"
  },
  {
    "text": "mapbox has a very large API for defining",
    "start": "343960",
    "end": "346319"
  },
  {
    "text": "all these Styles so you can pretty much",
    "start": "346319",
    "end": "348000"
  },
  {
    "text": "customize them to look any way you want",
    "start": "348000",
    "end": "350280"
  },
  {
    "text": "you can also interpolate any data that",
    "start": "350280",
    "end": "351960"
  },
  {
    "text": "was added to the properties field of the",
    "start": "351960",
    "end": "354360"
  },
  {
    "text": "geojson itself which we're doing here",
    "start": "354360",
    "end": "356360"
  },
  {
    "text": "with the message with single curly",
    "start": "356360",
    "end": "358479"
  },
  {
    "text": "braces and now just to wrap this up",
    "start": "358479",
    "end": "360800"
  },
  {
    "text": "we'll add a couple of helper methods to",
    "start": "360800",
    "end": "362639"
  },
  {
    "text": "remove markers as well as fly to various",
    "start": "362639",
    "end": "365199"
  },
  {
    "text": "locations on the",
    "start": "365199",
    "end": "366759"
  },
  {
    "text": "map now we should be able to type in the",
    "start": "366759",
    "end": "369560"
  },
  {
    "text": "text and then add it to the map by",
    "start": "369560",
    "end": "371280"
  },
  {
    "text": "clicking on whatever location we want",
    "start": "371280",
    "end": "373280"
  },
  {
    "text": "and have everything updated in real",
    "start": "373280",
    "end": "377000"
  },
  {
    "text": "time that's it for realtime maps with",
    "start": "377160",
    "end": "379759"
  },
  {
    "text": "mapbox if this video helped you please",
    "start": "379759",
    "end": "381800"
  },
  {
    "text": "like And subscribe and if you want to",
    "start": "381800",
    "end": "383800"
  },
  {
    "text": "support the channel consider becoming a",
    "start": "383800",
    "end": "385400"
  },
  {
    "text": "pro subscriber at angular firebase.com",
    "start": "385400",
    "end": "387639"
  },
  {
    "text": "you can talk to me directly on our slack",
    "start": "387639",
    "end": "389919"
  },
  {
    "text": "team and I'll help you figure out",
    "start": "389919",
    "end": "391520"
  },
  {
    "text": "whatever custom map integration you're",
    "start": "391520",
    "end": "393199"
  },
  {
    "text": "going for thanks for watching and I'll",
    "start": "393199",
    "end": "395520"
  },
  {
    "text": "see you next",
    "start": "395520",
    "end": "396690"
  },
  {
    "text": "[Music]",
    "start": "396690",
    "end": "404649"
  },
  {
    "text": "time",
    "start": "406440",
    "end": "409440"
  }
]