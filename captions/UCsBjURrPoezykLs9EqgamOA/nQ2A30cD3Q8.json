[
  {
    "text": "it is April 12 2023 and you are watching",
    "start": "79",
    "end": "3540"
  },
  {
    "text": "the code report angular is and always",
    "start": "3540",
    "end": "5580"
  },
  {
    "text": "will be the greatest framework to ever",
    "start": "5580",
    "end": "7200"
  },
  {
    "text": "grace the JavaScript landscape but it",
    "start": "7200",
    "end": "9059"
  },
  {
    "text": "can't seem to get no respect back in",
    "start": "9059",
    "end": "10740"
  },
  {
    "text": "2010 angularjs was the first framework",
    "start": "10740",
    "end": "12960"
  },
  {
    "text": "to popularize the idea of declarative",
    "start": "12960",
    "end": "14880"
  },
  {
    "text": "components but react gets all the",
    "start": "14880",
    "end": "16800"
  },
  {
    "text": "respect in 2014 when viewjs came out it",
    "start": "16800",
    "end": "19140"
  },
  {
    "text": "was basically just angular light when",
    "start": "19140",
    "end": "20699"
  },
  {
    "text": "angular 2 embraced typescript back in",
    "start": "20699",
    "end": "22500"
  },
  {
    "text": "2016. everybody laughed at it and said",
    "start": "22500",
    "end": "24480"
  },
  {
    "text": "typescript was for microsofty losers but",
    "start": "24480",
    "end": "26760"
  },
  {
    "text": "angular gets no respect for being light",
    "start": "26760",
    "end": "28380"
  },
  {
    "text": "years ahead of its time everybody loves",
    "start": "28380",
    "end": "29939"
  },
  {
    "text": "spelled stores but guess he was doing",
    "start": "29939",
    "end": "31439"
  },
  {
    "text": "reactive patterns like that years before",
    "start": "31439",
    "end": "33059"
  },
  {
    "text": "with rxjs a framework called angular",
    "start": "33059",
    "end": "35160"
  },
  {
    "text": "that gets no respect oh that's the story",
    "start": "35160",
    "end": "36899"
  },
  {
    "text": "of my life no respect people on the",
    "start": "36899",
    "end": "38700"
  },
  {
    "text": "internet love to hate it but angular is",
    "start": "38700",
    "end": "40440"
  },
  {
    "text": "still extremely popular with",
    "start": "40440",
    "end": "41520"
  },
  {
    "text": "professional developers and Enterprise",
    "start": "41520",
    "end": "42780"
  },
  {
    "text": "second only to react over the last five",
    "start": "42780",
    "end": "45059"
  },
  {
    "text": "years its focus has been on reliability",
    "start": "45059",
    "end": "47040"
  },
  {
    "text": "and stability and as a result it stopped",
    "start": "47040",
    "end": "49440"
  },
  {
    "text": "pumping out game-changing features but",
    "start": "49440",
    "end": "51239"
  },
  {
    "text": "in 2023 many people are forecasting an",
    "start": "51239",
    "end": "53700"
  },
  {
    "text": "angular Renaissance because the",
    "start": "53700",
    "end": "55140"
  },
  {
    "text": "framework is in the process of",
    "start": "55140",
    "end": "56340"
  },
  {
    "text": "introducing the biggest change it's seen",
    "start": "56340",
    "end": "57780"
  },
  {
    "text": "in years with a new feature called",
    "start": "57780",
    "end": "59280"
  },
  {
    "text": "signals the framework was sick and tired",
    "start": "59280",
    "end": "61140"
  },
  {
    "text": "of getting no respect so now it's",
    "start": "61140",
    "end": "62460"
  },
  {
    "text": "turning the tables and implementing a",
    "start": "62460",
    "end": "64080"
  },
  {
    "text": "feature inspired by Frameworks like",
    "start": "64080",
    "end": "65580"
  },
  {
    "text": "preact solid.js and view before we get",
    "start": "65580",
    "end": "68040"
  },
  {
    "text": "into it though I want to explain",
    "start": "68040",
    "end": "69180"
  },
  {
    "text": "something important the JavaScript",
    "start": "69180",
    "end": "70740"
  },
  {
    "text": "framework Wars are largely an illusion",
    "start": "70740",
    "end": "72600"
  },
  {
    "text": "although they do compete for the mine",
    "start": "72600",
    "end": "74159"
  },
  {
    "text": "share of developers that creators and",
    "start": "74159",
    "end": "75900"
  },
  {
    "text": "maintainers all go to the same",
    "start": "75900",
    "end": "77100"
  },
  {
    "text": "conferences hang out together and work",
    "start": "77100",
    "end": "79020"
  },
  {
    "text": "together like mishko the creator of",
    "start": "79020",
    "end": "80820"
  },
  {
    "text": "angular is now working on the quick",
    "start": "80820",
    "end": "82259"
  },
  {
    "text": "framework which itself uses signals when",
    "start": "82259",
    "end": "84479"
  },
  {
    "text": "you see people bashing a free and open",
    "start": "84479",
    "end": "86100"
  },
  {
    "text": "source framework it's usually just the",
    "start": "86100",
    "end": "87720"
  },
  {
    "text": "result of tribalism and paradoxically",
    "start": "87720",
    "end": "89520"
  },
  {
    "text": "we're more tribal than ever thanks to",
    "start": "89520",
    "end": "91140"
  },
  {
    "text": "the social media that connects us all",
    "start": "91140",
    "end": "92640"
  },
  {
    "text": "but the reality is that all these",
    "start": "92640",
    "end": "94259"
  },
  {
    "text": "Frameworks collaborate to make web",
    "start": "94259",
    "end": "95759"
  },
  {
    "text": "development better for all of us and for",
    "start": "95759",
    "end": "97619"
  },
  {
    "text": "that they all deserve our respect the",
    "start": "97619",
    "end": "99420"
  },
  {
    "text": "only exception is react which is a",
    "start": "99420",
    "end": "101340"
  },
  {
    "text": "adhesive and I hope where the doctor's",
    "start": "101340",
    "end": "104040"
  },
  {
    "text": "like until it has to use itself as a but",
    "start": "104040",
    "end": "106920"
  },
  {
    "text": "what are angular signals exactly a",
    "start": "106920",
    "end": "109079"
  },
  {
    "text": "signal is a new reactive primitive or",
    "start": "109079",
    "end": "111060"
  },
  {
    "text": "data structure that can handle values",
    "start": "111060",
    "end": "112799"
  },
  {
    "text": "that change over time like the state of",
    "start": "112799",
    "end": "114840"
  },
  {
    "text": "your application currently angular uses",
    "start": "114840",
    "end": "116700"
  },
  {
    "text": "a library called zonejs to handle State",
    "start": "116700",
    "end": "119040"
  },
  {
    "text": "changes in your application it works in",
    "start": "119040",
    "end": "120899"
  },
  {
    "text": "a kind of magical way to track various",
    "start": "120899",
    "end": "122820"
  },
  {
    "text": "browser events then automatically check",
    "start": "122820",
    "end": "124680"
  },
  {
    "text": "the component tree when a change might",
    "start": "124680",
    "end": "126180"
  },
  {
    "text": "have happened it's nice because you",
    "start": "126180",
    "end": "127680"
  },
  {
    "text": "don't need hooks like set State and",
    "start": "127680",
    "end": "129119"
  },
  {
    "text": "react but it can lead to Performance",
    "start": "129119",
    "end": "130800"
  },
  {
    "text": "issues and also weird edge cases like",
    "start": "130800",
    "end": "132840"
  },
  {
    "text": "the dreaded expression changed after",
    "start": "132840",
    "end": "134340"
  },
  {
    "text": "it's been checked error but now with",
    "start": "134340",
    "end": "135900"
  },
  {
    "text": "signals change detection will be much",
    "start": "135900",
    "end": "137459"
  },
  {
    "text": "more precise and surgical that's a nice",
    "start": "137459",
    "end": "139440"
  },
  {
    "text": "benefit but angular is already tightly",
    "start": "139440",
    "end": "141120"
  },
  {
    "text": "integrated with rxjs which has things",
    "start": "141120",
    "end": "143340"
  },
  {
    "text": "like observables and behavior subjects",
    "start": "143340",
    "end": "145319"
  },
  {
    "text": "that on the surface look very similar to",
    "start": "145319",
    "end": "146940"
  },
  {
    "text": "signals they're both capable of handling",
    "start": "146940",
    "end": "148560"
  },
  {
    "text": "a stream of values that change over time",
    "start": "148560",
    "end": "150540"
  },
  {
    "text": "with an observable though you need to",
    "start": "150540",
    "end": "152280"
  },
  {
    "text": "call a subscribe method a signal on the",
    "start": "152280",
    "end": "154260"
  },
  {
    "text": "other hand you call directly like a",
    "start": "154260",
    "end": "155879"
  },
  {
    "text": "function that may seem trivial but it",
    "start": "155879",
    "end": "157739"
  },
  {
    "text": "dramatically simplifies the way things",
    "start": "157739",
    "end": "159180"
  },
  {
    "text": "are done in angular for example to",
    "start": "159180",
    "end": "160920"
  },
  {
    "text": "create computed values you kind of need",
    "start": "160920",
    "end": "162420"
  },
  {
    "text": "to be an rxjs wizard who understands",
    "start": "162420",
    "end": "164519"
  },
  {
    "text": "observables and behavior subjects and",
    "start": "164519",
    "end": "166500"
  },
  {
    "text": "then how to pipe in different operator",
    "start": "166500",
    "end": "168060"
  },
  {
    "text": "functions to map one value to another",
    "start": "168060",
    "end": "170040"
  },
  {
    "text": "this code can get extremely complex and",
    "start": "170040",
    "end": "172200"
  },
  {
    "text": "requires Hungarian notation with dollar",
    "start": "172200",
    "end": "173879"
  },
  {
    "text": "signs at the end just to keep things",
    "start": "173879",
    "end": "175379"
  },
  {
    "text": "straight signals on the other hand can",
    "start": "175379",
    "end": "177060"
  },
  {
    "text": "use this computed function to make the",
    "start": "177060",
    "end": "178739"
  },
  {
    "text": "code more concise and readable the same",
    "start": "178739",
    "end": "180540"
  },
  {
    "text": "is true for side effects which can be",
    "start": "180540",
    "end": "182280"
  },
  {
    "text": "executed with this effect function",
    "start": "182280",
    "end": "183660"
  },
  {
    "text": "signals can also be writable which means",
    "start": "183660",
    "end": "185700"
  },
  {
    "text": "you can change the value manually with",
    "start": "185700",
    "end": "187379"
  },
  {
    "text": "either set or update so overall this",
    "start": "187379",
    "end": "189540"
  },
  {
    "text": "provides a much more approachable API",
    "start": "189540",
    "end": "191340"
  },
  {
    "text": "for handling reactive data not much",
    "start": "191340",
    "end": "193260"
  },
  {
    "text": "different than solid or vue.js however",
    "start": "193260",
    "end": "195360"
  },
  {
    "text": "signals are still fully compatible with",
    "start": "195360",
    "end": "197099"
  },
  {
    "text": "rxjs for handling more complex streams",
    "start": "197099",
    "end": "199500"
  },
  {
    "text": "of data overall signals look awesome but",
    "start": "199500",
    "end": "201420"
  },
  {
    "text": "that's not the only cool thing about",
    "start": "201420",
    "end": "202560"
  },
  {
    "text": "modern angular one of its most hated",
    "start": "202560",
    "end": "204180"
  },
  {
    "text": "features was the NG module which you had",
    "start": "204180",
    "end": "206340"
  },
  {
    "text": "to learn about before you could even",
    "start": "206340",
    "end": "207360"
  },
  {
    "text": "build a damp component but now it",
    "start": "207360",
    "end": "208920"
  },
  {
    "text": "supports Standalone components to",
    "start": "208920",
    "end": "210420"
  },
  {
    "text": "eliminate this requirement in addition",
    "start": "210420",
    "end": "211920"
  },
  {
    "text": "there are projects like analog gaining",
    "start": "211920",
    "end": "213599"
  },
  {
    "text": "steam which is a nexjs like meta",
    "start": "213599",
    "end": "215640"
  },
  {
    "text": "framework with file system routing for",
    "start": "215640",
    "end": "217319"
  },
  {
    "text": "SSR so to end this video I'll leave you",
    "start": "217319",
    "end": "219540"
  },
  {
    "text": "with a question is angular a great",
    "start": "219540",
    "end": "221340"
  },
  {
    "text": "framework or the greatest framework of",
    "start": "221340",
    "end": "223140"
  },
  {
    "text": "all time this has been the code report",
    "start": "223140",
    "end": "224580"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "224580",
    "end": "226620"
  },
  {
    "text": "in the next one",
    "start": "226620",
    "end": "229099"
  }
]