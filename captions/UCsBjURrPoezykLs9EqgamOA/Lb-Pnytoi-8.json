[
  {
    "text": "[Music]",
    "start": "0",
    "end": "4660"
  },
  {
    "text": "imagine if you woke up one day and",
    "start": "6140",
    "end": "7980"
  },
  {
    "text": "you're fired based bill went from zero",
    "start": "7980",
    "end": "9809"
  },
  {
    "text": "to thirty thousand US dollars well",
    "start": "9809",
    "end": "12090"
  },
  {
    "text": "that's exactly what happened to a",
    "start": "12090",
    "end": "13170"
  },
  {
    "text": "start-up in Colombia that scaled up to",
    "start": "13170",
    "end": "14790"
  },
  {
    "text": "about two million daily active users",
    "start": "14790",
    "end": "16890"
  },
  {
    "text": "they really just made one seemingly",
    "start": "16890",
    "end": "18779"
  },
  {
    "text": "minor mistake and with this video I want",
    "start": "18779",
    "end": "21029"
  },
  {
    "text": "to show you how we can take their thirty",
    "start": "21029",
    "end": "22380"
  },
  {
    "text": "thousand dollar bill and reduce it down",
    "start": "22380",
    "end": "23970"
  },
  {
    "text": "to about twenty five bucks if you're new",
    "start": "23970",
    "end": "26519"
  },
  {
    "text": "to the channel make sure to LIKE and",
    "start": "26519",
    "end": "27480"
  },
  {
    "text": "subscribe and you can grab the source",
    "start": "27480",
    "end": "29189"
  },
  {
    "text": "code for this project at angular",
    "start": "29189",
    "end": "30750"
  },
  {
    "text": "firebase com",
    "start": "30750",
    "end": "32040"
  },
  {
    "text": "so you may have already seen this",
    "start": "32040",
    "end": "33690"
  },
  {
    "text": "article because it kind of went viral",
    "start": "33690",
    "end": "35160"
  },
  {
    "text": "last week on hacker noon but the source",
    "start": "35160",
    "end": "37860"
  },
  {
    "text": "of this hi Bill was because they managed",
    "start": "37860",
    "end": "39420"
  },
  {
    "text": "to make over 40 billion requests to",
    "start": "39420",
    "end": "41129"
  },
  {
    "text": "firestore in less than 48 hours so how",
    "start": "41129",
    "end": "44190"
  },
  {
    "text": "is that even possible when you only have",
    "start": "44190",
    "end": "45780"
  },
  {
    "text": "two million users that means every user",
    "start": "45780",
    "end": "47879"
  },
  {
    "text": "would have to make about twenty thousand",
    "start": "47879",
    "end": "49590"
  },
  {
    "text": "document reads the mistake they made is",
    "start": "49590",
    "end": "52170"
  },
  {
    "text": "that they needed to calculate the total",
    "start": "52170",
    "end": "53910"
  },
  {
    "text": "for every crowdfunding campaign but they",
    "start": "53910",
    "end": "56340"
  },
  {
    "text": "were doing this by reading every single",
    "start": "56340",
    "end": "57809"
  },
  {
    "text": "document in a collection for every user",
    "start": "57809",
    "end": "60390"
  },
  {
    "text": "on the site so as they got more users",
    "start": "60390",
    "end": "62640"
  },
  {
    "text": "and more payments the problem just",
    "start": "62640",
    "end": "64170"
  },
  {
    "text": "compounded to result in a shitload of",
    "start": "64170",
    "end": "66210"
  },
  {
    "text": "document reads not only is that super",
    "start": "66210",
    "end": "68880"
  },
  {
    "text": "expensive but it also results in a lot",
    "start": "68880",
    "end": "70619"
  },
  {
    "text": "of latency on the client and that's",
    "start": "70619",
    "end": "72420"
  },
  {
    "text": "actually how they discovered the problem",
    "start": "72420",
    "end": "73890"
  },
  {
    "text": "in the first place and I should also",
    "start": "73890",
    "end": "75689"
  },
  {
    "text": "point out that this type of mistake is",
    "start": "75689",
    "end": "77100"
  },
  {
    "text": "very common and you really won't notice",
    "start": "77100",
    "end": "78810"
  },
  {
    "text": "it until you start scaling up in users",
    "start": "78810",
    "end": "80880"
  },
  {
    "text": "and you run into these problems with",
    "start": "80880",
    "end": "82470"
  },
  {
    "text": "billing and performance I'm gonna show",
    "start": "82470",
    "end": "84689"
  },
  {
    "text": "you how to avoid this with strategies",
    "start": "84689",
    "end": "86100"
  },
  {
    "text": "both client-side and server-side but the",
    "start": "86100",
    "end": "88619"
  },
  {
    "text": "number one thing you should do right off",
    "start": "88619",
    "end": "89909"
  },
  {
    "text": "the bat is setup a billing alert on",
    "start": "89909",
    "end": "91950"
  },
  {
    "text": "Google cloud platform every firebase",
    "start": "91950",
    "end": "94290"
  },
  {
    "text": "project is tied to a GCP project so you",
    "start": "94290",
    "end": "97409"
  },
  {
    "text": "just have to go into the billing panel",
    "start": "97409",
    "end": "98820"
  },
  {
    "text": "and then setup the billing thresholds",
    "start": "98820",
    "end": "100680"
  },
  {
    "text": "that you want to be alerted on so that",
    "start": "100680",
    "end": "102600"
  },
  {
    "text": "way you can find out early if you have",
    "start": "102600",
    "end": "103890"
  },
  {
    "text": "some kind of issue that's resulting in",
    "start": "103890",
    "end": "105600"
  },
  {
    "text": "billing spikes but that doesn't really",
    "start": "105600",
    "end": "107820"
  },
  {
    "text": "solve the problem at hand because the",
    "start": "107820",
    "end": "109350"
  },
  {
    "text": "problem is in the code so I set up a",
    "start": "109350",
    "end": "112229"
  },
  {
    "text": "demo here that does something similar",
    "start": "112229",
    "end": "113700"
  },
  {
    "text": "basically it calculates the total amount",
    "start": "113700",
    "end": "115860"
  },
  {
    "text": "of donations the average amount of each",
    "start": "115860",
    "end": "117899"
  },
  {
    "text": "donation and this is all based on a fire",
    "start": "117899",
    "end": "120479"
  },
  {
    "text": "store collection but I have this app",
    "start": "120479",
    "end": "122700"
  },
  {
    "text": "super poorly optimized where I'm reading",
    "start": "122700",
    "end": "124680"
  },
  {
    "text": "every document in the collection three",
    "start": "124680",
    "end": "126630"
  },
  {
    "text": "separate times one for the total one for",
    "start": "126630",
    "end": "128759"
  },
  {
    "text": "the average and then one to show the",
    "start": "128759",
    "end": "130140"
  },
  {
    "text": "list of donations so this collection has",
    "start": "130140",
    "end": "132569"
  },
  {
    "text": "one",
    "start": "132569",
    "end": "133080"
  },
  {
    "text": "documents in it it will take 300",
    "start": "133080",
    "end": "134940"
  },
  {
    "text": "document reads to present the UI that",
    "start": "134940",
    "end": "137010"
  },
  {
    "text": "you see on the left believe it or not",
    "start": "137010",
    "end": "139110"
  },
  {
    "text": "this is pretty easy to do and it still",
    "start": "139110",
    "end": "141000"
  },
  {
    "text": "performs great at this level so you",
    "start": "141000",
    "end": "142530"
  },
  {
    "text": "really wouldn't notice an issue at this",
    "start": "142530",
    "end": "143970"
  },
  {
    "text": "point the startup in the article was",
    "start": "143970",
    "end": "145890"
  },
  {
    "text": "using angular so we'll be doing the same",
    "start": "145890",
    "end": "147540"
  },
  {
    "text": "here we'll be using firestore with",
    "start": "147540",
    "end": "150150"
  },
  {
    "text": "angular fire - and then i'm importing",
    "start": "150150",
    "end": "152310"
  },
  {
    "text": "fakers so i can generate some fake data",
    "start": "152310",
    "end": "154230"
  },
  {
    "text": "for the UI now the first thing i want to",
    "start": "154230",
    "end": "156510"
  },
  {
    "text": "show you is how we can optimize things",
    "start": "156510",
    "end": "157920"
  },
  {
    "text": "client-side and i think that's really",
    "start": "157920",
    "end": "159510"
  },
  {
    "text": "where you should focus first so we have",
    "start": "159510",
    "end": "161820"
  },
  {
    "text": "three different observables here one for",
    "start": "161820",
    "end": "163560"
  },
  {
    "text": "the donations one for the total amount",
    "start": "163560",
    "end": "165450"
  },
  {
    "text": "and one for the average amount so the",
    "start": "165450",
    "end": "168150"
  },
  {
    "text": "mistake that I'm making here first is",
    "start": "168150",
    "end": "169770"
  },
  {
    "text": "that I'm creating a separate observable",
    "start": "169770",
    "end": "171690"
  },
  {
    "text": "for the same collection to show all",
    "start": "171690",
    "end": "173760"
  },
  {
    "text": "three of these different amounts that",
    "start": "173760",
    "end": "175920"
  },
  {
    "text": "means that we're going to subscribe to",
    "start": "175920",
    "end": "177360"
  },
  {
    "text": "three different observables fire off",
    "start": "177360",
    "end": "179040"
  },
  {
    "text": "three separate read operations to fire",
    "start": "179040",
    "end": "181050"
  },
  {
    "text": "store even though they all depend on the",
    "start": "181050",
    "end": "183120"
  },
  {
    "text": "same source data I'm not really going to",
    "start": "183120",
    "end": "185340"
  },
  {
    "text": "explain this code in detail but",
    "start": "185340",
    "end": "186930"
  },
  {
    "text": "basically what we're doing is taking the",
    "start": "186930",
    "end": "188850"
  },
  {
    "text": "fire store collection which is an array",
    "start": "188850",
    "end": "190740"
  },
  {
    "text": "and then we reduce it down to the total",
    "start": "190740",
    "end": "193020"
  },
  {
    "text": "amount of all of the donations in that",
    "start": "193020",
    "end": "195540"
  },
  {
    "text": "collection and then we do the same thing",
    "start": "195540",
    "end": "197430"
  },
  {
    "text": "for the average with just a slightly",
    "start": "197430",
    "end": "198900"
  },
  {
    "text": "different calculation and then we",
    "start": "198900",
    "end": "201030"
  },
  {
    "text": "subscribe to all three of these",
    "start": "201030",
    "end": "202380"
  },
  {
    "text": "observables in the HTML using the async",
    "start": "202380",
    "end": "205110"
  },
  {
    "text": "pipe so the main problem here is that we",
    "start": "205110",
    "end": "208019"
  },
  {
    "text": "have three different data sources that",
    "start": "208019",
    "end": "209850"
  },
  {
    "text": "are being created even though we could",
    "start": "209850",
    "end": "211530"
  },
  {
    "text": "really get this all done with a single",
    "start": "211530",
    "end": "213180"
  },
  {
    "text": "data source so let's take a look at how",
    "start": "213180",
    "end": "215700"
  },
  {
    "text": "we might use rxjs",
    "start": "215700",
    "end": "216989"
  },
  {
    "text": "to reduce our document reads down from",
    "start": "216989",
    "end": "218850"
  },
  {
    "text": "about 300 to 100 what we want to do is",
    "start": "218850",
    "end": "222330"
  },
  {
    "text": "have one observable that can be shared",
    "start": "222330",
    "end": "224340"
  },
  {
    "text": "with the other observables that make the",
    "start": "224340",
    "end": "225959"
  },
  {
    "text": "calculation for the total in the average",
    "start": "225959",
    "end": "228030"
  },
  {
    "text": "so what I'm going to do first is pipe in",
    "start": "228030",
    "end": "230670"
  },
  {
    "text": "the top operator so we can see when a",
    "start": "230670",
    "end": "232530"
  },
  {
    "text": "subscription is created to this",
    "start": "232530",
    "end": "234090"
  },
  {
    "text": "observable then we'll also console.log",
    "start": "234090",
    "end": "236489"
  },
  {
    "text": "the number of documents to get an",
    "start": "236489",
    "end": "237780"
  },
  {
    "text": "approximate amount of the reads that",
    "start": "237780",
    "end": "239580"
  },
  {
    "text": "were executed so now instead of having",
    "start": "239580",
    "end": "241860"
  },
  {
    "text": "the total and the average create their",
    "start": "241860",
    "end": "243900"
  },
  {
    "text": "own observables we'll just go ahead and",
    "start": "243900",
    "end": "245790"
  },
  {
    "text": "use the donations observable that we",
    "start": "245790",
    "end": "247709"
  },
  {
    "text": "created above so let's take a look and",
    "start": "247709",
    "end": "250170"
  },
  {
    "text": "see if that actually solved the problem",
    "start": "250170",
    "end": "251880"
  },
  {
    "text": "in the UI we should only get one",
    "start": "251880",
    "end": "254190"
  },
  {
    "text": "console.log but if we look closely here",
    "start": "254190",
    "end": "256709"
  },
  {
    "text": "we're still getting three side-effects",
    "start": "256709",
    "end": "258120"
  },
  {
    "text": "which should mean that we're sending off",
    "start": "258120",
    "end": "259709"
  },
  {
    "text": "three sets of reads to firestore luckily",
    "start": "259709",
    "end": "263220"
  },
  {
    "text": "there's an easy way to fix this with",
    "start": "263220",
    "end": "264510"
  },
  {
    "text": "rxjs and that's just by pi",
    "start": "264510",
    "end": "266460"
  },
  {
    "text": "being in the [ __ ] replay operator which",
    "start": "266460",
    "end": "268229"
  },
  {
    "text": "will make this a hot observable and",
    "start": "268229",
    "end": "269759"
  },
  {
    "text": "allow any other subscribers to always",
    "start": "269759",
    "end": "272460"
  },
  {
    "text": "get the last cached value so now we can",
    "start": "272460",
    "end": "274979"
  },
  {
    "text": "be a hundred percent confident that our",
    "start": "274979",
    "end": "276300"
  },
  {
    "text": "code is only sending off one document",
    "start": "276300",
    "end": "278190"
  },
  {
    "text": "read to the backend so that can be a",
    "start": "278190",
    "end": "280860"
  },
  {
    "text": "super useful technique and you can also",
    "start": "280860",
    "end": "282660"
  },
  {
    "text": "use an angular service to inject the",
    "start": "282660",
    "end": "284759"
  },
  {
    "text": "same data source into multiple",
    "start": "284759",
    "end": "286319"
  },
  {
    "text": "components but the actual problem that",
    "start": "286319",
    "end": "289199"
  },
  {
    "text": "was faced by the startup is that we need",
    "start": "289199",
    "end": "291240"
  },
  {
    "text": "all of the information from every",
    "start": "291240",
    "end": "292979"
  },
  {
    "text": "document in that collection and to do",
    "start": "292979",
    "end": "294960"
  },
  {
    "text": "that client-side means that we would",
    "start": "294960",
    "end": "296340"
  },
  {
    "text": "have to read every single document every",
    "start": "296340",
    "end": "298169"
  },
  {
    "text": "time which is just not feasible but we",
    "start": "298169",
    "end": "300720"
  },
  {
    "text": "can implement a server-side solution to",
    "start": "300720",
    "end": "302520"
  },
  {
    "text": "make this way more efficient and we can",
    "start": "302520",
    "end": "304470"
  },
  {
    "text": "do it with firebase cloud functions an",
    "start": "304470",
    "end": "306330"
  },
  {
    "text": "app like this is very heavy on document",
    "start": "306330",
    "end": "309360"
  },
  {
    "text": "reads but very light on document writes",
    "start": "309360",
    "end": "311669"
  },
  {
    "text": "for example we might have a hundred",
    "start": "311669",
    "end": "313889"
  },
  {
    "text": "people visit the page but only one of",
    "start": "313889",
    "end": "315960"
  },
  {
    "text": "those people actually make a donation",
    "start": "315960",
    "end": "317550"
  },
  {
    "text": "and write something to the database one",
    "start": "317550",
    "end": "320550"
  },
  {
    "text": "of the main reasons that no sequel",
    "start": "320550",
    "end": "322169"
  },
  {
    "text": "database is like fire stores so popular",
    "start": "322169",
    "end": "324180"
  },
  {
    "text": "is that we have the flexibility to",
    "start": "324180",
    "end": "326069"
  },
  {
    "text": "optimize for read performance what we're",
    "start": "326069",
    "end": "328800"
  },
  {
    "text": "going to do next is set up a cloud",
    "start": "328800",
    "end": "330150"
  },
  {
    "text": "function that listens to the donation",
    "start": "330150",
    "end": "331979"
  },
  {
    "text": "collection and every time a new document",
    "start": "331979",
    "end": "334320"
  },
  {
    "text": "is written there it will update an",
    "start": "334320",
    "end": "336030"
  },
  {
    "text": "aggregated document that contains the",
    "start": "336030",
    "end": "338280"
  },
  {
    "text": "total count the total amount and also",
    "start": "338280",
    "end": "341159"
  },
  {
    "text": "the last five donations that were left",
    "start": "341159",
    "end": "343259"
  },
  {
    "text": "so this means we could have a million",
    "start": "343259",
    "end": "345270"
  },
  {
    "text": "documents in our donations collection",
    "start": "345270",
    "end": "347340"
  },
  {
    "text": "and have all the information needed for",
    "start": "347340",
    "end": "349409"
  },
  {
    "text": "the front-end UI with a single document",
    "start": "349409",
    "end": "351570"
  },
  {
    "text": "read the actual data payload will now be",
    "start": "351570",
    "end": "354180"
  },
  {
    "text": "much smaller so our front-end UI is",
    "start": "354180",
    "end": "355889"
  },
  {
    "text": "going to be way more performant for 99%",
    "start": "355889",
    "end": "358289"
  },
  {
    "text": "of users and basically what we're doing",
    "start": "358289",
    "end": "360810"
  },
  {
    "text": "is trading 20,000 client-side document",
    "start": "360810",
    "end": "363570"
  },
  {
    "text": "reads for an extra write and an extra",
    "start": "363570",
    "end": "366180"
  },
  {
    "text": "cloud function invocation in this case",
    "start": "366180",
    "end": "368969"
  },
  {
    "text": "that's an excellent trade-off and it'll",
    "start": "368969",
    "end": "370680"
  },
  {
    "text": "make the pricing go from 30k down to",
    "start": "370680",
    "end": "373050"
  },
  {
    "text": "pretty close to the free tier one of the",
    "start": "373050",
    "end": "375810"
  },
  {
    "text": "drawbacks is that it makes writes to the",
    "start": "375810",
    "end": "377490"
  },
  {
    "text": "UI a little bit slower because we have",
    "start": "377490",
    "end": "379199"
  },
  {
    "text": "to wait for that cloud function to",
    "start": "379199",
    "end": "380460"
  },
  {
    "text": "finish before the document is updated",
    "start": "380460",
    "end": "382759"
  },
  {
    "text": "but in this case it makes a ton of sense",
    "start": "382759",
    "end": "384780"
  },
  {
    "text": "because the vast majority of users are",
    "start": "384780",
    "end": "386909"
  },
  {
    "text": "reading data and not changing it I have",
    "start": "386909",
    "end": "389909"
  },
  {
    "text": "initialized firebase cloud functions in",
    "start": "389909",
    "end": "391500"
  },
  {
    "text": "this project and I'm also using the new",
    "start": "391500",
    "end": "393599"
  },
  {
    "text": "node 8 runtime which allows me to use",
    "start": "393599",
    "end": "395520"
  },
  {
    "text": "async await in just a plain JavaScript",
    "start": "395520",
    "end": "397800"
  },
  {
    "text": "function",
    "start": "397800",
    "end": "399120"
  },
  {
    "text": "we'll bring in the admin database and",
    "start": "399120",
    "end": "401250"
  },
  {
    "text": "then we'll want to listen to every new",
    "start": "401250",
    "end": "403650"
  },
  {
    "text": "donation document that is created in",
    "start": "403650",
    "end": "405750"
  },
  {
    "text": "that fire store collection when a new",
    "start": "405750",
    "end": "408660"
  },
  {
    "text": "document is created we'll just want to",
    "start": "408660",
    "end": "410340"
  },
  {
    "text": "update the aggregated data for that",
    "start": "410340",
    "end": "412680"
  },
  {
    "text": "collection so we're no longer displaying",
    "start": "412680",
    "end": "415320"
  },
  {
    "text": "the actual donation documents but",
    "start": "415320",
    "end": "417150"
  },
  {
    "text": "instead we're displaying the aggregated",
    "start": "417150",
    "end": "418980"
  },
  {
    "text": "document based on that collection there",
    "start": "418980",
    "end": "421530"
  },
  {
    "text": "is no best practice for this but",
    "start": "421530",
    "end": "423060"
  },
  {
    "text": "generally what I do is I save a document",
    "start": "423060",
    "end": "425310"
  },
  {
    "text": "in a collection called aggregation and",
    "start": "425310",
    "end": "427800"
  },
  {
    "text": "the ID for that document matches the",
    "start": "427800",
    "end": "430350"
  },
  {
    "text": "collection that were making calculations",
    "start": "430350",
    "end": "432180"
  },
  {
    "text": "on and you really just want to save the",
    "start": "432180",
    "end": "434520"
  },
  {
    "text": "bare minimum amount of information you",
    "start": "434520",
    "end": "436050"
  },
  {
    "text": "need to make calculations in the UI in",
    "start": "436050",
    "end": "439680"
  },
  {
    "text": "our case we just need to show the",
    "start": "439680",
    "end": "441540"
  },
  {
    "text": "average and the total so we can",
    "start": "441540",
    "end": "443910"
  },
  {
    "text": "calculate these by taking the current",
    "start": "443910",
    "end": "445770"
  },
  {
    "text": "aggregated total and then add it to the",
    "start": "445770",
    "end": "447780"
  },
  {
    "text": "amount of the new donation and then we",
    "start": "447780",
    "end": "450330"
  },
  {
    "text": "can take the total count and just add",
    "start": "450330",
    "end": "451860"
  },
  {
    "text": "one to it and then we'll also save the",
    "start": "451860",
    "end": "454350"
  },
  {
    "text": "last five donations we can show those in",
    "start": "454350",
    "end": "456450"
  },
  {
    "text": "the view as well by saving the last five",
    "start": "456450",
    "end": "459540"
  },
  {
    "text": "donations here we can show those in the",
    "start": "459540",
    "end": "461310"
  },
  {
    "text": "view and we'll only have to execute one",
    "start": "461310",
    "end": "463289"
  },
  {
    "text": "document read instead of five which can",
    "start": "463289",
    "end": "465479"
  },
  {
    "text": "make a pretty big difference if you have",
    "start": "465479",
    "end": "466800"
  },
  {
    "text": "two million users and then we'll",
    "start": "466800",
    "end": "468900"
  },
  {
    "text": "complete our function by just returning",
    "start": "468900",
    "end": "470550"
  },
  {
    "text": "a set operation from it and we're good",
    "start": "470550",
    "end": "472590"
  },
  {
    "text": "to get all our front-end UI looks",
    "start": "472590",
    "end": "474810"
  },
  {
    "text": "exactly like it did before but instead",
    "start": "474810",
    "end": "476729"
  },
  {
    "text": "we're just doing a single document read",
    "start": "476729",
    "end": "478440"
  },
  {
    "text": "instead of say twenty thousand the nice",
    "start": "478440",
    "end": "482070"
  },
  {
    "text": "thing about firestore is that it's easy",
    "start": "482070",
    "end": "483780"
  },
  {
    "text": "to anticipate your pricing let's imagine",
    "start": "483780",
    "end": "486539"
  },
  {
    "text": "that every user reads about ten",
    "start": "486539",
    "end": "488220"
  },
  {
    "text": "documents per visit that would be about",
    "start": "488220",
    "end": "490229"
  },
  {
    "text": "20 million document reads per 2 million",
    "start": "490229",
    "end": "492780"
  },
  {
    "text": "users or about $25 per 2 million",
    "start": "492780",
    "end": "495690"
  },
  {
    "text": "sessions or savings of about 99.9% from",
    "start": "495690",
    "end": "499470"
  },
  {
    "text": "the startups initial query setup I'm",
    "start": "499470",
    "end": "502350"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "502350",
    "end": "503490"
  },
  {
    "text": "if this video helped you please like and",
    "start": "503490",
    "end": "505260"
  },
  {
    "text": "subscribe and if you want to learn how",
    "start": "505260",
    "end": "506789"
  },
  {
    "text": "to get a quality app shipped to",
    "start": "506789",
    "end": "507900"
  },
  {
    "text": "production consider becoming a pro",
    "start": "507900",
    "end": "509610"
  },
  {
    "text": "member at angular firebase comm you'll",
    "start": "509610",
    "end": "512010"
  },
  {
    "text": "get a free copy my book access to my",
    "start": "512010",
    "end": "513870"
  },
  {
    "text": "courses and a whole bunch of other free",
    "start": "513870",
    "end": "515789"
  },
  {
    "text": "stuff thanks for watching and I'll talk",
    "start": "515789",
    "end": "518070"
  },
  {
    "text": "to you soon",
    "start": "518070",
    "end": "520669"
  }
]