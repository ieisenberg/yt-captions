[
  {
    "text": "in my last video I showed you how to",
    "start": "30",
    "end": "1589"
  },
  {
    "text": "implement Redux patterns and angular",
    "start": "1589",
    "end": "3300"
  },
  {
    "text": "using ng rx store if you're brand new to",
    "start": "3300",
    "end": "6270"
  },
  {
    "text": "redux I recommend checking out that",
    "start": "6270",
    "end": "7890"
  },
  {
    "text": "video first if you haven't already if",
    "start": "7890",
    "end": "9630"
  },
  {
    "text": "you're an angular firebase Pro member",
    "start": "9630",
    "end": "11550"
  },
  {
    "text": "I'd like to take a second to say thank",
    "start": "11550",
    "end": "13320"
  },
  {
    "text": "you for supporting this project and let",
    "start": "13320",
    "end": "15420"
  },
  {
    "text": "you know that we're using your",
    "start": "15420",
    "end": "16379"
  },
  {
    "text": "investment to support other open-source",
    "start": "16379",
    "end": "18390"
  },
  {
    "text": "projects such as ng rx I pledged $100",
    "start": "18390",
    "end": "21359"
  },
  {
    "text": "per month and will do the same for other",
    "start": "21359",
    "end": "23070"
  },
  {
    "text": "exceptional angular projects and content",
    "start": "23070",
    "end": "25380"
  },
  {
    "text": "creators getting back to this episode",
    "start": "25380",
    "end": "27449"
  },
  {
    "text": "we're going to build an ng rx angular",
    "start": "27449",
    "end": "30300"
  },
  {
    "text": "app that uses firebase on the backend",
    "start": "30300",
    "end": "32070"
  },
  {
    "text": "we'll be able to retrieve as well as",
    "start": "32070",
    "end": "34290"
  },
  {
    "text": "update post on the firebase real-time",
    "start": "34290",
    "end": "36660"
  },
  {
    "text": "database when working with firebase we",
    "start": "36660",
    "end": "39120"
  },
  {
    "text": "have to worry about the side effects",
    "start": "39120",
    "end": "40649"
  },
  {
    "text": "that come with working with a third",
    "start": "40649",
    "end": "42239"
  },
  {
    "text": "party API ng Rx has a package called",
    "start": "42239",
    "end": "45210"
  },
  {
    "text": "effects that serves just this purpose we",
    "start": "45210",
    "end": "47670"
  },
  {
    "text": "can install it using NPM at this point",
    "start": "47670",
    "end": "50610"
  },
  {
    "text": "you should have angularfire 2 for",
    "start": "50610",
    "end": "52110"
  },
  {
    "text": "firebase installed you can find",
    "start": "52110",
    "end": "53760"
  },
  {
    "text": "instructions for that on the official",
    "start": "53760",
    "end": "55289"
  },
  {
    "text": "repo now let's look at why we need to",
    "start": "55289",
    "end": "57420"
  },
  {
    "text": "use effects in the first place",
    "start": "57420",
    "end": "58890"
  },
  {
    "text": "consider the following example of a pure",
    "start": "58890",
    "end": "61140"
  },
  {
    "text": "function it's considered a pure because",
    "start": "61140",
    "end": "63270"
  },
  {
    "text": "it only affects data within its own",
    "start": "63270",
    "end": "64799"
  },
  {
    "text": "scope it would be considered impure if",
    "start": "64799",
    "end": "67170"
  },
  {
    "text": "we defined a variable",
    "start": "67170",
    "end": "68010"
  },
  {
    "text": "outside of that function and then used",
    "start": "68010",
    "end": "70049"
  },
  {
    "text": "it inside the function scope what often",
    "start": "70049",
    "end": "72510"
  },
  {
    "text": "happens in the real world is we have an",
    "start": "72510",
    "end": "74040"
  },
  {
    "text": "impure function that will do an",
    "start": "74040",
    "end": "75689"
  },
  {
    "text": "operation on the database causing a",
    "start": "75689",
    "end": "77310"
  },
  {
    "text": "chain of different side effects in the",
    "start": "77310",
    "end": "78900"
  },
  {
    "text": "application the goal of ng rx effects is",
    "start": "78900",
    "end": "81720"
  },
  {
    "text": "to isolate functions like this to make",
    "start": "81720",
    "end": "83640"
  },
  {
    "text": "them behave more or less like a pure",
    "start": "83640",
    "end": "85290"
  },
  {
    "text": "function let's start coding this up in",
    "start": "85290",
    "end": "87689"
  },
  {
    "text": "angular in the app module we're going to",
    "start": "87689",
    "end": "90600"
  },
  {
    "text": "need the angular fired database as well",
    "start": "90600",
    "end": "92549"
  },
  {
    "text": "as the effects module store and store",
    "start": "92549",
    "end": "95250"
  },
  {
    "text": "dev tools then we're going to create our",
    "start": "95250",
    "end": "97530"
  },
  {
    "text": "own post effects and post reducer in the",
    "start": "97530",
    "end": "99630"
  },
  {
    "text": "upcoming steps post effects behave just",
    "start": "99630",
    "end": "102210"
  },
  {
    "text": "like an angular service so when we",
    "start": "102210",
    "end": "104009"
  },
  {
    "text": "import them we add them to an array and",
    "start": "104009",
    "end": "106140"
  },
  {
    "text": "the effects module then the reducer is",
    "start": "106140",
    "end": "108780"
  },
  {
    "text": "added to the store module now before",
    "start": "108780",
    "end": "111570"
  },
  {
    "text": "going any further I want to show you how",
    "start": "111570",
    "end": "112950"
  },
  {
    "text": "I have this app organized I have a",
    "start": "112950",
    "end": "114689"
  },
  {
    "text": "folder for actions effects models and",
    "start": "114689",
    "end": "117570"
  },
  {
    "text": "reducers you'll most likely want a",
    "start": "117570",
    "end": "119549"
  },
  {
    "text": "similar organization to this for each",
    "start": "119549",
    "end": "121439"
  },
  {
    "text": "feature in your app now let's get",
    "start": "121439",
    "end": "123869"
  },
  {
    "text": "started building the post model this",
    "start": "123869",
    "end": "125820"
  },
  {
    "text": "will just be a simple typescript",
    "start": "125820",
    "end": "127200"
  },
  {
    "text": "interface that defines the post itself",
    "start": "127200",
    "end": "129660"
  },
  {
    "text": "the push key will be the actual firebase",
    "start": "129660",
    "end": "131849"
  },
  {
    "text": "push key and then we'll have a",
    "start": "131849",
    "end": "133390"
  },
  {
    "text": "loading statements of bullion then text",
    "start": "133390",
    "end": "135970"
  },
  {
    "text": "votes and an optional airfield now we",
    "start": "135970",
    "end": "139300"
  },
  {
    "text": "can start building the post actions",
    "start": "139300",
    "end": "141069"
  },
  {
    "text": "we'll start by importing the action",
    "start": "141069",
    "end": "142720"
  },
  {
    "text": "interface from ng rx and also the post",
    "start": "142720",
    "end": "145569"
  },
  {
    "text": "model that we just created to create an",
    "start": "145569",
    "end": "147700"
  },
  {
    "text": "action we'll first export a constant",
    "start": "147700",
    "end": "149470"
  },
  {
    "text": "with the action name then we create a",
    "start": "149470",
    "end": "151660"
  },
  {
    "text": "class that will handle that data payload",
    "start": "151660",
    "end": "153310"
  },
  {
    "text": "for that action in order to get a post",
    "start": "153310",
    "end": "155800"
  },
  {
    "text": "from firebase we need to first supply it",
    "start": "155800",
    "end": "157480"
  },
  {
    "text": "with a push key string which we can do",
    "start": "157480",
    "end": "159910"
  },
  {
    "text": "by supplying it in the constructor for",
    "start": "159910",
    "end": "161530"
  },
  {
    "text": "this action when we make a get request",
    "start": "161530",
    "end": "163510"
  },
  {
    "text": "for a post it's asynchronous we don't",
    "start": "163510",
    "end": "165610"
  },
  {
    "text": "know if it's successful right away so",
    "start": "165610",
    "end": "167530"
  },
  {
    "text": "we'll create another action called get",
    "start": "167530",
    "end": "169420"
  },
  {
    "text": "post success that will fire once the",
    "start": "169420",
    "end": "172120"
  },
  {
    "text": "post is actually successfully retrieved",
    "start": "172120",
    "end": "174070"
  },
  {
    "text": "for the Vote actions which are conducted",
    "start": "174070",
    "end": "176410"
  },
  {
    "text": "with a firebase database update will do",
    "start": "176410",
    "end": "178570"
  },
  {
    "text": "a success and a fail action to handle",
    "start": "178570",
    "end": "180790"
  },
  {
    "text": "those two possible States when we",
    "start": "180790",
    "end": "182860"
  },
  {
    "text": "successfully retrieve a post we can send",
    "start": "182860",
    "end": "185110"
  },
  {
    "text": "that as the payload to update the data",
    "start": "185110",
    "end": "186790"
  },
  {
    "text": "store and we'll follow the same basic",
    "start": "186790",
    "end": "188800"
  },
  {
    "text": "process for all the other actions this",
    "start": "188800",
    "end": "190690"
  },
  {
    "text": "will make a little more sense when we",
    "start": "190690",
    "end": "191739"
  },
  {
    "text": "get to the effects and actually start",
    "start": "191739",
    "end": "193150"
  },
  {
    "text": "sending data through these actions the",
    "start": "193150",
    "end": "195519"
  },
  {
    "text": "final step is to export all these",
    "start": "195519",
    "end": "197170"
  },
  {
    "text": "classes as a single type so we can",
    "start": "197170",
    "end": "199000"
  },
  {
    "text": "strong type them when we get to the",
    "start": "199000",
    "end": "200380"
  },
  {
    "text": "effects but before the effects will",
    "start": "200380",
    "end": "202600"
  },
  {
    "text": "build the reducer function in the",
    "start": "202600",
    "end": "205060"
  },
  {
    "text": "reducer function we will import the post",
    "start": "205060",
    "end": "207010"
  },
  {
    "text": "actions we just created as well as the",
    "start": "207010",
    "end": "208900"
  },
  {
    "text": "post model we created earlier then we'll",
    "start": "208900",
    "end": "211480"
  },
  {
    "text": "set the post actions as a single action",
    "start": "211480",
    "end": "213670"
  },
  {
    "text": "type in the post reducer we pass the",
    "start": "213670",
    "end": "216370"
  },
  {
    "text": "state and the action as arguments then",
    "start": "216370",
    "end": "218500"
  },
  {
    "text": "to copy the old state to the new state",
    "start": "218500",
    "end": "220420"
  },
  {
    "text": "we're gonna use a new JavaScript syntax",
    "start": "220420",
    "end": "222190"
  },
  {
    "text": "called spread first we create an empty",
    "start": "222190",
    "end": "224620"
  },
  {
    "text": "object and then we put other objects",
    "start": "224620",
    "end": "226750"
  },
  {
    "text": "inside of it with three dots in front of",
    "start": "226750",
    "end": "228549"
  },
  {
    "text": "them and this will compose a new object",
    "start": "228549",
    "end": "230170"
  },
  {
    "text": "from left to right when we first trigger",
    "start": "230170",
    "end": "232750"
  },
  {
    "text": "the get post action will set the loading",
    "start": "232750",
    "end": "234850"
  },
  {
    "text": "state to true when the post returns",
    "start": "234850",
    "end": "237220"
  },
  {
    "text": "successfully we can add the action",
    "start": "237220",
    "end": "239470"
  },
  {
    "text": "payload to the object and also flip the",
    "start": "239470",
    "end": "242200"
  },
  {
    "text": "loading state to false and we'll follow",
    "start": "242200",
    "end": "244690"
  },
  {
    "text": "the same basic logic for the vote",
    "start": "244690",
    "end": "246459"
  },
  {
    "text": "actions and you might notice how concise",
    "start": "246459",
    "end": "248739"
  },
  {
    "text": "and readable our code is with the spread",
    "start": "248739",
    "end": "250540"
  },
  {
    "text": "syntax however keep in mind it's just a",
    "start": "250540",
    "end": "253090"
  },
  {
    "text": "proposal for es7 and it's not a fully",
    "start": "253090",
    "end": "255549"
  },
  {
    "text": "standardized feature in JavaScript as of",
    "start": "255549",
    "end": "257739"
  },
  {
    "text": "the making of this video now we can",
    "start": "257739",
    "end": "260590"
  },
  {
    "text": "finally start building our post effects",
    "start": "260590",
    "end": "262260"
  },
  {
    "text": "effects work just like an angular",
    "start": "262260",
    "end": "264280"
  },
  {
    "text": "service so we'll use the injectable",
    "start": "264280",
    "end": "266169"
  },
  {
    "text": "decorator",
    "start": "266169",
    "end": "267130"
  },
  {
    "text": "and then we'll import effects actions as",
    "start": "267130",
    "end": "269860"
  },
  {
    "text": "well as the angularfire database and",
    "start": "269860",
    "end": "271540"
  },
  {
    "text": "then a few rxjs operators as well which",
    "start": "271540",
    "end": "274990"
  },
  {
    "text": "you'll see in use here in a second and",
    "start": "274990",
    "end": "276600"
  },
  {
    "text": "lastly we'll import our post actions the",
    "start": "276600",
    "end": "280330"
  },
  {
    "text": "first step is to add the actions as well",
    "start": "280330",
    "end": "282730"
  },
  {
    "text": "as the angularfire database in the",
    "start": "282730",
    "end": "284440"
  },
  {
    "text": "constructor then you create an effect by",
    "start": "284440",
    "end": "287050"
  },
  {
    "text": "first using the effect decorator then",
    "start": "287050",
    "end": "289960"
  },
  {
    "text": "you strong type its value as an",
    "start": "289960",
    "end": "291610"
  },
  {
    "text": "observable action then you call actions",
    "start": "291610",
    "end": "294640"
  },
  {
    "text": "of type and the type being the action",
    "start": "294640",
    "end": "297370"
  },
  {
    "text": "that you want to perform in this case of",
    "start": "297370",
    "end": "298870"
  },
  {
    "text": "OU BR get post action in this case we",
    "start": "298870",
    "end": "301510"
  },
  {
    "text": "need to first map the payload down to",
    "start": "301510",
    "end": "303580"
  },
  {
    "text": "something that we can use since we've",
    "start": "303580",
    "end": "305530"
  },
  {
    "text": "strong typed all our actions we can just",
    "start": "305530",
    "end": "307060"
  },
  {
    "text": "map it down to the action type for get",
    "start": "307060",
    "end": "309010"
  },
  {
    "text": "post in this case the payload we're",
    "start": "309010",
    "end": "310930"
  },
  {
    "text": "sending it is a firebase push key that",
    "start": "310930",
    "end": "313060"
  },
  {
    "text": "we can use to retrieve the post from the",
    "start": "313060",
    "end": "314950"
  },
  {
    "text": "database in this example I'm using an",
    "start": "314950",
    "end": "317290"
  },
  {
    "text": "rxjs delay of two seconds just to show",
    "start": "317290",
    "end": "319810"
  },
  {
    "text": "the spinner in the UI that's not",
    "start": "319810",
    "end": "321970"
  },
  {
    "text": "necessary in real life so now we can use",
    "start": "321970",
    "end": "324430"
  },
  {
    "text": "merge map to take that payload of the",
    "start": "324430",
    "end": "326290"
  },
  {
    "text": "firebase push key to send the actual get",
    "start": "326290",
    "end": "328540"
  },
  {
    "text": "request to firebase we call DB object",
    "start": "328540",
    "end": "331570"
  },
  {
    "text": "payload and then we map that down to the",
    "start": "331570",
    "end": "334510"
  },
  {
    "text": "post that it returns and then we can",
    "start": "334510",
    "end": "336280"
  },
  {
    "text": "actually update the state in the",
    "start": "336280",
    "end": "337840"
  },
  {
    "text": "datastore and we can do that by just",
    "start": "337840",
    "end": "339940"
  },
  {
    "text": "returning the post actions get post",
    "start": "339940",
    "end": "342340"
  },
  {
    "text": "success when we trigger this action on",
    "start": "342340",
    "end": "344620"
  },
  {
    "text": "the front end it's going to look",
    "start": "344620",
    "end": "345610"
  },
  {
    "text": "something like this we get a two second",
    "start": "345610",
    "end": "347470"
  },
  {
    "text": "delay and then the post data is updated",
    "start": "347470",
    "end": "349150"
  },
  {
    "text": "in the datastore reflecting in the UI",
    "start": "349150",
    "end": "351000"
  },
  {
    "text": "now let's build a another effect to",
    "start": "351000",
    "end": "353320"
  },
  {
    "text": "handle the voting action it's the same",
    "start": "353320",
    "end": "355930"
  },
  {
    "text": "basic process to start but this time",
    "start": "355930",
    "end": "357820"
  },
  {
    "text": "it'll be a type of vote update then",
    "start": "357820",
    "end": "360850"
  },
  {
    "text": "we'll map it down to the payload just",
    "start": "360850",
    "end": "362320"
  },
  {
    "text": "like we did with the last effect but the",
    "start": "362320",
    "end": "364810"
  },
  {
    "text": "difference is when you do a firebase",
    "start": "364810",
    "end": "366040"
  },
  {
    "text": "update it's not actually an observable",
    "start": "366040",
    "end": "367930"
  },
  {
    "text": "rather it's a promise",
    "start": "367930",
    "end": "369580"
  },
  {
    "text": "but we can treat it like an observable",
    "start": "369580",
    "end": "371650"
  },
  {
    "text": "by putting it inside the of operator",
    "start": "371650",
    "end": "373690"
  },
  {
    "text": "then we can simply make the update call",
    "start": "373690",
    "end": "376210"
  },
  {
    "text": "the firebase like we would normally by",
    "start": "376210",
    "end": "377710"
  },
  {
    "text": "calling DB object with the push key and",
    "start": "377710",
    "end": "380530"
  },
  {
    "text": "then we'll update the votes to the new",
    "start": "380530",
    "end": "382660"
  },
  {
    "text": "value specified in the payload then we",
    "start": "382660",
    "end": "384730"
  },
  {
    "text": "can map the observable to the vote",
    "start": "384730",
    "end": "386410"
  },
  {
    "text": "success action and if there's an error",
    "start": "386410",
    "end": "388870"
  },
  {
    "text": "we can catch it and trigger the post",
    "start": "388870",
    "end": "390880"
  },
  {
    "text": "actions vote fail which will set the",
    "start": "390880",
    "end": "393640"
  },
  {
    "text": "optional error property on the datastore",
    "start": "393640",
    "end": "395680"
  },
  {
    "text": "to this error message now let's actually",
    "start": "395680",
    "end": "399100"
  },
  {
    "text": "put these effects to use in the app",
    "start": "399100",
    "end": "400870"
  },
  {
    "text": "component",
    "start": "400870",
    "end": "401550"
  },
  {
    "text": "we import ng rx store as well as our",
    "start": "401550",
    "end": "404980"
  },
  {
    "text": "post actions and post model then the app",
    "start": "404980",
    "end": "407710"
  },
  {
    "text": "state interface will just be defined as",
    "start": "407710",
    "end": "409480"
  },
  {
    "text": "the post and just like we did in the",
    "start": "409480",
    "end": "412450"
  },
  {
    "text": "last video we'll set the post isn't",
    "start": "412450",
    "end": "414130"
  },
  {
    "text": "observable and we'll inject the store in",
    "start": "414130",
    "end": "417280"
  },
  {
    "text": "the constructor now all we have to do is",
    "start": "417280",
    "end": "420160"
  },
  {
    "text": "create a couple event handlers that will",
    "start": "420160",
    "end": "422080"
  },
  {
    "text": "trigger these actions to get a post from",
    "start": "422080",
    "end": "424870"
  },
  {
    "text": "firebase I'm just going to hard code a",
    "start": "424870",
    "end": "426730"
  },
  {
    "text": "push key that already exists in the",
    "start": "426730",
    "end": "428200"
  },
  {
    "text": "database then to update the votes I'm",
    "start": "428200",
    "end": "431230"
  },
  {
    "text": "going to pass the existing post object",
    "start": "431230",
    "end": "433600"
  },
  {
    "text": "along with the new value we want to set",
    "start": "433600",
    "end": "435610"
  },
  {
    "text": "the votes at and then we can dispatch",
    "start": "435610",
    "end": "437830"
  },
  {
    "text": "the action and pass it the post and the",
    "start": "437830",
    "end": "440380"
  },
  {
    "text": "new value for the votes in the app",
    "start": "440380",
    "end": "443020"
  },
  {
    "text": "component HTML we just need to unwrap",
    "start": "443020",
    "end": "445570"
  },
  {
    "text": "the post observable and then we can bind",
    "start": "445570",
    "end": "448240"
  },
  {
    "text": "everything to buttons that we need to",
    "start": "448240",
    "end": "450190"
  },
  {
    "text": "trigger the get post action as well as",
    "start": "450190",
    "end": "452590"
  },
  {
    "text": "the vote update action and then we also",
    "start": "452590",
    "end": "455260"
  },
  {
    "text": "display a loading spinner conditionally",
    "start": "455260",
    "end": "457180"
  },
  {
    "text": "if the post is loading to distinguish an",
    "start": "457180",
    "end": "460000"
  },
  {
    "text": "upvote from a down boat we just pass it",
    "start": "460000",
    "end": "461920"
  },
  {
    "text": "the number one or the number negative",
    "start": "461920",
    "end": "463810"
  },
  {
    "text": "one if it's a down vote in a real app",
    "start": "463810",
    "end": "466480"
  },
  {
    "text": "you probably want to have some way to",
    "start": "466480",
    "end": "467560"
  },
  {
    "text": "validate that a boat belongs to a user",
    "start": "467560",
    "end": "469480"
  },
  {
    "text": "but in this case I just want to show you",
    "start": "469480",
    "end": "471160"
  },
  {
    "text": "how to actually make the update and",
    "start": "471160",
    "end": "472960"
  },
  {
    "text": "firebase you can see when we click the",
    "start": "472960",
    "end": "475300"
  },
  {
    "text": "upload or download button firebase is",
    "start": "475300",
    "end": "476950"
  },
  {
    "text": "being updated over here on the right and",
    "start": "476950",
    "end": "478720"
  },
  {
    "text": "we're observing the actual data in the",
    "start": "478720",
    "end": "480880"
  },
  {
    "text": "datastore so it's completely decoupled",
    "start": "480880",
    "end": "483130"
  },
  {
    "text": "from firebase if you installed Redux dev",
    "start": "483130",
    "end": "485560"
  },
  {
    "text": "tools in the last video you'll be able",
    "start": "485560",
    "end": "486970"
  },
  {
    "text": "to get a nice tree presentation of the",
    "start": "486970",
    "end": "488650"
  },
  {
    "text": "state as it changes so first we have a",
    "start": "488650",
    "end": "491020"
  },
  {
    "text": "blank state then it goes to the loading",
    "start": "491020",
    "end": "492970"
  },
  {
    "text": "state and then post data is loaded and",
    "start": "492970",
    "end": "495610"
  },
  {
    "text": "each time we vote we get a new state",
    "start": "495610",
    "end": "497590"
  },
  {
    "text": "tree as your app grows more complex this",
    "start": "497590",
    "end": "500169"
  },
  {
    "text": "can be extremely helpful for debugging",
    "start": "500169",
    "end": "504060"
  },
  {
    "text": "that's it for ng rx effects with",
    "start": "505200",
    "end": "508090"
  },
  {
    "text": "firebase if this video helped you please",
    "start": "508090",
    "end": "509800"
  },
  {
    "text": "like and subscribe and if you want to",
    "start": "509800",
    "end": "511750"
  },
  {
    "text": "support the channel consider becoming a",
    "start": "511750",
    "end": "513339"
  },
  {
    "text": "pro subscriber at angular firebase comm",
    "start": "513339",
    "end": "515890"
  },
  {
    "text": "looking a free copy of my book as well",
    "start": "515890",
    "end": "518289"
  },
  {
    "text": "as one on one project consulting thanks",
    "start": "518289",
    "end": "520960"
  },
  {
    "text": "for watching and I'll see you soon",
    "start": "520960",
    "end": "523380"
  },
  {
    "text": "you",
    "start": "523380",
    "end": "525440"
  },
  {
    "text": "[Music]",
    "start": "527640",
    "end": "532679"
  }
]