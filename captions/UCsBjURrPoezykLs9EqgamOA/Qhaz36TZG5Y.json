[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "in my recent poll with over 75 000",
    "start": "80",
    "end": "2080"
  },
  {
    "text": "responses css topped the list as the",
    "start": "2080",
    "end": "4160"
  },
  {
    "text": "most painful technology web developers",
    "start": "4160",
    "end": "6000"
  },
  {
    "text": "have to work with they say it's broken",
    "start": "6000",
    "end": "7759"
  },
  {
    "text": "chaotic and too damn hard there's even a",
    "start": "7759",
    "end": "9840"
  },
  {
    "text": "conspiracy that it's bad by design to",
    "start": "9840",
    "end": "12000"
  },
  {
    "text": "protect the app stores but i think css",
    "start": "12000",
    "end": "14240"
  },
  {
    "text": "is awesome",
    "start": "14240",
    "end": "14880"
  },
  {
    "text": "it's definitely bloated and difficult to",
    "start": "14880",
    "end": "16560"
  },
  {
    "text": "learn comprehensively but that's only",
    "start": "16560",
    "end": "18320"
  },
  {
    "text": "because it's had to evolve over the last",
    "start": "18320",
    "end": "19920"
  },
  {
    "text": "25 years",
    "start": "19920",
    "end": "20800"
  },
  {
    "text": "it came out at a time when netscape was",
    "start": "20800",
    "end": "22400"
  },
  {
    "text": "the top browser and the idea of a",
    "start": "22400",
    "end": "24080"
  },
  {
    "text": "responsive layout was more than a decade",
    "start": "24080",
    "end": "25840"
  },
  {
    "text": "away",
    "start": "25840",
    "end": "26240"
  },
  {
    "text": "as more browsers hit the market they all",
    "start": "26240",
    "end": "28080"
  },
  {
    "text": "implemented css in different ways",
    "start": "28080",
    "end": "29920"
  },
  {
    "text": "leading to code that works in one",
    "start": "29920",
    "end": "31119"
  },
  {
    "text": "browser but not the other requiring you",
    "start": "31119",
    "end": "33040"
  },
  {
    "text": "the developer to write a bunch of",
    "start": "33040",
    "end": "34399"
  },
  {
    "text": "confusing vendor prefixes in your code",
    "start": "34399",
    "end": "36399"
  },
  {
    "text": "just to make it work across all browsers",
    "start": "36399",
    "end": "38480"
  },
  {
    "text": "so i totally get why you would hate css",
    "start": "38480",
    "end": "40719"
  },
  {
    "text": "but today is a therapy session where",
    "start": "40719",
    "end": "42320"
  },
  {
    "text": "you'll learn how to write clean css",
    "start": "42320",
    "end": "43920"
  },
  {
    "text": "using modern features",
    "start": "43920",
    "end": "45039"
  },
  {
    "text": "while avoiding the bad code that you",
    "start": "45039",
    "end": "46480"
  },
  {
    "text": "shouldn't have to write in 2021",
    "start": "46480",
    "end": "48320"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "48320",
    "end": "49760"
  },
  {
    "text": "and leave your favorite css pro tip in",
    "start": "49760",
    "end": "51760"
  },
  {
    "text": "the comments",
    "start": "51760",
    "end": "52399"
  },
  {
    "text": "i'll pick a few of them to win this",
    "start": "52399",
    "end": "53680"
  },
  {
    "text": "one-of-a-kind t-shirt next week the",
    "start": "53680",
    "end": "55440"
  },
  {
    "text": "first thing you need to know",
    "start": "55440",
    "end": "56559"
  },
  {
    "start": "56000",
    "end": "120000"
  },
  {
    "text": "is how to learn css the way not to learn",
    "start": "56559",
    "end": "58719"
  },
  {
    "text": "css is to use a framework like bootstrap",
    "start": "58719",
    "end": "61199"
  },
  {
    "text": "or",
    "start": "61199",
    "end": "61440"
  },
  {
    "text": "tailwind they're sexy tools that can",
    "start": "61440",
    "end": "63199"
  },
  {
    "text": "help you get a nice looking ui quickly",
    "start": "63199",
    "end": "64720"
  },
  {
    "text": "but if you use something like tailwind",
    "start": "64720",
    "end": "66159"
  },
  {
    "text": "in your project",
    "start": "66159",
    "end": "66880"
  },
  {
    "text": "it's like getting married for one you",
    "start": "66880",
    "end": "68640"
  },
  {
    "text": "won't learn css fundamentals you'll",
    "start": "68640",
    "end": "70240"
  },
  {
    "text": "learn tailwind",
    "start": "70240",
    "end": "71119"
  },
  {
    "text": "and two if you ever change your mind",
    "start": "71119",
    "end": "72799"
  },
  {
    "text": "you'll have to go through a very nasty",
    "start": "72799",
    "end": "74240"
  },
  {
    "text": "divorce you want a divorce",
    "start": "74240",
    "end": "76000"
  },
  {
    "text": "i have wings tally i want to fly",
    "start": "76000",
    "end": "79119"
  },
  {
    "text": "when you learn basic css you'll have",
    "start": "79119",
    "end": "80799"
  },
  {
    "text": "more control over your code",
    "start": "80799",
    "end": "82240"
  },
  {
    "text": "creativity and freedom the best piece of",
    "start": "82240",
    "end": "84320"
  },
  {
    "text": "advice that i didn't receive until well",
    "start": "84320",
    "end": "85920"
  },
  {
    "text": "into my web development career was to",
    "start": "85920",
    "end": "87680"
  },
  {
    "text": "learn the css",
    "start": "87680",
    "end": "88560"
  },
  {
    "text": "box model because when you understand it",
    "start": "88560",
    "end": "90640"
  },
  {
    "text": "everything else in the language starts",
    "start": "90640",
    "end": "92159"
  },
  {
    "text": "to make more sense",
    "start": "92159",
    "end": "93040"
  },
  {
    "text": "in fact it's so easy i'll just teach you",
    "start": "93040",
    "end": "95119"
  },
  {
    "text": "the box model right now",
    "start": "95119",
    "end": "96240"
  },
  {
    "text": "think of every html element as a box",
    "start": "96240",
    "end": "98640"
  },
  {
    "text": "inside that box you have the content",
    "start": "98640",
    "end": "100400"
  },
  {
    "text": "which can have a width and height you",
    "start": "100400",
    "end": "101920"
  },
  {
    "text": "can add padding around that box to",
    "start": "101920",
    "end": "103600"
  },
  {
    "text": "squeeze the content then you can add a",
    "start": "103600",
    "end": "105119"
  },
  {
    "text": "border around the outside",
    "start": "105119",
    "end": "106479"
  },
  {
    "text": "then additional invisible space around",
    "start": "106479",
    "end": "108240"
  },
  {
    "text": "the border called a margin",
    "start": "108240",
    "end": "109520"
  },
  {
    "text": "everything in css related to layout and",
    "start": "109520",
    "end": "111680"
  },
  {
    "text": "position is influenced by the box model",
    "start": "111680",
    "end": "113840"
  },
  {
    "text": "if you open up chrome dev tools you can",
    "start": "113840",
    "end": "115439"
  },
  {
    "text": "see how the box model is computed for",
    "start": "115439",
    "end": "117280"
  },
  {
    "text": "any element on the page",
    "start": "117280",
    "end": "118560"
  },
  {
    "text": "and that brings me to tip number two",
    "start": "118560",
    "end": "120240"
  },
  {
    "start": "120000",
    "end": "151000"
  },
  {
    "text": "don't use chrome when debugging css",
    "start": "120240",
    "end": "122399"
  },
  {
    "text": "instead check out firefox their dev",
    "start": "122399",
    "end": "124479"
  },
  {
    "text": "tools are generally superior especially",
    "start": "124479",
    "end": "126240"
  },
  {
    "text": "when it comes to css if i inspect an",
    "start": "126240",
    "end": "128239"
  },
  {
    "text": "element i have a breakdown of the box",
    "start": "128239",
    "end": "129759"
  },
  {
    "text": "model like i do in chrome but i can also",
    "start": "129759",
    "end": "131680"
  },
  {
    "text": "edit properties on it directly",
    "start": "131680",
    "end": "133200"
  },
  {
    "text": "and firefox gives me a breakdown of all",
    "start": "133200",
    "end": "135360"
  },
  {
    "text": "the properties that are influencing the",
    "start": "135360",
    "end": "136959"
  },
  {
    "text": "box model",
    "start": "136959",
    "end": "137599"
  },
  {
    "text": "it also provides useful annotations in",
    "start": "137599",
    "end": "139360"
  },
  {
    "text": "the html like when one element is",
    "start": "139360",
    "end": "141360"
  },
  {
    "text": "causing another element to overflow",
    "start": "141360",
    "end": "143280"
  },
  {
    "text": "and firefox also provides really nice",
    "start": "143280",
    "end": "145360"
  },
  {
    "text": "graphics for flex and grid layout",
    "start": "145360",
    "end": "147360"
  },
  {
    "text": "speaking of which layout or the",
    "start": "147360",
    "end": "149040"
  },
  {
    "text": "positioning of elements relative to each",
    "start": "149040",
    "end": "151120"
  },
  {
    "start": "151000",
    "end": "214000"
  },
  {
    "text": "other",
    "start": "151120",
    "end": "151519"
  },
  {
    "text": "has historically been one of the most",
    "start": "151519",
    "end": "153040"
  },
  {
    "text": "challenging aspects of css",
    "start": "153040",
    "end": "154800"
  },
  {
    "text": "like the age-old question of how do i",
    "start": "154800",
    "end": "156640"
  },
  {
    "text": "center a div both horizontally and",
    "start": "156640",
    "end": "158480"
  },
  {
    "text": "vertically",
    "start": "158480",
    "end": "159120"
  },
  {
    "text": "one option is to give the child absolute",
    "start": "159120",
    "end": "161200"
  },
  {
    "text": "positioning then move it to the bottom",
    "start": "161200",
    "end": "162959"
  },
  {
    "text": "right corner by using the top and left",
    "start": "162959",
    "end": "164959"
  },
  {
    "text": "properties",
    "start": "164959",
    "end": "165680"
  },
  {
    "text": "then translate it back 50 to put it in",
    "start": "165680",
    "end": "168080"
  },
  {
    "text": "the center",
    "start": "168080",
    "end": "168720"
  },
  {
    "text": "that can work but it's incredibly",
    "start": "168720",
    "end": "170160"
  },
  {
    "text": "unintuitive a much better approach with",
    "start": "170160",
    "end": "172080"
  },
  {
    "text": "modern css",
    "start": "172080",
    "end": "173120"
  },
  {
    "text": "is flexbox which allows you to create a",
    "start": "173120",
    "end": "175360"
  },
  {
    "text": "flexible column or row",
    "start": "175360",
    "end": "176879"
  },
  {
    "text": "anywhere in the ui when an element has",
    "start": "176879",
    "end": "178879"
  },
  {
    "text": "display flex it also has an x and y axis",
    "start": "178879",
    "end": "181760"
  },
  {
    "text": "on which you can align its children the",
    "start": "181760",
    "end": "183760"
  },
  {
    "text": "children flow one way which is known as",
    "start": "183760",
    "end": "185519"
  },
  {
    "text": "the main axis",
    "start": "185519",
    "end": "186400"
  },
  {
    "text": "and can be aligned in the center with",
    "start": "186400",
    "end": "187760"
  },
  {
    "text": "the justify content property",
    "start": "187760",
    "end": "189360"
  },
  {
    "text": "perpendicular to that is the cross axis",
    "start": "189360",
    "end": "191519"
  },
  {
    "text": "and we can move our element to the",
    "start": "191519",
    "end": "192879"
  },
  {
    "text": "center with the align items property",
    "start": "192879",
    "end": "194959"
  },
  {
    "text": "flexbox is usually the first tool i",
    "start": "194959",
    "end": "196640"
  },
  {
    "text": "reach for when it comes to layout",
    "start": "196640",
    "end": "198159"
  },
  {
    "text": "but it does have one major drawback if",
    "start": "198159",
    "end": "200000"
  },
  {
    "text": "you have a big complex ui with many",
    "start": "200000",
    "end": "201920"
  },
  {
    "text": "intersecting rows and columns you may",
    "start": "201920",
    "end": "203760"
  },
  {
    "text": "end up with a lot of container or",
    "start": "203760",
    "end": "205360"
  },
  {
    "text": "wrapper elements in your html",
    "start": "205360",
    "end": "207280"
  },
  {
    "text": "these elements have no semantic meaning",
    "start": "207280",
    "end": "209120"
  },
  {
    "text": "and are just there so your css code has",
    "start": "209120",
    "end": "211040"
  },
  {
    "text": "something to attach itself to",
    "start": "211040",
    "end": "212560"
  },
  {
    "text": "luckily there's a modern css feature",
    "start": "212560",
    "end": "214640"
  },
  {
    "start": "214000",
    "end": "263000"
  },
  {
    "text": "called a grid that can obliterate much",
    "start": "214640",
    "end": "216400"
  },
  {
    "text": "of your code",
    "start": "216400",
    "end": "217120"
  },
  {
    "text": "unlike flexbox which only deals with",
    "start": "217120",
    "end": "219040"
  },
  {
    "text": "individual columns and rows and grid",
    "start": "219040",
    "end": "221120"
  },
  {
    "text": "allows you to think about the big",
    "start": "221120",
    "end": "222480"
  },
  {
    "text": "picture layout if you've been a web",
    "start": "222480",
    "end": "224000"
  },
  {
    "text": "developer for a long time",
    "start": "224000",
    "end": "225200"
  },
  {
    "text": "it may look familiar because it's very",
    "start": "225200",
    "end": "226879"
  },
  {
    "text": "similar to table layout way back in the",
    "start": "226879",
    "end": "228720"
  },
  {
    "text": "day",
    "start": "228720",
    "end": "229120"
  },
  {
    "text": "it's just much more developer friendly",
    "start": "229120",
    "end": "230879"
  },
  {
    "text": "when you set an element to display grid",
    "start": "230879",
    "end": "232799"
  },
  {
    "text": "you can then define its children as a",
    "start": "232799",
    "end": "234480"
  },
  {
    "text": "bunch of columns and rows",
    "start": "234480",
    "end": "235920"
  },
  {
    "text": "columns have a width which can be",
    "start": "235920",
    "end": "237439"
  },
  {
    "text": "defined with the grid template columns",
    "start": "237439",
    "end": "239280"
  },
  {
    "text": "property we have three values here",
    "start": "239280",
    "end": "241120"
  },
  {
    "text": "separated by spaces",
    "start": "241120",
    "end": "242480"
  },
  {
    "text": "which means our grid has three columns",
    "start": "242480",
    "end": "244640"
  },
  {
    "text": "notice the fr value",
    "start": "244640",
    "end": "245920"
  },
  {
    "text": "or fractional unit which will",
    "start": "245920",
    "end": "247360"
  },
  {
    "text": "responsibly share the available space",
    "start": "247360",
    "end": "248959"
  },
  {
    "text": "with other columns in the grid we can",
    "start": "248959",
    "end": "250720"
  },
  {
    "text": "also define some rows",
    "start": "250720",
    "end": "252000"
  },
  {
    "text": "and now every element inside the grid",
    "start": "252000",
    "end": "253680"
  },
  {
    "text": "will be positioned automatically",
    "start": "253680",
    "end": "255680"
  },
  {
    "text": "but the important thing to notice is the",
    "start": "255680",
    "end": "257199"
  },
  {
    "text": "amount of html and css that we've",
    "start": "257199",
    "end": "259359"
  },
  {
    "text": "eliminated compared to flexbox layout or",
    "start": "259359",
    "end": "261680"
  },
  {
    "text": "god forbid table layout",
    "start": "261680",
    "end": "263040"
  },
  {
    "start": "263000",
    "end": "309000"
  },
  {
    "text": "now ninety percent of the time when we",
    "start": "263040",
    "end": "264479"
  },
  {
    "text": "talk about responsive layouts we're just",
    "start": "264479",
    "end": "266240"
  },
  {
    "text": "talking about changing the width of",
    "start": "266240",
    "end": "267600"
  },
  {
    "text": "something",
    "start": "267600",
    "end": "268240"
  },
  {
    "text": "based on the available space on the",
    "start": "268240",
    "end": "269759"
  },
  {
    "text": "device or viewport there are many ways",
    "start": "269759",
    "end": "271600"
  },
  {
    "text": "you might do that",
    "start": "271600",
    "end": "272320"
  },
  {
    "text": "for example you might have an article",
    "start": "272320",
    "end": "273840"
  },
  {
    "text": "that has a preferred width of 50",
    "start": "273840",
    "end": "276080"
  },
  {
    "text": "but on small screens you want to make it",
    "start": "276080",
    "end": "277600"
  },
  {
    "text": "fixed at 200 pixels or fixed at 800",
    "start": "277600",
    "end": "280080"
  },
  {
    "text": "pixels on large screens",
    "start": "280080",
    "end": "281520"
  },
  {
    "text": "you could do that by writing media",
    "start": "281520",
    "end": "282960"
  },
  {
    "text": "queries that will apply css",
    "start": "282960",
    "end": "284560"
  },
  {
    "text": "conditionally based on the viewport size",
    "start": "284560",
    "end": "286800"
  },
  {
    "text": "the only problem with this is that media",
    "start": "286800",
    "end": "288400"
  },
  {
    "text": "queries will make you want to off",
    "start": "288400",
    "end": "289600"
  },
  {
    "text": "yourself as the project grows larger the",
    "start": "289600",
    "end": "291440"
  },
  {
    "text": "good news though",
    "start": "291440",
    "end": "292160"
  },
  {
    "text": "is that you can turn the tables by using",
    "start": "292160",
    "end": "293919"
  },
  {
    "text": "functions like min max and clamp",
    "start": "293919",
    "end": "296080"
  },
  {
    "text": "we could refactor this code to set the",
    "start": "296080",
    "end": "297759"
  },
  {
    "text": "width to a clamped value",
    "start": "297759",
    "end": "299440"
  },
  {
    "text": "that has a minimum of 200 pixels a max",
    "start": "299440",
    "end": "302000"
  },
  {
    "text": "of 600",
    "start": "302000",
    "end": "302960"
  },
  {
    "text": "and then a preferred value of 50 turning",
    "start": "302960",
    "end": "305520"
  },
  {
    "text": "13 lines of code into one for a 92",
    "start": "305520",
    "end": "308080"
  },
  {
    "text": "code reduction speaking of code",
    "start": "308080",
    "end": "309360"
  },
  {
    "start": "309000",
    "end": "330000"
  },
  {
    "text": "reduction here's a little bonus tip in",
    "start": "309360",
    "end": "311199"
  },
  {
    "text": "css we often end up with these very long",
    "start": "311199",
    "end": "313600"
  },
  {
    "text": "hard to read class names but did you",
    "start": "313600",
    "end": "315440"
  },
  {
    "text": "know that you can use emoji characters",
    "start": "315440",
    "end": "317280"
  },
  {
    "text": "as class names",
    "start": "317280",
    "end": "318400"
  },
  {
    "text": "instead of flexible container why not",
    "start": "318400",
    "end": "320240"
  },
  {
    "text": "just use a flex emoji",
    "start": "320240",
    "end": "321600"
  },
  {
    "text": "or instead of red text why not red",
    "start": "321600",
    "end": "323360"
  },
  {
    "text": "lipstick is that a good idea",
    "start": "323360",
    "end": "324960"
  },
  {
    "text": "i don't know give it a try at your job",
    "start": "324960",
    "end": "326479"
  },
  {
    "text": "and let me know what your boss says",
    "start": "326479",
    "end": "327680"
  },
  {
    "text": "about it",
    "start": "327680",
    "end": "328160"
  },
  {
    "text": "we have sort of a problem here yeah now",
    "start": "328160",
    "end": "331199"
  },
  {
    "start": "330000",
    "end": "361000"
  },
  {
    "text": "this next tip is really going to blow",
    "start": "331199",
    "end": "332800"
  },
  {
    "text": "your mind if you've ever had to code a",
    "start": "332800",
    "end": "334400"
  },
  {
    "text": "responsive image or video",
    "start": "334400",
    "end": "336080"
  },
  {
    "text": "that maintains a certain aspect ratio i",
    "start": "336080",
    "end": "338320"
  },
  {
    "text": "had to do this recently on fireship io",
    "start": "338320",
    "end": "340240"
  },
  {
    "text": "to embed videos with a 16x9 aspect ratio",
    "start": "340240",
    "end": "343199"
  },
  {
    "text": "which requires this hack where you put",
    "start": "343199",
    "end": "345080"
  },
  {
    "text": "56.25",
    "start": "345080",
    "end": "346479"
  },
  {
    "text": "padding on the top then give the child",
    "start": "346479",
    "end": "348240"
  },
  {
    "text": "absolute positioning today",
    "start": "348240",
    "end": "349840"
  },
  {
    "text": "although it's not supported everywhere",
    "start": "349840",
    "end": "351120"
  },
  {
    "text": "yet we can use the aspect ratio property",
    "start": "351120",
    "end": "353600"
  },
  {
    "text": "instead of that padding nonsense we can",
    "start": "353600",
    "end": "355280"
  },
  {
    "text": "just define the aspect ratio on the",
    "start": "355280",
    "end": "356960"
  },
  {
    "text": "video",
    "start": "356960",
    "end": "357440"
  },
  {
    "text": "and we're done eliminating css code is a",
    "start": "357440",
    "end": "359840"
  },
  {
    "text": "big part of making it more enjoyable",
    "start": "359840",
    "end": "361680"
  },
  {
    "start": "361000",
    "end": "406000"
  },
  {
    "text": "but of equal importance is making your",
    "start": "361680",
    "end": "363280"
  },
  {
    "text": "code more flexible so that refactoring",
    "start": "363280",
    "end": "365280"
  },
  {
    "text": "is not a total",
    "start": "365280",
    "end": "366000"
  },
  {
    "text": "nightmare a great way to achieve that is",
    "start": "366000",
    "end": "367759"
  },
  {
    "text": "with css custom properties or variables",
    "start": "367759",
    "end": "370560"
  },
  {
    "text": "notice how we're using the same color",
    "start": "370560",
    "end": "371919"
  },
  {
    "text": "value in multiple places if we decide to",
    "start": "371919",
    "end": "374160"
  },
  {
    "text": "change the color we need to modify",
    "start": "374160",
    "end": "375840"
  },
  {
    "text": "every line of code that references it a",
    "start": "375840",
    "end": "377600"
  },
  {
    "text": "better approach is to define a global",
    "start": "377600",
    "end": "379280"
  },
  {
    "text": "variable on the root selector which can",
    "start": "379280",
    "end": "381199"
  },
  {
    "text": "then be referenced wherever it's needed",
    "start": "381199",
    "end": "382800"
  },
  {
    "text": "and now when you decide to change it you",
    "start": "382800",
    "end": "384240"
  },
  {
    "text": "only have to modify one line of code",
    "start": "384240",
    "end": "386319"
  },
  {
    "text": "variables cascade like everything else",
    "start": "386319",
    "end": "388319"
  },
  {
    "text": "in css which means you can override them",
    "start": "388319",
    "end": "390479"
  },
  {
    "text": "by redefining them somewhere deeper in",
    "start": "390479",
    "end": "392479"
  },
  {
    "text": "the tree you can also combine",
    "start": "392479",
    "end": "394000"
  },
  {
    "text": "them to compose more complex values for",
    "start": "394000",
    "end": "396319"
  },
  {
    "text": "example we might define our rgb color",
    "start": "396319",
    "end": "398880"
  },
  {
    "text": "based on the value of three other",
    "start": "398880",
    "end": "400560"
  },
  {
    "text": "variables and this flexibility will",
    "start": "400560",
    "end": "402400"
  },
  {
    "text": "really change your life",
    "start": "402400",
    "end": "403360"
  },
  {
    "text": "by allowing you to quickly swap out",
    "start": "403360",
    "end": "405120"
  },
  {
    "text": "different themes for your website",
    "start": "405120",
    "end": "406720"
  },
  {
    "start": "406000",
    "end": "458000"
  },
  {
    "text": "now css is not really a programming",
    "start": "406720",
    "end": "408720"
  },
  {
    "text": "language in the traditional sense",
    "start": "408720",
    "end": "410319"
  },
  {
    "text": "but it does have the ability to run",
    "start": "410319",
    "end": "412000"
  },
  {
    "text": "basic calculations using the calc",
    "start": "412000",
    "end": "413840"
  },
  {
    "text": "function",
    "start": "413840",
    "end": "414400"
  },
  {
    "text": "it allows you to calculate a value with",
    "start": "414400",
    "end": "416160"
  },
  {
    "text": "some basic math but the really cool",
    "start": "416160",
    "end": "417840"
  },
  {
    "text": "thing about it is that you can combine",
    "start": "417840",
    "end": "419520"
  },
  {
    "text": "different units",
    "start": "419520",
    "end": "420479"
  },
  {
    "text": "like you might want to subtract 50",
    "start": "420479",
    "end": "422080"
  },
  {
    "text": "pixels from the current viewport width",
    "start": "422080",
    "end": "424160"
  },
  {
    "text": "in our code here we have an animation",
    "start": "424160",
    "end": "425840"
  },
  {
    "text": "where elements drop in from the top but",
    "start": "425840",
    "end": "427840"
  },
  {
    "text": "we want to stagger them so they come in",
    "start": "427840",
    "end": "429440"
  },
  {
    "text": "one after the other",
    "start": "429440",
    "end": "430400"
  },
  {
    "text": "one way to achieve that is by applying a",
    "start": "430400",
    "end": "432400"
  },
  {
    "text": "different animation delay for every",
    "start": "432400",
    "end": "434160"
  },
  {
    "text": "single element but that's very",
    "start": "434160",
    "end": "435520"
  },
  {
    "text": "repetitive",
    "start": "435520",
    "end": "436160"
  },
  {
    "text": "and hard to refactor a more",
    "start": "436160",
    "end": "437680"
  },
  {
    "text": "sophisticated approach is to define an",
    "start": "437680",
    "end": "439759"
  },
  {
    "text": "inline css variable for every item that",
    "start": "439759",
    "end": "442479"
  },
  {
    "text": "defines its order",
    "start": "442479",
    "end": "443680"
  },
  {
    "text": "then we can define the animation delay",
    "start": "443680",
    "end": "445680"
  },
  {
    "text": "as a calculation",
    "start": "445680",
    "end": "447039"
  },
  {
    "text": "of the order variable times 100",
    "start": "447039",
    "end": "449520"
  },
  {
    "text": "milliseconds",
    "start": "449520",
    "end": "450400"
  },
  {
    "text": "and now we can handle an infinite number",
    "start": "450400",
    "end": "452160"
  },
  {
    "text": "of elements without increasing our css",
    "start": "452160",
    "end": "454240"
  },
  {
    "text": "footprint thanks to the combined powers",
    "start": "454240",
    "end": "456080"
  },
  {
    "text": "of calc",
    "start": "456080",
    "end": "456800"
  },
  {
    "text": "and variables now i know i just said css",
    "start": "456800",
    "end": "459520"
  },
  {
    "start": "458000",
    "end": "498000"
  },
  {
    "text": "is not a programming language but did",
    "start": "459520",
    "end": "461120"
  },
  {
    "text": "you know that it actually has a state",
    "start": "461120",
    "end": "462639"
  },
  {
    "text": "management mechanism built",
    "start": "462639",
    "end": "464000"
  },
  {
    "text": "into it you can keep track of a running",
    "start": "464000",
    "end": "465840"
  },
  {
    "text": "count in your css code without ever",
    "start": "465840",
    "end": "467680"
  },
  {
    "text": "writing a line of javascript",
    "start": "467680",
    "end": "469360"
  },
  {
    "text": "if you want to number headings in your",
    "start": "469360",
    "end": "470879"
  },
  {
    "text": "html the naive way to do it is to",
    "start": "470879",
    "end": "473039"
  },
  {
    "text": "manually add those numbers in the html",
    "start": "473039",
    "end": "475280"
  },
  {
    "text": "itself",
    "start": "475280",
    "end": "475759"
  },
  {
    "text": "because if you ever want to splice in a",
    "start": "475759",
    "end": "477360"
  },
  {
    "text": "new heading you'll have to renumber",
    "start": "477360",
    "end": "479120"
  },
  {
    "text": "everything manually",
    "start": "479120",
    "end": "480400"
  },
  {
    "text": "a smarter approach might be a css",
    "start": "480400",
    "end": "482400"
  },
  {
    "text": "counter you can create a counter in your",
    "start": "482400",
    "end": "484160"
  },
  {
    "text": "code",
    "start": "484160",
    "end": "484560"
  },
  {
    "text": "using the counter reset property give it",
    "start": "484560",
    "end": "486800"
  },
  {
    "text": "a name of anything you want",
    "start": "486800",
    "end": "488160"
  },
  {
    "text": "then increment it whenever the desired",
    "start": "488160",
    "end": "489919"
  },
  {
    "text": "selector is applied it'll start from 0",
    "start": "489919",
    "end": "492240"
  },
  {
    "text": "then add 1 to every h1 element in the",
    "start": "492240",
    "end": "494720"
  },
  {
    "text": "dom",
    "start": "494720",
    "end": "495120"
  },
  {
    "text": "and now you never have to worry about",
    "start": "495120",
    "end": "496400"
  },
  {
    "text": "numbering things in your html",
    "start": "496400",
    "end": "498240"
  },
  {
    "start": "498000",
    "end": "541000"
  },
  {
    "text": "and that brings us to our final tip when",
    "start": "498240",
    "end": "500080"
  },
  {
    "text": "building a complex drop-down menu you",
    "start": "500080",
    "end": "501840"
  },
  {
    "text": "might assume that some javascript is",
    "start": "501840",
    "end": "503360"
  },
  {
    "text": "involved to manage the open and closed",
    "start": "503360",
    "end": "505039"
  },
  {
    "text": "state of the menu",
    "start": "505039",
    "end": "506160"
  },
  {
    "text": "but you might be surprised at how far",
    "start": "506160",
    "end": "507680"
  },
  {
    "text": "you can get with just plain css",
    "start": "507680",
    "end": "509759"
  },
  {
    "text": "now you're most likely familiar with the",
    "start": "509759",
    "end": "511440"
  },
  {
    "text": "focus pseudo class which is applied to",
    "start": "511440",
    "end": "513360"
  },
  {
    "text": "an element when you go into a form input",
    "start": "513360",
    "end": "515440"
  },
  {
    "text": "or click on a button",
    "start": "515440",
    "end": "516479"
  },
  {
    "text": "the problem is that when building a drop",
    "start": "516479",
    "end": "518159"
  },
  {
    "text": "down you might use focus to open a menu",
    "start": "518159",
    "end": "520399"
  },
  {
    "text": "but then when you click on something",
    "start": "520399",
    "end": "521680"
  },
  {
    "text": "inside that menu it loses focus and",
    "start": "521680",
    "end": "523839"
  },
  {
    "text": "closes",
    "start": "523839",
    "end": "524399"
  },
  {
    "text": "and that's when you reach for javascript",
    "start": "524399",
    "end": "525839"
  },
  {
    "text": "to manage state however there's another",
    "start": "525839",
    "end": "527839"
  },
  {
    "text": "pseudo class called focus within and it",
    "start": "527839",
    "end": "529839"
  },
  {
    "text": "stays active",
    "start": "529839",
    "end": "530720"
  },
  {
    "text": "if any children also have focus and that",
    "start": "530720",
    "end": "533040"
  },
  {
    "text": "one simple feature",
    "start": "533040",
    "end": "534000"
  },
  {
    "text": "can eliminate a lot of javascript used",
    "start": "534000",
    "end": "535920"
  },
  {
    "text": "to toggle on and off states and with",
    "start": "535920",
    "end": "537920"
  },
  {
    "text": "that you have 10 ways to make your css",
    "start": "537920",
    "end": "539920"
  },
  {
    "text": "code more enjoyable to work with",
    "start": "539920",
    "end": "541600"
  },
  {
    "start": "541000",
    "end": "579000"
  },
  {
    "text": "but remember those browser vendor",
    "start": "541600",
    "end": "543120"
  },
  {
    "text": "prefixes i mentioned earlier in the",
    "start": "543120",
    "end": "544560"
  },
  {
    "text": "video",
    "start": "544560",
    "end": "545120"
  },
  {
    "text": "well that stuff's like herpes it's not",
    "start": "545120",
    "end": "546880"
  },
  {
    "text": "going away luckily we do have effective",
    "start": "546880",
    "end": "548880"
  },
  {
    "text": "medications that will make it barely",
    "start": "548880",
    "end": "550399"
  },
  {
    "text": "noticeable",
    "start": "550399",
    "end": "551040"
  },
  {
    "text": "a tool you should know about is post css",
    "start": "551040",
    "end": "553200"
  },
  {
    "text": "which itself uses a tool called auto",
    "start": "553200",
    "end": "555040"
  },
  {
    "text": "prefixer",
    "start": "555040",
    "end": "555839"
  },
  {
    "text": "to add all the vendor prefixes",
    "start": "555839",
    "end": "557519"
  },
  {
    "text": "automatically in addition it allows you",
    "start": "557519",
    "end": "559519"
  },
  {
    "text": "to use modern css features even if",
    "start": "559519",
    "end": "561600"
  },
  {
    "text": "they're not supported on your targeted",
    "start": "561600",
    "end": "563120"
  },
  {
    "text": "browsers",
    "start": "563120",
    "end": "563760"
  },
  {
    "text": "in addition you may look into",
    "start": "563760",
    "end": "565040"
  },
  {
    "text": "pre-processors like sas less or stylus",
    "start": "565040",
    "end": "567920"
  },
  {
    "text": "but we'll save those for a future video",
    "start": "567920",
    "end": "569839"
  },
  {
    "text": "make sure to be a subscriber and leave a",
    "start": "569839",
    "end": "571440"
  },
  {
    "text": "comment below because next week i'll",
    "start": "571440",
    "end": "572959"
  },
  {
    "text": "announce the winners of the t-shirt",
    "start": "572959",
    "end": "574320"
  },
  {
    "text": "giveaway thanks for watching and i will",
    "start": "574320",
    "end": "576240"
  },
  {
    "text": "see you in the next one",
    "start": "576240",
    "end": "580160"
  }
]