[
  {
    "text": "in this episode I'm going to show you",
    "start": "299",
    "end": "2550"
  },
  {
    "text": "how to send transactional email in",
    "start": "2550",
    "end": "4589"
  },
  {
    "text": "angular 4 is a background task in the",
    "start": "4589",
    "end": "6899"
  },
  {
    "text": "cloud to facilitate this the emails will",
    "start": "6899",
    "end": "10620"
  },
  {
    "text": "be sent with Google Cloud functions for",
    "start": "10620",
    "end": "12750"
  },
  {
    "text": "firebase and email service SendGrid you",
    "start": "12750",
    "end": "16320"
  },
  {
    "text": "can use any email provider you want such",
    "start": "16320",
    "end": "18150"
  },
  {
    "text": "as mail gun or postmark or even Gmail",
    "start": "18150",
    "end": "21000"
  },
  {
    "text": "but I chose SendGrid for this tutorial",
    "start": "21000",
    "end": "23279"
  },
  {
    "text": "because they have a solid helper library",
    "start": "23279",
    "end": "25949"
  },
  {
    "text": "and a detailed node example in their",
    "start": "25949",
    "end": "29039"
  },
  {
    "text": "documentation they also offer a free",
    "start": "29039",
    "end": "31260"
  },
  {
    "text": "trial with no credit card required so",
    "start": "31260",
    "end": "33630"
  },
  {
    "text": "you can get your API key and follow",
    "start": "33630",
    "end": "35160"
  },
  {
    "text": "along without having to pay anything out",
    "start": "35160",
    "end": "37380"
  },
  {
    "text": "of pocket so what is the cloud function",
    "start": "37380",
    "end": "41460"
  },
  {
    "text": "exactly Google cloud function is a",
    "start": "41460",
    "end": "44219"
  },
  {
    "text": "service architecture that allows you to",
    "start": "44219",
    "end": "46379"
  },
  {
    "text": "run isolated code in a node.js runtime",
    "start": "46379",
    "end": "48570"
  },
  {
    "text": "as opposed to deploying your own server",
    "start": "48570",
    "end": "51390"
  },
  {
    "text": "from scratch it's Google's answers to",
    "start": "51390",
    "end": "54149"
  },
  {
    "text": "AWS lambda and it's only been available",
    "start": "54149",
    "end": "56789"
  },
  {
    "text": "to the public for less than a year it's",
    "start": "56789",
    "end": "60390"
  },
  {
    "text": "not some tool for firebase developers",
    "start": "60390",
    "end": "62100"
  },
  {
    "text": "because it allows you to run code in the",
    "start": "62100",
    "end": "64018"
  },
  {
    "text": "background that would otherwise slow",
    "start": "64019",
    "end": "65909"
  },
  {
    "text": "down an angular app and email is",
    "start": "65909",
    "end": "68369"
  },
  {
    "text": "definitely one of those tasks that you",
    "start": "68369",
    "end": "70380"
  },
  {
    "text": "want to delegate to its own background",
    "start": "70380",
    "end": "72210"
  },
  {
    "text": "task or micro service we can trigger",
    "start": "72210",
    "end": "76020"
  },
  {
    "text": "cloud functions in many different ways",
    "start": "76020",
    "end": "77549"
  },
  {
    "text": "but this lesson will demonstrate the use",
    "start": "77549",
    "end": "79770"
  },
  {
    "text": "of cloud functions via HTTP it's also",
    "start": "79770",
    "end": "83580"
  },
  {
    "text": "useful to know that you can trigger",
    "start": "83580",
    "end": "84750"
  },
  {
    "text": "cloud functions on database write",
    "start": "84750",
    "end": "86939"
  },
  {
    "text": "storage upload authentication events and",
    "start": "86939",
    "end": "90030"
  },
  {
    "text": "even analytic you BAM all of which are",
    "start": "90030",
    "end": "92610"
  },
  {
    "text": "common use cases for transactional",
    "start": "92610",
    "end": "94590"
  },
  {
    "text": "emails",
    "start": "94590",
    "end": "95250"
  },
  {
    "text": "some examples include sending a welcome",
    "start": "95250",
    "end": "97979"
  },
  {
    "text": "email to a new user for sending the",
    "start": "97979",
    "end": "101189"
  },
  {
    "text": "email when they've reached a max",
    "start": "101189",
    "end": "103229"
  },
  {
    "text": "capacity on file uploads or some other",
    "start": "103229",
    "end": "105470"
  },
  {
    "text": "application like that",
    "start": "105470",
    "end": "107100"
  },
  {
    "text": "I plan on covering these scenarios and",
    "start": "107100",
    "end": "109259"
  },
  {
    "text": "give your videos",
    "start": "109259",
    "end": "110310"
  },
  {
    "text": "[Music]",
    "start": "110310",
    "end": "111720"
  },
  {
    "text": "at this point I'm assuming you have an",
    "start": "111720",
    "end": "113730"
  },
  {
    "text": "angular app started with fire based",
    "start": "113730",
    "end": "116070"
  },
  {
    "text": "tools package installed start by running",
    "start": "116070",
    "end": "118800"
  },
  {
    "text": "the firebase emit command and then",
    "start": "118800",
    "end": "120990"
  },
  {
    "text": "scrolling down to functions this will",
    "start": "120990",
    "end": "124260"
  },
  {
    "text": "create a functions directory and give us",
    "start": "124260",
    "end": "126720"
  },
  {
    "text": "an index J s file which is where the",
    "start": "126720",
    "end": "129600"
  },
  {
    "text": "functions are defined the functions",
    "start": "129600",
    "end": "131910"
  },
  {
    "text": "directory is its own isolated node",
    "start": "131910",
    "end": "134010"
  },
  {
    "text": "environment completely separate from",
    "start": "134010",
    "end": "135810"
  },
  {
    "text": "your angular app its logic has no direct",
    "start": "135810",
    "end": "138540"
  },
  {
    "text": "connection to angular whatsoever this is",
    "start": "138540",
    "end": "141300"
  },
  {
    "text": "great because it keeps your front-end",
    "start": "141300",
    "end": "142830"
  },
  {
    "text": "app lightweight and allows you to have a",
    "start": "142830",
    "end": "145350"
  },
  {
    "text": "separate environment where you can",
    "start": "145350",
    "end": "146490"
  },
  {
    "text": "delegate CPU and memory intensive",
    "start": "146490",
    "end": "148470"
  },
  {
    "text": "operations first we need to install the",
    "start": "148470",
    "end": "153150"
  },
  {
    "text": "SendGrid package so we CD into the",
    "start": "153150",
    "end": "155550"
  },
  {
    "text": "functions directory then run npm install",
    "start": "155550",
    "end": "159950"
  },
  {
    "text": "[Music]",
    "start": "162900",
    "end": "165740"
  },
  {
    "text": "first i require the standard package and",
    "start": "165740",
    "end": "168690"
  },
  {
    "text": "path with the api key",
    "start": "168690",
    "end": "172190"
  },
  {
    "text": "[Music]",
    "start": "178630",
    "end": "181699"
  },
  {
    "text": "next I define a course body helper to",
    "start": "182319",
    "end": "185690"
  },
  {
    "text": "convert the email parameters into JSON",
    "start": "185690",
    "end": "187790"
  },
  {
    "text": "with Len grids mail helper this is",
    "start": "187790",
    "end": "190670"
  },
  {
    "text": "actually a pretty powerful feature from",
    "start": "190670",
    "end": "192500"
  },
  {
    "text": "send grid when it comes to formatting",
    "start": "192500",
    "end": "194150"
  },
  {
    "text": "emails so check out all the options in",
    "start": "194150",
    "end": "196580"
  },
  {
    "text": "the documentation core attachments and",
    "start": "196580",
    "end": "198950"
  },
  {
    "text": "things like that to create a cloud",
    "start": "198950",
    "end": "202069"
  },
  {
    "text": "function we use the exports keyword",
    "start": "202069",
    "end": "204410"
  },
  {
    "text": "followed by the function name in this",
    "start": "204410",
    "end": "207290"
  },
  {
    "text": "case I'm going to call it HTTP email our",
    "start": "207290",
    "end": "210470"
  },
  {
    "text": "function will return a promise when",
    "start": "210470",
    "end": "212150"
  },
  {
    "text": "triggered via HTTP and it's successful",
    "start": "212150",
    "end": "215480"
  },
  {
    "text": "it will sell the SendGrid API we're",
    "start": "215480",
    "end": "218180"
  },
  {
    "text": "sending email the request must be a type",
    "start": "218180",
    "end": "221120"
  },
  {
    "text": "post and should have query parameters",
    "start": "221120",
    "end": "223849"
  },
  {
    "text": "that define the email addresses subject",
    "start": "223849",
    "end": "226069"
  },
  {
    "text": "content and any other variables in the",
    "start": "226069",
    "end": "228739"
  },
  {
    "text": "email SendGrid will then return its own",
    "start": "228739",
    "end": "231709"
  },
  {
    "text": "response letting us know the email was",
    "start": "231709",
    "end": "233810"
  },
  {
    "text": "successful or if an exception has",
    "start": "233810",
    "end": "235730"
  },
  {
    "text": "occurred before we can wire up the cloud",
    "start": "235730",
    "end": "239090"
  },
  {
    "text": "function with angular we first need to",
    "start": "239090",
    "end": "241129"
  },
  {
    "text": "deploy run the firebase deploy command",
    "start": "241129",
    "end": "244760"
  },
  {
    "text": "flagging only functions it'll take a",
    "start": "244760",
    "end": "248180"
  },
  {
    "text": "couple minutes but when the deployment",
    "start": "248180",
    "end": "250280"
  },
  {
    "text": "is complete the console will point out",
    "start": "250280",
    "end": "252290"
  },
  {
    "text": "the URL used to trigger the function",
    "start": "252290",
    "end": "254090"
  },
  {
    "text": "make note of this URL because we're",
    "start": "254090",
    "end": "256070"
  },
  {
    "text": "going to use angular's HTTP library to",
    "start": "256070",
    "end": "258470"
  },
  {
    "text": "trigger this URL in the next step now",
    "start": "258470",
    "end": "261620"
  },
  {
    "text": "this function is deployed we can call",
    "start": "261620",
    "end": "264080"
  },
  {
    "text": "this function from anywhere within our",
    "start": "264080",
    "end": "265760"
  },
  {
    "text": "angular app here I have a brand new send",
    "start": "265760",
    "end": "268250"
  },
  {
    "text": "email component that will trigger the",
    "start": "268250",
    "end": "270349"
  },
  {
    "text": "function first I import the HTTP module",
    "start": "270349",
    "end": "274130"
  },
  {
    "text": "and create a function that open a post",
    "start": "274130",
    "end": "276979"
  },
  {
    "text": "request to the URL that we just deployed",
    "start": "276979",
    "end": "278930"
  },
  {
    "text": "I'm also going to hard code some query",
    "start": "278930",
    "end": "281419"
  },
  {
    "text": "parameters just to show you how to send",
    "start": "281419",
    "end": "283280"
  },
  {
    "text": "data over HTTP to the function at solve",
    "start": "283280",
    "end": "287350"
  },
  {
    "text": "in this example I'm just going to",
    "start": "287350",
    "end": "289510"
  },
  {
    "text": "console.log the response for debugging",
    "start": "289510",
    "end": "294330"
  },
  {
    "text": "[Music]",
    "start": "301610",
    "end": "306099"
  },
  {
    "text": "now we can trigger the clock function",
    "start": "306120",
    "end": "308140"
  },
  {
    "text": "with the button click or any other event",
    "start": "308140",
    "end": "310870"
  },
  {
    "text": "for that matter if all went according to",
    "start": "310870",
    "end": "314800"
  },
  {
    "text": "plan you should see an email on your",
    "start": "314800",
    "end": "316180"
  },
  {
    "text": "Inbox",
    "start": "316180",
    "end": "316840"
  },
  {
    "text": "if not make sure to check the console or",
    "start": "316840",
    "end": "319300"
  },
  {
    "text": "the firebase cloud functions logs for",
    "start": "319300",
    "end": "321670"
  },
  {
    "text": "any exception that's it for",
    "start": "321670",
    "end": "323980"
  },
  {
    "text": "transactional email thanks for watching",
    "start": "323980",
    "end": "327930"
  },
  {
    "text": "[Music]",
    "start": "329320",
    "end": "334799"
  }
]