[
  {
    "text": "a few weeks ago we built a graph QL",
    "start": "0",
    "end": "8429"
  },
  {
    "text": "server with Apollo and nodejs if you",
    "start": "8429",
    "end": "11370"
  },
  {
    "text": "haven't seen that video make sure to",
    "start": "11370",
    "end": "12780"
  },
  {
    "text": "check that one out first to get a better",
    "start": "12780",
    "end": "14160"
  },
  {
    "text": "understanding of graph QL and Apollo",
    "start": "14160",
    "end": "16108"
  },
  {
    "text": "because in today's episode we're going",
    "start": "16109",
    "end": "17940"
  },
  {
    "text": "to be tackling the front end side of",
    "start": "17940",
    "end": "19380"
  },
  {
    "text": "this equation which involves querying",
    "start": "19380",
    "end": "21090"
  },
  {
    "text": "data and providing mutations with",
    "start": "21090",
    "end": "23160"
  },
  {
    "text": "optimistic updates in our angular app if",
    "start": "23160",
    "end": "25920"
  },
  {
    "text": "you're new here make sure to LIKE and",
    "start": "25920",
    "end": "26939"
  },
  {
    "text": "subscribe and send a thank you to Arjun",
    "start": "26939",
    "end": "29310"
  },
  {
    "text": "Yellen and Shelley who was responsible",
    "start": "29310",
    "end": "30900"
  },
  {
    "text": "for writing the code for this lesson to",
    "start": "30900",
    "end": "33270"
  },
  {
    "text": "get started let's first talk about why",
    "start": "33270",
    "end": "34800"
  },
  {
    "text": "Apollo and graph QL are awesome",
    "start": "34800",
    "end": "36719"
  },
  {
    "text": "technologies from the front-end",
    "start": "36719",
    "end": "38070"
  },
  {
    "text": "developer perspective",
    "start": "38070",
    "end": "39180"
  },
  {
    "text": "notice how when I click this heart",
    "start": "39180",
    "end": "41010"
  },
  {
    "text": "button that the count increases and then",
    "start": "41010",
    "end": "43379"
  },
  {
    "text": "a second later our server responds with",
    "start": "43379",
    "end": "45270"
  },
  {
    "text": "an error and then it revert back to the",
    "start": "45270",
    "end": "47219"
  },
  {
    "text": "old value that's known as an optimistic",
    "start": "47219",
    "end": "49590"
  },
  {
    "text": "update or latency compensation and if",
    "start": "49590",
    "end": "52170"
  },
  {
    "text": "you use firebase you're probably already",
    "start": "52170",
    "end": "53730"
  },
  {
    "text": "familiar with this because that's one of",
    "start": "53730",
    "end": "55350"
  },
  {
    "text": "the things that the SDK does for you",
    "start": "55350",
    "end": "57180"
  },
  {
    "text": "automatically but if you're not using",
    "start": "57180",
    "end": "58710"
  },
  {
    "text": "the firebase SDK this is a feature that",
    "start": "58710",
    "end": "60629"
  },
  {
    "text": "would be really difficult to implement",
    "start": "60629",
    "end": "62160"
  },
  {
    "text": "from scratch",
    "start": "62160",
    "end": "63059"
  },
  {
    "text": "Apollo angular makes it easy to",
    "start": "63059",
    "end": "64470"
  },
  {
    "text": "implement features like this plus we can",
    "start": "64470",
    "end": "66540"
  },
  {
    "text": "use it with any back-end data source",
    "start": "66540",
    "end": "68130"
  },
  {
    "text": "that we've set up in our graph QL server",
    "start": "68130",
    "end": "70049"
  },
  {
    "text": "if we open this project in be s code",
    "start": "70049",
    "end": "72570"
  },
  {
    "text": "you'll notice that we have a back-end",
    "start": "72570",
    "end": "73830"
  },
  {
    "text": "and front-end folder the backend is the",
    "start": "73830",
    "end": "76409"
  },
  {
    "text": "graph QL server that we built in the",
    "start": "76409",
    "end": "77939"
  },
  {
    "text": "first episode we'll go in there and make",
    "start": "77939",
    "end": "79560"
  },
  {
    "text": "some updates but for the most part will",
    "start": "79560",
    "end": "81150"
  },
  {
    "text": "be in the front end which is an angular",
    "start": "81150",
    "end": "82740"
  },
  {
    "text": "6 app in our friend and app we're going",
    "start": "82740",
    "end": "85049"
  },
  {
    "text": "to install Apollo angular boost which is",
    "start": "85049",
    "end": "87810"
  },
  {
    "text": "a client library that makes it easy to",
    "start": "87810",
    "end": "89610"
  },
  {
    "text": "set up graph QL on an angular app and",
    "start": "89610",
    "end": "91409"
  },
  {
    "text": "also a library called Apollo code gen",
    "start": "91409",
    "end": "93869"
  },
  {
    "text": "which will allow us to generate",
    "start": "93869",
    "end": "95250"
  },
  {
    "text": "typescript definitions from our server",
    "start": "95250",
    "end": "97229"
  },
  {
    "text": "side automatically which is another",
    "start": "97229",
    "end": "99150"
  },
  {
    "text": "really awesome feature that we'll see",
    "start": "99150",
    "end": "100770"
  },
  {
    "text": "here in a few minutes and lastly we'll",
    "start": "100770",
    "end": "103200"
  },
  {
    "text": "use the angular CLI to generate an NG",
    "start": "103200",
    "end": "105570"
  },
  {
    "text": "module for our graph QL feature then we",
    "start": "105570",
    "end": "108990"
  },
  {
    "text": "can go ahead and open up that module and",
    "start": "108990",
    "end": "110579"
  },
  {
    "text": "we'll want to import the apollo boost",
    "start": "110579",
    "end": "112500"
  },
  {
    "text": "library and add it to the imports array",
    "start": "112500",
    "end": "114869"
  },
  {
    "text": "in the ng module then we'll add a palo",
    "start": "114869",
    "end": "117689"
  },
  {
    "text": "boost to the constructor of this module",
    "start": "117689",
    "end": "119520"
  },
  {
    "text": "and call apollo boost create and then",
    "start": "119520",
    "end": "121950"
  },
  {
    "text": "point it to wherever our graph QL server",
    "start": "121950",
    "end": "124140"
  },
  {
    "text": "is being hosted in this case we're",
    "start": "124140",
    "end": "126090"
  },
  {
    "text": "hosting it on localhost 4000 slash graph",
    "start": "126090",
    "end": "128640"
  },
  {
    "text": "QL and lastly we'll make sure to import",
    "start": "128640",
    "end": "132000"
  },
  {
    "text": "this graph QL module inside of",
    "start": "132000",
    "end": "133890"
  },
  {
    "text": "or app module so that takes care of the",
    "start": "133890",
    "end": "136560"
  },
  {
    "text": "front end setup but now I'm going to go",
    "start": "136560",
    "end": "138270"
  },
  {
    "text": "into the backend and setup a mutation so",
    "start": "138270",
    "end": "141120"
  },
  {
    "text": "we have some data that we can actually",
    "start": "141120",
    "end": "142380"
  },
  {
    "text": "update in this app unlike a REST API",
    "start": "142380",
    "end": "144840"
  },
  {
    "text": "where we would use something like post",
    "start": "144840",
    "end": "146670"
  },
  {
    "text": "patch or put to update data in the",
    "start": "146670",
    "end": "148590"
  },
  {
    "text": "backend we just have a single mutation",
    "start": "148590",
    "end": "150390"
  },
  {
    "text": "query that we can make that signifies",
    "start": "150390",
    "end": "152490"
  },
  {
    "text": "data is going to be updated with this",
    "start": "152490",
    "end": "154560"
  },
  {
    "text": "query so we'll set up a mutation here",
    "start": "154560",
    "end": "156900"
  },
  {
    "text": "that allows a user to like a tweet to",
    "start": "156900",
    "end": "159570"
  },
  {
    "text": "make that possible we'll just create a",
    "start": "159570",
    "end": "160890"
  },
  {
    "text": "mutation type called like tweet that",
    "start": "160890",
    "end": "162840"
  },
  {
    "text": "takes in a tweet ID as an argument and",
    "start": "162840",
    "end": "164640"
  },
  {
    "text": "then returns the newly created tweet as",
    "start": "164640",
    "end": "166709"
  },
  {
    "text": "its response then we just need to write",
    "start": "166709",
    "end": "168989"
  },
  {
    "text": "a resolver for this mutation in the",
    "start": "168989",
    "end": "171510"
  },
  {
    "text": "resolvers we'll go ahead and create a",
    "start": "171510",
    "end": "173010"
  },
  {
    "text": "mutation object then give it a like",
    "start": "173010",
    "end": "175350"
  },
  {
    "text": "tweet function that is asynchronous",
    "start": "175350",
    "end": "177060"
  },
  {
    "text": "meaning it returns a promise inside this",
    "start": "177060",
    "end": "179519"
  },
  {
    "text": "function we perform the mutation which",
    "start": "179519",
    "end": "181230"
  },
  {
    "text": "is just updating the tweet like count so",
    "start": "181230",
    "end": "184140"
  },
  {
    "text": "we'll go ahead and make a reference to",
    "start": "184140",
    "end": "185489"
  },
  {
    "text": "the tweet itself then pull the current",
    "start": "185489",
    "end": "187739"
  },
  {
    "text": "count of tweets increment it by one then",
    "start": "187739",
    "end": "190709"
  },
  {
    "text": "update the data in the database and",
    "start": "190709",
    "end": "192600"
  },
  {
    "text": "lastly we'll return the freshest data",
    "start": "192600",
    "end": "195000"
  },
  {
    "text": "from the database and we'll also want to",
    "start": "195000",
    "end": "197280"
  },
  {
    "text": "catch any errors here and return an",
    "start": "197280",
    "end": "199200"
  },
  {
    "text": "Apollo error back to the client if that",
    "start": "199200",
    "end": "201269"
  },
  {
    "text": "update fails that takes care of the back",
    "start": "201269",
    "end": "203880"
  },
  {
    "text": "end now I want to show you something",
    "start": "203880",
    "end": "205380"
  },
  {
    "text": "really cool you can do on the front end",
    "start": "205380",
    "end": "206850"
  },
  {
    "text": "with the Apollo CLI which is generating",
    "start": "206850",
    "end": "209489"
  },
  {
    "text": "all of your type definitions in your",
    "start": "209489",
    "end": "211260"
  },
  {
    "text": "angular app by making a query to your",
    "start": "211260",
    "end": "213269"
  },
  {
    "text": "back-end server first I'm creating a new",
    "start": "213269",
    "end": "216060"
  },
  {
    "text": "directory called types and then we have",
    "start": "216060",
    "end": "218160"
  },
  {
    "text": "this big long command here that you can",
    "start": "218160",
    "end": "219660"
  },
  {
    "text": "copy and paste from the source code that",
    "start": "219660",
    "end": "221280"
  },
  {
    "text": "will generate the types as a schema JSON",
    "start": "221280",
    "end": "224190"
  },
  {
    "text": "file it does this by making what's",
    "start": "224190",
    "end": "226380"
  },
  {
    "text": "called an introspection query which is a",
    "start": "226380",
    "end": "228239"
  },
  {
    "text": "special thing in graph QL that will",
    "start": "228239",
    "end": "230100"
  },
  {
    "text": "return the entire schema of the database",
    "start": "230100",
    "end": "231900"
  },
  {
    "text": "to your front-end client but it's",
    "start": "231900",
    "end": "234299"
  },
  {
    "text": "extremely powerful if you're a front-end",
    "start": "234299",
    "end": "235890"
  },
  {
    "text": "developer because you now know the",
    "start": "235890",
    "end": "237299"
  },
  {
    "text": "entire shape of all the data that's",
    "start": "237299",
    "end": "239130"
  },
  {
    "text": "available in the backend so you can see",
    "start": "239130",
    "end": "241590"
  },
  {
    "text": "here we now have a type script type for",
    "start": "241590",
    "end": "243360"
  },
  {
    "text": "the tweets query that retrieves the",
    "start": "243360",
    "end": "245130"
  },
  {
    "text": "items from the database and then also",
    "start": "245130",
    "end": "247079"
  },
  {
    "text": "another one for the like tweet mutation",
    "start": "247079",
    "end": "249750"
  },
  {
    "text": "which will update the tweet count now",
    "start": "249750",
    "end": "252390"
  },
  {
    "text": "let's go ahead and put these types to",
    "start": "252390",
    "end": "253650"
  },
  {
    "text": "use in our app component as you saw from",
    "start": "253650",
    "end": "255900"
  },
  {
    "text": "the demo we need this component to loop",
    "start": "255900",
    "end": "257789"
  },
  {
    "text": "over an observable array of tweet",
    "start": "257789",
    "end": "259709"
  },
  {
    "text": "content and also update the light count",
    "start": "259709",
    "end": "262079"
  },
  {
    "text": "when the heart button is clicked so",
    "start": "262080",
    "end": "264630"
  },
  {
    "text": "we'll bring in Apollo on graph QL a few",
    "start": "264630",
    "end": "266820"
  },
  {
    "text": "things from our XJ",
    "start": "266820",
    "end": "267750"
  },
  {
    "text": "and the types that we just generated",
    "start": "267750",
    "end": "269960"
  },
  {
    "text": "first we'll declare a property called",
    "start": "269960",
    "end": "272130"
  },
  {
    "text": "tweets which is just an observable of",
    "start": "272130",
    "end": "273930"
  },
  {
    "text": "the tweet data then we have the tweets",
    "start": "273930",
    "end": "275790"
  },
  {
    "text": "query which is a graph QL object that",
    "start": "275790",
    "end": "277980"
  },
  {
    "text": "defines how we retrieve this from the",
    "start": "277980",
    "end": "279750"
  },
  {
    "text": "graph QL backend this is nice because we",
    "start": "279750",
    "end": "282390"
  },
  {
    "text": "can explicitly define the data that's",
    "start": "282390",
    "end": "284040"
  },
  {
    "text": "needed for the front-end user experience",
    "start": "284040",
    "end": "286080"
  },
  {
    "text": "which in this case would just be the",
    "start": "286080",
    "end": "287550"
  },
  {
    "text": "tweet ID the text content and the white",
    "start": "287550",
    "end": "290490"
  },
  {
    "text": "count the next step is to send this",
    "start": "290490",
    "end": "293100"
  },
  {
    "text": "query off to our back-end and return the",
    "start": "293100",
    "end": "295200"
  },
  {
    "text": "data as an observable so Apollo is a",
    "start": "295200",
    "end": "298320"
  },
  {
    "text": "service that we can inject in the",
    "start": "298320",
    "end": "299580"
  },
  {
    "text": "constructor and then to make a query we",
    "start": "299580",
    "end": "301710"
  },
  {
    "text": "can call Apollo watch query which is",
    "start": "301710",
    "end": "303870"
  },
  {
    "text": "just a reference and then to get an",
    "start": "303870",
    "end": "305850"
  },
  {
    "text": "observable back of the data we call",
    "start": "305850",
    "end": "307590"
  },
  {
    "text": "value changes on it then the actual",
    "start": "307590",
    "end": "309810"
  },
  {
    "text": "observable will contain some additional",
    "start": "309810",
    "end": "311430"
  },
  {
    "text": "metadata so we can just pipe that down",
    "start": "311430",
    "end": "313470"
  },
  {
    "text": "to the actual data that we want to show",
    "start": "313470",
    "end": "315450"
  },
  {
    "text": "in the front end and now we have an",
    "start": "315450",
    "end": "317490"
  },
  {
    "text": "observable that we can just subscribe to",
    "start": "317490",
    "end": "319050"
  },
  {
    "text": "with the async pipe in the HTML which",
    "start": "319050",
    "end": "321240"
  },
  {
    "text": "we'll see here in a minute the mutation",
    "start": "321240",
    "end": "323970"
  },
  {
    "text": "is similar but takes in an ID as a",
    "start": "323970",
    "end": "325950"
  },
  {
    "text": "variable so that value can change",
    "start": "325950",
    "end": "327960"
  },
  {
    "text": "depending on which heart button the user",
    "start": "327960",
    "end": "329400"
  },
  {
    "text": "clicks so we'll define the actual graph",
    "start": "329400",
    "end": "331950"
  },
  {
    "text": "QL query inside of this method which",
    "start": "331950",
    "end": "333840"
  },
  {
    "text": "we're calling like tweet and then it",
    "start": "333840",
    "end": "335730"
  },
  {
    "text": "takes in the ID as an argument and it",
    "start": "335730",
    "end": "338490"
  },
  {
    "text": "will return all of the new data about",
    "start": "338490",
    "end": "340320"
  },
  {
    "text": "that tweet including its updated light",
    "start": "340320",
    "end": "342270"
  },
  {
    "text": "count instead of using Apollo watch",
    "start": "342270",
    "end": "344580"
  },
  {
    "text": "query like we did last time this time",
    "start": "344580",
    "end": "346500"
  },
  {
    "text": "we'll use Apollo mutate and what's",
    "start": "346500",
    "end": "348510"
  },
  {
    "text": "special about this is that we can define",
    "start": "348510",
    "end": "350190"
  },
  {
    "text": "our own optimistic response behavior in",
    "start": "350190",
    "end": "353070"
  },
  {
    "text": "our case we know when the user hits the",
    "start": "353070",
    "end": "354479"
  },
  {
    "text": "like button it should increment the",
    "start": "354479",
    "end": "356250"
  },
  {
    "text": "current light count by one so by setting",
    "start": "356250",
    "end": "358830"
  },
  {
    "text": "up this logic we'll have that update",
    "start": "358830",
    "end": "360450"
  },
  {
    "text": "appear in the UI instantly in the eyes",
    "start": "360450",
    "end": "362490"
  },
  {
    "text": "of the user and in most cases we won't",
    "start": "362490",
    "end": "364320"
  },
  {
    "text": "have any errors on the back end so",
    "start": "364320",
    "end": "365729"
  },
  {
    "text": "they'll just stay there like it happened",
    "start": "365729",
    "end": "367050"
  },
  {
    "text": "instantaneously but if any kind of error",
    "start": "367050",
    "end": "369300"
  },
  {
    "text": "does happen it will come back and revert",
    "start": "369300",
    "end": "371610"
  },
  {
    "text": "to the actual value from the server so",
    "start": "371610",
    "end": "374130"
  },
  {
    "text": "it'll feel like that is zero latency for",
    "start": "374130",
    "end": "375720"
  },
  {
    "text": "your user even though in real life it",
    "start": "375720",
    "end": "377340"
  },
  {
    "text": "might take your server a second or two",
    "start": "377340",
    "end": "378750"
  },
  {
    "text": "to respond so now we can jump into the",
    "start": "378750",
    "end": "381390"
  },
  {
    "text": "HTML and we just have a simple",
    "start": "381390",
    "end": "383040"
  },
  {
    "text": "observable of tweets that we can loop",
    "start": "383040",
    "end": "384810"
  },
  {
    "text": "over I am wrapping it in parenthesis",
    "start": "384810",
    "end": "387360"
  },
  {
    "text": "then accessing its tweets property",
    "start": "387360",
    "end": "389250"
  },
  {
    "text": "because that's where the actual tweet",
    "start": "389250",
    "end": "390720"
  },
  {
    "text": "objects live then we can display the",
    "start": "390720",
    "end": "393090"
  },
  {
    "text": "text for each tweet and then we'll set",
    "start": "393090",
    "end": "395040"
  },
  {
    "text": "up a button here",
    "start": "395040",
    "end": "396210"
  },
  {
    "text": "we'll update the white count then below",
    "start": "396210",
    "end": "399210"
  },
  {
    "text": "that will display the white count which",
    "start": "399210",
    "end": "400889"
  },
  {
    "text": "should update instantly when this button",
    "start": "400889",
    "end": "402720"
  },
  {
    "text": "is clicked on my back-end code I set up",
    "start": "402720",
    "end": "405690"
  },
  {
    "text": "a method that will give a 50/50 chance",
    "start": "405690",
    "end": "407789"
  },
  {
    "text": "of throwing an error for each mutation",
    "start": "407789",
    "end": "410090"
  },
  {
    "text": "so the first time I click the button",
    "start": "410090",
    "end": "411930"
  },
  {
    "text": "that goes to 77 gets an error then",
    "start": "411930",
    "end": "414389"
  },
  {
    "text": "reverts back to 76 on the second attempt",
    "start": "414389",
    "end": "417240"
  },
  {
    "text": "we don't get nearer it stays at 77 and",
    "start": "417240",
    "end": "419759"
  },
  {
    "text": "then we get the tweet data logged in the",
    "start": "419759",
    "end": "421800"
  },
  {
    "text": "console overall Apolo gives you an",
    "start": "421800",
    "end": "424169"
  },
  {
    "text": "awesome way to query a graph QL API from",
    "start": "424169",
    "end": "426690"
  },
  {
    "text": "an angular app if this video helped you",
    "start": "426690",
    "end": "428789"
  },
  {
    "text": "please like and subscribe and if you",
    "start": "428789",
    "end": "430500"
  },
  {
    "text": "want to learn more about these",
    "start": "430500",
    "end": "431400"
  },
  {
    "text": "technologies consider becoming a pro",
    "start": "431400",
    "end": "433380"
  },
  {
    "text": "member at angular firebase comm you'll",
    "start": "433380",
    "end": "435720"
  },
  {
    "text": "get access to all kinds of exclusive",
    "start": "435720",
    "end": "437340"
  },
  {
    "text": "content and a free copy of my book",
    "start": "437340",
    "end": "439199"
  },
  {
    "text": "thanks for watching and I'll talk to you",
    "start": "439199",
    "end": "441780"
  },
  {
    "text": "soon",
    "start": "441780",
    "end": "443990"
  }
]