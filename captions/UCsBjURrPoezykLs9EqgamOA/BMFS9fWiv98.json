[
  {
    "text": "[Music]",
    "start": "0",
    "end": "6529"
  },
  {
    "text": "when cloud functions 2.0 came out last",
    "start": "6529",
    "end": "9269"
  },
  {
    "text": "month we got access to a whole bunch of",
    "start": "9269",
    "end": "11160"
  },
  {
    "text": "cool new features such as a node 8",
    "start": "11160",
    "end": "13320"
  },
  {
    "text": "runtime custom memory and region",
    "start": "13320",
    "end": "15240"
  },
  {
    "text": "settings and the ability to use",
    "start": "15240",
    "end": "16920"
  },
  {
    "text": "puppeteer in the cloud functions",
    "start": "16920",
    "end": "18510"
  },
  {
    "text": "environment today we're going to put all",
    "start": "18510",
    "end": "20279"
  },
  {
    "text": "these new features to use so we can",
    "start": "20279",
    "end": "21900"
  },
  {
    "text": "server-side render pretty much any",
    "start": "21900",
    "end": "23369"
  },
  {
    "text": "JavaScript application from a firebase",
    "start": "23369",
    "end": "25560"
  },
  {
    "text": "function if you're new the channel like",
    "start": "25560",
    "end": "27449"
  },
  {
    "text": "and subscribe and if you want to get",
    "start": "27449",
    "end": "28980"
  },
  {
    "text": "really good at cloud functions consider",
    "start": "28980",
    "end": "30539"
  },
  {
    "text": "becoming a pro member to get access to",
    "start": "30539",
    "end": "32730"
  },
  {
    "text": "the cloud functions master course so one",
    "start": "32730",
    "end": "35219"
  },
  {
    "text": "of the major benefits of the new node 8",
    "start": "35219",
    "end": "37260"
  },
  {
    "text": "runtime and cloud functions is that it",
    "start": "37260",
    "end": "39239"
  },
  {
    "text": "allows us to run puppeteer and headless",
    "start": "39239",
    "end": "41489"
  },
  {
    "text": "Chrome headless chrome is just a web",
    "start": "41489",
    "end": "43829"
  },
  {
    "text": "browser that can run on your server and",
    "start": "43829",
    "end": "45480"
  },
  {
    "text": "puppeteer is a high level API allowing",
    "start": "45480",
    "end": "48270"
  },
  {
    "text": "you to interact with the browser it's",
    "start": "48270",
    "end": "50370"
  },
  {
    "text": "very intuitive to use and you get direct",
    "start": "50370",
    "end": "52590"
  },
  {
    "text": "access to the Dom on the rendered page",
    "start": "52590",
    "end": "54480"
  },
  {
    "text": "so you can use it for things like web",
    "start": "54480",
    "end": "56340"
  },
  {
    "text": "scraping server-side rendering and to",
    "start": "56340",
    "end": "58620"
  },
  {
    "text": "end testing performance benchmarking and",
    "start": "58620",
    "end": "60870"
  },
  {
    "text": "probably a whole bunch of other things",
    "start": "60870",
    "end": "62340"
  },
  {
    "text": "as well",
    "start": "62340",
    "end": "62910"
  },
  {
    "text": "if we go back to episode 66 we used an",
    "start": "62910",
    "end": "66210"
  },
  {
    "text": "app called render Tron to server-side",
    "start": "66210",
    "end": "68340"
  },
  {
    "text": "render and angular application but one",
    "start": "68340",
    "end": "70710"
  },
  {
    "text": "of the major drawbacks that approach is",
    "start": "70710",
    "end": "72330"
  },
  {
    "text": "that we needed to build and maintain our",
    "start": "72330",
    "end": "74040"
  },
  {
    "text": "own docker container in this video we'll",
    "start": "74040",
    "end": "76140"
  },
  {
    "text": "build an app that's equivalent to render",
    "start": "76140",
    "end": "77909"
  },
  {
    "text": "Tron but on a firebase cloud function",
    "start": "77909",
    "end": "80100"
  },
  {
    "text": "I'm going to be building this function",
    "start": "80100",
    "end": "81750"
  },
  {
    "text": "in an ionic 4 project but you can build",
    "start": "81750",
    "end": "84119"
  },
  {
    "text": "it by itself or with any other",
    "start": "84119",
    "end": "85680"
  },
  {
    "text": "JavaScript framework the cloud functions",
    "start": "85680",
    "end": "88229"
  },
  {
    "text": "back end is completely agnostic to your",
    "start": "88229",
    "end": "90570"
  },
  {
    "text": "front-end if you're in a brand-new",
    "start": "90570",
    "end": "92610"
  },
  {
    "text": "project run firebase and it functions",
    "start": "92610",
    "end": "94439"
  },
  {
    "text": "and then I've selected the typescript",
    "start": "94439",
    "end": "96600"
  },
  {
    "text": "option and it's very important that",
    "start": "96600",
    "end": "98670"
  },
  {
    "text": "you're up to date on the latest version",
    "start": "98670",
    "end": "100259"
  },
  {
    "text": "of firebase tools because all this stuff",
    "start": "100259",
    "end": "102240"
  },
  {
    "text": "is very new from there we'll see the end",
    "start": "102240",
    "end": "104939"
  },
  {
    "text": "of the functions directory and then",
    "start": "104939",
    "end": "106680"
  },
  {
    "text": "we'll need to set up node.js version 8",
    "start": "106680",
    "end": "108990"
  },
  {
    "text": "as the runtime open the package JSON",
    "start": "108990",
    "end": "111570"
  },
  {
    "text": "create an object called engines then set",
    "start": "111570",
    "end": "114659"
  },
  {
    "text": "node to a string value of eight then",
    "start": "114659",
    "end": "117420"
  },
  {
    "text": "another thing you want to do if you're",
    "start": "117420",
    "end": "118649"
  },
  {
    "text": "using typescript is add the Dom Lib to",
    "start": "118649",
    "end": "121409"
  },
  {
    "text": "your TS config this is purely for",
    "start": "121409",
    "end": "123659"
  },
  {
    "text": "tooling and it will just give us",
    "start": "123659",
    "end": "125100"
  },
  {
    "text": "autocomplete on anything related to the",
    "start": "125100",
    "end": "127200"
  },
  {
    "text": "Dom that we're doing inside of puppeteer",
    "start": "127200",
    "end": "129149"
  },
  {
    "text": "and the last piece of setup is to",
    "start": "129149",
    "end": "131129"
  },
  {
    "text": "install puppeteer with NPM",
    "start": "131129",
    "end": "133410"
  },
  {
    "text": "you'll notice that that downloads",
    "start": "133410",
    "end": "135060"
  },
  {
    "text": "chromium which is over a hundred",
    "start": "135060",
    "end": "136260"
  },
  {
    "text": "megabytes in size and chrome in general",
    "start": "136260",
    "end": "138780"
  },
  {
    "text": "requires a higher memory allocation than",
    "start": "138780",
    "end": "140940"
  },
  {
    "text": "the typical 250 megabytes that you would",
    "start": "140940",
    "end": "143070"
  },
  {
    "text": "find in a function so we're going to",
    "start": "143070",
    "end": "144780"
  },
  {
    "text": "beef that up in the next step let's go",
    "start": "144780",
    "end": "147300"
  },
  {
    "text": "ahead and open up the indexed es file",
    "start": "147300",
    "end": "149220"
  },
  {
    "text": "and then we'll import puppeteer in",
    "start": "149220",
    "end": "151470"
  },
  {
    "text": "addition to firebase functions the first",
    "start": "151470",
    "end": "153780"
  },
  {
    "text": "thing I want to show you is how to visit",
    "start": "153780",
    "end": "155340"
  },
  {
    "text": "a page with puppeteer serialized the",
    "start": "155340",
    "end": "157560"
  },
  {
    "text": "HTML to a string then send that as the",
    "start": "157560",
    "end": "160260"
  },
  {
    "text": "response from the function but the first",
    "start": "160260",
    "end": "162240"
  },
  {
    "text": "thing we'll do is set up our function to",
    "start": "162240",
    "end": "164070"
  },
  {
    "text": "run with at least one gigabyte of memory",
    "start": "164070",
    "end": "165810"
  },
  {
    "text": "then after that we can set up our HTTP",
    "start": "165810",
    "end": "168690"
  },
  {
    "text": "function which will be on request giving",
    "start": "168690",
    "end": "170940"
  },
  {
    "text": "us a request and response object which",
    "start": "170940",
    "end": "173280"
  },
  {
    "text": "we can also make an async function the",
    "start": "173280",
    "end": "175620"
  },
  {
    "text": "very first thing you'll do with",
    "start": "175620",
    "end": "176550"
  },
  {
    "text": "puppeteer is create a browser instance",
    "start": "176550",
    "end": "178770"
  },
  {
    "text": "which you can do with puppeteer launch",
    "start": "178770",
    "end": "181260"
  },
  {
    "text": "and then there's a number of different",
    "start": "181260",
    "end": "183090"
  },
  {
    "text": "configuration options that you can pass",
    "start": "183090",
    "end": "185010"
  },
  {
    "text": "in to launch in this case we'll run in",
    "start": "185010",
    "end": "187020"
  },
  {
    "text": "headless mode and I also found that you",
    "start": "187020",
    "end": "189030"
  },
  {
    "text": "need the know sandbox flag for this to",
    "start": "189030",
    "end": "191160"
  },
  {
    "text": "work properly so that's the equivalent",
    "start": "191160",
    "end": "193590"
  },
  {
    "text": "of opening up a browser the next thing",
    "start": "193590",
    "end": "195720"
  },
  {
    "text": "we'll do is create a new page which can",
    "start": "195720",
    "end": "197760"
  },
  {
    "text": "be thought of as the equivalent of a new",
    "start": "197760",
    "end": "199410"
  },
  {
    "text": "tab in the browser and everything in",
    "start": "199410",
    "end": "202230"
  },
  {
    "text": "puppeteer is a sink so you'll notice",
    "start": "202230",
    "end": "203880"
  },
  {
    "text": "that I'm awaiting all of these methods",
    "start": "203880",
    "end": "205640"
  },
  {
    "text": "the next step is to navigate to an",
    "start": "205640",
    "end": "208590"
  },
  {
    "text": "actual URL in this case I'm navigating",
    "start": "208590",
    "end": "211050"
  },
  {
    "text": "to the ionic app that I built which is",
    "start": "211050",
    "end": "213060"
  },
  {
    "text": "just a very simple set of pages when you",
    "start": "213060",
    "end": "215820"
  },
  {
    "text": "navigate to a page it's going to execute",
    "start": "215820",
    "end": "217260"
  },
  {
    "text": "all that JavaScript and you can control",
    "start": "217260",
    "end": "219150"
  },
  {
    "text": "how long puppeteer waits in this case",
    "start": "219150",
    "end": "221220"
  },
  {
    "text": "I'm setting it to network idle zero",
    "start": "221220",
    "end": "223170"
  },
  {
    "text": "which just means it'll wait for network",
    "start": "223170",
    "end": "225180"
  },
  {
    "text": "requests to be idle for 500 milliseconds",
    "start": "225180",
    "end": "227610"
  },
  {
    "text": "and then render the page there at this",
    "start": "227610",
    "end": "229890"
  },
  {
    "text": "point there's all kinds of different",
    "start": "229890",
    "end": "230880"
  },
  {
    "text": "things we can do we might want to scrape",
    "start": "230880",
    "end": "232350"
  },
  {
    "text": "content from the page we might want to",
    "start": "232350",
    "end": "234360"
  },
  {
    "text": "inject jQuery and make manipulations to",
    "start": "234360",
    "end": "236850"
  },
  {
    "text": "it we can take a screen shot and do",
    "start": "236850",
    "end": "239489"
  },
  {
    "text": "pretty much anything else you can do in",
    "start": "239489",
    "end": "241110"
  },
  {
    "text": "a regular web browser but if you just",
    "start": "241110",
    "end": "243989"
  },
  {
    "text": "need the rendered content which is all",
    "start": "243989",
    "end": "245400"
  },
  {
    "text": "we need here we can say a wait page",
    "start": "245400",
    "end": "247290"
  },
  {
    "text": "content and then we'll send that as the",
    "start": "247290",
    "end": "249420"
  },
  {
    "text": "response from this HTTP function now",
    "start": "249420",
    "end": "252510"
  },
  {
    "text": "we'll go ahead and serve this function",
    "start": "252510",
    "end": "253980"
  },
  {
    "text": "and see if it's rendering the meta tags",
    "start": "253980",
    "end": "255959"
  },
  {
    "text": "that we have set up on our front end",
    "start": "255959",
    "end": "257760"
  },
  {
    "text": "application so I'm using an ionic 4 app",
    "start": "257760",
    "end": "261239"
  },
  {
    "text": "here which has an interesting caveat",
    "start": "261239",
    "end": "263160"
  },
  {
    "text": "with web components anything that uses",
    "start": "263160",
    "end": "265169"
  },
  {
    "text": "the shadow Dom is really hard to",
    "start": "265169",
    "end": "267270"
  },
  {
    "text": "serialized back to regular HTML so in",
    "start": "267270",
    "end": "270599"
  },
  {
    "text": "this demo we're only going to use",
    "start": "270599",
    "end": "271800"
  },
  {
    "text": "puppeteer to render meta tags so we can",
    "start": "271800",
    "end": "274199"
  },
  {
    "text": "display our content on social media",
    "start": "274199",
    "end": "276060"
  },
  {
    "text": "sites like Facebook and Twitter but",
    "start": "276060",
    "end": "278580"
  },
  {
    "text": "that's really only a concern if your app",
    "start": "278580",
    "end": "280319"
  },
  {
    "text": "uses the shadow Dom because basically",
    "start": "280319",
    "end": "282449"
  },
  {
    "text": "what we've built here is a proxy browser",
    "start": "282449",
    "end": "284340"
  },
  {
    "text": "that allows us to visit a web page",
    "start": "284340",
    "end": "286199"
  },
  {
    "text": "without technically visiting that web",
    "start": "286199",
    "end": "288180"
  },
  {
    "text": "page on our own browser right now I'm",
    "start": "288180",
    "end": "290789"
  },
  {
    "text": "looking at the rendered content for",
    "start": "290789",
    "end": "292560"
  },
  {
    "text": "angular firebase.com but I never",
    "start": "292560",
    "end": "294479"
  },
  {
    "text": "actually went to this website instead we",
    "start": "294479",
    "end": "296580"
  },
  {
    "text": "went to the cloud functions middleman",
    "start": "296580",
    "end": "297930"
  },
  {
    "text": "which rendered the page with puppeteer",
    "start": "297930",
    "end": "299880"
  },
  {
    "text": "on the server and then sent me that",
    "start": "299880",
    "end": "301500"
  },
  {
    "text": "serialized content as the response so",
    "start": "301500",
    "end": "304229"
  },
  {
    "text": "you basically now have server-side",
    "start": "304229",
    "end": "305550"
  },
  {
    "text": "rendering for any web site on the",
    "start": "305550",
    "end": "307440"
  },
  {
    "text": "Internet",
    "start": "307440",
    "end": "308039"
  },
  {
    "text": "but things aren't quite that simple in",
    "start": "308039",
    "end": "310409"
  },
  {
    "text": "the real world in the full source code",
    "start": "310409",
    "end": "312330"
  },
  {
    "text": "for this project",
    "start": "312330",
    "end": "313319"
  },
  {
    "text": "I've poured it over the render code from",
    "start": "313319",
    "end": "315509"
  },
  {
    "text": "render Tron which handles a lot of the",
    "start": "315509",
    "end": "317280"
  },
  {
    "text": "little things that you'll need to do",
    "start": "317280",
    "end": "318419"
  },
  {
    "text": "when rendering pages things like setting",
    "start": "318419",
    "end": "320729"
  },
  {
    "text": "the base href for your static resources",
    "start": "320729",
    "end": "323009"
  },
  {
    "text": "handling errors loading polyfills for",
    "start": "323009",
    "end": "325500"
  },
  {
    "text": "web components and stuff like that now",
    "start": "325500",
    "end": "327900"
  },
  {
    "text": "the last thing I want to do is rewrite",
    "start": "327900",
    "end": "329400"
  },
  {
    "text": "our functions so we can set up",
    "start": "329400",
    "end": "330930"
  },
  {
    "text": "server-side rendering with firebase",
    "start": "330930",
    "end": "332729"
  },
  {
    "text": "hosting so we'll import the serialize",
    "start": "332729",
    "end": "335340"
  },
  {
    "text": "function from render tron then we'll set",
    "start": "335340",
    "end": "337889"
  },
  {
    "text": "up an app URL which is the location of",
    "start": "337889",
    "end": "340169"
  },
  {
    "text": "where your app is deployed on firebase",
    "start": "340169",
    "end": "341880"
  },
  {
    "text": "hosting or it might be localhost 5004",
    "start": "341880",
    "end": "344550"
  },
  {
    "text": "local testing then we'll write a cloud",
    "start": "344550",
    "end": "347009"
  },
  {
    "text": "function specifically for rendering",
    "start": "347009",
    "end": "348900"
  },
  {
    "text": "pages with puppeteer this first render",
    "start": "348900",
    "end": "351539"
  },
  {
    "text": "function is going to look almost",
    "start": "351539",
    "end": "352979"
  },
  {
    "text": "identical to the one that we just wrote",
    "start": "352979",
    "end": "354630"
  },
  {
    "text": "but instead of using page content we'll",
    "start": "354630",
    "end": "356819"
  },
  {
    "text": "use our serialize method so we have a",
    "start": "356819",
    "end": "358800"
  },
  {
    "text": "little more sophisticated rendering",
    "start": "358800",
    "end": "360389"
  },
  {
    "text": "process and for this endpoint will allow",
    "start": "360389",
    "end": "363750"
  },
  {
    "text": "the render URL to come through as a",
    "start": "363750",
    "end": "365880"
  },
  {
    "text": "query parameter meaning it can be passed",
    "start": "365880",
    "end": "367919"
  },
  {
    "text": "directly through the URL and the",
    "start": "367919",
    "end": "370680"
  },
  {
    "text": "serialize method will respond with the",
    "start": "370680",
    "end": "372539"
  },
  {
    "text": "page content as well as a status code",
    "start": "372539",
    "end": "374610"
  },
  {
    "text": "which we can just go ahead and send back",
    "start": "374610",
    "end": "376830"
  },
  {
    "text": "as the response from this function the",
    "start": "376830",
    "end": "379889"
  },
  {
    "text": "next function we'll write is called SSR",
    "start": "379889",
    "end": "382020"
  },
  {
    "text": "for server-side rendering and we're",
    "start": "382020",
    "end": "384060"
  },
  {
    "text": "going to configure our hosting account",
    "start": "384060",
    "end": "385409"
  },
  {
    "text": "to reroute all requests to this function",
    "start": "385409",
    "end": "387840"
  },
  {
    "text": "endpoint then what we want to do is",
    "start": "387840",
    "end": "390419"
  },
  {
    "text": "determine whether or not the request is",
    "start": "390419",
    "end": "392250"
  },
  {
    "text": "coming from a bot or a human if it's a",
    "start": "392250",
    "end": "395099"
  },
  {
    "text": "bot we're going to want to render all",
    "start": "395099",
    "end": "397050"
  },
  {
    "text": "the content on the server so we have the",
    "start": "397050",
    "end": "399180"
  },
  {
    "text": "meta tags and any other",
    "start": "399180",
    "end": "400660"
  },
  {
    "text": "dynamic content loaded into the page I",
    "start": "400660",
    "end": "402820"
  },
  {
    "text": "have a list of common BOTS here and then",
    "start": "402820",
    "end": "405580"
  },
  {
    "text": "we can see the bots on the request by",
    "start": "405580",
    "end": "407320"
  },
  {
    "text": "looking at the user agent header then",
    "start": "407320",
    "end": "410020"
  },
  {
    "text": "I'll run a filter on our list of bots to",
    "start": "410020",
    "end": "411610"
  },
  {
    "text": "see if there's any from this list",
    "start": "411610",
    "end": "413410"
  },
  {
    "text": "included in the user agent header so if",
    "start": "413410",
    "end": "416410"
  },
  {
    "text": "the length is zero then we know we're",
    "start": "416410",
    "end": "417850"
  },
  {
    "text": "not dealing with a bot but if it's",
    "start": "417850",
    "end": "419560"
  },
  {
    "text": "greater than zero we know that we should",
    "start": "419560",
    "end": "421150"
  },
  {
    "text": "render this page with puppeteer if the",
    "start": "421150",
    "end": "424030"
  },
  {
    "text": "user agent is a bot which would happen",
    "start": "424030",
    "end": "425800"
  },
  {
    "text": "if someone posted this link and social",
    "start": "425800",
    "end": "427600"
  },
  {
    "text": "media then we want to go ahead and",
    "start": "427600",
    "end": "429670"
  },
  {
    "text": "render the page fully with render tron",
    "start": "429670",
    "end": "431610"
  },
  {
    "text": "we can do that by calling the render",
    "start": "431610",
    "end": "434290"
  },
  {
    "text": "function that we created previously that",
    "start": "434290",
    "end": "436090"
  },
  {
    "text": "handles all the puppeteer stuff so we'll",
    "start": "436090",
    "end": "438790"
  },
  {
    "text": "just go ahead and await the response",
    "start": "438790",
    "end": "440710"
  },
  {
    "text": "from that endpoint which should be the",
    "start": "440710",
    "end": "442660"
  },
  {
    "text": "serialized content from the page then we",
    "start": "442660",
    "end": "445690"
  },
  {
    "text": "can take that HTML and send it as the",
    "start": "445690",
    "end": "448180"
  },
  {
    "text": "response body from this function",
    "start": "448180",
    "end": "450120"
  },
  {
    "text": "otherwise we want to just fetch the",
    "start": "450120",
    "end": "452620"
  },
  {
    "text": "route URL from the hosting account and",
    "start": "452620",
    "end": "454750"
  },
  {
    "text": "send that as the response back a single",
    "start": "454750",
    "end": "457510"
  },
  {
    "text": "page application will get this response",
    "start": "457510",
    "end": "459100"
  },
  {
    "text": "and handle the URL client side so it'll",
    "start": "459100",
    "end": "461950"
  },
  {
    "text": "behave just as if the user visited this",
    "start": "461950",
    "end": "464110"
  },
  {
    "text": "page normally on a regular hosting",
    "start": "464110",
    "end": "466090"
  },
  {
    "text": "account you can either deploy this",
    "start": "466090",
    "end": "468160"
  },
  {
    "text": "function or run it locally then at this",
    "start": "468160",
    "end": "470620"
  },
  {
    "text": "point I'm assuming that you already have",
    "start": "470620",
    "end": "472120"
  },
  {
    "text": "a firebase hosting account setup and if",
    "start": "472120",
    "end": "474460"
  },
  {
    "text": "so you'll have it set up as a single",
    "start": "474460",
    "end": "475960"
  },
  {
    "text": "page application that looks something",
    "start": "475960",
    "end": "477460"
  },
  {
    "text": "like this where you're routing the",
    "start": "477460",
    "end": "478990"
  },
  {
    "text": "source to an index.html file we're gonna",
    "start": "478990",
    "end": "482140"
  },
  {
    "text": "go ahead and change that to a function",
    "start": "482140",
    "end": "484030"
  },
  {
    "text": "and have it route to the SSR function",
    "start": "484030",
    "end": "486340"
  },
  {
    "text": "that we just wrote then the final step",
    "start": "486340",
    "end": "488500"
  },
  {
    "text": "is to run firebase deploy which will",
    "start": "488500",
    "end": "490360"
  },
  {
    "text": "deploy both the functions and the",
    "start": "490360",
    "end": "492040"
  },
  {
    "text": "hosting for your client side app and as",
    "start": "492040",
    "end": "495190"
  },
  {
    "text": "a normal visitor to your app you",
    "start": "495190",
    "end": "496690"
  },
  {
    "text": "shouldn't really notice any major",
    "start": "496690",
    "end": "497860"
  },
  {
    "text": "changes but only if you post to a link",
    "start": "497860",
    "end": "500590"
  },
  {
    "text": "bot such as slack or Twitter or whatever",
    "start": "500590",
    "end": "502810"
  },
  {
    "text": "it should intercept that request and",
    "start": "502810",
    "end": "505090"
  },
  {
    "text": "display the meta tags necessary for rich",
    "start": "505090",
    "end": "507220"
  },
  {
    "text": "social media cards so that's how you set",
    "start": "507220",
    "end": "510190"
  },
  {
    "text": "up puppeteer in a cloud function and",
    "start": "510190",
    "end": "511930"
  },
  {
    "text": "we're really just barely scratching the",
    "start": "511930",
    "end": "513550"
  },
  {
    "text": "surface there's all kinds of cool things",
    "start": "513550",
    "end": "514930"
  },
  {
    "text": "you can do one of which is the headless",
    "start": "514930",
    "end": "516969"
  },
  {
    "text": "chrome crawler which is an open source",
    "start": "516969",
    "end": "518710"
  },
  {
    "text": "project built on top a puppeteer that",
    "start": "518710",
    "end": "520690"
  },
  {
    "text": "allows you to iterate over the links in",
    "start": "520690",
    "end": "522940"
  },
  {
    "text": "a web page run jobs in parallel export",
    "start": "522940",
    "end": "525610"
  },
  {
    "text": "to CSV and a bunch of other advanced",
    "start": "525610",
    "end": "527770"
  },
  {
    "text": "stuff I'm gonna go ahead and wrap it up",
    "start": "527770",
    "end": "529600"
  },
  {
    "text": "there if you want to see more advanced",
    "start": "529600",
    "end": "531100"
  },
  {
    "text": "puppeteer content leave me a comment",
    "start": "531100",
    "end": "533270"
  },
  {
    "text": "down below and if you want to take your",
    "start": "533270",
    "end": "534680"
  },
  {
    "text": "development to the next level consider",
    "start": "534680",
    "end": "536420"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "536420",
    "end": "538160"
  },
  {
    "text": "firebase comm you'll get unlimited",
    "start": "538160",
    "end": "540140"
  },
  {
    "text": "access to all pro content as well as my",
    "start": "540140",
    "end": "542720"
  },
  {
    "text": "full courses and a free copy of my book",
    "start": "542720",
    "end": "545180"
  },
  {
    "text": "thanks for watching and I'll talk to you",
    "start": "545180",
    "end": "547760"
  },
  {
    "text": "soon",
    "start": "547760",
    "end": "550000"
  }
]