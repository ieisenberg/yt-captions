[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "you may have heard the flutter is almost",
    "start": "30",
    "end": "1740"
  },
  {
    "text": "like magic when it comes to building",
    "start": "1740",
    "end": "3179"
  },
  {
    "text": "native apps so you decided to jump on",
    "start": "3179",
    "end": "5040"
  },
  {
    "text": "the flutter train but now you find",
    "start": "5040",
    "end": "6420"
  },
  {
    "text": "yourself",
    "start": "6420",
    "end": "6750"
  },
  {
    "text": "refactoring this giant nested nightmare",
    "start": "6750",
    "end": "8760"
  },
  {
    "text": "of widgets luckily flutter has a whole",
    "start": "8760",
    "end": "10679"
  },
  {
    "text": "bunch of tricks up its sleeve so you",
    "start": "10679",
    "end": "12030"
  },
  {
    "text": "should never have to battle with code",
    "start": "12030",
    "end": "13349"
  },
  {
    "text": "like this in today's video we'll look at",
    "start": "13349",
    "end": "15389"
  },
  {
    "text": "12 different strategies for building",
    "start": "15389",
    "end": "16859"
  },
  {
    "text": "efficient and maintainable flutter apps",
    "start": "16859",
    "end": "18720"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "18720",
    "end": "20369"
  },
  {
    "text": "and leave a comment below for a chance",
    "start": "20369",
    "end": "21990"
  },
  {
    "text": "to win this t-shirt or my first trick",
    "start": "21990",
    "end": "23970"
  },
  {
    "text": "I'll show you how to write code",
    "start": "23970",
    "end": "25170"
  },
  {
    "text": "automatically using nothing but the tab",
    "start": "25170",
    "end": "27029"
  },
  {
    "text": "key in the mouse I talked about this in",
    "start": "27029",
    "end": "29130"
  },
  {
    "text": "detail in my full flutter course which",
    "start": "29130",
    "end": "30750"
  },
  {
    "text": "you can access as a pro member but there",
    "start": "30750",
    "end": "32460"
  },
  {
    "text": "are a few things that you absolutely",
    "start": "32460",
    "end": "33570"
  },
  {
    "text": "must know if we take a look at this code",
    "start": "33570",
    "end": "35370"
  },
  {
    "text": "snippet you can see a lot of closing",
    "start": "35370",
    "end": "37170"
  },
  {
    "text": "tags on a single line making it very",
    "start": "37170",
    "end": "39030"
  },
  {
    "text": "hard to understand but you can easily",
    "start": "39030",
    "end": "40649"
  },
  {
    "text": "fix this by adding trailing commas to",
    "start": "40649",
    "end": "42480"
  },
  {
    "text": "your arguments and lists and the end",
    "start": "42480",
    "end": "44399"
  },
  {
    "text": "result is an easy to read tree structure",
    "start": "44399",
    "end": "46050"
  },
  {
    "text": "when we format the file but doing this",
    "start": "46050",
    "end": "48210"
  },
  {
    "text": "manually all the time would get really",
    "start": "48210",
    "end": "49710"
  },
  {
    "text": "annoying that's why you should get",
    "start": "49710",
    "end": "50879"
  },
  {
    "text": "really good at using the tab key because",
    "start": "50879",
    "end": "52770"
  },
  {
    "text": "the tooling is so good in dart and",
    "start": "52770",
    "end": "54090"
  },
  {
    "text": "flutter that almost everything can be",
    "start": "54090",
    "end": "55469"
  },
  {
    "text": "auto-completed with intellisense just",
    "start": "55469",
    "end": "57449"
  },
  {
    "text": "hover over the thing you want hit tab",
    "start": "57449",
    "end": "58980"
  },
  {
    "text": "and the trailing column will be added",
    "start": "58980",
    "end": "60690"
  },
  {
    "text": "for you",
    "start": "60690",
    "end": "61410"
  },
  {
    "text": "[Music]",
    "start": "61410",
    "end": "67430"
  },
  {
    "text": "but the most powerful tool you have at",
    "start": "67430",
    "end": "69570"
  },
  {
    "start": "68000",
    "end": "99000"
  },
  {
    "text": "your disposal is the refactor tool it",
    "start": "69570",
    "end": "71729"
  },
  {
    "text": "allows us to insert new widgets into the",
    "start": "71729",
    "end": "73290"
  },
  {
    "text": "widget tree especially commonly used",
    "start": "73290",
    "end": "75000"
  },
  {
    "text": "ones like container and center and we",
    "start": "75000",
    "end": "76710"
  },
  {
    "text": "can also use it to remove widgets",
    "start": "76710",
    "end": "77880"
  },
  {
    "text": "without having to think about where the",
    "start": "77880",
    "end": "79590"
  },
  {
    "text": "opening and closing characters are and",
    "start": "79590",
    "end": "81299"
  },
  {
    "text": "if the widget tree starts to become too",
    "start": "81299",
    "end": "82710"
  },
  {
    "text": "deeply nested that usually means we need",
    "start": "82710",
    "end": "84390"
  },
  {
    "text": "to refactor out into our own state list",
    "start": "84390",
    "end": "86460"
  },
  {
    "text": "or stateful widget and the refactor tool",
    "start": "86460",
    "end": "88470"
  },
  {
    "text": "can easily handle that while also",
    "start": "88470",
    "end": "89939"
  },
  {
    "text": "setting up a constructor with the",
    "start": "89939",
    "end": "91439"
  },
  {
    "text": "necessary input properties so you should",
    "start": "91439",
    "end": "93360"
  },
  {
    "text": "really never have to write a custom",
    "start": "93360",
    "end": "94619"
  },
  {
    "text": "widget from scratch now tip number two I",
    "start": "94619",
    "end": "97020"
  },
  {
    "text": "learned from Robert Brune heggs YouTube",
    "start": "97020",
    "end": "98640"
  },
  {
    "text": "channel which you should definitely be",
    "start": "98640",
    "end": "99990"
  },
  {
    "start": "99000",
    "end": "137000"
  },
  {
    "text": "subscribed to if you're using flutter",
    "start": "99990",
    "end": "101429"
  },
  {
    "text": "you won't be able to use the vs code",
    "start": "101429",
    "end": "103050"
  },
  {
    "text": "refactor tool in every situation but",
    "start": "103050",
    "end": "104880"
  },
  {
    "text": "there's still a few things you can do to",
    "start": "104880",
    "end": "106200"
  },
  {
    "text": "make your life easier first install the",
    "start": "106200",
    "end": "107970"
  },
  {
    "text": "awesome flutter snippets from gnash rom",
    "start": "107970",
    "end": "109770"
  },
  {
    "text": "dial that will give you shortcuts to",
    "start": "109770",
    "end": "111659"
  },
  {
    "text": "generate things like stateful and",
    "start": "111659",
    "end": "113100"
  },
  {
    "text": "stateless widgets then when you run into",
    "start": "113100",
    "end": "115110"
  },
  {
    "text": "issues with your code you can hit",
    "start": "115110",
    "end": "116549"
  },
  {
    "text": "control period to run a quick fix a",
    "start": "116549",
    "end": "118649"
  },
  {
    "text": "common example is when you're adding",
    "start": "118649",
    "end": "120270"
  },
  {
    "text": "properties to a class and you want to",
    "start": "120270",
    "end": "122159"
  },
  {
    "text": "add the properties to the constructor",
    "start": "122159",
    "end": "123479"
  },
  {
    "text": "along with a key in many cases control",
    "start": "123479",
    "end": "125850"
  },
  {
    "text": "period will fix your code with a single",
    "start": "125850",
    "end": "127560"
  },
  {
    "text": "keystroke and another tip from Robert is",
    "start": "127560",
    "end": "129899"
  },
  {
    "text": "to use the bracket pair colorizer plugin",
    "start": "129899",
    "end": "131880"
  },
  {
    "text": "to visually match the opening and",
    "start": "131880",
    "end": "133530"
  },
  {
    "text": "closing characters between widgets",
    "start": "133530",
    "end": "134820"
  },
  {
    "text": "adding additional clarity to your editor",
    "start": "134820",
    "end": "136590"
  },
  {
    "text": "using your tools effectively is one",
    "start": "136590",
    "end": "138510"
  },
  {
    "start": "137000",
    "end": "160000"
  },
  {
    "text": "thing but now let's look into some of",
    "start": "138510",
    "end": "139769"
  },
  {
    "text": "the magic tricks that are built into the",
    "start": "139769",
    "end": "141329"
  },
  {
    "text": "flutter framework itself flutter renders",
    "start": "141329",
    "end": "143250"
  },
  {
    "text": "animations beautifully at 60fps or",
    "start": "143250",
    "end": "145380"
  },
  {
    "text": "better but animations traditionally",
    "start": "145380",
    "end": "147120"
  },
  {
    "text": "require a lot of complex code animated",
    "start": "147120",
    "end": "149310"
  },
  {
    "text": "container is a widget that you can apply",
    "start": "149310",
    "end": "150720"
  },
  {
    "text": "styles to just like a regular container",
    "start": "150720",
    "end": "152519"
  },
  {
    "text": "but if those Styles change then it will",
    "start": "152519",
    "end": "154500"
  },
  {
    "text": "automatically animate in between them",
    "start": "154500",
    "end": "158120"
  },
  {
    "text": "you can animate things like position",
    "start": "159989",
    "end": "162250"
  },
  {
    "start": "160000",
    "end": "195000"
  },
  {
    "text": "size color shadow and gradients just to",
    "start": "162250",
    "end": "165219"
  },
  {
    "text": "name a few and all you have to do as a",
    "start": "165219",
    "end": "166989"
  },
  {
    "text": "developer is provide the duration and",
    "start": "166989",
    "end": "168790"
  },
  {
    "text": "timing curve of that animation then to",
    "start": "168790",
    "end": "171189"
  },
  {
    "text": "find some dynamic properties on the",
    "start": "171189",
    "end": "172629"
  },
  {
    "text": "widget and when those properties change",
    "start": "172629",
    "end": "174219"
  },
  {
    "text": "flutter will automatically animate",
    "start": "174219",
    "end": "175900"
  },
  {
    "text": "between them so the animations can be",
    "start": "175900",
    "end": "178030"
  },
  {
    "text": "implicitly tied to the underlying data",
    "start": "178030",
    "end": "179709"
  },
  {
    "text": "or state of the application and that",
    "start": "179709",
    "end": "182109"
  },
  {
    "text": "brings me to tip number four Dart",
    "start": "182109",
    "end": "184120"
  },
  {
    "text": "it might not be the most exciting",
    "start": "184120",
    "end": "185290"
  },
  {
    "text": "programming language in the world but it",
    "start": "185290",
    "end": "187090"
  },
  {
    "text": "has some nice sugary features that can",
    "start": "187090",
    "end": "188680"
  },
  {
    "text": "make your code concise and readable one",
    "start": "188680",
    "end": "195849"
  },
  {
    "start": "195000",
    "end": "223000"
  },
  {
    "text": "of my favorite features is the ability",
    "start": "195849",
    "end": "197319"
  },
  {
    "text": "to add conditional logic and for loops",
    "start": "197319",
    "end": "199450"
  },
  {
    "text": "directly inside of lists let's imagine",
    "start": "199450",
    "end": "201459"
  },
  {
    "text": "we have this button and we want to",
    "start": "201459",
    "end": "202870"
  },
  {
    "text": "animate five different box shadows",
    "start": "202870",
    "end": "204400"
  },
  {
    "text": "simultaneously we could animate each of",
    "start": "204400",
    "end": "206500"
  },
  {
    "text": "these shadows one by one or we could",
    "start": "206500",
    "end": "208150"
  },
  {
    "text": "simply combine an animated container",
    "start": "208150",
    "end": "209620"
  },
  {
    "text": "along with some conditional logic and a",
    "start": "209620",
    "end": "211659"
  },
  {
    "text": "for loop inside of a list and we're done",
    "start": "211659",
    "end": "213549"
  },
  {
    "text": "so once you understand how to use these",
    "start": "213549",
    "end": "215319"
  },
  {
    "text": "tricks you can combine them together to",
    "start": "215319",
    "end": "216819"
  },
  {
    "text": "get things done even faster but flutter",
    "start": "216819",
    "end": "219250"
  },
  {
    "text": "can actually provide even more magic",
    "start": "219250",
    "end": "220780"
  },
  {
    "text": "when it comes to animating between",
    "start": "220780",
    "end": "222220"
  },
  {
    "text": "screens using the hero widget if you",
    "start": "222220",
    "end": "224349"
  },
  {
    "start": "223000",
    "end": "252000"
  },
  {
    "text": "look closely here you can see that the",
    "start": "224349",
    "end": "225790"
  },
  {
    "text": "image that we click on it never actually",
    "start": "225790",
    "end": "227319"
  },
  {
    "text": "leaves the screen even though we're",
    "start": "227319",
    "end": "228819"
  },
  {
    "text": "moving to a completely different screen",
    "start": "228819",
    "end": "230349"
  },
  {
    "text": "so the users focus is never broken and",
    "start": "230349",
    "end": "232690"
  },
  {
    "text": "it just looks really nice and polished",
    "start": "232690",
    "end": "234069"
  },
  {
    "text": "to make this animation happen you just",
    "start": "234069",
    "end": "236379"
  },
  {
    "text": "need to have two screens that you switch",
    "start": "236379",
    "end": "237940"
  },
  {
    "text": "between using a navigator and you wrap",
    "start": "237940",
    "end": "240069"
  },
  {
    "text": "the part of the UI that's shared between",
    "start": "240069",
    "end": "241359"
  },
  {
    "text": "the two screens usually an image using",
    "start": "241359",
    "end": "243609"
  },
  {
    "text": "the hero widget both instances of the",
    "start": "243609",
    "end": "245799"
  },
  {
    "text": "hero will share a common tag and flutter",
    "start": "245799",
    "end": "247989"
  },
  {
    "text": "will match these two tags together and",
    "start": "247989",
    "end": "249579"
  },
  {
    "text": "handle all the animation stuff for you",
    "start": "249579",
    "end": "251260"
  },
  {
    "text": "under the hood but what if you have",
    "start": "251260",
    "end": "252729"
  },
  {
    "start": "252000",
    "end": "281000"
  },
  {
    "text": "something super complex like a fully",
    "start": "252729",
    "end": "254560"
  },
  {
    "text": "animated 2d vector scene and you want",
    "start": "254560",
    "end": "256630"
  },
  {
    "text": "the user to be able to interact with",
    "start": "256630",
    "end": "257829"
  },
  {
    "text": "those graphics tip number six is flare",
    "start": "257829",
    "end": "260289"
  },
  {
    "text": "which is a 2d animation tool that allows",
    "start": "260289",
    "end": "262240"
  },
  {
    "text": "you to integrate complex animations",
    "start": "262240",
    "end": "264070"
  },
  {
    "text": "directly in your flutter app and one of",
    "start": "264070",
    "end": "265900"
  },
  {
    "text": "the best practical demos that I've seen",
    "start": "265900",
    "end": "267460"
  },
  {
    "text": "using player comes from the filled Stax",
    "start": "267460",
    "end": "269260"
  },
  {
    "text": "YouTube channel which is a must",
    "start": "269260",
    "end": "270820"
  },
  {
    "text": "subscribe for flutter developers in that",
    "start": "270820",
    "end": "272979"
  },
  {
    "text": "tutorial he shows you how to create the",
    "start": "272979",
    "end": "274479"
  },
  {
    "text": "animations in Flair's design tool and",
    "start": "274479",
    "end": "276340"
  },
  {
    "text": "then export them and make them",
    "start": "276340",
    "end": "277810"
  },
  {
    "text": "interactive in a flutter app at 60fps",
    "start": "277810",
    "end": "280050"
  },
  {
    "text": "now I've mentioned 60fps a couple times",
    "start": "280050",
    "end": "282789"
  },
  {
    "start": "281000",
    "end": "316000"
  },
  {
    "text": "now because it's so important for the",
    "start": "282789",
    "end": "284409"
  },
  {
    "text": "user experience but how do you know if",
    "start": "284409",
    "end": "286060"
  },
  {
    "text": "your app and your animations are",
    "start": "286060",
    "end": "287320"
  },
  {
    "text": "actually hitting this benchmark flutter",
    "start": "287320",
    "end": "289210"
  },
  {
    "text": "actually has a built in performance",
    "start": "289210",
    "end": "290800"
  },
  {
    "text": "profiling tool that you can use on an",
    "start": "290800",
    "end": "292630"
  },
  {
    "text": "actual device",
    "start": "292630",
    "end": "293440"
  },
  {
    "text": "to determine how well your apps",
    "start": "293440",
    "end": "294490"
  },
  {
    "text": "performing now this only works on",
    "start": "294490",
    "end": "296620"
  },
  {
    "text": "physical devices and not emulators but",
    "start": "296620",
    "end": "298750"
  },
  {
    "text": "you simply run your app from the command",
    "start": "298750",
    "end": "300220"
  },
  {
    "text": "line using the profile flag and enter",
    "start": "300220",
    "end": "302590"
  },
  {
    "text": "capital P and that will show this",
    "start": "302590",
    "end": "304120"
  },
  {
    "text": "overlay on your device if you see any",
    "start": "304120",
    "end": "306190"
  },
  {
    "text": "red bars as you're using the app then",
    "start": "306190",
    "end": "307840"
  },
  {
    "text": "you know that you have a performance",
    "start": "307840",
    "end": "308860"
  },
  {
    "text": "bottleneck that needs to be addressed",
    "start": "308860",
    "end": "310120"
  },
  {
    "text": "somewhere now that you know you have",
    "start": "310120",
    "end": "311770"
  },
  {
    "text": "beautiful animations at 60fps you might",
    "start": "311770",
    "end": "314020"
  },
  {
    "text": "want to tweak things based on the",
    "start": "314020",
    "end": "315430"
  },
  {
    "text": "platform you're targeting flutter ships",
    "start": "315430",
    "end": "317140"
  },
  {
    "start": "316000",
    "end": "369000"
  },
  {
    "text": "with two widget libraries out of the box",
    "start": "317140",
    "end": "318700"
  },
  {
    "text": "material and Cupertino designed to look",
    "start": "318700",
    "end": "321100"
  },
  {
    "text": "perfect on Android and iOS most of the",
    "start": "321100",
    "end": "323740"
  },
  {
    "text": "apps that I've worked on have a very",
    "start": "323740",
    "end": "324940"
  },
  {
    "text": "customized UI but there are times where",
    "start": "324940",
    "end": "327100"
  },
  {
    "text": "you might want widgets to look like they",
    "start": "327100",
    "end": "328450"
  },
  {
    "text": "came directly from the platform itself",
    "start": "328450",
    "end": "330040"
  },
  {
    "text": "especially when it comes to dialogues",
    "start": "330040",
    "end": "331960"
  },
  {
    "text": "forms and alerts and it's also worth",
    "start": "331960",
    "end": "333910"
  },
  {
    "text": "noting that flutter is starting to",
    "start": "333910",
    "end": "335200"
  },
  {
    "text": "target the web Windows and Mac OS and",
    "start": "335200",
    "end": "337540"
  },
  {
    "text": "platform checking gives us a way to",
    "start": "337540",
    "end": "338980"
  },
  {
    "text": "customize the experience without having",
    "start": "338980",
    "end": "340720"
  },
  {
    "text": "to duplicate all of our code for every",
    "start": "340720",
    "end": "342490"
  },
  {
    "text": "single app as an example if you have a",
    "start": "342490",
    "end": "344530"
  },
  {
    "text": "widget that should look different on iOS",
    "start": "344530",
    "end": "346000"
  },
  {
    "text": "than it does on Android you can simply",
    "start": "346000",
    "end": "347740"
  },
  {
    "text": "wrap it in your own stateless widget and",
    "start": "347740",
    "end": "349480"
  },
  {
    "text": "then do platform checking to show the",
    "start": "349480",
    "end": "351310"
  },
  {
    "text": "material widget on Android and the",
    "start": "351310",
    "end": "352900"
  },
  {
    "text": "Cupertino widget on iOS both widget",
    "start": "352900",
    "end": "355150"
  },
  {
    "text": "libraries share a very similar API so in",
    "start": "355150",
    "end": "357490"
  },
  {
    "text": "most cases you just need to separate",
    "start": "357490",
    "end": "358930"
  },
  {
    "text": "them with some basic conditional logic",
    "start": "358930",
    "end": "360460"
  },
  {
    "text": "and if that weren't easy enough a lot of",
    "start": "360460",
    "end": "362590"
  },
  {
    "text": "flutter widgets include this adaptive",
    "start": "362590",
    "end": "364090"
  },
  {
    "text": "static method on it which will do all",
    "start": "364090",
    "end": "365860"
  },
  {
    "text": "the platform checking and conditional",
    "start": "365860",
    "end": "367450"
  },
  {
    "text": "rendering for you automatically now",
    "start": "367450",
    "end": "369340"
  },
  {
    "start": "369000",
    "end": "446000"
  },
  {
    "text": "let's switch gears into builders when",
    "start": "369340",
    "end": "371110"
  },
  {
    "text": "you first get into flutter development",
    "start": "371110",
    "end": "372490"
  },
  {
    "text": "you'll see the word build or builder a",
    "start": "372490",
    "end": "373960"
  },
  {
    "text": "lot and a builder is just a function",
    "start": "373960",
    "end": "375910"
  },
  {
    "text": "that returns a widget if you've ever",
    "start": "375910",
    "end": "377919"
  },
  {
    "text": "used something like react Jas this",
    "start": "377919",
    "end": "379480"
  },
  {
    "text": "should feel very familiar because it",
    "start": "379480",
    "end": "381070"
  },
  {
    "text": "gives you a declarative way to describe",
    "start": "381070",
    "end": "382750"
  },
  {
    "text": "the entire UI now the really cool thing",
    "start": "382750",
    "end": "384820"
  },
  {
    "text": "about flutter is that a lot of the",
    "start": "384820",
    "end": "386350"
  },
  {
    "text": "widgets will allow you to directly pass",
    "start": "386350",
    "end": "388000"
  },
  {
    "text": "in a list for example a ListView which",
    "start": "388000",
    "end": "390520"
  },
  {
    "text": "gives you a scrollable list of items and",
    "start": "390520",
    "end": "392320"
  },
  {
    "text": "you can create that by just passing in a",
    "start": "392320",
    "end": "394360"
  },
  {
    "text": "static list of widgets but in many cases",
    "start": "394360",
    "end": "396400"
  },
  {
    "text": "you'll need to build your UI more",
    "start": "396400",
    "end": "397990"
  },
  {
    "text": "dynamically and what you'll find is that",
    "start": "397990",
    "end": "399760"
  },
  {
    "text": "a lot of widgets like ListView have a",
    "start": "399760",
    "end": "401440"
  },
  {
    "text": "builder method and this allows you to",
    "start": "401440",
    "end": "403360"
  },
  {
    "text": "define a builder function that will be",
    "start": "403360",
    "end": "405040"
  },
  {
    "text": "called every time the user Scrolls and",
    "start": "405040",
    "end": "406870"
  },
  {
    "text": "that gives you access to the current",
    "start": "406870",
    "end": "408550"
  },
  {
    "text": "index so you can describe exactly what",
    "start": "408550",
    "end": "410410"
  },
  {
    "text": "should be shown in the UI based on that",
    "start": "410410",
    "end": "412090"
  },
  {
    "text": "index and that's extremely powerful if",
    "start": "412090",
    "end": "414040"
  },
  {
    "text": "you have an infinitely long list or you",
    "start": "414040",
    "end": "415900"
  },
  {
    "text": "need to do something like server-side",
    "start": "415900",
    "end": "417190"
  },
  {
    "text": "pagination but the magic doesn't even",
    "start": "417190",
    "end": "419050"
  },
  {
    "text": "stop there",
    "start": "419050",
    "end": "419710"
  },
  {
    "text": "the ListView also has a static method",
    "start": "419710",
    "end": "421510"
  },
  {
    "text": "called separated and it works just like",
    "start": "421510",
    "end": "423310"
  },
  {
    "text": "the builder except it also gives you",
    "start": "423310",
    "end": "425080"
  },
  {
    "text": "access to build a divider in-between",
    "start": "425080",
    "end": "427090"
  },
  {
    "text": "the items and that's incredibly useful",
    "start": "427090",
    "end": "428919"
  },
  {
    "text": "if you need to group and divide items in",
    "start": "428919",
    "end": "430840"
  },
  {
    "text": "a specific way at runtime so flutter",
    "start": "430840",
    "end": "432910"
  },
  {
    "text": "does all kinds of amazing stuff for you",
    "start": "432910",
    "end": "434350"
  },
  {
    "text": "out of the box but one thing it doesn't",
    "start": "434350",
    "end": "435880"
  },
  {
    "text": "really have a strong opinion on is state",
    "start": "435880",
    "end": "437710"
  },
  {
    "text": "management it gives us a few low-level",
    "start": "437710",
    "end": "440110"
  },
  {
    "text": "building blocks like a stateful widget",
    "start": "440110",
    "end": "441880"
  },
  {
    "text": "and inherited widget but most apps are",
    "start": "441880",
    "end": "443949"
  },
  {
    "text": "going to need more than just these",
    "start": "443949",
    "end": "444910"
  },
  {
    "text": "building blocks but before you just go",
    "start": "444910",
    "end": "446650"
  },
  {
    "text": "and jump into a big complicated state",
    "start": "446650",
    "end": "448479"
  },
  {
    "text": "management solution I recommend applying",
    "start": "448479",
    "end": "450040"
  },
  {
    "text": "the proven software design paradigm of",
    "start": "450040",
    "end": "452110"
  },
  {
    "text": "keep it simple and there are two",
    "start": "452110",
    "end": "457600"
  },
  {
    "text": "libraries that stand out in my",
    "start": "457600",
    "end": "458620"
  },
  {
    "text": "experience with flutter that helped me",
    "start": "458620",
    "end": "460060"
  },
  {
    "text": "do that the first library is get it and",
    "start": "460060",
    "end": "462190"
  },
  {
    "text": "one of the things it does is allow you",
    "start": "462190",
    "end": "463720"
  },
  {
    "text": "to create a global singleton that can be",
    "start": "463720",
    "end": "465700"
  },
  {
    "text": "shared throughout the widget tree I find",
    "start": "465700",
    "end": "467860"
  },
  {
    "text": "it especially useful when working with",
    "start": "467860",
    "end": "469270"
  },
  {
    "text": "broadcast streams because you can create",
    "start": "469270",
    "end": "471130"
  },
  {
    "text": "the stream once and then use it in",
    "start": "471130",
    "end": "472720"
  },
  {
    "text": "multiple widgets even if they're on",
    "start": "472720",
    "end": "474070"
  },
  {
    "text": "completely different screens or in",
    "start": "474070",
    "end": "475630"
  },
  {
    "text": "completely different parts of the widget",
    "start": "475630",
    "end": "476950"
  },
  {
    "text": "tree get it should feel very natural if",
    "start": "476950",
    "end": "479050"
  },
  {
    "text": "you've ever used something like",
    "start": "479050",
    "end": "479800"
  },
  {
    "text": "dependency injection and angular",
    "start": "479800",
    "end": "481210"
  },
  {
    "text": "although that's not a perfect one-to-one",
    "start": "481210",
    "end": "483010"
  },
  {
    "text": "comparison and the other state",
    "start": "483010",
    "end": "484510"
  },
  {
    "start": "484000",
    "end": "523000"
  },
  {
    "text": "management solution that I really like",
    "start": "484510",
    "end": "485800"
  },
  {
    "text": "is provider which is a little more",
    "start": "485800",
    "end": "487419"
  },
  {
    "text": "similar to the context API and react but",
    "start": "487419",
    "end": "489850"
  },
  {
    "text": "the reason that I really like provider",
    "start": "489850",
    "end": "491110"
  },
  {
    "text": "is that it's mostly just syntactic sugar",
    "start": "491110",
    "end": "492760"
  },
  {
    "text": "for things like inherited widget and",
    "start": "492760",
    "end": "494710"
  },
  {
    "text": "stream builder which are built into",
    "start": "494710",
    "end": "496210"
  },
  {
    "text": "flutter natively and on top of that it",
    "start": "496210",
    "end": "498520"
  },
  {
    "text": "works really well with firebase which I",
    "start": "498520",
    "end": "500050"
  },
  {
    "text": "made an entire video about a couple",
    "start": "500050",
    "end": "501430"
  },
  {
    "text": "weeks ago and it's the state management",
    "start": "501430",
    "end": "503229"
  },
  {
    "text": "solution that I use in the fire ship",
    "start": "503229",
    "end": "504970"
  },
  {
    "text": "quiz app and the way it works is very",
    "start": "504970",
    "end": "506710"
  },
  {
    "text": "simple you declare a provider at one",
    "start": "506710",
    "end": "508930"
  },
  {
    "text": "point in the widget tree and you can",
    "start": "508930",
    "end": "510310"
  },
  {
    "text": "access that data and also react to",
    "start": "510310",
    "end": "512260"
  },
  {
    "text": "changes in a deeply nested child so",
    "start": "512260",
    "end": "514870"
  },
  {
    "text": "provider will solve a lot of your state",
    "start": "514870",
    "end": "516459"
  },
  {
    "text": "management problems without a ton of",
    "start": "516459",
    "end": "517959"
  },
  {
    "text": "boilerplate now hopefully you can use",
    "start": "517959",
    "end": "520000"
  },
  {
    "text": "these eleven tricks that we've looked at",
    "start": "520000",
    "end": "521380"
  },
  {
    "text": "to build a production ready app but once",
    "start": "521380",
    "end": "523539"
  },
  {
    "start": "523000",
    "end": "571000"
  },
  {
    "text": "you get to that point there's going to",
    "start": "523539",
    "end": "524740"
  },
  {
    "text": "be one less annoint hurdle to get over",
    "start": "524740",
    "end": "526089"
  },
  {
    "text": "and that of course is generating your",
    "start": "526089",
    "end": "527980"
  },
  {
    "text": "app icons for both iOS and Android if",
    "start": "527980",
    "end": "530260"
  },
  {
    "text": "you run into a challenge during",
    "start": "530260",
    "end": "531730"
  },
  {
    "text": "development chances are somebody else",
    "start": "531730",
    "end": "533380"
  },
  {
    "text": "has already faced that same challenge",
    "start": "533380",
    "end": "534700"
  },
  {
    "text": "and open sourced their solution and",
    "start": "534700",
    "end": "536560"
  },
  {
    "text": "that's exactly the case when it comes to",
    "start": "536560",
    "end": "538330"
  },
  {
    "text": "generating your launcher icons",
    "start": "538330",
    "end": "539770"
  },
  {
    "text": "this packages a command-line tool if",
    "start": "539770",
    "end": "541600"
  },
  {
    "text": "that only requires you to save one",
    "start": "541600",
    "end": "542980"
  },
  {
    "text": "single image in your flutter assets and",
    "start": "542980",
    "end": "544959"
  },
  {
    "text": "then will automatically generate all the",
    "start": "544959",
    "end": "546670"
  },
  {
    "text": "icons for both iOS and Android for you",
    "start": "546670",
    "end": "548890"
  },
  {
    "text": "and that's a hell of a lot easier than",
    "start": "548890",
    "end": "550420"
  },
  {
    "text": "trying to do it by hand from a design",
    "start": "550420",
    "end": "551950"
  },
  {
    "text": "program I'm gonna go ahead and wrap",
    "start": "551950",
    "end": "553420"
  },
  {
    "text": "things up there this video helped you",
    "start": "553420",
    "end": "554980"
  },
  {
    "text": "please like and subscribe and consider",
    "start": "554980",
    "end": "556630"
  },
  {
    "text": "becoming a pro member on fire ship IO to",
    "start": "556630",
    "end": "558640"
  },
  {
    "text": "get access to the full flutter",
    "start": "558640",
    "end": "560230"
  },
  {
    "text": "course and if you have additional",
    "start": "560230",
    "end": "561190"
  },
  {
    "text": "flutter tips let me know in the comments",
    "start": "561190",
    "end": "562900"
  },
  {
    "text": "below thanks for watching and I will",
    "start": "562900",
    "end": "564820"
  },
  {
    "text": "talk to you soon",
    "start": "564820",
    "end": "567450"
  },
  {
    "text": "[Music]",
    "start": "568100",
    "end": "573628"
  }
]