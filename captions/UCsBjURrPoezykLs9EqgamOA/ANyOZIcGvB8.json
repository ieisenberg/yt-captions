[
  {
    "text": "today I'm going to show you something",
    "start": "30",
    "end": "1380"
  },
  {
    "text": "that's never been done before I'm going",
    "start": "1380",
    "end": "3149"
  },
  {
    "text": "to take an angular 5 progressive web app",
    "start": "3149",
    "end": "4980"
  },
  {
    "text": "make it 100% optimized for search engine",
    "start": "4980",
    "end": "7440"
  },
  {
    "text": "crawlers like Googlebot and Bing BOTS",
    "start": "7440",
    "end": "9300"
  },
  {
    "text": "make all of your routes readable by",
    "start": "9300",
    "end": "11340"
  },
  {
    "text": "social media link bots make it fully",
    "start": "11340",
    "end": "13650"
  },
  {
    "text": "compatible with angularfire - or any",
    "start": "13650",
    "end": "15599"
  },
  {
    "text": "other asynchronous data source and we're",
    "start": "15599",
    "end": "17609"
  },
  {
    "text": "going to do this all without ever using",
    "start": "17609",
    "end": "19260"
  },
  {
    "text": "angular universal we're going to do this",
    "start": "19260",
    "end": "21210"
  },
  {
    "text": "with a brand new library from the Google",
    "start": "21210",
    "end": "22859"
  },
  {
    "text": "Chrome team called render Tron if you're",
    "start": "22859",
    "end": "25109"
  },
  {
    "text": "not familiar with headless chrome or",
    "start": "25109",
    "end": "26460"
  },
  {
    "text": "render Tron I recommend watching Sam",
    "start": "26460",
    "end": "28140"
  },
  {
    "text": "Lee's talk at polymer summit 2017 it is",
    "start": "28140",
    "end": "31410"
  },
  {
    "text": "truly mind-blowing if you've ever",
    "start": "31410",
    "end": "32668"
  },
  {
    "text": "struggled with client-side JavaScript",
    "start": "32669",
    "end": "33870"
  },
  {
    "text": "frameworks and search engine",
    "start": "33870",
    "end": "35700"
  },
  {
    "text": "optimization what I'm going to show you",
    "start": "35700",
    "end": "37649"
  },
  {
    "text": "today is how to use this tool with",
    "start": "37649",
    "end": "39030"
  },
  {
    "text": "angular 5 and firebase cloud functions",
    "start": "39030",
    "end": "41340"
  },
  {
    "text": "and you're going to be very surprised at",
    "start": "41340",
    "end": "43200"
  },
  {
    "text": "how easy this is to implement with an",
    "start": "43200",
    "end": "44910"
  },
  {
    "text": "existing angular app I have a full",
    "start": "44910",
    "end": "47070"
  },
  {
    "text": "working demo deployed to firebase",
    "start": "47070",
    "end": "48629"
  },
  {
    "text": "hosting that you can test and validate",
    "start": "48629",
    "end": "50309"
  },
  {
    "text": "and I'm also going to be sharing all of",
    "start": "50309",
    "end": "52230"
  },
  {
    "text": "the source code on angular firebase com",
    "start": "52230",
    "end": "54690"
  },
  {
    "text": "if you're new here make sure to",
    "start": "54690",
    "end": "56129"
  },
  {
    "text": "subscribe and if you want to keep this",
    "start": "56129",
    "end": "57750"
  },
  {
    "text": "content free and frequent consider",
    "start": "57750",
    "end": "59609"
  },
  {
    "text": "becoming a pro supporter let's take a",
    "start": "59609",
    "end": "62039"
  },
  {
    "text": "closer look at how the system is going",
    "start": "62039",
    "end": "63449"
  },
  {
    "text": "to work we have just a regular angular",
    "start": "63449",
    "end": "65700"
  },
  {
    "text": "progressive web app deployed to firebase",
    "start": "65700",
    "end": "67860"
  },
  {
    "text": "hosting then we have our render tron app",
    "start": "67860",
    "end": "70260"
  },
  {
    "text": "on the right render tron is just a",
    "start": "70260",
    "end": "72210"
  },
  {
    "text": "Chrome browser that can run on the",
    "start": "72210",
    "end": "73439"
  },
  {
    "text": "server",
    "start": "73439",
    "end": "74010"
  },
  {
    "text": "meaning it can render your site just",
    "start": "74010",
    "end": "75360"
  },
  {
    "text": "like a normal user would and then it can",
    "start": "75360",
    "end": "77040"
  },
  {
    "text": "return that data back to a bot that",
    "start": "77040",
    "end": "79170"
  },
  {
    "text": "wants to read the meta tags or any",
    "start": "79170",
    "end": "80850"
  },
  {
    "text": "asynchronous data that was loaded into",
    "start": "80850",
    "end": "82560"
  },
  {
    "text": "the page from there we're going to set",
    "start": "82560",
    "end": "84240"
  },
  {
    "text": "up a cloud function to serve as",
    "start": "84240",
    "end": "85710"
  },
  {
    "text": "middleware that will determine if a user",
    "start": "85710",
    "end": "87509"
  },
  {
    "text": "is a bot or an actual human that should",
    "start": "87509",
    "end": "89549"
  },
  {
    "text": "receive the normal angular app let's say",
    "start": "89549",
    "end": "91770"
  },
  {
    "text": "someone shares a link and the Facebook",
    "start": "91770",
    "end": "93420"
  },
  {
    "text": "bought wants to crawl your site to show",
    "start": "93420",
    "end": "94979"
  },
  {
    "text": "a preview of that link the cloud",
    "start": "94979",
    "end": "96930"
  },
  {
    "text": "function will route the request to",
    "start": "96930",
    "end": "98220"
  },
  {
    "text": "render Tron first then respond to the",
    "start": "98220",
    "end": "100020"
  },
  {
    "text": "Facebook bot with a fully rendered page",
    "start": "100020",
    "end": "101850"
  },
  {
    "text": "this means you can create meta tags",
    "start": "101850",
    "end": "103799"
  },
  {
    "text": "dynamically or load data asynchronously",
    "start": "103799",
    "end": "105479"
  },
  {
    "text": "and it can still be read by any kind of",
    "start": "105479",
    "end": "107850"
  },
  {
    "text": "bot if a regular human comes to visit",
    "start": "107850",
    "end": "110250"
  },
  {
    "text": "the site it's going to skip render Tron",
    "start": "110250",
    "end": "112290"
  },
  {
    "text": "and just serve the angular app directly",
    "start": "112290",
    "end": "114210"
  },
  {
    "text": "if this user decides to share a link",
    "start": "114210",
    "end": "116520"
  },
  {
    "text": "from your app in social media it's going",
    "start": "116520",
    "end": "118320"
  },
  {
    "text": "to show any meta tags associated with",
    "start": "118320",
    "end": "120119"
  },
  {
    "text": "that page the chrome team has an",
    "start": "120119",
    "end": "121860"
  },
  {
    "text": "instance of render Tron deployed which",
    "start": "121860",
    "end": "123750"
  },
  {
    "text": "you can use now for your own app however",
    "start": "123750",
    "end": "125520"
  },
  {
    "text": "it's not recommended for production use",
    "start": "125520",
    "end": "127439"
  },
  {
    "text": "I'm going to show you how to clone the",
    "start": "127439",
    "end": "129179"
  },
  {
    "text": "project and deploy it to App Engine if",
    "start": "129179",
    "end": "131190"
  },
  {
    "text": "you do want to use this in production",
    "start": "131190",
    "end": "132720"
  },
  {
    "text": "it's a docker I spray",
    "start": "132720",
    "end": "134130"
  },
  {
    "text": "so you can actually deploy it to any",
    "start": "134130",
    "end": "135870"
  },
  {
    "text": "back-end that you want but for testing",
    "start": "135870",
    "end": "137940"
  },
  {
    "text": "you can just use the instance that",
    "start": "137940",
    "end": "139230"
  },
  {
    "text": "Google has deployed it exposes a very",
    "start": "139230",
    "end": "142080"
  },
  {
    "text": "simple API you simply pass it the URL",
    "start": "142080",
    "end": "144510"
  },
  {
    "text": "that you want to read and it will render",
    "start": "144510",
    "end": "146310"
  },
  {
    "text": "and serialize that URL it listens to the",
    "start": "146310",
    "end": "149040"
  },
  {
    "text": "initial page load as well as any a",
    "start": "149040",
    "end": "150750"
  },
  {
    "text": "synchronous events and network calls to",
    "start": "150750",
    "end": "153030"
  },
  {
    "text": "load additional data into the page it",
    "start": "153030",
    "end": "155310"
  },
  {
    "text": "gives you up to 10 seconds to render the",
    "start": "155310",
    "end": "156870"
  },
  {
    "text": "page but it will send the response as",
    "start": "156870",
    "end": "158670"
  },
  {
    "text": "soon as the pages finish rendering so",
    "start": "158670",
    "end": "160830"
  },
  {
    "text": "now that we know how to render Tron",
    "start": "160830",
    "end": "161850"
  },
  {
    "text": "works let's go ahead and build an",
    "start": "161850",
    "end": "163110"
  },
  {
    "text": "angular app that can actually put this",
    "start": "163110",
    "end": "164700"
  },
  {
    "text": "to use the first thing I'm going to do",
    "start": "164700",
    "end": "166920"
  },
  {
    "text": "is generate a new app and make sure to",
    "start": "166920",
    "end": "168990"
  },
  {
    "text": "include the routing module then I'm",
    "start": "168990",
    "end": "171300"
  },
  {
    "text": "going to go into the index.html file and",
    "start": "171300",
    "end": "173700"
  },
  {
    "text": "add some meta tags for Twitter and Open",
    "start": "173700",
    "end": "176250"
  },
  {
    "text": "Graph if you're not familiar with meta",
    "start": "176250",
    "end": "178350"
  },
  {
    "text": "tags they just tell link bots how to",
    "start": "178350",
    "end": "179940"
  },
  {
    "text": "display your page to show a twitter card",
    "start": "179940",
    "end": "182610"
  },
  {
    "text": "we just give it a title description and",
    "start": "182610",
    "end": "184890"
  },
  {
    "text": "image if someone links this page Twitter",
    "start": "184890",
    "end": "187350"
  },
  {
    "text": "will know exactly which image to display",
    "start": "187350",
    "end": "188790"
  },
  {
    "text": "and the description to show in the",
    "start": "188790",
    "end": "190770"
  },
  {
    "text": "Twitter platform itself the meta tags",
    "start": "190770",
    "end": "193080"
  },
  {
    "text": "I'm showing you here are designed to be",
    "start": "193080",
    "end": "194520"
  },
  {
    "text": "a default fallback if we can't",
    "start": "194520",
    "end": "196260"
  },
  {
    "text": "dynamically generate them they should",
    "start": "196260",
    "end": "198420"
  },
  {
    "text": "convey general information about the",
    "start": "198420",
    "end": "199800"
  },
  {
    "text": "homepage of your app now we want these",
    "start": "199800",
    "end": "202230"
  },
  {
    "text": "meta tags to change for each individual",
    "start": "202230",
    "end": "204300"
  },
  {
    "text": "component that's loaded by the router so",
    "start": "204300",
    "end": "206190"
  },
  {
    "text": "we're gonna do that by generating an SEO",
    "start": "206190",
    "end": "208290"
  },
  {
    "text": "service the first thing I'm doing is",
    "start": "208290",
    "end": "210720"
  },
  {
    "text": "importing that meta service from angular",
    "start": "210720",
    "end": "212550"
  },
  {
    "text": "which just is able to set meta tags",
    "start": "212550",
    "end": "214710"
  },
  {
    "text": "dynamically in the head of the document",
    "start": "214710",
    "end": "216210"
  },
  {
    "text": "and then we'll inject that in the",
    "start": "216210",
    "end": "218190"
  },
  {
    "text": "constructor and I'm setting up a",
    "start": "218190",
    "end": "220470"
  },
  {
    "text": "configuration object here you're",
    "start": "220470",
    "end": "222330"
  },
  {
    "text": "probably gonna want to customize this",
    "start": "222330",
    "end": "223560"
  },
  {
    "text": "for your own app but it just takes named",
    "start": "223560",
    "end": "225990"
  },
  {
    "text": "arguments that you can override with",
    "start": "225990",
    "end": "228000"
  },
  {
    "text": "your own configuration object the whole",
    "start": "228000",
    "end": "230670"
  },
  {
    "text": "point of this method is to avoid",
    "start": "230670",
    "end": "232050"
  },
  {
    "text": "repeating these meta tags over and over",
    "start": "232050",
    "end": "234000"
  },
  {
    "text": "again for each individual component we",
    "start": "234000",
    "end": "236250"
  },
  {
    "text": "can set them from the service by calling",
    "start": "236250",
    "end": "237690"
  },
  {
    "text": "meta update tag along with the name and",
    "start": "237690",
    "end": "240750"
  },
  {
    "text": "that content that we want to show the",
    "start": "240750",
    "end": "242880"
  },
  {
    "text": "structure of these tags will mirror the",
    "start": "242880",
    "end": "244440"
  },
  {
    "text": "meta tags we set an index.html and then",
    "start": "244440",
    "end": "246990"
  },
  {
    "text": "update them when a new component is",
    "start": "246990",
    "end": "248670"
  },
  {
    "text": "rendered we can set the values using",
    "start": "248670",
    "end": "251010"
  },
  {
    "text": "that configuration object which keeps",
    "start": "251010",
    "end": "253110"
  },
  {
    "text": "our code dry so we're not repeating",
    "start": "253110",
    "end": "254550"
  },
  {
    "text": "update tag and each individual component",
    "start": "254550",
    "end": "256640"
  },
  {
    "text": "I'm going through this quickly because",
    "start": "256640",
    "end": "258840"
  },
  {
    "text": "each update tag method is exactly the",
    "start": "258840",
    "end": "261060"
  },
  {
    "text": "same now let's put this service to use",
    "start": "261060",
    "end": "263160"
  },
  {
    "text": "in a component so I'm generating a new",
    "start": "263160",
    "end": "265169"
  },
  {
    "text": "component called about page I also",
    "start": "265169",
    "end": "267300"
  },
  {
    "text": "created a few other",
    "start": "267300",
    "end": "268060"
  },
  {
    "text": "components and we'll load all of these",
    "start": "268060",
    "end": "269800"
  },
  {
    "text": "in the router we will first import each",
    "start": "269800",
    "end": "272740"
  },
  {
    "text": "component then we'll add them to the",
    "start": "272740",
    "end": "274990"
  },
  {
    "text": "routes array each route will have a path",
    "start": "274990",
    "end": "277300"
  },
  {
    "text": "that's where you navigate to in the",
    "start": "277300",
    "end": "279130"
  },
  {
    "text": "browser and then the component that",
    "start": "279130",
    "end": "281290"
  },
  {
    "text": "you'll render imperatively using that",
    "start": "281290",
    "end": "282970"
  },
  {
    "text": "route now we need to set up a few links",
    "start": "282970",
    "end": "285070"
  },
  {
    "text": "so users can actually navigate to these",
    "start": "285070",
    "end": "286990"
  },
  {
    "text": "routes we can do that using the app",
    "start": "286990",
    "end": "289389"
  },
  {
    "text": "component and you should see the router",
    "start": "289389",
    "end": "291190"
  },
  {
    "text": "outlet at the bottom and then we'll just",
    "start": "291190",
    "end": "293050"
  },
  {
    "text": "do a router link for each of our paths",
    "start": "293050",
    "end": "295320"
  },
  {
    "text": "now for each of these components we can",
    "start": "295320",
    "end": "297850"
  },
  {
    "text": "generate the meta tags dynamically so",
    "start": "297850",
    "end": "300010"
  },
  {
    "text": "all we have to do is go into the",
    "start": "300010",
    "end": "301389"
  },
  {
    "text": "component type script and import the SEO",
    "start": "301389",
    "end": "303790"
  },
  {
    "text": "service and then during ng on an it will",
    "start": "303790",
    "end": "306970"
  },
  {
    "text": "call that generate tags method with the",
    "start": "306970",
    "end": "309190"
  },
  {
    "text": "configuration options that we want to",
    "start": "309190",
    "end": "310570"
  },
  {
    "text": "set so for the home page we'll set the",
    "start": "310570",
    "end": "312669"
  },
  {
    "text": "title and then we'll say the description",
    "start": "312669",
    "end": "314860"
  },
  {
    "text": "is my SEO friendly home page in angular",
    "start": "314860",
    "end": "316930"
  },
  {
    "text": "5 and give it an image as well then we",
    "start": "316930",
    "end": "321430"
  },
  {
    "text": "can switch over to the about page and do",
    "start": "321430",
    "end": "323560"
  },
  {
    "text": "the exact same thing so that'll set the",
    "start": "323560",
    "end": "325960"
  },
  {
    "text": "meta tags dynamically for any component",
    "start": "325960",
    "end": "328030"
  },
  {
    "text": "that's loaded by the router you can",
    "start": "328030",
    "end": "329919"
  },
  {
    "text": "verify this is working by opening your",
    "start": "329919",
    "end": "331600"
  },
  {
    "text": "app and then going into the head of the",
    "start": "331600",
    "end": "333100"
  },
  {
    "text": "document and you should see that meta",
    "start": "333100",
    "end": "334900"
  },
  {
    "text": "tags change like this each time you",
    "start": "334900",
    "end": "336520"
  },
  {
    "text": "navigate to a new route that's pretty",
    "start": "336520",
    "end": "338560"
  },
  {
    "text": "cool but I want to take this a step",
    "start": "338560",
    "end": "340180"
  },
  {
    "text": "further and generate the meta tags",
    "start": "340180",
    "end": "341860"
  },
  {
    "text": "dynamically with data loaded from the",
    "start": "341860",
    "end": "343900"
  },
  {
    "text": "firebase database I have another",
    "start": "343900",
    "end": "346090"
  },
  {
    "text": "component generated called firebase demo",
    "start": "346090",
    "end": "348010"
  },
  {
    "text": "that's exactly the same as all the",
    "start": "348010",
    "end": "349360"
  },
  {
    "text": "others but in this one we're going to",
    "start": "349360",
    "end": "351460"
  },
  {
    "text": "import the firebase database for this",
    "start": "351460",
    "end": "354580"
  },
  {
    "text": "part you need a firebase account as well",
    "start": "354580",
    "end": "356380"
  },
  {
    "text": "as angularfire to installed you can",
    "start": "356380",
    "end": "358090"
  },
  {
    "text": "follow the official instructions on the",
    "start": "358090",
    "end": "360250"
  },
  {
    "text": "main repo I'm going to import the",
    "start": "360250",
    "end": "362860"
  },
  {
    "text": "firebase database and you could also use",
    "start": "362860",
    "end": "364720"
  },
  {
    "text": "firestore here as well if you wanted to",
    "start": "364720",
    "end": "366370"
  },
  {
    "text": "then we'll need an rxjs observable as",
    "start": "366370",
    "end": "369160"
  },
  {
    "text": "well as the take operator first time",
    "start": "369160",
    "end": "372220"
  },
  {
    "text": "setting up a reference to the angular",
    "start": "372220",
    "end": "374110"
  },
  {
    "text": "fire object then we'll retrieve that",
    "start": "374110",
    "end": "376419"
  },
  {
    "text": "data as an observable then we'll inject",
    "start": "376419",
    "end": "378970"
  },
  {
    "text": "our SEO service as well as the angular",
    "start": "378970",
    "end": "381460"
  },
  {
    "text": "fire database in the constructor to make",
    "start": "381460",
    "end": "384669"
  },
  {
    "text": "the reference we just call DB object and",
    "start": "384669",
    "end": "386889"
  },
  {
    "text": "I have this data saved on the demo node",
    "start": "386889",
    "end": "389020"
  },
  {
    "text": "and then we get the data by calling",
    "start": "389020",
    "end": "391060"
  },
  {
    "text": "value changes let's quickly jump into",
    "start": "391060",
    "end": "393880"
  },
  {
    "text": "firebase and see what this data looks",
    "start": "393880",
    "end": "395530"
  },
  {
    "text": "like for this demo it looks exactly like",
    "start": "395530",
    "end": "397810"
  },
  {
    "text": "the data we had hard-coded in the",
    "start": "397810",
    "end": "399190"
  },
  {
    "text": "components earlier but we're going to",
    "start": "399190",
    "end": "400900"
  },
  {
    "text": "load it over the",
    "start": "400900",
    "end": "401689"
  },
  {
    "text": "work via firebase to set the metatags",
    "start": "401689",
    "end": "404659"
  },
  {
    "text": "we're going to call take one on the",
    "start": "404659",
    "end": "406399"
  },
  {
    "text": "observable and then subscribe to it and",
    "start": "406399",
    "end": "408919"
  },
  {
    "text": "with the admitted value we're going to",
    "start": "408919",
    "end": "410899"
  },
  {
    "text": "use our SEO service to set the meta tags",
    "start": "410899",
    "end": "413589"
  },
  {
    "text": "the data we get back from the",
    "start": "413589",
    "end": "415519"
  },
  {
    "text": "subscription will be that data we just",
    "start": "415519",
    "end": "416989"
  },
  {
    "text": "looked at in firebase so we can set that",
    "start": "416989",
    "end": "418879"
  },
  {
    "text": "title description and image meta tags so",
    "start": "418879",
    "end": "422119"
  },
  {
    "text": "that's all we need from angular now it's",
    "start": "422119",
    "end": "423799"
  },
  {
    "text": "up to render tron and firebase cloud",
    "start": "423799",
    "end": "425809"
  },
  {
    "text": "functions to make this SEO friendly",
    "start": "425809",
    "end": "427749"
  },
  {
    "text": "first I'm going to show you how to",
    "start": "427749",
    "end": "429619"
  },
  {
    "text": "deploy your own instance of render tron",
    "start": "429619",
    "end": "431749"
  },
  {
    "text": "so you can use this in production Google",
    "start": "431749",
    "end": "434179"
  },
  {
    "text": "may offer this as a service in the",
    "start": "434179",
    "end": "435469"
  },
  {
    "text": "future and I hope that they do but for",
    "start": "435469",
    "end": "437449"
  },
  {
    "text": "now we have to deploy our own instance",
    "start": "437449",
    "end": "439249"
  },
  {
    "text": "of render tron for testing this part is",
    "start": "439249",
    "end": "441800"
  },
  {
    "text": "completely optional so if you want to",
    "start": "441800",
    "end": "443119"
  },
  {
    "text": "skip this step you can go straight to",
    "start": "443119",
    "end": "444619"
  },
  {
    "text": "the firebase cloud function for this",
    "start": "444619",
    "end": "447110"
  },
  {
    "text": "demo I'm just going to clone render Tron",
    "start": "447110",
    "end": "448639"
  },
  {
    "text": "directly into my angular project but you",
    "start": "448639",
    "end": "450619"
  },
  {
    "text": "probably want to have it as a standalone",
    "start": "450619",
    "end": "452119"
  },
  {
    "text": "project separate from angular I'd also",
    "start": "452119",
    "end": "454759"
  },
  {
    "text": "like to point out that you need to have",
    "start": "454759",
    "end": "455869"
  },
  {
    "text": "docker installed the system requirements",
    "start": "455869",
    "end": "457969"
  },
  {
    "text": "vary so I'm not able to show you that",
    "start": "457969",
    "end": "459469"
  },
  {
    "text": "step-by-step here the next step is to CD",
    "start": "459469",
    "end": "462439"
  },
  {
    "text": "into that directory then run the docker",
    "start": "462439",
    "end": "464659"
  },
  {
    "text": "build command it will take a few minutes",
    "start": "464659",
    "end": "466969"
  },
  {
    "text": "to build the container but once it's",
    "start": "466969",
    "end": "469069"
  },
  {
    "text": "finished you should be able to run",
    "start": "469069",
    "end": "470089"
  },
  {
    "text": "docker run and serve it locally on your",
    "start": "470089",
    "end": "472459"
  },
  {
    "text": "system if you navigate to port 8080 you",
    "start": "472459",
    "end": "475879"
  },
  {
    "text": "should see the render tron app running",
    "start": "475879",
    "end": "477559"
  },
  {
    "text": "there this is great if you want to",
    "start": "477559",
    "end": "480289"
  },
  {
    "text": "customize render tron source code for",
    "start": "480289",
    "end": "482239"
  },
  {
    "text": "your specific needs if you already have",
    "start": "482239",
    "end": "484369"
  },
  {
    "text": "a project with firebase you can deploy",
    "start": "484369",
    "end": "486259"
  },
  {
    "text": "the container to App Engine with a",
    "start": "486259",
    "end": "487819"
  },
  {
    "text": "single command you'll first want to go",
    "start": "487819",
    "end": "489889"
  },
  {
    "text": "into the app yamo file and set the",
    "start": "489889",
    "end": "491719"
  },
  {
    "text": "number of CPU cores and memory that you",
    "start": "491719",
    "end": "493399"
  },
  {
    "text": "want to use if you have the Google cloud",
    "start": "493399",
    "end": "495469"
  },
  {
    "text": "platform command-line tools installed",
    "start": "495469",
    "end": "497269"
  },
  {
    "text": "you can simply call g-cloud app deploy",
    "start": "497269",
    "end": "499699"
  },
  {
    "text": "with your corresponding firebase project",
    "start": "499699",
    "end": "502039"
  },
  {
    "text": "that's going to take another few minutes",
    "start": "502039",
    "end": "503689"
  },
  {
    "text": "but it'll give you back a URL with your",
    "start": "503689",
    "end": "505459"
  },
  {
    "text": "own custom production ready version of",
    "start": "505459",
    "end": "507499"
  },
  {
    "text": "render tron now we're ready to create",
    "start": "507499",
    "end": "510199"
  },
  {
    "text": "the cloud function middleware that will",
    "start": "510199",
    "end": "511999"
  },
  {
    "text": "determine if the user is a bought or an",
    "start": "511999",
    "end": "514099"
  },
  {
    "text": "actual human you'll need both firebase",
    "start": "514099",
    "end": "516169"
  },
  {
    "text": "hosting and firebase functions",
    "start": "516169",
    "end": "517879"
  },
  {
    "text": "initialized in your project then we need",
    "start": "517879",
    "end": "520610"
  },
  {
    "text": "to configure hosting to use the firebase",
    "start": "520610",
    "end": "522828"
  },
  {
    "text": "cloud function for any URL other than",
    "start": "522829",
    "end": "525139"
  },
  {
    "text": "the root URL so we do that by adding it",
    "start": "525139",
    "end": "527870"
  },
  {
    "text": "to the rewrite section and the function",
    "start": "527870",
    "end": "529970"
  },
  {
    "text": "is going to be called app but before we",
    "start": "529970",
    "end": "532100"
  },
  {
    "text": "get into the function I'd like to point",
    "start": "532100",
    "end": "533329"
  },
  {
    "text": "out that render Tron has an existing",
    "start": "533329",
    "end": "534829"
  },
  {
    "text": "firebase",
    "start": "534829",
    "end": "535580"
  },
  {
    "text": "cloud function designed to work with",
    "start": "535580",
    "end": "536870"
  },
  {
    "text": "polymer it's not compatible with angular",
    "start": "536870",
    "end": "539060"
  },
  {
    "text": "but it might be worth checking out so",
    "start": "539060",
    "end": "541460"
  },
  {
    "text": "getting back to our app we're going to",
    "start": "541460",
    "end": "542990"
  },
  {
    "text": "CD in the functions directory then we're",
    "start": "542990",
    "end": "545420"
  },
  {
    "text": "going to install Express J S which will",
    "start": "545420",
    "end": "547100"
  },
  {
    "text": "give us some syntactic sugar for routing",
    "start": "547100",
    "end": "549230"
  },
  {
    "text": "and also a library called node fetch",
    "start": "549230",
    "end": "551300"
  },
  {
    "text": "then we're going to go into the",
    "start": "551300",
    "end": "553190"
  },
  {
    "text": "index.jsp file and import these required",
    "start": "553190",
    "end": "556010"
  },
  {
    "text": "libraries we're also going to import URL",
    "start": "556010",
    "end": "558620"
  },
  {
    "text": "from node and then set our Express app",
    "start": "558620",
    "end": "560930"
  },
  {
    "text": "as a variable then I'm going to set our",
    "start": "560930",
    "end": "563660"
  },
  {
    "text": "URL endpoints directly in the function",
    "start": "563660",
    "end": "566060"
  },
  {
    "text": "itself but you could also set these as",
    "start": "566060",
    "end": "567530"
  },
  {
    "text": "environment variables so the app URL is",
    "start": "567530",
    "end": "570440"
  },
  {
    "text": "going to be the URL that we deploy our",
    "start": "570440",
    "end": "572840"
  },
  {
    "text": "annular app to and firebase hosting and",
    "start": "572840",
    "end": "574940"
  },
  {
    "text": "then the render URL is the render truant",
    "start": "574940",
    "end": "577700"
  },
  {
    "text": "endpoint so you can use this render tron",
    "start": "577700",
    "end": "579470"
  },
  {
    "text": "endpoint exactly as it appears here but",
    "start": "579470",
    "end": "581750"
  },
  {
    "text": "if you deployed your own then you would",
    "start": "581750",
    "end": "582950"
  },
  {
    "text": "use your own render URL so we'll export",
    "start": "582950",
    "end": "585710"
  },
  {
    "text": "a function called app and that's going",
    "start": "585710",
    "end": "587570"
  },
  {
    "text": "to give us access to a request and",
    "start": "587570",
    "end": "589310"
  },
  {
    "text": "response object and we're going to use",
    "start": "589310",
    "end": "591110"
  },
  {
    "text": "the wild card character to catch all",
    "start": "591110",
    "end": "592880"
  },
  {
    "text": "routes the first thing I'm going to do",
    "start": "592880",
    "end": "595310"
  },
  {
    "text": "is write a couple of helper functions to",
    "start": "595310",
    "end": "597680"
  },
  {
    "text": "make this a little bit easier so first",
    "start": "597680",
    "end": "599900"
  },
  {
    "text": "we need to generate the URL from the",
    "start": "599900",
    "end": "601910"
  },
  {
    "text": "request so it won't be in the correct",
    "start": "601910",
    "end": "604040"
  },
  {
    "text": "format unless we use the node URL",
    "start": "604040",
    "end": "605720"
  },
  {
    "text": "library so we'll get the protocol the",
    "start": "605720",
    "end": "608540"
  },
  {
    "text": "main app URL then path name is the",
    "start": "608540",
    "end": "610910"
  },
  {
    "text": "actual route the user is trying to get",
    "start": "610910",
    "end": "612650"
  },
  {
    "text": "to to detect search engine crawlers and",
    "start": "612650",
    "end": "614750"
  },
  {
    "text": "social media bots we're going to create",
    "start": "614750",
    "end": "616610"
  },
  {
    "text": "a big list of known bot user agents so",
    "start": "616610",
    "end": "619580"
  },
  {
    "text": "probably the most famous is google bot",
    "start": "619580",
    "end": "621290"
  },
  {
    "text": "but Google BOTS good at executing",
    "start": "621290",
    "end": "623300"
  },
  {
    "text": "JavaScript so you may not even want to",
    "start": "623300",
    "end": "624980"
  },
  {
    "text": "include it here then we'll also set up",
    "start": "624980",
    "end": "627680"
  },
  {
    "text": "our social media bots that would be like",
    "start": "627680",
    "end": "629690"
  },
  {
    "text": "Twitter bot Facebook Linkedin slack and",
    "start": "629690",
    "end": "632480"
  },
  {
    "text": "many others this list isn't",
    "start": "632480",
    "end": "634160"
  },
  {
    "text": "comprehensive you can definitely add",
    "start": "634160",
    "end": "635780"
  },
  {
    "text": "additional values here to detect other",
    "start": "635780",
    "end": "637910"
  },
  {
    "text": "bots the way we actually detect a bot is",
    "start": "637910",
    "end": "640730"
  },
  {
    "text": "from its user agent header in the",
    "start": "640730",
    "end": "642530"
  },
  {
    "text": "request so we're going to take that",
    "start": "642530",
    "end": "644690"
  },
  {
    "text": "header and convert it to lowercase and",
    "start": "644690",
    "end": "647110"
  },
  {
    "text": "then we're going to loop over this list",
    "start": "647110",
    "end": "649580"
  },
  {
    "text": "of bots if we detect the substring in",
    "start": "649580",
    "end": "652490"
  },
  {
    "text": "the header then we're going to say the",
    "start": "652490",
    "end": "654320"
  },
  {
    "text": "bot was detected we can console.log it",
    "start": "654320",
    "end": "656660"
  },
  {
    "text": "for debugging and then we'll return true",
    "start": "656660",
    "end": "658730"
  },
  {
    "text": "from the function otherwise we're just",
    "start": "658730",
    "end": "660620"
  },
  {
    "text": "going to return false when the cloud",
    "start": "660620",
    "end": "662960"
  },
  {
    "text": "function is invoked the very first thing",
    "start": "662960",
    "end": "664790"
  },
  {
    "text": "we're going to do is run this detect bot",
    "start": "664790",
    "end": "666560"
  },
  {
    "text": "helper with the request header",
    "start": "666560",
    "end": "668780"
  },
  {
    "text": "if it returns true we'll know that we",
    "start": "668780",
    "end": "670520"
  },
  {
    "text": "need to send this request to render tron",
    "start": "670520",
    "end": "672470"
  },
  {
    "text": "first so if that's the case then we're",
    "start": "672470",
    "end": "675140"
  },
  {
    "text": "going to format the URL properly to send",
    "start": "675140",
    "end": "677690"
  },
  {
    "text": "it to our render tron endpoint we can do",
    "start": "677690",
    "end": "679850"
  },
  {
    "text": "that with the generate URL function we",
    "start": "679850",
    "end": "681740"
  },
  {
    "text": "created earlier",
    "start": "681740",
    "end": "682430"
  },
  {
    "text": "and then we'll call fetch to fetch the",
    "start": "682430",
    "end": "685370"
  },
  {
    "text": "actual URL so we call the render URL",
    "start": "685370",
    "end": "688790"
  },
  {
    "text": "slash bought URL and that returns a",
    "start": "688790",
    "end": "691280"
  },
  {
    "text": "promise then we'll get the text from",
    "start": "691280",
    "end": "693230"
  },
  {
    "text": "that promise that will give us a",
    "start": "693230",
    "end": "695450"
  },
  {
    "text": "response body that we can send back to",
    "start": "695450",
    "end": "697460"
  },
  {
    "text": "the actual crawler bot but we're going",
    "start": "697460",
    "end": "699950"
  },
  {
    "text": "to define some caching on it so we can",
    "start": "699950",
    "end": "702230"
  },
  {
    "text": "set the cache control header then we'll",
    "start": "702230",
    "end": "704630"
  },
  {
    "text": "set the very header which signals which",
    "start": "704630",
    "end": "706670"
  },
  {
    "text": "part of the request was important in",
    "start": "706670",
    "end": "708650"
  },
  {
    "text": "determining our response in this case",
    "start": "708650",
    "end": "710810"
  },
  {
    "text": "the user-agent header is what determines",
    "start": "710810",
    "end": "712460"
  },
  {
    "text": "how we build this response the last",
    "start": "712460",
    "end": "715460"
  },
  {
    "text": "thing we'll do is convert the body to a",
    "start": "715460",
    "end": "717680"
  },
  {
    "text": "string and then we can send that as a",
    "start": "717680",
    "end": "719450"
  },
  {
    "text": "response from the cloud function that",
    "start": "719450",
    "end": "721790"
  },
  {
    "text": "will be a fully rendered and serialized",
    "start": "721790",
    "end": "723350"
  },
  {
    "text": "web page that can be used by the actual",
    "start": "723350",
    "end": "725360"
  },
  {
    "text": "crawler bot if we don't detect a bot",
    "start": "725360",
    "end": "728150"
  },
  {
    "text": "then we just want to display the main",
    "start": "728150",
    "end": "730070"
  },
  {
    "text": "angular app we can do that by simply",
    "start": "730070",
    "end": "732050"
  },
  {
    "text": "fetching the root URL that's deployed to",
    "start": "732050",
    "end": "734330"
  },
  {
    "text": "firebase we can handle the response in",
    "start": "734330",
    "end": "736610"
  },
  {
    "text": "the same exact way we'll just turn the",
    "start": "736610",
    "end": "738380"
  },
  {
    "text": "body into a string and then send that as",
    "start": "738380",
    "end": "740540"
  },
  {
    "text": "a response from the cloud function you",
    "start": "740540",
    "end": "742850"
  },
  {
    "text": "could probably optimize this to be",
    "start": "742850",
    "end": "744140"
  },
  {
    "text": "faster but it's only going to fire when",
    "start": "744140",
    "end": "746240"
  },
  {
    "text": "you don't go to the root URL because of",
    "start": "746240",
    "end": "748580"
  },
  {
    "text": "firebase hosting priorities it will use",
    "start": "748580",
    "end": "750620"
  },
  {
    "text": "the index.html file when you navigate to",
    "start": "750620",
    "end": "752960"
  },
  {
    "text": "the root URL on your project I discussed",
    "start": "752960",
    "end": "756050"
  },
  {
    "text": "this in more detail in the main article",
    "start": "756050",
    "end": "757580"
  },
  {
    "text": "but for now we're just going to go ahead",
    "start": "757580",
    "end": "759200"
  },
  {
    "text": "and deploy the function so run firebase",
    "start": "759200",
    "end": "761870"
  },
  {
    "text": "deploy only functions then you'll also",
    "start": "761870",
    "end": "764450"
  },
  {
    "text": "need to create a production build for",
    "start": "764450",
    "end": "766160"
  },
  {
    "text": "your angular app so run ng build",
    "start": "766160",
    "end": "768320"
  },
  {
    "text": "production then run firebase deploy only",
    "start": "768320",
    "end": "771560"
  },
  {
    "text": "hosting just like magic your progressive",
    "start": "771560",
    "end": "774110"
  },
  {
    "text": "web app is now optimized for search",
    "start": "774110",
    "end": "775940"
  },
  {
    "text": "engines and can be used by link BOTS and",
    "start": "775940",
    "end": "778160"
  },
  {
    "text": "you didn't have to break your angular",
    "start": "778160",
    "end": "779750"
  },
  {
    "text": "app in the process all of this is very",
    "start": "779750",
    "end": "782210"
  },
  {
    "text": "cutting edge so I recommend you check",
    "start": "782210",
    "end": "783410"
  },
  {
    "text": "out my working demo and reach out on",
    "start": "783410",
    "end": "785450"
  },
  {
    "text": "slack if you have any questions for each",
    "start": "785450",
    "end": "787880"
  },
  {
    "text": "page in the demo there's a URL and if",
    "start": "787880",
    "end": "789800"
  },
  {
    "text": "you paste that into any social media",
    "start": "789800",
    "end": "791630"
  },
  {
    "text": "outlet you should get a link preview or",
    "start": "791630",
    "end": "793700"
  },
  {
    "text": "if you fetch it as a bot you should see",
    "start": "793700",
    "end": "795080"
  },
  {
    "text": "that fully rendered HTML",
    "start": "795080",
    "end": "797240"
  },
  {
    "text": "that's it for angular SEO with render",
    "start": "797240",
    "end": "799760"
  },
  {
    "text": "Tron if this video helped you please",
    "start": "799760",
    "end": "801200"
  },
  {
    "text": "like and subscribe and if you want",
    "start": "801200",
    "end": "802850"
  },
  {
    "text": "advanced exclusive content related to",
    "start": "802850",
    "end": "804800"
  },
  {
    "text": "these topics consider becoming a pro",
    "start": "804800",
    "end": "806540"
  },
  {
    "text": "subscriber at angular firebase comm",
    "start": "806540",
    "end": "808399"
  },
  {
    "text": "you'll get a free copy of my book as",
    "start": "808399",
    "end": "810170"
  },
  {
    "text": "well as one on one project consulting",
    "start": "810170",
    "end": "812149"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "812149",
    "end": "814339"
  },
  {
    "text": "soon",
    "start": "814339",
    "end": "816370"
  },
  {
    "text": "[Music]",
    "start": "818080",
    "end": "822800"
  },
  {
    "text": "[Applause]",
    "start": "822800",
    "end": "823720"
  },
  {
    "text": "[Music]",
    "start": "823720",
    "end": "828199"
  }
]