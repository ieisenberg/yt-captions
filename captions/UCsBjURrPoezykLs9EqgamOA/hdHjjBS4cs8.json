[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "brain [ __ ] a minimal esoteric",
    "start": "80",
    "end": "2040"
  },
  {
    "text": "programming language designed to make",
    "start": "2040",
    "end": "3840"
  },
  {
    "text": "your brain hurt it's Turing complete but",
    "start": "3840",
    "end": "5879"
  },
  {
    "text": "not designed to build actual software",
    "start": "5879",
    "end": "7879"
  },
  {
    "text": "it's more like a work of art that",
    "start": "7879",
    "end": "9320"
  },
  {
    "text": "challenges the status quo it was created",
    "start": "9320",
    "end": "11120"
  },
  {
    "text": "in 1993 by Swiss physics student Urban",
    "start": "11120",
    "end": "13719"
  },
  {
    "text": "Mueller where the goal was to create a",
    "start": "13719",
    "end": "15320"
  },
  {
    "text": "language with the smallest possible",
    "start": "15320",
    "end": "17000"
  },
  {
    "text": "compiler it was built for the amga 2.0",
    "start": "17000",
    "end": "19400"
  },
  {
    "text": "operating system and the compiler weighs",
    "start": "19400",
    "end": "21240"
  },
  {
    "text": "in at under 200 bytes a brain program",
    "start": "21240",
    "end": "24119"
  },
  {
    "text": "starts with a 30,000 by one-dimensional",
    "start": "24119",
    "end": "26400"
  },
  {
    "text": "array all values are initialized to zero",
    "start": "26400",
    "end": "28640"
  },
  {
    "text": "then it provides a movable point that",
    "start": "28640",
    "end": "30359"
  },
  {
    "text": "you can manipulate with eight different",
    "start": "30359",
    "end": "32040"
  },
  {
    "text": "commands use angle brackets to move the",
    "start": "32040",
    "end": "34000"
  },
  {
    "text": "pointer left or right by one cell at a",
    "start": "34000",
    "end": "36079"
  },
  {
    "text": "time then increment or decrement the",
    "start": "36079",
    "end": "37879"
  },
  {
    "text": "value in a Cell using plus or minus use",
    "start": "37879",
    "end": "40399"
  },
  {
    "text": "a period to Output the bite at the",
    "start": "40399",
    "end": "42239"
  },
  {
    "text": "Pointer's current location or use a",
    "start": "42239",
    "end": "44039"
  },
  {
    "text": "comma to accept input and store it at",
    "start": "44039",
    "end": "46199"
  },
  {
    "text": "the Pointer's current location and",
    "start": "46199",
    "end": "47879"
  },
  {
    "text": "finally use opening and closing brackets",
    "start": "47879",
    "end": "50239"
  },
  {
    "text": "to create a loop notice how brain Fu",
    "start": "50239",
    "end": "52199"
  },
  {
    "text": "doesn't require silly things like",
    "start": "52199",
    "end": "53719"
  },
  {
    "text": "variables functions and classes to get",
    "start": "53719",
    "end": "55920"
  },
  {
    "text": "started with brain [ __ ] delete your",
    "start": "55920",
    "end": "57440"
  },
  {
    "start": "56000",
    "end": "121000"
  },
  {
    "text": "operating system and install a migga OS",
    "start": "57440",
    "end": "60000"
  },
  {
    "text": "then create a file ending inbf which",
    "start": "60000",
    "end": "62280"
  },
  {
    "text": "stands for brain Fu any characters that",
    "start": "62280",
    "end": "64360"
  },
  {
    "text": "are not the eight I mentioned previously",
    "start": "64360",
    "end": "66080"
  },
  {
    "text": "will be ignored as a common at this",
    "start": "66080",
    "end": "68119"
  },
  {
    "text": "point we have an array with 30,000 8bit",
    "start": "68119",
    "end": "70520"
  },
  {
    "text": "numbers all set to zero to say hi mom",
    "start": "70520",
    "end": "72920"
  },
  {
    "text": "we'll need to set each number to its",
    "start": "72920",
    "end": "74560"
  },
  {
    "text": "corresponding asky character we can",
    "start": "74560",
    "end": "76320"
  },
  {
    "text": "increment the first cell then enter a",
    "start": "76320",
    "end": "78119"
  },
  {
    "text": "loop with an opening bracket for each",
    "start": "78119",
    "end": "80040"
  },
  {
    "text": "iteration of the loop we'll decrement",
    "start": "80040",
    "end": "81759"
  },
  {
    "text": "the current cell by five then use an",
    "start": "81759",
    "end": "83560"
  },
  {
    "text": "angle bracket to move one cell to the",
    "start": "83560",
    "end": "85600"
  },
  {
    "text": "right we'll increment that cell by three",
    "start": "85600",
    "end": "87479"
  },
  {
    "text": "then move back to the left and close the",
    "start": "87479",
    "end": "89320"
  },
  {
    "text": "loop the loop will will continue until",
    "start": "89320",
    "end": "90799"
  },
  {
    "text": "the original cell goes back to zero at",
    "start": "90799",
    "end": "92720"
  },
  {
    "text": "which point it will exit we now have a",
    "start": "92720",
    "end": "94520"
  },
  {
    "text": "value of 103 at index one we can move",
    "start": "94520",
    "end": "97000"
  },
  {
    "text": "the pointer to it increment it to 104",
    "start": "97000",
    "end": "99079"
  },
  {
    "text": "then use a period to Output it that",
    "start": "99079",
    "end": "101119"
  },
  {
    "text": "corresponds to the letter H in asky we",
    "start": "101119",
    "end": "103200"
  },
  {
    "text": "can increment it again to get 105 which",
    "start": "103200",
    "end": "105439"
  },
  {
    "text": "corresponds to the letter I now we",
    "start": "105439",
    "end": "107240"
  },
  {
    "text": "continue this process of manipulating",
    "start": "107240",
    "end": "108799"
  },
  {
    "text": "memory like cavemen until we output all",
    "start": "108799",
    "end": "110799"
  },
  {
    "text": "the characters that we need now to run",
    "start": "110799",
    "end": "112399"
  },
  {
    "text": "your code use rightclick copy and paste",
    "start": "112399",
    "end": "114759"
  },
  {
    "text": "it into one of the many online",
    "start": "114759",
    "end": "116240"
  },
  {
    "text": "interpreters congratulations you just",
    "start": "116240",
    "end": "118119"
  },
  {
    "text": "said hi to your mom and brain [ __ ] this",
    "start": "118119",
    "end": "120079"
  },
  {
    "text": "has been brain [ __ ] in 100 seconds if",
    "start": "120079",
    "end": "122200"
  },
  {
    "start": "121000",
    "end": "129000"
  },
  {
    "text": "you want to see more brain [ __ ] content",
    "start": "122200",
    "end": "123799"
  },
  {
    "text": "on this channel make sure to hit the",
    "start": "123799",
    "end": "125320"
  },
  {
    "text": "like button and subscribe thanks for",
    "start": "125320",
    "end": "127000"
  },
  {
    "text": "watching and I will see you in the next",
    "start": "127000",
    "end": "128920"
  },
  {
    "text": "one",
    "start": "128920",
    "end": "131879"
  }
]