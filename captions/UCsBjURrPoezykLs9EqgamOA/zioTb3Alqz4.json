[
  {
    "text": "in this episode we're going to build a",
    "start": "30",
    "end": "2429"
  },
  {
    "text": "text translation feature in angular 4",
    "start": "2429",
    "end": "4799"
  },
  {
    "text": "and we're going to do it completely in",
    "start": "4799",
    "end": "6600"
  },
  {
    "text": "the background using firebase cloud",
    "start": "6600",
    "end": "8610"
  },
  {
    "text": "functions and the Google Translate API",
    "start": "8610",
    "end": "12349"
  },
  {
    "text": "this example is going to take a string",
    "start": "12349",
    "end": "15150"
  },
  {
    "text": "of English text and translate it to",
    "start": "15150",
    "end": "17490"
  },
  {
    "text": "French Spanish and Arabic we're able to",
    "start": "17490",
    "end": "22170"
  },
  {
    "text": "make this work using the on write call",
    "start": "22170",
    "end": "24240"
  },
  {
    "text": "back from the firebase database which",
    "start": "24240",
    "end": "26430"
  },
  {
    "text": "will trigger a cloud function that",
    "start": "26430",
    "end": "28050"
  },
  {
    "text": "handles the entire translation process",
    "start": "28050",
    "end": "30090"
  },
  {
    "text": "in other words we're going to build a",
    "start": "30090",
    "end": "32008"
  },
  {
    "text": "micro service specifically for",
    "start": "32009",
    "end": "34079"
  },
  {
    "text": "translation and we're going to trigger",
    "start": "34079",
    "end": "36420"
  },
  {
    "text": "this micro service to run every time new",
    "start": "36420",
    "end": "38730"
  },
  {
    "text": "data is added to the database the first",
    "start": "38730",
    "end": "43559"
  },
  {
    "text": "step is to model the data in this case",
    "start": "43559",
    "end": "45870"
  },
  {
    "text": "we just have a collection of translation",
    "start": "45870",
    "end": "47760"
  },
  {
    "text": "and each translation has a set of key",
    "start": "47760",
    "end": "51809"
  },
  {
    "text": "value pairs where the key is the",
    "start": "51809",
    "end": "53789"
  },
  {
    "text": "language and the value is the translated",
    "start": "53789",
    "end": "56550"
  },
  {
    "text": "text so the user will enter the text in",
    "start": "56550",
    "end": "59039"
  },
  {
    "text": "English and then the cloud function will",
    "start": "59039",
    "end": "61230"
  },
  {
    "text": "write the data at every other language",
    "start": "61230",
    "end": "63120"
  },
  {
    "text": "that we want to translate the first step",
    "start": "63120",
    "end": "65850"
  },
  {
    "text": "is to allow the user to input their tags",
    "start": "65850",
    "end": "68369"
  },
  {
    "text": "to the firebase database so we'll start",
    "start": "68369",
    "end": "70680"
  },
  {
    "text": "building that in a service the service",
    "start": "70680",
    "end": "74040"
  },
  {
    "text": "only needs one function called create",
    "start": "74040",
    "end": "75869"
  },
  {
    "text": "translation it starts by pushing the",
    "start": "75869",
    "end": "78420"
  },
  {
    "text": "user text to the database then it",
    "start": "78420",
    "end": "80759"
  },
  {
    "text": "returns that as an object observable so",
    "start": "80759",
    "end": "83400"
  },
  {
    "text": "we can update these or interface",
    "start": "83400",
    "end": "84990"
  },
  {
    "text": "asynchronously",
    "start": "84990",
    "end": "87150"
  },
  {
    "text": "[Music]",
    "start": "87150",
    "end": "95690"
  },
  {
    "text": "now we can start building the component",
    "start": "100250",
    "end": "104630"
  },
  {
    "text": "first we define a variable for the users",
    "start": "105050",
    "end": "107700"
  },
  {
    "text": "text and then we define another variable",
    "start": "107700",
    "end": "110010"
  },
  {
    "text": "for the current translation which is the",
    "start": "110010",
    "end": "112560"
  },
  {
    "text": "observable returned to us from the",
    "start": "112560",
    "end": "114240"
  },
  {
    "text": "service then we create a handle",
    "start": "114240",
    "end": "116820"
  },
  {
    "text": "translation function that will trigger",
    "start": "116820",
    "end": "119070"
  },
  {
    "text": "the entire process when the user submits",
    "start": "119070",
    "end": "121080"
  },
  {
    "text": "their form from the template I'm also",
    "start": "121080",
    "end": "126180"
  },
  {
    "text": "creating a default message helper that",
    "start": "126180",
    "end": "128250"
  },
  {
    "text": "will tell the user when the cloud",
    "start": "128250",
    "end": "129690"
  },
  {
    "text": "function is running in the background",
    "start": "129690",
    "end": "131150"
  },
  {
    "text": "it'd be a good idea to replace this with",
    "start": "131150",
    "end": "133620"
  },
  {
    "text": "a loading spinner or possibly a progress",
    "start": "133620",
    "end": "136020"
  },
  {
    "text": "bar and the template we start by",
    "start": "136020",
    "end": "139380"
  },
  {
    "text": "creating a text area then we use ng",
    "start": "139380",
    "end": "141810"
  },
  {
    "text": "model to bind it to the user text",
    "start": "141810",
    "end": "144480"
  },
  {
    "text": "variable that we defined in the type",
    "start": "144480",
    "end": "146070"
  },
  {
    "text": "script then we create a button and",
    "start": "146070",
    "end": "149670"
  },
  {
    "text": "attach the click event to the handle",
    "start": "149670",
    "end": "152370"
  },
  {
    "text": "translation function since our current",
    "start": "152370",
    "end": "156750"
  },
  {
    "text": "translation isn't observable we can use",
    "start": "156750",
    "end": "159000"
  },
  {
    "text": "the async pipe to unwrap that",
    "start": "159000",
    "end": "161090"
  },
  {
    "text": "asynchronously in the template",
    "start": "161090",
    "end": "164900"
  },
  {
    "text": "in this case we use the question mark to",
    "start": "166060",
    "end": "168970"
  },
  {
    "text": "safely access the attributes before",
    "start": "168970",
    "end": "171280"
  },
  {
    "text": "they've been defined otherwise an",
    "start": "171280",
    "end": "172690"
  },
  {
    "text": "exception would be raised and we also",
    "start": "172690",
    "end": "175630"
  },
  {
    "text": "use the or operator to display the",
    "start": "175630",
    "end": "177910"
  },
  {
    "text": "default message if the translation is",
    "start": "177910",
    "end": "180220"
  },
  {
    "text": "undefined now we can start building the",
    "start": "180220",
    "end": "189160"
  },
  {
    "text": "cloud function if this is your first",
    "start": "189160",
    "end": "191800"
  },
  {
    "text": "time using cloud functions in angular",
    "start": "191800",
    "end": "193540"
  },
  {
    "text": "you'll need to run firebase in it from",
    "start": "193540",
    "end": "195520"
  },
  {
    "text": "the command line from there we'll need",
    "start": "195520",
    "end": "197709"
  },
  {
    "text": "to install the necessary packages in the",
    "start": "197709",
    "end": "200050"
  },
  {
    "text": "cloud function environment I'm using",
    "start": "200050",
    "end": "202330"
  },
  {
    "text": "lodash to make the java script a little",
    "start": "202330",
    "end": "204160"
  },
  {
    "text": "more readable and also using the request",
    "start": "204160",
    "end": "206950"
  },
  {
    "text": "promise library to send the request to",
    "start": "206950",
    "end": "209800"
  },
  {
    "text": "the Google Translate API make sure",
    "start": "209800",
    "end": "213519"
  },
  {
    "text": "you're in the functions directory and",
    "start": "213519",
    "end": "215290"
  },
  {
    "text": "then run npm install and the index.jsp",
    "start": "215290",
    "end": "219010"
  },
  {
    "text": "file we start by importing the necessary",
    "start": "219010",
    "end": "221890"
  },
  {
    "text": "libraries then we run exports translate",
    "start": "221890",
    "end": "229750"
  },
  {
    "text": "to you name our actual cloud function",
    "start": "229750",
    "end": "232170"
  },
  {
    "text": "from there we make a reference to the",
    "start": "232170",
    "end": "234700"
  },
  {
    "text": "database location we want to trigger the",
    "start": "234700",
    "end": "236470"
  },
  {
    "text": "function then we call on write to run",
    "start": "236470",
    "end": "239920"
  },
  {
    "text": "this callback whenever new data is added",
    "start": "239920",
    "end": "241900"
  },
  {
    "text": "to the database at that particular",
    "start": "241900",
    "end": "243610"
  },
  {
    "text": "location next we create a promise for",
    "start": "243610",
    "end": "247090"
  },
  {
    "text": "each language that we want to translate",
    "start": "247090",
    "end": "251069"
  },
  {
    "text": "we build the promise by making a request",
    "start": "254560",
    "end": "257600"
  },
  {
    "text": "for the Google Translate API through",
    "start": "257600",
    "end": "259910"
  },
  {
    "text": "this URL here URL self needs the source",
    "start": "259910",
    "end": "263480"
  },
  {
    "text": "language the target language and the",
    "start": "263480",
    "end": "266120"
  },
  {
    "text": "text itself when we send the request we",
    "start": "266120",
    "end": "280130"
  },
  {
    "text": "need to make sure to resolve the promise",
    "start": "280130",
    "end": "281570"
  },
  {
    "text": "with the full response if we get a",
    "start": "281570",
    "end": "289250"
  },
  {
    "text": "successful 200 response we convert the",
    "start": "289250",
    "end": "291979"
  },
  {
    "text": "response to JSON and then use the",
    "start": "291979",
    "end": "294200"
  },
  {
    "text": "translated text is the data that we use",
    "start": "294200",
    "end": "296479"
  },
  {
    "text": "to update firebase the final step is to",
    "start": "296479",
    "end": "300590"
  },
  {
    "text": "update the firebase database as an admin",
    "start": "300590",
    "end": "302930"
  },
  {
    "text": "user and if there's an error we want to",
    "start": "302930",
    "end": "305960"
  },
  {
    "text": "throw that error to make sure it shows",
    "start": "305960",
    "end": "307340"
  },
  {
    "text": "up in that cloud function logs if we go",
    "start": "307340",
    "end": "312950"
  },
  {
    "text": "back into the app now we can see that",
    "start": "312950",
    "end": "314600"
  },
  {
    "text": "our data is being updated and we're",
    "start": "314600",
    "end": "316700"
  },
  {
    "text": "getting translations back from the cloud",
    "start": "316700",
    "end": "318650"
  },
  {
    "text": "function pretty quickly",
    "start": "318650",
    "end": "319910"
  },
  {
    "text": "looks like about 300 milliseconds for",
    "start": "319910",
    "end": "322190"
  },
  {
    "text": "the function to execute",
    "start": "322190",
    "end": "323410"
  },
  {
    "text": "[Music]",
    "start": "323410",
    "end": "328429"
  },
  {
    "text": "that's it for this episode if you found",
    "start": "329490",
    "end": "332229"
  },
  {
    "text": "the video helpful please like and",
    "start": "332229",
    "end": "333580"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "333580",
    "end": "335530"
  },
  {
    "text": "channel consider becoming a pro",
    "start": "335530",
    "end": "337090"
  },
  {
    "text": "subscriber at angular firebase comm for",
    "start": "337090",
    "end": "340569"
  },
  {
    "text": "just a few bucks a month you'll get",
    "start": "340569",
    "end": "341620"
  },
  {
    "text": "access to exclusive content as well as",
    "start": "341620",
    "end": "343870"
  },
  {
    "text": "free one-on-one project and Colton",
    "start": "343870",
    "end": "345990"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "345990",
    "end": "348430"
  },
  {
    "text": "next time",
    "start": "348430",
    "end": "350540"
  },
  {
    "text": "[Music]",
    "start": "350540",
    "end": "356019"
  }
]