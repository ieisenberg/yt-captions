[
  {
    "text": "in the 90s we had static websites in the",
    "start": "30",
    "end": "2460"
  },
  {
    "text": "2000s we had WordPress and today we have",
    "start": "2460",
    "end": "5100"
  },
  {
    "text": "programmable content with content full",
    "start": "5100",
    "end": "7319"
  },
  {
    "text": "it works by treating all of your static",
    "start": "7319",
    "end": "9300"
  },
  {
    "text": "content like an API let's imagine your",
    "start": "9300",
    "end": "11700"
  },
  {
    "text": "product consists of an angular",
    "start": "11700",
    "end": "13080"
  },
  {
    "text": "progressive web app a native mobile app",
    "start": "13080",
    "end": "15269"
  },
  {
    "text": "and an electron desktop app contentful",
    "start": "15269",
    "end": "18060"
  },
  {
    "text": "serves as a centralized source for all",
    "start": "18060",
    "end": "19949"
  },
  {
    "text": "of your content so anytime something",
    "start": "19949",
    "end": "21990"
  },
  {
    "text": "changes you don't have to redeploy every",
    "start": "21990",
    "end": "23880"
  },
  {
    "text": "app individually in this episode I'm",
    "start": "23880",
    "end": "26189"
  },
  {
    "text": "going to show you how to use the",
    "start": "26189",
    "end": "27150"
  },
  {
    "text": "platform with an angular 5 progressive",
    "start": "27150",
    "end": "29070"
  },
  {
    "text": "web app and broadcast push notifications",
    "start": "29070",
    "end": "31529"
  },
  {
    "text": "out any time new content is published",
    "start": "31529",
    "end": "33690"
  },
  {
    "text": "before we get started I wanted to say",
    "start": "33690",
    "end": "35340"
  },
  {
    "text": "thank you to lifetime pro member frantic",
    "start": "35340",
    "end": "37680"
  },
  {
    "text": "they're building amazing enterprise",
    "start": "37680",
    "end": "39540"
  },
  {
    "text": "great apps using similar technologies to",
    "start": "39540",
    "end": "41520"
  },
  {
    "text": "what I show you here if you're looking",
    "start": "41520",
    "end": "42989"
  },
  {
    "text": "for inspiration for modern web app",
    "start": "42989",
    "end": "44789"
  },
  {
    "text": "development be sure to check out their",
    "start": "44789",
    "end": "46559"
  },
  {
    "text": "portfolio to get started with this",
    "start": "46559",
    "end": "49379"
  },
  {
    "text": "tutorial you'll need to first sign up",
    "start": "49379",
    "end": "50850"
  },
  {
    "text": "for a free content full account and the",
    "start": "50850",
    "end": "53340"
  },
  {
    "text": "first thing you'll do is create a space",
    "start": "53340",
    "end": "54930"
  },
  {
    "text": "for your content spaces allow you to",
    "start": "54930",
    "end": "57180"
  },
  {
    "text": "organize your concerns for example you",
    "start": "57180",
    "end": "59160"
  },
  {
    "text": "might have one space for blog post and",
    "start": "59160",
    "end": "61140"
  },
  {
    "text": "another space for product listings in",
    "start": "61140",
    "end": "63480"
  },
  {
    "text": "this example I'm going to create a",
    "start": "63480",
    "end": "65518"
  },
  {
    "text": "lesson space that will mirror the",
    "start": "65519",
    "end": "67170"
  },
  {
    "text": "content that you'll find on angular",
    "start": "67170",
    "end": "69030"
  },
  {
    "text": "firebase com the next step is to create",
    "start": "69030",
    "end": "72330"
  },
  {
    "text": "a content type so in this case our",
    "start": "72330",
    "end": "74820"
  },
  {
    "text": "content type is going to be a lesson but",
    "start": "74820",
    "end": "77250"
  },
  {
    "text": "you might also have content types for",
    "start": "77250",
    "end": "78689"
  },
  {
    "text": "the author profile or a category listing",
    "start": "78689",
    "end": "81240"
  },
  {
    "text": "or any other chunk of content that you",
    "start": "81240",
    "end": "83189"
  },
  {
    "text": "can imagine after you've created your",
    "start": "83189",
    "end": "85590"
  },
  {
    "text": "content type the next step is to add",
    "start": "85590",
    "end": "87570"
  },
  {
    "text": "some fields to it a field would be any",
    "start": "87570",
    "end": "90210"
  },
  {
    "text": "property related to your actual content",
    "start": "90210",
    "end": "92340"
  },
  {
    "text": "type so in this case we're going to set",
    "start": "92340",
    "end": "94530"
  },
  {
    "text": "a title field the beauty of this",
    "start": "94530",
    "end": "96720"
  },
  {
    "text": "platform is that you can standardize and",
    "start": "96720",
    "end": "98369"
  },
  {
    "text": "validate each field doing this from",
    "start": "98369",
    "end": "100409"
  },
  {
    "text": "scratch would be a ton of extra work for",
    "start": "100409",
    "end": "102240"
  },
  {
    "text": "a developer the end result is a",
    "start": "102240",
    "end": "104700"
  },
  {
    "text": "consistent blueprint for your content",
    "start": "104700",
    "end": "106500"
  },
  {
    "text": "that you can handle differently on any",
    "start": "106500",
    "end": "108329"
  },
  {
    "text": "platform after you have your blueprint",
    "start": "108329",
    "end": "111060"
  },
  {
    "text": "created you can then use content foulest",
    "start": "111060",
    "end": "112799"
  },
  {
    "text": "text editor to easily add new content",
    "start": "112799",
    "end": "114990"
  },
  {
    "text": "this is a powerful feature when you have",
    "start": "114990",
    "end": "117030"
  },
  {
    "text": "team members who create content for your",
    "start": "117030",
    "end": "118710"
  },
  {
    "text": "apps but aren't actually programmers so",
    "start": "118710",
    "end": "121710"
  },
  {
    "text": "your content creators get this text",
    "start": "121710",
    "end": "123540"
  },
  {
    "text": "editor and your programmers don't have",
    "start": "123540",
    "end": "125219"
  },
  {
    "text": "to worry about building one from scratch",
    "start": "125219",
    "end": "126860"
  },
  {
    "text": "that sums up the basic process for",
    "start": "126860",
    "end": "129420"
  },
  {
    "text": "building content with content full now",
    "start": "129420",
    "end": "131370"
  },
  {
    "text": "let's switch over to angular and action",
    "start": "131370",
    "end": "133360"
  },
  {
    "text": "use this in our progressive web app I'm",
    "start": "133360",
    "end": "136030"
  },
  {
    "text": "starting from a brand new angular app so",
    "start": "136030",
    "end": "138010"
  },
  {
    "text": "run ng new and then CD into the app and",
    "start": "138010",
    "end": "140920"
  },
  {
    "text": "then the only dependencies are content",
    "start": "140920",
    "end": "143650"
  },
  {
    "text": "full and a library called marked which",
    "start": "143650",
    "end": "145600"
  },
  {
    "text": "we're going to use to convert markdown",
    "start": "145600",
    "end": "147190"
  },
  {
    "text": "to raw HTML then to interact with the",
    "start": "147190",
    "end": "151060"
  },
  {
    "text": "API I'm going to create a service called",
    "start": "151060",
    "end": "153190"
  },
  {
    "text": "content fold and make sure to add that",
    "start": "153190",
    "end": "155560"
  },
  {
    "text": "to the app module from there go back",
    "start": "155560",
    "end": "159070"
  },
  {
    "text": "into content full and go to the API tab",
    "start": "159070",
    "end": "161620"
  },
  {
    "text": "then copy the space ID and the content",
    "start": "161620",
    "end": "164740"
  },
  {
    "text": "delivery token then you'll add these to",
    "start": "164740",
    "end": "167200"
  },
  {
    "text": "your environment TS file inside of",
    "start": "167200",
    "end": "169000"
  },
  {
    "text": "angular make sure that you're using the",
    "start": "169000",
    "end": "170980"
  },
  {
    "text": "content delivery token you don't want to",
    "start": "170980",
    "end": "173350"
  },
  {
    "text": "expose any API token that has right",
    "start": "173350",
    "end": "175630"
  },
  {
    "text": "access to your content 'full api from",
    "start": "175630",
    "end": "178600"
  },
  {
    "text": "here we're going to jump into the",
    "start": "178600",
    "end": "180010"
  },
  {
    "text": "service and the first thing we'll do is",
    "start": "180010",
    "end": "181900"
  },
  {
    "text": "import the content full sdk and we also",
    "start": "181900",
    "end": "186310"
  },
  {
    "text": "need the environment variables that we",
    "start": "186310",
    "end": "187600"
  },
  {
    "text": "just configured as well as the rxjs",
    "start": "187600",
    "end": "189940"
  },
  {
    "text": "observable class so the first thing we",
    "start": "189940",
    "end": "192610"
  },
  {
    "text": "need to do is initialize the sdk client",
    "start": "192610",
    "end": "195550"
  },
  {
    "text": "we do that by calling content full",
    "start": "195550",
    "end": "197500"
  },
  {
    "text": "create client along with our space ID",
    "start": "197500",
    "end": "199660"
  },
  {
    "text": "and our API token the first thing I want",
    "start": "199660",
    "end": "203350"
  },
  {
    "text": "to do is console log out the content",
    "start": "203350",
    "end": "205209"
  },
  {
    "text": "just so you know what the actual",
    "start": "205209",
    "end": "206170"
  },
  {
    "text": "JavaScript object looks like we can",
    "start": "206170",
    "end": "209080"
  },
  {
    "text": "retrieve a single piece of content which",
    "start": "209080",
    "end": "210730"
  },
  {
    "text": "in this case is our lesson by calling",
    "start": "210730",
    "end": "212560"
  },
  {
    "text": "client get entry with the entry ID",
    "start": "212560",
    "end": "215519"
  },
  {
    "text": "that's going to return a promise which",
    "start": "215519",
    "end": "217780"
  },
  {
    "text": "will resolve with the actual lesson",
    "start": "217780",
    "end": "219400"
  },
  {
    "text": "content that we want to use this method",
    "start": "219400",
    "end": "222160"
  },
  {
    "text": "I'm going to switch over to the app",
    "start": "222160",
    "end": "223780"
  },
  {
    "text": "component then I import the service and",
    "start": "223780",
    "end": "226930"
  },
  {
    "text": "I set up a variable here as an",
    "start": "226930",
    "end": "228760"
  },
  {
    "text": "observable that will hold our lesson",
    "start": "228760",
    "end": "230470"
  },
  {
    "text": "content here in the next step then we",
    "start": "230470",
    "end": "232930"
  },
  {
    "text": "can inject the service in the",
    "start": "232930",
    "end": "234430"
  },
  {
    "text": "constructor and during ng on an it will",
    "start": "234430",
    "end": "237130"
  },
  {
    "text": "call the method that we just defined",
    "start": "237130",
    "end": "238540"
  },
  {
    "text": "which will log the content in the",
    "start": "238540",
    "end": "240580"
  },
  {
    "text": "browser console each piece of content is",
    "start": "240580",
    "end": "243250"
  },
  {
    "text": "assigned a unique ID so I'm just copying",
    "start": "243250",
    "end": "245350"
  },
  {
    "text": "and pasting that is the argument to our",
    "start": "245350",
    "end": "247180"
  },
  {
    "text": "method if we load the app you see we get",
    "start": "247180",
    "end": "250780"
  },
  {
    "text": "the content here logged in the console",
    "start": "250780",
    "end": "252880"
  },
  {
    "text": "it has two main properties the fields",
    "start": "252880",
    "end": "255370"
  },
  {
    "text": "property is all of our content this is",
    "start": "255370",
    "end": "257410"
  },
  {
    "text": "the actual data that we want to show to",
    "start": "257410",
    "end": "259120"
  },
  {
    "text": "the user in the front end it corresponds",
    "start": "259120",
    "end": "261940"
  },
  {
    "text": "exactly to that field types that you",
    "start": "261940",
    "end": "263770"
  },
  {
    "text": "defined in content pool",
    "start": "263770",
    "end": "265240"
  },
  {
    "text": "it also has a system",
    "start": "265240",
    "end": "267310"
  },
  {
    "text": "which has some additional metadata about",
    "start": "267310",
    "end": "269380"
  },
  {
    "text": "the content you may or may not want to",
    "start": "269380",
    "end": "271600"
  },
  {
    "text": "use this depending on your particular",
    "start": "271600",
    "end": "272980"
  },
  {
    "text": "use case now that we know what the",
    "start": "272980",
    "end": "274960"
  },
  {
    "text": "content looks like let's convert it into",
    "start": "274960",
    "end": "276820"
  },
  {
    "text": "an observable so it's more angular",
    "start": "276820",
    "end": "278470"
  },
  {
    "text": "friendly so I'm creating a get content",
    "start": "278470",
    "end": "280930"
  },
  {
    "text": "method here which will first define the",
    "start": "280930",
    "end": "282910"
  },
  {
    "text": "promise in a variable it's calling the",
    "start": "282910",
    "end": "286390"
  },
  {
    "text": "same client get entry method with the",
    "start": "286390",
    "end": "288430"
  },
  {
    "text": "Content ID then we can convert it to an",
    "start": "288430",
    "end": "291220"
  },
  {
    "text": "observable by calling observable from",
    "start": "291220",
    "end": "293110"
  },
  {
    "text": "promise and then I'm going to map it",
    "start": "293110",
    "end": "295360"
  },
  {
    "text": "down just to the fields that's the",
    "start": "295360",
    "end": "296950"
  },
  {
    "text": "content that we want to show the end",
    "start": "296950",
    "end": "298090"
  },
  {
    "text": "user we don't really need that extra",
    "start": "298090",
    "end": "299650"
  },
  {
    "text": "metadata to make use of it I'm switching",
    "start": "299650",
    "end": "303430"
  },
  {
    "text": "back to the app component then I define",
    "start": "303430",
    "end": "305590"
  },
  {
    "text": "the lesson variable by calling this",
    "start": "305590",
    "end": "307180"
  },
  {
    "text": "method with the corresponding Content ID",
    "start": "307180",
    "end": "309840"
  },
  {
    "text": "now we can treat it like a regular",
    "start": "309840",
    "end": "311710"
  },
  {
    "text": "observable in the HTML if you're already",
    "start": "311710",
    "end": "313990"
  },
  {
    "text": "familiar with angular this code should",
    "start": "313990",
    "end": "315460"
  },
  {
    "text": "look very familiar to you",
    "start": "315460",
    "end": "316750"
  },
  {
    "text": "so first we'll unwrap the observable by",
    "start": "316750",
    "end": "319120"
  },
  {
    "text": "calling ng if and then use the async",
    "start": "319120",
    "end": "321340"
  },
  {
    "text": "pipe and then we'll set it to a template",
    "start": "321340",
    "end": "323770"
  },
  {
    "text": "variable called lesson from there it's",
    "start": "323770",
    "end": "326890"
  },
  {
    "text": "extremely easy to just call the lesson",
    "start": "326890",
    "end": "328510"
  },
  {
    "text": "properties directly on the object so",
    "start": "328510",
    "end": "330370"
  },
  {
    "text": "we'll display the lesson title then",
    "start": "330370",
    "end": "332860"
  },
  {
    "text": "created at timestamp is a JavaScript",
    "start": "332860",
    "end": "335260"
  },
  {
    "text": "date object so we can use the angular",
    "start": "335260",
    "end": "337210"
  },
  {
    "text": "date pipe to display that in a",
    "start": "337210",
    "end": "339070"
  },
  {
    "text": "user-friendly way the lesson tags are",
    "start": "339070",
    "end": "342190"
  },
  {
    "text": "saved as an array and content full so we",
    "start": "342190",
    "end": "344410"
  },
  {
    "text": "can loop over those tags using ng for",
    "start": "344410",
    "end": "346950"
  },
  {
    "text": "then the only issue we're going to run",
    "start": "346950",
    "end": "349090"
  },
  {
    "text": "into is when we display the lesson body",
    "start": "349090",
    "end": "351040"
  },
  {
    "text": "and I'll show you why here in just a",
    "start": "351040",
    "end": "352600"
  },
  {
    "text": "second here's what we have so far in",
    "start": "352600",
    "end": "354430"
  },
  {
    "text": "angular our title and our tags look",
    "start": "354430",
    "end": "355990"
  },
  {
    "text": "great but if you look closely at the",
    "start": "355990",
    "end": "357520"
  },
  {
    "text": "body it's written in markdown format",
    "start": "357520",
    "end": "359590"
  },
  {
    "text": "it's just a raw string instead of the",
    "start": "359590",
    "end": "361810"
  },
  {
    "text": "actual HTML that we want to display to",
    "start": "361810",
    "end": "363790"
  },
  {
    "text": "the user in the front end when you write",
    "start": "363790",
    "end": "365979"
  },
  {
    "text": "markdown it looks like this but angular",
    "start": "365979",
    "end": "367990"
  },
  {
    "text": "has no way of parsing this automatically",
    "start": "367990",
    "end": "370000"
  },
  {
    "text": "what we're going to do is create an",
    "start": "370000",
    "end": "371530"
  },
  {
    "text": "angular pipe called",
    "start": "371530",
    "end": "372729"
  },
  {
    "text": "MD to HTML and it's going to take",
    "start": "372729",
    "end": "375250"
  },
  {
    "text": "advantage of the marked library we",
    "start": "375250",
    "end": "376630"
  },
  {
    "text": "installed earlier to parse the markdown",
    "start": "376630",
    "end": "379000"
  },
  {
    "text": "to HTML first I'm going to go back into",
    "start": "379000",
    "end": "382030"
  },
  {
    "text": "the service and we're going to import",
    "start": "382030",
    "end": "384010"
  },
  {
    "text": "the marked library there I'm defining",
    "start": "384010",
    "end": "386260"
  },
  {
    "text": "this method in the service just to make",
    "start": "386260",
    "end": "387850"
  },
  {
    "text": "it a little more flexible to work with",
    "start": "387850",
    "end": "389290"
  },
  {
    "text": "so it just takes a markdown string as an",
    "start": "389290",
    "end": "391840"
  },
  {
    "text": "argument and then it calls the marked",
    "start": "391840",
    "end": "393550"
  },
  {
    "text": "library to convert it to HTML then we",
    "start": "393550",
    "end": "396789"
  },
  {
    "text": "can import the content full service",
    "start": "396789",
    "end": "398650"
  },
  {
    "text": "inside of our pipe and we'll inject that",
    "start": "398650",
    "end": "400810"
  },
  {
    "text": "into the",
    "start": "400810",
    "end": "401200"
  },
  {
    "text": "instructor just like we wouldn't a",
    "start": "401200",
    "end": "402310"
  },
  {
    "text": "component then all we have to do is take",
    "start": "402310",
    "end": "404950"
  },
  {
    "text": "the input value and call the method we",
    "start": "404950",
    "end": "407170"
  },
  {
    "text": "just created in the service on that",
    "start": "407170",
    "end": "408850"
  },
  {
    "text": "value then we can add the pipe to our",
    "start": "408850",
    "end": "411580"
  },
  {
    "text": "lesson body but it's still only going to",
    "start": "411580",
    "end": "413710"
  },
  {
    "text": "display a string so at this point we",
    "start": "413710",
    "end": "415450"
  },
  {
    "text": "just have a string of HTML code what we",
    "start": "415450",
    "end": "418420"
  },
  {
    "text": "can do is bind this to the inner HTML",
    "start": "418420",
    "end": "420660"
  },
  {
    "text": "property on a div this will render it as",
    "start": "420660",
    "end": "424150"
  },
  {
    "text": "actual HTML elements which is what we",
    "start": "424150",
    "end": "426490"
  },
  {
    "text": "want to display to the end-user but just",
    "start": "426490",
    "end": "429370"
  },
  {
    "text": "a quick warning you always want to make",
    "start": "429370",
    "end": "430660"
  },
  {
    "text": "sure that the source of the HTML comes",
    "start": "430660",
    "end": "432640"
  },
  {
    "text": "from a trusted location if users",
    "start": "432640",
    "end": "435430"
  },
  {
    "text": "generate this content you want to make",
    "start": "435430",
    "end": "436840"
  },
  {
    "text": "sure to sanitize it to avoid being",
    "start": "436840",
    "end": "439150"
  },
  {
    "text": "vulnerable to cross-site scripting you",
    "start": "439150",
    "end": "441280"
  },
  {
    "text": "can read more about this in the official",
    "start": "441280",
    "end": "442600"
  },
  {
    "text": "Docs if we go back into our angular app",
    "start": "442600",
    "end": "445240"
  },
  {
    "text": "you can now see that our links and our",
    "start": "445240",
    "end": "446770"
  },
  {
    "text": "headings are displaying like normal HTML",
    "start": "446770",
    "end": "449010"
  },
  {
    "text": "just like that we now have a powerful",
    "start": "449010",
    "end": "451570"
  },
  {
    "text": "content management system to organize",
    "start": "451570",
    "end": "453250"
  },
  {
    "text": "content in our progressive web app but I",
    "start": "453250",
    "end": "456010"
  },
  {
    "text": "did promise you one more thing and",
    "start": "456010",
    "end": "457240"
  },
  {
    "text": "that's sending push notifications",
    "start": "457240",
    "end": "458800"
  },
  {
    "text": "anytime new content is created in",
    "start": "458800",
    "end": "460840"
  },
  {
    "text": "content full I don't have time to show",
    "start": "460840",
    "end": "462880"
  },
  {
    "text": "you push notifications and to end but I",
    "start": "462880",
    "end": "464650"
  },
  {
    "text": "do have multiple lessons covering that",
    "start": "464650",
    "end": "466180"
  },
  {
    "text": "topic on angular firebase com what I am",
    "start": "466180",
    "end": "468820"
  },
  {
    "text": "going to show you is how to set up web",
    "start": "468820",
    "end": "470230"
  },
  {
    "text": "hooks in content full and then broadcast",
    "start": "470230",
    "end": "472140"
  },
  {
    "text": "notifications using firebase Cloud",
    "start": "472140",
    "end": "474460"
  },
  {
    "text": "messaging back in angular I have",
    "start": "474460",
    "end": "476950"
  },
  {
    "text": "firebase cloud functions initialized in",
    "start": "476950",
    "end": "479080"
  },
  {
    "text": "my project then I'm going to write a",
    "start": "479080",
    "end": "481180"
  },
  {
    "text": "function that uses the admin SDK we're",
    "start": "481180",
    "end": "484480"
  },
  {
    "text": "going to listen for web hooks from",
    "start": "484480",
    "end": "486280"
  },
  {
    "text": "contentful and when we receive one we're",
    "start": "486280",
    "end": "488590"
  },
  {
    "text": "going to parse it and then broadcast",
    "start": "488590",
    "end": "490330"
  },
  {
    "text": "messages out to a certain topic the web",
    "start": "490330",
    "end": "493540"
  },
  {
    "text": "hook is going to send us data whenever a",
    "start": "493540",
    "end": "495790"
  },
  {
    "text": "new lesson is published all of the",
    "start": "495790",
    "end": "498250"
  },
  {
    "text": "lesson details will be in the request",
    "start": "498250",
    "end": "500080"
  },
  {
    "text": "body so we can say request body fields",
    "start": "500080",
    "end": "502660"
  },
  {
    "text": "and the topic we want to send messages",
    "start": "502660",
    "end": "504280"
  },
  {
    "text": "to is lessons then we can use this data",
    "start": "504280",
    "end": "507790"
  },
  {
    "text": "to set the notification details so we'll",
    "start": "507790",
    "end": "510370"
  },
  {
    "text": "say a new lesson posted and then we'll",
    "start": "510370",
    "end": "512349"
  },
  {
    "text": "say angular firebase composted a new",
    "start": "512349",
    "end": "514539"
  },
  {
    "text": "lesson about whatever the lesson title",
    "start": "514540",
    "end": "516520"
  },
  {
    "text": "is and then we'll also add an icon to it",
    "start": "516520",
    "end": "519060"
  },
  {
    "text": "then we can call the firebase messaging",
    "start": "519060",
    "end": "521560"
  },
  {
    "text": "library and just call send a topic with",
    "start": "521560",
    "end": "524290"
  },
  {
    "text": "that notification payload if you lost at",
    "start": "524290",
    "end": "527260"
  },
  {
    "text": "this point make sure to check out some",
    "start": "527260",
    "end": "528580"
  },
  {
    "text": "of my firebase push notification videos",
    "start": "528580",
    "end": "530760"
  },
  {
    "text": "this is going to return a promise and if",
    "start": "530760",
    "end": "533740"
  },
  {
    "text": "it's successful then we can say",
    "start": "533740",
    "end": "535300"
  },
  {
    "text": "a successful response back to the",
    "start": "535300",
    "end": "537070"
  },
  {
    "text": "webhook if the message notifications",
    "start": "537070",
    "end": "540339"
  },
  {
    "text": "fail we can send an error response back",
    "start": "540339",
    "end": "542649"
  },
  {
    "text": "to content full of telling it to retry",
    "start": "542649",
    "end": "544540"
  },
  {
    "text": "the web hook if necessary and it's",
    "start": "544540",
    "end": "546790"
  },
  {
    "text": "really that simple all we have to do is",
    "start": "546790",
    "end": "548620"
  },
  {
    "text": "deploy the function then we'll go back",
    "start": "548620",
    "end": "550899"
  },
  {
    "text": "into content full and tell it when and",
    "start": "550899",
    "end": "553000"
  },
  {
    "text": "where to send the web hook after the",
    "start": "553000",
    "end": "555760"
  },
  {
    "text": "function deploy succeeds make sure to",
    "start": "555760",
    "end": "557560"
  },
  {
    "text": "copy and paste the URL that firebase",
    "start": "557560",
    "end": "559570"
  },
  {
    "text": "gives back to you then back in content",
    "start": "559570",
    "end": "562420"
  },
  {
    "text": "full you'll go into the space settings",
    "start": "562420",
    "end": "564220"
  },
  {
    "text": "and then to web hooks and then we'll",
    "start": "564220",
    "end": "566620"
  },
  {
    "text": "just give it a name of topic",
    "start": "566620",
    "end": "567760"
  },
  {
    "text": "notifications then copy and paste the",
    "start": "567760",
    "end": "570130"
  },
  {
    "text": "URL that firebase gave you back for that",
    "start": "570130",
    "end": "572170"
  },
  {
    "text": "cloud function then we only want to send",
    "start": "572170",
    "end": "575560"
  },
  {
    "text": "this web hook when new content is",
    "start": "575560",
    "end": "577300"
  },
  {
    "text": "published so we can do that by going",
    "start": "577300",
    "end": "579610"
  },
  {
    "text": "down to only selected events and then",
    "start": "579610",
    "end": "582130"
  },
  {
    "text": "click the box that intersects entry and",
    "start": "582130",
    "end": "584560"
  },
  {
    "text": "publish you can verify that the web hook",
    "start": "584560",
    "end": "587380"
  },
  {
    "text": "works by going back into the content tab",
    "start": "587380",
    "end": "589570"
  },
  {
    "text": "and then create a new piece of content",
    "start": "589570",
    "end": "591670"
  },
  {
    "text": "after that you can go back to the web",
    "start": "591670",
    "end": "594490"
  },
  {
    "text": "hooks screen and you should see a",
    "start": "594490",
    "end": "596170"
  },
  {
    "text": "successful response from the cloud",
    "start": "596170",
    "end": "597610"
  },
  {
    "text": "function it will show you the web hook",
    "start": "597610",
    "end": "599620"
  },
  {
    "text": "body that was sent by content full and",
    "start": "599620",
    "end": "601390"
  },
  {
    "text": "then show you the response that was",
    "start": "601390",
    "end": "603220"
  },
  {
    "text": "received from firebase that's it for",
    "start": "603220",
    "end": "607959"
  },
  {
    "text": "angular 5 with content pool if this",
    "start": "607959",
    "end": "609970"
  },
  {
    "text": "video helped you please like and",
    "start": "609970",
    "end": "611260"
  },
  {
    "text": "subscribe and if you want to learn more",
    "start": "611260",
    "end": "612850"
  },
  {
    "text": "advanced features of progressive Web",
    "start": "612850",
    "end": "614350"
  },
  {
    "text": "Apps consider becoming a pro subscriber",
    "start": "614350",
    "end": "616329"
  },
  {
    "text": "at angular firebase comm you'll get a",
    "start": "616329",
    "end": "618670"
  },
  {
    "text": "free copy of my book as well as one on",
    "start": "618670",
    "end": "620470"
  },
  {
    "text": "one project support thanks for watching",
    "start": "620470",
    "end": "622990"
  },
  {
    "text": "and I'll see you next time",
    "start": "622990",
    "end": "626310"
  },
  {
    "text": "[Music]",
    "start": "627930",
    "end": "632640"
  },
  {
    "text": "[Applause]",
    "start": "632640",
    "end": "633560"
  },
  {
    "text": "[Music]",
    "start": "633560",
    "end": "638050"
  }
]