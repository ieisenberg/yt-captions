[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "red green refactor imagine you're",
    "start": "160",
    "end": "2320"
  },
  {
    "text": "sitting in a technical interview for an",
    "start": "2320",
    "end": "4080"
  },
  {
    "text": "entry-level web developer job",
    "start": "4080",
    "end": "5600"
  },
  {
    "text": "and they ask you to implement a dynamic",
    "start": "5600",
    "end": "7600"
  },
  {
    "text": "time warping algorithm to measure the",
    "start": "7600",
    "end": "9200"
  },
  {
    "text": "similarity between two sequences in",
    "start": "9200",
    "end": "11040"
  },
  {
    "text": "logarithmic time",
    "start": "11040",
    "end": "12000"
  },
  {
    "text": "instead of freaking out and wondering",
    "start": "12000",
    "end": "13519"
  },
  {
    "text": "what this has to do with jquery you can",
    "start": "13519",
    "end": "15120"
  },
  {
    "text": "just say no problem",
    "start": "15120",
    "end": "16080"
  },
  {
    "text": "let me write a few test cases for that",
    "start": "16080",
    "end": "17680"
  },
  {
    "text": "first not only will that buy you some",
    "start": "17680",
    "end": "19119"
  },
  {
    "text": "time",
    "start": "19119",
    "end": "19520"
  },
  {
    "text": "but it also makes you look like you know",
    "start": "19520",
    "end": "20960"
  },
  {
    "text": "what you're doing test driven",
    "start": "20960",
    "end": "22160"
  },
  {
    "text": "development is a technique where you",
    "start": "22160",
    "end": "24000"
  },
  {
    "text": "describe the behavior of your code",
    "start": "24000",
    "end": "25519"
  },
  {
    "text": "before you go and implement it if you",
    "start": "25519",
    "end": "27119"
  },
  {
    "text": "trust the science",
    "start": "27119",
    "end": "27920"
  },
  {
    "text": "testing will help reduce bugs and",
    "start": "27920",
    "end": "29599"
  },
  {
    "text": "improve the maintainability of your code",
    "start": "29599",
    "end": "31039"
  },
  {
    "text": "base in the long run and if you're new",
    "start": "31039",
    "end": "32640"
  },
  {
    "text": "to programming",
    "start": "32640",
    "end": "33360"
  },
  {
    "text": "knowing how to test your code is one of",
    "start": "33360",
    "end": "35200"
  },
  {
    "text": "the most powerful ways to level up as a",
    "start": "35200",
    "end": "37120"
  },
  {
    "text": "developer not only is it fun but it will",
    "start": "37120",
    "end": "39120"
  },
  {
    "text": "also teach you about your code in",
    "start": "39120",
    "end": "40640"
  },
  {
    "text": "unexpected ways and make you much better",
    "start": "40640",
    "end": "42719"
  },
  {
    "text": "at debugging it today's video will teach",
    "start": "42719",
    "end": "44640"
  },
  {
    "text": "you everything you need to know to get",
    "start": "44640",
    "end": "46000"
  },
  {
    "text": "started with software testing as a",
    "start": "46000",
    "end": "47600"
  },
  {
    "text": "developer",
    "start": "47600",
    "end": "48239"
  },
  {
    "text": "we'll talk about a bunch of different",
    "start": "48239",
    "end": "49520"
  },
  {
    "text": "testing strategies from a high level",
    "start": "49520",
    "end": "51280"
  },
  {
    "text": "then take a hands-on approach by",
    "start": "51280",
    "end": "52879"
  },
  {
    "text": "implementing unit tests from scratch",
    "start": "52879",
    "end": "54640"
  },
  {
    "text": "with jest",
    "start": "54640",
    "end": "55440"
  },
  {
    "text": "and we'll also look at end-to-end",
    "start": "55440",
    "end": "56800"
  },
  {
    "text": "testing with a tool called cypress",
    "start": "56800",
    "end": "58719"
  },
  {
    "text": "but most importantly by the end of the",
    "start": "58719",
    "end": "60320"
  },
  {
    "text": "video you'll learn why testing is",
    "start": "60320",
    "end": "61840"
  },
  {
    "text": "valuable and how to make the decision",
    "start": "61840",
    "end": "63680"
  },
  {
    "text": "about whether or not you should test",
    "start": "63680",
    "end": "65040"
  },
  {
    "text": "something because it's a practice that",
    "start": "65040",
    "end": "66560"
  },
  {
    "text": "walks a very fine line between being",
    "start": "66560",
    "end": "68320"
  },
  {
    "text": "valuable and a complete waste of time",
    "start": "68320",
    "end": "70240"
  },
  {
    "text": "before we get started",
    "start": "70240",
    "end": "71280"
  },
  {
    "text": "make sure to hit the like button and",
    "start": "71280",
    "end": "72799"
  },
  {
    "text": "subscribe in the last video i explained",
    "start": "72799",
    "end": "74880"
  },
  {
    "start": "73000",
    "end": "127000"
  },
  {
    "text": "how software testing works",
    "start": "74880",
    "end": "76320"
  },
  {
    "text": "but if you missed it automated testing",
    "start": "76320",
    "end": "78240"
  },
  {
    "text": "is basically just a way to write code",
    "start": "78240",
    "end": "80320"
  },
  {
    "text": "that describes your requirements",
    "start": "80320",
    "end": "82159"
  },
  {
    "text": "and validates your main application code",
    "start": "82159",
    "end": "84560"
  },
  {
    "text": "now most developers i know and myself",
    "start": "84560",
    "end": "86400"
  },
  {
    "text": "included",
    "start": "86400",
    "end": "87119"
  },
  {
    "text": "generally don't start writing tests",
    "start": "87119",
    "end": "88640"
  },
  {
    "text": "until we have a working feature",
    "start": "88640",
    "end": "90320"
  },
  {
    "text": "or maybe we just don't write any tests",
    "start": "90320",
    "end": "92079"
  },
  {
    "text": "at all and that's especially true with",
    "start": "92079",
    "end": "93439"
  },
  {
    "text": "front-end development because ui",
    "start": "93439",
    "end": "94960"
  },
  {
    "text": "requirements tend to change frequently",
    "start": "94960",
    "end": "97119"
  },
  {
    "text": "but if you follow the principle of",
    "start": "97119",
    "end": "98640"
  },
  {
    "text": "test-driven development you'll write",
    "start": "98640",
    "end": "100240"
  },
  {
    "text": "your test",
    "start": "100240",
    "end": "100799"
  },
  {
    "text": "before you implement your actual code",
    "start": "100799",
    "end": "102880"
  },
  {
    "text": "and a common mantra",
    "start": "102880",
    "end": "104240"
  },
  {
    "text": "is red green refactor which means you",
    "start": "104240",
    "end": "106479"
  },
  {
    "text": "write a failing test first",
    "start": "106479",
    "end": "108240"
  },
  {
    "text": "red then you write some code to get it",
    "start": "108240",
    "end": "110240"
  },
  {
    "text": "passing green",
    "start": "110240",
    "end": "111439"
  },
  {
    "text": "then you go back and optimize or",
    "start": "111439",
    "end": "113280"
  },
  {
    "text": "refactor the code it's not always",
    "start": "113280",
    "end": "115040"
  },
  {
    "text": "practical to do this",
    "start": "115040",
    "end": "116079"
  },
  {
    "text": "but if you have a project with very",
    "start": "116079",
    "end": "117680"
  },
  {
    "text": "clear requirements you might find that",
    "start": "117680",
    "end": "119520"
  },
  {
    "text": "tdd",
    "start": "119520",
    "end": "120240"
  },
  {
    "text": "actually improves your productivity now",
    "start": "120240",
    "end": "122320"
  },
  {
    "text": "let's take a look at a bunch of",
    "start": "122320",
    "end": "123520"
  },
  {
    "text": "different testing strategies and see how",
    "start": "123520",
    "end": "125360"
  },
  {
    "text": "they add value to a code base",
    "start": "125360",
    "end": "127040"
  },
  {
    "start": "127000",
    "end": "220000"
  },
  {
    "text": "at the lowest level we have unit testing",
    "start": "127040",
    "end": "129360"
  },
  {
    "text": "where the goal is to validate the",
    "start": "129360",
    "end": "130720"
  },
  {
    "text": "behavior of individual functions",
    "start": "130720",
    "end": "132879"
  },
  {
    "text": "methods or just units of code we'll get",
    "start": "132879",
    "end": "135280"
  },
  {
    "text": "hands-on with unit testing in just a",
    "start": "135280",
    "end": "137040"
  },
  {
    "text": "minute",
    "start": "137040",
    "end": "137440"
  },
  {
    "text": "the next level up is integration testing",
    "start": "137440",
    "end": "139920"
  },
  {
    "text": "which involves testing multiple units of",
    "start": "139920",
    "end": "141840"
  },
  {
    "text": "code together for example",
    "start": "141840",
    "end": "143360"
  },
  {
    "text": "you might have a react component and a",
    "start": "143360",
    "end": "145280"
  },
  {
    "text": "hook to fetch something from a database",
    "start": "145280",
    "end": "147200"
  },
  {
    "text": "you can unit test each of these",
    "start": "147200",
    "end": "148640"
  },
  {
    "text": "individually but then have an",
    "start": "148640",
    "end": "150080"
  },
  {
    "text": "integration test to see how well they",
    "start": "150080",
    "end": "152000"
  },
  {
    "text": "work together",
    "start": "152000",
    "end": "152879"
  },
  {
    "text": "like is the component actually able to",
    "start": "152879",
    "end": "154720"
  },
  {
    "text": "use the hook to get the data that it",
    "start": "154720",
    "end": "156319"
  },
  {
    "text": "needs for the ui",
    "start": "156319",
    "end": "157440"
  },
  {
    "text": "from there we have end-to-end testing",
    "start": "157440",
    "end": "159200"
  },
  {
    "text": "which runs your app in a simulated",
    "start": "159200",
    "end": "161120"
  },
  {
    "text": "environment",
    "start": "161120",
    "end": "161840"
  },
  {
    "text": "and attempts to emulate actual user",
    "start": "161840",
    "end": "163840"
  },
  {
    "text": "behavior there's a really awesome tool",
    "start": "163840",
    "end": "165599"
  },
  {
    "text": "called cypress",
    "start": "165599",
    "end": "166560"
  },
  {
    "text": "that has a browser-based test runner",
    "start": "166560",
    "end": "168640"
  },
  {
    "text": "that allows you to program",
    "start": "168640",
    "end": "170000"
  },
  {
    "text": "tests where users click on buttons fill",
    "start": "170000",
    "end": "172239"
  },
  {
    "text": "out forms then assert that the actual",
    "start": "172239",
    "end": "174080"
  },
  {
    "text": "changes to the dom",
    "start": "174080",
    "end": "175200"
  },
  {
    "text": "or the ui are valid personally i find",
    "start": "175200",
    "end": "177680"
  },
  {
    "text": "end-to-end tests to be the most valuable",
    "start": "177680",
    "end": "179360"
  },
  {
    "text": "ones that i write",
    "start": "179360",
    "end": "180239"
  },
  {
    "text": "so make sure to stay tuned until the end",
    "start": "180239",
    "end": "181760"
  },
  {
    "text": "of this video to see cyprus in action in",
    "start": "181760",
    "end": "184080"
  },
  {
    "text": "my opinion these three testing",
    "start": "184080",
    "end": "185599"
  },
  {
    "text": "strategies are the most important ones",
    "start": "185599",
    "end": "187120"
  },
  {
    "text": "to know but there are a lot of other",
    "start": "187120",
    "end": "188400"
  },
  {
    "text": "terms that get thrown out there that you",
    "start": "188400",
    "end": "189760"
  },
  {
    "text": "may want to be familiar with",
    "start": "189760",
    "end": "191120"
  },
  {
    "text": "acceptance testing is a form of testing",
    "start": "191120",
    "end": "193280"
  },
  {
    "text": "that makes sure that the software meets",
    "start": "193280",
    "end": "195040"
  },
  {
    "text": "all of the clients requirements",
    "start": "195040",
    "end": "196879"
  },
  {
    "text": "then you have system testing to ensure",
    "start": "196879",
    "end": "198720"
  },
  {
    "text": "that everything works on",
    "start": "198720",
    "end": "200000"
  },
  {
    "text": "actual servers or hardware then you have",
    "start": "200000",
    "end": "202080"
  },
  {
    "text": "things like sanity or",
    "start": "202080",
    "end": "203519"
  },
  {
    "text": "smoke tests on a large application you",
    "start": "203519",
    "end": "205920"
  },
  {
    "text": "may have thousands of tests to run",
    "start": "205920",
    "end": "207599"
  },
  {
    "text": "and this can actually take a very long",
    "start": "207599",
    "end": "208959"
  },
  {
    "text": "time and delay everybody else's work",
    "start": "208959",
    "end": "211040"
  },
  {
    "text": "a smoke test runs a few of the most",
    "start": "211040",
    "end": "212720"
  },
  {
    "text": "important tests first to make sure the",
    "start": "212720",
    "end": "214239"
  },
  {
    "text": "app isn't on fire before proceeding with",
    "start": "214239",
    "end": "216239"
  },
  {
    "text": "the rest of the test suite",
    "start": "216239",
    "end": "217519"
  },
  {
    "text": "now at this point we've only looked at",
    "start": "217519",
    "end": "219120"
  },
  {
    "text": "functional testing but there are also",
    "start": "219120",
    "end": "221040"
  },
  {
    "start": "220000",
    "end": "233000"
  },
  {
    "text": "non-functional tests for things like",
    "start": "221040",
    "end": "222799"
  },
  {
    "text": "performance usability",
    "start": "222799",
    "end": "224319"
  },
  {
    "text": "and security you'll often hear terms",
    "start": "224319",
    "end": "226239"
  },
  {
    "text": "like stress testing",
    "start": "226239",
    "end": "227519"
  },
  {
    "text": "or failover testing which are used to",
    "start": "227519",
    "end": "229680"
  },
  {
    "text": "test the capabilities of the",
    "start": "229680",
    "end": "231120"
  },
  {
    "text": "infrastructure as opposed to the code",
    "start": "231120",
    "end": "233120"
  },
  {
    "start": "233000",
    "end": "252000"
  },
  {
    "text": "itself",
    "start": "233120",
    "end": "233840"
  },
  {
    "text": "now that you know what all this fancy",
    "start": "233840",
    "end": "235280"
  },
  {
    "text": "testing jargon means let's get our hands",
    "start": "235280",
    "end": "237360"
  },
  {
    "text": "dirty in javascript by pretending that",
    "start": "237360",
    "end": "239360"
  },
  {
    "text": "we're in an actual technical interview",
    "start": "239360",
    "end": "241280"
  },
  {
    "text": "we're required to implement a stack data",
    "start": "241280",
    "end": "243599"
  },
  {
    "text": "structure where the last item in",
    "start": "243599",
    "end": "245599"
  },
  {
    "text": "is the first item out it's very similar",
    "start": "245599",
    "end": "247680"
  },
  {
    "text": "to an array",
    "start": "247680",
    "end": "248720"
  },
  {
    "text": "but we have to implement it without",
    "start": "248720",
    "end": "250560"
  },
  {
    "text": "using a javascript array",
    "start": "250560",
    "end": "252319"
  },
  {
    "start": "252000",
    "end": "364000"
  },
  {
    "text": "now before we can start we need to",
    "start": "252319",
    "end": "253920"
  },
  {
    "text": "initialize a project and keep in mind",
    "start": "253920",
    "end": "255920"
  },
  {
    "text": "that you can find the source code for",
    "start": "255920",
    "end": "257280"
  },
  {
    "text": "this on github",
    "start": "257280",
    "end": "258320"
  },
  {
    "text": "i'm using veet by running the npm init",
    "start": "258320",
    "end": "261280"
  },
  {
    "text": "vjs",
    "start": "261280",
    "end": "262160"
  },
  {
    "text": "slash app command then selecting the",
    "start": "262160",
    "end": "264560"
  },
  {
    "text": "vanilla javascript option",
    "start": "264560",
    "end": "266240"
  },
  {
    "text": "that gives us a simple project to get",
    "start": "266240",
    "end": "268000"
  },
  {
    "text": "started in then i'll add the jest",
    "start": "268000",
    "end": "269919"
  },
  {
    "text": "testing framework to it by running npm",
    "start": "269919",
    "end": "272320"
  },
  {
    "text": "install jest which itself will be",
    "start": "272320",
    "end": "274720"
  },
  {
    "text": "looking for any files in your project",
    "start": "274720",
    "end": "276720"
  },
  {
    "text": "that end in dot test.js let's go ahead",
    "start": "276720",
    "end": "279600"
  },
  {
    "text": "and create a test directory",
    "start": "279600",
    "end": "281040"
  },
  {
    "text": "then add a testing file to it to keep",
    "start": "281040",
    "end": "283120"
  },
  {
    "text": "things simple i'm going to implement our",
    "start": "283120",
    "end": "285040"
  },
  {
    "text": "code and also test it",
    "start": "285040",
    "end": "286639"
  },
  {
    "text": "in the stack.test.js file now to run the",
    "start": "286639",
    "end": "289919"
  },
  {
    "text": "code in this file",
    "start": "289919",
    "end": "290880"
  },
  {
    "text": "we need to execute the js testrunner we",
    "start": "290880",
    "end": "293360"
  },
  {
    "text": "can do that by going to our package.json",
    "start": "293360",
    "end": "295840"
  },
  {
    "text": "and setting up a new npm script called",
    "start": "295840",
    "end": "298240"
  },
  {
    "text": "test",
    "start": "298240",
    "end": "298800"
  },
  {
    "text": "that runs the jess command in addition",
    "start": "298800",
    "end": "301120"
  },
  {
    "text": "i'll add the watch all command",
    "start": "301120",
    "end": "302720"
  },
  {
    "text": "to have just watch our code in the",
    "start": "302720",
    "end": "304400"
  },
  {
    "text": "background and rerun the test anytime it",
    "start": "304400",
    "end": "306800"
  },
  {
    "text": "changes",
    "start": "306800",
    "end": "307360"
  },
  {
    "text": "and also the verbose flag to add some",
    "start": "307360",
    "end": "309360"
  },
  {
    "text": "extra output to the terminal",
    "start": "309360",
    "end": "311120"
  },
  {
    "text": "go ahead and run npm test from the",
    "start": "311120",
    "end": "313120"
  },
  {
    "text": "command line and you should get your",
    "start": "313120",
    "end": "314960"
  },
  {
    "text": "first failing test",
    "start": "314960",
    "end": "316160"
  },
  {
    "text": "because it's detecting that file but we",
    "start": "316160",
    "end": "317919"
  },
  {
    "text": "haven't actually written any code there",
    "start": "317919",
    "end": "319520"
  },
  {
    "text": "yet",
    "start": "319520",
    "end": "320080"
  },
  {
    "text": "one other optional but highly",
    "start": "320080",
    "end": "321520"
  },
  {
    "text": "recommended thing we can do here is add",
    "start": "321520",
    "end": "323600"
  },
  {
    "text": "types to the project",
    "start": "323600",
    "end": "324800"
  },
  {
    "text": "to give us intellisense for all the",
    "start": "324800",
    "end": "326639"
  },
  {
    "text": "matchers built into jest",
    "start": "326639",
    "end": "328160"
  },
  {
    "text": "install the types using npm then create",
    "start": "328160",
    "end": "330800"
  },
  {
    "text": "a jsconfig.json file",
    "start": "330800",
    "end": "333360"
  },
  {
    "text": "that has a type acquisition property for",
    "start": "333360",
    "end": "335759"
  },
  {
    "text": "jest this will allow vs code to provide",
    "start": "335759",
    "end": "337840"
  },
  {
    "text": "intellisense for everything built into",
    "start": "337840",
    "end": "339759"
  },
  {
    "text": "jest making your life way easier",
    "start": "339759",
    "end": "341840"
  },
  {
    "text": "one other random pro tip i'll throw out",
    "start": "341840",
    "end": "343520"
  },
  {
    "text": "there is that you may also want to",
    "start": "343520",
    "end": "345360"
  },
  {
    "text": "install the wallaby plugin it's a paid",
    "start": "345360",
    "end": "347440"
  },
  {
    "text": "vs code extension with a free trial",
    "start": "347440",
    "end": "349600"
  },
  {
    "text": "but it will tell you whether or not your",
    "start": "349600",
    "end": "350960"
  },
  {
    "text": "tests are passing directly in the editor",
    "start": "350960",
    "end": "353440"
  },
  {
    "text": "without having to look at the terminal",
    "start": "353440",
    "end": "355120"
  },
  {
    "text": "and that can give you a really nice",
    "start": "355120",
    "end": "356400"
  },
  {
    "text": "productivity boost",
    "start": "356400",
    "end": "357520"
  },
  {
    "text": "i'm going to use the terminal in this",
    "start": "357520",
    "end": "358880"
  },
  {
    "text": "video but wallaby is nice enough to",
    "start": "358880",
    "end": "360560"
  },
  {
    "text": "provide us with a discount so feel free",
    "start": "360560",
    "end": "362479"
  },
  {
    "text": "to check that out in the description",
    "start": "362479",
    "end": "363919"
  },
  {
    "text": "below",
    "start": "363919",
    "end": "364479"
  },
  {
    "start": "364000",
    "end": "545000"
  },
  {
    "text": "and now we're ready to proceed with our",
    "start": "364479",
    "end": "366160"
  },
  {
    "text": "interview the first thing i'll do",
    "start": "366160",
    "end": "367759"
  },
  {
    "text": "is use the describe function to describe",
    "start": "367759",
    "end": "370000"
  },
  {
    "text": "the thing it is that i'm testing which",
    "start": "370000",
    "end": "371680"
  },
  {
    "text": "in this case is the stack",
    "start": "371680",
    "end": "373280"
  },
  {
    "text": "it takes a callback function as the",
    "start": "373280",
    "end": "375039"
  },
  {
    "text": "second argument inside of which we can",
    "start": "375039",
    "end": "377120"
  },
  {
    "text": "define multiple individual tests by",
    "start": "377120",
    "end": "379120"
  },
  {
    "text": "using the test function",
    "start": "379120",
    "end": "380400"
  },
  {
    "text": "or it both of which do the exact same",
    "start": "380400",
    "end": "382720"
  },
  {
    "text": "thing we'll create a very simple test",
    "start": "382720",
    "end": "384560"
  },
  {
    "text": "suite here with only three requirements",
    "start": "384560",
    "end": "386639"
  },
  {
    "text": "we'll want to make sure that our stack",
    "start": "386639",
    "end": "388319"
  },
  {
    "text": "is created empty",
    "start": "388319",
    "end": "389680"
  },
  {
    "text": "that it can push items to the top and it",
    "start": "389680",
    "end": "391680"
  },
  {
    "text": "can also pop",
    "start": "391680",
    "end": "392720"
  },
  {
    "text": "or remove items from the top at this",
    "start": "392720",
    "end": "394639"
  },
  {
    "text": "point if we go ahead and save the file",
    "start": "394639",
    "end": "396240"
  },
  {
    "text": "we should get a failing test suite",
    "start": "396240",
    "end": "398000"
  },
  {
    "text": "because we've only described our",
    "start": "398000",
    "end": "399360"
  },
  {
    "text": "requirements and haven't actually",
    "start": "399360",
    "end": "400960"
  },
  {
    "text": "implemented any testing code yet",
    "start": "400960",
    "end": "402960"
  },
  {
    "text": "in some cases you may want to hold off",
    "start": "402960",
    "end": "404800"
  },
  {
    "text": "on the test implementation in which case",
    "start": "404800",
    "end": "406800"
  },
  {
    "text": "you can use the to-do method",
    "start": "406800",
    "end": "408240"
  },
  {
    "text": "to make the test pass while you figure",
    "start": "408240",
    "end": "410080"
  },
  {
    "text": "things out now let's go ahead and",
    "start": "410080",
    "end": "411759"
  },
  {
    "text": "implement our first test",
    "start": "411759",
    "end": "413039"
  },
  {
    "text": "the main goal of the first test is to",
    "start": "413039",
    "end": "414880"
  },
  {
    "text": "ensure that our stack can be",
    "start": "414880",
    "end": "416240"
  },
  {
    "text": "instantiated with a valid state",
    "start": "416240",
    "end": "418160"
  },
  {
    "text": "let's go ahead and instantiate a class",
    "start": "418160",
    "end": "420080"
  },
  {
    "text": "that doesn't exist to represent the",
    "start": "420080",
    "end": "421919"
  },
  {
    "text": "object that we want to test",
    "start": "421919",
    "end": "423440"
  },
  {
    "text": "from there we'll use expect to write an",
    "start": "423440",
    "end": "425680"
  },
  {
    "text": "expectation",
    "start": "425680",
    "end": "426479"
  },
  {
    "text": "to make sure that our code does what is",
    "start": "426479",
    "end": "428240"
  },
  {
    "text": "expected it should have a top property",
    "start": "428240",
    "end": "430639"
  },
  {
    "text": "that represents the index",
    "start": "430639",
    "end": "432240"
  },
  {
    "text": "of the item at the top of the stack",
    "start": "432240",
    "end": "434560"
  },
  {
    "text": "because it's empty when it's first",
    "start": "434560",
    "end": "435840"
  },
  {
    "text": "created",
    "start": "435840",
    "end": "436560"
  },
  {
    "text": "the value should be negative 1. 2b is a",
    "start": "436560",
    "end": "439520"
  },
  {
    "text": "matcher that will test the actual value",
    "start": "439520",
    "end": "441840"
  },
  {
    "text": "to the correct value now here's where",
    "start": "441840",
    "end": "443759"
  },
  {
    "text": "test driven development starts to get",
    "start": "443759",
    "end": "445360"
  },
  {
    "text": "really cool",
    "start": "445360",
    "end": "446240"
  },
  {
    "text": "go ahead and save the file and you'll",
    "start": "446240",
    "end": "447759"
  },
  {
    "text": "notice that we get a failing test",
    "start": "447759",
    "end": "449599"
  },
  {
    "text": "if we look at the output closely it'll",
    "start": "449599",
    "end": "451520"
  },
  {
    "text": "tell us exactly which line of code",
    "start": "451520",
    "end": "453280"
  },
  {
    "text": "failed",
    "start": "453280",
    "end": "453759"
  },
  {
    "text": "and why it says reference error stack is",
    "start": "453759",
    "end": "456400"
  },
  {
    "text": "not defined",
    "start": "456400",
    "end": "457199"
  },
  {
    "text": "we can use that feedback as a starting",
    "start": "457199",
    "end": "459120"
  },
  {
    "text": "point to start implementing our code to",
    "start": "459120",
    "end": "461120"
  },
  {
    "text": "address the error",
    "start": "461120",
    "end": "462000"
  },
  {
    "text": "we'll first need to define a class",
    "start": "462000",
    "end": "463680"
  },
  {
    "text": "called stack go ahead and define it",
    "start": "463680",
    "end": "465840"
  },
  {
    "text": "then save the file then you'll notice",
    "start": "465840",
    "end": "467680"
  },
  {
    "text": "that we still get a failing test",
    "start": "467680",
    "end": "469680"
  },
  {
    "text": "but this time it goes down to the",
    "start": "469680",
    "end": "471440"
  },
  {
    "text": "expectation telling us that it expected",
    "start": "471440",
    "end": "473759"
  },
  {
    "text": "negative one",
    "start": "473759",
    "end": "474800"
  },
  {
    "text": "but received undefined as the return",
    "start": "474800",
    "end": "477039"
  },
  {
    "text": "value to address that issue",
    "start": "477039",
    "end": "479039"
  },
  {
    "text": "we need to add a constructor to the",
    "start": "479039",
    "end": "480560"
  },
  {
    "text": "class to initialize it with the proper",
    "start": "480560",
    "end": "482479"
  },
  {
    "text": "data",
    "start": "482479",
    "end": "483120"
  },
  {
    "text": "let's give it a top value of 0 and then",
    "start": "483120",
    "end": "485360"
  },
  {
    "text": "we'll also define an items property here",
    "start": "485360",
    "end": "487759"
  },
  {
    "text": "to represent the stack itself as an",
    "start": "487759",
    "end": "489840"
  },
  {
    "text": "empty object because remember we're not",
    "start": "489840",
    "end": "491840"
  },
  {
    "text": "allowed to use arrays in this problem",
    "start": "491840",
    "end": "493520"
  },
  {
    "text": "go ahead and save the file and now we",
    "start": "493520",
    "end": "495520"
  },
  {
    "text": "finally get a passing test",
    "start": "495520",
    "end": "497280"
  },
  {
    "text": "you can also add multiple expectations",
    "start": "497280",
    "end": "499440"
  },
  {
    "text": "to a single test",
    "start": "499440",
    "end": "500879"
  },
  {
    "text": "let's go ahead and test the stack items",
    "start": "500879",
    "end": "503120"
  },
  {
    "text": "property to make sure that it's an empty",
    "start": "503120",
    "end": "505520"
  },
  {
    "text": "object",
    "start": "505520",
    "end": "506240"
  },
  {
    "text": "but when we do that you'll notice that",
    "start": "506240",
    "end": "507919"
  },
  {
    "text": "we now get a failing test",
    "start": "507919",
    "end": "509599"
  },
  {
    "text": "even though we're definitely comparing",
    "start": "509599",
    "end": "511120"
  },
  {
    "text": "an empty object to an empty object",
    "start": "511120",
    "end": "513360"
  },
  {
    "text": "and it's actually not an issue with our",
    "start": "513360",
    "end": "514800"
  },
  {
    "text": "implementation but an issue with the",
    "start": "514800",
    "end": "516640"
  },
  {
    "text": "test itself",
    "start": "516640",
    "end": "517760"
  },
  {
    "text": "the 2b matcher checks for referential",
    "start": "517760",
    "end": "520240"
  },
  {
    "text": "equality between two objects in this",
    "start": "520240",
    "end": "522240"
  },
  {
    "text": "case",
    "start": "522240",
    "end": "522719"
  },
  {
    "text": "both objects are empty but they're two",
    "start": "522719",
    "end": "524720"
  },
  {
    "text": "different objects in memory which is",
    "start": "524720",
    "end": "526480"
  },
  {
    "text": "causing the test to fail",
    "start": "526480",
    "end": "527839"
  },
  {
    "text": "what we need to do here is use a",
    "start": "527839",
    "end": "529600"
  },
  {
    "text": "different matcher the two equal matcher",
    "start": "529600",
    "end": "531839"
  },
  {
    "text": "would be a better choice",
    "start": "531839",
    "end": "533120"
  },
  {
    "text": "because it checks for value equality",
    "start": "533120",
    "end": "535120"
  },
  {
    "text": "instead of the object reference itself",
    "start": "535120",
    "end": "537120"
  },
  {
    "text": "an important takeaway here is that it's",
    "start": "537120",
    "end": "538880"
  },
  {
    "text": "not always your main application code",
    "start": "538880",
    "end": "540640"
  },
  {
    "text": "that's the problem it might be a bug in",
    "start": "540640",
    "end": "542320"
  },
  {
    "text": "the test itself",
    "start": "542320",
    "end": "543279"
  },
  {
    "text": "and unfortunately we don't write tests",
    "start": "543279",
    "end": "545279"
  },
  {
    "start": "545000",
    "end": "629000"
  },
  {
    "text": "for our tests now let's move on to our",
    "start": "545279",
    "end": "547200"
  },
  {
    "text": "second test to see if a stack can push",
    "start": "547200",
    "end": "549519"
  },
  {
    "text": "an item to the top",
    "start": "549519",
    "end": "550720"
  },
  {
    "text": "what you'll notice is that the first",
    "start": "550720",
    "end": "552080"
  },
  {
    "text": "thing i'm doing is initializing a new",
    "start": "552080",
    "end": "554080"
  },
  {
    "text": "stack",
    "start": "554080",
    "end": "554640"
  },
  {
    "text": "just like we did in the previous test",
    "start": "554640",
    "end": "556720"
  },
  {
    "text": "but there's actually a more efficient",
    "start": "556720",
    "end": "558320"
  },
  {
    "text": "way to do this",
    "start": "558320",
    "end": "559200"
  },
  {
    "text": "jest has a set of helper functions for",
    "start": "559200",
    "end": "561360"
  },
  {
    "text": "setup and tear down",
    "start": "561360",
    "end": "562560"
  },
  {
    "text": "these are really useful because code",
    "start": "562560",
    "end": "564080"
  },
  {
    "text": "duplication can get really bad inside of",
    "start": "564080",
    "end": "566080"
  },
  {
    "text": "a test suite",
    "start": "566080",
    "end": "566800"
  },
  {
    "text": "for example we might set up a global",
    "start": "566800",
    "end": "568800"
  },
  {
    "text": "variable for the stack",
    "start": "568800",
    "end": "570320"
  },
  {
    "text": "then use the before each hook to",
    "start": "570320",
    "end": "572320"
  },
  {
    "text": "re-initialize it before each new test",
    "start": "572320",
    "end": "574640"
  },
  {
    "text": "that'll give us an empty object to work",
    "start": "574640",
    "end": "576320"
  },
  {
    "text": "with before each test so we don't have",
    "start": "576320",
    "end": "578000"
  },
  {
    "text": "to set it up manually in each one",
    "start": "578000",
    "end": "580080"
  },
  {
    "text": "now going into our second test we'll",
    "start": "580080",
    "end": "581839"
  },
  {
    "text": "call the push method with an item",
    "start": "581839",
    "end": "584080"
  },
  {
    "text": "and then we'll expect the top value to",
    "start": "584080",
    "end": "586080"
  },
  {
    "text": "be incremented by one",
    "start": "586080",
    "end": "587760"
  },
  {
    "text": "and we'll add a peak property to get the",
    "start": "587760",
    "end": "589680"
  },
  {
    "text": "top of the stack",
    "start": "589680",
    "end": "591120"
  },
  {
    "text": "and we'll expect that value to equal the",
    "start": "591120",
    "end": "593279"
  },
  {
    "text": "value that we just pushed to it that'll",
    "start": "593279",
    "end": "594800"
  },
  {
    "text": "give us a failing test",
    "start": "594800",
    "end": "596080"
  },
  {
    "text": "and then we can once again go into our",
    "start": "596080",
    "end": "597519"
  },
  {
    "text": "source code and start implementing",
    "start": "597519",
    "end": "599360"
  },
  {
    "text": "the features needed to get to a passing",
    "start": "599360",
    "end": "601440"
  },
  {
    "text": "test in general what you'll want to do",
    "start": "601440",
    "end": "603200"
  },
  {
    "text": "here is try to get to a passing test as",
    "start": "603200",
    "end": "605519"
  },
  {
    "text": "soon as possible",
    "start": "605519",
    "end": "606560"
  },
  {
    "text": "once you have that passing test you can",
    "start": "606560",
    "end": "608480"
  },
  {
    "text": "then go back and refactor",
    "start": "608480",
    "end": "610160"
  },
  {
    "text": "and look for optimizations to make while",
    "start": "610160",
    "end": "612240"
  },
  {
    "text": "trying to keep your test in the green",
    "start": "612240",
    "end": "614079"
  },
  {
    "text": "there's just something very",
    "start": "614079",
    "end": "615200"
  },
  {
    "text": "psychologically satisfying when you go",
    "start": "615200",
    "end": "617200"
  },
  {
    "text": "from a red failing test to a green",
    "start": "617200",
    "end": "618959"
  },
  {
    "text": "passing test",
    "start": "618959",
    "end": "619839"
  },
  {
    "text": "my challenge to you is to now implement",
    "start": "619839",
    "end": "622000"
  },
  {
    "text": "the final requirement in the test suite",
    "start": "622000",
    "end": "624079"
  },
  {
    "text": "try to use test driven development to",
    "start": "624079",
    "end": "625920"
  },
  {
    "text": "implement a feature that can pop an item",
    "start": "625920",
    "end": "628079"
  },
  {
    "text": "off of the stack",
    "start": "628079",
    "end": "629040"
  },
  {
    "start": "629000",
    "end": "657000"
  },
  {
    "text": "speaking of psychologically satisfying",
    "start": "629040",
    "end": "631120"
  },
  {
    "text": "another thing you can do is run a code",
    "start": "631120",
    "end": "633120"
  },
  {
    "text": "coverage report",
    "start": "633120",
    "end": "634079"
  },
  {
    "text": "which will give you an idea of how well",
    "start": "634079",
    "end": "635760"
  },
  {
    "text": "your tests cover your actual source code",
    "start": "635760",
    "end": "638160"
  },
  {
    "text": "back in the package.json add the",
    "start": "638160",
    "end": "639920"
  },
  {
    "text": "coverage flag to the jest command",
    "start": "639920",
    "end": "641920"
  },
  {
    "text": "rerun it then you'll get this report",
    "start": "641920",
    "end": "643600"
  },
  {
    "text": "generated that tells you the percentage",
    "start": "643600",
    "end": "645440"
  },
  {
    "text": "of code",
    "start": "645440",
    "end": "646079"
  },
  {
    "text": "covered by your test suite that can be",
    "start": "646079",
    "end": "647760"
  },
  {
    "text": "useful at times but mostly it just gives",
    "start": "647760",
    "end": "649760"
  },
  {
    "text": "you a false sense of security",
    "start": "649760",
    "end": "651279"
  },
  {
    "text": "100 code coverage doesn't mean that you",
    "start": "651279",
    "end": "653200"
  },
  {
    "text": "have a good test suite but it may be a",
    "start": "653200",
    "end": "654880"
  },
  {
    "text": "good thing to show your product manager",
    "start": "654880",
    "end": "656640"
  },
  {
    "text": "or client",
    "start": "656640",
    "end": "657279"
  },
  {
    "start": "657000",
    "end": "775000"
  },
  {
    "text": "what i want to show you next is a lot",
    "start": "657279",
    "end": "658800"
  },
  {
    "text": "more fun and interesting and that is",
    "start": "658800",
    "end": "660480"
  },
  {
    "text": "end-to-end testing",
    "start": "660480",
    "end": "661680"
  },
  {
    "text": "unlike a unit test which is designed to",
    "start": "661680",
    "end": "663519"
  },
  {
    "text": "be fast and simple",
    "start": "663519",
    "end": "664720"
  },
  {
    "text": "an end-to-end test is very long and",
    "start": "664720",
    "end": "666959"
  },
  {
    "text": "complex and takes a while to run",
    "start": "666959",
    "end": "668880"
  },
  {
    "text": "because it simulates actual user",
    "start": "668880",
    "end": "670560"
  },
  {
    "text": "behaviors in the browser",
    "start": "670560",
    "end": "672000"
  },
  {
    "text": "we could write our end-to-end test with",
    "start": "672000",
    "end": "673519"
  },
  {
    "text": "jest utilizing the puppeteer package",
    "start": "673519",
    "end": "675839"
  },
  {
    "text": "however my favorite way to write",
    "start": "675839",
    "end": "677200"
  },
  {
    "text": "end-to-end tests is with a tool called",
    "start": "677200",
    "end": "678880"
  },
  {
    "text": "cypress",
    "start": "678880",
    "end": "679680"
  },
  {
    "text": "install it by running npm install",
    "start": "679680",
    "end": "681600"
  },
  {
    "text": "cypress and this will take a few minutes",
    "start": "681600",
    "end": "683760"
  },
  {
    "text": "because it's downloading an actual",
    "start": "683760",
    "end": "685600"
  },
  {
    "text": "browser that will run your tests",
    "start": "685600",
    "end": "687680"
  },
  {
    "text": "in a real world environment when the",
    "start": "687680",
    "end": "689600"
  },
  {
    "text": "installation is complete",
    "start": "689600",
    "end": "690800"
  },
  {
    "text": "we can go into our package.json and add",
    "start": "690800",
    "end": "693040"
  },
  {
    "text": "an end-to-end script",
    "start": "693040",
    "end": "694399"
  },
  {
    "text": "that runs the cypress open command that",
    "start": "694399",
    "end": "696800"
  },
  {
    "text": "should open up the testrunner which",
    "start": "696800",
    "end": "698480"
  },
  {
    "text": "comes with a bunch of built-in examples",
    "start": "698480",
    "end": "700480"
  },
  {
    "text": "if you click on the actions example",
    "start": "700480",
    "end": "702240"
  },
  {
    "text": "you'll notice it starts running a test",
    "start": "702240",
    "end": "704000"
  },
  {
    "text": "suite by filling out a form",
    "start": "704000",
    "end": "705600"
  },
  {
    "text": "clicking on buttons and doing all kinds",
    "start": "705600",
    "end": "707519"
  },
  {
    "text": "of other stuff when i use cypress for my",
    "start": "707519",
    "end": "709519"
  },
  {
    "text": "own projects i use the firebase emulator",
    "start": "709519",
    "end": "712079"
  },
  {
    "text": "to create a mock database and mock user",
    "start": "712079",
    "end": "714320"
  },
  {
    "text": "authentication",
    "start": "714320",
    "end": "715200"
  },
  {
    "text": "which allows me to test my apps",
    "start": "715200",
    "end": "716720"
  },
  {
    "text": "efficiently in an environment that is",
    "start": "716720",
    "end": "718560"
  },
  {
    "text": "very similar to how they'll look in",
    "start": "718560",
    "end": "720079"
  },
  {
    "text": "production",
    "start": "720079",
    "end": "720800"
  },
  {
    "text": "now if we go back into our source code",
    "start": "720800",
    "end": "722480"
  },
  {
    "text": "you'll notice that a cypress directory",
    "start": "722480",
    "end": "724399"
  },
  {
    "text": "was created",
    "start": "724399",
    "end": "725200"
  },
  {
    "text": "we can find the source code for this",
    "start": "725200",
    "end": "726959"
  },
  {
    "text": "example test by going to the integration",
    "start": "726959",
    "end": "729200"
  },
  {
    "text": "folder",
    "start": "729200",
    "end": "729760"
  },
  {
    "text": "to the actions.spec file and just like",
    "start": "729760",
    "end": "732800"
  },
  {
    "text": "in jest",
    "start": "732800",
    "end": "733440"
  },
  {
    "text": "we first define a test suite then inside",
    "start": "733440",
    "end": "735680"
  },
  {
    "text": "of it we have multiple tests with the it",
    "start": "735680",
    "end": "737839"
  },
  {
    "text": "keyword",
    "start": "737839",
    "end": "738560"
  },
  {
    "text": "now the cool thing about cypress is that",
    "start": "738560",
    "end": "740320"
  },
  {
    "text": "it makes it very easy",
    "start": "740320",
    "end": "741600"
  },
  {
    "text": "to code these automated interactions",
    "start": "741600",
    "end": "743360"
  },
  {
    "text": "with your website it has a jquery like",
    "start": "743360",
    "end": "745680"
  },
  {
    "text": "syntax",
    "start": "745680",
    "end": "746320"
  },
  {
    "text": "that allows you to match a dom element",
    "start": "746320",
    "end": "748560"
  },
  {
    "text": "like say a form input",
    "start": "748560",
    "end": "750000"
  },
  {
    "text": "then type into it with whatever text you",
    "start": "750000",
    "end": "751920"
  },
  {
    "text": "provide you can then run expectations",
    "start": "751920",
    "end": "753839"
  },
  {
    "text": "with should",
    "start": "753839",
    "end": "754480"
  },
  {
    "text": "to ensure that it has the proper value",
    "start": "754480",
    "end": "756560"
  },
  {
    "text": "css style",
    "start": "756560",
    "end": "757600"
  },
  {
    "text": "or whatever else is important in the ui",
    "start": "757600",
    "end": "759680"
  },
  {
    "text": "it's a really awesome tool and i'm not",
    "start": "759680",
    "end": "761200"
  },
  {
    "text": "sponsored by them in any way",
    "start": "761200",
    "end": "762560"
  },
  {
    "text": "but i'm going to go ahead and wrap",
    "start": "762560",
    "end": "763839"
  },
  {
    "text": "things up there if this video helped you",
    "start": "763839",
    "end": "765839"
  },
  {
    "text": "please like and subscribe and consider",
    "start": "765839",
    "end": "767519"
  },
  {
    "text": "becoming a pro member to get access to",
    "start": "767519",
    "end": "769680"
  },
  {
    "text": "more advanced content thanks for",
    "start": "769680",
    "end": "771200"
  },
  {
    "text": "watching and i will see you in the next",
    "start": "771200",
    "end": "773279"
  },
  {
    "text": "one",
    "start": "773279",
    "end": "776000"
  }
]