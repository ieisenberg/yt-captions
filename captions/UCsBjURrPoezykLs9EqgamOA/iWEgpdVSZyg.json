[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "welcome to my top 10 firebase tips",
    "start": "30",
    "end": "2040"
  },
  {
    "text": "welcome to my top 25 firebase tips nope",
    "start": "2040",
    "end": "5819"
  },
  {
    "text": "welcome to my top 100 firebase tips I've",
    "start": "5819",
    "end": "8400"
  },
  {
    "text": "been working with firebase for several",
    "start": "8400",
    "end": "10019"
  },
  {
    "text": "years now I've made plenty of mistakes",
    "start": "10019",
    "end": "11400"
  },
  {
    "text": "along the way but I've also uncovered",
    "start": "11400",
    "end": "13200"
  },
  {
    "text": "some secrets that you may not know about",
    "start": "13200",
    "end": "14820"
  },
  {
    "text": "so hopefully this video makes your",
    "start": "14820",
    "end": "16470"
  },
  {
    "text": "experience with firebase 100 times",
    "start": "16470",
    "end": "18119"
  },
  {
    "text": "easier if you're new here like and",
    "start": "18119",
    "end": "19710"
  },
  {
    "text": "subscribe and if you're serious about",
    "start": "19710",
    "end": "21090"
  },
  {
    "text": "building an app with firebase consider",
    "start": "21090",
    "end": "22740"
  },
  {
    "text": "becoming a pro member at fire ship item",
    "start": "22740",
    "end": "24930"
  },
  {
    "text": "you'll get access to full project",
    "start": "24930",
    "end": "26279"
  },
  {
    "text": "courses and a free t-shirt if you sign",
    "start": "26279",
    "end": "28560"
  },
  {
    "text": "up for life",
    "start": "28560",
    "end": "29279"
  },
  {
    "text": "or you can get a free t-shirt by leaving",
    "start": "29279",
    "end": "30960"
  },
  {
    "text": "the best firebase tip in the comments",
    "start": "30960",
    "end": "32640"
  },
  {
    "text": "below the first thing you'll need is a",
    "start": "32640",
    "end": "34290"
  },
  {
    "start": "33000",
    "end": "113000"
  },
  {
    "text": "firebase project if you're building a",
    "start": "34290",
    "end": "36149"
  },
  {
    "text": "serious app create two fire based",
    "start": "36149",
    "end": "37950"
  },
  {
    "text": "projects one for development and one for",
    "start": "37950",
    "end": "39989"
  },
  {
    "text": "production this gives you a sandbox for",
    "start": "39989",
    "end": "41910"
  },
  {
    "text": "testing and experimenting and you can",
    "start": "41910",
    "end": "43890"
  },
  {
    "text": "keep your customer data pristine in the",
    "start": "43890",
    "end": "45690"
  },
  {
    "text": "production project in your production",
    "start": "45690",
    "end": "47219"
  },
  {
    "text": "project link Google Analytics firebase",
    "start": "47219",
    "end": "49710"
  },
  {
    "text": "can automatically set up analytics for",
    "start": "49710",
    "end": "51449"
  },
  {
    "text": "iOS Android and the web if you're",
    "start": "51449",
    "end": "53370"
  },
  {
    "text": "working with a team head over to the",
    "start": "53370",
    "end": "54750"
  },
  {
    "text": "Settings tab and then go to users and",
    "start": "54750",
    "end": "56640"
  },
  {
    "text": "permissions assign rules based on the",
    "start": "56640",
    "end": "58620"
  },
  {
    "text": "principle of least privilege so team",
    "start": "58620",
    "end": "60570"
  },
  {
    "text": "members only have access to the",
    "start": "60570",
    "end": "61890"
  },
  {
    "text": "resources that they actually need from",
    "start": "61890",
    "end": "63989"
  },
  {
    "text": "their head over to the data privacy tab",
    "start": "63989",
    "end": "65700"
  },
  {
    "text": "and update your contact information to",
    "start": "65700",
    "end": "67500"
  },
  {
    "text": "ensure you're in compliance with gdpr",
    "start": "67500",
    "end": "69689"
  },
  {
    "text": "now click the button to add a new app to",
    "start": "69689",
    "end": "71820"
  },
  {
    "text": "your firebase project when you do that",
    "start": "71820",
    "end": "73470"
  },
  {
    "text": "it will give you an object with a bunch",
    "start": "73470",
    "end": "75060"
  },
  {
    "text": "of credentials don't worry these are",
    "start": "75060",
    "end": "76680"
  },
  {
    "text": "perfectly safe in your front-end code as",
    "start": "76680",
    "end": "78509"
  },
  {
    "text": "long as you set up security rules which",
    "start": "78509",
    "end": "80130"
  },
  {
    "text": "we'll look at later upgrade your",
    "start": "80130",
    "end": "81509"
  },
  {
    "text": "firebase plan to blaze its pay-as-you-go",
    "start": "81509",
    "end": "83430"
  },
  {
    "text": "but you still get all the free stuff",
    "start": "83430",
    "end": "84960"
  },
  {
    "text": "that you would on the spark tier but you",
    "start": "84960",
    "end": "86729"
  },
  {
    "text": "still want to stay on top of costs so",
    "start": "86729",
    "end": "88439"
  },
  {
    "text": "head over to the GCP console and set up",
    "start": "88439",
    "end": "90479"
  },
  {
    "text": "a budget alert for your project and",
    "start": "90479",
    "end": "92159"
  },
  {
    "text": "monitor your monthly usage from the",
    "start": "92159",
    "end": "93900"
  },
  {
    "text": "reports panel this will tell you exactly",
    "start": "93900",
    "end": "95670"
  },
  {
    "text": "which services are costing you the most",
    "start": "95670",
    "end": "97409"
  },
  {
    "text": "money make sure to install the firebase",
    "start": "97409",
    "end": "99299"
  },
  {
    "text": "command line tools globally on your",
    "start": "99299",
    "end": "100860"
  },
  {
    "text": "system and also the Google Cloud SDK a",
    "start": "100860",
    "end": "103619"
  },
  {
    "text": "firebase project is actually just a",
    "start": "103619",
    "end": "105840"
  },
  {
    "text": "layer on top of a Google cloud platform",
    "start": "105840",
    "end": "107399"
  },
  {
    "text": "project once you've done this you should",
    "start": "107399",
    "end": "109380"
  },
  {
    "text": "have access to the firebase command and",
    "start": "109380",
    "end": "111299"
  },
  {
    "text": "the g-cloud command on your local system",
    "start": "111299",
    "end": "113009"
  },
  {
    "start": "113000",
    "end": "231000"
  },
  {
    "text": "so now that we have a project set up",
    "start": "113009",
    "end": "115049"
  },
  {
    "text": "let's look at how we can actually deploy",
    "start": "115049",
    "end": "116670"
  },
  {
    "text": "our code to this project if you're",
    "start": "116670",
    "end": "118409"
  },
  {
    "text": "building an iOS or Android app use",
    "start": "118409",
    "end": "120119"
  },
  {
    "text": "firebase app distribution to distribute",
    "start": "120119",
    "end": "122189"
  },
  {
    "text": "your app to testers this will bypass",
    "start": "122189",
    "end": "123930"
  },
  {
    "text": "test flight and the Google Play Store",
    "start": "123930",
    "end": "125700"
  },
  {
    "text": "making your life much easier",
    "start": "125700",
    "end": "127200"
  },
  {
    "text": "now if you're building a web application",
    "start": "127200",
    "end": "128429"
  },
  {
    "text": "you're likely using a package manager",
    "start": "128429",
    "end": "130560"
  },
  {
    "text": "like NPM install firebase tools into the",
    "start": "130560",
    "end": "133080"
  },
  {
    "text": "development environment",
    "start": "133080",
    "end": "133920"
  },
  {
    "text": "for that project and now you can write",
    "start": "133920",
    "end": "135780"
  },
  {
    "text": "NPM scripts that use the firebase CLI",
    "start": "135780",
    "end": "138000"
  },
  {
    "text": "tools now if you followed my earlier",
    "start": "138000",
    "end": "139800"
  },
  {
    "text": "advice to set up different projects for",
    "start": "139800",
    "end": "141660"
  },
  {
    "text": "development of production you can use",
    "start": "141660",
    "end": "143220"
  },
  {
    "text": "the project flag to set up different",
    "start": "143220",
    "end": "144900"
  },
  {
    "text": "commands that specify the project so",
    "start": "144900",
    "end": "147720"
  },
  {
    "text": "here we have a command to deploy to our",
    "start": "147720",
    "end": "149160"
  },
  {
    "text": "development project and another for our",
    "start": "149160",
    "end": "151020"
  },
  {
    "text": "production project now after you",
    "start": "151020",
    "end": "152910"
  },
  {
    "text": "deployed your site head over to the",
    "start": "152910",
    "end": "154200"
  },
  {
    "text": "firebase console and you can see it's",
    "start": "154200",
    "end": "155730"
  },
  {
    "text": "deployed at a cool domain called your",
    "start": "155730",
    "end": "157530"
  },
  {
    "text": "project web app or you can just connect",
    "start": "157530",
    "end": "160319"
  },
  {
    "text": "your own custom domain and you're not",
    "start": "160319",
    "end": "162060"
  },
  {
    "text": "limited to a single domain for example",
    "start": "162060",
    "end": "163709"
  },
  {
    "text": "you might have an admin site and a",
    "start": "163709",
    "end": "165630"
  },
  {
    "text": "customer facing site they can both share",
    "start": "165630",
    "end": "167550"
  },
  {
    "text": "the same firebase project with multi",
    "start": "167550",
    "end": "169350"
  },
  {
    "text": "site hosting then go into your firebase",
    "start": "169350",
    "end": "171030"
  },
  {
    "text": "JSON file change the hosting value to an",
    "start": "171030",
    "end": "173340"
  },
  {
    "text": "array and set up different targets that",
    "start": "173340",
    "end": "175080"
  },
  {
    "text": "represent the different sites you want",
    "start": "175080",
    "end": "176640"
  },
  {
    "text": "to deploy now you're not just limited to",
    "start": "176640",
    "end": "178620"
  },
  {
    "text": "static files when deploying to hosting",
    "start": "178620",
    "end": "180450"
  },
  {
    "text": "you can actually rewrite traffic to a",
    "start": "180450",
    "end": "182190"
  },
  {
    "text": "cloud function or to a cloud run",
    "start": "182190",
    "end": "184080"
  },
  {
    "text": "instance and that means you can do SSR",
    "start": "184080",
    "end": "186180"
  },
  {
    "text": "was something like angular Universal or",
    "start": "186180",
    "end": "188069"
  },
  {
    "text": "next j/s you can also set up firebase",
    "start": "188069",
    "end": "190410"
  },
  {
    "text": "hosting rewrites for dynamic links this",
    "start": "190410",
    "end": "192690"
  },
  {
    "text": "allows you to dynamically send the user",
    "start": "192690",
    "end": "194489"
  },
  {
    "text": "to the app with the best possible",
    "start": "194489",
    "end": "195870"
  },
  {
    "text": "experience so if the user goes to a link",
    "start": "195870",
    "end": "198329"
  },
  {
    "text": "on their iPhone it will take them to a",
    "start": "198329",
    "end": "200010"
  },
  {
    "text": "specific screen in the iPhone app you",
    "start": "200010",
    "end": "202079"
  },
  {
    "text": "can also specify headers on these static",
    "start": "202079",
    "end": "204510"
  },
  {
    "text": "files in your hosting account for",
    "start": "204510",
    "end": "206310"
  },
  {
    "text": "example if we wanted to change the",
    "start": "206310",
    "end": "207930"
  },
  {
    "text": "course settings for all the font files",
    "start": "207930",
    "end": "209700"
  },
  {
    "text": "we could do it like this and firebase",
    "start": "209700",
    "end": "211980"
  },
  {
    "text": "hosting will also cache our static files",
    "start": "211980",
    "end": "213810"
  },
  {
    "text": "for better performance but we can change",
    "start": "213810",
    "end": "215790"
  },
  {
    "text": "the caching behavior by setting",
    "start": "215790",
    "end": "217320"
  },
  {
    "text": "different cache headers here as well and",
    "start": "217320",
    "end": "218910"
  },
  {
    "text": "one cool thing you might do to extend",
    "start": "218910",
    "end": "220829"
  },
  {
    "text": "firebase hosting is to set it up with",
    "start": "220829",
    "end": "222870"
  },
  {
    "text": "Google cloud build so every get commits",
    "start": "222870",
    "end": "224880"
  },
  {
    "text": "you make to your project it will deploy",
    "start": "224880",
    "end": "226410"
  },
  {
    "text": "a new version of your site to your",
    "start": "226410",
    "end": "228090"
  },
  {
    "text": "hosting account that's exactly what I do",
    "start": "228090",
    "end": "229980"
  },
  {
    "text": "for a fire ship io firebase provides two",
    "start": "229980",
    "end": "232560"
  },
  {
    "start": "231000",
    "end": "297000"
  },
  {
    "text": "different fully managed no SQL databases",
    "start": "232560",
    "end": "234630"
  },
  {
    "text": "so how do you know which one to choose",
    "start": "234630",
    "end": "236549"
  },
  {
    "text": "I default to cloud fire store because it",
    "start": "236549",
    "end": "238739"
  },
  {
    "text": "has more powerful query capabilities it",
    "start": "238739",
    "end": "240870"
  },
  {
    "text": "also cost less per gigabytes stored",
    "start": "240870",
    "end": "242760"
  },
  {
    "text": "however real-time database does not",
    "start": "242760",
    "end": "244380"
  },
  {
    "text": "charge for writes so it can be a great",
    "start": "244380",
    "end": "246299"
  },
  {
    "text": "option if you have data that's updated",
    "start": "246299",
    "end": "247739"
  },
  {
    "text": "frequently like an IOT sensor or",
    "start": "247739",
    "end": "249900"
  },
  {
    "text": "something along those lines but when it",
    "start": "249900",
    "end": "251549"
  },
  {
    "text": "comes to pricing you really shouldn't",
    "start": "251549",
    "end": "253139"
  },
  {
    "text": "worry about it too much don't even trip",
    "start": "253139",
    "end": "254970"
  },
  {
    "text": "dog",
    "start": "254970",
    "end": "255630"
  },
  {
    "text": "firebase overall is very inexpensive and",
    "start": "255630",
    "end": "258180"
  },
  {
    "text": "it will take a decent number of monthly",
    "start": "258180",
    "end": "259769"
  },
  {
    "text": "active users before you even break out",
    "start": "259769",
    "end": "261479"
  },
  {
    "text": "of the free tier unless you make a silly",
    "start": "261479",
    "end": "263280"
  },
  {
    "text": "mistake you'll be paying much less than",
    "start": "263280",
    "end": "264930"
  },
  {
    "text": "you would be with other cloud solutions",
    "start": "264930",
    "end": "266550"
  },
  {
    "text": "a more important thing to work",
    "start": "266550",
    "end": "268110"
  },
  {
    "text": "about is that you backup your data on a",
    "start": "268110",
    "end": "269879"
  },
  {
    "text": "regular basis set up a dedicated cloud",
    "start": "269879",
    "end": "272219"
  },
  {
    "text": "storage bucket for backups and then you",
    "start": "272219",
    "end": "274319"
  },
  {
    "text": "can backup your entire database with a",
    "start": "274319",
    "end": "275969"
  },
  {
    "text": "single command when you create your",
    "start": "275969",
    "end": "277710"
  },
  {
    "text": "database for the first time set it in",
    "start": "277710",
    "end": "279509"
  },
  {
    "text": "locked mode it's safer to start with a",
    "start": "279509",
    "end": "281340"
  },
  {
    "text": "lockdown database then incrementally",
    "start": "281340",
    "end": "282870"
  },
  {
    "text": "allow operations as they become",
    "start": "282870",
    "end": "284759"
  },
  {
    "text": "necessary after you've created a",
    "start": "284759",
    "end": "286319"
  },
  {
    "text": "firestorm go ahead and click the filter",
    "start": "286319",
    "end": "288840"
  },
  {
    "text": "icon and you'll see that you can make",
    "start": "288840",
    "end": "290340"
  },
  {
    "text": "queries directly from the firebase",
    "start": "290340",
    "end": "291840"
  },
  {
    "text": "console and it even provides some code",
    "start": "291840",
    "end": "293639"
  },
  {
    "text": "for your query that you can copy and",
    "start": "293639",
    "end": "295110"
  },
  {
    "text": "paste to using your app source code in",
    "start": "295110",
    "end": "296969"
  },
  {
    "text": "fact let's go ahead and switch gears and",
    "start": "296969",
    "end": "298889"
  },
  {
    "start": "297000",
    "end": "484000"
  },
  {
    "text": "jump into the source code for a",
    "start": "298889",
    "end": "300330"
  },
  {
    "text": "JavaScript application now the way you",
    "start": "300330",
    "end": "302580"
  },
  {
    "text": "import firebase depends on the flavor of",
    "start": "302580",
    "end": "304529"
  },
  {
    "text": "JavaScript that you're using you can see",
    "start": "304529",
    "end": "306330"
  },
  {
    "text": "the import syntax here for a common j/s",
    "start": "306330",
    "end": "308250"
  },
  {
    "text": "es6 and typescript but all of these are",
    "start": "308250",
    "end": "310889"
  },
  {
    "text": "actually wrong because they're importing",
    "start": "310889",
    "end": "312719"
  },
  {
    "text": "from firebase directly your code will",
    "start": "312719",
    "end": "314699"
  },
  {
    "text": "work but it will create a huge",
    "start": "314699",
    "end": "316259"
  },
  {
    "text": "JavaScript bundle that will slow down",
    "start": "316259",
    "end": "317789"
  },
  {
    "text": "your app the correct way to use firebase",
    "start": "317789",
    "end": "319770"
  },
  {
    "text": "is to import from the firebase app",
    "start": "319770",
    "end": "321479"
  },
  {
    "text": "namespace and then import these services",
    "start": "321479",
    "end": "323610"
  },
  {
    "text": "that you plan on using aka progressive",
    "start": "323610",
    "end": "325860"
  },
  {
    "text": "enhancement in any case firebase is a",
    "start": "325860",
    "end": "327960"
  },
  {
    "text": "pretty big dependency so if you're",
    "start": "327960",
    "end": "329580"
  },
  {
    "text": "loading it with a script tag you'll want",
    "start": "329580",
    "end": "331469"
  },
  {
    "text": "to use the defer keyword on that script",
    "start": "331469",
    "end": "333060"
  },
  {
    "text": "to ensure it loads after the actual Dom",
    "start": "333060",
    "end": "334979"
  },
  {
    "text": "or HTML has been parsed but if you're",
    "start": "334979",
    "end": "337229"
  },
  {
    "text": "using a framework then you shouldn't",
    "start": "337229",
    "end": "338460"
  },
  {
    "text": "have to worry about this angular app",
    "start": "338460",
    "end": "340259"
  },
  {
    "text": "should use angular fire which integrates",
    "start": "340259",
    "end": "342000"
  },
  {
    "text": "with change detection and the angular",
    "start": "342000",
    "end": "343650"
  },
  {
    "text": "router if you use react on the front-end",
    "start": "343650",
    "end": "345599"
  },
  {
    "text": "the react fire library was just under",
    "start": "345599",
    "end": "347759"
  },
  {
    "text": "cated and it provides support for hooks",
    "start": "347759",
    "end": "349650"
  },
  {
    "text": "and suspense",
    "start": "349650",
    "end": "350610"
  },
  {
    "text": "you have rx fire to integrate with rxjs",
    "start": "350610",
    "end": "353129"
  },
  {
    "text": "which works great in frameworks like",
    "start": "353129",
    "end": "354810"
  },
  {
    "text": "spelt then outside of the web you have",
    "start": "354810",
    "end": "356520"
  },
  {
    "text": "support for all kinds of different other",
    "start": "356520",
    "end": "358110"
  },
  {
    "text": "frameworks in firebase extended like",
    "start": "358110",
    "end": "359969"
  },
  {
    "text": "flutter Arduino and many others when you",
    "start": "359969",
    "end": "362699"
  },
  {
    "text": "first add firebase to a project there's",
    "start": "362699",
    "end": "364469"
  },
  {
    "text": "a couple of no-brainer services that",
    "start": "364469",
    "end": "366210"
  },
  {
    "text": "you'll definitely want to use such as",
    "start": "366210",
    "end": "367830"
  },
  {
    "text": "performance monitoring with a single",
    "start": "367830",
    "end": "369810"
  },
  {
    "text": "line of code we can see how well our app",
    "start": "369810",
    "end": "371430"
  },
  {
    "text": "performs out in the wild giving us",
    "start": "371430",
    "end": "373229"
  },
  {
    "text": "metrics like first contentful paint",
    "start": "373229",
    "end": "375000"
  },
  {
    "text": "across all devices using our app the",
    "start": "375000",
    "end": "377159"
  },
  {
    "text": "next one is crashlytics which is only",
    "start": "377159",
    "end": "378900"
  },
  {
    "text": "relevant to native mobile apps it's very",
    "start": "378900",
    "end": "381089"
  },
  {
    "text": "easy to set up and it will give you",
    "start": "381089",
    "end": "382500"
  },
  {
    "text": "error reporting and crash reporting",
    "start": "382500",
    "end": "384150"
  },
  {
    "text": "throughout your entire application and",
    "start": "384150",
    "end": "385740"
  },
  {
    "text": "automatically open issues so you can",
    "start": "385740",
    "end": "387599"
  },
  {
    "text": "address those problems and lastly we",
    "start": "387599",
    "end": "389789"
  },
  {
    "text": "have firebase analytics with a single",
    "start": "389789",
    "end": "391710"
  },
  {
    "text": "line of code we'll get the default",
    "start": "391710",
    "end": "393000"
  },
  {
    "text": "reporting from Google Analytics giving",
    "start": "393000",
    "end": "394919"
  },
  {
    "text": "us insight about the behavior of our",
    "start": "394919",
    "end": "396599"
  },
  {
    "text": "users now in your source code one of the",
    "start": "396599",
    "end": "399120"
  },
  {
    "text": "first things you'll likely want to do is",
    "start": "399120",
    "end": "400589"
  },
  {
    "text": "determine if a",
    "start": "400589",
    "end": "401510"
  },
  {
    "text": "user is logged in or not there are two",
    "start": "401510",
    "end": "403580"
  },
  {
    "text": "main ways to do this you can pull the",
    "start": "403580",
    "end": "405440"
  },
  {
    "text": "current user at any time by calling off",
    "start": "405440",
    "end": "407510"
  },
  {
    "text": "current user this is usually best for",
    "start": "407510",
    "end": "409610"
  },
  {
    "text": "handling events like when the user",
    "start": "409610",
    "end": "411080"
  },
  {
    "text": "clicks a button and then you want to",
    "start": "411080",
    "end": "412700"
  },
  {
    "text": "grab their auth record and do something",
    "start": "412700",
    "end": "414560"
  },
  {
    "text": "afterwards the other way to get the",
    "start": "414560",
    "end": "416300"
  },
  {
    "text": "current user is to always be listening",
    "start": "416300",
    "end": "418250"
  },
  {
    "text": "to the current off state in this case",
    "start": "418250",
    "end": "420380"
  },
  {
    "text": "you provide a callback function to",
    "start": "420380",
    "end": "422060"
  },
  {
    "text": "listen to changes to the off state like",
    "start": "422060",
    "end": "423920"
  },
  {
    "text": "when the user signs in or signs out in",
    "start": "423920",
    "end": "425840"
  },
  {
    "text": "either case I recommend getting good at",
    "start": "425840",
    "end": "427970"
  },
  {
    "text": "asynchronous JavaScript to be successful",
    "start": "427970",
    "end": "429950"
  },
  {
    "text": "with firebase understanding async await",
    "start": "429950",
    "end": "432080"
  },
  {
    "text": "is very useful for the first approach in",
    "start": "432080",
    "end": "434450"
  },
  {
    "text": "understanding callbacks and functional",
    "start": "434450",
    "end": "436310"
  },
  {
    "text": "programming is very useful for the",
    "start": "436310",
    "end": "437960"
  },
  {
    "text": "second approach when a user attempts to",
    "start": "437960",
    "end": "440060"
  },
  {
    "text": "login something might go wrong it might",
    "start": "440060",
    "end": "442040"
  },
  {
    "text": "be your fault as the developer or the",
    "start": "442040",
    "end": "443810"
  },
  {
    "text": "users fault in any case you want to make",
    "start": "443810",
    "end": "445970"
  },
  {
    "text": "sure that you catch these errors and",
    "start": "445970",
    "end": "447260"
  },
  {
    "text": "then create a default handler that",
    "start": "447260",
    "end": "448580"
  },
  {
    "text": "routes them to a visual UI element like",
    "start": "448580",
    "end": "450740"
  },
  {
    "text": "a dialog a cool trick you can do with",
    "start": "450740",
    "end": "452870"
  },
  {
    "text": "firebase auth is to register a user",
    "start": "452870",
    "end": "454730"
  },
  {
    "text": "lazily for example you might first have",
    "start": "454730",
    "end": "457520"
  },
  {
    "text": "a user sign in anonymously which will",
    "start": "457520",
    "end": "459320"
  },
  {
    "text": "give you a user ID that you can tie to",
    "start": "459320",
    "end": "460940"
  },
  {
    "text": "the database then later in the",
    "start": "460940",
    "end": "462410"
  },
  {
    "text": "onboarding process you can collect their",
    "start": "462410",
    "end": "464000"
  },
  {
    "text": "email or link social accounts like",
    "start": "464000",
    "end": "465860"
  },
  {
    "text": "Twitter Facebook Google etc now certain",
    "start": "465860",
    "end": "468770"
  },
  {
    "text": "authentication methods like email",
    "start": "468770",
    "end": "470300"
  },
  {
    "text": "password may need to send emails to your",
    "start": "470300",
    "end": "472490"
  },
  {
    "text": "users for things like email verification",
    "start": "472490",
    "end": "474710"
  },
  {
    "text": "and resetting passwords sometimes you",
    "start": "474710",
    "end": "476840"
  },
  {
    "text": "might want to control this process on",
    "start": "476840",
    "end": "478340"
  },
  {
    "text": "your own which you can do with custom",
    "start": "478340",
    "end": "480050"
  },
  {
    "text": "email action handlers and you can even",
    "start": "480050",
    "end": "482060"
  },
  {
    "text": "bring your own custom SMTP email server",
    "start": "482060",
    "end": "484460"
  },
  {
    "start": "484000",
    "end": "835000"
  },
  {
    "text": "now one of the most important aspects of",
    "start": "484460",
    "end": "486650"
  },
  {
    "text": "any application is managing relational",
    "start": "486650",
    "end": "488870"
  },
  {
    "text": "data let's check out a few common",
    "start": "488870",
    "end": "490760"
  },
  {
    "text": "techniques for connecting our users to",
    "start": "490760",
    "end": "492230"
  },
  {
    "text": "the firestore database we can create a",
    "start": "492230",
    "end": "494870"
  },
  {
    "text": "one-to-one relationship where the user",
    "start": "494870",
    "end": "496760"
  },
  {
    "text": "has one document and firestore by first",
    "start": "496760",
    "end": "499190"
  },
  {
    "text": "retrieving their user ID then we'll make",
    "start": "499190",
    "end": "501410"
  },
  {
    "text": "a reference to a collection and set the",
    "start": "501410",
    "end": "503810"
  },
  {
    "text": "document ID as the user ID every user ID",
    "start": "503810",
    "end": "506870"
  },
  {
    "text": "is unique so it guarantees that that",
    "start": "506870",
    "end": "508730"
  },
  {
    "text": "user can only have one document in that",
    "start": "508730",
    "end": "510560"
  },
  {
    "text": "collection now if it's possible that",
    "start": "510560",
    "end": "512390"
  },
  {
    "text": "data already exists there you might want",
    "start": "512390",
    "end": "514070"
  },
  {
    "text": "to use the merge true option this will",
    "start": "514070",
    "end": "515960"
  },
  {
    "text": "ensure that any data that already exists",
    "start": "515960",
    "end": "517909"
  },
  {
    "text": "there won't be overwritten the emerge",
    "start": "517910",
    "end": "519650"
  },
  {
    "text": "true option just makes it a",
    "start": "519650",
    "end": "520820"
  },
  {
    "text": "non-destructive update another common",
    "start": "520820",
    "end": "523130"
  },
  {
    "text": "relationship is one-to-many a user might",
    "start": "523130",
    "end": "525500"
  },
  {
    "text": "have many orders but an order belongs to",
    "start": "525500",
    "end": "527810"
  },
  {
    "text": "one user the best way to handle this",
    "start": "527810",
    "end": "530120"
  },
  {
    "text": "type of relationship is to use a sub",
    "start": "530120",
    "end": "532100"
  },
  {
    "text": "collection in the last example we",
    "start": "532100",
    "end": "533990"
  },
  {
    "text": "created a document with a use",
    "start": "533990",
    "end": "535340"
  },
  {
    "text": "and we know that every subcollection",
    "start": "535340",
    "end": "537620"
  },
  {
    "text": "under that document is owned by that",
    "start": "537620",
    "end": "539390"
  },
  {
    "text": "user but sometimes you might run into a",
    "start": "539390",
    "end": "541610"
  },
  {
    "text": "situation where you want to query orders",
    "start": "541610",
    "end": "543650"
  },
  {
    "text": "across all the users in your database",
    "start": "543650",
    "end": "545450"
  },
  {
    "text": "firebase provides a special method that",
    "start": "545450",
    "end": "547970"
  },
  {
    "text": "allows you to group sub collections and",
    "start": "547970",
    "end": "549800"
  },
  {
    "text": "query them together collection group",
    "start": "549800",
    "end": "551960"
  },
  {
    "text": "will find all of the collections that",
    "start": "551960",
    "end": "553370"
  },
  {
    "text": "share the name orders grouped them",
    "start": "553370",
    "end": "554960"
  },
  {
    "text": "together allowing you to make a single",
    "start": "554960",
    "end": "556910"
  },
  {
    "text": "query against all of them in another",
    "start": "556910",
    "end": "558680"
  },
  {
    "text": "very common relationship is many to many",
    "start": "558680",
    "end": "560750"
  },
  {
    "text": "in this case we have a single collection",
    "start": "560750",
    "end": "562580"
  },
  {
    "text": "called chats and each chat document can",
    "start": "562580",
    "end": "564860"
  },
  {
    "text": "be associated with multiple users we can",
    "start": "564860",
    "end": "567380"
  },
  {
    "text": "associate multiple users to multiple",
    "start": "567380",
    "end": "569330"
  },
  {
    "text": "chats by embedding their user IDs on the",
    "start": "569330",
    "end": "571760"
  },
  {
    "text": "chat document using a map of key value",
    "start": "571760",
    "end": "574310"
  },
  {
    "text": "pairs the key is the user ID and then",
    "start": "574310",
    "end": "576470"
  },
  {
    "text": "I'm going to duplicate the display name",
    "start": "576470",
    "end": "578180"
  },
  {
    "text": "in case we want to show that in the UI",
    "start": "578180",
    "end": "579800"
  },
  {
    "text": "data duplication is perfectly OK and no",
    "start": "579800",
    "end": "582500"
  },
  {
    "text": "SQL it can optimize for performance and",
    "start": "582500",
    "end": "585020"
  },
  {
    "text": "costs but it works best with values that",
    "start": "585020",
    "end": "587000"
  },
  {
    "text": "are immutable or that don't need to be",
    "start": "587000",
    "end": "588620"
  },
  {
    "text": "updated very often and now that we have",
    "start": "588620",
    "end": "590750"
  },
  {
    "text": "a map object on this document where each",
    "start": "590750",
    "end": "593150"
  },
  {
    "text": "key in that map is a user ID we can",
    "start": "593150",
    "end": "595430"
  },
  {
    "text": "query it by using dot notation in our",
    "start": "595430",
    "end": "597440"
  },
  {
    "text": "queries like ordered by members dot user",
    "start": "597440",
    "end": "599930"
  },
  {
    "text": "ID",
    "start": "599930",
    "end": "600320"
  },
  {
    "text": "now that we've modeled some data and",
    "start": "600320",
    "end": "602060"
  },
  {
    "text": "made some queries we need to decide if",
    "start": "602060",
    "end": "603920"
  },
  {
    "text": "we want our data in real time format or",
    "start": "603920",
    "end": "605960"
  },
  {
    "text": "not if you're trying to optimize pricing",
    "start": "605960",
    "end": "608120"
  },
  {
    "text": "and don't think you'll need real-time",
    "start": "608120",
    "end": "609380"
  },
  {
    "text": "updates for your data you can just call",
    "start": "609380",
    "end": "611570"
  },
  {
    "text": "query get to retrieve the data once and",
    "start": "611570",
    "end": "613850"
  },
  {
    "text": "then not listen to any future updates",
    "start": "613850",
    "end": "615500"
  },
  {
    "text": "but if you are building a feature where",
    "start": "615500",
    "end": "617540"
  },
  {
    "text": "the UI should react to changes in real",
    "start": "617540",
    "end": "619400"
  },
  {
    "text": "time you'll want to use query on",
    "start": "619400",
    "end": "621140"
  },
  {
    "text": "snapshot then run a callback function",
    "start": "621140",
    "end": "623090"
  },
  {
    "text": "anytime the underlying data changes on a",
    "start": "623090",
    "end": "625430"
  },
  {
    "text": "collection query when you listen to",
    "start": "625430",
    "end": "627260"
  },
  {
    "text": "Doc's you'll get a new array anytime",
    "start": "627260",
    "end": "629150"
  },
  {
    "text": "there's a change to the underlying data",
    "start": "629150",
    "end": "630500"
  },
  {
    "text": "but you might want to know exactly which",
    "start": "630500",
    "end": "632570"
  },
  {
    "text": "documents were added modified or removed",
    "start": "632570",
    "end": "634670"
  },
  {
    "text": "doc changes provides an array of all the",
    "start": "634670",
    "end": "637130"
  },
  {
    "text": "documents that changed their old index",
    "start": "637130",
    "end": "638990"
  },
  {
    "text": "new index and the change type another",
    "start": "638990",
    "end": "641780"
  },
  {
    "text": "awesome thing about firestore is that",
    "start": "641780",
    "end": "643340"
  },
  {
    "text": "it's able to work offline if the",
    "start": "643340",
    "end": "645020"
  },
  {
    "text": "internet goes out and the user is still",
    "start": "645020",
    "end": "646340"
  },
  {
    "text": "trying to send writes to the database",
    "start": "646340",
    "end": "647780"
  },
  {
    "text": "firestore will still update the UI and",
    "start": "647780",
    "end": "650150"
  },
  {
    "text": "then send those rights to the actual",
    "start": "650150",
    "end": "651830"
  },
  {
    "text": "database and commit them after the",
    "start": "651830",
    "end": "653360"
  },
  {
    "text": "internet comes back online and you can",
    "start": "653360",
    "end": "655100"
  },
  {
    "text": "even make this work across multiple",
    "start": "655100",
    "end": "656120"
  },
  {
    "text": "browser tabs by setting the synchronized",
    "start": "656120",
    "end": "658310"
  },
  {
    "text": "tabs option to true now one question I",
    "start": "658310",
    "end": "660770"
  },
  {
    "text": "get a lot is how do I use emoji",
    "start": "660770",
    "end": "662240"
  },
  {
    "text": "characters in my code well they're",
    "start": "662240",
    "end": "663890"
  },
  {
    "text": "actually just utf-8 characters which",
    "start": "663890",
    "end": "665840"
  },
  {
    "text": "means you can use them in a regular",
    "start": "665840",
    "end": "667450"
  },
  {
    "text": "string and that also means that you can",
    "start": "667450",
    "end": "668980"
  },
  {
    "text": "use them in your fire store documents",
    "start": "668980",
    "end": "670720"
  },
  {
    "text": "and make queries against them another",
    "start": "670720",
    "end": "672730"
  },
  {
    "text": "trick you might want to use is to match",
    "start": "672730",
    "end": "674260"
  },
  {
    "text": "a wild-card string for example if we",
    "start": "674260",
    "end": "676240"
  },
  {
    "text": "wanted to query all of the fast and the",
    "start": "676240",
    "end": "678010"
  },
  {
    "text": "furious movie titles create a starting",
    "start": "678010",
    "end": "680290"
  },
  {
    "text": "point and then make your ending point a",
    "start": "680290",
    "end": "681940"
  },
  {
    "text": "tilde character this will match all the",
    "start": "681940",
    "end": "683860"
  },
  {
    "text": "documents that start with the fast and",
    "start": "683860",
    "end": "685720"
  },
  {
    "text": "the furious title and with that we have",
    "start": "685720",
    "end": "687640"
  },
  {
    "text": "reached the halfway mark let's take a",
    "start": "687640",
    "end": "689290"
  },
  {
    "text": "quick break welcome back sometimes you",
    "start": "689290",
    "end": "701260"
  },
  {
    "text": "might have a compound query where you",
    "start": "701260",
    "end": "702790"
  },
  {
    "text": "chain together multiple query conditions",
    "start": "702790",
    "end": "704680"
  },
  {
    "text": "this query won't work by default because",
    "start": "704680",
    "end": "706720"
  },
  {
    "text": "it requires an index but don't create",
    "start": "706720",
    "end": "709000"
  },
  {
    "text": "the index manually let your app throw an",
    "start": "709000",
    "end": "710920"
  },
  {
    "text": "error then click the link to the",
    "start": "710920",
    "end": "712360"
  },
  {
    "text": "firestore console to create the index",
    "start": "712360",
    "end": "714160"
  },
  {
    "text": "automatically one of the most powerful",
    "start": "714160",
    "end": "715990"
  },
  {
    "text": "data types in fires store is a list we",
    "start": "715990",
    "end": "718450"
  },
  {
    "text": "can add a list to a document by simply",
    "start": "718450",
    "end": "720250"
  },
  {
    "text": "setting it with a JavaScript array but",
    "start": "720250",
    "end": "722530"
  },
  {
    "text": "we might decide later that any good",
    "start": "722530",
    "end": "724000"
  },
  {
    "text": "firebase recipe needs to include a",
    "start": "724000",
    "end": "725590"
  },
  {
    "text": "pineapple we can use the firestore array",
    "start": "725590",
    "end": "727990"
  },
  {
    "text": "union method to ensure that the array",
    "start": "727990",
    "end": "729700"
  },
  {
    "text": "includes exactly one pineapple or we",
    "start": "729700",
    "end": "732190"
  },
  {
    "text": "might decide later on that maybe squid",
    "start": "732190",
    "end": "733900"
  },
  {
    "text": "wasn't such a good idea in this recipe",
    "start": "733900",
    "end": "735460"
  },
  {
    "text": "so we can remove it by using the array",
    "start": "735460",
    "end": "737410"
  },
  {
    "text": "removed method without having to know",
    "start": "737410",
    "end": "739120"
  },
  {
    "text": "the actual index and now that we have an",
    "start": "739120",
    "end": "741310"
  },
  {
    "text": "array on the document we can query it by",
    "start": "741310",
    "end": "743470"
  },
  {
    "text": "using the array contains operator inside",
    "start": "743470",
    "end": "745690"
  },
  {
    "text": "of where and that will give us all of",
    "start": "745690",
    "end": "747250"
  },
  {
    "text": "the recipes that contain avocado now",
    "start": "747250",
    "end": "749350"
  },
  {
    "text": "sometimes you might have an array that",
    "start": "749350",
    "end": "750670"
  },
  {
    "text": "contains IDs of other documents in the",
    "start": "750670",
    "end": "752920"
  },
  {
    "text": "database but how do you actually fetch",
    "start": "752920",
    "end": "754510"
  },
  {
    "text": "the full documents in this array do it",
    "start": "754510",
    "end": "756520"
  },
  {
    "text": "in JavaScript by mapping all of the ID",
    "start": "756520",
    "end": "758320"
  },
  {
    "text": "strings to an array of promises that get",
    "start": "758320",
    "end": "760900"
  },
  {
    "text": "the document then run them together with",
    "start": "760900",
    "end": "762850"
  },
  {
    "text": "promise all one thing you should",
    "start": "762850",
    "end": "764980"
  },
  {
    "text": "generally avoid doing is setting a",
    "start": "764980",
    "end": "766600"
  },
  {
    "text": "timestamp from your friend code because",
    "start": "766600",
    "end": "768580"
  },
  {
    "text": "the users clock might not be",
    "start": "768580",
    "end": "769930"
  },
  {
    "text": "synchronized properly if you need to set",
    "start": "769930",
    "end": "772120"
  },
  {
    "text": "a timestamp on a document use the",
    "start": "772120",
    "end": "773980"
  },
  {
    "text": "firestore server timestamp that ensures",
    "start": "773980",
    "end": "776290"
  },
  {
    "text": "that all users are sharing the same",
    "start": "776290",
    "end": "777820"
  },
  {
    "text": "clock another thing you might want to do",
    "start": "777820",
    "end": "779680"
  },
  {
    "text": "is increment a counter like the score of",
    "start": "779680",
    "end": "781600"
  },
  {
    "text": "the game",
    "start": "781600",
    "end": "781900"
  },
  {
    "text": "you can change the value of the counter",
    "start": "781900",
    "end": "783730"
  },
  {
    "text": "atomically without knowing its current",
    "start": "783730",
    "end": "785620"
  },
  {
    "text": "value by using the increment field value",
    "start": "785620",
    "end": "787750"
  },
  {
    "text": "now firestore only supports one write",
    "start": "787750",
    "end": "789910"
  },
  {
    "text": "per document per second although you can",
    "start": "789910",
    "end": "791770"
  },
  {
    "text": "burst above that value so if you have a",
    "start": "791770",
    "end": "793810"
  },
  {
    "text": "ton of writes happening on a single",
    "start": "793810",
    "end": "795430"
  },
  {
    "text": "document you can set up a distributed",
    "start": "795430",
    "end": "797200"
  },
  {
    "text": "counter which is now very easy to do",
    "start": "797200",
    "end": "798940"
  },
  {
    "text": "because there is a firebase extension",
    "start": "798940",
    "end": "800620"
  },
  {
    "text": "that's a",
    "start": "800620",
    "end": "801230"
  },
  {
    "text": "and speaking of atomic sometimes you",
    "start": "801230",
    "end": "803690"
  },
  {
    "text": "might have rights that need to succeed",
    "start": "803690",
    "end": "805430"
  },
  {
    "text": "or fail together maybe the user",
    "start": "805430",
    "end": "807110"
  },
  {
    "text": "completes the game you write the score",
    "start": "807110",
    "end": "808850"
  },
  {
    "text": "and then you want to update the users",
    "start": "808850",
    "end": "810380"
  },
  {
    "text": "lifetime score you can ensure that these",
    "start": "810380",
    "end": "812300"
  },
  {
    "text": "operations happen together by setting up",
    "start": "812300",
    "end": "814190"
  },
  {
    "text": "a batch right this will commit them",
    "start": "814190",
    "end": "816290"
  },
  {
    "text": "together but roll back to the previous",
    "start": "816290",
    "end": "817730"
  },
  {
    "text": "state if any of the writes fail now",
    "start": "817730",
    "end": "820130"
  },
  {
    "text": "firestore is a great solution for the",
    "start": "820130",
    "end": "821839"
  },
  {
    "text": "vast majority of use cases but sometimes",
    "start": "821839",
    "end": "823880"
  },
  {
    "text": "you might need a full relational",
    "start": "823880",
    "end": "825230"
  },
  {
    "text": "database if you need a full relational",
    "start": "825230",
    "end": "827180"
  },
  {
    "text": "database check out my video on",
    "start": "827180",
    "end": "828470"
  },
  {
    "text": "integrating MySQL into a firebase",
    "start": "828470",
    "end": "830839"
  },
  {
    "text": "project or if you need full text search",
    "start": "830839",
    "end": "832850"
  },
  {
    "text": "check out my algo Lea integration video",
    "start": "832850",
    "end": "834920"
  },
  {
    "text": "now one of the most important things to",
    "start": "834920",
    "end": "836750"
  },
  {
    "start": "835000",
    "end": "939000"
  },
  {
    "text": "do as a firebase developer is set rules",
    "start": "836750",
    "end": "838880"
  },
  {
    "text": "before you deploy to production if you",
    "start": "838880",
    "end": "841100"
  },
  {
    "text": "deploy an app without good security",
    "start": "841100",
    "end": "842540"
  },
  {
    "text": "rules in place your customers data could",
    "start": "842540",
    "end": "844430"
  },
  {
    "text": "be compromised and someone could make",
    "start": "844430",
    "end": "845899"
  },
  {
    "text": "destructive writes to your database",
    "start": "845899",
    "end": "847370"
  },
  {
    "text": "currently our databases in lock mode",
    "start": "847370",
    "end": "849380"
  },
  {
    "text": "which means we're safe but now let's go",
    "start": "849380",
    "end": "851120"
  },
  {
    "text": "ahead and open up some operations for",
    "start": "851120",
    "end": "852800"
  },
  {
    "text": "our users the first thing you should do",
    "start": "852800",
    "end": "854720"
  },
  {
    "text": "is get used to using the simulator it",
    "start": "854720",
    "end": "857000"
  },
  {
    "text": "allows you to pass mock requests to the",
    "start": "857000",
    "end": "858740"
  },
  {
    "text": "database to see how the rules will be",
    "start": "858740",
    "end": "860389"
  },
  {
    "text": "evaluated but serious production apps",
    "start": "860389",
    "end": "862459"
  },
  {
    "text": "should use the firestore emulator this",
    "start": "862459",
    "end": "864529"
  },
  {
    "text": "allows you to simulate the firestore",
    "start": "864529",
    "end": "866269"
  },
  {
    "text": "database in your local development",
    "start": "866269",
    "end": "867589"
  },
  {
    "text": "environment so you can throw a whole",
    "start": "867589",
    "end": "869300"
  },
  {
    "text": "bunch of different test cases at your",
    "start": "869300",
    "end": "870649"
  },
  {
    "text": "rules to ensure that they're robust note",
    "start": "870649",
    "end": "872810"
  },
  {
    "text": "that there are five different types of",
    "start": "872810",
    "end": "874010"
  },
  {
    "text": "operations a user can make on a document",
    "start": "874010",
    "end": "876170"
  },
  {
    "text": "they can get a single document a query",
    "start": "876170",
    "end": "878000"
  },
  {
    "text": "of a list of documents and they can",
    "start": "878000",
    "end": "879980"
  },
  {
    "text": "create update and delete documents you",
    "start": "879980",
    "end": "882170"
  },
  {
    "text": "can provide fine-grained rules for each",
    "start": "882170",
    "end": "883820"
  },
  {
    "text": "operation or you can combine them by",
    "start": "883820",
    "end": "885680"
  },
  {
    "text": "using the read or write keywords if they",
    "start": "885680",
    "end": "887810"
  },
  {
    "text": "share the same logic just separate them",
    "start": "887810",
    "end": "889490"
  },
  {
    "text": "with a comma when a rule is evaluated",
    "start": "889490",
    "end": "891980"
  },
  {
    "text": "there are two things that you look at",
    "start": "891980",
    "end": "893390"
  },
  {
    "text": "the request and the resource the request",
    "start": "893390",
    "end": "895970"
  },
  {
    "text": "contains the user's authentication state",
    "start": "895970",
    "end": "897980"
  },
  {
    "text": "as well as the incoming data that",
    "start": "897980",
    "end": "899630"
  },
  {
    "text": "they're trying to write to the database",
    "start": "899630",
    "end": "900820"
  },
  {
    "text": "the resource on the other hand is the",
    "start": "900820",
    "end": "903380"
  },
  {
    "text": "data that already exists at this path in",
    "start": "903380",
    "end": "905360"
  },
  {
    "text": "the database but in some cases you might",
    "start": "905360",
    "end": "907579"
  },
  {
    "text": "need to look elsewhere in the database",
    "start": "907579",
    "end": "909050"
  },
  {
    "text": "to determine if a rule should be allowed",
    "start": "909050",
    "end": "910970"
  },
  {
    "text": "use the get keyword and then point to a",
    "start": "910970",
    "end": "913370"
  },
  {
    "text": "path in the database and you can use",
    "start": "913370",
    "end": "915199"
  },
  {
    "text": "dollar sign parentheses to interpolate",
    "start": "915199",
    "end": "917060"
  },
  {
    "text": "values like the request aunt user ID",
    "start": "917060",
    "end": "919069"
  },
  {
    "text": "this gives you the value from this",
    "start": "919069",
    "end": "921050"
  },
  {
    "text": "document but keep in mind that you're",
    "start": "921050",
    "end": "922790"
  },
  {
    "text": "charged a read every time this rule is",
    "start": "922790",
    "end": "924740"
  },
  {
    "text": "evaluated now you might notice that this",
    "start": "924740",
    "end": "926899"
  },
  {
    "text": "is a very long line of code and if we",
    "start": "926899",
    "end": "928730"
  },
  {
    "text": "were using this frequently throughout",
    "start": "928730",
    "end": "929959"
  },
  {
    "text": "the rules we wouldn't want to have to",
    "start": "929959",
    "end": "931339"
  },
  {
    "text": "repeat it all the time we can extract",
    "start": "931339",
    "end": "933140"
  },
  {
    "text": "this logic into its own function call",
    "start": "933140",
    "end": "935030"
  },
  {
    "text": "is admin and now we have a much cleaner",
    "start": "935030",
    "end": "936890"
  },
  {
    "text": "way to check for admin users now let's",
    "start": "936890",
    "end": "939530"
  },
  {
    "start": "939000",
    "end": "1039000"
  },
  {
    "text": "switch gears to cloud storage a storage",
    "start": "939530",
    "end": "941720"
  },
  {
    "text": "bucket is where you would put things",
    "start": "941720",
    "end": "942860"
  },
  {
    "text": "like images videos and RAW files you",
    "start": "942860",
    "end": "945620"
  },
  {
    "text": "have a default bucket which is where you",
    "start": "945620",
    "end": "947270"
  },
  {
    "text": "would normally save your user-generated",
    "start": "947270",
    "end": "948470"
  },
  {
    "text": "content but you can create additional",
    "start": "948470",
    "end": "950210"
  },
  {
    "text": "buckets as well you might want an",
    "start": "950210",
    "end": "951980"
  },
  {
    "text": "additional bucket for firestore backups",
    "start": "951980",
    "end": "953690"
  },
  {
    "text": "which you can set to cold line which",
    "start": "953690",
    "end": "955430"
  },
  {
    "text": "will save you some money now when you",
    "start": "955430",
    "end": "957290"
  },
  {
    "text": "upload a file to a storage bucket there",
    "start": "957290",
    "end": "959180"
  },
  {
    "text": "is a storage location in a download URL",
    "start": "959180",
    "end": "961250"
  },
  {
    "text": "if the user needs to access this file",
    "start": "961250",
    "end": "963500"
  },
  {
    "text": "again in the future",
    "start": "963500",
    "end": "964460"
  },
  {
    "text": "I recommend saving both values to the",
    "start": "964460",
    "end": "966350"
  },
  {
    "text": "firestore database you can use these",
    "start": "966350",
    "end": "968120"
  },
  {
    "text": "storage locations to replace or delete",
    "start": "968120",
    "end": "970190"
  },
  {
    "text": "the file in the future or the download",
    "start": "970190",
    "end": "971750"
  },
  {
    "text": "URL to access the file in your app but",
    "start": "971750",
    "end": "974540"
  },
  {
    "text": "don't worry too much if you forgot to",
    "start": "974540",
    "end": "976100"
  },
  {
    "text": "save the file path in the database",
    "start": "976100",
    "end": "977600"
  },
  {
    "text": "because you can use the storage ref from",
    "start": "977600",
    "end": "980120"
  },
  {
    "text": "URL and point to either the full path in",
    "start": "980120",
    "end": "982700"
  },
  {
    "text": "the storage bucket or to the download",
    "start": "982700",
    "end": "984440"
  },
  {
    "text": "URL to access that file sometimes you",
    "start": "984440",
    "end": "987200"
  },
  {
    "text": "might want to list out all the files in",
    "start": "987200",
    "end": "989090"
  },
  {
    "text": "a directory in the bucket simply make a",
    "start": "989090",
    "end": "991370"
  },
  {
    "text": "reference to the path to the directory",
    "start": "991370",
    "end": "993050"
  },
  {
    "text": "and then use the list all method to get",
    "start": "993050",
    "end": "995390"
  },
  {
    "text": "all the files at that location you can",
    "start": "995390",
    "end": "997520"
  },
  {
    "text": "upload a file by simply making a",
    "start": "997520",
    "end": "999110"
  },
  {
    "text": "reference to a file path and then",
    "start": "999110",
    "end": "1000850"
  },
  {
    "text": "putting the raw file that you want to",
    "start": "1000850",
    "end": "1002410"
  },
  {
    "text": "upload you can calculate the progress of",
    "start": "1002410",
    "end": "1004480"
  },
  {
    "text": "an upload by listening to the state",
    "start": "1004480",
    "end": "1006460"
  },
  {
    "text": "changed event then divide the bytes",
    "start": "1006460",
    "end": "1008260"
  },
  {
    "text": "transferred by the total bytes in the",
    "start": "1008260",
    "end": "1010060"
  },
  {
    "text": "file if you have multiple files to",
    "start": "1010060",
    "end": "1012190"
  },
  {
    "text": "upload feel free to upload them all at",
    "start": "1012190",
    "end": "1014140"
  },
  {
    "text": "the same time",
    "start": "1014140",
    "end": "1014890"
  },
  {
    "text": "firebase will automatically handle",
    "start": "1014890",
    "end": "1016240"
  },
  {
    "text": "concurrency and upload them as",
    "start": "1016240",
    "end": "1017920"
  },
  {
    "text": "efficiently as possible",
    "start": "1017920",
    "end": "1019240"
  },
  {
    "text": "when you upload files you might also",
    "start": "1019240",
    "end": "1020770"
  },
  {
    "text": "want to save your own custom metadata",
    "start": "1020770",
    "end": "1022480"
  },
  {
    "text": "about that file you might want to know",
    "start": "1022480",
    "end": "1024579"
  },
  {
    "text": "what kind of device the user upload the",
    "start": "1024579",
    "end": "1026110"
  },
  {
    "text": "file from their user ID and stuff like",
    "start": "1026110",
    "end": "1028300"
  },
  {
    "text": "that if your users can upload image",
    "start": "1028300",
    "end": "1030100"
  },
  {
    "text": "files there's a good chance that you'll",
    "start": "1030100",
    "end": "1031480"
  },
  {
    "text": "want to resize them to different",
    "start": "1031480",
    "end": "1032890"
  },
  {
    "text": "resolutions for different devices you",
    "start": "1032890",
    "end": "1035050"
  },
  {
    "text": "can now do that with a click of a button",
    "start": "1035050",
    "end": "1036339"
  },
  {
    "text": "that using the firebase image resizer",
    "start": "1036339",
    "end": "1038260"
  },
  {
    "text": "extension at this point we've been",
    "start": "1038260",
    "end": "1040120"
  },
  {
    "text": "mostly looking at front-end code so now",
    "start": "1040120",
    "end": "1042040"
  },
  {
    "text": "I want to switch gears to the backend",
    "start": "1042040",
    "end": "1043688"
  },
  {
    "text": "you can create your own command line",
    "start": "1043689",
    "end": "1044980"
  },
  {
    "text": "utility for firebase with three easy",
    "start": "1044980",
    "end": "1046810"
  },
  {
    "text": "steps go to your project settings and",
    "start": "1046810",
    "end": "1048940"
  },
  {
    "text": "download the service account for your",
    "start": "1048940",
    "end": "1050530"
  },
  {
    "text": "project in a node project install",
    "start": "1050530",
    "end": "1052510"
  },
  {
    "text": "firebase admin as a development",
    "start": "1052510",
    "end": "1054040"
  },
  {
    "text": "dependency then create a J's file that",
    "start": "1054040",
    "end": "1055990"
  },
  {
    "text": "imports it and calls initialize app",
    "start": "1055990",
    "end": "1057880"
  },
  {
    "text": "firebase admin needs your service",
    "start": "1057880",
    "end": "1059470"
  },
  {
    "text": "account but it contains sensitive",
    "start": "1059470",
    "end": "1060940"
  },
  {
    "text": "information the safest way to use it",
    "start": "1060940",
    "end": "1062740"
  },
  {
    "text": "locally is to keep it somewhere private",
    "start": "1062740",
    "end": "1064780"
  },
  {
    "text": "on your system and then use an",
    "start": "1064780",
    "end": "1066220"
  },
  {
    "text": "environment variable called Google",
    "start": "1066220",
    "end": "1067870"
  },
  {
    "text": "application",
    "start": "1067870",
    "end": "1069159"
  },
  {
    "text": "but if you include the service account",
    "start": "1069159",
    "end": "1070570"
  },
  {
    "text": "directly in your source code make sure",
    "start": "1070570",
    "end": "1072130"
  },
  {
    "text": "it's in your git ignore so it doesn't",
    "start": "1072130",
    "end": "1073630"
  },
  {
    "text": "end up in a public repo somewhere one of",
    "start": "1073630",
    "end": "1075640"
  },
  {
    "text": "my favorite things to do with an admin",
    "start": "1075640",
    "end": "1077080"
  },
  {
    "text": "script is to seed the database with some",
    "start": "1077080",
    "end": "1079090"
  },
  {
    "text": "dummy data install faker J s and then",
    "start": "1079090",
    "end": "1081460"
  },
  {
    "text": "import it into your JavaScript file then",
    "start": "1081460",
    "end": "1083529"
  },
  {
    "text": "create a loop and for each iteration add",
    "start": "1083529",
    "end": "1085659"
  },
  {
    "text": "a new document to the collection using",
    "start": "1085659",
    "end": "1087760"
  },
  {
    "text": "faker to automatically generate the",
    "start": "1087760",
    "end": "1089470"
  },
  {
    "text": "dummy data now run the script from the",
    "start": "1089470",
    "end": "1091210"
  },
  {
    "text": "command line with node you should now",
    "start": "1091210",
    "end": "1092710"
  },
  {
    "text": "see a bunch of dummy documents seated in",
    "start": "1092710",
    "end": "1094600"
  },
  {
    "text": "your database now you can do a lot with",
    "start": "1094600",
    "end": "1096669"
  },
  {
    "text": "the firebase admin SDK but you can do",
    "start": "1096669",
    "end": "1098710"
  },
  {
    "text": "even more with the REST API s check out",
    "start": "1098710",
    "end": "1101049"
  },
  {
    "text": "the REST API documentation to find",
    "start": "1101049",
    "end": "1103029"
  },
  {
    "text": "secret techniques that you didn't know",
    "start": "1103029",
    "end": "1104559"
  },
  {
    "text": "about earlier I showed you how to backup",
    "start": "1104559",
    "end": "1106330"
  },
  {
    "text": "firestore from the command-line but you",
    "start": "1106330",
    "end": "1108039"
  },
  {
    "text": "can also do it with the REST API this",
    "start": "1108039",
    "end": "1109960"
  },
  {
    "text": "would allow you to set up a cron job to",
    "start": "1109960",
    "end": "1111700"
  },
  {
    "text": "backup your database on a daily basis if",
    "start": "1111700",
    "end": "1113919"
  },
  {
    "text": "you do use the REST API you'll want to",
    "start": "1113919",
    "end": "1115929"
  },
  {
    "text": "use the Google API NPM package this",
    "start": "1115929",
    "end": "1118539"
  },
  {
    "text": "allows you to discover and interact with",
    "start": "1118539",
    "end": "1120429"
  },
  {
    "text": "hundreds of different Google API s like",
    "start": "1120429",
    "end": "1122500"
  },
  {
    "text": "Adwords YouTube and of course firebase",
    "start": "1122500",
    "end": "1124750"
  },
  {
    "text": "creating an admin script can be useful",
    "start": "1124750",
    "end": "1126820"
  },
  {
    "text": "but in most cases you'll be working with",
    "start": "1126820",
    "end": "1128260"
  },
  {
    "start": "1128000",
    "end": "1365000"
  },
  {
    "text": "firebase admin in a cloud function you",
    "start": "1128260",
    "end": "1130480"
  },
  {
    "text": "can add cloud functions to your project",
    "start": "1130480",
    "end": "1132190"
  },
  {
    "text": "by running firebase and net functions",
    "start": "1132190",
    "end": "1133750"
  },
  {
    "text": "when you do this I highly recommend",
    "start": "1133750",
    "end": "1135700"
  },
  {
    "text": "using typescript because it does all the",
    "start": "1135700",
    "end": "1137289"
  },
  {
    "text": "setup for you and will help you catch",
    "start": "1137289",
    "end": "1138880"
  },
  {
    "text": "silly errors before they end up in",
    "start": "1138880",
    "end": "1140470"
  },
  {
    "text": "production there's a few things we can",
    "start": "1140470",
    "end": "1142059"
  },
  {
    "text": "do to improve the performance of a cold",
    "start": "1142059",
    "end": "1143950"
  },
  {
    "text": "start on a cloud function and also",
    "start": "1143950",
    "end": "1145870"
  },
  {
    "text": "reduce the CPU time that were actually",
    "start": "1145870",
    "end": "1147580"
  },
  {
    "text": "billed for try to minimize the number of",
    "start": "1147580",
    "end": "1149830"
  },
  {
    "text": "dependencies that you use in your",
    "start": "1149830",
    "end": "1151029"
  },
  {
    "text": "functions more code to load and parse",
    "start": "1151029",
    "end": "1153070"
  },
  {
    "text": "means a slower cold start time if you",
    "start": "1153070",
    "end": "1155320"
  },
  {
    "text": "have values that can be shared between",
    "start": "1155320",
    "end": "1156580"
  },
  {
    "text": "multiple function invocations you can",
    "start": "1156580",
    "end": "1158740"
  },
  {
    "text": "set them up as global variables when a",
    "start": "1158740",
    "end": "1160990"
  },
  {
    "text": "function instance spins up in the cloud",
    "start": "1160990",
    "end": "1162669"
  },
  {
    "text": "it might be used multiple times so",
    "start": "1162669",
    "end": "1164500"
  },
  {
    "text": "global variables can be used across",
    "start": "1164500",
    "end": "1165909"
  },
  {
    "text": "multiple calls improving performance",
    "start": "1165909",
    "end": "1167740"
  },
  {
    "text": "when you design your cloud functions",
    "start": "1167740",
    "end": "1169480"
  },
  {
    "text": "they should always be item potent cloud",
    "start": "1169480",
    "end": "1171490"
  },
  {
    "text": "functions are guaranteed to be invoked",
    "start": "1171490",
    "end": "1173019"
  },
  {
    "text": "at least once but they can be retried",
    "start": "1173019",
    "end": "1175240"
  },
  {
    "text": "multiple times so you want to make sure",
    "start": "1175240",
    "end": "1176799"
  },
  {
    "text": "that multiple calls to the same function",
    "start": "1176799",
    "end": "1178690"
  },
  {
    "text": "produces the same result and you can use",
    "start": "1178690",
    "end": "1180700"
  },
  {
    "text": "the context event ID to help you achieve",
    "start": "1180700",
    "end": "1182620"
  },
  {
    "text": "that if you need to add more horsepower",
    "start": "1182620",
    "end": "1184899"
  },
  {
    "text": "to a function you can use run with to",
    "start": "1184899",
    "end": "1186789"
  },
  {
    "text": "max out the memory at two gigabytes and",
    "start": "1186789",
    "end": "1188500"
  },
  {
    "text": "the timeout seconds to 540 now one thing",
    "start": "1188500",
    "end": "1191350"
  },
  {
    "text": "you want to be really careful not to do",
    "start": "1191350",
    "end": "1192940"
  },
  {
    "text": "is to create an infinite loop you might",
    "start": "1192940",
    "end": "1195010"
  },
  {
    "text": "accidentally do this in firestore by",
    "start": "1195010",
    "end": "1196809"
  },
  {
    "text": "updating the same document that",
    "start": "1196809",
    "end": "1198549"
  },
  {
    "text": "triggered the event in this example we",
    "start": "1198549",
    "end": "1200679"
  },
  {
    "text": "have an on write function",
    "start": "1200679",
    "end": "1202029"
  },
  {
    "text": "updates the same document that triggered",
    "start": "1202029",
    "end": "1203979"
  },
  {
    "text": "the right so this will cause an infinite",
    "start": "1203979",
    "end": "1205809"
  },
  {
    "text": "loop that will charge up your firebase",
    "start": "1205809",
    "end": "1207519"
  },
  {
    "text": "bill until you hit the quota limits it's",
    "start": "1207519",
    "end": "1209799"
  },
  {
    "text": "not a good thing to do however there are",
    "start": "1209799",
    "end": "1211749"
  },
  {
    "text": "use cases when you might want the",
    "start": "1211749",
    "end": "1213159"
  },
  {
    "text": "triggering function to update the same",
    "start": "1213159",
    "end": "1214779"
  },
  {
    "text": "document you can avoid the infinite loop",
    "start": "1214779",
    "end": "1216820"
  },
  {
    "text": "by checking if the after document is",
    "start": "1216820",
    "end": "1218979"
  },
  {
    "text": "equal to the before document this will",
    "start": "1218979",
    "end": "1221229"
  },
  {
    "text": "check for equality on the document path",
    "start": "1221229",
    "end": "1222849"
  },
  {
    "text": "and its data and that will stop the loop",
    "start": "1222849",
    "end": "1224919"
  },
  {
    "text": "assuming your function is idempotent",
    "start": "1224919",
    "end": "1226769"
  },
  {
    "text": "background cloud functions must always",
    "start": "1226769",
    "end": "1229059"
  },
  {
    "text": "return a promise you can ensure that",
    "start": "1229059",
    "end": "1230799"
  },
  {
    "text": "always happens by using the async",
    "start": "1230799",
    "end": "1232629"
  },
  {
    "text": "keyword in the function callback then",
    "start": "1232629",
    "end": "1234580"
  },
  {
    "text": "you can use the await keyword for a much",
    "start": "1234580",
    "end": "1236200"
  },
  {
    "text": "cleaner synchronous looking code",
    "start": "1236200",
    "end": "1237580"
  },
  {
    "text": "sometimes you might need a cloud",
    "start": "1237580",
    "end": "1239109"
  },
  {
    "text": "function that communicates with other",
    "start": "1239109",
    "end": "1240789"
  },
  {
    "text": "cloud functions or other GCP services",
    "start": "1240789",
    "end": "1243219"
  },
  {
    "text": "you could use an HTTP function to handle",
    "start": "1243219",
    "end": "1245589"
  },
  {
    "text": "that but you would also need to",
    "start": "1245589",
    "end": "1246789"
  },
  {
    "text": "implement some code to validate the",
    "start": "1246789",
    "end": "1248529"
  },
  {
    "text": "request a better alternative would be to",
    "start": "1248529",
    "end": "1250570"
  },
  {
    "text": "set up a pub sub function it allows you",
    "start": "1250570",
    "end": "1253029"
  },
  {
    "text": "to pass messages between your internal",
    "start": "1253029",
    "end": "1254950"
  },
  {
    "text": "services and that's easier and more",
    "start": "1254950",
    "end": "1256779"
  },
  {
    "text": "secure than exposing an HTTP endpoint",
    "start": "1256779",
    "end": "1258909"
  },
  {
    "text": "you might also have endpoints that",
    "start": "1258909",
    "end": "1260710"
  },
  {
    "text": "should only be accessed by authenticated",
    "start": "1260710",
    "end": "1262779"
  },
  {
    "text": "users in a regular HTTP function you",
    "start": "1262779",
    "end": "1265749"
  },
  {
    "text": "would need to extract the authorization",
    "start": "1265749",
    "end": "1267399"
  },
  {
    "text": "header that you set in your front-end",
    "start": "1267399",
    "end": "1268690"
  },
  {
    "text": "code and then verify the ID token as an",
    "start": "1268690",
    "end": "1271059"
  },
  {
    "text": "alternative you can simplify both your",
    "start": "1271059",
    "end": "1272769"
  },
  {
    "text": "back-end and front-end code by using",
    "start": "1272769",
    "end": "1274299"
  },
  {
    "text": "callable functions it includes the auth",
    "start": "1274299",
    "end": "1276489"
  },
  {
    "text": "context for the user so you don't have",
    "start": "1276489",
    "end": "1278559"
  },
  {
    "text": "to implement your own middleware to",
    "start": "1278559",
    "end": "1280089"
  },
  {
    "text": "authenticate your functions a great use",
    "start": "1280089",
    "end": "1282159"
  },
  {
    "text": "case is to delete an entire firestore",
    "start": "1282159",
    "end": "1284229"
  },
  {
    "text": "collection which should always be done",
    "start": "1284229",
    "end": "1285609"
  },
  {
    "text": "on the backend because there might be",
    "start": "1285609",
    "end": "1286989"
  },
  {
    "text": "tons of documents in a collection we can",
    "start": "1286989",
    "end": "1289119"
  },
  {
    "text": "first authorize the operation by looking",
    "start": "1289119",
    "end": "1290950"
  },
  {
    "text": "at the user ID then we'll create a",
    "start": "1290950",
    "end": "1292539"
  },
  {
    "text": "recursive function called batch delete",
    "start": "1292539",
    "end": "1294399"
  },
  {
    "text": "it retrieves documents and batches of",
    "start": "1294399",
    "end": "1296229"
  },
  {
    "text": "100 and then deletes that this will",
    "start": "1296229",
    "end": "1297999"
  },
  {
    "text": "ensure that we don't hit memory issues",
    "start": "1297999",
    "end": "1299499"
  },
  {
    "text": "if we try to query millions of documents",
    "start": "1299499",
    "end": "1301659"
  },
  {
    "text": "in a single go now when implementing the",
    "start": "1301659",
    "end": "1303759"
  },
  {
    "text": "actual logic for your back-end code",
    "start": "1303759",
    "end": "1305259"
  },
  {
    "text": "consider breaking it down into small",
    "start": "1305259",
    "end": "1307539"
  },
  {
    "text": "JavaScript functions this allows you to",
    "start": "1307539",
    "end": "1309789"
  },
  {
    "text": "reuse code across multiple deployed",
    "start": "1309789",
    "end": "1311469"
  },
  {
    "text": "cloud functions and it's also just",
    "start": "1311469",
    "end": "1313089"
  },
  {
    "text": "easier to test keep in mind that cloud",
    "start": "1313089",
    "end": "1315159"
  },
  {
    "text": "functions provide a gateway to interact",
    "start": "1315159",
    "end": "1317139"
  },
  {
    "text": "with other third party API s almost",
    "start": "1317139",
    "end": "1319239"
  },
  {
    "text": "every good API also has a good nodejs",
    "start": "1319239",
    "end": "1321639"
  },
  {
    "text": "library to go with it so basically",
    "start": "1321639",
    "end": "1323589"
  },
  {
    "text": "anything you can build an ojs you can",
    "start": "1323589",
    "end": "1325450"
  },
  {
    "text": "build in a cloud function when you're",
    "start": "1325450",
    "end": "1327339"
  },
  {
    "text": "ready to go live you can deploy all of",
    "start": "1327339",
    "end": "1329109"
  },
  {
    "text": "your functions from the command line",
    "start": "1329109",
    "end": "1330190"
  },
  {
    "text": "with a single command but on larger",
    "start": "1330190",
    "end": "1332320"
  },
  {
    "text": "projects with dozens of functions you",
    "start": "1332320",
    "end": "1334119"
  },
  {
    "text": "may not want to deploy everything all",
    "start": "1334119",
    "end": "1335770"
  },
  {
    "text": "once you can append the name of the",
    "start": "1335770",
    "end": "1337210"
  },
  {
    "text": "function to the end of this command to",
    "start": "1337210",
    "end": "1338980"
  },
  {
    "text": "deploy a single function despite your",
    "start": "1338980",
    "end": "1341050"
  },
  {
    "text": "best efforts your functions will very",
    "start": "1341050",
    "end": "1342940"
  },
  {
    "text": "likely have some bugs the best way to",
    "start": "1342940",
    "end": "1345070"
  },
  {
    "text": "prevent bugs is to run the cloud",
    "start": "1345070",
    "end": "1346870"
  },
  {
    "text": "functions shell locally you can invoke",
    "start": "1346870",
    "end": "1349000"
  },
  {
    "text": "your functions with mock data to test",
    "start": "1349000",
    "end": "1350620"
  },
  {
    "text": "their behavior and firebase even",
    "start": "1350620",
    "end": "1352270"
  },
  {
    "text": "provides a unit testing library now your",
    "start": "1352270",
    "end": "1354460"
  },
  {
    "text": "functions still might break in",
    "start": "1354460",
    "end": "1355540"
  },
  {
    "text": "production so you can always look at the",
    "start": "1355540",
    "end": "1357250"
  },
  {
    "text": "firebase logs to see what's going wrong",
    "start": "1357250",
    "end": "1359050"
  },
  {
    "text": "or better yet head over to stackdriver",
    "start": "1359050",
    "end": "1360880"
  },
  {
    "text": "where you can create your own custom",
    "start": "1360880",
    "end": "1362650"
  },
  {
    "text": "dashboards and alerts for the things",
    "start": "1362650",
    "end": "1364540"
  },
  {
    "text": "that you care about earlier in the video",
    "start": "1364540",
    "end": "1366310"
  },
  {
    "start": "1365000",
    "end": "1422000"
  },
  {
    "text": "we set up analytics in our front-end",
    "start": "1366310",
    "end": "1367870"
  },
  {
    "text": "code but to get the most out of it we'll",
    "start": "1367870",
    "end": "1369820"
  },
  {
    "text": "want to track custom events and user",
    "start": "1369820",
    "end": "1371680"
  },
  {
    "text": "properties try to pinpoint the events or",
    "start": "1371680",
    "end": "1374230"
  },
  {
    "text": "user behaviors that you think are most",
    "start": "1374230",
    "end": "1375910"
  },
  {
    "text": "important to turning that user into a",
    "start": "1375910",
    "end": "1378040"
  },
  {
    "text": "paying customer then use firebase",
    "start": "1378040",
    "end": "1379780"
  },
  {
    "text": "analytics to record those events",
    "start": "1379780",
    "end": "1381340"
  },
  {
    "text": "firebase will aggregate some of the data",
    "start": "1381340",
    "end": "1383080"
  },
  {
    "text": "automatically but you can create your",
    "start": "1383080",
    "end": "1384550"
  },
  {
    "text": "own audiences based on the type of user",
    "start": "1384550",
    "end": "1386680"
  },
  {
    "text": "that you want to target your marketing",
    "start": "1386680",
    "end": "1388570"
  },
  {
    "text": "team will love audiences because you can",
    "start": "1388570",
    "end": "1390400"
  },
  {
    "text": "target messaging to a specific type of",
    "start": "1390400",
    "end": "1392080"
  },
  {
    "text": "user and also do things like a be",
    "start": "1392080",
    "end": "1394180"
  },
  {
    "text": "testing and funnels and as a developer",
    "start": "1394180",
    "end": "1396460"
  },
  {
    "text": "you can actually use audiences to",
    "start": "1396460",
    "end": "1398650"
  },
  {
    "text": "customize the UI based on your",
    "start": "1398650",
    "end": "1400360"
  },
  {
    "text": "underlying analytics data the service",
    "start": "1400360",
    "end": "1402430"
  },
  {
    "text": "will send key value pairs down to your",
    "start": "1402430",
    "end": "1404110"
  },
  {
    "text": "front-end application which you can use",
    "start": "1404110",
    "end": "1405850"
  },
  {
    "text": "to conditionally show UI based on where",
    "start": "1405850",
    "end": "1408040"
  },
  {
    "text": "that user is located what audience they",
    "start": "1408040",
    "end": "1409780"
  },
  {
    "text": "belong to and so on you can also use the",
    "start": "1409780",
    "end": "1412120"
  },
  {
    "text": "same data to send push notifications to",
    "start": "1412120",
    "end": "1414070"
  },
  {
    "text": "your users using firebase Cloud",
    "start": "1414070",
    "end": "1415750"
  },
  {
    "text": "messaging instead of sending a bulk",
    "start": "1415750",
    "end": "1417340"
  },
  {
    "text": "notification out to all of your users",
    "start": "1417340",
    "end": "1418990"
  },
  {
    "text": "segment it to the users who actually",
    "start": "1418990",
    "end": "1420730"
  },
  {
    "text": "want it and will benefit from it and",
    "start": "1420730",
    "end": "1422530"
  },
  {
    "start": "1422000",
    "end": "1470000"
  },
  {
    "text": "with that we have finally reached",
    "start": "1422530",
    "end": "1423940"
  },
  {
    "text": "firebase tip number 100 leverage",
    "start": "1423940",
    "end": "1426580"
  },
  {
    "text": "machine-learning within your app you can",
    "start": "1426580",
    "end": "1428200"
  },
  {
    "text": "do this in multiple ways with firebase",
    "start": "1428200",
    "end": "1429760"
  },
  {
    "text": "use predictions to guess when a user is",
    "start": "1429760",
    "end": "1431980"
  },
  {
    "text": "going to buy your product use ml kit to",
    "start": "1431980",
    "end": "1434380"
  },
  {
    "text": "implement a I driven features",
    "start": "1434380",
    "end": "1435820"
  },
  {
    "text": "out-of-the-box",
    "start": "1435820",
    "end": "1436510"
  },
  {
    "text": "things like object detection and smart",
    "start": "1436510",
    "end": "1438580"
  },
  {
    "text": "reply or build your own image",
    "start": "1438580",
    "end": "1440110"
  },
  {
    "text": "classification models with Auto ml and",
    "start": "1440110",
    "end": "1442120"
  },
  {
    "text": "you can even export all of your",
    "start": "1442120",
    "end": "1443560"
  },
  {
    "text": "analytics and fire store data to",
    "start": "1443560",
    "end": "1445150"
  },
  {
    "text": "bigquery and use that raw data to train",
    "start": "1445150",
    "end": "1447310"
  },
  {
    "text": "your own tensorflow models from scratch",
    "start": "1447310",
    "end": "1448900"
  },
  {
    "text": "and that is all of the firebase tips",
    "start": "1448900",
    "end": "1451000"
  },
  {
    "text": "that exists in the world if you have",
    "start": "1451000",
    "end": "1452650"
  },
  {
    "text": "your own additional tips leave them in",
    "start": "1452650",
    "end": "1454120"
  },
  {
    "text": "the comments below and I'll pick a",
    "start": "1454120",
    "end": "1455380"
  },
  {
    "text": "couple of the best ones to win a t-shirt",
    "start": "1455380",
    "end": "1456910"
  },
  {
    "text": "later this week I'm gonna go ahead and",
    "start": "1456910",
    "end": "1458710"
  },
  {
    "text": "wrap things up there hopefully you found",
    "start": "1458710",
    "end": "1460180"
  },
  {
    "text": "something useful",
    "start": "1460180",
    "end": "1461030"
  },
  {
    "text": "here thanks for watching and I will talk",
    "start": "1461030",
    "end": "1463040"
  },
  {
    "text": "to you soon",
    "start": "1463040",
    "end": "1465430"
  },
  {
    "text": "[Music]",
    "start": "1466860",
    "end": "1471660"
  }
]