[
  {
    "text": "hi I'm Kenton and I'm going to tell you today about how to or how we built a",
    "start": "4000",
    "end": "11820"
  },
  {
    "text": "platform a cloud platform cloud compute platform designed for massive multi-tenancy without using virtual",
    "start": "11820",
    "end": "19029"
  },
  {
    "text": "machines or containers but instead using v8 isolates so let me start by",
    "start": "19029",
    "end": "24640"
  },
  {
    "text": "explaining what it is we were trying to solve here so CloudFlare operates a",
    "start": "24640",
    "end": "31349"
  },
  {
    "text": "network of servers located in 165 locations worldwide and growing all the",
    "start": "31349",
    "end": "38230"
  },
  {
    "text": "time and historically what these servers could do if you put them in front of",
    "start": "38230",
    "end": "43330"
  },
  {
    "text": "your website they'd act as a glorified HTTP proxy they could give you HTTP",
    "start": "43330",
    "end": "48820"
  },
  {
    "text": "caching they could give you detecting and blocking security threats famously they give you DDoS mitigation but a few",
    "start": "48820",
    "end": "58390"
  },
  {
    "text": "years ago clever thought well it would be really cool if people could just run",
    "start": "58390",
    "end": "64570"
  },
  {
    "text": "code on these machines give us a piece of code to distribute and have it run in",
    "start": "64570",
    "end": "71020"
  },
  {
    "text": "all those places and handle HTTP requests for your site directly there and this could be either to to to",
    "start": "71020",
    "end": "79990"
  },
  {
    "text": "augment the functionality of CloudFlare itself to implement new features that we hadn't implemented yet or it could be to",
    "start": "79990",
    "end": "87130"
  },
  {
    "text": "actually take entire applications and run them across the whole network such that you're not really thinking about",
    "start": "87130",
    "end": "93850"
  },
  {
    "text": "where it runs anymore it just runs everywhere like kind of like what I feel like the cloud was supposed to be all",
    "start": "93850",
    "end": "98920"
  },
  {
    "text": "along rather than choosing one or two locations but there's a challenge in",
    "start": "98920",
    "end": "105190"
  },
  {
    "text": "this there's a there's a scalability challenge and it's not the scalability challenge that we normally think about",
    "start": "105190",
    "end": "110799"
  },
  {
    "text": "normally we think about scaling to traffic a number of requests that we can handle per second and scaling to traffic",
    "start": "110799",
    "end": "118420"
  },
  {
    "text": "is actually really easy for CloudFlare because every time we add a new location it means we can handle more traffic add",
    "start": "118420",
    "end": "124570"
  },
  {
    "text": "more service that location can handle more traffic and it's you know evenly",
    "start": "124570",
    "end": "130119"
  },
  {
    "text": "distributed across the whole network our architecture scales out very nicely but the kind of scalability I'm talking",
    "start": "130119",
    "end": "136720"
  },
  {
    "text": "about here is scalability - the number of tenants the number of applications that we can be",
    "start": "136720",
    "end": "142690"
  },
  {
    "text": "hosting at one time and the challenge with this is that again we don't want",
    "start": "142690",
    "end": "150220"
  },
  {
    "text": "people to choose one or two or five locations where their supper runs we",
    "start": "150220",
    "end": "155620"
  },
  {
    "text": "want it to run everywhere we want everyone's code running in every one of our locations and some of our locations",
    "start": "155620",
    "end": "162010"
  },
  {
    "text": "are not that big some have lots and lots of computers but others have maybe a",
    "start": "162010",
    "end": "167950"
  },
  {
    "text": "dozen machines and so how do you fit you know we have 10 million customers on a",
    "start": "167950",
    "end": "173290"
  },
  {
    "text": "dozen machines it turns out that the the",
    "start": "173290",
    "end": "178450"
  },
  {
    "text": "existing technologies for this existing server-side technologies don't live up",
    "start": "178450",
    "end": "183640"
  },
  {
    "text": "the task what we really need is basically a hundred x efficiency gain in",
    "start": "183640",
    "end": "188790"
  },
  {
    "text": "number of people we can host and hundred X decrease and how much how many resources each one is using quick inter",
    "start": "188790",
    "end": "197470"
  },
  {
    "text": "on me worked for Google for a long time where I was best known for open sourcing",
    "start": "197470",
    "end": "204820"
  },
  {
    "text": "protocol buffers I created version 2 which was the open-source version after I left Google I created captain proto as",
    "start": "204820",
    "end": "211990"
  },
  {
    "text": "he mentioned which is an alternative serialization and RPC framework and then I founded a company called sandstorm",
    "start": "211990",
    "end": "217930"
  },
  {
    "text": "that was doing interesting things with decentralized web hosting or hosting of",
    "start": "217930",
    "end": "225160"
  },
  {
    "text": "web applications and security around that the company made some cool tech but",
    "start": "225160",
    "end": "233730"
  },
  {
    "text": "I kind of failed on the the business side in a classic fashion and a couple",
    "start": "233730",
    "end": "239140"
  },
  {
    "text": "of years ago I was looking for something new and talked to CloudFlare and they",
    "start": "239140",
    "end": "244390"
  },
  {
    "text": "said hey well we have this idea we want people to run code on our edge I'm not sure how we want to do it do you want to",
    "start": "244390",
    "end": "249760"
  },
  {
    "text": "take this on and I said yeah a couple of warnings this is actually the first time",
    "start": "249760",
    "end": "256329"
  },
  {
    "text": "I've spoken at a conference I'm not an experienced speaker and I am also not a graphics designer my slides as the talk",
    "start": "256330",
    "end": "264250"
  },
  {
    "text": "goes on are going to get worse and worse and you're going to want to avert your vision at the end",
    "start": "264250",
    "end": "270150"
  },
  {
    "text": "so getting back to efficiency what kind of efficiency do we need here well first",
    "start": "270150",
    "end": "277270"
  },
  {
    "text": "of all we need apps to be very small we can't be shipping around even a hundred",
    "start": "277270",
    "end": "284080"
  },
  {
    "text": "megabyte app images because we can't fit enough of those on one machine to host the number of apps that we want we want",
    "start": "284080",
    "end": "289690"
  },
  {
    "text": "apps that are more like a megabyte or less in code size we want the baseline",
    "start": "289690",
    "end": "296560"
  },
  {
    "text": "memory usage that is the the amount of memory the app uses when it has just started up and it's not doing anything",
    "start": "296560",
    "end": "302590"
  },
  {
    "text": "particular in particular has to be very low so that we can fit many of them",
    "start": "302590",
    "end": "307980"
  },
  {
    "text": "context switching this is interesting so in our environment because we have requests distributed across the whole",
    "start": "307980",
    "end": "315850"
  },
  {
    "text": "world although we need to host a lot of tenants in each location each one of",
    "start": "315850",
    "end": "320890"
  },
  {
    "text": "them is not going to be getting very much traffic because they're only going to be getting the traffic that",
    "start": "320890",
    "end": "325900"
  },
  {
    "text": "originates in that local part of the world so what that ends up meaning is",
    "start": "325900",
    "end": "331270"
  },
  {
    "text": "that we are actually diffusing our traffic across all of the tenants on the",
    "start": "331270",
    "end": "337060"
  },
  {
    "text": "machine potentially every request handling tens of thousands of requests per second with a new new tenant each",
    "start": "337060",
    "end": "345820"
  },
  {
    "text": "time handling that request that means that context switching overhead becomes a problem for us like it isn't for",
    "start": "345820",
    "end": "352020"
  },
  {
    "text": "basically anyone else you know a big VM cloud provider will usually pin your VM",
    "start": "352020",
    "end": "359470"
  },
  {
    "text": "to a core and it just runs on that core and it doesn't switch at all we're at",
    "start": "359470",
    "end": "366340"
  },
  {
    "text": "the other end of the spectrum to the point where even switching processes can",
    "start": "366340",
    "end": "371590"
  },
  {
    "text": "be too much of a problem because of all the caches that get flushed in the CPU so we need to potentially put lots of",
    "start": "371590",
    "end": "376600"
  },
  {
    "text": "tenants in a single process and then finally startup time if we can get",
    "start": "376600",
    "end": "382540"
  },
  {
    "text": "startup time to be really really fast then we don't have to worry about memory",
    "start": "382540",
    "end": "387610"
  },
  {
    "text": "usage because we can just kick out the the tenants who aren't currently",
    "start": "387610",
    "end": "392770"
  },
  {
    "text": "handling traffic and start them back up again when they're needed so ideally we'd like something that's just a couple",
    "start": "392770",
    "end": "398530"
  },
  {
    "text": "of milliseconds so it's not even perceptible that that we've initiated a cold start when",
    "start": "398530",
    "end": "403759"
  },
  {
    "text": "the request comes in now we're not the only ones who need this stuff just to",
    "start": "403759",
    "end": "410629"
  },
  {
    "text": "give you an idea of some other use cases so if you have an API that you're",
    "start": "410629",
    "end": "417529"
  },
  {
    "text": "exposing for the world over the web especially like a server-to-server kind of thing you're the clients that API",
    "start": "417529",
    "end": "424339"
  },
  {
    "text": "might not like the latency incurred by going over the internet to talk to it they might want to host their code",
    "start": "424339",
    "end": "430459"
  },
  {
    "text": "directly on your servers in some way if you wanted to give them the ability to do that you probably aren't going to",
    "start": "430459",
    "end": "436579"
  },
  {
    "text": "give each of them a virtual machine or even anything heavyweight you would like",
    "start": "436579",
    "end": "441739"
  },
  {
    "text": "something very cheap if you're doing big data processing say you have a gigantic",
    "start": "441739",
    "end": "447050"
  },
  {
    "text": "data set and you have multiple untrusted third parties that want to do mapreduces",
    "start": "447050",
    "end": "452479"
  },
  {
    "text": "over this and big data processing you cannot bring the data to the software",
    "start": "452479",
    "end": "459169"
  },
  {
    "text": "you have to bring the software to the data so you need a very efficient way of taking some code from someone and",
    "start": "459169",
    "end": "465559"
  },
  {
    "text": "spreading across all of your machines where the data actually lives and another use case is something like web",
    "start": "465559",
    "end": "472969"
  },
  {
    "text": "browsers where you people are browsing the internet they download code from",
    "start": "472969",
    "end": "478849"
  },
  {
    "text": "every site that they go to so that the site can be more interactive running locally but you know don't we already",
    "start": "478849",
    "end": "485539"
  },
  {
    "text": "have that we've actually had that for quite some time about 20 years now so",
    "start": "485539",
    "end": "492939"
  },
  {
    "text": "that's interesting because we're we've been looking at the server technology and it's too inefficient to work for",
    "start": "492939",
    "end": "499610"
  },
  {
    "text": "this use case but could it be that web browsers have already developed the",
    "start": "499610",
    "end": "505219"
  },
  {
    "text": "technology that we need to solve our problem and it turns out that indeed",
    "start": "505219",
    "end": "511969"
  },
  {
    "text": "they have web browsers are optimized to start up code really really fast because",
    "start": "511969",
    "end": "519110"
  },
  {
    "text": "the user is sitting there waiting for it to start they're optimized to allow for",
    "start": "519110",
    "end": "526309"
  },
  {
    "text": "application code to be relatively small so that it can download quickly they're",
    "start": "526309",
    "end": "531980"
  },
  {
    "text": "optimized to have lots of separate separates and boxes at the same",
    "start": "531980",
    "end": "538230"
  },
  {
    "text": "time not just for separate cabs but each iframe within a tab potentially needs it",
    "start": "538230",
    "end": "545010"
  },
  {
    "text": "was potentially a different website and needs a sandbox it may be an ad network it may be the facebook like button those",
    "start": "545010",
    "end": "551400"
  },
  {
    "text": "are all iframes you don't see it but they're all whole separate JavaScript contexts and of course web browsers have",
    "start": "551400",
    "end": "559740"
  },
  {
    "text": "been probably the most hostile security environment that exists for quite some",
    "start": "559740",
    "end": "566250"
  },
  {
    "text": "time if you can hack somebody's web browser you can do a lot of damage all",
    "start": "566250",
    "end": "573210"
  },
  {
    "text": "you have to do is convince someone to click on a bad link and potentially you",
    "start": "573210",
    "end": "579030"
  },
  {
    "text": "can get into all their other websites and so on so this led us to the",
    "start": "579030",
    "end": "586680"
  },
  {
    "text": "conclusion that what we want is the technology from web browsers and in particular we chose v8 which is the",
    "start": "586680",
    "end": "593820"
  },
  {
    "text": "JavaScript execution engine from google chrome it seems to have the most",
    "start": "593820",
    "end": "599550"
  },
  {
    "text": "resources behind it basically which is why we chose it though some of the others might work well too and we found",
    "start": "599550",
    "end": "607140"
  },
  {
    "text": "that this works great as an engine for extreme multi-tenancy so go into the",
    "start": "607140",
    "end": "615540"
  },
  {
    "text": "details a little bit we've been using this word isolate instead of VMs or",
    "start": "615540",
    "end": "621660"
  },
  {
    "text": "containers we now have isolates what is an isolate it actually comes from part",
    "start": "621660",
    "end": "626940"
  },
  {
    "text": "of the v8 and betters API when you build around v8 you're going to be using this",
    "start": "626940",
    "end": "635040"
  },
  {
    "text": "C++ interface v8 as a library it has a class called isolate and what an isolate",
    "start": "635040",
    "end": "642950"
  },
  {
    "text": "JavaScript execution environment it's what we used to call virtual machines like JVM Java Virtual Machine",
    "start": "642950",
    "end": "650580"
  },
  {
    "text": "now the word virtual machine has these two meanings and most people mean something entirely different so so we",
    "start": "650580",
    "end": "657750"
  },
  {
    "text": "use the word isolate instead now here's",
    "start": "657750",
    "end": "663810"
  },
  {
    "text": "why our one reason why isolates turn out to be so much more efficient so you know",
    "start": "663810",
    "end": "674970"
  },
  {
    "text": "in in virtual machines the the application brings its own kernel in its",
    "start": "674970",
    "end": "680550"
  },
  {
    "text": "own operating system traditionally and so that's you you get huge images with",
    "start": "680550",
    "end": "685620"
  },
  {
    "text": "containers they got so much more efficient because now the operating system kernel is shared between all of",
    "start": "685620",
    "end": "692190"
  },
  {
    "text": "the tenants and the applications only need to bring their own code and any",
    "start": "692190",
    "end": "697580"
  },
  {
    "text": "libraries and maybe language environments that they build on top of so they got a lot smaller and less less",
    "start": "697580",
    "end": "706170"
  },
  {
    "text": "resource-intensive with isolates we can go further so now we have a whole all",
    "start": "706170",
    "end": "714420"
  },
  {
    "text": "these user space think traditionally user space things that we can share between all of the tenants of our system",
    "start": "714420",
    "end": "720800"
  },
  {
    "text": "we have the JavaScript runtime which includes a garbage collector and JIT",
    "start": "720800",
    "end": "727500"
  },
  {
    "text": "compiler so very complicated pieces of code if we can have only one copy of that code instead of several that helps",
    "start": "727500",
    "end": "733890"
  },
  {
    "text": "a lot and we can provide high-level api's instead of providing you know in",
    "start": "733890",
    "end": "740670"
  },
  {
    "text": "containers you your API is the system call API that's pretty low-level if we can do something much higher level we",
    "start": "740670",
    "end": "746580"
  },
  {
    "text": "can do things like have the same HTTP implementation shared between all of the",
    "start": "746580",
    "end": "752940"
  },
  {
    "text": "the tenants and hopefully they then only need to bring their own business logic",
    "start": "752940",
    "end": "758640"
  },
  {
    "text": "and not a big pile of dependencies but",
    "start": "758640",
    "end": "765060"
  },
  {
    "text": "we don't want to just go start inventing a bunch of our own new API for this it turns out there are standards so the the",
    "start": "765060",
    "end": "774750"
  },
  {
    "text": "browser as we know has api's for things like HTTP requests",
    "start": "774750",
    "end": "783080"
  },
  {
    "text": "traditionally XML HTTP requests but these days it's better to use the fetch API what you might not know is that the",
    "start": "783080",
    "end": "789870"
  },
  {
    "text": "browser also has standardized API s for acting as an HTTP server in the what's",
    "start": "789870",
    "end": "797940"
  },
  {
    "text": "called the the service workers standard which is a lets you run trips on the browser side that intercept",
    "start": "797940",
    "end": "803880"
  },
  {
    "text": "HTTP requests this turns out to be exactly what we want for our use case so we didn't have to develop any new api's",
    "start": "803880",
    "end": "810690"
  },
  {
    "text": "of our own and this is great because it means that this code that runs on cutler",
    "start": "810690",
    "end": "816720"
  },
  {
    "text": "workers is potentially portable to other environments especially if some of the other server list providers decide to",
    "start": "816720",
    "end": "822390"
  },
  {
    "text": "also support standard api's at some point this is an example here of a",
    "start": "822390",
    "end": "830640"
  },
  {
    "text": "complete HTTP proxy server written in about ten lines of code and it actually",
    "start": "830640",
    "end": "836730"
  },
  {
    "text": "does something useful this this server is checking for incoming requests whose",
    "start": "836730",
    "end": "842190"
  },
  {
    "text": "urls and with dot jpg and it is sending those requests to a different back-end than everything else something you know",
    "start": "842190",
    "end": "848940"
  },
  {
    "text": "you might see all the time but what's interesting is there are no no imports",
    "start": "848940",
    "end": "854850"
  },
  {
    "text": "no require statements here this is just using the built in API is in the platform and ten lines of code and we",
    "start": "854850",
    "end": "861360"
  },
  {
    "text": "get something something useful that's how we make code footprint so much",
    "start": "861360",
    "end": "867150"
  },
  {
    "text": "smaller a lot of people lately have been",
    "start": "867150",
    "end": "873060"
  },
  {
    "text": "talking about web assembly so with v8 we get web assembly for free it's it's part",
    "start": "873060",
    "end": "881100"
  },
  {
    "text": "of v8 and so we've actually enabled this in workers and so that means potentially with web assembly the promise is now you",
    "start": "881100",
    "end": "887430"
  },
  {
    "text": "can write in any language not just JavaScript there's just a little problem with this currently which is that now",
    "start": "887430",
    "end": "895140"
  },
  {
    "text": "you're back to shipping your own language runtime because potentially every tenant has their own language that",
    "start": "895140",
    "end": "901200"
  },
  {
    "text": "they want to use so you see people they want to use go and so now they're",
    "start": "901200",
    "end": "906270"
  },
  {
    "text": "shipping the go garbage collector and the go green threads implementation and all of the standard libraries for go and",
    "start": "906270",
    "end": "912150"
  },
  {
    "text": "it's very large and it goes over the various limits this is not solved yet",
    "start": "912150",
    "end": "920400"
  },
  {
    "text": "but it will be what we essentially need here is a way for a way to do dynamic",
    "start": "920400",
    "end": "927600"
  },
  {
    "text": "linking on web assembly modules so that the the go 1.11 runtime can be something",
    "start": "927600",
    "end": "934800"
  },
  {
    "text": "that we share across multiple isolates and then",
    "start": "934800",
    "end": "940320"
  },
  {
    "text": "each one brings its own application code on top of that the good news is we're going to be working on that if you go to",
    "start": "940320",
    "end": "946500"
  },
  {
    "text": "Ashley Williams talk tomorrow she'll tell you all about what we're going to be building on this to fix this so you",
    "start": "946500",
    "end": "958560"
  },
  {
    "text": "can start to see why this is part of the operating systems track it's looking a",
    "start": "958560",
    "end": "963690"
  },
  {
    "text": "bit like an operating system and it's about to look even more like an operating system so another thing that",
    "start": "963690",
    "end": "970020"
  },
  {
    "text": "we have to do how do we figure out when",
    "start": "970020",
    "end": "975630"
  },
  {
    "text": "to start up apps make sure they don't use too many resources and so on so in a",
    "start": "975630",
    "end": "984300"
  },
  {
    "text": "traditional operating system you have a bunch of processes there using memory and they kind of allocate the amount of",
    "start": "984300",
    "end": "992250"
  },
  {
    "text": "memory that they want and the operating system has to live with that and hope that everything fits in memory because",
    "start": "992250",
    "end": "1000500"
  },
  {
    "text": "if it doesn't then it has to trick take drastic measures in Linux there's something called the oom killer out of",
    "start": "1000500",
    "end": "1006650"
  },
  {
    "text": "memory killer that kicks in when you run out of memory and it tries to choose the least important process and kill it",
    "start": "1006650",
    "end": "1013510"
  },
  {
    "text": "doesn't always choose correctly and it's a problem because these processes have state in our environment these isolates",
    "start": "1013510",
    "end": "1024110"
  },
  {
    "text": "are essentially stateless when they're not actively handling a request they don't have any other state that's",
    "start": "1024110",
    "end": "1029689"
  },
  {
    "text": "important we can kick them out at any time so we end up with a completely different memory management strategy",
    "start": "1029690",
    "end": "1035510"
  },
  {
    "text": "which is we say okay we want to we can set by configuration that we're going to",
    "start": "1035510",
    "end": "1041900"
  },
  {
    "text": "use 8 gigabytes of memory and we'll fill that up until it's full and then we'll",
    "start": "1041900",
    "end": "1047839"
  },
  {
    "text": "evict the least recently used isolate to make sure that we stay under that 8 gigabytes and it's it's pretty neat to",
    "start": "1047840",
    "end": "1056090"
  },
  {
    "text": "know exactly how much memory your server needs to use makes a lot of things",
    "start": "1056090",
    "end": "1063350"
  },
  {
    "text": "easier and now we have this trade-off basically between memory and CPU",
    "start": "1063350",
    "end": "1069010"
  },
  {
    "text": "if we have too many customers cycling",
    "start": "1069010",
    "end": "1074590"
  },
  {
    "text": "through too often then we'll will be restarting isolates that we recently",
    "start": "1074590",
    "end": "1079929"
  },
  {
    "text": "evicted too often but it's a it's a sliding scale and we can monitor it over time there's not going to be an",
    "start": "1079929",
    "end": "1085809"
  },
  {
    "text": "emergency where all of a sudden were out of space and then we can we can bump up",
    "start": "1085809",
    "end": "1092140"
  },
  {
    "text": "the memory when we see that there's too much churn happening we need to make",
    "start": "1092140",
    "end": "1098559"
  },
  {
    "text": "sure that an isolate can't consume all of the resources on a system and there's",
    "start": "1098559",
    "end": "1105610"
  },
  {
    "text": "a couple of ways that we do that so for CPU time we actually limit each",
    "start": "1105610",
    "end": "1113169"
  },
  {
    "text": "isolate to 50 milliseconds of CPU execution per request and the way we do",
    "start": "1113169",
    "end": "1121690"
  },
  {
    "text": "that is through the the Linux timer create system call lets you set up to receive a signal when a certain amount",
    "start": "1121690",
    "end": "1129309"
  },
  {
    "text": "of CPU time has gone by and then from that signal handler we can call a v8 function called terminate execution",
    "start": "1129309",
    "end": "1135790"
  },
  {
    "text": "which will actually cancel execution wherever it is if you have just a like",
    "start": "1135790",
    "end": "1140919"
  },
  {
    "text": "wild true open brace close brace infinite loop it can still cancel that",
    "start": "1140919",
    "end": "1145929"
  },
  {
    "text": "it essentially throws an uncatchable exception and then we regain control and",
    "start": "1145929",
    "end": "1151840"
  },
  {
    "text": "we can air out that request note that we",
    "start": "1151840",
    "end": "1157240"
  },
  {
    "text": "run so an isolate in JavaScript is a single threaded thing javascript is",
    "start": "1157240",
    "end": "1162820"
  },
  {
    "text": "inherently a single threaded event-driven language so an isolate is only running on one thread at a time",
    "start": "1162820",
    "end": "1169570"
  },
  {
    "text": "other ice lists can be on other threads we also we don't technically have to but",
    "start": "1169570",
    "end": "1176260"
  },
  {
    "text": "in our our design we never run more than one isolate on a thread at a time like",
    "start": "1176260",
    "end": "1182470"
  },
  {
    "text": "we could we could have multiple isolates assigned to one thread and handle the events as they come in but what we don't",
    "start": "1182470",
    "end": "1189580"
  },
  {
    "text": "want is for one isolate to be able to block another with a long computation and create latency for someone else so",
    "start": "1189580",
    "end": "1195429"
  },
  {
    "text": "we put them each on different threats memory is interesting v8 has",
    "start": "1195429",
    "end": "1202750"
  },
  {
    "text": "way for you to say I don't want this isolate to use more than this amount of memory please stop it at that point the",
    "start": "1202750",
    "end": "1209710"
  },
  {
    "text": "problem is when you hit that limit it aborts the process and that means we've",
    "start": "1209710",
    "end": "1216490"
  },
  {
    "text": "aborted all the other isolates on the machine as well so that's not what we want so instead we end up having to do",
    "start": "1216490",
    "end": "1223600"
  },
  {
    "text": "more of a monitoring approach after each time we call into JavaScript when it",
    "start": "1223600",
    "end": "1228670"
  },
  {
    "text": "returns we check how much you've spaced it is now using if it's gone a little",
    "start": "1228670",
    "end": "1234430"
  },
  {
    "text": "bit over its limit then we'll do a soft eviction where it can continue handling in-flight requests but for any new",
    "start": "1234430",
    "end": "1241120"
  },
  {
    "text": "requests we can just start up another isolate and if it goes way over then we'll just kill it and cancel all the",
    "start": "1241120",
    "end": "1246580"
  },
  {
    "text": "requests and this works in conjunction with the the CPU time limit because",
    "start": "1246580",
    "end": "1254910"
  },
  {
    "text": "generally you can't you can't allocate a whole lot of data without spending some",
    "start": "1254910",
    "end": "1263740"
  },
  {
    "text": "CPU time on that at least not javascript objects and then typed arrays are something different but long story so",
    "start": "1263740",
    "end": "1276060"
  },
  {
    "text": "another problem is we need to get our code or the the user's code to all the",
    "start": "1276060",
    "end": "1281650"
  },
  {
    "text": "machines that that run that code and it sure would be sad if we had achieved our",
    "start": "1281650",
    "end": "1289240"
  },
  {
    "text": "5 millisecond startup time only to spend 200 milliseconds waiting for some",
    "start": "1289240",
    "end": "1295570"
  },
  {
    "text": "storage server to return the code to us before we could even execute it so what",
    "start": "1295570",
    "end": "1301840"
  },
  {
    "text": "we're doing right now is actually we distribute the code to all of the machines in our fleet up front we",
    "start": "1301840",
    "end": "1310240"
  },
  {
    "text": "already had technology for this to distribute configuration changes to the",
    "start": "1310240",
    "end": "1315820"
  },
  {
    "text": "edge and we just said code is another kind of configuration and threw it in there and it works and it means that",
    "start": "1315820",
    "end": "1323460"
  },
  {
    "text": "you're it takes about three seconds between when you upload your code and",
    "start": "1323460",
    "end": "1329770"
  },
  {
    "text": "when it's on every machine in our fleet and because the code footprint of each",
    "start": "1329770",
    "end": "1338000"
  },
  {
    "text": "of these is so small this is basically fine so far we have enough disk space",
    "start": "1338000",
    "end": "1343940"
  },
  {
    "text": "now it may come to the point where we don't at some point and then we'll have to make the trade-off of like deciding",
    "start": "1343940",
    "end": "1351350"
  },
  {
    "text": "who gets slower startups because we need to store their code in a more central",
    "start": "1351350",
    "end": "1356750"
  },
  {
    "text": "location but it could probably be a per Colo thing instead of a every single machine thing and so shouldn't add too",
    "start": "1356750",
    "end": "1363800"
  },
  {
    "text": "much latency so let me get to the thing",
    "start": "1363800",
    "end": "1370940"
  },
  {
    "text": "that everyone wants to ask me about which is security there's a question as",
    "start": "1370940",
    "end": "1378950"
  },
  {
    "text": "to whether v8 is secure enough for servers and you'll see actually some",
    "start": "1378950",
    "end": "1385540"
  },
  {
    "text": "security experts saying that it isn't it surprisingly enough some people at Google saying that it isn't and what did",
    "start": "1385780",
    "end": "1393050"
  },
  {
    "text": "they what do they mean by this and actually so well ok so here's basically",
    "start": "1393050",
    "end": "1402440"
  },
  {
    "text": "the problem and I said my slides are gonna get ugly they've gotten ugly this",
    "start": "1402440",
    "end": "1408560"
  },
  {
    "text": "is ugly not just visually but also for the content v8 has these bugs in this",
    "start": "1408560",
    "end": "1417230"
  },
  {
    "text": "particular case this is two lines of code from deep in the v8 optimizer where",
    "start": "1417230",
    "end": "1423230"
  },
  {
    "text": "it is these these two lines basically say that the function math dot X boom",
    "start": "1423230",
    "end": "1428540"
  },
  {
    "text": "one which calculates e to power of X minus one I'm not good at math so I",
    "start": "1428540",
    "end": "1436340"
  },
  {
    "text": "don't know why you want that but I'm sure there's a reason it the this line",
    "start": "1436340",
    "end": "1443660"
  },
  {
    "text": "says to the optimizer that it returns either a plain number or nan not a number turns out though that it can also",
    "start": "1443660",
    "end": "1451100"
  },
  {
    "text": "return negative zero and for some reason negative zero is not a plain number in",
    "start": "1451100",
    "end": "1456560"
  },
  {
    "text": "pH type system as a result people were",
    "start": "1456560",
    "end": "1462140"
  },
  {
    "text": "able to exploit this this one little error to completely break out of the v8 sandbox",
    "start": "1462140",
    "end": "1467299"
  },
  {
    "text": "by basically tricking the system into thinking something was a different type",
    "start": "1467299",
    "end": "1472759"
  },
  {
    "text": "or triggering an optimization that shouldn't have happened and the details",
    "start": "1472759",
    "end": "1478039"
  },
  {
    "text": "are complicated and really interesting if you want to know more check out this",
    "start": "1478039",
    "end": "1483110"
  },
  {
    "text": "this blog post it's very understandable you don't need to know v8 details but this guy andrea Biondo wrote it all up",
    "start": "1483110",
    "end": "1492559"
  },
  {
    "text": "it's very interesting so that sounds pretty bad like you can imagine that",
    "start": "1492559",
    "end": "1499340"
  },
  {
    "text": "there's going to be lots of bugs like this in v8 it's a big complicated system and the the assertion is that because of",
    "start": "1499340",
    "end": "1509720"
  },
  {
    "text": "this v8 is not trustworthy enough whereas say virtual machines and and",
    "start": "1509720",
    "end": "1515749"
  },
  {
    "text": "maybe containers are more trustworthy because they have a smaller attack service well here's the thing",
    "start": "1515749",
    "end": "1523489"
  },
  {
    "text": "nothing is secure security is not an on or off thing everything has bugs virtual",
    "start": "1523489",
    "end": "1532279"
  },
  {
    "text": "machines have bugs kernels have bugs Hardware has bugs and we really need to",
    "start": "1532279",
    "end": "1538909"
  },
  {
    "text": "be thinking about risk management ways that we can account for the fact that",
    "start": "1538909",
    "end": "1546379"
  },
  {
    "text": "there are going to be bugs and make sure that they have minimum impact and you",
    "start": "1546379",
    "end": "1556220"
  },
  {
    "text": "know the bugs in v8 the the frequency of bug reports in v8 there's kind of two",
    "start": "1556220",
    "end": "1564649"
  },
  {
    "text": "ways to look at it that could make it bad or good so v8 has relatively more",
    "start": "1564649",
    "end": "1572659"
  },
  {
    "text": "bugs reported against it than virtual machines so that that's bad because it's",
    "start": "1572659",
    "end": "1579470"
  },
  {
    "text": "showing that there's a larger attack surface there's more things to to attack but there's also a good side to this",
    "start": "1579470",
    "end": "1586879"
  },
  {
    "text": "which is that means that there's a lot of research being done and actually the",
    "start": "1586879",
    "end": "1593929"
  },
  {
    "text": "vast majority of v8 bug reports that that like I have access to before the rest of the world I look at them and",
    "start": "1593929",
    "end": "1599720"
  },
  {
    "text": "almost every single one of the is found by v-8 sone fuzzing infrastructure it's found by Google",
    "start": "1599720",
    "end": "1607369"
  },
  {
    "text": "essentially they've put an amazing amount of effort into this and I just",
    "start": "1607369",
    "end": "1613669"
  },
  {
    "text": "learned actually recently that not only does v8 have a bug bounty where if you",
    "start": "1613669",
    "end": "1618739"
  },
  {
    "text": "find a sandbox breakout Google will pay you 15,000 dollars maybe more which",
    "start": "1618739",
    "end": "1626210"
  },
  {
    "text": "makes it like so if you're gonna use it to exploit someone you need to be",
    "start": "1626210",
    "end": "1634669"
  },
  {
    "text": "getting more than that out of it right but they also have a bounty for for",
    "start": "1634669",
    "end": "1641869"
  },
  {
    "text": "fuzzers if you write a new buzzer and add it to their their infrastructure",
    "start": "1641869",
    "end": "1646999"
  },
  {
    "text": "like a new test case basically and it finds bugs they will pay you for those",
    "start": "1646999",
    "end": "1652159"
  },
  {
    "text": "bucks that was that's really interesting to me so then and people do this every",
    "start": "1652159",
    "end": "1658279"
  },
  {
    "text": "now and then someone will submit a new fuzzer and it'll find a bunch of new things and they'll get paid out and it's",
    "start": "1658279",
    "end": "1664309"
  },
  {
    "text": "just like awesome how much has gone into this on the other hand like if you're",
    "start": "1664309",
    "end": "1669559"
  },
  {
    "text": "looking at a a security solution and it has no bugs ever reported against it you",
    "start": "1669559",
    "end": "1675739"
  },
  {
    "text": "don't want to use that because what that means is no one has looked no one writes bug-free code so this is why I'm feeling",
    "start": "1675739",
    "end": "1686269"
  },
  {
    "text": "fairly comfortable this and now let's",
    "start": "1686269",
    "end": "1693049"
  },
  {
    "text": "talk about risk management how can we limit the the damage caused when a bug",
    "start": "1693049",
    "end": "1700009"
  },
  {
    "text": "happens so there's things that you may do in your browser today to protect",
    "start": "1700009",
    "end": "1706249"
  },
  {
    "text": "yourself against browser bugs and some of them apply to the server as well obvious one",
    "start": "1706249",
    "end": "1711559"
  },
  {
    "text": "you probably install chrome updates as soon as they become available well we can do something on the server",
    "start": "1711559",
    "end": "1719119"
  },
  {
    "text": "that's even better we can see the when the commit lands in the v8 repository",
    "start": "1719119",
    "end": "1725479"
  },
  {
    "text": "which happens before the chrome update and automate our build system so that we",
    "start": "1725479",
    "end": "1731720"
  },
  {
    "text": "can get that out into production within hours automatically we don't even need someone",
    "start": "1731720",
    "end": "1737660"
  },
  {
    "text": "to click write something that probably",
    "start": "1737660",
    "end": "1743000"
  },
  {
    "text": "fewer of you do on the browser but I'm sure a few of you is used separate browser profiles for visiting suspicious",
    "start": "1743000",
    "end": "1750410"
  },
  {
    "text": "sites versus visiting your important sites this is actually really easy to do in chrome there's great user management",
    "start": "1750410",
    "end": "1757100"
  },
  {
    "text": "also in other browsers as well or some people prefer to just use separate browsers but we can do something similar",
    "start": "1757100",
    "end": "1763670"
  },
  {
    "text": "to this on the server which is we can like we don't have the ability to spin",
    "start": "1763670",
    "end": "1769430"
  },
  {
    "text": "up a process for every single tenant but we can spin up a process like one for",
    "start": "1769430",
    "end": "1775300"
  },
  {
    "text": "enterprise users one for established users who have been paying for a while",
    "start": "1775300",
    "end": "1780530"
  },
  {
    "text": "and one for free users when they come we",
    "start": "1780530",
    "end": "1785840"
  },
  {
    "text": "don't currently have a free plan but if we were to in the future and then we can",
    "start": "1785840",
    "end": "1791810"
  },
  {
    "text": "put additional isolation around those we can put those in a container or in a VM or whatever else we want and yeah so",
    "start": "1791810",
    "end": "1800840"
  },
  {
    "text": "that makes it pretty hard for an attacker to just like sign up and get something good there's some things some",
    "start": "1800840",
    "end": "1807710"
  },
  {
    "text": "risk management things we can do on the server that we cannot do so easily on the browser one of them is we store",
    "start": "1807710",
    "end": "1814910"
  },
  {
    "text": "every single piece of code that executes on our platform because we do not allow",
    "start": "1814910",
    "end": "1821180"
  },
  {
    "text": "you to call eval to evaluate code at runtime you have to upload your code to",
    "start": "1821180",
    "end": "1827000"
  },
  {
    "text": "us and then we distribute it and what that means is that if anyone tries to",
    "start": "1827000",
    "end": "1832940"
  },
  {
    "text": "upload an attack we now have a record of that attack if it's a zero day that they have attacked they have now burned their",
    "start": "1832940",
    "end": "1840800"
  },
  {
    "text": "zero day when we take a look at that code and you know we'll submit it to to",
    "start": "1840800",
    "end": "1847400"
  },
  {
    "text": "Google and then the person who uploaded it won't get their $15,000 and we can we",
    "start": "1847400",
    "end": "1855620"
  },
  {
    "text": "can do a lot of monitoring for example we can watch for seg faults anywhere on",
    "start": "1855620",
    "end": "1864770"
  },
  {
    "text": "any of our servers like they they are rare and when they happen we raise an",
    "start": "1864770",
    "end": "1870370"
  },
  {
    "text": "alert we look at it and we see in the crash report it says what script was running so we're going to immediately look at that script which we have",
    "start": "1870370",
    "end": "1876670"
  },
  {
    "text": "available now Chrome can't really do",
    "start": "1876670",
    "end": "1883780"
  },
  {
    "text": "this because it can't just upload any script it sees because it's potentially a privacy violation and they can't",
    "start": "1883780",
    "end": "1892030"
  },
  {
    "text": "investigate every crash report they get because there's their the browser is",
    "start": "1892030",
    "end": "1898600"
  },
  {
    "text": "running on so many different pieces of hardware some of which are just terrible they get a constant stream of these",
    "start": "1898600",
    "end": "1904840"
  },
  {
    "text": "crash reports it could be terrible hardware it could be that the user has installed malicious software already and",
    "start": "1904840",
    "end": "1911200"
  },
  {
    "text": "it's trying to modify chrome that happens a lot and that causes a bunch of crash reports and all these other things so they have a much harder time actually",
    "start": "1911200",
    "end": "1917230"
  },
  {
    "text": "like looking for the attacks so what",
    "start": "1917230",
    "end": "1925059"
  },
  {
    "text": "about spectre speculative execution side",
    "start": "1925059",
    "end": "1930580"
  },
  {
    "text": "channels so a couple of weeks ago the v8",
    "start": "1930580",
    "end": "1936340"
  },
  {
    "text": "team at Google put out this paper that basically said that they cannot solve Spectre and so therefore chrome is",
    "start": "1936340",
    "end": "1943480"
  },
  {
    "text": "moving towards isolating every every site in its own process instead of doing",
    "start": "1943480",
    "end": "1951250"
  },
  {
    "text": "anything internally and in particular",
    "start": "1951250",
    "end": "1956679"
  },
  {
    "text": "they said like timers timer mitigations are useless and so when this came out we",
    "start": "1956679",
    "end": "1963240"
  },
  {
    "text": "started getting a lot of people asking us doesn't that apply to CloudFlare is",
    "start": "1963240",
    "end": "1969900"
  },
  {
    "text": "are you totally vulnerable to Spectre well here's the thing you have to be",
    "start": "1969900",
    "end": "1975520"
  },
  {
    "text": "careful when you read this paper to understand what it is actually saying it",
    "start": "1975520",
    "end": "1981220"
  },
  {
    "text": "is saying that the v8 team has not been able to find anything else they can do",
    "start": "1981220",
    "end": "1987400"
  },
  {
    "text": "except for rely on process isolation it is not saying that process isolation",
    "start": "1987400",
    "end": "1992500"
  },
  {
    "text": "solves the problem and the problem is if you you go to the the Intel side",
    "start": "1992500",
    "end": "2001800"
  },
  {
    "text": "there have been a bunch of different variants of Spector found already and",
    "start": "2001800",
    "end": "2006820"
  },
  {
    "text": "each time it requires sort of a custom fix and miraculously so far they've",
    "start": "2006820",
    "end": "2012400"
  },
  {
    "text": "always been able to somehow fix it through some crazy thing they do in in",
    "start": "2012400",
    "end": "2017710"
  },
  {
    "text": "micro code or whatnot usually there's a gigantic performance penalty sometimes people say the",
    "start": "2017710",
    "end": "2024340"
  },
  {
    "text": "performance penalty isn't worth it but they're not done like there's going to",
    "start": "2024340",
    "end": "2031540"
  },
  {
    "text": "be more bugs they're just not found yet and we don't know for sure if all these",
    "start": "2031540",
    "end": "2037000"
  },
  {
    "text": "bugs will have mitigations that are easy in mitigations that are easier than buying new hardware it's it's kind of",
    "start": "2037000",
    "end": "2044200"
  },
  {
    "text": "scary when you talk to the people who have been researching a lot of this stuff they're like I don't know like we",
    "start": "2044200",
    "end": "2049960"
  },
  {
    "text": "could see a bug that breaks out of virtual machines and not have anything to do or anything we can do about it but",
    "start": "2049960",
    "end": "2057460"
  },
  {
    "text": "in cobblers case we actually have some things we can do that basically nobody",
    "start": "2057460",
    "end": "2064090"
  },
  {
    "text": "else can do so we're taking a different",
    "start": "2064090",
    "end": "2070060"
  },
  {
    "text": "entirely different approach here in our API we have actually removed all timers",
    "start": "2070060",
    "end": "2078190"
  },
  {
    "text": "from our API we can do that because we don't have any backwards compatibility legacy that we need to support and",
    "start": "2078190",
    "end": "2084669"
  },
  {
    "text": "because our API is at a much higher level to the point where applications",
    "start": "2084670",
    "end": "2091510"
  },
  {
    "text": "don't usually need to to time things like if you're implementing say a new",
    "start": "2091510",
    "end": "2097260"
  },
  {
    "text": "pthreads library you need access to a high position timer to do it well or a",
    "start": "2097260",
    "end": "2102520"
  },
  {
    "text": "new garbage collector you need a high position timer for that but we provide those in this this platform the",
    "start": "2102520",
    "end": "2108190"
  },
  {
    "text": "application only does business logic e stuff we actually the application can",
    "start": "2108190",
    "end": "2115630"
  },
  {
    "text": "still ask what time it is it can call date dot now but the value that's returned by that does not advance during",
    "start": "2115630",
    "end": "2122440"
  },
  {
    "text": "execution so it essentially tells you when the last Network message was received so if you check it and then run",
    "start": "2122440",
    "end": "2130720"
  },
  {
    "text": "a Spectre attack in a loop and then check it again it returns the same value and the difference is so you think that you just ran at",
    "start": "2130720",
    "end": "2136240"
  },
  {
    "text": "infinite speed we also don't provide any",
    "start": "2136240",
    "end": "2141810"
  },
  {
    "text": "concurrency primitives because any kind of concurrency can usually be used to",
    "start": "2141810",
    "end": "2149050"
  },
  {
    "text": "build a timer by comparing your own execution against whatever happens in the other thread and that's another",
    "start": "2149050",
    "end": "2156040"
  },
  {
    "text": "thing that like browsers can't do that they have this platform they need to support that already has explicit",
    "start": "2156040",
    "end": "2162040"
  },
  {
    "text": "concurrency in it and also has implicit concurrency in like rendering you know you start some rendering and then you do",
    "start": "2162040",
    "end": "2168580"
  },
  {
    "text": "something and you check how much the rendering has progressed in our platform",
    "start": "2168580",
    "end": "2173650"
  },
  {
    "text": "we can eliminate all of those now it is of course still possible to do remote",
    "start": "2173650",
    "end": "2181510"
  },
  {
    "text": "timing the client can send a request to their to their worker and see how long",
    "start": "2181510",
    "end": "2186670"
  },
  {
    "text": "it takes to reply that's over the Internet there's noise in that but noise",
    "start": "2186670",
    "end": "2193480"
  },
  {
    "text": "doesn't mean it's impossible to attack no amount of noise will prevent a",
    "start": "2193480",
    "end": "2198970"
  },
  {
    "text": "spectre attack the Specter tech just has to amplify itself until the point where the difference between a 1 bit and a 0",
    "start": "2198970",
    "end": "2205930"
  },
  {
    "text": "bit is larger than the noise window but",
    "start": "2205930",
    "end": "2211020"
  },
  {
    "text": "the noise does lower the bandwidth of",
    "start": "2211020",
    "end": "2217260"
  },
  {
    "text": "the attack and it can lower it far enough that now we have an opportunity to come in there and notice that",
    "start": "2217260",
    "end": "2224080"
  },
  {
    "text": "something fishy is going on we can look for things like high cache misses or",
    "start": "2224080",
    "end": "2230560"
  },
  {
    "text": "other telltale signs that someone is doing something fishy and then we can we have this other superpower which is that",
    "start": "2230560",
    "end": "2236980"
  },
  {
    "text": "because the isolates are stateless we can just move them at that point to another processor to another machine let",
    "start": "2236980",
    "end": "2243730"
  },
  {
    "text": "them keep running so if we have a false positive that's fine the worker will",
    "start": "2243730",
    "end": "2249340"
  },
  {
    "text": "continue to do its job but now we've taken the attackers and move them away",
    "start": "2249340",
    "end": "2255750"
  },
  {
    "text": "and everyone else is potentially safe so",
    "start": "2255750",
    "end": "2262590"
  },
  {
    "text": "but this is as I said it hasn't been tried",
    "start": "2262590",
    "end": "2268270"
  },
  {
    "text": "four so there's a lot of research to do and we're going to be working with some of the foremost researchers in the in",
    "start": "2268270",
    "end": "2277590"
  },
  {
    "text": "speculative side channels to check our work here there will be announcements",
    "start": "2277590",
    "end": "2283060"
  },
  {
    "text": "about that soon once we have the details worked out but I'm backing up a bit like",
    "start": "2283060",
    "end": "2291180"
  },
  {
    "text": "we could just say oh there's challenges here it doesn't work let's let's not do",
    "start": "2291660",
    "end": "2298330"
  },
  {
    "text": "this but we can't because there's too",
    "start": "2298330",
    "end": "2304630"
  },
  {
    "text": "much value here like the history of computing of server-side computing in",
    "start": "2304630",
    "end": "2311110"
  },
  {
    "text": "particular has been of getting to finer and finer granularity like when virtual",
    "start": "2311110",
    "end": "2316300"
  },
  {
    "text": "machines started being used they weren't thought of as secure but virtual",
    "start": "2316300",
    "end": "2323290"
  },
  {
    "text": "machines have now enabled public cloud which is clearly incredibly valuable",
    "start": "2323290",
    "end": "2328420"
  },
  {
    "text": "containers have had their naysayers but they enable micro services which are",
    "start": "2328420",
    "end": "2334660"
  },
  {
    "text": "incredibly valuable as we saw in the keynote and this morning we have to we",
    "start": "2334660",
    "end": "2340750"
  },
  {
    "text": "can't just like say it doesn't work we have to solve the problems with isolate computing we have the potential to",
    "start": "2340750",
    "end": "2348180"
  },
  {
    "text": "handle every single event in the the best place for that one event to be",
    "start": "2348180",
    "end": "2354460"
  },
  {
    "text": "handled whether that's close to a user or that's close to the data that it's operating on and that's that's going to",
    "start": "2354460",
    "end": "2363040"
  },
  {
    "text": "change everything about how we develop servers and like you're not going to think about where your code runs anymore",
    "start": "2363040",
    "end": "2368530"
  },
  {
    "text": "it's a lot less to think about but then everything is going to be faster to imagine this like imagine you have an",
    "start": "2368530",
    "end": "2374710"
  },
  {
    "text": "app that uses some some third party API that's also built on this infrastructure",
    "start": "2374710",
    "end": "2380140"
  },
  {
    "text": "and another API and it's built on other API so you've got this whole stack of infrastructure Mattern that can all",
    "start": "2380140",
    "end": "2385690"
  },
  {
    "text": "actually run on the same machine because all on the same machine which itself is",
    "start": "2385690",
    "end": "2393100"
  },
  {
    "text": "located in the cell tower that's closest to the user that would be amazing",
    "start": "2393100",
    "end": "2399280"
  },
  {
    "text": "that's what we're going for here so",
    "start": "2399280",
    "end": "2403050"
  },
  {
    "text": "all right that's answer questions hey Doc thank",
    "start": "2407250",
    "end": "2422650"
  },
  {
    "text": "you a question about utilization I mean CP visualization if we talk about",
    "start": "2422650",
    "end": "2429220"
  },
  {
    "text": "scenarios like proxies and probably the lates do not do anything most of the time just waiting for response from",
    "start": "2429220",
    "end": "2436330"
  },
  {
    "text": "remote system so do you run thousands of these threads with is always in parallel",
    "start": "2436330",
    "end": "2442510"
  },
  {
    "text": "or you have thread their core and so CPU is almost free and the second question",
    "start": "2442510",
    "end": "2449920"
  },
  {
    "text": "is related do you have any excessive labor related to latency like minimal my",
    "start": "2449920",
    "end": "2459430"
  },
  {
    "text": "maximum latency before your screen will up on the running so yeah we we can",
    "start": "2459430",
    "end": "2471340"
  },
  {
    "text": "potentially have so as I said earlier we start up a thread or we have different",
    "start": "2471340",
    "end": "2477700"
  },
  {
    "text": "isolates running on different threads we actually start a thread for each incoming HTTP connection which are",
    "start": "2477700",
    "end": "2484240"
  },
  {
    "text": "connections incoming from an engine X server on the same machine this is kind of a neat trick",
    "start": "2484240",
    "end": "2489970"
  },
  {
    "text": "because nginx will only send one HTTP request on that connection at a time so",
    "start": "2489970",
    "end": "2495550"
  },
  {
    "text": "this is how we know that we only have one isolate executing at a time but we",
    "start": "2495550",
    "end": "2500740"
  },
  {
    "text": "can potentially have as many threads azure needed to handle the concurrent requests the workers will usually be",
    "start": "2500740",
    "end": "2512320"
  },
  {
    "text": "spending most of their time waiting for some back-end so not actually executing that whole time does that sort of answer",
    "start": "2512320",
    "end": "2521110"
  },
  {
    "text": "your first question yeah but in this case you can go ten",
    "start": "2521110",
    "end": "2530730"
  },
  {
    "text": "requests which consumes all the CPU and then as a request to you just waiting and you'll have high",
    "start": "2530730",
    "end": "2537510"
  },
  {
    "text": "latency I mean how is a CPU sharing between a thousand of requests right",
    "start": "2537510",
    "end": "2543630"
  },
  {
    "text": "right right so first of all you're limited to 50",
    "start": "2543630",
    "end": "2548640"
  },
  {
    "text": "milliseconds per request and we cancel them after that but the it's still",
    "start": "2548640",
    "end": "2555900"
  },
  {
    "text": "possible for if there's enough isolates and enough requests you could run out of total CPU and basically that's a",
    "start": "2555900",
    "end": "2561780"
  },
  {
    "text": "provisioning problem we need to make sure that we have plenty of CPU capacity",
    "start": "2561780",
    "end": "2567030"
  },
  {
    "text": "in all of our locations and when we don't when one location gets a little overloaded what we do is we actually",
    "start": "2567030",
    "end": "2573090"
  },
  {
    "text": "shift usually the the free users we just shift them to other locations therefore users of our general service",
    "start": "2573090",
    "end": "2580020"
  },
  {
    "text": "there isn't of free to your workers yet but but that offload CPU to other places",
    "start": "2580020",
    "end": "2585600"
  },
  {
    "text": "without affecting any of the paying users in any way and so we've been doing that for a long time it works pretty",
    "start": "2585600",
    "end": "2592290"
  },
  {
    "text": "well and then the second part of your question yeah so yeah SLA is I don't",
    "start": "2592290",
    "end": "2600750"
  },
  {
    "text": "think we have a specific SLA for latency well actually I don't know that might be something that is someone else's",
    "start": "2600750",
    "end": "2607860"
  },
  {
    "text": "department guy doesn't have one but it's",
    "start": "2607860",
    "end": "2613470"
  },
  {
    "text": "usually pretty good",
    "start": "2613470",
    "end": "2616220"
  },
  {
    "text": "so you mentioned in the beginning that customers can use this to augment cloud",
    "start": "2619299",
    "end": "2624969"
  },
  {
    "text": "fare functionality you also mention that you store and inspect users code what",
    "start": "2624969",
    "end": "2631599"
  },
  {
    "text": "kind of protections do you have to kind of olay customers fears that you will just steal that code essentially so we",
    "start": "2631599",
    "end": "2644349"
  },
  {
    "text": "look at code only for debugging and incident response purposes we don't like",
    "start": "2644349",
    "end": "2650079"
  },
  {
    "text": "dig through code to see what people are doing for fun and I mean so we we don't",
    "start": "2650079",
    "end": "2663459"
  },
  {
    "text": "want like that's not what we want to do we have something called the CloudFlare",
    "start": "2663459",
    "end": "2670419"
  },
  {
    "text": "app store which actually lets you publish a worker for other people to",
    "start": "2670419",
    "end": "2677529"
  },
  {
    "text": "install on their own sites it's the being able to do with workers is in beta",
    "start": "2677529",
    "end": "2682989"
  },
  {
    "text": "right now so this will be something that will ramp up soon but then you can",
    "start": "2682989",
    "end": "2689049"
  },
  {
    "text": "actually you sell that to other users and we'd much rather have people selling",
    "start": "2689049",
    "end": "2694479"
  },
  {
    "text": "their there neat features that they've built on CloudFlare to each other in this marketplace then have us just like",
    "start": "2694479",
    "end": "2699849"
  },
  {
    "text": "build it ourselves there's so much more we can do that way we'd rather focus on",
    "start": "2699849",
    "end": "2707079"
  },
  {
    "text": "the core network platform and on building more servers then like trying",
    "start": "2707079",
    "end": "2712149"
  },
  {
    "text": "to come up with everything under the Sun that people can build on it",
    "start": "2712149",
    "end": "2716369"
  },
  {
    "text": "it's um all these tools that you're creating are they going to remain",
    "start": "2720150",
    "end": "2725170"
  },
  {
    "text": "proprietary CloudFlare things for your platform or you can actually start to maybe open sourcing these tools for",
    "start": "2725170",
    "end": "2730810"
  },
  {
    "text": "other people to use them to do similar things or to yeah benefit from so we",
    "start": "2730810",
    "end": "2740230"
  },
  {
    "text": "don't have specific plans yet but I can tell you personally I would very much like to start open sourcing",
    "start": "2740230",
    "end": "2747460"
  },
  {
    "text": "parts of this probably in stages like we have this great glue layer that we use for binding API is written in native",
    "start": "2747460",
    "end": "2755830"
  },
  {
    "text": "code into JavaScript so they can be called and I I would like to do that",
    "start": "2755830",
    "end": "2763950"
  },
  {
    "text": "can't make any announcements right now",
    "start": "2763950",
    "end": "2768060"
  },
  {
    "text": "is there any ability or thought about being able to store some sort of state",
    "start": "2770880",
    "end": "2776980"
  },
  {
    "text": "on on the edge right because you're basically just processing data as it passes through is there a future where",
    "start": "2776980",
    "end": "2782710"
  },
  {
    "text": "you can do some sort of fancier processing right there that's the storing State on the edge yeah we're",
    "start": "2782710",
    "end": "2790450"
  },
  {
    "text": "we're doing a lot of we have a number of projects that that we're working on with",
    "start": "2790450",
    "end": "2798190"
  },
  {
    "text": "the goal of eventually every users data if you build an application on",
    "start": "2798190",
    "end": "2803620"
  },
  {
    "text": "CloudFlare storage then every users data every user of your application their",
    "start": "2803620",
    "end": "2809290"
  },
  {
    "text": "data should be stored at the closest location to them and I like to I have",
    "start": "2809290",
    "end": "2814720"
  },
  {
    "text": "this thought experiment I like to think about which is when people go to Mars is",
    "start": "2814720",
    "end": "2821170"
  },
  {
    "text": "the internet still going to work can you use web apps from Mars well in today's model no because you're going to wait",
    "start": "2821170",
    "end": "2827410"
  },
  {
    "text": "for a half an hour round trip to do every page load but if we send a CloudFlare pop to Mars and an",
    "start": "2827410",
    "end": "2835960"
  },
  {
    "text": "application were written on cloud for storage would people then be able to use it as long as they're only collaborating with other people on Mars and if we",
    "start": "2835960",
    "end": "2842830"
  },
  {
    "text": "solve that problem then we've also solved the problem of like slow internet",
    "start": "2842830",
    "end": "2849070"
  },
  {
    "text": "in New Zealand so it's important here too but there there's a number of efforts",
    "start": "2849070",
    "end": "2857230"
  },
  {
    "text": "underway one of the first ones that's already in beta is called workers kV it",
    "start": "2857230",
    "end": "2862870"
  },
  {
    "text": "it's fairly simple right now it's a KB store but it's optimized for read heavy workloads not really for lots of rights",
    "start": "2862870",
    "end": "2869560"
  },
  {
    "text": "from the edge but where there there's things we're working on that I'm very excited about but not ready to talk",
    "start": "2869560",
    "end": "2875380"
  },
  {
    "text": "about yet that will allow whole databases to be built on the edge yeah",
    "start": "2875380",
    "end": "2880890"
  },
  {
    "text": "next question continuing effect that around now free services at the moment",
    "start": "2881460",
    "end": "2887800"
  },
  {
    "text": "what other ways to get in touch with the technology and to experiment a little",
    "start": "2887800",
    "end": "2893080"
  },
  {
    "text": "bit with it a great question so if you go to CloudFlare workers comm you can",
    "start": "2893080",
    "end": "2898720"
  },
  {
    "text": "actually play around with it just in your web browser like you write some code and it immediately runs and it shows you what the result would be",
    "start": "2898720",
    "end": "2906570"
  },
  {
    "text": "that's free and then when you want to actually to play it on your site",
    "start": "2906570",
    "end": "2912400"
  },
  {
    "text": "the cost is $5 per month minimum and",
    "start": "2912400",
    "end": "2918280"
  },
  {
    "text": "then it's a 50 cents per million request so you get the first 10 million free",
    "start": "2918280",
    "end": "2925470"
  },
  {
    "text": "yeah so it's it's less expensive for a lot of people than like lambda all right",
    "start": "2925470",
    "end": "2936330"
  },
  {
    "text": "so and like you said my money like one of the awesome things about CloudFlare",
    "start": "2936330",
    "end": "2941380"
  },
  {
    "text": "is it's DDoS protection and handling some of the most hardcore traffic patterns on the internet and now that",
    "start": "2941380",
    "end": "2948130"
  },
  {
    "text": "we're running JavaScript at the edge in this controlled computing environment does your DDoS strategy change at all",
    "start": "2948130",
    "end": "2956130"
  },
  {
    "text": "when you get tons and tons and tons of load yes so the DDoS protection happens",
    "start": "2956130",
    "end": "2962680"
  },
  {
    "text": "before workers so so your worker is protected so that's one part there is of",
    "start": "2962680",
    "end": "2971680"
  },
  {
    "text": "course an interesting new question here is could you use workers to launch a DDoS on someone else like oh now you've",
    "start": "2971680",
    "end": "2978190"
  },
  {
    "text": "got 165 well connected locations that can run your code and send lots of requests to someone and",
    "start": "2978190",
    "end": "2985300"
  },
  {
    "text": "yeah we we don't let you do that when people try they get shut down really quick that's all I'll say about that",
    "start": "2985300",
    "end": "2990730"
  },
  {
    "text": "because I have to stop [Applause]",
    "start": "2990730",
    "end": "2997599"
  }
]