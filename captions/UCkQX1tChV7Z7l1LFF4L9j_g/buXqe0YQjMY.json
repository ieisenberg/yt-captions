[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hi everybody I'm Eugene I work on the",
    "start": "3900",
    "end": "6660"
  },
  {
    "text": "Google Cloud dataflow and Apache Beam",
    "start": "6660",
    "end": "8639"
  },
  {
    "text": "teams I've been doing that for a few",
    "start": "8639",
    "end": "10920"
  },
  {
    "text": "years and I think it's a really good",
    "start": "10920",
    "end": "12990"
  },
  {
    "text": "piece of work so now I'm going to give",
    "start": "12990",
    "end": "14639"
  },
  {
    "text": "you a really quick overview of the",
    "start": "14639",
    "end": "16289"
  },
  {
    "text": "several core things that one needs to",
    "start": "16289",
    "end": "18690"
  },
  {
    "text": "know about beam first a little bit of",
    "start": "18690",
    "end": "21840"
  },
  {
    "start": "20000",
    "end": "134000"
  },
  {
    "text": "history it originated back in 2004 when",
    "start": "21840",
    "end": "25410"
  },
  {
    "text": "Google created MapReduce which was a",
    "start": "25410",
    "end": "27960"
  },
  {
    "text": "distributed data processing programming",
    "start": "27960",
    "end": "29759"
  },
  {
    "text": "model but at its core it's really just a",
    "start": "29759",
    "end": "32550"
  },
  {
    "text": "huge select and a huge group by and",
    "start": "32550",
    "end": "34610"
  },
  {
    "text": "nothing more it just does it really well",
    "start": "34610",
    "end": "37620"
  },
  {
    "text": "in a distributed and fault tolerant",
    "start": "37620",
    "end": "39090"
  },
  {
    "text": "fashion it evolved in two directions",
    "start": "39090",
    "end": "40920"
  },
  {
    "text": "pretty quickly people realized that one",
    "start": "40920",
    "end": "43350"
  },
  {
    "text": "select and one group buy is not that",
    "start": "43350",
    "end": "46380"
  },
  {
    "text": "useful and it's better to build a high",
    "start": "46380",
    "end": "47910"
  },
  {
    "text": "level API where you can build whole",
    "start": "47910",
    "end": "49380"
  },
  {
    "text": "graphs made of that and that's that's",
    "start": "49380",
    "end": "51720"
  },
  {
    "text": "what flume Java did and that is also the",
    "start": "51720",
    "end": "54690"
  },
  {
    "text": "programming model familiar probably to",
    "start": "54690",
    "end": "56190"
  },
  {
    "text": "people who use spark or flink so pretty",
    "start": "56190",
    "end": "58710"
  },
  {
    "text": "much all distributed data processing",
    "start": "58710",
    "end": "60780"
  },
  {
    "text": "frameworks are in some way based on",
    "start": "60780",
    "end": "62400"
  },
  {
    "text": "these two parameters parallel apply and",
    "start": "62400",
    "end": "64978"
  },
  {
    "text": "parallel go by the other direction in",
    "start": "64979",
    "end": "67200"
  },
  {
    "text": "which it evolved was mill-wheel",
    "start": "67200",
    "end": "69600"
  },
  {
    "text": "a streaming processing system also",
    "start": "69600",
    "end": "71370"
  },
  {
    "text": "created inside Google whose focus was to",
    "start": "71370",
    "end": "73920"
  },
  {
    "text": "disrupt the idea that streaming data",
    "start": "73920",
    "end": "75690"
  },
  {
    "text": "processing has to be approximate mill",
    "start": "75690",
    "end": "77580"
  },
  {
    "text": "will aimed to make it deterministic and",
    "start": "77580",
    "end": "79920"
  },
  {
    "text": "exact and the core idea behind that was",
    "start": "79920",
    "end": "83159"
  },
  {
    "text": "to do computations based on the absolute",
    "start": "83159",
    "end": "87450"
  },
  {
    "text": "time when certain events happened as",
    "start": "87450",
    "end": "89070"
  },
  {
    "text": "opposed to when this particular",
    "start": "89070",
    "end": "90330"
  },
  {
    "text": "processing pipeline saw them then in",
    "start": "90330",
    "end": "93030"
  },
  {
    "text": "2014 these things were unified into",
    "start": "93030",
    "end": "94940"
  },
  {
    "text": "cloud dataflow which unified batching",
    "start": "94940",
    "end": "98280"
  },
  {
    "text": "streaming under one programming model",
    "start": "98280",
    "end": "99690"
  },
  {
    "text": "that I will explain soon because beam",
    "start": "99690",
    "end": "101340"
  },
  {
    "text": "uses that programming model and data",
    "start": "101340",
    "end": "103770"
  },
  {
    "text": "flow from the beginning aimed to become",
    "start": "103770",
    "end": "106250"
  },
  {
    "text": "portable between different runners so",
    "start": "106250",
    "end": "108540"
  },
  {
    "text": "the point was that you can't you can run",
    "start": "108540",
    "end": "112350"
  },
  {
    "text": "these pipelines on more than just",
    "start": "112350",
    "end": "113640"
  },
  {
    "text": "dataflow and in 2016 this culminated in",
    "start": "113640",
    "end": "117360"
  },
  {
    "text": "the creation of Apache beam which is a",
    "start": "117360",
    "end": "119280"
  },
  {
    "text": "top-level Apache project with an open",
    "start": "119280",
    "end": "121380"
  },
  {
    "text": "ecosystem it's not critically dependent",
    "start": "121380",
    "end": "124290"
  },
  {
    "text": "on any particular vendor for example",
    "start": "124290",
    "end": "126030"
  },
  {
    "text": "less than half of the commuters are even",
    "start": "126030",
    "end": "128039"
  },
  {
    "text": "from Google and it's community driven so",
    "start": "128039",
    "end": "131250"
  },
  {
    "text": "this is just a high-level context and",
    "start": "131250",
    "end": "134209"
  },
  {
    "start": "134000",
    "end": "185000"
  },
  {
    "text": "this is an example code with beam",
    "start": "134209",
    "end": "138210"
  },
  {
    "text": "should be pretty readable for anybody",
    "start": "138210",
    "end": "140190"
  },
  {
    "text": "who use any data processing framework so",
    "start": "140190",
    "end": "142470"
  },
  {
    "text": "I'm not going to go into too much detail",
    "start": "142470",
    "end": "143910"
  },
  {
    "text": "in Intuit there is two concepts there is",
    "start": "143910",
    "end": "146400"
  },
  {
    "text": "collections which represent logical sets",
    "start": "146400",
    "end": "150870"
  },
  {
    "text": "of data but don't really contain the",
    "start": "150870",
    "end": "152340"
  },
  {
    "text": "data and there is transforms that take",
    "start": "152340",
    "end": "154050"
  },
  {
    "text": "collections as input and produce",
    "start": "154050",
    "end": "155280"
  },
  {
    "text": "collections as output",
    "start": "155280",
    "end": "157340"
  },
  {
    "text": "simple enough so all BIM pipelines are",
    "start": "157340",
    "end": "163740"
  },
  {
    "text": "composed of three primitives there is",
    "start": "163740",
    "end": "165810"
  },
  {
    "text": "parallel will do which simply applies a",
    "start": "165810",
    "end": "168330"
  },
  {
    "text": "function parallel to every element there",
    "start": "168330",
    "end": "171090"
  },
  {
    "text": "is parallel group by that takes a",
    "start": "171090",
    "end": "173400"
  },
  {
    "text": "collection of elements and groups them",
    "start": "173400",
    "end": "174780"
  },
  {
    "text": "by a key and produces a collection of",
    "start": "174780",
    "end": "176250"
  },
  {
    "text": "groups that share the same key and these",
    "start": "176250",
    "end": "179400"
  },
  {
    "text": "can be grouped into a higher level",
    "start": "179400",
    "end": "181380"
  },
  {
    "text": "abstraction units by composite",
    "start": "181380",
    "end": "182820"
  },
  {
    "text": "transforms the three pillars of beam",
    "start": "182820",
    "end": "187530"
  },
  {
    "start": "185000",
    "end": "211000"
  },
  {
    "text": "that I would like to talk about in this",
    "start": "187530",
    "end": "189540"
  },
  {
    "text": "talk are first its unified programming",
    "start": "189540",
    "end": "192780"
  },
  {
    "text": "model that erases the distinction",
    "start": "192780",
    "end": "194580"
  },
  {
    "text": "between batching streaming data",
    "start": "194580",
    "end": "195690"
  },
  {
    "text": "processing the portability which is",
    "start": "195690",
    "end": "198990"
  },
  {
    "text": "perhaps even more disruptive it is the",
    "start": "198990",
    "end": "201150"
  },
  {
    "text": "idea that you can program pipelines in a",
    "start": "201150",
    "end": "203190"
  },
  {
    "text": "mixture of languages and run them in a",
    "start": "203190",
    "end": "204690"
  },
  {
    "text": "mixture of backends and I'm going to",
    "start": "204690",
    "end": "206910"
  },
  {
    "text": "talk about beams role in the data",
    "start": "206910",
    "end": "208620"
  },
  {
    "text": "processing ecosystem as a whole first",
    "start": "208620",
    "end": "211410"
  },
  {
    "start": "211000",
    "end": "227000"
  },
  {
    "text": "the unified model the premise behind the",
    "start": "211410",
    "end": "214650"
  },
  {
    "text": "unified model is that batch processing",
    "start": "214650",
    "end": "216360"
  },
  {
    "text": "doesn't really exist meaning that when",
    "start": "216360",
    "end": "218970"
  },
  {
    "text": "people do batch processing it's",
    "start": "218970",
    "end": "220380"
  },
  {
    "text": "practically always part of a higher",
    "start": "220380",
    "end": "221970"
  },
  {
    "text": "level streaming workflow so we might as",
    "start": "221970",
    "end": "223680"
  },
  {
    "text": "well model it as such I'm going to talk",
    "start": "223680",
    "end": "226710"
  },
  {
    "text": "about just one aspect of the unified",
    "start": "226710",
    "end": "229890"
  },
  {
    "start": "227000",
    "end": "283000"
  },
  {
    "text": "model that really needs clarification so",
    "start": "229890",
    "end": "232650"
  },
  {
    "text": "the idea that batch processing doesn't",
    "start": "232650",
    "end": "234810"
  },
  {
    "text": "exist comes from the fact that almost",
    "start": "234810",
    "end": "236670"
  },
  {
    "text": "you almost always people have some sort",
    "start": "236670",
    "end": "238830"
  },
  {
    "text": "of continuously growing input data set",
    "start": "238830",
    "end": "241380"
  },
  {
    "text": "and they want an output data set that",
    "start": "241380",
    "end": "244620"
  },
  {
    "text": "represents a function of the input and",
    "start": "244620",
    "end": "246150"
  },
  {
    "text": "the input grows and the output devolves",
    "start": "246150",
    "end": "248160"
  },
  {
    "text": "and the pipeline's job is to compute",
    "start": "248160",
    "end": "249780"
  },
  {
    "text": "updates to the output data set the key",
    "start": "249780",
    "end": "252360"
  },
  {
    "text": "point is that new data can always arrive",
    "start": "252360",
    "end": "255320"
  },
  {
    "text": "as a remark data that grows is always",
    "start": "255320",
    "end": "258840"
  },
  {
    "text": "natural temporal so new elements",
    "start": "258840",
    "end": "260880"
  },
  {
    "text": "appeared at some point so all data in",
    "start": "260880",
    "end": "263460"
  },
  {
    "text": "beam has a timestamp and this is the",
    "start": "263460",
    "end": "265140"
  },
  {
    "text": "timestamp when the data logically it was",
    "start": "265140",
    "end": "267930"
  },
  {
    "text": "created for example when the user",
    "start": "267930",
    "end": "269310"
  },
  {
    "text": "clicked on the link as opposed to",
    "start": "269310",
    "end": "271160"
  },
  {
    "text": "when this pipeline saw this brother",
    "start": "271160",
    "end": "273260"
  },
  {
    "text": "Buffett says the user clicked a link it",
    "start": "273260",
    "end": "275660"
  },
  {
    "text": "is really important because it lets you",
    "start": "275660",
    "end": "277460"
  },
  {
    "text": "define sensible semantics independent on",
    "start": "277460",
    "end": "280790"
  },
  {
    "text": "the execution details let's see how this",
    "start": "280790",
    "end": "285590"
  },
  {
    "start": "283000",
    "end": "314000"
  },
  {
    "text": "programming model applies to these two",
    "start": "285590",
    "end": "287090"
  },
  {
    "text": "primitives for pardhu it's pretty",
    "start": "287090",
    "end": "288860"
  },
  {
    "text": "trivial when new data arrives you just",
    "start": "288860",
    "end": "291080"
  },
  {
    "text": "apply the function to it and and you're",
    "start": "291080",
    "end": "293210"
  },
  {
    "text": "done",
    "start": "293210",
    "end": "293540"
  },
  {
    "text": "as for aggregation it's a little more",
    "start": "293540",
    "end": "295760"
  },
  {
    "text": "challenging because normally you would",
    "start": "295760",
    "end": "297350"
  },
  {
    "text": "say that you group all elements with",
    "start": "297350",
    "end": "299360"
  },
  {
    "text": "this key and you say here's the group",
    "start": "299360",
    "end": "300880"
  },
  {
    "text": "but in this setting there is no never",
    "start": "300880",
    "end": "303260"
  },
  {
    "text": "such a thing as seeing all elements for",
    "start": "303260",
    "end": "305180"
  },
  {
    "text": "a particular key so we need to define it",
    "start": "305180",
    "end": "307700"
  },
  {
    "text": "in a more general way let's talk about",
    "start": "307700",
    "end": "309230"
  },
  {
    "text": "that because this is really the only",
    "start": "309230",
    "end": "310610"
  },
  {
    "text": "thing that that presents a problem for",
    "start": "310610",
    "end": "312530"
  },
  {
    "text": "people learning beam how big does that",
    "start": "312530",
    "end": "315760"
  },
  {
    "start": "314000",
    "end": "352000"
  },
  {
    "text": "the idea is that beam buffers data per",
    "start": "315760",
    "end": "320270"
  },
  {
    "text": "key so the group a key operation takes a",
    "start": "320270",
    "end": "322400"
  },
  {
    "text": "collection of key value pairs and emits",
    "start": "322400",
    "end": "324560"
  },
  {
    "text": "a collection of pairs of key and",
    "start": "324560",
    "end": "327010"
  },
  {
    "text": "multiple values if you mentally",
    "start": "327010",
    "end": "331850"
  },
  {
    "text": "partition this by key you can think of",
    "start": "331850",
    "end": "333650"
  },
  {
    "text": "it as a collection of buffers where for",
    "start": "333650",
    "end": "335780"
  },
  {
    "text": "each key values arrived and sometimes we",
    "start": "335780",
    "end": "338960"
  },
  {
    "text": "omit groups of values to the output when",
    "start": "338960",
    "end": "340730"
  },
  {
    "text": "we think that we've seen enough we will",
    "start": "340730",
    "end": "343490"
  },
  {
    "text": "never see all of them but we might at",
    "start": "343490",
    "end": "345560"
  },
  {
    "text": "certain moments decide that we've seen",
    "start": "345560",
    "end": "346880"
  },
  {
    "text": "enough to omit something some",
    "start": "346880",
    "end": "348919"
  },
  {
    "text": "intermediate aggregation result so think",
    "start": "348919",
    "end": "354440"
  },
  {
    "start": "352000",
    "end": "403000"
  },
  {
    "text": "of it this way the this arrow is the",
    "start": "354440",
    "end": "358220"
  },
  {
    "text": "axis of event time this is not the wall",
    "start": "358220",
    "end": "361040"
  },
  {
    "text": "clock time that passes this is a logical",
    "start": "361040",
    "end": "363020"
  },
  {
    "text": "axis of when things happen and new",
    "start": "363020",
    "end": "365780"
  },
  {
    "text": "events arrive in our sort of rain onto",
    "start": "365780",
    "end": "368390"
  },
  {
    "text": "this axis and arrive at different times",
    "start": "368390",
    "end": "371450"
  },
  {
    "text": "and arrive on two different points in",
    "start": "371450",
    "end": "374419"
  },
  {
    "text": "this time axis and occasionally results",
    "start": "374419",
    "end": "378740"
  },
  {
    "text": "come out a more complete formalism for",
    "start": "378740",
    "end": "381890"
  },
  {
    "text": "this is called streams and tables and I",
    "start": "381890",
    "end": "384050"
  },
  {
    "text": "highly recommend this presentation I",
    "start": "384050",
    "end": "386240"
  },
  {
    "text": "think by Tyler about modeling beam in",
    "start": "386240",
    "end": "388850"
  },
  {
    "text": "this stream streams and tables theory",
    "start": "388850",
    "end": "390940"
  },
  {
    "text": "but at a high level we have a stream of",
    "start": "390940",
    "end": "394820"
  },
  {
    "text": "inputs and a stream of outputs and some",
    "start": "394820",
    "end": "397550"
  },
  {
    "text": "controlled way to decide when to emit",
    "start": "397550",
    "end": "399979"
  },
  {
    "text": "the outputs let's look at this in still",
    "start": "399979",
    "end": "403100"
  },
  {
    "start": "403000",
    "end": "574000"
  },
  {
    "text": "more detail",
    "start": "403100",
    "end": "404389"
  },
  {
    "text": "so this is slightly convoluted but this",
    "start": "404389",
    "end": "407449"
  },
  {
    "text": "is the exact mechanics of what happens",
    "start": "407449",
    "end": "409189"
  },
  {
    "text": "with aggregation in beam when a data",
    "start": "409189",
    "end": "412340"
  },
  {
    "text": "point arrives for a certain key with a",
    "start": "412340",
    "end": "414889"
  },
  {
    "text": "certain value and a certain timestamp we",
    "start": "414889",
    "end": "418759"
  },
  {
    "text": "apply the idea that when you're dealing",
    "start": "418759",
    "end": "421400"
  },
  {
    "text": "with temporal data and when you're",
    "start": "421400",
    "end": "422840"
  },
  {
    "text": "aggregating it you also almost always",
    "start": "422840",
    "end": "424789"
  },
  {
    "text": "want to aggregate it into time buckets",
    "start": "424789",
    "end": "428960"
  },
  {
    "text": "you rarely need the aggregation over",
    "start": "428960",
    "end": "431539"
  },
  {
    "text": "like since the beginning of time if you",
    "start": "431539",
    "end": "433849"
  },
  {
    "text": "want that that is possible too there is",
    "start": "433849",
    "end": "435500"
  },
  {
    "text": "the so-called global window but",
    "start": "435500",
    "end": "437810"
  },
  {
    "text": "generally you want every element to",
    "start": "437810",
    "end": "439310"
  },
  {
    "text": "compute to contribute to aggregations in",
    "start": "439310",
    "end": "441169"
  },
  {
    "text": "multiple windows for example you might",
    "start": "441169",
    "end": "443240"
  },
  {
    "text": "use fixed windows or overlapping sliding",
    "start": "443240",
    "end": "446060"
  },
  {
    "text": "windows or you might use session windows",
    "start": "446060",
    "end": "448460"
  },
  {
    "text": "and so on the key point is that every",
    "start": "448460",
    "end": "451460"
  },
  {
    "text": "element contributes to one or more",
    "start": "451460",
    "end": "452689"
  },
  {
    "text": "windows and each of the windows",
    "start": "452689",
    "end": "454460"
  },
  {
    "text": "internally has a buffer of elements that",
    "start": "454460",
    "end": "456710"
  },
  {
    "text": "have been contributed to it elements",
    "start": "456710",
    "end": "458990"
  },
  {
    "text": "that have that sort of belong into this",
    "start": "458990",
    "end": "461509"
  },
  {
    "text": "window and inside each window there is a",
    "start": "461509",
    "end": "465259"
  },
  {
    "text": "little machine called a trigger that",
    "start": "465259",
    "end": "467509"
  },
  {
    "text": "decides what to do with the new elements",
    "start": "467509",
    "end": "469210"
  },
  {
    "text": "when a new element arrives we perform",
    "start": "469210",
    "end": "474020"
  },
  {
    "text": "one of three actions either we drop the",
    "start": "474020",
    "end": "476870"
  },
  {
    "text": "element if the element is way behind",
    "start": "476870",
    "end": "480020"
  },
  {
    "text": "for example we receive data that that",
    "start": "480020",
    "end": "483949"
  },
  {
    "text": "map's to a window that was that closed a",
    "start": "483949",
    "end": "485839"
  },
  {
    "text": "year ago and we decide that this is the",
    "start": "485839",
    "end": "488779"
  },
  {
    "text": "kind of data we just want to ignore so",
    "start": "488779",
    "end": "492110"
  },
  {
    "text": "in some cases we may just drop the data",
    "start": "492110",
    "end": "494289"
  },
  {
    "text": "that this is called late data we can add",
    "start": "494289",
    "end": "498469"
  },
  {
    "text": "it to the buffer and do nothing else yet",
    "start": "498469",
    "end": "500599"
  },
  {
    "text": "or we can decide that we have",
    "start": "500599",
    "end": "501680"
  },
  {
    "text": "accumulated enough data for this key in",
    "start": "501680",
    "end": "503509"
  },
  {
    "text": "window and say okay here's the next",
    "start": "503509",
    "end": "506029"
  },
  {
    "text": "group for this key in window and the",
    "start": "506029",
    "end": "508189"
  },
  {
    "text": "pipeline will do something with that",
    "start": "508189",
    "end": "509360"
  },
  {
    "text": "group that is pretty much it except",
    "start": "509360",
    "end": "515990"
  },
  {
    "text": "there is one more detail",
    "start": "515990",
    "end": "517430"
  },
  {
    "text": "that's so-called watermark watermark is",
    "start": "517430",
    "end": "520669"
  },
  {
    "text": "a continuously increasing estimate of",
    "start": "520669",
    "end": "524440"
  },
  {
    "text": "how old data do think we're going to see",
    "start": "524440",
    "end": "528040"
  },
  {
    "text": "it has to be provided by the data source",
    "start": "528040",
    "end": "530779"
  },
  {
    "text": "because in general there is no way to",
    "start": "530779",
    "end": "532520"
  },
  {
    "text": "estimate what data is going to",
    "start": "532520",
    "end": "534560"
  },
  {
    "text": "come but some data sources are able to",
    "start": "534560",
    "end": "536960"
  },
  {
    "text": "provide this sort of estimate and beam",
    "start": "536960",
    "end": "539930"
  },
  {
    "text": "can make use of this estimate for",
    "start": "539930",
    "end": "542090"
  },
  {
    "text": "example if then what if the watermark",
    "start": "542090",
    "end": "543590"
  },
  {
    "text": "says that it's quite likely that no data",
    "start": "543590",
    "end": "545330"
  },
  {
    "text": "is going to arrive before an hour ago",
    "start": "545330",
    "end": "547220"
  },
  {
    "text": "then we can emit the results in all the",
    "start": "547220",
    "end": "549410"
  },
  {
    "text": "windows older than that so together we",
    "start": "549410",
    "end": "553160"
  },
  {
    "text": "have these mechanics going on and as new",
    "start": "553160",
    "end": "555080"
  },
  {
    "text": "data arrives it either gets buffered or",
    "start": "555080",
    "end": "557210"
  },
  {
    "text": "discarded or aggregation results get",
    "start": "557210",
    "end": "559580"
  },
  {
    "text": "computed and emitted this is the core of",
    "start": "559580",
    "end": "562550"
  },
  {
    "text": "the beam model it is the subject of a",
    "start": "562550",
    "end": "565880"
  },
  {
    "text": "lot of misunderstanding but I'm hoping",
    "start": "565880",
    "end": "568160"
  },
  {
    "text": "that this explanation will clarify it",
    "start": "568160",
    "end": "571839"
  },
  {
    "text": "okay so the key idea is that the key",
    "start": "571870",
    "end": "577070"
  },
  {
    "start": "574000",
    "end": "601000"
  },
  {
    "text": "idea behind beams unified model is that",
    "start": "577070",
    "end": "578720"
  },
  {
    "text": "there is no distinction between batch",
    "start": "578720",
    "end": "580130"
  },
  {
    "text": "and streaming these terms do not even",
    "start": "580130",
    "end": "582020"
  },
  {
    "text": "exist in beams programming model there",
    "start": "582020",
    "end": "584180"
  },
  {
    "text": "is no such thing as a batch data set the",
    "start": "584180",
    "end": "585710"
  },
  {
    "text": "streaming data set there is just a",
    "start": "585710",
    "end": "587330"
  },
  {
    "text": "collection the only the thing that we",
    "start": "587330",
    "end": "591440"
  },
  {
    "text": "perceive is the distinction between",
    "start": "591440",
    "end": "592490"
  },
  {
    "text": "batch and streaming is different ways to",
    "start": "592490",
    "end": "594170"
  },
  {
    "text": "control aggregation of data and",
    "start": "594170",
    "end": "595610"
  },
  {
    "text": "different ways to decide when we think",
    "start": "595610",
    "end": "598190"
  },
  {
    "text": "that we've seen enough okay",
    "start": "598190",
    "end": "602540"
  },
  {
    "start": "601000",
    "end": "619000"
  },
  {
    "text": "the next core pillar of beam is its",
    "start": "602540",
    "end": "605780"
  },
  {
    "text": "portability and here I'm going to",
    "start": "605780",
    "end": "607580"
  },
  {
    "text": "present beams vision it is not 100% that",
    "start": "607580",
    "end": "612710"
  },
  {
    "text": "yet the work is on track to be completed",
    "start": "612710",
    "end": "614060"
  },
  {
    "text": "by the end of 2018 but I'd like to give",
    "start": "614060",
    "end": "617089"
  },
  {
    "text": "a sense of where we're going we're going",
    "start": "617089",
    "end": "621170"
  },
  {
    "start": "619000",
    "end": "652000"
  },
  {
    "text": "to a world where you can program",
    "start": "621170",
    "end": "623240"
  },
  {
    "text": "pipelines in any in any language that",
    "start": "623240",
    "end": "625850"
  },
  {
    "text": "has a beam SDK currently that is Java",
    "start": "625850",
    "end": "628550"
  },
  {
    "text": "Python and go and new languages can add",
    "start": "628550",
    "end": "630860"
  },
  {
    "text": "can be added in the future there is also",
    "start": "630860",
    "end": "633020"
  },
  {
    "text": "a Scala SDK created by Spotify all that",
    "start": "633020",
    "end": "636320"
  },
  {
    "text": "gets translated to a portable pipeline",
    "start": "636320",
    "end": "637940"
  },
  {
    "text": "representation and that representation",
    "start": "637940",
    "end": "639680"
  },
  {
    "text": "can be run by any beam runner which they",
    "start": "639680",
    "end": "641480"
  },
  {
    "text": "are currently I think 9 some examples",
    "start": "641480",
    "end": "644420"
  },
  {
    "text": "are the SPARC run or flinc run or Google",
    "start": "644420",
    "end": "646070"
  },
  {
    "text": "Cloud dataflow local runner so the thing",
    "start": "646070",
    "end": "649370"
  },
  {
    "text": "is that you can program in any of these",
    "start": "649370",
    "end": "650900"
  },
  {
    "text": "languages or a mix and run it on any",
    "start": "650900",
    "end": "652670"
  },
  {
    "text": "runner this has a number of obvious and",
    "start": "652670",
    "end": "655310"
  },
  {
    "text": "less obvious advantages first there's",
    "start": "655310",
    "end": "657440"
  },
  {
    "text": "the obvious advantage that you're not",
    "start": "657440",
    "end": "659029"
  },
  {
    "text": "locked in into using any particular",
    "start": "659029",
    "end": "661610"
  },
  {
    "text": "runner for example suppose you have a",
    "start": "661610",
    "end": "664760"
  },
  {
    "text": "fling cluster",
    "start": "664760",
    "end": "666380"
  },
  {
    "text": "and later you'll run some BIM pipelines",
    "start": "666380",
    "end": "669230"
  },
  {
    "text": "on it and then you decide that actually",
    "start": "669230",
    "end": "671030"
  },
  {
    "text": "I don't really like how my fling cluster",
    "start": "671030",
    "end": "674480"
  },
  {
    "text": "is handling that I'm gonna check out",
    "start": "674480",
    "end": "675860"
  },
  {
    "text": "spark and maybe you like spark maybe",
    "start": "675860",
    "end": "678740"
  },
  {
    "text": "check out data flow and like it even",
    "start": "678740",
    "end": "680000"
  },
  {
    "text": "more all that without modifying your",
    "start": "680000",
    "end": "681650"
  },
  {
    "text": "pipeline the other the other benefit is",
    "start": "681650",
    "end": "687620"
  },
  {
    "text": "that there is no language looking and by",
    "start": "687620",
    "end": "689540"
  },
  {
    "text": "that I mean that you don't have to",
    "start": "689540",
    "end": "691310"
  },
  {
    "text": "commit to a particular language before",
    "start": "691310",
    "end": "692780"
  },
  {
    "text": "authoring your pipeline because you can",
    "start": "692780",
    "end": "695540"
  },
  {
    "text": "use transforms written in any language",
    "start": "695540",
    "end": "697100"
  },
  {
    "text": "from any other language for example you",
    "start": "697100",
    "end": "699350"
  },
  {
    "text": "can be primarily a Python programmer and",
    "start": "699350",
    "end": "703360"
  },
  {
    "text": "are we completely out of time or almost",
    "start": "703360",
    "end": "707680"
  },
  {
    "text": "okay",
    "start": "708670",
    "end": "709820"
  },
  {
    "text": "so there is no language looking and",
    "start": "709820",
    "end": "713210"
  },
  {
    "text": "there is no language looking for library",
    "start": "713210",
    "end": "715070"
  },
  {
    "text": "authors either and also this gives sort",
    "start": "715070",
    "end": "718160"
  },
  {
    "text": "of linear rather than quadratic speed of",
    "start": "718160",
    "end": "720050"
  },
  {
    "text": "growth for combinations of runner and",
    "start": "720050",
    "end": "721970"
  },
  {
    "text": "language for example adding the",
    "start": "721970",
    "end": "723920"
  },
  {
    "text": "capability to run go on flink is free",
    "start": "723920",
    "end": "727370"
  },
  {
    "text": "once you have a flink runner and a go",
    "start": "727370",
    "end": "729170"
  },
  {
    "text": "SDK so I think that is really important",
    "start": "729170",
    "end": "732160"
  },
  {
    "text": "that's pretty much it about portability",
    "start": "732160",
    "end": "734600"
  },
  {
    "text": "and this is just a map of the beam",
    "start": "734600",
    "end": "738140"
  },
  {
    "start": "735000",
    "end": "773000"
  },
  {
    "text": "ecosystem from the lowest levels to the",
    "start": "738140",
    "end": "739940"
  },
  {
    "text": "highest there is a number of runners",
    "start": "739940",
    "end": "742220"
  },
  {
    "text": "there is the model there is various",
    "start": "742220",
    "end": "743660"
  },
  {
    "text": "languages and families of libraries and",
    "start": "743660",
    "end": "745640"
  },
  {
    "text": "various ways to program beam like sequel",
    "start": "745640",
    "end": "747530"
  },
  {
    "text": "third-party SDKs and there is you can on",
    "start": "747530",
    "end": "750920"
  },
  {
    "text": "top of that there is user code or there",
    "start": "750920",
    "end": "752690"
  },
  {
    "text": "are products like whole products and",
    "start": "752690",
    "end": "754880"
  },
  {
    "text": "businesses and services built on top of",
    "start": "754880",
    "end": "757070"
  },
  {
    "text": "beam Tyler is going to talk about one of",
    "start": "757070",
    "end": "758900"
  },
  {
    "text": "them and there's a number of others for",
    "start": "758900",
    "end": "761000"
  },
  {
    "text": "data preparation and on top of that",
    "start": "761000",
    "end": "764000"
  },
  {
    "text": "there is of course the beam community",
    "start": "764000",
    "end": "766720"
  },
  {
    "text": "which I found to be incredibly friendly",
    "start": "766720",
    "end": "769010"
  },
  {
    "text": "and welcoming so I encourage you to join",
    "start": "769010",
    "end": "771170"
  },
  {
    "text": "it that is pretty much it so with that I",
    "start": "771170",
    "end": "778190"
  },
  {
    "start": "773000",
    "end": "789000"
  },
  {
    "text": "invite you to listen to Tyler's talk",
    "start": "778190",
    "end": "780080"
  },
  {
    "text": "that comes after mine and he will talk",
    "start": "780080",
    "end": "782210"
  },
  {
    "text": "about beam applied to machine learning",
    "start": "782210",
    "end": "785080"
  },
  {
    "text": "thank you",
    "start": "785080",
    "end": "787610"
  },
  {
    "text": "you",
    "start": "787610",
    "end": "789670"
  }
]