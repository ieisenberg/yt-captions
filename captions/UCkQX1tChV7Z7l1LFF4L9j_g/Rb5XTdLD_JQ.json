[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "so yes I'm here from Starling bank I'm one of the lead engineers and I am also",
    "start": "3970",
    "end": "11230"
  },
  {
    "text": "the host of the Starling podcast which you should all listen to quick plug there and today I'm going to be talking",
    "start": "11230",
    "end": "17800"
  },
  {
    "text": "about how to build a reliable Bank in the cloud with Java and I'd like to",
    "start": "17800",
    "end": "25180"
  },
  {
    "text": "focus on this word reliable because if there's one concern that people have",
    "start": "25180",
    "end": "32168"
  },
  {
    "text": "about their bank the the primary concern is security but I'm leaving that to the",
    "start": "32169",
    "end": "38559"
  },
  {
    "text": "security track so we're not going to talk about that here the second concern is reliability people want to be able to",
    "start": "38559",
    "end": "45519"
  },
  {
    "text": "you know ensure that they can access their money that you know their their",
    "start": "45519",
    "end": "50620"
  },
  {
    "text": "balance shone wherever they see it is correct they know how much money they've",
    "start": "50620",
    "end": "55690"
  },
  {
    "text": "got the payments they've they're making are being made and are going somewhere and that's that is what they prize so",
    "start": "55690",
    "end": "62710"
  },
  {
    "text": "being able to build a bank that is reliable is a core thing and even if",
    "start": "62710",
    "end": "69700"
  },
  {
    "text": "you're a disruptive new challenge a bank like we are you still have to make sure",
    "start": "69700",
    "end": "76060"
  },
  {
    "text": "that your bank is reliable and gives the customers that's a peace of mind they",
    "start": "76060",
    "end": "82210"
  },
  {
    "text": "need and so I'm going to start off with a story that shows how that can go wrong",
    "start": "82210",
    "end": "90250"
  },
  {
    "start": "90000",
    "end": "373000"
  },
  {
    "text": "so we start on Monday the 18th of June",
    "start": "90250",
    "end": "97750"
  },
  {
    "text": "and at a major high street bank I'm not going to name which one that a major",
    "start": "97750",
    "end": "104170"
  },
  {
    "text": "high street bank a group of people our engineers are preparing to release some",
    "start": "104170",
    "end": "110590"
  },
  {
    "text": "code into production now the code they're preparing to release is to",
    "start": "110590",
    "end": "116050"
  },
  {
    "text": "change a batch job scheduler and this is a thing that takes a load of jobs that",
    "start": "116050",
    "end": "122830"
  },
  {
    "text": "need to be run in an overnight window and it should Jules them it says run this one then this one then this one and",
    "start": "122830",
    "end": "128739"
  },
  {
    "text": "so on so they release the code and before they release the code they make",
    "start": "128739",
    "end": "134350"
  },
  {
    "text": "sure that everything's in right they make sure that they've got all of the the you know the reviews that",
    "start": "134350",
    "end": "141959"
  },
  {
    "text": "they need that the code has been reviewed correctly all the sign offs have been done so the correct people have gone yes",
    "start": "141959",
    "end": "147630"
  },
  {
    "text": "tick I'm happy for this to be released out into the wild they make sure that they've got a back-up plan a rollback",
    "start": "147630",
    "end": "154110"
  },
  {
    "text": "plan just in case everything goes wrong so they can move back to their previous",
    "start": "154110",
    "end": "159420"
  },
  {
    "text": "version so they release the code and there really seems to go fine and then",
    "start": "159420",
    "end": "166140"
  },
  {
    "text": "they start noticing some problems you know the resource utilization is a bit too high for their liking there are a",
    "start": "166140",
    "end": "173040"
  },
  {
    "text": "few too many errors creeping into the logs so it's a bit wobbly they're not",
    "start": "173040",
    "end": "178830"
  },
  {
    "text": "too sure about it and it gets to the next morning 19th of June and the decision is taken that there are a few",
    "start": "178830",
    "end": "185370"
  },
  {
    "text": "too many errors and they should roll back so they get out the rollback",
    "start": "185370",
    "end": "190890"
  },
  {
    "text": "procedure and they proceed to rollback and that is when everything goes",
    "start": "190890",
    "end": "196350"
  },
  {
    "text": "completely wrong chaos ensues because it",
    "start": "196350",
    "end": "201690"
  },
  {
    "text": "turns out that while they managed to roll back the code successfully they",
    "start": "201690",
    "end": "206760"
  },
  {
    "text": "didn't roll back the changes to their database schema or their data successfully so a load of jobs that",
    "start": "206760",
    "end": "215519"
  },
  {
    "text": "should have been run were missing and the job scheduler came along and it",
    "start": "215519",
    "end": "222060"
  },
  {
    "text": "didn't know about these missing jobs it didn't know that they were supposed to be rung so it just ran all the jobs it",
    "start": "222060",
    "end": "227160"
  },
  {
    "text": "knew about and it turned out that there were a load of dependencies between those jobs one job had to be run to put",
    "start": "227160",
    "end": "234299"
  },
  {
    "text": "the data in place the correct data in place for the next job to run but the job scheduler didn't know anything about",
    "start": "234299",
    "end": "239970"
  },
  {
    "text": "that so it just merrily went along its way running task after task after task",
    "start": "239970",
    "end": "245180"
  },
  {
    "text": "gathering more and more errors as it went and by the next day the 20th of",
    "start": "245180",
    "end": "254190"
  },
  {
    "text": "June it was utter chaos account balances were incorrect all over the place",
    "start": "254190",
    "end": "260030"
  },
  {
    "text": "payments that should have been made people weren't sure if they had been made or if they'd been made twice this",
    "start": "260030",
    "end": "266250"
  },
  {
    "text": "had knock-on effect people's house sales were put on hold because people weren't sure if the bank",
    "start": "266250",
    "end": "272129"
  },
  {
    "text": "wasn't sure if the their mortgages had been correctly sorted out so everything",
    "start": "272129",
    "end": "278580"
  },
  {
    "text": "was in a disastrous State in fact at one subsidiary things got so bad that the",
    "start": "278580",
    "end": "285360"
  },
  {
    "text": "overnight job hadn't for the xix hadn't finished running by the time that the",
    "start": "285360",
    "end": "291090"
  },
  {
    "text": "overnight jobs for the 20th started and you could imagine what sort of nightmare that caused so everything is a complete",
    "start": "291090",
    "end": "299610"
  },
  {
    "text": "mess no one is really sure how much money all the customers have got and whether payments have been made and so",
    "start": "299610",
    "end": "305580"
  },
  {
    "text": "on a total failure of reliability so they started sorting the data out and",
    "start": "305580",
    "end": "312169"
  },
  {
    "text": "how long do you think it took them to sort it out any guesses your your oh",
    "start": "312169",
    "end": "323009"
  },
  {
    "text": "yeah I can tell that this this audience doesn't really think that banking is up too much scratch they did manage to get",
    "start": "323009",
    "end": "329370"
  },
  {
    "text": "it done in less time than you think it was about a month but still that's not",
    "start": "329370",
    "end": "334919"
  },
  {
    "text": "really that good for customers it doesn't really inspire confidence in the bank when you've got a whole month in",
    "start": "334919",
    "end": "341099"
  },
  {
    "text": "which your data has been taken out so the question here is what went wrong",
    "start": "341099",
    "end": "348440"
  },
  {
    "text": "they'd followed all the procedures they'd got all the sign-off they made sure that the code had been reviewed",
    "start": "348440",
    "end": "355520"
  },
  {
    "text": "they even they weren't even hubristic it wasn't just you know they were saying well nothing can possibly go wrong",
    "start": "355520",
    "end": "362250"
  },
  {
    "text": "they had a back-up plan so you know they had a plan to rollback so what went",
    "start": "362250",
    "end": "368610"
  },
  {
    "text": "wrong well what I think went wrong is this the people in the room knew that",
    "start": "368610",
    "end": "377610"
  },
  {
    "start": "373000",
    "end": "435000"
  },
  {
    "text": "failure was an option but the software didn't the software did not anticipate",
    "start": "377610",
    "end": "383849"
  },
  {
    "text": "the possibility that things could go wrong so when that job scheduler started",
    "start": "383849",
    "end": "389699"
  },
  {
    "text": "up it just assumed that when it ordered a job to run that all the jobs that needed to have been run before that",
    "start": "389699",
    "end": "396570"
  },
  {
    "text": "would have been run and none of the jobs that were running bothered to check if the data was in the",
    "start": "396570",
    "end": "403020"
  },
  {
    "text": "correct place they just plowed on regardless so all of these different",
    "start": "403020",
    "end": "408420"
  },
  {
    "text": "dependencies led to the software being brittle and this is the problem then I",
    "start": "408420",
    "end": "416340"
  },
  {
    "text": "want to address in order to be reliable you can't just have a you can't just",
    "start": "416340",
    "end": "422910"
  },
  {
    "text": "have the situation where you're you know people anticipate failure but your software has to anticipate it as well so",
    "start": "422910",
    "end": "430350"
  },
  {
    "text": "now I want to talk a little bit about Starling Bank snarling bank we built a",
    "start": "430350",
    "end": "438240"
  },
  {
    "start": "435000",
    "end": "491000"
  },
  {
    "text": "bank in a year approximately so we started building the bank in about",
    "start": "438240",
    "end": "443730"
  },
  {
    "text": "January 2016 and by January 2017 we were ready to run",
    "start": "443730",
    "end": "450510"
  },
  {
    "text": "in a closed beta so we had you know all of the things that you traditionally",
    "start": "450510",
    "end": "456170"
  },
  {
    "text": "expect from the bank the ability to make direct debit payments the ability to you",
    "start": "456170",
    "end": "462840"
  },
  {
    "text": "know send money from one account to another card payments and so on and that sort of thing so we had all of that",
    "start": "462840",
    "end": "469050"
  },
  {
    "text": "stuff and we made it in a year from scratch from nothing and then we you",
    "start": "469050",
    "end": "474420"
  },
  {
    "text": "know carried on we launched in the App Store's launched publicly in May and we've been going and building up more",
    "start": "474420",
    "end": "480420"
  },
  {
    "text": "and more features since then insights on your spending savings goals the ability",
    "start": "480420",
    "end": "485910"
  },
  {
    "text": "to what we call styling pay me where you can settle up bills and that sort of thing so today we have all of these",
    "start": "485910",
    "end": "494340"
  },
  {
    "text": "different features and more I haven't listed them all by any means but we are",
    "start": "494340",
    "end": "500490"
  },
  {
    "text": "carrying on going you know great guns with developing all of these new",
    "start": "500490",
    "end": "505890"
  },
  {
    "text": "features so another thing I want to focus on and ask is how can we have all",
    "start": "505890",
    "end": "512700"
  },
  {
    "text": "of these features deploy them all you know keep on coding coding coding and at",
    "start": "512700",
    "end": "517979"
  },
  {
    "text": "the same time maintain that reliability that is so important how can we make",
    "start": "517979",
    "end": "523020"
  },
  {
    "text": "sure that we are not dis stabilizing our code base by going fast with this",
    "start": "523020",
    "end": "528540"
  },
  {
    "text": "feature deployment now some of you may have noticed that",
    "start": "528540",
    "end": "535420"
  },
  {
    "start": "531000",
    "end": "601000"
  },
  {
    "text": "the title of this track is cutting edge languages and you might be wondering",
    "start": "535420",
    "end": "540670"
  },
  {
    "text": "hang on a minute he's talking about Java he had the word Java in his title slide hasn't Java been around for two decades",
    "start": "540670",
    "end": "547720"
  },
  {
    "text": "or more yes it has but I'm here to here to argue that you can still use Java in",
    "start": "547720",
    "end": "554170"
  },
  {
    "text": "cutting-edge applications now exactly why we picked Java I'm going to leave",
    "start": "554170",
    "end": "560740"
  },
  {
    "text": "that question hanging open for a while so we're building up a number of",
    "start": "560740",
    "end": "566260"
  },
  {
    "text": "different questions here which I'm seeking to our answer in this presentation how can you make sure that",
    "start": "566260",
    "end": "572620"
  },
  {
    "text": "you maintain reliability and don't go through a disaster like that High Street Bank I was talking about at the start",
    "start": "572620",
    "end": "578860"
  },
  {
    "text": "how can you make sure that you can develop features and you know push out",
    "start": "578860",
    "end": "584860"
  },
  {
    "text": "loads of features with increasing rapidity while at the same time maintaining reliability and why do you",
    "start": "584860",
    "end": "592660"
  },
  {
    "text": "use Java to do all of this as opposed to any other language so I'm going to hopefully speak to all of those",
    "start": "592660",
    "end": "598960"
  },
  {
    "text": "questions so next up I'm going to talk",
    "start": "598960",
    "end": "604060"
  },
  {
    "start": "601000",
    "end": "759000"
  },
  {
    "text": "about how we have designed the the",
    "start": "604060",
    "end": "609580"
  },
  {
    "text": "system at Starling bank how we have designed the server back-end code so",
    "start": "609580",
    "end": "615070"
  },
  {
    "text": "we've based ourselves on the principle of self-contained systems now I'm not",
    "start": "615070",
    "end": "622240"
  },
  {
    "text": "going to go through every single aspect of self-contained systems we have the website up there if you want to check it",
    "start": "622240",
    "end": "629950"
  },
  {
    "text": "out and read more into it but there are a number of and we haven't taken all of",
    "start": "629950",
    "end": "636130"
  },
  {
    "text": "the features of self-contained systems but there are a number of features that we have taken so the important ones are",
    "start": "636130",
    "end": "644610"
  },
  {
    "text": "that a self-contained system owns its own business logic and its own",
    "start": "644610",
    "end": "650290"
  },
  {
    "text": "data so we have a load of services running on the server and each service",
    "start": "650290",
    "end": "657400"
  },
  {
    "text": "has its own code and its own data it has an API which can be interacted with",
    "start": "657400",
    "end": "663910"
  },
  {
    "text": "either by the mobile phones are you know for the the banking apps or indeed by other",
    "start": "663910",
    "end": "670260"
  },
  {
    "text": "services but they they keep themselves",
    "start": "670260",
    "end": "675420"
  },
  {
    "text": "to themselves so they don't there's no dependencies here it's a flat structure so we don't have you know one one",
    "start": "675420",
    "end": "683010"
  },
  {
    "text": "service needs another service to run they're all independent of each other",
    "start": "683010",
    "end": "688410"
  },
  {
    "text": "and if one service isn't there the principle is that if another service if",
    "start": "688410",
    "end": "694440"
  },
  {
    "text": "service a is trying to call service B and service B isn't there service a shouldn't fall over it shouldn't go I",
    "start": "694440",
    "end": "700050"
  },
  {
    "text": "can't do anything collapse it should be able to cope with the fact that service B isn't there and that's a key point",
    "start": "700050",
    "end": "707430"
  },
  {
    "text": "that I will be coming back to you later so the other another important point is",
    "start": "707430",
    "end": "713190"
  },
  {
    "text": "that communication between these services is asynchronous so there's this idea which is going to become",
    "start": "713190",
    "end": "719040"
  },
  {
    "text": "increasingly increasingly important and prominent throughout this talk which is eventual consistency so we don't say",
    "start": "719040",
    "end": "728100"
  },
  {
    "text": "that a system the system is instantly consistent all across the board",
    "start": "728100",
    "end": "733860"
  },
  {
    "text": "it is eventually consistent and this idea that things can go wrong that you",
    "start": "733860",
    "end": "740670"
  },
  {
    "text": "can have a you know something can trip over and that an action that you're doing might not work all the way through",
    "start": "740670",
    "end": "748950"
  },
  {
    "text": "and that you have to work to get the system back into a consistent state is going to be an important one",
    "start": "748950",
    "end": "757070"
  },
  {
    "text": "so as I said we have each service",
    "start": "760130",
    "end": "765530"
  },
  {
    "text": "deployed as an instance or more likely multiple instances on the cloud each",
    "start": "765530",
    "end": "771990"
  },
  {
    "text": "each one has their own RDS instance so they have their own database which isn't",
    "start": "771990",
    "end": "778890"
  },
  {
    "text": "interacted with by any of the other services there's no startup order dependencies I",
    "start": "778890",
    "end": "786180"
  },
  {
    "text": "meant as I mentioned and the mobile layer the mobile app will draw data and",
    "start": "786180",
    "end": "791900"
  },
  {
    "text": "information from different services and make requests to different services as necessary so if you need information on",
    "start": "791900",
    "end": "798780"
  },
  {
    "text": "cards you go to the card service if you need to make a payment you go to the payment service and so on and so on so",
    "start": "798780",
    "end": "805470"
  },
  {
    "text": "you go to different services to do different things as I said we're not",
    "start": "805470",
    "end": "813210"
  },
  {
    "start": "810000",
    "end": "895000"
  },
  {
    "text": "pure SCS there are a few ways we differ so our services for instance aren't",
    "start": "813210",
    "end": "819360"
  },
  {
    "text": "owned by a single team we don't say this is the car team and they have to sign off on anything to do with cards you",
    "start": "819360",
    "end": "827550"
  },
  {
    "text": "know that we do allow everyone to make changes to every single system and that",
    "start": "827550",
    "end": "833070"
  },
  {
    "text": "might change in the future we might move towards a more you know ownership model",
    "start": "833070",
    "end": "838170"
  },
  {
    "text": "of of services but at the moment anyone can go into any service and change anything",
    "start": "838170",
    "end": "843660"
  },
  {
    "text": "and there is one key area where we have to synchronize we try and keep",
    "start": "843660",
    "end": "850230"
  },
  {
    "text": "everything asynchronous but in balanced allocation which which is what happens",
    "start": "850230",
    "end": "857070"
  },
  {
    "text": "when you try and make a payment on your card so if you take your Starlin card",
    "start": "857070",
    "end": "862320"
  },
  {
    "text": "out somewhere and make a payment on it we have an SLA that says we have to respond within a very short amount of",
    "start": "862320",
    "end": "868410"
  },
  {
    "text": "time as to whether that payment can be made or not and as part of that we",
    "start": "868410",
    "end": "873900"
  },
  {
    "text": "actually have to take the money away so that is synchronous because of the",
    "start": "873900",
    "end": "878940"
  },
  {
    "text": "restrictions are imposed upon us you don't want to be waiting there at the the card terminal for everything to",
    "start": "878940",
    "end": "886050"
  },
  {
    "text": "become eventually consistent so there are a few important caveats like that",
    "start": "886050",
    "end": "891060"
  },
  {
    "text": "but for the most part it's asynchronous eventually consistent so here's a",
    "start": "891060",
    "end": "898080"
  },
  {
    "start": "895000",
    "end": "926000"
  },
  {
    "text": "diagram of what I've just explained with all of the the services talking to each other in that flat structure not a",
    "start": "898080",
    "end": "905250"
  },
  {
    "text": "pyramid not dependent on each other and the mobile and what we call the management portal so a JavaScript web",
    "start": "905250",
    "end": "912870"
  },
  {
    "text": "application that we've written for the managers of the bank to interact with that those integrate data from different",
    "start": "912870",
    "end": "921410"
  },
  {
    "text": "services as necessary so we had to",
    "start": "921410",
    "end": "929940"
  },
  {
    "text": "invent a name for this sort of architecture and we invented this handy roll off the tongue acronym which is",
    "start": "929940",
    "end": "936630"
  },
  {
    "text": "Loski editio which sounds like a village somewhere in wales but is in fact stands",
    "start": "936630",
    "end": "945030"
  },
  {
    "text": "for lots of I can't even remember it lots of autonomous services continually",
    "start": "945030",
    "end": "951000"
  },
  {
    "text": "trying to do idempotent things to each other great who here knows the meaning of the",
    "start": "951000",
    "end": "957000"
  },
  {
    "text": "word idempotent good now third to half",
    "start": "957000",
    "end": "963390"
  },
  {
    "text": "of the room great so for those of you who don't know you can go and look up",
    "start": "963390",
    "end": "968760"
  },
  {
    "text": "with the definition online but it it can be a bit weird a technical mathematical if you go and look it up on Wikipedia",
    "start": "968760",
    "end": "975150"
  },
  {
    "text": "and but to give you the the definition that's important for this talk here",
    "start": "975150",
    "end": "980340"
  },
  {
    "text": "because the word idempotent is going to start to feature a lot idempotent means",
    "start": "980340",
    "end": "985440"
  },
  {
    "text": "that if you make a that the same thing will happen if you make a request to an",
    "start": "985440",
    "end": "993300"
  },
  {
    "text": "application once as will happen if you make the same request three times so",
    "start": "993300",
    "end": "1001250"
  },
  {
    "text": "that's basically the definition we're going to be working with here so I can I can sit there and go request a request a",
    "start": "1001250",
    "end": "1010460"
  },
  {
    "text": "request a and it doesn't matter how many times I threw out requests a the command",
    "start": "1010460",
    "end": "1016130"
  },
  {
    "text": "that is associated with that request will only run once so that's that's the",
    "start": "1016130",
    "end": "1021710"
  },
  {
    "text": "important principle of idempotency now we'll come on to why that's important in",
    "start": "1021710",
    "end": "1027780"
  },
  {
    "text": "a minute so to shorten down this acronym we have a slightly slightly more",
    "start": "1027780",
    "end": "1033360"
  },
  {
    "text": "comprehensible one which is ditto architecture ditto standing for du idempotent things",
    "start": "1033360",
    "end": "1039870"
  },
  {
    "text": "to others and this is the principle that we run our the various different",
    "start": "1039870",
    "end": "1046760"
  },
  {
    "text": "self-contained systems the various different services in on our back-end with so they will be able to do things",
    "start": "1046760",
    "end": "1055440"
  },
  {
    "text": "to each other make requests of each other make commands of each other but those will be idempotent so if the",
    "start": "1055440",
    "end": "1063090"
  },
  {
    "text": "request happens to be made twice or three times or four times it doesn't matter the command itself will only be",
    "start": "1063090",
    "end": "1069900"
  },
  {
    "text": "run once so dito architecture the main",
    "start": "1069900",
    "end": "1077760"
  },
  {
    "start": "1072000",
    "end": "1185000"
  },
  {
    "text": "principle the key principle you need to think of is the one at the top each thing that you want to do is done at",
    "start": "1077760",
    "end": "1084960"
  },
  {
    "text": "least once and at most once so it's done once but the reason we separated out a",
    "start": "1084960",
    "end": "1092190"
  },
  {
    "text": "bit and say at least once and at most once is because you have to put in different systems different pieces of",
    "start": "1092190",
    "end": "1099840"
  },
  {
    "text": "code different concepts in order to make sure that these two different things happen and you have to make sure that",
    "start": "1099840",
    "end": "1107160"
  },
  {
    "text": "the at least wants thing doesn't try and run it 500 times and the most wants thing doesn't stop it from happening at",
    "start": "1107160",
    "end": "1113850"
  },
  {
    "text": "all so there are a few other important concepts up there one of the important",
    "start": "1113850",
    "end": "1123180"
  },
  {
    "text": "ones is the no distributed transactions so you've got all of these",
    "start": "1123180",
    "end": "1129300"
  },
  {
    "text": "self-contained systems and you are running a command across all of them the",
    "start": "1129300",
    "end": "1135780"
  },
  {
    "text": "transaction the transaction ality of that is not is is not distributed across",
    "start": "1135780",
    "end": "1141930"
  },
  {
    "text": "all of the different services it is independently located within each",
    "start": "1141930",
    "end": "1147030"
  },
  {
    "text": "service what that means is you have to accept the possibility that something",
    "start": "1147030",
    "end": "1153090"
  },
  {
    "text": "could go wrong in the middle so you could if you're running something across",
    "start": "1153090",
    "end": "1158460"
  },
  {
    "text": "services a B see have a situation where it successfully completes an a and doesn't",
    "start": "1158460",
    "end": "1164940"
  },
  {
    "text": "run in B and C and this comes back to this eventual consistency point your",
    "start": "1164940",
    "end": "1171179"
  },
  {
    "text": "asynchronous something could go wrong further down the line so you have to be able to catch up you have to be able to",
    "start": "1171179",
    "end": "1177120"
  },
  {
    "text": "say did that thing complete did that work item complete so I'm now going to",
    "start": "1177120",
    "end": "1183179"
  },
  {
    "text": "take you through an example of how this works and we're going to talk about the example of making a payment so in order",
    "start": "1183179",
    "end": "1198390"
  },
  {
    "start": "1185000",
    "end": "1479000"
  },
  {
    "text": "to make a payment from your bank account to another bank account a number of",
    "start": "1198390",
    "end": "1204210"
  },
  {
    "text": "things need to happen first of all I let's imagine I get out my phone and now",
    "start": "1204210",
    "end": "1211110"
  },
  {
    "text": "type in that I want to send 20 pounds to someone a few things have to happen that",
    "start": "1211110",
    "end": "1216960"
  },
  {
    "text": "request hits the server now the service it hits is a service called customer",
    "start": "1216960",
    "end": "1223070"
  },
  {
    "text": "that's the first one customer has to do a number of different things it has to firstly verify that I am me",
    "start": "1223070",
    "end": "1229830"
  },
  {
    "text": "so I'm trying to send 20 pounds out of Jason's bank account is it actually Jason making this request or is it",
    "start": "1229830",
    "end": "1236429"
  },
  {
    "text": "someone trying to you know steal Jason's money secondly it has to make sure that I actually have 20 pounds to send out",
    "start": "1236429",
    "end": "1243270"
  },
  {
    "text": "and thirdly it has to take the money out of my account reduce my balance by that 20 pounds having done all of that and",
    "start": "1243270",
    "end": "1250830"
  },
  {
    "text": "you know presuming that the verification was okay it then sends a request to the next service which is payment payments",
    "start": "1250830",
    "end": "1259320"
  },
  {
    "text": "job is to integrate with the faster payments network this is the network",
    "start": "1259320",
    "end": "1264330"
  },
  {
    "text": "that connects up most of the UK banks and allows you to send payments fast or",
    "start": "1264330",
    "end": "1269640"
  },
  {
    "text": "faster than they were sent so that service has to construct a",
    "start": "1269640",
    "end": "1276120"
  },
  {
    "text": "message and send that message off to the faster payments network the final",
    "start": "1276120",
    "end": "1282929"
  },
  {
    "text": "service involved here is bank now bank banks job is to record things in the",
    "start": "1282929",
    "end": "1289740"
  },
  {
    "text": "ledger so we have just sent off a load of money to file you know we've",
    "start": "1289740",
    "end": "1297690"
  },
  {
    "text": "just instructed Faster Payments to send out 20 pounds to someone so Faster Payments is going to come and collect",
    "start": "1297690",
    "end": "1303570"
  },
  {
    "text": "that 20 pounds from us because they've sent out the 20 pounds so they're going to present us with a bill later for that",
    "start": "1303570",
    "end": "1308880"
  },
  {
    "text": "20 pounds and indeed all of the other payments we've sent out so we need to record the fact that we owe them that",
    "start": "1308880",
    "end": "1315300"
  },
  {
    "text": "money in the ledger so that we can reconcile the bill later on so each of",
    "start": "1315300",
    "end": "1323400"
  },
  {
    "text": "these each of these systems is following in order to make sure that things are",
    "start": "1323400",
    "end": "1329160"
  },
  {
    "text": "done at least once and at most once is following a fairly consistent pattern",
    "start": "1329160",
    "end": "1334580"
  },
  {
    "text": "the first thing they all do thing number one is they they do the synchronous bit",
    "start": "1334580",
    "end": "1341310"
  },
  {
    "text": "and the synchronous bit is to do the minimum amount of validation that you really need to do at that stage and then",
    "start": "1341310",
    "end": "1347940"
  },
  {
    "text": "log that a request has been made so a request comes in from the phone or from",
    "start": "1347940",
    "end": "1353490"
  },
  {
    "text": "another service do the minimum amount of validation and then you record that in the database you say request made to do",
    "start": "1353490",
    "end": "1359640"
  },
  {
    "text": "this work item and that's it that's all the synchronous bit done you've logged the request then generally speaking very",
    "start": "1359640",
    "end": "1367890"
  },
  {
    "text": "shortly afterwards but may be a long time afterwards you have to anticipate that it might be a long time afterwards",
    "start": "1367890",
    "end": "1374600"
  },
  {
    "text": "you have to do the actual work that has been requested and the first thing you do when you",
    "start": "1374600",
    "end": "1380700"
  },
  {
    "text": "check do that is you check whether the work has already been done so we have multiple instances of each service",
    "start": "1380700",
    "end": "1387750"
  },
  {
    "text": "running so you could end up with a situation where one one service has already picked up that piece of work and",
    "start": "1387750",
    "end": "1393960"
  },
  {
    "text": "run with it so you check again has it been done and if not you carry out the work necessary and you wait for some",
    "start": "1393960",
    "end": "1401640"
  },
  {
    "text": "sort of response to indicate that that was all okay that you know that worked and if you don't receive that response",
    "start": "1401640",
    "end": "1410120"
  },
  {
    "text": "then you if you receive that response and everything's good then you mark the piece of workers done and you're",
    "start": "1410120",
    "end": "1416040"
  },
  {
    "text": "finished if you don't receive that response or something goes wrong then",
    "start": "1416040",
    "end": "1421470"
  },
  {
    "text": "you go oh something went wrong all right love the fact that it went wrong called that facts in the logs and then",
    "start": "1421470",
    "end": "1428530"
  },
  {
    "text": "don't mark the workers done and then try again one minute five minute fifteen",
    "start": "1428530",
    "end": "1434890"
  },
  {
    "text": "minutes later depending on exactly what you're trying to do you try again and try try to you know make the payment or",
    "start": "1434890",
    "end": "1443350"
  },
  {
    "text": "send the information to the ledger or whatever it is you were trying to do so",
    "start": "1443350",
    "end": "1448660"
  },
  {
    "text": "all of them are working with this particular model and indeed when payment",
    "start": "1448660",
    "end": "1454480"
  },
  {
    "text": "sends information to Bank for example payment will say or I've done the work",
    "start": "1454480",
    "end": "1460200"
  },
  {
    "text": "Bank his is your information and Bank will go thank you very much done and all bank",
    "start": "1460200",
    "end": "1466660"
  },
  {
    "text": "will do at that stage is log the request it won't try and do the processing it will just log that the request is there",
    "start": "1466660",
    "end": "1473140"
  },
  {
    "text": "and that some processing needs to be done and returned you know 2:02 accepted thank you so what happens if things go",
    "start": "1473140",
    "end": "1482920"
  },
  {
    "start": "1479000",
    "end": "1650000"
  },
  {
    "text": "wrong so we can imagine here this is the failure flow so we start off with",
    "start": "1482920",
    "end": "1490679"
  },
  {
    "text": "customer doing it's validation checking taking the money away from my account",
    "start": "1490679",
    "end": "1496059"
  },
  {
    "text": "and then contacting payments and say to say payment please make this payment please of twenty pounds and payments not",
    "start": "1496059",
    "end": "1503770"
  },
  {
    "text": "there no response so what happens customer sits round and then again it",
    "start": "1503770",
    "end": "1511150"
  },
  {
    "text": "tries again it doesn't mark the work item is done because it hasn't been completed successfully it tries again",
    "start": "1511150",
    "end": "1516760"
  },
  {
    "text": "and the second time it tries things work and it goes great fantastic so that is",
    "start": "1516760",
    "end": "1523150"
  },
  {
    "text": "the at least once aspect customer keeps trying until it gets a successful",
    "start": "1523150",
    "end": "1528700"
  },
  {
    "text": "response what about the at most wants now here what happens is payment makes",
    "start": "1528700",
    "end": "1536110"
  },
  {
    "text": "the call to bank now when payment makes the call to bank it assigns that call a",
    "start": "1536110",
    "end": "1543280"
  },
  {
    "text": "you it unique identifier of some sort to identify the request and it says here",
    "start": "1543280",
    "end": "1549820"
  },
  {
    "text": "you go Bank here is my request and here is the unique identifier associated with",
    "start": "1549820",
    "end": "1554860"
  },
  {
    "text": "that request and Bank goes great and it logs that unique identifier in its database now we",
    "start": "1554860",
    "end": "1564860"
  },
  {
    "text": "can imagine a scenario where Bank for whatever reason the message Bank the response bank gets lost it doesn't",
    "start": "1564860",
    "end": "1571940"
  },
  {
    "text": "doesn't come back banks done the work it's logged the fact that this work item needs to be done but the response has been lost along the way",
    "start": "1571940",
    "end": "1578600"
  },
  {
    "text": "so payments sitting there going well it didn't complete so payment then tries again five minutes later it goes Bank",
    "start": "1578600",
    "end": "1585680"
  },
  {
    "text": "his here's that payment I needed to make please record that in the ledger and it uses crucially the same unique",
    "start": "1585680",
    "end": "1593360"
  },
  {
    "text": "identifier it says this work item one two three please record it Bank gets",
    "start": "1593360",
    "end": "1599360"
  },
  {
    "text": "that information and it says one two three well I've already logged one two three in my database that's already",
    "start": "1599360",
    "end": "1605750"
  },
  {
    "text": "there so tick everything's fine and so it doesn't do anything it just returns",
    "start": "1605750",
    "end": "1611870"
  },
  {
    "text": "202 accepted it says yes that's done for you thank you very much 202 accepted",
    "start": "1611870",
    "end": "1617270"
  },
  {
    "text": "without actually doing anything and that's the idempotent bit the at most once it's already done that piece of",
    "start": "1617270",
    "end": "1624920"
  },
  {
    "text": "work now here we here we go into the java code this whole system is actually",
    "start": "1624920",
    "end": "1634010"
  },
  {
    "text": "reasonably simple to implement it can be implemented with two two things two",
    "start": "1634010",
    "end": "1640130"
  },
  {
    "text": "interfaces we've created or actually an in his face in an abstract class and these are recoverable command and",
    "start": "1640130",
    "end": "1647150"
  },
  {
    "text": "catch-up processor so recoverable",
    "start": "1647150",
    "end": "1652160"
  },
  {
    "start": "1650000",
    "end": "1743000"
  },
  {
    "text": "command recoverable command asks two questions which are how what would work",
    "start": "1652160",
    "end": "1658880"
  },
  {
    "text": "have I got to do what is my command and that command should be idempotent Lee run and how do we mark that this has",
    "start": "1658880",
    "end": "1667640"
  },
  {
    "text": "been done how do i record the fact that it has been done in the database so",
    "start": "1667640",
    "end": "1673310"
  },
  {
    "text": "those are the two questions that I saw it asks and here the eagle-eyed among",
    "start": "1673310",
    "end": "1679580"
  },
  {
    "text": "you can read that is the is our recoverable command interface with its",
    "start": "1679580",
    "end": "1684650"
  },
  {
    "text": "two methods on it one asking what needs to be done and the other asking how do i market as done the second is",
    "start": "1684650",
    "end": "1694280"
  },
  {
    "text": "the ketchup processor and the ketchup processor is a thing that runs is",
    "start": "1694280",
    "end": "1699980"
  },
  {
    "text": "scheduled to run every 5 minutes every 15 minutes every 1 minute depending on what you're doing and it asks two",
    "start": "1699980",
    "end": "1707030"
  },
  {
    "text": "questions one is what work items do I need to try and process and the second",
    "start": "1707030",
    "end": "1713630"
  },
  {
    "text": "question is what is the recoverable command which I need to use to process them and the what items do I need to",
    "start": "1713630",
    "end": "1721460"
  },
  {
    "text": "process we you know give it about a thousand items at most two to rerun and",
    "start": "1721460",
    "end": "1728000"
  },
  {
    "text": "we say here are a thousand UIDs of the thousand work items that you will need to reprocess and for each one it will",
    "start": "1728000",
    "end": "1734780"
  },
  {
    "text": "say great take that and run it through the recoverable command and here is the",
    "start": "1734780",
    "end": "1745400"
  },
  {
    "start": "1743000",
    "end": "1803000"
  },
  {
    "text": "class with the various methods on it to rerun that for you great so we've got",
    "start": "1745400",
    "end": "1756110"
  },
  {
    "text": "this architecture which ensures that we will be eventually consistent we we've",
    "start": "1756110",
    "end": "1764480"
  },
  {
    "text": "constructed it so that if a problem occurs if something goes down if one of",
    "start": "1764480",
    "end": "1771230"
  },
  {
    "text": "the services disappears then everything else will start pinging your requests at",
    "start": "1771230",
    "end": "1776540"
  },
  {
    "text": "it and eventually when the service comes back up again it will be able to prou",
    "start": "1776540",
    "end": "1782420"
  },
  {
    "text": "state those requests and process them and if in fact it had already processed some of those requests then it will just",
    "start": "1782420",
    "end": "1788930"
  },
  {
    "text": "go well thank you I've already done that so we can be sure that if bits of the",
    "start": "1788930",
    "end": "1794300"
  },
  {
    "text": "service bits of the system drop out if in particular services disappear then we won't get catastrophic failure",
    "start": "1794300",
    "end": "1803890"
  },
  {
    "start": "1803000",
    "end": "1849000"
  },
  {
    "text": "so we can test this we've got the ability to test this by killing servers",
    "start": "1803890",
    "end": "1811010"
  },
  {
    "text": "so we can you know try removing all instances of a particular server to see",
    "start": "1811010",
    "end": "1816110"
  },
  {
    "text": "how our system won't cope or we can recycle them we can you know restart them and we don't just do this in tests we do",
    "start": "1816110",
    "end": "1823269"
  },
  {
    "text": "it in production we have chaos technology in production our Netflix",
    "start": "1823269",
    "end": "1828700"
  },
  {
    "text": "which goes round and kills servers for us at random just says I am taking this instance and it is gone and so you know",
    "start": "1828700",
    "end": "1835389"
  },
  {
    "text": "therefore we can be sure that there are you know when we you know we're not just",
    "start": "1835389",
    "end": "1840779"
  },
  {
    "text": "talking the talk we're actually walking the walk we're making sure that our service is reliable even when things",
    "start": "1840779",
    "end": "1847299"
  },
  {
    "text": "disappear and everyone is empowered to",
    "start": "1847299",
    "end": "1852820"
  },
  {
    "start": "1849000",
    "end": "1885000"
  },
  {
    "text": "do this so it's not you don't need special permissions you don't need you know people to come along and give",
    "start": "1852820",
    "end": "1858789"
  },
  {
    "text": "sign-off you can't do that with the chaos engine because it will just randomly determine to kill things so",
    "start": "1858789",
    "end": "1864600"
  },
  {
    "text": "this is we know the entire organization all the engineering staff are empowered",
    "start": "1864600",
    "end": "1869769"
  },
  {
    "text": "to go around and test out what would happen if we killed a thing because with",
    "start": "1869769",
    "end": "1875259"
  },
  {
    "text": "this diso architecture we are reasonably confident that things will catch up and",
    "start": "1875259",
    "end": "1881230"
  },
  {
    "text": "get back to eventual consistency now",
    "start": "1881230",
    "end": "1887169"
  },
  {
    "start": "1885000",
    "end": "1939000"
  },
  {
    "text": "this also helps coming back to one of our earlier questions how do we keep delivering those features while still",
    "start": "1887169",
    "end": "1893379"
  },
  {
    "text": "maintaining reliability we can do this continual delivery stuff because we've",
    "start": "1893379",
    "end": "1901509"
  },
  {
    "text": "got the you know we've we've got the ability to go let's deploy some code to one of the self-contained systems one of",
    "start": "1901509",
    "end": "1907659"
  },
  {
    "text": "the services and if that service goes wrong if something happens that yeah it",
    "start": "1907659",
    "end": "1913240"
  },
  {
    "text": "means that that service goes down or stops processing correctly we can take it down we can switch it off and then we",
    "start": "1913240",
    "end": "1919690"
  },
  {
    "text": "can bring bring stuff back we can you know bring all of the the services back",
    "start": "1919690",
    "end": "1925299"
  },
  {
    "text": "to life and so on and things will catch up things will become consistent so we",
    "start": "1925299",
    "end": "1931570"
  },
  {
    "text": "deliver in this continuous manner and when we say we deliver continuously what",
    "start": "1931570",
    "end": "1937480"
  },
  {
    "text": "we've really done what we've ended up doing is turning the two-speed IT",
    "start": "1937480",
    "end": "1944230"
  },
  {
    "start": "1939000",
    "end": "2056000"
  },
  {
    "text": "processes of most banks on its head so thinking back to that story I had at the",
    "start": "1944230",
    "end": "1950840"
  },
  {
    "text": "start of the the people deploying the code they will have gone through a",
    "start": "1950840",
    "end": "1956510"
  },
  {
    "text": "laborious process to get that code deploy it into production it'll be deployed through endless",
    "start": "1956510",
    "end": "1961820"
  },
  {
    "text": "numbers of stages endless numbers of cycles and it will have had sign-off from huge numbers of different people",
    "start": "1961820",
    "end": "1968690"
  },
  {
    "text": "going all you know this is this is right this is wrong change this do that you have all of this sign-off all of this",
    "start": "1968690",
    "end": "1975909"
  },
  {
    "text": "all of this ceremony around it and the problem with that is that it means that",
    "start": "1975909",
    "end": "1982279"
  },
  {
    "text": "deploying code on the back end in the server's is glacially slow so what ends",
    "start": "1982279",
    "end": "1988070"
  },
  {
    "text": "up happening is that the customer experience in the app or in the web UI",
    "start": "1988070",
    "end": "1993110"
  },
  {
    "text": "it iterates quite quickly but it's going over this very slow very slow moving",
    "start": "1993110",
    "end": "1998980"
  },
  {
    "text": "server code we've turned that on its head we deploy code to production on our",
    "start": "1998980",
    "end": "2006100"
  },
  {
    "text": "back-end pretty much every day at least once every day if not more often so",
    "start": "2006100",
    "end": "2012340"
  },
  {
    "text": "there are small chunks of code going into production all the time and this",
    "start": "2012340",
    "end": "2019990"
  },
  {
    "text": "this we can do because we can one take down individual bits of the system because we've isolated them in different",
    "start": "2019990",
    "end": "2026470"
  },
  {
    "text": "services and because the different services can catch up with each other so we don't have to wait for ages or have",
    "start": "2026470",
    "end": "2033130"
  },
  {
    "text": "change freeze periods or anything like that we can deploy code rapidly we can",
    "start": "2033130",
    "end": "2040750"
  },
  {
    "text": "even point to the stage where we can get people to look at individual commits",
    "start": "2040750",
    "end": "2045789"
  },
  {
    "text": "before we go out and say you know is this commit good is this commit good is this Connect good because there are few",
    "start": "2045789",
    "end": "2052960"
  },
  {
    "text": "enough commits in each individual release that you can do that we have",
    "start": "2052960",
    "end": "2058179"
  },
  {
    "start": "2056000",
    "end": "2097000"
  },
  {
    "text": "something we call the rolling giffy and this is giffy as a plugin for slack where you can ask it to bring up a gif",
    "start": "2058179",
    "end": "2065800"
  },
  {
    "text": "of any particular things so when anyone is deploying code to production they",
    "start": "2065800",
    "end": "2071830"
  },
  {
    "text": "will have this rolling giffy to tell people that the code is rolling and that",
    "start": "2071830",
    "end": "2076929"
  },
  {
    "text": "they should you know cast their eyes up at the various exception log monitors and",
    "start": "2076929",
    "end": "2081940"
  },
  {
    "text": "to see if anything is going wrong and we I think we've almost exhausted gif is",
    "start": "2081940",
    "end": "2088210"
  },
  {
    "text": "stock of gifts based on the words roll rolling and so on and you can see a",
    "start": "2088210",
    "end": "2094000"
  },
  {
    "text": "selection of our favorite ones there and if something goes wrong which inevitably",
    "start": "2094000",
    "end": "2100390"
  },
  {
    "start": "2097000",
    "end": "2184000"
  },
  {
    "text": "it does we're not perfect we you know deploy code that makes mistakes those mistakes are obvious we have a very loud",
    "start": "2100390",
    "end": "2110670"
  },
  {
    "text": "exception track going there's an exception there's an exception a graph bite up on a screen in our office that",
    "start": "2110670",
    "end": "2117640"
  },
  {
    "text": "says you know these are the exceptions happening in production and you get a very familiar pattern whenever you get a",
    "start": "2117640",
    "end": "2124300"
  },
  {
    "text": "piece of work that is repeatedly failing to run and that is this pattern you see",
    "start": "2124300",
    "end": "2132010"
  },
  {
    "text": "here the eagle-eyed among you will see that every minute there are two spikes",
    "start": "2132010",
    "end": "2138970"
  },
  {
    "text": "of two exceptions each two spikes because there are two instances of the",
    "start": "2138970",
    "end": "2144160"
  },
  {
    "text": "particular service that is failing running and this is being run on a catch-up processor that's run every",
    "start": "2144160",
    "end": "2150250"
  },
  {
    "text": "minute and there are two work items that it can't process keeps trying and it keeps failing but that's okay because",
    "start": "2150250",
    "end": "2157619"
  },
  {
    "text": "you know we know that we know that there's a problem we can get on and fix it and if we need to do another release",
    "start": "2157619",
    "end": "2163599"
  },
  {
    "text": "a small patch release into production that's fine we can do that immediately and then once that happens the errors",
    "start": "2163599",
    "end": "2172569"
  },
  {
    "text": "will go away and all of the work that was supposed to happen as a result of whatever command it was that is now",
    "start": "2172569",
    "end": "2177849"
  },
  {
    "text": "failing will catch up and we will become eventually consistent so a case study of",
    "start": "2177849",
    "end": "2187030"
  },
  {
    "start": "2184000",
    "end": "2319000"
  },
  {
    "text": "this is something that happened to us a I think it was about a month or two ago",
    "start": "2187030",
    "end": "2195630"
  },
  {
    "text": "there was a failed DB upgrade in one of our services called notification and as",
    "start": "2195630",
    "end": "2201490"
  },
  {
    "text": "you can guess notification is responsible for notifying sending out notifications to customers either via",
    "start": "2201490",
    "end": "2207849"
  },
  {
    "text": "email or via message in app or what have you to say you know your payment has",
    "start": "2207849",
    "end": "2213760"
  },
  {
    "text": "been made or your out of money or something like this there was a failed DB upgrade which",
    "start": "2213760",
    "end": "2219820"
  },
  {
    "text": "locked the notification database said it couldn't do anything it couldn't log any requests or anything like that so it",
    "start": "2219820",
    "end": "2225850"
  },
  {
    "text": "kept just throwing back no I can't do that no I can't do that now a notification is non-critical it's",
    "start": "2225850",
    "end": "2232180"
  },
  {
    "text": "important but you know it's not going to slow anything down however customer obviously started",
    "start": "2232180",
    "end": "2238540"
  },
  {
    "text": "saying well I need to send notifications so it kept going notify oh no wrong response okay wait",
    "start": "2238540",
    "end": "2245320"
  },
  {
    "text": "try again try again try again and this number of work items that it needed to",
    "start": "2245320",
    "end": "2251020"
  },
  {
    "text": "do built up and up and up and it's got a Q sitting there waiting to send out all these work items and that Q started",
    "start": "2251020",
    "end": "2258070"
  },
  {
    "text": "filling up with all of these failed notifications and that meant that other work items that were requested of",
    "start": "2258070",
    "end": "2264460"
  },
  {
    "text": "customer couldn't couldn't happen because they were they were you know try",
    "start": "2264460",
    "end": "2269920"
  },
  {
    "text": "to put them in the queue and the queue is full so things started failing so",
    "start": "2269920",
    "end": "2275380"
  },
  {
    "text": "what do we do well we can just kill customer right we can take down the customer service wipe",
    "start": "2275380",
    "end": "2280960"
  },
  {
    "text": "the queue because all of the work items that need to be done are recorded so we've wiped the queue and then we",
    "start": "2280960",
    "end": "2287830"
  },
  {
    "text": "started up again and again it starts filling up and then we can just reset it",
    "start": "2287830",
    "end": "2293320"
  },
  {
    "text": "wipe it and so on and we can keep doing that until someone comes along and fixes the problem in notification that means",
    "start": "2293320",
    "end": "2299650"
  },
  {
    "text": "that notifications aren't getting sent out and once notification is fixed and deployed then we're in a happy state",
    "start": "2299650",
    "end": "2306610"
  },
  {
    "text": "because the queue will fill up but then items will start flowing through notification correctly and will be",
    "start": "2306610",
    "end": "2312130"
  },
  {
    "text": "getting marked as done and taken off the queue not get put back into the queue by customer all right so coming all the way",
    "start": "2312130",
    "end": "2322570"
  },
  {
    "start": "2319000",
    "end": "2413000"
  },
  {
    "text": "back to the the start why Java then why do we need to do this in Java the answer",
    "start": "2322570",
    "end": "2329140"
  },
  {
    "text": "that we have is that Java is good because exceptions are noisy and",
    "start": "2329140",
    "end": "2334360"
  },
  {
    "text": "difficult to ignore we want the exceptions to be noisy we want there to be a lot of volume a lot of you know",
    "start": "2334360",
    "end": "2341950"
  },
  {
    "text": "spikes on graphs and so on because then we can see that something is going wrong",
    "start": "2341950",
    "end": "2347230"
  },
  {
    "text": "we can run over and go are great you know let's now fix it and in other languages that those exceptions can",
    "start": "2347230",
    "end": "2353380"
  },
  {
    "text": "often be less noisy they can you know you have to have explicit handling whereas Java will you know merrily throw",
    "start": "2353380",
    "end": "2361420"
  },
  {
    "text": "exceptions up into your logs for you and you can measure that and that's a key part of making sure that we spot errors",
    "start": "2361420",
    "end": "2367840"
  },
  {
    "text": "quickly and are able to fix them it's easy there are some other more minor",
    "start": "2367840",
    "end": "2374740"
  },
  {
    "text": "points as well it's easy to integrate with legacy third parties and as you can imagine there are a lot of those in",
    "start": "2374740",
    "end": "2380380"
  },
  {
    "text": "banking Java one of the complaints about Java is that it's not very lightweight",
    "start": "2380380",
    "end": "2386970"
  },
  {
    "text": "we think it can be if you manage your dependencies well and finally there's",
    "start": "2386970",
    "end": "2393160"
  },
  {
    "text": "the ecosystem reliability Java has a lot of users because it's 20 or so years old 22 years old",
    "start": "2393160",
    "end": "2399790"
  },
  {
    "text": "what-have-you and it has a lot of a big potential job market so we can maintain",
    "start": "2399790",
    "end": "2405210"
  },
  {
    "text": "reliability on the ecosystem level as well so just to wrap up some important",
    "start": "2405210",
    "end": "2412510"
  },
  {
    "text": "takeaways firstly give everything a you it if you want to implement this source",
    "start": "2412510",
    "end": "2418690"
  },
  {
    "start": "2413000",
    "end": "2452000"
  },
  {
    "text": "at the sort of architecture everything needs a unique identifier to be generated absolutely everything so make",
    "start": "2418690",
    "end": "2426850"
  },
  {
    "text": "sure you give every request every item every payment every customer every account every whatever a you it so that",
    "start": "2426850",
    "end": "2434770"
  },
  {
    "text": "you can use that unit throughout your systems to guarantee idempotency so that",
    "start": "2434770",
    "end": "2440650"
  },
  {
    "text": "you're not sitting there going I'm going to determine whether this is the same payment based on the date and the amount",
    "start": "2440650",
    "end": "2445840"
  },
  {
    "text": "and the customer and no just assign the payment to you it and then you can ensure that it is the same payment it's",
    "start": "2445840",
    "end": "2453609"
  },
  {
    "start": "2452000",
    "end": "2483000"
  },
  {
    "text": "not just hardware that can fail hardware can fail but software can fail too",
    "start": "2453609",
    "end": "2459250"
  },
  {
    "text": "people can write buggy software and when people write buggy software mistakes can",
    "start": "2459250",
    "end": "2464619"
  },
  {
    "text": "happen so make sure that your code anticipates that don't just assume that",
    "start": "2464619",
    "end": "2470080"
  },
  {
    "text": "you know don't write code that assumes that everything's going to be fine write code that assumes everything's not going",
    "start": "2470080",
    "end": "2476140"
  },
  {
    "text": "to be fine right mistrustful code code that is suspicious and power annoyed Orfalea cherish your bad data we",
    "start": "2476140",
    "end": "2486320"
  },
  {
    "start": "2483000",
    "end": "2514000"
  },
  {
    "text": "have never cleared down our test systems database even though it's full of rotten",
    "start": "2486320",
    "end": "2494120"
  },
  {
    "text": "data from half completed enhancements and developments and so on even though",
    "start": "2494120",
    "end": "2499820"
  },
  {
    "text": "it's filled with all these bugs and mistakes we like it like that because it points out where failures can",
    "start": "2499820",
    "end": "2505490"
  },
  {
    "text": "happen and it points out what happens when those failures happen so you can",
    "start": "2505490",
    "end": "2510920"
  },
  {
    "text": "make sure that everything is good and finally empower people you can do",
    "start": "2510920",
    "end": "2518690"
  },
  {
    "start": "2514000",
    "end": "2543000"
  },
  {
    "text": "anything that you can undo so as long as you're writing code in this fashion as",
    "start": "2518690",
    "end": "2524870"
  },
  {
    "text": "long as you're writing code to anticipate and be reliable and you know",
    "start": "2524870",
    "end": "2530120"
  },
  {
    "text": "have this this catch-up a ball at least once at most wants philosophy then if",
    "start": "2530120",
    "end": "2535820"
  },
  {
    "text": "you want to undo something if you want to do something you can do it because you can undo it if it goes wrong so",
    "start": "2535820",
    "end": "2544310"
  },
  {
    "text": "that's my talk a quick plug for another talk about Starling Bank which is",
    "start": "2544310",
    "end": "2550280"
  },
  {
    "text": "tomorrow at 5:25 on the next gen Bank track if you want to learn about the mobile site of Starling this is the",
    "start": "2550280",
    "end": "2557480"
  },
  {
    "text": "server side if you want to learn about the mobile site go and watch that and",
    "start": "2557480",
    "end": "2562540"
  },
  {
    "text": "that is the end of my presentation thank you very much [Applause]",
    "start": "2562540",
    "end": "2569279"
  },
  {
    "text": "excellent thank you very much Jason who has a question I will do my start at the",
    "start": "2571880",
    "end": "2578670"
  },
  {
    "text": "front so we have described this scenario",
    "start": "2578670",
    "end": "2583710"
  },
  {
    "text": "when you're something you depend on like notifications for service keeps failing and you are managing this by clearing",
    "start": "2583710",
    "end": "2591660"
  },
  {
    "text": "the state and then probably playing everything from German I'm wondering with this process is automated or to do",
    "start": "2591660",
    "end": "2596820"
  },
  {
    "text": "this manually so humid so you'll notice",
    "start": "2596820",
    "end": "2602040"
  },
  {
    "text": "that no notification service keeps failing for some reason you can't do stuff and your queue keeps filling up so",
    "start": "2602040",
    "end": "2609540"
  },
  {
    "text": "your recovery procedure is to stop accepting requests and then at some point later recover everything from the",
    "start": "2609540",
    "end": "2615180"
  },
  {
    "text": "journal is this whole end-to-end processes automated as a recovery so the",
    "start": "2615180",
    "end": "2620820"
  },
  {
    "text": "recovery and the moment is manual but I'm pretty sure we will automate it in in the near future so we already have",
    "start": "2620820",
    "end": "2628770"
  },
  {
    "text": "automation in terms of we you know have a a number of instances that we want to",
    "start": "2628770",
    "end": "2634350"
  },
  {
    "text": "run in in for any particular service and if that number of instances number of",
    "start": "2634350",
    "end": "2640770"
  },
  {
    "text": "healthy instances drops below a certain number then we'll start bringing more more instances of that service up again",
    "start": "2640770",
    "end": "2648060"
  },
  {
    "text": "at the moment the problem I described with the load balancer and the queues filling up that has to be dealt with bus",
    "start": "2648060",
    "end": "2653190"
  },
  {
    "text": "by us manually killing the services and then having another one automatically brought up for us but I'm sure that you",
    "start": "2653190",
    "end": "2659640"
  },
  {
    "text": "know as we go on we'll start there or to make this sort of thing and you know make sure that we can run it without",
    "start": "2659640",
    "end": "2665430"
  },
  {
    "text": "having to first to have someone sitting there pressing a button over and over again",
    "start": "2665430",
    "end": "2671180"
  },
  {
    "text": "this yeah they give up the talk I have a question",
    "start": "2672569",
    "end": "2679940"
  },
  {
    "text": "regarding Ardis you mentioned that you use it and they have down times for the",
    "start": "2679940",
    "end": "2685760"
  },
  {
    "text": "maintenance so I'm wondering how you eliminate those yeah absolutely so we in",
    "start": "2685760",
    "end": "2692840"
  },
  {
    "text": "addition to not in addition to her expecting that the the service cannot be",
    "start": "2692840",
    "end": "2698660"
  },
  {
    "text": "there as a whole we also have to anticipate that sort of thing that you just mentioned that the service will be",
    "start": "2698660",
    "end": "2704420"
  },
  {
    "text": "there the code will be running but there'll be no database backing it now obviously if that happens then when we",
    "start": "2704420",
    "end": "2710840"
  },
  {
    "text": "try and log a request we can't log that request so we will return failure you know that's out and",
    "start": "2710840",
    "end": "2717130"
  },
  {
    "text": "having done that we will then go oh okay that's out great well you know stop try",
    "start": "2717130",
    "end": "2723770"
  },
  {
    "text": "again try again etc etc so we've you know we've anticipated that being a",
    "start": "2723770",
    "end": "2729320"
  },
  {
    "text": "problem as well exceptions will be thrown if we can't get to the database yeah you talked about self-contained",
    "start": "2729320",
    "end": "2738650"
  },
  {
    "text": "architectures basically how are they different from micro services that's a",
    "start": "2738650",
    "end": "2746330"
  },
  {
    "text": "good question so I think that the the the a lot of",
    "start": "2746330",
    "end": "2755870"
  },
  {
    "text": "there are a lot of similarities but I would say that the one of the one of the key differences is that it's not it's",
    "start": "2755870",
    "end": "2762950"
  },
  {
    "text": "what I would call a micro lift so it's not a monolith it's not a thing that you know tries to do everything but it is it",
    "start": "2762950",
    "end": "2769430"
  },
  {
    "text": "is a service each self-contained system tries to do a number of different things and has a you know a reasonably chunky",
    "start": "2769430",
    "end": "2776660"
  },
  {
    "text": "architecture and database behind it but we try and restrict you know so it's",
    "start": "2776660",
    "end": "2781790"
  },
  {
    "text": "sort of halfway in between I would say those two so it's a good question I'm",
    "start": "2781790",
    "end": "2788960"
  },
  {
    "text": "sure the micro services guys could give you a better answer than I've just given you say check with them hey thanks for",
    "start": "2788960",
    "end": "2796130"
  },
  {
    "text": "good talk do you guys use circuit breakers or that type of technology to",
    "start": "2796130",
    "end": "2801410"
  },
  {
    "text": "to limit the number of requests you get down to a failing system yes we start after that incident I described we",
    "start": "2801410",
    "end": "2807830"
  },
  {
    "text": "started using more circuit-breaker technologies that we could start you know stop essentially",
    "start": "2807830",
    "end": "2814470"
  },
  {
    "text": "one service committing a you know a denial-of-service attack on another service by just constantly bombarding it",
    "start": "2814470",
    "end": "2820680"
  },
  {
    "text": "with requests that it couldn't fulfill so that that was part of the our",
    "start": "2820680",
    "end": "2826410"
  },
  {
    "text": "response to that notification incident that I talked about could you elaborate",
    "start": "2826410",
    "end": "2832110"
  },
  {
    "text": "about using a sink HTTP over like a message but such as Apache Kafka missus",
    "start": "2832110",
    "end": "2840350"
  },
  {
    "text": "why issues a sink eight over HTTP I'm thinking in the database instead of",
    "start": "2840350",
    "end": "2846210"
  },
  {
    "text": "having a message bus such as Kafka we've so we found it's",
    "start": "2846210",
    "end": "2852060"
  },
  {
    "text": "just it's less stuff to do is less you know infrastructure to put in place so",
    "start": "2852060",
    "end": "2859650"
  },
  {
    "text": "we don't we don't feel we need it yet we might we might change our minds on that",
    "start": "2859650",
    "end": "2865380"
  },
  {
    "text": "at some point but at the moment we're just trying to only implement things",
    "start": "2865380",
    "end": "2870810"
  },
  {
    "text": "that we think we need a great talk how do you handle large database updates and",
    "start": "2870810",
    "end": "2877140"
  },
  {
    "text": "data schema updates or haven't you had to handle that you're fairly new eventual consistency so the way we",
    "start": "2877140",
    "end": "2886140"
  },
  {
    "text": "handle large database updates such as I don't know putting in index on a column",
    "start": "2886140",
    "end": "2891870"
  },
  {
    "text": "on a table and we know to be giant is that rather than running it at startup",
    "start": "2891870",
    "end": "2897000"
  },
  {
    "text": "time in an upgrade script we have a we have a you know a background task that",
    "start": "2897000",
    "end": "2903390"
  },
  {
    "text": "we can run at command to to put this index in so we can make sure everything",
    "start": "2903390",
    "end": "2908550"
  },
  {
    "text": "started up and everything's you know there and there are two instances running and then we can run the job and",
    "start": "2908550",
    "end": "2914700"
  },
  {
    "text": "that job will run in one instance and if that goes bang or something goes wrong then we can roll it back and consider",
    "start": "2914700",
    "end": "2921750"
  },
  {
    "text": "another approach",
    "start": "2921750",
    "end": "2924710"
  },
  {
    "text": "how do you mean yes so each each data",
    "start": "2928820",
    "end": "2939750"
  },
  {
    "text": "model or the data models are specific to particular instances particular services",
    "start": "2939750",
    "end": "2945090"
  },
  {
    "text": "so they won't cross services that's one of the key the key principles of this so",
    "start": "2945090",
    "end": "2950990"
  },
  {
    "text": "it won't you know we won't get into a situation where a date a change in a",
    "start": "2950990",
    "end": "2956700"
  },
  {
    "text": "data model will affect more than one system at once basically I'm so thank",
    "start": "2956700",
    "end": "2963359"
  },
  {
    "text": "you very much to Jason extra questions [Applause]",
    "start": "2963359",
    "end": "2969800"
  }
]