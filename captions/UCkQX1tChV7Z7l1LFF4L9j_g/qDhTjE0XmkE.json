[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "good morning all so wes has kind of said what i'm kind of coming here to talk a little bit about because 10 years ago actually at this q con was",
    "start": "4640",
    "end": "12719"
  },
  {
    "text": "the first time i talked publicly about el max and the disruptor so da foil and i gave our first talk",
    "start": "12719",
    "end": "18320"
  },
  {
    "text": "we were both really nervous uh 10 years later i'm still really nervous doing talk so if anybody",
    "start": "18320",
    "end": "23840"
  },
  {
    "text": "ever thinks speakers get it easy it's not not for me anyway i find this quite nerve-wracking most",
    "start": "23840",
    "end": "30000"
  },
  {
    "text": "of the time like we had this attention heading uh grabbing headline at that time where",
    "start": "30000",
    "end": "35040"
  },
  {
    "text": "we said we could do a hundred thousand transactions a second at under one millisecond of latency and that was",
    "start": "35040",
    "end": "42480"
  },
  {
    "text": "pretty cool at that time uh most systems didn't do that if you've",
    "start": "42480",
    "end": "47680"
  },
  {
    "text": "seen that some financial exchanges were in that space so there's a very few applications that sort of were running at that sort",
    "start": "47680",
    "end": "54000"
  },
  {
    "text": "of speed and we're not just talking about the core of the system we're talking about external requests coming in through",
    "start": "54000",
    "end": "59440"
  },
  {
    "text": "gateways processing it sort of making this thing reliable and responding back to customers in under a",
    "start": "59440",
    "end": "65439"
  },
  {
    "text": "millisecond and we were just running about that sometimes we were a bit worse sometimes we're a bit better so on average",
    "start": "65439",
    "end": "72000"
  },
  {
    "text": "we were kind of around there at that time 10 years later is it is it 10 times better kind",
    "start": "72000",
    "end": "78640"
  },
  {
    "text": "of interesting like are we now running at a million transactions per second in the financial",
    "start": "78640",
    "end": "84720"
  },
  {
    "text": "exchange space like i'm not at lmax anymore i'm not talking about that which is generally in the exchange space well some of the",
    "start": "84720",
    "end": "91040"
  },
  {
    "text": "better ones are at that level of performance so we have gone up an order of magnitude and throughput",
    "start": "91040",
    "end": "97680"
  },
  {
    "text": "what about latency have we come down from one millisecond well yes actually a a lot so used to say",
    "start": "97680",
    "end": "105040"
  },
  {
    "text": "are we dying below 100 microseconds the best exchanges around are well below",
    "start": "105040",
    "end": "110720"
  },
  {
    "text": "100 microseconds down to a few tens of microseconds typically i can't say exactly",
    "start": "110720",
    "end": "116320"
  },
  {
    "text": "what sort of speed some have but they're very low but there's been a lot of really interesting changes over this",
    "start": "116320",
    "end": "123040"
  },
  {
    "text": "time and that's what i want to kind of talk about today and go through that so four main topics",
    "start": "123040",
    "end": "130560"
  },
  {
    "text": "looking at how things have evolved particularly how design has evolved how do we make things resilient fault",
    "start": "130800",
    "end": "137040"
  },
  {
    "text": "tolerance or robust in this space that's also really important and there's been some fundamental changes there performance as i alluded",
    "start": "137040",
    "end": "144640"
  },
  {
    "text": "to has stepped forward significantly i'm going to get into that and how we deploy these things has also",
    "start": "144640",
    "end": "151680"
  },
  {
    "text": "quite significantly changed in the last 10 years and these are all kind of wrapped up together they're not",
    "start": "151680",
    "end": "157120"
  },
  {
    "text": "really distinct they all interact with each other there's some interesting ways they play it together",
    "start": "157120",
    "end": "163200"
  },
  {
    "text": "so kind of let's start off first of all with design and if you look at an exchange they're",
    "start": "163200",
    "end": "168879"
  },
  {
    "start": "164000",
    "end": "164000"
  },
  {
    "text": "all designed in a similar sort of way typically they're state machines so you",
    "start": "168879",
    "end": "174560"
  },
  {
    "text": "apply a set of inputs to a given state that will bring it to a new state this is pretty old computer science been",
    "start": "174560",
    "end": "180959"
  },
  {
    "text": "around quite a while and if he's looking at the types of state machines there's million more most are typically melee state machines",
    "start": "180959",
    "end": "187920"
  },
  {
    "text": "where we're applying inputs to state to give outputs our inputs to state and we get a new state and that's how",
    "start": "187920",
    "end": "193440"
  },
  {
    "text": "things tend to work pretty simple most people don't build applications thinking like this but most",
    "start": "193440",
    "end": "199120"
  },
  {
    "text": "of our programs are state machines whether you like it or not they're probably just not particularly well defined state machines",
    "start": "199120",
    "end": "204959"
  },
  {
    "text": "and how they work these sorts of systems need to be much more strict about that",
    "start": "204959",
    "end": "211120"
  },
  {
    "start": "211000",
    "end": "211000"
  },
  {
    "text": "and particularly we want to look at replicated state machines because we want something to be reliable",
    "start": "211120",
    "end": "216560"
  },
  {
    "text": "it needs to be on more than one node so we can tolerate failure and from there we can then recover and",
    "start": "216560",
    "end": "222640"
  },
  {
    "text": "go forward without losing customer data and state and things like that so to do that we've got to order our inputs",
    "start": "222640",
    "end": "230319"
  },
  {
    "text": "so every state machine must get the same ordered set of inputs to come to the same result",
    "start": "230319",
    "end": "236480"
  },
  {
    "text": "the execution of those orders within that so as we change the as the events change to state that",
    "start": "236480",
    "end": "242799"
  },
  {
    "text": "change must be deterministic and there's some quite surprising things in there like",
    "start": "242799",
    "end": "248319"
  },
  {
    "text": "the most people here know that if you program with a hashmap in java that if you iterate over it it's not",
    "start": "248319",
    "end": "254319"
  },
  {
    "text": "deterministic so you get surprises in some of these things and lots of data structures are",
    "start": "254319",
    "end": "259519"
  },
  {
    "text": "quite surprising that they're not deterministic so we need to make sure all our state is deterministic and we need to be able to",
    "start": "259519",
    "end": "266000"
  },
  {
    "text": "deal with that and if we have got that we end up with this same state and the same set of",
    "start": "266000",
    "end": "271520"
  },
  {
    "text": "outputs across a number of replicated state machines that gives us our reliability",
    "start": "271520",
    "end": "276800"
  },
  {
    "text": "our ability to tolerate failures at the end of this we end up building a distributed log so",
    "start": "276800",
    "end": "283040"
  },
  {
    "start": "279000",
    "end": "279000"
  },
  {
    "text": "most people will take a log of the inputs deal with that and replicate it and then we can get the",
    "start": "283040",
    "end": "289199"
  },
  {
    "text": "state machines to the same point and that's the bit that's formally studied and well understood there are ways it's played with you",
    "start": "289199",
    "end": "295520"
  },
  {
    "text": "probably have heard of event sourcing where it's kind of a little bit mushier where it's not as formally studied",
    "start": "295520",
    "end": "302160"
  },
  {
    "text": "and we'll be looking at changes and replicating the changes now databases tend to do a similar",
    "start": "302160",
    "end": "308720"
  },
  {
    "text": "approach to that but to do that much more formally so i get to see many event sourcing",
    "start": "308720",
    "end": "314000"
  },
  {
    "text": "systems that kind of fail because people don't follow the right rigor and do it formally enough to make it work so",
    "start": "314000",
    "end": "320639"
  },
  {
    "text": "i want to talk about replicated state machines as formally understood and those ones can get us to",
    "start": "320639",
    "end": "326000"
  },
  {
    "text": "nice reliable systems the cool thing with this is once you've",
    "start": "326000",
    "end": "331280"
  },
  {
    "start": "329000",
    "end": "329000"
  },
  {
    "text": "got the ability to process these events in a nice deterministic way we're not dealing with databases we're",
    "start": "331280",
    "end": "338080"
  },
  {
    "text": "not dealing with all of this sort of horrible stuff like orms and things so we can have these really nice rich domain models",
    "start": "338080",
    "end": "344720"
  },
  {
    "text": "which is actually a great thing in finance it's one of the cool things you get to work on things like matching engines risk",
    "start": "344720",
    "end": "350320"
  },
  {
    "text": "systems surveillance systems all these they're very rich interesting demand",
    "start": "350320",
    "end": "355440"
  },
  {
    "text": "problems to work on and we can work on them with quite pure very elegant models there's a kind of fun space to work in as well",
    "start": "355440",
    "end": "363360"
  },
  {
    "text": "and within these domain models we've got lots of relationships between our objects and for this we've got to",
    "start": "363360",
    "end": "369840"
  },
  {
    "text": "represent these relationships with something and that's where data structures come in so you get to do like quite a lot of cool",
    "start": "369840",
    "end": "375759"
  },
  {
    "text": "computer science either picking data structures and choosing the right ones or even designing data structures from",
    "start": "375759",
    "end": "382800"
  },
  {
    "text": "scratch like to make the best matching engines that are out there there are not off-the-shelf data structures to do this",
    "start": "382800",
    "end": "389120"
  },
  {
    "text": "you end up designing data structures specifically for this purpose and it works really nice as a result so",
    "start": "389120",
    "end": "395759"
  },
  {
    "text": "if you work in that space you get to do quite cool things in fact some of the best people in the world that work you know matching engines",
    "start": "395759",
    "end": "401280"
  },
  {
    "text": "that's pretty much all that they do and they get to design these and work in a kind of cool space on this and",
    "start": "401280",
    "end": "406880"
  },
  {
    "text": "it is a computer science problem and a domain modeling problem within this space this is something i've",
    "start": "406880",
    "end": "413520"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "seen evolve over the last 10 years particularly how we deal with time time's a really interesting problem in",
    "start": "413520",
    "end": "420479"
  },
  {
    "text": "this space because the time needs to be consistent across all of the machines and so you can't read the system clock",
    "start": "420479",
    "end": "426720"
  },
  {
    "text": "that's not something that ever happens here it shouldn't ever happen sometimes it",
    "start": "426720",
    "end": "432400"
  },
  {
    "text": "does and things go wrong so we have to catch that and deal with it in other interesting ways so",
    "start": "432400",
    "end": "438319"
  },
  {
    "text": "we usually are time stamping events as they come into the system maybe even time stamping them at the",
    "start": "438319",
    "end": "444319"
  },
  {
    "text": "hardware level by putting a timestamp onto a network packet using very accurate clocks",
    "start": "444319",
    "end": "449919"
  },
  {
    "text": "disciplined to atomic clocks that are gps synchronized and so we can be very precise at that level which is a",
    "start": "449919",
    "end": "456080"
  },
  {
    "text": "kind of nice thing to do but what about if i want to set a timer so if i place an order into an exchange",
    "start": "456080",
    "end": "463039"
  },
  {
    "text": "and that order goes in and 10 minutes later if it's not matched it must be",
    "start": "463039",
    "end": "468080"
  },
  {
    "text": "canceled or maybe even 10 seconds or even 10 milliseconds later you may want to cancel it if it doesn't",
    "start": "468080",
    "end": "473759"
  },
  {
    "text": "fill straight away we have to set a timer for that and wait for the timeout to occur now if",
    "start": "473759",
    "end": "478800"
  },
  {
    "text": "it fills in the meantime you're not going to fire that timer you want to cancel that timer",
    "start": "478800",
    "end": "484319"
  },
  {
    "text": "but if it doesn't fill you want to have that timer go off and deal with that now if you've got a",
    "start": "484319",
    "end": "489919"
  },
  {
    "text": "replicated state machine what do you do here well a typical approach is to pulse",
    "start": "489919",
    "end": "496000"
  },
  {
    "text": "in time stamps and you see that a certain amount of time has gone past and then you're reading that you're",
    "start": "496000",
    "end": "502319"
  },
  {
    "text": "looking up and go okay have any timers that need to expire got a really interesting computer science",
    "start": "502319",
    "end": "507440"
  },
  {
    "text": "problem there to how do you manage a lot of timers and deal with it efficiently things like timer wheels and priority",
    "start": "507440",
    "end": "513760"
  },
  {
    "text": "heaps and there's all sorts of cool data structures for dealing with that well studied in the operating system",
    "start": "513760",
    "end": "518800"
  },
  {
    "text": "space so you can draw from there but these events going in end up in your",
    "start": "518800",
    "end": "523839"
  },
  {
    "text": "log you end up with a lot of events in the log if you want very high resolution on your time so",
    "start": "523839",
    "end": "530560"
  },
  {
    "text": "let's say you want to have microsecond stamps you will end up with having a million events per second in",
    "start": "530560",
    "end": "536480"
  },
  {
    "text": "your log just dealing with the time so you need to deal with that in some interesting ways too",
    "start": "536480",
    "end": "541839"
  },
  {
    "text": "and there's ways of doing that it's actually better if the infrastructure is built to cope with that problem",
    "start": "541839",
    "end": "547360"
  },
  {
    "text": "and having seen people go through the different ways of doing that it's now pretty much acknowledged that",
    "start": "547360",
    "end": "552959"
  },
  {
    "text": "you need to do that in the infrastructure to do it well and there's solutions to do that so kind of just being aware of some of this",
    "start": "552959",
    "end": "560560"
  },
  {
    "start": "559000",
    "end": "559000"
  },
  {
    "text": "there's also been a big evolution in fairness in this anybody who's worked in finance will",
    "start": "560560",
    "end": "565920"
  },
  {
    "text": "know it's pretty much a rigged game it's been rigged by the banks and large",
    "start": "565920",
    "end": "570959"
  },
  {
    "text": "corporations for a long time we now have got retail customers dealing and we've got lots of new",
    "start": "570959",
    "end": "577360"
  },
  {
    "text": "uh people coming into this market and furnace is becoming something that people want to have and it is changing we're",
    "start": "577360",
    "end": "584399"
  },
  {
    "text": "even seen in markets where we get different market makers are playing off each other they're not",
    "start": "584399",
    "end": "590080"
  },
  {
    "text": "playing by rules high frequency trading changed a lot of this so we need to work out how to make",
    "start": "590080",
    "end": "595279"
  },
  {
    "text": "it more fair how to make it more transparent and this has caused a big difference in the design of some of the exchanges",
    "start": "595279",
    "end": "601760"
  },
  {
    "text": "here's one example here 10 years ago an exchange would have looked something",
    "start": "601760",
    "end": "607040"
  },
  {
    "text": "like this we have multiple gateways facing off to customers and we probably had two matching engines",
    "start": "607040",
    "end": "614399"
  },
  {
    "text": "at the back of that sort of one was there to take over from the other one if it failed so we got that level of",
    "start": "614399",
    "end": "619680"
  },
  {
    "text": "redundancy oh some reason my slides have gone",
    "start": "619680",
    "end": "625440"
  },
  {
    "text": "let's try",
    "start": "625839",
    "end": "628399"
  },
  {
    "text": "ah well i don't have slides if somebody can sort out a v at some stage that",
    "start": "631519",
    "end": "636640"
  },
  {
    "text": "would be great i'll talk a bit more in the meantime",
    "start": "636640",
    "end": "641360"
  },
  {
    "text": "so we've got these multiple gateways people can connect to those gateways and that",
    "start": "641839",
    "end": "648320"
  },
  {
    "text": "starts to send orders into the system now if you're a market maker and you want to get a",
    "start": "648320",
    "end": "654959"
  },
  {
    "text": "competitive advantage what you can do is you can connect to every single gateway",
    "start": "654959",
    "end": "660720"
  },
  {
    "text": "that an exchange has simple technique to do you can start measuring which is the",
    "start": "660720",
    "end": "666000"
  },
  {
    "text": "most responsive gateway that's there and then from that you can start putting your orders through",
    "start": "666000",
    "end": "672240"
  },
  {
    "text": "the most responsive gateway kind of makes sense that's a kind of that's a pretty fair technique you could",
    "start": "672240",
    "end": "678560"
  },
  {
    "text": "do that and that'll work and we're kind of fine with that what if you want to be a bit more unpleasant so",
    "start": "678560",
    "end": "685440"
  },
  {
    "text": "you're not just wanting to compete you want to compete but you're actually you don't mind putting other people down",
    "start": "685440",
    "end": "691440"
  },
  {
    "text": "how about you work out which is the best exchange or which is the best gateway to connect to",
    "start": "691440",
    "end": "696959"
  },
  {
    "text": "you connect to that gateway and you can start sending your orders",
    "start": "696959",
    "end": "702160"
  },
  {
    "text": "through that but what about all these other gateways what if you start stuffing orders through those other gateways that you",
    "start": "702160",
    "end": "708320"
  },
  {
    "text": "don't care for matching like you put them at prices off the market so they're not good",
    "start": "708320",
    "end": "713440"
  },
  {
    "text": "prices they're not going to be taken but you stuff loads of traffic into them they're now stuffed up with traffic so",
    "start": "713440",
    "end": "719920"
  },
  {
    "text": "other people can't compete and then you go through the gateway that you've set up with you knows fast and",
    "start": "719920",
    "end": "726480"
  },
  {
    "text": "you're going to send your orders through nice and quick that's not fair but that's what started",
    "start": "726480",
    "end": "731680"
  },
  {
    "text": "to happen a lot of that sort of stuff started to happen so how do we change that what if we only",
    "start": "731680",
    "end": "738320"
  },
  {
    "text": "have one gateway people can't do any sort of nasty things then everybody has",
    "start": "738320",
    "end": "744000"
  },
  {
    "text": "to go through the same gateway and this is where a number of exchanges are now moving to",
    "start": "744000",
    "end": "749519"
  },
  {
    "text": "having a single gateway that you connect to you connect to that",
    "start": "749519",
    "end": "754639"
  },
  {
    "text": "single gateway and everybody goes through it now this has got some interesting implications",
    "start": "754639",
    "end": "760720"
  },
  {
    "text": "we don't get the games playing we don't get all of that extra traffic stuffing orders through them that's actually quite nice that steps",
    "start": "760720",
    "end": "767680"
  },
  {
    "text": "down the load on the system quite significantly but you got a single point of entry for",
    "start": "767680",
    "end": "773279"
  },
  {
    "text": "all traffic going through there so it has to be really really fast so we're seeing this consolidation now in",
    "start": "773279",
    "end": "779519"
  },
  {
    "text": "the gateways the way we used to see consolidation in matching engines and risk systems where everything went through the same",
    "start": "779519",
    "end": "785440"
  },
  {
    "text": "point and we needed the traffic on there we would go wide on gateways we can't go wide on gateways anymore so",
    "start": "785440",
    "end": "791760"
  },
  {
    "text": "performance has started to really really matter and as a result we can send the traffic through that but",
    "start": "791760",
    "end": "798160"
  },
  {
    "text": "we have to get it right so we'll move to this sort of model where we have a single gateway",
    "start": "798160",
    "end": "803680"
  },
  {
    "text": "will be connected to a matching engine there's also something else that's going on is we're realizing that the",
    "start": "803680",
    "end": "810320"
  },
  {
    "text": "primary secondary means of fault tolerance is not sufficient i'll come back to that later so we get",
    "start": "810320",
    "end": "816480"
  },
  {
    "text": "multiple matching engines how do we deal with loads of load especially dealing with",
    "start": "816480",
    "end": "822320"
  },
  {
    "text": "the internet well we do have multiple gateways but we're having gateways by classification of",
    "start": "822320",
    "end": "828720"
  },
  {
    "text": "customer it is perfectly acceptable under the regulation to treat an internet customer",
    "start": "828720",
    "end": "834399"
  },
  {
    "text": "different from a co-located customer they are a different classification of customer and they can get a different level of",
    "start": "834399",
    "end": "840480"
  },
  {
    "text": "service but within a classification they should all get the same equal first service so",
    "start": "840480",
    "end": "846160"
  },
  {
    "text": "one gateway maybe the internet one git where maybe remote people won't get where maybe co-located people",
    "start": "846160",
    "end": "852079"
  },
  {
    "text": "at the exchange and so we can separate them out in various ways like that so that gives us a little bit of an ability to scale",
    "start": "852079",
    "end": "858800"
  },
  {
    "text": "but we're still having to get all this traffic through so we're having to focus on the performance of that",
    "start": "858800",
    "end": "865279"
  },
  {
    "text": "and one of the other ways we can scale up is we can scale up the matching engines and stuff themselves",
    "start": "865279",
    "end": "870480"
  },
  {
    "text": "by shorting by the instrument or asset class or something where we don't have the relationship between that",
    "start": "870480",
    "end": "876720"
  },
  {
    "text": "some markets are interesting where there's correlation between instruments and we'll deal with liquidity across",
    "start": "876720",
    "end": "883040"
  },
  {
    "text": "them because some things are fungible or can be fungible that calculation across that so we get a little bit up but",
    "start": "883040",
    "end": "888639"
  },
  {
    "text": "sometimes it's actually easy just to short by dealing with instruments or different",
    "start": "888639",
    "end": "893920"
  },
  {
    "text": "assets at that point in time like you may have indexes on one you may have fx on another you may have equities on another",
    "start": "893920",
    "end": "900000"
  },
  {
    "text": "you may have some of the biggest equities in a different exchange and we deal with that",
    "start": "900000",
    "end": "905040"
  },
  {
    "text": "separately so we can see in this evolving layout of the infrastructure we're also seeing",
    "start": "905040",
    "end": "911279"
  },
  {
    "text": "a move of asset classes to being exchange traded with a lot of over-the-counter trading",
    "start": "911279",
    "end": "917920"
  },
  {
    "text": "with a lot of proprietary trading and broker-based trading in the past more if it's moving to exchange because on exchange",
    "start": "917920",
    "end": "924000"
  },
  {
    "text": "it's fair it's equal there's better ways of dealing with that so we're getting a lot more activity in",
    "start": "924000",
    "end": "929360"
  },
  {
    "text": "this space and an explosion over the last few years of cryptocurrencies and other crypto instruments that are",
    "start": "929360",
    "end": "935839"
  },
  {
    "text": "being traded in this space as well so lots of the new exchanges out there this has started happening",
    "start": "935839",
    "end": "942000"
  },
  {
    "text": "and one of the things i actually like to see that started happening is we started trading energy now i got to work with a company doing an",
    "start": "942000",
    "end": "949759"
  },
  {
    "text": "energy trading exchange for europe over the last few years where renewables has become an",
    "start": "949759",
    "end": "955279"
  },
  {
    "text": "interesting problem so you've got wind you've got solar you've got all these they're not predictable so you may have",
    "start": "955279",
    "end": "961519"
  },
  {
    "text": "one part of europe's got a lot of wind another part of europe doesn't have a lot of wind we need to move that energy around we",
    "start": "961519",
    "end": "966800"
  },
  {
    "text": "need to cooperate and we need a means of treating that really fast on the fly so this is sort of stuff that's starting",
    "start": "966800",
    "end": "973040"
  },
  {
    "text": "to go on to exchange now as well so really cool and interesting things happening here",
    "start": "973040",
    "end": "979279"
  },
  {
    "start": "977000",
    "end": "977000"
  },
  {
    "text": "so that's kind of where the design space is going where are we going for resilience how do we make things",
    "start": "979279",
    "end": "984639"
  },
  {
    "text": "fault tolerant particularly so by fault holland can we tolerate a fault and continue",
    "start": "984639",
    "end": "989680"
  },
  {
    "start": "985000",
    "end": "985000"
  },
  {
    "text": "and go forward ten years ago everybody in finance was doing primary",
    "start": "989680",
    "end": "995360"
  },
  {
    "text": "secondary where you've got a node that your primary node all your traffic's going",
    "start": "995360",
    "end": "1000800"
  },
  {
    "text": "through that it's backing up to a secondary node in the case of the primary feeling",
    "start": "1000800",
    "end": "1005920"
  },
  {
    "text": "you can go to the secondary node to be able to continue processing not a very good approach when you",
    "start": "1005920",
    "end": "1012959"
  },
  {
    "text": "actually look at it from the service you want to offer customers a couple of things in that if you've got",
    "start": "1012959",
    "end": "1019839"
  },
  {
    "text": "two nodes and you get a fielder you can't automatically decide",
    "start": "1019839",
    "end": "1025360"
  },
  {
    "text": "which one should become the new primary so typically you end up with a failure",
    "start": "1025360",
    "end": "1031038"
  },
  {
    "text": "at two o'clock in the morning someone gets out of bed tries to do something about this and screws it up because they haven't had",
    "start": "1031039",
    "end": "1037038"
  },
  {
    "text": "their coffee yet i know i've been in these situations you want the means to be able to",
    "start": "1037039",
    "end": "1043678"
  },
  {
    "text": "automatically choose which node is the ideal node to be the primary connection and go forwards but it's actually bigger",
    "start": "1043679",
    "end": "1050160"
  },
  {
    "text": "than that you start having a conversation with a lawyer around why do we have fault tolerance so if i'm",
    "start": "1050160",
    "end": "1057360"
  },
  {
    "text": "trading into a market particularly if i'm allowing retail customers to trade into a market because they",
    "start": "1057360",
    "end": "1062880"
  },
  {
    "text": "deserve more protections than professional traders because they're not aware of the risks to the same level",
    "start": "1062880",
    "end": "1069120"
  },
  {
    "text": "so if i'm trading into the market as a retail customer and the primary dies and we go to the",
    "start": "1069120",
    "end": "1075760"
  },
  {
    "text": "secondary seems fir we get to continue you're now running on the secondary",
    "start": "1075760",
    "end": "1081360"
  },
  {
    "text": "what if the secondary fails you not have no data you have no way of reputing",
    "start": "1081360",
    "end": "1088320"
  },
  {
    "text": "what has gone on a lawyer is not comfortable with that situation if you're going to go from primary to",
    "start": "1088320",
    "end": "1094080"
  },
  {
    "text": "secondary the only point you should go to secondary is to allow people to treat it out of their position so they can go flat and",
    "start": "1094080",
    "end": "1100559"
  },
  {
    "text": "be safe in the market it is not a system that you can continue operating on except to clean out",
    "start": "1100559",
    "end": "1107360"
  },
  {
    "text": "now if you go with a different approach of set consensus so let's start off the simple case of",
    "start": "1107360",
    "end": "1112880"
  },
  {
    "text": "three node consensus if you have one node that dies you can",
    "start": "1112880",
    "end": "1118400"
  },
  {
    "text": "continue treating because you still have another node beyond the parameter you've got a primary",
    "start": "1118400",
    "end": "1123919"
  },
  {
    "text": "and a backup so you're still treating safely at that point you've also got a really nice case of",
    "start": "1123919",
    "end": "1130080"
  },
  {
    "text": "you can work out which one should be the primary so let's say we have a net split",
    "start": "1130080",
    "end": "1135679"
  },
  {
    "text": "and we've got so we've got split brain going on in a network with three nodes they couldn't",
    "start": "1135679",
    "end": "1141760"
  },
  {
    "text": "communicate to each other briefly and then maybe two of them can and one of them can't",
    "start": "1141760",
    "end": "1147280"
  },
  {
    "text": "the two of them that can can determine that they can form a viable cluster and continue the single node on its own can't if you",
    "start": "1147280",
    "end": "1154400"
  },
  {
    "text": "have a system whereby you've got primary and secondary and you get a net split you cannot work out which one",
    "start": "1154400",
    "end": "1160240"
  },
  {
    "text": "automatically become the leader so we get algorithms that allow us to do this and so we're seeing this move",
    "start": "1160240",
    "end": "1165919"
  },
  {
    "text": "forward to doing this although what's interesting in finance i'm still seeing a large number of people doing primary",
    "start": "1165919",
    "end": "1172640"
  },
  {
    "text": "secondary even though it's known to be a flawed solution and we get loads of excuses but we don't",
    "start": "1172640",
    "end": "1177760"
  },
  {
    "text": "want to spend the money on the hardware hardware is so cheap these days it's expensive in many financial",
    "start": "1177760",
    "end": "1183840"
  },
  {
    "text": "organizations because the it staff are shockingly bad and inefficient in how they run it",
    "start": "1183840",
    "end": "1188880"
  },
  {
    "text": "like i'm sure you can hear a little giggle in the room here like how many of us has asked for a test",
    "start": "1188880",
    "end": "1194000"
  },
  {
    "text": "server and it's taking four or six months or nine months to get it and stuff that sort of level of service within an",
    "start": "1194000",
    "end": "1201039"
  },
  {
    "text": "organization is going to die it's the way of the dinosaur there's much better solutions to this",
    "start": "1201039",
    "end": "1206320"
  },
  {
    "text": "now now when you look at these techniques to do consensus it's been around for a long",
    "start": "1206320",
    "end": "1211600"
  },
  {
    "text": "time like three of the main proponents in this leslie lamport barbara leskoff and ken berman did the majority of this work in",
    "start": "1211600",
    "end": "1218159"
  },
  {
    "text": "the 1980s leslie lamport wrote a seminal paper in 84",
    "start": "1218159",
    "end": "1223520"
  },
  {
    "text": "on time versus time out for working with distributed systems that sort of spawned some thinking around this barbara",
    "start": "1223520",
    "end": "1230000"
  },
  {
    "text": "liskoff been the first one to actually come up with a consensus algorithm after that pax also is a bit better nolan but it",
    "start": "1230000",
    "end": "1236480"
  },
  {
    "text": "came out later than that and ken berman did a lot of work on virtual synchrony so these were all sort of simultaneously coming out and",
    "start": "1236480",
    "end": "1244080"
  },
  {
    "text": "they give us the ability to have consensus and fault tolerance properly in the market this was",
    "start": "1244080",
    "end": "1249360"
  },
  {
    "text": "worked out in the 1980s i think it's shocking today that stuff that we know when we do it really",
    "start": "1249360",
    "end": "1255440"
  },
  {
    "text": "really well we're still not using it properly in 2020.",
    "start": "1255440",
    "end": "1261600"
  },
  {
    "text": "people running primary secondary in 2020 we really are a dinosaur you need to wake up and find out there's",
    "start": "1261600",
    "end": "1268000"
  },
  {
    "text": "better ways of doing some of this stuff but what was interesting was all those",
    "start": "1268000",
    "end": "1273600"
  },
  {
    "text": "approaches were hard they're really difficult to understand which is probably one of the reasons why they hadn't taken off",
    "start": "1273600",
    "end": "1280159"
  },
  {
    "text": "paxo is probably the best known but infamously difficult to implement and get right",
    "start": "1280159",
    "end": "1285919"
  },
  {
    "text": "then the wrath paper came out in 2014 2013 2014 and this changed how people thought",
    "start": "1285919",
    "end": "1293360"
  },
  {
    "text": "about this and was because there's an interesting goal with raft the goal was to build a consensus algorithm that",
    "start": "1293360",
    "end": "1299280"
  },
  {
    "text": "was easy to understand not to build one that was perfect or trying to deal with all of these extra",
    "start": "1299280",
    "end": "1305360"
  },
  {
    "text": "edge conditions the primary goal was to build one that was easy to understand and this changed and revolutionized the space",
    "start": "1305360",
    "end": "1312080"
  },
  {
    "text": "having implemented a bunch of these it's actually not that much easier to implement than back sauce or some other",
    "start": "1312080",
    "end": "1317760"
  },
  {
    "text": "stuff but that's a separate thing but a lot of the groundwork for this was actually barbara liskov's work in viewstamper application",
    "start": "1317760",
    "end": "1323760"
  },
  {
    "text": "raft is closest to that than some of what's gone before and but it has changed how we think about stuff",
    "start": "1323760",
    "end": "1329840"
  },
  {
    "text": "cool thing is you get all these nice properties whenever you implement roth correctly you get",
    "start": "1329840",
    "end": "1334880"
  },
  {
    "text": "election safety at two o'clock in the morning when you get a node failure and you get another one elected",
    "start": "1334880",
    "end": "1340400"
  },
  {
    "text": "you don't have to call the support people it just deals with it i so remember one of my customers was",
    "start": "1340400",
    "end": "1346880"
  },
  {
    "text": "uh talking about how they come into work one morning and during the night that had a node failure and they just had an event in their",
    "start": "1346880",
    "end": "1354799"
  },
  {
    "text": "console saying that it happened but another node was elected and they continued on and there was no drama to it that's kind",
    "start": "1354799",
    "end": "1361760"
  },
  {
    "text": "of nice yet that's often not the case whenever these things have gone i can remember",
    "start": "1361760",
    "end": "1367200"
  },
  {
    "text": "situations back sort of 20 30 years ago where in the middle of night i'm turning my hair out working with administrators",
    "start": "1367200",
    "end": "1373840"
  },
  {
    "text": "try and get the system to work again properly and we're making mistakes because we're tired we don't want to be in that sort of situation so we've got",
    "start": "1373840",
    "end": "1380480"
  },
  {
    "text": "this things have got better as we've moved forward like how does some of this work well",
    "start": "1380480",
    "end": "1386480"
  },
  {
    "text": "we elect a node and that is designated the leader within it so in this case the middle one",
    "start": "1386480",
    "end": "1391919"
  },
  {
    "text": "being the leader here these are usually managed by in rough terminology thing called",
    "start": "1391919",
    "end": "1398240"
  },
  {
    "text": "consensus modules so something manages the consensus within the cluster to work out",
    "start": "1398240",
    "end": "1404240"
  },
  {
    "text": "where we can safely process any data to go forward and we start dealing with a number of",
    "start": "1404240",
    "end": "1410159"
  },
  {
    "text": "counters that are interested in this space so this is a distributed system and distributed systems everything has a",
    "start": "1410159",
    "end": "1416720"
  },
  {
    "text": "different view of what the state of the world is just like all of us in this room we don't have a global shared memory we",
    "start": "1416720",
    "end": "1424640"
  },
  {
    "text": "all have our own local memory in our head and we communicate with each other to reach some sort of consensus on a",
    "start": "1424640",
    "end": "1431360"
  },
  {
    "text": "shared understanding this is how these systems work and so how does this work out so for",
    "start": "1431360",
    "end": "1437760"
  },
  {
    "text": "some of these numbers so the numbers here could be the number of bytes through the system the number of messages through the system whatever",
    "start": "1437760",
    "end": "1443840"
  },
  {
    "text": "we're dealing with a distributed log that's deterministic so it's ordered",
    "start": "1443840",
    "end": "1448880"
  },
  {
    "text": "and we're going to send the same log to them all but how far have we got through that log that's the interesting question",
    "start": "1448880",
    "end": "1454960"
  },
  {
    "text": "well one of the things that's interesting we just lost our slides again and we're back",
    "start": "1454960",
    "end": "1462480"
  },
  {
    "text": "good stuff is the what is known in wrath terminology as the append position",
    "start": "1462480",
    "end": "1468000"
  },
  {
    "text": "is what have we appended to disk append index or a pen position so what if we safely got on",
    "start": "1468000",
    "end": "1474240"
  },
  {
    "text": "disk in some stable storage so if we have a crash we can get that back again from the perspective of that",
    "start": "1474240",
    "end": "1480480"
  },
  {
    "text": "node so that's one of the things so in this case the middle one being there the leader is at position 29",
    "start": "1480480",
    "end": "1488559"
  },
  {
    "text": "whereas the others are 22 and 23 because they could be lagging a little bit they could have had a little pause various things going",
    "start": "1488559",
    "end": "1495360"
  },
  {
    "text": "on at different points in time typically the leader will be ahead of the others because it is the one that's doing the sequencing but that's not",
    "start": "1495360",
    "end": "1501120"
  },
  {
    "text": "guaranteed there is another index that matters and",
    "start": "1501120",
    "end": "1506240"
  },
  {
    "text": "that's what's known as the commit index uh position and that is what is the index the",
    "start": "1506240",
    "end": "1512080"
  },
  {
    "text": "cluster has reached from the position from the perspective of consensus so what is what",
    "start": "1512080",
    "end": "1517840"
  },
  {
    "text": "is the quorum of the cluster agreed to be it can safely recover from",
    "start": "1517840",
    "end": "1522880"
  },
  {
    "text": "where quorum is defined as the number of items in the cluster divided by two plus one",
    "start": "1522880",
    "end": "1528799"
  },
  {
    "text": "so quorum of three is two and everybody says like well is quorum",
    "start": "1528799",
    "end": "1534159"
  },
  {
    "text": "of of uh two one no it's not this is why when you go from the three node cluster to node cluster",
    "start": "1534159",
    "end": "1541520"
  },
  {
    "text": "you go in lock step you must go unlock step to be reliable because it's always n divided by two",
    "start": "1541520",
    "end": "1547520"
  },
  {
    "text": "plus one gives you whatever the quorum is of something so in this case the consensus module has agreed that",
    "start": "1547520",
    "end": "1555279"
  },
  {
    "text": "quorum is 25 now there's ver because it's got 29",
    "start": "1555279",
    "end": "1561039"
  },
  {
    "text": "the one over on the left has 25 and so it's determinate but it hasn't maybe communicated",
    "start": "1561039",
    "end": "1566640"
  },
  {
    "text": "yet to the others that is 25 so they're running behind and this is this is the sort of problems",
    "start": "1566640",
    "end": "1571840"
  },
  {
    "text": "we're dealing with all the time distributed systems they all have slightly latent views of where the world actually is and so we",
    "start": "1571840",
    "end": "1579039"
  },
  {
    "text": "have to deal with that and then we've got what have we processed so the service is running on",
    "start": "1579039",
    "end": "1584960"
  },
  {
    "text": "top of this infrastructure how far has it got and so there are various levels as well",
    "start": "1584960",
    "end": "1590559"
  },
  {
    "text": "now we cannot let the service go beyond the commit index the commit position of",
    "start": "1590559",
    "end": "1596000"
  },
  {
    "text": "the cluster otherwise we can't tolerate a failure and recover our data so we're not fault tolerant if we go beyond that point so",
    "start": "1596000",
    "end": "1602480"
  },
  {
    "text": "we need to get all of these things to deal with it because we can just lose a note at any",
    "start": "1602480",
    "end": "1607520"
  },
  {
    "text": "given stage and what's actually really interesting is i'll talk a bit about deployment",
    "start": "1607520",
    "end": "1612559"
  },
  {
    "text": "we're going to cloud a lot more often now and in cloud we lose nodes way more often than we used to",
    "start": "1612559",
    "end": "1618000"
  },
  {
    "text": "lose them in our typical in-house infrastructure so we're dealing with these sorts of cases so we've lost the node we need to elect",
    "start": "1618000",
    "end": "1625840"
  },
  {
    "text": "a new leader we'll tend to elect the leader that has got the most up-to-date view of the world on the raft and so we've",
    "start": "1625840",
    "end": "1632480"
  },
  {
    "text": "got a new leader and we're talking to that from the perspective of our clients at that point and we're replicating",
    "start": "1632480",
    "end": "1640240"
  },
  {
    "text": "to this case the one on the right now the one in the middle if it was like it burst into flames and",
    "start": "1640240",
    "end": "1647120"
  },
  {
    "text": "died we don't see it again that's fine what's actually much more difficult is zombies",
    "start": "1647120",
    "end": "1653679"
  },
  {
    "text": "what if that took a big huge gc pause and the others thought it's now dead but then it comes back again and",
    "start": "1653679",
    "end": "1660799"
  },
  {
    "text": "it's got a different view of the world and it still thinks it's the leader we need to be able to deal with that cleanly and deal with it well",
    "start": "1660799",
    "end": "1667360"
  },
  {
    "text": "and make sure everything resolves correctly because whenever you look at split brain issues and failures",
    "start": "1667360",
    "end": "1672559"
  },
  {
    "text": "way more often than not they're due to pauses not absolute failures and parcel",
    "start": "1672559",
    "end": "1678320"
  },
  {
    "text": "failures are much much more difficult to deal with and there's a lot of theory around how we deal with this properly the core of it is that we got",
    "start": "1678320",
    "end": "1684640"
  },
  {
    "text": "to use monotonic sequences and deal with it around that so every leader gets",
    "start": "1684640",
    "end": "1689760"
  },
  {
    "text": "a term in office and we need to track those and so we know it's from a previous leadership term not a one from the current and so we",
    "start": "1689760",
    "end": "1697039"
  },
  {
    "text": "will deal with this and move forward so we've got lots of theory in this",
    "start": "1697039",
    "end": "1702240"
  },
  {
    "text": "space some of this theory's been around since the 1980s",
    "start": "1702240",
    "end": "1707278"
  },
  {
    "text": "inspired by work even further back than not i've implemented these sorts of systems",
    "start": "1707520",
    "end": "1713360"
  },
  {
    "text": "many times and talk to other people who have done this many times and what we've kind of",
    "start": "1713360",
    "end": "1718720"
  },
  {
    "text": "learned is the model is important like is it formally proven like raft packs or some",
    "start": "1718720",
    "end": "1724640"
  },
  {
    "text": "of these other consensus algorithms have been formally proven that's useful it has value more common",
    "start": "1724640",
    "end": "1731520"
  },
  {
    "text": "than not where these things feel is in how they're implemented we all make mistakes",
    "start": "1731520",
    "end": "1736960"
  },
  {
    "text": "so what is our fidelity with that model have we programmed stuff up in code to",
    "start": "1736960",
    "end": "1742640"
  },
  {
    "text": "actually meet the model correctly and even though we think we have only a good understanding we all just make mistakes",
    "start": "1742640",
    "end": "1748559"
  },
  {
    "text": "and this is where one of the things that really gets to trip you up and so if somebody says they can knock you up a",
    "start": "1748559",
    "end": "1753679"
  },
  {
    "text": "consensus module in a few months walk away from them it's",
    "start": "1753679",
    "end": "1759600"
  },
  {
    "text": "generally known in most operating systems that if you develop a new file system it's five to ten years before it's",
    "start": "1759600",
    "end": "1765840"
  },
  {
    "text": "stable don't trust it for five to ten years i'd say with consensus systems somewhere",
    "start": "1765840",
    "end": "1772080"
  },
  {
    "text": "in the region of three to five years so if somebody just put something together it's gonna take that sort of",
    "start": "1772080",
    "end": "1778240"
  },
  {
    "text": "time to reach the right level of model fidelity and code quality to where you can really trust it",
    "start": "1778240",
    "end": "1783360"
  },
  {
    "text": "just because these are complex beasts and you guys shake the bugs out of them even when the model is formally proven",
    "start": "1783360",
    "end": "1788799"
  },
  {
    "text": "in the first place so there's kind of lots of interesting things to think about here so one way of getting resilience is the",
    "start": "1788799",
    "end": "1796080"
  },
  {
    "start": "1792000",
    "end": "1792000"
  },
  {
    "text": "fault tolerance robustness is another thing that helps us so we're talking about mean time between failures and mean time",
    "start": "1796080",
    "end": "1802880"
  },
  {
    "text": "to failure so how often are we going to fail so robustness is about",
    "start": "1802880",
    "end": "1808240"
  },
  {
    "text": "how robust is your code to inputs that are invalid how robust is it to dealing with things",
    "start": "1808240",
    "end": "1814080"
  },
  {
    "text": "that can go wrong and we often don't give this enough sort of thought",
    "start": "1814080",
    "end": "1819120"
  },
  {
    "text": "so i kind of always like to ask this question of people is how well does your application handle levers",
    "start": "1819120",
    "end": "1825600"
  },
  {
    "text": "there's some great studies out there that show that by far the most common cause of production",
    "start": "1825600",
    "end": "1831520"
  },
  {
    "text": "outages and systems is unhandled errors and unhandled exceptions in people's code",
    "start": "1831520",
    "end": "1837919"
  },
  {
    "text": "there's loads of examples of where people have researched these and found that there's exception handlers with to-do's inside them please go fix this",
    "start": "1837919",
    "end": "1845200"
  },
  {
    "text": "in production and this really really matters so change",
    "start": "1845200",
    "end": "1850240"
  },
  {
    "text": "in your programming style change your programming style so that if you've got an entry point to a system",
    "start": "1850240",
    "end": "1855279"
  },
  {
    "text": "validate all inputs before you do any mutation make that as good practice this has been",
    "start": "1855279",
    "end": "1860720"
  },
  {
    "text": "known like berta maher talked about this we're back in the eiffel towers about determining the preconditions poke",
    "start": "1860720",
    "end": "1866320"
  },
  {
    "text": "considerations and invariants before you start executing anything so validate all of your arguments before",
    "start": "1866320",
    "end": "1872240"
  },
  {
    "text": "you start to do any mutation on your objects that way you'll end up with a much more robust system and",
    "start": "1872240",
    "end": "1878080"
  },
  {
    "text": "always always check error returns and things and have a sensible strategy that you're going to apply when you deal with",
    "start": "1878080",
    "end": "1884399"
  },
  {
    "text": "this this will really increase the robustness of your system performance it was kind of the highlight",
    "start": "1884399",
    "end": "1891600"
  },
  {
    "start": "1888000",
    "end": "1888000"
  },
  {
    "text": "whenever we talked about some of these things 10 years ago got people interested in what was",
    "start": "1891600",
    "end": "1897919"
  },
  {
    "text": "possible so i'm going to come back to this and it has changed things have moved on",
    "start": "1897919",
    "end": "1903200"
  },
  {
    "text": "and some quite cool stuff one of the biggest things i think i've observed in the last 10 years",
    "start": "1903200",
    "end": "1908399"
  },
  {
    "start": "1904000",
    "end": "1904000"
  },
  {
    "text": "is this awakening about the distribution of latency we used to talk 10 years ago about",
    "start": "1908399",
    "end": "1915279"
  },
  {
    "text": "averages some people still talk about averages today again wake-up call you're one of the dinosaurs",
    "start": "1915279",
    "end": "1922240"
  },
  {
    "text": "if you're talking about averages because averages hide all sorts of evil you've got to be looking at histograms",
    "start": "1922240",
    "end": "1928880"
  },
  {
    "text": "and percentile distributions to see what's going on in your systems because",
    "start": "1928880",
    "end": "1934080"
  },
  {
    "text": "averages are just so misleading like throughput matters it's kind of useful throughput",
    "start": "1934080",
    "end": "1939679"
  },
  {
    "text": "uh and what's your latency given throughput as an average it's interesting but it's really interesting is what is the distribution",
    "start": "1939679",
    "end": "1946480"
  },
  {
    "text": "on that because there's an awful lot of systemic and cueing events and systems that we've got to think about",
    "start": "1946480",
    "end": "1952240"
  },
  {
    "start": "1948000",
    "end": "1948000"
  },
  {
    "text": "now systemic events what am i talking about gc paws pneuma node memory reclamation",
    "start": "1952240",
    "end": "1960000"
  },
  {
    "text": "a defragmentation on an ssd various things happening fast locking",
    "start": "1960000",
    "end": "1965440"
  },
  {
    "text": "revocation in java there's loads and loads and loads of examples of where something systemic can happen in your system and",
    "start": "1965440",
    "end": "1971919"
  },
  {
    "text": "that's it you're just paused for a period of time and this completely screws up your response times and being aware of",
    "start": "1971919",
    "end": "1978000"
  },
  {
    "text": "that so be aware of these be able to hunt them down but able to track them",
    "start": "1978000",
    "end": "1983039"
  },
  {
    "text": "and it really helps the other thing is like how you measure and especially when you start measuring things like throughput",
    "start": "1983039",
    "end": "1989039"
  },
  {
    "text": "over units of time that are not applicable like you think about how many of us have all said what is",
    "start": "1989039",
    "end": "1994399"
  },
  {
    "text": "your throughput per second or what's your throughput per day or something like that that's a classic one the big web companies talk about that",
    "start": "1994399",
    "end": "2000480"
  },
  {
    "text": "all the time what is the number of transactions per day they manage you start doing the math on and it's really not that interesting",
    "start": "2000480",
    "end": "2007679"
  },
  {
    "text": "even per second it's not that interesting but if you look at real world systems you're looking at what is it like in",
    "start": "2007679",
    "end": "2013760"
  },
  {
    "text": "burst scenarios what happens in that 10 microseconds when an interesting event happens in a",
    "start": "2013760",
    "end": "2019679"
  },
  {
    "text": "financial market or an interesting event hops like market open market close non-farm payroll release these sorts of",
    "start": "2019679",
    "end": "2026399"
  },
  {
    "text": "things is when within a number of microseconds a huge amount of traffic goes and if you extrapolated",
    "start": "2026399",
    "end": "2032000"
  },
  {
    "text": "it over a sec and this becomes huge values there is where throughput really matters because you",
    "start": "2032000",
    "end": "2037760"
  },
  {
    "text": "want to have incredibly high throughput to get through that burst really quickly so you're not queuing because if you're queuing you're weeding you're not making",
    "start": "2037760",
    "end": "2044320"
  },
  {
    "text": "progress and usually the way you win and for algorithms at that point is to be able to amateurise so if you",
    "start": "2044320",
    "end": "2050638"
  },
  {
    "text": "can batch well you can amateurize your way through stuff so you don't want to be having a linear relationship between",
    "start": "2050639",
    "end": "2057040"
  },
  {
    "text": "input events and say i o events to disc or network events or anything that's going to be a large expensive cost you need",
    "start": "2057040",
    "end": "2064000"
  },
  {
    "text": "amateurise into those to do really well and it's a hugely interesting subject",
    "start": "2064000",
    "end": "2069040"
  },
  {
    "start": "2069000",
    "end": "2069000"
  },
  {
    "text": "to go through that garbage collection is one of the systemic events that was the big one that most people started to realize",
    "start": "2069040",
    "end": "2076560"
  },
  {
    "text": "you run on something like parallel old in java or most of the various carbons collectors and c",
    "start": "2076560",
    "end": "2081919"
  },
  {
    "text": "sharpens up and you get these huge pauses cms was probably the better choice",
    "start": "2081919",
    "end": "2087679"
  },
  {
    "text": "in finance for a long time but it still had these full gcs that were nasty and stopped the world so people went",
    "start": "2087679",
    "end": "2094720"
  },
  {
    "text": "with one of two approaches either a huge memory space",
    "start": "2094720",
    "end": "2100000"
  },
  {
    "text": "and you just hoped and prayed that you didn't get an event that was nasty before the end of the",
    "start": "2100000",
    "end": "2105599"
  },
  {
    "text": "trading day and at the end of the treaty day you triggered a full gc and you kind of cope with it",
    "start": "2105599",
    "end": "2110640"
  },
  {
    "text": "or you just try to not allocate in your application so those are the kind of major approaches",
    "start": "2110640",
    "end": "2116079"
  },
  {
    "text": "people took but then things started to change people discovered things like c4 the",
    "start": "2116079",
    "end": "2122000"
  },
  {
    "text": "zul'zing concurrently compacting collector which was just revolutionary",
    "start": "2122000",
    "end": "2127359"
  },
  {
    "text": "where we could run at high allocation rates and not get really nasty gc pauses",
    "start": "2127359",
    "end": "2134240"
  },
  {
    "text": "part of the history of that is that was originally designed for the vega cpu where you're looking at up to a",
    "start": "2134240",
    "end": "2140160"
  },
  {
    "text": "thousand cpu cores so things like aldol's law was in your face all of the time",
    "start": "2140160",
    "end": "2145760"
  },
  {
    "text": "stopped the world events really got to hurt you so they're designed to cope with this and have a very",
    "start": "2145760",
    "end": "2152240"
  },
  {
    "text": "responsive system and so that's changed things a lot and the nice thing is it's inspired other",
    "start": "2152240",
    "end": "2157359"
  },
  {
    "text": "things going forward so we've got like zgc shenandoah g1 to kind of just ignore",
    "start": "2157359",
    "end": "2163119"
  },
  {
    "text": "in this space because it's still is not really a proper concurrent collector in that sense like c4 leads the way zgc",
    "start": "2163119",
    "end": "2170480"
  },
  {
    "text": "is very much inspired by it but running way behind it's not generational it's got various other issues",
    "start": "2170480",
    "end": "2176320"
  },
  {
    "text": "shenandoah is looking nice especially on smaller heaps so we're getting progress in this area so it's kind of changing how we think",
    "start": "2176320",
    "end": "2183040"
  },
  {
    "text": "about this we don't have to do zero allocation like we did in the past but when you really care about",
    "start": "2183040",
    "end": "2189359"
  },
  {
    "text": "performance in this space you start measuring you start measuring cache misses more than anything else so within your",
    "start": "2189359",
    "end": "2196480"
  },
  {
    "text": "domain model your business logic your performance is almost directly correlated to the number",
    "start": "2196480",
    "end": "2201920"
  },
  {
    "text": "of cast misses you experience i get them like build these things all of the time you start to see what is your memory",
    "start": "2201920",
    "end": "2207359"
  },
  {
    "text": "access patterns are you going to have the working sets fitting into your l3 cache to work really nicely as a",
    "start": "2207359",
    "end": "2214480"
  },
  {
    "text": "working set if you're going beyond that are you going through memory linearly so the prefetchers are helping you have to work",
    "start": "2214480",
    "end": "2221040"
  },
  {
    "text": "really friendly data dependent loads are your enemy at this point otherwise you",
    "start": "2221040",
    "end": "2226400"
  },
  {
    "text": "don't get performance the fastest matching engines out there are written in c because of the control you have over",
    "start": "2226400",
    "end": "2233200"
  },
  {
    "text": "memory layout this is one area where java has really suffered compared to other languages so things like c",
    "start": "2233200",
    "end": "2240079"
  },
  {
    "text": "sharp has moved forward java is eventually starting to move this way but it's not there yet and still has",
    "start": "2240079",
    "end": "2245359"
  },
  {
    "text": "quite a way to go so you don't see so much with the really high performance stuff in this piece because it's purely about memory access",
    "start": "2245359",
    "end": "2252400"
  },
  {
    "text": "unless people are putting stuff in big arrows or putting it off heap and dealing with it directly through",
    "start": "2252400",
    "end": "2258320"
  },
  {
    "text": "unsafe because that's the only choice that you have and so we're sort of stuck in that space so data structures it's a fascinating",
    "start": "2258320",
    "end": "2264560"
  },
  {
    "text": "subject in this space and you get to see the catch misses and you'd run profilers and you can see",
    "start": "2264560",
    "end": "2270079"
  },
  {
    "text": "what's going on you can see the traffic through your cache subsystem and to your main memory and you can see",
    "start": "2270079",
    "end": "2275359"
  },
  {
    "text": "how your instructions are playing out against the number of cache misses that you're getting we've also started get this nice move",
    "start": "2275359",
    "end": "2282160"
  },
  {
    "start": "2280000",
    "end": "2280000"
  },
  {
    "text": "eventually towards binary codex in this space there still is a lot of fix and fix is a",
    "start": "2282160",
    "end": "2287920"
  },
  {
    "text": "horrible horrible protocol that's mixed up with so many layers and so many levels but so we're",
    "start": "2287920",
    "end": "2294560"
  },
  {
    "text": "processing tag value stuff and ascii eventually in finance when i started to",
    "start": "2294560",
    "end": "2299760"
  },
  {
    "text": "move forward so i was involved in sbe and there's various other things that are out there like itch and mitch and",
    "start": "2299760",
    "end": "2305280"
  },
  {
    "text": "ouch and sale and various other protocols that have all gone binary because it's so much more efficient than doing this and",
    "start": "2305280",
    "end": "2311760"
  },
  {
    "text": "taxed what's kind of interesting is outside of finance the rest of the world is still living in la la land and doing",
    "start": "2311760",
    "end": "2317520"
  },
  {
    "text": "jason and xml and all sorts of horrible stuff it's like to just just burn the planet",
    "start": "2317520",
    "end": "2323920"
  },
  {
    "text": "down and we use cpu energy and that's process everything it's one of these i want to rant about to i",
    "start": "2323920",
    "end": "2330160"
  },
  {
    "text": "always keep hearing it's human readable it's not nobody can read utf yet i know a few",
    "start": "2330160",
    "end": "2337599"
  },
  {
    "text": "people that can read ask you but nobody can read utf-8 we have editors that allow us to do it it's a tooling problem",
    "start": "2337599",
    "end": "2343680"
  },
  {
    "text": "is what's going on there and we need a move to have nice binary protocols like in the network space it's it's a",
    "start": "2343680",
    "end": "2350880"
  },
  {
    "text": "done deal we know about it we moved across even the old internet protocols were all moving towards",
    "start": "2350880",
    "end": "2356720"
  },
  {
    "text": "binary protocols in this space but yeah we still have people obsessed with jason and now we've got",
    "start": "2356720",
    "end": "2361920"
  },
  {
    "text": "the god-awful thing that is yaml that's going everywhere too please please stop this stuff",
    "start": "2361920",
    "end": "2368240"
  },
  {
    "text": "but yeah binary is much much better we've also had the advent of spectre and",
    "start": "2368240",
    "end": "2373920"
  },
  {
    "start": "2371000",
    "end": "2371000"
  },
  {
    "text": "meltdown all the speculation bugs coming with the side channel attacks and various things",
    "start": "2373920",
    "end": "2379760"
  },
  {
    "text": "so things were getting it was kind of interesting 10 years ago we were starting to see the the free",
    "start": "2379760",
    "end": "2385200"
  },
  {
    "text": "lunch been over really starting to hit so things really slowed down our cpus were getting faster but really at a very",
    "start": "2385200",
    "end": "2392240"
  },
  {
    "text": "slow rate compared to what they were before and then but two years ago with so we",
    "start": "2392240",
    "end": "2397520"
  },
  {
    "text": "had this really nice curve and then it went like this and then it went",
    "start": "2397520",
    "end": "2402800"
  },
  {
    "text": "and you've seen things got a lot slower as all the mitigation started to apply i i seen huge costs increase when things",
    "start": "2402800",
    "end": "2410160"
  },
  {
    "text": "got much much slower so actually a lot of the game now in this is working out which patches can you not apply because then you get",
    "start": "2410160",
    "end": "2417440"
  },
  {
    "text": "better performance like do you know your system is safe from this type of vulnerability so",
    "start": "2417440",
    "end": "2422480"
  },
  {
    "text": "there's a whole really nice sort of world consultancy where you can work out okay for this processor i don't",
    "start": "2422480",
    "end": "2428000"
  },
  {
    "text": "need this particular patch to be applied or actually i know where i'm running it in this environment and what can talk to",
    "start": "2428000",
    "end": "2433119"
  },
  {
    "text": "it i'm not sharing anything else on hyper threads or stuff so i can deal with all of that as well so it's kind of weird and interesting world",
    "start": "2433119",
    "end": "2440160"
  },
  {
    "text": "but certain things have really increased in cost because of this so things like system calls when you",
    "start": "2440160",
    "end": "2445520"
  },
  {
    "text": "make a network call or a disk call things like that it has got much more expensive stuff that's more subtle",
    "start": "2445520",
    "end": "2452720"
  },
  {
    "text": "like page faults because there happen to be interrupts that are going into the",
    "start": "2452720",
    "end": "2457920"
  },
  {
    "text": "kernel for dealing with this you've got contact switches associated with that and it has a lot more cost like i've seen people reading",
    "start": "2457920",
    "end": "2464000"
  },
  {
    "text": "memory map files just get horrendously more expensive all of a sudden these sorts of things",
    "start": "2464000",
    "end": "2469040"
  },
  {
    "text": "and also we're paging out our applications part of the systemic problem and then we're faulting them back in",
    "start": "2469040",
    "end": "2475040"
  },
  {
    "text": "again this all starts to become difficult so we're having to look at m locking memory and deal with all sorts of interesting",
    "start": "2475040",
    "end": "2480560"
  },
  {
    "text": "problems to get around this that this whole cost space has gone up and so we need to think differently",
    "start": "2480560",
    "end": "2486640"
  },
  {
    "text": "we particularly need to really amateurize so again if you're going to put a small amount of data in a network packet is incredibly wasteful it was",
    "start": "2486640",
    "end": "2493200"
  },
  {
    "text": "wasteful before it's even more wasteful than i seem if you're going to go to desk you want to fill that desk block but we",
    "start": "2493200",
    "end": "2500000"
  },
  {
    "text": "can get around some of this making it better by going to huge pages so set up things",
    "start": "2500000",
    "end": "2506079"
  },
  {
    "text": "like huge table or huge table fs and you map your pages there if you're dealing with memory mod",
    "start": "2506079",
    "end": "2512000"
  },
  {
    "text": "files making sure your applications are all running properly and not watching out for some of the issues",
    "start": "2512000",
    "end": "2517680"
  },
  {
    "text": "that come with pneuma and transparent huge pages you actually want to make sure you've properly allocated huge",
    "start": "2517680",
    "end": "2523280"
  },
  {
    "text": "pages and you've dealt with that correctly and watch for the swapping issues that come around with that",
    "start": "2523280",
    "end": "2530079"
  },
  {
    "start": "2529000",
    "end": "2529000"
  },
  {
    "text": "hardware has advanced quite a lot in this period and in kind of really interesting ways",
    "start": "2530079",
    "end": "2536000"
  },
  {
    "text": "discs i think are totally different than they were 10 years ago we had really nice sass spinning discs",
    "start": "2536000",
    "end": "2542960"
  },
  {
    "text": "that could ride sequentially nice and fast and that's where these logs worked out quite well but they're not",
    "start": "2542960",
    "end": "2548640"
  },
  {
    "text": "good for random access we get huge pauses and especially when we're looking at our page faults that",
    "start": "2548640",
    "end": "2554000"
  },
  {
    "text": "are going on or we're swapping stuff out or anything like that which you try to be avoiding but if you did get this you got",
    "start": "2554000",
    "end": "2559520"
  },
  {
    "text": "huge pauses because the spinning desks you're dealing with milliseconds to go seek somewhere else on the disk",
    "start": "2559520",
    "end": "2564720"
  },
  {
    "text": "ssds have changed this they have really significantly dropped their latency so",
    "start": "2564720",
    "end": "2569760"
  },
  {
    "text": "we've gone from milliseconds down to tens of micros hundreds of micros in this sort of average cases but the",
    "start": "2569760",
    "end": "2576240"
  },
  {
    "text": "really good ones are now down to tens of micros and then we've got things like the intel's opt-in",
    "start": "2576240",
    "end": "2582319"
  },
  {
    "text": "memory that came out which didn't quite give us the throughput advantages we thought we're going to have but has",
    "start": "2582319",
    "end": "2588640"
  },
  {
    "text": "really helped with the low and predictable latency although we're still finding over and",
    "start": "2588640",
    "end": "2593760"
  },
  {
    "text": "over again that if we access things in a random or arbitrary pattern",
    "start": "2593760",
    "end": "2599440"
  },
  {
    "text": "we have much more cost than we deal with it as a nice linear pattern main memory is very nice if we access it",
    "start": "2599440",
    "end": "2606319"
  },
  {
    "text": "linearly because it prefetches disks prefetch we start dealing with how we write down a box",
    "start": "2606319",
    "end": "2612240"
  },
  {
    "text": "nicer discs feel less often if you deal with them in a sequential pattern than if you deal with them in a random",
    "start": "2612240",
    "end": "2618640"
  },
  {
    "text": "pattern so still having that understanding of what's going on under there networking's advanced hugely as well i",
    "start": "2618640",
    "end": "2626240"
  },
  {
    "text": "think hft and the whole thing has been happening in the finance piece has been wonderful for networks we've got",
    "start": "2626240",
    "end": "2632480"
  },
  {
    "text": "much lower much more predictable latency now in our network stacks and we're getting to benefit from that especially as we've",
    "start": "2632480",
    "end": "2639200"
  },
  {
    "text": "now gone much more distributed so finance has been good in that but cpus",
    "start": "2639200",
    "end": "2644319"
  },
  {
    "text": "have not got much faster that's what's kind of interesting and if you actually look at the summary",
    "start": "2644319",
    "end": "2649760"
  },
  {
    "text": "of what's happened in the last decade we've had minimal improvements in",
    "start": "2649760",
    "end": "2654800"
  },
  {
    "text": "latency and response time from our hardware discs being the exception but",
    "start": "2654800",
    "end": "2660000"
  },
  {
    "text": "everything else is like memory cpus i mean latency is kind of the same throughput",
    "start": "2660000",
    "end": "2665920"
  },
  {
    "text": "has massively changed and this is flipped around how we got to think about design",
    "start": "2665920",
    "end": "2670960"
  },
  {
    "text": "we spent four decades of progress optimizing for latency all right so",
    "start": "2670960",
    "end": "2676880"
  },
  {
    "text": "optimizing to not use as much throughput and bandwidth and treat enough latency because that",
    "start": "2676880",
    "end": "2682079"
  },
  {
    "text": "wasn't a problem now it's flipped bandwidth is abundant latency is not getting better because",
    "start": "2682079",
    "end": "2687760"
  },
  {
    "text": "we've squeezed it to the end and generation after generation we're getting doubling or even orders of magnitude improvements in bandwidth so",
    "start": "2687760",
    "end": "2694480"
  },
  {
    "text": "we need to change how we're thinking around that and part of that is our new apis",
    "start": "2694480",
    "end": "2700960"
  },
  {
    "text": "particularly for io like the bsd sockets library has just run its course",
    "start": "2700960",
    "end": "2706640"
  },
  {
    "text": "it is not a good api for dealing with modern network cards we need to go",
    "start": "2706640",
    "end": "2712800"
  },
  {
    "text": "to much more asynchronous models and so things like efei going to solar flow cards or intel went",
    "start": "2712800",
    "end": "2719200"
  },
  {
    "text": "forward with dpdk and we're starting to see things like even the linux kernel because the system called overheads and getting the packet",
    "start": "2719200",
    "end": "2726079"
  },
  {
    "text": "rates iou ring and where's it going that is the only way to get distress some of this hardware to",
    "start": "2726079",
    "end": "2732800"
  },
  {
    "text": "what it's capable of and similar on disks we need to go asynchronous with these",
    "start": "2732800",
    "end": "2737839"
  },
  {
    "text": "apis because that way we get around the system call overhead you can only do so many system calls a",
    "start": "2737839",
    "end": "2743760"
  },
  {
    "text": "second when a system call is taking more than a microsecond it means you're going to be doing less",
    "start": "2743760",
    "end": "2749760"
  },
  {
    "text": "than a million of those per second which means you can't do more of a million packets per second or",
    "start": "2749760",
    "end": "2755440"
  },
  {
    "text": "io operations per second yet the underlying hardware is capable of significantly more so we need to deal with it",
    "start": "2755440",
    "end": "2761280"
  },
  {
    "text": "asynchronously to do with that and so we need to move forward that way and so mechanical sympathy is probably",
    "start": "2761280",
    "end": "2768160"
  },
  {
    "start": "2765000",
    "end": "2765000"
  },
  {
    "text": "is more important now than it's ever been as we're using abstractions but if we",
    "start": "2768160",
    "end": "2774400"
  },
  {
    "text": "don't understand what those abstractions are built upon and we use them correctly we just are",
    "start": "2774400",
    "end": "2779839"
  },
  {
    "text": "wasting cycles in this interesting question is does programming language matter",
    "start": "2779839",
    "end": "2786160"
  },
  {
    "text": "for a lot of this in the space i've seen exchanges and trading systems built across",
    "start": "2786160",
    "end": "2791359"
  },
  {
    "text": "all sorts of languages the sort of java the c sharps c c plus plus a lot of rust and all",
    "start": "2791359",
    "end": "2796880"
  },
  {
    "text": "recently this sort of thing is changing i think it's actually not so much the language but more the culture and the",
    "start": "2796880",
    "end": "2803839"
  },
  {
    "text": "design around the language and what do i mean about that i love java i think java is useful for",
    "start": "2803839",
    "end": "2811200"
  },
  {
    "text": "many things and the jvm is a great thing but the design of some of its apis are",
    "start": "2811200",
    "end": "2816480"
  },
  {
    "text": "so hurtful to performance they allocate too much they have far too much data dependent loads",
    "start": "2816480",
    "end": "2821760"
  },
  {
    "text": "and not enough respect for memory layout it starts to really hurt c sharps is a bit different than some",
    "start": "2821760",
    "end": "2828319"
  },
  {
    "text": "other ways like c sharp as a language and this control is better but it's vm and runtime is not as good as the",
    "start": "2828319",
    "end": "2834480"
  },
  {
    "text": "java one we get to see this the higher end of performance it's going",
    "start": "2834480",
    "end": "2839920"
  },
  {
    "text": "back a lot more to c c plus plus and rust because we have so much more control",
    "start": "2839920",
    "end": "2846000"
  },
  {
    "text": "you can build the nice data structures but it's not just that it's getting access to these new apis",
    "start": "2846000",
    "end": "2851839"
  },
  {
    "text": "some of our managed languages are just so slow to even consider where our hardware hardware's going and",
    "start": "2851839",
    "end": "2858240"
  },
  {
    "text": "so we're not getting to make it make any advantage of that so we end up missing out so what's happening is we tend to get much",
    "start": "2858240",
    "end": "2864960"
  },
  {
    "text": "more polyglot style systems where you'll develop some parts of systems in one line with some parts in",
    "start": "2864960",
    "end": "2870800"
  },
  {
    "text": "another language and i see ideally they can all work and interoperate very fast and efficiently",
    "start": "2870800",
    "end": "2876160"
  },
  {
    "text": "and that's the kind of ideal world and we get to see that quite a lot more now with things that aren't so high",
    "start": "2876160",
    "end": "2881599"
  },
  {
    "text": "throughput aren't so response time critical will be done in other languages that maybe have a nicer environment and",
    "start": "2881599",
    "end": "2887680"
  },
  {
    "text": "easier support and easier access to many more developers so deployment kind of lost section here",
    "start": "2887680",
    "end": "2896960"
  },
  {
    "start": "2891000",
    "end": "2891000"
  },
  {
    "text": "what's been changing here is it's kind of interesting space continuous delivery has had a huge",
    "start": "2898800",
    "end": "2904079"
  },
  {
    "start": "2902000",
    "end": "2902000"
  },
  {
    "text": "impact i think that was one of the things i was very proud that we were able to push forward at l max and working with",
    "start": "2904079",
    "end": "2909839"
  },
  {
    "text": "dear farley was a big advantage there we just wanted to be able to turn things around fast",
    "start": "2909839",
    "end": "2915280"
  },
  {
    "text": "get that fast feedback cycles and the secret to that is automation and actually",
    "start": "2915280",
    "end": "2920559"
  },
  {
    "text": "looking at how you get feedback as quickly as possible i still see people debating about should",
    "start": "2920559",
    "end": "2925920"
  },
  {
    "text": "they have a good test suite should they have the ability to do one click deploy",
    "start": "2925920",
    "end": "2931359"
  },
  {
    "text": "all of these things you still get some financial organizations that can only deploy every six months",
    "start": "2931359",
    "end": "2936559"
  },
  {
    "text": "it's just insane you just don't get the feedback you can't react to that we need to have that ability to",
    "start": "2936559",
    "end": "2943440"
  },
  {
    "text": "work that way and progress much more quickly because the feedback cycles is what feeds innovation if you can have",
    "start": "2943440",
    "end": "2949920"
  },
  {
    "text": "an idea test the idea and find out if it's good in a very short space of time including find out if it's bad you don't",
    "start": "2949920",
    "end": "2956880"
  },
  {
    "text": "get his wedded to it one of the big dangers with anything that's got a long feedback cycle is",
    "start": "2956880",
    "end": "2962240"
  },
  {
    "text": "things become our pet projects we become wedded to an idea because it takes us so long to push it",
    "start": "2962240",
    "end": "2967839"
  },
  {
    "text": "through a system then we can't almost let the bb go we want to see it succeed it's much better if we can very quickly",
    "start": "2967839",
    "end": "2974960"
  },
  {
    "text": "work out that something is not a viable idea and we can go a different route and for that we need to think about faith",
    "start": "2974960",
    "end": "2980880"
  },
  {
    "text": "so people talk about agile i really don't care whether you do stand-ups or not that's all just cargo cultism",
    "start": "2980880",
    "end": "2988079"
  },
  {
    "text": "the key to agile is feedback cycles it's all based on little's law like if",
    "start": "2988079",
    "end": "2993359"
  },
  {
    "text": "anybody says they do agile and they don't understand cueing ethereum little's law they're not",
    "start": "2993359",
    "end": "2998800"
  },
  {
    "text": "doing agile and that's about feedback we have to have those fast feedback cycles",
    "start": "2998800",
    "end": "3004400"
  },
  {
    "text": "to make good decisions and move ourselves forward and sort of think about how we can continuously deliver",
    "start": "3004400",
    "end": "3011200"
  },
  {
    "start": "3010000",
    "end": "3010000"
  },
  {
    "text": "we've seen a lot more of a move to 24 7 operations where we get new exchanges now that are",
    "start": "3011200",
    "end": "3017440"
  },
  {
    "text": "going right around the clock it was typical before that we would shut down at the end of the day and we didn't need to carry state",
    "start": "3017440",
    "end": "3023680"
  },
  {
    "text": "forward this has made it very different from uh how do we keep the state",
    "start": "3023680",
    "end": "3029359"
  },
  {
    "text": "we end up doing stuff like having to have snapshots of our speed and recover from that this also allows us to do rolling",
    "start": "3029359",
    "end": "3036000"
  },
  {
    "text": "upgrades and live systems and that's where like clustering and consensus is a better approach you can take one node out of a cluster",
    "start": "3036000",
    "end": "3042319"
  },
  {
    "text": "of grid get it back into the cluster again do another one do another one and you enroll these things",
    "start": "3042319",
    "end": "3047520"
  },
  {
    "text": "it allows us to do the hot upgrade and still be responsive and we're getting a lot more move from that and especially",
    "start": "3047520",
    "end": "3052960"
  },
  {
    "text": "as we go to retail retail expats to access their systems at any time we're also",
    "start": "3052960",
    "end": "3058400"
  },
  {
    "text": "dealing with things globally so we're getting a lot of change in that space and we need automation we need good",
    "start": "3058400",
    "end": "3063920"
  },
  {
    "text": "monitoring we need lots of things in that space to be able to do that and do it well",
    "start": "3063920",
    "end": "3069200"
  },
  {
    "start": "3068000",
    "end": "3068000"
  },
  {
    "text": "and we also need to scale flexibly like a test i have for any system being built",
    "start": "3069200",
    "end": "3074720"
  },
  {
    "text": "today is can you run it on your live production system and use the same deployment tools the",
    "start": "3074720",
    "end": "3081280"
  },
  {
    "text": "same setup to run the whole thing on your laptop and debug it if you can't do that you failed which",
    "start": "3081280",
    "end": "3087839"
  },
  {
    "text": "has some interesting implications hardware load balancers specialized hardware and stuff no",
    "start": "3087839",
    "end": "3093520"
  },
  {
    "text": "it doesn't really have a place in some of this anymore because it restricts what we can do we need to be able to deploy everything",
    "start": "3093520",
    "end": "3100240"
  },
  {
    "text": "to a laptop so we need to be able to take threads and run them on cores we need to collapse them down and schedule them well",
    "start": "3100240",
    "end": "3106720"
  },
  {
    "text": "we need to split things apart and maybe have them communicate via ipc because we get to see this where we're",
    "start": "3106720",
    "end": "3112559"
  },
  {
    "text": "now going from machines that had four or eight cores or whatever in a server 10 years ago",
    "start": "3112559",
    "end": "3117599"
  },
  {
    "text": "to now having 100 cores no problem on a server what's the obvious implication of that",
    "start": "3117599",
    "end": "3122800"
  },
  {
    "text": "stuff that used to take up a whole rack now just takes up one machine so you want to move everything on the machine",
    "start": "3122800",
    "end": "3128400"
  },
  {
    "text": "make things much more efficient by talking via ipc at that point and we're seeing that now with going to",
    "start": "3128400",
    "end": "3134000"
  },
  {
    "text": "the cloud and starting to see new exchanges being built and deployed in the cloud",
    "start": "3134000",
    "end": "3139040"
  },
  {
    "text": "and so you need to take advantage of the hardware that's there take advantage of the new apis and be",
    "start": "3139040",
    "end": "3144559"
  },
  {
    "text": "able to work with that and go forward so kind of wrapping up here",
    "start": "3144559",
    "end": "3150319"
  },
  {
    "start": "3150000",
    "end": "3150000"
  },
  {
    "text": "that's the last 10 years what's the next 10 years going to hold if they see any sort of current trend",
    "start": "3150319",
    "end": "3156640"
  },
  {
    "text": "that's going on i think a lot of the performance race and stuff is kind of over it's all about refinements it's about",
    "start": "3156640",
    "end": "3163920"
  },
  {
    "text": "quality of execution now it's how well does your system stand up to the",
    "start": "3163920",
    "end": "3169040"
  },
  {
    "text": "failures how well can you observe it deal with it manage it in production run it 24 7 and",
    "start": "3169040",
    "end": "3175119"
  },
  {
    "text": "face off to customers it seems to be service is where things are really going in the future and you've got to be reactive to a market",
    "start": "3175119",
    "end": "3181760"
  },
  {
    "text": "that's changing so fast if you're in a cycle where it takes six months nine months to do something to",
    "start": "3181760",
    "end": "3187839"
  },
  {
    "text": "find out you're just going to lose to the competition you need to be much much more reactive",
    "start": "3187839",
    "end": "3193359"
  },
  {
    "text": "and on that i'll thank you very much",
    "start": "3193359",
    "end": "3200558"
  }
]