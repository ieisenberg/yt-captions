[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "[Music]",
    "start": "2710",
    "end": "11599"
  },
  {
    "text": "so uh we're going to talk about cold fusion 10 and websocket 5 so today I'm",
    "start": "11599",
    "end": "17480"
  },
  {
    "text": "just to clarify in case anybody was wondering my name is Alicia Dvorak uh",
    "start": "17480",
    "end": "22640"
  },
  {
    "text": "you can pretend that I'm rupesh he couldn't make it today so I'm just going to fill in for him I'm a solution",
    "start": "22640",
    "end": "28960"
  },
  {
    "text": "consultant and product evangelist for C Fusion that's my role here at",
    "start": "28960",
    "end": "35040"
  },
  {
    "text": "Adobe so today's agenda we're going to talk about websockets in a nutshell I want to just give you an idea of what",
    "start": "35280",
    "end": "41480"
  },
  {
    "text": "websockets are if you're not familiar yet and then uh we'll get into cold fusions implementation of websocket and",
    "start": "41480",
    "end": "47480"
  },
  {
    "text": "how easy it is to build uh that functionality within your web applications and then we'll get into",
    "start": "47480",
    "end": "54160"
  },
  {
    "text": "some Basics and I'll show you in four easy steps how you can Implement website",
    "start": "54160",
    "end": "59879"
  },
  {
    "text": "sucket in your applications with using cusion technology basically three steps if you",
    "start": "59879",
    "end": "66640"
  },
  {
    "text": "just want to receive messages and then the fourth will be sending messages from your server and then we'll get into a",
    "start": "66640",
    "end": "73119"
  },
  {
    "text": "little bit more intermediate type Advanced topic uh on some some of the other additional features that you can",
    "start": "73119",
    "end": "79119"
  },
  {
    "text": "do uh with websockets after that and then I'll show you some Demos in the",
    "start": "79119",
    "end": "85000"
  },
  {
    "start": "85000",
    "end": "124000"
  },
  {
    "text": "end so what are websockets uh basically websocket is the name of a protocol that",
    "start": "85000",
    "end": "91000"
  },
  {
    "text": "was introduced with HTML 5 it gives you bidirectional full duplex communication",
    "start": "91000",
    "end": "97479"
  },
  {
    "text": "between a TCP an established TCP uh connection this connection is permanent",
    "start": "97479",
    "end": "104399"
  },
  {
    "text": "so it's a little bit different from the HTTP protocol in that in that way it's uh designed specifically for",
    "start": "104399",
    "end": "111759"
  },
  {
    "text": "Rich internet applications and it works basically it's supported on both desktop uh mobile",
    "start": "111759",
    "end": "119840"
  },
  {
    "text": "browsers as well as tablet browsers as well so what's the difference between",
    "start": "119840",
    "end": "126119"
  },
  {
    "start": "124000",
    "end": "258000"
  },
  {
    "text": "websocket and HTTP protocol well when you look at this diagram HTTP protocol",
    "start": "126119",
    "end": "132440"
  },
  {
    "text": "will allow you to have a unidirectional communication with the server so basically the server cannot publish back",
    "start": "132440",
    "end": "139920"
  },
  {
    "text": "to the client without receiving some type of request from the client",
    "start": "139920",
    "end": "145879"
  },
  {
    "text": "browser the websocket protocol you'll see that it's by directional so you have",
    "start": "145879",
    "end": "151040"
  },
  {
    "text": "that realtime data communication between the client and the server over an established permanent TCP connection so",
    "start": "151040",
    "end": "158800"
  },
  {
    "text": "this gives you uh the ability to have real-time data streaming back and forth between client and",
    "start": "158800",
    "end": "165280"
  },
  {
    "text": "server let's talk about performance like I said HTTP is based on the response",
    "start": "165280",
    "end": "171080"
  },
  {
    "text": "request and it the server will not be able to push any messages back to the",
    "start": "171080",
    "end": "176640"
  },
  {
    "text": "client without any type of request coming from the client first so in from a performance",
    "start": "176640",
    "end": "183680"
  },
  {
    "text": "standpoint you'll see that the websocket is actually a lot better performing",
    "start": "183680",
    "end": "188760"
  },
  {
    "text": "you'll get um a lot higher Network lower Network latency and higher Performance",
    "start": "188760",
    "end": "194159"
  },
  {
    "text": "Based on things like the header size and",
    "start": "194159",
    "end": "199400"
  },
  {
    "text": "of course because you have a permanent TCP cor connection you get that by directional data flow in real time that",
    "start": "199400",
    "end": "206799"
  },
  {
    "text": "makes for highly scalable environment this D this will show you the difference between like a general",
    "start": "206799",
    "end": "214640"
  },
  {
    "text": "HTTP request header if you see the difference is pretty large compared to a",
    "start": "214640",
    "end": "220640"
  },
  {
    "text": "standard websocket request the websocket request has one bite to start and one bite to end with the message body in the",
    "start": "220640",
    "end": "227360"
  },
  {
    "text": "middle but with HTTP requests you have all of the Header information and this is like a standard one or an average one",
    "start": "227360",
    "end": "234040"
  },
  {
    "text": "that would include just a little bit of session data included in it um if you think about how much session data you",
    "start": "234040",
    "end": "240920"
  },
  {
    "text": "pass back and forth on a larger application or depending on your application requirements you can see how",
    "start": "240920",
    "end": "247519"
  },
  {
    "text": "this could add up pretty quickly um if you have let's say 880,000 requests",
    "start": "247519",
    "end": "253079"
  },
  {
    "text": "coming in and you've got all this header data on the",
    "start": "253079",
    "end": "258079"
  },
  {
    "start": "258000",
    "end": "490000"
  },
  {
    "text": "top so what are the some of the common uses for websocket applications uh",
    "start": "258079",
    "end": "263639"
  },
  {
    "text": "Twitter feed news feeds uh stock generation the online gaming gambling",
    "start": "263639",
    "end": "270440"
  },
  {
    "text": "type applications or a dashboard would be good good implementation of this so",
    "start": "270440",
    "end": "276919"
  },
  {
    "text": "which browsers do support websockets uh Chrome Firefox Safari",
    "start": "276919",
    "end": "282800"
  },
  {
    "text": "Opera they all have native browser support IE does not in its current edition which is version nine but I",
    "start": "282800",
    "end": "289840"
  },
  {
    "text": "believe 10 is definitely going to include some websocket native browser uh support within uh IE for websocket now",
    "start": "289840",
    "end": "297320"
  },
  {
    "text": "for the tablet and the mobile environments iOS does have native support in the",
    "start": "297320",
    "end": "302600"
  },
  {
    "text": "default browser so um you can use websockets for all the iOS platform",
    "start": "302600",
    "end": "308240"
  },
  {
    "text": "however the Android BL browser the one that's shipped with Android by default does not include that uh Native browser",
    "start": "308240",
    "end": "315080"
  },
  {
    "text": "support what I do know though is if you do if you download one of the other uh",
    "start": "315080",
    "end": "320240"
  },
  {
    "text": "browsers for Android for example I think I downloaded firo Fox 14 it does support",
    "start": "320240",
    "end": "326280"
  },
  {
    "text": "websocket so you could get that support if you if you do get a a newer version",
    "start": "326280",
    "end": "332400"
  },
  {
    "text": "of one of the other browsers that's available for your",
    "start": "332400",
    "end": "337199"
  },
  {
    "text": "environment so that's the problem with websocket protocol right now it's a very new uh type of technology and the",
    "start": "337520",
    "end": "345039"
  },
  {
    "text": "browsers are kind of just trying to keep up at this point with uh supporting it",
    "start": "345039",
    "end": "350160"
  },
  {
    "text": "so what we've done with cold fusion is we've offered a fallback to the flash player that will allow you to um",
    "start": "350160",
    "end": "357800"
  },
  {
    "text": "seamlessly provide an Avenue for all of the backward compatibility problems that",
    "start": "357800",
    "end": "362919"
  },
  {
    "text": "are around with the old browser support right now basically in your code you",
    "start": "362919",
    "end": "368160"
  },
  {
    "text": "write the code once Implement websockets and then if your user does not have that",
    "start": "368160",
    "end": "374199"
  },
  {
    "text": "support the native browser support we automatically fall back to the flash player without any code changes required",
    "start": "374199",
    "end": "380240"
  },
  {
    "text": "by you at all it's a seamless integration and your user will not see any difference in the",
    "start": "380240",
    "end": "387319"
  },
  {
    "text": "functionality so want to talk about coal Fusion's implementation of websocket just how easy it is we provided you one",
    "start": "388400",
    "end": "395880"
  },
  {
    "text": "single tag to establish a websocket connection it's the CF websocket tag",
    "start": "395880",
    "end": "401000"
  },
  {
    "text": "messages can be received sent and received in any cold fusion valid data type so you can send a struct a list an",
    "start": "401000",
    "end": "409120"
  },
  {
    "text": "array um whatever you'd like back and forth between that socka and then as I said earlier the",
    "start": "409120",
    "end": "416199"
  },
  {
    "text": "fallback to The Flash Player is still uh available",
    "start": "416199",
    "end": "421400"
  },
  {
    "text": "so so websockets uh basically the cold fusion implementation we've provided you",
    "start": "421840",
    "end": "428520"
  },
  {
    "text": "uh one Avenue which is uh broadcast mode and well there's there's a second one",
    "start": "428520",
    "end": "433680"
  },
  {
    "text": "that I'll talk about a little bit later but the first one I want to talk about is broadcasting messages out to your clients and there's three different ways",
    "start": "433680",
    "end": "440199"
  },
  {
    "text": "that you can do this you can do this by having your clients invoke a respon a",
    "start": "440199",
    "end": "445720"
  },
  {
    "text": "message to publish throughout uh all of your other clients are subscribing to a certain",
    "start": "445720",
    "end": "451280"
  },
  {
    "text": "channel the you can have server invoked where you're publishing messages based on a certain mechanism or scheduled task",
    "start": "451280",
    "end": "457599"
  },
  {
    "text": "at the server level to all of the the subscribed clients on your uh on the",
    "start": "457599",
    "end": "463160"
  },
  {
    "text": "channel as well and then the third method is the invoke and publish where you have a user or some uh client that's",
    "start": "463160",
    "end": "470720"
  },
  {
    "text": "established a connection and sends a request to the server to have some type of data processing done on the back end",
    "start": "470720",
    "end": "477800"
  },
  {
    "text": "and then you process that data and as the server after the server's done doing the message formatting and processing",
    "start": "477800",
    "end": "483720"
  },
  {
    "text": "it'll submit it and publish it to the rest of the um the",
    "start": "483720",
    "end": "489479"
  },
  {
    "text": "group so these are the four steps that we're going to do uh three if you want",
    "start": "489520",
    "end": "494560"
  },
  {
    "text": "to just receive messages you'll be all set up in three steps first what we do",
    "start": "494560",
    "end": "499599"
  },
  {
    "text": "in coldfusion is set up the application.cfc which is you can think of it as a global initialization file",
    "start": "499599",
    "end": "506240"
  },
  {
    "text": "for cold fusion um it's basically like a class with a bunch of methods that'll",
    "start": "506240",
    "end": "511960"
  },
  {
    "text": "initialize your application in this file we just establish WS channels give it a",
    "start": "511960",
    "end": "517120"
  },
  {
    "text": "name for the channel that you want to establish and then for step two we would",
    "start": "517120",
    "end": "523680"
  },
  {
    "text": "either use the CF web socket tag and then pass it a name of the channel that you want to connect to and this",
    "start": "523680",
    "end": "530680"
  },
  {
    "text": "establishes the connection with the this particular channel in here you would specify on",
    "start": "530680",
    "end": "538560"
  },
  {
    "text": "message onopen and onair handlers of whatever you're choosing you just specify the names that you'd like to use",
    "start": "538560",
    "end": "544600"
  },
  {
    "text": "for those handlers these are default handlers and you have the option to set",
    "start": "544600",
    "end": "550480"
  },
  {
    "text": "a subscribe to at this point in time and you it'll automatically set up the uh",
    "start": "550480",
    "end": "556399"
  },
  {
    "text": "the code to subscribe the user to uh that channel if you do not want the default",
    "start": "556399",
    "end": "562959"
  },
  {
    "text": "functionality let's say you have some type of Header information that you want to pass in a custom header or some",
    "start": "562959",
    "end": "570519"
  },
  {
    "text": "arguments that you want to pass in with the subscription then you would use the JavaScript",
    "start": "570519",
    "end": "575880"
  },
  {
    "text": "subscribe uh method below here instead of using the default subscribed to in",
    "start": "575880",
    "end": "582320"
  },
  {
    "text": "the CF web socket tag so step three you define the",
    "start": "582320",
    "end": "588040"
  },
  {
    "text": "JavaScript handlers so these are the handlers that we specified in the CF websocket tag you see that there's a message",
    "start": "588040",
    "end": "594959"
  },
  {
    "text": "Handler an open Handler and an air handler you define your custom code that",
    "start": "594959",
    "end": "600399"
  },
  {
    "text": "you'd like to establish within those but at this point after these are set you're",
    "start": "600399",
    "end": "605920"
  },
  {
    "text": "receiving messages already so it's a very easy simple way to set up websocket",
    "start": "605920",
    "end": "612160"
  },
  {
    "text": "in your in your uh application the fourth step would be to publish a message from the server so",
    "start": "612160",
    "end": "619959"
  },
  {
    "text": "simple you you use the publish function the JavaScript function pass it in the name of the channel and whatever message",
    "start": "619959",
    "end": "626040"
  },
  {
    "text": "you'd want to send I want to let you know what the format",
    "start": "626040",
    "end": "632880"
  },
  {
    "text": "of the responses are when you do send a subscribe for example you'll get an",
    "start": "632880",
    "end": "638720"
  },
  {
    "text": "acknowledgement back from the server that gives you this type of format here um you can see the request type is",
    "start": "638720",
    "end": "645079"
  },
  {
    "text": "defined there's a client ID associated with it as well as um you know a message",
    "start": "645079",
    "end": "651160"
  },
  {
    "text": "response which is okay typically if it's okay and then the an error message uh",
    "start": "651160",
    "end": "656920"
  },
  {
    "text": "would would be in this format below uh and you'd get a message back saying that",
    "start": "656920",
    "end": "662399"
  },
  {
    "text": "the client has already subscribed or whatever the error message is and the these are the responses back from these",
    "start": "662399",
    "end": "667920"
  },
  {
    "text": "particular handlers that we've already set up so cusion provides a set of",
    "start": "667920",
    "end": "673839"
  },
  {
    "text": "JavaScript functions that are built-in functionality already we've got subscribe publish and boken publish",
    "start": "673839",
    "end": "681320"
  },
  {
    "text": "which is the client initiated that I was speaking about client initiated but server processed and published at the",
    "start": "681320",
    "end": "687959"
  },
  {
    "text": "server side invoke and then unsubscribe and then on the other side",
    "start": "687959",
    "end": "693120"
  },
  {
    "text": "we have uh authenticate get subscriptions now get subscriptions will",
    "start": "693120",
    "end": "698399"
  },
  {
    "text": "just pass you back the subscriptions that you have assigned to let's say I'm",
    "start": "698399",
    "end": "703560"
  },
  {
    "text": "a client a it'll just tell me which channels I'm subscribed to get subscribers count how many people",
    "start": "703560",
    "end": "710800"
  },
  {
    "text": "are subscribed open connection and close",
    "start": "710800",
    "end": "715240"
  },
  {
    "start": "716000",
    "end": "941000"
  },
  {
    "text": "connection so there's a couple of Advan advaned uh typee techniques that are involved as well that we give you access",
    "start": "716279",
    "end": "722760"
  },
  {
    "text": "to from the websocket perspective and C fusion um basically what we were",
    "start": "722760",
    "end": "728959"
  },
  {
    "text": "speaking about a little bit earlier in the last slide is invoke and publish a user can send raw data to the server",
    "start": "728959",
    "end": "736279"
  },
  {
    "text": "invoke a CFC that CFC which is basically uh you can think of as a class file with",
    "start": "736279",
    "end": "742160"
  },
  {
    "text": "several methods within it uh can do some data processing on the back end you can",
    "start": "742160",
    "end": "748360"
  },
  {
    "text": "uh take you know queries from different databases concatenate uh information and",
    "start": "748360",
    "end": "753560"
  },
  {
    "text": "you know do that processing and then publish it back to the server and this gives you the option of doing that U via",
    "start": "753560",
    "end": "759839"
  },
  {
    "text": "the built-in uh JavaScript function invoke and publish so this would be um you know",
    "start": "759839",
    "end": "767440"
  },
  {
    "text": "useful for you know any kind of data manipulation you need to do before somebody sends out or publishes a",
    "start": "767440",
    "end": "773600"
  },
  {
    "text": "message out to the all the rest of the clients so there's also o message",
    "start": "773600",
    "end": "779639"
  },
  {
    "text": "filtering and this is basically just allowing you a way to",
    "start": "779639",
    "end": "785240"
  },
  {
    "text": "filter your client's interests or whatever the users's interests are with respect to a certain channel so let's",
    "start": "785240",
    "end": "792000"
  },
  {
    "text": "say I'm Alicia and I'm a Laker fan I subscribe to the ba the basketball",
    "start": "792000",
    "end": "797600"
  },
  {
    "text": "channel for example but I'm not really interested in all those other basketball teams I just want to hear about the Lakers I want to know if Steve Nash",
    "start": "797600",
    "end": "805680"
  },
  {
    "text": "joined the team for example then what I would do is add Alicia I would subscribe",
    "start": "805680",
    "end": "811720"
  },
  {
    "text": "Alicia to this the basketball Channel and then I would add in a selector with",
    "start": "811720",
    "end": "816880"
  },
  {
    "text": "some keyw that specify Lakers or if there's something else that I'm interested in you would specify it here",
    "start": "816880",
    "end": "823160"
  },
  {
    "text": "in the selector so it's basically a keyword filtering mechanism that we allow um within C",
    "start": "823160",
    "end": "830759"
  },
  {
    "text": "Fusion the the opposite side of that is selective publishing so you can do the",
    "start": "830759",
    "end": "836079"
  },
  {
    "text": "complete re reverse of that and only selectively publish to the users or the",
    "start": "836079",
    "end": "842519"
  },
  {
    "text": "clients that are subscribed to a certain Channel based on what you want to do at the server level so a good example would",
    "start": "842519",
    "end": "848839"
  },
  {
    "text": "that of that would be uh let's say that you have a lot of users that are Baseball fans and they're subscribe to",
    "start": "848839",
    "end": "855360"
  },
  {
    "text": "certain channel uh and you know they're at a game tonight there's a game and you",
    "start": "855360",
    "end": "861399"
  },
  {
    "text": "want to just publish to those users that are at the game to let them know that you are offering a special on $5 beers",
    "start": "861399",
    "end": "868480"
  },
  {
    "text": "or yeah $5 beers because they're usually about 10 10 bucks at the game right so",
    "start": "868480",
    "end": "874079"
  },
  {
    "text": "you've got a coupon $5 beers and you want to get them based on their geolocation you can Define that and",
    "start": "874079",
    "end": "881399"
  },
  {
    "text": "publish a message to all your users on mobile devices only that are at the game",
    "start": "881399",
    "end": "887320"
  },
  {
    "text": "that would be really cool to do right so there's also Channel specific",
    "start": "887320",
    "end": "893399"
  },
  {
    "text": "message handlers if you uh for example have certain channels that you want more",
    "start": "893399",
    "end": "899040"
  },
  {
    "text": "granular control over you don't want a message Handler that will um will handle",
    "start": "899040",
    "end": "905279"
  },
  {
    "text": "all of the messages for all of the channels you want to just have specific control over certain channels and",
    "start": "905279",
    "end": "911680"
  },
  {
    "text": "manipulate data based on that particular Channel then you can set up a message Handler within that's specific to that",
    "start": "911680",
    "end": "918320"
  },
  {
    "text": "particular channel so let's say here we have at the Subscribe level this is what you would include at the subscrib level",
    "start": "918320",
    "end": "925399"
  },
  {
    "text": "U you put the name and then you would Define that message Handler there and then you can put in any kind of",
    "start": "925399",
    "end": "930600"
  },
  {
    "text": "manipulation that you want within that message Handler that's specific to that",
    "start": "930600",
    "end": "936319"
  },
  {
    "text": "channel so basically what we have here is the CF listener is uh you can think",
    "start": "941079",
    "end": "947120"
  },
  {
    "text": "of it as also an an additional class that allow you to uh have some",
    "start": "947120",
    "end": "952319"
  },
  {
    "text": "manipulation this would be at the the publish flow or the uh message flow so",
    "start": "952319",
    "end": "958720"
  },
  {
    "text": "during the message when the message is sent you can have further manipulation at at this level that allows you to kind",
    "start": "958720",
    "end": "965759"
  },
  {
    "text": "of granular control different things within the message so let's say for",
    "start": "965759",
    "end": "970880"
  },
  {
    "text": "example I want to uh set up a rule to allow only certain people that are 18",
    "start": "970880",
    "end": "977040"
  },
  {
    "text": "and older to subscribe to a channel this uh CFC will allow you to automatically",
    "start": "977040",
    "end": "983600"
  },
  {
    "text": "set the parameters for your requirements first and let me get into the call back",
    "start": "983600",
    "end": "988639"
  },
  {
    "text": "we allow for those basically uh this next slide will will show you the the structure of it so the client is at the",
    "start": "988639",
    "end": "995959"
  },
  {
    "text": "bottom the ction uh websocket server is in the middle then at the end at the back end we have callback functions that",
    "start": "995959",
    "end": "1002399"
  },
  {
    "text": "are automatically called for every request and then you can specify in",
    "start": "1002399",
    "end": "1008240"
  },
  {
    "text": "these authenticate subscribe and and publish layers which requirements you",
    "start": "1008240",
    "end": "1013600"
  },
  {
    "text": "have for your particular messaging application",
    "start": "1013600",
    "end": "1019440"
  },
  {
    "text": "in order to do this you would set up the channel listener. CFC file this is uh",
    "start": "1019440",
    "end": "1026438"
  },
  {
    "text": "basically the the way that you would set this up within your C Fusion component",
    "start": "1026439",
    "end": "1031480"
  },
  {
    "text": "and what we've used here is a scripting language cfusion also has a tag based",
    "start": "1031480",
    "end": "1036600"
  },
  {
    "text": "language but we also offer the scripting language as well so for example we have",
    "start": "1036600",
    "end": "1043918"
  },
  {
    "text": "four of the uh callback uh methods here you can allow subscribe this will",
    "start": "1043919",
    "end": "1050240"
  },
  {
    "text": "obviously allow whoever you want to subscribe and you can have requirements in there allow publish will grant",
    "start": "1050240",
    "end": "1056840"
  },
  {
    "text": "permissions for somebody to publish before publish just does some business",
    "start": "1056840",
    "end": "1062160"
  },
  {
    "text": "logic before the message is publish and then at the end we have a can send message which is should I send a user a",
    "start": "1062160",
    "end": "1070760"
  },
  {
    "text": "certain message are they interested in this message and this particular the can",
    "start": "1070760",
    "end": "1076320"
  },
  {
    "text": "send message method is only called if uh as we were talking about earlier the selectors that we defined if we do not",
    "start": "1076320",
    "end": "1083840"
  },
  {
    "text": "have a selector defined for a particular user then this method will be called but otherwise it will not be called if you",
    "start": "1083840",
    "end": "1090600"
  },
  {
    "text": "do have selectors already established for your users then it will will not go through this in this",
    "start": "1090600",
    "end": "1097080"
  },
  {
    "text": "method the way that you define the channel listener is when you set up the",
    "start": "1097080",
    "end": "1102200"
  },
  {
    "text": "when you register the channel in the application.cfc that we discussed earlier so if you you look at the same",
    "start": "1102200",
    "end": "1109000"
  },
  {
    "text": "example that we had earlier we set up WS channels we gave it a name of stock and",
    "start": "1109000",
    "end": "1114520"
  },
  {
    "text": "then we add in our own uh stock Channel listener there it's a very simple routine and",
    "start": "1114520",
    "end": "1120720"
  },
  {
    "text": "then at that point the JavaScript is already built in to allow um all of the",
    "start": "1120720",
    "end": "1127440"
  },
  {
    "text": "the call back methods to be available within the application so these are the Callback methods that we make available",
    "start": "1127440",
    "end": "1134720"
  },
  {
    "text": "within coal Fusion allow subscribe obviously allows the user to subscribe",
    "start": "1134720",
    "end": "1139799"
  },
  {
    "text": "to a certain Channel allow publish do we have rights is the role uh available for",
    "start": "1139799",
    "end": "1146280"
  },
  {
    "text": "the user to publish before publish is just some you can Implement data logic",
    "start": "1146280",
    "end": "1151679"
  },
  {
    "text": "before a certain message would be published hand send message like I said is only called when the user does not",
    "start": "1151679",
    "end": "1158080"
  },
  {
    "text": "have a selector data uh defined and then before send message is",
    "start": "1158080",
    "end": "1163799"
  },
  {
    "text": "another looks a little bit the same you guys are probably wondering what's the difference between between before",
    "start": "1163799",
    "end": "1168880"
  },
  {
    "text": "publish and before send message because it looks the same um but the before send message is actually called a uh after",
    "start": "1168880",
    "end": "1176919"
  },
  {
    "text": "the before publish but before the message is actually actually sent to the client so if I have one message that",
    "start": "1176919",
    "end": "1183480"
  },
  {
    "text": "goes out and is published the before published will be called once and if I have a hundred clients the before send",
    "start": "1183480",
    "end": "1190600"
  },
  {
    "text": "message will be called a 100 times so you have that granular control over what you're sending to each individual client",
    "start": "1190600",
    "end": "1198000"
  },
  {
    "text": "and then and then there's ons subscribe as well this is a basic subscribe",
    "start": "1198000",
    "end": "1204679"
  },
  {
    "text": "flow so when a user subscribes you have Channel listener defined it will first",
    "start": "1204679",
    "end": "1210919"
  },
  {
    "text": "go through allow subscribe method and then if you are allowed it'll send the acknowledgement and subscribe",
    "start": "1210919",
    "end": "1218640"
  },
  {
    "text": "you and in the publishing process we have the allow publish goes through first then before publish and then can",
    "start": "1218640",
    "end": "1226559"
  },
  {
    "text": "send messages then before message send at the very very",
    "start": "1226559",
    "end": "1232760"
  },
  {
    "text": "end so the additional way to send messages obviously is by server publish",
    "start": "1234559",
    "end": "1241880"
  },
  {
    "text": "and that is when you have some type of message that you want to push to your clients this is obviously uh a really a",
    "start": "1241880",
    "end": "1249600"
  },
  {
    "text": "really integral part of the uh websocket protocol because before now you had to",
    "start": "1249600",
    "end": "1255440"
  },
  {
    "text": "use some other method like Comet or um something that was a little bit more uh",
    "start": "1255440",
    "end": "1261440"
  },
  {
    "text": "complex to set up but these are useful for obviously news tickets Twitter feeds",
    "start": "1261440",
    "end": "1267120"
  },
  {
    "text": "event Gateway but what we allow is a uh a WS publish function in C Fusion you",
    "start": "1267120",
    "end": "1274480"
  },
  {
    "text": "give it the name of the channel and the message to be published and that's it and then we also have additional",
    "start": "1274480",
    "end": "1280000"
  },
  {
    "text": "built-in functions like get all channels get all clients and get n wsn message as",
    "start": "1280000",
    "end": "1285840"
  },
  {
    "text": "well so those are the publishing side of it up until now we've talked about like",
    "start": "1285840",
    "end": "1292200"
  },
  {
    "text": "a broadcast type um uh functionality where we're just pushing messages out to",
    "start": "1292200",
    "end": "1298720"
  },
  {
    "text": "clients but there's also pointto point which allows you to have full uh point",
    "start": "1298720",
    "end": "1304760"
  },
  {
    "text": "to pointto point communication between a client and a server so uh this is",
    "start": "1304760",
    "end": "1309919"
  },
  {
    "text": "bidirectional obviously real time between a client server this would be useful for example on um like a single",
    "start": "1309919",
    "end": "1316440"
  },
  {
    "text": "player online game or dashboard or something that required point-to-point communication between one client and one",
    "start": "1316440",
    "end": "1324120"
  },
  {
    "text": "server and basically you would invoke a a cold fusion function again at the",
    "start": "1324120",
    "end": "1329600"
  },
  {
    "text": "server level to do some conditional processing and then publish that message back to your",
    "start": "1329600",
    "end": "1335799"
  },
  {
    "text": "client let's get into some demos",
    "start": "1335799",
    "end": "1340559"
  },
  {
    "start": "1336000",
    "end": "1750000"
  },
  {
    "text": "now uh let's",
    "start": "1346960",
    "end": "1351039"
  },
  {
    "text": "see I'm going to just dock this on the right and then I want to show you two browsers so that I can",
    "start": "1352000",
    "end": "1359240"
  },
  {
    "text": "um show you the communication that takes effect between all the users",
    "start": "1359240",
    "end": "1366039"
  },
  {
    "text": "here so my first example I just want to show you the acknowledgement request",
    "start": "1367799",
    "end": "1373400"
  },
  {
    "text": "that's coming back and forth between the server and the client and then how that data is published between both parties",
    "start": "1373400",
    "end": "1379440"
  },
  {
    "text": "that are involved it's very real time it's almost instantane it's instantaneous it looks",
    "start": "1379440",
    "end": "1385360"
  },
  {
    "text": "likeus on this uh example here so let's say I want to subscribe I'm user a on",
    "start": "1385360",
    "end": "1391640"
  },
  {
    "text": "the left and I want to subscribe to the stock Channel this is the acknowledgement that",
    "start": "1391640",
    "end": "1397159"
  },
  {
    "text": "I would get back from the server that I I just subscribed and if I get subscription subscriber count on this",
    "start": "1397159",
    "end": "1403799"
  },
  {
    "text": "side I'll see that",
    "start": "1403799",
    "end": "1409559"
  },
  {
    "text": "okay on on the right side we're not subscribed yet so let me subscribe and then I'll",
    "start": "1409559",
    "end": "1415960"
  },
  {
    "text": "get subscriber subscriptions okay so this uh this shows that I have two subscribers",
    "start": "1415960",
    "end": "1422679"
  },
  {
    "text": "here if I click get subscribers count I should be able to get the same thing on this side yeah so subscriber count is",
    "start": "1422679",
    "end": "1430000"
  },
  {
    "text": "two on there and then if I get my subscriptions on this side I should be able to say",
    "start": "1430000",
    "end": "1437279"
  },
  {
    "text": "that yes that says I'm subscribed to the stock Channel and let's say I want to publish",
    "start": "1437279",
    "end": "1443760"
  },
  {
    "text": "Adobe stock price went up to",
    "start": "1443760",
    "end": "1448400"
  },
  {
    "text": "39 so then I'll get a message on the left that says my price is 39 so this is",
    "start": "1450080",
    "end": "1455600"
  },
  {
    "text": "the way it would be broadcast out to all your",
    "start": "1455600",
    "end": "1459880"
  },
  {
    "text": "customers so the second is a chart demo I have",
    "start": "1466799",
    "end": "1473720"
  },
  {
    "text": "uh let's say for example you have a sales team that's doing a presentation and they're manipulating data while",
    "start": "1473720",
    "end": "1480760"
  },
  {
    "text": "they're presenting and if we want to change let's say the revenue on one of",
    "start": "1480760",
    "end": "1487000"
  },
  {
    "text": "these to let's say we had a really good year in",
    "start": "1487000",
    "end": "1492240"
  },
  {
    "text": "2011 and we change it to 1500 then you can get",
    "start": "1492440",
    "end": "1499760"
  },
  {
    "text": "you see it automatically updated on the other side to the projected Revenue that",
    "start": "1500600",
    "end": "1506960"
  },
  {
    "text": "I put on the on the left side this is the type of real-time data communication that you can get instantaneously and",
    "start": "1506960",
    "end": "1513279"
  },
  {
    "text": "make those changes that you need",
    "start": "1513279",
    "end": "1516760"
  },
  {
    "text": "to and I do want to point out this is a the chart below cusion has charting",
    "start": "1520320",
    "end": "1526320"
  },
  {
    "text": "functionality built into it that allows you to make a chart like this with one single tag it's pretty",
    "start": "1526320",
    "end": "1531880"
  },
  {
    "text": "powerful it's very easy to use uh cold fusion has a lot of libraries such as this one that are pre-built into it that",
    "start": "1531880",
    "end": "1538480"
  },
  {
    "text": "you can take advantage of in your",
    "start": "1538480",
    "end": "1541880"
  },
  {
    "text": "application so my nextops my next demo is this is like a",
    "start": "1548760",
    "end": "1556600"
  },
  {
    "text": "hypothetical dashbo board example so um what we've done is we have a",
    "start": "1556600",
    "end": "1562360"
  },
  {
    "text": "hypothetical database uh you can have you know realtime database as well obviously but we've set up uh just a",
    "start": "1562360",
    "end": "1569640"
  },
  {
    "text": "simple test where if we if we have a cold fusion bug database for example and",
    "start": "1569640",
    "end": "1574840"
  },
  {
    "text": "I want to find out all the cold fusion bugs that have been submitted and uh",
    "start": "1574840",
    "end": "1580240"
  },
  {
    "text": "based on location and what type of uh if they're an enhancement or an install or",
    "start": "1580240",
    "end": "1586720"
  },
  {
    "text": "an actual issue then we can get real-time data pinpointed with the you know with the",
    "start": "1586720",
    "end": "1594159"
  },
  {
    "text": "existing data that we have this will go through the database in the back end we have a a server delay setup so that uh",
    "start": "1594159",
    "end": "1602799"
  },
  {
    "text": "this will be with it actually looks like it's data coming in at real time so that you can establish you know a map of",
    "start": "1602799",
    "end": "1610120"
  },
  {
    "text": "where you are or where all these things are at any given time and then below you",
    "start": "1610120",
    "end": "1615440"
  },
  {
    "text": "can see there's a bar graph uh being generated on the fly with this data",
    "start": "1615440",
    "end": "1621159"
  },
  {
    "text": "that's coming out and if I wanted to do PI format we can just switch off to Pi",
    "start": "1621159",
    "end": "1627279"
  },
  {
    "text": "it should work pi as well this is just an example of what you can do with a d dashboard uh with some",
    "start": "1627279",
    "end": "1634960"
  },
  {
    "text": "real-time data coming in on the back",
    "start": "1634960",
    "end": "1638799"
  },
  {
    "text": "end",
    "start": "1646520",
    "end": "1649520"
  },
  {
    "text": "okay my last demo is dock this window",
    "start": "1652559",
    "end": "1658440"
  },
  {
    "text": "again I use this a lot this is a Windows feature um sorry for you Mac users I",
    "start": "1658480",
    "end": "1664200"
  },
  {
    "text": "don't know if they have that in Mac but I dock windows on the left or the right based on um the just the window key and",
    "start": "1664200",
    "end": "1671799"
  },
  {
    "text": "the and the left or right button and okay so my last demo is the",
    "start": "1671799",
    "end": "1678399"
  },
  {
    "text": "drawing uh basically I wanted to just show what you can do in real time with a canvas type",
    "start": "1678399",
    "end": "1685320"
  },
  {
    "text": "scenario you can use this for online gaming obviously um you know real-time",
    "start": "1685320",
    "end": "1690799"
  },
  {
    "text": "communication between two parties if you want to have some type of a drawing mechanism but let's say I was playing uh",
    "start": "1690799",
    "end": "1698320"
  },
  {
    "text": "you know tic-tac-toe with my son then he would be X",
    "start": "1698320",
    "end": "1705840"
  },
  {
    "text": "always and then I I would be O's and then he always wins because he's",
    "start": "1705840",
    "end": "1715880"
  },
  {
    "text": "little so you can do something like that with with the canvas aspect of it as",
    "start": "1715880",
    "end": "1721080"
  },
  {
    "text": "well and you can see that it's it's real time I mean there's there's no delay at all in this",
    "start": "1721080",
    "end": "1727600"
  },
  {
    "text": "um you know where it's drawing it automatically shows up on the other client",
    "start": "1727600",
    "end": "1734000"
  },
  {
    "text": "browsers let me start this",
    "start": "1736399",
    "end": "1743840"
  },
  {
    "text": "again pardon oh let me show you the the code",
    "start": "1746880",
    "end": "1752279"
  },
  {
    "start": "1750000",
    "end": "1977000"
  },
  {
    "text": "behind some of this let's see you know I if you're interested too",
    "start": "1752279",
    "end": "1758880"
  },
  {
    "text": "I will certainly share all of the code that's that's uh that I have for these demos as well and you can just Implement",
    "start": "1758880",
    "end": "1765960"
  },
  {
    "text": "them immediately in your cold fusion environment or we actually did a presentation yesterday on implementing",
    "start": "1765960",
    "end": "1773080"
  },
  {
    "text": "cold fusion within your Java applications so you don't have to just have a c Fusion environment you can use",
    "start": "1773080",
    "end": "1780399"
  },
  {
    "text": "cfusion as basically like a JSP tag library to be used within your application and call it from within Java",
    "start": "1780399",
    "end": "1787320"
  },
  {
    "text": "like a Java serlet for example using a new tab that we've created called CFC",
    "start": "1787320",
    "end": "1793600"
  },
  {
    "text": "proxy I see one of our friends that went to our our demo yesterday yesterday so he already knows ask this",
    "start": "1793600",
    "end": "1800240"
  },
  {
    "text": "guy over here too he already knows um anyway you know I'll I'll uh",
    "start": "1800240",
    "end": "1806200"
  },
  {
    "text": "definitely uh let go of some of this code and show you the code as well um",
    "start": "1806200",
    "end": "1811320"
  },
  {
    "text": "which one will we talking about",
    "start": "1811320",
    "end": "1816200"
  },
  {
    "text": "so so in the drawing I just want to show you this is how we set up our our",
    "start": "1826240",
    "end": "1832720"
  },
  {
    "text": "channel here uh same way that I talked about this is our application. CFC it's called",
    "start": "1832720",
    "end": "1839760"
  },
  {
    "text": "as an initialization file and",
    "start": "1839760",
    "end": "1847158"
  },
  {
    "text": "then so this is the CF websocket tag that was used for the canvas stor",
    "start": "1851000",
    "end": "1859240"
  },
  {
    "text": "okay and so basically I we uh created a draw J JavaScript function that was uh",
    "start": "1874200",
    "end": "1880760"
  },
  {
    "text": "that allow you to do the manipulation with um binary data that was sent back",
    "start": "1880760",
    "end": "1886480"
  },
  {
    "text": "and forth",
    "start": "1886480",
    "end": "1889158"
  },
  {
    "text": "Okay so",
    "start": "1913120",
    "end": "1919159"
  },
  {
    "text": "I wanted to give you some resources because I know this is a lot of information to kind of collectively take",
    "start": "1919360",
    "end": "1924840"
  },
  {
    "text": "in uh just during a session and you might not remember but the developer guide allows you uh this gives you a lot",
    "start": "1924840",
    "end": "1931559"
  },
  {
    "text": "of information based uh just respect to what the the implementation within cold",
    "start": "1931559",
    "end": "1937039"
  },
  {
    "text": "fusion and how to implement that in your cold fusion applications and then we have the developer Center where our",
    "start": "1937039",
    "end": "1942399"
  },
  {
    "text": "Engineers actually make articles quite often with some more Advanced Techniques on that and websocket dorg has some",
    "start": "1942399",
    "end": "1950159"
  },
  {
    "text": "great information and resources as well if you take a look at that they also have uh a little feature that allows you",
    "start": "1950159",
    "end": "1956279"
  },
  {
    "text": "to check your browser or uh just to make sure that it is uh it does have websocket support so definitely go check",
    "start": "1956279",
    "end": "1964600"
  },
  {
    "text": "it out there and thanks for",
    "start": "1964600",
    "end": "1968240"
  },
  {
    "text": "[Music] coming",
    "start": "1971340",
    "end": "1979039"
  }
]