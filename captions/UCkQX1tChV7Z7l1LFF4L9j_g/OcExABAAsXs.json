[
  {
    "start": "0",
    "end": "146000"
  },
  {
    "text": "so yeah I'm calling having some CTO a company called outlier just there's a",
    "start": "3970",
    "end": "9549"
  },
  {
    "text": "kind of quick show of hands who's using Erlang at the moment or has used Erlang",
    "start": "9549",
    "end": "14580"
  },
  {
    "text": "production okay so yeah most of this talk is about",
    "start": "14580",
    "end": "20940"
  },
  {
    "text": "Erlang why we chose the Erlang there's a kind of subplot I'm going to be talking",
    "start": "20940",
    "end": "27370"
  },
  {
    "text": "about my overly opinionated view of how to build software in a start-up and with",
    "start": "27370",
    "end": "33910"
  },
  {
    "text": "some quotes and a few pitches so yeah I tend to kind of like putting quotes into",
    "start": "33910",
    "end": "40179"
  },
  {
    "text": "speeches there I like the kind of concise wisdom that's passed down from smart people throughout kind of",
    "start": "40179",
    "end": "46890"
  },
  {
    "text": "generations even in tech or outside so this is a good one from Thomas Edison",
    "start": "46890",
    "end": "54359"
  },
  {
    "text": "this one's just funny you'll see the the infamous Donald Trump so who are we",
    "start": "54359",
    "end": "62460"
  },
  {
    "text": "so we're monitoring companies so if you'd heard of data loop before which you might not have done that's us we've",
    "start": "62460",
    "end": "69010"
  },
  {
    "text": "just kind of rebranded now to out lawyer and yes we provide monitoring so the aim",
    "start": "69010",
    "end": "75970"
  },
  {
    "text": "of our application is to provide civil service monitoring kind of primarily",
    "start": "75970",
    "end": "80980"
  },
  {
    "text": "targeted at companies that are running microservices so the approach that we",
    "start": "80980",
    "end": "86170"
  },
  {
    "text": "have is we allow you to kind of devolve responsibility of your monitoring delft the individual team so it seems to work",
    "start": "86170",
    "end": "91540"
  },
  {
    "text": "in on Marc services can own their monitoring as they do by their code and making sure it stays up and running so",
    "start": "91540",
    "end": "98560"
  },
  {
    "text": "if they need to make changes to how do they monitor an application they can do they don't need to get anyone else's",
    "start": "98560",
    "end": "103780"
  },
  {
    "text": "help they don't need any kind of changes being made by the operations team at the",
    "start": "103780",
    "end": "109090"
  },
  {
    "text": "root of it we are a replacement for a geostrophic stats D we kind of allow you",
    "start": "109090",
    "end": "114820"
  },
  {
    "text": "to collect your data to visualize it and alerts on it and yeah at the moment",
    "start": "114820",
    "end": "120610"
  },
  {
    "text": "we're with processing around 12 billion measurements per day and that's kind of linear least growing up leaning at least",
    "start": "120610",
    "end": "127150"
  },
  {
    "text": "growing scrolling up at the moment yeah and so we kind of try to support open",
    "start": "127150",
    "end": "133510"
  },
  {
    "text": "standards so that you can just instill the application get up and run in and great with your current monitoring stack",
    "start": "133510",
    "end": "139900"
  },
  {
    "text": "or tools that you're using we're so I've docker support which you know it's the in thing at the moment say",
    "start": "139900",
    "end": "146650"
  },
  {
    "start": "146000",
    "end": "187000"
  },
  {
    "text": "startup say yeah I thought we'd get some context around kind of what we do and",
    "start": "146650",
    "end": "155110"
  },
  {
    "text": "kind of how our organization work so this kind of leads into why we chose Erlang as well so you'll see this is a",
    "start": "155110",
    "end": "162340"
  },
  {
    "text": "Silicon Valley which is pretty much been my life for the last three years and it's kind of scary how true to life",
    "start": "162340",
    "end": "168730"
  },
  {
    "text": "this actually is and the start of life is as mental as this show makes out and",
    "start": "168730",
    "end": "175270"
  },
  {
    "text": "so works on several kind of large software projects throughout the years and all have their own challenges and",
    "start": "175270",
    "end": "181890"
  },
  {
    "text": "issues but there's nothing quite like building an application for a start-up",
    "start": "181890",
    "end": "188460"
  },
  {
    "start": "187000",
    "end": "236000"
  },
  {
    "text": "yeah when you're working in a start-up there kind of time is critical it's usually important but it's especially",
    "start": "188460",
    "end": "194650"
  },
  {
    "text": "critical in building an application for a start-up you have to release quickly",
    "start": "194650",
    "end": "199810"
  },
  {
    "text": "if you least if you're slow to iterate then you're going to die you to prime",
    "start": "199810",
    "end": "204940"
  },
  {
    "text": "product market fit which means flexibility so you need to kind of work out where your market is adjust your",
    "start": "204940",
    "end": "210370"
  },
  {
    "text": "product it's a kind of stay cutting-edge and actually cover find some people that",
    "start": "210370",
    "end": "215500"
  },
  {
    "text": "will pay for what you're building well so you need to be kind of quick to scale so these things tend to kind of hit you",
    "start": "215500",
    "end": "221740"
  },
  {
    "text": "in the middle of nowhere that you're fine and then all of a sudden you've got issues and you can usually buy yourself",
    "start": "221740",
    "end": "227530"
  },
  {
    "text": "some time but you need to be kind of strategic and always looking at where your next gonna change your application",
    "start": "227530",
    "end": "233050"
  },
  {
    "text": "to to meet the levels of scale there are some caveats to this so you can get away",
    "start": "233050",
    "end": "240670"
  },
  {
    "start": "236000",
    "end": "275000"
  },
  {
    "text": "without being these if you kind of feel fulfilled some of these criteria so if you're well funded which isn't such a",
    "start": "240670",
    "end": "247360"
  },
  {
    "text": "case in the UK it's more of a a Silicon Valley thing so if you were raising ten twenty million dollars or C funding",
    "start": "247360",
    "end": "253090"
  },
  {
    "text": "upfront then you've got like two years to build your your your application before you need to actually start making",
    "start": "253090",
    "end": "259120"
  },
  {
    "text": "revenue if you're making a lifestyle business you don't need to make that much money then you can kind of get on with it and yeah some people are just",
    "start": "259120",
    "end": "265810"
  },
  {
    "text": "lucky there they're kind of the first in the market there they can get by with",
    "start": "265810",
    "end": "270940"
  },
  {
    "text": "you know mistakes and and still survive so it",
    "start": "270940",
    "end": "276190"
  },
  {
    "start": "275000",
    "end": "318000"
  },
  {
    "text": "really comes down for a business first thing so you kind of you can't build your application in stealth you need to",
    "start": "276190",
    "end": "283180"
  },
  {
    "text": "be out you need to release it to users you need to get feedback and and iterating from there and just to find",
    "start": "283180",
    "end": "291460"
  },
  {
    "text": "something that's gonna actually gonna sell and as a kind of contrast to how you usually like to build applications",
    "start": "291460",
    "end": "296890"
  },
  {
    "text": "being engineers quality can take a backseat you don't have a lot of time to over engineer your application or make",
    "start": "296890",
    "end": "304540"
  },
  {
    "text": "sure it's the most glossy shiny coat there is you kind of just have to deliver which also kind of comes up when",
    "start": "304540",
    "end": "310600"
  },
  {
    "text": "you're hiring people when you're asked you know you know what your unit test coverage is like and you don't have any",
    "start": "310600",
    "end": "315940"
  },
  {
    "text": "there's not much of an answer for that so the first version of our product was",
    "start": "315940",
    "end": "321460"
  },
  {
    "start": "318000",
    "end": "334000"
  },
  {
    "text": "the model lift so when I was building these slides over the last couple of",
    "start": "321460",
    "end": "326500"
  },
  {
    "text": "days I kind of searched from one leaf and this image showed up and there obviously it's a Minecraft and I kind of",
    "start": "326500",
    "end": "334870"
  },
  {
    "start": "334000",
    "end": "380000"
  },
  {
    "text": "wondered yet actually what the what it was I could appreciate and played minecraft a little bit that the the size",
    "start": "334870",
    "end": "342280"
  },
  {
    "text": "of the structure must have taken a fair amount of time to to build but yeah I didn't quite get it so scrolling through",
    "start": "342280",
    "end": "348190"
  },
  {
    "text": "the page it was actually a question on a forum you know someone built this thing without actually have any idea what it",
    "start": "348190",
    "end": "354460"
  },
  {
    "text": "was actually gonna be and so there they were asking for some kind of advice and",
    "start": "354460",
    "end": "362500"
  },
  {
    "text": "what they could actually do with this thing they'd built and the the kind of",
    "start": "362500",
    "end": "367690"
  },
  {
    "text": "top and the best answer was giant urinal which yeah I can see that either that were a little bit like a",
    "start": "367690",
    "end": "373720"
  },
  {
    "text": "SodaStream but I kind of took heart in this that you know it's good to see the student loan isn't going to a waste",
    "start": "373720",
    "end": "380890"
  },
  {
    "start": "380000",
    "end": "417000"
  },
  {
    "text": "so yeah the actual model if we built so the the first version of the application was a nodejs application saffron a",
    "start": "380890",
    "end": "388840"
  },
  {
    "text": "MongoDB and we had a Python agent which he stole on a host for collecting metrics and actually monitor and what",
    "start": "388840",
    "end": "396220"
  },
  {
    "text": "the service were doing so this is the kind of at the time the the hipster stack we had no js' and we had in",
    "start": "396220",
    "end": "403180"
  },
  {
    "text": "there we didn't have any anything else really that was just two boxes one box had no",
    "start": "403180",
    "end": "409919"
  },
  {
    "text": "js' and manga on it and the other box had just no GS on it so we had a little bit of a chain but not really so there",
    "start": "409919",
    "end": "419460"
  },
  {
    "text": "was kind of a few problems with this I don't regret us building it this way we kind of needed to get something",
    "start": "419460",
    "end": "425729"
  },
  {
    "text": "delivered but yeah this wasn't gonna scale and it wasn't gonna grow with the company so as we add more engineers and",
    "start": "425729",
    "end": "433400"
  },
  {
    "text": "generally more kind of technical people into the organization having everything on that's just a giant monolith it",
    "start": "433400",
    "end": "439770"
  },
  {
    "text": "doesn't really work it doesn't kind of fit in so well so we always had the idea",
    "start": "439770",
    "end": "444780"
  },
  {
    "text": "of using micro services kinda made sense it gets a little bit kind of dogmatic",
    "start": "444780",
    "end": "451770"
  },
  {
    "text": "around defining what a micro service actually is but the whole concept of sorting things out into separate",
    "start": "451770",
    "end": "457199"
  },
  {
    "text": "services so yeah at this point we had a great POC we kind of wanted to get to the the micro services thing but yeah we",
    "start": "457199",
    "end": "466229"
  },
  {
    "text": "needed a process or a way of getting there we don't we had to keep delivering features we didn't have time to stop",
    "start": "466229",
    "end": "472159"
  },
  {
    "text": "rewrite all this thing as microcircuit it was kind of like steering a big ship to slowly move into the right direction",
    "start": "472159",
    "end": "481190"
  },
  {
    "start": "481000",
    "end": "645000"
  },
  {
    "text": "so yeah the the kind of benefit analysis",
    "start": "481190",
    "end": "486750"
  },
  {
    "text": "around micro services obviously you guys are probably fairly familiar with this stuff like isolation is a critical parts",
    "start": "486750",
    "end": "494400"
  },
  {
    "text": "of this I need to be able to change my services you know if there are bugs in",
    "start": "494400",
    "end": "500099"
  },
  {
    "text": "there and break one of the services I don't really want to impact any the other ones we to reduce that impact we",
    "start": "500099",
    "end": "506940"
  },
  {
    "text": "have a lot of client agents which are connecting back into our service so I",
    "start": "506940",
    "end": "512909"
  },
  {
    "text": "wouldn't want to bug in the billing to suddenly cause all of those agents that disconnect and cause people to get",
    "start": "512909",
    "end": "518729"
  },
  {
    "text": "alerts and false alarms and things like that they also need to be independently deployable so again it's a case of",
    "start": "518729",
    "end": "525209"
  },
  {
    "text": "reducing risk I want to be able make a change to one service and know that it's really not likely to have any impact on",
    "start": "525209",
    "end": "531390"
  },
  {
    "text": "another service unless they're directly cut dependent on each other or one hour and",
    "start": "531390",
    "end": "538590"
  },
  {
    "text": "then but with then we can kind of see that and we can kind of plan around that flexibility is another key one so if I",
    "start": "538590",
    "end": "545730"
  },
  {
    "text": "want it to right one of my services and nodejs or go or rust or something then I",
    "start": "545730",
    "end": "551520"
  },
  {
    "text": "can do that if I need to have a separate database for one of my services that I can do that",
    "start": "551520",
    "end": "557340"
  },
  {
    "text": "we have several database in application at the moment or for different use cases",
    "start": "557340",
    "end": "562640"
  },
  {
    "text": "and then this also comes back to the team alignment and ownership of the",
    "start": "562640",
    "end": "568380"
  },
  {
    "text": "product so it's kind of important for the engineers to feel like they own their part of the application even if",
    "start": "568380",
    "end": "573870"
  },
  {
    "text": "they're not working on a large majority of it as we onboard more people the products",
    "start": "573870",
    "end": "579930"
  },
  {
    "text": "getting bigger and bigger and if this takes a while for people to pick those things up so it's useful for you to put",
    "start": "579930",
    "end": "585510"
  },
  {
    "text": "them in a team they can work on that product that service eventually kind of take ownership of that or start building",
    "start": "585510",
    "end": "591990"
  },
  {
    "text": "a separate service and ownership of that and yes so there's that breakdown as",
    "start": "591990",
    "end": "597510"
  },
  {
    "text": "well one of the issues with mic reserves is there's kind of some impediments to",
    "start": "597510",
    "end": "602580"
  },
  {
    "text": "get in there you need things like infrastructure managing deployments for",
    "start": "602580",
    "end": "608340"
  },
  {
    "text": "the individual services you're not just a blow in one thing you'd want a bunch of things you need kind of automation tooling and things around there",
    "start": "608340",
    "end": "615540"
  },
  {
    "text": "yeah packaging the deployment I need to get this one thing distilled down as a package or container or whatever it is",
    "start": "615540",
    "end": "622140"
  },
  {
    "text": "you're using to deploy and get that pushed out some kind of communication mechanism so whether you're using a",
    "start": "622140",
    "end": "627800"
  },
  {
    "text": "centralized bus for communication or they're communicating over arrest endpoints and also service discovery",
    "start": "627800",
    "end": "635340"
  },
  {
    "text": "your foreign off a new service you need to tell the other ones about it you can put that in config but that's not very flexible and so yeah these are kind of",
    "start": "635340",
    "end": "642540"
  },
  {
    "text": "some of the opponents we had to work around and this kind of comes back to the actual process so the way we did it",
    "start": "642540",
    "end": "651060"
  },
  {
    "start": "645000",
    "end": "698000"
  },
  {
    "text": "is we kind of started out with the the monolith we didn't split anything out at first we just kind of gradually",
    "start": "651060",
    "end": "658230"
  },
  {
    "text": "reorganized the code so that it could be split out and we started separating state away from the stateless parts of",
    "start": "658230",
    "end": "666900"
  },
  {
    "text": "the application so that mostly in volved moving out and bus services",
    "start": "666900",
    "end": "673050"
  },
  {
    "text": "and things like that splitting out those separate services into separately",
    "start": "673050",
    "end": "678930"
  },
  {
    "text": "deployable application services as well so they could actually we could build",
    "start": "678930",
    "end": "686430"
  },
  {
    "text": "these and deploy them separately although at first they were just deployed onto the same box it was an",
    "start": "686430",
    "end": "692370"
  },
  {
    "text": "iterative process process to get into running micro services yep so if the the",
    "start": "692370",
    "end": "700139"
  },
  {
    "start": "698000",
    "end": "751000"
  },
  {
    "text": "first stage of this was to take what we currently had and basically pull all the infrastructure stuff off there so the",
    "start": "700139",
    "end": "705959"
  },
  {
    "text": "first one was to remove off of that we moved that off onto its own node still wasn't a cluster at that point",
    "start": "705959",
    "end": "711060"
  },
  {
    "text": "just an individual node and moved up all the other infrastructure pieces so we have RabbitMQ as an event bus and",
    "start": "711060",
    "end": "720079"
  },
  {
    "text": "some other things on there as well now one things we started doing at this point as well with we were previously",
    "start": "720079",
    "end": "727709"
  },
  {
    "text": "using our product to monitor our products as well but we were concentrating on monitoring resource",
    "start": "727709",
    "end": "733560"
  },
  {
    "text": "contention so we had a lot of things running on one box or a lot things we",
    "start": "733560",
    "end": "738720"
  },
  {
    "text": "have running on the same machine they could start starving each other especially when they're on the load and they're under different types of load we",
    "start": "738720",
    "end": "745050"
  },
  {
    "text": "wanted to make sure that one thing under heavy load wasn't or we could see how it was affecting our other services so yeah",
    "start": "745050",
    "end": "752910"
  },
  {
    "start": "751000",
    "end": "781000"
  },
  {
    "text": "one of our dirty secrets is as I said we use it's not a popular opinion to say that",
    "start": "752910",
    "end": "758100"
  },
  {
    "text": "you like but yeah it's it's done us well it's yeah it just keeps chugging",
    "start": "758100",
    "end": "764819"
  },
  {
    "text": "and yeah we've had it for a while now we originally adopted it because of the",
    "start": "764819",
    "end": "770970"
  },
  {
    "text": "flexibility it's really easy to query you just dump it on a box and go I mean it doesn't require that much",
    "start": "770970",
    "end": "776430"
  },
  {
    "text": "configuration it's really kind of unpretentious it just gets on with it this kind of comes to one issue we had a",
    "start": "776430",
    "end": "784380"
  },
  {
    "start": "781000",
    "end": "821000"
  },
  {
    "text": "couple of months ago around there was a bug deployed in our query mechanism that caused the load average on one of our",
    "start": "784380",
    "end": "791339"
  },
  {
    "text": " boxes to go up to 142 I've never had a load on any books anywhere near",
    "start": "791339",
    "end": "797009"
  },
  {
    "text": "that in three digits before that I thought was fairly spectacular one of the equal",
    "start": "797009",
    "end": "802850"
  },
  {
    "text": "presses things as there are primary  box has been often 933 days which",
    "start": "802850",
    "end": "808130"
  },
  {
    "text": "year goes to kind of show the resilience that I can have a box running for several hours a load average 104 yield",
    "start": "808130",
    "end": "814130"
  },
  {
    "text": "and nothing kind of come yeah nothing crashed it was very responsive but in",
    "start": "814130",
    "end": "820040"
  },
  {
    "text": "crash so yeah now we've got this get state kind of state is the real issue",
    "start": "820040",
    "end": "827029"
  },
  {
    "start": "821000",
    "end": "955000"
  },
  {
    "text": "around managing scalability without the state it's fairly simple to kind of",
    "start": "827029",
    "end": "833209"
  },
  {
    "text": "scale these things out the transient services you're just kind of horizontally scale them to a certain",
    "start": "833209",
    "end": "838459"
  },
  {
    "text": "degree I said yeah the the the main way what the first thing to look at is also",
    "start": "838459",
    "end": "844399"
  },
  {
    "text": "your removing these state or segregating state as much as possible into stateful",
    "start": "844399",
    "end": "849500"
  },
  {
    "text": "services and then keep the stateless ones completely separate so that you're kind of deformed you're you're splitting",
    "start": "849500",
    "end": "855050"
  },
  {
    "text": "out the the ways you're going to scale these things l when you're working in",
    "start": "855050",
    "end": "861380"
  },
  {
    "text": "the state of services it's yeah I think it's quite important to have high availability clusters for them so that",
    "start": "861380",
    "end": "866959"
  },
  {
    "text": "you can lose a node and quickly recover from that and bring another one back in place",
    "start": "866959",
    "end": "872089"
  },
  {
    "text": "it doesn't necessarily mean it needs to be kind of available in the CapSense as",
    "start": "872089",
    "end": "877370"
  },
  {
    "text": "long as you kind of recover within seconds that's usually good enough sharding it's kind of gets a little bit",
    "start": "877370",
    "end": "885430"
  },
  {
    "text": "contentious at points but we kind of believers in shutting your data set as",
    "start": "885430",
    "end": "894019"
  },
  {
    "text": "it grows so the certain benefits you get to this around performance you need to",
    "start": "894019",
    "end": "900560"
  },
  {
    "text": "make sure you're optimizing first kind of sharding is a bit of a pain so you",
    "start": "900560",
    "end": "905689"
  },
  {
    "text": "kind of get need to make sure you kind of optimize the performance as much as possible before you start doing this but",
    "start": "905689",
    "end": "911779"
  },
  {
    "text": "when you do start shotting there are other benefits to it as well so we can geolocate data so we have customers",
    "start": "911779",
    "end": "917389"
  },
  {
    "text": "around the world Australia Far East US Europe and having all their data located",
    "start": "917389",
    "end": "925250"
  },
  {
    "text": "in one location kind of works to begin with but as we grow it it doesn't work too well when you've got huger Network",
    "start": "925250",
    "end": "931339"
  },
  {
    "text": "latencies and general issues going on it yeah it's hard to kind of manage when",
    "start": "931339",
    "end": "937030"
  },
  {
    "text": "you've got one central point and everyone connected in from around the globe so having these things sharded that way helps it also kind of",
    "start": "937030",
    "end": "944530"
  },
  {
    "text": "helps for a certain data protection issues some kind of customers don't like their data being outside of the European",
    "start": "944530",
    "end": "951250"
  },
  {
    "text": "Union and so that kind of helps for that so the v2 was a micro services yeah so",
    "start": "951250",
    "end": "959650"
  },
  {
    "start": "955000",
    "end": "1010000"
  },
  {
    "text": "which started splitting these things out it was a gradual process so we kind of went from the one mana lifter then",
    "start": "959650",
    "end": "966280"
  },
  {
    "text": "splitting out separate services we had so we had an exchange that will be kind of collecting agent connected back to we",
    "start": "966280",
    "end": "973570"
  },
  {
    "text": "had a bunch of open source kind of collectors support an open source kind of protocols and we general background",
    "start": "973570",
    "end": "981190"
  },
  {
    "text": "workers were our first wings we split out they were the ones that are on intensive load all of the time so and",
    "start": "981190",
    "end": "988840"
  },
  {
    "text": "then then after that we started working on our data models and entities to kind of split those out as well as I and we",
    "start": "988840",
    "end": "996250"
  },
  {
    "text": "base this all around a central bus which is race based on rabbit and queue at the moment as we kind of scale that might",
    "start": "996250",
    "end": "1003870"
  },
  {
    "text": "move off onto Kafka but yeah that's working for early well in terms of routing messages around the system one",
    "start": "1003870",
    "end": "1011130"
  },
  {
    "text": "of the CEO as I was saying we were originally just running on they're kind of the first thing we split off of",
    "start": "1011130",
    "end": "1017520"
  },
  {
    "text": "that was our time series data store so I'm always great for flexibility and kind of domain application data but not",
    "start": "1017520",
    "end": "1026520"
  },
  {
    "text": "really for time series data it's just data it's not changing and coming in really quickly so the first thing we did",
    "start": "1026520",
    "end": "1032520"
  },
  {
    "text": "is we rip this off and put it into react so you guys are probably familiar how to",
    "start": "1032520",
    "end": "1038640"
  },
  {
    "text": "react works but yeah it's a key value store based on the dynamic paper it's kind of a hash distribution around the",
    "start": "1038640",
    "end": "1044760"
  },
  {
    "text": "ring I won't go into too much detail cuz I tend to put people to sleep wondering whether it's ops friendly which is a",
    "start": "1044760",
    "end": "1050160"
  },
  {
    "text": "massive plus we can lose a node or certain proportion of nodes and not have",
    "start": "1050160",
    "end": "1055290"
  },
  {
    "text": "any customers affected and then when we do have these issues or we need to scale up the cluster the the command line",
    "start": "1055290",
    "end": "1060960"
  },
  {
    "text": "tools available for scaling the the nodes up and down and the way that it manages transition is shards around the",
    "start": "1060960",
    "end": "1066240"
  },
  {
    "text": "cluster you it's super simple not so we haven't run",
    "start": "1066240",
    "end": "1071530"
  },
  {
    "text": "into issues around working with a data inside of react but yeah and yeah it's",
    "start": "1071530",
    "end": "1079150"
  },
  {
    "text": "based on Erlang so they're kind of gets back onto topic a little bit yes so this",
    "start": "1079150",
    "end": "1084160"
  },
  {
    "start": "1082000",
    "end": "1099000"
  },
  {
    "text": "is kind of our first production ready version I guess many work well at first",
    "start": "1084160",
    "end": "1089560"
  },
  {
    "text": "and then around two years ago we on board in two large customers maybe have",
    "start": "1089560",
    "end": "1095620"
  },
  {
    "text": "a little bit longer to large customers within a month and yeah fire happened",
    "start": "1095620",
    "end": "1101070"
  },
  {
    "start": "1099000",
    "end": "1121000"
  },
  {
    "text": "which is not good so yeah customers are dependent on our",
    "start": "1101070",
    "end": "1106510"
  },
  {
    "text": "system for monitoring their systems and when things aren't working it's it's not",
    "start": "1106510",
    "end": "1111700"
  },
  {
    "text": "great even though we've got these things out in two separate services if you're failing to process the data as it comes",
    "start": "1111700",
    "end": "1118210"
  },
  {
    "text": "in you end up with empty dashboards and it doesn't look good so we did is like everyone else we put reddit in so the",
    "start": "1118210",
    "end": "1126310"
  },
  {
    "start": "1121000",
    "end": "1197000"
  },
  {
    "text": "issue that we're facing is that we were yeah using nodejs and ya know just this kind of quick in certain regards but it",
    "start": "1126310",
    "end": "1133210"
  },
  {
    "text": "just wasn't keeping up with the the workload that we were sending into process that time series data really so",
    "start": "1133210",
    "end": "1139600"
  },
  {
    "text": "we kind of worked around this by injecting ready seein as a buffer so we",
    "start": "1139600",
    "end": "1145060"
  },
  {
    "text": "reduce an amount of work that nodejs a to do and so the the main issue we were",
    "start": "1145060",
    "end": "1150370"
  },
  {
    "text": "having is that we see a lot of repeated data coming through so that the same time series but lots of points and we",
    "start": "1150370",
    "end": "1157000"
  },
  {
    "text": "need to kind of cache certain information about that so we're not constantly look in the things up and then those the node has a kind of harder",
    "start": "1157000",
    "end": "1164260"
  },
  {
    "text": "limit the amount of kind of memory that it can use and so we were constantly blowing these issues and there were some",
    "start": "1164260",
    "end": "1171580"
  },
  {
    "text": "other issues around streaming that nodejs us the kind of stream API that",
    "start": "1171580",
    "end": "1177820"
  },
  {
    "text": "allows you to kind of pipe functions together and it handles the back version of things but then when you break that",
    "start": "1177820",
    "end": "1183390"
  },
  {
    "text": "yeah it's bad so yeah so we started",
    "start": "1183390",
    "end": "1188830"
  },
  {
    "text": "editing it worked ready again in awesome this just works and yeah he's pretty powerful but yeah",
    "start": "1188830",
    "end": "1197140"
  },
  {
    "start": "1197000",
    "end": "1212000"
  },
  {
    "text": "we needed a week we knew we needed some actual solutions so this is the the start of",
    "start": "1197140",
    "end": "1203490"
  },
  {
    "text": "the Erlang story I don't know if you guys have seen this the the Erlang the movie I highly recommend it mostly for",
    "start": "1203490",
    "end": "1211170"
  },
  {
    "text": "comedic value first another quick this is from Robert Verdi",
    "start": "1211170",
    "end": "1216690"
  },
  {
    "start": "1212000",
    "end": "1232000"
  },
  {
    "text": "one of the one of the creators of Erlang any sufficiently complicated current",
    "start": "1216690",
    "end": "1222180"
  },
  {
    "text": "program in any other language contains an ad hoc informal is informally",
    "start": "1222180",
    "end": "1227550"
  },
  {
    "text": "specified bog written Sloan penetration of Erlang which it might be a bit harsh but generally tends to be true so before",
    "start": "1227550",
    "end": "1234930"
  },
  {
    "start": "1232000",
    "end": "1322000"
  },
  {
    "text": "we started this we kind of looked at you know what we wanted to get out of the",
    "start": "1234930",
    "end": "1240120"
  },
  {
    "text": "new technology we're going to pick for building our call back in systems it needed to scale we needed to support",
    "start": "1240120",
    "end": "1246990"
  },
  {
    "text": "being distributed for scaling purposes and for H a so that needs to be a kind",
    "start": "1246990",
    "end": "1253800"
  },
  {
    "text": "of fundamental part of it reliable as well when we're dealing with the the volume of data that's coming through",
    "start": "1253800",
    "end": "1260540"
  },
  {
    "text": "although the processes could probably crash early often and not cause any loss",
    "start": "1260540",
    "end": "1266070"
  },
  {
    "text": "of data and things because of the way they slowly kind of ramp up to full speed them crashing fairly often has a",
    "start": "1266070",
    "end": "1273300"
  },
  {
    "text": "huge impact on general performance yeah",
    "start": "1273300",
    "end": "1279420"
  },
  {
    "text": "another one is they need to be generally quick so being able to be natively quick",
    "start": "1279420",
    "end": "1285510"
  },
  {
    "text": "or kind of offload into C is hugely important production visibility when",
    "start": "1285510",
    "end": "1294420"
  },
  {
    "text": "you're dealing at this kind of scale they being able to see what's going on in the production systems whilst they're",
    "start": "1294420",
    "end": "1300630"
  },
  {
    "text": "running without massively negatively affecting the the performance is a kind",
    "start": "1300630",
    "end": "1308160"
  },
  {
    "text": "of really useful to have I know this has probably kind of upset some of the type",
    "start": "1308160",
    "end": "1313770"
  },
  {
    "text": "system nuts but this kind of you kind of need this you can't really get around it it's not a case of we've kind of misused",
    "start": "1313770",
    "end": "1319800"
  },
  {
    "text": "our types or anything like that so the first thing we looked at was Java so a",
    "start": "1319800",
    "end": "1325980"
  },
  {
    "start": "1322000",
    "end": "1356000"
  },
  {
    "text": "few people in the team would work with Java before for a couple of years nobody was that keen on",
    "start": "1325980",
    "end": "1332920"
  },
  {
    "text": "getting back on that that was kind of gets to off the fourth point in the on",
    "start": "1332920",
    "end": "1338840"
  },
  {
    "text": "there there was no real kind of driver motivation behind doing that nobody was particularly keen on the language its",
    "start": "1338840",
    "end": "1344630"
  },
  {
    "text": "were base kind of in expressive and then you got the general garbage collection",
    "start": "1344630",
    "end": "1350780"
  },
  {
    "text": "madness of suddenly it's just going to go I was collect and you can't do this in yeah this gets fun to a chick's just",
    "start": "1350780",
    "end": "1359390"
  },
  {
    "text": "kind of a opinion on object to a programming again probably a little bit harsh but yeah probably a bit harsh",
    "start": "1359390",
    "end": "1366590"
  },
  {
    "text": "towards people from California scholar we kind of like the look of Scala but again still runs on the JVM",
    "start": "1366590",
    "end": "1373510"
  },
  {
    "text": "and a lot of the kind of negative parts here are just things that are missing or",
    "start": "1373510",
    "end": "1378740"
  },
  {
    "text": "not as well well well defined as you get",
    "start": "1378740",
    "end": "1384800"
  },
  {
    "text": "in Erlang and OTP but yeah generally looks fairly good but",
    "start": "1384800",
    "end": "1390140"
  },
  {
    "text": "yeah not it wasn't for us we also looked at go so go is obviously the new hipster",
    "start": "1390140",
    "end": "1396230"
  },
  {
    "start": "1392000",
    "end": "1430000"
  },
  {
    "text": "thing this is growing pretty rapidly everything now seems to be being built",
    "start": "1396230",
    "end": "1401840"
  },
  {
    "text": "and go doc oh yeah well the hash cult tools and all that stuff but yeah it's",
    "start": "1401840",
    "end": "1408170"
  },
  {
    "text": "it's yeah it's still fairly immature the performance is really quick but yeah this this you don't get much the kind of",
    "start": "1408170",
    "end": "1415610"
  },
  {
    "text": "tooling around it doesn't seem to be great or it wasn't at the time compared to what we get with Erlang so although",
    "start": "1415610",
    "end": "1422450"
  },
  {
    "text": "it'd be useful for building kind of little ad-hoc tools and things like that and it wasn't something we wanted to build a whole reliable back-end system",
    "start": "1422450",
    "end": "1429470"
  },
  {
    "text": "on the final one was see there was a lot of kind of people that wanted to do this",
    "start": "1429470",
    "end": "1434750"
  },
  {
    "start": "1430000",
    "end": "1476000"
  },
  {
    "text": "just because it sounded cool but you having built stuff in C before is yeah",
    "start": "1434750",
    "end": "1441500"
  },
  {
    "text": "not not not the most fun yeah so we kind of we considered it for a little while",
    "start": "1441500",
    "end": "1448190"
  },
  {
    "text": "but quickly kind of dismissed it yeah really useful for performance critical",
    "start": "1448190",
    "end": "1453410"
  },
  {
    "text": "things we use it for certain things in our application but we kind of only further performance critical parts of",
    "start": "1453410",
    "end": "1460460"
  },
  {
    "text": "number-crunching are things we do a lot of kind of master process time series data",
    "start": "1460460",
    "end": "1465770"
  },
  {
    "text": "we're also looking at rust for these kind of things that we would previously do and see seems to kind of have the",
    "start": "1465770",
    "end": "1471630"
  },
  {
    "text": "performance but the languages I'm a lot more friendly to work with so Erlang so",
    "start": "1471630",
    "end": "1478260"
  },
  {
    "start": "1476000",
    "end": "1547000"
  },
  {
    "text": "yeah some of the kind of key brilliant points around Erlang are the state and",
    "start": "1478260",
    "end": "1484230"
  },
  {
    "text": "concurrency model that it uses so you don't have any the the the the idea of shared state in Erlang you have a bunch",
    "start": "1484230",
    "end": "1490710"
  },
  {
    "text": "of processes and the processes processes managed to their own state if you need to update a process or something's gone",
    "start": "1490710",
    "end": "1496770"
  },
  {
    "text": "on you send a message to those other process they update this state so the act on model you've got here really and",
    "start": "1496770",
    "end": "1503720"
  },
  {
    "text": "that kind of fairly closely aligns with general human interaction you know nobody shares a brain you tend to",
    "start": "1503720",
    "end": "1510180"
  },
  {
    "text": "communicate by sending messages to each other whether they're kind of vocal or male or something so this really kind of",
    "start": "1510180",
    "end": "1517770"
  },
  {
    "text": "helps protect their your state and yeah",
    "start": "1517770",
    "end": "1522840"
  },
  {
    "text": "works really well when scaling things out so allows you to kind of because you have these things state defined in an",
    "start": "1522840",
    "end": "1528780"
  },
  {
    "text": "individual process where you need to scale out the processes to multiple calls or multiple machines this this the",
    "start": "1528780",
    "end": "1534990"
  },
  {
    "text": "a lot less work that you need to do to do that and kind of Erlang takes care of some of that for you as well I saw that",
    "start": "1534990",
    "end": "1544710"
  },
  {
    "text": "all on that point supervisors say Erlang",
    "start": "1544710",
    "end": "1550710"
  },
  {
    "start": "1547000",
    "end": "1622000"
  },
  {
    "text": "has the concept of let it crash which at first sounded insane but it's a really",
    "start": "1550710",
    "end": "1558960"
  },
  {
    "text": "kind of powerful model so the way this works is there you have the concept of supervision trees so you basically",
    "start": "1558960",
    "end": "1564690"
  },
  {
    "text": "define what you how you want your processes so that are running to be spawned and how you want them to be",
    "start": "1564690",
    "end": "1570840"
  },
  {
    "text": "supervised so you you can have a process that's kind of you know processing some",
    "start": "1570840",
    "end": "1575880"
  },
  {
    "text": "data as it comes in and if that crashes then you want it to be restarted all the time for your crush's too often you",
    "start": "1575880",
    "end": "1581190"
  },
  {
    "text": "might want to just die and crush the whole application but you can independently configure these things which is really useful especially around",
    "start": "1581190",
    "end": "1588060"
  },
  {
    "text": "kind of protecting layers of your application so you might have a process running that makes all of your course",
    "start": "1588060",
    "end": "1594150"
  },
  {
    "text": "your database back-end and kind of caches some things in memory there you probably don't want that to crash as",
    "start": "1594150",
    "end": "1599660"
  },
  {
    "text": "often or restart as often as other things so you'll kind of tailor your",
    "start": "1599660",
    "end": "1606170"
  },
  {
    "text": "supervision strategy around protecting different layers of the application things that aren't as aggressive to the",
    "start": "1606170",
    "end": "1613790"
  },
  {
    "text": "rest of the application when they start up are probably fine to just crush them and just keep restarting them another",
    "start": "1613790",
    "end": "1623660"
  },
  {
    "start": "1622000",
    "end": "1728000"
  },
  {
    "text": "cool thing is behaviors so this kind of gets back to the maturity and battle",
    "start": "1623660",
    "end": "1630140"
  },
  {
    "text": "hardness of the Erlang an OTP system that over the last 30 odd years that",
    "start": "1630140",
    "end": "1637610"
  },
  {
    "text": "they've been building Erlang now it's they created these behaviors these kind of common patterns for doing certain",
    "start": "1637610",
    "end": "1644720"
  },
  {
    "text": "things so if you have a kind of client-server model in your application they have a buffet behavior defined for",
    "start": "1644720",
    "end": "1650450"
  },
  {
    "text": "that and then wait the way you implement or use that issue kind of you define",
    "start": "1650450",
    "end": "1656690"
  },
  {
    "text": "some callbacks and then say you're using that particular thing so whether you're using a client-server or you're using a",
    "start": "1656690",
    "end": "1662059"
  },
  {
    "text": "finite state machine or something like that then you basically just need to implement these callbacks and then the",
    "start": "1662059",
    "end": "1668620"
  },
  {
    "text": "library code the OTP code takes care of all of the other stuff and it might",
    "start": "1668620",
    "end": "1674030"
  },
  {
    "text": "sound kind of fairly a simple abstraction but it take care of everything so monitoring the other kind",
    "start": "1674030",
    "end": "1680059"
  },
  {
    "text": "of process that you're connecting to so if it fails mid-weight you've got a partial failure midway through it",
    "start": "1680059",
    "end": "1685250"
  },
  {
    "text": "detects that and will handle those issues for you so you it voids a lot of",
    "start": "1685250",
    "end": "1691640"
  },
  {
    "text": "the really hard to find bugs that you're likely to kind of come across where it works you know the first you know",
    "start": "1691640",
    "end": "1698390"
  },
  {
    "text": "thousand times you use it and then you get the odd occurrence where it'll failure and it will fail and it's kind",
    "start": "1698390",
    "end": "1704450"
  },
  {
    "text": "of impossible to track down so this this loads of these well this several of these behaviors that of have been",
    "start": "1704450",
    "end": "1710630"
  },
  {
    "text": "implemented in Erlang and you know they've been tested to death over the",
    "start": "1710630",
    "end": "1715700"
  },
  {
    "text": "years and they tend to be fairly solid so here image you can kind of build these really reliable components of your",
    "start": "1715700",
    "end": "1722030"
  },
  {
    "text": "application with yeah fairly fairly easily",
    "start": "1722030",
    "end": "1728480"
  },
  {
    "start": "1728000",
    "end": "1786000"
  },
  {
    "text": "another thing is visibility so yeah this gets back to the production visibility so you can actually bring off a GUI the",
    "start": "1728480",
    "end": "1735679"
  },
  {
    "text": "the observer and put it at your production application and you can kind",
    "start": "1735679",
    "end": "1741650"
  },
  {
    "text": "of actually see what's going on inside there so here you can see there's a bunch of processes that I've been fired up and you can see the dependencies",
    "start": "1741650",
    "end": "1748070"
  },
  {
    "text": "between the processes you can also see the state some of the state of these processes as well and you can send them",
    "start": "1748070",
    "end": "1755840"
  },
  {
    "text": "messages so if you want to kind of kick things or you know test things out you can do that via via this tool or the GUI",
    "start": "1755840",
    "end": "1763780"
  },
  {
    "text": "or the shell you can connect into as well and yes this is massively powerful",
    "start": "1763780",
    "end": "1769700"
  },
  {
    "text": "being able to do investigation and tracing on live applications is without",
    "start": "1769700",
    "end": "1776630"
  },
  {
    "text": "really affecting the performance of those applications is really really useful yeah and yet they're kind of the",
    "start": "1776630",
    "end": "1789080"
  },
  {
    "start": "1786000",
    "end": "1871000"
  },
  {
    "text": "last kind of major thing is the concept of applications so they're the way that",
    "start": "1789080",
    "end": "1795770"
  },
  {
    "text": "the Erlang kind of virtual machine and the beam works it kind of feels more like an operating system that a than a",
    "start": "1795770",
    "end": "1802580"
  },
  {
    "text": "virtual machine you kind of start these these application things up which are an",
    "start": "1802580",
    "end": "1810140"
  },
  {
    "text": "independently kind of stop stoppable [Music] thing that runs inside the bucket just",
    "start": "1810140",
    "end": "1817669"
  },
  {
    "text": "like an application on your or a process in your operating system you can kind of",
    "start": "1817669",
    "end": "1822799"
  },
  {
    "text": "start stop these things independent of the rest of them and so that means that you can start up your stack with a bunch",
    "start": "1822799",
    "end": "1829400"
  },
  {
    "text": "of these applications and then kind of split them out so you might have an application here it's just a storage application you know which is talking to",
    "start": "1829400",
    "end": "1836000"
  },
  {
    "text": "your database or whoever it is and then you have applications for the other services in your your app or your stack",
    "start": "1836000",
    "end": "1842059"
  },
  {
    "text": "as it were and yes you can run those all in the same beam you can run on separate virtual machines it's really kind of",
    "start": "1842059",
    "end": "1849230"
  },
  {
    "text": "configurable and they kind of work well feel very similar to microcircuits and",
    "start": "1849230",
    "end": "1854780"
  },
  {
    "text": "you can kind of communicate amongst them you can specify in your application that it depends upon a another application",
    "start": "1854780",
    "end": "1862420"
  },
  {
    "text": "and have those loaded up when you start your application or check to make sure that they're there and running and yes",
    "start": "1862420",
    "end": "1868660"
  },
  {
    "text": "so this is really quite useful a couple of other things yeah a distribution is",
    "start": "1868660",
    "end": "1875170"
  },
  {
    "start": "1871000",
    "end": "2011000"
  },
  {
    "text": "kind of at the core as I saying that states kind of managed inside the processes you can kind of split these",
    "start": "1875170",
    "end": "1880270"
  },
  {
    "text": "out to really take advantage of clusters and multi-core machines which is",
    "start": "1880270",
    "end": "1887920"
  },
  {
    "text": "massively kind of useful now us as we could hit the limit of CPU speed and can",
    "start": "1887920",
    "end": "1893710"
  },
  {
    "text": "I start to get on larger a lot more and more calls and on machine and live code read load as well we've not actually",
    "start": "1893710",
    "end": "1899470"
  },
  {
    "text": "used this so we build our services so that they can just be independently stopped up updated and reloaded but it's",
    "start": "1899470",
    "end": "1908170"
  },
  {
    "text": "it's a something that we'll probably explore in the future so what you can actually do is you're if you don't want",
    "start": "1908170",
    "end": "1914290"
  },
  {
    "text": "to run a distributed application so there it was originally designed for tell of telephony systems so there were",
    "start": "1914290",
    "end": "1919420"
  },
  {
    "text": "systems that couldn't go down and so they needed ninety-nines of uptime so they built in the concept of being able",
    "start": "1919420",
    "end": "1925480"
  },
  {
    "text": "to update the code whilst the code is running and it has a kind of version",
    "start": "1925480",
    "end": "1930760"
  },
  {
    "text": "strategy in there to kind of update the versions that are code in place and yeah",
    "start": "1930760",
    "end": "1936490"
  },
  {
    "text": "there's been running for for many years and it's battle-tested so it's something that would be more fun to play around",
    "start": "1936490",
    "end": "1942070"
  },
  {
    "text": "with than actually necessarily useful in our situation but it might be the case in future there are some negatives to",
    "start": "1942070",
    "end": "1949180"
  },
  {
    "text": "Erlang at the moment quickie syntax when you first look at it it looks like",
    "start": "1949180",
    "end": "1955210"
  },
  {
    "text": "someone's vomited on your screen but it's you kind of get used to it the",
    "start": "1955210",
    "end": "1961120"
  },
  {
    "text": "smaller community say the the number of kind of Erlang developers aren't as vast",
    "start": "1961120",
    "end": "1966460"
  },
  {
    "text": "as Java or scholar or go or something like that on nodejs but they tend to be a passionate bunch of and a lot of",
    "start": "1966460",
    "end": "1973750"
  },
  {
    "text": "academics in that area as well so a lot of people kind of look in a distributed systems theory and consensus and things",
    "start": "1973750",
    "end": "1980860"
  },
  {
    "text": "like that so a smart bunch of people this does have an impact on hiring it's",
    "start": "1980860",
    "end": "1985900"
  },
  {
    "text": "hard to find Erlang developers I kind of caveat that with the ones that you do find tend to be really good so you don't",
    "start": "1985900",
    "end": "1992410"
  },
  {
    "text": "have to filter out as many kind of that's as you would hire another kind of engineers and also you can kind of cut",
    "start": "1992410",
    "end": "1999870"
  },
  {
    "text": "cross train so we've hired some people that were Scala developers and they can picked up Erlang fairly quickly",
    "start": "1999870",
    "end": "2005360"
  },
  {
    "text": "look at the kind of concepts tend to be the same it's just things better at doing it the new kid on the block is",
    "start": "2005360",
    "end": "2012710"
  },
  {
    "start": "2011000",
    "end": "2077000"
  },
  {
    "text": "elixir so some Ruby people got bored of Ruby not scaling and decided to kind of",
    "start": "2012710",
    "end": "2019160"
  },
  {
    "text": "jump on the Erlang bandwagon and so they've invented a language called",
    "start": "2019160",
    "end": "2024470"
  },
  {
    "text": "elixir which runs on top of the Erlang VM and so it can make use of interrupting with Erlang code and OTP",
    "start": "2024470",
    "end": "2031190"
  },
  {
    "text": "and all the kind of mature hardened parts of Erlang but using a nice kind of",
    "start": "2031190",
    "end": "2039020"
  },
  {
    "text": "sugary language there's a kind of a few things that are missive missing from",
    "start": "2039020",
    "end": "2044330"
  },
  {
    "text": "Erlang kind of like string manipulation things like that which on as good as",
    "start": "2044330",
    "end": "2050230"
  },
  {
    "text": "yeah other languages or completely missing and they've kind of addressed",
    "start": "2050230",
    "end": "2055310"
  },
  {
    "text": "that in elixir and so yes he seems like a nice language it's one that we're going to start adopting as well there's",
    "start": "2055310",
    "end": "2063260"
  },
  {
    "text": "several reasons for that and yeah it's growing it's growing really quickly",
    "start": "2063260",
    "end": "2069550"
  },
  {
    "text": "probably not the same speeders like no GS and go have been doing but yeah compared to a long it's grown at",
    "start": "2069550",
    "end": "2076520"
  },
  {
    "text": "lightning speed so I'm scalable time series so this is",
    "start": "2076520",
    "end": "2082669"
  },
  {
    "start": "2077000",
    "end": "2216000"
  },
  {
    "text": "the next stage of our Erlang path so by this point we'd replace the bunch of our back-end services with Erlang they were",
    "start": "2082669",
    "end": "2088760"
  },
  {
    "text": "performing really well again it's not a great metric to kind of specify the",
    "start": "2088760",
    "end": "2096080"
  },
  {
    "text": "number of resources you went down to because when you rewrite anything you're gonna really write it better than you originally wrote the thing but yeah we",
    "start": "2096080",
    "end": "2102920"
  },
  {
    "text": "kind of reduced the amount of machines that we needed to use when we were moved to some of these services to Erlang but",
    "start": "2102920",
    "end": "2109160"
  },
  {
    "text": "yeah the next thing we looked at was a really scalable time series database so we built our own thing on top of react",
    "start": "2109160",
    "end": "2115310"
  },
  {
    "text": "which kind of got us to a certain degree but then the the number of updates that we were processing meant we were kind of",
    "start": "2115310",
    "end": "2120619"
  },
  {
    "text": "having to batch these up and write in chunks into react and then you kind of",
    "start": "2120619",
    "end": "2126500"
  },
  {
    "text": "had to manage the kind of failure scenarios or what brand the area with the or batching things up which was relased at the time so yeah we looked at",
    "start": "2126500",
    "end": "2134750"
  },
  {
    "text": "another kind of time series data store another kind of thing around that was the we also wanted a more queryable",
    "start": "2134750",
    "end": "2142720"
  },
  {
    "text": "database so we wanted to kind of run some of these complex queries do different analytics and provide functions so the data as it come through",
    "start": "2142720",
    "end": "2148970"
  },
  {
    "text": "which would have meant write in all of that stuff ourselves but we kind of looked around to see what other things",
    "start": "2148970",
    "end": "2154340"
  },
  {
    "text": "are about we look to the likes of influx and influx DB open TS DB and a couple of",
    "start": "2154340",
    "end": "2163850"
  },
  {
    "text": "other ones but yeah they wrote none of them were particularly great and all have their issues and so we kind of",
    "start": "2163850",
    "end": "2170690"
  },
  {
    "text": "stumbled across this one so we've been using react we like the idea of react Cora that kind of manages the",
    "start": "2170690",
    "end": "2176180"
  },
  {
    "text": "distribution it's kind of a funny work for building these distributed applications and takes care of the",
    "start": "2176180",
    "end": "2182780"
  },
  {
    "text": "sharding and the replication and so we like the idea of that but yeah we",
    "start": "2182780",
    "end": "2188750"
  },
  {
    "text": "stumbled across this which had been kind of written on top of yet core as well in Erlang and so it kind of seemed to tick",
    "start": "2188750",
    "end": "2195080"
  },
  {
    "text": "all the boxes so we started investigating and looked at some of the benchmarks it's been running and it was kind of yeah super quick so I kind of",
    "start": "2195080",
    "end": "2203330"
  },
  {
    "text": "recommend you guys taking a look if you're interested in time series I want to play around it's it's not as well as",
    "start": "2203330",
    "end": "2209150"
  },
  {
    "text": "doctored as all the time serious databases so the documentation is a little bit lacking but and once you get there it's it's it's pretty quick so",
    "start": "2209150",
    "end": "2216260"
  },
  {
    "start": "2216000",
    "end": "2254000"
  },
  {
    "text": "yeah at the root of it there is runs on Erlang uses react core for the",
    "start": "2216260",
    "end": "2221690"
  },
  {
    "text": "distribution it runs on top of ZFS we used a data file on Linux but you can use it on other on UNIX environments",
    "start": "2221690",
    "end": "2230480"
  },
  {
    "text": "obviously yeah and there's some Postgres in there as well so the the reason for",
    "start": "2230480",
    "end": "2236810"
  },
  {
    "text": "the zero first is that are kind of compressing the data on disk so we can just write raw data we don't have to do any compression ourselves we write the",
    "start": "2236810",
    "end": "2242990"
  },
  {
    "text": "raw data and let set of has to take care of the the compression and we have",
    "start": "2242990",
    "end": "2249650"
  },
  {
    "text": "Postgres in there for create some different kind of indexes for multi-dimensional data yes so this kind",
    "start": "2249650",
    "end": "2256760"
  },
  {
    "start": "2254000",
    "end": "2278000"
  },
  {
    "text": "of gets back to the reactor ring again so you know it uses react or for distributing keys the time series keys",
    "start": "2256760",
    "end": "2265109"
  },
  {
    "text": "that come in around the cluster yeah it gives it all other kind of high",
    "start": "2265109",
    "end": "2271410"
  },
  {
    "text": "availability redundancy etc completely masterless technology so you don't have",
    "start": "2271410",
    "end": "2276750"
  },
  {
    "text": "to worry about particular nodes going down yeah as I say it's a framework so",
    "start": "2276750",
    "end": "2283020"
  },
  {
    "start": "2278000",
    "end": "2328000"
  },
  {
    "text": "you kind of it takes care of doing a lot of the the the stuff you need to do are",
    "start": "2283020",
    "end": "2291630"
  },
  {
    "text": "not building these kind of systems so it will detect aliveness where there are members up or down does the partition",
    "start": "2291630",
    "end": "2297599"
  },
  {
    "text": "and distribution tells you about the cluster state when things are kind of up and down and as with react you get these",
    "start": "2297599",
    "end": "2306020"
  },
  {
    "text": "nice set of tooling with a rillette core to manage your cluster so you know you",
    "start": "2306020",
    "end": "2311369"
  },
  {
    "text": "want to scare your cluster up and down yeah that you have all the tooling in place to do that you just really just have to handle the",
    "start": "2311369",
    "end": "2317520"
  },
  {
    "text": "kind of implementation at the the V node level as to what you're actually going to be storing and yeah it allows you to",
    "start": "2317520",
    "end": "2324990"
  },
  {
    "text": "kind of monitor the state of the cluster which is really useful from our perspective so some benchmark so we used",
    "start": "2324990",
    "end": "2331410"
  },
  {
    "start": "2328000",
    "end": "2420000"
  },
  {
    "text": "to talk called Haggar which is a graphite benchmarking tool dell matino",
    "start": "2331410",
    "end": "2336500"
  },
  {
    "text": "supports the graphite protocol well there's a way of great and support the graphite vertical so we fired off a load",
    "start": "2336500",
    "end": "2342750"
  },
  {
    "text": "of these Haggar instances as i started chucking data into the dalla tina cluster and these are genuine benchmarks",
    "start": "2342750",
    "end": "2350040"
  },
  {
    "text": "we run on kind of fairly moderate hardware in terms of the performance you can get yeah kind of average between",
    "start": "2350040",
    "end": "2357540"
  },
  {
    "text": "three to four million metrics per second which is yeah there's nothing else that I've seen this gets",
    "start": "2357540",
    "end": "2363270"
  },
  {
    "text": "anywhere near there and yeah it kind of linearly scales as well so when we fired it up to five nodes you get the same",
    "start": "2363270",
    "end": "2371180"
  },
  {
    "text": "level of performance so we wrote a blog",
    "start": "2371180",
    "end": "2376230"
  },
  {
    "text": "post on it as well so we looked at all of the other time series databases or so no PTSD be in flux",
    "start": "2376230",
    "end": "2383220"
  },
  {
    "text": "graphite etc etc we've got a little bit of kind of heated feedback on this obviously they tend to be a little bit",
    "start": "2383220",
    "end": "2389490"
  },
  {
    "text": "opinionated but we try to reproduce the on a standard set of tests to run across",
    "start": "2389490",
    "end": "2394800"
  },
  {
    "text": "these to actually get an idea of what which ones are kind of quicker these are supporting reads as well at",
    "start": "2394800",
    "end": "2400320"
  },
  {
    "text": "the same time like you can't get kind of skewed metrics back from these things if you're just accepting rights and never",
    "start": "2400320",
    "end": "2405840"
  },
  {
    "text": "actually read them from them and we work with Heinz's that guy who wrote the who",
    "start": "2405840",
    "end": "2411570"
  },
  {
    "text": "wrote down latina to kind of improve certain aspects of that as well to make it more efficient for reading etc so",
    "start": "2411570",
    "end": "2421619"
  },
  {
    "start": "2420000",
    "end": "2554000"
  },
  {
    "text": "yeah you don't get any of this free there are some trade-offs so when it comes to processing time series data we",
    "start": "2421619",
    "end": "2428210"
  },
  {
    "text": "we have no kind of strict guarantees around your data it is possible to lose",
    "start": "2428210",
    "end": "2433619"
  },
  {
    "text": "your some data I know that sounds terrible but when it comes time to it if you lose a couple of seconds or a few",
    "start": "2433619",
    "end": "2439770"
  },
  {
    "text": "points of data you're looking at trends anyway so it's not that bad and then",
    "start": "2439770",
    "end": "2445380"
  },
  {
    "text": "this is all guarantees it doesn't mean you're actually going to use your data so you can configure the cluster in such a way that you've got several replicas",
    "start": "2445380",
    "end": "2453000"
  },
  {
    "text": "and so you'd need to lose all of those nodes to lose the data the only reason we don't guarantee any data protection",
    "start": "2453000",
    "end": "2460470"
  },
  {
    "text": "is for a certain window of time things get buffered in memory so if all of the nodes with that replication of data went",
    "start": "2460470",
    "end": "2467160"
  },
  {
    "text": "down at the same time you would lose like ten minutes of data in memory for a certain set of metrics so yeah there's",
    "start": "2467160",
    "end": "2474540"
  },
  {
    "text": "no guarantees around your data making it to disk but that doesn't tend to be an issue and yeah you kind of more likely",
    "start": "2474540",
    "end": "2483060"
  },
  {
    "text": "to lose data elsewhere from different parts of the pipe spilling over and things yeah you have to kind of be",
    "start": "2483060",
    "end": "2490740"
  },
  {
    "text": "careful around the memory usage and cassia caches so you have to kind of allocate some memory for ZFS to do its",
    "start": "2490740",
    "end": "2496859"
  },
  {
    "text": "thing as well you kind of we have to set things up in order to make things more",
    "start": "2496859",
    "end": "2502650"
  },
  {
    "text": "optimal for reads so yeah this is it's",
    "start": "2502650",
    "end": "2507780"
  },
  {
    "text": "part of the way that the the the dommatina works the way it kind of indexes data in a kind of consistent",
    "start": "2507780",
    "end": "2513720"
  },
  {
    "text": "format as opposed to having direct lookup indexes for the data but yeah I won't get into too many specifics",
    "start": "2513720",
    "end": "2519300"
  },
  {
    "text": "because it gets a little bit boring yeah we only support 32 62 bit floating",
    "start": "2519300",
    "end": "2526440"
  },
  {
    "text": "point numbers a couple of those bits are saved for different flags so yeah we're",
    "start": "2526440",
    "end": "2531480"
  },
  {
    "text": "a little bit less accurate than some systems but yeah a couple of bits don't tend to matter that much it also has a",
    "start": "2531480",
    "end": "2538890"
  },
  {
    "text": "proprietary binary protocol this was kind of a little bit difficult to adopt yeah you kind of have to",
    "start": "2538890",
    "end": "2544609"
  },
  {
    "text": "reverse-engineer the binary protocol the moment if there's not an SDK that works with this and for the language you're",
    "start": "2544609",
    "end": "2550920"
  },
  {
    "text": "using but if you use a know language sort it so yeah this is kind of what we",
    "start": "2550920",
    "end": "2556289"
  },
  {
    "start": "2554000",
    "end": "2609000"
  },
  {
    "text": "ended up with which is not too dissimilar to the first architecture diagram so we we split out the systems",
    "start": "2556289",
    "end": "2563819"
  },
  {
    "text": "into separate services we have a huge ring in the middle for our time series",
    "start": "2563819",
    "end": "2570029"
  },
  {
    "text": "data store and then just a bunch of background workers processing the data as it comes through so yeah we tend to",
    "start": "2570029",
    "end": "2576210"
  },
  {
    "text": "avoid having state as much as possible and try to keep those the actual",
    "start": "2576210",
    "end": "2582509"
  },
  {
    "text": "stateful parts in one particular a separate from their that the non staple parts are the application and yeah this",
    "start": "2582509",
    "end": "2590160"
  },
  {
    "text": "is where we got to at the moment this isn't the kind of we're not done we need to kind of keep going but as I say",
    "start": "2590160",
    "end": "2595200"
  },
  {
    "text": "we're a company we need to make we need to build features and keep iterating on the stuff that's going to add value to",
    "start": "2595200",
    "end": "2601140"
  },
  {
    "text": "customers and so we kind of work on this the micro services stuff as we go yes",
    "start": "2601140",
    "end": "2611249"
  },
  {
    "start": "2609000",
    "end": "2757000"
  },
  {
    "text": "the stuff we learn during our Erlang adventure is some of these things",
    "start": "2611249",
    "end": "2618269"
  },
  {
    "text": "weren't I've kind of touched on a little bit they weren't as obvious when we first started that how valuable they",
    "start": "2618269",
    "end": "2623640"
  },
  {
    "text": "would be so yeah a massive one is live code Tracy NC being able to look at what's going on in a running application",
    "start": "2623640",
    "end": "2630509"
  },
  {
    "text": "and being able to kind of product and poke it and get stuff out is massively",
    "start": "2630509",
    "end": "2635700"
  },
  {
    "text": "useful again the the let it crash approach it took me probably longer than",
    "start": "2635700",
    "end": "2642210"
  },
  {
    "text": "other members of the team to get my head around why this is particularly useful especially when certain parts of the the",
    "start": "2642210",
    "end": "2649829"
  },
  {
    "text": "system crash that it's a general the general approach for Erlang it does",
    "start": "2649829",
    "end": "2657160"
  },
  {
    "text": "actually prove to be really useful so you don't need to handle all of your edge cases and protect against failures",
    "start": "2657160",
    "end": "2663940"
  },
  {
    "text": "throughout littered throughout your code you're kind of right for the the sunny day scenario and when things go wrong",
    "start": "2663940",
    "end": "2669999"
  },
  {
    "text": "you kind of catch them and restart them and I'll see you looking at logs and monitoring how well these are performing",
    "start": "2669999",
    "end": "2675670"
  },
  {
    "text": "and then so if something is actually going wrong in your application and there's a bug that you need to fix then",
    "start": "2675670",
    "end": "2680920"
  },
  {
    "text": "you can grab it at that point and fix it but most of the times things just crash for random reasons and they're not that",
    "start": "2680920",
    "end": "2686920"
  },
  {
    "text": "critical - they're not things that you need a fix straight away so this keeps your processes to stuff and run in and",
    "start": "2686920",
    "end": "2692680"
  },
  {
    "text": "and ticking along yeah and again the community we we knew that it was going",
    "start": "2692680",
    "end": "2699400"
  },
  {
    "text": "to be small but we were kind of fine with that but yeah we weren't quite we didn't realize how yeah how kind of how",
    "start": "2699400",
    "end": "2706959"
  },
  {
    "text": "passionate and how strong that the Erlang community is it kind of they're growing in numbers now especially with",
    "start": "2706959",
    "end": "2713349"
  },
  {
    "text": "the adoption of elixir but there's a lot of smart people working in Erlang and",
    "start": "2713349",
    "end": "2718660"
  },
  {
    "text": "pushing the things forward another thing is we we have a fairly close relationship with Erlang solutions",
    "start": "2718660",
    "end": "2725049"
  },
  {
    "text": "so they're kind of consultancy Erlang consultancy that we use for outsource in",
    "start": "2725049",
    "end": "2730799"
  },
  {
    "text": "different parts of the application and neat building so they have a large bunch",
    "start": "2730799",
    "end": "2736150"
  },
  {
    "text": "of Erlang engineers that will that you can kind of off offload work on to to",
    "start": "2736150",
    "end": "2743319"
  },
  {
    "text": "help they also kind of help with training up some of the team as well and it's useful to kind of be able to fall",
    "start": "2743319",
    "end": "2748989"
  },
  {
    "text": "back to the kind of a bunch of guys that are really experienced in the area so",
    "start": "2748989",
    "end": "2756789"
  },
  {
    "text": "what's next so we're gonna Erlang all other things specifically all of the",
    "start": "2756789",
    "end": "2762039"
  },
  {
    "start": "2757000",
    "end": "2779000"
  },
  {
    "text": "back-end workers are going to be Erlang eventually and probably changing the",
    "start": "2762039",
    "end": "2767440"
  },
  {
    "text": "api's as well to say we get rid of all of the no GS and we'll use Erlang and elixir for all those things and you",
    "start": "2767440",
    "end": "2773349"
  },
  {
    "text": "really want to play around with a live code reload in it sounds it sounds fun",
    "start": "2773349",
    "end": "2779009"
  },
  {
    "start": "2779000",
    "end": "2867000"
  },
  {
    "text": "okay this better up sit up so yeah kind of closing up on the the startup stuff",
    "start": "2779009",
    "end": "2786190"
  },
  {
    "text": "everyone's looking if there he's doing a startup or they're kind of looking at it this is kind of the things",
    "start": "2786190",
    "end": "2791299"
  },
  {
    "text": "I wish I'd known was starting a startup yeah it tries to kind of ignore the dogma as much as possible there's a lot",
    "start": "2791299",
    "end": "2797779"
  },
  {
    "text": "of people say you shouldn't be building these things in certain ways or you shouldn't be a scrappy yeah you kind of",
    "start": "2797779",
    "end": "2803660"
  },
  {
    "text": "just have to get on with it get it working make it fast and then yeah I just shot the hell out of it you can be a little",
    "start": "2803660",
    "end": "2810140"
  },
  {
    "text": "bit other over the top on making sure you build the most elegant this should be it's just impossible but then you",
    "start": "2810140",
    "end": "2815959"
  },
  {
    "text": "look at all the success stories around technology companies they tend to follow this approach at least in the early days",
    "start": "2815959",
    "end": "2824410"
  },
  {
    "text": "yeah be scrappy you need to get stuff delivered but always yeah kind of this",
    "start": "2824410",
    "end": "2829729"
  },
  {
    "text": "bird the one that's kind of always you have to kind of come back to pay your debt so you need to be scrappy to get",
    "start": "2829729",
    "end": "2834859"
  },
  {
    "text": "things delivered but then kind of come back and fix these things up you can't just wait until your systems on fire and",
    "start": "2834859",
    "end": "2841849"
  },
  {
    "text": "yeah don't rush to the shiny things it's always a tendency to see the new core technology and want to use it straight",
    "start": "2841849",
    "end": "2847430"
  },
  {
    "text": "away docker comes to mind and all of the kind of technologies and things that",
    "start": "2847430",
    "end": "2853309"
  },
  {
    "text": "around that yeah it's not ways a good fit it might take a while",
    "start": "2853309",
    "end": "2858640"
  },
  {
    "text": "yeah and this pretty much you look at so thank you",
    "start": "2858640",
    "end": "2864480"
  },
  {
    "text": "[Applause]",
    "start": "2864480",
    "end": "2868340"
  }
]