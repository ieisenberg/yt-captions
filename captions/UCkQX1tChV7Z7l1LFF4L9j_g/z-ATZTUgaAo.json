[
  {
    "start": "0",
    "end": "463000"
  },
  {
    "text": "so today we're gonna talk about production designing for testability and what that really means is testing in",
    "start": "3909",
    "end": "8920"
  },
  {
    "text": "production how many people test in production today great it's starting it's happening it's real it's a",
    "start": "8920",
    "end": "15639"
  },
  {
    "text": "technique that helps us build higher quality software faster today and scales over time while reducing tech debt so",
    "start": "15639",
    "end": "23079"
  },
  {
    "text": "let's start let's ask let's actually start a little bit of reflection when we all think about something we've deployed",
    "start": "23079",
    "end": "28659"
  },
  {
    "text": "recently to production could be this week could be last month three months ago two years ago if you remember",
    "start": "28659",
    "end": "34860"
  },
  {
    "text": "everybody have something that they worked on they contributed thinking about that code running in production is",
    "start": "34860",
    "end": "42670"
  },
  {
    "text": "it working they're working right now in",
    "start": "42670",
    "end": "49630"
  },
  {
    "text": "production is it working see a few nodding head heads not many",
    "start": "49630",
    "end": "56770"
  },
  {
    "text": "though how do you know actually like how",
    "start": "56770",
    "end": "62170"
  },
  {
    "text": "do you really know that it's working right and even the best of learning",
    "start": "62170",
    "end": "67689"
  },
  {
    "text": "systems if you think about because usually the answer just alerting I'll get an alert if it's not working do you get an alert to tell you that or",
    "start": "67689",
    "end": "73359"
  },
  {
    "text": "you're alerting is working do you know as something failed and you said well I didn't get the alert does that happen",
    "start": "73359",
    "end": "81329"
  },
  {
    "text": "this always makes me personally feel anxious and I don't know if you share the same feeling but that feeling of",
    "start": "81329",
    "end": "87009"
  },
  {
    "text": "anxiety of not knowing that's something that we've built that's something that we put into production is working as we expect creates anxiety and that exact",
    "start": "87009",
    "end": "93999"
  },
  {
    "text": "idea takes room out of our brains out of our minds to be able to go on and do good work and so what I really hope to",
    "start": "93999",
    "end": "99850"
  },
  {
    "text": "share today is some techniques and feeling to some techniques and approaches to remove that anxiety so",
    "start": "99850",
    "end": "106359"
  },
  {
    "text": "that we know that what we've built in production actually is working so that we can focus on building new product new features and iterate quickly so quickly",
    "start": "106359",
    "end": "114429"
  },
  {
    "text": "a little bit of background of myself in 2007 as a co-founder and CTO Gilt Groupe here in the city Gil comm online",
    "start": "114429",
    "end": "120999"
  },
  {
    "text": "e-commerce site we have a few alumni have gilt here in the aught in the audience as well as colleagues from A to B so welcome",
    "start": "120999",
    "end": "126670"
  },
  {
    "text": "guilt is became a large company large retailer the an early pioneer and the micro service architectures we grew a",
    "start": "126670",
    "end": "134350"
  },
  {
    "text": "lot learned a lot and then two years ago I left to start flow flow as an enterprise software company helping brands expand",
    "start": "134350",
    "end": "140920"
  },
  {
    "text": "internationally to sell internationally based on what we learned a gilt and I think what was really interesting is to take almost a decade of experience",
    "start": "140920",
    "end": "147190"
  },
  {
    "text": "building microservice architectures building teams building a culture of progress and innovation and reliable",
    "start": "147190",
    "end": "153400"
  },
  {
    "text": "software and great customer experience dealing with all the great things and all the things we learned because it",
    "start": "153400",
    "end": "158680"
  },
  {
    "text": "wasn't all perfect and then being able to start over at the clean sheet and to do it again and to think about on day",
    "start": "158680",
    "end": "164500"
  },
  {
    "text": "one what have we learned what are the practices that we want to put into play from the beginning of a company so that",
    "start": "164500",
    "end": "169990"
  },
  {
    "text": "we can build the company not just for the time to market for MVP and version one but to build a company that can",
    "start": "169990",
    "end": "175870"
  },
  {
    "text": "scale over time without technical debt with happy productive developers and",
    "start": "175870",
    "end": "183490"
  },
  {
    "text": "fundamentally when they thought about this in the beginning I mean software quality is hard I mean it's a it's a it's a great discipline we",
    "start": "183490",
    "end": "189400"
  },
  {
    "text": "love the art but it's hard any we have to be perfect any imperfection eventually results in mistake it's not",
    "start": "189400",
    "end": "194590"
  },
  {
    "text": "just what we're thinking about today it's what happens in the future how things change and so one of the shifts was to really just really think",
    "start": "194590",
    "end": "200530"
  },
  {
    "text": "end-to-end for the entire lifecycle of our code and to understand what's happening there",
    "start": "200530",
    "end": "206500"
  },
  {
    "text": "and with that verification of production I think was a term coined by thoughtworks we're really thinking about",
    "start": "206500",
    "end": "211660"
  },
  {
    "text": "production as part of the developer experience if you think about the culture of many of the companies that are that we all belong to many of the",
    "start": "211660",
    "end": "218590"
  },
  {
    "text": "companies that presented here at Q con we talked about accountability and developers owning software DevOps",
    "start": "218590",
    "end": "223959"
  },
  {
    "text": "infrastructure monitoring pagers going off and the developers who wrote the code getting the alert to go fix the",
    "start": "223959",
    "end": "230110"
  },
  {
    "text": "problem in in in production so we talked about ownership end-to-end and production as part of that and if we can",
    "start": "230110",
    "end": "236890"
  },
  {
    "text": "then focus on production being a tool a complementary tool to the other practices that we have we can find that",
    "start": "236890",
    "end": "242980"
  },
  {
    "text": "we have new techniques to make sure that the software we're building in fact is testable is in fact running as we expect",
    "start": "242980",
    "end": "248170"
  },
  {
    "text": "and really a powerful technique to help builders build quality software so some",
    "start": "248170",
    "end": "254260"
  },
  {
    "text": "of the techniques and Sangeeta referenced a few of these that we've adopted at flow to deliver quality",
    "start": "254260",
    "end": "259299"
  },
  {
    "text": "software one is we've invested from the beginning a true continuous delivery second there are no staging environments",
    "start": "259299",
    "end": "265510"
  },
  {
    "text": "at flow they don't exist we're going to have test environments or any other environment by any",
    "start": "265510",
    "end": "271210"
  },
  {
    "text": "their name we just don't have them we'll talk about why and third what's happened as we evolved this is something we",
    "start": "271210",
    "end": "276880"
  },
  {
    "text": "didn't do in day one but happened probably the first few months of development the company is that we actually stopped running our code locally and no longer made sense for us",
    "start": "276880",
    "end": "283150"
  },
  {
    "text": "to run our code locally some people have said this is crazy maybe they may turn out to be right we'll see but don't worry it when you",
    "start": "283150",
    "end": "290740"
  },
  {
    "text": "join flow you don't have to be crazy we train people to be crazy at flow but so",
    "start": "290740",
    "end": "295750"
  },
  {
    "text": "far it's working we want to share what we're actually doing first let's talk about true continuous delivery so this is pretty important here really the",
    "start": "295750",
    "end": "303910"
  },
  {
    "text": "grounding here is in psychology and if you think about our psychology of the",
    "start": "303910",
    "end": "309400"
  },
  {
    "text": "individual and the developer actually has to make the decision to deploy software if we make that super simple so",
    "start": "309400",
    "end": "315130"
  },
  {
    "text": "any developer can deploy software and they feel ready that flow you deploy software by merging a pool request the",
    "start": "315130",
    "end": "321000"
  },
  {
    "text": "answer the question that you have to ask is is it ok to deploy this piece of software right now right and if you",
    "start": "321000",
    "end": "329650"
  },
  {
    "text": "focus on continuous delivery and you focus on automated tests then the answer is the person who decides to deploy",
    "start": "329650",
    "end": "335889"
  },
  {
    "text": "makes that decision and then what do we need to do to make sure that the decision is a sound one well remove all the friction there isn't",
    "start": "335889",
    "end": "341770"
  },
  {
    "text": "another staging environment there isn't a QA environment there isn't another group of people that's going to come in and certify whether or not the software",
    "start": "341770",
    "end": "347259"
  },
  {
    "text": "is valid or not that decision and the accountability the decision lies solely with the person who decides the merge the pull request you're not ready to",
    "start": "347259",
    "end": "353440"
  },
  {
    "text": "merge the pull request why not think about that that's an interesting question that sees that out second culturally we've decided there's",
    "start": "353440",
    "end": "358960"
  },
  {
    "text": "only one way to do something so continuous delivery it's a good example say we have a pipeline that knows how to",
    "start": "358960",
    "end": "364479"
  },
  {
    "text": "deploy software reliably to production over time somebody comes up with an innovation a better way to do it great",
    "start": "364479",
    "end": "369729"
  },
  {
    "text": "let's move everything on to new way to do it everything and then stop and then",
    "start": "369729",
    "end": "375719"
  },
  {
    "text": "next great idea can go from there but what we don't want is half-baked ideas that come through the pipeline so that",
    "start": "375719",
    "end": "382090"
  },
  {
    "text": "we have multiple different ways to do things across the organization and today at flow we have one way to deploy software one continuous delivery",
    "start": "382090",
    "end": "387699"
  },
  {
    "text": "pipeline it works for our node react apps it works for our Play api's it's the same no matter what the underlying",
    "start": "387699",
    "end": "393699"
  },
  {
    "text": "technology that the teams are using and third once you have continuous delivery we actually can assume from the",
    "start": "393699",
    "end": "400659"
  },
  {
    "text": "beginning that we have continuous delivery and it changes the way we think about things because I think one area we see the spread a lot",
    "start": "400659",
    "end": "406720"
  },
  {
    "text": "is in environment variable is a managing configuration how do you deploy an environment change to production well if",
    "start": "406720",
    "end": "411850"
  },
  {
    "text": "it's really easy to just deploy your software through the continuous delivery pipeline trigger release push that through your continuous delivery",
    "start": "411850",
    "end": "417220"
  },
  {
    "text": "pipeline all the monitoring all the instrumentation all the alerts all the notifications will tell everybody who's",
    "start": "417220",
    "end": "422260"
  },
  {
    "text": "interested that something has changed I mean go back and look at one single way to understand what has changed there's nothing different about it and that",
    "start": "422260",
    "end": "428200"
  },
  {
    "text": "proves to be really really important on continuous delivery fundamentally the the way that we operate is we we don't",
    "start": "428200",
    "end": "434920"
  },
  {
    "text": "actually deploy software we say we'd like the state of this offer to be X in production and then we've instrumented",
    "start": "434920",
    "end": "440740"
  },
  {
    "text": "that layer to go inspect production figure out what's actually running generate the diff to bring it to current",
    "start": "440740",
    "end": "446320"
  },
  {
    "text": "state and and that that instrumentation that's the way the system works that comes from learnings from I think",
    "start": "446320",
    "end": "451750"
  },
  {
    "text": "it was puppet and chef before continuous delivery that really instrumented that process we should say what desired state",
    "start": "451750",
    "end": "457960"
  },
  {
    "text": "is let the tooling let us get there so we can forget about it I love my staging",
    "start": "457960",
    "end": "466090"
  },
  {
    "start": "463000",
    "end": "856000"
  },
  {
    "text": "environment I love this one I have never heard anybody say that and",
    "start": "466090",
    "end": "471880"
  },
  {
    "text": "in fact at our time at GUILTY went through five iterations of staging and sure the initial ones worked they were brittle the last ones were brilliant and",
    "start": "471880",
    "end": "479530"
  },
  {
    "text": "we could never implement them does anybody here love your staging",
    "start": "479530",
    "end": "485230"
  },
  {
    "text": "environment let's see one hand and even if you think about it this is a hard",
    "start": "485230",
    "end": "490330"
  },
  {
    "text": "problem right really hard I think of how excited we got with docker and docker compose and what was what it was going",
    "start": "490330",
    "end": "496600"
  },
  {
    "text": "to do to make us love our staging environments executed very well it's still a very very very hard problem so",
    "start": "496600",
    "end": "501820"
  },
  {
    "text": "what's wrong with staging one it's a bottleneck you have initially organisations start they have one",
    "start": "501820",
    "end": "507070"
  },
  {
    "text": "staging environment that's managed by people and it breaks and everyone nobody can do any work sorry releases the late",
    "start": "507070",
    "end": "513550"
  },
  {
    "text": "till next week because staging is unavailable - its fragile and by fragile means it breaks it breaks all the time",
    "start": "513550",
    "end": "519570"
  },
  {
    "text": "and nobody really knows why and it shouldn't break because just like production right but it's not just like production because at the end of the day",
    "start": "519570",
    "end": "526030"
  },
  {
    "text": "if there's a failure in staging and somebody gets woken up they say you know what it's just staging I'll fix it in the morning",
    "start": "526030",
    "end": "531070"
  },
  {
    "text": "it's not treated as production because it doesn't have the same impact on the the our clients our users of the",
    "start": "531070",
    "end": "536860"
  },
  {
    "text": "business found that over time is really difficult to understand failure in staging",
    "start": "536860",
    "end": "542139"
  },
  {
    "text": "something breaks in staging why did it break oh I don't know oh look look at this script that somebody contributed",
    "start": "542139",
    "end": "547269"
  },
  {
    "text": "somewhere to do this weird thing to set up this one thing to work around the network layer in staging and that's the",
    "start": "547269",
    "end": "552310"
  },
  {
    "text": "reason it broke and by the way that doesn't exist in production is so the expertise around how we run our production infrastructure doesn't exist",
    "start": "552310",
    "end": "558100"
  },
  {
    "text": "it's really difficult to understand failure fourth it's expensive I think the 30 to 40 percent is an",
    "start": "558100",
    "end": "564730"
  },
  {
    "text": "accurate number from what we were spending on staging if you looked at it holistically in terms of not only the",
    "start": "564730",
    "end": "569949"
  },
  {
    "text": "resources the infrastructure people's time the lost productivity it's probably",
    "start": "569949",
    "end": "575350"
  },
  {
    "text": "the half of the engineering budget was spent on managing staging and not building product not improving",
    "start": "575350",
    "end": "581139"
  },
  {
    "text": "scalability 30 to 40 percent and initially when I learned this is really embarrassed and they went out and talked",
    "start": "581139",
    "end": "586269"
  },
  {
    "text": "to a bunch of people to see when we must be doing it wrong and found that actually it's quite common comment to see that and finally I think it creates",
    "start": "586269",
    "end": "592480"
  },
  {
    "text": "the wrong incentive it creates the incentive to deploy something to staging environment where it could be manually",
    "start": "592480",
    "end": "598420"
  },
  {
    "text": "inspected before it goes to production well great you do that today who's going to do that in six months and in six",
    "start": "598420",
    "end": "604000"
  },
  {
    "text": "months we're gonna have more stuff who's going to do all that stuff and so creates this incentive to do manual inspection to rely on other teams to",
    "start": "604000",
    "end": "610209"
  },
  {
    "text": "look at and verify our software before he goes to production and finally at the",
    "start": "610209",
    "end": "616600"
  },
  {
    "text": "end the day even the best staging environment I always like to ask as myself ask the people I've worked with can you guarantee that this will work in",
    "start": "616600",
    "end": "622810"
  },
  {
    "text": "production can you any guarantee you can't no matter how much we try it will",
    "start": "622810",
    "end": "627970"
  },
  {
    "text": "there will be failures in production so the highest quality code ever written was written for the space shuttle that",
    "start": "627970",
    "end": "633420"
  },
  {
    "text": "team was diligent they had an extremely good process and an incredibly high",
    "start": "633420",
    "end": "638769"
  },
  {
    "text": "quality software and it's amazing and it's absolutely amazing the process they went through a simple example is if",
    "start": "638769",
    "end": "645040"
  },
  {
    "text": "they're ready to cut a release and they looked at the bug count and saw that they had 15 bugs filed against the release they knew they weren't done",
    "start": "645040",
    "end": "650620"
  },
  {
    "text": "because statistics said they should find 70 bugs so let's keep going until we find about 70 bugs because we know",
    "start": "650620",
    "end": "656470"
  },
  {
    "text": "they're there we just haven't discovered them extremely disciplined team extremely high quality software",
    "start": "656470",
    "end": "661860"
  },
  {
    "text": "extremely expensive extremely expensive I think it was classified as the most expensive software ever written and",
    "start": "661860",
    "end": "667750"
  },
  {
    "text": "that's the trade-off right and I think our market has shown that we we don't need to like investing at the level of space",
    "start": "667750",
    "end": "674170"
  },
  {
    "text": "shuttle quality may not be the right answer for our businesses and therefore we are in a world of having to make",
    "start": "674170",
    "end": "679690"
  },
  {
    "text": "compromise don't run code locally so this was super interesting so we were let's say you're writing an API you're",
    "start": "679690",
    "end": "686200"
  },
  {
    "text": "feeling good and then you want to run your server and then you fire a postman so you can see your beautiful API why",
    "start": "686200",
    "end": "691810"
  },
  {
    "text": "are you doing that what is it that you're looking for in postman to verify move that to a test write the",
    "start": "691810",
    "end": "698860"
  },
  {
    "text": "integration test why didn't you write the integration test to verify that write the integration test oh you're not sure if your codes gonna work why not",
    "start": "698860",
    "end": "704380"
  },
  {
    "text": "write the test you can't write the test what's wrong with your code refactor your code write the test and",
    "start": "704380",
    "end": "709480"
  },
  {
    "text": "fundamentally what ends up happening at the end of all of this is if you have CD and it's front pull request and there's nothing in the way it's our",
    "start": "709480",
    "end": "716350"
  },
  {
    "text": "accountability the incentives line up to say this better work I better write high quality unit test integration test",
    "start": "716350",
    "end": "722350"
  },
  {
    "text": "whatever kind of testing I need to make sure that my code works and then we begin to trust our tests and that's a cultural thing you just decide to trust",
    "start": "722350",
    "end": "728890"
  },
  {
    "text": "your test if we mark if a PR they CI if the tests against the pull requests our green code is safe to deploy to",
    "start": "728890",
    "end": "735850"
  },
  {
    "text": "production organizationally that just becomes a fact and that puts the",
    "start": "735850",
    "end": "741010"
  },
  {
    "text": "pressure on all of us and increase the incentives that we continue to write great tests that cover it failure happens in production great rollback",
    "start": "741010",
    "end": "747339"
  },
  {
    "text": "vastly vastly rollback quickly write the test move forward and we keep going so",
    "start": "747339",
    "end": "752350"
  },
  {
    "text": "super super important now in a touch on architecture just a lot a little bit",
    "start": "752350",
    "end": "757899"
  },
  {
    "text": "because some of the quality does come through architecture and there was a lot has happened with micro service architectures over the last few years",
    "start": "757899",
    "end": "764410"
  },
  {
    "text": "maybe decade but one of the key benefits that we can get from architecture for being for safely testing in production",
    "start": "764410",
    "end": "770230"
  },
  {
    "text": "improving quality software's through isolation just really being paranoid about isolation what that means is making sure that somebody else can't",
    "start": "770230",
    "end": "778570"
  },
  {
    "text": "break your software so that when your software is broken it's very clear that it's your fault really really important",
    "start": "778570",
    "end": "784089"
  },
  {
    "text": "it just simplifies a lot of things we have to do and just a few of the techniques their events streaming when",
    "start": "784089",
    "end": "789730"
  },
  {
    "text": "the earlier talks of Q con there is a note that if you don't have event streaming in your architecture is probably something missing from the architecture and the power of event",
    "start": "789730",
    "end": "796180"
  },
  {
    "text": "stream is is great because it helps us change failure modes it'll talk about that in a sec at flow this is an example",
    "start": "796180",
    "end": "802000"
  },
  {
    "text": "but our architecture looks like it actually looks like that nice pretty structured top consume there's a proxy layer for",
    "start": "802000",
    "end": "808119"
  },
  {
    "text": "the api's microservice below serving different parts of the stack each micro-service has its own private",
    "start": "808119",
    "end": "813819"
  },
  {
    "text": "database nobody's allowed to touch that database it is private to the application and then all the applications publish events so if you",
    "start": "813819",
    "end": "819369"
  },
  {
    "text": "want data from another micro service subscribe to the event stream keep a copy of that data for yourself that",
    "start": "819369",
    "end": "824709"
  },
  {
    "text": "means on failure modes when a failure happens we've changed the failure mode from an outage to a delay we've gone",
    "start": "824709",
    "end": "830829"
  },
  {
    "text": "from unavailable to maybe there's seconds or minutes of delay in replication or on the event bus or a",
    "start": "830829",
    "end": "836259"
  },
  {
    "text": "particular component if as a severe outage is affected but it's basically impossible for that outage at an",
    "start": "836259",
    "end": "842949"
  },
  {
    "text": "individual component level to cascade to a failure because there's nothing shared we share an AWS account today and beyond",
    "start": "842949",
    "end": "850089"
  },
  {
    "text": "that literally there's nothing sure nothing shared but that isolation is important as we think about what we're",
    "start": "850089",
    "end": "855759"
  },
  {
    "text": "going to be doing in production ok so I want to shift gears and spend a few",
    "start": "855759",
    "end": "860799"
  },
  {
    "start": "856000",
    "end": "902000"
  },
  {
    "text": "minutes to talk about some actual real examples of successfully testing in production it really is testing in production",
    "start": "860799",
    "end": "867059"
  },
  {
    "text": "sometimes the verification production I feel like is a euphemism because it's uncomfortable to say we're going to go",
    "start": "867059",
    "end": "872470"
  },
  {
    "text": "test our software in production because that feels dangerous but in reality if we do it diligently if we think about",
    "start": "872470",
    "end": "878439"
  },
  {
    "text": "what we're doing it turns out that we can actually learn a lot actually produce higher-quality software and",
    "start": "878439",
    "end": "883689"
  },
  {
    "text": "believe it or not it's safe and even if we're not testing a production we have to remember that bugs get to production",
    "start": "883689",
    "end": "889269"
  },
  {
    "text": "and they're failures in production right so really what we're measuring is does the failure rate increase when we start",
    "start": "889269",
    "end": "894669"
  },
  {
    "text": "doing testing and production and I would pause this and kind of evidence shows that actually the failure rate goes down",
    "start": "894669",
    "end": "900519"
  },
  {
    "text": "so it's look at a few real examples Gill comm online e-commerce site people go",
    "start": "900519",
    "end": "907480"
  },
  {
    "start": "902000",
    "end": "1119000"
  },
  {
    "text": "shopping they add things to their carts and then they get to checkout and they",
    "start": "907480",
    "end": "912850"
  },
  {
    "text": "have this button today it's says submit your order you click the button customer will end up with their goods gilt the the company",
    "start": "912850",
    "end": "919749"
  },
  {
    "text": "the business is working and everybody is happy turns out check out any commerce it can",
    "start": "919749",
    "end": "926289"
  },
  {
    "text": "be complicated but ultimately you want to know that it works and so how do you know if checkout is actually working well we can say that the we wrote tests",
    "start": "926289",
    "end": "933850"
  },
  {
    "text": "and the integration test passed and all of our unit tests pass in fact I've seen cases where we had a 100% test coverage",
    "start": "933850",
    "end": "939910"
  },
  {
    "text": "in the in the applications 100% test coverage is showed on the dashboard hundred percent test coverage like great tests the tests are amazing still there",
    "start": "939910",
    "end": "947410"
  },
  {
    "text": "was a bug in production you know how does that happen but we want to know is like despite all those things that are",
    "start": "947410",
    "end": "952869"
  },
  {
    "text": "happening is it still working because what is it about production that's different probably the scale is different most",
    "start": "952869",
    "end": "958720"
  },
  {
    "text": "companies that run staging environments and even pre production environments rarely invest to have that environment be at the same scale maybe the network",
    "start": "958720",
    "end": "965559"
  },
  {
    "text": "is different maybe the network that production on even if it logically is similar is different right maybe the",
    "start": "965559",
    "end": "971230"
  },
  {
    "text": "provider has a different version of a switch maybe the chip in their server is different we don't know something is different production so we did a gilt as",
    "start": "971230",
    "end": "978220"
  },
  {
    "text": "we wrote a bot and the bot went through and browse the site and place orders all",
    "start": "978220",
    "end": "983739"
  },
  {
    "text": "the time and it was great and the bot failed to place an order pretty high",
    "start": "983739",
    "end": "988809"
  },
  {
    "text": "fidelity signal that hey guys there's a problem something is not right we were unable to place an order but we're",
    "start": "988809",
    "end": "994359"
  },
  {
    "text": "finding out from our bot and we're finding out immediately right and then we can control the cadence of this we can say place an order every few seconds",
    "start": "994359",
    "end": "1000959"
  },
  {
    "text": "placed in order every few minutes doesn't really matter but that confidence that we get from being able place an order is significant similarly",
    "start": "1000959",
    "end": "1009769"
  },
  {
    "text": "what we built actually on low testing this is the slightest site to check out button load testing the way guilt",
    "start": "1009769",
    "end": "1015539"
  },
  {
    "text": "actually does production load testing and the reason for that is if you look guilt calm the way it works is every day",
    "start": "1015539",
    "end": "1021600"
  },
  {
    "text": "at noon Eastern a new selection of brands goes on sale and traffic is 50 times higher at noon than it is at 11:59",
    "start": "1021600",
    "end": "1026819"
  },
  {
    "text": "there's a huge spike of traffic and you want to know if he can handle that and it turned out that it was better for guilt early in the morning to run a load",
    "start": "1026819",
    "end": "1032610"
  },
  {
    "text": "test on the production environment for a few minutes and just verify that nothing has changed and if something has changed you run the load test at 4 a.m.",
    "start": "1032610",
    "end": "1039058"
  },
  {
    "text": "you've got 8 hours to recover before it actually has a materially impact on the business and those are kind of",
    "start": "1039059",
    "end": "1044668"
  },
  {
    "text": "trade-offs there come into the office every morning you see the results say the load test this morning passed in production with how things are set up",
    "start": "1044669",
    "end": "1050130"
  },
  {
    "text": "you feel pretty good you feel pretty you feel pretty confident right and a lot of this is about increasing confidence some",
    "start": "1050130",
    "end": "1057870"
  },
  {
    "text": "of the problems with a bot that goes out and buy stuff one there's less stuff for customers to buy because the bot bought",
    "start": "1057870",
    "end": "1064049"
  },
  {
    "text": "everything right and what's the box address if you actually ship it to the bot is he or she going to be there to",
    "start": "1064049",
    "end": "1070409"
  },
  {
    "text": "receive the package that they bought so what we did there is we let's just invent a test domain name I'd",
    "start": "1070409",
    "end": "1076260"
  },
  {
    "text": "remember that the actual one was like add tests or at random string Gil calm and we'll just say that every time a",
    "start": "1076260",
    "end": "1082800"
  },
  {
    "text": "somebody with that domain places an order we just cancel the order we went into order processing system a",
    "start": "1082800",
    "end": "1089580"
  },
  {
    "text": "guilts a big system and we added three lines of code if the email address and to this domain then cancel the order and",
    "start": "1089580",
    "end": "1096630"
  },
  {
    "text": "that was it and so now all the sudden we have a bot running a production every few minutes can place an order tells us",
    "start": "1096630",
    "end": "1101790"
  },
  {
    "text": "that everything is working from a checkout perspective few minutes later the orders cancelled nothing ships no credit cards are charged inventories are",
    "start": "1101790",
    "end": "1107370"
  },
  {
    "text": "released back to other consumers and the world operates and nobody nobody even knows but we at gilt know that checkout",
    "start": "1107370",
    "end": "1113610"
  },
  {
    "text": "is working right very very very powerful",
    "start": "1113610",
    "end": "1118490"
  },
  {
    "start": "1119000",
    "end": "1316000"
  },
  {
    "text": "second example so flow is a software-as-a-service company and we and",
    "start": "1119720",
    "end": "1127170"
  },
  {
    "text": "what that really means we have a multi-tenant architecture where when a client comes to us they create an",
    "start": "1127170",
    "end": "1132270"
  },
  {
    "text": "organization or an account and then they can create as many sandbox accounts as they want but interestingly years ago we",
    "start": "1132270",
    "end": "1137580"
  },
  {
    "text": "started doing this with our internal services and it stemmed from this observation when we were modifying login",
    "start": "1137580",
    "end": "1143190"
  },
  {
    "text": "to allow users to come to gilt.com and login through Facebook right we didn't",
    "start": "1143190",
    "end": "1148710"
  },
  {
    "text": "go to Facebook and say excuse me Facebook can you please send us a copy of your source code so that we can run",
    "start": "1148710",
    "end": "1153900"
  },
  {
    "text": "all of Facebook and our staging environment so that we can test that login works right we didn't ask Facebook",
    "start": "1153900",
    "end": "1160890"
  },
  {
    "text": "to do that yet a colleague across the hall for me that's what we were doing internally right you you run the",
    "start": "1160890",
    "end": "1167850"
  },
  {
    "text": "inventory system great can I please run your inventory system in my staging environment so I can verify the inventory is working there is",
    "start": "1167850",
    "end": "1174270"
  },
  {
    "text": "no concept really of a contract and believing in the contract between two services yet when we look outside the",
    "start": "1174270",
    "end": "1179310"
  },
  {
    "text": "organization with every third party that we work we at a contract and we respected that contract so from that we",
    "start": "1179310",
    "end": "1185910"
  },
  {
    "text": "learned that actually there's this notion of a sandbox account or creating multiple accounts even for software that we write internally who is the consumer",
    "start": "1185910",
    "end": "1192540"
  },
  {
    "text": "might be our production property it might be a different domain that we run it might be an internal test group it",
    "start": "1192540",
    "end": "1198000"
  },
  {
    "text": "might be an integration test but from that rose's notion of the sandbox and what is the sandbox a sandbox is a",
    "start": "1198000",
    "end": "1205280"
  },
  {
    "text": "identifier in production that is safe and it's safe",
    "start": "1205280",
    "end": "1210650"
  },
  {
    "text": "because the authors of the software have made it safe and we see these all over the place so at flow for example we run",
    "start": "1210650",
    "end": "1216860"
  },
  {
    "text": "a payment system you can submit a credit card will charge your credit card if you send us a credit card in a sandbox",
    "start": "1216860",
    "end": "1222530"
  },
  {
    "text": "account that credit card never goes to a bank and in fact there's test numbers that work right and that's instrumented",
    "start": "1222530",
    "end": "1229400"
  },
  {
    "text": "in the software and as the authors of that software we provide a guarantee that says hey in sandbox mode here's",
    "start": "1229400",
    "end": "1234560"
  },
  {
    "text": "some test cards that you can work trust us trust our contract that if you can integrate against the sandbox account",
    "start": "1234560",
    "end": "1240590"
  },
  {
    "text": "it'll work in production right all the payment gateways do that super-powerful technique Facebook does",
    "start": "1240590",
    "end": "1245690"
  },
  {
    "text": "that you get test accounts they're almost all this house companies today do that stripe does that have used them but",
    "start": "1245690",
    "end": "1251480"
  },
  {
    "text": "it's interrupt to think about doing that internally for our own software right because now we can deploy our software",
    "start": "1251480",
    "end": "1257060"
  },
  {
    "text": "into production and we can write integration tests against sandbox accounts one other interesting thing",
    "start": "1257060",
    "end": "1263510"
  },
  {
    "text": "we've done here at flow is that we allow our clients and ourselves to create as many sandbox accounts as you want and do",
    "start": "1263510",
    "end": "1271340"
  },
  {
    "text": "that using one API key and that's a really powerful thing and so we actually have clients who have written an",
    "start": "1271340",
    "end": "1277250"
  },
  {
    "text": "integration test against they stand against flow in production and what they do is say hey create a sandbox",
    "start": "1277250",
    "end": "1282560"
  },
  {
    "text": "organization great got one now they go through their own integration test in production all the way through and all",
    "start": "1282560",
    "end": "1288440"
  },
  {
    "text": "the actions they do and then when they're all done they delete the account why is that powerful it's powerful",
    "start": "1288440",
    "end": "1293720"
  },
  {
    "text": "because when the sandbox account is created it doesn't come with any data it is initialized the same way every single",
    "start": "1293720",
    "end": "1299810"
  },
  {
    "text": "time and that means that the integration test that they write actually work every single time right and that's really",
    "start": "1299810",
    "end": "1306680"
  },
  {
    "text": "really powerful because now we can schedule that in production and run it over and over again",
    "start": "1306680",
    "end": "1312370"
  },
  {
    "start": "1316000",
    "end": "1335000"
  },
  {
    "text": "once we saw we actually built this for the first time for our clients and we saw what they were doing and we loved it",
    "start": "1316750",
    "end": "1321770"
  },
  {
    "text": "and we adopted it internally and a lot of our own internal tooling networks like this create a sandbox account run",
    "start": "1321770",
    "end": "1326780"
  },
  {
    "text": "as many tests as you want those are all running in production sandbox is a guarantee that is safe and then we",
    "start": "1326780",
    "end": "1331970"
  },
  {
    "text": "delete the sandbox org and here we'll show a more kind of detailed example so",
    "start": "1331970",
    "end": "1338420"
  },
  {
    "start": "1335000",
    "end": "1391000"
  },
  {
    "text": "this is an actual integration test this particular one is running in Travis CI Travis CI has a cron feature this one",
    "start": "1338420",
    "end": "1345799"
  },
  {
    "text": "runs daily and this is a snippet of Ruby code that actually communicates with the",
    "start": "1345799",
    "end": "1351109"
  },
  {
    "text": "API so at the beginning we've created a sandbox and organization in sandbox mode",
    "start": "1351109",
    "end": "1356209"
  },
  {
    "text": "we then go through and create a certain number a random number of orders flow as",
    "start": "1356209",
    "end": "1361369"
  },
  {
    "text": "a global e-commerce thing so random number of orders of random currencies and random countries and this is what it looks like crane order create a payment",
    "start": "1361369",
    "end": "1367969"
  },
  {
    "text": "authorization create app create a capture if everything works the test pass if not it's a build failure and",
    "start": "1367969",
    "end": "1374809"
  },
  {
    "text": "turns out Travis is quite good at notifying us of Bill failure don't you have to do anything right we can do more",
    "start": "1374809",
    "end": "1380149"
  },
  {
    "text": "but we don't have to do anything and then it just runs every day it just runs",
    "start": "1380149",
    "end": "1386229"
  },
  {
    "start": "1391000",
    "end": "1656000"
  },
  {
    "text": "here's another example this one I think is a little bit uh I think this is",
    "start": "1392079",
    "end": "1398450"
  },
  {
    "text": "interesting in a different way so an API platform in front of the API platform sits an API proxy we we've written our",
    "start": "1398450",
    "end": "1406399"
  },
  {
    "text": "own called proxy there's a link at the bottom it's an open source reverse proxy written in Scala play and the and the",
    "start": "1406399",
    "end": "1415339"
  },
  {
    "text": "proxy is everything I mean API dive flow data i/o resolves on this proxy right and so mistake here is hi earlier we",
    "start": "1415339",
    "end": "1421879"
  },
  {
    "text": "talked about isolation this is an area where there is no isolation a bug in this layer casket I mean Cascades the",
    "start": "1421879",
    "end": "1428509"
  },
  {
    "text": "API goes down that flow so this is a high-risk piece of software so how do we",
    "start": "1428509",
    "end": "1435320"
  },
  {
    "text": "evolve it how do we manage the software and make sure that as this software itself evolves and deploys in production we're managing what's happening we know",
    "start": "1435320",
    "end": "1441649"
  },
  {
    "text": "that things are working so the approach that we took several things that we do the standard things around code review",
    "start": "1441649",
    "end": "1448690"
  },
  {
    "text": "integration tests automation but ultimately what was the what was the",
    "start": "1448690",
    "end": "1454159"
  },
  {
    "text": "context ultimately we were resolving a course issue with ie a browsers and some weird domain thing we're the only HTTP",
    "start": "1454159",
    "end": "1460249"
  },
  {
    "text": "verb that was available across origin was post and you had to we had the support allowing the API to available",
    "start": "1460249",
    "end": "1466759"
  },
  {
    "text": "across all HTTP methods proper REST API is when actually the calling client could only use post it was the only",
    "start": "1466759",
    "end": "1472999"
  },
  {
    "text": "method that was available it's a corner case did you go read the docs on ie there's actually non-apology for the bug but it is what it is right",
    "start": "1472999",
    "end": "1480610"
  },
  {
    "text": "and so what we decided to do is well we have this reverse proxy why don't we terminate the post requests",
    "start": "1480610",
    "end": "1485660"
  },
  {
    "text": "with a envelope that then tells us what to do similar to json p and then we can forward the request appropriately as a",
    "start": "1485660",
    "end": "1492470"
  },
  {
    "text": "proper HTTP rest call to the back-end service and that way all of the services at flow they don't need to know any of",
    "start": "1492470",
    "end": "1497960"
  },
  {
    "text": "the stuff that's going on right they just got a proper HTTP request this is a big change right because we're at the",
    "start": "1497960",
    "end": "1504170"
  },
  {
    "text": "edge of the network we're going to inspect with all of the incoming traffic and if we get it wrong nothing works this is a big change so",
    "start": "1504170",
    "end": "1511190"
  },
  {
    "text": "how do we test something like this we said why don't we actually run the",
    "start": "1511190",
    "end": "1516350"
  },
  {
    "text": "development instance of our proxy server using production config right so using",
    "start": "1516350",
    "end": "1522890"
  },
  {
    "text": "the production hosts actually using the production house and so we have this this is how we run our stuff eval AWS",
    "start": "1522890",
    "end": "1531830"
  },
  {
    "text": "profile which identifies an s3 bucket where we saw our environment variables def SBT starts up SBT and we passed in",
    "start": "1531830",
    "end": "1538070"
  },
  {
    "text": "environment production so this is saying please start my application using the production environment variables right",
    "start": "1538070",
    "end": "1543800"
  },
  {
    "text": "now this is this is a little scary but we're doing it very diligently and now",
    "start": "1543800",
    "end": "1550610"
  },
  {
    "text": "what's happening is we have a reverse proxy running in an integration environment that's actually talking to production and we can do damage here by",
    "start": "1550610",
    "end": "1557870"
  },
  {
    "text": "the way this is you know this is why we're doing this incrementally and very very carefully and then what we did is",
    "start": "1557870",
    "end": "1563030"
  },
  {
    "text": "we actually wrote an intro a series of integration tests actually there are a list of curl commands that's quite long",
    "start": "1563030",
    "end": "1569270"
  },
  {
    "text": "that goes out and exercises a collection of requests that we were seeing in actual production right do these",
    "start": "1569270",
    "end": "1575900"
  },
  {
    "text": "requests get routed as we expect curl to the local server proxying to production",
    "start": "1575900",
    "end": "1580940"
  },
  {
    "text": "and then we can verify that the service it shows and the structure of the requested forwarded was correct and if",
    "start": "1580940",
    "end": "1587750"
  },
  {
    "text": "not we fail so we did that and then we wrote another integration test that just said a create a sandbox org now we're",
    "start": "1587750",
    "end": "1594320"
  },
  {
    "text": "safe and do a whole bunch of stuff throughout the API and make sure that the API reverse proxy is working and",
    "start": "1594320",
    "end": "1600860"
  },
  {
    "text": "then we were happy and we deployed it to production and as usual everything worked as expected but was super",
    "start": "1600860",
    "end": "1607580"
  },
  {
    "text": "interesting now we have this asset we have the tests that run safely against production and",
    "start": "1607580",
    "end": "1612860"
  },
  {
    "text": "now we can run this all the time right when you just put this back into Travis or back into some other scheduler and",
    "start": "1612860",
    "end": "1619760"
  },
  {
    "text": "run this all the time and we have a complete regression test of our proxy not just the integration code but",
    "start": "1619760",
    "end": "1626360"
  },
  {
    "text": "actually running in production and every single day we know that the proxy is working there's no surprises there",
    "start": "1626360",
    "end": "1631870"
  },
  {
    "text": "that's incredibly powerful to know that it's working right when a bug comes in",
    "start": "1631870",
    "end": "1638740"
  },
  {
    "text": "you don't have to ask I think the bug is in proxy it's done you just look at the history no it's but all the bills are",
    "start": "1638740",
    "end": "1644690"
  },
  {
    "text": "successful against production I don't need to debug there the problem is somewhere else and if you have that",
    "start": "1644690",
    "end": "1649850"
  },
  {
    "text": "confidence it is incredibly liberating to then focus on what else may actually be wrong",
    "start": "1649850",
    "end": "1656200"
  },
  {
    "text": "at the end of the day what we're really excited about is seeing the green checkmark everything is operating as",
    "start": "1656200",
    "end": "1661940"
  },
  {
    "text": "expected so we can focus on other things so when a touched on very briefly that",
    "start": "1661940",
    "end": "1668320"
  },
  {
    "start": "1666000",
    "end": "1678000"
  },
  {
    "text": "sometimes despite best of intentions despite the best of teams with the time and energy to devote to diligent",
    "start": "1668320",
    "end": "1674600"
  },
  {
    "text": "software development things go wrong and I just want to highlight what a few of those considerations are one is to make",
    "start": "1674600",
    "end": "1681080"
  },
  {
    "start": "1678000",
    "end": "1799000"
  },
  {
    "text": "production access explicit so I remember early on me and talk about testing in production this isn't just open up the",
    "start": "1681080",
    "end": "1687200"
  },
  {
    "text": "firewall and run everything in production it's not you could do that wouldn't advise it but more that it's",
    "start": "1687200",
    "end": "1693980"
  },
  {
    "text": "very very explicit we know we're going into production but let's think about it is it safe to interact with a user service probably is it safe to interact",
    "start": "1693980",
    "end": "1701600"
  },
  {
    "text": "with a payment processor maybe maybe not well let's go find out if it is or not",
    "start": "1701600",
    "end": "1706910"
  },
  {
    "text": "and probably take one of these techniques create a sandbox account to make it safe but it really is",
    "start": "1706910",
    "end": "1711950"
  },
  {
    "text": "systematically thinking about what is safe capturing it and then running it",
    "start": "1711950",
    "end": "1716990"
  },
  {
    "text": "over and over again second is the notion just using defined paths and really what",
    "start": "1716990",
    "end": "1722990"
  },
  {
    "text": "we're talking about here like if you have an API use your API when you're testing in production don't belong into production and go talk to the production",
    "start": "1722990",
    "end": "1729260"
  },
  {
    "text": "database if that's not what your system is doing right when we go into production we really want to emulate how",
    "start": "1729260",
    "end": "1734570"
  },
  {
    "text": "production is behaving as we're serving our users in the same way so if it's an apk API call to choose the API if we",
    "start": "1734570",
    "end": "1741230"
  },
  {
    "text": "think we have an API the API is not helping us test aha maybe we need a new API right but we want to",
    "start": "1741230",
    "end": "1747720"
  },
  {
    "text": "use our software the way our clients use it not in a different way so that we can manage it the same way sensitive data",
    "start": "1747720",
    "end": "1754830"
  },
  {
    "text": "sometimes comes up and this is whether it's a personally identifiable information credit card data and just",
    "start": "1754830",
    "end": "1761340"
  },
  {
    "text": "mention here to just this takes a little bit more thought before opening up and",
    "start": "1761340",
    "end": "1766590"
  },
  {
    "text": "then this notion for designing for side-effects and these are in the canonical example is a credit card if",
    "start": "1766590",
    "end": "1772409"
  },
  {
    "text": "you actually allow that credit card to go to a bank your users may regret that and it turns out we found in most",
    "start": "1772409",
    "end": "1778350"
  },
  {
    "text": "systems there's a few things that really make external calls that have negative side effects easy to all those off and",
    "start": "1778350",
    "end": "1784769"
  },
  {
    "text": "try different techniques but for the vast majority of the software that we're writing it turns out that is actually quite safe and quite simple to start",
    "start": "1784769",
    "end": "1792119"
  },
  {
    "text": "automating our tests against production",
    "start": "1792119",
    "end": "1796279"
  },
  {
    "start": "1799000",
    "end": "1804000"
  },
  {
    "text": "other one in touch in just some unexpected benefits so this is one I",
    "start": "1800029",
    "end": "1805289"
  },
  {
    "start": "1804000",
    "end": "1951000"
  },
  {
    "text": "call it perfect documentation it turns out that when we start writing automated tests that are running constantly in",
    "start": "1805289",
    "end": "1810690"
  },
  {
    "text": "production we're actually using production and from that we can start to actually capture lots of information an",
    "start": "1810690",
    "end": "1816450"
  },
  {
    "text": "example of that is we we run a regression test against all the api's at",
    "start": "1816450",
    "end": "1821879"
  },
  {
    "text": "flow there's our automated tests so they create a sound backstory they're on all the whole bunch of stuff verify that it's all correct and then we actually",
    "start": "1821879",
    "end": "1828929"
  },
  {
    "text": "capture that and publish it to a documentation site right so now all of a sudden when we work with developers you",
    "start": "1828929",
    "end": "1835139"
  },
  {
    "text": "say check out our site you can guarantee the documentation is perfect because it's real right it's real every time our",
    "start": "1835139",
    "end": "1840989"
  },
  {
    "text": "integration test run we can just trigger a new continuous delivery build of the node app that runs the documentation",
    "start": "1840989",
    "end": "1846480"
  },
  {
    "text": "site it's gonna pick up the new output and document the documentation always current always correct",
    "start": "1846480",
    "end": "1851759"
  },
  {
    "text": "I was actually every version is there too but that's hugely powerful hugely powerful let me show you what this looks",
    "start": "1851759",
    "end": "1859049"
  },
  {
    "text": "like because that this is worked out quite well here's an example we use curl",
    "start": "1859049",
    "end": "1865200"
  },
  {
    "text": "for this so curl an API key to an endpoint we capture that request in a",
    "start": "1865200",
    "end": "1871289"
  },
  {
    "text": "file called simple that requests JSON we capture the response in this case is JSON and we saw that in",
    "start": "1871289",
    "end": "1878400"
  },
  {
    "text": "another file and we just stick it in a directory tree our directory tree is I think it's must be a resource we're",
    "start": "1878400",
    "end": "1886350"
  },
  {
    "text": "looking at a now resource HTTP verb and then the path so in our case scrapbook demo catalog if you can read that",
    "start": "1886350",
    "end": "1891809"
  },
  {
    "text": "scrapbook demo is the sandbox account we created catalog slash items is the URL and then we just captured in a in a file",
    "start": "1891809",
    "end": "1898559"
  },
  {
    "text": "system very low-tech right but this is running automated all the time and we",
    "start": "1898559",
    "end": "1903840"
  },
  {
    "text": "just capture these and then what do we do with the directory system we use a very complicated command tar CF create a",
    "start": "1903840",
    "end": "1910230"
  },
  {
    "text": "tarball eval the captured requests and responses we just upload it to s3 we're",
    "start": "1910230",
    "end": "1915570"
  },
  {
    "text": "using continuous delivery if we want we trigger a build or deploy of the doc site when the doc site builds it",
    "start": "1915570",
    "end": "1921029"
  },
  {
    "text": "downloads the latest example is from s3 and then it uses that to build the documentation right so we've connected",
    "start": "1921029",
    "end": "1927270"
  },
  {
    "text": "the pipeline all the way through end-to-end but we can actually say we have perfect documentation is perfect it's perfect",
    "start": "1927270",
    "end": "1932789"
  },
  {
    "text": "because if it didn't work the build failed and it told us hey you have a problem in production because there's something wrong in production the build",
    "start": "1932789",
    "end": "1939000"
  },
  {
    "text": "failed right and this runs all the time hugely powerful hugely I mean it just",
    "start": "1939000",
    "end": "1946500"
  },
  {
    "text": "changes it just first it just changed the game so now in this shift just a",
    "start": "1946500",
    "end": "1952919"
  },
  {
    "start": "1951000",
    "end": "2143000"
  },
  {
    "text": "little bit at highlight a little bit on tooling because I think underlying all of this is really an investment in tooling and I won't just highlight kinda",
    "start": "1952919",
    "end": "1958890"
  },
  {
    "text": "three of the tools that we use that really help us ant and not only execute",
    "start": "1958890",
    "end": "1964350"
  },
  {
    "text": "the tests in production but know that we're doing it safely and then receive notification if actually we've made a",
    "start": "1964350",
    "end": "1969539"
  },
  {
    "text": "mistake one is a tool called API builder this is formally known as API doc it's an open source project that dates back",
    "start": "1969539",
    "end": "1975899"
  },
  {
    "text": "to probably three four years ago at gilt when we were solving for micro service architectures and consistent api's for",
    "start": "1975899",
    "end": "1982590"
  },
  {
    "text": "breast services as well as event schemas but the key things here is it provides version control the API so that",
    "start": "1982590",
    "end": "1987659"
  },
  {
    "text": "developers that they introduce a breaking change into an API they know immediately that you can fail a CI bill",
    "start": "1987659",
    "end": "1993539"
  },
  {
    "text": "because you know because the tooling will tell you that a breaking change was introduced so it really manages version control for",
    "start": "1993539",
    "end": "1999630"
  },
  {
    "text": "the API is backwards compatibility and a notion of high quality mocks and I want to touch on high quality mocking and",
    "start": "1999630",
    "end": "2005450"
  },
  {
    "text": "here's an example so high quality mocking what do you mean by high quality mocks if we're if we use mocks either we trust",
    "start": "2005450",
    "end": "2014630"
  },
  {
    "text": "our marks every doubt right that really is the fork if you trust your Mach then you're not going to feel the need to",
    "start": "2014630",
    "end": "2021140"
  },
  {
    "text": "deploy to staging to verify there's nothing to verify because the Mach is real but how can you trust the Mach",
    "start": "2021140",
    "end": "2026390"
  },
  {
    "text": "right because there's so much that the Mach doesn't capture so the way that we we put into the development process",
    "start": "2026390",
    "end": "2031990"
  },
  {
    "text": "actually both the guilt in it flow is we start off by defining the schema of the",
    "start": "2031990",
    "end": "2037010"
  },
  {
    "text": "services the models and whether using G RPC your swagger API builder at home it doesn't matter but as long as you've defined as first-class what the",
    "start": "2037010",
    "end": "2043640"
  },
  {
    "text": "interface is whether the next step is really important the next step is to use generated clients to be able to consume",
    "start": "2043640",
    "end": "2050389"
  },
  {
    "text": "services and then to use generated mocks from the same specification and all of your integration tests and if you have a",
    "start": "2050390",
    "end": "2056810"
  },
  {
    "text": "high quality mock then when you write the integration test all you really have to do is step out the one thing that you're testing and this example the",
    "start": "2056810",
    "end": "2063440"
  },
  {
    "text": "snippet of the top is just a snippet of a full mock client library generated for this is for a geolocation service and",
    "start": "2063440",
    "end": "2070210"
  },
  {
    "text": "then on the bottom right where we're testing is that an IP address resolves to a particular address and so we",
    "start": "2070210",
    "end": "2076220"
  },
  {
    "text": "overrode the mock we can set an address and map this IP to that to build database and then we just call our API",
    "start": "2076220",
    "end": "2082220"
  },
  {
    "text": "and we verify that the country is as we expected and that's it with the high quality mocking with that provides to us",
    "start": "2082220",
    "end": "2087950"
  },
  {
    "text": "as a technique for integration tests that can run reliably in our tests so",
    "start": "2087950",
    "end": "2093560"
  },
  {
    "text": "that we can trust them right the build passes it will pass in production and this technique has worked like we have",
    "start": "2093560",
    "end": "2100250"
  },
  {
    "text": "yet to experience a failure in production where the mock passed but production did not like that just doesn't happen anymore and what was",
    "start": "2100250",
    "end": "2107240"
  },
  {
    "text": "interesting is we found as as it became ingrained of culture as we work with other third parties we now actually",
    "start": "2107240",
    "end": "2113150"
  },
  {
    "text": "prefer to document the third party schemas ourselves so that we generate our own SDK so that we can get the high",
    "start": "2113150",
    "end": "2118580"
  },
  {
    "text": "quality mocks built into our integration test so more and more developers at flow choose to use their own SDKs generated",
    "start": "2118580",
    "end": "2126140"
  },
  {
    "text": "SDKs as opposed to client provided you know third-party SDKs simply to get the",
    "start": "2126140",
    "end": "2131450"
  },
  {
    "text": "high quality mocks because it helps us write the integration tests that let us know that we can trust our tests so that",
    "start": "2131450",
    "end": "2138080"
  },
  {
    "text": "we can deploy to production when the tests pass",
    "start": "2138080",
    "end": "2141880"
  },
  {
    "text": "two other quick tools one this is kind of early but they were there amazing since when - mention excite never heard",
    "start": "2143090",
    "end": "2148170"
  },
  {
    "text": "of them until colleague Matt introduced them company called vivid cortex this is they excel in real-time database",
    "start": "2148170",
    "end": "2154080"
  },
  {
    "text": "monitoring and there's a fantastic product and this is an example from them where developer came in good intentions",
    "start": "2154080",
    "end": "2160560"
  },
  {
    "text": "creating index that's the top-line query number two expected performance get better didn't get better but queries",
    "start": "2160560",
    "end": "2166500"
  },
  {
    "text": "four six and seven started to see variability in response time and really capturing at the database layer being",
    "start": "2166500",
    "end": "2172050"
  },
  {
    "text": "able to turn this back in hey this thing that you expected to happen didn't have the desired effect so that a developer can take can undo the change in this",
    "start": "2172050",
    "end": "2178860"
  },
  {
    "text": "case the action is to undo so there's a link at the bottom but a fan fantastic product if you're not aware of them and",
    "start": "2178860",
    "end": "2184790"
  },
  {
    "start": "2184000",
    "end": "2273000"
  },
  {
    "text": "last one just to mention is around log tooling for logging and alerting for",
    "start": "2184790",
    "end": "2189960"
  },
  {
    "text": "logging so this one is really really simple but we're writing code and we have a decision point an if statement if",
    "start": "2189960",
    "end": "2196770"
  },
  {
    "text": "statements are pretty common so if this then everything is good otherwise there's a problem we want to make it",
    "start": "2196770",
    "end": "2202740"
  },
  {
    "text": "trivial for any one of us to receive a notification when that branch gets executed and the way that we've",
    "start": "2202740",
    "end": "2209130"
  },
  {
    "text": "instrumented that is you simply create a prefix so in this case the prefix is flow alerts error just log info or log",
    "start": "2209130",
    "end": "2216930"
  },
  {
    "text": "error whatever you want floored alert error and your message and then you go to a logging system malaga aggregator",
    "start": "2216930",
    "end": "2222870"
  },
  {
    "text": "we're using a company called sumo logic at gilt we use Splunk and in there you just save a search in real time or every",
    "start": "2222870",
    "end": "2229320"
  },
  {
    "text": "15 minutes if you ever see this string please email these people or me and that's it and it works across the board",
    "start": "2229320",
    "end": "2235260"
  },
  {
    "text": "right and so what this really means is that as we go through as we start building our applications we know that",
    "start": "2235260",
    "end": "2240660"
  },
  {
    "text": "things are gonna happen that we're not aware of trivial to notify us of something going on and this I think for",
    "start": "2240660",
    "end": "2246840"
  },
  {
    "text": "us bridges that gap between things that we don't know in advance or particularly this happens a lot with third-party",
    "start": "2246840",
    "end": "2252060"
  },
  {
    "text": "services there may be some weird validation rule that's not documented but you'll see in production this gives",
    "start": "2252060",
    "end": "2257520"
  },
  {
    "text": "us immediate fed feedback back in real time to developer to say hey this thing that you didn't expect actually happened",
    "start": "2257520",
    "end": "2262530"
  },
  {
    "text": "here you go you can fix it and now to fix it you can iterate really quickly right you know that the problem occurred",
    "start": "2262530",
    "end": "2267930"
  },
  {
    "text": "before it becomes a real issue for the business",
    "start": "2267930",
    "end": "2272180"
  },
  {
    "start": "2273000",
    "end": "2385000"
  },
  {
    "text": "okay I think just the kind of summarize a few key takeaways in terms of thinking about how we design production to be",
    "start": "2273400",
    "end": "2278680"
  },
  {
    "text": "testable when they're really big learnings is that this has to start at the beginning of a project right so we build new software we can think about",
    "start": "2278680",
    "end": "2285700"
  },
  {
    "text": "how we're going to test in production verify in production and if we do that then actually there's lots of ways to",
    "start": "2285700",
    "end": "2290800"
  },
  {
    "text": "make it safe and the the value it provides is incredible so just a few specific things learning to trust our",
    "start": "2290800",
    "end": "2297460"
  },
  {
    "text": "tests like really trusting our tests and doing the work that's needed to actually try and trust your tests and then if you",
    "start": "2297460",
    "end": "2303790"
  },
  {
    "text": "have high quality tests you can just run a subset of those in production all the time an investment in continuous delivery being able to deploy quickly",
    "start": "2303790",
    "end": "2311320"
  },
  {
    "text": "being able to rollback quickly in a systematic way pretty important interestingly the way we think about",
    "start": "2311320",
    "end": "2317740"
  },
  {
    "text": "this is we don't actually have any gates to deploy right the typical process uploaded PR the tests run the tests are",
    "start": "2317740",
    "end": "2325420"
  },
  {
    "text": "green developers confident emergency PR it's on its way to production but if you",
    "start": "2325420",
    "end": "2330430"
  },
  {
    "text": "can't wait for the test you just merge the PR and we chose to do that because in an emergency situation we need the deploy of the rollback to be fast and",
    "start": "2330430",
    "end": "2337510"
  },
  {
    "text": "fundamentally we want the same tooling to be used in normal mode of operation as well as kind of the rare emergencies",
    "start": "2337510",
    "end": "2342940"
  },
  {
    "text": "this notion of sandbox accounts not just for third-party libraries as we build software that other people in our",
    "start": "2342940",
    "end": "2348100"
  },
  {
    "text": "company are consuming we can provide them really nice ways to safely test against our applications or API is in",
    "start": "2348100",
    "end": "2354880"
  },
  {
    "text": "production we mentioned mocking we're really if if it's a handwritten mock that's a one-off that peel is not great",
    "start": "2354880",
    "end": "2362950"
  },
  {
    "text": "but if it's a mock that you can really trust me because it comes it comes from a specification that's being used in",
    "start": "2362950",
    "end": "2368080"
  },
  {
    "text": "production it's a hugely powerful tool to building great to writing simple and complete integration tests and finally",
    "start": "2368080",
    "end": "2375010"
  },
  {
    "text": "just making sure that there's a method to get real-time feedback from production on the off chance that",
    "start": "2375010",
    "end": "2380050"
  },
  {
    "text": "something goes and expected which never happens but occasionally will so thank",
    "start": "2380050",
    "end": "2386800"
  },
  {
    "text": "you very much [Applause]",
    "start": "2386800",
    "end": "2396828"
  },
  {
    "text": "questions oh wow lots of hands you guys",
    "start": "2396880",
    "end": "2405710"
  },
  {
    "text": "use any feature flag to enable functionality by a user by a tenant yeah",
    "start": "2405710",
    "end": "2413109"
  },
  {
    "text": "I chose not to talk specifically about how we manage deployment but dark separating deployment from release is",
    "start": "2413109",
    "end": "2419990"
  },
  {
    "text": "super important get the code in production that's different from users interacting feature Flags a lot we use",
    "start": "2419990",
    "end": "2425300"
  },
  {
    "text": "those quite a bit and then in addition on the traffic side getting really good about being able to say actually I just",
    "start": "2425300",
    "end": "2431930"
  },
  {
    "text": "want a little bit of traffic 1% of traffic or 10% of traffic and there's one tool in particular",
    "start": "2431930",
    "end": "2438290"
  },
  {
    "text": "knowing production works frees your mind to build new applications and live in bliss with rainbows and unicorns one in",
    "start": "2438290",
    "end": "2444109"
  },
  {
    "start": "2442000",
    "end": "2731000"
  },
  {
    "text": "particular is this tool called splitter that's the link came from Erik Bowman and his work at TomTom and what it",
    "start": "2444109",
    "end": "2450710"
  },
  {
    "text": "allows you to do is have a new version of a piece of software in production and then you split your real traffic into",
    "start": "2450710",
    "end": "2456710"
  },
  {
    "text": "shadow to the new version and real to the old good version and you discard the",
    "start": "2456710",
    "end": "2462140"
  },
  {
    "text": "response from the shadow right and so this gives you really safe way to deploy into production start verifying load give a little bit of load and make sure",
    "start": "2462140",
    "end": "2468290"
  },
  {
    "text": "that at the end the day everything is working as expected the metrics are there and more than that the new software supports the load as well so if",
    "start": "2468290",
    "end": "2475550"
  },
  {
    "text": "you don't know a splitter it's a fantastic tool on the the idea of not",
    "start": "2475550",
    "end": "2483319"
  },
  {
    "text": "running your application locally I'm sure a lot of developers feel that they",
    "start": "2483319",
    "end": "2488780"
  },
  {
    "text": "rely on the you know the the validation if they get from seeing it running right",
    "start": "2488780",
    "end": "2493970"
  },
  {
    "text": "there and it's right you know it's quick how how do you help get over that yeah",
    "start": "2493970",
    "end": "2499640"
  },
  {
    "text": "it's a great question I - is there I love saying software run the what we",
    "start": "2499640",
    "end": "2506089"
  },
  {
    "text": "found is that the members of the team that in that had written higher quality tests and we admire their tests were the",
    "start": "2506089",
    "end": "2513800"
  },
  {
    "text": "ones that were initially not running their code locally and it just changed the incentives it's like and that was it",
    "start": "2513800",
    "end": "2518930"
  },
  {
    "text": "it's like I aspire to write great tests if I stop writing my code locally I'm gonna force myself to write those tests",
    "start": "2518930",
    "end": "2525160"
  },
  {
    "text": "because let me no other way and it's really and I think that's the decision it's like ultimately to put it bluntly it's like if you run",
    "start": "2525160",
    "end": "2532009"
  },
  {
    "text": "your code locally you're producing terrible code so stop doing that start writing great automation and live",
    "start": "2532009",
    "end": "2537230"
  },
  {
    "text": "the life of a high quality code like that's the decision and it's a really hard decision to make right really hard",
    "start": "2537230",
    "end": "2544809"
  },
  {
    "text": "follow-up question on the running locally I do you run your tests locally",
    "start": "2548799",
    "end": "2554660"
  },
  {
    "text": "or do you actually send it up to the integration system and let it do the tests unless you get the results yeah",
    "start": "2554660",
    "end": "2559700"
  },
  {
    "text": "great question we actually do run the integration test locally they'll run in the integration environment or the CI",
    "start": "2559700",
    "end": "2564829"
  },
  {
    "text": "environment as well but yeah we do that is the process and so developers our development process if we're doing if",
    "start": "2564829",
    "end": "2571069"
  },
  {
    "text": "something chosen TDD for something right the test and when the test passed push the PR if we're designing and have a prototype and then write the test test",
    "start": "2571069",
    "end": "2577489"
  },
  {
    "text": "pass and then write the PR yeah you also",
    "start": "2577489",
    "end": "2584539"
  },
  {
    "text": "get really good at writing tests that are meaningful yes sir we actually run a",
    "start": "2584539",
    "end": "2590599"
  },
  {
    "text": "lot of automation on production and one of the issues we are heating right now is that they generate a lot of garbage",
    "start": "2590599",
    "end": "2597339"
  },
  {
    "text": "and sometimes those tests are because they're involved in a lot of sister a",
    "start": "2597339",
    "end": "2603289"
  },
  {
    "text": "lot of aspects in the system sometimes they break and then you get calls at 3:00 a.m. to to fix something that you",
    "start": "2603289",
    "end": "2612739"
  },
  {
    "text": "know you can you it can wait till eight or nine or eleven depends on when you arrive so what what are your thoughts on",
    "start": "2612739",
    "end": "2619130"
  },
  {
    "text": "that yeah so the question is really around running tests in production you're actually generating data load this will fill up and actually more than",
    "start": "2619130",
    "end": "2625730"
  },
  {
    "text": "that you may have an analytics problem because if you don't think about it it'll show up in your analytics reports so it's a good question generally what",
    "start": "2625730",
    "end": "2631970"
  },
  {
    "text": "we find though is that it's helping us find our scalability or our infrastructure management problems earlier in the lifecycle because",
    "start": "2631970",
    "end": "2638390"
  },
  {
    "text": "eventually these things are just going to happen when the next client or the bigger client or the bigger users or the TV show that brings more users whatever",
    "start": "2638390",
    "end": "2644420"
  },
  {
    "text": "it is happens right so these are just like those are actually just signs of an area of investment we need to make in",
    "start": "2644420",
    "end": "2649759"
  },
  {
    "text": "infrastructure generally and so we treasure that it's like let us and learn early on our own dime",
    "start": "2649759",
    "end": "2654950"
  },
  {
    "text": "that this is happening the second point on analytics I mean I think that is something if you go back to the guilt",
    "start": "2654950",
    "end": "2660589"
  },
  {
    "text": "use case an order was placed by a test user eventually we did have to we did have to think about this user and exclu time for",
    "start": "2660589",
    "end": "2666170"
  },
  {
    "text": "the reports otherwise your you know cancel rate approaches a hundred depending on how many orders you're",
    "start": "2666170",
    "end": "2671840"
  },
  {
    "text": "submitting so end up thinking about those things those are costs but they come at the great benefit of knowing",
    "start": "2671840",
    "end": "2677930"
  },
  {
    "text": "that everything is working a great question have you ever had your your",
    "start": "2677930",
    "end": "2684980"
  },
  {
    "text": "sandbox account conditional logic fail and an order gets placed or credit cards get charged anything like that no why",
    "start": "2684980",
    "end": "2692180"
  },
  {
    "text": "would that happen it's a good question and really the question is if the basic",
    "start": "2692180",
    "end": "2698330"
  },
  {
    "text": "missing the feature flag around sandbox accounts fails and a credit card something bad happens right unexpected to be honest is actually very very rare",
    "start": "2698330",
    "end": "2704780"
  },
  {
    "text": "and the reason it's rare is that the conditional logic ends up being very easy to test at a very high level of",
    "start": "2704780",
    "end": "2710180"
  },
  {
    "text": "equality and an integration test that's an easy thing to test and so what it ends up falling into is just the broader",
    "start": "2710180",
    "end": "2715280"
  },
  {
    "text": "camp of what is our error what is our error rate what is our bug right and it just falls in that camp so it's not any",
    "start": "2715280",
    "end": "2722390"
  },
  {
    "text": "more prevalent than any other bug that we see and then more than that actually turns out to be pretty easy to test yes",
    "start": "2722390",
    "end": "2731510"
  },
  {
    "start": "2731000",
    "end": "3018000"
  },
  {
    "text": "since you only have a production environment I assume when you run your tests locally they hit the production",
    "start": "2731510",
    "end": "2736640"
  },
  {
    "text": "environment so my question is are you familiar with any large companies or perhaps medium-sized companies that do",
    "start": "2736640",
    "end": "2742520"
  },
  {
    "text": "this type of process because I think a lot of those companies have firewalls",
    "start": "2742520",
    "end": "2747710"
  },
  {
    "text": "and such where you can't reach production from a local environment yes that's a good question it's really",
    "start": "2747710",
    "end": "2753710"
  },
  {
    "text": "around for companies that have a lockdown production environment where you may not be able to access what you need from outside this technique may not",
    "start": "2753710",
    "end": "2760430"
  },
  {
    "text": "work right and how do we manage her on that first part was like are we seeing other companies do that my feeling is",
    "start": "2760430",
    "end": "2765560"
  },
  {
    "text": "that this is actually we're just starting to talk about testing and production verification production my feeling is this is something that we're",
    "start": "2765560",
    "end": "2771590"
  },
  {
    "text": "all doing today and all of organizations at some scale at some point and I think the highest quality organizations are",
    "start": "2771590",
    "end": "2777590"
  },
  {
    "text": "probably doing this all the time to be perfectly honest because how else would they know that something's not working they rely on users and other like I",
    "start": "2777590",
    "end": "2784190"
  },
  {
    "text": "think this is very prevalent the question of like private networks interestingly at flow all of our API is",
    "start": "2784190",
    "end": "2789740"
  },
  {
    "text": "run on the public Internet API fluid at i/o and we authenticate that way we do that to eat our own dog food on the API",
    "start": "2789740",
    "end": "2794930"
  },
  {
    "text": "so for our particular you it's quite simple because we've chosen to present everything to the public generally a good example of where that",
    "start": "2794930",
    "end": "2801559"
  },
  {
    "text": "happened at gilt is we were trying to test orders on our iPhone app and the iPhone app wasn't on the VPN and so",
    "start": "2801559",
    "end": "2808160"
  },
  {
    "text": "therefore didn't have access to our staging environment and the example we gave was action response to that so",
    "start": "2808160",
    "end": "2813289"
  },
  {
    "text": "rather than try to open up and figure out how we can test our iPhone apps and get the VPN thing working and feature",
    "start": "2813289",
    "end": "2818599"
  },
  {
    "text": "flags in the app we just decided why don't we invest a little bit to make it safe and build that piece for the test",
    "start": "2818599",
    "end": "2823609"
  },
  {
    "text": "domains to submit a test order and when we did that now when we test our iPhone app he's open up the iPhone app and place an order using a test account but",
    "start": "2823609",
    "end": "2830299"
  },
  {
    "text": "it did require a little bit of investment so that the data flow that we wanted for the feature that we wanted to test was correct and I think that's",
    "start": "2830299",
    "end": "2836959"
  },
  {
    "text": "fundamentally the answer either it's available today and it's simple or it's just a trade-off is it worth the effort to make this component testable given",
    "start": "2836959",
    "end": "2844219"
  },
  {
    "text": "the benefits you're gonna gain from knowing it works and sometimes the answer is yes sometimes the answer's no a great question the fact that you have",
    "start": "2844219",
    "end": "2852890"
  },
  {
    "text": "conditional logic and you know test goes sorry can you speak a little bit closer the fact that you have conditional logic",
    "start": "2852890",
    "end": "2858529"
  },
  {
    "text": "you know test may have a different flow than actual production does not mean that she'll there is some code that only",
    "start": "2858529",
    "end": "2864679"
  },
  {
    "text": "runs in production for actual users and there may be surprises yes I think the",
    "start": "2864679",
    "end": "2870380"
  },
  {
    "text": "question is there's always gonna be a gap anyway of code path between production and test environments is kind",
    "start": "2870380",
    "end": "2875749"
  },
  {
    "text": "of how do we manage the risk of errors happening in that code path said roughly",
    "start": "2875749",
    "end": "2881390"
  },
  {
    "text": "I hear that roughly correctly yeah yeah",
    "start": "2881390",
    "end": "2890420"
  },
  {
    "text": "so I think in coverage we view this as really complimentary to all of the",
    "start": "2890420",
    "end": "2895519"
  },
  {
    "text": "testing that we're doing this isn't a replacement right we're still writing integration tests and I think the way to think about it which actually",
    "start": "2895519",
    "end": "2901249"
  },
  {
    "text": "interesting is by not spending 30 to 40 percent of time on staging it frees us up to write more tests and integration and in production and actually to",
    "start": "2901249",
    "end": "2907939"
  },
  {
    "text": "instrumental Ertz right we have more time to do that stuff which is a higher value higher return on money in time",
    "start": "2907939",
    "end": "2913130"
  },
  {
    "text": "than dealing with pulling our hair out trying to get staging to run but we look at it really holistically and if a",
    "start": "2913130",
    "end": "2918619"
  },
  {
    "text": "particular feature is too expensive to test in production right more integration tests around it if a particular feature is very easy to",
    "start": "2918619",
    "end": "2924319"
  },
  {
    "text": "verify and obviously safe and production great do that and spend less time running the integration test but ultimately it's that end Enlai",
    "start": "2924319",
    "end": "2930380"
  },
  {
    "text": "cycle of quality that were really after at the end of the day great with with",
    "start": "2930380",
    "end": "2937850"
  },
  {
    "text": "the tests running against new sandbox orgs in in production do you ever run",
    "start": "2937850",
    "end": "2943250"
  },
  {
    "text": "into problems with the test running for too long taking too long to run with all the build-up the question is if the",
    "start": "2943250",
    "end": "2950120"
  },
  {
    "text": "tests are running on sandbox orgs do we ever have a problem the test running too long I mean we do you know if he if the",
    "start": "2950120",
    "end": "2956540"
  },
  {
    "text": "test does fail or is terminated never gets garbage collected how do you manage garbage collection of those tests and",
    "start": "2956540",
    "end": "2961640"
  },
  {
    "text": "the are creating data and flow itself as an event-driven stream so all this data is actually going out to the event bus",
    "start": "2961640",
    "end": "2967430"
  },
  {
    "text": "and being published and replicated but interestingly it hasn't been a big issue because if there is a problem running a",
    "start": "2967430",
    "end": "2974450"
  },
  {
    "text": "test or the test is taking too long it's probably highlights an area that we need to improve performance in the platform and the second thing that it did really",
    "start": "2974450",
    "end": "2980540"
  },
  {
    "text": "interestingly is it forced us to handle the delete events quite well and the first pass through the system we didn't",
    "start": "2980540",
    "end": "2986210"
  },
  {
    "text": "we're really good inserts updates everybody is really really happy and we looked in this system over here all the sudden has 10,000 deleted organizations",
    "start": "2986210",
    "end": "2994070"
  },
  {
    "text": "they're all sandbox like why haven't we clean those up I mean I should to go back through the system and instrument the delete event properly all the way",
    "start": "2994070",
    "end": "2999410"
  },
  {
    "text": "through so that we can clean up our software which we viewed is actually quite valuable like let's do the right thing and actually write our software to",
    "start": "2999410",
    "end": "3005830"
  },
  {
    "text": "be 100% correct I think we're out of time but absolutely thank you very very",
    "start": "3005830",
    "end": "3013390"
  },
  {
    "text": "much this is a great fun topic [Applause]",
    "start": "3013390",
    "end": "3019200"
  }
]