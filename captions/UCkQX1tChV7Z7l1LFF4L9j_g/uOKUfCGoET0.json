[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "it's almost a pleasure to be here be here at Q Khan I always learned so much I hope to teach you a little bit or tell",
    "start": "4310",
    "end": "11600"
  },
  {
    "text": "a little bit about my story or sort of around events appreciating events and",
    "start": "11600",
    "end": "18830"
  },
  {
    "text": "and and I mean how I how I see them being useful in implementing modern systems today so I tried it this is it's",
    "start": "18830",
    "end": "30829"
  },
  {
    "text": "it's a little bit theoretical talk I'll try to sort of teach you how to think in events and design around events and",
    "start": "30829",
    "end": "37720"
  },
  {
    "text": "hopefully you can supply that in practice when you when you get home eventually",
    "start": "37720",
    "end": "43360"
  },
  {
    "text": "so but why should you care about events at all I mean why why do I think that they are",
    "start": "43360",
    "end": "48950"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "important in my experience events can can can help us with the ton of things they can think they can help us drive",
    "start": "48950",
    "end": "55070"
  },
  {
    "text": "autonomy reduce risk help us move faster with reduced risk so help us to increase",
    "start": "55070",
    "end": "62120"
  },
  {
    "text": "things like loose coupling right more stable systems might right right systems",
    "start": "62120",
    "end": "67490"
  },
  {
    "text": "like you really so take on more and more load stay scale elastically I mean to",
    "start": "67490",
    "end": "72649"
  },
  {
    "text": "really take advantage of the promise of cloud over cloud computing and sort of pay-as-you-go",
    "start": "72649",
    "end": "77920"
  },
  {
    "text": "increase resilience of the system help you sort to recover from failure and",
    "start": "77920",
    "end": "83439"
  },
  {
    "text": "increase any increase of trace abilities to understand observability and into",
    "start": "83439",
    "end": "89329"
  },
  {
    "text": "into the system and also funky things like like time travel that that can be",
    "start": "89329",
    "end": "96469"
  },
  {
    "text": "really really helpful also to serve understand what went wrong understand systems Osetra debug ability and things",
    "start": "96469",
    "end": "102469"
  },
  {
    "text": "like that the question is though is like why now I mean there's a lot of talking",
    "start": "102469",
    "end": "107810"
  },
  {
    "text": "about events event-driven architecture seems really hyped again now the question is why I mean events have been",
    "start": "107810",
    "end": "113749"
  },
  {
    "text": "around for decades I I mean I'd be using them myself for for about - almost 20",
    "start": "113749",
    "end": "119779"
  },
  {
    "text": "years in different settings and situations etcetera so why the sudden",
    "start": "119779",
    "end": "124849"
  },
  {
    "text": "hike around events I think it's essentially four things might be more but I first sort of distill 4/4 or a key",
    "start": "124849",
    "end": "133310"
  },
  {
    "text": "drivers I think to events the first one is the move to cloud and and multi-core architectures events",
    "start": "133310",
    "end": "139400"
  },
  {
    "text": "really help us to take full advantage of that it fits very well with the type of architecture the second one is like this",
    "start": "139400",
    "end": "147080"
  },
  {
    "text": "is a move to micro services and and distributed systems in general and",
    "start": "147080",
    "end": "154280"
  },
  {
    "text": "another one is Cyril it's moved to to to more data centric applications like",
    "start": "154280",
    "end": "159830"
  },
  {
    "text": "they're you know apps therefore more driven by data that need to react to data and often close to real-time and",
    "start": "159830",
    "end": "166130"
  },
  {
    "text": "how how we can serve do that while dealing with all this or a massive data that users produced today all the low",
    "start": "166130",
    "end": "173990"
  },
  {
    "text": "leaders in high throughput and also you better customers they just more more more and more and faster you know",
    "start": "173990",
    "end": "180230"
  },
  {
    "text": "they're they want more features more data faster than one better up times they want better response times etc etc",
    "start": "180230",
    "end": "185840"
  },
  {
    "text": "and they have learned to be very very picky as well so but let's start with",
    "start": "185840",
    "end": "193370"
  },
  {
    "text": "the basics what is an event okay events event you serve any an immutable",
    "start": "193370",
    "end": "199970"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "fact of information okay you know you know knowledge can only grow you can",
    "start": "199970",
    "end": "206690"
  },
  {
    "text": "only add in all these you can't retract knowledge so so insert it's right and and since facts or raloo for events or",
    "start": "206690",
    "end": "214209"
  },
  {
    "text": "facts in fact it's all about knowledge so the means of facts can only accrue you can only add facts okay this means",
    "start": "214209",
    "end": "222980"
  },
  {
    "text": "that there are events in fact they can be disregarded and if you if you receive",
    "start": "222980",
    "end": "229070"
  },
  {
    "text": "a new piece of information you can choose to not believe in that it might conflict with your existing facts or",
    "start": "229070",
    "end": "235100"
  },
  {
    "text": "understanding of the world right so you can disregard immense facts but once you",
    "start": "235100",
    "end": "242870"
  },
  {
    "text": "have accepted them they can't be retracted and really they can't be",
    "start": "242870",
    "end": "250160"
  },
  {
    "text": "deleted there might be new facts that arrive into the system right that sort of question the fact that you all have",
    "start": "250160",
    "end": "256970"
  },
  {
    "text": "to already already have but you can't go back and delete things too if you've already have accepted sir so knowledge",
    "start": "256970",
    "end": "263330"
  },
  {
    "text": "can of course change but it's only it's only changing by accruing more and more and more and more information okay",
    "start": "263330",
    "end": "271780"
  },
  {
    "text": "so yes the events of fact can actually invalidate exist existing facts we do that all the time so this is my view of",
    "start": "272000",
    "end": "279890"
  },
  {
    "text": "facts and how they relate to events their advances or the materialization or the fact sorry this much stuff working",
    "start": "279890",
    "end": "291620"
  },
  {
    "text": "okay so what about event-driven services what is how can you define an",
    "start": "291620",
    "end": "296760"
  },
  {
    "start": "292000",
    "end": "292000"
  },
  {
    "text": "event-driven service well the first thing it does is that it receives and",
    "start": "296760",
    "end": "301980"
  },
  {
    "text": "reacts to facts facts serve arrive in my subscriber facts right and sir facts",
    "start": "301980",
    "end": "308490"
  },
  {
    "text": "arrive into that that that's that's the service so that my syrup might might",
    "start": "308490",
    "end": "315660"
  },
  {
    "text": "serve reactants or call some sort of of reaction and out of that reaction you",
    "start": "315660",
    "end": "322650"
  },
  {
    "text": "can create new facts that you then publish to the rest of the world so based upon what you have understood what",
    "start": "322650",
    "end": "329610"
  },
  {
    "text": "you have sort of reacted on top of that and an event-driven service anyway syrup",
    "start": "329610",
    "end": "334830"
  },
  {
    "text": "helps us read invert the control flow right and and they can this can really heat helps us for a minimize coupling",
    "start": "334830",
    "end": "341910"
  },
  {
    "text": "between services that's sort of that you that you are events just sort of ride as",
    "start": "341910",
    "end": "351470"
  },
  {
    "text": "sort of as as they sort of happen and and and you react to them as they arrive",
    "start": "351470",
    "end": "359150"
  },
  {
    "text": "without sort of being dependent on on that a certain action should happen in a",
    "start": "359150",
    "end": "364650"
  },
  {
    "text": "certain orbit or service at a certain point in time okay",
    "start": "364650",
    "end": "370580"
  },
  {
    "text": "how so and so this we are talking here about the events do you are they are in immutable the question is then mutable",
    "start": "370580",
    "end": "378150"
  },
  {
    "text": "statement does that have a place of course it does right but I really believe that mutable state it needs to",
    "start": "378150",
    "end": "383190"
  },
  {
    "text": "be fully contained then within within that service so what's your sort of you receive like immutable facts arriving to",
    "start": "383190",
    "end": "389670"
  },
  {
    "text": "your service they serve things that you serve Kanaka can accept as being the",
    "start": "389670",
    "end": "395220"
  },
  {
    "text": "truth then you sort of perform some sort of service some sort of action some sort",
    "start": "395220",
    "end": "401700"
  },
  {
    "text": "of side effect right and and and and and there you can use sort of mutable state but it's it's but",
    "start": "401700",
    "end": "410540"
  },
  {
    "text": "it's extremely important that that mutable state that is sort of non-observable to the to the rest of the world that other sir can't see that",
    "start": "410540",
    "end": "418900"
  },
  {
    "text": "instead you know it should all be used for local carpet computations ideally at",
    "start": "418900",
    "end": "424820"
  },
  {
    "text": "least so and so once you're done with the processing wants just to reach some sort of of consensus right internally",
    "start": "424820",
    "end": "433550"
  },
  {
    "text": "with serving down your processing etc then you're an your register to tell the world about your results whatever that",
    "start": "433550",
    "end": "441170"
  },
  {
    "text": "might be then you create an immutable value as they're representing that",
    "start": "441170",
    "end": "447620"
  },
  {
    "text": "understanding we're that that thing that you want to sort of tell the world about",
    "start": "447620",
    "end": "452630"
  },
  {
    "text": "and you publish that as an immutable value out to the rest of the world okay so you so so mutable state is something",
    "start": "452630",
    "end": "459530"
  },
  {
    "text": "that you only use internally ideally and you receive immutable facts and your published immutable facts that means",
    "start": "459530",
    "end": "465290"
  },
  {
    "text": "that others now can conserve based their reasoning on stable values things they",
    "start": "465290",
    "end": "470780"
  },
  {
    "text": "they know other services no it won't change that you can't just retract you",
    "start": "470780",
    "end": "476600"
  },
  {
    "text": "know so if we take a little illustration you let's say we have when we have some",
    "start": "476600",
    "end": "482000"
  },
  {
    "text": "sort of some sort of user here and the user this user sends a command to some",
    "start": "482000",
    "end": "489620"
  },
  {
    "text": "sort of service it ends up in this mailbox or here and that sort of service",
    "start": "489620",
    "end": "496640"
  },
  {
    "text": "then picks it up and does some sort of processing now this service then a lobster as a result of this processing",
    "start": "496640",
    "end": "503480"
  },
  {
    "text": "then can create an event representing the outcome of that what you're in want",
    "start": "503480",
    "end": "510380"
  },
  {
    "text": "to tell the world that they should be interested in what happened and that's",
    "start": "510380",
    "end": "515510"
  },
  {
    "text": "republished in event bus or an event stream okay that event stream then can",
    "start": "515510",
    "end": "520520"
  },
  {
    "text": "send their kids and then relay this events to other services that are subscribing to the to the kind of event",
    "start": "520520",
    "end": "527120"
  },
  {
    "text": "that you have just produced okay is it dense up in their in their mailboxes and",
    "start": "527120",
    "end": "533140"
  },
  {
    "text": "some processing happen etc right that awesome generate new events etc so this is the",
    "start": "533140",
    "end": "540049"
  },
  {
    "text": "way you so you can sort of hook up communication between between services but it doesn't have to be that that is",
    "start": "540049",
    "end": "546799"
  },
  {
    "text": "the only other services or components that that's or subscribe to your events it might be that your events are pushed",
    "start": "546799",
    "end": "553100"
  },
  {
    "text": "down into some sort of database you know sequel database no sequel database or for HDFS for example for have like spark",
    "start": "553100",
    "end": "560989"
  },
  {
    "text": "jobs pick it up later for doing like big data analysis and your streaming using fleeing or something like that or that",
    "start": "560989",
    "end": "568069"
  },
  {
    "text": "you want to sort of sort of hook up sort of other systems or other subsystems you",
    "start": "568069",
    "end": "574639"
  },
  {
    "text": "know to your to your systems so so the listener of these events can be a Kimmy almost anything which is which is really",
    "start": "574639",
    "end": "581299"
  },
  {
    "text": "interesting and one one one key aspect here is that this whole world is are eventually consistent all of these",
    "start": "581299",
    "end": "588139"
  },
  {
    "text": "events flow in a fully asynchronous fashion that this means that there is no",
    "start": "588139",
    "end": "594499"
  },
  {
    "text": "there aren't any transactions like there's no straw that's not you know strong consistency I really believe a",
    "start": "594499",
    "end": "599959"
  },
  {
    "text": "strong consistency is really it's overused in our industry in general it's really it's the wrong default",
    "start": "599959",
    "end": "605689"
  },
  {
    "text": "sometimes you absolutely need strong consistency I'm not I'm not saying that but it should not be what you reach for",
    "start": "605689",
    "end": "611720"
  },
  {
    "text": "is the first thing it should be sort of something a rare thing that you that you model when you absolutely have no other",
    "start": "611720",
    "end": "618169"
  },
  {
    "text": "options I think going all-in on eventual consistency gibson law gives you a lot more Headroom for things like",
    "start": "618169",
    "end": "624169"
  },
  {
    "text": "scalability resilience loose coupling having multiple teams you know develop software independently of each other is",
    "start": "624169",
    "end": "630799"
  },
  {
    "text": "roll it out and then having you know the protocols between these services define the relationships okay so so in this way",
    "start": "630799",
    "end": "640939"
  },
  {
    "text": "abusing the mainstream means that you can use it as a communication fabric between your your all your services you",
    "start": "640939",
    "end": "646189"
  },
  {
    "text": "can use this use it as an integration fabric so integrating other other sirup",
    "start": "646189",
    "end": "651980"
  },
  {
    "text": "systems other types of infrastructure etc you can use it as a rep replication",
    "start": "651980",
    "end": "658879"
  },
  {
    "text": "fabric you know to replicate changes for resilience in these type of things between data centers between you know",
    "start": "658879",
    "end": "666189"
  },
  {
    "text": "cross nodes etc whatever is needed and you can use as your means of consensus to reach",
    "start": "666189",
    "end": "672740"
  },
  {
    "text": "agreement between services using a lot of different techniques I missed CCR DT",
    "start": "672740",
    "end": "678170"
  },
  {
    "text": "is that Martin Clement talked about yesterday is an excellent way to to try to reach consensus you know any fully sort of decentralized and eventually",
    "start": "678170",
    "end": "685730"
  },
  {
    "text": "consistent fashion but there are the two other techniques as well and you can use the advanced dream as for the foundation",
    "start": "685730",
    "end": "691790"
  },
  {
    "text": "for persistence as we will talk about later so a lot of things open up when you think about the world and think",
    "start": "691790",
    "end": "698510"
  },
  {
    "text": "about sort of truth and facts as advanced being and being serviced or emitted in an asynchronous fashion will",
    "start": "698510",
    "end": "704930"
  },
  {
    "text": "be reliable medium and but it's very important that we have to rely on eventual consistency again but I think a",
    "start": "704930",
    "end": "712160"
  },
  {
    "text": "lot of people get gets rewarded about that but but I think I mean the best way is to usually just take a step back to",
    "start": "712160",
    "end": "718880"
  },
  {
    "text": "think how is the world actually working it's I mean the world is eventually consistent there's really no such thing",
    "start": "718880",
    "end": "725150"
  },
  {
    "text": "as strong consistency ever anywhere in the world really so so so if we just",
    "start": "725150",
    "end": "731030"
  },
  {
    "text": "take a step back and try to think how should we model these in the real world how do we model it with humans or",
    "start": "731030",
    "end": "736100"
  },
  {
    "text": "companies or you know a chorus or whatever and then then just try to map that to to software usually makes a lot",
    "start": "736100",
    "end": "743930"
  },
  {
    "text": "of things fall into place where you should this reach for struct consistency and that you know the whole is sequel",
    "start": "743930",
    "end": "749240"
  },
  {
    "text": "database just out of habit because it we think it makes things easier and it does until we we want to achieve you know the",
    "start": "749240",
    "end": "755690"
  },
  {
    "text": "trace like resilience and scale and and and and and you know multiple autonomous teams you know delivering software",
    "start": "755690",
    "end": "762170"
  },
  {
    "text": "independently of each other etc etc so don't fight reality's steps to try to",
    "start": "762170",
    "end": "767330"
  },
  {
    "text": "embrace reality because you know it's it's it's a fact of life that information can only travel at the speed",
    "start": "767330",
    "end": "773690"
  },
  {
    "text": "of light you know this puts really a hard cap at the at the speed of",
    "start": "773690",
    "end": "778850"
  },
  {
    "text": "information the speed of how fast information can can flow between between",
    "start": "778850",
    "end": "784520"
  },
  {
    "text": "things this is really reality of systems today and you know this is no some",
    "start": "784520",
    "end": "790490"
  },
  {
    "text": "esoteric thing that that's only you know you know physicists deal with it's actually something that we as computer",
    "start": "790490",
    "end": "796460"
  },
  {
    "text": "scientists actually experience very often today that this delay matters nowadays things move so fast",
    "start": "796460",
    "end": "802680"
  },
  {
    "text": "so this means in practice that everything we see everything you know even we as humans everything we like to",
    "start": "802680",
    "end": "808649"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "hear see feel touch is actually you know remnants from the past if we observe",
    "start": "808649",
    "end": "815009"
  },
  {
    "text": "something it's all it has already happened often quite some time ago actually and and so reserve role is just",
    "start": "815009",
    "end": "822119"
  },
  {
    "text": "looking into the past it's always in the eye of the of the beholder and the present the thing that we take you know",
    "start": "822119",
    "end": "829050"
  },
  {
    "text": "for granted is being now is actually relative we all experience different now is it and and and detector of huge",
    "start": "829050",
    "end": "835949"
  },
  {
    "text": "implications and how we build distributed systems we're latency so actually has a big effect so as far as",
    "start": "835949",
    "end": "846990"
  },
  {
    "start": "843000",
    "end": "843000"
  },
  {
    "text": "soon as we serve because as soon as we exit the boundary of is all the service no we enter service wild ocean of",
    "start": "846990",
    "end": "854579"
  },
  {
    "text": "non-determinism that's what we call distributed systems that's through this space between these services is the",
    "start": "854579",
    "end": "860790"
  },
  {
    "text": "space where everything can fall apart where like the systems can start failing in the most spectacular ways but you",
    "start": "860790",
    "end": "866189"
  },
  {
    "text": "know messages gets dropped reordered you know garbled etc so this is my top might",
    "start": "866189",
    "end": "874199"
  },
  {
    "text": "sound terrifying and and and to some extent it is record but but it's also this de space in between you know this",
    "start": "874199",
    "end": "881490"
  },
  {
    "text": "creates a non-deterministic space in between services the network that sort",
    "start": "881490",
    "end": "886589"
  },
  {
    "text": "of gives a solution for things like scale for things like resilience for you",
    "start": "886589",
    "end": "892170"
  },
  {
    "text": "know for things like it's a full elasticity for things like isolation etc",
    "start": "892170",
    "end": "897740"
  },
  {
    "text": "so so but in order to stay sane in this world we need to be able to model",
    "start": "897740",
    "end": "904069"
  },
  {
    "text": "uncertainty because it's really all about uncertainty as soon as you leave these for this safe zone of the service",
    "start": "904069",
    "end": "912019"
  },
  {
    "text": "and I think it's extremely important that we don't sort try to hide the",
    "start": "912019",
    "end": "917279"
  },
  {
    "text": "network hide the complexities like last bit you know it's been done in the past multiple times like RPC XA transactions",
    "start": "917279",
    "end": "925379"
  },
  {
    "text": "in core bar etc I mean it's it's it's distributed objects in general I believe",
    "start": "925379",
    "end": "930569"
  },
  {
    "text": "this is a server this is a to this problem because we try to hide",
    "start": "930569",
    "end": "936999"
  },
  {
    "text": "away too much sort of a convenience that sort of leaks you know Joel Plaskett",
    "start": "936999",
    "end": "944559"
  },
  {
    "text": "talks about the law of leaky abstractions it's just this abstraction leaks too much to be really be to really be useful in this sort of extremely hard",
    "start": "944559",
    "end": "952119"
  },
  {
    "text": "world we call complex world it's better to this goes like tackle these things",
    "start": "952119",
    "end": "957399"
  },
  {
    "text": "head-on and and you know Pat Helen said that in a system which can account on",
    "start": "957399",
    "end": "962709"
  },
  {
    "text": "distributed transactions the management of a certainty must be implemented in the business logic it's our job to actually implement that and I believe is",
    "start": "962709",
    "end": "969699"
  },
  {
    "text": "they're actually not that hard because it once again if you step back in map reality to our software a lot of things",
    "start": "969699",
    "end": "974829"
  },
  {
    "text": "actually fold it fully into place and I really believe that events can lead to greater certainty so if so if we modeled",
    "start": "974829",
    "end": "983230"
  },
  {
    "text": "the world as events and how events flow you know workflow that he then it can really help us who get quite far on this",
    "start": "983230",
    "end": "991149"
  },
  {
    "text": "on this journey and you know mark Burgas he did he did he did a talk on Monday I",
    "start": "991149",
    "end": "998410"
  },
  {
    "text": "think it was about promise theory and other things I mean he said that an autonomous component can only promise",
    "start": "998410",
    "end": "1004740"
  },
  {
    "text": "his own behavior yeh autonomy makes information local",
    "start": "1004740",
    "end": "1010429"
  },
  {
    "text": "leading to greater certainty and stability you know I I came with",
    "start": "1010429",
    "end": "1017129"
  },
  {
    "text": "probably give a whole talk and promise there which I think services is a very interesting we are viewing the world that's through it's highly relevant to",
    "start": "1017129",
    "end": "1023459"
  },
  {
    "text": "the to the world we live in today but I'll just let em let to give you this code to let us try to sink in a little",
    "start": "1023459",
    "end": "1030839"
  },
  {
    "text": "bit because I think this this sort of the fact that autonomy makes information local and and and that a service only",
    "start": "1030839",
    "end": "1037709"
  },
  {
    "text": "can promise his own behavior not others you know you can have profound impact and how we design protocols that",
    "start": "1037709",
    "end": "1045240"
  },
  {
    "text": "actually are cancer help us or thrive in",
    "start": "1045240",
    "end": "1051299"
  },
  {
    "text": "this very very hard world and and and",
    "start": "1051299",
    "end": "1057510"
  },
  {
    "start": "1057000",
    "end": "1057000"
  },
  {
    "text": "and I think events can serve can also then the inverse of this is non deterministic ocean you know is that",
    "start": "1057510",
    "end": "1063299"
  },
  {
    "text": "events can also help us to craft this autonomous Island of determinism that you know within this this this this",
    "start": "1063299",
    "end": "1070440"
  },
  {
    "text": "this island you can survey assume strong consistency if you if you do it right",
    "start": "1070440",
    "end": "1075960"
  },
  {
    "text": "and and we can here we can actually live happily under the illusion the time the",
    "start": "1075960",
    "end": "1081600"
  },
  {
    "text": "time is absolute at least in our little on our little island that there is a single prescient that read that there is",
    "start": "1081600",
    "end": "1087570"
  },
  {
    "text": "a single now on our little island you know and we can we just focus on that not not worried about you know that the",
    "start": "1087570",
    "end": "1094950"
  },
  {
    "text": "crazy world outside or a little component and then we define you know well specified protocols that receive",
    "start": "1094950",
    "end": "1101670"
  },
  {
    "text": "and emit events that help us to connect",
    "start": "1101670",
    "end": "1107940"
  },
  {
    "text": "these little islands of sanity or whatever you want to call them it's also",
    "start": "1107940",
    "end": "1117090"
  },
  {
    "text": "important you know because as seen as Sydney Decker said says that accidents they come from real relationships not",
    "start": "1117090",
    "end": "1124350"
  },
  {
    "text": "broken parts from his great book drift into failure it's really not with book about general you know systems thinking",
    "start": "1124350",
    "end": "1131280"
  },
  {
    "text": "in terms of or failure it's not really related to computer code to compute computer science because because we can",
    "start": "1131280",
    "end": "1138030"
  },
  {
    "text": "see it's all it's only when you start sort of putting things together into into more or less complex more and more",
    "start": "1138030",
    "end": "1144210"
  },
  {
    "text": "complex scenarios like complex systems that accidents serve really fully fully",
    "start": "1144210",
    "end": "1151590"
  },
  {
    "text": "had materialized let's say and and and as rich richer cook said in this Venus",
    "start": "1151590",
    "end": "1158340"
  },
  {
    "text": "really if for to mean influential people how is how complex systems failed is",
    "start": "1158340",
    "end": "1163560"
  },
  {
    "text": "that complex systems run us as broken systems and in a complex system",
    "start": "1163560",
    "end": "1169050"
  },
  {
    "text": "something is always failing somewhere okay that's a fact of life you bury them so",
    "start": "1169050",
    "end": "1177240"
  },
  {
    "text": "some soup so having sometimes some sort strategy that we would try to prevent failure it's not sustainable",
    "start": "1177240",
    "end": "1184380"
  },
  {
    "text": "right we need an approach where we try to see where we fully embrace failure and bring it in you know and have it",
    "start": "1184380",
    "end": "1191640"
  },
  {
    "text": "have the part of a programming model that thus that's where failure is a natural state in the Apple in",
    "start": "1191640",
    "end": "1198759"
  },
  {
    "text": "our component lifecycle because it will happen we will end up in that state instead of sort of trying to be scarce",
    "start": "1198759",
    "end": "1205179"
  },
  {
    "text": "scared about it and try to prevent it at all cost we should embrace it and make",
    "start": "1205179",
    "end": "1210489"
  },
  {
    "text": "it and look at it something it says something natural something inevitable so lesson that I personally learn the",
    "start": "1210489",
    "end": "1218589"
  },
  {
    "start": "1215000",
    "end": "1215000"
  },
  {
    "text": "hard way is that resilience is by design okay it's really nothing that you can",
    "start": "1218589",
    "end": "1223899"
  },
  {
    "text": "sort bolt on afterwards way too often I see serve you know you know people",
    "start": "1223899",
    "end": "1229479"
  },
  {
    "text": "building systems beautiful systems you know thinking about everything will go right you know and then they and then",
    "start": "1229479",
    "end": "1236469"
  },
  {
    "text": "they and then they are sort of at the end of the soul of the application development lifecycle you know they",
    "start": "1236469",
    "end": "1241719"
  },
  {
    "text": "think oh we better deal with we have resilience or high availability and they",
    "start": "1241719",
    "end": "1247779"
  },
  {
    "text": "sort of just for think they consider like to slap that on to the own on to the service or or on or on to the system",
    "start": "1247779",
    "end": "1255339"
  },
  {
    "text": "either by directly turning on WebLogic clustering or WebSphere clustering and hope for the best etc or we're like through it like like",
    "start": "1255339",
    "end": "1262809"
  },
  {
    "text": "sort of slap a data grid on top of it like put the shopping cart there and hopefully everything will be fine you",
    "start": "1262809",
    "end": "1269019"
  },
  {
    "text": "know a bit of things Eddie that's not a sustainable strategy because since failure it can happen anywhere and it",
    "start": "1269019",
    "end": "1275679"
  },
  {
    "text": "will happen it's better just built it into the lifecycle of the app or the components themselves to design around",
    "start": "1275679",
    "end": "1285399"
  },
  {
    "text": "resilience you know this is the photo over over over homing in in in Texas",
    "start": "1285399",
    "end": "1291519"
  },
  {
    "text": "there was this redesign to resist floodwaters and it was one of the few",
    "start": "1291519",
    "end": "1298569"
  },
  {
    "text": "homes the syrup survived Hurricane Hurricane Ike into into in 2008 so it's",
    "start": "1298569",
    "end": "1306429"
  },
  {
    "text": "really sort of a good symbol for resilience by design so I really think",
    "start": "1306429",
    "end": "1312069"
  },
  {
    "text": "that we need to fundamentally change the way we think about failure in general you know as I said before failure is",
    "start": "1312069",
    "end": "1317829"
  },
  {
    "text": "inevitable failure is natural failure will happen it's really nothing exceptional about failure we serve",
    "start": "1317829",
    "end": "1323709"
  },
  {
    "text": "ironic that we that in Java or in a lot of other languages we call you know sort of failures exceptions",
    "start": "1323709",
    "end": "1329919"
  },
  {
    "text": "it's nothing exceptional about them they are expected to happen okay so",
    "start": "1329919",
    "end": "1336429"
  },
  {
    "text": "design firsts for failure and try to manage it instead or preventing it that's my my philosophy so and so what",
    "start": "1336429",
    "end": "1344080"
  },
  {
    "start": "1343000",
    "end": "1343000"
  },
  {
    "text": "are the requirements then for for a same failure model I believe that failure it needs to firm they need to first be",
    "start": "1344080",
    "end": "1350500"
  },
  {
    "text": "contained fully contained and this helps if you build if you build fully",
    "start": "1350500",
    "end": "1355720"
  },
  {
    "text": "autonomous services this really really helps you know you need full isolation so you don't blow this or end up with",
    "start": "1355720",
    "end": "1362440"
  },
  {
    "text": "this error cascading failures like one failure we're taking down the next",
    "start": "1362440",
    "end": "1367720"
  },
  {
    "text": "service because the all your components are so strongly coupled you know that takes down the next it takes down the",
    "start": "1367720",
    "end": "1373780"
  },
  {
    "text": "next it takes down the next and after you know not too long your your your whole cluster is now I've seen this way",
    "start": "1373780",
    "end": "1379960"
  },
  {
    "text": "too many times so contain the failure to avoid cascading failures you need to",
    "start": "1379960",
    "end": "1385090"
  },
  {
    "text": "reify the fail your ass ass ass events you know you know even if you have a",
    "start": "1385090",
    "end": "1390730"
  },
  {
    "text": "fully event-driven model then event storm all love you the lifecycle the communication flow of your system if you",
    "start": "1390730",
    "end": "1398950"
  },
  {
    "text": "make failures for something natural that's also there's also information that needs to flow there's also communication okay so it's",
    "start": "1398950",
    "end": "1407110"
  },
  {
    "text": "not that it's natural to look at failures it's just events that flow alongside the rest of your of your of",
    "start": "1407110",
    "end": "1413350"
  },
  {
    "text": "your of your events okay so refi them as advance you need to signal them in the",
    "start": "1413350",
    "end": "1420760"
  },
  {
    "text": "fully asynchronous fashion if you don't signal them in an asynchronous fashion you know then you end up with the strong",
    "start": "1420760",
    "end": "1427179"
  },
  {
    "text": "coupling in it that's what can can start taking down systems and then and then",
    "start": "1427179",
    "end": "1434740"
  },
  {
    "text": "they also need to be serve observed you know by by by by one or by five or by",
    "start": "1434740",
    "end": "1441640"
  },
  {
    "text": "ten or whoever many sort of listeners that that that Garissa you might be you",
    "start": "1441640",
    "end": "1447100"
  },
  {
    "text": "might want to have sir one one that log said to on one server that notifies whatever ops one that one the sort of",
    "start": "1447100",
    "end": "1452950"
  },
  {
    "text": "try to manage the life cycle the come on restart it etc and it's extremely",
    "start": "1452950",
    "end": "1458580"
  },
  {
    "text": "important again that you have this full isolation so you can manage the failed component in a healthy context",
    "start": "1458580",
    "end": "1465190"
  },
  {
    "text": "you know that if you if something fails component fails that there there's",
    "start": "1465190",
    "end": "1470500"
  },
  {
    "text": "another component here that sits in a fully healthy state and therefore can",
    "start": "1470500",
    "end": "1475660"
  },
  {
    "text": "can can deal with it with it with a notification of failure and act upon it",
    "start": "1475660",
    "end": "1480810"
  },
  {
    "text": "Manesh if by restarting it by by starting up a new component on another",
    "start": "1480810",
    "end": "1486160"
  },
  {
    "text": "node for example if the whole node is down etc and all this is sort of enabled",
    "start": "1486160",
    "end": "1492160"
  },
  {
    "text": "by thinking as failures as being advanced it just flow naturally as all",
    "start": "1492160",
    "end": "1497260"
  },
  {
    "text": "the other information but a beginner but all this stuff you know async distributed systems eventual consistency",
    "start": "1497260",
    "end": "1505080"
  },
  {
    "start": "1499000",
    "end": "1499000"
  },
  {
    "text": "uncertainty talk about failure models etc it all sounds really really hard",
    "start": "1505080",
    "end": "1511140"
  },
  {
    "text": "doesn't it yeah if you new to these things it definitely does right this is",
    "start": "1511140",
    "end": "1517900"
  },
  {
    "text": "it can be a completely different world if you used to like you know you know strong consistency you know synchronous",
    "start": "1517900",
    "end": "1524830"
  },
  {
    "text": "method dispatch there's always the way up you know if if you send advanced this and will in no way back you know in",
    "start": "1524830",
    "end": "1531640"
  },
  {
    "text": "terms of coal stack so so so the asynchronous nature of events can can be",
    "start": "1531640",
    "end": "1537280"
  },
  {
    "text": "quite Humpty to get over but I believe that you know you know something cube",
    "start": "1537280",
    "end": "1542470"
  },
  {
    "text": "Marc Marc Marc Murphy like like Calvin here I've done it to myself many times",
    "start": "1542470",
    "end": "1547680"
  },
  {
    "text": "but I think it it can really help to just relax first you know and then take",
    "start": "1547680",
    "end": "1554290"
  },
  {
    "text": "a step back and then and then try to think in terms of work of workflow then",
    "start": "1554290",
    "end": "1559600"
  },
  {
    "text": "if you do that you know then a lot of things will fall into place workflow is",
    "start": "1559600",
    "end": "1565120"
  },
  {
    "text": "often very very intuitive for a lot of for to to most people so think about",
    "start": "1565120",
    "end": "1570430"
  },
  {
    "text": "your system try to design your system through workflow it helps then then another tip technique",
    "start": "1570430",
    "end": "1576520"
  },
  {
    "text": "that I will sort of dive into a little bit more detail is that that really really helps I believe building this",
    "start": "1576520",
    "end": "1582550"
  },
  {
    "text": "type of systems and bring in all these these things I've talked about together is worse not popularly called events",
    "start": "1582550",
    "end": "1588880"
  },
  {
    "text": "first domain driven design it's really thinking in advance from from a head",
    "start": "1588880",
    "end": "1595330"
  },
  {
    "text": "start in your design process okay you know domain design I mean I'm sure most people here",
    "start": "1595330",
    "end": "1600990"
  },
  {
    "text": "are familiar with it I mean founded by you know recording by Eric Evans in 2003",
    "start": "1600990",
    "end": "1606180"
  },
  {
    "text": "I think and it's really it's really it's it's a great sort of methodology methodology to-to-to-to designing",
    "start": "1606180",
    "end": "1614460"
  },
  {
    "text": "systems absolutely I've used it myself for for more than a decade and and it's",
    "start": "1614460",
    "end": "1619800"
  },
  {
    "text": "it's it's that is that it's done a lot of good but but but if you use domain driven design you know sort of as",
    "start": "1619800",
    "end": "1625950"
  },
  {
    "text": "written by by by Eric Evans in the in in his first book just blindly then then it",
    "start": "1625950",
    "end": "1632250"
  },
  {
    "text": "can it can lead you to some problems because I believe that it you know the",
    "start": "1632250",
    "end": "1637320"
  },
  {
    "text": "the Arad original way of looking at the may driven designs that it makes you focus on the domain objects themselves",
    "start": "1637320",
    "end": "1643340"
  },
  {
    "text": "too early under the design did means they you focus on structure too early",
    "start": "1643340",
    "end": "1650090"
  },
  {
    "text": "what are the you know the the the things in the system is this the the primer",
    "start": "1650090",
    "end": "1657810"
  },
  {
    "text": "thing that you try to model okay great",
    "start": "1657810",
    "end": "1663960"
  },
  {
    "text": "Greg Young said said one in in in the talk that I attended some some time ago that when you start modeling events it",
    "start": "1663960",
    "end": "1671070"
  },
  {
    "text": "forces you to think about the behavior of the system okay as opposed to thinking about the structure of the",
    "start": "1671070",
    "end": "1676830"
  },
  {
    "text": "system I think surely this service hit right at the heart of the problem of focusing or domain or bigs too early you",
    "start": "1676830",
    "end": "1683190"
  },
  {
    "text": "lose a lot of things but I do that so I think instead of focusing all the things fo contracta find all the nouns you know",
    "start": "1683190",
    "end": "1691070"
  },
  {
    "text": "that that were where have been taught to do in traditional object-oriented design",
    "start": "1691070",
    "end": "1696750"
  },
  {
    "text": "for for twenty years we should we should focus on what happens in the system try",
    "start": "1696750",
    "end": "1703860"
  },
  {
    "text": "to serve find the verbs in the system instead of the nuts because these verbs",
    "start": "1703860",
    "end": "1709170"
  },
  {
    "text": "are our events then so focus on domain and on events instead of domain domain",
    "start": "1709170",
    "end": "1715080"
  },
  {
    "text": "all this so many when we come into a new design session we should try to think like a detective so try to like mind the",
    "start": "1715080",
    "end": "1722790"
  },
  {
    "text": "facts ask ourselves what are the facts here like elementary my dear my dear",
    "start": "1722790",
    "end": "1729960"
  },
  {
    "text": "Watson and one thing that's that can really help very useful - there's quite new but it's",
    "start": "1729960",
    "end": "1735679"
  },
  {
    "text": "proven self to be Nestle useful is something called advance storming you serve essentially they bring all the",
    "start": "1735679",
    "end": "1741440"
  },
  {
    "text": "stakeholders into the system into one room all the programmers in the same room all the domain experts in the same",
    "start": "1741440",
    "end": "1748940"
  },
  {
    "text": "room and just let them brainstorm try to serve mind the facts try to find it don't sort of find the domain language",
    "start": "1748940",
    "end": "1755600"
  },
  {
    "text": "how to talk about things through the events focusing primarily I mean what happens in the system",
    "start": "1755600",
    "end": "1762200"
  },
  {
    "text": "okay understand how data flows in the system etc and try to understand things",
    "start": "1762200",
    "end": "1768380"
  },
  {
    "text": "like causality I mean X happens that leads to why the LEAs does that whatever",
    "start": "1768380",
    "end": "1773600"
  },
  {
    "text": "that might be no good because that's really the essence of business logic a lot more than the nones you know they",
    "start": "1773600",
    "end": "1780770"
  },
  {
    "text": "are passing they don't do anything unless you put business logic you must much more important to wrap your head around what's actually happening in the",
    "start": "1780770",
    "end": "1787010"
  },
  {
    "text": "system how data flows in the system specially nowadays with all these data centric applications then it's all about",
    "start": "1787010",
    "end": "1793850"
  },
  {
    "text": "the data and it's all about active data data in motion so what we need to do is",
    "start": "1793850",
    "end": "1802429"
  },
  {
    "start": "1800000",
    "end": "1800000"
  },
  {
    "text": "we need to first try to understand you know the intense sort of the intense or",
    "start": "1802429",
    "end": "1808940"
  },
  {
    "text": "first we want one of the things we need to understand is the intense intense is like things like look what when you look",
    "start": "1808940",
    "end": "1814940"
  },
  {
    "text": "for when if we try to find intense like things like communication conversations expectations we have contracts between",
    "start": "1814940",
    "end": "1822380"
  },
  {
    "text": "different parties transfer of control from one side to another side of the",
    "start": "1822380",
    "end": "1828800"
  },
  {
    "text": "system and then also try to find the facts nimble look to things like state history causality min one thing leading",
    "start": "1828800",
    "end": "1837500"
  },
  {
    "text": "to the next note notifications from all sorts you know and transfer up state",
    "start": "1837500",
    "end": "1842950"
  },
  {
    "text": "instead of transfer low of control and usually I mean the intense are them can",
    "start": "1842950",
    "end": "1848960"
  },
  {
    "text": "you shall be mapped Express what we call commands commands are always side effecting okay they represent you know",
    "start": "1848960",
    "end": "1857240"
  },
  {
    "text": "the intent to do something while you know the facts are through immutable",
    "start": "1857240",
    "end": "1864380"
  },
  {
    "text": "facts of information that that's pieces of truth that you sent around something that has already",
    "start": "1864380",
    "end": "1870799"
  },
  {
    "text": "happened okay so if we try to understand commands and events that leave the",
    "start": "1870799",
    "end": "1876769"
  },
  {
    "text": "pedestal commands be sort of the object form of or the method of some sort of",
    "start": "1876769",
    "end": "1881929"
  },
  {
    "text": "action request okay is it and it's and usually you usually",
    "start": "1881929",
    "end": "1886970"
  },
  {
    "text": "name them in the imperative like like like create order or ship product in",
    "start": "1886970",
    "end": "1893360"
  },
  {
    "text": "these types of things okay the commands then cause reactions reactions are so",
    "start": "1893360",
    "end": "1899480"
  },
  {
    "text": "side effects I mean if if you don't have any side effects in your system then the",
    "start": "1899480",
    "end": "1904820"
  },
  {
    "text": "systems is usually useless he doesn't do anything like so you should do something we act upon the commands that you",
    "start": "1904820",
    "end": "1910220"
  },
  {
    "text": "receive and out of those reactions and you create immutable facts representing",
    "start": "1910220",
    "end": "1917629"
  },
  {
    "text": "what just happened as events and sort of share them so the events are always in",
    "start": "1917629",
    "end": "1924889"
  },
  {
    "text": "past tense like order created the order has been created the fact that order has",
    "start": "1924889",
    "end": "1931879"
  },
  {
    "text": "been created or the fact that a product has been shipped products shipped etc okay so but but let's dig a little bit",
    "start": "1931879",
    "end": "1939230"
  },
  {
    "start": "1937000",
    "end": "1937000"
  },
  {
    "text": "deeper than commands are all about intent I want to do something I'm",
    "start": "1939230",
    "end": "1944990"
  },
  {
    "text": "telling you to I'm asking you to do something here while the events are completely intent list they don't care",
    "start": "1944990",
    "end": "1950779"
  },
  {
    "text": "you know them no really really no intent at all commands are directed I I want",
    "start": "1950779",
    "end": "1957049"
  },
  {
    "text": "someone to do something then I send a command the specific point-to-point communication while events are fully",
    "start": "1957049",
    "end": "1964370"
  },
  {
    "text": "anonymous I know I shouldn't even have to really know who admitted it and often",
    "start": "1964370",
    "end": "1971210"
  },
  {
    "text": "I do I do of course there might be reasons why I want to know who's who admitted the event but but really it",
    "start": "1971210",
    "end": "1976730"
  },
  {
    "text": "should be seen purely as a piece a piece of information and therefore anonymous",
    "start": "1976730",
    "end": "1983059"
  },
  {
    "text": "in a command sir have a single addressable destination events just happens for anyone that's interested to",
    "start": "1983059",
    "end": "1989480"
  },
  {
    "text": "observe can be 0 if there are no interested listeners at this point can be 200 can be anything ok",
    "start": "1989480",
    "end": "1997960"
  },
  {
    "text": "so two commands they sort of the model personal communication I talk to you directly while events they're mobile",
    "start": "1998180",
    "end": "2006910"
  },
  {
    "text": "more like broadcast throughout speakers corner or something like like this situation I'm talking to you I'm just",
    "start": "2006910",
    "end": "2012310"
  },
  {
    "text": "trying to relay the truth here you know and you can you choose to accept it or not and this means that commands you",
    "start": "2012310",
    "end": "2023230"
  },
  {
    "text": "know they have a distributed focus because the whole in tempt you know is to ask someone in some other context to",
    "start": "2023230",
    "end": "2030160"
  },
  {
    "text": "do something you might you know sit right in in this right next to you in the same and in the in the same process",
    "start": "2030160",
    "end": "2035980"
  },
  {
    "text": "on the same JVM but it can also sit in another data center no so it's really",
    "start": "2035980",
    "end": "2041140"
  },
  {
    "text": "all about distributed communication while events they only happen locally they emit locally what's happening then",
    "start": "2041140",
    "end": "2049210"
  },
  {
    "text": "you might use sir messaging you know to relay that event as a bridge you know to",
    "start": "2049210",
    "end": "2054398"
  },
  {
    "text": "other to other out to other systems but but from it from it from a from a theoretical standpoint events just are",
    "start": "2054399",
    "end": "2061300"
  },
  {
    "text": "just a method locally where they happen to anyone that's interested to listen in so commands are really about all of a",
    "start": "2061300",
    "end": "2068919"
  },
  {
    "text": "command and control which is useful but",
    "start": "2068919",
    "end": "2074290"
  },
  {
    "text": "in my opinion you should use sparingly you shouldn't use it more than you absolutely need to commands have they",
    "start": "2074290",
    "end": "2080889"
  },
  {
    "text": "have a purpose usually to initiate some some sort of effect on the system as a",
    "start": "2080890",
    "end": "2086590"
  },
  {
    "text": "whole but but most of the logic are better driven with with events you know",
    "start": "2086590",
    "end": "2093460"
  },
  {
    "text": "because that gives us autonomy so I usually try to favor events over",
    "start": "2093460",
    "end": "2099460"
  },
  {
    "text": "commands but as I said commands or sometimes absolutely needed and and and",
    "start": "2099460",
    "end": "2107770"
  },
  {
    "start": "2106000",
    "end": "2106000"
  },
  {
    "text": "and if you're familiar with the wheel domain-driven design then then i'll let the events define the protocols you know",
    "start": "2107770",
    "end": "2114190"
  },
  {
    "text": "the sir defines the scope of my services meaning at the bounded context in the",
    "start": "2114190",
    "end": "2119860"
  },
  {
    "text": "indeed in ddd terms",
    "start": "2119860",
    "end": "2123270"
  },
  {
    "text": "and yet again I mean this sort of gives us a way to attractive model uncertain and uncertainty because then I then I",
    "start": "2125400",
    "end": "2131250"
  },
  {
    "text": "can clearly distinguish between what do I control and and what is outside my",
    "start": "2131250",
    "end": "2138240"
  },
  {
    "text": "control you know this this crazy ocean of non-determinism versus this safe",
    "start": "2138240",
    "end": "2144390"
  },
  {
    "text": "Island that we can relax and you know enjoying Patel and also he defines serve",
    "start": "2144390",
    "end": "2155550"
  },
  {
    "text": "a nice framework for how to think about this and think of a consistency between",
    "start": "2155550",
    "end": "2161160"
  },
  {
    "text": "services he talked about inside data as her current present you know that's",
    "start": "2161160",
    "end": "2166710"
  },
  {
    "text": "that's the state we have within our service outside data he talks about",
    "start": "2166710",
    "end": "2172410"
  },
  {
    "text": "being the the blast from the past you know that's our events the facts that",
    "start": "2172410",
    "end": "2178440"
  },
  {
    "text": "flow between services all this representing something that has already happened some time ago that we can",
    "start": "2178440",
    "end": "2185730"
  },
  {
    "text": "choose to react upon and between services in almost practically calls",
    "start": "2185730",
    "end": "2191010"
  },
  {
    "text": "hope for the future you know that's that's what he the what he means by that",
    "start": "2191010",
    "end": "2196440"
  },
  {
    "text": "is the commands that the flow I'm sending an intent for somehow someone I",
    "start": "2196440",
    "end": "2202320"
  },
  {
    "text": "someone else to do something and I hope that they will comply okay it's from",
    "start": "2202320",
    "end": "2209280"
  },
  {
    "text": "this from from his paper with data on the inside versus data on the outside see at the bottom there if you want to",
    "start": "2209280",
    "end": "2214920"
  },
  {
    "text": "read it is highly recommended but but events can also as I said alluded to in",
    "start": "2214920",
    "end": "2221820"
  },
  {
    "text": "the in the beginning we used to be used to ask sort of this source of truth to",
    "start": "2221820",
    "end": "2227940"
  },
  {
    "text": "implement our service our record we already have services to these pieces of",
    "start": "2227940",
    "end": "2233070"
  },
  {
    "text": "truth of facts flowing around in the system so why not take advantage of them",
    "start": "2233070",
    "end": "2238170"
  },
  {
    "text": "then to model this in Indian DVD then we",
    "start": "2238170",
    "end": "2243780"
  },
  {
    "text": "then we use the aggregate no it's no new Siri if you know domain-driven design it",
    "start": "2243780",
    "end": "2249119"
  },
  {
    "text": "is the aggregate that sort of maintains integrity in the consistency of all of",
    "start": "2249119",
    "end": "2254310"
  },
  {
    "text": "our service okay it is our unit of consistency is our unit of failure as well we talked about earlier",
    "start": "2254310",
    "end": "2260550"
  },
  {
    "text": "is our unit of determinist and you can assume strong consistency within the aggregate which simplifies a lot of",
    "start": "2260550",
    "end": "2266910"
  },
  {
    "text": "things so when it comes to reasoning about data okay this means that the i8",
    "start": "2266910",
    "end": "2273000"
  },
  {
    "text": "is always atomic you know you know Tomic in in in acid and it's fully autonomous",
    "start": "2273000",
    "end": "2280950"
  },
  {
    "text": "as well okay but I think I think it's important to understand that you shouldn't just blindly in a map this now",
    "start": "2280950",
    "end": "2288030"
  },
  {
    "start": "2284000",
    "end": "2284000"
  },
  {
    "text": "to sequel database you need to be using or I'm you know I breathe I mean I mean you don't need update and delete any",
    "start": "2288030",
    "end": "2295290"
  },
  {
    "text": "longer you means you sure I've already talked about this should not delete facts you know and you should not update",
    "start": "2295290",
    "end": "2303270"
  },
  {
    "text": "you mutate facts facts are immutable pieces of information the only accrue so",
    "start": "2303270",
    "end": "2309060"
  },
  {
    "text": "that means that update and delete are gone you know you just need create new",
    "start": "2309060",
    "end": "2315810"
  },
  {
    "text": "events in an append-only fashion fall in causality one thing at least you're the",
    "start": "2315810",
    "end": "2321540"
  },
  {
    "text": "next to the next to the next knowledge just accrue Ori or read at any point in",
    "start": "2321540",
    "end": "2327599"
  },
  {
    "text": "time okay so you need only create create create and read and not update and",
    "start": "2327599",
    "end": "2333599"
  },
  {
    "text": "delete you know updating because in the problem with crud is really the updating",
    "start": "2333599",
    "end": "2340170"
  },
  {
    "text": "place is that you can go in and mutate data you can mutate facts which is just",
    "start": "2340170",
    "end": "2346619"
  },
  {
    "text": "wrong plain wrong in my opinion it just leads to a lot of problems as Jim Gray",
    "start": "2346619",
    "end": "2352859"
  },
  {
    "text": "once said that updating place strikes systems designer has two cardinal sin it",
    "start": "2352859",
    "end": "2360480"
  },
  {
    "text": "violates traditional accounting principles that have been absurd for hundreds of years yet again I think we",
    "start": "2360480",
    "end": "2369119"
  },
  {
    "text": "need to try to this just look at how does things work in the real world you try to map that knowledge to how we",
    "start": "2369119",
    "end": "2375810"
  },
  {
    "text": "should build systems just really learn the basic principles of accounting and",
    "start": "2375810",
    "end": "2380960"
  },
  {
    "text": "apply them in systems today another thing we have a lot of unlearning to do here which might be hard no man you know",
    "start": "2380960",
    "end": "2389880"
  },
  {
    "text": "you know what happens when you like pull away kids favorites toy right from his from his hands you know but it",
    "start": "2389880",
    "end": "2399359"
  },
  {
    "text": "can be healthy as well so we need to rely on them on the on the on the basic principles of regular bookkeeping",
    "start": "2399359",
    "end": "2406079"
  },
  {
    "start": "2400000",
    "end": "2400000"
  },
  {
    "text": "traditional bookkeeping and the way we do that in systems is in issue a concept called event logging I'm sure you've",
    "start": "2406079",
    "end": "2413819"
  },
  {
    "text": "heard about it you know it's really nothing new either I mean that's how like you mean the Oracle databases are",
    "start": "2413819",
    "end": "2418980"
  },
  {
    "text": "all sequel databases have had worked for years they have their the transaction log that that sort of stores all",
    "start": "2418980",
    "end": "2425670"
  },
  {
    "text": "operations but but that is not exposed",
    "start": "2425670",
    "end": "2431400"
  },
  {
    "text": "you're the only exposed is this mutable view the being being that the table that essentially just a snapshot in time or",
    "start": "2431400",
    "end": "2439109"
  },
  {
    "text": "was how the hobbit happens to look right now ignoring the historical data that",
    "start": "2439109",
    "end": "2444509"
  },
  {
    "text": "sits under underneath okay it's better the the the event going to really be",
    "start": "2444509",
    "end": "2449700"
  },
  {
    "text": "sore the bedrock this were the stable foundation that we can built a lot of things on like consistency availability",
    "start": "2449700",
    "end": "2458839"
  },
  {
    "text": "scalability traceability yeah auditing",
    "start": "2458839",
    "end": "2463999"
  },
  {
    "text": "etc and putt Helen again said that once there that the truth is the log the",
    "start": "2463999",
    "end": "2471089"
  },
  {
    "text": "database is a cache of a subset of the log so it's really it's really sad to",
    "start": "2471089",
    "end": "2479450"
  },
  {
    "text": "just work with the subset we will serve with the cache of the substance when you",
    "start": "2479450",
    "end": "2485730"
  },
  {
    "text": "can actually work with R with the real thing when it's there when it's fully available at all at all times you know",
    "start": "2485730",
    "end": "2491519"
  },
  {
    "text": "there used to be a reason I must say that we used to him a play up update in place you know disk space used to be",
    "start": "2491519",
    "end": "2497970"
  },
  {
    "text": "very very expensive so there was a sort of practical reason why updating place had what's the default like 20 30 40",
    "start": "2497970",
    "end": "2506099"
  },
  {
    "text": "years ago you know but today disks space is incredibly cheap there's really no",
    "start": "2506099",
    "end": "2512249"
  },
  {
    "text": "reason to keep on doing this anymore relation database has a lot of other sir",
    "start": "2512249",
    "end": "2519390"
  },
  {
    "text": "advantages of course you know you know for for understanding data I'm making sense the day there are",
    "start": "2519390",
    "end": "2525660"
  },
  {
    "text": "relationships and all these things I'm not saying that we should we shouldn't use them but they can just you to be with a listener on the other side of the",
    "start": "2525660",
    "end": "2533220"
  },
  {
    "text": "stream keep maintaining it's it's sort of in Mysore or copy over what the world",
    "start": "2533220",
    "end": "2539520"
  },
  {
    "text": "looks like right now for you to run your reports etcetera etcetera right but in",
    "start": "2539520",
    "end": "2544950"
  },
  {
    "text": "my opinion we shouldn't look at it as a source of truth that should be our events and and and event sourcing I",
    "start": "2544950",
    "end": "2553710"
  },
  {
    "text": "don't know if you if you've heard about that but that is sort of a great pattern on top of the amount log that helps us do to them Sergey achieve this it can be",
    "start": "2553710",
    "end": "2562380"
  },
  {
    "text": "sort of a cure for this cardinal sin you know updating place and and in in the",
    "start": "2562380",
    "end": "2568110"
  },
  {
    "text": "best sourcing you since you have all the events are already flowing in the system in the event source and you simply store",
    "start": "2568110",
    "end": "2573870"
  },
  {
    "text": "them in the order as they arrive one by one by one by one by one so you have the the full history of what's ever happened",
    "start": "2573870",
    "end": "2581130"
  },
  {
    "text": "in the whole system normally you have perhaps one event log per per aggregate",
    "start": "2581130",
    "end": "2586290"
  },
  {
    "text": "so that means that all the states the aggregate ever been in or recorded you",
    "start": "2586290",
    "end": "2591810"
  },
  {
    "text": "know on disk in the order they happen",
    "start": "2591810",
    "end": "2596180"
  },
  {
    "text": "and and and and there's a lot of advantages to this I mean this means that we can do things like for example",
    "start": "2597020",
    "end": "2602940"
  },
  {
    "text": "on failure we can see please replay the event log bringing the component up to",
    "start": "2602940",
    "end": "2608100"
  },
  {
    "text": "the state you was right before it failed and can't continue serve we have we have",
    "start": "2608100",
    "end": "2614280"
  },
  {
    "text": "things like replication already stall because we can't have any number of listeners to this event blog maintaining",
    "start": "2614280",
    "end": "2620880"
  },
  {
    "text": "each one their own copy of the data that is now as hot as the master you know we",
    "start": "2620880",
    "end": "2627600"
  },
  {
    "text": "have like rock-solid auditing the other thing is is is the event low we don't need to have a yet another system to do",
    "start": "2627600",
    "end": "2634320"
  },
  {
    "text": "auditing and and and and and and sort of debug ability and things like that we can just mine inspect the log directly",
    "start": "2634320",
    "end": "2643160"
  },
  {
    "text": "so so so a lot of things are unified using an event log so in the way the way",
    "start": "2643160",
    "end": "2650040"
  },
  {
    "text": "and the way it works is like let's say I mean first talk about the they have path there we we have we sort of",
    "start": "2650040",
    "end": "2657410"
  },
  {
    "text": "receiver and verify the command that we that we get that we get to the component for sample approved payment and this in",
    "start": "2657410",
    "end": "2665300"
  },
  {
    "text": "this case we create a new event then after the fact that we have approved the payment for example payment approved we",
    "start": "2665300",
    "end": "2676850"
  },
  {
    "text": "append it to the event log and if we're",
    "start": "2676850",
    "end": "2682130"
  },
  {
    "text": "successfully if it has been successful is stored on it on a durable medium then",
    "start": "2682130",
    "end": "2690410"
  },
  {
    "text": "we update the internal component State and then we surround the side effects",
    "start": "2690410",
    "end": "2696500"
  },
  {
    "text": "when we when we let me know for sure that we have we have we have stored the event in a durable fashion okay",
    "start": "2696500",
    "end": "2704740"
  },
  {
    "text": "however in this in this in the sad path then the only thing we need to do then is a rehydrate the events from the event",
    "start": "2704740",
    "end": "2711650"
  },
  {
    "text": "log and then update the internal state we do not run the side effects for",
    "start": "2711650",
    "end": "2717230"
  },
  {
    "text": "example because they have already been you know being being executed once we were only interested in bringing up you",
    "start": "2717230",
    "end": "2724520"
  },
  {
    "text": "know the component to its current state and here the component has sort of the snapshot of this of what what the come",
    "start": "2724520",
    "end": "2730910"
  },
  {
    "text": "or what through the state looks at this point in time Y value retained all the",
    "start": "2730910",
    "end": "2736370"
  },
  {
    "text": "history that's ever happen on the on in the in the event log itself and this is",
    "start": "2736370",
    "end": "2744200"
  },
  {
    "text": "what what Martin Fowler sometimes calls memory image if you google memory image service this is usually what him what",
    "start": "2744200",
    "end": "2752030"
  },
  {
    "text": "what what he means that you have sort of a a durable representation of your of",
    "start": "2752030",
    "end": "2757310"
  },
  {
    "text": "your arbic state so it's sort of persisted in memory you can say and and",
    "start": "2757310",
    "end": "2762620"
  },
  {
    "text": "you know one of the benefits with this is that this or is it sort of gives you where one single truth of all history",
    "start": "2762620",
    "end": "2769490"
  },
  {
    "text": "that's ever happened if the Dolores said it allows for this durable in memory state and it is really helps us avoiding",
    "start": "2769490",
    "end": "2776990"
  },
  {
    "text": "this you know this traditional object relations or relational impedance",
    "start": "2776990",
    "end": "2782540"
  },
  {
    "text": "mismatch there's really really no need to sort of map your are big state now inter-relational tape",
    "start": "2782540",
    "end": "2788450"
  },
  {
    "text": "as I said you can do that but that's that's not the job of the component or the persistence system that's something",
    "start": "2788450",
    "end": "2794810"
  },
  {
    "text": "you can sort of have have a subsystem or another system subscribe to you know you",
    "start": "2794810",
    "end": "2801350"
  },
  {
    "text": "can have a difference reviews on the on the on this day that's what I'm talking",
    "start": "2801350",
    "end": "2806390"
  },
  {
    "text": "about something some people talk talk about seek CQRS as a server patron to achieve that or if",
    "start": "2806390",
    "end": "2813290"
  },
  {
    "text": "you have multiple views when each representing this this state in the most optimal way for how you want who you",
    "start": "2813290",
    "end": "2819470"
  },
  {
    "text": "want to use that if you want to run reports you know then you can have it have a sequel database subscribe to the",
    "start": "2819470",
    "end": "2824570"
  },
  {
    "text": "event log changes maintaining it's a perfect view for reporting and data in",
    "start": "2824570",
    "end": "2831020"
  },
  {
    "text": "date and date and data mining if you want to reduce the big data analytics on the honest then you can have for example",
    "start": "2831020",
    "end": "2836500"
  },
  {
    "text": "push it down into HDFS and have spark or flink or someone else pick that up and maintain their view on the data etc",
    "start": "2836500",
    "end": "2844570"
  },
  {
    "text": "while for for for within the service you you simply maintain your in member",
    "start": "2844570",
    "end": "2851270"
  },
  {
    "text": "representation and and and finally I",
    "start": "2851270",
    "end": "2857690"
  },
  {
    "text": "mean this this way of working with with serve an append-only log usually has really really good mechanical sympathy",
    "start": "2857690",
    "end": "2864380"
  },
  {
    "text": "we kind of the sympathy serve a term that Morgan Thompson usually talks about it's it's syrup you sort of a is the",
    "start": "2864380",
    "end": "2870980"
  },
  {
    "text": "sort of the idea of a building software there are aligned with how how the hardware works they're aligned with like",
    "start": "2870980",
    "end": "2879740"
  },
  {
    "text": "how modern modern processors memory systems actually actually work in having things like for example a pen only log",
    "start": "2879740",
    "end": "2886670"
  },
  {
    "text": "means that we can have a sip seeing a single writer they can so write down in an append-only fashion to disk fully I'm",
    "start": "2886670",
    "end": "2893210"
  },
  {
    "text": "fully uncontained 'add in extremely fast fashion it works really well with SSDs",
    "start": "2893210",
    "end": "2899930"
  },
  {
    "text": "for example and things like this some did some disadvantages though abusing about about something like about",
    "start": "2899930",
    "end": "2905120"
  },
  {
    "text": "sourcing and about blogging is that it's sort of an unfamiliar model to a lot to a lot of people it's a it's a leap of",
    "start": "2905120",
    "end": "2910970"
  },
  {
    "text": "faith it's also something that perhaps doesn't fit all systems but if you are",
    "start": "2910970",
    "end": "2917900"
  },
  {
    "text": "approached system design from the world of advance it fits like a glove since you already have the events flowing why",
    "start": "2917900",
    "end": "2924249"
  },
  {
    "text": "not just take advantage of that and just store them in the order that they already flow and you're basically done",
    "start": "2924249",
    "end": "2930640"
  },
  {
    "text": "already so I think that's that's a lot to gain from crying to view it view the world from events from a persistence",
    "start": "2930640",
    "end": "2936999"
  },
  {
    "text": "perspective as well other disadvantages that can be hard to versioning events for example there's something new you",
    "start": "2936999",
    "end": "2942640"
  },
  {
    "text": "need to take into account if you want to sort of change you know so upgrade this",
    "start": "2942640",
    "end": "2949390"
  },
  {
    "text": "is sort of the way you would the way you view state you need a way to have sort of some some sort of have some for",
    "start": "2949390",
    "end": "2955809"
  },
  {
    "text": "translation layer between old old events and new and new events that's often happened perhaps India and in the",
    "start": "2955809",
    "end": "2961749"
  },
  {
    "text": "anti-corruption layer that you put in front of your service that does this sort of translation set up if there are",
    "start": "2961749",
    "end": "2967690"
  },
  {
    "text": "some some things to think about or deletion of events you know like like like this new law sir stated by the",
    "start": "2967690",
    "end": "2975970"
  },
  {
    "text": "Europe by the by the EU that you actually are in some situations forced to delete events how do you how do you",
    "start": "2975970",
    "end": "2983200"
  },
  {
    "text": "do that there are different ways of implementing that example encrypt all",
    "start": "2983200",
    "end": "2989109"
  },
  {
    "text": "the events and then in the case of in",
    "start": "2989109",
    "end": "2994479"
  },
  {
    "text": "the case that you have deleted if you just throw away the key or you can actually go back and physically delete them even though perceptually that's",
    "start": "2994479",
    "end": "3000329"
  },
  {
    "text": "there the wrong way of doing it you know this is the wrong way of viewing the world but sometimes it's needed for poor",
    "start": "3000329",
    "end": "3005670"
  },
  {
    "text": "before or for pragmatic reasons so I'm almost running out of time I just",
    "start": "3005670",
    "end": "3011489"
  },
  {
    "text": "actually quickly want to talk little bit about how events allow us to manage time as well so you know modeling events",
    "start": "3011489",
    "end": "3017279"
  },
  {
    "text": "forces you to have serve a temporal focus what's going on in the system that's also importantly the time becomes",
    "start": "3017279",
    "end": "3022619"
  },
  {
    "text": "a crucial factor in the system and and so so event sourcing also allows us to",
    "start": "3022619",
    "end": "3028140"
  },
  {
    "start": "3025000",
    "end": "3025000"
  },
  {
    "text": "have a stable notion of time have to mole time you know with this advances or the snapshot in time or ID you serve an",
    "start": "3028140",
    "end": "3035729"
  },
  {
    "text": "index for time it's a logical time you know and and I said they do once again",
    "start": "3035729",
    "end": "3041849"
  },
  {
    "text": "event log it's a full history so it's the database of the past not just the",
    "start": "3041849",
    "end": "3047160"
  },
  {
    "text": "database or the president but it's the database in the past and then hour and",
    "start": "3047160",
    "end": "3052349"
  },
  {
    "text": "hour to our current president and the interesting thing is that it allows for things like like like time travel you",
    "start": "3052349",
    "end": "3058630"
  },
  {
    "text": "can go back in time and and and answer a replay the the log for for hit for",
    "start": "3058630",
    "end": "3064990"
  },
  {
    "text": "things like historic debugging understanding what's why something went wrong you can because like you can just",
    "start": "3064990",
    "end": "3072579"
  },
  {
    "text": "brown a replica in a safe zone outside and just replay it like one by one by",
    "start": "3072579",
    "end": "3078460"
  },
  {
    "text": "one I mean as slow as you want to try to understand what actually happened for auditing and traceability I said replay",
    "start": "3078460",
    "end": "3084670"
  },
  {
    "text": "of the logon failure replay the prelude log for replication and even do the",
    "start": "3084670",
    "end": "3089859"
  },
  {
    "text": "funky things like like like working the past if there are reasons to do that into also or even sort of join to two",
    "start": "3089859",
    "end": "3097030"
  },
  {
    "text": "distinct paths you can yes sir there's a lot of gives you a lot of sir power in how to work with time and and in and for",
    "start": "3097030",
    "end": "3103839"
  },
  {
    "text": "everyone that that work would distribute assistance like working with time is probably the hardest thing you can do in",
    "start": "3103839",
    "end": "3109630"
  },
  {
    "text": "distributed systems so have a stable notion of time and working with logical time in a natural fashion you have a lot",
    "start": "3109630",
    "end": "3116530"
  },
  {
    "text": "to gain in my opinion so so key key key is a key takeaway suppose some up events",
    "start": "3116530",
    "end": "3122560"
  },
  {
    "start": "3119000",
    "end": "3119000"
  },
  {
    "text": "first design helps you to move to move faster with less risk building scalable",
    "start": "3122560",
    "end": "3129460"
  },
  {
    "text": "and resilient systems it helps us you know to achieve this thing would we all everyone talks about my twin mattress services fully",
    "start": "3129460",
    "end": "3135730"
  },
  {
    "text": "autonomous services again developed by autonomous teams you know well-established protocols in between",
    "start": "3135730",
    "end": "3142710"
  },
  {
    "text": "that that take versioning and all these things into account and helps us balance",
    "start": "3142710",
    "end": "3148060"
  },
  {
    "text": "you know the certainty and uncertainty and have your boundaries for like for that so we know when we're stepping fool",
    "start": "3148060",
    "end": "3154869"
  },
  {
    "text": "on zone to the next and why we do that okay an event alone can really help us",
    "start": "3154869",
    "end": "3160630"
  },
  {
    "text": "think like your Boyd and crud avoiding Orem at all unless you absolutely need",
    "start": "3160630",
    "end": "3166180"
  },
  {
    "text": "to to maintain a secondary view taken for all over the system's history things",
    "start": "3166180",
    "end": "3171550"
  },
  {
    "text": "like like time travel in July for auditing all kind of things and and and help us rebalance you know in strong",
    "start": "3171550",
    "end": "3178240"
  },
  {
    "text": "consistency and eventual consistency strong consistency within the aggregate while eventual consistency and beam in",
    "start": "3178240",
    "end": "3184450"
  },
  {
    "text": "between just to give us more Headroom for scale their resilience so I mean I'm biased",
    "start": "3184450",
    "end": "3192220"
  },
  {
    "text": "but aqua can really help you with that it was sort of built with this with this to put these type of systems in mind it",
    "start": "3192220",
    "end": "3197950"
  },
  {
    "text": "has you know event sourcing built in it has is fully decentralized you have this unit of services they're fully",
    "start": "3197950",
    "end": "3203620"
  },
  {
    "text": "autonomous failure management curacy is all built-in etc and if you want to",
    "start": "3203620",
    "end": "3208720"
  },
  {
    "text": "learn more I wrote a little book for O'Reilly on this it's just freely available from this term from this URL",
    "start": "3208720",
    "end": "3213880"
  },
  {
    "text": "it covers some of these some of these things in more detail so sorry I ran",
    "start": "3213880",
    "end": "3219280"
  },
  {
    "text": "over time a couple of minutes but thanks for your attention [Applause]",
    "start": "3219280",
    "end": "3227639"
  }
]