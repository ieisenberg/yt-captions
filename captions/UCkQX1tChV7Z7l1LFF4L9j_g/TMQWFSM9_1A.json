[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "[Music]",
    "start": "1430",
    "end": "11799"
  },
  {
    "text": "I feel like I could spend the whole time with caveats just listing caveats about about this talk because basically it's",
    "start": "11799",
    "end": "17439"
  },
  {
    "text": "it's vaporware uh none of it exists I'm proposing that this is something that we should do but I don't want to do it by",
    "start": "17439",
    "end": "23439"
  },
  {
    "text": "myself and um there's no code in this talk hopefully that'll be good for an end of the day talk um and I'm",
    "start": "23439",
    "end": "30519"
  },
  {
    "text": "necessarily going to be kind of superficial in how I go into these things I'd be happy to discuss this more tomorrow in detail but think of this as",
    "start": "30519",
    "end": "37719"
  },
  {
    "text": "something of uh here's how things are now I I think we have some issues and I think they're worth um doing something",
    "start": "37719",
    "end": "44520"
  },
  {
    "text": "different uh and uh I'll really focus on I think the issues that I see and where",
    "start": "44520",
    "end": "51000"
  },
  {
    "text": "we should go and it's really meant as motivation um if you have if you need more of motivation say yeah it didn't",
    "start": "51000",
    "end": "56440"
  },
  {
    "text": "seem such a big deal to me especially since we have an existing system and interoperating with that existing",
    "start": "56440",
    "end": "63120"
  },
  {
    "text": "system is is kind of going to be a lot of work so I want to start just with manual",
    "start": "63120",
    "end": "68520"
  },
  {
    "text": "dependency management this is like super super basic I hope nobody does this but",
    "start": "68520",
    "end": "74040"
  },
  {
    "start": "69000",
    "end": "69000"
  },
  {
    "text": "you want to use some new dependency you're writing your scholar code you know you just learned scholar or something and you're you're running",
    "start": "74040",
    "end": "80000"
  },
  {
    "text": "scholar C and now you want to use actors so you go to the AA website you download the jar copy it to your project and um",
    "start": "80000",
    "end": "87439"
  },
  {
    "text": "well now you try to run well it needs it it has the dependencies so you forgot to look up those dependencies download",
    "start": "87439",
    "end": "92960"
  },
  {
    "text": "those copy those to the project and then keep on doing that so nobody does this",
    "start": "92960",
    "end": "98280"
  },
  {
    "text": "because it's high maintenance right if you want to go change one of those dependencies later you want to upgrade to AKA 2.1 and uh well now you got to go",
    "start": "98280",
    "end": "106040"
  },
  {
    "text": "check its dependencies again and go download those dependencies see if any of those changed the other thing is is",
    "start": "106040",
    "end": "111960"
  },
  {
    "text": "collaboration if somebody else wants to work on your project they have to do the same stuff that you just did uh if",
    "start": "111960",
    "end": "117079"
  },
  {
    "text": "somebody wants to use your your project you you're making a library that useful and now somebody has to go download the AA jars download those dependencies so",
    "start": "117079",
    "end": "124079"
  },
  {
    "text": "no Nobody Does this um but of course they they solve it in different ways um",
    "start": "124079",
    "end": "129679"
  },
  {
    "start": "125000",
    "end": "125000"
  },
  {
    "text": "Scala has inherited Java's dependency management For Better or For Worse and that's Ivy and Maven Maven is the clear",
    "start": "129679",
    "end": "136440"
  },
  {
    "text": "winner in terms of the repository format the metadata format and I would say",
    "start": "136440",
    "end": "141560"
  },
  {
    "text": "adoption um but really the key to it in general is U machine readable dependency",
    "start": "141560",
    "end": "148560"
  },
  {
    "text": "information so that's both um the product definitions so like the files you actually generate for your",
    "start": "148560",
    "end": "153760"
  },
  {
    "text": "project as well as your the dependencies that your project needs to run compile or whatever and this is key because now",
    "start": "153760",
    "end": "160200"
  },
  {
    "text": "it makes it automated um you you can process all those dependencies",
    "start": "160200",
    "end": "165280"
  },
  {
    "text": "transitively you aren't excluded from verifying those dependencies right you can say well I I don't want any of these",
    "start": "165280",
    "end": "171040"
  },
  {
    "text": "things to change or like I don't want them to update um or to show me the ones that have changed since last time um but",
    "start": "171040",
    "end": "178720"
  },
  {
    "text": "it will resolve conflicts we'll get to that more uh it is now abstracting actually fetching those dependencies",
    "start": "178720",
    "end": "185239"
  },
  {
    "text": "ideally these are declarative dependencies you just say I depend on Project a version one you you don't say how to fetch it so necessarily a",
    "start": "185239",
    "end": "191840"
  },
  {
    "text": "dependency manager is going to abstract over actually fetching that and that requires caching and if you've used dependency management Scala through spt",
    "start": "191840",
    "end": "198440"
  },
  {
    "text": "you know that's a problem um finally you you want to make other let other people",
    "start": "198440",
    "end": "203879"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "use your stuff so you publish it so this is just really basic you have a project",
    "start": "203879",
    "end": "209519"
  },
  {
    "text": "we call it demo 1.0 you use another project a another project B another project D and somewhere these have",
    "start": "209519",
    "end": "216239"
  },
  {
    "text": "pulled in two different versions of some project C you have c3.0 and C 4.0 and",
    "start": "216239",
    "end": "223040"
  },
  {
    "text": "well what do you do now because you don't want both of those on your class path one will Shadow the other um if",
    "start": "223040",
    "end": "228319"
  },
  {
    "text": "anybody says osgi we're not talking about that here um the there's there's a couple",
    "start": "228319",
    "end": "236239"
  },
  {
    "text": "different ways you can handle this uh maven's default is nearest so you have your root here demo",
    "start": "236239",
    "end": "242840"
  },
  {
    "text": "1.0 c3.0 is the closest to that route so let's go with that um Ivy has the",
    "start": "242840",
    "end": "250040"
  },
  {
    "text": "default of latest so let's let's take some information from these versions 3.0 is older than 4.0 uh if you if you uh",
    "start": "250040",
    "end": "259400"
  },
  {
    "text": "ascribe some meaning to it so let's let's go with 4.0 because that's newer uh the ivy is pluggable so you could",
    "start": "259400",
    "end": "266280"
  },
  {
    "text": "there's another one called strict well I I don't know what to do do with this I don't know whether they're compatible uh so you tell me and so",
    "start": "266280",
    "end": "273880"
  },
  {
    "text": "strict is kind of like manual um I think personally that that's really the only",
    "start": "273880",
    "end": "279320"
  },
  {
    "text": "one that you can do in an automated system um you just don't have the metadata to know whether 3.0 can be",
    "start": "279320",
    "end": "285400"
  },
  {
    "text": "substituted for 4.0 or not uh but that's not what the defaults are so that's not what SBT does that's not what Maven does",
    "start": "285400",
    "end": "292560"
  },
  {
    "text": "um you can of course get warnings in both of those systems in in any",
    "start": "292560",
    "end": "298120"
  },
  {
    "text": "case but I think the the key takeaway here is that the you're only as good as the metadata if if you uh if your",
    "start": "298120",
    "end": "304199"
  },
  {
    "text": "metadata relies on like semantic versioning which I don't think is common enough to do that and I don't think it",
    "start": "304199",
    "end": "310440"
  },
  {
    "text": "actually solves the problem but I won't get into that uh so you just don't have the metadata to make a good decision",
    "start": "310440",
    "end": "316680"
  },
  {
    "start": "316000",
    "end": "316000"
  },
  {
    "text": "here so I want to next talk about caching this is kind of simplified it's",
    "start": "316680",
    "end": "323199"
  },
  {
    "text": "very simplified and it just shows what I call the on demand model of of getting",
    "start": "323199",
    "end": "328639"
  },
  {
    "text": "metadata so you say I depend on Project a 1.0 well your dependency manager says",
    "start": "328639",
    "end": "333919"
  },
  {
    "text": "okay that's nice I don't know anything about project a 1.0 I need to get some metadata for it so then it will go",
    "start": "333919",
    "end": "340160"
  },
  {
    "text": "because this is going to involve getting it from some remote server we need we don't really want to do that like all the time so we want to Cache it and we",
    "start": "340160",
    "end": "347280"
  },
  {
    "text": "say is it in the cache yes okay well is it you know the latest is it up toate is something changed on the remote server",
    "start": "347280",
    "end": "354240"
  },
  {
    "text": "and this is kind of a problem with the on demand model because you're doing this per per module",
    "start": "354240",
    "end": "360919"
  },
  {
    "text": "and you don't want to contact the remote repository but you have to in order to know whether it's up to date it's not",
    "start": "360919",
    "end": "366039"
  },
  {
    "text": "it's not fundamental in this this P this um this model because here's how you",
    "start": "366039",
    "end": "372039"
  },
  {
    "text": "um determine that path you say I have some module or. example is the group a",
    "start": "372039",
    "end": "378400"
  },
  {
    "text": "is the name 1.0 is the version let's turn that into a path well that tells me nothing about the content at the end",
    "start": "378400",
    "end": "383479"
  },
  {
    "text": "other than I know I'm going to get some metadata um so other than that I have no idea whether what I have locally is the",
    "start": "383479",
    "end": "389160"
  },
  {
    "text": "same as what I have remotely so I have to do this remote uh access um so if",
    "start": "389160",
    "end": "394560"
  },
  {
    "text": "it's not up to date or it's not in the cache or whatever then I have to actually you know try and get it from a repository and so I'll check a",
    "start": "394560",
    "end": "400720"
  },
  {
    "text": "repository if it exists then I'll download it and cach it and then carry on process the next set of dependencies",
    "start": "400720",
    "end": "407120"
  },
  {
    "text": "uh if it's not in that repository check the next one and so forth and so these remote accesses are kind of what can",
    "start": "407120",
    "end": "412800"
  },
  {
    "text": "make it slow you can mitigate this a little bit with like a asynchronous um",
    "start": "412800",
    "end": "417919"
  },
  {
    "text": "downloads and such but um it's still a problem and then if it doesn't exist Maven 3 will actually cach",
    "start": "417919",
    "end": "424240"
  },
  {
    "text": "this failure and you can kind of see where that might go wrong because if it cashes failure well what if somebody you",
    "start": "424240",
    "end": "429479"
  },
  {
    "text": "know makes it exist later well how do I know that it exists later the this is a",
    "start": "429479",
    "end": "435280"
  },
  {
    "text": "problem on with the on demand access model so this leads into some more",
    "start": "435280",
    "end": "442199"
  },
  {
    "text": "motivations for doing something different is I I think the on demand access model for metadata is is perhaps",
    "start": "442199",
    "end": "447759"
  },
  {
    "text": "not the right way to base your your dependency management system um because your remote path can have many POS many",
    "start": "447759",
    "end": "455840"
  },
  {
    "text": "possible files at the end of it so for example like a snapshot um that can be",
    "start": "455840",
    "end": "460879"
  },
  {
    "text": "updated there's there's different things you could have at the end and you have to contact the remote repository to see",
    "start": "460879",
    "end": "466039"
  },
  {
    "text": "um whether it's up to date uh then we'll move into I'll discuss a couple of different areas and one of those is",
    "start": "466039",
    "end": "472280"
  },
  {
    "text": "metadata uh the the pal format is kind of uh deficient in being able to",
    "start": "472280",
    "end": "478080"
  },
  {
    "text": "describe comp maybe not common but fairly common um needs for dependency",
    "start": "478080",
    "end": "483479"
  },
  {
    "text": "management and I don't think it's going anywhere I don't think it's going to evolve or anything like that IV is a little more powerful but it's not the",
    "start": "483479",
    "end": "490360"
  },
  {
    "text": "standard so I think we should consider uh whether we should do something about that and so I'll talk I'll talk about",
    "start": "490360",
    "end": "495879"
  },
  {
    "start": "492000",
    "end": "492000"
  },
  {
    "text": "some motivations some use cases for that and then um very vague proposals it's",
    "start": "495879",
    "end": "501199"
  },
  {
    "text": "kind of like wave the magic wand and and our problems are solved but uh it's something to consider uh the other thing",
    "start": "501199",
    "end": "507159"
  },
  {
    "text": "is just with workflow this is probably the most boring thing ever but uh this is the kind of thing that you you deal",
    "start": "507159",
    "end": "512479"
  },
  {
    "text": "with daily if I'm running a continuous integration server does my is my cash thread safe if it's Maven it's not if",
    "start": "512479",
    "end": "518680"
  },
  {
    "text": "it's SBT it is but only because there's a gigantic Global lock on the IV cache um so I'll talk about all of these",
    "start": "518680",
    "end": "525640"
  },
  {
    "text": "things the the big motivation that I think you're probably familiar with at least to some extent if you've used",
    "start": "525640",
    "end": "532040"
  },
  {
    "start": "527000",
    "end": "527000"
  },
  {
    "text": "libraries from Scala even if you're using it from Maven or some other Tool uh the problem is that it's not it's",
    "start": "532040",
    "end": "539160"
  },
  {
    "text": "it's kind of a problem but Scala 2.9 is binary and compatible with 2.10 it's a problem when you're trying to use a",
    "start": "539160",
    "end": "544720"
  },
  {
    "text": "library that was only Built for 2.9 with 2.10 because that won't work it will give you a runtime error because they",
    "start": "544720",
    "end": "549959"
  },
  {
    "text": "aren't compatible um it's not a problem because it allows Scala to evolve and we don't really want it to stagnate so it",
    "start": "549959",
    "end": "555959"
  },
  {
    "text": "would be nice if we could kind of have both um they are mostly Source compatible and so this led to um people",
    "start": "555959",
    "end": "563040"
  },
  {
    "text": "wanting to build their Library against 2.9 and 2.10 and every you know it's a little extra work when you're publishing",
    "start": "563040",
    "end": "568480"
  },
  {
    "text": "and it's maybe it's you can't use some new feature but it it generally is isn't a terrible idea so we want to um in",
    "start": "568480",
    "end": "576160"
  },
  {
    "text": "order to do that though when you publish for 2.9 you need your dependencies available for two 2.9 and same thing",
    "start": "576160",
    "end": "581680"
  },
  {
    "text": "when you publish for 2.10 in order to compile you need your dependencies for 2.10 so what that really is is separate",
    "start": "581680",
    "end": "587120"
  },
  {
    "text": "universes here's the dependencies for scholar 29 here's the dependencies for scholar 210 um the best",
    "start": "587120",
    "end": "594640"
  },
  {
    "text": "solution that I could come up with and that I think has I don't think anyone else has come up with a better solution",
    "start": "594640",
    "end": "601000"
  },
  {
    "text": "that encodes to Maven metadata so this is both a meta Maven metadata problem and a maven repository problem is to",
    "start": "601000",
    "end": "608079"
  },
  {
    "text": "append the Scala binary version to the module name so if I have like com. types",
    "start": "608079",
    "end": "613959"
  },
  {
    "text": "save. aa aa aa name will be aaor 210 so this is uh this isn't a great",
    "start": "613959",
    "end": "622680"
  },
  {
    "text": "solution but it's it's fairly simple um so even if it has some problems at least it's simple and we can understand it but",
    "start": "622680",
    "end": "629120"
  },
  {
    "text": "it's fragile because um you know when when they do these these conflict resolutions it only does it between",
    "start": "629120",
    "end": "636079"
  },
  {
    "text": "names that are the same so it's only going to do it between a and a not aore 2.9 and aore 2.10 um so it's outside of",
    "start": "636079",
    "end": "644720"
  },
  {
    "text": "conflict resolution so now we've we've kind of um we're trying to encode something into a system that doesn't",
    "start": "644720",
    "end": "650120"
  },
  {
    "text": "support it and we will pay for it it also does not scale to other uh any",
    "start": "650120",
    "end": "655880"
  },
  {
    "text": "other axes other things you might want to cross version spt plugins 02 013 I also want to break compatibility",
    "start": "655880",
    "end": "662279"
  },
  {
    "text": "occasionally it helps move forward without too much effort maintaining compatibility same with play 2.0 2.1 you",
    "start": "662279",
    "end": "668160"
  },
  {
    "text": "might want to write play plugins um and then it's not able to handle difference",
    "start": "668160",
    "end": "673200"
  },
  {
    "text": "between like forward and backward compatibility so one option is Ivy has these things called extra attributes and",
    "start": "673200",
    "end": "679639"
  },
  {
    "start": "676000",
    "end": "676000"
  },
  {
    "text": "I think they they work pretty well for this you would say you know this is my library for Scola binary version 2.10 um and this participates in",
    "start": "679639",
    "end": "687920"
  },
  {
    "text": "dependency resolution so it's it's kind of natively encoded the problem is that nobody uses IV metadata it's not",
    "start": "687920",
    "end": "693120"
  },
  {
    "text": "published to to Maven repositories um so you could say well let's just use",
    "start": "693120",
    "end": "698720"
  },
  {
    "text": "Ivy metadata I think this is a little hard to push because Ivy's a mature",
    "start": "698720",
    "end": "703800"
  },
  {
    "text": "project uh it's not really going to be developed what we really want is",
    "start": "703800",
    "end": "709480"
  },
  {
    "text": "something that's going to evolve with our needs um yeah the the other benefit is it's",
    "start": "709480",
    "end": "715279"
  },
  {
    "text": "structured information and uh I didn't emphasize this enough at the beginning but really what we want is all automation to the extent that we can",
    "start": "715279",
    "end": "721240"
  },
  {
    "text": "code things that are machine readable we can automate um another example it's kind of",
    "start": "721240",
    "end": "728560"
  },
  {
    "start": "726000",
    "end": "726000"
  },
  {
    "text": "similar but it's actually different and that's richer resolution so there was a problem that came up that AA distributes",
    "start": "728560",
    "end": "734639"
  },
  {
    "text": "standard jars you know AA core AA actors I forget all of them but um then they also have uh instrumented jars so like I",
    "start": "734639",
    "end": "743880"
  },
  {
    "text": "think with aspects and this is used for the type safe console so if you want to you know uh debug your application you",
    "start": "743880",
    "end": "750079"
  },
  {
    "text": "just depend on this special version of the jars instead and they're binary compatible everything like that they're",
    "start": "750079",
    "end": "755399"
  },
  {
    "text": "just dropping but you can't have both on the class path you don't want the uninstrumented ones um shadowing the instrumented ones but there's no real",
    "start": "755399",
    "end": "762519"
  },
  {
    "text": "way to do this in Maven there's no way to say this conflicts with this uh or this provides this and so I forget the",
    "start": "762519",
    "end": "770160"
  },
  {
    "text": "exact um solution we came up with but it was I think it was basically we're going to come I think it was either like hope",
    "start": "770160",
    "end": "776199"
  },
  {
    "text": "for the best or write like an spt Plugin or something but this this is completely excessive and",
    "start": "776199",
    "end": "782639"
  },
  {
    "text": "unnecessary oh right it was right spt plugin Maven plugin and every other build tool that people use um the other",
    "start": "782639",
    "end": "789399"
  },
  {
    "text": "one is renaming something there's limited support in in the pal format for something called relocation this is uh",
    "start": "789399",
    "end": "796360"
  },
  {
    "text": "rather inadequate it's not as good of a user experience I'm happy to go into any of these in detail but again I don't",
    "start": "796360",
    "end": "802000"
  },
  {
    "text": "want to spend the whole time on it you always want to fix the current problems the problems you foresee for the the",
    "start": "802000",
    "end": "807120"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "near future and you also want to say well hey maybe there's some cooler things we could do because you don't want to there's a lot of obstacles to",
    "start": "807120",
    "end": "812920"
  },
  {
    "text": "doing this it's kind of a high barrier you have to really prove that it's worth doing this and one of those things is",
    "start": "812920",
    "end": "818839"
  },
  {
    "text": "well why can't we just add some extra metadata we should have extra metadata associated with the class I mean with",
    "start": "818839",
    "end": "824480"
  },
  {
    "text": "the um sorry with the metadata there should be extra information with the metadata and one of those things could",
    "start": "824480",
    "end": "829880"
  },
  {
    "text": "be main classes associated with the module then you could just tell your dependency manager run this main class well the dependency manager has the list",
    "start": "829880",
    "end": "836560"
  },
  {
    "text": "of all the metadata it knows it can say I know what dat that is I'm I know what module that is let's go fetch the module",
    "start": "836560",
    "end": "842279"
  },
  {
    "text": "and just run the class for you um not thinking about this necessarily for like you know production people who have this",
    "start": "842279",
    "end": "848199"
  },
  {
    "text": "big build and so forth but it's a nice way um to get people up and running quickly with examples other things like",
    "start": "848199",
    "end": "853880"
  },
  {
    "text": "that if you don't like this example come up with a better one um the last motivation that I'll talk",
    "start": "853880",
    "end": "860199"
  },
  {
    "start": "858000",
    "end": "858000"
  },
  {
    "text": "about is management and distribution this is kind of what you deal with if you're not configuring the build or configuring your dependencies and and",
    "start": "860199",
    "end": "866120"
  },
  {
    "text": "taking use of this information you're working with it you're running compile compile then needs a class path how's that class path coming about it's coming",
    "start": "866120",
    "end": "872320"
  },
  {
    "text": "about from the dependency manager which is going to resolve your dependencies and put them on the class path so and",
    "start": "872320",
    "end": "877720"
  },
  {
    "text": "then and then at some point you want to release it right if you don't ever publish your stuff it's useless to other people so as as a library of course you",
    "start": "877720",
    "end": "885279"
  },
  {
    "text": "have an application that doesn't matter but um in my opinion the barrier to publishing is too high uh people are",
    "start": "885279",
    "end": "891959"
  },
  {
    "text": "spending time trying to to complete the 18 steps to to publish to Maven Central",
    "start": "891959",
    "end": "897240"
  },
  {
    "text": "that's something they could be doing they could be writing more Innovative things for scholar working on stuff like that um cash access current concurrent",
    "start": "897240",
    "end": "904240"
  },
  {
    "text": "processes like I said for a continuation integration server um that that's a problem you really don't want uh to be",
    "start": "904240",
    "end": "910639"
  },
  {
    "text": "limited to that the next two are are related integration with Native package managers well that that's kind of a",
    "start": "910639",
    "end": "917079"
  },
  {
    "text": "thing that you don't typically care about for the libraries you're developing you know usually we like we don't mind that they're managed by spt",
    "start": "917079",
    "end": "923959"
  },
  {
    "text": "Maven IV whatever um but it's still important uh you might get SBT from your",
    "start": "923959",
    "end": "930639"
  },
  {
    "text": "package manager a lot lot nice to type pack man SBT or whatever or whatever package manager you use um same with",
    "start": "930639",
    "end": "937360"
  },
  {
    "text": "offline installation kind of similar the maven repository way of doing things and the um on on demand metadata model",
    "start": "937360",
    "end": "945120"
  },
  {
    "text": "doesn't really work so well with offline installation we'd really like to be able to for example play likes to provide a",
    "start": "945120",
    "end": "951160"
  },
  {
    "text": "fairly decent out of the box experience give you one download once it's downloaded you don't have to download anything again of course we also provide",
    "start": "951160",
    "end": "958319"
  },
  {
    "text": "a stack and like to do that there too at typ safe so uh in repository management",
    "start": "958319",
    "end": "964319"
  },
  {
    "text": "mirroring if you've had any issues with the type safe repository recently this is kind of related to this U mirroring a",
    "start": "964319",
    "end": "970639"
  },
  {
    "text": "maven repository is very expensive and uh rather tricky to do you if you remember the Scala tools shutdown uh",
    "start": "970639",
    "end": "977959"
  },
  {
    "text": "this has kind of wrapped that into this point so I guess uh done complaining",
    "start": "977959",
    "end": "983880"
  },
  {
    "start": "982000",
    "end": "982000"
  },
  {
    "text": "here's what we should do about it what do you think um split the metad data and",
    "start": "983880",
    "end": "989319"
  },
  {
    "text": "the artifact repositories make the metadata repository stored in get or any other",
    "start": "989319",
    "end": "995240"
  },
  {
    "text": "distributed Version Control um update and batch instead of on demand don't",
    "start": "995240",
    "end": "1000279"
  },
  {
    "text": "pull down the individual metadata files one by one so don't make your caching decisions per file pull them down all at",
    "start": "1000279",
    "end": "1007079"
  },
  {
    "text": "once you're done the user tells you when to update just do it once efficiently and incrementally for the artifact",
    "start": "1007079",
    "end": "1013040"
  },
  {
    "text": "repository keep that an OnDemand file repository but make the path the hash of",
    "start": "1013040",
    "end": "1018279"
  },
  {
    "text": "the content um and the metadata format I've kind of hinted at some things that would be nice",
    "start": "1018279",
    "end": "1023839"
  },
  {
    "text": "to have um make it richer and evolving and of course the tricky part is actually implementing the dependency",
    "start": "1023839",
    "end": "1029558"
  },
  {
    "text": "manager that supports that but um that's implementation detail uh for the metadata",
    "start": "1029559",
    "end": "1037959"
  },
  {
    "text": "repository uh so stored in G there are quite a few advantages to that",
    "start": "1037959",
    "end": "1044558"
  },
  {
    "text": "um see what do I have to say about that yeah okay I'll talk about that later but",
    "start": "1044559",
    "end": "1050640"
  },
  {
    "text": "you retrieve it locally so you get all of the metadata all at once this makes it possible to implement that um that",
    "start": "1050640",
    "end": "1057720"
  },
  {
    "text": "run main class uh feature that I showed you have it all available you can Implement a search uh I've seen quite a",
    "start": "1057720",
    "end": "1064000"
  },
  {
    "text": "few attempts to um search for a a dependency I I just want to find an HTTP",
    "start": "1064000",
    "end": "1069400"
  },
  {
    "text": "Library why do I have to go contact a remote server or why do I have to like um uh scan Maven Central in order to",
    "start": "1069400",
    "end": "1077880"
  },
  {
    "text": "find all the metadata there's a barrier to this if you want to write a tool now you have to figure out how to index all",
    "start": "1077880",
    "end": "1082919"
  },
  {
    "text": "of Maven Central so you have Maven repository. comom but I mean how many",
    "start": "1082919",
    "end": "1087960"
  },
  {
    "text": "you just don't see a lot of innovation in this space and I think part of the reason is that it's not easy to get access to all the",
    "start": "1087960",
    "end": "1093679"
  },
  {
    "text": "metadata uh I think there's some things to consider instead of a centralized repository uh you think SVN right every",
    "start": "1093679",
    "end": "1101360"
  },
  {
    "text": "every action had to go to maybe not every action but you had centralized uh server for your Version Control git came",
    "start": "1101360",
    "end": "1108080"
  },
  {
    "text": "along and people like why do I need that then you start using getting you're like okay what's SPN um I think the same thing here so for the new one I think",
    "start": "1108080",
    "end": "1116240"
  },
  {
    "text": "you know before you had this on demand access I think well it's not even like it's a new idea right home brew does",
    "start": "1116240",
    "end": "1121480"
  },
  {
    "text": "this um and then Linux distributions do the batch update where you pull all the metadata all at once uh big questions to",
    "start": "1121480",
    "end": "1128280"
  },
  {
    "text": "answer does this scale um Maven centrals large uh what is it like to download all",
    "start": "1128280",
    "end": "1134080"
  },
  {
    "text": "the metadata can get do it efficiently enough or do we just split the repositories up so you only download",
    "start": "1134080",
    "end": "1139200"
  },
  {
    "text": "what you need so can we solve that open question um what does it buy you I think",
    "start": "1139200",
    "end": "1145880"
  },
  {
    "start": "1142000",
    "end": "1142000"
  },
  {
    "text": "I I already covered a couple of these things efficient incremental updates what how many times a day do you delete your IV cache I hope it's decreased if",
    "start": "1145880",
    "end": "1152400"
  },
  {
    "text": "you use 012 if it's not please reproduce and let me know but still if you delete",
    "start": "1152400",
    "end": "1158320"
  },
  {
    "text": "your local cache you have to download everything so that kind of mitigates the the problem with downloading all of the",
    "start": "1158320",
    "end": "1163360"
  },
  {
    "text": "metadata right if if you download all the metadata well now you have all the metadata you only need to get the updates and get we can can offload that",
    "start": "1163360",
    "end": "1169360"
  },
  {
    "text": "to get uh that's what it's good at right just how to pull stuff down efficiently",
    "start": "1169360",
    "end": "1174799"
  },
  {
    "text": "incrementally let it do that if you're not always uh redownloading all of the metadata it",
    "start": "1174799",
    "end": "1181640"
  },
  {
    "text": "might be lower resource requirements on the server I would be interested to see if that happens because it is we know that it is expensive uh to mirror a",
    "start": "1181640",
    "end": "1189120"
  },
  {
    "text": "large repository it is expensive to host a large repository it would be nice if it were not um I think something",
    "start": "1189120",
    "end": "1196880"
  },
  {
    "text": "interesting here that you get for free is you would you could publish all your all of your modules in your project all",
    "start": "1196880",
    "end": "1202520"
  },
  {
    "text": "at once in one commit it's all localized you just view the commit see everything that changed in the metadata um as",
    "start": "1202520",
    "end": "1208840"
  },
  {
    "text": "opposed to you know you publish a few modules and then something happens in your build and it breaks and you don't",
    "start": "1208840",
    "end": "1213960"
  },
  {
    "text": "publish the rest of them so you have an Inc inconsistent publish this is mitigated with staging repositories in Maven usually uh but that's kind of like",
    "start": "1213960",
    "end": "1221039"
  },
  {
    "text": "an intermediate step that you know just adds uh overhead so I think really the",
    "start": "1221039",
    "end": "1227159"
  },
  {
    "text": "big Advantage another big advantage for me is if GitHub if you can just make a GitHub repository and that's your",
    "start": "1227159",
    "end": "1232960"
  },
  {
    "text": "repository I think that's a pretty big win it's it's really nice to see how easy it is to create a repository on",
    "start": "1232960",
    "end": "1238120"
  },
  {
    "text": "GitHub compared to how easy it is to make your own Maven repository if we can",
    "start": "1238120",
    "end": "1243280"
  },
  {
    "text": "reduce that I think it'll be a really big win for the whole Scala ecosystem um",
    "start": "1243280",
    "end": "1248440"
  },
  {
    "text": "version controlling your metadata that also has uh I think quite a bit of benefits you can have reproducible",
    "start": "1248440",
    "end": "1255159"
  },
  {
    "start": "1249000",
    "end": "1249000"
  },
  {
    "text": "builds with most of the like more features of your system uh if you say to",
    "start": "1255159",
    "end": "1260320"
  },
  {
    "text": "um if you say Dynamic revisions to someone who works with builds they're going to say no don't use them it's you",
    "start": "1260320",
    "end": "1266360"
  },
  {
    "text": "can't it's not reproducible builds and the reason is because there's only ever one version of the metadata on Maven Central",
    "start": "1266360",
    "end": "1271880"
  },
  {
    "text": "um you know if you publish a new if you say I want anything between version one and version two exclusive uh and someone",
    "start": "1271880",
    "end": "1278960"
  },
  {
    "text": "publishes a new version next time you go back to to build that build you built last week it it'll get a different",
    "start": "1278960",
    "end": "1284240"
  },
  {
    "text": "version now but if you tag you know you say last week I built with this commit",
    "start": "1284240",
    "end": "1290600"
  },
  {
    "text": "from this repository you know you can actually improve the metadata over time because you're not going to break people",
    "start": "1290600",
    "end": "1297039"
  },
  {
    "text": "who are reply relying on your uh metadata to not change so um I think another useful",
    "start": "1297039",
    "end": "1303400"
  },
  {
    "text": "thing is you can you can view and and audit and diff the metadata changes so you can say you know when you do an",
    "start": "1303400",
    "end": "1308600"
  },
  {
    "text": "update you say oh okay that that now depends on 1.1 makes it a little bit easier to see the changes in",
    "start": "1308600",
    "end": "1316880"
  },
  {
    "text": "metadata the artifact repository I think is fairly straightforward and is a pretty easy win um if you make the path",
    "start": "1316880",
    "end": "1326320"
  },
  {
    "start": "1319000",
    "end": "1319000"
  },
  {
    "text": "the hash of the actual content of the jar and you you make it like a cryptographically strong hash so that in",
    "start": "1326320",
    "end": "1332960"
  },
  {
    "text": "practice there's one hash one jar you have the hash it maps to one jar one jar has one hash um this means that you",
    "start": "1332960",
    "end": "1341799"
  },
  {
    "text": "always know whether you have the right content right if if there's a path with a certain hash there's only one content",
    "start": "1341799",
    "end": "1347799"
  },
  {
    "text": "that's going to be at the end of that hash so if you have that hash in your cash then it's never going to be any different um and so you don't need to",
    "start": "1347799",
    "end": "1355320"
  },
  {
    "text": "check the remote repository it's easy to mirror split or merge there's nothing fancy to it um if I mirror something I",
    "start": "1355320",
    "end": "1362039"
  },
  {
    "text": "don't ever have to contact what I'm mirroring to know whether I'm still up to date because nothing's going to right",
    "start": "1362039",
    "end": "1367600"
  },
  {
    "text": "it the hash this hash is always going to correspond to this content now they can delete it on that remote repository but",
    "start": "1367600",
    "end": "1374600"
  },
  {
    "text": "it doesn't matter it's still valid the main problem is uh coming up with a human readable name um I don't really",
    "start": "1374600",
    "end": "1381880"
  },
  {
    "text": "want to see hashes on my class path that's not going to tell me anything at all uh so I I think there's ways to get",
    "start": "1381880",
    "end": "1389400"
  },
  {
    "text": "around this but um that's just really the main drawback I would say so if we come back to metadata core this is a",
    "start": "1389400",
    "end": "1396159"
  },
  {
    "start": "1394000",
    "end": "1394000"
  },
  {
    "text": "very vague proposal on what to do about it but it it kind of identifies the direction and I'm interested in I'll get",
    "start": "1396159",
    "end": "1403279"
  },
  {
    "text": "to that later but I'm interested in needs like what people would have liked to have done what workflows you have at",
    "start": "1403279",
    "end": "1408480"
  },
  {
    "text": "ET but I think this kind of summarizes the the what what you kind of gives the",
    "start": "1408480",
    "end": "1413760"
  },
  {
    "text": "outline of what you would do with with new metadata and first is identifying attributes the dependency manager",
    "start": "1413760",
    "end": "1420120"
  },
  {
    "text": "doesn't care whether you have like an organization the name whatever it just says are the is the identifier for this",
    "start": "1420120",
    "end": "1425520"
  },
  {
    "text": "the same as this so if there's some utility in generalizing that to just key value pairs you know you just have a map",
    "start": "1425520",
    "end": "1431919"
  },
  {
    "text": "um we can do that similarly with version attributes I've already shown that with cross versioning you have like a a",
    "start": "1431919",
    "end": "1437960"
  },
  {
    "text": "unique ver version that uniquely identifies it so if someone wants to depend on that particular version they say I want um dependency a with this",
    "start": "1437960",
    "end": "1446480"
  },
  {
    "text": "unique version it will never ever pick a different version for you um if you just",
    "start": "1446480",
    "end": "1452320"
  },
  {
    "text": "want something that is binary compatible uh with you know version 1.0 you say I",
    "start": "1452320",
    "end": "1457840"
  },
  {
    "text": "want uh AA binary version 1.0 because this is in a structured",
    "start": "1457840",
    "end": "1462960"
  },
  {
    "text": "format the idea is to make all of this automated for you it's it's not supposed to be like you know now I got to have to",
    "start": "1462960",
    "end": "1469159"
  },
  {
    "text": "specify 18 different properties and this is going to be really complicated the idea is give it a structured format",
    "start": "1469159",
    "end": "1474640"
  },
  {
    "text": "evolve it as the user's needs um and and let's make it um happen so describing",
    "start": "1474640",
    "end": "1479840"
  },
  {
    "text": "attributes these are just like General these aren't necessary for dependency resolution these are things like main class that I talked about maybe you list",
    "start": "1479840",
    "end": "1487159"
  },
  {
    "text": "all the packages in a dependency so that something like Rapture can map packages back to dependencies so it analyzes your",
    "start": "1487159",
    "end": "1493720"
  },
  {
    "text": "Imports and then it can automatically put those uh dependencies on the class path so you don't even need a specify",
    "start": "1493720",
    "end": "1498880"
  },
  {
    "text": "those um generally I think this is where you have potential for Innovation if you're",
    "start": "1498880",
    "end": "1505760"
  },
  {
    "text": "thinking of something that you would like attach to that metadata put it here um SBT 013 will put the base URL for",
    "start": "1505760",
    "end": "1513399"
  },
  {
    "text": "your API docs in Maven properties this is like the super big hack and anytime I",
    "start": "1513399",
    "end": "1519520"
  },
  {
    "text": "ever hack anything in the maven metadata it always comes back to bite me so I'm I'm I'm not sure what this is particularly going to do if you can tell",
    "start": "1519520",
    "end": "1525279"
  },
  {
    "text": "me in advance that would be great but this is where that would go and instead make it native and then when SBT pulls",
    "start": "1525279",
    "end": "1532520"
  },
  {
    "text": "in all your dependencies it can pull that base URL from all of those from all that metadata and pass it to scaladoc",
    "start": "1532520",
    "end": "1539799"
  },
  {
    "text": "which as of 2.10.1 will be able to uh link to external scalid dox it just needs a",
    "start": "1539799",
    "end": "1546159"
  },
  {
    "text": "mapping from class path entry to base URL well you don't want to provide that for every single one of your dependencies right you don't want to go",
    "start": "1546159",
    "end": "1552559"
  },
  {
    "text": "look that up and and list them because now you're back to basically explicitly listing your dependencies uh so we can",
    "start": "1552559",
    "end": "1558520"
  },
  {
    "text": "automate that let's do that and that's what describing attributes can do I've already mentioned how artifacts are are",
    "start": "1558520",
    "end": "1564080"
  },
  {
    "text": "going to be would be uh put in a repository mark them by hash this is um",
    "start": "1564080",
    "end": "1571480"
  },
  {
    "text": "the nice thing about this is that there's there's no uh room for question it's it's not going to vary you say I",
    "start": "1571480",
    "end": "1576559"
  },
  {
    "text": "want this hash that's what you're going to get um then if you sign the metadata",
    "start": "1576559",
    "end": "1581799"
  },
  {
    "text": "like you sign the commit you've signed the metadata you've signed all the artifacts all at once um configuration if you're familiar",
    "start": "1581799",
    "end": "1589039"
  },
  {
    "text": "with IV configurations this would be basically the same thing but cleaned up I don't really want to go into that uh",
    "start": "1589039",
    "end": "1594559"
  },
  {
    "text": "resolution control is what I was talking about with AA and their instrumented jars and their basic jars I want to be able to say this provides this or this",
    "start": "1594559",
    "end": "1600279"
  },
  {
    "text": "conflicts with that and just as an example this is you know just the table that I threw",
    "start": "1600279",
    "end": "1606840"
  },
  {
    "start": "1604000",
    "end": "1604000"
  },
  {
    "text": "together flattened and simplified you have your standard thing organization name you have a unique version maybe a",
    "start": "1606840",
    "end": "1612919"
  },
  {
    "text": "common version um so someone just says well they don't really correspond but",
    "start": "1612919",
    "end": "1618480"
  },
  {
    "text": "maybe you would say 211. z.0 snapshot and you would just get the latest one and of course this isn't quite like",
    "start": "1618480",
    "end": "1624520"
  },
  {
    "text": "Maven where it would be like an OnDemand fetching you would have to actually update the metadata through git so you",
    "start": "1624520",
    "end": "1630039"
  },
  {
    "text": "would say like git pool and then um right so then it would get the latest",
    "start": "1630039",
    "end": "1635840"
  },
  {
    "text": "version within that and you can lock it down you can lock down that commit and you don't have to worry about when it will update the snapshot if you want the",
    "start": "1635840",
    "end": "1642200"
  },
  {
    "text": "snapshot updated update the metadata uh the artifacts listed as hashes um yeah it's basically what I've",
    "start": "1642200",
    "end": "1649240"
  },
  {
    "text": "already said the kind of like biggest absolute",
    "start": "1649240",
    "end": "1654840"
  },
  {
    "text": "biggest problem is compatibility with existing Maven repositories um I don't",
    "start": "1654840",
    "end": "1660840"
  },
  {
    "text": "think anyone would ever under underestimate this uh I certainly would not I've seen all of the bugs in Maven I",
    "start": "1660840",
    "end": "1667720"
  },
  {
    "text": "I don't know how much to what extent you have to reproduce those I guess part of the solution is you just use ether and Ivy as your",
    "start": "1667720",
    "end": "1674840"
  },
  {
    "text": "interface but uh and one thing that would be nice would be repository side so we we've said we have this git",
    "start": "1674840",
    "end": "1681360"
  },
  {
    "text": "repository with metadata in it so you would just import Maven Central for example I mean I say just import I have",
    "start": "1681360",
    "end": "1687519"
  },
  {
    "text": "no idea how difficult that is but um that would be the idea is you do it once you have a repository that that pulls in",
    "start": "1687519",
    "end": "1693960"
  },
  {
    "text": "all the the metadata and you write a conversion tool so that's completely separate component we can develop the rest of it separately I mean of course",
    "start": "1693960",
    "end": "1700720"
  },
  {
    "text": "you have to have a metadata format that is useful and worth converting to but",
    "start": "1700720",
    "end": "1705880"
  },
  {
    "text": "you do the conversion once you don't embed it in your tool like like Ivy has to convert MAV and metadata on the Fly and if there's a problem you have to",
    "start": "1705880",
    "end": "1712799"
  },
  {
    "text": "publish new version of Ivy right and people have to actually start using that and then SBT has to use that there's a",
    "start": "1712799",
    "end": "1718960"
  },
  {
    "text": "lot a large delay in between um fixing it but if we have Version Control and we",
    "start": "1718960",
    "end": "1725760"
  },
  {
    "text": "do batch conversion you you report a problem we fix it problem solved like end of problem not 18,000 other people",
    "start": "1725760",
    "end": "1733480"
  },
  {
    "text": "also have this problem I think the the biggest difficulty is probably publishing back",
    "start": "1733480",
    "end": "1738519"
  },
  {
    "text": "to Maven repositories uh and working with General Maven workflows things that support",
    "start": "1738519",
    "end": "1745039"
  },
  {
    "text": "Maven so I think the the best perhaps the best idea that I have now is is to",
    "start": "1745039",
    "end": "1751120"
  },
  {
    "text": "proxy a a uh this new dependency management repository with like a server",
    "start": "1751120",
    "end": "1757320"
  },
  {
    "text": "that will convert requests for Aven artifacts um not real clear on the details it sounds like a good idea",
    "start": "1757320",
    "end": "1763360"
  },
  {
    "text": "though um many of these things are in that",
    "start": "1763360",
    "end": "1769200"
  },
  {
    "start": "1764000",
    "end": "1764000"
  },
  {
    "text": "category so there's lots of opportunities though um so if any of these things sound interesting you",
    "start": "1769200",
    "end": "1775120"
  },
  {
    "text": "should uh speak up because it's a good time to get started in the beginning um",
    "start": "1775120",
    "end": "1780480"
  },
  {
    "text": "really really the big thing that I think is most difficult to do is what do we",
    "start": "1780480",
    "end": "1785720"
  },
  {
    "text": "want to do what are the workflows that should work well what are the requirements for dependencies what what",
    "start": "1785720",
    "end": "1791880"
  },
  {
    "text": "things do we need we can of course look at other build systems uh other dependency Management Systems Linux",
    "start": "1791880",
    "end": "1797679"
  },
  {
    "text": "distribution we can look at all of these things but those will only kind of tell us what other people have bothered to solve um there's a lot of smart people",
    "start": "1797679",
    "end": "1804880"
  },
  {
    "text": "so that may be everything but anything that's specific to Scala that we run into this is really where you can help a",
    "start": "1804880",
    "end": "1812320"
  },
  {
    "text": "lot um I I don't have all the problems that you have I have different problems",
    "start": "1812320",
    "end": "1817559"
  },
  {
    "text": "same with everyone else uh but then when it comes to actually doing certain things there's of course lots of good uh",
    "start": "1817559",
    "end": "1823679"
  },
  {
    "text": "tasks there metadata format independency resolution that's a good like actual computer science it's like official hard",
    "start": "1823679",
    "end": "1830080"
  },
  {
    "text": "problem um I think the existing things don't really they do heris um I think there",
    "start": "1830080",
    "end": "1837600"
  },
  {
    "text": "was an attempt to get Maven using sat for Jay I I don't believe that worked out um very Noble effort U regardless of",
    "start": "1837600",
    "end": "1846559"
  },
  {
    "text": "how it happened uh to to actually work out but this is a hard problem I think it's interesting and worth worth doing I",
    "start": "1846559",
    "end": "1852519"
  },
  {
    "text": "think metadata format can really improve um our experiences with working because",
    "start": "1852519",
    "end": "1857600"
  },
  {
    "text": "depending management is really about collaboration it's really about me being able to use your your uh binaries you being able to use mine and the less time",
    "start": "1857600",
    "end": "1864840"
  },
  {
    "text": "we spend on that the more time we spend on on useful things um compatibility writing this tool that Imports stuff uh",
    "start": "1864840",
    "end": "1872519"
  },
  {
    "text": "that'll be a blast but I think everyone will respect that the difference between if if you think this is a good idea the",
    "start": "1872519",
    "end": "1879519"
  },
  {
    "text": "difference between the succeeding and not succeeding is whether it works well with Maven I mean that that's really the",
    "start": "1879519",
    "end": "1886480"
  },
  {
    "text": "way it's going to work out the user interface um is also important all these things are important but for",
    "start": "1886480",
    "end": "1894080"
  },
  {
    "text": "example uh being able to just say hey hash this jar sticking in the cash you",
    "start": "1894080",
    "end": "1900000"
  },
  {
    "text": "know nice nice simple command for that simple command for add a repository do update stuff like that I haven't really",
    "start": "1900000",
    "end": "1907440"
  },
  {
    "text": "talked about SBT a huge amount because really a dependency manager dependency manager should be in independent of the",
    "start": "1907440",
    "end": "1913399"
  },
  {
    "text": "build tool build tool should be independent they should inform each other and certainly I am interested in this working well",
    "start": "1913399",
    "end": "1919760"
  },
  {
    "text": "with spt and solving spt problems um but absolutely it should be a separate Library um with its own user interface",
    "start": "1919760",
    "end": "1928440"
  },
  {
    "text": "and also a good API but I think those don't need to be together this is a good example of something that I don't think",
    "start": "1928440",
    "end": "1933919"
  },
  {
    "text": "is a huge amount of work but is a worthwhile contribution for someone to focus on exclusively uh so there's more stuff to",
    "start": "1933919",
    "end": "1940120"
  },
  {
    "text": "do but there's plenty of plenty of things to do the key here is that if you",
    "start": "1940120",
    "end": "1945799"
  },
  {
    "text": "are waiting for me to do this it's never going to",
    "start": "1945799",
    "end": "1949840"
  },
  {
    "text": "happen maybe not never but it would take a long time so the real question though is is it",
    "start": "1952880",
    "end": "1959399"
  },
  {
    "text": "worth it because it is going to be a lot of effort say even I were to do it by myself that's something that I'm going",
    "start": "1959399",
    "end": "1965679"
  },
  {
    "text": "to be spending time on as opposed to doing something else fixing your bug in spt or whatever making compilation",
    "start": "1965679",
    "end": "1971000"
  },
  {
    "text": "faster all that's generally Greg's job now so maybe I will have time to do this",
    "start": "1971000",
    "end": "1976559"
  },
  {
    "text": "um again it's uh people's people's interest in doing this is is whether it's going to succeed and yeah that's",
    "start": "1976559",
    "end": "1982760"
  },
  {
    "text": "that's about um all I have to say other than session tomorrow if this is interesting so the first question I want",
    "start": "1982760",
    "end": "1988799"
  },
  {
    "text": "to hear from you is is it worth it because if it's not let's just go drink",
    "start": "1988799",
    "end": "1994720"
  },
  {
    "text": "and then if it is worth it are you interested what ideas do you have what",
    "start": "1994720",
    "end": "2000639"
  },
  {
    "text": "is not going to work um really constructive feedback is",
    "start": "2000639",
    "end": "2006320"
  },
  {
    "text": "is the best you know what is what have you had now what can we do um workflows",
    "start": "2006320",
    "end": "2013039"
  },
  {
    "text": "reliability automation are the idea so yeah again this is just me saying I think this would help it's certainly not",
    "start": "2013039",
    "end": "2020000"
  },
  {
    "text": "like a guaranteed Project typ SAFE is not saying like yeah Mark you should do this it's kind of like you know if if if it's what we need",
    "start": "2020000",
    "end": "2027480"
  },
  {
    "text": "to do then let's get people to help really all right well thank you for your",
    "start": "2027480",
    "end": "2034120"
  },
  {
    "text": "time [Music]",
    "start": "2034120",
    "end": "2047400"
  }
]