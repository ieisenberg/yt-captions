[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "[Music]",
    "start": "3320",
    "end": "14289"
  },
  {
    "text": "hi everyone I'm not sure how many of you live in a hilly City like San Francisco",
    "start": "15160",
    "end": "20199"
  },
  {
    "text": "speaking for myself I have lived in SF for the past three years but even to this day I still run into this issue",
    "start": "20199",
    "end": "27480"
  },
  {
    "text": "where every time I try to get from point A to point B in the city whether it's for dinner for a walk I'll look at",
    "start": "27480",
    "end": "34480"
  },
  {
    "text": "Google Maps and be like that looks easy but when I actually get on my way at",
    "start": "34480",
    "end": "39800"
  },
  {
    "text": "some point I'll realize that up ahead is a hill with a non-trivial incline and",
    "start": "39800",
    "end": "45440"
  },
  {
    "text": "that happens a lot in San Francisco because it is so hilly almost everywhere when I think about it this is this sort",
    "start": "45440",
    "end": "52600"
  },
  {
    "text": "of uphill Journey resembles airbnb's journey to service oriented architecture or SOA for short in the sense that we",
    "start": "52600",
    "end": "60120"
  },
  {
    "text": "started out in a flat and straightforward path of migrating to SOA then realized that there's an even",
    "start": "60120",
    "end": "65960"
  },
  {
    "text": "steeper and much more interesting learning curve beyond that today I will share with you four key lessons that we",
    "start": "65960",
    "end": "72320"
  },
  {
    "text": "have learned from our journey along the way but before that let me introduce",
    "start": "72320",
    "end": "77479"
  },
  {
    "text": "myself my name is Selena and I'm a software engineer at Airbnb a fun fact about me my favorite",
    "start": "77479",
    "end": "84759"
  },
  {
    "start": "78000",
    "end": "222000"
  },
  {
    "text": "slack Channel at work is the dead jokes Channel where people share",
    "start": "84759",
    "end": "90520"
  },
  {
    "text": "that jokes on most days I'll be reading other people's jokes but on the occasional day when I feel inspired I",
    "start": "90520",
    "end": "97680"
  },
  {
    "text": "will post some as well and here's one for you why did a scarecrow get a",
    "start": "97680",
    "end": "104758"
  },
  {
    "text": "promotion it is because he was outstanding in his field it's weird that I don't get to see",
    "start": "104960",
    "end": "112200"
  },
  {
    "text": "people's reactions live because this is a pre-recording and I'm basically talking to a wall but anyway now that I",
    "start": "112200",
    "end": "118960"
  },
  {
    "text": "have gotten my add that joke out of the way here's the four lessons from our journey to SOA let's dive straight into",
    "start": "118960",
    "end": "127039"
  },
  {
    "text": "the first one invest in common infrastructure early in your in your SOA Journey because this will help to",
    "start": "127039",
    "end": "134080"
  },
  {
    "text": "turbocharge your migration from a monolith to SOA to give you more context",
    "start": "134080",
    "end": "140319"
  },
  {
    "text": "let's spend some time first on how we went about our migration back in 2008 just like most",
    "start": "140319",
    "end": "146599"
  },
  {
    "text": "small Scrappy startups Airbnb started out with a single web application written using the Ruby Onre framework",
    "start": "146599",
    "end": "153640"
  },
  {
    "text": "with the model view controller Paradigm but over the years as Airbnb expanded its Global footprint product",
    "start": "153640",
    "end": "160440"
  },
  {
    "text": "offering and engineering team the single web app you saw here grew into a massive",
    "start": "160440",
    "end": "166680"
  },
  {
    "text": "monolith and since it is developed using the Ruby on Ra's framework internally we",
    "start": "166680",
    "end": "172040"
  },
  {
    "text": "call it the monoral as more Engineers jump onto the monoral it was becoming slow unstable",
    "start": "172040",
    "end": "179080"
  },
  {
    "text": "hard to maintain and a single source of failure so in 2018 we launched a",
    "start": "179080",
    "end": "184360"
  },
  {
    "text": "companywide initiative to migrate our Tech Deck from this slow moving monor into a service oriented",
    "start": "184360",
    "end": "191000"
  },
  {
    "text": "architecture similar to the model view controller Paradigm we decided to decompose the monolith into presentation",
    "start": "191000",
    "end": "198120"
  },
  {
    "text": "services that renders data in a userfriendly format for f and clients to consume as well as mid tier Services",
    "start": "198120",
    "end": "205599"
  },
  {
    "text": "that's grouped around shared business concerns and can be used in multiple contexts and then under those there are",
    "start": "205599",
    "end": "211480"
  },
  {
    "text": "data services that encapsulate multiple databases in the uniform data layer to me to to make this abstract",
    "start": "211480",
    "end": "219360"
  },
  {
    "text": "diagram a little bit more concrete let's use host reservation details or hrd for",
    "start": "219360",
    "end": "225159"
  },
  {
    "start": "222000",
    "end": "320000"
  },
  {
    "text": "short as a case study before I explain what hrd is I want you to meet Maria so",
    "start": "225159",
    "end": "232319"
  },
  {
    "text": "Maria is a new Airbnb host based in Colombia she just publ published her",
    "start": "232319",
    "end": "237560"
  },
  {
    "text": "listing on Airbnb last week and today she's received her first booking",
    "start": "237560",
    "end": "243040"
  },
  {
    "text": "request when she opens her host inbox she sees a message from the guest",
    "start": "243040",
    "end": "248159"
  },
  {
    "text": "Christopher and this panel on the right here that displays key information about the trip being requested and the guest",
    "start": "248159",
    "end": "254879"
  },
  {
    "text": "is the host reservation details panel and it pulls a lot of information",
    "start": "254879",
    "end": "261079"
  },
  {
    "text": "from a myriad of sources in our system including users payments listings",
    "start": "261079",
    "end": "267000"
  },
  {
    "text": "reviews and Etc in fact there's a lot more information that it offers even below",
    "start": "267000",
    "end": "272600"
  },
  {
    "text": "the fold so to migrate this complex um",
    "start": "272600",
    "end": "278759"
  },
  {
    "text": "product feature into our SOA Paradigm we basically broke down the logic into a",
    "start": "278759",
    "end": "284479"
  },
  {
    "text": "presentation service that handles the view layer business logic a few mid tier services that handles right operations",
    "start": "284479",
    "end": "292360"
  },
  {
    "text": "such as confirming or declining a booking request and some data services",
    "start": "292360",
    "end": "297440"
  },
  {
    "text": "behind them down a stack that encapsulate different product entities such as reservations users and listings",
    "start": "297440",
    "end": "304199"
  },
  {
    "text": "and of course there are other services on each layer and we interact with many of them every time we serve a request",
    "start": "304199",
    "end": "312360"
  },
  {
    "text": "and by the way let's call our reservation presentation service Ramen because who doesn't like",
    "start": "312360",
    "end": "319039"
  },
  {
    "text": "Ramen so what makes this Monumental task of migrating complex paic possible are",
    "start": "319039",
    "end": "325840"
  },
  {
    "start": "320000",
    "end": "678000"
  },
  {
    "text": "the common building blocks that our infrastructure team provided that allow us to build services with confidence and",
    "start": "325840",
    "end": "332600"
  },
  {
    "text": "speed first we have an in-house API framework built on Thrift it is used by",
    "start": "332600",
    "end": "338720"
  },
  {
    "text": "all airbe services to Define clean API and to talk to each other so let's say that as part of the business logic Ramen",
    "start": "338720",
    "end": "346280"
  },
  {
    "text": "has to read data from tofu service the tofu engineer only has to define the endpoint in simple Thrift language and a",
    "start": "346280",
    "end": "354360"
  },
  {
    "text": "framework will create multi-threaded RPC clients to facilitate interservice communication and handle stuff like",
    "start": "354360",
    "end": "361039"
  },
  {
    "text": "error propagation observability metrics and schema validation this means that Engineers can",
    "start": "361039",
    "end": "367280"
  },
  {
    "text": "focus on implementing The Core Business logic and not spend time worrying about the pluming details of interservice",
    "start": "367280",
    "end": "373960"
  },
  {
    "text": "communication based on this framework we have also developed productivity tools such as this API Explorer which",
    "start": "373960",
    "end": "381560"
  },
  {
    "text": "Engineers can use to browse different Services figure out which endpoints to call and how to call",
    "start": "381560",
    "end": "387240"
  },
  {
    "text": "them second we also have power grid which is another in-house Library built",
    "start": "387240",
    "end": "393319"
  },
  {
    "text": "here that makes it easy to run tasks in parallel under the hood power grid helps",
    "start": "393319",
    "end": "399680"
  },
  {
    "text": "us organize our code as a directed acyclic graph where each note is a function or task we can use it to model",
    "start": "399680",
    "end": "407560"
  },
  {
    "text": "each service end point as a data flow with requests as the input and response as the output of the data flow because",
    "start": "407560",
    "end": "415240"
  },
  {
    "text": "it handles multi-threading and concurrency we can schedule tasks to run in parallel",
    "start": "415240",
    "end": "420280"
  },
  {
    "text": "so let's take host sending a special offer to the guest as an example there's",
    "start": "420280",
    "end": "425599"
  },
  {
    "text": "a bunch of checks and validations that have to be performed before we allow the host to send a special offer so using",
    "start": "425599",
    "end": "431639"
  },
  {
    "text": "power grid we will take the listing ID from the request and use it to fetch",
    "start": "431639",
    "end": "436960"
  },
  {
    "text": "information about the listing from the listing data service then we will pass the information along to a bunch of",
    "start": "436960",
    "end": "442800"
  },
  {
    "text": "Downstream services for validation which happens in parallel after that we will aggregate",
    "start": "442800",
    "end": "448759"
  },
  {
    "text": "all validation responses make sure that we got green light from everyone before writing back to the special offer data",
    "start": "448759",
    "end": "454759"
  },
  {
    "text": "service to send it to the guest so using this Library provides a few benefits first um it provides low",
    "start": "454759",
    "end": "461960"
  },
  {
    "text": "latency for performing network iio operations concurrently which really makes a difference when your endpoint",
    "start": "461960",
    "end": "468400"
  },
  {
    "text": "has multiple Downstream dependencies it also offers granular metrics for each node in the U data flow",
    "start": "468400",
    "end": "476319"
  },
  {
    "text": "which helps us to pinpoint any bottleneck in the data flow p P line these benefits help to ensure that our",
    "start": "476319",
    "end": "482639"
  },
  {
    "text": "service is performant and observable the third building block that we have is one touch which is another",
    "start": "482639",
    "end": "490280"
  },
  {
    "text": "framework built um on top of kubernetes that allows us to manage our services",
    "start": "490280",
    "end": "495680"
  },
  {
    "text": "transparently and to deploy to different environments efficiently so this framework has two key aspects first is",
    "start": "495680",
    "end": "502840"
  },
  {
    "text": "that all service configurations should be managed in one place in git so for",
    "start": "502840",
    "end": "508800"
  },
  {
    "text": "example all the configs for the ramen service lives in this infrastructure folder we can from there we can easily",
    "start": "508800",
    "end": "515800"
  },
  {
    "text": "configure dependencies alerts logging deploy environments CPU resources here",
    "start": "515800",
    "end": "521240"
  },
  {
    "text": "right alongside our source code folder and the second we also have this magical K tool which is a command line",
    "start": "521240",
    "end": "528279"
  },
  {
    "text": "tool built on top of kubernetes that allows us to deploy our service to different different environments on",
    "start": "528279",
    "end": "533959"
  },
  {
    "text": "kubernetes clusters so if I just type K all on the command line it will",
    "start": "533959",
    "end": "539600"
  },
  {
    "text": "automatically generate the conix conix build the app and deploy it to a remote",
    "start": "539600",
    "end": "545600"
  },
  {
    "text": "cluster if you think about it it's just like making a bowl of ramen where first",
    "start": "545600",
    "end": "550720"
  },
  {
    "text": "you have to generate the bowl the configs and then build the ramen which is the main app and basically deploy",
    "start": "550720",
    "end": "557360"
  },
  {
    "text": "with the garnish with with your last step which um gives you the final um end",
    "start": "557360",
    "end": "562839"
  },
  {
    "text": "product so all environments whether it's staging or uh production are deployed",
    "start": "562839",
    "end": "568600"
  },
  {
    "text": "the same way in this way from the service governance perspective it makes it very easy for",
    "start": "568600",
    "end": "574120"
  },
  {
    "text": "everyone to orchestrate deploy and diagnose a service because there's only one place to look and one place to",
    "start": "574120",
    "end": "581519"
  },
  {
    "text": "learn lastly we have Spiner which is an open-source continuous delivery platform",
    "start": "581519",
    "end": "587640"
  },
  {
    "text": "that we use to deploy our services it provides safe and repeatable workflows for deploying changes to production and",
    "start": "587640",
    "end": "595120"
  },
  {
    "text": "one aspect that has been especially helpful for us is the automated canary analysis in this step in the deploy",
    "start": "595120",
    "end": "602000"
  },
  {
    "text": "pipeline we basically deploy both our old and new snapshots to two temporary",
    "start": "602000",
    "end": "607800"
  },
  {
    "text": "environments um respectively here we have Baseline environment and Canary um",
    "start": "607800",
    "end": "612920"
  },
  {
    "text": "environment which has the new snapshot and then we r a small percentage of our",
    "start": "612920",
    "end": "618040"
  },
  {
    "text": "traffic to um both of them then key metrics such as error rates are",
    "start": "618040",
    "end": "624480"
  },
  {
    "text": "automatically ingested and fed into statistical tests that produce an aggregate score for the new Canary",
    "start": "624480",
    "end": "630800"
  },
  {
    "text": "environment as measured against the Baseline then based on the score this",
    "start": "630800",
    "end": "635959"
  },
  {
    "text": "analysis tool will decide whether to fail or promote the canary to the next stage in the deploy pipeline so in an",
    "start": "635959",
    "end": "643560"
  },
  {
    "text": "service oriented architecture where so many services are deployed every single day this helps us to release code",
    "start": "643560",
    "end": "649880"
  },
  {
    "text": "changes at scale with confidence so thanks to all these infra",
    "start": "649880",
    "end": "655519"
  },
  {
    "text": "pieces we were able to migrate our core product functionality to SOA in the span",
    "start": "655519",
    "end": "660560"
  },
  {
    "text": "of just two to three years and reap the benefit of higher higher reliability",
    "start": "660560",
    "end": "665920"
  },
  {
    "text": "business agility and lose coupling between our services so after all this work you",
    "start": "665920",
    "end": "672959"
  },
  {
    "text": "think that we can now finally take a nap in front of the computer but honestly we are not done in",
    "start": "672959",
    "end": "680120"
  },
  {
    "start": "678000",
    "end": "745000"
  },
  {
    "text": "fact we haven't started climbing the metaphorical Hill what we realize is that sometimes it could take more time",
    "start": "680120",
    "end": "687160"
  },
  {
    "text": "to ship a feature due to new frictions introduced by SOA since now Engineers",
    "start": "687160",
    "end": "692279"
  },
  {
    "text": "need to acain themselves with more services and make changes in those Services before they can ship a change",
    "start": "692279",
    "end": "699639"
  },
  {
    "text": "what's more due to unconstrained call patterns between Services where anyone",
    "start": "699639",
    "end": "704720"
  },
  {
    "text": "can call anyone our dependency graph ended up being a little bit complicated and start to look something",
    "start": "704720",
    "end": "711040"
  },
  {
    "text": "like this bunch of Christmas lights this is unideal and potentially",
    "start": "711040",
    "end": "716240"
  },
  {
    "text": "dangerous especially when there are circular dependencies between our services which can make it really hard",
    "start": "716240",
    "end": "722040"
  },
  {
    "text": "to visualize and understand the intricate relationships between our services basically it's a complex mental",
    "start": "722040",
    "end": "728360"
  },
  {
    "text": "model that Engineers have to maintain also highly stable Services can be",
    "start": "728360",
    "end": "733839"
  },
  {
    "text": "easily brought out by more volatile Services because um it's an ecosystem where everyone depends on everyone",
    "start": "733839",
    "end": "740880"
  },
  {
    "text": "else so to address these issues we decide to simplify service",
    "start": "740880",
    "end": "747000"
  },
  {
    "start": "745000",
    "end": "890000"
  },
  {
    "text": "dependencies if you recall we designed our AR architecture to be a tier text",
    "start": "747000",
    "end": "752360"
  },
  {
    "text": "deck consisting of presentation mid tier and data services and the motivation was",
    "start": "752360",
    "end": "758399"
  },
  {
    "text": "to separate Services into layers as shown in this diagram based on their technical",
    "start": "758399",
    "end": "764800"
  },
  {
    "text": "priorities basically as we go up the stack towards applications and UI layers",
    "start": "764800",
    "end": "770279"
  },
  {
    "text": "the primary consideration is iteration speed and schema flexibility leading to",
    "start": "770279",
    "end": "775440"
  },
  {
    "text": "more specific and fast changing API and this Maps through gener Maps through our presentation services on the other hand",
    "start": "775440",
    "end": "783160"
  },
  {
    "text": "if we go down the stack towards platform and infr layers since their blast radius",
    "start": "783160",
    "end": "788360"
  },
  {
    "text": "is bigger they need to have more generalized API and schema and higher reliability and stability",
    "start": "788360",
    "end": "795600"
  },
  {
    "text": "requirements so for an SOA to be reliable and resilient it is imperative",
    "start": "795600",
    "end": "801000"
  },
  {
    "text": "that stable services do not depend on more volatile ones so conceptually a higher tier can call lower tier service",
    "start": "801000",
    "end": "808519"
  },
  {
    "text": "but not by VI Versa however the problem with our existing s SOA system was that there was",
    "start": "808519",
    "end": "815199"
  },
  {
    "text": "not enough service governance and dependency management to enforce this fundamental principle and to restrict",
    "start": "815199",
    "end": "821519"
  },
  {
    "text": "who can call who hence to enforce a topology driven layer architecture we",
    "start": "821519",
    "end": "827720"
  },
  {
    "text": "introduced service blocks at a platform layer where each block is a collection of services with related business",
    "start": "827720",
    "end": "834959"
  },
  {
    "text": "functionalities for example the listing block here will encapsulate both the data and business logic that inform core",
    "start": "834959",
    "end": "842079"
  },
  {
    "text": "listing attributes and then it will expose a simple consistent read and write API to",
    "start": "842079",
    "end": "847680"
  },
  {
    "text": "Upstream clients through the facade so under the hood the listing facade will orchestrate coordination",
    "start": "847680",
    "end": "854560"
  },
  {
    "text": "between the underlying data and business logic Services while providing a layer of abstraction and concealing the",
    "start": "854560",
    "end": "860839"
  },
  {
    "text": "underlying complexity from abing clients we also enforce a strict topology by",
    "start": "860839",
    "end": "866600"
  },
  {
    "text": "prohibiting clients from calling any internal Serv Services as well as prohibiting blocks from having circular",
    "start": "866600",
    "end": "872519"
  },
  {
    "text": "dependency with each other so with such a higher level of abstraction it is much easier for oping",
    "start": "872519",
    "end": "879480"
  },
  {
    "text": "clients to discover and leverage core functionality it is also much easier for us to manage block dependencies and",
    "start": "879480",
    "end": "886360"
  },
  {
    "text": "maintain high levels of reliability next we also spent some time",
    "start": "886360",
    "end": "891639"
  },
  {
    "start": "890000",
    "end": "1156000"
  },
  {
    "text": "on platformization so looking at this diagram again we have",
    "start": "891639",
    "end": "897920"
  },
  {
    "text": "notice that we have quite number of presentation Services if we zoom into a typical",
    "start": "897920",
    "end": "903120"
  },
  {
    "text": "presentation service they are usually performing three main functions um across the board which include first",
    "start": "903120",
    "end": "910440"
  },
  {
    "text": "fetching and hydrating data from different Downstream services for example Ramen service alone cost 10",
    "start": "910440",
    "end": "916279"
  },
  {
    "text": "services to hydrate data for host reservation details second um these",
    "start": "916279",
    "end": "921959"
  },
  {
    "text": "presentation Services also perform simple transformation of the data for example Ramen service can easily um have",
    "start": "921959",
    "end": "929560"
  },
  {
    "text": "to merge data from 10 different Services into something that the client expects",
    "start": "929560",
    "end": "934680"
  },
  {
    "text": "third um Services can also perform permission checks before proceeding with more complex business",
    "start": "934680",
    "end": "941560"
  },
  {
    "text": "logic as time went on what we realize is that Engineers were spending a lot of time on these three functions even",
    "start": "941560",
    "end": "948480"
  },
  {
    "text": "though it is a lot of you know duplication boiler plate code um and repeated patterns so our approach to",
    "start": "948480",
    "end": "956360"
  },
  {
    "text": "this problem is to introduce a platform data access layer that provides a single",
    "start": "956360",
    "end": "962279"
  },
  {
    "text": "Consolidated graphql schema stitching together different entities such as listings user reservations across all of",
    "start": "962279",
    "end": "969199"
  },
  {
    "text": "airbnb's online data it also serves as a platform to host all the mundane data fetching and",
    "start": "969199",
    "end": "975279"
  },
  {
    "text": "hydration logic rather than requiring duplication of this logic across many different presentation",
    "start": "975279",
    "end": "981319"
  },
  {
    "text": "services so together with a more complex presentation Logic on the right and the",
    "start": "981319",
    "end": "986360"
  },
  {
    "text": "right Logic on the on the left and right Logic on the right um the both of which",
    "start": "986360",
    "end": "992680"
  },
  {
    "text": "attend to a different set of constraints and the detail of which we will ignore for now this data access layer will",
    "start": "992680",
    "end": "997920"
  },
  {
    "text": "eventually replace um all presentation Services the service blocks below the",
    "start": "997920",
    "end": "1004600"
  },
  {
    "text": "data access layer will also replace the old data um Services as well as mid tier",
    "start": "1004600",
    "end": "1009639"
  },
  {
    "text": "services so you can see that with this data access layer we continue to simplify service",
    "start": "1009639",
    "end": "1015480"
  },
  {
    "text": "dependencies but going back to um the layer itself in essence it is an",
    "start": "1015480",
    "end": "1021519"
  },
  {
    "text": "enhanced graphql engine that reimagine the way data is fetched in our SOA by",
    "start": "1021519",
    "end": "1027280"
  },
  {
    "text": "going from a service oriented to a data oriented um hydration Paradigm so for example instead of",
    "start": "1027280",
    "end": "1034880"
  },
  {
    "text": "writing code to explicitly call um reservation data service to get reservation data the caller will instead",
    "start": "1034880",
    "end": "1042038"
  },
  {
    "text": "write a declarative query on the reservation entity and then they can even fetch um Associated lis and guas",
    "start": "1042039",
    "end": "1049440"
  },
  {
    "text": "user data so such queries are made possible by a graphql schema that's enriched with",
    "start": "1049440",
    "end": "1056760"
  },
  {
    "text": "um special annotations that we build in house for example on this um on the",
    "start": "1056760",
    "end": "1061880"
  },
  {
    "text": "screen you can see that the service spe node annotation with its templated Fields allows us to associate a graph",
    "start": "1061880",
    "end": "1069280"
  },
  {
    "text": "Tri type with a service endpoint where the response from the service will be",
    "start": "1069280",
    "end": "1074360"
  },
  {
    "text": "automatically wired back to corresponding attributes defined in the graph Q type",
    "start": "1074360",
    "end": "1079640"
  },
  {
    "text": "as another example the service backed not key annotation allows us to link",
    "start": "1079640",
    "end": "1085280"
  },
  {
    "text": "different types together for instance the guest ID on the reservation type can",
    "start": "1085280",
    "end": "1090640"
  },
  {
    "text": "link to the fully flashed user type this allows callers to um basically",
    "start": "1090640",
    "end": "1097320"
  },
  {
    "text": "fetch user um Fields um alongside the reservation fields in one query aside",
    "start": "1097320",
    "end": "1103400"
  },
  {
    "text": "from these there are also a privacy there is also a privacy annotation that wires in um permission checks and also",
    "start": "1103400",
    "end": "1110640"
  },
  {
    "text": "an ownership annotation at the top that makes it easy to Route alerts um to the right",
    "start": "1110640",
    "end": "1116440"
  },
  {
    "text": "teams so all in all these annotations with declarative templates allows us to",
    "start": "1116440",
    "end": "1122200"
  },
  {
    "text": "easily create types construct an entire graph and codeen the data loaders for each type in a way that is configuration",
    "start": "1122200",
    "end": "1129360"
  },
  {
    "text": "driven which reduces the potential for error in addition we also have this",
    "start": "1129360",
    "end": "1135600"
  },
  {
    "text": "online IDE built on top of the open source QR library that makes it easy to",
    "start": "1135600",
    "end": "1140919"
  },
  {
    "text": "explore the schema and inspect the data feted so to summarize platforming data",
    "start": "1140919",
    "end": "1147200"
  },
  {
    "text": "hydration allows Engineers to focus on product Innovation instead of writing the same data hydration code over and",
    "start": "1147200",
    "end": "1153799"
  },
  {
    "text": "over again lastly as we continue to evolve our s SOA we also decided to unify our",
    "start": "1153799",
    "end": "1161200"
  },
  {
    "start": "1156000",
    "end": "1465000"
  },
  {
    "text": "client facing API in our original SOA diagram each",
    "start": "1161200",
    "end": "1167360"
  },
  {
    "text": "presentation service is used usually maintained by different product teams um by virtue of Conway's law an implication",
    "start": "1167360",
    "end": "1174720"
  },
  {
    "text": "of this is that each presentation service tends to Define their own client facing API and solve problems their own",
    "start": "1174720",
    "end": "1182400"
  },
  {
    "text": "way there wasn't a common set of best practices and people sometimes ended up",
    "start": "1182400",
    "end": "1187799"
  },
  {
    "text": "Reinventing the wheel the result is lower developer velocity more bugs and sometimes",
    "start": "1187799",
    "end": "1194919"
  },
  {
    "text": "inconsistent user experience so our solution to the problem is app framework which is a",
    "start": "1194919",
    "end": "1202640"
  },
  {
    "text": "in-house unified opinionated service driven UI system to quickly visualize",
    "start": "1202640",
    "end": "1208120"
  },
  {
    "text": "how it works this is what the user sees on host reservation details and this is",
    "start": "1208120",
    "end": "1215000"
  },
  {
    "text": "what our app framework sees where everything on a page is broken down into a standardized section the content",
    "start": "1215000",
    "end": "1222200"
  },
  {
    "text": "installing of the UI within each section are driven by the back end this leaves",
    "start": "1222200",
    "end": "1227799"
  },
  {
    "text": "the front end with a th layer of logic that's responsible for just rendering these sections in this diagram you can see",
    "start": "1227799",
    "end": "1235080"
  },
  {
    "text": "that on the present Bas on the presentation backend we expose a common schema to the clients and you can see",
    "start": "1235080",
    "end": "1241360"
  },
  {
    "text": "that each of the frontend clients has an app framework R time that is responsible for integrating API responses from the",
    "start": "1241360",
    "end": "1248880"
  },
  {
    "text": "back end and rendering it into UI for the user taking a deeper deeper look into",
    "start": "1248880",
    "end": "1255880"
  },
  {
    "text": "the standardized API response you can see that it's is broken down into two parts first is the registry of all the",
    "start": "1255880",
    "end": "1262640"
  },
  {
    "text": "sections needed for a page and then second we have the screen structure which expresses the layout of the",
    "start": "1262640",
    "end": "1269120"
  },
  {
    "text": "sections on the page for example this part can dictate that the header section should go at the top of the page and the",
    "start": "1269120",
    "end": "1275559"
  },
  {
    "text": "car section should go right below it and zooming further into each of the",
    "start": "1275559",
    "end": "1281440"
  },
  {
    "text": "sections here's the schema definition with a concrete example on the right so",
    "start": "1281440",
    "end": "1286520"
  },
  {
    "text": "focusing just on the key attributes we have section data which um represents",
    "start": "1286520",
    "end": "1291720"
  },
  {
    "text": "the data model itself for example here we have a list of user info including",
    "start": "1291720",
    "end": "1296880"
  },
  {
    "text": "where the user lives and then we have the UI component type which refers to the UI component",
    "start": "1296880",
    "end": "1303320"
  },
  {
    "text": "that will be uh using this data from the data model to render the UI on the front end in this case we want to render the",
    "start": "1303320",
    "end": "1310120"
  },
  {
    "text": "list as um the list data as a bulleted list one thing to call out here is that",
    "start": "1310120",
    "end": "1316559"
  },
  {
    "text": "it is possible for one section data type to be rendered by a different UI by a multitude of different UI component",
    "start": "1316559",
    "end": "1323520"
  },
  {
    "text": "types which affords US flexibility and variation in product UI and more",
    "start": "1323520",
    "end": "1328960"
  },
  {
    "text": "importantly all these sections should be totally totally reusable across different services for example a user",
    "start": "1328960",
    "end": "1335640"
  },
  {
    "text": "highlight section can be shared between guest facing and host facing Services there are also a few other key",
    "start": "1335640",
    "end": "1342360"
  },
  {
    "text": "features of the app framework first we have support for different layouts and placements of sections on the page which",
    "start": "1342360",
    "end": "1348919"
  },
  {
    "text": "provides flexibility and range for product design needs second with",
    "start": "1348919",
    "end": "1354279"
  },
  {
    "text": "different sections we can delay the loading of more expensive and sometimes slower sections to a second Network",
    "start": "1354279",
    "end": "1360600"
  },
  {
    "text": "request which helps to improve our initial page load time and overall user",
    "start": "1360600",
    "end": "1366360"
  },
  {
    "text": "experience this is especially helpful for mobile clients that can sometimes have weaker internet signals and takes",
    "start": "1366360",
    "end": "1373279"
  },
  {
    "text": "longer time to load data between requests lastly the framework Al lcks",
    "start": "1373279",
    "end": "1379120"
  },
  {
    "text": "impression and UI actions on each section automatically which is really helpful for measuring user engagement",
    "start": "1379120",
    "end": "1385480"
  },
  {
    "text": "when we launch a new feature through app framework and to make the developer experience easier we also build out a",
    "start": "1385480",
    "end": "1392279"
  },
  {
    "text": "web tool that allows Engineers to easily um visualize their API response in real",
    "start": "1392279",
    "end": "1397679"
  },
  {
    "text": "time by copy pasting the payload into this tool so in summary within um app",
    "start": "1397679",
    "end": "1404600"
  },
  {
    "text": "framework we got to isolate a robust commonly shared um schema Foundation as",
    "start": "1404600",
    "end": "1410039"
  },
  {
    "text": "well as rendering components layouts and tooling which are designed to evolve slowly under scre strict scrutiny this",
    "start": "1410039",
    "end": "1417000"
  },
  {
    "text": "separates um um the tooling the infr tooling from more volatile product code",
    "start": "1417000",
    "end": "1423600"
  },
  {
    "text": "that um changes from day to day second app framework also empowers",
    "start": "1423600",
    "end": "1429720"
  },
  {
    "text": "product teams to execute fast with flexibility by providing clear patterns for reusability and",
    "start": "1429720",
    "end": "1436279"
  },
  {
    "text": "customization for example using using pre-built sections product teams can easily launch new features across",
    "start": "1436279",
    "end": "1442880"
  },
  {
    "text": "clients without um any mobile ad versioning or deploys on mobile front",
    "start": "1442880",
    "end": "1450080"
  },
  {
    "text": "end lastly app framework also helps to ensure consistent user experience and maintain product quality by",
    "start": "1450880",
    "end": "1457039"
  },
  {
    "text": "consolidating presentation logic that used to be scattered across all three frontend platforms into one back",
    "start": "1457039",
    "end": "1463039"
  },
  {
    "text": "end so in conclusion we have gone through a lot of material and now to",
    "start": "1463039",
    "end": "1468640"
  },
  {
    "start": "1465000",
    "end": "1593000"
  },
  {
    "text": "recap all the lessons we have covered so far first invest in common",
    "start": "1468640",
    "end": "1474159"
  },
  {
    "text": "infrastructure early to turbocharge your initial initial SOA migration second as you continue to",
    "start": "1474159",
    "end": "1481360"
  },
  {
    "text": "expand and scale your architecture prioritize simplifying your service dependencies for long-term",
    "start": "1481360",
    "end": "1488480"
  },
  {
    "text": "stability third platformization so that product",
    "start": "1488480",
    "end": "1494440"
  },
  {
    "text": "Engineers can focus on solving new and important problems lastly unify client facing API into a",
    "start": "1494440",
    "end": "1501600"
  },
  {
    "text": "robot system of reusable parts and Safeguard reals to support fast product iteration and to launch features with",
    "start": "1501600",
    "end": "1509159"
  },
  {
    "text": "confidence so one overarching theme in the progression of these takeaways is",
    "start": "1509159",
    "end": "1514200"
  },
  {
    "text": "that we continue to streamline and fine-tune our layers of abstraction based on the way we work and the way we",
    "start": "1514200",
    "end": "1519960"
  },
  {
    "text": "build our products starting from the infr layer to platform layer with the service blocks then to application and",
    "start": "1519960",
    "end": "1525399"
  },
  {
    "text": "UI layers with app framework and whatnot what informed these stepwise",
    "start": "1525399",
    "end": "1530600"
  },
  {
    "text": "improvements were the common pinpoints experienced by engineers and end users so it is true that sometimes um it",
    "start": "1530600",
    "end": "1538600"
  },
  {
    "text": "means that we have to undo some of our earlier work but that is fine it is hard",
    "start": "1538600",
    "end": "1543919"
  },
  {
    "text": "to get everything right the first time the point is to keep evolving the the architecture to improve developer",
    "start": "1543919",
    "end": "1550039"
  },
  {
    "text": "velocity and to serve prevailing business needs so going back to the metaphorical",
    "start": "1550039",
    "end": "1555919"
  },
  {
    "text": "Hill in SF when we said to migrate to SOA we were not expecting our path to",
    "start": "1555919",
    "end": "1561919"
  },
  {
    "text": "include this Steep Hill up ahead but the lessons along the way were rich and the",
    "start": "1561919",
    "end": "1567000"
  },
  {
    "text": "learning curve was in fact quite an exciting and fulfilling right we can say for sure that we have made it to the top",
    "start": "1567000",
    "end": "1573360"
  },
  {
    "text": "of the hill but when we survey our current Tex deck we begin to see that SOA is not a fixed destination instead",
    "start": "1573360",
    "end": "1580880"
  },
  {
    "text": "like a real City it is constantly changing and evolving into something more resilient and Lasting",
    "start": "1580880",
    "end": "1588360"
  },
  {
    "text": "thank you yeah that was a super super",
    "start": "1588360",
    "end": "1596000"
  },
  {
    "start": "1593000",
    "end": "1877000"
  },
  {
    "text": "interesting presentation um thanks for doing it um so one one thing I really",
    "start": "1596000",
    "end": "1601720"
  },
  {
    "text": "have to ask is why SOA and not microservices oh I guess um I guess in",
    "start": "1601720",
    "end": "1610000"
  },
  {
    "text": "our mind we were just trying to break down our logic into um components but we",
    "start": "1610000",
    "end": "1618480"
  },
  {
    "text": "didn't necessarily want to um break it down so that everything is like you know",
    "start": "1618480",
    "end": "1623880"
  },
  {
    "text": "just focused on one small task so I think in general we try to um uh I guess",
    "start": "1623880",
    "end": "1632440"
  },
  {
    "text": "not use microservices because that might um you know um some people might think",
    "start": "1632440",
    "end": "1637520"
  },
  {
    "text": "that oh we can for every small uh business feature we have we will build",
    "start": "1637520",
    "end": "1643080"
  },
  {
    "text": "we will spin up a new service for that as it is we already have a lot of services so we're are trying to",
    "start": "1643080",
    "end": "1650158"
  },
  {
    "text": "well yeah I mean there's a lot of interesting debate around how micro is micro right right you touch on an",
    "start": "1650440",
    "end": "1658640"
  },
  {
    "text": "interesting question which is like how granular are your services so sort of",
    "start": "1658640",
    "end": "1664559"
  },
  {
    "text": "like I don't know you know the ratio team number of developers versus number",
    "start": "1664559",
    "end": "1670640"
  },
  {
    "text": "of services or number of teams versus number of",
    "start": "1670640",
    "end": "1675799"
  },
  {
    "text": "services um do you have any kind ratio there um I would say we probably right",
    "start": "1675799",
    "end": "1683960"
  },
  {
    "text": "now every team has like at least two to three services um but um as we have evolved we",
    "start": "1683960",
    "end": "1691120"
  },
  {
    "text": "are um in general moving towards consolidating some of these logic",
    "start": "1691120",
    "end": "1696559"
  },
  {
    "text": "because what we are finding is that there's a lot of overhead um in maintaining a service just in terms of",
    "start": "1696559",
    "end": "1703240"
  },
  {
    "text": "um stuff like um SOS like performance um guarantee and um test levels and stuff",
    "start": "1703240",
    "end": "1710080"
  },
  {
    "text": "like that yeah yeah I mean interesting that's like a common pattern I've seen",
    "start": "1710080",
    "end": "1715640"
  },
  {
    "text": "working with clients where it's yeah like there's this",
    "start": "1715640",
    "end": "1720919"
  },
  {
    "text": "tendency to build fine grain services almost as much is like one one service",
    "start": "1720919",
    "end": "1727120"
  },
  {
    "text": "per developer and then it's like why and then kind of why not just",
    "start": "1727120",
    "end": "1732799"
  },
  {
    "text": "consolidate um Because unless you have a a very good reason to you know have have",
    "start": "1732799",
    "end": "1739000"
  },
  {
    "text": "more per team yeah and I think at some point it becomes a single point of failure per",
    "start": "1739000",
    "end": "1744880"
  },
  {
    "text": "service too when you just have one developer who knows all the context to that service because when it comes to on",
    "start": "1744880",
    "end": "1751440"
  },
  {
    "text": "call it's really hard to um you know M like just have a sustainable load for",
    "start": "1751440",
    "end": "1757600"
  },
  {
    "text": "engineers when they have to like cover different services that they are not familiar with so um that's also one",
    "start": "1757600",
    "end": "1763360"
  },
  {
    "text": "aspect of operation where we are trying to just like um slim down",
    "start": "1763360",
    "end": "1768679"
  },
  {
    "text": "yeah umid yeah definitely the other the other interesting thing is sort of the",
    "start": "1768679",
    "end": "1774720"
  },
  {
    "text": "conventional wisdom around microservices or we could say so um is sort of kind of",
    "start": "1774720",
    "end": "1782519"
  },
  {
    "text": "a vertical organ is sort of vertical slices around business domains yeah sort",
    "start": "1782519",
    "end": "1788000"
  },
  {
    "text": "of one distinctive characteristic of your architecture is",
    "start": "1788000",
    "end": "1793039"
  },
  {
    "text": "horizontal um technical slices am I right and thinking is that",
    "start": "1793039",
    "end": "1799240"
  },
  {
    "text": "maybe the technical stat horizontal division was your initial thought back in",
    "start": "1799240",
    "end": "1805159"
  },
  {
    "text": "2018 but now with this block concept you appear to be they seem to be more like",
    "start": "1805159",
    "end": "1812200"
  },
  {
    "text": "business domains so oh that's that's kind of interesting because um in in my mind",
    "start": "1812200",
    "end": "1819480"
  },
  {
    "text": "it's more of going from vertical where um in the past we each vertical we have",
    "start": "1819480",
    "end": "1824960"
  },
  {
    "text": "one presentation service a derived data and then like a like data service at the bottom but then",
    "start": "1824960",
    "end": "1832480"
  },
  {
    "text": "now now we are trying to consolidate like you know for example like the presentation layer in one horizontal",
    "start": "1832480",
    "end": "1840000"
  },
  {
    "text": "chunk and then um maybe towards the bottom of the stack we have like",
    "start": "1840000",
    "end": "1845279"
  },
  {
    "text": "different block facades but those are also um using a standardized API",
    "start": "1845279",
    "end": "1851399"
  },
  {
    "text": "framework like graphql Gateway layer so in a way we are I think we are trying to",
    "start": "1851399",
    "end": "1856639"
  },
  {
    "text": "reduce the level of duplication and just you know like um uh repeated patterns um",
    "start": "1856639",
    "end": "1864159"
  },
  {
    "text": "in each of the layers Yeah by trying to make more consistent",
    "start": "1864159",
    "end": "1869360"
  },
  {
    "text": "yeah um so was a question what was the question about",
    "start": "1869360",
    "end": "1876760"
  },
  {
    "text": "um yeah sort of I guess you could say reliable how do how do you achieve reliable communication because sounds",
    "start": "1876760",
    "end": "1884960"
  },
  {
    "start": "1877000",
    "end": "2035000"
  },
  {
    "text": "like there's a maybe this is by consult consolidating services but there seems to be a bunch of well Thrift based",
    "start": "1884960",
    "end": "1892440"
  },
  {
    "text": "synchronous cools right which um you know so that that's kind of that's",
    "start": "1892440",
    "end": "1898080"
  },
  {
    "text": "synchronous coupling essentially and how so how do you manage to still be",
    "start": "1898080",
    "end": "1903120"
  },
  {
    "text": "available highly available as as as Airbnb obviously is yeah so um yeah that's a complicated",
    "start": "1903120",
    "end": "1911600"
  },
  {
    "text": "issue I think um over time we have um uh you know uh resorted to a bunch",
    "start": "1911600",
    "end": "1918240"
  },
  {
    "text": "procedural and as well as like technical um measures so like just in terms of processes we have um we now um require",
    "start": "1918240",
    "end": "1926360"
  },
  {
    "text": "every service to have a um like a to have to Define their own slos um",
    "start": "1926360",
    "end": "1932919"
  },
  {
    "text": "basically performance guarantees on you know how fast their API should be what's the error rate and to have um you know",
    "start": "1932919",
    "end": "1939880"
  },
  {
    "text": "weekly check-ins at a you know higher Team level to make sure that all the",
    "start": "1939880",
    "end": "1946000"
  },
  {
    "text": "services that a team owns performing according to um their standard and then",
    "start": "1946000",
    "end": "1951080"
  },
  {
    "text": "we also have test level requirements um all these are like part of our um commitment to craft initiative where we",
    "start": "1951080",
    "end": "1957559"
  },
  {
    "text": "are trying to make sure that each of these Services have a like a bare minimum of like um service",
    "start": "1957559",
    "end": "1965120"
  },
  {
    "text": "quality um and in terms of technical um Solutions we um in our you know service",
    "start": "1965120",
    "end": "1970760"
  },
  {
    "text": "ideal framework we also have um aspects that prevent you know just you know retry storms where if a service is",
    "start": "1970760",
    "end": "1978279"
  },
  {
    "text": "unresponsive you know Upstream might you know just retry multiple times and that might cause the service to degrade even",
    "start": "1978279",
    "end": "1983799"
  },
  {
    "text": "further so we have ways to you know have a circuit breaker that um prevents um",
    "start": "1983799",
    "end": "1989039"
  },
  {
    "text": "staff from you know cascading into a catastrophe basically um yeah so those are a few",
    "start": "1989039",
    "end": "1996320"
  },
  {
    "text": "things that we have tried um and I think yeah it's a constantly um I guess it the",
    "start": "1996320",
    "end": "2004760"
  },
  {
    "text": "ecosystem itself is very like it is changing from dayto day just you know",
    "start": "2004760",
    "end": "2009880"
  },
  {
    "text": "from new product development so I feel like that's also one aspect of like maintaining the service like we have to",
    "start": "2009880",
    "end": "2015639"
  },
  {
    "text": "be um uh we have to be keeping eye a close eye on a lot of um these Services",
    "start": "2015639",
    "end": "2023600"
  },
  {
    "text": "especially the more fundamental ones the facades and like the data services at the",
    "start": "2023600",
    "end": "2029240"
  },
  {
    "text": "bottom yeah um okay what was else I'm looking at my list sort of um",
    "start": "2029240",
    "end": "2037880"
  },
  {
    "start": "2035000",
    "end": "2310000"
  },
  {
    "text": "yeah so you migrated to Services how did it help because originally apparently it was you you",
    "start": "2037880",
    "end": "2044919"
  },
  {
    "text": "sort of in monolithic hell back in 2018 and so are you now in like s SOA Nana",
    "start": "2044919",
    "end": "2052040"
  },
  {
    "text": "now no yeah I it was just like the hike",
    "start": "2052040",
    "end": "2057599"
  },
  {
    "text": "across SF where you're just like we're still you know trying to I guess scale",
    "start": "2057599",
    "end": "2062679"
  },
  {
    "text": "the learning curve but not quite there yet I think it is very interesting",
    "start": "2062679",
    "end": "2067878"
  },
  {
    "text": "especially with like um the evolving business requirements um with um Airbnb",
    "start": "2067879",
    "end": "2074240"
  },
  {
    "text": "like um I guess we are always so so initially we I think it was very simple",
    "start": "2074240",
    "end": "2079800"
  },
  {
    "text": "in our mental model where we're just trying to break down this big chunk into smaller chunks and that is service",
    "start": "2079800",
    "end": "2085200"
  },
  {
    "text": "oriented but now I think we are trying to think at levels of abstraction that kind of maps to our product but at the",
    "start": "2085200",
    "end": "2092000"
  },
  {
    "text": "same time is like technically sound so that's why we have like data access layer where everything is repres",
    "start": "2092000",
    "end": "2097720"
  },
  {
    "text": "presented as you know the different parts of our data um constellation instead of you know thinking of things",
    "start": "2097720",
    "end": "2103960"
  },
  {
    "text": "as a as services so um in those Endeavors I think um that's where things",
    "start": "2103960",
    "end": "2109440"
  },
  {
    "text": "get really interesting and kind of complicated because products can be anything there's no like very hard um",
    "start": "2109440",
    "end": "2116440"
  },
  {
    "text": "definition of what a product feature is it can it can be it can be a user or it can be some user feature that is kind of",
    "start": "2116440",
    "end": "2123520"
  },
  {
    "text": "abstract so I feel like trying to navigate that as a team um is something that has been sparking very interesting",
    "start": "2123520",
    "end": "2129599"
  },
  {
    "text": "conversations like how we want to um organize our data schema um and how we",
    "start": "2129599",
    "end": "2134839"
  },
  {
    "text": "want to map that to the underlying services so like that process of like mapping from our how we represent our",
    "start": "2134839",
    "end": "2143320"
  },
  {
    "text": "product to how we build our services has been just you know like an ongoing",
    "start": "2143320",
    "end": "2150119"
  },
  {
    "text": "conversation across different well I think build building complicated software is challenging right now no",
    "start": "2150119",
    "end": "2157880"
  },
  {
    "text": "matter what your your architecture is um but um oh there's just a question in the",
    "start": "2157880",
    "end": "2164319"
  },
  {
    "text": "chat about what patterns did you apply in the data access layer to improve",
    "start": "2164319",
    "end": "2171078"
  },
  {
    "text": "performance um I was say it really differs from entity to entity um I would",
    "start": "2171520",
    "end": "2181079"
  },
  {
    "text": "say oh sorry um sorry in the data access layer so um we do have stuff like",
    "start": "2181079",
    "end": "2189359"
  },
  {
    "text": "caching um where in a request so in a graphql requests um there might be",
    "start": "2189359",
    "end": "2197040"
  },
  {
    "text": "different parts of the uh of the query that um ends up hitting the same service",
    "start": "2197040",
    "end": "2203640"
  },
  {
    "text": "so in a way we'll cat um the exact request that we know will be item poent we'll get a item poent response back and",
    "start": "2203640",
    "end": "2210480"
  },
  {
    "text": "then sometimes we also batch um requests into a single Service uh single request",
    "start": "2210480",
    "end": "2215640"
  },
  {
    "text": "through the downstream service stuff like that yeah there's a lot of um underlying logic that um you know the",
    "start": "2215640",
    "end": "2222839"
  },
  {
    "text": "team behind the unified data layer builds that Engineers don't have to worry about yeah um another question I",
    "start": "2222839",
    "end": "2231560"
  },
  {
    "text": "was going to ask was presumably this migration to S SOA actually like",
    "start": "2231560",
    "end": "2236920"
  },
  {
    "text": "improved how you work though right never mind there still chall it's still challenging but it improved deployment",
    "start": "2236920",
    "end": "2243839"
  },
  {
    "text": "frequency and reliability and made a big difference",
    "start": "2243839",
    "end": "2249880"
  },
  {
    "text": "right yeah I think it did um yeah because initially it was just one deploy train on this one monolith so everything",
    "start": "2249880",
    "end": "2257200"
  },
  {
    "text": "else will be blocked if you just have this one failure in one of the apis um but right now I think",
    "start": "2257200",
    "end": "2265520"
  },
  {
    "text": "um it's also because we have separated out the presentation layer from the bottom layers presentation they tend to",
    "start": "2265520",
    "end": "2272359"
  },
  {
    "text": "evolve much faster so if things break there at least say tend not to affect",
    "start": "2272359",
    "end": "2277640"
  },
  {
    "text": "the more like fundamental and you know services with bigger blast radius oh cool well I think that's it um thank you",
    "start": "2277640",
    "end": "2285480"
  },
  {
    "text": "so much for the presentation and there is a hway discussion um following this",
    "start": "2285480",
    "end": "2291280"
  },
  {
    "text": "um so yeah I'll be sure to join that yeah thanks cool thanks everyone um",
    "start": "2291280",
    "end": "2297440"
  },
  {
    "text": "thanks Chris",
    "start": "2297440",
    "end": "2300720"
  },
  {
    "text": "[Music]",
    "start": "2302720",
    "end": "2309010"
  }
]