[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "all right so let's go so my name is Edie this is how fail and as Chris said we've",
    "start": "3879",
    "end": "11139"
  },
  {
    "text": "been building new banks since day one since the initial lines of code together our initial product is a credit card so",
    "start": "11139",
    "end": "18039"
  },
  {
    "text": "we started out as a credit card issuer in Brazil and we've expanded into being a full digital bank from there so just",
    "start": "18039",
    "end": "25810"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "so you can get a sense for scale we are at about 2.6 million customers and that",
    "start": "25810",
    "end": "32590"
  },
  {
    "text": "is a lot when you consider the complexity of the domain model there's a reason why core banking systems still",
    "start": "32590",
    "end": "38860"
  },
  {
    "text": "run on mainframes in most places it's a it's a large domain I'm gonna try to illustrate that for you a little bit to",
    "start": "38860",
    "end": "45670"
  },
  {
    "text": "the extent I can but yeah we have hundreds of millions of purchases purchases coming from people visiting",
    "start": "45670",
    "end": "52360"
  },
  {
    "text": "just about every country on earth but we're not a bank we are selling financial selling",
    "start": "52360",
    "end": "58570"
  },
  {
    "text": "financial services but it feels like a tech company we we are a 10th company we deployed 20 times per day we have 120",
    "start": "58570",
    "end": "65049"
  },
  {
    "text": "micro services and we recently just crossed 100 engineers on the team so",
    "start": "65049",
    "end": "70420"
  },
  {
    "text": "what we're gonna talk through is is really credit to the whole team and all the engineers the great engineers back in San Paolo and now Berlin we started",
    "start": "70420",
    "end": "77590"
  },
  {
    "text": "our second office hoffa and I are going to take credit for it but it is really the work of everybody briefly on our",
    "start": "77590",
    "end": "84909"
  },
  {
    "start": "83000",
    "end": "83000"
  },
  {
    "text": "stack so we rewrote core banking and credit card processing from scratch and",
    "start": "84909",
    "end": "90310"
  },
  {
    "text": "so we used modern technology we loved closure most of our production services",
    "start": "90310",
    "end": "95859"
  },
  {
    "text": "use closure it's a lisp hosted on the JVM and it's an opinionated functional language it doesn't mean you can't write",
    "start": "95859",
    "end": "102060"
  },
  {
    "text": "object-oriented patterns but you know it when you're doing it and so we really like that closure keeps us lean and",
    "start": "102060",
    "end": "108369"
  },
  {
    "text": "keeps us focused on pure functions and helps us to scale we also use the atomic",
    "start": "108369",
    "end": "113740"
  },
  {
    "text": "this is the database that we use for most transactional workloads the analogy that I would use is kind of like get for",
    "start": "113740",
    "end": "120039"
  },
  {
    "text": "your data so you never lose anything you a fact may be true and then later not true but you never would do an update in",
    "start": "120039",
    "end": "126639"
  },
  {
    "text": "place and lose that that history we'll talk more about some interesting",
    "start": "126639",
    "end": "131740"
  },
  {
    "text": "properties of that we're heavy users of Kafka in fact Moe our default kind of service",
    "start": "131740",
    "end": "137500"
  },
  {
    "text": "service integration patterns are via Kafka we really appreciate similar to the",
    "start": "137500",
    "end": "142780"
  },
  {
    "text": "atomic that concept of an immutable log and it helps us with logical and temporal decoupling between services and",
    "start": "142780",
    "end": "150460"
  },
  {
    "text": "it's censoring the financial services industry is legendary for big batch jobs and we're starting to understand why but",
    "start": "150460",
    "end": "157030"
  },
  {
    "text": "one of the things that we do is we just treat best jobs like a stream of messages over Kafka and we can we can almost model everything in banking as as",
    "start": "157030",
    "end": "165130"
  },
  {
    "text": "stream processing and lastly and this is kind of obvious but we're cloud native we we architected everything on AWS from",
    "start": "165130",
    "end": "172300"
  },
  {
    "text": "the beginning about four years ago and infrastructure is code we do Bluegreen",
    "start": "172300",
    "end": "178690"
  },
  {
    "text": "deploys not only for new versions of services but also for new versions of the entire architecture so we'll go spin",
    "start": "178690",
    "end": "183880"
  },
  {
    "text": "an entire new version of new bank and then kill the old version once we've rerouted DNS so that's something that",
    "start": "183880",
    "end": "189820"
  },
  {
    "text": "that's helped us to avoid mutating things in production and really helped",
    "start": "189820",
    "end": "195250"
  },
  {
    "text": "us scale and I guess just a last thing on the intro we've seen a number of",
    "start": "195250",
    "end": "202180"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "benefits from taking a functional programming philosophy quite seriously from the beginning of the company and I",
    "start": "202180",
    "end": "207940"
  },
  {
    "text": "guess it would highlight three things on hiring counter intuitively we see this as self selection positive self",
    "start": "207940",
    "end": "215019"
  },
  {
    "text": "selection people that have the courage to go out and try a technical exercise in a language they've never used before",
    "start": "215019",
    "end": "220239"
  },
  {
    "text": "certainly not in anger in production we find that that scares a lot of people",
    "start": "220239",
    "end": "225580"
  },
  {
    "text": "but the people that it doesn't are generally good people to hire so that's helped us we've also seen now with over",
    "start": "225580",
    "end": "231280"
  },
  {
    "text": "100 services and millions of customers the complexity of the domain is under control we have things that are",
    "start": "231280",
    "end": "238000"
  },
  {
    "text": "difficult to deal with but we always are able to untangle those things and that's basically the architecture of a bunch of",
    "start": "238000",
    "end": "243760"
  },
  {
    "text": "small pure functions and consistency closure is a language that encourages",
    "start": "243760",
    "end": "249790"
  },
  {
    "text": "small number of idiomatic language features composing into big things and so what we find is it's easy for people",
    "start": "249790",
    "end": "256720"
  },
  {
    "text": "to move between teams and every service feels very very similar so it's a fairly consistent architecture and this is our",
    "start": "256720",
    "end": "263860"
  },
  {
    "text": "headquarters in some problem so our initial architecture for",
    "start": "263860",
    "end": "270430"
  },
  {
    "text": "a card and I'm gonna lay out like a periodic table here that's gonna make no sense but the whole the whole point is that it's it's complex and this is the",
    "start": "270430",
    "end": "277990"
  },
  {
    "text": "MVP so in order to get a card passing in a machine right we had to build Carter",
    "start": "277990",
    "end": "283180"
  },
  {
    "text": "origination logistics physical shipping we had to build billing payments charge",
    "start": "283180",
    "end": "288640"
  },
  {
    "text": "back a whole back office tooling etc the",
    "start": "288640",
    "end": "293950"
  },
  {
    "text": "next thing we built was how to go acquire customers right kyc credit scoring limit management and this is an",
    "start": "293950",
    "end": "300520"
  },
  {
    "text": "area where we heavily use machine learning this was the first place we put machine learning into production after",
    "start": "300520",
    "end": "307270"
  },
  {
    "text": "that we started to take ourselves seriously as the system of Records so we rely on ourselves to know how much money",
    "start": "307270",
    "end": "314440"
  },
  {
    "text": "you owe us and that's where the general ledger system comes in double entry which we're going to touch on in more detail more more recently we decided to",
    "start": "314440",
    "end": "324880"
  },
  {
    "text": "bring card authorization transaction authorization completely in-house so we built a MasterCard authorizer from",
    "start": "324880",
    "end": "330850"
  },
  {
    "text": "scratch we also built an ETL to make a mirrored analytical environment to optimize for four different things we'll",
    "start": "330850",
    "end": "337060"
  },
  {
    "text": "talk about both of those we recently launched rewards and very recently we",
    "start": "337060",
    "end": "342670"
  },
  {
    "text": "just launched a bank account so this this is not the traditional path but we kind of came from credit card and went",
    "start": "342670",
    "end": "348760"
  },
  {
    "text": "to core banking and so the key features here are things like earning money on your savings but also being able to use",
    "start": "348760",
    "end": "355480"
  },
  {
    "text": "that same account like a checking account for instant peer-to-peer transfers and stuff and right now by American standards it's it's it's a good",
    "start": "355480",
    "end": "362320"
  },
  {
    "text": "investment we're earning we're paying 7% per year risk-free in Brazil so it's a",
    "start": "362320",
    "end": "368140"
  },
  {
    "text": "good good place to put your money so banking adds a few other components",
    "start": "368140",
    "end": "374020"
  },
  {
    "start": "370000",
    "end": "370000"
  },
  {
    "text": "here including real time transfers which we'll talk about from an architecture perspective and also there's this point",
    "start": "374020",
    "end": "380800"
  },
  {
    "text": "at the bottom infrastructure infrastructure kind of glues everything together and we'll talk a bit about how",
    "start": "380800",
    "end": "386170"
  },
  {
    "text": "that works in your bank so so that's a lot of stuff we can't cover all these modules but we're going to cover the",
    "start": "386170",
    "end": "391930"
  },
  {
    "text": "highlighted ones in some detail and hopefully we go deep enough to give folks a real sense of of how things work",
    "start": "391930",
    "end": "398490"
  },
  {
    "text": "starting with purchase authorization okay good morning guys so I thought",
    "start": "398490",
    "end": "404740"
  },
  {
    "start": "401000",
    "end": "401000"
  },
  {
    "text": "we start with maybe the most representative flow of our first product and in many ways our core product the",
    "start": "404740",
    "end": "410560"
  },
  {
    "text": "credit card so let's talk about what happens when you make a purchase when",
    "start": "410560",
    "end": "415960"
  },
  {
    "text": "you do that you actually set in motion a whole set of participants of the payments chain so you're interacting",
    "start": "415960",
    "end": "422650"
  },
  {
    "text": "with a merchant and but the POS terminal the point-of-sale terminal where you swipe your card is usually managed by",
    "start": "422650",
    "end": "429280"
  },
  {
    "text": "another company a credit card wire the acquirer is the company that maintains the relationship with the merchants",
    "start": "429280",
    "end": "435550"
  },
  {
    "text": "connects merchants to the broader payments chain the acquire then will forward that transaction authorization",
    "start": "435550",
    "end": "442210"
  },
  {
    "text": "message to the credit card network or brand we are using MasterCard other networks are household names Visa",
    "start": "442210",
    "end": "449350"
  },
  {
    "text": "American Express etcetera and then the brand will finally send that through",
    "start": "449350",
    "end": "455470"
  },
  {
    "text": "sexual relation requests to us to an issuer on the other hand and that's our",
    "start": "455470",
    "end": "460900"
  },
  {
    "text": "role as a payment situation we are an issuer this means that we maintain the",
    "start": "460900",
    "end": "466390"
  },
  {
    "text": "relationship with the cardholder the actual final customer is on a bank customer and as part of that an",
    "start": "466390",
    "end": "472900"
  },
  {
    "text": "important part for talking about the actual transition is that we take credit risk for that customer if the customer",
    "start": "472900",
    "end": "479260"
  },
  {
    "text": "fails to make do on his payments we earned a hook for that amount so that's",
    "start": "479260",
    "end": "484270"
  },
  {
    "text": "why we have the final say on whether a transaction was authorized or declined",
    "start": "484270",
    "end": "489540"
  },
  {
    "text": "now technically how does that work on a data center that we control the credit",
    "start": "489540",
    "end": "496960"
  },
  {
    "text": "card network will place several devices connecting to the worldwide network and",
    "start": "496960",
    "end": "502570"
  },
  {
    "text": "one of our servers will run a service we are calling an authorizer which will connect to that to the brand devices the",
    "start": "502570",
    "end": "512310"
  },
  {
    "text": "specific device that we connect you and calling it here the MasterCard interface device it is an edge device that accepts",
    "start": "512310",
    "end": "520349"
  },
  {
    "text": "TCP connections and once we connect we start receiving authorization requests a",
    "start": "520350",
    "end": "525750"
  },
  {
    "text": "couple of interesting points to note here are that we are a network client",
    "start": "525750",
    "end": "531010"
  },
  {
    "text": "not a network server this means that's what chief concurrency to be able to handle the transaction volumes that we",
    "start": "531010",
    "end": "536860"
  },
  {
    "text": "we must deal with need to multiplex that single network connection and another observation is",
    "start": "536860",
    "end": "544029"
  },
  {
    "text": "that when we first went live when I first connected to the real live payments Network we started receiving",
    "start": "544029",
    "end": "550569"
  },
  {
    "text": "authorization requests immediately which is a bit odd since we hadn't issued any",
    "start": "550569",
    "end": "556300"
  },
  {
    "text": "credit cards at that point for the authorizer what was happen is that we were receiving attacks attempted attacks",
    "start": "556300",
    "end": "562769"
  },
  {
    "text": "people either brute force in credit card numbers or people using data from those",
    "start": "562769",
    "end": "570670"
  },
  {
    "text": "large credit card breaches in the past to try to attacked us and the payments ecosystem is constantly under attack",
    "start": "570670",
    "end": "576600"
  },
  {
    "text": "something you need to know about before you undertake these kinds of projects so",
    "start": "576600",
    "end": "582730"
  },
  {
    "text": "the protocol the protocol we used to connect to the brand interface device is the same protocol that flows throughout",
    "start": "582730",
    "end": "589029"
  },
  {
    "text": "the entire payment's chain it's based on an international standard ISO 85-83 but",
    "start": "589029",
    "end": "595750"
  },
  {
    "text": "this is not a standard like HTTP or SMTP where you can just read the spec and",
    "start": "595750",
    "end": "600850"
  },
  {
    "text": "build a compliant limitation you still need a lot of specific information from MasterCard from the brand and we had to",
    "start": "600850",
    "end": "607269"
  },
  {
    "text": "consult a lot of documentation and from from that burn to be able to build a compliant implementation but sometimes",
    "start": "607269",
    "end": "613870"
  },
  {
    "text": "that wasn't enough at one point in the project we needed to pass an input to a",
    "start": "613870",
    "end": "619930"
  },
  {
    "text": "signature verification algorithm and the actual set of input fields was not",
    "start": "619930",
    "end": "625089"
  },
  {
    "text": "specified anywhere so whenever engineers had to build a tool to brute-force or possible feed common combinations to understand what",
    "start": "625089",
    "end": "631839"
  },
  {
    "text": "you had to build it can also see on this slide we are teaching a hardware",
    "start": "631839",
    "end": "637269"
  },
  {
    "text": "security module that's a device that stores a primary key on secure hardware and every other key that's used for for",
    "start": "637269",
    "end": "644889"
  },
  {
    "text": "the encryption parts of the protocol are derived from that primary key on the HSM and one of the ways that we use the HSM",
    "start": "644889",
    "end": "652029"
  },
  {
    "text": "is that when you do a chip transaction that microprocessor on the chip we generate a cryptogram which is a small",
    "start": "652029",
    "end": "659259"
  },
  {
    "text": "amount of data that flows through the network to our services and we pass it to the HSM for for validation so in the",
    "start": "659259",
    "end": "668620"
  },
  {
    "text": "beginning Edward was talking about closure how much we loved closure and through we really love it and even for",
    "start": "668620",
    "end": "674700"
  },
  {
    "text": "the authorizer project most of our code is enclosure but we thought that for",
    "start": "674700",
    "end": "680640"
  },
  {
    "text": "parsing that binary protocol we could take advantage of Scala library called s",
    "start": "680640",
    "end": "685649"
  },
  {
    "text": "codec which is a binary partial Combinator style library and we could",
    "start": "685649",
    "end": "691019"
  },
  {
    "text": "achieve a lot of things by building upon s codec it's easier to build a parser it's composable the type system helps to",
    "start": "691019",
    "end": "697829"
  },
  {
    "text": "ensure that all the parts of fitting together we get error detection and a cool thing is that it also makes it",
    "start": "697829",
    "end": "704279"
  },
  {
    "text": "easier to evolve that parser over time when we we were doing one of our early",
    "start": "704279",
    "end": "710700"
  },
  {
    "text": "tests for instance we thought some of the fields were going to be encoded as s",
    "start": "710700",
    "end": "716250"
  },
  {
    "text": "key s key strings but it turns out when we're doing the live tests we figured",
    "start": "716250",
    "end": "721260"
  },
  {
    "text": "out we were receiving obsidian coded Sphinx you know that old mainframe protocol and to change that we had to",
    "start": "721260",
    "end": "728279"
  },
  {
    "text": "just change a couple of references in this parcel tree and we were able to complete that test live while it was in",
    "start": "728279",
    "end": "735089"
  },
  {
    "text": "the running in the test window so this kind of library for for parsing magneri",
    "start": "735089",
    "end": "741480"
  },
  {
    "start": "739000",
    "end": "739000"
  },
  {
    "text": "protocols is something that was very helpful for us and now stepping back a",
    "start": "741480",
    "end": "748260"
  },
  {
    "text": "little bit and talking broadly about the authorizer project there were two main",
    "start": "748260",
    "end": "753750"
  },
  {
    "text": "requirements that drove many of our architectural decisions one is",
    "start": "753750",
    "end": "758790"
  },
  {
    "text": "availability requirements we of course on our cloud services we take care to",
    "start": "758790",
    "end": "765180"
  },
  {
    "text": "make that they are available we we have observability measures we have measures in place to bring back service when it",
    "start": "765180",
    "end": "772440"
  },
  {
    "text": "fails but when we are talking about a project like an authorizer",
    "start": "772440",
    "end": "777899"
  },
  {
    "text": "where our customer can be trying to make a purchase in a gas station midnight with only our card in his pocket it's",
    "start": "777899",
    "end": "784410"
  },
  {
    "text": "very critical that every single transaction goes true so availability",
    "start": "784410",
    "end": "789720"
  },
  {
    "text": "was critical second requirement that is important to us was that we are building on physical infrastructure as Erin",
    "start": "789720",
    "end": "796470"
  },
  {
    "text": "mentioned the beginning most of our experience has been on cloud services most most of our services we are",
    "start": "796470",
    "end": "803339"
  },
  {
    "text": "building upon the Amazon public cloud we take a lot of advantage from automation that the",
    "start": "803339",
    "end": "811350"
  },
  {
    "text": "public cloud affords us and then we have to face the prospect of beauty something on physical servers bare meadow we of",
    "start": "811350",
    "end": "818549"
  },
  {
    "text": "course had to boot all of that automation ourselves we couldn't just do",
    "start": "818549",
    "end": "824399"
  },
  {
    "text": "it manually for just once it doesn't doesn't work like that and when you put those two requirements together we",
    "start": "824399",
    "end": "830609"
  },
  {
    "text": "decided to try to build a minimal structure infrastructure within that those those physical data centers with",
    "start": "830609",
    "end": "838230"
  },
  {
    "text": "composed of a small set of highly available services they are redundant",
    "start": "838230",
    "end": "843839"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "within the data center and we have multiple live data centers accepting",
    "start": "843839",
    "end": "849350"
  },
  {
    "text": "transaction requests and in in addition",
    "start": "849350",
    "end": "854549"
  },
  {
    "text": "to being minimal the other important part is that it's isolated we are able to authorize transactions that are",
    "start": "854549",
    "end": "860669"
  },
  {
    "text": "coming in to the payments Network only with this small set of services running",
    "start": "860669",
    "end": "866009"
  },
  {
    "text": "on our physical data centers we don't need any cloud communication in order to",
    "start": "866009",
    "end": "871379"
  },
  {
    "text": "authorize a transaction that is important because we were worried that if one of the links links goes down or",
    "start": "871379",
    "end": "877019"
  },
  {
    "text": "if there's a problem with the Amazon this could affect availability and and the the other thing to note here is that",
    "start": "877019",
    "end": "885739"
  },
  {
    "text": "we are using thrift and finagle for inter service communication and so I was",
    "start": "885739",
    "end": "893790"
  },
  {
    "text": "making this point about how isolated the inner loop for transaction authorization was but some communication is required",
    "start": "893790",
    "end": "900259"
  },
  {
    "text": "the ultimate truth about data for all of our customers lies on our cloud services",
    "start": "900259",
    "end": "906679"
  },
  {
    "text": "they maintain their data bases that are the ultimate owners of that information and so there's they need to know when",
    "start": "906679",
    "end": "913769"
  },
  {
    "text": "the transaction was authorized at the same time there's information that we only learn about on the cloud site for",
    "start": "913769",
    "end": "919199"
  },
  {
    "text": "instance if a customer makes a payment and that entails a change in his credit limit it's available image we need to",
    "start": "919199",
    "end": "925499"
  },
  {
    "text": "send that information back to the authorizer and we are using Kafka for that Kafka as",
    "start": "925499",
    "end": "931769"
  },
  {
    "text": "was mentioned before what is their default inter-service communication technology and the cool thing",
    "start": "931769",
    "end": "938769"
  },
  {
    "text": "using Kefka for this project is that we are not using only for communication one",
    "start": "938769",
    "end": "945189"
  },
  {
    "text": "interesting property that kefka has that other message brokers usually don't is that messages are durable a message does",
    "start": "945189",
    "end": "952989"
  },
  {
    "text": "not disappear immediately after it's consumed and we are using that to build a log snapshot style data platform on",
    "start": "952989",
    "end": "960549"
  },
  {
    "text": "the authorizers project and we're doing that because we did not want to have",
    "start": "960549",
    "end": "966339"
  },
  {
    "text": "database running on our physical infrastructure as part of those those requirements of being minimal and being",
    "start": "966339",
    "end": "972759"
  },
  {
    "text": "and being highly available so we're starting everything in memory the data that you need to authorize a credit-card",
    "start": "972759",
    "end": "978850"
  },
  {
    "text": "transaction is not very extensive so it's it can be safely stored in memory",
    "start": "978850",
    "end": "983889"
  },
  {
    "text": "in the authorizer services but to be able to bootstrap that new memory stage",
    "start": "983889",
    "end": "989110"
  },
  {
    "text": "and to ensure that every single authorizer replica is consistent we",
    "start": "989110",
    "end": "994269"
  },
  {
    "text": "piggyback upon a kefka's log so the way this works is there's an Amazon service",
    "start": "994269",
    "end": "1001410"
  },
  {
    "text": "it's running it publishes a message that message is consumed by our authorizer in",
    "start": "1001410",
    "end": "1006600"
  },
  {
    "text": "our physical infrastructure everything's pretty simple so far at the same time a",
    "start": "1006600",
    "end": "1011720"
  },
  {
    "text": "second service is also consuming those messages this snapshot or service we",
    "start": "1011720",
    "end": "1017279"
  },
  {
    "text": "consume those messages accumulate any memory stage and periodically it generates a snapshot to disk and to a",
    "start": "1017279",
    "end": "1024510"
  },
  {
    "text": "stream and when a new authorizer instance starts let's say we're",
    "start": "1024510",
    "end": "1029520"
  },
  {
    "text": "deploying a new version that authorizer instance fetches that snapshot from disk",
    "start": "1029520",
    "end": "1035308"
  },
  {
    "text": "loads it into memory and now it's able to accept new new transactional ization",
    "start": "1035309",
    "end": "1041370"
  },
  {
    "text": "requests it also fetches from that snapshot the offset on the catalog at which that",
    "start": "1041370",
    "end": "1049440"
  },
  {
    "text": "snapshot was generated so it can start to consume new messages this ensuring we don't lose any any data this here are",
    "start": "1049440",
    "end": "1058980"
  },
  {
    "start": "1056000",
    "end": "1056000"
  },
  {
    "text": "just some some metrics that we keep track of and you can see how improved",
    "start": "1058980",
    "end": "1064080"
  },
  {
    "text": "our standing rates that's the the rates that's the percent of transactions that",
    "start": "1064080",
    "end": "1069149"
  },
  {
    "text": "we cannot authorize and the brand has to authorize the network as authorized on our behalf we want to",
    "start": "1069149",
    "end": "1074430"
  },
  {
    "text": "minimize that and after we deployed our own authorizer because it we were able",
    "start": "1074430",
    "end": "1079590"
  },
  {
    "text": "to go down from around 1% of standings to below 1 basis point and perhaps with",
    "start": "1079590",
    "end": "1086880"
  },
  {
    "text": "this light the thing that are most went to convey to you was a point about the process with this project we decided",
    "start": "1086880",
    "end": "1094290"
  },
  {
    "text": "that we wanted to go live as soon as possible to Conn to pass all of the master car tests as soon as possible so",
    "start": "1094290",
    "end": "1101550"
  },
  {
    "text": "we could learn from real data using controlled experiments using controlled",
    "start": "1101550",
    "end": "1106560"
  },
  {
    "text": "set of test cards learn what actually was coming in through the wire in the",
    "start": "1106560",
    "end": "1113280"
  },
  {
    "text": "real life because we knew that documentation couldn't be relied upon for a complete implementation and that",
    "start": "1113280",
    "end": "1121140"
  },
  {
    "text": "was very helpful for us after those test cards we rolled out larger and larger sets of cards until we were able to to",
    "start": "1121140",
    "end": "1128220"
  },
  {
    "text": "move all of our customer base to the authorizer the wonderful job of teaching",
    "start": "1128220",
    "end": "1137970"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "everyone accounting this morning which I'm sure you're excited about try to do this efficiently so one problem that we",
    "start": "1137970",
    "end": "1146730"
  },
  {
    "start": "1142000",
    "end": "1142000"
  },
  {
    "text": "face is that in the example that Hoffa gave on authorization in order to say",
    "start": "1146730",
    "end": "1152700"
  },
  {
    "text": "yes or no to a given purchase you don't need a lot of data but the data you need depends on a lot of other data so we",
    "start": "1152700",
    "end": "1159360"
  },
  {
    "text": "need to know if you have an available limit that is a cumulative function of everything we know about you for your",
    "start": "1159360",
    "end": "1165060"
  },
  {
    "text": "entire history purchases payments credit limit changes all that stuff has to come together to give us the answer which is",
    "start": "1165060",
    "end": "1172290"
  },
  {
    "text": "what's your open to buy right what's your available limit so one thing that we do to manage this complexity is we",
    "start": "1172290",
    "end": "1179760"
  },
  {
    "text": "actually treat a lot of the core financial logic in the stateful cumulative functions in a service we",
    "start": "1179760",
    "end": "1185280"
  },
  {
    "text": "call double entry so the model is pretty simple it's an entry has an amount and",
    "start": "1185280",
    "end": "1191490"
  },
  {
    "start": "1187000",
    "end": "1187000"
  },
  {
    "text": "then a pair of book accounts or ledger accounts the credit account and the debit account and then the balance at",
    "start": "1191490",
    "end": "1198480"
  },
  {
    "text": "any given time is a cumulative function over all of the debits and credits for that book account a cumulative sum",
    "start": "1198480",
    "end": "1205830"
  },
  {
    "text": "and a customer's balance sheet by extension is just the collective picture of all their book accounts and so what",
    "start": "1205830",
    "end": "1213809"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "we've done that's different than what most people do is we modeled the double-entry accounting system as an operational system this isn't an",
    "start": "1213809",
    "end": "1219330"
  },
  {
    "text": "analytical system that happens periodically with finance this is in real-time per customer and we're",
    "start": "1219330",
    "end": "1225630"
  },
  {
    "text": "relating business events like a new purchase or new payment to a series of entries that map to our domain model so",
    "start": "1225630",
    "end": "1233070"
  },
  {
    "text": "this is our mapping between a business event and debits and credits right and collectively we call that a movement",
    "start": "1233070",
    "end": "1239809"
  },
  {
    "text": "this is an example movement where you have two entries you have you know the",
    "start": "1239809",
    "end": "1245130"
  },
  {
    "text": "unsettled for a new transaction that comes in that hasn't settled yet and the current limit so this system has been",
    "start": "1245130",
    "end": "1252570"
  },
  {
    "start": "1251000",
    "end": "1251000"
  },
  {
    "text": "very powerful for us and it's the best way we know to show you the customer what your balance sheet is we have a",
    "start": "1252570",
    "end": "1258779"
  },
  {
    "text": "limit bar in our app and you need to know what's your what's your limit what's your current bill etc and so we",
    "start": "1258779",
    "end": "1265080"
  },
  {
    "text": "use double entry for this but there are some challenges for one ordering matters so as an example if you're late and you",
    "start": "1265080",
    "end": "1272639"
  },
  {
    "text": "make a payment for more than you oh you don't have a negative late balance you have a prepaid balance right if those",
    "start": "1272639",
    "end": "1278370"
  },
  {
    "text": "events happen in a different order things would be different and to make this even worse you have late-arriving",
    "start": "1278370",
    "end": "1284130"
  },
  {
    "text": "events so you can make a payment we receive today that should be credited on",
    "start": "1284130",
    "end": "1289169"
  },
  {
    "text": "Friday right so what we need to do is time travel back and replay those events and try to figure out what's the right",
    "start": "1289169",
    "end": "1295080"
  },
  {
    "text": "balance that doesn't violate our invariance that we have and that's the process we call fixing invariants so",
    "start": "1295080",
    "end": "1301440"
  },
  {
    "text": "this is an example of a generative test or a property based test that we use and",
    "start": "1301440",
    "end": "1306690"
  },
  {
    "start": "1302000",
    "end": "1302000"
  },
  {
    "text": "given that the interleaving of events creates a combinatorial explosion like it's you can't write traditional unit",
    "start": "1306690",
    "end": "1313169"
  },
  {
    "text": "tests that are gonna capture the entire space for something like this so we we create a randomized initial State with",
    "start": "1313169",
    "end": "1319289"
  },
  {
    "text": "randomized adjustments and purchases etc and then we create a loss event and",
    "start": "1319289",
    "end": "1324950"
  },
  {
    "text": "generate thousands of examples of this and every time we verify that are invariants the the property is still",
    "start": "1324950",
    "end": "1331110"
  },
  {
    "text": "hold and and this has allowed us to catch very real bugs and production the",
    "start": "1331110",
    "end": "1336809"
  },
  {
    "text": "last problem here is something that Hof is going to talk about next which is right throughput so this is where we",
    "start": "1336809",
    "end": "1343440"
  },
  {
    "text": "start to hit the limits of what we can write through a single database and double entry is typically our highest",
    "start": "1343440",
    "end": "1349380"
  },
  {
    "text": "pressure database because most business events actually do generate debits and credits for new bank so you have rights",
    "start": "1349380",
    "end": "1355110"
  },
  {
    "text": "from basically any system in the entire architecture also causing rights on on the double entry system so the next the",
    "start": "1355110",
    "end": "1363270"
  },
  {
    "text": "next item is infrastructure we're going to talk about how we dealt with that problem among among others Thanks ok so",
    "start": "1363270",
    "end": "1371460"
  },
  {
    "start": "1368000",
    "end": "1368000"
  },
  {
    "text": "we've been in this talk but show you guys this curve this is our customer growth curve and we are very happy with",
    "start": "1371460",
    "end": "1377130"
  },
  {
    "text": "that it's good to have customers ever mark number of customers but as",
    "start": "1377130",
    "end": "1382530"
  },
  {
    "text": "engineers we need to look at that with skepticism and and with scale comes",
    "start": "1382530",
    "end": "1389600"
  },
  {
    "text": "scalability problems and of course we are no exception the first couple of",
    "start": "1389600",
    "end": "1395669"
  },
  {
    "text": "bottlenecks that started to affect her as initially were the data base to put",
    "start": "1395669",
    "end": "1401549"
  },
  {
    "text": "problem that Edward was was talking about we are using the atomic and it's a",
    "start": "1401549",
    "end": "1406950"
  },
  {
    "text": "great database but when we reach very high write throughput levels we reach",
    "start": "1406950",
    "end": "1415049"
  },
  {
    "text": "certain limits we had to actually throw the message consumption that led to those rights in order to maintain",
    "start": "1415049",
    "end": "1421320"
  },
  {
    "text": "service stability initially another bottleneck that that reared up its head",
    "start": "1421320",
    "end": "1428909"
  },
  {
    "text": "in our infrastructure was the batch jobs some batch jobs that used to take just a",
    "start": "1428909",
    "end": "1434159"
  },
  {
    "text": "few minutes we're now taking many many hours even more than one day and that as you can imagine can have a pretty",
    "start": "1434159",
    "end": "1440610"
  },
  {
    "text": "serious impact for our customers and so the first thing to do when you you're at",
    "start": "1440610",
    "end": "1447419"
  },
  {
    "start": "1444000",
    "end": "1444000"
  },
  {
    "text": "scale you try to optimize and we try to optimize a few of our core flows so they",
    "start": "1447419",
    "end": "1453120"
  },
  {
    "text": "are faster but that has a limit at some point you need to find a way to partition your workload so we can safely",
    "start": "1453120",
    "end": "1460789"
  },
  {
    "text": "handle that workload in parallel and in isolated manner and and we had to do",
    "start": "1460789",
    "end": "1468360"
  },
  {
    "text": "that and when interesting property of our domain that was helpful that that the interactions between customers",
    "start": "1468360",
    "end": "1475770"
  },
  {
    "text": "are minimal and that's different from other domains for instance look at social networks in our case most of the",
    "start": "1475770",
    "end": "1484170"
  },
  {
    "text": "int of the data and the business logic that we run pertains to customers at a",
    "start": "1484170",
    "end": "1489630"
  },
  {
    "text": "time so we could is a partitioning of our customer base as a proxy for",
    "start": "1489630",
    "end": "1494640"
  },
  {
    "text": "partitioning the workload and the first option that we considered when we were",
    "start": "1494640",
    "end": "1500550"
  },
  {
    "start": "1497000",
    "end": "1497000"
  },
  {
    "text": "thinking about how to partition our workloads to scale is to partition at",
    "start": "1500550",
    "end": "1507420"
  },
  {
    "text": "the database level so here you have back-end service and it used to write to",
    "start": "1507420",
    "end": "1513330"
  },
  {
    "text": "a single database it reached certain limits we would then partition that database",
    "start": "1513330",
    "end": "1518670"
  },
  {
    "text": "we'd have database charts that that service on every right and on every",
    "start": "1518670",
    "end": "1524370"
  },
  {
    "text": "query would need to route that writer query to the correct database and that",
    "start": "1524370",
    "end": "1530160"
  },
  {
    "text": "can work a lot of companies do that but we saw some problems with this approach",
    "start": "1530160",
    "end": "1537170"
  },
  {
    "text": "one is that it would take an enormous effort to go through every service there",
    "start": "1537170",
    "end": "1543240"
  },
  {
    "text": "was facing scalability problems and they every single query update every single",
    "start": "1543240",
    "end": "1549780"
  },
  {
    "text": "transaction and the quality of the code base after we changed all services to route to multiple databases might",
    "start": "1549780",
    "end": "1556920"
  },
  {
    "text": "deteriorate a bit and but that's not the main problem the main problem in our",
    "start": "1556920",
    "end": "1562200"
  },
  {
    "text": "hand in our eyes is that this when you partition the database you're only",
    "start": "1562200",
    "end": "1567690"
  },
  {
    "text": "addressing scalability problems with the database and there can be other scalability problems you can have",
    "start": "1567690",
    "end": "1575540"
  },
  {
    "text": "long-running batch jobs you can have the operational overhead of scaling our",
    "start": "1575540",
    "end": "1581460"
  },
  {
    "text": "Kefka clusters there's a lot of problems that this option would not address so we",
    "start": "1581460",
    "end": "1587220"
  },
  {
    "text": "considered a different model the scalability units model when you're",
    "start": "1587220",
    "end": "1593250"
  },
  {
    "start": "1588000",
    "end": "1588000"
  },
  {
    "text": "doing scalability units your shards are not database charts your charts are actually copies of your infrastructure",
    "start": "1593250",
    "end": "1599280"
  },
  {
    "text": "so let's look at New Mexico structure we have our 120 plus services living on a",
    "start": "1599280",
    "end": "1605550"
  },
  {
    "text": "cloud our databases Kefka clusters zookeeper clusters networking so when we go the scalability",
    "start": "1605550",
    "end": "1613980"
  },
  {
    "text": "units model we build clones of that entire infrastructure and we assign",
    "start": "1613980",
    "end": "1619530"
  },
  {
    "text": "different partitions of our customer base to different clones those are our",
    "start": "1619530",
    "end": "1624780"
  },
  {
    "text": "shards and that's what we ended up doing it did really help we can address",
    "start": "1624780",
    "end": "1630870"
  },
  {
    "text": "multiple scalability bottlenecks at the same time but of course some route he",
    "start": "1630870",
    "end": "1637020"
  },
  {
    "start": "1635000",
    "end": "1635000"
  },
  {
    "text": "has to happen when an external event happens we need to be able to route",
    "start": "1637020",
    "end": "1642809"
  },
  {
    "text": "those external events to the right chart so on the transaction authorization use",
    "start": "1642809",
    "end": "1649950"
  },
  {
    "text": "case that we were just talking about a customer makes a purchase this is run on our physical structure our cloud has to",
    "start": "1649950",
    "end": "1657720"
  },
  {
    "text": "know about that purchase and has to be routed to the right chart so we build a section of infrastructure recorded",
    "start": "1657720",
    "end": "1664380"
  },
  {
    "text": "global and the global section is not charted and the services that live on",
    "start": "1664380",
    "end": "1669960"
  },
  {
    "text": "the global section they are there mostly to to maintain mappings from externally known identifiers to customer G's and",
    "start": "1669960",
    "end": "1677850"
  },
  {
    "text": "their charts so when a purchase comes in we look up certain identify information",
    "start": "1677850",
    "end": "1682860"
  },
  {
    "text": "find it chart routed they're basically the same kind of thing happens when we know about deposits payments are there",
    "start": "1682860",
    "end": "1689580"
  },
  {
    "text": "other events there's a slightly different use case for interactive",
    "start": "1689580",
    "end": "1696540"
  },
  {
    "start": "1693000",
    "end": "1693000"
  },
  {
    "text": "interactive views when our customers are interacting with the app to talk to our",
    "start": "1696540",
    "end": "1702360"
  },
  {
    "text": "services we are able to route that kind of flow only at the very beginning when",
    "start": "1702360",
    "end": "1709140"
  },
  {
    "text": "the customer logs in the way this happens you're looking at here a customer logging the there's a global",
    "start": "1709140",
    "end": "1716400"
  },
  {
    "text": "service that will validate that customer's credentials even sure it's a",
    "start": "1716400",
    "end": "1721550"
  },
  {
    "text": "that person is who she says she is then it will respond if it's correct it will",
    "start": "1721550",
    "end": "1728850"
  },
  {
    "text": "respond to the app with hyperlinks with hypermedia links where that app will be able to",
    "start": "1728850",
    "end": "1736350"
  },
  {
    "text": "fetch more information so here that will fetch information about the account from a different service this next",
    "start": "1736350",
    "end": "1743690"
  },
  {
    "text": "interaction is already directly connected to the shard where that",
    "start": "1743690",
    "end": "1749029"
  },
  {
    "text": "customer lives and new new links and further communication between that app",
    "start": "1749029",
    "end": "1754970"
  },
  {
    "text": "and their services then all phone through a series of hyperlinks and",
    "start": "1754970",
    "end": "1761269"
  },
  {
    "text": "therefore we can ensure that that app talks to the correct chart at all times",
    "start": "1761269",
    "end": "1766700"
  },
  {
    "text": "and we don't need to build an enormous routing layer that would intercept every",
    "start": "1766700",
    "end": "1773509"
  },
  {
    "text": "single request from the outside we are able to do that only at the beginning at",
    "start": "1773509",
    "end": "1779059"
  },
  {
    "text": "logging which is help of course for for managing our load and some just going",
    "start": "1779059",
    "end": "1786200"
  },
  {
    "start": "1783000",
    "end": "1783000"
  },
  {
    "text": "through some lessons learned from this process the first last so it's may be",
    "start": "1786200",
    "end": "1791840"
  },
  {
    "text": "obvious it is working for us and we are much less concerned about the impact of",
    "start": "1791840",
    "end": "1797509"
  },
  {
    "text": "the growth of our customer base on our production services at production quality but there's some caveats one is",
    "start": "1797509",
    "end": "1805460"
  },
  {
    "text": "that this if you go the scalability in its route versus shard each database",
    "start": "1805460",
    "end": "1811009"
  },
  {
    "text": "route it's much harder to roll out incrementally you basically have to be able to route know how to route every",
    "start": "1811009",
    "end": "1818690"
  },
  {
    "text": "single external incoming event to the right shard before you're able to send even a single customer to a second chart",
    "start": "1818690",
    "end": "1825019"
  },
  {
    "text": "this means that it's a long project that only bears fruit at the end and it's important to pay attention to how your",
    "start": "1825019",
    "end": "1831590"
  },
  {
    "text": "customer base is growing while that project is is underway and another point",
    "start": "1831590",
    "end": "1838759"
  },
  {
    "start": "1838000",
    "end": "1838000"
  },
  {
    "text": "regarding for structure I want to make here is that even if you have a solution in place to deal with scale problems",
    "start": "1838759",
    "end": "1844909"
  },
  {
    "text": "happen if services might try to interact with third party providers that are",
    "start": "1844909",
    "end": "1850429"
  },
  {
    "text": "flying services might run out of memory a bug might be introduced and services might start showing exceptions and we",
    "start": "1850429",
    "end": "1857720"
  },
  {
    "text": "apply a couple of highly interesting fault tolerance patterns to address",
    "start": "1857720",
    "end": "1864049"
  },
  {
    "text": "those those problems first going to talk about dead letters it's a very simple pattern but it has produced enormous",
    "start": "1864049",
    "end": "1871070"
  },
  {
    "text": "gains for for operations message is produced it is",
    "start": "1871070",
    "end": "1876140"
  },
  {
    "text": "consumed and at which point an exception happens something bad happened what we",
    "start": "1876140",
    "end": "1882049"
  },
  {
    "text": "do then our libraries that handle the message infrastructure will actually forward that original message along with",
    "start": "1882049",
    "end": "1889100"
  },
  {
    "text": "some extra metadata about the earth to a dead letter topic another service consumes from the dead layer of topic",
    "start": "1889100",
    "end": "1895820"
  },
  {
    "text": "and merely stores it in a data database somewhere then offline an engineer will",
    "start": "1895820",
    "end": "1902210"
  },
  {
    "text": "triage those errors those dead letters on that fire that service of coded",
    "start": "1902210",
    "end": "1907549"
  },
  {
    "text": "mortician for obvious reasons and if that engineer is confident that the bug",
    "start": "1907549",
    "end": "1913010"
  },
  {
    "text": "was fixed and that the problem huge I can just republish that message back to",
    "start": "1913010",
    "end": "1918830"
  },
  {
    "text": "the original topic and that helps us because if your financial situation data",
    "start": "1918830",
    "end": "1923929"
  },
  {
    "text": "loss is the worst thing that can happen so we can recover from possible data",
    "start": "1923929",
    "end": "1929390"
  },
  {
    "text": "loss eventual data loss in using that letters another pattern I'm going to",
    "start": "1929390",
    "end": "1935059"
  },
  {
    "text": "talk about circuit breakers I'm sure most of you are already familiar it's a very common pattern I'm sure doing microservices and but the",
    "start": "1935059",
    "end": "1942289"
  },
  {
    "text": "interesting interesting thing is how a circuit breakers interact with messaging and so here we are consuming messages an",
    "start": "1942289",
    "end": "1950990"
  },
  {
    "text": "outbound call fails if that happens enough times a circuit breaker would trip what we do then is we pause the",
    "start": "1950990",
    "end": "1958700"
  },
  {
    "text": "consumer we stop consuming messages that allows what could be a barrage of",
    "start": "1958700",
    "end": "1963710"
  },
  {
    "text": "exceptions of events happening to become simply an lag that accumulates on a",
    "start": "1963710",
    "end": "1969890"
  },
  {
    "text": "Kefka topic and when the problem is fixed it just start consuming it again",
    "start": "1969890",
    "end": "1976390"
  },
  {
    "text": "one other thing that didn't scale so well is using the atomic and our operational transactional infrastructure",
    "start": "1977080",
    "end": "1983510"
  },
  {
    "text": "for aggregations even simple questions like how many customers do we have I think our CEO asked me this many times",
    "start": "1983510",
    "end": "1989990"
  },
  {
    "text": "and it became increasingly difficult to answer and that's it's a simple question what's going on and the answer is even",
    "start": "1989990",
    "end": "1996049"
  },
  {
    "text": "especially with sharding and fragmenting the the operational system so that they scale better you're making analysis",
    "start": "1996049",
    "end": "2002289"
  },
  {
    "text": "harder and you're making an aggregate sand analytical work harder and so what we did is the traditional I guess approach of",
    "start": "2002289",
    "end": "2008649"
  },
  {
    "text": "making an ETL which stands for extract transform and load so before we get into",
    "start": "2008649",
    "end": "2014110"
  },
  {
    "start": "2011000",
    "end": "2011000"
  },
  {
    "text": "the ETL I just want to give a quick primer on how diatomic works two slides",
    "start": "2014110",
    "end": "2019230"
  },
  {
    "text": "it basically works mapping business events to get commit style transactions",
    "start": "2019230",
    "end": "2026139"
  },
  {
    "text": "in the database so if we think about a customer joining new bank and then getting a credit limit making a purchase",
    "start": "2026139",
    "end": "2033480"
  },
  {
    "text": "getting a credit limit increase blocking a card right so this is a very common sequence of events for our business this",
    "start": "2033480",
    "end": "2041169"
  },
  {
    "text": "is how they look in a dynamic database right so you have assertions of facts this is a fact this is a fact and",
    "start": "2041169",
    "end": "2047879"
  },
  {
    "text": "sometimes like in the case of the limit changing you have something they used to be a fact which is no longer effect it's",
    "start": "2047879",
    "end": "2054790"
  },
  {
    "text": "no longer 3000 it's 5000 that's the limit and the other thing to notice is here on the on the right hand side you",
    "start": "2054790",
    "end": "2060908"
  },
  {
    "text": "have a monotonically increasing transaction because the transactions in the atomic are a first-class citizen and",
    "start": "2060909",
    "end": "2066460"
  },
  {
    "text": "you can use those to great effect when you're when you're dealing with kind of log tailing right so for our ETL what we",
    "start": "2066460",
    "end": "2072669"
  },
  {
    "start": "2069000",
    "end": "2069000"
  },
  {
    "text": "have is an always-on log tailor that tails all of the dynamic logs we have and then pipes them into our data Lake",
    "start": "2072669",
    "end": "2079780"
  },
  {
    "text": "doing chunking and format conversion and things like that and interestingly it's",
    "start": "2079780",
    "end": "2085060"
  },
  {
    "text": "the same thing that we do for certain Kefka topics whereby the data is relevant and and it's not in the atomic",
    "start": "2085060",
    "end": "2090339"
  },
  {
    "text": "right similar log abstraction we consume from those topics and we load those",
    "start": "2090339",
    "end": "2095679"
  },
  {
    "text": "things into our daily and from there what we can do is we can paper over things like sharding right like an",
    "start": "2095679",
    "end": "2101950"
  },
  {
    "text": "analyst never wants to know never wants to have to think about where the data is all it is that in shard 1 or shard 2 or",
    "start": "2101950",
    "end": "2107740"
  },
  {
    "text": "shard 3 no so we kind of put that back together into something we call a contract so a",
    "start": "2107740",
    "end": "2112839"
  },
  {
    "text": "contract is basically reconstructing a single logical table for an entity and then we build as functions of contracts",
    "start": "2112839",
    "end": "2120099"
  },
  {
    "text": "and other data sets we build a directed acyclic graph of data sets machine",
    "start": "2120099",
    "end": "2125109"
  },
  {
    "text": "learning models and also policies that translate machine learning model scores into business decisions an example would",
    "start": "2125109",
    "end": "2132190"
  },
  {
    "text": "be translating a risk score into a credit limit for you to do proactive",
    "start": "2132190",
    "end": "2137200"
  },
  {
    "text": "limit increases and this is an example from from our",
    "start": "2137200",
    "end": "2143110"
  },
  {
    "start": "2140000",
    "end": "2140000"
  },
  {
    "text": "business where this is really valuable to have in the analytical environment the green line is an example of revenue",
    "start": "2143110",
    "end": "2149020"
  },
  {
    "text": "and that comes directly from double-entry the operational system we talked about but the the purple line is",
    "start": "2149020",
    "end": "2154630"
  },
  {
    "text": "from our ERP that's cost right that's not a real-time system and that's never going to be in production in a real-time",
    "start": "2154630",
    "end": "2160840"
  },
  {
    "text": "environment but in the analytical environment we we can recombine those things to get the answer of you know are",
    "start": "2160840",
    "end": "2166570"
  },
  {
    "text": "we making money our business is quite complex it's not clear if you're making money on every customer all the time so",
    "start": "2166570",
    "end": "2172060"
  },
  {
    "text": "having every tool you can to understand contribution margin per customer per day actually makes analytics much easier",
    "start": "2172060",
    "end": "2179470"
  },
  {
    "text": "this is also the environment whereby we generate reports for regulators to keep regulators informed and happy and that's",
    "start": "2179470",
    "end": "2186910"
  },
  {
    "text": "something that makes our business complex but it doesn't hurt us that much because we have very good tooling to",
    "start": "2186910",
    "end": "2193060"
  },
  {
    "text": "make that happen it's also a great place to run machine learning models without having all of the constraints of",
    "start": "2193060",
    "end": "2199060"
  },
  {
    "text": "production and last but not least I wanted to talk about something really",
    "start": "2199060",
    "end": "2205540"
  },
  {
    "start": "2200000",
    "end": "2200000"
  },
  {
    "text": "recent that we launched which is real-time transfers these are",
    "start": "2205540",
    "end": "2210660"
  },
  {
    "text": "screenshots of an app so the concept of the product is you scan someone's QR",
    "start": "2210660",
    "end": "2216460"
  },
  {
    "text": "code or otherwise get their their bank account put in how much money you want to transfer and the money's there in",
    "start": "2216460",
    "end": "2222160"
  },
  {
    "text": "real time right so it's very simple the way this works is the transfer request comes in but as I said you're earning 7%",
    "start": "2222160",
    "end": "2229750"
  },
  {
    "start": "2224000",
    "end": "2224000"
  },
  {
    "text": "per year this money is invested right so what we do instead of the traditional there's no database transaction here",
    "start": "2229750",
    "end": "2235660"
  },
  {
    "text": "right because people are in different shards so any form of kind of in the database transactional semantics are not",
    "start": "2235660",
    "end": "2241630"
  },
  {
    "text": "going to work but also we we need to liquidate your investment we need to make sure that that money that you have",
    "start": "2241630",
    "end": "2247570"
  },
  {
    "text": "the money and then it's ready to be transferred so we do that and and only then do we initiate a transfer out right",
    "start": "2247570",
    "end": "2253660"
  },
  {
    "text": "and if this transfer out for whatever reason doesn't work we'll do a compensating transaction reinvest the",
    "start": "2253660",
    "end": "2259750"
  },
  {
    "text": "money and kind of roll it back because that's a very rare event and we wanted to optimize for the most scalable way to",
    "start": "2259750",
    "end": "2266380"
  },
  {
    "text": "run this so we're kind of real-time gross settlement of transfers here and at that point we have a global service",
    "start": "2266380",
    "end": "2273310"
  },
  {
    "text": "that can sue from every shard to get all of the the global transfers into a single stateful",
    "start": "2273310",
    "end": "2279790"
  },
  {
    "text": "service so we can maintain item patents and at the same time the ledger the double-entry service is observing those",
    "start": "2279790",
    "end": "2287109"
  },
  {
    "text": "events and updating the debits and credits so we have an up-to-date analytical view in real-time at that",
    "start": "2287109",
    "end": "2293140"
  },
  {
    "text": "point if this is - another new bank customer that's internal right we'll just route that into the right right",
    "start": "2293140",
    "end": "2298960"
  },
  {
    "text": "shard and complete the and complete the transaction but an interesting feature of Brazil is that even if it's to an",
    "start": "2298960",
    "end": "2306280"
  },
  {
    "text": "external bank account to any other bank account in the entire country that's also fine and it's also in real time so",
    "start": "2306280",
    "end": "2311980"
  },
  {
    "text": "we can basically translate Kafka messages into a soap approach and back",
    "start": "2311980",
    "end": "2317290"
  },
  {
    "text": "and forth and get that into a centralized hub and spoke payments model for Brazil that is connected to hundreds",
    "start": "2317290",
    "end": "2324160"
  },
  {
    "text": "of other Brazilian banks that we didn't have to integrate with one by one thankfully and so I find this really",
    "start": "2324160",
    "end": "2332230"
  },
  {
    "start": "2330000",
    "end": "2330000"
  },
  {
    "text": "interesting kind of as an American coming from the ACH system I mean this is pretty much space-age technology and",
    "start": "2332230",
    "end": "2339040"
  },
  {
    "text": "it's it's kind of born out of a legacy of high inflation rates in Brazil people",
    "start": "2339040",
    "end": "2344400"
  },
  {
    "text": "didn't want to wait until the end of the month to kind of build up counterparty risk and then in a net settle right even",
    "start": "2344400",
    "end": "2351160"
  },
  {
    "text": "if that's easier on the systems the value is placed on real time gross settlement right now and so this system",
    "start": "2351160",
    "end": "2357069"
  },
  {
    "text": "does over a trillion hey eyes or about 300 billion dollars transferred around per day and everybody connected to this",
    "start": "2357069",
    "end": "2364780"
  },
  {
    "text": "has IBM MQ series hardware and it's all quite sophisticated you can read more about it at this link so I think the the",
    "start": "2364780",
    "end": "2374410"
  },
  {
    "text": "overall kind of big-picture summary is that the financial domain is large",
    "start": "2374410",
    "end": "2380109"
  },
  {
    "text": "there's a lot of pieces you need to have an MVP a Minimum Viable Product when",
    "start": "2380109",
    "end": "2385150"
  },
  {
    "text": "you're dealing with people's money tends to not look so minimal it tends to be be large and there's also a lot of",
    "start": "2385150",
    "end": "2391530"
  },
  {
    "text": "interactions between the different kind of bounded context right you put something in charge back and somehow",
    "start": "2391530",
    "end": "2397630"
  },
  {
    "text": "that affects whether you're authorizing a purchase or not and so these things tend to get highly coupled when placed",
    "start": "2397630",
    "end": "2404530"
  },
  {
    "text": "inside a mainframe and when you allow database connections and stored procedures to to",
    "start": "2404530",
    "end": "2410049"
  },
  {
    "text": "kind of couple them together so we had to work very hard to to decouple them and we generally use Kafka and and",
    "start": "2410049",
    "end": "2416470"
  },
  {
    "text": "asynchronous messaging as the as the lifeblood underlying that so I think",
    "start": "2416470",
    "end": "2422859"
  },
  {
    "text": "yeah we're hiring in San Paulo and and Berlin and thank you I think we're now",
    "start": "2422859",
    "end": "2428559"
  },
  {
    "text": "gonna open up for for questions bring",
    "start": "2428559",
    "end": "2439239"
  },
  {
    "text": "the mic around to the front when you",
    "start": "2439239",
    "end": "2444489"
  },
  {
    "text": "talk about the authorities of components when you pull out the messages from the ik/fk are streams then how would you",
    "start": "2444489",
    "end": "2451029"
  },
  {
    "text": "return that respond back to the client that this is the old coder because Kafka is just one way right so",
    "start": "2451029",
    "end": "2458190"
  },
  {
    "text": "for our authorizer services they also can produce messages to Kafka do you",
    "start": "2458190",
    "end": "2464440"
  },
  {
    "text": "know if this one is HTTP or Kafka when a new transaction comes in so yeah well so",
    "start": "2464440",
    "end": "2470499"
  },
  {
    "text": "for us CAF goes both ways we use Kafka to synchronize state into the authorizers so we know you're open to",
    "start": "2470499",
    "end": "2476109"
  },
  {
    "text": "buy in real time so we can respond immediately if you try to transact but then we push that state back out into",
    "start": "2476109",
    "end": "2482739"
  },
  {
    "text": "the cloud and also back out importantly into all the other authorizer instances right so that they all get an updated",
    "start": "2482739",
    "end": "2488799"
  },
  {
    "text": "version of your open-to-buy otherwise you risk you know speed attacks and things where if something is",
    "start": "2488799",
    "end": "2495069"
  },
  {
    "text": "routed to an authorized er you could spend the same money twice right that's the critical the double spend problem is",
    "start": "2495069",
    "end": "2500739"
  },
  {
    "text": "is the critical thing that we have to avoid as",
    "start": "2500739",
    "end": "2505109"
  },
  {
    "text": "yeah we use so Kafka has asynchronous semantics but it basically operates in",
    "start": "2509960",
    "end": "2515869"
  },
  {
    "text": "real-time for us so we think of it as almost synchronous we don't think of it as something that's going to take a long",
    "start": "2515869",
    "end": "2521030"
  },
  {
    "text": "time it's we think of it in real-time even though it's technically asynchronous and it only it only becomes",
    "start": "2521030",
    "end": "2526130"
  },
  {
    "text": "obviously asynchronous when lags build up in response to some kind of issue",
    "start": "2526130",
    "end": "2532030"
  },
  {
    "text": "[Music] regular operation most of the time I'll to use our 0 leg first",
    "start": "2532650",
    "end": "2545720"
  },
  {
    "text": "I think the architecture probably like the reason being so many decoupled parts",
    "start": "2545720",
    "end": "2552130"
  },
  {
    "text": "but I would like to understand like from using Kafka right so why are you",
    "start": "2552130",
    "end": "2559099"
  },
  {
    "text": "actually doing any kind of aggregations in Kafka or because I think the cafe is",
    "start": "2559099",
    "end": "2566540"
  },
  {
    "text": "interesting choice right because you have a chance of duplications right and I mean they we talk about exactly one",
    "start": "2566540",
    "end": "2575270"
  },
  {
    "text": "semantics but end of the dates it's really hard right I mean with so many events message is coming in so how do",
    "start": "2575270",
    "end": "2582950"
  },
  {
    "text": "you do that maybe a little bit on that and I mean with so many moving parts so",
    "start": "2582950",
    "end": "2588440"
  },
  {
    "text": "many decoupled parts how difficult was it in general - I think what was your",
    "start": "2588440",
    "end": "2595460"
  },
  {
    "text": "road to that complete architecture and how difficult was it to just not do it but convinced everyone around it that",
    "start": "2595460",
    "end": "2601760"
  },
  {
    "text": "it's gonna work it's a great question so we don't rely on Kafka exactly once",
    "start": "2601760",
    "end": "2607579"
  },
  {
    "text": "semantics for our business we actually make sure that any message that goes on Kafka is idempotent they have to be I",
    "start": "2607579",
    "end": "2613490"
  },
  {
    "text": "dumped it in because you could consume the same message more than once so what we use is the atomic transactional",
    "start": "2613490",
    "end": "2619160"
  },
  {
    "text": "semantics to maintain that right so when you consume a message we have a correlation ID or something in that",
    "start": "2619160",
    "end": "2625849"
  },
  {
    "text": "message to know if we've already seen it before and if that goes into the database we use transaction functions to",
    "start": "2625849",
    "end": "2632240"
  },
  {
    "text": "make sure that we don't we don't you know have something that is is double double counted right even in the",
    "start": "2632240",
    "end": "2637819"
  },
  {
    "text": "presence of multiple messages so we use acid transactions for that we don't use the stateful",
    "start": "2637819",
    "end": "2643850"
  },
  {
    "text": "kind of Kafka streams or exactly once semantics is it a real-time or do you do like a lambic picture so it is real-time",
    "start": "2643850",
    "end": "2651890"
  },
  {
    "text": "for everything that involves the operation we do a bit of a land architecture for things like machine",
    "start": "2651890",
    "end": "2656930"
  },
  {
    "text": "learning models whereby we we run a really expensive model overnight to pre-compute something and then we merge",
    "start": "2656930",
    "end": "2663470"
  },
  {
    "text": "that in so that if you were to ask you know for a credit limit increase we could respond in real-time even though",
    "start": "2663470",
    "end": "2668630"
  },
  {
    "text": "we pre computed it in the batch environment last night so we do a little bit of merging but but not much and it's",
    "start": "2668630",
    "end": "2675710"
  },
  {
    "text": "it's an interesting point like how did we end up with this decoupled model where are we kind of heroes did we are",
    "start": "2675710",
    "end": "2680960"
  },
  {
    "text": "we really smart not not really so we we actually built a massive service this is still infamous in new bank called",
    "start": "2680960",
    "end": "2686630"
  },
  {
    "text": "accounts and it had like everything in there and then we we spent I don't know six months splitting that so so no we",
    "start": "2686630",
    "end": "2693800"
  },
  {
    "text": "definitely got the bounded context wrong and we definitely were tempted because these things interact right why not put",
    "start": "2693800",
    "end": "2699050"
  },
  {
    "text": "them in the same database it's very tempting so we had to split services and",
    "start": "2699050",
    "end": "2704330"
  },
  {
    "text": "in especially with day Tomic it's not very fun you end up doing log replays and and it's a tough it's a tough thing",
    "start": "2704330",
    "end": "2710780"
  },
  {
    "text": "you know that said it's very clear that we need to get to massive scale otherwise we won't be a successful",
    "start": "2710780",
    "end": "2716720"
  },
  {
    "text": "commercial retail bank right so it's easy to justify those sorts of investments when you have a long term",
    "start": "2716720",
    "end": "2722840"
  },
  {
    "text": "vision for where you need to get to it you know cutting the corner doesn't really make sense in our context hi I",
    "start": "2722840",
    "end": "2731840"
  },
  {
    "text": "would actually have a couple of questions so the first one would be choosing somehow an extraordinary stack",
    "start": "2731840",
    "end": "2742450"
  },
  {
    "text": "would you have some hands hindsight's about that or what would you",
    "start": "2742450",
    "end": "2748640"
  },
  {
    "text": "change if you would have an opportunity to change it also would you change",
    "start": "2748640",
    "end": "2756800"
  },
  {
    "text": "anything about the architecture yeah I",
    "start": "2756800",
    "end": "2762950"
  },
  {
    "text": "have one big thing I would like to change if I could in if I could have thought of it in the beginning is that",
    "start": "2762950",
    "end": "2769220"
  },
  {
    "text": "one interesting feature of the atomic that we haven't mentioned yet is that",
    "start": "2769220",
    "end": "2774700"
  },
  {
    "text": "transactions in the atomic are first class concept so you can attach metadata to transactions and we do that",
    "start": "2774700",
    "end": "2781190"
  },
  {
    "text": "which does the the version the get version of the service attach the",
    "start": "2781190",
    "end": "2786230"
  },
  {
    "text": "credentials of the user that that is making that that transaction and several other things one thing that we do not",
    "start": "2786230",
    "end": "2793160"
  },
  {
    "text": "add and I would have liked to add is a customer identifier because if every",
    "start": "2793160",
    "end": "2799220"
  },
  {
    "text": "single transaction had and I and then the identifier that could point to the",
    "start": "2799220",
    "end": "2804650"
  },
  {
    "text": "actual customer that owns that data things like splitting databases for",
    "start": "2804650",
    "end": "2810230"
  },
  {
    "text": "charging would have been much much easier I think that's a small detail but it's something I'd like to get better in",
    "start": "2810230",
    "end": "2817100"
  },
  {
    "text": "the beginning I think we also made some mistakes with how we use the atomic so",
    "start": "2817100",
    "end": "2823190"
  },
  {
    "text": "the atomic is really good for high value business data it doesn't work that well for firehose rights or really long",
    "start": "2823190",
    "end": "2830000"
  },
  {
    "text": "strings or things where you want to be using different sorts of data stores so sometimes we over used atomic as kind of",
    "start": "2830000",
    "end": "2836390"
  },
  {
    "text": "like the default database for everything and you can kind of get lulled into this the false sense of security is I would",
    "start": "2836390",
    "end": "2841820"
  },
  {
    "text": "just start a service with the atomic when the answer should be s3 or dynamo or you know something else",
    "start": "2841820",
    "end": "2847940"
  },
  {
    "text": "I think slightly overused but no no major regrets I think one thing that I",
    "start": "2847940",
    "end": "2853460"
  },
  {
    "text": "would do differently if I could do it over again is think about event sourcing a little bit earlier because I think we",
    "start": "2853460",
    "end": "2858500"
  },
  {
    "text": "we have event sourcing downstream from diatomic but not upstream so we don't get to see you know every request and",
    "start": "2858500",
    "end": "2864980"
  },
  {
    "text": "every event that happens before the database right are events that are effectively lost so I think that's",
    "start": "2864980",
    "end": "2870410"
  },
  {
    "text": "something I would have thought harder about and and maybe treated Kafka as a persistent thing versus a more of an",
    "start": "2870410",
    "end": "2877070"
  },
  {
    "text": "ephemeral message queue earlier okay another one so I guess debugging hundreds of micro",
    "start": "2877070",
    "end": "2886220"
  },
  {
    "text": "services sounds like a lot of fun especially when you have customers complaining they didn't receive any",
    "start": "2886220",
    "end": "2893150"
  },
  {
    "text": "money things like that so how are you attacking that problem",
    "start": "2893150",
    "end": "2898190"
  },
  {
    "text": "I guess you're using some kind of distributed tracer or things like that it's it's surprising how non patient",
    "start": "2898190",
    "end": "2905720"
  },
  {
    "text": "people can be when you know they don't they don't see them their money it's it's not a very forgiving",
    "start": "2905720",
    "end": "2910970"
  },
  {
    "text": "so we we don't use anything like Zipkin yet I think distributed tracing is interesting but what we do is Splunk",
    "start": "2910970",
    "end": "2918200"
  },
  {
    "text": "right so we use Splunk and we use a concept of a correlation ID whereby every service that consumes or makes an",
    "start": "2918200",
    "end": "2924770"
  },
  {
    "text": "HTTP request or produces appends a segment a random segment to that c ID so it behaves like a tree right so for any",
    "start": "2924770",
    "end": "2931250"
  },
  {
    "text": "given request you can look at a see ID and then shorten that to figure out the entire fan-out of events on HTTP and",
    "start": "2931250",
    "end": "2937700"
  },
  {
    "text": "Kafka that happen in the whole system so does that make it enjoyable and easy not",
    "start": "2937700",
    "end": "2942890"
  },
  {
    "text": "really but it's definitely tractable you can always establish kind of what happened and why a related comment is",
    "start": "2942890",
    "end": "2950000"
  },
  {
    "text": "that we use that that feature of app any metadata to the atomic transactions to store that correlation energy as well so",
    "start": "2950000",
    "end": "2956720"
  },
  {
    "text": "we can have tools that that correlate log aggregation data with the actual",
    "start": "2956720",
    "end": "2964540"
  },
  {
    "text": "database what happened in the database at that moment so it's it's much easier",
    "start": "2964540",
    "end": "2970730"
  },
  {
    "text": "to debug than if you have a system that can lose data where you don't know the history of what happened so this has",
    "start": "2970730",
    "end": "2976790"
  },
  {
    "text": "been very helpful for us ok for something query time so thank our speakers one more time",
    "start": "2976790",
    "end": "2982890"
  },
  {
    "text": "[Applause]",
    "start": "2982890",
    "end": "2986140"
  }
]