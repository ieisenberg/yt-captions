[
  {
    "text": "[Music]",
    "start": "2520",
    "end": "19520"
  },
  {
    "text": "so my name is Wes mckin I'm going to be talking about a library that I've been working on in Python for about about",
    "start": "19520",
    "end": "24920"
  },
  {
    "text": "four years called pandas which is sort of a mashup of lots of things p data",
    "start": "24920",
    "end": "30679"
  },
  {
    "text": "python data analysis or take your pick um if you like thinking about it as you know being inspired by the by the animal",
    "start": "30679",
    "end": "37160"
  },
  {
    "text": "then certainly be my guest um very happy to be here so so the story with panda so",
    "start": "37160",
    "end": "43920"
  },
  {
    "text": "I guess most of you have used numpy am I correct has anyone not used",
    "start": "43920",
    "end": "49520"
  },
  {
    "text": "numpy oh that's well that's fantastic news um so anyway so so pandas is so I",
    "start": "49600",
    "end": "55520"
  },
  {
    "text": "the story is I started uh I started out working in Python at the beginning of 2008 and I was working inside of a Quant",
    "start": "55520",
    "end": "62199"
  },
  {
    "text": "hedge fund and I was using R and uh I long story short as I became very frustrated with the data manipulation",
    "start": "62199",
    "end": "68680"
  },
  {
    "text": "capabilities that um that are provided particularly with regard um to to time",
    "start": "68680",
    "end": "73880"
  },
  {
    "text": "series data which is really just a special case of an of a labeled a labeled array uh data structure um and",
    "start": "73880",
    "end": "81799"
  },
  {
    "text": "so I started looking at well okay is there anything um in Python well first is there anything in r that has the the",
    "start": "81799",
    "end": "88119"
  },
  {
    "text": "features that that I needed to really really have a rich tool for working with uh working with collections of Time",
    "start": "88119",
    "end": "94000"
  },
  {
    "text": "series data um I basically decided that no and plus you know our language is",
    "start": "94000",
    "end": "99399"
  },
  {
    "text": "sort of horrible to program in um to build uh I was already not not satisfied with building you know real production",
    "start": "99399",
    "end": "105399"
  },
  {
    "text": "systems in it and wanted to do things in Python but there was sort of a a missing layer there between between numpy and um",
    "start": "105399",
    "end": "113320"
  },
  {
    "text": "the the tools needed to implement the domain specific logic so I started building this library and basically now",
    "start": "113320",
    "end": "119680"
  },
  {
    "text": "now four years later um it's this very rich data manipulation tool which is built on top of numpy so it sits on top",
    "start": "119680",
    "end": "125200"
  },
  {
    "text": "of numpy and provides a lot of features like Travis was saying that are not built into not built into numpy which",
    "start": "125200",
    "end": "131760"
  },
  {
    "text": "eventually some of them will be and that's that's part of uh some of the work that's going to be happening uh",
    "start": "131760",
    "end": "137360"
  },
  {
    "text": "over the next couple of years um so there are data structures um the library",
    "start": "137360",
    "end": "143360"
  },
  {
    "text": "is primarily data structures but they're also a lot of auxiliary tools for working with those data structures",
    "start": "143360",
    "end": "148640"
  },
  {
    "text": "getting data in and out of uh the pandis data frame object um you know writing",
    "start": "148640",
    "end": "154599"
  },
  {
    "text": "things to disk different different kinds of persistence uh tools for working with databases just all the things that you",
    "start": "154599",
    "end": "160400"
  },
  {
    "text": "need to solve real world problems and I've been working I've worked uh um you know many different problem domains in",
    "start": "160400",
    "end": "166599"
  },
  {
    "text": "addition to finance and so I've been building this tool to kind of be the ultimate data tool for python um a lot",
    "start": "166599",
    "end": "173080"
  },
  {
    "text": "of people who've used R and now use um have started using pandis and now can do all their work in Python which I think",
    "start": "173080",
    "end": "179200"
  },
  {
    "text": "is really great so I get a lot of people which say you know you saved me it's like I was having to switch between I was doing my data data munging in",
    "start": "179200",
    "end": "185920"
  },
  {
    "text": "pythons and then feeding it into R and then doing the work in R and now they can do all that work in Python so um a",
    "start": "185920",
    "end": "191959"
  },
  {
    "text": "lot of very happy people out there um certainly has made a big difference in um in my work so I uh so so development",
    "start": "191959",
    "end": "201879"
  },
  {
    "text": "had kind of stagnated a little bit um but I I picked it up and have been working on it basically full-time since",
    "start": "201879",
    "end": "207440"
  },
  {
    "text": "about last May and so you know turns out that you can get a lot of work done when you focus on one thing and do nothing",
    "start": "207440",
    "end": "213959"
  },
  {
    "text": "else for about eight months um so and so there's been a huge amount of growth um and that's going to continue uh continue",
    "start": "213959",
    "end": "220519"
  },
  {
    "text": "upward trajectory throughout this year so I actually looked and the code base is it was already a pretty big code base",
    "start": "220519",
    "end": "225920"
  },
  {
    "text": "but it's tripled in size in in in nine months um which is pretty you know amazes even me um and so I I've started",
    "start": "225920",
    "end": "234319"
  },
  {
    "text": "I've started a company it's called called Lambda Foundry so if you're a knight of the Lambda calculus and perhaps you you like the",
    "start": "234319",
    "end": "240519"
  },
  {
    "text": "um but we are building a uh uh so we are supporting pandis development and also",
    "start": "240519",
    "end": "246239"
  },
  {
    "text": "uh starting to build a product a product ecosystem for Quant Finance um so I find that you know quants out there a lot of",
    "start": "246239",
    "end": "253079"
  },
  {
    "text": "them are programming are in mat lab they're they're underserved by the tools that they have um and there's not a lot",
    "start": "253079",
    "end": "259519"
  },
  {
    "text": "of infrastructural support for for that problem domain a lot of Home brw systems a lot of In-House development um and uh",
    "start": "259519",
    "end": "267000"
  },
  {
    "text": "the result is that you know those kinds of users just aren't as productive as they could be you've got these incredibly smart people many of them",
    "start": "267000",
    "end": "273160"
  },
  {
    "text": "with backgrounds and um you know got got phds and uh you know physics or or",
    "start": "273160",
    "end": "278600"
  },
  {
    "text": "economics or Finance you know they're doing modeling they're doing research but they struggle with the tools and you spend 50 to 80% of your time just doing",
    "start": "278600",
    "end": "285360"
  },
  {
    "text": "really basic uh basic development I I I find that really backwards um some other",
    "start": "285360",
    "end": "291320"
  },
  {
    "text": "projects that i' I'm involved in I'm also involved in stats models project which is um statistics in Python if",
    "start": "291320",
    "end": "297120"
  },
  {
    "text": "you're interested in doing more statistics in Python we need more developers on stats models um it's not",
    "start": "297120",
    "end": "302440"
  },
  {
    "text": "the it's not the sexiest uh development um out there um you know pyit learn",
    "start": "302440",
    "end": "307720"
  },
  {
    "text": "which is a machine learning library for python has a huge development team extremely active of course you know machine learning is like it's you know",
    "start": "307720",
    "end": "314160"
  },
  {
    "text": "it's kind of a kind of a sexy topic and and uh but also computer scientists understand the value of of building",
    "start": "314160",
    "end": "320240"
  },
  {
    "text": "reusable software which is kind of a a sense that's not as prevalent in in economics and econometrics which is what",
    "start": "320240",
    "end": "326759"
  },
  {
    "text": "more what stats models is more about um I'm also writing a book I just",
    "start": "326759",
    "end": "332160"
  },
  {
    "text": "literally got the cover today and uh they're going to change it from my legal name to being just Wes at the bottom um",
    "start": "332160",
    "end": "338560"
  },
  {
    "text": "but so I'm writing this book with with O'Reilly um called python for data analysis and the idea of the book is",
    "start": "338560",
    "end": "346280"
  },
  {
    "text": "basically to present a um sort of a nice introduction to all to all these tools",
    "start": "346280",
    "end": "351759"
  },
  {
    "text": "that we're that we're talking about today and but tailored for a user who is working with data working with",
    "start": "351759",
    "end": "357440"
  },
  {
    "text": "structured data Maybe has some R experience um and wants to um you know I got an email from somebody who said you know",
    "start": "357440",
    "end": "363880"
  },
  {
    "text": "I'm drowning in Python I've got some R experience I've got some SAS experience like I just you know where do I start",
    "start": "363880",
    "end": "368919"
  },
  {
    "text": "where where do I how do I learn about these tools and and uh you know become become productive um and so that's you",
    "start": "368919",
    "end": "374960"
  },
  {
    "text": "know I perceive that you really there's a need for that and so I you know on top of all the other things I'm trying to do",
    "start": "374960",
    "end": "380639"
  },
  {
    "text": "I'm trying to you know I am I am writing a book and it will be out later this year so it's going to be about the",
    "start": "380639",
    "end": "386759"
  },
  {
    "text": "fundamental tools in the in the tool chain I python um which I'll see more about num numpy matplot lib scipi a few",
    "start": "386759",
    "end": "394720"
  },
  {
    "text": "other uh a few other libraries that are in common use but a lot of the book is going to be um about pandis and focusing",
    "start": "394720",
    "end": "400759"
  },
  {
    "text": "on very practical and and uh very practical tools for uh for real world problems and looking at actual data and",
    "start": "400759",
    "end": "407960"
  },
  {
    "text": "going through case studies and showing how to how to synthesize all these tools um to to to solve your",
    "start": "407960",
    "end": "414720"
  },
  {
    "text": "problems um so so for the next uh hour and 15 minutes or so um I'm going to",
    "start": "414720",
    "end": "421720"
  },
  {
    "text": "give you an overview of an overview of pandis um explain the data model a",
    "start": "421720",
    "end": "427240"
  },
  {
    "text": "little bit like how it how it relates to numpy um and then basically jump into",
    "start": "427240",
    "end": "432840"
  },
  {
    "text": "the IPython notebook and any of you who can uh get it running on your laptop I",
    "start": "432840",
    "end": "437879"
  },
  {
    "text": "hope that's many of you um I'll post I will upload the uh the notebooks um I'll",
    "start": "437879",
    "end": "443280"
  },
  {
    "text": "create a little archive and put it in a Dropbox for you to download um and we can fire that up and start um actually",
    "start": "443280",
    "end": "449080"
  },
  {
    "text": "you know you can uh follow along with the examples U I think it's going to be mostly just me me showing you things",
    "start": "449080",
    "end": "454639"
  },
  {
    "text": "because I have a lot a lot to cover um so so cover some of the the basic you",
    "start": "454639",
    "end": "460280"
  },
  {
    "text": "know getting data in and out you know from Flat files from Json object so if you work a lot with web data um how to",
    "start": "460280",
    "end": "466039"
  },
  {
    "text": "you know basically if you've got a bunch of Json objects you want to load that into tables that you can then you know crunch that data and analyze and create",
    "start": "466039",
    "end": "472360"
  },
  {
    "text": "summary statistics how you can do that how you can uh do an example showing you how you can get take data out of a",
    "start": "472360",
    "end": "478240"
  },
  {
    "text": "database and put it into a data frame U explain how label-based indexing Works which is something that's not really",
    "start": "478240",
    "end": "483800"
  },
  {
    "text": "present in numpy um showing you how that can integrate into um into to data",
    "start": "483800",
    "end": "490560"
  },
  {
    "text": "alignment which is a big part of a big part of pandas um talk about descriptive",
    "start": "490560",
    "end": "495800"
  },
  {
    "text": "statistics and missing data and how that's implemented how you can apply functions to your data in an intuitive",
    "start": "495800",
    "end": "500960"
  },
  {
    "text": "way um talk about um sort of database like joint operations uh and",
    "start": "500960",
    "end": "506199"
  },
  {
    "text": "concatenating data together uh talk about group so if you're familiar with SQL you've ever written a SQL expression",
    "start": "506199",
    "end": "513240"
  },
  {
    "text": "with something with group ey where you're aggregating or transforming data sets how that looks uh in pandis it's",
    "start": "513240",
    "end": "519399"
  },
  {
    "text": "it's it's a big missing feature from uh from numpy and I'm excited to see um you",
    "start": "519399",
    "end": "525240"
  },
  {
    "text": "know I think could take the take the group the sort of the groupy engine that I built inside pandis and use it for for",
    "start": "525240",
    "end": "530640"
  },
  {
    "text": "numpy arrays but as you'll see that doing groupy without uh without lab without labeling especially without",
    "start": "530640",
    "end": "536519"
  },
  {
    "text": "hierarchical indexing which I'll explain more about um um the interpreting the result of a groupy expression is hard",
    "start": "536519",
    "end": "542519"
  },
  {
    "text": "without that richer data structure um I'll talk about how how the",
    "start": "542519",
    "end": "547920"
  },
  {
    "text": "indexing and and groupy relates to reshape operations and forming pivot tables so how many of you have ever",
    "start": "547920",
    "end": "554160"
  },
  {
    "text": "created a pivot table in Excel or another spreadsheet open Office okay so",
    "start": "554160",
    "end": "559560"
  },
  {
    "text": "I'll explain uh a little bit what uh what that's about and what that looks like um time series I'm not going to",
    "start": "559560",
    "end": "566200"
  },
  {
    "text": "talk about if you're interested in Time series uh what I've got a advanced",
    "start": "566200",
    "end": "571279"
  },
  {
    "text": "topics later today and that will be all about All About Time series so I'm going to admit that from from the discussion",
    "start": "571279",
    "end": "577880"
  },
  {
    "text": "here um it's going to be using the the IPython HTM HTML notebook uh during the",
    "start": "577880",
    "end": "584279"
  },
  {
    "text": "latter latter portion here so um so the pandis data model um",
    "start": "584279",
    "end": "592120"
  },
  {
    "text": "so there are two there are two major objects the first is is the series which is just a one-dimensional labeled array",
    "start": "592120",
    "end": "599720"
  },
  {
    "text": "so it's a numpy array plus an array of labels and I'll explain what the labels can be um really the short story is that",
    "start": "599720",
    "end": "606560"
  },
  {
    "text": "they can be anything um but they can't be uh they just can't be mutable because",
    "start": "606560",
    "end": "611839"
  },
  {
    "text": "um they're used for for lookups so it has to be anything that you can put in a python dict um the second major object",
    "start": "611839",
    "end": "618440"
  },
  {
    "text": "is the data frame so if any of you have used R before uh you I took the name lifted the name directly from R it's a",
    "start": "618440",
    "end": "626360"
  },
  {
    "text": "data frame is is an indexed collection of series object object so you have a table of uh a table of columns you have",
    "start": "626360",
    "end": "633440"
  },
  {
    "text": "row and column labels The Columns can be different types um so it's it's it's if",
    "start": "633440",
    "end": "639399"
  },
  {
    "text": "you've used structured arrays in numpy uh it's very similar to a structured array except it has a number of",
    "start": "639399",
    "end": "644760"
  },
  {
    "text": "additional featur so you can add and delete columns very easily which is not not possible in a structured array without creating new arrays so the",
    "start": "644760",
    "end": "651639"
  },
  {
    "text": "series object um now the reason it's called series I guess uh for lack of a",
    "start": "651639",
    "end": "657200"
  },
  {
    "text": "better name you could call it a labeled array or I guess you have series and time series A Time series is a series that has dates",
    "start": "657200",
    "end": "663279"
  },
  {
    "text": "as the index um so you have you have an array of values and you have an Associated array of labels so here it's",
    "start": "663279",
    "end": "669720"
  },
  {
    "text": "just the strings a through e um the data in the in in the array could be any any",
    "start": "669720",
    "end": "676360"
  },
  {
    "text": "data that you can store in an numpy array so fits very n so if you use numpy it fits very naturally with you know",
    "start": "676360",
    "end": "682120"
  },
  {
    "text": "mental model of data um the index labels they don't need to be order you can have duplicates um but there are many",
    "start": "682120",
    "end": "688519"
  },
  {
    "text": "operations which will refuse to work if you have duplicates so if you try to look up the value at C and it turns out",
    "start": "688519",
    "end": "695320"
  },
  {
    "text": "that the um the index has duplicates then it will throw an exception because it's not a onetoone mapping so a little",
    "start": "695320",
    "end": "700959"
  },
  {
    "text": "bit more on that later um but most most of the time when people use index data in pandis it's always a a unique a",
    "start": "700959",
    "end": "707639"
  },
  {
    "text": "unique labeling um and that's how it's designed to work",
    "start": "707639",
    "end": "713279"
  },
  {
    "text": "um so the data frame uh is going you know adding a dimension so uh um so now",
    "start": "713279",
    "end": "720000"
  },
  {
    "text": "you have you have column labels and row labels um and so here I have columns Fubar Bas cooks and um here I've got a",
    "start": "720000",
    "end": "729399"
  },
  {
    "text": "got four columns they can be they can be floating point they can be strings they can be booleans",
    "start": "729399",
    "end": "736199"
  },
  {
    "text": "um but the the important thing about data frame is it's it's sort of it's the it's the primary container for working",
    "start": "736199",
    "end": "741480"
  },
  {
    "text": "with data in pandas so you can you can very easy if you are carrying out an analysis and you compute additional",
    "start": "741480",
    "end": "748120"
  },
  {
    "text": "columns you can add them into it like a dictionary so it works it's intended to work just like a python dict where the",
    "start": "748120",
    "end": "754120"
  },
  {
    "text": "keys are where the keys are the column labels and the values are are the columns as as one-dimensional arrays um",
    "start": "754120",
    "end": "762000"
  },
  {
    "text": "and so it can it works well with if you have only homogeneous data so if you just have a collection of floating Point",
    "start": "762000",
    "end": "767440"
  },
  {
    "text": "data uh it is very fast with that supports very fast row both row oriented",
    "start": "767440",
    "end": "772600"
  },
  {
    "text": "and colum oriented operations um but you can also have something that's completely heterogeneous or each column",
    "start": "772600",
    "end": "778279"
  },
  {
    "text": "as as different as different type um so that so the story with the",
    "start": "778279",
    "end": "784440"
  },
  {
    "text": "axis indexes so here you know data frame we've got you've got we've got a row index which is called called the index",
    "start": "784440",
    "end": "791720"
  },
  {
    "text": "and and the column and the column index which is the columns so if you I'll show you in the in the notebook um so",
    "start": "791720",
    "end": "798760"
  },
  {
    "text": "basically these are these contain u are are used to to do the lookups so if you",
    "start": "798760",
    "end": "804240"
  },
  {
    "text": "want to select out a row or select out a column uh it all goes through goes through the index but there they're the",
    "start": "804240",
    "end": "809680"
  },
  {
    "text": "core data structure which is used to do data alignment and to implement joint operations",
    "start": "809680",
    "end": "816240"
  },
  {
    "text": "um so one nice thing about them is because the um because this index is is its own",
    "start": "816240",
    "end": "823320"
  },
  {
    "text": "little data structure we can do something more sophisticated we can have hierarchical indexing uh which means",
    "start": "823320",
    "end": "828839"
  },
  {
    "text": "that uh so the semantics are you can imagine having um an array of labels but",
    "start": "828839",
    "end": "834440"
  },
  {
    "text": "each of the elements is tupal but suppose that you wanted to select out a group based on the first Tuple so the",
    "start": "834440",
    "end": "840440"
  },
  {
    "text": "naive way to implement that would be to make a linear scan through uh to make a linear scan through the tupol and then",
    "start": "840440",
    "end": "846800"
  },
  {
    "text": "match on the first element of each Tuple and then select out those rows um based",
    "start": "846800",
    "end": "851920"
  },
  {
    "text": "on based on the first element but if you had a very large data set suppose you had you know a million rows or five",
    "start": "851920",
    "end": "857360"
  },
  {
    "text": "million rows um that would be you know you'd have to make a full sweep through uh the index through you know through",
    "start": "857360",
    "end": "863880"
  },
  {
    "text": "the labels in order to to select out that data so you can imagine that the having a big performance bottleneck",
    "start": "863880",
    "end": "870199"
  },
  {
    "text": "there so the so having a proper data structure that uh that that represents",
    "start": "870199",
    "end": "875519"
  },
  {
    "text": "you know the multiple levels of indexing allows you to do a very fast um you know login lookup of a group and SLI and",
    "start": "875519",
    "end": "881959"
  },
  {
    "text": "select out a a view on the data without copying any data um so so so it's",
    "start": "881959",
    "end": "888040"
  },
  {
    "text": "designed in order to enable you to work with very large data sets uh to reduce copying you know s blowing you know",
    "start": "888040",
    "end": "895199"
  },
  {
    "text": "there are lots of situations where you could be working with gigabytes of data and memory and you you want to be able to work with groups of the data uh",
    "start": "895199",
    "end": "901720"
  },
  {
    "text": "without running into memory problems and so this is one mechanism that really helps a lot with that and I'll explain",
    "start": "901720",
    "end": "907000"
  },
  {
    "text": "how this relates to uh to to groupy operations and reshape",
    "start": "907000",
    "end": "913120"
  },
  {
    "text": "operations um so data alignment so the reason that so the",
    "start": "913120",
    "end": "918800"
  },
  {
    "text": "reason the indexes are there in the first place is that you work with so you work with a lot of data",
    "start": "918800",
    "end": "925240"
  },
  {
    "text": "where you've got you've got labels for it um so in in a relational in a in a",
    "start": "925240",
    "end": "930480"
  },
  {
    "text": "database table you might have this might be your primary key which might be um you know you might have a couple columns",
    "start": "930480",
    "end": "937399"
  },
  {
    "text": "which uniquely identify each observation and that information is intended to be expressed in the index um but you might",
    "start": "937399",
    "end": "944120"
  },
  {
    "text": "have multiple collections of data that are indexed differently and it's a it's a lot of it you know creates a lot of",
    "start": "944120",
    "end": "949600"
  },
  {
    "text": "problems if you've got two different data sets they're indexed slightly differently you want to be able to combine them together without having to write a lot of code so that's that's",
    "start": "949600",
    "end": "956759"
  },
  {
    "text": "really what uh what data alignment is all about um and when you add if you're",
    "start": "956759",
    "end": "962120"
  },
  {
    "text": "doing doing arithmetic between data sets so you can imagine if you're working with two time series",
    "start": "962120",
    "end": "968319"
  },
  {
    "text": "um so you here we have two series objects one which is labeled B through e and another which is labeled a through D",
    "start": "968319",
    "end": "975399"
  },
  {
    "text": "so when you add these two together you say I want to add the values which I want to add each value labeled B",
    "start": "975399",
    "end": "981160"
  },
  {
    "text": "together each value labeled C together but then you've got some labels which are in one but not in the other so when you add them together you're not really",
    "start": "981160",
    "end": "987240"
  },
  {
    "text": "doing an an array ad really doing a join between the objects so so behind the",
    "start": "987240",
    "end": "993360"
  },
  {
    "text": "scenes when you add these two differently indexed series together it's really doing a join B so that you the in",
    "start": "993360",
    "end": "1000120"
  },
  {
    "text": "the result object you get the union of the labels and then any place where there was a mismatch you get um you get",
    "start": "1000120",
    "end": "1006560"
  },
  {
    "text": "an NA so you have you have a missing value in the result and then once you've done that you know the missing values",
    "start": "1006560",
    "end": "1011680"
  },
  {
    "text": "are meaningful like you want to know that this you know this label was missing in one of the objects and then",
    "start": "1011680",
    "end": "1017519"
  },
  {
    "text": "you can drop you can choose after this point you know I want to just drop out all of the labels where there was a",
    "start": "1017519",
    "end": "1023319"
  },
  {
    "text": "there was an NA so um so in the case of in the case of a",
    "start": "1023319",
    "end": "1029400"
  },
  {
    "text": "data frame so here I have um so here I have I have one data frame here another",
    "start": "1029400",
    "end": "1035600"
  },
  {
    "text": "data frame here you can see that the C column is missing from this one the row labels are different and when I add them",
    "start": "1035600",
    "end": "1042240"
  },
  {
    "text": "together it does an outer join both on the row index and on the column index so",
    "start": "1042240",
    "end": "1047600"
  },
  {
    "text": "you know you do get a bunch of um you get a bunch of Naas in the in the result and you anyone anyone who's",
    "start": "1047600",
    "end": "1053559"
  },
  {
    "text": "really interested in talking a lot about you know how how missing data is handle is sort of outside of the the scope of",
    "start": "1053559",
    "end": "1059360"
  },
  {
    "text": "this talk but you get an outer joint in the result and then you can decide you know if you want to fill the nas with some value or you want to drop them out",
    "start": "1059360",
    "end": "1066280"
  },
  {
    "text": "um so you have tools to to then clean up the clean up the missing data in how whichever way that uh you want in",
    "start": "1066280",
    "end": "1073240"
  },
  {
    "text": "practice it's very common to get data that looks like this so it's kind of a little mockup of um you have a bunch of",
    "start": "1073240",
    "end": "1079360"
  },
  {
    "text": "data it's differently indexed and you just want to throw it all into a table um and uh you want all you want it to",
    "start": "1079360",
    "end": "1086919"
  },
  {
    "text": "take the the union of all the indexes represented by each of the columns um",
    "start": "1086919",
    "end": "1091960"
  },
  {
    "text": "and create this um uniformly index structure that you can then you can then",
    "start": "1091960",
    "end": "1097080"
  },
  {
    "text": "clean up and uh start to you know perform computations on and actually carry out your analysis um and I've you",
    "start": "1097080",
    "end": "1104080"
  },
  {
    "text": "know I used I've used R and I've used mat lab worked with a lot of things I",
    "start": "1104080",
    "end": "1109400"
  },
  {
    "text": "you know I see this problem occurring over and over again where you have outputs of analysis where things are um",
    "start": "1109400",
    "end": "1116200"
  },
  {
    "text": "things are not homogeneous things are things are messy things are not homogeneously indexed and you just want",
    "start": "1116200",
    "end": "1122799"
  },
  {
    "text": "you know you don't want it to the tool to get in your way you just want to say you know throw this all into a table Union Union all of the the labels",
    "start": "1122799",
    "end": "1128840"
  },
  {
    "text": "together and then let me decide what to do with it once you're done so it's it turns out that even R makes this",
    "start": "1128840",
    "end": "1134640"
  },
  {
    "text": "difficult you know it shocks me that it's difficult um",
    "start": "1134640",
    "end": "1140080"
  },
  {
    "text": "so um so as I was saying the axes themselves um so this is a case of where",
    "start": "1140080",
    "end": "1146200"
  },
  {
    "text": "we've got um got a hierarchical index so this is a data frame with five columns we've got years and the columns and the",
    "start": "1146200",
    "end": "1154400"
  },
  {
    "text": "uh and the rows are now hierarchical index where here uh I've got a country name and an age um and everything in the",
    "start": "1154400",
    "end": "1162440"
  },
  {
    "text": "First Column is is Australia and then we've got a bunch of Ages here um but",
    "start": "1162440",
    "end": "1168840"
  },
  {
    "text": "the important thing is that you know that everything is sort of contained in the index and so it's separ and the index is separate from the data um and",
    "start": "1168840",
    "end": "1176000"
  },
  {
    "text": "we can use we can use this labeling information to perform Transformations and to reshape the data into into the",
    "start": "1176000",
    "end": "1182760"
  },
  {
    "text": "form that we need it you can see that I I stole this slide from another talk that I gave um so so when you're doing",
    "start": "1182760",
    "end": "1191400"
  },
  {
    "text": "reshaping so let's go back and look at this um look at this object so here this",
    "start": "1191400",
    "end": "1198320"
  },
  {
    "text": "data frame really each value here is identified by three things so there's a",
    "start": "1198320",
    "end": "1203440"
  },
  {
    "text": "country name and there's an age and there's a year suppose we wanted to to rearrange this data in a different way",
    "start": "1203440",
    "end": "1209799"
  },
  {
    "text": "we might want to say put put the ages up here and put the years back down here",
    "start": "1209799",
    "end": "1215320"
  },
  {
    "text": "and so given that each each value is identified by those three things that's a very well- defined operation you can",
    "start": "1215320",
    "end": "1220400"
  },
  {
    "text": "just you know you can you can see so like oh just move age up here year down here and then put all the values in the",
    "start": "1220400",
    "end": "1226039"
  },
  {
    "text": "right place so how suppose you had data like this I mean how would that look um so so the two",
    "start": "1226039",
    "end": "1233400"
  },
  {
    "text": "operations um for doing that so I wanted to kind of explain them in a high level way before I start you know um firing",
    "start": "1233400",
    "end": "1240760"
  },
  {
    "text": "firing code away at you um so here's a slightly bigger data set here I've got",
    "start": "1240760",
    "end": "1246400"
  },
  {
    "text": "um got multiple groups I've got two countries Australia and Austria and I've only got five ages here and so you can",
    "start": "1246400",
    "end": "1253320"
  },
  {
    "text": "imagine we wanted if we wanted to switch age from with year um",
    "start": "1253320",
    "end": "1260600"
  },
  {
    "text": "so so the two operations for doing that so the so so pivoting up is called",
    "start": "1260840",
    "end": "1266159"
  },
  {
    "text": "unstack so you can imagine if we unstacked age from that would pivot up unstack and then we could take year and",
    "start": "1266159",
    "end": "1272640"
  },
  {
    "text": "pivot that down and that's the stack operation and so I'll show you how this works so if we said data frame unstack",
    "start": "1272640",
    "end": "1280279"
  },
  {
    "text": "age from stack year you can see it switches the place of of year and age",
    "start": "1280279",
    "end": "1285799"
  },
  {
    "text": "from and so that's how you know um a reshaping operation with indexing would",
    "start": "1285799",
    "end": "1291520"
  },
  {
    "text": "work in pandas so we'll see see some more of that um so as far as missing",
    "start": "1291520",
    "end": "1297919"
  },
  {
    "text": "data I guess I'll Bas mainly show this through examples um so I've augmented the um the num numpy has a couple of",
    "start": "1297919",
    "end": "1306360"
  },
  {
    "text": "functions which help for detecting special values uh and floating Point data I use the not a number value as as",
    "start": "1306360",
    "end": "1312440"
  },
  {
    "text": "a missing data marker which occasionally makes people upset but it's really the best the best solution that I've got and",
    "start": "1312440",
    "end": "1318679"
  },
  {
    "text": "we can you know if you're really interested in missing data issues and null handling we can talk a lot more about it because it's a problem that",
    "start": "1318679",
    "end": "1324720"
  },
  {
    "text": "I've been dealing with for a long time um so I've got API functions in pandis is null and not null and they're the",
    "start": "1324720",
    "end": "1331000"
  },
  {
    "text": "basic tools for detecting missing data and for producing a bullan array that you can use to um um that you can use to",
    "start": "1331000",
    "end": "1338880"
  },
  {
    "text": "to select out or to exclude missing data from uh from from pandis",
    "start": "1338880",
    "end": "1344120"
  },
  {
    "text": "objects um one one gotcha of of of the na of the missing missing data",
    "start": "1344120",
    "end": "1350120"
  },
  {
    "text": "implementation in pandis is you can't have Nas in integer arrays and uh this",
    "start": "1350120",
    "end": "1355360"
  },
  {
    "text": "is sort of an an unfortunate implementation detail that occasionally um jumps up and uh you know I I get",
    "start": "1355360",
    "end": "1361840"
  },
  {
    "text": "emails about it maybe a couple times a month and uh it's peculiar to um to to",
    "start": "1361840",
    "end": "1368279"
  },
  {
    "text": "to numpy and sort of you know the uh the various options for implementing missing data so it's big it's a big topic and",
    "start": "1368279",
    "end": "1375200"
  },
  {
    "text": "you know there was yeah I won't go into it",
    "start": "1375200",
    "end": "1380400"
  },
  {
    "text": "um so talk a little bit about group ey at a high level again before we start you know uh jumping into code so so how",
    "start": "1380400",
    "end": "1388039"
  },
  {
    "text": "so how many of you I guess have done some form of of group bu either in SQL or some other",
    "start": "1388039",
    "end": "1394279"
  },
  {
    "text": "tool okay so so the general idea is that you've got you've got some data and",
    "start": "1394279",
    "end": "1400120"
  },
  {
    "text": "you've got some labeling information for it and you want to so here's an example where we had an array with labels ABC",
    "start": "1400120",
    "end": "1407120"
  },
  {
    "text": "and so behind the scenes you know well the I mean the implementation is you know you're not you're not really very concerned about that um but so it's so",
    "start": "1407120",
    "end": "1415320"
  },
  {
    "text": "it splits the data into groups based on the labels and then you just you want to apply some function to the data in each",
    "start": "1415320",
    "end": "1420799"
  },
  {
    "text": "group so here in this case uh apply the sum function um to each of these groups",
    "start": "1420799",
    "end": "1426000"
  },
  {
    "text": "producing um the summed value for the a group and the B group and the C group um",
    "start": "1426000",
    "end": "1431520"
  },
  {
    "text": "so you can imagine you know having an array of labels a you know a like this and an array of data and you just say I",
    "start": "1431520",
    "end": "1438120"
  },
  {
    "text": "want a group this data by the labels and apply the sum function you get out a new object which has the values aggregated",
    "start": "1438120",
    "end": "1444159"
  },
  {
    "text": "and then the labeling for the result is then the unique the unique labels in the",
    "start": "1444159",
    "end": "1449559"
  },
  {
    "text": "original label array um and so you can imagine if you instead had two two rays",
    "start": "1449559",
    "end": "1455559"
  },
  {
    "text": "of labels um then you know suppose why I don't have them here but you could",
    "start": "1455559",
    "end": "1461840"
  },
  {
    "text": "imagine I could have an array of ones and zeros and uh then there are actually six possible combinations uh in the",
    "start": "1461840",
    "end": "1468159"
  },
  {
    "text": "result result so the uh so the result of the group by operation could be up to six elements long depending on how many",
    "start": "1468159",
    "end": "1475880"
  },
  {
    "text": "uh how many combinations you observed in the data so you can I guess you can begin to see how how hierarchical",
    "start": "1475880",
    "end": "1482200"
  },
  {
    "text": "indexing kind of falls out of group by so if you have multiple levels of so if you have multiple layers of identifiers",
    "start": "1482200",
    "end": "1488039"
  },
  {
    "text": "you do a group ey expression then the result is going to be um is going to be labeled by the unique combinations of",
    "start": "1488039",
    "end": "1494880"
  },
  {
    "text": "values in the labels um um so there are many ways that",
    "start": "1494880",
    "end": "1500559"
  },
  {
    "text": "you can that you can split data into groups so a very common uh you know if",
    "start": "1500559",
    "end": "1506840"
  },
  {
    "text": "you've used SQL before the most common case is that you have a table and some of the some of the columns of the table",
    "start": "1506840",
    "end": "1512840"
  },
  {
    "text": "serve as the keys that you want to aggregate on so you might say Group by column a column B aggregate value C so",
    "start": "1512840",
    "end": "1520360"
  },
  {
    "text": "those colum so those that those grouping information might already be columns in the data frame um you might have",
    "start": "1520360",
    "end": "1527240"
  },
  {
    "text": "external array arrays I say I have this object I want you know I have this external uh array of labels and I want",
    "start": "1527240",
    "end": "1533640"
  },
  {
    "text": "to split that up into groups um and then apply some function to each group um and",
    "start": "1533640",
    "end": "1539279"
  },
  {
    "text": "of course you know the question is where does where do the groups come from so you know we're python we've got functions we can pass functions into we",
    "start": "1539279",
    "end": "1546600"
  },
  {
    "text": "can use uh we can use functions as objects so uh you you can you can Define",
    "start": "1546600",
    "end": "1552039"
  },
  {
    "text": "custom functions which uh which can produce the group label um kind of in a",
    "start": "1552039",
    "end": "1557559"
  },
  {
    "text": "in a very flexible away so I've seen a number of different you know group ey",
    "start": "1557559",
    "end": "1562880"
  },
  {
    "text": "implementations if you've used R you've ever used the plier package um that's got some has has some ways to to Define",
    "start": "1562880",
    "end": "1570720"
  },
  {
    "text": "custom groupings but it's a very flexible way of uh you know you've got you've already got this object with",
    "start": "1570720",
    "end": "1576440"
  },
  {
    "text": "labeling information and you might want to take the labels and then produce a group label out of that and that's a",
    "start": "1576440",
    "end": "1582360"
  },
  {
    "text": "pretty flexible way um to group data so we'll see see much more of that",
    "start": "1582360",
    "end": "1590200"
  },
  {
    "text": "um so like I was saying about about hierarchical indexing um and I've got",
    "start": "1590200",
    "end": "1596480"
  },
  {
    "text": "this example in in the in the notebook we can take a take a look at so here was a data set where um I had a data frame",
    "start": "1596480",
    "end": "1602960"
  },
  {
    "text": "with the country it's again the same data set that I showed you before so I figure why not uh go ahead",
    "start": "1602960",
    "end": "1609640"
  },
  {
    "text": "and just just show you this in the live demo yeah so so I'll explain what we're looking at here so",
    "start": "1609640",
    "end": "1616080"
  },
  {
    "text": "um are you familiar with IPython who's well who is not familiar with IPython",
    "start": "1616080",
    "end": "1621200"
  },
  {
    "text": "okay so okay so IPython is is a is an enhanced interactive python shell so it",
    "start": "1621200",
    "end": "1627520"
  },
  {
    "text": "has tab completion it has it you know has good integration with the system shell um it has an interactive",
    "start": "1627520",
    "end": "1634080"
  },
  {
    "text": "debugger um it's uh you know basically it's you know it's sort of like the the",
    "start": "1634080",
    "end": "1639720"
  },
  {
    "text": "uh the code running sort of iterative development environment that is you know most I guess most people in Scientific",
    "start": "1639720",
    "end": "1644919"
  },
  {
    "text": "Python use every I use it every day you know it's like where I develop python code um now the IPython notebook",
    "start": "1644919",
    "end": "1651679"
  },
  {
    "text": "is you can see it's running in a web browser um so what's going on here is that you are connected to a an IPython",
    "start": "1651679",
    "end": "1659840"
  },
  {
    "text": "shell running on in the system and you have editable code cells so here in this",
    "start": "1659840",
    "end": "1666240"
  },
  {
    "text": "um you see mine looks a little different from from yours because this it's the bleeding edge version but the the",
    "start": "1666240",
    "end": "1671760"
  },
  {
    "text": "functionality is is uh is virtually identical so the idea is you have editable code code cells where see here",
    "start": "1671760",
    "end": "1678320"
  },
  {
    "text": "I have I have from pandas import Star and so in that cell basically you press",
    "start": "1678320",
    "end": "1684640"
  },
  {
    "text": "shift enter and what it does is it sends that code to the kernel runs it if there's any output see if I had done",
    "start": "1684640",
    "end": "1690600"
  },
  {
    "text": "print five then it uh it captures that output and it displays it in the in the",
    "start": "1690600",
    "end": "1697159"
  },
  {
    "text": "browser um if I had done um if I put a plot in here so if suppose I did plot a",
    "start": "1697159",
    "end": "1704880"
  },
  {
    "text": "range 10 um so that's a map plot Li command it",
    "start": "1704880",
    "end": "1709919"
  },
  {
    "text": "captures the um it captures the plot and then it it renders it and outputs it in the in the notebook so um it could be",
    "start": "1709919",
    "end": "1717519"
  },
  {
    "text": "arbitrarily complicated and we'll do some slightly more complicated plots but if you've used Mathematica before it's",
    "start": "1717519",
    "end": "1722559"
  },
  {
    "text": "just like the mathematica notebook um and it's designed to be very pythonic and you know give you a nice uh nice way",
    "start": "1722559",
    "end": "1729720"
  },
  {
    "text": "to sort of go through like a an analysis workflow um so I've got a I've got a",
    "start": "1729720",
    "end": "1736720"
  },
  {
    "text": "data set here uh it's been used in a number of other you know statistical Graphics uh you know talks that I've",
    "start": "1736720",
    "end": "1742320"
  },
  {
    "text": "seen um it's the uh baby names data um so it's the top 1,000 baby names uh",
    "start": "1742320",
    "end": "1749159"
  },
  {
    "text": "since 1880 in the United States um so I thought it's a kind of interesting data",
    "start": "1749159",
    "end": "1754200"
  },
  {
    "text": "set to look at um so so to get that so to get that",
    "start": "1754200",
    "end": "1759240"
  },
  {
    "text": "data uh into into the notebook here I've got a a so first of all you need to run",
    "start": "1759240",
    "end": "1766399"
  },
  {
    "text": "the uh the first the first cell which has the import import pandas so we see",
    "start": "1766399",
    "end": "1772320"
  },
  {
    "text": "here so shift enter runs that don't worry about the about the plot so I just shift enter runs that cell um sets",
    "start": "1772320",
    "end": "1780679"
  },
  {
    "text": "things up and then I'm going to load the baby names to. CSV file which I hope to",
    "start": "1780679",
    "end": "1787159"
  },
  {
    "text": "God I put in the archive um and so you see that that ran that it",
    "start": "1787159",
    "end": "1793120"
  },
  {
    "text": "says um it will say busy someplace on your on your notebook um and then if you",
    "start": "1793120",
    "end": "1799159"
  },
  {
    "text": "if you press well there's a command key I think it's contrl MB creates a new cell so that's how I did that um but so",
    "start": "1799159",
    "end": "1807159"
  },
  {
    "text": "you can just we'll just edit this cell and type names and you can see what uh",
    "start": "1807159",
    "end": "1812480"
  },
  {
    "text": "what's happened here is it's loaded the data into a panda data frame object um",
    "start": "1812480",
    "end": "1818760"
  },
  {
    "text": "which tells you data column so year name proportion sex sound X um it tells me",
    "start": "1818760",
    "end": "1825399"
  },
  {
    "text": "the index contains the integers from zero to 2 20 250 so it's 258,000 um",
    "start": "1825399",
    "end": "1833240"
  },
  {
    "text": "elements long um and so now the way that this data structure works is it's like a",
    "start": "1833240",
    "end": "1838399"
  },
  {
    "text": "dictionary so if we want the year column we just do name subear um and it gives me uh gives me an",
    "start": "1838399",
    "end": "1846960"
  },
  {
    "text": "array this is now a series object and you can see that um on the left we've got the the row number which is just the",
    "start": "1846960",
    "end": "1853159"
  },
  {
    "text": "observation number in the data set and then the values go from go from 18 80",
    "start": "1853159",
    "end": "1858360"
  },
  {
    "text": "through 2008 so it looks like the data is already in order",
    "start": "1858360",
    "end": "1863480"
  },
  {
    "text": "so um so we look at so we look at the full",
    "start": "1863480",
    "end": "1870600"
  },
  {
    "text": "data set um so it's got so now what I'm going to",
    "start": "1870600",
    "end": "1877840"
  },
  {
    "text": "do here so you can get you get the year column name subear name sub sex you get",
    "start": "1877840",
    "end": "1883919"
  },
  {
    "text": "the sex column um so you can look at the data like look at the data like that if you look at the um you look at the",
    "start": "1883919",
    "end": "1890679"
  },
  {
    "text": "proportion column it's got uh it has floating Point values so this is actually really big data set I mean you",
    "start": "1890679",
    "end": "1896880"
  },
  {
    "text": "a quarter of a million observations is pretty big um so if I do colon 100 do",
    "start": "1896880",
    "end": "1902200"
  },
  {
    "text": "subon 100 so slice slice off the first 100 elements whatever those are you can see that that gives me the first 100",
    "start": "1902200",
    "end": "1909480"
  },
  {
    "text": "rows of the data set um so now you can see you've got something that's much more you know pleasing to the eye uh you",
    "start": "1909480",
    "end": "1915679"
  },
  {
    "text": "can look at the data uh look at the data like that um so so we'll play around",
    "start": "1915679",
    "end": "1922120"
  },
  {
    "text": "with this this data for the next uh for the next 20 minutes or so",
    "start": "1922120",
    "end": "1928240"
  },
  {
    "text": "um so these um so when I do name sub sex",
    "start": "1928240",
    "end": "1933880"
  },
  {
    "text": "so suppose I just wanted to select out the boy names so I could say name sub sex equals equals boy and so that gives",
    "start": "1933880",
    "end": "1941080"
  },
  {
    "text": "me now a Boolean array and if I pass that to if I do",
    "start": "1941080",
    "end": "1948279"
  },
  {
    "text": "names sub and then Nam sub sex equals equals boy that selects out the the",
    "start": "1948279",
    "end": "1954039"
  },
  {
    "text": "section of the data set which has um which has the boy names so I'm going to",
    "start": "1954039",
    "end": "1960240"
  },
  {
    "text": "go ahead and assign that to the boy variable and going to do the same thing",
    "start": "1960240",
    "end": "1965760"
  },
  {
    "text": "and assign it to the girl's variable so names subex equals equals",
    "start": "1965760",
    "end": "1971760"
  },
  {
    "text": "girl and so now we've um now we split the data set into two pieces",
    "start": "1971760",
    "end": "1979799"
  },
  {
    "text": "um and so the idea with uh I'm just going to shut down tweet",
    "start": "1981760",
    "end": "1987960"
  },
  {
    "text": "deck otherwise we're going to keep getting Pi data retweets",
    "start": "1987960",
    "end": "1994320"
  },
  {
    "text": "um there we",
    "start": "1994880",
    "end": "1998240"
  },
  {
    "text": "go yes shift shift enter to uh execute cells",
    "start": "2002120",
    "end": "2008760"
  },
  {
    "text": "so so now from here suppose that we wanted to wanted to actually um to Index",
    "start": "2012799",
    "end": "2018600"
  },
  {
    "text": "this data set by um by the unique ident by the unique identifier so if we look",
    "start": "2018600",
    "end": "2024720"
  },
  {
    "text": "at um if we look at the boys data set so let's do colon 50 so get the first rows",
    "start": "2024720",
    "end": "2031880"
  },
  {
    "text": "so you can see that each each observation here is uniquely labeled by by year and name",
    "start": "2031880",
    "end": "2038679"
  },
  {
    "text": "so in some years some names aren't going to appear like later you know 2000 the names that people are giving their",
    "start": "2038679",
    "end": "2044320"
  },
  {
    "text": "children in 2008 are different from the names they were giving their children in 1880 as we're about to see um but if we",
    "start": "2044320",
    "end": "2052520"
  },
  {
    "text": "wanted to you know let's say iterate Through The Years you know if we do boys sub subear equals equals let's say",
    "start": "2052520",
    "end": "2061079"
  },
  {
    "text": "1956 and we select out all the boy names for for 1956 uh well we get a thousand",
    "start": "2061079",
    "end": "2069560"
  },
  {
    "text": "observations I'm going to print this guy and then I'm going2",
    "start": "2069560",
    "end": "2074638"
  },
  {
    "text": "string so that would just force it to Output everything to the console and so you can see here are all",
    "start": "2074639",
    "end": "2082679"
  },
  {
    "text": "the all the boy names from 1956 suppose we wanted to order looks like they're already ordered by uh by proportion in",
    "start": "2082679",
    "end": "2089679"
  },
  {
    "text": "descending order so you can see that Michael was the top boy name in 1956 uh we might want to um I'll show",
    "start": "2089679",
    "end": "2097440"
  },
  {
    "text": "you how we can reorder these you know how can do sort do sort operations um in a",
    "start": "2097440",
    "end": "2104760"
  },
  {
    "text": "second um so one so one way we could we could do manipulation of this data set is we could add add a level uh we could",
    "start": "2104760",
    "end": "2110760"
  },
  {
    "text": "add indexing so I can say boys set index pass the name and year",
    "start": "2110760",
    "end": "2117520"
  },
  {
    "text": "columns and that's going to create um so I execute that cell and that now creates",
    "start": "2117520",
    "end": "2123839"
  },
  {
    "text": "you can see that it's removed the name and year columns and now the data set um",
    "start": "2123839",
    "end": "2129240"
  },
  {
    "text": "is indexed by by name and year so if we do colon 100 now you can see that the",
    "start": "2129240",
    "end": "2135720"
  },
  {
    "text": "output is a little different so now the name and year have been moved down into the into the row index and we've just",
    "start": "2135720",
    "end": "2141079"
  },
  {
    "text": "got their proportion sex and sound X columns remaining so that if I do uh if",
    "start": "2141079",
    "end": "2147079"
  },
  {
    "text": "I grab the proportion column from that that I've got um I've got now a series",
    "start": "2147079",
    "end": "2153160"
  },
  {
    "text": "but it's got the it's got the indexing information connected to it um",
    "start": "2153160",
    "end": "2159640"
  },
  {
    "text": "and so so from there I mean the the reason that the the indexing is useful suppose that I wanted to select out all",
    "start": "2159640",
    "end": "2166319"
  },
  {
    "text": "of the data um basically all of the the proportion of children that were named a",
    "start": "2166319",
    "end": "2172400"
  },
  {
    "text": "particular name so you can see here I've indexed it by name and year and I",
    "start": "2172400",
    "end": "2178480"
  },
  {
    "text": "suppose I want to select out all the the West data so to do that well there are a",
    "start": "2178480",
    "end": "2184160"
  },
  {
    "text": "number of ways that you can select out data based on the row index so the most the most useful is the uh is the special",
    "start": "2184160",
    "end": "2191319"
  },
  {
    "text": "field so if we do IDF do that gives us a little object that enables us to to",
    "start": "2191319",
    "end": "2197480"
  },
  {
    "text": "index the rows and columns like um like an ND array so here I can do",
    "start": "2197480",
    "end": "2203760"
  },
  {
    "text": "the square bracket West and that selects out the the slice",
    "start": "2203760",
    "end": "2211640"
  },
  {
    "text": "of data um that uh that corresponds to the to the West group and that's a very",
    "start": "2211640",
    "end": "2217280"
  },
  {
    "text": "fast operation so it looks like that the West name um only made let's see I'm",
    "start": "2217280",
    "end": "2224640"
  },
  {
    "text": "actually not printing it all out",
    "start": "2224640",
    "end": "2230359"
  },
  {
    "text": "um so it looks like the West name only made it into the top 1,000 between you",
    "start": "2240800",
    "end": "2246040"
  },
  {
    "text": "know I guess the last year was 1972 which makes me a little bit sad but um",
    "start": "2246040",
    "end": "2251400"
  },
  {
    "text": "if we do a little more popular name like Peter uh you can see that you know the data goes all the way through you know",
    "start": "2251400",
    "end": "2257280"
  },
  {
    "text": "to 2008 um and you can see what's happened here",
    "start": "2257280",
    "end": "2262680"
  },
  {
    "text": "is when I selected out the Peter group that before we had something that was indexed by both name and year and it's",
    "start": "2262680",
    "end": "2268440"
  },
  {
    "text": "gone and dropped um dropped the name uh level from from the index so if I just",
    "start": "2268440",
    "end": "2274240"
  },
  {
    "text": "selected out the uh I've got this",
    "start": "2274240",
    "end": "2280640"
  },
  {
    "text": "is my keyboard has stopped responding to me what's going on",
    "start": "2286880",
    "end": "2292880"
  },
  {
    "text": "here so if we select out the proportion column that now gives us the proportions",
    "start": "2297359",
    "end": "2303800"
  },
  {
    "text": "for all the for Peter through all the years and then we could plot that if we do do",
    "start": "2303800",
    "end": "2309560"
  },
  {
    "text": "plot that gives you a a map plot Li plot which it gives you the incidence of you",
    "start": "2309560",
    "end": "2316200"
  },
  {
    "text": "know the proportion of babies named Peter over time so you can see you know peaked in the uh around 1960 and it's",
    "start": "2316200",
    "end": "2322520"
  },
  {
    "text": "been a steady decline so you know people aren't aren't uh aren't you know well",
    "start": "2322520",
    "end": "2327560"
  },
  {
    "text": "actually the story is more complicated than that so it's not just that people aren't naming their children Peter as",
    "start": "2327560",
    "end": "2332839"
  },
  {
    "text": "often as they were so",
    "start": "2332839",
    "end": "2338400"
  },
  {
    "text": "um so here's a so here's another another cell where I selected out the Travis",
    "start": "2339240",
    "end": "2344359"
  },
  {
    "text": "group and the Peter group so you can see who I'm interested in learning about their names uh so I select out Travis",
    "start": "2344359",
    "end": "2350359"
  },
  {
    "text": "the proportion I plot that Peter the proportion I plot that and so then you can see here's a plot of um well I need",
    "start": "2350359",
    "end": "2358160"
  },
  {
    "text": "a legend here so I'll do PLT doleen that's Matt poot Li P",
    "start": "2358160",
    "end": "2364319"
  },
  {
    "text": "plot oh that's not so great",
    "start": "2364319",
    "end": "2369359"
  },
  {
    "text": "uh label equals Travis I Thought this worked",
    "start": "2371280",
    "end": "2377000"
  },
  {
    "text": "yesterday label equals Peter and so you can see that you know people were really",
    "start": "2377000",
    "end": "2383920"
  },
  {
    "text": "enthusiastic about naming their children Travis around you know in the 1970s and 80s and then it's been a a steady",
    "start": "2383920",
    "end": "2389880"
  },
  {
    "text": "decline since there",
    "start": "2389880",
    "end": "2394960"
  },
  {
    "text": "um so so this kind of raises a question you know is do people really uh are",
    "start": "2395560",
    "end": "2402400"
  },
  {
    "text": "people really just not so you know happy about these names or is something different happening with people's you know baby naming Behavior so I so I",
    "start": "2402400",
    "end": "2410640"
  },
  {
    "text": "thought I would say okay how many unique names does it take to you know if you",
    "start": "2410640",
    "end": "2415839"
  },
  {
    "text": "take the top names that people are giving their children how many names does it take until you you reach 50% of",
    "start": "2415839",
    "end": "2421680"
  },
  {
    "text": "all the all the babies born so I so I looked at the data set I that would be an interesting to get that number um and",
    "start": "2421680",
    "end": "2430240"
  },
  {
    "text": "so you know I can walk you through the uh the code necessary to um to achieve",
    "start": "2430240",
    "end": "2437640"
  },
  {
    "text": "that so if we look at a data set so let's",
    "start": "2437640",
    "end": "2445319"
  },
  {
    "text": "uh let's take the boy names",
    "start": "2445319",
    "end": "2451839"
  },
  {
    "text": "um let's see",
    "start": "2455839",
    "end": "2459240"
  },
  {
    "text": "that's right that's right yeah yeah so I think it just it just connects the dot yeah really I guess you should uh what",
    "start": "2465400",
    "end": "2471800"
  },
  {
    "text": "you should really do is um if if there were none if there were none in a year I",
    "start": "2471800",
    "end": "2478319"
  },
  {
    "text": "guess really it doesn't it doesn't appear in the top 1,000 yeah but what you could do actually so if we had if we",
    "start": "2478319",
    "end": "2484520"
  },
  {
    "text": "had the West like the West group um and the",
    "start": "2484520",
    "end": "2491200"
  },
  {
    "text": "proportion yeah so what you could do here is you could say reindex and we could do range",
    "start": "2491920",
    "end": "2497640"
  },
  {
    "text": "1880 2009 and that what that does is that is",
    "start": "2497640",
    "end": "2504720"
  },
  {
    "text": "that reconformation",
    "start": "2504720",
    "end": "2508200"
  },
  {
    "text": "where there are Nas and then you can see if you plotted if you plotted that I mean the reality is it's probably not",
    "start": "2517720",
    "end": "2524839"
  },
  {
    "text": "it's probably not zero but um you know it's some small number but yeah so you",
    "start": "2524839",
    "end": "2530520"
  },
  {
    "text": "have so you have that ability to do that um so the reindex function enables you to to to reconformation",
    "start": "2530520",
    "end": "2539079"
  },
  {
    "text": "I want to um to make it exactly match the range 1880 through 2009 fill the na with zero",
    "start": "2547720",
    "end": "2556079"
  },
  {
    "text": "and then plot",
    "start": "2556079",
    "end": "2558599"
  },
  {
    "text": "it can can I can I sorry could you say that again",
    "start": "2566640",
    "end": "2573720"
  },
  {
    "text": "yeah yes yes you can so so shorthand so assuming that the column name forms a",
    "start": "2573720",
    "end": "2579800"
  },
  {
    "text": "valid python variable name you can do dot as to access it as an attribute instead of uh having to to pass a string",
    "start": "2579800",
    "end": "2587200"
  },
  {
    "text": "to get item so to kind of walk you through how",
    "start": "2587200",
    "end": "2592800"
  },
  {
    "text": "so I so I had this question of you know how does how do people's baby naming habits change through time so I kind of wanted to walk you through the Machinery",
    "start": "2592800",
    "end": "2599200"
  },
  {
    "text": "necessary to answer a question like that so so the first question is how do we group this data set by year so I've got",
    "start": "2599200",
    "end": "2606400"
  },
  {
    "text": "a year column first of all so it gives me the years so",
    "start": "2606400",
    "end": "2611760"
  },
  {
    "text": "the year for each uh the year for each row and I want to group the data by row",
    "start": "2611760",
    "end": "2617520"
  },
  {
    "text": "so I'm going to call the group by function and pass the pass year and now",
    "start": "2617520",
    "end": "2623000"
  },
  {
    "text": "now the idea here is that it's taking the string year it's looking up that column and it says Okay I want to group",
    "start": "2623000",
    "end": "2628200"
  },
  {
    "text": "this group this data set by year um and so what actually happens here is that you create uh you create a group by",
    "start": "2628200",
    "end": "2635160"
  },
  {
    "text": "object so I'm going to call that grouped and now from here there are lots of",
    "start": "2635160",
    "end": "2640680"
  },
  {
    "text": "things that you can do with the data set so you have this object um you could say",
    "start": "2640680",
    "end": "2646800"
  },
  {
    "text": "compute the uh well an interesting thing might be",
    "start": "2646800",
    "end": "2652440"
  },
  {
    "text": "suppose we want to select the prop field and what's the median you know what's the median proportion of U well what's",
    "start": "2652440",
    "end": "2662119"
  },
  {
    "text": "the median value in the in the in the prop field uh for each year so if I do",
    "start": "2662119",
    "end": "2667760"
  },
  {
    "text": "SUB propop what that's doing is telling the group by object select the prop field and then for each group apply the",
    "start": "2667760",
    "end": "2673839"
  },
  {
    "text": "median function to that group and then uh and then assemble that into uh",
    "start": "2673839",
    "end": "2679960"
  },
  {
    "text": "assemble that into um into a series which is now labeled by year and so you",
    "start": "2679960",
    "end": "2685079"
  },
  {
    "text": "could see you could then plot that and you can see how the uh see how the",
    "start": "2685079",
    "end": "2691240"
  },
  {
    "text": "median um how the median proportion is changing over time so this is kind of",
    "start": "2691240",
    "end": "2696800"
  },
  {
    "text": "interesting interesting that it increases so uh so one thing you might say is well the you know um as I will",
    "start": "2696800",
    "end": "2704640"
  },
  {
    "text": "show you that the PE the diversity of names that people are picking has been increasing um well a lot since since the",
    "start": "2704640",
    "end": "2713079"
  },
  {
    "text": "1980s um but it uh you know certainly over the course of the the people got more",
    "start": "2713079",
    "end": "2718880"
  },
  {
    "text": "creative uh during you know uh during the 1910s and then things got not so",
    "start": "2718880",
    "end": "2724359"
  },
  {
    "text": "great and then so they were just very weren't thinking very about the names they were giving their kids and now things are great and so you know people",
    "start": "2724359",
    "end": "2730200"
  },
  {
    "text": "are getting very diverse but more precise question would be how many you know how many um names does it take to",
    "start": "2730200",
    "end": "2735760"
  },
  {
    "text": "get to to 50% of all the children um so that's a more complicated question",
    "start": "2735760",
    "end": "2742800"
  },
  {
    "text": "so so now we're going to go back to the grouped object",
    "start": "2742800",
    "end": "2749000"
  },
  {
    "text": "yeah so it's just a view on the data yeah um so so if we take this this",
    "start": "2749000",
    "end": "2755839"
  },
  {
    "text": "grouped object so the idea is that we've got a number of functions here so we have aggregate which enables you to",
    "start": "2755839",
    "end": "2761720"
  },
  {
    "text": "aggregate a field which is what I showed you so I could have AG said Aggregate and pass a function Lambda",
    "start": "2761720",
    "end": "2767960"
  },
  {
    "text": "x x prop median so that is going to call",
    "start": "2767960",
    "end": "2773720"
  },
  {
    "text": "basically on each subgroup of the data take the proportion column call Median on it",
    "start": "2773720",
    "end": "2780599"
  },
  {
    "text": "uh I guess not um",
    "start": "2781040",
    "end": "2787599"
  },
  {
    "text": "I've got to think about what happened here uh but the most the most General",
    "start": "2787599",
    "end": "2794040"
  },
  {
    "text": "function you can do is is apply so apply takes a function applies it to each",
    "start": "2794040",
    "end": "2799240"
  },
  {
    "text": "group and then given what the results are it tries to assemble assemble the results back into a data frame or a",
    "start": "2799240",
    "end": "2805640"
  },
  {
    "text": "series so suppose that we wanted to take the top five names uh in each group so",
    "start": "2805640",
    "end": "2813319"
  },
  {
    "text": "we can apply a function so on the chunk of data I'm going to call that X um I'm",
    "start": "2813319",
    "end": "2820160"
  },
  {
    "text": "going to say x sort index so basically reorder the data using the using the",
    "start": "2820160",
    "end": "2825640"
  },
  {
    "text": "index but by the prop column so that was going to put the the",
    "start": "2825640",
    "end": "2831599"
  },
  {
    "text": "highest Ur you know the highest occurring baby names um at the end because it orders in ascending order so",
    "start": "2831599",
    "end": "2837200"
  },
  {
    "text": "I'm going to say ascending false I want them at the beginning and",
    "start": "2837200",
    "end": "2842480"
  },
  {
    "text": "then do colon five to take the top five name names in each year so you can",
    "start": "2842480",
    "end": "2849119"
  },
  {
    "text": "imagine in your head you know you've got these groups of a th baby names per year I'm sorting them in descending order by",
    "start": "2849119",
    "end": "2854720"
  },
  {
    "text": "the proportion and then I'm taking the top five um let me take the top two or the top uh",
    "start": "2854720",
    "end": "2864480"
  },
  {
    "text": "what's going on",
    "start": "2864480",
    "end": "2867160"
  },
  {
    "text": "here take the top one actually so just taking the top one so it you know um",
    "start": "2870800",
    "end": "2877839"
  },
  {
    "text": "pandis kind of defends you from you know spitting out 100,000 rows of data into your console so that's what's happening",
    "start": "2877839",
    "end": "2883119"
  },
  {
    "text": "there is uh um you can actually control that but when I selected out the top five you know I guess it decided that",
    "start": "2883119",
    "end": "2888839"
  },
  {
    "text": "645 rows was too much to display so I'm just going to do colon one to select the top one call that function you can see",
    "start": "2888839",
    "end": "2895760"
  },
  {
    "text": "that um from 1880 onward people really liked Jon for a lot of years and it became Robert and then James and um some",
    "start": "2895760",
    "end": "2904240"
  },
  {
    "text": "point that so that index number is actually the uh",
    "start": "2904240",
    "end": "2909359"
  },
  {
    "text": "the the observation number in the data set so so what happened here is that it",
    "start": "2909359",
    "end": "2914960"
  },
  {
    "text": "took the result of each group and it uh it added on on it added the year so now",
    "start": "2914960",
    "end": "2922440"
  },
  {
    "text": "we've got so the in the result we've got an index with two levels where the first level is the year the second level is",
    "start": "2922440",
    "end": "2928839"
  },
  {
    "text": "the uh the observation number from the data set so you could get rid of that if you wanted",
    "start": "2928839",
    "end": "2935838"
  },
  {
    "text": "so this is the top name per year full dat the full full data set is the top 1000 yeah so if I done the top five",
    "start": "2937359",
    "end": "2946200"
  },
  {
    "text": "let's say and I'm just going to select off the last 100 rows of the data of the result you can see that",
    "start": "2946200",
    "end": "2953319"
  },
  {
    "text": "in 2008 the top five names were Jacob Michael Ethan D Joshua and Daniel so I",
    "start": "2953319",
    "end": "2960280"
  },
  {
    "text": "actually didn't know this that Jacob is the been the top name for a lot of years",
    "start": "2960280",
    "end": "2967160"
  },
  {
    "text": "so anyway so this so this gets us closer to to answering the question um so we",
    "start": "2967799",
    "end": "2973839"
  },
  {
    "text": "can split the data into groups like this um but now suppose that we had the data",
    "start": "2973839",
    "end": "2981119"
  },
  {
    "text": "for the boys um boys year equals let's say",
    "start": "2981119",
    "end": "2990200"
  },
  {
    "text": "2008 and we have the proportions these all happen to be these",
    "start": "2990200",
    "end": "2995280"
  },
  {
    "text": "all happen to be sorted so now this is a numpy array so I can call the the numpy array sum",
    "start": "2995280",
    "end": "3001200"
  },
  {
    "text": "function on that which gives me the cumulative sum",
    "start": "3001200",
    "end": "3006520"
  },
  {
    "text": "um so let's call this C suum sort of walk walk you through how this",
    "start": "3006520",
    "end": "3012920"
  },
  {
    "text": "looks um then I'm going to so I do that",
    "start": "3012920",
    "end": "3018040"
  },
  {
    "text": "and now I'm going to call the numpy search sorted function with 0. five which gives me the um the index",
    "start": "3018040",
    "end": "3027000"
  },
  {
    "text": "of the index of the value in the cumulative sum where where 0. five is",
    "start": "3027000",
    "end": "3032760"
  },
  {
    "text": "reached so in 2008 it it there were um",
    "start": "3032760",
    "end": "3038040"
  },
  {
    "text": "it took 127 the top 127 baby names in order to to name 50% of the 50% of the",
    "start": "3038040",
    "end": "3044599"
  },
  {
    "text": "children um but if you go back to 1880 that number is only",
    "start": "3044599",
    "end": "3050079"
  },
  {
    "text": "15 so so the question is how did this how did this evolve over time so I'm",
    "start": "3050079",
    "end": "3056400"
  },
  {
    "text": "going to take this little this little exercise with the suom and replace this with just a a dummy you know",
    "start": "3056400",
    "end": "3062880"
  },
  {
    "text": "variable group um can even make a generic and you know make this percent",
    "start": "3062880",
    "end": "3068200"
  },
  {
    "text": "number um this percent number generic um and so I have this this",
    "start": "3068200",
    "end": "3074240"
  },
  {
    "text": "uh um get num function I take the group of data I sort index by prop um",
    "start": "3074240",
    "end": "3081240"
  },
  {
    "text": "descending order I take that ordered group select the proportion cumula sum search Ed by the percent that I'm",
    "start": "3081240",
    "end": "3087799"
  },
  {
    "text": "interested in so bit of a mouthful but you know guess you could do you probably",
    "start": "3087799",
    "end": "3093359"
  },
  {
    "text": "so it might be be difficult to do in SQL but you could do it um",
    "start": "3093359",
    "end": "3101040"
  },
  {
    "text": "yes kind of hard oh yeah sure thanks sorry about that yeah I didn't know",
    "start": "3101880",
    "end": "3108200"
  },
  {
    "text": "about that feature",
    "start": "3108200",
    "end": "3112200"
  },
  {
    "text": "so I'm not excellent okay",
    "start": "3114640",
    "end": "3120680"
  },
  {
    "text": "so so then so then I've got I made it a little a little simpler even get num at",
    "start": "3120680",
    "end": "3126119"
  },
  {
    "text": "percent I pass the data the percentage I group by year and then and then I apply",
    "start": "3126119",
    "end": "3133359"
  },
  {
    "text": "this um this aggregate this aggregation function um and pass the percentage that",
    "start": "3133359",
    "end": "3138480"
  },
  {
    "text": "I'm interested in so here I want to get the the number of boys it took to name",
    "start": "3138480",
    "end": "3143839"
  },
  {
    "text": "50% of the children through time I I'm going to plot that call that boys do the same thing with the girls um label that",
    "start": "3143839",
    "end": "3150920"
  },
  {
    "text": "plot girls and so you can see um rather alarming Trend that people",
    "start": "3150920",
    "end": "3156760"
  },
  {
    "text": "were were always a bit more creative about girl names over time and then",
    "start": "3156760",
    "end": "3162040"
  },
  {
    "text": "around 1980 you know I'm not sure what happened um cultural revolution everyone",
    "start": "3162040",
    "end": "3167799"
  },
  {
    "text": "wants to he like oh my children my child is special my child is unique you got to you know got to be more creative about",
    "start": "3167799",
    "end": "3173280"
  },
  {
    "text": "names and so it's just been a um upward a steady upward Trend so you know if you extrapolate from here you know I don't",
    "start": "3173280",
    "end": "3180359"
  },
  {
    "text": "know it's like we're going to have a hard time like you know saying each other's names pretty pretty soon we'll have to find like random sequences of",
    "start": "3180359",
    "end": "3186200"
  },
  {
    "text": "characters you know um so anyway so you know this was",
    "start": "3186200",
    "end": "3193359"
  },
  {
    "text": "actually kind of complicated in retrospect now that I look at this but um what I wanted to you know explain to you is that is that pandis offers this",
    "start": "3193359",
    "end": "3200760"
  },
  {
    "text": "um sort of very integrated and Powerful tool chain for expressing operations on index data and enabling you to um to do",
    "start": "3200760",
    "end": "3208040"
  },
  {
    "text": "very fine grain control over um operations on groups of data um being able to write those functions in Python",
    "start": "3208040",
    "end": "3214960"
  },
  {
    "text": "um in a nice way and then have that sort of integrate with the rest of the tool chain so make plots and map plot lib",
    "start": "3214960",
    "end": "3220000"
  },
  {
    "text": "really easy um basically just have all the functions that you need to answer answer the questions that you might have",
    "start": "3220000",
    "end": "3225960"
  },
  {
    "text": "about about a data set um and secondly you know just like for example like this like having a view of the data like this",
    "start": "3225960",
    "end": "3232599"
  },
  {
    "text": "where say like I've got this data I know that it segments into years and I just want to look look at you know the top",
    "start": "3232599",
    "end": "3237680"
  },
  {
    "text": "five oper observations within within each group um and once you sort of you once you understand each of the tools",
    "start": "3237680",
    "end": "3244280"
  },
  {
    "text": "along the way here basically you're just assembling these operations say you need sort sort select apply select and then",
    "start": "3244280",
    "end": "3251280"
  },
  {
    "text": "you've got this um so you can catenate these operations together and sort of you know it starting to look a little",
    "start": "3251280",
    "end": "3256920"
  },
  {
    "text": "bit functional um then you can really crunch down um a big data set and sort",
    "start": "3256920",
    "end": "3262000"
  },
  {
    "text": "of get some meaningful answers out of it um pretty uh pretty quickly",
    "start": "3262000",
    "end": "3267240"
  },
  {
    "text": "so um yeah I'm trying to think if there's",
    "start": "3267240",
    "end": "3272480"
  },
  {
    "text": "any any any fun stuff that I I uh I had here so I also have a data set in here",
    "start": "3272480",
    "end": "3278520"
  },
  {
    "text": "which you can play around with you know now that you have all these notebooks you can play around with the data so I have a data set with the number of",
    "start": "3278520",
    "end": "3284280"
  },
  {
    "text": "births per year so I have year sex and then the number of births and so we can",
    "start": "3284280",
    "end": "3291480"
  },
  {
    "text": "take that merge that so do a joint operation between the names data and the births",
    "start": "3291480",
    "end": "3298000"
  },
  {
    "text": "data um and then if you actually want to know the number of people that were named that name in the year we can take",
    "start": "3298000",
    "end": "3305400"
  },
  {
    "text": "so the merge data set now looks and so what what's happened behind the scenes is it's looked at these two uh two data",
    "start": "3305400",
    "end": "3313160"
  },
  {
    "text": "frames and it said okay the col the common column names are year and sex so join on those two keys but I could have",
    "start": "3313160",
    "end": "3319559"
  },
  {
    "text": "explicitly said join on sex and Year and that that would be very explicit um",
    "start": "3319559",
    "end": "3326559"
  },
  {
    "text": "database joint operation between these two data frames and so you can see the result now has has everything we had",
    "start": "3326559",
    "end": "3332079"
  },
  {
    "text": "before but it also has the number of births um so if you wanted to create so",
    "start": "3332079",
    "end": "3338880"
  },
  {
    "text": "if you wanted to get the number of people in each year take the take the proportion times the number of birds and",
    "start": "3338880",
    "end": "3344000"
  },
  {
    "text": "I just called numpy floor on it to get an integer um so I run that and see I",
    "start": "3344000",
    "end": "3351559"
  },
  {
    "text": "assigned a column to the data frame so I've got now a new column uh persons maybe maybe the right word would be",
    "start": "3351559",
    "end": "3358680"
  },
  {
    "text": "people um but you can actually then",
    "start": "3358680",
    "end": "3363960"
  },
  {
    "text": "um you can sum up you can then Group by name sum up select the person's column",
    "start": "3363960",
    "end": "3370240"
  },
  {
    "text": "sum that up in order and you can get the number of people born with each name um",
    "start": "3370240",
    "end": "3376039"
  },
  {
    "text": "over the whole data set so you can see that there were 5 million people named John named James more than John actually",
    "start": "3376039",
    "end": "3382400"
  },
  {
    "text": "um so James is still a pretty popular name it turns out um",
    "start": "3382400",
    "end": "3387680"
  },
  {
    "text": "and so yeah it's a pretty simple way to um to to aggregate that up the data set and then to to look at at and work with",
    "start": "3387680",
    "end": "3394440"
  },
  {
    "text": "that so anyway thank you guys",
    "start": "3394440",
    "end": "3400440"
  },
  {
    "text": "[Music]",
    "start": "3402300",
    "end": "3410780"
  }
]