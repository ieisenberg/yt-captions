[
  {
    "text": "[Music]",
    "start": "3360",
    "end": "9620"
  },
  {
    "text": "it's really fantastic to be here at cucon New York um and a massive privilege to be able to give the morning",
    "start": "10120",
    "end": "15639"
  },
  {
    "text": "keynote today uh all of those talks uh really sound interesting and the conference has been really fantastic so",
    "start": "15639",
    "end": "22720"
  },
  {
    "text": "far and I'm real excited about the agenda for today um track has definitely make it a tough choice on where to go",
    "start": "22720",
    "end": "29160"
  },
  {
    "text": "it'd be much easier if it was just a linear Choice cuz then uh you know you wouldn't have Choice paralysis but uh",
    "start": "29160",
    "end": "34360"
  },
  {
    "text": "you know we are very fortunate nevertheless so I'm going to start my talk with my conclusion uh I believe",
    "start": "34360",
    "end": "42000"
  },
  {
    "text": "many of the systems that we build today really don't take full advantage of the hardware that is available to them",
    "start": "42000",
    "end": "49520"
  },
  {
    "text": "sometimes this is by Design uh you know much of our learnings and lessons and",
    "start": "49520",
    "end": "54640"
  },
  {
    "text": "things that we've built up over time and and and infrastructure uh you know came from a different world uh you know a",
    "start": "54640",
    "end": "61440"
  },
  {
    "text": "world of Hardware that had different trade-offs and some of the times it can be organizational pressures uh you know",
    "start": "61440",
    "end": "66760"
  },
  {
    "text": "your Ops Team uh maybe don't want to change uh onto a particular new piece of technology um I was talking to Sid Anand",
    "start": "66760",
    "end": "74799"
  },
  {
    "text": "uh yesterday uh and he was talking about whether I should maybe reframe this title as the joy of building large scale",
    "start": "74799",
    "end": "81360"
  },
  {
    "text": "systems and the pain of operating them um but you know fear not we're not all",
    "start": "81360",
    "end": "86799"
  },
  {
    "text": "you're not alone uh we're all practitioners in the room uh I want to go a little bit into uh you know how",
    "start": "86799",
    "end": "93280"
  },
  {
    "text": "things have evolved in the industry uh and things to get excited about for the hardware of",
    "start": "93280",
    "end": "99119"
  },
  {
    "text": "today now I'm going to be talking about various systems and services and design",
    "start": "99119",
    "end": "104600"
  },
  {
    "text": "patterns and things that are going to sound new and novel and often associated with complexity um let me assure you I",
    "start": "104600",
    "end": "112119"
  },
  {
    "text": "really do subscribe to the boring technology club uh you know if you are a startup you know if you're doing you",
    "start": "112119",
    "end": "118439"
  },
  {
    "text": "know less than one request person per second there is really no reason to go through a lot of the struggle at this",
    "start": "118439",
    "end": "124280"
  },
  {
    "text": "point in the life cycle with all the ins and outs of building a Cutting Edge blazing fast production system because",
    "start": "124280",
    "end": "130599"
  },
  {
    "text": "you've got other things to worry about such as how to survive in business uh you can get your favorite cloud provider",
    "start": "130599",
    "end": "136280"
  },
  {
    "text": "or some vendor to run it for you for a couple hundred dollars and you can really focus on building your business uh with plenty of options to scale",
    "start": "136280",
    "end": "142840"
  },
  {
    "text": "further this talk is more for the people who are sort of in that mid tier so not in like the hyperscalers you know if you",
    "start": "142840",
    "end": "148360"
  },
  {
    "text": "Amazon or Google or Netflix then you've probably heard all of this before um but this is for you know the vast majority",
    "start": "148360",
    "end": "154440"
  },
  {
    "text": "of people who are in the mid tier uh where you know you have some sort of business need uh that you is being",
    "start": "154440",
    "end": "160239"
  },
  {
    "text": "served by software but it's not being done in the most efficient manner so think of this talk as a little bit of a",
    "start": "160239",
    "end": "165440"
  },
  {
    "text": "retrospective of where we've been in the industry and where systems are heading in the future so before we dive too deep uh a",
    "start": "165440",
    "end": "172920"
  },
  {
    "text": "very quick introduction hi my name is sahale um and I am a staff engineer at a company called monzo uh based in the UK",
    "start": "172920",
    "end": "179760"
  },
  {
    "text": "UK and I work in the platform group uh and we provide all of the underlying infrastructure and libraries and tooling",
    "start": "179760",
    "end": "187040"
  },
  {
    "text": "so that Engineers can really focus on building banking software and not have to worry about uh you know how their",
    "start": "187040",
    "end": "192720"
  },
  {
    "text": "systems are running and whether they're reliable and whether they're up and whether the database is going to be backed up and and and things like that",
    "start": "192720",
    "end": "199879"
  },
  {
    "text": "um if you folks have ever worked with Heroku uh or like similar platforms uh that's the sort of experience the",
    "start": "199879",
    "end": "205640"
  },
  {
    "text": "magical experience that we try to emulate uh but in an opinionated man suitable for a regulated environment",
    "start": "205640",
    "end": "212360"
  },
  {
    "text": "such as such as uh such as banking now um many of the folks here",
    "start": "212360",
    "end": "217879"
  },
  {
    "text": "wouldn't have heard of monzo uh so we are quite popular in the UK uh we have over 7 million customers uh I think we",
    "start": "217879",
    "end": "224599"
  },
  {
    "text": "are the seventh or sixth largest bank in the UK um and uh our unique selling",
    "start": "224599",
    "end": "230480"
  },
  {
    "text": "point is that we have an app and we have no physical branches uh all of our branches are on GitHub uh we",
    "start": "230480",
    "end": "237480"
  },
  {
    "text": "power it's true we actually have an API uh which we're mandated to have uh which",
    "start": "237480",
    "end": "243040"
  },
  {
    "text": "is slash branches um and that API has an empty response and quite literally says all of our branches are on GitHub it was",
    "start": "243040",
    "end": "249120"
  },
  {
    "text": "the easiest API that we've ever had to write scales to Infinity it's fantastic um we don't have to keep it up to date",
    "start": "249120",
    "end": "255480"
  },
  {
    "text": "we wrote it basically on day one when the company started and haven't had to change it since which is really",
    "start": "255480",
    "end": "260759"
  },
  {
    "text": "fantastic so yeah we power all of the banking features through an online app um if you've heard of chime here in the",
    "start": "260759",
    "end": "267479"
  },
  {
    "text": "US uh we're very similar uh um but I think we have nicer looking cards uh in",
    "start": "267479",
    "end": "272720"
  },
  {
    "text": "my opinion that coral one really does stick out and unfortunately I don't have one on me today um but if you do want to",
    "start": "272720",
    "end": "278320"
  },
  {
    "text": "have a Peak at one um then I'm sure we can make that happen um and you know we are fully licensed and regulated just",
    "start": "278320",
    "end": "285000"
  },
  {
    "text": "like all the other big players um in the UK um and also here in the US and so you know we are under the exact same",
    "start": "285000",
    "end": "291160"
  },
  {
    "text": "constraints we can't just move fast for the sake of moving fast you know with 7 million customers you can't play around",
    "start": "291160",
    "end": "296880"
  },
  {
    "text": "with people's money now now typically um you know as you can probably tell from my accent uh",
    "start": "296880",
    "end": "303280"
  },
  {
    "text": "you you'll find me in cucon London um and usually I'm on the architectures or",
    "start": "303280",
    "end": "308600"
  },
  {
    "text": "the microservices or the platform engineering track at qon in London and",
    "start": "308600",
    "end": "314000"
  },
  {
    "text": "our whole philosophy at mono is to build uh infrastructure using composable",
    "start": "314000",
    "end": "319400"
  },
  {
    "text": "microservices we have over 2500 microservices in production uh you know powering all different parts of our of",
    "start": "319400",
    "end": "326000"
  },
  {
    "text": "our banking back end um now a lot of people sort of like gasp at that it's like oh well there's so many services",
    "start": "326000",
    "end": "332840"
  },
  {
    "text": "especially because we only have a few hundred Engineers um but we are a consumer facing retail bank with direct",
    "start": "332840",
    "end": "338280"
  },
  {
    "text": "Integrations with uh you know payment providers like MasterCard um and uh in the UK we have the faster payment scheme",
    "start": "338280",
    "end": "345160"
  },
  {
    "text": "so like you know similar to AC and and like all these various different schemes that provide different payment",
    "start": "345160",
    "end": "351400"
  },
  {
    "text": "Integrations um in the UK and we have uh Integrations with the vast majority of them and all on the screen are all the",
    "start": "351400",
    "end": "358520"
  },
  {
    "text": "different services uh that we develop just to power one of these many schemes so for example when you tap your monzo",
    "start": "358520",
    "end": "364639"
  },
  {
    "text": "card which is integrated with the MasterCard network uh you know all of these Services need to get involved in",
    "start": "364639",
    "end": "370120"
  },
  {
    "text": "order to process that payment uh you know this includes things like you know maintaining a banking Ledger making sure",
    "start": "370120",
    "end": "376599"
  },
  {
    "text": "that you are a valid customer making sure that your card is valid and hasn't expired making sure that you're not using it for nefarious purposes uh you",
    "start": "376599",
    "end": "384160"
  },
  {
    "text": "know make sure that we fight Financial crime you know we are under the same uh regulations and restrictions as most of",
    "start": "384160",
    "end": "389919"
  },
  {
    "text": "the other other consumer Banks and we want to make sure that a payment is legitimate and it is actually the customer that is making that particular",
    "start": "389919",
    "end": "396680"
  },
  {
    "text": "payment and I mention all of this because all of these systems and",
    "start": "396680",
    "end": "402319"
  },
  {
    "text": "services uh need to talk to databases and cues and other core abstractions so",
    "start": "402319",
    "end": "408479"
  },
  {
    "text": "you can imagine that those core abstractions and core systems get a lot of request volume uh and you know have",
    "start": "408479",
    "end": "414720"
  },
  {
    "text": "have a very high throughput and you know these things need to be fast uh you know we don't want you to be waiting at Whole",
    "start": "414720",
    "end": "420759"
  },
  {
    "text": "Foods uh forever waiting for your Cod machine uh with a spinner uh to process",
    "start": "420759",
    "end": "426000"
  },
  {
    "text": "that particular payment we want you to be in and out as quickly as possible and the retailers also want the same so in",
    "start": "426000",
    "end": "431280"
  },
  {
    "text": "actual fact MasterCard mandate uh they only give you a couple seconds before they will make a decision on your behalf",
    "start": "431280",
    "end": "437720"
  },
  {
    "text": "and that decision that MasterCard makes is usually a much much poorer decision than one you would make internally uh so",
    "start": "437720",
    "end": "444479"
  },
  {
    "text": "it is in our incentive as a bank uh to make sure that we make the best decision for our cust customers because it also",
    "start": "444479",
    "end": "450720"
  },
  {
    "text": "saves US money in the long run uh and you know that sort of time constraint means that we need to be",
    "start": "450720",
    "end": "458000"
  },
  {
    "text": "fast now speaking about speed in the Bas layer let's go a little bit back to back",
    "start": "458000",
    "end": "463360"
  },
  {
    "text": "to the core abstractions uh portion get into the nitty-gritty about why all of this matters um if you've ever opened a",
    "start": "463360",
    "end": "470879"
  },
  {
    "text": "computer science course or an algorithms book uh you would have come across a BT",
    "start": "470879",
    "end": "476120"
  },
  {
    "text": "B tree data structure now B trees are typ typically used as index implementations in many popular",
    "start": "476120",
    "end": "482360"
  },
  {
    "text": "databases uh you know if you've ever defined an index using uh the create index command it's almost certainly",
    "start": "482360",
    "end": "488400"
  },
  {
    "text": "going to be implemented as a b tree or some variant uh of a b tree and represented in your database system and",
    "start": "488400",
    "end": "494639"
  },
  {
    "text": "on disk now uh I want to you know present this slide just so that you can",
    "start": "494639",
    "end": "499800"
  },
  {
    "text": "keep it in mind uh we will be revisiting this uh in in a couple of slides um in 2012 there was a publication on latency",
    "start": "499800",
    "end": "507400"
  },
  {
    "text": "numbers that programmers should know um and I've put some some of those numbers here on the screen and we'll revisit",
    "start": "507400",
    "end": "513640"
  },
  {
    "text": "these in a little while to see how they have changed now keep in mind for example the last number there the cost",
    "start": "513640",
    "end": "519760"
  },
  {
    "text": "of a dis seat uh dis seek um now you know these numbers are a little old um",
    "start": "519760",
    "end": "526200"
  },
  {
    "text": "but you know throughout this talk I want to talk about how some of these have changed in order of magnitude as",
    "start": "526200",
    "end": "531800"
  },
  {
    "text": "Hardware has advanced and how we should be building our systems uh to be able to take advantage of these orders of",
    "start": "531800",
    "end": "537640"
  },
  {
    "text": "magnitude changes but it's still important to keep in mind now so going back to B trees um if",
    "start": "537640",
    "end": "544600"
  },
  {
    "text": "you're familiar with a binary tree uh B tree is very very similar uh where you've got sorting of elements uh which",
    "start": "544600",
    "end": "551399"
  },
  {
    "text": "means that you can Traverse the tree in order so I've got lots of boxes here with numbers on them and all looks very",
    "start": "551399",
    "end": "557079"
  },
  {
    "text": "complex U but imagine that they are a like a you know a reference to a primary key an ID or something like that you",
    "start": "557079",
    "end": "563279"
  },
  {
    "text": "know 82 might reference a row uh which is like my record and you know 883 might be Sarah and like other people in the",
    "start": "563279",
    "end": "570040"
  },
  {
    "text": "audience uh so it's like effectively a key value lookup mechanism so similar to",
    "start": "570040",
    "end": "576079"
  },
  {
    "text": "a to a binary tree uh doing a search uh is you Traverse the tree in order",
    "start": "576079",
    "end": "581480"
  },
  {
    "text": "similar to doing a binary search in a large list you start at the head uh and you make your way down uh to the node",
    "start": "581480",
    "end": "587600"
  },
  {
    "text": "that you are trying to find uh you can find almost any record by traversing the the tree um and in this particular",
    "start": "587600",
    "end": "594000"
  },
  {
    "text": "example you can find any record in four comparisons which is pretty good going uh four comparisons you could do that",
    "start": "594000",
    "end": "599279"
  },
  {
    "text": "relatively quickly uh and it's pretty good going um so imagine all of these items corresponded to a data record uh",
    "start": "599279",
    "end": "607600"
  },
  {
    "text": "and the numbers are and identified to that record you're going to want an efficient representation so you know you",
    "start": "607600",
    "end": "613160"
  },
  {
    "text": "don't have to Traverse every particular element to get to you know a particular",
    "start": "613160",
    "end": "618480"
  },
  {
    "text": "record now imagine that you want to insert an item for example we have uh",
    "start": "618480",
    "end": "623560"
  },
  {
    "text": "that sube highlighted in Orange there and we want to add a few more records that align with that particular area of",
    "start": "623560",
    "end": "630000"
  },
  {
    "text": "the tree you know we're getting a few inserts to our database uh and we want to add a few more records so we've added",
    "start": "630000",
    "end": "635600"
  },
  {
    "text": "two more items there uh maybe these are two new customers you know in banking pance or or something like that 86 and",
    "start": "635600",
    "end": "642160"
  },
  {
    "text": "87 which is all fine and dandy uh but this tree is now looking a little bit imbalance you know we've got quite a few",
    "start": "642160",
    "end": "648160"
  },
  {
    "text": "uh things clustered at the at the leaf there um so we're going to have to do a little bit of rebalancing uh you know",
    "start": "648160",
    "end": "654200"
  },
  {
    "text": "most of our leaves there have two or three records and this one is you know sort of like clustered with five records",
    "start": "654200",
    "end": "659920"
  },
  {
    "text": "um which is which is not ideal um so B trees one of the properties is that they need to self-balance uh when uh you know",
    "start": "659920",
    "end": "667839"
  },
  {
    "text": "you've inserted a bunch of items in the Lea so we're going to juggle these items around uh to maintain an Optimum",
    "start": "667839",
    "end": "673519"
  },
  {
    "text": "distribution so many implementations we'll try to prioritize keeping the height at a constant level so you don't",
    "start": "673519",
    "end": "679000"
  },
  {
    "text": "have to do too many comparisons um but we can rej juggle this tree around to make sure that we still keep the same",
    "start": "679000",
    "end": "684160"
  },
  {
    "text": "height uh while still maintaining a good distribution within the leaves so here",
    "start": "684160",
    "end": "689399"
  },
  {
    "text": "is our rebalance tree we've shuffled a few of the things around hopefully the animation wasn't wasn't that quick um",
    "start": "689399",
    "end": "694920"
  },
  {
    "text": "but yeah you know all of the items in red have been sort of reshuffled so that we have more even distribution of the",
    "start": "694920",
    "end": "701000"
  },
  {
    "text": "load uh and we no longer have five leaves uh five nodes clustered against",
    "start": "701000",
    "end": "706839"
  },
  {
    "text": "one leaf uh but we've had to do quite a few different operations in order to make that happen now I don't know if folks",
    "start": "706839",
    "end": "714200"
  },
  {
    "text": "remember this um you know this is a spinning platter hard drive uh you know there's a mechanical head that sort of",
    "start": "714200",
    "end": "719920"
  },
  {
    "text": "whizzard around and makes clunking noises and uh you know it's it's all fun and games uh except when you put a",
    "start": "719920",
    "end": "726480"
  },
  {
    "text": "magnet to it and uh you know all of your data is erased uh which I may have done by accident uh quite a few times uh when",
    "start": "726480",
    "end": "732200"
  },
  {
    "text": "you whack some hard drives in a drawer um but going back to Vries uh you know they are a data structure that lives on",
    "start": "732200",
    "end": "739240"
  },
  {
    "text": "the hard drive uh you know when they were originally designed as opposed to for example being in in Ram uh you know",
    "start": "739240",
    "end": "745880"
  },
  {
    "text": "where it would be much more volatile like you know you want to keep these in a assisted medium um so that allows the",
    "start": "745880",
    "end": "752000"
  },
  {
    "text": "B tree to grow as your data has grown because you know Ram wasn't uh you know or all too massive uh back in the day uh",
    "start": "752000",
    "end": "759600"
  },
  {
    "text": "and when you were running low on RAM you still wanted an ability to uh be able to look up things in your B tree as your",
    "start": "759600",
    "end": "765279"
  },
  {
    "text": "data set grew however if your data is written over time uh your B tree isn't going to live on a contiguous place on",
    "start": "765279",
    "end": "772320"
  },
  {
    "text": "your spitting P of hard drive uh you don't want your B tree to be splattered all over your hard drive uh but you know",
    "start": "772320",
    "end": "778600"
  },
  {
    "text": "that's what you end up with uh because your B Tree Grows organically over time you're adding records over time uh and",
    "start": "778600",
    "end": "784880"
  },
  {
    "text": "you know uh different blocks are going to correspond to different elements of your B tree so that means every time you",
    "start": "784880",
    "end": "790600"
  },
  {
    "text": "need to do a change or a lookup in your in your particular B tree for example um if you remember our search example from",
    "start": "790600",
    "end": "796800"
  },
  {
    "text": "from uh uh uh the previous slide you know we had four comparisons that means that head needs to move to different",
    "start": "796800",
    "end": "802639"
  },
  {
    "text": "places and need to wait for the spinning platter to spin around and and you know get into the right place uh before you",
    "start": "802639",
    "end": "809279"
  },
  {
    "text": "can read that that bit of data um and that's a couple milliseconds right there you know when you're accumulating it all",
    "start": "809279",
    "end": "815560"
  },
  {
    "text": "and uh aggregating it or uh just getting the read right head into position uh and",
    "start": "815560",
    "end": "820839"
  },
  {
    "text": "imagine you need to do that a couple times within your B tree imagine that that uh the top to bottom has grown into",
    "start": "820839",
    "end": "826240"
  },
  {
    "text": "like 10 comparisons for example that can accumulate really really quickly now you",
    "start": "826240",
    "end": "831880"
  },
  {
    "text": "know the the era of hard drives might have disappeared I don't think anyone is running uh systems with with spinning",
    "start": "831880",
    "end": "837440"
  },
  {
    "text": "rust uh nowadays um if not then you should definitely if you are then you should definitely uh look into nvme ssds",
    "start": "837440",
    "end": "843560"
  },
  {
    "text": "they're great um but if you're on uh cloud storage like EBS uh you know each",
    "start": "843560",
    "end": "848880"
  },
  {
    "text": "time you need to do a particular operation you know that translate into that translates into an IO operation and",
    "start": "848880",
    "end": "855160"
  },
  {
    "text": "you're going to be build for that uh and you know there's a fixed capacity that you uh need to provision up front uh so",
    "start": "855160",
    "end": "862199"
  },
  {
    "text": "that they can provide you the quality of service so this kind of stuff still does matter uh you know where",
    "start": "862199",
    "end": "869279"
  },
  {
    "text": "if you were to choose a different algorithm you might be able to do all of these lookups in one IO",
    "start": "869279",
    "end": "876160"
  },
  {
    "text": "operation now again uh you know a little bit of a age uh division here uh I don't",
    "start": "876160",
    "end": "882279"
  },
  {
    "text": "know if folks are uh old enough to remember the days of dis defragmentation um the general principle",
    "start": "882279",
    "end": "889800"
  },
  {
    "text": "yeah yeah I'm I'm hearing a lot of mov so yeah I think there's definitely a division in the room um",
    "start": "889800",
    "end": "897120"
  },
  {
    "text": "the the general principle especially in the days of spinning plate hard drives",
    "start": "897120",
    "end": "902320"
  },
  {
    "text": "was that you want to lay out your data to minimize the amount of seeking you want to do uh you need to do uh and to",
    "start": "902320",
    "end": "908560"
  },
  {
    "text": "minimize the number of uh operations you need to do with your read right head um if you lay it out in a linear manner uh",
    "start": "908560",
    "end": "915800"
  },
  {
    "text": "you can take most advantage of the hardware and it's why defragmenting your hard drive made your computer feel much",
    "start": "915800",
    "end": "921880"
  },
  {
    "text": "faster it wasn't just moving these colored boxes and look all pretty uh you know it did make your computer feel",
    "start": "921880",
    "end": "927120"
  },
  {
    "text": "faster uh cuz it relay your data out in a manner which was much more efficient for reading uh which is what a lot of",
    "start": "927120",
    "end": "933000"
  },
  {
    "text": "our systems do nowadays you know when you look at read write ratios now uh there has been some",
    "start": "933000",
    "end": "939440"
  },
  {
    "text": "research um even in the age of solid state drives you know ssds um ssds are",
    "start": "939440",
    "end": "944959"
  },
  {
    "text": "much more efficient reading sequential data than doing Random Access uh the above chart is from 2009 uh but you know",
    "start": "944959",
    "end": "953639"
  },
  {
    "text": "the premise for optimizing for for reads uh and sequential reads very much exist",
    "start": "953639",
    "end": "958920"
  },
  {
    "text": "today um on many ssds and nvme drives you can read 1 kiloby or 4 kilobytes of",
    "start": "958920",
    "end": "964440"
  },
  {
    "text": "data in a single IO operation uh and that c operation is much much quicker uh",
    "start": "964440",
    "end": "970160"
  },
  {
    "text": "but if your bites are scattered all over the place you know if you've got a couple bittes here and a couple bites there and a couple bites everywhere uh",
    "start": "970160",
    "end": "976120"
  },
  {
    "text": "then you're still going to have to do a bunch of IO operations even on an SSD and that's going to accumulate much more",
    "start": "976120",
    "end": "982160"
  },
  {
    "text": "than just doing a single IO operation where you can read a bunch of kilobytes of data Allin one go um and ultimately",
    "start": "982160",
    "end": "989199"
  },
  {
    "text": "that reduces the performance of your application or your database because you have to remember that when these",
    "start": "989199",
    "end": "994279"
  },
  {
    "text": "database systems are running you're doing Millions if not billions of these operations uh and that accumulates uh",
    "start": "994279",
    "end": "1000839"
  },
  {
    "text": "very very quickly so when a lot of algorithms in most of the modern systems we uh run",
    "start": "1000839",
    "end": "1007800"
  },
  {
    "text": "today were designed we really did have a completely different set of trade-offs",
    "start": "1007800",
    "end": "1013079"
  },
  {
    "text": "uh to read an item from dis we really were talking milliseconds uh and with ssds uh that reduced by an order of",
    "start": "1013079",
    "end": "1020120"
  },
  {
    "text": "magnitude to submillisecond I remember when I got my first SSD on my machine I was like Wow everything is so blazing",
    "start": "1020120",
    "end": "1026240"
  },
  {
    "text": "quick uh and now with mvme ssds uh that has gone even further into into",
    "start": "1026240",
    "end": "1033280"
  },
  {
    "text": "nanc and again with throughput uh you know a hard drive you know you you'd be able to saturate it at like you know 200",
    "start": "1033280",
    "end": "1040160"
  },
  {
    "text": "megabytes per second uh and nowadays with mvme drives uh you can Breeze past",
    "start": "1040160",
    "end": "1045240"
  },
  {
    "text": "at multiple gigabytes a second um you know there was a there was a talk um uh",
    "start": "1045240",
    "end": "1050679"
  },
  {
    "text": "earlier in the in the week on Tuesday I believe uh from the folks at click house you know where they were able to analyze",
    "start": "1050679",
    "end": "1056640"
  },
  {
    "text": "over a billion records and at a couple gigabytes per per second uh which meant that you could uh search through a",
    "start": "1056640",
    "end": "1063280"
  },
  {
    "text": "couple billion records uh in under one second which is pretty remarkable uh I saw an mvme drive a couple days back uh",
    "start": "1063280",
    "end": "1070520"
  },
  {
    "text": "which could uh reach over 7 gbes per second uh so some of these drives are getting wickedly quick they're getting",
    "start": "1070520",
    "end": "1075919"
  },
  {
    "text": "so quick that uh they're looking at adding uh water cooling uh to the hard drives because they're generating so",
    "start": "1075919",
    "end": "1081520"
  },
  {
    "text": "much heat uh so that's the level of absurdity that that we're getting to that we can't keep them cool uh for the",
    "start": "1081520",
    "end": "1087440"
  },
  {
    "text": "speed that we're reading uh the speed that we're reading and writing to them now all of this is fine and dandy",
    "start": "1087440",
    "end": "1094039"
  },
  {
    "text": "you know this is like effectively you know our next uh like Moos law almost right uh because many of these",
    "start": "1094039",
    "end": "1100919"
  },
  {
    "text": "improvements we can take advantage of without much work in our systems uh so for example uh you this is uh some re",
    "start": "1100919",
    "end": "1108360"
  },
  {
    "text": "search from the folks at Samsung uh and where they and you know I guess they do",
    "start": "1108360",
    "end": "1113440"
  },
  {
    "text": "have a bias because you know they they make some of these drives um but you know you can see how there is a",
    "start": "1113440",
    "end": "1120080"
  },
  {
    "text": "massively different order of magnitude uh in the amount of transactions that were able to run per per minute uh for",
    "start": "1120080",
    "end": "1126880"
  },
  {
    "text": "this workload that they were running for different types of drives so you know mvme drives have absolutely breeed past",
    "start": "1126880",
    "end": "1132440"
  },
  {
    "text": "compared to like you know SAS H SAS hard drives um so yeah you know you can get",
    "start": "1132440",
    "end": "1138559"
  },
  {
    "text": "uh a lot of the benefits of you know uh added CPU or network Headroom or faster dis speeds uh just by deploying our",
    "start": "1138559",
    "end": "1146000"
  },
  {
    "text": "existing applications of more Modern Hardware um so this was a MySQL workload",
    "start": "1146000",
    "end": "1151400"
  },
  {
    "text": "uh where they were testing some transactions uh now this might sound a little bit contradictory to the B3",
    "start": "1151400",
    "end": "1157039"
  },
  {
    "text": "example that I gave a little bit earlier uh because clearly you know by doing nothing uh you know we've still been",
    "start": "1157039",
    "end": "1163039"
  },
  {
    "text": "able to realize speed gains uh and you know massive amount massive of magnitude",
    "start": "1163039",
    "end": "1169400"
  },
  {
    "text": "because there's much higher throughput that we see here um but with a few tweaks in our software uh you know we",
    "start": "1169400",
    "end": "1175520"
  },
  {
    "text": "too can realize even further orders of magnitude or of gains uh and that would take much better advantage of the speed",
    "start": "1175520",
    "end": "1182799"
  },
  {
    "text": "of Hardware now there was a really interesting research article that I came",
    "start": "1182799",
    "end": "1187880"
  },
  {
    "text": "across a couple days back uh on uh IO performance uh and uh this is the level",
    "start": "1187880",
    "end": "1194039"
  },
  {
    "text": "again of like sort of absurdity that we're we're getting into which is you know uh a bunch of folks have realized",
    "start": "1194039",
    "end": "1199919"
  },
  {
    "text": "that you know softare applications are difficult to change so what they're going to do is they're going to implement some stuff in device drivers",
    "start": "1199919",
    "end": "1206679"
  },
  {
    "text": "for diss uh because you know discs nowadays are little mini computers anyway um you know where they're going",
    "start": "1206679",
    "end": "1212039"
  },
  {
    "text": "to translate random right calls uh so you know when you're doing random random wrs uh into sequential Calles at the",
    "start": "1212039",
    "end": "1218440"
  },
  {
    "text": "device layer uh so you know they have their own separate lookup table and they try to optimize uh for doing uh",
    "start": "1218440",
    "end": "1224679"
  },
  {
    "text": "sequential wrs rather than random rights uh and uh this matters because it helps reduce wear and tear on nvme drives and",
    "start": "1224679",
    "end": "1231960"
  },
  {
    "text": "and ssds now even if you're running in the cloud you still got to worry about this because you know uh eventually if",
    "start": "1231960",
    "end": "1238120"
  },
  {
    "text": "you wear out your SSD you're going to get a very nice notification from AWS saying your instance is being retired uh",
    "start": "1238120",
    "end": "1243640"
  },
  {
    "text": "which means that you have made the hardware sad uh and you know it's now time uh for you to exit um now this",
    "start": "1243640",
    "end": "1252159"
  },
  {
    "text": "matters because in their benchmarking uh you know they achieved a 5 to 11% uh",
    "start": "1252159",
    "end": "1257480"
  },
  {
    "text": "increase in right transaction throughput for common file systems I think 11% was for X4 uh so I mean by again just",
    "start": "1257480",
    "end": "1266200"
  },
  {
    "text": "putting this into the device driver they're able to realize further speed gains uh and you know we can take",
    "start": "1266200",
    "end": "1272279"
  },
  {
    "text": "advantage of these again for free so shifting away from the world of",
    "start": "1272279",
    "end": "1277559"
  },
  {
    "text": "hard disks uh and into the world of CPUs uh you know we've continued to seen uh",
    "start": "1277559",
    "end": "1283120"
  },
  {
    "text": "see 10 to 15% uh year on-year gains in single threaded performance and you know",
    "start": "1283120",
    "end": "1288600"
  },
  {
    "text": "this is a far cry away from from Moos law in in effect for the last couple decades but we're still able to extract",
    "start": "1288600",
    "end": "1295279"
  },
  {
    "text": "significant performance out of a single thread uh you know it's not just about",
    "start": "1295279",
    "end": "1300640"
  },
  {
    "text": "adding more cores and and and more threads to our systems and it's not all about CPU clock",
    "start": "1300640",
    "end": "1307240"
  },
  {
    "text": "frequency either uh the caches on CPUs for example have got a much much larger two so I've plotted uh different types",
    "start": "1307240",
    "end": "1314360"
  },
  {
    "text": "of ec2 instances uh for example um and I've plotted their L1 and L2 cache sizes",
    "start": "1314360",
    "end": "1321000"
  },
  {
    "text": "um for their various different compute optimized instances now the leap might",
    "start": "1321000",
    "end": "1326360"
  },
  {
    "text": "not look that dramatic but you know uh every time we've doubled these uh these",
    "start": "1326360",
    "end": "1331400"
  },
  {
    "text": "sizes uh the probability of a cash hit uh can dramatically reduce the amount of",
    "start": "1331400",
    "end": "1337039"
  },
  {
    "text": "CPU Cycles spent um I don't know if you remember the latency numbers that I showed a little bit earlier uh but the",
    "start": "1337039",
    "end": "1342760"
  },
  {
    "text": "cost of an L1 uh cash hit versus an L2 and L3 cash hit uh can make a dramatic difference on how quick your application",
    "start": "1342760",
    "end": "1350039"
  },
  {
    "text": "uh performs and L1 cashit remember is 200 times more faster than going into",
    "start": "1350039",
    "end": "1355679"
  },
  {
    "text": "memory now even as an industry for a long amount of time we have focused on x86 based processors um and now many",
    "start": "1355679",
    "end": "1363679"
  },
  {
    "text": "providers are providing Arm based CPUs now some of this you may argue is for like you know competitive Advantage",
    "start": "1363679",
    "end": "1370039"
  },
  {
    "text": "maybe trying to get rid of the Intel AMD uh uh foothold uh in the industry um so",
    "start": "1370039",
    "end": "1376000"
  },
  {
    "text": "there may be other perverse incentives but ultimately uh you know there is some benefit uh for us as as consumers I",
    "start": "1376000",
    "end": "1382679"
  },
  {
    "text": "remember when I got this uh like M1 laptop uh I I still don't believe to this day it has a fan uh because I've",
    "start": "1382679",
    "end": "1388919"
  },
  {
    "text": "never heard it uh it does have one because I've opened the screws and it does have one it's there but I've never heard it and you know my Intel machine",
    "start": "1388919",
    "end": "1396240"
  },
  {
    "text": "you know it'd be running away I'd be nice and toasty up on the stage uh even presenting presenting these slides now",
    "start": "1396240",
    "end": "1402760"
  },
  {
    "text": "I've personally not used these arm-based CPUs in in data centers uh but the folks at honeycomb who are here today um uh",
    "start": "1402760",
    "end": "1409919"
  },
  {
    "text": "you know have reported a 30% Improvement in price to Performance uh for their server Fleet uh and all they had to do",
    "start": "1409919",
    "end": "1417279"
  },
  {
    "text": "was to tweak their their CI to build artifacts for arm uh and take advantage",
    "start": "1417279",
    "end": "1422799"
  },
  {
    "text": "of this 30% is a pretty remarkable number like imagine you're able to go to your your CFO and say well you know",
    "start": "1422799",
    "end": "1429120"
  },
  {
    "text": "there's a potential way we can reduce our Cloud spend by by 30% I'm sure they' be elated uh don't know if that will",
    "start": "1429120",
    "end": "1434400"
  },
  {
    "text": "translate into your pay packet but uh you know that's by the way",
    "start": "1434400",
    "end": "1439880"
  },
  {
    "text": "there is one principle about distributed systems that uh has remained true and probably will never change which is the",
    "start": "1439919",
    "end": "1446799"
  },
  {
    "text": "network in general has not gotten more reliable um if you're Building A system that spans over multiple machines and",
    "start": "1446799",
    "end": "1453760"
  },
  {
    "text": "they need to do some coordination there's still a heap of work that you need to encode in your systems uh to",
    "start": "1453760",
    "end": "1460320"
  },
  {
    "text": "handle Network disruptions but networks have gotten significantly faster uh in our original",
    "start": "1460320",
    "end": "1467320"
  },
  {
    "text": "latency numbers uh you know it assumed a 1 GB Network which is you know perfectly fine for for back in the day which",
    "start": "1467320",
    "end": "1473120"
  },
  {
    "text": "completely reasonable about a decade ago but you know M most providers even on the like basic tier of instances uh give",
    "start": "1473120",
    "end": "1479720"
  },
  {
    "text": "you 10 to 25 GB networks um even on the bog Standard Generation of instances um",
    "start": "1479720",
    "end": "1486440"
  },
  {
    "text": "and our networking software has also gotten much much much quicker uh you know there has been a significant focus",
    "start": "1486440",
    "end": "1492919"
  },
  {
    "text": "on Hardware offload and bypassing the traditional OS networking stack um",
    "start": "1492919",
    "end": "1497960"
  },
  {
    "text": "through things like Express data path and and a bunch of other other Technologies because CPUs can't keep up",
    "start": "1497960",
    "end": "1503640"
  },
  {
    "text": "with the amount of processing that needs to happen uh for these super fast networking speeds uh you really don't",
    "start": "1503640",
    "end": "1509799"
  },
  {
    "text": "have time to Doo uh when you're getting tens of millions of packets per second now whilst you can definitely",
    "start": "1509799",
    "end": "1516640"
  },
  {
    "text": "sustain tens of gigabytes per second uh I'm afraid there is one thing that has remained true especially if you're on",
    "start": "1516640",
    "end": "1522360"
  },
  {
    "text": "the cloud which is the pesky bandwidth erush charges uh it hasn't become any cheaper uh I'm afraid so yeah you just",
    "start": "1522360",
    "end": "1529279"
  },
  {
    "text": "get to spend more money quicker U but if you do need to if you if you do need that that level uh that you know a high",
    "start": "1529279",
    "end": "1537320"
  },
  {
    "text": "througho interface it is available to you um so yeah going back to our latency numbers uh you know our L1 and L2 caches",
    "start": "1537320",
    "end": "1544600"
  },
  {
    "text": "have gotten much larger uh so the likelihood of a cash hit and skipping main memory has gotten much larger as",
    "start": "1544600",
    "end": "1550880"
  },
  {
    "text": "well uh we didn't have a chance to dive into like you know optimizations in in in memory in Ram um but we're seeing",
    "start": "1550880",
    "end": "1557760"
  },
  {
    "text": "massive iterations in the DDR spec uh which brings three to four times higher throughput and bandwidth uh and this is",
    "start": "1557760",
    "end": "1564600"
  },
  {
    "text": "especially important for multicore systems uh you know memory is also getting much much much larger and it's",
    "start": "1564600",
    "end": "1570240"
  },
  {
    "text": "now common to get hundreds of gigabytes of RAM you can get machines with like you know multiple terabytes of Ram uh",
    "start": "1570240",
    "end": "1575919"
  },
  {
    "text": "and for many of us we can fit our entire data set into main memory which is pretty remarkable uh it almost negates",
    "start": "1575919",
    "end": "1582760"
  },
  {
    "text": "the need for you know uh dis access in the first place apart from just a persistent storage medium",
    "start": "1582760",
    "end": "1588480"
  },
  {
    "text": "and hard drives as well have got remarkably quicker uh and it's removed a massive source of bottleneck especially",
    "start": "1588480",
    "end": "1594760"
  },
  {
    "text": "if you needed to read something off disk now in 2005 uh there was an article",
    "start": "1594760",
    "end": "1601200"
  },
  {
    "text": "titled the free lunch is over uh which I think is a very remarkable Title by her",
    "start": "1601200",
    "end": "1606240"
  },
  {
    "text": "Suter um and you know the article sort of talked about the slowing down of Mo's",
    "start": "1606240",
    "end": "1611440"
  },
  {
    "text": "law uh and how you know the dramatic increases in in CPU clock speed were",
    "start": "1611440",
    "end": "1616559"
  },
  {
    "text": "were coming to an end um I was a little bit young at the time so uh you know I don't think I quite Gro",
    "start": "1616559",
    "end": "1621799"
  },
  {
    "text": "the article at the time and you know I'll be lying if I said I read it in 2005 uh because I would have been 15 um",
    "start": "1621799",
    "end": "1628240"
  },
  {
    "text": "so that probably didn't help uh but you know when you read it in retrospect I'm going to bring you some some Choice",
    "start": "1628240",
    "end": "1633559"
  },
  {
    "text": "quotes um it's almost as if like herb had a crystal ball into the future so take a second to digest that",
    "start": "1633559",
    "end": "1641240"
  },
  {
    "text": "quote there no matter how fast processors uh get uh software consistently finds new",
    "start": "1641240",
    "end": "1649120"
  },
  {
    "text": "ways to eat up that extra speed and if you make a CPU 10 times as fast software",
    "start": "1649120",
    "end": "1655320"
  },
  {
    "text": "will find 10 times as much to do uh you know our applications haven't gotten any",
    "start": "1655320",
    "end": "1661360"
  },
  {
    "text": "faster you know if you open an app today it's uh you know a spiners Gore uh you know whilst waiting for things to load",
    "start": "1661360",
    "end": "1667799"
  },
  {
    "text": "and you know we're not waiting for things like networking and and and other Associated systems like this should be",
    "start": "1667799",
    "end": "1673960"
  },
  {
    "text": "quick you're just writing a few rows to a database it should be quick why is it so slow slow um So Gone other days where",
    "start": "1673960",
    "end": "1680640"
  },
  {
    "text": "you know you would be where you could see the capital expenditure uh in racking your own servers and data",
    "start": "1680640",
    "end": "1686640"
  },
  {
    "text": "centers uh you know we become accustomed to the world of infinite computer especially because we're running in the cloud uh and you know we've taken",
    "start": "1686640",
    "end": "1693559"
  },
  {
    "text": "advantage of it by writing distributed systems uh but you know they have not scaled uh massively well uh and you know",
    "start": "1693559",
    "end": "1700480"
  },
  {
    "text": "we've just shifted our complexity into running many many more machines uh you know you may have often heard the threads let's just throw more machines",
    "start": "1700480",
    "end": "1706480"
  },
  {
    "text": "at the problem or let's just make the machine bigger uh rather than look at why is our software so slow for the",
    "start": "1706480",
    "end": "1711600"
  },
  {
    "text": "machine that it is currently running on you know we've often ER towards scaling upwards and outwards because that is an",
    "start": "1711600",
    "end": "1716880"
  },
  {
    "text": "easy fix you just pay you know your favorite vendor a bit more money and you can get a faster instance probably up",
    "start": "1716880",
    "end": "1722159"
  },
  {
    "text": "and running in minutes um so her predicted in 2005 that the next Frontier",
    "start": "1722159",
    "end": "1727320"
  },
  {
    "text": "would be in the world of optimizing software and as practitioners uh you know we would be racing towards that",
    "start": "1727320",
    "end": "1732720"
  },
  {
    "text": "Frontier uh and that Frontier was declared to be concurrency for example um um and you know uh herb had a very",
    "start": "1732720",
    "end": "1740000"
  },
  {
    "text": "great great quote which is you know Engineers have now finally gred objects object-oriented programming and now",
    "start": "1740000",
    "end": "1746279"
  },
  {
    "text": "concurrency is the thing that we had to to Gro as an industry so Herb's thesis",
    "start": "1746279",
    "end": "1752200"
  },
  {
    "text": "was that Engineers uh would need to become very proficient at efficiency and performance optimizations to identify",
    "start": "1752200",
    "end": "1758679"
  },
  {
    "text": "places where concurrency uh could make your applications faster uh and her predicted that languages and paradigms",
    "start": "1758679",
    "end": "1766000"
  },
  {
    "text": "would lead to like uh heavy optimization work uh and that",
    "start": "1766000",
    "end": "1771120"
  },
  {
    "text": "will find new life and that will be the next Frontier um and I think in today's era of software uh that realization is",
    "start": "1771120",
    "end": "1778360"
  },
  {
    "text": "more true than ever but I think we have sort of had a gap for the last 15 years because in that meantime cloud has come",
    "start": "1778360",
    "end": "1784640"
  },
  {
    "text": "along uh and you know the cost of getting a a survey is now pennies now why does all of this matter",
    "start": "1784640",
    "end": "1792840"
  },
  {
    "text": "um cumulatively we use approximately 1% of worldwide power uh on data centers uh",
    "start": "1792840",
    "end": "1799799"
  },
  {
    "text": "now some may argue that 1% is not that large of a number uh and compared to",
    "start": "1799799",
    "end": "1805480"
  },
  {
    "text": "many other Industries uh and you know for example when you put it in comparison to the monetary or the",
    "start": "1805480",
    "end": "1811720"
  },
  {
    "text": "societal value that is being added it is not that significant uh but our compute",
    "start": "1811720",
    "end": "1817279"
  },
  {
    "text": "our demand for for compute is ever increasing and there is no reason why we should be",
    "start": "1817279",
    "end": "1823200"
  },
  {
    "text": "wasteful now there's a really fascinating report that I read a while back uh stated that 50% of greenhouse",
    "start": "1823200",
    "end": "1829399"
  },
  {
    "text": "gases um are due to infrastructure and software inefficiency in the data center",
    "start": "1829399",
    "end": "1834640"
  },
  {
    "text": "now that figure on our set seems really really high but I think you know you think about the software that runs in your organization and when you account",
    "start": "1834640",
    "end": "1841480"
  },
  {
    "text": "for like you know provisioning buffers and serialization overheads and runtime overheads and operating system overheads",
    "start": "1841480",
    "end": "1847559"
  },
  {
    "text": "and virtualization overheads the inefficiency does accumulate uh and we can see how that 50% comes",
    "start": "1847559",
    "end": "1853799"
  },
  {
    "text": "about so software so Hardware has gone much faster uh and you know we've got a lot more",
    "start": "1853799",
    "end": "1859240"
  },
  {
    "text": "throughput uh and what can we do in the world of software to take advantage of some of these optimizations now none of",
    "start": "1859240",
    "end": "1865000"
  },
  {
    "text": "these ideas are very revolutionary but you know uh in our multi-threaded applications uh you know we typically",
    "start": "1865000",
    "end": "1870799"
  },
  {
    "text": "followed or shared everything architecture uh you know we have our data in memory and we work on different",
    "start": "1870799",
    "end": "1875960"
  },
  {
    "text": "parts uh of the shared address space at the same time uh and naturally if two cores need to access the same piece of",
    "start": "1875960",
    "end": "1882240"
  },
  {
    "text": "data say you get a request writing uh uh writing a particular record uh and you",
    "start": "1882240",
    "end": "1887360"
  },
  {
    "text": "need to read uh from that particular record you're going to have to use some sort of synchronization primitive now for example with a thread",
    "start": "1887360",
    "end": "1893880"
  },
  {
    "text": "per Core Design uh your application is bound uh to a particular CPU thread uh",
    "start": "1893880",
    "end": "1899480"
  },
  {
    "text": "and uh you know you partition your data space so that each core is handling a different part of the address space and",
    "start": "1899480",
    "end": "1905679"
  },
  {
    "text": "this pattern requires a bit of effort to encode because your application needs to be aware and needs to partition this",
    "start": "1905679",
    "end": "1910919"
  },
  {
    "text": "particular data space and you got to have some form of request steering so that two requests for the same record at",
    "start": "1910919",
    "end": "1916559"
  },
  {
    "text": "the same time go to the same core uh effectively and whilst they would now run in serial by removing the",
    "start": "1916559",
    "end": "1922600"
  },
  {
    "text": "synchronization overhead reduces the amount of CPU contact switches now it's",
    "start": "1922600",
    "end": "1927639"
  },
  {
    "text": "not only about uh data though uh CPUs need to do contact switching for things like interrupts so uh for example when",
    "start": "1927639",
    "end": "1934480"
  },
  {
    "text": "networks Network packets come in uh and they need to do CPU interrupts uh you don't want to be doing those on the same",
    "start": "1934480",
    "end": "1941120"
  },
  {
    "text": "core where you're running your application because you'd have to do then some context switches so being able to have some sort sort of core Affinity",
    "start": "1941120",
    "end": "1948960"
  },
  {
    "text": "uh you know can really speed up your applications and reduce the amount of cash evictions that you're constantly",
    "start": "1948960",
    "end": "1954760"
  },
  {
    "text": "doing so in Linux you can use features like irq to pin Network request to particular cause uh which is really",
    "start": "1954760",
    "end": "1961320"
  },
  {
    "text": "handy uh there was a paper in 2019 uh that measured the impact of tail latency of doing this it's not very complicated",
    "start": "1961320",
    "end": "1967799"
  },
  {
    "text": "to set up uh you can find some commands on the internet uh maybe a bash BP that you can curl in uh you know if you're",
    "start": "1967799",
    "end": "1973559"
  },
  {
    "text": "feeling uh also inclined uh but there was there was a paper in 2019 which measured this for mcash and sphinx um",
    "start": "1973559",
    "end": "1982360"
  },
  {
    "text": "pinning particular CPU cores uh using irq and they found a 71% reduction in",
    "start": "1982360",
    "end": "1988159"
  },
  {
    "text": "tail latencies uh which is again pretty pretty significant now this model isn't",
    "start": "1988159",
    "end": "1994159"
  },
  {
    "text": "revolutionary at all uh you know maybe I'm like over a decade out of date uh but you know systems like enginex have",
    "start": "1994159",
    "end": "2000159"
  },
  {
    "text": "been doing this for ages uh and with massive benefit but as an industry we haven't really encoded this into",
    "start": "2000159",
    "end": "2007200"
  },
  {
    "text": "applications uh this kind of programming can be quite fiddly uh and you need to get deep for example into the networking",
    "start": "2007200",
    "end": "2013279"
  },
  {
    "text": "stack and you know your application stag and build a model for you know thread-based message passing um there's",
    "start": "2013279",
    "end": "2019000"
  },
  {
    "text": "some really fantastic work in the world of Open Source uh with systems like C star uh from the folks at SB um and they",
    "start": "2019000",
    "end": "2025960"
  },
  {
    "text": "have a really nice tutorial uh on how to get started um so if you a C++ user uh",
    "start": "2025960",
    "end": "2031519"
  },
  {
    "text": "definitely check that out now even in the world of uh IO uh",
    "start": "2031519",
    "end": "2037039"
  },
  {
    "text": "there has been some significant advancements so iing uh you know the world of asynchronous IO and Linux has",
    "start": "2037039",
    "end": "2043080"
  },
  {
    "text": "typically been quite complicated uh you know you can get into a world where for example buffers were full or by the time",
    "start": "2043080",
    "end": "2049960"
  },
  {
    "text": "uh you know the iio you were doing wasn't quite matching what the file system was expecting uh and you'd filled",
    "start": "2049960",
    "end": "2055480"
  },
  {
    "text": "your disk request cue uh which meant that your asynchronous call had now become accidentally synchronous uh and",
    "start": "2055480",
    "end": "2061720"
  },
  {
    "text": "there's a lot of memory overhead as well with asynchronous IO um so iio uring provides a new inter face um and at the",
    "start": "2061720",
    "end": "2068560"
  },
  {
    "text": "core it you know looks quite simple there are two cues you have you submit your requests into the submission queue",
    "start": "2068560",
    "end": "2074878"
  },
  {
    "text": "and you read your results from the completion Quee uh so you've essentially got two ring buffers uh and you keep",
    "start": "2074879",
    "end": "2079960"
  },
  {
    "text": "going round and round and round uh and uh you know on the on the outset uh it looks quite",
    "start": "2079960",
    "end": "2085960"
  },
  {
    "text": "simple now this has had a dramatic effect though on the industry now like all merge into the main line within the",
    "start": "2085960",
    "end": "2092638"
  },
  {
    "text": "within the Linux kernel um so here's here's some analysis that was done um so here's two charts of random reads",
    "start": "2092639",
    "end": "2099440"
  },
  {
    "text": "and random wrs for 4 kiloby block size uh and I was talking about random reads and wrs in the context of B trees a",
    "start": "2099440",
    "end": "2105280"
  },
  {
    "text": "little bit earlier um so if we're using standard Linux async iio operations",
    "start": "2105280",
    "end": "2110560"
  },
  {
    "text": "there's a cap on the number of operations we can do before we are starved um and look at that chart on the",
    "start": "2110560",
    "end": "2116000"
  },
  {
    "text": "bottom there uh iio urine compared to uh standard Linux iio is a order of",
    "start": "2116000",
    "end": "2121240"
  },
  {
    "text": "magnitude difference now just over the last couple weeks lib UV uh which is a widely used",
    "start": "2121240",
    "end": "2128760"
  },
  {
    "text": "uh library for um asnc iio added iur ring support and I love this comment",
    "start": "2128760",
    "end": "2133960"
  },
  {
    "text": "from the PO request author which is performance looks great an ax increase in throughput has been observed it's",
    "start": "2133960",
    "end": "2140200"
  },
  {
    "text": "almost like nonchalant um but I love it uh now it's always important to be wary about benchmarks because benchmarks can",
    "start": "2140200",
    "end": "2146839"
  },
  {
    "text": "tell whatever story you want them to tell uh but it's still like you know any sort of multiply Improvement is a great",
    "start": "2146839",
    "end": "2152440"
  },
  {
    "text": "Improvement for users of lib UV and this is work that is happening in the community right now this was only a",
    "start": "2152440",
    "end": "2158079"
  },
  {
    "text": "couple weeks back um and even I uring is continuing to evolve uh there's an",
    "start": "2158079",
    "end": "2163200"
  },
  {
    "text": "active effort in for example making network iio uh go where I you ring uh",
    "start": "2163200",
    "end": "2168280"
  },
  {
    "text": "and for that to have zero copy uh to extract even more",
    "start": "2168280",
    "end": "2173520"
  },
  {
    "text": "performance now moving away from like specific features that are like in in specific languages and and the kernel uh",
    "start": "2173520",
    "end": "2180319"
  },
  {
    "text": "the world of programming languages uh itself has seen very rapid development uh to really take advantage of",
    "start": "2180319",
    "end": "2186760"
  },
  {
    "text": "development close to the metal uh you know you'd usually have to resort to using C or C++ which is difficult and",
    "start": "2186760",
    "end": "2194200"
  },
  {
    "text": "eror prone and you know you've got memory leaking everywhere and you know is difficult and I could see why",
    "start": "2194200",
    "end": "2199400"
  },
  {
    "text": "Engineers would want to avoid that but with the rapid rise of program languages like rust or like you know even Zig if",
    "start": "2199400",
    "end": "2206040"
  },
  {
    "text": "you've not checked that out it's it's really it's a really really cool program language uh the world of systems programming has become even more safer",
    "start": "2206040",
    "end": "2213480"
  },
  {
    "text": "and the tools around it have become really really delightful the barrier to entry uh for these program languages are",
    "start": "2213480",
    "end": "2219920"
  },
  {
    "text": "much much lower compared to compared to C and C++ and you know picking on Rust",
    "start": "2219920",
    "end": "2225079"
  },
  {
    "text": "specifically I'm not a rust Fanboy but you know uh I have a very strong admiration uh you know it's not a niche",
    "start": "2225079",
    "end": "2231040"
  },
  {
    "text": "technology for hobbyists anymore you know organizations like Amazon and Google and Microsoft have gone all in uh",
    "start": "2231040",
    "end": "2238000"
  },
  {
    "text": "and they're using it in core components like Windows like ec2 like S3 and",
    "start": "2238000",
    "end": "2243960"
  },
  {
    "text": "more now if you do have the opportunity to to to check this out uh you know have",
    "start": "2243960",
    "end": "2249200"
  },
  {
    "text": "a go with rust it's it's a really fantastic program language um for example I've worked with uh python I've",
    "start": "2249200",
    "end": "2255680"
  },
  {
    "text": "written C modules in in Python and I found it really really difficult to to get right and and package uh but you",
    "start": "2255680",
    "end": "2262359"
  },
  {
    "text": "know Russ has some really nice bindings with P3 and sort of the the ecosystem maturity uh and the developer tooling is",
    "start": "2262359",
    "end": "2270000"
  },
  {
    "text": "really quite phenomenal you can get up and running really really quickly which means you don't have to worry about the fidly part of of uh Packaging and",
    "start": "2270000",
    "end": "2276839"
  },
  {
    "text": "building wheels and eggs and and and stuff like that in Python um the ergonomics are much better now there was",
    "start": "2276839",
    "end": "2284280"
  },
  {
    "text": "some research in 2017 on the Energy Efficiency around different programming languages and they used a data",
    "start": "2284280",
    "end": "2291400"
  },
  {
    "text": "processing task uh for this particular particular test and then rank different programming languages uh for energy and",
    "start": "2291400",
    "end": "2297720"
  },
  {
    "text": "time Usage Now this isn't a programming language debate maybe we can Juke it out in the in the foyer uh if you're so",
    "start": "2297720",
    "end": "2303440"
  },
  {
    "text": "inclined uh but it's interesting to see how different program languages compare so for example python my my darling love",
    "start": "2303440",
    "end": "2310119"
  },
  {
    "text": "child uh you know is 75 times slower uh than writing something in C or rust uh",
    "start": "2310119",
    "end": "2315560"
  },
  {
    "text": "and that is that is just such a massive Delta now many moons ago I used to work",
    "start": "2315560",
    "end": "2321480"
  },
  {
    "text": "for a company that dealt with public transit data uh so think buses and trains and and you know all other forms",
    "start": "2321480",
    "end": "2327319"
  },
  {
    "text": "of public transit and I'm going to give a pretty benign example uh you know we had millions of time stamps uh that we",
    "start": "2327319",
    "end": "2334079"
  },
  {
    "text": "need to pause and process and this was happening on the hot code path and all these were ISO as61 timestamps uh so",
    "start": "2334079",
    "end": "2340800"
  },
  {
    "text": "there was no variation to worry about and we were just using naive python date",
    "start": "2340800",
    "end": "2346000"
  },
  {
    "text": "passing libraries you know the stuff that's included in the standard lib uh and we Chang this out to a c-based",
    "start": "2346000",
    "end": "2351079"
  },
  {
    "text": "library uh you know a third party C based library and saw a 10x speed up a 10x speed up in this hot path just for",
    "start": "2351079",
    "end": "2357800"
  },
  {
    "text": "pausing a date string um and that's how I really got interested in this space and efficiency uh this particular space",
    "start": "2357800",
    "end": "2365760"
  },
  {
    "text": "uh of of compute efficiency it's quite a minor change when you look at it in the outset and but when you're doing this",
    "start": "2365760",
    "end": "2372319"
  },
  {
    "text": "processing Millions if not billions of times per second uh at runtime uh you know if you truly understand the",
    "start": "2372319",
    "end": "2378520"
  },
  {
    "text": "constraints of your system uh you can make make some wicked fast improvements now I had a go over the",
    "start": "2378520",
    "end": "2386040"
  },
  {
    "text": "last uh couple weeks and months on uh trying to put this library to rust just to you know practice what I preach and",
    "start": "2386040",
    "end": "2392160"
  },
  {
    "text": "uh you know uh uh you know be able to come up here and say okay actually you should really do this uh uh to get up",
    "start": "2392160",
    "end": "2398720"
  },
  {
    "text": "and running uh so again if you've written C pythons in uh C modules in Python uh you probably uh have",
    "start": "2398720",
    "end": "2405520"
  },
  {
    "text": "recognized how difficult it is to to get right there a lot of foot guns managing the global interpreter lock and C is an",
    "start": "2405520",
    "end": "2411200"
  },
  {
    "text": "absolute nightmare managing uh and translating objects between Python and C is an absolute nightmare uh and dealing",
    "start": "2411200",
    "end": "2416920"
  },
  {
    "text": "with pi object all over the place again a massive nightmare uh and then you got to figure out the magic incantation of",
    "start": "2416920",
    "end": "2422880"
  },
  {
    "text": "your setup tools and your make file to get it all right and yeah it's just an absolute nightmare uh but in Russ for",
    "start": "2422880",
    "end": "2428880"
  },
  {
    "text": "example there's this really fantastic tool called Maturin uh which is super nice ux you install it using pip uh and",
    "start": "2428880",
    "end": "2435240"
  },
  {
    "text": "you can call mature and new and you can have a package up and running and then you write your code uh you know this is",
    "start": "2435240",
    "end": "2441119"
  },
  {
    "text": "the only bit of code in this particular presentation uh we're not going to do a rust 101 or anything like that but hopefully the code is relatively easy to",
    "start": "2441119",
    "end": "2447880"
  },
  {
    "text": "follow uh you know we've got a library called it R ISO 8601 Library um the",
    "start": "2447880",
    "end": "2453880"
  },
  {
    "text": "that's the name of the module and we've got a particular function that you can call from python uh which is the PA",
    "start": "2453880",
    "end": "2459760"
  },
  {
    "text": "datetime function and all we need to do is to fill in the middle right so in the middle there uh we're going to be uh you",
    "start": "2459760",
    "end": "2466079"
  },
  {
    "text": "know if you have a particular time stamp I'm sure pretty much all of us in the room can figure out how to pause this particular time stamp you extract all",
    "start": "2466079",
    "end": "2472160"
  },
  {
    "text": "the number components and put it into the python representation uh and whilst keeping",
    "start": "2472160",
    "end": "2477800"
  },
  {
    "text": "information about the time zone so there is some implementation there uh the code is pretty benign it's just walking",
    "start": "2477800",
    "end": "2483119"
  },
  {
    "text": "through the string uh and you know pausing it into into its numerical components and building up the python",
    "start": "2483119",
    "end": "2489760"
  },
  {
    "text": "datetime object um and if we get some malformed input we can raise a python",
    "start": "2489760",
    "end": "2495440"
  },
  {
    "text": "stack Trace uh and exception uh information as well now once we have all of that",
    "start": "2495440",
    "end": "2502440"
  },
  {
    "text": "implementation we can use Maturin for example to build a python wheel and again this is really really simple you",
    "start": "2502440",
    "end": "2507680"
  },
  {
    "text": "run this one command I've not had to touch a make fire I've not had to touch setup or dis details um it's really",
    "start": "2507680",
    "end": "2513680"
  },
  {
    "text": "really easy um and this is ready to to go on piie uh or you've got a wheel that",
    "start": "2513680",
    "end": "2518720"
  },
  {
    "text": "you can distribute in your wheelhouse uh and you know send to your other Engineers that they can use as a library",
    "start": "2518720",
    "end": "2524640"
  },
  {
    "text": "uh We've not had to do any heavy lifting here um and you know if you call a python interpreter you can quite",
    "start": "2524640",
    "end": "2530560"
  },
  {
    "text": "literally import that module call the function and uh you are ready to go and now you are using rust and python",
    "start": "2530560",
    "end": "2536640"
  },
  {
    "text": "seamlessly uh and again we've not had to do any heavy lifting so I'm not advocating that you",
    "start": "2536640",
    "end": "2542720"
  },
  {
    "text": "know we uh stop everything that we're doing now and switch to writing all of our software in C or rust or Zig or or",
    "start": "2542720",
    "end": "2550040"
  },
  {
    "text": "what have you um you know there is an inflection point and you know typically it takes a long amount of time for",
    "start": "2550040",
    "end": "2555640"
  },
  {
    "text": "organizations to realize this uh you know for uh to start with we optimize",
    "start": "2555640",
    "end": "2560760"
  },
  {
    "text": "for development and organizational costs uh you know we want to get something out there as quick as possible uh and you",
    "start": "2560760",
    "end": "2566920"
  },
  {
    "text": "know you know see that if it'll generate revenue or or what have you um and",
    "start": "2566920",
    "end": "2572000"
  },
  {
    "text": "whilst we are doing that there is an inflection point where the system's runtime cost is getting uh linear or if",
    "start": "2572000",
    "end": "2577880"
  },
  {
    "text": "not exponentially higher um so there is a runtime cost uh that we need to consider especially as our systems",
    "start": "2577880",
    "end": "2583800"
  },
  {
    "text": "continue to scale and Hardware has changed really quite significantly and there was a big focus in the world of",
    "start": "2583800",
    "end": "2590319"
  },
  {
    "text": "software uh with new Frameworks and tools to take advantage so let's go",
    "start": "2590319",
    "end": "2595480"
  },
  {
    "text": "through a few of those very very quickly uh you know in even even in uh in some of our mature ecosystems uh you know in",
    "start": "2595480",
    "end": "2602559"
  },
  {
    "text": "Java for example uh there has been a big focus on language features um but the one that I've been most excited about is",
    "start": "2602559",
    "end": "2608680"
  },
  {
    "text": "is the zgc garbage collector um and you know it gives sub millisecond por times",
    "start": "2608680",
    "end": "2615000"
  },
  {
    "text": "uh you know Gob collection is a you know a significant time consumer within your applications it can affect your tail",
    "start": "2615000",
    "end": "2620760"
  },
  {
    "text": "latencies and and uh and like you know make your systems feel slower uh but zgc",
    "start": "2620760",
    "end": "2626960"
  },
  {
    "text": "some millisecond pause times no matter how large your HEAP size is even if it's multiple terabytes um and this isn't",
    "start": "2626960",
    "end": "2632319"
  },
  {
    "text": "some distant reality this is production ready today uh with support in Java 17",
    "start": "2632319",
    "end": "2638559"
  },
  {
    "text": "um so you know if you're running for example like a Cassandra or a CFA or you know any of these systems that rely on",
    "start": "2638559",
    "end": "2644920"
  },
  {
    "text": "Java if you're writing Java applications yourself Java systems and services definitely check out zgc it is",
    "start": "2644920",
    "end": "2650599"
  },
  {
    "text": "production ready we're running it in production and you know we found you know submillisecond pause times I",
    "start": "2650599",
    "end": "2655880"
  },
  {
    "text": "thought I'd never see it uh but it's it's absolutely phenomenal we're very close to a world where we have basically",
    "start": "2655880",
    "end": "2661880"
  },
  {
    "text": "nearly pauseless Java um and again like you know even basic optimizations uh",
    "start": "2661880",
    "end": "2667559"
  },
  {
    "text": "that we can do in our applications so this is an example from our our production workload um you know this is",
    "start": "2667559",
    "end": "2674359"
  },
  {
    "text": "an optimization we did uh to the jmx exporter uh where which we've run",
    "start": "2674359",
    "end": "2680400"
  },
  {
    "text": "alongside Kafka uh this is an exporter that exports Prometheus metrics uh so metrics into our Telemetry system um and",
    "start": "2680400",
    "end": "2687119"
  },
  {
    "text": "we use tools like Java flight recorder and Mission Control uh to find out where the CPU was being spent and we found",
    "start": "2687119",
    "end": "2694160"
  },
  {
    "text": "that a significant amount of CPU was being spent in a in a code path which was just doing a bunch of redundant",
    "start": "2694160",
    "end": "2699480"
  },
  {
    "text": "string comparisons uh so we put in a bit of a hashmap we traded off a little bit of memory I think a couple megabytes of",
    "start": "2699480",
    "end": "2705480"
  },
  {
    "text": "memory and we were able to Har our CFA CPU utilization uh which means that we have much less garbage being created uh",
    "start": "2705480",
    "end": "2713040"
  },
  {
    "text": "and you know much more CPU overhead uh for uh you know for to be able to scale",
    "start": "2713040",
    "end": "2718319"
  },
  {
    "text": "out our actual CFA application rather than spending that time in redundant uh metrics collecting now flight recorder",
    "start": "2718319",
    "end": "2725640"
  },
  {
    "text": "comes embedded with JRE 11 onwards so there is no reason to not have that available uh nodejs for example has a",
    "start": "2725640",
    "end": "2732480"
  },
  {
    "text": "dedicated performance team uh and they're doing some fantastic work to perform uh to tune performance for uh",
    "start": "2732480",
    "end": "2738760"
  },
  {
    "text": "underlying apis that Engineers rely on so example reading anas encoded file uh",
    "start": "2738760",
    "end": "2743800"
  },
  {
    "text": "has seen a large throughput jump uh in node 18 and even python is getting a massive",
    "start": "2743800",
    "end": "2749359"
  },
  {
    "text": "speed up as well uh there's a small task force uh you know being run under the Microsoft umbrella and led by the bdfl",
    "start": "2749359",
    "end": "2756520"
  },
  {
    "text": "of python G ofan rosum uh to tackle some of the performance bottlenecks in in Python um and you know you can take",
    "start": "2756520",
    "end": "2763359"
  },
  {
    "text": "advantage of all of this as well like you know there's a little bit of work for you to do if you're on Python 3 in handling you know maybe a deprecated",
    "start": "2763359",
    "end": "2770240"
  },
  {
    "text": "library or two uh but you can introduce this in your programming tool chain as well and take advantage of these",
    "start": "2770240",
    "end": "2775800"
  },
  {
    "text": "optimizations in production now in uh you know the company that I work for we write all of",
    "start": "2775800",
    "end": "2781400"
  },
  {
    "text": "our systems in go and this is something that we expose to all of our Engineers we give them access to all of the profiling tools these profiling tools",
    "start": "2781400",
    "end": "2788480"
  },
  {
    "text": "run with very small amount of overhead uh in your production applications there's no reason why uh you know",
    "start": "2788480",
    "end": "2794240"
  },
  {
    "text": "Engineers shouldn't be able to access these tools and and take advantage of like understanding where the systems are",
    "start": "2794240",
    "end": "2800319"
  },
  {
    "text": "spending CPU CPU time we have even have an incentive we have like for example slack channels and and you know",
    "start": "2800319",
    "end": "2806760"
  },
  {
    "text": "incentives where like you know uh you know different leaders come in and uh you know applaud efforts to uh improve",
    "start": "2806760",
    "end": "2813480"
  },
  {
    "text": "optimization and you know of course there is an incentive for us because uh you know it means that we get to reduce",
    "start": "2813480",
    "end": "2819240"
  },
  {
    "text": "our costs but it also means that uh you know we have a bit more mechanical Sympathy for the computers and the",
    "start": "2819240",
    "end": "2824640"
  },
  {
    "text": "infrastructure that we're running on and ultimately that leads to less complexity in our systems uh the least complex",
    "start": "2824640",
    "end": "2831240"
  },
  {
    "text": "systems are the ones that run on the minimal number of machines now even if you have an",
    "start": "2831240",
    "end": "2836960"
  },
  {
    "text": "existing application where for example you might not be able to add profiling tools uh you know in the world of the",
    "start": "2836960",
    "end": "2842880"
  },
  {
    "text": "kernel and you know with Technologies like ebpf BPF uh you know you can leverage uh kernel level tracing uh",
    "start": "2842880",
    "end": "2850920"
  },
  {
    "text": "assuming that you're on Linux 4.1 and above and if you're not then please definitely upgrade um my favorite Swiss",
    "start": "2850920",
    "end": "2857880"
  },
  {
    "text": "army knife is uh BPF Trace um and I even",
    "start": "2857880",
    "end": "2862920"
  },
  {
    "text": "like to use it alongside other language specific profilers uh because it gives really really good insight into CIS",
    "start": "2862920",
    "end": "2869800"
  },
  {
    "text": "cores into the file system and and and a bunch of other areas and all of the different arrows are different tools",
    "start": "2869800",
    "end": "2875720"
  },
  {
    "text": "tools that you can use to probe different parts of your operating system sty so there is literally no excuse uh",
    "start": "2875720",
    "end": "2882960"
  },
  {
    "text": "you know we can go into every single particular area of uh the kernel and our application stack to get a solid",
    "start": "2882960",
    "end": "2889800"
  },
  {
    "text": "understanding of where CPU time and and compute time and Hardware time is being spent now if you're a fan of racing um",
    "start": "2889800",
    "end": "2897040"
  },
  {
    "text": "hopefully this is a fairly familiar face uh this is Jackie Stewart um who coined the term around mechanical sympathy um",
    "start": "2897040",
    "end": "2904520"
  },
  {
    "text": "and in the context of motor race um it was about caring and understanding you know man and machine uh to extract the",
    "start": "2904520",
    "end": "2912520"
  },
  {
    "text": "best performance uh it's a combination of human and machine sort of coming together now with the shifts in hardware",
    "start": "2912520",
    "end": "2919319"
  },
  {
    "text": "and and software in general there is a cultural shift happening in how we write uh software even rewriting core software",
    "start": "2919319",
    "end": "2926880"
  },
  {
    "text": "uh to take better advantage of the hardware um there was some incredible work from Facebook for example uh adding",
    "start": "2926880",
    "end": "2932319"
  },
  {
    "text": "a new storage engine uh you know uh for example with mySQL rocks uh and we can",
    "start": "2932319",
    "end": "2938359"
  },
  {
    "text": "all play a part in you know uh in that shift uh by evaluating systems that we",
    "start": "2938359",
    "end": "2943920"
  },
  {
    "text": "run uh and understanding how much power there is in modern",
    "start": "2943920",
    "end": "2949040"
  },
  {
    "text": "Computing now throughout this entire presentation I've not mentioned the word Ai and this will be the only slide on AI",
    "start": "2949040",
    "end": "2955319"
  },
  {
    "text": "um and I'm not going to go deep at any moment but you know generative AI can't avoid it uh it's captur the minds of",
    "start": "2955319",
    "end": "2961559"
  },
  {
    "text": "masses uh and one massive discussion point right now is the sh cost of a",
    "start": "2961559",
    "end": "2967280"
  },
  {
    "text": "compute uh used to train and serve these models to customers and there's a lot of",
    "start": "2967280",
    "end": "2972680"
  },
  {
    "text": "low hanging fruit in this particular space as well uh so llama if you've not heard of it before is a is a model by",
    "start": "2972680",
    "end": "2978680"
  },
  {
    "text": "the folks at mattera uh and there are some open source implementations um in C++ uh that a bunch of folks are",
    "start": "2978680",
    "end": "2984680"
  },
  {
    "text": "building um and there was a really excellent pull request that I came across a couple weeks back um where they",
    "start": "2984680",
    "end": "2990520"
  },
  {
    "text": "introduced map uh which is very old technology like you know probably a lot of people in the audience with systems",
    "start": "2990520",
    "end": "2995640"
  },
  {
    "text": "level thinking I'm like yep that sounds so obvious um but it led to a 100x Improvement in low times and half as",
    "start": "2995640",
    "end": "3002280"
  },
  {
    "text": "much memory consumed at run time uh and this is relatively modern software you know llama you know was written this",
    "start": "3002280",
    "end": "3008720"
  },
  {
    "text": "year uh you know it was written relatively recently so there's a lot of low hanging fruit even in systems that",
    "start": "3008720",
    "end": "3015040"
  },
  {
    "text": "are being written today uh and you know even old tricks like map and and memory",
    "start": "3015040",
    "end": "3020200"
  },
  {
    "text": "alignment and thread per core can still yield massive benefits now now this is a bit of a hot",
    "start": "3020200",
    "end": "3026880"
  },
  {
    "text": "take uh so don't mob me um you know most of the systems that we build in this room are glorified data processors uh",
    "start": "3026880",
    "end": "3032640"
  },
  {
    "text": "you know we take some data on one end we transform a little and we flunk it into another end uh add INF for uh and",
    "start": "3032640",
    "end": "3038920"
  },
  {
    "text": "there's a lot of low hanging fruit in that layer as well uh you know if you do a lot of Json pausing uh there's been a",
    "start": "3038920",
    "end": "3044640"
  },
  {
    "text": "really fantastic library that has been introduced that uh uses simd uh single instructure multiple data uh to make",
    "start": "3044640",
    "end": "3050960"
  },
  {
    "text": "Json pausing even even quicker uh you know there's a lot of screws being turned a lot of magnifying glasses being",
    "start": "3050960",
    "end": "3057760"
  },
  {
    "text": "being uh being placed on various different components of our application stack to see where we can extract more",
    "start": "3057760",
    "end": "3063720"
  },
  {
    "text": "performance so uh to very quickly summarize uh let's go back to my statement at the beginning of the talk",
    "start": "3063720",
    "end": "3070480"
  },
  {
    "text": "uh many of the systems we rely on uh were built for an era where Hardware was different where there were bottlenecks",
    "start": "3070480",
    "end": "3076799"
  },
  {
    "text": "in Hardware like you know your dis wouldn't get any faster or your network was constrained uh the bottleneck a",
    "start": "3076799",
    "end": "3082839"
  },
  {
    "text": "decade ago or like over a decade ago was like you know in network interfaces and hard drives and Main memory but today",
    "start": "3082839",
    "end": "3089440"
  },
  {
    "text": "Hardware has gotten so freaking quick uh and the bottleneck is firmly uh without",
    "start": "3089440",
    "end": "3094799"
  },
  {
    "text": "shadow of a doubt in the software that we write and Hardware continues to accelerate even quicker um and you know",
    "start": "3094799",
    "end": "3100920"
  },
  {
    "text": "these optimizations are now staring at us right in the face um and in many of our organizations we put up faux",
    "start": "3100920",
    "end": "3107079"
  },
  {
    "text": "barriers uh you know maybe you have an Ops person who's very stubborn and says we must use Java 8 Java 8 only until you",
    "start": "3107079",
    "end": "3113640"
  },
  {
    "text": "know the day that I die um um but this room is full of smart senior leaders and Architects uh and we have the perfect",
    "start": "3113640",
    "end": "3120839"
  },
  {
    "text": "audience to lead and influence a lot of these changes uh you know we're leaving all of these optimizations on the table",
    "start": "3120839",
    "end": "3127280"
  },
  {
    "text": "for organizational reasons which is quite silly uh these improvements are in production and LTS systems uh and there",
    "start": "3127280",
    "end": "3134440"
  },
  {
    "text": "is very little reason to be stuck on Old Java or python or or node versions there",
    "start": "3134440",
    "end": "3139799"
  },
  {
    "text": "are small things that we can do we can we can introduce to our organizations to yield massive improvements",
    "start": "3139799",
    "end": "3146839"
  },
  {
    "text": "now we've seen that there are tools out there that allow us to to to keep pace and these are features being introduced",
    "start": "3146839",
    "end": "3153599"
  },
  {
    "text": "at every level of the stack uh you know from data serialization from Network hops from like you know kernel level",
    "start": "3153599",
    "end": "3159960"
  },
  {
    "text": "features programming languages even programming language uh features for existing programming languages there's",
    "start": "3159960",
    "end": "3166640"
  },
  {
    "text": "optimizations uh being being done at all levels of the stack but it is up to us to take advantage you know for example",
    "start": "3166640",
    "end": "3172920"
  },
  {
    "text": "if you're using older libraries uh or like you know older like language versions you know there is some work",
    "start": "3172920",
    "end": "3178359"
  },
  {
    "text": "that we need to do in order to get to the latest and greatest but these are things that are production ready and there is legitimately no excuse to you",
    "start": "3178359",
    "end": "3186079"
  },
  {
    "text": "know start tackling some of these things and hopefully that will allow us to build faster more efficient applications",
    "start": "3186079",
    "end": "3191960"
  },
  {
    "text": "or richer applications you know uh I long for the day where you never ever have to look at a spinner uh ever uh I",
    "start": "3191960",
    "end": "3198640"
  },
  {
    "text": "think that will be an absolute glorious day so by keeping Pace we can use less compute time less energy and less",
    "start": "3198640",
    "end": "3205240"
  },
  {
    "text": "resources for the same level of output and we can build richer systems as a",
    "start": "3205240",
    "end": "3210359"
  },
  {
    "text": "result and with that thank you so much for listening um and I hope you have a fantastic rest of the [Applause]",
    "start": "3210359",
    "end": "3219869"
  },
  {
    "text": "[Music]",
    "start": "3220450",
    "end": "3226079"
  },
  {
    "text": "conference",
    "start": "3226079",
    "end": "3229079"
  }
]