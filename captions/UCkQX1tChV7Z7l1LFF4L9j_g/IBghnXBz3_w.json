[
  {
    "text": "so it's aeneas delivery and why my experience in full works the works",
    "start": "10250",
    "end": "16770"
  },
  {
    "text": "generally has large enterprise clients and the process in large enterprise clients is basically you have this like",
    "start": "16770",
    "end": "25769"
  },
  {
    "text": "agile thing and that happens in the engineering part of the organization and you know anyone work in a corporation or",
    "start": "25769",
    "end": "34350"
  },
  {
    "text": "a company of larger than a thousand people ok so that's about half of you and has anyone been subject to the agile",
    "start": "34350",
    "end": "41460"
  },
  {
    "text": "transformation then oh yes loads of you ok so you know how this case some senior",
    "start": "41460",
    "end": "47700"
  },
  {
    "text": "dude decides we're going to go a j'l and then they hire loads of certified scrum",
    "start": "47700",
    "end": "53340"
  },
  {
    "text": "masters and everyone goes on the 2-day scrum course and suddenly you're all taking orders standing up rather than",
    "start": "53340",
    "end": "59370"
  },
  {
    "text": "sitting down and that huge backlog of work that you can never possibly complete is now prioritized and",
    "start": "59370",
    "end": "64470"
  },
  {
    "text": "estimated and now we're agile tik yeh familiar to anyone hopefully yes even",
    "start": "64470",
    "end": "72780"
  },
  {
    "text": "hands going up even just before lunch so that's obviously resonated with a few of you so even if you manage to do the",
    "start": "72780",
    "end": "78450"
  },
  {
    "text": "whole agile thing and you're doing you know iterations with analysis and development and testing and you know",
    "start": "78450",
    "end": "83880"
  },
  {
    "text": "nice showcases of working functionality every couple of weeks what typically happens is that stuff doesn't actually",
    "start": "83880",
    "end": "89340"
  },
  {
    "text": "go live or I said let's calm down everyone what happens is when the project is finished that stuff gets",
    "start": "89340",
    "end": "94979"
  },
  {
    "text": "tossed over the wall to testing and then they go and log lots of defects and then",
    "start": "94979",
    "end": "100079"
  },
  {
    "text": "you have to remember what you were doing when those defects were logged and try and fix them and then at the end of that process assuming you actually get time",
    "start": "100079",
    "end": "106229"
  },
  {
    "text": "to fix some of those bugs the whole thing gets tossed over the walls the operations team you then have to try and make it work and that's usually when you",
    "start": "106229",
    "end": "112530"
  },
  {
    "text": "find out that it works great with ten users but not so great with 10,000 users which you were you know supposed to be",
    "start": "112530",
    "end": "119219"
  },
  {
    "text": "getting and a hundred thousand users or a million users that you actually end up getting and then you spend the whole weekend trying to make the system work",
    "start": "119219",
    "end": "124710"
  },
  {
    "text": "and trying to take bits of it down so the rest of it will work and so forth and this is very common on unpleasant",
    "start": "124710",
    "end": "132120"
  },
  {
    "text": "experience so typically you know as a developer in the room and developers well oh okay",
    "start": "132120",
    "end": "139020"
  },
  {
    "text": "anyone who's a tester any okay couple of",
    "start": "139020",
    "end": "144030"
  },
  {
    "text": "people at the back I noticed yeah and report developer testers yeah thanks",
    "start": "144030",
    "end": "152420"
  },
  {
    "text": "good job and any operations people ok few view and even at the front okay",
    "start": "152420",
    "end": "159239"
  },
  {
    "text": "excellent so welcome to you guys so hopefully everyone is familiar with this as an",
    "start": "159239",
    "end": "165510"
  },
  {
    "text": "engineering as engineering people as developers you try and get stuff dev complete right that the dirty secret of",
    "start": "165510",
    "end": "172200"
  },
  {
    "text": "IT is that dev complete is essentially a meaningless term what actually matters is does it work in production with",
    "start": "172200",
    "end": "178920"
  },
  {
    "text": "realistic datasets under realistic load and when things go wrong and that is very far from def complete and this part",
    "start": "178920",
    "end": "185040"
  },
  {
    "text": "from dev complete to actually delivering value is often called the last mile which is kind of a dumb term right",
    "start": "185040",
    "end": "191400"
  },
  {
    "text": "because it's only at this point that your stuff actually starts delivering about you right that's when you start getting a return on your investment",
    "start": "191400",
    "end": "197489"
  },
  {
    "text": "that's the first month that's the beginning of the life of your system and then hopefully if you've done something right then your system will live for a",
    "start": "197489",
    "end": "203790"
  },
  {
    "text": "reasonably long time and that will be the bulk of the consumption of resources and worker on the part of everyone actually building the system so I've",
    "start": "203790",
    "end": "212010"
  },
  {
    "text": "worked in this environment it sucks it's a stupid way to develop software and we shouldn't do it anymore and that's",
    "start": "212010",
    "end": "218810"
  },
  {
    "text": "basically why me and a bunch of other people in Thor works and indeed a bunch",
    "start": "218810",
    "end": "224579"
  },
  {
    "text": "of other people in many other areas independently came up with these ideas can we do better yes we can do better if",
    "start": "224579",
    "end": "231989"
  },
  {
    "text": "you go to code or flickr.com scroll down to the bottom you can see they're deploying to production multiple times a",
    "start": "231989",
    "end": "237570"
  },
  {
    "text": "day Facebook deploys once a day XE deploy multiple times a day Amazon deploy multiple times a day yeah",
    "start": "237570",
    "end": "243810"
  },
  {
    "text": "this is actually very common these days for web-based systems to be deploying",
    "start": "243810",
    "end": "249840"
  },
  {
    "text": "multiple times a day so yes we can do better I was kind of trying to come up with a title for the book and I'm really",
    "start": "249840",
    "end": "256530"
  },
  {
    "text": "bad at names I was once in a bank all the chutney ferrets and and so I was",
    "start": "256530",
    "end": "261570"
  },
  {
    "text": "kind of the year the book was published was the ten year anniversary of the agile manifesto and I read the ad I",
    "start": "261570",
    "end": "266849"
  },
  {
    "text": "manifest you know and you know everyone knows that this over that but there's also ten principles and the first principle of",
    "start": "266849",
    "end": "273180"
  },
  {
    "text": "the agile manifesto is this and I read this and I kind of won well yes obviously this is this is why we all get",
    "start": "273180",
    "end": "278460"
  },
  {
    "text": "out of bed in the morning right whatever we do and so this is a really good title for the book so how do we achieve",
    "start": "278460",
    "end": "284659"
  },
  {
    "text": "continuous delivery this is how we do it hopefully you're testing your software",
    "start": "284659",
    "end": "292439"
  },
  {
    "text": "who has automated tests that they run they actually find real bugs okay that's",
    "start": "292439",
    "end": "297599"
  },
  {
    "text": "a decent proportion of you maybe two thirds so hopefully we run those pretty",
    "start": "297599",
    "end": "302879"
  },
  {
    "text": "often ideally every check-in but how many people are testing their configuration changes if they change you",
    "start": "302879",
    "end": "309000"
  },
  {
    "text": "know the number of threads in their database connection or their Apache configuration how often do we test that",
    "start": "309000",
    "end": "314159"
  },
  {
    "text": "in the same way that we test our code anyone doing that okay much fewer of you how often are we testing database schema",
    "start": "314159",
    "end": "321779"
  },
  {
    "text": "changes and automating database schema change rollout any of you okay few of",
    "start": "321779",
    "end": "327270"
  },
  {
    "text": "you again much less of you any change to your system can break your system I can bring break I can bring your system down",
    "start": "327270",
    "end": "333539"
  },
  {
    "text": "much more quickly by changing in Apache setting than I can by introducing a bug in the code it takes ages to get a bug",
    "start": "333539",
    "end": "340110"
  },
  {
    "text": "in the code life right but changing the perhaps you setting bang there goes your system down so why aren't we testing",
    "start": "340110",
    "end": "347129"
  },
  {
    "text": "those changes in the same way that we're testing our code changes it's nuts any change to our system should be tested and validated in the same way as",
    "start": "347129",
    "end": "353669"
  },
  {
    "text": "code changes and the idea is with continuous livery is that we're performing those validations all the",
    "start": "353669",
    "end": "359400"
  },
  {
    "text": "time and we get rid of this waterfall II system instead we start building what in",
    "start": "359400",
    "end": "365099"
  },
  {
    "text": "the and the Lean Startup movement is called the Minimum Viable Product and iterating rapidly and making sure that",
    "start": "365099",
    "end": "371219"
  },
  {
    "text": "our software is always production ready that we can always release our software at any point that I can take the latest",
    "start": "371219",
    "end": "376949"
  },
  {
    "text": "good bill press a button release it into production and be confident that it's not going to break anything so we never",
    "start": "376949",
    "end": "382560"
  },
  {
    "text": "are trying to we're basically removing that last mile altogether that goes away and what that means is when you as an",
    "start": "382560",
    "end": "389639"
  },
  {
    "text": "engineer so I am def complete what you mean is I'm actually ready to go live done is no",
    "start": "389639",
    "end": "396410"
  },
  {
    "text": "longer deaf complete done is released into production and hopefully I learned whether what I did was a good idea in",
    "start": "396410",
    "end": "401600"
  },
  {
    "text": "the first place and then what that does is it creates this magical",
    "start": "401600",
    "end": "406760"
  },
  {
    "text": "transformation where instead of releases being tied to how long it's going to take for a change to go through the",
    "start": "406760",
    "end": "412280"
  },
  {
    "text": "chain Advisory Board instead we're constrained by whether the business",
    "start": "412280",
    "end": "417500"
  },
  {
    "text": "thinks it's a good idea to release business is never asking IT who are you releasing our companies know we have to",
    "start": "417500",
    "end": "423290"
  },
  {
    "text": "wait two weeks for the next release train to go out or a month or how many people are releasing at least once a",
    "start": "423290",
    "end": "428300"
  },
  {
    "text": "year that should be everyone who's not releasing at least once a year anyone okay or no one's going to admit",
    "start": "428300",
    "end": "435230"
  },
  {
    "text": "to it fair enough who's that who's releasing at least once a month okay it's about half of you how many people",
    "start": "435230",
    "end": "442220"
  },
  {
    "text": "are releasing at least once a week okay a handful how many people are releasing",
    "start": "442220",
    "end": "447560"
  },
  {
    "text": "at least once a day okay a couple of you more than once a day congratulations sir",
    "start": "447560",
    "end": "455050"
  },
  {
    "text": "only dude in the room that's cool so that's a magical thing because what",
    "start": "455050",
    "end": "461090"
  },
  {
    "text": "happens in that situation is someone says well maybe we can try this out and you go yes sure I'll code out something",
    "start": "461090",
    "end": "466490"
  },
  {
    "text": "that is a proof of concept for that idea and you push it out there and you gather some metrics and you find out is that a",
    "start": "466490",
    "end": "471680"
  },
  {
    "text": "good idea often it's not it turns out this is the problem with waterfall is that anytime",
    "start": "471680",
    "end": "477200"
  },
  {
    "text": "you have an idea we should build this usually you will be wrong about that especially when you get into the detail",
    "start": "477200",
    "end": "482360"
  },
  {
    "text": "about where you're building that's the biggest source of waste in the software development process stuff that we build that's never used already used so what",
    "start": "482360",
    "end": "488870"
  },
  {
    "text": "happens when you move to continuous delivery is you can get really fast feedback on your ideas and waste all that time that you were building stuff",
    "start": "488870",
    "end": "494450"
  },
  {
    "text": "that no one's going to use and actually focusing on building stuff that's valuable and it transforms the way the",
    "start": "494450",
    "end": "500300"
  },
  {
    "text": "organization works it's really magical anyone who's moved to this way of working nobody wants to go back to the old way no one's like oh I wish we could",
    "start": "500300",
    "end": "506780"
  },
  {
    "text": "have releases once every a year ago and that was so much better no one says that everyone's like hey this is really",
    "start": "506780",
    "end": "512780"
  },
  {
    "text": "awesome and we should totally you know well if you move from that an organization that does that's another organization it really sucks it's",
    "start": "512780",
    "end": "519560"
  },
  {
    "text": "worldly unpleasant so how do we do that three ingredients automation of build test deploy all",
    "start": "519560",
    "end": "529890"
  },
  {
    "text": "those processes that are often manual a bunch of patterns and practices and collaboration between everyone involved",
    "start": "529890",
    "end": "535770"
  },
  {
    "text": "in the delivery process that's how you achieve continuous delivery and there's three ingredients one configuration",
    "start": "535770",
    "end": "541770"
  },
  {
    "text": "management which means I should be able to take a box plug it into my rack in my",
    "start": "541770",
    "end": "547410"
  },
  {
    "text": "server farm plug in the power plug in the network and have that box serving",
    "start": "547410",
    "end": "553460"
  },
  {
    "text": "transactions in a completely automated fashion I should be able to provision that box provision that Osprey vision",
    "start": "553460",
    "end": "559890"
  },
  {
    "text": "the middleware configure the middleware deploy the correct version the application configure the router",
    "start": "559890",
    "end": "565530"
  },
  {
    "text": "configure the storage in a fully automated way and have that system provisioned and processing transactions",
    "start": "565530",
    "end": "572730"
  },
  {
    "text": "in a fully automated way as a developer I should be able to take a new workstation plunk it on my desk plug in",
    "start": "572730",
    "end": "577890"
  },
  {
    "text": "power network BDU keyboard all that stuff and be able to run a single command to check out from version",
    "start": "577890",
    "end": "583200"
  },
  {
    "text": "control everything I need to build and test and deploy the system to any",
    "start": "583200",
    "end": "588360"
  },
  {
    "text": "environment I have access to and be able to do that using a single command that's all aiming for in terms of configuration",
    "start": "588360",
    "end": "593490"
  },
  {
    "text": "management second ingredients a config continuous integration which I'll talk about in just a minute and then the third ingredient is automated testing so",
    "start": "593490",
    "end": "600150"
  },
  {
    "text": "here in this room practices continuous integration your hands up okay keep your hands up keep your hands up get more",
    "start": "600150",
    "end": "605580"
  },
  {
    "text": "people put your hands down if everyone is not checking into mainline into trunk at least once a day if that's not true",
    "start": "605580",
    "end": "612630"
  },
  {
    "text": "you put your hands down you're working your feature branches that aren't merged into mainline least once a day put your hands down if every check-in",
    "start": "612630",
    "end": "619500"
  },
  {
    "text": "does not result in a build and a run of all the automated tests put your hands down okay the people who still have their",
    "start": "619500",
    "end": "626740"
  },
  {
    "text": "hands up adding to disintegration say congratulations to you it's about a third of the room continuous integration is not running",
    "start": "626740",
    "end": "632980"
  },
  {
    "text": "Jenkins on your feature branches continuous integration is a practice not",
    "start": "632980",
    "end": "638140"
  },
  {
    "text": "a tool one of my favorite presentations on continuous integration is by gate guy called James Shaw he wrote an article",
    "start": "638140",
    "end": "643660"
  },
  {
    "text": "called continuous integration on and or a day but he describes how to do continuous integration using an old",
    "start": "643660",
    "end": "649300"
  },
  {
    "text": "workstation a rubber chicken and a bell and it's just about I make a change I",
    "start": "649300",
    "end": "656070"
  },
  {
    "text": "get the rubber chicken no one else can check in while I have the rubber chicken I go to the work station I shake I check",
    "start": "656070",
    "end": "661470"
  },
  {
    "text": "out trunk with my changes on it I run the bill I run the test if it passes I ring the bell ding and then someone else",
    "start": "661470",
    "end": "667170"
  },
  {
    "text": "you get the chicken if it goes wrong I keep the Roberts chicken I have to fix my the the the change that I made that",
    "start": "667170",
    "end": "674190"
  },
  {
    "text": "was bad or if I can't do that in a few minutes I have to revert it from version controls that other people continue",
    "start": "674190",
    "end": "679770"
  },
  {
    "text": "working that's continuous integration continuous integration the key word here",
    "start": "679770",
    "end": "684810"
  },
  {
    "text": "is integration which means that all the changes are integrated into mainline if you're not integrating your changes into",
    "start": "684810",
    "end": "691440"
  },
  {
    "text": "mainline then you're not drinking this integration by definition you cannot have feature branches that last for more",
    "start": "691440",
    "end": "697080"
  },
  {
    "text": "than a day and be doing continuous integration because it's a contradiction in terms ok now there may be valid reasons why",
    "start": "697080",
    "end": "704910"
  },
  {
    "text": "you're doing feature branching and there aren't actually that many but you can't say you're linked to this integration",
    "start": "704910",
    "end": "710610"
  },
  {
    "text": "and be doing Peter branching it's just not possible so I've kind of describes the workflow",
    "start": "710610",
    "end": "717090"
  },
  {
    "text": "faculties integration I build something if it passes I get the latest from trunk and merge and check that my changes",
    "start": "717090",
    "end": "724260"
  },
  {
    "text": "don't conflict with someone else has changes if that part is then I push my changes back into trunk and then that triggers a build which runs the",
    "start": "724260",
    "end": "730590"
  },
  {
    "text": "automated tests and if that all passes then yay I've done a really great job and the key thing is this what we've",
    "start": "730590",
    "end": "736200"
  },
  {
    "text": "just described everyone's committing in so trunk into the main line at least once a day continuous integration automated testing",
    "start": "736200",
    "end": "744470"
  },
  {
    "text": "my favorite quote of that quality is this one from a guy called W Edwards Deming and he has this to say this is",
    "start": "744470",
    "end": "749670"
  },
  {
    "text": "applied to manufacturing but the same thing applies to software development",
    "start": "749670",
    "end": "755360"
  },
  {
    "text": "and this has two really important implications for software delivery",
    "start": "758679",
    "end": "763809"
  },
  {
    "text": "implication number one testing is not something that you should do after",
    "start": "763809",
    "end": "769160"
  },
  {
    "text": "you've developed the functionality testing is something that we should be doing all the time",
    "start": "769160",
    "end": "775420"
  },
  {
    "text": "mass inspection in software means manual regression testing after development is",
    "start": "775420",
    "end": "781970"
  },
  {
    "text": "complete and that's crap it's a really terrible way to get a high quality",
    "start": "781970",
    "end": "787699"
  },
  {
    "text": "product and it's a massive waste of your precious resources you're human beings",
    "start": "787699",
    "end": "793279"
  },
  {
    "text": "if human beings are doing manual regression testing that's a massive waste of human resources as my colleague",
    "start": "793279",
    "end": "799040"
  },
  {
    "text": "Neil Ford's says he was here a minute ago he's just left for weeks he's heard this before if humans are doing the",
    "start": "799040",
    "end": "805100"
  },
  {
    "text": "things that computers could be doing instead all the computers get together late at night and laugh at us this is",
    "start": "805100",
    "end": "811369"
  },
  {
    "text": "nowhere more true than if you have human beings doing regression testing it's stupid it's a waste of time humans are really bad at doing repetitive boring",
    "start": "811369",
    "end": "817879"
  },
  {
    "text": "things over and over again we suck at it because it's just so boring and when you",
    "start": "817879",
    "end": "823579"
  },
  {
    "text": "suck at doing something that's really crucial to the quality of your product you should probably think of another way to do it so we should all be testing all",
    "start": "823579",
    "end": "829339"
  },
  {
    "text": "the time which means building a comprehensive suite of automated tests and the second thing is testers are not",
    "start": "829339",
    "end": "836059"
  },
  {
    "text": "responsible for quality everyone is responsible for quality testers are",
    "start": "836059",
    "end": "841369"
  },
  {
    "text": "really important they're the people who find the bugs that you never would have thought of you do exploratory testing and who helped to build and maintain the",
    "start": "841369",
    "end": "847459"
  },
  {
    "text": "Suites of automated tests but they're not responsible for quality all of us are responsible for quality testers the",
    "start": "847459",
    "end": "854239"
  },
  {
    "text": "job of tested is to make the quality of the system transparent so that you can then make decisions about what to do about it but they're not responsible for",
    "start": "854239",
    "end": "860179"
  },
  {
    "text": "quality we need to build quality into our products and that means we all need to take responsibility for it",
    "start": "860179",
    "end": "866709"
  },
  {
    "text": "so I'm going to gloss over this and just say well listen there's this guy called Brian Merrick who invented this thing",
    "start": "867730",
    "end": "873589"
  },
  {
    "text": "called the test quadrant diagram which categorizes tests according to two axes whether they critique the product or",
    "start": "873589",
    "end": "879799"
  },
  {
    "text": "whether this support programming and whether the technology facing or business facing this basically describes",
    "start": "879799",
    "end": "884839"
  },
  {
    "text": "all the kinds of tests that you should be doing on your software from you tests that are in by developers that",
    "start": "884839",
    "end": "889940"
  },
  {
    "text": "test small sections of the code in isolation the opposite ends which is all the manual stuff that people should be",
    "start": "889940",
    "end": "895610"
  },
  {
    "text": "doing because it requires intelligence and imagination and all those things that computers don't yet have showcases",
    "start": "895610",
    "end": "900650"
  },
  {
    "text": "usability testing exploratory testing and then these other quadrants functional acceptance tests the tests",
    "start": "900650",
    "end": "906260"
  },
  {
    "text": "that the software delivers the expected value to its users and down at the bottom here the stuff that everyone forgets until a week before release to",
    "start": "906260",
    "end": "911840"
  },
  {
    "text": "production which is performance testing testing security all those things that make sure your sigh actually won't go down the moment it's launched or your",
    "start": "911840",
    "end": "918380"
  },
  {
    "text": "credit card details won't get stolen or all these are they're kind of less critical non-functional requirements I'm",
    "start": "918380",
    "end": "923630"
  },
  {
    "text": "joking all these things you should be doing all the time and the way you do that is",
    "start": "923630",
    "end": "929330"
  },
  {
    "text": "firstly you have to create those tests but then you have to create a deployment pipeline to run them what's the deployment pipeline it is this you have",
    "start": "929330",
    "end": "935450"
  },
  {
    "text": "a process for going from check-in to live the deployment pipeline is the manifestation of that process it's a way to model and get visibility into that",
    "start": "935450",
    "end": "942230"
  },
  {
    "text": "process to get feedback on any change you introduce to the configuration or code of your system and to get control",
    "start": "942230",
    "end": "948530"
  },
  {
    "text": "over that so that people can self-service the actions they require like provisioning a testing environment the latest build or deploying to staging",
    "start": "948530",
    "end": "955220"
  },
  {
    "text": "or production without having to raise a ticket and wait for a week for someone to provision an environment so that you can deploy to it all this stuff should",
    "start": "955220",
    "end": "961580"
  },
  {
    "text": "be push-button eventually automatic and everyone should be able to see what's going on and everyone should get rapid feedback on the effect of the changes",
    "start": "961580",
    "end": "968270"
  },
  {
    "text": "they introduced so the deployment pipeline looks a bit like this the idea is I make a change I take it in that",
    "start": "968270",
    "end": "974030"
  },
  {
    "text": "triggers a build of the system and running the unit tests and if that breaks this should take a few minutes",
    "start": "974030",
    "end": "979630"
  },
  {
    "text": "certainly no longer than 10 minutes and then I get fast feedback did the change I introduced break something if it did",
    "start": "979630",
    "end": "984860"
  },
  {
    "text": "everyone stops what they're doing someone volunteers to fix the problem no one can check in unless they're",
    "start": "984860",
    "end": "990020"
  },
  {
    "text": "checking in to fix that problem or you might revert if it's going to be difficult problem to fix once that has been made to work then you",
    "start": "990020",
    "end": "996410"
  },
  {
    "text": "trigger the next stage which is running a comprehensive suite of unit tests so the feedback is slower because they're",
    "start": "996410",
    "end": "1001660"
  },
  {
    "text": "more comprehensive but it's more comprehensive so this might take a longer you know an hour or two large",
    "start": "1001660",
    "end": "1009820"
  },
  {
    "text": "products have tests that might take days to run end-to-end you run them in parallel on a massive grid and you get a",
    "start": "1009820",
    "end": "1016210"
  },
  {
    "text": "rapid feedback Google had so I think tens and millions of tests and they run them in less than an hour I think in parallel my",
    "start": "1016210",
    "end": "1023200"
  },
  {
    "text": "massive compete quit so if this fails then again everyone stops they're doing",
    "start": "1023200",
    "end": "1029319"
  },
  {
    "text": "someone volunteers to fix the problem and then everyone else can Caroline working and checking in but there's someone who's highest priority is to",
    "start": "1029320",
    "end": "1035410"
  },
  {
    "text": "keep the system working and if this is really important with continuous delivery you don't prioritize",
    "start": "1035410",
    "end": "1041400"
  },
  {
    "text": "functionality you prioritize keeping the system in a good state keeping the system working and in a good state is",
    "start": "1041400",
    "end": "1047829"
  },
  {
    "text": "more important than delivering functionality so that's you know the most important change if something is",
    "start": "1047830",
    "end": "1052840"
  },
  {
    "text": "broken you stop the line and someone has it as their highest priority to fix that problem and then once you have a bill",
    "start": "1052840",
    "end": "1060760"
  },
  {
    "text": "that the automated test pass someone downstream gets a notification this is deployable to production or this",
    "start": "1060760",
    "end": "1066730"
  },
  {
    "text": "is deployed all to a state environment they can then press a button and deploy that build or any other build of their choice to the staging environment and if",
    "start": "1066730",
    "end": "1074040"
  },
  {
    "text": "the user acceptance testing shows that the functionality is what what actually",
    "start": "1074040",
    "end": "1079060"
  },
  {
    "text": "we wanted to do in the first place then someone can press a button with the appropriate authorizations to deploy",
    "start": "1079060",
    "end": "1084910"
  },
  {
    "text": "that build or any other bill into production and the idea is this the deployment pipeline every check-in",
    "start": "1084910",
    "end": "1092260"
  },
  {
    "text": "results in a build every build is a release candidate every build is a release candidate and what the",
    "start": "1092260",
    "end": "1097480"
  },
  {
    "text": "deployment pipeline is doing is testing the build the build is like a mythical hero in a Greek epic and the mythical",
    "start": "1097480",
    "end": "1105610"
  },
  {
    "text": "hero wants to marry the beautiful woman but first he must pass a series of tests he must fight the evil monster and get",
    "start": "1105610",
    "end": "1111790"
  },
  {
    "text": "the big bag of gold and descend into Hades and have an emotional reunion with his father and then once past once the",
    "start": "1111790",
    "end": "1118120"
  },
  {
    "text": "heroes pass all these tests then he can marry the beautiful woman and it this is what we're doing with the deployment pipeline every check-in results in the",
    "start": "1118120",
    "end": "1124270"
  },
  {
    "text": "build and you're trying to prove that the bill is not deployable and if you can't prove that the bill is not",
    "start": "1124270",
    "end": "1130090"
  },
  {
    "text": "deployables n the build is deployed and you can press a button and deploy and not worry and if you have even the",
    "start": "1130090",
    "end": "1135760"
  },
  {
    "text": "slightest amount of adrenaline in your bloodstream when you press that button to deploy to production what that tells",
    "start": "1135760",
    "end": "1141430"
  },
  {
    "text": "you is that your validations are not good enough and you need to make them better",
    "start": "1141430",
    "end": "1146820"
  },
  {
    "text": "so it becomes very simple but what's not",
    "start": "1146820",
    "end": "1151900"
  },
  {
    "text": "simple is convincing your organization that you have to prioritize keeping the system in a good state over delivering",
    "start": "1151900",
    "end": "1157030"
  },
  {
    "text": "functionality that's the hard conversation I'm not going to solve that problem for",
    "start": "1157030",
    "end": "1163450"
  },
  {
    "text": "you in this talk so we're kind of",
    "start": "1163450",
    "end": "1169360"
  },
  {
    "text": "running short of time I'm just going to make a couple more points and then skip to the end one of the key things that",
    "start": "1169360",
    "end": "1176230"
  },
  {
    "text": "continuous delivery aims to do is reduce the risk of release people don't like continuous deployment because they think",
    "start": "1176230",
    "end": "1181420"
  },
  {
    "text": "it's risky this is actually not the case what's risky is releasing once every two",
    "start": "1181420",
    "end": "1188230"
  },
  {
    "text": "months an enormous raft of changes that you can't possibly know the effect of over the course of a weekend and then",
    "start": "1188230",
    "end": "1195160"
  },
  {
    "text": "having it go horribly wrong and trying to fix it or roll it back what's not risky is releasing a three-line code",
    "start": "1195160",
    "end": "1202420"
  },
  {
    "text": "change which you validated and run a complete suite of regression tests against using a production like data set",
    "start": "1202420",
    "end": "1208330"
  },
  {
    "text": "into production and then being able to revert that changed if it causes any problems with it almost immediately in a",
    "start": "1208330",
    "end": "1214990"
  },
  {
    "text": "very simple way that's low risk and casillas delivery aims to reduce the",
    "start": "1214990",
    "end": "1220060"
  },
  {
    "text": "risk of delivery because you have all these validations you're running and if something goes wrong it's super easy to fix it because you know what the root",
    "start": "1220060",
    "end": "1226360"
  },
  {
    "text": "cause is it was this three line change or this configuration changed actually or this database schema changed I made",
    "start": "1226360",
    "end": "1232120"
  },
  {
    "text": "and it's really super easy to revert it that's how we reduce the risk of releases so you need to automate",
    "start": "1232120",
    "end": "1238060"
  },
  {
    "text": "provisioning and deployment and ensure developers testers and operations people",
    "start": "1238060",
    "end": "1243340"
  },
  {
    "text": "collaborate throughout the process this is the essence of who's heard of DevOps",
    "start": "1243340",
    "end": "1249490"
  },
  {
    "text": "anyone who have ops okay so DevOps basically is this saying everyone should",
    "start": "1249490",
    "end": "1256120"
  },
  {
    "text": "collaborate and we should find ways to automate the process to reduce the risk of delivery the problem is operations",
    "start": "1256120",
    "end": "1261820"
  },
  {
    "text": "people are rewarded for things not going wrong whereas developers are rewarded",
    "start": "1261820",
    "end": "1268390"
  },
  {
    "text": "for getting releases out and those two goals are in conflict so that goes wrong",
    "start": "1268390",
    "end": "1274810"
  },
  {
    "text": "all the time because operations people change equals risks so they want to prevent you from making any changes",
    "start": "1274810",
    "end": "1280340"
  },
  {
    "text": "for developers you want to change things DevOps is about saying well listen actually these two things are not in conflict and we can find a way to ensure",
    "start": "1280340",
    "end": "1287930"
  },
  {
    "text": "that everyone is happy and the way we do that is making developers responsible for it for things going you know when",
    "start": "1287930",
    "end": "1293420"
  },
  {
    "text": "things go wrong the developers take some of the responsibility for that and it's actually the developers problem if the system goes down not just the operations",
    "start": "1293420",
    "end": "1300290"
  },
  {
    "text": "people so there's a whole set of practices and patterns around this that I don't have time to cover now and I",
    "start": "1300290",
    "end": "1305360"
  },
  {
    "text": "kind of want to skip to the end of this point there's a lot more I could go on for hours about this stuff but you know it's nearly lunchtime",
    "start": "1305360",
    "end": "1310730"
  },
  {
    "text": "I don't wanna be between you and your lunch so the last thing I kind of want to say is that none of these problems about implementing continuous delivery",
    "start": "1310730",
    "end": "1317540"
  },
  {
    "text": "are technology problems the tools the patterns the practices all exist to make",
    "start": "1317540",
    "end": "1324140"
  },
  {
    "text": "this work today however weird or hards your environment is you can do it I'm not saying it's",
    "start": "1324140",
    "end": "1330050"
  },
  {
    "text": "going to be easy it could be really hard especially if you're working on a legacy code base in C++ of ten and a half",
    "start": "1330050",
    "end": "1336890"
  },
  {
    "text": "million lines you know I went to an organization recently that had this system and they want to see you",
    "start": "1336890",
    "end": "1342350"
  },
  {
    "text": "continuous delivery and like well guess what it's going to be hard but nevertheless it may be really valuable",
    "start": "1342350",
    "end": "1348140"
  },
  {
    "text": "for you to do it so all the problems really a people problem is not technology problems it's possible to do",
    "start": "1348140",
    "end": "1354290"
  },
  {
    "text": "this larger organizations are doing it all the stuff we talk about in the book continuous delivery of stuff that's been",
    "start": "1354290",
    "end": "1359600"
  },
  {
    "text": "tested and is known to work even in really large distributed organizations so first of all when you're doing this",
    "start": "1359600",
    "end": "1366650"
  },
  {
    "text": "you have to get everyone together at the beginning so anytime you're planning a new project anytime you want to make a",
    "start": "1366650",
    "end": "1371930"
  },
  {
    "text": "change the way people work a process change you have to get everyone together and make sure that everyone's on the same page and they understand the",
    "start": "1371930",
    "end": "1377810"
  },
  {
    "text": "consequences of what we're going to do and then it's going to suck for a bit and it's going to be hard and make sure",
    "start": "1377810",
    "end": "1383540"
  },
  {
    "text": "that everyone is actually on board with it and then keep meeting throughout the process the most important hour to our practice is the retrospective because",
    "start": "1383540",
    "end": "1391250"
  },
  {
    "text": "that's the heartbeat of any change of an organization it's where you say here's an experiment we're going to try maybe",
    "start": "1391250",
    "end": "1396980"
  },
  {
    "text": "we're going to try automating some more tests maybe we're going to try doing some continuous integration maybe we going to try checking our mainline",
    "start": "1396980",
    "end": "1402800"
  },
  {
    "text": "you run an experiment and then in two weeks you come back and you look what",
    "start": "1402800",
    "end": "1408020"
  },
  {
    "text": "happened with that experiment was it any good was it the right thing to have done and you evaluate it you actually don't",
    "start": "1408020",
    "end": "1413420"
  },
  {
    "text": "need any to tell you the practices that you need to do all you need to do is get together as a team every couple of weeks run",
    "start": "1413420",
    "end": "1420110"
  },
  {
    "text": "experiments find out what the results of the experiments were and then run some more experiments and that's how you get better what you're doing that's it",
    "start": "1420110",
    "end": "1426740"
  },
  {
    "text": "that's how you make things better all of you could go home or go to work right now and do that and make something",
    "start": "1426740",
    "end": "1433280"
  },
  {
    "text": "slightly better you know that's really the message of DevOps in in some ways that everyone has the power to make",
    "start": "1433280",
    "end": "1438890"
  },
  {
    "text": "things slightly better just by going and talking to other people and finding out ways you can collaborate to make things a little bit better visibility is really",
    "start": "1438890",
    "end": "1446030"
  },
  {
    "text": "important making it easy for everyone to see what's happening is the latest build appliable are we able to meet our",
    "start": "1446030",
    "end": "1451040"
  },
  {
    "text": "performance requirements how are we progressing you know in terms of actually functionality that's deliverable not functionality that's",
    "start": "1451040",
    "end": "1456650"
  },
  {
    "text": "definitely and then like I say Jesus livery isn't a project that you're done with it's part of continuously trying to",
    "start": "1456650",
    "end": "1463610"
  },
  {
    "text": "make things better at what you're doing and everyone can do that and that's really the essence of it so that's all I",
    "start": "1463610",
    "end": "1470150"
  },
  {
    "text": "wanted to say I know we're kind of at 12:30 but hopefully since I started five minutes late there's time for a couple",
    "start": "1470150",
    "end": "1475910"
  },
  {
    "text": "of questions the question is what I think about tools like lightbox that allow for more more immediate feedback",
    "start": "1475910",
    "end": "1482270"
  },
  {
    "text": "well force is actually one of the initial investors in lightbox it's something that we think is a really awesome product I mean there's a great",
    "start": "1482270",
    "end": "1488930"
  },
  {
    "text": "talk by a guy called Brett Victor like I remember the title of but if you search for Brett Victor be ret Victor on Vimeo",
    "start": "1488930",
    "end": "1496550"
  },
  {
    "text": "you'll get his talk and it's super awesome and he basically says it's impossible to create to be creative if",
    "start": "1496550",
    "end": "1504080"
  },
  {
    "text": "you can't see what you're doing you need to be able to see what you're doing and that essence of creating things and",
    "start": "1504080",
    "end": "1510140"
  },
  {
    "text": "being able to change something and see the results of that change that's what enables us to be creative and if you",
    "start": "1510140",
    "end": "1515270"
  },
  {
    "text": "have to wait hours days weeks to see the result of the changes you made it makes",
    "start": "1515270",
    "end": "1521420"
  },
  {
    "text": "it impossible to be creative it makes it impossible to run experiments in code so really continuous delivery I mean",
    "start": "1521420",
    "end": "1527300"
  },
  {
    "text": "fundamentally is about reducing that cycle time getting maximising feedback and getting as much feedback as fast as",
    "start": "1527300",
    "end": "1532700"
  },
  {
    "text": "you possibly can and yeah absolutely development tools where you can make changes to the code and see visually what the effects of that change are on a",
    "start": "1532700",
    "end": "1539000"
  },
  {
    "text": "running system I mean it basically is a repla environment that shows you immediately what the effects are on a",
    "start": "1539000",
    "end": "1544790"
  },
  {
    "text": "bunch of input parameters it's really super cool absolutely I think that's a really great tool inventing on principle was the talk",
    "start": "1544790",
    "end": "1552470"
  },
  {
    "text": "by Brett vector yes thank you so question is how do you address security in continuous deployment well the",
    "start": "1552470",
    "end": "1559760"
  },
  {
    "text": "general rule of continuous delivery is this if it hurts you should do it more often and you should bring the pain",
    "start": "1559760",
    "end": "1565670"
  },
  {
    "text": "forward so if it's painful to get security right you're not doing it often",
    "start": "1565670",
    "end": "1571460"
  },
  {
    "text": "enough if you're waiting until your project is def complete and then you get security dudes in and they tell you oh",
    "start": "1571460",
    "end": "1577100"
  },
  {
    "text": "you've got these cross-site scripting problems and SQL injection guess what you're not doing that testing often enough you should be doing it all the",
    "start": "1577100",
    "end": "1582560"
  },
  {
    "text": "time so there's static analysis tools to look for buffer overruns to look for secret injections left across like vulnerabilities you should be running",
    "start": "1582560",
    "end": "1588920"
  },
  {
    "text": "those static analysis tools on every check-in as part of your CI commit build you should be running automated tests",
    "start": "1588920",
    "end": "1595880"
  },
  {
    "text": "that test for security you can run penetration tools they take a bit longer to run you can run that as part of your",
    "start": "1595880",
    "end": "1601160"
  },
  {
    "text": "acceptance testing all these things should be built into the delivery process high security is a quality of",
    "start": "1601160",
    "end": "1607220"
  },
  {
    "text": "your system and we're trying to build quality into the system quality is value for someone that's how Gerry Weinberg",
    "start": "1607220",
    "end": "1612830"
  },
  {
    "text": "describes quality and security is part of the quality of your system so build it in find ways to bring it forward in the pipeline to run those validations as",
    "start": "1612830",
    "end": "1619610"
  },
  {
    "text": "often as you can some security tests you require people to do it you should be doing that as often as you can somewhat further down",
    "start": "1619610",
    "end": "1625520"
  },
  {
    "text": "the pipeline so you don't want to run manual tests against the bill that's not known to be good in other ways but yeah but bring it forward as much as possible",
    "start": "1625520",
    "end": "1631570"
  },
  {
    "text": "and then how far you bring it forward depends on the trade-off between the availability of the resources you have",
    "start": "1631570",
    "end": "1637400"
  },
  {
    "text": "and the quality of the initial feedback you get but yeah the balance your",
    "start": "1637400",
    "end": "1642890"
  },
  {
    "text": "question may you one more one more yeah one of the things I like to say is that",
    "start": "1642890",
    "end": "1649880"
  },
  {
    "text": "if the production site was running on the box under my desk we never have any bugs or we'd have bugs but they'd be",
    "start": "1649880",
    "end": "1655670"
  },
  {
    "text": "eliminated quickly one of the problems the only thing I have problem with",
    "start": "1655670",
    "end": "1661390"
  },
  {
    "text": "conceptualizing in my mind is how do you convince how does the scrum process",
    "start": "1661390",
    "end": "1667970"
  },
  {
    "text": "break down whenever you're releasing before sprint ends so that's an",
    "start": "1667970",
    "end": "1674330"
  },
  {
    "text": "excellent question scrum says that your software should be in the deployable State at the end of a",
    "start": "1674330",
    "end": "1679610"
  },
  {
    "text": "sprint I'm saying that's not good enough your software always needs to be deployed and",
    "start": "1679610",
    "end": "1685040"
  },
  {
    "text": "then you can choose deploy it whenever you want in view down in Silicon Valley they were one that this guy caught in vehicle",
    "start": "1685040",
    "end": "1692480"
  },
  {
    "text": "Timothy Fitz wrote the continuous deployment blog entry and I once told him to you a few weeks ago and they basically said well listen we do scrum",
    "start": "1692480",
    "end": "1698960"
  },
  {
    "text": "I'm like really and they're like yeah but we don't we don't wait till the end of the sprint to have software deploy we",
    "start": "1698960",
    "end": "1704540"
  },
  {
    "text": "deploy all the time we're still doing scrum and the point is I mean I think I",
    "start": "1704540",
    "end": "1709820"
  },
  {
    "text": "think the world has moved on since from was invented and we now have these principles and practices that allow us",
    "start": "1709820",
    "end": "1714830"
  },
  {
    "text": "to do better I mean it used to be that people thought having deploy our software at the end of a sprint was",
    "start": "1714830",
    "end": "1720740"
  },
  {
    "text": "crazy talk you know we released once a year and you're asking us to be deployable once a month you're insane oh",
    "start": "1720740",
    "end": "1726440"
  },
  {
    "text": "my god become possibly be that the world has moved on we have tools that make it possible to do this stuff that I'm",
    "start": "1726440",
    "end": "1731780"
  },
  {
    "text": "talking about and you know we can do better and you should do better I mean all this stuff that there's a trade-off",
    "start": "1731780",
    "end": "1737480"
  },
  {
    "text": "it's there's a cost associated with implementing maintainable comprehensive automated tests with the instance",
    "start": "1737480",
    "end": "1743660"
  },
  {
    "text": "integration as a cost for all this stuff and you have to decide is it worth it for me to be able to do this there's always a business's indecision that's",
    "start": "1743660",
    "end": "1749690"
  },
  {
    "text": "involved but the reality is everyone is moving faster and faster and faster and",
    "start": "1749690",
    "end": "1755390"
  },
  {
    "text": "it's almost impossible to remain competitive unless you're in a massive monopoly unless you're actually doing",
    "start": "1755390",
    "end": "1761450"
  },
  {
    "text": "some list stuff and testing your hypotheses about what to build so you know people already proposing",
    "start": "1761450",
    "end": "1766970"
  },
  {
    "text": "modifications to scrum to say well actually we shouldn't do this scrum can be fine as I kind of a shell around the",
    "start": "1766970",
    "end": "1772400"
  },
  {
    "text": "planning process as a planning methodology but I would say you know the reality is scrum is a great starting",
    "start": "1772400",
    "end": "1779480"
  },
  {
    "text": "point if you're really immature any practice that's written down in the book is a good starting point Hanban scrum",
    "start": "1779480",
    "end": "1786440"
  },
  {
    "text": "whatever even waterfall can be a good starting point if you're doing something totally chaotic there was a Forrester",
    "start": "1786440",
    "end": "1791900"
  },
  {
    "text": "survey looking at development methodologies and the most popular development methodology last year was no",
    "start": "1791900",
    "end": "1798650"
  },
  {
    "text": "development methodology if you have no development methodology Waterfall might be an improvement on that so start with",
    "start": "1798650",
    "end": "1806030"
  },
  {
    "text": "something and then practice continuous improvement I think that's four yet thanks everyone",
    "start": "1806030",
    "end": "1814260"
  }
]