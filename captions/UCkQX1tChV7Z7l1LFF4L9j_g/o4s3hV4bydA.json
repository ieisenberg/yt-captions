[
  {
    "text": "hey Java developers did you know that Microsoft supports your workload with abundant choices whether you're working",
    "start": "840",
    "end": "6600"
  },
  {
    "text": "on a Java app app server or framework learn more at developer.microsoft.com forward slash",
    "start": "6600",
    "end": "12480"
  },
  {
    "text": "Java hello and welcome to the info queue",
    "start": "12480",
    "end": "18960"
  },
  {
    "text": "podcast I'm Thomas Betts lead editor for architecture design and info queue and an application architect of Blackboard",
    "start": "18960",
    "end": "24480"
  },
  {
    "text": "let's say you've committed to the journey of running in the cloud however you soon realize it's not quite as simple as moving your code or writing a",
    "start": "24480",
    "end": "31019"
  },
  {
    "text": "new application on a cloud offering between a diverse service catalog greater developer autonomy rapid",
    "start": "31019",
    "end": "36239"
  },
  {
    "text": "provisioning surprise billing and changing security requirements you might find that hosting applications on the",
    "start": "36239",
    "end": "42300"
  },
  {
    "text": "cloud does not make the most of the cloud today I'm joined by Rosemary Wong to talk about the patterns and practices",
    "start": "42300",
    "end": "47940"
  },
  {
    "text": "that help you move from cloud hosted to Cloud native architecture and maximize the benefit and use of the cloud we'll",
    "start": "47940",
    "end": "54180"
  },
  {
    "text": "talk about the essential application and infrastructure considerations as well as cost and security concerns you need to",
    "start": "54180",
    "end": "59640"
  },
  {
    "text": "think about When approaching a cloud native architecture as the author of infrastructure as code patterns and",
    "start": "59640",
    "end": "64739"
  },
  {
    "text": "practices Rosemary Works to bridge the technical and cultural barriers between infrastructure security and application",
    "start": "64739",
    "end": "70380"
  },
  {
    "text": "development she has a Fascination for solving intractable problem problems as a contributor public speaker writer and",
    "start": "70380",
    "end": "76260"
  },
  {
    "text": "advocate of Open Source infrastructure tools when she's not drawing on whiteboards Rosemary debugs stacks of",
    "start": "76260",
    "end": "81840"
  },
  {
    "text": "various infrastructure systems on her laptop while watering her houseplants Rosemary welcome to the info queue",
    "start": "81840",
    "end": "87000"
  },
  {
    "text": "podcast thank you for having me you spoke at qcon London and your talk was titled from cloud hosted to Cloud",
    "start": "87000",
    "end": "92580"
  },
  {
    "text": "native can you start us off by explaining what the difference is between those two terms and what does it mean to make the transition from cloud",
    "start": "92580",
    "end": "99240"
  },
  {
    "text": "hosted to Cloud native sure so most applications that run on cloud are Cloud hosted right you host them on the cloud",
    "start": "99240",
    "end": "106680"
  },
  {
    "text": "and they're able to run on any of the cloud providers so long as you've configured them to do so whether it be",
    "start": "106680",
    "end": "112799"
  },
  {
    "text": "interact with cloud services or databases that run there databases on-prem there's a lot of variety into",
    "start": "112799",
    "end": "119220"
  },
  {
    "text": "what goes into a cloud hosted application and what's important about it but not many applications are Cloud",
    "start": "119220",
    "end": "124740"
  },
  {
    "text": "native and the key differentiation between an application that's Cloud hosted and Cloud native is that whether",
    "start": "124740",
    "end": "130140"
  },
  {
    "text": "or not that application can scale in a very Dynamic environment and I think that there's a very broad definition to",
    "start": "130140",
    "end": "136739"
  },
  {
    "text": "what dynamic means but in order for an application to be truly Cloud native it has a couple considerations that I think",
    "start": "136739",
    "end": "143340"
  },
  {
    "text": "are important and some of these considerations include its adaptability because whenever you have a cloud",
    "start": "143340",
    "end": "148680"
  },
  {
    "text": "environment government you expect it to change you expect everything to grow you expect it to evolve it's important that",
    "start": "148680",
    "end": "155220"
  },
  {
    "text": "this application that you're putting on the cloud is adapting to all of these changes there's observability or it's",
    "start": "155220",
    "end": "160739"
  },
  {
    "text": "observable you need information Telemetry about how that application is running because that will inform",
    "start": "160739",
    "end": "167220"
  },
  {
    "text": "decisions about how you change that application or service for the future immutability is something that's really",
    "start": "167220",
    "end": "173040"
  },
  {
    "text": "important for cloud native that's this idea that you have to create something new to implement changes it's not",
    "start": "173040",
    "end": "179580"
  },
  {
    "text": "changing in place and the reason why implementing something completely new with the changes built in becomes",
    "start": "179580",
    "end": "185819"
  },
  {
    "text": "important in Cloud native is that it's the only way you keep up with changes to the environment and do it in a stable",
    "start": "185819",
    "end": "191819"
  },
  {
    "text": "consistent manner so it's a lot easier to put together new components than it is to change existing ones in place",
    "start": "191819",
    "end": "198500"
  },
  {
    "text": "elasticity is a really subtle consideration most of the time we think about Cloud being scalable right can I",
    "start": "198500",
    "end": "205739"
  },
  {
    "text": "increase all of my application instances to handle increased workload increase traffic or increase requests for my",
    "start": "205739",
    "end": "213060"
  },
  {
    "text": "customers but elasticity is a lot more subtle than that elasticity is scaling down as well and I think we fail to",
    "start": "213060",
    "end": "219840"
  },
  {
    "text": "think about that sometimes from a cloud native perspective and finally changeability we always want to take",
    "start": "219840",
    "end": "225120"
  },
  {
    "text": "advantage of the latest offerings the latest ecosystems and it's important that we have this ability to change not",
    "start": "225120",
    "end": "233040"
  },
  {
    "text": "just our services but also their underlying systems and I think that changeability goes back to your first",
    "start": "233040",
    "end": "238140"
  },
  {
    "text": "point when you said adaptability was we want to be able to adapt to changes both from within our application and our",
    "start": "238140",
    "end": "244200"
  },
  {
    "text": "needs but also changes in the cloud hosted in the cloud native environment can you talk about any tips for",
    "start": "244200",
    "end": "249900"
  },
  {
    "text": "accomplishing that good separation that what my app has to do and what the environment around me is doing and how",
    "start": "249900",
    "end": "255420"
  },
  {
    "text": "do I design for better adaptability we've depended heavily on abstract",
    "start": "255420",
    "end": "260519"
  },
  {
    "text": "abstract in order to accomplish this and I think it's important in a cloud native environment to adopt the right",
    "start": "260519",
    "end": "266880"
  },
  {
    "text": "abstraction right there's just enough abstraction for you to do something effectively and to be able to change",
    "start": "266880",
    "end": "272820"
  },
  {
    "text": "your services without necessarily affecting the underlying dependencies and so that's why you see kubernetes",
    "start": "272820",
    "end": "279000"
  },
  {
    "text": "gaining a lot of traction in the cloud native space that's partly why you see service mesh gaining a lot of traction as an abstraction so we're slowly",
    "start": "279000",
    "end": "285960"
  },
  {
    "text": "pushing what we consider infrastructure functions as well as coexisting with service functions into different layers",
    "start": "285960",
    "end": "292020"
  },
  {
    "text": "of abstraction and as we build on those right it becomes important that we maintain the abstraction but it becomes",
    "start": "292020",
    "end": "298320"
  },
  {
    "text": "a lot easier to maintain that abstraction while independently evolving the services that are running on top of",
    "start": "298320",
    "end": "304380"
  },
  {
    "text": "the infrastructure as well you'll also find a lot of abstractions in the open source space as well that's becoming",
    "start": "304380",
    "end": "310740"
  },
  {
    "text": "more prevalent Open Standards are becoming sort of the de facto way that people build these abstractions they",
    "start": "310740",
    "end": "316320"
  },
  {
    "text": "don't have to maintain them themselves in an organization instead what they're doing is they're relying on these Open",
    "start": "316320",
    "end": "322680"
  },
  {
    "text": "Standards as a contract of source between services and then their infrastructure dependencies and you said",
    "start": "322680",
    "end": "328020"
  },
  {
    "text": "something like kubernetes I know there's some approaches that say again I want to move to a cloud hosted instead of just",
    "start": "328020",
    "end": "333720"
  },
  {
    "text": "taking my app and deploying it I'm going to first package it up in kubernetes and then I'm going to put it on a cloud does",
    "start": "333720",
    "end": "339539"
  },
  {
    "text": "that mean I'm Cloud native because it's in kubernetes it's like it doesn't fulfill all the other",
    "start": "339539",
    "end": "345780"
  },
  {
    "text": "four requirements or considerations that I outlined not necessarily right just because you put something on kubernetes",
    "start": "345780",
    "end": "351000"
  },
  {
    "text": "doesn't necessarily mean it's elastic I think that's the one argument that I get the most it's like oh yeah I packaged it",
    "start": "351000",
    "end": "356699"
  },
  {
    "text": "I put it on kubernetes but is it truly elastic are you taking advantage of the ability for those service to scale up",
    "start": "356699",
    "end": "362340"
  },
  {
    "text": "but are you also scaling them down dynamically and that's usually the place where it goes from cloud hosted closer",
    "start": "362340",
    "end": "368280"
  },
  {
    "text": "to Cloud native but still not perfectly what we would consider Cloud native and I think that there's a misnomer here",
    "start": "368280",
    "end": "373860"
  },
  {
    "text": "where if you manage to lift and shift right an application from one runtime to",
    "start": "373860",
    "end": "379919"
  },
  {
    "text": "another that magically means that you're more Cloud native and that's not necessarily the case either and how does",
    "start": "379919",
    "end": "385500"
  },
  {
    "text": "effect are plans for testing our application so I used to run all my tests locally but now they're in the cloud and I might not control everything",
    "start": "385500",
    "end": "392639"
  },
  {
    "text": "so I'm not running my web server on my machine and getting tested there I need to say what's inside this container or",
    "start": "392639",
    "end": "398639"
  },
  {
    "text": "there's other dependencies what do I have to consider for making those tests work properly in the cloud that's a good",
    "start": "398639",
    "end": "404639"
  },
  {
    "text": "question and I get a lot of interest in local testing because no one wants to spin up all of these Cloud native",
    "start": "404639",
    "end": "410400"
  },
  {
    "text": "components right now if you wanted to test interactions between microservices now you might have to implement a",
    "start": "410400",
    "end": "416639"
  },
  {
    "text": "service mesh locally for some reason and test all integration tests locally with a service mesh in place it's a lot of",
    "start": "416639",
    "end": "423300"
  },
  {
    "text": "overhead and so testing now looks a little bit different I think that we're getting better about either mocking some",
    "start": "423300",
    "end": "429180"
  },
  {
    "text": "of these abstractions whether it be if you're interfacing with a cloud provider's API there are some community",
    "start": "429180",
    "end": "435720"
  },
  {
    "text": "libraries available for you to mock those apis and you get an understanding of how those infrastructure components",
    "start": "435720",
    "end": "441960"
  },
  {
    "text": "will return important values and important information for your services the other options that are interesting",
    "start": "441960",
    "end": "447660"
  },
  {
    "text": "is that there's more and more focus on implementing some of these open source tools locally right so you can use a",
    "start": "447660",
    "end": "454139"
  },
  {
    "text": "Docker container and spit up a reddish cache if you really wanted to you can similarly create a kubernetes cluster on",
    "start": "454139",
    "end": "460080"
  },
  {
    "text": "your own local machine and test your deployments that way so I think we're we're looking at testing the",
    "start": "460080",
    "end": "465780"
  },
  {
    "text": "abstractions right and even if the abstractions are mocked or they're able to be implemented locally that is much",
    "start": "465780",
    "end": "471419"
  },
  {
    "text": "better for us from a development standpoint but overall there are some abstractions that cannot be mocked",
    "start": "471419",
    "end": "477479"
  },
  {
    "text": "unfortunately or cannot be run locally and those will still have to rely on either the remote Cloud instance or",
    "start": "477479",
    "end": "484440"
  },
  {
    "text": "sometimes the on-prem instance and that's when we're getting into the subject of doing like a full end-to-end",
    "start": "484440",
    "end": "489539"
  },
  {
    "text": "test that's saying that my application like I did my unit tests but I need to make sure that it will work in this",
    "start": "489539",
    "end": "494759"
  },
  {
    "text": "Cloud native environment because I have these other dependencies and so you have to consider that some of those now have",
    "start": "494759",
    "end": "499979"
  },
  {
    "text": "to be tests you have to write that you didn't have to before exactly and there's also I think Merit to considering the contract test we talk",
    "start": "499979",
    "end": "506340"
  },
  {
    "text": "about contract tests between microservices predominantly but we don't necessarily talk about contract testing",
    "start": "506340",
    "end": "511500"
  },
  {
    "text": "in the form of infrastructure because it's complicated infrastructure schemas are not uniform across the board what",
    "start": "511500",
    "end": "518279"
  },
  {
    "text": "information you need to log into a cache is going to be different than what you'll log into a database and many other components how you interact face",
    "start": "518279",
    "end": "525060"
  },
  {
    "text": "with Kafka right it's going to be very very different than how you interface with Amazon's sqs service you know there's a lot of different nuances there",
    "start": "525060",
    "end": "531420"
  },
  {
    "text": "but one of the things that I've noticed that has worked really well with Services is the ability to say okay I",
    "start": "531420",
    "end": "537240"
  },
  {
    "text": "know these are my contract tests point in time for certain infrastructure I'm going to run these contract tests and",
    "start": "537240",
    "end": "542279"
  },
  {
    "text": "make sure that what I understand my application needs to do to interface with these components I am able to",
    "start": "542279",
    "end": "547800"
  },
  {
    "text": "articulate that communicate that knowledge and if it's a little bit different maybe the cloud provider's API",
    "start": "547800",
    "end": "553380"
  },
  {
    "text": "changes then I'm able to accommodate for those changes very dynamically because they don't match what I've done in my",
    "start": "553380",
    "end": "558420"
  },
  {
    "text": "contract test I think that's a good segue into your next capability which was observability and that's about being able to",
    "start": "558420",
    "end": "565019"
  },
  {
    "text": "understand what the system is doing both when it's working but also when you're trying to troubleshoot it right and you",
    "start": "565019",
    "end": "570420"
  },
  {
    "text": "look at the Spectrum from my application was on-prem or maybe in a Colo server and then it was Cloud hosted and then",
    "start": "570420",
    "end": "576240"
  },
  {
    "text": "it's Cloud native when we move across that Spectrum how do our observability needs change it's very easy to start",
    "start": "576240",
    "end": "583019"
  },
  {
    "text": "with the I guess our traditional monitoring system where we would push all of the information right we would",
    "start": "583019",
    "end": "589500"
  },
  {
    "text": "say okay here's an agent that's Gathering all this information and we push it to a monitoring server somewhere",
    "start": "589500",
    "end": "594540"
  },
  {
    "text": "what we're seeing in the cloud native environments now is more of a push-pull model or a poll model right there's some",
    "start": "594540",
    "end": "600000"
  },
  {
    "text": "kind of server and it's extracting the information dynamically but the application itself has to give this",
    "start": "600000",
    "end": "605519"
  },
  {
    "text": "information this Telemetry freely and there's of course has to be some standard in place so that's where",
    "start": "605519",
    "end": "610800"
  },
  {
    "text": "Prometheus formatted metrics are now particularly of interest for folks you'll see open Telemetry sort of the",
    "start": "610800",
    "end": "616800"
  },
  {
    "text": "standardization of libraries that emit traces or emit metrics we're starting to",
    "start": "616800",
    "end": "622560"
  },
  {
    "text": "get a little bit more consistent in the protocols and the formats that we're",
    "start": "622560",
    "end": "627720"
  },
  {
    "text": "using to support a better observability in our systems but unfortunately there is not one tool to rule at all so you're",
    "start": "627720",
    "end": "635220"
  },
  {
    "text": "not going to get the same monitoring tool or the same observability tool that you're using in Cloud as on-prem I think",
    "start": "635220",
    "end": "642360"
  },
  {
    "text": "there's just two too much specialization at times as well from from some of these tools so you might be on-prem using",
    "start": "642360",
    "end": "648660"
  },
  {
    "text": "application performance monitoring you know something that's a little bit more agent based and then when you go to your",
    "start": "648660",
    "end": "654300"
  },
  {
    "text": "Cloud environment you might decide to go with something like a third party managed service and it's up to you to",
    "start": "654300",
    "end": "659880"
  },
  {
    "text": "decide how you're going to aggregate all that information and so we're seeing organizations building their own",
    "start": "659880",
    "end": "665820"
  },
  {
    "text": "observability systems particularly on the aggregation side of the house where they're responsible for aggregating",
    "start": "665820",
    "end": "672240"
  },
  {
    "text": "adding metadata the proper metadata to services and then indexing in this big",
    "start": "672240",
    "end": "677399"
  },
  {
    "text": "pool of telemetry and they're not necessarily depending on sort of the different vendored monitoring systems",
    "start": "677399",
    "end": "684839"
  },
  {
    "text": "anymore they're Instead aggregating at one place yeah I think it's another place where people sometimes make the",
    "start": "684839",
    "end": "690540"
  },
  {
    "text": "assumption that just like going to Cloud hosted oh I'm now in the cloud and I can scale and I can get all these benefits sometimes there's a perception if I just",
    "start": "690540",
    "end": "697380"
  },
  {
    "text": "add open Telemetry now I'm going to have all these benefits you still have to do some work and you have to do your your",
    "start": "697380",
    "end": "703200"
  },
  {
    "text": "own customization and find out what works for you right exactly and I think we've also got a lot of complexity now",
    "start": "703200",
    "end": "709620"
  },
  {
    "text": "too with all these different libraries and different protocols right let's say you have a cloud hosted application and",
    "start": "709620",
    "end": "715440"
  },
  {
    "text": "you've invested in distributed tracing with Zipkin well Zipkin traces aren't necessarily compatible with other",
    "start": "715440",
    "end": "721560"
  },
  {
    "text": "instrumentation libraries with other these Trace aggregation whatever Trace aggregation tools Etc so you go down",
    "start": "721560",
    "end": "728519"
  },
  {
    "text": "this Rabbit Hole of trying to figure out okay even though it's Cloud hosted where it's what we think is cloud native",
    "start": "728519",
    "end": "734160"
  },
  {
    "text": "there's a lot of disparity or inconsistencies with the compatibility across all of these tools as well as the",
    "start": "734160",
    "end": "739560"
  },
  {
    "text": "protocols that we've already put in place or instrumentation that we've put in place in these services so I think",
    "start": "739560",
    "end": "745019"
  },
  {
    "text": "the complexity from going from cloud host to Cloud native comes really from this historical implementation of us",
    "start": "745019",
    "end": "753420"
  },
  {
    "text": "depending on what was available at the time and now we're responsible for re-platforming or refactoring to",
    "start": "753420",
    "end": "759240"
  },
  {
    "text": "something that we recognize as sort of the open standard for a cloud native service where it used to be traditional",
    "start": "759240",
    "end": "765000"
  },
  {
    "text": "I owned everything that was on the server that I built and I deployed now I'm depending all these other services",
    "start": "765000",
    "end": "770880"
  },
  {
    "text": "and if I really want to get the benefit of well what's happening in all of those dependencies you might have to adapt to",
    "start": "770880",
    "end": "777839"
  },
  {
    "text": "understand what they're producing are they using the same open Telemetry that you should then figure out how to get that integrated that's that aggregation",
    "start": "777839",
    "end": "784200"
  },
  {
    "text": "you were talking about right yeah exactly and I think there's plenty of abstractions out there now so we",
    "start": "784200",
    "end": "789720"
  },
  {
    "text": "depended on the abstraction of the monitoring agent now I think we've got different kinds of abstractions we've",
    "start": "789720",
    "end": "795060"
  },
  {
    "text": "got the code libraries or sdks the instrumentation you put directly into the service and then you also now have",
    "start": "795060",
    "end": "800279"
  },
  {
    "text": "sidecars or sidecar processes so it's not just in the case of containers but also if you're doing a virtual machine",
    "start": "800279",
    "end": "806040"
  },
  {
    "text": "it's on a cloud you might consider a sidecar process that's you know retrieving some of this information so",
    "start": "806040",
    "end": "811980"
  },
  {
    "text": "there's a lot of patterns now and we're pushing a lot of these into abstractions you know service mesh also being one of",
    "start": "811980",
    "end": "817440"
  },
  {
    "text": "those as well I'm saying okay I'm going to turn on Telemetry on the proxy level and not necessarily me need to think",
    "start": "817440",
    "end": "823440"
  },
  {
    "text": "about instrumentation on the application side yeah those abstraction layers can be a benefit but also a curse like",
    "start": "823440",
    "end": "830040"
  },
  {
    "text": "you're giving up some control and you don't have to think about all those things it's the traditional buy versus build model I don't have to build a",
    "start": "830040",
    "end": "837060"
  },
  {
    "text": "service mesh because I can buy one off the shelf and it can do that type of work for me but it means I do have to",
    "start": "837060",
    "end": "842220"
  },
  {
    "text": "understand what am I giving up and what is that abstraction boundary yeah exactly I want to move on to",
    "start": "842220",
    "end": "848100"
  },
  {
    "text": "immutability and immutability I think is great because it applies to a lot of different things and I can go down to",
    "start": "848100",
    "end": "853680"
  },
  {
    "text": "like I'm doing functional programming and my data is immutable but I can also have immutable infrastructure which is",
    "start": "853680",
    "end": "860160"
  },
  {
    "text": "usually what's talked about for infrastructure as code you want to build once and deploy many times so that it's",
    "start": "860160",
    "end": "865260"
  },
  {
    "text": "repeatable why is it important to have all those things that we cannot change when we're saying we're Cloud native",
    "start": "865260",
    "end": "870779"
  },
  {
    "text": "well environment",
    "start": "870779",
    "end": "878120"
  },
  {
    "text": "right oftentimes when we're starting to think about Cloud native we're using a lot of different Services we're using",
    "start": "879540",
    "end": "885899"
  },
  {
    "text": "many different approaches to authentication API authorization and there's a little secret sprawl of sorts",
    "start": "885899",
    "end": "892019"
  },
  {
    "text": "right so now you've got tokens everywhere you've got database credentials everywhere you've got certificates you know who knows where",
    "start": "892019",
    "end": "897600"
  },
  {
    "text": "the certificates are and when they're going to expire and whenever you have so many of these components floating around",
    "start": "897600",
    "end": "904260"
  },
  {
    "text": "and it's very natural in the cloud native environment to have a lot of credentials across multiple providers",
    "start": "904260",
    "end": "909959"
  },
  {
    "text": "multiple systems you start to wonder well what are we doing with them and what happens if one of them is",
    "start": "909959",
    "end": "915180"
  },
  {
    "text": "compromised do we have the ability to a observe that something has been",
    "start": "915180",
    "end": "920399"
  },
  {
    "text": "compromised so that's where observability is important but also B make the changes with least disruption",
    "start": "920399",
    "end": "926040"
  },
  {
    "text": "to our systems and that's where immutability becomes really key to surviving in a cloud native environment",
    "start": "926040",
    "end": "933120"
  },
  {
    "text": "part of this is that it's easier to say I will completely create something net new with the changes rather than go in",
    "start": "933120",
    "end": "941040"
  },
  {
    "text": "and change or tweak one or two different configurations and lovingly go in and",
    "start": "941040",
    "end": "946920"
  },
  {
    "text": "identify where all of these credentials are where all these passwords are being used when they've been used who's using",
    "start": "946920",
    "end": "952800"
  },
  {
    "text": "them and so immutability becomes really powerful because when you say okay I",
    "start": "952800",
    "end": "958440"
  },
  {
    "text": "don't need to go in and make a change in place instead I can just create something completely new and fail over",
    "start": "958440",
    "end": "964560"
  },
  {
    "text": "to that new instance or new secret or new server or new set of applications",
    "start": "964560",
    "end": "970079"
  },
  {
    "text": "without necessarily removing the old one you can still use it still debug you can",
    "start": "970079",
    "end": "975480"
  },
  {
    "text": "put them in ISO relation and you generally mitigate the risk of how your",
    "start": "975480",
    "end": "980639"
  },
  {
    "text": "changes may impact the system and so immutability is all about mitigating risk at the end of the day and",
    "start": "980639",
    "end": "986220"
  },
  {
    "text": "mitigating the impact of a potential change failure and whenever we talk",
    "start": "986220",
    "end": "991380"
  },
  {
    "text": "about immutability it's scary people don't necessarily want to think about creating something new they think about",
    "start": "991380",
    "end": "996600"
  },
  {
    "text": "oh the resources are really expensive for me but in a true Cloud native environment resources are not as",
    "start": "996600",
    "end": "1003139"
  },
  {
    "text": "expensive as you expect and it's a decision that you make from the cost of failure versus the cost of creating that",
    "start": "1003139",
    "end": "1009560"
  },
  {
    "text": "resource and making sure that you're doing your due diligence and implementing the change correctly yeah I think that speaks to a lot of how you",
    "start": "1009560",
    "end": "1015019"
  },
  {
    "text": "have to design to be Cloud native that you want you know smaller units that and that makes the immutability easier",
    "start": "1015019",
    "end": "1021199"
  },
  {
    "text": "because you think about your whole system can't change well it's got all these different pieces that have to connect but if you break it down it's",
    "start": "1021199",
    "end": "1028040"
  },
  {
    "text": "easier to say well that isn't going to change and how do you adapt to having the ability to deploy each of those",
    "start": "1028040",
    "end": "1033980"
  },
  {
    "text": "small pieces individually or being able to change the one immutable thing without having to change all of it",
    "start": "1033980",
    "end": "1039678"
  },
  {
    "text": "there's a balance to it there's also a science it's almost like dependency injection but for cloud native",
    "start": "1039679",
    "end": "1046058"
  },
  {
    "text": "environments and we think about dependency and injection oftentimes in software right where we say okay we'll",
    "start": "1046059",
    "end": "1051980"
  },
  {
    "text": "not only have the abstraction but we'll also make sure that higher level resources will call lower level resources",
    "start": "1051980",
    "end": "1057020"
  },
  {
    "text": "and that's a way that we make sure we decouple those dependencies in the case of larger systems right modularity is",
    "start": "1057020",
    "end": "1063799"
  },
  {
    "text": "the science you have to identify what groups of functions are that make the most sense and so there is a fine line",
    "start": "1063799",
    "end": "1070460"
  },
  {
    "text": "between making too many small modules in your system generally I joke like if you",
    "start": "1070460",
    "end": "1076220"
  },
  {
    "text": "find yourself putting one or two resources or one or two components into a bucket and saying that's like one part",
    "start": "1076220",
    "end": "1082820"
  },
  {
    "text": "of the system that I'm always going to change maybe you should question if there are maybe more pieces to that that",
    "start": "1082820",
    "end": "1087980"
  },
  {
    "text": "you should be adding to that group on the other hand you shouldn't necessarily have a hundred different resources Bend",
    "start": "1087980",
    "end": "1093919"
  },
  {
    "text": "into let's say one group of a change right so it's a little bit harder to describe at times but I would certainly",
    "start": "1093919",
    "end": "1100880"
  },
  {
    "text": "say that the rule of immutability that I have is if it takes more than two or",
    "start": "1100880",
    "end": "1107660"
  },
  {
    "text": "three lines of code to make the change then I should probably do it immutably and that goes for infrastructure that",
    "start": "1107660",
    "end": "1113840"
  },
  {
    "text": "also goes for you know application code as well but it's a very difficult thing it's a a question I wonder if there is",
    "start": "1113840",
    "end": "1120380"
  },
  {
    "text": "like a scientific graph for evaluating it the answer is always it depends you have to evaluate your own situation I",
    "start": "1120380",
    "end": "1126140"
  },
  {
    "text": "think you mentioned optimizing for the provisioning that this only works if you can deploy those things quickly if it",
    "start": "1126140",
    "end": "1132200"
  },
  {
    "text": "takes half an hour to deploy or longer you're going to let that thing live longer and you might design it",
    "start": "1132200",
    "end": "1137780"
  },
  {
    "text": "differently but if you say oh I can change this and you know turn it off and back on again is the joke for it right",
    "start": "1137780",
    "end": "1143360"
  },
  {
    "text": "that that's going to happen in seconds or a few minutes then that's just the easier answer and there's also the other",
    "start": "1143360",
    "end": "1150200"
  },
  {
    "text": "thing where if a change has gone so drastically wrong that recovery is just",
    "start": "1150200",
    "end": "1155480"
  },
  {
    "text": "not looking very promising right in Place Recovery just not looking very promising and this happens sometimes in the case of let's say data corruption or",
    "start": "1155480",
    "end": "1162320"
  },
  {
    "text": "you know in a system where it's been compromised from a security standpoint then immutability works really well you",
    "start": "1162320",
    "end": "1167900"
  },
  {
    "text": "know it is worth let's say taking two days to stand up the new environment when you might take a week trying to",
    "start": "1167900",
    "end": "1174620"
  },
  {
    "text": "restore everything in place when all has gone wrong so there's still a power to",
    "start": "1174620",
    "end": "1180020"
  },
  {
    "text": "immutability and I think it will depend on as you've pointed out the scenario the day-to-day what you're doing what",
    "start": "1180020",
    "end": "1185900"
  },
  {
    "text": "change it is and what state that system is in in that point in time and he said State and I was just thinking that you",
    "start": "1185900",
    "end": "1192620"
  },
  {
    "text": "don't want to have a whole lot of State being managed in that service right you want to think about the service is just",
    "start": "1192620",
    "end": "1198020"
  },
  {
    "text": "doing the operation and the data is stored somewhere else it's another big design consideration it is we don't talk",
    "start": "1198020",
    "end": "1204440"
  },
  {
    "text": "enough about data and I think cloud native most of the time when we talk about Cloud native we often mix it with you know the idea of statelessness right",
    "start": "1204440",
    "end": "1210860"
  },
  {
    "text": "the application it does not contain any of the data does not track any of the data it is merely processing it but we",
    "start": "1210860",
    "end": "1216320"
  },
  {
    "text": "don't talk about State enough and I think that what makes Cloud native state important tends to be whether or not",
    "start": "1216320",
    "end": "1223100"
  },
  {
    "text": "you've handled the distribution of that data correctly it's no longer enough for us to say okay we've got one database",
    "start": "1223100",
    "end": "1228440"
  },
  {
    "text": "and we're just going to store it somewhere that data oftentimes we have to think carefully about where it's going to be replicated to as well as how",
    "start": "1228440",
    "end": "1234440"
  },
  {
    "text": "we're going to manage it I think we have to be more careful at times as well about how we do Disaster Recovery or",
    "start": "1234440",
    "end": "1241880"
  },
  {
    "text": "data recovery for cloud native components we oftentimes just sort of funnel that and ignore that",
    "start": "1241880",
    "end": "1247520"
  },
  {
    "text": "consideration when we talk about environments in the cloud out but I think it becomes more important to think",
    "start": "1247520",
    "end": "1253160"
  },
  {
    "text": "about backup think about recovery whenever you have those components yeah again nothing's for free nothing happens",
    "start": "1253160",
    "end": "1258740"
  },
  {
    "text": "automatically you have to design for it and plan for it I think we'll move on to elasticity you talked about this being",
    "start": "1258740",
    "end": "1263840"
  },
  {
    "text": "the Hallmark of cloud native and that's where we're sold go to the cloud and you can just expand and Shrink to meet your",
    "start": "1263840",
    "end": "1269960"
  },
  {
    "text": "demand almost Auto magically right and we talk about that usually as horizontal scaling that we want these small units",
    "start": "1269960",
    "end": "1276260"
  },
  {
    "text": "to just expand out and they work in parallel but is that always the right advice and for cloud native do we",
    "start": "1276260",
    "end": "1282440"
  },
  {
    "text": "sometimes need to have the vertical scaling as well so vertical is what we traditionally thought about",
    "start": "1282440",
    "end": "1287480"
  },
  {
    "text": "in terms of resource efficiency are we using our memory are we using our CPU to the greatest extent and if not and we",
    "start": "1287480",
    "end": "1293720"
  },
  {
    "text": "need more well we would say okay we'll need a server or we'll need a resource with more memory more CPU as you pointed",
    "start": "1293720",
    "end": "1299419"
  },
  {
    "text": "out with horizontal scaling instead we're focused on workload density right so how many of these instances in the",
    "start": "1299419",
    "end": "1305059"
  },
  {
    "text": "smallest unit of resource usage can we schedule and most of the time Cloud",
    "start": "1305059",
    "end": "1310520"
  },
  {
    "text": "native tends to be thought in the context of horizontal scaling how many of these containers can we schedule or",
    "start": "1310520",
    "end": "1316700"
  },
  {
    "text": "how many of these small little instances can we use to distribute this amount of data and the reality is that vertical",
    "start": "1316700",
    "end": "1322820"
  },
  {
    "text": "scaling is actually incredibly important in Cloud native as well because not everything can be horizontally scaled",
    "start": "1322820",
    "end": "1328580"
  },
  {
    "text": "and not everything should be horizontally scaled either and it's all dependent on sort of the idle versus",
    "start": "1328580",
    "end": "1334460"
  },
  {
    "text": "active resources you do have sometimes it is more efficient especially if you have something that is running with",
    "start": "1334460",
    "end": "1341120"
  },
  {
    "text": "great frequency sometimes you don't want necessarily horizontal scaling it's more efficient to allocate one resource and",
    "start": "1341120",
    "end": "1347840"
  },
  {
    "text": "that resource is allocated to running a job or some process very frequently and",
    "start": "1347840",
    "end": "1352940"
  },
  {
    "text": "then other times you might have a need for volume very very adjustable volume over time so volume adjusted based on",
    "start": "1352940",
    "end": "1359659"
  },
  {
    "text": "demand that could be requests you know for an application that could be how much information or how many functions",
    "start": "1359659",
    "end": "1366080"
  },
  {
    "text": "your process are running or processing something at one time so it's a pretty nuanced assessment with elasticity what",
    "start": "1366080",
    "end": "1372200"
  },
  {
    "text": "I will say is that part of our problem is that we think a lot about scaling up and we don't think necessarily about",
    "start": "1372200",
    "end": "1377960"
  },
  {
    "text": "scaling down and even whether you're doing vertical scaling or horizontal scaling there is a possible scale down",
    "start": "1377960",
    "end": "1384080"
  },
  {
    "text": "for both scenarios and that's where we have to be a little bit more careful",
    "start": "1384080",
    "end": "1389539"
  },
  {
    "text": "about how we optimize and where we schedule some of these workloads yeah that scaling down I think was another",
    "start": "1389539",
    "end": "1395659"
  },
  {
    "text": "talk at qcon about Cloud zombies we have all these instances that are running around and they either got too big and",
    "start": "1395659",
    "end": "1401659"
  },
  {
    "text": "they never got smaller or we left them running and I think Holly Cummins gave that talk talking about light switch-offs she just wants people to go",
    "start": "1401659",
    "end": "1408080"
  },
  {
    "text": "around and start turning things off you think oh it's in the cloud it'll just automatically turn off and nothing's as automatic as you think no it is not one",
    "start": "1408080",
    "end": "1415580"
  },
  {
    "text": "thing that I see elasticity tends to affect cost right and the thing that people don't realize is networking",
    "start": "1415580",
    "end": "1421280"
  },
  {
    "text": "components often are probably the culprit of the zombie resource that's kind of just hanging out there and not",
    "start": "1421280",
    "end": "1427580"
  },
  {
    "text": "really doing anything so in the case of AWS elastic IPS data transfer there's surprising amount that you get charged",
    "start": "1427580",
    "end": "1433640"
  },
  {
    "text": "for transfer out of a network and across regions as well and we don't think of",
    "start": "1433640",
    "end": "1438740"
  },
  {
    "text": "those as zombies per se because we're transmitting data out you know that's got to have some use and the reality is",
    "start": "1438740",
    "end": "1444380"
  },
  {
    "text": "sometimes we don't need to be be what I call doing the traffic trombone we don't need to send that traffic out really we",
    "start": "1444380",
    "end": "1450200"
  },
  {
    "text": "should be just keeping it within our Network so there's a lot of considerations there I like the zombie resources analogy",
    "start": "1450200",
    "end": "1456860"
  },
  {
    "text": "yeah that was part of the green software tracker design for sustainability and just that's another idea about going",
    "start": "1456860",
    "end": "1462679"
  },
  {
    "text": "Cloud native is you have all this power but you also have to be cognizant of how much carbon are you using and it's",
    "start": "1462679",
    "end": "1468740"
  },
  {
    "text": "harder to measure it's getting better A lot of times we just look at the cost of the resources and think oh that must be",
    "start": "1468740",
    "end": "1474500"
  },
  {
    "text": "you know how efficient it is and your example of you know you're having a lot of small things sometimes be useful to",
    "start": "1474500",
    "end": "1479900"
  },
  {
    "text": "have a few larger instances running I think a lot of examples of people went to a serverless offering because they",
    "start": "1479900",
    "end": "1486440"
  },
  {
    "text": "thought it would save money and they went back to a full VM or kubernetes or whatever because it turned out having",
    "start": "1486440",
    "end": "1492020"
  },
  {
    "text": "one thing provisioned all the time was cheaper than spinning up all these little instances all the time so you",
    "start": "1492020",
    "end": "1498740"
  },
  {
    "text": "can't just assume that oh we can go smaller and it'll be cheaper or be more efficient yeah exactly I see a lot in",
    "start": "1498740",
    "end": "1504980"
  },
  {
    "text": "data processing specifically people will spin up a lot of functions and the cost of the functions right",
    "start": "1504980",
    "end": "1511460"
  },
  {
    "text": "unfortunately it gets quite expensive and then they end up going to a dedicated data processing tool and",
    "start": "1511460",
    "end": "1517520"
  },
  {
    "text": "that's something that they host themselves right and over time they've made this discovery that it's no longer",
    "start": "1517520",
    "end": "1522559"
  },
  {
    "text": "feasible for them to maintain the volume of functions and the frequency of functions that they're spinning up well",
    "start": "1522559",
    "end": "1527960"
  },
  {
    "text": "let's wrap up with changeability so this is another promise of the cloud is the ability to be flexible and we get to try",
    "start": "1527960",
    "end": "1533960"
  },
  {
    "text": "new things that might be a new resource capability that was just offered or maybe it's a new way of working among",
    "start": "1533960",
    "end": "1539840"
  },
  {
    "text": "the teams what are some of the pitfalls that we'll run into if we just assume that we're going to the cloud and we get",
    "start": "1539840",
    "end": "1545059"
  },
  {
    "text": "all this flexibility to do whatever we want most of the time these latest offerings involve Paradigm shifts and",
    "start": "1545059",
    "end": "1550460"
  },
  {
    "text": "they're not Paradigm shifts about the technology themselves there are Paradigm ships about how we work it's about",
    "start": "1550460",
    "end": "1555620"
  },
  {
    "text": "processing about people a good example this is get UPS you know people have been really interested in get Ops",
    "start": "1555620",
    "end": "1561440"
  },
  {
    "text": "recently because it's this promise of continuous deployment of services with a metrics-based approach right automated",
    "start": "1561440",
    "end": "1567380"
  },
  {
    "text": "deployment you get a sense of what these metrics are you get automated rollback it handles the operational aspect of",
    "start": "1567380",
    "end": "1574279"
  },
  {
    "text": "rollout but it's a paradigm shift it's not that easy to say I'm going to defer all decision making automatically to a",
    "start": "1574279",
    "end": "1582559"
  },
  {
    "text": "controller that's going to assess whether or not these metrics are good or bad and then handle the rollout for me and then I'll trust that it will roll",
    "start": "1582559",
    "end": "1588500"
  },
  {
    "text": "back it's a really difficult thing to change your mindset on and so when we",
    "start": "1588500",
    "end": "1594200"
  },
  {
    "text": "talk about changeability in the context of cloud native it's this idea that you may have to convince someone to take on",
    "start": "1594200",
    "end": "1603140"
  },
  {
    "text": "New Perspective for these latest offerings or latest Technologies and that in some ways is a more difficult",
    "start": "1603140",
    "end": "1608900"
  },
  {
    "text": "Prospect some technical implementation right but what I generally say is that in the context of changeability there's",
    "start": "1608900",
    "end": "1615679"
  },
  {
    "text": "always an intermediate step you don't have to take advantage of the latest offering immediately in order to get",
    "start": "1615679",
    "end": "1621919"
  },
  {
    "text": "buy-in and to really think carefully about whether or not this new offering is for you from a cultural standpoint",
    "start": "1621919",
    "end": "1628520"
  },
  {
    "text": "for your organization choose the intermediate step and that may mean that you do something manually or you do",
    "start": "1628520",
    "end": "1634400"
  },
  {
    "text": "something that is not ideal in the beginning but then you eventually shift toward that latest approach so in the",
    "start": "1634400",
    "end": "1641480"
  },
  {
    "text": "example get Ops maybe you do some kind of CI automation that allows you to do some deployment that is partially manual",
    "start": "1641480",
    "end": "1648260"
  },
  {
    "text": "partially automated and that gets you a little bit closer to the get Ops Model A little bit more comfortable with it and",
    "start": "1648260",
    "end": "1653840"
  },
  {
    "text": "I think it's important to differentiate Cloud native changeability from cloud host to changeability Cloud host",
    "start": "1653840",
    "end": "1659480"
  },
  {
    "text": "changeability is this idea that you're hosting it and you may not necessarily re-platform it on the latest offering or",
    "start": "1659480",
    "end": "1665659"
  },
  {
    "text": "you may not want to take advantage of all these latest Technologies with Cloud native you do because to be honest",
    "start": "1665659",
    "end": "1671360"
  },
  {
    "text": "they'll probably deprecate the service offering you're using in a couple years so you always need to rethink about what",
    "start": "1671360",
    "end": "1677120"
  },
  {
    "text": "is the latest offering that you're going to have to move to in a couple years time I like the idea of having those",
    "start": "1677120",
    "end": "1683059"
  },
  {
    "text": "intermediate steps you don't have to jump to the end and assume you can get all the benefit and the overlap between",
    "start": "1683059",
    "end": "1688700"
  },
  {
    "text": "the I want this technical feature but I have to think about the socio-technical impacts and that for us to change our",
    "start": "1688700",
    "end": "1694100"
  },
  {
    "text": "process or change our application we have to get the people to change as well it's something we forget about so times",
    "start": "1694100",
    "end": "1700159"
  },
  {
    "text": "you know I think it's easy to say okay I'm going to quit my application and that's where this journey starts right",
    "start": "1700159",
    "end": "1705320"
  },
  {
    "text": "saying I'm going to put this application on the cloud it's easy enough to say I host it on the cloud and therefore I'm",
    "start": "1705320",
    "end": "1710419"
  },
  {
    "text": "running it but Cloud native is really it changes a lot of perspective and I think that's where we go wrong we forget that",
    "start": "1710419",
    "end": "1717620"
  },
  {
    "text": "we ourselves have to change to accommodate for a very Dynamic environment because we're no longer able",
    "start": "1717620",
    "end": "1722659"
  },
  {
    "text": "to control the next version of kubernetes or the next version of a monitoring tool anymore if we're using",
    "start": "1722659",
    "end": "1728419"
  },
  {
    "text": "Open Standards this will be driven by the community this will be driven by outside forces that are not directly in",
    "start": "1728419",
    "end": "1733940"
  },
  {
    "text": "our control and we have to make sure that we can adapt to all those things any final advice for the people who are",
    "start": "1733940",
    "end": "1739400"
  },
  {
    "text": "thinking about how to get either onto the cloud hosted onto the cloud native or what they're doing and how to make",
    "start": "1739400",
    "end": "1744620"
  },
  {
    "text": "any little incremental changes for their process it",
    "start": "1744620",
    "end": "1749559"
  },
  {
    "text": "we must be cloudy native and the thing is it's okay if you're Cloud hosted it's working for you you've got the cost",
    "start": "1750559",
    "end": "1755659"
  },
  {
    "text": "optimization you're looking for really it's already incremental progress for you right you don't have to wait around",
    "start": "1755659",
    "end": "1761179"
  },
  {
    "text": "for you know procurement of infrastructure for example maybe that's what the value you're seeing right now",
    "start": "1761179",
    "end": "1766940"
  },
  {
    "text": "and it's okay you're Cloud hosted if you do want to go to Cloud native and you want to scale the way you are offering",
    "start": "1766940",
    "end": "1774020"
  },
  {
    "text": "infrastructure as well as how people are developing Services because you've reached that point you know again take",
    "start": "1774020",
    "end": "1779720"
  },
  {
    "text": "those incremental steps you don't have to jump immediately to a new Greenfield offering and commit to changing",
    "start": "1779720",
    "end": "1785779"
  },
  {
    "text": "everything change one or two things that are already going to improve your workflow so think about what your workflow is today think about small",
    "start": "1785779",
    "end": "1792679"
  },
  {
    "text": "things that might make it a little bit better and then eventually you'll get to a point where you can say I'm fully Cloud native well I think it's a good",
    "start": "1792679",
    "end": "1798740"
  },
  {
    "text": "place to end so I want to thank you Rosemary Wong for joining us on the info queue podcast thank you for having me",
    "start": "1798740",
    "end": "1803899"
  },
  {
    "text": "and we hope you'll join us again soon for another episode [Music]",
    "start": "1803899",
    "end": "1819740"
  },
  {
    "text": "thank you [Music]",
    "start": "1821020",
    "end": "1828339"
  }
]