[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "[Music]",
    "start": "260",
    "end": "9240"
  },
  {
    "text": "my name is Alexia toolin I'm a Unix and Linux system administrator and uh I support postgress",
    "start": "9240",
    "end": "15560"
  },
  {
    "text": "databases from that hat very interested in automating system administration so instead of making changes to your",
    "start": "15560",
    "end": "21640"
  },
  {
    "text": "servers one by one by hand you use policy based system",
    "start": "21640",
    "end": "27080"
  },
  {
    "text": "administration where you write a policy that describes what your system should look like and then you have some",
    "start": "27080",
    "end": "33360"
  },
  {
    "text": "automated tool that checks the actual state of the system compared to your desired State and if necessary",
    "start": "33360",
    "end": "39160"
  },
  {
    "text": "reconciles that state so I do training on CF",
    "start": "39160",
    "end": "44320"
  },
  {
    "text": "engine which is this program that does that uh if you have any questions here's my email address Alexi verticalis",
    "start": "44320",
    "end": "50920"
  },
  {
    "text": "admin.com have more information on CF engine at my website ww. verticalis",
    "start": "50920",
    "end": "56320"
  },
  {
    "text": "admin.com Okay so",
    "start": "56320",
    "end": "61800"
  },
  {
    "text": "let me show you what I",
    "start": "61800",
    "end": "65159"
  },
  {
    "text": "have so first I'm going to um make sure I have a clean slate I'm removing",
    "start": "74040",
    "end": "79680"
  },
  {
    "text": "postgress ql- server package shutting down the database so we have a completely clean",
    "start": "79680",
    "end": "85880"
  },
  {
    "text": "slate to start um",
    "start": "85880",
    "end": "90520"
  },
  {
    "start": "90000",
    "end": "124000"
  },
  {
    "text": "I'm using uh sentos for my demonstration since uh Linux is so popular um today",
    "start": "91000",
    "end": "96159"
  },
  {
    "text": "and red hat is a very popular version of Linux so it seems to have a very broad coverage can I just see a show of hand",
    "start": "96159",
    "end": "101759"
  },
  {
    "text": "show of hands here how many of you are running um some kind of Red Hat Linux system so I have maybe three4 of the",
    "start": "101759",
    "end": "108880"
  },
  {
    "text": "room thank you so here we go I'm removing postgressql and postgressql D server",
    "start": "108880",
    "end": "117040"
  },
  {
    "text": "so nothing up my sleeve pocal is not running so what I'm going to do here is the way CF engine works is the idea is",
    "start": "124320",
    "end": "131160"
  },
  {
    "text": "you write a policy that describes the desired configuration of your",
    "start": "131160",
    "end": "136400"
  },
  {
    "text": "system and then CF engine will take that policy and we'll we'll look at your",
    "start": "136400",
    "end": "141519"
  },
  {
    "text": "system we'll compare it to the policy and when it finds deviations it will attempt to fix them so the idea is",
    "start": "141519",
    "end": "147400"
  },
  {
    "text": "instead of making changes to each system one by one manually is you write a",
    "start": "147400",
    "end": "152840"
  },
  {
    "text": "policy and then you have an automated system for monitoring that policy and enforcing that policy so this saves",
    "start": "152840",
    "end": "160360"
  },
  {
    "text": "tremendous labor when you get into tens hundreds thousands tens of thousands of servers increases the ratio of how many",
    "start": "160360",
    "end": "167959"
  },
  {
    "text": "servers you can have per system administrator and frees up the system administrator to do more interesting work than routine work if you configure",
    "start": "167959",
    "end": "175239"
  },
  {
    "text": "a database server then you have to configure another one and another one it's pretty cookie cutter well it's easier to just tell the computer how to",
    "start": "175239",
    "end": "182360"
  },
  {
    "text": "do it and have the computer do it so this is what we're going to do here we're going to have the computer do",
    "start": "182360",
    "end": "188000"
  },
  {
    "text": "it if anybody has any questions please feel free I I do take questions during the",
    "start": "190080",
    "end": "196280"
  },
  {
    "text": "presentation so this is my uh policy file and if anybody wants it's available",
    "start": "196760",
    "end": "204280"
  },
  {
    "text": "online I'm going to post it after the presentation umw",
    "start": "204280",
    "end": "209920"
  },
  {
    "text": "vertical CIS admin.com cfengine cfengine examples. tar if you",
    "start": "209920",
    "end": "216080"
  },
  {
    "text": "go to Vertical CIS admin.com CF engine you'll find a lot of things including these examples",
    "start": "216080",
    "end": "223760"
  },
  {
    "text": "so going I have to make this just a little bit smaller so it fits fits on the screen can you still",
    "start": "224879",
    "end": "231159"
  },
  {
    "text": "read that y okay good okay",
    "start": "231159",
    "end": "237680"
  },
  {
    "text": "so this this first section is the control section so this controls",
    "start": "237680",
    "end": "243760"
  },
  {
    "text": "the um running behavior of CF engine it controls CF engine's own behavior so",
    "start": "243760",
    "end": "250280"
  },
  {
    "text": "first we specify a version of our policy and this can be any text string so I I put in a numeric version identifier and",
    "start": "250280",
    "end": "257160"
  },
  {
    "text": "a date and then I'm using uh some commercial extensions to CF engine CF",
    "start": "257160",
    "end": "262759"
  },
  {
    "text": "engine has been open source since 1993 so it's still open source but uh",
    "start": "262759",
    "end": "268479"
  },
  {
    "text": "the last couple of years there's a a company CF engine um as out of Norway uh",
    "start": "268479",
    "end": "273960"
  },
  {
    "text": "with CF engine Incorporated a US subsidiary that supports the development of CF engine and provides support",
    "start": "273960",
    "end": "280639"
  },
  {
    "text": "commercial support 24/7 for CF engine and they've added some functionality and they've added database functionality",
    "start": "280639",
    "end": "287039"
  },
  {
    "text": "which is what I'm going to be demonstrating today so this uh host license is paid 10",
    "start": "287039",
    "end": "292240"
  },
  {
    "text": "it relates to the Enterprise bit of CF engine so this specifies uh inputs uh",
    "start": "292240",
    "end": "298240"
  },
  {
    "text": "input files this is the standard library for CF engine so finally here is our bundle sequence so in in CF engine",
    "start": "298240",
    "end": "305560"
  },
  {
    "text": "language you have the way you describe your configuration your system configuration you describe it using a",
    "start": "305560",
    "end": "310720"
  },
  {
    "text": "declarative language so you don't say install this package you say this package is installed and the reason for",
    "start": "310720",
    "end": "317280"
  },
  {
    "text": "that is how you install a package is different from system to system and from OS to OS and CF engine's job is to",
    "start": "317280",
    "end": "324680"
  },
  {
    "text": "abstract those differences from you and to take care of them for you",
    "start": "324680",
    "end": "330319"
  },
  {
    "text": "So when you say this package is installed that's a promise so the idea",
    "start": "331120",
    "end": "336240"
  },
  {
    "text": "is this package promises to be installed and it doesn't guarantee it because in",
    "start": "336240",
    "end": "341360"
  },
  {
    "text": "the real world you cannot guarantee uh something will be the case because there's some external dependencies uh",
    "start": "341360",
    "end": "348360"
  },
  {
    "text": "perhaps uh uh perhaps that uh you're loading the package from uh um an external database",
    "start": "348360",
    "end": "357080"
  },
  {
    "start": "350000",
    "end": "616000"
  },
  {
    "text": "an external repository and that repository is down today because they're having some problems so you can't",
    "start": "357080",
    "end": "362280"
  },
  {
    "text": "guarantee that a package will be installed but you can promise that you will try to install it so this is the model that CF engine is based on the",
    "start": "362280",
    "end": "368560"
  },
  {
    "text": "promise model it's a very practical approach and uh there is some logic and and math behind it some scientific",
    "start": "368560",
    "end": "375080"
  },
  {
    "text": "papers but for our use it's enough to to say that uh it's a promise and I'll show",
    "start": "375080",
    "end": "380280"
  },
  {
    "text": "you how it works so promises are grouped into bundles you have bundles of promises so a bundle is a collection of",
    "start": "380280",
    "end": "387479"
  },
  {
    "text": "one or more promises that has a name here we specify a sequence of bundles",
    "start": "387479",
    "end": "394319"
  },
  {
    "text": "that's the order in which these bundles will be examined and uh action taken to make the system match",
    "start": "394319",
    "end": "402440"
  },
  {
    "text": "the stated configuration one of the key challenges",
    "start": "402440",
    "end": "409240"
  },
  {
    "text": "to scalability is Knowledge Management so we we're drowning in the",
    "start": "409240",
    "end": "415039"
  },
  {
    "text": "sea of details CF engine aims to to help handle",
    "start": "415039",
    "end": "420919"
  },
  {
    "text": "that CF details so there there's different capabilities in CF engine to",
    "start": "420919",
    "end": "426280"
  },
  {
    "text": "help with Knowledge Management so one of the ways that uh you can Aid Knowledge",
    "start": "426280",
    "end": "431759"
  },
  {
    "text": "Management is by using descriptive bundle names so in this example I have a bundle that says DB",
    "start": "431759",
    "end": "438160"
  },
  {
    "text": "cluster is installed now you don't have to know anything about CF engine to understand what this uh bundle is going",
    "start": "438160",
    "end": "445000"
  },
  {
    "text": "to do and then I have a bundle pgba com trusts local",
    "start": "445000",
    "end": "451080"
  },
  {
    "text": "users so that also should be self-explanatory if it's not please let me",
    "start": "451080",
    "end": "457440"
  },
  {
    "text": "know DB cluster is running so it's one thing to install a package and it's",
    "start": "457440",
    "end": "462800"
  },
  {
    "text": "another thing to start the process so as system administrators the the basic things that we handle are",
    "start": "462800",
    "end": "470360"
  },
  {
    "text": "packages files",
    "start": "470360",
    "end": "475199"
  },
  {
    "text": "processes services and CF can handle all of these things the next bundle is database",
    "start": "476120",
    "end": "483639"
  },
  {
    "text": "exists so you have a database cluster up and next you create a database resident in that database",
    "start": "483639",
    "end": "491120"
  },
  {
    "text": "cluster and the final step is schema exists and is correct so you you've put",
    "start": "491120",
    "end": "496199"
  },
  {
    "text": "the database cluster there you've put a database inside that cluster and now you you've now you create some tables in",
    "start": "496199",
    "end": "501599"
  },
  {
    "text": "that database and and you have schema for those tables now the way CF engine operates normally is it runs",
    "start": "501599",
    "end": "508199"
  },
  {
    "text": "continuously by default it runs at 5 Minute intervals it's very lightweight has a",
    "start": "508199",
    "end": "515479"
  },
  {
    "text": "very light footprint when it runs all the components um the memory footprint is under 10",
    "start": "515479",
    "end": "521560"
  },
  {
    "text": "megabytes has very few dependencies CF engine is written in C and it has very",
    "start": "521560",
    "end": "526640"
  },
  {
    "text": "few dependencies uh three libraries that it requires so it's very Nimble has a very small footprint and it's very",
    "start": "526640",
    "end": "533720"
  },
  {
    "text": "portable because it's written in C so people are using it",
    "start": "533720",
    "end": "540040"
  },
  {
    "text": "uh on desktops people are using it on servers people are using it on super compute clusters that are tens",
    "start": "540040",
    "end": "547640"
  },
  {
    "text": "of thousands of nodes and people are using it on smartphones embedded devices",
    "start": "547640",
    "end": "553440"
  },
  {
    "text": "it can go lots of places so the idea is it can be used to",
    "start": "553440",
    "end": "558600"
  },
  {
    "text": "build a server and it can also be used to maintain a server so if if somebody makes some unauthorized changes to your",
    "start": "558600",
    "end": "564760"
  },
  {
    "text": "server CF engine will fix them to bring it back to your blueprint",
    "start": "564760",
    "end": "571360"
  },
  {
    "text": "how does that sound do you have any questions on anything I've said so",
    "start": "572120",
    "end": "576519"
  },
  {
    "text": "far",
    "start": "598320",
    "end": "601320"
  },
  {
    "start": "616000",
    "end": "1093000"
  },
  {
    "text": "e",
    "start": "628320",
    "end": "631320"
  },
  {
    "text": "e",
    "start": "658240",
    "end": "661240"
  },
  {
    "text": "e",
    "start": "688240",
    "end": "691240"
  },
  {
    "text": "e",
    "start": "718240",
    "end": "721240"
  },
  {
    "text": "e",
    "start": "748160",
    "end": "751160"
  },
  {
    "text": "e",
    "start": "778120",
    "end": "781120"
  },
  {
    "text": "e",
    "start": "808120",
    "end": "811120"
  },
  {
    "text": "e",
    "start": "838040",
    "end": "841040"
  },
  {
    "text": "e",
    "start": "868040",
    "end": "871040"
  },
  {
    "text": "e",
    "start": "898040",
    "end": "901040"
  },
  {
    "text": "e",
    "start": "927959",
    "end": "930959"
  },
  {
    "text": "e",
    "start": "957920",
    "end": "960920"
  },
  {
    "text": "e",
    "start": "987920",
    "end": "990920"
  },
  {
    "text": "e",
    "start": "1017839",
    "end": "1020839"
  },
  {
    "text": "e e",
    "start": "1047840",
    "end": "1051880"
  },
  {
    "start": "1093000",
    "end": "1161000"
  },
  {
    "text": "good question the names don't affect what happens the name is just an identifier that you give it and the main",
    "start": "1094039",
    "end": "1100919"
  },
  {
    "text": "purpose of the identifier is uh you have to be able to identify if you have different if you have more than one",
    "start": "1100919",
    "end": "1106520"
  },
  {
    "text": "bundle you have to be able to differentiate them but it's also use to give a meaningful name so you can see what the bundle you",
    "start": "1106520",
    "end": "1113240"
  },
  {
    "text": "can get an idea of what the bundle does without actually looking inside the bundle so you have this idea of",
    "start": "1113240",
    "end": "1118440"
  },
  {
    "text": "abstraction as enabling system administration you don't have to deal with all these details you just have as",
    "start": "1118440",
    "end": "1124480"
  },
  {
    "text": "a general summary but those details are available to you if you need to look at them so you can navigate these different",
    "start": "1124480",
    "end": "1130200"
  },
  {
    "text": "abstraction levels high level and low level so here's our first",
    "start": "1130200",
    "end": "1136520"
  },
  {
    "text": "bundle this is a bundle of type agent there's different components in CF engine that make up the CF engine system",
    "start": "1136520",
    "end": "1143640"
  },
  {
    "text": "different like 10 binaries about so the the part of CF engine that actually",
    "start": "1143640",
    "end": "1148880"
  },
  {
    "text": "makes changes to your system is the agent and the idea is each of your systems would have its",
    "start": "1148880",
    "end": "1154919"
  },
  {
    "text": "own CF engine installed and would run its own CF engine and would have a local",
    "start": "1154919",
    "end": "1160200"
  },
  {
    "text": "copy of the policy and you can run them Standalone like that or you can Network your CF engine instances and you can",
    "start": "1160200",
    "end": "1166880"
  },
  {
    "start": "1161000",
    "end": "1264000"
  },
  {
    "text": "have a source of the policy so you have a policy definition Point someplace where you issue policy and then these",
    "start": "1166880",
    "end": "1173480"
  },
  {
    "text": "nodes suck up the policy and check the their their their own system State",
    "start": "1173480",
    "end": "1178559"
  },
  {
    "text": "against the this Central policy so because you don't have a central point going around checking all",
    "start": "1178559",
    "end": "1184320"
  },
  {
    "text": "the servers it's very scalable each system takes care of",
    "start": "1184320",
    "end": "1189480"
  },
  {
    "text": "handling its own configuration so here we have a bundle of type agent and the name is DB cluster is",
    "start": "1189480",
    "end": "1196520"
  },
  {
    "text": "installed here we have a promise each promise starts with a promise type which is followed by a column so the promise",
    "start": "1196520",
    "end": "1202880"
  },
  {
    "text": "type is packages so this identifies what aspect of the system we're dealing with",
    "start": "1202880",
    "end": "1208039"
  },
  {
    "text": "are we dealing with packages or files or commands or what is it so this is a packages type promise and then you have",
    "start": "1208039",
    "end": "1214159"
  },
  {
    "text": "in double quotes you have a a system object this is the promiser this is the",
    "start": "1214159",
    "end": "1219919"
  },
  {
    "text": "the object that's affected by the promise so here we have a package called post SQL and then we have some",
    "start": "1219919",
    "end": "1226520"
  },
  {
    "text": "attributes of that promise and these attributes are pairs so it's",
    "start": "1226520",
    "end": "1232400"
  },
  {
    "text": "the attribute name and then the content or value of that attribute so the package",
    "start": "1232400",
    "end": "1239200"
  },
  {
    "text": "policy is well what do we do with this package do we add it do we delete it do we verify it do we update it so in this",
    "start": "1239200",
    "end": "1245400"
  },
  {
    "text": "case we say add it and the package method tells us what how are we going to handle this",
    "start": "1245400",
    "end": "1252240"
  },
  {
    "text": "package what package manager are we going to use because there's a wide variety of package managers out there today and you can have different package",
    "start": "1252240",
    "end": "1260520"
  },
  {
    "text": "managers in play on a single operating system so in this case we're saying well",
    "start": "1260520",
    "end": "1266240"
  },
  {
    "start": "1264000",
    "end": "1368000"
  },
  {
    "text": "this is a a yum package and it should be installed similarly we specify post SQL",
    "start": "1266240",
    "end": "1275360"
  },
  {
    "text": "Server package policy ad package method yam same as before here's something new",
    "start": "1275360",
    "end": "1280679"
  },
  {
    "text": "classes now classes in CF engine have nothing to do with objectoriented programming classes this is the English",
    "start": "1280679",
    "end": "1287120"
  },
  {
    "text": "word classes as in a set of things or a group of things that have some characteristic in",
    "start": "1287120",
    "end": "1294240"
  },
  {
    "text": "common like a class of cars or a class of sailboats or a class of database servers",
    "start": "1294520",
    "end": "1300400"
  },
  {
    "text": "so classes are a way to to group servers and the reason it's convenient to group",
    "start": "1300400",
    "end": "1306240"
  },
  {
    "text": "servers is you might want to have a policy that's not a global policy but it's specific to a group of servers so",
    "start": "1306240",
    "end": "1313320"
  },
  {
    "text": "for example you might want to have the httpd package installed on your web servers and the postgress ql server",
    "start": "1313320",
    "end": "1319080"
  },
  {
    "text": "package installed on your database servers so in your policy you say you can qualify a a promise with a",
    "start": "1319080",
    "end": "1326120"
  },
  {
    "text": "class and you can say this is a packages type promise that only applies to web servers and then you you say go ahead",
    "start": "1326120",
    "end": "1332279"
  },
  {
    "text": "and install this package so here what we're doing is we're saying if this promise is repaired then define a class",
    "start": "1332279",
    "end": "1340240"
  },
  {
    "text": "called startor progress now what does it mean for a promise to be repaired a promise can be",
    "start": "1340240",
    "end": "1346880"
  },
  {
    "text": "in three states as far as c f engine is concerned A promise is kept so for",
    "start": "1346880",
    "end": "1352760"
  },
  {
    "text": "example the policy states that the postgressql D server package should be installed we look in our system and we",
    "start": "1352760",
    "end": "1360400"
  },
  {
    "text": "find yes it's installed okay great package uh promisees kept that's one possible outcome there's two",
    "start": "1360400",
    "end": "1367360"
  },
  {
    "text": "others let's say the package is not installed so CF engine will install it it will run a command to interface with",
    "start": "1367360",
    "end": "1374159"
  },
  {
    "start": "1368000",
    "end": "1484000"
  },
  {
    "text": "the package manager to install the package that package is successfully installed that is considered a repaired",
    "start": "1374159",
    "end": "1381000"
  },
  {
    "text": "promise wasn't kept at the start but it was kept at the end so we call that a repaired promise the third possible",
    "start": "1381000",
    "end": "1386919"
  },
  {
    "text": "outcome is CF engine saw that there was no package it ran the command to install",
    "start": "1386919",
    "end": "1393200"
  },
  {
    "text": "the package and the command exited with a non-zero status the command failed",
    "start": "1393200",
    "end": "1398840"
  },
  {
    "text": "maybe the network was down maybe the remote repository was down maybe there was some file conflict and the package couldn't be installed whatever the case",
    "start": "1398840",
    "end": "1405480"
  },
  {
    "text": "we're now in the third possible outcome which is a promise not kept not kept means repair was attempted and it",
    "start": "1405480",
    "end": "1413000"
  },
  {
    "text": "failed so here we're qualifying our promise to install the package we're saying if this promise was repaired then",
    "start": "1413000",
    "end": "1420360"
  },
  {
    "text": "you define this special class called startor progress start uncore postgress",
    "start": "1420360",
    "end": "1426000"
  },
  {
    "text": "and and the way it comes into play is in the very next promise and by the way",
    "start": "1426000",
    "end": "1431400"
  },
  {
    "text": "each promise is terminated with a semicolon in the CF engent syntax a complete statement is terminated with a",
    "start": "1431400",
    "end": "1437039"
  },
  {
    "text": "semicolon so what this does is this is a commands",
    "start": "1437039",
    "end": "1442559"
  },
  {
    "text": "type promise it's a promise to run a command this is the command that we're going to run just start the poql",
    "start": "1442559",
    "end": "1450240"
  },
  {
    "text": "database but there's a qualifier here startor progress colon colon so this",
    "start": "1450240",
    "end": "1457120"
  },
  {
    "text": "command will only be run if that class is set and that class will only be set If This Promise was repaired so in",
    "start": "1457120",
    "end": "1465840"
  },
  {
    "text": "effect what this does yes sir the order in the",
    "start": "1465840",
    "end": "1470919"
  },
  {
    "text": "command I inst right right it makes sense you see",
    "start": "1470919",
    "end": "1478640"
  },
  {
    "text": "because the CF engine language is descriptive and not imperative or",
    "start": "1478640",
    "end": "1484520"
  },
  {
    "start": "1484000",
    "end": "1564000"
  },
  {
    "text": "procedural what you're describing as the final state of the configuration and not",
    "start": "1484520",
    "end": "1489960"
  },
  {
    "text": "how to get there but in in real life you have to take account of these sequential steps",
    "start": "1489960",
    "end": "1497480"
  },
  {
    "text": "so I could decoupled these two promises and just had two promises one is that",
    "start": "1497480",
    "end": "1504159"
  },
  {
    "text": "the package is installed and the other one is that this command will be run because this command can be run over and",
    "start": "1504159",
    "end": "1509919"
  },
  {
    "text": "over again with the same result on the first pass it will succeed it will start the database on the second pass the",
    "start": "1509919",
    "end": "1516360"
  },
  {
    "text": "second time you run it it will fail because the database is already running so it will fail to start the",
    "start": "1516360",
    "end": "1521640"
  },
  {
    "text": "database but the end result will be the same the database is running",
    "start": "1521640",
    "end": "1526720"
  },
  {
    "text": "so this class is not not necessary what I'm doing here is a little bit of um",
    "start": "1526720",
    "end": "1532200"
  },
  {
    "text": "trying to impose some kind of sequence in a declarative language it's not strictly speaking uh",
    "start": "1532200",
    "end": "1540120"
  },
  {
    "text": "necessary so in fact I will simplify this this",
    "start": "1540120",
    "end": "1546320"
  },
  {
    "text": "example well anyway I'll I'll I'll actually I'll leave it as it is so what we're doing here is this couples the two",
    "start": "1549320",
    "end": "1555600"
  },
  {
    "text": "promises so CF engine when runs it actually does three passes um over over",
    "start": "1555600",
    "end": "1562320"
  },
  {
    "text": "these promises and this allows things to click into place when there are",
    "start": "1562320",
    "end": "1567559"
  },
  {
    "start": "1564000",
    "end": "1662000"
  },
  {
    "text": "dependencies so it allows the system to converge very quickly from whatever its current state is to Ideal",
    "start": "1567559",
    "end": "1575200"
  },
  {
    "text": "state so this is a conditional promise and it will only be run if start underscore progress is is is set and",
    "start": "1576039",
    "end": "1583640"
  },
  {
    "text": "start on store postgress will be set only if this promise is repaired so what",
    "start": "1583640",
    "end": "1590640"
  },
  {
    "text": "will actually end up happening is after the package is installed immediately it will run the command to start postris",
    "start": "1590640",
    "end": "1597080"
  },
  {
    "text": "yes sir yeah yeah good",
    "start": "1597080",
    "end": "1605720"
  },
  {
    "text": "point thank you okay so let's let's actually see how",
    "start": "1610039",
    "end": "1616360"
  },
  {
    "text": "this works so stop stop being so theoretical and actually show you",
    "start": "1616360",
    "end": "1622880"
  },
  {
    "text": "something so the that that bundle was called uh DB cluster is installed so I",
    "start": "1623679",
    "end": "1629960"
  },
  {
    "text": "will run just that bundle DB cluster is installed and my",
    "start": "1629960",
    "end": "1637440"
  },
  {
    "text": "policy file is this uh Miss database demo. CF um dasi inform us of what's Happening",
    "start": "1637440",
    "end": "1645320"
  },
  {
    "text": "inform us of any changes you make to the system um um yep that should do",
    "start": "1645320",
    "end": "1653240"
  },
  {
    "text": "it so normally the bundle sequence is specified uh within your policy but uh",
    "start": "1655399",
    "end": "1661360"
  },
  {
    "text": "in our case we specifi it on the command line so you see this is the output from yam Dy install so we're installing the",
    "start": "1661360",
    "end": "1668760"
  },
  {
    "start": "1662000",
    "end": "1714000"
  },
  {
    "text": "the packages and we're starting the the database server",
    "start": "1668760",
    "end": "1677440"
  },
  {
    "text": "good idea thank you very much Max so the question was how does CF engine um know",
    "start": "1678600",
    "end": "1684320"
  },
  {
    "text": "the sequence in which to to handle these promises in this case the sequence is",
    "start": "1684320",
    "end": "1689799"
  },
  {
    "text": "imposed because this promise the commands promise is qualified you see",
    "start": "1689799",
    "end": "1695200"
  },
  {
    "text": "the startor postgress it's a shorthand for saying there is a a Boolean variable",
    "start": "1695200",
    "end": "1701799"
  },
  {
    "text": "called startor postgress check to see whether it's set if it's set then",
    "start": "1701799",
    "end": "1707120"
  },
  {
    "text": "proceed and run this command which is the service post SQL",
    "start": "1707120",
    "end": "1712480"
  },
  {
    "text": "star now this this variable doesn't exist it's a custom variable that that I",
    "start": "1712480",
    "end": "1718360"
  },
  {
    "start": "1714000",
    "end": "1898000"
  },
  {
    "text": "named and that variable will only be created when the package is when the",
    "start": "1718360",
    "end": "1725200"
  },
  {
    "text": "package promise for the database server cluster is installed so I have a promise",
    "start": "1725200",
    "end": "1731440"
  },
  {
    "text": "that this package will be installed if that package is repaired that means CF engine saw that this",
    "start": "1731440",
    "end": "1738240"
  },
  {
    "text": "package is not installed and went ahead and installed it that's a repair if that repair happens then that class will be",
    "start": "1738240",
    "end": "1745880"
  },
  {
    "text": "set and then because CF engine is cycling over your promises the next time it hits that command promise it will",
    "start": "1745880",
    "end": "1752279"
  },
  {
    "text": "take effect because now the context for it is going to be true so it's going to",
    "start": "1752279",
    "end": "1758399"
  },
  {
    "text": "run that command so it's it's it's efficient because it won't try running that command before the package is",
    "start": "1758399",
    "end": "1764000"
  },
  {
    "text": "installed does that answer your question we don't even need the post GRC package",
    "start": "1764000",
    "end": "1769159"
  },
  {
    "text": "the only reason I I wanted to install this so I can use the command line client to access the database so yeah",
    "start": "1769159",
    "end": "1774640"
  },
  {
    "text": "that order doesn't matter okay so the question was uh will the packages be installed in the order specified within",
    "start": "1774640",
    "end": "1780640"
  },
  {
    "text": "the packages section I think so but uh let me double",
    "start": "1780640",
    "end": "1787159"
  },
  {
    "text": "check let's just swap it around and we'll put the post SQL package second so",
    "start": "1787159",
    "end": "1793600"
  },
  {
    "text": "now let's remove postgress ql and postgress ql-",
    "start": "1793600",
    "end": "1801960"
  },
  {
    "text": "server so F first of all notice that the order that in which it was installed before was first the client and then the",
    "start": "1803840",
    "end": "1810399"
  },
  {
    "text": "server and that that was that was the order that we had",
    "start": "1810399",
    "end": "1816799"
  },
  {
    "text": "before so it it looks like it but let's just double check",
    "start": "1816799",
    "end": "1822640"
  },
  {
    "text": "so no it's",
    "start": "1831480",
    "end": "1834960"
  },
  {
    "text": "not right right that's a good point that's the order from yam's perspective",
    "start": "1839360",
    "end": "1845640"
  },
  {
    "text": "exactly dep yam will handle the dependencies for you because we're telling it yam Das y",
    "start": "1845799",
    "end": "1852080"
  },
  {
    "text": "so you're saying yes so that means if it has dependency it will pull them in not all package managers do that but the",
    "start": "1852080",
    "end": "1857519"
  },
  {
    "text": "ones that do it's it's very convenient on one hand because you don't have to track the dependencies but on the other hand you can install with a lot of stuff",
    "start": "1857519",
    "end": "1863960"
  },
  {
    "text": "on your system that you don't know about so Cuts both",
    "start": "1863960",
    "end": "1870240"
  },
  {
    "text": "ways any other questions about this this first bundle to install the database",
    "start": "1874639",
    "end": "1880720"
  },
  {
    "text": "cluster okay we'll continue next I I have a promise about a",
    "start": "1880720",
    "end": "1889440"
  },
  {
    "text": "file and that file is PG hp.com which is the access control list for",
    "start": "1889440",
    "end": "1895760"
  },
  {
    "text": "postgress so I have an attribute of that promise which is an edit line that means we're",
    "start": "1895760",
    "end": "1901399"
  },
  {
    "start": "1898000",
    "end": "1988000"
  },
  {
    "text": "going to make promises about the contents of that file we're going to go inside it and and and make some promises about it its contents and uh those edits",
    "start": "1901399",
    "end": "1909440"
  },
  {
    "text": "are summarized with the identify a trust local users so that describes what we're going to",
    "start": "1909440",
    "end": "1916760"
  },
  {
    "text": "do and I have a comment here that will is accessible when you run CF engine in",
    "start": "1916840",
    "end": "1922559"
  },
  {
    "text": "verbose mode or debug mode or when you get reports from it and the comment",
    "start": "1922559",
    "end": "1928519"
  },
  {
    "text": "allows me to document the purpose of this configuration so not only do you document the configuration just by",
    "start": "1928519",
    "end": "1934399"
  },
  {
    "text": "writing the policy because when you configure servers by hand and then the sment leaves the company the next sment",
    "start": "1934399",
    "end": "1941200"
  },
  {
    "text": "who comes in is going to be like well why is that server configured that way there might be documentation it might be",
    "start": "1941200",
    "end": "1947399"
  },
  {
    "text": "up to date or it might be you know up to date as of two years ago and then not updated since then when in policy based system",
    "start": "1947399",
    "end": "1953799"
  },
  {
    "text": "administration your policy becomes a living document this is the current state of the system well CF engine takes",
    "start": "1953799",
    "end": "1960399"
  },
  {
    "text": "that one step further and it allows you to document the purpose of that configuration so here I'm setting up",
    "start": "1960399",
    "end": "1967039"
  },
  {
    "text": "trust local users because I need rud to be able to access the database cluster",
    "start": "1967039",
    "end": "1972320"
  },
  {
    "text": "so CF engine which runs as root can get into the database to set up the database and the table schema",
    "start": "1972320",
    "end": "1978919"
  },
  {
    "text": "and again I have if the pro a trigger here if this promise is repaired then this special um context variable reload",
    "start": "1978919",
    "end": "1986519"
  },
  {
    "text": "uncore postgress will be true and again I have a command that will only run if",
    "start": "1986519",
    "end": "1991880"
  },
  {
    "start": "1988000",
    "end": "2136000"
  },
  {
    "text": "reload uncore postgress is true and it will reload postgress and the purpose",
    "start": "1991880",
    "end": "1997480"
  },
  {
    "text": "the purpose here is uh I'm going to add a comment to",
    "start": "1997480",
    "end": "2004279"
  },
  {
    "text": "document the purpose is load the new config",
    "start": "2004279",
    "end": "2010360"
  },
  {
    "text": "file and and oh I need to show you the the details of this edit line so if you want to you can go under the hood and",
    "start": "2019080",
    "end": "2024919"
  },
  {
    "text": "you can look at the details of this edit line trust local users bundle I have two promises here one is basically delete",
    "start": "2024919",
    "end": "2032559"
  },
  {
    "text": "lines everything so first it will empty the entire file and then it will promise that these",
    "start": "2032559",
    "end": "2038799"
  },
  {
    "text": "lines exist in the file so it will insert those lines so first I have a a a",
    "start": "2038799",
    "end": "2044519"
  },
  {
    "text": "comment that's a warning then this this file is under CF engine control don't edit it directly edit it in the policy",
    "start": "2044519",
    "end": "2050480"
  },
  {
    "text": "or else your changes will get overwritten and then I set up trust to all local",
    "start": "2050480",
    "end": "2056280"
  },
  {
    "text": "users so there's different ways you can edit a file with CF engine you can edit a single line in a file or you can edit",
    "start": "2056280",
    "end": "2062919"
  },
  {
    "text": "a section or you can edit the whole file or you can use a template it gives you a lot of power and flexibility and there's",
    "start": "2062919",
    "end": "2069118"
  },
  {
    "text": "a whole section of the manual on file editing so here we're just saying replace the whole file and put this in",
    "start": "2069119",
    "end": "2077599"
  },
  {
    "text": "it next I have a promise that the database cluster is running a promise bundle so I have two promises here a",
    "start": "2084399",
    "end": "2090679"
  },
  {
    "text": "processes type promise and a commands type promise so what a processes type promise does is it checks the process",
    "start": "2090679",
    "end": "2096560"
  },
  {
    "text": "table for regular expression which is here postgress and we have a special",
    "start": "2096560",
    "end": "2103320"
  },
  {
    "text": "attribute restart class what restart class is if it scanned the process table and",
    "start": "2103320",
    "end": "2109480"
  },
  {
    "text": "didn't find that pattern then it will set this class and the purpose of that",
    "start": "2109480",
    "end": "2114760"
  },
  {
    "text": "is you can then link that class to a commands type promise to take corrective action so what we're saying is check the",
    "start": "2114760",
    "end": "2122240"
  },
  {
    "text": "process table if you don't find the postest process here's the command to",
    "start": "2122240",
    "end": "2129640"
  },
  {
    "text": "to start postgress so this will handle this will",
    "start": "2130320",
    "end": "2137680"
  },
  {
    "text": "repair the case where postgress isn't running it's installed it's configured but it isn't running so if somebody",
    "start": "2137680",
    "end": "2143359"
  },
  {
    "text": "accidentally shuts down postgress this will start it or if the server rebooted",
    "start": "2143359",
    "end": "2148440"
  },
  {
    "text": "and the database didn't start because it's not configured to start on boot this will start it if it's not run if",
    "start": "2148440",
    "end": "2154280"
  },
  {
    "text": "the database is not running and somebody's editing the config volum in by hand right okay so the idea is when",
    "start": "2154280",
    "end": "2160359"
  },
  {
    "text": "you move into policy based system administration all your changes to the system should be done through",
    "start": "2160359",
    "end": "2166440"
  },
  {
    "text": "policy now there is a transition period where people are still used to editing files by hand but already they've",
    "start": "2166440",
    "end": "2173079"
  },
  {
    "text": "started to use a a configuration management system and it it can step on your toes pretty",
    "start": "2173079",
    "end": "2178720"
  },
  {
    "text": "hard so the next uh bundle is database exists and I only have one promise here",
    "start": "2178720",
    "end": "2185000"
  },
  {
    "text": "that's a promise to run a command and the command says create DB user postest and the database name is",
    "start": "2185000",
    "end": "2192079"
  },
  {
    "text": "conference that's just the name of my demo database and we have an attribute here",
    "start": "2192079",
    "end": "2198960"
  },
  {
    "text": "um to run this command in a shell in a separate shell which allows us to do input output redirection which allows",
    "start": "2198960",
    "end": "2205599"
  },
  {
    "text": "the command to run quietly because the idea is C CF engine runs every five minutes and this command will be run",
    "start": "2205599",
    "end": "2211760"
  },
  {
    "text": "every five minutes so it will work the first time but after that it will start to fail so you you don't want to know about it that it's failing",
    "start": "2211760",
    "end": "2218680"
  },
  {
    "text": "you could make this more complicated and you could check first does the database exist and if it doesn't then create it but either way you're going to have to",
    "start": "2218680",
    "end": "2224480"
  },
  {
    "text": "run a command to check if it exists or not so this this might end up being more efficient if less",
    "start": "2224480",
    "end": "2232559"
  },
  {
    "text": "elegant okay and now we get to the by the way everything I've shown you so far can be done using the open- source uh",
    "start": "2233079",
    "end": "2240240"
  },
  {
    "text": "addition of CF engine this this next part is where you get actually inside the database um and that's the",
    "start": "2240240",
    "end": "2246160"
  },
  {
    "text": "Enterprise extension that's the the the commercial one so first I create a variable here I",
    "start": "2246160",
    "end": "2252400"
  },
  {
    "text": "create a list that contains two elements create and verify this is because in my",
    "start": "2252400",
    "end": "2259040"
  },
  {
    "text": "databases type promises I want to do two operations I want to do a create",
    "start": "2259040",
    "end": "2264400"
  },
  {
    "text": "operation and a verify operation so when you create a list in CF engine and then you reference it as a",
    "start": "2264400",
    "end": "2270960"
  },
  {
    "text": "scalar variable it sets up an implicit Loop over each element of that list so",
    "start": "2270960",
    "end": "2276520"
  },
  {
    "text": "we'll take this promise and we'll run it twice once with",
    "start": "2276520",
    "end": "2281599"
  },
  {
    "text": "database operation create and once with database operation verify so it it's very compact language",
    "start": "2281599",
    "end": "2288880"
  },
  {
    "text": "very powerful it allows you it has a great",
    "start": "2288880",
    "end": "2294079"
  },
  {
    "text": "economy of expression so what what are we talking about here we're talking about the database conference and the",
    "start": "2294079",
    "end": "2301280"
  },
  {
    "text": "table speakers so it uses this uh um database name SLT name like a file",
    "start": "2301280",
    "end": "2307079"
  },
  {
    "text": "system hierarchical expression just to represent the database name and the table",
    "start": "2307079",
    "end": "2312599"
  },
  {
    "text": "name so this is a promise about the speaker table in the database conference",
    "start": "2312599",
    "end": "2317839"
  },
  {
    "start": "2313000",
    "end": "2747000"
  },
  {
    "text": "our database oparation will be two operations will be create and verify so if the table doesn't exist it will",
    "start": "2317839",
    "end": "2324079"
  },
  {
    "text": "create it and verify it will make sure that the database table exists and matches the",
    "start": "2324079",
    "end": "2330920"
  },
  {
    "text": "schema database type is SQL there's three database types supported by CF engine SQL datab databases which include",
    "start": "2330920",
    "end": "2338400"
  },
  {
    "text": "postgress and MySQL ldap directories and Microsoft registry",
    "start": "2338400",
    "end": "2344319"
  },
  {
    "text": "embedded database database columns so in this",
    "start": "2344319",
    "end": "2351920"
  },
  {
    "text": "table we expect to have three columns and I have the name of the column and",
    "start": "2351920",
    "end": "2358040"
  },
  {
    "text": "the type of the column and then the database server well",
    "start": "2358040",
    "end": "2363079"
  },
  {
    "text": "the details about our database server are abstracted to a configuration block",
    "start": "2363079",
    "end": "2368920"
  },
  {
    "text": "called demo postgress server so let's look at our demo postgress",
    "start": "2368920",
    "end": "2375040"
  },
  {
    "text": "server here are the details of our demo postgress server we specify the server owner the",
    "start": "2376040",
    "end": "2383480"
  },
  {
    "text": "server password the server host the server type and the connection database",
    "start": "2383480",
    "end": "2389880"
  },
  {
    "text": "that's the database to which we connect in order to create a database if it doesn't exist yet",
    "start": "2389880",
    "end": "2397440"
  },
  {
    "text": "so here I have three tables that I specify speakers rooms and",
    "start": "2402119",
    "end": "2408760"
  },
  {
    "text": "talks and I specify a different schema for for each table and that's it that covers all the policy so now I'm just",
    "start": "2408760",
    "end": "2415800"
  },
  {
    "text": "going to run CF agent",
    "start": "2415800",
    "end": "2419680"
  },
  {
    "text": "oh um I want to run the whole policy set not just the the first",
    "start": "2432839",
    "end": "2438359"
  },
  {
    "text": "bundle I was like that's too",
    "start": "2439000",
    "end": "2442720"
  },
  {
    "text": "quick okay so first thing it did was it okay I'm gonna have to scroll back up and and show you",
    "start": "2444319",
    "end": "2450280"
  },
  {
    "text": "this first thing it did was it edited the pgh.com",
    "start": "2450280",
    "end": "2455720"
  },
  {
    "text": "then we ran the reload command to read in those",
    "start": "2455720",
    "end": "2462359"
  },
  {
    "text": "changes then because postgress wasn't running it started",
    "start": "2465160",
    "end": "2471759"
  },
  {
    "text": "it then it ran the create DB command to create our demonstration",
    "start": "2472640",
    "end": "2478560"
  },
  {
    "text": "database now it goes on to to check the tables it sees database doesn't contain the promised table speakers so it",
    "start": "2478680",
    "end": "2486520"
  },
  {
    "text": "creates the it creates the the table table speakers is as promised so",
    "start": "2486520",
    "end": "2494000"
  },
  {
    "text": "now it's created it checks against the policy finds it matches okay so let's actually take a",
    "start": "2494000",
    "end": "2499599"
  },
  {
    "text": "look at what did it do D postgress DD",
    "start": "2499599",
    "end": "2505680"
  },
  {
    "text": "conference so here is my three tables I've got rooms with two columns speakers",
    "start": "2508000",
    "end": "2515480"
  },
  {
    "text": "with three columns and talks with the three columns so it automatically created the",
    "start": "2515480",
    "end": "2522000"
  },
  {
    "text": "three tables and set up the schema as as I told it to now what I'm going to do is I'm going",
    "start": "2522000",
    "end": "2529000"
  },
  {
    "text": "to mangle one of these tables and I'm going to drop one of the columns so I'm",
    "start": "2529000",
    "end": "2534599"
  },
  {
    "text": "going to drop the room undor name column from the table",
    "start": "2534599",
    "end": "2540440"
  },
  {
    "text": "rooms so let's say that's a DBA goof and uh now CF engine runs",
    "start": "2541119",
    "end": "2548880"
  },
  {
    "text": "every five",
    "start": "2548880",
    "end": "2552160"
  },
  {
    "text": "minutes and it corrected the Goof see it put the room name column back in the",
    "start": "2556760",
    "end": "2563599"
  },
  {
    "text": "table and you can tie it in so it if if if it ends up repairing a table I can log it or I can run a command to send an",
    "start": "2563599",
    "end": "2570599"
  },
  {
    "text": "alert so it can be as noisy or as silent as as you wish",
    "start": "2570599",
    "end": "2576720"
  },
  {
    "text": "so here I'm shutting shutting down the database did you no that's that's onto the",
    "start": "2586559",
    "end": "2594319"
  },
  {
    "text": "hood so you specify the",
    "start": "2594319",
    "end": "2598280"
  },
  {
    "text": "schema oh oh I can answer that it does alter table add column that's that's",
    "start": "2600040",
    "end": "2605839"
  },
  {
    "text": "part of what it showed that in this in this verbos uh see this is how it attempts to",
    "start": "2605839",
    "end": "2614400"
  },
  {
    "text": "yeah so you see it started the the database back",
    "start": "2619240",
    "end": "2624359"
  },
  {
    "text": "up so it repaired from a a shutdown an unintended shutdown and uh let's let's",
    "start": "2624880",
    "end": "2632079"
  },
  {
    "text": "mangle our config in another way I'm just going to drop one of these tables",
    "start": "2632079",
    "end": "2639040"
  },
  {
    "text": "there we go three",
    "start": "2652400",
    "end": "2655240"
  },
  {
    "text": "tables and one more demonstration",
    "start": "2661119",
    "end": "2666519"
  },
  {
    "text": "so I'm going to make uh much more restrictive",
    "start": "2676119",
    "end": "2681200"
  },
  {
    "text": "um I'm going to make the ACL much more restrictive in the",
    "start": "2681200",
    "end": "2686040"
  },
  {
    "text": "pba.com I'm running CF engine to repair it and uh first thing it does is is it",
    "start": "2691240",
    "end": "2697440"
  },
  {
    "text": "edits pba.com and then it reloads postgress so it rereads the new pgba and let's let's",
    "start": "2697440",
    "end": "2703440"
  },
  {
    "text": "take a look there we go it put it back local",
    "start": "2703440",
    "end": "2708559"
  },
  {
    "text": "all all so your system when it's under the care of CF engine can exhibit",
    "start": "2708559",
    "end": "2714000"
  },
  {
    "text": "self-healing characteristics any",
    "start": "2714000",
    "end": "2721319"
  },
  {
    "text": "questions okay thank you very much for coming I'd appreciate your time I left uh surveys um after seminar surveys just",
    "start": "2721800",
    "end": "2729640"
  },
  {
    "text": "give me a little bit of feedback I'd appreciate it if you have interest in learning more please give me some contact information and uh if you have",
    "start": "2729640",
    "end": "2736240"
  },
  {
    "text": "any questions uh Alexi at verticalis admin.com [Music]",
    "start": "2736240",
    "end": "2749800"
  }
]