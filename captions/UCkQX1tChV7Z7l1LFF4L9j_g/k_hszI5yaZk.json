[
  {
    "text": "foreign [Music]",
    "start": "0",
    "end": "16278"
  },
  {
    "text": "Estus I'm a principal engineer at AWS my job is to hopefully help you",
    "start": "16279",
    "end": "22859"
  },
  {
    "text": "understand and demystify the state of apis in the container ecosystem",
    "start": "22859",
    "end": "28519"
  },
  {
    "text": "now this is maybe a little more difficult task than than usual because",
    "start": "28519",
    "end": "34800"
  },
  {
    "text": "there's not one clear overarching component when we talk about containers there's run times there's",
    "start": "34800",
    "end": "41460"
  },
  {
    "text": "kubernetes there's oci and run C and so hopefully today we'll look at these",
    "start": "41460",
    "end": "48239"
  },
  {
    "text": "different layers and hopefully make it practical as well that you can see where apis exist how vendors and integrators",
    "start": "48239",
    "end": "56520"
  },
  {
    "text": "are plugging into various aspects of how containers work in runtimes and",
    "start": "56520",
    "end": "61800"
  },
  {
    "text": "kubernetes so let's get started now it's pretty much impossible to have",
    "start": "61800",
    "end": "68400"
  },
  {
    "text": "a modern discussion about containers without talking about docker Docker came",
    "start": "68400",
    "end": "73680"
  },
  {
    "text": "on the scene 2013 definitely huge uh increased interest in use in 2014",
    "start": "73680",
    "end": "81200"
  },
  {
    "text": "mainly around developers developers love the the concept and the abstraction that",
    "start": "81200",
    "end": "88320"
  },
  {
    "text": "Docker had put around this various set of Linux kernel capabilities and fell in",
    "start": "88320",
    "end": "94680"
  },
  {
    "text": "love really with this command line Simplicity of Docker Bill Docker push Docker run",
    "start": "94680",
    "end": "101420"
  },
  {
    "text": "and of course again command lines can be scripted and automated but it's",
    "start": "101420",
    "end": "108479"
  },
  {
    "text": "important to know that this command line has always been a lightweight client the docker engine itself is listening on a",
    "start": "108479",
    "end": "116220"
  },
  {
    "text": "socket and defines clearly defines an HTTP based rest API and every command",
    "start": "116220",
    "end": "122479"
  },
  {
    "text": "that you run in the docker client is calling one or more of these rest apis",
    "start": "122479",
    "end": "127560"
  },
  {
    "text": "to actually do the work to start your container to pull or push an image to a registry",
    "start": "127560",
    "end": "133319"
  },
  {
    "text": "uh usually this is local so again to many early users of Docker you just assumed that your Docker run was",
    "start": "133319",
    "end": "140640"
  },
  {
    "text": "instantly creating a process on your Linux machine or Cloud instance but it",
    "start": "140640",
    "end": "147180"
  },
  {
    "text": "was really calling over this remote API again on a Linux system would be local",
    "start": "147180",
    "end": "152280"
  },
  {
    "text": "but could be remote over TCP or a much better way was added more recently to",
    "start": "152280",
    "end": "159900"
  },
  {
    "text": "Tunnel that over SSH if you really need to be remote from the docker engine but",
    "start": "159900",
    "end": "166500"
  },
  {
    "text": "again the important fact here is that Docker has always been built around an",
    "start": "166500",
    "end": "171599"
  },
  {
    "text": "API that apis matured over the years but it's really",
    "start": "171599",
    "end": "177319"
  },
  {
    "text": "apis are where we enable integration automation so it's great to have a command line developers love it but as",
    "start": "177319",
    "end": "184620"
  },
  {
    "text": "you mature your tooling and your security stack and and your monitoring",
    "start": "184620",
    "end": "190500"
  },
  {
    "text": "the API has been the place where there have been other language clients created",
    "start": "190500",
    "end": "197040"
  },
  {
    "text": "python API for for Docker containers and so on and so really much of the",
    "start": "197040",
    "end": "204599"
  },
  {
    "text": "enablement around vendor technology and runtime security tools all these things",
    "start": "204599",
    "end": "209640"
  },
  {
    "text": "have been a labeled by that initial API that Docker created for the docker",
    "start": "209640",
    "end": "214800"
  },
  {
    "text": "engine be good for us to understand and will",
    "start": "214800",
    "end": "220680"
  },
  {
    "text": "actually help us through much of the rest of this talk is to understand the key Concepts that were behind that API",
    "start": "220680",
    "end": "227640"
  },
  {
    "text": "we obviously don't have time to dig fully into all the API definitions and object types all that is available on",
    "start": "227640",
    "end": "236280"
  },
  {
    "text": "Dockers documentation site you can definitely go dig in there but there are",
    "start": "236280",
    "end": "242099"
  },
  {
    "text": "three really key Concepts that I want us to start to understand and we'll see how",
    "start": "242099",
    "end": "247200"
  },
  {
    "text": "they affect even higher layer uses via other abstractions like kubernetes today",
    "start": "247200",
    "end": "254280"
  },
  {
    "text": "the first one is what I'm going to call the heart of a container and that's the Json representation of its configuration",
    "start": "254280",
    "end": "262019"
  },
  {
    "text": "if you ever use the docker inspect command you've seen docker's view of that",
    "start": "262019",
    "end": "268100"
  },
  {
    "text": "effectively you have things like the command to run maybe some C group resource limits or settings various",
    "start": "268100",
    "end": "276060"
  },
  {
    "text": "things about the isolation level do you want its own PID name space do you want the pin name space of the host are you",
    "start": "276060",
    "end": "283199"
  },
  {
    "text": "going to attach volumes environment variables all of this is wrapped up in this configuration object",
    "start": "283199",
    "end": "290820"
  },
  {
    "text": "around that is an image bundle and this has image metadata the layers the actual",
    "start": "290820",
    "end": "296340"
  },
  {
    "text": "file system so many of you know that if you use a build tool or you use",
    "start": "296340",
    "end": "302280"
  },
  {
    "text": "something like Docker build it assembles layers of content that are usually used",
    "start": "302280",
    "end": "308460"
  },
  {
    "text": "with a copy on write file system at runtime to assemble these layers into",
    "start": "308460",
    "end": "313620"
  },
  {
    "text": "what you think of as the root file system of your image and so this is what's built and pushed",
    "start": "313620",
    "end": "319800"
  },
  {
    "text": "and pulled from Registries this image bundle has references to this configuration object and all the layers",
    "start": "319800",
    "end": "325740"
  },
  {
    "text": "and possibly some labels or annotations um and the third concept is not so much",
    "start": "325740",
    "end": "333000"
  },
  {
    "text": "an object or another representation but the actual registry protocol itself and",
    "start": "333000",
    "end": "338639"
  },
  {
    "text": "this is again separate from the docker API there's an HTTP based API to talk to",
    "start": "338639",
    "end": "344520"
  },
  {
    "text": "a image registry to query or inspect or push content to a remote endpoint for",
    "start": "344520",
    "end": "351840"
  },
  {
    "text": "many again in the early days this equated to Docker Hub but there are many many implementations of the distribution",
    "start": "351840",
    "end": "358259"
  },
  {
    "text": "protocol today and many hosted Registries by effectively every cloud",
    "start": "358259",
    "end": "363780"
  },
  {
    "text": "provider out there so some of you probably already knew",
    "start": "363780",
    "end": "370080"
  },
  {
    "text": "where I was going with that the open container initiative was",
    "start": "370080",
    "end": "375419"
  },
  {
    "text": "created in 2015 to make sure that this whole Space of containers and runtimes",
    "start": "375419",
    "end": "380639"
  },
  {
    "text": "and Registries didn't fragment into a bunch of different ideas about what",
    "start": "380639",
    "end": "387240"
  },
  {
    "text": "these things meant and to standardize effectively around these Concepts we just discussed that were core to the",
    "start": "387240",
    "end": "394020"
  },
  {
    "text": "docker API and the docker implementation so that configuration we talked about",
    "start": "394020",
    "end": "399360"
  },
  {
    "text": "became the runtime spec in the oci that image bundle became the core of what is",
    "start": "399360",
    "end": "406919"
  },
  {
    "text": "now the image spec and that registry API again more",
    "start": "406919",
    "end": "412020"
  },
  {
    "text": "recently wasn't part of the initial chart of the oci has now been formalized",
    "start": "412020",
    "end": "417419"
  },
  {
    "text": "into the distribution spec and so you'll see that even though there",
    "start": "417419",
    "end": "422580"
  },
  {
    "text": "are many other run times than Docker today almost all of them are conformant to these three oci specifications and",
    "start": "422580",
    "end": "429960"
  },
  {
    "text": "there's ways to check that and validate that and the oci community continues to innovate and develop around these",
    "start": "429960",
    "end": "437220"
  },
  {
    "text": "specifications in addition the oci has a runtime",
    "start": "437220",
    "end": "442380"
  },
  {
    "text": "implementation that can parse and understand that runtime spec and turn it into a isolated process on Linux and",
    "start": "442380",
    "end": "451020"
  },
  {
    "text": "that implementation many of you would know as run C and so run C was created out of some of",
    "start": "451020",
    "end": "457800"
  },
  {
    "text": "the core underlying operating system interfaces that were in the docker",
    "start": "457800",
    "end": "462840"
  },
  {
    "text": "engine and they were brought out of the engine contributed to the oci and became run C today many of you might recognize",
    "start": "462840",
    "end": "471120"
  },
  {
    "text": "the term lib container most of that lib container code base is what became run C",
    "start": "471120",
    "end": "478620"
  },
  {
    "text": "so at this point you might say okay I understand about the oci specs and and",
    "start": "478620",
    "end": "484560"
  },
  {
    "text": "the standardization that's happened but I still don't see a common API for containers and you'd be correct the oci",
    "start": "484560",
    "end": "491819"
  },
  {
    "text": "did not create a standardized API for container life cycle the Run C command",
    "start": "491819",
    "end": "498900"
  },
  {
    "text": "line maybe a de facto standard there have been other implementations of the",
    "start": "498900",
    "end": "505440"
  },
  {
    "text": "Run C command line therefore allowing someone to replace run C at the bottom of a container stack",
    "start": "505440",
    "end": "512640"
  },
  {
    "text": "and and have other capabilities but again that's that's not really a clearly",
    "start": "512640",
    "end": "518339"
  },
  {
    "text": "defined API for containers so so far all we've seen is the docker has an API and",
    "start": "518339",
    "end": "525180"
  },
  {
    "text": "we now have some standards around those Core Concepts and principles that allow",
    "start": "525180",
    "end": "530820"
  },
  {
    "text": "there to be commonality and interoperability among various runtimes",
    "start": "530820",
    "end": "536519"
  },
  {
    "text": "so before we try and answer this question we need to go a bit further in our journey and talk a little bit more",
    "start": "536519",
    "end": "543839"
  },
  {
    "text": "than just about container run times so we can see that Docker provided a",
    "start": "543839",
    "end": "550620"
  },
  {
    "text": "solid answer for handling the container life cycle on a single node but almost as soon as Docker became",
    "start": "550620",
    "end": "557700"
  },
  {
    "text": "popular the use of containers in production showed that really at scale users needed ways to orchestrate",
    "start": "557700",
    "end": "564300"
  },
  {
    "text": "containers and just as fast as Docker had become popular now there are a bunch of popular",
    "start": "564300",
    "end": "570540"
  },
  {
    "text": "orchestration ideas everything from Nomad to mesos to kubernetes and Docker",
    "start": "570540",
    "end": "576480"
  },
  {
    "text": "even creating Docker swarm to offer their own ideas about orchestration",
    "start": "576480",
    "end": "581940"
  },
  {
    "text": "and so really at this point we have to dive into what it means to orchestrate containers and not just talk about",
    "start": "581940",
    "end": "589080"
  },
  {
    "text": "running containers on a single node now while it might be fun to dive in and",
    "start": "589080",
    "end": "596160"
  },
  {
    "text": "try and talk about the pros and cons of various ideas that were hashed around during the quote-unquote orchestration",
    "start": "596160",
    "end": "602820"
  },
  {
    "text": "wars effectively we only have time during this talk to discuss kubernetes the",
    "start": "602820",
    "end": "609480"
  },
  {
    "text": "heavy rate in the room the cloud native Computing Foundation was formed around",
    "start": "609480",
    "end": "614720"
  },
  {
    "text": "kubernetes as its first sort of Capstone project and we know the use of",
    "start": "614720",
    "end": "620580"
  },
  {
    "text": "kubernetes is extremely Broad in our industry it continues to gain",
    "start": "620580",
    "end": "626779"
  },
  {
    "text": "significant amounts of investment from cloud providers from Integrations of",
    "start": "626779",
    "end": "632700"
  },
  {
    "text": "vendors of all kinds and the cncf landscape continues to grow dramatically year over year",
    "start": "632700",
    "end": "639540"
  },
  {
    "text": "and so our focus is going to be on kubernetes just given that and the fact that we're continuing to dive into",
    "start": "639540",
    "end": "646279"
  },
  {
    "text": "what are the common apis and API use around containers and when we talk about",
    "start": "646279",
    "end": "651959"
  },
  {
    "text": "orchestration it really makes sense to talk about kubernetes",
    "start": "651959",
    "end": "657680"
  },
  {
    "text": "now we don't have time in a single talk to dig into all the details of how kubernetes is assembled all of its",
    "start": "657839",
    "end": "665100"
  },
  {
    "text": "components but there's two key aspects since we're talking about apis that I'd like for us to understand",
    "start": "665100",
    "end": "672300"
  },
  {
    "text": "one coming from the client side is the kubernetes API and we're showing one",
    "start": "672300",
    "end": "678600"
  },
  {
    "text": "piece of the broader kubernetes control plane known as the API server that API server has an endpoint that",
    "start": "678600",
    "end": "685860"
  },
  {
    "text": "listens for the kubernetes h API again a rest API over HTTP many of you if you're",
    "start": "685860",
    "end": "693660"
  },
  {
    "text": "a kubernetes user would use it via the Kube CTL tool but you could also curl",
    "start": "693660",
    "end": "699180"
  },
  {
    "text": "that endpoint or use other tools which have been written to talk to the kubernetes API server",
    "start": "699180",
    "end": "705839"
  },
  {
    "text": "at the other end of the spectrum I want to talk a little bit more about how the kublet",
    "start": "705839",
    "end": "712200"
  },
  {
    "text": "this node specific demon that's listening to the API server for the",
    "start": "712200",
    "end": "720060"
  },
  {
    "text": "placement of actual containers and pods we're going to talk about how the kublet talks to an actual container runtime",
    "start": "720060",
    "end": "727079"
  },
  {
    "text": "and that happens over grpc any container runtime that wants to be plugged into",
    "start": "727079",
    "end": "732420"
  },
  {
    "text": "kubernetes implements something known as the container runtime interface and we'll talk about that in a little more",
    "start": "732420",
    "end": "738779"
  },
  {
    "text": "detail in the next few slides so first let's talk a little bit more",
    "start": "738779",
    "end": "744240"
  },
  {
    "text": "about the kubernetes API this API server is really a key component of the control",
    "start": "744240",
    "end": "750120"
  },
  {
    "text": "plane and how clients and tools interact with the kubernetes objects",
    "start": "750120",
    "end": "756300"
  },
  {
    "text": "we've already mentioned it's a rest API over HTTP and you'd probably recognize",
    "start": "756300",
    "end": "761700"
  },
  {
    "text": "if you've been around kubernetes or even gone to a 101 kubernetes talk or Workshop there are a set of common",
    "start": "761700",
    "end": "768839"
  },
  {
    "text": "objects things like pods and services and Demon sets and many others",
    "start": "768839",
    "end": "774660"
  },
  {
    "text": "um these are all represented in a distributed database again the API is how you handle operations create and",
    "start": "774660",
    "end": "782459"
  },
  {
    "text": "update and delete and the rest of the kubernetes ecosystem is really using various Watchers and",
    "start": "782459",
    "end": "790079"
  },
  {
    "text": "reconcilers to handle the operational flow for how these deployments or pods",
    "start": "790079",
    "end": "795660"
  },
  {
    "text": "actually end up on a node and the power of kubernetes is really the extensibility of this declarative",
    "start": "795660",
    "end": "801720"
  },
  {
    "text": "State system if you're not happy with the abstractions given to you some of these",
    "start": "801720",
    "end": "807779"
  },
  {
    "text": "common objects I just talked about you can create your own custom resource objects they're going to land in that",
    "start": "807779",
    "end": "813959"
  },
  {
    "text": "same distributed database and you can create custom controllers to handle operations on those",
    "start": "813959",
    "end": "819720"
  },
  {
    "text": "now we're not going to go any deeper into that but there's another talk in the API track here at qcon that will dig",
    "start": "819720",
    "end": "826920"
  },
  {
    "text": "much deeper into that that could be of interest to you so as we saw in the initial diagram a",
    "start": "826920",
    "end": "834360"
  },
  {
    "text": "kubernetes cluster is made up of multiple nodes and on each node is a piece of software called the kubelet",
    "start": "834360",
    "end": "841079"
  },
  {
    "text": "the kublet again is listening for State changes in the distributed database",
    "start": "841079",
    "end": "848279"
  },
  {
    "text": "and is looking to place pods and deployments onto the local node",
    "start": "848279",
    "end": "854519"
  },
  {
    "text": "when instructed to do so by the orchestration layer the Kubla doesn't run containers itself",
    "start": "854519",
    "end": "861720"
  },
  {
    "text": "it needs a container runtime initially when kubernetes was created he used",
    "start": "861720",
    "end": "866760"
  },
  {
    "text": "Docker as the runtime and there was a piece of software called the docker shim part of the kubelet that implemented",
    "start": "866760",
    "end": "873180"
  },
  {
    "text": "this interface between the kublet and docker that implementation has been deprecated",
    "start": "873180",
    "end": "879180"
  },
  {
    "text": "and will be removed in the upcoming release of kubernetes later this month",
    "start": "879180",
    "end": "884399"
  },
  {
    "text": "so what you have left is the container runtime interface created several years ago as a common interface so that any",
    "start": "884399",
    "end": "892560"
  },
  {
    "text": "compliant container runtime could service the Kubla if you think about it the CRI is really",
    "start": "892560",
    "end": "899100"
  },
  {
    "text": "the only common API for runtimes we have today we talked about this earlier the docker had an API",
    "start": "899100",
    "end": "905699"
  },
  {
    "text": "container D the project I'm a maintainer of we have a go API as well as the grpc",
    "start": "905699",
    "end": "911480"
  },
  {
    "text": "API to our services Creo podman Singularity there are many",
    "start": "911480",
    "end": "918120"
  },
  {
    "text": "other runtimes out there across the ecosystem but CRI is really providing a common API",
    "start": "918120",
    "end": "926459"
  },
  {
    "text": "although truly the CRI is not really used outside of the kubernetes ecosystem today so instead of being a common API",
    "start": "926459",
    "end": "934260"
  },
  {
    "text": "endpoint that you could use anywhere in the container Universe CRI really tends",
    "start": "934260",
    "end": "941339"
  },
  {
    "text": "to only be used in the kubernetes ecosystem and pairs with other interfaces like cni for networking and",
    "start": "941339",
    "end": "949019"
  },
  {
    "text": "CSI for storage if you do implement the CRI say you're",
    "start": "949019",
    "end": "954420"
  },
  {
    "text": "going to create a container runtime and you want to plug into kubernetes it's",
    "start": "954420",
    "end": "959699"
  },
  {
    "text": "not just enough to represent containers there's the idea of a pod and a pod sandbox these are represented in the",
    "start": "959699",
    "end": "966839"
  },
  {
    "text": "definition of the CRI grpc interfaces and you can look those up on GitHub and",
    "start": "966839",
    "end": "973199"
  },
  {
    "text": "see exactly what interfaces you have to implement to be a CRI compliant runtime",
    "start": "973199",
    "end": "981380"
  },
  {
    "text": "so let's Briefly summarize what we've seen is we've looked at kubernetes from an API perspective",
    "start": "981779",
    "end": "988860"
  },
  {
    "text": "kubernetes has a client API that reflects this kubernetes object model",
    "start": "988860",
    "end": "994760"
  },
  {
    "text": "it's a well-defined API that's versioned it uses a rest over http",
    "start": "994760",
    "end": "1002660"
  },
  {
    "text": "and so tools like Kube CTL use that API",
    "start": "1002660",
    "end": "1007940"
  },
  {
    "text": "when we talk about how container runtimes are driven from the kublet this uses a grpc defined interfaces",
    "start": "1007940",
    "end": "1015860"
  },
  {
    "text": "known as the container runtime interface and hearkening back to",
    "start": "1015860",
    "end": "1021800"
  },
  {
    "text": "almost the beginning of our talk when we actually talk about containers and images that are used by these",
    "start": "1021800",
    "end": "1029298"
  },
  {
    "text": "runtimes These are oci compliant and that's important because fitting into the broader container",
    "start": "1029299",
    "end": "1035780"
  },
  {
    "text": "ecosystem there's interoperability between these run times because of the",
    "start": "1035780",
    "end": "1040819"
  },
  {
    "text": "oci specs and so when if you look at the Pod specification in kubernetes some of",
    "start": "1040819",
    "end": "1047418"
  },
  {
    "text": "those flags and features that you would pass to a container represent settings in the oci runtime spec for example and",
    "start": "1047419",
    "end": "1055700"
  },
  {
    "text": "when you define an image reference how that's pulled from a registry uses the",
    "start": "1055700",
    "end": "1060980"
  },
  {
    "text": "oci distribution API so that summarizes briefly uh kind of",
    "start": "1060980",
    "end": "1067340"
  },
  {
    "text": "both ends of the spectrum of the kubernetes API that we've looked at",
    "start": "1067340",
    "end": "1072740"
  },
  {
    "text": "so coming back to our initial question have we found that common API for containers",
    "start": "1072740",
    "end": "1078919"
  },
  {
    "text": "maybe in some ways if we're talking in the context of kubernetes the CRI is",
    "start": "1078919",
    "end": "1085100"
  },
  {
    "text": "that well-defined common API that abstracts away container runtime",
    "start": "1085100",
    "end": "1090620"
  },
  {
    "text": "differences but it's not again as we mentioned it's not used outside of kubernetes and so",
    "start": "1090620",
    "end": "1097760"
  },
  {
    "text": "therefore we still have other apis and other models of interacting with",
    "start": "1097760",
    "end": "1102940"
  },
  {
    "text": "container life cycles when we're not in the kubernetes ecosystem",
    "start": "1102940",
    "end": "1108380"
  },
  {
    "text": "however the CRI API is providing a valuable entry point for Integrations",
    "start": "1108380",
    "end": "1115940"
  },
  {
    "text": "and automation in the kubernetes context for example tools maybe from systic or datadog or",
    "start": "1115940",
    "end": "1124039"
  },
  {
    "text": "Aqua security or others can use that CRI endpoint",
    "start": "1124039",
    "end": "1129100"
  },
  {
    "text": "similar to how in the pre-kubernetes world they might have used the docker",
    "start": "1129100",
    "end": "1134840"
  },
  {
    "text": "engine API endpoint to gather information about what containers are running or provide other Telemetry and",
    "start": "1134840",
    "end": "1142400"
  },
  {
    "text": "security information coalesce maybe with ebpf tools or other things that those agents are running on",
    "start": "1142400",
    "end": "1150440"
  },
  {
    "text": "your behalf um but again maybe we're going to have to to back away from the hope that we",
    "start": "1150440",
    "end": "1158120"
  },
  {
    "text": "would find a common API that covers the whole spectrum of the container universe",
    "start": "1158120",
    "end": "1163640"
  },
  {
    "text": "and go back to a moniker that Docker used at the very Dawn as you might say",
    "start": "1163640",
    "end": "1169039"
  },
  {
    "text": "of the the container era as you well know no talk on containers",
    "start": "1169039",
    "end": "1175100"
  },
  {
    "text": "is complete without the picture of a container ship somewhere so here you go",
    "start": "1175100",
    "end": "1180620"
  },
  {
    "text": "but that shipping metaphor has been used to good effect by Docker throughout the",
    "start": "1180620",
    "end": "1186919"
  },
  {
    "text": "the last several years and one of those kind of monikers that",
    "start": "1186919",
    "end": "1192140"
  },
  {
    "text": "they've used throughout that that era has been build ship and run and it's a",
    "start": "1192140",
    "end": "1197780"
  },
  {
    "text": "it's a good representation of kind of the phases of of development in which",
    "start": "1197780",
    "end": "1203780"
  },
  {
    "text": "containers are used and so maybe instead of trying to find that one overarching API we should think about for each of",
    "start": "1203780",
    "end": "1210740"
  },
  {
    "text": "these steps in the life cycle of moving containers from development to",
    "start": "1210740",
    "end": "1215960"
  },
  {
    "text": "production where do apis exist how would you use them given your role where do they make",
    "start": "1215960",
    "end": "1223160"
  },
  {
    "text": "sense we're going to take that aspect of apis from here on out and hopefully make",
    "start": "1223160",
    "end": "1229880"
  },
  {
    "text": "it practical to understand where you should be using what apis from the",
    "start": "1229880",
    "end": "1236120"
  },
  {
    "text": "container ecosystem all right so let's dive in and look briefly at build ship and run",
    "start": "1236120",
    "end": "1243320"
  },
  {
    "text": "as they relate to apis or standardization that may be available in each of those categories so first let's",
    "start": "1243320",
    "end": "1250400"
  },
  {
    "text": "look at build Docker file itself the syntax of how Docker files are put together has never",
    "start": "1250400",
    "end": "1257720"
  },
  {
    "text": "been standardized in a formal way but effectively has become a de facto standard now we'll",
    "start": "1257720",
    "end": "1265039"
  },
  {
    "text": "talk in a few minutes that Docker file is not the only way to produce a container image it might be the most",
    "start": "1265039",
    "end": "1271580"
  },
  {
    "text": "traditional and and straightforward manner but there's a lot of tooling out there assembling container images",
    "start": "1271580",
    "end": "1277640"
  },
  {
    "text": "without using Docker files and of course the lack of sort of a",
    "start": "1277640",
    "end": "1283820"
  },
  {
    "text": "formal API for build is not necessarily a strong requirement",
    "start": "1283820",
    "end": "1289700"
  },
  {
    "text": "in this space because teams tend to adopt tools that match the requirements",
    "start": "1289700",
    "end": "1295820"
  },
  {
    "text": "for that organization so maybe there's already a traditional Jenkins cluster maybe they have adopted git lab or are",
    "start": "1295820",
    "end": "1304580"
  },
  {
    "text": "using GitHub actions or other hosted providers or even vendor tools",
    "start": "1304580",
    "end": "1311500"
  },
  {
    "text": "like code fresh what really matters is that the output of these tools is is a",
    "start": "1311500",
    "end": "1318320"
  },
  {
    "text": "standard format so we've already talked about oci and the image format and the registry API which we'll talk about",
    "start": "1318320",
    "end": "1324919"
  },
  {
    "text": "under ship but it really doesn't matter what the inputs are what those build tools are",
    "start": "1324919",
    "end": "1330919"
  },
  {
    "text": "the fact that all these tools are producing oci compliant images that can",
    "start": "1330919",
    "end": "1336740"
  },
  {
    "text": "be shipped to oci compliant Registries is the standardization that has become",
    "start": "1336740",
    "end": "1343580"
  },
  {
    "text": "valuable for the container ecosystem and of course build ties very closely to",
    "start": "1343580",
    "end": "1349039"
  },
  {
    "text": "ship because as soon as I assemble an image I want to put it in a registry and",
    "start": "1349039",
    "end": "1354740"
  },
  {
    "text": "here we have the most straightforward answer yes the registry and distribution",
    "start": "1354740",
    "end": "1360080"
  },
  {
    "text": "protocol is an oci standard today we talked about that and how it came to be",
    "start": "1360080",
    "end": "1365780"
  },
  {
    "text": "coming out of the original Docker registry protocol and so",
    "start": "1365780",
    "end": "1371000"
  },
  {
    "text": "pushing and pulling images and and related artifacts is standardized and",
    "start": "1371000",
    "end": "1376100"
  },
  {
    "text": "the API is stable and well understood there are still some unique aspects to",
    "start": "1376100",
    "end": "1381320"
  },
  {
    "text": "this around authentication that is not part of the standard but at least the core",
    "start": "1381320",
    "end": "1386500"
  },
  {
    "text": "functionality of pushing an image reference and all its component parts to",
    "start": "1386500",
    "end": "1392960"
  },
  {
    "text": "a registry is part of that standard when we talk about run we're going to",
    "start": "1392960",
    "end": "1398120"
  },
  {
    "text": "have to really talk sort of in two different aspects when we talk about kubernetes as we have been for a few few",
    "start": "1398120",
    "end": "1405799"
  },
  {
    "text": "last few slides the kubernetes API is clearly defined and well adopted by many",
    "start": "1405799",
    "end": "1412520"
  },
  {
    "text": "tools and organizations but when we step down to that runtime",
    "start": "1412520",
    "end": "1417559"
  },
  {
    "text": "layer as we've noted only the formats are standardized there so the oci runtime spec and image spec",
    "start": "1417559",
    "end": "1424880"
  },
  {
    "text": "now we've already noted that CRI is the common factor among major run times",
    "start": "1424880",
    "end": "1430520"
  },
  {
    "text": "built around those underlying oci standard types so that does give us",
    "start": "1430520",
    "end": "1435980"
  },
  {
    "text": "commonality in the kubernetes space but not necessarily at the runtime layer",
    "start": "1435980",
    "end": "1441559"
  },
  {
    "text": "itself so even though I just said that using a traditional Docker file is not the only way to generate a container",
    "start": "1441559",
    "end": "1448280"
  },
  {
    "text": "image this use of Base images and Docker files and the workflow around that remains a",
    "start": "1448280",
    "end": "1455240"
  },
  {
    "text": "significant part of how people build images today and this is encoded into tools like",
    "start": "1455240",
    "end": "1460820"
  },
  {
    "text": "Docker build build kit which is effectively replacing Docker build with",
    "start": "1460820",
    "end": "1465980"
  },
  {
    "text": "its own implementation but also used by many other tools build up from Red Hat and many others",
    "start": "1465980",
    "end": "1472039"
  },
  {
    "text": "continue to provide and enhance this workflow of Docker file base images",
    "start": "1472039",
    "end": "1478340"
  },
  {
    "text": "adding content Etc and the API in this model is really that",
    "start": "1478340",
    "end": "1483679"
  },
  {
    "text": "Docker file syntax a build kit has actually been providing revisions of the",
    "start": "1483679",
    "end": "1489020"
  },
  {
    "text": "docker file in effect its own standard and adding new features and so there are",
    "start": "1489020",
    "end": "1494240"
  },
  {
    "text": "interesting new innovations that have been announced even the past few weeks now if you're looking for tools that",
    "start": "1494240",
    "end": "1500720"
  },
  {
    "text": "combine these build workflows with kubernetes deployments and development models",
    "start": "1500720",
    "end": "1506860"
  },
  {
    "text": "they're definitely more than the few I'm going to list but you can look at scaffold or tecton or Conoco and again",
    "start": "1506860",
    "end": "1514340"
  },
  {
    "text": "many other vendor tools that integrate ideas like git Ops and cicd with these",
    "start": "1514340",
    "end": "1520220"
  },
  {
    "text": "traditional build operations of getting your container images assembled",
    "start": "1520220",
    "end": "1525440"
  },
  {
    "text": "there are a few interesting projects out there that may be worth looking at KO",
    "start": "1525440",
    "end": "1531520"
  },
  {
    "text": "if you're writing in go maybe writing microservices that you just want static",
    "start": "1531520",
    "end": "1538220"
  },
  {
    "text": "go binaries on a very very slim base KO can do that for you even build multi-arc",
    "start": "1538220",
    "end": "1545480"
  },
  {
    "text": "images and integrates push and integrates with many other tools build",
    "start": "1545480",
    "end": "1551659"
  },
  {
    "text": "packs which has been contributed to the cncf coming out of some of the original working Cloud Foundry brings interesting",
    "start": "1551659",
    "end": "1559700"
  },
  {
    "text": "ideas about replacing those base layers without having to rebuild the whole image",
    "start": "1559700",
    "end": "1564980"
  },
  {
    "text": "as I mentioned a minute ago bill has been adding some interesting Innovations and actually just have a recent blog",
    "start": "1564980",
    "end": "1571880"
  },
  {
    "text": "post about a very similar idea using Docker file and at dagger.io a new project from",
    "start": "1571880",
    "end": "1579799"
  },
  {
    "text": "Solomon Heights and some of his early Founders from Docker are looking at",
    "start": "1579799",
    "end": "1585080"
  },
  {
    "text": "providing some new ideas around cicd again integrating with kubernetes and",
    "start": "1585080",
    "end": "1590299"
  },
  {
    "text": "other container services providing a pipeline for build CI CD an",
    "start": "1590299",
    "end": "1596720"
  },
  {
    "text": "update of images so we mentioned that for ship there's",
    "start": "1596720",
    "end": "1602539"
  },
  {
    "text": "already a common registry distribution API and a common format the oci image",
    "start": "1602539",
    "end": "1607940"
  },
  {
    "text": "spec and many build tools handle the ship step already by default they can ship images",
    "start": "1607940",
    "end": "1614720"
  },
  {
    "text": "to any oci compliant registry all the build tools we just talked about support pushing up to cloud services like ECR or",
    "start": "1614720",
    "end": "1624760"
  },
  {
    "text": "GCR and on-prem registry or self-hosted registry",
    "start": "1624760",
    "end": "1629900"
  },
  {
    "text": "now the Innovations here will most likely come via artifact support",
    "start": "1629900",
    "end": "1635059"
  },
  {
    "text": "one of the hottest topics in this in this space is image signing and so",
    "start": "1635059",
    "end": "1640820"
  },
  {
    "text": "you've probably heard of projects like cosine and sing store and the notary V2 efforts there's a lot of talk about",
    "start": "1640820",
    "end": "1648320"
  },
  {
    "text": "secure supply chain and so software build materials is another artifact type that aligns with your container image",
    "start": "1648320",
    "end": "1655520"
  },
  {
    "text": "and then there's ideas about bundling it's not just my image but Helm charts or other artifacts that might go along",
    "start": "1655520",
    "end": "1662779"
  },
  {
    "text": "with my image and so these topics are being collaborated on",
    "start": "1662779",
    "end": "1668779"
  },
  {
    "text": "in various oci and cncf working groups and therefore hopefully this will lead",
    "start": "1668779",
    "end": "1674419"
  },
  {
    "text": "to Common apis and formats and not as a unique set of tools that will all",
    "start": "1674419",
    "end": "1679760"
  },
  {
    "text": "operate slightly differently and so again ship has maybe our clearest sense",
    "start": "1679760",
    "end": "1685940"
  },
  {
    "text": "of of common apis common formats and it continues to do so even with some",
    "start": "1685940",
    "end": "1692299"
  },
  {
    "text": "of the Innovations around artifacts and signing now for the Run phase we're going to",
    "start": "1692299",
    "end": "1699260"
  },
  {
    "text": "split our discussion along two axes one as a user or consumer and the other is a",
    "start": "1699260",
    "end": "1705740"
  },
  {
    "text": "builder or a vendor on the user side you really your main choice is going to",
    "start": "1705740",
    "end": "1711919"
  },
  {
    "text": "be kubernetes or something else and with kubernetes as we've talked about you'll",
    "start": "1711919",
    "end": "1717200"
  },
  {
    "text": "have options for additional abstractions or not just whether you depend on a",
    "start": "1717200",
    "end": "1722539"
  },
  {
    "text": "managed service from a cloud provider or roll your own but even higher layer abstractions around passes like k-native",
    "start": "1722539",
    "end": "1729799"
  },
  {
    "text": "or open fast or Cloud Foundry which also is built around kubernetes but no matter",
    "start": "1729799",
    "end": "1735620"
  },
  {
    "text": "your choice here the apis will be common across these tools and there'll be a breadth of Integrations that you can",
    "start": "1735620",
    "end": "1741919"
  },
  {
    "text": "pick from because of the size and scale of the cncf and kubernetes ecosystem",
    "start": "1741919",
    "end": "1747620"
  },
  {
    "text": "now maybe kubernetes won't be the choice based on your specific needs and you may",
    "start": "1747620",
    "end": "1753799"
  },
  {
    "text": "choose some non-kubernetes orchestration model maybe one of the major Cloud providers fargate or Cloud run",
    "start": "1753799",
    "end": "1762220"
  },
  {
    "text": "or maybe cycle.io or hashcorps Nomad again ideas that are built around",
    "start": "1762220",
    "end": "1769279"
  },
  {
    "text": "kubernetes but provide some of those same capabilities in these cases obviously you'll be",
    "start": "1769279",
    "end": "1774799"
  },
  {
    "text": "adopting the API and the tools and the structure of that particular orchestration platform",
    "start": "1774799",
    "end": "1781580"
  },
  {
    "text": "now as a builder or vendor again maybe you'll have the option to stay within",
    "start": "1781580",
    "end": "1786679"
  },
  {
    "text": "the kubernetes or cncf ecosystem and you'll be building or extending or",
    "start": "1786679",
    "end": "1791720"
  },
  {
    "text": "integrating with the kubernetes API and its control plane again giving you a common API entry",
    "start": "1791720",
    "end": "1798980"
  },
  {
    "text": "point and the broad adoption means you'll have lots of building blocks and other Integrations to work with",
    "start": "1798980",
    "end": "1806240"
  },
  {
    "text": "now if you need to integrate with container runtimes we've already talked",
    "start": "1806240",
    "end": "1812059"
  },
  {
    "text": "about sort of the easy path within the kubernetes context I'm just using the CRI the CRI has already abstracted you",
    "start": "1812059",
    "end": "1819140"
  },
  {
    "text": "away from having to know details about the particular runtime providing the CRI",
    "start": "1819140",
    "end": "1824600"
  },
  {
    "text": "but if you need to integrate at a lower point for more than one runtime we've",
    "start": "1824600",
    "end": "1830299"
  },
  {
    "text": "already talked about there not being any clean option for that now maybe there's a potential for you to",
    "start": "1830299",
    "end": "1837080"
  },
  {
    "text": "integrate at the lowest layer of the stack at run C or or have using oci hooks but there are drawbacks there as",
    "start": "1837080",
    "end": "1844279"
  },
  {
    "text": "well because maybe there'll be integration with micro VMS like Kata containers or firecracker which may",
    "start": "1844279",
    "end": "1852260"
  },
  {
    "text": "prevent you from having the integration you need at that layer",
    "start": "1852260",
    "end": "1857960"
  },
  {
    "text": "hopefully in these last few minutes you've seen some of the trade-offs and pros and cons of decisions you'll need",
    "start": "1857960",
    "end": "1864799"
  },
  {
    "text": "to make either as someone building tools for this space or needing to adopt a",
    "start": "1864799",
    "end": "1870200"
  },
  {
    "text": "platform or trying to understand how to navigate the container space",
    "start": "1870200",
    "end": "1875299"
  },
  {
    "text": "so here here's a summary of a few decision points first of all I'd say that the docker",
    "start": "1875299",
    "end": "1880940"
  },
  {
    "text": "engine and its API are still a valid single node solution for developers there's plenty of tools and Integrations",
    "start": "1880940",
    "end": "1887960"
  },
  {
    "text": "it's been around for quite a while we haven't even talked about Docker compose which is still very popular and has",
    "start": "1887960",
    "end": "1895820"
  },
  {
    "text": "plenty of tools built around it so much so that podman from Red Hat has also",
    "start": "1895820",
    "end": "1901760"
  },
  {
    "text": "implemented the docker API and added compose support alternatively container D which really",
    "start": "1901760",
    "end": "1908779"
  },
  {
    "text": "was created as an engine to be embedded without really a full client now has a",
    "start": "1908779",
    "end": "1916520"
  },
  {
    "text": "client project called nerd CTL that also has been adding composed support and providing some of the",
    "start": "1916520",
    "end": "1923179"
  },
  {
    "text": "similar client experiences without the full Docker engine",
    "start": "1923179",
    "end": "1928580"
  },
  {
    "text": "of course we've already seen that kubernetes really provides the most adopted platform in this space both for",
    "start": "1928580",
    "end": "1935240"
  },
  {
    "text": "tools and having a common API and this allows for broad standardization so",
    "start": "1935240",
    "end": "1942080"
  },
  {
    "text": "tools interoperability use in both development and production there's a ton",
    "start": "1942080",
    "end": "1948740"
  },
  {
    "text": "going on in this space and I assume and believe that will continue it's also worth noting that even though",
    "start": "1948740",
    "end": "1955760"
  },
  {
    "text": "we've shown that there's no real common API outside of the kubernetes ecosystem",
    "start": "1955760",
    "end": "1961700"
  },
  {
    "text": "for containers most likely as you know you're going to adopt other apis",
    "start": "1961700",
    "end": "1967039"
  },
  {
    "text": "adjacent even to your kubernetes use or container tools that you might adopt",
    "start": "1967039",
    "end": "1973100"
  },
  {
    "text": "you're going to choose probably a cloud provider an infrastructure platform you're going to use other services",
    "start": "1973100",
    "end": "1979039"
  },
  {
    "text": "around storage and networking and again there will always be a small handful of",
    "start": "1979039",
    "end": "1985640"
  },
  {
    "text": "apis even if we could come into a perfect world where we defined a",
    "start": "1985640",
    "end": "1992240"
  },
  {
    "text": "clear and common API from containers so what about the future",
    "start": "1992240",
    "end": "1998600"
  },
  {
    "text": "I think it's pretty easy to say that significant Innovation around run times and the apis around them will stay in",
    "start": "1998600",
    "end": "2005380"
  },
  {
    "text": "kubernetes because of the breadth of adoption and the commonality provided",
    "start": "2005380",
    "end": "2010419"
  },
  {
    "text": "there so for example Sig node the special interest group in kubernetes focused on",
    "start": "2010419",
    "end": "2015760"
  },
  {
    "text": "the Node that includes the kublet software and its components and the oci",
    "start": "2015760",
    "end": "2021399"
  },
  {
    "text": "communities are really providing innovations that cross up through this stack to enhance capabilities for",
    "start": "2021399",
    "end": "2027880"
  },
  {
    "text": "example there have been kubernetes enhancement proposals still in flight for user namespaces checkpoint restore",
    "start": "2027880",
    "end": "2035019"
  },
  {
    "text": "swap support and so as these features are added they",
    "start": "2035019",
    "end": "2040179"
  },
  {
    "text": "drive this commonality up through being exposed in the CRI and also implemented",
    "start": "2040179",
    "end": "2045460"
  },
  {
    "text": "by the teams managing the runtimes themselves so you get to adopt new",
    "start": "2045460",
    "end": "2050740"
  },
  {
    "text": "container capabilities all through the common CRI API and the runtimes and the",
    "start": "2050740",
    "end": "2056679"
  },
  {
    "text": "oci communities that deal with the specifications do that work to make it",
    "start": "2056679",
    "end": "2062020"
  },
  {
    "text": "possible to have a single interface to these new capabilities again there will probably never be a",
    "start": "2062020",
    "end": "2069460"
  },
  {
    "text": "clear path to commonality at the run times themselves effectively at this moment you have two",
    "start": "2069460",
    "end": "2076179"
  },
  {
    "text": "main camps you've got Docker dependent on container D and run C and you have",
    "start": "2076179",
    "end": "2081820"
  },
  {
    "text": "Creo and podman and bilda and C run and some other tools used in openshift and",
    "start": "2081820",
    "end": "2087398"
  },
  {
    "text": "and red hat customers via Rel and other OS distros",
    "start": "2087399",
    "end": "2093700"
  },
  {
    "text": "there are different design ideologies between these two camps and it really means it's unlikely that there will be",
    "start": "2093700",
    "end": "2100619"
  },
  {
    "text": "absolutely common API for run times outside of that layer above in the",
    "start": "2100619",
    "end": "2106540"
  },
  {
    "text": "container runtime interface in kubernetes so we've covered a lot of ground trying",
    "start": "2106540",
    "end": "2112900"
  },
  {
    "text": "to look into this aspect of apis in the container landscape and ecosystem",
    "start": "2112900",
    "end": "2119079"
  },
  {
    "text": "hopefully I've been able to demystify some of the different layers involved here from container runtimes to the oci",
    "start": "2119079",
    "end": "2125920"
  },
  {
    "text": "specs to the kubernetes ecosystem but I'd love to answer questions you",
    "start": "2125920",
    "end": "2131680"
  },
  {
    "text": "might have if you're watching this during qcon plus I think there'll be a live q a",
    "start": "2131680",
    "end": "2136839"
  },
  {
    "text": "and hopefully if you're in person in qcon London we'll have time there to chat about these issues and continue to",
    "start": "2136839",
    "end": "2144040"
  },
  {
    "text": "see how our ecosystem progresses for apis and tools and Integrations across",
    "start": "2144040",
    "end": "2151180"
  },
  {
    "text": "the container landscape thanks so much",
    "start": "2151180",
    "end": "2155460"
  },
  {
    "text": "thank you so much for yet another awesome talk yeah thanks Wes",
    "start": "2158380",
    "end": "2164980"
  },
  {
    "text": "um so let's jump in right where uh I think you answered it but let's just take it uh to uh verbally there was uh",
    "start": "2164980",
    "end": "2171579"
  },
  {
    "text": "nerd CTL uh container D approach does it use the same build API as the docker",
    "start": "2171579",
    "end": "2176920"
  },
  {
    "text": "file subject so very similar to how Docker has been",
    "start": "2176920",
    "end": "2182740"
  },
  {
    "text": "moving to using build kit as the build engine when you install Docker so that's",
    "start": "2182740",
    "end": "2189460"
  },
  {
    "text": "available today using the docker build X extensions",
    "start": "2189460",
    "end": "2194859"
  },
  {
    "text": "um nerd CTL adopts the exact same capability it's using",
    "start": "2194859",
    "end": "2201280"
  },
  {
    "text": "um build kit under the under the covers uh to handle building containers which",
    "start": "2201280",
    "end": "2207579"
  },
  {
    "text": "means it definitely supports uh Docker file directly",
    "start": "2207579",
    "end": "2213000"
  },
  {
    "text": "um so you said there towards the end no clear path for commonality at the runtime later it's kind of a CRI bottom",
    "start": "2213640",
    "end": "2219760"
  },
  {
    "text": "and bilda versus Docker container D um where do you see that going do you see that always being the case do you",
    "start": "2219760",
    "end": "2226660"
  },
  {
    "text": "think there's going to be unification yeah I mean",
    "start": "2226660",
    "end": "2233260"
  },
  {
    "text": "I think because of the um kind of an abstraction where a lot of",
    "start": "2233260",
    "end": "2240160"
  },
  {
    "text": "people aren't building around the runtime directly today you know if you adopt openshift you're going to use Creo",
    "start": "2240160",
    "end": "2247480"
  },
  {
    "text": "but do you you know was that a direct decision uh no it's probably because you",
    "start": "2247480",
    "end": "2253780"
  },
  {
    "text": "like openshift the platform and some of those platform capabilities um similarly you know container D is is",
    "start": "2253780",
    "end": "2262480"
  },
  {
    "text": "going to be used by a lot of managed services and the cloud already is",
    "start": "2262480",
    "end": "2267700"
  },
  {
    "text": "um so you know because of those layers of kind of platform abstraction",
    "start": "2267700",
    "end": "2274660"
  },
  {
    "text": "um you know again personal feeling is there's not a ton of focus on oh I have",
    "start": "2274900",
    "end": "2281320"
  },
  {
    "text": "to make a big choice between Creo or do I use podman for my development environment or or should I try out nerd",
    "start": "2281320",
    "end": "2289060"
  },
  {
    "text": "CTL you know definitely in the developer tooling space there's there's still",
    "start": "2289060",
    "end": "2294339"
  },
  {
    "text": "potentially some churn there and you can see uh it's kind of I try and stay out",
    "start": "2294339",
    "end": "2300040"
  },
  {
    "text": "of The Fray but you can watch on Twitter you know the there's the podman adherence promoting you know pod man's",
    "start": "2300040",
    "end": "2306339"
  },
  {
    "text": "new release on and Rel um but I feel like that's not it's it's not",
    "start": "2306339",
    "end": "2312820"
  },
  {
    "text": "necessarily the level of kind of Container Wars is when we saw Docker and Docker swarm and and kubernetes",
    "start": "2312820",
    "end": "2320980"
  },
  {
    "text": "um I think it's more in the sense of the same kinds of things we see in the um",
    "start": "2320980",
    "end": "2329260"
  },
  {
    "text": "tooling space where you know you're going to make some choices and the fact",
    "start": "2329260",
    "end": "2334839"
  },
  {
    "text": "that I think people can now depend on interoperability because of oci it's not",
    "start": "2334839",
    "end": "2340780"
  },
  {
    "text": "it's not there's no critical sense in which we need to have",
    "start": "2340780",
    "end": "2346070"
  },
  {
    "text": "[Music] um commonality here at that base layer because I build with Bill kit I run on",
    "start": "2346070",
    "end": "2354160"
  },
  {
    "text": "openshift and and it's fine you know the image works it's it didn't matter kind",
    "start": "2354160",
    "end": "2359859"
  },
  {
    "text": "of the choice of build tool I used or you know my GitHub action spits out a",
    "start": "2359859",
    "end": "2365859"
  },
  {
    "text": "an oci image and puts it in the the GitHub container registry I can use that",
    "start": "2365859",
    "end": "2372220"
  },
  {
    "text": "with Docker on Docker desktop so um I think the oci has sort of calmed",
    "start": "2372220",
    "end": "2378700"
  },
  {
    "text": "any nervousness about that being a problem that there's different tools and different kind of directions that that",
    "start": "2378700",
    "end": "2385960"
  },
  {
    "text": "the runtimes are going in yeah if you have any questions pop them",
    "start": "2385960",
    "end": "2391720"
  },
  {
    "text": "in here I'll bring them into the conversation uh one of the I I meant to",
    "start": "2391720",
    "end": "2398020"
  },
  {
    "text": "ask you when we talked before in qcon London about KO because I wasn't familiar with it I'm familiar with cloud",
    "start": "2398020",
    "end": "2404079"
  },
  {
    "text": "data buildbacks and kind of kind of the way that works is chaos similar just from a go perspective it just doesn't",
    "start": "2404079",
    "end": "2410859"
  },
  {
    "text": "require Docker file creates like the oci image from it what does that actually look like yeah the focus is really that",
    "start": "2410859",
    "end": "2417940"
  },
  {
    "text": "simplification is I'm in the go world I I don't really want to think about you",
    "start": "2417940",
    "end": "2423640"
  },
  {
    "text": "know base images and whether I'm choosing Alpine or Ubuntu or Debian um you know I'm building good binaries",
    "start": "2423640",
    "end": "2431560"
  },
  {
    "text": "that are fully kind of isolated from the they're going to be static they don't need to link to other libraries and so",
    "start": "2431560",
    "end": "2438520"
  },
  {
    "text": "it's a streamlined tool when you're in that World um and again like I said I think during",
    "start": "2438520",
    "end": "2445300"
  },
  {
    "text": "the talk they've they've made some nice kind of connection points where it's not just building but it's like oh I can",
    "start": "2445300",
    "end": "2451839"
  },
  {
    "text": "integrate this as a nice kind of one-line ko build and push to Docker Hub",
    "start": "2451839",
    "end": "2457480"
  },
  {
    "text": "and so you get this nice kind of clean very simple tool if you're again in that",
    "start": "2457480",
    "end": "2463780"
  },
  {
    "text": "go microservice world and it does again has has nice because it goes easy to",
    "start": "2463780",
    "end": "2470260"
  },
  {
    "text": "cross compile you can say hey by the way through an AMD 64 an arm and a power pc64",
    "start": "2470260",
    "end": "2479099"
  },
  {
    "text": "image all together in a multi-arc image named such and such so yeah it's really",
    "start": "2479099",
    "end": "2487540"
  },
  {
    "text": "focused on that go microservice world I think you've answered a question",
    "start": "2487540",
    "end": "2493660"
  },
  {
    "text": "similar to this in uh at qcon London that was Astron Crowley actually I think Daniel Mangum asked a question like it",
    "start": "2493660",
    "end": "2500680"
  },
  {
    "text": "but have you been surprised or do you have an opinion on like how people are are using",
    "start": "2500680",
    "end": "2507220"
  },
  {
    "text": "um some might say misusing but using oci images to do different things",
    "start": "2507220",
    "end": "2512619"
  },
  {
    "text": "um in the uh the ecosystem yeah um and that's a funny question coming",
    "start": "2512619",
    "end": "2519339"
  },
  {
    "text": "from Daniel because he gave he gave a hilarious talking I probably I probably miss",
    "start": "2519339",
    "end": "2525660"
  },
  {
    "text": "misrepresented so don't don't oh no no no no no no no it's actually a real",
    "start": "2525660",
    "end": "2530859"
  },
  {
    "text": "question it was just funny because of one of his kind of mantras that he's",
    "start": "2530859",
    "end": "2536200"
  },
  {
    "text": "known for is like taking well he and and a few um uh co-conspirators have done",
    "start": "2536200",
    "end": "2542740"
  },
  {
    "text": "hilarious things with oci images so it yeah kubecon la last fall they wrote a",
    "start": "2542740",
    "end": "2550599"
  },
  {
    "text": "chat application that was using layers of oci images to store the chat messages",
    "start": "2550599",
    "end": "2556680"
  },
  {
    "text": "so it was just showing you know in a by taking something to to the extreme",
    "start": "2556680",
    "end": "2562660"
  },
  {
    "text": "showing oh by the way an oci image is just a bundle of content and I could use",
    "start": "2562660",
    "end": "2568119"
  },
  {
    "text": "it for whatever I want um",
    "start": "2568119",
    "end": "2572220"
  },
  {
    "text": "Daniel will be speaking later uh I think I put the time before I don't want to",
    "start": "2573599",
    "end": "2578920"
  },
  {
    "text": "say a time because it'll be the wrong time so but there there's a there's a time two talks later he'll be speaking",
    "start": "2578920",
    "end": "2585700"
  },
  {
    "text": "so yeah yeah yeah and it's a great talk too so yeah but but to bring it from the",
    "start": "2585700",
    "end": "2592599"
  },
  {
    "text": "kind of hilarious extreme to to kind of the more um uh Topic at hand",
    "start": "2592599",
    "end": "2600400"
  },
  {
    "text": "you know I think the artifact work in the oci and if people haven't kind of",
    "start": "2600400",
    "end": "2605740"
  },
  {
    "text": "read about that there's search on artifact working group or oci artifacts",
    "start": "2605740",
    "end": "2611380"
  },
  {
    "text": "and and you'll find a bunch of references um the the fact is that like it makes",
    "start": "2611380",
    "end": "2617920"
  },
  {
    "text": "sense that there are a set of things that an image is related to kind of the if you think an object-oriented you know",
    "start": "2617920",
    "end": "2624700"
  },
  {
    "text": "what this object is related to that so a signature is a",
    "start": "2624700",
    "end": "2630060"
  },
  {
    "text": "component of an image or a s-bomb a software bill of materials is a",
    "start": "2630060",
    "end": "2635920"
  },
  {
    "text": "component of an image um and so it makes sense for us to start",
    "start": "2635920",
    "end": "2641500"
  },
  {
    "text": "to find ways to standardize this idea of what what refers to an image and so",
    "start": "2641500",
    "end": "2649359"
  },
  {
    "text": "there's a there's a new part of the distribution spec being called the work",
    "start": "2649359",
    "end": "2654700"
  },
  {
    "text": "done called the refers API and so you can actually ask a registry like hey I'm",
    "start": "2654700",
    "end": "2659800"
  },
  {
    "text": "pulling this image what things refer to it and the registry will hand back well here's a signature or here's an s-bomb",
    "start": "2659800",
    "end": "2666460"
  },
  {
    "text": "or here's how you can go find the source tarball for you know if it's open source software and it's under the GPL",
    "start": "2666460",
    "end": "2674680"
  },
  {
    "text": "um so um so yeah I I'm definitely on board",
    "start": "2674680",
    "end": "2679780"
  },
  {
    "text": "with uh expanding the oci uh in not the",
    "start": "2679780",
    "end": "2685780"
  },
  {
    "text": "image model but the artifact model that goes alongside images to say yeah the registry has the capability to store",
    "start": "2685780",
    "end": "2693040"
  },
  {
    "text": "other Blobs of information and they make sense because they are actually related",
    "start": "2693040",
    "end": "2698079"
  },
  {
    "text": "to the image itself and so um yeah there's there's good work going on there and and",
    "start": "2698079",
    "end": "2705060"
  },
  {
    "text": "folks that worked with Daniel on that talk at kubecon are very involved in",
    "start": "2705060",
    "end": "2710319"
  },
  {
    "text": "that work um and I think they're giving a follow-on talk in Valencia next week so",
    "start": "2710319",
    "end": "2716800"
  },
  {
    "text": "if you're at kubecon EU next week I'm sure it'll be fun and",
    "start": "2716800",
    "end": "2721900"
  },
  {
    "text": "interesting and they'll they'll uh try and break the oci registry model in some new interesting ways",
    "start": "2721900",
    "end": "2729000"
  },
  {
    "text": "challenging right to grow into that um so what what's next for the oci so",
    "start": "2729000",
    "end": "2734200"
  },
  {
    "text": "you you mentioned like innovating up the stack um I'm curious like what's what's the",
    "start": "2734200",
    "end": "2739720"
  },
  {
    "text": "threads look like what's the conversation look like what what are you thinking about the oci yeah so um I think a major uh piece of",
    "start": "2739720",
    "end": "2749020"
  },
  {
    "text": "that is the work I was just talking about um the uh the artifact and refers API",
    "start": "2749020",
    "end": "2756460"
  },
  {
    "text": "are are kind of the next piece that we're trying to standardize um the container run times back",
    "start": "2756460",
    "end": "2765040"
  },
  {
    "text": "um the image spec as you expect like these are things that people have built sort of whole systems on and they're not",
    "start": "2765040",
    "end": "2772180"
  },
  {
    "text": "they're no longer fast moving pieces so you can think of like you know small tweaks like making sure we we have in",
    "start": "2772180",
    "end": "2780220"
  },
  {
    "text": "the standards all the right media types that reference um you know new work like encrypted",
    "start": "2780220",
    "end": "2786700"
  },
  {
    "text": "layers or new compression formats so these are things that are not like oh",
    "start": "2786700",
    "end": "2791980"
  },
  {
    "text": "wow that's the most exciting thing ever but they're little kind of incremental steps to make sure the specs stay up",
    "start": "2791980",
    "end": "2798339"
  },
  {
    "text": "with where the industry is so yeah I'd say the artifacts and refers",
    "start": "2798339",
    "end": "2803740"
  },
  {
    "text": "API are kind of the big exciting things because they relate to Hot Topics like secure supply chain and image signing I",
    "start": "2803740",
    "end": "2811960"
  },
  {
    "text": "was about to ask yeah specifically around secure supply chain what were some of the talks but I I guess so",
    "start": "2811960",
    "end": "2819280"
  },
  {
    "text": "yeah so so some of the artifact work is like how as people are going to build tools so",
    "start": "2819280",
    "end": "2825819"
  },
  {
    "text": "you know they're already um that's already happening you have security vendors building tools you have",
    "start": "2825819",
    "end": "2832000"
  },
  {
    "text": "Docker uh release their new beta of like their s-bomb generator tool",
    "start": "2832000",
    "end": "2838000"
  },
  {
    "text": "the oci's part piece of that will be okay here's the standard way that you're going to put an s-bomb in a registry",
    "start": "2838000",
    "end": "2845020"
  },
  {
    "text": "and here's how Registries will hand that back to you when you ask for an image's s-bomb so the ocis piece will again be",
    "start": "2845020",
    "end": "2853180"
  },
  {
    "text": "standardizing and making sure that whether you use tools from uh well I",
    "start": "2853180",
    "end": "2858579"
  },
  {
    "text": "would name vendors but you know the handful of security vendors and tools out there that they'll hopefully all use",
    "start": "2858579",
    "end": "2865720"
  },
  {
    "text": "a standard way to associate that with an image",
    "start": "2865720",
    "end": "2870760"
  },
  {
    "text": "so uh coming up we're about one minute for the end um what uh what are you looking forward",
    "start": "2870760",
    "end": "2875920"
  },
  {
    "text": "to next week in Valencia anything that you want to shout out or that people should take a look at",
    "start": "2875920",
    "end": "2881079"
  },
  {
    "text": "yeah um well you know my my focus stays pretty close to container to use a",
    "start": "2881079",
    "end": "2887079"
  },
  {
    "text": "project and this is the first kubecon since the deprecation of Docker schum and so I think",
    "start": "2887079",
    "end": "2894160"
  },
  {
    "text": "um excited to hopefully meet with people who are like trying to figure out what it means to move to container D",
    "start": "2894160",
    "end": "2899859"
  },
  {
    "text": "underneath kubernetes uh any issues they're they're hitting uh we're gonna",
    "start": "2899859",
    "end": "2905079"
  },
  {
    "text": "have like an office hours one day just for container d um so hopefully meet some users and and",
    "start": "2905079",
    "end": "2912160"
  },
  {
    "text": "understand what they're bumping into and into it has given a cool talk about their move to container D so I'm excited",
    "start": "2912160",
    "end": "2919359"
  },
  {
    "text": "about that um so yeah awesome well if you head back to the schedule right after this you'll",
    "start": "2919359",
    "end": "2925660"
  },
  {
    "text": "see a zoom link to join uh Phil to be able to ask him your questions directly",
    "start": "2925660",
    "end": "2931180"
  },
  {
    "text": "uh after that at um in about 20 minutes we'll have Matt Turner talking about",
    "start": "2931180",
    "end": "2936640"
  },
  {
    "text": "modern API development so basically talking about API gateways to sidecars I'm kind of that Journey that path and",
    "start": "2936640",
    "end": "2943900"
  },
  {
    "text": "some of the pros and cons and then after that as we mentioned Daniel mannequin will be talking about using kubernetes",
    "start": "2943900",
    "end": "2950380"
  },
  {
    "text": "for on cluster off cluster control plane for applications Phil as always thank you for uh doing yet another awesome",
    "start": "2950380",
    "end": "2957579"
  },
  {
    "text": "song appreciate it sir all right thanks boss",
    "start": "2957579",
    "end": "2962579"
  },
  {
    "text": "[Music]",
    "start": "2964710",
    "end": "2971010"
  }
]