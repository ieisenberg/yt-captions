[
  {
    "text": "thanks for having me my name is Eric Bren um uh I'm on the emberjs core team but I'm not here today to promote Ember",
    "start": "8639",
    "end": "15519"
  },
  {
    "text": "I'm here to just talk generally about web components and uh share some of my findings and uh out of curiosity how",
    "start": "15519",
    "end": "23080"
  },
  {
    "text": "many of you have played around with web components already all right so like definitely",
    "start": "23080",
    "end": "29160"
  },
  {
    "text": "less than half all right cool so hopefully this won't be too basic you guys will come out learning some of the",
    "start": "29160",
    "end": "34559"
  },
  {
    "text": "basic uh web compon proposed web component apis and everything so cool so again yes I'm Eric I had a",
    "start": "34559",
    "end": "41640"
  },
  {
    "text": "bigger beard in that photo um so what are web components um web components are",
    "start": "41640",
    "end": "48000"
  },
  {
    "text": "basically a group of Standards um that we'll uh we'll mention in a second and I",
    "start": "48000",
    "end": "53960"
  },
  {
    "text": "believe and I think the the web components uh spec authors would also agree that basically their point is to",
    "start": "53960",
    "end": "60399"
  },
  {
    "text": "make building um Reus make building web UI sharing web UI components and reusing",
    "start": "60399",
    "end": "69439"
  },
  {
    "text": "th that code on the web much easier than it is today and so uh the primary",
    "start": "69439",
    "end": "75080"
  },
  {
    "text": "driving force um behind web components right now uh has been the Google Chrome",
    "start": "75080",
    "end": "80880"
  },
  {
    "text": "team and so the Google Chrome team has been working on web components uh",
    "start": "80880",
    "end": "86520"
  },
  {
    "text": "actively for the last two to 3 years I believe um so this is a what I'm going to be",
    "start": "86520",
    "end": "92600"
  },
  {
    "text": "showing you is a culmination of their efforts over quite a long time and some of these Concepts have been actually in",
    "start": "92600",
    "end": "99079"
  },
  {
    "text": "development and been worked on for even longer than that and so um I've been lucky I've been able to go down to uh",
    "start": "99079",
    "end": "105719"
  },
  {
    "text": "Mountain View and hang out with the uh Godfather of web components uh Dimitri",
    "start": "105719",
    "end": "111200"
  },
  {
    "text": "glov so here's our our nice selfie as you can see the Beard's looking a little little Fuller than it is today um and so",
    "start": "111200",
    "end": "119360"
  },
  {
    "text": "uh the web component specs uh we're going to talk about there's basically four of them um and uh those are custom",
    "start": "119360",
    "end": "126840"
  },
  {
    "text": "elements templates HTML Imports and Shadow down and so let's get started by talking about custom",
    "start": "126840",
    "end": "134640"
  },
  {
    "text": "elements uh so custom elements are probably the easiest and uh uh the",
    "start": "134640",
    "end": "140319"
  },
  {
    "text": "easiest part the easiest spec to understand and it's also I think what most people when we're talking about web",
    "start": "140319",
    "end": "146400"
  },
  {
    "text": "components they are thinking of custom elements um so you know you're probably",
    "start": "146400",
    "end": "151800"
  },
  {
    "text": "used to today doing something like this where you know you're setting up some markup structure in your document in",
    "start": "151800",
    "end": "158760"
  },
  {
    "text": "your application setting some kind of ID or unique class name on it and then in",
    "start": "158760",
    "end": "164599"
  },
  {
    "text": "your JavaScript code you're pulling uh you're executing some JavaScript going into the Dom trying to find those",
    "start": "164599",
    "end": "171080"
  },
  {
    "text": "elements that uh you know are related to the component that you're trying to instantiate and and then you use",
    "start": "171080",
    "end": "177120"
  },
  {
    "text": "something like a jree plug-in to you know uh kick that off and you know basically today jcy plugins are kind of",
    "start": "177120",
    "end": "183920"
  },
  {
    "text": "like the lowest common denominator way of sharing uh UI code across different",
    "start": "183920",
    "end": "189720"
  },
  {
    "text": "applications uh and across Frameworks as well so you know basically the the idea",
    "start": "189720",
    "end": "195440"
  },
  {
    "text": "behind custom elements is what if we just simplified this to a custom tag and",
    "start": "195440",
    "end": "201720"
  },
  {
    "text": "this custom tag can have its own uh you know class that defines all of the life",
    "start": "201720",
    "end": "209040"
  },
  {
    "text": "that has life cyle Hooks and can define basically and uh instantiate all the JavaScript related behavior for this for",
    "start": "209040",
    "end": "216239"
  },
  {
    "text": "this piece of UI so so how do we create this uh custom element well today's",
    "start": "216239",
    "end": "222400"
  },
  {
    "text": "custom element API looks something like this um hopefully this is big enough for everyone let me see see if I can boost",
    "start": "222400",
    "end": "228640"
  },
  {
    "text": "it yes I also needed that um so um basically today uh we don't really have",
    "start": "228640",
    "end": "235280"
  },
  {
    "text": "a class system in JavaScript right now uh we've got one coming up um but today basically you end up writing this uh",
    "start": "235280",
    "end": "243720"
  },
  {
    "text": "this lovely uh set of code um and so just to real quickly talk about each one",
    "start": "243720",
    "end": "248959"
  },
  {
    "text": "of these callbacks here or or to walk through the code what we're doing here is creating a uh a prototype object for",
    "start": "248959",
    "end": "255239"
  },
  {
    "text": "our uh the component we're building and then we're setting a bunch of callback um functions on that object and uh these",
    "start": "255239",
    "end": "261959"
  },
  {
    "text": "are standard hooks defined by the custom element API API and um so created",
    "start": "261959",
    "end": "267199"
  },
  {
    "text": "callback you can kind of you can think of as the instant iation hook this is kind of like your Constructor uh",
    "start": "267199",
    "end": "272960"
  },
  {
    "text": "function and the attached call back it means the Dom node has been already",
    "start": "272960",
    "end": "278080"
  },
  {
    "text": "instantiated and now has been put inside of the document itself detached is the opposite it's been pulled out of the",
    "start": "278080",
    "end": "283960"
  },
  {
    "text": "document and then attribute changed um is a uh callback that will get fired",
    "start": "283960",
    "end": "289840"
  },
  {
    "text": "when any of the attributes of the element change uh and we'll see an example of this we're going to do some",
    "start": "289840",
    "end": "295080"
  },
  {
    "text": "live coding um and build a build a little simple component in a minute",
    "start": "295080",
    "end": "300600"
  },
  {
    "text": "so then we call the document.register element here which does the work of",
    "start": "300600",
    "end": "306080"
  },
  {
    "text": "actually assigning the tag name here which is the first argument to the uh",
    "start": "306080",
    "end": "311600"
  },
  {
    "text": "prototype object uh for our custom component and so it's possible for you to also add any other arbitrary",
    "start": "311600",
    "end": "318840"
  },
  {
    "text": "Properties or methods onto this prototype object to define the API of your component but this API is a bit face",
    "start": "318840",
    "end": "325840"
  },
  {
    "text": "paly um but thankfully we have yes6 classes coming",
    "start": "325840",
    "end": "331120"
  },
  {
    "text": "and so now there's that there's going to be a nice clean way of defining uh your custom element classes you'll actually",
    "start": "331120",
    "end": "336600"
  },
  {
    "text": "be able to extend um the built-in HTML element class or any of the other uh sub",
    "start": "336600",
    "end": "342560"
  },
  {
    "text": "classes of it um and you'll get a nice much simpler Syntax for defining all",
    "start": "342560",
    "end": "347800"
  },
  {
    "text": "these callbacks as well so this will be great uh so without further Ado let's",
    "start": "347800",
    "end": "353639"
  },
  {
    "text": "Dive Right In I'm being ballsy and uh trying to do some live coding here so let's see",
    "start": "353639",
    "end": "361479"
  },
  {
    "text": "hopefully the resolution will not be God awful all right how's the okay the left",
    "start": "361960",
    "end": "367520"
  },
  {
    "text": "slid right cool all right so let's go ahead I will bump the font size for",
    "start": "367520",
    "end": "374080"
  },
  {
    "text": "y'all so we're going to define a file called custom element. HTML and so um this will be just a",
    "start": "374080",
    "end": "382520"
  },
  {
    "text": "standard boilerplate HTML document um and what we're going to do here is just",
    "start": "382520",
    "end": "387720"
  },
  {
    "text": "throw in a script tag and we're just going to create a component called my component so we'll do my component",
    "start": "387720",
    "end": "396120"
  },
  {
    "text": "prototype equals object.create HTML element such boiler",
    "start": "396120",
    "end": "404319"
  },
  {
    "text": "plate and um then what we're going to do with that is get our actual Constructor",
    "start": "404319",
    "end": "411360"
  },
  {
    "text": "function out of document.register",
    "start": "411360",
    "end": "415960"
  },
  {
    "text": "we're going to call this my Dash component and we get to pass a lovely",
    "start": "417759",
    "end": "424400"
  },
  {
    "text": "Looking hash with",
    "start": "424400",
    "end": "430919"
  },
  {
    "text": "Prototype all right so that gets our element registered let's go ahead and",
    "start": "434360",
    "end": "440879"
  },
  {
    "text": "bring this up in our uh oh boy gu we'll do",
    "start": "440879",
    "end": "447840"
  },
  {
    "text": "this all right so hopefully we're all good no",
    "start": "448319",
    "end": "456039"
  },
  {
    "text": "errors um so let's we let's try actually use well let's actually Implement some",
    "start": "456039",
    "end": "461919"
  },
  {
    "text": "callbacks first so we can go ahead add the uh created",
    "start": "461919",
    "end": "469599"
  },
  {
    "text": "callback and so again this is the Callback that's going to get uh fired",
    "start": "469919",
    "end": "475039"
  },
  {
    "text": "when our component our custom element gets instantiated right and so the simplest way to instantiate our element",
    "start": "475039",
    "end": "481879"
  },
  {
    "text": "is to obviously just drop it into the uh the body",
    "start": "481879",
    "end": "487080"
  },
  {
    "text": "here and so let's let's see how this works all right that's good we hit our",
    "start": "487120",
    "end": "492680"
  },
  {
    "text": "break point um and so if we look at this here we're",
    "start": "492680",
    "end": "498639"
  },
  {
    "text": "going to see that it's a instance of my component and it two strings to HTML",
    "start": "498639",
    "end": "504599"
  },
  {
    "text": "element so that seems good um and so created callback is the created callback",
    "start": "504599",
    "end": "510319"
  },
  {
    "text": "is where you're going to do uh the kind of work that related to uh any kind of",
    "start": "510319",
    "end": "515360"
  },
  {
    "text": "instantiation or setup of properties or attributes uh related to your element um",
    "start": "515360",
    "end": "520680"
  },
  {
    "text": "you might actually create the any subd that you might have any uh you would do",
    "start": "520680",
    "end": "525920"
  },
  {
    "text": "an created callback the uh attached callback is where you're going to actually do things like setting up your",
    "start": "525920",
    "end": "533000"
  },
  {
    "text": "event handling and so um things like uh you know event handling maybe calling",
    "start": "533000",
    "end": "541320"
  },
  {
    "text": "off to jQuery if you wanted to do some wrapping of jQuery plugins inside of web",
    "start": "541320",
    "end": "546760"
  },
  {
    "text": "components the the attached callback is the place to go and uh the detached callback of course is going to be the",
    "start": "546760",
    "end": "553600"
  },
  {
    "text": "place where you're going to want to tear down any of that stuff you did in the attached callback and um let's also real",
    "start": "553600",
    "end": "561079"
  },
  {
    "text": "quickly look at the uh attribute changed call back so this one",
    "start": "561079",
    "end": "567399"
  },
  {
    "text": "actually gets some arguments all right and so just for the sake of",
    "start": "567399",
    "end": "575200"
  },
  {
    "text": "understanding the life cycle of these callbacks let's actually manually append the my component uh our component to the",
    "start": "575200",
    "end": "581680"
  },
  {
    "text": "Dom so that we can watch uh all these callbacks get called in order so first things first we'll go ahead and create a",
    "start": "581680",
    "end": "588839"
  },
  {
    "text": "new instance this is just going to use create element so we can call document.",
    "start": "588839",
    "end": "594880"
  },
  {
    "text": "create element just like any other element pass in my component",
    "start": "594880",
    "end": "600560"
  },
  {
    "text": "and uh I'm just going to throw debuggers in between each step here then we're",
    "start": "600560",
    "end": "606160"
  },
  {
    "text": "going to call document. body. aen child to bring it into the",
    "start": "606160",
    "end": "611880"
  },
  {
    "text": "Dom and then we're going to do a set attribute",
    "start": "613000",
    "end": "619360"
  },
  {
    "text": "here and then we'll go ahead and remove it from the Dom as well",
    "start": "622959",
    "end": "631040"
  },
  {
    "text": "all right so let's see how this this lovely set of debuggers fire so we can",
    "start": "631480",
    "end": "637880"
  },
  {
    "text": "go ahead and create our element and as we would expect the created call back to get called and so there it",
    "start": "637880",
    "end": "644200"
  },
  {
    "text": "goes we append the child we're going to see the attached call back get called",
    "start": "644200",
    "end": "649880"
  },
  {
    "text": "now here's the here's one of the more interesting callbacks set attribute is going to trigger an attribute changed",
    "start": "649880",
    "end": "655480"
  },
  {
    "text": "call back and inside here we'll get the name of the attribute the existing or old value of it and the",
    "start": "655480",
    "end": "662399"
  },
  {
    "text": "new value of it as well and then of course removed child is",
    "start": "662399",
    "end": "668360"
  },
  {
    "text": "going to trigger the detached call back so pretty simple stuff and you know hopefully you can see the usefulness in",
    "start": "668360",
    "end": "674839"
  },
  {
    "text": "this I mean basically the the real the real value here is standardizing around these callbacks and having a you know",
    "start": "674839",
    "end": "682240"
  },
  {
    "text": "everybody no matter what framework you use uh use elements HTML elements at the",
    "start": "682240",
    "end": "688320"
  },
  {
    "text": "core right and so when you're talking about Distributing UI components um it's",
    "start": "688320",
    "end": "693440"
  },
  {
    "text": "very attractive to build at a level that every framework can understand and that's obviously the uh the Dom element",
    "start": "693440",
    "end": "700839"
  },
  {
    "text": "level so um from here let's jump forward hopefully I",
    "start": "700839",
    "end": "707000"
  },
  {
    "text": "can oh come on of course it doesn't just",
    "start": "707000",
    "end": "712200"
  },
  {
    "text": "work boom great all right so so let's just just quickly recap how how are we",
    "start": "714079",
    "end": "722200"
  },
  {
    "text": "kind of doing this stuff today again like I mentioned uh at the at the beginning where if you're using",
    "start": "722200",
    "end": "727920"
  },
  {
    "text": "something like a jcy plugin you're you tend to do something like this and you know configuration's going to get passed",
    "start": "727920",
    "end": "732959"
  },
  {
    "text": "in to that jcy plugin call um if you're using something like Ember uh then Ember",
    "start": "732959",
    "end": "739880"
  },
  {
    "text": "provides a uh something similar to custom elements today which is basically we uh create you handlebars helpers",
    "start": "739880",
    "end": "747680"
  },
  {
    "text": "automatically when you register a component class in your Amber application and so inside of your markup",
    "start": "747680",
    "end": "753399"
  },
  {
    "text": "you can just drop in uh Curly's my component and then you can pass in key value pairs um and those can be uh",
    "start": "753399",
    "end": "761399"
  },
  {
    "text": "primitive values or they could actually be data bound as well and so um in an upcoming version November we're going to",
    "start": "761399",
    "end": "767760"
  },
  {
    "text": "actually enable you to just write this custom element syntax and that will actually delegate over to the the",
    "start": "767760",
    "end": "773279"
  },
  {
    "text": "handlebars helpers uh that live underneath that actually do the work um and so this enables us to have something",
    "start": "773279",
    "end": "779199"
  },
  {
    "text": "like custom elements in browsers that aren't going in older browsers uh that aren't going to support you know the",
    "start": "779199",
    "end": "785839"
  },
  {
    "text": "custom elements API are aren't poly fillable as well so that's kind of cool um in angular today we uh you've got",
    "start": "785839",
    "end": "794360"
  },
  {
    "text": "several different ways of kind of doing something similar to custom elements um they're uh they're called directives and",
    "start": "794360",
    "end": "800920"
  },
  {
    "text": "you can definitely do the the straightup custom element approach which is just to uh which is called an element restricted",
    "start": "800920",
    "end": "806720"
  },
  {
    "text": "directive and so this first example here shows did it lose its Zoom no um this",
    "start": "806720",
    "end": "812839"
  },
  {
    "text": "first approach shows you can just you know use it like we would expect um but they also have an they also they have",
    "start": "812839",
    "end": "818600"
  },
  {
    "text": "several different forms but I think the most popular ones are the element and attribute uh restricted so here you can",
    "start": "818600",
    "end": "823880"
  },
  {
    "text": "actually just drop in an attributes saying my component and that'll automatically trigger angular upgrading",
    "start": "823880",
    "end": "829040"
  },
  {
    "text": "that element um to something web comp Uh custom elementes and so the cool and exciting",
    "start": "829040",
    "end": "836079"
  },
  {
    "text": "thing is that uh angular 2.0 has actually said said that they're going to be adding web component support as a",
    "start": "836079",
    "end": "842360"
  },
  {
    "text": "first class citizen um so um that's that's nice because that means",
    "start": "842360",
    "end": "848000"
  },
  {
    "text": "potentially uh these things can be used across uh Ember and angular applications",
    "start": "848000",
    "end": "854079"
  },
  {
    "text": "and uh again and also polymer which is a cool Library that's basically built on",
    "start": "854079",
    "end": "859320"
  },
  {
    "text": "top of all of these new web component um Primitives it has a uh you can use",
    "start": "859320",
    "end": "866040"
  },
  {
    "text": "obviously web the component in this a similar exact a similar way as you would expect but they have a really neat",
    "start": "866040",
    "end": "872240"
  },
  {
    "text": "little declarative form which is actually a custom element itself so if you use polymer element and pass a name",
    "start": "872240",
    "end": "878360"
  },
  {
    "text": "that'll actually do the work of setting you up a custom element uh named my component you can put some markup in",
    "start": "878360",
    "end": "885199"
  },
  {
    "text": "there and uh you can immediately start using that and if you need to you know that's that's mostly for simple simple",
    "start": "885199",
    "end": "891959"
  },
  {
    "text": "use cases but uh you can do that and also then go into the JavaScript side",
    "start": "891959",
    "end": "897519"
  },
  {
    "text": "and actually Define uh your custom element using their sugary apis for doing",
    "start": "897519",
    "end": "905759"
  },
  {
    "text": "so so I think personally as a framework uh author and uh an Enthusiast for web",
    "start": "908279",
    "end": "917680"
  },
  {
    "text": "technology I think the really exciting thing about custom elements and um web components in general is the potential",
    "start": "917680",
    "end": "923600"
  },
  {
    "text": "interop story that can be uh Unleashed um and so this is still an un uh this is",
    "start": "923600",
    "end": "930040"
  },
  {
    "text": "still somewhat unchartered territory um but we're working together uh both from",
    "start": "930040",
    "end": "936000"
  },
  {
    "text": "the standard side and in the on the framework side to try to find a way that ember angular polymer you know um Etc",
    "start": "936000",
    "end": "944399"
  },
  {
    "text": "can all build you'll be able to use these components in any framework",
    "start": "944399",
    "end": "949880"
  },
  {
    "text": "potentially build them uh inside of your application extract them use them in another app um and you know that's to me",
    "start": "949880",
    "end": "957720"
  },
  {
    "text": "one of the big promises of custom elements is since it is kind of this lowest common denominator uh mechanism",
    "start": "957720",
    "end": "963959"
  },
  {
    "text": "for uh defining and uh sharing this these elements you can actually uh",
    "start": "963959",
    "end": "970199"
  },
  {
    "text": "Envision an interop story being possible and so the uh the current proposal if you're look if you're interested in",
    "start": "970199",
    "end": "976319"
  },
  {
    "text": "looking into it is called No dot bind and so um this is basically a mechanism for how really the the unsolved problem",
    "start": "976319",
    "end": "983600"
  },
  {
    "text": "here is how do different Frameworks data binding Solutions uh work uh across uh",
    "start": "983600",
    "end": "990680"
  },
  {
    "text": "these elements that can be shared and so um that's what node. Bine is is trying to",
    "start": "990680",
    "end": "997240"
  },
  {
    "text": "address so um this is cool obviously we're I'm using um developing Chrome and",
    "start": "997240",
    "end": "1003959"
  },
  {
    "text": "custom elements have shipped in Chrome so you're able to use them without a flag today uh the Firefox team has begun",
    "start": "1003959",
    "end": "1010040"
  },
  {
    "text": "implementation I've heard that they have it implemented and it's working I was unable to find any documentation about",
    "start": "1010040",
    "end": "1016839"
  },
  {
    "text": "where it was flagged or what the vendor prefixes were or anything so um otherwise I would have showed you uh it",
    "start": "1016839",
    "end": "1023360"
  },
  {
    "text": "working in Firefox um but this stuff is actually usable in browsers without uh",
    "start": "1023360",
    "end": "1030199"
  },
  {
    "text": "Native support um Google the the Google polymer team actually as part of the",
    "start": "1030199",
    "end": "1035438"
  },
  {
    "text": "work of building polymer and uh created a polyu library called platform JS and",
    "start": "1035439",
    "end": "1041839"
  },
  {
    "text": "so platform JS uh is usable they're they say they target all modern Evergreen",
    "start": "1041839",
    "end": "1047160"
  },
  {
    "text": "browsers and um so the idea is you can drop in this JavaScript dependency and",
    "start": "1047160",
    "end": "1053679"
  },
  {
    "text": "uh get support on browsers like Safari and ie um Opera uh so Opera is uh based",
    "start": "1053679",
    "end": "1062160"
  },
  {
    "text": "on the blink engine now so Chrome typically has a feature Opera has one too so um so yeah it's pretty exciting",
    "start": "1062160",
    "end": "1070160"
  },
  {
    "text": "um so the next topic the next spec that I want to talk about are templates and",
    "start": "1070160",
    "end": "1076320"
  },
  {
    "text": "um templates are actually probably a lot the template spec is actually a lot simpler than probably you uh think of",
    "start": "1076320",
    "end": "1083880"
  },
  {
    "text": "when you think of the the idea of a template um in in JavaScript so",
    "start": "1083880",
    "end": "1089280"
  },
  {
    "text": "templates are actually just a mechanism for declaring fragments of markup and enables us to easily clone and insert",
    "start": "1089280",
    "end": "1096200"
  },
  {
    "text": "them around so um here's a simple example basically",
    "start": "1096200",
    "end": "1101880"
  },
  {
    "text": "uh there's now a template tag and this is a round in Chrome we'll see in just a",
    "start": "1101880",
    "end": "1107559"
  },
  {
    "text": "second we can use this today and so the idea is you can Define one of these template tags you can put any arbitrary",
    "start": "1107559",
    "end": "1113480"
  },
  {
    "text": "markup inside of it and then you can very easily fetch it out of the Dom call",
    "start": "1113480",
    "end": "1118799"
  },
  {
    "text": "template. content. clone node uh and this will actually create a clone of all the content inside of that template tag",
    "start": "1118799",
    "end": "1125640"
  },
  {
    "text": "and then you can appendant somewhere and so um you know today if you want to do",
    "start": "1125640",
    "end": "1131240"
  },
  {
    "text": "something like this you're probably thinking well wait hey this isn't what's so fancy about this this isn't that big of a deal um so today if you're doing",
    "start": "1131240",
    "end": "1137520"
  },
  {
    "text": "this kind of thing you're probably using something like a div and you're display you're doing display none and so uh",
    "start": "1137520",
    "end": "1144360"
  },
  {
    "text": "template Tags by default do not have any rendered uh output so this is just kind of you can kind of think of it as a",
    "start": "1144360",
    "end": "1150640"
  },
  {
    "text": "declarative way of doing a document fragment right you can just put a do you can basically create a document fragment",
    "start": "1150640",
    "end": "1156960"
  },
  {
    "text": "inside of the Dom and so you know if your if this markup is getting generated by your server you're able to actually",
    "start": "1156960",
    "end": "1163440"
  },
  {
    "text": "have your server AIT markup that isn't going to have any rendered effect on on the clients machine um and so again uh",
    "start": "1163440",
    "end": "1171600"
  },
  {
    "text": "you know another strategy and this is a strategy we we utilize uh in emberland",
    "start": "1171600",
    "end": "1178039"
  },
  {
    "text": "when we're trying to in our starter kit in nonb build tools um style uh",
    "start": "1178039",
    "end": "1184320"
  },
  {
    "text": "environments is we uh you use a script tag with a custom type and so basically",
    "start": "1184320",
    "end": "1190080"
  },
  {
    "text": "anything in inside of that script tag just becomes text and then you can suck the text out of that element uh with",
    "start": "1190080",
    "end": "1196799"
  },
  {
    "text": "inner text and then you can go and inject that into the Dom um you know uh",
    "start": "1196799",
    "end": "1202400"
  },
  {
    "text": "and then clone it from there if you need to so the the big important and uh the",
    "start": "1202400",
    "end": "1209440"
  },
  {
    "text": "big important feature about templates are that they are inert and so what this",
    "start": "1209440",
    "end": "1215480"
  },
  {
    "text": "means is that uh you know I'm sure if you've tried any of these other approaches one of the big even though",
    "start": "1215480",
    "end": "1220840"
  },
  {
    "text": "something's displaying none doesn't mean that that interpretation and rendering of something that isn't visible doesn't",
    "start": "1220840",
    "end": "1227320"
  },
  {
    "text": "still have an effect on uh the user's environment and so a a common example of",
    "start": "1227320",
    "end": "1233240"
  },
  {
    "text": "this are image tags so if you wanted to have a piece of uh you know template code on your machine on on the your",
    "start": "1233240",
    "end": "1240000"
  },
  {
    "text": "client's machine and that hasn't been displayed yet and you put an image tag in it uh it's going to download that image immediately and so you're",
    "start": "1240000",
    "end": "1247240"
  },
  {
    "text": "potentially bottlenecking your application's boot Time by loading a bunch of unnecessary assets that you",
    "start": "1247240",
    "end": "1253360"
  },
  {
    "text": "know aren't going to be displayed right away um the other big one is script tab tags so if you have a script tag inside",
    "start": "1253360",
    "end": "1260400"
  },
  {
    "text": "of that template that script tag will not actually execute uh until it is in",
    "start": "1260400",
    "end": "1266280"
  },
  {
    "text": "appended to the Dom so let's take a quick look at",
    "start": "1266280",
    "end": "1271880"
  },
  {
    "text": "templates so we'll drop in a template tag with an",
    "start": "1281279",
    "end": "1286399"
  },
  {
    "text": "ID oh thank you thank",
    "start": "1287039",
    "end": "1291759"
  },
  {
    "text": "you all right there we go we'll drop in a template tag uh with an ID call it my",
    "start": "1292320",
    "end": "1300480"
  },
  {
    "text": "template and so let's just start off with a super simple example we'll do the good old hello",
    "start": "1302279",
    "end": "1307960"
  },
  {
    "text": "world and so we'll write some code to grab this template out of the",
    "start": "1307960",
    "end": "1315440"
  },
  {
    "text": "Dom and so if we look at uh template content",
    "start": "1317039",
    "end": "1325279"
  },
  {
    "text": "here this is going to be a um the nice thing again about templates are this Dom",
    "start": "1325279",
    "end": "1330320"
  },
  {
    "text": "is actually parsed as well uh so you get through the parsing phase uh and this",
    "start": "1330320",
    "end": "1336320"
  },
  {
    "text": "these this Dom is extremely quick to then clone and append versus uh an",
    "start": "1336320",
    "end": "1342279"
  },
  {
    "text": "approach like the script tag approach you offload the parsing until you",
    "start": "1342279",
    "end": "1348159"
  },
  {
    "text": "actually suck the text out and jam it into the Dom um and so you end up paying a little bit of a performance cost",
    "start": "1348159",
    "end": "1356640"
  },
  {
    "text": "there so we can go clone the content",
    "start": "1356679",
    "end": "1361799"
  },
  {
    "text": "we'll get a a clone and then we can just drop that into the",
    "start": "1361799",
    "end": "1369320"
  },
  {
    "text": "body all right so um easy right not so bad um",
    "start": "1376960",
    "end": "1386840"
  },
  {
    "text": "so let's actually prove that uh these templates are",
    "start": "1386840",
    "end": "1392240"
  },
  {
    "text": "inert so if we go ahead and drop in an image tag",
    "start": "1392240",
    "end": "1398640"
  },
  {
    "text": "here I'm not appending it and if we go to the network tab we are not seeing that image appended right whereas if we",
    "start": "1400279",
    "end": "1407279"
  },
  {
    "text": "were to do some some existing solution right if this was just some div",
    "start": "1407279",
    "end": "1415600"
  },
  {
    "text": "here hopefully this is obvious but I'm just proving it to you that it's true hopefully I'm not wrong that would be",
    "start": "1415600",
    "end": "1421440"
  },
  {
    "text": "embarrassing as hell Chrome has some new optimization where they don't load images all a",
    "start": "1421440",
    "end": "1427320"
  },
  {
    "text": "sudden um oh I have double the ID",
    "start": "1427320",
    "end": "1433360"
  },
  {
    "text": "whatever um so so yeah as you can see even though it's hidden right that image",
    "start": "1434400",
    "end": "1440080"
  },
  {
    "text": "got loaded and then of course hopefully if that's true as well it's obvious that putting a script tag in here uh is also",
    "start": "1440080",
    "end": "1447919"
  },
  {
    "text": "going to get executed",
    "start": "1447919",
    "end": "1451399"
  },
  {
    "text": "right even though it's off screen right so this inert this inert property of",
    "start": "1453200",
    "end": "1458440"
  },
  {
    "text": "theuh template tag is quite handy y what's the difference between the",
    "start": "1458440",
    "end": "1465240"
  },
  {
    "text": "template and just regular tag so as I mentioned uh briefly the idea is that",
    "start": "1465240",
    "end": "1472120"
  },
  {
    "text": "the temp the contents of the template tag actually get parsed by the browser and the Dom nodes uh you know the",
    "start": "1472120",
    "end": "1479240"
  },
  {
    "text": "initial Dom nodes get created and you know they those nodes have some special",
    "start": "1479240",
    "end": "1484440"
  },
  {
    "text": "properties like this inertness in the cases of image images and scripts um and the advantage here is that it's actually",
    "start": "1484440",
    "end": "1491279"
  },
  {
    "text": "clone node is the fastest way to generate Dom in the browser and so it's actually extremely fast to take that",
    "start": "1491279",
    "end": "1497880"
  },
  {
    "text": "already parsed and you know generated template Dom clone it and then jam it in",
    "start": "1497880",
    "end": "1503600"
  },
  {
    "text": "uh somewhere in the application whereas if you're doing the script tag approach you're going to be paying that like in HTML cost uh as that user interaction",
    "start": "1503600",
    "end": "1511679"
  },
  {
    "text": "might be occurring that is going to be parsing and then appending it so depending on the amount of Dom that",
    "start": "1511679",
    "end": "1517360"
  },
  {
    "text": "you're creating that might actually be cost prohibitive in in a certain circumstance",
    "start": "1517360",
    "end": "1523679"
  },
  {
    "text": "yeah every time you uh so yes every time you well every",
    "start": "1523679",
    "end": "1529000"
  },
  {
    "text": "time you clone an aend right cuz if you append um if you're taking a node uh in",
    "start": "1529000",
    "end": "1536399"
  },
  {
    "text": "a pending it multiple times you're just moving it I think right so will",
    "start": "1536399",
    "end": "1541919"
  },
  {
    "text": "of will be well so it's not so so the idea is that the I don't actually think",
    "start": "1541919",
    "end": "1547960"
  },
  {
    "text": "the template tag does anything to specifically cach it I think if you do not clone you can actually steal Dom out",
    "start": "1547960",
    "end": "1554200"
  },
  {
    "text": "of the template tag and then the next time you try cloning it it won't be anymore so you need to be careful to",
    "start": "1554200",
    "end": "1559799"
  },
  {
    "text": "actually clone the contents of the template tag here which is what we're doing on line 15 um and so now you know",
    "start": "1559799",
    "end": "1567000"
  },
  {
    "text": "just to show you again we refresh now that Al that alert doesn't get fired when we append it it's going to get",
    "start": "1567000",
    "end": "1573080"
  },
  {
    "text": "fired right and then there's our success message uh and uh and then of course if",
    "start": "1573080",
    "end": "1580559"
  },
  {
    "text": "we were to continue to clone and append then we would see that same uh we would",
    "start": "1580559",
    "end": "1586000"
  },
  {
    "text": "see the same thing happen again right make sense what is this Boolean",
    "start": "1586000",
    "end": "1594080"
  },
  {
    "text": "flag boole oh recursively yeah so clone by default is",
    "start": "1594080",
    "end": "1599399"
  },
  {
    "text": "non-recursive not deep and true means do it deeply so any other questions before I move on",
    "start": "1599399",
    "end": "1606960"
  },
  {
    "text": "all right cool um so um that's the template tag pretty",
    "start": "1606960",
    "end": "1613159"
  },
  {
    "text": "much so let's move on um",
    "start": "1613159",
    "end": "1619600"
  },
  {
    "text": "come on I don't know why I can't get over there",
    "start": "1620080",
    "end": "1626039"
  },
  {
    "text": "easily all right so templates you you should really think of as they're a very",
    "start": "1626039",
    "end": "1631880"
  },
  {
    "text": "low level primitive right they're basically a nice new way of having uh markup uh of generating document",
    "start": "1631880",
    "end": "1639159"
  },
  {
    "text": "fragments via markup rather than via procedural JavaScript code um and so you",
    "start": "1639159",
    "end": "1645679"
  },
  {
    "text": "know my hope is that and I think you the hope of the spec authors is that this is a this the template tag is is uh",
    "start": "1645679",
    "end": "1653000"
  },
  {
    "text": "basically uh you know our foot uh you know dipping our toes in the pool here",
    "start": "1653000",
    "end": "1658399"
  },
  {
    "text": "around this whole templating problem and uh is going to be a primitive that enables something higher level to be",
    "start": "1658399",
    "end": "1664399"
  },
  {
    "text": "actually implemented in the browser and so um you know it would be cool to see uh some simple data binding systems uh",
    "start": "1664399",
    "end": "1671039"
  },
  {
    "text": "potentially be standardized in the future as well uh and so what I mean by that is something like this right like",
    "start": "1671039",
    "end": "1676279"
  },
  {
    "text": "this is the kind of thing you're used to already with your existing libraries and tools uh libraries and Frameworks today",
    "start": "1676279",
    "end": "1681640"
  },
  {
    "text": "so it would be nice if we could in theory create a template tag put some special markup in it and then you know M",
    "start": "1681640",
    "end": "1688200"
  },
  {
    "text": "this magical render uh I just realized my cursor does not actually show I'm",
    "start": "1688200",
    "end": "1693240"
  },
  {
    "text": "looking at my notes uh so this render method here could perhaps take a JavaScript object and that would",
    "start": "1693240",
    "end": "1699000"
  },
  {
    "text": "automatically populate you know any of the uh data bindings inside of uh the",
    "start": "1699000",
    "end": "1704080"
  },
  {
    "text": "Dom so it would be cool if something like this existed right but not yet sorry um so it's an important point to",
    "start": "1704080",
    "end": "1711919"
  },
  {
    "text": "know it's an important Point here that while there's a lot of hype and craze around web components there's actually still a a void for Frameworks and",
    "start": "1711919",
    "end": "1718440"
  },
  {
    "text": "libraries to uh fill and so um we will do",
    "start": "1718440",
    "end": "1723679"
  },
  {
    "text": "that so um the next spec that I want to talk about is HTML Imports uh HTML",
    "start": "1723679",
    "end": "1729600"
  },
  {
    "text": "Imports uh enable you to include and uh reuse docu HTML documents and other HTML",
    "start": "1729600",
    "end": "1736360"
  },
  {
    "text": "documents so this is kind of of a little bit of a mind Bender you can kind of think of it as you know just like you",
    "start": "1736360",
    "end": "1742159"
  },
  {
    "text": "can link a stylesheet into a document you can also link a another HTML page",
    "start": "1742159",
    "end": "1747360"
  },
  {
    "text": "into a document and so really what this is all about is um as you've seen with",
    "start": "1747360",
    "end": "1754039"
  },
  {
    "text": "the uh you know with our exist well we haven't well you as you can might imagine with templates and with custom",
    "start": "1754039",
    "end": "1760799"
  },
  {
    "text": "elements we've got both HTML markup and JavaScript code now and the idea behind",
    "start": "1760799",
    "end": "1766360"
  },
  {
    "text": "HTML Imports is like wouldn't it be awesome if there was an easy way a oneliner way of bringing all of those",
    "start": "1766360",
    "end": "1773960"
  },
  {
    "text": "assets uh you know the the markup the JavaScript and the CSS into a a page",
    "start": "1773960",
    "end": "1780760"
  },
  {
    "text": "with you know without without any build tools without any uh real conceptual",
    "start": "1780760",
    "end": "1785960"
  },
  {
    "text": "overhead um and so here's an example we're just dropping in an import and then now magically are we have an",
    "start": "1785960",
    "end": "1793200"
  },
  {
    "text": "element that we can use right and so like I said this is a really dead simple",
    "start": "1793200",
    "end": "1798679"
  },
  {
    "text": "way it's it's it's meant to I think be uh as simple as possible and is designed for that in mind but the really cool",
    "start": "1798679",
    "end": "1805039"
  },
  {
    "text": "thing about this uh but it has you know some uh some uh exceptions and some uh some",
    "start": "1805039",
    "end": "1813279"
  },
  {
    "text": "complications behind it is that the cool thing is that if your if the Imports you",
    "start": "1813279",
    "end": "1818399"
  },
  {
    "text": "are using happen to share common dependencies those will only get loaded once um so imagine you're using you know",
    "start": "1818399",
    "end": "1826120"
  },
  {
    "text": "jQuery and several different components or uh in several different you know HTML Imports and uh you know those as long as",
    "start": "1826120",
    "end": "1834640"
  },
  {
    "text": "those J queries are coming from the exact same URL they will only get loaded once and so that's kind of the the",
    "start": "1834640",
    "end": "1840880"
  },
  {
    "text": "gotcha um so you know uh it's a I think a really good uh the way I view HTML",
    "start": "1840880",
    "end": "1847880"
  },
  {
    "text": "Imports are you know there's several open usage there's several open questions in my mind about their",
    "start": "1847880",
    "end": "1853480"
  },
  {
    "text": "production capability their production use but I have not seen anything simpler",
    "start": "1853480",
    "end": "1858639"
  },
  {
    "text": "for somebody who's perhaps new to the new to web programming for them to be able to you know in uh go grab a URL",
    "start": "1858639",
    "end": "1867880"
  },
  {
    "text": "from for a component or have downloaded something to their local machine um you",
    "start": "1867880",
    "end": "1873039"
  },
  {
    "text": "know and put it in their local directory for them to be able to bring in something that they can just then use as",
    "start": "1873039",
    "end": "1878960"
  },
  {
    "text": "a tag in their existing markup this is a really great solution to that problem um",
    "start": "1878960",
    "end": "1885559"
  },
  {
    "text": "and uh you know but again for production use I think you know there's actually some tools that have been developed to",
    "start": "1885559",
    "end": "1892080"
  },
  {
    "text": "actually do proper packaging and concatenation like you would expect like you probably are doing today in your",
    "start": "1892080",
    "end": "1897919"
  },
  {
    "text": "production applications around HTML Imports but again this is these things",
    "start": "1897919",
    "end": "1903000"
  },
  {
    "text": "are very new so uh let's take a look at HTML",
    "start": "1903000",
    "end": "1907960"
  },
  {
    "text": "Imports um so we're ah yes thank",
    "start": "1908279",
    "end": "1915360"
  },
  {
    "text": "you um",
    "start": "1915919",
    "end": "1919158"
  },
  {
    "text": "I'm sorry can you use a link inside of uh yeah I don't see why",
    "start": "1921799",
    "end": "1927960"
  },
  {
    "text": "not um know CSS so CSS is also included in this right does get sandx something",
    "start": "1927960",
    "end": "1935360"
  },
  {
    "text": "no it doesn't get sandbox but we're going to talk about Shadow Dom in a second and that's what",
    "start": "1935360",
    "end": "1940840"
  },
  {
    "text": "we'll we'll take care of that for us so here we are very simple document in our",
    "start": "1940840",
    "end": "1947639"
  },
  {
    "text": "head we're going to do a Link rail import uh hre equals um some you know",
    "start": "1947639",
    "end": "1955240"
  },
  {
    "text": "import I'm just going to say imported element",
    "start": "1955240",
    "end": "1961600"
  },
  {
    "text": "something and so now ideally we want to be able to use that imported element inside of our page I can",
    "start": "1962840",
    "end": "1971720"
  },
  {
    "text": "type all right so now we're going to go create an imported element HTML file to",
    "start": "1971720",
    "end": "1978480"
  },
  {
    "text": "import and so um I've got we're running a little short on time so I'm just going",
    "start": "1978480",
    "end": "1984200"
  },
  {
    "text": "to copy and paste this over um so the there's a little there's a little",
    "start": "1984200",
    "end": "1990600"
  },
  {
    "text": "funkiness going on here um and around the document object and basically the",
    "start": "1990600",
    "end": "1996840"
  },
  {
    "text": "idea is I don't know if this is going to end up being the way that it is in the final spec or anything but or the final implementation but basically the idea is",
    "start": "1996840",
    "end": "2004440"
  },
  {
    "text": "here technically the document of this of HTML file is different than the document",
    "start": "2004440",
    "end": "2009880"
  },
  {
    "text": "of the originating uh uh file and so I'm doing some trickery here to basically",
    "start": "2009880",
    "end": "2015919"
  },
  {
    "text": "grab the document from our HTML import. HTML file and so um therefore we're",
    "start": "2015919",
    "end": "2023200"
  },
  {
    "text": "registering the element on our the person importing us not ourselves um",
    "start": "2023200",
    "end": "2031600"
  },
  {
    "text": "what's that",
    "start": "2031600",
    "end": "2037720"
  },
  {
    "text": "mhm I believe window is the same but I don't know I haven't actually tried let's find",
    "start": "2037720",
    "end": "2043480"
  },
  {
    "text": "out um so let me real quickly this is fine except I called it",
    "start": "2043480",
    "end": "2048720"
  },
  {
    "text": "imported element um so we'll throw the bugger in",
    "start": "2048720",
    "end": "2053919"
  },
  {
    "text": "there and uh why don't we do something silly",
    "start": "2053919",
    "end": "2062839"
  },
  {
    "text": "like window do it's me",
    "start": "2062839",
    "end": "2068878"
  },
  {
    "text": "all right um let's do HTML",
    "start": "2072480",
    "end": "2079679"
  },
  {
    "text": "Imports import import all right so window and so we hit our breakpoint",
    "start": "2079679",
    "end": "2088679"
  },
  {
    "text": "window.it no it does not look like window is the same I'm",
    "start": "2088760",
    "end": "2095240"
  },
  {
    "text": "sorry oh maybe good good point let's find out",
    "start": "2095280",
    "end": "2101640"
  },
  {
    "text": "um we can actually maybe use the attach call back but yeah you might be right",
    "start": "2101640",
    "end": "2110480"
  },
  {
    "text": "um so uh let's do this a different way let's",
    "start": "2111200",
    "end": "2117400"
  },
  {
    "text": "actually check inside of here",
    "start": "2117400",
    "end": "2122800"
  },
  {
    "text": "maybe try doing it the other way around",
    "start": "2122800",
    "end": "2128800"
  },
  {
    "text": "all right did I not set a break point oh I didn't save all right so that's",
    "start": "2140160",
    "end": "2148440"
  },
  {
    "text": "interesting okay yeah so it looks like the window is the same we just had an ordering issue with my initial",
    "start": "2148440",
    "end": "2154440"
  },
  {
    "text": "check um so so yeah basically all I'm showing here just focus on the uh the",
    "start": "2154440",
    "end": "2161119"
  },
  {
    "text": "original intent of the demo is that we've got our Uh custom element defined",
    "start": "2161119",
    "end": "2167319"
  },
  {
    "text": "inside of this other HTML file right which we are importing via the link Rel",
    "start": "2167319",
    "end": "2172359"
  },
  {
    "text": "import uh tag and then um here in the attached call back all I'm doing is just",
    "start": "2172359",
    "end": "2177920"
  },
  {
    "text": "enter HTML in a string so that this element actually has some content so",
    "start": "2177920",
    "end": "2183480"
  },
  {
    "text": "it's working great that's all there is really to it about HTML Imports",
    "start": "2183480",
    "end": "2190359"
  },
  {
    "text": "um come on all right so here's the complicated",
    "start": "2191560",
    "end": "2198800"
  },
  {
    "text": "and uh oh wow I'm already out of time um here's the complicated part of the talk",
    "start": "2198800",
    "end": "2204640"
  },
  {
    "text": "uh which is Shadow D um and so I'm not going to talk I'm not going to dive too much into Shadow Dam because it is it is",
    "start": "2204640",
    "end": "2211880"
  },
  {
    "text": "complex but the important thing that I want you to get out of uh and associate",
    "start": "2211880",
    "end": "2216920"
  },
  {
    "text": "with the concept of Shadow is that shadow enables encapsulation of the Dom and so what I mean by that is uh a",
    "start": "2216920",
    "end": "2224520"
  },
  {
    "text": "couple things the most important bit which is as the gentleman up front here asked about earlier is does it isolate",
    "start": "2224520",
    "end": "2232760"
  },
  {
    "text": "the Styles uh you know does html Imports isolate Styles no but Shadow Dom does",
    "start": "2232760",
    "end": "2238599"
  },
  {
    "text": "and so let's try to whip together an example of this um and not only does it isolate",
    "start": "2238599",
    "end": "2246040"
  },
  {
    "text": "Styles it also Al helps you kind of Reason about these um these",
    "start": "2246040",
    "end": "2253119"
  },
  {
    "text": "uh you can you can it enables us to think in Dom apis as well and I'll try to I'll try to point out what I mean by",
    "start": "2253119",
    "end": "2259359"
  },
  {
    "text": "that exactly uh before I completely run out of time here um so here is an example a code example um so this is uh",
    "start": "2259359",
    "end": "2267960"
  },
  {
    "text": "how you use Shadow Dom there is no declarative API to use shadow um by default uh you polymer exposes one um um",
    "start": "2267960",
    "end": "2277520"
  },
  {
    "text": "but basically the idea here is that you can create a template and you can define",
    "start": "2277520",
    "end": "2283440"
  },
  {
    "text": "a style tag you can put a link tag in here import some CSS um and then use",
    "start": "2283440",
    "end": "2290640"
  },
  {
    "text": "puts a mark up here that you know is being styled obviously and um what happens here is if you if you check it",
    "start": "2290640",
    "end": "2296560"
  },
  {
    "text": "out we create we grab a reference to our template we clone it then we create a div and then we ask this we call a",
    "start": "2296560",
    "end": "2303200"
  },
  {
    "text": "method on this div's element called create Shadow route and so what this does is it creates another you can kind",
    "start": "2303200",
    "end": "2310000"
  },
  {
    "text": "of think of it almost as like another uh complete document in a way so almost",
    "start": "2310000",
    "end": "2315839"
  },
  {
    "text": "like an if framy type thing right where basically you've got a separate Dom hierarchy now and you can put things",
    "start": "2315839",
    "end": "2322319"
  },
  {
    "text": "inside of this and we so we go ahead and just it looks like it operates like a node so you can just call uh you know",
    "start": "2322319",
    "end": "2329200"
  },
  {
    "text": "shadow. a pench child drop the Clone in here and then you can append that uh",
    "start": "2329200",
    "end": "2336200"
  },
  {
    "text": "element that uh the original div element to the to the body and so now what's going to happen is is that this p style",
    "start": "2336200",
    "end": "2343000"
  },
  {
    "text": "which is extremely generic right and you which you would normally avoid using in",
    "start": "2343000",
    "end": "2348040"
  },
  {
    "text": "your application uh actually is not going to leak outside of the shadow",
    "start": "2348040",
    "end": "2353680"
  },
  {
    "text": "roote of this div so let's try to get a simple example of this",
    "start": "2353680",
    "end": "2359760"
  },
  {
    "text": "working um so uh another thing to think about or another way to think about Shadow dam is uh the way that I like to",
    "start": "2359760",
    "end": "2366520"
  },
  {
    "text": "describe it uh is that the shadow Dom is kind of like the layout of your",
    "start": "2366520",
    "end": "2372760"
  },
  {
    "text": "component uh and so you get to separate the layout and its styling from the",
    "start": "2372760",
    "end": "2377800"
  },
  {
    "text": "contents of the component that the user is providing right so the contents the user provides is actually styled um",
    "start": "2377800",
    "end": "2386160"
  },
  {
    "text": "based off of their applications uh stylesheets not the components so all",
    "start": "2386160",
    "end": "2391839"
  },
  {
    "text": "right the we are really short on time so um",
    "start": "2391839",
    "end": "2397800"
  },
  {
    "text": "let's see here maybe I can reuse one of these",
    "start": "2397800",
    "end": "2401880"
  },
  {
    "text": "examples um it's probably easier to",
    "start": "2403720",
    "end": "2409200"
  },
  {
    "text": "just all right so we're going to basically just ah thank you I'm epic",
    "start": "2411240",
    "end": "2419000"
  },
  {
    "text": "fail at this um let me actually grab this",
    "start": "2419000",
    "end": "2425359"
  },
  {
    "text": "stuff",
    "start": "2425359",
    "end": "2428359"
  },
  {
    "text": "all right so we're going to grab a template",
    "start": "2433880",
    "end": "2440040"
  },
  {
    "text": "here um and so what we'll do",
    "start": "2440040",
    "end": "2445359"
  },
  {
    "text": "is ah thank you you guys are so",
    "start": "2445440",
    "end": "2450720"
  },
  {
    "text": "helpful can temp yep we're going to do that just one",
    "start": "2450720",
    "end": "2456119"
  },
  {
    "text": "sec second so",
    "start": "2456119",
    "end": "2460440"
  },
  {
    "text": "um uh so let's go ahead hopefully this will just",
    "start": "2466359",
    "end": "2471480"
  },
  {
    "text": "run all right cool right",
    "start": "2474040",
    "end": "2479480"
  },
  {
    "text": "so so um so again this is really kind of like uh for me this has been one of the",
    "start": "2479839",
    "end": "2486400"
  },
  {
    "text": "biggest missing Primitives on the web uh that really gets in the way of code",
    "start": "2486400",
    "end": "2491440"
  },
  {
    "text": "sharing uh because all it takes is like one library to have a colliding style uh",
    "start": "2491440",
    "end": "2498440"
  },
  {
    "text": "or you know class name or ID or whatever right and it blows up and there's not",
    "start": "2498440",
    "end": "2503680"
  },
  {
    "text": "really much you can do um so Shadow Dom's uh you know kind of uh the solution to this and before Shadow there",
    "start": "2503680",
    "end": "2510680"
  },
  {
    "text": "was uh the concept of styles scoped but it looks like for all intense purposes Styles scope is dead and Shadow uh will",
    "start": "2510680",
    "end": "2517640"
  },
  {
    "text": "be the solution um so real quick let's finish up the deck I",
    "start": "2517640",
    "end": "2523319"
  },
  {
    "text": "guess uh oh yes",
    "start": "2523319",
    "end": "2527119"
  },
  {
    "text": "mirror all right so",
    "start": "2531240",
    "end": "2535680"
  },
  {
    "text": "um we did the demo all right so uh to wrap up web components are bringing new",
    "start": "2536440",
    "end": "2542680"
  },
  {
    "text": "features to the platform that hopefully you can see are going to uh really helped to enhance developer",
    "start": "2542680",
    "end": "2548160"
  },
  {
    "text": "productivity we've had a lot of work done to like add features to the web you know like apis that allow us to get",
    "start": "2548160",
    "end": "2554480"
  },
  {
    "text": "access to device capabilities and do video conferencing and stuff but we really haven't focused on up uh on",
    "start": "2554480",
    "end": "2560520"
  },
  {
    "text": "features that help make us more productive doing our jobs and I think web components is kind of the first big",
    "start": "2560520",
    "end": "2565680"
  },
  {
    "text": "step in that in the right directions with regards to that um unfortunately you know as the way of the web uh we're",
    "start": "2565680",
    "end": "2572240"
  },
  {
    "text": "a year or two away from the stuff actually landing natively and all of the browsers that we probably need need to support uh but um as you know browsers",
    "start": "2572240",
    "end": "2580920"
  },
  {
    "text": "browser development is happening at uh a much faster paced uh than it was years",
    "start": "2580920",
    "end": "2586800"
  },
  {
    "text": "uh just a few years ago so um and you know it's important to realize while",
    "start": "2586800",
    "end": "2591880"
  },
  {
    "text": "these features are coming the library and framework uh folks are going to still play a big important role to help",
    "start": "2591880",
    "end": "2598160"
  },
  {
    "text": "all of you start using some of these features today even though they might not be natively implemented um and uh",
    "start": "2598160",
    "end": "2605440"
  },
  {
    "text": "that's awesome so uh it's a really exciting time to be a web developer with all this new stuff so thanks so",
    "start": "2605440",
    "end": "2612130"
  },
  {
    "text": "[Applause]",
    "start": "2612130",
    "end": "2619619"
  },
  {
    "text": "much",
    "start": "2624160",
    "end": "2627160"
  }
]