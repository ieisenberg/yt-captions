[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7819"
  },
  {
    "text": "hello everybody thank you for coming to our talk we're going to talk about Hadoop and we're going to talk about",
    "start": "8000",
    "end": "16240"
  },
  {
    "text": "yarn um what you will learn in this talk if you don't know already let me do a poll how many of you know",
    "start": "16240",
    "end": "24560"
  },
  {
    "text": "Hadoop okay how many of you know yarn two three how many of you know",
    "start": "24920",
    "end": "32200"
  },
  {
    "text": "Java if you don't raise your hand you're in the wrong conference okay so most of you don't",
    "start": "32200",
    "end": "38200"
  },
  {
    "text": "know yarn and that's not a surprise because it's a fairly new thing so in this talk you're going to learn about",
    "start": "38200",
    "end": "43320"
  },
  {
    "text": "Hadoop if you don't know it yet uh you're going to learn what other things you can do in a Hadoop cluster you're",
    "start": "43320",
    "end": "48920"
  },
  {
    "text": "going to learn how you can use yarn to do that better and then uh you're going",
    "start": "48920",
    "end": "54800"
  },
  {
    "text": "to learn about an open source framework called weave which makes it easier to use yarn",
    "start": "54800",
    "end": "60719"
  },
  {
    "text": "so I'm going to start with something that we all know simple web application typically I will separate my",
    "start": "60719",
    "end": "67640"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "presentation and my business logic layer so um I'm just running on two notes and",
    "start": "67640",
    "end": "73000"
  },
  {
    "text": "they somehow talk to a database if I want to make that scalable I can just",
    "start": "73000",
    "end": "78040"
  },
  {
    "start": "77000",
    "end": "77000"
  },
  {
    "text": "add as many copies of that as I want as I want because they're all stateless so now this is already running in a",
    "start": "78040",
    "end": "84439"
  },
  {
    "text": "cluster um and we're all familiar with that I guess now if I'm smart I'm going to make",
    "start": "84439",
    "end": "90759"
  },
  {
    "text": "my web app log and then I can save the log somewhere and maybe I can do",
    "start": "90759",
    "end": "96079"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "something with the logs so now I end up having lots of little log",
    "start": "96079",
    "end": "102200"
  },
  {
    "text": "files okay now I have log files what do I do with my logs my log files will tell",
    "start": "102840",
    "end": "108520"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "me cookies of users what they viewed what they clicked maybe I can find out",
    "start": "108520",
    "end": "114280"
  },
  {
    "text": "how long they stayed on a page what they clicked on most often so I could",
    "start": "114280",
    "end": "119320"
  },
  {
    "text": "actually analyze my logs and make my web app better I could optimize the",
    "start": "119320",
    "end": "126439"
  },
  {
    "text": "application for the user behavior that I observe I could actually personalize the",
    "start": "126439",
    "end": "131520"
  },
  {
    "text": "experience for every user but a lot of people don't do that",
    "start": "131520",
    "end": "136840"
  },
  {
    "text": "and why is that well now you have these web blocks they are huge they have gigabytes sometimes terabytes of data",
    "start": "136840",
    "end": "143720"
  },
  {
    "text": "and how can I analyze them how can I even store them it's so much data it's it's really expensive to store that and",
    "start": "143720",
    "end": "150920"
  },
  {
    "text": "um do I know how to run an algorithm to run over a terabyte of data most people",
    "start": "150920",
    "end": "156239"
  },
  {
    "text": "don't um so for all this heavy lifting there is",
    "start": "156239",
    "end": "161840"
  },
  {
    "text": "Hadoop Hadoop its symbol is the elephant um really does the heavy",
    "start": "161840",
    "end": "168120"
  },
  {
    "text": "lifting when it comes to to Big Data analysis um what is Hadoop it's an open- Source framework and it's",
    "start": "168120",
    "end": "175560"
  },
  {
    "text": "free and by the way it's it's written entirely in Java almost entirely",
    "start": "175560",
    "end": "181080"
  },
  {
    "text": "and it runs on commodity Hardware so it really runs on cheap Hardware you don't have to buy an oracle wack or very",
    "start": "181080",
    "end": "188280"
  },
  {
    "text": "expensive storage that is super reliable you can run it on cheap hardware and that makes it relatively",
    "start": "188280",
    "end": "195599"
  },
  {
    "text": "cheap to store the data and you can actually store a long history of your data months not if if not years of your",
    "start": "195599",
    "end": "202680"
  },
  {
    "text": "web blogs there and then the way you analyze data in Hadoop is using the map reduce",
    "start": "202680",
    "end": "208760"
  },
  {
    "text": "paradigm the map ruse Paradigm was introduced by Google in a paper almost 10 years ago and just a few years later",
    "start": "208760",
    "end": "216760"
  },
  {
    "text": "um an OP source project started to implement that in Java and that's Hadoop uh what it does it does batch",
    "start": "216760",
    "end": "223920"
  },
  {
    "text": "processing of very large files in a distributed file system and the Paradigm is very very",
    "start": "223920",
    "end": "231680"
  },
  {
    "text": "simple but it's very powerful too so um Google when they introduced this they um",
    "start": "231680",
    "end": "238680"
  },
  {
    "text": "they said they were running for for instance their anchor text algorithm and their page rank algorithm in map produce",
    "start": "238680",
    "end": "245159"
  },
  {
    "text": "and those are the two keys to their initial success how they made web search better and a lot of people found that um",
    "start": "245159",
    "end": "253760"
  },
  {
    "text": "you can do almost anything with map Ru so what you do with that now you can turn your web app into a data driven",
    "start": "253760",
    "end": "262840"
  },
  {
    "text": "app what does a map produse app look like it consists of two it runs in a",
    "start": "262840",
    "end": "268600"
  },
  {
    "start": "263000",
    "end": "263000"
  },
  {
    "text": "cluster and it it runs tasks there and there's two types of tasks one type is",
    "start": "268600",
    "end": "274039"
  },
  {
    "text": "the mappers mappers read a part of the input data and each of these parts is",
    "start": "274039",
    "end": "279120"
  },
  {
    "text": "called a split and then each mapper does some processing on that data and splits out",
    "start": "279120",
    "end": "285960"
  },
  {
    "text": "key value pairs these key key value pairs are sorted and that's called the shuffle",
    "start": "285960",
    "end": "292240"
  },
  {
    "text": "phase and then sent to a reducer in such a way that all the output for a single",
    "start": "292240",
    "end": "298960"
  },
  {
    "text": "key will go to the same reducer and now that reducer receives the bag of all those outputs for this key and can now",
    "start": "298960",
    "end": "306360"
  },
  {
    "text": "aggregate analiz do whatever it wants to do and write the final output and that again because the",
    "start": "306360",
    "end": "313639"
  },
  {
    "text": "reducers run in many tasks writes lots of parts so these are part files and um",
    "start": "313639",
    "end": "321600"
  },
  {
    "text": "if you want you can then run another map reduce job that for instance reads the parts that this one wrote as their input",
    "start": "321600",
    "end": "329240"
  },
  {
    "text": "and so on and you can build complex workflows of M produced jobs and you can run run many",
    "start": "329240",
    "end": "335880"
  },
  {
    "start": "330000",
    "end": "330000"
  },
  {
    "text": "of them at the same time in a shared cluster that's what a map reduce cluster",
    "start": "335880",
    "end": "340919"
  },
  {
    "text": "looks like you have all these different jobs running but there's also there's always some nodes that are not",
    "start": "340919",
    "end": "348280"
  },
  {
    "text": "used because I mean who gets 100% utilization out of his",
    "start": "348280",
    "end": "354199"
  },
  {
    "start": "354000",
    "end": "354000"
  },
  {
    "text": "Hardware so when I look at that is well I've I've I've paid for this cluster maybe it runs an Amazon I'm paying and",
    "start": "354199",
    "end": "362160"
  },
  {
    "text": "these notes are idle what can I do with them maybe I want to run something something more than map",
    "start": "362160",
    "end": "368840"
  },
  {
    "text": "ruce maybe I want to do some realtime analysis I can't do that with map ruce",
    "start": "368840",
    "end": "374360"
  },
  {
    "text": "but I might be able to do that with something else maybe with storm or some other real-time streaming",
    "start": "374360",
    "end": "380639"
  },
  {
    "text": "engine um or maybe I want to run a message passing algorithm over this data",
    "start": "380639",
    "end": "385720"
  },
  {
    "text": "there's actually a a paper that shows that you can compute page Rank and real time using message passing and with that",
    "start": "385720",
    "end": "393199"
  },
  {
    "text": "your page rank would be available instantly whenever you see a new page",
    "start": "393199",
    "end": "398240"
  },
  {
    "text": "and you don't have to wait for a long batch job job to um to finish um so in general what can I do",
    "start": "398240",
    "end": "405240"
  },
  {
    "text": "with my cluster if I have capacity there that I don't need right now can I",
    "start": "405240",
    "end": "411000"
  },
  {
    "text": "utilize these idle resources well let's look at some of the apps that",
    "start": "411000",
    "end": "417680"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "I want to run so a message passing app is also a distributed application it runs in a cluster it runs several agents",
    "start": "417680",
    "end": "426599"
  },
  {
    "text": "every agent has some State alog together the states of the",
    "start": "426599",
    "end": "431840"
  },
  {
    "text": "agents make up the state of the application and then they just send messages to each other and manipulate",
    "start": "431840",
    "end": "437360"
  },
  {
    "text": "their state based on that and eventually either the state converges or sometimes it just keeps running forever um but um",
    "start": "437360",
    "end": "445360"
  },
  {
    "text": "this is a pretty common pattern for a distributed application",
    "start": "445360",
    "end": "450520"
  },
  {
    "start": "450000",
    "end": "450000"
  },
  {
    "text": "uh another kind of application is a streaming app in a streaming application we have uh actually real-time events",
    "start": "450520",
    "end": "456400"
  },
  {
    "text": "they come into the system and they're processed in a pipeline of steps and the pipeline can Branch",
    "start": "456400",
    "end": "463759"
  },
  {
    "text": "actually but um it also runs in a distributed mode",
    "start": "463759",
    "end": "468840"
  },
  {
    "text": "and it can scale each of these little boxes here could actually have many instances um or I could do something",
    "start": "468840",
    "end": "475599"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "really simple I've developed a web app and I just want to test it whether it holds up to the load that I'm going to",
    "start": "475599",
    "end": "480720"
  },
  {
    "text": "get on Thanksgiving and so I'm going to run a distributed load test very simple I just I just start n nodes and they all",
    "start": "480720",
    "end": "487479"
  },
  {
    "text": "do the same thing they just Hammer that web service um that should be really easy to do right if I have spare compute",
    "start": "487479",
    "end": "493520"
  },
  {
    "text": "resources I'd really like to do that easily um so why am I telling you about",
    "start": "493520",
    "end": "499120"
  },
  {
    "start": "499000",
    "end": "499000"
  },
  {
    "text": "this um I work at a company called continuity and what we do is we build a big data platform that allows you to run",
    "start": "499120",
    "end": "505800"
  },
  {
    "text": "all these different kinds of things in a single cluster and it makes it really easy so right now we're running things",
    "start": "505800",
    "end": "511960"
  },
  {
    "text": "like realtime stream processing ad hoc queries map ruce jobs and and several",
    "start": "511960",
    "end": "517200"
  },
  {
    "text": "other things in the Hadoop cluster which means for for us this is really a big",
    "start": "517200",
    "end": "522279"
  },
  {
    "text": "problem and we need to solve this we need to find a good way to do this and uh what we really want is a",
    "start": "522279",
    "end": "528600"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "multi-purpose cluster where all these applications all these different types of applications can run at the same time",
    "start": "528600",
    "end": "535440"
  },
  {
    "text": "coexist with each other and um how how do we get",
    "start": "535440",
    "end": "541360"
  },
  {
    "text": "that um we get that with yarn so what is yarn um for that I have to go",
    "start": "541360",
    "end": "550440"
  },
  {
    "text": "a little bit into the history of Hadoop so when Hadoop was written it was written solely as a map ruce",
    "start": "550440",
    "end": "556839"
  },
  {
    "text": "engine and because it runs on a cluster it had a cluster cluster management",
    "start": "556839",
    "end": "562240"
  },
  {
    "text": "component but that was tightly coupled with the map ruce programming Paradigm so the only thing you could run was",
    "start": "562240",
    "end": "568360"
  },
  {
    "text": "really a map ru and in the latest version of Hadoop",
    "start": "568360",
    "end": "575920"
  },
  {
    "text": "2.0 uh that has been changed so now the resource management of the cluster has",
    "start": "575920",
    "end": "581120"
  },
  {
    "text": "been decoupled from the application management that actually understands the programming Paradigm that I'm running",
    "start": "581120",
    "end": "587160"
  },
  {
    "text": "and um the good thing about that is now I can run different types of",
    "start": "587160",
    "end": "593279"
  },
  {
    "text": "applications in a Hadoop cluster um yarn just like Hadoop is",
    "start": "593279",
    "end": "599399"
  },
  {
    "text": "written all in Java it's a multi-tenant it has",
    "start": "599399",
    "end": "605000"
  },
  {
    "text": "security and uh so you can actually run if you if you have clients you can actually run different clients jobs in",
    "start": "605000",
    "end": "611720"
  },
  {
    "text": "the cluster and they cannot impact each other it scaled to many thousands of",
    "start": "611720",
    "end": "617200"
  },
  {
    "text": "noes most people don't have a need for thousands of nodes most people who run Hadoop run it run a dozen nodes and",
    "start": "617200",
    "end": "623680"
  },
  {
    "text": "maybe after a year they go up to 100 noes but few people go to a thousand noes there's uh comp companies however",
    "start": "623680",
    "end": "630000"
  },
  {
    "text": "like Google Yahoo Facebook Twitter they run clusters of thousands of notes",
    "start": "630000",
    "end": "635720"
  },
  {
    "text": "because they really have extremely big data and yarn works on a 12 node cluster",
    "start": "635720",
    "end": "642000"
  },
  {
    "text": "equally well as it works on a 5,000 node cluster so if you have a growing business you can start with a small",
    "start": "642000",
    "end": "647240"
  },
  {
    "text": "cluster and you can you can grow it and eventually you reach that scale where you really need something like",
    "start": "647240",
    "end": "653040"
  },
  {
    "text": "Yarn yeah what does yarn mean um I believe it means yet another",
    "start": "653040",
    "end": "658639"
  },
  {
    "text": "resource nanny or manager it's not clear",
    "start": "658639",
    "end": "664519"
  },
  {
    "text": "um and um the way it works is that um it adds one machine to the cluster which is",
    "start": "664519",
    "end": "672120"
  },
  {
    "start": "666000",
    "end": "666000"
  },
  {
    "text": "the Yan resource manager and the resource manager knows",
    "start": "672120",
    "end": "677200"
  },
  {
    "text": "about all the resources in the cluster and then every application needs to add",
    "start": "677200",
    "end": "682399"
  },
  {
    "text": "one node to its um to its application which is the application master and the",
    "start": "682399",
    "end": "689320"
  },
  {
    "text": "application Master communicates with the resource manager to obtain resources from the cluster once it gets these",
    "start": "689320",
    "end": "696639"
  },
  {
    "text": "resources and the it can start tasks and it's now able to control the",
    "start": "696639",
    "end": "703639"
  },
  {
    "text": "application so how does it work um every node in the machine of course it has",
    "start": "703639",
    "end": "709240"
  },
  {
    "start": "704000",
    "end": "704000"
  },
  {
    "text": "memory and it has CPUs um but Yan takes a slightly more",
    "start": "709240",
    "end": "715000"
  },
  {
    "text": "simplified approach to it it simply says every one of these compute machines",
    "start": "715000",
    "end": "720120"
  },
  {
    "text": "has a number of slots and a slot is you can say it's a container in which I can run a",
    "start": "720120",
    "end": "726000"
  },
  {
    "text": "task and on each machine it runs a process and that process manages and",
    "start": "726000",
    "end": "732240"
  },
  {
    "text": "monitors um the slots of that machine a slot is really a jvm you can run any",
    "start": "732240",
    "end": "738560"
  },
  {
    "text": "Java job there you can actually run any shell command there if you want um what",
    "start": "738560",
    "end": "744199"
  },
  {
    "text": "the resource manager does is it assigns slots in the cluster to an application",
    "start": "744199",
    "end": "750360"
  },
  {
    "text": "the application has a master and the master requests slots once it has the slots it can start tasks",
    "start": "750360",
    "end": "757519"
  },
  {
    "text": "there and it's now in control until it releases those",
    "start": "757519",
    "end": "762360"
  },
  {
    "text": "slots um okay a few more details on how this works so anything that's pink here",
    "start": "764040",
    "end": "770240"
  },
  {
    "text": "belongs to yarn um there are four protocols",
    "start": "770240",
    "end": "777639"
  },
  {
    "text": "involved the first one one is I have a client this can be my laptop and from",
    "start": "777639",
    "end": "783240"
  },
  {
    "text": "this client I want to submit an application and the first thing I have to do is I have to start the application",
    "start": "783240",
    "end": "790519"
  },
  {
    "text": "Master for that I use the client resource manager protocol once the master is",
    "start": "790519",
    "end": "797560"
  },
  {
    "text": "running it communicates with the resource manager to get resources that's",
    "start": "797560",
    "end": "802639"
  },
  {
    "text": "the resource manager um that's the application manager resource manager protocol um um",
    "start": "802639",
    "end": "810560"
  },
  {
    "text": "there's also a node manager running on every node in order to start a",
    "start": "810560",
    "end": "817720"
  },
  {
    "text": "job in a slot the application Master can't do that do that do that itself it",
    "start": "817720",
    "end": "823440"
  },
  {
    "text": "needs to submit a request to the note manager the note manager does it on behalf of the application",
    "start": "823440",
    "end": "829440"
  },
  {
    "text": "manager um so this is how it works looks fairly simple or does it look complex I",
    "start": "829440",
    "end": "836320"
  },
  {
    "text": "don't know simple complex simple simple wow okay you think",
    "start": "836320",
    "end": "843240"
  },
  {
    "text": "this is simple good have you written a yarn",
    "start": "843240",
    "end": "847880"
  },
  {
    "text": "application so I thought this is simple when I started uh using it um okay so",
    "start": "849680",
    "end": "855480"
  },
  {
    "text": "let's go a little bit more into the details how does it actually work and let's just look at the first step the",
    "start": "855480",
    "end": "860800"
  },
  {
    "text": "first step is to deploy or to to actually start the application manager",
    "start": "860800",
    "end": "866040"
  },
  {
    "text": "in one of the slots in the cluster that's the first thing I have to do so let's see how that works I have to give",
    "start": "866040",
    "end": "871959"
  },
  {
    "start": "870000",
    "end": "870000"
  },
  {
    "text": "you a little bit of background for that um so in let's let's not forget this all runs in a Hadoop cluster and Hadoop has",
    "start": "871959",
    "end": "880079"
  },
  {
    "text": "a distributed file system which is called hdfs um all the data that jobs in the",
    "start": "880079",
    "end": "888240"
  },
  {
    "text": "cluster can share are in this distributed file system and the way it works is that every node has a local",
    "start": "888240",
    "end": "894800"
  },
  {
    "text": "file system and it contributes a part of its local file system to this this distributed file",
    "start": "894800",
    "end": "900519"
  },
  {
    "text": "system now when I run a job locally on a note it sees",
    "start": "900519",
    "end": "908279"
  },
  {
    "text": "only the local file system through the native file system",
    "start": "908279",
    "end": "913560"
  },
  {
    "text": "protocols Java file Java IO right if I want to see things that",
    "start": "913560",
    "end": "919120"
  },
  {
    "text": "are on the distributed file system then I need to go through the hdfs protocol I have to use a different file system",
    "start": "919120",
    "end": "925199"
  },
  {
    "text": "protocol file system client um so an important implication here is that",
    "start": "925199",
    "end": "932319"
  },
  {
    "text": "when I run a Java job this Java job this jvm can only",
    "start": "932319",
    "end": "937720"
  },
  {
    "text": "depend on files that are in the local file system it cannot depend on jobs that are in hdfs because the jvm doesn't",
    "start": "937720",
    "end": "944440"
  },
  {
    "text": "understand hdfs and so what does that mean for us",
    "start": "944440",
    "end": "949920"
  },
  {
    "text": "we want to start an application master in the cluster and the client has the jar file",
    "start": "949920",
    "end": "957360"
  },
  {
    "text": "with all the classes on his local file system now if we would just say Okay",
    "start": "957360",
    "end": "964959"
  },
  {
    "text": "yarn start this class this is the main class started in one of the nodes that slot in the cluster cannot",
    "start": "964959",
    "end": "972800"
  },
  {
    "text": "access the local file system of the client so some in in some way we have to",
    "start": "972800",
    "end": "978120"
  },
  {
    "text": "copy the jar file into the local file system of that compute slot right of",
    "start": "978120",
    "end": "986199"
  },
  {
    "text": "that container and um the way we do this is before we submit the job the client",
    "start": "986199",
    "end": "993040"
  },
  {
    "text": "uses the hdfs protocol to copy it to the distributed file system it then sends a",
    "start": "993040",
    "end": "1000040"
  },
  {
    "text": "request to the resource manager and points it to the location on hdfs the resource manager tells the note",
    "start": "1000040",
    "end": "1007120"
  },
  {
    "text": "manager I want to start this job and the note manager copies the jar file from",
    "start": "1007120",
    "end": "1013519"
  },
  {
    "text": "the distributed file system into the local file system and now we can run a jvm that loads the classes from there",
    "start": "1013519",
    "end": "1020120"
  },
  {
    "text": "so it's a little bit more complicated than one would expect at first um so what does that mean when I'm",
    "start": "1020120",
    "end": "1028199"
  },
  {
    "text": "writing a yarn client what are the steps I have to follow so just for this first step to start the application master I",
    "start": "1028199",
    "end": "1035880"
  },
  {
    "text": "have to first connect to the resource manager oh the the Step Zero is copy the",
    "start": "1035880",
    "end": "1042160"
  },
  {
    "text": "jav file to hdfs so here I'm assuming that it's already there uh I connect to the resource manager then",
    "start": "1042160",
    "end": "1049520"
  },
  {
    "text": "I request a new application ID from now on when I talk to the resource manager about this application I have to use",
    "start": "1049520",
    "end": "1055799"
  },
  {
    "start": "1052000",
    "end": "1052000"
  },
  {
    "text": "that ID um then I create a submission context that identifies the application and I",
    "start": "1055799",
    "end": "1062880"
  },
  {
    "text": "create a container launch context that describes the container the requirements for the container in which I want to run",
    "start": "1062880",
    "end": "1069280"
  },
  {
    "text": "the the master then I can Define in that context I can Define the local resources what",
    "start": "1069280",
    "end": "1075039"
  },
  {
    "text": "are the jaw files and other resources it needs that have to be copied to the local file system I can Define uh what",
    "start": "1075039",
    "end": "1082280"
  },
  {
    "text": "should be the environment any environment variables I want to set um then I have to define the command and",
    "start": "1082280",
    "end": "1088240"
  },
  {
    "text": "the command is actually a shell command and then I give it resource limits I can say this particular",
    "start": "1088240",
    "end": "1094799"
  },
  {
    "text": "container can only use 2 gbt of memory if it goes above that kill it um and so",
    "start": "1094799",
    "end": "1101360"
  },
  {
    "text": "once I've done that I can submit the request to start the application Master Okay so I can take you through",
    "start": "1101360",
    "end": "1109360"
  },
  {
    "text": "the code I have probably eight slides that explain exactly these eight steps",
    "start": "1109360",
    "end": "1114720"
  },
  {
    "text": "who wants to see the code oh really H that's interesting",
    "start": "1114720",
    "end": "1121960"
  },
  {
    "text": "okay let's see if we have enough time to do this um so um what I have to do first",
    "start": "1121960",
    "end": "1128400"
  },
  {
    "text": "I have to get a yarn configuration object um that extends from Hadoop",
    "start": "1128400",
    "end": "1134280"
  },
  {
    "text": "configuration um I have to get the actual location of the resource manager",
    "start": "1134280",
    "end": "1140880"
  },
  {
    "text": "its IP address and Port from that configuration and then I create a new",
    "start": "1140880",
    "end": "1146760"
  },
  {
    "text": "configuration a Hadoop configuration um in that",
    "start": "1146760",
    "end": "1152159"
  },
  {
    "text": "configuration I set the well here I set a security class which is kind of",
    "start": "1152159",
    "end": "1159640"
  },
  {
    "text": "awkward because I don't know what it does it's simply something I have to do um I could say I don't want to run",
    "start": "1159640",
    "end": "1167919"
  },
  {
    "text": "security and then then I can use a different class here um and then I create a protocol in order to create a",
    "start": "1167919",
    "end": "1175559"
  },
  {
    "text": "protocol I have to go through a factory method and the RPC here is a is a Hadoop RPC",
    "start": "1175559",
    "end": "1180960"
  },
  {
    "text": "Factory and I have to provide the class that I want to get and uh the",
    "start": "1180960",
    "end": "1186600"
  },
  {
    "text": "configuration so now I have a protocol with that protocol I can talk to the resource manager so as I said the first",
    "start": "1186600",
    "end": "1194000"
  },
  {
    "text": "thing I have to do is I have to create I have to request an application ID that's",
    "start": "1194000",
    "end": "1199120"
  },
  {
    "text": "what I'm doing here um in order to do that so um yarn",
    "start": "1199120",
    "end": "1206080"
  },
  {
    "text": "uses protocol buffers for its um serialization of objects and its its RPC",
    "start": "1206080",
    "end": "1212559"
  },
  {
    "text": "calls and for that you use Factory a factory method to um to instantiate a",
    "start": "1212559",
    "end": "1221799"
  },
  {
    "text": "request um so here I call records. new record off the get new application",
    "start": "1221799",
    "end": "1227320"
  },
  {
    "text": "request class and uh whenever I make requests in yarn I do this in the same",
    "start": "1227320",
    "end": "1232840"
  },
  {
    "text": "way this is the pattern I go through this Factory to get the request and I can set properties on the request and then I can send",
    "start": "1232840",
    "end": "1238880"
  },
  {
    "text": "it um and then I construct an application context same",
    "start": "1238880",
    "end": "1243919"
  },
  {
    "text": "way and oh something is missing here we can't see the last line so here I",
    "start": "1243919",
    "end": "1249840"
  },
  {
    "text": "basically create a container launch context from two things that I just generated uh don't know what happened",
    "start": "1249840",
    "end": "1256640"
  },
  {
    "text": "here why this doesn't fit on the screen anymore okay so now I have the context now in",
    "start": "1256640",
    "end": "1262840"
  },
  {
    "text": "the context I have to define the local resources and basically what I do is um I have to set for every jar file that I",
    "start": "1262840",
    "end": "1269720"
  },
  {
    "text": "want to have copied to the local file system of the uh application Masters container um I have to describe that",
    "start": "1269720",
    "end": "1277400"
  },
  {
    "text": "where is it on htfs uh what type of file is it is it just a file or maybe it's a zip file",
    "start": "1277400",
    "end": "1282840"
  },
  {
    "text": "that has to be expanded or is it the directory that has to be copied I have to say um what is the actual path on FD",
    "start": "1282840",
    "end": "1289480"
  },
  {
    "text": "hdfs I have to give um the modification time and the size of the file and the",
    "start": "1289480",
    "end": "1295840"
  },
  {
    "text": "reason for that is after it gets copied uh this is used to verify that the file",
    "start": "1295840",
    "end": "1301799"
  },
  {
    "text": "is actually the same that it hasn't changed in the meantime or that it hasn't been corrupted when it got uh",
    "start": "1301799",
    "end": "1307279"
  },
  {
    "text": "copied and uh I put that into the local resources and I can do that for as many",
    "start": "1307279",
    "end": "1312600"
  },
  {
    "text": "jaar files as I need I can do that for property files I can do that for whatever resources I want in the local",
    "start": "1312600",
    "end": "1318080"
  },
  {
    "text": "working directory of that container um then I Define the environment that's simply a map um from",
    "start": "1318080",
    "end": "1325880"
  },
  {
    "text": "string to string uh important thing here is if I want to have a class path set I have to",
    "start": "1325880",
    "end": "1332279"
  },
  {
    "text": "Define that uh the framework doesn't do that for me um so if I copy any jars into the",
    "start": "1332279",
    "end": "1338840"
  },
  {
    "text": "working directory and I want them to be available to the jvm I have to add that working directory to the class path uh I",
    "start": "1338840",
    "end": "1347000"
  },
  {
    "text": "guess for security reasons it's not not there by default um and then I Define the command so what",
    "start": "1347000",
    "end": "1353240"
  },
  {
    "text": "am I going to run I'm going to run a Java command a jvm I'm going to run the main class my app master and then I run",
    "start": "1353240",
    "end": "1360279"
  },
  {
    "text": "some arguments this is where you would fill in whatever your app Master does right and whatever arguments it takes um",
    "start": "1360279",
    "end": "1368720"
  },
  {
    "text": "and so I add this command to The Container context I Define resource",
    "start": "1368720",
    "end": "1375960"
  },
  {
    "text": "limits in the same way again new record um set some properties and add it to the",
    "start": "1375960",
    "end": "1382840"
  },
  {
    "text": "context and then finally I can submit the request so now that it's",
    "start": "1382840",
    "end": "1389279"
  },
  {
    "text": "submitted um I'm pretty much done because this happens once the request is",
    "start": "1389279",
    "end": "1394480"
  },
  {
    "text": "sent and it is sent successfully um everything happens asynchronously I don't need to wait for",
    "start": "1394480",
    "end": "1400080"
  },
  {
    "text": "a response uh the response will always be okay I can then I can go back later to the resource manager and ask about",
    "start": "1400080",
    "end": "1406559"
  },
  {
    "text": "the status but here I'm pretty much done in the client okay do you still think it's",
    "start": "1406559",
    "end": "1413279"
  },
  {
    "start": "1411000",
    "end": "1411000"
  },
  {
    "text": "simple sure okay",
    "start": "1413279",
    "end": "1419159"
  },
  {
    "text": "um all right so now I'm in a state I have started the application master I still haven't started any tasks",
    "start": "1419159",
    "end": "1426960"
  },
  {
    "text": "right it's now in the cluster and there is a resource manager so what do I have to do I pretty much have to repeat now",
    "start": "1426960",
    "end": "1433520"
  },
  {
    "text": "in the application master code I have to repeat all these steps that we just did for every task that that I want to run",
    "start": "1433520",
    "end": "1439840"
  },
  {
    "text": "and I do that in a loop um",
    "start": "1439840",
    "end": "1446200"
  },
  {
    "text": "so here so the first thing the master does it registers itself with the",
    "start": "1447520",
    "end": "1452760"
  },
  {
    "text": "resource manager it says hey I'm here I was successfully started and then it goes into a",
    "start": "1452760",
    "end": "1458559"
  },
  {
    "text": "loop um this Loop should probably run maybe every",
    "start": "1458559",
    "end": "1464520"
  },
  {
    "text": "second and send a request to the resource manager this protocol to the resource manager is",
    "start": "1464520",
    "end": "1471159"
  },
  {
    "text": "a single API call and this single API call has as we see five",
    "start": "1471159",
    "end": "1476480"
  },
  {
    "text": "purposes so the first purpose is the application Master sends its heartbeat it says I'm still",
    "start": "1476480",
    "end": "1482440"
  },
  {
    "text": "alive second thing is it can request containers can say give me five more containers with this much memory um and",
    "start": "1482440",
    "end": "1489760"
  },
  {
    "text": "so on um it can also release containers that it has previously",
    "start": "1489760",
    "end": "1495159"
  },
  {
    "text": "received so it submits that and then now it receives a response from the resource manager that",
    "start": "1495159",
    "end": "1501760"
  },
  {
    "text": "response may or may not have some containers it probably will have some containers because we requested",
    "start": "1501760",
    "end": "1507799"
  },
  {
    "text": "some and it'll also have a list of",
    "start": "1507799",
    "end": "1512880"
  },
  {
    "text": "containers that have previously run but they have just terminated so when they have",
    "start": "1512880",
    "end": "1518159"
  },
  {
    "text": "terminated um I know I can release that container um so now I have received some",
    "start": "1518159",
    "end": "1524600"
  },
  {
    "text": "some containers from from the resource manager now I want to start Task ask and in order to do that I send a request to",
    "start": "1524600",
    "end": "1531159"
  },
  {
    "text": "the node manager and that request looks very very similar to what we just did uh",
    "start": "1531159",
    "end": "1536279"
  },
  {
    "text": "in the client to start the application Master right and I send that to the note manager and say please run this task for",
    "start": "1536279",
    "end": "1542480"
  },
  {
    "text": "me and the note manager does all that for me um couple of caveats here so the rule",
    "start": "1542480",
    "end": "1551320"
  },
  {
    "text": "is an application terminates and after all the tasks have terminated the",
    "start": "1551320",
    "end": "1556480"
  },
  {
    "text": "application Master can terminate if the master terminates first then the",
    "start": "1556480",
    "end": "1561840"
  },
  {
    "text": "resource manager doesn't know what to do with the tasks that are running they are now zombies or orphans and because the",
    "start": "1561840",
    "end": "1568279"
  },
  {
    "text": "resource manager doesn't want to waste resources it's simply going to kill them all so you better write your master in a",
    "start": "1568279",
    "end": "1573880"
  },
  {
    "text": "way that it doesn't crash uh there's some plan um to support restarting of",
    "start": "1573880",
    "end": "1579760"
  },
  {
    "text": "the master in case it crashes the problem with this is that the master has some states right it knows about all the",
    "start": "1579760",
    "end": "1585360"
  },
  {
    "text": "notes that it has all the slots that it has all the jobs that are running there it maybe knows the state of each of them",
    "start": "1585360",
    "end": "1593279"
  },
  {
    "text": "and now if it crashes it loses all this state right so when you bring up a new application Master it doesn't have that context so that's the question what's",
    "start": "1593279",
    "end": "1600240"
  },
  {
    "text": "the point um so this would only work if the application Master had a way to persist its state and that's not there",
    "start": "1600240",
    "end": "1607440"
  },
  {
    "text": "right now um also so starting a task in a",
    "start": "1607440",
    "end": "1613559"
  },
  {
    "text": "container is very similar as I said to um starting the application master",
    "start": "1613559",
    "end": "1619880"
  },
  {
    "text": "it's always the node manager that runs on a particular compute node that manages a slot that note manager will",
    "start": "1619880",
    "end": "1627399"
  },
  {
    "text": "start the process for you and the note manager will then also",
    "start": "1627399",
    "end": "1634240"
  },
  {
    "text": "monitor it if it crashes if it fails it will notify you but it can't",
    "start": "1634240",
    "end": "1640559"
  },
  {
    "text": "notify you because it's not talking to you right what the note manager does it informs the resource man manager and",
    "start": "1640559",
    "end": "1646440"
  },
  {
    "text": "says here's a here's a failed slot and then the resource manager next time",
    "start": "1646440",
    "end": "1652000"
  },
  {
    "text": "I call it it's going to respond to me oh these slots have uh have terminated either crashed or with normal",
    "start": "1652000",
    "end": "1659679"
  },
  {
    "text": "conditions and then when I find out about that just because the slot has",
    "start": "1659679",
    "end": "1665519"
  },
  {
    "text": "terminated it's still mine because I may have data there I may have logs there",
    "start": "1665519",
    "end": "1670919"
  },
  {
    "text": "whatever that I want to collect so um the resource manager is not simply going to claim it back from me I have to",
    "start": "1670919",
    "end": "1677159"
  },
  {
    "text": "release it explicitly um another tricky thing is how the",
    "start": "1677159",
    "end": "1685120"
  },
  {
    "text": "interaction with the resource manager works it's completely asynchronous so when I send a request and I say please",
    "start": "1685120",
    "end": "1691399"
  },
  {
    "text": "give me five notes or give me five slots most likely the response will contain",
    "start": "1691399",
    "end": "1697559"
  },
  {
    "text": "zero slots because all that this request does is registers that request somewhere in",
    "start": "1697559",
    "end": "1703600"
  },
  {
    "text": "the resource manager and now the resource manager will fulfill my request asynchron ly next time I make a call I'm",
    "start": "1703600",
    "end": "1711279"
  },
  {
    "text": "probably going to get back some uh some slots that are requested in the previous um call so if I don't get back any slots",
    "start": "1711279",
    "end": "1719799"
  },
  {
    "text": "that doesn't mean that the resource manager didn't understand me it just means it may take a little while if I",
    "start": "1719799",
    "end": "1726080"
  },
  {
    "text": "make the same request again and I ask for five again because I didn't get anything back that adds to the five that",
    "start": "1726080",
    "end": "1732279"
  },
  {
    "text": "I already have so now I have requested 10 right so every call to the resource manager every EST is",
    "start": "1732279",
    "end": "1739799"
  },
  {
    "text": "incremental and the master itself needs to keep track of what it has requested what it has received and how much more",
    "start": "1739799",
    "end": "1745640"
  },
  {
    "text": "it needs um another interesting thing here is when I run a distributed application",
    "start": "1745640",
    "end": "1752320"
  },
  {
    "start": "1748000",
    "end": "1748000"
  },
  {
    "text": "I probably want to have application logs when something goes wrong I want to look at the logs right the way that yarn",
    "start": "1752320",
    "end": "1760120"
  },
  {
    "text": "does this um and this again has to do with the distributed nature of the file system um every jvm will log to the",
    "start": "1760120",
    "end": "1766840"
  },
  {
    "text": "local file system when the job has terminated then those logs get copied",
    "start": "1766840",
    "end": "1772320"
  },
  {
    "text": "into the distributed file system and then the client can retrieve them from there now that's a little bit difficult",
    "start": "1772320",
    "end": "1778880"
  },
  {
    "text": "if you have a job that never terminates that runs forever but okay that's on a different sheet of paper um but this is",
    "start": "1778880",
    "end": "1784640"
  },
  {
    "text": "the way that you can retrieve logs um okay I was going to show you an",
    "start": "1784640",
    "end": "1789760"
  },
  {
    "start": "1788000",
    "end": "1788000"
  },
  {
    "text": "example until I realized how many lines of code it is um the simplest example that you can write would be an",
    "start": "1789760",
    "end": "1796840"
  },
  {
    "text": "application that takes a shell command and runs it in end containers nothing but that runs the",
    "start": "1796840",
    "end": "1803600"
  },
  {
    "text": "shell command and then terminates um this is a sample application that comes with yarn when",
    "start": "1803600",
    "end": "1810240"
  },
  {
    "text": "you download the code and it's, 1681 lines of code for a simple hello world",
    "start": "1810240",
    "end": "1818360"
  },
  {
    "text": "example um over time the apis have improved a",
    "start": "1818360",
    "end": "1823640"
  },
  {
    "text": "little and it's got a little bit simpler but it's still in the current version It's like, 1500 lines of code and the",
    "start": "1823640",
    "end": "1829559"
  },
  {
    "text": "conclusion that I draw from this is yarn is not simple at all and uh my colleague Terren is going",
    "start": "1829559",
    "end": "1837200"
  },
  {
    "text": "to step up now and show you how it can be made easier so as you've seen uh Yan",
    "start": "1837200",
    "end": "1845039"
  },
  {
    "text": "is powerful but at the same time could be pretty complex to write even a very very simple",
    "start": "1845039",
    "end": "1851120"
  },
  {
    "text": "application so there are several sof companies About Yarn um so first of all you see the complexity the protocol",
    "start": "1851120",
    "end": "1856919"
  },
  {
    "text": "itself is relatively complex the API itself is very low level very veryable",
    "start": "1856919",
    "end": "1862799"
  },
  {
    "start": "1858000",
    "end": "1858000"
  },
  {
    "text": "so you have to write the write out everything that you want right through the API that provice and also the",
    "start": "1862799",
    "end": "1870159"
  },
  {
    "text": "clients needs to actually interact with the HFS and need to uh set up the environment so you need to know about",
    "start": "1870159",
    "end": "1876480"
  },
  {
    "text": "the the how the environment is being set up you know everything so basically it's like you have to do everything manual by",
    "start": "1876480",
    "end": "1882279"
  },
  {
    "text": "yourself right and also the other things that Andreas mentioned is that the log collections won't happen when before the",
    "start": "1882279",
    "end": "1890519"
  },
  {
    "text": "the application actually terminates that creates a problem espe especially for us for for example if you're running a",
    "start": "1890519",
    "end": "1895960"
  },
  {
    "text": "realtime analytics uh programs right it never terminates right because the realtime streams keep coming in so you",
    "start": "1895960",
    "end": "1903080"
  },
  {
    "text": "never be able to see the loss and if there's something happen you never be able to know right um and also the",
    "start": "1903080",
    "end": "1910840"
  },
  {
    "text": "application Master as of the current version is a single point of failure in Yan uh because uh it doesn't support",
    "start": "1910840",
    "end": "1918120"
  },
  {
    "text": "restarting a application master um and then between the",
    "start": "1918120",
    "end": "1923279"
  },
  {
    "text": "application master and the containers that you start to run the task there is no defined uh Communications so",
    "start": "1923279",
    "end": "1929799"
  },
  {
    "text": "basically you on your own if you want your uh container to communicate with your application Master for status for",
    "start": "1929799",
    "end": "1936600"
  },
  {
    "text": "messaging for you know any kind of thing you have to work out your own protocol to do that and that all this make it really",
    "start": "1936600",
    "end": "1945799"
  },
  {
    "text": "really difficult to devel that's what we draw from experience uh when we start to use",
    "start": "1945799",
    "end": "1952120"
  },
  {
    "start": "1951000",
    "end": "1951000"
  },
  {
    "text": "yarn and we think that most of the uh typical distributed applications are",
    "start": "1952559",
    "end": "1958159"
  },
  {
    "text": "relatively simple uh simple in the way that you always want I have a bunch of",
    "start": "1958159",
    "end": "1963320"
  },
  {
    "text": "task they may be the same task they may be different task and then I want to run",
    "start": "1963320",
    "end": "1968639"
  },
  {
    "text": "it on a custom with any number of instances of this you know uh uh and",
    "start": "1968639",
    "end": "1975200"
  },
  {
    "text": "number of task um so there are ser examples right for example I want to run M procedures and M consumers for a",
    "start": "1975200",
    "end": "1982279"
  },
  {
    "text": "limited amount of time or uh actually the task that I right I",
    "start": "1982279",
    "end": "1989320"
  },
  {
    "text": "don't want them to be aware of the Yar right because if I write my task in a",
    "start": "1989320",
    "end": "1995440"
  },
  {
    "text": "way that it has to aware of the yarn it makes it really difficult to write for example unit test or small scale test uh",
    "start": "1995440",
    "end": "2001559"
  },
  {
    "text": "or integration test uh because you always need a fulls scale uh yuster to run your task right which is not desable",
    "start": "2001559",
    "end": "2008320"
  },
  {
    "text": "in most of the scenario um so that's why we think uh oh can we actually make writing application",
    "start": "2008320",
    "end": "2015799"
  },
  {
    "text": "on Yan as simple as writing Java Frets I believe most of you actually deal with Java Frets",
    "start": "2015799",
    "end": "2022000"
  },
  {
    "text": "right right so you simply just how to do it right you simply Implement implement the uh runnable interface or the",
    "start": "2022000",
    "end": "2028600"
  },
  {
    "text": "callables or you extend from threats right a couple of ways and then you start the flat or you submit your",
    "start": "2028600",
    "end": "2034799"
  },
  {
    "text": "runnable to a executive service right",
    "start": "2034799",
    "end": "2039720"
  },
  {
    "start": "2038000",
    "end": "2038000"
  },
  {
    "text": "so and what beyond that is for a distributed application it typically",
    "start": "2041440",
    "end": "2047000"
  },
  {
    "text": "needs several more supports from the framework itself for example monitoring and we starting off the containers like",
    "start": "2047000",
    "end": "2053079"
  },
  {
    "text": "for example if your task kind of get killed or die or you know exceptions and exit itself you might want to have logic",
    "start": "2053079",
    "end": "2060320"
  },
  {
    "text": "to restart the task so that it can you know keep on processing incoming data and you want to have like more close to",
    "start": "2060320",
    "end": "2068200"
  },
  {
    "text": "real time log Collections and metrix collections um rather than you have to wait for your application to terminate",
    "start": "2068200",
    "end": "2073599"
  },
  {
    "text": "in order to do that uh and all also you want to have a elastic scaling which means you can say um let's say you are",
    "start": "2073599",
    "end": "2081800"
  },
  {
    "text": "using yarn to run bunch of uh application servers okay so you want to",
    "start": "2081800",
    "end": "2087040"
  },
  {
    "text": "increase or decrease the number of instances based on the current load and you want to do it dynamically you don't",
    "start": "2087040",
    "end": "2092358"
  },
  {
    "text": "want to stop your applications and then restart reconfigure and restart it you want to do it in real time",
    "start": "2092359",
    "end": "2098359"
  },
  {
    "text": "right and of course for long run jobs for realtime jobs and uh other type of services as well and that's come the",
    "start": "2098359",
    "end": "2106160"
  },
  {
    "text": "weave so weave what is weave so weave uh is a library that we built uh that can",
    "start": "2106160",
    "end": "2113839"
  },
  {
    "start": "2109000",
    "end": "2109000"
  },
  {
    "text": "um complement Yar to make it simplier much simplier to use uh it's a open",
    "start": "2113839",
    "end": "2119280"
  },
  {
    "text": "source project it's Apachi Apachi 2 license uh it's hosts on giup um so what",
    "start": "2119280",
    "end": "2126000"
  },
  {
    "text": "it provides it provides s things first of all it provides a generic application moner which means you only",
    "start": "2126000",
    "end": "2131920"
  },
  {
    "text": "need to focus on the task uh and analogy would be you only need to focus on writing your runnable you don't have to",
    "start": "2131920",
    "end": "2138960"
  },
  {
    "text": "worry about like how to run it how to negotiate with Yan or you know things like that and uh uh the we Library",
    "start": "2138960",
    "end": "2147520"
  },
  {
    "text": "provide a DSL for specifying uh how your applications should want uh like how",
    "start": "2147520",
    "end": "2152760"
  },
  {
    "text": "many tases it contains how many instances how many resources you know things like that in a f simple",
    "start": "2152760",
    "end": "2158680"
  },
  {
    "text": "way um and then provide set of API for you to use uh to Define your container",
    "start": "2158680",
    "end": "2164720"
  },
  {
    "text": "task uh basically uh I'll show you later but basically we call it with runnable which actually is extend uh from",
    "start": "2164720",
    "end": "2171160"
  },
  {
    "text": "runnable itself um so that you you can simply write your task by implementing a um a the run method and also the the in",
    "start": "2171160",
    "end": "2179359"
  },
  {
    "text": "need and stuff like kind of life cycle methods um and also it has building support for service Discovery logging",
    "start": "2179359",
    "end": "2186520"
  },
  {
    "text": "metrics and monitoring as well um so uh you might not see the",
    "start": "2186520",
    "end": "2192920"
  },
  {
    "start": "2190000",
    "end": "2190000"
  },
  {
    "text": "details of the code but uh just to Showcase if we use the weave library to",
    "start": "2192920",
    "end": "2198400"
  },
  {
    "text": "write this uh distributor shell applications as being the example application that you can find a yarn",
    "start": "2198400",
    "end": "2204839"
  },
  {
    "text": "distribution if you just look at the the important part of the code so if we if",
    "start": "2204839",
    "end": "2210480"
  },
  {
    "text": "you remove all the Brer Pates uh the Yan version takes around like 500 lines okay",
    "start": "2210480",
    "end": "2217680"
  },
  {
    "text": "and then the complete program that you write in weave it takes around 50 lines so that's the simp simplifications that",
    "start": "2217680",
    "end": "2224800"
  },
  {
    "text": "we talking about by using weave to write distributor applications that can run on a y",
    "start": "2224800",
    "end": "2231760"
  },
  {
    "text": "Custer um so this is how uh the framework look",
    "start": "2231760",
    "end": "2238440"
  },
  {
    "text": "like so the Yellow Part The Weave client is the thing that you use and you",
    "start": "2238440",
    "end": "2243680"
  },
  {
    "text": "interact with uh basically it's a set of java apis that you can use all you need to do is to Define bunch of we runnables",
    "start": "2243680",
    "end": "2250720"
  },
  {
    "text": "right and then you submit uh the application through the we Runner which",
    "start": "2250720",
    "end": "2256040"
  },
  {
    "text": "is similar to a executor or executive service and then the whff runner will do",
    "start": "2256040",
    "end": "2261480"
  },
  {
    "text": "the rest for you so it talks to the Yan C uh Yan resource manager and then it",
    "start": "2261480",
    "end": "2266680"
  },
  {
    "text": "will submit the generic application masterer to run and then that one will T all the runnables and the specifications",
    "start": "2266680",
    "end": "2272640"
  },
  {
    "text": "and request uh appropriate amount of resources from the yuster to run the runnables to run the task that you",
    "start": "2272640",
    "end": "2278760"
  },
  {
    "text": "specify and that you submit through the client and it also use uh Zer um how",
    "start": "2278760",
    "end": "2285920"
  },
  {
    "text": "many of you know suuper okay that's good so it also use Su so suer in uh one sentence is",
    "start": "2285920",
    "end": "2292720"
  },
  {
    "text": "basically a distributed um Custer management tools um so uh State",
    "start": "2292720",
    "end": "2299760"
  },
  {
    "text": "Management tools so we use suer to manage uh the states and messaging between the application master and the",
    "start": "2299760",
    "end": "2305280"
  },
  {
    "text": "client and also between the application master and the task that it starts on the Y Custer and one thing uh you might",
    "start": "2305280",
    "end": "2312560"
  },
  {
    "text": "notice is in the application master that we start we also start a embedded Kafka server so Kafka is a uh very lightweight",
    "start": "2312560",
    "end": "2320800"
  },
  {
    "text": "um pops up system that uh which is op Source uh system as well that we use for",
    "start": "2320800",
    "end": "2327319"
  },
  {
    "text": "so that all the tasks that we start on the Y coaster for the logs and Matrix they actually will keep publishing to",
    "start": "2327319",
    "end": "2333839"
  },
  {
    "text": "the CCO system um so that it's very easy to build consumer to consume the logs and matric um so that you can have a",
    "start": "2333839",
    "end": "2340960"
  },
  {
    "text": "real time RS on all the logs and Metric being emitted by all the task in real",
    "start": "2340960",
    "end": "2346480"
  },
  {
    "text": "time so this is how it looks like um so let's look into a little bit",
    "start": "2346480",
    "end": "2353680"
  },
  {
    "start": "2348000",
    "end": "2348000"
  },
  {
    "text": "more details so let's say now you want to write a application using the we",
    "start": "2353680",
    "end": "2358960"
  },
  {
    "text": "Library what you have to do so right now this this application is showcasing a echo server which is a very very simple",
    "start": "2358960",
    "end": "2366240"
  },
  {
    "text": "one what it does is when it runs it bind to a random ports and then start uh reading in incoming message and then",
    "start": "2366240",
    "end": "2372880"
  },
  {
    "text": "just write it back to the same client and close the connection that's what it does so I skip some details about the",
    "start": "2372880",
    "end": "2378200"
  },
  {
    "text": "the the actual server part but I believe everyone of you will know how to write it it's pretty simple uh to so to Define",
    "start": "2378200",
    "end": "2385160"
  },
  {
    "text": "that um you basically have your class implemented with runnable which itself",
    "start": "2385160",
    "end": "2391040"
  },
  {
    "text": "is actually a runable and then you can use the uh standard uh SF for J loger to",
    "start": "2391040",
    "end": "2396400"
  },
  {
    "text": "write out your log message the with framework itself will uh pick that up so it will have the right",
    "start": "2396400",
    "end": "2402960"
  },
  {
    "text": "appender and then start publishing the logs to the C when this T starts um and then you can get something",
    "start": "2402960",
    "end": "2410760"
  },
  {
    "text": "called with contact uh from the with runnable so that you can interact with the runtime contacts uh for example uh",
    "start": "2410760",
    "end": "2417280"
  },
  {
    "text": "knowing which Hol you're in or want to interact with the uh Discovery service that provided by the with",
    "start": "2417280",
    "end": "2424480"
  },
  {
    "text": "Library um and then you simp simply just uh Implement your what you want to",
    "start": "2424480",
    "end": "2429760"
  },
  {
    "text": "implement in run method so it's basically no different than you implement a thre right um and also there",
    "start": "2429760",
    "end": "2436760"
  },
  {
    "text": "are some extra support like for example you can say contact alarm and then I can you can say well I have a echo uh",
    "start": "2436760",
    "end": "2443319"
  },
  {
    "text": "service that are available on this host and this port okay that's what the with Library will uh provided to you so that",
    "start": "2443319",
    "end": "2450480"
  },
  {
    "text": "when you write your client you can actually use the discovery surface to see oh actually I have like 10 notes",
    "start": "2450480",
    "end": "2456160"
  },
  {
    "text": "that run in this particular service and then I can select one of the uh one of them and then start talking to it or",
    "start": "2456160",
    "end": "2462280"
  },
  {
    "text": "something like this so it's a pretty standard uh way of using Discovery",
    "start": "2462280",
    "end": "2467440"
  },
  {
    "start": "2466000",
    "end": "2466000"
  },
  {
    "text": "service and that's it so that's as simple as that so after you write your task right you write your run now you",
    "start": "2467440",
    "end": "2473920"
  },
  {
    "text": "want to run it right so how to run it so you have something called a we Runner",
    "start": "2473920",
    "end": "2479640"
  },
  {
    "text": "which is like a executor okay so um the library will have a way for you to",
    "start": "2479640",
    "end": "2485160"
  },
  {
    "text": "create so you just say a with Runner and then you KN a yarn with Runner okay then you can um say uh I want to",
    "start": "2485160",
    "end": "2494200"
  },
  {
    "text": "run I want to prepare to run something so you say run. prepare new Echo server so you just new your run so right you",
    "start": "2494200",
    "end": "2502359"
  },
  {
    "text": "don't say Echo server. class you just knew it okay and then you prepare after you prepare you can do some um some more",
    "start": "2502359",
    "end": "2509200"
  },
  {
    "text": "modifications to this particular run so for example you can attach a lock Handler so this one simply just collect",
    "start": "2509200",
    "end": "2515680"
  },
  {
    "text": "all the distributor locks and printed out to the console screen that you run your client okay but you can do other",
    "start": "2515680",
    "end": "2521440"
  },
  {
    "text": "stuff you can have a lock collectors uh lock handlers that actually collect the loss and write to um some other uh hgfs",
    "start": "2521440",
    "end": "2528640"
  },
  {
    "text": "for future analysis or you know you can hook it up with the monitoring system to detect any failure or any problem with",
    "start": "2528640",
    "end": "2534520"
  },
  {
    "text": "the containers that in uh they are running so and also you can do a bunch of stuff like uh manipulating class P",
    "start": "2534520",
    "end": "2541400"
  },
  {
    "text": "you know adding some more extra resources you know things like that but let's say you just want to start it right so now you",
    "start": "2541400",
    "end": "2547800"
  },
  {
    "text": "you prepare and then you start after you start you get something called a with controller a controller is simply just",
    "start": "2547800",
    "end": "2554160"
  },
  {
    "text": "Expos a method for you to control the running applications so you can for example send some commands uh which is",
    "start": "2554160",
    "end": "2561359"
  },
  {
    "text": "like message right is you define your own message it's simply just key values things that you can send uh to the Run",
    "start": "2561359",
    "end": "2568559"
  },
  {
    "text": "applications right and then you can actually send to a particular runable as well if your application is like having",
    "start": "2568559",
    "end": "2573920"
  },
  {
    "text": "a lot of different task uh and then you can of course stop the appliation uh there are other methods that available",
    "start": "2573920",
    "end": "2579920"
  },
  {
    "text": "in the controller for example you can um uh attach listener so that you know the",
    "start": "2579920",
    "end": "2585480"
  },
  {
    "text": "changes of the State uh running state of the application as well those are kind of for advanced usage but you can see",
    "start": "2585480",
    "end": "2592559"
  },
  {
    "text": "it's as simple as step so with these two slides you already be able to start the applications that runs on a y Custer",
    "start": "2592559",
    "end": "2600520"
  },
  {
    "text": "which makes your application distributed applications already so I would like to go a little",
    "start": "2600520",
    "end": "2606599"
  },
  {
    "text": "bit deeper so for example you have more than one task so that in that case we",
    "start": "2606599",
    "end": "2611880"
  },
  {
    "text": "call it an application so application basically is a collections of runnables or collections of",
    "start": "2611880",
    "end": "2617119"
  },
  {
    "text": "tasks uh and the application will um provides a specification we call with",
    "start": "2617119",
    "end": "2623760"
  },
  {
    "text": "specification which you basically specify like um what are all the runnables and for each of the runnables",
    "start": "2623760",
    "end": "2630200"
  },
  {
    "text": "you can say I have bunch of files and resources that I wanted to be available locally uh and then you can also so say",
    "start": "2630200",
    "end": "2637920"
  },
  {
    "text": "uh for the particular for this particular class uh task I want to have like uh five instances of them which",
    "start": "2637920",
    "end": "2644839"
  },
  {
    "text": "each of them will have two cores and like a two gig of memory something like that you can using this DSL to specify",
    "start": "2644839",
    "end": "2651839"
  },
  {
    "text": "things uh that constitute the whole applications and uh the with ap support",
    "start": "2651839",
    "end": "2659040"
  },
  {
    "text": "something like uh well you can define a bunch of tasks and then you can Define like like the ordering like the starting sequence of them so for example if your",
    "start": "2659040",
    "end": "2665520"
  },
  {
    "text": "applications have um multiple things that you want you need them to start in particular order you can say that as",
    "start": "2665520",
    "end": "2671720"
  },
  {
    "text": "well and uh so you construct your applications and then to start it it's more or less the same way you basically",
    "start": "2671720",
    "end": "2677960"
  },
  {
    "text": "use the we Runner and then say prepare now you prepare the application not a single Runner you prepare the",
    "start": "2677960",
    "end": "2683480"
  },
  {
    "text": "application and you say stop in exactly the same way like the previous",
    "start": "2683480",
    "end": "2689319"
  },
  {
    "text": "slide and as a mention you can also specify order like uh for example if your application have free things like",
    "start": "2689520",
    "end": "2695440"
  },
  {
    "text": "input reader and then some processor and the output writer you want to start the the reader first and then the processor",
    "start": "2695440",
    "end": "2701200"
  },
  {
    "text": "and then the writer so you can specify it like this as",
    "start": "2701200",
    "end": "2705520"
  },
  {
    "text": "well um so in summary uh most of the time we see people like",
    "start": "2706400",
    "end": "2713920"
  },
  {
    "text": "having applications that generate a lot of data Hado itself the map reduce uh",
    "start": "2713920",
    "end": "2719800"
  },
  {
    "text": "programming uh Paradigm is kind of defi designed for processing a large amount of data but in terms of like batch",
    "start": "2719800",
    "end": "2726960"
  },
  {
    "text": "processing a large amount of data that's what it is good for that's what it is designed for and eventually the Hado",
    "start": "2726960",
    "end": "2733200"
  },
  {
    "text": "ecosystem you know kind of evolve and they also recognize that the Hadoop Custer itself has more potential than",
    "start": "2733200",
    "end": "2739920"
  },
  {
    "text": "just running B jobs right so that that's why they they build the Hadoop too and then try to separate out the resource",
    "start": "2739920",
    "end": "2745760"
  },
  {
    "text": "manager and the Hadoop and the M reduce programming itself so that you can starting to use yarn to you know write",
    "start": "2745760",
    "end": "2752800"
  },
  {
    "text": "different kinds of application Beyond map rues uh and then we try to um use",
    "start": "2752800",
    "end": "2758000"
  },
  {
    "text": "that and leverage that power and eventually be divide uh designed with uh",
    "start": "2758000",
    "end": "2763200"
  },
  {
    "text": "which we believe uh makes Yan much easy to use and as the previous key note uh",
    "start": "2763200",
    "end": "2769960"
  },
  {
    "text": "some of you noticed easy to use is key to success that's what we believe as well and we believe now we can turn like",
    "start": "2769960",
    "end": "2777160"
  },
  {
    "text": "any Java developers to be a developers that is able to write distribut applications that can run on a Custer",
    "start": "2777160",
    "end": "2785400"
  },
  {
    "text": "that can scale from like doesn't of nodes to thousands of nodes in the same",
    "start": "2785400",
    "end": "2790440"
  },
  {
    "text": "way um thank you so that's uh I think it's question time right um so there are",
    "start": "2790440",
    "end": "2796559"
  },
  {
    "text": "a couple links here uh the first one is the geub link of the we Library so anyone interest you can check it out the",
    "start": "2796559",
    "end": "2802599"
  },
  {
    "text": "second length is the link to the had Yan is the official size of the had Yan",
    "start": "2802599",
    "end": "2808400"
  },
  {
    "text": "distributions and lastly we have from company uh called continuity and we are",
    "start": "2808400",
    "end": "2814079"
  },
  {
    "text": "hiring okay that's it thank you",
    "start": "2814079",
    "end": "2818839"
  },
  {
    "text": "[Music]",
    "start": "2821590",
    "end": "2829179"
  }
]