[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "[Music]",
    "start": "1430",
    "end": "12559"
  },
  {
    "text": "Oscar boin I work at Twitter on uh analytics type stuff data science type",
    "start": "12559",
    "end": "18279"
  },
  {
    "text": "stuff uh and I'm going to talk about a little bit of my view on programming and",
    "start": "18279",
    "end": "23560"
  },
  {
    "text": "its relationship to mathematics obviously the topic there the title says something about it and then more",
    "start": "23560",
    "end": "29400"
  },
  {
    "text": "specifically about some of the code we've developed at Twitter uh for Hadoop and for some streaming applications",
    "start": "29400",
    "end": "36120"
  },
  {
    "text": "usually aggregations um and how we've used mathematics and how sometimes we",
    "start": "36120",
    "end": "41440"
  },
  {
    "text": "weren't that uptight about it so uh here's here's kind of an outline I'm going to talk a little bit",
    "start": "41440",
    "end": "47440"
  },
  {
    "text": "about my background and my view uh some of the things that we've we've done with abstractions that are like completely",
    "start": "47440",
    "end": "53079"
  },
  {
    "text": "out of a math textbook uh which we thought were really good some things that like were pain points uh that we",
    "start": "53079",
    "end": "60199"
  },
  {
    "text": "just like we we dealt with in you know less than ideal ways and like what we",
    "start": "60199",
    "end": "65600"
  },
  {
    "text": "look for like you know what what's the future of this I'd like to hear some of like maybe we have some other ideas",
    "start": "65600",
    "end": "70960"
  },
  {
    "text": "maybe someone has some improvements we can make so uh I'm really uh my background",
    "start": "70960",
    "end": "77560"
  },
  {
    "start": "73000",
    "end": "73000"
  },
  {
    "text": "actually so I like I'm just kind like how did I wind up giving this talk so uh I'm not like I really not I'm much more",
    "start": "77560",
    "end": "83960"
  },
  {
    "text": "of a mathematician than a computer scientist um I was programming from a relatively young age um I've only I only",
    "start": "83960",
    "end": "90200"
  },
  {
    "text": "took one computer science class in school and it was a language called Small Talk which some crazy people like",
    "start": "90200",
    "end": "95280"
  },
  {
    "text": "but uh I didn't really use much after um I did my PhD on Quantum information theory was mostly what you might call",
    "start": "95280",
    "end": "101479"
  },
  {
    "text": "mathematical physics proving theorems uh about about mostly the shorting equation",
    "start": "101479",
    "end": "106680"
  },
  {
    "text": "that's all people are doing with that which is just linear algebra um I was an assistant professor for a little while at the University of Florida I did some",
    "start": "106680",
    "end": "113079"
  },
  {
    "text": "stuff in Quantum information Theory there but I started to move more interested I was more interested in uh",
    "start": "113079",
    "end": "118399"
  },
  {
    "text": "distributed computing systems for that um in the academics are usually more interested in compute bound problems",
    "start": "118399",
    "end": "124840"
  },
  {
    "text": "since moving to Twitter not quite two years ago uh I've been more interested",
    "start": "124840",
    "end": "130080"
  },
  {
    "text": "in the iob bound problems that you see in a lot of analytics um I really it wasn't really that into the functional",
    "start": "130080",
    "end": "136440"
  },
  {
    "text": "programming Community for very long my introduction was I I used hasal for a computer a proof on an old Quantum",
    "start": "136440",
    "end": "141959"
  },
  {
    "text": "information Theory result and it was just a nice fit uh you really could have done it in any programming language but the idea was to use um get the program",
    "start": "141959",
    "end": "151319"
  },
  {
    "text": "to enumerate all these Possible little easyto prove results which you could prove uh in your code right there see",
    "start": "151319",
    "end": "157800"
  },
  {
    "text": "that as long as the program terminated they were each true and then have it go through and enumerate billions of",
    "start": "157800",
    "end": "163239"
  },
  {
    "text": "these so don't listen to what the hell I'm going to say because I've I've only been programming professionally for two",
    "start": "163239",
    "end": "168920"
  },
  {
    "text": "years you know so like what the hell do I know about programming maybe it is math you know but I'm going to make the case it's not okay so the first thing I",
    "start": "168920",
    "end": "177680"
  },
  {
    "text": "want to say is the fact that a math model mathematical model exists for something is not equivalent to saying",
    "start": "177680",
    "end": "183799"
  },
  {
    "text": "that it is that thing and in my view if that were true everything's math I'm not",
    "start": "183799",
    "end": "188879"
  },
  {
    "text": "aware of anything that I'm skeptical that we can build mathematical models for so I'm maybe saying tacitly then I'm",
    "start": "188879",
    "end": "196840"
  },
  {
    "text": "like a strong atheist like everything is physics at the bottom level and maybe we just don't know all of it but like there",
    "start": "196840",
    "end": "202000"
  },
  {
    "text": "are mathematical models for everything right so let's like I'm not saying that",
    "start": "202000",
    "end": "207760"
  },
  {
    "text": "but that doesn't mean it's math so what is math you know well actually what do I",
    "start": "207760",
    "end": "213519"
  },
  {
    "text": "think computer science is what what is programming so I think programming has a lot more to do I happen to choose the",
    "start": "213519",
    "end": "219120"
  },
  {
    "start": "216000",
    "end": "216000"
  },
  {
    "text": "computer science building in MIT but it has a lot more to do with building buildings there's some craftsmanship",
    "start": "219120",
    "end": "225040"
  },
  {
    "text": "there there's some Artistry you're building a complex structure like definitely I'm I assume the people who",
    "start": "225040",
    "end": "231599"
  },
  {
    "text": "built that building know something about math I don't think most ma most mathematicians would say they were doing",
    "start": "231599",
    "end": "237120"
  },
  {
    "text": "mathematics while they did that they might have been doing some arithmetic they're not doing",
    "start": "237120",
    "end": "243840"
  },
  {
    "text": "mathematics a lot of us might think this is dirty when I'm enjoying programming the most I feel like a Craftsman I'm",
    "start": "243920",
    "end": "250159"
  },
  {
    "text": "there at the table I'm making something beautiful if it doesn't look beautiful I'm not really as interested in it",
    "start": "250159",
    "end": "256120"
  },
  {
    "text": "mathematicians will also say that by the way like beauty is very important to mathematics but when I'm when I'm done",
    "start": "256120",
    "end": "262960"
  },
  {
    "text": "making some code it's it's gonna it's then I'm it's like a chair I'm going to get I'm going to enjoy sitting in I'm going to use this it doesn't just go and",
    "start": "262960",
    "end": "270080"
  },
  {
    "text": "sit in the library it doesn't get written down in GitHub and hopefully never executed hopefully you",
    "start": "270080",
    "end": "276600"
  },
  {
    "text": "know when I'm programming you're telling someone how to make something that",
    "start": "276600",
    "end": "281840"
  },
  {
    "text": "someone is often a computer you're giving instructions you're giving incredibly precise instructions I don't",
    "start": "281840",
    "end": "287240"
  },
  {
    "text": "believe when you're making recipes you're doing mathematics I think making recipes is fairly similar to what 90%",
    "start": "287240",
    "end": "294320"
  },
  {
    "text": "maybe more of my colleagues at Twitter are doing so it's like they don't recognize themselves as mathematicians",
    "start": "294320",
    "end": "300639"
  },
  {
    "text": "when they're there some of them with their Ruby and their other like I don't know their hipster coffee script or",
    "start": "300639",
    "end": "306639"
  },
  {
    "text": "something um that's not even a hipster anymore right I gota I gotta go to like Royer I don't know I don't know what the",
    "start": "306639",
    "end": "312639"
  },
  {
    "text": "Hipster thing is now um but you're giving instructions you're not proving theorems you're not doing mathematics",
    "start": "312639",
    "end": "318360"
  },
  {
    "text": "and here are some ma here's some programmers there they are they're uh following instructions and hopefully that food tastes good I don't know so",
    "start": "318360",
    "end": "325039"
  },
  {
    "text": "there's a great old joke about what a mathematician is and it's a device for turning coffee into theorem",
    "start": "325039",
    "end": "331639"
  },
  {
    "text": "um that sounds like a compiler to me but it doesn't run on coffee but uh so that's not what I do though really I I I",
    "start": "331759",
    "end": "338319"
  },
  {
    "text": "write code and hopefully the compiler can help so what are the generalizations",
    "start": "338319",
    "end": "343360"
  },
  {
    "start": "340000",
    "end": "340000"
  },
  {
    "text": "that that I'm kind of making here I mean like one thing is there's this old joke about like uh you know uh the Supreme",
    "start": "343360",
    "end": "348560"
  },
  {
    "text": "Court like how do you know pornography you really when you read the the old quote it's actually how to can into hardcore pornography which somehow makes",
    "start": "348560",
    "end": "355080"
  },
  {
    "text": "it sound dirtier to well for obvious reasons I guess but um but the justice I can't remember who it was it's very",
    "start": "355080",
    "end": "360880"
  },
  {
    "text": "famous quote but I know it when I see it right if I offered you $10 million to distinguish a mathematician doing",
    "start": "360880",
    "end": "367759"
  },
  {
    "text": "mathematics from a programmer doing programming I bet most of you wouldn't say that's controversial like I will take that yes I will I will try to",
    "start": "367759",
    "end": "374639"
  },
  {
    "text": "distinguish the mathematicians and get my $10 million so generally programmers are busy giving precise descriptions of",
    "start": "374639",
    "end": "381599"
  },
  {
    "text": "how to transform input bits to Output bits they're writing down functions generally in some sense okay",
    "start": "381599",
    "end": "388080"
  },
  {
    "text": "mathematicians get paid to prove theorems if you were employed as a mathematician what like the highest",
    "start": "388080",
    "end": "394479"
  },
  {
    "text": "level not to put too many judgments on it you would hope to be like writing papers submitting them to journals they",
    "start": "394479",
    "end": "400759"
  },
  {
    "text": "would be like they would just contain proofs there would be Limas there you'd start with axioms this would be your",
    "start": "400759",
    "end": "406440"
  },
  {
    "text": "business okay that would be great that's that's but that's not what programmers are doing in some cases compilers are",
    "start": "406440",
    "end": "413800"
  },
  {
    "text": "doing that but let's be honest the proofs that compilers are doing are really stupid proofs",
    "start": "413800",
    "end": "419800"
  },
  {
    "text": "it's like you know if you know if this thing over here is equal to that thing over there and that thing over there is equal to that thing then that thing is",
    "start": "419800",
    "end": "424840"
  },
  {
    "text": "equal to that thing I mean that's like 10,000 year old mathematics you know it's like we barely got the compiler to",
    "start": "424840",
    "end": "430400"
  },
  {
    "text": "do that like let's not blow it out out of proportion so",
    "start": "430400",
    "end": "436000"
  },
  {
    "text": "now that's not to say that there's nothing valuable from mathematics that",
    "start": "436000",
    "end": "441199"
  },
  {
    "text": "we can leverage in doing like very beautiful code so we want to use abstractions from",
    "start": "441199",
    "end": "449039"
  },
  {
    "text": "mathematics and we want to have mathematical models of what we're doing I hope there are mathematical models for",
    "start": "449039",
    "end": "455240"
  },
  {
    "text": "the bridges I walk across and we have some deeper trust than like I tried real hard to make a really great bridge and",
    "start": "455240",
    "end": "462000"
  },
  {
    "text": "it's not going to fall down I promise so like so mathematical abstractions and models are great they're fantastic so",
    "start": "462000",
    "end": "468560"
  },
  {
    "text": "like some of the ones that we everyone knows about the mon asteris d",
    "start": "468560",
    "end": "474599"
  },
  {
    "text": "uh duopoly uh totally earning the category abstract algebra functional",
    "start": "474599",
    "end": "480319"
  },
  {
    "text": "programming space there are other ones um the semigroup ter is out to be really awesome uh just slightly weaker than the",
    "start": "480319",
    "end": "486919"
  },
  {
    "text": "monoid um abstractions over monads are it seems like more monads than",
    "start": "486919",
    "end": "492639"
  },
  {
    "text": "monoids are really nice you can see these like patterns where it's like I have this you know any Monet and I'm",
    "start": "492639",
    "end": "497840"
  },
  {
    "text": "going to do like this thing and you got like a huge menu of operations that people didn't notice we all just like",
    "start": "497840",
    "end": "504639"
  },
  {
    "text": "simple moned Transformers and that's really cool like that's like not at all a bad thing",
    "start": "504639",
    "end": "510319"
  },
  {
    "text": "doesn't necessarily make it mathematics but it's like it's like these are nice mathematical models the other nice thing",
    "start": "510319",
    "end": "516440"
  },
  {
    "text": "we get are the free proofs of correctness with some assumptions which I'll talk about in a second of certain",
    "start": "516440",
    "end": "521680"
  },
  {
    "text": "things so it's like okay I've Got U dare I say a bje from type A to type B",
    "start": "521680",
    "end": "531320"
  },
  {
    "text": "and if I have some function from that that is a reduced function I I care a lot about those reducers uh that takes a",
    "start": "531320",
    "end": "538640"
  },
  {
    "text": "an A and A B and kicks out another actually now I'm getting Stephen told me",
    "start": "538640",
    "end": "543800"
  },
  {
    "text": "this would happen next thing I'd be up here with these category theoretic diagrams but anyways I get these like free transforms from an existing",
    "start": "543800",
    "end": "550560"
  },
  {
    "text": "function that I already have on hand to this other space that I want to use them when the the transformation is obvious",
    "start": "550560",
    "end": "555920"
  },
  {
    "text": "and that turns out to be really practical uh I'll talk about it more later so when we're talking about",
    "start": "555920",
    "end": "562560"
  },
  {
    "text": "mathematics I I keep saying this word theorems so who proves the",
    "start": "562560",
    "end": "567600"
  },
  {
    "text": "theorems so it's not the case that the compiler is proving all the theorems in your code when you write correct code",
    "start": "567600",
    "end": "573360"
  },
  {
    "text": "it's because you also at some stage prove some theorems or like intuitively you thought they were true in language",
    "start": "573360",
    "end": "579959"
  },
  {
    "text": "like closure you have like virtually no theorems being proved to you by the compiler and so you resort to",
    "start": "579959",
    "end": "586399"
  },
  {
    "text": "experimental like now they're experimentalists they're not like theoreticians at all that's what it that's what the tests are right we're",
    "start": "586399",
    "end": "592480"
  },
  {
    "text": "doing some experiments we're going to throw it into a checker we're going to randomly run some experiments see if our hypothesis is true keeps looking like",
    "start": "592480",
    "end": "599079"
  },
  {
    "text": "it's true I guess it probably is you know still no theorem there right that's just",
    "start": "599079",
    "end": "604160"
  },
  {
    "text": "experimentalism okay so we want the compiler to prove some theorems in",
    "start": "604160",
    "end": "609240"
  },
  {
    "text": "schola that's great you know as many as possible is good and then there's this question of like how how many are we",
    "start": "609240",
    "end": "615480"
  },
  {
    "text": "going to hope that it will prove for us maybe all of them so the question is how to manage",
    "start": "615480",
    "end": "621240"
  },
  {
    "text": "the tradeoff between things that like couldn't principle be proved by the compiler but in practice are just a",
    "start": "621240",
    "end": "626680"
  },
  {
    "text": "major pain in the ass like closure developers are happy all day doing their stuff and like you know for the most",
    "start": "626680",
    "end": "631760"
  },
  {
    "text": "part they seem to love it you know uh I guess it's cool and but the Ker's not",
    "start": "631760",
    "end": "637639"
  },
  {
    "text": "doing any work for them and they they can build fine systems I guess there's no real evidence that the stuff that they're building is worse than what",
    "start": "637639",
    "end": "643519"
  },
  {
    "text": "we're doing I don't think there's evidence at all for that it would be great if there were evidence and we'd just do something",
    "start": "643519",
    "end": "649639"
  },
  {
    "text": "better so what were some of the wins what were some of the concrete things that we did so we we released this Library",
    "start": "649639",
    "end": "658000"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "algebra it was actually a fork of just some code that was sitting around in scalding which is a Hadoop library that",
    "start": "658000",
    "end": "664440"
  },
  {
    "text": "we use which is like it started as kind of like a like a like a a Scola DSL of",
    "start": "664440",
    "end": "672200"
  },
  {
    "text": "cascading and then we tried to make it as you know more and more you know you know more as close as possible to scolar",
    "start": "672200",
    "end": "678639"
  },
  {
    "text": "collections API along the way we wanted to do some linear algebra why because a lot of the things",
    "start": "678639",
    "end": "685200"
  },
  {
    "text": "in Twitter are linear algebraic if you think about we have a graph we have a graph of people interacting with tweets",
    "start": "685200",
    "end": "691079"
  },
  {
    "text": "we have a graph of people following other people and so a lot of these things are linear algebraic so if you want to do some kind of feature",
    "start": "691079",
    "end": "696720"
  },
  {
    "text": "extraction to do any kind of modeling of this it's it's really nice to think of okay I'm just G to take this vector and",
    "start": "696720",
    "end": "701880"
  },
  {
    "text": "hit it with this Matrix but actually doing that kind of calculation on Hadoop can be really ugly like if like if it",
    "start": "701880",
    "end": "707240"
  },
  {
    "text": "was your job to write those as like Java map produce like like you've got more patients than me or you quit your job",
    "start": "707240",
    "end": "713000"
  },
  {
    "text": "like it's not something You' really want to do with your life so the question was what what should the elements of our",
    "start": "713000",
    "end": "718040"
  },
  {
    "text": "matrices be and so there was like oh maybe maybe a long maybe a double and it's like you know meanwhile like you",
    "start": "718040",
    "end": "724959"
  },
  {
    "text": "know it's like hopefully we get to the answer soon but like let me talk you out of me a long or double and like let's",
    "start": "724959",
    "end": "730519"
  },
  {
    "text": "just do like either a monoid ring or group depending on the context if we're going to sub if we're going to just add",
    "start": "730519",
    "end": "736480"
  },
  {
    "text": "two matrices we just need the monoid why do we need the monoid even rather than the semigroup well these are huge",
    "start": "736480",
    "end": "741519"
  },
  {
    "text": "matrices so they're sparse and most of the values are zero so it didn't even occur to us to start with a semigroup",
    "start": "741519",
    "end": "746959"
  },
  {
    "text": "because like we already knew from the get-go that we were always going to be dealing with sparse M matrices so the zero was like really you know front and",
    "start": "746959",
    "end": "754320"
  },
  {
    "text": "center the ring is necessary to do matrix multiplication we we heard a little we had like there's a great",
    "start": "754320",
    "end": "759800"
  },
  {
    "text": "Library uh Spire which if it existed when we were doing this didn't know about it and we'll probably take their type classes it looks really",
    "start": "759800",
    "end": "766680"
  },
  {
    "text": "awesome um we asked this question what are there what interesting rings are there other than numbers so there there",
    "start": "766680",
    "end": "772120"
  },
  {
    "text": "are a few that you can think of polinomial Etc I actually don't multiply polinomial in the follower graph or",
    "start": "772120",
    "end": "777240"
  },
  {
    "text": "anything but like I maybe lie about it just to make it sound like cool because we like doing algebra but anyway so",
    "start": "777240",
    "end": "783600"
  },
  {
    "text": "that's the background and so we came up with something like this so cosine similarity which is a measure if I want",
    "start": "783600",
    "end": "788880"
  },
  {
    "text": "to recommend like you might be interested in following some person A or B it's a really simple totally brain dead uh algorithm that you can run and",
    "start": "788880",
    "end": "795720"
  },
  {
    "text": "it becomes really simple now we take a tsv we read it we say that it's a matrix of row Type n column type n and value",
    "start": "795720",
    "end": "802920"
  },
  {
    "text": "type double and we can just say code like this where we're going to like let's uh L2 normalize it so each of the",
    "start": "802920",
    "end": "809639"
  },
  {
    "text": "rows becomes unit length and then we just transpose and multiply them together and write it back out now if you were to write this job",
    "start": "809639",
    "end": "816279"
  },
  {
    "text": "like that's like like there's no way you can finish that in like a one hour interview in Java like like at the board",
    "start": "816279",
    "end": "821800"
  },
  {
    "text": "like like it would be a disaster like someone could not write this code and more to the point every time you keep doing matrix multiplication it's there's",
    "start": "821800",
    "end": "828600"
  },
  {
    "text": "a good chance you're going to get it wrong so there's a big win in us saying that's a matrix you're multiplying it",
    "start": "828600",
    "end": "833880"
  },
  {
    "text": "like let's just use this code we we stop having errors but then the question like like",
    "start": "833880",
    "end": "839480"
  },
  {
    "text": "there's this nagging issue like well what if it's not like so if you went to the Spire talk and if you know a lot of",
    "start": "839480",
    "end": "845240"
  },
  {
    "text": "algebra it's like well there're a lot like what if it's not a ring what if it's a",
    "start": "845240",
    "end": "850440"
  },
  {
    "text": "rum what if it's a rig what if there's no negation you're not really ever using negation in multiplication should it be",
    "start": "850440",
    "end": "856240"
  },
  {
    "text": "a rig you you go down this giant rabbit hole when I say programming and math",
    "start": "856240",
    "end": "862240"
  },
  {
    "text": "isn't math I'm saying I don't want to go down that rabbit hole I want to do some other things rings are awesome I'll stop",
    "start": "862240",
    "end": "868040"
  },
  {
    "text": "there so let's see some of the value so here's an interesting calculation we could do",
    "start": "868040",
    "end": "874240"
  },
  {
    "text": "super easily once we had like a monoid on some like interesting data structure so the question is the following for",
    "start": "874240",
    "end": "880920"
  },
  {
    "text": "each user compute the set the or the size of their followers",
    "start": "880920",
    "end": "886120"
  },
  {
    "text": "followers so you um you guys are all hugely important people you must have tens of thousands of followers on the",
    "start": "886120",
    "end": "892399"
  },
  {
    "text": "twitters um the average the average is actually like a thousand so don't feel bad like if you uh if if you have less",
    "start": "892399",
    "end": "899600"
  },
  {
    "text": "than that it's because like you got Obama and Lady Gaga and you have the skew you have this distribution that is",
    "start": "899600",
    "end": "906040"
  },
  {
    "text": "has a super heavy tail Again by the way it's interesting is that mathematics or is only category Theory mathematics but",
    "start": "906040",
    "end": "912199"
  },
  {
    "text": "anyways I'll let you think about that statistics there's also statistics in the world now doesn't come up much anyways um so because of this heavy",
    "start": "912199",
    "end": "919600"
  },
  {
    "text": "heavy skew when you do this count two hops out it becomes extremely expensive so naive algorithm will be expensive but",
    "start": "919600",
    "end": "926120"
  },
  {
    "text": "what is that naive algorithm so this case here's a directed graph we were concerned with the second",
    "start": "926120",
    "end": "931800"
  },
  {
    "start": "927000",
    "end": "927000"
  },
  {
    "text": "followers of a by this in this case I mean the set E and F no big deal I'm",
    "start": "931800",
    "end": "937279"
  },
  {
    "text": "going to move a little fast so once we have this abstraction that we don't",
    "start": "937279",
    "end": "942759"
  },
  {
    "text": "think of it in the database or joins we're just going to think the follower graph is on the left I'm just represented this this graph over here is",
    "start": "942759",
    "end": "949440"
  },
  {
    "text": "a is a binary Matrix and every step on the graph is hitting some Vector with",
    "start": "949440",
    "end": "954720"
  },
  {
    "text": "that Matrix and if I go two steps I'm just hitting it twice so I see the second power of that Matrix and what are",
    "start": "954720",
    "end": "961240"
  },
  {
    "text": "the values of this Vector well I need to have a monoid that was my constraint I need to have a monoid on what I'm going",
    "start": "961240",
    "end": "967279"
  },
  {
    "text": "to propagate with so I can easily propagate any like because propagation I'm just summing um I don't really even need a",
    "start": "967279",
    "end": "974160"
  },
  {
    "text": "monoid I actually only need the semigroup but well was the sparse Matrix you see all the zeros in there so I wanted the",
    "start": "974160",
    "end": "979800"
  },
  {
    "text": "monoid so in this case I for the vector I put everyone's set with themselves so",
    "start": "979800",
    "end": "986079"
  },
  {
    "text": "a starts with the set of only himself his zeroth follower are himself is he is",
    "start": "986079",
    "end": "992040"
  },
  {
    "text": "his own zeroth follower um and now once I propagate twice I'll get the answer I I'll show",
    "start": "992040",
    "end": "999360"
  },
  {
    "text": "the code in a second now before we look at the code what if we didn't know math math is awesome like it's great to know",
    "start": "999360",
    "end": "1006160"
  },
  {
    "start": "1000000",
    "end": "1000000"
  },
  {
    "text": "math because if you didn't know math this would just look like a join okay you'd have this totally it would be two",
    "start": "1006160",
    "end": "1011279"
  },
  {
    "text": "joins and then you some aggregate count and everything and like no one does like well I don't know no one like are there",
    "start": "1011279",
    "end": "1018360"
  },
  {
    "text": "like versin control things for like SQL and everything like like it's always just a nightmare when you see this stuff",
    "start": "1018360",
    "end": "1023560"
  },
  {
    "text": "and there's no like you know like abstraction that I ever really see in that that's my bias obviously but like",
    "start": "1023560",
    "end": "1029760"
  },
  {
    "text": "that's my experience so you have all this opaque code that hides the structure of what's going on when the",
    "start": "1029760",
    "end": "1035079"
  },
  {
    "text": "structure is actually super simple like the cosine similarity it's like two job I mean two like two lines it's nothing",
    "start": "1035079",
    "end": "1041798"
  },
  {
    "text": "so it's great to know math so here's like an implementation of this if we weren't doing it in scalding but the",
    "start": "1041799",
    "end": "1047558"
  },
  {
    "text": "point is this is like a this is a very nice map reduce job there's this microphone here usually",
    "start": "1047559",
    "end": "1053160"
  },
  {
    "text": "I like to wave my hands all around and run all around but if I take the microphone out I'm not going to be able to put it in I'm I'm being vulnerable",
    "start": "1053160",
    "end": "1058600"
  },
  {
    "text": "with you people I'm sharing my anxieties you see so um first we do a group buy we're",
    "start": "1058600",
    "end": "1065080"
  },
  {
    "text": "grouping by all the incoming edges so everyone who's coming to me or to you",
    "start": "1065080",
    "end": "1071080"
  },
  {
    "text": "we're going to group by that we're going to shove over all of the values V past",
    "start": "1071080",
    "end": "1077200"
  },
  {
    "text": "10 you get this Vector I use a map here is a vector here it's a sparse Vector if you like um once I get all those values",
    "start": "1077200",
    "end": "1084360"
  },
  {
    "text": "I'm just going to sum them all up so I either get the value or I get this zero out for that that item you see you don't",
    "start": "1084360",
    "end": "1090280"
  },
  {
    "text": "have to pay too much attention but I'm summing this code works for any monoid and it's great it's great that it's like",
    "start": "1090280",
    "end": "1095559"
  },
  {
    "text": "like abstract in that way and you could actually run this and play with it and here's an example we",
    "start": "1095559",
    "end": "1101000"
  },
  {
    "text": "don't obviously we don't care about graphs that small so the exact problem becomes too",
    "start": "1101000",
    "end": "1108080"
  },
  {
    "text": "expensive because like Obama's second followers are huge in number like Bieber's second follow it sounds like",
    "start": "1108080",
    "end": "1114120"
  },
  {
    "text": "well there wouldn't be that many of them but if you go to the top like 5,000 most followed people like all of those people",
    "start": "1114120",
    "end": "1119480"
  },
  {
    "text": "are followed by a lot of people and they become like a huge cost to do this kind of algorithm so one approach to do is to",
    "start": "1119480",
    "end": "1126919"
  },
  {
    "text": "do approximation techniques so one thing you could do if you know approximation techniques like this like hashing",
    "start": "1126919",
    "end": "1132360"
  },
  {
    "text": "techniques hyper log log turns out to be a monoid if you don't know that it's easy to see hyper log log is is an",
    "start": "1132360",
    "end": "1139080"
  },
  {
    "text": "approximate cardinality estimation I want to see how many unique items have I seen that's kind of like how many unique",
    "start": "1139080",
    "end": "1144919"
  },
  {
    "text": "second followers how does it work well it winds up working by doing hashing a bunch of different hashes and then",
    "start": "1144919",
    "end": "1150799"
  },
  {
    "text": "keeping some minimums along the way but minimum is totally a monoid right so I",
    "start": "1150799",
    "end": "1156559"
  },
  {
    "text": "take the maximum possible value that's my zero minimum clearly associative you're",
    "start": "1156559",
    "end": "1163520"
  },
  {
    "text": "done so to get a feel for how minimum Works to give you an approximate set size you see that we take each value and",
    "start": "1163520",
    "end": "1171320"
  },
  {
    "text": "we hash it from the interval 0 to one so real numbers in there or a bunch of bits if you have more of a computer science",
    "start": "1171320",
    "end": "1177720"
  },
  {
    "text": "background um and then you just keep the minimum value finally after you've done this end times that minimum value the",
    "start": "1177720",
    "end": "1185520"
  },
  {
    "text": "expected the expected value that it will take will be one over n where n is the number of unique items you've seen so if",
    "start": "1185520",
    "end": "1191919"
  },
  {
    "text": "you just take the inverse of that you've got in sounds pretty good actually the",
    "start": "1191919",
    "end": "1196960"
  },
  {
    "text": "variance of that method is too high so you do various corrections to that and that's hyper log",
    "start": "1196960",
    "end": "1202400"
  },
  {
    "text": "log so we could do this exact same code where instead of initializing that",
    "start": "1202400",
    "end": "1207679"
  },
  {
    "text": "Vector with each set of like just the set of themselves we take a hyper log log data structure which you can see in",
    "start": "1207679",
    "end": "1213880"
  },
  {
    "text": "the algebra project um and a couple of other nice uh aggregation monoids for",
    "start": "1213880",
    "end": "1219360"
  },
  {
    "text": "like uh streaming or large scale aggregation and uh now we've got these data structures and we propagate those",
    "start": "1219360",
    "end": "1225440"
  },
  {
    "text": "through the graph and those are a fixed size they don't grow as you've seen more so with like a about a 16 Kil I think",
    "start": "1225440",
    "end": "1233159"
  },
  {
    "text": "it's like 16 kilobyte which is still kind of large data structure you can get like less than 1% error and no one really cares you know that's fine 1%",
    "start": "1233159",
    "end": "1240240"
  },
  {
    "text": "error and you care about ranking problems so you're talking about the top K they're not even within 1% of each",
    "start": "1240240",
    "end": "1246280"
  },
  {
    "text": "other so you're still going to get the rank right so if it's your job to get the top like 500 followers like probably",
    "start": "1246280",
    "end": "1253280"
  },
  {
    "text": "none of them are within one 1% of each other so this just works and then I just ran and you know it's a couple lines of",
    "start": "1253280",
    "end": "1259919"
  },
  {
    "text": "code and then I get this interesting answer right away so it's a huge value the answer by the way is Obama uh he's",
    "start": "1259919",
    "end": "1265640"
  },
  {
    "text": "uh not the most followed or the second follow even the third followed but I don't exactly know why he's the most second followed I assume it's because",
    "start": "1265640",
    "end": "1272000"
  },
  {
    "text": "there's a high variety of people who follow Obama whereas some of the other people are more focused like if you",
    "start": "1272000",
    "end": "1277200"
  },
  {
    "text": "follow Bieber it's like you have a really like it says a lot about your interest but if you follow Obama it's like ah you're an American you're you're",
    "start": "1277200",
    "end": "1285400"
  },
  {
    "text": "or like not even American you're just somewhat interested in the president so so yeah so what was another win so",
    "start": "1285400",
    "end": "1292279"
  },
  {
    "start": "1289000",
    "end": "1289000"
  },
  {
    "text": "semigroups turned out to be a huge win for us recently there's another project that we've been working on to do",
    "start": "1292279",
    "end": "1297400"
  },
  {
    "text": "real-time aggregations and in this project what we do is so so Hadoop and is totally is nailed like the",
    "start": "1297400",
    "end": "1304159"
  },
  {
    "text": "reliability picture so batching and getting that like you know reliable data produced on your Hadoop cluster like it",
    "start": "1304159",
    "end": "1310720"
  },
  {
    "text": "works great but serving that data is painful like you can't serve out of hdfs so you have to think of a different",
    "start": "1310720",
    "end": "1316520"
  },
  {
    "text": "story there and um just the time to get it into a serving infrastructure due to",
    "start": "1316520",
    "end": "1321559"
  },
  {
    "text": "queuing delays in your Hadoop cluster are non-trivial so so how do you work around this so our solution is uh we tee",
    "start": "1321559",
    "end": "1330080"
  },
  {
    "text": "the logs off once we're going to write it onto the Hadoop cluster and then once we're going to feed it through say storm",
    "start": "1330080",
    "end": "1336919"
  },
  {
    "text": "you can build a system on AO whatever you like now we want that real-time system that's thing at the top the RT",
    "start": "1336919",
    "end": "1343440"
  },
  {
    "text": "with the pentagram the Pentagon not pentagram uh there different thing",
    "start": "1343440",
    "end": "1349120"
  },
  {
    "text": "different thing we're not not into that kind of stuff I don't know it's okay if you are whatever um",
    "start": "1349120",
    "end": "1354640"
  },
  {
    "text": "anyway so uh so we we tee these things off and now the nice thing is in real time you have all kinds of problems",
    "start": "1354640",
    "end": "1360880"
  },
  {
    "text": "maybe you have loss maybe you have like cues backing up and we don't want to have infinite memory so we're just going to throw things away but it's really",
    "start": "1360880",
    "end": "1367520"
  },
  {
    "text": "easy to get or you have duplicated messages like storm has at least one semantics not like it most wants by",
    "start": "1367520",
    "end": "1374320"
  },
  {
    "text": "default you can use some slower transactional mode whatever so our idea was like look let's just do a noisy real",
    "start": "1374320",
    "end": "1380880"
  },
  {
    "text": "time in some small batching and you see there's no edges out of those realtime",
    "start": "1380880",
    "end": "1388480"
  },
  {
    "text": "buckets only edges come out of the Hadoop so Hadoop see now I'm G to do the thing",
    "start": "1388480",
    "end": "1395080"
  },
  {
    "text": "okay uh so Hadoop gets the log data and it keeps feeding forward and we're doing what are we doing we're just doing a",
    "start": "1395080",
    "end": "1401000"
  },
  {
    "text": "semigroup we're summing all the way up so we're summing it like for each key we're going to sum all the values for",
    "start": "1401000",
    "end": "1406080"
  },
  {
    "text": "all time that's what this system is trying to do and then when we want the real-time data",
    "start": "1406080",
    "end": "1411440"
  },
  {
    "text": "we just look up the most recent batch that we don't have online so we'll push these Hado batches into some right once",
    "start": "1411440",
    "end": "1418679"
  },
  {
    "text": "like servable data structure but it'll be a few hours behind maybe an hour maybe 15 minutes who knows it's a systems problem but it won't be a",
    "start": "1418679",
    "end": "1424720"
  },
  {
    "text": "millisecond behind Okay and then we'll look over to this bounded size and more importantly",
    "start": "1424720",
    "end": "1430880"
  },
  {
    "text": "bounded error real time read write thing maybe it's a mcash store okay so that",
    "start": "1430880",
    "end": "1437159"
  },
  {
    "text": "one and because we have associativity we have a semi- group we know that when we",
    "start": "1437159",
    "end": "1442240"
  },
  {
    "text": "take we look up the most recent batch we've got and we add in the real-time batch we know that we've got the right",
    "start": "1442240",
    "end": "1447799"
  },
  {
    "text": "value it's great so that was a win and then I got this bad reputation there's",
    "start": "1447799",
    "end": "1453840"
  },
  {
    "text": "some someone tweet that monoids are so last year where I was going around Twitter saying like Okay you tell me a",
    "start": "1453840",
    "end": "1459320"
  },
  {
    "text": "problem I bet it's a monoid it's actually like amazing most aggregation problems can in streaming algorithms are",
    "start": "1459320",
    "end": "1465840"
  },
  {
    "text": "actually monoids because otherwise they're just like not an efficient representation of the problem so most of the things that we are aggregating",
    "start": "1465840",
    "end": "1472159"
  },
  {
    "text": "they're almost all monoids it's really interesting so the facts on the ground are that we're developing code to be",
    "start": "1472159",
    "end": "1478279"
  },
  {
    "start": "1477000",
    "end": "1477000"
  },
  {
    "text": "used by hopefully hundred engine hundreds of Engineers at Twitter it's not a monolithic structure so if they",
    "start": "1478279",
    "end": "1483600"
  },
  {
    "text": "don't like your code they're just like okay I'm not going to use it so I care about that I care about having internal adoption that that matters to me some of",
    "start": "1483600",
    "end": "1491640"
  },
  {
    "text": "those users use Java so like totally going off the deep end in all sorts of super ugly areas of schola that look",
    "start": "1491640",
    "end": "1498720"
  },
  {
    "text": "like horrific when you try to call them in Java is something I'm trying to avoid a little bit not completely but usually",
    "start": "1498720",
    "end": "1505120"
  },
  {
    "text": "trying to avoid that some people program Scala as if it were Java so they just like fire it up and it's like it's Java",
    "start": "1505120",
    "end": "1511039"
  },
  {
    "text": "with type inference and those people are on the payroll and like that's fine that's okay like not everybody has to",
    "start": "1511039",
    "end": "1516960"
  },
  {
    "text": "code the same way you know so where do we go wrong where do we",
    "start": "1516960",
    "end": "1522279"
  },
  {
    "text": "make some some mistakes so here's I'm going to talk about some of the ugly stuff that was the the decent stuff so",
    "start": "1522279",
    "end": "1530320"
  },
  {
    "text": "this stuff's not perfect even if you say it's math it's not you're you're lying to yourself I love the math I love it",
    "start": "1530720",
    "end": "1536679"
  },
  {
    "text": "but who proves that your monad is a monad you're coding up your hasal you're Implement your bind but it's not bind",
    "start": "1536679",
    "end": "1542799"
  },
  {
    "text": "it's not associative it's doing crazy stuff won't tell you that you have to prove a theorem so and like like that",
    "start": "1542799",
    "end": "1549919"
  },
  {
    "text": "happens all the time what if you just fa what if you return error everywhere what do we do I don't know I",
    "start": "1549919",
    "end": "1555320"
  },
  {
    "text": "don't know what we do so who same thing with the monoid so how do you who proves your bje is injective and surjective and",
    "start": "1555320",
    "end": "1562480"
  },
  {
    "text": "what about runtime exceptions they're not going anywhere you're going to get out of memory you're going to get like you know like you're going to call some",
    "start": "1562480",
    "end": "1567760"
  },
  {
    "text": "library and they're going to throw some runtime exception you didn't know they were going to call you have to deal with it I don't I don't remember any of that",
    "start": "1567760",
    "end": "1573919"
  },
  {
    "text": "from any of my real analysis classes or anything that does not seem at all like mathematics to",
    "start": "1573919",
    "end": "1579440"
  },
  {
    "text": "me so our approach is look we write some we write some laws we want our code to follow we write some scholar check for",
    "start": "1579440",
    "end": "1585240"
  },
  {
    "text": "it and we chillax don't worry about it it's not like that big a deal",
    "start": "1585240",
    "end": "1591360"
  },
  {
    "text": "man so here's uh here's where we ignore the rules just jam out code and actually",
    "start": "1591360",
    "end": "1597559"
  },
  {
    "text": "the house does not burn down you know it's like okay you know so here's here's our",
    "start": "1597559",
    "end": "1604360"
  },
  {
    "text": "ring oh my God you threw an error where's your unit on the ring oh my God",
    "start": "1604360",
    "end": "1610520"
  },
  {
    "text": "guess what we never call that method it has never caused a runtime exception and I didn't want to like totally geek out",
    "start": "1610520",
    "end": "1616840"
  },
  {
    "text": "on like massive type hire hierarchies and like it you know it wasn't a giant mistake you know no no one was",
    "start": "1616840",
    "end": "1624679"
  },
  {
    "text": "harmed okay so there are ways around this and the the Spire guys they did",
    "start": "1624679",
    "end": "1630039"
  },
  {
    "text": "invest in this and that's great and maybe we'll adopt their work but I I had other things to do at the time so but",
    "start": "1630039",
    "end": "1635679"
  },
  {
    "text": "the other thing to keep in mind here is if I give you a a ring without identity and I pay you a million dollars to give me a ring with identity you can do it",
    "start": "1635679",
    "end": "1642480"
  },
  {
    "text": "just like if I give you a semi group and I pay you a million dollars to give me a monoid you extend it with a like a a fake like zero value like you lift into",
    "start": "1642480",
    "end": "1650279"
  },
  {
    "text": "an option like you have the none now that's your zero and you go on with your life if if programming is math by the",
    "start": "1650279",
    "end": "1656240"
  },
  {
    "text": "way we know that we don't like totally obsessed like yeah we know there's an equivalence between semigroups and monoids not a big deal you know same",
    "start": "1656240",
    "end": "1663279"
  },
  {
    "text": "thing here it's trivial to extend a like a rung to a ring no big deal so the the",
    "start": "1663279",
    "end": "1668720"
  },
  {
    "text": "sad part is usually people complain about this even sometimes if you would believe it get people commenting like on",
    "start": "1668720",
    "end": "1674360"
  },
  {
    "text": "these giant issue threats but so seldom do we get the poll request please just",
    "start": "1674360",
    "end": "1679399"
  },
  {
    "text": "give me the pull request we'll take the code okay now how about this how about this",
    "start": "1679399",
    "end": "1687399"
  },
  {
    "text": "amazing function crazy useful you use it all the time anyone intuitively obviously can see that there's something",
    "start": "1687399",
    "end": "1694000"
  },
  {
    "text": "wrong here okay and but it's you do it in your code all the time so will you",
    "start": "1694000",
    "end": "1699960"
  },
  {
    "text": "put it in ah I don't know oh my God wait a second not all possible bite arrays are exactly length four this is not",
    "start": "1699960",
    "end": "1707240"
  },
  {
    "text": "truly a b ction it's super useful though are there better Solutions yeah",
    "start": "1707240",
    "end": "1714080"
  },
  {
    "start": "1712000",
    "end": "1712000"
  },
  {
    "text": "there are so here's one better solution so we could here's a bje between array",
    "start": "1714080",
    "end": "1719120"
  },
  {
    "text": "of bites and gzip bites this is a bje no one can doubt that how do we",
    "start": "1719120",
    "end": "1724799"
  },
  {
    "text": "implement this though we do the normal thing just you know do some compression and then we wrap up the array that we",
    "start": "1724799",
    "end": "1730000"
  },
  {
    "text": "get in the end with this decorator class that says look I promise it's gzip bytes now if this were closure there'd",
    "start": "1730000",
    "end": "1736960"
  },
  {
    "text": "be no types anywhere and it wouldn't matter at all right but it' still be a bje mathematically it's still a bje",
    "start": "1736960",
    "end": "1742600"
  },
  {
    "text": "right the types didn't make it a bje did it I don't I don't I don't think you can make that argument and the invert just takes them",
    "start": "1742600",
    "end": "1749159"
  },
  {
    "text": "off that's one solution that's in the code that was one solution we took I don't want to decorate every array with",
    "start": "1749159",
    "end": "1754240"
  },
  {
    "text": "this thing another solution um I've never met him in life I've only",
    "start": "1754240",
    "end": "1761279"
  },
  {
    "text": "met him on the Twitter's and GitHub uh so I don't I think his name's Jed maybe he's in the audience maybe he's not but",
    "start": "1761279",
    "end": "1767399"
  },
  {
    "text": "anyways Jed suggested this I think it's a hack taken from scol z um which you",
    "start": "1767399",
    "end": "1773600"
  },
  {
    "text": "define this uh this type at at which just takes your",
    "start": "1773600",
    "end": "1779320"
  },
  {
    "text": "type T and extends it with this thing called tagged and then you can say that you have a bje between ins and strings",
    "start": "1779320",
    "end": "1785640"
  },
  {
    "text": "which of course exists all the 32-bit integers have one canonical representation of strings and back and",
    "start": "1785640",
    "end": "1791240"
  },
  {
    "text": "forth okay totally clear and then you just decorate this type and say that you're good this is kind of ugly too",
    "start": "1791240",
    "end": "1797279"
  },
  {
    "text": "what's the downside well like it doesn't seem to work with Primitives so if you decorate like int",
    "start": "1797279",
    "end": "1802559"
  },
  {
    "text": "at at something that doesn't seem to that seems that the scholet compiler can't handle that and also that at at is",
    "start": "1802559",
    "end": "1808000"
  },
  {
    "text": "totally stripped off in Java and I kind of care about that so that sucks here's another solution I'm",
    "start": "1808000",
    "end": "1814080"
  },
  {
    "text": "playing with a little bit so when it just like let's get more strict back to the mathematics some things are BS some",
    "start": "1814080",
    "end": "1820200"
  },
  {
    "text": "of these things are injections on the invert we go to an option of a we can't",
    "start": "1820200",
    "end": "1825360"
  },
  {
    "text": "always invert okay this sounds pretty good okay but now here's the problem the",
    "start": "1825360",
    "end": "1830559"
  },
  {
    "text": "scolar compiler can't deal like there's this nice connection between all ejections or",
    "start": "1830559",
    "end": "1836440"
  },
  {
    "text": "injections and all injections are bje over that restricted subset this this",
    "start": "1836440",
    "end": "1843000"
  },
  {
    "text": "actually this theem has a name it's the caner schroer um someone else theorem it's totally obvious work with people",
    "start": "1843000",
    "end": "1849480"
  },
  {
    "text": "who' never taken a lick a math and they totally get it but um but you know caner can get you know caner needs that for",
    "start": "1849480",
    "end": "1855679"
  },
  {
    "text": "his ego we can we can name that theorem after him no deal but the scholet compiler has a lot of issues with this you've got these now recursive uh",
    "start": "1855679",
    "end": "1863240"
  },
  {
    "text": "implicit types that you're pulling in injections can take an implicit bje to construct them and then there you're",
    "start": "1863240",
    "end": "1868840"
  },
  {
    "text": "you're doing the low priority pattern with some low priority injections coming into play and it's like compiler like",
    "start": "1868840",
    "end": "1876000"
  },
  {
    "text": "sometimes Deadlocks sometimes seem to run forever don't really know I don't really want to deal with that don't really want to debug that and",
    "start": "1876000",
    "end": "1881720"
  },
  {
    "text": "unfortunately no and kind of fortunately I'm not paid to debug that so I've got to make some expedient choices",
    "start": "1881720",
    "end": "1888399"
  },
  {
    "text": "and the last thing I want to like If This Were closure we wouldn't really be that worried about it so I think that we should leverage the type system for what",
    "start": "1888399",
    "end": "1895200"
  },
  {
    "text": "it is so we have these great mathematical models they're awesome and we use them and they're they're powerful",
    "start": "1895200",
    "end": "1900639"
  },
  {
    "text": "we get a lot of benefit out of them but like there's a certain uh we need well let me I'll stop there",
    "start": "1900639",
    "end": "1908399"
  },
  {
    "text": "we need to remember that humans can and must prove the theorems though the computer is not doing that for you and",
    "start": "1908399",
    "end": "1913600"
  },
  {
    "text": "if you can prove the theorem without the type system is that okay I think that's allow I think that's necessary okay so",
    "start": "1913600",
    "end": "1921120"
  },
  {
    "text": "even if the compiler can't see something sometimes we say it's true and we just go forward I bet almost all of us have",
    "start": "1921120",
    "end": "1927039"
  },
  {
    "text": "as instance of somewhere in our code and you might say something like this is okay because I can prove that this cast",
    "start": "1927039",
    "end": "1932519"
  },
  {
    "text": "will never fail or or if we like statistics we'll say it will fail sufficiently infrequently that I'm",
    "start": "1932519",
    "end": "1938480"
  },
  {
    "text": "satisfied with it and that's still math it's statistics so I'm supposed to say this please come",
    "start": "1938480",
    "end": "1945440"
  },
  {
    "start": "1944000",
    "end": "1944000"
  },
  {
    "text": "help me improve scalding um make it faster work at Twitter get called names for not knowing",
    "start": "1945440",
    "end": "1952559"
  },
  {
    "text": "mathematics that's my pitch thanks",
    "start": "1952559",
    "end": "1959000"
  },
  {
    "text": "[Music]",
    "start": "1963190",
    "end": "1966309"
  }
]