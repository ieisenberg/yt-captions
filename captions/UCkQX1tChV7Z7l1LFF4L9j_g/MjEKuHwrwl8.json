[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "16760"
  },
  {
    "text": "ergy dark matter and the microservice architecture I'm sure many of you",
    "start": "16760",
    "end": "22680"
  },
  {
    "text": "watching this presentation are Architects when you're not fighting fires or developing features your job is",
    "start": "22680",
    "end": "31080"
  },
  {
    "text": "to Define and evolve your applications architecture an application architecture",
    "start": "31080",
    "end": "37440"
  },
  {
    "text": "is a set of structures elements and relations that satisfy its",
    "start": "37440",
    "end": "43140"
  },
  {
    "text": "non-functional requirements these consist of development time requirements",
    "start": "43140",
    "end": "48239"
  },
  {
    "text": "such as testability and deployability and runtime requirements such as",
    "start": "48239",
    "end": "54239"
  },
  {
    "text": "scalability and availability these days one key decision that you",
    "start": "54239",
    "end": "60719"
  },
  {
    "start": "57000",
    "end": "181000"
  },
  {
    "text": "must make is deciding between the microservice architecture and the monolithic architecture naturally you",
    "start": "60719",
    "end": "68520"
  },
  {
    "text": "ask Twitter as you might expect there are lots of opinions some are more",
    "start": "68520",
    "end": "73920"
  },
  {
    "text": "helpful than others in reality the answer to this question is that it depends but on what what are the",
    "start": "73920",
    "end": "81540"
  },
  {
    "text": "criteria that you should consider When selecting an architectural style in this",
    "start": "81540",
    "end": "87900"
  },
  {
    "text": "presentation I describe how the choice of architecture actually depends upon",
    "start": "87900",
    "end": "93659"
  },
  {
    "text": "dark energy and dark matter these are of course Concepts from astrophysics but",
    "start": "93659",
    "end": "100079"
  },
  {
    "text": "I've discovered that they are excellent metaphors for the forces or the concerns",
    "start": "100079",
    "end": "105299"
  },
  {
    "text": "that you must resolve when defining an architecture both when deciding between",
    "start": "105299",
    "end": "111180"
  },
  {
    "text": "a monolithic architecture and microservices but also when designing a",
    "start": "111180",
    "end": "116820"
  },
  {
    "text": "microservice architecture but first let me introduce myself I'm Chris Richardson",
    "start": "116820",
    "end": "122880"
  },
  {
    "text": "I've done a number of things over the past 40 years for example I developed",
    "start": "122880",
    "end": "128099"
  },
  {
    "text": "lisp systems in the late 80s early 90s I also created the original cloud Foundry",
    "start": "128099",
    "end": "135060"
  },
  {
    "text": "back in 2008 and since 2012 I've been",
    "start": "135060",
    "end": "140459"
  },
  {
    "text": "focused on what eventually became known as the microservice architecture these",
    "start": "140459",
    "end": "146220"
  },
  {
    "text": "days I help organizations all around the world use microservices more effectively",
    "start": "146220",
    "end": "152220"
  },
  {
    "text": "first I'm going to explain why you should use patterns rather than Twitter",
    "start": "152220",
    "end": "158400"
  },
  {
    "text": "to make technology decisions after that you will learn about dark energy and",
    "start": "158400",
    "end": "165060"
  },
  {
    "text": "dark matter which are the metaphors for forces or concerns that you must resolve",
    "start": "165060",
    "end": "170459"
  },
  {
    "text": "when making architectural decisions finally I'm going to show how to use",
    "start": "170459",
    "end": "176040"
  },
  {
    "text": "dark energy in dark out of forces when designing an architecture the software",
    "start": "176040",
    "end": "182459"
  },
  {
    "start": "181000",
    "end": "510000"
  },
  {
    "text": "development Community is divided by what Neil Ford calls the suck Rock dichotomy",
    "start": "182459",
    "end": "189000"
  },
  {
    "text": "in other words your favorite technology sucks my favorite technology rocks much",
    "start": "189000",
    "end": "195599"
  },
  {
    "text": "of the monolith versus microservices argument is driven by this kind of",
    "start": "195599",
    "end": "200640"
  },
  {
    "text": "mindset a powerful antidote to the suck Rock dichotomy are patterns",
    "start": "200640",
    "end": "207480"
  },
  {
    "text": "they provide a valuable framework for making architectural decisions a pattern",
    "start": "207480",
    "end": "213900"
  },
  {
    "text": "is a reusable solution to a problem occurring in a context and its",
    "start": "213900",
    "end": "219720"
  },
  {
    "text": "consequences it's a relatively ancient idea they were",
    "start": "219720",
    "end": "224760"
  },
  {
    "text": "first described in the 70s by the real world architect Christopher Alexander",
    "start": "224760",
    "end": "230519"
  },
  {
    "text": "they were then popularized in the software Community by the gang of four",
    "start": "230519",
    "end": "235560"
  },
  {
    "text": "book in the mid 90s Christopher Alexander was surprised to find himself",
    "start": "235560",
    "end": "240659"
  },
  {
    "text": "invited to speak at software conferences when that happened what makes patterns especially valuable",
    "start": "240659",
    "end": "248040"
  },
  {
    "text": "is their structure in particular a pattern has consequences",
    "start": "248040",
    "end": "254239"
  },
  {
    "text": "the pattern forces you to consider both the drawbacks and the benefits it",
    "start": "254239",
    "end": "261780"
  },
  {
    "text": "requires you to consider the issues which are the sub problems that are created by applying this pattern a",
    "start": "261780",
    "end": "270360"
  },
  {
    "text": "pattern typically references successive patterns that solve those sub problems",
    "start": "270360",
    "end": "275540"
  },
  {
    "text": "then finally a pattern must also reference other patterns alternative",
    "start": "275540",
    "end": "282060"
  },
  {
    "text": "patterns which are different ways of solving the same problem later on in this presentation I will",
    "start": "282060",
    "end": "289919"
  },
  {
    "text": "describe some specific patterns patterns that are related through the predecessor",
    "start": "289919",
    "end": "296100"
  },
  {
    "text": "successor relationship and the alternative relationship often form a",
    "start": "296100",
    "end": "301800"
  },
  {
    "text": "pattern language a pattern language is a collection of patterns that solve problems in a given domain eight years",
    "start": "301800",
    "end": "309120"
  },
  {
    "text": "ago now I created the microservices pattern language with the goal of helping Architects use microservices",
    "start": "309120",
    "end": "317240"
  },
  {
    "text": "more appropriately and effectively",
    "start": "317240",
    "end": "322680"
  },
  {
    "text": "on the left are the monolithic architecture and microservice architecture patterns they are",
    "start": "322680",
    "end": "330240"
  },
  {
    "text": "alternative architectures for your application every other pattern in the pattern",
    "start": "330240",
    "end": "336479"
  },
  {
    "text": "language is the direct or indirect successor of the microservices",
    "start": "336479",
    "end": "341840"
  },
  {
    "text": "architecture pattern they solve the problems that you create for yourself by",
    "start": "341840",
    "end": "347880"
  },
  {
    "text": "deciding to use microservices the pattern language can be your guide",
    "start": "347880",
    "end": "353100"
  },
  {
    "text": "when defining an architecture the way you use it to solve a problem in a given",
    "start": "353100",
    "end": "359160"
  },
  {
    "text": "context is as follows first you find the applicable patterns",
    "start": "359160",
    "end": "365699"
  },
  {
    "text": "next you assess the trade-offs of each of those patterns you then select a pattern and apply it",
    "start": "365699",
    "end": "373880"
  },
  {
    "text": "this pattern updates the context and then usually creates one or more",
    "start": "373880",
    "end": "379740"
  },
  {
    "text": "sub-problems you repeat this process recursively until you've designed your architecture",
    "start": "379740",
    "end": "388080"
  },
  {
    "text": "I now want to describe the first two patterns the monolithic architecture",
    "start": "388080",
    "end": "393360"
  },
  {
    "text": "pattern and the microservice architecture pattern these two patterns are alternative",
    "start": "393360",
    "end": "399780"
  },
  {
    "text": "solutions to the same problem and they share the same context and the same",
    "start": "399780",
    "end": "405479"
  },
  {
    "text": "forces let's start by looking at the context",
    "start": "405479",
    "end": "410699"
  },
  {
    "text": "the context is the environment within which you develop modern applications",
    "start": "410699",
    "end": "416120"
  },
  {
    "text": "today software is eating the world it plays a central role in almost every",
    "start": "416120",
    "end": "422759"
  },
  {
    "text": "business in every industry but the world is crazy or more specifically it's",
    "start": "422759",
    "end": "428880"
  },
  {
    "text": "volatile it's uncertain it's complex and ambiguous in order to be successful a",
    "start": "428880",
    "end": "436440"
  },
  {
    "text": "business must be nimble this means that it must deliver the software that powers",
    "start": "436440",
    "end": "442199"
  },
  {
    "text": "the business rapidly reliably frequently and sustainably",
    "start": "442199",
    "end": "448560"
  },
  {
    "text": "I.T needs to be structured as a Loosely coupled network of small teams",
    "start": "448560",
    "end": "455099"
  },
  {
    "text": "practicing devops this has big implications for architecture in order for a network of",
    "start": "455099",
    "end": "462960"
  },
  {
    "text": "small autonomous devops teams to deliver software rapidly frequently and reliably",
    "start": "462960",
    "end": "469620"
  },
  {
    "text": "and sustainably you need an architecture with several key qualities for example",
    "start": "469620",
    "end": "475560"
  },
  {
    "text": "the authors of accelerate describe how testability deployability and loose coupling are",
    "start": "475560",
    "end": "483539"
  },
  {
    "text": "essential in addition if you are building a long-lived application you",
    "start": "483539",
    "end": "488940"
  },
  {
    "text": "need an architecture that lets you incrementally upgrade its technology stack I now want to talk about the dark",
    "start": "488940",
    "end": "496319"
  },
  {
    "text": "energy and dark matter forces which are a refinement of these architectural quality attributes these forces are",
    "start": "496319",
    "end": "504960"
  },
  {
    "text": "Central to the process that I like to use to design a microservice architecture the first step distills the",
    "start": "504960",
    "end": "512580"
  },
  {
    "start": "510000",
    "end": "564000"
  },
  {
    "text": "application's requirements into system operations a system of operation models",
    "start": "512580",
    "end": "518820"
  },
  {
    "text": "the request that the application must handle it acts upon one or more business",
    "start": "518820",
    "end": "523979"
  },
  {
    "text": "entities or DDD aggregates the Second Step organizes those",
    "start": "523979",
    "end": "530459"
  },
  {
    "text": "Aggregates into subdomains a subdomain is a team-sized chunk of business",
    "start": "530459",
    "end": "537140"
  },
  {
    "text": "functionality you might also call it a business capability",
    "start": "537140",
    "end": "542220"
  },
  {
    "text": "for example in a Java application a subdomain consists of java classes",
    "start": "542220",
    "end": "549660"
  },
  {
    "text": "organized into packages each subdomain is owned by a small team the third step",
    "start": "549660",
    "end": "555720"
  },
  {
    "text": "groups the subdomains to form services and Designs the system operations that",
    "start": "555720",
    "end": "562080"
  },
  {
    "text": "span multiple services this design process groups subdomains to form",
    "start": "562080",
    "end": "567959"
  },
  {
    "start": "564000",
    "end": "631000"
  },
  {
    "text": "Services the key decision that you must make is whether a pair of subdomains",
    "start": "567959",
    "end": "573300"
  },
  {
    "text": "should be together or separate I use the metaphors of dark energy and",
    "start": "573300",
    "end": "579540"
  },
  {
    "text": "dark matter to describe the conflicting forces that you must resolve when making",
    "start": "579540",
    "end": "584760"
  },
  {
    "text": "this decision dark energy is an anti-gravity that's",
    "start": "584760",
    "end": "590100"
  },
  {
    "text": "accelerating the expansion of the universe it's a metaphor for the",
    "start": "590100",
    "end": "595500"
  },
  {
    "text": "repulsive forces that encourage you to put subdomains in different Services",
    "start": "595500",
    "end": "601640"
  },
  {
    "text": "dark matter is an invisible matter that has a gravitational effect on stars and",
    "start": "601640",
    "end": "609120"
  },
  {
    "text": "galaxies it's a metaphor for the attractive forces that encourage you to",
    "start": "609120",
    "end": "614459"
  },
  {
    "text": "put subdomains together in the same service these forces are actually a refinement",
    "start": "614459",
    "end": "621779"
  },
  {
    "text": "of the architectural quality attributes I described earlier deployability",
    "start": "621779",
    "end": "627060"
  },
  {
    "text": "testability along with loose coupling and so on let's first look at the repulsive forces",
    "start": "627060",
    "end": "634860"
  },
  {
    "start": "631000",
    "end": "838000"
  },
  {
    "text": "that encourage decomposition the first Dark Energy repulsive force is",
    "start": "634860",
    "end": "641580"
  },
  {
    "text": "simple services Services should be as simple as possible and have as few dependencies as possible",
    "start": "641580",
    "end": "648680"
  },
  {
    "text": "this ensures that they are easier to understand develop and test we should",
    "start": "648680",
    "end": "655320"
  },
  {
    "text": "therefore minimize the number of subdomains that are grouped together to form a service the second dark energy",
    "start": "655320",
    "end": "662820"
  },
  {
    "text": "force is team autonomy team autonomy is an essential aspect of high performance",
    "start": "662820",
    "end": "669360"
  },
  {
    "text": "software delivery each team should be able to develop test and deploy their",
    "start": "669360",
    "end": "676800"
  },
  {
    "text": "software independently of other teams we should therefore avoid co-locating",
    "start": "676800",
    "end": "682880"
  },
  {
    "text": "subdomains that are owned by different teams together in the same service",
    "start": "682880",
    "end": "689160"
  },
  {
    "text": "the third Dark Energy repulsive force is fast deployment pipeline",
    "start": "689160",
    "end": "695040"
  },
  {
    "text": "fast feedback from local testing from the deployment Pipeline and from",
    "start": "695040",
    "end": "700320"
  },
  {
    "text": "production is essential the deployment pipeline should build test and begin deploying a service",
    "start": "700320",
    "end": "707640"
  },
  {
    "text": "within 15 minutes it must be possible to test Services locally",
    "start": "707640",
    "end": "713880"
  },
  {
    "text": "we should therefore minimize the number of subdomains that are grouped together to form a service and we should avoid",
    "start": "713880",
    "end": "721860"
  },
  {
    "text": "mixing subdomains that can't be tested locally with those that can the fourth",
    "start": "721860",
    "end": "728399"
  },
  {
    "text": "dark energy force is support multiple technology Stacks an application often",
    "start": "728399",
    "end": "734640"
  },
  {
    "text": "needs to use multiple technology stacks for example a predominantly Java",
    "start": "734640",
    "end": "739980"
  },
  {
    "text": "application might use Python for machine learning algorithms the need for",
    "start": "739980",
    "end": "745079"
  },
  {
    "text": "multiple technology Stacks forces some domains to be packaged as separate",
    "start": "745079",
    "end": "750660"
  },
  {
    "text": "Services what's more it's easier to upgrade an application's technology",
    "start": "750660",
    "end": "756120"
  },
  {
    "text": "stack if it consists of multiple small Services that's because the upgrade can",
    "start": "756120",
    "end": "762660"
  },
  {
    "text": "be done incrementally one service at a time small upgrade tasks are less risky",
    "start": "762660",
    "end": "769680"
  },
  {
    "text": "and much easier to schedule than a big bang upgrade in in addition it's much",
    "start": "769680",
    "end": "775920"
  },
  {
    "text": "easier to experiment with new technology Stacks if the services are smaller the",
    "start": "775920",
    "end": "782519"
  },
  {
    "text": "fifth Dark Energy repulsive force is separate domains by their characteristics it's often beneficial to",
    "start": "782519",
    "end": "790560"
  },
  {
    "text": "package subdomains with different characteristics as separate Services",
    "start": "790560",
    "end": "796100"
  },
  {
    "text": "these characteristics include security requirements Regulatory Compliance and",
    "start": "796100",
    "end": "803100"
  },
  {
    "text": "so on for example it's often easier and cheaper to scale an application if",
    "start": "803100",
    "end": "808560"
  },
  {
    "text": "subdomains with very different resource requirements are packaged as separate",
    "start": "808560",
    "end": "813600"
  },
  {
    "text": "services for example a sub domain that needs gpus must run on an ec2 instance",
    "start": "813600",
    "end": "821279"
  },
  {
    "text": "type that's eight times the cost of a general purpose instance",
    "start": "821279",
    "end": "826440"
  },
  {
    "text": "you do not want to co-locate it with services with different resource",
    "start": "826440",
    "end": "833100"
  },
  {
    "text": "requirements it could be extremely costly and wasteful if you did similarly",
    "start": "833100",
    "end": "839579"
  },
  {
    "text": "you can increase availability and make development Easier by packaging business",
    "start": "839579",
    "end": "844620"
  },
  {
    "text": "critical sub-domains as their own services that run on dedicated infrastructure for example in a credit",
    "start": "844620",
    "end": "852180"
  },
  {
    "text": "card payment application business critical operations are those for charging credit cards that's how money",
    "start": "852180",
    "end": "859320"
  },
  {
    "text": "is made functionality such as merchant management while it's important is far",
    "start": "859320",
    "end": "865680"
  },
  {
    "text": "less critical you should therefore avoid packaging those sub domains together",
    "start": "865680",
    "end": "872399"
  },
  {
    "text": "so those are the dark energy forces that encourage decomposition let's now look",
    "start": "872399",
    "end": "878459"
  },
  {
    "text": "at the Dark Matter forces that resist decomposition they are generated by the system",
    "start": "878459",
    "end": "885240"
  },
  {
    "text": "operations that span subdomains the strength of those forces depends on the",
    "start": "885240",
    "end": "891420"
  },
  {
    "text": "operation and and the subdomains that it references the first Dark Matter",
    "start": "891420",
    "end": "898079"
  },
  {
    "text": "attractive force is simple interactions an operations interactions should be as",
    "start": "898079",
    "end": "904500"
  },
  {
    "text": "simple as possible ideally an operation should be local to a single service",
    "start": "904500",
    "end": "910639"
  },
  {
    "text": "that's because a simple local operation is easier to understand",
    "start": "910639",
    "end": "916639"
  },
  {
    "text": "maintain and troubleshoot as a result you might want to co-locate subdomains",
    "start": "916639",
    "end": "923100"
  },
  {
    "text": "in order to simplify an operation the second Dark Matter force is efficient",
    "start": "923100",
    "end": "930019"
  },
  {
    "start": "926000",
    "end": "991000"
  },
  {
    "text": "interactions and operations interactions should also be as efficient as as",
    "start": "930019",
    "end": "935399"
  },
  {
    "text": "possible you want to minimize the the amount of data that's transferred over",
    "start": "935399",
    "end": "940440"
  },
  {
    "text": "the network as well as the number of round trips as a result you might want",
    "start": "940440",
    "end": "946440"
  },
  {
    "text": "to co-locate subdomains in order to implement an operation efficiently the",
    "start": "946440",
    "end": "952980"
  },
  {
    "text": "third force is prefer acid over base system operations are best implemented",
    "start": "952980",
    "end": "959519"
  },
  {
    "text": "as asset transactions that's because asset transactions are as simple and",
    "start": "959519",
    "end": "965100"
  },
  {
    "text": "familiar programming model the challenge however is that asset",
    "start": "965100",
    "end": "970320"
  },
  {
    "text": "transactions do not work well across system boundaries an operation that",
    "start": "970320",
    "end": "976260"
  },
  {
    "text": "spans Services cannot be acid and must use eventually consistent transactions",
    "start": "976260",
    "end": "982620"
  },
  {
    "text": "which are more complicated as a result you might want to co-locate",
    "start": "982620",
    "end": "987800"
  },
  {
    "text": "subdomains in order to make an operation acid the fourth Dark Matter force is",
    "start": "987800",
    "end": "994199"
  },
  {
    "start": "991000",
    "end": "1035000"
  },
  {
    "text": "minimize runtime coupling an essential characteristic of the microservice",
    "start": "994199",
    "end": "999480"
  },
  {
    "text": "architecture is that services are Loosely coupled one aspect of loose coupling is loose",
    "start": "999480",
    "end": "1007339"
  },
  {
    "text": "runtime coupling tight runtime coupling is when one",
    "start": "1007339",
    "end": "1012380"
  },
  {
    "text": "service affects the availability of another service for example service a cannot respond to",
    "start": "1012380",
    "end": "1020300"
  },
  {
    "text": "a system operation request until service B responds to it",
    "start": "1020300",
    "end": "1026120"
  },
  {
    "text": "as a result you might want to co-locate subdomains in order to reduce the",
    "start": "1026120",
    "end": "1031699"
  },
  {
    "text": "runtime coupling of an operation the fifth Dark Matter force is minimize",
    "start": "1031699",
    "end": "1038418"
  },
  {
    "start": "1035000",
    "end": "1136000"
  },
  {
    "text": "design time coupling the other aspect of loose coupling is loose design time",
    "start": "1038419",
    "end": "1044058"
  },
  {
    "text": "coupling tight design time coupling is when changes to one service regularly",
    "start": "1044059",
    "end": "1050840"
  },
  {
    "text": "requires another service to change in lockstep frequent lock step changes are",
    "start": "1050840",
    "end": "1057140"
  },
  {
    "text": "a serious architectural smell because it impacts productivity",
    "start": "1057140",
    "end": "1062600"
  },
  {
    "text": "especially when those services are owned by different teams",
    "start": "1062600",
    "end": "1068660"
  },
  {
    "text": "some degree of coupling is inevitable when one service is a client of another",
    "start": "1068660",
    "end": "1074720"
  },
  {
    "text": "the goal should be to minimize design time coupling by ensuring that each",
    "start": "1074720",
    "end": "1080539"
  },
  {
    "text": "service has a stable API that encapsulates its",
    "start": "1080539",
    "end": "1085820"
  },
  {
    "text": "implementation however you cannot always eliminate design time coupling",
    "start": "1085820",
    "end": "1092059"
  },
  {
    "text": "for example Concepts often evolve to reflect changing requirements especially",
    "start": "1092059",
    "end": "1098059"
  },
  {
    "text": "in a new domain if you put too tightly coupled subdomains in different Services",
    "start": "1098059",
    "end": "1104720"
  },
  {
    "text": "then you will need to make expensive lockstep changes for example imagine",
    "start": "1104720",
    "end": "1110780"
  },
  {
    "text": "that the customer service API regularly changes in ways that break the order",
    "start": "1110780",
    "end": "1116660"
  },
  {
    "text": "service in order to support zero downtime deployments you will need to define a",
    "start": "1116660",
    "end": "1123679"
  },
  {
    "text": "new version of the customer service API and support both the Old and the new",
    "start": "1123679",
    "end": "1129980"
  },
  {
    "text": "versions until the order service and any other clients have been migrated to the",
    "start": "1129980",
    "end": "1135559"
  },
  {
    "text": "new version one option for handling tightly coupled subdomains is to co-locate them in the",
    "start": "1135559",
    "end": "1143179"
  },
  {
    "start": "1136000",
    "end": "1168000"
  },
  {
    "text": "same service this approach avoids the complexities of having to change service",
    "start": "1143179",
    "end": "1148520"
  },
  {
    "text": "apis the other option is to co-locate the two services within the same git Repository",
    "start": "1148520",
    "end": "1156679"
  },
  {
    "text": "this eliminates the complexity of needing to make changes across multiple repositories",
    "start": "1156679",
    "end": "1163220"
  },
  {
    "text": "however you might still have issues with service API management",
    "start": "1163220",
    "end": "1168620"
  },
  {
    "start": "1168000",
    "end": "1236000"
  },
  {
    "text": "as you can see the dark energy and dark matter forces are in conflict",
    "start": "1168620",
    "end": "1174559"
  },
  {
    "text": "the dark energy forces encourage you to have smaller services",
    "start": "1174559",
    "end": "1180500"
  },
  {
    "text": "the Dark Matter forces encourage you to have large services or in fact a",
    "start": "1180500",
    "end": "1185660"
  },
  {
    "text": "monolith when you are designing a microservice architecture you must carefully balance",
    "start": "1185660",
    "end": "1192140"
  },
  {
    "text": "these conflicting forces some operations as a result will have an",
    "start": "1192140",
    "end": "1197960"
  },
  {
    "text": "optimal design where whereas others might have a less optimal design",
    "start": "1197960",
    "end": "1204080"
  },
  {
    "text": "it's important to design your architecture starting with the most critical operations first so that they",
    "start": "1204080",
    "end": "1212419"
  },
  {
    "text": "can have the optimal design the less important operations might",
    "start": "1212419",
    "end": "1217520"
  },
  {
    "text": "perhaps have lower availability or higher latency you must make these trade-offs now that",
    "start": "1217520",
    "end": "1225320"
  },
  {
    "text": "you've had a tour of the dark energy and dark matter forces I want to look at how",
    "start": "1225320",
    "end": "1230720"
  },
  {
    "text": "well the monolithic architecture and the microservice architecture resolve these forces the monolithic architecture is an",
    "start": "1230720",
    "end": "1239059"
  },
  {
    "start": "1236000",
    "end": "1342000"
  },
  {
    "text": "architectural style that structures the application as a single deployment unit",
    "start": "1239059",
    "end": "1245120"
  },
  {
    "text": "a Java application would for example consists of a war file or an executable",
    "start": "1245120",
    "end": "1250760"
  },
  {
    "text": "jar there are two main ways to structure a monolith the first is a traditional",
    "start": "1250760",
    "end": "1256760"
  },
  {
    "text": "monolith which has a classic three-layer architecture while the structure is simple and",
    "start": "1256760",
    "end": "1263660"
  },
  {
    "text": "familiar it has several drawbacks for example ownership is blurred and every",
    "start": "1263660",
    "end": "1269179"
  },
  {
    "text": "team works on every layer as a result they need to coordinate their efforts",
    "start": "1269179",
    "end": "1275299"
  },
  {
    "text": "the second option is a modular monolith which is shown on this slide each team",
    "start": "1275299",
    "end": "1281179"
  },
  {
    "text": "owns a module which is a vertical slice of business functionality presentation",
    "start": "1281179",
    "end": "1287240"
  },
  {
    "text": "logic persistence logic and domain logic A major benefit of the modular monolith",
    "start": "1287240",
    "end": "1294500"
  },
  {
    "text": "is the code ownership is well defined and teams are more autonomous",
    "start": "1294500",
    "end": "1301340"
  },
  {
    "text": "the microservice architecture is an architectural style that structures the",
    "start": "1301340",
    "end": "1307039"
  },
  {
    "text": "application as a set of loosely coupled independently Deployable components or",
    "start": "1307039",
    "end": "1313880"
  },
  {
    "text": "Services each service in a Java application would be a war file or an",
    "start": "1313880",
    "end": "1319520"
  },
  {
    "text": "executable jar since a service is independently Deployable it typically",
    "start": "1319520",
    "end": "1324860"
  },
  {
    "text": "resides in its own git repository and has its own deployment pipeline a",
    "start": "1324860",
    "end": "1330679"
  },
  {
    "text": "service is usually owned by a small team in a microservice architecture an",
    "start": "1330679",
    "end": "1337159"
  },
  {
    "text": "operation is implemented by one or more collaborating services",
    "start": "1337159",
    "end": "1342640"
  },
  {
    "start": "1342000",
    "end": "1365000"
  },
  {
    "text": "operations that are local to a single service are the easiest to implement",
    "start": "1342640",
    "end": "1348200"
  },
  {
    "text": "however it's common for operations to span multiple Services as a result they",
    "start": "1348200",
    "end": "1354440"
  },
  {
    "text": "must be implemented by one of the microservice architecture collaboration patterns Saga API composition or cqrs",
    "start": "1354440",
    "end": "1365840"
  },
  {
    "text": "let's look at how these architectural Styles resolve the dark energy and dark",
    "start": "1365840",
    "end": "1370940"
  },
  {
    "text": "matter forces starting with the monolithic architecture because the monolithic architecture",
    "start": "1370940",
    "end": "1377600"
  },
  {
    "start": "1375000",
    "end": "1566000"
  },
  {
    "text": "consists of a single component it resolves the Dark Matter attractive",
    "start": "1377600",
    "end": "1383360"
  },
  {
    "text": "forces but whether it resolves the first three dark energy forces depends on the",
    "start": "1383360",
    "end": "1390260"
  },
  {
    "text": "size of the application and the number of teams that are building the application",
    "start": "1390260",
    "end": "1396320"
  },
  {
    "text": "that's because as the monolith grows it becomes more complex and it takes longer",
    "start": "1396320",
    "end": "1402740"
  },
  {
    "text": "to build and test even the application startup time can impact the performance of the deployment",
    "start": "1402740",
    "end": "1410179"
  },
  {
    "text": "pipeline also as the number of teams increases their autonomy declines since",
    "start": "1410179",
    "end": "1417559"
  },
  {
    "text": "they're all contributing to the same code base for example even something as simple as",
    "start": "1417559",
    "end": "1424400"
  },
  {
    "text": "get pushing changes to the code repository can be challenging due to",
    "start": "1424400",
    "end": "1429740"
  },
  {
    "text": "contention some of these issues can be mitigated through design techniques such as",
    "start": "1429740",
    "end": "1436600"
  },
  {
    "text": "modularization and by using sophisticated build Technologies such as",
    "start": "1436600",
    "end": "1442159"
  },
  {
    "text": "automated merge queues and clustered builds however ultimately it's likely",
    "start": "1442159",
    "end": "1449000"
  },
  {
    "text": "that the monolithic architecture will become an obstacle to Rapid frequent and",
    "start": "1449000",
    "end": "1455059"
  },
  {
    "text": "reliable delivery furthermore the monolithic architecture",
    "start": "1455059",
    "end": "1460700"
  },
  {
    "text": "cannot resolve the last two dark energy forces it can only use a single",
    "start": "1460700",
    "end": "1466580"
  },
  {
    "text": "technology stack as a result you need to upgrade the entire code base in one go",
    "start": "1466580",
    "end": "1472880"
  },
  {
    "text": "which can be a significant undertaking also since there's a single component",
    "start": "1472880",
    "end": "1479360"
  },
  {
    "text": "there's no possibility of segregating subdomains by their characteristics the",
    "start": "1479360",
    "end": "1486020"
  },
  {
    "text": "monolith is a mixture of subdomains with different scalability requirements",
    "start": "1486020",
    "end": "1491780"
  },
  {
    "text": "different regulatory requirements and so on and so forth in contrast with the microservice",
    "start": "1491780",
    "end": "1498799"
  },
  {
    "text": "architecture pattern the benefits and drawbacks are in some ways flipped",
    "start": "1498799",
    "end": "1504620"
  },
  {
    "text": "the pattern can resolve the dark energy repulsive forces but potentially cannot",
    "start": "1504620",
    "end": "1511280"
  },
  {
    "text": "resolve the Dark Matter attractive forces you need to carefully design the",
    "start": "1511280",
    "end": "1517880"
  },
  {
    "text": "microservice architecture the grouping of subdomains to form services and the",
    "start": "1517880",
    "end": "1524299"
  },
  {
    "text": "design of operations that span services in order to maximize the benefits and",
    "start": "1524299",
    "end": "1531020"
  },
  {
    "text": "minimize the drawbacks let's look at an example of the architecture definition",
    "start": "1531020",
    "end": "1536480"
  },
  {
    "text": "process in the architecture definition process that I described earlier you",
    "start": "1536480",
    "end": "1542659"
  },
  {
    "text": "first rank the system operations in descending importance you then work your way down the list",
    "start": "1542659",
    "end": "1549740"
  },
  {
    "text": "grouping the subdomains into services and designing the operations that span",
    "start": "1549740",
    "end": "1556039"
  },
  {
    "text": "services so let's imagine that you've already designed the create order",
    "start": "1556039",
    "end": "1561260"
  },
  {
    "text": "operation and you end up with an architecture looking like this the next",
    "start": "1561260",
    "end": "1566900"
  },
  {
    "start": "1566000",
    "end": "1621000"
  },
  {
    "text": "most important operation on the list is accept ticket which is invoked when the",
    "start": "1566900",
    "end": "1573200"
  },
  {
    "text": "restaurant accepts the ticket it changes the state of the ticket to",
    "start": "1573200",
    "end": "1578720"
  },
  {
    "text": "accept it and schedules the delivery to pick up the order at the designated time",
    "start": "1578720",
    "end": "1585020"
  },
  {
    "text": "the first step of Designing this operation is to group its subdomains to",
    "start": "1585020",
    "end": "1590900"
  },
  {
    "text": "form services however the kitchen management subdomain is already part of an existing service",
    "start": "1590900",
    "end": "1599179"
  },
  {
    "text": "but you still need to determine where to place the delivery management subdomain",
    "start": "1599179",
    "end": "1605480"
  },
  {
    "text": "there are five options you could assign delivery management to one of the four",
    "start": "1605480",
    "end": "1610820"
  },
  {
    "text": "existing services or you could create a new service",
    "start": "1610820",
    "end": "1616279"
  },
  {
    "text": "each option resolves the dark energy and dark matter forces differently",
    "start": "1616279",
    "end": "1622279"
  },
  {
    "start": "1621000",
    "end": "1686000"
  },
  {
    "text": "for example let's imagine that you co-located delivery management with kitchen management this operation makes",
    "start": "1622279",
    "end": "1630200"
  },
  {
    "text": "accept ticket local to the kitchen service which resolves the Dark Matter",
    "start": "1630200",
    "end": "1635419"
  },
  {
    "text": "forces however it fails to resolve the dark energy forces in particular delivery",
    "start": "1635419",
    "end": "1642860"
  },
  {
    "text": "management is a complex subdomain that has a dedicated team putting that team",
    "start": "1642860",
    "end": "1649039"
  },
  {
    "text": "sub domain in the kitchen service reduces their autonomy",
    "start": "1649039",
    "end": "1654799"
  },
  {
    "text": "another option is to put delivery Management in its own service",
    "start": "1654799",
    "end": "1660260"
  },
  {
    "text": "this option resolves the dark energy forces however it results in the accept",
    "start": "1660260",
    "end": "1666679"
  },
  {
    "text": "ticket operation being distributed as a result there is a risk that this",
    "start": "1666679",
    "end": "1673820"
  },
  {
    "text": "design option might not resolve the Dark Matter forces in order to determine whether this",
    "start": "1673820",
    "end": "1680960"
  },
  {
    "text": "option is feasible we need to design the accept ticket operation",
    "start": "1680960",
    "end": "1686600"
  },
  {
    "text": "when implementing a distributed command there are two patterns to choose from the first pattern is a classic",
    "start": "1686600",
    "end": "1694240"
  },
  {
    "text": "distributed transaction also known as two-phase commit this pattern implements",
    "start": "1694240",
    "end": "1700159"
  },
  {
    "text": "that the command is a single acid transaction that spans the participating",
    "start": "1700159",
    "end": "1705500"
  },
  {
    "text": "Services the second pattern is the Saga pattern it implements the command as a",
    "start": "1705500",
    "end": "1711919"
  },
  {
    "text": "sequence of local transactions in each of the participating Services it's",
    "start": "1711919",
    "end": "1717740"
  },
  {
    "text": "eventually consistent these two patterns resolve the dark energy and dark matter forces",
    "start": "1717740",
    "end": "1724340"
  },
  {
    "text": "differently to PC has acid semantics which are simple and familiar",
    "start": "1724340",
    "end": "1732620"
  },
  {
    "text": "but it results in tight runtime coupling a transaction cannot commit unless all",
    "start": "1732620",
    "end": "1739159"
  },
  {
    "text": "of the participants are available it also requires all of the participants to",
    "start": "1739159",
    "end": "1744740"
  },
  {
    "text": "use a technology that supports two-phase commit on the other hand sagas have loose",
    "start": "1744740",
    "end": "1751400"
  },
  {
    "text": "runtime coupling participants can use a mixture of Technologies however sagas are",
    "start": "1751400",
    "end": "1758179"
  },
  {
    "text": "eventually consistent which is a more complex programming model",
    "start": "1758179",
    "end": "1763539"
  },
  {
    "text": "interactions are potentially complex and inefficient the participants are",
    "start": "1763539",
    "end": "1769700"
  },
  {
    "text": "potentially coupled from a design time perspective consequently we need to",
    "start": "1769700",
    "end": "1774980"
  },
  {
    "text": "design The Saga in a way that attempts to resolve the Dark Matter forces",
    "start": "1774980",
    "end": "1780740"
  },
  {
    "start": "1780000",
    "end": "1844000"
  },
  {
    "text": "there are several decisions that you must make when designing a saga you need",
    "start": "1780740",
    "end": "1786200"
  },
  {
    "text": "to define the steps their order and compensating transactions you need to",
    "start": "1786200",
    "end": "1792380"
  },
  {
    "text": "choose a coordination mechanism choreography or orchestration you must",
    "start": "1792380",
    "end": "1798140"
  },
  {
    "text": "also select countermeasures which are design techniques that make sagas more",
    "start": "1798140",
    "end": "1803840"
  },
  {
    "text": "acid these decisions determine how well a given Saga resolves the Dark Matter",
    "start": "1803840",
    "end": "1810020"
  },
  {
    "text": "forces for example sometimes orchestration is a better choice because",
    "start": "1810020",
    "end": "1815480"
  },
  {
    "text": "the interactions are simpler and easier to understand",
    "start": "1815480",
    "end": "1820880"
  },
  {
    "text": "similarly one ordering of steps might be more acid than another",
    "start": "1820880",
    "end": "1827360"
  },
  {
    "text": "of course for a particular grouping of subdomains it might not be possible for",
    "start": "1827360",
    "end": "1832580"
  },
  {
    "text": "a saga to effectively resolve the Dark Matter forces you must either live with the",
    "start": "1832580",
    "end": "1839120"
  },
  {
    "text": "consequences or consider changing the grouping of subdomains",
    "start": "1839120",
    "end": "1845120"
  },
  {
    "text": "the accept order operation can be implemented by a simple choreography",
    "start": "1845120",
    "end": "1850640"
  },
  {
    "text": "based Saga the first step changes the state of the ticket it then publishes a",
    "start": "1850640",
    "end": "1856760"
  },
  {
    "text": "ticket accepted event this event triggers the second step in the delivery",
    "start": "1856760",
    "end": "1861919"
  },
  {
    "text": "service which schedules the delivery what's nice about this design is that it",
    "start": "1861919",
    "end": "1868100"
  },
  {
    "text": "effectively resolves the Dark Matter forces for example it's sufficiently",
    "start": "1868100",
    "end": "1873679"
  },
  {
    "text": "acid despite consisting of multiple transactions so that's my talk in",
    "start": "1873679",
    "end": "1879620"
  },
  {
    "text": "summary the answer to almost any design question is it depends if you're",
    "start": "1879620",
    "end": "1886159"
  },
  {
    "text": "deciding between the monolithic architecture and the microservice architecture or in the middle of",
    "start": "1886159",
    "end": "1893000"
  },
  {
    "text": "Designing a microservice architecture very often the answer depends on the",
    "start": "1893000",
    "end": "1899360"
  },
  {
    "text": "dark energy and dark matter forces so thank you for listening I hope that",
    "start": "1899360",
    "end": "1906860"
  },
  {
    "text": "you found this talk useful",
    "start": "1906860",
    "end": "1910480"
  },
  {
    "text": "thank you very much Chris I appreciate it as always all I I you know this is the second time I've heard this",
    "start": "1913700",
    "end": "1919520"
  },
  {
    "text": "particular talk um and I learned something new every time so thank you for that",
    "start": "1919520",
    "end": "1925100"
  },
  {
    "text": "um so we um you know what I do to talk",
    "start": "1925100",
    "end": "1930440"
  },
  {
    "text": "particularly if it's a pre-recorded there's always something when I'm watching it that that time after that I",
    "start": "1930440",
    "end": "1935539"
  },
  {
    "text": "think I wish I had added this or I didn't cover that anything like that that come to your mind that you wish you",
    "start": "1935539",
    "end": "1940880"
  },
  {
    "text": "had slid into this talk ah well you know I mean it's just funny",
    "start": "1940880",
    "end": "1947720"
  },
  {
    "text": "you know when I actually did the talk live it was it was 20 minutes longer than the recorded one so yeah the answer",
    "start": "1947720",
    "end": "1954980"
  },
  {
    "text": "is yes um but yeah I I don't know I mean I feel",
    "start": "1954980",
    "end": "1960200"
  },
  {
    "text": "like in general I I often after I finished a talk there's always",
    "start": "1960200",
    "end": "1966440"
  },
  {
    "text": "new ideas it's almost like I finally figured out what I'm talking about",
    "start": "1966440",
    "end": "1971960"
  },
  {
    "text": "yeah yeah yeah I hear you um so I have a question for you Chris so",
    "start": "1971960",
    "end": "1977240"
  },
  {
    "start": "1974000",
    "end": "2114000"
  },
  {
    "text": "um a lot of times when I'm talking with people um what customers clients they'll often",
    "start": "1977240",
    "end": "1982460"
  },
  {
    "text": "want have this like um desire for a microservice environment but as I start talking to them there's",
    "start": "1982460",
    "end": "1989539"
  },
  {
    "text": "smells there's signals there there's things that are pulling them towards or away from microservices that may not",
    "start": "1989539",
    "end": "1996799"
  },
  {
    "text": "align with what their goal is how do you talk to them like of top down for example a very top-down directed low",
    "start": "1996799",
    "end": "2003159"
  },
  {
    "text": "autonomy environment how do you start to talk to companies about some of the organizational changes cultural changes",
    "start": "2003159",
    "end": "2010360"
  },
  {
    "text": "that come with microservices versus a monolithic architecture",
    "start": "2010360",
    "end": "2016260"
  },
  {
    "text": "yeah I mean I guess there's just so many different things that can go wrong right",
    "start": "2016899",
    "end": "2022899"
  },
  {
    "text": "yeah totally um I mean like even years ago I just sort of recognized that one of the",
    "start": "2022899",
    "end": "2029500"
  },
  {
    "text": "anti-patterns of microservice adoption was sort of trying to do microservices",
    "start": "2029500",
    "end": "2035740"
  },
  {
    "text": "without changing anything else about your organization",
    "start": "2035740",
    "end": "2041260"
  },
  {
    "text": "um like one extreme example of that was really you still could only release on a",
    "start": "2041260",
    "end": "2047559"
  },
  {
    "text": "Saturday night fourth Saturday night kind of thing right and I called that the red flag law where you know the I",
    "start": "2047559",
    "end": "2055898"
  },
  {
    "text": "wish that name comes from the fact that apparently in some jurisdictions when",
    "start": "2055899",
    "end": "2060940"
  },
  {
    "text": "automobile started coming appearing in the early 19th century someone had a",
    "start": "2060940",
    "end": "2066398"
  },
  {
    "text": "walk in front of them with a red flag so it was like a car slowed down to the pace of a pedestrian that I'm not sure",
    "start": "2066399",
    "end": "2073480"
  },
  {
    "text": "whether in reality the cars could actually go much faster anyway yeah the",
    "start": "2073480",
    "end": "2078700"
  },
  {
    "text": "faster horses in that car insurance yeah um",
    "start": "2078700",
    "end": "2083858"
  },
  {
    "text": "but yeah I mean it's there's a lot of anti patterns and and",
    "start": "2083859",
    "end": "2089560"
  },
  {
    "text": "yeah I think with a lot of technology I mean this you know another example of",
    "start": "2089560",
    "end": "2095020"
  },
  {
    "text": "this is say adopting Cloud right I think this comes up too where",
    "start": "2095020",
    "end": "2100119"
  },
  {
    "text": "people don't change their organizational their processes they just use when they",
    "start": "2100119",
    "end": "2106060"
  },
  {
    "text": "adopt cloud and then they get unhappy about Cloud because it's not fulfilling the promise",
    "start": "2106060",
    "end": "2111160"
  },
  {
    "text": "yeah see a lot of analogies there so um there's a question here from Frank",
    "start": "2111160",
    "end": "2117400"
  },
  {
    "start": "2114000",
    "end": "2220000"
  },
  {
    "text": "uh Frank there will be another talk that literally will the very next uh you know Thomas will be talking about",
    "start": "2117400",
    "end": "2123700"
  },
  {
    "text": "um choreography versus orchestration however Chris um uh Eugene oops Frank has the question",
    "start": "2123700",
    "end": "2130000"
  },
  {
    "text": "here about orchestration versus choreography um how do you think about what how do",
    "start": "2130000",
    "end": "2137500"
  },
  {
    "text": "you in your mind decide when you should use choreography versus orchestration when it comes to services",
    "start": "2137500",
    "end": "2144960"
  },
  {
    "text": "yeah I mean it interestingly I mean it's it I mean the the the trade-offs in in",
    "start": "2146859",
    "end": "2153640"
  },
  {
    "text": "many ways are sort of specific to the situation um I think I mean I even touched on this",
    "start": "2153640",
    "end": "2159280"
  },
  {
    "text": "in the talk where um orchestration and choreography can resolve those the dark energy Dark",
    "start": "2159280",
    "end": "2166540"
  },
  {
    "text": "Matter forces in different ways um one example of that is with say",
    "start": "2166540",
    "end": "2174780"
  },
  {
    "text": "choreography you can have Services listening to one another's events so there's there's sort of Cycles in the",
    "start": "2174780",
    "end": "2182020"
  },
  {
    "text": "design um in in terms of the dependency graph right",
    "start": "2182020",
    "end": "2187650"
  },
  {
    "text": "[Music] um whereas with um orchestration it's like the",
    "start": "2187650",
    "end": "2193420"
  },
  {
    "text": "orchestrator is invoking the apis of each one of the participants so there's",
    "start": "2193420",
    "end": "2198579"
  },
  {
    "text": "just um sort of diff the the dependencies are in a different direction",
    "start": "2198579",
    "end": "2204460"
  },
  {
    "text": "yeah um so it's in many ways you just have to apply the dark energy Dark Matter forces",
    "start": "2204460",
    "end": "2211420"
  },
  {
    "text": "to a given situation and just analyze the the and figure out what the",
    "start": "2211420",
    "end": "2218140"
  },
  {
    "text": "consequences are yeah a mutual friend of ours Randy shop talks about",
    "start": "2218140",
    "end": "2224380"
  },
  {
    "text": "um what got you here won't get you there and he's basically talking about um technology and how it evolves through",
    "start": "2224380",
    "end": "2230859"
  },
  {
    "text": "an organization's lifetime like early startup versus a more um Enterprise that may evolve their",
    "start": "2230859",
    "end": "2236560"
  },
  {
    "text": "architecture are there patterns that that you um might talk about or identify that",
    "start": "2236560",
    "end": "2243520"
  },
  {
    "text": "companies see in that stage is going from startup to scale up to to a larger",
    "start": "2243520",
    "end": "2249400"
  },
  {
    "text": "company when it comes to microservices and models",
    "start": "2249400",
    "end": "2254400"
  },
  {
    "text": "well I mean I think the the the Gen the kind of the key point there is that you",
    "start": "2254820",
    "end": "2262960"
  },
  {
    "text": "know over time the applications non-functional requirements evolve right",
    "start": "2262960",
    "end": "2269079"
  },
  {
    "text": "sure and the whole point of Architecture is the well well you know the the job of",
    "start": "2269079",
    "end": "2277060"
  },
  {
    "text": "the architect is to come up with an architect architecture that satisfies",
    "start": "2277060",
    "end": "2282700"
  },
  {
    "text": "those non-functional requirements and so I think one of the key points to make is",
    "start": "2282700",
    "end": "2288040"
  },
  {
    "text": "that an organization should have Architects doing actual architecture on",
    "start": "2288040",
    "end": "2293800"
  },
  {
    "text": "an ongoing basis and and make sure that their architecture is",
    "start": "2293800",
    "end": "2300359"
  },
  {
    "text": "well evolving as necessary to meet those non-functional requirements",
    "start": "2300359",
    "end": "2307599"
  },
  {
    "text": "yeah yep um so David I think sort of a problem",
    "start": "2307599",
    "end": "2312640"
  },
  {
    "text": "most organizations get do kind of run into is they they neglect their",
    "start": "2312640",
    "end": "2319540"
  },
  {
    "text": "architecture yeah yeah I think in um in the live version",
    "start": "2319540",
    "end": "2325599"
  },
  {
    "start": "2322000",
    "end": "2399000"
  },
  {
    "text": "that you did you talked a bit about team structure and how it applied to architecture I think David's got a",
    "start": "2325599",
    "end": "2331780"
  },
  {
    "text": "similar question so keeping in mind Conway's law like be ship your org chart",
    "start": "2331780",
    "end": "2336820"
  },
  {
    "text": "um what is how does team size company size affect decisions towards monoliths",
    "start": "2336820",
    "end": "2343000"
  },
  {
    "text": "versus microservices or does it",
    "start": "2343000",
    "end": "2346800"
  },
  {
    "text": "um you know certainly one of the or one of the big motivations for using",
    "start": "2349180",
    "end": "2355720"
  },
  {
    "text": "microservices is to enable teams to be autonomous right their General model is",
    "start": "2355720",
    "end": "2362079"
  },
  {
    "text": "each team could have their own service and then they're free to do whatever they want",
    "start": "2362079",
    "end": "2367720"
  },
  {
    "text": "now if you only have one team right you're a small company with just you",
    "start": "2367720",
    "end": "2373480"
  },
  {
    "text": "know six eight nine ten developers right you don't have an issue with autonomy",
    "start": "2373480",
    "end": "2380380"
  },
  {
    "text": "right right um and you know and and so you most likely",
    "start": "2380380",
    "end": "2388240"
  },
  {
    "text": "don't need to use the the microservice architecture only from from from A",
    "start": "2388240",
    "end": "2395440"
  },
  {
    "text": "team's perspective from a team perspective right yeah what problem are you what problem",
    "start": "2395440",
    "end": "2401560"
  },
  {
    "start": "2399000",
    "end": "2473000"
  },
  {
    "text": "are you solving right if teams are stepping on each other in velocity that's a time you may want to solve it",
    "start": "2401560",
    "end": "2407619"
  },
  {
    "text": "with microservices there's other reasons you might use it but not necessarily the team or structure one yeah I I actually",
    "start": "2407619",
    "end": "2413980"
  },
  {
    "text": "tweeted about this um last week um kind of like revisiting the the kind",
    "start": "2413980",
    "end": "2421720"
  },
  {
    "text": "of monolith first um sort of wreck you know guideline which I think is is in general a good",
    "start": "2421720",
    "end": "2428320"
  },
  {
    "text": "one but if you then look at some of the dark energy forces there are reasons why",
    "start": "2428320",
    "end": "2435339"
  },
  {
    "text": "you might want to use microservices right um from the beginning and one example of",
    "start": "2435339",
    "end": "2442000"
  },
  {
    "text": "one very tangible example of that is well you need to use multiple Technologies",
    "start": "2442000",
    "end": "2447599"
  },
  {
    "text": "and so we at least then you'd need a service at least one service for each of",
    "start": "2447599",
    "end": "2455140"
  },
  {
    "text": "the technology Stacks that you're using yeah yeah and then if you look at some of the",
    "start": "2455140",
    "end": "2461980"
  },
  {
    "text": "other dark energy forces there are other arguments to be made possibly for for",
    "start": "2461980",
    "end": "2469420"
  },
  {
    "text": "using microservices from the beginning you know",
    "start": "2469420",
    "end": "2475000"
  },
  {
    "start": "2473000",
    "end": "2549000"
  },
  {
    "text": "um cognitive load is a topic that comes up quite a bit in team topologies it comes up with Simon wardley and worldly",
    "start": "2475000",
    "end": "2481720"
  },
  {
    "text": "maps and it comes up all over the place when we talk about microservices but when I think about it I'm trying to",
    "start": "2481720",
    "end": "2486760"
  },
  {
    "text": "phrase a question around dark energy and dark matter and cognitive load my first inclination was to ask",
    "start": "2486760",
    "end": "2492280"
  },
  {
    "text": "cognitive load a force for Dark Energy dark matter I didn't really have an answer",
    "start": "2492280",
    "end": "2497800"
  },
  {
    "text": "think about cognitive load when it comes to microservices or to a monolith",
    "start": "2497800",
    "end": "2505500"
  },
  {
    "text": "yeah um well you know this this I guess I would the",
    "start": "2505500",
    "end": "2511540"
  },
  {
    "text": "you know that there's the Dark Energy Force which is simple components and then there's the Dark Matter for simple",
    "start": "2511540",
    "end": "2518339"
  },
  {
    "text": "interactions and I I I I I'd sort of say that cognitive load more or less fits",
    "start": "2518339",
    "end": "2526060"
  },
  {
    "text": "into those those all right yeah yeah",
    "start": "2526060",
    "end": "2531660"
  },
  {
    "text": "because yeah I mean if you break your system up into services and the the",
    "start": "2532119",
    "end": "2537160"
  },
  {
    "text": "world of a developer becomes just their service then you you in theory you've",
    "start": "2537160",
    "end": "2543940"
  },
  {
    "text": "reduced that cognitive load considerably right what is what are your thoughts on",
    "start": "2543940",
    "end": "2551320"
  },
  {
    "start": "2549000",
    "end": "2589000"
  },
  {
    "text": "platform teams today and uh cognitive",
    "start": "2551320",
    "end": "2555599"
  },
  {
    "text": "oh yeah I mean I I guess I think having a platform team",
    "start": "2558220",
    "end": "2564820"
  },
  {
    "text": "is a good idea in the sense that you you are say your stream aligned",
    "start": "2564820",
    "end": "2571960"
  },
  {
    "text": "teams right you're implementing actual business logic can just use the platform",
    "start": "2571960",
    "end": "2578980"
  },
  {
    "text": "to get certain things done that that just seems like a good idea",
    "start": "2578980",
    "end": "2585099"
  },
  {
    "text": "self-service yeah yeah absolutely yeah",
    "start": "2585099",
    "end": "2589260"
  },
  {
    "start": "2589000",
    "end": "2639000"
  },
  {
    "text": "yeah um Ahmed has a question about front end so um and specifically what um what are",
    "start": "2590859",
    "end": "2596380"
  },
  {
    "text": "your thoughts with some of um kind of the Dark Energy Dark Matter forces when you apply it to the front end so micro",
    "start": "2596380",
    "end": "2603760"
  },
  {
    "text": "front ends any thoughts on that",
    "start": "2603760",
    "end": "2607740"
  },
  {
    "text": "yeah it's an interesting one I haven't really thought about that in any",
    "start": "2609460",
    "end": "2615160"
  },
  {
    "text": "sort of serious way um I'm gonna remember to have a look at",
    "start": "2615160",
    "end": "2620560"
  },
  {
    "text": "that I mean it's possible that some of some of the can same considerations",
    "start": "2620560",
    "end": "2625720"
  },
  {
    "text": "apply though I must admit that sort of my focus is more on the back end rather",
    "start": "2625720",
    "end": "2631119"
  },
  {
    "text": "than the front end yeah yeah similar Concepts I would think though uh as you",
    "start": "2631119",
    "end": "2637240"
  },
  {
    "text": "break it down um and there's another question here around graphql and I think this goes",
    "start": "2637240",
    "end": "2643540"
  },
  {
    "start": "2639000",
    "end": "2734000"
  },
  {
    "text": "back to the aggregation of apis um that you talked a bit about in particular there's it's around Federated",
    "start": "2643540",
    "end": "2650200"
  },
  {
    "text": "graphql do you have any thoughts on uh Federated graphql being used to kind of",
    "start": "2650200",
    "end": "2656260"
  },
  {
    "text": "automate API composition well",
    "start": "2656260",
    "end": "2663160"
  },
  {
    "text": "yeah I mean I I mean I I think that like",
    "start": "2663160",
    "end": "2668319"
  },
  {
    "text": "graphql is a good API Gateway technology",
    "start": "2668319",
    "end": "2673720"
  },
  {
    "text": "um because in a sense it's just API compositions sort of on steroids right",
    "start": "2673720",
    "end": "2679720"
  },
  {
    "text": "flexible right yeah client driven",
    "start": "2679720",
    "end": "2685000"
  },
  {
    "text": "um so that that's quite good I mean I guess Federated graphql is some maybe",
    "start": "2685000",
    "end": "2691480"
  },
  {
    "text": "something a little different I think that's implying that the services themselves actually have a graphql API",
    "start": "2691480",
    "end": "2701200"
  },
  {
    "text": "um and it's like",
    "start": "2701200",
    "end": "2706839"
  },
  {
    "text": "yeah I mean maybe there are situations where a service there's value in this in",
    "start": "2706839",
    "end": "2712599"
  },
  {
    "text": "a service actually having a graphql API",
    "start": "2712599",
    "end": "2718000"
  },
  {
    "text": "um but it's I I don't think that should be the default",
    "start": "2718000",
    "end": "2724359"
  },
  {
    "text": "right right um I mean at least that's how how I'm interpreting Federated graphql in this",
    "start": "2724359",
    "end": "2731140"
  },
  {
    "text": "context yeah okay all right so just scrolling through here see if I've hit all the",
    "start": "2731140",
    "end": "2736660"
  },
  {
    "start": "2734000",
    "end": "2789000"
  },
  {
    "text": "questions we're coming up we've got about three minutes left if you have any final questions please pop them in",
    "start": "2736660",
    "end": "2744579"
  },
  {
    "text": "um all right one of the things that you talked about when uh early in the presentation you talked about start with",
    "start": "2744579",
    "end": "2750760"
  },
  {
    "text": "the most critical operations first um how do you balance getting quick wins",
    "start": "2750760",
    "end": "2757180"
  },
  {
    "text": "versus starting with the most critical operations first is it always start with the most critical is that go for the",
    "start": "2757180",
    "end": "2763359"
  },
  {
    "text": "value first is that is that your mindset well this is in the context of the",
    "start": "2763359",
    "end": "2770560"
  },
  {
    "text": "design process for design I gotcha Okay so the the sort of on paper activity",
    "start": "2770560",
    "end": "2779200"
  },
  {
    "text": "that gotcha should it which actually itself should not be a massive lengthy",
    "start": "2779200",
    "end": "2785020"
  },
  {
    "text": "process right right right right I got you I got you of course that makes sense that makes sense",
    "start": "2785020",
    "end": "2790180"
  },
  {
    "start": "2789000",
    "end": "2904000"
  },
  {
    "text": "all right so Chris we are about at time what um any final thoughts or how would",
    "start": "2790180",
    "end": "2796300"
  },
  {
    "text": "you like to leave the audience on as they're going through these exercises what would you like to leave them as",
    "start": "2796300",
    "end": "2802420"
  },
  {
    "text": "your final thoughts well it's a good one I mean you know I I like",
    "start": "2802420",
    "end": "2809380"
  },
  {
    "text": "on the final slide right um and I even tweeted this just the other day it's like I think you know if",
    "start": "2809380",
    "end": "2816460"
  },
  {
    "text": "you're an architect or or even just a developer right you anyone who actually",
    "start": "2816460",
    "end": "2821680"
  },
  {
    "text": "has to make a decision the first thing to know is that it",
    "start": "2821680",
    "end": "2826780"
  },
  {
    "text": "depends usually the answer to it depends right and then the second thing you need",
    "start": "2826780",
    "end": "2832240"
  },
  {
    "text": "to know is that what are the criteria that you should use to evaluate the the",
    "start": "2832240",
    "end": "2838060"
  },
  {
    "text": "differing options you know that's sort of like the two",
    "start": "2838060",
    "end": "2843460"
  },
  {
    "text": "first two steps towards Enlightenment as a software architect right",
    "start": "2843460",
    "end": "2850480"
  },
  {
    "text": "um so and and and you know so that's one",
    "start": "2850480",
    "end": "2855760"
  },
  {
    "text": "just general thought and then the case of sort of monolith microservices right it really is it I think the dark energy",
    "start": "2855760",
    "end": "2862839"
  },
  {
    "text": "Dark Matter forces are you know what it depends on right those are the factors",
    "start": "2862839",
    "end": "2869140"
  },
  {
    "text": "to consider primarily um and then you know I think",
    "start": "2869140",
    "end": "2874480"
  },
  {
    "text": "yeah this has been on my mind a lot just based on recent conversations is don't",
    "start": "2874480",
    "end": "2880119"
  },
  {
    "text": "you know don't automatically assume that you need a micro service to accomplish",
    "start": "2880119",
    "end": "2886240"
  },
  {
    "text": "something sometimes just a jar file or quite often a jar file is all you",
    "start": "2886240",
    "end": "2892300"
  },
  {
    "text": "need that's right yep",
    "start": "2892300",
    "end": "2896760"
  },
  {
    "text": "say again I missed the last part oh I'm just yeah just the library right just the library",
    "start": "2898180",
    "end": "2904240"
  },
  {
    "start": "2904000",
    "end": "2942000"
  },
  {
    "text": "yep all right sir thank you so much as always I appreciate the conversation",
    "start": "2904240",
    "end": "2909760"
  },
  {
    "text": "um once again if you are interested in that composition versus um choreography conversation Ian Thomas",
    "start": "2909760",
    "end": "2916480"
  },
  {
    "text": "will have a whole talk coming up here and on the next talk which I think is 10 after",
    "start": "2916480",
    "end": "2921579"
  },
  {
    "text": "um check the schedule to be sure as always Chris thank you so much for being a part of uh plus yeah thanks for having",
    "start": "2921579",
    "end": "2927880"
  },
  {
    "text": "me all right have a good day bye thank you",
    "start": "2927880",
    "end": "2934260"
  },
  {
    "text": "foreign [Music]",
    "start": "2934900",
    "end": "2940880"
  }
]