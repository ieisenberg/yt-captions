[
  {
    "text": "webassembly neither web but Nora assembly but still revolutionary and I'm gonna talk about that today of what I",
    "start": "3970",
    "end": "10090"
  },
  {
    "text": "mean by that so I'm going to kind of introduce web assembly to you if you're not familiar with it and kind of you",
    "start": "10090",
    "end": "16540"
  },
  {
    "text": "know explain the different aspects of its the pros and cons give you a little bit of history talk about two use cases",
    "start": "16540",
    "end": "21699"
  },
  {
    "text": "things like that but then also look at the future somewhat because I think that's to me the most exciting part that",
    "start": "21699",
    "end": "27010"
  },
  {
    "text": "this is actually a revolution and it's very early in this revolution right you've probably heard some buzz but",
    "start": "27010",
    "end": "32980"
  },
  {
    "text": "maybe you haven't been using this in your work or you haven't you know hey maybe you don't even know anyone who's actually using it yet but I I'm just so",
    "start": "32980",
    "end": "40030"
  },
  {
    "text": "so excited to talk about this and to to try and keep Kona is such a diverse crowd of different types of people and",
    "start": "40030",
    "end": "46480"
  },
  {
    "text": "so to try and get a better understanding kind of choose-your-own-adventure and tailor the talk to different I want to kind of get a feel for my audience today",
    "start": "46480",
    "end": "53020"
  },
  {
    "text": "so if you could just raise your hand if this applies to you do you write java",
    "start": "53020",
    "end": "58090"
  },
  {
    "text": "full-time okay do you write C++ or C",
    "start": "58090",
    "end": "63120"
  },
  {
    "text": "full-time okay great have you ever do",
    "start": "63120",
    "end": "68800"
  },
  {
    "text": "you write JavaScript full-time I guess it would be another question okay good a lot of people over there okay do you",
    "start": "68800",
    "end": "74140"
  },
  {
    "text": "write all of those half x parts in the middle like you're just all over the place lots of different language is great okay",
    "start": "74140",
    "end": "80530"
  },
  {
    "text": "yeah a lot of people like that and I'm that way too so I love languages I love learning new programming",
    "start": "80530",
    "end": "86440"
  },
  {
    "text": "languages which is funny because I'm really terrible at speaking languages but I love programming languages and Who",
    "start": "86440",
    "end": "91930"
  },
  {
    "text": "am I I'm Jay Phelps and I used to work at Netflix but back in March I started a company with my friend Tracy called this",
    "start": "91930",
    "end": "97900"
  },
  {
    "text": "dot and we do a whole bunch of different things and which I'll talk about here in a second if you're interested in any of",
    "start": "97900",
    "end": "103660"
  },
  {
    "text": "this stuff and you want to talk to me or follow me or anything like that I'm on twitter at underscore J Phelps jayp86 I",
    "start": "103660",
    "end": "118180"
  },
  {
    "text": "also on the web assembly community group which is the group that does the specification process and new proposals",
    "start": "118180",
    "end": "125950"
  },
  {
    "text": "and stuff like that so as far as this thought the company I founded we do a whole lot of things we're still trying",
    "start": "125950",
    "end": "131170"
  },
  {
    "text": "to figure out exactly what we want to do but right now we're doing a lot of support contracts developer relations staff augmentation",
    "start": "131170",
    "end": "137349"
  },
  {
    "text": "mentorship all sorts of things across the get the gamut from Java JavaScript web assembly react angular all sorts of",
    "start": "137349",
    "end": "144400"
  },
  {
    "text": "different stuff so if anything that's interesting to you you're welcome to reach out to me so let's just dive right in the question the ultimate question",
    "start": "144400",
    "end": "151420"
  },
  {
    "text": "what is web assembly well it's also known as wasum or wasm depending on how",
    "start": "151420",
    "end": "158109"
  },
  {
    "text": "you want to pronounce it where you live I pronounced it wasn't personally and the quick spiel is that it's an",
    "start": "158109",
    "end": "163239"
  },
  {
    "text": "efficient and safe low-level bytecode for the web and that sounds great but we",
    "start": "163239",
    "end": "169480"
  },
  {
    "text": "kind of need to unpack that really what do I mean by efficient well I mean that it's good if the goal of it is to be",
    "start": "169480",
    "end": "175150"
  },
  {
    "text": "fast to load and fast execute so fast to load meaning fast to send over the",
    "start": "175150",
    "end": "180340"
  },
  {
    "text": "Internet because the primary purpose will of web assembly is for the browser but we'll talk about that a little bit",
    "start": "180340",
    "end": "185500"
  },
  {
    "text": "later so fast to load over the Internet so small small binary sizes are critical compact format is critical fast to load",
    "start": "185500",
    "end": "192819"
  },
  {
    "text": "meaning faster parse and then fast to execute meaning fast to actually run once it's compiled so it's gonna be just",
    "start": "192819",
    "end": "198489"
  },
  {
    "text": "in time compiled and part of a critical component to web assembly something",
    "start": "198489",
    "end": "203500"
  },
  {
    "text": "called streaming compilation and this is pretty novel for a lot of people this is not something a lot of technologies can",
    "start": "203500",
    "end": "208900"
  },
  {
    "text": "do and the idea behind it is that as the bytes are being are coming over the wire into the browser the browser can",
    "start": "208900",
    "end": "215739"
  },
  {
    "text": "actually compile those bytes to native machine code as it's being downloaded it does not have to wait for the entire",
    "start": "215739",
    "end": "221409"
  },
  {
    "text": "file to finish downloading it can parse and compile that web assembly to machine code and that's critical because that",
    "start": "221409",
    "end": "227709"
  },
  {
    "text": "means in a lot of cases your your internet connection is actually the bottleneck now so like if you're on a",
    "start": "227709",
    "end": "234340"
  },
  {
    "text": "mobile device it's your startup time it's going to be directly correlated to how fast your internet speed rather than just your CPU",
    "start": "234340",
    "end": "240849"
  },
  {
    "text": "and I made a little kind of simple visualization to kind of demonstrate what I mean by that so I've got a mobile device here in the middle and we've got",
    "start": "240849",
    "end": "247180"
  },
  {
    "text": "a webassembly file on the left then let's imagine that's on a server somewhere and we're gonna download that file into the mobile browser and so as",
    "start": "247180",
    "end": "255159"
  },
  {
    "text": "it's being downloaded on the right we're gonna have the resulting machine code it's gonna get compiled by the browser to machine code so we'll take a chunk",
    "start": "255159",
    "end": "261880"
  },
  {
    "text": "and that chunk will start to get downloaded to through HTTP and you can see that it's being compiled as the",
    "start": "261880",
    "end": "267279"
  },
  {
    "text": "chunk in before that chunk has finish downloading we've are it's already been compiled to machine code so",
    "start": "267279",
    "end": "273310"
  },
  {
    "text": "by the time the last chunk comes over we're almost done all we needed to do was finish compiling that last chunk and",
    "start": "273310",
    "end": "279160"
  },
  {
    "text": "that's critical for startup times and this is a fairly new feature actually being supported by the browser so it",
    "start": "279160",
    "end": "284770"
  },
  {
    "text": "wasn't supported at first when web assembly was released it's very new in some of the browsers so if this was if",
    "start": "284770",
    "end": "290200"
  },
  {
    "text": "some of the startup times if you've played with web assembly in the past and you're like oh let's start up times weren't as great as promised",
    "start": "290200",
    "end": "295420"
  },
  {
    "text": "they just haven't got there yet with the streaming compilation so I am this one more time for anyone who missed it so",
    "start": "295420",
    "end": "300760"
  },
  {
    "text": "we've got the web assembly on the left and you don't need to be able to read it the idea is just that the chunk is being actually compiled as it's coming along",
    "start": "300760",
    "end": "307660"
  },
  {
    "text": "so so the next part was is was safe I talked about safety and the the web has",
    "start": "307660",
    "end": "314140"
  },
  {
    "text": "enjoyed a really great precedent where we have incrementally over the years",
    "start": "314140",
    "end": "319300"
  },
  {
    "text": "very carefully added new features and new capabilities what the web can do today versus what it can do ten years",
    "start": "319300",
    "end": "324880"
  },
  {
    "text": "ago is dramatically different right but we've been very critical about security",
    "start": "324880",
    "end": "330040"
  },
  {
    "text": "this has actually been kind of a way to step back and start over from scratch",
    "start": "330040",
    "end": "335560"
  },
  {
    "text": "whereas like the operating systems of you know the 80s and 90s gave you complete power and then they kind of",
    "start": "335560",
    "end": "341350"
  },
  {
    "text": "tried to take that power back whether it's giving me the browser's have have given us that opportunity to do it right",
    "start": "341350",
    "end": "347740"
  },
  {
    "text": "from the very beginning be very overly cautious on security and web assemblies going to follow it in that tradition",
    "start": "347740",
    "end": "353350"
  },
  {
    "text": "it's gonna be sandbox too just like javascript is it can't it's not arbitrary code on your computer it can't",
    "start": "353350",
    "end": "359230"
  },
  {
    "text": "call system calls and it can't directly access the file system in fact running in a browser the only way I can interact",
    "start": "359230",
    "end": "366100"
  },
  {
    "text": "with those things is using this same api's javascript does so you you call through that javascript and you can make",
    "start": "366100",
    "end": "372460"
  },
  {
    "text": "those those file API is you can make those HTTP requests but using the same API is that we've standardized and we",
    "start": "372460",
    "end": "378790"
  },
  {
    "text": "know are secure and not just that the sandboxing and stuff there's also the",
    "start": "378790",
    "end": "385720"
  },
  {
    "text": "the the web assembly itself has been designed with security in mind there's you can see on the bottom there there's",
    "start": "385720",
    "end": "392200"
  },
  {
    "text": "there's things like control flow integrity checks stack protections dynamic dispatch these are getting",
    "start": "392200",
    "end": "397240"
  },
  {
    "text": "really low-level details I wanted to point out if you're not familiar with these it's totally okay but if you",
    "start": "397240",
    "end": "402349"
  },
  {
    "text": "I think these are really exciting things about webassembly in webassembly there if you're if you're familiar with how",
    "start": "402349",
    "end": "407750"
  },
  {
    "text": "traditional native programs work compared to that web assembly there is",
    "start": "407750",
    "end": "412819"
  },
  {
    "text": "no arbitrary executable memory block so a whole class of exploits cannot happen",
    "start": "412819",
    "end": "419030"
  },
  {
    "text": "even if you compile your C or C++ to web assembly you can still over run a buffer right because the specification of C",
    "start": "419030",
    "end": "425569"
  },
  {
    "text": "says you need to be able to do that but if you over run that buffer the person can't stuff arbitrary executable code in",
    "start": "425569",
    "end": "432020"
  },
  {
    "text": "there and have it execute the actual instructions themselves were designed to prevent this from happening how that",
    "start": "432020",
    "end": "438800"
  },
  {
    "text": "works now you know that so that doesn't mean that every exploit is impossible",
    "start": "438800",
    "end": "444020"
  },
  {
    "text": "and web is simply right I want to be making very clear that there's a class of ones that are prevented but there's also a whole other ones that that's",
    "start": "444020",
    "end": "449860"
  },
  {
    "text": "almost impossible to prevent because you need to be able to get real work done right code reuse things side-channel",
    "start": "449860",
    "end": "455449"
  },
  {
    "text": "attacks and race conditions are all things that are absolutely still possible with web assembly and as far as",
    "start": "455449",
    "end": "461659"
  },
  {
    "text": "how possible they are it ultimately comes up to the programming language right how easy is it for a attacker to",
    "start": "461659",
    "end": "467810"
  },
  {
    "text": "do these type of things in the programming language that you're writing and if some of this has been a little",
    "start": "467810",
    "end": "473630"
  },
  {
    "text": "confusing there's one thing I need to clarify right it was that low-level byte code right this is this is not something",
    "start": "473630",
    "end": "479479"
  },
  {
    "text": "that you're going to be writing by hand now you could write it by hand just like you could write machine code by hand but",
    "start": "479479",
    "end": "484759"
  },
  {
    "text": "let's be honest you probably won't so web assembly is it's a portable binary instruction set for a virtual machine so",
    "start": "484759",
    "end": "492199"
  },
  {
    "text": "it's it's it's like a CPU instruction set except for this is a virtualized machine the goal being that you don't",
    "start": "492199",
    "end": "498110"
  },
  {
    "text": "have to care what what CPU they actually have and if you're familiar with the JVM with Java bytecode is it's very similar",
    "start": "498110",
    "end": "504409"
  },
  {
    "text": "to the idea behind that so you've got these instructions which are binary this is the hexadecimal representation of",
    "start": "504409",
    "end": "510259"
  },
  {
    "text": "that and then the binary below this is the add instruction adding two 32-bit integers together so this is intended as",
    "start": "510259",
    "end": "517159"
  },
  {
    "text": "a compilation target not something you typically write by hand so instead you take something like this this is C or",
    "start": "517159",
    "end": "522320"
  },
  {
    "text": "C++ and you'd compile that to the web assembly bytecode on the right and",
    "start": "522320",
    "end": "527540"
  },
  {
    "text": "you'll notice that because it's binary it's really not readable right so web",
    "start": "527540",
    "end": "533029"
  },
  {
    "text": "assembly is that efficient and safe low-level bike for the web I want to kind of take a",
    "start": "533029",
    "end": "538940"
  },
  {
    "text": "step back and talk about how did we get here why do we why do we even have this web assembly thing well for for as long",
    "start": "538940",
    "end": "546590"
  },
  {
    "text": "as we've been building web apps real complex apps for the browser for the web there's been two primary goals that",
    "start": "546590",
    "end": "552710"
  },
  {
    "text": "peeps a lot of people have wanted they wanted to be able to use a language other than JavaScript and ideally they",
    "start": "552710",
    "end": "558230"
  },
  {
    "text": "would like to have some improved performance when they do that they want to use their C or C++ they want to take",
    "start": "558230",
    "end": "563510"
  },
  {
    "text": "advantage of some facts that javascript is not a typed language right and you can get some better performance when you",
    "start": "563510",
    "end": "569150"
  },
  {
    "text": "use a typed language typically not always but typically and you know over the years it's funny that we've been",
    "start": "569150",
    "end": "574670"
  },
  {
    "text": "working towards this goal with various aspects and JavaScript kind of been making this less and less of an actually",
    "start": "574670",
    "end": "580370"
  },
  {
    "text": "a big issue right the JavaScript performance of eight years ago compared to today is light-years different",
    "start": "580370",
    "end": "586220"
  },
  {
    "text": "javascript is really really fast now so the this the whole improved performance thing is actually less of an issue than",
    "start": "586220",
    "end": "591530"
  },
  {
    "text": "it was but let's take a look at what we've done to get here right there's Java applets you know when I talk about",
    "start": "591530",
    "end": "598250"
  },
  {
    "text": "web assembly if the first time a lot of people bring this up they say isn't this Java applets all over again and to some",
    "start": "598250",
    "end": "603860"
  },
  {
    "text": "extent III see the there's an absolute corollary right there's an absolute it's it's very similar in in theory in",
    "start": "603860",
    "end": "611150"
  },
  {
    "text": "practice there's there's a lot of you know there's a lot of reasons why Java applets didn't take off didn't do well",
    "start": "611150",
    "end": "616580"
  },
  {
    "text": "the biggest one being it wasn't actually integrated into the environment it was basically this black box where you could",
    "start": "616580",
    "end": "622130"
  },
  {
    "text": "just run some are some you know some Java code and render into some sort of arbitrary you know canvas thing but you",
    "start": "622130",
    "end": "628220"
  },
  {
    "text": "couldn't take advantage of the web's api's and it had its own class of security exploits because it was kind of",
    "start": "628220",
    "end": "633950"
  },
  {
    "text": "a second-class citizen it was not really dedicated and devoted because the browser's it was it was not their",
    "start": "633950",
    "end": "639290"
  },
  {
    "text": "primary focus but the you may answer and you may come back and say that's fine that was Java applets but the JVM is",
    "start": "639290",
    "end": "646339"
  },
  {
    "text": "great why not just use the JVM or the CLR the common language runtime for this",
    "start": "646339",
    "end": "651440"
  },
  {
    "text": "it's the net thing so this one's really complex and I'm not because of time I'm",
    "start": "651440",
    "end": "657140"
  },
  {
    "text": "not gonna get really into Excel I want to bore you but it really it comes down to mostly misaligned goals the the CLR",
    "start": "657140",
    "end": "663440"
  },
  {
    "text": "and the JVM are both actually really really great virtual machines for what they're intended for and what they're intended for was not",
    "start": "663440",
    "end": "670439"
  },
  {
    "text": "what webassembly is intended for and particularly the biggest thing is that uniqueness of the web and we'll talk",
    "start": "670439",
    "end": "677339"
  },
  {
    "text": "about here that that here in a second that there's some unique challenges for the web that the JVM and the CLR we're",
    "start": "677339",
    "end": "683790"
  },
  {
    "text": "not designed for and in a lot of ways is great to be able to just restart and and create some new thing but the big things",
    "start": "683790",
    "end": "690329"
  },
  {
    "text": "are about validation so being able to do single pass validation and compiling like the speed in which we can get that",
    "start": "690329",
    "end": "696360"
  },
  {
    "text": "just-in-time compiled because that's so critical for the web but another thing with that is experiment by Google I",
    "start": "696360",
    "end": "703829"
  },
  {
    "text": "wouldn't say it's experiments actually was a full-fledged effort by Google starting around 2011 and then again in",
    "start": "703829",
    "end": "709680"
  },
  {
    "text": "2015 with some additional work there's something called portable Native Client there was normal Native Client or Knakal",
    "start": "709680",
    "end": "715709"
  },
  {
    "text": "before that and then the portable variant came and the idea behind this was to take LLVM if you're familiar with",
    "start": "715709",
    "end": "721350"
  },
  {
    "text": "that that LLVM ir kind of standardized a subset of that ir and make that a target",
    "start": "721350",
    "end": "727559"
  },
  {
    "text": "for the web so and this was you know adopted by a lot of people within the chrome ecosystem but the other browsers",
    "start": "727559",
    "end": "734459"
  },
  {
    "text": "you know they they saw some of the gaps and saw some of the things that they wanted to do differently and then they",
    "start": "734459",
    "end": "739889"
  },
  {
    "text": "decided not to adopt this standard that they open sourced so it wasn't proprietary but effectively",
    "start": "739889",
    "end": "745170"
  },
  {
    "text": "Google was the only one who ended up actually implementing it next up is Azam's AAS and this is one I think got",
    "start": "745170",
    "end": "751709"
  },
  {
    "text": "the most traction this was spearhead initially by Mozilla and the idea behind",
    "start": "751709",
    "end": "757079"
  },
  {
    "text": "this was take some JavaScript a cure C or C++ and compile that down to a very",
    "start": "757079",
    "end": "763350"
  },
  {
    "text": "strict subset of JavaScript a subset of JavaScript that might look kind of quirky you're kind of like huh it's like",
    "start": "763350",
    "end": "769199"
  },
  {
    "text": "we see that C on the left and this as MJS this is a subset of JavaScript on the right this is perfectly valid JavaScript this will run an ie6 probably",
    "start": "769199",
    "end": "777329"
  },
  {
    "text": "it will at least run a 97 I know that and but there's some quirkiness to it right what is the the bitwise or zero do",
    "start": "777329",
    "end": "783779"
  },
  {
    "text": "you know that's that's kind of taking advantage of the fact that in JavaScript the way the specification works that's saying that that's actually an integer",
    "start": "783779",
    "end": "790379"
  },
  {
    "text": "instead of being a double and so this is basically a type annotation by taking advantage of some of the uniqueness of",
    "start": "790379",
    "end": "797309"
  },
  {
    "text": "JavaScript that it provides and this got is a lot of the way there this actually did show us some very cool performance benefits and there were",
    "start": "797309",
    "end": "803850"
  },
  {
    "text": "a lot of learnings behind as MJS I think really I give as in jazz the biggest credit for spearheading the initiative",
    "start": "803850",
    "end": "809970"
  },
  {
    "text": "of webassembly but there's a couple fundamental problems with it it's still JavaScript so we have some caveats to",
    "start": "809970",
    "end": "816329"
  },
  {
    "text": "the fact that it's still JavaScript right it's still a textual representation so it's not a binary encoding so the file sizes actually were",
    "start": "816329",
    "end": "823370"
  },
  {
    "text": "disappointing to say the least we can get much better if we're able to make it a machine readable binary rather than",
    "start": "823370",
    "end": "829829"
  },
  {
    "text": "something that's intended to be human readable and then the other thing is that we can't add new things easily",
    "start": "829829",
    "end": "834959"
  },
  {
    "text": "because this is supposed to be just JavaScript we can't add new cool things like sim D or multi-threading all these",
    "start": "834959",
    "end": "841560"
  },
  {
    "text": "things without adding them to JavaScript which we did not want to do so this did",
    "start": "841560",
    "end": "847050"
  },
  {
    "text": "get some this was primarily adopted by Mozilla but chrome and edge also did some experimentation in theirs in their",
    "start": "847050",
    "end": "853350"
  },
  {
    "text": "browser engines as well they didn't know they never formally supported s MJS but they supported kind of the pattern in",
    "start": "853350",
    "end": "859259"
  },
  {
    "text": "general and did some optimizations around this but this all this effort basically you know we've got to",
    "start": "859259",
    "end": "865019"
  },
  {
    "text": "primarily apple excuse me we cover it we've got Google and Mozilla having somewhat competing efforts they all",
    "start": "865019",
    "end": "871769"
  },
  {
    "text": "started to align around as MJS and they're like you know what what would it take to do it right what would that look",
    "start": "871769",
    "end": "876779"
  },
  {
    "text": "like and that essentially is what web assembly is is they they they said hey Apple hey Microsoft can't we all just",
    "start": "876779",
    "end": "883829"
  },
  {
    "text": "come together and create something brand new that we know is right and start from",
    "start": "883829",
    "end": "888839"
  },
  {
    "text": "the ground up and and I really want to press this home this is critical and I don't think enough people talk about this web assembly is really",
    "start": "888839",
    "end": "895350"
  },
  {
    "text": "unprecedented all of the browser vendors getting together and creating not just browser vendors major companies right",
    "start": "895350",
    "end": "901769"
  },
  {
    "text": "these major corporations Microsoft Google Apple Mozilla you know even Intel has had a say in this and Samsung all",
    "start": "901769",
    "end": "908519"
  },
  {
    "text": "these companies they've come together and they've all created this this the first standardized bytecode by all of",
    "start": "908519",
    "end": "915660"
  },
  {
    "text": "these major companies and it's free it's not a proprietary program no one has any kind of question there's no question that this is completely open and there's",
    "start": "915660",
    "end": "923579"
  },
  {
    "text": "no it's not in setting comfort by patent laws and all that sorts of things but",
    "start": "923579",
    "end": "928819"
  },
  {
    "text": "moving along and one of the things that I think a natural progression so we've got this webassembly thing sitting next",
    "start": "928819",
    "end": "934319"
  },
  {
    "text": "to JavaScript right and they're able to talk to each other but the question that I get though I say",
    "start": "934319",
    "end": "939419"
  },
  {
    "text": "the most often and all of them is this is gonna kill JavaScript is that the goal is this you know am I just going to",
    "start": "939419",
    "end": "945179"
  },
  {
    "text": "use another language and by the way I made this because I thought it was hilarious like I don't know if you're a",
    "start": "945179",
    "end": "951329"
  },
  {
    "text": "big Daffy and the duck guy but I thought it was hilarious but the answer to that",
    "start": "951329",
    "end": "957269"
  },
  {
    "text": "question is no right I think that if you stop and take a look javascript is a wonderful language it has quirks every",
    "start": "957269",
    "end": "963749"
  },
  {
    "text": "language has quirks when it especially as it starts to show age but javascript is a wonderful language and people love",
    "start": "963749",
    "end": "969869"
  },
  {
    "text": "it not just because it has a monopoly right and so web assemblies not going to",
    "start": "969869",
    "end": "975540"
  },
  {
    "text": "kill JavaScript now I'm not a fortune-teller of course years from now maybe maybe web assembly will enable",
    "start": "975540",
    "end": "982019"
  },
  {
    "text": "another language to kind of compete against JavaScript neck-and-neck right before for popularity but it's really",
    "start": "982019",
    "end": "988259"
  },
  {
    "text": "hard to compete with built-in right you don't need a company I don't need to download a compiler you don't need to you just open up a text editor add a",
    "start": "988259",
    "end": "995189"
  },
  {
    "text": "script tag and start we're learning JavaScript that's so easy and so great and it's really hard to compete against",
    "start": "995189",
    "end": "1000410"
  },
  {
    "text": "that so the next question that's kind of related is then what about compiling our JavaScript to web assembly if we have",
    "start": "1000410",
    "end": "1006589"
  },
  {
    "text": "assembly so great has all these benefits why wouldn't we just do that why do we you know what why not and this one is",
    "start": "1006589",
    "end": "1013279"
  },
  {
    "text": "really complex as well but I'll kind of break it down a little bit javascript is is just an extremely dynamic language now you may not use all",
    "start": "1013279",
    "end": "1019970"
  },
  {
    "text": "of the dynamic features of JavaScript on a given day but if you look at the",
    "start": "1019970",
    "end": "1024980"
  },
  {
    "text": "specification and you say I want a compiled JavaScript any arbitrary JavaScript a to web assembly then that",
    "start": "1024980",
    "end": "1030589"
  },
  {
    "text": "means all of those dynamic features even the ones you may not use in case in point I wanted to point out one thing",
    "start": "1030589",
    "end": "1035720"
  },
  {
    "text": "this isn't necessarily a knock on on JavaScript this is intended behavior is in the specification and the idea that",
    "start": "1035720",
    "end": "1042350"
  },
  {
    "text": "the issue with this though is that if you push the way it uses array prototypes it makes copies instead of",
    "start": "1042350",
    "end": "1047480"
  },
  {
    "text": "class-based things it makes copies of this prototype to make new objects the methods are active they're real you can",
    "start": "1047480",
    "end": "1053029"
  },
  {
    "text": "call methods on prototypes even though you usually would not want to do so and so you can actually push a value into",
    "start": "1053029",
    "end": "1059630"
  },
  {
    "text": "the array and every subsequent array that you create will have that value at the zero index however the array length",
    "start": "1059630",
    "end": "1067159"
  },
  {
    "text": "is zero so it kind of puts things in kind of a weird state but this is perfectly valid JavaScript love it or love JavaScript or",
    "start": "1067159",
    "end": "1073480"
  },
  {
    "text": "hate it it is JavaScript and so if you say I can compile JavaScript to web assembly you have to be able to compile",
    "start": "1073480",
    "end": "1079120"
  },
  {
    "text": "this as well and that's on while it's possible to do that the I the the point of try and drive across is that fully",
    "start": "1079120",
    "end": "1084580"
  },
  {
    "text": "spec compliance JavaScript would be slower over all the browser's have",
    "start": "1084580",
    "end": "1090250"
  },
  {
    "text": "phenomenal virtual machines that have been hardened and hardened and hardened there's no reason for you to ship your own virtual machine to the browser right",
    "start": "1090250",
    "end": "1096789"
  },
  {
    "text": "to be able to to do these things now there is a well actually to this point",
    "start": "1096789",
    "end": "1102880"
  },
  {
    "text": "and that's that a strict subset of JavaScript could absolutely be compiled",
    "start": "1102880",
    "end": "1108549"
  },
  {
    "text": "to web assembly and could be fast and fast potentially faster than JavaScript so you really have to make that",
    "start": "1108549",
    "end": "1113799"
  },
  {
    "text": "distinction in that nuance you can't kind of paint with one color or the other and there's there's a gentleman",
    "start": "1113799",
    "end": "1119440"
  },
  {
    "text": "sebastian mark bej he works at facebook and he works on a project called pre-pack and he you know he kind of kind",
    "start": "1119440",
    "end": "1126250"
  },
  {
    "text": "of a little bit of a troll or a clique baby type of tweet but you know what if you could ahead of time compile your JavaScript web assembly and what he's",
    "start": "1126250",
    "end": "1132730"
  },
  {
    "text": "referring to is an experiment they're doing with pre pack and pre packs designed primarily to optimize JavaScript to do ahead of time",
    "start": "1132730",
    "end": "1139350"
  },
  {
    "text": "evaluation of JavaScript but one of the thighs the had was well sometimes we can detect certain statically typed patterns",
    "start": "1139350",
    "end": "1147490"
  },
  {
    "text": "even if you even though JavaScript isn't statically typed we can detect at compile time oh we know exactly what this function is",
    "start": "1147490",
    "end": "1153370"
  },
  {
    "text": "going to do what every value it's possibly can take and in those certain cases they've been experimenting with",
    "start": "1153370",
    "end": "1158500"
  },
  {
    "text": "compiling it to web assembly and so you'll kind of have like a you know a mish a mix of JavaScript and web",
    "start": "1158500",
    "end": "1164440"
  },
  {
    "text": "assembly things that it couldn't compile and things that it could and the idea is to do that automatically in transparent",
    "start": "1164440",
    "end": "1170320"
  },
  {
    "text": "it remains to be seen whether in practice that's going to be useful because you know you do have to call across the bridge to call from",
    "start": "1170320",
    "end": "1176529"
  },
  {
    "text": "JavaScript or web assembly and there's you know you're loading a different file and there's caveats to this right you",
    "start": "1176529",
    "end": "1181630"
  },
  {
    "text": "know compiling a single function that all it does is add two numbers that's not going to be worth it right javascript can can run that just as fast",
    "start": "1181630",
    "end": "1189100"
  },
  {
    "text": "as web assembly can and a lot of these a lot of these caveats that I keep giving",
    "start": "1189100",
    "end": "1194679"
  },
  {
    "text": "you right have to do it's not exclusively but a lot of them do have to do with the fact that we're taking incremental approach to web ascent",
    "start": "1194679",
    "end": "1200570"
  },
  {
    "text": "the v1 or the MVP as we call it is designed to work best for four fairly",
    "start": "1200570",
    "end": "1206720"
  },
  {
    "text": "low level languages languages like the C and C++ and the rusts so it's ideal for",
    "start": "1206720",
    "end": "1212180"
  },
  {
    "text": "that low level system languages languages with very little if not no dynamic runtime type of behavior no",
    "start": "1212180",
    "end": "1219140"
  },
  {
    "text": "garbage collection things like that it's not to say you can't do these things in web assembly it's just the cost of doing",
    "start": "1219140",
    "end": "1224690"
  },
  {
    "text": "them and probably isn't worth it at this point and I did want to point out because some",
    "start": "1224690",
    "end": "1229730"
  },
  {
    "text": "people have mentioned that I that I missed this before is that cou C++ these days especially with the very latest",
    "start": "1229730",
    "end": "1236480"
  },
  {
    "text": "versions ah is is no longer really a systems language it is a full-blown application language if you you if you",
    "start": "1236480",
    "end": "1242630"
  },
  {
    "text": "choose to use those like those new language features and it's true that some of those new language features don't compile to efficient web assembly",
    "start": "1242630",
    "end": "1250040"
  },
  {
    "text": "currently and yeah a feature that's not new in the number of years but relatively new depending on what circles",
    "start": "1250040",
    "end": "1256490"
  },
  {
    "text": "you're actually coming up programming in is actually exceptions you'd be surprised at least I was surprised at",
    "start": "1256490",
    "end": "1261920"
  },
  {
    "text": "the number of people who still don't use exceptions in C++ primarily with because they have a lot of C and interrupts",
    "start": "1261920",
    "end": "1268010"
  },
  {
    "text": "between that but exceptions are one example where they don't compile too efficient web assembly they absolutely",
    "start": "1268010",
    "end": "1273830"
  },
  {
    "text": "can compile to web assembly but they're not efficient yet we don't have zero cost exceptions under web assembly",
    "start": "1273830",
    "end": "1279200"
  },
  {
    "text": "currently so you know I I also don't want you to glaze out though if you're",
    "start": "1279200",
    "end": "1285230"
  },
  {
    "text": "not a C C++ or rust programmer this still can apply to you other languages are already planned or in the working in",
    "start": "1285230",
    "end": "1292370"
  },
  {
    "text": "fact if you use Go Go has already released very early support for web assembly now go has some dynamic",
    "start": "1292370",
    "end": "1299240"
  },
  {
    "text": "features or some features that are I guess more higher-level I think would be more accurate to describe then then",
    "start": "1299240",
    "end": "1304460"
  },
  {
    "text": "languages like C are rust like it has garbage collection and so how the garbage collector has to work currently",
    "start": "1304460",
    "end": "1309830"
  },
  {
    "text": "in web assembly isn't the most ideal and performance wise so it's it's kind of an early experiment but the proof is that",
    "start": "1309830",
    "end": "1315500"
  },
  {
    "text": "people are really excited about this future and they're already experimenting it's a stated goal of the web assembly",
    "start": "1315500",
    "end": "1322010"
  },
  {
    "text": "community group to support these languages at some points you know in the coming years as we work towards this and",
    "start": "1322010",
    "end": "1327110"
  },
  {
    "text": "I think because of how much this has been able to drum up excitement and how",
    "start": "1327110",
    "end": "1332600"
  },
  {
    "text": "many people already parenting with webassembly from a language compiler perspective think I",
    "start": "1332600",
    "end": "1337730"
  },
  {
    "text": "want to talk up a little bit about how web assembly will impact language design and compiler implementation like the",
    "start": "1337730",
    "end": "1344330"
  },
  {
    "text": "actual compilation of your language into web assembly how will that impact it and the biggest thing is that the web has",
    "start": "1344330",
    "end": "1350900"
  },
  {
    "text": "very unique considerations considerations that we've just really never had and we could take for granted",
    "start": "1350900",
    "end": "1356030"
  },
  {
    "text": "but in traditional languages and I wanted to really really call out even",
    "start": "1356030",
    "end": "1361250"
  },
  {
    "text": "though Ashley's here I really wanted to call out the RUS team about this because they have just been just so phenomenal",
    "start": "1361250",
    "end": "1366590"
  },
  {
    "text": "about already adopting web assembly they had it as a stated goal in 2018 to",
    "start": "1366590",
    "end": "1371750"
  },
  {
    "text": "really double down on making web assembly a first-class care and citizen of the of the rust programming language",
    "start": "1371750",
    "end": "1378320"
  },
  {
    "text": "and it shows they've done a ton a ton a ton of work and thank you Ashley Ann team for doing that too to really make",
    "start": "1378320",
    "end": "1385190"
  },
  {
    "text": "rust a beautiful language to compile the web assembly and what what sort of things do you have to care about what it would have what does the Russ team cared",
    "start": "1385190",
    "end": "1391400"
  },
  {
    "text": "about what what what considerations do you have to make on the web but the biggest one by far is file sizes you",
    "start": "1391400",
    "end": "1398270"
  },
  {
    "text": "know we if you've written an iOS app or an Andrew an Android app or you've really done hardly any native",
    "start": "1398270",
    "end": "1403880"
  },
  {
    "text": "programming how often did you look at your at your bundle size your resulting size you probably didn't to be honest",
    "start": "1403880",
    "end": "1410210"
  },
  {
    "text": "because it's not really a care within reason right you don't like once you start to get up over 500 megabytes",
    "start": "1410210",
    "end": "1415820"
  },
  {
    "text": "maybe you'll get on a blog post somewhere where people are complaining about you next to Facebook you know where they're like oh look at your 500",
    "start": "1415820",
    "end": "1421940"
  },
  {
    "text": "megabyte bundle or you know you go to a gig or something like that but for the most part people don't really you know",
    "start": "1421940",
    "end": "1427670"
  },
  {
    "text": "care or even think about those sort of things but imagine trying to ship an app to the web that's 500 megabytes right no",
    "start": "1427670",
    "end": "1434930"
  },
  {
    "text": "way everyone would tell you not going to happen you know you deal-breaker immediately your bounce rate would just be near hundred percent right and that's",
    "start": "1434930",
    "end": "1441530"
  },
  {
    "text": "that's that's a really unique consideration for the web people are very used to that instant gratification",
    "start": "1441530",
    "end": "1446810"
  },
  {
    "text": "I go to your site and I can use your app immediately without needing to wait or download or install or anything like",
    "start": "1446810",
    "end": "1452750"
  },
  {
    "text": "that and this is all possible it just requires being rare very conscious of that both at the compiler level and the",
    "start": "1452750",
    "end": "1459920"
  },
  {
    "text": "tool chains but also as an actual developer so the languages have to be really careful you can't just link an",
    "start": "1459920",
    "end": "1465500"
  },
  {
    "text": "entire run I'm library of code that you don't use which is a very common thing right it's",
    "start": "1465500",
    "end": "1471100"
  },
  {
    "text": "common to go into a native binary and see massive libraries where only a single function is used and that's not a",
    "start": "1471100",
    "end": "1476530"
  },
  {
    "text": "big deal what do you do but on the web that's a deal breaker but there's even further things that you'll want to do if",
    "start": "1476530",
    "end": "1482740"
  },
  {
    "text": "you want to get that real good experience things like lazy loading where you do code splitting you split actual sections of your code base and",
    "start": "1482740",
    "end": "1489340"
  },
  {
    "text": "load the code as you need it just in time and that's really more complex and",
    "start": "1489340",
    "end": "1494890"
  },
  {
    "text": "I would would not be surprised if more languages as they says the web assembly starts to get more popular decide we",
    "start": "1494890",
    "end": "1501550"
  },
  {
    "text": "should do things like this at a language level we should help you out we should maybe statically analyze your things",
    "start": "1501550",
    "end": "1507220"
  },
  {
    "text": "give you primitives to give us hints or make things easier on you I'm really excited about experimentation with this",
    "start": "1507220",
    "end": "1512860"
  },
  {
    "text": "if you're if you're on the web doing JavaScript type of stuff web pack and and things like that have already experimented with providing those",
    "start": "1512860",
    "end": "1519550"
  },
  {
    "text": "primitives and tricks so the next thing is you know that that shared libraries",
    "start": "1519550",
    "end": "1524650"
  },
  {
    "text": "like so it sort of related to the file size thing but not just that not just the fact that you are linking in these",
    "start": "1524650",
    "end": "1530170"
  },
  {
    "text": "giant libraries but also the web doesn't really have this full fledged UI toolkit",
    "start": "1530170",
    "end": "1536290"
  },
  {
    "text": "likelike like nearly every platform is gonna have right you don't have that you have the Dom and you have the hosts",
    "start": "1536290",
    "end": "1541450"
  },
  {
    "text": "api's but they're far from as robust as iOS or Android or something like that so",
    "start": "1541450",
    "end": "1546970"
  },
  {
    "text": "that's an open question if if if you have a popular library like bootstrap or something like that if there's some sort",
    "start": "1546970",
    "end": "1551980"
  },
  {
    "text": "of equivalent where you're writing in in some other higher-level language and compiling that to web assembly you know",
    "start": "1551980",
    "end": "1557830"
  },
  {
    "text": "do we really want every website to have to download that over and over and over again or can we come up with some way",
    "start": "1557830",
    "end": "1563530"
  },
  {
    "text": "where the most popular libraries can be dynamically linked and cached locally and we have a browser caches and stuff",
    "start": "1563530",
    "end": "1569980"
  },
  {
    "text": "but they weren't really designed for this so these are all very open questions how can we make this a better",
    "start": "1569980",
    "end": "1575470"
  },
  {
    "text": "environment for developers and for code reuse between between applications the next one is offline right you know so",
    "start": "1575470",
    "end": "1582280"
  },
  {
    "text": "your your if you do do that lazy loading and that code splitting and you caring about all those things now you have to",
    "start": "1582280",
    "end": "1588310"
  },
  {
    "text": "deal with the opposite problem right what happens if you lose that internet connection you have to handle that gracefully and that's another",
    "start": "1588310",
    "end": "1593770"
  },
  {
    "text": "consideration that you just normally normally for most applications you know you either choose like on iOS or Android",
    "start": "1593770",
    "end": "1600460"
  },
  {
    "text": "you're either assuming a cell connection or you're assuming not a cell connection and and and some people have gotten",
    "start": "1600460",
    "end": "1605560"
  },
  {
    "text": "better at that you know but this is another problem that's that's pretty unique to the web the next one is",
    "start": "1605560",
    "end": "1611440"
  },
  {
    "text": "interrupts with JavaScript this one won't apply to everyone because some people are gonna say you know I want to write some other language and I'm not",
    "start": "1611440",
    "end": "1616780"
  },
  {
    "text": "even gonna touch JavaScript but for the most part javascript is great and and there's gonna be a lot of code reuse",
    "start": "1616780",
    "end": "1623050"
  },
  {
    "text": "that you're gonna want to do so languages that are able to interrupt with JavaScript I think are gonna have a major leg up and what do I mean by",
    "start": "1623050",
    "end": "1630430"
  },
  {
    "text": "interrupt I mean calling across them being able to represent their objects and represent those things and in a in a",
    "start": "1630430",
    "end": "1636220"
  },
  {
    "text": "you know graceful manner not perfect obviously but that but some languages that were designed for the web already",
    "start": "1636220",
    "end": "1642640"
  },
  {
    "text": "our language like darts or elm or reason and these are languages that all have a very good story about how do you",
    "start": "1642640",
    "end": "1648670"
  },
  {
    "text": "interrupt with JavaScript and I think that these are actually pretty promising languages for the future of web assembly",
    "start": "1648670",
    "end": "1654100"
  },
  {
    "text": "none of them currently compiled to web assembly because they're actually pretty high-level but they all have expressed",
    "start": "1654100",
    "end": "1659740"
  },
  {
    "text": "interest in doing so once web assembly has added the necessary features to make it efficient for them so I'm as a person",
    "start": "1659740",
    "end": "1667780"
  },
  {
    "text": "who's kind of an armchair language designer myself I'm most excited about these languages and potentially brand",
    "start": "1667780",
    "end": "1673180"
  },
  {
    "text": "new ones new languages that you have probably never even heard of and a couple things that are exciting or like",
    "start": "1673180",
    "end": "1678730"
  },
  {
    "text": "the typescript like languages right if you if you know JA if you know JavaScript which a majority of people even if you're not an expert you know",
    "start": "1678730",
    "end": "1685240"
  },
  {
    "text": "JavaScript right it's a pretty it's a pretty easy language to get the fundamentals down well what about typescript like a",
    "start": "1685240",
    "end": "1690610"
  },
  {
    "text": "typescript like language if we make it a subset of that and there's already been early examples of this there's a",
    "start": "1690610",
    "end": "1696430"
  },
  {
    "text": "language called assembly script which if you know typescript this is essentially typescript except for you notice that",
    "start": "1696430",
    "end": "1702400"
  },
  {
    "text": "the type annotation is an i-32 a 32-bit integer rather than being a number because it's not JavaScript but this is",
    "start": "1702400",
    "end": "1709540"
  },
  {
    "text": "something that I I would bet you within five minutes everyone in this room would be able to write assembly script and be",
    "start": "1709540",
    "end": "1715570"
  },
  {
    "text": "able to be productive and write you know very performant code now assembly script currently is a very early and so it is",
    "start": "1715570",
    "end": "1722650"
  },
  {
    "text": "really great for sort of algorithmic type of functions that you would want to write but it's not great for I want to",
    "start": "1722650",
    "end": "1727900"
  },
  {
    "text": "write my entire application and I want to use the Dom you know like those type of things it's not currently ready",
    "start": "1727900",
    "end": "1733030"
  },
  {
    "text": "for that cyber situation and to touch on that caveat a little bit more is when",
    "start": "1733030",
    "end": "1738940"
  },
  {
    "text": "should you target webassembly right now you know there's there's there's when you should target in the future but then",
    "start": "1738940",
    "end": "1744370"
  },
  {
    "text": "when should you target right now well right now it's really comes down to heavily CPU bound computations on",
    "start": "1744370",
    "end": "1751060"
  },
  {
    "text": "numbers and that might sound like well I never do that but you know I think you'd",
    "start": "1751060",
    "end": "1756610"
  },
  {
    "text": "be surprised what ultimately boils down to that especially when you deal with like like compile like like most of the",
    "start": "1756610",
    "end": "1762910"
  },
  {
    "text": "C and C++ and rust and stuff like that back that gets compiled down mostly to computation some numbers loads and",
    "start": "1762910",
    "end": "1768640"
  },
  {
    "text": "stores and memory and stuff like that and a couple examples I want to touch on so games are the most obvious these are",
    "start": "1768640",
    "end": "1774010"
  },
  {
    "text": "things that were touted very early in web assemblies initial launch both the unity and Unreal Engine both have",
    "start": "1774010",
    "end": "1779860"
  },
  {
    "text": "support for web assembly you can compile your game to web assembly today there's still an open question on games on",
    "start": "1779860",
    "end": "1785740"
  },
  {
    "text": "distribution model I think that's really why in my opinion why games haven't taken off on the web is game developers",
    "start": "1785740",
    "end": "1791140"
  },
  {
    "text": "are still very you know cognizant to piracy and being able to get how do they get games to people and stuff because",
    "start": "1791140",
    "end": "1797200"
  },
  {
    "text": "people aren't just gonna come to their random website and download their game right so I think that's still an open question but the technology is there now",
    "start": "1797200",
    "end": "1804630"
  },
  {
    "text": "the next one is porting existing code and you can I don't think you should discount this too much there is a",
    "start": "1804630",
    "end": "1811000"
  },
  {
    "text": "plethora of code that's been written for over the last 20 and 30 years that is",
    "start": "1811000",
    "end": "1816370"
  },
  {
    "text": "highly valuable and easily portable like it's it's written in C it's written in C++ and that can be compiled to web",
    "start": "1816370",
    "end": "1822820"
  },
  {
    "text": "assembly and just used in your JavaScript apps as is and get great performance and a great implementation",
    "start": "1822820",
    "end": "1828940"
  },
  {
    "text": "you don't have to have port that to JavaScript and be like mmm some things you know if you don't have porting or you don't have pointer arithmetic in",
    "start": "1828940",
    "end": "1834790"
  },
  {
    "text": "JavaScript so certain things you can't do as performant and things like that case in point these are just a small",
    "start": "1834790",
    "end": "1839920"
  },
  {
    "text": "sample of libraries that I know of that have been compiled to web assembly show a few any of these are familiar I",
    "start": "1839920",
    "end": "1846310"
  },
  {
    "text": "imagine a number of them might actually be to you but there's I think some of the most cool like visual type of things",
    "start": "1846310",
    "end": "1853240"
  },
  {
    "text": "are the video and the audio type of decoders those type of algorithms that are really popular in fact case in point",
    "start": "1853240",
    "end": "1860050"
  },
  {
    "text": "zoom if you've ever used that video conferencing app they have a web client that you can use in Chrome",
    "start": "1860050",
    "end": "1866550"
  },
  {
    "text": "you don't have to have anything you know what to download anything no extensions or anything and it uses webassembly under the hood it's running inside web",
    "start": "1866550",
    "end": "1872700"
  },
  {
    "text": "workers they have a web worker for their audio and a web worker a different thread for their audio and a worker for",
    "start": "1872700",
    "end": "1879540"
  },
  {
    "text": "the video and it does the decoding in real time as it's coming over through the web socket using web assembly I",
    "start": "1879540",
    "end": "1885559"
  },
  {
    "text": "don't know what language they actually wrote it in because they I assume they did not write the web assembly by hand",
    "start": "1885559",
    "end": "1891360"
  },
  {
    "text": "but if I had to guess it's probably C++ or rust but I don't actually know next",
    "start": "1891360",
    "end": "1897210"
  },
  {
    "text": "up that's kind of exciting for me is rect eight of Dom if you've heard of react native it's a way of taking the",
    "start": "1897210",
    "end": "1903300"
  },
  {
    "text": "react UI library that's for JavaScript for this UI application stuff and complain it and it's for taking the",
    "start": "1903300",
    "end": "1911070"
  },
  {
    "text": "excuse me reckoning is made for the web primarily right but you're able to run it with react native react is made for",
    "start": "1911070",
    "end": "1918570"
  },
  {
    "text": "the web react native is made for running it on ios and android devices however there's a project called react native",
    "start": "1918570",
    "end": "1925050"
  },
  {
    "text": "Dom that lets you run react native apps on the web so it kind of goes full circle I know that's kind of be",
    "start": "1925050",
    "end": "1930420"
  },
  {
    "text": "mind-bending but it's like reactor was made for the web then react native was made for the devices they are the mobile",
    "start": "1930420",
    "end": "1935790"
  },
  {
    "text": "devices and then react native Dom made it come back to the Dom so it's kind of going full circle but the idea behind this is being able to reuse code because",
    "start": "1935790",
    "end": "1943110"
  },
  {
    "text": "right now react and reckon if can't really reuse a whole lot of their actual react code they can reuse maybe some",
    "start": "1943110",
    "end": "1948960"
  },
  {
    "text": "business logic stuff because it's just JavaScript but the actual view itself can't be reused and that's what react",
    "start": "1948960",
    "end": "1954929"
  },
  {
    "text": "native Dom does is it lets you reuse the actual view logic that you create the representation of the view and with this",
    "start": "1954929",
    "end": "1961290"
  },
  {
    "text": "implementation they there was a project called yoga which is the custom layout",
    "start": "1961290",
    "end": "1966960"
  },
  {
    "text": "engine that react native uses it's written in C++ and it's pretty portable so that's exactly what they did is they",
    "start": "1966960",
    "end": "1972179"
  },
  {
    "text": "compiled the yoga to web assembly and boom there you go you can run react native in your browser pretty cool",
    "start": "1972179",
    "end": "1979860"
  },
  {
    "text": "project but if you are a web developer if you are doing JavaScript today",
    "start": "1979860",
    "end": "1985580"
  },
  {
    "text": "chances are you're actually using web assembly and you don't even know it which i think is pretty exciting to hear",
    "start": "1985580",
    "end": "1993059"
  },
  {
    "text": "I know I was surprised and and that's you know that's because of this source map package if you use Babel if you use",
    "start": "1993059",
    "end": "1999690"
  },
  {
    "text": "if use webpack if you use firefox if you use pretty much any kind of compiler or",
    "start": "1999690",
    "end": "2004820"
  },
  {
    "text": "thing that deals with languages whatsoever with JavaScript you're using source map because that's it's it's by",
    "start": "2004820",
    "end": "2010550"
  },
  {
    "text": "far the de facto standard and what the Mozilla folks did it was originally written in JavaScript they they went and",
    "start": "2010550",
    "end": "2016370"
  },
  {
    "text": "ported it to just normal idiomatic rust because they love rust so much because they created it and they saw on almost",
    "start": "2016370",
    "end": "2022880"
  },
  {
    "text": "eleven times faster improvement in in source map generation and I don't know",
    "start": "2022880",
    "end": "2027920"
  },
  {
    "text": "about you but some of the apps I've worked on the source maps have actually been the worst culprit of my terrible",
    "start": "2027920",
    "end": "2033710"
  },
  {
    "text": "build times like literary often disable source Maps just because it was just weight taking way too long so that's a",
    "start": "2033710",
    "end": "2039650"
  },
  {
    "text": "very very welcome improvement in my build times so pretty exciting but those",
    "start": "2039650",
    "end": "2045080"
  },
  {
    "text": "other use cases that I've been kind of hinting at right like you want to write Elm you want to write dart you want to write reason you want to write Java you",
    "start": "2045080",
    "end": "2050870"
  },
  {
    "text": "want to write dotnet whatever it is and you want to target the web those use cases are coming and they're a stated goal so let's take a look at that binary",
    "start": "2050870",
    "end": "2059628"
  },
  {
    "text": "stuff you know I was just showing that example before we got that factorial function and I compile that to binary",
    "start": "2059629",
    "end": "2065169"
  },
  {
    "text": "you might be looking at that and you might be just saying what the heck like how am I you know this is too scary how",
    "start": "2065169",
    "end": "2072350"
  },
  {
    "text": "am I actually going to be able to target for the web I'm so used to being able to view my source code and do I need to",
    "start": "2072350",
    "end": "2077750"
  },
  {
    "text": "learn binary to use web assembly and and I absolutely agree binary can be a",
    "start": "2077750",
    "end": "2082908"
  },
  {
    "text": "little intimidating none of the people I know just a little yeah yeah just a little and none of the people I know who",
    "start": "2082909",
    "end": "2088310"
  },
  {
    "text": "deal with binary all day long like these type of things they we don't know what the binary instructions are we don't",
    "start": "2088310",
    "end": "2094158"
  },
  {
    "text": "memorize the instructions I'm sure there are some people who are very proud of doing that but I'm not one of them I",
    "start": "2094159",
    "end": "2099200"
  },
  {
    "text": "don't look at that and go it's like the matrix I don't even see the code I just see a function and this it doesn't work",
    "start": "2099200",
    "end": "2104540"
  },
  {
    "text": "like that the pro tip is don't worry about that if you've written Java if you've written C++ if you've written any",
    "start": "2104540",
    "end": "2110690"
  },
  {
    "text": "of these higher-level languages how often did you actually decompile your binaries and start looking at that code",
    "start": "2110690",
    "end": "2115700"
  },
  {
    "text": "hopefully not often if ever but you know the tool the idea is that tooling will",
    "start": "2115700",
    "end": "2121340"
  },
  {
    "text": "make this a non-issue that tooling will save you from from you know all the issues with debugging and and and",
    "start": "2121340",
    "end": "2127220"
  },
  {
    "text": "whatnot now it is true that we're pretty early so it is helpful to have at least",
    "start": "2127220",
    "end": "2132680"
  },
  {
    "text": "a a high-level understanding of webassembly itself maybe you don't you don't have to memorize the instructions",
    "start": "2132680",
    "end": "2138140"
  },
  {
    "text": "but there's a textual representation that's going to save you've on this so instead of looking at actual binary",
    "start": "2138140",
    "end": "2143600"
  },
  {
    "text": "options we can instead look at a textual representation on assembly language if",
    "start": "2143600",
    "end": "2148910"
  },
  {
    "text": "you will and so this is that factorial function written in the textual representation of assembly and so you",
    "start": "2148910",
    "end": "2155390"
  },
  {
    "text": "may be looking at that now going okay I see if I see return I see the word factorial which is nice but I still",
    "start": "2155390",
    "end": "2162650"
  },
  {
    "text": "don't actually understand how this works right it actually is kind of a little convoluted so let's let's actually learn the fundamentals right now I think it's",
    "start": "2162650",
    "end": "2168680"
  },
  {
    "text": "easier than you would think we need to start by understanding that web assembly is a stack machine language",
    "start": "2168680",
    "end": "2175660"
  },
  {
    "text": "right so what's a stack machine well we you know this might be CS 101 but I",
    "start": "2175660",
    "end": "2182960"
  },
  {
    "text": "think it's really critical to understand this point a stack is a data structure in which there are two operations and that's it you can push or you can pop",
    "start": "2182960",
    "end": "2190010"
  },
  {
    "text": "and then and every time you push it goes on top of the stack you can't push into an arbitrary position and it when to",
    "start": "2190010",
    "end": "2197270"
  },
  {
    "text": "remove something you can pop it and anytime you pop it's always from the top of the stack you can't arbitrarily",
    "start": "2197270",
    "end": "2202910"
  },
  {
    "text": "insert or remove anywhere from the bottom in the middle or anything like that so a stack machine is a machine in",
    "start": "2202910",
    "end": "2210859"
  },
  {
    "text": "which the instructions are evaluated on an implicit stack it's actually part of the machine itself it's not some",
    "start": "2210859",
    "end": "2216980"
  },
  {
    "text": "separate thing that the language has invented it's it's a stack machine and",
    "start": "2216980",
    "end": "2222280"
  },
  {
    "text": "the next question if you're familiar with stack machines might be well why would did they choose a stack machine",
    "start": "2222280",
    "end": "2227570"
  },
  {
    "text": "why why well the history there was if first it was started off as an AST machine which is kind of a weird thing",
    "start": "2227570",
    "end": "2233930"
  },
  {
    "text": "but and then there's you know SS a single single remember single something",
    "start": "2233930",
    "end": "2239930"
  },
  {
    "text": "assignment a single static assignment I believe it is and then there's register machines register machines are the",
    "start": "2239930",
    "end": "2245180"
  },
  {
    "text": "typical ones right you know your x86 your arms that's how a normal machine works and this one is kind of a talk on",
    "start": "2245180",
    "end": "2252500"
  },
  {
    "text": "its own you could probably write a paper on this about why stack machine versus register machine and all these sorts of",
    "start": "2252500",
    "end": "2257840"
  },
  {
    "text": "things and ultimately I personally believe because it all comes down to personal that it depends but you know",
    "start": "2257840",
    "end": "2265670"
  },
  {
    "text": "there's different use case is there's pros and cons to both ultimately you have to decide one virtual machines are typically done as",
    "start": "2265670",
    "end": "2271339"
  },
  {
    "text": "stack machines but some of the some of the the things you can't talk about are things like smaller binary encoding zit",
    "start": "2271339",
    "end": "2276739"
  },
  {
    "text": "is pretty easy to prove that stack machines can give you a smaller binary encoding than a register machine but",
    "start": "2276739",
    "end": "2283130"
  },
  {
    "text": "there is also in in the case of web assembly there was also some games that they were able to see when they were",
    "start": "2283130",
    "end": "2289430"
  },
  {
    "text": "first starting when they were 5 scuse me finn up finalizing the decision to go stack machine that it was going to be",
    "start": "2289430",
    "end": "2294440"
  },
  {
    "text": "easier and faster to do a single pass of a verification and then also the compilation to that target machine code",
    "start": "2294440",
    "end": "2301400"
  },
  {
    "text": "and be able to implement that virtual machine and if this is something you want to talk more about if you really want to know more about that absolutely",
    "start": "2301400",
    "end": "2307309"
  },
  {
    "text": "come talk to me after because i'm happy to discuss it but let's kind of break down an example we've got one plus two",
    "start": "2307309",
    "end": "2313069"
  },
  {
    "text": "right we want to add two numbers together how would we do this in web assembly well there is the add",
    "start": "2313069",
    "end": "2319609"
  },
  {
    "text": "instruction that we looked at earlier the add to 32-bit integers together the left is the mnemonic this is the like a",
    "start": "2319609",
    "end": "2326630"
  },
  {
    "text": "textual representation of that of that opcode and then on the right is the actual hexadecimal of that binary so how",
    "start": "2326630",
    "end": "2333259"
  },
  {
    "text": "would we write 1 plus 2 in web assembly just like this we've got one two and",
    "start": "2333259",
    "end": "2339109"
  },
  {
    "text": "then add but let's kind of evaluate this let's create our own virtual machine here with a stack and evaluate this one",
    "start": "2339109",
    "end": "2346339"
  },
  {
    "text": "by one so the fourth one what the machine is going to do is it's going to evaluate the first instruction it sees it's open it's a 30 it's a 32-bit",
    "start": "2346339",
    "end": "2352729"
  },
  {
    "text": "integer a 1 we'll put that on the stack it'll see the second one it'll put that",
    "start": "2352729",
    "end": "2357829"
  },
  {
    "text": "on top of the stack notice that went on top so that here's our stack machine being evaluated and then it's going to",
    "start": "2357829",
    "end": "2363259"
  },
  {
    "text": "come to the next instruction and that next instruction is the ad right and implicitly the machine knows somehow how",
    "start": "2363259",
    "end": "2369109"
  },
  {
    "text": "to add it we don't care how it does add but it knows that what it's gonna do is gonna take the top the top two operands",
    "start": "2369109",
    "end": "2375739"
  },
  {
    "text": "pop them off the stack somehow magically add them together and then put the result back on the",
    "start": "2375739",
    "end": "2381049"
  },
  {
    "text": "stack that three back on the stack see how that's evaluating as a stack implicitly that's a stack machine and so",
    "start": "2381049",
    "end": "2388910"
  },
  {
    "text": "how would you then log this out let's say you've got a function that takes the 32-bit integer and you just want to log",
    "start": "2388910",
    "end": "2394579"
  },
  {
    "text": "this out where would we put that you know we don't have parentheses or anything like that to group these things",
    "start": "2394579",
    "end": "2399859"
  },
  {
    "text": "together well we would just put it right at the bottom because it's a stack machine so what was on the stack right before that call is the result of that",
    "start": "2399859",
    "end": "2406579"
  },
  {
    "text": "that number three and that result would get passed to the call the the call of",
    "start": "2406579",
    "end": "2412970"
  },
  {
    "text": "the log because that's its argument so that's the very basics of web assembly it really doesn't take too much to go",
    "start": "2412970",
    "end": "2419420"
  },
  {
    "text": "from here to fully understanding all the instructions because really it's just like okay what's the instruction for",
    "start": "2419420",
    "end": "2424730"
  },
  {
    "text": "that you know I want to multiply I want to load from memory what's the instruction for that and so it's actually pretty easy if you do want",
    "start": "2424730",
    "end": "2430970"
  },
  {
    "text": "to take a day and learn I want to write some live assembly by hand so that's one thing you can you can put on your",
    "start": "2430970",
    "end": "2436519"
  },
  {
    "text": "LinkedIn profile so but what's missing right so there are caveats it is early I",
    "start": "2436519",
    "end": "2442609"
  },
  {
    "text": "did make a point to point that out well the biggest thing I think right now for general adoption for everyone is direct",
    "start": "2442609",
    "end": "2449420"
  },
  {
    "text": "access to the host api's and in the browser that means the Dom you know",
    "start": "2449420",
    "end": "2455150"
  },
  {
    "text": "being able to call the Dom being able to make a checks request and right now web",
    "start": "2455150",
    "end": "2460460"
  },
  {
    "text": "assembly itself is kind of this kind of world on its own where it sits next to JavaScript and if you if you want to do",
    "start": "2460460",
    "end": "2466700"
  },
  {
    "text": "anything useful with the outside world if you want to make HTTP requests you want to log to the console or access the Dom you have to go through JavaScript so",
    "start": "2466700",
    "end": "2474079"
  },
  {
    "text": "Java when you load up the web assembly module from JavaScript you basically go here are the functions you can call call",
    "start": "2474079",
    "end": "2481069"
  },
  {
    "text": "those functions and JavaScript has to do kind of the heavy lifting with the outside world and that was done intentionally because in are",
    "start": "2481069",
    "end": "2487039"
  },
  {
    "text": "interrupting between javascript and web assembly with complex garbage collected objects is non-trivial and so you know",
    "start": "2487039",
    "end": "2494599"
  },
  {
    "text": "the the community group really wanted to get this right so we kind of punted on the problem and decided we'll just defer",
    "start": "2494599",
    "end": "2499789"
  },
  {
    "text": "that to javascript for now but the issue with that is that means you have to ship javascript right you know you're if",
    "start": "2499789",
    "end": "2505190"
  },
  {
    "text": "you're doing c++ and you're using something called like m script in which is like a clang compiler for web",
    "start": "2505190",
    "end": "2510829"
  },
  {
    "text": "assembly you it comes with a runtime that includes a bunch of JavaScript glue",
    "start": "2510829",
    "end": "2516410"
  },
  {
    "text": "code essentially and that's not ideal right you want to be able to ship an entire web assembly binary without any glue code and there's also a performance",
    "start": "2516410",
    "end": "2523309"
  },
  {
    "text": "benefit it would there would be a performance benefit if you were able to just call the host bindings directly",
    "start": "2523309",
    "end": "2529460"
  },
  {
    "text": "rather than going through JavaScript cuz there's a bridge right it's a foreign function interface related to that though is the garbage",
    "start": "2529460",
    "end": "2535940"
  },
  {
    "text": "collection right I was talking about the complexities around this if you're calling host objects you're you're getting an object you getting a",
    "start": "2535940",
    "end": "2541009"
  },
  {
    "text": "reference to the Dom you're making Ajax requests what have you from webassembly it has to be garbage collected because",
    "start": "2541009",
    "end": "2546979"
  },
  {
    "text": "you could give that to JavaScript JavaScript we can give it back to you vice versa so we need to expose that",
    "start": "2546979",
    "end": "2552140"
  },
  {
    "text": "garbage collection somehow to web assembly and there's been proposals on both of these things but actually",
    "start": "2552140",
    "end": "2557779"
  },
  {
    "text": "everything I'm talking about today there are already from full proposals that are pretty far so so we have a general idea",
    "start": "2557779",
    "end": "2563719"
  },
  {
    "text": "of how this is going to work how the garbage collection can work and there's a benefit to this as well the benefit is",
    "start": "2563719",
    "end": "2569569"
  },
  {
    "text": "that if you have a higher-level language that go elm dart etc they won't have to ship their own garbage collector if they",
    "start": "2569569",
    "end": "2575299"
  },
  {
    "text": "don't want to they can use the built-in garbage collector and save a bunch of bytes and have a really great garbage",
    "start": "2575299",
    "end": "2580700"
  },
  {
    "text": "collector in fact now there's some languages we'll choose not to do that because maybe the garbage collector",
    "start": "2580700",
    "end": "2586099"
  },
  {
    "text": "doesn't fit with their programming style because it did you know most browsers is generational garbage collector",
    "start": "2586099",
    "end": "2591140"
  },
  {
    "text": "multi-generational garbage collector in fact but yeah I think a lot of languages will end up using the built-in one for a",
    "start": "2591140",
    "end": "2598579"
  },
  {
    "text": "number of reasons the next one is multi-threading this is one of the another reason why people are really",
    "start": "2598579",
    "end": "2603769"
  },
  {
    "text": "excited about web assembly we're gonna get real multi-threading and so you'll be able to take advantage of that unlike",
    "start": "2603769",
    "end": "2609229"
  },
  {
    "text": "in JavaScript where the only thing you have is message passing between workers and serialization so that's pretty",
    "start": "2609229",
    "end": "2614660"
  },
  {
    "text": "exciting there's something called shared array buffer that is required though to do this in under the current way that",
    "start": "2614660",
    "end": "2620779"
  },
  {
    "text": "like projects like I'm script into it and that was actually disabled back in March or April I think it was because of",
    "start": "2620779",
    "end": "2626959"
  },
  {
    "text": "the specter and meltdown exploits but it's actually making a comeback thankfully so chrome is 68 already out",
    "start": "2626959",
    "end": "2632900"
  },
  {
    "text": "in the wild has support for shared array buffer and Mozilla Edge and Safari are not far behind",
    "start": "2632900",
    "end": "2638420"
  },
  {
    "text": "so we'll see on that but eventually we're going to get full multi-threading",
    "start": "2638420",
    "end": "2643579"
  },
  {
    "text": "in in any arbitrary language which is really exciting the next one I wanted to talk about is sim D single instruction",
    "start": "2643579",
    "end": "2649400"
  },
  {
    "text": "multiple data and this is basically Hardware parallelization of vector computations when you've got a vector",
    "start": "2649400",
    "end": "2655430"
  },
  {
    "text": "and you want to basically do computation on the entire vector maybe it's adding a number a bit to an entire vector there's",
    "start": "2655430",
    "end": "2661969"
  },
  {
    "text": "instructions built into most modern CPUs these sim D instructions that we'll be able to take advantage of",
    "start": "2661969",
    "end": "2667470"
  },
  {
    "text": "from webassembly which is pretty unique moving along is that zero cost exceptions that I was talking about",
    "start": "2667470",
    "end": "2672749"
  },
  {
    "text": "before that's something that also we're gonna get we're gonna have zero cost exceptions for any of those languages",
    "start": "2672749",
    "end": "2678089"
  },
  {
    "text": "and I wanted to point out one thing that's really exciting I'm hoping we have a talk a panel later in the afternoon about about languages in",
    "start": "2678089",
    "end": "2684420"
  },
  {
    "text": "general and I'm hoping we'll get a chance to talk about it there's something called algebraic effects and it's a terrible name because",
    "start": "2684420",
    "end": "2689759"
  },
  {
    "text": "it sounds super snooty and super like academic but it's a really cool feature that some languages have been toying",
    "start": "2689759",
    "end": "2694769"
  },
  {
    "text": "with like oh camel and I'm pretty excited about that there's actually been even talk of supporting algebraic effects from the webassembly level so",
    "start": "2694769",
    "end": "2701400"
  },
  {
    "text": "that you could have that in in some of your higher-level languages there's a bunch of more proposals that are advancing pretty quickly how do I get",
    "start": "2701400",
    "end": "2708359"
  },
  {
    "text": "started with web assembly well the you can you can you can start at web assembly org but this is pretty low level stuff this is going to talk about",
    "start": "2708359",
    "end": "2714599"
  },
  {
    "text": "the specification mostly instead if you want to get started with web assembly as a consumer you're going to want to go to",
    "start": "2714599",
    "end": "2719789"
  },
  {
    "text": "probably awesome blossom I think it's a great repo that has just just resources",
    "start": "2719789",
    "end": "2724920"
  },
  {
    "text": "for everything different languages links to all the different languages tutorials resources blog posts all that stuff I",
    "start": "2724920",
    "end": "2730920"
  },
  {
    "text": "think it's really great supported in all modern browsers I wanted to point out so",
    "start": "2730920",
    "end": "2736289"
  },
  {
    "text": "except for Internet Explorer 11 obviously it will never be supported in them unfortunately but moving along",
    "start": "2736289",
    "end": "2742170"
  },
  {
    "text": "because I'm kind of running that time so but the I just want to put up the revolution is just beginning right this is a revolution and I I there's kind of",
    "start": "2742170",
    "end": "2749759"
  },
  {
    "text": "a trick I've been kind of lying to you lying to you in the sense of I've been trying to simplify things and and that's",
    "start": "2749759",
    "end": "2755549"
  },
  {
    "text": "that last part I've been saying it's an efficient and safe low-level bytecode for the web however this is the first",
    "start": "2755549",
    "end": "2763109"
  },
  {
    "text": "open and standardized bytecode right I didn't say open in standardized biko for the web so if we go into the actual web",
    "start": "2763109",
    "end": "2769259"
  },
  {
    "text": "assembly specification and we search the word browser or web or anything like that we're gonna find one spot where it",
    "start": "2769259",
    "end": "2775019"
  },
  {
    "text": "says platform-independent can be embedded in browsers but it could also be run as a standalone virtual machine",
    "start": "2775019",
    "end": "2780480"
  },
  {
    "text": "or integrated into other environments and that's the most exciting thing to me about why it can be so revolutionary and",
    "start": "2780480",
    "end": "2786089"
  },
  {
    "text": "that's that web assembly is not just for the web the community group when they first started this and I wasn't involved",
    "start": "2786089",
    "end": "2791789"
  },
  {
    "text": "at the beginning but they knew this they saw that this is unprecedented we got all these companies to finally agree to",
    "start": "2791789",
    "end": "2797160"
  },
  {
    "text": "create this bytecode can we make this generic can we make this something that's not just for the web that other people can",
    "start": "2797160",
    "end": "2803280"
  },
  {
    "text": "reuse and so there's kind of an inside joke in the community and that's webassembly neither web nor assembly we",
    "start": "2803280",
    "end": "2808920"
  },
  {
    "text": "hence the the title of the talk and that's because it's not just for the web and it's actually technically not an",
    "start": "2808920",
    "end": "2814020"
  },
  {
    "text": "assembly language it's a byte code and there's already cases where web assembly is being used there's something called",
    "start": "2814020",
    "end": "2819210"
  },
  {
    "text": "awasum or aetherium based wasum that's that crypto currency currency smart contract things I actually have no idea",
    "start": "2819210",
    "end": "2826800"
  },
  {
    "text": "what like I blockchain stuff and all that stuff you don't ask me about this but I can point you in the direction of people who know all about this in fact I",
    "start": "2826800",
    "end": "2833280"
  },
  {
    "text": "think there's a couple people here but it's really cool because they have this custom virtual machine like I understand the high level of the technical on II",
    "start": "2833280",
    "end": "2839250"
  },
  {
    "text": "was I'm like they have a their own custom virtual machine to run these smart contracts and one beautiful thing about web assembly is that it has very",
    "start": "2839250",
    "end": "2846150"
  },
  {
    "text": "minimum non-determinism it's only a couple places and those places are very specifically called out and so what the",
    "start": "2846150",
    "end": "2853050"
  },
  {
    "text": "EU was and folks did is they basically said okay we'll just not allow those those specific non-determinism factors",
    "start": "2853050",
    "end": "2859020"
  },
  {
    "text": "and then add a couple instructions of our own for this concept of like this gas or fuel for their their smart",
    "start": "2859020",
    "end": "2864780"
  },
  {
    "text": "contracts but then they know that they can deterministically run code and know what it's going to do and how long it's",
    "start": "2864780",
    "end": "2870450"
  },
  {
    "text": "going to take to do it so that they can they can charge them essentially for those contracts that's my understanding",
    "start": "2870450",
    "end": "2875880"
  },
  {
    "text": "of it the next one is Waze I'm and that this one is just wild and blows my",
    "start": "2875880",
    "end": "2881670"
  },
  {
    "text": "mind but if you're familiar with how operating system security works there's different rings of securities and one of",
    "start": "2881670",
    "end": "2887370"
  },
  {
    "text": "the cool things about the fact that web assemblies so sandbox is that theoretically you could run it and ring 0 you could actually run it in the",
    "start": "2887370",
    "end": "2894420"
  },
  {
    "text": "kernel itself and theoretically be safe now it raised to be seen if this is a",
    "start": "2894420",
    "end": "2900090"
  },
  {
    "text": "good idea or not right because you know there's day you know we've got decades telling us this is a bad idea but",
    "start": "2900090",
    "end": "2906020"
  },
  {
    "text": "rethinking best practices I think is has given some of the best things in software engineering periods so I think",
    "start": "2906020",
    "end": "2912240"
  },
  {
    "text": "it's really cool that people are already experimenting Ryan Hunter is actually an engineer at Dropbox so I'm pretty excited he's interested in running web",
    "start": "2912240",
    "end": "2918870"
  },
  {
    "text": "servers on any web assembly at ring zero because you can if you run it in ring zero you can get significant like double",
    "start": "2918870",
    "end": "2925860"
  },
  {
    "text": "the performance if your application is system call bound so if it makes a lot of a oh like like a web server does you",
    "start": "2925860",
    "end": "2933060"
  },
  {
    "text": "can get significant performance benefits at the risk of potentially letting HTTP requests",
    "start": "2933060",
    "end": "2938099"
  },
  {
    "text": "you know hijack your entire server so it remains to be seen whether this is a good idea or not but case in point another another person has taken this",
    "start": "2938099",
    "end": "2945809"
  },
  {
    "text": "and even a step further they've made a microkernel that runs web assembly like that's the only thing it does is it runs",
    "start": "2945809",
    "end": "2951690"
  },
  {
    "text": "web assembly and it does it good this was actually a it won a contract for google Summer of Code he worked on that",
    "start": "2951690",
    "end": "2957990"
  },
  {
    "text": "last summer pretty cool again remains to be seen whether this is a good idea or not but we already have lots of people",
    "start": "2957990",
    "end": "2964230"
  },
  {
    "text": "who are experimenting with this thing so efficient low-level efficient safe and low-level bytecode for the web strike",
    "start": "2964230",
    "end": "2970470"
  },
  {
    "text": "out that last port and I hope that this excited at least some of you if you have",
    "start": "2970470",
    "end": "2975720"
  },
  {
    "text": "questions I can absolutely make myself available I don't think we're gonna have time are we gonna have time for additional ones two minutes sweet so",
    "start": "2975720",
    "end": "2983730"
  },
  {
    "text": "bonus round if anyone has questions were there any questions that tweeted what",
    "start": "2983730",
    "end": "2990240"
  },
  {
    "text": "they saw okay anyone have any questions but before we jump to questions let's give Jay a round of applause please",
    "start": "2990240",
    "end": "2996829"
  },
  {
    "text": "and one thing I want to point out is these talks are tough because it's like I want to be technical but I also don't",
    "start": "3000910",
    "end": "3007910"
  },
  {
    "text": "want to be like you know so if there's a technical question that's burning you you're just like I really want to know",
    "start": "3007910",
    "end": "3013520"
  },
  {
    "text": "nitty-gritty absolutely come see me I nerd out about this stuff and I would love to talk to you about it all right so I think we have time for maybe a",
    "start": "3013520",
    "end": "3020270"
  },
  {
    "text": "couple of questions so what is your question oh yes yes these stack these stack",
    "start": "3020270",
    "end": "3029330"
  },
  {
    "text": "machine yeah it's like the if you're learning stack machines you learn you write a store fourth machine yeah yeah",
    "start": "3029330",
    "end": "3037490"
  },
  {
    "text": "oh yeah it's it's it's yeah and yeah actually it's funny you should yeah we should talk after actually cuz it looks",
    "start": "3037490",
    "end": "3042860"
  },
  {
    "text": "even more like that if you saw the full thing so that was more of a comment than a question yeah but it'll make really",
    "start": "3042860",
    "end": "3048230"
  },
  {
    "text": "great observation all right yeah a question yes just so everybody can hear",
    "start": "3048230",
    "end": "3058880"
  },
  {
    "text": "me so I actually have written webassembly in the textual thing and to",
    "start": "3058880",
    "end": "3065150"
  },
  {
    "text": "experiment with speed versus JavaScript yeah and it's a Mandelbrot and I can't get it",
    "start": "3065150",
    "end": "3072500"
  },
  {
    "text": "to go faster than JavaScript yeah there was pretty much bit twiddling going on in too much communication across like",
    "start": "3072500",
    "end": "3078380"
  },
  {
    "text": "what is the best possible way to speed up an application like that yeah it's it's it's ultimately there's actually",
    "start": "3078380",
    "end": "3084890"
  },
  {
    "text": "gonna be cases I don't know if I mentioned this sometimes I miss this but there's actually in cases right now where webassembly actually will be",
    "start": "3084890",
    "end": "3091250"
  },
  {
    "text": "slower than JavaScript because right now most of the virtual machines for webassembly don't do continuous",
    "start": "3091250",
    "end": "3099560"
  },
  {
    "text": "just-in-time compilation like learning okay you told me it was this it was this shape but it actually is this shape and",
    "start": "3099560",
    "end": "3105530"
  },
  {
    "text": "these sorts of things and there's certain tricks you can do with JavaScript after you've gotten it hot you know where you've detected this is",
    "start": "3105530",
    "end": "3111740"
  },
  {
    "text": "the pattern and this is the shape and you can compile those things away as far as specifics it depends on the browser",
    "start": "3111740",
    "end": "3117080"
  },
  {
    "text": "certain browsers like Mozilla's Firefox is by far right now currently the best and performance on on web assembly and",
    "start": "3117080",
    "end": "3124490"
  },
  {
    "text": "it's actually pretty easy to make a benchmark in there we're webassembly beats javascript in most things if",
    "start": "3124490",
    "end": "3130850"
  },
  {
    "text": "there's a particular thing that you're doing like what type of thing you're we can talk afterwards and I can give you some tips on improving that",
    "start": "3130850",
    "end": "3137690"
  },
  {
    "text": "performance the biggest issues that people come across is the bridge so if you're calling from JavaScript web",
    "start": "3137690",
    "end": "3142820"
  },
  {
    "text": "assembly boom you're already like almost negate like if that's the primary thing you do like if you make a micro",
    "start": "3142820",
    "end": "3148760"
  },
  {
    "text": "benchmark and on every iteration of the loop you call in from JavaScript or web assembly your benchmarks gonna show that",
    "start": "3148760",
    "end": "3154070"
  },
  {
    "text": "web assembly slower because what's actually slower is the bridge and Firefox has done a ton of work to",
    "start": "3154070",
    "end": "3159950"
  },
  {
    "text": "improve that but it's there's still work that needs to be done as well in them all right well we're actually at time",
    "start": "3159950",
    "end": "3166220"
  },
  {
    "text": "unfortunately come see it please come see Jay and thank you very much we have a talk on Kotlin up next",
    "start": "3166220",
    "end": "3173610"
  },
  {
    "text": "[Applause]",
    "start": "3173610",
    "end": "3177129"
  }
]