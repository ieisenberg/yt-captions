[
  {
    "text": "foreign [Music]",
    "start": "0",
    "end": "14249"
  },
  {
    "text": "hello and thank you for joining I want to talk today about curating the best",
    "start": "15240",
    "end": "20279"
  },
  {
    "text": "set of tooling to build effective and delightful developer experiences",
    "start": "20279",
    "end": "26779"
  },
  {
    "text": "here's a connected core graph of every one of our microservices each Edge",
    "start": "26880",
    "end": "31920"
  },
  {
    "text": "represents a service calling another service via the network we rely heavily",
    "start": "31920",
    "end": "36960"
  },
  {
    "text": "on standardization and automated tooling to help build test deploy and monitor",
    "start": "36960",
    "end": "43320"
  },
  {
    "text": "and iterate on each of these services I'm going to Showcase some of the tools that we've built to help us ship these",
    "start": "43320",
    "end": "50039"
  },
  {
    "text": "surfaces consistently and reliably to production hi I'm Sahar I'm one of the staff",
    "start": "50039",
    "end": "57120"
  },
  {
    "text": "Engineers from the platform group at monzo I work on the underlying platform powering the bank we think of all of the",
    "start": "57120",
    "end": "64080"
  },
  {
    "text": "complexities of scaling our infrastructure and building the right set of tools so engineers in other teams",
    "start": "64080",
    "end": "69780"
  },
  {
    "text": "can focus on building all the features that customers desire for all those who haven't heard about",
    "start": "69780",
    "end": "76380"
  },
  {
    "text": "monzo we are a fully licensed and regulated UK bank with no physical branches you manage all of your money",
    "start": "76380",
    "end": "83159"
  },
  {
    "text": "and finances via our app at monzo our goal is to make money work",
    "start": "83159",
    "end": "89520"
  },
  {
    "text": "for everyone we deal with the complexity to make money management easy for all of you",
    "start": "89520",
    "end": "95340"
  },
  {
    "text": "as I'm sure many will attest banking is a complex industry we undertake the",
    "start": "95340",
    "end": "100799"
  },
  {
    "text": "complexity in our systems to give you a better experience as a customer",
    "start": "100799",
    "end": "106880"
  },
  {
    "text": "we also have this really nice and striking hot Coral debit cards which you might have seen around they glow under",
    "start": "107700",
    "end": "113759"
  },
  {
    "text": "UV light when I joined monzo in mid-2018 one of",
    "start": "113759",
    "end": "120420"
  },
  {
    "text": "the initiatives that was kicking off internally was monzo chat we have quite",
    "start": "120420",
    "end": "125880"
  },
  {
    "text": "a lot of support folks to be a human point of contact for customer queries for things like replacing a card",
    "start": "125880",
    "end": "131879"
  },
  {
    "text": "reporting a transaction and much more we provided functionality within the monitor app to initiate a chat",
    "start": "131879",
    "end": "138660"
  },
  {
    "text": "conversation similar to what you have in any sort of messaging app",
    "start": "138660",
    "end": "143760"
  },
  {
    "text": "behind the scenes the live chat functionality was previously powered by intercom which is a software as a",
    "start": "143760",
    "end": "149819"
  },
  {
    "text": "service support tool it was really powerful and feature Rich and was integrated deeply into the monzo",
    "start": "149819",
    "end": "154980"
  },
  {
    "text": "experience each support person had access to a",
    "start": "154980",
    "end": "160260"
  },
  {
    "text": "custom internal browser extension which gave extra Monza specific superpowers as",
    "start": "160260",
    "end": "165480"
  },
  {
    "text": "a sidebar within intercom you can see it on the right there showing the transaction history for this",
    "start": "165480",
    "end": "171120"
  },
  {
    "text": "test user directly and seamlessly integrated into the intercom interface",
    "start": "171120",
    "end": "176700"
  },
  {
    "text": "with the monzo chat project we were writing our own in-house chat system and custom support tooling originally I was",
    "start": "176700",
    "end": "184379"
  },
  {
    "text": "skeptical there's plenty of vendors out there that provided this functionality really well with a ton of customizability it felt like a form of",
    "start": "184379",
    "end": "192120"
  },
  {
    "text": "undifferentiated heavy lifting a side quest that didn't really Advance our core mission of providing the best set",
    "start": "192120",
    "end": "198900"
  },
  {
    "text": "of banking functionality to our customers initially the monzo Trap project invested heavily in providing a base",
    "start": "198900",
    "end": "205620"
  },
  {
    "text": "level experience wrapped around a custom UI and back end messages could be sent back and forth the support folks could",
    "start": "205620",
    "end": "212879"
  },
  {
    "text": "do all of the base level actions they were able to do with intercom and the all useful sidebar was integrated right",
    "start": "212879",
    "end": "219060"
  },
  {
    "text": "into the experience a couple years in and on the same foundations monzo chat and the UIUC",
    "start": "219060",
    "end": "226739"
  },
  {
    "text": "above which we now call Biz Ops has allowed us to do some really Innovative things like experiment and integrate",
    "start": "226739",
    "end": "232920"
  },
  {
    "text": "machine learning to understand the customer conversation and suggest a few actions to our customer operations staff",
    "start": "232920",
    "end": "239340"
  },
  {
    "text": "which they can pick and choose having control of each component in the viewport allows us to provide contextual",
    "start": "239340",
    "end": "246440"
  },
  {
    "text": "actions for our customer operations folks what was previously just a chat product",
    "start": "246440",
    "end": "252840"
  },
  {
    "text": "has become much more interactive if a customer writes in to say that they've lost their card we can provide a",
    "start": "252840",
    "end": "259199"
  },
  {
    "text": "one-click action button to order a new card instantly and reassure the customer we had this really nice UI within the",
    "start": "259199",
    "end": "266639"
  },
  {
    "text": "bizops Hub and the amazing Engineers that worked on it spent a bunch of time early on writing modularity into the",
    "start": "266639",
    "end": "273240"
  },
  {
    "text": "system each of the modules is called a webler and a webler forms a task to be",
    "start": "273240",
    "end": "279780"
  },
  {
    "text": "conducted within bizops the benefit of this modular architecture is that weblets can be developed and deployed",
    "start": "279780",
    "end": "286139"
  },
  {
    "text": "independently teams aren't blocked on each other and a team can be responsible",
    "start": "286139",
    "end": "291419"
  },
  {
    "text": "for the software lifecycle of Their Own weblets this means that a UI and logic",
    "start": "291419",
    "end": "297120"
  },
  {
    "text": "components can be customized stitched together and hooked up to a backend system we've adopted the bizops hub for all",
    "start": "297120",
    "end": "304380"
  },
  {
    "text": "sorts of internal back office tasks and even things like peer reviewing certain engineering actions and monitoring",
    "start": "304380",
    "end": "310380"
  },
  {
    "text": "security vulnerabilities what was a strategic bet for more efficient customer operations tour has",
    "start": "310380",
    "end": "316860"
  },
  {
    "text": "naturally become a centralized company hub for task-oriented Automation in my",
    "start": "316860",
    "end": "322380"
  },
  {
    "text": "mind it's one of the coolest products I've worked with and a key Force multiplier for us as a company",
    "start": "322380",
    "end": "329039"
  },
  {
    "text": "now you're going to see this as a theme we've spent a lot of time building and operating our own tools from scratch and",
    "start": "329039",
    "end": "335520"
  },
  {
    "text": "leveraging open source tours with the Deep integration to help them fit into the monso ecosystem many of these tools",
    "start": "335520",
    "end": "341759"
  },
  {
    "text": "are built with modularity in mind we have a wide range of Tours that we",
    "start": "341759",
    "end": "347280"
  },
  {
    "text": "have built and provide to our Engineers things like service query which analyzes",
    "start": "347280",
    "end": "352620"
  },
  {
    "text": "a back-end service and extracts information on the various usages of",
    "start": "352620",
    "end": "357720"
  },
  {
    "text": "that particular service or this Droid Command that are Android Engineers have built to help with easier",
    "start": "357720",
    "end": "365160"
  },
  {
    "text": "testing and debugging of our Android app during development one of the most ubiquitous tools across",
    "start": "365160",
    "end": "371820"
  },
  {
    "text": "monzo is our monzo command line interface or the pound CLI as it's known internally",
    "start": "371820",
    "end": "377520"
  },
  {
    "text": "the monzo CLI allows Engineers to call our backend Services manage service",
    "start": "377520",
    "end": "383039"
  },
  {
    "text": "configuration schedule operations and interact with some of our infrastructure and much more",
    "start": "383039",
    "end": "389940"
  },
  {
    "text": "for example I can type a find command with a user ID and get all the information relating to that particular",
    "start": "389940",
    "end": "396600"
  },
  {
    "text": "user from our various internal apis I don't need to go look up what those apis",
    "start": "396600",
    "end": "401759"
  },
  {
    "text": "are or how the cord or what parameters are needed here I've used the same fine command but",
    "start": "401759",
    "end": "408240"
  },
  {
    "text": "with a merchant ID and I automatically get information about the merchant the CLI has all of that knowledge baked in",
    "start": "408240",
    "end": "415139"
  },
  {
    "text": "on what ideas are handled by which internal API sources Engineers add new",
    "start": "415139",
    "end": "420720"
  },
  {
    "text": "internal API sources all of the time and they are integrated automatically with the patent CLI",
    "start": "420720",
    "end": "428120"
  },
  {
    "text": "now these tools don't just function in isolation behind the scenes a lot of Machinery kicks in",
    "start": "428880",
    "end": "435660"
  },
  {
    "text": "on our back end we explicitly authenticate and authorize all of our requests to make sure that only data you",
    "start": "435660",
    "end": "441960"
  },
  {
    "text": "are allowed to access for the scope of your work is accessible we log all of these actions for auditing purposes",
    "start": "441960",
    "end": "448039"
  },
  {
    "text": "sensitive actions don't just automatically run they will create a task for review in our Biz Ops hub",
    "start": "448039",
    "end": "454860"
  },
  {
    "text": "if you are inclined you could construct these requests done by the CLI tool by",
    "start": "454860",
    "end": "460380"
  },
  {
    "text": "hand you can find the correct endpoint for the service get an authentication token construct the right call request",
    "start": "460380",
    "end": "466800"
  },
  {
    "text": "and to this day I still need to look up the right car syntax parse the output and rinse and repeat but imagine doing",
    "start": "466800",
    "end": "473460"
  },
  {
    "text": "that In the Heat of the Moment when you're debugging a complex incident Now using the CLI tooling we have",
    "start": "473460",
    "end": "480419"
  },
  {
    "text": "various modules to expose bits of functionality that might constitute a chain of requests for example",
    "start": "480419",
    "end": "486060"
  },
  {
    "text": "configuration management for our backend microservices is all handled via the parent CLI Engineers can set",
    "start": "486060",
    "end": "492960"
  },
  {
    "text": "configuration keys and request peer review for sensitive or critical bits of configuration",
    "start": "492960",
    "end": "498660"
  },
  {
    "text": "I see many power users proud of their command line history of adaptable shell commands however write a small tour and",
    "start": "498660",
    "end": "505259"
  },
  {
    "text": "everyone can contribute and everyone benefits we have many engineering adjacent folks using the pound CLI",
    "start": "505259",
    "end": "511379"
  },
  {
    "text": "internally because of its ease of use writing one of these interactive command",
    "start": "511379",
    "end": "517440"
  },
  {
    "text": "line tools doesn't need to be complicated here's a little mini qcon London 2022 CLI tool that I've written I",
    "start": "517440",
    "end": "524940"
  },
  {
    "text": "wanted to see all of the amazing speaker tracks at qcon on offer I'm using the built-in command package",
    "start": "524940",
    "end": "531120"
  },
  {
    "text": "within Python 3 which provides a framework for line oriented command interpreters",
    "start": "531120",
    "end": "538459"
  },
  {
    "text": "this gives a fully functioning interactive interpreter in under 10 lines of code",
    "start": "538980",
    "end": "544440"
  },
  {
    "text": "the framework is doing all of the heavy lifting adding more commands is a matter of adding another do underscore function",
    "start": "544440",
    "end": "551880"
  },
  {
    "text": "it's really really neat let's add two more commands to get the",
    "start": "551880",
    "end": "556980"
  },
  {
    "text": "list of speakers and the entire schedule for the conference I've hidden away some of the code to deal with HTML parsing of",
    "start": "556980",
    "end": "563399"
  },
  {
    "text": "the qcon web page but we can have a fully functional interactive command line interpreter in tens of lines of",
    "start": "563399",
    "end": "570360"
  },
  {
    "text": "code and voila we have the entire speaker list and schedule accessible easily",
    "start": "570360",
    "end": "577800"
  },
  {
    "text": "right from the command line a sense of competition for the qcon mobile app if you're interested in the full code for",
    "start": "577800",
    "end": "584040"
  },
  {
    "text": "this you can find it as the link at the bottom of this slide Frameworks like these exist for most programming",
    "start": "584040",
    "end": "590160"
  },
  {
    "text": "languages some might be built in like the command library for python 3.",
    "start": "590160",
    "end": "596180"
  },
  {
    "text": "let's move on to another one of our CLI tools this is a tool that we call shipper we deploy hundreds of times per",
    "start": "597420",
    "end": "604800"
  },
  {
    "text": "day every day shipper helps orchestrate the build and deployment step providing",
    "start": "604800",
    "end": "609899"
  },
  {
    "text": "a CLI to get code from the engineer's fingertips into production Engineers will typically develop their",
    "start": "609899",
    "end": "616620"
  },
  {
    "text": "change and get it peer reviewed by the owning team for that particular service or system once that code is approved and",
    "start": "616620",
    "end": "623700"
  },
  {
    "text": "all the various checks pass they can merge that code into the main line and use shipper to get it safely into",
    "start": "623700",
    "end": "630600"
  },
  {
    "text": "production now behind the scenes shipper is orchestrating quite a lot of things it",
    "start": "630600",
    "end": "637440"
  },
  {
    "text": "runs a bunch of security pre-checks making sure that the engineer has",
    "start": "637440",
    "end": "642660"
  },
  {
    "text": "followed all of the the process that they need to and all the CI checks have passed it then brings the service code",
    "start": "642660",
    "end": "649860"
  },
  {
    "text": "from GitHub into a clean build environment it builds the relevant container images pushes them to a",
    "start": "649860",
    "end": "656220"
  },
  {
    "text": "private container registry and sets up all the relevant kubernetes manifests and then kicks off a rolling deployment",
    "start": "656220",
    "end": "662700"
  },
  {
    "text": "and monitors that deployment to completion",
    "start": "662700",
    "end": "667220"
  },
  {
    "text": "all of this gives confidence to the engineers that the system is guiding them through a rollout of their change",
    "start": "668820",
    "end": "674880"
  },
  {
    "text": "we abstract away all of the infrastructure complexity of dealing with coordinating deployments dealing",
    "start": "674880",
    "end": "681240"
  },
  {
    "text": "with things like Docker and writing kubernetes yamo behind a nice looking CLI tour we can in the future change how",
    "start": "681240",
    "end": "688920"
  },
  {
    "text": "we do things behind the scenes as long as we maintain the same user experience",
    "start": "688920",
    "end": "695060"
  },
  {
    "text": "we see the abstraction of infrastructure as a marker for Success Engineers can",
    "start": "696019",
    "end": "701279"
  },
  {
    "text": "focus on building the product knowing that the tooling is taking care of the rest",
    "start": "701279",
    "end": "707040"
  },
  {
    "text": "a quick aside if you're building CLI tools consider writing them in a language like go or rust which gives you",
    "start": "707040",
    "end": "714120"
  },
  {
    "text": "a binary artifact being able to ship a binary and not have to worry about",
    "start": "714120",
    "end": "719519"
  },
  {
    "text": "python or Ruby versioning and dependencies especially for non-engineering folks means there's one",
    "start": "719519",
    "end": "725519"
  },
  {
    "text": "less barrier to entry for adoption there's a large ecosystem for CLI Tools",
    "start": "725519",
    "end": "730800"
  },
  {
    "text": "in both languages we use go for all of our services so naturally we write our tools and go to",
    "start": "730800",
    "end": "738200"
  },
  {
    "text": "now Monto has bettered heavily on microservices we have over 2000 microservices running in production many",
    "start": "738200",
    "end": "745620"
  },
  {
    "text": "of these microservices are small and context bound to a specific function this allows us to be flexible in scaling",
    "start": "745620",
    "end": "752940"
  },
  {
    "text": "our surfaces within our platform but also within our organization as we grow",
    "start": "752940",
    "end": "757980"
  },
  {
    "text": "teams and add more engineers these services are responsible for the entire operation of the bank everything",
    "start": "757980",
    "end": "765000"
  },
  {
    "text": "from connecting to payment networks moving money maintaining a ledger fighting fraud and financial crime and",
    "start": "765000",
    "end": "772440"
  },
  {
    "text": "providing world-class customer support we provide all of the apis to make money management easier and much much more",
    "start": "772440",
    "end": "780600"
  },
  {
    "text": "now we integrate with loads of payment providers and facilitators to provide our banking experience everything from",
    "start": "780600",
    "end": "786959"
  },
  {
    "text": "MasterCard in the fast payment scheme to Apple and Google pay the list keeps growing as we expand and we've been at",
    "start": "786959",
    "end": "793680"
  },
  {
    "text": "the Forefront of initiatives like open banking we're expanding to the US which",
    "start": "793680",
    "end": "798779"
  },
  {
    "text": "means Integrations with U.S payment networks each of these Integrations is unique and comes with its own set of",
    "start": "798779",
    "end": "805380"
  },
  {
    "text": "complexities and scaling challenges each one needs to be reliable and scalable based on the usage that we see",
    "start": "805380",
    "end": "813860"
  },
  {
    "text": "with such a wide variety of services you need a way to centralize information about what services exist what",
    "start": "814320",
    "end": "821760"
  },
  {
    "text": "functionality they Implement what team owns them how critical they are service dependencies and even having the ability",
    "start": "821760",
    "end": "829019"
  },
  {
    "text": "to Cluster services within business specific systems we're quite fortunate early on WE standardized on having a",
    "start": "829019",
    "end": "836880"
  },
  {
    "text": "single repository for all of our services even so we were missing a layer",
    "start": "836880",
    "end": "843000"
  },
  {
    "text": "of structured metadata encoding all of this information we had code owners defined within GitHub system and",
    "start": "843000",
    "end": "849899"
  },
  {
    "text": "criticality information as part of a service level readme and dependencies tracked via our metric system 18 months",
    "start": "849899",
    "end": "857220"
  },
  {
    "text": "ago we started looking into backstage backstage is a platform for building developer portals open sourced by the",
    "start": "857220",
    "end": "864240"
  },
  {
    "text": "folks at Spotify in a nutshell think of it as building a catalog of all the",
    "start": "864240",
    "end": "869399"
  },
  {
    "text": "software you have and having an interface to surface that catalog this can include things like libraries",
    "start": "869399",
    "end": "875519"
  },
  {
    "text": "scripts ml models and more for us to build this catalog each of our",
    "start": "875519",
    "end": "882360"
  },
  {
    "text": "microservices and libraries were seated with a descriptor file this is a yaml file that lives alongside the service",
    "start": "882360",
    "end": "888420"
  },
  {
    "text": "code which outlines the type of service the service tier system and owner information and much more this gave us",
    "start": "888420",
    "end": "895980"
  },
  {
    "text": "an opportunity to define a canonical source of information for all this metadata that was previously spread",
    "start": "895980",
    "end": "902519"
  },
  {
    "text": "across various files and systems to stop this data from getting out of sync we have a CI check that checks",
    "start": "902519",
    "end": "910139"
  },
  {
    "text": "whether all data sources agree failing if Corrections are needed this means we",
    "start": "910139",
    "end": "915240"
  },
  {
    "text": "can rely on this data being accurate we have a component in our platform that",
    "start": "915240",
    "end": "921540"
  },
  {
    "text": "slurps up all the descriptor files and populates the backstage portal with our software catalog from there we know all",
    "start": "921540",
    "end": "929339"
  },
  {
    "text": "the components that exist it's like a form of service Discovery but for humans",
    "start": "929339",
    "end": "934800"
  },
  {
    "text": "we've spent quite a lot of time customizing backstage to provide key information that's relevant for our",
    "start": "934800",
    "end": "941040"
  },
  {
    "text": "Engineers for example we showcase the deployment history service dependencies",
    "start": "941040",
    "end": "946220"
  },
  {
    "text": "documentation and provide useful links to dashboards and escalation points",
    "start": "946220",
    "end": "951660"
  },
  {
    "text": "we use popular backstage plugins like Tech docs to get our service level documentation into backstage this means",
    "start": "951660",
    "end": "958560"
  },
  {
    "text": "all the readme files are automatically available and rendered from markdown in a centralized location which is super",
    "start": "958560",
    "end": "964920"
  },
  {
    "text": "useful as an engineer one of the features I find the core list is the excellent score this is a custom feature",
    "start": "964920",
    "end": "971100"
  },
  {
    "text": "that we've developed to help grade each of our services amongst some baseline criteria we want to nudge engineers in",
    "start": "971100",
    "end": "978180"
  },
  {
    "text": "setting up alerts and dashboards where appropriate we provide nudges and useful information on how to achieve that it's",
    "start": "978180",
    "end": "985560"
  },
  {
    "text": "really satisfying to be able to take a piece of software from a needs Improvement score to excellent with",
    "start": "985560",
    "end": "992519"
  },
  {
    "text": "clear and actionable steps in these Excellence course we want to",
    "start": "992519",
    "end": "998459"
  },
  {
    "text": "encourage Engineers to have great observability of their services within a microservice itself at monzo",
    "start": "998459",
    "end": "1005000"
  },
  {
    "text": "Engineers focus on filling in the business Logic for their service Engineers are not rewriting core",
    "start": "1005000",
    "end": "1010639"
  },
  {
    "text": "abstractions like marshalling of data or HTTP servers or metrics for every single",
    "start": "1010639",
    "end": "1016220"
  },
  {
    "text": "new service that they add they can rely on a well-defined and tested set of libraries and tooling",
    "start": "1016220",
    "end": "1022639"
  },
  {
    "text": "all of these shared core layers provide batteries including metrics logging and tracing by default",
    "start": "1022639",
    "end": "1030520"
  },
  {
    "text": "every single go service using our libraries gets a wealth of metrics and alarms built for free Engineers can go",
    "start": "1030620",
    "end": "1037400"
  },
  {
    "text": "to a common fully templated dashboard from the minute their new service has deployed and see information about how",
    "start": "1037400",
    "end": "1043579"
  },
  {
    "text": "long requests are taking how many database queries are being done and much more",
    "start": "1043579",
    "end": "1049040"
  },
  {
    "text": "this also feeds into our alerts we have automated alerts for all services based",
    "start": "1049040",
    "end": "1054080"
  },
  {
    "text": "on common metrics alerts are automatically routed to the right team which owns that service thanks to our",
    "start": "1054080",
    "end": "1060500"
  },
  {
    "text": "software catalog feeding into the alerting system that means we have good visibility and accurate ownership across",
    "start": "1060500",
    "end": "1067520"
  },
  {
    "text": "our entire service graph currently we're rolling out a project to bring automated rollbacks to our",
    "start": "1067520",
    "end": "1073940"
  },
  {
    "text": "deployment system we can use these service level metrics being ingested into Prometheus to give us an indicator",
    "start": "1073940",
    "end": "1081080"
  },
  {
    "text": "of a service potentially misbehaving at a new revision and trigger an automated",
    "start": "1081080",
    "end": "1086419"
  },
  {
    "text": "rollback if the error rate spikes we do this by having gradual rollout tooling",
    "start": "1086419",
    "end": "1091940"
  },
  {
    "text": "deploying a single replica at a new version of a service and directing a portion of traffic to that new version",
    "start": "1091940",
    "end": "1098419"
  },
  {
    "text": "and comparing against our stable version then as we continue to roll out the new",
    "start": "1098419",
    "end": "1104539"
  },
  {
    "text": "version of the service gradually constantly checking our metrics until we're at 100 rollout",
    "start": "1104539",
    "end": "1110980"
  },
  {
    "text": "we're only using rpc-based metrics right now but we can potentially add other",
    "start": "1110980",
    "end": "1116419"
  },
  {
    "text": "service specific indicators in the future similarly we've spent a lot of time on",
    "start": "1116419",
    "end": "1122360"
  },
  {
    "text": "our backend to unify our RPC layer which every service uses to communicate with each other this means things like Trace",
    "start": "1122360",
    "end": "1129860"
  },
  {
    "text": "IDs are automatically propagated from there we can use Technologies like open",
    "start": "1129860",
    "end": "1135020"
  },
  {
    "text": "tracing and open Telemetry and open source tools Like Jaeger to provide Rich",
    "start": "1135020",
    "end": "1140240"
  },
  {
    "text": "traces of each service level Hopper our logs are also automatically indexed",
    "start": "1140240",
    "end": "1147200"
  },
  {
    "text": "by Trace ID into our centralized logging system allowing Engineers to filter request specific logging which is super",
    "start": "1147200",
    "end": "1154700"
  },
  {
    "text": "useful across service boundaries this is important insight for us because",
    "start": "1154700",
    "end": "1160340"
  },
  {
    "text": "a lot of services get involved in critical flows take for example a customer using their car to pay for",
    "start": "1160340",
    "end": "1166880"
  },
  {
    "text": "something quite a few distinct Services get involved in real time whenever you make a transaction to contribute to the",
    "start": "1166880",
    "end": "1173960"
  },
  {
    "text": "decision on whether a payment should be accepted we can use tracing information to",
    "start": "1173960",
    "end": "1179299"
  },
  {
    "text": "determine exactly what those services and our PCS were how long they contributed to the overall decision time",
    "start": "1179299",
    "end": "1185419"
  },
  {
    "text": "how many database queries were involved and much more info this tracing information is coming back",
    "start": "1185419",
    "end": "1191660"
  },
  {
    "text": "for a circle back into the development Loop we use tracing information to collect all of the services and code",
    "start": "1191660",
    "end": "1198080"
  },
  {
    "text": "paths involved for important critical processes within the company when Engineers propose a change to a",
    "start": "1198080",
    "end": "1205220"
  },
  {
    "text": "service we indicate via an automated comment on their pull request if their code is part of an important path",
    "start": "1205220",
    "end": "1212840"
  },
  {
    "text": "this indicator gives a useful nudge at development time to consider algorithm complexity and scalability of a change",
    "start": "1212840",
    "end": "1220640"
  },
  {
    "text": "it's one less bit of information for engineers to mentally retain especially since this core graph is constantly",
    "start": "1220640",
    "end": "1226820"
  },
  {
    "text": "evolving over time as we continue to add new features and capabilities",
    "start": "1226820",
    "end": "1232419"
  },
  {
    "text": "code generation is another key area we're focusing on rpcs can be specified",
    "start": "1233240",
    "end": "1238880"
  },
  {
    "text": "in protophiles with the protocol buffers language to define the request method request path and all the parameters",
    "start": "1238880",
    "end": "1245660"
  },
  {
    "text": "associated with an RPC we've written generators on top of the protocol buffers compiler to generate",
    "start": "1245660",
    "end": "1252380"
  },
  {
    "text": "the RPC code that embeds within our service HTTP libraries the definition can include validation checks which are",
    "start": "1252380",
    "end": "1259880"
  },
  {
    "text": "auto-generated beyond the standard data type inferences you get from protobuf what this means in the end is each",
    "start": "1259880",
    "end": "1266480"
  },
  {
    "text": "service is usually 500 to 1000 lines of actual business Logic the kind of size",
    "start": "1266480",
    "end": "1272179"
  },
  {
    "text": "that is really understandable for a group of Engineers during review earlier on I talked about the approval",
    "start": "1272179",
    "end": "1279919"
  },
  {
    "text": "system for our monzo CLI many rpcs are sensitive and shouldn't be run without",
    "start": "1279919",
    "end": "1285440"
  },
  {
    "text": "oversight especially in production some should be completely forbidden we encode",
    "start": "1285440",
    "end": "1291020"
  },
  {
    "text": "this information in our service definitions so these are explicit and also go through peer review our",
    "start": "1291020",
    "end": "1297320"
  },
  {
    "text": "authorization systems on the back end check these service definitions each time before a command is executed",
    "start": "1297320",
    "end": "1303340"
  },
  {
    "text": "verifying and logging each authorized request or generating a review if a",
    "start": "1303340",
    "end": "1308360"
  },
  {
    "text": "request needs secondary approval we use option fields to add an",
    "start": "1308360",
    "end": "1313460"
  },
  {
    "text": "authorization specific option within the RPC definition Engineers can specify",
    "start": "1313460",
    "end": "1318679"
  },
  {
    "text": "whether an RPC should require a secondary person to approve by default we run with rpcs being",
    "start": "1318679",
    "end": "1325700"
  },
  {
    "text": "completely block listed from being called by Engineers this option provides a nice and frictionless way to open up",
    "start": "1325700",
    "end": "1332480"
  },
  {
    "text": "an RPC whilst retaining review oversight and security",
    "start": "1332480",
    "end": "1337640"
  },
  {
    "text": "we're using the protocol buffers language to generate more than just RPC code we also generate queue handling",
    "start": "1337640",
    "end": "1344120"
  },
  {
    "text": "code for example within the service protofile Engineers can specify an event",
    "start": "1344120",
    "end": "1349340"
  },
  {
    "text": "payload definition as well as all of the validation criteria behind the scenes we have a protobuf",
    "start": "1349340",
    "end": "1356059"
  },
  {
    "text": "compiler plugin which generates Kafka consumer and producer logic handling the",
    "start": "1356059",
    "end": "1361159"
  },
  {
    "text": "marshalling and unmarshalling of the payload and interacting with our Kafka transport libraries to produce and",
    "start": "1361159",
    "end": "1367640"
  },
  {
    "text": "consume from a topic Engineers can work with strongly typed",
    "start": "1367640",
    "end": "1373820"
  },
  {
    "text": "objects and auto-generated function signatures and don't need to worry about the underlying transport for",
    "start": "1373820",
    "end": "1379400"
  },
  {
    "text": "infrastructure teams any bug fixes new features and performance improvements can be applied with ease",
    "start": "1379400",
    "end": "1386360"
  },
  {
    "text": "one of my colleagues taught me a really cool feature of get a couple of weeks back when working with generated code",
    "start": "1386360",
    "end": "1392600"
  },
  {
    "text": "sometimes rebasing your git Branch can cause a merge conflict if someone else has also modified the same generated",
    "start": "1392600",
    "end": "1399200"
  },
  {
    "text": "files gear has functionality to call a script in the event of a merge conflict to try",
    "start": "1399200",
    "end": "1405380"
  },
  {
    "text": "and resolve the conflict automatically this is called a git merge driver and can be specified in the dot git",
    "start": "1405380",
    "end": "1411380"
  },
  {
    "text": "extensions directory our script runs the protobuf generator on the already rebase",
    "start": "1411380",
    "end": "1416720"
  },
  {
    "text": "protophile which usually merges cleanly itself the result is the correct",
    "start": "1416720",
    "end": "1421820"
  },
  {
    "text": "generated code with all of the changes that you expect it's small things like these that are paper cuts in the",
    "start": "1421820",
    "end": "1427880"
  },
  {
    "text": "day-to-day development process by eliminating this small source of toil I never need to think about rebase",
    "start": "1427880",
    "end": "1433460"
  },
  {
    "text": "conflicts for generated protobuf code the behavior is well defined and understood and exactly what I expect",
    "start": "1433460",
    "end": "1439760"
  },
  {
    "text": "most important of all it's automatic at monzo the vast majority of",
    "start": "1439760",
    "end": "1445940"
  },
  {
    "text": "microservices are written in go and follow a consistent folder and file structure and pattern we have a service",
    "start": "1445940",
    "end": "1452840"
  },
  {
    "text": "generator that generates all of the boilerplate code in a single command being able to assume a consistent",
    "start": "1452840",
    "end": "1460039"
  },
  {
    "text": "structure allows us to write tools that can detect logic bugs and even rewrite code on the flow",
    "start": "1460039",
    "end": "1467240"
  },
  {
    "text": "one of my favorite tools is a tool called semcrap simgrap is an open source tool to write static analysis it's like",
    "start": "1467240",
    "end": "1474620"
  },
  {
    "text": "grep but understands a wide variety of programming languages say for example you want to find all of",
    "start": "1474620",
    "end": "1480860"
  },
  {
    "text": "the print statements that an engineer might have left behind for debugging you can write a simple rule without having",
    "start": "1480860",
    "end": "1486440"
  },
  {
    "text": "to go anywhere near the abstract syntax tree format of your programming language",
    "start": "1486440",
    "end": "1492380"
  },
  {
    "text": "static analysis is a powerful method to bring a code base towards a particular convention",
    "start": "1492380",
    "end": "1498280"
  },
  {
    "text": "introducing a new raw stops further additions of something you want to maybe deprecate or move away from you can then",
    "start": "1498280",
    "end": "1505460"
  },
  {
    "text": "track and focus on removing existing usages then make the raw 100 in force if",
    "start": "1505460",
    "end": "1512659"
  },
  {
    "text": "you find a particular code bug being the contributor to an outage consider adding that to it as a static analysis Raw it's",
    "start": "1512659",
    "end": "1519380"
  },
  {
    "text": "a great form of documentation and education as well as automatically catching that same bug in other",
    "start": "1519380",
    "end": "1525080"
  },
  {
    "text": "components on the fly when writing these tools make them as informative as",
    "start": "1525080",
    "end": "1530120"
  },
  {
    "text": "possible to make fixing issues a delay taking some time to write a code modification tool significantly lowers",
    "start": "1530120",
    "end": "1537679"
  },
  {
    "text": "the work needed and can be a real driver for large-scale refactoring across a code base",
    "start": "1537679",
    "end": "1543380"
  },
  {
    "text": "making these checks fast will encourage Engineers to pitch into many engineers at monster run these checks as pre-push",
    "start": "1543380",
    "end": "1550460"
  },
  {
    "text": "hooks because they get really fast feedback within a couple of seconds if a check is a mandatory but provides a",
    "start": "1550460",
    "end": "1557779"
  },
  {
    "text": "warning anyway Engineers may take that extra few minutes fixing an issue as part of their normal day-to-day work",
    "start": "1557779",
    "end": "1566440"
  },
  {
    "text": "combining static analysis with continuous integration allows for automation to catch bugs freeing up",
    "start": "1566720",
    "end": "1572900"
  },
  {
    "text": "Engineers to focus more energy on reviewing the Core Business logic during Port requests",
    "start": "1572900",
    "end": "1578659"
  },
  {
    "text": "even though we have over 2 000 microservices in a single repository we can run all of our unit tests and static",
    "start": "1578659",
    "end": "1585440"
  },
  {
    "text": "analysis checks in under 10 minutes for many changes it's significantly faster thanks to test caching and go and",
    "start": "1585440",
    "end": "1591679"
  },
  {
    "text": "some tooling that we've developed internally to analyze our services and determine which Services should be",
    "start": "1591679",
    "end": "1597799"
  },
  {
    "text": "tested it's something that we actively measure and track slow builds means you ship",
    "start": "1597799",
    "end": "1603620"
  },
  {
    "text": "less often I've spoken quite a bit about the wide",
    "start": "1603620",
    "end": "1609559"
  },
  {
    "text": "variety of tooling that we have now much of this didn't exist on day one some of the work that we've done such as",
    "start": "1609559",
    "end": "1615980"
  },
  {
    "text": "automated rollbacks and critical path analysis using traces are improvements that we've rolled out really recently",
    "start": "1615980",
    "end": "1621620"
  },
  {
    "text": "this investment is ongoing and is proportional to the size and scale of",
    "start": "1621620",
    "end": "1627020"
  },
  {
    "text": "our organization a lot of Baseline infrastructure I've mentioned like Sam grab and Prometheus",
    "start": "1627020",
    "end": "1633080"
  },
  {
    "text": "and Jaeger is all open source so you can build on the shoulders of others tools like rcli and shipper were internally",
    "start": "1633080",
    "end": "1640279"
  },
  {
    "text": "pet projects before they got adopted widely and broadened to become more flexible",
    "start": "1640279",
    "end": "1646960"
  },
  {
    "text": "in summary the tools you decide to build should be focused on automating the",
    "start": "1647960",
    "end": "1654020"
  },
  {
    "text": "practices of your organization for us internal tools like shipper allow us to",
    "start": "1654020",
    "end": "1659659"
  },
  {
    "text": "fully automate what would be a complex change management process in a highly regulated banking environment",
    "start": "1659659",
    "end": "1666200"
  },
  {
    "text": "we don't have a 20-step release procedure that humans have to follow because all of that is encoded into the",
    "start": "1666200",
    "end": "1672200"
  },
  {
    "text": "tour and that's what allows us to go fast by standardizing on a small set of",
    "start": "1672200",
    "end": "1678080"
  },
  {
    "text": "Technology choices and continuously improving these tools and abstractions we enable Engineers to focus on the",
    "start": "1678080",
    "end": "1684200"
  },
  {
    "text": "business problem at hand rather than on the underlying infrastructure it's this",
    "start": "1684200",
    "end": "1689419"
  },
  {
    "text": "consistency in how we write software that makes the investment in tooling compound you may not be able to get onto",
    "start": "1689419",
    "end": "1696919"
  },
  {
    "text": "a single programming language or even a single repository but implementing Concepts like developer portals static",
    "start": "1696919",
    "end": "1703820"
  },
  {
    "text": "analysis metrics and tracing can be Universal improvements for your organization",
    "start": "1703820",
    "end": "1710480"
  },
  {
    "text": "there's always something on fire or a product feature that needed to be released yesterday time spent on tolling",
    "start": "1710480",
    "end": "1717620"
  },
  {
    "text": "may not be actively visible one trick I found is the tree improvements in",
    "start": "1717620",
    "end": "1722840"
  },
  {
    "text": "tooling as product releases build excitement and energy encourage people to try the new things and even",
    "start": "1722840",
    "end": "1730039"
  },
  {
    "text": "contribute if they find bugs or issues do things that product managers do invest in developer research and Data",
    "start": "1730039",
    "end": "1736940"
  },
  {
    "text": "Insights to help justify the investment keep the developer experience at the Forefront and make your tools delightful",
    "start": "1736940",
    "end": "1743360"
  },
  {
    "text": "thank you for listening I'd love to hear about the tools that you've built and adopted and how they've worked out for",
    "start": "1743360",
    "end": "1748520"
  },
  {
    "text": "you",
    "start": "1748520",
    "end": "1750640"
  },
  {
    "text": "awesome presentations to hey uh many things to unpack a very timely",
    "start": "1753860",
    "end": "1759559"
  },
  {
    "text": "topic lots of great insights you definitely have much more than a spreadsheet to track",
    "start": "1759559",
    "end": "1767320"
  },
  {
    "text": "microservices as someone commented um would you like to start from the last",
    "start": "1767320",
    "end": "1773840"
  },
  {
    "text": "question we got um yeah absolutely",
    "start": "1773840",
    "end": "1779480"
  },
  {
    "text": "um so uh yes someone did talk about having an Excel spreadsheet as an",
    "start": "1779480",
    "end": "1784580"
  },
  {
    "text": "application catalog um you know when you're starting off a pretty small or if you've got like a",
    "start": "1784580",
    "end": "1789980"
  },
  {
    "text": "fixed set of services maybe that you can count on on two hands you know that is a really easy way to get started some",
    "start": "1789980",
    "end": "1796580"
  },
  {
    "text": "amount of documentation is better than no documentation uh and you know finding",
    "start": "1796580",
    "end": "1802100"
  },
  {
    "text": "out by surprise that a particular service exists or service dependency uh you know finding that up by surprise",
    "start": "1802100",
    "end": "1807919"
  },
  {
    "text": "during an incident is never nice so even having that written down is always a",
    "start": "1807919",
    "end": "1812960"
  },
  {
    "text": "good first step we found backstage to be really good when you get into the tens",
    "start": "1812960",
    "end": "1818960"
  },
  {
    "text": "to hundreds stage of of microservices we've got uh we're nearing the like a",
    "start": "1818960",
    "end": "1825860"
  },
  {
    "text": "thousand plus Mark um with the number of services that we have and we found backstage to be really really good at that as well it's a",
    "start": "1825860",
    "end": "1832580"
  },
  {
    "text": "fairly scalable and extensible platform and it's built much more more than for",
    "start": "1832580",
    "end": "1838100"
  },
  {
    "text": "cataloging services so we know people who are using it for machine learning models and and things like that and that",
    "start": "1838100",
    "end": "1843440"
  },
  {
    "text": "is the vision that Spotify who originally open sourced it um had to to promote uh and we really",
    "start": "1843440",
    "end": "1851179"
  },
  {
    "text": "want to explore that a little bit further Also regarding the shared functionality",
    "start": "1851179",
    "end": "1858200"
  },
  {
    "text": "um are you sharing it as a library as a service who is the owner of it yeah it's",
    "start": "1858200",
    "end": "1863960"
  },
  {
    "text": "a really good question um so I think it's a mixture of both so there's a component that gets embedded within the service binary itself so for",
    "start": "1863960",
    "end": "1871520"
  },
  {
    "text": "example we might embed a client library and that might be at different levels of functionality that client Library might",
    "start": "1871520",
    "end": "1878059"
  },
  {
    "text": "just be a thin API stub uh you know defined in proto buff and going over an RPC boundary or that could be a bit more",
    "start": "1878059",
    "end": "1885140"
  },
  {
    "text": "complex so for example uh you know if you're connecting to a Kafka cluster or something like that we might embed a",
    "start": "1885140",
    "end": "1891260"
  },
  {
    "text": "full Kafka Library connecting directly into that cluster um so I think it's it's a bit of a mixed",
    "start": "1891260",
    "end": "1897860"
  },
  {
    "text": "functionality what we have is each of our libraries and the services that are packing them are owned by a a particular",
    "start": "1897860",
    "end": "1905659"
  },
  {
    "text": "team uh you know it depends on the the team managing that level of infrastructure so for example our like",
    "start": "1905659",
    "end": "1911539"
  },
  {
    "text": "Cassandra libraries uh or like our database libraries is handled by team that manages the that set of",
    "start": "1911539",
    "end": "1918080"
  },
  {
    "text": "infrastructure uh you know like a group of folks who are managing the ex stateful layer uh as we like to call it",
    "start": "1918080",
    "end": "1925039"
  },
  {
    "text": "internally whereas we have a team that is focused on observability and deployment tooling uh that is managing",
    "start": "1925039",
    "end": "1931760"
  },
  {
    "text": "uh libraries associated with that and they also own the services that are backing that as well and in some cases",
    "start": "1931760",
    "end": "1938059"
  },
  {
    "text": "they're earning the infrastructure as well and you guys are structured the the",
    "start": "1938059",
    "end": "1943399"
  },
  {
    "text": "Spotify model tribes squads yeah um it's yeah quite a similar model",
    "start": "1943399",
    "end": "1949159"
  },
  {
    "text": "right uh where we have like squads that are managing uh a centralized set of infrastructure",
    "start": "1949159",
    "end": "1955159"
  },
  {
    "text": "um yeah so that everyone can benefit and we don't have different teams Reinventing the wheel",
    "start": "1955159",
    "end": "1961520"
  },
  {
    "text": "so a question from Jonathan uh how do you balance eager development of helpful",
    "start": "1961520",
    "end": "1967039"
  },
  {
    "text": "like helpful access tools with privacy concerns in the domain of banking how much of this is done by policy versus by",
    "start": "1967039",
    "end": "1974240"
  },
  {
    "text": "tooling enforcement yeah it's a really good concern so um",
    "start": "1974240",
    "end": "1980480"
  },
  {
    "text": "it depends on having like a very strict layer when it comes to accessing data so",
    "start": "1980480",
    "end": "1986480"
  },
  {
    "text": "a lot of stuff is uh being varied internally and tokenized from the moment",
    "start": "1986480",
    "end": "1991580"
  },
  {
    "text": "that it comes in so we have a secure definition within the systems that are",
    "start": "1991580",
    "end": "1996860"
  },
  {
    "text": "holding like customer level data or banking level data or transaction level data uh on uh like you know the fact",
    "start": "1996860",
    "end": "2003940"
  },
  {
    "text": "that this needs to be in like you know with some particular authorization policies and and things like that so we",
    "start": "2003940",
    "end": "2010000"
  },
  {
    "text": "scope the number of people who have access to it the where it becomes interesting is that there's a whole",
    "start": "2010000",
    "end": "2015399"
  },
  {
    "text": "category of data that doesn't need to fall under like you know strict uh like you know strict uh strict rules so for",
    "start": "2015399",
    "end": "2022120"
  },
  {
    "text": "example you know if you want to figure out how many transactions were there yesterday in McDonald's right you know",
    "start": "2022120",
    "end": "2027820"
  },
  {
    "text": "at that point it says aggregated data uh for example uh you know and anyone can",
    "start": "2027820",
    "end": "2033460"
  },
  {
    "text": "can look at that within the company so there's a balance between being like internally transparent and like you know",
    "start": "2033460",
    "end": "2039100"
  },
  {
    "text": "having access to data to do like a better job versus like you know making sure that you respect customer privacy",
    "start": "2039100",
    "end": "2046600"
  },
  {
    "text": "and the two don't need to be at odds you can encode both things in tooling uh so",
    "start": "2046600",
    "end": "2052240"
  },
  {
    "text": "for example you know being able to tag a particular request or a particular set of fields uh as being sensitive means",
    "start": "2052240",
    "end": "2059440"
  },
  {
    "text": "the tooling can enforce the fact that like you know not everyone should have access to this uh whereas uh you know",
    "start": "2059440",
    "end": "2065560"
  },
  {
    "text": "being able to say okay right this is aggregated data or this is data that decodes uh no particular Public Access",
    "start": "2065560",
    "end": "2072398"
  },
  {
    "text": "uh so nothing that is a private sorry uh you know makes it easy for everyone to",
    "start": "2072399",
    "end": "2077919"
  },
  {
    "text": "like have access and gain visibility and make better decisions so the two don't need to be at odds",
    "start": "2077919",
    "end": "2084118"
  },
  {
    "text": "got it and Michael is asking did you have to customize backstage at all to",
    "start": "2084119",
    "end": "2090878"
  },
  {
    "text": "fit it in with your processes um yes and yes we did uh so there was an",
    "start": "2090879",
    "end": "2099339"
  },
  {
    "text": "aspect of Backstage where we didn't have a very strong definition this was almost like a forcing function for us so the",
    "start": "2099339",
    "end": "2105820"
  },
  {
    "text": "whole idea of a service catalog um you know the like um all of the metadata was",
    "start": "2105820",
    "end": "2111339"
  },
  {
    "text": "spread across multiple different systems uh so you know we have uh dashboards in like our our monitoring system we have",
    "start": "2111339",
    "end": "2118599"
  },
  {
    "text": "you know uh the uh mapping between um services to like who what team earns",
    "start": "2118599",
    "end": "2124720"
  },
  {
    "text": "them in code owners and we had a different system for looking up uh how a team could be contacted and how they",
    "start": "2124720",
    "end": "2130540"
  },
  {
    "text": "could be alerted if a particular thing was going wrong and we had a few Integrations in the back end to like map",
    "start": "2130540",
    "end": "2136060"
  },
  {
    "text": "all of that together uh but it wasn't like you know one central place and the fact that we wanted to make this visible",
    "start": "2136060",
    "end": "2142480"
  },
  {
    "text": "all in backstage meant it was a forcing function to create a metadata catalog uh",
    "start": "2142480",
    "end": "2148000"
  },
  {
    "text": "you know a one system sort of raw them all uh as they say uh they get a way to",
    "start": "2148000",
    "end": "2153220"
  },
  {
    "text": "be able to aggregate all of this data and also the most important part was having a way to make sure that it's",
    "start": "2153220",
    "end": "2159940"
  },
  {
    "text": "consistent across all these different systems so for example sometimes the data is going to be like you know stored",
    "start": "2159940",
    "end": "2166180"
  },
  {
    "text": "in a variety of different systems you know we've got a configuration for alerting system you've got some",
    "start": "2166180",
    "end": "2171400"
  },
  {
    "text": "configuration in that page of Duty for example for paging people you've got configuration within GitHub code owners",
    "start": "2171400",
    "end": "2177339"
  },
  {
    "text": "for enforcement at a code level and you want to make sure that when you have a",
    "start": "2177339",
    "end": "2182560"
  },
  {
    "text": "like a catalog that is aggregating all of this data all the different sources agree that the catalog is is correct and",
    "start": "2182560",
    "end": "2192339"
  },
  {
    "text": "all the different sources and syncs of data are also correct because if there",
    "start": "2192339",
    "end": "2197800"
  },
  {
    "text": "is a disagreement you're going to end up with inconsistency and the moment you end up with inconsistency rectifying",
    "start": "2197800",
    "end": "2203079"
  },
  {
    "text": "that becomes infinitely harder and it can actually lead to bad outcomes for",
    "start": "2203079",
    "end": "2208780"
  },
  {
    "text": "example like a page being routed to a team that doesn't exist which might mean it might fall through the cracks or you",
    "start": "2208780",
    "end": "2215500"
  },
  {
    "text": "know we might have a significant delay in in addressing that page because it's been escalated to a team that doesn't",
    "start": "2215500",
    "end": "2222099"
  },
  {
    "text": "know how to handle that system right from the get-go so yeah that can become like you know that can that sort of like",
    "start": "2222099",
    "end": "2228400"
  },
  {
    "text": "Delayed Reaction Time can lead to bad consequences um so having that enforced from the get-go was uh something that we uh",
    "start": "2228400",
    "end": "2235480"
  },
  {
    "text": "strongly invested in once we had the software catalog building this system that could slurp that into backstage was",
    "start": "2235480",
    "end": "2241839"
  },
  {
    "text": "relatively easy because we actually built the catalog itself to model uh the",
    "start": "2241839",
    "end": "2247119"
  },
  {
    "text": "attributes that backstage promotes um around like having components and and",
    "start": "2247119",
    "end": "2252880"
  },
  {
    "text": "services and we added a few things like tears and um also the excellent score uh so those",
    "start": "2252880",
    "end": "2259300"
  },
  {
    "text": "are the ways that we added like you know backstage plugins and things like that the customizability of Backstage is quite a nice selling point uh you know",
    "start": "2259300",
    "end": "2266740"
  },
  {
    "text": "they've got a very nice plug-in system you can write uh plugins in in node.js and yeah it's fairly easy to get up and",
    "start": "2266740",
    "end": "2274359"
  },
  {
    "text": "running so staying on the topic of Backstage or probably more generally about tooling",
    "start": "2274359",
    "end": "2280720"
  },
  {
    "text": "you're making a big investment in various tools so Tim is asking",
    "start": "2280720",
    "end": "2285940"
  },
  {
    "text": "um you know how do you deal with deprecated tooling what if backstage were to stop active development would",
    "start": "2285940",
    "end": "2291940"
  },
  {
    "text": "you look in the final version maintaining the internally migrate your data to the next new tool",
    "start": "2291940",
    "end": "2298420"
  },
  {
    "text": "yeah absolutely well I think it depends on the on the tool a choice one of the",
    "start": "2298420",
    "end": "2303760"
  },
  {
    "text": "conscious decisions that we make as part of our strategy is to invest in tools that are open source so if we do want to",
    "start": "2303760",
    "end": "2310300"
  },
  {
    "text": "make further modifications then then we can but again that has to be a conscious Choice",
    "start": "2310300",
    "end": "2315880"
  },
  {
    "text": "um like you know we do look for active science like for example you know tools being actively maintained by an",
    "start": "2315880",
    "end": "2321820"
  },
  {
    "text": "organization or like a rich community and actually getting involved in that community so like with tours like backstage you know it's part of the cncf",
    "start": "2321820",
    "end": "2329440"
  },
  {
    "text": "which means a lot of different members getting involved a lot of folks have gotten invested into the backstage",
    "start": "2329440",
    "end": "2335440"
  },
  {
    "text": "tooling itself there's now been spin-off companies who are like you know giving you a hosted version of Backstage",
    "start": "2335440",
    "end": "2341260"
  },
  {
    "text": "um so like you know there is a rich ecosystem there's something that we actively look out for",
    "start": "2341260",
    "end": "2347440"
  },
  {
    "text": "um sometimes like you know when you make an investment in tour you do make a conscious decision uh to like have to",
    "start": "2347440",
    "end": "2355300"
  },
  {
    "text": "maintain it or lock it in uh if the tour um I didn't even think it's a question of if it's a matter when uh you know",
    "start": "2355300",
    "end": "2362440"
  },
  {
    "text": "when the tour has served its purpose or like you know the folks move on or there is like a better way of of going about",
    "start": "2362440",
    "end": "2368920"
  },
  {
    "text": "it you have to make a conscious choice to support or or move on one benefit for",
    "start": "2368920",
    "end": "2374920"
  },
  {
    "text": "us is um you know we we don't lock in the data you know the data within backstage is",
    "start": "2374920",
    "end": "2380260"
  },
  {
    "text": "quite ephemeral uh you know it's not uh the the destination for any concrete",
    "start": "2380260",
    "end": "2385660"
  },
  {
    "text": "amount of data most of the sources of data come from systems that we built internally or for example things that",
    "start": "2385660",
    "end": "2391480"
  },
  {
    "text": "we've demonstrated like the software catalog so um you know reintegrating those into a",
    "start": "2391480",
    "end": "2397599"
  },
  {
    "text": "different system for visibility uh becomes a little bit easier where you have sort of like being locked into a",
    "start": "2397599",
    "end": "2404260"
  },
  {
    "text": "particular scheme of a particular tour uh is where it gets a little bit complicated because now you've got to",
    "start": "2404260",
    "end": "2409300"
  },
  {
    "text": "have a way to like mutate your or transform your data into a different tour which might not support all of the",
    "start": "2409300",
    "end": "2416320"
  },
  {
    "text": "same functionality uh Chris is asking it sounds like your",
    "start": "2416320",
    "end": "2422380"
  },
  {
    "text": "teams are structured so that the product team product teams don't need to own the",
    "start": "2422380",
    "end": "2428320"
  },
  {
    "text": "entire devops process but instead rely on many separate themes to cover all capabilities is this correct and if so",
    "start": "2428320",
    "end": "2435040"
  },
  {
    "text": "have you found issues with Team dependencies slowing you down yeah it's a really good question",
    "start": "2435040",
    "end": "2441579"
  },
  {
    "text": "um so the uh the structure that Chris is assuming is correct we have a",
    "start": "2441579",
    "end": "2447400"
  },
  {
    "text": "centralized team that manages the state of infrastructure um I think there there's uh there's a",
    "start": "2447400",
    "end": "2454839"
  },
  {
    "text": "phrase here which might actually be quite poignant which is uh you know it's like a Slowdown to speed up",
    "start": "2454839",
    "end": "2461020"
  },
  {
    "text": "um so yes there are cases where for example a team could have moved faster if they had full control of the of the",
    "start": "2461020",
    "end": "2467500"
  },
  {
    "text": "infrastructure or if they could make their own infrastructure choices but by building on centralized toiling there's",
    "start": "2467500",
    "end": "2474400"
  },
  {
    "text": "a lot of things that are abstracted away from them let me give you a particular example if every team sort of wrote",
    "start": "2474400",
    "end": "2479680"
  },
  {
    "text": "their own infrastructure that means that team has to continue to maintain and uh you know take that infrastructure",
    "start": "2479680",
    "end": "2486099"
  },
  {
    "text": "through Audits and you know make sure that it's like a fully like security conscious and and everything like that",
    "start": "2486099",
    "end": "2492820"
  },
  {
    "text": "so um there's a lot of additional overhead that they'd have to uh that",
    "start": "2492820",
    "end": "2498460"
  },
  {
    "text": "have to like take on on as part of responsibility and you know that's responsibility that being able to",
    "start": "2498460",
    "end": "2503680"
  },
  {
    "text": "amortize because we have a centralized team and that means we have a centralized group of people who are doing the like you know the risk",
    "start": "2503680",
    "end": "2510400"
  },
  {
    "text": "assessments and you know speaking with the regulator and staying on top of uh like all the various things that we need",
    "start": "2510400",
    "end": "2515740"
  },
  {
    "text": "to do so for example you know when we have a cve come in uh we can have a team that does patching on one set of",
    "start": "2515740",
    "end": "2522940"
  },
  {
    "text": "infrastructure uh that like you know everyone is aware of we have a defined contract on how we would like roll that",
    "start": "2522940",
    "end": "2529180"
  },
  {
    "text": "sort of infrastructure you know uh when for example log 4J happened uh the log for J vulnerability within Java we were",
    "start": "2529180",
    "end": "2536320"
  },
  {
    "text": "able to enumerate all of our Java applications that we have running within our platform uh stuff that we run and",
    "start": "2536320",
    "end": "2542200"
  },
  {
    "text": "stuff that is hosted by Third parties and have a centralized team be dedicated to incident response and patching of",
    "start": "2542200",
    "end": "2549460"
  },
  {
    "text": "their systems because there was a deep understanding uh and a deep contract within one centralized platform and that",
    "start": "2549460",
    "end": "2555700"
  },
  {
    "text": "expedited our our patching process and yeah data applies for many other different types of vulnerabilities as",
    "start": "2555700",
    "end": "2562240"
  },
  {
    "text": "well so yeah like you know um there are aspects where teams could move",
    "start": "2562240",
    "end": "2568119"
  },
  {
    "text": "potentially faster but having a centralized platforms uh means that the",
    "start": "2568119",
    "end": "2574300"
  },
  {
    "text": "whole organization moves faster as a result which is something that we are prioritizing for we're not prioritizing",
    "start": "2574300",
    "end": "2580900"
  },
  {
    "text": "uh local team efficiency but rather organizational efficiency",
    "start": "2580900",
    "end": "2587160"
  },
  {
    "text": "so the the your reply was a nice segue to Adriana's question about how do you",
    "start": "2587680",
    "end": "2592900"
  },
  {
    "text": "choose the pre-built tooling you add to the monzo ecosystem do you have a test protocol of the tool Choice before it is",
    "start": "2592900",
    "end": "2600640"
  },
  {
    "text": "generalized to all teams that's a really good question um",
    "start": "2600640",
    "end": "2605980"
  },
  {
    "text": "yes and no um we're not too rigid about um what tools we choose uh you know we",
    "start": "2605980",
    "end": "2613960"
  },
  {
    "text": "encourage folks to experiment and because the the tooling system is forever changing you know there's always",
    "start": "2613960",
    "end": "2619660"
  },
  {
    "text": "new tools coming on board uh you know new systems being developed uh so you've got to have some amount of freedom to be",
    "start": "2619660",
    "end": "2625720"
  },
  {
    "text": "able to experiment I think where we uh where we strike the balance is um we provide a rich staging environment which",
    "start": "2625720",
    "end": "2632020"
  },
  {
    "text": "is uh apart from the data representative of production so for example we have the",
    "start": "2632020",
    "end": "2637420"
  },
  {
    "text": "same infrastructure components we have the same tools being used uh we have the same software being deployed it's just",
    "start": "2637420",
    "end": "2643660"
  },
  {
    "text": "at a smaller scale and not with production data which provides a rich sandbox to experiment once the",
    "start": "2643660",
    "end": "2650500"
  },
  {
    "text": "experimentation has yielded results and folks are happy with the results and they want to sort of spread it out",
    "start": "2650500",
    "end": "2656260"
  },
  {
    "text": "further uh you know by the point that is actually becoming production ready uh or we're making we want to make a conscious",
    "start": "2656260",
    "end": "2662859"
  },
  {
    "text": "significant investment in that particular uh set of tooling or or even",
    "start": "2662859",
    "end": "2668079"
  },
  {
    "text": "an infrastructure choice or even a particular design that's the point where we step back and uh you know take",
    "start": "2668079",
    "end": "2673240"
  },
  {
    "text": "something through either an architectural review if it's going to be a large sweeping change or write a proposal there's like a rich history or",
    "start": "2673240",
    "end": "2680920"
  },
  {
    "text": "proposals um uh written down which are like decision logs almost or like",
    "start": "2680920",
    "end": "2686920"
  },
  {
    "text": "architectural decision records which document why we've chosen a particular tour what potatoes we may have looked at",
    "start": "2686920",
    "end": "2694180"
  },
  {
    "text": "and yeah there could be conscious reasons why we've chosen a particular tour of another so for example you know",
    "start": "2694180",
    "end": "2700839"
  },
  {
    "text": "we may pick a tour with uh you know one of the vendors that we've already onboarded uh like in our particular tool",
    "start": "2700839",
    "end": "2706359"
  },
  {
    "text": "that is provided by AWS uh because it fits nicely within our our hosted ecosystem uh rather than there might be",
    "start": "2706359",
    "end": "2713200"
  },
  {
    "text": "an up a more optimal tour provided by Microsoft uh which may not we may not choose because uh you know we're not on",
    "start": "2713200",
    "end": "2721300"
  },
  {
    "text": "Azure at the moment um so everything is a conscious balanced decision",
    "start": "2721300",
    "end": "2726339"
  },
  {
    "text": "um all the choices we make you know folks need to maintain uh so you know something that we actively look out for",
    "start": "2726339",
    "end": "2731800"
  },
  {
    "text": "when we are reviewing these decision logs uh like you know is there something that we can feasibly maintain uh for the",
    "start": "2731800",
    "end": "2738400"
  },
  {
    "text": "long run um and you know what is the reversibility cost so for example if we",
    "start": "2738400",
    "end": "2743619"
  },
  {
    "text": "wanted to change the tour or change the architecture in the future uh you know is it going to require significant",
    "start": "2743619",
    "end": "2749680"
  },
  {
    "text": "investment both from a technological point of view you but also from a human point of view if we're encoding for",
    "start": "2749680",
    "end": "2756220"
  },
  {
    "text": "example a particular practice with all of our Engineers getting Engineers to move on to a new thing uh you know that",
    "start": "2756220",
    "end": "2763839"
  },
  {
    "text": "might be quite a quite a substantial Leap Forward but if we Define good interfaces and Abstract the the thing",
    "start": "2763839",
    "end": "2770680"
  },
  {
    "text": "that is back in getaway we could change the backing implementation uh really easily and potentially like under the",
    "start": "2770680",
    "end": "2777099"
  },
  {
    "text": "covers um and yeah they can have a much easier experience",
    "start": "2777099",
    "end": "2783160"
  },
  {
    "text": "so Christopher shared with us that you have been open sourcing uh some of your",
    "start": "2783160",
    "end": "2790260"
  },
  {
    "text": "wrapper libraries and you demoed a bunch of tools the bouncy Ali the shippercla",
    "start": "2790260",
    "end": "2797980"
  },
  {
    "text": "um what type of Open Source contribution does monzo have yeah um we have uh open sourced a lot of",
    "start": "2797980",
    "end": "2805359"
  },
  {
    "text": "our like RPC based tooling um and also the things that we use for uh logging",
    "start": "2805359",
    "end": "2810400"
  },
  {
    "text": "and and some of our libraries around like Cassandra and and stuff like that as well uh so yeah definitely check out",
    "start": "2810400",
    "end": "2816160"
  },
  {
    "text": "our open source repos at github.com monzo uh if you're interested there",
    "start": "2816160",
    "end": "2821200"
  },
  {
    "text": "um we also have a quite a lot of blog posts about how we do things internally uh you know there's not there's some",
    "start": "2821200",
    "end": "2826900"
  },
  {
    "text": "stuff that we can't open source unfortunately uh because it's embedded quite deeply into how we write services",
    "start": "2826900",
    "end": "2832119"
  },
  {
    "text": "and systems so those things uh can't be disentangled with the rest of our platform but we document them really",
    "start": "2832119",
    "end": "2838900"
  },
  {
    "text": "heavily and we put them out in the open uh so we do have a Blog if you want to see some of our like architectural",
    "start": "2838900",
    "end": "2844300"
  },
  {
    "text": "designs and if you've got any questions then uh yeah I'm happy to answer about any of our any of our elect platform or",
    "start": "2844300",
    "end": "2851200"
  },
  {
    "text": "tooling components awesome so we we are running out of time but we are not running out of questions",
    "start": "2851200",
    "end": "2858119"
  },
  {
    "text": "uh so we'd love to continue the conversation in the hangout with a speaker Zoom room",
    "start": "2858119",
    "end": "2863740"
  },
  {
    "text": "uh so there is a link everyone on the schedule uh right after his presentation",
    "start": "2863740",
    "end": "2869500"
  },
  {
    "text": "that says uh hang out with a speaker it's a zoom room and we can continue the",
    "start": "2869500",
    "end": "2874720"
  },
  {
    "text": "discussion there thank you so much to Haley thank you",
    "start": "2874720",
    "end": "2880500"
  },
  {
    "text": "[Music] thank you",
    "start": "2882860",
    "end": "2889619"
  }
]