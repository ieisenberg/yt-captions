[
  {
    "text": "foreign [Music]",
    "start": "0",
    "end": "16340"
  },
  {
    "text": "this is data versioning at scale chaos and Chaos management",
    "start": "16340",
    "end": "22939"
  },
  {
    "text": "so um when I was 23 years old I was a master's student and I held a student",
    "start": "25160",
    "end": "32279"
  },
  {
    "text": "position in an Israeli networking company called teller I was a bi analyst within the operations",
    "start": "32279",
    "end": "38399"
  },
  {
    "text": "department and I was working on modeling the company's inventory",
    "start": "38399",
    "end": "43500"
  },
  {
    "text": "inventory comes with with very high costs and it was very important to optimize",
    "start": "43500",
    "end": "49200"
  },
  {
    "text": "and it so happened that I was invited to observe a meeting that included the",
    "start": "49200",
    "end": "54300"
  },
  {
    "text": "company's management together with a few consultants and of course in the presence of the CEO",
    "start": "54300",
    "end": "59820"
  },
  {
    "text": "I had didn't have a seat at the table I was just sitting with my back to the wall with all kinds of people sitting in",
    "start": "59820",
    "end": "65158"
  },
  {
    "text": "front of me and I was listening to the meeting at some point the CEO said",
    "start": "65159",
    "end": "70260"
  },
  {
    "text": "something about since our inventory costs are mainly due",
    "start": "70260",
    "end": "75780"
  },
  {
    "text": "to extremely high cost components and that is something that I knew to not",
    "start": "75780",
    "end": "82680"
  },
  {
    "text": "be true so I just stood up and said well I'm afraid 80 percent of our costs",
    "start": "82680",
    "end": "89759"
  },
  {
    "text": "are actually from low cost High quantity items",
    "start": "89759",
    "end": "96659"
  },
  {
    "text": "so he looked at me he didn't know who I was of course and said I believe you're wrong",
    "start": "96659",
    "end": "101880"
  },
  {
    "text": "to which I replied I believe I'm not so he said okay I'll bet you a box of",
    "start": "101880",
    "end": "107820"
  },
  {
    "text": "chocolates I said fine as long as dark chocolate with nuts I'm going for it we sealed the",
    "start": "107820",
    "end": "114540"
  },
  {
    "text": "deal he did not take a decision according to the data that he had at that moment he",
    "start": "114540",
    "end": "120479"
  },
  {
    "text": "checked the data two days later he changed his decision and I had a lovely",
    "start": "120479",
    "end": "125640"
  },
  {
    "text": "box of chocolates on my desk and I'm telling you that because that was a moment where I realized how",
    "start": "125640",
    "end": "132959"
  },
  {
    "text": "important it is to understand the data and to be able to bring the right data at the right moment to the people who",
    "start": "132959",
    "end": "140340"
  },
  {
    "text": "take the decisions and I've never left the world of data since",
    "start": "140340",
    "end": "145500"
  },
  {
    "text": "and I have seen the world of data evolving from 10 15 data sets on a relational database",
    "start": "145500",
    "end": "152879"
  },
  {
    "text": "which is what I had then to petabytes of data over object storages distributed compute and so on",
    "start": "152879",
    "end": "161640"
  },
  {
    "text": "and so on we'll talk about all that in a second and I have realized that when we had",
    "start": "161640",
    "end": "170879"
  },
  {
    "text": "those small data sets simulation database we had the safety of managing complexities in data such as the",
    "start": "170879",
    "end": "177840"
  },
  {
    "text": "transient nature of data in a much better way than we have today",
    "start": "177840",
    "end": "184319"
  },
  {
    "text": "and since data is transient and with having a lot of data",
    "start": "184319",
    "end": "190260"
  },
  {
    "text": "our world today is extremely chaotic and let's talk about how we stabilize",
    "start": "190260",
    "end": "198060"
  },
  {
    "text": "that world and make it manageable foreign so a little more about myself so",
    "start": "198060",
    "end": "205980"
  },
  {
    "text": "I was at my masters then I have finished a PhD in mathematics at Tel Aviv University and I started my career as an",
    "start": "205980",
    "end": "213900"
  },
  {
    "text": "algorithms developer and later on moved to managing people four times VPR and d",
    "start": "213900",
    "end": "219659"
  },
  {
    "text": "and CTO in Israeli startup companies the last of which a similar web that was a",
    "start": "219659",
    "end": "225120"
  },
  {
    "text": "data company and I am now the CEO of Traverse the company behind the open source project lakefest",
    "start": "225120",
    "end": "233239"
  },
  {
    "text": "and as I said I would like to talk about the complexity that comes with the fact",
    "start": "234500",
    "end": "240840"
  },
  {
    "text": "that the data is transient so as I mentioned earlier the amount of data grew the computation is",
    "start": "240840",
    "end": "249140"
  },
  {
    "text": "distributed that comes with a lot of complexity so there are a lot of complexities in the world of data now in",
    "start": "249140",
    "end": "256799"
  },
  {
    "text": "the modern time but something stays the same and that is that the data changes and if you are now",
    "start": "256799",
    "end": "264419"
  },
  {
    "text": "thinking of course the data changes there is additional data every day then this is not what I mean the",
    "start": "264419",
    "end": "271080"
  },
  {
    "text": "historical data that we have accumulated might change it might change once it",
    "start": "271080",
    "end": "276240"
  },
  {
    "text": "might change many times and this complexity is something that is becoming harder and harder to manage",
    "start": "276240",
    "end": "283080"
  },
  {
    "text": "with the amounts of data and the amount of data sources that we have let's look at a few examples so that I",
    "start": "283080",
    "end": "290100"
  },
  {
    "text": "can convince you that the data indeed changes so the first one is that at the time of",
    "start": "290100",
    "end": "296759"
  },
  {
    "text": "the first calculation as you can see on the left hand side some of the data is missing you can see",
    "start": "296759",
    "end": "303720"
  },
  {
    "text": "the null values in the price column right so it just we did not have the prices of those",
    "start": "303720",
    "end": "310680"
  },
  {
    "text": "products at the the time that we have done the calculation but this data was",
    "start": "310680",
    "end": "316919"
  },
  {
    "text": "late but after a few days or a few weeks it had arrived with the right value that was true in",
    "start": "316919",
    "end": "324479"
  },
  {
    "text": "the history where we actually recorded the table so we can now go back and backfill this",
    "start": "324479",
    "end": "330780"
  },
  {
    "text": "information and instead of the null values have the values that we have missed earlier this means that the data",
    "start": "330780",
    "end": "338820"
  },
  {
    "text": "has changed from the original version that we had of it",
    "start": "338820",
    "end": "344460"
  },
  {
    "text": "example would be the case where we are fixing a mistake so we knew of",
    "start": "344460",
    "end": "352440"
  },
  {
    "text": "values to the data but for some reason those while the values were incorrect",
    "start": "352440",
    "end": "358020"
  },
  {
    "text": "either a human error or someone typed the wrong value maybe a wrong",
    "start": "358020",
    "end": "363180"
  },
  {
    "text": "calculation maybe above in the logic that collects the data but once we have",
    "start": "363180",
    "end": "368639"
  },
  {
    "text": "fixed that we will be able to also fix the uh",
    "start": "368639",
    "end": "375240"
  },
  {
    "text": "values that were incorrect so some of the values were correct they would stay the same and other values would be",
    "start": "375240",
    "end": "382740"
  },
  {
    "text": "replaced by the correct values because they were influenced from the bug another example would be a case where",
    "start": "382740",
    "end": "390300"
  },
  {
    "text": "the data that we had originally doesn't come from collecting data but rather",
    "start": "390300",
    "end": "396000"
  },
  {
    "text": "from a certain calculation maybe an estimation of A Sort so we have estimated the price using a certain",
    "start": "396000",
    "end": "402419"
  },
  {
    "text": "algorithm and then we realized there's a better logic of estimating the price and we",
    "start": "402419",
    "end": "408539"
  },
  {
    "text": "will Implement that logic back on historical data to get better estimations of the past as well once we",
    "start": "408539",
    "end": "415800"
  },
  {
    "text": "do we do that the entire data set we had will now change and be a different",
    "start": "415800",
    "end": "422940"
  },
  {
    "text": "hopefully better version of the data so those are examples if we want to",
    "start": "422940",
    "end": "429000"
  },
  {
    "text": "unstructured data examples which is extremely important we do a lot of work on semi-structured and unstructured data",
    "start": "429000",
    "end": "435419"
  },
  {
    "text": "I think for example about pictures so you had a training set for a computer",
    "start": "435419",
    "end": "441479"
  },
  {
    "text": "vision algorithm and you were using a set of pictures that represent a good",
    "start": "441479",
    "end": "447720"
  },
  {
    "text": "sample of the world that you would like to develop the machine learning model over",
    "start": "447720",
    "end": "453060"
  },
  {
    "text": "right now you have decided to replace some of those pictures with other pictures that",
    "start": "453060",
    "end": "459720"
  },
  {
    "text": "represent the same point in the space you wish to to create but they do it in",
    "start": "459720",
    "end": "466259"
  },
  {
    "text": "a better way so some of the pictures remain the same and some you have decided to replace",
    "start": "466259",
    "end": "472500"
  },
  {
    "text": "another case would be that you may have decided to look at the problem from a different resolution same picture but",
    "start": "472500",
    "end": "478860"
  },
  {
    "text": "different properties of the picture and so on",
    "start": "478860",
    "end": "484160"
  },
  {
    "text": "so all these changes that happen in the data make it challenging for us",
    "start": "484620",
    "end": "494400"
  },
  {
    "text": "to do the simplest things that we need to do when we work with data",
    "start": "494400",
    "end": "499560"
  },
  {
    "text": "so first we want to collaborate and if we want to collaborate we need to be able to talk about a single source of",
    "start": "499560",
    "end": "505560"
  },
  {
    "text": "Truth and if we change the historical data we now need to talk about which version of",
    "start": "505560",
    "end": "512159"
  },
  {
    "text": "the data are we discussing and if we need uh to understand what",
    "start": "512159",
    "end": "518640"
  },
  {
    "text": "data set created what result in the past we have to have lineage if data changes",
    "start": "518640",
    "end": "524339"
  },
  {
    "text": "over time then lineage becomes more complex we want to have reproducibility",
    "start": "524339",
    "end": "529500"
  },
  {
    "text": "if we run the same code over the same data we expect to get the same result we",
    "start": "529500",
    "end": "536220"
  },
  {
    "text": "need to know what was the data set and we need to have it available for us in order to run this and get",
    "start": "536220",
    "end": "543420"
  },
  {
    "text": "reproducibility we need to have cross-collection consistency so if we updated one table",
    "start": "543420",
    "end": "550320"
  },
  {
    "text": "with better historical data or different historical data we would want to make",
    "start": "550320",
    "end": "555899"
  },
  {
    "text": "sure that all tables that are lineage to it or depend on it are also immediately",
    "start": "555899",
    "end": "561839"
  },
  {
    "text": "anatomically influenced but by that change in a way that allows us to view the history in a consistent way",
    "start": "561839",
    "end": "570000"
  },
  {
    "text": "all those things are things that we expect to do and if we do not have the right infrastructure it would be",
    "start": "570000",
    "end": "576120"
  },
  {
    "text": "extremely painful manual and error-prone to do",
    "start": "576120",
    "end": "581839"
  },
  {
    "text": "but the world had already solved the problem of how to deal with sets of data",
    "start": "582260",
    "end": "589200"
  },
  {
    "text": "that changed by a lot of people right it's called Version Control yes it was",
    "start": "589200",
    "end": "595019"
  },
  {
    "text": "built for code it wasn't built for data and it means that if we're going to try and use git over our data we would",
    "start": "595019",
    "end": "601800"
  },
  {
    "text": "probably fail but the notion of version controlling our data the way we Version Control our",
    "start": "601800",
    "end": "609180"
  },
  {
    "text": "code would take the scales of the transient data that I hope I've",
    "start": "609180",
    "end": "614339"
  },
  {
    "text": "convinced you exists and really manage it properly",
    "start": "614339",
    "end": "619920"
  },
  {
    "text": "so we are looking to have alternatives to get but for data",
    "start": "619920",
    "end": "627180"
  },
  {
    "text": "so the 23 year old me would probably tell you I'm not sure what the problem is",
    "start": "627180",
    "end": "632519"
  },
  {
    "text": "remember I was managing five tables in a relational database so I would just add to each row in in my",
    "start": "632519",
    "end": "641459"
  },
  {
    "text": "table the time where it was relevant for right so this value I have received in the",
    "start": "641459",
    "end": "650579"
  },
  {
    "text": "this the date that is specified in the four column and it had stopped being relevant on the",
    "start": "650579",
    "end": "658980"
  },
  {
    "text": "date that I would put into the two column right so this is uh reportedly",
    "start": "658980",
    "end": "666000"
  },
  {
    "text": "referred to sorry in literature as the bi-temporal method and it allows us to",
    "start": "666000",
    "end": "671760"
  },
  {
    "text": "know for each row of the data for what time it was relevant",
    "start": "671760",
    "end": "677279"
  },
  {
    "text": "so it seems simple but even in five tables it's it's quite annoying because if the tables are connected to one",
    "start": "677279",
    "end": "684660"
  },
  {
    "text": "another and they're not independent then if we have relevance of time to a row in",
    "start": "684660",
    "end": "691500"
  },
  {
    "text": "one table we need to be able to drag that all along our process of building the",
    "start": "691500",
    "end": "697980"
  },
  {
    "text": "tables and the views that depend on that table to make sure that everything is updated according to certain dates now",
    "start": "697980",
    "end": "705660"
  },
  {
    "text": "of course the dates would now become the minimum the maximum there whatever it is",
    "start": "705660",
    "end": "710700"
  },
  {
    "text": "needed between all the timestamps that we have on all the tables and all the",
    "start": "710700",
    "end": "716160"
  },
  {
    "text": "values so it is not simple at all to Cascade that information into a more complex",
    "start": "716160",
    "end": "722339"
  },
  {
    "text": "logic that runs with the tables but it is possible if you have a handful of",
    "start": "722339",
    "end": "728100"
  },
  {
    "text": "tables and a handful of processes the larger things get the more complex it is",
    "start": "728100",
    "end": "734700"
  },
  {
    "text": "and the better it is to try and use an infrastructure such as git",
    "start": "734700",
    "end": "741540"
  },
  {
    "text": "so let's review a few of uh the solutions that exist today that provide",
    "start": "741540",
    "end": "747000"
  },
  {
    "text": "the ability to Version Control Data the way you get version controls code",
    "start": "747000",
    "end": "753779"
  },
  {
    "text": "and let's start really with the database option so let's say I do run",
    "start": "753779",
    "end": "759079"
  },
  {
    "text": "my data over um a relational database",
    "start": "759079",
    "end": "765839"
  },
  {
    "text": "and now you I would like to make that relational database version aware so",
    "start": "765839",
    "end": "771000"
  },
  {
    "text": "I'll be able to manage the tables or the views or a set of tables as a repository",
    "start": "771000",
    "end": "776940"
  },
  {
    "text": "and version everything allowing me to use git like operations such as branching merging commits and",
    "start": "776940",
    "end": "784980"
  },
  {
    "text": "all that would happen naturally as an interface to the database",
    "start": "784980",
    "end": "790620"
  },
  {
    "text": "so what do I need to actually change in the database so the answer basically is everything",
    "start": "790620",
    "end": "797820"
  },
  {
    "text": "so if you want to have a very very simple obstruction of a database let's say that it is structured by with two",
    "start": "797820",
    "end": "803639"
  },
  {
    "text": "main components one is the storage engine this is where we keep the data we",
    "start": "803639",
    "end": "808920"
  },
  {
    "text": "keep it in a data structure that allows us to retrieve and save data into the",
    "start": "808920",
    "end": "816480"
  },
  {
    "text": "database with decent performance and in our case we also want that",
    "start": "816480",
    "end": "822500"
  },
  {
    "text": "that storage engine to allow us git-like operations",
    "start": "822500",
    "end": "828120"
  },
  {
    "text": "on the other hand the other part of the application would be the the parser that",
    "start": "828120",
    "end": "834300"
  },
  {
    "text": "parses the SQL queries and the executor that executes them and of course the",
    "start": "834300",
    "end": "839339"
  },
  {
    "text": "optimizer that makes sure they would happen as fast as possible so those three components are the ones that",
    "start": "839339",
    "end": "847680"
  },
  {
    "text": "um built that build the server of the database and it is usually optimized for",
    "start": "847680",
    "end": "853139"
  },
  {
    "text": "the storage engine that the database has so if we want to make the storage engine",
    "start": "853139",
    "end": "859500"
  },
  {
    "text": "version aware we need to make the application version aware and then the entire database actually changes",
    "start": "859500",
    "end": "867779"
  },
  {
    "text": "very beautiful example of a project an open source project that is a versioned",
    "start": "867779",
    "end": "873000"
  },
  {
    "text": "database is Dot and dolt is based on a storage engine called Noms also open",
    "start": "873000",
    "end": "881040"
  },
  {
    "text": "source and it provides git-like operations so",
    "start": "881040",
    "end": "886320"
  },
  {
    "text": "our use case is I'm using a relational database for my data I wish to continue",
    "start": "886320",
    "end": "891600"
  },
  {
    "text": "using a relational database but I want to be able to have Version Control",
    "start": "891600",
    "end": "897300"
  },
  {
    "text": "capabilities and the answer to that is for example adult F version controlled",
    "start": "897300",
    "end": "904139"
  },
  {
    "text": "database how does that work",
    "start": "904139",
    "end": "909240"
  },
  {
    "text": "so I'll try and explain the most important components in my opinion",
    "start": "909240",
    "end": "915079"
  },
  {
    "text": "of of the adult database which is the",
    "start": "915079",
    "end": "920220"
  },
  {
    "text": "norms storage engine and it relies on a data structure called",
    "start": "920220",
    "end": "927000"
  },
  {
    "text": "prolly trees a proletree is actually a b tree",
    "start": "927000",
    "end": "932940"
  },
  {
    "text": "and a Merkle tree having a baby it was born it's called prolly",
    "start": "932940",
    "end": "938940"
  },
  {
    "text": "why is it important to merge those through Logics so a b tree is a tree",
    "start": "938940",
    "end": "945300"
  },
  {
    "text": "that is used to hold indices in relational databases because it allows",
    "start": "945300",
    "end": "952560"
  },
  {
    "text": "the balance of the way you structure it allows a good balance between the",
    "start": "952560",
    "end": "959220"
  },
  {
    "text": "performance of reading and writing from a database so clearly if you want to write very",
    "start": "959220",
    "end": "965040"
  },
  {
    "text": "quickly quickly you would just throw all your tuples into a hip but then if you",
    "start": "965040",
    "end": "971100"
  },
  {
    "text": "want to read them you would have to scan everything and work pretty hard while if",
    "start": "971100",
    "end": "976620"
  },
  {
    "text": "you save them into a b tree you will have an easier way to logically go",
    "start": "976620",
    "end": "983339"
  },
  {
    "text": "through the structure of the tree and allocate the values that you wish to retrieve and then the retrieval would be",
    "start": "983339",
    "end": "989639"
  },
  {
    "text": "in higher performance this is why beach trees are used and we have to keep that property because adult wants to be a",
    "start": "989639",
    "end": "998040"
  },
  {
    "text": "relational database with decent performance on the other hand we want the database",
    "start": "998040",
    "end": "1004459"
  },
  {
    "text": "to support git like operations so we want this tree to resemble a",
    "start": "1004459",
    "end": "1010160"
  },
  {
    "text": "Merkle tree which is the data structure that we use in git",
    "start": "1010160",
    "end": "1015980"
  },
  {
    "text": "and the logic would be that we would want to save data",
    "start": "1015980",
    "end": "1022120"
  },
  {
    "text": "according to a hush of its content so the data would still be pointed to",
    "start": "1022120",
    "end": "1029178"
  },
  {
    "text": "from the leaves of the tree so we would have sets of actual data that we calculate the hash",
    "start": "1029179",
    "end": "1037339"
  },
  {
    "text": "form but then the mid and",
    "start": "1037339",
    "end": "1042558"
  },
  {
    "text": "root of the the tree would actually be addresses that are calculated from the",
    "start": "1042559",
    "end": "1049460"
  },
  {
    "text": "hash of the contents of the values below so we would be pointing at addresses",
    "start": "1049460",
    "end": "1056660"
  },
  {
    "text": "and that would help us because if a tuple changes if a row in a table",
    "start": "1056660",
    "end": "1061940"
  },
  {
    "text": "changes if this tree represent a table and a row in a table changes then of",
    "start": "1061940",
    "end": "1068299"
  },
  {
    "text": "course the hash of its content changes and then the calculation going up with",
    "start": "1068299",
    "end": "1076280"
  },
  {
    "text": "hushing the values would change the value of the root of the tree",
    "start": "1076280",
    "end": "1082820"
  },
  {
    "text": "so we would have there that tree representing the table",
    "start": "1082820",
    "end": "1087980"
  },
  {
    "text": "and the different hash representing this change in its content while since other rows haven't changed",
    "start": "1087980",
    "end": "1094880"
  },
  {
    "text": "their hash didn't change and then the pointers to them are the same as in the",
    "start": "1094880",
    "end": "1101419"
  },
  {
    "text": "proletree that represents the table from before the change so we see that we can",
    "start": "1101419",
    "end": "1108679"
  },
  {
    "text": "or we can imagine that it would be easier to calculate diffs between",
    "start": "1108679",
    "end": "1114260"
  },
  {
    "text": "such trees calculate and Implement merges and so on",
    "start": "1114260",
    "end": "1120980"
  },
  {
    "text": "so this is how productory helps us actually combine battery and Merkle tree",
    "start": "1120980",
    "end": "1127480"
  },
  {
    "text": "into an efficient way of versioning tables within a relational",
    "start": "1127480",
    "end": "1135679"
  },
  {
    "text": "database",
    "start": "1135679",
    "end": "1138279"
  },
  {
    "text": "to sum it up um when we have data that is saved in a",
    "start": "1141020",
    "end": "1147020"
  },
  {
    "text": "relational database then it's probably operational data that is",
    "start": "1147020",
    "end": "1154160"
  },
  {
    "text": "safer usually this is how you use MySQL I forgot to say dot is consistent with",
    "start": "1154160",
    "end": "1159520"
  },
  {
    "text": "mySQL from an interface perspective so you could think about operational",
    "start": "1159520",
    "end": "1166340"
  },
  {
    "text": "data you can also think about feature store because features are at the end of the day",
    "start": "1166340",
    "end": "1172059"
  },
  {
    "text": "rather small data could be kept in a database but should be versioned because they",
    "start": "1172059",
    "end": "1177980"
  },
  {
    "text": "change over time in general it means that you are willing to either lift and shift your existing",
    "start": "1177980",
    "end": "1184940"
  },
  {
    "text": "my sequel or you're willing to lift and shift data into a database",
    "start": "1184940",
    "end": "1190940"
  },
  {
    "text": "um you have all the guarantees of a database so asset guarantees and so on which is extremely important and of",
    "start": "1190940",
    "end": "1197539"
  },
  {
    "text": "course you have tabular data because we are dealing with relational database",
    "start": "1197539",
    "end": "1203360"
  },
  {
    "text": "so it won't help you if you don't want an instant shift if you need to keep",
    "start": "1203360",
    "end": "1208400"
  },
  {
    "text": "your data in place uh it will probably be harder to manage with petabyte scale",
    "start": "1208400",
    "end": "1215840"
  },
  {
    "text": "um if you are in real need of high",
    "start": "1215840",
    "end": "1221120"
  },
  {
    "text": "performance in olap then this structure um would be less efficient for you and",
    "start": "1221120",
    "end": "1228260"
  },
  {
    "text": "of course if you rely heavily on unstructured data then you would need a different solution",
    "start": "1228260",
    "end": "1234520"
  },
  {
    "text": "but there are different solutions so let's see what's out there for us if we",
    "start": "1234520",
    "end": "1240679"
  },
  {
    "text": "don't want to use a relational database so when we started with said git would",
    "start": "1240679",
    "end": "1247100"
  },
  {
    "text": "have been a good idea it's just it doesn't scale for data and we can't use git for data",
    "start": "1247100",
    "end": "1252740"
  },
  {
    "text": "so we can use an add-on forget that is called get lfs that will help us",
    "start": "1252740",
    "end": "1258559"
  },
  {
    "text": "combine the management of data actually together with the management of code where does this idea come from it",
    "start": "1258559",
    "end": "1265580"
  },
  {
    "text": "doesn't come from the world of data it comes from the world of game development so game developers had their code the",
    "start": "1265580",
    "end": "1271100"
  },
  {
    "text": "code of the game that they had to manage but they also had tons of artifacts mostly binaries that were influencing",
    "start": "1271100",
    "end": "1278900"
  },
  {
    "text": "the way the game looked like and they had to manage those assets together with the code so the",
    "start": "1278900",
    "end": "1285740"
  },
  {
    "text": "repositories became very strange and extremely heavy because they were checking in and checking out in git",
    "start": "1285740",
    "end": "1293539"
  },
  {
    "text": "those very large binary files and it made their work very hard so they have",
    "start": "1293539",
    "end": "1299840"
  },
  {
    "text": "built an add-on to git that allows them not to do them that if they don't have to",
    "start": "1299840",
    "end": "1305480"
  },
  {
    "text": "and the logic behind it is extremely simple it relies on managing metadata",
    "start": "1305480",
    "end": "1313360"
  },
  {
    "text": "um this use case that comes from game development kind of grew on people who",
    "start": "1313580",
    "end": "1321919"
  },
  {
    "text": "do machine learning and research because they said hey we also have fires",
    "start": "1321919",
    "end": "1327320"
  },
  {
    "text": "that are not code that we want a version but they're also a little larger than what you would expect from",
    "start": "1327320",
    "end": "1333980"
  },
  {
    "text": "uh files that or or there are many of them um from files that are managing code but",
    "start": "1333980",
    "end": "1340940"
  },
  {
    "text": "still we want to do that together because we have a connection between the model and the data that it was running",
    "start": "1340940",
    "end": "1346460"
  },
  {
    "text": "on so it's kind of the same use case why don't we just use the same solution and",
    "start": "1346460",
    "end": "1351740"
  },
  {
    "text": "this is how gitlake FS found its uh its way into the um the world of data",
    "start": "1351740",
    "end": "1358220"
  },
  {
    "text": "and let's see how it works",
    "start": "1358220",
    "end": "1361900"
  },
  {
    "text": "so basically it's good right so you have uh the large file storage that is added",
    "start": "1363919",
    "end": "1370700"
  },
  {
    "text": "to the actual git Repository and the large file storage saves the",
    "start": "1370700",
    "end": "1376640"
  },
  {
    "text": "binary those large binary or those data files or whatever it is that we want to manage with",
    "start": "1376640",
    "end": "1382240"
  },
  {
    "text": "git and Fs and we then calculate a pointer to this",
    "start": "1382240",
    "end": "1388159"
  },
  {
    "text": "data and when we check out the repository we do not check out those",
    "start": "1388159",
    "end": "1393320"
  },
  {
    "text": "files we only check out the pointers to the files and only when we decide we",
    "start": "1393320",
    "end": "1400280"
  },
  {
    "text": "want those files locally do we then call them and actually create a local",
    "start": "1400280",
    "end": "1407179"
  },
  {
    "text": "copy of them if they already exist of course they're not called again and then the back and forth between the",
    "start": "1407179",
    "end": "1415280"
  },
  {
    "text": "large file storage and your local installation of the code and the",
    "start": "1415280",
    "end": "1421460"
  },
  {
    "text": "artifacts is not updated every time",
    "start": "1421460",
    "end": "1426679"
  },
  {
    "text": "it's a very simple idea and it makes it easier to manage large files and same of course would go",
    "start": "1426679",
    "end": "1434780"
  },
  {
    "text": "for data files that you want to manage",
    "start": "1434780",
    "end": "1439120"
  },
  {
    "text": "so as we said this is definitely good for game developers or repos of others",
    "start": "1443299",
    "end": "1450500"
  },
  {
    "text": "who have additionally to code other data that they would like to manage for",
    "start": "1450500",
    "end": "1457460"
  },
  {
    "text": "example data science repos so the whole thing is format agnostic",
    "start": "1457460",
    "end": "1463760"
  },
  {
    "text": "since we simply create this path or pointer to the file",
    "start": "1463760",
    "end": "1470299"
  },
  {
    "text": "to the large file we don't care in what format it has um but we do care that git manages your",
    "start": "1470299",
    "end": "1477740"
  },
  {
    "text": "code it means that the repository of the code is the git repository or if you're",
    "start": "1477740",
    "end": "1484100"
  },
  {
    "text": "using a service then the code is hosted there it means that those files would",
    "start": "1484100",
    "end": "1489559"
  },
  {
    "text": "also be hosted there meaning you have to lift and shift your data to coexist with your",
    "start": "1489559",
    "end": "1496820"
  },
  {
    "text": "code wherever it is and uh of course since you're using git",
    "start": "1496820",
    "end": "1502039"
  },
  {
    "text": "all changes are in human scale so this supports Act 2 certain size of files up",
    "start": "1502039",
    "end": "1510500"
  },
  {
    "text": "to a certain amount of files depending on the configuration or the hosted solution",
    "start": "1510500",
    "end": "1516080"
  },
  {
    "text": "and of course not structured to manage data in place or have",
    "start": "1516080",
    "end": "1522740"
  },
  {
    "text": "petabyte scale of data and of course doesn't support high",
    "start": "1522740",
    "end": "1528740"
  },
  {
    "text": "performance in data writing or reading this is not something",
    "start": "1528740",
    "end": "1534080"
  },
  {
    "text": "that it's organ lfs at all optimizes for",
    "start": "1534080",
    "end": "1539919"
  },
  {
    "text": "that's optimized well as we continue There are other Solutions we can use",
    "start": "1543880",
    "end": "1551480"
  },
  {
    "text": "so let's see what is the next solution so DVC data Version Control",
    "start": "1551480",
    "end": "1561220"
  },
  {
    "text": "this is um",
    "start": "1561880",
    "end": "1566020"
  },
  {
    "text": "a project PVC data version controller is a project",
    "start": "1567220",
    "end": "1572900"
  },
  {
    "text": "that was built on the inspiration of git lfs but with",
    "start": "1572900",
    "end": "1579140"
  },
  {
    "text": "having the data scientists and the researchers in mind so I won't get lfs",
    "start": "1579140",
    "end": "1585440"
  },
  {
    "text": "but I wrote my own git lfs that is actually providing additional capabilities that are suitable for my",
    "start": "1585440",
    "end": "1591860"
  },
  {
    "text": "specific use case as a data scientist so I need to keep my data where it is",
    "start": "1591860",
    "end": "1597380"
  },
  {
    "text": "because I have large amounts of data or I have large files or I can take data out of the organization and very many",
    "start": "1597380",
    "end": "1604760"
  },
  {
    "text": "other excuses so data must stay in place and in place might be in an object storage or in a in a local storage or",
    "start": "1604760",
    "end": "1613700"
  },
  {
    "text": "anywhere and also I am working in a team and the",
    "start": "1613700",
    "end": "1619159"
  },
  {
    "text": "retrieval of data because the files are pretty big can take some time so I prefer having a",
    "start": "1619159",
    "end": "1625580"
  },
  {
    "text": "caching layer so that is shared between me and my co-workers so that when we",
    "start": "1625580",
    "end": "1631700"
  },
  {
    "text": "retrieve a file we all need it would be cached and very quickly be able to be",
    "start": "1631700",
    "end": "1636860"
  },
  {
    "text": "used by US rather than each one of us needing to load the file into our local",
    "start": "1636860",
    "end": "1643520"
  },
  {
    "text": "git repository as in git like lfs",
    "start": "1643520",
    "end": "1648559"
  },
  {
    "text": "and of course there are other subtleties of what a commit would look like if I am",
    "start": "1648559",
    "end": "1654440"
  },
  {
    "text": "a data scientist and what a merge would look like what are the metadata fields",
    "start": "1654440",
    "end": "1660080"
  },
  {
    "text": "that I would want to save so we want to create here A solution that is targeted",
    "start": "1660080",
    "end": "1665360"
  },
  {
    "text": "really really well to the needs of data scientists and even more specifically ones that are dealing with ML",
    "start": "1665360",
    "end": "1672860"
  },
  {
    "text": "and this is the premise with DVC and this is why its architecture looks",
    "start": "1672860",
    "end": "1679520"
  },
  {
    "text": "very much like the guitar the first one but with the required improvements to",
    "start": "1679520",
    "end": "1684679"
  },
  {
    "text": "answer those requirements that we have just specified so this is what it would look like so we",
    "start": "1684679",
    "end": "1691460"
  },
  {
    "text": "have a remote code storage there is actually a git server and this",
    "start": "1691460",
    "end": "1696980"
  },
  {
    "text": "is where the code is kept but we also have a remote storage for the data which",
    "start": "1696980",
    "end": "1705559"
  },
  {
    "text": "could be any object storage on any cloud provider or hosted uh or",
    "start": "1705559",
    "end": "1713840"
  },
  {
    "text": "um on-prem and of course in SSH ssh access that allows us to access file",
    "start": "1713840",
    "end": "1720500"
  },
  {
    "text": "systems and local storage now the data stays in place and I can",
    "start": "1720500",
    "end": "1729080"
  },
  {
    "text": "edit and see it as part of my Repository",
    "start": "1729080",
    "end": "1734500"
  },
  {
    "text": "and I also have a caching layer here mentioned as local cache so when I would",
    "start": "1734779",
    "end": "1742159"
  },
  {
    "text": "like to read a file that is a data file in this case",
    "start": "1742159",
    "end": "1747820"
  },
  {
    "text": "pkl pkl model um file sorry that is holding a model",
    "start": "1747820",
    "end": "1755539"
  },
  {
    "text": "and when I would get that file of course usually my manage will be the path but",
    "start": "1755539",
    "end": "1763460"
  },
  {
    "text": "if I decide to actually pull out this file it would also be kept in the local",
    "start": "1763460",
    "end": "1769100"
  },
  {
    "text": "cache so that when others are looking to pull that file the performance would be much better for them",
    "start": "1769100",
    "end": "1777220"
  },
  {
    "text": "so this is a very short version of how DVC is more adequate to data science",
    "start": "1777880",
    "end": "1785299"
  },
  {
    "text": "than git lfs uh",
    "start": "1785299",
    "end": "1790840"
  },
  {
    "text": "so as we said data science machine learning use cases we can support both",
    "start": "1790840",
    "end": "1797360"
  },
  {
    "text": "structured and unstructured data data can stay in place still we are using git",
    "start": "1797360",
    "end": "1803840"
  },
  {
    "text": "infrastructure underneath so this is human scale of changes both in data and",
    "start": "1803840",
    "end": "1809960"
  },
  {
    "text": "in the operations in the git like operations such as Mudge branch and commit and it allows collaborative",
    "start": "1809960",
    "end": "1817159"
  },
  {
    "text": "caching what would be missing so if you are a relational data per database",
    "start": "1817159",
    "end": "1822440"
  },
  {
    "text": "person then this solution is less adequate for you if you are with",
    "start": "1822440",
    "end": "1828200"
  },
  {
    "text": "petabytes scale and you would be using a hundreds of millions of objects caching",
    "start": "1828200",
    "end": "1835460"
  },
  {
    "text": "becomes uh something that is unrealistic stuff are machine scale so all",
    "start": "1835460",
    "end": "1841279"
  },
  {
    "text": "operations that happen might need to happen in thousands or tens of thousands a second then this would not be a",
    "start": "1841279",
    "end": "1850220"
  },
  {
    "text": "suitable solution for you and you would have to move to the next solution",
    "start": "1850220",
    "end": "1856039"
  },
  {
    "text": "and the next solution that and the last solution that I'm going to talk about today refers to a world where",
    "start": "1856039",
    "end": "1864260"
  },
  {
    "text": "the architecture looks like this",
    "start": "1864260",
    "end": "1872200"
  },
  {
    "text": "and we have actually very many data sources that are",
    "start": "1877460",
    "end": "1882760"
  },
  {
    "text": "saving data into an object storage we have etls that are running on a",
    "start": "1882760",
    "end": "1890299"
  },
  {
    "text": "distributed compute shots such as spark those could be etls that are built out of tens or",
    "start": "1890299",
    "end": "1896720"
  },
  {
    "text": "hundreds or thousands of small jobs running in a in an order that is dictated by a",
    "start": "1896720",
    "end": "1905000"
  },
  {
    "text": "directed by cyclic graph that is saved somewhere in an orchestration system and",
    "start": "1905000",
    "end": "1910580"
  },
  {
    "text": "then we have a bunch of consumers consuming the data those could be people who are",
    "start": "1910580",
    "end": "1915880"
  },
  {
    "text": "uh developing machine learning models those could be bi analysts or they could",
    "start": "1915880",
    "end": "1921980"
  },
  {
    "text": "be simply the next person to write an ETL over the data for some use that the",
    "start": "1921980",
    "end": "1928220"
  },
  {
    "text": "company has with the data and for this world which is the world",
    "start": "1928220",
    "end": "1933559"
  },
  {
    "text": "most of us are either already living or would probably live in",
    "start": "1933559",
    "end": "1940899"
  },
  {
    "text": "the next couple of uh in the next couple of years since the amount of data keep",
    "start": "1940899",
    "end": "1947840"
  },
  {
    "text": "on growing so for this one we would need a slightly different solution right because",
    "start": "1947840",
    "end": "1955760"
  },
  {
    "text": "we would want something like lakefest this allows us first to keep the data in",
    "start": "1955760",
    "end": "1962000"
  },
  {
    "text": "place so data would stay in the object storage we're not going to lift and shift it anywhere",
    "start": "1962000",
    "end": "1967340"
  },
  {
    "text": "that is one the second would be we would have to be compatible with all the applications that can now",
    "start": "1967340",
    "end": "1974659"
  },
  {
    "text": "run over an object storage and serve the data to the organization",
    "start": "1974659",
    "end": "1982640"
  },
  {
    "text": "and we would have to impact performance as less as possible and also work in extremely high scale",
    "start": "1982640",
    "end": "1989539"
  },
  {
    "text": "when it comes to the amount of objects that we are managing it could be hundreds of millions or billions of",
    "start": "1989539",
    "end": "1995299"
  },
  {
    "text": "objects as we said and also the git like operations would have to be extremely efficient so that",
    "start": "1995299",
    "end": "2001899"
  },
  {
    "text": "we can have very many of those a second according to our architecture and our",
    "start": "2001899",
    "end": "2006940"
  },
  {
    "text": "needs or the logic by which we want to create commits and manage versions in",
    "start": "2006940",
    "end": "2012399"
  },
  {
    "text": "our data okay so how would we build something like that",
    "start": "2012399",
    "end": "2018580"
  },
  {
    "text": "so first from a logical perspective since the data stays in place look at the right hand side it says S3 but it",
    "start": "2018580",
    "end": "2025179"
  },
  {
    "text": "means S3 is an interface um it also supports Azure and Google",
    "start": "2025179",
    "end": "2031419"
  },
  {
    "text": "Cloud Storage so basically any object storage that you can think of",
    "start": "2031419",
    "end": "2038140"
  },
  {
    "text": "and um we can see that both the data itself in pink and the metadata that describes",
    "start": "2038140",
    "end": "2046600"
  },
  {
    "text": "it those are both saved into the object storage so the system is extremely",
    "start": "2046600",
    "end": "2052060"
  },
  {
    "text": "reliable yeah in the middle runs the lakefest server",
    "start": "2052060",
    "end": "2058419"
  },
  {
    "text": "let's look at the top part of the screen so in the top part we're looking at a case",
    "start": "2058419",
    "end": "2065378"
  },
  {
    "text": "where you would have an application running on spark in Java in Scala you might be running",
    "start": "2065379",
    "end": "2071460"
  },
  {
    "text": "your own python application whatever it is that you're using you can then use a lakefest client",
    "start": "2071460",
    "end": "2079118"
  },
  {
    "text": "together with your code that would allow you to use git like operations",
    "start": "2079119",
    "end": "2084580"
  },
  {
    "text": "and when you use a lakefest client your client would be communicating with",
    "start": "2084580",
    "end": "2090638"
  },
  {
    "text": "the lakefest server to get the lakefest metadata while",
    "start": "2090639",
    "end": "2097080"
  },
  {
    "text": "your application would be the one accessing the data for reading and writing so that will be done directly by",
    "start": "2097080",
    "end": "2104440"
  },
  {
    "text": "your application as it is done today this allows us to work with all the applications so this allows lakefest to",
    "start": "2104440",
    "end": "2111280"
  },
  {
    "text": "work with all the applications um um and uh be compatible with with the",
    "start": "2111280",
    "end": "2118480"
  },
  {
    "text": "architectures that we all have today the other options would be to run",
    "start": "2118480",
    "end": "2123700"
  },
  {
    "text": "through our lakefest Gateway that would be saved for cases where you can't use a client and then your data would go",
    "start": "2123700",
    "end": "2130240"
  },
  {
    "text": "through lakefest servers that is an architecture that is used less but it is",
    "start": "2130240",
    "end": "2135640"
  },
  {
    "text": "possible to use it okay so we now understand that this is kind of a wrapper around the parts of",
    "start": "2135640",
    "end": "2142900"
  },
  {
    "text": "our data Lake that we would like to Version Control so the storage status and object storage",
    "start": "2142900",
    "end": "2150099"
  },
  {
    "text": "and we are adding an additional layer that provides git-like operations over it it's somewhat similar to what Noms",
    "start": "2150099",
    "end": "2158980"
  },
  {
    "text": "has done for adult with the storage engine right so we put an application into the storage that allows us",
    "start": "2158980",
    "end": "2166260"
  },
  {
    "text": "to have versioning in this case we don't change the storage we wrap it and this",
    "start": "2166260",
    "end": "2173560"
  },
  {
    "text": "interface that was created would allow lakefest to Version Control the data using a set of metadata",
    "start": "2173560",
    "end": "2181300"
  },
  {
    "text": "that it is creating once you are using like fs and using the",
    "start": "2181300",
    "end": "2186460"
  },
  {
    "text": "data when we look under the hood it beautifully looks like a different",
    "start": "2186460",
    "end": "2195040"
  },
  {
    "text": "version of a proletree if you wish so we don't manage lines in tables in",
    "start": "2195040",
    "end": "2203140"
  },
  {
    "text": "naked Fest right we manage objects in an object store but an object can have a",
    "start": "2203140",
    "end": "2208420"
  },
  {
    "text": "hush of its content just like a tapolina database has a hash of its content",
    "start": "2208420",
    "end": "2215619"
  },
  {
    "text": "and then what we have is two layers A two layered tree the first layer",
    "start": "2215619",
    "end": "2221380"
  },
  {
    "text": "actually holds a range of",
    "start": "2221380",
    "end": "2227920"
  },
  {
    "text": "um objects and the layer on top of it holds the",
    "start": "2227920",
    "end": "2234280"
  },
  {
    "text": "range of ranges with it's called The Meta range and then just like in a probably tree if",
    "start": "2234280",
    "end": "2240940"
  },
  {
    "text": "you want to access quickly or to compare",
    "start": "2240940",
    "end": "2246040"
  },
  {
    "text": "quickly only a small portion of the data that the tree represents you can do that",
    "start": "2246040",
    "end": "2252520"
  },
  {
    "text": "by allocating the changed ranges of data compare only them and get",
    "start": "2252520",
    "end": "2260619"
  },
  {
    "text": "the diff and also of course the same logic would then work for merging or",
    "start": "2260619",
    "end": "2265720"
  },
  {
    "text": "committing data so this is in a not too many words",
    "start": "2265720",
    "end": "2273040"
  },
  {
    "text": "how those data structures are similar although lakefest is located in a",
    "start": "2273040",
    "end": "2280240"
  },
  {
    "text": "completely different scenario and actually relies on puddles that is a",
    "start": "2280240",
    "end": "2287619"
  },
  {
    "text": "version of uh Rocks TV okay",
    "start": "2287619",
    "end": "2294660"
  },
  {
    "text": "to sum up what lakefest can provide us so it is useful if you want to develop",
    "start": "2295619",
    "end": "2301720"
  },
  {
    "text": "and test in isolation over an object storage if you want to manage a resilient production environment through",
    "start": "2301720",
    "end": "2307300"
  },
  {
    "text": "the versioning and it allows collaboration so very much what version control gives us in all cases it",
    "start": "2307300",
    "end": "2314740"
  },
  {
    "text": "supports both structures and unstructured data so it is format agnostic just like it's NFS but your",
    "start": "2314740",
    "end": "2322240"
  },
  {
    "text": "data stays in place it is built to be highly scalable and to keep high",
    "start": "2322240",
    "end": "2327760"
  },
  {
    "text": "performance and it is of course compatible with all compute engines that exist out there",
    "start": "2327760",
    "end": "2335560"
  },
  {
    "text": "in the uh modern data stack over an object storage",
    "start": "2335560",
    "end": "2341079"
  },
  {
    "text": "so what wouldn't you do with lakefest so",
    "start": "2341079",
    "end": "2346420"
  },
  {
    "text": "really if you don't have an object storage like if this won't be the right solution for you and of course",
    "start": "2346420",
    "end": "2352660"
  },
  {
    "text": "um in data diffs and merges the we Lake FS",
    "start": "2352660",
    "end": "2357820"
  },
  {
    "text": "only provides information about the objects lists rather than going into the",
    "start": "2357820",
    "end": "2364420"
  },
  {
    "text": "tables or if it's unstructured data the bytes themselves and tell us exactly",
    "start": "2364420",
    "end": "2370359"
  },
  {
    "text": "where the diff is this does not exist there is a place to contribute code to",
    "start": "2370359",
    "end": "2375940"
  },
  {
    "text": "do that for specific formats of data",
    "start": "2375940",
    "end": "2380520"
  },
  {
    "text": "so uh here is Mia 23 I can go back to being 23 if we use the",
    "start": "2383260",
    "end": "2390820"
  },
  {
    "text": "right data Version Control tool to allow us to take the scales that is created by",
    "start": "2390820",
    "end": "2397540"
  },
  {
    "text": "the amounts of data the complexity and the transient nature of the data",
    "start": "2397540",
    "end": "2403060"
  },
  {
    "text": "and turn it from this chaotic environment that is hard to manage into",
    "start": "2403060",
    "end": "2408220"
  },
  {
    "text": "a manageable environment where we have full control and then we know exactly",
    "start": "2408220",
    "end": "2414040"
  },
  {
    "text": "where the data comes from we know what had changed and why and we can go back",
    "start": "2414040",
    "end": "2419320"
  },
  {
    "text": "to being the person in the room that corrects the CEO when they're about to take their own decision based on their",
    "start": "2419320",
    "end": "2425200"
  },
  {
    "text": "own data and here you have the uh full advantages",
    "start": "2425200",
    "end": "2433300"
  },
  {
    "text": "of each one of those systems and you can use them whenever you need them please use them to make your life easier",
    "start": "2433300",
    "end": "2441040"
  },
  {
    "text": "and to manage the chaos of data or as one of my team members loves to",
    "start": "2441040",
    "end": "2446859"
  },
  {
    "text": "say you can mess with your data but don't make a mess of the data",
    "start": "2446859",
    "end": "2453720"
  },
  {
    "text": "thank you so much for sharing uh your wisdom today and we had many questions and let's start with the first one uh so",
    "start": "2456099",
    "end": "2464020"
  },
  {
    "text": "how does Leica Fest relate to existing columnar formats such as forket and orc",
    "start": "2464020",
    "end": "2470980"
  },
  {
    "text": "so uh lakefest actually is uh format agnostic what it manages inversions is",
    "start": "2470980",
    "end": "2477280"
  },
  {
    "text": "the objects within the object store and those could be in any data formats so it basically allows you over whatever",
    "start": "2477280",
    "end": "2484000"
  },
  {
    "text": "it is that the format provides the ability to treat a set of tables",
    "start": "2484000",
    "end": "2490180"
  },
  {
    "text": "as a repository and manage those together and travel in time",
    "start": "2490180",
    "end": "2495339"
  },
  {
    "text": "within all those tables together as a repository so it is actually a layer over the actual storage format that",
    "start": "2495339",
    "end": "2503500"
  },
  {
    "text": "you're using and the same answer goes to um more let's say Advanced formats such",
    "start": "2503500",
    "end": "2509560"
  },
  {
    "text": "as Delta hoodie and iceberg that provides a bit more of",
    "start": "2509560",
    "end": "2515940"
  },
  {
    "text": "mutability capabilities that are lacking in object storages that are immutable",
    "start": "2515940",
    "end": "2521440"
  },
  {
    "text": "so this is the strength of the format and again lakefest works over that",
    "start": "2521440",
    "end": "2527079"
  },
  {
    "text": "and allows the treatment of very many tables as one Repository",
    "start": "2527079",
    "end": "2533680"
  },
  {
    "text": "I hope it answers the question yeah absolutely let's see what people react in the chat uh we have another",
    "start": "2533680",
    "end": "2539920"
  },
  {
    "text": "great question from Phil what grain is an object single fact forget file",
    "start": "2539920",
    "end": "2546579"
  },
  {
    "text": "a single file yes okay so a single file that exists on",
    "start": "2546579",
    "end": "2552220"
  },
  {
    "text": "Object Store um thank you Phil for the great question uh we had more questions that came up",
    "start": "2552220",
    "end": "2560140"
  },
  {
    "text": "um um May I add something I think I'm I'm guessing where Phil is going so I'll",
    "start": "2560140",
    "end": "2566020"
  },
  {
    "text": "just add that if you're using some virtual virtualization such as Hive metastore you will be able to see a",
    "start": "2566020",
    "end": "2572619"
  },
  {
    "text": "collection of files as a table right within Hive and then Laker Fest and also",
    "start": "2572619",
    "end": "2580359"
  },
  {
    "text": "also DVC I believe can work together with Hive metastol in the um with the",
    "start": "2580359",
    "end": "2586119"
  },
  {
    "text": "table a representation of it great Phil let us know if that answer",
    "start": "2586119",
    "end": "2591940"
  },
  {
    "text": "your question in the chat would love to hear from you more questions that came up are uh what does lakefest do when",
    "start": "2591940",
    "end": "2598900"
  },
  {
    "text": "there is a conflict between the branches okay so that is a great question uh I it",
    "start": "2598900",
    "end": "2604720"
  },
  {
    "text": "kind of does what git does so when I like FS looks it's a diff between let's say the main and the branch it would",
    "start": "2604720",
    "end": "2612460"
  },
  {
    "text": "look at the list of objects that exist in those and if we would see a change",
    "start": "2612460",
    "end": "2617920"
  },
  {
    "text": "that happened in an object that exists in both that would constitute a conflict",
    "start": "2617920",
    "end": "2623020"
  },
  {
    "text": "and this conflict would be just flagged for the user to decide what logic they",
    "start": "2623020",
    "end": "2629440"
  },
  {
    "text": "would like to implement in order to resolve that conflict and that could be done by using one of the special merge",
    "start": "2629440",
    "end": "2637119"
  },
  {
    "text": "strategies that allow you to maybe ignore one of the copies or if you have",
    "start": "2637119",
    "end": "2642700"
  },
  {
    "text": "another type of logic that you would like to use you can always contribute that to the set of Logics that already",
    "start": "2642700",
    "end": "2649180"
  },
  {
    "text": "exists within League Fest got it thank you if you have any more",
    "start": "2649180",
    "end": "2654880"
  },
  {
    "text": "questions the floor is open feel free to post your questions uh in the chat uh",
    "start": "2654880",
    "end": "2660099"
  },
  {
    "text": "the next one actually speaks about costs so this Version Control increase storage",
    "start": "2660099",
    "end": "2665500"
  },
  {
    "text": "cost because we now save several versions of the same data set so that is a great question because it",
    "start": "2665500",
    "end": "2673119"
  },
  {
    "text": "does seem like that intuitively at the beginning right because instead of just saving the One latest copy I would be",
    "start": "2673119",
    "end": "2678760"
  },
  {
    "text": "saving a history of my data and that might create a situation where I'm",
    "start": "2678760",
    "end": "2685119"
  },
  {
    "text": "saving way more data than I did before but in actuality in order to manage",
    "start": "2685119",
    "end": "2690700"
  },
  {
    "text": "ourselves properly and to have isolation we copy a lot of data and when you use",
    "start": "2690700",
    "end": "2696819"
  },
  {
    "text": "Solutions like lakefest that are actually soft copies so it's a very",
    "start": "2696819",
    "end": "2702460"
  },
  {
    "text": "small set of metadata that is created instead of copying large amounts of data",
    "start": "2702460",
    "end": "2707500"
  },
  {
    "text": "when you look at the overall influence then actually like FS reduces the amount",
    "start": "2707500",
    "end": "2713619"
  },
  {
    "text": "of storage that you use in around 20 from what we see from our users and if you add to that the fact that",
    "start": "2713619",
    "end": "2720520"
  },
  {
    "text": "lakefest provides an ability to actually control the data that you decide to delete",
    "start": "2720520",
    "end": "2726040"
  },
  {
    "text": "in a way that is optimal from a business perspective you get a really powerful result so except for having the",
    "start": "2726040",
    "end": "2732460"
  },
  {
    "text": "deduplication you also have the ability to say I don't want to save more than two months of",
    "start": "2732460",
    "end": "2739000"
  },
  {
    "text": "versions for some data sets I want to save seven years in cases where I have",
    "start": "2739000",
    "end": "2745180"
  },
  {
    "text": "to because of Regulation and of course I can decide branches that are given to RND people for uh just uh short tests",
    "start": "2745180",
    "end": "2754060"
  },
  {
    "text": "are short-lived and would always be deleted after 14 days for example so you",
    "start": "2754060",
    "end": "2760359"
  },
  {
    "text": "have full control that is actually based on business logic to make sure that you only have or you only keep the data that",
    "start": "2760359",
    "end": "2767619"
  },
  {
    "text": "you actually need interesting thank you so much for sharing it's completely makes sense I've",
    "start": "2767619",
    "end": "2774640"
  },
  {
    "text": "been seeing people copying data again again uh in production in staging",
    "start": "2774640",
    "end": "2780160"
  },
  {
    "text": "environments Etc so it's completely resonates also makes sense to keep track",
    "start": "2780160",
    "end": "2785760"
  },
  {
    "text": "of uh who copied where the data is ETC",
    "start": "2785760",
    "end": "2791200"
  },
  {
    "text": "um last question and then we'll wrap up uh can get lfs be used on managed",
    "start": "2791200",
    "end": "2796540"
  },
  {
    "text": "services such as GitHub or GitHub so yes definitely they both supported",
    "start": "2796540",
    "end": "2802920"
  },
  {
    "text": "you do have some limitations of the amount of storage that you can use if you're using it within a managed service",
    "start": "2802920",
    "end": "2809800"
  },
  {
    "text": "but it's just a click of a button and you get to get lfs running for you whether you're using a bit bucket a",
    "start": "2809800",
    "end": "2817900"
  },
  {
    "text": "GitHub git Labs any of those Solutions",
    "start": "2817900",
    "end": "2823000"
  },
  {
    "text": "interesting thank you so much enat uh thank you so much everyone for the great question I noticed there are more",
    "start": "2823000",
    "end": "2828460"
  },
  {
    "text": "questions coming up uh we have to wrap up the presentation uh so to continue the conversation with a not um please",
    "start": "2828460",
    "end": "2836020"
  },
  {
    "text": "join the hangout uh with a notebook clicking on the yellow Banner on the schedule page so again going to the",
    "start": "2836020",
    "end": "2842560"
  },
  {
    "text": "schedule page finding a not session slot and then clicking on the yellow banner",
    "start": "2842560",
    "end": "2848140"
  },
  {
    "text": "and during the break uh feel free to go and check out the sponsor area we can opt in to unlock ebooks white papers",
    "start": "2848140",
    "end": "2854800"
  },
  {
    "text": "demos and multiple giveaways uh Anna thank you so much for joining us today and I can already see that Phil is going",
    "start": "2854800",
    "end": "2861400"
  },
  {
    "text": "to join you uh in the hangout space uh have fun and I'll see you soon in the",
    "start": "2861400",
    "end": "2867040"
  },
  {
    "text": "next session thank you everyone thank you",
    "start": "2867040",
    "end": "2871560"
  },
  {
    "text": "[Music]",
    "start": "2872490",
    "end": "2878780"
  }
]