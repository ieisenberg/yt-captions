[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "this is a talk about survey survey is a type system and type checker that we've built at stripe for Ruby and in this",
    "start": "3970",
    "end": "10540"
  },
  {
    "text": "talk we'll discuss why would we do that and how did we do that so first of all",
    "start": "10540",
    "end": "16120"
  },
  {
    "start": "16000",
    "end": "44000"
  },
  {
    "text": "women I'm Dimitri I've earned a PhD in compiler construction working with",
    "start": "16120",
    "end": "22539"
  },
  {
    "text": "Martin under ski my PhD thesis was Dottie which is going to be called Scala 3 and now I'm working on developer",
    "start": "22539",
    "end": "30070"
  },
  {
    "text": "tooling at stripe which includes everything from processes core standard libraries quoting conventions CI",
    "start": "30070",
    "end": "36190"
  },
  {
    "text": "everything my work is to make sure that engineers have stripe have the most productive life of their most productive",
    "start": "36190",
    "end": "41920"
  },
  {
    "text": "years of their career there here's the outline of this talk and during the talk please at any moment feel free to stop",
    "start": "41920",
    "end": "47440"
  },
  {
    "start": "44000",
    "end": "57000"
  },
  {
    "text": "me and ask questions I'm happy to answer all of them we start with the context in",
    "start": "47440",
    "end": "52809"
  },
  {
    "text": "which this was possible we just stripe okay so stripe is a platform that developers external",
    "start": "52809",
    "end": "58960"
  },
  {
    "text": "developers use to accept payments if you want accept payments on the Internet there are a lot of things that needs to",
    "start": "58960",
    "end": "65560"
  },
  {
    "text": "be handled there to do it correctly you want to make sure you're compliant you want to make sure that you're correctly doing things with credit cards near to little not leaking them that's hard and",
    "start": "65560",
    "end": "72310"
  },
  {
    "text": "companies use us to solve this problem for you we're on in 32 countries and",
    "start": "72310",
    "end": "78760"
  },
  {
    "text": "millions of businesses worldwide use us their billions of dollars processing every year through stripe and more than",
    "start": "78760",
    "end": "85060"
  },
  {
    "text": "80 percent of Americans adults ball something in stripe in 2017 we have",
    "start": "85060",
    "end": "90490"
  },
  {
    "text": "hundreds of people in 10 offices around the world a customer's reports more developer productivity after deployment",
    "start": "90490",
    "end": "96400"
  },
  {
    "text": "stripe and as always we're hiring now Ruby stripe the Ruby is a primary",
    "start": "96400",
    "end": "101560"
  },
  {
    "start": "98000",
    "end": "144000"
  },
  {
    "text": "language use district it's enforce subset of Ruby you cannot use everything from you breathe and use the things that",
    "start": "101560",
    "end": "107440"
  },
  {
    "text": "we consider to be sane in a company where the lot of Engineers want to have our code base be maintainable and more",
    "start": "107440",
    "end": "113170"
  },
  {
    "text": "uniform and we're not using rails we're using our own frameworks our own chakra DM our own or M layer our own things",
    "start": "113170",
    "end": "120670"
  },
  {
    "text": "that we really work best for us most of our product is an Amana repo and that's intentional we believe that you get",
    "start": "120670",
    "end": "127750"
  },
  {
    "text": "benefits by having a single in versioning scheme while having clear notion of dependencies and while being",
    "start": "127750",
    "end": "134320"
  },
  {
    "text": "able to do all the changes in the same repo in a same PR majority of the code leaves in 10 microservices and majority of new code",
    "start": "134320",
    "end": "141830"
  },
  {
    "text": "goes into them now skill of engineering stripes again hundreds of engineers thousands of commits per day mill and",
    "start": "141830",
    "end": "147530"
  },
  {
    "text": "lines of codes now in this environment what was the problem that the type",
    "start": "147530",
    "end": "153200"
  },
  {
    "start": "149000",
    "end": "221000"
  },
  {
    "text": "system was supposed to solve here's an email officer from pre-survey times of stripe this was a discussion about some",
    "start": "153200",
    "end": "160220"
  },
  {
    "text": "specific user feature so as a discussion",
    "start": "160220",
    "end": "165680"
  },
  {
    "text": "happened the discussion was that the most common way it breaks is by seeing something called no method error in",
    "start": "165680",
    "end": "171829"
  },
  {
    "text": "production no method erred what happens in Ruby if you try to invoke in method on a class which doesn't have this",
    "start": "171829",
    "end": "177739"
  },
  {
    "text": "method like for example this will happen if you have the wrong class not the one that you expect it you expect it to have",
    "start": "177739",
    "end": "183290"
  },
  {
    "text": "a string you have an integer or you mistake the method the this is the right class but you're just calling a method",
    "start": "183290",
    "end": "189769"
  },
  {
    "text": "that doesn't exist in it and this was the most common kind of error most common kind of error seen in production",
    "start": "189769",
    "end": "196459"
  },
  {
    "text": "and the second one is name errors this is slightly different but it's on the",
    "start": "196459",
    "end": "201739"
  },
  {
    "text": "same vein name errors is when you refer to classes not to methods while having",
    "start": "201739",
    "end": "207919"
  },
  {
    "text": "typos in them so though at the time those were the most common problems",
    "start": "207919",
    "end": "213349"
  },
  {
    "text": "described in production and in order to address them we went to work towards",
    "start": "213349",
    "end": "218660"
  },
  {
    "text": "building a type system and deploying it at stripe here are the design principles that we had behind it in order to make",
    "start": "218660",
    "end": "225530"
  },
  {
    "start": "221000",
    "end": "229000"
  },
  {
    "text": "it work well specifically at stripe the first one was explicitness we want to",
    "start": "225530",
    "end": "230629"
  },
  {
    "start": "229000",
    "end": "284000"
  },
  {
    "text": "write type annotations in fact we see them beneficial the reason for this being that they make code readable and",
    "start": "230629",
    "end": "238129"
  },
  {
    "text": "predictable as somebody who is not writing this code but rather reading this code it makes it easier for you to",
    "start": "238129",
    "end": "243709"
  },
  {
    "text": "understand what to expect of this method what we mean by non explicit here the alternative that we could have chosen is",
    "start": "243709",
    "end": "249889"
  },
  {
    "text": "to not write type annotation but have a type system that's smart enough to figure it on its own do it across",
    "start": "249889",
    "end": "257060"
  },
  {
    "text": "methods for example how Scala does it in particular for return type we've intentionally decided not to do this",
    "start": "257060",
    "end": "262880"
  },
  {
    "text": "because in a company that's big where majority of people who read somebody",
    "start": "262880",
    "end": "268430"
  },
  {
    "text": "else's code it's beneficial to understand not what it does now but will do was it expected",
    "start": "268430",
    "end": "274550"
  },
  {
    "text": "to do to have explicit intent and make sure that implementation fulfills does",
    "start": "274550",
    "end": "280010"
  },
  {
    "text": "intend rather than trying to back solve the intent from implementation the",
    "start": "280010",
    "end": "285320"
  },
  {
    "start": "284000",
    "end": "321000"
  },
  {
    "text": "second one is effectively AB contra balance to the previous one while we want our users to write signatures for",
    "start": "285320",
    "end": "292010"
  },
  {
    "text": "methods and describe boundaries this way we don't want this to feel burdensome for this in particular when you're",
    "start": "292010",
    "end": "298850"
  },
  {
    "text": "writing code inside the method we can actually figure out majority of types for you for example here in the very",
    "start": "298850",
    "end": "305210"
  },
  {
    "text": "first line a is an integer we don't want you to write it as an integer we can figure it out on our own similarly on",
    "start": "305210",
    "end": "311930"
  },
  {
    "text": "the second line it's a string but here if you want we allow you to declare that this is string we don't require you to",
    "start": "311930",
    "end": "317780"
  },
  {
    "text": "do this but if you want to be explicit about it you have an option to do this next one is more of internal rather than",
    "start": "317780",
    "end": "324919"
  },
  {
    "start": "321000",
    "end": "376000"
  },
  {
    "text": "user visible design constrained for one the type system to be simple but not simpler and what by this mean what we",
    "start": "324919",
    "end": "330650"
  },
  {
    "text": "mean by this is we want it to be as simple as possible while fulfilling the",
    "start": "330650",
    "end": "336530"
  },
  {
    "text": "needs of stripe the here's the list of features in order they were added to the",
    "start": "336530",
    "end": "342620"
  },
  {
    "text": "type system the reason for those was that every next feature was added not",
    "start": "342620",
    "end": "348020"
  },
  {
    "text": "because we thought that this feature is fancy or because we will always wanted to implement this feature is because we",
    "start": "348020",
    "end": "354110"
  },
  {
    "text": "saw a real coded stripe that's super common not one method hundreds of methods methods written by",
    "start": "354110",
    "end": "359479"
  },
  {
    "text": "hundreds of engineers that need this thing to be modeled based on this we",
    "start": "359479",
    "end": "365180"
  },
  {
    "text": "started iterating with the minimal set of features adding features one by one building the exact set that was needed",
    "start": "365180",
    "end": "371479"
  },
  {
    "text": "to support a stripe code base it pre existed before that time and then the",
    "start": "371479",
    "end": "377300"
  },
  {
    "text": "next requirement was we didn't build a type system for stripe at the time we will the type system that we wanted to",
    "start": "377300",
    "end": "383150"
  },
  {
    "text": "live for a long time and continue delivering impact which means we want to make decisions that scaled with size of",
    "start": "383150",
    "end": "389120"
  },
  {
    "text": "engineering both sides of engineer of our users and size of internal team who built the tech checker we also wanted to",
    "start": "389120",
    "end": "395330"
  },
  {
    "text": "make sure we can address the knee needs of different users as strengths different people need different amount",
    "start": "395330",
    "end": "401090"
  },
  {
    "text": "of rigor somebody is working on experimental and they have still no clue what did you do and they don't know what design it",
    "start": "401090",
    "end": "406520"
  },
  {
    "text": "have witch infrastructure it has the structure it has they want to go yellow somebody wants to make sure that this",
    "start": "406520",
    "end": "411980"
  },
  {
    "text": "code is super Bridgette doesn't have a single problem and can be proven to be",
    "start": "411980",
    "end": "417680"
  },
  {
    "text": "correct and you in a real world you can make both of them perfectly happy you",
    "start": "417680",
    "end": "425240"
  },
  {
    "text": "can make of them make both of them at least not be grumpy at you to make sure that you can both prove majority of the",
    "start": "425240",
    "end": "432740"
  },
  {
    "text": "usefulness without being constrained of somebody who wants to go Yolo and you can also allow some people some degree",
    "start": "432740",
    "end": "437990"
  },
  {
    "text": "of going yellow the next one is - we want to scale with code base size from our experienced",
    "start": "437990",
    "end": "444370"
  },
  {
    "text": "majority of the code bases of big companies stripe Google Facebook grow",
    "start": "444370",
    "end": "449800"
  },
  {
    "text": "nonlinear Louis time there's an argument whether that's a cubic function and whether that's exponential function in",
    "start": "449800",
    "end": "455479"
  },
  {
    "text": "practice is a faction that grows super fast so we need to make sure that the tool we're building can be fast and",
    "start": "455479",
    "end": "463700"
  },
  {
    "text": "schools still provide pleasant experience for users and it also allows our users to isolate the complexity of",
    "start": "463700",
    "end": "470660"
  },
  {
    "text": "the code base where they will no longer need to know the entire code base and understand actions in a distance rather",
    "start": "470660",
    "end": "476419"
  },
  {
    "text": "than they this tool can be used to create those packages or interfaces those abstractions that will make it",
    "start": "476419",
    "end": "482570"
  },
  {
    "text": "easier for users to reason about their code and we also wanted to make sure that the code that our project scales",
    "start": "482570",
    "end": "488630"
  },
  {
    "text": "with time and by this we mean if there are some decisions that can be much easier addressed early in the project",
    "start": "488630",
    "end": "495160"
  },
  {
    "text": "they would better address earlier rather than being postponed so to give you some of the black numbers for them the most",
    "start": "495160",
    "end": "501620"
  },
  {
    "start": "498000",
    "end": "511000"
  },
  {
    "text": "easiest one to assess here is performance our current performance is around 100 caroline's per second per CPU",
    "start": "501620",
    "end": "506690"
  },
  {
    "text": "core and we scale linearly up to 64 cores didn't test further for comparison",
    "start": "506690",
    "end": "512510"
  },
  {
    "start": "511000",
    "end": "545000"
  },
  {
    "text": "to give some baseline if you compare us with Java C we're around 10x faster than Java C per core and we're around a",
    "start": "512510",
    "end": "519680"
  },
  {
    "text": "hundred texts faster than existing tools that use the Ruby which is Robocop which only does syntax checking it doesn't do",
    "start": "519680",
    "end": "525620"
  },
  {
    "text": "any kind of modal and semantically from our experience so far today our tool is",
    "start": "525620",
    "end": "530900"
  },
  {
    "text": "the fastest way at stripe at Shopify and code base and all those companies to get",
    "start": "530900",
    "end": "535910"
  },
  {
    "text": "each rate back we're going to this deeper but the short summary is is today integrated in IDE and the current latency for response",
    "start": "535910",
    "end": "542990"
  },
  {
    "text": "is now seconds yep the next one is compatible with Ruby we",
    "start": "542990",
    "end": "548720"
  },
  {
    "start": "545000",
    "end": "581000"
  },
  {
    "text": "did not intend to deviate from Ruby either semantics or syntax we want to",
    "start": "548720",
    "end": "554210"
  },
  {
    "text": "continue using the tools that Ruby has when I continue using this tender tardies we're want to continue getting",
    "start": "554210",
    "end": "561290"
  },
  {
    "text": "the value and want to provide the vilify other companies the whole point here is",
    "start": "561290",
    "end": "567170"
  },
  {
    "text": "to improve the existing Ruby code base rather than creating a new code base",
    "start": "567170",
    "end": "572660"
  },
  {
    "text": "that might have been following better rules so we'll want to be able to adopt it an existing code base adopt it",
    "start": "572660",
    "end": "578000"
  },
  {
    "text": "incrementally and thus Coda's Ruby and going deeper into this one we want to be",
    "start": "578000",
    "end": "583460"
  },
  {
    "text": "able to adopt it gradually which and what this means is different teams different people will be adopting at a",
    "start": "583460",
    "end": "589820"
  },
  {
    "text": "different pace that's what introduced something called strictness levels the basic level does basic check circuit such as send text",
    "start": "589820",
    "end": "596720"
  },
  {
    "text": "level errors and for all the code in our code base even if you didn't describe it",
    "start": "596720",
    "end": "601940"
  },
  {
    "text": "as strictness level who wanted to do at least bars the next one is typed true which enables basic type checking it",
    "start": "601940",
    "end": "607970"
  },
  {
    "text": "makes sure that four methods for which you have signature they're correctly using its arguments and when you're",
    "start": "607970",
    "end": "614180"
  },
  {
    "text": "calling other methods you're correctly using them results types tricks enforces that every existing method that you",
    "start": "614180",
    "end": "620780"
  },
  {
    "text": "write into this code has a type signature and if a color says that not only I want to check my bodies I also",
    "start": "620780",
    "end": "627260"
  },
  {
    "text": "want to make a promise to people who consume me that I'm going to fully annotate my entire interface which means",
    "start": "627260",
    "end": "634010"
  },
  {
    "text": "as somebody who is be using this I'll get all the awesome features I'll get jump to IDE",
    "start": "634010",
    "end": "639440"
  },
  {
    "text": "I have Auto completion I have them to jump to definition I have type at hover",
    "start": "639440",
    "end": "644500"
  },
  {
    "text": "this is the level that you want to use if you're providing the typed API for",
    "start": "644500",
    "end": "650540"
  },
  {
    "text": "your users and finally this is level strong this level this allows you to ever do something untyped every",
    "start": "650540",
    "end": "657500"
  },
  {
    "text": "intermediary exception not only the your API everything that you do inside your implementations has to be typed and has",
    "start": "657500",
    "end": "664220"
  },
  {
    "text": "to be verified whether it runs correctly statically have it Kevin all those in place we went",
    "start": "664220",
    "end": "670510"
  },
  {
    "text": "to adopt survey as a team who is building this for internal usage our",
    "start": "670510",
    "end": "675579"
  },
  {
    "text": "goal is not to just build the tool is to actually make sure that the tool is useful which means make stripe use it so",
    "start": "675579",
    "end": "682089"
  },
  {
    "start": "681000",
    "end": "721000"
  },
  {
    "text": "here's the time of line of adoption it took us eight month to build the thing to do to a level that we believed it's",
    "start": "682089",
    "end": "689860"
  },
  {
    "text": "good enough it's good enough to try to start adopting it widely actually by that time those eight month included",
    "start": "689860",
    "end": "695769"
  },
  {
    "text": "pairing with two specific teams to make sure that their codebase can be typed the first team was the one who we",
    "start": "695769",
    "end": "702190"
  },
  {
    "text": "believe has the simplest code base and the second ones was the one that we believe had the hardest cookies so we",
    "start": "702190",
    "end": "707410"
  },
  {
    "text": "first wanted to make sure we can handle simple cases because we're just starting and then I wanted to make sure we can",
    "start": "707410",
    "end": "712480"
  },
  {
    "text": "handle the most complex ones then we spent seven months rolling this out and then from there we're working on editor",
    "start": "712480",
    "end": "720490"
  },
  {
    "text": "and open source doing now what does this provide us so I'll illustrate this on a",
    "start": "720490",
    "end": "727389"
  },
  {
    "start": "721000",
    "end": "745000"
  },
  {
    "text": "bunch of examples or Furby code and I'll describe you what would happen before at",
    "start": "727389",
    "end": "733120"
  },
  {
    "text": "stripe and what would happen now so if you were to have a look at this Ruby code if you carefully see there's a typo",
    "start": "733120",
    "end": "740470"
  },
  {
    "text": "the hello inside the main method is may mistyped one letter L is missing if you",
    "start": "740470",
    "end": "746350"
  },
  {
    "text": "were to run this you will see this when running this and in practice if you",
    "start": "746350",
    "end": "754779"
  },
  {
    "text": "didn't discover it yourself it will take it either time to test CI which means like five to 15 minutes to get feedback",
    "start": "754779",
    "end": "760300"
  },
  {
    "text": "that you had a typo there or maybe worse you'll hear it later when you deploy the change when the deployer will start",
    "start": "760300",
    "end": "767380"
  },
  {
    "text": "failing and your deploy will be rolled back or even worse it will not fail instantaneously but it will like fail",
    "start": "767380",
    "end": "773920"
  },
  {
    "text": "subtly in its time way and you'll get paged for um introduction so now if you",
    "start": "773920",
    "end": "779470"
  },
  {
    "text": "were to do this at stripe now you won't be able to even commit this you will get this error and it will tell you that you",
    "start": "779470",
    "end": "786579"
  },
  {
    "text": "there's no such thing as hello this is true for 100% of crota straight 100",
    "start": "786579",
    "end": "792790"
  },
  {
    "text": "percent of code has tried currently cannot have a typo in class name the next one is the method names similarly",
    "start": "792790",
    "end": "800529"
  },
  {
    "text": "in this one somebody wanted to have a call method called greeting but the call side for God that",
    "start": "800529",
    "end": "806320"
  },
  {
    "text": "the name is fool and they just called greet for private e similarly in order to justify this error in baseline room",
    "start": "806320",
    "end": "812650"
  },
  {
    "text": "you need to run this code and you'll see this error similarly unless you found this err yourself you'll find it either",
    "start": "812650",
    "end": "818680"
  },
  {
    "text": "in tests or in deploy or worse in production now with our thing you can",
    "start": "818680",
    "end": "827110"
  },
  {
    "text": "find it statically you add the type of notation type true which means we'll start type checking your code and then",
    "start": "827110",
    "end": "833650"
  },
  {
    "text": "we'll be able to tell you that the method agreed doesn't exist I'm actually not showing the entire error message the",
    "start": "833650",
    "end": "840280"
  },
  {
    "text": "hermès just actually includes suggestions what did you mean they didn't fit in the slides but we're also",
    "start": "840280",
    "end": "845830"
  },
  {
    "text": "trying to be helpful in suggesting what was the thing that you wanted to do it and you actually can pass us a flag to",
    "start": "845830",
    "end": "852130"
  },
  {
    "text": "make us auto fix it now this is true for",
    "start": "852130",
    "end": "857380"
  },
  {
    "start": "854000",
    "end": "1021000"
  },
  {
    "text": "85% of code described today you may ask why and for remaining 15% of the code it",
    "start": "857380",
    "end": "865930"
  },
  {
    "text": "takes effort to do this for majority of the code that we migrated so far migrated through automatic migrations",
    "start": "865930",
    "end": "872650"
  },
  {
    "text": "working we can go in fixed call and back bugs through automatic refactoring tools we're a small team when we started we",
    "start": "872650",
    "end": "879910"
  },
  {
    "text": "were three people and we did majority of migration ourselves by building tools that automatically do restructuring and",
    "start": "879910",
    "end": "886150"
  },
  {
    "text": "candle air cases for you the remaining a fifteen percent now our most bespoke",
    "start": "886150",
    "end": "891730"
  },
  {
    "text": "things which are one-offs and there's commonly like one or two errors that prevent file from being typed",
    "start": "891730",
    "end": "897690"
  },
  {
    "text": "increasingly this is code that when team goes and touches it they will see the",
    "start": "897690",
    "end": "903160"
  },
  {
    "text": "majority features in their their ID don't work with the code because the only work in typed files and then they",
    "start": "903160",
    "end": "908290"
  },
  {
    "text": "have a current in front of them to get it to type and majority of the typing that has been happening over last year",
    "start": "908290",
    "end": "914050"
  },
  {
    "text": "is driven by users I work in this file I want the features that I'm used to working so I'm just going to go and type",
    "start": "914050",
    "end": "919210"
  },
  {
    "text": "it and yes this is more than just errors you it allows you to express intent an",
    "start": "919210",
    "end": "927220"
  },
  {
    "text": "expressing intent is super useful for when you have a big organization and you have a question of you have a problem is",
    "start": "927220",
    "end": "933910"
  },
  {
    "text": "this one team who doesn't understand how to",
    "start": "933910",
    "end": "940210"
  },
  {
    "text": "use the API that another team provides or says the team that provides the API who didn't candle the use case that they",
    "start": "940210",
    "end": "946480"
  },
  {
    "text": "user was excited to be handled here is an example of this you have a method called do thing very descriptive name",
    "start": "946480",
    "end": "953670"
  },
  {
    "text": "can you pass string to it maybe what happens if you pass note hits which is",
    "start": "953670",
    "end": "959260"
  },
  {
    "text": "like Ruby speak for null in Java maybe it works how would you expect it to work should it handle it who should handle it",
    "start": "959260",
    "end": "966570"
  },
  {
    "text": "having type signatures change the way culture and collaboration between team",
    "start": "966570",
    "end": "972760"
  },
  {
    "text": "works now you explicitly describe your intent and you know that the first one",
    "start": "972760",
    "end": "977830"
  },
  {
    "text": "is okay the method is expected to take a string the second one is not this is a",
    "start": "977830",
    "end": "983860"
  },
  {
    "text": "good at strategy illustration of another thing which is we didn't want to postpone hard decision one of the hard",
    "start": "983860",
    "end": "989800"
  },
  {
    "text": "decisions that a lot of type systems postpone is whether nils inhabit every type for example in java nil is a varied",
    "start": "989800",
    "end": "997840"
  },
  {
    "text": "string and thus you can have errors in production when you pass now colin is trying to fix it after the fact and scalar three will be trying to",
    "start": "997840",
    "end": "1003660"
  },
  {
    "text": "figure this after the fact but just taking in gears for them for us from start we had this figured out and our",
    "start": "1003660",
    "end": "1010320"
  },
  {
    "text": "engineers don't know that this could have been a problem it could have been biting them and paging them in from",
    "start": "1010320",
    "end": "1015360"
  },
  {
    "text": "production at 4 a.m. yep so now recap",
    "start": "1015360",
    "end": "1021089"
  },
  {
    "start": "1021000",
    "end": "1082000"
  },
  {
    "text": "what have we achieved in 100% of files we can catch uninitialized constants in",
    "start": "1021089",
    "end": "1026160"
  },
  {
    "text": "80% 5% of files we can catch no method errors and this is one more metric in",
    "start": "1026160",
    "end": "1031199"
  },
  {
    "text": "75% of files 75% of call sites we know the specific method that you're calling while this is",
    "start": "1031199",
    "end": "1038938"
  },
  {
    "text": "not necessarily useful for type checking this is the metric which tells you in how many locations can we do",
    "start": "1038939",
    "end": "1044069"
  },
  {
    "text": "autocomplete this tells you how many locations can you hover over it and will you show the communication about what's",
    "start": "1044069",
    "end": "1049410"
  },
  {
    "text": "called there will show you which type is it being evaluated there this is the metric that tells you that how useful",
    "start": "1049410",
    "end": "1055830"
  },
  {
    "text": "this tool is as somebody who your iterative lis talking to as part of your development it's like somebody who knows",
    "start": "1055830",
    "end": "1062520"
  },
  {
    "text": "your codebase really well and is able to answer every question about it in milliseconds rather than you taking time",
    "start": "1062520",
    "end": "1069360"
  },
  {
    "text": "to deepen your thing trying to figure out whether it handles something or worse like asking a team whether it's",
    "start": "1069360",
    "end": "1075390"
  },
  {
    "text": "supposed to handle it or whereas having this team being a different continent in the different times only needing to wait 24 hours for it did I say we're in 10th",
    "start": "1075390",
    "end": "1083610"
  },
  {
    "text": "offices okay now all of this were just numbers and their numbers coming from",
    "start": "1083610",
    "end": "1089399"
  },
  {
    "text": "somebody who chose this numbers of their metric so they might be representative maybe I'm just trick trying to say that",
    "start": "1089399",
    "end": "1095399"
  },
  {
    "text": "this is an awesome metric but people actually hate it so here are some screenshots of what users say this is an",
    "start": "1095399",
    "end": "1102419"
  },
  {
    "start": "1099000",
    "end": "1125000"
  },
  {
    "text": "example of a person who were describing that they would use the type system to",
    "start": "1102419",
    "end": "1108210"
  },
  {
    "text": "annotate the code that they rarely use they touch it once every year or so they",
    "start": "1108210",
    "end": "1115139"
  },
  {
    "text": "always forget what it does and go in once they're in describing what it was supposed to do mixed easier for them to",
    "start": "1115139",
    "end": "1121169"
  },
  {
    "text": "go back to this code in a few years",
    "start": "1121169",
    "end": "1124880"
  },
  {
    "start": "1125000",
    "end": "1195000"
  },
  {
    "text": "here a user is describing that they like the pair programming experience that they get from the tool it's super useful",
    "start": "1126950",
    "end": "1134220"
  },
  {
    "text": "that we can work on programs that are incomplete programs that don't parse programs that",
    "start": "1134220",
    "end": "1140190"
  },
  {
    "text": "are still being written which means developers can get early feedback and she can adapt their design",
    "start": "1140190",
    "end": "1147929"
  },
  {
    "text": "to be better modular better readable battery in almost every way in the past",
    "start": "1147929",
    "end": "1154620"
  },
  {
    "text": "if somebody was to write a method that used to take either a string or an integer or an array or a boolean now if",
    "start": "1154620",
    "end": "1162330"
  },
  {
    "text": "they were to write this as a six plus a signature they will feel bad because I before this they could have like thought",
    "start": "1162330",
    "end": "1168860"
  },
  {
    "text": "implicitly I guess maybe it will work but now they have to actually write this down think about this and now when they",
    "start": "1168860",
    "end": "1175200"
  },
  {
    "text": "think about this they they're starting to question whether that's the right design similarly as part of code review",
    "start": "1175200",
    "end": "1181470"
  },
  {
    "text": "now code reviewers see this and if somebody is trying to introduce a method that like serves 55 purposes and like to",
    "start": "1181470",
    "end": "1188220"
  },
  {
    "text": "take 55 different kinds of arguments in specific combinations it's now explicit",
    "start": "1188220",
    "end": "1193470"
  },
  {
    "text": "and people will rise neighbor this is for a message from an early user",
    "start": "1193470",
    "end": "1200070"
  },
  {
    "start": "1195000",
    "end": "1259000"
  },
  {
    "text": "who found an undocumented flag to enable hover we're doing internal feature",
    "start": "1200070",
    "end": "1206309"
  },
  {
    "text": "releases where some features for ide i enabled for some users and features are not but bypassing magical flex you can",
    "start": "1206309",
    "end": "1212700"
  },
  {
    "text": "able for them for themselves we grew a group of users that was back solving them in order to enable features they",
    "start": "1212700",
    "end": "1219600"
  },
  {
    "text": "also broke our metrics because some of those features are not enabled because they are not fully stable because they crash yep so at some moment we became so",
    "start": "1219600",
    "end": "1229860"
  },
  {
    "text": "useful that people would prefer to enable features that like crash once every day because they're so useful",
    "start": "1229860",
    "end": "1237600"
  },
  {
    "text": "despite crashing from time to time so yep since then we stopped having those",
    "start": "1237600",
    "end": "1242669"
  },
  {
    "text": "plaques because want to make sure everything doesn't crash we're fuzzing it we're making we're",
    "start": "1242669",
    "end": "1248639"
  },
  {
    "text": "having metrics around it one in me being written in C++ crashes are scary because everything that you have a crash can",
    "start": "1248639",
    "end": "1254879"
  },
  {
    "text": "like arbitrate code execution something like this we don't have time to have crashes and finally it's fast",
    "start": "1254879",
    "end": "1261049"
  },
  {
    "text": "we have million lines of code and the tool completes our seconds we're",
    "start": "1261049",
    "end": "1266340"
  },
  {
    "text": "starting from scratch and when you use in an incremental mode in IDE its milliseconds depending what you do and",
    "start": "1266340",
    "end": "1273000"
  },
  {
    "text": "can be single-digit milliseconds can be if you know more okay so now what have",
    "start": "1273000",
    "end": "1278220"
  },
  {
    "start": "1275000",
    "end": "1453000"
  },
  {
    "text": "we learned so survey is a powerful tool that feeds many needs we have different",
    "start": "1278220",
    "end": "1284399"
  },
  {
    "text": "users some of them are building new projects and new products and they want",
    "start": "1284399",
    "end": "1290159"
  },
  {
    "text": "to move fast and not yet figure out what their things are supposed to do and that's not carefully broken and we have",
    "start": "1290159",
    "end": "1297210"
  },
  {
    "text": "some other users that are literally moving money literally moving big piles of money and they want to make sure that",
    "start": "1297210",
    "end": "1304110"
  },
  {
    "text": "they move the money correctly because otherwise well big money is a stick",
    "start": "1304110",
    "end": "1309139"
  },
  {
    "text": "people love using survey originally we had people who are pushing back originally who had people who said",
    "start": "1309139",
    "end": "1316320"
  },
  {
    "text": "something along the lines that survey is stopping them from doing the thing that they want this commonly comes from two",
    "start": "1316320",
    "end": "1324090"
  },
  {
    "text": "reasons one is a lot of people came from teams that",
    "start": "1324090",
    "end": "1330250"
  },
  {
    "text": "in previous companies that didn't grow as fast as we do and they had a team of like five people and they had a fee team",
    "start": "1330250",
    "end": "1335980"
  },
  {
    "text": "of the same five people over four years and thus making it easy to import new",
    "start": "1335980",
    "end": "1341800"
  },
  {
    "text": "engineers have having code that's easier to understand was not something of a big constraint of theirs while stripe is",
    "start": "1341800",
    "end": "1349060"
  },
  {
    "text": "growing fast and thus for us it's super important to make sure people can easily understand the code but George of the",
    "start": "1349060",
    "end": "1355570"
  },
  {
    "text": "code that's stripe is writing today will be maintained by more people as we go",
    "start": "1355570",
    "end": "1362340"
  },
  {
    "text": "second reason being that at the time they were complaining about this just to be honest stripe cerbai only had a stick",
    "start": "1362340",
    "end": "1369370"
  },
  {
    "text": "we're saying like you're wrong your code is wrong don't do this now we'll also",
    "start": "1369370",
    "end": "1374590"
  },
  {
    "text": "have candies we can give you information about what does your code do we can do refactoring for you we can you jump the",
    "start": "1374590",
    "end": "1380050"
  },
  {
    "text": "definition in previous time if you had a method with a common name and you want",
    "start": "1380050",
    "end": "1385720"
  },
  {
    "text": "to figure out which method with this name specifically are you calling and they're like hundred methods with the",
    "start": "1385720",
    "end": "1391540"
  },
  {
    "text": "same name in the codebase you need to figure out which of the hundred sexual here this was hard now if just comment",
    "start": "1391540",
    "end": "1399790"
  },
  {
    "text": "click and you're there and the final",
    "start": "1399790",
    "end": "1404920"
  },
  {
    "text": "part which is more of internal part this would could not have been possible without automating the migration the",
    "start": "1404920",
    "end": "1411850"
  },
  {
    "text": "majority of typing the majority of making the code actually follow the rules fixing the common code patterns fixing",
    "start": "1411850",
    "end": "1418870"
  },
  {
    "text": "absence of null checks or at least making them explicit was made by our team it wouldn't have been possible to",
    "start": "1418870",
    "end": "1426460"
  },
  {
    "text": "stop product development and stripe and ask everybody please go type your code",
    "start": "1426460",
    "end": "1431890"
  },
  {
    "text": "or rewrite or go to do something about this the biggest value proposition is this happened underneath people",
    "start": "1431890",
    "end": "1437710"
  },
  {
    "text": "underneath majority of developers without them needing to do much today just was doing future development and in",
    "start": "1437710",
    "end": "1446680"
  },
  {
    "text": "a year later it became much easier to do feature development even we became much easier to maintain their code so they",
    "start": "1446680",
    "end": "1452260"
  },
  {
    "text": "loved it and this was majority of their a lot the rollout was the most important part in",
    "start": "1452260",
    "end": "1458800"
  },
  {
    "start": "1453000",
    "end": "1477000"
  },
  {
    "text": "retrospective it was the super right call to have this very same team would the tool do they roll out because it",
    "start": "1458800",
    "end": "1465730"
  },
  {
    "text": "allowed us to understand the user cases allowed us to figure out what should actually be allowed and prohibited and",
    "start": "1465730",
    "end": "1471790"
  },
  {
    "text": "which features doing it and now we're in editor and OSS to me mode we have",
    "start": "1471790",
    "end": "1477820"
  },
  {
    "start": "1477000",
    "end": "1500000"
  },
  {
    "text": "integration via this code we implement something called language server protocol the reference implementation for it is vs code but there are other",
    "start": "1477820",
    "end": "1484630"
  },
  {
    "text": "implementations at work for it people are stripe of implemented implementation for VI",
    "start": "1484630",
    "end": "1491220"
  },
  {
    "text": "there is also an Emacs implementation lurking around yep it seems to be green well we have errors we have hover we",
    "start": "1491260",
    "end": "1500470"
  },
  {
    "text": "have go to definition we have autocomplete and documentation as you're writing the method you can see which",
    "start": "1500470",
    "end": "1507400"
  },
  {
    "text": "methods have this name you can also see the documentation for them and figure out which ones did you want and also in",
    "start": "1507400",
    "end": "1513970"
  },
  {
    "start": "1513000",
    "end": "1576000"
  },
  {
    "text": "case we're staying from the previous talk here that was about web assembly this thing is written in C++ we compile",
    "start": "1513970",
    "end": "1519100"
  },
  {
    "text": "to webassembly trans in browser so if you go to survey at run you can actually try it unfortunately with the way how it",
    "start": "1519100",
    "end": "1525670"
  },
  {
    "text": "works it doesn't show all the features in your phone specifically autocomplete will not work because we're actually using a small",
    "start": "1525670",
    "end": "1531730"
  },
  {
    "text": "version of vs code there and Microsoft did not intend to explore into cover use",
    "start": "1531730",
    "end": "1537460"
  },
  {
    "text": "cases of running vs code on the phone but if you go there from your vehicle you'll have the basic experience and if",
    "start": "1537460",
    "end": "1543520"
  },
  {
    "text": "you go from your computer from your computer you'll get autocomplete you'll get you up to definition you can also jump to definition to standard library",
    "start": "1543520",
    "end": "1549940"
  },
  {
    "text": "you can see which method exists on standard Java is standard Ruby things",
    "start": "1549940",
    "end": "1555270"
  },
  {
    "text": "it's the way how a lot of people now pepper like prototype small things",
    "start": "1555270",
    "end": "1560520"
  },
  {
    "text": "because it allows them like Friday's malaya growth matures increasingly we see people from both inside stripe and",
    "start": "1560520",
    "end": "1567070"
  },
  {
    "text": "inside stripe use it as a replacement for pasty because you can explore this",
    "start": "1567070",
    "end": "1572350"
  },
  {
    "text": "code you can understand it better it's easier to write in an audacity because autocomplete and now what's the current",
    "start": "1572350",
    "end": "1577960"
  },
  {
    "start": "1576000",
    "end": "1641000"
  },
  {
    "text": "state of it so we're collaborating closely with Ruby core team Ruby three will have types will settling out this",
    "start": "1577960",
    "end": "1585070"
  },
  {
    "text": "details about what's going to be the syntax index might be slightly different but Ruby three will have types and that's awesome it's an open source it",
    "start": "1585070",
    "end": "1594400"
  },
  {
    "text": "has open source open-source it after have an extensive private beta with more than 40 companies",
    "start": "1594400",
    "end": "1601180"
  },
  {
    "text": "adopting it at this moment we know of a lot of big",
    "start": "1601180",
    "end": "1608020"
  },
  {
    "text": "and small companies using it both internally and for their current because",
    "start": "1608020",
    "end": "1613990"
  },
  {
    "text": "it provides better user experience and developers want to be productive so having this as like we in our code base",
    "start": "1613990",
    "end": "1621430"
  },
  {
    "text": "you can use sir base or base trendy it's a good way to get people to enjoy work",
    "start": "1621430",
    "end": "1628690"
  },
  {
    "text": "and intend to work on your code base you can check it out the common like companies who have",
    "start": "1628690",
    "end": "1634210"
  },
  {
    "text": "blocked about it include Cohen base Shopify here aku the big players in Ruby and so that's to go into closing cerbai",
    "start": "1634210",
    "end": "1642730"
  },
  {
    "start": "1641000",
    "end": "1684000"
  },
  {
    "text": "has moved error discovery from test or production to development which makes",
    "start": "1642730",
    "end": "1648880"
  },
  {
    "text": "for match faster creation tool for developers it's open sourced you can use it it works this common Ruby code I",
    "start": "1648880",
    "end": "1655930"
  },
  {
    "text": "started by saying that we don't use rails majority of your group exe system does rails and that's why I'm making so",
    "start": "1655930",
    "end": "1661600"
  },
  {
    "text": "much emphasis on that other companies also do this because they do use rails and they made it work for them specifically CGI Chan Zuckerberg",
    "start": "1661600",
    "end": "1669310"
  },
  {
    "text": "initiative has created a huge project called survey do trails which adds",
    "start": "1669310",
    "end": "1675250"
  },
  {
    "text": "enough things as extensions to survey to support rails code bases and all the people use in those and dogs are life at",
    "start": "1675250",
    "end": "1682150"
  },
  {
    "text": "sir beta cork thank you for listening to me I would love your questions do we",
    "start": "1682150",
    "end": "1693820"
  },
  {
    "start": "1684000",
    "end": "1695000"
  },
  {
    "text": "have mics or should I repeat the questions how they're being the questions please",
    "start": "1693820",
    "end": "1699270"
  },
  {
    "start": "1695000",
    "end": "1719000"
  },
  {
    "text": "okay so the question was everybody has a lot of dynamic features including being",
    "start": "1716700",
    "end": "1722230"
  },
  {
    "start": "1719000",
    "end": "1941000"
  },
  {
    "text": "able to define reopening glass which is really speak for define new methods into existing glass or define new interfaces",
    "start": "1722230",
    "end": "1728710"
  },
  {
    "text": "that glass now implements despite the previous definition of it not saying it does or being able to change the scope",
    "start": "1728710",
    "end": "1735549"
  },
  {
    "text": "so that you're evaluating something with your this pointer which is root which Ruby's spoken self which changes which",
    "start": "1735549",
    "end": "1743380"
  },
  {
    "text": "is called class table and instance eval and those are very dynamic features very meta programming features and how do we",
    "start": "1743380",
    "end": "1749049"
  },
  {
    "text": "so do we and how do we support them so the answer is twofold first of all there",
    "start": "1749049",
    "end": "1754840"
  },
  {
    "text": "is always something called TDOT unsafe there's always a way for you to say I'm intentionally doing something that you",
    "start": "1754840",
    "end": "1761559"
  },
  {
    "text": "don't know what it is I know what this right and there's a backdoor that you can always open sometimes it's a right",
    "start": "1761559",
    "end": "1766840"
  },
  {
    "text": "tool sometimes it's not so for every feature the question is do we want to support it and make it official or do we",
    "start": "1766840",
    "end": "1774429"
  },
  {
    "text": "want to affect you let's say that this is an unsafe feature you can still continue using this but we believe that",
    "start": "1774429",
    "end": "1779710"
  },
  {
    "text": "there a better better better surround us for class level and instance of all we",
    "start": "1779710",
    "end": "1784870"
  },
  {
    "text": "consider it's unsafe for reopening classes we consider it safe and surveying natively supports finding all",
    "start": "1784870",
    "end": "1791740"
  },
  {
    "text": "definitions that reopen a class and being able to find all interfaces from them and other definitions so it's",
    "start": "1791740",
    "end": "1797440"
  },
  {
    "text": "similarly from experience of deploying this at stripe and in other companies we",
    "start": "1797440",
    "end": "1802450"
  },
  {
    "text": "believe we found a balance where some of the features are natively supported some of the features can be supported via",
    "start": "1802450",
    "end": "1809200"
  },
  {
    "text": "backdoors the question was do we staple",
    "start": "1809200",
    "end": "1818049"
  },
  {
    "text": "cerbai a new test suite in our test suite the survey has two components I didn't go deep into phys and slides but",
    "start": "1818049",
    "end": "1824380"
  },
  {
    "text": "and I dive deeper into questions survey has runtime component and static component static components a static",
    "start": "1824380",
    "end": "1829450"
  },
  {
    "text": "type checker it runs as a concurrent job in your in our CI and if your code doesn't type check and can't be merged for in tests",
    "start": "1829450",
    "end": "1837910"
  },
  {
    "text": "we have also runtime components verifies whether your they're correct in runtime and run it in both CIN production and development",
    "start": "1837910",
    "end": "1845350"
  },
  {
    "text": "everywhere the question was whether we",
    "start": "1845350",
    "end": "1851560"
  },
  {
    "text": "check the types of our tests mm-hmm the question is funny because we didn't",
    "start": "1851560",
    "end": "1858430"
  },
  {
    "text": "intend to well we grew experience from Facebook and Dropbox who did not type",
    "start": "1858430",
    "end": "1865690"
  },
  {
    "text": "check their tests our users wanted type check their tests for themselves so our",
    "start": "1865690",
    "end": "1871210"
  },
  {
    "text": "team like the majority of the stock starts was saying it should go and do this to yourself for your users our",
    "start": "1871210",
    "end": "1876490"
  },
  {
    "text": "users at some point found it so useful that they wanted the same features two workers tests and they made it work",
    "start": "1876490",
    "end": "1882810"
  },
  {
    "text": "so some tests do we still don't officially require it but not ignore we",
    "start": "1882810",
    "end": "1889750"
  },
  {
    "text": "like encouraged or prohibited the thing about testers will find the tester frequently more fragile and the",
    "start": "1889750",
    "end": "1894940"
  },
  {
    "text": "sometimes type system is not the thing that you want in particular if you like stabbing out stuff and type system doesn't want to model this in particular",
    "start": "1894940",
    "end": "1902020"
  },
  {
    "text": "because our judge testimonials what happens in production and sometimes tests change the thing to not do the",
    "start": "1902020",
    "end": "1907990"
  },
  {
    "text": "thing that production does an incompatible way it's increasingly rare but existing tests do this and that's",
    "start": "1907990",
    "end": "1914410"
  },
  {
    "text": "our type system is the thing that most cloves lifting mimics production and some tests don't want it to so those",
    "start": "1914410",
    "end": "1920290"
  },
  {
    "text": "tests are not object that answer your question awesome thank you for a great question in the back please",
    "start": "1920290",
    "end": "1928649"
  },
  {
    "text": "yeah thank you for a great question the question was does survey have interfaces as then would you be able to say that",
    "start": "1940780",
    "end": "1947060"
  },
  {
    "start": "1941000",
    "end": "2014000"
  },
  {
    "text": "this is like some structure that you want multiple classrooms classes to implement and does follow Ruby has",
    "start": "1947060",
    "end": "1953150"
  },
  {
    "text": "something called modules which is which we use as interfaces so you we extended",
    "start": "1953150",
    "end": "1958340"
  },
  {
    "text": "this to disclude to define notion of abstract methods you can say that this is a module which has a method and this",
    "start": "1958340",
    "end": "1965150"
  },
  {
    "text": "method we describe as abstract in the signature and we will prohibit classes from instantiate being accentuated both",
    "start": "1965150",
    "end": "1971870"
  },
  {
    "text": "in runtime and statically unless they implement all their abstract methods this effectively allowed us to have",
    "start": "1971870",
    "end": "1977930"
  },
  {
    "text": "interfaces the book had this pretty early more recently around four months ago we implement a notion of sealed also where",
    "start": "1977930",
    "end": "1985460"
  },
  {
    "text": "not only you can define interface it can also define an interface that knows every class that implements it and when",
    "start": "1985460",
    "end": "1991550"
  },
  {
    "text": "you pattern match over it we can do exhaustive Ness checking they do handle all of them so yeah interfaces are super",
    "start": "1991550",
    "end": "1997610"
  },
  {
    "text": "awesome we're using them a lot they're a great feature thank you for a great question more questions please",
    "start": "1997610",
    "end": "2002740"
  },
  {
    "text": "yes please",
    "start": "2002740",
    "end": "2005490"
  },
  {
    "text": "they the question was well the type checker implemented to Ruby itself the",
    "start": "2012800",
    "end": "2018170"
  },
  {
    "start": "2014000",
    "end": "2104000"
  },
  {
    "text": "answer is no the Ron type type system is a ruby library it works on baseline normal Ruby doesn't",
    "start": "2018170",
    "end": "2024380"
  },
  {
    "text": "eat any much and impetuous you can use it in any Ruby code base the static type system is a separate program that's",
    "start": "2024380",
    "end": "2030980"
  },
  {
    "text": "written in C++ the reason it being written in C++ is from my prior prior",
    "start": "2030980",
    "end": "2036650"
  },
  {
    "text": "experience working on compilers I believe that the thing that defines performance of compilers is good work on",
    "start": "2036650",
    "end": "2044480"
  },
  {
    "text": "memory locality compilers effectively have a bunch of core data structures that are huge hash maps and the thing",
    "start": "2044480",
    "end": "2050419"
  },
  {
    "text": "that will define whether you're fast or not is whether you can quickly find stuff there that's the thing that's",
    "start": "2050419",
    "end": "2057980"
  },
  {
    "text": "important for you is not your cpu performance it's not how many threads you have it's how much memory you can",
    "start": "2057980",
    "end": "2063560"
  },
  {
    "text": "read through your CPU and how much memory do waste reading through CPU so we chose a language which allows us to",
    "start": "2063560",
    "end": "2069500"
  },
  {
    "text": "control for memory layout the original team all new C++ a lot of existing type",
    "start": "2069500",
    "end": "2074510"
  },
  {
    "text": "checkers that compilers have build a lot of tools for them and we just build on them and invert respect we believe this",
    "start": "2074510",
    "end": "2079850"
  },
  {
    "text": "was the right choice it also allowed us to compile to web assembly and I have a very nice website but at the time we",
    "start": "2079850",
    "end": "2085340"
  },
  {
    "text": "didn't consider this as part of the choice but like the web site was built on a plane to Japan and it sounds",
    "start": "2085340",
    "end": "2091398"
  },
  {
    "text": "awesome and it's awesome so it was super easy more questions please yes please",
    "start": "2091399",
    "end": "2099190"
  },
  {
    "text": "great question so the question was with Ruby having libraries they wait how Ruby",
    "start": "2103710",
    "end": "2109809"
  },
  {
    "start": "2104000",
    "end": "2196000"
  },
  {
    "text": "calls and bean gems how do we type check something that calls methods into gems the answer being stripe had a different",
    "start": "2109809",
    "end": "2119770"
  },
  {
    "text": "solution for this which is we actually want to reap a majority of the things but the other companies didn't so",
    "start": "2119770",
    "end": "2126569"
  },
  {
    "text": "Shopify and coinbase independently build a way to write an heir RBI as an",
    "start": "2126569",
    "end": "2132789"
  },
  {
    "text": "interface file for a gem at this moment I believe majority of people in",
    "start": "2132789",
    "end": "2138700"
  },
  {
    "text": "open-source are including Shopify are converging on using the one implemented",
    "start": "2138700",
    "end": "2144339"
  },
  {
    "text": "by coinbase you can put it into a German it will generate you type signature for it majority of the times are going to be",
    "start": "2144339",
    "end": "2150039"
  },
  {
    "text": "just untyped because it can't guess it but the idea is that given a gem you will get the skeleton and then if you",
    "start": "2150039",
    "end": "2156670"
  },
  {
    "text": "want to stack go scribe type some methods you can go do this manually commit you to your code control and",
    "start": "2156670",
    "end": "2161799"
  },
  {
    "text": "upstream it to a common repository that's called survey tag where companies like commit exchange those typing",
    "start": "2161799",
    "end": "2170140"
  },
  {
    "text": "interfaces between each other all of those was built by Cohen base they did an awesome job all of this is officers",
    "start": "2170140",
    "end": "2178920"
  },
  {
    "text": "awesome more questions yes please",
    "start": "2179099",
    "end": "2184770"
  },
  {
    "text": "the question was are there any advantages for using this in a new project over typed language it's a",
    "start": "2189100",
    "end": "2195890"
  },
  {
    "text": "tricky question the question is do you",
    "start": "2195890",
    "end": "2203570"
  },
  {
    "start": "2203000",
    "end": "2325000"
  },
  {
    "text": "want to have the same codebase where people can be both strict and yellow in",
    "start": "2203570",
    "end": "2209720"
  },
  {
    "text": "different ends this is the value proposition for new code bases and somebody may want this somebody may not",
    "start": "2209720",
    "end": "2217840"
  },
  {
    "text": "so like some companies decide to let's say write a prototype in one like which",
    "start": "2217840",
    "end": "2222980"
  },
  {
    "text": "say Python but write the actual implementation in another language say C++ developer position here is that you",
    "start": "2222980",
    "end": "2230030"
  },
  {
    "text": "can go from yellow to strict while staying in the same codebase now there",
    "start": "2230030",
    "end": "2235760"
  },
  {
    "text": "might be other reasons why as part of migration you may decide to choose a different language let's say performance",
    "start": "2235760",
    "end": "2242650"
  },
  {
    "text": "but at the current situation the developer position basically is this if",
    "start": "2242650",
    "end": "2248420"
  },
  {
    "text": "you're starting a new project another one which I don't think matters for in your project but that's an interesting",
    "start": "2248420",
    "end": "2254480"
  },
  {
    "text": "consideration if you intend to have a big company I don't think anybody is in this situation good thinking as far",
    "start": "2254480",
    "end": "2259640"
  },
  {
    "text": "along but like to the best of my knowledge this is the fastest IDE integration and the fastest type checker",
    "start": "2259640",
    "end": "2266030"
  },
  {
    "text": "that I know about for a practical language and that's if you ever intend to have a code base in million lines of",
    "start": "2266030",
    "end": "2271910"
  },
  {
    "text": "code like let's put it this way Ruby mine in our code base takes a few",
    "start": "2271910",
    "end": "2278210"
  },
  {
    "text": "minutes to start and like double or triple digits seconds to do all good jump to definition Ruby mine has pretty",
    "start": "2278210",
    "end": "2286640"
  },
  {
    "text": "much the same performance for Ruby and Java they're here like they use the same infrastructure for them so the question",
    "start": "2286640",
    "end": "2292130"
  },
  {
    "text": "is probably if you're starting a new column a small company you you shouldn't",
    "start": "2292130",
    "end": "2297200"
  },
  {
    "text": "include in your planning like how are you going to work in terms of million lines of code but this is something that",
    "start": "2297200",
    "end": "2303500"
  },
  {
    "text": "this also unique preposition for this project at the same time I feel like they're like 10 companies in the world who care about it",
    "start": "2303500",
    "end": "2310869"
  },
  {
    "text": "yep the question was how do we get that such fast performance I did a talk about",
    "start": "2315940",
    "end": "2325790"
  },
  {
    "start": "2325000",
    "end": "2443000"
  },
  {
    "text": "this on JVM language summit it's available in the on the internet the short summary is the most important tool",
    "start": "2325790",
    "end": "2334610"
  },
  {
    "text": "for you is memory locality and knowing what do you want to do you can define",
    "start": "2334610",
    "end": "2341420"
  },
  {
    "text": "data structures that work well memory locality wise for specific",
    "start": "2341420",
    "end": "2347800"
  },
  {
    "text": "transformations that are performance sensitive and at the same time you want to encode enough extension points",
    "start": "2347800",
    "end": "2353030"
  },
  {
    "text": "because some people will want you to extend you and you want to make sure that when they extend your performance still stay still still stays good so",
    "start": "2353030",
    "end": "2360650"
  },
  {
    "text": "it's a balance between having the things entirely logged down where performance matter and doing very good data",
    "start": "2360650",
    "end": "2367970"
  },
  {
    "text": "structures for it and data structure is designed around not the common things of",
    "start": "2367970",
    "end": "2373000"
  },
  {
    "text": "CPU performance there is entire algorithms see read study called",
    "start": "2373000",
    "end": "2379760"
  },
  {
    "text": "external memory algorithms and those are the algorithm where you'll be solving a problem how do I sort a petabyte of data",
    "start": "2379760",
    "end": "2386570"
  },
  {
    "text": "given a single computer which has a gigabyte of memory you effectively have",
    "start": "2386570",
    "end": "2391880"
  },
  {
    "text": "the same question between your CPU caches and your memory because when you",
    "start": "2391880",
    "end": "2397100"
  },
  {
    "text": "read when you intend to write a read a single byte from your memory you actually read an entire row from the",
    "start": "2397100",
    "end": "2403390"
  },
  {
    "text": "actual RAM into your cache and this capacity this throughput is the one that",
    "start": "2403390",
    "end": "2409910"
  },
  {
    "text": "you want to utilize fully so short answer is there there is a set of",
    "start": "2409910",
    "end": "2417500"
  },
  {
    "text": "algorithms which is external memory algorithms that if you started from there you'll be able to write software",
    "start": "2417500",
    "end": "2423260"
  },
  {
    "text": "that uses caches effectively and with",
    "start": "2423260",
    "end": "2428600"
  },
  {
    "text": "our contemporary hardware having many layers of caches if you use them effectively you have like 10x speed apps",
    "start": "2428600",
    "end": "2434330"
  },
  {
    "text": "hundred X speed ups that answer your question awesome any more questions yes",
    "start": "2434330",
    "end": "2442280"
  },
  {
    "text": "please like we're because two years ago maybe and there was a couple talks about",
    "start": "2442280",
    "end": "2447290"
  },
  {
    "start": "2443000",
    "end": "2457000"
  },
  {
    "text": "type-checking grouping do you feel like this is becoming a standard okay so the",
    "start": "2447290",
    "end": "2457160"
  },
  {
    "start": "2457000",
    "end": "2557000"
  },
  {
    "text": "question was the attendee was at rubyconf previous year the year before",
    "start": "2457160",
    "end": "2463730"
  },
  {
    "text": "two years ago and the question is glass has become a standard do other company",
    "start": "2463730",
    "end": "2470270"
  },
  {
    "text": "are the other companies adopting this I'm presenting and talking to Ruby component in a week and there's a separate track on typing with me opening",
    "start": "2470270",
    "end": "2478130"
  },
  {
    "text": "the track and then Shopify presenting this their their experience and then one of coroico matters presenting the his",
    "start": "2478130",
    "end": "2485180"
  },
  {
    "text": "tool that works for stepping so I think the stands here is this is one of the",
    "start": "2485180",
    "end": "2491420"
  },
  {
    "text": "tools that Ruby companies Ruby communities can decide to use in some",
    "start": "2491420",
    "end": "2496760"
  },
  {
    "text": "cases this is tool that beneficial in particular we strongly believe that this is a beneficial tool in a codebase",
    "start": "2496760",
    "end": "2502760"
  },
  {
    "text": "that's big we're notion of interfaces is useful being explicit as useful and setting up explicit expectations is",
    "start": "2502760",
    "end": "2508910"
  },
  {
    "text": "useful it's also super good when you want to discover it through the code base that said this tool doesn't stop",
    "start": "2508910",
    "end": "2518270"
  },
  {
    "text": "untyped Ruby from existing there are there are use cases where companies",
    "start": "2518270",
    "end": "2523450"
  },
  {
    "text": "benefit from having like super magical DSL the first just solves 90% of their",
    "start": "2523450",
    "end": "2530840"
  },
  {
    "text": "business problem in this DSL and making it getting rid of this DSL for a sake of",
    "start": "2530840",
    "end": "2537590"
  },
  {
    "text": "type checking or trying to support it adjustment worth it so my belief is in",
    "start": "2537590",
    "end": "2544640"
  },
  {
    "text": "many companies it's useful I don't believe it's universally useful for",
    "start": "2544640",
    "end": "2549710"
  },
  {
    "text": "everybody there are some use cases where there is something that cerbai would not like that might be better for you and",
    "start": "2549710",
    "end": "2556010"
  },
  {
    "text": "maybe you choose the other one",
    "start": "2556010",
    "end": "2559180"
  },
  {
    "start": "2557000",
    "end": "2575000"
  },
  {
    "text": "like sorbet specifically it seems like it's used by a lot of the big companies",
    "start": "2562260",
    "end": "2568460"
  },
  {
    "text": "okay so there the question was about not specific about type chicken but this",
    "start": "2574160",
    "end": "2579690"
  },
  {
    "start": "2575000",
    "end": "2723000"
  },
  {
    "text": "implementation of type system for every for context the other implementations of touching Furby rrdl",
    "start": "2579690",
    "end": "2585180"
  },
  {
    "text": "which is a result of the work at edema of Jeff foster and his lab for around 15 years there is work by called",
    "start": "2585180",
    "end": "2592230"
  },
  {
    "text": "steep by Satara Matt's monster doesn't be mixed with Matt's was greater ruby it's a different person who just happens",
    "start": "2592230",
    "end": "2597330"
  },
  {
    "text": "to have the same name and there has been a project by github called type 2 ruby",
    "start": "2597330",
    "end": "2603330"
  },
  {
    "text": "and there has been a project by IntelliJ folks I don't think it has a public name the current state is our DL is",
    "start": "2603330",
    "end": "2610950"
  },
  {
    "text": "suggesting to use us if you want something production-ready they're doing research they're good steepest suggesting to use us if you",
    "start": "2610950",
    "end": "2616560"
  },
  {
    "text": "want something that's fast I don't know what's happening with the IntelliJ one I",
    "start": "2616560",
    "end": "2623130"
  },
  {
    "text": "think they're think was more similar to feedback driven profiling where they're not statically doing rather they",
    "start": "2623130",
    "end": "2628680"
  },
  {
    "text": "gathering feedback from the tests and crowdsourcing from everybody so I think they synergize with each other where you",
    "start": "2628680",
    "end": "2634890"
  },
  {
    "text": "can use that tool to infer types for us and vice versa so the basic question is",
    "start": "2634890",
    "end": "2640050"
  },
  {
    "text": "one is really the RDL is really good in a sense it has advanced language features that we don't you can express",
    "start": "2640050",
    "end": "2645390"
  },
  {
    "text": "complex types you do type level computations you can do proofs you can have your types access your",
    "start": "2645390",
    "end": "2652470"
  },
  {
    "text": "database and do logic based on that while are but the dispatcher that comes",
    "start": "2652470",
    "end": "2659340"
  },
  {
    "text": "is is this type checking these videos around 80 lines per second so sometimes",
    "start": "2659340",
    "end": "2665010"
  },
  {
    "text": "this is the better tool sometimes the other is the better rule like we're all working together we're all part of Ruby",
    "start": "2665010",
    "end": "2671400"
  },
  {
    "text": "types working group for Ruby 3 all of these people who are listed are in the same meeting every month we're depending",
    "start": "2671400",
    "end": "2679740"
  },
  {
    "text": "what's the set of use cases is that you want to have a little different one of them worry better the experience so far",
    "start": "2679740",
    "end": "2686370"
  },
  {
    "text": "is we're the only one that has IDE so board we're substantially faster than the others that said we're less expressive than the",
    "start": "2686370",
    "end": "2693450"
  },
  {
    "text": "others now the question is do you value having a smaller language but which is",
    "start": "2693450",
    "end": "2699090"
  },
  {
    "text": "supported better or do you want to be able to detect levels of competitions and sometimes is the not using surveys",
    "start": "2699090",
    "end": "2705570"
  },
  {
    "text": "and something else he's a better answer for you thank you for a great question and yeah more Iran you're become any",
    "start": "2705570",
    "end": "2715500"
  },
  {
    "text": "more questions awesome thank you for following my talk have a great day",
    "start": "2715500",
    "end": "2722150"
  }
]