[
  {
    "text": "[Music]",
    "start": "620",
    "end": "9349"
  },
  {
    "text": "so thanks everybody for coming out I'm David Chandler Android developer Advocate with Google and I've been with",
    "start": "25119",
    "end": "30400"
  },
  {
    "text": "Google about two years I'm based in Atlanta tonight I just wanted to give you a little preview of a simple",
    "start": "30400",
    "end": "37160"
  },
  {
    "text": "template based object relational mapping tool to be truthful I came up with the name storm because I thought it was cool",
    "start": "37160",
    "end": "43120"
  },
  {
    "text": "and then I figured out what S&T stood for so but but that's what it is um so",
    "start": "43120",
    "end": "50120"
  },
  {
    "text": "we try to write a lot of code on the Android developer relations team and I'm",
    "start": "50120",
    "end": "55960"
  },
  {
    "text": "fairly new to the team I came in January so one of the first things that I noticed when I started doing Android",
    "start": "55960",
    "end": "62399"
  },
  {
    "text": "development was I said well I want to purist stff to the database on the phone it's really cool that it has SQL light",
    "start": "62399",
    "end": "68320"
  },
  {
    "text": "and I'm like uh so you know where's my where's my omm because I'm used to having something like hibernate on the",
    "start": "68320",
    "end": "74759"
  },
  {
    "text": "server that makes it really easy to do that and uh there were there are a few ORS out there uh but I wasn't completely",
    "start": "74759",
    "end": "82280"
  },
  {
    "text": "satisfied with what was there so I decided to write one um besides I needed something to do for the last month you",
    "start": "82280",
    "end": "88920"
  },
  {
    "text": "know anyway so that's what I'm showing you tonight this is kind of a I'm calling it a preview uh because we're as",
    "start": "88920",
    "end": "96520"
  },
  {
    "text": "a team we're interested in constantly in improving the state of Android tooling and in making it easier for developers",
    "start": "96520",
    "end": "103439"
  },
  {
    "text": "to write their first Android app or any Android app so we are trying to beef up",
    "start": "103439",
    "end": "110759"
  },
  {
    "text": "the ADT and Android developer tools and you've probably seen in the last month",
    "start": "110759",
    "end": "116439"
  },
  {
    "text": "or so we've come out with application templates and we're continuing to add more of those for for new types of apps",
    "start": "116439",
    "end": "123240"
  },
  {
    "text": "and we also have a way now for you to create your own templates um we're talking about adding a hook for",
    "start": "123240",
    "end": "128319"
  },
  {
    "text": "annotation processing which is something that this uh software uses uh so that if",
    "start": "128319",
    "end": "133360"
  },
  {
    "text": "you have an Android Library um that comes through like the official download",
    "start": "133360",
    "end": "139519"
  },
  {
    "text": "manager then you could have that run an annotation processor automatically or configure it in Eclipse automatically",
    "start": "139519",
    "end": "146120"
  },
  {
    "text": "something like that so that that should hopefully increase the the scope of of",
    "start": "146120",
    "end": "153280"
  },
  {
    "text": "tooling and and I guess some things that are possible there so I want to spend like the first",
    "start": "153280",
    "end": "160400"
  },
  {
    "text": "uh part of tonight talking about storm and then we'll get to this the second part if I have a few minutes left I'll",
    "start": "160400",
    "end": "167000"
  },
  {
    "text": "talk on basic HTTP client which is another open source project I did for",
    "start": "167000",
    "end": "172800"
  },
  {
    "text": "Android so how many I assume everybody here is an Android developer is that true you like you've written hello world",
    "start": "172800",
    "end": "179519"
  },
  {
    "text": "whatever okay so those of you who haven't uh I'm not going to try to do any Android 101 stuff tonight we're just",
    "start": "179519",
    "end": "185720"
  },
  {
    "text": "going to jump right into what this thing is but at a high level sqlite is a SQL",
    "start": "185720",
    "end": "191920"
  },
  {
    "text": "database that's on the phone and you can use it in your apps um the apis that are",
    "start": "191920",
    "end": "198840"
  },
  {
    "text": "there are pretty low level so when you want to use a database you have to write",
    "start": "198840",
    "end": "204400"
  },
  {
    "text": "your create table statements um you have to pretty much hand code all your SQL there's a few",
    "start": "204400",
    "end": "210560"
  },
  {
    "text": "convenience methods that let you use objects like content values to do an",
    "start": "210560",
    "end": "216080"
  },
  {
    "text": "insert but some way or another you're going to have to take the contents of",
    "start": "216080",
    "end": "222159"
  },
  {
    "text": "any Java objects that you have I'm going to call them pojos tonight your plain all Java object and call the various",
    "start": "222159",
    "end": "229080"
  },
  {
    "text": "bind methods or convert them to Strings and pass them as arguments or somehow you know get them to be part of a SQL",
    "start": "229080",
    "end": "236040"
  },
  {
    "text": "statement that does an insert a query uh up whatever it may be right so what I'm",
    "start": "236040",
    "end": "242400"
  },
  {
    "text": "going to show you tonight is really just a little bit of tooling that that writes that code for you and uh what is really",
    "start": "242400",
    "end": "249879"
  },
  {
    "text": "a very efficient way right so let me jump to the next slide uh so nobody likes to hand code",
    "start": "249879",
    "end": "257560"
  },
  {
    "text": "SQL well maybe some people do actually I know some people do I take that back any",
    "start": "257560",
    "end": "263600"
  },
  {
    "text": "dvas in the room who love to hand code SQL um sqlite already has some object",
    "start": "263600",
    "end": "269520"
  },
  {
    "text": "like wrappers the content values objects there's uh in the database I think it's database utils",
    "start": "269520",
    "end": "276919"
  },
  {
    "text": "there's uh an insert method that takes a Content values object so it's just essentially a",
    "start": "276919",
    "end": "283400"
  },
  {
    "text": "map of properties and then on the other side you have your your cursor object",
    "start": "283400",
    "end": "289000"
  },
  {
    "text": "which you can call one row at a time and call the various get methods like get short get long get int for the",
    "start": "289000",
    "end": "295440"
  },
  {
    "text": "appropriate field type and then uh get a property out of the cursor",
    "start": "295440",
    "end": "300759"
  },
  {
    "text": "so these are these are kind of object like but what I'd really like to be able to do is actually you know have a Dao",
    "start": "300759",
    "end": "307440"
  },
  {
    "text": "class a data access object maybe serers side terminology um and just do a dao.",
    "start": "307440",
    "end": "313919"
  },
  {
    "text": "insert and give it my actual Java object and have it figure out how to get that into the the SQL right so that's what",
    "start": "313919",
    "end": "321319"
  },
  {
    "text": "this does so a lot of apps just require a place to to stuff objects right they",
    "start": "321319",
    "end": "326560"
  },
  {
    "text": "don't they don't need the full relational power of the database you might not need referential integrity and all that in fact it's not even enabled",
    "start": "326560",
    "end": "333680"
  },
  {
    "text": "by default in your uh in your Android apps um and",
    "start": "333680",
    "end": "340120"
  },
  {
    "text": "then existing orms I mentioned earlier tend to use reflection um which isn't a",
    "start": "340120",
    "end": "346120"
  },
  {
    "text": "big deal in Java nowadays um but it does make your code a little harder to debug if you're trying",
    "start": "346120",
    "end": "351720"
  },
  {
    "text": "to figure out what's going on deep down in the internals uh or they require upfront modeling like green Dao so I have to ask",
    "start": "351720",
    "end": "359360"
  },
  {
    "text": "are are the authors of these projects here because this is San Francisco where a lot of this stuff happens a while you've been using green",
    "start": "359360",
    "end": "366919"
  },
  {
    "text": "for a while okay use",
    "start": "366919",
    "end": "373080"
  },
  {
    "text": "what using a customized version Okay cool so from what I've looked at Green I",
    "start": "373080",
    "end": "379160"
  },
  {
    "text": "haven't looked a lot but you you have to create your schema first and uh set up you know it's modeling basically um so",
    "start": "379160",
    "end": "387800"
  },
  {
    "text": "what I was looking for was something that was really easy and embraced all",
    "start": "387800",
    "end": "393400"
  },
  {
    "text": "the latest fads like convention over configuration uh was annotation driven uh we'll do code generation so",
    "start": "393400",
    "end": "401400"
  },
  {
    "text": "you can debug it easier and also we'll leave that alone for now well",
    "start": "401400",
    "end": "408599"
  },
  {
    "text": "it's performing as well um and then has minimal performance overhead so the the",
    "start": "408599",
    "end": "414280"
  },
  {
    "text": "generated code that you're going to look at is going to be almost identical to the code that you would write by hand",
    "start": "414280",
    "end": "420479"
  },
  {
    "text": "um the only step that's different is the convert the different type conversions there may be a little overhead there but",
    "start": "420479",
    "end": "427000"
  },
  {
    "text": "for the most part it's what you'd write by hand okay some non-g goals of the",
    "start": "427000",
    "end": "432879"
  },
  {
    "text": "project at Google all of our projects have goals and non goals I think it's kind of cool right that we actually",
    "start": "432879",
    "end": "438639"
  },
  {
    "text": "think about that so it is not intended to be a kitchen sync orm U there are no",
    "start": "438639",
    "end": "444080"
  },
  {
    "text": "relationship modeling capabilities right now um it's really intended to be just",
    "start": "444080",
    "end": "449599"
  },
  {
    "text": "the convenience for stuffing objects in your app into the database as a persistent store another non goal is the",
    "start": "449599",
    "end": "457000"
  },
  {
    "text": "absolute maximum performance possible uh so I'm okay with a little overhead if it makes the generated code easier to read",
    "start": "457000",
    "end": "464159"
  },
  {
    "text": "and write um you can override any of that stuff but if you need absolute Max",
    "start": "464159",
    "end": "470039"
  },
  {
    "text": "performance you're probably going to hand code your stuff so setup steps there's two jars",
    "start": "470039",
    "end": "476680"
  },
  {
    "text": "that you need there's storm API which uh contains the annotations themselves as",
    "start": "476680",
    "end": "481720"
  },
  {
    "text": "well as the runtime for the framework and then there's storm AP which is your",
    "start": "481720",
    "end": "487680"
  },
  {
    "text": "actual annotation processor so anybody actually written a Java annotation processor",
    "start": "487680",
    "end": "494360"
  },
  {
    "text": "before yeah it's fun it's really uh it really is fun U",
    "start": "494360",
    "end": "501840"
  },
  {
    "text": "the coolest thing about it is that you can make red squigglies appear in Eclipse right so if there's problems uh",
    "start": "501840",
    "end": "509080"
  },
  {
    "text": "that you detect as you're processing the source code then you can just log those to The annotation processor and it puts",
    "start": "509080",
    "end": "514880"
  },
  {
    "text": "up a red squiggly and Eclipse I think it's really cool to be able to do that it's actually really useful too as you'll see here uh when we get going a",
    "start": "514880",
    "end": "521760"
  },
  {
    "text": "little bit so let me just show you what this looks like I've got a little sample",
    "start": "521760",
    "end": "527320"
  },
  {
    "text": "project going here uh storm demo and I will just show you that I",
    "start": "527320",
    "end": "532640"
  },
  {
    "text": "have on the build path I actually have not the jar but the whole project since",
    "start": "532640",
    "end": "537920"
  },
  {
    "text": "it's on my machine here but you could just add the jar and then the important thing is you need to go into this order",
    "start": "537920",
    "end": "544519"
  },
  {
    "text": "and Export Tab and check to export that API jar as well",
    "start": "544519",
    "end": "550120"
  },
  {
    "text": "otherwise uh the Android won't be able to find it when you try to run tests on",
    "start": "550120",
    "end": "557839"
  },
  {
    "text": "it so that's that setup and then the other thing we have under the Java",
    "start": "558839",
    "end": "563920"
  },
  {
    "text": "compiler we have annotation processing enabled that's just checking this box up here and then our our Factory path we",
    "start": "563920",
    "end": "570640"
  },
  {
    "text": "have storm A.J jar so this is a feature that's been in Java for a while now uh",
    "start": "570640",
    "end": "578040"
  },
  {
    "text": "that basically it's it's just going to inspect our source code uh anytime we",
    "start": "578040",
    "end": "584079"
  },
  {
    "text": "save changes and run our annotation processor it'll look for specific annotations and then it can generate",
    "start": "584079",
    "end": "590079"
  },
  {
    "text": "code in response to those annotations so that's my project",
    "start": "590079",
    "end": "597640"
  },
  {
    "text": "setup okay so let's let's actually use this",
    "start": "598320",
    "end": "603640"
  },
  {
    "text": "thing uh first we have to have a database so to do that we just extend a database helper",
    "start": "603640",
    "end": "609600"
  },
  {
    "text": "class and let me show you how this goes we'll create another database here",
    "start": "609600",
    "end": "616480"
  },
  {
    "text": "by just creating a class we'll call it demo 2 database",
    "start": "616480",
    "end": "624000"
  },
  {
    "text": "Helper and it has to extend a framework class here databas",
    "start": "624079",
    "end": "629360"
  },
  {
    "text": "base Helper and this is basically just a wrapper for your SQL light open helper",
    "start": "629360",
    "end": "634399"
  },
  {
    "text": "that you would do uh anyway let me Zoom this out",
    "start": "634399",
    "end": "641560"
  },
  {
    "text": "here so it gives you the the required Constructor by default and that's fine that's all you need and then you need to",
    "start": "641560",
    "end": "648519"
  },
  {
    "text": "choose an upgrade strategy which there are three of them there's",
    "start": "648519",
    "end": "654959"
  },
  {
    "text": "drop create backup restore and upgrade we'll talk about those in a in a minute but for a new database You' probably",
    "start": "654959",
    "end": "660440"
  },
  {
    "text": "just do drop create which as the name implies is just going to drop the tables and create them",
    "start": "660440",
    "end": "666560"
  },
  {
    "text": "fresh uh so it's it's decent when you're developing a brand new",
    "start": "666560",
    "end": "671839"
  },
  {
    "text": "app okay so that was easy enough and then we just annotate this class with the database",
    "start": "671839",
    "end": "679399"
  },
  {
    "text": "annotation yay for red squigglies",
    "start": "679399",
    "end": "683360"
  },
  {
    "text": "uh oh no what happened",
    "start": "684519",
    "end": "691240"
  },
  {
    "text": "maybe I've",
    "start": "691560",
    "end": "694000"
  },
  {
    "text": "got okay let me save it first and then see if I can get control one to work no",
    "start": "696800",
    "end": "702639"
  },
  {
    "text": "something is wrong very annoying all right well anyway we have",
    "start": "702639",
    "end": "707680"
  },
  {
    "text": "two attributes we have to require or",
    "start": "707680",
    "end": "711839"
  },
  {
    "text": "Supply oh yeah I'm trying to put it in the wrong place thank you uh that was",
    "start": "712920",
    "end": "721240"
  },
  {
    "text": "interesting all right let's see if we can find",
    "start": "723440",
    "end": "727600"
  },
  {
    "text": "that there we go import it and then we should add the",
    "start": "730399",
    "end": "736480"
  },
  {
    "text": "missing attributes yes thank you so we give it a name uh demo 2db we",
    "start": "736480",
    "end": "743320"
  },
  {
    "text": "give it a version number and save it okay and you've seen the",
    "start": "743320",
    "end": "750040"
  },
  {
    "text": "error log which is a useful view to keep up when you're working with an annotation processor uh you can",
    "start": "750040",
    "end": "756320"
  },
  {
    "text": "see we had a template error I think that was before and then now we're generating com. turbo manage. demo. DB demo to DB",
    "start": "756320",
    "end": "765000"
  },
  {
    "text": "Factory and we'll talk about those classes uh in just a second so now we have a database but actually I don't",
    "start": "765000",
    "end": "772760"
  },
  {
    "text": "want uh this database I want the other one that I have as part of this project",
    "start": "772760",
    "end": "778199"
  },
  {
    "text": "already so I'm going to delete that but I just wanted to show you how to do it one thing when you're using an",
    "start": "778199",
    "end": "784600"
  },
  {
    "text": "annotation processor and you delete something that has generated code is that you're going to frequently have to",
    "start": "784600",
    "end": "790800"
  },
  {
    "text": "go clean the project to get rid of the",
    "start": "790800",
    "end": "796120"
  },
  {
    "text": "artifacts right so now we're back to where we were and I'll show you my other database",
    "start": "796120",
    "end": "802040"
  },
  {
    "text": "helper class okay so now we need an enti so so",
    "start": "802040",
    "end": "809279"
  },
  {
    "text": "let me create a new um",
    "start": "809279",
    "end": "814399"
  },
  {
    "text": "ntity let's call it user",
    "start": "818360",
    "end": "822600"
  },
  {
    "text": "group and we'll just go with that for now so this is my plain old Java",
    "start": "824959",
    "end": "830079"
  },
  {
    "text": "object uh we'll give it some Fields it needs an ID and by convention here so far this is what it is it's every object",
    "start": "830079",
    "end": "837880"
  },
  {
    "text": "just needs a long ID and then it also probably needs a name so we'll do private string group",
    "start": "837880",
    "end": "846920"
  },
  {
    "text": "name and let's just do a private date meeting time or something like",
    "start": "846920",
    "end": "856000"
  },
  {
    "text": "this and we want Java util",
    "start": "856000",
    "end": "862440"
  },
  {
    "text": "date okay let's generate our required Getters and",
    "start": "865800",
    "end": "871040"
  },
  {
    "text": "Setters and that's our",
    "start": "875560",
    "end": "879079"
  },
  {
    "text": "class now to generate the data the the magic for this I just need to annotate",
    "start": "882759",
    "end": "888120"
  },
  {
    "text": "it with at entity and here the red squiggly come",
    "start": "888120",
    "end": "894240"
  },
  {
    "text": "into play because it turns out I also need to implement an interface uh called persistable",
    "start": "894240",
    "end": "901040"
  },
  {
    "text": "and this is Up For Debate right now we're on the team there's some people who don't want that we we'd like it so",
    "start": "902040",
    "end": "908759"
  },
  {
    "text": "you don't have to implement or extend anything persistable just has a couple of methods get ID and set ID so those",
    "start": "908759",
    "end": "916320"
  },
  {
    "text": "are used by the current uh framework but that's all there is to it so basic class we got a few Fields uh we're done with",
    "start": "916320",
    "end": "923199"
  },
  {
    "text": "that part okay so this has erated some code",
    "start": "923199",
    "end": "929759"
  },
  {
    "text": "for us we're going to take a look at that now under the AP generated folder which",
    "start": "929759",
    "end": "935720"
  },
  {
    "text": "you may have to unfilter resources to see this uh in Eclipse if you're using",
    "start": "935720",
    "end": "942319"
  },
  {
    "text": "that we have the database Factory",
    "start": "942319",
    "end": "947000"
  },
  {
    "text": "class which tells you it's generated code right and it just",
    "start": "947399",
    "end": "953880"
  },
  {
    "text": "has uh the static DB name and DB version",
    "start": "953880",
    "end": "959120"
  },
  {
    "text": "coded in there that we supplied in The annotation uh it's got a list of table helper classes which are the ones that",
    "start": "959120",
    "end": "966680"
  },
  {
    "text": "are going to hold all the SQL for each table and it's got User Group table in here twice probably because there's a",
    "start": "966680",
    "end": "973440"
  },
  {
    "text": "bug um so I can clean my project and get rid of that let me just do",
    "start": "973440",
    "end": "979920"
  },
  {
    "text": "that",
    "start": "987920",
    "end": "990920"
  },
  {
    "text": "let's have a look at that again here okay now there's only two tables in",
    "start": "993199",
    "end": "1001120"
  },
  {
    "text": "there uh so this just implements a Singleton pattern for getting the database helper which is your actual",
    "start": "1001120",
    "end": "1007160"
  },
  {
    "text": "sqlite open helper that's part of Android uh so if it doesn't exist then",
    "start": "1007160",
    "end": "1012240"
  },
  {
    "text": "it just creates a new instance and of course you have to pass it a valid context because that's required by this",
    "start": "1012240",
    "end": "1017959"
  },
  {
    "text": "SQL light opening helper so that's that there's really not much to this class it's just",
    "start": "1017959",
    "end": "1024000"
  },
  {
    "text": "um a factory class that needs to be there because you need",
    "start": "1024000",
    "end": "1029038"
  },
  {
    "text": "something hardcoded uh that it can pull from when you do it the sqlite open help",
    "start": "1029039",
    "end": "1035199"
  },
  {
    "text": "Rec call to supply the name inversion Etc okay so we also have",
    "start": "1035199",
    "end": "1042120"
  },
  {
    "text": "now for our each object person and user group are the two that we've modeled we",
    "start": "1042120",
    "end": "1047880"
  },
  {
    "text": "have a Dao and a table class so let's look at uh let's look at User Group Dao",
    "start": "1047880",
    "end": "1053600"
  },
  {
    "text": "since that was our the one we did on screen here so this is just a thin",
    "start": "1053600",
    "end": "1060799"
  },
  {
    "text": "little wrapper class it extends site Dao which is a",
    "start": "1060799",
    "end": "1066240"
  },
  {
    "text": "generified base Dao and this is where all the good stuff lives if we take a look at that guy uh you'll see that's where all the",
    "start": "1066240",
    "end": "1074160"
  },
  {
    "text": "fund methods are delete get list insert Etc uh but here basically all we have to",
    "start": "1074160",
    "end": "1080480"
  },
  {
    "text": "do is provide a reference to the appropriate Factory so an entity is associated with a database and we need",
    "start": "1080480",
    "end": "1086960"
  },
  {
    "text": "to know which one the idea of multiple databases is in here although it's not fully supported yet and then we need the",
    "start": "1086960",
    "end": "1094240"
  },
  {
    "text": "table helper class where we can get all of our SQL uh statements so that's really all this guy",
    "start": "1094240",
    "end": "1101960"
  },
  {
    "text": "does okay and then we have a table class and this is where all the heavy lifting happens right here",
    "start": "1103280",
    "end": "1109360"
  },
  {
    "text": "so at the top we have an enum representing the columns and the convention right now is just that the",
    "start": "1109360",
    "end": "1115200"
  },
  {
    "text": "the column name is all caps the field name except for ID it has an underscore because that's the Android sqlite",
    "start": "1115200",
    "end": "1122320"
  },
  {
    "text": "convention uh we get the table name we have our create SQL statement our drop SQL upgrade is currently null but if you",
    "start": "1122320",
    "end": "1130880"
  },
  {
    "text": "want to put in a c custom upgrade statement you could do that by extending this class then we have several methods",
    "start": "1130880",
    "end": "1137400"
  },
  {
    "text": "that allow us to convert uh to and from objects and this is the kind of code that you have to write by",
    "start": "1137400",
    "end": "1144440"
  },
  {
    "text": "hand um otherwise so let's take a look at new instance for example this given a",
    "start": "1144440",
    "end": "1150559"
  },
  {
    "text": "cursor uh we're just going to pull one row off the cursor and create an instance of our user group object by",
    "start": "1150559",
    "end": "1158360"
  },
  {
    "text": "calling it Setters and so we get we get the string from the",
    "start": "1158360",
    "end": "1164000"
  },
  {
    "text": "cursor uh we run it through a converter the string converter which just returns the string uh and then we call the",
    "start": "1164000",
    "end": "1171280"
  },
  {
    "text": "setter and we do that for each field and going the other direction we",
    "start": "1171280",
    "end": "1177559"
  },
  {
    "text": "can take our user group object we can call the various Getters run them through a converter and then use those",
    "start": "1177559",
    "end": "1183120"
  },
  {
    "text": "values to populate a Content values object right so this is pretty lightweight there's not a lot of stuff",
    "start": "1183120",
    "end": "1189280"
  },
  {
    "text": "uh going on here it's all stuff you're going to have to write by hand anyway and there's a bunch of other",
    "start": "1189280",
    "end": "1195280"
  },
  {
    "text": "methods related to different types of conversions like you can get an array of strings that represent the column values",
    "start": "1195280",
    "end": "1202840"
  },
  {
    "text": "which is useful for other things talk about that in a second so that's basically it you get",
    "start": "1202840",
    "end": "1208919"
  },
  {
    "text": "those generated classes and then to use it uh you just create a new instance of",
    "start": "1208919",
    "end": "1214000"
  },
  {
    "text": "the ndao pass it your context and then you can call the methods on it so let's take",
    "start": "1214000",
    "end": "1219679"
  },
  {
    "text": "a look at a test case which does a little bit of",
    "start": "1219679",
    "end": "1224120"
  },
  {
    "text": "this okay so we create a new person Dao pass our",
    "start": "1225440",
    "end": "1230679"
  },
  {
    "text": "context this would be your application context if you were in an activity here it's just the the test",
    "start": "1230679",
    "end": "1238000"
  },
  {
    "text": "instrumentation context uh we call dao. insert we give it our object we get back the ID of the",
    "start": "1238000",
    "end": "1245440"
  },
  {
    "text": "newly inserted object uh then we can call Dao doget",
    "start": "1245440",
    "end": "1250520"
  },
  {
    "text": "give it the ID we should get the person back ID should be the same uh this is just a little demo line",
    "start": "1250520",
    "end": "1257280"
  },
  {
    "text": "here I really needed there's lots of methods available on our Dao now we can do like list",
    "start": "1257280",
    "end": "1264280"
  },
  {
    "text": "all and get all the objects that are in the",
    "start": "1264280",
    "end": "1268880"
  },
  {
    "text": "table uh we can do delete delete all update we can do insert mini and give it",
    "start": "1271960",
    "end": "1279000"
  },
  {
    "text": "uh a whole collection of our objects and it will do an efficient insert",
    "start": "1279000",
    "end": "1284080"
  },
  {
    "text": "there so there's lot lots of stuff that's available let me point out a few of",
    "start": "1284080",
    "end": "1289480"
  },
  {
    "text": "those things on this this other slide here oops there went my power shouldn't",
    "start": "1289480",
    "end": "1294919"
  },
  {
    "text": "need it for a while uh so you can see some of the the most useful API methods the insert",
    "start": "1294919",
    "end": "1301440"
  },
  {
    "text": "insert mini git will just return a single object update delete list all we'll",
    "start": "1301440",
    "end": "1308520"
  },
  {
    "text": "convert it all to a list and then there's several example methods like list by example get by example where you",
    "start": "1308520",
    "end": "1314400"
  },
  {
    "text": "can pass it um a pop an example object where you p you populate only the fields",
    "start": "1314400",
    "end": "1319799"
  },
  {
    "text": "that you're interested in and it will include them then as part of the query the query for that object and the way",
    "start": "1319799",
    "end": "1325640"
  },
  {
    "text": "this works is it actually creates a new instance of the object and then Compares",
    "start": "1325640",
    "end": "1331840"
  },
  {
    "text": "your example object with the new instance and anything that's different than the default values it uses in the",
    "start": "1331840",
    "end": "1338840"
  },
  {
    "text": "query and then there's also a little convenient filter method uh which lets you right now just do add conditions",
    "start": "1338840",
    "end": "1345279"
  },
  {
    "text": "that are equality conditions so you can say Dao filter. equals give it the column name the value",
    "start": "1345279",
    "end": "1354200"
  },
  {
    "text": "Etc and then exec the",
    "start": "1354200",
    "end": "1358480"
  },
  {
    "text": "filter so by convention again the the column name is just the field name and uppercase and ID is required it's a and",
    "start": "1359559",
    "end": "1368360"
  },
  {
    "text": "the column name is underscore ID and there's currently no no way to change",
    "start": "1368360",
    "end": "1373600"
  },
  {
    "text": "that so the types that are currently supported uh you can have any perim and",
    "start": "1373720",
    "end": "1378960"
  },
  {
    "text": "wrapper type the little B Boolean bite Etc as well as the Big B uh and string",
    "start": "1378960",
    "end": "1385440"
  },
  {
    "text": "and then bite arrays are treated as blobs uh Boolean bite and Char all have",
    "start": "1385440",
    "end": "1391760"
  },
  {
    "text": "integer Affinity in sqlite so that they can you can use them",
    "start": "1391760",
    "end": "1397720"
  },
  {
    "text": "different ways it seem like the best way to do it but you could write your own converter and change that if you wanted",
    "start": "1397720",
    "end": "1402919"
  },
  {
    "text": "to there's also a type converter interface with a Java type and a SQL",
    "start": "1402919",
    "end": "1408200"
  },
  {
    "text": "type and if you want to write your own converter for your own data type you can do that you just have to extend type",
    "start": "1408200",
    "end": "1414640"
  },
  {
    "text": "converter and then annotate it with at converter and do a project clean because I don't yet have the in support for at",
    "start": "1414640",
    "end": "1421919"
  },
  {
    "text": "converter in uh incremental",
    "start": "1421919",
    "end": "1425919"
  },
  {
    "text": "compilation so some little niceties here there are a couple of public methods as list uh you pass it a cursor it gets you",
    "start": "1427919",
    "end": "1435320"
  },
  {
    "text": "back the list of the objects there's also an AS object that will expects to",
    "start": "1435320",
    "end": "1440640"
  },
  {
    "text": "find one row and one row in the cursor only uh this is used like by the get",
    "start": "1440640",
    "end": "1445720"
  },
  {
    "text": "method and if there's more than one in the cursor it'll throw too many results exceptions so you'll be notified that",
    "start": "1445720",
    "end": "1452400"
  },
  {
    "text": "hey the cursor returned more than you were expecting the insert mini method uses",
    "start": "1452400",
    "end": "1457919"
  },
  {
    "text": "the database utils do insert helper class to prepare the statement only once",
    "start": "1457919",
    "end": "1464799"
  },
  {
    "text": "and then run all the inserts inside a single transaction uh which is uh much",
    "start": "1464799",
    "end": "1469960"
  },
  {
    "text": "better performance than doing each one individually the column name e enum can",
    "start": "1469960",
    "end": "1477640"
  },
  {
    "text": "be useful like the filter method uh gives you some type safety around your columns as opposed to just putting",
    "start": "1477640",
    "end": "1484760"
  },
  {
    "text": "string field names in there and then of course red squigglies are kind of",
    "start": "1484760",
    "end": "1491600"
  },
  {
    "text": "cool so one of the challenges is for upgrading your database versions",
    "start": "1491600",
    "end": "1499320"
  },
  {
    "text": "and there's currently uh three strategies supported for that the drop create is",
    "start": "1499320",
    "end": "1506919"
  },
  {
    "text": "uh the easiest but of course uh you lose your data so that's not ideal if you've",
    "start": "1506919",
    "end": "1512200"
  },
  {
    "text": "got a production app uh so the other one that's kind of automatic is the backup",
    "start": "1512200",
    "end": "1518320"
  },
  {
    "text": "restore strategy which uses CSV files so it will actually dump the contents of",
    "start": "1518320",
    "end": "1525520"
  },
  {
    "text": "the current database to a CSV file and then it will read that CSV file into",
    "start": "1525520",
    "end": "1531480"
  },
  {
    "text": "your new schema and any columns that have",
    "start": "1531480",
    "end": "1537520"
  },
  {
    "text": "been I think I have a slide on this actually so let me just say a couple more words about the CSV methods here uh",
    "start": "1537520",
    "end": "1544080"
  },
  {
    "text": "you can call these methods directly from the database helper which you can get from the Dao or the database",
    "start": "1544080",
    "end": "1550880"
  },
  {
    "text": "Factory uh the database helper has the methods back up all tables and restore",
    "start": "1550880",
    "end": "1556520"
  },
  {
    "text": "from CSV um one thing that it does is it tries to preserve your data exactly",
    "start": "1556520",
    "end": "1562320"
  },
  {
    "text": "which is a little bit tricky with things like doubles uh so it actually calls the",
    "start": "1562320",
    "end": "1568559"
  },
  {
    "text": "double two raw long bits uh method to get the",
    "start": "1568559",
    "end": "1573679"
  },
  {
    "text": "raw value and then saves it as a hex encoded value in your CSV file so you",
    "start": "1573679",
    "end": "1579440"
  },
  {
    "text": "wouldn't be able to read the CSV file with just any CSV reader and get a meaningful value out of that double but",
    "start": "1579440",
    "end": "1586080"
  },
  {
    "text": "it does preserve the exact value so that you you'll reload your database correctly uh and then also blobs are",
    "start": "1586080",
    "end": "1592520"
  },
  {
    "text": "base 64 encoded so that they can be uh safely stored in a CSV so there's a file named",
    "start": "1592520",
    "end": "1601120"
  },
  {
    "text": "the DB name Dov whatever your version number is. table name you'll see a bunch of those files in your if you look in",
    "start": "1601120",
    "end": "1607520"
  },
  {
    "text": "your apps files when you use this method so to do this automatically all",
    "start": "1607520",
    "end": "1614279"
  },
  {
    "text": "you have to do is set your upgrade strategy to backup restore and then any columns that you've dropped between",
    "start": "1614279",
    "end": "1620760"
  },
  {
    "text": "versions will disappear uh any ones that you've added will get the default values",
    "start": "1620760",
    "end": "1626720"
  },
  {
    "text": "from the object and if you've renamed any um sorry about that it's not supported yet but we'll be adding",
    "start": "1626720",
    "end": "1633520"
  },
  {
    "text": "probably a column name annotation or something like that so that you can add that at the time you rename a field and",
    "start": "1633520",
    "end": "1640679"
  },
  {
    "text": "then pull that out of the database and you could also do it by",
    "start": "1640679",
    "end": "1646520"
  },
  {
    "text": "instead of using the backup restore stre strategy you could use a custom upgrade strategy and you could manually edit the",
    "start": "1646520",
    "end": "1652279"
  },
  {
    "text": "CSV file and change the column names if you wanted to I guess so that they'd be read back into the appropriate Fields",
    "start": "1652279",
    "end": "1659039"
  },
  {
    "text": "but we'll we'll have support for renaming eventually soon probably uh so the last strategy is just",
    "start": "1659039",
    "end": "1666720"
  },
  {
    "text": "upgrade and to do this you can override the database helper. upgrade method uh",
    "start": "1666720",
    "end": "1672320"
  },
  {
    "text": "in your database helper class and do whatever you want in there in terms of migrating the SQL uh or you can just",
    "start": "1672320",
    "end": "1681679"
  },
  {
    "text": "override the onupgrade method for each table individually if you want to uh in",
    "start": "1681679",
    "end": "1686760"
  },
  {
    "text": "the table helpers and that will let you uh you know do any rebuild any indexes add",
    "start": "1686760",
    "end": "1693919"
  },
  {
    "text": "alter table statements or however you want to do your",
    "start": "1693919",
    "end": "1698360"
  },
  {
    "text": "upgrade okay so a couple limits yeah no relational modeling yet um also you",
    "start": "1702760",
    "end": "1709080"
  },
  {
    "text": "can't currently compare doubles or blobs if you're using the filter Builder API",
    "start": "1709080",
    "end": "1714679"
  },
  {
    "text": "because it's hard to compare exact values of doubles it's generally a way to get into trouble uh so we'll probably",
    "start": "1714679",
    "end": "1719799"
  },
  {
    "text": "be adding a like a a Delta method that lets you supply a range of how close it",
    "start": "1719799",
    "end": "1727120"
  },
  {
    "text": "has to be to be an exact match and blobs I don't think we'll ever allow I mean somebody wants to add it that's fine",
    "start": "1727120",
    "end": "1733279"
  },
  {
    "text": "compare blobs but you have to base 64 encode them and it gets kind of messy that would be",
    "start": "1733279",
    "end": "1740039"
  },
  {
    "text": "inefficient you can always write your own custom queries if you want to do these things by using the dao.",
    "start": "1740840",
    "end": "1747960"
  },
  {
    "text": "query so I already talked about what these different classes were the database Factory the Dao and the table",
    "start": "1749080",
    "end": "1755919"
  },
  {
    "text": "helper uh this one maybe shows graphically how the main function of the table helper that it contains all the",
    "start": "1755919",
    "end": "1762919"
  },
  {
    "text": "SQL uh all your cursor get and your uh sorry your cursor yeah cursor get and",
    "start": "1762919",
    "end": "1769080"
  },
  {
    "text": "your um helper bind methods converts from a cursor to an",
    "start": "1769080",
    "end": "1774799"
  },
  {
    "text": "object to content values as needed that's what that's for so the",
    "start": "1774799",
    "end": "1781080"
  },
  {
    "text": "idea was to construct this so that the the actual uh SQL light interactions happens",
    "start": "1781080",
    "end": "1788679"
  },
  {
    "text": "in that base Dao class uh that's available for everybody um for all your tables and any",
    "start": "1788679",
    "end": "1797360"
  },
  {
    "text": "the only stuff that that's in the generated code is the actual how do I get an object from a cursor Etc uh so",
    "start": "1797360",
    "end": "1804760"
  },
  {
    "text": "the base SQL light class is not generated and that allows us to do better testing and debugging of that",
    "start": "1804760",
    "end": "1811640"
  },
  {
    "text": "class so just a few notes on the implementation here one of the challenges was supporting incremental",
    "start": "1813399",
    "end": "1819320"
  },
  {
    "text": "compilation because it turns out that annotation processing happens in rounds and when you write an annotation",
    "start": "1819320",
    "end": "1825799"
  },
  {
    "text": "processor you actually get a pass to you what's called a round environment which",
    "start": "1825799",
    "end": "1831000"
  },
  {
    "text": "is only the code that uh it's looking at during that round uh and the idea here",
    "start": "1831000",
    "end": "1836919"
  },
  {
    "text": "is that if you generate code it that generated code might have annotations which generate other code so the first",
    "start": "1836919",
    "end": "1844039"
  },
  {
    "text": "round generates some code and then the second round looks at that additional code Etc now storm isn't that",
    "start": "1844039",
    "end": "1850000"
  },
  {
    "text": "complicated it just essentially re it just needs one round um but unfortunately because of this",
    "start": "1850000",
    "end": "1856039"
  },
  {
    "text": "architecture of AP you can only see the code that was",
    "start": "1856039",
    "end": "1862600"
  },
  {
    "text": "changed uh during a given um during a given save so if you",
    "start": "1862600",
    "end": "1868679"
  },
  {
    "text": "go in and add an entity annotation the only thing that your annotation processor is going to see is that entity",
    "start": "1868679",
    "end": "1875200"
  },
  {
    "text": "and the source code that's related to that entity it does not see the entire Source tree right so since we're",
    "start": "1875200",
    "end": "1882679"
  },
  {
    "text": "generating a database helper or a database Factory class which has to know about all the available enties",
    "start": "1882679",
    "end": "1888440"
  },
  {
    "text": "ities U and since each entity has to know about any available databases",
    "start": "1888440",
    "end": "1894880"
  },
  {
    "text": "then we had I needed some way to keep track of what had already been processed",
    "start": "1894880",
    "end": "1900440"
  },
  {
    "text": "in previous rounds right so I used a file which is about the only way to do it uh so you'll actually see in your",
    "start": "1900440",
    "end": "1907600"
  },
  {
    "text": "Eclipse uh if you look at it under the AP generated with all your generated",
    "start": "1907600",
    "end": "1912919"
  },
  {
    "text": "code there's also this file called stormy EnV and it's just a simple little",
    "start": "1912919",
    "end": "1919360"
  },
  {
    "text": "text file with the information about the database and each uh entity in",
    "start": "1919360",
    "end": "1926960"
  },
  {
    "text": "there actually just the names of the table helper classes which is really all that's needed for that stage so if",
    "start": "1926960",
    "end": "1934200"
  },
  {
    "text": "you're having uh problems with this in this preview phase you know Project Clean will rebuild this file because",
    "start": "1934200",
    "end": "1941120"
  },
  {
    "text": "when you do a project clean then all the source code is available and all the annotations are",
    "start": "1941120",
    "end": "1946880"
  },
  {
    "text": "available in the project so that's really how your your processor is going to work uh the best",
    "start": "1946880",
    "end": "1954320"
  },
  {
    "text": "ordinarily okay but by by reading in this file before each round of annotation processing it does support",
    "start": "1959559",
    "end": "1965480"
  },
  {
    "text": "incremental compilation so you can go in and just add one new at entity and it works uh the only thing that doesn't",
    "start": "1965480",
    "end": "1971960"
  },
  {
    "text": "work yet is the at converter uh this uses free marker to to",
    "start": "1971960",
    "end": "1977919"
  },
  {
    "text": "do the code generation so let me show you a little bit of those",
    "start": "1977919",
    "end": "1982960"
  },
  {
    "text": "templates here's uh database factory. FTL um it's it's really pretty",
    "start": "1984240",
    "end": "1992120"
  },
  {
    "text": "straightforward it's just you can see though you know it's a lot less fun to work with Java code in a free market",
    "start": "1992120",
    "end": "1997399"
  },
  {
    "text": "template than it is in uh the Java editors because you don't get all the completion and syntax",
    "start": "1997399",
    "end": "2003639"
  },
  {
    "text": "highlighting and stuff like that so that's another reason why I tried to minimize the amount of Java code in the",
    "start": "2003639",
    "end": "2009559"
  },
  {
    "text": "that's actually generated from the templates and these you will find in the",
    "start": "2009559",
    "end": "2014720"
  },
  {
    "text": "imple project if you check out the",
    "start": "2014720",
    "end": "2020000"
  },
  {
    "text": "source under the source res directory just three templates n",
    "start": "2020720",
    "end": "2026240"
  },
  {
    "text": "Dao uh table helper template is probably the most interesting it's pretty",
    "start": "2026240",
    "end": "2031760"
  },
  {
    "text": "big um but that actually doesn't take a whole lot of code to generate",
    "start": "2031760",
    "end": "2039279"
  },
  {
    "text": "these various classes and then the error log view just",
    "start": "2039279",
    "end": "2045320"
  },
  {
    "text": "a reminder that that that has a few debugging notes that go in there as The annotation processor runs so you can",
    "start": "2045320",
    "end": "2051679"
  },
  {
    "text": "confirm that files are going to the right place things like that okay so what do the future hold for",
    "start": "2051679",
    "end": "2057638"
  },
  {
    "text": "this thing uh limited limited support for relations uh",
    "start": "2057639",
    "end": "2064440"
  },
  {
    "text": "we at least want to be able to do a primary foreign key relationship uh so that when you do a get you could maybe",
    "start": "2064440",
    "end": "2070839"
  },
  {
    "text": "pass a flag that would say you know also populate relations and it would then do",
    "start": "2070839",
    "end": "2077320"
  },
  {
    "text": "a second query or a join to go grab the related object and pull that in as well",
    "start": "2077320",
    "end": "2083440"
  },
  {
    "text": "um I'm not I'm not inclined to go with lazy loading or proxy loading or anything like that like carbonate does",
    "start": "2083440",
    "end": "2089800"
  },
  {
    "text": "because that gets to be really uh messy and trying to keep it",
    "start": "2089800",
    "end": "2096280"
  },
  {
    "text": "lightwe um more filter methods we need greater than less than you know all the standard SQL",
    "start": "2096280",
    "end": "2102880"
  },
  {
    "text": "comparisons between Etc the filter Builder API currently in order",
    "start": "2102880",
    "end": "2108119"
  },
  {
    "text": "to properly throw an exception if you try to do an EQ on a double or a",
    "start": "2108119",
    "end": "2114079"
  },
  {
    "text": "blob um I had to create an overloaded method for each equals method",
    "start": "2114079",
    "end": "2119920"
  },
  {
    "text": "so you have an equals that takes a double float long short Etc uh it's kind of a pain to have to do that for all of",
    "start": "2119920",
    "end": "2126240"
  },
  {
    "text": "them but actually there is a little bit of value in that in terms of um getting it exactly right",
    "start": "2126240",
    "end": "2135560"
  },
  {
    "text": "right uh so probably there will be an at ID annotation at some point where you can change your ID column it doesn't",
    "start": "2135560",
    "end": "2142240"
  },
  {
    "text": "have to be the ID field and a column name uh annotation of some kind and then",
    "start": "2142240",
    "end": "2149680"
  },
  {
    "text": "there's a lot of interest in this right now um within the Android tooling",
    "start": "2149680",
    "end": "2154800"
  },
  {
    "text": "guys uh zavier and uh tour so we're looking at putting in",
    "start": "2154800",
    "end": "2162599"
  },
  {
    "text": "hooks so that this could be a standard uh Library as part of the",
    "start": "2162599",
    "end": "2168800"
  },
  {
    "text": "ADT you can find the source here at Dr Fibonacci gooogle code.com I put in",
    "start": "2170880",
    "end": "2177839"
  },
  {
    "text": "uh I actually already published the slides there's a link right at the top",
    "start": "2177839",
    "end": "2183319"
  },
  {
    "text": "of the page here and there's the simple little basic usage thing but really there's more info in the slides at this",
    "start": "2183319",
    "end": "2189079"
  },
  {
    "text": "point uh you can get to all the source uh it's in",
    "start": "2189079",
    "end": "2194240"
  },
  {
    "text": "git uh use the issue tracker if you want it's probably going to get moved at some",
    "start": "2194240",
    "end": "2199280"
  },
  {
    "text": "point pretty soon because uh in order to support making it",
    "start": "2199280",
    "end": "2204319"
  },
  {
    "text": "part of the ADT okay",
    "start": "2204319",
    "end": "2211040"
  },
  {
    "text": "so last year we did a blog post uh on the official Android blog um about",
    "start": "2211040",
    "end": "2216960"
  },
  {
    "text": "making HTTP calls from native apps and it used to be Apache HTTP client was the",
    "start": "2216960",
    "end": "2223599"
  },
  {
    "text": "recommendation because it's part of the uh OS and it's very full featured well",
    "start": "2223599",
    "end": "2229520"
  },
  {
    "text": "tested over a long period of time huge huge surface area for Fe for features in that client uh",
    "start": "2229520",
    "end": "2236960"
  },
  {
    "text": "so unfortunately that huge feature set means there's a huge support surface for it as well and I think the desire of the",
    "start": "2236960",
    "end": "2245119"
  },
  {
    "text": "Android team was to scale back the minimally supported capabilities uh so they started",
    "start": "2245119",
    "end": "2250920"
  },
  {
    "text": "recommending HTTP URL connection instead uh but that as you know is a",
    "start": "2250920",
    "end": "2257079"
  },
  {
    "text": "much lower level API so uh with HTTP client you're just saying you know new",
    "start": "2257079",
    "end": "2264440"
  },
  {
    "text": "get method and uh and then executing it with HTTP URL connection you're",
    "start": "2264440",
    "end": "2271560"
  },
  {
    "text": "reading and writing streams right so it's a lot lower level so I felt there",
    "start": "2271560",
    "end": "2277319"
  },
  {
    "text": "was a need uh for a project to just have again a simple HTTP",
    "start": "2277319",
    "end": "2283359"
  },
  {
    "text": "interface um that would have that would be more similar to http client as far as",
    "start": "2283359",
    "end": "2288599"
  },
  {
    "text": "its overall approach but would correctly handle all the io streams and reading their stream and the tri close finally",
    "start": "2288599",
    "end": "2296200"
  },
  {
    "text": "Tri close in the finally all that kind of stuff uh so there's a couple clients",
    "start": "2296200",
    "end": "2302720"
  },
  {
    "text": "uh that are available beside that you might want to look at there's the Google HTTP job client which is a open source",
    "start": "2302720",
    "end": "2309040"
  },
  {
    "text": "project on Google code um that's actually used by the Google API Java client which is a project that you can",
    "start": "2309040",
    "end": "2315680"
  },
  {
    "text": "use to have wrappers for any rest API that's part of our standard apiary",
    "start": "2315680",
    "end": "2321119"
  },
  {
    "text": "infrastructure uh then then I also wrote a basic HTTP client which is a really",
    "start": "2321119",
    "end": "2327319"
  },
  {
    "text": "thin one it's just a simple very simple client doesn't try to support the the huge feature set of Apache um but the",
    "start": "2327319",
    "end": "2335720"
  },
  {
    "text": "the kind of the target space is well I just need a little stuff from the web uh we wanted to make that that",
    "start": "2335720",
    "end": "2342240"
  },
  {
    "text": "easier so that's what it is uh so there's a synchronous and an",
    "start": "2342240",
    "end": "2348000"
  },
  {
    "text": "async API and the thing that's kind of novel about basic HTTP client is that it",
    "start": "2348000",
    "end": "2353720"
  },
  {
    "text": "provides an async call back U method so that that will automatically wrap your",
    "start": "2353720",
    "end": "2359119"
  },
  {
    "text": "request in an async task because you don't want to execute Network requests on the UI thread right that's a big no",
    "start": "2359119",
    "end": "2366839"
  },
  {
    "text": "no uh so ordinarily you want to either do it in an async task or best is actually",
    "start": "2366839",
    "end": "2372599"
  },
  {
    "text": "in a service and I don't have support for that yet but it's open to Patches if",
    "start": "2372599",
    "end": "2378760"
  },
  {
    "text": "somebody wants to write that it it actually won't be very difficult",
    "start": "2378760",
    "end": "2384880"
  },
  {
    "text": "um so there's an async API which is really easy to use uh and that it's extensible as well you can supply your",
    "start": "2384880",
    "end": "2391480"
  },
  {
    "text": "own request logger and request Handler if you need to change um how you open a connection for example Supply custom SSL",
    "start": "2391480",
    "end": "2398520"
  },
  {
    "text": "Properties or something like that then you can really easily um Supply your own",
    "start": "2398520",
    "end": "2404800"
  },
  {
    "text": "sauce for that so the source is here and the howto page is actually here as well so let me uh pop that up",
    "start": "2404800",
    "end": "2414200"
  },
  {
    "text": "here you can see the API hopefully that's",
    "start": "2414760",
    "end": "2420319"
  },
  {
    "text": "readable basically uh",
    "start": "2423400",
    "end": "2429319"
  },
  {
    "text": "[Music]",
    "start": "2475740",
    "end": "2478830"
  },
  {
    "text": "appended to the base path that you set up with part of your client so a common thing is to initiate uh a client to a",
    "start": "2487520",
    "end": "2495160"
  },
  {
    "text": "site but then you have different requests to different paths on the site and then null the second null is a",
    "start": "2495160",
    "end": "2502000"
  },
  {
    "text": "parameters object uh that you can pass with all your request",
    "start": "2502000",
    "end": "2507200"
  },
  {
    "text": "parameters and it'll do the right thing you pass it a map and if it's a get request it URL encodes them and puts",
    "start": "2507200",
    "end": "2512960"
  },
  {
    "text": "them on the query string and if it's a post request it makes them the mime type form data encoding and all",
    "start": "2512960",
    "end": "2521960"
  },
  {
    "text": "that and then this is an example of the async API here uh here we're using the Android",
    "start": "2522319",
    "end": "2528480"
  },
  {
    "text": "HTTP client which extends the async uh class and it also has a couple Android",
    "start": "2528480",
    "end": "2533599"
  },
  {
    "text": "aware um little workarounds from prior bugs on prior operating system",
    "start": "2533599",
    "end": "2538680"
  },
  {
    "text": "versions um so we do a get but the third argument is an async callback object and",
    "start": "2538680",
    "end": "2545680"
  },
  {
    "text": "then this code will actually uh complete whenever the request comes back so what that does is",
    "start": "2545680",
    "end": "2553400"
  },
  {
    "text": "actually creates an async task wrapper executes your your uh request there and",
    "start": "2553400",
    "end": "2558839"
  },
  {
    "text": "then calls you back when it's done now this test won't actually uh test",
    "start": "2558839",
    "end": "2563920"
  },
  {
    "text": "anything because I was just illustrating the call of the API but it junit I'd have to wait and",
    "start": "2563920",
    "end": "2571319"
  },
  {
    "text": "wait for a flag and all that kind of stuff but that's that's what the async API looks like",
    "start": "2571319",
    "end": "2579240"
  },
  {
    "text": "if you want to get a little fancier and pass uh a",
    "start": "2579280",
    "end": "2585119"
  },
  {
    "text": "custom Handler you can do that so in the example",
    "start": "2585119",
    "end": "2590960"
  },
  {
    "text": "here uh we just want to override our error Handler",
    "start": "2592000",
    "end": "2597400"
  },
  {
    "text": "so when we create the client we can pass the additional argument which is a request Handler type and the easiest",
    "start": "2597400",
    "end": "2604160"
  },
  {
    "text": "thing to do is just extend your basic request Handler that's part of the framework already and then override the",
    "start": "2604160",
    "end": "2610800"
  },
  {
    "text": "one method that you want to you know change the error Handler so it's very easy to",
    "start": "2610800",
    "end": "2616920"
  },
  {
    "text": "change also if you do async I think I was going to mention that uh when you use the async mechanism",
    "start": "2616920",
    "end": "2624720"
  },
  {
    "text": "then it automatically will do retry and back off uh exponential back off as well",
    "start": "2624720",
    "end": "2632240"
  },
  {
    "text": "and the retries you can set Max retries and that sort of thing uh it tries to be",
    "start": "2632240",
    "end": "2639000"
  },
  {
    "text": "intelligent about whether it's a fatal exception or whether it's a recoverable",
    "start": "2639000",
    "end": "2645240"
  },
  {
    "text": "exception um and there's actually a method that you can override and the request Handler to determine that logic",
    "start": "2645240",
    "end": "2653440"
  },
  {
    "text": "for yourself as well whether you want to recover from any given",
    "start": "2653440",
    "end": "2658800"
  },
  {
    "text": "exception so the source is at basic htb client. gooogle code.com",
    "start": "2660960",
    "end": "2667240"
  },
  {
    "text": "and some final resources that you might want to look at uh of course you've all seen developer",
    "start": "2669000",
    "end": "2676000"
  },
  {
    "text": "Android comom there's a little page not many people know about that the the Android some of the guys on my team",
    "start": "2676000",
    "end": "2682000"
  },
  {
    "text": "don't like me sharing this page because it's a little bit out of date however it's fantastic if you've never seen this",
    "start": "2682000",
    "end": "2687200"
  },
  {
    "text": "page you should go there common tasks an Android you can search for it in the on the developer site and it's just like if",
    "start": "2687200",
    "end": "2694079"
  },
  {
    "text": "you're just starting Android development this page will save your life it's it's uh oh sorry take that back legal",
    "start": "2694079",
    "end": "2701000"
  },
  {
    "text": "doesn't like it when I say things like that all right uh but no it's a great resource",
    "start": "2701000",
    "end": "2706599"
  },
  {
    "text": "because it's just how to do all the common things how do I put up a menu how do I you know do a contact menu whatever",
    "start": "2706599",
    "end": "2713440"
  },
  {
    "text": "uh I wish I'd had this page when I started it would have saved a lot of time on other sites learning some of",
    "start": "2713440",
    "end": "2719000"
  },
  {
    "text": "this stuff is it better than St overflow uh actually as far as just a",
    "start": "2719000",
    "end": "2724720"
  },
  {
    "text": "one stop you know for for beginning asks I think it is better than stack Overflow yes um but thank you for mentioning",
    "start": "2724720",
    "end": "2732040"
  },
  {
    "text": "stack Overflow because we do officially support that we have a lot of uh a lot of our team will answer questions on",
    "start": "2732040",
    "end": "2738000"
  },
  {
    "text": "stack Overflow and uh it is a great resource for for getting you know how",
    "start": "2738000",
    "end": "2743559"
  },
  {
    "text": "does any particular X thing work on",
    "start": "2743559",
    "end": "2748079"
  },
  {
    "text": "Android there's my blog I do a few things uh be sure to connect with Android developers on Google+ uh we do",
    "start": "2752839",
    "end": "2759920"
  },
  {
    "text": "weekly several weekly hangouts around the world on Android development topics",
    "start": "2759920",
    "end": "2765160"
  },
  {
    "text": "um there's a Dory that you can submit questions in advance we'll research them and then answer live on the",
    "start": "2765160",
    "end": "2770520"
  },
  {
    "text": "hangout uh there's a app reviews that we do every week saying these are what we",
    "start": "2770520",
    "end": "2776800"
  },
  {
    "text": "like in apps this is good UI Design This is ways to improve um so there's we're there's a",
    "start": "2776800",
    "end": "2784920"
  },
  {
    "text": "lot of stuff that we're doing right now um we want to encourage people to connect with us and then I do an Android",
    "start": "2784920",
    "end": "2791200"
  },
  {
    "text": "blog post every couple weeks or so now when I work on these Frameworks and I'm sure you'll see more as I add features",
    "start": "2791200",
    "end": "2797000"
  },
  {
    "text": "to to the ones that I talked about apprciate you coming yeah very welcome thank",
    "start": "2797000",
    "end": "2802120"
  },
  {
    "text": "[Applause] [Music]",
    "start": "2802120",
    "end": "2811599"
  },
  {
    "text": "you",
    "start": "2811599",
    "end": "2814599"
  }
]