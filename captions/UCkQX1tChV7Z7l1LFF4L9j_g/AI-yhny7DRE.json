[
  {
    "text": "[Music]",
    "start": "680",
    "end": "8549"
  },
  {
    "text": "hi and welcome to databases on the edge how to distribute your database over",
    "start": "15280",
    "end": "21199"
  },
  {
    "text": "hundreds of edge locations my name is aaron from the go and i'm a product manager at cloudflare",
    "start": "21199",
    "end": "27519"
  },
  {
    "text": "working on the works platform you can find me at aaronvondakoh on twitter",
    "start": "27519",
    "end": "34239"
  },
  {
    "text": "feel free to reach out if you have any questions so",
    "start": "34239",
    "end": "39840"
  },
  {
    "text": "warning this entire talk is going to be about evolution but uh seeing as this is a conference",
    "start": "39840",
    "end": "46640"
  },
  {
    "text": "about cloudy things i guess we're going to be talking about cloud evolution",
    "start": "46640",
    "end": "52480"
  },
  {
    "text": "because over the past couple of years we've seen this trend to see logic move from the region",
    "start": "53440",
    "end": "59600"
  },
  {
    "text": "to the edge and with regions i mean things like aws's usd one",
    "start": "59600",
    "end": "66640"
  },
  {
    "text": "but all major cloud providers like azure or google or alibaba have a similar concept",
    "start": "66640",
    "end": "73040"
  },
  {
    "text": "now when i talk about edge i mean pops or points of presence",
    "start": "73040",
    "end": "79280"
  },
  {
    "text": "they're spread out geographically so that as many customers are as close as possible to a particular pub",
    "start": "79280",
    "end": "86799"
  },
  {
    "text": "one of the most important things they do is cache responses so that your request doesn't have to travel half the internet before you can",
    "start": "86799",
    "end": "94000"
  },
  {
    "text": "get a response",
    "start": "94000",
    "end": "96799"
  },
  {
    "text": "so there are some obvious differences between these two which greatly influences how things",
    "start": "99439",
    "end": "105360"
  },
  {
    "text": "evolve on them regions have lots of specialized different kinds of servers",
    "start": "105360",
    "end": "112399"
  },
  {
    "text": "lots of different products and services running on top of them and a region consists of multiple data",
    "start": "112399",
    "end": "119200"
  },
  {
    "text": "centers but they are extremely close to another edge",
    "start": "119200",
    "end": "124880"
  },
  {
    "text": "on the other hand is very different there's a lot less servers but they're very uniform they very much",
    "start": "124880",
    "end": "131120"
  },
  {
    "text": "look the same and that's because there's very fewer products running on these servers",
    "start": "131120",
    "end": "138480"
  },
  {
    "text": "and they're pretty isolated because you want to geographically distribute them all over the world",
    "start": "138480",
    "end": "145840"
  },
  {
    "text": "and of course there's regions causing the multi region which is",
    "start": "146640",
    "end": "151680"
  },
  {
    "text": "more regions which means they're spread out geographically",
    "start": "151680",
    "end": "158080"
  },
  {
    "text": "so let's first look at the histories of",
    "start": "158080",
    "end": "163120"
  },
  {
    "text": "compute and yes before you start i am fully aware that the following",
    "start": "163120",
    "end": "169040"
  },
  {
    "text": "content isn't entirely accurate but this is my presentation not my phd's",
    "start": "169040",
    "end": "174319"
  },
  {
    "text": "dissertation so",
    "start": "174319",
    "end": "179360"
  },
  {
    "text": "it starts out simple enough with mainframe time sharing",
    "start": "179360",
    "end": "185280"
  },
  {
    "text": "and then we get to things like virtual machines c groups",
    "start": "185280",
    "end": "190560"
  },
  {
    "text": "containers micro vms and then we start to see like the first",
    "start": "190560",
    "end": "196480"
  },
  {
    "text": "successful commercial functions as a service",
    "start": "196480",
    "end": "202239"
  },
  {
    "text": "aws lambda sort of turns up quickly fallout buyer's your functions",
    "start": "203120",
    "end": "210959"
  },
  {
    "text": "and google functions and finally we have our first product moving from",
    "start": "210959",
    "end": "216959"
  },
  {
    "text": "running running into a single region to running multiple",
    "start": "216959",
    "end": "222239"
  },
  {
    "text": "lam.edge now allows you to run the same function in 13 different aws regions",
    "start": "222239",
    "end": "230640"
  },
  {
    "text": "but there is this massive chasm here none of these products have made any",
    "start": "230640",
    "end": "236799"
  },
  {
    "text": "progress towards the edge and there's a good reason for that",
    "start": "236799",
    "end": "243599"
  },
  {
    "text": "and that has to do with the environment as we've talked about previously because a product that has evolved in a",
    "start": "243840",
    "end": "250799"
  },
  {
    "text": "region won't be able to thrive on the edge which is why if you want to be",
    "start": "250799",
    "end": "256639"
  },
  {
    "text": "successful in there you have to grow up on the edge",
    "start": "256639",
    "end": "262720"
  },
  {
    "text": "so what does it look like over in edgeworld we started out with things like reverse",
    "start": "264320",
    "end": "269680"
  },
  {
    "text": "proxies and virtual hosts nothing programmable yet mostly static configurations",
    "start": "269680",
    "end": "277919"
  },
  {
    "text": "vcl came along the varnish configuration language which allowed people to write",
    "start": "277919",
    "end": "283199"
  },
  {
    "text": "much more programmable configurations but things started to take off properly",
    "start": "283199",
    "end": "289040"
  },
  {
    "text": "with v8 which formed the basis of cloudflare workers",
    "start": "289040",
    "end": "294800"
  },
  {
    "text": "webassembly came along which quick fastly quickly adopted for their computed edge",
    "start": "294800",
    "end": "301600"
  },
  {
    "text": "and akamai and netlify soon followed suit with their javascript based solutions",
    "start": "301600",
    "end": "308680"
  },
  {
    "text": "and we know that this chasm is impossible to cross because when aws who already had lambda",
    "start": "310400",
    "end": "317600"
  },
  {
    "text": "and lambda networking wanted to run something on the edge they had to adopt engine x's and njs",
    "start": "317600",
    "end": "325360"
  },
  {
    "text": "to build cloudform functions on top of",
    "start": "325360",
    "end": "329918"
  },
  {
    "text": "so let's talk about data what patterns can we see there",
    "start": "331440",
    "end": "338320"
  },
  {
    "text": "and it starts out pretty similar we've got relational databases",
    "start": "338320",
    "end": "344720"
  },
  {
    "text": "sql please do some things like mysql and other databases",
    "start": "344720",
    "end": "349759"
  },
  {
    "text": "and one of the sort of things like rds like a managed service",
    "start": "349759",
    "end": "359199"
  },
  {
    "text": "then there is of course no sql because if you have sql you need no sql which",
    "start": "359440",
    "end": "366240"
  },
  {
    "text": "leads to things like document stores and key value stores",
    "start": "366240",
    "end": "371919"
  },
  {
    "text": "a popular document store instead of mongodb and a popular key value store is",
    "start": "371919",
    "end": "377840"
  },
  {
    "text": "dynamodb um but we also see our first multi-region",
    "start": "377840",
    "end": "384160"
  },
  {
    "text": "native database appear which is uh azure's cosmodb",
    "start": "384160",
    "end": "391759"
  },
  {
    "text": "mongodb sort of released as mongodb atlas which is their multi-region offering",
    "start": "391759",
    "end": "397600"
  },
  {
    "text": "dynamodb global tables instead of go to modern regions and of course there's",
    "start": "397600",
    "end": "403039"
  },
  {
    "text": "things like graphql and sort of phone idb that do molten region as well",
    "start": "403039",
    "end": "409280"
  },
  {
    "text": "but still the exact same chasm",
    "start": "409280",
    "end": "414479"
  },
  {
    "text": "none of these tools have made it all the way to the edge",
    "start": "414479",
    "end": "419759"
  },
  {
    "text": "why the first reason",
    "start": "419919",
    "end": "425919"
  },
  {
    "text": "is pretty simple and it's money storage is cheap",
    "start": "425919",
    "end": "431599"
  },
  {
    "text": "but it's not hundreds of copies of my entire database cheap",
    "start": "431599",
    "end": "437840"
  },
  {
    "text": "and the next constraint is consensus it's impossible to create any sort of",
    "start": "438800",
    "end": "445520"
  },
  {
    "text": "consensus on the state of an entire database with latency in 100 plus milliseconds",
    "start": "445520",
    "end": "451599"
  },
  {
    "text": "and hundreds and hundreds of nodes so",
    "start": "451599",
    "end": "457599"
  },
  {
    "text": "what does growing up at the edge look like for data",
    "start": "457599",
    "end": "463599"
  },
  {
    "text": "and to start there i want to start with the evolution of cloudflare",
    "start": "463759",
    "end": "469360"
  },
  {
    "text": "what does it look like for us so",
    "start": "469360",
    "end": "475120"
  },
  {
    "text": "our first database product was an internal thing quicksilver is a key value store that is",
    "start": "475120",
    "end": "482319"
  },
  {
    "text": "used as the backend for our control plan one of the most critical components of",
    "start": "482319",
    "end": "487919"
  },
  {
    "text": "our infrastructure because without it no updates can be propagated to rs",
    "start": "487919",
    "end": "493599"
  },
  {
    "text": "locations quicksilver wasn't affected by the money",
    "start": "493599",
    "end": "500879"
  },
  {
    "text": "constraint much because configuration data is really small and we only need to store the latest",
    "start": "500879",
    "end": "507520"
  },
  {
    "text": "value not an entire history and because we have centralized rights",
    "start": "507520",
    "end": "513839"
  },
  {
    "text": "and then fan out any changes to the edge we didn't have a consensus problem",
    "start": "513839",
    "end": "519360"
  },
  {
    "text": "either the next iteration was workers kv",
    "start": "519360",
    "end": "528080"
  },
  {
    "text": "workers kv is a key value store for cloudflare workers",
    "start": "529360",
    "end": "535839"
  },
  {
    "text": "money wasn't much of a problem because the full data set is only stored",
    "start": "536800",
    "end": "542320"
  },
  {
    "text": "in a few central locations at the edge we only cache recently used",
    "start": "542320",
    "end": "548320"
  },
  {
    "text": "entries and the story with consensus is pretty similar",
    "start": "548320",
    "end": "554000"
  },
  {
    "text": "not only are the rights centralized but there is no attempt to create consensus",
    "start": "554000",
    "end": "561279"
  },
  {
    "text": "the last write to arrive at the server wins now many people",
    "start": "561279",
    "end": "567200"
  },
  {
    "text": "myself included wouldn't call a database with last write wins semantics a proper database",
    "start": "567200",
    "end": "575680"
  },
  {
    "text": "but the truth of the matter is that if you have an application with lots of reads",
    "start": "575680",
    "end": "581279"
  },
  {
    "text": "some rights and a few updates kfee is a perfectly fine database for",
    "start": "581279",
    "end": "586480"
  },
  {
    "text": "your use case and it turns out a lot of web applications fall into this category",
    "start": "586480",
    "end": "595040"
  },
  {
    "text": "and then we get to durable objects and this is where things gets really interesting",
    "start": "596480",
    "end": "603200"
  },
  {
    "text": "because durable objects are a new thing in time they are actor-like objects with",
    "start": "603200",
    "end": "609040"
  },
  {
    "text": "attached persistent storage this sidesteps the money problem by",
    "start": "609040",
    "end": "615120"
  },
  {
    "text": "sharding the full data set over multiple clusters",
    "start": "615120",
    "end": "620240"
  },
  {
    "text": "and those clusters are spread out all over the world a cluster is made up of a small number",
    "start": "620240",
    "end": "627440"
  },
  {
    "text": "of close by nodes which is also what helps it solve the",
    "start": "627440",
    "end": "632480"
  },
  {
    "text": "consensus problem so how does this all work in practice",
    "start": "632480",
    "end": "640079"
  },
  {
    "text": "one of the most fundamental things to understand about durable objects is that there can be only one",
    "start": "642399",
    "end": "650079"
  },
  {
    "text": "well there can be only one durable object per identifier",
    "start": "650079",
    "end": "656399"
  },
  {
    "text": "and if you now have the princess of the universe theme from queen in your head i'm",
    "start": "656480",
    "end": "662880"
  },
  {
    "text": "i'm not sorry so what this means is that there can",
    "start": "662880",
    "end": "668720"
  },
  {
    "text": "only be one durable object available is we create durable objects close to",
    "start": "668720",
    "end": "676000"
  },
  {
    "text": "where your customers are",
    "start": "676000",
    "end": "679120"
  },
  {
    "text": "so let's show some code examples uh to make things a bit more concrete",
    "start": "685279",
    "end": "691760"
  },
  {
    "text": "like how do we get a durable object well there's two different methods that",
    "start": "691760",
    "end": "697279"
  },
  {
    "text": "each have slightly different semantics the first one is with id from name",
    "start": "697279",
    "end": "705040"
  },
  {
    "text": "which allows you to create a durable object with an external identifier",
    "start": "705040",
    "end": "711839"
  },
  {
    "text": "such as a username or company identifier this will check if a durable object with",
    "start": "711839",
    "end": "719600"
  },
  {
    "text": "that name already exists somewhere in the world even in other clusters",
    "start": "719600",
    "end": "726320"
  },
  {
    "text": "and if it does it will connect that existing one wherever it may be",
    "start": "726320",
    "end": "732959"
  },
  {
    "text": "and if not it will create a new durable object",
    "start": "732959",
    "end": "739279"
  },
  {
    "text": "the new unique id will create a durable object with",
    "start": "739360",
    "end": "746480"
  },
  {
    "text": "surprise surprise a unique identifier",
    "start": "746480",
    "end": "753279"
  },
  {
    "text": "the most important thing here is that it creates that objects as close as possible",
    "start": "753279",
    "end": "759200"
  },
  {
    "text": "to your user",
    "start": "759200",
    "end": "761920"
  },
  {
    "text": "everything is the same except for these two methods",
    "start": "765519",
    "end": "770639"
  },
  {
    "text": "also note that the only way to invoke a durable object is to go through a",
    "start": "770800",
    "end": "776000"
  },
  {
    "text": "regular worker so the code you see here is a worker that gets a counter durable",
    "start": "776000",
    "end": "782880"
  },
  {
    "text": "object it calls the fetch method on it and awaits a response",
    "start": "782880",
    "end": "789760"
  },
  {
    "text": "so the next bit about initializing a durable object",
    "start": "792639",
    "end": "798240"
  },
  {
    "text": "now a durable object is just a class initializing can be a bit tricky because",
    "start": "798240",
    "end": "804160"
  },
  {
    "text": "it's possible to have multiple requests coming in at the same time but if you follow this template",
    "start": "804160",
    "end": "809920"
  },
  {
    "text": "everything will work out just fine have a constructor and initialization",
    "start": "809920",
    "end": "817200"
  },
  {
    "text": "uh promise that we store on the class and that we await before we proceed with",
    "start": "817200",
    "end": "823279"
  },
  {
    "text": "any processing of requests in the case of errors it will handle the error properly and",
    "start": "823279",
    "end": "829839"
  },
  {
    "text": "retry initialization",
    "start": "829839",
    "end": "833040"
  },
  {
    "text": "and then the rest of the fetch method you can do whatever you want with both instance variables and persistent",
    "start": "836800",
    "end": "842959"
  },
  {
    "text": "storage you don't have to use either of those",
    "start": "842959",
    "end": "848240"
  },
  {
    "text": "in the example here we increase the current value if the path",
    "start": "848720",
    "end": "854160"
  },
  {
    "text": "time of the url and is slash increment and we store that",
    "start": "854160",
    "end": "859519"
  },
  {
    "text": "before returning the current value to the worker which can transform that again if it so",
    "start": "859519",
    "end": "865760"
  },
  {
    "text": "desires",
    "start": "865760",
    "end": "868760"
  },
  {
    "text": "and durable object has full transactional support a real proper database",
    "start": "872560",
    "end": "879839"
  },
  {
    "text": "for example if you want to create a lookup table which can look up a name and twitter",
    "start": "879839",
    "end": "885360"
  },
  {
    "text": "handle or twitter handle and a name you can do these two puts in a row",
    "start": "885360",
    "end": "892480"
  },
  {
    "text": "be it inside a transaction and either both of those will succeed",
    "start": "892480",
    "end": "899680"
  },
  {
    "text": "or both of those will fail this leads us to",
    "start": "899680",
    "end": "906160"
  },
  {
    "text": "an important question like what would you use durable objects for",
    "start": "906160",
    "end": "912399"
  },
  {
    "text": "and there's a lot of different things you can do things like per user caching",
    "start": "912399",
    "end": "919680"
  },
  {
    "text": "right create a new durable object with a new id and it's getting close gets initialized close to",
    "start": "919680",
    "end": "926000"
  },
  {
    "text": "the user and they can now query that for a set of caches for just them",
    "start": "926000",
    "end": "932480"
  },
  {
    "text": "maybe you want to create a queue to do offline processing of things",
    "start": "932480",
    "end": "938839"
  },
  {
    "text": "um you can do event streaming durable objects can",
    "start": "938839",
    "end": "944639"
  },
  {
    "text": "receive and initiate web sockets so you can create a websocket a user can",
    "start": "944639",
    "end": "950720"
  },
  {
    "text": "create a wrap socket to a durable object and then the durable object can",
    "start": "950720",
    "end": "956240"
  },
  {
    "text": "stream events to the user or you can take that one further",
    "start": "956240",
    "end": "962720"
  },
  {
    "text": "and do things like collaborative editing where you have one durable object per document and multiple people have a",
    "start": "962720",
    "end": "968800"
  },
  {
    "text": "websocket connection open to the durable object",
    "start": "968800",
    "end": "973680"
  },
  {
    "text": "another thing is [Music] going to be a lot of interesting going forward",
    "start": "974320",
    "end": "979839"
  },
  {
    "text": "where a lot of regulation is coming into place where",
    "start": "979839",
    "end": "985519"
  },
  {
    "text": "certain governments or large organizations have to store their data in a particular",
    "start": "985519",
    "end": "991920"
  },
  {
    "text": "region and what we now have to do is we have to spin up copies of our applications in",
    "start": "991920",
    "end": "998480"
  },
  {
    "text": "all these different regions to support data in different regions",
    "start": "998480",
    "end": "1005040"
  },
  {
    "text": "but a durable object you can specify a jurisdiction",
    "start": "1005040",
    "end": "1010800"
  },
  {
    "text": "in which you want to store that durable object and its associated data",
    "start": "1010800",
    "end": "1016560"
  },
  {
    "text": "so you can guarantee that a user's data for example never leaves the eu",
    "start": "1016560",
    "end": "1022480"
  },
  {
    "text": "and a much fun one is multiplayer game um",
    "start": "1023120",
    "end": "1028959"
  },
  {
    "text": "last week we released the original doom multiplayer on durable objects",
    "start": "1028959",
    "end": "1037280"
  },
  {
    "text": "but more importantly we haven't begun to stretch the service of what's possible",
    "start": "1037280",
    "end": "1042959"
  },
  {
    "text": "with this region global",
    "start": "1042959",
    "end": "1048160"
  },
  {
    "text": "and this is just our journey our revolution and our model it's quite possible that different",
    "start": "1048160",
    "end": "1054080"
  },
  {
    "text": "people will come up with different ideas on how to store data at the edge and that has me so extremely excited",
    "start": "1054080",
    "end": "1062240"
  },
  {
    "text": "because data on the edge is just in its infancy and i for one can't wait to see where",
    "start": "1062240",
    "end": "1067760"
  },
  {
    "text": "this will take us thank you very much",
    "start": "1067760",
    "end": "1072320"
  },
  {
    "text": "erin thank you so much for the great presentation and for the great introduction yeah sorry i'm typing instead of typing",
    "start": "1074640",
    "end": "1081440"
  },
  {
    "text": "my one last thing oh store rich there we go oh okay great we're happy",
    "start": "1081440",
    "end": "1087919"
  },
  {
    "text": "so yeah thanks a lot for the great introduction and for um",
    "start": "1087919",
    "end": "1094000"
  },
  {
    "text": "introducing running the database at the database at the edge i'm i'm extremely excited about seeing what's next and uh",
    "start": "1094000",
    "end": "1100720"
  },
  {
    "text": "obviously what you do with cloudflare is extremely interesting and finding more applications some job is a few that that",
    "start": "1100720",
    "end": "1106799"
  },
  {
    "text": "you've uh the developments are quite fascinating uh we have about 20 minutes for the q a i'm",
    "start": "1106799",
    "end": "1113840"
  },
  {
    "text": "seeing a lot of good questions popping up in the chat for the attendees please please keep them coming",
    "start": "1113840",
    "end": "1119600"
  },
  {
    "text": "uh so yeah probably everything to start with that um",
    "start": "1119600",
    "end": "1125120"
  },
  {
    "text": "you mentioned that you want to store durable objects close to the users and ultimately to workers",
    "start": "1125120",
    "end": "1130880"
  },
  {
    "text": "that process data and send them to the users today it's called for how do you decide",
    "start": "1130880",
    "end": "1137120"
  },
  {
    "text": "where to place uh the durable objects on because i assume that you run with many points of presence many locations",
    "start": "1137120",
    "end": "1143440"
  },
  {
    "text": "yes of course yeah um so like the first thing is we don't run in like data durable objects i've drawn in every um",
    "start": "1143440",
    "end": "1150960"
  },
  {
    "text": "sort of location um because like we've got everything from small",
    "start": "1150960",
    "end": "1156559"
  },
  {
    "text": "um like a one wreck in uh instead of an isp to sort of our own sort of data",
    "start": "1156559",
    "end": "1162640"
  },
  {
    "text": "centers but um but yeah so so the there's",
    "start": "1162640",
    "end": "1168320"
  },
  {
    "text": "clusters are sort of like a handful uh four or five um",
    "start": "1168320",
    "end": "1173679"
  },
  {
    "text": "sort of colors that are sort of close together and so",
    "start": "1173679",
    "end": "1178960"
  },
  {
    "text": "if if you're um sort of for example a user sort of connects to a sort of a",
    "start": "1178960",
    "end": "1185039"
  },
  {
    "text": "worker and um",
    "start": "1185039",
    "end": "1190400"
  },
  {
    "text": "they're they're looking for created to create a durable object um",
    "start": "1190400",
    "end": "1196080"
  },
  {
    "text": "um that durable object uh will be created in that in that sort of uh colo in that sort of data center",
    "start": "1196080",
    "end": "1204240"
  },
  {
    "text": "um and if they um [Music] and if they",
    "start": "1204240",
    "end": "1209280"
  },
  {
    "text": "don't like if they're if they're in a like it'll just go to the nearest sort of carlo that has um",
    "start": "1209280",
    "end": "1216320"
  },
  {
    "text": "journal object support and the the fuller question to that uh",
    "start": "1216320",
    "end": "1222080"
  },
  {
    "text": "how do you do you have some sort of a control plane or do you use something like dns to actually connect the request",
    "start": "1222080",
    "end": "1228159"
  },
  {
    "text": "the user with a specific server like what's uh what's driving the the routing",
    "start": "1228159",
    "end": "1233360"
  },
  {
    "text": "of those requests yeah great question so what we what we have is uh sort of yes and yes and no",
    "start": "1233360",
    "end": "1241360"
  },
  {
    "text": "um and um so basically how it works is when you",
    "start": "1241360",
    "end": "1247360"
  },
  {
    "text": "when you request um so there's the two methods to create a durable object right like the the easy",
    "start": "1247360",
    "end": "1253679"
  },
  {
    "text": "one is to uh when you go give me a new durable object with a new unique unique",
    "start": "1253679",
    "end": "1259840"
  },
  {
    "text": "identifier right in that case we don't need to do sort of much like the the the colo",
    "start": "1259840",
    "end": "1266799"
  },
  {
    "text": "itself can generate that id because the colo id is part of that sort",
    "start": "1266799",
    "end": "1271840"
  },
  {
    "text": "of identifier um and",
    "start": "1271840",
    "end": "1276880"
  },
  {
    "text": "um so nothing needs to be done so it's it's the owner of that",
    "start": "1276880",
    "end": "1282880"
  },
  {
    "text": "it specifically is the owner of that durable object and sort of the rest of its cluster is sort of the backup for",
    "start": "1282880",
    "end": "1290400"
  },
  {
    "text": "that durable object in the case of sort of any outages um",
    "start": "1290400",
    "end": "1297120"
  },
  {
    "text": "so that doesn't necessarily require like a lot of a control plane",
    "start": "1297120",
    "end": "1302840"
  },
  {
    "text": "um what is slightly different is that if you",
    "start": "1302840",
    "end": "1308400"
  },
  {
    "text": "uh have an external identifier or sort of anything else like if you do the the from name",
    "start": "1308400",
    "end": "1314960"
  },
  {
    "text": "um what we need to do is we need to check whether that um whether that",
    "start": "1314960",
    "end": "1322000"
  },
  {
    "text": "is where if there's any copy running already right because we because we mentioned that there's only there can",
    "start": "1322000",
    "end": "1327919"
  },
  {
    "text": "only be one durable object incentive at any time um so",
    "start": "1327919",
    "end": "1334080"
  },
  {
    "text": "that goes through sort of the control plane um to sort of get consensus on so if there is",
    "start": "1334080",
    "end": "1342320"
  },
  {
    "text": "is a durable object with that particular identifier and if there is it will get back the identifier",
    "start": "1342320",
    "end": "1349600"
  },
  {
    "text": "instead of connected to the sort of the correct um sort of data center to talk to that durable object",
    "start": "1349600",
    "end": "1356240"
  },
  {
    "text": "and if there isn't it will generate an id and that id will be cached by every",
    "start": "1356240",
    "end": "1365120"
  },
  {
    "text": "data center so that for future reference",
    "start": "1365440",
    "end": "1371000"
  },
  {
    "text": "[Music] like they don't need to go to this sort of central central repository",
    "start": "1371000",
    "end": "1377600"
  },
  {
    "text": "um so that's sort of that's sort of how sort of the this little control plan works",
    "start": "1377600",
    "end": "1383679"
  },
  {
    "text": "and so looking at an id every everyone can figure out where to talk to",
    "start": "1383679",
    "end": "1389360"
  },
  {
    "text": "like you first try the data center um that it's running in",
    "start": "1389360",
    "end": "1396000"
  },
  {
    "text": "that it's supposed to be running and if not there's fallbacks to other machines in the same cluster",
    "start": "1396000",
    "end": "1402480"
  },
  {
    "text": "okay great yeah thanks a lot for detailing that uh there are a few great questions in the chat yeah so first",
    "start": "1402480",
    "end": "1408880"
  },
  {
    "text": "question is from rn uh what do you do when there are network splits when you lose the segment of your network what",
    "start": "1408880",
    "end": "1414640"
  },
  {
    "text": "would be the resolution for you to recover from that so um",
    "start": "1414640",
    "end": "1420240"
  },
  {
    "text": "the um the the data center that the durable object",
    "start": "1420240",
    "end": "1426400"
  },
  {
    "text": "is running in is also um the sort of master of",
    "start": "1426400",
    "end": "1432480"
  },
  {
    "text": "the precision storage and the rest of the cluster is used to um sort of replicate the data",
    "start": "1432480",
    "end": "1440159"
  },
  {
    "text": "um so networks and sort of like there's like network splits between clusters are",
    "start": "1440159",
    "end": "1447039"
  },
  {
    "text": "are fine um right because that's um",
    "start": "1447039",
    "end": "1453279"
  },
  {
    "text": "um because there's nothing shared between uh sort of different clusters so within",
    "start": "1453279",
    "end": "1458559"
  },
  {
    "text": "the cluster um it's also highly unlikely that um",
    "start": "1458559",
    "end": "1463679"
  },
  {
    "text": "something like again if you get like the the correct network split i'm not entirely sure",
    "start": "1463679",
    "end": "1468799"
  },
  {
    "text": "uh what happens but i think one of his other questions was like do we use any",
    "start": "1468799",
    "end": "1473840"
  },
  {
    "text": "um like database um technology and the thing that we use",
    "start": "1473840",
    "end": "1479279"
  },
  {
    "text": "uh to store the data and run the clusters is cockroachdb um",
    "start": "1479279",
    "end": "1484840"
  },
  {
    "text": "so i'm not i'm not 100 sure sort of how how exactly those were configured but um",
    "start": "1484840",
    "end": "1492159"
  },
  {
    "text": "um but yeah like network splits are are very unlikely to um",
    "start": "1492159",
    "end": "1497679"
  },
  {
    "text": "i'm not going to say impossible um um because it's probably a not impossible um but um but very unlikely",
    "start": "1497679",
    "end": "1505919"
  },
  {
    "text": "what about the fire in the in the single pop in the in the data center well fire and fire in a single pop is definitely",
    "start": "1505919",
    "end": "1512080"
  },
  {
    "text": "something to survive um so like if the if the sort of heartbeat of a durable",
    "start": "1512080",
    "end": "1517600"
  },
  {
    "text": "object um sort of stops um the the rest of the cluster will",
    "start": "1517600",
    "end": "1524240"
  },
  {
    "text": "uh so take ownerships to take ownership of the durable objects",
    "start": "1524240",
    "end": "1529840"
  },
  {
    "text": "and again that's sort of the where the fallback sort of comes in place and in that case your replication",
    "start": "1529840",
    "end": "1535440"
  },
  {
    "text": "strategy is the trying to minimize the risk of losing multiple data centers that was at which",
    "start": "1535440",
    "end": "1541600"
  },
  {
    "text": "point it becomes almost impossible event yeah yeah yeah like certainly like we like and again like the difference",
    "start": "1541600",
    "end": "1547919"
  },
  {
    "text": "between that sort of region versus like the edge um like in a region all your data",
    "start": "1547919",
    "end": "1554000"
  },
  {
    "text": "centers are like pretty close to whatever right like they're um they're like kilometers or tens of",
    "start": "1554000",
    "end": "1560240"
  },
  {
    "text": "kilometers at most away from each other and we don't have that right we don't have well like well we may have two",
    "start": "1560240",
    "end": "1568159"
  },
  {
    "text": "uh at most three data centers in one city um so our our our",
    "start": "1568159",
    "end": "1574720"
  },
  {
    "text": "nodes are spread out uh sort of by definition basically",
    "start": "1574720",
    "end": "1579760"
  },
  {
    "text": "got it great yeah then there is another question from gaurav what's the ideal size for the durable",
    "start": "1579760",
    "end": "1585360"
  },
  {
    "text": "objects do you have any recommendations or draining the range of blood support yeah so like the fun thing about durable",
    "start": "1585360",
    "end": "1591440"
  },
  {
    "text": "objects is they're great without persistent storage um like just using it as a",
    "start": "1591440",
    "end": "1597360"
  },
  {
    "text": "method of coordination um one of the things we built for the",
    "start": "1597360",
    "end": "1603440"
  },
  {
    "text": "company i the startup that i ran uh before being acquired by cloudflare we just",
    "start": "1603440",
    "end": "1609520"
  },
  {
    "text": "built a stream built log streaming uh and we were streaming data",
    "start": "1609520",
    "end": "1615120"
  },
  {
    "text": "uh and um so we were serving data to",
    "start": "1615120",
    "end": "1621600"
  },
  {
    "text": "zero to n sort of participants and a durable object was first was perfect for that",
    "start": "1621600",
    "end": "1627279"
  },
  {
    "text": "because the build the builder would just stream the buildblocks to a durable object and if anyone was interested in it they",
    "start": "1627279",
    "end": "1634159"
  },
  {
    "text": "would connect to the durable object and so to start streaming the events and",
    "start": "1634159",
    "end": "1640320"
  },
  {
    "text": "because like it was a durable object with like we we only used uh ins like",
    "start": "1640320",
    "end": "1646159"
  },
  {
    "text": "in-state memory for um um storing the build log to the up to",
    "start": "1646159",
    "end": "1652640"
  },
  {
    "text": "that point um so yeah like that was that was sort of stuff that was sort of really really useful so",
    "start": "1652640",
    "end": "1659600"
  },
  {
    "text": "like you don't even need to use storage um and and if you do",
    "start": "1659600",
    "end": "1665440"
  },
  {
    "text": "like i'm not aware of any any sort of upper limits um and",
    "start": "1665440",
    "end": "1671760"
  },
  {
    "text": "but like i can't imagine like it'll it'll be hundreds",
    "start": "1671760",
    "end": "1676799"
  },
  {
    "text": "of megabytes gigabytes of data um like it will be fine um",
    "start": "1676799",
    "end": "1683279"
  },
  {
    "text": "yeah so yeah i wouldn't worry about it yeah cool thank you then another question for from florian on the",
    "start": "1683279",
    "end": "1689520"
  },
  {
    "text": "semantics like you call them objects uh why are they called objects not documents like is there some sort of",
    "start": "1689520",
    "end": "1695679"
  },
  {
    "text": "object-oriented style of how they're going to be used to design the api so is there another seven",
    "start": "1695679",
    "end": "1702240"
  },
  {
    "text": "so there's like there's there's this and this was before i joined cloudflare so i",
    "start": "1702240",
    "end": "1707520"
  },
  {
    "text": "can only uh sort of talk about sort of what i heard but um but there was a there was a big",
    "start": "1707520",
    "end": "1712799"
  },
  {
    "text": "uh there was a big um sort of back and forth between do we call them durable actors or uh durable objects",
    "start": "1712799",
    "end": "1719840"
  },
  {
    "text": "um [Music] because they sort of have a bit for for a set of both uh but yeah like they they",
    "start": "1719840",
    "end": "1726240"
  },
  {
    "text": "definitely have that um that encapsulation of behavior because it's just javascript that you do in your",
    "start": "1726240",
    "end": "1732960"
  },
  {
    "text": "fetch um and you have your sort of present data um so it so it's",
    "start": "1732960",
    "end": "1739200"
  },
  {
    "text": "it's definitely um so it fits that sort of that sort of object",
    "start": "1739200",
    "end": "1745120"
  },
  {
    "text": "um in traditional sort of object oriented sort of model",
    "start": "1745120",
    "end": "1750159"
  },
  {
    "text": "yeah great thank you uh then another interesting question from yandrick uh how do you manage",
    "start": "1750159",
    "end": "1756320"
  },
  {
    "text": "access to the durable objects uh do you have any sort of access control and how do manage permissions if you do",
    "start": "1756320",
    "end": "1763039"
  },
  {
    "text": "ah that's a great question um so like the worker has well one or more workers because it's",
    "start": "1763039",
    "end": "1769840"
  },
  {
    "text": "not limited to sort of one worker but like there's always um so you need to have a worker in front of your",
    "start": "1769840",
    "end": "1775120"
  },
  {
    "text": "durable object um like and that's where you would do your",
    "start": "1775120",
    "end": "1780480"
  },
  {
    "text": "sort of access management um most likely",
    "start": "1780480",
    "end": "1786320"
  },
  {
    "text": "or you just you can just pass that information sort of through to the durable object for the journal object setup to do it um",
    "start": "1786320",
    "end": "1794960"
  },
  {
    "text": "but um but yeah like there's no inbuilt sort of permissions or uh",
    "start": "1794960",
    "end": "1801120"
  },
  {
    "text": "sort of access control you have to do that either in the worker itself or you just forward the http",
    "start": "1801120",
    "end": "1806159"
  },
  {
    "text": "request to the durable object for for and then they do it",
    "start": "1806159",
    "end": "1812159"
  },
  {
    "text": "that's it okay great that's that sounds like it works",
    "start": "1812480",
    "end": "1817520"
  },
  {
    "text": "uh another question from taidar if you detect a remote durable object so you",
    "start": "1817520",
    "end": "1822640"
  },
  {
    "text": "don't have anything stored locally on the node that processes the request how do you like do you then fashion",
    "start": "1822640",
    "end": "1829200"
  },
  {
    "text": "materials locally or to just kind of pass the information remotely how do you",
    "start": "1829200",
    "end": "1834320"
  },
  {
    "text": "kind of manage the storing and managing the allocation of that of that object yeah",
    "start": "1834320",
    "end": "1841279"
  },
  {
    "text": "so again there will only be one right so we will never move a durable object away from",
    "start": "1841279",
    "end": "1848000"
  },
  {
    "text": "its data um so if there's a remote remote as a sort of durable object uh we will connect to",
    "start": "1848000",
    "end": "1854880"
  },
  {
    "text": "that remote durable object um and this is a request response right so it's",
    "start": "1854880",
    "end": "1861200"
  },
  {
    "text": "a it's model like it's even modeled like an http response even though it isn't",
    "start": "1861200",
    "end": "1866399"
  },
  {
    "text": "technically http um that they um that they talk but yeah you",
    "start": "1866399",
    "end": "1871440"
  },
  {
    "text": "basically make an acp request to a remote durable object wherever it is in the world",
    "start": "1871440",
    "end": "1876960"
  },
  {
    "text": "um so yeah that's there's no because once you and that's",
    "start": "1876960",
    "end": "1882320"
  },
  {
    "text": "sort of why it works so well because you have your in-memory state is always going to be",
    "start": "1882320",
    "end": "1888559"
  },
  {
    "text": "um the same right you can't you can't if we would instantiate locally you now have multiple copies and your state",
    "start": "1888559",
    "end": "1894960"
  },
  {
    "text": "would be ruined but in that case um",
    "start": "1894960",
    "end": "1900240"
  },
  {
    "text": "if users moved like do have any sort of data migration mechanism let's say",
    "start": "1900240",
    "end": "1906640"
  },
  {
    "text": "yeah so they all picked the street and user was let's say in the us but then the user moved to europe",
    "start": "1906640",
    "end": "1912480"
  },
  {
    "text": "will they have to keep talking to the us so you have some sort of mechanism to move that while keeping this uh single",
    "start": "1912480",
    "end": "1918799"
  },
  {
    "text": "copy concept so right now",
    "start": "1918799",
    "end": "1924080"
  },
  {
    "text": "you'd still you'd still be talking to the um the location um",
    "start": "1924080",
    "end": "1930080"
  },
  {
    "text": "but it's definitely sort of one of the things that the team is is sort of instead of working on it's on a roadmap",
    "start": "1930080",
    "end": "1935679"
  },
  {
    "text": "like how do you how do you automatically migrate um so durable objects because it's not",
    "start": "1935679",
    "end": "1942720"
  },
  {
    "text": "just if they use sorry it's not just if the user moves um it's also a",
    "start": "1942720",
    "end": "1949360"
  },
  {
    "text": "um like if you have two uh two things that connect to a durable object",
    "start": "1949360",
    "end": "1955760"
  },
  {
    "text": "uh frequently right like there's um there's the us and there's sort of",
    "start": "1955760",
    "end": "1961039"
  },
  {
    "text": "asia um there could be possibility if you go like well uh maybe better if we move this thing to",
    "start": "1961039",
    "end": "1967279"
  },
  {
    "text": "europe um because it's closer to both right so there's a",
    "start": "1967279",
    "end": "1972320"
  },
  {
    "text": "there's a bunch of scenarios where we could do automatic migrations of your",
    "start": "1972320",
    "end": "1977360"
  },
  {
    "text": "uh durable objects um and there's definitely sort of like the ground workers there but yeah it's still not it's it's it",
    "start": "1977360",
    "end": "1984080"
  },
  {
    "text": "hasn't finished yet uh it's definitely one of the things we're really excited about that yeah",
    "start": "1984080",
    "end": "1989600"
  },
  {
    "text": "like be below this abstraction layer uh there's a lot of potential for sort",
    "start": "1989600",
    "end": "1994960"
  },
  {
    "text": "of optimizations uh is it similar that you're looking into some of those optimizations when",
    "start": "1994960",
    "end": "2000320"
  },
  {
    "text": "you have uh the same user accessing from two different devices and all potential into different networks",
    "start": "2000320",
    "end": "2006880"
  },
  {
    "text": "would it fall into the same category of optimization so there are more nuances yeah no it's the same thing like it's",
    "start": "2006880",
    "end": "2013039"
  },
  {
    "text": "just like how do you how do you move the durable object to",
    "start": "2013039",
    "end": "2018799"
  },
  {
    "text": "um like the place where it's um the most optimal",
    "start": "2018799",
    "end": "2025120"
  },
  {
    "text": "like um but yeah like that's not like just just to be sure like it's not in the in the product right now um",
    "start": "2025120",
    "end": "2033200"
  },
  {
    "text": "make sense well i think as as you mentioned this is a relatively young product yeah there are plenty of ways to",
    "start": "2033200",
    "end": "2039519"
  },
  {
    "text": "have like applications to find the users and the proper optimizations for that oh absolutely yeah uh so the interesting",
    "start": "2039519",
    "end": "2047039"
  },
  {
    "text": "question from chris um durable objects as you presented it",
    "start": "2047039",
    "end": "2053358"
  },
  {
    "text": "it makes sense if you run your code on the edge or maybe on the client side",
    "start": "2053359",
    "end": "2058398"
  },
  {
    "text": "but what if you run the code in the data centers like in introduction you mentioned that this is kind of the",
    "start": "2058399",
    "end": "2063839"
  },
  {
    "text": "previous architecture how we've been writing the code in the region or the multi-region but how can one benefit",
    "start": "2063839",
    "end": "2070720"
  },
  {
    "text": "from durable objects if your code is still in the data center like it's still in a in a in a full region not at the",
    "start": "2070720",
    "end": "2077118"
  },
  {
    "text": "pop yeah um so this isn't",
    "start": "2077119",
    "end": "2082158"
  },
  {
    "text": "like an all or nothing sort of thing um it's it's that sort of and again like",
    "start": "2082159",
    "end": "2088878"
  },
  {
    "text": "the build streaming sort of example that sort of we had um [Music]",
    "start": "2088879",
    "end": "2094480"
  },
  {
    "text": "like that was that was one of those things where um [Music]",
    "start": "2094480",
    "end": "2099520"
  },
  {
    "text": "the rest of the application was running perfectly fine and used east one",
    "start": "2099520",
    "end": "2104880"
  },
  {
    "text": "but we we picked up the um the durable objects for",
    "start": "2104880",
    "end": "2110240"
  },
  {
    "text": "just the build stock built log streaming but it's definitely aimed like it's you",
    "start": "2110240",
    "end": "2116560"
  },
  {
    "text": "get the by far the most benefit out of it like if you move to what we cloudflare call region global",
    "start": "2116560",
    "end": "2123760"
  },
  {
    "text": "right like either with region earth like that's because i i'm yeah like that's sort of where",
    "start": "2123760",
    "end": "2129359"
  },
  {
    "text": "like how we're thinking and this is the sort of the one of the foundations that we are building um sort of yeah for that region earth um",
    "start": "2129359",
    "end": "2138320"
  },
  {
    "text": "so thing where there there is no us or eu or a pack or",
    "start": "2138320",
    "end": "2144720"
  },
  {
    "text": "like no you've just got data and we'll figure out where to store that data depending on the constraints that",
    "start": "2144720",
    "end": "2151520"
  },
  {
    "text": "you that you've set right so you can just go um [Music]",
    "start": "2151520",
    "end": "2157200"
  },
  {
    "text": "i want and that's the thing i sort of hinted about like you could for example you can set jurisdictions",
    "start": "2157200",
    "end": "2163440"
  },
  {
    "text": "uh for individual um dios right for journal objects so i can",
    "start": "2163440",
    "end": "2170400"
  },
  {
    "text": "go um sergey's in um in sort of the eu so his data is going to",
    "start": "2170400",
    "end": "2177440"
  },
  {
    "text": "be stored in the eu whereas so if i'm in australia so my data is going to be stored in sort of",
    "start": "2177440",
    "end": "2183119"
  },
  {
    "text": "australian data center and it's those those some kinds of um",
    "start": "2183119",
    "end": "2189200"
  },
  {
    "text": "sort of like things where it starts to become really powerful",
    "start": "2189200",
    "end": "2195040"
  },
  {
    "text": "all right i think we are running close to the end of the foreign slots so we probably have um",
    "start": "2195839",
    "end": "2203200"
  },
  {
    "text": "a time for one more question and there is a question from powell about leveraging some of the legacy systems",
    "start": "2203200",
    "end": "2208560"
  },
  {
    "text": "that do id management like imagine if you have a legacy control system that does",
    "start": "2208560",
    "end": "2215200"
  },
  {
    "text": "manage the ideas for you how would you be able to introduce the durable object concept by",
    "start": "2215200",
    "end": "2220800"
  },
  {
    "text": "integrating that to the control plane that's something really exists",
    "start": "2220800",
    "end": "2225760"
  },
  {
    "text": "so um you have if you have a global id in your external system um",
    "start": "2227520",
    "end": "2233599"
  },
  {
    "text": "and you want to sort of use those ids in in durable object",
    "start": "2233599",
    "end": "2239119"
  },
  {
    "text": "um that's so i'm not sure if those legacy systems",
    "start": "2239119",
    "end": "2245839"
  },
  {
    "text": "need to be part of the control plane um",
    "start": "2245839",
    "end": "2251119"
  },
  {
    "text": "because um sort of like if",
    "start": "2251440",
    "end": "2256720"
  },
  {
    "text": "a durable object for example can just sort of itself check um sort of if so if you like i i assume",
    "start": "2256720",
    "end": "2264079"
  },
  {
    "text": "that you may or may not want to um sort of have a durable object for things that either are in your",
    "start": "2264079",
    "end": "2271200"
  },
  {
    "text": "legacy system or are yet in your little legacy system and durable objects",
    "start": "2271200",
    "end": "2276240"
  },
  {
    "text": "again because it's just javascript um they could",
    "start": "2276240",
    "end": "2281440"
  },
  {
    "text": "check if if if something is or isn't sort of in there and and sort of depending and",
    "start": "2281440",
    "end": "2286480"
  },
  {
    "text": "like we're like i don't think there's any plans to",
    "start": "2286480",
    "end": "2291839"
  },
  {
    "text": "um like allow external parties to um",
    "start": "2291839",
    "end": "2297280"
  },
  {
    "text": "um integrate with the control plane but i i haven't heard of it so i'll okay i",
    "start": "2297280",
    "end": "2303440"
  },
  {
    "text": "don't know maybe it is um it makes sense so yeah i think we are at the time and i",
    "start": "2303440",
    "end": "2309920"
  },
  {
    "text": "thanks again for giving the presentation for answering the questions uh we have 20 more minutes in the hangout room uh",
    "start": "2309920",
    "end": "2316480"
  },
  {
    "text": "which is going to be more informal there are a few questions that might be benefit from a bit more informal chat so",
    "start": "2316480",
    "end": "2322000"
  },
  {
    "text": "i'll welcome the attendees to join and both erin and i will be there and there are also couple questions about more",
    "start": "2322000",
    "end": "2328400"
  },
  {
    "text": "links and books introduction to the databases i think will leverage slack channel to post those uh those materials",
    "start": "2328400",
    "end": "2334880"
  },
  {
    "text": "uh for the for the attendees thanks again everyone and um yeah see you in the zoom room or see in the",
    "start": "2334880",
    "end": "2340400"
  },
  {
    "text": "future sessions on this track [Music]",
    "start": "2340400",
    "end": "2351590"
  }
]