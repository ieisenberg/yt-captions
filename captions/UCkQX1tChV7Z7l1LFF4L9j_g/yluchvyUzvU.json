[
  {
    "text": "foreign",
    "start": "4500",
    "end": "7279"
  },
  {
    "text": "looking down for a second there but I mean how many people are actively using node.js just out of curiosity there's",
    "start": "10519",
    "end": "17699"
  },
  {
    "text": "okay so some some of you and so it's becoming an increasingly popular",
    "start": "17699",
    "end": "22859"
  },
  {
    "text": "runtime um and especially the you know HTML5 CSS",
    "start": "22859",
    "end": "28439"
  },
  {
    "text": "JavaScript type space for a couple of reasons um and uh you know we're of course the",
    "start": "28439",
    "end": "34559"
  },
  {
    "text": "company that it sort of came from uh and um you know the core team works for the company so I wanted to actually",
    "start": "34559",
    "end": "40379"
  },
  {
    "text": "explain a bit around um well where it came from why it exists",
    "start": "40379",
    "end": "45600"
  },
  {
    "text": "where is it going in the future um you know as as a base run time and that's sort of the bit around node.js",
    "start": "45600",
    "end": "51840"
  },
  {
    "text": "within context um now at least node as far as as something that uh came out of joint",
    "start": "51840",
    "end": "60420"
  },
  {
    "text": "um you know we're an eight-year-old company you know most of the engineering cares in the U.S",
    "start": "60420",
    "end": "65820"
  },
  {
    "text": "um you know we actually have at least you know upwards of you know nearly sort of 100 megawatts of data centers",
    "start": "65820",
    "end": "72060"
  },
  {
    "text": "deployed as as far as a footprint um and largely owned by you know",
    "start": "72060",
    "end": "77700"
  },
  {
    "text": "employees and you know Intel and and basically carriers and msos and there's",
    "start": "77700",
    "end": "83460"
  },
  {
    "text": "a couple things that we at least do on on my team around base activities and that is you know we do an open source operating system an open source runtime",
    "start": "83460",
    "end": "92280"
  },
  {
    "text": "um and then we basically package all up together and we deliver it as a box or we deliver it on premise that's",
    "start": "92280",
    "end": "97320"
  },
  {
    "text": "effectively what the business does um you know it's well it's no different",
    "start": "97320",
    "end": "102780"
  },
  {
    "text": "than a typical operating system typical runtime you know putting it all together into a basic box",
    "start": "102780",
    "end": "108540"
  },
  {
    "text": "now if we look at our industry just um in general and we look at it in a",
    "start": "108540",
    "end": "113820"
  },
  {
    "text": "very sort of basic economic sense is really not",
    "start": "113820",
    "end": "119520"
  },
  {
    "text": "a lot to it you know meaning that we have one basic economic good in our",
    "start": "119520",
    "end": "125399"
  },
  {
    "text": "industry which is just the bit and we weigh it in bytes and that's no different than if it's a",
    "start": "125399",
    "end": "131640"
  },
  {
    "text": "soybean or a t-shirt or anything that you sort of go and ship around it's a good",
    "start": "131640",
    "end": "137040"
  },
  {
    "text": "um for us in our industry we actually call latency is our service delivery time how",
    "start": "137040",
    "end": "142319"
  },
  {
    "text": "long it takes one thing to go from one place to the other we typically call bits per latency bandwidth and we always",
    "start": "142319",
    "end": "148440"
  },
  {
    "text": "put these things inside a container of some type you know in fact at least on things like the standardization of container ships",
    "start": "148440",
    "end": "155660"
  },
  {
    "text": "it's things like Paul Barron's work on packet switching networks in the 50s it actually inspired that standardization",
    "start": "155660",
    "end": "162920"
  },
  {
    "text": "and in fact one of the bigger problems that we have when we're sort of looking at especially large scale",
    "start": "162920",
    "end": "168599"
  },
  {
    "text": "infrastructures is we actually have no metadata on bits there's no the equivalent of a barcode we only have it",
    "start": "168599",
    "end": "175019"
  },
  {
    "text": "on packets which is a container on the network we have it on memory words we have it on blocks we have it on CPU",
    "start": "175019",
    "end": "181739"
  },
  {
    "text": "registers and you know that's sort of basically it um and computers are also pretty simple",
    "start": "181739",
    "end": "189000"
  },
  {
    "text": "things we really just have data that we do",
    "start": "189000",
    "end": "194099"
  },
  {
    "text": "compute on and we send and receive it over a network and when we start thinking around",
    "start": "194099",
    "end": "199379"
  },
  {
    "text": "then just a basic economic model for delivering these types of things as a service",
    "start": "199379",
    "end": "205220"
  },
  {
    "text": "we have a bit that can live in dram we have a bit that lives on disk we have",
    "start": "205220",
    "end": "210480"
  },
  {
    "text": "bits that live in CPUs and those so those effectively become the three readily available economic",
    "start": "210480",
    "end": "217019"
  },
  {
    "text": "Goods that we have and those are of course called commodities and then it's the movement of them",
    "start": "217019",
    "end": "224040"
  },
  {
    "text": "the sort of iOS the bandwidths and so on like that that are readily available economic Services those are the base",
    "start": "224040",
    "end": "229980"
  },
  {
    "text": "utilities Network i o memoryo disc IO and we of course have a base Service delivery time",
    "start": "229980",
    "end": "237060"
  },
  {
    "text": "now you know somewhat boring in a pure application sense",
    "start": "237060",
    "end": "242280"
  },
  {
    "text": "but this is really all there is inside any computer that you ever touch a bit lives in one of those three places",
    "start": "242280",
    "end": "249540"
  },
  {
    "text": "and it moves along one of those three paths and so from a large-scale service provider point of view it's basically",
    "start": "249540",
    "end": "255840"
  },
  {
    "text": "how do I provide all three of those Commodities all three of those utilities and do sort of a guaranteed Service",
    "start": "255840",
    "end": "261120"
  },
  {
    "text": "delivery time and you just do that sort of end to end now the bigger problem if we look at the",
    "start": "261120",
    "end": "266880"
  },
  {
    "text": "way that the industry is even structured is you effectively have networking companies and compute companies and data companies",
    "start": "266880",
    "end": "272639"
  },
  {
    "text": "we might call them switch vendors server vendors and storage vendors but they do have Diamond you know often",
    "start": "272639",
    "end": "279240"
  },
  {
    "text": "diametrically opposed view of things and in fact on the computer side on the server side",
    "start": "279240",
    "end": "285900"
  },
  {
    "text": "we're a bit sort of held down very much by the fact that we're used to using them as a very big calculator",
    "start": "285900",
    "end": "292919"
  },
  {
    "text": "um literally a guy sitting there just doing math turning dials and having a five megabyte",
    "start": "292919",
    "end": "300120"
  },
  {
    "text": "size hard drive that of course is five tons and has to be you know flown around and even as we sort of sit there and we",
    "start": "300120",
    "end": "306479"
  },
  {
    "text": "see within the industry where we've gone from a room size calculator to now a",
    "start": "306479",
    "end": "312600"
  },
  {
    "text": "calculator that sits in front of you to a calculator that gets shipped inside your home to even how we started using",
    "start": "312600",
    "end": "318960"
  },
  {
    "text": "the internet in the Enterprise you know very often we would draw these great pictures in the",
    "start": "318960",
    "end": "324660"
  },
  {
    "text": "90s of you know five people using an application between the hours of nine to five and nowadays",
    "start": "324660",
    "end": "330060"
  },
  {
    "text": "we write a cloud like this and we talk about things like you know HTML5 based",
    "start": "330060",
    "end": "336539"
  },
  {
    "text": "Multi-Device delivery of an application and so on like that and we draw this now",
    "start": "336539",
    "end": "342060"
  },
  {
    "text": "of course the problem with a lot of this or at least what the base abstraction needs to be is we just need",
    "start": "342060",
    "end": "348360"
  },
  {
    "text": "to think about what would it be if we just thought of it as a world of devices with the network as the back plane right so just",
    "start": "348360",
    "end": "354840"
  },
  {
    "text": "everything's a device the Network's the back plan and if that's the base sort of strata that we're going to operate in",
    "start": "354840",
    "end": "360479"
  },
  {
    "text": "how would we go and design a system that runs that right not how would we deal",
    "start": "360479",
    "end": "365520"
  },
  {
    "text": "with Legacy Croft how do we deal with these types of things how we look at a world of devices with the network as the",
    "start": "365520",
    "end": "371639"
  },
  {
    "text": "back plan and of course when you look at device users device users hitting an application you",
    "start": "371639",
    "end": "377940"
  },
  {
    "text": "know very often are a lot of users hitting an endpoint a lot of users sort of crushing in and that does actually",
    "start": "377940",
    "end": "384240"
  },
  {
    "text": "happen to be crushing and so where you typically see a lot of traditional",
    "start": "384240",
    "end": "389419"
  },
  {
    "text": "run times a lot of traditional Frameworks a lot of these traditional things basically begin to start having",
    "start": "389419",
    "end": "395400"
  },
  {
    "text": "issues now is when you say have an Enterprise application that five people used to use",
    "start": "395400",
    "end": "400440"
  },
  {
    "text": "and now you're actually trying to get it to be used by 1500 sales guys in the",
    "start": "400440",
    "end": "405780"
  },
  {
    "text": "field who expect soft real-time access to it on a mobile device and so that's a different type of",
    "start": "405780",
    "end": "411000"
  },
  {
    "text": "application and it's really historically because we do use computers to calculate things we actually use them to do math",
    "start": "411000",
    "end": "417479"
  },
  {
    "text": "in fact that's even what the name computer comes from compute means to determine by math but the problem being",
    "start": "417479",
    "end": "424259"
  },
  {
    "text": "that we also use them to connect things we also use them to do movement and of course connecting where we join and",
    "start": "424259",
    "end": "431039"
  },
  {
    "text": "fasten things together where we actually go ahead and schedule so as to provide some continuing service that is not how",
    "start": "431039",
    "end": "439680"
  },
  {
    "text": "computers are designed they're designed to be good computers they're designed to be good at math they're not actually",
    "start": "439680",
    "end": "446400"
  },
  {
    "text": "designed to be good connectors or movers and in fact we can go and look inside a",
    "start": "446400",
    "end": "451440"
  },
  {
    "text": "Data Center and we can break down what's inside of a data center in very very sort of simple",
    "start": "451440",
    "end": "456599"
  },
  {
    "text": "now we actually have computers connectors movers and stores those are currently the four types of devices you",
    "start": "456599",
    "end": "463259"
  },
  {
    "text": "have inside a data center you have a server that does Computing you have a thing that actually say connects those",
    "start": "463259",
    "end": "469440"
  },
  {
    "text": "things called a switch you might have an aggregate switch and then it connects to a router that moves packets around and",
    "start": "469440",
    "end": "476340"
  },
  {
    "text": "you might occasionally store stuff and the store stuff being that well storing things long term does not",
    "start": "476340",
    "end": "483660"
  },
  {
    "text": "require you to have a bunch of compute or memory or those types of things in it and that's two-thirds of the cost of the",
    "start": "483660",
    "end": "489720"
  },
  {
    "text": "box so why spend a bunch of money and so we really then just have computers movers connectors and stores",
    "start": "489720",
    "end": "497160"
  },
  {
    "text": "when we sort of look at what that base thing is and again the question becomes if we think of the world as just a world",
    "start": "497160",
    "end": "504240"
  },
  {
    "text": "of devices with the network as the back plane and we just have to do math store stuff connect things move things then",
    "start": "504240",
    "end": "512399"
  },
  {
    "text": "how would we go ahead and redesign operating systems and runtimes to do that well and how do we do that in a way",
    "start": "512399",
    "end": "518099"
  },
  {
    "text": "that sort of allows us to migrate from the sort of morass that we're in now",
    "start": "518099",
    "end": "525000"
  },
  {
    "text": "and again the crushing part of it is you know there's a",
    "start": "525000",
    "end": "531720"
  },
  {
    "text": "some trends that are popping up right so one of course is not only is everything becoming a web application as the base",
    "start": "531720",
    "end": "537660"
  },
  {
    "text": "transport mechanism but more people are using the web you know in 2001 there was what 200 300",
    "start": "537660",
    "end": "544140"
  },
  {
    "text": "million people using the internet and now there's uh nearly a billion people using just something like Facebook",
    "start": "544140",
    "end": "550980"
  },
  {
    "text": "and so the usage is significantly larger than it was a decade ago literally there's 10 times more people on the",
    "start": "550980",
    "end": "558120"
  },
  {
    "text": "internet today than there was a decade ago if you recall in say 2000 2001 what",
    "start": "558120",
    "end": "564180"
  },
  {
    "text": "a phone looked like it was not an iPhone we did not have iPads and now I myself I",
    "start": "564180",
    "end": "570000"
  },
  {
    "text": "mean I have three daughters and they're all of iPads and the 11 year old is an iPhone",
    "start": "570000",
    "end": "575100"
  },
  {
    "text": "and they all have these types of things like it we have TVs that have four chips",
    "start": "575100",
    "end": "580740"
  },
  {
    "text": "inside of them we have Blu-ray players in every room I mean the typical sort of crap and so everything really is",
    "start": "580740",
    "end": "587580"
  },
  {
    "text": "fundamentally becoming a web app and because we actually sit down and we",
    "start": "587580",
    "end": "592740"
  },
  {
    "text": "start thinking of it really as a world of devices network is the back plane the way that we've been writing applications",
    "start": "592740",
    "end": "598620"
  },
  {
    "text": "whether you realize it or not is changing we actually don't write client server applications from a decade or two",
    "start": "598620",
    "end": "605399"
  },
  {
    "text": "ago we actually write sort of soft real-time data synced peer type",
    "start": "605399",
    "end": "610800"
  },
  {
    "text": "applications we actually very often have say a server on a phone and a server in the back end and they're passing",
    "start": "610800",
    "end": "616680"
  },
  {
    "text": "messages between one another and then they're also interacting with say a local thing that you might call a client",
    "start": "616680",
    "end": "623100"
  },
  {
    "text": "and so what we're really sort of seeing is we're seeing really the sort of presence of soft real-time expectations",
    "start": "623100",
    "end": "629700"
  },
  {
    "text": "in an application that someone uses we're actually seeing that",
    "start": "629700",
    "end": "635880"
  },
  {
    "text": "the way that you write that is not traditional client server and if you look at just the limited ways that one",
    "start": "635880",
    "end": "641760"
  },
  {
    "text": "goes and does distributed concurrent systems anyway message passing is one of the types of",
    "start": "641760",
    "end": "648060"
  },
  {
    "text": "methods you use is one so it's already one in the switching space and some other aspects of it but",
    "start": "648060",
    "end": "655200"
  },
  {
    "text": "we still have these arguments now with servers where you're like well you know what we should do is we should infiniban a bunch of these up and create an",
    "start": "655200",
    "end": "661320"
  },
  {
    "text": "operating system that makes these five servers look like one big ass server and you have a lot of these types of things",
    "start": "661320",
    "end": "667200"
  },
  {
    "text": "around RPC and IPC and shared memory and so on like that when really what it is",
    "start": "667200",
    "end": "672360"
  },
  {
    "text": "is this message passing is one for doing these types of systems and it honestly reflects the way humans interact you",
    "start": "672360",
    "end": "679079"
  },
  {
    "text": "text message you leave a Post-It note you write little notes and so it turns out we're writing applications that way",
    "start": "679079",
    "end": "685579"
  },
  {
    "text": "the trend around big data is not big I mean myself coming from large-scale",
    "start": "685579",
    "end": "690660"
  },
  {
    "text": "scientific compute before I started doing you know data centers in this space",
    "start": "690660",
    "end": "695779"
  },
  {
    "text": "that's been Big Data forever I mean what we really have right now is an interest in going from user generated data to",
    "start": "695779",
    "end": "702660"
  },
  {
    "text": "machine data and we have an interest in real-time decision making from machine data or behavioral data that machines",
    "start": "702660",
    "end": "709079"
  },
  {
    "text": "look at about human activity that's the big data Trend but it really is a",
    "start": "709079",
    "end": "714300"
  },
  {
    "text": "real-time analytics type Trend much more so than the size of the data we've",
    "start": "714300",
    "end": "719459"
  },
  {
    "text": "already had telescopes in existence that could put on an exabyte a day meaning it would take them two weeks to",
    "start": "719459",
    "end": "725339"
  },
  {
    "text": "exhaust the Enterprise storage Market you know it's 2008 is where we crossed over to the point where if we lit up",
    "start": "725339",
    "end": "731160"
  },
  {
    "text": "every DNA sequence Center in the world we would exhaust the world's supply of hard drives that have ever been made in four days",
    "start": "731160",
    "end": "737339"
  },
  {
    "text": "and so we have big data in that sort of world that comes from nature but it's really real-time access and because we",
    "start": "737339",
    "end": "744120"
  },
  {
    "text": "have so many people typically now accessing these applications with mobile devices and what we actually see is we",
    "start": "744120",
    "end": "749700"
  },
  {
    "text": "see that applications are often becoming connection Limited connection limited right and so handling",
    "start": "749700",
    "end": "755760"
  },
  {
    "text": "a lot of connections doing a lot of sort of i o and of course you know sort of put this within sort of",
    "start": "755760",
    "end": "762360"
  },
  {
    "text": "context again which is where um you know we started working on node.js was to actually start working of",
    "start": "762360",
    "end": "769579"
  },
  {
    "text": "uh a data center as a device you know meaning how do I physically and",
    "start": "769579",
    "end": "774600"
  },
  {
    "text": "logically design a data center independent of knowing what I'm going to run in it and actually do this from a",
    "start": "774600",
    "end": "780000"
  },
  {
    "text": "very sort of traditional super computer type approach where you can actually take a very sort of traditional coupled",
    "start": "780000",
    "end": "786420"
  },
  {
    "text": "synchronous shared memory great at math type compute bound supercomputer and in",
    "start": "786420",
    "end": "792420"
  },
  {
    "text": "fact most of the world's problems are i o bound and so you actually need back-ends that do that well they're",
    "start": "792420",
    "end": "798600"
  },
  {
    "text": "decoupled asynchronous event-driven non-shared memory we're message passing is basically the sort of predominant way",
    "start": "798600",
    "end": "805880"
  },
  {
    "text": "and in fact if you decided that you were going to design such a thing it would look more like the back end of a sand",
    "start": "805880",
    "end": "811980"
  },
  {
    "text": "that say it natively runs compute on it and so node became very much the run",
    "start": "811980",
    "end": "817800"
  },
  {
    "text": "time that we were using as I'll show you in a minute for creating that sort of large machine to machine system across",
    "start": "817800",
    "end": "823980"
  },
  {
    "text": "many many sort of data centers and then of course as it started showing up on a lot of devices a few years ago",
    "start": "823980",
    "end": "830760"
  },
  {
    "text": "um you know the sort of end-to-end story got to be pretty well now a lot of this of course is doing",
    "start": "830760",
    "end": "836940"
  },
  {
    "text": "things well I want you to run my app well I want you",
    "start": "836940",
    "end": "842519"
  },
  {
    "text": "to keep my data well when I click click a button I want it to be fast I wanted to do things you know like that and so",
    "start": "842519",
    "end": "849660"
  },
  {
    "text": "from a base technology View again run applications well data centers a box",
    "start": "849660",
    "end": "856160"
  },
  {
    "text": "runtimes on devices flattens everything down a sort of one Dynamic language like",
    "start": "856160",
    "end": "861300"
  },
  {
    "text": "JavaScript you know typically a compiled language like C got a good markup language good presentation language",
    "start": "861300",
    "end": "867600"
  },
  {
    "text": "flatten everything out and then keep things simple you know really sort of go with one instruction set one transport",
    "start": "867600",
    "end": "874380"
  },
  {
    "text": "mechanism One messaging system one type of format and we really have now seen",
    "start": "874380",
    "end": "879839"
  },
  {
    "text": "applications emerge you know in this way and emerging this way in the sense that",
    "start": "879839",
    "end": "886339"
  },
  {
    "text": "people start caring about performance and scalability either resiliency and",
    "start": "886339",
    "end": "892019"
  },
  {
    "text": "reliability the application whether you can understand what it's doing in production is a secure you know what's",
    "start": "892019",
    "end": "898860"
  },
  {
    "text": "the sort of data Integrity like and is it actually elegant you know meaning as simple as possible to sort of access it",
    "start": "898860",
    "end": "906060"
  },
  {
    "text": "interact with it integrate with it interoperate with it versus a typical sort of just agility flexibility",
    "start": "906060",
    "end": "911639"
  },
  {
    "text": "backward compatibility don't want to upset the boss type way to write an application",
    "start": "911639",
    "end": "918120"
  },
  {
    "text": "um and so within that context then when we start sort of thinking of node.js node.js for a design point point of view",
    "start": "918120",
    "end": "925560"
  },
  {
    "text": "was we basically needed a framework to just quickly write servers in a dynamic language",
    "start": "925560",
    "end": "930779"
  },
  {
    "text": "so serve as a talk a specific protocol you know they function as API endpoints proxies with the policy load balancers",
    "start": "930779",
    "end": "937620"
  },
  {
    "text": "data Ingress Telemetry systems like that so no different than just a very traditional service oriented type",
    "start": "937620",
    "end": "943980"
  },
  {
    "text": "architecture where you can very quickly write services but you actually needed to write",
    "start": "943980",
    "end": "949380"
  },
  {
    "text": "services that were basically going to be lossless in terms of i o and we're connection intensive but they were not",
    "start": "949380",
    "end": "955139"
  },
  {
    "text": "meant to do math well and in fact from a design point of view one process One Core you know less than",
    "start": "955139",
    "end": "961860"
  },
  {
    "text": "one gig of RAM is actually QA to push line rate 10 gig and do a million",
    "start": "961860",
    "end": "967019"
  },
  {
    "text": "connected endpoints were about 25 percent of them are pushing traffic",
    "start": "967019",
    "end": "972480"
  },
  {
    "text": "what's the put within context is about you know 20 to 500 times more than what",
    "start": "972480",
    "end": "978060"
  },
  {
    "text": "a typical runtime whether it be Java or Ruby can typically handle you know in a",
    "start": "978060",
    "end": "984540"
  },
  {
    "text": "single process and even when you sort of take the memory footprint into account it becomes more pronounced",
    "start": "984540",
    "end": "991320"
  },
  {
    "text": "um and so it's even very normal for us to write 128 megabyte size node processes that will actually push",
    "start": "991320",
    "end": "998040"
  },
  {
    "text": "between 1 and 10 gigabits per second of traffic and have 200 000 connected endpoints on it",
    "start": "998040",
    "end": "1004040"
  },
  {
    "text": "128 Megs and so sitting down and thinking about you know how one sort of writes",
    "start": "1004040",
    "end": "1011360"
  },
  {
    "text": "applications like that which then made it very minimal for it to be on device too",
    "start": "1011360",
    "end": "1016940"
  },
  {
    "text": "and so we have things like it's showing up on the smart thermostats from you know Emerson power you know showing up",
    "start": "1016940",
    "end": "1023480"
  },
  {
    "text": "on you know now Windows mobile phones and it was in you know web OS which of",
    "start": "1023480",
    "end": "1028819"
  },
  {
    "text": "course at least conceptually has um you know the boot to gecko from a",
    "start": "1028819",
    "end": "1033918"
  },
  {
    "text": "from a philosophical point of view sort of overtaking that you know but for us again it was really",
    "start": "1033919",
    "end": "1039380"
  },
  {
    "text": "around well how do we do like a tremendous amount of data how do we actually do Telemetry systems you know",
    "start": "1039380",
    "end": "1044600"
  },
  {
    "text": "how do we begin to basically do things like um look at a whole lot of servers and",
    "start": "1044600",
    "end": "1050360"
  },
  {
    "text": "can you know connect a specific amount of data bring it back graph it in real time",
    "start": "1050360",
    "end": "1055580"
  },
  {
    "text": "so you know like not to go too much and say the details of this but you know this is a good illustration of what what",
    "start": "1055580",
    "end": "1062240"
  },
  {
    "text": "node was designed to do you know in that this is this is what's called a heat map",
    "start": "1062240",
    "end": "1067400"
  },
  {
    "text": "graph and so the y-axis is like latency the x-axis is time this is about 10",
    "start": "1067400",
    "end": "1073220"
  },
  {
    "text": "minutes you know the far right over there is right now and this is 10 minutes from now and this for example is",
    "start": "1073220",
    "end": "1079820"
  },
  {
    "text": "looking at you know about 300 database servers that were part of uh one one of",
    "start": "1079820",
    "end": "1085400"
  },
  {
    "text": "these uh large games we were running and there's about 1.8 billion data",
    "start": "1085400",
    "end": "1091820"
  },
  {
    "text": "points in this is in terms of what you see and every dot that you see is basically like a you know a you know a",
    "start": "1091820",
    "end": "1099460"
  },
  {
    "text": "MySQL Query latency so the actual time it took for a query to happen at a",
    "start": "1099460",
    "end": "1105020"
  },
  {
    "text": "specific point in time and you know you can see things like nothing happened here you have this whole group of",
    "start": "1105020",
    "end": "1110840"
  },
  {
    "text": "latencies there and then everything gets slower which is why this is going up and the whole system basically collapses on",
    "start": "1110840",
    "end": "1117200"
  },
  {
    "text": "itself this is a very normal sort of graph pattern for like congestive collapse",
    "start": "1117200",
    "end": "1123460"
  },
  {
    "text": "and you know the equivalent being you know walking down the street having a heart attack and the ER doctor was able",
    "start": "1123460",
    "end": "1130580"
  },
  {
    "text": "to see you know the 10 minutes of your EKG before you died there on the street right",
    "start": "1130580",
    "end": "1136100"
  },
  {
    "text": "um and so the ability to sort of write a little run time that goes and collects a bunch of data from a whole lot of devices and brings it back and graphs it",
    "start": "1136100",
    "end": "1142820"
  },
  {
    "text": "up was honestly what node was designed for the abilities sort of go and say you",
    "start": "1142820",
    "end": "1147980"
  },
  {
    "text": "know what's everything that's running on a server what's everything that's running in Iraq what's everything that's running and 48 racks",
    "start": "1147980",
    "end": "1154220"
  },
  {
    "text": "you know how do we sort of go and basically just write a very large scale Telemetry system and do that by even",
    "start": "1154220",
    "end": "1159500"
  },
  {
    "text": "sort of redoing the runtime now we open source it two and a half years ago it's MIT license which is",
    "start": "1159500",
    "end": "1166160"
  },
  {
    "text": "about as liberal as it is it's not a product of ours it will never be a product of ours we don't do a pass around it or something like that we just",
    "start": "1166160",
    "end": "1173120"
  },
  {
    "text": "happen to be the largest production user of it and in fact that tends to basically shape its use",
    "start": "1173120",
    "end": "1179480"
  },
  {
    "text": "now besides showing up in every mobile OS in existence and and and and more of those sort of coming out",
    "start": "1179480",
    "end": "1185780"
  },
  {
    "text": "it's of course a supported runtime like on Azure right so.net node.js and it's",
    "start": "1185780",
    "end": "1190820"
  },
  {
    "text": "it's actually deployed um you know the number two thereafter.net you know Paz is like",
    "start": "1190820",
    "end": "1197360"
  },
  {
    "text": "um uh Cloud Foundry from VMware node.js is is is also the second most popular runtime",
    "start": "1197360",
    "end": "1204380"
  },
  {
    "text": "there um and then we see a lot of interesting things you know like what was being done you know by the guys at eBay where it",
    "start": "1204380",
    "end": "1210919"
  },
  {
    "text": "was around you know how do we actually aggregate a lot of our API endpoints into new endpoints",
    "start": "1210919",
    "end": "1216500"
  },
  {
    "text": "um and create this whole sort of you know DSL around uh on these types of",
    "start": "1216500",
    "end": "1221720"
  },
  {
    "text": "things and that was all sort of done in node.js as well and that's a exactly the perfect type of use point you know how",
    "start": "1221720",
    "end": "1228799"
  },
  {
    "text": "do I basically write a service endpoint that Aggregates a bunch of other services and how do I potentially have the devices that I'm interacting with",
    "start": "1228799",
    "end": "1235220"
  },
  {
    "text": "also be those service endpoints um now the why JavaScript part became",
    "start": "1235220",
    "end": "1241580"
  },
  {
    "text": "pretty pretty simple I mean it's actually called node.js because there is a node part that I'll talk about in a",
    "start": "1241580",
    "end": "1247820"
  },
  {
    "text": "second and then there's the JS part and they are actually um you know largely independent of one",
    "start": "1247820",
    "end": "1253940"
  },
  {
    "text": "another even though conceptually more difficult to separate and that's really because",
    "start": "1253940",
    "end": "1260240"
  },
  {
    "text": "JavaScript happens to be an event driven language in uis uis are event driven",
    "start": "1260240",
    "end": "1266900"
  },
  {
    "text": "um and so one one way of thinking around at least philosophically note is just the UI way to do things on a server side",
    "start": "1266900",
    "end": "1275179"
  },
  {
    "text": "you know usually servers are not done in the event-driven non-blocking meant to",
    "start": "1275179",
    "end": "1280340"
  },
  {
    "text": "be instantly responsive you know type type way to do things it has a spec",
    "start": "1280340",
    "end": "1286820"
  },
  {
    "text": "um you know which um not a lot of languages do not all of them do and the specifications actually controlled by",
    "start": "1286820",
    "end": "1293299"
  },
  {
    "text": "the international standards body which is nice I mean if you take at least these two base criterias",
    "start": "1293299",
    "end": "1299299"
  },
  {
    "text": "um you know there's a recent one around Ruby I believe but the only thing that",
    "start": "1299299",
    "end": "1304400"
  },
  {
    "text": "typically falls out of these two um is things like C C sharp and JavaScript",
    "start": "1304400",
    "end": "1311360"
  },
  {
    "text": "um you know as far as the base spec and so what we see is we actually have seen in the marketplace",
    "start": "1311360",
    "end": "1316880"
  },
  {
    "text": "multiple implementations whether you're typically competing for performance and embeddability",
    "start": "1316880",
    "end": "1322640"
  },
  {
    "text": "um you know so Microsoft has multiple JavaScript VMS over time you have Trace monkeys spider monkey you know from",
    "start": "1322640",
    "end": "1329299"
  },
  {
    "text": "Mozilla you have V8 from Google you have a lot of these sort of you know great examples of a language runtime against a",
    "start": "1329299",
    "end": "1337280"
  },
  {
    "text": "spec open language and that's been a pretty good benefit now the added benefit of course is that",
    "start": "1337280",
    "end": "1344179"
  },
  {
    "text": "this now flattens the stack into HTML5 CSS JavaScript and say if you still want",
    "start": "1344179",
    "end": "1350240"
  },
  {
    "text": "to write in something like C it becomes or C plus plus it's pretty easy to do now if we look at the node.js part of",
    "start": "1350240",
    "end": "1356840"
  },
  {
    "text": "the implementations there's you know node that's under GitHub",
    "start": "1356840",
    "end": "1362500"
  },
  {
    "text": "the important Library part that is node is a thing called libuv and there's some add-ons like the parser",
    "start": "1362500",
    "end": "1370059"
  },
  {
    "text": "sum base instrumentation type things that we do like No d-trace And node panic",
    "start": "1370059",
    "end": "1375400"
  },
  {
    "text": "but the thing that was interesting around the libuv work you know was really around you know as",
    "start": "1375400",
    "end": "1381740"
  },
  {
    "text": "as Ryan's asserting here as it says Libby V is the world's best cross-platform networking Library",
    "start": "1381740",
    "end": "1387380"
  },
  {
    "text": "what we wanted to do within the node.js project was take the node part out and actually make it entirely cross-platform",
    "start": "1387380",
    "end": "1393620"
  },
  {
    "text": "and so you know we worked last year quite closely with Microsoft for the year to sort of sit down and say well",
    "start": "1393620",
    "end": "1398900"
  },
  {
    "text": "you know how is it how can we basically make it so that within the node part of node you know libuv is a C library",
    "start": "1398900",
    "end": "1406240"
  },
  {
    "text": "is you know always basically working on the constraint that if it's not in",
    "start": "1406240",
    "end": "1411440"
  },
  {
    "text": "Windows it doesn't go in if it's not in you know Unix 2 it doesn't go in but the only basic features that show up from uh",
    "start": "1411440",
    "end": "1419179"
  },
  {
    "text": "um you know I O abstraction point of view within node.js is ones that are actually present and can be present",
    "start": "1419179",
    "end": "1425240"
  },
  {
    "text": "across every operating system in existence because the goal really is in fact to",
    "start": "1425240",
    "end": "1431120"
  },
  {
    "text": "write an exceptional an application with an exceptionally small footprint that runs on every Os or device in existence",
    "start": "1431120",
    "end": "1436760"
  },
  {
    "text": "right to make something very sort of easy and so the lib UV Parts actually",
    "start": "1436760",
    "end": "1442480"
  },
  {
    "text": "if you like to geek out on run times it's a it's a pretty good one to look at and of course also sitting there on on",
    "start": "1442480",
    "end": "1450919"
  },
  {
    "text": "GitHub as well is a separate thing and so we see things like the love it guys you know taking libu V and combining it",
    "start": "1450919",
    "end": "1458000"
  },
  {
    "text": "with Lua as a language interpreter which you know in the node nomenclature if you will be node.lua you know if you wanted",
    "start": "1458000",
    "end": "1465140"
  },
  {
    "text": "to think of it that way but being able to take a C library like libuv combine it with any language interpreter that",
    "start": "1465140",
    "end": "1472280"
  },
  {
    "text": "you can basically combine it you know something that's either in C or C plus plus and give it the features of node is what",
    "start": "1472280",
    "end": "1479240"
  },
  {
    "text": "Libby V is for and also make it entirely cross-platform as a result of doing that",
    "start": "1479240",
    "end": "1484340"
  },
  {
    "text": "and so if you really begin to look at that work libuv coming out you know",
    "start": "1484340",
    "end": "1490580"
  },
  {
    "text": "which was part of dot six you know dot 8 coming out now really sort of progressing the 1.0",
    "start": "1490580",
    "end": "1497240"
  },
  {
    "text": "um you know node.js is it's actually done from uh",
    "start": "1497240",
    "end": "1502280"
  },
  {
    "text": "it's it's done I mean there's not too much to do to it anymore you know we're not adding",
    "start": "1502280",
    "end": "1508640"
  },
  {
    "text": "every thing under the sun do it it's it's meant to actually handle a lot of connections do a lot of i o",
    "start": "1508640",
    "end": "1515419"
  },
  {
    "text": "and so when we start thinking around that sort of basic idea that well the Run time's largely done",
    "start": "1515419",
    "end": "1521059"
  },
  {
    "text": "then it's really just around sort of handling two parts of the implementation",
    "start": "1521059",
    "end": "1526659"
  },
  {
    "text": "one is making sure that the actual module interface that you can go and write",
    "start": "1526659",
    "end": "1531980"
  },
  {
    "text": "a module for it is exceptionally clean standard and won't ever change",
    "start": "1531980",
    "end": "1538340"
  },
  {
    "text": "and the other one being that it actually is very easy to",
    "start": "1538340",
    "end": "1543860"
  },
  {
    "text": "instrument in production and so again if we think about you know just some simple examples of that little",
    "start": "1543860",
    "end": "1550400"
  },
  {
    "text": "slide we showed earlier if you're thinking around things like performance and scalability the way node",
    "start": "1550400",
    "end": "1557000"
  },
  {
    "text": "is right now is there's actually nothing left to do with node to make it better perform or scale",
    "start": "1557000",
    "end": "1564020"
  },
  {
    "text": "better most most of the times where it's breaking now is more like",
    "start": "1564020",
    "end": "1569240"
  },
  {
    "text": "you know the tcpip stack of the operating system is on can't handle as many connections",
    "start": "1569240",
    "end": "1574520"
  },
  {
    "text": "and so it tends to actually be operating system optimizations to drive the",
    "start": "1574520",
    "end": "1579860"
  },
  {
    "text": "performance and scale part of node and yes it's supposed to be a single process that runs on a single core and",
    "start": "1579860",
    "end": "1587240"
  },
  {
    "text": "that's the design it's also not going to be multi-threaded and anything else like that that lives",
    "start": "1587240",
    "end": "1592580"
  },
  {
    "text": "within a module if you care about that and so when you start thinking around the list of doing things well then most",
    "start": "1592580",
    "end": "1600260"
  },
  {
    "text": "of the efforts that we have remaining within node.js is really around",
    "start": "1600260",
    "end": "1605679"
  },
  {
    "text": "resiliency and reliability of running that in production and really around debugability and",
    "start": "1605679",
    "end": "1612260"
  },
  {
    "text": "understanding it in production that's actually where you can still do things within node",
    "start": "1612260",
    "end": "1618200"
  },
  {
    "text": "and so there's some unique things around node that we've done to to you know make",
    "start": "1618200",
    "end": "1623240"
  },
  {
    "text": "it good for that one it dumps like an operating system and so literally it's got a module named",
    "start": "1623240",
    "end": "1631940"
  },
  {
    "text": "node panic where this provides",
    "start": "1631940",
    "end": "1637179"
  },
  {
    "text": "post-mortem debugging of single failures and so you can sit down and you know be",
    "start": "1637179",
    "end": "1644539"
  },
  {
    "text": "running a thousand of these processes in production you have one of them that's sitting there at 99 utilization of a CPU",
    "start": "1644539",
    "end": "1651980"
  },
  {
    "text": "and you can literally go dump a full stack Trace out of that literally dump a",
    "start": "1651980",
    "end": "1657140"
  },
  {
    "text": "core file and restart that process pull that cord",
    "start": "1657140",
    "end": "1662360"
  },
  {
    "text": "dump out put it in a kernel debugger like MDB or GDB that has the module that",
    "start": "1662360",
    "end": "1669559"
  },
  {
    "text": "can read the dump and go and root cause that error and so",
    "start": "1669559",
    "end": "1676039"
  },
  {
    "text": "the ability to sort of do these one in a billion type bugs that you see and root",
    "start": "1676039",
    "end": "1681799"
  },
  {
    "text": "cause it without disruption means that you can look at a large production environment of this or you can look at a",
    "start": "1681799",
    "end": "1687320"
  },
  {
    "text": "large deployment across devices understand what the normal parameters of that application needs to be when it's",
    "start": "1687320",
    "end": "1693559"
  },
  {
    "text": "running and if it goes outside of that dump core restart the process as a",
    "start": "1693559",
    "end": "1699020"
  },
  {
    "text": "regular sort of way of doing things and then bringing those core dumps in and sort of regularly analyzing them and",
    "start": "1699020",
    "end": "1705020"
  },
  {
    "text": "seeing what comes out it'll really sort of allows you especially in a large production environment to really go",
    "start": "1705020",
    "end": "1710900"
  },
  {
    "text": "through and find these rare bugs that sometimes you know you know the typical things where every six months it pops up",
    "start": "1710900",
    "end": "1716960"
  },
  {
    "text": "you know and and and all these things are spinning out of control and you do the typical you know reboot reboot",
    "start": "1716960",
    "end": "1723980"
  },
  {
    "text": "button type type way of dealing things and so it actually has pretty tremendous post-mortem debugging and we actually do",
    "start": "1723980",
    "end": "1730820"
  },
  {
    "text": "a lot of work around postmortem debugging in Dynamic environments and publish various things in there if you",
    "start": "1730820",
    "end": "1738500"
  },
  {
    "text": "care about following the engineering lead that works on this aspect of node this is his blog",
    "start": "1738500",
    "end": "1745279"
  },
  {
    "text": "um his name's Dave and it's d-trace.org slash dap and it's got a lot of um you",
    "start": "1745279",
    "end": "1751580"
  },
  {
    "text": "know bass bass um you know sort of things that he does around managing a lot of node",
    "start": "1751580",
    "end": "1757460"
  },
  {
    "text": "dependencies when you deploy an application um how to actually do very good solid",
    "start": "1757460",
    "end": "1763279"
  },
  {
    "text": "node V8 postmortem debugging you know as a base capability you know where one can",
    "start": "1763279",
    "end": "1768919"
  },
  {
    "text": "really go through and do some very sort of interesting stack traces and then importantly one can actually go",
    "start": "1768919",
    "end": "1775220"
  },
  {
    "text": "through and ask um you know a very simple question that's normally",
    "start": "1775220",
    "end": "1782539"
  },
  {
    "text": "impossible to answer in a lot of other Dynamic language environments and that's like where's the program spending all of",
    "start": "1782539",
    "end": "1789440"
  },
  {
    "text": "its time because especially in something like node where it's a language interpreter and then it's a whole sort",
    "start": "1789440",
    "end": "1795380"
  },
  {
    "text": "of you know framework around you know handling all the sort of i o aspects the",
    "start": "1795380",
    "end": "1801140"
  },
  {
    "text": "ability to sort of you know literally Trace in and out of that and go across every layer and sit down and say you",
    "start": "1801140",
    "end": "1807799"
  },
  {
    "text": "know how long is something spent you know one can actually go through and well you can't see this here so I'll",
    "start": "1807799",
    "end": "1813919"
  },
  {
    "text": "show you a picture one can actually go through and say graph this into something that's called a flame graph",
    "start": "1813919",
    "end": "1820399"
  },
  {
    "text": "and so this is a way of visualizing where a you know an application spends",
    "start": "1820399",
    "end": "1827000"
  },
  {
    "text": "all of its time and so like this is just a very simple single node process that's responsible",
    "start": "1827000",
    "end": "1832039"
  },
  {
    "text": "for making an image data you know Json file comes in creates a PNG file spits a PNG file out that's",
    "start": "1832039",
    "end": "1838580"
  },
  {
    "text": "all it does and so you know the way that a flame graph works is the the bottom line is",
    "start": "1838580",
    "end": "1844760"
  },
  {
    "text": "the total amount of time you know like it takes a second for the process to do this and what it proceeds to then do is break",
    "start": "1844760",
    "end": "1851840"
  },
  {
    "text": "out every other possible part of the system and language interpreter and lines of code that it touches and",
    "start": "1851840",
    "end": "1858260"
  },
  {
    "text": "assigns you know of course a time to each of them and then that's how big the graph is right and so for example you",
    "start": "1858260",
    "end": "1865520"
  },
  {
    "text": "know it spins you know you know the equivalent to that amount of time you know executing things from you know line",
    "start": "1865520",
    "end": "1872559"
  },
  {
    "text": "4860 80 up um and you know lib PNG is up here lib Z is up there",
    "start": "1872559",
    "end": "1880779"
  },
  {
    "text": "and so one thing I think that's particularly interesting around",
    "start": "1880779",
    "end": "1885940"
  },
  {
    "text": "using node.js and these types of environments are using it as both an on-device",
    "start": "1885940",
    "end": "1892279"
  },
  {
    "text": "runtime and a data center you know back-end runtime is",
    "start": "1892279",
    "end": "1897640"
  },
  {
    "text": "we put a tremendous amount of effort a tremendous amount of effort uh in one making it as I was saying",
    "start": "1897640",
    "end": "1904399"
  },
  {
    "text": "earlier entirely cross-platform and then a tremendous amount of effort and just being able to answer two very",
    "start": "1904399",
    "end": "1910340"
  },
  {
    "text": "difficult to answer questions you know where's my application spending its time",
    "start": "1910340",
    "end": "1915620"
  },
  {
    "text": "and when I see something that's exceptionally rare as a defect can I go and root cause that having only",
    "start": "1915620",
    "end": "1922100"
  },
  {
    "text": "seen it once um you know and so that that being the",
    "start": "1922100",
    "end": "1927500"
  },
  {
    "text": "two issues and it's a bigger problem especially now if you're running a single process where",
    "start": "1927500",
    "end": "1933640"
  },
  {
    "text": "you've trusted it to handle a million connections because when the process poo-poos itself you just cut off a",
    "start": "1933640",
    "end": "1940159"
  },
  {
    "text": "million connections you know it's not spread across a thousand application servers right and so being able to do",
    "start": "1940159",
    "end": "1946820"
  },
  {
    "text": "that um and um you know that's that's largely node",
    "start": "1946820",
    "end": "1955419"
  }
]