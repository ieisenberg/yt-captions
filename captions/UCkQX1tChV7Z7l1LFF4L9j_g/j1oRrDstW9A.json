[
  {
    "text": "[Music]",
    "start": "680",
    "end": "8549"
  },
  {
    "text": "hello everybody welcome to techniques for maintainable quarkus applications i'm happy to be here today with you i'm",
    "start": "15120",
    "end": "20880"
  },
  {
    "text": "anna i'm a java champion and working as an architect in my day-to-day life i also like to share my experiences and",
    "start": "20880",
    "end": "26960"
  },
  {
    "text": "experiments at different conferences or within the bugresso for craftsmanship",
    "start": "26960",
    "end": "32078"
  },
  {
    "text": "community which i co-founded together with my dear friend victor renta in today's talk uh i'll showcase a few",
    "start": "32079",
    "end": "39440"
  },
  {
    "text": "techniques to write maintainable coder that can help you to write maintainable code the",
    "start": "39440",
    "end": "44559"
  },
  {
    "text": "reason being software maintain a software that is maintainable um can reduce not only a system's lifecycle",
    "start": "44559",
    "end": "51199"
  },
  {
    "text": "cost like is written in the slide but also can help and enhance the way your",
    "start": "51199",
    "end": "57120"
  },
  {
    "text": "your productivity is going on in your day-to-day life as a developer what i'm speaking about here is that maintainable",
    "start": "57120",
    "end": "62800"
  },
  {
    "text": "software um it means mainly that you are easily repairing something you're fixing",
    "start": "62800",
    "end": "69200"
  },
  {
    "text": "something but not only this you're also evolving what you have really written or what others have written in a very easy",
    "start": "69200",
    "end": "76159"
  },
  {
    "text": "manner you do not have to rewrite everything you are not afraid of of writing of",
    "start": "76159",
    "end": "81600"
  },
  {
    "text": "writing code in a specific part of your application so this is pretty much what maintainability is and since we have",
    "start": "81600",
    "end": "88240"
  },
  {
    "text": "just started the conversation about maintainability um one architecture that supports uh writing highly maintainable",
    "start": "88240",
    "end": "94880"
  },
  {
    "text": "software systems and and um is nowadays very much loved is the",
    "start": "94880",
    "end": "101200"
  },
  {
    "text": "microservices architecture the reason being that this type of distributed architecture allows you to work um in an",
    "start": "101200",
    "end": "109040"
  },
  {
    "text": "isolated mode at many applications that can be orchestrated in order to do what",
    "start": "109040",
    "end": "114159"
  },
  {
    "text": "your end users expect as functionalities from the system you're building and what i'm talking here is that",
    "start": "114159",
    "end": "120000"
  },
  {
    "text": "probably some of you already have worked with microservices and experienced that you can develop in",
    "start": "120000",
    "end": "126799"
  },
  {
    "text": "isolation that you do not care very much about or wait for dependency within other",
    "start": "126799",
    "end": "132879"
  },
  {
    "text": "applications to be ready in order to create your own and do development on your own application to fix your own",
    "start": "132879",
    "end": "138959"
  },
  {
    "text": "application and of course to deploy it so this kind of architecture that allows you to do your work um regardless of",
    "start": "138959",
    "end": "146239"
  },
  {
    "text": "what's going on around you and focus on that is a very good stimulant for you to write more maintainable code",
    "start": "146239",
    "end": "154000"
  },
  {
    "text": "and since we introduced microservices um of course when you're writing microservices you can choose different",
    "start": "154000",
    "end": "161040"
  },
  {
    "text": "languages but when you are looking to write microservices with java you have several options quarkus being one of",
    "start": "161040",
    "end": "167440"
  },
  {
    "text": "them quarkus is an open source kubernetes uh native uh java framework that is",
    "start": "167440",
    "end": "174640"
  },
  {
    "text": "tailored for crawl vm and um open jdk hotspot it has a few things that have drawn me",
    "start": "174640",
    "end": "181760"
  },
  {
    "text": "as a developer and i pretty much like the experience i had so far with quarkus because besides the unified",
    "start": "181760",
    "end": "187680"
  },
  {
    "text": "configuration that many other frameworks can come with i really like the fact that i have live",
    "start": "187680",
    "end": "192879"
  },
  {
    "text": "reload so i don't need to depend on a certain ide to write code and have this nice live reload with quarkus",
    "start": "192879",
    "end": "199840"
  },
  {
    "text": "uh secondly what i liked about quarkx is that um when working with persistence unit like working with uh with a",
    "start": "199840",
    "end": "205840"
  },
  {
    "text": "database and i'm having jpa or hibernate with that database i pretty much",
    "start": "205840",
    "end": "211280"
  },
  {
    "text": "have had panachi to help me writing and abstracting a few a few co a few",
    "start": "211280",
    "end": "216959"
  },
  {
    "text": "parts of the code for me so panache is coming on top of gpa and hibernate too to make repositories and to help me",
    "start": "216959",
    "end": "224159"
  },
  {
    "text": "working with these two in need and last but not least as i'm also coming from the spring gate the spring",
    "start": "224159",
    "end": "230959"
  },
  {
    "text": "world and i've worked with spring mvc i've worked with spring boot well quercus has spring api",
    "start": "230959",
    "end": "237280"
  },
  {
    "text": "compatibility so if you're used with spring and um you want to easily lean into and go into learning quarkus you",
    "start": "237280",
    "end": "244799"
  },
  {
    "text": "can do it um and you can combine both by using the spring api compatibility and",
    "start": "244799",
    "end": "250159"
  },
  {
    "text": "what quarkus brings to the to this to this union is the fact that you benefit",
    "start": "250159",
    "end": "255360"
  },
  {
    "text": "of early detection of dependency injection errors at compile time and not at run time when you're using both of",
    "start": "255360",
    "end": "261359"
  },
  {
    "text": "them so i hope that i'm giving you a few reasons why to why to use quercus you can ask many more reasons in the chat or",
    "start": "261359",
    "end": "268320"
  },
  {
    "text": "you can share your reasons in the chat why you like carcass or why you would be interested to work",
    "start": "268320",
    "end": "273759"
  },
  {
    "text": "with carcass um and moving forward uh in our um in",
    "start": "273759",
    "end": "278800"
  },
  {
    "text": "our inquisition today we are going to look at of course writing more maintainable code for an application and",
    "start": "278800",
    "end": "284880"
  },
  {
    "text": "the application that we're going to we're going to stick together today um is called stitching facts so the",
    "start": "284880",
    "end": "291360"
  },
  {
    "text": "stitching fact is a quarkus application and we want to write a more maintainable code and to enhance a",
    "start": "291360",
    "end": "297040"
  },
  {
    "text": "few things around stitching facts with stitching facts is of course is exposing an api for consuming i put here some",
    "start": "297040",
    "end": "304160"
  },
  {
    "text": "some folks and some end users but you can think of like stitching facts correlated to some other",
    "start": "304160",
    "end": "310400"
  },
  {
    "text": "applications as well and the facts that are being stitched within it are being consumed from a cat facts",
    "start": "310400",
    "end": "316960"
  },
  {
    "text": "api that's maintained separately from my system it's not under my control um and i'm just",
    "start": "316960",
    "end": "323600"
  },
  {
    "text": "consuming some information from there that i need to manipulate a little bit more for my end users to receive them",
    "start": "323600",
    "end": "329039"
  },
  {
    "text": "and to to read them or for other applications to consume and sometimes when i'm interacting with",
    "start": "329039",
    "end": "335759"
  },
  {
    "text": "this cat facts api i want to keep a few things from it and i've used the stitchy the postgres",
    "start": "335759",
    "end": "342320"
  },
  {
    "text": "sql database to keep the things that i'm interested to to keep from the cat facts api in my own persistence unit so that i",
    "start": "342320",
    "end": "349520"
  },
  {
    "text": "don't go every time to the cat facts api and just you know",
    "start": "349520",
    "end": "355120"
  },
  {
    "text": "do some round trips that kind of um you know cost me um in duration of the requests",
    "start": "355120",
    "end": "361280"
  },
  {
    "text": "and those being said let's go to the to the ide and then do some coding",
    "start": "361280",
    "end": "366960"
  },
  {
    "text": "before uh you know spending a lot of time here just to gonna give you a brief overview",
    "start": "366960",
    "end": "373440"
  },
  {
    "text": "that uh when working with quarkus uh you can start working with quarkx and generate your own quarkx application at",
    "start": "373440",
    "end": "379120"
  },
  {
    "text": "code.quarkus.io and you can choose whatever um",
    "start": "379120",
    "end": "384880"
  },
  {
    "text": "extensions you like so today my application has some code that was generated with",
    "start": "384880",
    "end": "390080"
  },
  {
    "text": "these extensions and we're going to enhance on it so because",
    "start": "390080",
    "end": "395919"
  },
  {
    "text": "i was the name of my talk is we're writing maintainable applications and the expectations that something is already written there",
    "start": "395919",
    "end": "402720"
  },
  {
    "text": "so let's go a little bit to the ide now the um stitching facts app",
    "start": "402720",
    "end": "409280"
  },
  {
    "text": "it has a few a few uh a few details that i want to bring to your attention so first of all like",
    "start": "409280",
    "end": "415840"
  },
  {
    "text": "any quercus app that you're going to generate with some boilerplate code it has a",
    "start": "415840",
    "end": "421199"
  },
  {
    "text": "generated endpoint but in my case i have refactored it a bit it's called facts endpoint and it's actually it's going to",
    "start": "421199",
    "end": "427919"
  },
  {
    "text": "be the one that's going to expose the my created api to the end users or to other applications for consumptions",
    "start": "427919",
    "end": "433840"
  },
  {
    "text": "um it has application of properties where the unified configuration is staying on for how and i'm keeping some",
    "start": "433840",
    "end": "440080"
  },
  {
    "text": "configs for my app and of course some tests so there comes there are some tests that come by",
    "start": "440080",
    "end": "446400"
  },
  {
    "text": "default when you're generating your carcass code but you can also make your own tests based on that so we have some",
    "start": "446400",
    "end": "452160"
  },
  {
    "text": "already written code with quarkus and the first place we're going to stop is the application.properties",
    "start": "452160",
    "end": "458479"
  },
  {
    "text": "as you can see here in application.properties there are some global global details that i established for my",
    "start": "458479",
    "end": "464800"
  },
  {
    "text": "app so one of these global details uh besides the console log format so how i'm going to log my output to the",
    "start": "464800",
    "end": "472240"
  },
  {
    "text": "to the console like here um is the fact that i have also defined uh",
    "start": "472240",
    "end": "478240"
  },
  {
    "text": "the cat facts api that i'm going to consume so what i'm expecting here and what is going on here is that i have to",
    "start": "478240",
    "end": "484240"
  },
  {
    "text": "find that my cat facts api that is available at this url is going to be consumed from this url",
    "start": "484240",
    "end": "489759"
  },
  {
    "text": "but is connected inside my application code my java code um as a rest client to the fact service",
    "start": "489759",
    "end": "497360"
  },
  {
    "text": "interface so i've connected with a single line the fact that i'm consuming from this url",
    "start": "497360",
    "end": "503199"
  },
  {
    "text": "in my own application via the service interface and the fact service interface is the one here i just registered it as",
    "start": "503199",
    "end": "509840"
  },
  {
    "text": "a as a rest client and pretty much when i'm consuming the service um i am just using and injecting",
    "start": "509840",
    "end": "517599"
  },
  {
    "text": "this um this interface in my code so nothing more no more troubles and of",
    "start": "517599",
    "end": "523120"
  },
  {
    "text": "course there are some elegance in this approach because i don't have to uh you know define another variable for the for",
    "start": "523120",
    "end": "529920"
  },
  {
    "text": "the url or anything else the mapping between the two is happening in the",
    "start": "529920",
    "end": "535200"
  },
  {
    "text": "application of properties and looking a little bit down um i'm working in my local right now so i have",
    "start": "535200",
    "end": "541360"
  },
  {
    "text": "connected a localhost postgresql database which is running of course and on five four three",
    "start": "541360",
    "end": "548560"
  },
  {
    "text": "two my stitchy local database um i have some script uh and i'm i'm",
    "start": "548560",
    "end": "554000"
  },
  {
    "text": "pretty much uh interested in in in working on local now if i'm keeping this kind of information what this means is",
    "start": "554000",
    "end": "560240"
  },
  {
    "text": "that um i'm always going to see a lot of logs so whenever my application is going",
    "start": "560240",
    "end": "566080"
  },
  {
    "text": "to run somewhere else not only on local i'm going to get a lot of logs and a lot of log information is not useful to",
    "start": "566080",
    "end": "572880"
  },
  {
    "text": "everybody in a project so you're probably working in a team and you know that um if you get too much info from",
    "start": "572880",
    "end": "579760"
  },
  {
    "text": "your coming from your one application not to mention if you're working in a microservices environment that and you are kind of keeping an eye on many more",
    "start": "579760",
    "end": "586880"
  },
  {
    "text": "is kind of annoying and um also from devops point of view you kind of get too",
    "start": "586880",
    "end": "592399"
  },
  {
    "text": "much information from your app and what you can do is that you can calm the noisy loggers uh with a few things",
    "start": "592399",
    "end": "599200"
  },
  {
    "text": "first of all the quercus logo live live set it like the global one that to finest which is a good idea if you",
    "start": "599200",
    "end": "605600"
  },
  {
    "text": "really want to get a lot of information but typically um you're not interested to get so many information so for",
    "start": "605600",
    "end": "611519"
  },
  {
    "text": "example this one on finance that says query executive implementation va parse complete null this kind of information",
    "start": "611519",
    "end": "617040"
  },
  {
    "text": "did not help me that much so i pretty much gonna change this one to info and third or more i'm interested to you",
    "start": "617040",
    "end": "623760"
  },
  {
    "text": "know see how my app is behaving but my app i'm interested to know a little bit more so info is not gonna help me most",
    "start": "623760",
    "end": "629680"
  },
  {
    "text": "of the time and i would advise you not to lie right um not to log on info or on",
    "start": "629680",
    "end": "635440"
  },
  {
    "text": "error unless there is something that would benefit to be there in your log files i would advise to use debug most",
    "start": "635440",
    "end": "642640"
  },
  {
    "text": "of the time when you want to put some some places that can give you information about what's going on with",
    "start": "642640",
    "end": "647839"
  },
  {
    "text": "your app um and if you're working on your local you can also use trace but please be aware that the colleague that",
    "start": "647839",
    "end": "652959"
  },
  {
    "text": "might use this kind of configuration might be bothered when when going further and yeah this is for calming the noisy",
    "start": "652959",
    "end": "659839"
  },
  {
    "text": "loggers but i don't want to calm the noisy loggers global so if i want to have some differences in the profiles of my app i can use",
    "start": "659839",
    "end": "666000"
  },
  {
    "text": "the profile dev for my local and just tailor this configuration",
    "start": "666000",
    "end": "671920"
  },
  {
    "text": "to be happening only for dev so that um i'm not you know disturbing the",
    "start": "671920",
    "end": "677680"
  },
  {
    "text": "production mode of the app so whenever somebody is getting this on their local they're gonna experience the same",
    "start": "677680",
    "end": "684240"
  },
  {
    "text": "goodies that i've experienced earlier um let me remove this guy here because i am",
    "start": "684240",
    "end": "689839"
  },
  {
    "text": "not interested to see much information now when you're looking to production production has a similar um let me just",
    "start": "689839",
    "end": "696160"
  },
  {
    "text": "move this a little bit lower production has a similar view as as dev with the difference that i am introducing some",
    "start": "696160",
    "end": "703680"
  },
  {
    "text": "variables here because i don't know the username and the password for production database and i shouldn't care about it",
    "start": "703680",
    "end": "710320"
  },
  {
    "text": "um and for my logs um one thing that i did was actually to introduce some variables for it as well the reason",
    "start": "710320",
    "end": "716480"
  },
  {
    "text": "being it's much more easier for you to control the log level from the uh from the pipeline from the",
    "start": "716480",
    "end": "722639"
  },
  {
    "text": "environment and expect for that information to come from the environment and not being you know hard coded in",
    "start": "722639",
    "end": "727839"
  },
  {
    "text": "your app then actually part coding a value for an app however if you're worried that this",
    "start": "727839",
    "end": "733360"
  },
  {
    "text": "might not be defined at the level of your pipeline it can happen and you won't don't want to break things a good practice is to",
    "start": "733360",
    "end": "739519"
  },
  {
    "text": "define a default value so that's why we have this here this info is given as default value so i put them on default",
    "start": "739519",
    "end": "748160"
  },
  {
    "text": "and looking at the test part well test is pretty much similar with the other ones but when i'm testing i can i",
    "start": "748160",
    "end": "754560"
  },
  {
    "text": "wouldn't like to use a postgresql database because that would introduce a dependency like always we need to have a",
    "start": "754560",
    "end": "760240"
  },
  {
    "text": "postgresql database somewhere available and that is a little bit um i don't know",
    "start": "760240",
    "end": "765440"
  },
  {
    "text": "resource consuming and um is also troubling you like hey if the database",
    "start": "765440",
    "end": "770720"
  },
  {
    "text": "is changing i don't know it's host name it's changing its user so it's introducing a dependency that um you",
    "start": "770720",
    "end": "776240"
  },
  {
    "text": "shouldn't be worried about when you're building an application what i did here i'm using an in-memory database",
    "start": "776240",
    "end": "782880"
  },
  {
    "text": "and this is pretty much why i have created different sql load scripts because um for my for my application i",
    "start": "782880",
    "end": "790480"
  },
  {
    "text": "had to define primary key generation differently since the memory database has",
    "start": "790480",
    "end": "796000"
  },
  {
    "text": "a different way of handling primary keys from positive sql database and pretty much the rest is the same and",
    "start": "796000",
    "end": "803440"
  },
  {
    "text": "i'm just using information that are you know very useful for testing purposes",
    "start": "803440",
    "end": "810399"
  },
  {
    "text": "that's pretty much what the application properties and how you can tailor using profiles and using log categories um the",
    "start": "810399",
    "end": "817760"
  },
  {
    "text": "noisy loggers let's move to our to our next step to to our app so in our application uh when",
    "start": "817760",
    "end": "824320"
  },
  {
    "text": "you are writing end points for consumption",
    "start": "824320",
    "end": "829760"
  },
  {
    "text": "uh one thing that you are thinking about as a developer um when you are creating microservices",
    "start": "829760",
    "end": "835600"
  },
  {
    "text": "should it be asynchronous or synchronous so in order to help you decide and have a good decision around that which should",
    "start": "835600",
    "end": "842240"
  },
  {
    "text": "be synchronous or asynchronous what i've done here i've created an as a synchronous version of an fn endpoint",
    "start": "842240",
    "end": "848959"
  },
  {
    "text": "and the asynchronous one for the same endpoint so they consume the same uh the same fact service so the same um fact",
    "start": "848959",
    "end": "856560"
  },
  {
    "text": "service endpoint the one from the cat's facts api but the difference is that one serves a synchronous and what the other",
    "start": "856560",
    "end": "862959"
  },
  {
    "text": "one serves as synchronous and i want to assess how these two are going so which one is better and which one to keep and",
    "start": "862959",
    "end": "870320"
  },
  {
    "text": "i'm going to compare their response times and my my bold assumption is that um synchronous",
    "start": "870320",
    "end": "876800"
  },
  {
    "text": "time is three times bigger than the asynchronous one so let's do some tests around that so first of all i need to",
    "start": "876800",
    "end": "883040"
  },
  {
    "text": "establish a few things um like creating something that would help",
    "start": "883040",
    "end": "888079"
  },
  {
    "text": "me to measure the times and i'm using a micrometer timer that will measure the synchronous requests",
    "start": "888079",
    "end": "894079"
  },
  {
    "text": "and then i'll go with a micrometer timer for the asynchronous request i'm just",
    "start": "894079",
    "end": "899279"
  },
  {
    "text": "changing a few things here um and i'm going to say",
    "start": "899279",
    "end": "906160"
  },
  {
    "text": "when so when do some five requests to the synchronous endpoint measure that and",
    "start": "906160",
    "end": "913040"
  },
  {
    "text": "i'm gonna do the same thing for my asynchronous request",
    "start": "913040",
    "end": "918079"
  },
  {
    "text": "and measure that it's pretty much that and just run the unit test now now while this is running",
    "start": "918079",
    "end": "923760"
  },
  {
    "text": "in the background and the expectation is that synchronous time is going to be bigger than the asynchronous one",
    "start": "923760",
    "end": "928880"
  },
  {
    "text": "uh we're going to move to the next uh part of of the of the this this session",
    "start": "928880",
    "end": "934880"
  },
  {
    "text": "um looking about how you could uh improve you the what's going on with your",
    "start": "934880",
    "end": "940160"
  },
  {
    "text": "application with caching so when working and consuming the fact service endpoint for him here one",
    "start": "940160",
    "end": "946240"
  },
  {
    "text": "endpoint the fact id one i thought that it would be better if i'm caching the facts uh by id so what i did",
    "start": "946240",
    "end": "954800"
  },
  {
    "text": "and by the way in the meantime the compare response times has executed and of course synchronous time is bigger",
    "start": "954800",
    "end": "960399"
  },
  {
    "text": "than the asynchronous one what i did here i annotated with cache result",
    "start": "960399",
    "end": "966480"
  },
  {
    "text": "my my method so i'm caching the results of the cat fact by id asynchronously",
    "start": "966480",
    "end": "972399"
  },
  {
    "text": "using the cache uh the cache key for fact id so i'm using this cache to like",
    "start": "972399",
    "end": "977680"
  },
  {
    "text": "not all the time when my users are asking information about related to fact ids um at a certain endpoint so for",
    "start": "977680",
    "end": "983279"
  },
  {
    "text": "example uh i have information about fact ids here um",
    "start": "983279",
    "end": "988639"
  },
  {
    "text": "this one uh here as i'm asking information about my fact ideas and randomness i'm not all",
    "start": "988639",
    "end": "995680"
  },
  {
    "text": "the time you know reaching the end point i'm just probably needing to query the cash if something is really cash there",
    "start": "995680",
    "end": "1002560"
  },
  {
    "text": "um and i've defined my cash now any good cash definition it also requires uh some",
    "start": "1002560",
    "end": "1009519"
  },
  {
    "text": "more um information like initial um size capacity so for example for this one i defined",
    "start": "1009519",
    "end": "1016160"
  },
  {
    "text": "the initial size capacity of 10 let me just change the name because this is not the right name for the cache it's animal",
    "start": "1016160",
    "end": "1022720"
  },
  {
    "text": "factor sync and the maximum size of 20 and the expire after right so the time that the",
    "start": "1022720",
    "end": "1028798"
  },
  {
    "text": "cash is going to expire to 60 seconds now um and one thing that you should be",
    "start": "1028799",
    "end": "1034079"
  },
  {
    "text": "aware of when using cash is like they're not fully uh used or they are not full or idea that you're um you know",
    "start": "1034079",
    "end": "1041038"
  },
  {
    "text": "introducing some memory leaks with your cache so let's test the performance of our cache um",
    "start": "1041039",
    "end": "1047038"
  },
  {
    "text": "by using a gauge so another another micrometer uh micrometer",
    "start": "1047039",
    "end": "1052880"
  },
  {
    "text": "measurement gauge to see how our cache is behaving we're going to assess the cache size",
    "start": "1052880",
    "end": "1058240"
  },
  {
    "text": "i'm going to first retrieve um the cache and uh define the gauge uh",
    "start": "1058240",
    "end": "1064320"
  },
  {
    "text": "with uh with its um uh with its uh with its details and then",
    "start": "1064320",
    "end": "1070160"
  },
  {
    "text": "i am going to um execute some tests so i'm gonna use five requests to be",
    "start": "1070160",
    "end": "1075919"
  },
  {
    "text": "executed against um against the fact and point and see how the cash is",
    "start": "1075919",
    "end": "1081600"
  },
  {
    "text": "behaving from fact service and i have here um",
    "start": "1081600",
    "end": "1087120"
  },
  {
    "text": "what i need to measure how many um how many cash facts i'm expecting regardless that",
    "start": "1087120",
    "end": "1092320"
  },
  {
    "text": "these are five time vacations by the way so i have one fact id this is the same fact id here",
    "start": "1092320",
    "end": "1098480"
  },
  {
    "text": "two facts ids three facts ids so my expectations that when i'm measuring it this is that i am going to have three",
    "start": "1098480",
    "end": "1105360"
  },
  {
    "text": "facts that are going to be measured by my gosh so let's run the unit test again",
    "start": "1105360",
    "end": "1114240"
  },
  {
    "text": "and see how this is behaving for the cache um this is one one good approach when",
    "start": "1115280",
    "end": "1120720"
  },
  {
    "text": "measuring caches another approach that i want to showcase to you is like looking",
    "start": "1120720",
    "end": "1125840"
  },
  {
    "text": "how the distribution of events and how your endpoints are behaving um especially um",
    "start": "1125840",
    "end": "1132320"
  },
  {
    "text": "especially when you are having like an intensive load of work and intensive work with them and you're working with a",
    "start": "1132320",
    "end": "1137360"
  },
  {
    "text": "lot of data so speaking of a lot of data when you're working with a lot of amount of data or you want to work with things",
    "start": "1137360",
    "end": "1144080"
  },
  {
    "text": "that um are in preparation or you're expecting a few things to be to be defined in",
    "start": "1144080",
    "end": "1149200"
  },
  {
    "text": "preparation i prefer to use a graphql so pretty much i like graphql for",
    "start": "1149200",
    "end": "1155600"
  },
  {
    "text": "orchestration uh within the mic between the microservices because you can define schemas and you can work with those",
    "start": "1155600",
    "end": "1161039"
  },
  {
    "text": "schemas and you can define a lot um a lot of um a lot more easier integration",
    "start": "1161039",
    "end": "1167360"
  },
  {
    "text": "points um between yourselves and maybe some front-end applications",
    "start": "1167360",
    "end": "1172880"
  },
  {
    "text": "and there are many more benefits of graphql that i like you can ask me in the chat by the way about them um so i",
    "start": "1172880",
    "end": "1179120"
  },
  {
    "text": "defined my api my effects endpoint uh in api as a graphql api and this is why you",
    "start": "1179120",
    "end": "1184799"
  },
  {
    "text": "see query above all these um now looking at this api i just want to make sure that this api is um",
    "start": "1184799",
    "end": "1192960"
  },
  {
    "text": "you know working properly when it's working with fact service api so what i did was actually i wanted to assess a",
    "start": "1192960",
    "end": "1199039"
  },
  {
    "text": "few things regarding my integration with fact service api so i want to see how the distribution of events is um",
    "start": "1199039",
    "end": "1206640"
  },
  {
    "text": "going on uh when i'm working with fact service and integration so i'm assessing",
    "start": "1206640",
    "end": "1212320"
  },
  {
    "text": "a little bit the fact service and it's good sometimes to do this kind of assessments when you're consuming a third party a third party because you",
    "start": "1212320",
    "end": "1219679"
  },
  {
    "text": "kind of can see what is not behaving as expecting and you can avoid uh some unexpected",
    "start": "1219679",
    "end": "1225919"
  },
  {
    "text": "situations or some downtimes so i'm gonna say given uh the",
    "start": "1225919",
    "end": "1231520"
  },
  {
    "text": "metric registry i'm gonna you know register um distribution summary for these",
    "start": "1231520",
    "end": "1237200"
  },
  {
    "text": "i'm gonna you know see the distribution of events against this um the facts the",
    "start": "1237200",
    "end": "1242400"
  },
  {
    "text": "invocation of get by type a sync from fact service and then i am going to",
    "start": "1242400",
    "end": "1248720"
  },
  {
    "text": "record a hundred times this size so i'm gonna simulate like okay they're gonna be a hundred time invocations but the",
    "start": "1248720",
    "end": "1255200"
  },
  {
    "text": "response is gonna be size all the time and i'm gonna record also an outlier size for uh for this one so this is",
    "start": "1255200",
    "end": "1262320"
  },
  {
    "text": "going to be like a random number chosen from there and my expectation is that i have 101",
    "start": "1262320",
    "end": "1269919"
  },
  {
    "text": "invocations like a hundred plus one and uh the distribution summary the",
    "start": "1269919",
    "end": "1275039"
  },
  {
    "text": "total amount of the distribution of events is this 100 on this size plus one or the",
    "start": "1275039",
    "end": "1281200"
  },
  {
    "text": "outlier size and i'm just going to run this one um and see how how this if",
    "start": "1281200",
    "end": "1286240"
  },
  {
    "text": "these measurements were captured correctly another measurement you can do is you can use the percentiles to measure",
    "start": "1286240",
    "end": "1294240"
  },
  {
    "text": "how things are behaving with um your um with your um",
    "start": "1294240",
    "end": "1300720"
  },
  {
    "text": "with your app and you can have some percentiles and see how your app is behaving to certain points now this test is similar to the one",
    "start": "1300720",
    "end": "1307280"
  },
  {
    "text": "above the difference is that i'm using the distribution summary uh with percentiles um and prometheus registry",
    "start": "1307280",
    "end": "1314320"
  },
  {
    "text": "um and i am measuring um the percent of what's going on here same with an outlier size",
    "start": "1314320",
    "end": "1321600"
  },
  {
    "text": "so i'm recording a hundred facts with the some same size and an outlier size",
    "start": "1321600",
    "end": "1326799"
  },
  {
    "text": "but i have also want to um assess how it's going on with the percentile so",
    "start": "1326799",
    "end": "1332640"
  },
  {
    "text": "my expectation is one in this case that the result is containing the 99 at 99 of",
    "start": "1332640",
    "end": "1338559"
  },
  {
    "text": "the outlier size and i can do that by taking a snapshot obtaining the percentile values and mapping them and",
    "start": "1338559",
    "end": "1344480"
  },
  {
    "text": "inspecting them and for later and for better um for a better view",
    "start": "1344480",
    "end": "1349760"
  },
  {
    "text": "besides measuring the and tailoring the endpoints response time with these kind of",
    "start": "1349760",
    "end": "1356000"
  },
  {
    "text": "of metrics another thing that i want to bring to your attention is that sometimes when",
    "start": "1356000",
    "end": "1361360"
  },
  {
    "text": "you're working within your application you realize that at the beginning of your app you want to",
    "start": "1361360",
    "end": "1367440"
  },
  {
    "text": "make sure that you are preparing something in your database or you are prepending surprise something before",
    "start": "1367440",
    "end": "1373360"
  },
  {
    "text": "everything starts and works and one thing you can do this it can define a class that's annotated with that startup",
    "start": "1373360",
    "end": "1379600"
  },
  {
    "text": "it actually is going to do some work before the other things in your app are going to be invoked so it's like prepare",
    "start": "1379600",
    "end": "1385919"
  },
  {
    "text": "some data and this is what i'm doing here as well so i prepared some data i'm getting some facts uh initial capacity",
    "start": "1385919",
    "end": "1393280"
  },
  {
    "text": "to some value and i'm storing that in my database and let me inject um inject",
    "start": "1393280",
    "end": "1399440"
  },
  {
    "text": "this uh two missing services here so first of all i'm just gonna inject",
    "start": "1399440",
    "end": "1405520"
  },
  {
    "text": "come on enhanced",
    "start": "1405520",
    "end": "1410840"
  },
  {
    "text": "and let me just get the name from here and",
    "start": "1417120",
    "end": "1422880"
  },
  {
    "text": "i'm just gonna copy paste effect service",
    "start": "1423200",
    "end": "1430840"
  },
  {
    "text": "fact service and do this now i'm going to look into my",
    "start": "1430960",
    "end": "1436120"
  },
  {
    "text": "application.properties the initial capacity varies so this is for dev is a hundred for a period capacity for is 500 that",
    "start": "1436120",
    "end": "1444000"
  },
  {
    "text": "takes a lot of time now think about tests on tests i don't need that much capacity and one approach is like you",
    "start": "1444000",
    "end": "1449840"
  },
  {
    "text": "set the initial capacity to 10 so it doesn't execute like when you're loading the entire context you don't execute them like so many times",
    "start": "1449840",
    "end": "1456640"
  },
  {
    "text": "but another approach if you don't want this to be executed with certain profiles is to use if build profile",
    "start": "1456640",
    "end": "1463200"
  },
  {
    "text": "annotation so if build profile is different from test this is not going to be taken into",
    "start": "1463200",
    "end": "1469520"
  },
  {
    "text": "account well let's go back to the presentation and do some summary of what we talked",
    "start": "1469520",
    "end": "1475440"
  },
  {
    "text": "today so some takeaways is that you can refine your log details per application profile and per package need",
    "start": "1475440",
    "end": "1481679"
  },
  {
    "text": "um you can validate performance of your endpoints and you can see the capacity of your caches using timer gauge or you",
    "start": "1481679",
    "end": "1488720"
  },
  {
    "text": "can control your endpoint response time with distribution summaries and histograms if you want to inhibit you know",
    "start": "1488720",
    "end": "1494320"
  },
  {
    "text": "execution of certain long-running endpoints that are not needed in certain application profiles you can use it",
    "start": "1494320",
    "end": "1499679"
  },
  {
    "text": "build profile and this is a personal choice you can listen to it or just ignore it um you",
    "start": "1499679",
    "end": "1505840"
  },
  {
    "text": "can generate a graphql schema for each of your microservices and use the schemas teaching for further client consumption",
    "start": "1505840",
    "end": "1511840"
  },
  {
    "text": "thank you very much for listening to me the code is made available at my github account and try to go and and",
    "start": "1511840",
    "end": "1519039"
  },
  {
    "text": "see that one and get the code from there and i'm expecting your questions in the chat of course and um hopefully we're",
    "start": "1519039",
    "end": "1525919"
  },
  {
    "text": "going to have a pleasant conversation during the entire the entire",
    "start": "1525919",
    "end": "1532880"
  },
  {
    "text": "conference thank you see you soon",
    "start": "1533600",
    "end": "1538799"
  },
  {
    "text": "hi anna hi um i'm fine i'm fine um",
    "start": "1540720",
    "end": "1546640"
  },
  {
    "text": "wow i'd like to say that there are a lot of questions in the chat uh the first one that i want to answer",
    "start": "1546640",
    "end": "1553120"
  },
  {
    "text": "is yes the project is available on github is shared at the end of the presentation and i'm sure the organizers",
    "start": "1553120",
    "end": "1559279"
  },
  {
    "text": "will share all the contents here there's also slack that i joined so",
    "start": "1559279",
    "end": "1564960"
  },
  {
    "text": "there will be shared so there's no problem in not not sharing the contents um",
    "start": "1564960",
    "end": "1570480"
  },
  {
    "text": "i'm happy to be here with you and looking forward to answer the questions from the chat and your",
    "start": "1570480",
    "end": "1575760"
  },
  {
    "text": "questions michelle and many more questions that come yes yes let's wait for the question but",
    "start": "1575760",
    "end": "1581200"
  },
  {
    "text": "yes one of it was like are you going to share the code because it it's so concise i love that when you were",
    "start": "1581200",
    "end": "1587840"
  },
  {
    "text": "explaining and everything was very clear and that's something i also like about",
    "start": "1587840",
    "end": "1592960"
  },
  {
    "text": "quarkx it allows a lot of functionality in a very small space so i think it's",
    "start": "1592960",
    "end": "1599840"
  },
  {
    "text": "it's it's really nice for for applications so um",
    "start": "1599840",
    "end": "1606158"
  },
  {
    "text": "yeah so i really like quercus as well for many many reasons",
    "start": "1606799",
    "end": "1611919"
  },
  {
    "text": "and i'm happy to see that as evolving and um when you answer to the question regarding uh what's available there in",
    "start": "1611919",
    "end": "1618400"
  },
  {
    "text": "terms of working with databases like templates for working with database basis uh with caches the messaging there",
    "start": "1618400",
    "end": "1624960"
  },
  {
    "text": "are a lot of extensions available there and actually the way i'm looking at i'm like keeping an eye on the code.carcass.io",
    "start": "1624960",
    "end": "1632720"
  },
  {
    "text": "and afterwards i'm searching for the guide that is available like i'm thinking",
    "start": "1632720",
    "end": "1638799"
  },
  {
    "text": "maybe the extension is there afterwards i'm just searching for the guy like yeah and let's just see maybe there's there",
    "start": "1638799",
    "end": "1644320"
  },
  {
    "text": "and it can help me i pretty much like um recently actually tried because there",
    "start": "1644320",
    "end": "1650240"
  },
  {
    "text": "was a need for that uh was leaky base leaky base extension",
    "start": "1650240",
    "end": "1655360"
  },
  {
    "text": "so for those of you that are looking for some for a way to evolve your",
    "start": "1655360",
    "end": "1660960"
  },
  {
    "text": "your data model and you still working with a relational database and you want to you know evolve gradually your database",
    "start": "1660960",
    "end": "1667840"
  },
  {
    "text": "but of course production you cannot drop and create all the time what can you can i say",
    "start": "1667840",
    "end": "1673919"
  },
  {
    "text": "even those schemas from production you cannot drop and create them every time um you can work incrementally with leaky",
    "start": "1673919",
    "end": "1679360"
  },
  {
    "text": "base i personally prefer leaky liquids i know that a lot of people are into flyway but i prefer leaky base because i used",
    "start": "1679360",
    "end": "1686480"
  },
  {
    "text": "it many many years ago in a spring boot project i used the leaky base micro plug-in for generating stuff and",
    "start": "1686480",
    "end": "1692960"
  },
  {
    "text": "afterwards incrementing the changes and so on and so forth uh but carcass has such an",
    "start": "1692960",
    "end": "1699120"
  },
  {
    "text": "extension for working with leaky base and is pretty cool if you need to add incremental changes",
    "start": "1699120",
    "end": "1704799"
  },
  {
    "text": "to your data model um i know that uh i mean there were some questions uh not in the session but um",
    "start": "1704799",
    "end": "1711919"
  },
  {
    "text": "they received during time like hey some of the you know extensions are experimental aren't you afraid of that",
    "start": "1711919",
    "end": "1717760"
  },
  {
    "text": "um um i'm not necessarily afraid about experiments i pretty much am ready to",
    "start": "1717760",
    "end": "1723120"
  },
  {
    "text": "you know evolve with these and we are engineers we're there to make things work so",
    "start": "1723120",
    "end": "1730399"
  },
  {
    "text": "um and the answer to like hey they're experimental do not worry",
    "start": "1730399",
    "end": "1735840"
  },
  {
    "text": "i can say from my own experience that i'm using the graphql uh generator plugin so that",
    "start": "1735840",
    "end": "1742640"
  },
  {
    "text": "generates a schema for your graphql schema that is working um",
    "start": "1742640",
    "end": "1748320"
  },
  {
    "text": "and the thing is that um the schema that it generates is good",
    "start": "1748320",
    "end": "1755919"
  },
  {
    "text": "but it would require a few tweaks and that's something that i found over the time i mean it's a good schema but you",
    "start": "1755919",
    "end": "1762640"
  },
  {
    "text": "need to adjust it a little bit more manually but at least from my point of",
    "start": "1762640",
    "end": "1768080"
  },
  {
    "text": "view as a lazy developer that likes to have things generated and sometimes boulder plated is a good starting point than you know",
    "start": "1768080",
    "end": "1774480"
  },
  {
    "text": "writing the skip of my hand all by myself um",
    "start": "1774480",
    "end": "1779679"
  },
  {
    "text": "yeah so that's it and i'm just looking to the um to the",
    "start": "1779679",
    "end": "1785600"
  },
  {
    "text": "chat any tips to use carcass with maven or gradle um well i'm using by the way another tip",
    "start": "1785600",
    "end": "1792240"
  },
  {
    "text": "for working with maven because i'm maven most of the time i'm not gradle and i",
    "start": "1792240",
    "end": "1797360"
  },
  {
    "text": "know that for gradle there is an extension working i mean you can generate your code by the way with gradle as well um",
    "start": "1797360",
    "end": "1803440"
  },
  {
    "text": "i think that's also experimental or something and there are a few options working with it but there's tips for",
    "start": "1803440",
    "end": "1808559"
  },
  {
    "text": "working with naven i'm always adding the extensions like in the guides with you know at the",
    "start": "1808559",
    "end": "1814880"
  },
  {
    "text": "extension that you need with the command itself i don't remember it by heart it's easier and clearer by",
    "start": "1814880",
    "end": "1821440"
  },
  {
    "text": "the way than copy pasting things from um uh",
    "start": "1821440",
    "end": "1826559"
  },
  {
    "text": "from uh you know the main repository but of course you might find that you need libraries like lombok for example lombok",
    "start": "1826559",
    "end": "1834240"
  },
  {
    "text": "you're not adding from any extension of carcass uh that you would add by hand i know",
    "start": "1834240",
    "end": "1839760"
  },
  {
    "text": "that's a lot of concern and there's also some concern uh when you are you know",
    "start": "1839760",
    "end": "1845200"
  },
  {
    "text": "growing like not to have things that you forgot in your libraries um",
    "start": "1845200",
    "end": "1851360"
  },
  {
    "text": "yes and there's a question like have you ever used sorry for putting the",
    "start": "1851360",
    "end": "1856399"
  },
  {
    "text": "questions i'm not hearing you",
    "start": "1856399",
    "end": "1864000"
  },
  {
    "text": "can you hear me anamaria yeah yeah excel says if you can follow up",
    "start": "1864000",
    "end": "1869360"
  },
  {
    "text": "with the question about grpc okay okay so i'll be the moderator and the speaker",
    "start": "1869360",
    "end": "1875840"
  },
  {
    "text": "as well oh great um okay so regarding the question with the grpc instead of",
    "start": "1875840",
    "end": "1881679"
  },
  {
    "text": "rest for the communication between services if yes what made you decide to use it um i cannot",
    "start": "1881679",
    "end": "1888880"
  },
  {
    "text": "so if i were to choose grpc i did have my own benchmarks regarding that one",
    "start": "1888880",
    "end": "1895200"
  },
  {
    "text": "for for certain cases but arrest is widely used and most of the teams and",
    "start": "1895200",
    "end": "1901600"
  },
  {
    "text": "team members accept rest better than working with grpc there are a few disadvantages to grpc as",
    "start": "1901600",
    "end": "1909360"
  },
  {
    "text": "well and besides the all good known advantages i mean",
    "start": "1909360",
    "end": "1915200"
  },
  {
    "text": "there there is a situation with the content types um i mean for example like image",
    "start": "1915200",
    "end": "1922240"
  },
  {
    "text": "upload support if you need it it's it is not there but most of the time is about it's about",
    "start": "1922240",
    "end": "1929760"
  },
  {
    "text": "people because people like um tools or things that are you know widely",
    "start": "1929760",
    "end": "1936080"
  },
  {
    "text": "adopted uh that have a lot of developer tooling um that",
    "start": "1936080",
    "end": "1941760"
  },
  {
    "text": "you have a lot of you know a lot of ideas about common practices on how to how to handle the errors in",
    "start": "1941760",
    "end": "1948480"
  },
  {
    "text": "all these things so um those being said um",
    "start": "1948480",
    "end": "1953919"
  },
  {
    "text": "and grpc is good if your team is also ready to accept it and embrace it",
    "start": "1953919",
    "end": "1959440"
  },
  {
    "text": "um and from what i've read and i've seen like people that are using it on gk on",
    "start": "1959440",
    "end": "1965760"
  },
  {
    "text": "google's offering are you know having some nice monitoring and infrastructure support there as well",
    "start": "1965760",
    "end": "1972799"
  },
  {
    "text": "but besides that it depends on you and your team most of the time i'm taking decisions",
    "start": "1972799",
    "end": "1980159"
  },
  {
    "text": "all together with the folks that i'm working with so um it's not just me like also with the with",
    "start": "1980159",
    "end": "1986960"
  },
  {
    "text": "carcass by the way is most of a common decision like um",
    "start": "1986960",
    "end": "1992880"
  },
  {
    "text": "we all like it and we will all agree with it and learn to to develop with it",
    "start": "1992880",
    "end": "1998399"
  },
  {
    "text": "it's not something that i personally can take a decision for others um",
    "start": "1998399",
    "end": "2004399"
  },
  {
    "text": "now next of the questions i hope i am not missing these questions here",
    "start": "2004399",
    "end": "2011519"
  },
  {
    "text": "um did you use the specific carcass",
    "start": "2011519",
    "end": "2016799"
  },
  {
    "text": "extension for spring like annotations you mean like to work with auto wire and all the",
    "start": "2016799",
    "end": "2023519"
  },
  {
    "text": "spring annotations when we had to do some translations some term",
    "start": "2023519",
    "end": "2029600"
  },
  {
    "text": "translations from spring 2 to quarkus i do remember we use something um because most of the people",
    "start": "2029600",
    "end": "2036320"
  },
  {
    "text": "let's let's face it are you know acquainted with spring boot and even myself i'm coming from the",
    "start": "2036320",
    "end": "2042399"
  },
  {
    "text": "springboot world so one reason of going with carcass was",
    "start": "2042399",
    "end": "2048480"
  },
  {
    "text": "more like we could combine best of the two worlds like if it doesn't work with corkers we",
    "start": "2048480",
    "end": "2053760"
  },
  {
    "text": "can always do it with spring and what's available in spring um",
    "start": "2053760",
    "end": "2058878"
  },
  {
    "text": "but um most of us i mean carcass is becoming very",
    "start": "2058879",
    "end": "2064000"
  },
  {
    "text": "more mature i would say and so i don't feel the need anymore of like thinking on how that would work",
    "start": "2064000",
    "end": "2070240"
  },
  {
    "text": "with spring i do know a few things and i'm also keeping an eye on the spring ecosystem",
    "start": "2070240",
    "end": "2076158"
  },
  {
    "text": "as well and for example there are a few things that at least for micrometer",
    "start": "2076159",
    "end": "2081200"
  },
  {
    "text": "are available with the spring with the spring ecosystem but i do imagine why that is more evolved for",
    "start": "2081200",
    "end": "2088398"
  },
  {
    "text": "spring especially um that i would like to see also with",
    "start": "2088399",
    "end": "2093520"
  },
  {
    "text": "quarkus but i'm hoping that that will evolve as well um",
    "start": "2093520",
    "end": "2099119"
  },
  {
    "text": "and yeah there are a few more things uh that i'm actually looking into seeing evolve",
    "start": "2099119",
    "end": "2105040"
  },
  {
    "text": "with quarkus but i think that it would caught up pretty well in terms of development",
    "start": "2105040",
    "end": "2111599"
  },
  {
    "text": "uh and by the way another another thing that i want to share with you is like um if you're thinking of using quercus um",
    "start": "2111599",
    "end": "2119119"
  },
  {
    "text": "try to poc first and um you know like have a good base on what you plan to do",
    "start": "2119119",
    "end": "2124800"
  },
  {
    "text": "with it and not just go big because somebody said it's cool um",
    "start": "2124800",
    "end": "2131280"
  },
  {
    "text": "um most probably you cannot convince people to go something because it's cool",
    "start": "2131280",
    "end": "2136800"
  },
  {
    "text": "i don't it doesn't work for me or i don't know for who this works but",
    "start": "2136800",
    "end": "2142880"
  },
  {
    "text": "for me most of the time doesn't work when i say this is cool um so you need to have some measurements",
    "start": "2142880",
    "end": "2148720"
  },
  {
    "text": "um and see how that works and of course they have the buying of everybody that they like",
    "start": "2148720",
    "end": "2155040"
  },
  {
    "text": "uh this approach that they would support this approach and that of course they're ready to learn this but the",
    "start": "2155040",
    "end": "2162000"
  },
  {
    "text": "learning curve is is quite easy that's another thing that is surprisingly nice",
    "start": "2162000",
    "end": "2168000"
  },
  {
    "text": "and good about courteous it's like it's not that difficult to learn i mean i've also experienced a long time",
    "start": "2168000",
    "end": "2174880"
  },
  {
    "text": "ago some java ie applications some er applications and i do remember that after being with",
    "start": "2174880",
    "end": "2180640"
  },
  {
    "text": "spring and going fully java ee it was a it was",
    "start": "2180640",
    "end": "2185760"
  },
  {
    "text": "it was a shock let's just put it like this it was a shock and i was like this used to be done with this",
    "start": "2185760",
    "end": "2191520"
  },
  {
    "text": "now i have to recreate this annotation yes that's true true",
    "start": "2191520",
    "end": "2197520"
  },
  {
    "text": "we will have the hangout with you still um for those who wants to see the chat",
    "start": "2197520",
    "end": "2203680"
  },
  {
    "text": "it's there the link and also um you can check the sponsor areas",
    "start": "2203680",
    "end": "2209200"
  },
  {
    "text": "anna thank you very much i am sorry for my all my issues with with the connection and the microphone and",
    "start": "2209200",
    "end": "2216160"
  },
  {
    "text": "everything thank you very much uh your presentation was really good and i also",
    "start": "2216160",
    "end": "2221359"
  },
  {
    "text": "as a user of quercus i i recommended it the guides are really good and thank you",
    "start": "2221359",
    "end": "2228160"
  },
  {
    "text": "very much for for your time anna thank you thank you thank you everybody and looking",
    "start": "2228160",
    "end": "2233520"
  },
  {
    "text": "forward to speaking with you on the hangout moving there bye [Music]",
    "start": "2233520",
    "end": "2246379"
  },
  {
    "text": "you",
    "start": "2248720",
    "end": "2250800"
  }
]