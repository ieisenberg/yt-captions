[
  {
    "text": "foreign",
    "start": "719",
    "end": "3718"
  },
  {
    "text": "so the web's wearing out and I want to show you a couple pictures to",
    "start": "13380",
    "end": "18960"
  },
  {
    "text": "illustrate what I mean by that um here's a picture of of what a web",
    "start": "18960",
    "end": "24720"
  },
  {
    "text": "application looks like your classic three-tier architecture and the the two things I want you to see here are",
    "start": "24720",
    "end": "31920"
  },
  {
    "text": "we have a database and a CPU the the app server that are physically close to each other",
    "start": "31920",
    "end": "39059"
  },
  {
    "text": "so they can be fairly chatty back and forth think about like a rails app or a PHP app",
    "start": "39059",
    "end": "44760"
  },
  {
    "text": "and then we've got a protocol that sends the output of that application to the user who's relatively far away so that's",
    "start": "44760",
    "end": "51840"
  },
  {
    "text": "the high latency connection between the app server and your mobile phone or your your laptop",
    "start": "51840",
    "end": "57539"
  },
  {
    "text": "and the protocol we use of course is HTTP and HTTP was built to serve documents right it was a it was a",
    "start": "57539",
    "end": "64680"
  },
  {
    "text": "document hypertext transfer protocol so it's very good at that",
    "start": "64680",
    "end": "70320"
  },
  {
    "text": "um and and the rule here is that the web server and this classic architecture",
    "start": "70320",
    "end": "75420"
  },
  {
    "text": "generates a page and sends that down to the user who looks at the page every",
    "start": "75420",
    "end": "80880"
  },
  {
    "text": "time the user wants to do something new the server essentially starts from scratch and builds a new page we've all heard this story right",
    "start": "80880",
    "end": "87479"
  },
  {
    "text": "it's not what we're building today right this is what we're building today it looks a lot more like the app server has",
    "start": "87479",
    "end": "93659"
  },
  {
    "text": "somehow moved to where the person is so we've got an application running in JavaScript in a",
    "start": "93659",
    "end": "100680"
  },
  {
    "text": "browser or we've got an app written in Objective C running on your iPhone the",
    "start": "100680",
    "end": "106259"
  },
  {
    "text": "high latency connection is now between the database and the application",
    "start": "106259",
    "end": "113880"
  },
  {
    "text": "and we actually don't have a very good story for what that protocol looks like today we do it over HTTP or some strange",
    "start": "113880",
    "end": "124938"
  },
  {
    "text": "use of HTTP but we're using it very differently right this is now a bi-directional conversation it's",
    "start": "125219",
    "end": "131640"
  },
  {
    "text": "structured data it's not HTML documents the application isn't asking for",
    "start": "131640",
    "end": "137760"
  },
  {
    "text": "finished pages from the database it's actually getting little pieces of data here and there so what I want to talk",
    "start": "137760",
    "end": "143640"
  },
  {
    "text": "about and show you is why building an application like this is fundamentally different it's not an evolution from you",
    "start": "143640",
    "end": "151560"
  },
  {
    "text": "know say PHP to Ruby to JavaScript or from you know one variant of of",
    "start": "151560",
    "end": "157140"
  },
  {
    "text": "Ajax to another it's actually a fundamental shift in how we're going to build and structure applications and the",
    "start": "157140",
    "end": "163080"
  },
  {
    "text": "reason I'm so confident in that is that we can look to the past and see",
    "start": "163080",
    "end": "168599"
  },
  {
    "text": "something very similar before the web grew up so if we go back before the web and we",
    "start": "168599",
    "end": "173819"
  },
  {
    "text": "draw a picture for what the client server era looked like when you had Windows desktops and you had",
    "start": "173819",
    "end": "180120"
  },
  {
    "text": "um you know Enterprise data servers and you had these protocols that the Windows",
    "start": "180120",
    "end": "185400"
  },
  {
    "text": "computer spoke you know NFS and ipx and all these things it looks exactly the same as what we're",
    "start": "185400",
    "end": "192599"
  },
  {
    "text": "building today right you've got software running right next to the person because",
    "start": "192599",
    "end": "197819"
  },
  {
    "text": "that's what lets us build these really rich interactive interfaces and your data is far enough away that you need to",
    "start": "197819",
    "end": "203459"
  },
  {
    "text": "design a protocol and a transport that effectively manages that back and forth flow of data in fact I can go one step",
    "start": "203459",
    "end": "210420"
  },
  {
    "text": "further back to the 70s if you want and talk about call it the Mainframe era",
    "start": "210420",
    "end": "216300"
  },
  {
    "text": "which actually looks a lot like the web way back then we had the CPUs and the databases right next to",
    "start": "216300",
    "end": "223440"
  },
  {
    "text": "each other and the CPU generated a finished page now back then it was like a vt220 page",
    "start": "223440",
    "end": "230280"
  },
  {
    "text": "or 3270 or something right but very similar model to the web we would display a page the user would type a key",
    "start": "230280",
    "end": "238500"
  },
  {
    "text": "the server would update the screen so it looks like what happens over time is that the place the application runs",
    "start": "238500",
    "end": "245580"
  },
  {
    "text": "oscillates back and forth we've had errors when it was on the server in the data center and then we've had errors",
    "start": "245580",
    "end": "252840"
  },
  {
    "text": "and I think we're entering an era when the application is actually closer to the person",
    "start": "252840",
    "end": "258120"
  },
  {
    "text": "and I think if we look back to what the client server error looked like we're going to find a lot of",
    "start": "258120",
    "end": "264440"
  },
  {
    "text": "motivation for what a new generation of Technology built around these rich client applications is going to look",
    "start": "264440",
    "end": "270960"
  },
  {
    "text": "like that's what meteor is designed to do it's a departure from the the Legacy web",
    "start": "270960",
    "end": "276720"
  },
  {
    "text": "stacks and an expression of what a great software development environment would look like if you just wanted to build",
    "start": "276720",
    "end": "282840"
  },
  {
    "text": "for this sort of modern application platform so I could go on for a while but I",
    "start": "282840",
    "end": "288600"
  },
  {
    "text": "really want to focus on one piece of what's different and that's the the protocol or the conversation or the flow",
    "start": "288600",
    "end": "294060"
  },
  {
    "text": "of data and the reason I wanted to talk about that today is because it ties in with the security work that we've been doing for the last six months at meteor",
    "start": "294060",
    "end": "301620"
  },
  {
    "text": "so HTTP I mentioned is is this current protocol that we still use for the most",
    "start": "301620",
    "end": "308100"
  },
  {
    "text": "part to communicate between these rich clients written in JavaScript and the server it's the wrong protocol it's just",
    "start": "308100",
    "end": "314880"
  },
  {
    "text": "absolutely wrong HTTP is stateless that's wrong right HTTP is essentially unidirectional",
    "start": "314880",
    "end": "322199"
  },
  {
    "text": "that's wrong um HTTP is unreliable that's wrong if",
    "start": "322199",
    "end": "327840"
  },
  {
    "text": "you look at how we designed all of the RPC protocols in the 90s we got this stuff right but when you try to",
    "start": "327840",
    "end": "333300"
  },
  {
    "text": "implement client applications over HTTP you end up running into all of these flaws",
    "start": "333300",
    "end": "339139"
  },
  {
    "text": "and we can talk about web sockets and we can talk about these low-level transports but what's missing in that",
    "start": "339139",
    "end": "344280"
  },
  {
    "text": "picture is what's the higher level protocol what's the equivalent of http",
    "start": "344280",
    "end": "350160"
  },
  {
    "text": "for bi-directional Json data and I think the answer is it's it's sort",
    "start": "350160",
    "end": "356160"
  },
  {
    "text": "of everything that HTTP isn't it's session based it's something that has an understanding of a connection and a",
    "start": "356160",
    "end": "361620"
  },
  {
    "text": "replay cache so that when a client asks the server to take an action we can do that action once and only once",
    "start": "361620",
    "end": "367820"
  },
  {
    "text": "it's something that has the ability to Marshal things like Json data or other",
    "start": "367820",
    "end": "373199"
  },
  {
    "text": "structured objects without going through all of the overhead of HTTP and the the headers for each document and so forth",
    "start": "373199",
    "end": "381138"
  },
  {
    "text": "what we've done with meteor is arranged our data transfer exactly that way and",
    "start": "381780",
    "end": "387300"
  },
  {
    "text": "rather than the rest model which is designed around well you have these HTTP verbs I guess we'll send some Jason that",
    "start": "387300",
    "end": "394080"
  },
  {
    "text": "way let's think about it from scratch and the first thing you discover is that in this new world you don't want",
    "start": "394080",
    "end": "399960"
  },
  {
    "text": "snapshots of data you want an ever-changing flow of information being sent down to the client and one way to",
    "start": "399960",
    "end": "406740"
  },
  {
    "text": "think about this problem is that when your whole app is written in JavaScript or in Coco touch you're not going to",
    "start": "406740",
    "end": "411840"
  },
  {
    "text": "refresh the page so the the server needs some way to push updates and we all know this right because we're building apps",
    "start": "411840",
    "end": "417419"
  },
  {
    "text": "this way but we're doing it ad hoc and and the right way to do it is to bake it into the actual wire protocol that that",
    "start": "417419",
    "end": "424020"
  },
  {
    "text": "the client speaks so if you think about what it looks like to have a subscription then you need a",
    "start": "424020",
    "end": "431160"
  },
  {
    "text": "place to put that data and so you end up building a cache on your client to hold all of this data that the server has",
    "start": "431160",
    "end": "437400"
  },
  {
    "text": "been pushing down and again people are building this in an ad hoc way so backbone collections for example is sort",
    "start": "437400",
    "end": "442979"
  },
  {
    "text": "of like your poor man's cash on an HTML5 app",
    "start": "442979",
    "end": "448199"
  },
  {
    "text": "so we'll we'll take a page from the 90s if we want to change data it's pretty clear the client's going to have to ask",
    "start": "448199",
    "end": "453960"
  },
  {
    "text": "the server to do that let's just call it an RPC because that's what it is and we",
    "start": "453960",
    "end": "459000"
  },
  {
    "text": "have one cute trick we can play that I'm going to show you in code I won't talk about it too much but the point is we can work around the latency of The",
    "start": "459000",
    "end": "465479"
  },
  {
    "text": "Connection by simulating what the server is about to do without waiting for it and that's what makes applications",
    "start": "465479",
    "end": "471660"
  },
  {
    "text": "written in this style magical because you can take actions on the screen that are very fluid and responsive without",
    "start": "471660",
    "end": "477900"
  },
  {
    "text": "waiting for that lengthy round trip maybe over an unreliable cell phone network or whatever you're using for the",
    "start": "477900",
    "end": "483360"
  },
  {
    "text": "response so here's an example of what that subscription might look like I put a",
    "start": "483360",
    "end": "488759"
  },
  {
    "text": "couple of bits of code on the screen let's say you're writing a Blog engine in this new style and I've written three",
    "start": "488759",
    "end": "495240"
  },
  {
    "text": "JavaScript functions these would run on the server and they would define an endpoint a subscription for data you can",
    "start": "495240",
    "end": "502979"
  },
  {
    "text": "think of it the same as like a get an arrest endpoint except that these are always sending the results of the query",
    "start": "502979",
    "end": "509780"
  },
  {
    "text": "so as posts get written and these are in  syntax or if the author I'm",
    "start": "509780",
    "end": "516839"
  },
  {
    "text": "looking at writes a new post then the server is going to push an update down to each client corresponding to the",
    "start": "516839",
    "end": "523320"
  },
  {
    "text": "query that's up on the screen yeah",
    "start": "523320",
    "end": "526700"
  },
  {
    "text": "maybe it's the network",
    "start": "530820",
    "end": "533720"
  },
  {
    "text": "so so the question is if we're going to replace HTTP what do we do about the fact that HTTP is really friendly to",
    "start": "538440",
    "end": "544980"
  },
  {
    "text": "networks and proxy servers and firewalls and most other stuff isn't I mean you're absolutely right so I think the future",
    "start": "544980",
    "end": "551100"
  },
  {
    "text": "is clearly websockets I think there's a panel this afternoon about the future of web sockets I think the future is strong",
    "start": "551100",
    "end": "558300"
  },
  {
    "text": "um but in the interim we'll we'll use hacks so we'll run you know all of the ways to simulate a websocket over HTTP",
    "start": "558300",
    "end": "565260"
  },
  {
    "text": "meteor actually doesn't use websockets um we have found in production that they",
    "start": "565260",
    "end": "570600"
  },
  {
    "text": "don't work very well one example just to digress completely you can't compress traffic over a",
    "start": "570600",
    "end": "577440"
  },
  {
    "text": "websocket right I mean you could do it in JavaScript but the the native transport doesn't handle compression the",
    "start": "577440",
    "end": "583200"
  },
  {
    "text": "way that HTTP does so if you're sending a lot of Json back and forth we actually find it's more efficient to pay the",
    "start": "583200",
    "end": "589620"
  },
  {
    "text": "overhead of doing long polling or some other HTTP technique because your actual",
    "start": "589620",
    "end": "595500"
  },
  {
    "text": "payloads get much smaller Over The Wire so it'll be a transition right but I mean web browsers are going to get the",
    "start": "595500",
    "end": "601860"
  },
  {
    "text": "ability to open sockets and it's it's going to connect I mean that's going to happen I think pretty clearly so I'm",
    "start": "601860",
    "end": "607500"
  },
  {
    "text": "more interested in what happens above that transport layer let's assume you have a reliable stream and the question is what do you send over it",
    "start": "607500",
    "end": "614760"
  },
  {
    "text": "does that answer your question so on the client we just told the server",
    "start": "614760",
    "end": "621540"
  },
  {
    "text": "we're interested in one of those streams so here's an example of subscribing to the three endpoints I",
    "start": "621540",
    "end": "627360"
  },
  {
    "text": "Define and this is kind of interesting because it suggests that a client can subscribe to overlapping sets of data",
    "start": "627360",
    "end": "633180"
  },
  {
    "text": "right I might be interested in being up to date with um",
    "start": "633180",
    "end": "638700"
  },
  {
    "text": "well all public posts all posts that a particular author wrote and all posts that I wrote and if you looked at the",
    "start": "638700",
    "end": "646320"
  },
  {
    "text": "previous screen carefully you'll see that my posts they don't have to be public the way the other two do so you can imagine that there are documents",
    "start": "646320",
    "end": "653339"
  },
  {
    "text": "that are matched by more than one of those subscriptions that's fine this is the way a modern client assembles the data that it needs and the",
    "start": "653339",
    "end": "661140"
  },
  {
    "text": "goal here is that once I've got that data in my cache I don't have to wait for the",
    "start": "661140",
    "end": "667380"
  },
  {
    "text": "Network anymore so I have a fast local copy of all the",
    "start": "667380",
    "end": "672660"
  },
  {
    "text": "data I'm interested in the server in the background is keeping it up to date but when I do a query and this again is",
    "start": "672660",
    "end": "678600"
  },
  {
    "text": "meteor code and I'll do it on the screen for you when I do a find I don't get back a callback or some kind of promise",
    "start": "678600",
    "end": "684180"
  },
  {
    "text": "or anything like that I get back an array of data immediately right without any blocking for the network without any",
    "start": "684180",
    "end": "690600"
  },
  {
    "text": "round trip latency to the server and again that's how you make a responsive application so the the application's job",
    "start": "690600",
    "end": "696600"
  },
  {
    "text": "is to tell the server what it's going to be interested in so that it can always be responsive with what it's putting on the",
    "start": "696600",
    "end": "702660"
  },
  {
    "text": "screen and then when we do an update we want to",
    "start": "702660",
    "end": "707820"
  },
  {
    "text": "be able to make the update using the same database API and the same syntax we're comfortable with so in meteor when",
    "start": "707820",
    "end": "714360"
  },
  {
    "text": "you have a client you can do for example an insert and and again I'm going to show you this",
    "start": "714360",
    "end": "719940"
  },
  {
    "text": "the key trick here is we can do it right away on the client and then figure out whether or not the server decided that was okay and I'll show you how that",
    "start": "719940",
    "end": "726660"
  },
  {
    "text": "works but again it makes for a a more responsive experience because you can avoid waiting for the server's response",
    "start": "726660",
    "end": "735199"
  },
  {
    "text": "which we call latency compensation all right let me show you just a couple",
    "start": "736140",
    "end": "743160"
  },
  {
    "text": "things here so I've defined a collection called circles",
    "start": "743160",
    "end": "749339"
  },
  {
    "text": "in my program and this program is very short it's only 60 lines of code just to",
    "start": "749339",
    "end": "754560"
  },
  {
    "text": "draw the D3 circles so the the really key line is this definition of a circle's collection and by default in",
    "start": "754560",
    "end": "761820"
  },
  {
    "text": "meteor when you define a collection to your point earlier we're going to Cache everything in the collection onto every",
    "start": "761820",
    "end": "767880"
  },
  {
    "text": "client so this is think of it like Scaffolding in rails it's just a way to get started very quickly so",
    "start": "767880",
    "end": "774500"
  },
  {
    "text": "that means in my browser and I'll use the console to show you this",
    "start": "774500",
    "end": "780060"
  },
  {
    "text": "um sorry let me just",
    "start": "780060",
    "end": "786980"
  },
  {
    "text": "oh where'd my window go um",
    "start": "787560",
    "end": "792839"
  },
  {
    "text": "I can run database commands so for example I can insert a circle document and I'm using so I'm just going to",
    "start": "792839",
    "end": "799440"
  },
  {
    "text": "give it a Json document and in my little setup here I I just need an X and a y coordinate so I'll say 200 and 200 and I",
    "start": "799440",
    "end": "806760"
  },
  {
    "text": "think it was like a radius um of like 20 hopefully I'm doing this right",
    "start": "806760",
    "end": "813839"
  },
  {
    "text": "and a color of zero and when I run that insert D3 maps that",
    "start": "813839",
    "end": "821639"
  },
  {
    "text": "X Y color choice to a circle on the canvas I actually have an event handler so I",
    "start": "821639",
    "end": "828180"
  },
  {
    "text": "can also double click on the canvas and the client code will run the exact same insert it's going to pick I think a",
    "start": "828180",
    "end": "834720"
  },
  {
    "text": "random radius so here's one and here's one and I double click twice I can also do",
    "start": "834720",
    "end": "843240"
  },
  {
    "text": "you know circles dot find dot fetch for example and there's my local database query that",
    "start": "843240",
    "end": "849660"
  },
  {
    "text": "returned an array of objects so each of these objects is one of the circles that's on my screen and if I look at one",
    "start": "849660",
    "end": "856920"
  },
  {
    "text": "of these I see I've got a primary key this looks like a ID kind of thing",
    "start": "856920",
    "end": "862019"
  },
  {
    "text": "and then I've got my my different properties of that object",
    "start": "862019",
    "end": "867920"
  },
  {
    "text": "what's really cool is that I have the whole database here in the client so for example I can do circles dot",
    "start": "867920",
    "end": "877860"
  },
  {
    "text": "update and let's use the Syntax for update every Circle and maybe I'll",
    "start": "877860",
    "end": "883860"
  },
  {
    "text": "increment the y coordinate by 50 pixels and I'll I'll say multi-true so that it",
    "start": "883860",
    "end": "891240"
  },
  {
    "text": "affects every matching document and D3 moves all three of my circles",
    "start": "891240",
    "end": "897540"
  },
  {
    "text": "down the screen 50 pixels that's kind of cool um but we can do a lot better because it",
    "start": "897540",
    "end": "905160"
  },
  {
    "text": "turns out all of this is persistent and in a totally different browser connected to my server",
    "start": "905160",
    "end": "912180"
  },
  {
    "text": "um I can get",
    "start": "912180",
    "end": "916639"
  },
  {
    "text": "the effect of having these nice subscriptions so let me increment y by negative 50",
    "start": "917519",
    "end": "923579"
  },
  {
    "text": "and you see that both browsers are going to dutifully move their red circles up",
    "start": "923579",
    "end": "928860"
  },
  {
    "text": "on the screen at the same time so this is a transaction in one browser that's going",
    "start": "928860",
    "end": "935639"
  },
  {
    "text": "back to the meteor server but because both both clients are subscribed to the set of circles when there's a change in",
    "start": "935639",
    "end": "942000"
  },
  {
    "text": "any of these documents that change is reflected on all the other screens and then D3 takes over and",
    "start": "942000",
    "end": "947880"
  },
  {
    "text": "does that nice animation to actually show us what's happening um I have another event handler where if",
    "start": "947880",
    "end": "953220"
  },
  {
    "text": "I click a circle it'll rotate through some colors and again if I click on a circle in Safari the same result in",
    "start": "953220",
    "end": "959040"
  },
  {
    "text": "Chrome and you know I can play this game all day um but it's a really nice demonstration of",
    "start": "959040",
    "end": "965760"
  },
  {
    "text": "sharing data back and forth so the question this raises is you know",
    "start": "965760",
    "end": "971459"
  },
  {
    "text": "what stops some guy from opening the console and you know circles dot remove",
    "start": "971459",
    "end": "978600"
  },
  {
    "text": "D and you know there's the end of the party so up until now my answer has been sort",
    "start": "978600",
    "end": "984480"
  },
  {
    "text": "of wishy-washy and complicated but what we can now show you is something a lot more pleasant about how security Works",
    "start": "984480",
    "end": "991680"
  },
  {
    "text": "in an environment like this so I'm going to just sort of zip through a tour of what's now possible with the",
    "start": "991680",
    "end": "999180"
  },
  {
    "text": "kind of technology that we have in the the upcoming release so the first thing I'm going to do and",
    "start": "999180",
    "end": "1004279"
  },
  {
    "text": "again please interrupt with questions um it's it's really a lab course uh the",
    "start": "1004279",
    "end": "1009680"
  },
  {
    "text": "first thing I'm going to do is uh put a circle back on the screen",
    "start": "1009680",
    "end": "1015740"
  },
  {
    "text": "so let me get a couple of circles here um if I go back to my terminal",
    "start": "1015740",
    "end": "1023800"
  },
  {
    "text": "um let's remove the insecure package because that seems like the first problem",
    "start": "1024199",
    "end": "1030640"
  },
  {
    "text": "and I'm going to run the same circles remove command and I get an access denied error",
    "start": "1031280",
    "end": "1039380"
  },
  {
    "text": "and if I have that other screen up I'm sorry there's so little real estate here um you know obviously my command did",
    "start": "1039380",
    "end": "1046459"
  },
  {
    "text": "nothing now it did nothing everywhere so the server is now rejecting my request because",
    "start": "1046459",
    "end": "1052400"
  },
  {
    "text": "um in Secure mode it now enforces some sort of permission checking on these",
    "start": "1052400",
    "end": "1057679"
  },
  {
    "text": "updates and I have to write a function that explains what I'm allowed to do",
    "start": "1057679",
    "end": "1063260"
  },
  {
    "text": "so I can write that function and what I can do is I'll just add a",
    "start": "1063260",
    "end": "1070820"
  },
  {
    "text": "little stanza of JavaScript where I say um circles which is my collection dot allow",
    "start": "1070820",
    "end": "1078620"
  },
  {
    "text": "and allow takes a dictionary so there's different operations we're interested we've got insert and update and remove",
    "start": "1078620",
    "end": "1085220"
  },
  {
    "text": "um let's let's uh",
    "start": "1085220",
    "end": "1089500"
  },
  {
    "text": "let's make a well we'll just do the remove action so remove is a function and it's going to take a user ID and",
    "start": "1091340",
    "end": "1098840"
  },
  {
    "text": "it's going to take I think a set of documents that are proposed to be removed",
    "start": "1098840",
    "end": "1104299"
  },
  {
    "text": "and I can just return true",
    "start": "1104299",
    "end": "1107740"
  },
  {
    "text": "and if I remember this syntax um I've now defined a rule that says",
    "start": "1110240",
    "end": "1117559"
  },
  {
    "text": "clients are allowed to issue a remove command so I'm sort of back in the the wild west where if I",
    "start": "1117559",
    "end": "1124700"
  },
  {
    "text": "come over here and uh and I do a remove",
    "start": "1124700",
    "end": "1131419"
  },
  {
    "text": "all my data goes away again so I'm now under this sort of manual control of",
    "start": "1131419",
    "end": "1138799"
  },
  {
    "text": "what each client is allowed to do let me add one more piece of manual",
    "start": "1138799",
    "end": "1143900"
  },
  {
    "text": "control so I'm also going to remove the auto publish package",
    "start": "1143900",
    "end": "1150640"
  },
  {
    "text": "um and auto publish is the other half of scaffolding it's the piece that automatically keeps all the clients up",
    "start": "1151760",
    "end": "1158120"
  },
  {
    "text": "to date with all the data on the server which is great when you're playing around and not so great if you're",
    "start": "1158120",
    "end": "1163160"
  },
  {
    "text": "building something at internet scale so now I have to go back to what I was showing you before about subscriptions",
    "start": "1163160",
    "end": "1169400"
  },
  {
    "text": "and having the server publish sets of documents so let me write what that looks like so again on the server I'm",
    "start": "1169400",
    "end": "1176120"
  },
  {
    "text": "going to define a publish um and I'll just call it all circles",
    "start": "1176120",
    "end": "1182539"
  },
  {
    "text": "publishes a function that's going to return in my case a database query so on the server",
    "start": "1182539",
    "end": "1188059"
  },
  {
    "text": "I'll do circles.find and",
    "start": "1188059",
    "end": "1194299"
  },
  {
    "text": "balance all right and so now I've defined a document set right a an endpoint that a client",
    "start": "1194299",
    "end": "1201919"
  },
  {
    "text": "can connect to to retrieve some data and it has a name which is all circles",
    "start": "1201919",
    "end": "1208100"
  },
  {
    "text": "and then on the client I'm just going to subscribe to that so I do meteor.subscribe",
    "start": "1208100",
    "end": "1213980"
  },
  {
    "text": "all circles and if I save that that should put me",
    "start": "1214340",
    "end": "1220820"
  },
  {
    "text": "back where I was I actually don't think I have any circles in the database so let's",
    "start": "1220820",
    "end": "1226220"
  },
  {
    "text": "oh so if I double click here here's an interesting example of of that latency",
    "start": "1226220",
    "end": "1232400"
  },
  {
    "text": "compensation so watch the screen I double click and my",
    "start": "1232400",
    "end": "1237980"
  },
  {
    "text": "double click Handler inserts a circle object so it puts it on the screen D3 dutifully renders it where it's supposed",
    "start": "1237980",
    "end": "1243860"
  },
  {
    "text": "to go but very quickly the server says no no you're not allowed to do that so my cash gets fixed to reflect the",
    "start": "1243860",
    "end": "1253280"
  },
  {
    "text": "real servers database which in this case means there's no Circle so on the local client I get this funny",
    "start": "1253280",
    "end": "1259100"
  },
  {
    "text": "effect where for a split second I have this this strange extra result",
    "start": "1259100",
    "end": "1264679"
  },
  {
    "text": "but the other client never sees that so as I double click to make these circles you notice they never appear in",
    "start": "1264679",
    "end": "1270919"
  },
  {
    "text": "Safari they're never in the server's database they're not being sent to anyone else it's just this temporary",
    "start": "1270919",
    "end": "1276080"
  },
  {
    "text": "effect on the client most of the time you're not going to let your client do this right you're going to impose rules on the client that you know the server",
    "start": "1276080",
    "end": "1282080"
  },
  {
    "text": "is going to agree with so a well-behaved client won't get you in this position but it's a good demonstration of how we",
    "start": "1282080",
    "end": "1287480"
  },
  {
    "text": "can speculatively do work on the client without waiting for the server hoping most of the time that you get the",
    "start": "1287480",
    "end": "1294440"
  },
  {
    "text": "right result so let me go ahead and add an insert rule",
    "start": "1294440",
    "end": "1301000"
  },
  {
    "text": "and insert is going to take a user ID and the proposed document and again I'll just return true to allow any client to",
    "start": "1301000",
    "end": "1308419"
  },
  {
    "text": "insert a document and yep now we're back",
    "start": "1308419",
    "end": "1314659"
  },
  {
    "text": "and what we now have is where we were at the beginning except that",
    "start": "1314659",
    "end": "1321140"
  },
  {
    "text": "each client is manually subscribing to its documents and each client is using",
    "start": "1321140",
    "end": "1327440"
  },
  {
    "text": "the um rules for updating objects",
    "start": "1327440",
    "end": "1333740"
  },
  {
    "text": "and it looks like I have one more right I I can't change the color of a circle",
    "start": "1333740",
    "end": "1339740"
  },
  {
    "text": "because I didn't allow an update and so I can add that update as well",
    "start": "1339740",
    "end": "1347260"
  },
  {
    "text": "update I'm not sure quite what it takes but I think that will work",
    "start": "1347780",
    "end": "1353140"
  },
  {
    "text": "um and now we're back to where we were so",
    "start": "1353539",
    "end": "1359659"
  },
  {
    "text": "in this application if you want to think of the client and the server is speaking this protocol or having an API between",
    "start": "1359659",
    "end": "1365600"
  },
  {
    "text": "them the way we can think about security is actually very clear",
    "start": "1365600",
    "end": "1370640"
  },
  {
    "text": "and the rule is the server gets to decide what the client can see that's a publish function",
    "start": "1370640",
    "end": "1378140"
  },
  {
    "text": "and the server gets to decide whether or not the client can make an update that's the allow function",
    "start": "1378140",
    "end": "1384260"
  },
  {
    "text": "that's it right there's nothing else the client can ever do I can write all the Rogue code I want on the client I can go",
    "start": "1384260",
    "end": "1390440"
  },
  {
    "text": "to the console and type any JavaScript I want maybe I affect the client screen briefly like we saw before but",
    "start": "1390440",
    "end": "1397120"
  },
  {
    "text": "fundamentally there's nothing that client can do now other than specifically what the server",
    "start": "1397120",
    "end": "1403580"
  },
  {
    "text": "chose to allow it to do and that's the the the foundation of",
    "start": "1403580",
    "end": "1408799"
  },
  {
    "text": "security in a rich client application and and what we've done here is create a framework that lets us think about that",
    "start": "1408799",
    "end": "1414679"
  },
  {
    "text": "in a really structured way and I can show you examples of like what happens when you when you play with that so for",
    "start": "1414679",
    "end": "1420260"
  },
  {
    "text": "example um I can turn off that publish on the server and if I go back to my web",
    "start": "1420260",
    "end": "1426740"
  },
  {
    "text": "browser all the data is gone the server stopped providing that data in fact it removed it from its cache and if I do a",
    "start": "1426740",
    "end": "1433760"
  },
  {
    "text": "database query for all of the circles",
    "start": "1433760",
    "end": "1439580"
  },
  {
    "text": "there aren't any on either client because the server chose not to provide",
    "start": "1439580",
    "end": "1445039"
  },
  {
    "text": "them anymore or maybe the server um is only going to provide",
    "start": "1445039",
    "end": "1452600"
  },
  {
    "text": "um a total of two circles kind of a weird thing to do but let's just imagine I can",
    "start": "1452600",
    "end": "1458000"
  },
  {
    "text": "write any query here I want so we come back over to our clients and they both have two circles",
    "start": "1458000",
    "end": "1464360"
  },
  {
    "text": "um right so we're under complete control of what data each person is allowed to see",
    "start": "1464360",
    "end": "1472400"
  },
  {
    "text": "so now that we have the Primitive I want to take that one step further and I want to actually create some sort of login",
    "start": "1472400",
    "end": "1477679"
  },
  {
    "text": "system so that maybe I can vary the behavior of the app based on whether or not I'm logged in or I'm someone that",
    "start": "1477679",
    "end": "1483440"
  },
  {
    "text": "the server knows about yeah what happens if I create a circle at this point what do you think",
    "start": "1483440",
    "end": "1491380"
  },
  {
    "text": "so if I double click here actually let me let me do an insert just to be really",
    "start": "1491600",
    "end": "1497360"
  },
  {
    "text": "explicit about it so I'll do Circle dot insert and let's just say x0 y 0 color 0",
    "start": "1497360",
    "end": "1507400"
  },
  {
    "text": "radius really big Okay so what's going to happen well that insert",
    "start": "1507400",
    "end": "1514820"
  },
  {
    "text": "is going to immediately change the cache on my client so I'm pretty sure I'm going to get a big circle on my screen right",
    "start": "1514820",
    "end": "1521059"
  },
  {
    "text": "and it's going to send a command to the server to add a circle to the database which I'm allowing right because I'm the",
    "start": "1521059",
    "end": "1526520"
  },
  {
    "text": "clients are allowed to insert records so there should be four circles in the real database at that point",
    "start": "1526520",
    "end": "1532940"
  },
  {
    "text": "but the server isn't going I'm not subscribed to all four I'm only subscribed to two of them",
    "start": "1532940",
    "end": "1538220"
  },
  {
    "text": "so what ought to end up happening is that I'll still only have two circles on the",
    "start": "1538220",
    "end": "1543980"
  },
  {
    "text": "screen which two I'm not sure because the query I wrote wasn't very well defined right I just said give me two",
    "start": "1543980",
    "end": "1549020"
  },
  {
    "text": "circles I didn't sort them so let's see",
    "start": "1549020",
    "end": "1554360"
  },
  {
    "text": "foreign if I could type right",
    "start": "1554360",
    "end": "1560380"
  },
  {
    "text": "and there you go so same thing latency compensation the client simulated what it thought was",
    "start": "1560659",
    "end": "1567260"
  },
  {
    "text": "going to happen surprisingly that's not actually what happened to its cache and the server resolved it to where it is",
    "start": "1567260",
    "end": "1572779"
  },
  {
    "text": "now um but of course those circles are in the database and if I get rid of this goofy limit and I just go back to",
    "start": "1572779",
    "end": "1579140"
  },
  {
    "text": "publishing all the circles to the clients there they all are",
    "start": "1579140",
    "end": "1584539"
  },
  {
    "text": "right so the Primitives are really solid now I admit this is a little bizarre because who cares about managing circles",
    "start": "1584539",
    "end": "1590179"
  },
  {
    "text": "but um let's let's just play along for a second so I want to show you how easy it is to add logins to an application like",
    "start": "1590179",
    "end": "1596960"
  },
  {
    "text": "this and then vary the behavior in a slightly more useful way let's say",
    "start": "1596960",
    "end": "1602360"
  },
  {
    "text": "um and to do that I'm going to use new packages that are part of this security release so I'm going to add",
    "start": "1602360",
    "end": "1608860"
  },
  {
    "text": "accounts UI and accounts password so the first",
    "start": "1608860",
    "end": "1614480"
  },
  {
    "text": "provides me some Chrome around a login system and the second provides me an",
    "start": "1614480",
    "end": "1619580"
  },
  {
    "text": "implementation of accounts that are backed by username and password",
    "start": "1619580",
    "end": "1625778"
  },
  {
    "text": "uh sorry and then",
    "start": "1625940",
    "end": "1630980"
  },
  {
    "text": "um in my HTML file I'm going to add",
    "start": "1630980",
    "end": "1637400"
  },
  {
    "text": "um a login buttons helper which is something that the Chrome that counts UI",
    "start": "1637400",
    "end": "1643220"
  },
  {
    "text": "package provides me and I save the file by the way when I save files in meteor clients automatically update so you're",
    "start": "1643220",
    "end": "1649100"
  },
  {
    "text": "not seeing me refresh the browser we call that a hot code push it's really helpful for development but it's super",
    "start": "1649100",
    "end": "1654860"
  },
  {
    "text": "important for production because if you think about a production application that's written in JavaScript",
    "start": "1654860",
    "end": "1660620"
  },
  {
    "text": "reloading the whole browser is sort of like rebooting Windows 95 when you installed a piece of software right the",
    "start": "1660620",
    "end": "1666140"
  },
  {
    "text": "user is probably in the middle of something what if they have a dialogue open and they're halfway through filling out a form we're all fans of continuous",
    "start": "1666140",
    "end": "1672020"
  },
  {
    "text": "deployment so we make our change to tweak the color of something in this whole new set of code gets pushed out",
    "start": "1672020",
    "end": "1677120"
  },
  {
    "text": "and the guy's work gets lost right so there there's underlying technology to make these sorts of applications work",
    "start": "1677120",
    "end": "1683419"
  },
  {
    "text": "really well that turns out to be important and that's that's one example of it so I save that login button Helper",
    "start": "1683419",
    "end": "1689720"
  },
  {
    "text": "and now I have this little sign in thing and I can",
    "start": "1689720",
    "end": "1693880"
  },
  {
    "text": "I was talking about continuous deployment and",
    "start": "1701720",
    "end": "1706299"
  },
  {
    "text": "um the question is can you do hot code deploy if you do meteor bundle I sure thought so I'm only like 90 sure",
    "start": "1718220",
    "end": "1725900"
  },
  {
    "text": "um we can talk offline",
    "start": "1725900",
    "end": "1729400"
  },
  {
    "text": "let's talk after yeah it's just kind of detailed um okay so Chrome gives me this sign in box",
    "start": "1733940",
    "end": "1741740"
  },
  {
    "text": "um I I don't have an account but I can create one and I'll I'll just say I'm I'm mad at meteor and my password is",
    "start": "1741740",
    "end": "1750020"
  },
  {
    "text": "one through six or something like that and now I'm logged in as mad at meteor um well here's what's interesting about",
    "start": "1750020",
    "end": "1756440"
  },
  {
    "text": "being logged in is I can run this command meteor user in the console and",
    "start": "1756440",
    "end": "1762200"
  },
  {
    "text": "my client returns to me an object which is it turns out a collection of users",
    "start": "1762200",
    "end": "1769039"
  },
  {
    "text": "and when I'm logged in the server will publish me the record or the document for my user so I didn't write any code",
    "start": "1769039",
    "end": "1778039"
  },
  {
    "text": "but um I'm now logged in and I have this record",
    "start": "1778039",
    "end": "1783260"
  },
  {
    "text": "that I can work with and buried in here is is my email address that I typed in the same information is available on the",
    "start": "1783260",
    "end": "1790100"
  },
  {
    "text": "server so let's take advantage of that let's say that",
    "start": "1790100",
    "end": "1795620"
  },
  {
    "text": "you only get to see green circles if you're logged in anybody can see red circles but green",
    "start": "1795620",
    "end": "1801620"
  },
  {
    "text": "circles are special and you got to be logged in to see them so that's a very simple change I'm going to go back to my",
    "start": "1801620",
    "end": "1808340"
  },
  {
    "text": "publish function and I'm going to check to see if the user is logged in so if",
    "start": "1808340",
    "end": "1815360"
  },
  {
    "text": "and I have access to this dot user ID on the server",
    "start": "1815360",
    "end": "1820658"
  },
  {
    "text": "um I could probably write this more elegantly but I'll just do it the Dopey",
    "start": "1821419",
    "end": "1827539"
  },
  {
    "text": "way so I'll return all the circles if there's a user ID",
    "start": "1827539",
    "end": "1833480"
  },
  {
    "text": "and if there's no user ID then um",
    "start": "1833480",
    "end": "1839059"
  },
  {
    "text": "I'll only return circles whose color is zero which I think is a red circle",
    "start": "1839059",
    "end": "1844640"
  },
  {
    "text": "does that make sense so I saved that file and I go over to Chrome and there's nothing different and",
    "start": "1844640",
    "end": "1850820"
  },
  {
    "text": "that makes sense because I'm logged in and so I should still see the whole database but if I go over to Safari that",
    "start": "1850820",
    "end": "1857480"
  },
  {
    "text": "green circle is gone and if I sign in",
    "start": "1857480",
    "end": "1863799"
  },
  {
    "text": "there's the circle so the server is aware of the state and",
    "start": "1867620",
    "end": "1872840"
  },
  {
    "text": "I mentioned before and it wasn't really obvious why I thought this was so important but I talked about how this protocol has to be stateful because in a",
    "start": "1872840",
    "end": "1879919"
  },
  {
    "text": "rich application like this it's it's not you know an occasional conversation back and forth there is a continuous stream",
    "start": "1879919",
    "end": "1887960"
  },
  {
    "text": "of data going back and forth and the contents of that stream the result of a query from the server is a property of",
    "start": "1887960",
    "end": "1894860"
  },
  {
    "text": "the client and it's a property of in particular who I'm logged in as so if I log in I get all this data if I",
    "start": "1894860",
    "end": "1902360"
  },
  {
    "text": "sign out the server is going to remove data from my cache and then D3 you know beautifully",
    "start": "1902360",
    "end": "1907700"
  },
  {
    "text": "zooms that down to nothing um and there's sort of funny consequences here right because if I",
    "start": "1907700",
    "end": "1912799"
  },
  {
    "text": "click on a circle I'm going to change its color well that's going to remove it from the",
    "start": "1912799",
    "end": "1918140"
  },
  {
    "text": "client I think I had an overlapping Circle there you know same story there right",
    "start": "1918140",
    "end": "1926600"
  },
  {
    "text": "um I can do a little bit more with the the login system so suppose I want to",
    "start": "1926600",
    "end": "1932179"
  },
  {
    "text": "instead of having this username password business maybe I want to use a login provider like Google oauth or Facebook",
    "start": "1932179",
    "end": "1939260"
  },
  {
    "text": "oauth that's easy too so I can do meteor ad accounts Google for example",
    "start": "1939260",
    "end": "1947919"
  },
  {
    "text": "and I go back to my application and let me sign out as a user",
    "start": "1948440",
    "end": "1956840"
  },
  {
    "text": "and I now have this Google login option in addition to my password but it's not configured yet so there's a little",
    "start": "1956840",
    "end": "1962659"
  },
  {
    "text": "wizard that I'm going to get that lets me configure it and if I click on that I get this this little dialog that sort of explains",
    "start": "1962659",
    "end": "1969500"
  },
  {
    "text": "to me what the drill is if you've used oauth this is going to look really familiar you base with oauth 2 you're",
    "start": "1969500",
    "end": "1975440"
  },
  {
    "text": "going to get a client ID which represents the the application on the provider side and you're going to get a",
    "start": "1975440",
    "end": "1982220"
  },
  {
    "text": "secret that's only known to the provider and to your application",
    "start": "1982220",
    "end": "1987860"
  },
  {
    "text": "um so you can go to code.google.com and create a new project I like Google because it's very easy to do some of the",
    "start": "1987860",
    "end": "1993980"
  },
  {
    "text": "other providers are hard to follow um I am going to",
    "start": "1993980",
    "end": "2000460"
  },
  {
    "text": "um I stashed away my existing apps",
    "start": "2000460",
    "end": "2006340"
  },
  {
    "text": "information so let me just copy that in here so again just the identifier for",
    "start": "2006340",
    "end": "2012519"
  },
  {
    "text": "the oauth app that I have at Google and the secret for",
    "start": "2012519",
    "end": "2018460"
  },
  {
    "text": "the app at Google and I save my configuration and now I'm all set",
    "start": "2018460",
    "end": "2024039"
  },
  {
    "text": "so now I can sign with Google so um I click sign in I get the pop-up",
    "start": "2024039",
    "end": "2030039"
  },
  {
    "text": "you've seen this before I guess I'm already signed it as meteor now I'm logged in and I got my green circles back",
    "start": "2030039",
    "end": "2037179"
  },
  {
    "text": "um it even knows my name right because oauth providers give you certain data as part of the oauth process",
    "start": "2037179",
    "end": "2045640"
  },
  {
    "text": "I don't know any other framework that lets me log in quite this fast right and the cool thing is the same",
    "start": "2045640",
    "end": "2051940"
  },
  {
    "text": "logic I can use to inspect the state of my login status on the server the way",
    "start": "2051940",
    "end": "2057158"
  },
  {
    "text": "that publish changed Behavior based on who I was applies to both the the username",
    "start": "2057159",
    "end": "2064240"
  },
  {
    "text": "password style that I used as well as the the use of another provider",
    "start": "2064240",
    "end": "2069580"
  },
  {
    "text": "right so I can um I can vary my whole application based on this yeah the question is about the",
    "start": "2069580",
    "end": "2075280"
  },
  {
    "text": "wizard um you can also configure that in code um I think like WordPress or someone a long time ago",
    "start": "2075280",
    "end": "2081460"
  },
  {
    "text": "sort of started this trend right the first time you deploy an app it it gives you that magic configuration box",
    "start": "2081460",
    "end": "2088300"
  },
  {
    "text": "um I think in most cases that works really well but you can turn that off if you're worried about",
    "start": "2088300",
    "end": "2094060"
  },
  {
    "text": "yeah I mean presumably you're on the ball right it's your app and you're you're the one",
    "start": "2094060",
    "end": "2099099"
  },
  {
    "text": "deploying it but no it's fair question so you don't have to use that wizard um but one of our philosophies is let's",
    "start": "2099099",
    "end": "2105520"
  },
  {
    "text": "make it really easy for for people to get started let's not let things like oauth is a pain or you know I don't want",
    "start": "2105520",
    "end": "2113140"
  },
  {
    "text": "to have to worry about security when I first build my app I just want to like play with an interface because it's",
    "start": "2113140",
    "end": "2118180"
  },
  {
    "text": "going to take me a while to even understand what my data model looks like it's why we like because you don't",
    "start": "2118180",
    "end": "2123640"
  },
  {
    "text": "have to define a schema and you can play with different ideas very flexibly and I think",
    "start": "2123640",
    "end": "2129160"
  },
  {
    "text": "um you know the the meteor D3 combination even as goofy as this is I",
    "start": "2129160",
    "end": "2136540"
  },
  {
    "text": "think shows you sort of how interesting it can be to work with live sets of data that are changing where you have",
    "start": "2136540",
    "end": "2142240"
  },
  {
    "text": "different permissions or different sets of users that can see different information",
    "start": "2142240",
    "end": "2147000"
  },
  {
    "text": "the question is what are the dependencies for meteor um so we implemented support from first",
    "start": "2148480",
    "end": "2156760"
  },
  {
    "text": "just because of its popularity there's nothing in meteor that requires in",
    "start": "2156760",
    "end": "2162220"
  },
  {
    "text": "terms of the architecture we just haven't written the connectors for other things so I could have done this whole",
    "start": "2162220",
    "end": "2167859"
  },
  {
    "text": "demo typing SQL queries in the browser and talking to a SQL database here on the screen we just",
    "start": "2167859",
    "end": "2174339"
  },
  {
    "text": "haven't built that that binding the SQL implementation that will let you do that",
    "start": "2174339",
    "end": "2179520"
  },
  {
    "text": "so you know SQL redis Dynamo all of these things I think make",
    "start": "2179520",
    "end": "2185260"
  },
  {
    "text": "sense it's just that is such a good fit and when we first built meteor",
    "start": "2185260",
    "end": "2190900"
  },
  {
    "text": "we wanted to pick the one that was was most helpful in terms of other dependencies we try to",
    "start": "2190900",
    "end": "2196300"
  },
  {
    "text": "keep it pretty self-contained I mean we use a lot of Technology but meteor is a one install thing you don't have to go",
    "start": "2196300",
    "end": "2202480"
  },
  {
    "text": "find a bunch of stuff so node.js of course which is the server JavaScript environment handlebars I mentioned for",
    "start": "2202480",
    "end": "2208900"
  },
  {
    "text": "templating the database comes with meteor I mean this demo itself has D3 and",
    "start": "2208900",
    "end": "2215140"
  },
  {
    "text": "jQuery and a couple other libraries and those are all included as packages so there's there's a large set of things that we use but we try to make the",
    "start": "2215140",
    "end": "2222400"
  },
  {
    "text": "development experience very simple and contained ah okay so the question is what do we do in a hot code deploy if if",
    "start": "2222400",
    "end": "2227920"
  },
  {
    "text": "basically you pull the rug out from under the user um it's a good question so uh I'll show",
    "start": "2227920",
    "end": "2233859"
  },
  {
    "text": "you the way that's implemented um just just real quick so um",
    "start": "2233859",
    "end": "2239619"
  },
  {
    "text": "on the client you have a session object and session is just a basic dictionary",
    "start": "2239619",
    "end": "2245619"
  },
  {
    "text": "that you can get and set data from so I can do session set you know example",
    "start": "2245619",
    "end": "2251859"
  },
  {
    "text": "to be 10. and then I can do session dot get",
    "start": "2251859",
    "end": "2258180"
  },
  {
    "text": "example and I get back 10. right very very simple",
    "start": "2258400",
    "end": "2263560"
  },
  {
    "text": "it's not persistent on the server it's not copied to any other client if I went to Safari and did session get example it",
    "start": "2263560",
    "end": "2270280"
  },
  {
    "text": "would be undefined because it's separate if I go to my app and I just make a",
    "start": "2270280",
    "end": "2275380"
  },
  {
    "text": "change and save and I do a hot code push and you saw the browser flicker right the only way to do a hot code push is",
    "start": "2275380",
    "end": "2280480"
  },
  {
    "text": "actually to reload the browser right now there's something that will change eventually um",
    "start": "2280480",
    "end": "2287400"
  },
  {
    "text": "my session is still 10. so session is a module in meteor that",
    "start": "2287680",
    "end": "2293440"
  },
  {
    "text": "cooperates with hot code push to serialize all of its data before being",
    "start": "2293440",
    "end": "2298980"
  },
  {
    "text": "reset by the browser refresh and then re-establishes those values",
    "start": "2298980",
    "end": "2305079"
  },
  {
    "text": "that's the core piece that you would use to implement a modal so you'd have a dialogue and you'd have a session",
    "start": "2305079",
    "end": "2310540"
  },
  {
    "text": "variable that basically said whether or not the dialogue was on the screen right so typically in a hot code push if the",
    "start": "2310540",
    "end": "2317140"
  },
  {
    "text": "dialogue's up on the screen browser refreshes session variable gets re-established the templates that look",
    "start": "2317140",
    "end": "2322900"
  },
  {
    "text": "for that session variable are redrawn and everything is as it was if you just outright remove the template",
    "start": "2322900",
    "end": "2328660"
  },
  {
    "text": "then you know it it it's whatever your app would put the user in with that state so that's that's just an",
    "start": "2328660",
    "end": "2334960"
  },
  {
    "text": "application decision but again I would stress how important that is because you know think about a",
    "start": "2334960",
    "end": "2341320"
  },
  {
    "text": "modal and think about you know someone's in the middle of doing something and all of a sudden they're not",
    "start": "2341320",
    "end": "2347619"
  },
  {
    "text": "right that's that's not okay in a world where we're trying to deploy every hour",
    "start": "2347619",
    "end": "2353099"
  },
  {
    "text": "the question is about statefulness on the server so the real estate is in the  database and what I've been",
    "start": "2353980",
    "end": "2359140"
  },
  {
    "text": "showing you um in fact I I cannot resist doing this demo because it's just it's so much fun",
    "start": "2359140",
    "end": "2365200"
  },
  {
    "text": "so okay my app is still running I'll go back to localhost I forget what bizarre State I've left",
    "start": "2365200",
    "end": "2371619"
  },
  {
    "text": "the world in okay I can create some circles and uh they appear on",
    "start": "2371619",
    "end": "2380640"
  },
  {
    "text": "Safari at the same time okay I'm gonna kill the server I'm just gonna",
    "start": "2381940",
    "end": "2387940"
  },
  {
    "text": "kill the node process completely um",
    "start": "2387940",
    "end": "2392940"
  },
  {
    "text": "first interesting thing is I can still create circles why because number one my app is running",
    "start": "2393220",
    "end": "2399640"
  },
  {
    "text": "on my browser so it's unaffected the ha story for a client-side application is really interesting right because you",
    "start": "2399640",
    "end": "2405400"
  },
  {
    "text": "have brains on the client and it can make some smart decisions so I can still take some actions and I'm simulating",
    "start": "2405400",
    "end": "2411940"
  },
  {
    "text": "remember what's really happening is I'm doing an RPC to the server to insert a new record while I'm simulating that on",
    "start": "2411940",
    "end": "2417099"
  },
  {
    "text": "the client so the client merrily goes along assuming the insert is going to succeed",
    "start": "2417099",
    "end": "2422740"
  },
  {
    "text": "which it will and goes ahead and puts that circle on the screen of course that",
    "start": "2422740",
    "end": "2428140"
  },
  {
    "text": "is not reflected on the other browsers because there's absolutely no connection and I can even",
    "start": "2428140",
    "end": "2434619"
  },
  {
    "text": "um I can do meteor dot I think it's status",
    "start": "2434619",
    "end": "2440020"
  },
  {
    "text": "dot status this is sort of an embarrassing okay so the status of the connection is waiting I'm no longer",
    "start": "2440020",
    "end": "2445780"
  },
  {
    "text": "connected to the server and then I can rerun the server and again there's no State left over",
    "start": "2445780",
    "end": "2452800"
  },
  {
    "text": "um and what's going to happen here is that the browsers are gonna they're they're",
    "start": "2452800",
    "end": "2458200"
  },
  {
    "text": "checking every so often it's like an exponential back off like you'd expect um but if all goes well what you're",
    "start": "2458200",
    "end": "2464920"
  },
  {
    "text": "going to see is um",
    "start": "2464920",
    "end": "2470640"
  },
  {
    "text": "let me just force it and there now all the data has been",
    "start": "2475839",
    "end": "2482619"
  },
  {
    "text": "saved to the server and transmitted over so so the question is what happened on that reconnect and again that gets back",
    "start": "2482619",
    "end": "2488440"
  },
  {
    "text": "to what I was talking about having a stateful protocol so a couple of really important things happened in this demonstration with that protocol one is",
    "start": "2488440",
    "end": "2495400"
  },
  {
    "text": "that the clients retry rpcs and they're reliable right so until they hear a",
    "start": "2495400",
    "end": "2501160"
  },
  {
    "text": "result from the server they're going to hold on to that cued RPC and we had three or four of them queued up with",
    "start": "2501160",
    "end": "2506560"
  },
  {
    "text": "each insert until they were finally um reconnected to the server and and ran",
    "start": "2506560",
    "end": "2515020"
  },
  {
    "text": "right and the other half of the question is you want a stateful protocol and that protocol has to survive transport",
    "start": "2515020",
    "end": "2520540"
  },
  {
    "text": "failure so the um in this case I'm not signed in so",
    "start": "2520540",
    "end": "2526540"
  },
  {
    "text": "there's not a whole lot of client State actually but we could have done that demo I mean I was logged in on the left",
    "start": "2526540",
    "end": "2532720"
  },
  {
    "text": "and that survived the reconnect so thank you thank you very much",
    "start": "2532720",
    "end": "2538680"
  }
]