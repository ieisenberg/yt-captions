[
  {
    "text": "[Music]",
    "start": "3360",
    "end": "6550"
  },
  {
    "text": "how to tame your service apis",
    "start": "9840",
    "end": "12400"
  },
  {
    "text": "evolving airbnb's architecture",
    "start": "12400",
    "end": "16400"
  },
  {
    "text": "in the beginning of airbnb our",
    "start": "16400",
    "end": "18400"
  },
  {
    "text": "architecture is really simple",
    "start": "18400",
    "end": "20080"
  },
  {
    "text": "it was a single ruby on rails monolithic",
    "start": "20080",
    "end": "22880"
  },
  {
    "text": "application known as monorail",
    "start": "22880",
    "end": "25840"
  },
  {
    "text": "let's represent our architecture as a",
    "start": "25840",
    "end": "28160"
  },
  {
    "text": "rope if you imagine it",
    "start": "28160",
    "end": "30240"
  },
  {
    "text": "it would be a single rope easy to follow",
    "start": "30240",
    "end": "32640"
  },
  {
    "text": "and easy to detangle",
    "start": "32640",
    "end": "35760"
  },
  {
    "text": "however as developers were adding code",
    "start": "36399",
    "end": "39520"
  },
  {
    "text": "into monorail",
    "start": "39520",
    "end": "40879"
  },
  {
    "text": "over many years that simple rope soon",
    "start": "40879",
    "end": "43680"
  },
  {
    "text": "turned",
    "start": "43680",
    "end": "44000"
  },
  {
    "text": "into a complicated knot monorail",
    "start": "44000",
    "end": "47360"
  },
  {
    "text": "became hard to understand and hard to be",
    "start": "47360",
    "end": "49760"
  },
  {
    "text": "productive in",
    "start": "49760",
    "end": "51280"
  },
  {
    "text": "engineers would groan when they had to",
    "start": "51280",
    "end": "52879"
  },
  {
    "text": "make a change and deploy monorail",
    "start": "52879",
    "end": "55680"
  },
  {
    "text": "it was clear we needed to figure out how",
    "start": "55680",
    "end": "57600"
  },
  {
    "text": "to untangle this spaghetti mess",
    "start": "57600",
    "end": "61680"
  },
  {
    "text": "the solution we came to was migrating to",
    "start": "61760",
    "end": "65198"
  },
  {
    "text": "service oriented architecture",
    "start": "65199",
    "end": "66799"
  },
  {
    "text": "or soa soa organized this massive",
    "start": "66799",
    "end": "70479"
  },
  {
    "text": "monorail lot into separate encapsulated",
    "start": "70479",
    "end": "72720"
  },
  {
    "text": "services",
    "start": "72720",
    "end": "73600"
  },
  {
    "text": "shown here as different pieces of rope",
    "start": "73600",
    "end": "76640"
  },
  {
    "text": "our first version of sva looked very",
    "start": "76640",
    "end": "78400"
  },
  {
    "text": "similar to the model view and controller",
    "start": "78400",
    "end": "80240"
  },
  {
    "text": "layers of monorail",
    "start": "80240",
    "end": "81520"
  },
  {
    "text": "and helped us get us through the growing",
    "start": "81520",
    "end": "83759"
  },
  {
    "text": "pains at the time however",
    "start": "83759",
    "end": "86640"
  },
  {
    "text": "eventually new challenges appeared",
    "start": "86640",
    "end": "90720"
  },
  {
    "text": "as we had developed hundreds of services",
    "start": "90720",
    "end": "94079"
  },
  {
    "text": "what used to look modular and clean now",
    "start": "94079",
    "end": "97040"
  },
  {
    "text": "is beginning to a complicated series of",
    "start": "97040",
    "end": "99200"
  },
  {
    "text": "twists and knots once more",
    "start": "99200",
    "end": "102640"
  },
  {
    "text": "and this is where my team comes in hi my",
    "start": "103280",
    "end": "106159"
  },
  {
    "text": "name is jessica and i'm a tech lead",
    "start": "106159",
    "end": "107840"
  },
  {
    "text": "manager of the users infrastructure team",
    "start": "107840",
    "end": "110479"
  },
  {
    "text": "i've been at airbnb for over six years",
    "start": "110479",
    "end": "112720"
  },
  {
    "text": "and i've seen the various",
    "start": "112720",
    "end": "113840"
  },
  {
    "text": "evolutions of our architecture and",
    "start": "113840",
    "end": "116159"
  },
  {
    "text": "services",
    "start": "116159",
    "end": "117600"
  },
  {
    "text": "my team is responsible for helping to",
    "start": "117600",
    "end": "120000"
  },
  {
    "text": "design",
    "start": "120000",
    "end": "120640"
  },
  {
    "text": "that next generation of architecture",
    "start": "120640",
    "end": "122799"
  },
  {
    "text": "focusing on the",
    "start": "122799",
    "end": "124159"
  },
  {
    "text": "user entity and domain i gave a talk at",
    "start": "124159",
    "end": "127920"
  },
  {
    "text": "qcon",
    "start": "127920",
    "end": "128640"
  },
  {
    "text": "sf two years ago about our migration",
    "start": "128640",
    "end": "131280"
  },
  {
    "text": "from monolith",
    "start": "131280",
    "end": "132160"
  },
  {
    "text": "to services this talk will be different",
    "start": "132160",
    "end": "134879"
  },
  {
    "text": "it'll be adding on",
    "start": "134879",
    "end": "136239"
  },
  {
    "text": "the next chapter of our service",
    "start": "136239",
    "end": "138160"
  },
  {
    "text": "architectural journey",
    "start": "138160",
    "end": "142000"
  },
  {
    "text": "i'll open by describing some of the",
    "start": "142000",
    "end": "143760"
  },
  {
    "text": "scaling challenges that we were facing",
    "start": "143760",
    "end": "145440"
  },
  {
    "text": "with service oriented architecture",
    "start": "145440",
    "end": "149040"
  },
  {
    "text": "i'll then move into some of the design",
    "start": "149040",
    "end": "150800"
  },
  {
    "text": "principles that we created",
    "start": "150800",
    "end": "152239"
  },
  {
    "text": "to help us with our second iteration of",
    "start": "152239",
    "end": "154840"
  },
  {
    "text": "soa",
    "start": "154840",
    "end": "157519"
  },
  {
    "text": "i'll then dive into some of the",
    "start": "157519",
    "end": "158800"
  },
  {
    "text": "technical details of our abstraction",
    "start": "158800",
    "end": "160560"
  },
  {
    "text": "apis",
    "start": "160560",
    "end": "161440"
  },
  {
    "text": "focus on essential data aggregator as",
    "start": "161440",
    "end": "163440"
  },
  {
    "text": "well as service blocks",
    "start": "163440",
    "end": "166400"
  },
  {
    "text": "and then i'll discuss some of the ways",
    "start": "167360",
    "end": "168959"
  },
  {
    "text": "that we operate our apis and the tools",
    "start": "168959",
    "end": "170640"
  },
  {
    "text": "that we use to build",
    "start": "170640",
    "end": "172239"
  },
  {
    "text": "and maintain these new api patterns",
    "start": "172239",
    "end": "176560"
  },
  {
    "text": "with services we originally migrated",
    "start": "178879",
    "end": "181120"
  },
  {
    "text": "them to address the scaling problems of",
    "start": "181120",
    "end": "182800"
  },
  {
    "text": "monorail",
    "start": "182800",
    "end": "183760"
  },
  {
    "text": "but having hundreds of services created",
    "start": "183760",
    "end": "186720"
  },
  {
    "text": "different types of scaling challenges as",
    "start": "186720",
    "end": "188319"
  },
  {
    "text": "well",
    "start": "188319",
    "end": "190560"
  },
  {
    "text": "and the skill and challenges were really",
    "start": "191440",
    "end": "193519"
  },
  {
    "text": "motivated by growth",
    "start": "193519",
    "end": "195280"
  },
  {
    "text": "growth growth growth this is what our",
    "start": "195280",
    "end": "197680"
  },
  {
    "text": "cto told our homes architecture working",
    "start": "197680",
    "end": "199840"
  },
  {
    "text": "group",
    "start": "199840",
    "end": "200400"
  },
  {
    "text": "when we're figuring out how to continue",
    "start": "200400",
    "end": "202400"
  },
  {
    "text": "expanding our business and expanding our",
    "start": "202400",
    "end": "204239"
  },
  {
    "text": "engineering team",
    "start": "204239",
    "end": "205840"
  },
  {
    "text": "growth has been a driving factor and",
    "start": "205840",
    "end": "207519"
  },
  {
    "text": "motivator for our architecture",
    "start": "207519",
    "end": "210840"
  },
  {
    "text": "migrations",
    "start": "210840",
    "end": "213120"
  },
  {
    "text": "from this graph here we can see that our",
    "start": "213120",
    "end": "214720"
  },
  {
    "text": "service and engineering team are both",
    "start": "214720",
    "end": "216400"
  },
  {
    "text": "growing",
    "start": "216400",
    "end": "217760"
  },
  {
    "text": "in 2016 when we began the migration from",
    "start": "217760",
    "end": "220799"
  },
  {
    "text": "monolith into services",
    "start": "220799",
    "end": "222480"
  },
  {
    "text": "we had around 500 engineers at the end",
    "start": "222480",
    "end": "225440"
  },
  {
    "text": "of 2016 we had less than 100 services",
    "start": "225440",
    "end": "229680"
  },
  {
    "text": "now in 2020 we have over 500 services",
    "start": "229680",
    "end": "232560"
  },
  {
    "text": "around",
    "start": "232560",
    "end": "233200"
  },
  {
    "text": "2000 engineers so the needs of our team",
    "start": "233200",
    "end": "237040"
  },
  {
    "text": "and the product were changing",
    "start": "237040",
    "end": "241840"
  },
  {
    "text": "unfortunately our services were changing",
    "start": "242239",
    "end": "244319"
  },
  {
    "text": "as well it's beginning",
    "start": "244319",
    "end": "245920"
  },
  {
    "text": "to create a dependency graph that was",
    "start": "245920",
    "end": "248080"
  },
  {
    "text": "really hard",
    "start": "248080",
    "end": "249280"
  },
  {
    "text": "to reason about our developer velocity",
    "start": "249280",
    "end": "253760"
  },
  {
    "text": "was slowing down once again it was",
    "start": "253760",
    "end": "255920"
  },
  {
    "text": "taking engineers longer to build",
    "start": "255920",
    "end": "257600"
  },
  {
    "text": "features and add new data",
    "start": "257600",
    "end": "260639"
  },
  {
    "text": "so keep this picture in mind",
    "start": "260639",
    "end": "264079"
  },
  {
    "text": "and compare it to a snapshot of our",
    "start": "264160",
    "end": "268800"
  },
  {
    "text": "service dependencies as you see here",
    "start": "268800",
    "end": "272880"
  },
  {
    "text": "we have many services connecting to many",
    "start": "272880",
    "end": "275280"
  },
  {
    "text": "other services",
    "start": "275280",
    "end": "276639"
  },
  {
    "text": "having dozens of cascading dependencies",
    "start": "276639",
    "end": "279280"
  },
  {
    "text": "makes a single request",
    "start": "279280",
    "end": "281360"
  },
  {
    "text": "has to go many layers deep for example",
    "start": "281360",
    "end": "285199"
  },
  {
    "text": "a request to an endpoint on our product",
    "start": "285199",
    "end": "287360"
  },
  {
    "text": "description page where you view a home",
    "start": "287360",
    "end": "289440"
  },
  {
    "text": "hits one of our homes data services over",
    "start": "289440",
    "end": "291600"
  },
  {
    "text": "11 times",
    "start": "291600",
    "end": "292479"
  },
  {
    "text": "in addition to calling 29 other services",
    "start": "292479",
    "end": "295840"
  },
  {
    "text": "it's difficult to debug and triage when",
    "start": "295840",
    "end": "298639"
  },
  {
    "text": "the service",
    "start": "298639",
    "end": "299600"
  },
  {
    "text": "dependency graph was so entangled",
    "start": "299600",
    "end": "303759"
  },
  {
    "text": "and having that deep complex call stack",
    "start": "306560",
    "end": "308639"
  },
  {
    "text": "was really impacting",
    "start": "308639",
    "end": "310240"
  },
  {
    "text": "the way that we were working",
    "start": "310240",
    "end": "313440"
  },
  {
    "text": "there are many different integration",
    "start": "313600",
    "end": "315039"
  },
  {
    "text": "points required to make a change",
    "start": "315039",
    "end": "316960"
  },
  {
    "text": "which slowed down on developer velocity",
    "start": "316960",
    "end": "319840"
  },
  {
    "text": "with services owned by different teams",
    "start": "319840",
    "end": "321680"
  },
  {
    "text": "is also create a higher collaboration",
    "start": "321680",
    "end": "323680"
  },
  {
    "text": "overhead",
    "start": "323680",
    "end": "324400"
  },
  {
    "text": "in order to get a feature done",
    "start": "324400",
    "end": "327680"
  },
  {
    "text": "our data and our business logic began to",
    "start": "329520",
    "end": "332240"
  },
  {
    "text": "be fragmented across",
    "start": "332240",
    "end": "333520"
  },
  {
    "text": "multiple services",
    "start": "333520",
    "end": "336560"
  },
  {
    "text": "and we were beginning to see repeated",
    "start": "337280",
    "end": "339039"
  },
  {
    "text": "patterns in",
    "start": "339039",
    "end": "340320"
  },
  {
    "text": "different services for example a lot of",
    "start": "340320",
    "end": "343199"
  },
  {
    "text": "services were made to load different",
    "start": "343199",
    "end": "345039"
  },
  {
    "text": "parts of data and this data loading code",
    "start": "345039",
    "end": "347360"
  },
  {
    "text": "was boilerplate that was very similar to",
    "start": "347360",
    "end": "349360"
  },
  {
    "text": "each other",
    "start": "349360",
    "end": "350960"
  },
  {
    "text": "yet we had multiple services owned by",
    "start": "350960",
    "end": "352880"
  },
  {
    "text": "different teams having the similar",
    "start": "352880",
    "end": "354560"
  },
  {
    "text": "functionality",
    "start": "354560",
    "end": "357280"
  },
  {
    "text": "this brought us back to the drawing",
    "start": "358000",
    "end": "360240"
  },
  {
    "text": "board how could we",
    "start": "360240",
    "end": "361759"
  },
  {
    "text": "improve upon our service oriented",
    "start": "361759",
    "end": "364840"
  },
  {
    "text": "architecture",
    "start": "364840",
    "end": "367360"
  },
  {
    "text": "and it distilled down to simplification",
    "start": "367360",
    "end": "370240"
  },
  {
    "text": "we needed to simplify",
    "start": "370240",
    "end": "373440"
  },
  {
    "text": "and it was obvious we needed to simplify",
    "start": "375280",
    "end": "377759"
  },
  {
    "text": "our dependency graph",
    "start": "377759",
    "end": "379360"
  },
  {
    "text": "we wanted to reduce the number of",
    "start": "379360",
    "end": "380880"
  },
  {
    "text": "service dependencies remove",
    "start": "380880",
    "end": "382479"
  },
  {
    "text": "circular dependencies and make services",
    "start": "382479",
    "end": "385199"
  },
  {
    "text": "that were more modular",
    "start": "385199",
    "end": "386720"
  },
  {
    "text": "and more clearly defined",
    "start": "386720",
    "end": "390479"
  },
  {
    "text": "we also wanted to simplify the developer",
    "start": "391680",
    "end": "394319"
  },
  {
    "text": "experience",
    "start": "394319",
    "end": "395680"
  },
  {
    "text": "engineers should be able to focus on the",
    "start": "395680",
    "end": "397759"
  },
  {
    "text": "business logic and product requirements",
    "start": "397759",
    "end": "399840"
  },
  {
    "text": "and not so much on the boiler plate of",
    "start": "399840",
    "end": "401759"
  },
  {
    "text": "wiring data up and down stream to",
    "start": "401759",
    "end": "403440"
  },
  {
    "text": "different services",
    "start": "403440",
    "end": "408639"
  },
  {
    "text": "we also wanted to simplify the way that",
    "start": "408639",
    "end": "410720"
  },
  {
    "text": "we were accessing",
    "start": "410720",
    "end": "412240"
  },
  {
    "text": "our data and our endpoints providing",
    "start": "412240",
    "end": "415520"
  },
  {
    "text": "finer grain control",
    "start": "415520",
    "end": "417039"
  },
  {
    "text": "to the visibility of data fields and our",
    "start": "417039",
    "end": "419759"
  },
  {
    "text": "services",
    "start": "419759",
    "end": "420880"
  },
  {
    "text": "would be better protection for not only",
    "start": "420880",
    "end": "423599"
  },
  {
    "text": "our",
    "start": "423599",
    "end": "425280"
  },
  {
    "text": "services but allow us to have better",
    "start": "425280",
    "end": "427840"
  },
  {
    "text": "control of that dependency graph",
    "start": "427840",
    "end": "431280"
  },
  {
    "text": "unless we've created what we call soa v2",
    "start": "433199",
    "end": "437120"
  },
  {
    "text": "this is something that we started at the",
    "start": "437120",
    "end": "438880"
  },
  {
    "text": "end of last year and have been working",
    "start": "438880",
    "end": "440479"
  },
  {
    "text": "this year",
    "start": "440479",
    "end": "441280"
  },
  {
    "text": "to get the initial pilots up and running",
    "start": "441280",
    "end": "445360"
  },
  {
    "text": "the building blocks for our saa v2 focus",
    "start": "446880",
    "end": "449520"
  },
  {
    "text": "on abstraction",
    "start": "449520",
    "end": "452479"
  },
  {
    "text": "we have internal services which we call",
    "start": "452479",
    "end": "455199"
  },
  {
    "text": "presentation services",
    "start": "455199",
    "end": "456720"
  },
  {
    "text": "that are the ones that are responsible",
    "start": "456720",
    "end": "458160"
  },
  {
    "text": "for aggregating the data and providing",
    "start": "458160",
    "end": "460160"
  },
  {
    "text": "it",
    "start": "460160",
    "end": "460479"
  },
  {
    "text": "to a view that our user facing product",
    "start": "460479",
    "end": "463280"
  },
  {
    "text": "then uses",
    "start": "463280",
    "end": "465440"
  },
  {
    "text": "instead of having the presentation",
    "start": "465440",
    "end": "466960"
  },
  {
    "text": "services take on a lot of the business",
    "start": "466960",
    "end": "468960"
  },
  {
    "text": "logic",
    "start": "468960",
    "end": "469440"
  },
  {
    "text": "and fetching of data we've pushed that",
    "start": "469440",
    "end": "471840"
  },
  {
    "text": "down to a layer beneath",
    "start": "471840",
    "end": "474639"
  },
  {
    "text": "into what we call a data aggregator this",
    "start": "474639",
    "end": "477520"
  },
  {
    "text": "service",
    "start": "477520",
    "end": "478080"
  },
  {
    "text": "introduced new apis and new api design",
    "start": "478080",
    "end": "480639"
  },
  {
    "text": "patterns",
    "start": "480639",
    "end": "481360"
  },
  {
    "text": "that allows the aggregation of data to",
    "start": "481360",
    "end": "483440"
  },
  {
    "text": "be",
    "start": "483440",
    "end": "485120"
  },
  {
    "text": "centralized in a single place so that",
    "start": "485120",
    "end": "487919"
  },
  {
    "text": "our presentation services don't need to",
    "start": "487919",
    "end": "489680"
  },
  {
    "text": "duplicate this functionality",
    "start": "489680",
    "end": "492080"
  },
  {
    "text": "our data aggregation service is able to",
    "start": "492080",
    "end": "494000"
  },
  {
    "text": "fetch for multiple data entities",
    "start": "494000",
    "end": "496080"
  },
  {
    "text": "some are which powered by service blocks",
    "start": "496080",
    "end": "500400"
  },
  {
    "text": "service blocks which i'll talk about",
    "start": "500400",
    "end": "502240"
  },
  {
    "text": "more later also introduce",
    "start": "502240",
    "end": "503840"
  },
  {
    "text": "new api design patterns",
    "start": "503840",
    "end": "507840"
  },
  {
    "text": "let's walk through an example of how a",
    "start": "510400",
    "end": "512800"
  },
  {
    "text": "particular product",
    "start": "512800",
    "end": "513839"
  },
  {
    "text": "such as looking at your home reservation",
    "start": "513839",
    "end": "516560"
  },
  {
    "text": "may look like an soa v1",
    "start": "516560",
    "end": "518640"
  },
  {
    "text": "and then we'll look at it from the v2",
    "start": "518640",
    "end": "520640"
  },
  {
    "text": "tech stack",
    "start": "520640",
    "end": "523200"
  },
  {
    "text": "in the reservation page you might want",
    "start": "524880",
    "end": "526560"
  },
  {
    "text": "to know what your reservation check-in",
    "start": "526560",
    "end": "528399"
  },
  {
    "text": "date is",
    "start": "528399",
    "end": "530800"
  },
  {
    "text": "there would also be information about",
    "start": "530880",
    "end": "532959"
  },
  {
    "text": "the guest and host",
    "start": "532959",
    "end": "534320"
  },
  {
    "text": "user photos and also the host username",
    "start": "534320",
    "end": "539360"
  },
  {
    "text": "putting this into sv1 resulted into a",
    "start": "540480",
    "end": "543279"
  },
  {
    "text": "lot of tedious data loading",
    "start": "543279",
    "end": "545120"
  },
  {
    "text": "and relationships between these entities",
    "start": "545120",
    "end": "548080"
  },
  {
    "text": "that presentation service",
    "start": "548080",
    "end": "549680"
  },
  {
    "text": "would then call to the reservation",
    "start": "549680",
    "end": "551200"
  },
  {
    "text": "service to get that check-in date",
    "start": "551200",
    "end": "553760"
  },
  {
    "text": "it also would need to fetch the host",
    "start": "553760",
    "end": "555839"
  },
  {
    "text": "user id and guest user id for this",
    "start": "555839",
    "end": "557760"
  },
  {
    "text": "particular reservation",
    "start": "557760",
    "end": "559600"
  },
  {
    "text": "so then it could go fetch out from the",
    "start": "559600",
    "end": "561279"
  },
  {
    "text": "user and use your photo",
    "start": "561279",
    "end": "563519"
  },
  {
    "text": "services in parallel with those ids",
    "start": "563519",
    "end": "568240"
  },
  {
    "text": "the relationships between these entities",
    "start": "568240",
    "end": "570240"
  },
  {
    "text": "such as reservation",
    "start": "570240",
    "end": "571360"
  },
  {
    "text": "to user or user to user photo",
    "start": "571360",
    "end": "574560"
  },
  {
    "text": "created a graph like structure",
    "start": "574560",
    "end": "578160"
  },
  {
    "text": "however it was not natural to represent",
    "start": "579040",
    "end": "581839"
  },
  {
    "text": "this type of multi-entity query",
    "start": "581839",
    "end": "584080"
  },
  {
    "text": "with a single thrift query all our",
    "start": "584080",
    "end": "586959"
  },
  {
    "text": "services",
    "start": "586959",
    "end": "588000"
  },
  {
    "text": "in syv1 were using thrift apis",
    "start": "588000",
    "end": "592560"
  },
  {
    "text": "so instead we had many presentation",
    "start": "593600",
    "end": "596720"
  },
  {
    "text": "servers calling many other",
    "start": "596720",
    "end": "599040"
  },
  {
    "text": "of the data entities in different",
    "start": "599040",
    "end": "600880"
  },
  {
    "text": "combinations",
    "start": "600880",
    "end": "602079"
  },
  {
    "text": "but really it was a lot of boilerplate",
    "start": "602079",
    "end": "605200"
  },
  {
    "text": "to fetch this data there are some light",
    "start": "605200",
    "end": "607920"
  },
  {
    "text": "business logic",
    "start": "607920",
    "end": "608880"
  },
  {
    "text": "applied on top of the data fetched but",
    "start": "608880",
    "end": "611360"
  },
  {
    "text": "we're recognizing that our presentation",
    "start": "611360",
    "end": "613040"
  },
  {
    "text": "services had a lot of similar patterns",
    "start": "613040",
    "end": "615600"
  },
  {
    "text": "and similar query waste where they",
    "start": "615600",
    "end": "617440"
  },
  {
    "text": "wanted information from multiple",
    "start": "617440",
    "end": "618880"
  },
  {
    "text": "entities",
    "start": "618880",
    "end": "621440"
  },
  {
    "text": "thus this was the motivation for",
    "start": "622320",
    "end": "623839"
  },
  {
    "text": "creating our",
    "start": "623839",
    "end": "625440"
  },
  {
    "text": "sva v2 aggregator",
    "start": "625440",
    "end": "629040"
  },
  {
    "text": "we decided to create this data",
    "start": "629040",
    "end": "630959"
  },
  {
    "text": "aggregator",
    "start": "630959",
    "end": "632079"
  },
  {
    "text": "by using a graphql interface",
    "start": "632079",
    "end": "635279"
  },
  {
    "text": "graphql offers a more expressive query",
    "start": "635279",
    "end": "637279"
  },
  {
    "text": "language for apis and a way to express",
    "start": "637279",
    "end": "640160"
  },
  {
    "text": "the data modeling and ecosystem it",
    "start": "640160",
    "end": "643279"
  },
  {
    "text": "allows for runtime population",
    "start": "643279",
    "end": "645279"
  },
  {
    "text": "of the query with the existing datas",
    "start": "645279",
    "end": "648480"
  },
  {
    "text": "and allows for these query structures to",
    "start": "648480",
    "end": "651200"
  },
  {
    "text": "be populated",
    "start": "651200",
    "end": "652320"
  },
  {
    "text": "in the shape of the desired response",
    "start": "652320",
    "end": "656000"
  },
  {
    "text": "so if we take our graphql query for the",
    "start": "657839",
    "end": "660880"
  },
  {
    "text": "reservation information",
    "start": "660880",
    "end": "662160"
  },
  {
    "text": "asking about the check-in and some basic",
    "start": "662160",
    "end": "665120"
  },
  {
    "text": "guest",
    "start": "665120",
    "end": "665680"
  },
  {
    "text": "data we send it to the aggregation",
    "start": "665680",
    "end": "668640"
  },
  {
    "text": "service",
    "start": "668640",
    "end": "670079"
  },
  {
    "text": "which has resolvers that knows where to",
    "start": "670079",
    "end": "672160"
  },
  {
    "text": "fetch these fields from",
    "start": "672160",
    "end": "673760"
  },
  {
    "text": "the resolvers also provide us a location",
    "start": "673760",
    "end": "676800"
  },
  {
    "text": "to put lightweight",
    "start": "676800",
    "end": "678160"
  },
  {
    "text": "business logic as well",
    "start": "678160",
    "end": "681199"
  },
  {
    "text": "we've added some",
    "start": "684000",
    "end": "686959"
  },
  {
    "text": "optimizations on the resolver and if we",
    "start": "687120",
    "end": "689839"
  },
  {
    "text": "recognize",
    "start": "689839",
    "end": "690480"
  },
  {
    "text": "that multiple resolvers are fetching",
    "start": "690480",
    "end": "692399"
  },
  {
    "text": "from the same data source",
    "start": "692399",
    "end": "693680"
  },
  {
    "text": "we'll batch those together and make a",
    "start": "693680",
    "end": "695279"
  },
  {
    "text": "single query to the underlighting",
    "start": "695279",
    "end": "698000"
  },
  {
    "text": "service and this helps with performance",
    "start": "698000",
    "end": "700800"
  },
  {
    "text": "and scalability",
    "start": "700800",
    "end": "702320"
  },
  {
    "text": "it reduces the number of callers to our",
    "start": "702320",
    "end": "704399"
  },
  {
    "text": "data service",
    "start": "704399",
    "end": "705519"
  },
  {
    "text": "and creates fewer downstream requests",
    "start": "705519",
    "end": "709600"
  },
  {
    "text": "however remember before when there were",
    "start": "710240",
    "end": "712880"
  },
  {
    "text": "hundreds of services",
    "start": "712880",
    "end": "714639"
  },
  {
    "text": "this means that the data aggregation",
    "start": "714639",
    "end": "716320"
  },
  {
    "text": "service would still need to talk to",
    "start": "716320",
    "end": "717680"
  },
  {
    "text": "hundreds of other services to fetch the",
    "start": "717680",
    "end": "719440"
  },
  {
    "text": "data from",
    "start": "719440",
    "end": "720160"
  },
  {
    "text": "and know where the business logic lives",
    "start": "720160",
    "end": "722720"
  },
  {
    "text": "so we're wondering how could we",
    "start": "722720",
    "end": "724320"
  },
  {
    "text": "further simplify the graph",
    "start": "724320",
    "end": "731279"
  },
  {
    "text": "and to do this we created an entity",
    "start": "731279",
    "end": "734079"
  },
  {
    "text": "known as service blocks",
    "start": "734079",
    "end": "736000"
  },
  {
    "text": "we may have a user service block which",
    "start": "736000",
    "end": "738399"
  },
  {
    "text": "should be responsible",
    "start": "738399",
    "end": "739760"
  },
  {
    "text": "for having information about the user's",
    "start": "739760",
    "end": "742800"
  },
  {
    "text": "first name and their picture",
    "start": "742800",
    "end": "744320"
  },
  {
    "text": "we could have a home service block and a",
    "start": "744320",
    "end": "746000"
  },
  {
    "text": "reservation service block",
    "start": "746000",
    "end": "748720"
  },
  {
    "text": "and if we go into what a service block",
    "start": "748720",
    "end": "750560"
  },
  {
    "text": "is it's",
    "start": "750560",
    "end": "752320"
  },
  {
    "text": "a collection of a logical grouping of",
    "start": "752320",
    "end": "756399"
  },
  {
    "text": "services",
    "start": "756399",
    "end": "757040"
  },
  {
    "text": "focused on a single core entity",
    "start": "757040",
    "end": "759600"
  },
  {
    "text": "providing",
    "start": "759600",
    "end": "760240"
  },
  {
    "text": "a cohesive domain around business logic",
    "start": "760240",
    "end": "762320"
  },
  {
    "text": "for that particular entity",
    "start": "762320",
    "end": "764560"
  },
  {
    "text": "we would have a facade service which",
    "start": "764560",
    "end": "766959"
  },
  {
    "text": "exposes a unified api",
    "start": "766959",
    "end": "769360"
  },
  {
    "text": "and schema everything beneath the",
    "start": "769360",
    "end": "771920"
  },
  {
    "text": "service is considered a black box",
    "start": "771920",
    "end": "774160"
  },
  {
    "text": "to the client and this helps to simplify",
    "start": "774160",
    "end": "778480"
  },
  {
    "text": "the developer experience",
    "start": "778480",
    "end": "780399"
  },
  {
    "text": "now our client services just need to",
    "start": "780399",
    "end": "782160"
  },
  {
    "text": "query this one facade service api",
    "start": "782160",
    "end": "784800"
  },
  {
    "text": "and they don't care about the underlying",
    "start": "784800",
    "end": "786880"
  },
  {
    "text": "internals",
    "start": "786880",
    "end": "788880"
  },
  {
    "text": "of how the services may actually work",
    "start": "788880",
    "end": "791360"
  },
  {
    "text": "the client gets a holistic picture",
    "start": "791360",
    "end": "793680"
  },
  {
    "text": "of the entity such as a user entity",
    "start": "793680",
    "end": "796639"
  },
  {
    "text": "while the facade service is responsible",
    "start": "796639",
    "end": "798959"
  },
  {
    "text": "for fanning out the request into",
    "start": "798959",
    "end": "800959"
  },
  {
    "text": "fetching it from our existing services",
    "start": "800959",
    "end": "804480"
  },
  {
    "text": "these internal services are abstracted",
    "start": "804480",
    "end": "806560"
  },
  {
    "text": "away and encapsulated",
    "start": "806560",
    "end": "808959"
  },
  {
    "text": "so a question could be asked is doesn't",
    "start": "808959",
    "end": "810800"
  },
  {
    "text": "this introduce an additional layer and",
    "start": "810800",
    "end": "812720"
  },
  {
    "text": "network hop",
    "start": "812720",
    "end": "815360"
  },
  {
    "text": "well the collection of services that are",
    "start": "815519",
    "end": "817440"
  },
  {
    "text": "focused on some same core",
    "start": "817440",
    "end": "819839"
  },
  {
    "text": "entity often have data that's query",
    "start": "819839",
    "end": "823360"
  },
  {
    "text": "together",
    "start": "823360",
    "end": "824480"
  },
  {
    "text": "so by putting them together behind a",
    "start": "824480",
    "end": "826560"
  },
  {
    "text": "single facade we're able to turn that",
    "start": "826560",
    "end": "828399"
  },
  {
    "text": "single query",
    "start": "828399",
    "end": "829360"
  },
  {
    "text": "in a fan out in an optimal way similar",
    "start": "829360",
    "end": "831600"
  },
  {
    "text": "to the batching",
    "start": "831600",
    "end": "832720"
  },
  {
    "text": "that the data aggregator service",
    "start": "832720",
    "end": "836720"
  },
  {
    "text": "provides",
    "start": "836720",
    "end": "838000"
  },
  {
    "text": "this allows us to further optimize in",
    "start": "838000",
    "end": "841040"
  },
  {
    "text": "looking at the query patterns",
    "start": "841040",
    "end": "842399"
  },
  {
    "text": "the internal services to perhaps",
    "start": "842399",
    "end": "844160"
  },
  {
    "text": "refactor or consolidate them",
    "start": "844160",
    "end": "846160"
  },
  {
    "text": "in a way that's abstracted away from the",
    "start": "846160",
    "end": "848000"
  },
  {
    "text": "client we can optimize",
    "start": "848000",
    "end": "850079"
  },
  {
    "text": "the internal blocks without impacting",
    "start": "850079",
    "end": "852720"
  },
  {
    "text": "all the hundreds of clients that may",
    "start": "852720",
    "end": "854240"
  },
  {
    "text": "be depending on this facade service",
    "start": "854240",
    "end": "858240"
  },
  {
    "text": "in our goalie channels we often get the",
    "start": "861040",
    "end": "863600"
  },
  {
    "text": "question of",
    "start": "863600",
    "end": "864320"
  },
  {
    "text": "does this particular field belong to",
    "start": "864320",
    "end": "866079"
  },
  {
    "text": "service a",
    "start": "866079",
    "end": "867360"
  },
  {
    "text": "or service b",
    "start": "867360",
    "end": "870560"
  },
  {
    "text": "we originally had these data fields in",
    "start": "870560",
    "end": "873839"
  },
  {
    "text": "different services instead of a single",
    "start": "873839",
    "end": "876000"
  },
  {
    "text": "large user service or a single large",
    "start": "876000",
    "end": "878000"
  },
  {
    "text": "home service",
    "start": "878000",
    "end": "879040"
  },
  {
    "text": "because these different fields have",
    "start": "879040",
    "end": "880320"
  },
  {
    "text": "different sla and isolation requirements",
    "start": "880320",
    "end": "882880"
  },
  {
    "text": "however they interact closely since they",
    "start": "882880",
    "end": "884639"
  },
  {
    "text": "are focused on that same",
    "start": "884639",
    "end": "885920"
  },
  {
    "text": "core entity we want to maintain the",
    "start": "885920",
    "end": "888800"
  },
  {
    "text": "separation",
    "start": "888800",
    "end": "889920"
  },
  {
    "text": "of code and thus separate services and",
    "start": "889920",
    "end": "892480"
  },
  {
    "text": "development iterations",
    "start": "892480",
    "end": "893920"
  },
  {
    "text": "but still expose them by the single",
    "start": "893920",
    "end": "895760"
  },
  {
    "text": "facade service api",
    "start": "895760",
    "end": "899839"
  },
  {
    "text": "so why separate these service blocks",
    "start": "901360",
    "end": "903920"
  },
  {
    "text": "from the data aggregator",
    "start": "903920",
    "end": "905199"
  },
  {
    "text": "if they're performing similar",
    "start": "905199",
    "end": "906560"
  },
  {
    "text": "functionality",
    "start": "906560",
    "end": "909360"
  },
  {
    "text": "there are two reasons one is we have",
    "start": "911120",
    "end": "913920"
  },
  {
    "text": "core entities that we wanted to",
    "start": "913920",
    "end": "916240"
  },
  {
    "text": "have as separate code bases as they were",
    "start": "916240",
    "end": "918959"
  },
  {
    "text": "critical for the business",
    "start": "918959",
    "end": "920560"
  },
  {
    "text": "we wanted to reduce the chances of",
    "start": "920560",
    "end": "922720"
  },
  {
    "text": "having a single point of failure",
    "start": "922720",
    "end": "924240"
  },
  {
    "text": "and having service blocks separately",
    "start": "924240",
    "end": "926959"
  },
  {
    "text": "allows for teams to be",
    "start": "926959",
    "end": "928399"
  },
  {
    "text": "developing and entering on each entity",
    "start": "928399",
    "end": "931120"
  },
  {
    "text": "without directly impacting each other",
    "start": "931120",
    "end": "933680"
  },
  {
    "text": "another motivation was that we wanted to",
    "start": "933680",
    "end": "935680"
  },
  {
    "text": "simplify the dependency graph by",
    "start": "935680",
    "end": "937440"
  },
  {
    "text": "organizing blocks",
    "start": "937440",
    "end": "938880"
  },
  {
    "text": "into these larger directed acyclic",
    "start": "938880",
    "end": "940959"
  },
  {
    "text": "graphs",
    "start": "940959",
    "end": "942079"
  },
  {
    "text": "we wanted to remove the cycles in the",
    "start": "942079",
    "end": "944399"
  },
  {
    "text": "existing dependency graph",
    "start": "944399",
    "end": "946560"
  },
  {
    "text": "and reduce the complexity of our soa web",
    "start": "946560",
    "end": "949440"
  },
  {
    "text": "right now",
    "start": "949440",
    "end": "950399"
  },
  {
    "text": "by having these larger encapsulated",
    "start": "950399",
    "end": "952839"
  },
  {
    "text": "blocks",
    "start": "952839",
    "end": "955839"
  },
  {
    "text": "with the hierarchy of our blocks we only",
    "start": "957600",
    "end": "960560"
  },
  {
    "text": "allow",
    "start": "960560",
    "end": "960959"
  },
  {
    "text": "certain online calls from",
    "start": "960959",
    "end": "964399"
  },
  {
    "text": "a particular block to another block and",
    "start": "964399",
    "end": "966880"
  },
  {
    "text": "then that block cannot call reverse",
    "start": "966880",
    "end": "969440"
  },
  {
    "text": "an online call because that would create",
    "start": "969440",
    "end": "971680"
  },
  {
    "text": "a circular dependency",
    "start": "971680",
    "end": "973759"
  },
  {
    "text": "the simplification of our dependency",
    "start": "973759",
    "end": "976560"
  },
  {
    "text": "graph",
    "start": "976560",
    "end": "977199"
  },
  {
    "text": "was a critical motivator for",
    "start": "977199",
    "end": "980399"
  },
  {
    "text": "our design of soa v2",
    "start": "980399",
    "end": "983839"
  },
  {
    "text": "and these abstraction apis help us",
    "start": "984320",
    "end": "987600"
  },
  {
    "text": "by removing the complexity and",
    "start": "987600",
    "end": "989839"
  },
  {
    "text": "underlying services and providing",
    "start": "989839",
    "end": "991680"
  },
  {
    "text": "interfaces to these black boxes",
    "start": "991680",
    "end": "994720"
  },
  {
    "text": "with the extraction apis the services",
    "start": "994720",
    "end": "997360"
  },
  {
    "text": "that column don't need to know",
    "start": "997360",
    "end": "998880"
  },
  {
    "text": "all the internal services schemas and",
    "start": "998880",
    "end": "1000720"
  },
  {
    "text": "endpoints",
    "start": "1000720",
    "end": "1002320"
  },
  {
    "text": "we're able to better provide control for",
    "start": "1002320",
    "end": "1005120"
  },
  {
    "text": "what the public api and the internal",
    "start": "1005120",
    "end": "1007040"
  },
  {
    "text": "services can access",
    "start": "1007040",
    "end": "1010639"
  },
  {
    "text": "and we can also define clear schema",
    "start": "1010639",
    "end": "1012480"
  },
  {
    "text": "boundaries for these service blocks",
    "start": "1012480",
    "end": "1015920"
  },
  {
    "text": "an example of this is what we define as",
    "start": "1015920",
    "end": "1018800"
  },
  {
    "text": "scope",
    "start": "1018800",
    "end": "1020079"
  },
  {
    "text": "different levels of our sv2 have",
    "start": "1020079",
    "end": "1022800"
  },
  {
    "text": "different scopes",
    "start": "1022800",
    "end": "1023680"
  },
  {
    "text": "and different clients that are accessing",
    "start": "1023680",
    "end": "1025280"
  },
  {
    "text": "them",
    "start": "1025280",
    "end": "1026798"
  },
  {
    "text": "for example our data aggregation service",
    "start": "1026799",
    "end": "1028880"
  },
  {
    "text": "may have a service",
    "start": "1028880",
    "end": "1030480"
  },
  {
    "text": "or endpoint that has an access level",
    "start": "1030480",
    "end": "1034160"
  },
  {
    "text": "exposed to our public api",
    "start": "1034160",
    "end": "1036798"
  },
  {
    "text": "however we might not want our blocks to",
    "start": "1036799",
    "end": "1039760"
  },
  {
    "text": "be",
    "start": "1039760",
    "end": "1040400"
  },
  {
    "text": "returning public api access data and so",
    "start": "1040400",
    "end": "1043520"
  },
  {
    "text": "we could acquire that specific access",
    "start": "1043520",
    "end": "1045199"
  },
  {
    "text": "levels such as user block",
    "start": "1045199",
    "end": "1046798"
  },
  {
    "text": "are provided as access level headers",
    "start": "1046799",
    "end": "1050240"
  },
  {
    "text": "to that user block facade",
    "start": "1050240",
    "end": "1053520"
  },
  {
    "text": "combining these access levels with the",
    "start": "1053520",
    "end": "1056400"
  },
  {
    "text": "scope",
    "start": "1056400",
    "end": "1057600"
  },
  {
    "text": "directive that's annotated on our",
    "start": "1057600",
    "end": "1059760"
  },
  {
    "text": "graphql schema",
    "start": "1059760",
    "end": "1061280"
  },
  {
    "text": "allows us to indicate the different",
    "start": "1061280",
    "end": "1063039"
  },
  {
    "text": "access levels per field and per",
    "start": "1063039",
    "end": "1065440"
  },
  {
    "text": "entity type for example",
    "start": "1065440",
    "end": "1069280"
  },
  {
    "text": "we were able to provide a scope",
    "start": "1069280",
    "end": "1070880"
  },
  {
    "text": "directive here saying",
    "start": "1070880",
    "end": "1072559"
  },
  {
    "text": "that this some example type has",
    "start": "1072559",
    "end": "1075760"
  },
  {
    "text": "the scope level of public api",
    "start": "1075760",
    "end": "1080480"
  },
  {
    "text": "and with a similar annotation but",
    "start": "1080480",
    "end": "1082080"
  },
  {
    "text": "different",
    "start": "1082080",
    "end": "1083760"
  },
  {
    "text": "graphql type for user we might annotate",
    "start": "1083760",
    "end": "1086799"
  },
  {
    "text": "it with",
    "start": "1086799",
    "end": "1087440"
  },
  {
    "text": "a user block scope",
    "start": "1087440",
    "end": "1091279"
  },
  {
    "text": "but how can we further simplify the",
    "start": "1092080",
    "end": "1094400"
  },
  {
    "text": "developer experience",
    "start": "1094400",
    "end": "1096080"
  },
  {
    "text": "we looked at where our engineers were",
    "start": "1096080",
    "end": "1097760"
  },
  {
    "text": "spending a lot of their developer time",
    "start": "1097760",
    "end": "1099440"
  },
  {
    "text": "and we saw that there was",
    "start": "1099440",
    "end": "1101280"
  },
  {
    "text": "separate often separate schemas for each",
    "start": "1101280",
    "end": "1103280"
  },
  {
    "text": "of the services",
    "start": "1103280",
    "end": "1105760"
  },
  {
    "text": "if some service a needed to get service",
    "start": "1105760",
    "end": "1108160"
  },
  {
    "text": "b's fields",
    "start": "1108160",
    "end": "1109520"
  },
  {
    "text": "then service a would copy over the",
    "start": "1109520",
    "end": "1111360"
  },
  {
    "text": "relevant fields from service b",
    "start": "1111360",
    "end": "1112880"
  },
  {
    "text": "schema into a new service say namespace",
    "start": "1112880",
    "end": "1116320"
  },
  {
    "text": "sometimes the name of the field even",
    "start": "1116320",
    "end": "1117919"
  },
  {
    "text": "changed slightly",
    "start": "1117919",
    "end": "1119600"
  },
  {
    "text": "this resulted in each service having",
    "start": "1119600",
    "end": "1121520"
  },
  {
    "text": "their own schema and a lot of",
    "start": "1121520",
    "end": "1122880"
  },
  {
    "text": "duplication",
    "start": "1122880",
    "end": "1123679"
  },
  {
    "text": "across the various parts of the stack",
    "start": "1123679",
    "end": "1125840"
  },
  {
    "text": "developers needed to handwrite mapping",
    "start": "1125840",
    "end": "1127760"
  },
  {
    "text": "to convert between the different schemas",
    "start": "1127760",
    "end": "1130559"
  },
  {
    "text": "even though they were representing the",
    "start": "1130559",
    "end": "1132000"
  },
  {
    "text": "same pieces of data",
    "start": "1132000",
    "end": "1135280"
  },
  {
    "text": "so we've created this effort to make a",
    "start": "1135679",
    "end": "1137679"
  },
  {
    "text": "central schema",
    "start": "1137679",
    "end": "1138880"
  },
  {
    "text": "representing a single source of truth of",
    "start": "1138880",
    "end": "1140559"
  },
  {
    "text": "the various data entities at airbnb",
    "start": "1140559",
    "end": "1144559"
  },
  {
    "text": "our central schema is then paired with",
    "start": "1144559",
    "end": "1148960"
  },
  {
    "text": "the scope directive we're able to",
    "start": "1148960",
    "end": "1152320"
  },
  {
    "text": "annotate the different services with the",
    "start": "1152320",
    "end": "1156320"
  },
  {
    "text": "scope",
    "start": "1156320",
    "end": "1157200"
  },
  {
    "text": "of the schema that they want to auto",
    "start": "1157200",
    "end": "1160000"
  },
  {
    "text": "autoload",
    "start": "1160000",
    "end": "1161039"
  },
  {
    "text": "during the start of the service for",
    "start": "1161039",
    "end": "1163600"
  },
  {
    "text": "example when the user block service",
    "start": "1163600",
    "end": "1165280"
  },
  {
    "text": "starts up we've said that",
    "start": "1165280",
    "end": "1166799"
  },
  {
    "text": "has all the fields within the user block",
    "start": "1166799",
    "end": "1169760"
  },
  {
    "text": "access level",
    "start": "1169760",
    "end": "1171200"
  },
  {
    "text": "so it will go into the graphql schema",
    "start": "1171200",
    "end": "1173120"
  },
  {
    "text": "find all the fields within the scope",
    "start": "1173120",
    "end": "1174720"
  },
  {
    "text": "annotation",
    "start": "1174720",
    "end": "1175600"
  },
  {
    "text": "and load that schema into the user block",
    "start": "1175600",
    "end": "1177840"
  },
  {
    "text": "and expose that",
    "start": "1177840",
    "end": "1179039"
  },
  {
    "text": "as part of the interface",
    "start": "1179039",
    "end": "1182080"
  },
  {
    "text": "however the idea of centralizing into",
    "start": "1185280",
    "end": "1188400"
  },
  {
    "text": "the aggregator service and the unified",
    "start": "1188400",
    "end": "1190559"
  },
  {
    "text": "service blocks",
    "start": "1190559",
    "end": "1192320"
  },
  {
    "text": "does ring bells of consolidating back",
    "start": "1192320",
    "end": "1195360"
  },
  {
    "text": "to the monolith to avoid returning back",
    "start": "1195360",
    "end": "1199760"
  },
  {
    "text": "to monorail",
    "start": "1199760",
    "end": "1201360"
  },
  {
    "text": "we wanted to make sure that code had",
    "start": "1201360",
    "end": "1204080"
  },
  {
    "text": "very clear ownership",
    "start": "1204080",
    "end": "1205440"
  },
  {
    "text": "and boundaries for the various entities",
    "start": "1205440",
    "end": "1208400"
  },
  {
    "text": "each schema changed that unified schema",
    "start": "1208400",
    "end": "1210880"
  },
  {
    "text": "must be reviewed by the core entities",
    "start": "1210880",
    "end": "1213760"
  },
  {
    "text": "owner team that has the most product",
    "start": "1213760",
    "end": "1215360"
  },
  {
    "text": "context",
    "start": "1215360",
    "end": "1217200"
  },
  {
    "text": "in monorail it evolved to be a dumping",
    "start": "1217200",
    "end": "1219760"
  },
  {
    "text": "ground for some of the core models",
    "start": "1219760",
    "end": "1221360"
  },
  {
    "text": "for example the user.rb file had a lot",
    "start": "1221360",
    "end": "1224720"
  },
  {
    "text": "of different attributes that had",
    "start": "1224720",
    "end": "1226559"
  },
  {
    "text": "a user id but not necessarily record to",
    "start": "1226559",
    "end": "1228640"
  },
  {
    "text": "the user",
    "start": "1228640",
    "end": "1229679"
  },
  {
    "text": "entity now with our unified",
    "start": "1229679",
    "end": "1233039"
  },
  {
    "text": "schema we've given annotations that",
    "start": "1233039",
    "end": "1235440"
  },
  {
    "text": "provide more oversight so that a team is",
    "start": "1235440",
    "end": "1237520"
  },
  {
    "text": "really a product owner",
    "start": "1237520",
    "end": "1239200"
  },
  {
    "text": "of the data going into the unified",
    "start": "1239200",
    "end": "1241360"
  },
  {
    "text": "schema",
    "start": "1241360",
    "end": "1243760"
  },
  {
    "text": "an example of this is our owner",
    "start": "1244640",
    "end": "1246240"
  },
  {
    "text": "directive we're able to annotate the",
    "start": "1246240",
    "end": "1248480"
  },
  {
    "text": "owners of a particular",
    "start": "1248480",
    "end": "1250720"
  },
  {
    "text": "field and this is an easy way to",
    "start": "1250720",
    "end": "1253039"
  },
  {
    "text": "document",
    "start": "1253039",
    "end": "1254000"
  },
  {
    "text": "ownership inline but also gives us a way",
    "start": "1254000",
    "end": "1256880"
  },
  {
    "text": "to auto generate alerts",
    "start": "1256880",
    "end": "1260080"
  },
  {
    "text": "with many parts of the schema being",
    "start": "1260080",
    "end": "1261760"
  },
  {
    "text": "owned by different teams we didn't want",
    "start": "1261760",
    "end": "1263679"
  },
  {
    "text": "a single team have to be responsible",
    "start": "1263679",
    "end": "1265840"
  },
  {
    "text": "for maintaining the whole unified schema",
    "start": "1265840",
    "end": "1268080"
  },
  {
    "text": "so by having the owners",
    "start": "1268080",
    "end": "1269600"
  },
  {
    "text": "annotated here allows us to auto",
    "start": "1269600",
    "end": "1271440"
  },
  {
    "text": "generate alerts and page teams",
    "start": "1271440",
    "end": "1273760"
  },
  {
    "text": "should any of the fields from their",
    "start": "1273760",
    "end": "1275520"
  },
  {
    "text": "schemas be failing",
    "start": "1275520",
    "end": "1278640"
  },
  {
    "text": "and to test before we get into project",
    "start": "1281039",
    "end": "1283200"
  },
  {
    "text": "if our code is",
    "start": "1283200",
    "end": "1284159"
  },
  {
    "text": "working or failing we've developed",
    "start": "1284159",
    "end": "1286240"
  },
  {
    "text": "various tools to",
    "start": "1286240",
    "end": "1287440"
  },
  {
    "text": "aid us with this process of operating",
    "start": "1287440",
    "end": "1290400"
  },
  {
    "text": "our apis",
    "start": "1290400",
    "end": "1293200"
  },
  {
    "text": "in our schema we've developed a",
    "start": "1295840",
    "end": "1297520"
  },
  {
    "text": "browser-based ide",
    "start": "1297520",
    "end": "1299760"
  },
  {
    "text": "which allows us to edit graphql schemas",
    "start": "1299760",
    "end": "1302320"
  },
  {
    "text": "mock json",
    "start": "1302320",
    "end": "1303440"
  },
  {
    "text": "and open a github polarquest all from",
    "start": "1303440",
    "end": "1305360"
  },
  {
    "text": "the browser",
    "start": "1305360",
    "end": "1307200"
  },
  {
    "text": "this is important because engineers from",
    "start": "1307200",
    "end": "1309679"
  },
  {
    "text": "different parts of the stack including",
    "start": "1309679",
    "end": "1311120"
  },
  {
    "text": "our front-end engineers",
    "start": "1311120",
    "end": "1312799"
  },
  {
    "text": "are making changes to the schema however",
    "start": "1312799",
    "end": "1316320"
  },
  {
    "text": "the front-end engineers work in a code",
    "start": "1316320",
    "end": "1318320"
  },
  {
    "text": "base that's different than the code base",
    "start": "1318320",
    "end": "1320320"
  },
  {
    "text": "that the unified schema is stored in",
    "start": "1320320",
    "end": "1322240"
  },
  {
    "text": "which is used more often for our backend",
    "start": "1322240",
    "end": "1324000"
  },
  {
    "text": "engineers",
    "start": "1324000",
    "end": "1325039"
  },
  {
    "text": "this tool is really powerful to enable",
    "start": "1325039",
    "end": "1327280"
  },
  {
    "text": "any engineer",
    "start": "1327280",
    "end": "1328159"
  },
  {
    "text": "to be able to modify the schema and have",
    "start": "1328159",
    "end": "1330080"
  },
  {
    "text": "it be",
    "start": "1330080",
    "end": "1333600"
  },
  {
    "text": "easily understood and get the proper",
    "start": "1333600",
    "end": "1335919"
  },
  {
    "text": "code of use",
    "start": "1335919",
    "end": "1337440"
  },
  {
    "text": "there's live graphql validation through",
    "start": "1337440",
    "end": "1340400"
  },
  {
    "text": "the browser's enhanced ide",
    "start": "1340400",
    "end": "1342559"
  },
  {
    "text": "like experience enabling us to provide",
    "start": "1342559",
    "end": "1345520"
  },
  {
    "text": "syntax",
    "start": "1345520",
    "end": "1346080"
  },
  {
    "text": "errors as well as suggestions for",
    "start": "1346080",
    "end": "1349600"
  },
  {
    "text": "different types",
    "start": "1349600",
    "end": "1352960"
  },
  {
    "text": "the suggestions are important because it",
    "start": "1352960",
    "end": "1355120"
  },
  {
    "text": "helps us realize if we might be creating",
    "start": "1355120",
    "end": "1357039"
  },
  {
    "text": "a duplicate field",
    "start": "1357039",
    "end": "1358480"
  },
  {
    "text": "we want to name something but something",
    "start": "1358480",
    "end": "1360240"
  },
  {
    "text": "already exists with a similar name it'll",
    "start": "1360240",
    "end": "1362640"
  },
  {
    "text": "give an example of where that exists and",
    "start": "1362640",
    "end": "1365039"
  },
  {
    "text": "perhaps we don't need to create",
    "start": "1365039",
    "end": "1366720"
  },
  {
    "text": "that new field",
    "start": "1366720",
    "end": "1369520"
  },
  {
    "text": "we're able to quickly make these changes",
    "start": "1372080",
    "end": "1374720"
  },
  {
    "text": "in line",
    "start": "1374720",
    "end": "1375919"
  },
  {
    "text": "and make a pull request with a given",
    "start": "1375919",
    "end": "1378320"
  },
  {
    "text": "branch name and commit message all from",
    "start": "1378320",
    "end": "1380240"
  },
  {
    "text": "the browser",
    "start": "1380240",
    "end": "1382799"
  },
  {
    "text": "this browser id also gives us the",
    "start": "1383760",
    "end": "1385760"
  },
  {
    "text": "ability to mock data",
    "start": "1385760",
    "end": "1389200"
  },
  {
    "text": "this is important because it allows us",
    "start": "1389200",
    "end": "1390720"
  },
  {
    "text": "an easy way to generate example",
    "start": "1390720",
    "end": "1392480"
  },
  {
    "text": "responses against different versions of",
    "start": "1392480",
    "end": "1394480"
  },
  {
    "text": "our schema",
    "start": "1394480",
    "end": "1395280"
  },
  {
    "text": "with correctly typed sample data",
    "start": "1395280",
    "end": "1399919"
  },
  {
    "text": "putting this together with our graphql",
    "start": "1400240",
    "end": "1402240"
  },
  {
    "text": "explorer we're able to simplify",
    "start": "1402240",
    "end": "1404320"
  },
  {
    "text": "the developer experience by validating",
    "start": "1404320",
    "end": "1406720"
  },
  {
    "text": "the schema",
    "start": "1406720",
    "end": "1408080"
  },
  {
    "text": "and json changes and querying against",
    "start": "1408080",
    "end": "1410320"
  },
  {
    "text": "various",
    "start": "1410320",
    "end": "1412799"
  },
  {
    "text": "environments including the staging",
    "start": "1413039",
    "end": "1414640"
  },
  {
    "text": "environment or even",
    "start": "1414640",
    "end": "1416320"
  },
  {
    "text": "our local development environments",
    "start": "1416320",
    "end": "1419840"
  },
  {
    "text": "it seems like there's a lot of different",
    "start": "1421279",
    "end": "1422559"
  },
  {
    "text": "architectural decisions and tools that",
    "start": "1422559",
    "end": "1424640"
  },
  {
    "text": "require to get this migration started",
    "start": "1424640",
    "end": "1427360"
  },
  {
    "text": "and they are big changes investments in",
    "start": "1427360",
    "end": "1429360"
  },
  {
    "text": "tooling and infrastructure",
    "start": "1429360",
    "end": "1430720"
  },
  {
    "text": "are costly when is the right time to",
    "start": "1430720",
    "end": "1434000"
  },
  {
    "text": "introduce",
    "start": "1434000",
    "end": "1434880"
  },
  {
    "text": "new architectural components and embark",
    "start": "1434880",
    "end": "1437039"
  },
  {
    "text": "on a long migration",
    "start": "1437039",
    "end": "1440720"
  },
  {
    "text": "this goes back to growth growth is",
    "start": "1441039",
    "end": "1442880"
  },
  {
    "text": "really an important motivator",
    "start": "1442880",
    "end": "1445360"
  },
  {
    "text": "and has been airbnb's number one",
    "start": "1445360",
    "end": "1447520"
  },
  {
    "text": "priority and driver",
    "start": "1447520",
    "end": "1449039"
  },
  {
    "text": "for our first migration to soa and our",
    "start": "1449039",
    "end": "1452240"
  },
  {
    "text": "continued migration work in soa v2",
    "start": "1452240",
    "end": "1455600"
  },
  {
    "text": "it's natural to outgrow your system",
    "start": "1455600",
    "end": "1457600"
  },
  {
    "text": "architecture",
    "start": "1457600",
    "end": "1460000"
  },
  {
    "text": "but it's important to design system",
    "start": "1460000",
    "end": "1462880"
  },
  {
    "text": "architecture",
    "start": "1462880",
    "end": "1464400"
  },
  {
    "text": "to address your current growth needs",
    "start": "1464400",
    "end": "1468559"
  },
  {
    "text": "it's important to not over engineer",
    "start": "1468559",
    "end": "1472240"
  },
  {
    "text": "business and technical needs will",
    "start": "1472240",
    "end": "1473760"
  },
  {
    "text": "continue to evolve over time",
    "start": "1473760",
    "end": "1475919"
  },
  {
    "text": "so it's important to build a system that",
    "start": "1475919",
    "end": "1478000"
  },
  {
    "text": "focuses on the challenges of today",
    "start": "1478000",
    "end": "1482400"
  },
  {
    "text": "when we migrated out of our monorail we",
    "start": "1484400",
    "end": "1486640"
  },
  {
    "text": "did not have a dependency call graph",
    "start": "1486640",
    "end": "1488240"
  },
  {
    "text": "that looked like this",
    "start": "1488240",
    "end": "1489760"
  },
  {
    "text": "our needs at the time were to help with",
    "start": "1489760",
    "end": "1492159"
  },
  {
    "text": "developer program",
    "start": "1492159",
    "end": "1493360"
  },
  {
    "text": "productivity and create a way that",
    "start": "1493360",
    "end": "1495600"
  },
  {
    "text": "allowed for us to quickly and",
    "start": "1495600",
    "end": "1497120"
  },
  {
    "text": "incrementally migrate out of a monolith",
    "start": "1497120",
    "end": "1499840"
  },
  {
    "text": "however now our needs are to simplify",
    "start": "1499840",
    "end": "1502960"
  },
  {
    "text": "our services and dependency call graph",
    "start": "1502960",
    "end": "1506400"
  },
  {
    "text": "if we look back at that example of the",
    "start": "1506400",
    "end": "1509200"
  },
  {
    "text": "home",
    "start": "1509200",
    "end": "1509760"
  },
  {
    "text": "reservation page that has information",
    "start": "1509760",
    "end": "1511679"
  },
  {
    "text": "about the check-in day and the photos",
    "start": "1511679",
    "end": "1513360"
  },
  {
    "text": "and the guests",
    "start": "1513360",
    "end": "1515840"
  },
  {
    "text": "and we put it now into our tech 2.0",
    "start": "1516080",
    "end": "1519840"
  },
  {
    "text": "stack",
    "start": "1519840",
    "end": "1521120"
  },
  {
    "text": "we will have that presentation service",
    "start": "1521120",
    "end": "1523600"
  },
  {
    "text": "be reduced in scope",
    "start": "1523600",
    "end": "1525360"
  },
  {
    "text": "and have most of the functionality put",
    "start": "1525360",
    "end": "1527039"
  },
  {
    "text": "into the data aggregator",
    "start": "1527039",
    "end": "1528720"
  },
  {
    "text": "the data aggregator will fan out get",
    "start": "1528720",
    "end": "1530880"
  },
  {
    "text": "information for the reservation block",
    "start": "1530880",
    "end": "1532720"
  },
  {
    "text": "and the user block",
    "start": "1532720",
    "end": "1535039"
  },
  {
    "text": "all behind the scenes the user",
    "start": "1535039",
    "end": "1537600"
  },
  {
    "text": "reservation walk may call it to various",
    "start": "1537600",
    "end": "1539360"
  },
  {
    "text": "services",
    "start": "1539360",
    "end": "1540080"
  },
  {
    "text": "for example but",
    "start": "1540080",
    "end": "1543120"
  },
  {
    "text": "the data aggregator only calls to their",
    "start": "1543120",
    "end": "1545200"
  },
  {
    "text": "facade service",
    "start": "1545200",
    "end": "1548000"
  },
  {
    "text": "some of the progress that we've seen so",
    "start": "1550799",
    "end": "1552799"
  },
  {
    "text": "far",
    "start": "1552799",
    "end": "1553919"
  },
  {
    "text": "in our migration to our soa v2",
    "start": "1553919",
    "end": "1557279"
  },
  {
    "text": "is that our data aggregation service is",
    "start": "1557279",
    "end": "1559360"
  },
  {
    "text": "serving over 10",
    "start": "1559360",
    "end": "1560960"
  },
  {
    "text": "of user facing traffic and i've seen",
    "start": "1560960",
    "end": "1562559"
  },
  {
    "text": "performance wins from that",
    "start": "1562559",
    "end": "1564880"
  },
  {
    "text": "our user and home service blocks have",
    "start": "1564880",
    "end": "1567360"
  },
  {
    "text": "both piloted production traffic",
    "start": "1567360",
    "end": "1569360"
  },
  {
    "text": "from both the data aggregation service",
    "start": "1569360",
    "end": "1571600"
  },
  {
    "text": "and the tech stack",
    "start": "1571600",
    "end": "1572720"
  },
  {
    "text": "as well as other internal services",
    "start": "1572720",
    "end": "1576559"
  },
  {
    "text": "in addition to having a unified schema",
    "start": "1576880",
    "end": "1579360"
  },
  {
    "text": "up and running",
    "start": "1579360",
    "end": "1580080"
  },
  {
    "text": "we're working on field level privacy",
    "start": "1580080",
    "end": "1582240"
  },
  {
    "text": "frameworks",
    "start": "1582240",
    "end": "1583279"
  },
  {
    "text": "as other simple graphql annotations",
    "start": "1583279",
    "end": "1587679"
  },
  {
    "text": "there's still a lot of work ahead for us",
    "start": "1588320",
    "end": "1591279"
  },
  {
    "text": "but we're excited to continue the",
    "start": "1591279",
    "end": "1592880"
  },
  {
    "text": "migration to sv2",
    "start": "1592880",
    "end": "1595440"
  },
  {
    "text": "the road is not quite paved yet",
    "start": "1595440",
    "end": "1599200"
  },
  {
    "text": "but we have an idea of where we want to",
    "start": "1599200",
    "end": "1601200"
  },
  {
    "text": "go and the future looks",
    "start": "1601200",
    "end": "1602720"
  },
  {
    "text": "promising thank you for listening",
    "start": "1602720",
    "end": "1610720"
  }
]