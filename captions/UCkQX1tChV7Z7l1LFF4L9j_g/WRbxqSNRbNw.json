[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "[Music]",
    "start": "680",
    "end": "8549"
  },
  {
    "text": "hi my name is ben sigelman i'm a co-founder and the ceo here at lightstep and i'm here to talk about resources and",
    "start": "15040",
    "end": "22160"
  },
  {
    "text": "transactions of fundamental duality and observability i've spent most of my",
    "start": "22160",
    "end": "27519"
  },
  {
    "text": "career working on observability i was at google for nine years in the beginning of my career and",
    "start": "27519",
    "end": "32880"
  },
  {
    "text": "worked on google's distributed tracing system called dapper and distribute and their",
    "start": "32880",
    "end": "38000"
  },
  {
    "text": "high availability monitoring and metric system called monarch and uh and then",
    "start": "38000",
    "end": "43120"
  },
  {
    "text": "the light stuff of course has been focused on observability as well and it's taken me a long time to get here",
    "start": "43120",
    "end": "49120"
  },
  {
    "text": "but i've come up with a different way of thinking about observability than i used to and uh and this is what the talk is",
    "start": "49120",
    "end": "55760"
  },
  {
    "text": "about so without further ado uh let's get started by talking about transactions all right so",
    "start": "55760",
    "end": "61920"
  },
  {
    "start": "57000",
    "end": "437000"
  },
  {
    "text": "what are transactions here's um on on the right you see a kind of a diagram of",
    "start": "61920",
    "end": "67360"
  },
  {
    "text": "some kind of system we're going to be talking a bit about things from the perspective of this bank account service",
    "start": "67360",
    "end": "72640"
  },
  {
    "text": "which is in the midst of some larger microservices architecture some cloud native architecture",
    "start": "72640",
    "end": "79040"
  },
  {
    "text": "and a transaction uh in this presentation anyway it's not necessarily",
    "start": "79040",
    "end": "84640"
  },
  {
    "text": "like a dollar you know a banking transaction it just means any kind of request that propagates from one part of",
    "start": "84640",
    "end": "91600"
  },
  {
    "text": "the system to another or not but just an entire request it's all the work that it does until it gets back and completes",
    "start": "91600",
    "end": "98400"
  },
  {
    "text": "whatever it was trying to accomplish so a transaction are the things in your application that actually quote unquote",
    "start": "98400",
    "end": "104240"
  },
  {
    "text": "do something um for their end user whether the end user is um a human being or in some cases you know",
    "start": "104240",
    "end": "111119"
  },
  {
    "text": "if it's twilio or something like that maybe twilio's end user is actually just another program somewhere running a",
    "start": "111119",
    "end": "116320"
  },
  {
    "text": "script but transactions are what deliver value to users or customers",
    "start": "116320",
    "end": "122719"
  },
  {
    "text": "these days especially for cloud native transactions are distributed they don't literally have to be but they often are",
    "start": "122719",
    "end": "129759"
  },
  {
    "text": "and they can be described at many different granularities so um but by that i mean uh the same transaction",
    "start": "129759",
    "end": "135520"
  },
  {
    "text": "could be described at a very coarse granularity like just an entire end user workflow like if you're a ride sharing",
    "start": "135520",
    "end": "141520"
  },
  {
    "text": "app like lift or uber or something like that the entire flow of requesting a ride might be considered a transaction and",
    "start": "141520",
    "end": "147280"
  },
  {
    "text": "that's the only level of granularity you have you might want to get a little bit more granular and think about the individual",
    "start": "147280",
    "end": "153440"
  },
  {
    "text": "requests between services like the http request so you might think of that as the granularity you want to use to",
    "start": "153440",
    "end": "159599"
  },
  {
    "text": "describe things or maybe you want to get more detailed further and look at some or even all",
    "start": "159599",
    "end": "165840"
  },
  {
    "text": "local function calls and then i suppose theoretically you could look at a transaction in terms of every single cpu instruction that",
    "start": "165840",
    "end": "172720"
  },
  {
    "text": "happens across the entire system to accomplish a transaction and those are all valid ways of",
    "start": "172720",
    "end": "179599"
  },
  {
    "text": "modeling transactions of course as we get down the list the uh the cost of recording things that level",
    "start": "179599",
    "end": "186560"
  },
  {
    "text": "of granularity gets higher and higher and in fact it can get so high that there's a lot of overhead and you start affecting the transactions but",
    "start": "186560",
    "end": "193040"
  },
  {
    "text": "theoretically these are different granularities okay great um now the telemetry we use to describe",
    "start": "193040",
    "end": "199040"
  },
  {
    "text": "transactions are usually traces um and structured logs uh",
    "start": "199040",
    "end": "204480"
  },
  {
    "text": "and structured logs being you know like a textual logging statement but with clear key value attributes",
    "start": "204480",
    "end": "210640"
  },
  {
    "text": "those things are illustrated here you can see that the bank account",
    "start": "210640",
    "end": "215920"
  },
  {
    "text": "request has a request size attribute some kind of http path status code",
    "start": "215920",
    "end": "221280"
  },
  {
    "text": "latency that sort of stuff so these are theoretical attributes in this model for the the pieces of transaction",
    "start": "221280",
    "end": "229680"
  },
  {
    "text": "and uh i would argue as well that tracing will eventually replace locking it will take time but for transactions",
    "start": "229680",
    "end": "236640"
  },
  {
    "text": "specifically tracing will replace logging i'll try to motivate that right now by showing you",
    "start": "236640",
    "end": "243280"
  },
  {
    "text": "how much more flexible the tracing model can be than simple single process logging by",
    "start": "243280",
    "end": "249120"
  },
  {
    "text": "the way i'm not talking about 2021 here but this is more like zooming out where observability is going",
    "start": "249120",
    "end": "254480"
  },
  {
    "text": "so here is a logging statement so you have some pseudo code here",
    "start": "254480",
    "end": "260560"
  },
  {
    "text": "on line 22 and each one of these logging statements really defines its own table",
    "start": "260560",
    "end": "266800"
  },
  {
    "text": "you have a series of keys that are defined by um uh you know the struct here request size",
    "start": "266800",
    "end": "273759"
  },
  {
    "text": "path status latency reflected over here um these become the columns of this",
    "start": "273759",
    "end": "279280"
  },
  {
    "text": "table and then the values which are you know pulled from local state or whatever those become",
    "start": "279280",
    "end": "286080"
  },
  {
    "text": "the set of values become the rows in the table so to spell that out and make it clearer",
    "start": "286080",
    "end": "291120"
  },
  {
    "text": "you have this logging statement as the code runs in production is",
    "start": "291120",
    "end": "296560"
  },
  {
    "text": "populating this uh theoretical table i'm not suggesting of course that we actually take this data",
    "start": "296560",
    "end": "302880"
  },
  {
    "text": "and insert it all into my sql or something like that or even necessarily that we insert it all into elastic or",
    "start": "302880",
    "end": "308479"
  },
  {
    "text": "splunk or something like that but just that there's a theoretical table that's being described by the login statement",
    "start": "308479",
    "end": "313919"
  },
  {
    "text": "itself and that you can model things that way and in some cases",
    "start": "313919",
    "end": "319600"
  },
  {
    "text": "you have tools that allow you to run queries against those tables what's cool about tracing",
    "start": "319600",
    "end": "324720"
  },
  {
    "text": "is that these logging systems typically make it's quite difficult or impossible or expensive or impossible",
    "start": "324720",
    "end": "331520"
  },
  {
    "text": "to execute flexible joins what a trace is doing a distributed trace is doing a",
    "start": "331520",
    "end": "336960"
  },
  {
    "text": "join across the entire system so again if this is uh your system architecture",
    "start": "336960",
    "end": "342960"
  },
  {
    "text": "what we're going to do is implement a join of all of the structured events whether you call them logs or tracebands",
    "start": "342960",
    "end": "348880"
  },
  {
    "text": "it doesn't really matter but you're still describing the transaction and we're going to use the tracing context",
    "start": "348880",
    "end": "354320"
  },
  {
    "text": "to join um the structured events from all these services together into one much larger",
    "start": "354320",
    "end": "360160"
  },
  {
    "text": "table um where you have a table that has columns from these",
    "start": "360160",
    "end": "365199"
  },
  {
    "text": "different services color coded here where service a b and d are also joined across and then",
    "start": "365199",
    "end": "371759"
  },
  {
    "text": "each distributed transaction represents one row in this table and this is really",
    "start": "371759",
    "end": "376800"
  },
  {
    "text": "powerful because if you can think of things in this conceptual model it's possible to",
    "start": "376800",
    "end": "382240"
  },
  {
    "text": "run all sorts of analyses to figure out you know correlations between columns across service boundaries",
    "start": "382240",
    "end": "388319"
  },
  {
    "text": "which in turn allows you to understand how behavior in one service might be affecting um some sort of behavior in",
    "start": "388319",
    "end": "394639"
  },
  {
    "text": "another service so you know to be concrete about this it's possible that you'd have a customer",
    "start": "394639",
    "end": "400319"
  },
  {
    "text": "id field in service a at the top of the stack and you might find that certain customers are involved um a higher",
    "start": "400319",
    "end": "406720"
  },
  {
    "text": "percentage of the time when you know let's say latency is high in the bank account service and then that gives you",
    "start": "406720",
    "end": "412800"
  },
  {
    "text": "something to go on like how did that customer change their workload or what have you so these sorts of joins are",
    "start": "412800",
    "end": "417919"
  },
  {
    "text": "actually a really important mechanism to understand um cause and effect across surface boundaries and if you've been",
    "start": "417919",
    "end": "424319"
  },
  {
    "text": "wondering what all the fuss about distributed tracing is if you think of it in this model distributed tracing is really a join for your structured",
    "start": "424319",
    "end": "430960"
  },
  {
    "text": "logging statements and then a bunch of you know semantics and query capabilities on top of that okay so that",
    "start": "430960",
    "end": "437120"
  },
  {
    "start": "437000",
    "end": "705000"
  },
  {
    "text": "was transactions next we're going to talk about resources so um what's a resource so resources are",
    "start": "437120",
    "end": "444560"
  },
  {
    "text": "the things that transactions consume in order to do their work one side effect of this definition is",
    "start": "444560",
    "end": "451520"
  },
  {
    "text": "that by definition a resource is finite so a resource um",
    "start": "451520",
    "end": "457120"
  },
  {
    "text": "can be something like uh your amazon bill is a type of resource again many different granularities",
    "start": "457120",
    "end": "463680"
  },
  {
    "text": "the amount of throughput through a kafka topic you know a kafka cluster can only support so much load and when you get to",
    "start": "463680",
    "end": "471280"
  },
  {
    "text": "the end of that load and you've consumed all of it things get really bad really quickly you end up with a lot of",
    "start": "471280",
    "end": "477440"
  },
  {
    "text": "pushback and uh very high latency dropped requests things like that um",
    "start": "477440",
    "end": "482879"
  },
  {
    "text": "similarly you know cpu usage is totally fine until it's not but as you all know if you saturate cpu in a service",
    "start": "482879",
    "end": "489919"
  },
  {
    "text": "all sorts of things break that you took for granted even worse for memory usage for the process to straight up crashes",
    "start": "489919",
    "end": "495840"
  },
  {
    "text": "um but you can also get really granular and talk about individual mutex locks for instance for instance if you have a",
    "start": "495840",
    "end": "502240"
  },
  {
    "text": "lot of contention on a single lock you'll end up with you know a read block which should be you know what 150",
    "start": "502240",
    "end": "508639"
  },
  {
    "text": "nanoseconds can take you know a million times as long if there's a lot",
    "start": "508639",
    "end": "513760"
  },
  {
    "text": "of contention for a lock and that causes problems too so these are all types of resources and what makes a",
    "start": "513760",
    "end": "520560"
  },
  {
    "text": "resource a resource is that they survive across transactions and that they're shared across transactions and",
    "start": "520560",
    "end": "527040"
  },
  {
    "text": "it's critical that you do share resources because if you don't um your system will be incredibly expensive like",
    "start": "527040",
    "end": "532640"
  },
  {
    "text": "that's the whole beauty about running um on you know in a multi-tenant multi-request environment is that you",
    "start": "532640",
    "end": "539519"
  },
  {
    "text": "can make better use of the resources and share them across transactions okay so that's what resources are um",
    "start": "539519",
    "end": "546640"
  },
  {
    "text": "to make this a little bit more visual i've drawn these boxes for microservice",
    "start": "546640",
    "end": "551760"
  },
  {
    "text": "a kafka cluster and a mutex lock this is just totally illustrative i'm",
    "start": "551760",
    "end": "557440"
  },
  {
    "text": "sure there's better ways to measure the health of these things but for a resource the health is really um",
    "start": "557440",
    "end": "563680"
  },
  {
    "text": "what you want to show is is um what you want to think of it's it's it's",
    "start": "563680",
    "end": "568720"
  },
  {
    "text": "the um the amount that remains of that resource right uh at some level or it's an",
    "start": "568720",
    "end": "574240"
  },
  {
    "text": "indicator of how much that resource has been consumed so you can see that cpu usage can spike rain usage can spike",
    "start": "574240",
    "end": "581680"
  },
  {
    "text": "you can see that consumer lag or producer lag is an indicator of health for a kafka cluster or the duration that",
    "start": "581680",
    "end": "588480"
  },
  {
    "text": "you have to wait um to acquire a mutex lock is an indicator of health for a mutex so any resource has some kind of",
    "start": "588480",
    "end": "595200"
  },
  {
    "text": "health metric um what i would want to emphasize here is that none of these um",
    "start": "595200",
    "end": "601040"
  },
  {
    "text": "is uh is um uh meant to be an indicator of",
    "start": "601040",
    "end": "606800"
  },
  {
    "text": "um it's it's not an indicator of the",
    "start": "606800",
    "end": "612480"
  },
  {
    "text": "success or failure of an individual transaction it's although certainly when things like cpu and memory usage spike",
    "start": "612480",
    "end": "618320"
  },
  {
    "text": "you have issues with transactions it's meant to indicate the health of the resource i'll talk about why that's relevant in a minute",
    "start": "618320",
    "end": "625040"
  },
  {
    "text": "and then the resources also have a bunch of tags and this is actually really important and i'll talk about this later as well",
    "start": "625040",
    "end": "631600"
  },
  {
    "text": "but if if you're with me so far the",
    "start": "631600",
    "end": "636959"
  },
  {
    "text": "the purpose of these tags or attributes in my mind um is manifold of course if you're just trying to understand and",
    "start": "636959",
    "end": "642480"
  },
  {
    "text": "disaggregate you know if you see a spike like this you might want to group by region or group by cluster id or",
    "start": "642480",
    "end": "648800"
  },
  {
    "text": "something like that and that's fine and you should be able to do that in a time series database but more importantly",
    "start": "648800",
    "end": "655440"
  },
  {
    "text": "these tags are the lingua franca to communicate about resources and",
    "start": "655440",
    "end": "660800"
  },
  {
    "text": "transactions when a transaction crosses a resource ideally the transaction in some way is annotated with that resource",
    "start": "660800",
    "end": "667519"
  },
  {
    "text": "and it can serve as a way to join from the transaction data to the resource data or vice versa and that's a really",
    "start": "667519",
    "end": "673360"
  },
  {
    "text": "powerful thing i'll talk about that later when we get into an actual example um",
    "start": "673360",
    "end": "678399"
  },
  {
    "text": "so i had said that there are different granularities they're also a hierarchy this is true for transactions but i",
    "start": "678399",
    "end": "684560"
  },
  {
    "text": "think that it's more important to make the point here you might have a coptica cluster which itself has many microservices and within",
    "start": "684560",
    "end": "691040"
  },
  {
    "text": "those you have a bunch of vms and within those you have a bunch of mutex locks so these things kind of level up and level",
    "start": "691040",
    "end": "697600"
  },
  {
    "text": "down too so there's hierarchy in the resource and the resource landscape as well as",
    "start": "697600",
    "end": "703360"
  },
  {
    "text": "just these health metrics okay cool so on to part three so we've talked about",
    "start": "703360",
    "end": "708480"
  },
  {
    "text": "transactions they're the things that actually do work that your customers care about we've talked about resources",
    "start": "708480",
    "end": "714240"
  },
  {
    "text": "and they're the things that you know uh make transactions you know do something",
    "start": "714240",
    "end": "719360"
  },
  {
    "text": "and uh and are shared across transactions um these are codependents",
    "start": "719360",
    "end": "724720"
  },
  {
    "text": "so let's talk about what that means so here's a diagram of these resources um",
    "start": "724720",
    "end": "730160"
  },
  {
    "start": "725000",
    "end": "1057000"
  },
  {
    "text": "and these green uh squiggly lines are meant to illustrate transactions flowing into or",
    "start": "730160",
    "end": "737040"
  },
  {
    "text": "out of those resources and doing their work and you can see that the transactions",
    "start": "737040",
    "end": "743120"
  },
  {
    "text": "are you know going in this case uh to different um http endpoints in this case to different",
    "start": "743120",
    "end": "750000"
  },
  {
    "text": "kafka topics in this case you have readers and writers trying to",
    "start": "750000",
    "end": "755120"
  },
  {
    "text": "you know perform their lock on the mutex there are different types of transactions and um",
    "start": "755120",
    "end": "761040"
  },
  {
    "text": "and we would like when a transaction crosses a resource for it to be annotated with the",
    "start": "761040",
    "end": "766959"
  },
  {
    "text": "identifiers to that resource so uh if this you know topic y request is coming in",
    "start": "766959",
    "end": "772639"
  },
  {
    "text": "that transaction in terms of that's that schema of different levels of granularity it's quite valuable if you",
    "start": "772639",
    "end": "778720"
  },
  {
    "text": "ever want to be able to understand how the resource and the transaction interact for the topic for the",
    "start": "778720",
    "end": "783920"
  },
  {
    "text": "transaction to be annotated with the region and the cluster id for kafka instance that it's",
    "start": "783920",
    "end": "788959"
  },
  {
    "text": "using or for this endpoint for the transactions to be annotated in the trace with um something like the host",
    "start": "788959",
    "end": "796160"
  },
  {
    "text": "name or container id the service name the version that sort of stuff so again you can use",
    "start": "796160",
    "end": "802720"
  },
  {
    "text": "the tags from the resource to annotate the transactions uh and serve as a map",
    "start": "802720",
    "end": "807839"
  },
  {
    "text": "between these two worlds um yeah so this is an illustration of that",
    "start": "807839",
    "end": "813839"
  },
  {
    "text": "the green things are basically traces and",
    "start": "813839",
    "end": "819680"
  },
  {
    "text": "and then in the resources you typically use metrics telemetry time series statistics to represent the health of",
    "start": "819680",
    "end": "826079"
  },
  {
    "text": "these resources not always but but typically okay so",
    "start": "826079",
    "end": "832160"
  },
  {
    "text": "resources and transactions are completely totally codependent and that's a really really important",
    "start": "832160",
    "end": "839199"
  },
  {
    "text": "problem which is to say if um your resources are unhealthy the transactions suffer",
    "start": "839199",
    "end": "846079"
  },
  {
    "text": "greatly and if the transactions become too numerous um the resources suffer greatly one of the things that bugs me",
    "start": "846079",
    "end": "852399"
  },
  {
    "text": "the most about continuous integration as a topic actually i mean i think it's great i mean of course we use ci and",
    "start": "852399",
    "end": "858480"
  },
  {
    "text": "lightstep but there's this idea that code can even be correct or incorrect without knowing what the workload is and",
    "start": "858480",
    "end": "864160"
  },
  {
    "text": "i think that's a total mirage the only way you can know if at least",
    "start": "864160",
    "end": "869360"
  },
  {
    "text": "for a system software or back-end software if the code is correct or incorrect is to run it under a real",
    "start": "869360",
    "end": "874639"
  },
  {
    "text": "workload because the workload is actually really part of the semantics and all the",
    "start": "874639",
    "end": "879839"
  },
  {
    "text": "tuning around how resources are configured and even how resources are designed and implemented it depends in",
    "start": "879839",
    "end": "885440"
  },
  {
    "text": "large part on what the actual workload of transactions looks like so it's not just that you might need more of",
    "start": "885440",
    "end": "891199"
  },
  {
    "text": "something but you might actually want a different thing you know i don't like when people",
    "start": "891199",
    "end": "897040"
  },
  {
    "text": "hate on my sequel too much and i hated on it a little bit earlier about certain types of data but it's perfect if your data can fit easily in one machine and",
    "start": "897040",
    "end": "903920"
  },
  {
    "text": "you just want relational semantics there's really not that much wrong with it aside from some of the replication",
    "start": "903920",
    "end": "909360"
  },
  {
    "text": "issues and similarly uh if um",
    "start": "909360",
    "end": "914399"
  },
  {
    "text": "you know if you want something that's truly planet scale and cheap like you're going to have to move off of that model into something else so resources really",
    "start": "914399",
    "end": "921519"
  },
  {
    "text": "can't be considered correct or incorrect from a design standpoint or from a code standpoint until you consider the",
    "start": "921519",
    "end": "927199"
  },
  {
    "text": "transactional workload as well and observability turns out to be one of the easiest ways to understand how the",
    "start": "927199",
    "end": "933199"
  },
  {
    "text": "workload is affecting the health of the resources and vice versa all right so",
    "start": "933199",
    "end": "938639"
  },
  {
    "text": "speaking of codependency the end users of the customers of your application",
    "start": "938639",
    "end": "943920"
  },
  {
    "text": "they only care about transactions and by that i mean you know if you have an outage and um",
    "start": "943920",
    "end": "949839"
  },
  {
    "text": "someone's trying to write up a report for especially for a non-technical end user they really don't care at all about the",
    "start": "949839",
    "end": "956320"
  },
  {
    "text": "fact you ran out of resources that is like not their problem it's your problem not their problem they only care about",
    "start": "956320",
    "end": "961759"
  },
  {
    "text": "whether the transactions were correct uh and came back in reasonable time so",
    "start": "961759",
    "end": "967120"
  },
  {
    "text": "correctness and latency and i mean correctness also implying that it wasn't an error greatness and latency are the two things",
    "start": "967120",
    "end": "973680"
  },
  {
    "text": "that um a customer or end user will care about for their transaction and kind of nothing else and how you accomplish that",
    "start": "973680",
    "end": "979440"
  },
  {
    "text": "is up to you the trouble is that for an operator whether you know by operator i don't",
    "start": "979440",
    "end": "984959"
  },
  {
    "text": "that includes you know devops sres et cetera for an operator the only thing you can control are your resources the",
    "start": "984959",
    "end": "991120"
  },
  {
    "text": "whole point of software is that we're not sitting there taking the facts from the customer and then filling out some",
    "start": "991120",
    "end": "996639"
  },
  {
    "text": "stuff and then doing some work as a human being we're writing software to automate that stuff and that software runs on resources so operators totally",
    "start": "996639",
    "end": "1003920"
  },
  {
    "text": "sensibly are mainly concerned with resources because that is actually the point of control that they have and end",
    "start": "1003920",
    "end": "1009759"
  },
  {
    "text": "users only care about transactions and the end users and operators are codependent in this way as well if end",
    "start": "1009759",
    "end": "1015680"
  },
  {
    "text": "users change their behavior too quickly it can create resource issues for operators and obviously if operators end",
    "start": "1015680",
    "end": "1021360"
  },
  {
    "text": "up doing something that damages the health of a resource than end users suffer so end users operators",
    "start": "1021360",
    "end": "1029678"
  },
  {
    "text": "transactions resources they're all codependent in this way and there's this relationship between them",
    "start": "1029679",
    "end": "1035678"
  },
  {
    "text": "so right i just said that so end users and developers our developer operators are",
    "start": "1035679",
    "end": "1041360"
  },
  {
    "text": "also totally codependent and i think that's a really interesting and to me anyway kind of a profound thing that end",
    "start": "1041360",
    "end": "1046480"
  },
  {
    "text": "users and transactions operators and resources uh that's what they tend to think about because that's what they can",
    "start": "1046480",
    "end": "1051760"
  },
  {
    "text": "control and what they deal with but um they're actually totally different planes that intersect in the worklet",
    "start": "1051760",
    "end": "1057200"
  },
  {
    "start": "1057000",
    "end": "1179000"
  },
  {
    "text": "itself okay so you know what do we actually do this sounds like a problem so",
    "start": "1057200",
    "end": "1062320"
  },
  {
    "text": "it's necessary to be able to pivot between these two across telemetry types metrics and",
    "start": "1062320",
    "end": "1067520"
  },
  {
    "text": "traces in the aggregate via tags and automatically and",
    "start": "1067520",
    "end": "1073200"
  },
  {
    "text": "this is the way that you can take some kind of scarcity on a resource or a health issue with a resource and pivot",
    "start": "1073200",
    "end": "1079600"
  },
  {
    "text": "to understand how the transactions have changed or you can go from a transaction being really slow or returning an error",
    "start": "1079600",
    "end": "1085440"
  },
  {
    "text": "and figuring out which resource has you know something to do with that because it's almost always going high",
    "start": "1085440",
    "end": "1091120"
  },
  {
    "text": "latency is almost always going to be some resource that's under contention whether it's your database or a kafka",
    "start": "1091120",
    "end": "1096640"
  },
  {
    "text": "queue or whatever and then trying to understand why that's under contention is going to be a matter of figuring out",
    "start": "1096640",
    "end": "1102080"
  },
  {
    "text": "how you know some workload has changed like someone push new code that increases the number of database calls by 100x and that's why your database got",
    "start": "1102080",
    "end": "1109600"
  },
  {
    "text": "slow so it's um an interesting thing you're often pivoting between transactions being slow uh finding a",
    "start": "1109600",
    "end": "1115840"
  },
  {
    "text": "resource that's under contention and then realizing that someone increased their load by 100x so again pivoting",
    "start": "1115840",
    "end": "1121039"
  },
  {
    "text": "from transactions to resources and back again um or vice versa right um",
    "start": "1121039",
    "end": "1126559"
  },
  {
    "text": "and this is really hard because metrics and traces right now people integrate them in the front end but they actually",
    "start": "1126559",
    "end": "1131679"
  },
  {
    "text": "need to be integrated at the data layer to make this possible it's a very difficult data engineering problem because the data actually looks quite",
    "start": "1131679",
    "end": "1137280"
  },
  {
    "text": "different metrics are typically represented as time series statistics traces typically as structured events",
    "start": "1137280",
    "end": "1142880"
  },
  {
    "text": "and some some you know whether it's spams or logs whatever it's basically a bunch of structured",
    "start": "1142880",
    "end": "1148160"
  },
  {
    "text": "event data not statistical data so it's hard to pivot between them and again the tags are the way that we do that um and",
    "start": "1148160",
    "end": "1154799"
  },
  {
    "text": "then finally you know i've been doing this stuff for like 15 years or something like that and so i think about",
    "start": "1154799",
    "end": "1160320"
  },
  {
    "text": "all the time no one should have to be an expert in this stuff to use it it needs to be something that's somewhat intuitive and",
    "start": "1160320",
    "end": "1166880"
  },
  {
    "text": "bringing these sorts of insights to people in their everyday workflows um is uh if we if we're not able to do that",
    "start": "1166880",
    "end": "1174080"
  },
  {
    "text": "then we basically haven't succeeded in solving the codependency that i was talking about earlier",
    "start": "1174080",
    "end": "1180160"
  },
  {
    "start": "1179000",
    "end": "1272000"
  },
  {
    "text": "so one helpful tool is slos i'm not going to do a whole thing about slos because i think they're kind of common",
    "start": "1180160",
    "end": "1185200"
  },
  {
    "text": "knowledge but i wanted to just briefly",
    "start": "1185200",
    "end": "1191039"
  },
  {
    "text": "mentioned something about slos in the context of resources and transactions so slos they're a hot topic um i would",
    "start": "1191039",
    "end": "1197840"
  },
  {
    "text": "argue that slos are goals um and they are their goals about a set of transactions",
    "start": "1197840",
    "end": "1204640"
  },
  {
    "text": "that are scoped to a set of resources so again resources and transactions are a really nice way of thinking about slos",
    "start": "1204640",
    "end": "1210400"
  },
  {
    "text": "so i think the term service level objective people often think oh service needs microservice not really service level",
    "start": "1210400",
    "end": "1216320"
  },
  {
    "text": "just means like you know the service level for your telephone is that when you well sorry no one has these anymore",
    "start": "1216320",
    "end": "1222320"
  },
  {
    "text": "if you were old like me you picked up a telephone got a dial tone and the service levels that that happened 99.99",
    "start": "1222320",
    "end": "1227919"
  },
  {
    "text": "of the time or whatever it doesn't have to be microservice right so the service level is just talking about how reliable",
    "start": "1227919",
    "end": "1233760"
  },
  {
    "text": "are the transactions whether it means that they don't error out very often or that they're fast or",
    "start": "1233760",
    "end": "1240080"
  },
  {
    "text": "what have you and you want to examine that service level in the context of some set of",
    "start": "1240080",
    "end": "1245679"
  },
  {
    "text": "resources this is actually where the microservices come in but you could also have an slo for some other thing again",
    "start": "1245679",
    "end": "1251280"
  },
  {
    "text": "kafka cues databases that sort of stuff and in this way the slos can represent a",
    "start": "1251280",
    "end": "1257039"
  },
  {
    "text": "contract between these two dualities right transactions and resources on one side and operators and end users on the",
    "start": "1257039",
    "end": "1262480"
  },
  {
    "text": "other so i think it's an elegant way to to think about why slos are so vital and",
    "start": "1262480",
    "end": "1267679"
  },
  {
    "text": "so important in bridging these two different worlds all right um so you know",
    "start": "1267679",
    "end": "1274559"
  },
  {
    "start": "1272000",
    "end": "1306000"
  },
  {
    "text": "i wanted to i know what i've said so far it's quite theoretical and i kind of have been odd about whether to to just",
    "start": "1274559",
    "end": "1280000"
  },
  {
    "text": "leave it at that um or not i decided i would i would show like a work example of a real incident in a production",
    "start": "1280000",
    "end": "1286080"
  },
  {
    "text": "system um uh in in these terms um it does show some like kind of product",
    "start": "1286080",
    "end": "1291840"
  },
  {
    "text": "screenshot stuff but this is not meant to be a demo or something like that it's just meant to to help illustrate um",
    "start": "1291840",
    "end": "1298480"
  },
  {
    "text": "uh you know conceptually how this plays out in practice specifically around a kafka outage um and i've removed all the",
    "start": "1298480",
    "end": "1304799"
  },
  {
    "text": "branding and stuff from from these slides so i hope that's okay so here's a picture of a dashboard or a chart and a",
    "start": "1304799",
    "end": "1310559"
  },
  {
    "start": "1306000",
    "end": "1588000"
  },
  {
    "text": "dashboard showing um consumer lag for a kafka queue actually in lightstep's own internal",
    "start": "1310559",
    "end": "1315840"
  },
  {
    "text": "system so this is a real it wasn't like a an outage that required an incident and stuff like that but uh or it wasn't an",
    "start": "1315840",
    "end": "1322640"
  },
  {
    "text": "outage that had a customer visible effect but it was definitely something where people were scrambling to figure out what's going on so you can see in",
    "start": "1322640",
    "end": "1329120"
  },
  {
    "text": "1045 things are fine and then they became not fine so classic situation you have kafka which",
    "start": "1329120",
    "end": "1335600"
  },
  {
    "text": "is a distributed system and of itself it's a resource clearly something has gone wrong because it's getting really",
    "start": "1335600",
    "end": "1341600"
  },
  {
    "text": "slow to do anything as a consumer you having to wait a really long time to get any data out of the kafka queue all",
    "start": "1341600",
    "end": "1347760"
  },
  {
    "text": "right so what do you want to do now i think one option would be to try and like group buy and filter this in",
    "start": "1347760",
    "end": "1354159"
  },
  {
    "text": "various ways what we really want to be able to do is just say you know what changed in this resource this resource",
    "start": "1354159",
    "end": "1359679"
  },
  {
    "text": "has transactions going through it a lot of them actually right here and i also have transactions going through it right",
    "start": "1359679",
    "end": "1365600"
  },
  {
    "text": "here so what changed about the transactions between this period and this period",
    "start": "1365600",
    "end": "1372080"
  },
  {
    "text": "that's what i actually want to know as an operator because that's probably going to give me a clue because the code",
    "start": "1372080",
    "end": "1377120"
  },
  {
    "text": "didn't change in kafka the workload changed how all right so you should be able to click on this",
    "start": "1377120",
    "end": "1382480"
  },
  {
    "text": "thing and um uh you know here you can see the the query uh you should be able to click on",
    "start": "1382480",
    "end": "1388720"
  },
  {
    "text": "this change and say okay what caused this change and then get to ui where we say okay so",
    "start": "1388720",
    "end": "1396159"
  },
  {
    "text": "here's the anomaly where the queue is unhappy here is a baseline where it was working normally",
    "start": "1396159",
    "end": "1403280"
  },
  {
    "text": "and again we're just sort of zooming in to see what these two periods look like and then what we really want to do is to",
    "start": "1403280",
    "end": "1409200"
  },
  {
    "text": "understand statistically um what's different about the transactions here and the transactions there if we were in",
    "start": "1409200",
    "end": "1416000"
  },
  {
    "text": "a normal talk and not a pre-recorded talk i'd say do people understand what i'm saying i hope you i hope this is clear",
    "start": "1416000",
    "end": "1422080"
  },
  {
    "text": "enough um we're trying to understand not just that kafka is unhappy but what's different about the workload here versus",
    "start": "1422080",
    "end": "1428640"
  },
  {
    "text": "here but the beauty is that there are tags the kafka queue has a name the hosts",
    "start": "1428640",
    "end": "1434159"
  },
  {
    "text": "involved have names and the traces that go through the kafka queue also are annotated with those tags so we can",
    "start": "1434159",
    "end": "1440880"
  },
  {
    "text": "actually join from this resource over to the workload and actually answer that question going back to those giant sql",
    "start": "1440880",
    "end": "1447520"
  },
  {
    "text": "tables i was talking about we can say okay so let's just look at the traces that went through this specific kafka",
    "start": "1447520",
    "end": "1454080"
  },
  {
    "text": "cube because that's a column in that giant table let's just let's just um look at the traces that went through",
    "start": "1454080",
    "end": "1459840"
  },
  {
    "text": "that specific cue in these two different time windows and understand what other things are correlated with this",
    "start": "1459840",
    "end": "1465679"
  },
  {
    "text": "regression and what we see is that you know in this multi-tenant system",
    "start": "1465679",
    "end": "1471919"
  },
  {
    "text": "with many different customers there's a single customer um whose productivity is one seven five three that went from",
    "start": "1471919",
    "end": "1478400"
  },
  {
    "text": "being point eight percent of all the traces to almost sixteen percent of all the traces so that's about a you know",
    "start": "1478400",
    "end": "1484720"
  },
  {
    "text": "20x ish increase um between this baseline and the regression so that's",
    "start": "1484720",
    "end": "1490240"
  },
  {
    "text": "actually really interesting so some customer like significantly changed their workload and that's exactly the",
    "start": "1490240",
    "end": "1495919"
  },
  {
    "text": "sort of thing i'm looking for the trouble is that customer tag is like way way way up the stack it's not even",
    "start": "1495919",
    "end": "1501279"
  },
  {
    "text": "available in the kafka queue only by pivoting from the resources to distributed",
    "start": "1501279",
    "end": "1506960"
  },
  {
    "text": "distributed transaction traces are we able to understand automatically that there's a specific customer id that's",
    "start": "1506960",
    "end": "1512559"
  },
  {
    "text": "involved in this regression um and then yeah so here's this now we get more detail on this by",
    "start": "1512559",
    "end": "1518240"
  },
  {
    "text": "expanding it to say okay so we're again increasing by about 20x um and then you",
    "start": "1518240",
    "end": "1524159"
  },
  {
    "text": "know if you want to we can view sample traces to see specifically what that customer is doing and i'm not going",
    "start": "1524159",
    "end": "1530640"
  },
  {
    "text": "to go into that it's not the point but what i'm trying to illustrate is that it's possible to go from",
    "start": "1530640",
    "end": "1536640"
  },
  {
    "text": "this feeling to this feeling without writing any queries",
    "start": "1536640",
    "end": "1542000"
  },
  {
    "text": "like you shouldn't need to be an expert to pivot from resources to transactions but right now it's very very difficult",
    "start": "1542000",
    "end": "1547520"
  },
  {
    "text": "to do this actually in general anyway so i think that my vision for observability is that we",
    "start": "1547520",
    "end": "1553440"
  },
  {
    "text": "stopped talking about metrics logs and tracing as the point of observability that's just the raw data and instead we",
    "start": "1553440",
    "end": "1560720"
  },
  {
    "text": "allow operators to understand the health of their application in terms of slos",
    "start": "1560720",
    "end": "1566960"
  },
  {
    "text": "understand the health of their resources just as they do today and then to pivot between those two things naturally um",
    "start": "1566960",
    "end": "1573840"
  },
  {
    "text": "without having to write queries uh and to understand how the workload affects",
    "start": "1573840",
    "end": "1579039"
  },
  {
    "text": "the um the transaction workload affects the resources and how resource health affects the transaction workload without",
    "start": "1579039",
    "end": "1585520"
  },
  {
    "text": "having to lift a finger or do any real work so summing up transactions they traverse",
    "start": "1585520",
    "end": "1591039"
  },
  {
    "start": "1588000",
    "end": "1637000"
  },
  {
    "text": "systems use resources users don't give an about your resources and similarly devops can't do",
    "start": "1591039",
    "end": "1598080"
  },
  {
    "text": "anything about individual transactions they can only do things about their resources at least not manually",
    "start": "1598080",
    "end": "1604320"
  },
  {
    "text": "and we must be able to use systems and use providers that join resources and",
    "start": "1604320",
    "end": "1610320"
  },
  {
    "text": "transactions naturally to address the most important question and observability which is what caused that",
    "start": "1610320",
    "end": "1615760"
  },
  {
    "text": "change um whether it's a change in my transactions or a change in my resources and that's really where i think",
    "start": "1615760",
    "end": "1621679"
  },
  {
    "text": "observability is headed kind of on this uh within this framework of resources and transactions",
    "start": "1621679",
    "end": "1628159"
  },
  {
    "text": "all right i think i'm done i'm going to stop this recording and",
    "start": "1628159",
    "end": "1634400"
  },
  {
    "text": "take questions thanks a lot",
    "start": "1634400",
    "end": "1638760"
  },
  {
    "start": "1637000",
    "end": "1801000"
  },
  {
    "text": "hi there ben thank you so much that was a great tour thank you i'm glad to be here",
    "start": "1641039",
    "end": "1646320"
  },
  {
    "text": "great to have you here so yeah you did get quite a lot of questions um throughout your talk that i saw you went",
    "start": "1646320",
    "end": "1651440"
  },
  {
    "text": "through and answered um so yeah i just thought it would be interesting as well to ask a few extra questions",
    "start": "1651440",
    "end": "1658159"
  },
  {
    "text": "so you spoke about the costs of storing data so that's always like a really tricky conversation i think for folks",
    "start": "1658159",
    "end": "1664799"
  },
  {
    "text": "but what are your general tips there for having those conversations so that you can you know minimize the cost but",
    "start": "1664799",
    "end": "1670559"
  },
  {
    "text": "maximize observability yeah i mean it's definitely a problem",
    "start": "1670559",
    "end": "1675840"
  },
  {
    "text": "right now uh but i guess i i don't know i have so much to say about that topic but",
    "start": "1675840",
    "end": "1682799"
  },
  {
    "text": "the first things that come to mind are um well first of all are we talking about transactions or resources which is",
    "start": "1682799",
    "end": "1688000"
  },
  {
    "text": "to say are we talking about things like traces and logs or more like statistical time serious data like metrics uh",
    "start": "1688000",
    "end": "1694640"
  },
  {
    "text": "because i think the conversation is different for for those two categories of telemetry but what we found at least",
    "start": "1694640",
    "end": "1701440"
  },
  {
    "text": "in in my time at google and then with lightstep as well is that it's not like there's it's not just a binary thing do you keep",
    "start": "1701440",
    "end": "1707440"
  },
  {
    "text": "data or you do not keep it it's like you know do you sample it to begin with do you get it off the host do you",
    "start": "1707440",
    "end": "1713840"
  },
  {
    "text": "centralize it over the wide area network how long do you store it at what granularity do you store it and like you",
    "start": "1713840",
    "end": "1719520"
  },
  {
    "text": "know how does it degrade over time in terms of the precision and when you see organizations that get very",
    "start": "1719520",
    "end": "1725520"
  },
  {
    "text": "sophisticated about this they actually have different answers along that entire life cycle for the telemetry",
    "start": "1725520",
    "end": "1732000"
  },
  {
    "text": "so i think it's a really challenging it's a really challenging question to answer because it kind of depends on unlike what granularity you're talking",
    "start": "1732000",
    "end": "1737919"
  },
  {
    "text": "about but the main thing i would say is if if an organization doesn't have the capacity to profile",
    "start": "1737919",
    "end": "1744000"
  },
  {
    "text": "their telemetry costs for that entire life cycle including network which is actually",
    "start": "1744000",
    "end": "1749919"
  },
  {
    "text": "one of the largest components of the lifetime cost is just sending the data if you can't profile it it's like any",
    "start": "1749919",
    "end": "1755919"
  },
  {
    "text": "kind of optimization problem you have to start there and i think frankly a lot of organizations aren't able to profile it",
    "start": "1755919",
    "end": "1761919"
  },
  {
    "text": "uh like you can't say like you know which part of your application is causing you the most",
    "start": "1761919",
    "end": "1767200"
  },
  {
    "text": "long-term telemetry costs and until you can do that there's no way to optimize it um",
    "start": "1767200",
    "end": "1772399"
  },
  {
    "text": "so i'd start there and then for folks that have done that i think the main thing is being able to control",
    "start": "1772399",
    "end": "1777600"
  },
  {
    "text": "the cost of an individual developer like adding a line of code adds too much cardinality symmetric like that can cost",
    "start": "1777600",
    "end": "1783600"
  },
  {
    "text": "hundreds of thousands of dollars a year if you are you know doing it wrong so being able to correct for that in a",
    "start": "1783600",
    "end": "1789360"
  },
  {
    "text": "central place i think is the next thing to focus on make sure that an individual instrumentation line can't balloon into",
    "start": "1789360",
    "end": "1796480"
  },
  {
    "text": "some kind of unbounded cost for the platform team awesome thank you so much for sharing so",
    "start": "1796480",
    "end": "1804240"
  },
  {
    "start": "1801000",
    "end": "1856000"
  },
  {
    "text": "another interesting thing too i really liked your example at the end where you went through an incident that had happened and you shared on the screen um",
    "start": "1804240",
    "end": "1811200"
  },
  {
    "text": "so ben brought up light steps so you can actually see how it works and i've used it myself as well and i thought it was",
    "start": "1811200",
    "end": "1816720"
  },
  {
    "text": "really amazing how quickly you could go down to an actual specific customer doing a",
    "start": "1816720",
    "end": "1822080"
  },
  {
    "text": "certain action and it causing an incident and i know for myself like this has happened so many times over my",
    "start": "1822080",
    "end": "1828640"
  },
  {
    "text": "career working on production systems and being able to get down to that really really small like granular level super",
    "start": "1828640",
    "end": "1835440"
  },
  {
    "text": "fast is very effective so i saw we had a question in the chat what was the web interface that was able",
    "start": "1835440",
    "end": "1841840"
  },
  {
    "text": "to output the important differences given um two time intervals did you want to talk a little bit about that then",
    "start": "1841840",
    "end": "1848159"
  },
  {
    "text": "like you know your thoughts around that like how different interfaces can actually help",
    "start": "1848159",
    "end": "1854720"
  },
  {
    "text": "people do a better job like it's a big thing yeah sure i mean this is an editorial talk and i as i said during",
    "start": "1854720",
    "end": "1860320"
  },
  {
    "start": "1856000",
    "end": "1936000"
  },
  {
    "text": "the recording i hesitated to show that i just literally don't i don't know of any other way to show it and i feel like",
    "start": "1860320",
    "end": "1865840"
  },
  {
    "text": "it's too abstract if i don't show something um so yeah i mean that to answer the literal question that was light steps product but um it's there's",
    "start": "1865840",
    "end": "1873279"
  },
  {
    "text": "no reason why it couldn't be done you know somewhere else if you can do the integration of the data layer i think",
    "start": "1873279",
    "end": "1879120"
  },
  {
    "text": "the thing that makes it difficult in practice is that the integration between the the resource",
    "start": "1879120",
    "end": "1885440"
  },
  {
    "text": "metrics data and the transaction tracing data has to be done at the data layer you",
    "start": "1885440",
    "end": "1890559"
  },
  {
    "text": "can't just do it via hyperlinks because there's a what i described as a join is actually a",
    "start": "1890559",
    "end": "1895679"
  },
  {
    "text": "join like you have to be able to join from tags in the metrics over to tags on groups of thousands of traces and to do",
    "start": "1895679",
    "end": "1901440"
  },
  {
    "text": "that requires um some data engineering at the platform level and um i'd love it",
    "start": "1901440",
    "end": "1906640"
  },
  {
    "text": "actually to see more solutions in the open source world go in that direction i do think that",
    "start": "1906640",
    "end": "1912080"
  },
  {
    "text": "that's the uh it's the shortest path for you know incident resolution for sure is",
    "start": "1912080",
    "end": "1917600"
  },
  {
    "text": "being able to pivot via tags between time series data and transaction data",
    "start": "1917600",
    "end": "1923039"
  },
  {
    "text": "but it's actually a difficult problem if if you have to start with like a siloed metrics solution and a siloed",
    "start": "1923039",
    "end": "1929200"
  },
  {
    "text": "tracing solution to do that from like the web ui because the integration has to be at the data layer and that's what",
    "start": "1929200",
    "end": "1934240"
  },
  {
    "text": "makes it so tricky from a product standpoint yes definitely yeah and i've seen some",
    "start": "1934240",
    "end": "1939679"
  },
  {
    "start": "1936000",
    "end": "1992000"
  },
  {
    "text": "platforms be created internally at places i've worked but it takes you know many years and a lot of iteration to be",
    "start": "1939679",
    "end": "1944799"
  },
  {
    "text": "able to get it to work right so not at all easy um the interesting thing too like when you do have access to systems",
    "start": "1944799",
    "end": "1951919"
  },
  {
    "text": "like this say for example you have one customer that suddenly changed their pattern but maybe it's great right maybe they've",
    "start": "1951919",
    "end": "1957519"
  },
  {
    "text": "onboarded all these new users and like a whole bunch of amazing work is happening it means you can then actually say to",
    "start": "1957519",
    "end": "1963600"
  },
  {
    "text": "other teams like maybe the business side of the company hey like looks like this customer's doing really great work like you should probably know about that did",
    "start": "1963600",
    "end": "1970240"
  },
  {
    "text": "you know they were even doing that so it enables engineering teams to have like better conversations with really um",
    "start": "1970240",
    "end": "1977519"
  },
  {
    "text": "interesting and insightful data which i think is good too so we had another question here what are",
    "start": "1977519",
    "end": "1983279"
  },
  {
    "text": "your recommended tools to what's the recommended tools to get tracing it's always a service mesh or",
    "start": "1983279",
    "end": "1988880"
  },
  {
    "text": "something similar or is it better to do it individually inside of the system yeah i actually did a talk in",
    "start": "1988880",
    "end": "1996399"
  },
  {
    "start": "1992000",
    "end": "2081000"
  },
  {
    "text": "i think it was 2017 at kubecon about service mesh and tracing and there's",
    "start": "1996399",
    "end": "2002320"
  },
  {
    "text": "unfortunately bad news for for the person asking the question i guess it's uh fernando right",
    "start": "2002320",
    "end": "2008320"
  },
  {
    "text": "um uh service mesh is helpful but absolutely does not solve the problem",
    "start": "2008320",
    "end": "2013440"
  },
  {
    "text": "all that service mesh really does is give you telemetry about you know the calls between services but the hard part",
    "start": "2013440",
    "end": "2020159"
  },
  {
    "text": "of tracing the well the hardest part of tracing has always been successfully propagating this like trace",
    "start": "2020159",
    "end": "2026799"
  },
  {
    "text": "id context from ingress in a service through you know the function calls out",
    "start": "2026799",
    "end": "2032080"
  },
  {
    "text": "to the egress from that service and the service mesh has nothing to do with that the service mesh only handles the calls",
    "start": "2032080",
    "end": "2037600"
  },
  {
    "text": "between services it's within the service it's the hardest part of tracing and it doesn't really help so you end up with a",
    "start": "2037600",
    "end": "2042880"
  },
  {
    "text": "bunch of data about you know point-to-point data with service mesh but to actually successfully address the",
    "start": "2042880",
    "end": "2048720"
  },
  {
    "text": "context propagation problem um the only advice i have would be to move towards open telemetry which",
    "start": "2048720",
    "end": "2055200"
  },
  {
    "text": "actually is trying to address that problem in a in a you know pretty comprehensive way and make that sort of",
    "start": "2055200",
    "end": "2060480"
  },
  {
    "text": "context propagation a built-in feature and indeed an open telemetry will also integrate with service mesh but um but",
    "start": "2060480",
    "end": "2066800"
  },
  {
    "text": "there is part of the pitch for service mesh is that it solves the tracing problem and it's just not true um it it",
    "start": "2066800",
    "end": "2072560"
  },
  {
    "text": "adds data for tracing but it doesn't solve the context propagation problem that's actually at the core of distributed tracing i hope that that's",
    "start": "2072560",
    "end": "2079280"
  },
  {
    "text": "helpful yeah thank you and there's another just uh question around open telemetry so",
    "start": "2079280",
    "end": "2086320"
  },
  {
    "start": "2081000",
    "end": "2179000"
  },
  {
    "text": "what's your thoughts there i mean i'm extremely biased in that i'm",
    "start": "2086320",
    "end": "2091679"
  },
  {
    "text": "on the governing committee and i co-created the project but um but uh",
    "start": "2091679",
    "end": "2096800"
  },
  {
    "text": "it's you know it's it does seem objectively to be a very successful project from the standpoint",
    "start": "2096800",
    "end": "2102800"
  },
  {
    "text": "of you know having many contributors i think we have a thousand contributors in the last month alone and you know every major",
    "start": "2102800",
    "end": "2110000"
  },
  {
    "text": "vendor and cloud provider is bought in and staffing the project and so on so the only issue with open telemetry is",
    "start": "2110000",
    "end": "2115440"
  },
  {
    "text": "that it has so much activity that we're having some difficulty just literally maintaining the project um but it's um i",
    "start": "2115440",
    "end": "2122400"
  },
  {
    "text": "think the reason it's been so successful is that it's it benefits many parties uh it's just kind of a win-win for",
    "start": "2122400",
    "end": "2129599"
  },
  {
    "text": "you know major infrastructure providers cloud providers observability vendors and especially for end users because you can",
    "start": "2129599",
    "end": "2136160"
  },
  {
    "text": "end up getting high quality telemetry without binding yourself to any particular vendor or provider and that",
    "start": "2136160",
    "end": "2142079"
  },
  {
    "text": "kind of portability is a very attractive thing and i think um",
    "start": "2142079",
    "end": "2147680"
  },
  {
    "text": "uh you know observability solutions have long been been constrained by the quality of the",
    "start": "2147680",
    "end": "2153839"
  },
  {
    "text": "telemetry they can collect and open telemetry like really is going to rise that tide and then you'll see",
    "start": "2153839",
    "end": "2160320"
  },
  {
    "text": "solutions improve as a result so i mean open telemetry yeah it's a very exciting project i think the only thing we really",
    "start": "2160320",
    "end": "2166800"
  },
  {
    "text": "need is just to be able to say no a little bit within the project so that we can we can hit",
    "start": "2166800",
    "end": "2172800"
  },
  {
    "text": "our milestones it's been a victim of its own success to a certain extent but it definitely has a bright future i would",
    "start": "2172800",
    "end": "2178000"
  },
  {
    "text": "say that's great do you um have a few things to share for the road map of open",
    "start": "2178000",
    "end": "2183359"
  },
  {
    "start": "2179000",
    "end": "2241000"
  },
  {
    "text": "telemetry just over this year a few things you're excited about uh yeah i mean the the most exciting",
    "start": "2183359",
    "end": "2190000"
  },
  {
    "text": "thing to me is uh that the open telemetry so i was saying the three pillars of traces metrics and logs",
    "start": "2190000",
    "end": "2196880"
  },
  {
    "text": "don't really make any sense for observability and i will hold my line on that but they definitely make sense for telemetry um so those three aspects um",
    "start": "2196880",
    "end": "2204960"
  },
  {
    "text": "we started with tracing that's basically been g8 at this point metrics is coming",
    "start": "2204960",
    "end": "2210400"
  },
  {
    "text": "up soon and then logging will come later i think it's actually the least important of the three for open telemetry to address from",
    "start": "2210400",
    "end": "2217280"
  },
  {
    "text": "a standard uh and um api integration standpoint uh so",
    "start": "2217280",
    "end": "2222720"
  },
  {
    "text": "i'm very excited for metrics to get um past that point and we're also doing a lot of work with the prometheus",
    "start": "2222720",
    "end": "2228480"
  },
  {
    "text": "community to make sure that there's interoperation between prometheus and open telemetry so that you won't be",
    "start": "2228480",
    "end": "2235440"
  },
  {
    "text": "forced to choose and i think that's also going to be a really good thing to see that stabilize this summer that's",
    "start": "2235440",
    "end": "2242000"
  },
  {
    "start": "2241000",
    "end": "2341000"
  },
  {
    "text": "awesome yeah i'm sure we've got a lot of prometheus users um watching along right now as well and i guess we've only got",
    "start": "2242000",
    "end": "2247520"
  },
  {
    "text": "time for probably one last question so there's another question here a common question around the performance",
    "start": "2247520",
    "end": "2254240"
  },
  {
    "text": "cost associated with distributed tracing so what's your your thoughts there",
    "start": "2254240",
    "end": "2259359"
  },
  {
    "text": "yeah and by the way i think you know i'll i'll go to the hangout the speaker thing after this um so i'm happy to",
    "start": "2259359",
    "end": "2264720"
  },
  {
    "text": "continue this conversation but uh yeah good question i mean distributed tracing",
    "start": "2264720",
    "end": "2270780"
  },
  {
    "text": "[Music] does not have any uh it does not need to have any overhead from a latency standpoint there is some",
    "start": "2270780",
    "end": "2277680"
  },
  {
    "text": "kind of minimal marginal throughput overhead in the sense that it does take resources",
    "start": "2277680",
    "end": "2282720"
  },
  {
    "text": "but usually people can adopt some kind of sampling to address that the dapper paper that i helped to",
    "start": "2282720",
    "end": "2288320"
  },
  {
    "text": "write at google describes and details our measurements for performance but it was imperceptible in the sense that it",
    "start": "2288320",
    "end": "2293760"
  },
  {
    "text": "was in the statistical noise and dapper runs 100 of the time for 100 of google",
    "start": "2293760",
    "end": "2299040"
  },
  {
    "text": "services and has for like 15 years so it's definitely not like a high overhead thing if it's done correctly and that",
    "start": "2299040",
    "end": "2305119"
  },
  {
    "text": "that's one of the beauties of it awesome well thank you so much ben so we've reached the time allotted for this",
    "start": "2305119",
    "end": "2310320"
  },
  {
    "text": "session um we invite everyone to come and join us in the hangout with the speaker in the zoom room so you can find",
    "start": "2310320",
    "end": "2315920"
  },
  {
    "text": "that on the schedule and it'll be just an informal opportunity to ask questions and share your thoughts with ben so",
    "start": "2315920",
    "end": "2321040"
  },
  {
    "text": "please turn your camera on when you join there to chat and ask questions thank you so much ben and thank you",
    "start": "2321040",
    "end": "2326640"
  },
  {
    "text": "everyone for attending thank you so much [Music]",
    "start": "2326640",
    "end": "2339310"
  },
  {
    "text": "you",
    "start": "2341599",
    "end": "2343680"
  }
]