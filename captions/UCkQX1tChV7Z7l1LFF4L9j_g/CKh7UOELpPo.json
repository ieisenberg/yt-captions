[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "100",
    "end": "23560"
  },
  {
    "text": "all right everyone can hear me great I'm",
    "start": "24720",
    "end": "28000"
  },
  {
    "text": "John",
    "start": "28000",
    "end": "28960"
  },
  {
    "text": "McCutchen my talk is going to be pretty",
    "start": "28960",
    "end": "30880"
  },
  {
    "text": "lowlevel so I hope you enjoyed Seth's",
    "start": "30880",
    "end": "33200"
  },
  {
    "text": "talk which was nice and high level gooey",
    "start": "33200",
    "end": "35680"
  },
  {
    "text": "stuff I'm going to go right into the VM",
    "start": "35680",
    "end": "37640"
  },
  {
    "text": "so let's have some",
    "start": "37640",
    "end": "39800"
  },
  {
    "text": "fun to give you an idea of my background",
    "start": "39800",
    "end": "42760"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "uh it's a little bit different to be at",
    "start": "42760",
    "end": "44120"
  },
  {
    "text": "a like a web development uh talk uh when",
    "start": "44120",
    "end": "47960"
  },
  {
    "text": "I was in university I wrote something",
    "start": "47960",
    "end": "49160"
  },
  {
    "text": "called I notify which is a module for",
    "start": "49160",
    "end": "51320"
  },
  {
    "text": "the Linux kernel that does file system",
    "start": "51320",
    "end": "54039"
  },
  {
    "text": "notifications so if something changes on",
    "start": "54039",
    "end": "56359"
  },
  {
    "text": "your dis an event will be delivered to",
    "start": "56359",
    "end": "58320"
  },
  {
    "text": "an application it's it's used everywhere",
    "start": "58320",
    "end": "61120"
  },
  {
    "text": "every Android phone uses it every Linux",
    "start": "61120",
    "end": "64320"
  },
  {
    "text": "desktop every Linux server is using I",
    "start": "64320",
    "end": "66960"
  },
  {
    "text": "notify after doing that I started",
    "start": "66960",
    "end": "69600"
  },
  {
    "text": "working at PlayStation where I helped",
    "start": "69600",
    "end": "71400"
  },
  {
    "text": "Port bullet physics which is a 3D",
    "start": "71400",
    "end": "73720"
  },
  {
    "text": "physics library to the PlayStation 3",
    "start": "73720",
    "end": "76479"
  },
  {
    "text": "which is a lot of fun because the PS3",
    "start": "76479",
    "end": "78759"
  },
  {
    "text": "has a very interesting CPU architecture",
    "start": "78759",
    "end": "81240"
  },
  {
    "text": "with these uh CPUs called spus which",
    "start": "81240",
    "end": "85240"
  },
  {
    "text": "are they're they're interesting in that",
    "start": "85240",
    "end": "87600"
  },
  {
    "text": "they can't access main memory directly",
    "start": "87600",
    "end": "90079"
  },
  {
    "text": "um so it takes a lot of juggling to get",
    "start": "90079",
    "end": "92079"
  },
  {
    "text": "data and code in and",
    "start": "92079",
    "end": "93720"
  },
  {
    "text": "out so when that project kind of ramped",
    "start": "93720",
    "end": "97040"
  },
  {
    "text": "down I started to just be a go-to",
    "start": "97040",
    "end": "100920"
  },
  {
    "text": "optimization guy so if uh a game company",
    "start": "100920",
    "end": "104159"
  },
  {
    "text": "that was developing for the Playstation",
    "start": "104159",
    "end": "105600"
  },
  {
    "text": "3 needed to make their game go fast I",
    "start": "105600",
    "end": "108360"
  },
  {
    "text": "would fly out to them and spend a couple",
    "start": "108360",
    "end": "110200"
  },
  {
    "text": "weeks working on their code base speed",
    "start": "110200",
    "end": "112399"
  },
  {
    "text": "things up and then come back um and then",
    "start": "112399",
    "end": "115280"
  },
  {
    "text": "I can finally talk about this now I",
    "start": "115280",
    "end": "116759"
  },
  {
    "text": "spent a year and a half uh studying the",
    "start": "116759",
    "end": "119439"
  },
  {
    "text": "PlayStation for CPU and GPU",
    "start": "119439",
    "end": "122200"
  },
  {
    "text": "architecture um before uh leaving for",
    "start": "122200",
    "end": "125159"
  },
  {
    "text": "Google so it's a little bit interesting",
    "start": "125159",
    "end": "128200"
  },
  {
    "text": "so here I am at a web developers",
    "start": "128200",
    "end": "129840"
  },
  {
    "text": "conference and and what brought me here",
    "start": "129840",
    "end": "132319"
  },
  {
    "text": "uh in particular it was D um I come from",
    "start": "132319",
    "end": "135480"
  },
  {
    "text": "I am a C++ programmer uh just in my",
    "start": "135480",
    "end": "138480"
  },
  {
    "text": "blood and JavaScript is not that much",
    "start": "138480",
    "end": "141840"
  },
  {
    "text": "fun for me I I suck at it it's very",
    "start": "141840",
    "end": "145280"
  },
  {
    "text": "difficult um so Dart and its structured",
    "start": "145280",
    "end": "148280"
  },
  {
    "text": "uh approach to web programming just",
    "start": "148280",
    "end": "150440"
  },
  {
    "text": "it caught me right away it was like fly",
    "start": "150440",
    "end": "152200"
  },
  {
    "text": "paper and I'm a fly just stuck I'm there",
    "start": "152200",
    "end": "155560"
  },
  {
    "text": "webgl you can do 3D in a browser now",
    "start": "155560",
    "end": "157959"
  },
  {
    "text": "HTML 5 the browser to me is an operating",
    "start": "157959",
    "end": "161800"
  },
  {
    "text": "system that I want to develop really",
    "start": "161800",
    "end": "164040"
  },
  {
    "text": "high performant high-end applications in",
    "start": "164040",
    "end": "166360"
  },
  {
    "text": "and I want to make that possible so it's",
    "start": "166360",
    "end": "168840"
  },
  {
    "text": "kind of like this Collision Of Two",
    "start": "168840",
    "end": "170200"
  },
  {
    "text": "Worlds I come from a low-level kernel",
    "start": "170200",
    "end": "173120"
  },
  {
    "text": "systems programming background and now",
    "start": "173120",
    "end": "175720"
  },
  {
    "text": "I'm coming to the web and I'm trying to",
    "start": "175720",
    "end": "177480"
  },
  {
    "text": "see how I can be helpful and so I've",
    "start": "177480",
    "end": "181000"
  },
  {
    "text": "been experimenting with bringing simd to",
    "start": "181000",
    "end": "183280"
  },
  {
    "text": "the web and I'll get into what that is",
    "start": "183280",
    "end": "185519"
  },
  {
    "text": "and why it",
    "start": "185519",
    "end": "187440"
  },
  {
    "text": "matters so what is it about Dart that I",
    "start": "187440",
    "end": "189959"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "I really liked um well first of all the",
    "start": "189959",
    "end": "192360"
  },
  {
    "text": "structure um I love that it has a type",
    "start": "192360",
    "end": "196000"
  },
  {
    "text": "system even if it's only tool visible my",
    "start": "196000",
    "end": "198120"
  },
  {
    "text": "preference would be for a type system",
    "start": "198120",
    "end": "199519"
  },
  {
    "text": "that's available in the language but",
    "start": "199519",
    "end": "202040"
  },
  {
    "text": "I'll take a tool-based type system over",
    "start": "202040",
    "end": "204799"
  },
  {
    "text": "no type system having the tool say hey",
    "start": "204799",
    "end": "206920"
  },
  {
    "text": "you just called a method that doesn't",
    "start": "206920",
    "end": "208439"
  },
  {
    "text": "exist or you just assign into some",
    "start": "208439",
    "end": "210159"
  },
  {
    "text": "variable that doesn't exist or you did",
    "start": "210159",
    "end": "211680"
  },
  {
    "text": "something silly and warns me right there",
    "start": "211680",
    "end": "213640"
  },
  {
    "text": "before I run the code I need that I'm a",
    "start": "213640",
    "end": "217480"
  },
  {
    "text": "lazy kind of sloppy guy and it's I make",
    "start": "217480",
    "end": "220040"
  },
  {
    "text": "a lot of Errors tools are great it's",
    "start": "220040",
    "end": "222439"
  },
  {
    "text": "class-based and objectoriented which is",
    "start": "222439",
    "end": "225120"
  },
  {
    "text": "I like the Prototype based uh language",
    "start": "225120",
    "end": "227200"
  },
  {
    "text": "in JavaScript but it's almost too",
    "start": "227200",
    "end": "229239"
  },
  {
    "text": "flexible it's kind of it's a lot of fun",
    "start": "229239",
    "end": "231640"
  },
  {
    "text": "but it's this weird sludge and I'm used",
    "start": "231640",
    "end": "233519"
  },
  {
    "text": "to working in a class-based",
    "start": "233519",
    "end": "236360"
  },
  {
    "text": "world lexical this this is huge every",
    "start": "236360",
    "end": "239360"
  },
  {
    "text": "time I write code on JavaScript I get",
    "start": "239360",
    "end": "241239"
  },
  {
    "text": "bitten by this where I because of my own",
    "start": "241239",
    "end": "244760"
  },
  {
    "text": "ignorance of JavaScript I get into the",
    "start": "244760",
    "end": "246879"
  },
  {
    "text": "situation where this is the wrong this",
    "start": "246879",
    "end": "249519"
  },
  {
    "text": "and in Dart that never happens to me so",
    "start": "249519",
    "end": "251640"
  },
  {
    "text": "I really appreciate this this is kind of",
    "start": "251640",
    "end": "253319"
  },
  {
    "text": "a weird one I love that you require",
    "start": "253319",
    "end": "254760"
  },
  {
    "text": "semicolons I get into debates at work",
    "start": "254760",
    "end": "257440"
  },
  {
    "text": "about this some people hate that there's",
    "start": "257440",
    "end": "258799"
  },
  {
    "text": "semicolon language but to me it's",
    "start": "258799",
    "end": "262000"
  },
  {
    "text": "awesome number two performance and this",
    "start": "262000",
    "end": "264960"
  },
  {
    "text": "is where like I just love performance",
    "start": "264960",
    "end": "267400"
  },
  {
    "text": "and this is what really really uh",
    "start": "267400",
    "end": "269759"
  },
  {
    "text": "attracted me to Dart is Dart is designed",
    "start": "269759",
    "end": "272280"
  },
  {
    "text": "to be less permissive than JavaScript so",
    "start": "272280",
    "end": "274639"
  },
  {
    "text": "that it can run faster and anything that",
    "start": "274639",
    "end": "276520"
  },
  {
    "text": "runs faster I'm into and it comes with a",
    "start": "276520",
    "end": "279720"
  },
  {
    "text": "new VM and this is a new VM written from",
    "start": "279720",
    "end": "281639"
  },
  {
    "text": "scratch designed around Dart and its",
    "start": "281639",
    "end": "283639"
  },
  {
    "text": "functionality and designed to run fast",
    "start": "283639",
    "end": "286479"
  },
  {
    "text": "and so I thought oh this is pretty",
    "start": "286479",
    "end": "288840"
  },
  {
    "text": "interesting this is opens up new",
    "start": "288840",
    "end": "290840"
  },
  {
    "text": "possibilities why don't we bring simd",
    "start": "290840",
    "end": "292800"
  },
  {
    "text": "why isn't simd on the web um it should",
    "start": "292800",
    "end": "297120"
  },
  {
    "text": "be so before I get to simd let's talk",
    "start": "297120",
    "end": "300280"
  },
  {
    "text": "about why Dart can run",
    "start": "300280",
    "end": "303240"
  },
  {
    "text": "fast so in Dart every object has a",
    "start": "303240",
    "end": "306120"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "static shape JavaScript you can do",
    "start": "306120",
    "end": "308240"
  },
  {
    "text": "something like the code up on the on the",
    "start": "308240",
    "end": "310800"
  },
  {
    "text": "screen there where you have your",
    "start": "310800",
    "end": "312280"
  },
  {
    "text": "Constructor for my class and it adds the",
    "start": "312280",
    "end": "314400"
  },
  {
    "text": "fields A and B and then someone goes and",
    "start": "314400",
    "end": "316919"
  },
  {
    "text": "constructs it and then they just add",
    "start": "316919",
    "end": "319000"
  },
  {
    "text": "another property to it you've completely",
    "start": "319000",
    "end": "321080"
  },
  {
    "text": "invalidated all of the optimization",
    "start": "321080",
    "end": "323039"
  },
  {
    "text": "assumptions around instances of my",
    "start": "323039",
    "end": "326039"
  },
  {
    "text": "class in Dart that's not possible again",
    "start": "326039",
    "end": "329840"
  },
  {
    "text": "Dart is designed to be less permissive",
    "start": "329840",
    "end": "332120"
  },
  {
    "start": "331000",
    "end": "331000"
  },
  {
    "text": "guiding you to having more optimized",
    "start": "332120",
    "end": "334560"
  },
  {
    "text": "code wholef free arrays JavaScript that",
    "start": "334560",
    "end": "337639"
  },
  {
    "text": "you can do something like this where you",
    "start": "337639",
    "end": "338919"
  },
  {
    "text": "have big data it's an array and then you",
    "start": "338919",
    "end": "340720"
  },
  {
    "text": "add a bunch of numbers into it and then",
    "start": "340720",
    "end": "342600"
  },
  {
    "text": "somewhere later on you add like big data",
    "start": "342600",
    "end": "345440"
  },
  {
    "text": "at 20,000 at that point the engine says",
    "start": "345440",
    "end": "347919"
  },
  {
    "text": "oh you know what you're not an array",
    "start": "347919",
    "end": "349080"
  },
  {
    "text": "anymore you're actually a key value map",
    "start": "349080",
    "end": "351360"
  },
  {
    "text": "where the keys are the indexes into the",
    "start": "351360",
    "end": "353240"
  },
  {
    "text": "array and it becomes sparse and your",
    "start": "353240",
    "end": "355199"
  },
  {
    "text": "data is spread all over memory it's it's",
    "start": "355199",
    "end": "357360"
  },
  {
    "text": "very bad for performance and it kind of",
    "start": "357360",
    "end": "359639"
  },
  {
    "text": "sucks in Dart you cannot have holes in",
    "start": "359639",
    "end": "362440"
  },
  {
    "text": "your arrays if you want a structure like",
    "start": "362440",
    "end": "364680"
  },
  {
    "text": "this you use a",
    "start": "364680",
    "end": "367400"
  },
  {
    "text": "map there is a distinction between",
    "start": "367639",
    "end": "369960"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "growable and fixed size arrays in Dart",
    "start": "369960",
    "end": "372160"
  },
  {
    "text": "so if you know ahead of time that your",
    "start": "372160",
    "end": "373680"
  },
  {
    "text": "array will never change in size you can",
    "start": "373680",
    "end": "375840"
  },
  {
    "text": "go ahead and allocate it once and dart",
    "start": "375840",
    "end": "378199"
  },
  {
    "text": "will make better optimization",
    "start": "378199",
    "end": "380039"
  },
  {
    "text": "assumptions based on this fact like",
    "start": "380039",
    "end": "381759"
  },
  {
    "text": "hoisting an array bounds check outside",
    "start": "381759",
    "end": "383960"
  },
  {
    "text": "of a loop so that it happens before the",
    "start": "383960",
    "end": "385880"
  },
  {
    "text": "loop",
    "start": "385880",
    "end": "388199"
  },
  {
    "text": "executes there's no prototype change",
    "start": "388560",
    "end": "390840"
  },
  {
    "start": "389000",
    "end": "389000"
  },
  {
    "text": "this is a big uh performance gain in",
    "start": "390840",
    "end": "392479"
  },
  {
    "text": "Dart so in JavaScript if you wrote Fu",
    "start": "392479",
    "end": "394639"
  },
  {
    "text": "equals new some class and you call some",
    "start": "394639",
    "end": "397360"
  },
  {
    "text": "function on it what happens is this you",
    "start": "397360",
    "end": "400199"
  },
  {
    "text": "say hey some class prototype can you",
    "start": "400199",
    "end": "402280"
  },
  {
    "text": "respond to some function no well let's",
    "start": "402280",
    "end": "405919"
  },
  {
    "text": "ask your parent and let's let's ask your",
    "start": "405919",
    "end": "408319"
  },
  {
    "text": "grandparent until you finally find",
    "start": "408319",
    "end": "410720"
  },
  {
    "text": "something in the Prototype chain that",
    "start": "410720",
    "end": "412039"
  },
  {
    "text": "can actually handle some function in",
    "start": "412039",
    "end": "415160"
  },
  {
    "text": "Dart you just extract the class ID and",
    "start": "415160",
    "end": "417840"
  },
  {
    "text": "you go to the class and you grab the",
    "start": "417840",
    "end": "419160"
  },
  {
    "text": "function it's very",
    "start": "419160",
    "end": "422160"
  },
  {
    "text": "fast there is a distinction a",
    "start": "423720",
    "end": "426240"
  },
  {
    "start": "425000",
    "end": "425000"
  },
  {
    "text": "distinction between integer and doubles",
    "start": "426240",
    "end": "429479"
  },
  {
    "text": "so the key Point here is that double",
    "start": "429479",
    "end": "431280"
  },
  {
    "text": "arithmetic is slower than integer",
    "start": "431280",
    "end": "433280"
  },
  {
    "text": "arithmetic and the table at the bottom",
    "start": "433280",
    "end": "435400"
  },
  {
    "text": "of uh the slide here is from a a recent",
    "start": "435400",
    "end": "439199"
  },
  {
    "text": "arm processor showing you the cycle",
    "start": "439199",
    "end": "441560"
  },
  {
    "text": "latency counts for doing arithmetic on",
    "start": "441560",
    "end": "444080"
  },
  {
    "text": "doubles versus integers and you can see",
    "start": "444080",
    "end": "446199"
  },
  {
    "text": "that a double multiplication is three",
    "start": "446199",
    "end": "448000"
  },
  {
    "text": "times as slow as an integer mul",
    "start": "448000",
    "end": "449639"
  },
  {
    "text": "multiplication and an addition is",
    "start": "449639",
    "end": "451599"
  },
  {
    "text": "actually four times as slow so we're",
    "start": "451599",
    "end": "454000"
  },
  {
    "text": "paying this cost every time we do",
    "start": "454000",
    "end": "455520"
  },
  {
    "text": "arithmetic in our programs and it's",
    "start": "455520",
    "end": "457479"
  },
  {
    "text": "unnecessary with a new VM and a new",
    "start": "457479",
    "end": "459639"
  },
  {
    "text": "language we can make better choices that",
    "start": "459639",
    "end": "461400"
  },
  {
    "text": "lead to more performant",
    "start": "461400",
    "end": "463080"
  },
  {
    "text": "code so in that case Dart has both",
    "start": "463080",
    "end": "465560"
  },
  {
    "text": "double and integers and it puts the",
    "start": "465560",
    "end": "467639"
  },
  {
    "text": "control into your hands and you can",
    "start": "467639",
    "end": "469360"
  },
  {
    "text": "decide when it's appropriate so that you",
    "start": "469360",
    "end": "471520"
  },
  {
    "text": "get the most optimal",
    "start": "471520",
    "end": "474080"
  },
  {
    "text": "code all right so that's why this is",
    "start": "474080",
    "end": "477280"
  },
  {
    "text": "really like why I got into Dart I love",
    "start": "477280",
    "end": "479039"
  },
  {
    "text": "performance",
    "start": "479039",
    "end": "480400"
  },
  {
    "text": "the web is really attractive to me I",
    "start": "480400",
    "end": "482000"
  },
  {
    "text": "think the browser is a great",
    "start": "482000",
    "end": "484000"
  },
  {
    "text": "platform and it's it's just very",
    "start": "484000",
    "end": "487240"
  },
  {
    "text": "interesting so I wanted to try something",
    "start": "487240",
    "end": "489080"
  },
  {
    "text": "new and I wanted to try adding simd and",
    "start": "489080",
    "end": "491520"
  },
  {
    "text": "bringing it to the web so what is simd",
    "start": "491520",
    "end": "494319"
  },
  {
    "text": "I'm going to take a guess that how many",
    "start": "494319",
    "end": "496319"
  },
  {
    "text": "people in the room know what simd is oh",
    "start": "496319",
    "end": "499080"
  },
  {
    "text": "all right okay",
    "start": "499080",
    "end": "500840"
  },
  {
    "text": "excellent I'm a good",
    "start": "500840",
    "end": "503960"
  },
  {
    "text": "company all right so before we get into",
    "start": "503960",
    "end": "505960"
  },
  {
    "start": "505000",
    "end": "505000"
  },
  {
    "text": "simd we need to talk about cyti which is",
    "start": "505960",
    "end": "508680"
  },
  {
    "text": "single instruction single data and this",
    "start": "508680",
    "end": "510560"
  },
  {
    "text": "is typically what you're doing when",
    "start": "510560",
    "end": "511680"
  },
  {
    "text": "you're operating uh on data in your",
    "start": "511680",
    "end": "514479"
  },
  {
    "text": "program you have a single instruction",
    "start": "514479",
    "end": "516080"
  },
  {
    "text": "like ad and you have a single piece of",
    "start": "516080",
    "end": "519200"
  },
  {
    "text": "data you add the two values and you up",
    "start": "519200",
    "end": "521800"
  },
  {
    "text": "with the other simd on the other hand is",
    "start": "521800",
    "end": "524600"
  },
  {
    "text": "single instruction multiple data so",
    "start": "524600",
    "end": "527120"
  },
  {
    "text": "again we have a single instruction add",
    "start": "527120",
    "end": "529519"
  },
  {
    "text": "but we have multiple data so you're",
    "start": "529519",
    "end": "532399"
  },
  {
    "text": "actually adding four numbers at the same",
    "start": "532399",
    "end": "534760"
  },
  {
    "text": "time with one",
    "start": "534760",
    "end": "536720"
  },
  {
    "text": "instruction and a good way to think",
    "start": "536720",
    "end": "539000"
  },
  {
    "text": "about this is this is a vector processor",
    "start": "539000",
    "end": "540880"
  },
  {
    "text": "this is perfect for doing 3D",
    "start": "540880",
    "end": "544920"
  },
  {
    "text": "math so why does simd matter well it",
    "start": "544920",
    "end": "547800"
  },
  {
    "text": "brings substantial speed UPS to 3D",
    "start": "547800",
    "end": "549800"
  },
  {
    "text": "graphics 3D physics image processing",
    "start": "549800",
    "end": "552600"
  },
  {
    "text": "signal processing numerical processing",
    "start": "552600",
    "end": "555160"
  },
  {
    "text": "it's not a silver bullet it can't be",
    "start": "555160",
    "end": "556800"
  },
  {
    "text": "applied everywhere but in the areas",
    "start": "556800",
    "end": "558839"
  },
  {
    "text": "where it can be applied the performance",
    "start": "558839",
    "end": "560440"
  },
  {
    "text": "gains are",
    "start": "560440",
    "end": "562800"
  },
  {
    "text": "huge so why does it matter to the web I",
    "start": "562800",
    "end": "565279"
  },
  {
    "start": "564000",
    "end": "564000"
  },
  {
    "text": "mean that's why we're here right well",
    "start": "565279",
    "end": "566760"
  },
  {
    "text": "simd can provide substantial speed UPS",
    "start": "566760",
    "end": "568600"
  },
  {
    "text": "to webg based games like hex which is a",
    "start": "568600",
    "end": "572040"
  },
  {
    "text": "pretty amazing game uh running in a",
    "start": "572040",
    "end": "574399"
  },
  {
    "text": "browser canvas animation other game",
    "start": "574399",
    "end": "577720"
  },
  {
    "text": "algorithms physics physics simulations I",
    "start": "577720",
    "end": "580200"
  },
  {
    "text": "want to see I worked on bullet physics",
    "start": "580200",
    "end": "581920"
  },
  {
    "text": "for like two years I would love to see a",
    "start": "581920",
    "end": "584959"
  },
  {
    "text": "version of bullet physics running in the",
    "start": "584959",
    "end": "586519"
  },
  {
    "text": "browser as fast as it does on a native",
    "start": "586519",
    "end": "590040"
  },
  {
    "text": "uh in a native application and simd is",
    "start": "590040",
    "end": "592200"
  },
  {
    "text": "going to help us get",
    "start": "592200",
    "end": "595160"
  },
  {
    "text": "there so again why does it matter to the",
    "start": "595440",
    "end": "597680"
  },
  {
    "text": "web here we have a timeline of video",
    "start": "597680",
    "end": "599120"
  },
  {
    "text": "games consoles starting at the NES which",
    "start": "599120",
    "end": "601920"
  },
  {
    "text": "was my first console and I love it all",
    "start": "601920",
    "end": "604560"
  },
  {
    "text": "the way up to the",
    "start": "604560",
    "end": "606200"
  },
  {
    "text": "PS3 so I'm drawing this line here and",
    "start": "606200",
    "end": "608920"
  },
  {
    "text": "this was console games in",
    "start": "608920",
    "end": "610640"
  },
  {
    "text": "1998 it's also web games in",
    "start": "610640",
    "end": "614480"
  },
  {
    "text": "2013 we are 15 years behind the",
    "start": "614480",
    "end": "618680"
  },
  {
    "text": "curve we can do better than",
    "start": "618680",
    "end": "622079"
  },
  {
    "text": "that so why does simd matter here is a",
    "start": "622079",
    "end": "626600"
  },
  {
    "start": "624000",
    "end": "624000"
  },
  {
    "text": "CPU die diagram of a recent arm mobile",
    "start": "626600",
    "end": "631240"
  },
  {
    "text": "processor dual core so you see it kind",
    "start": "631240",
    "end": "632880"
  },
  {
    "text": "of mirrored here right the top and the",
    "start": "632880",
    "end": "635399"
  },
  {
    "text": "bottom are the same same structure so",
    "start": "635399",
    "end": "638440"
  },
  {
    "text": "this blue box up here labeled core",
    "start": "638440",
    "end": "640600"
  },
  {
    "text": "that's where all of the integer",
    "start": "640600",
    "end": "642240"
  },
  {
    "text": "operations are",
    "start": "642240",
    "end": "644519"
  },
  {
    "text": "executed this yellow box up here vfp",
    "start": "644519",
    "end": "647959"
  },
  {
    "text": "this is where your double arithmetic is",
    "start": "647959",
    "end": "650600"
  },
  {
    "text": "executed and this red box neon this is",
    "start": "650600",
    "end": "653519"
  },
  {
    "text": "the simd unit that every single one of",
    "start": "653519",
    "end": "656000"
  },
  {
    "text": "our modern smartphones has in it and it",
    "start": "656000",
    "end": "658839"
  },
  {
    "text": "just it's idle it's doing nothing we",
    "start": "658839",
    "end": "661600"
  },
  {
    "text": "cannot touch it from the",
    "start": "661600",
    "end": "664480"
  },
  {
    "text": "web so why does syy matter well SD",
    "start": "664480",
    "end": "667720"
  },
  {
    "text": "requires fewer instructions to be",
    "start": "667720",
    "end": "669399"
  },
  {
    "text": "executed and fewer instructions means",
    "start": "669399",
    "end": "671720"
  },
  {
    "text": "longer battery life and we live in a",
    "start": "671720",
    "end": "674480"
  },
  {
    "text": "very mobile world I mean I I barely make",
    "start": "674480",
    "end": "677360"
  },
  {
    "text": "it a day on on a charge and it would be",
    "start": "677360",
    "end": "680040"
  },
  {
    "text": "nice to make it like two days maybe",
    "start": "680040",
    "end": "681639"
  },
  {
    "text": "three days and SD will help us get",
    "start": "681639",
    "end": "686120"
  },
  {
    "text": "there so here's an interesting thing",
    "start": "686440",
    "end": "688680"
  },
  {
    "text": "Mozilla is actually attempting to use",
    "start": "688680",
    "end": "692279"
  },
  {
    "text": "the simd co-processors in all of our",
    "start": "692279",
    "end": "694880"
  },
  {
    "text": "CPUs automatically and so what they're",
    "start": "694880",
    "end": "697560"
  },
  {
    "text": "doing is they're looking at the uh the",
    "start": "697560",
    "end": "700320"
  },
  {
    "text": "of your program and kind of shaking it",
    "start": "700320",
    "end": "702959"
  },
  {
    "text": "and looking and saying okay actually",
    "start": "702959",
    "end": "704839"
  },
  {
    "text": "right in this one little spot we could",
    "start": "704839",
    "end": "706760"
  },
  {
    "text": "use simdi here this is called automatic",
    "start": "706760",
    "end": "709800"
  },
  {
    "text": "vectorization and it's an open research",
    "start": "709800",
    "end": "711800"
  },
  {
    "text": "topic it's very difficult to get right",
    "start": "711800",
    "end": "713639"
  },
  {
    "text": "and in cases where it does get it right",
    "start": "713639",
    "end": "715920"
  },
  {
    "text": "it works quite well um but it's based on",
    "start": "715920",
    "end": "719639"
  },
  {
    "text": "pattern recognition which requires you",
    "start": "719639",
    "end": "721519"
  },
  {
    "text": "to write your program in some way",
    "start": "721519",
    "end": "724440"
  },
  {
    "text": "that the the VM itself can detect hey",
    "start": "724440",
    "end": "728120"
  },
  {
    "text": "here's a good opportunity to use simd I",
    "start": "728120",
    "end": "730720"
  },
  {
    "text": "don't think that's the optimal way to",
    "start": "730720",
    "end": "732440"
  },
  {
    "text": "expose simd to the web I think the",
    "start": "732440",
    "end": "734160"
  },
  {
    "text": "optimal way is to really give you the",
    "start": "734160",
    "end": "736519"
  },
  {
    "text": "developers the power to do it yourself",
    "start": "736519",
    "end": "738480"
  },
  {
    "text": "and use these processors exactly as you",
    "start": "738480",
    "end": "743160"
  },
  {
    "text": "want so this brings us to simd and",
    "start": "743160",
    "end": "746920"
  },
  {
    "text": "dart which consists of three new types",
    "start": "746920",
    "end": "751079"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "Dart has types um there is float 32x 4",
    "start": "751079",
    "end": "754680"
  },
  {
    "text": "and that's just four 32-bit floats",
    "start": "754680",
    "end": "757279"
  },
  {
    "text": "packed together there's a list of these",
    "start": "757279",
    "end": "759800"
  },
  {
    "text": "and this is if anyone does webg",
    "start": "759800",
    "end": "761720"
  },
  {
    "text": "development there's float 32 array this",
    "start": "761720",
    "end": "764240"
  },
  {
    "text": "is the equivalent of that but for simd",
    "start": "764240",
    "end": "766440"
  },
  {
    "text": "values and there's also u32 which is",
    "start": "766440",
    "end": "769199"
  },
  {
    "text": "just four unsigned 32-bit integers",
    "start": "769199",
    "end": "771519"
  },
  {
    "text": "tucked inside of uh 128 bits but the key",
    "start": "771519",
    "end": "775600"
  },
  {
    "text": "thing here and the difference between",
    "start": "775600",
    "end": "777040"
  },
  {
    "text": "attempts that automatically adding simd",
    "start": "777040",
    "end": "779839"
  },
  {
    "text": "to your program versus doing it in the",
    "start": "779839",
    "end": "782000"
  },
  {
    "text": "way that you have control is that you",
    "start": "782000",
    "end": "783399"
  },
  {
    "text": "are given composable operations in Dart",
    "start": "783399",
    "end": "785760"
  },
  {
    "text": "you get to control how simd is executed",
    "start": "785760",
    "end": "788800"
  },
  {
    "text": "where it's executed and when it is so",
    "start": "788800",
    "end": "792880"
  },
  {
    "text": "I've I've enabled uh you know arithmetic",
    "start": "792880",
    "end": "795800"
  },
  {
    "text": "operations logical bitwise operators",
    "start": "795800",
    "end": "798440"
  },
  {
    "text": "comparisons reordering",
    "start": "798440",
    "end": "800920"
  },
  {
    "text": "shuffling and I'll walk us through some",
    "start": "800920",
    "end": "803240"
  },
  {
    "text": "examples of how you use these this new",
    "start": "803240",
    "end": "805880"
  },
  {
    "text": "functionality so float 32 cross 4",
    "start": "805880",
    "end": "809720"
  },
  {
    "text": "you can think of it as split into four",
    "start": "809720",
    "end": "811680"
  },
  {
    "text": "lanes x y z and W and the foll the",
    "start": "811680",
    "end": "815680"
  },
  {
    "text": "operations that you can perform on float",
    "start": "815680",
    "end": "817880"
  },
  {
    "text": "32 x4s are on the left the standard",
    "start": "817880",
    "end": "820000"
  },
  {
    "text": "arithmetic operations square root",
    "start": "820000",
    "end": "823440"
  },
  {
    "text": "reciprocal main Max clamp absolute value",
    "start": "823440",
    "end": "826360"
  },
  {
    "text": "all the things that you would want when",
    "start": "826360",
    "end": "827440"
  },
  {
    "text": "you're doing anything",
    "start": "827440",
    "end": "828920"
  },
  {
    "text": "numerical and anything that is not",
    "start": "828920",
    "end": "831560"
  },
  {
    "text": "directly there you can build from these",
    "start": "831560",
    "end": "833680"
  },
  {
    "text": "very simple composable primitive",
    "start": "833680",
    "end": "836440"
  },
  {
    "text": "operations so here's some code so VAR a",
    "start": "836440",
    "end": "840160"
  },
  {
    "text": "dart will figure out the type of a",
    "start": "840160",
    "end": "842480"
  },
  {
    "text": "automatically and I say new float 32 X4",
    "start": "842480",
    "end": "845160"
  },
  {
    "text": "and I pass in the values in there I get",
    "start": "845160",
    "end": "847480"
  },
  {
    "text": "I get a a simd 1 2 3 4 there's also a",
    "start": "847480",
    "end": "851440"
  },
  {
    "text": "Constructor zero which just gives you",
    "start": "851440",
    "end": "854000"
  },
  {
    "text": "back the zero",
    "start": "854000",
    "end": "856680"
  },
  {
    "text": "Vector so how do you access these",
    "start": "857600",
    "end": "860120"
  },
  {
    "text": "individual lanes and modify and mutate",
    "start": "860120",
    "end": "862560"
  },
  {
    "text": "their values so here we have we've",
    "start": "862560",
    "end": "864959"
  },
  {
    "text": "constructed again our our our goto",
    "start": "864959",
    "end": "867519"
  },
  {
    "text": "Vector which is just 1 2 3 4",
    "start": "867519",
    "end": "869920"
  },
  {
    "text": "and if we want to look at the lanes uh",
    "start": "869920",
    "end": "871959"
  },
  {
    "text": "we can just call a.x it's just a nice",
    "start": "871959",
    "end": "875440"
  },
  {
    "text": "accessor for each lane doxy do z.w but",
    "start": "875440",
    "end": "879759"
  },
  {
    "text": "if we want to change one of the lanes",
    "start": "879759",
    "end": "881759"
  },
  {
    "text": "the values in the lane we call a method",
    "start": "881759",
    "end": "885320"
  },
  {
    "text": "on a called with X or with Y or with z",
    "start": "885320",
    "end": "888600"
  },
  {
    "text": "and pass in the value and what that does",
    "start": "888600",
    "end": "890079"
  },
  {
    "text": "is it copies a and replaces the X Lane",
    "start": "890079",
    "end": "894279"
  },
  {
    "text": "with the value five and returns a new",
    "start": "894279",
    "end": "896880"
  },
  {
    "text": "simd value that might sound heavy I mean",
    "start": "896880",
    "end": "899199"
  },
  {
    "text": "it might sound like oh we're copying",
    "start": "899199",
    "end": "900560"
  },
  {
    "text": "something and allocating a new object",
    "start": "900560",
    "end": "902560"
  },
  {
    "text": "but when the optimizer kicks in none of",
    "start": "902560",
    "end": "904040"
  },
  {
    "text": "that happens it's all sitting in",
    "start": "904040",
    "end": "906000"
  },
  {
    "text": "registers it's all very",
    "start": "906000",
    "end": "908839"
  },
  {
    "text": "efficient so doing arithmetic it's very",
    "start": "908839",
    "end": "911959"
  },
  {
    "start": "910000",
    "end": "910000"
  },
  {
    "text": "natural constructed two uh vectors here",
    "start": "911959",
    "end": "917120"
  },
  {
    "text": "A and B we add them we add all four",
    "start": "917120",
    "end": "921560"
  },
  {
    "text": "numbers at the same time it's it reads",
    "start": "921560",
    "end": "924279"
  },
  {
    "text": "very nicely I mean VAR C equals a plus b",
    "start": "924279",
    "end": "927279"
  },
  {
    "text": "it just happens to be using a simd unit",
    "start": "927279",
    "end": "930319"
  },
  {
    "text": "behind so let's look at a more",
    "start": "930319",
    "end": "933000"
  },
  {
    "start": "932000",
    "end": "932000"
  },
  {
    "text": "substantial example here so let's say we",
    "start": "933000",
    "end": "935000"
  },
  {
    "text": "have a huge list of numbers and we want",
    "start": "935000",
    "end": "936519"
  },
  {
    "text": "to average them right so the algorithm",
    "start": "936519",
    "end": "939040"
  },
  {
    "text": "here is sum up all the numbers and",
    "start": "939040",
    "end": "941639"
  },
  {
    "text": "divide by the number of of",
    "start": "941639",
    "end": "943720"
  },
  {
    "text": "values that you have so here is the",
    "start": "943720",
    "end": "945880"
  },
  {
    "text": "scalar version so you know for I I is",
    "start": "945880",
    "end": "949480"
  },
  {
    "text": "less than n sum it up and then divide",
    "start": "949480",
    "end": "951519"
  },
  {
    "text": "and return that so how do we turn this",
    "start": "951519",
    "end": "954759"
  },
  {
    "text": "into a simd",
    "start": "954759",
    "end": "956440"
  },
  {
    "text": "program well it's not much different",
    "start": "956440",
    "end": "959199"
  },
  {
    "text": "takes a float 32 cross4 list and again",
    "start": "959199",
    "end": "962839"
  },
  {
    "text": "we just sum them up in the Inner Loop",
    "start": "962839",
    "end": "965319"
  },
  {
    "text": "but at the end we have to do this extra",
    "start": "965319",
    "end": "966800"
  },
  {
    "text": "step because what we've actually done is",
    "start": "966800",
    "end": "968240"
  },
  {
    "text": "we've computed four subsums and we have",
    "start": "968240",
    "end": "971360"
  },
  {
    "text": "to figure out the total sum as one final",
    "start": "971360",
    "end": "973959"
  },
  {
    "text": "step so everything up until this line is",
    "start": "973959",
    "end": "978399"
  },
  {
    "text": "executing in simd when we get here we we",
    "start": "978399",
    "end": "980839"
  },
  {
    "text": "start using that vfp that yellow piece",
    "start": "980839",
    "end": "983440"
  },
  {
    "text": "of the CPU that we saw earlier before",
    "start": "983440",
    "end": "986240"
  },
  {
    "text": "that we're using the red part of the CPU",
    "start": "986240",
    "end": "989759"
  },
  {
    "text": "so diagrams help so along the top we",
    "start": "989759",
    "end": "992040"
  },
  {
    "text": "have our long list of numbers and what",
    "start": "992040",
    "end": "995120"
  },
  {
    "text": "happens is we end up we add all the blue",
    "start": "995120",
    "end": "997079"
  },
  {
    "text": "numbers together then we add up all the",
    "start": "997079",
    "end": "1000000"
  },
  {
    "text": "green and the red and the yellow and",
    "start": "1000000",
    "end": "1002720"
  },
  {
    "text": "these the adding of the different",
    "start": "1002720",
    "end": "1004519"
  },
  {
    "text": "colored Lanes happens simultaneously it",
    "start": "1004519",
    "end": "1006600"
  },
  {
    "text": "happens in",
    "start": "1006600",
    "end": "1007680"
  },
  {
    "text": "parallel this is a very limited form of",
    "start": "1007680",
    "end": "1010639"
  },
  {
    "text": "par parallel computation so at this",
    "start": "1010639",
    "end": "1013360"
  },
  {
    "text": "point we're done executing simd code but",
    "start": "1013360",
    "end": "1016360"
  },
  {
    "text": "we've we've cut the number of",
    "start": "1016360",
    "end": "1018279"
  },
  {
    "text": "instructions into a quarter and we do",
    "start": "1018279",
    "end": "1020319"
  },
  {
    "text": "our final step where we merge the",
    "start": "1020319",
    "end": "1022399"
  },
  {
    "text": "results into a scalar value which is the",
    "start": "1022399",
    "end": "1025038"
  },
  {
    "text": "result of an average",
    "start": "1025039",
    "end": "1027918"
  },
  {
    "text": "operation so in this case we end up",
    "start": "1028520",
    "end": "1031640"
  },
  {
    "text": "executing 75% fewer loads 75% fewer ads",
    "start": "1031640",
    "end": "1035160"
  },
  {
    "text": "and 75% fewer stores drastic cut and we",
    "start": "1035160",
    "end": "1039360"
  },
  {
    "text": "end up running four times faster minimal",
    "start": "1039360",
    "end": "1041839"
  },
  {
    "text": "change in your code and the new features",
    "start": "1041839",
    "end": "1044839"
  },
  {
    "text": "in the dart VM will make these",
    "start": "1044839",
    "end": "1046678"
  },
  {
    "text": "algorithms run significantly faster",
    "start": "1046679",
    "end": "1050840"
  },
  {
    "start": "1051000",
    "end": "1051000"
  },
  {
    "text": "so this is the only slide with assembly",
    "start": "1051480",
    "end": "1053360"
  },
  {
    "text": "on it I promise um although I encourage",
    "start": "1053360",
    "end": "1056799"
  },
  {
    "text": "you to start looking at the disassembly",
    "start": "1056799",
    "end": "1058600"
  },
  {
    "text": "from your JavaScript engine or your the",
    "start": "1058600",
    "end": "1060720"
  },
  {
    "text": "dart VM because it's very enlightening",
    "start": "1060720",
    "end": "1062840"
  },
  {
    "text": "but see our inner loop here where we",
    "start": "1062840",
    "end": "1064360"
  },
  {
    "text": "just do some plus equals list I when the",
    "start": "1064360",
    "end": "1067600"
  },
  {
    "text": "optimizer kicks in this becomes just a",
    "start": "1067600",
    "end": "1070440"
  },
  {
    "text": "single load where we're loading the I",
    "start": "1070440",
    "end": "1073360"
  },
  {
    "text": "element of list and then just an ad it's",
    "start": "1073360",
    "end": "1077080"
  },
  {
    "text": "all in registers nothing goes out to to",
    "start": "1077080",
    "end": "1080280"
  },
  {
    "text": "to memory except the load of course so",
    "start": "1080280",
    "end": "1084760"
  },
  {
    "text": "it really gets this optimal you get to",
    "start": "1084760",
    "end": "1087679"
  },
  {
    "text": "write this code at this very high level",
    "start": "1087679",
    "end": "1089919"
  },
  {
    "text": "in this nice language like dart at a",
    "start": "1089919",
    "end": "1092360"
  },
  {
    "text": "high level and then the optimizer is",
    "start": "1092360",
    "end": "1094240"
  },
  {
    "text": "going to get it down to just two",
    "start": "1094240",
    "end": "1096600"
  },
  {
    "text": "instructions yeah so you're talking",
    "start": "1096600",
    "end": "1099360"
  },
  {
    "text": "about this dark BM the presentation that",
    "start": "1099360",
    "end": "1102520"
  },
  {
    "text": "that we had before this it said that the",
    "start": "1102520",
    "end": "1104960"
  },
  {
    "text": "darkart stuff we were doing compiles",
    "start": "1104960",
    "end": "1106679"
  },
  {
    "text": "down to JavaScript yes you saying in",
    "start": "1106679",
    "end": "1109440"
  },
  {
    "text": "this case that the code the optimized",
    "start": "1109440",
    "end": "1112200"
  },
  {
    "text": "code where you add add that extra line",
    "start": "1112200",
    "end": "1114159"
  },
  {
    "text": "of code actually runs with a VM that's",
    "start": "1114159",
    "end": "1117440"
  },
  {
    "text": "inside a browser and with all browsers",
    "start": "1117440",
    "end": "1120200"
  },
  {
    "text": "all browsers don't have that VM is that",
    "start": "1120200",
    "end": "1122080"
  },
  {
    "text": "correct no that that's a great point so",
    "start": "1122080",
    "end": "1124159"
  },
  {
    "text": "Dart VM is a new VM that's experimental",
    "start": "1124159",
    "end": "1127520"
  },
  {
    "text": "so we've added it to Dart VM in the case",
    "start": "1127520",
    "end": "1130080"
  },
  {
    "text": "where your program is using simd and",
    "start": "1130080",
    "end": "1131919"
  },
  {
    "text": "it's compiled to JavaScript JavaScript",
    "start": "1131919",
    "end": "1134280"
  },
  {
    "text": "lacks simd support so we end up issuing",
    "start": "1134280",
    "end": "1137480"
  },
  {
    "text": "four operations in sequence okay and if",
    "start": "1137480",
    "end": "1142280"
  },
  {
    "text": "you have a a smart JavaScript VM like",
    "start": "1142280",
    "end": "1145760"
  },
  {
    "text": "Mozilla it actually end up it might end",
    "start": "1145760",
    "end": "1148720"
  },
  {
    "text": "up replacing those four operations",
    "start": "1148720",
    "end": "1150480"
  },
  {
    "text": "saying that chrome doesn't have this yet",
    "start": "1150480",
    "end": "1152520"
  },
  {
    "text": "Chrome does not ship with d VM no okay",
    "start": "1152520",
    "end": "1154559"
  },
  {
    "text": "no",
    "start": "1154559",
    "end": "1157080"
  },
  {
    "text": "yeah so let's look at shuffling we have",
    "start": "1157520",
    "end": "1159919"
  },
  {
    "start": "1159000",
    "end": "1159000"
  },
  {
    "text": "these Lanes right and we want to be able",
    "start": "1159919",
    "end": "1161400"
  },
  {
    "text": "to like reorder the entries inside the",
    "start": "1161400",
    "end": "1163559"
  },
  {
    "text": "lanes and if you've done any uh webg",
    "start": "1163559",
    "end": "1166200"
  },
  {
    "text": "programming you're familiar with gsls",
    "start": "1166200",
    "end": "1168880"
  },
  {
    "text": "Shuffle syntax well we have that in Dart",
    "start": "1168880",
    "end": "1171440"
  },
  {
    "text": "so it's really nice so first we have our",
    "start": "1171440",
    "end": "1174039"
  },
  {
    "text": "our one two 3 four vector and then we",
    "start": "1174039",
    "end": "1175919"
  },
  {
    "text": "want to assign B to be XX y",
    "start": "1175919",
    "end": "1178559"
  },
  {
    "text": "y and we get 1",
    "start": "1178559",
    "end": "1182039"
  },
  {
    "text": "22 so that single line has just like",
    "start": "1182039",
    "end": "1184960"
  },
  {
    "text": "reordered the these values and it",
    "start": "1184960",
    "end": "1187320"
  },
  {
    "text": "outputs very optimal assembly code and",
    "start": "1187320",
    "end": "1190400"
  },
  {
    "text": "then we can do wwww and it just takes",
    "start": "1190400",
    "end": "1193159"
  },
  {
    "text": "the 44444 or we could reverse the order",
    "start": "1193159",
    "end": "1197840"
  },
  {
    "text": "of the entries",
    "start": "1197840",
    "end": "1200159"
  },
  {
    "text": "inmd uh",
    "start": "1200159",
    "end": "1202080"
  },
  {
    "text": "register like this so these are the",
    "start": "1202080",
    "end": "1204120"
  },
  {
    "text": "these are these composable primitive",
    "start": "1204120",
    "end": "1205919"
  },
  {
    "text": "operations that you will use to build",
    "start": "1205919",
    "end": "1208440"
  },
  {
    "text": "larger real world applications",
    "start": "1208440",
    "end": "1211520"
  },
  {
    "text": "from so the tricky part with simd",
    "start": "1211520",
    "end": "1213840"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "programming oh is there question",
    "start": "1213840",
    "end": "1217480"
  },
  {
    "text": "yeah",
    "start": "1221880",
    "end": "1224880"
  },
  {
    "text": "yes is a good question and it's a very",
    "start": "1227640",
    "end": "1230480"
  },
  {
    "text": "detailed technical answer so we could",
    "start": "1230480",
    "end": "1233360"
  },
  {
    "text": "talk afterwards but yeah yeah I know it",
    "start": "1233360",
    "end": "1237679"
  },
  {
    "text": "it would be",
    "start": "1237679",
    "end": "1240080"
  },
  {
    "text": "better but you can't have everything um",
    "start": "1240720",
    "end": "1244159"
  },
  {
    "text": "so let's look at this very simple",
    "start": "1244159",
    "end": "1246080"
  },
  {
    "text": "function here Max it just takes two",
    "start": "1246080",
    "end": "1248120"
  },
  {
    "text": "values and it Returns the bigger of the",
    "start": "1248120",
    "end": "1250200"
  },
  {
    "text": "two um and the code is obvious right if",
    "start": "1250200",
    "end": "1253320"
  },
  {
    "text": "a is greater than b return a otherwise",
    "start": "1253320",
    "end": "1255039"
  },
  {
    "text": "return B hey but how do you do this in a",
    "start": "1255039",
    "end": "1257919"
  },
  {
    "text": "simd world where all of your variables",
    "start": "1257919",
    "end": "1260280"
  },
  {
    "text": "are actually storing four values and",
    "start": "1260280",
    "end": "1262960"
  },
  {
    "text": "this is where branching in simd gets a",
    "start": "1262960",
    "end": "1265080"
  },
  {
    "text": "little little",
    "start": "1265080",
    "end": "1266480"
  },
  {
    "text": "funky so let's say we had a as 1 2 3 4",
    "start": "1266480",
    "end": "1271600"
  },
  {
    "text": "and we had b as",
    "start": "1271600",
    "end": "1273840"
  },
  {
    "text": "03520 we said a greater than b like what",
    "start": "1273840",
    "end": "1276520"
  },
  {
    "text": "does that mean right because the true",
    "start": "1276520",
    "end": "1279120"
  },
  {
    "text": "maximum here is",
    "start": "1279120",
    "end": "1281159"
  },
  {
    "text": "actually",
    "start": "1281159",
    "end": "1283320"
  },
  {
    "text": "1354 right so you cannot just say like",
    "start": "1283320",
    "end": "1286000"
  },
  {
    "text": "if a is greater than b return a it",
    "start": "1286000",
    "end": "1288880"
  },
  {
    "text": "that's a meaningless statement in in a",
    "start": "1288880",
    "end": "1291320"
  },
  {
    "text": "simd",
    "start": "1291320",
    "end": "1292440"
  },
  {
    "text": "world so you end up having to write a",
    "start": "1292440",
    "end": "1295960"
  },
  {
    "text": "branchless uh version of your algorithm",
    "start": "1295960",
    "end": "1298320"
  },
  {
    "text": "which is kind of interesting so I'll",
    "start": "1298320",
    "end": "1299840"
  },
  {
    "text": "walk you through it so here uh this line",
    "start": "1299840",
    "end": "1303320"
  },
  {
    "text": "here says you and 32 cross4 typo uh",
    "start": "1303320",
    "end": "1307960"
  },
  {
    "text": "greater than is equal to a do greater",
    "start": "1307960",
    "end": "1309960"
  },
  {
    "text": "than",
    "start": "1309960",
    "end": "1310679"
  },
  {
    "text": "b and the reason that it's not the",
    "start": "1310679",
    "end": "1313120"
  },
  {
    "text": "greater than operators because it",
    "start": "1313120",
    "end": "1315279"
  },
  {
    "text": "returns something unusual so we wanted",
    "start": "1315279",
    "end": "1317159"
  },
  {
    "text": "to make it explicit",
    "start": "1317159",
    "end": "1319039"
  },
  {
    "text": "um and what it does is it returns this",
    "start": "1319039",
    "end": "1321440"
  },
  {
    "text": "bit mask to you so here we say a greater",
    "start": "1321440",
    "end": "1323919"
  },
  {
    "text": "than b and we get this weird bit mask",
    "start": "1323919",
    "end": "1326919"
  },
  {
    "text": "that says it's all FS or all zeros",
    "start": "1326919",
    "end": "1330200"
  },
  {
    "text": "depending on the true or false value of",
    "start": "1330200",
    "end": "1332440"
  },
  {
    "text": "the the predicate that you just",
    "start": "1332440",
    "end": "1333640"
  },
  {
    "text": "evaluated so in this case we see that",
    "start": "1333640",
    "end": "1335720"
  },
  {
    "text": "one is greater than zero so we get F we",
    "start": "1335720",
    "end": "1338120"
  },
  {
    "text": "see that two is not greater than three",
    "start": "1338120",
    "end": "1340240"
  },
  {
    "text": "so we get zero and so",
    "start": "1340240",
    "end": "1342960"
  },
  {
    "text": "on which then brings us to the next line",
    "start": "1342960",
    "end": "1345440"
  },
  {
    "text": "of the program which is Select where we",
    "start": "1345440",
    "end": "1347240"
  },
  {
    "text": "then take that mask that Zer F zero mask",
    "start": "1347240",
    "end": "1350840"
  },
  {
    "text": "and we select between A and B what that",
    "start": "1350840",
    "end": "1353520"
  },
  {
    "text": "ends up looking like is we say okay take",
    "start": "1353520",
    "end": "1356480"
  },
  {
    "text": "the vector on the left and select the",
    "start": "1356480",
    "end": "1359640"
  },
  {
    "text": "lanes from the column with f on it if",
    "start": "1359640",
    "end": "1363960"
  },
  {
    "text": "the lane has f in it on the left and",
    "start": "1363960",
    "end": "1366880"
  },
  {
    "text": "then select the lanes with zero in it",
    "start": "1366880",
    "end": "1369600"
  },
  {
    "text": "otherwise so you end up with the true",
    "start": "1369600",
    "end": "1372039"
  },
  {
    "text": "Lane Wise maximum of these of these two",
    "start": "1372039",
    "end": "1375760"
  },
  {
    "text": "vectors uh and this is how you would",
    "start": "1375760",
    "end": "1377760"
  },
  {
    "text": "Express this type of algorithm in a simd",
    "start": "1377760",
    "end": "1380279"
  },
  {
    "text": "world so it's a little bit different um",
    "start": "1380279",
    "end": "1383000"
  },
  {
    "text": "but it's it's kind of interesting there",
    "start": "1383000",
    "end": "1384200"
  },
  {
    "text": "are no branches here but somehow we've",
    "start": "1384200",
    "end": "1386240"
  },
  {
    "text": "we've selected and and gotten two",
    "start": "1386240",
    "end": "1388400"
  },
  {
    "text": "different values but we never have an if",
    "start": "1388400",
    "end": "1392120"
  },
  {
    "text": "statement so how does the VM optimize",
    "start": "1392120",
    "end": "1394400"
  },
  {
    "start": "1394000",
    "end": "1394000"
  },
  {
    "text": "for simd I've kind of touched on this",
    "start": "1394400",
    "end": "1396480"
  },
  {
    "text": "already uh it it unboxes everything so",
    "start": "1396480",
    "end": "1399360"
  },
  {
    "text": "unboxing might be a New Concept for some",
    "start": "1399360",
    "end": "1401640"
  },
  {
    "text": "people typically an object in a VM when",
    "start": "1401640",
    "end": "1404480"
  },
  {
    "text": "it's boxed is allocated in memory and",
    "start": "1404480",
    "end": "1406760"
  },
  {
    "text": "it's This heavyweight object with like a",
    "start": "1406760",
    "end": "1409240"
  },
  {
    "text": "class idea at the beginning and all this",
    "start": "1409240",
    "end": "1411000"
  },
  {
    "text": "extra metadata associated with it but an",
    "start": "1411000",
    "end": "1413320"
  },
  {
    "text": "optimizing VM will actually unbox the",
    "start": "1413320",
    "end": "1416400"
  },
  {
    "text": "the value and store it inside of a CPU",
    "start": "1416400",
    "end": "1419880"
  },
  {
    "text": "register and the second uh optimization",
    "start": "1419880",
    "end": "1423799"
  },
  {
    "text": "that we apply is replacing method calls",
    "start": "1423799",
    "end": "1426880"
  },
  {
    "text": "with inlined machine code and that's why",
    "start": "1426880",
    "end": "1429159"
  },
  {
    "text": "that inner loop looked so great it just",
    "start": "1429159",
    "end": "1432039"
  },
  {
    "text": "had the load and the ad that's because",
    "start": "1432039",
    "end": "1434520"
  },
  {
    "text": "we've inlined all of the method calls",
    "start": "1434520",
    "end": "1436360"
  },
  {
    "text": "like add and go and and load this value",
    "start": "1436360",
    "end": "1439400"
  },
  {
    "text": "from this array at this index all of",
    "start": "1439400",
    "end": "1442480"
  },
  {
    "text": "that gets replaced with just the single",
    "start": "1442480",
    "end": "1445279"
  },
  {
    "text": "instruction that can express these",
    "start": "1445279",
    "end": "1446640"
  },
  {
    "text": "Concepts and this also avoids method",
    "start": "1446640",
    "end": "1448960"
  },
  {
    "text": "call Overhead so we don't have to go",
    "start": "1448960",
    "end": "1450159"
  },
  {
    "text": "through the the prologue and the EP log",
    "start": "1450159",
    "end": "1452000"
  },
  {
    "text": "of calling into and exiting from a",
    "start": "1452000",
    "end": "1455279"
  },
  {
    "text": "function so how much faster can things",
    "start": "1455279",
    "end": "1457960"
  },
  {
    "text": "get with simd so 4x4 matrix",
    "start": "1457960",
    "end": "1461039"
  },
  {
    "text": "multiplication which is a fundamental",
    "start": "1461039",
    "end": "1462799"
  },
  {
    "text": "operation in 3D graphics and physics",
    "start": "1462799",
    "end": "1465080"
  },
  {
    "text": "gets about three times faster which is",
    "start": "1465080",
    "end": "1467200"
  },
  {
    "text": "it's pretty sweet",
    "start": "1467200",
    "end": "1469279"
  },
  {
    "text": "bulk multiply like an algorithm like the",
    "start": "1469279",
    "end": "1471320"
  },
  {
    "text": "average things like that it can approach",
    "start": "1471320",
    "end": "1473520"
  },
  {
    "text": "like six times five times faster uh than",
    "start": "1473520",
    "end": "1476600"
  },
  {
    "text": "doing it in scaler and that's the",
    "start": "1476600",
    "end": "1478200"
  },
  {
    "text": "trivial algorithm to Port from scaler to",
    "start": "1478200",
    "end": "1480799"
  },
  {
    "text": "simd code two 3D boxes a Boolean",
    "start": "1480799",
    "end": "1485399"
  },
  {
    "text": "intersection test do they overlap it'ss",
    "start": "1485399",
    "end": "1487559"
  },
  {
    "text": "about one and a half times faster as",
    "start": "1487559",
    "end": "1490279"
  },
  {
    "text": "does vertex Transformations and uh crack",
    "start": "1490279",
    "end": "1493080"
  },
  {
    "text": "and blur the exact algorithm that",
    "start": "1493080",
    "end": "1495600"
  },
  {
    "text": "Mozilla is attempting to automatically",
    "start": "1495600",
    "end": "1497799"
  },
  {
    "text": "detect",
    "start": "1497799",
    "end": "1498880"
  },
  {
    "text": "and use simd for you if you were to",
    "start": "1498880",
    "end": "1501279"
  },
  {
    "text": "express it in darts simd types and",
    "start": "1501279",
    "end": "1504279"
  },
  {
    "text": "primitive operations you can get a 50%",
    "start": "1504279",
    "end": "1506640"
  },
  {
    "text": "speed up which is pretty",
    "start": "1506640",
    "end": "1510480"
  },
  {
    "text": "sweet so wrapping",
    "start": "1510600",
    "end": "1514240"
  },
  {
    "text": "up Dart SMD has landed uh it's it's in",
    "start": "1514240",
    "end": "1517840"
  },
  {
    "start": "1515000",
    "end": "1515000"
  },
  {
    "text": "the VM now so if you go and download",
    "start": "1517840",
    "end": "1520159"
  },
  {
    "text": "like next week's release it should be",
    "start": "1520159",
    "end": "1521679"
  },
  {
    "text": "there I put an asteris there because",
    "start": "1521679",
    "end": "1523640"
  },
  {
    "text": "what has landed is the new types and the",
    "start": "1523640",
    "end": "1525679"
  },
  {
    "text": "new operations that you can perform on",
    "start": "1525679",
    "end": "1527320"
  },
  {
    "text": "them what hasn't hasn't landed yet is",
    "start": "1527320",
    "end": "1529159"
  },
  {
    "text": "the optimizer and that's coming in a",
    "start": "1529159",
    "end": "1531000"
  },
  {
    "text": "week or two so little pieces of the",
    "start": "1531000",
    "end": "1533320"
  },
  {
    "text": "optimizer will be landing over time and",
    "start": "1533320",
    "end": "1535320"
  },
  {
    "text": "these algorithms that you write tomorrow",
    "start": "1535320",
    "end": "1537840"
  },
  {
    "text": "will start to get really fast just",
    "start": "1537840",
    "end": "1541559"
  },
  {
    "text": "magically simd lets you use your entire",
    "start": "1541559",
    "end": "1544279"
  },
  {
    "text": "CPU you execute fewer instructions you",
    "start": "1544279",
    "end": "1547039"
  },
  {
    "text": "get faster performance you get longer",
    "start": "1547039",
    "end": "1549440"
  },
  {
    "text": "battery life you get a better web the D",
    "start": "1549440",
    "end": "1552000"
  },
  {
    "text": "VM in general stretches the performance",
    "start": "1552000",
    "end": "1554279"
  },
  {
    "text": "envelope and it's going to make new",
    "start": "1554279",
    "end": "1555520"
  },
  {
    "text": "magical experiences on the web possible",
    "start": "1555520",
    "end": "1559880"
  },
  {
    "text": "so why does simd matter again here we",
    "start": "1559880",
    "end": "1561720"
  },
  {
    "text": "are back at this console",
    "start": "1561720",
    "end": "1563520"
  },
  {
    "text": "timeline and we can do this we can bump",
    "start": "1563520",
    "end": "1566039"
  },
  {
    "text": "ourselves into the gray area between PS2",
    "start": "1566039",
    "end": "1569200"
  },
  {
    "text": "and PS3 and start closing the gap of",
    "start": "1569200",
    "end": "1571399"
  },
  {
    "text": "what we can do in a browser versus what",
    "start": "1571399",
    "end": "1573480"
  },
  {
    "text": "we can do on a video game",
    "start": "1573480",
    "end": "1575440"
  },
  {
    "text": "console because if we want to be able to",
    "start": "1575440",
    "end": "1577480"
  },
  {
    "text": "do this in the browser and I do we need",
    "start": "1577480",
    "end": "1579960"
  },
  {
    "text": "some D it'll never happen unless we",
    "start": "1579960",
    "end": "1582440"
  },
  {
    "text": "start exposing these very powerful",
    "start": "1582440",
    "end": "1586200"
  },
  {
    "text": "pieces of the CPU that just sit idle to",
    "start": "1586200",
    "end": "1589000"
  },
  {
    "text": "us the",
    "start": "1589000",
    "end": "1591440"
  },
  {
    "text": "developers so just one thing I just want",
    "start": "1591919",
    "end": "1594320"
  },
  {
    "text": "to talk about the definition of fast",
    "start": "1594320",
    "end": "1596159"
  },
  {
    "text": "because I hear a lot of people say well",
    "start": "1596159",
    "end": "1597559"
  },
  {
    "text": "the web is really fast JavaScript is",
    "start": "1597559",
    "end": "1599279"
  },
  {
    "text": "really fast I don't really",
    "start": "1599279",
    "end": "1601799"
  },
  {
    "text": "agree",
    "start": "1601799",
    "end": "1603520"
  },
  {
    "text": "so this is a a graph of box 2D",
    "start": "1603520",
    "end": "1607760"
  },
  {
    "text": "benchmarks that was uh put up by Joel",
    "start": "1607760",
    "end": "1610679"
  },
  {
    "text": "Weber on his blog in a December 2011",
    "start": "1610679",
    "end": "1613200"
  },
  {
    "text": "post it's a really interesting post I",
    "start": "1613200",
    "end": "1615080"
  },
  {
    "text": "recommend checking it out but it's",
    "start": "1615080",
    "end": "1616960"
  },
  {
    "text": "comparing the performance of a 2D",
    "start": "1616960",
    "end": "1618480"
  },
  {
    "text": "physics engine across all these",
    "start": "1618480",
    "end": "1620159"
  },
  {
    "text": "different language run",
    "start": "1620159",
    "end": "1622200"
  },
  {
    "text": "times down on the bottom is C it's about",
    "start": "1622200",
    "end": "1625720"
  },
  {
    "text": "5 to 10 milliseconds per frame",
    "start": "1625720",
    "end": "1629159"
  },
  {
    "text": "update up here 20 times slower that's",
    "start": "1629159",
    "end": "1631640"
  },
  {
    "text": "the web we have to collapse that Gap and",
    "start": "1631640",
    "end": "1635200"
  },
  {
    "text": "close it and bring it down I mean look",
    "start": "1635200",
    "end": "1637120"
  },
  {
    "text": "at Java Java is only about twice as slow",
    "start": "1637120",
    "end": "1640720"
  },
  {
    "text": "as C but we're 20 times as slow we've",
    "start": "1640720",
    "end": "1643240"
  },
  {
    "text": "got a lot of room to get",
    "start": "1643240",
    "end": "1646640"
  },
  {
    "text": "faster all right all right so thank you",
    "start": "1646919",
    "end": "1649600"
  },
  {
    "text": "so",
    "start": "1649600",
    "end": "1650840"
  },
  {
    "text": "much thank you",
    "start": "1650840",
    "end": "1655039"
  },
  {
    "text": "[Music]",
    "start": "1656990",
    "end": "1664579"
  }
]