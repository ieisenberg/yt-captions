[
  {
    "text": " ",
    "start": "0",
    "end": "10710"
  },
  {
    "text": "JAKOB HEUSER: All right, so\ntoday's talk for the next hour or so is called \"A Pragmatic\nApproach to Web Components.\"",
    "start": "10710",
    "end": "17200"
  },
  {
    "text": "And so just a little\nbit about myself-- my name is Jacob Heuser. I'm a principal web\ndeveloper at LinkedIn.",
    "start": "17200",
    "end": "24060"
  },
  {
    "text": "I've been with the\ncompany for about, I guess, half the\ncompany's life and have seen us move from YUI to\njQuery, seen us try and pick up",
    "start": "24060",
    "end": "31300"
  },
  {
    "text": "new technologies, all while\ntrying not to break the legacy code that we've put into the\nsite to get it to where it was.",
    "start": "31300",
    "end": "38960"
  },
  {
    "text": "So that's just a\nlittle bit about me. But today, there's some stuff\nwe're going to talk about. And before we get there,\nhere's some of the things",
    "start": "38960",
    "end": "45273"
  },
  {
    "text": "we're not going to talk about. So there will be no\nW3C spec singalongs.  ",
    "start": "45273",
    "end": "52940"
  },
  {
    "text": "I promise I won't do a soapbox\nrant about the webkit prefixes and how we use them.",
    "start": "52940",
    "end": "58510"
  },
  {
    "text": "And I'm pretty sure\nthere will be no dancing. AUDIENCE: Gracias. JAKOB HEUSER: Yeah. I'm sure some people\nwill appreciate that.",
    "start": "58510",
    "end": "65209"
  },
  {
    "text": "Instead, the stuff we're going\nto be talking about is the what and why of Web Components--\nwhat are they, why do",
    "start": "65209",
    "end": "71795"
  },
  {
    "text": "they matter, how do we use them. And we're going to actually\nlook at some live code. So as part of the preparation\nfor this presentation,",
    "start": "71795",
    "end": "79080"
  },
  {
    "text": "we have live code that's\ngoing to be in Polymer, Ember, Angular and React,\nall providing Web",
    "start": "79080",
    "end": "84960"
  },
  {
    "text": "Component-like functionality. We're going to be doing a\nreally basic carousel just to show the code, just to\nshow some of the differences,",
    "start": "84960",
    "end": "91950"
  },
  {
    "text": "and more importantly, to\nshow that we can actually do Web Component-like\nfunctionality today.",
    "start": "91950",
    "end": "98016"
  },
  {
    "text": "And then, finally, we're\ngoing to talk a little bit about responsible\ncomponent usage-- how we're",
    "start": "98016",
    "end": "103159"
  },
  {
    "text": "going to do Web Components in\na responsible manner, how we're not going to mess up the\ninternet in the process,",
    "start": "103160",
    "end": "108400"
  },
  {
    "text": "hopefully, and some of\nthe lessons we can learn from our predecessors\nwho had similar design patterns before we actually\ncame along with Web Components.",
    "start": "108400",
    "end": "117856"
  },
  {
    "text": "The way I like to do these\npresentations is, when people have questions, just\nput your hand up. I'll repeat them as we go.",
    "start": "117857",
    "end": "124110"
  },
  {
    "text": "I'd prefer if people wait\ntill the approximate end of the slide or the\nbeginning of a slide, just because then we\ncan talk while it's",
    "start": "124110",
    "end": "130060"
  },
  {
    "text": "doing weird transitional stuff. But also, instead of getting a\nbunch of questions at the end,",
    "start": "130060",
    "end": "135390"
  },
  {
    "text": "I find it's much better we\nhave the conversation as we go, as we explore this\ntopic together.",
    "start": "135390",
    "end": "140410"
  },
  {
    "text": "So hands go up,\nI'll call on you. I'll repeat the questions\nfor the recording and also for the room.",
    "start": "140410",
    "end": "146350"
  },
  {
    "text": "I've only got one of\nmy two lapel mics. So if I end up taking\nthis down, hopefully-- can people still hear\nme in the back OK, -ish?",
    "start": "146350",
    "end": "153050"
  },
  {
    "text": "AUDIENCE: Yeah. JAKOB HEUSER: Really well? AUDIENCE: Yeah. AUDIENCE: But talk\ninto the microphone. JAKOB HEUSER: OK.",
    "start": "153050",
    "end": "159140"
  },
  {
    "text": "For Carl's sake, I'll\nuse the microphone. Helps me stay old school.",
    "start": "159140",
    "end": "164210"
  },
  {
    "text": "So let's actually dive in. What are Web Components,\nand why do we care?",
    "start": "164210",
    "end": "169299"
  },
  {
    "text": "So let's go back in time to\nthe start of the web, where, aside from the DOCTYPE tag,\nthings were pretty simple.",
    "start": "169300",
    "end": "178700"
  },
  {
    "text": "You had your HTML tag, you had a\nbody tag, you had some content. And things were pretty\nstraightforward.",
    "start": "178700",
    "end": "184959"
  },
  {
    "text": "You used paragraphs\nfor paragraphs, heading tags for headings. Things were really,\nreally simple.",
    "start": "184960",
    "end": "191050"
  },
  {
    "text": "Pages were easy. The idea of a single-page\napp didn't exist. And you could go through,\nsubmit forms, perform tasks.",
    "start": "191050",
    "end": "198390"
  },
  {
    "text": "It was pretty easy. So what happened?",
    "start": "198390",
    "end": "203510"
  },
  {
    "text": "Well, what happened\nwas we decided to start adding UI\nelements to the page that",
    "start": "203510",
    "end": "209390"
  },
  {
    "text": "weren't natively\nsupported by the browser. These were things such as tabs.",
    "start": "209390",
    "end": "215790"
  },
  {
    "text": "These were things such as\nthe dialogues, date pickers,",
    "start": "215790",
    "end": "223120"
  },
  {
    "text": "and styleable drop-down lists. I realize, to this day, we still\ncan't style the select element.",
    "start": "223120",
    "end": "230250"
  },
  {
    "text": "The thing is that, with\nevery one of these things, they came with opinion\nabout markup, about CSS,",
    "start": "230250",
    "end": "236360"
  },
  {
    "text": "about JavaScript. And you had to add\nthese to your page. You had to add these\nlayers of complexity.",
    "start": "236360",
    "end": "245379"
  },
  {
    "text": "And the web got fat.   For those that are not\nable to see this slide,",
    "start": "245380",
    "end": "251680"
  },
  {
    "text": "there's a picture of a kind of\nchubby-looking beluga whale. So he's kind of looking around,\nwondering what happened.",
    "start": "251680",
    "end": "257290"
  },
  {
    "text": "And what happened\nwas the web to him.   So here's a screenshot of\nLinkedIn's page-- something",
    "start": "257290",
    "end": "264690"
  },
  {
    "text": "I'm not particularly proud of,\nbut it highlights the problem. Our home page has, oh, I'd\nsay about 11 layers of nesting",
    "start": "264690",
    "end": "272990"
  },
  {
    "text": "until you get to the first\ncontent item on the page. And that's just the profile\nimage in the top left corner.",
    "start": "272990",
    "end": "278870"
  },
  {
    "text": "We've got divs, we've got spans,\nwe've got non-semantic classes, we've got script\ntags as placeholders,",
    "start": "278870",
    "end": "286190"
  },
  {
    "text": "where you can see the stuff that\nsays, like, linkedin/control. We've got a minimal\nnumber of IDs,",
    "start": "286190",
    "end": "293580"
  },
  {
    "text": "but more than I really care\nto have throughout the page. And all of this is to\ncreate a rich page.",
    "start": "293580",
    "end": "299129"
  },
  {
    "text": "If you crack open\nGmail, it actually has approximately 47\nlayers of nested divs",
    "start": "299130",
    "end": "305100"
  },
  {
    "text": "in order to provide the\ncontent and functionality. That's the web we've created.",
    "start": "305100",
    "end": "311890"
  },
  {
    "text": "We've taken a pile of trash and\nmade something that looks good",
    "start": "311890",
    "end": "317850"
  },
  {
    "text": "if you look at it in\njust the right light.  ",
    "start": "317850",
    "end": "327460"
  },
  {
    "text": "This art installation\nis actually a pile of trash with\nthe right light.",
    "start": "327460",
    "end": "332620"
  },
  {
    "text": "The artist actually collected\nsix months of trash, piled it just so, and when\nshined with a light, actually",
    "start": "332620",
    "end": "337810"
  },
  {
    "text": "creates the shadow in the\nbackground of two individuals who are leaning back to\nback, kind of enjoying life.",
    "start": "337810",
    "end": "344670"
  },
  {
    "text": "But this is the web. This is what our websites\nlook like right now is people see the stuff on\nthe wall, the pretty shadows.",
    "start": "344670",
    "end": "352330"
  },
  {
    "text": "But we know inside, we know\nwhat we used to make it. And that's not good.",
    "start": "352330",
    "end": "357850"
  },
  {
    "text": "That's not the web we want. We want a simpler web. We want something that goes\nback to basics, where we're not",
    "start": "357850",
    "end": "365590"
  },
  {
    "text": "piling in div tags,\npiling in spans, basically piling\nin all the trash.",
    "start": "365590",
    "end": "372300"
  },
  {
    "text": "When you use something\nlike Twitter's typeahead, shouldn't you be able to\njust refer to it by a tag,",
    "start": "372300",
    "end": "380470"
  },
  {
    "text": "say, twttr-typeahead,\nand specify a source?",
    "start": "380470",
    "end": "385950"
  },
  {
    "text": "How many people here have\nactually looked at the site TodoMVC, just a\nquick show of hands?",
    "start": "385950",
    "end": "391349"
  },
  {
    "text": "OK, about half. So TodoMVC is this website\nthat has JavaScript examples",
    "start": "391350",
    "end": "397479"
  },
  {
    "text": "of pretty much every framework\nthat you could possibly think of and has examples\nof building a to-do list",
    "start": "397480",
    "end": "404479"
  },
  {
    "text": "application using all\nthese different frameworks. And it's great. But for every one\nof those, there's",
    "start": "404480",
    "end": "409750"
  },
  {
    "text": "piles of CSS, piles\nof JavaScript. Why is it your to-do application\ncan't be a series of tags,",
    "start": "409750",
    "end": "417360"
  },
  {
    "text": "can't be a local storage\ntag, a to-do app tag, and in there, there's to-do\nitems, really semantic tags?",
    "start": "417360",
    "end": "425790"
  },
  {
    "text": "And if you want\nmultiple to-do lists on the page, why can't you\nreduce it down to a single tag,",
    "start": "425790",
    "end": "431400"
  },
  {
    "text": "like todo-list, and that\nencapsulates all of your stuff?  ",
    "start": "431400",
    "end": "439950"
  },
  {
    "text": "The return to\nsemantic tags marks the start of the extendable web.",
    "start": "439950",
    "end": "445020"
  },
  {
    "text": "What you saw in\nthose last examples, with Twitter, with\nthe to-do list, that's",
    "start": "445020",
    "end": "450410"
  },
  {
    "text": "the part of Web Components\nthat people really understand and grasp, the idea of taking\nfunctionality and reducing it",
    "start": "450410",
    "end": "458410"
  },
  {
    "text": "back down to its\nsemantic tags, being able to extend existing tags\nto add new functionality.",
    "start": "458410",
    "end": "465900"
  },
  {
    "text": "It turns out HTML is a\ngreat-- it's a great thing. With HTML tags, we already\ngain a lot of benefits.",
    "start": "465900",
    "end": "474890"
  },
  {
    "text": "HTML tags are semantic. You can encapsulate things. You can put forms\ninside of a field group",
    "start": "474890",
    "end": "481659"
  },
  {
    "text": "and show their association. You can configure them. You can put four\nattributes on labels",
    "start": "481660",
    "end": "487220"
  },
  {
    "text": "to indicate the text\ninputs that they go to. And they're already\nDOM-friendly.",
    "start": "487220",
    "end": "492600"
  },
  {
    "text": "We already know\nhow to get elements by ID, call document\nquery selector.",
    "start": "492600",
    "end": "497660"
  },
  {
    "text": "If we could express all of our\nrich interactivity in tags, then we can use the\nexisting JavaScript APIs",
    "start": "497660",
    "end": "504599"
  },
  {
    "text": "to manipulate them, duplicate\nthem, clone them, configure them, do whatever we want.  ",
    "start": "504600",
    "end": "511940"
  },
  {
    "text": "And that's the heart\nof Web Components. Web Components contains several\ndifferent specifications",
    "start": "511940",
    "end": "517940"
  },
  {
    "text": "put together by this\ngroup called the W3C. I promise we won't do\nthat spec singalong I was talking about earlier.",
    "start": "517940",
    "end": "524120"
  },
  {
    "text": "Trying to sing to a spec\nis just never a good idea. But Web Components themselves,\nbesides having a fancy logo,",
    "start": "524120",
    "end": "530810"
  },
  {
    "text": "really allow us to\ncapture the heart and soul of this idea of having tags\nthat represent a lot of content.",
    "start": "530810",
    "end": "539180"
  },
  {
    "text": "  The co-creator of the\nWeb Components spec,",
    "start": "539180",
    "end": "544480"
  },
  {
    "text": "Dimitri Glazkov, said, \"Custom\nElements is a bedrock API. We should be able to\ncreate any tag that's",
    "start": "544480",
    "end": "552060"
  },
  {
    "text": "in the browser using\ncustom elements.\"",
    "start": "552060",
    "end": "557120"
  },
  {
    "text": "That's how strongly\nhe believes in it. Web Components consist of\nseveral different pieces.",
    "start": "557120",
    "end": "563710"
  },
  {
    "text": "There's a Shadow\nDOM, which means you can have an entirely custom\ndocument embedded within a tag.",
    "start": "563710",
    "end": "569410"
  },
  {
    "text": "There's scoping rules,\nand there's import rules. But at the end of\nthe day, most people are going to remember Web\nComponents for Web Components",
    "start": "569410",
    "end": "577279"
  },
  {
    "text": "equals custom HTML tag. And because we're\nusing an HTML tag,",
    "start": "577280",
    "end": "584060"
  },
  {
    "text": "we're going to get all this\nstuff for free-- eventually.",
    "start": "584060",
    "end": "592070"
  },
  {
    "text": "So it turns out I'm kind of\npicking on Internet Explorer here, but they're not alone.",
    "start": "592070",
    "end": "598490"
  },
  {
    "text": "Native Web Components\nspecifications are only available in two\nof the five major browsers.",
    "start": "598490",
    "end": "603932"
  },
  {
    "text": "Chrome is kind of the\ngold standard right now for Web Components. Firefox is close behind. They have one minor bug\nthey're working on fixing.",
    "start": "603932",
    "end": "612350"
  },
  {
    "text": "Opera is using the Blink engine. So they're just a little\nbit behind in terms of the actual implementation.",
    "start": "612350",
    "end": "617950"
  },
  {
    "text": "But they'll catch up to\nChrome relatively quickly. I'm unfortunate to report\nthat Safari is actually",
    "start": "617950",
    "end": "624810"
  },
  {
    "text": "on the \"does not support\nnative Web Components\" list. Some of the work that had\nbeen there in Shadow DOM",
    "start": "624810",
    "end": "630350"
  },
  {
    "text": "was pulled out, because the\ncode wasn't being actively used, which is good code hygiene. And they're working\non bringing it back,",
    "start": "630350",
    "end": "636710"
  },
  {
    "text": "but it's not there yet. And as of IE11, nobody actually\nknows what Microsoft is doing.",
    "start": "636710",
    "end": "642840"
  },
  {
    "text": "Hopefully, they're\nimplementing it. They have them\nlisted on their site as \"specifications\nunder consideration.\"",
    "start": "642840",
    "end": "649012"
  },
  {
    "text": "So hopefully, we'll see\nthem in a later version of IE11 or IE12.",
    "start": "649012",
    "end": "654509"
  },
  {
    "text": "Unfortunately, that means\nthat 60% of the market share is tied up right\nnow in things that don't support Web Components.",
    "start": "654510",
    "end": "662080"
  },
  {
    "text": "And if we want to use\nnative Web Components, we're going to be\nwaiting for a while.",
    "start": "662080",
    "end": "668490"
  },
  {
    "text": "The good news is we\ndon't have to wait if we want the benefits\nof Web Components today.",
    "start": "668490",
    "end": "673960"
  },
  {
    "text": " ",
    "start": "673960",
    "end": "682420"
  },
  {
    "text": "It turns out that\nthere's actually several modern Web\nComponents here.",
    "start": "682420",
    "end": "687700"
  },
  {
    "text": "And we'll actually go over them. I call these guys the\nFab Four, because I'd say about four years\nago, all of them",
    "start": "687700",
    "end": "693982"
  },
  {
    "text": "were just inklings\nin everybody's eyes. They didn't even exist. How many people here\nhave actually played",
    "start": "693982",
    "end": "699910"
  },
  {
    "text": "with-- and I'll go through\nthese frameworks one at a time-- have played with Polymer\nby the Google group?",
    "start": "699910",
    "end": "705350"
  },
  {
    "text": "All right. Angular has come up, like,\nthree or four times-- a lot of Angular hands.",
    "start": "705350",
    "end": "710540"
  },
  {
    "text": "Facebook's React? Couple hands. And Ember-- Ember.js?",
    "start": "710540",
    "end": "715850"
  },
  {
    "text": "Cool. So one of the things that's\nworth saying upfront here is, as we talk\nabout the code, this",
    "start": "715850",
    "end": "721340"
  },
  {
    "text": "is going to be an\nopinion-free section. We're going to be\ntalking objectively about how we do Web Components.",
    "start": "721340",
    "end": "727102"
  },
  {
    "text": "I don't really have\na preference for what the best framework\nis for doing this. I'll leave the arguing\nto the question section",
    "start": "727102",
    "end": "733410"
  },
  {
    "text": "at the end of the presentation. Just know that you can actually\nachieve Web Component-like functionality with\nall four of these.",
    "start": "733410",
    "end": "739949"
  },
  {
    "text": "  So this is our target markup.",
    "start": "739950",
    "end": "745149"
  },
  {
    "text": "We're going to be\nputting together a very simple\ncarousel thing here. We've got a my-carousel tag.",
    "start": "745150",
    "end": "751980"
  },
  {
    "text": "It's got three my-carousel\nitems inside of it. And so we're going\nto kind of initialize this carousel with three things.",
    "start": "751980",
    "end": "759360"
  },
  {
    "text": "The reason we kept\nit this simple was it gave us target markup\nthat we could aim for. This would be valid native Web\nComponents in a Web Component",
    "start": "759360",
    "end": "767390"
  },
  {
    "text": "world. And that allows us to\nactually do our implementation in a very consistent\nmanner across all four",
    "start": "767390",
    "end": "774320"
  },
  {
    "text": "of these frameworks so we can\ntalk about the differences and where these different\nframeworks shine.",
    "start": "774320",
    "end": "783070"
  },
  {
    "text": "So we're going to\nstart with Ember. And the reason we're\ngoing to start with Ember is its carousel\nmarkup is currently",
    "start": "783070",
    "end": "789840"
  },
  {
    "text": "the most non-Web\nComponent-looking item out of the bunch.",
    "start": "789840",
    "end": "794870"
  },
  {
    "text": "Part of that is\nbecause Ember uses Handlebars as its\ntemplating engine.",
    "start": "794870",
    "end": "800010"
  },
  {
    "text": "And from there,\neventually, they're going to go to HTMLBars. But they do everything\ninside of these script tags,",
    "start": "800010",
    "end": "806129"
  },
  {
    "text": "and they compile\ntheir templates. I've actually highlighted\nline two here.",
    "start": "806130",
    "end": "811660"
  },
  {
    "text": "So this is the one\npeople can see, where we use a Handlebars\nhelper called e-carousel",
    "start": "811660",
    "end": "816860"
  },
  {
    "text": "to kind of indicate where\nthe Ember carousel object is. And then we put the\ncontent nodes inside of it.",
    "start": "816860",
    "end": "822455"
  },
  {
    "text": "  So when you do Web\nComponents in Ember,",
    "start": "822455",
    "end": "827690"
  },
  {
    "text": "you get the benefit of\nbeing able to go back all the way to IE6. Not that anyone should be\nusing IE6 by this point,",
    "start": "827690",
    "end": "833720"
  },
  {
    "text": "but you could go back there if\nyou really, really needed to. Erik Bryn did a bunch\nof work to make sure",
    "start": "833720",
    "end": "839430"
  },
  {
    "text": "that the Ember stuff works. It's slower the\nolder the IE you use, but it actually is functional.",
    "start": "839430",
    "end": "847639"
  },
  {
    "text": "As I mentioned, there's\na Handlebar helper for e-carousel--\nthat's the Handlebar syntax with the double\ncurly brace there--",
    "start": "847640",
    "end": "854199"
  },
  {
    "text": "that instantiates the component. And then there's a matching\ntemplate with the Handlebars name of components/e-carousel\nthat stamps out our template.",
    "start": "854200",
    "end": "865630"
  },
  {
    "text": "There's a special\nHandlebar helper called yield, which captures\nthose original nodes, so all three of those\ncarousel items,",
    "start": "865630",
    "end": "871500"
  },
  {
    "text": "so you can do\nsomething with them. And then the JS\nconvention in Ember-- you can map e-carousel to\nApp.ECarouselComponent.",
    "start": "871500",
    "end": "879750"
  },
  {
    "text": "Ember does a lot of\nconvention-based magic. And as long as you follow\ntheir naming conventions,",
    "start": "879750",
    "end": "885880"
  },
  {
    "text": "things auto instantiate\nfor you, and off you go.  ",
    "start": "885880",
    "end": "890950"
  },
  {
    "text": "So this is the actual\ncarousel implementation. And assuming the\ninternet is working, we'll actually get a JS\nBin here at the end, where",
    "start": "890950",
    "end": "897960"
  },
  {
    "text": "we've got a content tag\nhere with our yield helper, just to highlight some\nof the big things. And then, inside of Ember,\nto select the carousel items,",
    "start": "897960",
    "end": "905770"
  },
  {
    "text": "we can do var $items = this.$\ncarousel e-content items.",
    "start": "905770",
    "end": "910940"
  },
  {
    "text": "And that can give us our\noriginal initialized tags. We go feed those into\nthe carousel models",
    "start": "910940",
    "end": "916220"
  },
  {
    "text": "inside of Ember. And the end result\nis our carousel.",
    "start": "916220",
    "end": "921370"
  },
  {
    "text": "Well, actually, I'll animate\nthis once so everyone can see. But for the most part,\nthese things click. They wrap around.",
    "start": "921370",
    "end": "927200"
  },
  {
    "text": "It's a very, very\nstraightforward carousel. And all these\nexamples are actually going to be visible on JS Bin.",
    "start": "927200",
    "end": "934150"
  },
  {
    "text": "They're also in the presentation\nwith a link at the end here. So everyone can go\nlook at the examples, play around, clone the\nJS Bin, try new things,",
    "start": "934150",
    "end": "942600"
  },
  {
    "text": "just enough to get\neveryone going.  ",
    "start": "942600",
    "end": "948680"
  },
  {
    "text": "So kind of moving from the\nreally, really not native Web Components to the slightly less\nnative Web Components is React.",
    "start": "948680",
    "end": "958139"
  },
  {
    "text": "I know a lot of people haven't\nreally played with React. So let's talk a little\nbit about the markup.",
    "start": "958140",
    "end": "963414"
  },
  {
    "text": "So the markup looks\nsomething like this. This actually looks very\nclose to our Web Component specification with r-carousel\nand r-carousel-item.",
    "start": "963414",
    "end": "972949"
  },
  {
    "text": "So a little bit of\nfull disclosure. In this example, we're using\na plug-in on top of React",
    "start": "972950",
    "end": "978490"
  },
  {
    "text": "called Reactive Elements. And I'll talk a little\nbit about that, as well. If you are using pure React,\nyou could do React top",
    "start": "978490",
    "end": "986170"
  },
  {
    "text": "to bottom in your application,\nand you'd be fine. If you want to\nhave Web Components",
    "start": "986170",
    "end": "991389"
  },
  {
    "text": "and, independent of whether\nor not you're using React, you want to just put this\ntag somewhere on the page and have it work, then you\nwant to add Reactive Elements.",
    "start": "991390",
    "end": "1000010"
  },
  {
    "text": "Reactive Elements, with either\nthe Mozilla or Google Polymer or X-Tag shim, will let you\nknock out custom elements.",
    "start": "1000010",
    "end": "1007370"
  },
  {
    "text": "And you can register\na React component and map it to your\ncustom HTML tag.  ",
    "start": "1007370",
    "end": "1014690"
  },
  {
    "text": "The good news is,\nbecause React uses a language called JSX\nand has its own compiler,",
    "start": "1014690",
    "end": "1020330"
  },
  {
    "text": "it'll go all the\nway back to IE7. If you're using\nReactive Elements, the polyfills go back to IE9.",
    "start": "1020330",
    "end": "1027609"
  },
  {
    "text": "So you have the option\nof using pure React if you need to reach all the\nway back to older browsers.",
    "start": "1027609",
    "end": "1034109"
  },
  {
    "text": "The other thing is that\nthe syntax that Facebook uses in JSX allows you\nto scope your styles",
    "start": "1034109",
    "end": "1040439"
  },
  {
    "text": "and scope your\ncontent script down into these local\nReact components.",
    "start": "1040440",
    "end": "1047420"
  },
  {
    "text": "So you don't end up\nwith any seepage. If you want to\nrefer to an element and say, all A tags\nin this scope are red,",
    "start": "1047420",
    "end": "1053140"
  },
  {
    "text": "it'll make them red. It won't leak out\ninto the main page. That actually ends up being\nreally, really powerful,",
    "start": "1053140",
    "end": "1059180"
  },
  {
    "text": "because now you've got\nthat encapsulation piece. So whereas with\nEmber we don't really have the full encapsulation,\nbecause with JSX we're",
    "start": "1059180",
    "end": "1066659"
  },
  {
    "text": "compiling, we're able to achieve\nthat encapsulation piece.",
    "start": "1066660",
    "end": "1071880"
  },
  {
    "text": "So the implementation,\neither in a standalone file or an inline script tag, is\nyou put this jsx react.DOM",
    "start": "1071880",
    "end": "1078120"
  },
  {
    "text": "at the top that tells the\ncompiler, hey, I'm React, I know what to do with this.",
    "start": "1078120",
    "end": "1083720"
  },
  {
    "text": "We go in, we set up our items. And then we have, thanks\nto Reactive Elements, under the this.props,\nthere's a _content,",
    "start": "1083720",
    "end": "1091490"
  },
  {
    "text": "which refers to our content\nnodes that came from React. We can then call\ndocument .registerReact.",
    "start": "1091490",
    "end": "1098250"
  },
  {
    "text": "And that associates r-carousel\nwith this React component.",
    "start": "1098250",
    "end": "1104130"
  },
  {
    "text": "Pull it all together,\nand there we go. We've got our same carousel. We've got the r-carousel you can\nkind of see here on the left.",
    "start": "1104130",
    "end": "1111830"
  },
  {
    "text": "And then I've just got the JSX\nstuff inlined beneath it so that it kind of\nfits on one screen.",
    "start": "1111830",
    "end": "1118155"
  },
  {
    "text": "And that's how you can get\na React component going.   Angular's probably the\nthing most people here",
    "start": "1118155",
    "end": "1124930"
  },
  {
    "text": "are familiar with, just\nlooking at the show of hands. Angular is a little bit\ncloser, because Angular",
    "start": "1124930",
    "end": "1131830"
  },
  {
    "text": "allows us to natively refer\nto stuff using the Angular directive syntax.",
    "start": "1131830",
    "end": "1137590"
  },
  {
    "text": "And I'll get into that\nvery briefly here. So we have ang-carousel\nwith an ang-component.",
    "start": "1137590",
    "end": "1145429"
  },
  {
    "text": "And then we've got our\ncarousel items inside.  ",
    "start": "1145430",
    "end": "1152190"
  },
  {
    "text": "When we do Web\nComponents in AngularJS, our Internet Explorer\ncompatibility is actually dependent on which\nversion of Angular we're using.",
    "start": "1152190",
    "end": "1160640"
  },
  {
    "text": "So starting with Angular 1.3\nis going to be IE9 and newer. So just so people can\nkeep that in mind.",
    "start": "1160640",
    "end": "1168430"
  },
  {
    "text": "If you need IE8 support,\nyou can use 1.2. Angular doesn't support IE7.  ",
    "start": "1168430",
    "end": "1177200"
  },
  {
    "text": "I talked a little bit about\nthis concept of directives. Directives are\nAngular's way of being",
    "start": "1177200",
    "end": "1182490"
  },
  {
    "text": "able to specify or identify\ncode to run within your markup.",
    "start": "1182490",
    "end": "1188140"
  },
  {
    "text": "We're going a step further. And I'll show you\nin the code, we're actually going to\ndeclare a directive within the\napplication that takes",
    "start": "1188140",
    "end": "1194700"
  },
  {
    "text": "care of the\nang-carousel object just as if it were a\nfully custom element.",
    "start": "1194700",
    "end": "1200824"
  },
  {
    "text": "And then the other\nimportant thing is that there's an automatic\nvariable in Angular that you can request in your\ncontroller called $transclude.",
    "start": "1200824",
    "end": "1210010"
  },
  {
    "text": "Through a whole bunch\nof Angular magic, you can put these dollar sign\nvariables in your function call, Angular will\nidentify them,",
    "start": "1210010",
    "end": "1217140"
  },
  {
    "text": "and it will give you\nback the proper objects. Transclusion is a property\nthat's unique to Angular.",
    "start": "1217140",
    "end": "1222730"
  },
  {
    "text": "It's their way of getting a\ncopy of the original nodes before you go blow them\naway with your template.",
    "start": "1222730",
    "end": "1229190"
  },
  {
    "text": "So when we go to\nimplement in Angular, we still have to\nstamp out a template. So there's a custom\ntag lying around--",
    "start": "1229190",
    "end": "1236279"
  },
  {
    "text": "ang-template and with\nfor-\"ang-carousel\". And this gives us\nour Angular template.",
    "start": "1236280",
    "end": "1242359"
  },
  {
    "text": "We can then refer to\nit, and we can pull it in by saying document\nquerySelector, give me that template.",
    "start": "1242359",
    "end": "1249390"
  },
  {
    "text": "We use angular.module\nand angular.directive in order to create\nthe ang carousel.",
    "start": "1249390",
    "end": "1255124"
  },
  {
    "text": "There's a little bit of\nconvention in Angular, where, if you do ang-carousel,\nit'll automatically",
    "start": "1255124",
    "end": "1260990"
  },
  {
    "text": "look for something with\na matching camel case. So lowercase ang capital\nC carousel, it just",
    "start": "1260990",
    "end": "1266680"
  },
  {
    "text": "maps that for you automatically. And then, finally,\ninside of our directive,",
    "start": "1266680",
    "end": "1272260"
  },
  {
    "text": "we identify the\nAngular controller. And you can see there,\nwe've got the $transclude.",
    "start": "1272260",
    "end": "1277679"
  },
  {
    "text": "And the $transclude\nfunction gets as a parameter the\noriginal nodes.",
    "start": "1277680",
    "end": "1283500"
  },
  {
    "text": "So this lets you get at\nthose carousel items, populate the carousel, and\nactually build the output.",
    "start": "1283500",
    "end": "1290650"
  },
  {
    "text": "We click over to the JS Bin. And once again, we actually\nhave a working carousel.",
    "start": "1290650",
    "end": "1296018"
  },
  {
    "text": "And so when you guys are\nclicking through these slides, you'll actually be able\nto-- for all these examples, they're all live JS Bins.",
    "start": "1296019",
    "end": "1302640"
  },
  {
    "text": "And you can actually see\nthem actively working. You can play around with them,\nkind of do whatever you want.",
    "start": "1302640",
    "end": "1309279"
  },
  {
    "text": "We've got a little bit of\nCSS in here where needed, just so people can see,\nlike, ang template,",
    "start": "1309280",
    "end": "1315050"
  },
  {
    "text": "we give it a display none\nso the templates don't show. Let's see.",
    "start": "1315050",
    "end": "1321402"
  },
  {
    "text": "Put that back the way it was. There we go.  ",
    "start": "1321402",
    "end": "1326512"
  },
  {
    "text": "And then, finally, in the\nlist of the four frameworks that we're talking about\nhere in the first half of the presentation is Polymer.",
    "start": "1326512",
    "end": "1333299"
  },
  {
    "text": "Polymer is built\nby the Google team. And its carousel markup is very,\nvery close to Web Components.",
    "start": "1333300",
    "end": "1342050"
  },
  {
    "text": "The reason for\nthis is Polymer is trying to be a Web Components\nshim for all browsers.",
    "start": "1342050",
    "end": "1348780"
  },
  {
    "text": "So we can actually\nexpect what we're going to see is the\nclosest to Web Components.",
    "start": "1348780",
    "end": "1355280"
  },
  {
    "text": "Unfortunately,\nbecause it's trying to provide this shimming,\ncertain functionality",
    "start": "1355280",
    "end": "1360730"
  },
  {
    "text": "is not available except in what\nthey call evergreen browsers. So Safari is evergreen\nbecause of webkit.",
    "start": "1360730",
    "end": "1369520"
  },
  {
    "text": "Chrome is evergreen. Firefox is evergreen. IE10 and newer is evergreen.",
    "start": "1369520",
    "end": "1375760"
  },
  {
    "text": "And that's Polymer's target. So if you want to get on\nboard with the newest, latest, greatest, Polymer\nactually is probably",
    "start": "1375760",
    "end": "1382980"
  },
  {
    "text": "the \"I don't support anything\nfrom the past\" -ish of them.",
    "start": "1382980",
    "end": "1388780"
  },
  {
    "text": "And the way it works is you\ndefine a Polymer element inside of HTML. You say polymer-element,\nyou give it a name,",
    "start": "1388780",
    "end": "1395960"
  },
  {
    "text": "and you say noscript. That's just their convention. And it defines a custom element.",
    "start": "1395960",
    "end": "1401670"
  },
  {
    "text": "Because Polymer is trying\nto shim Web Components, all of your JavaScript\nand all of your CSS",
    "start": "1401670",
    "end": "1407860"
  },
  {
    "text": "is automatically scoped\nwithin the bounds of the polymer-element tag. So nothing leaks out.",
    "start": "1407860",
    "end": "1414200"
  },
  {
    "text": "You don't have, like, changing\na p tag changes all the p tags on the page. You get that encapsulation.",
    "start": "1414200",
    "end": "1419396"
  },
  {
    "text": "  And as a result,\nyour implementation",
    "start": "1419396",
    "end": "1426230"
  },
  {
    "text": "starts to look a lot like the\nimplementation from the Web Component specification. You have a polymer-element.",
    "start": "1426230",
    "end": "1432429"
  },
  {
    "text": "In this case, we declare\nit as p-carousel. We then have a\ncontent ID that says,",
    "start": "1432430",
    "end": "1437659"
  },
  {
    "text": "I want to retrieve content from\nthe previous DOM, so the DOM before I instantiated.",
    "start": "1437660",
    "end": "1444380"
  },
  {
    "text": "I'd say, in this case, I wanted\nto select p-carousel items from within there.",
    "start": "1444380",
    "end": "1449559"
  },
  {
    "text": "Then I can go in with Polymer,\ninside of the script tag, and say,\n this.content.getDistributedNotes.  ",
    "start": "1449560",
    "end": "1456690"
  },
  {
    "text": "The getDistributedNodes function\nis a part of the Shadow DOM. And that's part of what\nPolymer is exposing",
    "start": "1456690",
    "end": "1462076"
  },
  {
    "text": "is this new functionality. So you can say, give\nme the original stuff. Anytime you append\nchild now, you're",
    "start": "1462077",
    "end": "1468230"
  },
  {
    "text": "going to be appending\nto a fake node. And we'll see if I can actually\npull that up here in a moment.",
    "start": "1468230",
    "end": "1474610"
  },
  {
    "text": "The implementation is\nvery, very straightforward, except I didn't\nput a background, so it's not as visible here.",
    "start": "1474610",
    "end": "1480000"
  },
  {
    "text": "But like all the others,\nit clicks through. And if you come down\nhere, you'll actually see,",
    "start": "1480000",
    "end": "1486620"
  },
  {
    "text": "here's our Polymer element with\nthe template fully stamped out. And this is actually using\nthe Web Components template",
    "start": "1486620",
    "end": "1492220"
  },
  {
    "text": "specification, the Web\nComponents custom tag specification, the Web\nComponents Shadow DOM.",
    "start": "1492220",
    "end": "1497487"
  },
  {
    "text": "That's actually why I'm doing\nthe presentation in Chrome is because I know\nit'll work in Chrome, whereas with other\nbrowsers it's questionable.",
    "start": "1497487",
    "end": "1504950"
  },
  {
    "text": "You can do it in\nFirefox with Polymer. I could actually switch this\nover to native Web Components,",
    "start": "1504950",
    "end": "1510822"
  },
  {
    "text": "and we could actually\ngo all the way back to our original example,\nand we could implement that.  ",
    "start": "1510822",
    "end": "1523130"
  },
  {
    "text": "So all four of these\nframeworks unlock the ability to do Web Component-like\nfunctionality.",
    "start": "1523130",
    "end": "1529780"
  },
  {
    "text": "It's a different way\nof doing the web. No longer do you have to\ngo in and say, OK, I'm",
    "start": "1529780",
    "end": "1535650"
  },
  {
    "text": "going to have my\nJavaScript over here, and I'm going to have\nmy CSS over here, and I'm going to have my\nmarkup in this third place",
    "start": "1535650",
    "end": "1540960"
  },
  {
    "text": "all the way over\nhere, and then I'm going to tie them all together. What Web Components gives\nus is that encapsulation.",
    "start": "1540960",
    "end": "1548080"
  },
  {
    "text": "It's almost like having a\nbunch of iframes on your page, only without all the\noverhead of iframes.",
    "start": "1548080",
    "end": "1555860"
  },
  {
    "text": "So how many people here\nremember the iGoogle web page? A couple people, yeah.",
    "start": "1555860",
    "end": "1561299"
  },
  {
    "text": "So the iGoogle web page had\nall these concepts of widgets that you could put on your page,\nyou could mix and match them.",
    "start": "1561300",
    "end": "1566453"
  },
  {
    "text": "They were all relatively\nsquare shaped. Custom elements really\ngive you the ability",
    "start": "1566453",
    "end": "1572410"
  },
  {
    "text": "to do something conceptually\nlike iGoogle, but without any of the overhead. You don't have the iframes.",
    "start": "1572410",
    "end": "1578460"
  },
  {
    "text": "Everything is in the DOM. Everything is running\nnative JavaScript. And there's no\ntrickery at that point.",
    "start": "1578460",
    "end": "1584530"
  },
  {
    "text": "And that's actually the heart\nand soul of the composable web. We're going to be able to create\nall kinds of beasts with this.",
    "start": "1584530",
    "end": "1592262"
  },
  {
    "text": "And it's going to be amazing. We're going to be able to\ncreate tags for everything we could possibly imagine.  ",
    "start": "1592262",
    "end": "1600730"
  },
  {
    "text": "So the other big thing\nis that you can actually put them together.",
    "start": "1600730",
    "end": "1606000"
  },
  {
    "text": "You can take, say-- oh, I don't\nknow-- your Web Components that you do in Angular, and\nyou can drop them into Polymer",
    "start": "1606000",
    "end": "1611799"
  },
  {
    "text": "or drop them into Ember\nor drop them into React. And you can put\nthem all together.",
    "start": "1611800",
    "end": "1618179"
  },
  {
    "text": "You've got one of the\nco-creators of Ember saying that Ember\ntemplates should be able to work in\nthings like Polymer.  ",
    "start": "1618180",
    "end": "1625750"
  },
  {
    "text": "Before anyone says it, I realize\nthere's some caveats to this. There's probably quite a big\nproblem with putting frameworks",
    "start": "1625750",
    "end": "1632710"
  },
  {
    "text": "inside of frameworks\ninside of frameworks. The end result of\nthat is going to be",
    "start": "1632710",
    "end": "1637850"
  },
  {
    "text": "that we're going to\nbe taking this beast, and if we're not careful,\nit's going to end up something",
    "start": "1637850",
    "end": "1643850"
  },
  {
    "text": "a little more like this. Aww.",
    "start": "1643850",
    "end": "1649049"
  },
  {
    "text": "Yeah. Which really kind of\nbrings us to the last third of the presentation here,\nabout building a better web",
    "start": "1649050",
    "end": "1655730"
  },
  {
    "text": "and being responsible\nwith our Web Components. So the first thing, I don't\neven have a slide for it.",
    "start": "1655730",
    "end": "1661800"
  },
  {
    "text": "So I'm actually going to talk\nabout this very specifically here while I've got\neveryone staring at a really boring segue slide.",
    "start": "1661800",
    "end": "1667205"
  },
  {
    "text": "  We don't want to replace\nUI elements of the browser.",
    "start": "1667205",
    "end": "1674520"
  },
  {
    "text": "So I'm making this as a\nrequest to all of you. Please do not\nimplement x button,",
    "start": "1674520",
    "end": "1680180"
  },
  {
    "text": "x select, x scrollbar,\nx-- I don't know. Someone else name a\nnative browser thing.",
    "start": "1680180",
    "end": "1688980"
  },
  {
    "text": "Oh, come on. Browser UI thing. Which one? AUDIENCE: [INAUDIBLE] JAKOB HEUSER: Which one? AUDIENCE: A [? day computer? ?]\n[INAUDIBLE].",
    "start": "1688980",
    "end": "1695619"
  },
  {
    "text": "JAKOB HEUSER: Yeah. AUDIENCE: List. JAKOB HEUSER: List. There you go, x list. Don't do that, especially\nthe ones you interact with.",
    "start": "1695619",
    "end": "1702720"
  },
  {
    "text": "So much work has been\ndone by browser vendors to make these things\naccessible, to make them work in a reliable manner.",
    "start": "1702720",
    "end": "1710070"
  },
  {
    "text": "There's a really great post\nby Nicholas Zakas from about, I guess, two years\nago, where he said,",
    "start": "1710070",
    "end": "1716309"
  },
  {
    "text": "\"We can't implement a button.\" He talked about the\nevolution of the button tag, how, as people needed to style\nit, we went from a button tag",
    "start": "1716310",
    "end": "1723610"
  },
  {
    "text": "to a link. And of course, for those that\nare accessibility-minded, you said, well, links\nare a terrible idea.",
    "start": "1723610",
    "end": "1729630"
  },
  {
    "text": "You should actually make sure\nthat it has more functionality. So we would add an\nARIA role to it, and it would be a role button.",
    "start": "1729630",
    "end": "1735710"
  },
  {
    "text": "And then we'd be\nlike, oh, but you need to make sure you\ncan tab to it properly. So we put a tabindex on it.",
    "start": "1735710",
    "end": "1740840"
  },
  {
    "text": "And we're still not to a button. The reality is we can't make\na button like the browser",
    "start": "1740840",
    "end": "1746530"
  },
  {
    "text": "can that interacts the\nway the browser can. When we think about the\nUI elements we make,",
    "start": "1746530",
    "end": "1754000"
  },
  {
    "text": "we need to understand\nthat we want to build on top of\nexisting UI components",
    "start": "1754000",
    "end": "1759480"
  },
  {
    "text": "provided by the browser,\nnot replace them.  ",
    "start": "1759480",
    "end": "1764970"
  },
  {
    "text": "So with that said, let's talk a\nlittle bit about an old friend, who doesn't even exist\nin terms of Macromedia",
    "start": "1764970",
    "end": "1771289"
  },
  {
    "text": "and probably won't\nexist in terms of Adobe probably within\nthe next few years.",
    "start": "1771290",
    "end": "1776522"
  },
  {
    "text": "I know we've been saying\nthat for, like, three years, that Flash is going away. It'll go away, I swear.",
    "start": "1776522",
    "end": "1782975"
  },
  {
    "text": "But there's a lot\nof lessons that come from Macromedia Flash. And the reason is because\nFlash has been here.",
    "start": "1782975",
    "end": "1789840"
  },
  {
    "text": "The exact same stuff we're\ntalking about right now, Flash has been here.",
    "start": "1789840",
    "end": "1795010"
  },
  {
    "text": "It has components\nvia the movie clips. It allows nesting of\nmovie clips or components",
    "start": "1795010",
    "end": "1800720"
  },
  {
    "text": "so you can do this whole\n\"don't repeat yourself\" philosophy that\nencapsulation gives you.",
    "start": "1800720",
    "end": "1805860"
  },
  {
    "text": "It uses ECMAScript, the\nsame foundational scripting",
    "start": "1805860",
    "end": "1811020"
  },
  {
    "text": "language and\nJavaScript is built on. This is nothing new. We've actually been here.",
    "start": "1811020",
    "end": "1816880"
  },
  {
    "text": "And we were here 8, 9, 10\nyears ago with ActionScript 2, the idea of movie\nclip libraries.",
    "start": "1816880",
    "end": "1823210"
  },
  {
    "text": "And I think there was something\nlike freeflashclips.com or something like that. We've been here.",
    "start": "1823210",
    "end": "1829490"
  },
  {
    "text": "We've seen how Flash can get\nplagued by bloat, because you have huge component hierarchies.",
    "start": "1829490",
    "end": "1835630"
  },
  {
    "text": "We've seen the\ncomplexity when you're trying to trace\nsomething, and you'll double-click on your\nmovie clip, and that'll",
    "start": "1835630",
    "end": "1840990"
  },
  {
    "text": "take you to your movie clip\nthat you double-click on that you double-click on\nthat you double-click on that you double-click on\nthat you double-click on",
    "start": "1840990",
    "end": "1846220"
  },
  {
    "text": "that you double-click on. Oh, there's a movie clip\nfor the background color. Somebody decided to take\na 1-by-1 square of blue",
    "start": "1846220",
    "end": "1853630"
  },
  {
    "text": "and turn it into\na background clip and put that in the Select\nbox in the component in the component\nin the component",
    "start": "1853630",
    "end": "1858960"
  },
  {
    "text": "in the component\nin the component. We can end up there\nif we're not careful.",
    "start": "1858960",
    "end": "1865080"
  },
  {
    "text": "Thankfully, we have a few new\ntricks in terms of development. And we're not restricted to\nonly the Adobe IDE in order",
    "start": "1865080",
    "end": "1872210"
  },
  {
    "text": "to do it. And that's actually\nreally beneficial for us.",
    "start": "1872210",
    "end": "1877250"
  },
  {
    "text": "The first tool that's going to\nsave us is going to be Bower. NPM could technically\nfill this role, as well.",
    "start": "1877250",
    "end": "1884730"
  },
  {
    "text": "But I want to talk specifically\nabout Bower because of the way it resolves dependencies.",
    "start": "1884730",
    "end": "1890760"
  },
  {
    "text": "In NPM, when you\nresolve dependencies and you say, b\ndepends on a, it'll",
    "start": "1890760",
    "end": "1895840"
  },
  {
    "text": "put a copy of b inside of a. This works great\nfor node modules,",
    "start": "1895840",
    "end": "1901460"
  },
  {
    "text": "where you want to\nhave isolation. But it's terrible for\nthe browser, where you want to minimize the\namount of stuff you download.",
    "start": "1901460",
    "end": "1908510"
  },
  {
    "text": "Bower uses a system\ncalled a flat repository. And so, inside of your\nbower_components directory,",
    "start": "1908510",
    "end": "1914110"
  },
  {
    "text": "if b depends on a,\nyou get a copy of b, and you get a copy of a, both\nin that top level directory.",
    "start": "1914110",
    "end": "1921120"
  },
  {
    "text": "And it's up to the build tooling\nto resolve those dependencies for you. That means that if you\nend up with a framework",
    "start": "1921120",
    "end": "1928550"
  },
  {
    "text": "and you want eight different\nversions of jQuery, instead of having\neight copies of jQuery, you're going to be forced\nto normalize down to one.",
    "start": "1928550",
    "end": "1936150"
  },
  {
    "text": "And that'll keep the\nbloat down significantly. But something has to figure out\nthe relationship between those",
    "start": "1936150",
    "end": "1943460"
  },
  {
    "text": "build tools. The good news is Grunt and\nGulp, both which have really",
    "start": "1943460",
    "end": "1948970"
  },
  {
    "text": "kind of come into prominence\nwithin the last year, year and a half, have given us\nthe ability to solve this.",
    "start": "1948970",
    "end": "1954540"
  },
  {
    "text": "There's Bower plug-ins in Grunt,\nthere's Bower plug-ins in Gulp. If you're over in\nEmber, Broccoli",
    "start": "1954540",
    "end": "1960630"
  },
  {
    "text": "is going to have a\nBower plug-in soon. There's [? Fez, ?] there's\nBrunch, there's-- I don't know,",
    "start": "1960630",
    "end": "1966100"
  },
  {
    "text": "you could probably throw a stone\nand hit seven different NPM browser management utilities.",
    "start": "1966100",
    "end": "1973169"
  },
  {
    "text": "The good news is that these\nare catching up quickly. These are allowing us to\nresolve Bower dependencies",
    "start": "1973170",
    "end": "1980430"
  },
  {
    "text": "and be able to make\nintelligent build decisions as we put our apps together.  ",
    "start": "1980430",
    "end": "1987029"
  },
  {
    "text": "And unlike where you only\nhad the limit of Adobe's IDE, we're dealing in just text.",
    "start": "1987030",
    "end": "1994700"
  },
  {
    "text": "There's Atom from GitHub,\nthere's Sublime Text, there's TextMate, there's\nVIM, there's Emacs.",
    "start": "1994700",
    "end": "2000330"
  },
  {
    "text": "There's going to be\na plethora of things that are going to\nmake it possible for us to do our\ndevelopment and be",
    "start": "2000330",
    "end": "2006210"
  },
  {
    "text": "able to do it in a\nreally good manner. This is an exciting\nthing, because that means, if you want to go down and\nstep through components",
    "start": "2006210",
    "end": "2013580"
  },
  {
    "text": "and step through dependencies,\nall of our editors that we use as\nweb developers are",
    "start": "2013580",
    "end": "2019809"
  },
  {
    "text": "going to be available to us. And they're going to understand\nWeb Components, because they're going to understand JSON.",
    "start": "2019810",
    "end": "2025780"
  },
  {
    "text": "And your Bower\ndependencies are in JSON. And you're going to be able\nto follow your Web Component",
    "start": "2025780",
    "end": "2031470"
  },
  {
    "text": "chain. And it's not going to be\nthis mysterious black box.  ",
    "start": "2031470",
    "end": "2037850"
  },
  {
    "text": "So that pretty much brings\nus to the conclusion, where we've got Web Components. We've got this really\nrich, available ecosystem",
    "start": "2037850",
    "end": "2046910"
  },
  {
    "text": "at our disposal. And we can do it today. We can do it in\nvarious degrees today.",
    "start": "2046910",
    "end": "2052810"
  },
  {
    "text": "If you need to go all the way\nback to IE6, IE7, you can. If you want to use\ncutting-edge browsers, you can.",
    "start": "2052810",
    "end": "2059800"
  },
  {
    "text": "If you want to use\nnative Web Components, you can-ish, as\nlong as you're also",
    "start": "2059800",
    "end": "2065149"
  },
  {
    "text": "not dealing with IE and Safari. But other than that, we\nactually have the ability",
    "start": "2065150",
    "end": "2070710"
  },
  {
    "text": "to do great things. We have the ability to\ncreate new, rich interactions",
    "start": "2070710",
    "end": "2077158"
  },
  {
    "text": "and encapsulate them\nin a custom tag. That's just something\nwe've never really been able to\nconceptualize before.",
    "start": "2077159",
    "end": "2085560"
  },
  {
    "text": "And that's Web Components. And that's what makes\neverything really powerful in this next web.",
    "start": "2085560",
    "end": "2090669"
  },
  {
    "text": "So actually, we're at\nabout 10 minutes-ish until time-ish, give or take. And I wanted to make sure\nthere were questions.",
    "start": "2090670",
    "end": "2096330"
  },
  {
    "text": "We can go back to\nany of the examples. All the slides are going to\nbe online at felocity.com-- which is my personal website--\n/owc6 is actually this exact",
    "start": "2096330",
    "end": "2107870"
  },
  {
    "text": "slide deck, only I'm running\nit off a local host copy. And yeah, so I'm more\nthan happy to go back,",
    "start": "2107870",
    "end": "2114570"
  },
  {
    "text": "walk through some\nof the examples. A little bit of history. Learning three of\nthese four frameworks",
    "start": "2114570",
    "end": "2121040"
  },
  {
    "text": "happened as part of\nbuilding this presentation. Just to give people an idea of\nhow powerful this has become,",
    "start": "2121040",
    "end": "2128280"
  },
  {
    "text": "all those examples went\nfrom knowing nothing to having a working\nexample in about five to six hours of effort.",
    "start": "2128280",
    "end": "2134720"
  },
  {
    "text": "That's how good\nthe documentation is, that's how good\nthese frameworks are, that's how possible\nthis really is.",
    "start": "2134720",
    "end": "2140200"
  },
  {
    "text": "Yeah. So the question was,\nwhat are the downsides to Web Components? And I think a lot of the\ndownsides, we're going to see,",
    "start": "2140200",
    "end": "2146840"
  },
  {
    "text": "are going to be really similar\nto those we saw with Flash. It's going to be\nmismanagement and bloat. I expect, when Web\nComponents come out,",
    "start": "2146840",
    "end": "2154000"
  },
  {
    "text": "there's going to be somebody\nthat creates, I don't know, webcomponentsforyou.com. And you're going to be able\nto upload all of your Web",
    "start": "2154000",
    "end": "2161170"
  },
  {
    "text": "Components for sharing. And they're going to\nproliferate everywhere. And that means, like\njQuery plug-ins of yore,",
    "start": "2161170",
    "end": "2167900"
  },
  {
    "text": "we're going to have to use\na very careful eye when we look at Web Components to\nunderstand what are they doing,",
    "start": "2167900",
    "end": "2174410"
  },
  {
    "text": "are they valuable, and are\nthey giving us what we want.",
    "start": "2174410",
    "end": "2179539"
  },
  {
    "text": "There's jQuery\nplug-ins everywhere. And for people that\nhave worked with jQuery and have worked with\nplug-ins, probably",
    "start": "2179540",
    "end": "2186150"
  },
  {
    "text": "have the experience of\nplug-ins are very hit and miss. Sometimes, it's a\nfantastic plug-in. Sometimes, it's a really\natrocious plug-in.",
    "start": "2186150",
    "end": "2193900"
  },
  {
    "text": "And you have to go through,\nlike, eight or nine different jQuery plug-ins\ntill you find the right one.",
    "start": "2193900",
    "end": "2199410"
  },
  {
    "text": "I expect we'll have similar\nproblems with Web Components. I think that the other problem\nthat we're going to see",
    "start": "2199410",
    "end": "2205609"
  },
  {
    "text": "is a proliferation of components\nthat strip away accessibility.",
    "start": "2205610",
    "end": "2211230"
  },
  {
    "text": "So when I talked a little\nbit on the segue slide about the idea of\nbuttons and selects all having all of this natural\nbrowser interaction that",
    "start": "2211230",
    "end": "2219550"
  },
  {
    "text": "makes life easier, someone's\ngoing to create x select. It's not going to be\nanyone in this room,",
    "start": "2219550",
    "end": "2224950"
  },
  {
    "text": "because I told you all not to. But someone's going to do it. And you're not going to be\nable to tab into it right,",
    "start": "2224950",
    "end": "2231336"
  },
  {
    "text": "or you're not going to be able\nto use the arrow keys just right. And it's not going\nto be accessible.  ",
    "start": "2231336",
    "end": "2237970"
  },
  {
    "text": "We're going to screw it up. It's going to go all\nover the internet. Hopefully, these\n50, 60 people will",
    "start": "2237970",
    "end": "2243381"
  },
  {
    "text": "help manage it and\nmake sure that it doesn't go into their code. But at the very least,\nit's going to happen. And I think that's actually\nthe biggest problem",
    "start": "2243381",
    "end": "2250300"
  },
  {
    "text": "is people are going to look\nat it, like jQuery plug-ins, and be like, these\nthings are everywhere, they're varying quality.",
    "start": "2250300",
    "end": "2256940"
  },
  {
    "text": "Hopefully, most people will do\nthe responsible thing and say, our app has unique needs.",
    "start": "2256940",
    "end": "2262539"
  },
  {
    "text": "We're going to build our own\ninternal set of Web Components on top of a Web Component\nlibrary, something that",
    "start": "2262540",
    "end": "2268410"
  },
  {
    "text": "gives us a local storage\nmodule, something that gives us a very basic data\nmodel, things like that.",
    "start": "2268410",
    "end": "2273440"
  },
  {
    "text": "  Over here on the left? Yeah. So the question was, what's the\ndifference between what we're",
    "start": "2273440",
    "end": "2279960"
  },
  {
    "text": "doing with Web Components and\nwhat we were doing with XML? I think the biggest\ndifference between them",
    "start": "2279960",
    "end": "2285100"
  },
  {
    "text": "that we're looking\nat right now is we are effectively doing XML.",
    "start": "2285100",
    "end": "2290250"
  },
  {
    "text": "I mean, ostensibly, aside from\nadding cdata tags everywhere, we're creating custom\ntags and giving them",
    "start": "2290250",
    "end": "2297210"
  },
  {
    "text": "meaning, much like\nXML enabled us to. Unlike XML, we're not relying\non server-side transformation,",
    "start": "2297210",
    "end": "2304960"
  },
  {
    "text": "such as XSLT, in order\nto turn XML into markup. With Web Components,\nwe're relying",
    "start": "2304960",
    "end": "2311450"
  },
  {
    "text": "on the browser's native engines\nto do this transformation for us, to say, hey,\nthis one tag represents,",
    "start": "2311450",
    "end": "2317990"
  },
  {
    "text": "actually, this entire\nmodule of code. So that's probably the\nbiggest definition.",
    "start": "2317990",
    "end": "2323760"
  },
  {
    "text": "I imagine that somebody will\ncreate a Web Component XLT fancy thing, because we seem to\nbe creating a lot of that stuff",
    "start": "2323760",
    "end": "2331280"
  },
  {
    "text": "right now and\nthrowing it up in NPM. So somebody will create\na transformation tool, most likely, where you can go\nfrom XML through XSLT into Web",
    "start": "2331280",
    "end": "2340760"
  },
  {
    "text": "Components. I do know that there's\nalready [? Gulp ?] [? WC ?] and [? Grunt ?] [? WC ?], which\ncan actually assemble your Web",
    "start": "2340760",
    "end": "2347050"
  },
  {
    "text": "Component object for you. So things are moving\nreally quickly.",
    "start": "2347050",
    "end": "2352359"
  },
  {
    "text": "Here on the left, and then\nwe'll come all the way back to the right. So the question was, what's\nholding Web Components back",
    "start": "2352360",
    "end": "2358140"
  },
  {
    "text": "at the heart of it? And I think what's holding\nWeb Components back is whether or not companies\nare able to identify",
    "start": "2358140",
    "end": "2366310"
  },
  {
    "text": "the blocks of\nreusable components. It's a very different way. Just a year ago, we were\ntalking about single-page apps.",
    "start": "2366310",
    "end": "2372520"
  },
  {
    "text": "And OK, we're going\nto have models and views and controllers. That was all very-- I think\nthe term we tend to use is we",
    "start": "2372520",
    "end": "2378730"
  },
  {
    "text": "call it an imperative\nweb, where we use code to describe everything.",
    "start": "2378730",
    "end": "2385245"
  },
  {
    "text": "Web Components come\nto something that's called a declarative\nweb, where you actually are using very strongly\ntyped HTML tags to describe",
    "start": "2385246",
    "end": "2393430"
  },
  {
    "text": "functionality. I think what holds\nthe people back is that's a very\ndifferent way of thinking.",
    "start": "2393430",
    "end": "2399590"
  },
  {
    "text": "How many people remember\ntrying to dive into Angular? I saw about half the room\nthat had put their hands up.",
    "start": "2399590",
    "end": "2406120"
  },
  {
    "text": "How many people understood\nAngular on the first try? And there's zero hands.",
    "start": "2406120",
    "end": "2412770"
  },
  {
    "text": "Angular was a very\ndifferent way of thinking. It was one of the\nfirst frameworks that",
    "start": "2412770",
    "end": "2418190"
  },
  {
    "text": "really embraced\ndeclarative style. Everything's a tag. Well, what about\nif it's not a tag?",
    "start": "2418190",
    "end": "2423620"
  },
  {
    "text": "Shut up, it's a tag. That was how it worked. And you had to\nrethink, well, where",
    "start": "2423620",
    "end": "2429059"
  },
  {
    "text": "do I put my routing logic? It's in a tag. Where do I put my-- a tag. What-- tag. Tag.",
    "start": "2429060",
    "end": "2434760"
  },
  {
    "text": "That was Angular. That's Web Components, too. And I think what holds us\nback is that idea of thinking",
    "start": "2434760",
    "end": "2441690"
  },
  {
    "text": "about things as reusable\nblocks of content and how they relate in\na hierarchical structure",
    "start": "2441690",
    "end": "2447950"
  },
  {
    "text": "so that we can embrace HTML. I think there will be\npattern sites that come out. I actually do know\nthere is one--",
    "start": "2447950",
    "end": "2453484"
  },
  {
    "text": "I don't remember the URL for\nit-- that has Web Components. If you really-- which one?",
    "start": "2453484",
    "end": "2459146"
  },
  {
    "text": "AUDIENCE: Components.kitchen? Is that the one you're talking-- JAKOB HEUSER: I think so. Components Kitchen. And there's another\none, which I should",
    "start": "2459146",
    "end": "2464720"
  },
  {
    "text": "have put in the presentation. I'll probably update the\nslides today, as well, to make reference of it. How many people have used\nthe Google APIs before,",
    "start": "2464720",
    "end": "2473319"
  },
  {
    "text": "like the JavaScript APIs? So your world's solved. There's actually a\nsuite of HTML tags",
    "start": "2473320",
    "end": "2479809"
  },
  {
    "text": "for Web Components\nthat do everything. You want to Google Map? Less than Google\nMap greater than.",
    "start": "2479810",
    "end": "2486430"
  },
  {
    "text": "Oh, you want it with\nlatitude and longitude? Less than Google Maps lat\nequals long equals greater than.",
    "start": "2486430",
    "end": "2493589"
  },
  {
    "text": "For docs, for spreadsheets, for\nGoogle Plus, for Google Maps, all the Google stuff has\nWeb Components already.",
    "start": "2493590",
    "end": "2501820"
  },
  {
    "text": "That's how much\nthey're betting on it. And from an\nimplementation standpoint, you don't actually want to\nhave a bunch of JavaScript that",
    "start": "2501820",
    "end": "2508330"
  },
  {
    "text": "configures it and sets it\nup and then manipulates it. You really want to\nbe able to just,",
    "start": "2508330",
    "end": "2513609"
  },
  {
    "text": "here's my Google Map object. And then now I can\naccess that with, like, document.getElementByID\nand do",
    "start": "2513610",
    "end": "2519890"
  },
  {
    "text": "whatever operations\nI need to on it. So I think it'll come with time. I think, to your question,\nagain, what holds us back?",
    "start": "2519890",
    "end": "2527550"
  },
  {
    "text": "We're being held back\nby a way of thinking more than the actual\nideas themselves.",
    "start": "2527550",
    "end": "2534010"
  },
  {
    "text": "Over here on the right? Yeah, I've actually-- so the\nquestion was whether or not I've built anything more complex\nthan a three-item carousel that",
    "start": "2534010",
    "end": "2541450"
  },
  {
    "text": "wraps. Yes. When you get into\nthat-- I didn't",
    "start": "2541450",
    "end": "2546690"
  },
  {
    "text": "want to go too much\ninto it, because I wanted to focus on the\nWeb Components piece. But every framework\nhas their own concepts",
    "start": "2546690",
    "end": "2552350"
  },
  {
    "text": "around message passing and\nencapsulation strategies. So Ember, because you're working\nin the Ember app component",
    "start": "2552350",
    "end": "2558109"
  },
  {
    "text": "namespace, you can actually\nuse standard eventing in Ember in order to have\ncomponents talk to views.",
    "start": "2558110",
    "end": "2564140"
  },
  {
    "text": "Components are really just\nan extension of Ember views, for those that want to\nget really technical. And so they can push things\nback into the models, which",
    "start": "2564140",
    "end": "2570860"
  },
  {
    "text": "can be listened\nto by controllers and can push data\nback into other views. And you can take advantage\nEmber's data mining.",
    "start": "2570860",
    "end": "2579240"
  },
  {
    "text": "React has its own\nmessage passing system, where, using JSX, you\ncan add on-click handlers",
    "start": "2579240",
    "end": "2584440"
  },
  {
    "text": "and you can bubble\nthings in and out. Let's see here. Angular has its\nmessage passing system,",
    "start": "2584440",
    "end": "2590970"
  },
  {
    "text": "which I started down\nthat road, and then I realized I was\nrunning out of time. So I decided I should\nreally probably finish",
    "start": "2590970",
    "end": "2597540"
  },
  {
    "text": "the Polymer example. And Polymer, because\nit's trying to polyfill, you can just use regular events.",
    "start": "2597540",
    "end": "2603610"
  },
  {
    "text": "And so it's really going\nto come down to style. If you're using\nWeb Components, you can just attach\nthem to your page,",
    "start": "2603610",
    "end": "2609880"
  },
  {
    "text": "and you can partially\nadopt a framework. Ember and React also\nlet you go whole hog.",
    "start": "2609880",
    "end": "2615610"
  },
  {
    "text": "So does Angular. Polymer's about the only one\nthat technically doesn't, because-- I mean, you could\nmake a page of Web Components,",
    "start": "2615610",
    "end": "2622660"
  },
  {
    "text": "and you can have a\nmy-app tag at the top. But fundamentally, it's\na slightly different way",
    "start": "2622660",
    "end": "2628070"
  },
  {
    "text": "of thinking. So depending on how many or how\nfew Web Components you want,",
    "start": "2628070",
    "end": "2633440"
  },
  {
    "text": "they all have systems\nfor the messaging, for inter-component\ncommunication. Some of them, like Ember,\nhave gone a step further",
    "start": "2633440",
    "end": "2639990"
  },
  {
    "text": "and have already thought\nthrough Ajax, data binding. React has thought about DOM\nupdates to minimize reflows.",
    "start": "2639990",
    "end": "2647230"
  },
  {
    "text": "So they've all kind of\ngot their strengths. And so in terms of the things\nI've personally played with,",
    "start": "2647230",
    "end": "2652560"
  },
  {
    "text": "I've done a lot of Ember,\nI've done a very little bit of Angular, and I've\ndone a lot of Polymer",
    "start": "2652560",
    "end": "2657750"
  },
  {
    "text": "just to see what\nthe specification is supposed to behave like.  ",
    "start": "2657750",
    "end": "2663440"
  },
  {
    "text": "Cool. We've got about five\nminutes until time for any other questions\nif anybody has anything.  ",
    "start": "2663440",
    "end": "2670730"
  },
  {
    "text": "Yeah, in the back, and then\nover here on the right. So the question was,\nhow are people unit testing their\nPolymer components?",
    "start": "2670730",
    "end": "2676964"
  },
  {
    "text": "And I actually\nthink there's going to be two problems that\npeople are going to run into. The first problem people\nare going to run into",
    "start": "2676964",
    "end": "2683460"
  },
  {
    "text": "is dependency injection. So your Polymer element,\nor your custom-element,",
    "start": "2683460",
    "end": "2689240"
  },
  {
    "text": "once we get native, depends\non this other thing. How do you make\nsure you're dealing",
    "start": "2689240",
    "end": "2694340"
  },
  {
    "text": "with only your custom\nlayer in the composition? How are you testing\njust your stuff without a weird dependency on\nthe underlying infrastructure?",
    "start": "2694340",
    "end": "2702514"
  },
  {
    "text": "And the piece to\nthat, I think, is that we don't have\nan answer yet. AMD, which is a popular module\nsystem for the browser-- it",
    "start": "2702514",
    "end": "2709930"
  },
  {
    "text": "stands for Asynchronous\nModule Definition, a bunch of great work done by James\nBurke and RequireJS folks--",
    "start": "2709930",
    "end": "2717020"
  },
  {
    "text": "kind of touches\non this, where we deal with dependency injection. And there's some\nstuff out there, like Redefine, Squire,\nwhich allow you",
    "start": "2717020",
    "end": "2724080"
  },
  {
    "text": "to kind of mock\nyour dependencies. I think we're going\nto need something like that for Web Components.",
    "start": "2724080",
    "end": "2729380"
  },
  {
    "text": "I don't think we\nhave an answer yet. And I think that's one of\nthose pieces that'll really hurt our ability to do\ncomponent-level testing,",
    "start": "2729380",
    "end": "2736350"
  },
  {
    "text": "because in theory, it's\nintegration testing, not unit testing at that point. But trying to test how that\npiece works together and then",
    "start": "2736351",
    "end": "2743160"
  },
  {
    "text": "works in an ecosystem is\ngoing to be a big challenge. So I don't think we\nhave an answer yet.",
    "start": "2743160",
    "end": "2749180"
  },
  {
    "text": "Yes, I am an\nemployee at LinkedIn. AUDIENCE: Can you tell us,\nin stuff that's already on the web, which of these\napproaches are currently used?",
    "start": "2749180",
    "end": "2756650"
  },
  {
    "text": "JAKOB HEUSER: So currently,\nat LinkedIn, we actually have an older\nhomegrown framework. That was some of\nthose script tags",
    "start": "2756650",
    "end": "2762900"
  },
  {
    "text": "when I showed everybody\nthe large, really horrible nested markup stuff. We're currently running\ninternal prototypes,",
    "start": "2762900",
    "end": "2769670"
  },
  {
    "text": "where we're using li\nBackbone for some stuff. We have an internal Backbone\nbuild that we use just to avoid having to rewrite\na bunch of Commons code",
    "start": "2769670",
    "end": "2777970"
  },
  {
    "text": "between apps. And we're actually doing a lot\nof experimentation with Ember. Part of our requirements, as I\ntalked about with the Internet",
    "start": "2777970",
    "end": "2785650"
  },
  {
    "text": "Explorer boundaries\nper framework, IE is a big dictator for us\nabout what we have to support.",
    "start": "2785650",
    "end": "2792119"
  },
  {
    "text": "While we've been\nable to retire IE7, we're still working on trying\nto nudge people off of IE8.",
    "start": "2792120",
    "end": "2797559"
  },
  {
    "text": "Until which point\nwe do that, we have to look at frameworks\nthat make sure they support IE8 and try\nand plan for it in advance.",
    "start": "2797560",
    "end": "2804200"
  },
  {
    "text": "So that's actually how it\nkind of informs our decision. Like many other tech companies,\nwe do hack days and stuff",
    "start": "2804200",
    "end": "2810867"
  },
  {
    "text": "once a month, where people will\njust build whatever they want, scratch itches,\nthings like that. And so I've seen people\npump out different React",
    "start": "2810867",
    "end": "2817619"
  },
  {
    "text": "items, different Polymer items. So it's getting used in\nprototypes and stuff.",
    "start": "2817620",
    "end": "2823039"
  },
  {
    "text": "But internally, the stuff\nwe've been actually focused on has been primarily, if you were\nto pick any of these component",
    "start": "2823040",
    "end": "2828850"
  },
  {
    "text": "strategies, it's been Ember. And that's just because\nof the support matrix. AUDIENCE: Great, thanks.",
    "start": "2828850",
    "end": "2833990"
  },
  {
    "text": "JAKOB HEUSER: Cool. All right, so we're at time. It's about 10 minutes till. Give people time to go\nout and shuffle rooms.",
    "start": "2833990",
    "end": "2839230"
  },
  {
    "text": "[APPLAUSE]  ",
    "start": "2839230",
    "end": "2851641"
  }
]