[
  {
    "start": "0",
    "end": "103000"
  },
  {
    "text": "[Music]",
    "start": "3320",
    "end": "14289"
  },
  {
    "text": "hello and welcome to the api showdown today i'm joined by joined by three panelists each chosen to represent be a",
    "start": "14960",
    "end": "21600"
  },
  {
    "text": "representative of one particular api technology more or less",
    "start": "21600",
    "end": "26720"
  },
  {
    "text": "now any good architect knows the only time you should ever use always or never is to say we will never",
    "start": "26720",
    "end": "33040"
  },
  {
    "text": "deal in absolute so i don't want to paint any of the panelists into a corner as only an expert on one topic it's just",
    "start": "33040",
    "end": "38480"
  },
  {
    "text": "a helpful way to create a discussion with diverse opinions because we really want to understand",
    "start": "38480",
    "end": "44320"
  },
  {
    "text": "what are the trade-offs you need to consider when evaluating your options now that i've said i'm not going to paint them into corner i'm going to tell",
    "start": "44320",
    "end": "50079"
  },
  {
    "text": "you which panelist is in which corner so representing grpc we have alex",
    "start": "50079",
    "end": "55280"
  },
  {
    "text": "borisov alex is currently an engineer at netflix and was previously at google who gave us",
    "start": "55280",
    "end": "60399"
  },
  {
    "text": "the g in grpc hello alex",
    "start": "60399",
    "end": "64799"
  },
  {
    "text": "uh next while garrett is part of the team building twitter's large-scale graphql",
    "start": "65439",
    "end": "71280"
  },
  {
    "text": "api twitter picked her up after she did an amazing job implementing graphql at",
    "start": "71280",
    "end": "76320"
  },
  {
    "text": "conde nast where surprisingly they did not put the gq in graphql hello",
    "start": "76320",
    "end": "82880"
  },
  {
    "text": "and i hope they're both ready to meet matt mclarty who's certainly not resting in the third corner matt is a global",
    "start": "82880",
    "end": "88240"
  },
  {
    "text": "field cto for mulesoft co-author of two o'reilly books on microservice apis and architecture and when he's not behind a",
    "start": "88240",
    "end": "94720"
  },
  {
    "text": "microphone here at qcon he's behind a microphone as co-host of the api's unplugged podcast welcome matt",
    "start": "94720",
    "end": "101680"
  },
  {
    "text": "thanks thomas so i want to start off brief origin stories now apis have existed for as",
    "start": "101680",
    "end": "108079"
  },
  {
    "start": "103000",
    "end": "308000"
  },
  {
    "text": "long as we've needed two systems to be able to talk to each other um but for various reasons this has led",
    "start": "108079",
    "end": "115439"
  },
  {
    "text": "to the invention of countless protocols patterns and paradigms for developing apis",
    "start": "115439",
    "end": "121600"
  },
  {
    "text": "and we're now at a point where with any of the three technologies you represent someone can come in and just implement that technology right now but at some",
    "start": "121600",
    "end": "129520"
  },
  {
    "text": "point in the past they did not exist so tell me why was your technology created",
    "start": "129520",
    "end": "134560"
  },
  {
    "text": "we don't need a whole history people can go and google that they want but what was give me the one",
    "start": "134560",
    "end": "139920"
  },
  {
    "text": "problem it was trying to solve and what was the innovative idea that it brought to the table and we'll go in",
    "start": "139920",
    "end": "145520"
  },
  {
    "text": "chronological order so matt that means you're up first to tell us about rest awesome well and you know i think i'm i",
    "start": "145520",
    "end": "152480"
  },
  {
    "text": "may be the old guy in the panel i i'm only choosing rest because corba was not an option so",
    "start": "152480",
    "end": "158560"
  },
  {
    "text": "um there's my joke for my uh fellow uh in my age category um",
    "start": "158560",
    "end": "164160"
  },
  {
    "text": "you know it's a great point like you could probably write jrr tolkien size books on the history of",
    "start": "164160",
    "end": "169920"
  },
  {
    "text": "rest and apis and yes roy fielding had the dissertation which kind of defined the style of",
    "start": "169920",
    "end": "176080"
  },
  {
    "text": "representational state transfer um which certainly which really was kind of like hey it was more like showing in",
    "start": "176080",
    "end": "183440"
  },
  {
    "text": "a thesis hey here's how you can define an architectural style and let's choose how the web works so we'll use rest",
    "start": "183440",
    "end": "189680"
  },
  {
    "text": "but i think i think that you know in terms of solving the problem i think what's really interesting is it was a very organic adoption of rest in a lot",
    "start": "189680",
    "end": "198640"
  },
  {
    "text": "of different use uses right like it was not there at the time there was a lot of",
    "start": "198640",
    "end": "204000"
  },
  {
    "text": "energy behind soap in the enterprises you know here's a way of using web technologies to connect things",
    "start": "204000",
    "end": "210080"
  },
  {
    "text": "and and all these very very very prescriptive standards about how to write soap messages so rest's rise was",
    "start": "210080",
    "end": "217200"
  },
  {
    "text": "really sort of in response to in rebellion against this soap",
    "start": "217200",
    "end": "223040"
  },
  {
    "text": "and and he started just being like hey here's a practical way of doing things what if we just use http verbs and define things as",
    "start": "223040",
    "end": "230640"
  },
  {
    "text": "resources over the web so if i had to generalize what problem it was meant to solve",
    "start": "230640",
    "end": "236239"
  },
  {
    "text": "you know it's kind of it's kind of like the web itself like it was really if we go underneath the browser on webs how do",
    "start": "236239",
    "end": "242000"
  },
  {
    "text": "we just plug things together using web protocols and that's why",
    "start": "242000",
    "end": "247200"
  },
  {
    "text": "i think part of the the power of rest has been in part of the ubiquity of rest has been it's",
    "start": "247200",
    "end": "253680"
  },
  {
    "text": "wide adoption in many different use cases and i think people learning it in one area and then",
    "start": "253680",
    "end": "259919"
  },
  {
    "text": "applying it another and you can even argue that you know things like now you can do all it used to be you",
    "start": "259919",
    "end": "266000"
  },
  {
    "text": "just connect to the ebay api or something using rust in the early days uh now",
    "start": "266000",
    "end": "271440"
  },
  {
    "text": "then it was like well what if we you know what if we use a rest api to do",
    "start": "271440",
    "end": "276720"
  },
  {
    "text": "deployments or do some sort of management over the over web networks then it was oh there's these mobile",
    "start": "276720",
    "end": "282479"
  },
  {
    "text": "devices well what if how are we going to expose systems to mobile oh well we can use this rest thing that seems to be",
    "start": "282479",
    "end": "287759"
  },
  {
    "text": "working in other places so it really has been a very organic thing which can be probably you know",
    "start": "287759",
    "end": "293440"
  },
  {
    "text": "some of the reasons that new protocols have emerged has probably been based on its ubiquity and the compromises that",
    "start": "293440",
    "end": "299919"
  },
  {
    "text": "come with that and the ambiguity that comes with that but you know the story of rest is really the story of the web",
    "start": "299919",
    "end": "307039"
  },
  {
    "text": "actually uh so next chronologically according to my research on wikipedia uh is graphql",
    "start": "307039",
    "end": "312800"
  },
  {
    "start": "308000",
    "end": "457000"
  },
  {
    "text": "so michelle why do we have graphql what does it give us yes um thank you for keeping my gq",
    "start": "312800",
    "end": "319600"
  },
  {
    "text": "graphql joke alive by the way um uh okay so graphql uh was originally",
    "start": "319600",
    "end": "326000"
  },
  {
    "text": "developed by facebook uh in 2012 uh and then the spec was first released",
    "start": "326000",
    "end": "332000"
  },
  {
    "text": "publicly in 2015. uh so it's been around uh open source for about six years now",
    "start": "332000",
    "end": "339039"
  },
  {
    "text": "and the history of graphql at facebook is quite widely written about and you can look up online and find out all",
    "start": "339039",
    "end": "345840"
  },
  {
    "text": "about it but i'll give you a brief tldr um ultimately the first ever",
    "start": "345840",
    "end": "351039"
  },
  {
    "text": "implementation of graphql was the facebook mobile news feed api",
    "start": "351039",
    "end": "357759"
  },
  {
    "text": "and the problem that facebook engineers were trying to solve with graphql was that pain point of having to make",
    "start": "357759",
    "end": "365360"
  },
  {
    "text": "loads of different api requests back and forth from different endpoints in order to get all of the data that was",
    "start": "365360",
    "end": "371440"
  },
  {
    "text": "necessary to render review which in this case is the very complicated facebook news feed where everything is",
    "start": "371440",
    "end": "378160"
  },
  {
    "text": "interconnected and nested with each other uh and this was uh coupled with the",
    "start": "378160",
    "end": "383440"
  },
  {
    "text": "problem at the time of people shifting to mobile and using uh really bad 3g mobile networks",
    "start": "383440",
    "end": "391039"
  },
  {
    "text": "uh so yeah so graphql graphio's invented to solve those problems at facebook and",
    "start": "391039",
    "end": "396400"
  },
  {
    "text": "the the fresh idea that graphql brought to the table uh was really thinking about data in",
    "start": "396400",
    "end": "403039"
  },
  {
    "text": "terms of a graph instead of multiple endpoints so unlike rest apis which",
    "start": "403039",
    "end": "410400"
  },
  {
    "text": "expose data via multiple different endpoints uh graphql exposes all of the",
    "start": "410400",
    "end": "415759"
  },
  {
    "text": "data through a single endpoint that is flexible and and when you build a graphql api uh",
    "start": "415759",
    "end": "423840"
  },
  {
    "text": "you're really trying to build a unified data graph uh which client developers",
    "start": "423840",
    "end": "429280"
  },
  {
    "text": "can then query a subset of based on what their needs are and so really the the key feature of",
    "start": "429280",
    "end": "436560"
  },
  {
    "text": "graphql and what everyone loves about it and what is innovative about it uh is",
    "start": "436560",
    "end": "441599"
  },
  {
    "text": "that it empowers client developers to select exactly the data that they want from the api and get back exactly what",
    "start": "441599",
    "end": "448720"
  },
  {
    "text": "they've asked for without anything else um and they get it all in one go so",
    "start": "448720",
    "end": "454240"
  },
  {
    "text": "that's graphql nice and shiny um all right alex that means you gotta tell",
    "start": "454240",
    "end": "459360"
  },
  {
    "start": "457000",
    "end": "575000"
  },
  {
    "text": "us about the newest kid to the party grpc absolutely hello everyone thank you",
    "start": "459360",
    "end": "465199"
  },
  {
    "text": "thomas and by the way contrary to popular belief g doesn't stand for google i'll send you a link",
    "start": "465199",
    "end": "471840"
  },
  {
    "text": "for what gs10 but uh you thomas mentioned that your pc",
    "start": "471840",
    "end": "477199"
  },
  {
    "text": "was the newest kid but in fact it has older siblings at google",
    "start": "477199",
    "end": "482479"
  },
  {
    "text": "and your pc is just a new version of stubby the api technology google used internally for a long time for over a",
    "start": "482479",
    "end": "489520"
  },
  {
    "text": "decade this new version is based on http 2 and it accumulated all the knowledge and",
    "start": "489520",
    "end": "495039"
  },
  {
    "text": "lessons learned during those long years of running truly distributed systems inside",
    "start": "495039",
    "end": "500639"
  },
  {
    "text": "google something that we call microservices now in a way grpc was a set of best practices for efficient",
    "start": "500639",
    "end": "507360"
  },
  {
    "text": "remote communication implemented in a one open source rpc framework",
    "start": "507360",
    "end": "513039"
  },
  {
    "text": "and grpc was released shortly after http 2 specification was published one of the",
    "start": "513039",
    "end": "518479"
  },
  {
    "text": "ideas was to bring all those performance improvements and capabilities of http 2 into a simple performant easy to use api",
    "start": "518479",
    "end": "526399"
  },
  {
    "text": "first framework that can be utilized in a number of scenarios from high throughput back ends",
    "start": "526399",
    "end": "531839"
  },
  {
    "text": "to communication with devices on unstable mobile networks with limited cpu and",
    "start": "531839",
    "end": "536959"
  },
  {
    "text": "memory footprint so the idea was not to create an architectural style the idea was not to create a query language the",
    "start": "536959",
    "end": "543200"
  },
  {
    "text": "idea was to offer a collection of technologies that help you as a developer build and run distributed",
    "start": "543200",
    "end": "549279"
  },
  {
    "text": "system with large number of remote calls and hide all the http 2 protocol implementation detail",
    "start": "549279",
    "end": "556080"
  },
  {
    "text": "give you as a developer a framework with efficient wire format fast realization deserialization and built-in features",
    "start": "556080",
    "end": "562959"
  },
  {
    "text": "you will need to run your system and help you focus on modeling your business-oriented actions as opposed to",
    "start": "562959",
    "end": "569920"
  },
  {
    "text": "http protocol details [Music] gotcha so um",
    "start": "569920",
    "end": "576560"
  },
  {
    "start": "575000",
    "end": "748000"
  },
  {
    "text": "the next question i want to ask and i invite everyone to type questions in the chat we'll get to those as we can i have",
    "start": "576560",
    "end": "581680"
  },
  {
    "text": "a few that i wanted to get through um most of the attendees here going to the api architecture track probably are",
    "start": "581680",
    "end": "588240"
  },
  {
    "text": "architects or fulfill the architect rule sometimes in their their their job and",
    "start": "588240",
    "end": "594320"
  },
  {
    "text": "you always have to look at these trade-offs and wonder well what's the right tool for the job right now",
    "start": "594320",
    "end": "599600"
  },
  {
    "text": "and i'm not saying that one tool is always correct but in your example can you give us one example when i see a",
    "start": "599600",
    "end": "607040"
  },
  {
    "text": "problem and my tool is the right solution in that situation and just",
    "start": "607040",
    "end": "612560"
  },
  {
    "text": "currency we're going to go backwards in this so alex you can go first and tell us where what problem do you see that grpc is",
    "start": "612560",
    "end": "618399"
  },
  {
    "text": "like that's the right tool for the job well uh if you're designing a low latency highly scalable distributed",
    "start": "618399",
    "end": "624959"
  },
  {
    "text": "system you should at least consider using grpc the default out of the box implementation is using protocol buffers",
    "start": "624959",
    "end": "631519"
  },
  {
    "text": "as an idl and serialization mechanism and by the way i said by default because again your pc is actually encoding",
    "start": "631519",
    "end": "638399"
  },
  {
    "text": "agnostic technically you can use grpc without protobuf but for the sake of",
    "start": "638399",
    "end": "643440"
  },
  {
    "text": "time let's stick with prado protobuf is very efficient you're not sending giant string payloads you're not spending",
    "start": "643440",
    "end": "649600"
  },
  {
    "text": "resources on parsing those strings in some languages string parsing can be extremely inefficient and if your back",
    "start": "649600",
    "end": "656000"
  },
  {
    "text": "end is used by mobile clients they will be more tolerant to bad network connections because you just send less",
    "start": "656000",
    "end": "661519"
  },
  {
    "text": "data over the wire and those clients will need to spend less cpu on deserialization which helps with battery",
    "start": "661519",
    "end": "667519"
  },
  {
    "text": "life on the other hand if you're building a backend system that include or at some",
    "start": "667519",
    "end": "672640"
  },
  {
    "text": "point will include hundreds or thousands interconnected micro services jrpc will",
    "start": "672640",
    "end": "678079"
  },
  {
    "text": "offer efficiency and speed and also will provide built-in features like deadline propagation cascading cancellations",
    "start": "678079",
    "end": "684160"
  },
  {
    "text": "retries request hedging and so on we can discuss any of those techniques in depth if you want later or perhaps at some",
    "start": "684160",
    "end": "690320"
  },
  {
    "text": "point you will need streaming apis your application needs to stream multiple requests or multiple responses in one",
    "start": "690320",
    "end": "696800"
  },
  {
    "text": "rpc interaction maybe your application streams data from sensors or stock price and suddenly second latest seems very",
    "start": "696800",
    "end": "703440"
  },
  {
    "text": "important for your business you may need flow control or back pressure for the streaming apis so streaming rpcs with",
    "start": "703440",
    "end": "710000"
  },
  {
    "text": "flow control have first class support in grpc and you will probably need tls at some point you will need load balancing",
    "start": "710000",
    "end": "716720"
  },
  {
    "text": "custom authorization monitoring grpc provides building blocks with default implementations and extension extension",
    "start": "716720",
    "end": "723839"
  },
  {
    "text": "points for all those concepts and the best thing is you don't have to think",
    "start": "723839",
    "end": "729519"
  },
  {
    "text": "about all those features until you need them jrpc is very easy to start with you can give it a try just for expressive",
    "start": "729519",
    "end": "736079"
  },
  {
    "text": "language neutral idl and auto-generated client libraries and later start using those additional features and extensions",
    "start": "736079",
    "end": "743680"
  },
  {
    "text": "when you need them right did i cover enough use cases yeah that was a little bit more than one",
    "start": "743680",
    "end": "749360"
  },
  {
    "start": "748000",
    "end": "926000"
  },
  {
    "text": "but those were all good um michelle what about you what is some place where you like we're starting from scratch but",
    "start": "749360",
    "end": "755200"
  },
  {
    "text": "we're gonna go with graphql because that's the right thing for this job",
    "start": "755200",
    "end": "760240"
  },
  {
    "text": "yeah well i was going to say that i want to cheat and say too but i feel like i can do it now uh oh yeah",
    "start": "760240",
    "end": "766480"
  },
  {
    "text": "uh i'll i'll make it quick um so my i have two use cases and i can't choose between them because they're both great",
    "start": "766480",
    "end": "772880"
  },
  {
    "text": "the first one is where you have uh one client application with many data",
    "start": "772880",
    "end": "778000"
  },
  {
    "text": "sources and the second use case is when you have uh many client applications and one",
    "start": "778000",
    "end": "785680"
  },
  {
    "text": "shared data source so let's talk about the use case where you have multiple clients that need to use",
    "start": "785680",
    "end": "792800"
  },
  {
    "text": "the same set of data in different ways so for example you might have a web",
    "start": "792800",
    "end": "798160"
  },
  {
    "text": "application and a mobile application which both need to access the same set",
    "start": "798160",
    "end": "803440"
  },
  {
    "text": "of data but the the view looks different in both of those applications and the interface",
    "start": "803440",
    "end": "809120"
  },
  {
    "text": "that they need of that data is completely different so trying to share a rest api between",
    "start": "809120",
    "end": "815279"
  },
  {
    "text": "these two clients can result in really bloated endpoints with lots of data that is unnecessary to one or the",
    "start": "815279",
    "end": "822160"
  },
  {
    "text": "other clients if you use graphql on the other hand uh",
    "start": "822160",
    "end": "827199"
  },
  {
    "text": "it allows both of these clients to share the same set of core data but they can use it in a way that actually makes",
    "start": "827199",
    "end": "833680"
  },
  {
    "text": "sense for them and they can ask specifically for the data fields that they want and they're not going to be",
    "start": "833680",
    "end": "839279"
  },
  {
    "text": "burdened by the data needs of the other applications that are sharing the same data set",
    "start": "839279",
    "end": "845680"
  },
  {
    "text": "so that's number one uh so my second beautiful use case for graphql is",
    "start": "845680",
    "end": "852000"
  },
  {
    "text": "uh when you have multiple data sources for a single application and you want to streamline those into a single interface",
    "start": "852000",
    "end": "860000"
  },
  {
    "text": "so say you're building a client application and it has loads of data sources",
    "start": "860000",
    "end": "865839"
  },
  {
    "text": "say like three rest apis a json file and a database and maybe one",
    "start": "865839",
    "end": "872160"
  },
  {
    "text": "of those rest apis is a horrible legacy api that people are kind of scared to",
    "start": "872160",
    "end": "877680"
  },
  {
    "text": "touch and it's undocumented and the naming is horrible and you can't",
    "start": "877680",
    "end": "882720"
  },
  {
    "text": "really change anything in it because it has to remain backwards compatible for other applications",
    "start": "882720",
    "end": "888240"
  },
  {
    "text": "so in this case you have disparate data sources and graphql is the perfect tool for the job to unite those data sources",
    "start": "888240",
    "end": "895279"
  },
  {
    "text": "in a data layer so you can wrap all of them in a single graphql layer",
    "start": "895279",
    "end": "900480"
  },
  {
    "text": "and this layer allows you to kind of hide the ugliness of the underlying services you can name fields how you",
    "start": "900480",
    "end": "907120"
  },
  {
    "text": "like you can hide implementation details you can relate data from the different data",
    "start": "907120",
    "end": "912480"
  },
  {
    "text": "sources together in a way that makes sense but you don't have to expose that they come from different",
    "start": "912480",
    "end": "917760"
  },
  {
    "text": "services to the client and basically you create a nice streamlined data layer for your",
    "start": "917760",
    "end": "923519"
  },
  {
    "text": "application very nice um matt we're going to ignore the fact that i think michelle just",
    "start": "923519",
    "end": "929839"
  },
  {
    "start": "926000",
    "end": "1105000"
  },
  {
    "text": "called your api ugly um but uh when when would rest be just the right",
    "start": "929839",
    "end": "936079"
  },
  {
    "text": "thing to do and is it simply that that's what everybody knows and so that's we're comfortable with and that's what we use",
    "start": "936079",
    "end": "941120"
  },
  {
    "text": "or is there a place where that's all we should be using so so in this moment of being personally insulted i'm just going",
    "start": "941120",
    "end": "947040"
  },
  {
    "text": "to reflect for a second and invert things a little bit like honestly i think i think this question to me raises",
    "start": "947040",
    "end": "952720"
  },
  {
    "text": "the question right of what how do you what's the right way of deciding what criteria to use to decide",
    "start": "952720",
    "end": "958800"
  },
  {
    "text": "on the protocol right like i think we've heard some really good technical justifications and we've heard",
    "start": "958800",
    "end": "964720"
  },
  {
    "text": "some some design justifications factoring consumer needs like the reality is",
    "start": "964720",
    "end": "969839"
  },
  {
    "text": "depending on what perspective you're coming from you could arrive at different answers and so i just wanted to pause and step",
    "start": "969839",
    "end": "976000"
  },
  {
    "text": "out of character for a moment and say like you really need to think about what your consumers need first i think",
    "start": "976000",
    "end": "981680"
  },
  {
    "text": "especially you may be in a situation where you own both ends of the pipe and so you've got a little more liberty to to make",
    "start": "981680",
    "end": "987839"
  },
  {
    "text": "decisions based on other criteria but for me step one is like what i what are my consumers need because",
    "start": "987839",
    "end": "993440"
  },
  {
    "text": "if you're you might have like the perfect technical justification to go with one protocol the others but if your",
    "start": "993440",
    "end": "999519"
  },
  {
    "text": "consumers really need it in one format then that should override things and or maybe they need",
    "start": "999519",
    "end": "1004720"
  },
  {
    "text": "multiples but we'll get to that later um but i think you know i guess i guess the answer for rest is like everything",
    "start": "1004720",
    "end": "1010959"
  },
  {
    "text": "else or or you know those plus everything else i mean again it's i think that what we've",
    "start": "1010959",
    "end": "1017600"
  },
  {
    "text": "seen is first of all how do you define rest because there's even within the",
    "start": "1017600",
    "end": "1022720"
  },
  {
    "text": "community there's lots of disagreements around that so i agree there are some ugly rest apis that that",
    "start": "1022720",
    "end": "1029360"
  },
  {
    "text": "could use some abstraction but um but the but it's not really dictated by",
    "start": "1029360",
    "end": "1034880"
  },
  {
    "text": "the protocol so that flexibility is again its strength and also leads to some of the pitfalls but",
    "start": "1034880",
    "end": "1041280"
  },
  {
    "text": "i would say in general you know where you meet the web or or maybe more abstractly when you",
    "start": "1041280",
    "end": "1047360"
  },
  {
    "text": "don't know who your consumers are so when you're really aiming at an unknown audience i think it is very beneficial",
    "start": "1047360",
    "end": "1053679"
  },
  {
    "text": "to say okay rest is the great equalizer here that that you know if if you if you don't know",
    "start": "1053679",
    "end": "1059600"
  },
  {
    "text": "who's going to consume it you kind of it's kind of the table stakes to say have a restful interface you know that there's going to be people who know how",
    "start": "1059600",
    "end": "1066320"
  },
  {
    "text": "to use that and then you know maybe maybe there'll be reasons to specialize on other protocols later but even in the",
    "start": "1066320",
    "end": "1072480"
  },
  {
    "text": "examples like we'll see we'll see some organizations will use a restful interface",
    "start": "1072480",
    "end": "1078720"
  },
  {
    "text": "on top of an abstraction on top of a grpc channel internally as a way of kind of",
    "start": "1078720",
    "end": "1084320"
  },
  {
    "text": "opening up to the web or you'll see restful apis being building blocks for a graphql endpoint that's aggregating",
    "start": "1084320",
    "end": "1091280"
  },
  {
    "text": "things so there's lots of combinatorials scenarios as well but my my things would be",
    "start": "1091280",
    "end": "1096720"
  },
  {
    "text": "think about what your consumers need and if you're not totally sure of what your consumers need then that's probably",
    "start": "1096720",
    "end": "1102000"
  },
  {
    "text": "where rest is an obvious choice well let's put a pin in the idea of combining things i'm just going to talk",
    "start": "1102000",
    "end": "1108400"
  },
  {
    "text": "about that later so you know preview um but i saw someone ask one of the questions that was going to be my next",
    "start": "1108400",
    "end": "1113520"
  },
  {
    "text": "question is so you've all given me a good answer of i'm the right choice for this job",
    "start": "1113520",
    "end": "1119440"
  },
  {
    "text": "we've also seen tools used incorrectly i've seen lots of software written that was you know i wrote c plus plus style f",
    "start": "1119440",
    "end": "1127280"
  },
  {
    "text": "sharp or something like that because that's how i knew how to write stuff and i shouldn't should have written functional by know how to write object",
    "start": "1127280",
    "end": "1132400"
  },
  {
    "text": "oriented um when when is your tool the wrong tool for the job you know admit it and don't",
    "start": "1132400",
    "end": "1138240"
  },
  {
    "text": "tell me that we're always right and i can solve every problem because we all know that that's not always the the",
    "start": "1138240",
    "end": "1143360"
  },
  {
    "text": "right fit and the answer of course as matt was pointing out is it depends but you know give me a",
    "start": "1143360",
    "end": "1148720"
  },
  {
    "text": "good i wouldn't do it if this is what you have you should go and choose something else anyone wants to go ahead please",
    "start": "1148720",
    "end": "1157600"
  },
  {
    "text": "all right i'll go um i would say that clearly we're seeing these there's",
    "start": "1157679",
    "end": "1164240"
  },
  {
    "text": "there's a couple of intersections that are really getting predominant in",
    "start": "1164240",
    "end": "1169760"
  },
  {
    "text": "i i think we're kind of at a stage where event driven event driven kind of comes around the",
    "start": "1169760",
    "end": "1174880"
  },
  {
    "text": "circle every few years right so we're in a heavy event driven period and there's lots of asynchronous use",
    "start": "1174880",
    "end": "1181440"
  },
  {
    "text": "cases where um you can model asynchronous like web hooks and things like that over us",
    "start": "1181440",
    "end": "1187360"
  },
  {
    "text": "but there's places where you can certainly optimize better with a purely asynchronous protocol",
    "start": "1187360",
    "end": "1192480"
  },
  {
    "text": "but i think the big one for me is this convergence of the analytics world and big data world",
    "start": "1192480",
    "end": "1197919"
  },
  {
    "text": "mashing up with the sort of user-facing application microservices world and so we're i've having lived in the",
    "start": "1197919",
    "end": "1205840"
  },
  {
    "text": "distributed computing world there's a lot of sort of assumptions made that oh you know big",
    "start": "1205840",
    "end": "1212080"
  },
  {
    "text": "big data analytics whatever it's just more data to handle there's clearly a lot of cases where",
    "start": "1212080",
    "end": "1217520"
  },
  {
    "text": "you're connecting things with massive amounts of data and scale of data that you don't necessarily want to put it",
    "start": "1217520",
    "end": "1223039"
  },
  {
    "text": "through a straw of a you know a more message-oriented restful interface so",
    "start": "1223039",
    "end": "1228640"
  },
  {
    "text": "that that's that's probably the big one i would say if you're a distributed systems architect or",
    "start": "1228640",
    "end": "1234159"
  },
  {
    "text": "engineer and you're just now getting into the world of analytics and etl of big data like watch out for that",
    "start": "1234159",
    "end": "1243120"
  },
  {
    "text": "[Music] yeah uh so",
    "start": "1244790",
    "end": "1250080"
  },
  {
    "text": "i think that graphql is uh really geared towards product",
    "start": "1250080",
    "end": "1255280"
  },
  {
    "text": "engineering and that is where it really shines uh and that's where it has the most",
    "start": "1255280",
    "end": "1260840"
  },
  {
    "text": "adoption um and so one of the creators of graphql lee byron has said in the past that graphql",
    "start": "1260840",
    "end": "1268080"
  },
  {
    "text": "really isn't the right choice for server to server communication um so if you're looking to build",
    "start": "1268080",
    "end": "1274960"
  },
  {
    "text": "a way for your backend services to speak to each other i don't think graphql is the right choice for that",
    "start": "1274960",
    "end": "1280960"
  },
  {
    "text": "uh because i think the power of graphql is in what it gives to product developers which is like flexibility and",
    "start": "1280960",
    "end": "1286559"
  },
  {
    "text": "great tooling um and i i think that the benefits are less in this kind of scenario and you might want to look more",
    "start": "1286559",
    "end": "1293440"
  },
  {
    "text": "towards thrift or grpc or or or rest something else",
    "start": "1293440",
    "end": "1300799"
  },
  {
    "text": "[Music] and i'll start with some other answers for grpc",
    "start": "1300870",
    "end": "1306960"
  },
  {
    "start": "1303000",
    "end": "1450000"
  },
  {
    "text": "for example when your language is not supported so code generation comes with a downside",
    "start": "1306960",
    "end": "1312880"
  },
  {
    "text": "that only 11 languages are supported if your language is not on the list",
    "start": "1312880",
    "end": "1318159"
  },
  {
    "text": "you're out of luck or which can be even more important if your language is on the list but your consumers cannot use",
    "start": "1318159",
    "end": "1324799"
  },
  {
    "text": "or don't want to use a language that is",
    "start": "1324799",
    "end": "1329919"
  },
  {
    "text": "supported they should probably look or you should probably build your api with something",
    "start": "1329919",
    "end": "1335200"
  },
  {
    "text": "else in those cases you can create like reverse proxies you can use projects like grpc gateway that creates rest and",
    "start": "1335200",
    "end": "1342159"
  },
  {
    "text": "points for grpc services or you can use envoy with jrpc json transcoder that",
    "start": "1342159",
    "end": "1347440"
  },
  {
    "text": "translates a restful request into grpc but those solutions are more like workarounds if",
    "start": "1347440",
    "end": "1354400"
  },
  {
    "text": "you know that significant amount of your api consumers will not be able to use native jrpc libraries it's probably not",
    "start": "1354400",
    "end": "1360880"
  },
  {
    "text": "the best tool to use also if you're building like one of apis that you know you will sunset soon for",
    "start": "1360880",
    "end": "1367360"
  },
  {
    "text": "example you build migration apis or something the schema overhead might not",
    "start": "1367360",
    "end": "1372640"
  },
  {
    "text": "be worth it or if you're building a service that only talks to a web browser and it doesn't call any backend services",
    "start": "1372640",
    "end": "1379039"
  },
  {
    "text": "it just costs the database for example it's a simple application or you're building a monolith for a good reason in",
    "start": "1379039",
    "end": "1385440"
  },
  {
    "text": "those scenarios you can get more benefits from another technology graphql or rest yes you may",
    "start": "1385440",
    "end": "1391600"
  },
  {
    "text": "still be able to use graphql grpc and you still still will benefit from",
    "start": "1391600",
    "end": "1398559"
  },
  {
    "text": "language neutral contract from code generation but to talk to the web browser",
    "start": "1398559",
    "end": "1403760"
  },
  {
    "text": "you will need grpc web proxy and communication between proxy and the web browser will still be",
    "start": "1403760",
    "end": "1411760"
  },
  {
    "text": "http 1.1 so if your only integration point is web browser grpc is probably",
    "start": "1411760",
    "end": "1417360"
  },
  {
    "text": "not the best choice and you should really understand what your complexity is i mean you",
    "start": "1417360",
    "end": "1424240"
  },
  {
    "text": "should start with understanding what your complexities if your complexity is in qps",
    "start": "1424240",
    "end": "1429600"
  },
  {
    "text": "throughput latencies you're concerned about optimizing pay latencies go with grpc if your complexity is in",
    "start": "1429600",
    "end": "1436960"
  },
  {
    "text": "complex domain that you have for each ui application pulls data from",
    "start": "1436960",
    "end": "1443039"
  },
  {
    "text": "dozens of services uh graphql can be a better choice",
    "start": "1443039",
    "end": "1448420"
  },
  {
    "text": "[Music] so um alex you kind of mentioned the idea of code generation being critical for grpc",
    "start": "1448420",
    "end": "1456240"
  },
  {
    "start": "1450000",
    "end": "1662000"
  },
  {
    "text": "and my next question was about what does it take to get started like if i'm just exploring this",
    "start": "1456240",
    "end": "1461919"
  },
  {
    "text": "i may know some things about rest and i may know how to like just make an http request because you just have to make an",
    "start": "1461919",
    "end": "1467120"
  },
  {
    "text": "http request and that's very easy to learn um if we assume that all this is client",
    "start": "1467120",
    "end": "1473120"
  },
  {
    "text": "server communications even if it's server to server one of those the client one's a server what does it take from the server side",
    "start": "1473120",
    "end": "1479600"
  },
  {
    "text": "and what does it take from the client side to say i now have two two components of my system that can",
    "start": "1479600",
    "end": "1484720"
  },
  {
    "text": "talk to each other and since i already mentioned alex and codegen why don't you go first yeah absolutely i mean first",
    "start": "1484720",
    "end": "1490880"
  },
  {
    "text": "your consumer and producer client and server they have to agree on the protocol grpc is an api first framework",
    "start": "1490880",
    "end": "1497039"
  },
  {
    "text": "so an api contract is not an afterthought it's the very first thing you start with again for simplicity",
    "start": "1497039",
    "end": "1502720"
  },
  {
    "text": "let's pretend it's only protobuf and unlike rest or graphql in jrpc you",
    "start": "1502720",
    "end": "1508640"
  },
  {
    "text": "model actions you model your methods you define your service which is just a collection of actions that your server",
    "start": "1508640",
    "end": "1515919"
  },
  {
    "text": "can do and your server can be resource oriented but it doesn't have to",
    "start": "1515919",
    "end": "1521840"
  },
  {
    "text": "be you define what it can do and this action can be defined around data entities or can be not",
    "start": "1521840",
    "end": "1528640"
  },
  {
    "text": "and then even though grpc is based on http protocol grpc does not expose any",
    "start": "1528640",
    "end": "1534400"
  },
  {
    "text": "http details so this protobuf schema is very simple you define your request as a product message",
    "start": "1534400",
    "end": "1540480"
  },
  {
    "text": "your response the proto message and your method and then you will need to use",
    "start": "1540480",
    "end": "1547039"
  },
  {
    "text": "protocol buffer plugin a protocol buffer compiler with jrpc plugin to generate",
    "start": "1547039",
    "end": "1552799"
  },
  {
    "text": "classes for both consumer and producers for example let's say we define the q con service these two actions",
    "start": "1552799",
    "end": "1559679"
  },
  {
    "text": "attend the session and attend lunch two most important things you can do during the conference so attend session takes",
    "start": "1559679",
    "end": "1565760"
  },
  {
    "text": "requests it returns a response so your api definitions",
    "start": "1565760",
    "end": "1571520"
  },
  {
    "text": "will be compiled into classes in a language of your choice for example let's say we use protocompiler with grpc",
    "start": "1571520",
    "end": "1579039"
  },
  {
    "text": "java plugin for backend it generates an abstract class called qcon service input base and backend developer would need to",
    "start": "1579039",
    "end": "1586320"
  },
  {
    "text": "extend this class override that attend session override attend launch methods",
    "start": "1586320",
    "end": "1591840"
  },
  {
    "text": "so no annotations no mapping you just need to implement methods in your language",
    "start": "1591840",
    "end": "1596960"
  },
  {
    "text": "and for the client protocompiler generates client stops and client libraries",
    "start": "1596960",
    "end": "1602960"
  },
  {
    "text": "these methods attend session and attend launch and in fact it generates two types two subsets of",
    "start": "1602960",
    "end": "1609520"
  },
  {
    "text": "client libraries synchronous and asynchronous in java it will generate three",
    "start": "1609520",
    "end": "1614880"
  },
  {
    "text": "clients blocking client callback based client and future based client so grpc encourages you to use",
    "start": "1614880",
    "end": "1620799"
  },
  {
    "text": "non-blocking clients but you can start with simple block and client and then switch to asynchronous later on if you",
    "start": "1620799",
    "end": "1626559"
  },
  {
    "text": "need to and you can just start by with instantiating those generated clients",
    "start": "1626559",
    "end": "1633039"
  },
  {
    "text": "and you use your data entities you build a request and then call this method to",
    "start": "1633039",
    "end": "1638159"
  },
  {
    "text": "invoke a server and all the heavy lifting serialization this realization opening streams",
    "start": "1638159",
    "end": "1643360"
  },
  {
    "text": "managing connections working with http 2 frames it's all hidden grpc doesn't expose any of those details so the",
    "start": "1643360",
    "end": "1650320"
  },
  {
    "text": "framework has already made all the decisions on how to layer your rpc model on top of the",
    "start": "1650320",
    "end": "1656000"
  },
  {
    "text": "protocol [Music]",
    "start": "1656000",
    "end": "1662549"
  },
  {
    "start": "1662000",
    "end": "1793000"
  },
  {
    "text": "or should i yeah i think that covered a lot of the details now michelle what is um graphql again i've seen little",
    "start": "1664480",
    "end": "1671200"
  },
  {
    "text": "tutorials of here's how to get started with graphql and it seems like there is that like how complicated is it really",
    "start": "1671200",
    "end": "1677360"
  },
  {
    "text": "do i need a new server do i just write some code and deploy it out",
    "start": "1677360",
    "end": "1682960"
  },
  {
    "text": "yeah so with graphql everything starts with a query or a mutation",
    "start": "1682960",
    "end": "1690320"
  },
  {
    "text": "so if we're talking in crud terms a graphql query is equivalent to",
    "start": "1690320",
    "end": "1696399"
  },
  {
    "text": "reading data and a mutation is when you want to create update or delete some data",
    "start": "1696399",
    "end": "1701919"
  },
  {
    "text": "um and queries let's go with queries because it's the most straightforward one",
    "start": "1701919",
    "end": "1707600"
  },
  {
    "text": "so a graphql query is essentially like a shopping list of all the data that you",
    "start": "1707600",
    "end": "1712720"
  },
  {
    "text": "want to get back from the graphql api so you write down a list of all the fields that you need and you can pass any",
    "start": "1712720",
    "end": "1719520"
  },
  {
    "text": "important arguments like a user id and all the fields that you write down",
    "start": "1719520",
    "end": "1724960"
  },
  {
    "text": "they have to correspond to the graphql schema which is a strictly typed contract that",
    "start": "1724960",
    "end": "1730559"
  },
  {
    "text": "describes all of the data that it is possible for you to ask for from the graphql api",
    "start": "1730559",
    "end": "1737039"
  },
  {
    "text": "uh and graphql apis have just a single endpoint usually graphql um usually a",
    "start": "1737039",
    "end": "1742240"
  },
  {
    "text": "post endpoint and when you want to make the request you you post your graphql query to the endpoint",
    "start": "1742240",
    "end": "1747840"
  },
  {
    "text": "and the server will receive your query uh and then on the server side uh there",
    "start": "1747840",
    "end": "1753279"
  },
  {
    "text": "there's things called resolvers uh so you you define a resolver for every single field in the graphql schema",
    "start": "1753279",
    "end": "1760240"
  },
  {
    "text": "and it's essentially a function that that tells graphql how to populate that",
    "start": "1760240",
    "end": "1765440"
  },
  {
    "text": "data and you can pull that data from anywhere you like you can pull it from other rest apis or",
    "start": "1765440",
    "end": "1772720"
  },
  {
    "text": "a database or you can just return a string whatever you want to do but basically the server will read",
    "start": "1772720",
    "end": "1778640"
  },
  {
    "text": "through the query look at all the fields and populate those fields with data one by one based on the resolver functions",
    "start": "1778640",
    "end": "1784720"
  },
  {
    "text": "and then once it's done that it'll return it to the client",
    "start": "1784720",
    "end": "1789600"
  },
  {
    "text": "that's the end so that's how i walk through the whole thing matt yeah i wanna i wanna once again you know step step",
    "start": "1790480",
    "end": "1797200"
  },
  {
    "text": "out of it get out of character a little bit because there is an element of design that happens for",
    "start": "1797200",
    "end": "1803440"
  },
  {
    "text": "independent of the protocol like i think that's an important point to make like the first thing you should worry",
    "start": "1803440",
    "end": "1808640"
  },
  {
    "text": "about isn't like let me run and start writing my uh you know my protobuf definition or my",
    "start": "1808640",
    "end": "1814960"
  },
  {
    "text": "graphql schema or my json schema right i think there's an element of design i'm just",
    "start": "1814960",
    "end": "1821440"
  },
  {
    "text": "again like i said before thinking through who your consumers are thinking about what are the actual whether it's",
    "start": "1821440",
    "end": "1827039"
  },
  {
    "text": "resources or schemas or you know messages what are the what's the actual like business activity that's going to take",
    "start": "1827039",
    "end": "1833120"
  },
  {
    "text": "place on the interaction and that's so important because i think if i look at",
    "start": "1833120",
    "end": "1838480"
  },
  {
    "text": "if we look at rest and you know if we want to just use like the sort of basic definition of",
    "start": "1838480",
    "end": "1843760"
  },
  {
    "text": "crud over http using resources um that's pretty i think everyone probably knows",
    "start": "1843760",
    "end": "1849440"
  },
  {
    "text": "everyone's familiar there's a bazillion implementations of clients and servers there and you can yeah you can it's great the developments",
    "start": "1849440",
    "end": "1856000"
  },
  {
    "text": "have been made in swagger and open api's specification to help drive more metadata and there's",
    "start": "1856000",
    "end": "1862640"
  },
  {
    "text": "flexibility to plug in json schema and security schemes like there's all that technological goodness that i'm sure ken",
    "start": "1862640",
    "end": "1869760"
  },
  {
    "text": "undoubtedly did a phenomenal job of explaining a lot of the details around that but i think you know to get started with",
    "start": "1869760",
    "end": "1877120"
  },
  {
    "text": "rest if you're thinking in a bigger context of oh i'm actually creating an api that's going to be",
    "start": "1877120",
    "end": "1883039"
  },
  {
    "text": "a new channel for my company or for my business like we talked about this idea of apis as",
    "start": "1883039",
    "end": "1888480"
  },
  {
    "text": "products a lot and and that really got the book here and continuous api",
    "start": "1888480",
    "end": "1893519"
  },
  {
    "text": "management from my friends that wrote it um there's this whole aspect of thinking through like how are people gonna find",
    "start": "1893519",
    "end": "1899760"
  },
  {
    "text": "my api how will it be discovered right how are they gonna what what is the the different segments of of consumers",
    "start": "1899760",
    "end": "1906159"
  },
  {
    "text": "involved there right how am i going to handle versioning and all that so i think the",
    "start": "1906159",
    "end": "1911440"
  },
  {
    "text": "reason i bring it up now is because i think there's a temptation to just say you know let me get the mvp quick start",
    "start": "1911440",
    "end": "1917519"
  },
  {
    "text": "thing out there but i think the sooner you start to think through okay let's let's just put the technology aside for a second and",
    "start": "1917519",
    "end": "1923919"
  },
  {
    "text": "think of all these product considerations it's really fundamental to do that because",
    "start": "1923919",
    "end": "1929440"
  },
  {
    "text": "what's that uh mary poppins quote right the worst the biggest failure in in technology is",
    "start": "1929440",
    "end": "1935440"
  },
  {
    "text": "not having something crash right it's it's building the wrong thing so you know the more thinking you put",
    "start": "1935440",
    "end": "1940480"
  },
  {
    "text": "into what is it actually design tuning what you're designing for i think i think that's key and that to me is a big",
    "start": "1940480",
    "end": "1946080"
  },
  {
    "text": "part of of getting started i think that's a great call back to the people who saw christy schneider's",
    "start": "1946080",
    "end": "1953039"
  },
  {
    "text": "presentation i think two blocks two hours ago um talking about design for extensibility she talked a lot of the",
    "start": "1953039",
    "end": "1959360"
  },
  {
    "text": "same things without specifically mentioning it was just apis it really is if you have products that you're trying to adapt over time how do",
    "start": "1959360",
    "end": "1965840"
  },
  {
    "text": "you version how do you document how do you teach people about it how do you get them to adopt it on the theme of architecture right like",
    "start": "1965840",
    "end": "1972080"
  },
  {
    "text": "i think architecture what's the difference in architecture design right it could be just architecture those",
    "start": "1972080",
    "end": "1977120"
  },
  {
    "text": "decisions you make that have long lasting implications there are things you can do up front that will",
    "start": "1977120",
    "end": "1982480"
  },
  {
    "text": "uh snicker you on you know preventing you know creating landmines down the",
    "start": "1982480",
    "end": "1987679"
  },
  {
    "text": "road so it's definitely important to put that thought in um i did want to ask at least one",
    "start": "1987679",
    "end": "1994320"
  },
  {
    "start": "1991000",
    "end": "2140000"
  },
  {
    "text": "narrow technical question since it is an architecture track one of the themes we signs here about is cqrs command query",
    "start": "1994320",
    "end": "2000960"
  },
  {
    "text": "responsibility segregation and i want to know how does that get implemented in each of these things i think matt it's",
    "start": "2000960",
    "end": "2007440"
  },
  {
    "text": "pretty obvious you write a command you write a query or you have different endpoints for those things but is that",
    "start": "2007440",
    "end": "2013519"
  },
  {
    "text": "no longer restful and do we care uh well you know again cqrs is kind",
    "start": "2013519",
    "end": "2020720"
  },
  {
    "text": "of a it's kind of grown out of domain-driven design i think it was like there's this",
    "start": "2020720",
    "end": "2025840"
  },
  {
    "text": "whole evolution of cqrs i've heard people sort of sarcastically",
    "start": "2025840",
    "end": "2032159"
  },
  {
    "text": "say cqrs was just a thing microsoft was pushing because they couldn't get",
    "start": "2032159",
    "end": "2037360"
  },
  {
    "text": "uh sql server to run effectively with uh without separating commands and",
    "start": "2037360",
    "end": "2043519"
  },
  {
    "text": "queries but um you know i think notionally it's been actually a pattern that's been in place",
    "start": "2043519",
    "end": "2049679"
  },
  {
    "text": "for a long time so you could absolutely separate your gets from your",
    "start": "2049679",
    "end": "2055679"
  },
  {
    "text": "um you know if you want to if you don't have a proxy that does",
    "start": "2055679",
    "end": "2060800"
  },
  {
    "text": "filtering and dynamic routing and then goes back and hits different back ends i mean it's really",
    "start": "2060800",
    "end": "2066800"
  },
  {
    "text": "at what point do you want to make the separation happen is it right at the network layer do you want some application layer do you want to have",
    "start": "2066800",
    "end": "2072800"
  },
  {
    "text": "some data separation so typically i would say working in the in the enterprise space that i usually",
    "start": "2072800",
    "end": "2079358"
  },
  {
    "text": "am working with customers in um there's a lot of different optimizations that that happen on the chain and i",
    "start": "2079359",
    "end": "2086878"
  },
  {
    "text": "i am not seeing a ton of organizations being purists around cqrs",
    "start": "2086879",
    "end": "2093679"
  },
  {
    "text": "those that are tend to be more in the going all in on event event modeling",
    "start": "2093679",
    "end": "2100320"
  },
  {
    "text": "and sort of event sourcing approach where there's a very sort of you know we're they're optimizing",
    "start": "2100320",
    "end": "2106960"
  },
  {
    "text": "specifically for that type of separation but uh i mean it's it's it's doable but i think",
    "start": "2106960",
    "end": "2112720"
  },
  {
    "text": "the main point is that there's lots of different points in the in the stack where you might want to have",
    "start": "2112720",
    "end": "2117839"
  },
  {
    "text": "separation for optimization purposes now michelle there's a q in graphql but",
    "start": "2117839",
    "end": "2124079"
  },
  {
    "text": "there's no c so do commands not even work through graphql or is that something somebody",
    "start": "2124079",
    "end": "2130400"
  },
  {
    "text": "else should be responsible for uh i've honestly not heard this acronym before so",
    "start": "2130400",
    "end": "2136320"
  },
  {
    "text": "maybe you can tell me so it's the idea of separating you have",
    "start": "2136320",
    "end": "2142079"
  },
  {
    "start": "2140000",
    "end": "2254000"
  },
  {
    "text": "a path where you go down you write all of your queries against one a read model if you will you know it's like writing",
    "start": "2142079",
    "end": "2147760"
  },
  {
    "text": "like math said sql server was b being slow so you wrote um",
    "start": "2147760",
    "end": "2153200"
  },
  {
    "text": "materialized views so they would read faster whatever you did but that you don't write a document and read a",
    "start": "2153200",
    "end": "2159359"
  },
  {
    "text": "document the same way so graphql seems to be i'm going to aggregate all my data together and i can ask all these",
    "start": "2159359",
    "end": "2164960"
  },
  {
    "text": "different questions just give me this little bit of data is but it's not meant for",
    "start": "2164960",
    "end": "2170079"
  },
  {
    "text": "please send a message to the next person in the queue or something like that yeah",
    "start": "2170079",
    "end": "2177040"
  },
  {
    "text": "yeah that sounds reasonable to me well i just had someone grab curl i just want",
    "start": "2177040",
    "end": "2183520"
  },
  {
    "text": "to pick up one of those okay is i think it's interesting that you've got like queries mutations and subscriptions",
    "start": "2183520",
    "end": "2189680"
  },
  {
    "text": "i think as well right and i've been i've been banging this drum around commands queries events whatever you",
    "start": "2189680",
    "end": "2196160"
  },
  {
    "text": "want to call them like there's these three different interaction patterns again that goes back to the sort of",
    "start": "2196160",
    "end": "2201280"
  },
  {
    "text": "the fact that maybe these protocols aren't all that different we're solving similar problems and there's sort of a",
    "start": "2201280",
    "end": "2207119"
  },
  {
    "text": "unified conceptual view of the world that comes that is expressed in all three of them",
    "start": "2207119",
    "end": "2212660"
  },
  {
    "text": "[Music] alex just a brief answer and i'm already",
    "start": "2212660",
    "end": "2218400"
  },
  {
    "text": "gonna set you up because i know rpc is remote procedure call it doesn't imply what you're doing you can do",
    "start": "2218400",
    "end": "2224720"
  },
  {
    "text": "whatever you want right absolutely it does not yes you can easily define separate services you can define uh",
    "start": "2224720",
    "end": "2231280"
  },
  {
    "text": "service to read your data and it's separate service to mutate your data so you will",
    "start": "2231280",
    "end": "2236640"
  },
  {
    "text": "have query service and command series they can be implemented by the same grpc service but those are services are just",
    "start": "2236640",
    "end": "2244000"
  },
  {
    "text": "uh namespaces if you will so and if your consumer is readers they use your query service if they're a writer they send",
    "start": "2244000",
    "end": "2251119"
  },
  {
    "text": "commands using your command service [Music] so we've got about three minutes left um",
    "start": "2251119",
    "end": "2256640"
  },
  {
    "text": "and they're already putting the you know joyous afterwards but i've got last question i already teed it up um so you started off by",
    "start": "2256640",
    "end": "2264160"
  },
  {
    "text": "saying we're i'm the one technology to win them all but if you had to choose somebody else and you're going to",
    "start": "2264160",
    "end": "2270400"
  },
  {
    "text": "say a two sizes fits pretty well option um which of the other choices in the room",
    "start": "2270400",
    "end": "2276400"
  },
  {
    "text": "would you pick and since i started this with chronological order we'll go in reverse",
    "start": "2276400",
    "end": "2281839"
  },
  {
    "text": "even if alex that i was wrong about the the timing so alex go ahead if um who if you're not right who do you want",
    "start": "2281839",
    "end": "2288000"
  },
  {
    "text": "with you yeah i'll try to keep it short if i have a uh reach ui that aggregates data from",
    "start": "2288000",
    "end": "2294880"
  },
  {
    "text": "multiple sources i'll go with graphql i may end up supporting two adls but",
    "start": "2294880",
    "end": "2300320"
  },
  {
    "text": "that's the price i pay on the other hand if i have a subset of consumers who can't or don't want to use jrpc clients",
    "start": "2300320",
    "end": "2306160"
  },
  {
    "text": "i'll go with the rest giving the giving it depends on the",
    "start": "2306160",
    "end": "2311680"
  },
  {
    "text": "please pick one and he chooses both um different scenarios that's fine",
    "start": "2311680",
    "end": "2318079"
  },
  {
    "text": "exactly michelle uh if i said we couldn't just use graphql everywhere who's your wingman",
    "start": "2318079",
    "end": "2324160"
  },
  {
    "text": "uh i'm gonna pick rest as my my wing woman uh",
    "start": "2324160",
    "end": "2329839"
  },
  {
    "text": "although you know i feel like rest and graphql are pitted against each other and i'm i'm sorry that i called ugly",
    "start": "2329839",
    "end": "2335520"
  },
  {
    "text": "earlier on uh but i think that they have a lot of harmony together and they're",
    "start": "2335520",
    "end": "2341119"
  },
  {
    "text": "often found together in in real world implementations of graphql um there are",
    "start": "2341119",
    "end": "2347200"
  },
  {
    "text": "just so many rest apis in the world and i don't think rest apis are gonna go away and uh i think that wrapping a rest",
    "start": "2347200",
    "end": "2354720"
  },
  {
    "text": "api in a graphql layer but maintaining the rest the underlying rest api services is a really common pattern and",
    "start": "2354720",
    "end": "2361839"
  },
  {
    "text": "is like a sweet spot for the two of them to work together matt it's up to you who's uh who's",
    "start": "2361839",
    "end": "2367920"
  },
  {
    "text": "winning this you know you know one of the reasons i'm here is that yeah and thank you michelle that one of",
    "start": "2367920",
    "end": "2374000"
  },
  {
    "text": "the reasons i'm here the article i wrote which is specifically calling out these false dichotomies like so i can't i",
    "start": "2374000",
    "end": "2380400"
  },
  {
    "text": "can't sit up here with a straight face and say oh i only pick one or the other right because",
    "start": "2380400",
    "end": "2385839"
  },
  {
    "text": "it seems it is silly to have like you know free grpc is better than rest and the",
    "start": "2385839",
    "end": "2392079"
  },
  {
    "text": "rest is better than graphql like the whole point is you know and in that article i was",
    "start": "2392079",
    "end": "2397839"
  },
  {
    "text": "stressing this kind of ubiquity and the value of that but then the trade-offs so so i'm going to go with kafka",
    "start": "2397839",
    "end": "2404880"
  },
  {
    "text": "i'm kidding i didn't see that coming with depends thought it might have been uh corba once",
    "start": "2406960",
    "end": "2413359"
  },
  {
    "text": "again coming back up i really invited this is a lot of fun i have 700 more questions there were a bunch in the chat",
    "start": "2413359",
    "end": "2418880"
  },
  {
    "text": "that i tried to copy down um we couldn't get to please join us in",
    "start": "2418880",
    "end": "2424560"
  },
  {
    "text": "the the zoom room immediately following um and i hope everyone has a good rest of q con have a good day",
    "start": "2424560",
    "end": "2432838"
  },
  {
    "text": "[Music]",
    "start": "2434450",
    "end": "2439899"
  },
  {
    "text": "you",
    "start": "2441920",
    "end": "2444000"
  }
]