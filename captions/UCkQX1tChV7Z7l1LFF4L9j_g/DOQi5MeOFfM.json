[
  {
    "text": "[Music]",
    "start": "3380",
    "end": "8639"
  },
  {
    "text": "so we're going to do some tours of the standard Library this afternoon and look at a few useful modules all our tours",
    "start": "8639",
    "end": "16480"
  },
  {
    "text": "can be relatively quick and short and also want to do one run through of tools make sure I do that in fact I might do",
    "start": "16480",
    "end": "23359"
  },
  {
    "text": "that I might do that first let's do the tools first so I make sure I don't forget so tools I use every day um",
    "start": "23359",
    "end": "30679"
  },
  {
    "text": "I've already got most of you set up with IPython and I love IPython for just playing around there is a pdb equivalent",
    "start": "30679",
    "end": "37840"
  },
  {
    "text": "to IPython you may have noticed if you run some pdb sessions that pdb is pretty Bare Bones there is",
    "start": "37840",
    "end": "44520"
  },
  {
    "text": "ipdb you can get it with easy install and ipdb works just like pdb but has a",
    "start": "44520",
    "end": "49960"
  },
  {
    "text": "few additional niceties like tab completion and syntax highlighting and that sort of thing you're exploring your code printing out your structures and",
    "start": "49960",
    "end": "56520"
  },
  {
    "text": "whatnot it's just a little bit easier easier on the eyes and easier to read um but not related to IPython in any way",
    "start": "56520",
    "end": "61640"
  },
  {
    "text": "shape or form but it's the same thing as uh IPython to the shell and ipdb to pdb are pretty equivalent um easy install",
    "start": "61640",
    "end": "70479"
  },
  {
    "text": "we' also talked about easy install Easy install is a Python program that provides you with a command line tool to",
    "start": "70479",
    "end": "76280"
  },
  {
    "text": "install other python programs um and easy install is",
    "start": "76280",
    "end": "83960"
  },
  {
    "text": "hilariously hard to install you need to go download it extract it run it setup",
    "start": "83960",
    "end": "89119"
  },
  {
    "text": "or maybe your operating system packages it yourself which if you've got a nice operating system it does um or they",
    "start": "89119",
    "end": "95320"
  },
  {
    "text": "provide a executable installer for Windows once you have easy install what you have is a command",
    "start": "95320",
    "end": "102000"
  },
  {
    "text": "called easy install and it takes packages to install",
    "start": "102000",
    "end": "107119"
  },
  {
    "text": "so you need to know what you're looking for you can specify versions with an",
    "start": "107119",
    "end": "113840"
  },
  {
    "text": "equal sign so if I wanted to get a specific Jango version I could say Jango equals",
    "start": "113840",
    "end": "120759"
  },
  {
    "text": "uh",
    "start": "120759",
    "end": "123759"
  },
  {
    "text": "1.0 and it would find Jenga 1.0 for me um notice I'm trying to install Easy install right now and it gives me a",
    "start": "125799",
    "end": "131959"
  },
  {
    "text": "permissions error so the default thing easy install does is it installs to your sitewide um system packages and this",
    "start": "131959",
    "end": "138200"
  },
  {
    "text": "raises kind of an interesting question what if I want to have jeno 1.0 installed and also jeno 1.3",
    "start": "138200",
    "end": "144840"
  },
  {
    "text": "installed then when I do jeno import jeno which one do I get",
    "start": "144840",
    "end": "151840"
  },
  {
    "text": "I can't have more than one version of the same package installed at the same time they've got the same name they Clash so it would be nice not to be",
    "start": "152160",
    "end": "160040"
  },
  {
    "text": "installing um packages especially ones that I'm going to try out or especially ones that are just for one particular",
    "start": "160040",
    "end": "165239"
  },
  {
    "text": "script into my sitewide system packages Library which is what easy installed does by default we can get around this",
    "start": "165239",
    "end": "172720"
  },
  {
    "text": "with a tool called virtual inv it stands for virtual environment",
    "start": "172720",
    "end": "178360"
  },
  {
    "text": "and virtual inv is basic basically a bash script or a Windows batch script",
    "start": "178360",
    "end": "183680"
  },
  {
    "text": "depending on your OS that sets a bunch of environmental",
    "start": "183680",
    "end": "191200"
  },
  {
    "text": "variables and fakes python out so that python looks for and installs things to",
    "start": "191280",
    "end": "197920"
  },
  {
    "text": "someplace other than your system packages directory and you can use Virtual M it's",
    "start": "197920",
    "end": "205159"
  },
  {
    "text": "a Comm it's a command directly",
    "start": "205159",
    "end": "210360"
  },
  {
    "text": "and I'm going to do that now to create a virtual M and I'm going to call it",
    "start": "211480",
    "end": "216959"
  },
  {
    "text": "labs and you'll notice it says it put a new python executable in Labs SLB python",
    "start": "216959",
    "end": "224360"
  },
  {
    "text": "it installed setup tools setup tools is actually the package that contains easy",
    "start": "224360",
    "end": "229599"
  },
  {
    "text": "install and when I look at my current environment right now I can see I've got a directory called labs and I look in",
    "start": "229599",
    "end": "236360"
  },
  {
    "text": "labs and I can see I have a bin directory un include and a lib I can",
    "start": "236360",
    "end": "243439"
  },
  {
    "text": "activate my virtual inv from",
    "start": "243439",
    "end": "248400"
  },
  {
    "text": "here by saying Source Labs beenin activate don't pay too much attention to this because I'm going to tell you a way",
    "start": "249599",
    "end": "255079"
  },
  {
    "text": "easier way to do it in a second but you'll notice that it changed my command",
    "start": "255079",
    "end": "260120"
  },
  {
    "text": "prompt to say Labs it indicates that a particular virtual environment is installed and a minute ago when I tried",
    "start": "260440",
    "end": "266759"
  },
  {
    "text": "to install jeno it said oh you're not root so I'm not going to install it in your systemwide site",
    "start": "266759",
    "end": "272720"
  },
  {
    "text": "packages now when I do it easy install respects my virtual environment and it",
    "start": "283639",
    "end": "289199"
  },
  {
    "text": "installed for instance the Django admin script that you use in the bin folder of",
    "start": "289199",
    "end": "297160"
  },
  {
    "text": "labs it installed this egg which is the kind of zipped up",
    "start": "297160",
    "end": "302600"
  },
  {
    "text": "distribution of python files not in my Global site packages but in my labs site package and as long as I have this",
    "start": "302600",
    "end": "309160"
  },
  {
    "text": "virtual environment",
    "start": "309160",
    "end": "312000"
  },
  {
    "text": "open I can access Jango but once I turn it off",
    "start": "320080",
    "end": "327280"
  },
  {
    "text": "there is no Django installed in my system site packages and I can't import it and what that means is every virtual",
    "start": "333280",
    "end": "340479"
  },
  {
    "text": "inv is distinct and I can install a bunch of packages and some of them have bugs and they're different versions than the ones I want and I can",
    "start": "340479",
    "end": "349680"
  },
  {
    "text": "just nuke it and I didn't mess up my system I didn't install competing",
    "start": "350560",
    "end": "355840"
  },
  {
    "text": "packages in my system I didn't change anything at all about my system just now so that's really handy there's a helper",
    "start": "355840",
    "end": "363840"
  },
  {
    "text": "script that is virtual M wrapper this is a project of Doug Helman",
    "start": "364919",
    "end": "372599"
  },
  {
    "text": "of python module of the weak Fame and virtual inv wrapper simply",
    "start": "372599",
    "end": "379199"
  },
  {
    "text": "provides you a bunch of convenience functions around virtual inv so for",
    "start": "379199",
    "end": "384479"
  },
  {
    "text": "instance instead of saying virtual inv Labs here I'm going to say make Virtual inv Lab",
    "start": "384479",
    "end": "391360"
  },
  {
    "text": "it didn't put it here it puts it in a DOT directory in my um user folder which",
    "start": "393080",
    "end": "398240"
  },
  {
    "text": "I can I can change if I want to change um with a preferences file it gives me a utility command",
    "start": "398240",
    "end": "405199"
  },
  {
    "text": "called work on and when I work on I can see I've got uh several different virtual invs defined those aren't",
    "start": "405199",
    "end": "410919"
  },
  {
    "text": "directories in my local path those are virtual M I've made with virtual in M wrapper so I was using",
    "start": "410919",
    "end": "418120"
  },
  {
    "text": "duplicity which is a python written um encrypted backup program and I installed it in a virtual",
    "start": "418120",
    "end": "425319"
  },
  {
    "text": "M because I wasn't sure which whether I wanted the development version or the uh stable version same thing goes with rst",
    "start": "425319",
    "end": "432400"
  },
  {
    "text": "to PDF a bunch of tools for converting restructured text to various other",
    "start": "432400",
    "end": "438400"
  },
  {
    "text": "formats and I'll say lab and you notice it activated my virtual M for me I",
    "start": "438400",
    "end": "444720"
  },
  {
    "text": "didn't have to do the whole Source bin activate what everything and if I wanted to work on a different",
    "start": "444720",
    "end": "450440"
  },
  {
    "text": "one I could just switch and as usual I can",
    "start": "450440",
    "end": "455800"
  },
  {
    "text": "deactivate and again the benefits of virtual M are you don't have to be root you can install things in a um user",
    "start": "455800",
    "end": "463520"
  },
  {
    "text": "directory you don't mess up your sitewide python install which it is entirely possible to install packages",
    "start": "463520",
    "end": "469800"
  },
  {
    "text": "that then make every single instantiation of python bomb you don't want to do that um and it",
    "start": "469800",
    "end": "476120"
  },
  {
    "text": "just gives you a scratch playground so useful tool iuse that all the time um both for development and for",
    "start": "476120",
    "end": "483800"
  },
  {
    "text": "deployment um other tools I should",
    "start": "483879",
    "end": "488080"
  },
  {
    "text": "mention it is because it's basically just setting a bunch of environmental",
    "start": "489800",
    "end": "495960"
  },
  {
    "text": "variables so it's not actually you know using anything different it's just doing some some path mangling and you can",
    "start": "495960",
    "end": "502400"
  },
  {
    "text": "achieve a lot of the same um effect by like importing cop path and adding a specific path to cop path and manually",
    "start": "502400",
    "end": "509919"
  },
  {
    "text": "passing a-- prefix argument to easy install you know there's ways to do everything it does but it hides it all",
    "start": "509919",
    "end": "516080"
  },
  {
    "text": "inside of some bash rappers for you um and yeah it I I every client that I have",
    "start": "516080",
    "end": "523360"
  },
  {
    "text": "is um on production in Virtual M right now so including people I'm not in charge of production for it's a a well",
    "start": "523360",
    "end": "529600"
  },
  {
    "text": "established python",
    "start": "529600",
    "end": "532319"
  },
  {
    "text": "tool yeah so you missed a tiny bit virtual inv will make um will make a new",
    "start": "537440",
    "end": "543079"
  },
  {
    "text": "envir a python environment for you and then there's another program called virtual inv wrapper rer okay which is uh by Doug",
    "start": "543079",
    "end": "551360"
  },
  {
    "text": "Helman and it'll automatically create the um virtual M for you it kind of hides their location it doesn't put them",
    "start": "551360",
    "end": "557640"
  },
  {
    "text": "in the current directory and it gives you that whole menu thing where you just say like work on and with tab completion I can see",
    "start": "557640",
    "end": "564600"
  },
  {
    "text": "that I've got several defined and I can pick which one I",
    "start": "564600",
    "end": "569360"
  },
  {
    "text": "yep",
    "start": "579720",
    "end": "582720"
  },
  {
    "text": "yep pep8 dopy I wonder how I'm doing let's look",
    "start": "586200",
    "end": "591839"
  },
  {
    "text": "at some code um",
    "start": "591839",
    "end": "596040"
  },
  {
    "text": "here's classmates number nine and I don't",
    "start": "610399",
    "end": "615320"
  },
  {
    "text": "remember exactly where I was in this",
    "start": "616519",
    "end": "621800"
  },
  {
    "text": "but I'm reading from a CSV file up here at the top not inside of a function or anything I've got functions of save to",
    "start": "621800",
    "end": "628519"
  },
  {
    "text": "files display a list print a record get a record create a record add a record",
    "start": "628519",
    "end": "633800"
  },
  {
    "text": "everybody else has code like this right filter by a roll I'm storing my menu in a dict with",
    "start": "633800",
    "end": "642079"
  },
  {
    "text": "tupal of functions and descriptions and I have a endless loop",
    "start": "642079",
    "end": "647480"
  },
  {
    "text": "in main while that code should look really familiar to everybody",
    "start": "647480",
    "end": "653560"
  },
  {
    "text": "yeah that's not too bad so I run pep8 dopy on my file my python file you can",
    "start": "659399",
    "end": "665440"
  },
  {
    "text": "install pep8 uh let's see if this is",
    "start": "665440",
    "end": "670720"
  },
  {
    "text": "true notice I just tried to work on pep eight there isn't one it tells me what to",
    "start": "674120",
    "end": "680600"
  },
  {
    "text": "do automatically activates it when I created it this is the virtual M wrapper Doug helman's script uh can I easy",
    "start": "682399",
    "end": "688920"
  },
  {
    "text": "install pep",
    "start": "688920",
    "end": "691639"
  },
  {
    "text": "eight yes I can so if you have easy install installed you can get pep eight",
    "start": "697639",
    "end": "704839"
  },
  {
    "text": "trivially I think I actually downloaded the development version of pep8 and have it in my user bin directory but whatever",
    "start": "704839",
    "end": "711320"
  },
  {
    "text": "let's look at that listing again classmates 9py it only has a few comments on line 15",
    "start": "711320",
    "end": "719720"
  },
  {
    "text": "uh it specifies the warning or error number for each one and if there are",
    "start": "719720",
    "end": "725440"
  },
  {
    "text": "some places where you disagree with pep8 or the coding standard of the company you're working for is different than pep8 for instance pep8 expects you to",
    "start": "725440",
    "end": "732000"
  },
  {
    "text": "have no lines longer than 80 characters and maybe the company work for says hey everybody has big monitors you can go to",
    "start": "732000",
    "end": "737120"
  },
  {
    "text": "100 characters um you can disable specific errors or warnings in a config file or with command line options that's",
    "start": "737120",
    "end": "744480"
  },
  {
    "text": "what the uh identifier is for it tells me I've have trailing whites space on line 15",
    "start": "744480",
    "end": "751160"
  },
  {
    "text": "and it's true I'm going forwards there and you don't see the characters because they're spaces but you'll know I can go",
    "start": "753399",
    "end": "759800"
  },
  {
    "text": "through four spaces so I'm going to delete that line and hit enter resave my",
    "start": "759800",
    "end": "765000"
  },
  {
    "text": "file and run it again okay that one went away now it's complaining about line 16",
    "start": "765000",
    "end": "772839"
  },
  {
    "text": "expected two blank lines found one",
    "start": "772839",
    "end": "777480"
  },
  {
    "text": "I'm on line",
    "start": "779360",
    "end": "782079"
  },
  {
    "text": "16 um and the pep8 standard by the way is you can only put you only need to put",
    "start": "785399",
    "end": "790639"
  },
  {
    "text": "a blank line between functions it's kind of hard to read if you cram your functions together like that and that",
    "start": "790639",
    "end": "797519"
  },
  {
    "text": "clear sense of Separation so you need a blank line between functions",
    "start": "797519",
    "end": "802600"
  },
  {
    "text": "and two blank lines between classes and I think it's two blank lines here is two",
    "start": "802600",
    "end": "808399"
  },
  {
    "text": "blank lines between procedural code in the start of my functions and I probably ought to put all this in a function anyways but I was in the middle of",
    "start": "808399",
    "end": "814279"
  },
  {
    "text": "things it's going to complain about lots of trailing whites space so I'm going to delete all my trailing white",
    "start": "814279",
    "end": "822639"
  },
  {
    "text": "space and see what it says um 23 another two blank lines found",
    "start": "822639",
    "end": "831759"
  },
  {
    "text": "one H maybe it does want two blank lines between every function I was thinking it was just one between regular functions",
    "start": "831759",
    "end": "839800"
  },
  {
    "text": "H you know what it might be one between methods in a class um and",
    "start": "839800",
    "end": "847160"
  },
  {
    "text": "also line 62 a different kind of error white space before",
    "start": "847600",
    "end": "854279"
  },
  {
    "text": "comma oh I've just been adding some spaces so the line count is off slightly but look at",
    "start": "860480",
    "end": "866959"
  },
  {
    "text": "this python style is commas in a list are buted right up",
    "start": "866959",
    "end": "872519"
  },
  {
    "text": "against the object that they're after but then there's a space before the next one just like English syntax so if I",
    "start": "872519",
    "end": "879680"
  },
  {
    "text": "take out all the spaces it ought to complain about that yeah I'm missing white space after comma so it's",
    "start": "879680",
    "end": "886079"
  },
  {
    "text": "being totally anal but it will verify that your code is all formatted exactly",
    "start": "886079",
    "end": "891519"
  },
  {
    "text": "the way it's recommended by uh pep eight so useful tool um just a style checker",
    "start": "891519",
    "end": "899160"
  },
  {
    "text": "and I don't use it that much there's also pilent and pilent is not just a um style",
    "start": "899160",
    "end": "907800"
  },
  {
    "text": "Checker it's kind of a quality of code",
    "start": "907800",
    "end": "913440"
  },
  {
    "text": "evaluator it's also way more verbose",
    "start": "913440",
    "end": "918600"
  },
  {
    "text": "um so for instance it says invalid name classmates",
    "start": "921279",
    "end": "929839"
  },
  {
    "text": "it's complaining about my file name and its opinion",
    "start": "932519",
    "end": "938600"
  },
  {
    "text": "is modules and classes are supposed to be named slightly different than regular",
    "start": "938600",
    "end": "944360"
  },
  {
    "text": "functions and expressions I disagree and I believe you can suppress specific um specific warnings with",
    "start": "944360",
    "end": "951519"
  },
  {
    "text": "pilent but I forget how to now because I usually just do it in my config file it doesn't have much else to say",
    "start": "951519",
    "end": "958000"
  },
  {
    "text": "pilot doesn't have much else to say say here it runs a duplicated line Checker which will detect if you've been like copying and pasting the same function",
    "start": "958000",
    "end": "964279"
  },
  {
    "text": "repeatedly throughout your code and is usually a sign of badly written code so that's kind of useful it also catches",
    "start": "964279",
    "end": "970560"
  },
  {
    "text": "things like General",
    "start": "970560",
    "end": "975839"
  },
  {
    "text": "quality um I have I don't have doc strings in",
    "start": "975839",
    "end": "982800"
  },
  {
    "text": "everything I don't have any comments at all not many empty lines those just kind",
    "start": "982800",
    "end": "988079"
  },
  {
    "text": "of raw metrics and also basically tells me what I have I've got a module there no classes no",
    "start": "988079",
    "end": "995480"
  },
  {
    "text": "methods interestingly it says that there are no functions I'm not sure why that's messages by category um Pyon",
    "start": "995480",
    "end": "1002839"
  },
  {
    "text": "is kind of useful written or is kind of more useful run on large code bases and",
    "start": "1002839",
    "end": "1008240"
  },
  {
    "text": "sometimes we'll detect duplications in code which is usually a you know there used to be this function and then we renamed it and wrote a new one did never",
    "start": "1008240",
    "end": "1013319"
  },
  {
    "text": "take the old one out which is usually a problem of some kind so I do run um pilent a little more frequently then I",
    "start": "1013319",
    "end": "1019079"
  },
  {
    "text": "run pep8 because my code is mostly pep eight compliant anyways",
    "start": "1019079",
    "end": "1025120"
  },
  {
    "text": "um that's it for tools uh and the important ones the important ones are easy install in Virtual M and if you",
    "start": "1025120",
    "end": "1031798"
  },
  {
    "text": "have a sane operating system it may offer to install python packages for you for instance I'm running um Jen I'm",
    "start": "1031799",
    "end": "1038160"
  },
  {
    "text": "running Ubuntu here so I could probably see if my um package",
    "start": "1038160",
    "end": "1046360"
  },
  {
    "text": "manager has D Jango package for Ubuntu which it does in fact and I",
    "start": "1046839",
    "end": "1053799"
  },
  {
    "text": "would strongly recommend against using operating system packages for any python package you're going to do development",
    "start": "1053799",
    "end": "1059880"
  },
  {
    "text": "work with because it will probably put it in a non-standard place it probably is an older version",
    "start": "1059880",
    "end": "1067520"
  },
  {
    "text": "like it's really hard for operating system uh that has a like Ubuntu that",
    "start": "1067520",
    "end": "1073520"
  },
  {
    "text": "has a release schedule I'm on a long-term stable version at the moment I believe of three years to have like the",
    "start": "1073520",
    "end": "1079039"
  },
  {
    "text": "latest and greatest in software and you probably want the latest and greatest version of jenko if you're going to develop against it so don't use the",
    "start": "1079039",
    "end": "1084120"
  },
  {
    "text": "built-in packages for the most part get easy install use Easy install and don't install packages systemwide unless you",
    "start": "1084120",
    "end": "1090039"
  },
  {
    "text": "know for sure that every program you ever write is going to want to use that package or alternatively the",
    "start": "1090039",
    "end": "1095240"
  },
  {
    "text": "installation process is really really painful so my one exception to using easy install is python Imaging Library",
    "start": "1095240",
    "end": "1101520"
  },
  {
    "text": "which is a graphical manipulation program you can use to resize images among hundreds of other things and it",
    "start": "1101520",
    "end": "1107799"
  },
  {
    "text": "involves a compilation step that takes a while so I install that systemwide and then I install everything",
    "start": "1107799",
    "end": "1113559"
  },
  {
    "text": "else in Virtual M when I'm working on things oh and I and also the postgress DAT database driver I install systemwide",
    "start": "1113559",
    "end": "1120200"
  },
  {
    "text": "again it is a complicated install I'd just like to do it once but especially anything it's pure",
    "start": "1120200",
    "end": "1126360"
  },
  {
    "text": "python code you might as well just download it and put it in a pack in a virtual",
    "start": "1126360",
    "end": "1131559"
  },
  {
    "text": "inv no so you don't have to worry about this on Windows but Unix and Mac have a",
    "start": "1135360",
    "end": "1142559"
  },
  {
    "text": "built-in um listing of programs that you can install for your operating system",
    "start": "1142559",
    "end": "1147760"
  },
  {
    "text": "automatically they'll go and download and install them so Ubuntu that I'm using has a command apt get that will if",
    "start": "1147760",
    "end": "1155159"
  },
  {
    "text": "I say app get and a program name it'll automatically go download it it's been packaged for Ubuntu I'm pretty much",
    "start": "1155159",
    "end": "1161080"
  },
  {
    "text": "guaranteed that it'll work appropriately I don't have to go download like an executable installer or anything and",
    "start": "1161080",
    "end": "1166200"
  },
  {
    "text": "that's a great feature I mean if I want a new text editor I just just install it from the command line but don't use that",
    "start": "1166200",
    "end": "1172840"
  },
  {
    "text": "feature that great feature don't use that for python libraries and in the case of Windows you don't have to worry",
    "start": "1172840",
    "end": "1178159"
  },
  {
    "text": "about it anyways because Windows doesn't have that great feature built in I do use UB so if you use Ubuntu in general",
    "start": "1178159",
    "end": "1184679"
  },
  {
    "text": "don't use ubuntu's so Ubuntu has a",
    "start": "1184679",
    "end": "1190880"
  },
  {
    "text": "um not no I'm talking about your operating",
    "start": "1191520",
    "end": "1197320"
  },
  {
    "text": "system yep so you might have use like synaptic on",
    "start": "1197320",
    "end": "1202360"
  },
  {
    "text": "Ubuntu yes and synaptic it's great for installing programs but don't use it for",
    "start": "1202360",
    "end": "1208480"
  },
  {
    "text": "installing python",
    "start": "1208480",
    "end": "1211840"
  },
  {
    "text": "modules and last advice is everybody ought to be running Linux and I guess you could fall back to Mac if you really",
    "start": "1221720",
    "end": "1227120"
  },
  {
    "text": "had to",
    "start": "1227120",
    "end": "1230240"
  },
  {
    "text": "so enough about tools um and those aren't all the tools I use obviously um big fan of emac and there's",
    "start": "1238880",
    "end": "1245640"
  },
  {
    "text": "a bunch of emac integration stuff that I could talk about for forever but those are the python specific ones that are crossplatform you can use them no matter",
    "start": "1245640",
    "end": "1251760"
  },
  {
    "text": "what your editor operating system or area of uh area of work is",
    "start": "1251760",
    "end": "1259158"
  },
  {
    "text": "let's do a optar parse sample and if you want to add some options um either to a",
    "start": "1260080",
    "end": "1266360"
  },
  {
    "text": "toy script just to see how it works or to your classmates file you can do that",
    "start": "1266360",
    "end": "1273240"
  },
  {
    "text": "um and we'll see how long this takes and I'll circulate again and see how people are doing with their labs and is anybody",
    "start": "1273240",
    "end": "1281000"
  },
  {
    "text": "planning on leaving early today everybody's going to be here till at least like 4 yeah okay cool I'll",
    "start": "1281000",
    "end": "1288360"
  },
  {
    "text": "put up the uh I'll put up the survey thing here in a little bit but you don't need to take that till you're getting",
    "start": "1288360",
    "end": "1293880"
  },
  {
    "text": "close to leaving but I do want to make sure I don't miss anybody that",
    "start": "1293880",
    "end": "1300679"
  },
  {
    "text": "so we've already demonstrated one method of seeing your command line and by that",
    "start": "1300679",
    "end": "1306279"
  },
  {
    "text": "I mean how your program was invoked from the command line with python",
    "start": "1306279",
    "end": "1312919"
  },
  {
    "text": "so if you import CIS and you print cis.org V you get a list of",
    "start": "1342159",
    "end": "1349159"
  },
  {
    "text": "all the command line options to your program and as it happens the program you're actually writing is Python and my",
    "start": "1349159",
    "end": "1354520"
  },
  {
    "text": "python script is the first option if you do things like",
    "start": "1354520",
    "end": "1360480"
  },
  {
    "text": "this let's just do those two cy. arv does show them to",
    "start": "1375600",
    "end": "1383200"
  },
  {
    "text": "you now I've got three command line options on my program",
    "start": "1383200",
    "end": "1388840"
  },
  {
    "text": "the name of my script a string and another string it doesn't",
    "start": "1388840",
    "end": "1396919"
  },
  {
    "text": "actually parse them out for you it's extremely common um for console users to",
    "start": "1396919",
    "end": "1402400"
  },
  {
    "text": "use programs that have tons of flags and arguments to do things we've already been doing that with python a little bit",
    "start": "1402400",
    "end": "1410440"
  },
  {
    "text": "we've briefly discussed the dhm switch and you can say Python dasm",
    "start": "1413640",
    "end": "1421320"
  },
  {
    "text": "pdb and it'll start pdb when it starts running my script so that's a command line flag to",
    "start": "1421320",
    "end": "1429879"
  },
  {
    "text": "python fut file you",
    "start": "1432240",
    "end": "1439000"
  },
  {
    "text": "right yes what is the backup um so that so obviously nothing's",
    "start": "1439000",
    "end": "1444799"
  },
  {
    "text": "happening right now but I'm just imagining what options you might want to add to your classmates and you might",
    "start": "1444799",
    "end": "1450200"
  },
  {
    "text": "want to pass the name of the file that you're going to read and write data from as a option you might want to use backup",
    "start": "1450200",
    "end": "1456559"
  },
  {
    "text": "to say when you go to write save a copy of it first as you know fil name. f1.",
    "start": "1456559",
    "end": "1462880"
  },
  {
    "text": "CSV before you write to it I'm just I'm just guessing at what sort of options we might want to add here um and",
    "start": "1462880",
    "end": "1469720"
  },
  {
    "text": "demonstrating that the cy. RGV doesn't do anything smart at all it just breaks up by",
    "start": "1469720",
    "end": "1477320"
  },
  {
    "text": "spaces the arguments that it's passed and gives you the ability to see them and if you want to intelligently",
    "start": "1477320",
    "end": "1484760"
  },
  {
    "text": "test whether or not a file name was passed to your script and you're just using cy. RGV you'd have to look and see",
    "start": "1484760",
    "end": "1490840"
  },
  {
    "text": "if there's a-- file name equals in any of the strings in the list you know",
    "start": "1490840",
    "end": "1496200"
  },
  {
    "text": "parse it out yourself and that would be really painful and annoying I was gonna say that python also has",
    "start": "1496200",
    "end": "1502919"
  },
  {
    "text": "a-v command that dumps a bunch of debugging and is occasionally useful when you're",
    "start": "1502919",
    "end": "1508279"
  },
  {
    "text": "curious what library it's loading automatically or what libraries are being loaded and it tells you all that",
    "start": "1508279",
    "end": "1514000"
  },
  {
    "text": "as well as this version so option parse op",
    "start": "1514000",
    "end": "1522398"
  },
  {
    "text": "parse is the answer for parsing your arguments",
    "start": "1523080",
    "end": "1529399"
  },
  {
    "text": "and I should note that op parse is deprecated as of Python 2.7 it's",
    "start": "1531200",
    "end": "1536960"
  },
  {
    "text": "included it's not going away you can feel free to write against it and I'm going to tell you about it um all",
    "start": "1536960",
    "end": "1543399"
  },
  {
    "text": "my all my deployed python code is on 2.6 or",
    "start": "1543399",
    "end": "1548480"
  },
  {
    "text": "2.5 have some stuff that's on 2.5 because that's still standard on um Centos so I haven't switched to argar",
    "start": "1548480",
    "end": "1556399"
  },
  {
    "text": "and argar is similar to optar um basically they just wanted to break backwards compatibility um and wanted to",
    "start": "1556399",
    "end": "1563919"
  },
  {
    "text": "leave opars the way it is so op pars won't go away and I'm going to show you how to use op pars right now and the way",
    "start": "1563919",
    "end": "1569520"
  },
  {
    "text": "you use opt parse basically is got to import it you create a parser you add",
    "start": "1569520",
    "end": "1574640"
  },
  {
    "text": "options to your parser and then you give uh you ask your parser to look at the command line and",
    "start": "1574640",
    "end": "1580840"
  },
  {
    "text": "give you back all the arguments and all the options that were passed and for",
    "start": "1580840",
    "end": "1586120"
  },
  {
    "text": "free you get some nice functionality so let's say",
    "start": "1586120",
    "end": "1592080"
  },
  {
    "text": "this um and it's worth noting module docs and a simple usage example is",
    "start": "1615120",
    "end": "1621799"
  },
  {
    "text": "available right from help you don't need to go any place else to figure out how to use",
    "start": "1621799",
    "end": "1627360"
  },
  {
    "text": "it and all we're going to do is make ourselves an opt parser ask it to parse",
    "start": "1635880",
    "end": "1643840"
  },
  {
    "text": "the args it returns",
    "start": "1643840",
    "end": "1648559"
  },
  {
    "text": "actually let's catch it it returns a tupal and we're going to print the",
    "start": "1650919",
    "end": "1658880"
  },
  {
    "text": "Tuple so we haven't added any intelligence",
    "start": "1660320",
    "end": "1665960"
  },
  {
    "text": "whatsoever notice the default thing is the tupal is a",
    "start": "1675039",
    "end": "1680960"
  },
  {
    "text": "dictionary and a list despite the fact that we have one",
    "start": "1680960",
    "end": "1686760"
  },
  {
    "text": "argument as far as sis. Arvy is concerned we have no arguments as far as",
    "start": "1686760",
    "end": "1692559"
  },
  {
    "text": "option parer is concerned it figures you don't need to know the name of your script",
    "start": "1692559",
    "end": "1699360"
  },
  {
    "text": "probably and the contents of the Tuple are enough to let us know that we're going to get back options which are",
    "start": "1699799",
    "end": "1707039"
  },
  {
    "text": "keyword named and args which are positionally",
    "start": "1707039",
    "end": "1713159"
  },
  {
    "text": "named if I now try to pass some options notice the first line is my cy.",
    "start": "1723080",
    "end": "1729039"
  },
  {
    "text": "argv being printed and I now get a helpful usage",
    "start": "1729039",
    "end": "1735480"
  },
  {
    "text": "string well not so helpful yet usage toy. options and then error no such",
    "start": "1735480",
    "end": "1742679"
  },
  {
    "text": "option D- file name and what op pars is basically doing is we specify what",
    "start": "1742679",
    "end": "1748760"
  },
  {
    "text": "options it is that we accept the ones that we specify it will search out and parse for us and anything else it will",
    "start": "1748760",
    "end": "1754960"
  },
  {
    "text": "consider to be an error so let's specify some",
    "start": "1754960",
    "end": "1762760"
  },
  {
    "text": "options and I should note almost anything else",
    "start": "1764320",
    "end": "1770039"
  },
  {
    "text": "if you do dashh or dash dash",
    "start": "1773159",
    "end": "1779480"
  },
  {
    "text": "help if your program is using option parure it will print out a help message which you can customize obviously um so",
    "start": "1779480",
    "end": "1787480"
  },
  {
    "text": "you get one option for free and DH and d-el are standards on the uh console",
    "start": "1787480",
    "end": "1793279"
  },
  {
    "text": "command line and most of your Linux commands except probably the the really",
    "start": "1793279",
    "end": "1798399"
  },
  {
    "text": "old ones wonder if easy install has a-h yes",
    "start": "1798399",
    "end": "1803480"
  },
  {
    "text": "it does I say easy install DH or easy install dasel and it shows me all the flags that it accepts so let's add some",
    "start": "1803480",
    "end": "1810240"
  },
  {
    "text": "options to our parser we add options just by specifying",
    "start": "1810240",
    "end": "1816279"
  },
  {
    "text": "how they can be passed and I'm going to specify two ways for all of them which will give me a nice fluent command Lane",
    "start": "1816279",
    "end": "1821559"
  },
  {
    "text": "interface",
    "start": "1821559",
    "end": "1824559"
  },
  {
    "text": "let's just do that",
    "start": "1832640",
    "end": "1835399"
  },
  {
    "text": "much and our two went away so I'll print it out okay now when I say toy.",
    "start": "1847559",
    "end": "1854000"
  },
  {
    "text": "p-f toy. CSV the first line is is again",
    "start": "1854000",
    "end": "1859679"
  },
  {
    "text": "CIS RV is separating everything by spaces and it sees the space between DF",
    "start": "1859679",
    "end": "1865360"
  },
  {
    "text": "and toy. CSV so if you were parsing the cy. arv and you wanted to accept just a",
    "start": "1865360",
    "end": "1872799"
  },
  {
    "text": "single Dash flag you'd have to look for successive arguments your parsing job would get to be a little bit",
    "start": "1872799",
    "end": "1878360"
  },
  {
    "text": "complicated notice I didn't say file on the command line but option parser knows",
    "start": "1878360",
    "end": "1883639"
  },
  {
    "text": "that DF and-- file indicate the same option",
    "start": "1883639",
    "end": "1889080"
  },
  {
    "text": "handles the space and goes ahead and sets a keyword in my dict of options",
    "start": "1889120",
    "end": "1897278"
  },
  {
    "text": "so that simple if an option exists it's the",
    "start": "1920120",
    "end": "1927080"
  },
  {
    "text": "options um represents as a dictionary but I can access it as objects so just do notation",
    "start": "1927080",
    "end": "1934559"
  },
  {
    "text": "if options. file the add",
    "start": "1934559",
    "end": "1940279"
  },
  {
    "text": "option function takes a bunch more things including I can coer it to a data type so like if I want to get integers",
    "start": "1940279",
    "end": "1946600"
  },
  {
    "text": "ped say I want to say um Quality because I'm writing an encoding script I'm going",
    "start": "1946600",
    "end": "1953080"
  },
  {
    "text": "to have to convert that to a number I can specify in my option that it should be a number and not only will it convert it to an INT but it'll also complain",
    "start": "1953080",
    "end": "1959320"
  },
  {
    "text": "nicely if the user passes a non- integer version it's also smart enough to add",
    "start": "1959320",
    "end": "1965240"
  },
  {
    "text": "the options I've defined to the",
    "start": "1965240",
    "end": "1970440"
  },
  {
    "text": "usage I say do uh doel and now and just because we've",
    "start": "1970440",
    "end": "1979559"
  },
  {
    "text": "seen that enough I'm going to take out the arv and now it says I still haven't",
    "start": "1979559",
    "end": "1984679"
  },
  {
    "text": "customized my usage string and I still haven't customized my help message at",
    "start": "1984679",
    "end": "1990159"
  },
  {
    "text": "all but it does note that I take option f file or-- f equals",
    "start": "1990159",
    "end": "1996639"
  },
  {
    "text": "file and I should demonstrate that I can do either style of option",
    "start": "1996639",
    "end": "2004278"
  },
  {
    "text": "handling and the result is identical so command line programs frequently take",
    "start": "2004480",
    "end": "2010320"
  },
  {
    "text": "either a single character in a dash which represents a flag and very frequently doesn't have a value but",
    "start": "2010320",
    "end": "2017399"
  },
  {
    "text": "confusingly sometimes does or more um understandably I think more widely",
    "start": "2017399",
    "end": "2022919"
  },
  {
    "text": "approved of is two dashes and name equals value",
    "start": "2022919",
    "end": "2028840"
  },
  {
    "text": "that's being defined by me so the options that you want to accept can be anything that you want the only one that",
    "start": "2039000",
    "end": "2044440"
  },
  {
    "text": "option parser forces on you is DH or d-el and you can't Define a d-el",
    "start": "2044440",
    "end": "2051679"
  },
  {
    "text": "option yep so this Command right here I said I'm adding an option and it is-f or",
    "start": "2056000",
    "end": "2062638"
  },
  {
    "text": "D- file and it specifies I can accept DF and it gets the",
    "start": "2062639",
    "end": "2068878"
  },
  {
    "text": "name from the d-f if I didn't specify the d-f",
    "start": "2068879",
    "end": "2074320"
  },
  {
    "text": "part I think this is an error",
    "start": "2074320",
    "end": "2081240"
  },
  {
    "text": "yeah there we go um notice I didn't specify the dash",
    "start": "2087440",
    "end": "2092839"
  },
  {
    "text": "DF and in this case I get a runtime error I'm getting my options file that's",
    "start": "2092839",
    "end": "2100799"
  },
  {
    "text": "all there we go in which case the name of my option is just DF if I provide a long name",
    "start": "2111839",
    "end": "2118200"
  },
  {
    "text": "it'll use that by default and it'll also use that in the help if I just provide a short",
    "start": "2118200",
    "end": "2123640"
  },
  {
    "text": "name it doesn't really know what to call it it's just capital F which isn't very helpful or",
    "start": "2123640",
    "end": "2129079"
  },
  {
    "text": "informative so it's always nice to provide a name for it you can optionally say d",
    "start": "2129079",
    "end": "2135320"
  },
  {
    "text": "equals file which will give it a",
    "start": "2135320",
    "end": "2141760"
  },
  {
    "text": "name you can see now it says- f equals file instead of just capital",
    "start": "2141760",
    "end": "2147040"
  },
  {
    "text": "F but I never bother with the destination because I",
    "start": "2147040",
    "end": "2152319"
  },
  {
    "text": "always allow either short or long opt passing Style",
    "start": "2153119",
    "end": "2159640"
  },
  {
    "text": "you can also um there's just a couple of other things that might be useful you can define a",
    "start": "2160200",
    "end": "2166119"
  },
  {
    "text": "default so you can even skip the whole if there was a file then you know that there will always be a file passed in",
    "start": "2170839",
    "end": "2177319"
  },
  {
    "text": "either the user will pass one in with a flag or you'll optionally get the default you can also um we talked about",
    "start": "2177319",
    "end": "2183040"
  },
  {
    "text": "storing types you can also Define the action parameter",
    "start": "2183040",
    "end": "2189560"
  },
  {
    "text": "and action by default is store which means create an option of",
    "start": "2189680",
    "end": "2197079"
  },
  {
    "text": "name long option type or destination and put whatever the user typed in there converting it if I specify to type but",
    "start": "2197079",
    "end": "2204880"
  },
  {
    "text": "action can also be things like store true in which case um let's",
    "start": "2204880",
    "end": "2214720"
  },
  {
    "text": "add a store true option here",
    "start": "2214720",
    "end": "2218800"
  },
  {
    "text": "now notice again I have an additional line in my help dasb or D-",
    "start": "2233079",
    "end": "2239160"
  },
  {
    "text": "backup no equal",
    "start": "2239160",
    "end": "2242799"
  },
  {
    "text": "sign because I specified store true what store true true says is the user isn't going to pass a value he's just going to",
    "start": "2244240",
    "end": "2250960"
  },
  {
    "text": "pass the flag so no value but backup equals",
    "start": "2250960",
    "end": "2257240"
  },
  {
    "text": "true no value but backup equals true and this is",
    "start": "2257839",
    "end": "2263000"
  },
  {
    "text": "in fact would be how I'd want to use this I might say file equals toy. CSV",
    "start": "2263000",
    "end": "2269280"
  },
  {
    "text": "and backup and I don't want to say backup equals true I just want to say backup or more likely once I'm used to using this",
    "start": "2269280",
    "end": "2275359"
  },
  {
    "text": "program I'd say something like - F toy DB sorry for the Highlight",
    "start": "2275359",
    "end": "2283319"
  },
  {
    "text": "there and again just from this much- F toy. CSV DB it can say that I do want to",
    "start": "2283319",
    "end": "2289440"
  },
  {
    "text": "make backups and that the file option was passed in is toy. CSV",
    "start": "2289440",
    "end": "2296200"
  },
  {
    "text": "and arguments are positional so anything after your Flags without dashes are",
    "start": "2298800",
    "end": "2305560"
  },
  {
    "text": "positional arguments and if the file option was mandatory like we didn't have any sort of",
    "start": "2305560",
    "end": "2313400"
  },
  {
    "text": "default then I probably wouldn't make the file be an argument and I'd probably make it be I wouldn't make it be an option I'd make it be an argument um",
    "start": "2321160",
    "end": "2328680"
  },
  {
    "text": "option parer does not I don't think let you define your arguments only Define",
    "start": "2328680",
    "end": "2334000"
  },
  {
    "text": "your options but of course",
    "start": "2334000",
    "end": "2339160"
  },
  {
    "text": "if I could type I could fix",
    "start": "2343480",
    "end": "2347000"
  },
  {
    "text": "that and my program would complain if I didn't pass it a file name as an argument",
    "start": "2361920",
    "end": "2369359"
  },
  {
    "text": "okay super simple I've only added to my",
    "start": "2370119",
    "end": "2374200"
  },
  {
    "text": "program four lines of code and then to handle my options I",
    "start": "2376400",
    "end": "2381839"
  },
  {
    "text": "simply say do notation it's an",
    "start": "2381839",
    "end": "2388920"
  },
  {
    "text": "object and the only other thing I should show",
    "start": "2390760",
    "end": "2395440"
  },
  {
    "text": "you is that you can customize the usage",
    "start": "2395800",
    "end": "2400280"
  },
  {
    "text": "string and it has kind of a funky format",
    "start": "2408760",
    "end": "2413920"
  },
  {
    "text": "it's not even using my",
    "start": "2435520",
    "end": "2438880"
  },
  {
    "text": "usage there it is I didn't like my format",
    "start": "2454880",
    "end": "2459240"
  },
  {
    "text": "for oh and that's what it is it does provide the usage argument automatically",
    "start": "2460440",
    "end": "2467040"
  },
  {
    "text": "nowadays",
    "start": "2467040",
    "end": "2470040"
  },
  {
    "text": "okay so that's slightly more user friendly as I customize the usage line to say this is how you're supposed to",
    "start": "2488760",
    "end": "2495680"
  },
  {
    "text": "call the",
    "start": "2495680",
    "end": "2498160"
  },
  {
    "text": "program so it's kind of counterintuitive to say you can make userfriendly command",
    "start": "2507920",
    "end": "2513119"
  },
  {
    "text": "line programs because hey it's still a console but you can make somewhat user friendly command line programs they",
    "start": "2513119",
    "end": "2518599"
  },
  {
    "text": "describe how to use themselves they show a listing of all their options that you didn't have to write it's generated automatically for you they make sure",
    "start": "2518599",
    "end": "2524839"
  },
  {
    "text": "that what the user is passing are legitimately defined options and arguments and make it easy for you to access those values so if you'd like to",
    "start": "2524839",
    "end": "2530680"
  },
  {
    "text": "work on option parser you could go ahead and add an OP parse front end to your classmates or feel free to just work in",
    "start": "2530680",
    "end": "2536599"
  },
  {
    "text": "another file and play with it um but hey the file makes sense and you might also try a backup flag which when you write",
    "start": "2536599",
    "end": "2544440"
  },
  {
    "text": "would make a backup copy of your CSV file before you right over top of it and I'm just going",
    "start": "2544440",
    "end": "2550520"
  },
  {
    "text": "to circulate again and see where people are at in their labs",
    "start": "2550520",
    "end": "2556000"
  }
]