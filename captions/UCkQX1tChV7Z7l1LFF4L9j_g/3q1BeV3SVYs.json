[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "hello listeners today's episode of the info cue podcast is the api showdown recorded during qcon plus in november i",
    "start": "880",
    "end": "7759"
  },
  {
    "text": "was the moderator of the discussion and my goal was to understand some of the high level pros and cons of three popular technologies for implementing",
    "start": "7759",
    "end": "14240"
  },
  {
    "text": "apis if like me you've heard about graphql or grpc and wondered why you might use them instead of a restful api",
    "start": "14240",
    "end": "21279"
  },
  {
    "text": "they think you'll really enjoy listening to this discussion this panel is also a great example of the content you can",
    "start": "21279",
    "end": "26320"
  },
  {
    "text": "expect from qcon which is why i'm excited to tell you that we will be back in person with q con london this april",
    "start": "26320",
    "end": "32719"
  },
  {
    "text": "4th through the 6th and online with qcon plus between may 10th and the 20th these are both great opportunities to join the",
    "start": "32719",
    "end": "39200"
  },
  {
    "text": "world's most innovative software engineers from across many domains as they share their real world implementations of emerging trends and",
    "start": "39200",
    "end": "45760"
  },
  {
    "text": "practices you can learn more about both events at qconferences.com we hope to see you there and now enjoy",
    "start": "45760",
    "end": "51920"
  },
  {
    "text": "the api showdown",
    "start": "51920",
    "end": "54878"
  },
  {
    "start": "53000",
    "end": "174000"
  },
  {
    "text": "hello and welcome to the api showdown today i'm joined by three panelists each shows me a representative of one",
    "start": "57280",
    "end": "63840"
  },
  {
    "text": "particular api technology more or less now any good architect knows the only",
    "start": "63840",
    "end": "68880"
  },
  {
    "text": "time you should ever use always or never is to say we will never deal in absolute so i don't want to paint any of the",
    "start": "68880",
    "end": "74960"
  },
  {
    "text": "panelists into a corner as only an expert on one topic it's just a helpful way to create a discussion with diverse",
    "start": "74960",
    "end": "80960"
  },
  {
    "text": "opinions because we really want to understand what are the trade-offs you need to consider when evaluating your options now that i've said i'm not going",
    "start": "80960",
    "end": "87119"
  },
  {
    "text": "to paint them into corner i'm going to tell you which panelist is in which corner so representing grpc we have alex",
    "start": "87119",
    "end": "93200"
  },
  {
    "text": "borosoth alex is currently an engineer at netflix and was previously at google who gave us the g in grpc hello alex",
    "start": "93200",
    "end": "101040"
  },
  {
    "text": "next while garrett is part of the team building twitter's large-scale graphql api twitter picked her up after she did",
    "start": "101040",
    "end": "108079"
  },
  {
    "text": "an amazing job implementing graphql at conde nast where surprisingly they did not put the gq in graphql hello me",
    "start": "108079",
    "end": "115840"
  },
  {
    "text": "and i hope they're both ready to meet matt mclarty who's certainly not resting in the third corner matt is a global",
    "start": "115840",
    "end": "121040"
  },
  {
    "text": "field cto for mulesoft co-author of two o'reilly books on microservice apis and architecture and when he's not behind a",
    "start": "121040",
    "end": "127280"
  },
  {
    "text": "microphone here at qcon he's behind a microphone as co-host of the api's unplugged podcast welcome matt so i want",
    "start": "127280",
    "end": "133920"
  },
  {
    "text": "to start off brief origin stories now apis have existed for as long as we've needed two systems to be able to talk to",
    "start": "133920",
    "end": "140560"
  },
  {
    "text": "each other but for various reasons this has led to the invention of countless protocols patterns and paradigms for",
    "start": "140560",
    "end": "146800"
  },
  {
    "text": "developing apis and we're now at a point where with any of the three technologies you represent",
    "start": "146800",
    "end": "152080"
  },
  {
    "text": "someone can come in and just implement that technology right now but at some point in the past they did not exist so",
    "start": "152080",
    "end": "158720"
  },
  {
    "text": "tell me why was your technology created we don't need a whole history people can go and google that they want but give me",
    "start": "158720",
    "end": "164480"
  },
  {
    "text": "the one problem it was trying to solve and what was the innovative idea that it brought to the table and we'll go in",
    "start": "164480",
    "end": "170239"
  },
  {
    "text": "chronological order so matt that means you're up first to tell us about rest awesome well and i'm only choosing rest",
    "start": "170239",
    "end": "176560"
  },
  {
    "start": "174000",
    "end": "295000"
  },
  {
    "text": "because corba was not an option so there's my joke for my age category you know it's a great point like you could",
    "start": "176560",
    "end": "182400"
  },
  {
    "text": "probably write jrr tolkien-sized books on the history of rest and apis and yes",
    "start": "182400",
    "end": "187920"
  },
  {
    "text": "roy fielding had the dissertation which kind of defined the style of representational state transfer which",
    "start": "187920",
    "end": "193840"
  },
  {
    "text": "really was kind of like showing in a thesis hey here's how you can define an architectural style and let's choose how",
    "start": "193840",
    "end": "199360"
  },
  {
    "text": "the web works so we'll use rest you know in terms of solving the problem i think what's really interesting is it was a",
    "start": "199360",
    "end": "204799"
  },
  {
    "text": "very organic adoption of rest in a lot of different uses right like at the time",
    "start": "204799",
    "end": "211200"
  },
  {
    "text": "there was a lot of energy behind soap in the enterprises you know here's a way of using web technologies to connect things",
    "start": "211200",
    "end": "217440"
  },
  {
    "text": "and all these very prescriptive standards about how to write soap messages so rest rise was really sort of",
    "start": "217440",
    "end": "224080"
  },
  {
    "text": "in response to in rebellion against this soap and started just being like hey here's a",
    "start": "224080",
    "end": "230000"
  },
  {
    "text": "practical way of doing things what if we just use http verbs and define things as resources over the web so if i had to",
    "start": "230000",
    "end": "237120"
  },
  {
    "text": "generalize what problem it was meant to solve you know it's kind of like the web itself like if we go underneath the browser on webs how do we just plug",
    "start": "237120",
    "end": "244080"
  },
  {
    "text": "things together using web protocols and that's why i think part of the power of",
    "start": "244080",
    "end": "249680"
  },
  {
    "text": "rest and part of the ubiquity of rest has been its wide adoption in many different use cases and i think people",
    "start": "249680",
    "end": "257040"
  },
  {
    "text": "learning it in one area and then applying it another and you can even argue that it used to be you just connect to the ebay api or something",
    "start": "257040",
    "end": "264080"
  },
  {
    "text": "using rust in the early days then it was like well what if we use a rest api to",
    "start": "264080",
    "end": "269360"
  },
  {
    "text": "do deployments or do some sort of management over web networks then it was oh there's these mobile devices how are",
    "start": "269360",
    "end": "275199"
  },
  {
    "text": "we going to expose systems to mobile oh well we can use this rest thing that seems to be working in other places so",
    "start": "275199",
    "end": "280639"
  },
  {
    "text": "it really has been a very organic thing which can be probably you know some of the reasons that new protocols have",
    "start": "280639",
    "end": "285919"
  },
  {
    "text": "emerged has probably been based on its ubiquity and the compromises that come with that and the ambiguity that comes",
    "start": "285919",
    "end": "291680"
  },
  {
    "text": "with that but the story of rest is really the story of the web so next chronologically according to my",
    "start": "291680",
    "end": "297120"
  },
  {
    "start": "295000",
    "end": "422000"
  },
  {
    "text": "research on wikipedia is graphql so michelle why do we have graphql what does it give us",
    "start": "297120",
    "end": "302639"
  },
  {
    "text": "yes thank you for keeping my gq graphql joke alive by the way",
    "start": "302639",
    "end": "308479"
  },
  {
    "text": "okay so graphql was originally developed by facebook in 2012 and then the spec",
    "start": "308479",
    "end": "314639"
  },
  {
    "text": "was first released publicly in 2015 so it's been around open source for about",
    "start": "314639",
    "end": "319680"
  },
  {
    "text": "six years now and the history of graphql at facebook is quite widely written",
    "start": "319680",
    "end": "325360"
  },
  {
    "text": "about and you can look up online and find out all about it but i'll give you a brief tldr ultimately the first ever",
    "start": "325360",
    "end": "331919"
  },
  {
    "text": "implementation of graphql was the facebook mobile news feed api",
    "start": "331919",
    "end": "337440"
  },
  {
    "text": "and the problem that facebook engineers were trying to solve with graphql was that pain point of having to make loads",
    "start": "337440",
    "end": "344320"
  },
  {
    "text": "of different api requests back and forth from different endpoints in order to get all of the data that was necessary to",
    "start": "344320",
    "end": "350639"
  },
  {
    "text": "render a view which in this case is the very complicated facebook news feed where everything is interconnected and",
    "start": "350639",
    "end": "357440"
  },
  {
    "text": "nested with each other and this was coupled with the problem at the time of people shifting to mobile and using",
    "start": "357440",
    "end": "363680"
  },
  {
    "text": "really bad 3g mobile networks so graphql was invented to solve those problems at",
    "start": "363680",
    "end": "369280"
  },
  {
    "text": "facebook and the fresh idea that graphql brought to the table was really thinking",
    "start": "369280",
    "end": "374800"
  },
  {
    "text": "about data in terms of a graph instead of multiple endpoints so unlike rest",
    "start": "374800",
    "end": "381759"
  },
  {
    "text": "apis which expose data via multiple different endpoints graphql exposes all",
    "start": "381759",
    "end": "387440"
  },
  {
    "text": "of the data through a single endpoint that is flexible and when you build a",
    "start": "387440",
    "end": "392479"
  },
  {
    "text": "graphql api you're really trying to build a unified data graph which client",
    "start": "392479",
    "end": "398000"
  },
  {
    "text": "developers can then query a subset of based on what their needs are and so",
    "start": "398000",
    "end": "403520"
  },
  {
    "text": "really the key feature of graphql and what everyone loves about it and what is innovative about it is that it empowers",
    "start": "403520",
    "end": "409919"
  },
  {
    "text": "client developers to select exactly the data that they want from the api and get",
    "start": "409919",
    "end": "415280"
  },
  {
    "text": "back exactly what they've asked for without anything else and they get it all in one go so that's graphql",
    "start": "415280",
    "end": "422400"
  },
  {
    "start": "422000",
    "end": "533000"
  },
  {
    "text": "all right alex that means you get to tell us about the newest kid to the party grpc absolutely hello everyone",
    "start": "422400",
    "end": "428960"
  },
  {
    "text": "thank you thomas and by the way contrary to popular belief g doesn't stand for",
    "start": "428960",
    "end": "434160"
  },
  {
    "text": "google i'll send you a link for what gs10 but thomas mentioned that your pc was",
    "start": "434160",
    "end": "440479"
  },
  {
    "text": "the newest kit but in fact it has older siblings at google and your pc is just a",
    "start": "440479",
    "end": "446560"
  },
  {
    "text": "new version of stubby as api technology google used internally for a long time",
    "start": "446560",
    "end": "451840"
  },
  {
    "text": "for over a decade this new version is based on http 2 and it accumulated all the knowledge and lessons learned during",
    "start": "451840",
    "end": "459120"
  },
  {
    "text": "those long years of running truly distributed systems inside google something that we call micro services",
    "start": "459120",
    "end": "465360"
  },
  {
    "text": "now in a way grpc was a set of best practices for efficient remote communication",
    "start": "465360",
    "end": "471280"
  },
  {
    "text": "implemented in a one open source rpc framework and your pc was released",
    "start": "471280",
    "end": "476560"
  },
  {
    "text": "shortly after http 2 specification was published one of the ideas was to bring",
    "start": "476560",
    "end": "481599"
  },
  {
    "text": "all those performance improvements and capabilities of http 2 into a simple performant easy to use api first",
    "start": "481599",
    "end": "488560"
  },
  {
    "text": "framework that can be utilized in a number of scenarios from high throughput back ends to communication with devices",
    "start": "488560",
    "end": "494960"
  },
  {
    "text": "on unstable mobile networks with limited cpu and memory footprint so the idea was",
    "start": "494960",
    "end": "500639"
  },
  {
    "text": "not to create an architectural style the idea was not to create a query language the idea was to offer a collection of",
    "start": "500639",
    "end": "506400"
  },
  {
    "text": "technologies that help you as a developer build and run distributed system with large number of remote calls",
    "start": "506400",
    "end": "513039"
  },
  {
    "text": "and hide all the http 2 protocol implementation detail give you as a developer a framework is efficient wire",
    "start": "513039",
    "end": "520240"
  },
  {
    "text": "format fast realization deserialization and built-in features you will need to run your system and help you focus on",
    "start": "520240",
    "end": "526959"
  },
  {
    "text": "modeling your business oriented actions as opposed to http protocol details",
    "start": "526959",
    "end": "532959"
  },
  {
    "text": "the next question i want to ask most of the attendees here probably are architects or fulfill the architect rule",
    "start": "532959",
    "end": "539519"
  },
  {
    "start": "533000",
    "end": "687000"
  },
  {
    "text": "sometimes in their job and you always have to look at these trade-offs and wonder well what's the right tool for",
    "start": "539519",
    "end": "545200"
  },
  {
    "text": "the job right now and i'm not saying that one tool is always correct but can",
    "start": "545200",
    "end": "550240"
  },
  {
    "text": "you give us one example when i see a problem and my tool is the right",
    "start": "550240",
    "end": "555600"
  },
  {
    "text": "solution in that situation and just uh currently we're gonna go backwards in this so alex you can go first and tell",
    "start": "555600",
    "end": "560720"
  },
  {
    "text": "us what problem do you see the grpc is like that's the right tool for the job well if you're designing a low latency",
    "start": "560720",
    "end": "566880"
  },
  {
    "text": "highly scalable distributed system you should at least consider using grpc the default out of the box implementation is",
    "start": "566880",
    "end": "573440"
  },
  {
    "text": "using protocol buffers as an idl and serialization mechanism and by the way i said by default because again your pc is",
    "start": "573440",
    "end": "580320"
  },
  {
    "text": "actually encoding agnostic technically you can use grpc without protobuf but",
    "start": "580320",
    "end": "585440"
  },
  {
    "text": "for the sake of time let's stick with this product protobuf is very efficient you're not sending giant string payloads",
    "start": "585440",
    "end": "591440"
  },
  {
    "text": "you're not spending resources on parsing those strings in some languages string parsing can be extremely inefficient and",
    "start": "591440",
    "end": "598000"
  },
  {
    "text": "if your back end is used by mobile clients they will be more tolerant to bad network connections because you just",
    "start": "598000",
    "end": "603279"
  },
  {
    "text": "send less data over the wire and those clients will need to spend less cpu on deserialization which helps with battery",
    "start": "603279",
    "end": "609839"
  },
  {
    "text": "life on the other hand if you're building a backend system that include or at some point will include hundreds",
    "start": "609839",
    "end": "616320"
  },
  {
    "text": "or thousands interconnected microservices grpc will offer efficiency and speed and also will provide built-in",
    "start": "616320",
    "end": "622800"
  },
  {
    "text": "features like deadline propagation cascading cancellations retries request hedging and so on we can discuss any of",
    "start": "622800",
    "end": "628079"
  },
  {
    "text": "those techniques in depth if you want later or perhaps at some point you will need streaming apis your application",
    "start": "628079",
    "end": "634160"
  },
  {
    "text": "needs to stream multiple requests or multiple responses in one rpc interaction maybe your application",
    "start": "634160",
    "end": "640240"
  },
  {
    "text": "streams data from sensors or stock price and suddenly second latest things very important for your business you may need",
    "start": "640240",
    "end": "646560"
  },
  {
    "text": "flow control or back pressure for the streaming apis so streaming rpcs with flow control have first class support",
    "start": "646560",
    "end": "652480"
  },
  {
    "text": "and grpc and you will probably need tls at some point you will need load balancing custom authorization",
    "start": "652480",
    "end": "658480"
  },
  {
    "text": "monitoring grpc provides building blocks with default implementations and extension points for all those concepts",
    "start": "658480",
    "end": "666399"
  },
  {
    "text": "and the best thing is you don't have to think about all those features until you need them jrpc is very easy to start",
    "start": "666399",
    "end": "672880"
  },
  {
    "text": "with you can give it a try just for expressive language neutral idl and auto-generated client libraries and",
    "start": "672880",
    "end": "679360"
  },
  {
    "text": "later start using those additional features and extensions when you need them right did i cover enough use cases",
    "start": "679360",
    "end": "687120"
  },
  {
    "start": "687000",
    "end": "842000"
  },
  {
    "text": "it was a little bit more than one but those were all good michelle what about you what is some place where you like",
    "start": "687120",
    "end": "692560"
  },
  {
    "text": "we're starting from scratch but we're gonna go with draftql because that's the right thing for this job well i was",
    "start": "692560",
    "end": "697760"
  },
  {
    "text": "gonna say that i wanna cheat and say too but i feel like i can do it now oh yeah",
    "start": "697760",
    "end": "703040"
  },
  {
    "text": "i'll make it quick i have two use cases and i can't choose between them because they're both great the first one is",
    "start": "703040",
    "end": "708240"
  },
  {
    "text": "where you have one client application with many data sources and the second",
    "start": "708240",
    "end": "713760"
  },
  {
    "text": "use case is when you have many client applications and one shared data source",
    "start": "713760",
    "end": "719680"
  },
  {
    "text": "so let's talk about the use cases where you have multiple clients that need to use the same set of data in different ways",
    "start": "719680",
    "end": "726720"
  },
  {
    "text": "so for example you might have a web application and a mobile application which both need to access the same set",
    "start": "726720",
    "end": "733600"
  },
  {
    "text": "of data but the view looks different in both of those applications and the interface that they need of that data is",
    "start": "733600",
    "end": "739760"
  },
  {
    "text": "completely different so trying to share a rest api between these two clients can",
    "start": "739760",
    "end": "745040"
  },
  {
    "text": "result in really bloated endpoints with lots of data that is unnecessary to one or the other clients if you use graphql",
    "start": "745040",
    "end": "752320"
  },
  {
    "text": "on the other hand it allows both of these clients to share the same set of core data but they can use it in a way",
    "start": "752320",
    "end": "758639"
  },
  {
    "text": "that actually makes sense for them and they can ask specifically for the data fields that they want and they're not",
    "start": "758639",
    "end": "764800"
  },
  {
    "text": "going to be burdened by the data needs of the other applications that are sharing the same data set",
    "start": "764800",
    "end": "770880"
  },
  {
    "text": "so that's number one so my second beautiful use case for graphql is when",
    "start": "770880",
    "end": "776160"
  },
  {
    "text": "you have multiple data sources for a single application and you want to streamline those into a single interface",
    "start": "776160",
    "end": "783279"
  },
  {
    "text": "so say you're building a client application and it has loads of data sources say",
    "start": "783279",
    "end": "788800"
  },
  {
    "text": "like three rest apis a json file and a database maybe one of those rest apis is",
    "start": "788800",
    "end": "795600"
  },
  {
    "text": "a horrible legacy api that people are kind of scared to touch and it's undocumented and the naming is horrible",
    "start": "795600",
    "end": "802880"
  },
  {
    "text": "and you can't really change anything in it because it has to remain backwards compatible for other applications",
    "start": "802880",
    "end": "808000"
  },
  {
    "text": "so in this case you have disparate data sources and graphql is the perfect tool for the job to unite those data sources",
    "start": "808000",
    "end": "814880"
  },
  {
    "text": "in a data layer so you can wrap all of them in a single graphql layer and this layer allows you to kind of hide the",
    "start": "814880",
    "end": "821680"
  },
  {
    "text": "ugliness of the underlying services you can name fields how you like you can hide implementation details you can",
    "start": "821680",
    "end": "828720"
  },
  {
    "text": "relate data from the different data sources together in a way that makes sense but you don't have to expose that",
    "start": "828720",
    "end": "834639"
  },
  {
    "text": "they come from different services to the client and basically you create a nice streamlined data layer for your",
    "start": "834639",
    "end": "840639"
  },
  {
    "text": "application very nice matt we're going to ignore the fact that i think michelle just called your api ugly but when would",
    "start": "840639",
    "end": "847440"
  },
  {
    "start": "842000",
    "end": "987000"
  },
  {
    "text": "rest be just the right thing to do and is it simply that that's what everybody knows and so that's we're comfortable with and that's what we use or is there",
    "start": "847440",
    "end": "853680"
  },
  {
    "text": "a place where that's all we should be using so in this moment of being personally insulted i'm just going to",
    "start": "853680",
    "end": "858880"
  },
  {
    "text": "reflect for a second and invert things a little bit like honestly i think this question to me raises the question right",
    "start": "858880",
    "end": "864240"
  },
  {
    "text": "what's the right way of deciding what criteria to use to decide on the protocol right like i think we've heard some really good technical",
    "start": "864240",
    "end": "870639"
  },
  {
    "text": "justifications and we've heard some design justifications factoring in consumer needs like the reality is",
    "start": "870639",
    "end": "877120"
  },
  {
    "text": "depending on what perspective you're coming from you could arrive at different answers so i just wanted to pause and step out of character for a",
    "start": "877120",
    "end": "883120"
  },
  {
    "text": "moment and say like you really need to think about what your consumers need first i think especially you may be in a",
    "start": "883120",
    "end": "889120"
  },
  {
    "text": "situation where you own both ends of the pipe and so you've got a little more liberty to make decisions based on other",
    "start": "889120",
    "end": "894240"
  },
  {
    "text": "criteria but for me step one is like what do my consumers need because you might have like the perfect technical",
    "start": "894240",
    "end": "899760"
  },
  {
    "text": "justification to go with one protocol the others but if your consumers really need it in one format then that should",
    "start": "899760",
    "end": "905760"
  },
  {
    "text": "override things or maybe they need multiples but we'll get to that later but i think the answer for rest is like everything else or",
    "start": "905760",
    "end": "912480"
  },
  {
    "text": "you know those plus everything else i mean again i think that what we've seen is first of all how do you define rest",
    "start": "912480",
    "end": "919199"
  },
  {
    "text": "because even within the community there's lots of disagreements around that so i agree there's some ugly rest",
    "start": "919199",
    "end": "925440"
  },
  {
    "text": "apis that could use some abstraction but that's not really dictated by the protocol so that flexibility again is",
    "start": "925440",
    "end": "931279"
  },
  {
    "text": "strength and also leads to some of the pitfalls but i would say in general you know where you meet the web or maybe",
    "start": "931279",
    "end": "937920"
  },
  {
    "text": "more abstractly when you don't know who your consumers are so when you're really aiming at an unknown audience i think it",
    "start": "937920",
    "end": "944320"
  },
  {
    "text": "is very beneficial to say okay rest is the great equalizer here that if you don't know who's going to consume it",
    "start": "944320",
    "end": "949600"
  },
  {
    "text": "it's kind of the table stakes to say have a restful interface you know that there's going to be people who know how",
    "start": "949600",
    "end": "954639"
  },
  {
    "text": "to use that and then maybe there'll be reasons to specialize on other protocols later but even in the examples like",
    "start": "954639",
    "end": "960639"
  },
  {
    "text": "we'll see some organizations will use a restful interface as an abstraction on top of a grpc channel internally as a",
    "start": "960639",
    "end": "967920"
  },
  {
    "text": "way of kind of opening up to the web or you'll see restful apis being building blocks for a graphql endpoint that's",
    "start": "967920",
    "end": "974720"
  },
  {
    "text": "aggregating things so there's lots of combinatorial scenarios as well but my things would be think about what your",
    "start": "974720",
    "end": "980399"
  },
  {
    "text": "consumers need and if you're not totally sure of what your consumers need then that's probably where rest is an obvious",
    "start": "980399",
    "end": "986399"
  },
  {
    "text": "choice well let's put a pin in the idea of combining things i'm just going to talk about that later so preview but i",
    "start": "986399",
    "end": "992480"
  },
  {
    "text": "saw someone ask one of the questions that was going to be my next question is so you've all given me a good answer of i'm the right choice for this job we've",
    "start": "992480",
    "end": "999440"
  },
  {
    "text": "also seen tools used incorrectly i've seen lots of software written that you know i wrote c plus style f sharp or",
    "start": "999440",
    "end": "1006639"
  },
  {
    "text": "something like that because that's how i knew how to write stuff and i should have written functional by know how to write object oriented when is your tool",
    "start": "1006639",
    "end": "1012639"
  },
  {
    "text": "the wrong tool for the job you know admit it and don't tell me that we're always right and i can solve every problem because we all know that that's",
    "start": "1012639",
    "end": "1018959"
  },
  {
    "text": "not always the right fit and the answer of course as matt was pointing out is it depends but you know give me a good i",
    "start": "1018959",
    "end": "1025438"
  },
  {
    "text": "wouldn't do it if this is what you have you should go and choose something else anyone wants to go ahead please i would",
    "start": "1025439",
    "end": "1031600"
  },
  {
    "text": "say that there's a couple of intersections that are really getting predominant",
    "start": "1031600",
    "end": "1037038"
  },
  {
    "text": "event driven kind of comes around the circle every few years right so we're at a heavy event-driven period and there's",
    "start": "1037039",
    "end": "1043520"
  },
  {
    "text": "lots of asynchronous use cases where you can model asynchronous like web hooks",
    "start": "1043520",
    "end": "1048880"
  },
  {
    "text": "and things like that over us but there's places where you can certainly optimize better with a purely asynchronous protocol but i think the big one for me",
    "start": "1048880",
    "end": "1056000"
  },
  {
    "text": "is this convergence of the analytics world and big data world mashing up with the sort of user-facing",
    "start": "1056000",
    "end": "1061760"
  },
  {
    "text": "application microservices world having lived in the distributed computing world",
    "start": "1061760",
    "end": "1066960"
  },
  {
    "text": "there's a lot of sort of assumptions made that oh you know big data analytics whatever it's just more data to handle",
    "start": "1066960",
    "end": "1073120"
  },
  {
    "text": "there's clearly a lot of cases where you're connecting things with massive amounts of data and scale of data that",
    "start": "1073120",
    "end": "1079600"
  },
  {
    "text": "you don't necessarily want to put it through a straw of a more message-oriented restful interface so",
    "start": "1079600",
    "end": "1084640"
  },
  {
    "text": "that's probably the big one i would say if you're a distributed systems architect or engineer and you're just",
    "start": "1084640",
    "end": "1090720"
  },
  {
    "text": "now getting into the world of analytics and etl of big data like watch out for that",
    "start": "1090720",
    "end": "1096240"
  },
  {
    "text": "so i think that graphql is really geared towards product engineering and that is",
    "start": "1096240",
    "end": "1103120"
  },
  {
    "text": "where it really shines and that's where it has the most adoption so one of the creators of graphql byron has said in",
    "start": "1103120",
    "end": "1110320"
  },
  {
    "text": "the past that graphql really isn't the right choice for server to server communication so if you're looking to",
    "start": "1110320",
    "end": "1117280"
  },
  {
    "text": "build a way for your back-end services to speak to each other i don't think graphql is the right choice for that",
    "start": "1117280",
    "end": "1123280"
  },
  {
    "text": "because i think the power of graphql is in what it gives to product developers which is like flexibility and great",
    "start": "1123280",
    "end": "1128880"
  },
  {
    "text": "tooling and i think that the benefits are less in this kind of scenario and you might want to look more towards",
    "start": "1128880",
    "end": "1134799"
  },
  {
    "text": "thrift or grpc or rest something else and i'll start with some other answers",
    "start": "1134799",
    "end": "1140400"
  },
  {
    "start": "1137000",
    "end": "1269000"
  },
  {
    "text": "for grpc for example when your language is not supported so code generation comes with a downside that only 11",
    "start": "1140400",
    "end": "1148640"
  },
  {
    "text": "languages are supported if your language is not on the list you're out of luck or which can be even more important if your",
    "start": "1148640",
    "end": "1154880"
  },
  {
    "text": "language is on the list but your consumers cannot use or don't want to use a language that is supported you",
    "start": "1154880",
    "end": "1162320"
  },
  {
    "text": "should probably build your api with something else in those cases you can create like reverse proxies you can use",
    "start": "1162320",
    "end": "1167919"
  },
  {
    "text": "projects like grpc gateway that creates rest and points for grpc services or you",
    "start": "1167919",
    "end": "1173200"
  },
  {
    "text": "can use envoy with grpc json transcoder that translates a restful request into",
    "start": "1173200",
    "end": "1179200"
  },
  {
    "text": "grpc but those solutions are more like workarounds if you know that significant",
    "start": "1179200",
    "end": "1184240"
  },
  {
    "text": "amount of your api consumers will not be able to use native grpc libraries it's probably not the best tool to use also",
    "start": "1184240",
    "end": "1191360"
  },
  {
    "text": "if you're building like one of apis that you know you will sunset soon for example you build migration apis or",
    "start": "1191360",
    "end": "1197840"
  },
  {
    "text": "something the schema overhead might not be worth it or if you're building a service that only talks to a web browser",
    "start": "1197840",
    "end": "1205200"
  },
  {
    "text": "and it doesn't call any backend services it's just cost the database for example it's a simple application or you're",
    "start": "1205200",
    "end": "1210880"
  },
  {
    "text": "building a monolith for a good reason in those scenarios you can get more benefits from another technology graphql",
    "start": "1210880",
    "end": "1217840"
  },
  {
    "text": "or rest yes you may still be able to use graph grpc and you still will benefit",
    "start": "1217840",
    "end": "1223679"
  },
  {
    "text": "from language neutral contract from code generation but to talk to the web browser",
    "start": "1223679",
    "end": "1229200"
  },
  {
    "text": "you will need grpc web proxy and communication between proxy and the web",
    "start": "1229200",
    "end": "1234720"
  },
  {
    "text": "browser will still be http 1.1 so if your only integration point is web",
    "start": "1234720",
    "end": "1240559"
  },
  {
    "text": "browser grpc is probably not the best choice and you should really understand what your complexity is i mean you",
    "start": "1240559",
    "end": "1247919"
  },
  {
    "text": "should start this understanding with your complexities if your complexities in qps",
    "start": "1247919",
    "end": "1253360"
  },
  {
    "text": "throughput latencies you're concerned about optimizing pale latencies go with grpc",
    "start": "1253360",
    "end": "1258559"
  },
  {
    "text": "if your complexity is in complex domain that you have for each ui application",
    "start": "1258559",
    "end": "1264320"
  },
  {
    "text": "pulls data from dozens of services graphql can be a better choice",
    "start": "1264320",
    "end": "1269760"
  },
  {
    "start": "1269000",
    "end": "1458000"
  },
  {
    "text": "so alex you kind of mentioned the idea of code generation being critical for grpc and my next question was about what",
    "start": "1269760",
    "end": "1276159"
  },
  {
    "text": "does it take to get started like if i'm just exploring this i may know some things about rest and i may know how to",
    "start": "1276159",
    "end": "1282159"
  },
  {
    "text": "like just make an http request because you just have to make an http request and that's very easy to learn if we",
    "start": "1282159",
    "end": "1288000"
  },
  {
    "text": "assume that all this is client server communications even if it's server to server one of those is a client one's a",
    "start": "1288000",
    "end": "1293520"
  },
  {
    "text": "server what does it take from the server side and what does it take from the client side to say i now have two",
    "start": "1293520",
    "end": "1298799"
  },
  {
    "text": "components of my system that can talk to each other and since i already mentioned alex and codegen why don't you go first yeah absolutely i mean first your",
    "start": "1298799",
    "end": "1305840"
  },
  {
    "text": "consumer and producer client and server they have to agree on the protocol grpc is an api first framework so an api",
    "start": "1305840",
    "end": "1312720"
  },
  {
    "text": "contract is not an afterthought it's the very first thing you start with again for simplicity let's pretend it's only",
    "start": "1312720",
    "end": "1318159"
  },
  {
    "text": "protobuf and unlike rest or graphql in your pc you model actions you model your",
    "start": "1318159",
    "end": "1324240"
  },
  {
    "text": "methods you define your service which is just a collection of actions that your",
    "start": "1324240",
    "end": "1329280"
  },
  {
    "text": "server can do and your server can be resource oriented but it doesn't have to be you define",
    "start": "1329280",
    "end": "1335600"
  },
  {
    "text": "what it can do and this action can be defined around data entities or can be not and then even though grpc is based",
    "start": "1335600",
    "end": "1343600"
  },
  {
    "text": "on http protocol grpc does not expose any http details so this prod above",
    "start": "1343600",
    "end": "1349200"
  },
  {
    "text": "schema is very simple you define your request as a product message your response to the proto message and your",
    "start": "1349200",
    "end": "1354240"
  },
  {
    "text": "method and then you will need to use protocol buffer compiler with your pc",
    "start": "1354240",
    "end": "1359760"
  },
  {
    "text": "plugin to generate classes for both consumer and producers for example let's say we define the qcon service these two",
    "start": "1359760",
    "end": "1366720"
  },
  {
    "text": "actions attend the session and attend lunch two most important things you can do during the conference so attend",
    "start": "1366720",
    "end": "1372960"
  },
  {
    "text": "session takes requests returns a response so your api definitions will be compiled into classes in a language of",
    "start": "1372960",
    "end": "1380640"
  },
  {
    "text": "your choice for example let's say we use protocompiler with grpc java plugin for backend it generates an abstract class",
    "start": "1380640",
    "end": "1387679"
  },
  {
    "text": "called qcon service input base and backend developer would need to extend this class override the attend session",
    "start": "1387679",
    "end": "1394559"
  },
  {
    "text": "override attend launch methods so no annotations no mapping you just need to implement methods in your language and",
    "start": "1394559",
    "end": "1401760"
  },
  {
    "text": "for the client protocompiler generates client stops and client libraries these",
    "start": "1401760",
    "end": "1407280"
  },
  {
    "text": "methods attend session and attend launch and in fact it generates two types two subsets of client libraries synchronous",
    "start": "1407280",
    "end": "1414159"
  },
  {
    "text": "and asynchronous in java it will generate three clients blocking client",
    "start": "1414159",
    "end": "1419440"
  },
  {
    "text": "callback based client and future based client so grpc encourages you to use non-blocking clients but you can start",
    "start": "1419440",
    "end": "1424880"
  },
  {
    "text": "with simple block and client and then switch to asynchronous later on if you need to and you can just start by with",
    "start": "1424880",
    "end": "1431760"
  },
  {
    "text": "instantiating those generated clients and you use your data entities you build",
    "start": "1431760",
    "end": "1437039"
  },
  {
    "text": "a request and then call this method to invoke a server and all the heavy lifting serialization decentralization",
    "start": "1437039",
    "end": "1443520"
  },
  {
    "text": "opening streams managing connections working with http 2 frames it's all hidden jrpc doesn't expose any of those",
    "start": "1443520",
    "end": "1449840"
  },
  {
    "text": "details so the framework has already made all the decisions on how to layer your rpc model on top of the protocol",
    "start": "1449840",
    "end": "1457360"
  },
  {
    "text": "now michelle what is graphql again i've seen little tutorials of here's how to get started with graphql and it seems",
    "start": "1457360",
    "end": "1463039"
  },
  {
    "start": "1458000",
    "end": "1558000"
  },
  {
    "text": "like there is that like how complicated is it really do i need a new server do i just write some code and deploy it out",
    "start": "1463039",
    "end": "1469679"
  },
  {
    "text": "yeah so with graphql everything starts with a query or a mutation so",
    "start": "1469679",
    "end": "1476159"
  },
  {
    "text": "if we're talking in crud terms a graphql query is equivalent to reading data and",
    "start": "1476159",
    "end": "1482000"
  },
  {
    "text": "a mutation is when you want to create update or delete some data and let's go with queries because it's the most",
    "start": "1482000",
    "end": "1487840"
  },
  {
    "text": "straightforward one so a graphql query is essentially like a shopping list of",
    "start": "1487840",
    "end": "1493039"
  },
  {
    "text": "all the data that you want to get back from the graphql api so you write down a list of all the fields that you need and",
    "start": "1493039",
    "end": "1499840"
  },
  {
    "text": "you can pass any important arguments like a user id and all the fields that you write down",
    "start": "1499840",
    "end": "1505360"
  },
  {
    "text": "they have to correspond to the graphql schema which is a strictly typed contract that describes all of the data",
    "start": "1505360",
    "end": "1511919"
  },
  {
    "text": "that it is possible for you to ask for from the graphql api and graphql apis have just a single endpoint usually",
    "start": "1511919",
    "end": "1518960"
  },
  {
    "text": "graphql usually a post endpoint and when you want to make the request you post your graphql query to the endpoint and",
    "start": "1518960",
    "end": "1525279"
  },
  {
    "text": "the server will receive your query and then on the server side there's things called resolvers you define a resolver",
    "start": "1525279",
    "end": "1531039"
  },
  {
    "text": "for every single field in the graphql schema and it's essentially a function that tells graphql how to populate that",
    "start": "1531039",
    "end": "1537919"
  },
  {
    "text": "data and you can pull that data from anywhere you like you can pull it from other rest apis or a database or you can",
    "start": "1537919",
    "end": "1544960"
  },
  {
    "text": "just return a string whatever you want to do but basically the server will read through the query look at all the fields",
    "start": "1544960",
    "end": "1550880"
  },
  {
    "text": "and populate those fields with data one by one based on the resolver functions and then once it's done that it'll",
    "start": "1550880",
    "end": "1556720"
  },
  {
    "text": "return it to the client matt i want to once again get out of character a little bit because there's",
    "start": "1556720",
    "end": "1562320"
  },
  {
    "start": "1558000",
    "end": "1685000"
  },
  {
    "text": "an element of design that happens independent of the protocol like i think that's an important point to make like",
    "start": "1562320",
    "end": "1568320"
  },
  {
    "text": "the first thing you should worry about isn't like let me run and start writing my protobuf definition or my graphql",
    "start": "1568320",
    "end": "1574720"
  },
  {
    "text": "schema or my json schema right i think there's an element of design of just",
    "start": "1574720",
    "end": "1580000"
  },
  {
    "text": "again like i said before thinking through who your consumers are thinking about what are the actual whether it's",
    "start": "1580000",
    "end": "1585440"
  },
  {
    "text": "resources or schemas or you know messages what's the actual like business activity that's going to take place on",
    "start": "1585440",
    "end": "1591360"
  },
  {
    "text": "the interaction and that's so important because i think if we look at rest and you know if we want to just use like the",
    "start": "1591360",
    "end": "1597440"
  },
  {
    "text": "basic definition of crud over http using resources i think everyone probably",
    "start": "1597440",
    "end": "1602720"
  },
  {
    "text": "knows everyone's familiar there's a bazillion implementations of clients and servers there and it's great the developments have been made in swagger",
    "start": "1602720",
    "end": "1609279"
  },
  {
    "text": "and open api specification to help drive more metadata and there's flexibility to plug in json schema and security schemes",
    "start": "1609279",
    "end": "1616320"
  },
  {
    "text": "like there's all that technological goodness that i'm sure ken undoubtedly did a phenomenal job of explaining a lot",
    "start": "1616320",
    "end": "1622880"
  },
  {
    "text": "of the details around that but i think to get started with rest if you're thinking in a bigger context of oh i'm",
    "start": "1622880",
    "end": "1629440"
  },
  {
    "text": "actually creating an api that's going to be a new channel for my company or for my business like we talk about this idea",
    "start": "1629440",
    "end": "1636159"
  },
  {
    "text": "of apis as products a lot got the book here and continuous api management from my friends that wrote it there's this",
    "start": "1636159",
    "end": "1642880"
  },
  {
    "text": "whole aspect of thinking through like how are people going to find my api how will it be discovered right what is the",
    "start": "1642880",
    "end": "1648480"
  },
  {
    "text": "different segments of consumers involved there right how am i going to handle versioning and all that so i think the",
    "start": "1648480",
    "end": "1654480"
  },
  {
    "text": "reason i bring it up now is because i think there's a temptation to just say you know let me get the mvp quick start",
    "start": "1654480",
    "end": "1660320"
  },
  {
    "text": "thing out there but i think the sooner you start to think through okay let's just put the technology aside for a",
    "start": "1660320",
    "end": "1665600"
  },
  {
    "text": "second and think of all these product considerations it's really fundamental to do that because what's that very",
    "start": "1665600",
    "end": "1671919"
  },
  {
    "text": "popular quote right the biggest failure in technology is not having something crash right it's building the wrong",
    "start": "1671919",
    "end": "1677760"
  },
  {
    "text": "thing so you know the more thinking you put into what is it tuning what you're designing for i think that's key and",
    "start": "1677760",
    "end": "1682799"
  },
  {
    "text": "that to me is a big part of getting started i think that's a great call back to the people who saw christy schneider's presentation talking about",
    "start": "1682799",
    "end": "1689440"
  },
  {
    "start": "1685000",
    "end": "1720000"
  },
  {
    "text": "design for extensibility she talked a lot of the same things without specifically mentioning it was just apis",
    "start": "1689440",
    "end": "1694480"
  },
  {
    "text": "it really is if you have products that you're trying to adapt over time how do you version how do you document how do you teach people about it how do you get",
    "start": "1694480",
    "end": "1700960"
  },
  {
    "text": "them to adopt it on the theme of architecture right like i think architecture what's the difference in architecture design right it could be",
    "start": "1700960",
    "end": "1707039"
  },
  {
    "text": "just architecture those decisions you make that have long lasting implications there are things you can do up front",
    "start": "1707039",
    "end": "1712559"
  },
  {
    "text": "that will snicker you on preventing you know creating landmines down the road so",
    "start": "1712559",
    "end": "1717760"
  },
  {
    "text": "it's definitely important to put that thought in i did want to ask at least one narrow technical question since it is an",
    "start": "1717760",
    "end": "1723679"
  },
  {
    "start": "1720000",
    "end": "1812000"
  },
  {
    "text": "architecture track one of the themes we signs here about is cqrs command query responsibility segregation and i want to",
    "start": "1723679",
    "end": "1730240"
  },
  {
    "text": "know how does that get implemented in each of these things i think matt it's pretty obvious you write a command you",
    "start": "1730240",
    "end": "1735840"
  },
  {
    "text": "write a query or you have different endpoints for those things but is that no longer restful and do we care well",
    "start": "1735840",
    "end": "1741919"
  },
  {
    "text": "you know again cqrs has kind of grown out of domain-driven design i think it was like there's this whole evolution of",
    "start": "1741919",
    "end": "1748640"
  },
  {
    "text": "cqrs i've heard people sort of sarcastically say cqrs was just a thing microsoft was pushing because they",
    "start": "1748640",
    "end": "1755279"
  },
  {
    "text": "couldn't get sql server to run effectively without separating commands and queries but i think notionally it's",
    "start": "1755279",
    "end": "1761039"
  },
  {
    "text": "been actually a pattern that's been in place for a long time so you could absolutely separate your gets if you",
    "start": "1761039",
    "end": "1767760"
  },
  {
    "text": "don't have a proxy that does filtering and dynamic routing and then goes back and hits different back ends at what",
    "start": "1767760",
    "end": "1773279"
  },
  {
    "text": "point do you want to make the separation happen is it right at the network layer do you want some application layer do",
    "start": "1773279",
    "end": "1778559"
  },
  {
    "text": "you want to have some data separation so typically i would say working in the enterprise space that i usually am",
    "start": "1778559",
    "end": "1784720"
  },
  {
    "text": "working with customers in there's a lot of different optimizations that happen on the chain and i'm not seeing a ton of",
    "start": "1784720",
    "end": "1791120"
  },
  {
    "text": "organizations being purists around cqrs those that are tend to be more in the",
    "start": "1791120",
    "end": "1796880"
  },
  {
    "text": "going all in on event modeling and sort of event sourcing approach where they're optimizing specifically for that type of",
    "start": "1796880",
    "end": "1803679"
  },
  {
    "text": "separation but it's doable but i think the main point is that there's lots of different points in the stack where you",
    "start": "1803679",
    "end": "1808720"
  },
  {
    "text": "might want to have separation for optimization purposes now michelle there's a q in graphql but there's no c",
    "start": "1808720",
    "end": "1816159"
  },
  {
    "start": "1812000",
    "end": "1921000"
  },
  {
    "text": "so do commands not even work through graphql or is that something somebody else should be responsible for i've",
    "start": "1816159",
    "end": "1822399"
  },
  {
    "text": "honestly not heard this acronym before so maybe you can tell me it's the idea of separating you have a",
    "start": "1822399",
    "end": "1829120"
  },
  {
    "text": "path where you go down and you write all of your queries against one a read model if you will you know it's like writing a",
    "start": "1829120",
    "end": "1834640"
  },
  {
    "text": "math said sql server was being slow so you wrote materialized views so they would read fast or whatever you did but",
    "start": "1834640",
    "end": "1841440"
  },
  {
    "text": "that you don't write a document and read a document the same way so graphql seems",
    "start": "1841440",
    "end": "1846480"
  },
  {
    "text": "to be i'm going to aggregate all my data together and i can ask all these different questions just give me this little bit of data but it's not meant",
    "start": "1846480",
    "end": "1852480"
  },
  {
    "text": "for please send a message to the next person in the queue or something like that yeah",
    "start": "1852480",
    "end": "1857679"
  },
  {
    "text": "that sounds reasonable to me just to add someone graphql i just want to pick up one of those okay is i think",
    "start": "1857679",
    "end": "1863840"
  },
  {
    "text": "it's interesting that you've got queries mutations and subscriptions i think as well right",
    "start": "1863840",
    "end": "1869120"
  },
  {
    "text": "and i've been banging this drum around commands queries events whatever you want to call them like there's these",
    "start": "1869120",
    "end": "1874240"
  },
  {
    "text": "three different interaction patterns again that goes back to the fact that maybe these protocols aren't all that different we're solving similar problems",
    "start": "1874240",
    "end": "1880399"
  },
  {
    "text": "and there's a unified conceptual view of the world that is expressed in all three of them i'll hand it over to alex now to",
    "start": "1880399",
    "end": "1886960"
  },
  {
    "text": "give us alex just a brief answer and i'm already going to set you up because i know rpc",
    "start": "1886960",
    "end": "1892000"
  },
  {
    "text": "is remote procedure call it doesn't imply what you're doing you can do whatever you want right absolutely it",
    "start": "1892000",
    "end": "1897039"
  },
  {
    "text": "does not yes you can easily define separate services you can define service to read your data and it's separate",
    "start": "1897039",
    "end": "1903120"
  },
  {
    "text": "service to mutate your data so you will have query service and command series they can be implemented by the same grpc",
    "start": "1903120",
    "end": "1910399"
  },
  {
    "text": "service but services are just name spaces if you will so if your consumer is a reader they use your query service",
    "start": "1910399",
    "end": "1916720"
  },
  {
    "text": "if they're a writer they send commands using your command service so we've got about three minutes left and last",
    "start": "1916720",
    "end": "1923120"
  },
  {
    "start": "1921000",
    "end": "2066000"
  },
  {
    "text": "question i already teed it up so you started off by saying i'm the one technology to win them all but if you",
    "start": "1923120",
    "end": "1928960"
  },
  {
    "text": "had to choose somebody else and you're going to say a two sizes fits pretty well option which of the other choices",
    "start": "1928960",
    "end": "1936159"
  },
  {
    "text": "in the room would you pick and since i started this with chronological order we'll go in reverse even if alex that i",
    "start": "1936159",
    "end": "1941519"
  },
  {
    "text": "was wrong about the timing so alex go ahead if you're not the right fit who do you want with you if i have each ui that",
    "start": "1941519",
    "end": "1946960"
  },
  {
    "text": "aggregates data from multiple sources i'll go with graphql i may end up supporting two adls but that's the price",
    "start": "1946960",
    "end": "1953200"
  },
  {
    "text": "i pay on the other hand if i have a subset of consumers who can't or don't want to use grpc clients i'll go with",
    "start": "1953200",
    "end": "1958880"
  },
  {
    "text": "the rest giving the it depends on the please pick one and he chooses both different scenarios that's fine",
    "start": "1958880",
    "end": "1965519"
  },
  {
    "text": "exactly michelle if i said we couldn't just use graphql everywhere who's your wingman i'm gonna pick",
    "start": "1965519",
    "end": "1971679"
  },
  {
    "text": "rest as my wing woman although you know i feel like rest and graphql are pitted against each other",
    "start": "1971679",
    "end": "1977760"
  },
  {
    "text": "and i'm sorry that i called ugly earlier on i think that they have a lot of harmony together and they're often found",
    "start": "1977760",
    "end": "1984640"
  },
  {
    "text": "together in real world implementations of graphql there are just so many rest apis in the world and i don't think rest",
    "start": "1984640",
    "end": "1991279"
  },
  {
    "text": "apis are gonna go away and i think that wrapping a rest api in a graphql layer",
    "start": "1991279",
    "end": "1996640"
  },
  {
    "text": "but maintaining the underlying rest api services is a really common pattern and is like a sweet spot for the two of them",
    "start": "1996640",
    "end": "2003360"
  },
  {
    "text": "to work together matt's up to you who's winning this you know one of the reasons i'm here is that and thank you michelle one of the",
    "start": "2003360",
    "end": "2009919"
  },
  {
    "text": "reasons i'm here the article i wrote which is specifically calling out these false dichotomies i can't sit up here",
    "start": "2009919",
    "end": "2015760"
  },
  {
    "text": "with a straight face and say oh i only pick one or the other right because it seems it is silly to have like you know",
    "start": "2015760",
    "end": "2023039"
  },
  {
    "text": "grpc is better than rest and the rest is better than graphql like the whole point is and in that article i was stressing",
    "start": "2023039",
    "end": "2029760"
  },
  {
    "text": "this kind of ubiquity and the value of that but then the trade-offs so i'm going to go with kafka didn't see that coming up",
    "start": "2029760",
    "end": "2036000"
  },
  {
    "text": "we know it depends thought it might have been korba once again coming back up this is a lot of fun i have 700 more",
    "start": "2036000",
    "end": "2041679"
  },
  {
    "text": "questions we couldn't get to and i hope everyone has a good",
    "start": "2041679",
    "end": "2047000"
  },
  {
    "text": "[Music]",
    "start": "2051460",
    "end": "2066260"
  },
  {
    "text": "you",
    "start": "2066720",
    "end": "2068800"
  }
]