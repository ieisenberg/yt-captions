[
  {
    "text": "[Music]",
    "start": "3320",
    "end": "8769"
  },
  {
    "text": "all right thanks all of you for coming I know it's been a long day and we're kind of at the end of the day so definitely",
    "start": "11599",
    "end": "17080"
  },
  {
    "text": "appreciate everybody showing up um I am going to be talking about cellular architecture in the cloud but I want to",
    "start": "17080",
    "end": "22560"
  },
  {
    "text": "do a little Divergence first and talk about automation so a quick little tour",
    "start": "22560",
    "end": "28760"
  },
  {
    "text": "through some history of Automation in 14366 the invention of the printing",
    "start": "28760",
    "end": "34520"
  },
  {
    "text": "press allowed us to distribute information so much more quickly than we had before uh 1475 a little less",
    "start": "34520",
    "end": "41160"
  },
  {
    "text": "celebrated uh but still I would say very important invention the cookie cutter that allowed us to no longer have to cut",
    "start": "41160",
    "end": "48079"
  },
  {
    "text": "out every single gingerbread man individually 1901 the assembly line",
    "start": "48079",
    "end": "53399"
  },
  {
    "text": "people usually associate this with um like Ford automotive and the ability to mass-produce vehicles at a much larger",
    "start": "53399",
    "end": "59320"
  },
  {
    "text": "scale than we ever had before and then last but not least 2019 a path to escape",
    "start": "59320",
    "end": "65560"
  },
  {
    "text": "from Yo and Json as our infrastructure for code uh this is a little tongue and-",
    "start": "65560",
    "end": "70840"
  },
  {
    "text": "cheek obviously and I apologize I know that um I I just joined the conference yesterday so I missed the track on",
    "start": "70840",
    "end": "76720"
  },
  {
    "text": "Monday about infrastructure as code I'm sure I'm not the first person that's made this joke at this conference but thanks for putting up with it um so you",
    "start": "76720",
    "end": "84079"
  },
  {
    "text": "might be asking I thought this was a talk about solar architecture why why is this guy talking about automation",
    "start": "84079",
    "end": "90720"
  },
  {
    "text": "and uh one of the points I want to convey in this talk is that I actually think that um to to achieve a really",
    "start": "90720",
    "end": "97240"
  },
  {
    "text": "maintainable and um scalable cellular architecture um automation is a really",
    "start": "97240",
    "end": "102520"
  },
  {
    "text": "important piece of the puzzle and the advancements that have happened in the infrastructure as code space in the last",
    "start": "102520",
    "end": "107840"
  },
  {
    "text": "few years have have really done a lot to make this a simpler problem to solve so I'm going to end up kind of tying these two things together a little bit more",
    "start": "107840",
    "end": "114360"
  },
  {
    "text": "later in the talk so again my name is Chris price uh my last few jobs I worked at puppet for",
    "start": "114360",
    "end": "120920"
  },
  {
    "text": "about five years which is kind of where I got my introduction to devops and infrastructure as code but it was a",
    "start": "120920",
    "end": "126439"
  },
  {
    "text": "little more on Prem type stuff then I moved to AWS when I was working at AWS I",
    "start": "126439",
    "end": "131959"
  },
  {
    "text": "was on a team that built a Greenfield video streaming service that was used as part of Amazon's um broadcast of",
    "start": "131959",
    "end": "138440"
  },
  {
    "text": "Thursday Night Football one of the things that was really awesome about that job was getting to learn from all",
    "start": "138440",
    "end": "144480"
  },
  {
    "text": "of the other teams inside of AWS that had built these Goliath Services um over",
    "start": "144480",
    "end": "149519"
  },
  {
    "text": "all these years and getting to take lessons from them like how they managed cellular architecture for their services",
    "start": "149519",
    "end": "155319"
  },
  {
    "text": "and apply that to our new service that we were building as a Greenfield thing uh now I work at momento which is a",
    "start": "155319",
    "end": "162680"
  },
  {
    "text": "company that provides serverless caching and pubsub products so I realized there's some irony in this talk as I'm",
    "start": "162680",
    "end": "168519"
  },
  {
    "text": "going to be talking to you guys about how we built our infrastructure when my company's whole purpose for existence is",
    "start": "168519",
    "end": "174480"
  },
  {
    "text": "preventing you from having to have as many things involved in your infrastructure but I hope you'll hum me for that as well well um when I joined",
    "start": "174480",
    "end": "181239"
  },
  {
    "text": "momento one of the first tasks that I did was kind of help uh build out the infrastructure for our architecture",
    "start": "181239",
    "end": "186760"
  },
  {
    "text": "including some of how we do cellular stuff so um I want to definitely give",
    "start": "186760",
    "end": "192720"
  },
  {
    "text": "credit where credit is due before I get into the talk and you know just reiterate cellular architecture is not",
    "start": "192720",
    "end": "198159"
  },
  {
    "text": "something that we at momento invented or anything like that um uh Peter vasel",
    "start": "198159",
    "end": "204640"
  },
  {
    "text": "gave a talk at reinvent in 2018 about how AWS minimizes the blast radius of",
    "start": "204640",
    "end": "211040"
  },
  {
    "text": "failures for the various AWS services and he talked a lot about cellular architecture in that talk if you're",
    "start": "211040",
    "end": "217040"
  },
  {
    "text": "interested in more of the motivation for why to do it um that's another good talk to watch um I'm not going to talk quite",
    "start": "217040",
    "end": "224040"
  },
  {
    "text": "so much about motivation I'm going to talk a little bit more about practical things that you can do if you want to",
    "start": "224040",
    "end": "229640"
  },
  {
    "text": "build uh if you want to incorporate some cellular architecture into your own application and you want to automate",
    "start": "229640",
    "end": "236040"
  },
  {
    "text": "some of the infrastructure around it um but I will do a quick Rec cap of some of the important things from Peter's talk",
    "start": "236040",
    "end": "243760"
  },
  {
    "text": "uh the thing on the things on the right hand side there were kind of really the focus of his talk in terms of breaking",
    "start": "243760",
    "end": "250159"
  },
  {
    "text": "down the units at which an AWS service provides isolation uh to allow you to",
    "start": "250159",
    "end": "256000"
  },
  {
    "text": "minimize the blast radius when some kind of failure does occur as they inevitably do um so you guys are probably all",
    "start": "256000",
    "end": "262840"
  },
  {
    "text": "familiar with regions and availability zones they're kind of the fundamental building blocks of most AWS services and",
    "start": "262840",
    "end": "269440"
  },
  {
    "text": "they give give you a mechanism to choose how you want to set up your own uh your own architecture to uh be a little bit",
    "start": "269440",
    "end": "276919"
  },
  {
    "text": "more f f tolerant along those same lines so that if something fails in one AZ or one region it doesn't bring your whole",
    "start": "276919",
    "end": "282759"
  },
  {
    "text": "service down but then after that he talks about cells which is kind of the next level that at which um you can you",
    "start": "282759",
    "end": "289080"
  },
  {
    "text": "can isolate things for your service and so a cell as a simple definition of it",
    "start": "289080",
    "end": "294400"
  },
  {
    "text": "it's nothing more than a single isolated deployment of your application it can",
    "start": "294400",
    "end": "300039"
  },
  {
    "text": "run and handle requests completely uh independently and it's totally isolated from other cells that you have you can",
    "start": "300039",
    "end": "306639"
  },
  {
    "text": "choose to build your cells as Regional things or as zonal things or um you can",
    "start": "306639",
    "end": "312080"
  },
  {
    "text": "create multiple cells inside of an A or multiple cells inside of a region it's really up to what's the best fit for",
    "start": "312080",
    "end": "319280"
  },
  {
    "text": "your product and your customers but I liked um this example of of that he used",
    "start": "319280",
    "end": "324560"
  },
  {
    "text": "for blast radius here um and the the red squares on the little middle right uh",
    "start": "324560",
    "end": "330039"
  },
  {
    "text": "the middle at the bottom there um he shows an example of a service that was built with cells independent cells",
    "start": "330039",
    "end": "337680"
  },
  {
    "text": "inside of um each availability Zone and he talks about when a poison pill",
    "start": "337680",
    "end": "344039"
  },
  {
    "text": "request or a Black Swan event happens which is some kind of unexpected input",
    "start": "344039",
    "end": "349800"
  },
  {
    "text": "or traffic that you're getting from a given customer usually this is for a multi-tenant service um this is where",
    "start": "349800",
    "end": "355560"
  },
  {
    "text": "this concept is most useful most applicable but you get in you get in some escalated traffic or some",
    "start": "355560",
    "end": "362160"
  },
  {
    "text": "problematic request from a certain customer and your service handles it in an unexpected way and things start to",
    "start": "362160",
    "end": "367599"
  },
  {
    "text": "fail if you have a design like that the the LI the blast radius is limited to that that one cell which in this case is",
    "start": "367599",
    "end": "374360"
  },
  {
    "text": "only a part of a single availability Zone and all the traffic that you might be serving in all of those other cells",
    "start": "374360",
    "end": "379639"
  },
  {
    "text": "is unaffected so that's the general concept um now we're going to talk about",
    "start": "379639",
    "end": "386280"
  },
  {
    "text": "um how at momento we kind of built out our initial foundational infrastructure",
    "start": "386280",
    "end": "392080"
  },
  {
    "text": "um to allow us to easily manage um cells so there's kind of five key things kind",
    "start": "392080",
    "end": "398080"
  },
  {
    "text": "of five key problems that I think you have to solve if you want to automate your cellular infrastructure you need to",
    "start": "398080",
    "end": "403280"
  },
  {
    "text": "figure out how you're going to achieve isolation you need to figure out how how",
    "start": "403280",
    "end": "409080"
  },
  {
    "text": "what's the process look like when you need to bring up a new cell you need to",
    "start": "409080",
    "end": "414240"
  },
  {
    "text": "uh solve the problem of how you're going to deploy uh whenever there's a change to some like microser that makes up a",
    "start": "414240",
    "end": "420360"
  },
  {
    "text": "part of your application how are you going to deploy the changes to that micros service across all of the cells that you have uh you need to figure out",
    "start": "420360",
    "end": "427280"
  },
  {
    "text": "permissions so there's going to be inbound permissions to the cell and outbound permissions from the cell to",
    "start": "427280",
    "end": "432840"
  },
  {
    "text": "allow it to access resources like private vpcs or um an ECR image that has",
    "start": "432840",
    "end": "440240"
  },
  {
    "text": "some the you know the docker the docker image for a part of your application so you have to figure out how to manage all",
    "start": "440240",
    "end": "445400"
  },
  {
    "text": "those permissions and then lastly you got to figure out monitoring so when you're operator are on call trying to",
    "start": "445400",
    "end": "451440"
  },
  {
    "text": "manage your service they need an easy way to get a holistic view of what's going on in all the cells without having",
    "start": "451440",
    "end": "458280"
  },
  {
    "text": "to go look at a bunch of different places for it so those are kind of the five key problems that we're going to try to solve and I'm just going to be",
    "start": "458280",
    "end": "464879"
  },
  {
    "text": "talking about some tools that we use and some patterns that we use at momentto to to solve each of them before I get into",
    "start": "464879",
    "end": "472360"
  },
  {
    "text": "those individual tasks I want to zoom out a little bit and talk about",
    "start": "472360",
    "end": "477400"
  },
  {
    "text": "standardization so uh the key thing when you're thinking about a cellular",
    "start": "477400",
    "end": "482479"
  },
  {
    "text": "architecture is that you're going to end up having a whole lot of different deployments of your Co of your application code and the only way that's",
    "start": "482479",
    "end": "489440"
  },
  {
    "text": "ever going to scale is if you have some way to to perform generalized tasks um",
    "start": "489440",
    "end": "494800"
  },
  {
    "text": "across all of those different cells so you have some generalization mechanism that allows your infrastructure to",
    "start": "494800",
    "end": "500360"
  },
  {
    "text": "manage all the different things that are going on in each of those cells uh in a similar repeatable way so there's some",
    "start": "500360",
    "end": "506759"
  },
  {
    "text": "things that you can do up front to standardize certain parts of of how your application is built that will make that",
    "start": "506759",
    "end": "512518"
  },
  {
    "text": "um that infrastructure a lot easier to build so I do want to call out when I'm",
    "start": "512519",
    "end": "518399"
  },
  {
    "text": "talking about standardization I'm definitely not talking about homogeneization and I think this is",
    "start": "518399",
    "end": "523518"
  },
  {
    "text": "super important to call out because most uh most applications these days are made",
    "start": "523519",
    "end": "529240"
  },
  {
    "text": "up of several discrete microservices and it's it's almost impossible over time for any mature",
    "start": "529240",
    "end": "535160"
  },
  {
    "text": "engineering org to end to try to keep those all using the exact same text stack you're going to have certain",
    "start": "535160",
    "end": "541160"
  },
  {
    "text": "services that have different needs from other ones or you're going to learn new technologies and find that they're better and you're going to end up having",
    "start": "541160",
    "end": "547160"
  },
  {
    "text": "multiple different flavors of tech Stacks that make up the components of your application and that's totally fine",
    "start": "547160",
    "end": "552920"
  },
  {
    "text": "here we can see a few different examples um we've got one on the left that is deployed via AWS cloud formation and",
    "start": "552920",
    "end": "559560"
  },
  {
    "text": "it's got some serverless resources like API Gateway Lambda maybe some Dynamo tables you could also have some",
    "start": "559560",
    "end": "565600"
  },
  {
    "text": "kubernetes services that deploy load balance or application container database containers there's a few more",
    "start": "565600",
    "end": "571480"
  },
  {
    "text": "AWS examples on the right so these don't have to all be the same as each other but we do want to try to recognize some",
    "start": "571480",
    "end": "578120"
  },
  {
    "text": "common patterns of how we need to manage these things when we're um managing",
    "start": "578120",
    "end": "583560"
  },
  {
    "text": "cells and find ways that we can generalize our solution across these even though they're using different text",
    "start": "583560",
    "end": "589720"
  },
  {
    "text": "Stacks so at the end of the day when we are trying to figure out how to deploy",
    "start": "589720",
    "end": "594800"
  },
  {
    "text": "uh Chang to our application code uh to to all of our cells it's it's going to be a process that looks something like",
    "start": "594800",
    "end": "601279"
  },
  {
    "text": "this you're going to have a commit a change goes into your code you're going to need to do some kind of build",
    "start": "601279",
    "end": "606440"
  },
  {
    "text": "operation to um produce the binary artifact for for that change you're going to need to release that somewhere",
    "start": "606440",
    "end": "612480"
  },
  {
    "text": "that may be a a Docker image that you're pushing up to a Docker repo maybe a jar file that you're pushing somewhere maybe",
    "start": "612480",
    "end": "618959"
  },
  {
    "text": "a zip file that you're sending up to S3 to be the backing code for a Lambda um",
    "start": "618959",
    "end": "624399"
  },
  {
    "text": "there's a few different flavors of things that can happen there but it's a common pattern that it's always there's always going to be this release step and",
    "start": "624399",
    "end": "630240"
  },
  {
    "text": "then you've got some steps where you're actually doing the deployment to your individual cells now in actuality we probably want",
    "start": "630240",
    "end": "636839"
  },
  {
    "text": "something a little bit more sophisticated than that one of the reasons we would opt for cellular architecture in the first place is to",
    "start": "636839",
    "end": "643279"
  },
  {
    "text": "minimize the blast radius if um if something breaks and it just so happens",
    "start": "643279",
    "end": "648360"
  },
  {
    "text": "as you probably all are very familiar with that right after you deploy your code is a very common time for something",
    "start": "648360",
    "end": "654120"
  },
  {
    "text": "to break so um so what we've changed in the bottom part here is we've added this",
    "start": "654120",
    "end": "659720"
  },
  {
    "text": "step where we're actually going to deploy to a staging cell a pre-prod cell before we deploy to the to the real",
    "start": "659720",
    "end": "665120"
  },
  {
    "text": "cells that have customer traffic in them then we're going to add this bake step in the bake step is going to be",
    "start": "665120",
    "end": "670600"
  },
  {
    "text": "monitoring Canary canaries metrics other indicators of Health um so that it can",
    "start": "670600",
    "end": "676560"
  },
  {
    "text": "tell whether that deployment went smoothly or not and we're going to sit in that state for some amount of time",
    "start": "676560",
    "end": "681639"
  },
  {
    "text": "before we decide that it's safe to move on to actually deploy to our first production cell and then once we do",
    "start": "681639",
    "end": "687519"
  },
  {
    "text": "reach that point we can kind of just repeat those two steps out across all the different",
    "start": "687519",
    "end": "693519"
  },
  {
    "text": "cells um so we can talk about the different flavors of tech Stacks that we might have used for microservices and",
    "start": "693519",
    "end": "699880"
  },
  {
    "text": "what individual Technologies we might be able to use to achieve these this series of steps um and I'm going to be focusing",
    "start": "699880",
    "end": "707760"
  },
  {
    "text": "quite a bit on AWS tools just because that's um what we ended up using at momento um and it's easier to talk about",
    "start": "707760",
    "end": "715360"
  },
  {
    "text": "this stuff if I have some concrete examples to give but you can imagine swapping out almost any of these Technologies with something that fits",
    "start": "715360",
    "end": "721240"
  },
  {
    "text": "better for your environment uh so here we've got a uh an example of what tools we use to do this",
    "start": "721240",
    "end": "727200"
  },
  {
    "text": "cloud formation flavor of deployment so you've got AWS code pipeline at the beginning AWS code build to do the",
    "start": "727200",
    "end": "733600"
  },
  {
    "text": "actual build of the change then maybe we're publishing a Docker image to the elastic container registry then we call",
    "start": "733600",
    "end": "741079"
  },
  {
    "text": "AWS cloud formation to do the actual deploy to our staging cell then we use step function step functions are a",
    "start": "741079",
    "end": "747160"
  },
  {
    "text": "really cool thing to use for this baking step um because you can have a Lambda that just quickly checks all your metrics and",
    "start": "747160",
    "end": "753199"
  },
  {
    "text": "makees sure that everything looks healthy then it can just like go back to sleep for a while and the step function can just loop on it and allow it to keep",
    "start": "753199",
    "end": "759920"
  },
  {
    "text": "checking every so often and if it ever encounters a failure then it can just go ahead and kill everything right then let",
    "start": "759920",
    "end": "765880"
  },
  {
    "text": "your operators know that something's wrong and prevent that deployment from going any further down the pipeline but",
    "start": "765880",
    "end": "771880"
  },
  {
    "text": "if it reaches the allotted time interval that you configure for how long you want your bake to last um then it'll allow",
    "start": "771880",
    "end": "778199"
  },
  {
    "text": "the pipeline to proceed and then again we just repeat those same steps for the rest of the cells another cool thing you",
    "start": "778199",
    "end": "784240"
  },
  {
    "text": "can put into one of these bake steps is um if you want to limit your deployment so that they only happen during like a",
    "start": "784240",
    "end": "790720"
  },
  {
    "text": "certain set of business hours because you don't you want to reduce the risk that some breaking change rolls out in",
    "start": "790720",
    "end": "796000"
  },
  {
    "text": "the middle of the night you can B build that into your step function as well and say like hey is it after 600 p.m. right",
    "start": "796000",
    "end": "802079"
  },
  {
    "text": "now then we're going to just keep this bait going until tomorrow morning um and it's pretty easy to code stuff like that",
    "start": "802079",
    "end": "807600"
  },
  {
    "text": "up in a step function so here's the kubernetes flavor of the same thing we're using almost all the",
    "start": "807600",
    "end": "814040"
  },
  {
    "text": "same tools um except for instead of cloud formation maybe we just have a",
    "start": "814040",
    "end": "819240"
  },
  {
    "text": "Lambda that we call in that step and the Lambda is just making an API call to kubernetes letting it know that there's",
    "start": "819240",
    "end": "825440"
  },
  {
    "text": "a new Docker image available that it should do the deploy with then we can still use basically the same step",
    "start": "825440",
    "end": "831040"
  },
  {
    "text": "function Logic for the bake and then we just repeat that series of kubernetes calls and bakes for the rest of the",
    "start": "831040",
    "end": "837399"
  },
  {
    "text": "cells so we got basically this this this generalized list of steps that we know",
    "start": "837399",
    "end": "843600"
  },
  {
    "text": "need that we need to do to do all of our deployments and we have some flexibility here where they're almost the same even",
    "start": "843600",
    "end": "849519"
  },
  {
    "text": "though some of our technology Stacks um may be very different from one",
    "start": "849519",
    "end": "855360"
  },
  {
    "text": "another okay another thing another piece of the puzzle that we need for standardizing this stuff in order to",
    "start": "855360",
    "end": "861000"
  },
  {
    "text": "make it all fit together is we need a we need some standardized build targets for our different",
    "start": "861000",
    "end": "866920"
  },
  {
    "text": "microservices and I'm just using make files here there's a ton of ways you could solve this problem but make files",
    "start": "866920",
    "end": "872440"
  },
  {
    "text": "are pretty simple and they've been around forever and they work for this purpose just fine on the left you can",
    "start": "872440",
    "end": "877920"
  },
  {
    "text": "see a snippet from a make file for one of our two service microservices and on the right a snippet from a make file for",
    "start": "877920",
    "end": "884199"
  },
  {
    "text": "the other one if you can see the commands that are in here the ones on the left are doing some grad old calls",
    "start": "884199",
    "end": "889600"
  },
  {
    "text": "to build one of our cotland services and then some npm calls to build up the infrastructure the one on the right the",
    "start": "889600",
    "end": "896199"
  },
  {
    "text": "commands are very different it's calling cargo to build a rust service and then some shell scripts that build up the",
    "start": "896199",
    "end": "901240"
  },
  {
    "text": "infrastructure but the important Point here is that we have the same exact list of targets on both of these and so for",
    "start": "901240",
    "end": "907600"
  },
  {
    "text": "example we have a pipeline build Target here that is going to control what",
    "start": "907600",
    "end": "912800"
  },
  {
    "text": "happens in this build step um of of the the deployment process for that",
    "start": "912800",
    "end": "918600"
  },
  {
    "text": "particular service um and then we have like uh some targets for cell bootstrap",
    "start": "918600",
    "end": "924199"
  },
  {
    "text": "and gcp cell bootstrap because um for momento we can deploy to either AWS cells or gcp cells but again the make",
    "start": "924199",
    "end": "931519"
  },
  {
    "text": "Target names are the same so what this means is that other pieces of our infrastructure that are operating",
    "start": "931519",
    "end": "937440"
  },
  {
    "text": "outside of these Individual Services now have like this common life cycle that they know they can rely on EX the",
    "start": "937440",
    "end": "943839"
  },
  {
    "text": "existence of inside of each of the components that they need to to interact with when when we're doing things like",
    "start": "943839",
    "end": "951440"
  },
  {
    "text": "deploy uh one another building block uh place we can standardize is what I call",
    "start": "951600",
    "end": "957639"
  },
  {
    "text": "a cell registry this is just some mechanism for giving us a list of all of",
    "start": "957639",
    "end": "963199"
  },
  {
    "text": "the cells that we've created and the important bits of metadata about them so",
    "start": "963199",
    "end": "968319"
  },
  {
    "text": "here we did this in typescript we have about a 100 lines of typescript that just Define a few simple interfaces that",
    "start": "968319",
    "end": "974519"
  },
  {
    "text": "we can use to represent all of the data about ourselves um so we've got some DNS",
    "start": "974519",
    "end": "979639"
  },
  {
    "text": "config one interface that just has a little bit of DNS configuration and then the interface on the bottom left is probably the most important one it has",
    "start": "979639",
    "end": "986040"
  },
  {
    "text": "the information about a given cell so we have things like the scale the scale of the cell is this a prod cell or a",
    "start": "986040",
    "end": "992319"
  },
  {
    "text": "developer cell that kind of thing regen DNS config and then cloud provider",
    "start": "992319",
    "end": "997600"
  },
  {
    "text": "config is where we control whether it's an AWS cell or a gcp cell so this is just a way of modeling all the metadata",
    "start": "997600",
    "end": "1004000"
  },
  {
    "text": "that we need to know about a given cell and then on the right we have a bigger interface that represents our entire",
    "start": "1004000",
    "end": "1011000"
  },
  {
    "text": "like momento organization and the important piece I want to highlight from that one is basically we just have an array there called sell accounts that",
    "start": "1011000",
    "end": "1018000"
  },
  {
    "text": "just has a list of of these um the cells and the metadata btom so this is just a simple data model nothing fancy about it",
    "start": "1018000",
    "end": "1025880"
  },
  {
    "text": "this is an example of like the actual data that we're using that model to create so when we have a new cell that",
    "start": "1025880",
    "end": "1032520"
  },
  {
    "text": "we want to add we come in here and we adjust this array and we add the new cell we have a name for it in this case it's Alpha we add an account ID region",
    "start": "1032520",
    "end": "1040038"
  },
  {
    "text": "DNS config just a simple representation of the metadata that we need to know about that cell so now we have all this",
    "start": "1040039",
    "end": "1047360"
  },
  {
    "text": "data about our cells all we need to do is just publish it somewhere that we can make it accessible from the rest of our",
    "start": "1047360",
    "end": "1053440"
  },
  {
    "text": "infrastructure um you could do something really fancy with this you could put it in a database if you wanted to there's lots of stuff you could do with it to",
    "start": "1053440",
    "end": "1059400"
  },
  {
    "text": "make it accessible from other parts of your code uh in our case we didn't need anything that sophisticated so we",
    "start": "1059400",
    "end": "1064600"
  },
  {
    "text": "literally just save this data to S3 and then we have a library where we can suck this this data down and um basically",
    "start": "1064600",
    "end": "1072559"
  },
  {
    "text": "turn it back into the typescript object as a library uh in a library a typescript library so that means that",
    "start": "1072559",
    "end": "1078840"
  },
  {
    "text": "any of the rest of our infrastructure at any time can basically just use that library to pull down all of the metadata",
    "start": "1078840",
    "end": "1084720"
  },
  {
    "text": "about all of our cell and that allows us to start building some generalization patterns that uh allow us to to do a lot",
    "start": "1084720",
    "end": "1090960"
  },
  {
    "text": "of cool things uh in managing ourselves okay last piece of",
    "start": "1090960",
    "end": "1096480"
  },
  {
    "text": "standardization that I wanted to talk about uh we have a thing that we call the cell bootstrap script so we've",
    "start": "1096480",
    "end": "1101919"
  },
  {
    "text": "talked about how your application is probably made up of several microservices there's probably a few",
    "start": "1101919",
    "end": "1107600"
  },
  {
    "text": "other things that make your application as well like some core infrastructure like uh networking things shared",
    "start": "1107600",
    "end": "1113919"
  },
  {
    "text": "networking components like vpcs not gateways maybe some shared database resources you may also have like in our",
    "start": "1113919",
    "end": "1120919"
  },
  {
    "text": "case we also have a separate little project where we can keep the infrastructure code for our DNS records",
    "start": "1120919",
    "end": "1126960"
  },
  {
    "text": "um DNS records are a much more risky type of resource to change than almost anything else so we like to keep them",
    "start": "1126960",
    "end": "1134000"
  },
  {
    "text": "separated into in their own project we have more a little bit more control over but the end of the day we have you know",
    "start": "1134000",
    "end": "1140240"
  },
  {
    "text": "this list of git repos that each has some component that is a part of our application if you're a company that",
    "start": "1140240",
    "end": "1145799"
  },
  {
    "text": "uses mono repos these might be all in the same git repo together and just be in different directories but the the",
    "start": "1145799",
    "end": "1151000"
  },
  {
    "text": "concept still probably the same so now that we know this we can create with the",
    "start": "1151000",
    "end": "1157080"
  },
  {
    "text": "other building blocks we've talked about we can create this cell bootstrap script that's just this really simple and naive",
    "start": "1157080",
    "end": "1163280"
  },
  {
    "text": "and generic way to do to take actions across um an entire cell and so what",
    "start": "1163280",
    "end": "1169440"
  },
  {
    "text": "I've got here is uh one line of code that just pulls the metadata out of our cell registry for a given cell so now I",
    "start": "1169440",
    "end": "1176440"
  },
  {
    "text": "know the AWS account ID and the DNS information and stuff like that and then I've got a line of code that um just",
    "start": "1176440",
    "end": "1183799"
  },
  {
    "text": "checks out a copy of all the source code from those git repos and then we've got a loop we just Loop over the git repos",
    "start": "1183799",
    "end": "1190320"
  },
  {
    "text": "in the correct order and for each one we run this make Target called cell bootstrap so with this simple little",
    "start": "1190320",
    "end": "1197159"
  },
  {
    "text": "five lines of code I now have this super generic way to just walk through all of the components of my application",
    "start": "1197159",
    "end": "1203559"
  },
  {
    "text": "and deploy a new cell of it um and this is really generic and really extensible as we add new components to the",
    "start": "1203559",
    "end": "1211360"
  },
  {
    "text": "system okay so now we've got some standardized building blocks that we can use to go back and solve these five",
    "start": "1211360",
    "end": "1216600"
  },
  {
    "text": "problems that I originally brought up we will start off with isolation you probably heard this in several other",
    "start": "1216600",
    "end": "1222799"
  },
  {
    "text": "talks probably a lot of you are already doing this but we found that the best way to isolate cells is to create sep",
    "start": "1222799",
    "end": "1228840"
  },
  {
    "text": "AWS accounts for each cell um that can sound daunting at first if you've never done it before because you can end up",
    "start": "1228840",
    "end": "1234360"
  },
  {
    "text": "with a really long list of AWS accounts um but the tooling around it is actually pretty mature these days and um and the",
    "start": "1234360",
    "end": "1242039"
  },
  {
    "text": "strengths I think pretty strongly outweigh the uh the disadvantages this is also a pretty common pattern inside",
    "start": "1242039",
    "end": "1247840"
  },
  {
    "text": "of AWS um so the the main reason in my mind",
    "start": "1247840",
    "end": "1254240"
  },
  {
    "text": "the the main most compelling motivation for this is that you basically just get the isolation for free when you create a",
    "start": "1254240",
    "end": "1259760"
  },
  {
    "text": "new AWS account and deploy a cell in it it's just isolated by default you would have to do some extra work on your end",
    "start": "1259760",
    "end": "1266320"
  },
  {
    "text": "to break the isolation from the from a that cell to one that existed in another AWS account it's certainly possible to",
    "start": "1266320",
    "end": "1274559"
  },
  {
    "text": "create two cells in the same AWS account together but when you do that you're opting into figuring out the isolation",
    "start": "1274559",
    "end": "1281919"
  },
  {
    "text": "story on your own which usually involves a bunch of messing around with IM am policies to try to make sure that the",
    "start": "1281919",
    "end": "1288039"
  },
  {
    "text": "resources in between the two cells uh don't don't have permission to interact with one another and that can be pretty",
    "start": "1288039",
    "end": "1294120"
  },
  {
    "text": "tricky to get right can I get a quick show of hands in the audience anybody who has spent time creating and managing",
    "start": "1294120",
    "end": "1300360"
  },
  {
    "text": "I am policies in AWS before okay quite a few hands can uh keep your hand up for a moment if you",
    "start": "1300360",
    "end": "1306840"
  },
  {
    "text": "just raise it keep your hand up for a moment now um keep it up if you have found that that task to be fun and",
    "start": "1306840",
    "end": "1315480"
  },
  {
    "text": "easy zero okay I knew I was going to below I wasn't sure it was going to be zero yeah so that by itself is just a",
    "start": "1315480",
    "end": "1322159"
  },
  {
    "text": "really compelling advantage to do it this way you just don't have to mess with the IM am stuff um another really compelling",
    "start": "1322159",
    "end": "1330080"
  },
  {
    "text": "Advantage is you get the same benefit on the building side um if you've never",
    "start": "1330080",
    "end": "1335360"
  },
  {
    "text": "used AWS organizations before um they actually they actually the tools on this are pretty mature now you can create",
    "start": "1335360",
    "end": "1341919"
  },
  {
    "text": "these hierarchies for your accounts so we have like a folder called cell that we put our cell accounts in and then one",
    "start": "1341919",
    "end": "1347400"
  },
  {
    "text": "called developer that we put accounts in for our individual developers um uh and there's apis for all of this",
    "start": "1347400",
    "end": "1354799"
  },
  {
    "text": "so you can manage all of this stuff Pro programmatically as well um but uh once",
    "start": "1354799",
    "end": "1360200"
  },
  {
    "text": "you have all these accounts in your AWS organization together uh you can go to the building screen you can go to cost",
    "start": "1360200",
    "end": "1366320"
  },
  {
    "text": "Explorer and you can do a group buy uh on the linked accounts and that gives you just like for free a way to see the",
    "start": "1366320",
    "end": "1372880"
  },
  {
    "text": "relative cost of all of your different cells right there against each other so you can see if one standing out is",
    "start": "1372880",
    "end": "1378039"
  },
  {
    "text": "costing more than others again you can implement this yourself if you put two cells in the same AWS account together",
    "start": "1378039",
    "end": "1385159"
  },
  {
    "text": "but then it's on you you have to put tags on all of the resources and then come into this cost Explorer and set up",
    "start": "1385159",
    "end": "1391679"
  },
  {
    "text": "a query to group by the tags and if you make any subtle mistakes and how you're tagging the resources then your your",
    "start": "1391679",
    "end": "1397600"
  },
  {
    "text": "billing data might not be quite right so here you just get it for free so that's why we went with um um accounts for",
    "start": "1397600",
    "end": "1405120"
  },
  {
    "text": "isolation another problem you have to solve that deals with isolation is is routing you have to have a way for",
    "start": "1405120",
    "end": "1411600"
  },
  {
    "text": "traffic to get into these cells right um and so this a simple way to do it and",
    "start": "1411600",
    "end": "1417760"
  },
  {
    "text": "one that works well for us at momento is just you know when you create a new cell just create a new DNS name for it so you",
    "start": "1417760",
    "end": "1423919"
  },
  {
    "text": "can see in my DNS names up there they've got the region but they've also got effectively a cell ID a one and a two in",
    "start": "1423919",
    "end": "1429600"
  },
  {
    "text": "the DNS name and so that that's a really simple there's no routing problems involved there uh this works for us",
    "start": "1429600",
    "end": "1437039"
  },
  {
    "text": "because all of our customers inter interact with our services using um sdks that we provide to them so we can kind",
    "start": "1437039",
    "end": "1442679"
  },
  {
    "text": "of bake some information about what sell a certain customer is supposed to be in into this off token that we provide them",
    "start": "1442679",
    "end": "1448960"
  },
  {
    "text": "and then they use our sdks to access the service and we can figure out the right DNS name for the cell that they're in so",
    "start": "1448960",
    "end": "1454120"
  },
  {
    "text": "they never see any of it but we get them routed to the cell that we want them to be in this won't work for all use cases",
    "start": "1454120",
    "end": "1460080"
  },
  {
    "text": "though um if you have an app that people are just accessing from a browser you don't want to have to give out 100",
    "start": "1460080",
    "end": "1466200"
  },
  {
    "text": "different cell URLs to all of your customers and make sure that they pick the right one in their browser so you",
    "start": "1466200",
    "end": "1471279"
  },
  {
    "text": "can't do it that way so in that case you've got to have a single DNS name that's kind of in front of multiple",
    "start": "1471279",
    "end": "1477039"
  },
  {
    "text": "cells and you got to build in this extra routing layer that knows how to take those requests and map them to the right",
    "start": "1477039",
    "end": "1483559"
  },
  {
    "text": "cell um you want this layer to be as thin as humanly possible um it shouldn't",
    "start": "1483559",
    "end": "1489279"
  },
  {
    "text": "do anything other than just the simplest possible routing there's pros and cons to this approach the cons are obviously",
    "start": "1489279",
    "end": "1495799"
  },
  {
    "text": "it's another piece of your infrastructure you have to maintain and another place where something can go wrong um another con of it is that it",
    "start": "1495799",
    "end": "1504000"
  },
  {
    "text": "impacts your scalability story so you might have a database in your cell that",
    "start": "1504000",
    "end": "1509279"
  },
  {
    "text": "you know can only scale horizontally to a certain extent and then that's kind of the maximum capacity that that cell",
    "start": "1509279",
    "end": "1515320"
  },
  {
    "text": "might ever be able to have and that's not necessarily a business problem for you because you could just spin up",
    "start": "1515320",
    "end": "1520399"
  },
  {
    "text": "another cell when you're getting close to capacity on that one um and so you can build out more sales and scale",
    "start": "1520399",
    "end": "1526000"
  },
  {
    "text": "horizontally by adding new cells and they're independent of one another but as soon as you have to put this routing layer in now it has to be able to scale",
    "start": "1526000",
    "end": "1533120"
  },
  {
    "text": "to handle however many celles you're putting in there so it's just one more thing you got to think about about scaling um Pros though uh one big Pro of",
    "start": "1533120",
    "end": "1541240"
  },
  {
    "text": "this approach is if you ever have a situation where you need to migrate A customer from one cell to another",
    "start": "1541240",
    "end": "1547120"
  },
  {
    "text": "without them knowing about it or being involved in it this routing layer gives you a place in your own code that you",
    "start": "1547120",
    "end": "1553880"
  },
  {
    "text": "control where you can write some code that does that it's it's not an easy problem to solve depending on what kind",
    "start": "1553880",
    "end": "1560279"
  },
  {
    "text": "of data you need to migrate Etc but it gives you a mechanism that you can possibly achieve that without your",
    "start": "1560279",
    "end": "1565960"
  },
  {
    "text": "customer knowing about it whereas in this architecture like you have to give switch them over on the client side and",
    "start": "1565960",
    "end": "1573039"
  },
  {
    "text": "so um there's you're probably going to have to involve the customer more so that can be a business decision as which",
    "start": "1573039",
    "end": "1579279"
  },
  {
    "text": "of these two works better for you okay so that's isolation we solved it with AWS accounts and AWS orgs and",
    "start": "1579279",
    "end": "1587480"
  },
  {
    "text": "then either sell end points or a routing layer move on to new cells this one's",
    "start": "1587480",
    "end": "1593000"
  },
  {
    "text": "going to be really fast based on the building blocks that we talked about earlier all we have to do is create a",
    "start": "1593000",
    "end": "1598039"
  },
  {
    "text": "new AWS account in our organization add that to our account registry and then run our cell bootstrap",
    "start": "1598039",
    "end": "1604559"
  },
  {
    "text": "script and that's it and we have a new cell um again the components that make the cell bootstrap script work we've got",
    "start": "1604559",
    "end": "1610880"
  },
  {
    "text": "this data on the left in the account registry that gives us all the information about the cell on the right",
    "start": "1610880",
    "end": "1616440"
  },
  {
    "text": "we've got the standardized make file system where all of the components of our service have the same build targets and then at the bottom we've got the",
    "start": "1616440",
    "end": "1622919"
  },
  {
    "text": "actual cell bootstrap code that's able to just Loop over those components and call the make targets um so this gives us a super easy",
    "start": "1622919",
    "end": "1630480"
  },
  {
    "text": "and fast way to spin up new cells uh so now we can move on to",
    "start": "1630480",
    "end": "1636039"
  },
  {
    "text": "deployments and this is going to be the medi part of the talk probably um so this is where I'm ty back",
    "start": "1636039",
    "end": "1642520"
  },
  {
    "text": "into those early silly slides that I had about um infrastructure as as code and automation um I like to call the trends",
    "start": "1642520",
    "end": "1650240"
  },
  {
    "text": "that have been happening in in infrastructure as code in the last few years i++ because I'm a dork um and um but I",
    "start": "1650240",
    "end": "1660320"
  },
  {
    "text": "think the the big breakthrough that's been happening is that we're starting to have all of these tools at our disposal",
    "start": "1660320",
    "end": "1665360"
  },
  {
    "text": "to Define our infrastructure using real programming languages so before it was always like a big ball of yaml or a big",
    "start": "1665360",
    "end": "1671279"
  },
  {
    "text": "ball of Json or a big ball of hashy corpse config language that could get really long and really tedious and then",
    "start": "1671279",
    "end": "1677320"
  },
  {
    "text": "people started trying to bolt on these Solutions where you could use like template engines or these other like bespoke tools to be able to do loops and",
    "start": "1677320",
    "end": "1685399"
  },
  {
    "text": "reuse some of your code but it was always kind of it always kind of felt to me like I was coding with one hand",
    "start": "1685399",
    "end": "1691039"
  },
  {
    "text": "behind my back tied behind my back because there was all these all these constructs already exist in your programming languages that you're using",
    "start": "1691039",
    "end": "1696919"
  },
  {
    "text": "to build your application so why do we have to invent new ones for the infrastructure as code um so in 2019 AWS",
    "start": "1696919",
    "end": "1705360"
  },
  {
    "text": "released the cloud development kit cdk which is the first time that you could use basically your favorite programming",
    "start": "1705360",
    "end": "1711279"
  },
  {
    "text": "language to produce cloud formation infrastructure and it's really powerful and I was very excited when this",
    "start": "1711279",
    "end": "1717360"
  },
  {
    "text": "happened a year later they released CD Kates which is basically the same thing same similar syntax but it works for",
    "start": "1717360",
    "end": "1724720"
  },
  {
    "text": "kubernetes environments instead of cloud formation environments then in 2021 they did what",
    "start": "1724720",
    "end": "1731000"
  },
  {
    "text": "I think might have been the coolest contribution that AWS has made to open source in quite a while which is they",
    "start": "1731000",
    "end": "1737640"
  },
  {
    "text": "pulled this common Library called constructs out of those two projects and it has all the underpinnings for",
    "start": "1737640",
    "end": "1743760"
  },
  {
    "text": "managing these graphs of resource dependencies but it's not tied to a",
    "start": "1743760",
    "end": "1749159"
  },
  {
    "text": "specific deployment technology so it's a building block that people can use to build their own and so pretty quickly",
    "start": "1749159",
    "end": "1755120"
  },
  {
    "text": "after that Hashi Corp released cdk TF which is cdk for terraform it gives you",
    "start": "1755120",
    "end": "1760679"
  },
  {
    "text": "the same programming constructs but for your terraform infrastructure so with these um with",
    "start": "1760679",
    "end": "1766600"
  },
  {
    "text": "these tools now at our disposal um there's a lot more stuff that we can do to like generalize our infrastructure",
    "start": "1766600",
    "end": "1773080"
  },
  {
    "text": "code across these repetitive things like cells so this is back to my original",
    "start": "1773080",
    "end": "1779799"
  },
  {
    "text": "silly slide um on the left is a giant ball of Json that has um part of an IM",
    "start": "1779799",
    "end": "1787440"
  },
  {
    "text": "am policy for an S3 bucket uh the at the bottom you can see I had to cut about",
    "start": "1787440",
    "end": "1793120"
  },
  {
    "text": "200 lines out of this so that it would even remotely fit onto this slide um on the right you see the the same thing",
    "start": "1793120",
    "end": "1798880"
  },
  {
    "text": "with cdk typescript um so in typescript I'm able to just create this array called org principles that has all the",
    "start": "1798880",
    "end": "1805600"
  },
  {
    "text": "organizations that I need to manage these permissions for and then just Loop over them with a regular typescript Loop",
    "start": "1805600",
    "end": "1810840"
  },
  {
    "text": "and call Grant read to give them access to the bucket uh and then this is probably the",
    "start": "1810840",
    "end": "1817480"
  },
  {
    "text": "most powerful thing in my mind is that you can create libraries now that have these chunks of code in them that you um",
    "start": "1817480",
    "end": "1824880"
  },
  {
    "text": "can you can use and distribute in exactly the same way as you would with any other library that you're using in",
    "start": "1824880",
    "end": "1830360"
  },
  {
    "text": "your application so here I've got um some cdk typescript code it's not super",
    "start": "1830360",
    "end": "1835440"
  },
  {
    "text": "important the contents of it but it's a class called otel Gateway which is an open Telemetry Gateway that extends this",
    "start": "1835440",
    "end": "1843399"
  },
  {
    "text": "constru thing that AWS provided for us and in the class all I'm doing is just building up this group of resources that",
    "start": "1843399",
    "end": "1849519"
  },
  {
    "text": "makes an Hotel Gateway so there's a security group an Ingress rule later on you would see like an Autos scaling",
    "start": "1849519",
    "end": "1855480"
  },
  {
    "text": "group and a few other things that we need for our oel Gateway way so I can write this little bit of code and put it in a library and then just release it to",
    "start": "1855480",
    "end": "1862200"
  },
  {
    "text": "the same place that I would release any other typescript library that we were using for our application in our case",
    "start": "1862200",
    "end": "1867279"
  },
  {
    "text": "that's to AWS code artifact but it could just as easily be in pmjs or an artifactory server wherever you store",
    "start": "1867279",
    "end": "1874039"
  },
  {
    "text": "your binary binary artifacts and you and this isn't limited to typescript you could do this in Java or um python a bun",
    "start": "1874039",
    "end": "1882120"
  },
  {
    "text": "they have support for most of the popular programming languages so wherever you store your libraries you",
    "start": "1882120",
    "end": "1887639"
  },
  {
    "text": "just put this create a library put this stuff in there and then from anywhere else in your infrastructure you can just",
    "start": "1887639",
    "end": "1893559"
  },
  {
    "text": "like call new otel Gateway and it'll create all those resources in that part of your infrastructure so it's the first",
    "start": "1893559",
    "end": "1899960"
  },
  {
    "text": "time that we can really reuse all of the same programming constructs that we are already using for our applications but",
    "start": "1899960",
    "end": "1905399"
  },
  {
    "text": "now for our infrastructure so now we're going to revisit this diagram we're trying to figure out how to achieve these steps",
    "start": "1905399",
    "end": "1912240"
  },
  {
    "text": "for all of the different components of our services even if they have slightly different Tech Stacks involved in them",
    "start": "1912240",
    "end": "1919320"
  },
  {
    "text": "so with the cdk code what I can do is I can create an AWS code pipeline just by",
    "start": "1919320",
    "end": "1925120"
  },
  {
    "text": "constructing this object and then I can call so I have this array called stages",
    "start": "1925120",
    "end": "1931000"
  },
  {
    "text": "and I can call stages. for each and then just add each stage to the pipeline so the interesting part of this",
    "start": "1931000",
    "end": "1937240"
  },
  {
    "text": "is not on the screen it's how did I populate that stage's variable but basically what that stages variable has",
    "start": "1937240",
    "end": "1942519"
  },
  {
    "text": "in it is that list of steps that you see right there on the bottom um and so",
    "start": "1942519",
    "end": "1949080"
  },
  {
    "text": "here is an example of a piece of code this is probably too small to read for some of you on the back but um it's not",
    "start": "1949080",
    "end": "1954919"
  },
  {
    "text": "super important the function here is called cach service stages and this is the function that's responsible for",
    "start": "1954919",
    "end": "1961720"
  },
  {
    "text": "providing that list of stages for one of our microservices and again here we've just",
    "start": "1961720",
    "end": "1968279"
  },
  {
    "text": "created a simple typescript interface that we can use to represent the differences between our different",
    "start": "1968279",
    "end": "1973880"
  },
  {
    "text": "services so I've got this array here called releases and that is going to going to control what happens in this",
    "start": "1973880",
    "end": "1979639"
  },
  {
    "text": "releasee stage right here and in this one all I'm doing is one Docker release I could have done more Docker releases",
    "start": "1979639",
    "end": "1985440"
  },
  {
    "text": "or an S3 release or whatever by just adding them to this array but uh for this one I just got this one Docker file",
    "start": "1985440",
    "end": "1991799"
  },
  {
    "text": "um and then the rest of our like generic infrastructure code when it's building stuff can just read this and be like",
    "start": "1991799",
    "end": "1997240"
  },
  {
    "text": "okay I need to add a Docker step here to then I've got uh an array called stacks",
    "start": "1997240",
    "end": "2003159"
  },
  {
    "text": "and we have one stack for if we're deploying to an AWS cell and it's a cloud formation stack",
    "start": "2003159",
    "end": "2008320"
  },
  {
    "text": "and one stack if we're deploying to a gcp cell and it's a terraform stack um and again this is just capturing the",
    "start": "2008320",
    "end": "2015399"
  },
  {
    "text": "things that are important about this one microservice for its deployment life cycle so then all of the generic code",
    "start": "2015399",
    "end": "2022639"
  },
  {
    "text": "that we have in the rest of our uh repo can kind of just Loop over this and do all the hard work so we actually have",
    "start": "2022639",
    "end": "2028279"
  },
  {
    "text": "this one repo that we call pipeline of pipelines and it's whole job is to build",
    "start": "2028279",
    "end": "2033320"
  },
  {
    "text": "a deployment pipeline for each of the other components in our service so when it runs it creates a pipeline that",
    "start": "2033320",
    "end": "2039399"
  },
  {
    "text": "deploys our DNS stuff uh one that deploys our core infrastructure and then one for each microservice and each one",
    "start": "2039399",
    "end": "2045240"
  },
  {
    "text": "of those pipelines that it produces just looks exactly like this except for with you know the sight",
    "start": "2045240",
    "end": "2050638"
  },
  {
    "text": "slight differences if it's a kubernetes stack versus if it's a cloud formation stack Etc um",
    "start": "2050639",
    "end": "2058638"
  },
  {
    "text": "so that means we have one repo that has all of our pipeline infrastructure code in it that means it's really easy to",
    "start": "2058639",
    "end": "2064358"
  },
  {
    "text": "know where to go if you need to change something about how we're deploying it also means if you're a person an",
    "start": "2064359",
    "end": "2069599"
  },
  {
    "text": "engineer who cares a lot about what's happening in that repo you only have one place to keep your eyes on to make sure",
    "start": "2069599",
    "end": "2074800"
  },
  {
    "text": "you know when important changes are happening there uh it allows us to reuse deployment steps across all the",
    "start": "2074800",
    "end": "2081158"
  },
  {
    "text": "different projects so I only have to build this code that creates a Docker release step one time and then I can",
    "start": "2081159",
    "end": "2086599"
  },
  {
    "text": "just reuse that in the pipeline for all the different services that need to do a Docker release and it gives us a single source",
    "start": "2086599",
    "end": "2093480"
  },
  {
    "text": "of Truth for the deployment order across all of our different um Pipelines",
    "start": "2093480",
    "end": "2098960"
  },
  {
    "text": "so this is another little data structure that exists in that repo and basically what's happened here is we pulled all",
    "start": "2098960",
    "end": "2104320"
  },
  {
    "text": "the cell information out of the account registry and so we have a variable for each of the cells that we want to deploy",
    "start": "2104320",
    "end": "2110200"
  },
  {
    "text": "to and we're dividing them up into waves so at the top in the first wave we have",
    "start": "2110200",
    "end": "2115480"
  },
  {
    "text": "a wave that includes our AWS Alpha cell and our gcp Alpha cell those are our pre-prod cells where we just test things",
    "start": "2115480",
    "end": "2121960"
  },
  {
    "text": "out before they go to prod then the second wave deploys to one prod cell um",
    "start": "2121960",
    "end": "2127040"
  },
  {
    "text": "one that doesn't have a ton of traffic so that if there's a problem there then we're not impacting that many customers",
    "start": "2127040",
    "end": "2132400"
  },
  {
    "text": "and then we just keep adding waves as needed that expand to the rest of the more higher traffic production cells so",
    "start": "2132400",
    "end": "2139560"
  },
  {
    "text": "this little data structure is defined in one place in the code and then it's used to build all of those pipelines out so",
    "start": "2139560",
    "end": "2144599"
  },
  {
    "text": "that they all have the same exact St set of um of stages and they're deploying to",
    "start": "2144599",
    "end": "2150280"
  },
  {
    "text": "the cells in the same order as one another so that's kind of how we solved that deployment part we have we use our",
    "start": "2150280",
    "end": "2156280"
  },
  {
    "text": "account registry and and cdk and AWS code pipelines and this kind of standardization that we've come up with",
    "start": "2156280",
    "end": "2162640"
  },
  {
    "text": "for the deployment patterns okay so permissions um for",
    "start": "2162640",
    "end": "2167720"
  },
  {
    "text": "managing permissions into and out of the cell we actually rely pretty heavily on aws's SSO which I believe that they have",
    "start": "2167720",
    "end": "2175200"
  },
  {
    "text": "renamed to Imam identity Center but that's a lot harder to say and I always forget it so I still call it SSO this is",
    "start": "2175200",
    "end": "2182200"
  },
  {
    "text": "like if you haven't seen this before this is the splash page for SSO if you're using AWS orgs and you have a",
    "start": "2182200",
    "end": "2188520"
  },
  {
    "text": "whole bunch of different accounts that you want to get into you can come to the splash page and it'll show you all the",
    "start": "2188520",
    "end": "2193920"
  },
  {
    "text": "accounts that you have access to and what roles you have in them and you can log into individual accounts",
    "start": "2193920",
    "end": "2200880"
  },
  {
    "text": "um uh and you can see here we've got our cell accounts and also our developer accounts and we were able to tie this",
    "start": "2200880",
    "end": "2206880"
  },
  {
    "text": "into our Google identity so that actually how our developers access this page is just through their Google",
    "start": "2206880",
    "end": "2212800"
  },
  {
    "text": "identity SSO which is pretty convenient and this also this this also works on",
    "start": "2212800",
    "end": "2218000"
  },
  {
    "text": "the command line and in the um in the SD case too you don't it isn't limited to just the web so this is a really handy",
    "start": "2218000",
    "end": "2224880"
  },
  {
    "text": "tool it also has API so you can automate the management of these roles and stuff",
    "start": "2224880",
    "end": "2230319"
  },
  {
    "text": "um this is an example of what it looks like if you go into the management screen for one particular account so",
    "start": "2230319",
    "end": "2235880"
  },
  {
    "text": "this cell account we can see what users have access to it and what roles they have access to um we have a readon role and then we",
    "start": "2235880",
    "end": "2243800"
  },
  {
    "text": "have a cell operator role that has a little bit of extra permissions for our um develop ERS to access logs and stuff",
    "start": "2243800",
    "end": "2249520"
  },
  {
    "text": "like that so the account registry has all of",
    "start": "2249520",
    "end": "2254599"
  },
  {
    "text": "the information in it about all the cells and all the developers and that's all we really need in order to automate",
    "start": "2254599",
    "end": "2260119"
  },
  {
    "text": "the management of the permissions for all of the cells both inbound and outbound so in terms of outbounds we can",
    "start": "2260119",
    "end": "2267319"
  },
  {
    "text": "just Loop over the cell accounts in our cdk code we just get the data from our account registry and loop over them and",
    "start": "2267319",
    "end": "2273680"
  },
  {
    "text": "we can set up all the permissions that we need to to give them access to the ECR images or to a private VPC or",
    "start": "2273680",
    "end": "2280640"
  },
  {
    "text": "whatever um and in the other direction um we can Loop overall the developers in",
    "start": "2280640",
    "end": "2286680"
  },
  {
    "text": "the cell registry and give them all access to access the logs the the logs and stuff in the in the cell",
    "start": "2286680",
    "end": "2292760"
  },
  {
    "text": "accounts so that's all we really did for permissions um for monitoring this one's",
    "start": "2292760",
    "end": "2298079"
  },
  {
    "text": "really simple there's nothing really fancy about what we've done here but um the key thing is you need to make sure",
    "start": "2298079",
    "end": "2304160"
  },
  {
    "text": "that your cell name is is a dimension on all of your metrics um you need a way to centralize your",
    "start": "2304160",
    "end": "2310480"
  },
  {
    "text": "metrics across multiple accounts so you're not having to go look into every account to see what the metrics look like if you're using cloudwatch metrics",
    "start": "2310480",
    "end": "2317920"
  },
  {
    "text": "there's a way that you can set up a central cloudwatch account that's pulling metrics in from other accounts",
    "start": "2317920",
    "end": "2324440"
  },
  {
    "text": "um we're not using cloudwatch metrics it wasn't the best fit for our use cases um so but there's tons of third party",
    "start": "2324440",
    "end": "2330079"
  },
  {
    "text": "solutions for this as well data dog New Relic we're using light step uh so as long as you have a way to configure the",
    "start": "2330079",
    "end": "2336319"
  },
  {
    "text": "code in your C to be emitting that the metrics data to a common location and",
    "start": "2336319",
    "end": "2341839"
  },
  {
    "text": "then as long as that metric Sync has a way for you to group by the cell Dimensions which which they all will um",
    "start": "2341839",
    "end": "2348680"
  },
  {
    "text": "so this is what one of our light step dashboards looks like uh in this screenshot I've moused over a traffic",
    "start": "2348680",
    "end": "2355160"
  },
  {
    "text": "Spike from one of our services and I can see in the tool tip that it was in our Us East one cell because I emitted that",
    "start": "2355160",
    "end": "2361720"
  },
  {
    "text": "as a dimension that I'm able to group by here and then in the background you can kind of see some faded lines um that",
    "start": "2361720",
    "end": "2368200"
  },
  {
    "text": "lights up gray out because I was focused on this one but um those are all traffic",
    "start": "2368200",
    "end": "2374160"
  },
  {
    "text": "data from other cells so nothing super fancy here and those are the five things that",
    "start": "2374160",
    "end": "2379560"
  },
  {
    "text": "we were trying to achieve uh and that's kind of the patterns that we used to solve those problems at momento a few",
    "start": "2379560",
    "end": "2385760"
  },
  {
    "text": "additional side benefits I want to mention the ability to add new cells as quickly as what I described in this cell",
    "start": "2385760",
    "end": "2392040"
  },
  {
    "text": "automation script is is a pretty big thing for business agility if you have a big customer that comes in and like you",
    "start": "2392040",
    "end": "2397720"
  },
  {
    "text": "know what I really we really want to use you guys but we have a production workload that needs to go in this particular aw region like this week um",
    "start": "2397720",
    "end": "2406760"
  },
  {
    "text": "if you can't build the cell quick if you don't already have a presence in that region which we don't have a presence in",
    "start": "2406760",
    "end": "2412319"
  },
  {
    "text": "every region because we're startup um like the ability to say yes we can do",
    "start": "2412319",
    "end": "2417440"
  },
  {
    "text": "that for you by spinning up this cell in a matter of hours is huge for business agility and it might win us a deal that",
    "start": "2417440",
    "end": "2423560"
  },
  {
    "text": "we might not be able to win otherwise quick side note um some of the previous places that I worked that did have",
    "start": "2423560",
    "end": "2429240"
  },
  {
    "text": "cellular architecture even AWS uh the way that we deployed new cells there was we had the spread sheet",
    "start": "2429240",
    "end": "2435760"
  },
  {
    "text": "that had like 200 lines of manual steps that you needed to perform to build up the new cell go into this account create",
    "start": "2435760",
    "end": "2442440"
  },
  {
    "text": "a new Dynamo table whatever and whenever we had a new cell that we need to bring up because a customer was asking for it",
    "start": "2442440",
    "end": "2450000"
  },
  {
    "text": "some poor soul on the engineering team would get handed the spreadsheet and be like this is what you're doing for the next two weeks and they would have to",
    "start": "2450000",
    "end": "2456760"
  },
  {
    "text": "just kind of walk through all these manual steps one at a time and every time that happened one of these steps would fail somewhere and they'd have to",
    "start": "2456760",
    "end": "2462880"
  },
  {
    "text": "back up five steps and redo some things uh to get to the Finish Line in two weeks so this power is really valuable",
    "start": "2462880",
    "end": "2469760"
  },
  {
    "text": "especially if you're a smaller company where agility can make a big difference uh likewise it means that if we have a",
    "start": "2469760",
    "end": "2475720"
  },
  {
    "text": "big customer that we know that their load is going to be really big and we want to make sure it's isolated from other customers we can spend up S single",
    "start": "2475720",
    "end": "2483079"
  },
  {
    "text": "tenant cells really quickly or if they need like a private link to their VPC we can spin that up and not have to do it",
    "start": "2483079",
    "end": "2489079"
  },
  {
    "text": "in a public Cale but then this is my favorite benefit of this um this pattern",
    "start": "2489079",
    "end": "2495400"
  },
  {
    "text": "allows your developers to spin up a whole copy of a cell in their own Dev account sometimes when you're trying to",
    "start": "2495400",
    "end": "2502280"
  },
  {
    "text": "debug something that has to do with an interaction between two different components of your infrastructure it it",
    "start": "2502280",
    "end": "2508319"
  },
  {
    "text": "can be almost impossible to do that like on your laptop really the only place you can debug some of those kinds of things",
    "start": "2508319",
    "end": "2514400"
  },
  {
    "text": "is like in an actual working environment and a lot of companies will try to solve that by having this big shared Dev",
    "start": "2514400",
    "end": "2520240"
  },
  {
    "text": "environment that everybody can poke around in together but inevitably when you take that approach two developers",
    "start": "2520240",
    "end": "2526000"
  },
  {
    "text": "start trying to use it at the same time and one breaks something that that this person was trying to use and the other",
    "start": "2526000",
    "end": "2531079"
  },
  {
    "text": "one breaks something that this person was trying to use neither one of them even knew that was happening they're just like why is my code not working",
    "start": "2531079",
    "end": "2537359"
  },
  {
    "text": "then you've wasted like three days of them accidentally stepping on each other's toes unknowingly with this",
    "start": "2537359",
    "end": "2543079"
  },
  {
    "text": "pattern we can spin up a small version of our cell in a developer account really quickly allow them to test and",
    "start": "2543079",
    "end": "2549480"
  },
  {
    "text": "debug their stuff and then just tear it down and throw it away when they're done which is really powerful um okay uh there's no one siiz",
    "start": "2549480",
    "end": "2559000"
  },
  {
    "text": "fits all for this for all of the different kinds of tooling that I've talked about that we chose to use to",
    "start": "2559000",
    "end": "2565520"
  },
  {
    "text": "build our solution for this at momento there are tons of different um options out there the all the major Cloud",
    "start": "2565520",
    "end": "2572559"
  },
  {
    "text": "providers will all have an analog to everything that I described from AWS and um there's tons of cool third party",
    "start": "2572559",
    "end": "2578520"
  },
  {
    "text": "solutions for all this stuff out there as well so you can kind of pick the stuff that um fits best for your",
    "start": "2578520",
    "end": "2584319"
  },
  {
    "text": "environment and then the key takeaways I wanted to hit so cellular architecture",
    "start": "2584319",
    "end": "2590200"
  },
  {
    "text": "can really benefit your customers in terms of availability and making sure that you're hitting your slas um it's also really Val valuable",
    "start": "2590200",
    "end": "2599000"
  },
  {
    "text": "for business's agility and your engineering velocity automating this stuff really",
    "start": "2599000",
    "end": "2604760"
  },
  {
    "text": "only requires solving a few key problems that we went over today and a little bit of work to standardize some things",
    "start": "2604760",
    "end": "2610079"
  },
  {
    "text": "across your application components the automation is so much simpler today thanks to the changes that",
    "start": "2610079",
    "end": "2615559"
  },
  {
    "text": "have been happening in the infrastructure ased code space um as long as you just take those opportunities to standardize a few",
    "start": "2615559",
    "end": "2622000"
  },
  {
    "text": "things about how you define your components and again there's no one siiz fits all thing that's true not only in",
    "start": "2622000",
    "end": "2628119"
  },
  {
    "text": "terms of which tools you're picking but also like how deep you actually want to invest in this you don't have to invest",
    "start": "2628119",
    "end": "2634440"
  },
  {
    "text": "in exactly the same level of depth as what we did here you could do a subset of this you could do more than what we",
    "start": "2634440",
    "end": "2640000"
  },
  {
    "text": "did here you got to find the right fit for your company uh and your business um but hopefully this was a decent pattern",
    "start": "2640000",
    "end": "2646680"
  },
  {
    "text": "to help you kind of think about some ideas of of of where you could apply some of the these things that would make",
    "start": "2646680",
    "end": "2651800"
  },
  {
    "text": "sense for you that's all I've got um but I love to take some questions if we have any time left and uh and if there are",
    "start": "2651800",
    "end": "2658240"
  },
  {
    "text": "any questions out there thanks again for coming please do uh vote on your way out",
    "start": "2658240",
    "end": "2668440"
  },
  {
    "text": "uh can you talk just a little bit about the routing layer and more specifics on",
    "start": "2668440",
    "end": "2673800"
  },
  {
    "text": "what you do there just all yeah no the routing layer is",
    "start": "2673800",
    "end": "2680319"
  },
  {
    "text": "typically going to be some code that you have to write um because you have to have a way to identify when a request is",
    "start": "2680319",
    "end": "2687040"
  },
  {
    "text": "coming in what customer It's associated with and then you're going to have to know how to make a decision about for",
    "start": "2687040",
    "end": "2693400"
  },
  {
    "text": "that customer what seller do they go to so the simplest possible case you're probably going to have to have a tiny",
    "start": "2693400",
    "end": "2699280"
  },
  {
    "text": "little bit of code that is just maybe like if your app is HTTP then you're",
    "start": "2699280",
    "end": "2704400"
  },
  {
    "text": "going to have to have a little web server there and maybe your customer ID gets embedded as a query parameter in",
    "start": "2704400",
    "end": "2710119"
  },
  {
    "text": "the URL or some other part of the request so your routing layer is going to have to just parse that much of the",
    "start": "2710119",
    "end": "2715559"
  },
  {
    "text": "request to figure out what customer it is and then maybe you have information in a database that tells you which cell",
    "start": "2715559",
    "end": "2720880"
  },
  {
    "text": "that customer belongs to you're going to have to make sure that layer is fast so you're going to want to cach things from",
    "start": "2720880",
    "end": "2726559"
  },
  {
    "text": "that data base so that the requests can can get routed really quickly but that's the general kind of pattern that you're",
    "start": "2726559",
    "end": "2732359"
  },
  {
    "text": "going to have to do there it's very business specific so there's not really any like offthe shelf tools that'll",
    "start": "2732359",
    "end": "2738960"
  },
  {
    "text": "solve that problem for you any other",
    "start": "2738960",
    "end": "2745480"
  },
  {
    "text": "questions I was wondering if you see any risks or",
    "start": "2752359",
    "end": "2758640"
  },
  {
    "text": "sorry could you say that one more time if you see any significant risks or",
    "start": "2760040",
    "end": "2765200"
  },
  {
    "text": "single point of failures with the pel um no not really um I mean there are there",
    "start": "2765200",
    "end": "2770680"
  },
  {
    "text": "are there are a couple risks so assciated with it but they're not really of the single point of failure type of",
    "start": "2770680",
    "end": "2776280"
  },
  {
    "text": "nature because actually what happens with the pipeline of pipelines is it it goes through there's there's no way that",
    "start": "2776280",
    "end": "2782000"
  },
  {
    "text": "you could write your cdk code that wouldn't work this way I don't think it's doing this in an iterative fashion",
    "start": "2782000",
    "end": "2787079"
  },
  {
    "text": "where it's walking through each of the components that make up your service and then like rebuilding the pipeline for",
    "start": "2787079",
    "end": "2792680"
  },
  {
    "text": "them if it fails at some point in there it will stop but that will have just",
    "start": "2792680",
    "end": "2797960"
  },
  {
    "text": "left all of your other pipelines in their previously existing state so if they were working before they'll keep",
    "start": "2797960",
    "end": "2803599"
  },
  {
    "text": "working and you may have you may have temporarily broken like one of your pipelines if you had a bad code change",
    "start": "2803599",
    "end": "2809480"
  },
  {
    "text": "there um but again that doesn't impact your cell it just impacts your ability",
    "start": "2809480",
    "end": "2814760"
  },
  {
    "text": "to deploy to your cell so you do have to rush to fix that so that you in case you need to urgently deploy something you've",
    "start": "2814760",
    "end": "2821280"
  },
  {
    "text": "got the means to do it um but it's not going to cause an outage for your customers because it's only managing",
    "start": "2821280",
    "end": "2828359"
  },
  {
    "text": "like this deployment life cycle not what's actively going on in the cell does that make sense yeah thank you cool any other",
    "start": "2828359",
    "end": "2838599"
  },
  {
    "text": "questions cool well thanks again for coming out I really appreciate everyone's time and hope you all had a good time at the compy",
    "start": "2841119",
    "end": "2848838"
  },
  {
    "text": "[Music]",
    "start": "2850460",
    "end": "2855909"
  }
]