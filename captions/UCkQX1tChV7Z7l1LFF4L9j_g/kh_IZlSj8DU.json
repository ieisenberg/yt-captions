[
  {
    "text": "[Music]",
    "start": "3350",
    "end": "14249"
  },
  {
    "text": "hi I'm Dan I'm a principal engineer I sky scanner and in this talk I want to",
    "start": "15599",
    "end": "21760"
  },
  {
    "text": "talk about open Telemetry and how we can help you deliver effective observability",
    "start": "21760",
    "end": "27320"
  },
  {
    "text": "and also help you do it efficiently within your organization but before we before I",
    "start": "27320",
    "end": "33719"
  },
  {
    "text": "introduce myself I want to start by discussing one of the key questions that",
    "start": "33719",
    "end": "39320"
  },
  {
    "text": "observability helps to answer and that is when our systems change which could be because we",
    "start": "39320",
    "end": "45960"
  },
  {
    "text": "deployed a new version of our component or because our users are using it in a",
    "start": "45960",
    "end": "51840"
  },
  {
    "text": "completely different way how do we know what changed because our systems are a bit",
    "start": "51840",
    "end": "59000"
  },
  {
    "text": "like black boxes we send a request in and we get a response out but we have",
    "start": "59000",
    "end": "64518"
  },
  {
    "text": "little information on what goes on inside the system to be able to serve that response and this is this is why we",
    "start": "64519",
    "end": "71560"
  },
  {
    "text": "uh we produce Telemetry in the form of metrics of traces and logs that gives us",
    "start": "71560",
    "end": "78840"
  },
  {
    "text": "more information about what goes on inside a system in",
    "start": "78840",
    "end": "83880"
  },
  {
    "text": "production now it's really easy to see how a change that we make to a script that we are debugging log Al uh has the",
    "start": "83880",
    "end": "91880"
  },
  {
    "text": "desired effect or not we we've all done this we've all added print statements",
    "start": "91880",
    "end": "97560"
  },
  {
    "text": "here and there and uh and in a way in a very primitive way that is some form of",
    "start": "97560",
    "end": "103880"
  },
  {
    "text": "observability because it does tell us something about the script execution and when we change it we",
    "start": "103880",
    "end": "111439"
  },
  {
    "text": "expect to see something hopefully something something different being printed now I think we would all agree",
    "start": "111439",
    "end": "118640"
  },
  {
    "text": "that this doesn't really scale uh these print statements are not really going to",
    "start": "118640",
    "end": "124280"
  },
  {
    "text": "get us very far because our our our systems are not simple scripts that we debug locally our systems are complex",
    "start": "124280",
    "end": "132480"
  },
  {
    "text": "distributed systems with hundreds of services deployed and and thousands of",
    "start": "132480",
    "end": "138480"
  },
  {
    "text": "interconnections between them so this what you see here it's a representation of the service mesh a sky scanner and",
    "start": "138480",
    "end": "145920"
  },
  {
    "text": "the service dependencies between them so when we deploy a change to one of these",
    "start": "145920",
    "end": "152519"
  },
  {
    "text": "Services how do we know that change didn't affect anything else apart from",
    "start": "152519",
    "end": "158680"
  },
  {
    "text": "our service how do we not it didn't affect its dependencies upstream or or",
    "start": "158680",
    "end": "163959"
  },
  {
    "text": "Downstream dependencies most importantly when something fails how do we get to the",
    "start": "163959",
    "end": "169519"
  },
  {
    "text": "root cause of that regression fast because we can't keep um thinking about our services as if they were running an",
    "start": "169519",
    "end": "176400"
  },
  {
    "text": "isolation when they're running in a complex distributed system for that we need",
    "start": "176400",
    "end": "182080"
  },
  {
    "text": "observability and in this talk I'm um I would like to tell you how open",
    "start": "182080",
    "end": "187319"
  },
  {
    "text": "Telemetry and Open Standards can help you achieve effective observability within your systems to be able to debug",
    "start": "187319",
    "end": "194040"
  },
  {
    "text": "those regressions faster now a bit a little bit about me first I joined uh Skyscanner in 2018",
    "start": "194040",
    "end": "202000"
  },
  {
    "text": "originally to work on performance and resource optimization but since 2020",
    "start": "202000",
    "end": "207040"
  },
  {
    "text": "I've been leading a really exciting project to rely on Open Standards and open",
    "start": "207040",
    "end": "212239"
  },
  {
    "text": "Telemetry for the instrumentation of our um for Telemetry",
    "start": "212239",
    "end": "217920"
  },
  {
    "text": "instrumentation and uh and to improve the observability of our systems to allow us to detect and debug incidents",
    "start": "217920",
    "end": "225319"
  },
  {
    "text": "faster in production for the last 12 years I spent uh my time working as a platform",
    "start": "225319",
    "end": "231840"
  },
  {
    "text": "engineer and organizations from five from as small as five employees and",
    "start": "231840",
    "end": "237799"
  },
  {
    "text": "bigger than 2,500 employees always working in to reduce the",
    "start": "237799",
    "end": "243079"
  },
  {
    "text": "cognitive loads and the toil that it takes for um for teams to operate their",
    "start": "243079",
    "end": "248840"
  },
  {
    "text": "services in production and uh in the last few months I've written a book called practical",
    "start": "248840",
    "end": "255000"
  },
  {
    "text": "open Telemetry that discusses some of the topics that we'll be talking about today also as you can see on the left I",
    "start": "255000",
    "end": "262720"
  },
  {
    "text": "relax by beating Drums of different shapes and forms and hopefully in",
    "start": "262720",
    "end": "269240"
  },
  {
    "text": "something that resembles a AR rmic pattern but I didn't come here to talk about that",
    "start": "269240",
    "end": "275479"
  },
  {
    "text": "today we will cover today why observability is important without the incident um response life cycle we'll",
    "start": "275479",
    "end": "284560"
  },
  {
    "text": "cover how Open Standards can help to deliver that effective observability how to roll out open",
    "start": "284560",
    "end": "291720"
  },
  {
    "text": "Telemetry efficiently within your organization and also how to make sure",
    "start": "291720",
    "end": "297479"
  },
  {
    "text": "that Telemetry signals remain valuable and are used within your organization as",
    "start": "297479",
    "end": "303639"
  },
  {
    "text": "they should be so we've seen thato ability helps answer that question of what changed and",
    "start": "303639",
    "end": "310360"
  },
  {
    "text": "that's important in many occasions but especially when something",
    "start": "310360",
    "end": "317240"
  },
  {
    "text": "goes wrong right when when we apply a change and it didn't go according to plan so what you see here are some of",
    "start": "317240",
    "end": "322600"
  },
  {
    "text": "the key metrics during the um um incident response like cycle hopefully",
    "start": "322600",
    "end": "328400"
  },
  {
    "text": "we are familiar with some of them like meantime to detect or meantime to recovery what I try to add here as well",
    "start": "328400",
    "end": "335120"
  },
  {
    "text": "is meantime to resolution as a metric that includes the time that it takes for",
    "start": "335120",
    "end": "340160"
  },
  {
    "text": "us to be able to deploy a change and to make sure that we that that change fixes",
    "start": "340160",
    "end": "346560"
  },
  {
    "text": "the original regression observability helps uh in two",
    "start": "346560",
    "end": "351800"
  },
  {
    "text": "different ways here first one is to answer the question is my system behaving as",
    "start": "351800",
    "end": "357680"
  },
  {
    "text": "suspected and uh and that involves one the time that it",
    "start": "357680",
    "end": "362759"
  },
  {
    "text": "takes to detect an incident and then hopefully fire an",
    "start": "362759",
    "end": "368520"
  },
  {
    "text": "automated alert and then to reduce the time that it takes to verify that effect that we",
    "start": "368520",
    "end": "375960"
  },
  {
    "text": "deployed to production has the desired effect and to do that with with",
    "start": "375960",
    "end": "381639"
  },
  {
    "text": "evidence now in the last decade the way that we instrument do Services has",
    "start": "381639",
    "end": "386720"
  },
  {
    "text": "changed and is now easier than ever with within with open source tooling it's",
    "start": "386720",
    "end": "391840"
  },
  {
    "text": "easier than ever to produce metrics and to integrate those metrics into dashboards and alerts to really um",
    "start": "391840",
    "end": "400039"
  },
  {
    "text": "measure what's important to our users what's important to our customers and be able to react to regressions of those",
    "start": "400039",
    "end": "407680"
  },
  {
    "text": "key performance indicators as fast as possible and this is really this is really important",
    "start": "407680",
    "end": "414000"
  },
  {
    "text": "because that is um when we when we deploy Services hundreds of times a day",
    "start": "414000",
    "end": "421000"
  },
  {
    "text": "we need to be able to detect that fast so we can roll back the changes even",
    "start": "421000",
    "end": "426080"
  },
  {
    "text": "faster and this is um this is a healthy metric of of an organization if you're",
    "start": "426080",
    "end": "432520"
  },
  {
    "text": "able to deploy fast and recover faster is a it's a metric of uh High Velocity teams within um within",
    "start": "432520",
    "end": "441680"
  },
  {
    "text": "organizations observability also helps answer a different question which is when an alert is",
    "start": "441680",
    "end": "448319"
  },
  {
    "text": "fired why is my system not behaving as suspected so it helps us to reduce what",
    "start": "448319",
    "end": "454199"
  },
  {
    "text": "we call the meantime to know from when the alert is fired to when the root cause is",
    "start": "454199",
    "end": "459960"
  },
  {
    "text": "found and even though things have changed dramatically in the other in the",
    "start": "459960",
    "end": "465120"
  },
  {
    "text": "other areas of observability nothing has changed that much in how we debug our systems in",
    "start": "465120",
    "end": "472400"
  },
  {
    "text": "production we still treat our services as if they were running alone rather",
    "start": "472400",
    "end": "477720"
  },
  {
    "text": "than in a Within a complex distributed system let me give you an",
    "start": "477720",
    "end": "483440"
  },
  {
    "text": "example let's put ourselves in the SP like service owner haton and we have a",
    "start": "483440",
    "end": "489720"
  },
  {
    "text": "service here that is um instrumented with uh with some metrics some custom",
    "start": "489720",
    "end": "495879"
  },
  {
    "text": "metrics and uh and we're measuring the number of 500 responses that are",
    "start": "495879",
    "end": "501159"
  },
  {
    "text": "returned by our service to users now this service has a dependency on a different service to obtain some data",
    "start": "501159",
    "end": "508159"
  },
  {
    "text": "and then render it in this case when the 500 responses go uh the number of 500 responses go over a",
    "start": "508159",
    "end": "515159"
  },
  {
    "text": "certain threshold an alert fires now the usual traditional incident",
    "start": "515159",
    "end": "521518"
  },
  {
    "text": "response will um um basically tell our engineer on cult to go and follow a",
    "start": "521519",
    "end": "526959"
  },
  {
    "text": "particular rbook and that runbook tells the engineer to go and look at a",
    "start": "526959",
    "end": "532000"
  },
  {
    "text": "particular dashboard and to try to identify metrics that could be",
    "start": "532000",
    "end": "537920"
  },
  {
    "text": "correlated to that increase in 500 responses and this relies on past",
    "start": "537920",
    "end": "543320"
  },
  {
    "text": "experience it relies on known failure modes of the application for example it may be Memory saturation so the service",
    "start": "543320",
    "end": "550959"
  },
  {
    "text": "will start to um to apply black back pressure and our engineer will try to",
    "start": "550959",
    "end": "557079"
  },
  {
    "text": "sort of like manually correlate those or try to see if if something moves in the",
    "start": "557079",
    "end": "562320"
  },
  {
    "text": "in the same direction and they may also need to go",
    "start": "562320",
    "end": "567800"
  },
  {
    "text": "to uh login backend and ask for some particular error codes",
    "start": "567800",
    "end": "573160"
  },
  {
    "text": "or error cases and these are normally things that we've seen before and we can search for them but then in these two",
    "start": "573160",
    "end": "581480"
  },
  {
    "text": "cases they they both rely on past experience right so how do we know that there no other metrics that could",
    "start": "581480",
    "end": "587920"
  },
  {
    "text": "correlate to this particular um to this particular regression and they're not in",
    "start": "587920",
    "end": "593480"
  },
  {
    "text": "our dashboards or how do we know that the error messages that we're looking for are the the ones that are",
    "start": "593480",
    "end": "600920"
  },
  {
    "text": "being um emitted by the application or by the service a particular service replica that is um returning those 500",
    "start": "600920",
    "end": "609200"
  },
  {
    "text": "response codes um I mean these error messages could also be background noise could also be always there and not really be",
    "start": "609200",
    "end": "616440"
  },
  {
    "text": "related to the root of a regression and even if they are let's",
    "start": "616440",
    "end": "621800"
  },
  {
    "text": "say in this case we find that well the service what we would get data from um",
    "start": "621800",
    "end": "626839"
  },
  {
    "text": "has no data to to render so then what do we do do we call another service owner I",
    "start": "626839",
    "end": "636160"
  },
  {
    "text": "mean that's normally what happens incident calls where we call a separate",
    "start": "636160",
    "end": "641200"
  },
  {
    "text": "service owner and then they start investigating using their own rambooks um using their own dashboards and then",
    "start": "641200",
    "end": "648760"
  },
  {
    "text": "they may find the same conclusion that the root cost is not in their service so this adds time to the to the incident uh",
    "start": "648760",
    "end": "657519"
  },
  {
    "text": "response and to that um time to know metric now let's look at the same at the",
    "start": "657519",
    "end": "665800"
  },
  {
    "text": "same example but relying on context rather than experience so in this case we can have a",
    "start": "665800",
    "end": "673600"
  },
  {
    "text": "service that's instrumented with open Telemetry and has the same metric of",
    "start": "673600",
    "end": "679000"
  },
  {
    "text": "like number of uh 503 responses for example and uh but he's using Open",
    "start": "679000",
    "end": "686240"
  },
  {
    "text": "Standards he's using nameing conventions like the name of metric or the attributes of that particular metric now",
    "start": "686240",
    "end": "693880"
  },
  {
    "text": "an observability platform that supports these semantic conventions can assign",
    "start": "693880",
    "end": "699600"
  },
  {
    "text": "semantics to to that but he knows that that's one of the golden signals and then it can then correlate that",
    "start": "699600",
    "end": "705560"
  },
  {
    "text": "to utilization memory utilization metrics for example and automatically tell us what instance is the one that is",
    "start": "705560",
    "end": "712320"
  },
  {
    "text": "having problems now a service instrumented with open Telemetry can also link to individual distributed",
    "start": "712320",
    "end": "720279"
  },
  {
    "text": "traces using what's called exemplars which are individual examples from",
    "start": "720279",
    "end": "725519"
  },
  {
    "text": "within a service replica that link to the transactions that were going through that system when for example a high",
    "start": "725519",
    "end": "731120"
  },
  {
    "text": "number of 500s was being recorded So in our distributed trades we",
    "start": "731120",
    "end": "736600"
  },
  {
    "text": "can see that high granularity data and we can see that from not only from my",
    "start": "736600",
    "end": "741880"
  },
  {
    "text": "service but on as well from the dependency and we can see in one go that",
    "start": "741880",
    "end": "747320"
  },
  {
    "text": "the error seems to be within the dependency and then open Telemetry can",
    "start": "747320",
    "end": "753560"
  },
  {
    "text": "also help to correlate those using Trace IDs that are part of a in in Java for",
    "start": "753560",
    "end": "760199"
  },
  {
    "text": "example part of the the the thread uh the threat local storage and that can be correlated using things like MDC",
    "start": "760199",
    "end": "769199"
  },
  {
    "text": "to your legacy application logs that perhaps we're not instrumented with open",
    "start": "769199",
    "end": "774320"
  },
  {
    "text": "Telemetry but can still be correlated to that particular Trace so we know that that transaction that went through the",
    "start": "774320",
    "end": "780199"
  },
  {
    "text": "system we get to see the logs not only from our service but also from other services within that same transaction",
    "start": "780199",
    "end": "786959"
  },
  {
    "text": "and in one go we can see that the root of a regression was an our dependency",
    "start": "786959",
    "end": "792240"
  },
  {
    "text": "and that will allow us to investigate it further now here we're relying on context and correlation not in",
    "start": "792240",
    "end": "798399"
  },
  {
    "text": "experience to debug a particular system and this is something that I",
    "start": "798399",
    "end": "804920"
  },
  {
    "text": "occasionally do at Skys scanner I may use one of our our all relability",
    "start": "804920",
    "end": "810279"
  },
  {
    "text": "platform and then try to find these uh correlations and try to find the root cause for regressions and not often but",
    "start": "810279",
    "end": "819240"
  },
  {
    "text": "sometimes I have found that I get to the same to the same uh to the same",
    "start": "819240",
    "end": "824920"
  },
  {
    "text": "investigation that service owners without having a clue of how the system operates and sometimes I even may bring",
    "start": "824920",
    "end": "831279"
  },
  {
    "text": "some information to the table that service owners may not have because they were not using uh the same um",
    "start": "831279",
    "end": "837079"
  },
  {
    "text": "correlation or some of the open Telemetry signals now effective observability",
    "start": "837079",
    "end": "843839"
  },
  {
    "text": "means uh requires a few things as we've seen it requires that high granularity",
    "start": "843839",
    "end": "848959"
  },
  {
    "text": "of the the detail Telemetry from within operations that are happening in individual transactions through a",
    "start": "848959",
    "end": "856040"
  },
  {
    "text": "distributed system and we need context that ties that all together all the",
    "start": "856040",
    "end": "861079"
  },
  {
    "text": "signals and all the services as part of a holistic view so that needs a couple",
    "start": "861079",
    "end": "866399"
  },
  {
    "text": "of things it needs that signal correlation so we can get metrics traces and logs as",
    "start": "866399",
    "end": "872000"
  },
  {
    "text": "part of the same context and we need service correlation so we can identify these dependencies",
    "start": "872000",
    "end": "878519"
  },
  {
    "text": "between services and see how one changes in one Ser service may affect",
    "start": "878519",
    "end": "884519"
  },
  {
    "text": "another now for this to work we need Open Standards we cannot refer to for",
    "start": "884519",
    "end": "890519"
  },
  {
    "text": "example the trace ID or we cannot refer to a service ID or a service name in a",
    "start": "890519",
    "end": "896320"
  },
  {
    "text": "particular way depend in each organization because it's not effective from the point of view of U it's not",
    "start": "896320",
    "end": "902360"
  },
  {
    "text": "efficient from the point of view of um of integrating with open source tooling",
    "start": "902360",
    "end": "908240"
  },
  {
    "text": "and with observability vendors so we need those Open Standards to be able to provide Telemetry out of a",
    "start": "908240",
    "end": "914839"
  },
  {
    "text": "box and for vendors to support these semantics now we've seen why",
    "start": "914839",
    "end": "921120"
  },
  {
    "text": "observability matters and how does open Telemetry help well open telemetry's mission",
    "start": "921120",
    "end": "927560"
  },
  {
    "text": "statement is to enable that effective observability that we've seen by making",
    "start": "927560",
    "end": "933040"
  },
  {
    "text": "high quality portable Telemetry ubiquitous and it does that in a way",
    "start": "933040",
    "end": "938680"
  },
  {
    "text": "that it puts the responsibility of instrumenting a service or instrumenting a particular library in the hands of the",
    "start": "938680",
    "end": "946279"
  },
  {
    "text": "person that knows the most about it which could be the library author or the or the service or the service owner",
    "start": "946279",
    "end": "953120"
  },
  {
    "text": "without being tied to any implementation details now let me explain that in a bit",
    "start": "953120",
    "end": "958199"
  },
  {
    "text": "more detail detail and I'll go down to the in to the some API design of open",
    "start": "958199",
    "end": "964000"
  },
  {
    "text": "Telemetry now for a bit and then we'll go back to some of the more high level um some of the more high level um",
    "start": "964000",
    "end": "972279"
  },
  {
    "text": "Concepts now this is what the an application instrumented with open Telemetry looks",
    "start": "972279",
    "end": "977680"
  },
  {
    "text": "like we've got a clear distinction between what what call crosscutting",
    "start": "977680",
    "end": "983480"
  },
  {
    "text": "packages and self-contained packages so the open Telemetry API for example um",
    "start": "983480",
    "end": "988639"
  },
  {
    "text": "provides public interfaces and just a minimal implementation for the different Telemetry signals we've got metric we've",
    "start": "988639",
    "end": "995639"
  },
  {
    "text": "got tracing we've got baggage and we've got login so for each of these signals it provides a pretty much a normally a",
    "start": "995639",
    "end": "1002800"
  },
  {
    "text": "no up implementation of them and it also provides context that allows to these",
    "start": "1002800",
    "end": "1008399"
  },
  {
    "text": "signals to all be part of the same as we've seen the same context that ties them",
    "start": "1008399",
    "end": "1014880"
  },
  {
    "text": "together now application owners or whoever ever instrument um particular",
    "start": "1014880",
    "end": "1020360"
  },
  {
    "text": "library or a service they can rely on these apis without being tied to any",
    "start": "1020360",
    "end": "1026038"
  },
  {
    "text": "implementation and this allows them to take long-term dependencies an open Telemetry provides very strong stability",
    "start": "1026039",
    "end": "1034280"
  },
  {
    "text": "guarantees and apis that are always going to be Backward Compatible",
    "start": "1034280",
    "end": "1040400"
  },
  {
    "text": "so service owners can rely on them and then when they configure the open",
    "start": "1040400",
    "end": "1046240"
  },
  {
    "text": "Telemetry SDK they can decide how they want their metrics or the login or the tracing to be collected and to be",
    "start": "1046240",
    "end": "1053640"
  },
  {
    "text": "exported from within a a particular application now these open Telemetry",
    "start": "1053640",
    "end": "1061360"
  },
  {
    "text": "sdks for the for all the signals can also be extended by using plugins and",
    "start": "1061360",
    "end": "1066760"
  },
  {
    "text": "these plugins allow us us to integrate with different open source tooling for example or other observability platforms",
    "start": "1066760",
    "end": "1074840"
  },
  {
    "text": "to be able to for example export date in a particular format and all that can be configured in one and only one place so",
    "start": "1074840",
    "end": "1083360"
  },
  {
    "text": "for example if you want to change the Telemetry back end from Prometheus to a",
    "start": "1083360",
    "end": "1089320"
  },
  {
    "text": "different one we can do that without affecting how applications are instrumented without having to change",
    "start": "1089320",
    "end": "1096039"
  },
  {
    "text": "any application code only where we configure the open Telemetry SDK now these Contra packages that are",
    "start": "1096039",
    "end": "1103159"
  },
  {
    "text": "open source packages also provide what called instrumentation packages and these provide that outof a",
    "start": "1103159",
    "end": "1110360"
  },
  {
    "text": "box Telemetry out of like hundreds and hundreds of uh of different open source",
    "start": "1110360",
    "end": "1115720"
  },
  {
    "text": "libraries and different languages and um and for us it's quite",
    "start": "1115720",
    "end": "1122520"
  },
  {
    "text": "important because this is one of the one of the areas where we want to remove the",
    "start": "1122520",
    "end": "1128120"
  },
  {
    "text": "responsibility from service owners to having to instrument their services so relying on these instrumentation",
    "start": "1128120",
    "end": "1134400"
  },
  {
    "text": "packages means that we can reduce one the toil that it takes to instrument service and also to maintain it because as",
    "start": "1134400",
    "end": "1141919"
  },
  {
    "text": "libraries evolve the instrumentation has to evolve with them so relying on these packages allows us to to offload that",
    "start": "1141919",
    "end": "1150320"
  },
  {
    "text": "to to Telemetry experts that that instrumented those um those",
    "start": "1150320",
    "end": "1155640"
  },
  {
    "text": "libraries last but not least is the semantic conventions that you see there semantic conventions allow us to",
    "start": "1155640",
    "end": "1163320"
  },
  {
    "text": "decorate Telemetry with properties and attributes that follow um some common",
    "start": "1163320",
    "end": "1172039"
  },
  {
    "text": "naming so I think we've always been we we've all been there and trying to say",
    "start": "1172039",
    "end": "1177320"
  },
  {
    "text": "how do we Define for example what then how we say the AWS region or the or the",
    "start": "1177320",
    "end": "1184880"
  },
  {
    "text": "cloud region for a particular um metric and before we started to use open Telemetry a sky scanner we had multiple",
    "start": "1184880",
    "end": "1191480"
  },
  {
    "text": "ways of doing this could be cloud. region could be a ws. region it could",
    "start": "1191480",
    "end": "1196919"
  },
  {
    "text": "even be Data Center Center because some metrics were before we migrated to the cloud and um and now with open telemeter",
    "start": "1196919",
    "end": "1204120"
  },
  {
    "text": "it's got one way of doing that and it comes as a package that we can use across our",
    "start": "1204120",
    "end": "1209240"
  },
  {
    "text": "applications now the good news about this is that it's also supported by open source tooling and observability vendors",
    "start": "1209240",
    "end": "1216159"
  },
  {
    "text": "to provide out of the box uh correlation and out of the box analysis from within",
    "start": "1216159",
    "end": "1221880"
  },
  {
    "text": "these signals and that's what influenced as well our buy versus build decision of",
    "start": "1221880",
    "end": "1229120"
  },
  {
    "text": "Skys scanner so when we think about a um vendor and what the value that vendors",
    "start": "1229120",
    "end": "1237240"
  },
  {
    "text": "provided before open Telemetry most of them relied on their own instrumentation",
    "start": "1237240",
    "end": "1242600"
  },
  {
    "text": "agents and their own apis and protocols and this is something that we were not",
    "start": "1242600",
    "end": "1249039"
  },
  {
    "text": "very keen on a Skys scanner to basically lock ourselves to a particular vendor",
    "start": "1249039",
    "end": "1255360"
  },
  {
    "text": "and the that layer the instrumentation and export and transport layer because it meant that we couldn't move between",
    "start": "1255360",
    "end": "1262360"
  },
  {
    "text": "let's say open source Solutions and it also meant that we were in a way limited by whatever that vendor integrated it",
    "start": "1262360",
    "end": "1269159"
  },
  {
    "text": "integrated with from the point of view of Open Source uh libraries that they that they worked with now with open",
    "start": "1269159",
    "end": "1276400"
  },
  {
    "text": "Telemetry things changed dramatically because now we could we can use open",
    "start": "1276400",
    "end": "1282760"
  },
  {
    "text": "source for our instrumentation we can use Open Standards and open um uh standard protocols for the export and",
    "start": "1282760",
    "end": "1289919"
  },
  {
    "text": "transport of telemetry data and then we can rely on on vendors for the parts that where they",
    "start": "1289919",
    "end": "1298120"
  },
  {
    "text": "actually deliver value which is the storage and credent that analysis and",
    "start": "1298120",
    "end": "1303360"
  },
  {
    "text": "correlation between um Telemetry signals using the same semantic conventions and",
    "start": "1303360",
    "end": "1309320"
  },
  {
    "text": "then of course the dashboards and and alerts that that um that that were on",
    "start": "1309320",
    "end": "1314400"
  },
  {
    "text": "top of that so now that we've seen how open Telemetry and Open Standards can",
    "start": "1314400",
    "end": "1321159"
  },
  {
    "text": "help Let's uh let's go through how you can roll open Telemetry efficiently within your",
    "start": "1321159",
    "end": "1328519"
  },
  {
    "text": "organization and this is one of the principles guiding principles for",
    "start": "1329039",
    "end": "1334320"
  },
  {
    "text": "platform engineering a Skys scanner and this is to make the golden path the path of least",
    "start": "1334320",
    "end": "1340080"
  },
  {
    "text": "resistance so when we're thinking about rolling out an observability strategy there are certain things that we need to",
    "start": "1340080",
    "end": "1345880"
  },
  {
    "text": "decide for example um what format are we going to be um collecting metrics or or",
    "start": "1345880",
    "end": "1353200"
  },
  {
    "text": "exporting metrics and what is the aggregation level what are the aggregation intervals things like that",
    "start": "1353200",
    "end": "1359919"
  },
  {
    "text": "there are basically some standards that we would like to be adopted across the",
    "start": "1359919",
    "end": "1365039"
  },
  {
    "text": "company now one way of doing that would be to basically have those in a list and then allowing and then basically",
    "start": "1365039",
    "end": "1371520"
  },
  {
    "text": "requiring service orders to implement it themselves and another way which is the one that we take is to be to give",
    "start": "1371520",
    "end": "1379600"
  },
  {
    "text": "service owners an easy way of applying these best practices and the way that we do that is",
    "start": "1379600",
    "end": "1385559"
  },
  {
    "text": "using internal libraries that every single service of Skyscanner uses now",
    "start": "1385559",
    "end": "1391400"
  },
  {
    "text": "these libraries um they configure multiple things not just Elementary they do",
    "start": "1391400",
    "end": "1396919"
  },
  {
    "text": "security networking plenty of other things so Within These libraries we can",
    "start": "1396919",
    "end": "1403039"
  },
  {
    "text": "configure how we want the open Telemetry SDK that we saw before",
    "start": "1403039",
    "end": "1409880"
  },
  {
    "text": "to to to collect and to export Telemetry data and um and this basically allows us",
    "start": "1410159",
    "end": "1418120"
  },
  {
    "text": "to execute our observability strategy with minimal friction for service",
    "start": "1418120",
    "end": "1424279"
  },
  {
    "text": "owners now let me take you on a journey of simplification as Skys scanner and",
    "start": "1424279",
    "end": "1430840"
  },
  {
    "text": "this is the I'm not this is a horrible slide and I'm not planning to um explain every single component that is here in",
    "start": "1430840",
    "end": "1437520"
  },
  {
    "text": "this SL and I don't expect you to to read through it but it shows the",
    "start": "1437520",
    "end": "1442720"
  },
  {
    "text": "complexity of this what it shows is the complexity of the Telemetry pipelines",
    "start": "1442720",
    "end": "1447919"
  },
  {
    "text": "and the Telemetry tooling a Skys scanner before we started to rely on Open Standards and before we started to rely",
    "start": "1447919",
    "end": "1454559"
  },
  {
    "text": "on open Telemetry now it is a very it was a very complex system but the worst part of it",
    "start": "1454559",
    "end": "1462039"
  },
  {
    "text": "is that it was not a very usable one we had one vendor for um synthetics one",
    "start": "1462039",
    "end": "1468960"
  },
  {
    "text": "vendor for for browser age for um ROM metrics we had another vendor for",
    "start": "1468960",
    "end": "1474720"
  },
  {
    "text": "tracing and then a bunch of Open Source tooling internally and and Telemetry",
    "start": "1474720",
    "end": "1482120"
  },
  {
    "text": "backends and each one of them would basically be isolated so service owners",
    "start": "1482120",
    "end": "1489679"
  },
  {
    "text": "would just have to go to one place for logs and another place or two other",
    "start": "1489679",
    "end": "1495440"
  },
  {
    "text": "places for metrics and it just didn't really provide definitely that effective",
    "start": "1495440",
    "end": "1501480"
  },
  {
    "text": "oability that we needed and as well as I mentioned the semantic conventions were completely uh domain specific completely",
    "start": "1501480",
    "end": "1509279"
  },
  {
    "text": "Uh custom made to Skys scanner now when we started our journey we integrated with um sometimes",
    "start": "1509279",
    "end": "1517840"
  },
  {
    "text": "we had to integrate with with vendor provided software but in a way that we",
    "start": "1517840",
    "end": "1522880"
  },
  {
    "text": "didn't rely we didn't our services never depended on the particular service and",
    "start": "1522880",
    "end": "1527919"
  },
  {
    "text": "software but we're still using still trying to aim for those uh semantic uh",
    "start": "1527919",
    "end": "1533320"
  },
  {
    "text": "for those open uh Open Standards and semantic conventions so when we started",
    "start": "1533320",
    "end": "1538679"
  },
  {
    "text": "to use open Telemetry um we started to simplify our backend using other Open Standards to to",
    "start": "1538679",
    "end": "1547120"
  },
  {
    "text": "also integrate with with with these vendors and by the way I remove the names of vendors because I'm not trying to advertise",
    "start": "1547120",
    "end": "1554120"
  },
  {
    "text": "anything and um and now this is where we are at the moment where our applications",
    "start": "1554120",
    "end": "1560520"
  },
  {
    "text": "depend on the open Telemetry API our backend applications depend on the open Telemetry",
    "start": "1560520",
    "end": "1567159"
  },
  {
    "text": "API and we use open Telemetry collector um in agent mode to be able to extract",
    "start": "1567159",
    "end": "1575240"
  },
  {
    "text": "information from our infrastructure and from our kubernetes clusters and then we feed that information through open",
    "start": "1575240",
    "end": "1580760"
  },
  {
    "text": "Telemetry collectors as a gateway to integrate with a third party vendor now this is not the end state for us",
    "start": "1580760",
    "end": "1588159"
  },
  {
    "text": "we believe that the future will rely more on open Telemetry and it will be even more simple from the point of view",
    "start": "1588159",
    "end": "1593960"
  },
  {
    "text": "of instrumentation so we see that any browser S mobile side or backend will",
    "start": "1593960",
    "end": "1600440"
  },
  {
    "text": "depend on the open Telemetry API and different um in different ways I will",
    "start": "1600440",
    "end": "1606320"
  },
  {
    "text": "start to rely on open telem collectors for anything that is related to collecting information from",
    "start": "1606320",
    "end": "1611760"
  },
  {
    "text": "infrastructure and then all F through open Telemetry an open Telemetry collector Gateway that allows us to",
    "start": "1611760",
    "end": "1619120"
  },
  {
    "text": "control how we integrate with a vendor and is the last hop of telemetry now this is important as well because",
    "start": "1619120",
    "end": "1625360"
  },
  {
    "text": "feeding all that through collectors allows us to control that last hop of",
    "start": "1625360",
    "end": "1630640"
  },
  {
    "text": "dmetry and made better use of um resources or networking and also be able",
    "start": "1630640",
    "end": "1637279"
  },
  {
    "text": "to control things like authentication or if we want to transform Telemetry in a",
    "start": "1637279",
    "end": "1643640"
  },
  {
    "text": "particular way we can do it even when we integrate with cloud provider um endpoints we we want to rely on open",
    "start": "1643640",
    "end": "1651760"
  },
  {
    "text": "Telemetry protocols and Open Standards to be able to integrate with other vendors so you can see the",
    "start": "1651760",
    "end": "1659720"
  },
  {
    "text": "simplification that one can achieve by using open Telemetry and the instrumentation and Export layer and the",
    "start": "1659720",
    "end": "1666600"
  },
  {
    "text": "transport and processing while relying on vendors for the storage quitting and",
    "start": "1666600",
    "end": "1672760"
  },
  {
    "text": "and the UI and alerts another area where we capitalized on the use of Open Standards was our",
    "start": "1672760",
    "end": "1679799"
  },
  {
    "text": "migration from open tracing to open Telemetry now as you probably know open",
    "start": "1679799",
    "end": "1685080"
  },
  {
    "text": "Telemetry is a merger between open tracing and open sensors two projects",
    "start": "1685080",
    "end": "1690840"
  },
  {
    "text": "that were popular um before open Telemetry and then that are deprecated now a Skys scanner we were",
    "start": "1690840",
    "end": "1697960"
  },
  {
    "text": "big users of open tracing across all of our stack and uh an open tracing had a",
    "start": "1697960",
    "end": "1705760"
  },
  {
    "text": "similar API designed to open Telemetry so as I said there is an open Trac in",
    "start": "1705760",
    "end": "1712360"
  },
  {
    "text": "API with no implementation and then when the application starts up we can get the",
    "start": "1712360",
    "end": "1718240"
  },
  {
    "text": "uh we we configure the implementation from that API now with open Telemetry as",
    "start": "1718240",
    "end": "1724080"
  },
  {
    "text": "there is compatibility with those previous um projects we can use What's",
    "start": "1724080",
    "end": "1729320"
  },
  {
    "text": "called the open Telemetry or the open tracing shim from open Telemetry that basically acts as an implementation for",
    "start": "1729320",
    "end": "1734960"
  },
  {
    "text": "open tracing and then that relays calls to the API to the open Telemetry API so",
    "start": "1734960",
    "end": "1742480"
  },
  {
    "text": "what that meant for us was that we could start to roll out open Telemetry under the hood while",
    "start": "1742480",
    "end": "1748880"
  },
  {
    "text": "applications um that were relying on open tracing could still rely on open tracing and any instrumented middleware",
    "start": "1748880",
    "end": "1756600"
  },
  {
    "text": "or instrumented HTTP or JPC clients could still use open tracing while",
    "start": "1756600",
    "end": "1761640"
  },
  {
    "text": "service owners were gradually being moved to rely natively on open Telemetry which is our current",
    "start": "1761640",
    "end": "1768480"
  },
  {
    "text": "States but that meant that we could start to produce data with um open Telemetry protocols I could start to",
    "start": "1768480",
    "end": "1775519"
  },
  {
    "text": "propagate Trace context with open Telemetry formats so what did that mean well as I",
    "start": "1775519",
    "end": "1783200"
  },
  {
    "text": "said we roll out um changes at Skyscanner as part of our internal",
    "start": "1783200",
    "end": "1788399"
  },
  {
    "text": "libraries and it does pay off when you work in platform engineering and what you see here is our adoption of open",
    "start": "1788399",
    "end": "1795200"
  },
  {
    "text": "Telemetry within Skys scanner and how many Services were send in Telemetry to those open Telemetry collectors so um we",
    "start": "1795200",
    "end": "1803559"
  },
  {
    "text": "went from an early adoption face with um 10 to 15 services and then when we",
    "start": "1803559",
    "end": "1810600"
  },
  {
    "text": "released our libraries publicly within Skyscanner we saw that jump from yeah",
    "start": "1810600",
    "end": "1816679"
  },
  {
    "text": "those 15 services to over 130 services in a matter of four or five days so that",
    "start": "1816679",
    "end": "1824039"
  },
  {
    "text": "is one hell of a curve of uh Tech adoption we're quite happy about that",
    "start": "1824039",
    "end": "1829279"
  },
  {
    "text": "now we've got um hundreds and hundreds of services being instrumented natively with open",
    "start": "1829279",
    "end": "1835760"
  },
  {
    "text": "Telemetry and as I said we send all that all that data through collectors and",
    "start": "1835760",
    "end": "1841000"
  },
  {
    "text": "they are incredibly powerful we receive data in multiple formats OTP being the major one but we",
    "start": "1841000",
    "end": "1848600"
  },
  {
    "text": "also do some Zipkin and Prometheus and open Telemetry collectors can receive that data and then work with it in some",
    "start": "1848600",
    "end": "1856159"
  },
  {
    "text": "way using processors so they can remove unwanted attributes they can rename attributes",
    "start": "1856159",
    "end": "1862320"
  },
  {
    "text": "they can change span status if we need them we can even generate metrics from",
    "start": "1862320",
    "end": "1867679"
  },
  {
    "text": "spans and that allowed us to upgrade is without relying on mixer but just",
    "start": "1867679",
    "end": "1874200"
  },
  {
    "text": "getting the Zipkin the um the spans from from Envoy in Zipkin format and",
    "start": "1874200",
    "end": "1881200"
  },
  {
    "text": "generating the metrics from it and we explore that data in oop and as well Prometheus for internal usage",
    "start": "1881200",
    "end": "1887679"
  },
  {
    "text": "so they are incredibly efficient as well we generate more than 1.8 million spans",
    "start": "1887679",
    "end": "1894519"
  },
  {
    "text": "per second that's across um 990,000 spans um 90,000 traces per second and",
    "start": "1894519",
    "end": "1901919"
  },
  {
    "text": "they do all this with less than 125 cores being used across all of our clusters and with less than 100 replicas",
    "start": "1901919",
    "end": "1909120"
  },
  {
    "text": "in total so incredibly little useful um tool in",
    "start": "1909120",
    "end": "1915399"
  },
  {
    "text": "here now that we've seen how we can roll out open Telemetry I'd like to take you through some steps that you can take to",
    "start": "1915399",
    "end": "1923080"
  },
  {
    "text": "to basically make sure that you you can keep Telemetry valuable within your",
    "start": "1923080",
    "end": "1929480"
  },
  {
    "text": "organization because the reality is that most data that we gather for debugging",
    "start": "1929480",
    "end": "1934600"
  },
  {
    "text": "purposes is never used um when we before before open Telemetry when we had basically were",
    "start": "1934600",
    "end": "1941120"
  },
  {
    "text": "using metrics and logs uh most of the time um we found that basically all the",
    "start": "1941120",
    "end": "1949639"
  },
  {
    "text": "logs that were being well the the logs that are being stored they normally correspond",
    "start": "1949639",
    "end": "1955039"
  },
  {
    "text": "to requests that are successful in a way",
    "start": "1955039",
    "end": "1960720"
  },
  {
    "text": "they they don't um they returned in an acceptable response time or an expected",
    "start": "1960720",
    "end": "1968200"
  },
  {
    "text": "response time and they don't contain any errors but we still had to keep those logs and same with metrics we found that",
    "start": "1968200",
    "end": "1976039"
  },
  {
    "text": "metrics the were being generated with some really high granularity attributes",
    "start": "1976039",
    "end": "1982120"
  },
  {
    "text": "because service owners were not using tracing to debuging they would do using metrics to debug",
    "start": "1982120",
    "end": "1987960"
  },
  {
    "text": "regressions now we've seen how open Telemetry can help you use the right tool for the right job so when you've",
    "start": "1987960",
    "end": "1995559"
  },
  {
    "text": "got metrics that are low cardinality and low volume but they can link to traces",
    "start": "1995559",
    "end": "2002960"
  },
  {
    "text": "and those distributed traces can be sampled in a much better way that you",
    "start": "2002960",
    "end": "2008039"
  },
  {
    "text": "could sample login let's consider this case for example we've got on the left a",
    "start": "2008039",
    "end": "2013880"
  },
  {
    "text": "trace um a distributed Trace that goes through multiple services so if you were",
    "start": "2013880",
    "end": "2019320"
  },
  {
    "text": "to sample logs you can only sample logs by looking at an individual log record",
    "start": "2019320",
    "end": "2025279"
  },
  {
    "text": "right so you can decide to maybe store 10% of the debu logs and maybe all 100%",
    "start": "2025279",
    "end": "2032399"
  },
  {
    "text": "of the errors right but then those debu log LS can be crucial to",
    "start": "2032399",
    "end": "2038360"
  },
  {
    "text": "identify regression so then what ends up happening is that people store all the",
    "start": "2038360",
    "end": "2043679"
  },
  {
    "text": "debug logs and then become quite costly from the point of view of storage and",
    "start": "2043679",
    "end": "2049040"
  },
  {
    "text": "transport so with distributed tracing we have better ways of being able to keep the useful data and then discard the",
    "start": "2049040",
    "end": "2056240"
  },
  {
    "text": "rest on the example on the left we're using what's called probability sampling",
    "start": "2056240",
    "end": "2061320"
  },
  {
    "text": "this means that when um that we decide if we want to keep a span or not we want",
    "start": "2061320",
    "end": "2067398"
  },
  {
    "text": "to sample a span or not depending on its properties or the propagated Trace context that comes with it so for",
    "start": "2067399",
    "end": "2074398"
  },
  {
    "text": "example here service a starts a trace and decides to sample that particular",
    "start": "2074399",
    "end": "2080878"
  },
  {
    "text": "trace the whole Trace depending on the trace ID so it decides to sample the",
    "start": "2080879",
    "end": "2086638"
  },
  {
    "text": "span and then it propagates that decision Downstream so we've got the",
    "start": "2086639",
    "end": "2093560"
  },
  {
    "text": "child span for example here that says well if my parent span was sampled then",
    "start": "2093560",
    "end": "2098680"
  },
  {
    "text": "I respect that decision and I'll sample it myself and when we propagate that to another service that may be us in a",
    "start": "2098680",
    "end": "2105400"
  },
  {
    "text": "different type of sampling that service can basically say well if this Trace is",
    "start": "2105400",
    "end": "2110960"
  },
  {
    "text": "already being sampled then I will store all the spans for this particular um for this particular Trace so what this",
    "start": "2110960",
    "end": "2118400"
  },
  {
    "text": "allows us is to have one complete view of distributed transactions without having to keep every single one of them",
    "start": "2118400",
    "end": "2125760"
  },
  {
    "text": "now this is simpler to config because it doesn't require any external components but it does have one downside that is",
    "start": "2125760",
    "end": "2131880"
  },
  {
    "text": "that we're looking at the a percentage of the traces being",
    "start": "2131880",
    "end": "2136960"
  },
  {
    "text": "sampled and we can't really identify which ones are the good ones or the bad ones so with tailbase sampling on the",
    "start": "2136960",
    "end": "2144400"
  },
  {
    "text": "other hand we can have a look at the whole trace it is more powerful but it",
    "start": "2144400",
    "end": "2149880"
  },
  {
    "text": "also requires external components it requires all the spans for one",
    "start": "2149880",
    "end": "2155400"
  },
  {
    "text": "particular Trace to be fed through the same uh replica so it can be fed through",
    "start": "2155400",
    "end": "2161200"
  },
  {
    "text": "the same um so it can be kept in memory so the way it works is um when you",
    "start": "2161200",
    "end": "2168119"
  },
  {
    "text": "receive the first span for a trace you start storing all the spans for that particular Trace in memory and then you",
    "start": "2168119",
    "end": "2175079"
  },
  {
    "text": "wait for some time so that can be configured in multiple ways uh but then at some point you need to make a",
    "start": "2175079",
    "end": "2181880"
  },
  {
    "text": "decision if you want to keep this trace or not but you can look at the whole",
    "start": "2181880",
    "end": "2186960"
  },
  {
    "text": "trace and you can see well is this Trace slower than usual slower than normal so",
    "start": "2186960",
    "end": "2192319"
  },
  {
    "text": "then we'll keep it or does this Trace contain any errors in any of the individual operations then we'll keep it",
    "start": "2192319",
    "end": "2199079"
  },
  {
    "text": "so then allows for a more um insightful way of um of keeping data of sampling",
    "start": "2199079",
    "end": "2205040"
  },
  {
    "text": "data but it does require as I said an external component normally that could be an open Telemetry collector where you",
    "start": "2205040",
    "end": "2211200"
  },
  {
    "text": "can sve all the data and there are different ways where you can rout traces to particular collectors or you can use",
    "start": "2211200",
    "end": "2217839"
  },
  {
    "text": "a vendor and there are multiple vendors out there that provide this capability to do tail based uh",
    "start": "2217839",
    "end": "2223880"
  },
  {
    "text": "sampling now you this Skys scanner allows us to store about only",
    "start": "2223880",
    "end": "2231319"
  },
  {
    "text": "4.5% of all our traces and what we do here is we're store in the ones that matter the ones",
    "start": "2231319",
    "end": "2237440"
  },
  {
    "text": "that are like slower than usual or the ones that are uh that",
    "start": "2237440",
    "end": "2243040"
  },
  {
    "text": "contain errors and then we store a percentage a random percentage of the of",
    "start": "2243040",
    "end": "2248760"
  },
  {
    "text": "the rest but you can see how we're just keeping the valuable data and reducing",
    "start": "2248760",
    "end": "2254319"
  },
  {
    "text": "costs these way uh in these ways now when service owners come to",
    "start": "2254319",
    "end": "2260760"
  },
  {
    "text": "instrument their services they can sometimes add a lot of cost and a lot of uh load to Telemetry",
    "start": "2260760",
    "end": "2267240"
  },
  {
    "text": "systems and as platform Engineers we've got two ways to deal with this two main",
    "start": "2267240",
    "end": "2272760"
  },
  {
    "text": "ways one is the way of uh limiting so we can have controls on how service owners",
    "start": "2272760",
    "end": "2279640"
  },
  {
    "text": "are allowed to add Telemetry to their systems for example to add an",
    "start": "2279640",
    "end": "2285839"
  },
  {
    "text": "instrumentation package or to um add a new custom",
    "start": "2285839",
    "end": "2291960"
  },
  {
    "text": "metric they create a request and then basically they can um another team goes",
    "start": "2291960",
    "end": "2299760"
  },
  {
    "text": "and puts that into an allow list and then you end up being able to do that but it generally doesn't work um slows",
    "start": "2299760",
    "end": "2307800"
  },
  {
    "text": "down team velocity because they won't be blocked on another team to allow them to",
    "start": "2307800",
    "end": "2313599"
  },
  {
    "text": "produce Telemetry it generates toil for Telemetry admins as well to add that",
    "start": "2313599",
    "end": "2319480"
  },
  {
    "text": "that exception to our Rule and then it generally falls out a date soon so there",
    "start": "2319480",
    "end": "2324920"
  },
  {
    "text": "could be a metric that you instrumented last year that was crucial for your",
    "start": "2324920",
    "end": "2331119"
  },
  {
    "text": "service but now the service evolved and is no longer valuable but still there um",
    "start": "2331119",
    "end": "2337560"
  },
  {
    "text": "incurring costs now What's um what works better is to visualize to put data in front of",
    "start": "2337560",
    "end": "2344480"
  },
  {
    "text": "people and to visualize that cost um or that load in the syst in the Telemetry",
    "start": "2344480",
    "end": "2350000"
  },
  {
    "text": "backends and systems and encouraging a good use of telemetry signals so heat open Telemetry can also",
    "start": "2350000",
    "end": "2357240"
  },
  {
    "text": "help because it allows us to segment data with using semantic conventions so",
    "start": "2357240",
    "end": "2364520"
  },
  {
    "text": "we've seen how every single event or log or um metric span it could",
    "start": "2364520",
    "end": "2371720"
  },
  {
    "text": "be it has to be annotated with uh the service name for example and optionally",
    "start": "2371720",
    "end": "2377280"
  },
  {
    "text": "the service Nam space which is a way to group multiple Services together and then we can assign that we can split",
    "start": "2377280",
    "end": "2383440"
  },
  {
    "text": "that data and look at look at for example storage cost or storage volume",
    "start": "2383440",
    "end": "2388920"
  },
  {
    "text": "or or cardinality for each of the services and then we can",
    "start": "2388920",
    "end": "2394960"
  },
  {
    "text": "assign uh cost to teams and when teams start to review this when they review",
    "start": "2394960",
    "end": "2400359"
  },
  {
    "text": "the Telemetry cost close to their to other costs like",
    "start": "2400359",
    "end": "2405680"
  },
  {
    "text": "for example um cloud provider costs they start to be proactive about this and",
    "start": "2405680",
    "end": "2411800"
  },
  {
    "text": "we've seen that um internally we've seen teams that that they start to look at Telemetry in a way that well are we",
    "start": "2411800",
    "end": "2417839"
  },
  {
    "text": "actually using the right signal um to instrumental services and in some cases",
    "start": "2417839",
    "end": "2423200"
  },
  {
    "text": "we've seen teams that just by moving away from debu level loging and into tracing they have saved more than",
    "start": "2423200",
    "end": "2430880"
  },
  {
    "text": "90% of their Telemetry costs so we're rewarding that learning of learning to",
    "start": "2430880",
    "end": "2437160"
  },
  {
    "text": "use the right signal the right tool for the right job and we're also making sure that uh the telemeter that we're using",
    "start": "2437160",
    "end": "2444599"
  },
  {
    "text": "is the best that we can and that also enables product",
    "start": "2444599",
    "end": "2450240"
  },
  {
    "text": "Health another area where we can learn from our um failures is during the",
    "start": "2450440",
    "end": "2457440"
  },
  {
    "text": "incident's response or during the incident's uh the incident postmortem And discussing those",
    "start": "2457440",
    "end": "2463560"
  },
  {
    "text": "learnings this is one of my favorite quotes from Einstein that is failure is success in",
    "start": "2463560",
    "end": "2470319"
  },
  {
    "text": "progress and we should all be familiar here with um with the learnings that one",
    "start": "2470319",
    "end": "2476079"
  },
  {
    "text": "can get from postmortem of sharing those across the organization and sometimes outside the",
    "start": "2476079",
    "end": "2482680"
  },
  {
    "text": "organization and we're normally focused on learning from it from the point of view of um improving the resiliency of",
    "start": "2482680",
    "end": "2490319"
  },
  {
    "text": "the systems improving the reliability but not always from the point of view of",
    "start": "2490319",
    "end": "2495400"
  },
  {
    "text": "um improving the observability of our systems especially",
    "start": "2495400",
    "end": "2500520"
  },
  {
    "text": "when we think about the system as a whole so we can we can foster that",
    "start": "2500520",
    "end": "2506720"
  },
  {
    "text": "learning and Improvement Culture by following some steps so one is the first",
    "start": "2506720",
    "end": "2512000"
  },
  {
    "text": "one is to establish those targets for uh time to detection and time to resolve",
    "start": "2512000",
    "end": "2518319"
  },
  {
    "text": "and it's quite important because when those are not met we can start to find areas of improvement that could be",
    "start": "2518319",
    "end": "2525480"
  },
  {
    "text": "looking at new Telemetry that we could add new instrumentation packages we could um we could we could make sure",
    "start": "2525480",
    "end": "2533680"
  },
  {
    "text": "that service owners are using the right tool to debug their services maybe their",
    "start": "2533680",
    "end": "2539240"
  },
  {
    "text": "dashboards and their or maybe their rum books did not even mention looking at distributed traces for example so this",
    "start": "2539240",
    "end": "2546520"
  },
  {
    "text": "is where we can where it's good to encourage certain observability Champions within your organization to",
    "start": "2546520",
    "end": "2552480"
  },
  {
    "text": "join these postmortem and to provide their feedback and to say well actually",
    "start": "2552480",
    "end": "2557720"
  },
  {
    "text": "did you know that maybe you didn't know but you've got tracing enabl by default",
    "start": "2557720",
    "end": "2563000"
  },
  {
    "text": "and we've seen this happening where service owners did not know that you know or they were not making or they",
    "start": "2563000",
    "end": "2568480"
  },
  {
    "text": "knew that there was tracing but they didn't know how to use it so having these observability Champions helps to",
    "start": "2568480",
    "end": "2574359"
  },
  {
    "text": "bring that to attention but also having a guild or a chapter or some form of like group of people across a company",
    "start": "2574359",
    "end": "2581400"
  },
  {
    "text": "across an organization where you can not just gather external feedback but also share learnings share these post morms",
    "start": "2581400",
    "end": "2589599"
  },
  {
    "text": "share OBS news about observability new features and so on and the last thing",
    "start": "2589599",
    "end": "2595200"
  },
  {
    "text": "and I think is quite valuable and something that is sometimes overlooked is how Telemetry and how observability",
    "start": "2595200",
    "end": "2600720"
  },
  {
    "text": "can just help teams understand their systems outside of the life of the incident life cycle so we've seen that",
    "start": "2600720",
    "end": "2608400"
  },
  {
    "text": "when you get two teams in one room that are part of the same system and that and",
    "start": "2608400",
    "end": "2614800"
  },
  {
    "text": "that their traces will be going through multip to some of their services what we're seeing is that that allows them to",
    "start": "2614800",
    "end": "2621119"
  },
  {
    "text": "identify usage patterns they may not know that where there for example a particular dependency or a particular",
    "start": "2621119",
    "end": "2628119"
  },
  {
    "text": "endpoint that's being used that didn't know it was being used so being able to have those sessions where teams can",
    "start": "2628119",
    "end": "2635040"
  },
  {
    "text": "evaluate that to limit to together and can improve one the Telemetry they produce and also the system in some way",
    "start": "2635040",
    "end": "2642079"
  },
  {
    "text": "is is quite important so a few takeaway messages from from this",
    "start": "2642079",
    "end": "2647960"
  },
  {
    "text": "talk the first one is um that complex systems require effective observability",
    "start": "2647960",
    "end": "2654640"
  },
  {
    "text": "we can no longer just pretend that we can debug in our systems looking at",
    "start": "2654640",
    "end": "2660040"
  },
  {
    "text": "Individual Services and looking at U signals The Limited signals as isolated",
    "start": "2660040",
    "end": "2666760"
  },
  {
    "text": "events we've seen as well how Open Standards and open Telemetry can Empower",
    "start": "2666760",
    "end": "2672160"
  },
  {
    "text": "organizations to to simplify their infrastructure to simplify their their",
    "start": "2672160",
    "end": "2678000"
  },
  {
    "text": "tooling their Telemetry tooling while integrating with with vendors and with other open source um platforms as well",
    "start": "2678000",
    "end": "2685880"
  },
  {
    "text": "and also how open Telemetry enables signals to be used efficiently so when",
    "start": "2685880",
    "end": "2692319"
  },
  {
    "text": "we use the right signal or the right tool for the right job not we not just improving observability",
    "start": "2692319",
    "end": "2699880"
  },
  {
    "text": "but we may we may also be reducing cost and reducing the operational toil and",
    "start": "2699880",
    "end": "2708839"
  },
  {
    "text": "the cognitive load to operate our services thank",
    "start": "2708839",
    "end": "2714838"
  },
  {
    "text": "[Music]",
    "start": "2717630",
    "end": "2723079"
  },
  {
    "text": "you",
    "start": "2724240",
    "end": "2727240"
  }
]