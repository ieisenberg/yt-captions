[
  {
    "text": "hello everyone so this talk is going to be about client side development web development isomorphic functional client",
    "start": "7240",
    "end": "14559"
  },
  {
    "text": "side web development without JavaScript with Scala JS so if any of you want to",
    "start": "14559",
    "end": "19920"
  },
  {
    "text": "follow along on your laptops on your phones the slides are online at url.com Scala JS um but they are also here on",
    "start": "19920",
    "end": "27400"
  },
  {
    "text": "screen so feel free to not follow along um so who am I so my name is hoe I used",
    "start": "27400",
    "end": "34160"
  },
  {
    "text": "to write Coffey script at Dropbox and right now I'm working on the server platform team and I'm a early contributor and user to the Scala JS",
    "start": "34160",
    "end": "40879"
  },
  {
    "text": "project so I'm not the original author and I'm not the main person driving it but I'm someone who's done a bunch of",
    "start": "40879",
    "end": "46480"
  },
  {
    "text": "things with it and knows what it is and gives talks about it so that's my Twitter handle and that's my GitHub um",
    "start": "46480",
    "end": "54280"
  },
  {
    "text": "so here's what we'll talk about today in brief and let's get started so to begin",
    "start": "54280",
    "end": "61079"
  },
  {
    "text": "with I'll talk a bit about where JavaScript is going so what are the trends in the ecosystem today and why",
    "start": "61079",
    "end": "67840"
  },
  {
    "text": "are they IR relevant so a few things are relatively widespread for example people",
    "start": "67840",
    "end": "74040"
  },
  {
    "text": "are more used to doing IM mutable data structures or IM mutability both in JavaScript land using immutable JS and",
    "start": "74040",
    "end": "80920"
  },
  {
    "text": "in for example closure script or Elm or other like compiled to JavaScript languages and there are benefits for",
    "start": "80920",
    "end": "86040"
  },
  {
    "text": "example if things are immutable it means that having an undo operation your website simply means keeping the old",
    "start": "86040",
    "end": "91640"
  },
  {
    "text": "versions of things and putting them back into place when um when it's time and it also means that you don't need to",
    "start": "91640",
    "end": "97360"
  },
  {
    "text": "defensively copy things to avoid people making like accidental mutations to your internal data structure it makes",
    "start": "97360",
    "end": "103759"
  },
  {
    "text": "debugging easier because there's fewer things to worry about things are getting more functional functional meaning like you you instead",
    "start": "103759",
    "end": "110759"
  },
  {
    "text": "of mutating some Dom element like you did in jQuery world you return what you want you return the result that you want",
    "start": "110759",
    "end": "117360"
  },
  {
    "text": "to show people like you do in react even when It's tricky to return something for example that something is asynchronous",
    "start": "117360",
    "end": "123320"
  },
  {
    "text": "you can return a promise or even it requires crazy hacks like I want to return the whole web page and still make",
    "start": "123320",
    "end": "128479"
  },
  {
    "text": "it be efficient you do things like the virtual Dom and have the crazy hacks be limited to the virtual Dom diffing",
    "start": "128479",
    "end": "134480"
  },
  {
    "text": "algorithm while in your code when you're writing reactjs code you just return a whole new page and let react sort it out",
    "start": "134480",
    "end": "141000"
  },
  {
    "text": "and make it fast for you things that getting more type save or type checked you catch bugs earlier",
    "start": "141000",
    "end": "147440"
  },
  {
    "text": "that way instead of catching it in develop month you catch it before you even run your code because for example",
    "start": "147440",
    "end": "152760"
  },
  {
    "text": "typescript will find the places where your code is obviously Incorrect and you don't even need to run it um it also",
    "start": "152760",
    "end": "159000"
  },
  {
    "text": "provides some other things like documentation doesn't fall out of sync and it makes bad things look bad so if",
    "start": "159000",
    "end": "164040"
  },
  {
    "text": "you annotate the type as any and someone doing code review sees this type and sees this any he'll be asking you why is",
    "start": "164040",
    "end": "170040"
  },
  {
    "text": "this any why is it not an integer or a string or a list of user objects why does it really have to be any and it",
    "start": "170040",
    "end": "176440"
  },
  {
    "text": "kind of forces you to really think about what you really are putting in your variables versus in plain JavaScript",
    "start": "176440",
    "end": "182480"
  },
  {
    "text": "where you can just put anything there and no one really notices that you're mixing up your variable",
    "start": "182480",
    "end": "187560"
  },
  {
    "text": "contents things are getting compiled even in JavaScript World um it's no longer a just reload the browser and",
    "start": "187560",
    "end": "194400"
  },
  {
    "text": "refresh the page system everyone uses build tools and people aren't using build tools because they want to make",
    "start": "194400",
    "end": "199680"
  },
  {
    "text": "life hard for themselves people are using build tools because they provide real value things like minification things like dependency resolution things",
    "start": "199680",
    "end": "206440"
  },
  {
    "text": "like um other static assets like CSS being compiled and package together with your JavaScript whether you're using and",
    "start": "206440",
    "end": "212799"
  },
  {
    "text": "they even provide things like new languages like es6 or typescript or jsx and lastly things are getting more",
    "start": "212799",
    "end": "220519"
  },
  {
    "text": "isomorphic so or some people call it Universal but the basic meaning is you run the same code client and server and",
    "start": "220519",
    "end": "227040"
  },
  {
    "text": "you don't need to worry about repeating yourself and reimplementing the same code twice because that's a pain in the neck because if you're writing",
    "start": "227040",
    "end": "233239"
  },
  {
    "text": "JavaScript on client writing JavaScript on server your application lives in the middle and you can run whatever you want",
    "start": "233239",
    "end": "238400"
  },
  {
    "text": "wherever you want so that's where JavaScript is going in short or at least that's where I see it",
    "start": "238400",
    "end": "244840"
  },
  {
    "text": "going so this is what JavaScript looks like today or maybe last year I",
    "start": "244840",
    "end": "250519"
  },
  {
    "text": "instantiate the new XML HTTP request I open it with the URL to get maybe the list of repositories I have on GitHub",
    "start": "250519",
    "end": "257239"
  },
  {
    "text": "and I set to unload to set the document body and click",
    "start": "257239",
    "end": "262440"
  },
  {
    "text": "Send this is what JavaScript will be next year or maybe this year if you if",
    "start": "262440",
    "end": "267680"
  },
  {
    "text": "you're using Babel to or or or or if you're only supporting the latest version of Chrome and Firefox you have",
    "start": "267680",
    "end": "273120"
  },
  {
    "text": "let bindings which are immutable and don't do the weird variable hoisting thing that JavaScript tends to do with vars and you have Arrow functions to",
    "start": "273120",
    "end": "280919"
  },
  {
    "text": "make setting callbacks easier Scala JS is a different language",
    "start": "280919",
    "end": "286120"
  },
  {
    "text": "that compiles to JavaScript and traditionally Scala has run on the jvm but when you look at the Scala code that",
    "start": "286120",
    "end": "292560"
  },
  {
    "text": "compiles to the equivalent JavaScript is almost the same so instead of let they call it valve that's basically not",
    "start": "292560",
    "end": "298919"
  },
  {
    "text": "important you need to put type annotations on things because in Scala world people tend to use types kind of",
    "start": "298919",
    "end": "304320"
  },
  {
    "text": "like typescript and in Scala World double equals does the right thing so you don't need to worry about triple",
    "start": "304320",
    "end": "310000"
  },
  {
    "text": "equals so if you if Scala looks so much like JavaScript but is actually a whole new language then why should you care",
    "start": "310000",
    "end": "316400"
  },
  {
    "text": "about using Scala in the web browser like isn't this all just a waste of time changing variables changing keywords around so Scala Gs does or the Scala",
    "start": "316400",
    "end": "326639"
  },
  {
    "text": "language that Scala GS is based on has all all of the same properties of JavaScript is going towards it's",
    "start": "326639",
    "end": "331720"
  },
  {
    "text": "immutable it's functional it's type checked it's compiled and it let's you write isomorphic code it runs on both",
    "start": "331720",
    "end": "337520"
  },
  {
    "text": "Cent and server so just some quick numbers the turnaround time for compiling Scala JS",
    "start": "337520",
    "end": "344440"
  },
  {
    "text": "code and running the browsers but one or two seconds when warm so it's not a huge compile time the application start at 70",
    "start": "344440",
    "end": "351160"
  },
  {
    "text": "kilobytes which is massive for a hello hello world so that's definitely not ideal but as it as it grows it tends to",
    "start": "351160",
    "end": "357600"
  },
  {
    "text": "go to like hundreds of kilobytes or even a re relatively large application so it's not tiny but it's not too terrible",
    "start": "357600",
    "end": "364080"
  },
  {
    "text": "and the code is very efficient and in terms of computational performance on the CPU runs about 1X to 2x as slow as",
    "start": "364080",
    "end": "371360"
  },
  {
    "text": "normal JavaScript so es6 vers Scala looks almost the same why should you care um",
    "start": "371360",
    "end": "379800"
  },
  {
    "text": "one thing that's good nice about Scala is that it's type check by default so for example in es6 or es5 code if you're",
    "start": "379800",
    "end": "386880"
  },
  {
    "text": "writing JavaScript you make a mistake you miss spell till earn instead of children you get a runtime error in the",
    "start": "386880",
    "end": "393360"
  },
  {
    "text": "browser gives you a stack Trace maybe or maybe just tells you a line in HTML file it blew up at and you have to go figure",
    "start": "393360",
    "end": "399720"
  },
  {
    "text": "out why was it undefined why doesn't it have a length attribute in scy JS code",
    "start": "399720",
    "end": "405319"
  },
  {
    "text": "it looks almost the same except that when you make a mistake it gets caught in the editor for you you don't even",
    "start": "405319",
    "end": "410880"
  },
  {
    "text": "need to get look at the browser to see that your error has that end error has",
    "start": "410880",
    "end": "415960"
  },
  {
    "text": "occurred and because there's a compiler that checks it for you that does the same thing as editor there's no chance",
    "start": "415960",
    "end": "421720"
  },
  {
    "text": "that you'll accidentally check in code that makes such a trivial mistake this doesn't catch subtle mistakes but at",
    "start": "421720",
    "end": "426800"
  },
  {
    "text": "least it catches the trivial mistakes so you as a programmer can focus more of your brain power on the more important",
    "start": "426800",
    "end": "431919"
  },
  {
    "text": "subtle issues that your program will face another thing that scals does very",
    "start": "431919",
    "end": "437199"
  },
  {
    "text": "well is that it provides really good editor support so so if any of you have used Java before or C using um Visual",
    "start": "437199",
    "end": "444440"
  },
  {
    "text": "Studio like it's well known that being able to press Dot and see a total list of what everything your me your object",
    "start": "444440",
    "end": "450479"
  },
  {
    "text": "can do every method every variable every property is very useful and in scalar JS",
    "start": "450479",
    "end": "456960"
  },
  {
    "text": "rather than sifting through the Mozilla developer Network like line by line using command F to try and find the method you want to call you can press",
    "start": "456960",
    "end": "464280"
  },
  {
    "text": "dot start typing and see a list of things that you can do on a particular variable and easily pull up",
    "start": "464280",
    "end": "470000"
  },
  {
    "text": "documentation not just a English description of what the variable does but a formal like type signature of",
    "start": "470000",
    "end": "476919"
  },
  {
    "text": "saying that child nodes here returns a no list doesn't return one node or a couple of nodes or an array of nodes",
    "start": "476919",
    "end": "483280"
  },
  {
    "text": "returns a nod list object and a pen child takes a new child which is a node and not anything else and this is very",
    "start": "483280",
    "end": "489080"
  },
  {
    "text": "handy to have right in the editor you don't have to context switch and flip over to a browser and flip back when you've read",
    "start": "489080",
    "end": "495479"
  },
  {
    "text": "something so let's do a live demo I will take this application which exists on",
    "start": "495479",
    "end": "500759"
  },
  {
    "text": "GitHub at github.com Le howw workbench example app and I'll show you what it's like working with scholar JS so",
    "start": "500759",
    "end": "509759"
  },
  {
    "text": "here we have it um here is a if I go to Local Host 1 2 3 4 5 here's a small",
    "start": "509759",
    "end": "517000"
  },
  {
    "text": "scalar JS like example application um if you look at the project it basically",
    "start": "517000",
    "end": "524120"
  },
  {
    "text": "has uh Source folder two HTML files one",
    "start": "524120",
    "end": "529519"
  },
  {
    "text": "of which is a Dev version which you're going to be using for the demo one of which is optimized version and has a",
    "start": "529519",
    "end": "535320"
  },
  {
    "text": "small amount of scalar code which is here can you guys at the back see the code cannot see the code okay I'll make it",
    "start": "535320",
    "end": "541480"
  },
  {
    "text": "bigger now turn off the lights can somebody turn off the lights I don't know how to",
    "start": "541480",
    "end": "547200"
  },
  {
    "text": "turn off the lights um don't know if no one's going to turn off the lights then I probably don't",
    "start": "547200",
    "end": "553079"
  },
  {
    "text": "know how to turn off the lights myself um well I'll just keep going",
    "start": "553079",
    "end": "558480"
  },
  {
    "text": "there in that case so over here we have what is a small",
    "start": "558480",
    "end": "564959"
  },
  {
    "text": "scolar JS application we have a main method so this kind of a hold over from java days",
    "start": "564959",
    "end": "571200"
  },
  {
    "text": "because Scala normally runs on jvm and the main method instead of taking an array of strings like a Java or c main",
    "start": "571200",
    "end": "576440"
  },
  {
    "text": "method does takes in a HTML canvas object you can see the HTML canvas HTML",
    "start": "576440",
    "end": "581800"
  },
  {
    "text": "canvas object actually is like well defined with a nice signature and everything with the list of methods and",
    "start": "581800",
    "end": "587360"
  },
  {
    "text": "attributes it has and it gets a canvas rendering context",
    "start": "587360",
    "end": "593040"
  },
  {
    "text": "can canvas rendering context 2D not any other rendering context and it does a math sets user set interval in order to",
    "start": "593040",
    "end": "600440"
  },
  {
    "text": "draw this cute little um ciny triangle so that's kind of neat you can change",
    "start": "600440",
    "end": "605680"
  },
  {
    "text": "the color for example from black to white and it'll recompile for you the first recompile is often pretty slow",
    "start": "605680",
    "end": "613040"
  },
  {
    "text": "um looks like it's not done yet but after after few recompiles it tends to",
    "start": "613040",
    "end": "618240"
  },
  {
    "text": "warm up and become relatively Speedy so first slow second not so slow and after that it gets down to one or two seconds",
    "start": "618240",
    "end": "624600"
  },
  {
    "text": "per recompile so this is",
    "start": "624600",
    "end": "629839"
  },
  {
    "text": "Scala code that draws on a canvas I'm going to change it for you to show you how to use scalar code that renders to",
    "start": "629839",
    "end": "635000"
  },
  {
    "text": "HTML because that's maybe what most of you are interested in so I'm going to delete all the code because I don't need",
    "start": "635000",
    "end": "642240"
  },
  {
    "text": "anymore I'm going to delete this and I'm going to say dom. document. inner body.",
    "start": "642240",
    "end": "651360"
  },
  {
    "text": "innerhtml equals m equals hello world then we'll run this and you see is",
    "start": "651360",
    "end": "658320"
  },
  {
    "text": "Hello World it doesn't look very pretty but we'll fix that um so in a HTML is just a normal JavaScript API it's bit",
    "start": "658320",
    "end": "664880"
  },
  {
    "text": "hard to see the documentation but is basically CP from the muzilla developer Network documentation so let's do something I'm",
    "start": "664880",
    "end": "671920"
  },
  {
    "text": "going to make a search box to look for people's repositories on GitHub so for those of you who don't know GitHub has",
    "start": "671920",
    "end": "677959"
  },
  {
    "text": "like a has multiple nice rest apis including one for users which lets you see what repos they",
    "start": "677959",
    "end": "685720"
  },
  {
    "text": "have rate limit exceeded okay that's unfortunate",
    "start": "685720",
    "end": "691240"
  },
  {
    "text": "um authenticated repos at higher rate let's try changing that and using a",
    "start": "691240",
    "end": "697760"
  },
  {
    "text": "different different API I'm going to use open weather map and see if I can make that API work actually I'm just going to skip the",
    "start": "697760",
    "end": "705000"
  },
  {
    "text": "API for now and I'm going to just go for local a local local search box in the application so let's say I have a list",
    "start": "705000",
    "end": "711680"
  },
  {
    "text": "of things I on to search for for example um Val Repose equals a sequence of I'm",
    "start": "711680",
    "end": "718720"
  },
  {
    "text": "just going to give the name of the repos here for example maybe I have underscore maybe I have um Scala JS maybe I have",
    "start": "718720",
    "end": "726519"
  },
  {
    "text": "Scala test and maybe I have a bunch of other libraries I'm going to write",
    "start": "726519",
    "end": "732240"
  },
  {
    "text": "out I don't think there actually are apple banana and mango repos but let's pretend for",
    "start": "734720",
    "end": "740639"
  },
  {
    "text": "now um so if wanted to show this I",
    "start": "740639",
    "end": "746199"
  },
  {
    "text": "could I could print out the repos and it's a bit hard to see but it",
    "start": "747480",
    "end": "753360"
  },
  {
    "text": "turns out at the bottom in your console log so let's do more things let's make a search bar so first I'm going to",
    "start": "753360",
    "end": "759800"
  },
  {
    "text": "generate some HTML there's a HTML generation Library called Scala tags that's quite popular in in Scala JS land",
    "start": "759800",
    "end": "768040"
  },
  {
    "text": "and it lets you generate HTML kind of like how react generates HTML using like inline function calls or inline syntax",
    "start": "768040",
    "end": "774000"
  },
  {
    "text": "within your uh main code base so for example I could say um dom.",
    "start": "774000",
    "end": "780160"
  },
  {
    "text": "document.body doin HTML is equal to empty and I'm going to say a pen child",
    "start": "780160",
    "end": "786639"
  },
  {
    "text": "I'm going to make a div. render I'm going to do H1 hello world and I'm going",
    "start": "786639",
    "end": "793320"
  },
  {
    "text": "to do a paragraph of today is wedna",
    "start": "793320",
    "end": "801639"
  },
  {
    "text": "day okay so that's how that's basic hello of how to generate HTML it looks",
    "start": "801839",
    "end": "807240"
  },
  {
    "text": "kind of ugly so I'm going to go get some bootstrap to make it look pretty cuz that's how you make web",
    "start": "807240",
    "end": "814399"
  },
  {
    "text": "websites look good apparently so bootstrap I'm going back to the H the HTML file which kind of houses this",
    "start": "814399",
    "end": "822240"
  },
  {
    "text": "application um do that refresh the",
    "start": "822240",
    "end": "827800"
  },
  {
    "text": "page and now it's bootstrapping and web scale so let's make a search box for search",
    "start": "827800",
    "end": "835199"
  },
  {
    "text": "box you need an input",
    "start": "835199",
    "end": "838839"
  },
  {
    "text": "you have now we have input which doesn't do anything and let's say that well I want to make the input do something so",
    "start": "840440",
    "end": "847320"
  },
  {
    "text": "first thing I'm going to do is I'm going to take the input out and give it a name and once the input is out I can my",
    "start": "847320",
    "end": "857959"
  },
  {
    "text": "input I can say well my input dot um on",
    "start": "857959",
    "end": "863639"
  },
  {
    "text": "key on key up equals uh Arrow function",
    "start": "863639",
    "end": "870360"
  },
  {
    "text": "and I'm going to say well I guess I need output too so I'm going to call it my",
    "start": "870360",
    "end": "875959"
  },
  {
    "text": "output um Val my output equals an an unordered",
    "start": "875959",
    "end": "881720"
  },
  {
    "text": "list so I'm going to I'm going to clear my output and I'm",
    "start": "881720",
    "end": "888279"
  },
  {
    "text": "going to say my output do a pench child um for now let's just say hello",
    "start": "888279",
    "end": "896560"
  },
  {
    "text": "world of let's not say hello world let's say just make it echo my input so my input. value that's what I want and I",
    "start": "896560",
    "end": "904600"
  },
  {
    "text": "guess I think in new call. render okay so reload",
    "start": "904600",
    "end": "910759"
  },
  {
    "text": "reload um hello world I am a cow so that seems",
    "start": "910759",
    "end": "917079"
  },
  {
    "text": "to work let me make that bigger for you um so that's a basic hello world input",
    "start": "917079",
    "end": "925680"
  },
  {
    "text": "output let's make it do a bit do a simple search so I want things I want to display things from this repo sequence",
    "start": "925680",
    "end": "932920"
  },
  {
    "text": "which match the prefix let's say so",
    "start": "932920",
    "end": "938720"
  },
  {
    "text": "for um repo in repos oops I'm going to",
    "start": "938800",
    "end": "945360"
  },
  {
    "text": "say if repo dot or let's say if my",
    "start": "945360",
    "end": "950680"
  },
  {
    "text": "input. value dot no let's do if repo do starts with",
    "start": "950680",
    "end": "957240"
  },
  {
    "text": "my input. value I'm going to append append the I want to",
    "start": "957240",
    "end": "964920"
  },
  {
    "text": "append the repo to the output not the input so here we are and if I say for",
    "start": "964920",
    "end": "972440"
  },
  {
    "text": "example um mango mango Scala T so that's a simple",
    "start": "972440",
    "end": "980000"
  },
  {
    "text": "search box um I could color it let's say so let's say I want to Val prefix suffix",
    "start": "980000",
    "end": "990040"
  },
  {
    "text": "is equal to um my repo do split at my input. value.",
    "start": "990040",
    "end": "999560"
  },
  {
    "text": "length I'm going to just wrap this to the next line so you can see what's happening and I'm going to say um",
    "start": "999560",
    "end": "1008720"
  },
  {
    "text": "span background color yellow so this list item is going",
    "start": "1008839",
    "end": "1016560"
  },
  {
    "text": "to have a few elements it's going to have a span who back color is yellow and has a prefix and it's going to have a",
    "start": "1016560",
    "end": "1023399"
  },
  {
    "text": "normal suffix so reload the page and now we",
    "start": "1023399",
    "end": "1028918"
  },
  {
    "text": "have mango Steen Scala test and all those things as a search box so this is",
    "start": "1028919",
    "end": "1035360"
  },
  {
    "text": "what Scala JS feels like to use like there's a small compile cycle which is I guess not unlike JavaScript nowadays",
    "start": "1035360",
    "end": "1041240"
  },
  {
    "text": "perhaps slightly slower you get very good autocomplete in the browser you can say like Dot and get a whole list of",
    "start": "1041240",
    "end": "1047079"
  },
  {
    "text": "things to do whole list of things you can do without needing to dig through documentation because the documentation",
    "start": "1047079",
    "end": "1052440"
  },
  {
    "text": "all this get pulled up right in front of you um if you make a typo it gets called out both in the in the browser in the",
    "start": "1052440",
    "end": "1060320"
  },
  {
    "text": "console as well as in the editor without you having actually running the code and if it's bit hard to see in for you guys",
    "start": "1060320",
    "end": "1066280"
  },
  {
    "text": "at the back but it says um value inner inner HTML with one n is not the member",
    "start": "1066280",
    "end": "1071600"
  },
  {
    "text": "of scolar js. doom. HTML Elements which is quite a nice bit nicer error message",
    "start": "1071600",
    "end": "1076840"
  },
  {
    "text": "then um nothing which is what would happen if you do this in JavaScript because You' actually just monkey patched the body",
    "start": "1076840",
    "end": "1082919"
  },
  {
    "text": "element with a wrongly named attribute and um so that's part of the I guess",
    "start": "1082919",
    "end": "1091240"
  },
  {
    "text": "part of the nice thing that's what I like working with Scala JS so it's immutable and functional by default so",
    "start": "1091240",
    "end": "1096919"
  },
  {
    "text": "for example if you try to reset repos equals an empty sequence this won't",
    "start": "1096919",
    "end": "1102240"
  },
  {
    "text": "compile because I said repos is to be a Val if I to make it a variable I need to explicitly turn into a v variable but by",
    "start": "1102240",
    "end": "1108480"
  },
  {
    "text": "default things are immutable and functional um things are type checked which is really nice including third",
    "start": "1108480",
    "end": "1114320"
  },
  {
    "text": "party apis like the domor or angularjs or react if you misspell the attributes or the methods in Scala JS you get to",
    "start": "1114320",
    "end": "1120640"
  },
  {
    "text": "editor error as well as the compiler error and you get very good editor support such that when you're working with scolar JS you don't really need to",
    "start": "1120640",
    "end": "1128520"
  },
  {
    "text": "browse the Moa developer Network much so I can see that for example my input has a value but my output does not have a",
    "start": "1128520",
    "end": "1135640"
  },
  {
    "text": "value and if I try to leave a value there it will give me a compile error because scolar JS knows that hey my",
    "start": "1135640",
    "end": "1141679"
  },
  {
    "text": "input is a html. input for those of you who can't see this and my output is a HTML the unordered list and the",
    "start": "1141679",
    "end": "1148240"
  },
  {
    "text": "unordered list does not have a value attribute and I don't need to tell it it already",
    "start": "1148240",
    "end": "1153480"
  },
  {
    "text": "knows so there are a few more things I'll talk about later so isomorphic",
    "start": "1153480",
    "end": "1159440"
  },
  {
    "text": "scolar JS that's what the title of the talk was about initially so one of the big pluses of JavaScript and nodejs was",
    "start": "1159440",
    "end": "1165720"
  },
  {
    "text": "that you can reuse code between client and server and that's great because everyone hates having to write like a",
    "start": "1165720",
    "end": "1171320"
  },
  {
    "text": "python algorithm to do some task and someone's going some project manager tells you oh we need this to be more",
    "start": "1171320",
    "end": "1177640"
  },
  {
    "text": "responsive please rewrite the whole thing in JavaScript and go and rewrite the algorithm line by line in JavaScript taking care of the differences in",
    "start": "1177640",
    "end": "1183240"
  },
  {
    "text": "numeric Behavior between Python divide and JavaScript divide and you're doing that over and over for all the different",
    "start": "1183240",
    "end": "1188880"
  },
  {
    "text": "things that you that you need to reimplement the other alternative is you make the JavaScript make lots of endless",
    "start": "1188880",
    "end": "1194000"
  },
  {
    "text": "API calls to the server just because you don't want to reimplement code and both of those are pretty four Solutions one",
    "start": "1194000",
    "end": "1199480"
  },
  {
    "text": "is annoying and one is really slow and with isomorphic nodejs you can write the",
    "start": "1199480",
    "end": "1204559"
  },
  {
    "text": "code once and just deploy the same code to both client in server and it works great and most other compil to",
    "start": "1204559",
    "end": "1210720"
  },
  {
    "text": "JavaScript languages do not have this property for example you can't run Elm on the server easily um and most other",
    "start": "1210720",
    "end": "1216799"
  },
  {
    "text": "server side languages can't be run on the client but with scjs it also has the same property of as nodejs where you can",
    "start": "1216799",
    "end": "1222360"
  },
  {
    "text": "run Scala on both the server and the client without having to rewrite your code and I'll show you that now so I'm",
    "start": "1222360",
    "end": "1229120"
  },
  {
    "text": "going to use the same repo and the same repo has a different branch called autowire and the name of that branch is",
    "start": "1229120",
    "end": "1236200"
  },
  {
    "text": "I guess we don't need to worry about that for now so I'm going to get reset throw away all the work I just showed",
    "start": "1236200",
    "end": "1242320"
  },
  {
    "text": "you and I'm going to check out Auto wire um I'm going to kick off",
    "start": "1242320",
    "end": "1247880"
  },
  {
    "text": "a kick off the server so this just this is SBT which is a Scala build tool um",
    "start": "1247880",
    "end": "1255200"
  },
  {
    "text": "it's just another build tool not really any better or worse any other build tool but the one that we",
    "start": "1255200",
    "end": "1260760"
  },
  {
    "text": "use um so let's give it a check to compile and while it's compiling I'm going to give you guys a short tour of",
    "start": "1260760",
    "end": "1268080"
  },
  {
    "text": "the code base so the Scala a Scala JS cross compil",
    "start": "1268080",
    "end": "1275279"
  },
  {
    "text": "program looks like you have a folder with a JavaScript folder with all the JS",
    "start": "1275279",
    "end": "1280679"
  },
  {
    "text": "code in it or scalar JS code in it you have a jvm folder with all the server side code in it because typically Scala",
    "start": "1280679",
    "end": "1287200"
  },
  {
    "text": "has always run on the jvm it's in the last two years or so it's been able to run run on JavaScript and we have a shared folder",
    "start": "1287200",
    "end": "1294600"
  },
  {
    "text": "which contains any code you want to share between them in this case it's mebe just a a trait which is a Scala",
    "start": "1294600",
    "end": "1299720"
  },
  {
    "text": "name for interface like a Java interface if we look at the Scala JS",
    "start": "1299720",
    "end": "1305000"
  },
  {
    "text": "code it looks not too dissimilar to what we saw earlier we have a bit of wrapper",
    "start": "1305000",
    "end": "1310320"
  },
  {
    "text": "boiler plate from Scala we get the input box and output box and we do it those we",
    "start": "1310320",
    "end": "1316240"
  },
  {
    "text": "we put the update into a helper function so we can call it once to initialize and call it again and again and we have the",
    "start": "1316240",
    "end": "1322240"
  },
  {
    "text": "same kind of document. body. pench child and rendering uh Scala HTML template and",
    "start": "1322240",
    "end": "1328679"
  },
  {
    "text": "if we look at the actual server now looks like that and this is just a",
    "start": "1328679",
    "end": "1334120"
  },
  {
    "text": "small demo to show that yes I am running this in the I'm actually talking to a server I'm not cheating because the this",
    "start": "1334120",
    "end": "1341200"
  },
  {
    "text": "file system stuff only really exist on the server and a browser can't access the file system like that so on the server other side it's a",
    "start": "1341200",
    "end": "1350679"
  },
  {
    "text": "relatively Bo standard Scala web server the syntax is probably unfamiliar to you but most web server routing syntaxes are",
    "start": "1350679",
    "end": "1358360"
  },
  {
    "text": "when you first see them so they say start a server on Port 000000 Port sorry",
    "start": "1358360",
    "end": "1363559"
  },
  {
    "text": "IP 00. 8080 um for any get request which has a single slash complet it with a",
    "start": "1363559",
    "end": "1370400"
  },
  {
    "text": "text HTML with this variable which is a HTML template for any other get request",
    "start": "1370400",
    "end": "1376279"
  },
  {
    "text": "get it from the resource directory for any post requests which are to the path API followed by some segments do some",
    "start": "1376279",
    "end": "1382960"
  },
  {
    "text": "more work to make the API call work um and over here we have the HTML template",
    "start": "1382960",
    "end": "1389880"
  },
  {
    "text": "so while earlier on in the client only example I showed you a static HTML file here we actually dynamically generating",
    "start": "1389880",
    "end": "1396080"
  },
  {
    "text": "HTML on the server um one thing that you may notice is that the server side the",
    "start": "1396080",
    "end": "1402279"
  },
  {
    "text": "client side HTML generation like this and the serers side HTML generation like this is actually using the same Library",
    "start": "1402279",
    "end": "1408559"
  },
  {
    "text": "they're both called Scala tags and it's the same Library called Scala tags and the it gets cross compiled to work on both client and server um in this case",
    "start": "1408559",
    "end": "1416360"
  },
  {
    "text": "the library is generating a HTML string that starts off the first web page and over here we're using the same library",
    "start": "1416360",
    "end": "1421760"
  },
  {
    "text": "to generate the div that is this file browser box as well as the unordered list and the list items that form the",
    "start": "1421760",
    "end": "1428200"
  },
  {
    "text": "body of this um search bar so",
    "start": "1428200",
    "end": "1434360"
  },
  {
    "text": "um what is also so I can try changing this for example if I say file browser",
    "start": "1434360",
    "end": "1439559"
  },
  {
    "text": "and make it more exciting it takes a moment to compile again this is the first code",
    "start": "1439559",
    "end": "1445080"
  },
  {
    "text": "compile compile and optimize and now it's more excited um",
    "start": "1445080",
    "end": "1451159"
  },
  {
    "text": "what's more interesting than that is the fact that we have this Ajax call here",
    "start": "1451159",
    "end": "1456320"
  },
  {
    "text": "which is made using an API client so this syntax is a bit going to be a bit foreign to you but it basically says",
    "start": "1456320",
    "end": "1461720"
  },
  {
    "text": "using the client talk to this API call the list method with this argument and then call it and for this block here",
    "start": "1461720",
    "end": "1470200"
  },
  {
    "text": "this expression returns a promise or in Scala they call them Futures and for each which is the same as like",
    "start": "1470200",
    "end": "1475320"
  },
  {
    "text": "oncomplete take the resulting paths and do things to it so that looks maybe a",
    "start": "1475320",
    "end": "1481080"
  },
  {
    "text": "bit funny but I guess it's not too unusual what's unusual about it is the fact that if I pass in the wrong number of arguments to the API call um it does",
    "start": "1481080",
    "end": "1488159"
  },
  {
    "text": "not compile and you get a compile error there and you get a editor error up there telling that hey you're using the",
    "start": "1488159",
    "end": "1493880"
  },
  {
    "text": "a you're using the API call wrongly so that's kind of neat because in most large JavaScript codebases at work we",
    "start": "1493880",
    "end": "1500039"
  },
  {
    "text": "use coffee script and python which is guesss the same when you're trying to use API calls you're often like looking",
    "start": "1500039",
    "end": "1505399"
  },
  {
    "text": "back and forth between the source code of the API endpoint and the source code of the API call site and trying to make",
    "start": "1505399",
    "end": "1511000"
  },
  {
    "text": "sure that the URLs rout match up with the routing and trying to make sure number of arguments match up and trying to make sure the types of the arguments",
    "start": "1511000",
    "end": "1516279"
  },
  {
    "text": "match up making sure you don't send the Json dictionary when there's expecting a Json array making sure you don't send three arguments when there's expecting",
    "start": "1516279",
    "end": "1522600"
  },
  {
    "text": "two arguments um and doing when you changing API calls often a very like TTS",
    "start": "1522600",
    "end": "1528760"
  },
  {
    "text": "process because when you make a mistake you get errors at runtime and if you don't have selenium tests to cover your your full stack integration you get",
    "start": "1528760",
    "end": "1535360"
  },
  {
    "text": "errors in production both of which are terrible um but with Scala JS um the web",
    "start": "1535360",
    "end": "1541440"
  },
  {
    "text": "server the the API call is simply the client sorry the client server API is",
    "start": "1541440",
    "end": "1546640"
  },
  {
    "text": "simply defined as a Scala interface the application client server interface is interface like who would have guest and",
    "start": "1546640",
    "end": "1553600"
  },
  {
    "text": "the server on this side imple extends the interface like any Java object extending interface",
    "start": "1553600",
    "end": "1560279"
  },
  {
    "text": "would and you define a method that has to have the same signature as interface",
    "start": "1560279",
    "end": "1565760"
  },
  {
    "text": "are extending and has to have the same signature that your client on the client",
    "start": "1565760",
    "end": "1571120"
  },
  {
    "text": "side is calling so there is literally no way you can get a fall for trying to change these API endpoints is kind of",
    "start": "1571120",
    "end": "1577640"
  },
  {
    "text": "neat once more if if you look at um the network panel let's I go look at Target",
    "start": "1577640",
    "end": "1584279"
  },
  {
    "text": "and look at the list calls over here I'm sending up like a SE",
    "start": "1584279",
    "end": "1590000"
  },
  {
    "text": "I'm sending up The Path which is which is Target and I'm getting back uh Json array of like paths if if you can see in",
    "start": "1590000",
    "end": "1596600"
  },
  {
    "text": "the browser um in the browser console if I change it and it's making an endpoint",
    "start": "1596600",
    "end": "1603159"
  },
  {
    "text": "making a request to the list endpoint you want to change the name of the endpoint I can simply ask Editor to say like well it's no longer called this",
    "start": "1603159",
    "end": "1609880"
  },
  {
    "text": "it's going to be called Mumu cow because that's what my PM told me and PM's always right so now that my PM is told",
    "start": "1609880",
    "end": "1616960"
  },
  {
    "text": "me to rename it mumuk ca I simp ask Ed to rename it mumuk ca it automatically renames the API definition mumuk CA it",
    "start": "1616960",
    "end": "1624440"
  },
  {
    "text": "renames the API implementation mumuk CA and now if I refresh the page I now",
    "start": "1624440",
    "end": "1629840"
  },
  {
    "text": "making I'm now making Ajax call to to the mumuk ca endpoint and there like totally seamless no it's simple enough",
    "start": "1629840",
    "end": "1637440"
  },
  {
    "text": "that there's no step which which you can go wrong in the middle um the next thing",
    "start": "1637440",
    "end": "1642960"
  },
  {
    "text": "that interesting is if you want to change how this API endpoint works so for example currently I'm sending down",
    "start": "1642960",
    "end": "1648640"
  },
  {
    "text": "the list of the names of the files let's say I wanted to send down instead the file size so I'm going to write some",
    "start": "1648640",
    "end": "1654799"
  },
  {
    "text": "Scala here on the jvm using Java interfaces to get the file size so it's okay if you don't follow so I'm going to",
    "start": "1654799",
    "end": "1661039"
  },
  {
    "text": "map it and given the file name I'm going to say well it's a Lambda and I want a",
    "start": "1661039",
    "end": "1667240"
  },
  {
    "text": "file name and I want a new Java do io. file I think I need to say",
    "start": "1667240",
    "end": "1676519"
  },
  {
    "text": "prefix plus SL plus file name do",
    "start": "1676519",
    "end": "1684120"
  },
  {
    "text": "link so that's going to be a I guess I can say two integer because I think by",
    "start": "1684200",
    "end": "1689919"
  },
  {
    "text": "default it return by default it returns a long and none of my files here are are so",
    "start": "1689919",
    "end": "1696240"
  },
  {
    "text": "big so if you go back to the so if I save this and go back to",
    "start": "1696240",
    "end": "1703159"
  },
  {
    "text": "console you see that it's giving me a compile error saying that you updated the API implementation to return a",
    "start": "1703159",
    "end": "1709200"
  },
  {
    "text": "sequence if I make this bigger for for people at the back to see to return a sequence of a coule of strings and",
    "start": "1709200",
    "end": "1714919"
  },
  {
    "text": "integers but the API definition requires a sequence of strings so okay I guess",
    "start": "1714919",
    "end": "1719960"
  },
  {
    "text": "I'll fix the API definition I'll make this say sequence of strings and integers it's withit a",
    "start": "1719960",
    "end": "1726519"
  },
  {
    "text": "boiler plate to do this but the boiler plate can't fall out of syn so it's not that terrible as boiler plate and now",
    "start": "1726519",
    "end": "1731679"
  },
  {
    "text": "I've updated API definition it's saying that hey in the client side code in Scala JS example. Scala",
    "start": "1731679",
    "end": "1739360"
  },
  {
    "text": "I I I don't know how to take this sequence this toule of string and integer and splice it into my HTML",
    "start": "1739360",
    "end": "1744760"
  },
  {
    "text": "template okay so now I go to HTML template I do destructuring like some of you may be used to in es6 so for each",
    "start": "1744760",
    "end": "1751480"
  },
  {
    "text": "for the tle of file name and length in paths I have path I have file name maybe",
    "start": "1751480",
    "end": "1759159"
  },
  {
    "text": "a dash and maybe the italic",
    "start": "1759159",
    "end": "1764399"
  },
  {
    "text": "length and now once that that's done and it finishes reloading once it compiles I",
    "start": "1766159",
    "end": "1772159"
  },
  {
    "text": "get the file name and the file path in my search box and at no point in the middle was I able to even like run the program when it was in a bad state",
    "start": "1772159",
    "end": "1780320"
  },
  {
    "text": "so and if you look at the look at the Ajax calls they being sent back and forth",
    "start": "1780320",
    "end": "1787679"
  },
  {
    "text": "um you'll see I'm now getting back like a array of Two Two element arrays which are basically tles of the",
    "start": "1788360",
    "end": "1795039"
  },
  {
    "text": "results the last thing that's interesting is that if if I want to change it from say a tuple which is like a Scala a normal Scala thing into my own",
    "start": "1795039",
    "end": "1802240"
  },
  {
    "text": "data structure for example in Scala you call data structure like classes case classes so file data I'm going to call",
    "start": "1802240",
    "end": "1808240"
  },
  {
    "text": "it file data it's going to have file name which is a string and it's going to have a length which is an integer let's",
    "start": "1808240",
    "end": "1814120"
  },
  {
    "text": "want to convert this to file data object so okay it's complaining it",
    "start": "1814120",
    "end": "1820519"
  },
  {
    "text": "expects the Tuple it needs file data I go and fix that oops",
    "start": "1820519",
    "end": "1828120"
  },
  {
    "text": "so now it's complain it doesn't know what file data is and it doesn't know what file data is because we defined file data only on the server which is",
    "start": "1831799",
    "end": "1838519"
  },
  {
    "text": "here we did not Define it in the shared code so the shared code does not know what the file data object is and in this",
    "start": "1838519",
    "end": "1844320"
  },
  {
    "text": "case the file data is pretty simple so I'm just going to copy the the file data into the shared code and say that among",
    "start": "1844320",
    "end": "1849880"
  },
  {
    "text": "the things we share is the API interface as well as a file data object so now that works and it's going",
    "start": "1849880",
    "end": "1857639"
  },
  {
    "text": "it's complaining on the client because over here on the client",
    "start": "1857639",
    "end": "1863799"
  },
  {
    "text": "um it doesn't know how to deal with over here I'm trying to treat the file the",
    "start": "1863799",
    "end": "1869519"
  },
  {
    "text": "result as a tle but it knows that paths is a sequence of file data objects for",
    "start": "1869519",
    "end": "1874960"
  },
  {
    "text": "those of you who can see this so I'm forced to fix this and maybe make it work like that instead of using",
    "start": "1874960",
    "end": "1881480"
  },
  {
    "text": "destructure I'm going to like user attributes and we're back in business",
    "start": "1881480",
    "end": "1888519"
  },
  {
    "text": "and if you look at the network panel we're now making request to the mumua",
    "start": "1888519",
    "end": "1894080"
  },
  {
    "text": "endpoint and we're getting back file data we're getting back these like Json object a list of Json objects which",
    "start": "1894080",
    "end": "1899360"
  },
  {
    "text": "contains the file data and so this is kind of like the people have always talked about oh what if you could share your data structures what you could",
    "start": "1899360",
    "end": "1905240"
  },
  {
    "text": "share your algorithms between client and server and we know JS you can and scy JS you also can but with somewhat a higher",
    "start": "1905240",
    "end": "1910720"
  },
  {
    "text": "degree of safety in that you can't accidentally use something from the browser site on the server site you",
    "start": "1910720",
    "end": "1915960"
  },
  {
    "text": "can't accidentally use something from the server site from the browser side and it's pretty explicit in that you have the server code which lives in in",
    "start": "1915960",
    "end": "1923240"
  },
  {
    "text": "this case jvm folder you have the browser code lives in the JS folder and you have the shared code which lives in the shared folder and you both sides can",
    "start": "1923240",
    "end": "1930840"
  },
  {
    "text": "use the shared code but the both sides can't use each other so you don't you don't have this worry about oh what if I",
    "start": "1930840",
    "end": "1935919"
  },
  {
    "text": "use the wrong thing and it blows up at runtime accidentally furthermore if I look at",
    "start": "1935919",
    "end": "1941440"
  },
  {
    "text": "the HTML templating logic you'll notice it's somewhat different subtly different so I say input box Dot value here maybe",
    "start": "1941440",
    "end": "1949919"
  },
  {
    "text": "I want to print",
    "start": "1949919",
    "end": "1952480"
  },
  {
    "text": "it start stop now it says value it starts off empty which is what you expect but this works because I can get",
    "start": "1959440",
    "end": "1965320"
  },
  {
    "text": "the value from an in HTML input which I'm rendering on the client if I",
    "start": "1965320",
    "end": "1971320"
  },
  {
    "text": "say Val my input equals input. render on the server and I I my and and I say my",
    "start": "1971320",
    "end": "1978320"
  },
  {
    "text": "input. value I get a compile error and why is that the answer is if",
    "start": "1978320",
    "end": "1985559"
  },
  {
    "text": "you look at what my input is on the server it is not a HTML do input it is a",
    "start": "1985559",
    "end": "1990639"
  },
  {
    "text": "string because at least in this the way we set it up for the isomorphic code for this isomorphic um HTML templating",
    "start": "1990639",
    "end": "1996799"
  },
  {
    "text": "library on the client side you're rendering live HTML Dom element objects like each one object with attributes and",
    "start": "1996799",
    "end": "2002840"
  },
  {
    "text": "methods you can call and all that and on the server side you're rendering pure strings and it's very easy to mix up",
    "start": "2002840",
    "end": "2008480"
  },
  {
    "text": "where your templates are and what template you're using for what and what you are allowed to use and not allowed to use but with with scholar GS because",
    "start": "2008480",
    "end": "2014200"
  },
  {
    "text": "you have the compiler to help you and the types to guide you we know that if I'm calling value on the input on the server it's going to be wrong and I",
    "start": "2014200",
    "end": "2021279"
  },
  {
    "text": "don't need to I don't need to think about it it will put it in my face and not let me make progress until I fix",
    "start": "2021279",
    "end": "2026840"
  },
  {
    "text": "it furthermore um one thing that you might not you wouldn't have noticed is that on on this Ajax server thing that",
    "start": "2026840",
    "end": "2035880"
  },
  {
    "text": "goes from client to server and does the nice typ safe statically checked verified to not have four Falls or 400",
    "start": "2035880",
    "end": "2042200"
  },
  {
    "text": "Ajax calls we are using this um serialization Library called microp pickle and microle itself is a library",
    "start": "2042200",
    "end": "2049320"
  },
  {
    "text": "that runs on both jvm and on JavaScript and runs on both client and server um in",
    "start": "2049320",
    "end": "2055158"
  },
  {
    "text": "theory you could use a a nodejs server running Scala running Scala JS in practice most people use a jvm server",
    "start": "2055159",
    "end": "2060638"
  },
  {
    "text": "because that's what scalas traditionally been used for and in reality it doesn't really make a difference because you can write can run the same code both on the",
    "start": "2060639",
    "end": "2066960"
  },
  {
    "text": "JS and on the J VM but we have this we have our HTML templating libraries which are shared we have our um serialization",
    "start": "2066960",
    "end": "2075320"
  },
  {
    "text": "libraries which are shared we have the ajax type safe Ajax libraries which are shared and if you want to share your own",
    "start": "2075320",
    "end": "2081560"
  },
  {
    "text": "code you can easily Chuck in a shared folder and it will be shared from client and server in a completely safe and",
    "start": "2081560",
    "end": "2087638"
  },
  {
    "text": "easily un easily understandable way so that's for the demo um so",
    "start": "2087639",
    "end": "2094638"
  },
  {
    "text": "hopefully this has kind of drawn out the fact that there's type safety and type checking and there's more type checking",
    "start": "2094639",
    "end": "2101440"
  },
  {
    "text": "and I don't think anyone in any other um framework I'm aware of actually types checks are Ajax calls the same way",
    "start": "2101440",
    "end": "2107760"
  },
  {
    "text": "scolar JS does especially given that those are the most fragile part of many web applications I think it's especially",
    "start": "2107760",
    "end": "2113839"
  },
  {
    "text": "important and editor support is really nice being able to Auto rename your Ajax endpoints getting in editor um feedback",
    "start": "2113839",
    "end": "2120880"
  },
  {
    "text": "when Ajax endpoints are malformed eject call are malformed that's really cool",
    "start": "2120880",
    "end": "2126040"
  },
  {
    "text": "and the isomorphic universal of it depending which adjective you want to use is also really cool and",
    "start": "2126040",
    "end": "2132720"
  },
  {
    "text": "arguably done slightly better than even though JS does it because over here we can verify that you're not putting the",
    "start": "2132720",
    "end": "2138680"
  },
  {
    "text": "wrong thing in the wrong place when you're running the same code in totally different",
    "start": "2138680",
    "end": "2143880"
  },
  {
    "text": "environments so last things I haven't talked about are ecosystem and production Readiness in terms of ecosystem it's actually relatively broad",
    "start": "2143880",
    "end": "2151200"
  },
  {
    "text": "so one common complaint of um these compiled JavaScript languages or even most startup languages to begin with is",
    "start": "2151200",
    "end": "2157240"
  },
  {
    "text": "you don't have an ecosystem why should I use your thing I don't have libraries I don't have tools I don't have like I don't have people to ask questions on",
    "start": "2157240",
    "end": "2163839"
  },
  {
    "text": "and in scolar JS it's quite interesting because you get both all of the JavaScript libraries available to you as",
    "start": "2163839",
    "end": "2170680"
  },
  {
    "text": "well as all the Scala libraries available to you so in the early example I use a Dom which is like the project",
    "start": "2170680",
    "end": "2176960"
  },
  {
    "text": "lives on GitHub here but you also have the scalar GS jQuery facade you scal GS react facade all of these give you the",
    "start": "2176960",
    "end": "2183800"
  },
  {
    "text": "same kind of easy access to the to these third party libraries in a completely typ safe way and it's really",
    "start": "2183800",
    "end": "2190720"
  },
  {
    "text": "straightforward in fact if you look at the way I'm using the Dom in this",
    "start": "2190720",
    "end": "2196119"
  },
  {
    "text": "example like this looks just like JavaScript except except it's safer and",
    "start": "2196119",
    "end": "2201880"
  },
  {
    "text": "if you screw up it tells you but otherwise there's no like annoying interrupt to try and Define a port or Define an xtern to make it do the right",
    "start": "2201880",
    "end": "2208680"
  },
  {
    "text": "thing just call the function and it's the same but if you get it wrong it'll tell you so the there whole lot of these",
    "start": "2208680",
    "end": "2215520"
  },
  {
    "text": "um JavaScript libraries which we have faced and the ones which haven't been faced can be faced relatively straightforward in like an hour or two",
    "start": "2215520",
    "end": "2222119"
  },
  {
    "text": "basically by reading documentation and transcribing down exactly what is the correct things that it returns but in",
    "start": "2222119",
    "end": "2227599"
  },
  {
    "text": "addition you also have all the isomorphic Scala libraries so I showed you Scala tags which is a HTML templating library that renders strings",
    "start": "2227599",
    "end": "2233680"
  },
  {
    "text": "on the server and Dom elements on the client um microp pickles a shared serialization Library you have things",
    "start": "2233680",
    "end": "2240280"
  },
  {
    "text": "like Scala Z or Scala async which is like es7 um async A8 but available today",
    "start": "2240280",
    "end": "2246480"
  },
  {
    "text": "es7 async it's also available today also under cross compiler so in a way it's very similar um and and a whole bunch",
    "start": "2246480",
    "end": "2253000"
  },
  {
    "text": "more libraries that all work on both Scala JS and scy jvm isomorphically and",
    "start": "2253000",
    "end": "2258079"
  },
  {
    "text": "many of these libraries need about two lines of configuration to cross compile so it's really compatible in terms of production",
    "start": "2258079",
    "end": "2264599"
  },
  {
    "text": "Readiness um there are a few cute demos so here is a ray Tracer I wrote in Scala JS it's really pretty like 200 lines of",
    "start": "2264599",
    "end": "2272280"
  },
  {
    "text": "Scala code it's not really complicated does it does all the vector math physics reflection refraction thing and prints a",
    "start": "2272280",
    "end": "2277920"
  },
  {
    "text": "nice picture um here's a cute 2D platform G I wrote",
    "start": "2277920",
    "end": "2283280"
  },
  {
    "text": "which you this users um hand JS to polyfill the mouse inputs or keyboard",
    "start": "2283280",
    "end": "2290520"
  },
  {
    "text": "inputs as well as sorry mouse or touch inputs as well as um chipmunk JS to",
    "start": "2290520",
    "end": "2296920"
  },
  {
    "text": "handle the physics and this is a game that's basically at 3,000 lines of Scala and reasonably complex and multiple",
    "start": "2296920",
    "end": "2303400"
  },
  {
    "text": "stages and all that and you can it kind of shows that you can do relatively High perform performance not that high",
    "start": "2303400",
    "end": "2308880"
  },
  {
    "text": "performance in this case but relatively high performance interactive things using scy JS um last last demo is now I",
    "start": "2308880",
    "end": "2316560"
  },
  {
    "text": "showed some of you earlier it's a to-do MPC because everyone needs to to-do list it it works there's not much else",
    "start": "2316560",
    "end": "2323079"
  },
  {
    "text": "to say about it um and there are people out there who are using it in production",
    "start": "2323079",
    "end": "2329000"
  },
  {
    "text": "for various purposes betting some of which are betting projects or startups on it and most of them seem pretty happy",
    "start": "2329000",
    "end": "2335400"
  },
  {
    "text": "with it they have some teething problems but generally they get fixed pretty quickly I don't know of any huge",
    "start": "2335400",
    "end": "2340680"
  },
  {
    "text": "companies which are using it so it's not like Google Dart which has like a million people behind it but there's a good Community behind it and the get the",
    "start": "2340680",
    "end": "2347400"
  },
  {
    "text": "get channel has something like 600 to 700 people in at any time so why scolar JS because it's like",
    "start": "2347400",
    "end": "2355599"
  },
  {
    "text": "JavaScript but in many ways it's going it's better in in the ways that JavaScript is already going it's mutable",
    "start": "2355599",
    "end": "2361720"
  },
  {
    "text": "and functional by default rather than by having third party libraries is type check by default and far more than even typescript gives you",
    "start": "2361720",
    "end": "2367920"
  },
  {
    "text": "the editor support is amazing like having the drop down of every method kit call on any D element is really cool and",
    "start": "2367920",
    "end": "2373560"
  },
  {
    "text": "having it be actually accurate rather than just be some regex thing that on through together using C tags is even cooler um it's isomorphic and Universal",
    "start": "2373560",
    "end": "2381200"
  },
  {
    "text": "just like no JS but better the ecosystem is Broad and it's pretty much ready for",
    "start": "2381200",
    "end": "2386440"
  },
  {
    "text": "real usage so that's Scala JS if any of you want to learn more about it we have a",
    "start": "2386440",
    "end": "2392079"
  },
  {
    "text": "website which is like kind of pretty like most websites are and I'll take question",
    "start": "2392079",
    "end": "2398520"
  },
  {
    "text": "questions cool so this is this is not Scala JS specific so",
    "start": "2398520",
    "end": "2407280"
  },
  {
    "text": "intell J does not know this is Scala JS as far as intj is concerned this is just Scala and any editor which supports",
    "start": "2407280",
    "end": "2412960"
  },
  {
    "text": "Scala will do will do this including intellig Eclipse um and with the enzyme project Vim Sublime and",
    "start": "2412960",
    "end": "2419280"
  },
  {
    "text": "emac um so those are the all the standard Scala editors it's nothing to do with Scala JS it's just that Scala",
    "start": "2419280",
    "end": "2425200"
  },
  {
    "text": "lets you do this when you specify the types of things cool next",
    "start": "2425200",
    "end": "2431040"
  },
  {
    "text": "question I sent out benchmarks at one point based on the test speets of my isomorphic libraries and if I remember",
    "start": "2431040",
    "end": "2437520"
  },
  {
    "text": "correctly Scala and jvm is about five times faster than Scala running in Chrome which is about the same speed as",
    "start": "2437520",
    "end": "2443560"
  },
  {
    "text": "JavaScript running in Chrome so it's jvm is still faster but you can't ship the jvm",
    "start": "2443560",
    "end": "2450440"
  },
  {
    "text": "everywhere yes that has already happened there is a es6 mode which compiles to using Arrow",
    "start": "2450520",
    "end": "2456920"
  },
  {
    "text": "function and f t c i n instead of function you know function keywords and",
    "start": "2456920",
    "end": "2463280"
  },
  {
    "text": "they use other things like lets and cons um and there's also a there's also",
    "start": "2463280",
    "end": "2469400"
  },
  {
    "text": "compiler flag that flips over to strong mode which is like the thing that Google is trying to push to make ja JavaScript",
    "start": "2469400",
    "end": "2474960"
  },
  {
    "text": "Faster by trying to reduce it dynamism a bit um both of those aren't really useful I guess it reduces the code size",
    "start": "2474960",
    "end": "2481760"
  },
  {
    "text": "slightly but not by a huge amount especially after gzip um and in practice",
    "start": "2481760",
    "end": "2487319"
  },
  {
    "text": "no one actually looks at generated JavaScript so no one really cares what it looks like especially because you",
    "start": "2487319",
    "end": "2493280"
  },
  {
    "text": "have Source Maps when you get error messages it shows you a Scala line numbers rather than JavaScript line numbers but if you do look at generator JavaScript it's really ugly so it's like",
    "start": "2493280",
    "end": "2500760"
  },
  {
    "text": "it's like that it's a lot of generator JavaScript for for the standard library but it's gets optimized until it's",
    "start": "2500760",
    "end": "2507079"
  },
  {
    "text": "pretty fast and you don't generally don't need to care about how much it is fast and small over",
    "start": "2507079",
    "end": "2514640"
  },
  {
    "text": "there I would say the major benefits",
    "start": "2514640",
    "end": "2520280"
  },
  {
    "text": "are one is types so that's a m matter of taste not Everyone likes types if you're a type who if you are the type haha who",
    "start": "2520280",
    "end": "2527480"
  },
  {
    "text": "likes types then you would like scolar GS more and closure script because closure script doesn't have types and",
    "start": "2527480",
    "end": "2532680"
  },
  {
    "text": "type closure is a semi half alive experiment um second reason is Ed editor",
    "start": "2532680",
    "end": "2540280"
  },
  {
    "text": "support um closure script does not have as good edit support as scjs does closure does not have as good edit",
    "start": "2540280",
    "end": "2546520"
  },
  {
    "text": "support as Scala does even with things like um the the new cursive closure intell editor which is I've heard really",
    "start": "2546520",
    "end": "2552839"
  },
  {
    "text": "good you do not get the 100% correct like um autocomplete that you do in",
    "start": "2552839",
    "end": "2558480"
  },
  {
    "text": "Scala um most other things come down to types or editor",
    "start": "2558480",
    "end": "2565720"
  },
  {
    "text": "support to be honest so things like ease of refactoring comes down to because you have types things like ease of better",
    "start": "2565720",
    "end": "2572240"
  },
  {
    "text": "like navigation editor comes down to types um and some people hate lists so",
    "start": "2572240",
    "end": "2578839"
  },
  {
    "text": "if you're one of those people who hates parentheses you won't use closure script but yeah I don't have a real strong",
    "start": "2578839",
    "end": "2583920"
  },
  {
    "text": "feeling about that um there's a multiphase compilation pipeline the first phase uses its Custom",
    "start": "2583920",
    "end": "2589839"
  },
  {
    "text": "Tool which results in the um results in this the second phase uses Google",
    "start": "2589839",
    "end": "2595640"
  },
  {
    "text": "closure which then crunches it down into one huge unreadable blob and that's when it becomes 70 kilobytes this one's about like one megabyte but Google closure",
    "start": "2595640",
    "end": "2602200"
  },
  {
    "text": "makes it really small after that yeah any other questions all I I guess we are",
    "start": "2602200",
    "end": "2609079"
  },
  {
    "text": "done thank you [Applause]",
    "start": "2609079",
    "end": "2617799"
  }
]