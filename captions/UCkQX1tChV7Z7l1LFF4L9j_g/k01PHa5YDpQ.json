[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "good evening",
    "start": "4560",
    "end": "7120"
  },
  {
    "text": "imagine for a second that you and i we start a new company",
    "start": "11759",
    "end": "18720"
  },
  {
    "text": "we've got an idea we've got some funds and we gathered talented team of",
    "start": "18720",
    "end": "23760"
  },
  {
    "text": "engineers to work on our idea it's a great great place to be at we",
    "start": "23760",
    "end": "29599"
  },
  {
    "text": "will work hard for sure but success is not guaranteed what is",
    "start": "29599",
    "end": "36719"
  },
  {
    "text": "guaranteed is that over time we will evolve",
    "start": "36719",
    "end": "41920"
  },
  {
    "text": "our product our customer our infrastructure and our edge today i want to talk about",
    "start": "41920",
    "end": "48879"
  },
  {
    "text": "evolution of edge and i want to use netflix as a case study for that",
    "start": "48879",
    "end": "54719"
  },
  {
    "text": "granted netflix is not a startup but it went through some changes",
    "start": "54719",
    "end": "62000"
  },
  {
    "text": "and with these changes infrastructure and business evolved",
    "start": "62000",
    "end": "69600"
  },
  {
    "text": "my name is vasily and for the last seven years i worked on edge services",
    "start": "69600",
    "end": "76960"
  },
  {
    "start": "70000",
    "end": "70000"
  },
  {
    "text": "i started with apple built ad services for icloud and itunes",
    "start": "77119",
    "end": "82240"
  },
  {
    "text": "in 2018 joined netflix to work on api platform and later on push notifications and api",
    "start": "82240",
    "end": "88799"
  },
  {
    "text": "gateways and lately yesterday i learned",
    "start": "88799",
    "end": "95040"
  },
  {
    "text": "that if speaker tweets then the speaker is more credible so i",
    "start": "95040",
    "end": "100720"
  },
  {
    "text": "wrote my last last night i wrote my first tweet",
    "start": "100720",
    "end": "105200"
  },
  {
    "text": "full disclosure since we are going to cover a lot i'm not going to go deep",
    "start": "108240",
    "end": "114880"
  },
  {
    "text": "it's going to be an overview session so",
    "start": "114880",
    "end": "119758"
  },
  {
    "text": "when i was preparing for the talk i went online you know to the infoqueue website and",
    "start": "122079",
    "end": "129360"
  },
  {
    "text": "i checked what people were interested in and one of the questions that was very popular was",
    "start": "129360",
    "end": "136080"
  },
  {
    "text": "what is edge for the purpose of this talk let's agree that edge is something",
    "start": "136080",
    "end": "144000"
  },
  {
    "text": "that is close to client but it's not a category we will not say",
    "start": "144000",
    "end": "150879"
  },
  {
    "text": "something is h and something is not let's treat this as a quality that is more or less pronounced",
    "start": "150879",
    "end": "157280"
  },
  {
    "text": "for certain concern right so for example you take dns and you take database",
    "start": "157280",
    "end": "162560"
  },
  {
    "text": "starts with g right but they are less or more edgier dns is more edgy than a database unless",
    "start": "162560",
    "end": "170640"
  },
  {
    "text": "you expose database to the client which probably is a bad idea",
    "start": "170640",
    "end": "175760"
  },
  {
    "text": "all right let's go back to our business we have money but we don't have a lot usually that's the case",
    "start": "175840",
    "end": "182879"
  },
  {
    "start": "178000",
    "end": "178000"
  },
  {
    "text": "so key thing that we optimize for is time to market we need to roll fast",
    "start": "182879",
    "end": "190080"
  },
  {
    "text": "how do we do that basically we do not over complicate things we introduce same practices and we rely",
    "start": "190080",
    "end": "197280"
  },
  {
    "text": "on good judgment of these people who we started the company with what does it mean well let's start with",
    "start": "197280",
    "end": "204080"
  },
  {
    "text": "simple let's start with three-tier architecture 3-2 architecture means that we have a",
    "start": "204080",
    "end": "210080"
  },
  {
    "text": "client we have api and we have a database that this api talks to all the concerns we put in this",
    "start": "210080",
    "end": "216879"
  },
  {
    "text": "api application the beauty of this approach is that we don't really need to spend time on",
    "start": "216879",
    "end": "223280"
  },
  {
    "text": "building standards or tooling whatever we put in the code base on this application",
    "start": "223280",
    "end": "229040"
  },
  {
    "text": "is a standard now our edge right now is our api",
    "start": "229040",
    "end": "236319"
  },
  {
    "text": "application it's the only app and all we have is edge",
    "start": "236319",
    "end": "241840"
  },
  {
    "text": "we also have a load balancer which usually does terminate you know encrypted traffic and sends",
    "start": "241920",
    "end": "248720"
  },
  {
    "text": "plain text traffic to the application itself and our dns is usually very simple we just need our",
    "start": "248720",
    "end": "256000"
  },
  {
    "text": "clients to be able to find us right",
    "start": "256000",
    "end": "260400"
  },
  {
    "text": "if we flip slides we will see how netflix architecture looked like in the early days so please",
    "start": "261919",
    "end": "268560"
  },
  {
    "text": "try to find some differences",
    "start": "268560",
    "end": "272320"
  },
  {
    "text": "[Music] so the difference is the name of the application is nccp not api",
    "start": "273730",
    "end": "279520"
  },
  {
    "text": "nccp stands for netflix content control protocol and it was the only application that was",
    "start": "279520",
    "end": "286800"
  },
  {
    "text": "exposed to the client and it powered all of the experience there was a",
    "start": "286800",
    "end": "292160"
  },
  {
    "text": "hardware load bouncer terminating tls in front and there was one domain name simple record",
    "start": "292160",
    "end": "300000"
  },
  {
    "text": "that was good enough to start the business and i hope it's good enough for us to start the business",
    "start": "300000",
    "end": "306320"
  },
  {
    "text": "all right summarizing three tier architecture monolithic application it is fine our",
    "start": "306320",
    "end": "311840"
  },
  {
    "text": "edge concerns are very simple you know our api is edge dns and load balancer we don't need more",
    "start": "311840",
    "end": "318400"
  },
  {
    "text": "we are good if we are successful successful enough we get our customers",
    "start": "318400",
    "end": "325039"
  },
  {
    "start": "325000",
    "end": "325000"
  },
  {
    "text": "and now it's time to grow",
    "start": "325039",
    "end": "328240"
  },
  {
    "text": "with growth of the customer base with growth of engineering what happens is we",
    "start": "330160",
    "end": "336639"
  },
  {
    "text": "add features we add add add with added features we add engineering",
    "start": "336639",
    "end": "341759"
  },
  {
    "text": "we add features add engineering money flows beautiful at this point of time we want to",
    "start": "341759",
    "end": "347360"
  },
  {
    "text": "preserve engineering velocity we are still small relatively small and we don't want to step on each other toes",
    "start": "347360",
    "end": "354560"
  },
  {
    "text": "so how does this manifest in the changes to our ecosystem",
    "start": "354560",
    "end": "361440"
  },
  {
    "start": "356000",
    "end": "356000"
  },
  {
    "text": "whenever we see something big on what on which a lot of people work on",
    "start": "361840",
    "end": "368639"
  },
  {
    "text": "we have a tendency to split this apart and lately we were splitting everything into",
    "start": "368639",
    "end": "374479"
  },
  {
    "text": "monoliths oh sorry into microservices so let's introduce some microservices",
    "start": "374479",
    "end": "380400"
  },
  {
    "text": "good so we took some concerns from api application and put them as a separate apps they probably have",
    "start": "380400",
    "end": "387759"
  },
  {
    "text": "separate database they probably have dedicated teams to work on so beautiful it works well",
    "start": "387759",
    "end": "394880"
  },
  {
    "text": "and our clients didn't notice that we did that that's because api is our edge and it is",
    "start": "394880",
    "end": "402000"
  },
  {
    "text": "a level of interaction for all of our clients",
    "start": "402000",
    "end": "406478"
  },
  {
    "text": "over time as we build more and more applications separate applications we still build",
    "start": "407280",
    "end": "413599"
  },
  {
    "text": "logic to orchestrate within api so a request coming from",
    "start": "413599",
    "end": "418800"
  },
  {
    "text": "a client goes hits api and then api needs to execute some code to",
    "start": "418800",
    "end": "425199"
  },
  {
    "text": "execute underlying microservices over time the amount of this code grows",
    "start": "425199",
    "end": "433680"
  },
  {
    "text": "and while we can say thank you api team for making everyone's life easier we know that you will become",
    "start": "433680",
    "end": "440400"
  },
  {
    "text": "a monolith very soon so in a talk a couple of years ago josh evans",
    "start": "440400",
    "end": "448319"
  },
  {
    "text": "referred to this problem as return of a monolith well a monolith never went away",
    "start": "448319",
    "end": "454080"
  },
  {
    "text": "it just grew slower so over time api gets bigger and bigger",
    "start": "454080",
    "end": "460560"
  },
  {
    "text": "and bigger what do we do with bigger things right we try to split them",
    "start": "460560",
    "end": "466400"
  },
  {
    "text": "so let's split api but unlike services that we introduced on the",
    "start": "466400",
    "end": "472960"
  },
  {
    "text": "previous page api is an edge service and it is a",
    "start": "472960",
    "end": "478080"
  },
  {
    "text": "contract to our client so what do we do we need to change clients",
    "start": "478080",
    "end": "483180"
  },
  {
    "start": "483000",
    "end": "483000"
  },
  {
    "text": "[Music] there are at least a couple of ways to do that on the client side there is an",
    "start": "483180",
    "end": "490240"
  },
  {
    "text": "orchestration that needs to happen if we split edge application",
    "start": "490240",
    "end": "496000"
  },
  {
    "text": "one of the ways to split it is to kind of introduce additional domain name and say hey everything goes to this domain name for",
    "start": "496000",
    "end": "502479"
  },
  {
    "text": "this concern for other domain name for this concern we are good the only challenge comes when",
    "start": "502479",
    "end": "508479"
  },
  {
    "text": "the client that does this needs to change a good practice is to introduce another",
    "start": "508479",
    "end": "516320"
  },
  {
    "text": "service that tells client for which concern where to go so",
    "start": "516320",
    "end": "521599"
  },
  {
    "text": "basically in case of netflix it could be playback goes to this service",
    "start": "521599",
    "end": "527120"
  },
  {
    "text": "discovery goes to that service alternative way would be to introduce an api gateway",
    "start": "527120",
    "end": "532560"
  },
  {
    "text": "and route traffic transparently transparently routing traffic is",
    "start": "532560",
    "end": "538080"
  },
  {
    "text": "essential for splitting our monoliths or edge bandwidths further let's do a small quiz",
    "start": "538080",
    "end": "546880"
  },
  {
    "text": "who thinks netflix did client-side orchestration raise your hand all right",
    "start": "546880",
    "end": "553680"
  },
  {
    "text": "few of you who thinks that netflix did api gateway orchestration all right",
    "start": "553680",
    "end": "559360"
  },
  {
    "text": "majority of people interestingly enough you are all right",
    "start": "559360",
    "end": "564880"
  },
  {
    "text": "the beauty of these approaches is that they are not mutually exclusive so what netlist did initially",
    "start": "564880",
    "end": "571440"
  },
  {
    "start": "570000",
    "end": "570000"
  },
  {
    "text": "netflix split two-up applications using side orchestration",
    "start": "571440",
    "end": "577519"
  },
  {
    "text": "basically nccp netflix content control protocol was split into two",
    "start": "577519",
    "end": "582800"
  },
  {
    "text": "and ccp stand uh stood there for playback experience while apis",
    "start": "582800",
    "end": "590320"
  },
  {
    "text": "started to handle discovery experiences there were multiple domain names separate domain names and there were",
    "start": "590320",
    "end": "596480"
  },
  {
    "text": "multiple load balancers over time as ecosystem evolved",
    "start": "596480",
    "end": "605360"
  },
  {
    "start": "599000",
    "end": "599000"
  },
  {
    "text": "netflix introduced api gateway to the picture as there was a need to split a lot of",
    "start": "605360",
    "end": "611519"
  },
  {
    "text": "functional uh functionality further on the edge and that paid off they doffed in the",
    "start": "611519",
    "end": "618800"
  },
  {
    "text": "sense that over time more and more services were added on this slide you can see there is a",
    "start": "618800",
    "end": "624880"
  },
  {
    "text": "node.js uh servers that are added we call them",
    "start": "624880",
    "end": "630399"
  },
  {
    "text": "backends for front-ends they allow ui engineers to run their services",
    "start": "630399",
    "end": "635920"
  },
  {
    "text": "that can call other services on the edge get data from them and form",
    "start": "635920",
    "end": "642800"
  },
  {
    "text": "a response in the format devices expect",
    "start": "642800",
    "end": "647839"
  },
  {
    "text": "so introduction of api gateway it was a big step forward",
    "start": "649279",
    "end": "655920"
  },
  {
    "text": "so what does it help with first of all api gateway reduces coupling between",
    "start": "655920",
    "end": "661920"
  },
  {
    "text": "client and ecosystem services how does it do that by providing two",
    "start": "661920",
    "end": "669040"
  },
  {
    "text": "contracts and bridging two contracts together there is contact with the client and contract with the services",
    "start": "669040",
    "end": "676640"
  },
  {
    "text": "let's take a look at the example and authentication is a perfect example for api gateway",
    "start": "676640",
    "end": "684320"
  },
  {
    "start": "678000",
    "end": "678000"
  },
  {
    "text": "at netflix there are two different use cases one use case is streaming clients",
    "start": "685279",
    "end": "691839"
  },
  {
    "text": "basically when you open netflix application this is called streaming and there is",
    "start": "691839",
    "end": "697200"
  },
  {
    "text": "also content engineering use case it is an enterprise part of business",
    "start": "697200",
    "end": "703839"
  },
  {
    "text": "cyclejit a colleague of mine uh had a gave a talk yesterday on how",
    "start": "704160",
    "end": "709440"
  },
  {
    "text": "authentication works in a streaming world so i will focus on content engineering or",
    "start": "709440",
    "end": "715360"
  },
  {
    "text": "you know enterprise world in the enterprise world we have several types of authentication to name",
    "start": "715360",
    "end": "722560"
  },
  {
    "text": "a few it's oas and mutual tls and you can imagine what it would like",
    "start": "722560",
    "end": "729360"
  },
  {
    "text": "to implement authentication on every edge service",
    "start": "729360",
    "end": "735199"
  },
  {
    "text": "but not only that if you implement on every edge service sometimes you find vulnerability and",
    "start": "736320",
    "end": "741839"
  },
  {
    "text": "imagine what it takes to rotate let's say 60 services and",
    "start": "741839",
    "end": "746880"
  },
  {
    "text": "deploy uh you know security patch so api gateway we call it zul because we",
    "start": "746880",
    "end": "754320"
  },
  {
    "text": "have this open source technology called zoo so we use this terms interchangeably",
    "start": "754320",
    "end": "760560"
  },
  {
    "text": "is the one that handles authentication flow so in in the case of us it can be you know",
    "start": "760560",
    "end": "766800"
  },
  {
    "text": "user comes in the redirect is sent user you know authenticates",
    "start": "766800",
    "end": "772079"
  },
  {
    "text": "gets back to the service and then what happens the request from the user once user is",
    "start": "772079",
    "end": "779279"
  },
  {
    "text": "authenticated goes to the underlying service the backend service",
    "start": "779279",
    "end": "785040"
  },
  {
    "text": "the backend service doesn't need to know about how user authenticated doesn't need to know",
    "start": "785040",
    "end": "790720"
  },
  {
    "text": "about flow but what it needs to know it needs to know about identity",
    "start": "790720",
    "end": "797839"
  },
  {
    "text": "an identity is passed as a header we craft an end-to-end identity that's what",
    "start": "797839",
    "end": "804880"
  },
  {
    "text": "we call it it's a draw talking that assigned and the signature can be verified at any",
    "start": "804880",
    "end": "811120"
  },
  {
    "text": "layer and we pass this identity talking with our request",
    "start": "811120",
    "end": "816720"
  },
  {
    "text": "the service that receives it can forward this request and forward identity with some requests even further so the whole",
    "start": "816720",
    "end": "824240"
  },
  {
    "text": "invocation chain knows on behalf of whom the school is executed without even worrying about",
    "start": "824240",
    "end": "832399"
  },
  {
    "text": "you know the nitty-gritty details of authentication",
    "start": "832399",
    "end": "837600"
  },
  {
    "text": "another feature that helps a lot is routing remember we want to decouple clients",
    "start": "837680",
    "end": "843760"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "from knowing the underlying structure and the underlying shape of our edge that's why we kind of",
    "start": "843760",
    "end": "850079"
  },
  {
    "text": "send everything to api gateway zul and let it figure out so imagine",
    "start": "850079",
    "end": "855519"
  },
  {
    "text": "uh at some point an engineer on api team knows that the api is huge and handling too much traffic it needs to",
    "start": "855519",
    "end": "862639"
  },
  {
    "text": "show to be sharded and we create new cluster we create new cluster with api and we decide we will only send",
    "start": "862639",
    "end": "869440"
  },
  {
    "text": "traffic that is for tv devices there so the dotted line here is a potential",
    "start": "869440",
    "end": "875519"
  },
  {
    "text": "route for the traffic now that's not all that's just the edge",
    "start": "875519",
    "end": "880560"
  },
  {
    "text": "layer right what about meet your services api needs to talk to a b a b is a",
    "start": "880560",
    "end": "888160"
  },
  {
    "text": "service that tells you whether customer is part of any a b test",
    "start": "888160",
    "end": "893760"
  },
  {
    "text": "so imagine i'm an engineer on a b team and i want to test my bleeding edge changes i don't",
    "start": "893760",
    "end": "900240"
  },
  {
    "text": "want to you know merge them to master yet i really want to see how end-to-end flow works",
    "start": "900240",
    "end": "905680"
  },
  {
    "text": "maybe that's not the ideal way to test but i really want this so what i do i create my cluster",
    "start": "905680",
    "end": "913760"
  },
  {
    "text": "i call it with my name and i need to route some traffic there",
    "start": "913760",
    "end": "919839"
  },
  {
    "text": "probably it's not a good idea to route customers traffic to the bleeding edge application that i just",
    "start": "919839",
    "end": "926240"
  },
  {
    "text": "built on you know on my own so i go to zul and i configure a routing",
    "start": "926240",
    "end": "932160"
  },
  {
    "text": "rule saying that for this particular customer who is myself i want this customer to be",
    "start": "932160",
    "end": "938959"
  },
  {
    "text": "routed to this bleeding edge",
    "start": "938959",
    "end": "942639"
  },
  {
    "text": "when request comes from tv that i own with my account zuul checks what rules has have to be",
    "start": "945199",
    "end": "952839"
  },
  {
    "text": "applied it applies the rule to route to api tv cluster",
    "start": "952839",
    "end": "958560"
  },
  {
    "text": "but it also checks that i am the specific user that is",
    "start": "958560",
    "end": "964560"
  },
  {
    "text": "whitelisted to go to this bleeding edge application and adds a header that says",
    "start": "964560",
    "end": "970800"
  },
  {
    "text": "that i should be sent to this bleeding edge instead of standard cluster",
    "start": "970800",
    "end": "976480"
  },
  {
    "text": "it's called deep override rule and then my traffic will be routed to this",
    "start": "976480",
    "end": "982560"
  },
  {
    "text": "bleeding edge perfect now imagine a situation someone else comes from laptop opens laptop the role",
    "start": "982560",
    "end": "990800"
  },
  {
    "text": "throughout 2tv ui cluster is not triggered and you know we go to api global and",
    "start": "990800",
    "end": "998800"
  },
  {
    "text": "since there is not a customer that is whitelisted the traffic is routed to standard a b",
    "start": "998800",
    "end": "1006160"
  },
  {
    "text": "cluster this feature is very important because it allows",
    "start": "1006160",
    "end": "1011519"
  },
  {
    "text": "us to decouple routing and sharding and everything and enable everyone at",
    "start": "1011519",
    "end": "1017600"
  },
  {
    "text": "netflix to manage their own traffic within the data center and at the edge the question",
    "start": "1017600",
    "end": "1025438"
  },
  {
    "text": "is what can go wrong",
    "start": "1025439",
    "end": "1028798"
  },
  {
    "text": "well routing is a configuration is configuration raise your hand if you ever had to deal",
    "start": "1030880",
    "end": "1037918"
  },
  {
    "text": "with incidents when the wrong config was pushed to production",
    "start": "1037919",
    "end": "1043120"
  },
  {
    "text": "all right so majority of you so you can relate this is exactly what is happening and",
    "start": "1043120",
    "end": "1049919"
  },
  {
    "text": "happen several times so the config is pushed to production this is config and the route is applied globally and",
    "start": "1049919",
    "end": "1057200"
  },
  {
    "text": "you can send 100 of the traffic to this a b bleeding edge or somewhere else the problem with",
    "start": "1057200",
    "end": "1064640"
  },
  {
    "text": "that is that people usually don't know how much traffic they affect so instead of",
    "start": "1064640",
    "end": "1069679"
  },
  {
    "text": "closing down this functionality and dedicating an operator who can see it and you know just the whole day configure routes for",
    "start": "1069679",
    "end": "1077679"
  },
  {
    "text": "everyone we decided to educate people so instead of applying rules right away",
    "start": "1077679",
    "end": "1082880"
  },
  {
    "text": "what we do we run a job that estimates how much traffic will be",
    "start": "1082880",
    "end": "1088320"
  },
  {
    "text": "affected by this applied rule and then there is a pop-up that says hey you're gonna send 100",
    "start": "1088320",
    "end": "1094160"
  },
  {
    "text": "of your traffic to your local machine do you want to do that well you can still do that you know freedom and responsibility netflix",
    "start": "1094160",
    "end": "1100720"
  },
  {
    "text": "culture but at least you do this consciously and after that we will talk",
    "start": "1100720",
    "end": "1108240"
  },
  {
    "text": "all right the second statement both statement that api provides insights and",
    "start": "1108240",
    "end": "1113280"
  },
  {
    "text": "resiliency client perceived resiliency i would say",
    "start": "1113280",
    "end": "1118240"
  },
  {
    "text": "how does it do this so api gateway is centrally located all the traffic goes through this",
    "start": "1119360",
    "end": "1124799"
  },
  {
    "text": "it's a choke point so whatever concern you apply there is applied to all of your traffic it's a",
    "start": "1124799",
    "end": "1130880"
  },
  {
    "text": "perfect place so what do we do we report metrics so when we report metrics from one place",
    "start": "1130880",
    "end": "1137200"
  },
  {
    "start": "1134000",
    "end": "1134000"
  },
  {
    "text": "they are always consistent right so all the backends for all the domains for all the clients",
    "start": "1137200",
    "end": "1142240"
  },
  {
    "text": "we have consistent metrics and all the other teams at the company they can build their tooling",
    "start": "1142240",
    "end": "1148320"
  },
  {
    "text": "on this matrix we can build dashboard alerts",
    "start": "1148320",
    "end": "1153600"
  },
  {
    "text": "i don't know can re analysis et cetera et cetera you can do so much with that we have a system called atlas it's an",
    "start": "1153600",
    "end": "1160000"
  },
  {
    "text": "open source real time dimensional database and if you don't",
    "start": "1160000",
    "end": "1165679"
  },
  {
    "text": "know about that if you haven't used it i recommend you check it out metrics",
    "start": "1165679",
    "end": "1171039"
  },
  {
    "text": "are great so something is happening we see metrics spiked error spike what do we do we debug",
    "start": "1171039",
    "end": "1177760"
  },
  {
    "text": "how do we debug well we need to see individual requests how do we do that at netflix there is a",
    "start": "1177760",
    "end": "1183600"
  },
  {
    "text": "system built called raven raven is a ui where you go and you create a filter saying",
    "start": "1183600",
    "end": "1189440"
  },
  {
    "text": "whatever request matches this filter send it to mantis another term so",
    "start": "1189440",
    "end": "1195919"
  },
  {
    "text": "mantis is an open source technology it's a platform to build real-time processing applications very",
    "start": "1195919",
    "end": "1203280"
  },
  {
    "text": "powerful i recommend you check it out so here for example i have an outage i see that",
    "start": "1203280",
    "end": "1209200"
  },
  {
    "text": "errors for ios devices spiked what do i do i create a filter i say whatever starts with ios",
    "start": "1209200",
    "end": "1217440"
  },
  {
    "text": "and if the response code is higher or equal 500 sample at five percent and send me",
    "start": "1217440",
    "end": "1223760"
  },
  {
    "text": "those requests and responses as well so this is the way for me to debug",
    "start": "1223760",
    "end": "1228880"
  },
  {
    "text": "without the paying the price for logging everything and indexing everything so insights",
    "start": "1228880",
    "end": "1235440"
  },
  {
    "text": "beautiful since we already have integration with mantis it's a streaming platform right what can",
    "start": "1235440",
    "end": "1242559"
  },
  {
    "text": "we do of course we can build anomaly detection mechanism because all the traffic goes through the one",
    "start": "1242559",
    "end": "1249039"
  },
  {
    "text": "single place we have this you know uniform picture",
    "start": "1249039",
    "end": "1254159"
  },
  {
    "text": "and we can alert and react to this so we stream meant all the errors to",
    "start": "1254159",
    "end": "1261440"
  },
  {
    "text": "mantis and there is a job that runs we call it raju it's a service actually",
    "start": "1261440",
    "end": "1267280"
  },
  {
    "text": "that calculates acceptable error rate for every single backend and if we cross the",
    "start": "1267280",
    "end": "1274240"
  },
  {
    "text": "threshold for a long period of time there is an alert that is being sent",
    "start": "1274240",
    "end": "1280960"
  },
  {
    "text": "cool let's quickly talk about resiliency resiliency when you build api gateway",
    "start": "1281520",
    "end": "1288799"
  },
  {
    "text": "you have so many features that you can put in so we decided to put a custom load",
    "start": "1288799",
    "end": "1294320"
  },
  {
    "text": "balancing we decided to go with random choice of two approach and that helped a lot",
    "start": "1294320",
    "end": "1302400"
  },
  {
    "text": "to mitigate certain issues uh during deployments of services that didn't go well choice",
    "start": "1302400",
    "end": "1308799"
  },
  {
    "text": "of two load balancing is basically you randomly choose two instances and then you decide to which one you",
    "start": "1308799",
    "end": "1315919"
  },
  {
    "text": "want to send traffic based on the criteria that you control so for us",
    "start": "1315919",
    "end": "1321360"
  },
  {
    "text": "we really wanted to control this criteria and there is an agreement between api gateway and",
    "start": "1321360",
    "end": "1327440"
  },
  {
    "text": "backend service where backend service can send some health information to us",
    "start": "1327440",
    "end": "1332559"
  },
  {
    "text": "and we can use it if we don't have our own you know view of of this",
    "start": "1332559",
    "end": "1338320"
  },
  {
    "text": "instance another thing that we do is we retry on behalf of clients",
    "start": "1338320",
    "end": "1344400"
  },
  {
    "text": "and this is why i said client perceived resiliency we don't necessarily improve resiliency",
    "start": "1344400",
    "end": "1351120"
  },
  {
    "text": "but if we chose the instance that is bad and we send some traffic and it returns 500",
    "start": "1351120",
    "end": "1359039"
  },
  {
    "text": "we can retry on behalf of the client it's not always possible but in more cases than not we do",
    "start": "1359039",
    "end": "1367280"
  },
  {
    "text": "retry on behalf of the clients good so let's summarize stage two we wanted",
    "start": "1367280",
    "end": "1374000"
  },
  {
    "start": "1371000",
    "end": "1371000"
  },
  {
    "text": "to optimize engineering velocity we started by",
    "start": "1374000",
    "end": "1380559"
  },
  {
    "text": "introducing microservices and we said thank you to api team who helped us hide",
    "start": "1380559",
    "end": "1385760"
  },
  {
    "text": "the complexity but then we started splitting edge and introducing additional services",
    "start": "1385760",
    "end": "1391440"
  },
  {
    "text": "to support that we introduced the additional domains we introduced init service so that our",
    "start": "1391440",
    "end": "1397679"
  },
  {
    "text": "application can go before it starts fetch some information about",
    "start": "1397679",
    "end": "1402880"
  },
  {
    "text": "what to call and then work and we also introduced the concept of api gateway",
    "start": "1402880",
    "end": "1408880"
  },
  {
    "text": "particularly zul as one of the implementation",
    "start": "1408880",
    "end": "1414320"
  },
  {
    "text": "the reduces coupling between clients and services and it's a leverage point to put all the",
    "start": "1415360",
    "end": "1421840"
  },
  {
    "text": "cross-cutting concerns such as authentication rate limiting enrichment of requests etc etc",
    "start": "1421840",
    "end": "1428640"
  },
  {
    "text": "so what's next we have a business successful one we scaled our engineering organization",
    "start": "1428640",
    "end": "1435440"
  },
  {
    "text": "what's next next is resiliency and quality of",
    "start": "1435440",
    "end": "1442559"
  },
  {
    "start": "1440000",
    "end": "1440000"
  },
  {
    "text": "service before we talk about resiliency and",
    "start": "1442840",
    "end": "1448640"
  },
  {
    "text": "quality of service i wanted to put on the screen another bold statement",
    "start": "1448640",
    "end": "1454480"
  },
  {
    "text": "which is most of the incidents are self-inflicted so if our underlying infrastructure",
    "start": "1454480",
    "end": "1461279"
  },
  {
    "text": "promises a lot of nines it does mean something but it doesn't mean a lot",
    "start": "1461279",
    "end": "1467520"
  },
  {
    "text": "because the only way to prevent outages is to not do anything",
    "start": "1467520",
    "end": "1473039"
  },
  {
    "text": "so we don't want to not do anything we do want to you know be very very very agile and",
    "start": "1473039",
    "end": "1478799"
  },
  {
    "text": "deploy very often how do we do that let's just look at netflix example and",
    "start": "1478799",
    "end": "1485520"
  },
  {
    "text": "what netflix did in 2013 and 2014 netflix invested a lot",
    "start": "1485520",
    "end": "1491360"
  },
  {
    "start": "1487000",
    "end": "1487000"
  },
  {
    "text": "of effort into supporting multi-region deployment",
    "start": "1491360",
    "end": "1496799"
  },
  {
    "text": "not only they started deploying in multiple regions but they also staged deployments and",
    "start": "1496799",
    "end": "1504080"
  },
  {
    "text": "they made sure that all the regions are active what does it mean if one region goes",
    "start": "1504080",
    "end": "1509840"
  },
  {
    "text": "bust we can simply reroute client to a different region and they will get",
    "start": "1509840",
    "end": "1517520"
  },
  {
    "text": "service for that not only active active data replication",
    "start": "1517520",
    "end": "1524480"
  },
  {
    "text": "had to happen but there was also a lot of edge concerns that had to evolve",
    "start": "1524480",
    "end": "1530559"
  },
  {
    "text": "let's talk about more educa edgier concern that than it was so we talked about api",
    "start": "1530559",
    "end": "1537840"
  },
  {
    "start": "1532000",
    "end": "1532000"
  },
  {
    "text": "gateway now we get to this layer of dns so far we only had multiple dns records",
    "start": "1537840",
    "end": "1545200"
  },
  {
    "text": "let's take a look at one and see how netflix did their failover",
    "start": "1545200",
    "end": "1550720"
  },
  {
    "text": "api netflix.com is a canonical name to api geonetflix.com it is resolved by a",
    "start": "1550720",
    "end": "1557679"
  },
  {
    "text": "system called ultra dns based on the physical location of a resolver so",
    "start": "1557679",
    "end": "1566320"
  },
  {
    "text": "assume physical location of a client so if you are in united states west",
    "start": "1566320",
    "end": "1572559"
  },
  {
    "text": "you will be sent to u.s fest now aws region north america east will be sent to east",
    "start": "1572559",
    "end": "1579600"
  },
  {
    "text": "south america will be sent to east and more or less the rest of the world",
    "start": "1579600",
    "end": "1585200"
  },
  {
    "text": "some parts of asia excluded would be sent to europe that resulted in east being a heavier",
    "start": "1585200",
    "end": "1592640"
  },
  {
    "text": "region because more traffic is going there but that also allowed us introduction of",
    "start": "1592640",
    "end": "1598720"
  },
  {
    "text": "this you know virtual force region allowed us to split traffic more",
    "start": "1598720",
    "end": "1605039"
  },
  {
    "text": "granularly since i mentioned that",
    "start": "1605039",
    "end": "1610080"
  },
  {
    "text": "since i mentioned that uus east was the biggest region let's try to",
    "start": "1610320",
    "end": "1617039"
  },
  {
    "text": "evacuate it let's see what happens when there is an outage we decided that it's time to",
    "start": "1617039",
    "end": "1622640"
  },
  {
    "text": "evacuate the region first of all we change records",
    "start": "1622640",
    "end": "1629279"
  },
  {
    "text": "to point to different load balancers in different regions so ultra dns still returns",
    "start": "1629279",
    "end": "1637360"
  },
  {
    "text": "the c name that is uh specific for for for your region but the underlying",
    "start": "1637360",
    "end": "1644559"
  },
  {
    "text": "ips are not the same so underlying ips start pointing to the load balancers in",
    "start": "1644559",
    "end": "1650880"
  },
  {
    "text": "the region that you are routed to so us east north america would be routed to u.s west and south",
    "start": "1650880",
    "end": "1657840"
  },
  {
    "text": "america would be routed to europe simultaneously with that",
    "start": "1657840",
    "end": "1663600"
  },
  {
    "text": "zuul our api gateway will open http connections to regions",
    "start": "1663600",
    "end": "1670399"
  },
  {
    "text": "that are healthy this is very important because",
    "start": "1670399",
    "end": "1675520"
  },
  {
    "text": "dns has this property dns is being cached and there is this property called ttl on",
    "start": "1675520",
    "end": "1681919"
  },
  {
    "text": "dns we set it at 60 seconds so we assume that within 60 seconds",
    "start": "1681919",
    "end": "1688480"
  },
  {
    "text": "clients will come and refresher their dns and they usually do",
    "start": "1688480",
    "end": "1693919"
  },
  {
    "text": "so dns ttl is a myth but it's a myth that is widely accepted and",
    "start": "1693919",
    "end": "1701279"
  },
  {
    "text": "many resolvers believe in that but some do not and that's why you have",
    "start": "1701279",
    "end": "1707520"
  },
  {
    "text": "you see a little bit of traffic still going to this region which was evacuated",
    "start": "1707520",
    "end": "1713600"
  },
  {
    "text": "so we never saw 100 percent of the traffic evacuated from a region we always see a",
    "start": "1713600",
    "end": "1720080"
  },
  {
    "text": "trickle of traffic and we cannot punish customers or our clients for their resolvers right that's why we",
    "start": "1720080",
    "end": "1729120"
  },
  {
    "text": "stay in the state of cross region proxy for the traffic",
    "start": "1729120",
    "end": "1734960"
  },
  {
    "text": "make sense good let's talk about our stage three",
    "start": "1735440",
    "end": "1742720"
  },
  {
    "text": "we wanted to focus on resiliency and while focusing on resiliency we also",
    "start": "1743440",
    "end": "1749840"
  },
  {
    "text": "improved latency a little bit because right now we have three regions",
    "start": "1749840",
    "end": "1754960"
  },
  {
    "text": "right we can send clients to the region that is closer to them",
    "start": "1754960",
    "end": "1760080"
  },
  {
    "text": "and potentially they will have a bit better service active active data replication",
    "start": "1760080",
    "end": "1767440"
  },
  {
    "text": "is very complicated but thank you great engineers who did that it was",
    "start": "1767440",
    "end": "1773600"
  },
  {
    "text": "working edge concerns had to evolve we needed to get to a level of dns or geodns traffic",
    "start": "1773600",
    "end": "1782799"
  },
  {
    "text": "steering it's not just one record it's not multiple records it's a dynamic system",
    "start": "1782799",
    "end": "1788559"
  },
  {
    "text": "right now and has to be managed carefully we built tooling around this dns management",
    "start": "1788559",
    "end": "1796320"
  },
  {
    "text": "why well simply we introduced so many domain names imagine doing this flip manually we",
    "start": "1796320",
    "end": "1803200"
  },
  {
    "text": "really need a tool and we implemented cross-region traffic",
    "start": "1803200",
    "end": "1808799"
  },
  {
    "text": "proxy between gateways to help customers who cannot rely on their dns",
    "start": "1808799",
    "end": "1816880"
  },
  {
    "text": "so let's recap real quick we started with three tier micro uh three",
    "start": "1817279",
    "end": "1823520"
  },
  {
    "text": "tier uh architecture monolith introduced microservices",
    "start": "1823520",
    "end": "1828799"
  },
  {
    "text": "split our edge and worked on our resiliency what's next the next concern that",
    "start": "1828799",
    "end": "1836559"
  },
  {
    "text": "bothers us is speed of light",
    "start": "1836559",
    "end": "1841120"
  },
  {
    "start": "1839000",
    "end": "1839000"
  },
  {
    "text": "guesses why speed of light",
    "start": "1842880",
    "end": "1846080"
  },
  {
    "text": "exactly so speed of light is finite and we didn't find how to solve this",
    "start": "1848000",
    "end": "1855200"
  },
  {
    "text": "therefore we need to work around this distance affects round trip time",
    "start": "1856159",
    "end": "1863600"
  },
  {
    "text": "between two places on earth the latency exists if we want to",
    "start": "1863600",
    "end": "1870159"
  },
  {
    "text": "transfer information let's get back to our example a customer",
    "start": "1870159",
    "end": "1875679"
  },
  {
    "start": "1874000",
    "end": "1874000"
  },
  {
    "text": "in south america trying to connect aws us",
    "start": "1875679",
    "end": "1881360"
  },
  {
    "text": "there is a latency and let's say the latency is 100 milliseconds round",
    "start": "1881360",
    "end": "1888159"
  },
  {
    "text": "trip it's very optimistic by the way but 100 milliseconds what happens when",
    "start": "1888159",
    "end": "1893279"
  },
  {
    "text": "you establish connection to a server most of the communication",
    "start": "1893279",
    "end": "1898799"
  },
  {
    "text": "these days at least let's wait for quick protocol or http 3",
    "start": "1898799",
    "end": "1904320"
  },
  {
    "text": "but these days at least most of the communication happens over tcp",
    "start": "1904320",
    "end": "1910799"
  },
  {
    "text": "most of the communication happens thankfully over secure protocol called tls",
    "start": "1910799",
    "end": "1917760"
  },
  {
    "text": "so in order to send bytes to a server what i need to do is to establish tcp connection",
    "start": "1917760",
    "end": "1925039"
  },
  {
    "text": "then after i establish tcp connection i need to do usually tls",
    "start": "1925039",
    "end": "1932840"
  },
  {
    "text": "handshake there are tricks to work around this but not all the clients support this",
    "start": "1932840",
    "end": "1939919"
  },
  {
    "text": "so this is how tls handshake and ssl tls handshake works if we assume client",
    "start": "1939919",
    "end": "1947600"
  },
  {
    "start": "1940000",
    "end": "1940000"
  },
  {
    "text": "latency of 100 milliseconds between the client and aws",
    "start": "1947600",
    "end": "1953679"
  },
  {
    "text": "we spent 100 milliseconds for the tcp handshake and we do spend 200 milliseconds for the",
    "start": "1953679",
    "end": "1960799"
  },
  {
    "text": "tls and shake because client needs to send client hello server response with server hello and",
    "start": "1960799",
    "end": "1967360"
  },
  {
    "text": "certificate and they finally finish the key exchange so it takes two round trips to do tls",
    "start": "1967360",
    "end": "1976399"
  },
  {
    "text": "and only then we send requests so in order for me to send my first request i need to spend 300 milliseconds",
    "start": "1976399",
    "end": "1983840"
  },
  {
    "text": "as i said in the optimistic very optimistic case",
    "start": "1983840",
    "end": "1988799"
  },
  {
    "text": "there are other change challenges with a client sitting far away from the data centers",
    "start": "1989360",
    "end": "1996080"
  },
  {
    "text": "for example we all use wireless networks and wireless networks are lossy",
    "start": "1996080",
    "end": "2004320"
  },
  {
    "text": "so whenever i have a connection problem i usually have a connection problem",
    "start": "2004320",
    "end": "2009760"
  },
  {
    "text": "between me and my isp but in order to repair a tcp packet loss",
    "start": "2009760",
    "end": "2016880"
  },
  {
    "text": "with my long connection to aws that is 100 milliseconds i need to pay quite a bit of time",
    "start": "2016880",
    "end": "2024559"
  },
  {
    "text": "usually it's one round trip to detect connection uh tcp loss and 1.5 round trips",
    "start": "2024559",
    "end": "2031039"
  },
  {
    "text": "to fix packet loss another problem is",
    "start": "2031039",
    "end": "2039039"
  },
  {
    "text": "you heard this uh metaphor the internet and pipes right so pipes get congested",
    "start": "2039440",
    "end": "2047039"
  },
  {
    "text": "and the longer the distance between two points the higher the chance is that the pipes",
    "start": "2047039",
    "end": "2053280"
  },
  {
    "text": "will be congested all right real quick tcp tls",
    "start": "2053280",
    "end": "2060240"
  },
  {
    "text": "lossy connections congestion quite a bit of problems how do we solve them we",
    "start": "2060240",
    "end": "2068638"
  },
  {
    "start": "2067000",
    "end": "2067000"
  },
  {
    "text": "trick clients we put an intermediary in between client and our data center we",
    "start": "2068639",
    "end": "2074878"
  },
  {
    "text": "refer to this as a pop populous point of presence",
    "start": "2074879",
    "end": "2081200"
  },
  {
    "text": "think about pope as a proxy that accepts clients connection",
    "start": "2081200",
    "end": "2087440"
  },
  {
    "text": "terminates tls and then over a backbone",
    "start": "2087440",
    "end": "2092638"
  },
  {
    "text": "another concept that we just introduced sends the request to the primary data center or aws region",
    "start": "2092639",
    "end": "2100000"
  },
  {
    "text": "what is backbone think about backbone as private internet connection between your",
    "start": "2100000",
    "end": "2105839"
  },
  {
    "text": "point of presence and aws it's like your private highway right everyone is stuck in traffic and",
    "start": "2105839",
    "end": "2112800"
  },
  {
    "text": "you are driving on your private highway so",
    "start": "2112800",
    "end": "2119119"
  },
  {
    "text": "how does this change the interaction and quality of clients experience if we",
    "start": "2120880",
    "end": "2126800"
  },
  {
    "text": "put a point of presence in between them much more complicated diagram but you",
    "start": "2126800",
    "end": "2134880"
  },
  {
    "text": "can see that the connection or round trip time between client and point of presence",
    "start": "2134880",
    "end": "2140480"
  },
  {
    "text": "is lower this means that tls and tcp handshakes",
    "start": "2140480",
    "end": "2147119"
  },
  {
    "text": "are happening faster and therefore",
    "start": "2147119",
    "end": "2152640"
  },
  {
    "text": "in order to send my first bytes of my request i need to wait only 90 milliseconds",
    "start": "2154560",
    "end": "2160880"
  },
  {
    "text": "compare this to 300 milliseconds",
    "start": "2160880",
    "end": "2165680"
  },
  {
    "text": "when we send request to point of presence point of presence already has been established connection",
    "start": "2167119",
    "end": "2172640"
  },
  {
    "text": "with our primary database data center it's already scaled and we're ready to reuse it",
    "start": "2172640",
    "end": "2181359"
  },
  {
    "text": "it's a good idea to also use protocols that allow you to multiplex requests so on the same tcp connection we can",
    "start": "2182240",
    "end": "2189359"
  },
  {
    "text": "send multiple requests one of them would be you know http 2.",
    "start": "2189359",
    "end": "2194800"
  },
  {
    "text": "not all the clients can speak http too but here you control a client within point of presence",
    "start": "2194800",
    "end": "2200480"
  },
  {
    "text": "and you control the server on the other end in our case it is zul right we control",
    "start": "2200480",
    "end": "2206400"
  },
  {
    "text": "the code base it does http 2 and the point of presence does http 2.",
    "start": "2206400",
    "end": "2211440"
  },
  {
    "text": "so we can take http 1 traffic control it into http 2 and improve client's connectivity",
    "start": "2211440",
    "end": "2219599"
  },
  {
    "start": "2217000",
    "end": "2217000"
  },
  {
    "text": "summarizing point stage 4 we wanted to improve client's",
    "start": "2220000",
    "end": "2225839"
  },
  {
    "text": "connectivity by reducing time spent doing tls and tcp",
    "start": "2225839",
    "end": "2232160"
  },
  {
    "text": "handshakes congestion avoidance and tcp packet loss recovery from packet loss",
    "start": "2232160",
    "end": "2239520"
  },
  {
    "text": "needs to be improved for that we introduced the concept of point of presence",
    "start": "2239520",
    "end": "2244640"
  },
  {
    "text": "we introduced the concept of backbone the private internet connection it can be built it can be bought it can",
    "start": "2244640",
    "end": "2252160"
  },
  {
    "text": "be rented some cdn providers these days allow backbone to be rented aws has this a",
    "start": "2252160",
    "end": "2260480"
  },
  {
    "text": "service called i think aw it's called global accelerator so the idea is pretty much the same",
    "start": "2260480",
    "end": "2268960"
  },
  {
    "text": "i didn't talk too much about the steering of traffic to the pop but there is alternative ways",
    "start": "2268960",
    "end": "2275680"
  },
  {
    "text": "of steering that you can explore other than dns",
    "start": "2275680",
    "end": "2281520"
  },
  {
    "text": "and uh because we control codebase in the pop and we control code",
    "start": "2282560",
    "end": "2289040"
  },
  {
    "text": "base in the data center it makes it possible for us to introduce",
    "start": "2289040",
    "end": "2294240"
  },
  {
    "text": "protocols that we cannot roll out to all the clients so just to summarize",
    "start": "2294240",
    "end": "2302079"
  },
  {
    "text": "in roughly 40 minutes we made a journey",
    "start": "2302079",
    "end": "2308320"
  },
  {
    "text": "that some companies can only",
    "start": "2308320",
    "end": "2313359"
  },
  {
    "text": "go through in several years so it's quite a success in my opinion",
    "start": "2313359",
    "end": "2320880"
  },
  {
    "text": "if there is one takeaway that i want to summarize with it would be",
    "start": "2320880",
    "end": "2328640"
  },
  {
    "text": "the statement that a well-designed edge enables evolution of the business",
    "start": "2328640",
    "end": "2335440"
  },
  {
    "text": "and think wisely when you make choices that affect your age what's that",
    "start": "2335440",
    "end": "2343200"
  },
  {
    "text": "let's open it up for questions",
    "start": "2343200",
    "end": "2346960"
  },
  {
    "text": "thank you leslie questions",
    "start": "2350640",
    "end": "2355838"
  },
  {
    "text": "you mentioned that pops nowadays can be rented if that's the case does tls still",
    "start": "2356000",
    "end": "2364320"
  },
  {
    "text": "terminate at pop and how secure is it to do something",
    "start": "2364320",
    "end": "2369680"
  },
  {
    "text": "so the question is uh if pop is rented so you don't control pop",
    "start": "2369680",
    "end": "2375599"
  },
  {
    "text": "and you put it in isp location how do you terminate tls",
    "start": "2375599",
    "end": "2381119"
  },
  {
    "text": "in this case um your best bet would be kls sessions because you would probably",
    "start": "2381119",
    "end": "2388000"
  },
  {
    "text": "upload your last termination to something that you control you do this once and then",
    "start": "2388000",
    "end": "2393200"
  },
  {
    "text": "issue tls session ticket to the client and then we use this ticket so i think that's the best approach",
    "start": "2393200",
    "end": "2402160"
  },
  {
    "text": "i think i heard you mentioned earlier in your slides how uh zuul and alb were considered kind of",
    "start": "2402800",
    "end": "2409040"
  },
  {
    "text": "interchangeable in a way in some other slides i saw alb being a node located in between",
    "start": "2409040",
    "end": "2416000"
  },
  {
    "text": "the zool below it and the like api.used1.netflix above it",
    "start": "2416000",
    "end": "2422160"
  },
  {
    "text": "uh can you maybe elaborate the difference between the alb and zul",
    "start": "2422160",
    "end": "2427280"
  },
  {
    "text": "yeah so alb is still in the picture alb is used to terminate kls",
    "start": "2427280",
    "end": "2434880"
  },
  {
    "text": "because that's not the concern that zul wants to have and then route traffic to",
    "start": "2434880",
    "end": "2441760"
  },
  {
    "text": "to zul instance in some cases that's not what's happening in some cases because",
    "start": "2441760",
    "end": "2447599"
  },
  {
    "text": "we need http 2 support and we want to support lpm we terminate tls on",
    "start": "2447599",
    "end": "2453680"
  },
  {
    "text": "on zul itself simply because right now amazon as of now does not",
    "start": "2453680",
    "end": "2461119"
  },
  {
    "text": "support alpn we do this on zol but most of the traffic goes through lb",
    "start": "2461119",
    "end": "2467359"
  },
  {
    "text": "alb does it answer your question",
    "start": "2467359",
    "end": "2471838"
  },
  {
    "text": "uh you were talking earlier about having a like a routing configuration and when traffic would",
    "start": "2473440",
    "end": "2479280"
  },
  {
    "text": "come into zuuls we would look at the routing config to figure out where to send the traffic uh and i was",
    "start": "2479280",
    "end": "2485119"
  },
  {
    "text": "curious is that only from zuul to wherever it goes after that or is that like all of",
    "start": "2485119",
    "end": "2490800"
  },
  {
    "text": "the internal like layer various layers that are that traffic might go through",
    "start": "2490800",
    "end": "2498000"
  },
  {
    "text": "so the question is whether uh we can route to the next hop only after zoo",
    "start": "2499040",
    "end": "2505760"
  },
  {
    "text": "or can we route after that so yeah so there are two different use",
    "start": "2505760",
    "end": "2511200"
  },
  {
    "text": "cases first use case is to steer a lot of traffic",
    "start": "2511200",
    "end": "2516240"
  },
  {
    "text": "from one place to another and that's mainly made on the first",
    "start": "2516240",
    "end": "2523040"
  },
  {
    "text": "hop but there is also a rule type that we apply at zoo layer",
    "start": "2523040",
    "end": "2530079"
  },
  {
    "text": "that is called crr custom request routing so if request matches criteria i can",
    "start": "2530079",
    "end": "2535680"
  },
  {
    "text": "override target not only for the next hop but",
    "start": "2535680",
    "end": "2541119"
  },
  {
    "text": "for any call in the chain that wants to call some other service",
    "start": "2541119",
    "end": "2546960"
  },
  {
    "text": "we have this concept of web at netflix so basically at zoo layer we",
    "start": "2547119",
    "end": "2554319"
  },
  {
    "text": "will say for a b system for a b application please overwrite",
    "start": "2554319",
    "end": "2562160"
  },
  {
    "text": "veep to this new vip and this rule will be honored down the chain of invocation does it",
    "start": "2562160",
    "end": "2568640"
  },
  {
    "text": "answer your question good questions",
    "start": "2568640",
    "end": "2574160"
  },
  {
    "text": "all right thank you vasily [Applause]",
    "start": "2576480",
    "end": "2582550"
  }
]