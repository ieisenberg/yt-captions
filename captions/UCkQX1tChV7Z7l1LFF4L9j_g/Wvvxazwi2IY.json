[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "[Music]",
    "start": "11140",
    "end": "16760"
  },
  {
    "text": "my name is Stefan FAL I'm a postu at UC Berkeley I come from South Africa where",
    "start": "16760",
    "end": "23199"
  },
  {
    "text": "I'm an applied mathematician um pretend to be at least and um yeah today I'd like to talk about",
    "start": "23199",
    "end": "30439"
  },
  {
    "text": "psyit image the image processing toolbox or python um psyit image is slightly",
    "start": "30439",
    "end": "37120"
  },
  {
    "start": "35000",
    "end": "318000"
  },
  {
    "text": "different than many of the other projects you've seen so far so uh projects like numpy pandas they're",
    "start": "37120",
    "end": "42520"
  },
  {
    "text": "fairly widely applicable to all sorts of different domains uh psych image is the only project here that's fairly focused",
    "start": "42520",
    "end": "49760"
  },
  {
    "text": "on the specific domain of uh in this case image processing um but um yeah the domain of application",
    "start": "49760",
    "end": "58239"
  },
  {
    "text": "for image processing is uh image processing is used in science",
    "start": "58239",
    "end": "63680"
  },
  {
    "text": "uh you see it in micros microscopy astronomy biology uh it pops up in",
    "start": "63680",
    "end": "70080"
  },
  {
    "text": "computer vision in engineering uh and that's about to name a few uh in Industry we see image",
    "start": "70080",
    "end": "77600"
  },
  {
    "text": "processing happen in interesting places as well uh robots controlled in Industry",
    "start": "77600",
    "end": "83320"
  },
  {
    "text": "to perform automated inspection or control of production uh used to process",
    "start": "83320",
    "end": "89280"
  },
  {
    "text": "satellite dat later uh we uh at the strata conference there was a talk on uh",
    "start": "89280",
    "end": "95880"
  },
  {
    "text": "augmenting Sports television so for example when baseball players uh pitch",
    "start": "95880",
    "end": "101560"
  },
  {
    "text": "they want to know where did where did the ball land you know what was the angle of throw the speed Etc uh and a",
    "start": "101560",
    "end": "107680"
  },
  {
    "text": "lot of that is done with cameras following uh objects around and a lot of image processing happening behind the",
    "start": "107680",
    "end": "113479"
  },
  {
    "text": "scenes there um and then there are some toy applications you know like when you scan uh these little micro arrays little",
    "start": "113479",
    "end": "119960"
  },
  {
    "text": "black and white patterns that you see on conference posters advertisements Etc some image processing happening there as",
    "start": "119960",
    "end": "126560"
  },
  {
    "text": "well um for me personally what's make what makes this project so appealing is",
    "start": "126560",
    "end": "132680"
  },
  {
    "text": "uh that we're really pushing the limits of what the current pthan tools can provide us uh we rely on base packages",
    "start": "132680",
    "end": "140560"
  },
  {
    "text": "such as numpy but we actually require more than what those tools can currently provide so we love programming in Python",
    "start": "140560",
    "end": "147680"
  },
  {
    "text": "we love what the current tools can do um but we need more than what they can",
    "start": "147680",
    "end": "153920"
  },
  {
    "text": "currently provide so we get quite excited by uh all the new developments that are happening in that domain as",
    "start": "153920",
    "end": "159840"
  },
  {
    "text": "well um so like I said we've got fairly High requirements of these tools uh the",
    "start": "159840",
    "end": "167440"
  },
  {
    "text": "for example speed is an essential requirement for us people might want to do realtime processing of image streams",
    "start": "167440",
    "end": "174959"
  },
  {
    "text": "um or work on extremely large images um but without compromising on",
    "start": "174959",
    "end": "181959"
  },
  {
    "text": "the aspect of speed we also uh want it to make to make it easy for people to",
    "start": "181959",
    "end": "187840"
  },
  {
    "text": "process images to to uh easily express the operation they want to perform uh in",
    "start": "187840",
    "end": "193080"
  },
  {
    "text": "a high level language but still have it execute um extremely rapidly so for example when Travis proposed yesterday",
    "start": "193080",
    "end": "200599"
  },
  {
    "text": "um a solution where you can inject functions into numai uh using something like lvm that kind of thing gets us very",
    "start": "200599",
    "end": "206760"
  },
  {
    "text": "excited because we'll be able to program in Python but um still get the high performance",
    "start": "206760",
    "end": "212480"
  },
  {
    "text": "benefit uh down the bottom um we often need to leverage uh different pieces of",
    "start": "212480",
    "end": "220159"
  },
  {
    "text": "Hardware available like multiple CPUs gpus you know we've got backends to to utilize opencl Etc um so U those making",
    "start": "220159",
    "end": "230879"
  },
  {
    "text": "use of all those platforms or all those you know Hardware capabilities also pose some extra uh challenges um and then all",
    "start": "230879",
    "end": "238959"
  },
  {
    "text": "of these things need to be exposed to the user in a way that doesn't make it difficult difficult to use um we've",
    "start": "238959",
    "end": "246760"
  },
  {
    "text": "learned a lot along the way in developing Psy's image uh we've learned how to build robust pipelines uh make it",
    "start": "246760",
    "end": "254760"
  },
  {
    "text": "easy for users to string together a whole bunch of image processing functions uh and and just have that work",
    "start": "254760",
    "end": "261919"
  },
  {
    "text": "without doing any magic um in those pipelines we need to very efficiently",
    "start": "261919",
    "end": "267240"
  },
  {
    "text": "transform data so interest interesting things happening there and then deal with all the different ways that people",
    "start": "267240",
    "end": "273600"
  },
  {
    "text": "represent their data there are some subtleties when you represent images like where is the center of a pixel you",
    "start": "273600",
    "end": "279000"
  },
  {
    "text": "know a pixel is a little block you can think of it as a little block of color",
    "start": "279000",
    "end": "284080"
  },
  {
    "text": "or you can think of it as a data point uh so is the origin of that data point in the corner in the center you know um",
    "start": "284080",
    "end": "291479"
  },
  {
    "text": "what kind of data types do you use to represent your images we'll talk a little bit about that later on as well",
    "start": "291479",
    "end": "297560"
  },
  {
    "text": "and then finally it's been an interesting experiment in building a small community we're we're fairly small we're like four or five active",
    "start": "297560",
    "end": "303880"
  },
  {
    "text": "developers and um so but we're not part of the big psych scipi project at the moment you",
    "start": "303880",
    "end": "310759"
  },
  {
    "text": "know we're doing our own thing we've got our own website and so on so it's been interesting to see how that all came together um so uh if you look on the",
    "start": "310759",
    "end": "319000"
  },
  {
    "start": "318000",
    "end": "413000"
  },
  {
    "text": "screen here I've got a layout of roughly how all these components fit together so most of uh most of our package is",
    "start": "319000",
    "end": "325639"
  },
  {
    "text": "actually built on on top of syon so we we leverage syon to get speed um and uh",
    "start": "325639",
    "end": "331520"
  },
  {
    "text": "numai built on C primarily also using some scon for the random number generation for example um so like most",
    "start": "331520",
    "end": "340080"
  },
  {
    "text": "of you know on top of numpy we've got the higher level utilities such as scipi uh matplot lib that we use extensively",
    "start": "340080",
    "end": "348560"
  },
  {
    "text": "and yeah on top of that psyched image uh indd image comes from uh I think it",
    "start": "348560",
    "end": "354240"
  },
  {
    "text": "might be from namay uh it was developed in the astronomy community at least by Peter",
    "start": "354240",
    "end": "360160"
  },
  {
    "text": "it was integrated into scipi but indd image is written in pure C it's a little",
    "start": "360160",
    "end": "366479"
  },
  {
    "text": "bit hard to get people to develop on ND image because it's hard to wrap your mind around it so um with pych image we",
    "start": "366479",
    "end": "373479"
  },
  {
    "text": "try and make a much easier entry point into image processing um and aim to",
    "start": "373479",
    "end": "379280"
  },
  {
    "text": "vastly extend the capabilities of n the image so",
    "start": "379280",
    "end": "387479"
  },
  {
    "text": "just to give you an idea of what is available in scipi so in indd image",
    "start": "390319",
    "end": "396680"
  },
  {
    "text": "itself let me",
    "start": "397680",
    "end": "401319"
  },
  {
    "text": "uh well let's go to um you just go to the CI",
    "start": "405680",
    "end": "413160"
  },
  {
    "start": "413000",
    "end": "497000"
  },
  {
    "text": "docs right so you see in the indd image package we've got uh ND image filters so",
    "start": "413160",
    "end": "419000"
  },
  {
    "text": "just common filtering operations uh filters relying on the Foria transform there's some",
    "start": "419000",
    "end": "425840"
  },
  {
    "text": "interpolation uh that we need when we do geometric Transformations on an image so when you warp when you skew an image",
    "start": "425840",
    "end": "434160"
  },
  {
    "text": "um you apply spline filters for example and then some uh methods for doing",
    "start": "434160",
    "end": "439639"
  },
  {
    "text": "measurements on images like if you've got a whole bunch of uh image areas how do you measure the size of those areas",
    "start": "439639",
    "end": "445440"
  },
  {
    "text": "how many they are Etc and we'll see an example of that just now um um some morphological operations they operate on",
    "start": "445440",
    "end": "452280"
  },
  {
    "text": "the structures inside an image and um yeah that's about it so what I'd like to",
    "start": "452280",
    "end": "458960"
  },
  {
    "text": "do is to run through a typical example of how would an industry problem",
    "start": "458960",
    "end": "466159"
  },
  {
    "text": "look and how would we solve such a",
    "start": "466159",
    "end": "471039"
  },
  {
    "text": "problem all right so I'm going to import any image is ndi",
    "start": "477039",
    "end": "484280"
  },
  {
    "text": "um right so there's the problem definition that we have",
    "start": "485560",
    "end": "491879"
  },
  {
    "text": "um where's my image there we go so this is the image",
    "start": "491879",
    "end": "499520"
  },
  {
    "text": "we'll be working with uh it's a microscope image of",
    "start": "499520",
    "end": "505240"
  },
  {
    "text": "some uh heated up glass so there's a description um they",
    "start": "505240",
    "end": "512320"
  },
  {
    "text": "say that this specific glass sample the glass is the light gray background that you see there um there's some bubbles",
    "start": "512320",
    "end": "519560"
  },
  {
    "text": "black bubbles in there um and uh unmolten sand Grays those are the light",
    "start": "519560",
    "end": "526279"
  },
  {
    "text": "the uh slightly darker gray that you see in between and when you've got a slide",
    "start": "526279",
    "end": "532480"
  },
  {
    "text": "like that what you typically want to do is count how many different uh types of each phase there is so what area of this",
    "start": "532480",
    "end": "539720"
  },
  {
    "text": "image essentially is covered by the light gray glass background what fraction is covered by the black Bubbles",
    "start": "539720",
    "end": "545760"
  },
  {
    "text": "and by the uh the sand the dark gray uh how many bubbles of each kind um what's",
    "start": "545760",
    "end": "551519"
  },
  {
    "text": "the average size of the bubble how many bubbles are there uh that sort of thing so how would we approach such a",
    "start": "551519",
    "end": "558560"
  },
  {
    "text": "problem well the first thing we need to do is we need to get the image from the dis into the computer so can you all",
    "start": "558560",
    "end": "565200"
  },
  {
    "text": "read uh what it says here or should I make it a bit larger it's okay yeah",
    "start": "565200",
    "end": "570880"
  },
  {
    "text": "uh right so we um we start uh in this case I'm just",
    "start": "570880",
    "end": "577399"
  },
  {
    "start": "574000",
    "end": "662000"
  },
  {
    "text": "going to use ND image and mat blood lip to show you what those tools can do and then I'll show later on how psych image",
    "start": "577399",
    "end": "584720"
  },
  {
    "text": "Builds on top of that so we load matplot lib we're just going to use that to read the image we import numpy as well and we",
    "start": "584720",
    "end": "591440"
  },
  {
    "text": "use matplot lib's imre function to read in the image um and then we display the",
    "start": "591440",
    "end": "598480"
  },
  {
    "text": "image we spe specifically set the color map to gray because by default there's uh I think which is the default color",
    "start": "598480",
    "end": "604640"
  },
  {
    "text": "map John it's Jet right typically um so you see like a whole bunch of colors usually",
    "start": "604640",
    "end": "611399"
  },
  {
    "text": "if you try and display a gray image so we set it to gray by default and uh importantly set the interpolation to",
    "start": "611399",
    "end": "617560"
  },
  {
    "text": "nearest because otherwise if you zoom in on the image it will uh you know smooth it out as it interpolates those points",
    "start": "617560",
    "end": "624000"
  },
  {
    "text": "for you so we just set it to near so we see the exact pixels that we loaded in um",
    "start": "624000",
    "end": "629920"
  },
  {
    "text": "the first problem we have is that the microscope inserts a banner here so we just want to get rid of that Banner",
    "start": "629920",
    "end": "636959"
  },
  {
    "text": "that's fairly easy to do with numpy um the image we loaded is simply a numpy",
    "start": "636959",
    "end": "642760"
  },
  {
    "text": "array so we can apply all the standard numpy operations to it in this case um I just choose to take the first 880 rows",
    "start": "642760",
    "end": "651200"
  },
  {
    "text": "throw the rest away so that's the part of the image um without the banner so",
    "start": "651200",
    "end": "657800"
  },
  {
    "text": "there we go okay so just guarded that bottom bit um now you'll notice that",
    "start": "657800",
    "end": "663920"
  },
  {
    "start": "662000",
    "end": "704000"
  },
  {
    "text": "there you can't really see it on this uh on this screen too well but there are a whole bunch of Speckles inside these",
    "start": "663920",
    "end": "670800"
  },
  {
    "text": "black blobs that we don't want so how do we get rid of those uh well in this case",
    "start": "670800",
    "end": "676680"
  },
  {
    "text": "I ran a a median filter on it a median filter is basically just a a window operation so you slide a window across",
    "start": "676680",
    "end": "684160"
  },
  {
    "text": "the image and inside of each window you say um let's pick the middle value so",
    "start": "684160",
    "end": "689360"
  },
  {
    "text": "you sort all the values you just pick the middle value and that tends to get uh rid of speckle noise you know very",
    "start": "689360",
    "end": "696440"
  },
  {
    "text": "high and very low values so um so that's what we do",
    "start": "696440",
    "end": "703920"
  },
  {
    "text": "next right and there you can see the um the phases seem to be much cleaner we",
    "start": "703920",
    "end": "709200"
  },
  {
    "start": "704000",
    "end": "767000"
  },
  {
    "text": "don't have as many Speckles lying around now we the next step we need to",
    "start": "709200",
    "end": "715399"
  },
  {
    "text": "do is to separate out those three phases so we've got the light gray the glass back ground we've got the black blobs",
    "start": "715399",
    "end": "721480"
  },
  {
    "text": "and then sort of the dark gray sand grain so how could we separate those out what could we do any",
    "start": "721480",
    "end": "730200"
  },
  {
    "text": "suggestions yeah oh I forgot that you guys can see the solution right so um so what we want to",
    "start": "735519",
    "end": "743959"
  },
  {
    "text": "do is we want to basically set up three different masks we want um to threshold this image in two different places",
    "start": "743959",
    "end": "751040"
  },
  {
    "text": "basically take all the light all the darker pixels all the lighter pixels and then the gray pixel between but we don't",
    "start": "751040",
    "end": "757760"
  },
  {
    "text": "know where to take those thresholds so the way we investigate that is to um is",
    "start": "757760",
    "end": "762880"
  },
  {
    "text": "to plot a histogram of all the values inside the image and when we do that you can",
    "start": "762880",
    "end": "769160"
  },
  {
    "start": "767000",
    "end": "809000"
  },
  {
    "text": "clearly see that there are like three different modes",
    "start": "769160",
    "end": "774519"
  },
  {
    "text": "here so this would be the zero intensity uh pixel so those are the black blobs",
    "start": "774519",
    "end": "781839"
  },
  {
    "text": "these are the darker gray sand grains and the white here or the the light gray",
    "start": "781839",
    "end": "787720"
  },
  {
    "text": "is the glossy background so um where would be a good place to threshold I think I picked 50 so took those values",
    "start": "787720",
    "end": "796000"
  },
  {
    "text": "out then all the values between 50 and 120 and from 120 upward",
    "start": "796000",
    "end": "804959"
  },
  {
    "start": "809000",
    "end": "839000"
  },
  {
    "text": "right so that's exactly what I do here I say create three different masks for me uh this operation um it's a truth test",
    "start": "811079",
    "end": "818120"
  },
  {
    "text": "it says is the median filed image less than or equal to 50 so that will return",
    "start": "818120",
    "end": "823399"
  },
  {
    "text": "a Boolean type ND array for me uh true or false values it will be a mask for",
    "start": "823399",
    "end": "828600"
  },
  {
    "text": "the bubbles the sand and the glass and then I just have a little bit of code there that that plots all three",
    "start": "828600",
    "end": "835199"
  },
  {
    "text": "of those right so there we go we see the original",
    "start": "835199",
    "end": "842000"
  },
  {
    "start": "839000",
    "end": "884000"
  },
  {
    "text": "image we see the bubbles isolated we see the sand and we see the glass what would",
    "start": "842000",
    "end": "849480"
  },
  {
    "text": "be convenient is if we could take all these layers and combine them into a single visualization so how would we do",
    "start": "849480",
    "end": "855639"
  },
  {
    "text": "that well typically we represent images as an M byn array uh and that array is",
    "start": "855639",
    "end": "861880"
  },
  {
    "text": "then just contains intensities uh but you could also make an M byn by3 array",
    "start": "861880",
    "end": "867199"
  },
  {
    "text": "and those three layers would then be red green and blue so we construct a new uh",
    "start": "867199",
    "end": "872560"
  },
  {
    "text": "empty image of the same shape as the original except we add that extra dimension of",
    "start": "872560",
    "end": "878680"
  },
  {
    "text": "RGB and uh then we proceed to fill those layers with uh different values",
    "start": "878680",
    "end": "885800"
  },
  {
    "text": "according to the masks so uh wherever there are bubbles we",
    "start": "885800",
    "end": "890959"
  },
  {
    "text": "write the value red no green no blue uh for sand we we add red and green but no",
    "start": "890959",
    "end": "897440"
  },
  {
    "text": "blue and for glass no red no green and full",
    "start": "897440",
    "end": "902600"
  },
  {
    "text": "blue there we go all right so that gives you a very nice convenient single representation of",
    "start": "910040",
    "end": "918079"
  },
  {
    "start": "912000",
    "end": "1000000"
  },
  {
    "text": "your different phases much easier to recognize than on the original image and it also shows you what you labeled um",
    "start": "918079",
    "end": "925720"
  },
  {
    "text": "now if you if you notice here on the edges you still have some uh yellow",
    "start": "925720",
    "end": "932199"
  },
  {
    "text": "coming out on the red so there's still some mixing up on the phases here on the",
    "start": "932199",
    "end": "937680"
  },
  {
    "text": "edges and we'd like to get rid of those so uh what we're going to do is apply a",
    "start": "937680",
    "end": "943000"
  },
  {
    "text": "morphological operation morphological operations change the structures inside an image so we're going to try and get",
    "start": "943000",
    "end": "951079"
  },
  {
    "text": "rid of these little Speckles we do that again by moving a window over the image",
    "start": "951079",
    "end": "956120"
  },
  {
    "text": "and saying if uh if there are structures that aren't entirely contained in this window uh throw them out um what that",
    "start": "956120",
    "end": "963839"
  },
  {
    "text": "typically does is it sends to uh grow structures inside the image so we",
    "start": "963839",
    "end": "969279"
  },
  {
    "text": "actually change the the size of these bubbles so then we basically do the inverse we say move that structure over",
    "start": "969279",
    "end": "975240"
  },
  {
    "text": "the image again but everything um you know uh yeah everything that that is not",
    "start": "975240",
    "end": "980560"
  },
  {
    "text": "contained U uh select that so then we we shrink the structures again and um",
    "start": "980560",
    "end": "986720"
  },
  {
    "text": "hopefully get rid of of these uh extremities without changing the size of",
    "start": "986720",
    "end": "992399"
  },
  {
    "text": "the bubbles too much so we apply what they call a binary opening and a binary",
    "start": "992399",
    "end": "998959"
  },
  {
    "text": "closing and um yeah there's our final phases that we",
    "start": "998959",
    "end": "1006160"
  },
  {
    "start": "1000000",
    "end": "1106000"
  },
  {
    "text": "um that are we going to work with um all right so what's the next",
    "start": "1006160",
    "end": "1011839"
  },
  {
    "text": "step now we want to figure out we we know we we've got bubbles we've got sand and we've got glass but how do we count",
    "start": "1011839",
    "end": "1017480"
  },
  {
    "text": "how many bubbles there are how do we uh count how many sand grains there are what what what's the average area of",
    "start": "1017480",
    "end": "1024160"
  },
  {
    "text": "those things Etc so the first thing we do is we we label our components so we",
    "start": "1024160",
    "end": "1030918"
  },
  {
    "text": "go through this image and we say uh identify all the isolated blocks of or",
    "start": "1030919",
    "end": "1037199"
  },
  {
    "text": "connected blocks of pixels um and give them different values so we'll start and we'll say ah here we've got a blob of",
    "start": "1037199",
    "end": "1043798"
  },
  {
    "text": "pixels we'll label that uh one the background is typically labeled zero so this will be one uh scan scan scan scan",
    "start": "1043799",
    "end": "1051720"
  },
  {
    "text": "ah there's another one that's two uh 3 4 5 6 7 8 9 so we'll just consecutively",
    "start": "1051720",
    "end": "1058280"
  },
  {
    "text": "label the different connected components in the image",
    "start": "1058280",
    "end": "1065039"
  },
  {
    "text": "um right so that's what this call here does indd image. label it steps through",
    "start": "1065960",
    "end": "1071960"
  },
  {
    "text": "the image labels all of them and then we have this single line of list comprehension to uh calculate the",
    "start": "1071960",
    "end": "1077960"
  },
  {
    "text": "statistics we want so it says uh for each label I in the range from one to",
    "start": "1077960",
    "end": "1085120"
  },
  {
    "text": "the maximum label uh find all pixels with those labels so where the labels are equal to I and um just count just",
    "start": "1085120",
    "end": "1094080"
  },
  {
    "text": "count how many of those there are so that gives us our number of object",
    "start": "1094080",
    "end": "1100519"
  },
  {
    "start": "1106000",
    "end": "1199000"
  },
  {
    "text": "areas all right so there we go these are the labeled images they plotted with the",
    "start": "1106320",
    "end": "1111400"
  },
  {
    "text": "very useful spectral color map which changes fairly rapidly um over over the",
    "start": "1111400",
    "end": "1116559"
  },
  {
    "text": "integer so you can see uh all the different colored bubbles coming out here the glass is mainly a",
    "start": "1116559",
    "end": "1124120"
  },
  {
    "text": "single uh blob it's the background and then some some others coming out but",
    "start": "1124120",
    "end": "1129360"
  },
  {
    "text": "mainly the big background one lots of sand grains and um yeah they are the",
    "start": "1129360",
    "end": "1135240"
  },
  {
    "text": "statistics so 150 regions found in the sand 1 in the bubbles that makes sense",
    "start": "1135240",
    "end": "1141679"
  },
  {
    "text": "so we've got more sand than bubbles um and many fewer in the in the glass phase and uh",
    "start": "1141679",
    "end": "1150559"
  },
  {
    "text": "as we expect the glass phase has got an average a fairly High average size because it covers almost the whole uh",
    "start": "1150559",
    "end": "1157120"
  },
  {
    "text": "image and the sand grains are typically very small but there are plenty of",
    "start": "1157120",
    "end": "1164080"
  },
  {
    "text": "them right so you know that's a that's a typical image processing pipeline that you that you might form um yeah so I",
    "start": "1166480",
    "end": "1174960"
  },
  {
    "text": "hope that provided some insight uh now pych image Builds on top of the",
    "start": "1174960",
    "end": "1181919"
  },
  {
    "text": "scipi and ND image tools uh I'll show you the the homepage for the project",
    "start": "1181919",
    "end": "1187039"
  },
  {
    "text": "Let's uh let's go there",
    "start": "1187039",
    "end": "1191840"
  },
  {
    "text": "so there we go this is a pretty standard template you you'll see the IPython web page looks very similar we kind of",
    "start": "1200440",
    "end": "1205640"
  },
  {
    "text": "borrowed from them um and so you can download the project here we've got you",
    "start": "1205640",
    "end": "1211440"
  },
  {
    "text": "know our user guide a gallery of examples where to get the source code and uh some just a a trival example on",
    "start": "1211440",
    "end": "1217960"
  },
  {
    "text": "the front page so you can get started quickly um I encourage you to go look at the",
    "start": "1217960",
    "end": "1225280"
  },
  {
    "text": "gallery it's probably one of the most fun places to browse around and just see the kinds of things that people have",
    "start": "1225280",
    "end": "1231480"
  },
  {
    "text": "done this isn't an exhaustive list of what's available in pych image but it does give you a quick preview so um for",
    "start": "1231480",
    "end": "1239000"
  },
  {
    "text": "example we've got a marching squares algorithm so if you've got a a height map of some sort and you want to follow",
    "start": "1239000",
    "end": "1245120"
  },
  {
    "text": "Contours along that map you can use the Contour finding um you know we've got numerous Edge",
    "start": "1245120",
    "end": "1255080"
  },
  {
    "text": "detectors and uh here's an example of some histogram",
    "start": "1255080",
    "end": "1262159"
  },
  {
    "start": "1262000",
    "end": "1289000"
  },
  {
    "text": "Equalization so if you've got a an image such as this one with very low input",
    "start": "1262159",
    "end": "1267480"
  },
  {
    "text": "contrast uh you can choose different ways of scaling it you can either try and linearize the cumulative uh",
    "start": "1267480",
    "end": "1273799"
  },
  {
    "text": "histogram or you can uh just sort of stretch the contrast a little bit to",
    "start": "1273799",
    "end": "1279440"
  },
  {
    "text": "provide an image like that we've got some uh this is a cute",
    "start": "1279440",
    "end": "1287159"
  },
  {
    "text": "example where we took a natural image just split that image up into little windows and then",
    "start": "1287159",
    "end": "1295480"
  },
  {
    "start": "1289000",
    "end": "1324000"
  },
  {
    "text": "did the um K means on on those images",
    "start": "1295480",
    "end": "1300520"
  },
  {
    "text": "those sub images as features and you see when you do that on the original image you basically get something that looks",
    "start": "1300520",
    "end": "1305799"
  },
  {
    "text": "like Freer components but when you do that on um The Edge edges in that image",
    "start": "1305799",
    "end": "1312600"
  },
  {
    "text": "or the difference of garans you get these Gabor like feates uh you know",
    "start": "1312600",
    "end": "1319120"
  },
  {
    "text": "Cod B coming out uh we've got the Huff transform for",
    "start": "1319120",
    "end": "1326360"
  },
  {
    "text": "doing straight line detection in images we've got uh radon transform",
    "start": "1326360",
    "end": "1332240"
  },
  {
    "text": "reconstruction so that's when you when you do a CT scan of the brain you scan",
    "start": "1332240",
    "end": "1337720"
  },
  {
    "text": "the brain from all the different directions and it sums it in all the different directions that gives you something called a cogram and based on",
    "start": "1337720",
    "end": "1344520"
  },
  {
    "text": "the sinogram well this is what your scanner gives you and if you want to invert that you do some filtering you do",
    "start": "1344520",
    "end": "1349919"
  },
  {
    "text": "the inverse radon transform and you can do a reconstruction of your",
    "start": "1349919",
    "end": "1355399"
  },
  {
    "text": "image uh then some uh segmentation feature",
    "start": "1356799",
    "end": "1362039"
  },
  {
    "text": "detection um D noising yeah so that gives you a rough",
    "start": "1362039",
    "end": "1367120"
  },
  {
    "text": "idea of the kinds of things we do",
    "start": "1367120",
    "end": "1371240"
  },
  {
    "start": "1381000",
    "end": "1448000"
  },
  {
    "text": "so here's a typical example U from the pych image module I imported a data",
    "start": "1382640",
    "end": "1388919"
  },
  {
    "text": "filter and IO so data is where we typically get our sample images from so",
    "start": "1388919",
    "end": "1393960"
  },
  {
    "text": "in this case I used the coins sample image then I apply applied the soble filter to that image and I display that",
    "start": "1393960",
    "end": "1402520"
  },
  {
    "text": "image",
    "start": "1402520",
    "end": "1405520"
  },
  {
    "text": "there we go so i.m show typically makes use of",
    "start": "1411000",
    "end": "1416880"
  },
  {
    "text": "matplot lib by default but we've got a whole variety of different uh output modules that we can use output",
    "start": "1416880",
    "end": "1423520"
  },
  {
    "text": "plugins so you can display using qt or matplot lib or whatever is available in your system we put we just basically",
    "start": "1423520",
    "end": "1431120"
  },
  {
    "text": "want to make it easy for users to uh display images irrespective of what they've got installed but you could just",
    "start": "1431120",
    "end": "1437880"
  },
  {
    "text": "it's an array so you can just display it using normal mat blot lib that would work",
    "start": "1437880",
    "end": "1444400"
  },
  {
    "start": "1448000",
    "end": "1475000"
  },
  {
    "text": "fine um in the same way as we have uh output plugins we've also got several",
    "start": "1448200",
    "end": "1453720"
  },
  {
    "text": "input plugins so you could use the python Imaging library to perform image reads by specifying io. use plugin uh",
    "start": "1453720",
    "end": "1462720"
  },
  {
    "text": "full IM read and then when you read the image it is read with the with the",
    "start": "1462720",
    "end": "1468520"
  },
  {
    "text": "python Imaging library and not with mat blot",
    "start": "1468520",
    "end": "1472399"
  },
  {
    "text": "lib so some uh some uh libraries allow us to do",
    "start": "1474600",
    "end": "1481440"
  },
  {
    "start": "1475000",
    "end": "1505000"
  },
  {
    "text": "interesting things we in our QT back end we've got a fancy imow so if you decide",
    "start": "1481440",
    "end": "1486679"
  },
  {
    "text": "to use plug-in QT for image display and you specify the fancy parameter equals",
    "start": "1486679",
    "end": "1492679"
  },
  {
    "text": "true you'll see something interesting happening We've Got U we pop up a little",
    "start": "1492679",
    "end": "1498520"
  },
  {
    "text": "display like that so",
    "start": "1498520",
    "end": "1502880"
  },
  {
    "text": "your your image is displayed with histograms on the side these",
    "start": "1504360",
    "end": "1509919"
  },
  {
    "start": "1505000",
    "end": "1562000"
  },
  {
    "text": "histograms are updated if you adjust the colors in the image you can see look at",
    "start": "1509919",
    "end": "1515520"
  },
  {
    "text": "the red histogram as I just the red component you'll see that goes higher up this all happens",
    "start": "1515520",
    "end": "1523840"
  },
  {
    "text": "multi in in several processes it splits up the process to more rapidly process",
    "start": "1523840",
    "end": "1529960"
  },
  {
    "text": "the image and um if you notice here at the bottom you can follow the the position of the pixel",
    "start": "1529960",
    "end": "1537720"
  },
  {
    "text": "the value the position at the at the cursor the value RGB values of the",
    "start": "1537720",
    "end": "1543559"
  },
  {
    "text": "cursor use saturation value um right so",
    "start": "1543559",
    "end": "1548760"
  },
  {
    "text": "let's adjust the image somewhat let's go to gamma and well it's first adjust I'll",
    "start": "1548760",
    "end": "1556640"
  },
  {
    "text": "add some some green to the image just slide that up a bit then um",
    "start": "1556640",
    "end": "1564919"
  },
  {
    "start": "1562000",
    "end": "1608000"
  },
  {
    "text": "this is a little bit like revision control you can choose to commit your changes or you can choose to revert them",
    "start": "1564919",
    "end": "1571000"
  },
  {
    "text": "so you make cumulative changes to your image you can move up and down that",
    "start": "1571000",
    "end": "1576159"
  },
  {
    "text": "stack uh so there that's committed uh now we can go to the gamma",
    "start": "1576159",
    "end": "1582120"
  },
  {
    "text": "adjustment and just push up that gamma value way up or way down that looks kind",
    "start": "1582120",
    "end": "1588080"
  },
  {
    "text": "of cool let's do that and um then here's",
    "start": "1588080",
    "end": "1593320"
  },
  {
    "text": "a button called save to stack so we've got let me commit that and make this",
    "start": "1593320",
    "end": "1600080"
  },
  {
    "text": "thing a little",
    "start": "1600080",
    "end": "1602679"
  },
  {
    "text": "brighter okay so click save to stack so",
    "start": "1605600",
    "end": "1611279"
  },
  {
    "start": "1608000",
    "end": "1626000"
  },
  {
    "text": "we keep an image stack around if you push images onto that stack you can now go back to your notebook and grab the",
    "start": "1611279",
    "end": "1617000"
  },
  {
    "text": "image off the stack and manipulate ated further so I'm going to close this viewer and I'm going to",
    "start": "1617000",
    "end": "1624039"
  },
  {
    "start": "1626000",
    "end": "1646000"
  },
  {
    "text": "go back here and I'm going to say i.",
    "start": "1626039",
    "end": "1631360"
  },
  {
    "text": "imow I.P so I.P goes onto the stack where I just push that image grabs it",
    "start": "1631360",
    "end": "1637159"
  },
  {
    "text": "out of there and then we can display it",
    "start": "1637159",
    "end": "1642720"
  },
  {
    "start": "1646000",
    "end": "1682000"
  },
  {
    "text": "so often you want to read files coming from different domains like",
    "start": "1646039",
    "end": "1651480"
  },
  {
    "text": "in in astronomy they use the fit image file format you might use dcom images if",
    "start": "1651480",
    "end": "1657440"
  },
  {
    "text": "you're working in the medical domain um and we've got different plugins for these so in this case I'm going to say",
    "start": "1657440",
    "end": "1663519"
  },
  {
    "text": "use the plugin fits and then try and read this star",
    "start": "1663519",
    "end": "1669919"
  },
  {
    "text": "image and yeah there we go there's the image",
    "start": "1672720",
    "end": "1679240"
  },
  {
    "start": "1682000",
    "end": "1700000"
  },
  {
    "text": "now one of the biggest problems we've had with oops do that one of",
    "start": "1683120",
    "end": "1693080"
  },
  {
    "text": "the did I just kill my notebook oh dear um",
    "start": "1693080",
    "end": "1699919"
  },
  {
    "text": "so so people uh use images with different value ranges and this this",
    "start": "1699919",
    "end": "1706480"
  },
  {
    "start": "1700000",
    "end": "1756000"
  },
  {
    "text": "becomes quite problematic for example exle uh typically you'd store your image as a as a floating Point array and all",
    "start": "1706480",
    "end": "1714080"
  },
  {
    "text": "the values would be between zero and one but other people store the images as uh",
    "start": "1714080",
    "end": "1720360"
  },
  {
    "text": "unsigned uh integers ranging from0 to 255 or bigger",
    "start": "1720360",
    "end": "1726600"
  },
  {
    "text": "integers running from 0 to 65535 uh some people store the images running from minus 128 to 127 so how do",
    "start": "1726600",
    "end": "1734559"
  },
  {
    "text": "you deal with all these images in a way that's not too confusing to the user so",
    "start": "1734559",
    "end": "1740760"
  },
  {
    "text": "uh we we basically support all of these but we assign very specific expectations",
    "start": "1740760",
    "end": "1747440"
  },
  {
    "text": "we say like if your image is in floating Point format the values must be between zero and one otherwise we don't know",
    "start": "1747440",
    "end": "1754159"
  },
  {
    "text": "what you mean so we've got several conversion functions so you can call images float images unsigned bite images",
    "start": "1754159",
    "end": "1761720"
  },
  {
    "start": "1756000",
    "end": "1770000"
  },
  {
    "text": "unsigned integer or images int and it will convert your image to that new representation taking into account the",
    "start": "1761720",
    "end": "1768640"
  },
  {
    "text": "the ranges of the image and these functions are typically called at the beginning of any filtering",
    "start": "1768640",
    "end": "1775760"
  },
  {
    "text": "operation so uh the image the the filtering operation takes in any image any data type converts it to what it",
    "start": "1775760",
    "end": "1783320"
  },
  {
    "text": "needs and then uh splits out whatever is most convenient but because all the",
    "start": "1783320",
    "end": "1788399"
  },
  {
    "text": "functions take in uh any kind of image you can string these together and it should always just work out of the box",
    "start": "1788399",
    "end": "1797840"
  },
  {
    "text": "so I guess my Kernel's still running so",
    "start": "1798840",
    "end": "1805640"
  },
  {
    "text": "let's yeah so it's all fine so um here's that NGC image that I just",
    "start": "1805640",
    "end": "1813159"
  },
  {
    "start": "1810000",
    "end": "1846000"
  },
  {
    "text": "loaded in the star image and if I print the minimum and maximum you'll see that it ranges from 100 to",
    "start": "1813159",
    "end": "1819720"
  },
  {
    "text": "65535 so that was actually an integer image but the Fitz plugin uh well the",
    "start": "1819720",
    "end": "1824799"
  },
  {
    "text": "fits pfitz library in Python returns a floating point uh so we don't we wouldn't we wouldn't",
    "start": "1824799",
    "end": "1830320"
  },
  {
    "text": "be able to handle an image like that because the values are outside the range 01 so if you try and filter an image",
    "start": "1830320",
    "end": "1836039"
  },
  {
    "text": "like that you should see an error and uh that's what happens it tells you well",
    "start": "1836039",
    "end": "1841159"
  },
  {
    "text": "your image uh should have been values between Z and one but to handle that we've got a",
    "start": "1841159",
    "end": "1848399"
  },
  {
    "start": "1846000",
    "end": "1881000"
  },
  {
    "text": "function called rescale intensity so if you know what the ranges of your intensity are you can uh you can call",
    "start": "1848399",
    "end": "1855840"
  },
  {
    "text": "this function and in this case didn't provide any parameters to tell it what the ranges are so it just picks 100 the",
    "start": "1855840",
    "end": "1862360"
  },
  {
    "text": "minimum value in the image sets that to zero picks 65535 which was the maximum value sets that to one and uh returns",
    "start": "1862360",
    "end": "1870240"
  },
  {
    "text": "that for you so if you try and filter the return image should be no",
    "start": "1870240",
    "end": "1875880"
  },
  {
    "text": "problem and uh yeah that's what we see it over there it's no",
    "start": "1875880",
    "end": "1881519"
  },
  {
    "start": "1881000",
    "end": "1919000"
  },
  {
    "text": "problem you can also tell U the rescale intens intensity function what you",
    "start": "1881519",
    "end": "1887600"
  },
  {
    "text": "expect the range of your values to be so we've now changed this image to have values between 0 and one but we can tell",
    "start": "1887600",
    "end": "1893919"
  },
  {
    "text": "it well let's say the maximum was 0.25 instead of one so what would that do that would discard all values above 0.25",
    "start": "1893919",
    "end": "1901559"
  },
  {
    "text": "and stretch 0.25 to be the maximum value and when you do that you see that this is a much brighter version of our",
    "start": "1901559",
    "end": "1907840"
  },
  {
    "text": "original image",
    "start": "1907840",
    "end": "1911278"
  },
  {
    "start": "1919000",
    "end": "1944000"
  },
  {
    "text": "so here's an illustration of the conversion function I took that image and I applied I I first converted it to",
    "start": "1919360",
    "end": "1925679"
  },
  {
    "text": "float using images float and printed out its maximum value you can see it runs from zero to one then I converted it to",
    "start": "1925679",
    "end": "1932440"
  },
  {
    "text": "integer you can see it runs to the maximum integer value or if you convert",
    "start": "1932440",
    "end": "1937720"
  },
  {
    "text": "it to an unsigned bite it runs to 0 to",
    "start": "1937720",
    "end": "1942278"
  },
  {
    "text": "255 now often when you want to test your algorithms you need access to some test data so we provide several test images",
    "start": "1943840",
    "end": "1951760"
  },
  {
    "start": "1944000",
    "end": "2035000"
  },
  {
    "text": "uh in the data subpackage so if you import the data and you use",
    "start": "1951760",
    "end": "1958080"
  },
  {
    "text": "um data. camera for example you get this guy out um data. coins is this uh image and",
    "start": "1958080",
    "end": "1969080"
  },
  {
    "text": "if you call data coins question mark and IPython it just loads the doc string for",
    "start": "1969080",
    "end": "1974559"
  },
  {
    "text": "you and you can see that we've got uh says those are Greek coins from Pompei",
    "start": "1974559",
    "end": "1981440"
  },
  {
    "text": "it tells you a little bit bit about the history of the image what it's typically used for uh and what the copyright",
    "start": "1981440",
    "end": "1987760"
  },
  {
    "text": "situation is you know where it was obtained from so if you want to use it in your paper we try and use images that",
    "start": "1987760",
    "end": "1994080"
  },
  {
    "text": "are freely available so you don't have to worry about",
    "start": "1994080",
    "end": "1998279"
  },
  {
    "text": "that so like I said uh it's important to image posting users to be able to construct a pipeline without any hassle",
    "start": "1999120",
    "end": "2006159"
  },
  {
    "text": "and with a with a you know if you work with ND image for example you constantly have these problems where you convert an",
    "start": "2006159",
    "end": "2011360"
  },
  {
    "text": "image but the range is outside of what was expected so uh if you for example take an image you multiply it by two and",
    "start": "2011360",
    "end": "2018600"
  },
  {
    "text": "you display it in mat plot lib you typically won't see any difference because there's just some automated scaling that takes place so um that's",
    "start": "2018600",
    "end": "2027120"
  },
  {
    "text": "why we have these functions that make sure that if you multiply your image by two you actually see see the you know",
    "start": "2027120",
    "end": "2032960"
  },
  {
    "text": "twice the intensity um so let's look at this example of constructing a a",
    "start": "2032960",
    "end": "2039799"
  },
  {
    "start": "2035000",
    "end": "2092000"
  },
  {
    "text": "pipeline I take the camera image that I just showed you I don't know what format",
    "start": "2039799",
    "end": "2045760"
  },
  {
    "text": "that is in it doesn't matter uh the canny filter knows how to handle that so",
    "start": "2045760",
    "end": "2051679"
  },
  {
    "text": "that's what plotted over here just a plain Edge detection but if I first want to apply uh total variation D noising on",
    "start": "2051679",
    "end": "2059040"
  },
  {
    "text": "my image and then do the canny filter I can just string them together like this I don't have to worry about the ranges",
    "start": "2059040",
    "end": "2065520"
  },
  {
    "text": "the data types nothing that's all taken care of I just string them together that's my Pipeline and when I display",
    "start": "2065520",
    "end": "2071560"
  },
  {
    "text": "the result uh there it is so you can see the um if I just applied The",
    "start": "2071560",
    "end": "2076800"
  },
  {
    "text": "canny Edge detector detected a whole bunch of spirous edges if I first",
    "start": "2076800",
    "end": "2082000"
  },
  {
    "text": "denoise the image and then apply it much much cleaner",
    "start": "2082000",
    "end": "2087440"
  },
  {
    "start": "2092000",
    "end": "2110000"
  },
  {
    "text": "edges one of the algorithms we Implement is called shortest paths and I want to show you this",
    "start": "2092359",
    "end": "2098839"
  },
  {
    "text": "uh video on how shortest paths are typically used in",
    "start": "2098839",
    "end": "2106480"
  },
  {
    "text": "um let me try and make this we I'll just sort of narrate as he goes",
    "start": "2106480",
    "end": "2113320"
  },
  {
    "start": "2110000",
    "end": "2440000"
  },
  {
    "text": "along he's doing a context sensitive resizing here so he's explaining that on a typical Wikipedia page if you shrink",
    "start": "2113320",
    "end": "2120200"
  },
  {
    "text": "the page in width uh you'll see that the image remains constant in size even though the text reflows to fit nicely so",
    "start": "2120200",
    "end": "2127960"
  },
  {
    "text": "this is less than than ideal U here's an example of a bear in a cub",
    "start": "2127960",
    "end": "2135440"
  },
  {
    "text": "if you try and uh shrink that photo you typically end up with a difficult situation you either have uh you know",
    "start": "2135440",
    "end": "2142800"
  },
  {
    "text": "you crop the image so you you cut out a piece so the barri is here but the Cubs are over here you can't see them uh or",
    "start": "2142800",
    "end": "2149119"
  },
  {
    "text": "you scale the image but then everything is kind of squished up or you cheat a",
    "start": "2149119",
    "end": "2154960"
  },
  {
    "text": "little bit and you retarget",
    "start": "2154960",
    "end": "2159119"
  },
  {
    "text": "so here they uh they took the image they're trying to change the aspect ratios um",
    "start": "2161319",
    "end": "2168799"
  },
  {
    "text": "and so this is the retargeted image this is what happens when you just squish the",
    "start": "2170160",
    "end": "2175839"
  },
  {
    "text": "oh there's the image squished and this is the image cro so you can see that um over here you've got all the content you",
    "start": "2175839",
    "end": "2182079"
  },
  {
    "text": "want but without changing the aspect ratio or losing too much of of the image",
    "start": "2182079",
    "end": "2189560"
  },
  {
    "text": "so you can see that all the features remain inside the image even though we're rescaling it even if you stretch",
    "start": "2201560",
    "end": "2206880"
  },
  {
    "text": "it out",
    "start": "2206880",
    "end": "2210119"
  },
  {
    "text": "so he wants to shrink the width of this uh image of the blocks how is he going to do that",
    "start": "2219520",
    "end": "2227200"
  },
  {
    "text": "um so what they show is that they do Edge detection on the image first and that helps them to decide which paths in",
    "start": "2227200",
    "end": "2234880"
  },
  {
    "text": "this image can we can we carve away they call this technique seam carving so the idea is that your eye is much more",
    "start": "2234880",
    "end": "2241160"
  },
  {
    "text": "sensitive to edges than to smooth areas so if I um if I took out a path in this",
    "start": "2241160",
    "end": "2247640"
  },
  {
    "text": "image that ran here you know avoiding all the edges then my eye probably wouldn't notice what's going on so I",
    "start": "2247640",
    "end": "2254240"
  },
  {
    "text": "think it's first going to illustrate now what happens when we just take take away columns in the",
    "start": "2254240",
    "end": "2259920"
  },
  {
    "text": "image right so it's now just removing columns depending on the columns that cross the fewest uh gradient or or it's",
    "start": "2269200",
    "end": "2277200"
  },
  {
    "text": "yeah",
    "start": "2277200",
    "end": "2279440"
  },
  {
    "text": "crosses so there's the edges again and then they detect the path that runs",
    "start": "2293400",
    "end": "2298720"
  },
  {
    "text": "along the fewest edges and they keep removing those one by one",
    "start": "2298720",
    "end": "2305440"
  },
  {
    "text": "so blue to Red is just the order of the seam removal so you can see which ones are removed first and last and here it",
    "start": "2324599",
    "end": "2331359"
  },
  {
    "text": "insert pixels to to grow the image",
    "start": "2331359",
    "end": "2336599"
  },
  {
    "text": "it's a good",
    "start": "2338880",
    "end": "2341440"
  },
  {
    "text": "example they try different things using edges or saleny or whatever um but in",
    "start": "2364240",
    "end": "2370079"
  },
  {
    "text": "the end gradient magnitude seems to be fine for what they're trying to achieve sometimes U features get removed",
    "start": "2370079",
    "end": "2377920"
  },
  {
    "text": "from the images that you don't want removed like in this case look at the baby's head that wasn't too good um so",
    "start": "2377920",
    "end": "2383800"
  },
  {
    "text": "you mark the areas that you that you don't want to remove and they basically get increased penalty values so they",
    "start": "2383800",
    "end": "2391079"
  },
  {
    "text": "don't get selected for removal",
    "start": "2391079",
    "end": "2395079"
  },
  {
    "text": "this is this is a great example like if you don't want that guy in your picture you can actually uh select him and say",
    "start": "2398040",
    "end": "2405280"
  },
  {
    "text": "like we'd prefer the least the cost part to go through there so",
    "start": "2405280",
    "end": "2413119"
  },
  {
    "text": "G we go",
    "start": "2423240",
    "end": "2427520"
  },
  {
    "text": "right so that's a that's a technique called seam carving and uh we actually have an implementation of this using the",
    "start": "2441040",
    "end": "2446400"
  },
  {
    "text": "shortest path algorithm in in psych's image often we want to geometrically",
    "start": "2446400",
    "end": "2451680"
  },
  {
    "text": "transform images as well so you might want to take an image and downsample it so in this casee I started off with a",
    "start": "2451680",
    "end": "2458440"
  },
  {
    "text": "cameraman image and I called ND image. Zoom with a zoom factor of 0.1 so scale",
    "start": "2458440",
    "end": "2463880"
  },
  {
    "text": "down the image by 10 and when you do that you get this as output you can see this is much more blocky than uh than",
    "start": "2463880",
    "end": "2471400"
  },
  {
    "text": "the original",
    "start": "2471400",
    "end": "2474838"
  },
  {
    "text": "um sometimes we want to be a little bit fancier than that so in py image we have",
    "start": "2476960",
    "end": "2483319"
  },
  {
    "start": "2477000",
    "end": "2540000"
  },
  {
    "text": "the transform module that does all sorts of different transforms uh the we can specify this transformation matrix here",
    "start": "2483319",
    "end": "2492280"
  },
  {
    "text": "so it's a 3X3 transformation matrix this Matrix is applied to each coordinate in",
    "start": "2492280",
    "end": "2497760"
  },
  {
    "text": "the image and whatever comes out that's where the coordinate is moved to so",
    "start": "2497760",
    "end": "2503400"
  },
  {
    "text": "those of you with a background in linear algebra will recognize the first 2x two",
    "start": "2503400",
    "end": "2509160"
  },
  {
    "text": "subblock of this Matrix as a rotation Matrix we've got cosine minus Sin Sin",
    "start": "2509160",
    "end": "2514640"
  },
  {
    "text": "cosine um the s's in there are just just for scaling X and Y uh we've got",
    "start": "2514640",
    "end": "2519880"
  },
  {
    "text": "translation parameters here TX and Ty that's for Shifting the image around and then some SK factors s0 and S1 so if we",
    "start": "2519880",
    "end": "2528079"
  },
  {
    "text": "just want to do zooming like in the previous example we simply said s equal",
    "start": "2528079",
    "end": "2533160"
  },
  {
    "text": "to 0.1 and then we we shrink the image down by by 10 times so let's do",
    "start": "2533160",
    "end": "2539520"
  },
  {
    "text": "that um we call transform. homography with that Matrix and there's the output",
    "start": "2539520",
    "end": "2546760"
  },
  {
    "text": "now you'll see that I cropped the output by just selecting the uh first 50 by",
    "start": "2546760",
    "end": "2551920"
  },
  {
    "text": "5050 if I take that out you'll see what's really going on in the background we take the image we size it down by 10",
    "start": "2551920",
    "end": "2559000"
  },
  {
    "text": "and that's what's what's stored down there U but you can do slightly more",
    "start": "2559000",
    "end": "2564359"
  },
  {
    "text": "interesting things you can uh rotate the image so let's say we want to rotate it by 15° maybe translated by 100 in each",
    "start": "2564359",
    "end": "2573520"
  },
  {
    "text": "Direction and add a small skew Factor",
    "start": "2573520",
    "end": "2579000"
  },
  {
    "start": "2579000",
    "end": "2717000"
  },
  {
    "text": "so oh large CU oh my scale is still 0.1 Let's uh let's not do that so I'll set",
    "start": "2579000",
    "end": "2585160"
  },
  {
    "text": "the scale to one there we go so there you've got a linear warp of the image now um ND image",
    "start": "2585160",
    "end": "2594480"
  },
  {
    "text": "also provides the a map function because this is a linear transformation all",
    "start": "2594480",
    "end": "2600640"
  },
  {
    "text": "straight lines in this image remain straight lines over here and sometimes you want to do nonlinear transformation",
    "start": "2600640",
    "end": "2607599"
  },
  {
    "text": "so there's the coordinate map function and um let me see if I can execute that",
    "start": "2607599",
    "end": "2615800"
  },
  {
    "text": "demo right so here's a an photograph of a window frame but you can see that",
    "start": "2627520",
    "end": "2634640"
  },
  {
    "text": "there's severe distortion on the edges of this image these lines are supposed to be straight but they're very much",
    "start": "2634640",
    "end": "2640119"
  },
  {
    "text": "curved and we'd like to pull them out so what I do is I provide the script with",
    "start": "2640119",
    "end": "2646240"
  },
  {
    "text": "the straight lines I Mark three points there",
    "start": "2646240",
    "end": "2652079"
  },
  {
    "text": "one two three and let me do another line",
    "start": "2652079",
    "end": "2662160"
  },
  {
    "text": "so one two 3",
    "start": "2662160",
    "end": "2668040"
  },
  {
    "text": "and then there we go so based on those I gave it three",
    "start": "2668040",
    "end": "2677240"
  },
  {
    "text": "three coordinates and asked it please optimize the warp so that those three points lie on a straight line and this",
    "start": "2677240",
    "end": "2683480"
  },
  {
    "text": "is what you get out so I didn't do a very good job of marking U but these lines are much straighter than they were",
    "start": "2683480",
    "end": "2690000"
  },
  {
    "text": "in the original input image",
    "start": "2690000",
    "end": "2694680"
  },
  {
    "start": "2717000",
    "end": "2791000"
  },
  {
    "text": "recently we've also added support for Block views and filtering so often you just want to slide a window across your",
    "start": "2717720",
    "end": "2723559"
  },
  {
    "text": "image do some operation on that window and return the result so if you if you look in the shape",
    "start": "2723559",
    "end": "2730200"
  },
  {
    "text": "utility you import view from window view is Windows you can take your uh your",
    "start": "2730200",
    "end": "2736960"
  },
  {
    "text": "input image view it as a bunch of windows so that's the sliding window it's just a view on the original image",
    "start": "2736960",
    "end": "2742760"
  },
  {
    "text": "so there's no copying of data taking place you can do this on a fairly large image specify the shape that you want um",
    "start": "2742760",
    "end": "2749480"
  },
  {
    "text": "so uh your input image is 512 x 512 you now break it up into blocks of 20 x 20",
    "start": "2749480",
    "end": "2756800"
  },
  {
    "text": "um um so your output is 493 by 493 it's almost the size of the original input",
    "start": "2756800",
    "end": "2761960"
  },
  {
    "text": "image but these windows have to fit inside the image um and each block is 20 by 20 uh and then you can do some",
    "start": "2761960",
    "end": "2769200"
  },
  {
    "text": "operation on that block like you can get the maximum of the entire block and if you display",
    "start": "2769200",
    "end": "2777720"
  },
  {
    "text": "that there we go you get something like that up so you can clearly see the the blocky structure of that filter coming",
    "start": "2780880",
    "end": "2789519"
  },
  {
    "text": "out if you're looking to detect features in your image you can do you can call the Hogg the histogram of gradients on",
    "start": "2791400",
    "end": "2798359"
  },
  {
    "text": "it uh that basically examines the the image at each",
    "start": "2798359",
    "end": "2803880"
  },
  {
    "text": "pixel position and it looks at the gradient and it counts uh the number of",
    "start": "2803880",
    "end": "2809200"
  },
  {
    "text": "gradients in in each Direction and uh here's a visualization of that brighter pixels indicate more more uh gradient",
    "start": "2809200",
    "end": "2818599"
  },
  {
    "text": "found in a certain direction so you can see you can basically see the original structure of the image coming out lots",
    "start": "2818599",
    "end": "2824440"
  },
  {
    "text": "of vertical here along the the pipe and uh sorry horizontal and more",
    "start": "2824440",
    "end": "2832520"
  },
  {
    "text": "vertical along there for example on his shoulder because the gradient runs",
    "start": "2832520",
    "end": "2837760"
  },
  {
    "text": "horizontally there right I think uh I think that's about it um if you're interested in",
    "start": "2837760",
    "end": "2845720"
  },
  {
    "start": "2840000",
    "end": "2878000"
  },
  {
    "text": "image processing or you you can use some of these utilities feel free to get in touch with us uh we",
    "start": "2845720",
    "end": "2852319"
  },
  {
    "text": "like to to welcome more people into our community and uh the mailing list is",
    "start": "2852319",
    "end": "2858240"
  },
  {
    "text": "populated by guys who know a lot about image processing so feel free to come and ask questions or just discuss the",
    "start": "2858240",
    "end": "2863400"
  },
  {
    "text": "tools we're using seems like we're done right thanks very much",
    "start": "2863400",
    "end": "2871160"
  },
  {
    "text": "[Music]",
    "start": "2872630",
    "end": "2875729"
  }
]