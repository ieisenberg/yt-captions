[
  {
    "text": "picture this it's the day of the Super Bowl and you're responsible for making",
    "start": "4480",
    "end": "9599"
  },
  {
    "text": "sure that the system is correctly running operationally for that day you're expecting 10 times a normal Peak",
    "start": "9599",
    "end": "16800"
  },
  {
    "text": "traffic but you're not so worried because you've spent the last three months working heavily with the",
    "start": "16800",
    "end": "22320"
  },
  {
    "text": "engineering team who is excellent It's scaling the system and making sure it can cope with the load there's 800 plus",
    "start": "22320",
    "end": "29359"
  },
  {
    "text": "microservice so it's a non-trivial Endeavor and things are going really well and you're",
    "start": "29359",
    "end": "34399"
  },
  {
    "text": "feeling really smug in the last 15 months the engineering team and the company have",
    "start": "34399",
    "end": "40280"
  },
  {
    "text": "created a product which has been outrageously successful it's now the",
    "start": "40280",
    "end": "45600"
  },
  {
    "text": "leading live TV internet delivered service in North America things are",
    "start": "45600",
    "end": "51760"
  },
  {
    "text": "going fantastically then 2 minutes before the end of the game the Patriots are down Tom Brady grabs the ball",
    "start": "51760",
    "end": "57800"
  },
  {
    "text": "they're about to go for a rush he makes a snap and the video cuts out for tens of",
    "start": "57800",
    "end": "63000"
  },
  {
    "text": "thousands of people across the states I want to talk to you today not",
    "start": "63000",
    "end": "69280"
  },
  {
    "text": "about just how you win the war how you get to that microservice architecture that fine grade architecture that",
    "start": "69280",
    "end": "75200"
  },
  {
    "text": "provides all these amazing benefits I want to also talk about how you keep the peace how you operate these",
    "start": "75200",
    "end": "80680"
  },
  {
    "text": "architectures some of the pitfalls you can fall into and some of the things we found that can really help keep these",
    "start": "80680",
    "end": "87320"
  },
  {
    "text": "systems running smoothly a little bit about me so I've worked in",
    "start": "87320",
    "end": "94520"
  },
  {
    "text": "software for maybe 30 years trained initially as a electronics engineer I've worked in many different domains speech",
    "start": "94520",
    "end": "100960"
  },
  {
    "text": "research applying neural networks to making speech sound more natural I've worked in Telecom smart",
    "start": "100960",
    "end": "107040"
  },
  {
    "text": "cards digital broadcasting and for 15 years or so I worked on trading and risk",
    "start": "107040",
    "end": "113280"
  },
  {
    "text": "systems in Investment Banking which is another whole different world fell into a stumbled into a PhD on software",
    "start": "113280",
    "end": "119240"
  },
  {
    "text": "components which was enormous fun about 6 and a half years ago I got contacted by Riot games Riot games make",
    "start": "119240",
    "end": "125840"
  },
  {
    "text": "the enormously popular game League of Legends how popular is it well it's played at least a billion hours",
    "start": "125840",
    "end": "131440"
  },
  {
    "text": "worldwide every month so I worked for four and a half years there got a",
    "start": "131440",
    "end": "136599"
  },
  {
    "text": "fantastic opportunity to create a lot of the service side infrastructure that's used in over 200 of the projects there",
    "start": "136599",
    "end": "142280"
  },
  {
    "text": "also got a chance to architect the game client the new game client that's now on 120 million plus desktops around the",
    "start": "142280",
    "end": "148680"
  },
  {
    "text": "world couple of years ago was contacted by Hulu they said come over be the Chief Architect we're going to develop a live",
    "start": "148680",
    "end": "155440"
  },
  {
    "text": "TV offering and so I joined Hulu and worked with the exceptionally capable",
    "start": "155440",
    "end": "160720"
  },
  {
    "text": "staff at both these",
    "start": "160720",
    "end": "164040"
  },
  {
    "text": "companies the takeaway that I want to bring is is pretty simple to be honest and I will go through it in detail and",
    "start": "166400",
    "end": "173000"
  },
  {
    "text": "explain what the benefits and what the challenges are but I want you to understand that microservices work in",
    "start": "173000",
    "end": "178120"
  },
  {
    "text": "many ways this is my own personal retrospective I wasn't always a True Believer in microservices I thought we",
    "start": "178120",
    "end": "184000"
  },
  {
    "text": "need just enough to get by but if it's going to be too granular we're going to suffer from this this is about me",
    "start": "184000",
    "end": "190440"
  },
  {
    "text": "gradually learning and making mistakes on the way gradually learning that these architectures are very very powerful",
    "start": "190440",
    "end": "196560"
  },
  {
    "text": "indeed and do convey all of these valuable benefits but there are challenges as well and I'm going to talk",
    "start": "196560",
    "end": "202760"
  },
  {
    "text": "about some of those challenges talk about some of the things that bid us and I'm going to do it in a very open way in",
    "start": "202760",
    "end": "208480"
  },
  {
    "text": "many ways these are my own mistakes these are my own lack of learnings etc etc and in many ways the only real",
    "start": "208480",
    "end": "215400"
  },
  {
    "text": "mistake is one that you make twice so in that Spirit I'm quite happy to share these findings with you um I left Hulu",
    "start": "215400",
    "end": "222879"
  },
  {
    "text": "around two weeks ago so in some ways I'm Freer to talk about it than I was before so what I want you to take away",
    "start": "222879",
    "end": "230280"
  },
  {
    "text": "is that microservices work but there are challenges as well let's prepare for the challenges in particular with some of",
    "start": "230280",
    "end": "236640"
  },
  {
    "text": "this very powerful new infrastructure that has come about I've divided the presentation up into",
    "start": "236640",
    "end": "242840"
  },
  {
    "text": "four parts the first part I'm going to talk about microservices in gaming League of Legends in particular then I'm",
    "start": "242840",
    "end": "248400"
  },
  {
    "text": "going to talk about microservices in video and and these two different domains have different characteristics which color the",
    "start": "248400",
    "end": "254280"
  },
  {
    "text": "architectures finally in sections three and four I'm going to talk about the benefits believe the hype I didn't",
    "start": "254280",
    "end": "259639"
  },
  {
    "text": "always believe but when I saw an 800 plus service M microservice architecture running at scale I realize the power of",
    "start": "259639",
    "end": "267120"
  },
  {
    "text": "it believe the challenges as well these things are not trivial to operate you get all these benefits but unless you're",
    "start": "267120",
    "end": "273960"
  },
  {
    "text": "careful something small can go on fire can percolate up through the architecture leading to people not",
    "start": "273960",
    "end": "280320"
  },
  {
    "text": "watching the Super Bowl and then you're having to talk to the LA Times and give them quotes you don't want to be in that",
    "start": "280320",
    "end": "287000"
  },
  {
    "text": "situation so microservices in gaming so I've subtitled this a",
    "start": "287680",
    "end": "292919"
  },
  {
    "text": "microservice architectured scale on the top right there bottom right there is a character from the game called Teemo",
    "start": "292919",
    "end": "301440"
  },
  {
    "text": "so League of Legends is an enormously popular multiplayer online battle arena game where you play the role of a",
    "start": "301440",
    "end": "308160"
  },
  {
    "text": "champion in a team of five pitted against another team of five competing for dominance on a map games last around",
    "start": "308160",
    "end": "315520"
  },
  {
    "text": "45 minutes and each of the Champions that people play have a dizzying array of stats regarding attack damage",
    "start": "315520",
    "end": "323000"
  },
  {
    "text": "cooldown factors and a whole set of capabilities that are asymmetrical now what happens is this is an incred",
    "start": "323000",
    "end": "329680"
  },
  {
    "text": "inedibly engaging sport it's behind a lot of the popularity of Esports as I mentioned people play it over a billion",
    "start": "329680",
    "end": "335160"
  },
  {
    "text": "hours a month to put that into context in 2014 when we measured that all of",
    "start": "335160",
    "end": "341000"
  },
  {
    "text": "Halo all the hours ever played on Halo up to that point including all of the the um successor versions of Halo were 2",
    "start": "341000",
    "end": "347759"
  },
  {
    "text": "billion hours this is doing that every two",
    "start": "347759",
    "end": "352160"
  },
  {
    "text": "months it's at scale these figures are from 2014 so you can extrapolate out from there we had 67 million monthly",
    "start": "352960",
    "end": "360600"
  },
  {
    "text": "active players and more than 27 million daily active players finally we had 7",
    "start": "360600",
    "end": "366199"
  },
  {
    "text": "and a half million concurrent at Peak that was 10 million or more by the time I left one of the things I would say as well is because I'm currently no longer",
    "start": "366199",
    "end": "373080"
  },
  {
    "text": "working for hu or Riot I'm going to only speak of publicly available information so I'm not going to share anything",
    "start": "373080",
    "end": "379360"
  },
  {
    "text": "particularly private but by the same token a lot of these things have been talked about already in the",
    "start": "379360",
    "end": "384520"
  },
  {
    "text": "Press so a fairly large game and a super exciting one to work on",
    "start": "384520",
    "end": "390479"
  },
  {
    "text": "so some of the gaming particulars that make this particularly unusual as a domain is you obviously have low latency",
    "start": "390479",
    "end": "395560"
  },
  {
    "text": "you want things to happen quickly so a level of real time nature is very important when you're doing matchmaking",
    "start": "395560",
    "end": "402520"
  },
  {
    "text": "you're basically picking five players on one side and five players on another side such that they have a 50% chance",
    "start": "402520",
    "end": "408080"
  },
  {
    "text": "each of winning that requires a lot of shared State and is often viewed as a global population problem depending on",
    "start": "408080",
    "end": "414599"
  },
  {
    "text": "what particular algorithm you use that shared State couples the microservices makes it a little bit harder to pull",
    "start": "414599",
    "end": "420120"
  },
  {
    "text": "them apart gaming has rapid development cycles and there's lots of Engineers working one game like when I joined Riot",
    "start": "420120",
    "end": "426199"
  },
  {
    "text": "games I had 80 Engineers when I left they had well over 800 and that doubling year- on year",
    "start": "426199",
    "end": "432560"
  },
  {
    "text": "causes interesting problems on its own right lots of Engineers working on one game mean that if they're in a monolith",
    "start": "432560",
    "end": "438160"
  },
  {
    "text": "they're all stepping on each other's toes all the time gets very very",
    "start": "438160",
    "end": "443240"
  },
  {
    "text": "slow so winning the war how did we evolve from the monolith that right games into a more granular microservice",
    "start": "444000",
    "end": "450960"
  },
  {
    "text": "architecture how did we get those benefits well in 2009 when the game was",
    "start": "450960",
    "end": "456360"
  },
  {
    "text": "released and I I wasn't ad r at this point and one of the things I would say as well is I'm going to talk about many things that I was peripherally",
    "start": "456360",
    "end": "463080"
  },
  {
    "text": "associated with or or wasn't um necessarily at the heart of I'm I'm just going to talk openly about the successes",
    "start": "463080",
    "end": "468800"
  },
  {
    "text": "and bear in mind these are two very successful companies both Riot and Hulu are multi-billion doll corporations that",
    "start": "468800",
    "end": "474919"
  },
  {
    "text": "have been extraordinarily successful so 2009 they had a large service monolith they developed and",
    "start": "474919",
    "end": "481319"
  },
  {
    "text": "released it gradually evolved by 2012 it was 435 Maven projects the tar file",
    "start": "481319",
    "end": "487639"
  },
  {
    "text": "itself was sorry the war file itself was massive it was in hundreds of megabytes",
    "start": "487639",
    "end": "493120"
  },
  {
    "text": "and we realized that we could no longer keep working on this because in August of 2012 we had this disastrous release",
    "start": "493120",
    "end": "500000"
  },
  {
    "text": "where the service was down for 4 days or 3 days or something and they had to basically roll back the release and at",
    "start": "500000",
    "end": "506759"
  },
  {
    "text": "that point we realized we had to start moving to microservices there's a presentation there if you get the slides afterwards you can click on",
    "start": "506759",
    "end": "513000"
  },
  {
    "text": "it where I spoke at GDC the premier game developers conference in San Francisco",
    "start": "513000",
    "end": "518039"
  },
  {
    "text": "on the evolution of League of Legends and how we evolved in a more granular",
    "start": "518039",
    "end": "523919"
  },
  {
    "text": "fashion so this is roughly the architecture of League of Legends with the monolith So reading from the bottom",
    "start": "523920",
    "end": "530440"
  },
  {
    "text": "you can see there's my sequel it's holding all the state and then we put a distributed memory cache on top of it is",
    "start": "530440",
    "end": "535920"
  },
  {
    "text": "a a product called coherence from Oracle very very powerful effectively turns",
    "start": "535920",
    "end": "541240"
  },
  {
    "text": "MySQL into a very very fast nosql database and allows you to handle rights",
    "start": "541240",
    "end": "546360"
  },
  {
    "text": "in a linear fashion on top of that we had this platform War this very large",
    "start": "546360",
    "end": "551640"
  },
  {
    "text": "monolith I talked about we deployed it in multiple cases with different flags",
    "start": "551640",
    "end": "556720"
  },
  {
    "text": "so we had a little bit of differentiated function in each case but it wasn't",
    "start": "556720",
    "end": "561760"
  },
  {
    "text": "anywhere near a true microservice architecture because we were still reading and writing the same objects in",
    "start": "561760",
    "end": "567600"
  },
  {
    "text": "the distributed cache using same code in the different silos so the trouble with that is when",
    "start": "567600",
    "end": "575440"
  },
  {
    "text": "one part of the system got hot when my SQL was being affected for instance it",
    "start": "575440",
    "end": "580680"
  },
  {
    "text": "would affect the other systems as well so there wasn't enough separation we knew that and so we wanted to change and",
    "start": "580680",
    "end": "588240"
  },
  {
    "text": "introduce proper microservices how we did it is we started with the platform on the left",
    "start": "588240",
    "end": "594320"
  },
  {
    "text": "hand side so it's the same thing I showed before just in a compressed form my SQL coherent sitting on top of that",
    "start": "594320",
    "end": "599399"
  },
  {
    "text": "and then the platform war and then we put in an API called service",
    "start": "599399",
    "end": "604800"
  },
  {
    "text": "proxy and that exposed the different functions that were currently in the platform and the first thing the teams",
    "start": "604800",
    "end": "611880"
  },
  {
    "text": "pulled out is team Builder tb. jar which is a very F very fast and very efficient",
    "start": "611880",
    "end": "619320"
  },
  {
    "text": "matchmaking server so they pulled matchmaking out of the monolith that eventually became the matchmaking system",
    "start": "619320",
    "end": "625440"
  },
  {
    "text": "for League of Legends so at this point we had a way to make microservices new",
    "start": "625440",
    "end": "631279"
  },
  {
    "text": "features as microservices pull them out of the platform so we'd won the war we'd",
    "start": "631279",
    "end": "638399"
  },
  {
    "text": "created some standard infrastructure so I'm a huge fan of rest and Swagger I love it for apis it makes them very",
    "start": "638399",
    "end": "644519"
  },
  {
    "text": "tangible very real I like the way you can evolve them and you can um call them using curl and and we built some",
    "start": "644519",
    "end": "652040"
  },
  {
    "text": "fundamental infrastructure we built I set a dashboard so we could see the metrics of the software of services we",
    "start": "652040",
    "end": "657639"
  },
  {
    "text": "built service discovery which we p off Eureka's Netflix now Netflix is a giant in the space of microservices I can say",
    "start": "657639",
    "end": "663959"
  },
  {
    "text": "that now I've left Hulu but basically you could do a lot worse than just read",
    "start": "663959",
    "end": "669040"
  },
  {
    "text": "all of the Netflix blogs and understand some of the amazing things they've done so we patented this off Eureka very",
    "start": "669040",
    "end": "674839"
  },
  {
    "text": "powerful architecture if you get a chance to look at it we called it discover us the service on the right is",
    "start": "674839",
    "end": "679959"
  },
  {
    "text": "the configuration service providing flags for the applications when they start up when they also change things at",
    "start": "679959",
    "end": "686360"
  },
  {
    "text": "runtime we called that configuras we had a dinosaur motif going we then created a whole set of",
    "start": "686360",
    "end": "692519"
  },
  {
    "text": "libraries in Java called Hermes and Associated other libraries to make it",
    "start": "692519",
    "end": "697720"
  },
  {
    "text": "very easy for people to create microservices so we've got a server side Rest Library which can sit on top of a",
    "start": "697720",
    "end": "704560"
  },
  {
    "text": "pluggable HTTP server and then we have metrics reporting so people can spin up a microservice like that or they can",
    "start": "704560",
    "end": "712200"
  },
  {
    "text": "create one at least I'll talk about spinning it up in a second we then created the client side libraries as",
    "start": "712200",
    "end": "718120"
  },
  {
    "text": "well on on the client side librar we use a Rest Library which was the Apache",
    "start": "718120",
    "end": "724720"
  },
  {
    "text": "stuff and we used a software load bouncer now what's happening is this is all operating inside Java process so",
    "start": "724720",
    "end": "731120"
  },
  {
    "text": "what will happen is when a client wants to know about a service it talks to service Discovery gets introduced and",
    "start": "731120",
    "end": "736399"
  },
  {
    "text": "then it talks directly to the service from then on it's balancing over that service the services are pinging the",
    "start": "736399",
    "end": "743320"
  },
  {
    "text": "service Discovery mechanism and heartbeating to it every 30 seconds if they don't heartbeat then eventually it",
    "start": "743320",
    "end": "748519"
  },
  {
    "text": "will drop out of the load balancer and you won't see it from the client's perspective so it's a very strong",
    "start": "748519",
    "end": "753800"
  },
  {
    "text": "architecture very powerful but the big problem with this one and I I did it this way so it's my own mistake I'm",
    "start": "753800",
    "end": "759880"
  },
  {
    "text": "putting my hand up is and it is very common at the time we built far too much functionality in these fat libraries so",
    "start": "759880",
    "end": "767680"
  },
  {
    "text": "as soon as we move to a polygod environment we're suddenly having to recreate these powerful facilities",
    "start": "767680",
    "end": "773639"
  },
  {
    "text": "inside each and every other language now as we'll see what's",
    "start": "773639",
    "end": "779240"
  },
  {
    "text": "happened a common trend is that a lot of these shared cross cutting concerns have been pulled out into infrastructure so",
    "start": "779240",
    "end": "787160"
  },
  {
    "text": "things like istu um infrastructure like that makes it",
    "start": "787160",
    "end": "792240"
  },
  {
    "text": "very very powerful in a polygot environment and takes away a lot of the heavy lifting that used to be done by",
    "start": "792240",
    "end": "797480"
  },
  {
    "text": "these big fat libraries keeping the peace and this is",
    "start": "797480",
    "end": "803560"
  },
  {
    "text": "what it's like to run the services scale and I've subtitled it held back by the remains of the mon",
    "start": "803560",
    "end": "811120"
  },
  {
    "text": "so we weren't quite free of the monolith because as you can imagine we just pulled out enough so we can create the features in the separate microservices",
    "start": "812880",
    "end": "820360"
  },
  {
    "text": "but the platform still got very hot the things like the inventory the stats the suon of details are still there they're",
    "start": "820360",
    "end": "826360"
  },
  {
    "text": "still doing a lot of work and the trouble is now whenever the platform goes down or whether we whenever we have",
    "start": "826360",
    "end": "832519"
  },
  {
    "text": "something going on which causes performance problems with it every microservice suffers",
    "start": "832519",
    "end": "839320"
  },
  {
    "text": "we got away with this for a long time but just at the start of this year you see that Riot had to pull back a couple",
    "start": "839320",
    "end": "846839"
  },
  {
    "text": "of game modes they spent a lot of time developing these game modes and when these game modes went out they realized",
    "start": "846839",
    "end": "852040"
  },
  {
    "text": "that in the wild you get performance problems with the monolith and this is actually from one of the right",
    "start": "852040",
    "end": "858079"
  },
  {
    "text": "explanations technically the platform was written as a monolithic service which means when things go wrong it's",
    "start": "858079",
    "end": "863320"
  },
  {
    "text": "difficult to debug no kidding it's it's hard to it's hard to debug it's hard to independently scale it's hard to",
    "start": "863320",
    "end": "870199"
  },
  {
    "text": "operate so that is the consequence of not going far enough with our",
    "start": "870199",
    "end": "875560"
  },
  {
    "text": "microservice Evolution if we could redo what would we do differently well with the benefit of",
    "start": "875560",
    "end": "881959"
  },
  {
    "text": "2020 hindsight and remember this is an enormously successful game even to this day and was the largest game in the",
    "start": "881959",
    "end": "888079"
  },
  {
    "text": "world for the longest time before the release of fortnite we would decouple the state completely and we'd pull it",
    "start": "888079",
    "end": "893120"
  },
  {
    "text": "into separate microservices and do that work it's not impossible work to do it would have been painful and to do that",
    "start": "893120",
    "end": "899800"
  },
  {
    "text": "we'd have to socialize to get prioritization we spent a lot of time pretending that we could do it without",
    "start": "899800",
    "end": "906800"
  },
  {
    "text": "having any adverse effects of feature release velocity that's typically not the case you need to get Buy in so that",
    "start": "906800",
    "end": "913199"
  },
  {
    "text": "the organization sees the benefits of decoupling in this way I would also simplify infrastructure",
    "start": "913199",
    "end": "920120"
  },
  {
    "text": "I and again my own personal sort of learnings I made the configuration system far too clever for its own good",
    "start": "920120",
    "end": "925959"
  },
  {
    "text": "it was hard to debug hard to run in operations and sometimes you would get results you didn't expect and I put far",
    "start": "925959",
    "end": "932319"
  },
  {
    "text": "too much smarts in the fat libraries it was common at the time so I don't regard it as too bad a Miss but what's",
    "start": "932319",
    "end": "939720"
  },
  {
    "text": "thankfully happened is those facilities have been pulled out into tools like Envoy systems like Envoy which make it a",
    "start": "939720",
    "end": "945959"
  },
  {
    "text": "lot easier to run in a polyglot environment so moving on microservices",
    "start": "945959",
    "end": "954759"
  },
  {
    "text": "for internet video and I've subtitled this hundreds of tiny pieces",
    "start": "954759",
    "end": "960120"
  },
  {
    "text": "so if you don't know Hulu Hulu is a very popular us only internet video service",
    "start": "960120",
    "end": "967720"
  },
  {
    "text": "provider until 2016 it was video on demand only in 2016",
    "start": "967720",
    "end": "975519"
  },
  {
    "text": "we released 2016 2017 we released the live TV offering Hulu is enormously",
    "start": "975519",
    "end": "980680"
  },
  {
    "text": "popular particularly since the um release of such premium content as the handmaid's tail and it's certainly one",
    "start": "980680",
    "end": "987720"
  },
  {
    "text": "of the big three videos distribution companies in the",
    "start": "987720",
    "end": "992319"
  },
  {
    "text": "US so when I joined in 2016 Hulu already had a microservice architecture it",
    "start": "992920",
    "end": "998680"
  },
  {
    "text": "wasn't as advanced as it later became but we decided to add live TV to this",
    "start": "998680",
    "end": "1004959"
  },
  {
    "text": "and you can imagine you've got video on demand dealing with just a video catalog and then live TV with all of the",
    "start": "1004959",
    "end": "1010040"
  },
  {
    "text": "attendant changes in the programs the ability to browse channels etc",
    "start": "1010040",
    "end": "1015279"
  },
  {
    "text": "etc in a 15mth development we B basically reworked 400 reworked or",
    "start": "1015279",
    "end": "1021279"
  },
  {
    "text": "recreated 400 microservices out of the 18 out of the 800 plus microservices",
    "start": "1021279",
    "end": "1026720"
  },
  {
    "text": "there's an article there on medium.com if you follow that link where I wrote about our experiences and how we created",
    "start": "1026720",
    "end": "1033520"
  },
  {
    "text": "all those microservices and how they interoperate and run so incredibly",
    "start": "1033520",
    "end": "1038959"
  },
  {
    "text": "successful and and also on the face fo slightly crazy we replace the entire back end and all of the front ends in",
    "start": "1038959",
    "end": "1045400"
  },
  {
    "text": "one fell sweep and then released it on a single day under a lot of pressure to meet a certain date but has been",
    "start": "1045400",
    "end": "1051400"
  },
  {
    "text": "incredibly successful from the public figures we've got we've Hulu had at least 20 million um overall",
    "start": "1051400",
    "end": "1057440"
  },
  {
    "text": "subscriptions and at least 1 million plus live subscriptions the numbers are higher than that these are the official",
    "start": "1057440",
    "end": "1064440"
  },
  {
    "text": "ones some of the video systems particulars which differentiate it from",
    "start": "1064919",
    "end": "1070280"
  },
  {
    "text": "gaming typically when you're looking at something like Netflix you're spending 80% of your time browsing I mean I I",
    "start": "1070280",
    "end": "1076799"
  },
  {
    "text": "don't know about you guys I can't find a show I want to watch half the time on these video services and this is where recommendation engines are so important",
    "start": "1076799",
    "end": "1083600"
  },
  {
    "text": "but regardless I still spend 80% of my time browsing 20% watching the show and",
    "start": "1083600",
    "end": "1088760"
  },
  {
    "text": "so there's a lot of people doing browsing and in the Hulu system it's heavily personalized you log in you see",
    "start": "1088760",
    "end": "1094919"
  },
  {
    "text": "stuff which is relevant to you now that places a big burden on caching TV show metadata is needed",
    "start": "1094919",
    "end": "1102400"
  },
  {
    "text": "everywhere we need to know how long the show is what the restrictions are on the content what devices it can be played on",
    "start": "1102400",
    "end": "1108080"
  },
  {
    "text": "and that data needs to percolate through the entire set of microservices it's a data distribution problem we often talk",
    "start": "1108080",
    "end": "1113840"
  },
  {
    "text": "about we want to locally capture just the data and the functionality like a good CL objectoriented class design we",
    "start": "1113840",
    "end": "1120880"
  },
  {
    "text": "want to capture that in one service in this particular case it's not possible and so we need to create pattern to funnel the data through the whole",
    "start": "1120880",
    "end": "1126799"
  },
  {
    "text": "architecture there's obviously real realtime playback concerns because it's got to support live TV and there's a",
    "start": "1126799",
    "end": "1132600"
  },
  {
    "text": "huge amount of integration we're always integrating with another billing provider another ads provider Etc",
    "start": "1132600",
    "end": "1140720"
  },
  {
    "text": "so Hulu has some outstanding engineers and well actually lots of them and they",
    "start": "1141880",
    "end": "1147000"
  },
  {
    "text": "created some fantastic infrastructure for dealing with microservices so the thing in yellow there is the donkey P or",
    "start": "1147000",
    "end": "1153760"
  },
  {
    "text": "the donkey platform as a service you can think of it like an in-house developed version of Heroku but written in Python",
    "start": "1153760",
    "end": "1159360"
  },
  {
    "text": "instead of Ruby and the donkey P was retrofitted to run the applications to containerize",
    "start": "1159360",
    "end": "1165559"
  },
  {
    "text": "them and run them on misos Aurora but one of the issues with donkey and",
    "start": "1165559",
    "end": "1170720"
  },
  {
    "text": "this is something we only realized later is it didn't have infrastructure as code it didn't have that ability to script",
    "start": "1170720",
    "end": "1177000"
  },
  {
    "text": "the deployment of your application as a result what would happen is people would have to go into these uis so the only",
    "start": "1177000",
    "end": "1182799"
  },
  {
    "text": "way you could access and change the system was effectively from uis and so people were having to go in and and",
    "start": "1182799",
    "end": "1189320"
  },
  {
    "text": "change the uis and it made it very hard to just spin up another environment with all of your software in it it was",
    "start": "1189320",
    "end": "1196440"
  },
  {
    "text": "possible of course but the the EAS of use of donkey in some senses became its",
    "start": "1196440",
    "end": "1201840"
  },
  {
    "text": "worst enemy later on on the left hand side you can see ghub and Jenkins used for the CI CD pipeline H built its own",
    "start": "1201840",
    "end": "1209120"
  },
  {
    "text": "provisioning system um and you've got a set of VMS there which it's managing and then on the top right hand side you can",
    "start": "1209120",
    "end": "1215919"
  },
  {
    "text": "see that we used DNS for service discovery which had its own pros and cons everything including service to",
    "start": "1215919",
    "end": "1221880"
  },
  {
    "text": "service traffic is going through load balances and on the bottom right hand side you can see we built our own RDS",
    "start": "1221880",
    "end": "1228200"
  },
  {
    "text": "equivalent for my squel and and R A we could self-provision databases and",
    "start": "1228200",
    "end": "1234360"
  },
  {
    "text": "infrastructure funny story Hulu loves building its own things and they've had a culture of build for a while which is",
    "start": "1234360",
    "end": "1240159"
  },
  {
    "text": "gradually changing the funny story is when the company was first founded the first thing that Hulu did is they built",
    "start": "1240159",
    "end": "1246320"
  },
  {
    "text": "a telephone conferencing system because why not as I said they immensely capable",
    "start": "1246320",
    "end": "1253720"
  },
  {
    "text": "Engineers um they built a lot of this stuff from scratch because they were operating around 10 years ago and it has",
    "start": "1253720",
    "end": "1259120"
  },
  {
    "text": "evolved and still runs the system today fine grain granular microservices",
    "start": "1259120",
    "end": "1266640"
  },
  {
    "text": "allowed us to perform perform what is known as the inverse Conway maneuver Conway's law states that your",
    "start": "1266640",
    "end": "1273159"
  },
  {
    "text": "architecture tends to resemble your organization which means that you get all of the inefficiencies associated",
    "start": "1273159",
    "end": "1279520"
  },
  {
    "text": "with bad organizational structure because of services were so granular we were able to reorganize our teams around",
    "start": "1279520",
    "end": "1285960"
  },
  {
    "text": "the architecture and redistribute the services and the ownership for those Services depending on how we saw fit so",
    "start": "1285960",
    "end": "1291840"
  },
  {
    "text": "a very powerful approach we were able to change the organization very",
    "start": "1291840",
    "end": "1297880"
  },
  {
    "text": "fluidly every team um owned their own microservices they own the operational",
    "start": "1297880",
    "end": "1302960"
  },
  {
    "text": "side all the way from from the start to the end this is a data distribution pattern",
    "start": "1302960",
    "end": "1309480"
  },
  {
    "text": "I was mentioning so unique in this architecture that I've experience is the need to funnel out reference data across",
    "start": "1309480",
    "end": "1315679"
  },
  {
    "text": "every microservice literally every microservice needs needed some aspect of this data and they needed it in a way",
    "start": "1315679",
    "end": "1321279"
  },
  {
    "text": "where we couldn't possibly just centralize all that in one service so the pattern that we used is",
    "start": "1321279",
    "end": "1327279"
  },
  {
    "text": "down the bottom there you can see that we have a mastering system that system is where you master the data it's the system of record it's where you ingests",
    "start": "1327279",
    "end": "1334960"
  },
  {
    "text": "the data it's also where you do admin on the data and modify it if you need to make changes it's the read right part",
    "start": "1334960",
    "end": "1341440"
  },
  {
    "text": "then we publish out to these caches and we allow these caches to be instantiated on demand such that we can put one in",
    "start": "1341440",
    "end": "1348960"
  },
  {
    "text": "front of a service that needs to have a lot of reads of the metadata and",
    "start": "1348960",
    "end": "1354120"
  },
  {
    "text": "suddenly we don't have a performance problem so we read through the caches now we had two types of notification",
    "start": "1354120",
    "end": "1360200"
  },
  {
    "text": "mechanisms so the first one is we we two types of expiring mechanisms the first one is we just used an HTTP proxy set a",
    "start": "1360200",
    "end": "1367880"
  },
  {
    "text": "time to live on the data and we could read through it and it would sit in the cache for a while and be very",
    "start": "1367880",
    "end": "1373640"
  },
  {
    "text": "fast however if we needed more responsiveness what we did is we published out on Kafka and the caches",
    "start": "1373640",
    "end": "1380200"
  },
  {
    "text": "were bespoke implementation which basically listened to the message knocked the elements out of the cache",
    "start": "1380200",
    "end": "1386039"
  },
  {
    "text": "and dealt with it in that way so again we Ed this pattern to funnel data through our",
    "start": "1386039",
    "end": "1392840"
  },
  {
    "text": "architecture on launch day we had no idea how many people to expect who would",
    "start": "1393600",
    "end": "1398760"
  },
  {
    "text": "use the service and we had some models so we constructed a lot of data around",
    "start": "1398760",
    "end": "1404279"
  },
  {
    "text": "what we could expect and for the most part we tracked correctly you can see up until that blue Spike things are going",
    "start": "1404279",
    "end": "1410799"
  },
  {
    "text": "very well and so we felt pretty proud of ourselves now remember as well we",
    "start": "1410799",
    "end": "1415960"
  },
  {
    "text": "switched over as many clients as we could on the first day we literally had a big bang where like day one no traffic",
    "start": "1415960",
    "end": "1422559"
  },
  {
    "text": "day two all traffic the blue Spike that you can see in the top left there we couldn't",
    "start": "1422559",
    "end": "1428320"
  },
  {
    "text": "understand we're getting so much browsing traffic we worried it's going to chew up all of our excess capacity it",
    "start": "1428320",
    "end": "1433480"
  },
  {
    "text": "turned out to be college kids falling asleep with Xbox on",
    "start": "1433480",
    "end": "1438679"
  },
  {
    "text": "we'd forgotten to put in an idle Timeout on the Xbox release which meant that when you're watching on the Xbox and you",
    "start": "1438679",
    "end": "1445360"
  },
  {
    "text": "fall asleep it's still pinging our system every minute for browse queries which are personalized once we fixed",
    "start": "1445360",
    "end": "1451679"
  },
  {
    "text": "that the problem went away and we started tracking the predicted amounts again the moral of the story there is",
    "start": "1451679",
    "end": "1458520"
  },
  {
    "text": "you've got to overr provision because you simply cannot un you cannot understand every possible use case of",
    "start": "1458520",
    "end": "1464480"
  },
  {
    "text": "the system or everything that will go wrong keeping the peace what's it like running",
    "start": "1464480",
    "end": "1470240"
  },
  {
    "text": "this system and I've subtitled that with everything gets magnified when I was at WR games we also used to joke about this",
    "start": "1470240",
    "end": "1476799"
  },
  {
    "text": "we'd say if anything could go wrong it will and that was absolutely true with the scale we were operating at unbelievable things happened down to the",
    "start": "1476799",
    "end": "1482960"
  },
  {
    "text": "hardware level it's a similar thing in Hulu it's running a very large service and remember this is a very successful",
    "start": "1482960",
    "end": "1488600"
  },
  {
    "text": "service on every front this has been enormously successful but there have been problems there have been",
    "start": "1488600",
    "end": "1495120"
  },
  {
    "text": "challenges one of the first things we did is we bu out an architectural operations dashboard what I mean by that",
    "start": "1495120",
    "end": "1502520"
  },
  {
    "text": "is that when you have 800 microservices it's hard to see how they all connect together and achieve a certain",
    "start": "1502520",
    "end": "1509080"
  },
  {
    "text": "function what we did is we made it so that there's a whole set of domains and this is uh basically a mockup because I",
    "start": "1509080",
    "end": "1515640"
  },
  {
    "text": "I don't want to show the real thing of of the dashboard we created and the Toppers a set of tabs for each of the",
    "start": "1515640",
    "end": "1520880"
  },
  {
    "text": "different domains so there's login there's brows and search there's playback and we're looking at playback",
    "start": "1520880",
    "end": "1525960"
  },
  {
    "text": "and this is a diagram we constructed for the press for a previous thing but it's very similar to what we had and it shows",
    "start": "1525960",
    "end": "1531640"
  },
  {
    "text": "that on the left hand side encoded signals are coming in they're being repackaged it's being pushed out to the",
    "start": "1531640",
    "end": "1537039"
  },
  {
    "text": "CDN and then it makes its way to the TV set on the right now we have another system so so",
    "start": "1537039",
    "end": "1543000"
  },
  {
    "text": "again this is very powerful let's just see all of the microservices in context maybe not in the granular fashion but",
    "start": "1543000",
    "end": "1548159"
  },
  {
    "text": "rolled up into these boxes and lines and so it became a very powerful way of",
    "start": "1548159",
    "end": "1553360"
  },
  {
    "text": "understanding the system we also had a system called homes which is basically a giant test Runner clone of Gomez the",
    "start": "1553360",
    "end": "1560039"
  },
  {
    "text": "commercially available system and what that allows you to do is run tens of thousands of smoke tests and health",
    "start": "1560039",
    "end": "1565640"
  },
  {
    "text": "checks against the running live system every hour we made it self-service so if",
    "start": "1565640",
    "end": "1572159"
  },
  {
    "text": "someone went into Gomez sorry homz and added client Gateway tag and that test",
    "start": "1572159",
    "end": "1577880"
  },
  {
    "text": "failed it would appear on the dashboard by coloring it in red and then coloring the tab in red and so you can see in",
    "start": "1577880",
    "end": "1584720"
  },
  {
    "text": "this particular case you can see the knock on effects you like oh the metadata services okay but the client Gateway is not it's going to start",
    "start": "1584720",
    "end": "1590600"
  },
  {
    "text": "having an impact in this way on the playing videos scaling for growth as I mentioned",
    "start": "1590600",
    "end": "1597720"
  },
  {
    "text": "was a challenge we initially started with the Super Bowl and the Super Bowl was literally predicted at 10 times the",
    "start": "1597720",
    "end": "1603960"
  },
  {
    "text": "traffic that we had at Peak so it's quite a scary thing what we did to reduce some of the engineering anxiety",
    "start": "1603960",
    "end": "1611080"
  },
  {
    "text": "is firstly we only looked at systems which are directly facing facing the",
    "start": "1611080",
    "end": "1616399"
  },
  {
    "text": "outside world we didn't care so so much about the internal systems we figured they would the the the teams dealing",
    "start": "1616399",
    "end": "1622399"
  },
  {
    "text": "with those would handle them anyway so we just concentrated on a key number of edge facing systems and what we did is",
    "start": "1622399",
    "end": "1628279"
  },
  {
    "text": "we classified the systems according to whether they scaled the number of queries per second scaled line linearly",
    "start": "1628279",
    "end": "1634399"
  },
  {
    "text": "with the number of viewers scaled 0.5 times or 0.3 times now you could imagine if someone says to you you're going to",
    "start": "1634399",
    "end": "1640520"
  },
  {
    "text": "get 10 times of traffic but you're only going to get um three times the actual queries per second extra it's a lot less",
    "start": "1640520",
    "end": "1647520"
  },
  {
    "text": "scary than someone saying oh by the way prepare for 10 times the traffic and as we classified the systems we found that",
    "start": "1647520",
    "end": "1653039"
  },
  {
    "text": "a good 80% of them fitted into that point three times so again took away a lot of the anxiety we were able to load",
    "start": "1653039",
    "end": "1659279"
  },
  {
    "text": "test at the right levels we were very confident and we actually had no scaling problems for Super Bowl March Madness or",
    "start": "1659279",
    "end": "1665320"
  },
  {
    "text": "the Olympics oh that um that is a an article",
    "start": "1665320",
    "end": "1671720"
  },
  {
    "text": "that myself and another engineer wrote on medium again for Hulu talking about in more detail and showing some of the",
    "start": "1671720",
    "end": "1678200"
  },
  {
    "text": "graphs of how we achieve the scaling one of the things I wish we'd",
    "start": "1678200",
    "end": "1683600"
  },
  {
    "text": "done really early on is put in circuit breakers so circuit",
    "start": "1683600",
    "end": "1690240"
  },
  {
    "text": "breakers I'm going to motivate why you have circuit breakers in a second and they they avoid these firestorms or or",
    "start": "1690240",
    "end": "1696360"
  },
  {
    "text": "what we call cascading failures and they're so important when you have this granular architecture where because",
    "start": "1696360",
    "end": "1702080"
  },
  {
    "text": "eventually one part of the architecture Will Go On Fire and you you want that fire to go out quickly or you want those",
    "start": "1702080",
    "end": "1707159"
  },
  {
    "text": "instances to be taken out of rotation so imagine this thing here you've got Services a b and c and they're calling",
    "start": "1707159",
    "end": "1713320"
  },
  {
    "text": "system X service x and x is calling service y now y might be a tiny little service it might literally be doing",
    "start": "1713320",
    "end": "1719559"
  },
  {
    "text": "geolocation of the user to make sure they're in the right region before playback starts so it's something that's",
    "start": "1719559",
    "end": "1727000"
  },
  {
    "text": "only very peripheral to actually continually playing back it's just something that's used when the video starts what will happen every now and",
    "start": "1727000",
    "end": "1734080"
  },
  {
    "text": "again is service y will die and it might only be one instance out of 10 that dies",
    "start": "1734080",
    "end": "1739880"
  },
  {
    "text": "and you think well it's not a big deal surely only one's died what will happen though is X will then call out to it and",
    "start": "1739880",
    "end": "1747120"
  },
  {
    "text": "it will load balance over the available set of instances because it hasn't been pulled out of the load balancer yet and",
    "start": "1747120",
    "end": "1752799"
  },
  {
    "text": "it will chew up all its threads because we're dealing with many tens of thousands of queries per second so",
    "start": "1752799",
    "end": "1757919"
  },
  {
    "text": "suddenly X is dead because it hasn't hit the timeouts but in a couple of seconds it's literally got to the point where it",
    "start": "1757919",
    "end": "1763840"
  },
  {
    "text": "can no longer run and that will just Cascade through the architecture once X is dead it's exhibiting the same",
    "start": "1763840",
    "end": "1769159"
  },
  {
    "text": "symptoms an A B and C die this is how you can have a tiny little service in",
    "start": "1769159",
    "end": "1774559"
  },
  {
    "text": "one of these complex systems flake out it can get on fire and then all of a sudden you got the CEO on the phone to",
    "start": "1774559",
    "end": "1781039"
  },
  {
    "text": "you going where's the video gone and and what's died and you say oh it's the geolocation service and it like well how",
    "start": "1781039",
    "end": "1787120"
  },
  {
    "text": "has that affected the whole thing so circuit breakers prevent this and something like onvoy basically it puts a",
    "start": "1787120",
    "end": "1794600"
  },
  {
    "text": "little proxy in front of every service and that proxy records every failure in",
    "start": "1794600",
    "end": "1801480"
  },
  {
    "text": "a way across the architecture and then says by the way we've got so much failure recru we're going to take this",
    "start": "1801480",
    "end": "1807720"
  },
  {
    "text": "out of service immediately this one instance out of service and every process that's talking from talking to",
    "start": "1807720",
    "end": "1814159"
  },
  {
    "text": "why will no longer talk to those bad instances now what that means from X's perspective is it can fast fail it knows",
    "start": "1814159",
    "end": "1821200"
  },
  {
    "text": "when it's talking to Y it will say immediately why is not available so you're not waiting for the timeout and",
    "start": "1821200",
    "end": "1826279"
  },
  {
    "text": "it can take another thing and say I'll take alternative action I'll call service Zed which might be a cache of geolocation data it might even be",
    "start": "1826279",
    "end": "1833240"
  },
  {
    "text": "something that simply says does some very basic checks are we allowed to play this content so circuit breakers prevent",
    "start": "1833240",
    "end": "1839880"
  },
  {
    "text": "firestorms it's probably one of the biggest things I wish we'd managed to get into our architecture early we had",
    "start": "1839880",
    "end": "1845679"
  },
  {
    "text": "use of libraries like historics in certain parts of the architecture but the real value in these comes when you",
    "start": "1845679",
    "end": "1851600"
  },
  {
    "text": "bring it in early so that people are thinking in thinking right from the start about well if that key service is",
    "start": "1851600",
    "end": "1857360"
  },
  {
    "text": "not available what's the alternative what should I do in this particular case because at the moment without without",
    "start": "1857360",
    "end": "1863039"
  },
  {
    "text": "circuit breakers uniformly applied the only alternative is to Simply Cascade the",
    "start": "1863039",
    "end": "1868919"
  },
  {
    "text": "failure we got cross cutting requirements so we've got 800 microservices every now and again we get a requirement like um a serious feature",
    "start": "1869600",
    "end": "1877039"
  },
  {
    "text": "like upsell and upsell is where through various parts in the UI it can present the option to upgrade your package that",
    "start": "1877039",
    "end": "1883960"
  },
  {
    "text": "would cut through 50 to 60 microservices now this is not a million miles away from oo design when if you",
    "start": "1883960",
    "end": "1891080"
  },
  {
    "text": "get the class boundary slightly wrong someone come in and say well now we want it to do X and you say well I'm going to",
    "start": "1891080",
    "end": "1896120"
  },
  {
    "text": "have to completely rework my class design and all of the architectures now in a microservice world that becomes",
    "start": "1896120",
    "end": "1902440"
  },
  {
    "text": "quite hard because you're having to modify end different apis you're having to make the changes that stripe across",
    "start": "1902440",
    "end": "1907679"
  },
  {
    "text": "your architecture I don't feel we fully solved this but some of this comes down to the need for creating platforms some",
    "start": "1907679",
    "end": "1915559"
  },
  {
    "text": "of it also comes down to the need to make the to to look at the vectors of change and Factory your architecture around",
    "start": "1915559",
    "end": "1922399"
  },
  {
    "text": "this I don't think we're successful in all cases Cloud versus data center so Hulu",
    "start": "1922399",
    "end": "1928679"
  },
  {
    "text": "has a big data center presence has moved to the cloud for its live pipeline but we're using the donkey",
    "start": "1928679",
    "end": "1935519"
  },
  {
    "text": "system and we took an approach that meant that donkey abstracts out the difference between the cloud and the",
    "start": "1935519",
    "end": "1940919"
  },
  {
    "text": "data center I initially was a huge fan of this I gradually changed my thinking over time because it it tends to bring",
    "start": "1940919",
    "end": "1948000"
  },
  {
    "text": "in the lowest common denominator approach you want to use the serverless architecture of AWS sorry we can't",
    "start": "1948000",
    "end": "1953519"
  },
  {
    "text": "support that you want to use a particular datab base or a Kinesis q and AWS or you want to use Google spanner",
    "start": "1953519",
    "end": "1960159"
  },
  {
    "text": "then bad luck because it's got to run in the same in the data center and the cloud and so we had no elasticity either",
    "start": "1960159",
    "end": "1967480"
  },
  {
    "text": "we had to over-provision as Meg Whitman the ex CEO of eBay is fond of saying when you're in the data center every day",
    "start": "1967480",
    "end": "1974919"
  },
  {
    "text": "is New Year's Eve so you have to provision for the biggest traffic you're ever going to get and it gets expensive",
    "start": "1974919",
    "end": "1980519"
  },
  {
    "text": "to run in the cloud you obviously have elasticity it's a very powerful tool we",
    "start": "1980519",
    "end": "1985960"
  },
  {
    "text": "didn't have that so it made it hard to do proper blue green blue green deployment where you bring up that separate cluster you funnel traffic over",
    "start": "1985960",
    "end": "1993240"
  },
  {
    "text": "on a gradual basis and then you fold that cluster away if anything goes wrong or you kill the original cluster allows",
    "start": "1993240",
    "end": "1999200"
  },
  {
    "text": "you to do roll back so quickly so on to section three believe",
    "start": "1999200",
    "end": "2006720"
  },
  {
    "text": "the hype what are of the benefits we got from microservices as I mentioned a lot of the things I've talked",
    "start": "2006720",
    "end": "2013480"
  },
  {
    "text": "about I I wasn't a True Believer at the start at right games I was like oh it's it's it's good but I really wouldn't",
    "start": "2013480",
    "end": "2019760"
  },
  {
    "text": "want to run too many of these things at H in my opinion was completely changed by seeing the way and the benefits we",
    "start": "2019760",
    "end": "2026440"
  },
  {
    "text": "got from these granular microservices so ownership and Independence is a huge thing you're no",
    "start": "2026440",
    "end": "2031760"
  },
  {
    "text": "longer stepping on each other's toes in this giant platform monolith you're just dealing with your own code which is a",
    "start": "2031760",
    "end": "2038120"
  },
  {
    "text": "lot smaller so there's a lot less cognitive overhead and you get that development Independence which leads to that huge development velocity like on",
    "start": "2038120",
    "end": "2046039"
  },
  {
    "text": "the face of it hully was able to achieve outstanding and amazing things to completely rewrite their service in 15",
    "start": "2046039",
    "end": "2052158"
  },
  {
    "text": "months and it's a it's a very very successful service so we got that operational development scaling as well",
    "start": "2052159",
    "end": "2058638"
  },
  {
    "text": "we could scale one small part of the system by throwing extra resources at it and spending a bit of engineering time",
    "start": "2058639",
    "end": "2063878"
  },
  {
    "text": "making it operate better without having to do what you have to do in a platform monolith where",
    "start": "2063879",
    "end": "2069878"
  },
  {
    "text": "you have to scale the whole thing for every use case some other benefits we got very",
    "start": "2069879",
    "end": "2076000"
  },
  {
    "text": "granular deployment one of the thinking that I had early on was that granular deployment would lead to more errors it",
    "start": "2076000",
    "end": "2081960"
  },
  {
    "text": "doesn't as long as you build the right checks in so at H it was not uncommon for us to deploy a 100 times in a day",
    "start": "2081960",
    "end": "2087638"
  },
  {
    "text": "that's very powerful because every time you deploy something small that has been tested obviously correctly but is",
    "start": "2087639",
    "end": "2093358"
  },
  {
    "text": "advancing a system for only a little bit you have only a level of say 10% if you have to change all the entire set of",
    "start": "2093359",
    "end": "2100440"
  },
  {
    "text": "software or something very coar grained you may be incurring 50% risk so that",
    "start": "2100440",
    "end": "2105480"
  },
  {
    "text": "granular deployment really helps now evolution is easy as well because you can produce a V1 of the API and then",
    "start": "2105480",
    "end": "2112640"
  },
  {
    "text": "just roll out a new service with v V1 and V2 of the API rest really helps as well with that although systems like",
    "start": "2112640",
    "end": "2118599"
  },
  {
    "text": "Thrift and protuff also contain versioning Primitives and as I mentioned earlier organizational alignment our",
    "start": "2118599",
    "end": "2124400"
  },
  {
    "text": "services were granular enough we could just spread them out through the organization as we reorganized to get additional",
    "start": "2124400",
    "end": "2130480"
  },
  {
    "text": "benefits of scale because Hulu has maybe got 800 Engineers worldwide we were able",
    "start": "2130480",
    "end": "2136760"
  },
  {
    "text": "to redistribute the microservices in a very powerful way so believe the benefits believe the",
    "start": "2136760",
    "end": "2144280"
  },
  {
    "text": "hype but believe the challenges as well because they're very real and they'll bite you if you don't take advantage of it of don't take advantage of this new",
    "start": "2144280",
    "end": "2152280"
  },
  {
    "text": "infrastructure so we're we're very lucky we live in very fortunate times where people have seen the need for these",
    "start": "2152280",
    "end": "2159760"
  },
  {
    "text": "things to be abstracted out into infrastructure to avoid the pitfalls of microservices and so I've subtitled this",
    "start": "2159760",
    "end": "2165200"
  },
  {
    "text": "part standing on the shoulders of constantly improving",
    "start": "2165200",
    "end": "2170800"
  },
  {
    "text": "infrastructure so here's just a template of a building cicd pipeline deployment and roll back into your runtime",
    "start": "2171560",
    "end": "2177640"
  },
  {
    "text": "infrastructure and then sitting on operational infrastructure the first thing I would say is make sure you have that common cicd pipeline across your",
    "start": "2177640",
    "end": "2184480"
  },
  {
    "text": "company it's so important for auditability for keep keeping track of what's being deployed across the company",
    "start": "2184480",
    "end": "2190160"
  },
  {
    "text": "when for rolling it back quickly and having that uniform set of capabilities and it's so easy to build these things",
    "start": "2190160",
    "end": "2195960"
  },
  {
    "text": "these days I mean we've got some amazing tools and infrastructure available so something like Jenkins for C this is",
    "start": "2195960",
    "end": "2202000"
  },
  {
    "text": "just examples um something like Spiner or commercially available tool harness and it's so important to use",
    "start": "2202000",
    "end": "2208760"
  },
  {
    "text": "infrastructure as code because you want to be able to spin up your environment and then tear it down if you can't do",
    "start": "2208760",
    "end": "2214359"
  },
  {
    "text": "that you're in a very weak place so we deploy into the runtime",
    "start": "2214359",
    "end": "2220079"
  },
  {
    "text": "infrastructure and really it's got so easy these days in in such lovely tooling like things like kubet something",
    "start": "2220079",
    "end": "2226599"
  },
  {
    "text": "like ISO it it's built on top of envoy from lift and it basically abstracts out",
    "start": "2226599",
    "end": "2231760"
  },
  {
    "text": "these cross cutting concerns as these little proxies which gives you bestof class service to service monitoring best",
    "start": "2231760",
    "end": "2237920"
  },
  {
    "text": "class circuit braking facilities and and build on something like stack driver for logging Etc then",
    "start": "2237920",
    "end": "2245480"
  },
  {
    "text": "for operational infrastructure I've become a huge fan of the cloud and I say this as someone who has worked for two",
    "start": "2245480",
    "end": "2251280"
  },
  {
    "text": "companies that have heavy investments in data centers the reason why the cloud is so",
    "start": "2251280",
    "end": "2259400"
  },
  {
    "text": "powerful is that you have this easy elasticity you can bring up these environments quickly and you can maybe",
    "start": "2259400",
    "end": "2266040"
  },
  {
    "text": "even bring up a thousand machines it's not uncommon for some of the companies I've talked to for them to bring up 50,000 machines you run them for an hour",
    "start": "2266040",
    "end": "2272400"
  },
  {
    "text": "you do all your testing on and you fold it back down again you're only paying for that hour you don't have that",
    "start": "2272400",
    "end": "2277720"
  },
  {
    "text": "investment in the data center where you need to pretend that every day is New Year's Day so the cloud has many advantages",
    "start": "2277720",
    "end": "2284760"
  },
  {
    "text": "over the data center you got the elasticity the blue green ease of blue green and you got better shared services",
    "start": "2284760",
    "end": "2290480"
  },
  {
    "text": "we could only devote you know 10 20 Engineers to managing the shared",
    "start": "2290480",
    "end": "2295520"
  },
  {
    "text": "services at Hulu and they were sensationally good Engineers but the bottom line is they can't compete with",
    "start": "2295520",
    "end": "2302079"
  },
  {
    "text": "10,000 people from Amazon or Google there's just simply no way they can it doesn't matter how good they are how",
    "start": "2302079",
    "end": "2308040"
  },
  {
    "text": "hard they work and so the cloud has these advantages and my preferred approach these days I used to be very",
    "start": "2308040",
    "end": "2314359"
  },
  {
    "text": "big in terms of let's make it a set of abstractions so",
    "start": "2314359",
    "end": "2319400"
  },
  {
    "text": "that we can deploy on any Cloud I've changed my mind over time I don't think any of these clouds are going anywhere I",
    "start": "2319400",
    "end": "2324440"
  },
  {
    "text": "think they're all competing on price I think you're going to get the price advantages even if you can't Arbitrage between them pick one cloud provider",
    "start": "2324440",
    "end": "2331160"
  },
  {
    "text": "possibly per workflow you might want to put your big data in a separate place to your transactional systems consider cost",
    "start": "2331160",
    "end": "2337040"
  },
  {
    "text": "early because you need to consider how you can um save costs in this elastic",
    "start": "2337040",
    "end": "2342119"
  },
  {
    "text": "environment and go multi- region multi account on day one multi- region for that resiliency and multi account so you",
    "start": "2342119",
    "end": "2348520"
  },
  {
    "text": "get those little nice little bulkheads so that when something goes on fire it's constrained within that one account in",
    "start": "2348520",
    "end": "2354599"
  },
  {
    "text": "our particular case at Hulu we created um a handful of accounts and we were doing multi-",
    "start": "2354599",
    "end": "2361839"
  },
  {
    "text": "region putting circuit breakers by default I cannot emphasize this enough and this is some graphs that come from",
    "start": "2361839",
    "end": "2367640"
  },
  {
    "text": "Linker D we're doing some experiments with link D and other service mesh on the top right hand corner you",
    "start": "2367640",
    "end": "2374560"
  },
  {
    "text": "can see that we've got no failure acrel and so that blue line you can see just below the orange and red lines on the",
    "start": "2374560",
    "end": "2381599"
  },
  {
    "text": "top right is showing we're getting consistent set of Errors even though only one service out of 10 is failing it's affecting",
    "start": "2381599",
    "end": "2388400"
  },
  {
    "text": "everything the bottom right hand side where we put in a failure acrel policy you can see the errors are minimized and",
    "start": "2388400",
    "end": "2394880"
  },
  {
    "text": "it's literally bouncing along the bottom of the graph and what you're seeing is that every now and again you get a little Spike as the service mesh decides",
    "start": "2394880",
    "end": "2402079"
  },
  {
    "text": "oh hang on a sec I'm going to retry that one service so again this the circuit",
    "start": "2402079",
    "end": "2407119"
  },
  {
    "text": "breakers by default literally transform your architecture from going on fire as soon as someone shows a match to",
    "start": "2407119",
    "end": "2413160"
  },
  {
    "text": "basically you can pour petrol on something and set it on fire and it hardly affects",
    "start": "2413160",
    "end": "2418400"
  },
  {
    "text": "anything I would put in an API Gateway earlier and by an API Gateway I'm talking about something that allows you",
    "start": "2418760",
    "end": "2424280"
  },
  {
    "text": "to do rate limiting quots development keys also holds your API documents so",
    "start": "2424280",
    "end": "2429720"
  },
  {
    "text": "that you can see that living breathing set of apis that you create in rest I'm talking about something like uh Google",
    "start": "2429720",
    "end": "2435920"
  },
  {
    "text": "apley Amazon um API Gateway something along those lines now in the past these",
    "start": "2435920",
    "end": "2443280"
  },
  {
    "text": "gateways could create this terrible situation where you're effectively going through the Gateway for even service to",
    "start": "2443280",
    "end": "2448839"
  },
  {
    "text": "service traffic and you're effectively recreating an operational monolith well they've become more powerful than that",
    "start": "2448839",
    "end": "2454839"
  },
  {
    "text": "because they can interface to systems like en now and the Gateway can apply its policies without getting in the way",
    "start": "2454839",
    "end": "2462040"
  },
  {
    "text": "of the service to service traffic so again you're getting the Best of Both Worlds you got that consistent set of",
    "start": "2462040",
    "end": "2467599"
  },
  {
    "text": "policies that consistent monitoring but you're no longer got a single source of",
    "start": "2467599",
    "end": "2474119"
  },
  {
    "text": "failure and finally one of the things that often happens in these microservices environments is that you",
    "start": "2474119",
    "end": "2480440"
  },
  {
    "text": "need holistic treatment of things like load testing you need to be doing browsing as well as playback as well as",
    "start": "2480440",
    "end": "2485520"
  },
  {
    "text": "logging in as well as DVR functionality but we want to make it so that the teams",
    "start": "2485520",
    "end": "2491280"
  },
  {
    "text": "are not coupled to each other we want that self-service ability and so what we do is we build platforms such that load",
    "start": "2491280",
    "end": "2497720"
  },
  {
    "text": "testing can be where there's a scenario and people contribute tests to it or we make it so that when we do billing and",
    "start": "2497720",
    "end": "2503920"
  },
  {
    "text": "this is a great example of integration patent in microservices we abstract all of the common logic into a set of",
    "start": "2503920",
    "end": "2509280"
  },
  {
    "text": "capabilities running in microservices and then for every new billing partner such as Sprint we create one",
    "start": "2509280",
    "end": "2515280"
  },
  {
    "text": "microservice which handles all of the Sprint specific logic browse caching AB testing UI",
    "start": "2515280",
    "end": "2522240"
  },
  {
    "text": "layout these are all things that um ad Hulu for instance we built platforms around such that teams could",
    "start": "2522240",
    "end": "2528119"
  },
  {
    "text": "self-service but still contribute to that holistic",
    "start": "2528119",
    "end": "2532559"
  },
  {
    "text": "Vision so the takeaways from my talk that I want to leave you with are that microservices offer many benefits",
    "start": "2533160",
    "end": "2540280"
  },
  {
    "text": "there's that strong isolation in Independence there that granular deployment scaling and evolution and the benefits are real I've tasted them and",
    "start": "2540280",
    "end": "2548240"
  },
  {
    "text": "I've been Amazed by the development velocity that you get and I never would want to go back to anything even resembling a",
    "start": "2548240",
    "end": "2555200"
  },
  {
    "text": "monolith there's a lot of challenges too but luckily a lot of the new infrastructure that has appeared has",
    "start": "2555200",
    "end": "2560640"
  },
  {
    "text": "made some of these challenges dealing with these challenges very very easy or at least very very you can deal with",
    "start": "2560640",
    "end": "2566160"
  },
  {
    "text": "them in a very powerful way so take advantage of the modern cicd pipelines and particularly some of these very",
    "start": "2566160",
    "end": "2572839"
  },
  {
    "text": "powerful continuous deployment tools that allow you to do things like automated Canary analysis build out infrastructure code",
    "start": "2572839",
    "end": "2579400"
  },
  {
    "text": "capabilities so that you can spin up your environment and then tear it down again use circuit breakers to prevent",
    "start": "2579400",
    "end": "2586599"
  },
  {
    "text": "firestorms and use best-of class tools like ISO to do your servico service",
    "start": "2586599",
    "end": "2591680"
  },
  {
    "text": "monitoring it gives you so much visibility that you wouldn't otherwise have and then make full advantage of the",
    "start": "2591680",
    "end": "2597359"
  },
  {
    "text": "cloud elasticity allow the cloud to be the cloud and use it in a way where you",
    "start": "2597359",
    "end": "2603280"
  },
  {
    "text": "take full advantage of the fact you can spin up a whole array of machines use them for an hour and then spin them down",
    "start": "2603280",
    "end": "2610119"
  },
  {
    "text": "again so thank you very much for listening one thing I would say I'm I'm able to take some questions now I think",
    "start": "2610119",
    "end": "2615839"
  },
  {
    "text": "I've got five minutes um also we've got an AMA tomorrow at 2:55 p.m. in",
    "start": "2615839",
    "end": "2621599"
  },
  {
    "text": "boardroom SE on decomposing the monolith are there any",
    "start": "2621599",
    "end": "2628000"
  },
  {
    "text": "questions thank you it's a good presentation um covered all the details",
    "start": "2634960",
    "end": "2640280"
  },
  {
    "text": "that I wanted to get out of this one so my question is uh you talked about sto",
    "start": "2640280",
    "end": "2646200"
  },
  {
    "text": "and service mesh and how important it is to get an observability and um um like",
    "start": "2646200",
    "end": "2653280"
  },
  {
    "text": "and all other features from a day one but the service Miss Sol Solutions we",
    "start": "2653280",
    "end": "2659599"
  },
  {
    "text": "are having today sto and Linker D 2.0 are all based on kubernetes yes so for",
    "start": "2659599",
    "end": "2667119"
  },
  {
    "text": "for an Enterprise or for any um company that is not ready for a cubet is yet is",
    "start": "2667119",
    "end": "2672559"
  },
  {
    "text": "there any um tooling available well I mean you've got the essential component which is Envoy which you can certainly",
    "start": "2672559",
    "end": "2679160"
  },
  {
    "text": "place as a proxy in front of all your services so from that perspective you don't have to use something like the auto injection capabilities of",
    "start": "2679160",
    "end": "2685480"
  },
  {
    "text": "kubernetes so I'd strongly suggest looking at stuff like Envoy it's that PR that building block and it's very",
    "start": "2685480",
    "end": "2691079"
  },
  {
    "text": "powerful you know it's it's handling grpc it's handling rest it's handling http2 and it's it's small it's it's not",
    "start": "2691079",
    "end": "2697720"
  },
  {
    "text": "got a big run time and I just Place one in front of every",
    "start": "2697720",
    "end": "2702559"
  },
  {
    "text": "service yeah oh sorry uh hi uh my name is Shiva",
    "start": "2710119",
    "end": "2718240"
  },
  {
    "text": "I work for visa and thank you very much it's a very good presentation thank and um I have one question which was not uh",
    "start": "2718240",
    "end": "2725640"
  },
  {
    "text": "mentioned in this particular present ation it's uh more on how do you manage code and how do you manage versions",
    "start": "2725640",
    "end": "2733079"
  },
  {
    "text": "between the microservices and uh I would like to ask one more question here uh",
    "start": "2733079",
    "end": "2738880"
  },
  {
    "text": "what is the best way to manage the code in terms of like Mo monor repository or",
    "start": "2738880",
    "end": "2744880"
  },
  {
    "text": "like you have a repository per service so what's the best practice here we we",
    "start": "2744880",
    "end": "2750000"
  },
  {
    "text": "had a repository per service then we used the team organization structuring GitHub Enterprise to tie the services",
    "start": "2750000",
    "end": "2756440"
  },
  {
    "text": "together so from the perspective of a developer you can think of it they're just sitting in their own little repo",
    "start": "2756440",
    "end": "2762040"
  },
  {
    "text": "and you get that very fast development velocity so ad Riot though is interesting because the platform",
    "start": "2762040",
    "end": "2767839"
  },
  {
    "text": "monolith was in a single repository and we're always stepping on each other's toes very common in gaming to have a",
    "start": "2767839",
    "end": "2773599"
  },
  {
    "text": "single repo for the whole company and I found it much more freeing to have that individual repo per",
    "start": "2773599",
    "end": "2780440"
  },
  {
    "text": "service okay the latest programming languages like go right they they",
    "start": "2780440",
    "end": "2785640"
  },
  {
    "text": "actually support this monor model so so they support uh they support uh I mean",
    "start": "2785640",
    "end": "2792319"
  },
  {
    "text": "lot of new projects are coming in that model like do you think there are any benefits to it or no you mean benefits",
    "start": "2792319",
    "end": "2799480"
  },
  {
    "text": "to having that granular repositories yeah yeah I mean I think there's huge benefits because in essence you're",
    "start": "2799480",
    "end": "2804800"
  },
  {
    "text": "you're living in a small world now and it's all about getting back to that small world where you can get that huge",
    "start": "2804800",
    "end": "2810000"
  },
  {
    "text": "development velocity and go go in particular is fascinating because it's so hard to create abstractions in it you",
    "start": "2810000",
    "end": "2815640"
  },
  {
    "text": "can't do anything super fancy so it's very fast to develop in and when you keep in that small world you've got your",
    "start": "2815640",
    "end": "2821160"
  },
  {
    "text": "own repo you don't have to step on anyone's toes you can just get that enormous development velocity that you experience when you're just making a",
    "start": "2821160",
    "end": "2827240"
  },
  {
    "text": "project for yourself hi Andrew thanks for the presentation uh my name is Al uh we're",
    "start": "2827240",
    "end": "2833760"
  },
  {
    "text": "uh we're actually uh an e-commerce I really like the idea you mentioned about uh having uh based on the scenario pick",
    "start": "2833760",
    "end": "2840599"
  },
  {
    "text": "pick pick a particular uh platform or a cloud uh but with with the with the outages that we see for every cloud",
    "start": "2840599",
    "end": "2847599"
  },
  {
    "text": "provider uh like we we cannot just afford losing any downtime right I mean having any downtime so we're we're",
    "start": "2847599",
    "end": "2853960"
  },
  {
    "text": "actually a highly um distributed microservices on kubernetes and we're piing well we're trying to be on all the",
    "start": "2853960",
    "end": "2860800"
  },
  {
    "text": "major uh clouds like Azure Google and AWS but that makes it very difficult for",
    "start": "2860800",
    "end": "2866680"
  },
  {
    "text": "us to manage right gke eks AKs being uh available in some DCS or not what's your",
    "start": "2866680",
    "end": "2873800"
  },
  {
    "text": "idea about that so I can't remember remember what I'd be interested in",
    "start": "2873800",
    "end": "2880200"
  },
  {
    "text": "looking at what the downtime of every region is like say if you create",
    "start": "2880200",
    "end": "2885480"
  },
  {
    "text": "something that's multi- region you've effectively got those bulkheads already because like if Amazon dies in one region it's very unlikely to die in",
    "start": "2885480",
    "end": "2891920"
  },
  {
    "text": "another region so what in our particular case we we looked at the downtime across",
    "start": "2891920",
    "end": "2897359"
  },
  {
    "text": "regions realized that there was almost no downtime which was in common between all of them and just created a system to",
    "start": "2897359",
    "end": "2903640"
  },
  {
    "text": "multi- region and that's exactly why you go multi- region now I I haven't dealt with a medical system or a financial",
    "start": "2903640",
    "end": "2910920"
  },
  {
    "text": "system which absolutely needs 100% uptime so maybe on analysis you might say exactly what you've concluded and",
    "start": "2910920",
    "end": "2917440"
  },
  {
    "text": "you just have to bear the engineering cost of that okay sorry what we got time for one last one",
    "start": "2917440",
    "end": "2924839"
  },
  {
    "text": "sorry we are running out of time so I guess you will be available as well for questions later so thanks a lot Andrew",
    "start": "2924839",
    "end": "2930760"
  },
  {
    "text": "for your talk thanks a lot",
    "start": "2930760",
    "end": "2934680"
  }
]