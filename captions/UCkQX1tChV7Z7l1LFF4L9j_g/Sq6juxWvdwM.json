[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "thank you and welcome to Microsoft microservices lesson to learn from a",
    "start": "3980",
    "end": "9080"
  },
  {
    "text": "start-up perspective and when we usually talk about micro-services we hear and",
    "start": "9080",
    "end": "14809"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "read a lot of about success stories from large industry players such as Netflix Amazon eBay Justin hey Matthew and when",
    "start": "14809",
    "end": "22100"
  },
  {
    "text": "you look at those success stories especially if from a start-up perspective was far less resources and",
    "start": "22100",
    "end": "27350"
  },
  {
    "text": "far less experience of a large scaling world you mind end up saying well that's fantastic Jeff let's copy that by the",
    "start": "27350",
    "end": "34190"
  },
  {
    "text": "problem is that every journey is different so what works in one company might not work for you and so",
    "start": "34190",
    "end": "42199"
  },
  {
    "text": "unfortunately is that there is no golden easy rule that's easily applicable and",
    "start": "42199",
    "end": "47750"
  },
  {
    "text": "each attorney is different because every company has to face different circumstances so and one of those",
    "start": "47750",
    "end": "55239"
  },
  {
    "start": "51000",
    "end": "51000"
  },
  {
    "text": "circumstances could be for example your team your legacy system and also your",
    "start": "55239",
    "end": "60500"
  },
  {
    "text": "strategy so micro-services come with a lot of complexities which requires",
    "start": "60500",
    "end": "65720"
  },
  {
    "text": "different skills different tools and a cultural shift to also DevOps culture as",
    "start": "65720",
    "end": "70939"
  },
  {
    "text": "well so and your team size and skill set and also your structure has a huge",
    "start": "70939",
    "end": "76939"
  },
  {
    "text": "impact on what is manageable for you especially when you start with a small",
    "start": "76939",
    "end": "81950"
  },
  {
    "text": "team with less for DevOps practices in place it will have a huge impact on on",
    "start": "81950",
    "end": "87979"
  },
  {
    "text": "your velocity of your transformation process and especially if you have to take care of a legacy system so it's not",
    "start": "87979",
    "end": "94820"
  },
  {
    "text": "going a fight it's still there that you have to maintain and the more you let the more maintenance effort you have to",
    "start": "94820",
    "end": "100100"
  },
  {
    "text": "put in your legacy system the less time is available for your transformational process and also the environment itself",
    "start": "100100",
    "end": "107060"
  },
  {
    "text": "has is impacting the journey as well for example if you're running on an on-premise environment or on plant",
    "start": "107060",
    "end": "114319"
  },
  {
    "text": "native where all your services are managed for example a managed API service or in on an environment where",
    "start": "114319",
    "end": "121460"
  },
  {
    "text": "you have to everything and maintain everything and operate everything and if your strategy",
    "start": "121460",
    "end": "126610"
  },
  {
    "text": "is to implement new features in a very short period of time because you have to",
    "start": "126610",
    "end": "132940"
  },
  {
    "text": "match some timelines and also some milestones you are really challenged and",
    "start": "132940",
    "end": "138130"
  },
  {
    "text": "how to implement these new requirements so do these new you prime ends go up to the back to the models again because you",
    "start": "138130",
    "end": "144640"
  },
  {
    "text": "have to meet timelines or can I add in the services and I have a little bit more time to give you background so I am",
    "start": "144640",
    "end": "162820"
  },
  {
    "start": "158000",
    "end": "158000"
  },
  {
    "text": "the former CTO of just software and that's a startup in Hamburg and it just",
    "start": "162820",
    "end": "168610"
  },
  {
    "text": "saw very developing a just social just social is a collaboration tool that",
    "start": "168610",
    "end": "174910"
  },
  {
    "text": "provides a digital workplace for communicating collaborating in teams so",
    "start": "174910",
    "end": "180930"
  },
  {
    "text": "this is not working I'm sorry and to get back up so we started in 2010",
    "start": "181530",
    "end": "189400"
  },
  {
    "text": "with the monolith in every aspect so we had one team working on one collaboration of product which was based",
    "start": "189400",
    "end": "196330"
  },
  {
    "text": "on one code base based on one technology stack and after a while everything got",
    "start": "196330",
    "end": "203170"
  },
  {
    "text": "bigger so we had we had to adding were having more features to our product",
    "start": "203170",
    "end": "208300"
  },
  {
    "text": "itself our team was growing and also new news new users who increased came into the",
    "start": "208300",
    "end": "216010"
  },
  {
    "text": "play and this usually seems to be very very great but on the other side",
    "start": "216010",
    "end": "221230"
  },
  {
    "text": "everything that got kind of clunky because everything was tied together so for example from the organizational",
    "start": "221230",
    "end": "228010"
  },
  {
    "text": "perspective our meetings and decisions and discussions took longer than",
    "start": "228010",
    "end": "233380"
  },
  {
    "text": "original and also adding new features constantly to our product was affecting",
    "start": "233380",
    "end": "239530"
  },
  {
    "text": "that our user experience and user interface for our product was suffering",
    "start": "239530",
    "end": "245110"
  },
  {
    "text": "so instead of solving our customers problem very easily we were confusing",
    "start": "245110",
    "end": "250959"
  },
  {
    "text": "them on the other side also on our software architecture itself it was still monolith and was very hard very",
    "start": "250959",
    "end": "258310"
  },
  {
    "text": "complicated to new features without impacting the entire system and was not easy to to release new changes very soon",
    "start": "258310",
    "end": "265930"
  },
  {
    "text": "because we have to rebuild and we deploy everything even though if we just add or modify one single line of code so you",
    "start": "265930",
    "end": "273039"
  },
  {
    "text": "will features release very slowly and they're developed a kind of need to shift and split things so three years",
    "start": "273039",
    "end": "282160"
  },
  {
    "text": "ago we changed our product vision our",
    "start": "282160",
    "end": "287199"
  },
  {
    "text": "product strategy and we had the idea to split our one collaboration product into",
    "start": "287199",
    "end": "295060"
  },
  {
    "text": "several collaboration ads and each each of them is taking care of specific use case so we had when we developed the",
    "start": "295060",
    "end": "302889"
  },
  {
    "text": "idea to have a favorite app for communicating in real-time for managing your tasks for sharing your documents",
    "start": "302889",
    "end": "309849"
  },
  {
    "text": "for managing your users and also the for enterprise social network in the mean",
    "start": "309849",
    "end": "316810"
  },
  {
    "text": "time we also split our one team into smaller separate teams of multiple teams",
    "start": "316810",
    "end": "323199"
  },
  {
    "text": "whether focus or whether it was a goal to establish small autonomous teams with",
    "start": "323199",
    "end": "328360"
  },
  {
    "text": "well-defined responsibilities and we assigned to each of them a specific set",
    "start": "328360",
    "end": "333370"
  },
  {
    "text": "of collaboration apps so that they can work at different parts of the system independently at their own speed without",
    "start": "333370",
    "end": "341139"
  },
  {
    "text": "an impact across all the teams so after we have split our one product into",
    "start": "341139",
    "end": "347050"
  },
  {
    "text": "several collaboration apps after we have split our one team into a smaller one was with well-defined responsibilities",
    "start": "347050",
    "end": "354159"
  },
  {
    "text": "the need so it was a kind of logical next step to also split our software",
    "start": "354159",
    "end": "360550"
  },
  {
    "text": "architecture in into micro services so",
    "start": "360550",
    "end": "365979"
  },
  {
    "start": "365000",
    "end": "365000"
  },
  {
    "text": "we started and with the idea of a straightforward process where start",
    "start": "365979",
    "end": "371889"
  },
  {
    "text": "where have your starting point as your monoliths and going straight to the end where you",
    "start": "371889",
    "end": "377180"
  },
  {
    "text": "m√°rio analysis 100% decomposed into micro-services so yeah this was kind of",
    "start": "377180",
    "end": "383460"
  },
  {
    "text": "like theory because reality gave you a really brutal lesson and this one is",
    "start": "383460",
    "end": "388530"
  },
  {
    "start": "385000",
    "end": "385000"
  },
  {
    "text": "that the journey to micro-services is is a way with a lot of detours also in",
    "start": "388530",
    "end": "395940"
  },
  {
    "text": "failure and it might never end so the",
    "start": "395940",
    "end": "402000"
  },
  {
    "start": "401000",
    "end": "401000"
  },
  {
    "text": "first approach that we did that we extracted one of our Colorado",
    "start": "402000",
    "end": "410430"
  },
  {
    "text": "collaboration apps was as taking care of document management as coexisting",
    "start": "410430",
    "end": "415680"
  },
  {
    "text": "service and develop it from scratch but it was not in expect equivalent instead",
    "start": "415680",
    "end": "421409"
  },
  {
    "text": "we also edit you new user interface and we added new features as well and also introduced a totally different data",
    "start": "421409",
    "end": "427349"
  },
  {
    "text": "structure and so but these this document",
    "start": "427349",
    "end": "432509"
  },
  {
    "text": "management that's called just drive is having the data authority over documents so it's the only one that can modify the",
    "start": "432509",
    "end": "438629"
  },
  {
    "text": "documents and each document itself is created by an author and an author is",
    "start": "438629",
    "end": "444479"
  },
  {
    "text": "stemming from the profile data which is still residing in the monitors itself so to avoid requesting the profile servers",
    "start": "444479",
    "end": "452340"
  },
  {
    "text": "each time when you're displaying a document we kept a local copy on inside",
    "start": "452340",
    "end": "457380"
  },
  {
    "text": "the document service and so so that we are independent from from a requesters",
    "start": "457380",
    "end": "463259"
  },
  {
    "text": "and call on the document service to the profile service or to the monitors at that time so but whenever a profile",
    "start": "463259",
    "end": "470370"
  },
  {
    "text": "itself that updated by the monitors it has to notify our document service so that we can then update the local copy",
    "start": "470370",
    "end": "477750"
  },
  {
    "text": "itself accordingly so the problem was",
    "start": "477750",
    "end": "484319"
  },
  {
    "start": "483000",
    "end": "483000"
  },
  {
    "text": "the lesson that we learned was that we took too many steps at once and that",
    "start": "484319",
    "end": "489750"
  },
  {
    "text": "slowed us down and so there's nothing wrong with creating",
    "start": "489750",
    "end": "495439"
  },
  {
    "text": "a coexisting service from scratch but the problem is that we involve too many",
    "start": "495439",
    "end": "501589"
  },
  {
    "text": "other steps as well so he also introduced a new whose interface and new data structure and also added more",
    "start": "501589",
    "end": "507139"
  },
  {
    "text": "features than the original equivalent and in the meantime we also had to",
    "start": "507139",
    "end": "512209"
  },
  {
    "text": "maintain and run our current systems and we have to match also and we have to meet also timelines so thing was that",
    "start": "512209",
    "end": "521268"
  },
  {
    "text": "the time that we originally anticipated was what's not could not meet that",
    "start": "521269",
    "end": "526490"
  },
  {
    "text": "milestone at all so it took far longer than we originally anticipated and it",
    "start": "526490",
    "end": "532220"
  },
  {
    "text": "was a frustrating end because he could not get it some very easy release very",
    "start": "532220",
    "end": "537259"
  },
  {
    "text": "easily they were very soon release so what we did instead was the next one was",
    "start": "537259",
    "end": "543199"
  },
  {
    "text": "that we start started the next one was manageable step and one at a time and so",
    "start": "543199",
    "end": "551779"
  },
  {
    "start": "544000",
    "end": "544000"
  },
  {
    "text": "the next one was that we used those one that are easier to extract that has let's disappear dependencies in meymaneh",
    "start": "551779",
    "end": "557750"
  },
  {
    "text": "and one of this so it this accelerates your new extraction process and it gives",
    "start": "557750",
    "end": "564439"
  },
  {
    "text": "you the ability to gain experiences with micro-services but also really expection",
    "start": "564439",
    "end": "570589"
  },
  {
    "text": "process in particular as well and the next one is also focusing on those services that gives you the greatest",
    "start": "570589",
    "end": "577730"
  },
  {
    "text": "benefit after you have extracted those and this could be for examples potential",
    "start": "577730",
    "end": "583250"
  },
  {
    "text": "candidates that are changing frequently so after we have extracted that one as a",
    "start": "583250",
    "end": "588740"
  },
  {
    "text": "new service you can release the new changes very easily and very quickly or",
    "start": "588740",
    "end": "594529"
  },
  {
    "text": "you can also identify next candidates as those ones that are using different",
    "start": "594529",
    "end": "599899"
  },
  {
    "text": "resources for example if you have a service that reads needs a lot of CPU power you can then or our memory",
    "start": "599899",
    "end": "606860"
  },
  {
    "text": "consumption then you can extract those service next and then after the extraction you can deploy it on a",
    "start": "606860",
    "end": "613279"
  },
  {
    "text": "different machine with different power and can scale it more easily and another",
    "start": "613279",
    "end": "619910"
  },
  {
    "text": "approach that we did is we even cut the decomposition process in",
    "start": "619910",
    "end": "626000"
  },
  {
    "text": "smaller steps so it was kind of like incremental process and we split it in nickels decomposition process in steps",
    "start": "626000",
    "end": "633139"
  },
  {
    "text": "and was an incremental approach in terms of that we went to top to down so we extracted the user interface first then",
    "start": "633139",
    "end": "640610"
  },
  {
    "text": "we extracted the business logic and afterwards limited data storage and then we had a full extracted and aiko service",
    "start": "640610",
    "end": "647630"
  },
  {
    "text": "at that time another problem is that we",
    "start": "647630",
    "end": "655339"
  },
  {
    "start": "650000",
    "end": "650000"
  },
  {
    "text": "have not solved security in terms of authorization early on from the very",
    "start": "655339",
    "end": "661250"
  },
  {
    "text": "beginning and so and yeah postponing handling authorization is very",
    "start": "661250",
    "end": "667399"
  },
  {
    "text": "counterproductive because with every new service that you would like to implement you are confronted with a question how",
    "start": "667399",
    "end": "674750"
  },
  {
    "text": "to handle an authorization and if it's not solved at that time there are two",
    "start": "674750",
    "end": "681100"
  },
  {
    "text": "counterproductive consequences you either put the new service into the",
    "start": "681100",
    "end": "688130"
  },
  {
    "text": "location or authorization is still solved and this is your monolith and if you put it in the monolith your ma knows",
    "start": "688130",
    "end": "694040"
  },
  {
    "text": "girls instead of shrinks and your feeding you one of this again and the other one is I will that that what",
    "start": "694040",
    "end": "702680"
  },
  {
    "text": "happened as a consequence as well is that some teams started to reemployment",
    "start": "702680",
    "end": "708639"
  },
  {
    "text": "authorization was every service and to give you a little context about our",
    "start": "708639",
    "end": "715880"
  },
  {
    "text": "authorization our authorization is really really fine grained and so for example you can modify or you can adjust",
    "start": "715880",
    "end": "724819"
  },
  {
    "text": "the authorization down to object levels so if you for example I would like to upload a document you",
    "start": "724819",
    "end": "731160"
  },
  {
    "text": "have to have the permission to upload a specific share so as your share is controlling the authorization of your",
    "start": "731160",
    "end": "737670"
  },
  {
    "text": "document the other thing is that also our authorization is inter-service",
    "start": "737670",
    "end": "743280"
  },
  {
    "text": "dependent or inter-app dependent so for example if you would like to upload a",
    "start": "743280",
    "end": "748290"
  },
  {
    "text": "document in it was in the content page this authorization is then controlled by",
    "start": "748290",
    "end": "754860"
  },
  {
    "text": "the page application so and the document itself is sitting on an on a different",
    "start": "754860",
    "end": "760830"
  },
  {
    "text": "service so you have also into a service related to authorization and what happened when we implemented the",
    "start": "760830",
    "end": "768620"
  },
  {
    "text": "authorization on service level it's not only that we really we were diplucate in",
    "start": "768620",
    "end": "773850"
  },
  {
    "text": "code and we implementing the same business nursing again and again but also we had to copy data back and forth",
    "start": "773850",
    "end": "781380"
  },
  {
    "text": "because these services were interdependent and this is a core thing",
    "start": "781380",
    "end": "786540"
  },
  {
    "text": "is that authorization is a cross-cutting concern which has to be implemented in",
    "start": "786540",
    "end": "792510"
  },
  {
    "text": "our case as a cross-cut as a as a central service and so saltier",
    "start": "792510",
    "end": "798630"
  },
  {
    "text": "authorization handling or you cross-cutting concerns relating to authentication authorization or early it",
    "start": "798630",
    "end": "804750"
  },
  {
    "text": "must be the first step that's my opinion in your micro services journey otherwise you end up making some dear - dear tours",
    "start": "804750",
    "end": "813570"
  },
  {
    "text": "that will be very painful because for example if you try to merge the services",
    "start": "813570",
    "end": "819660"
  },
  {
    "text": "that you have real implemented per cell on service level it's very very expensive and what's also very expensive",
    "start": "819660",
    "end": "830190"
  },
  {
    "start": "826000",
    "end": "826000"
  },
  {
    "text": "as a lesser line strategy so we split our product into separate collaboration",
    "start": "830190",
    "end": "835260"
  },
  {
    "text": "apps and we had separate teams working with as autonomous teams was well defined",
    "start": "835260",
    "end": "841420"
  },
  {
    "text": "responsibilities and we also established separate services and they all had their own artifact because and assigning a its",
    "start": "841420",
    "end": "849550"
  },
  {
    "text": "own CI and the CD pipeline but the problem is that be bundled them together",
    "start": "849550",
    "end": "855580"
  },
  {
    "text": "again at the deployment and this there was the kind of like strategy ships",
    "start": "855580",
    "end": "861790"
  },
  {
    "text": "sneaked in and because we are running our solution also on Prem environment",
    "start": "861790",
    "end": "868300"
  },
  {
    "text": "and the customer installation on customer premier Ironmen increased so",
    "start": "868300",
    "end": "874630"
  },
  {
    "text": "and the customer themselves they they requested not as deployment / service",
    "start": "874630",
    "end": "880600"
  },
  {
    "text": "but instead they all wanted to have a bundle deployment and so the problem is",
    "start": "880600",
    "end": "885610"
  },
  {
    "text": "that we added a lot of cost to separating everything but in the end we",
    "start": "885610",
    "end": "890620"
  },
  {
    "text": "were deploying it in one bundle and this is something that you can't really benefit from a micro services and it's",
    "start": "890620",
    "end": "897160"
  },
  {
    "text": "full extent if you then just deployed all together again instead you should have should be able",
    "start": "897160",
    "end": "904930"
  },
  {
    "text": "to release one service independently so it's really really important that you",
    "start": "904930",
    "end": "911260"
  },
  {
    "text": "have to look at your strategy and to figure out what slows you down and what holds you hold you back in your new",
    "start": "911260",
    "end": "917830"
  },
  {
    "text": "micro services journey and try to trust your surgery as well the next point is",
    "start": "917830",
    "end": "927450"
  },
  {
    "start": "923000",
    "end": "923000"
  },
  {
    "text": "that with every stateful service that manages own data comes with overhead and",
    "start": "927450",
    "end": "936720"
  },
  {
    "text": "so we have for every service you have to set up a data storage and",
    "start": "936720",
    "end": "942860"
  },
  {
    "text": "you have to maintain it and in case of that you keep a local copy of data in",
    "start": "942860",
    "end": "950150"
  },
  {
    "text": "your mic reserves and that relates to other service you also have to take home",
    "start": "950150",
    "end": "957350"
  },
  {
    "text": "to take care of it that you have to keep it in sync and this adds a lot of that",
    "start": "957350",
    "end": "964310"
  },
  {
    "text": "adds a lot of overhead to your to your introduction of new services if you have",
    "start": "964310",
    "end": "970190"
  },
  {
    "text": "to do so many steps and so what we",
    "start": "970190",
    "end": "978020"
  },
  {
    "text": "introduced them recently that we try to lower the barrier to entry for new",
    "start": "978020",
    "end": "984020"
  },
  {
    "text": "services with Apache kafka streams so who of you have heard of Apache kafka",
    "start": "984020",
    "end": "990410"
  },
  {
    "text": "streams before right and it's called one quarter and who loved you is running",
    "start": "990410",
    "end": "997940"
  },
  {
    "text": "Apache kafka streams and production okay that's a cute okay so before I go into",
    "start": "997940",
    "end": "1008980"
  },
  {
    "start": "1007000",
    "end": "1007000"
  },
  {
    "text": "copper to cut the streams as I go a little bit back to to the interaction",
    "start": "1008980",
    "end": "1014950"
  },
  {
    "text": "communication styles of services so usually when you introduce or when you",
    "start": "1014950",
    "end": "1020230"
  },
  {
    "text": "establish micro services you have to to make sure you have to take care how the",
    "start": "1020230",
    "end": "1025959"
  },
  {
    "text": "services are interacting with each other and there are different communication styles so you can follow all the",
    "start": "1025960",
    "end": "1032380"
  },
  {
    "text": "requests driven approach where each service is calling another service directly over its API in a command style",
    "start": "1032380",
    "end": "1040150"
  },
  {
    "text": "where you expect and it's an action be executed on the receiving end or a",
    "start": "1040150",
    "end": "1046180"
  },
  {
    "text": "security where you retrieve information and so this gives the sender of the request the control over the request",
    "start": "1046180",
    "end": "1053890"
  },
  {
    "text": "flow in case you are dealing with centralized communication but on the other hand it's also",
    "start": "1053890",
    "end": "1061220"
  },
  {
    "text": "increases the coupling between the services or because services are now very tied together in the event-driven",
    "start": "1061220",
    "end": "1069730"
  },
  {
    "text": "communication style you are instead communicating via events and so on the",
    "start": "1069730",
    "end": "1076760"
  },
  {
    "text": "one side you are submitting events to your event stream and and on the other side consumers are consuming this event",
    "start": "1076760",
    "end": "1086000"
  },
  {
    "text": "and independently on fights on these events so so the the requests flow or",
    "start": "1086000",
    "end": "1094400"
  },
  {
    "text": "the the logic itself it's its flipped it's now not sender that controls the",
    "start": "1094400",
    "end": "1099950"
  },
  {
    "text": "trip request fall it's now flipped to the to the receiver who takes control over the request flow itself and so we",
    "start": "1099950",
    "end": "1107510"
  },
  {
    "text": "achieve higher higher decoupling between those services internal and artillery and also plug ability and you can also",
    "start": "1107510",
    "end": "1114410"
  },
  {
    "text": "the question arise as a shall we run with a hybrid model where you combine those post patterns event-driven and",
    "start": "1114410",
    "end": "1120920"
  },
  {
    "text": "also request ribbons and another question that arise when introducing",
    "start": "1120920",
    "end": "1127400"
  },
  {
    "start": "1124000",
    "end": "1124000"
  },
  {
    "text": "micro services is also how to handle how to manage data so in a hybrid model",
    "start": "1127400",
    "end": "1132860"
  },
  {
    "text": "you're combining the event-driven and the Eucharist driven approach as I as I mentioned earlier and so in this case",
    "start": "1132860",
    "end": "1140540"
  },
  {
    "text": "you are listening to events and but if you are when if you are depending on",
    "start": "1140540",
    "end": "1148130"
  },
  {
    "text": "some information from another service you are doing requests driven remote Cori very directly to your source",
    "start": "1148130",
    "end": "1155390"
  },
  {
    "text": "so in this case the event stream is purely used for notification an additional data is requested directly so",
    "start": "1155390",
    "end": "1163280"
  },
  {
    "text": "as I mentioned before the requests driven approach tying your services coupling your services",
    "start": "1163280",
    "end": "1168940"
  },
  {
    "text": "tighter together so it's a still kind of like high compliment in those services",
    "start": "1168940",
    "end": "1178870"
  },
  {
    "text": "another approach is then that I have demonstrated when we extracted our",
    "start": "1179770",
    "end": "1184880"
  },
  {
    "text": "document service as a coexisting service from scratch is that you keep a local",
    "start": "1184880",
    "end": "1191570"
  },
  {
    "text": "copy because one of the approach that I and the hybrid model is that you try to avoid the remote requester out query to",
    "start": "1191570",
    "end": "1200570"
  },
  {
    "text": "your service itself and you can internalize your request by keeping or",
    "start": "1200570",
    "end": "1205850"
  },
  {
    "text": "creating a local copy of the data that you need from the other services so in",
    "start": "1205850",
    "end": "1211040"
  },
  {
    "text": "the in our example with the document service we are we will have we're",
    "start": "1211040",
    "end": "1216970"
  },
  {
    "text": "holding a copy of the profile but only which is related which is related to the",
    "start": "1216970",
    "end": "1223280"
  },
  {
    "text": "author data like first name and last name ID and not not for example not the address because this does not matter in",
    "start": "1223280",
    "end": "1229460"
  },
  {
    "text": "our document service and this one is giving you better decoupling between",
    "start": "1229460",
    "end": "1235820"
  },
  {
    "text": "those services because you're not occurring there the other service as a",
    "start": "1235820",
    "end": "1241540"
  },
  {
    "text": "remote call and on the other side is also increases your autonomy because now",
    "start": "1241540",
    "end": "1247430"
  },
  {
    "text": "the document service itself can now do it was the local copy whatever it likes to do and also the joints are now more",
    "start": "1247430",
    "end": "1256400"
  },
  {
    "text": "efficient because the joins are now handled locally instead of over the",
    "start": "1256400",
    "end": "1261680"
  },
  {
    "text": "network so in this case the events are not only used for notification but also",
    "start": "1261680",
    "end": "1268310"
  },
  {
    "text": "for transferring this state because whenever for example the Profi service has a profile change of the profile",
    "start": "1268310",
    "end": "1275390"
  },
  {
    "text": "update it sends a message to the message stream and the document service is",
    "start": "1275390",
    "end": "1282410"
  },
  {
    "text": "updating the the local copy of the AUSA data which stemming from the profile accordingly so",
    "start": "1282410",
    "end": "1289100"
  },
  {
    "text": "if you're transferring States from the profile service to the document service",
    "start": "1289100",
    "end": "1296290"
  },
  {
    "text": "and another aspect of when you let it's",
    "start": "1296710",
    "end": "1301730"
  },
  {
    "text": "data related is the source of truth and a traditional event driven system you",
    "start": "1301730",
    "end": "1307430"
  },
  {
    "text": "are listening to events and you are saving its its actions and in a database",
    "start": "1307430",
    "end": "1314090"
  },
  {
    "text": "in a local database and you are raising new events as well so the thing is what",
    "start": "1314090",
    "end": "1319910"
  },
  {
    "text": "what has to be considered in this traditional event present system that you have to deal with multiple sources",
    "start": "1319910",
    "end": "1326510"
  },
  {
    "text": "of truth because for your for your service that has its internal database",
    "start": "1326510",
    "end": "1332780"
  },
  {
    "text": "the database itself is its internal source of truth but for all other",
    "start": "1332780",
    "end": "1337790"
  },
  {
    "text": "services for the other services it's the",
    "start": "1337790",
    "end": "1344330"
  },
  {
    "text": "event that are there exam source of truth and this comes with issues because",
    "start": "1344330",
    "end": "1349700"
  },
  {
    "text": "you're doing a dual right on the database and also for triggering into any event and so you have to take care",
    "start": "1349700",
    "end": "1357500"
  },
  {
    "text": "of making this this this transactions consistent and on the other side the",
    "start": "1357500",
    "end": "1364190"
  },
  {
    "text": "data model of the database and also the data and the events can diverge over the time so that you for examples on",
    "start": "1364190",
    "end": "1371930"
  },
  {
    "text": "consuming services have to deal with another data model than for example the",
    "start": "1371930",
    "end": "1377990"
  },
  {
    "text": "data model in your database so an alternative to this is to merge those",
    "start": "1377990",
    "end": "1386840"
  },
  {
    "text": "flows into one one-to-one store and to",
    "start": "1386840",
    "end": "1392540"
  },
  {
    "text": "make your events as first-class citizens that can be used as a data store itself",
    "start": "1392540",
    "end": "1398540"
  },
  {
    "text": "an event can then be represented as a whole fact which is then will represent",
    "start": "1398540",
    "end": "1404509"
  },
  {
    "text": "data record in its entirety or also as a delta that you for example just at yeah",
    "start": "1404509",
    "end": "1413719"
  },
  {
    "text": "the Delta affection and you then can derive the state from the Delta of the",
    "start": "1413719",
    "end": "1419599"
  },
  {
    "text": "events as well and here comes Kafka into",
    "start": "1419599",
    "end": "1427190"
  },
  {
    "text": "play that is very good at storing events",
    "start": "1427190",
    "end": "1436249"
  },
  {
    "text": "because it's keeping events back to disk and it's a it's a very it's a",
    "start": "1436249",
    "end": "1444349"
  },
  {
    "text": "distributed fault tolerance a scalable commit lock which was originally created",
    "start": "1444349",
    "end": "1450499"
  },
  {
    "text": "by LinkedIn and it's now open source and so how does it work",
    "start": "1450499",
    "end": "1455619"
  },
  {
    "text": "and so in Kafka you have a producer that could be one or two service for example",
    "start": "1455619",
    "end": "1461179"
  },
  {
    "text": "our profile service and this rides records to a topic a topic itself it's",
    "start": "1461179",
    "end": "1467690"
  },
  {
    "text": "kind of like logical category or feet feet name for example and topic itself",
    "start": "1467690",
    "end": "1473629"
  },
  {
    "text": "it's consisting of one or more partitions a petition itself it's an",
    "start": "1473629",
    "end": "1478789"
  },
  {
    "text": "immutable ordered sequence of records that the producer rights rights its",
    "start": "1478789",
    "end": "1487969"
  },
  {
    "text": "messages to its records to and it's so whenever a producer writes a message to",
    "start": "1487969",
    "end": "1495049"
  },
  {
    "text": "the topic it appends the message the entry itself to the end of the petition",
    "start": "1495049",
    "end": "1501229"
  },
  {
    "text": "and the producer also controls into which petition he writes his record and",
    "start": "1501229",
    "end": "1508489"
  },
  {
    "text": "this could be wrong Robin mechanism but also kind of like semantic petition function for example the profile ID the",
    "start": "1508489",
    "end": "1516319"
  },
  {
    "text": "idea of the message itself and on the on the other hand we have the consumers",
    "start": "1516319",
    "end": "1524269"
  },
  {
    "text": "that are consuming those messages from the topic they subscribe to and the",
    "start": "1524269",
    "end": "1531409"
  },
  {
    "text": "petition itself is that each partition itself is assigned to only one consumer",
    "start": "1531409",
    "end": "1536690"
  },
  {
    "text": "in the a group and so that you have a petition",
    "start": "1536690",
    "end": "1541870"
  },
  {
    "text": "exclusive exclusive it consumed on the one side and the effect of this is that",
    "start": "1541870",
    "end": "1547690"
  },
  {
    "text": "you have a load balancing between the",
    "start": "1547690",
    "end": "1553510"
  },
  {
    "text": "consumer instances of a consumer group so I forgot to mention that each",
    "start": "1553510",
    "end": "1558640"
  },
  {
    "text": "consumer its consumers related to consumer group so whenever you yeah when you have your service for example and",
    "start": "1558640",
    "end": "1564820"
  },
  {
    "text": "you're running different service instances so the different service instance is a consumer and then relates to your server service in as a consumer",
    "start": "1564820",
    "end": "1573340"
  },
  {
    "text": "group so and because we have each petition is assigned to exactly one",
    "start": "1573340",
    "end": "1578500"
  },
  {
    "text": "consumer instant was in the group what we achieve by this is that each message",
    "start": "1578500",
    "end": "1583720"
  },
  {
    "text": "still is load balance between the consumer instance of your consumer group",
    "start": "1583720",
    "end": "1588790"
  },
  {
    "text": "and also broadcasted to each consumer group and on the other side also which",
    "start": "1588790",
    "end": "1596650"
  },
  {
    "text": "is very elegant handover kafka is that each consumer can control its position and parapet per",
    "start": "1596650",
    "end": "1602620"
  },
  {
    "text": "petition is called offset so this",
    "start": "1602620",
    "end": "1607650"
  },
  {
    "text": "guarantees that opechee itself is scalable for tolerant and very fast so the topic itself for",
    "start": "1607650",
    "end": "1615490"
  },
  {
    "text": "example can also be scaled out to several nodes so it might be the case",
    "start": "1615490",
    "end": "1620560"
  },
  {
    "text": "that one topic does not fit in one seven out and you can add separate server nodes itself and and then on the other",
    "start": "1620560",
    "end": "1629950"
  },
  {
    "text": "side the messages are also load balanced as i've mentioned before which is then",
    "start": "1629950",
    "end": "1635430"
  },
  {
    "text": "increasing the scallop is scalability and you can also add more petitions to",
    "start": "1635430",
    "end": "1642520"
  },
  {
    "text": "your topic and this also is increasing your parallelism of your system of his",
    "start": "1642520",
    "end": "1648040"
  },
  {
    "text": "service and can you can add capacity without 0 Delta it was the adult downtime the for tolerance itself it's",
    "start": "1648040",
    "end": "1656740"
  },
  {
    "text": "created by the fact that the data starts to disk and the the partition itself if",
    "start": "1656740",
    "end": "1663350"
  },
  {
    "text": "you have more than one note running replicated so that your Europe does",
    "start": "1663350",
    "end": "1670910"
  },
  {
    "text": "itself can for example shut down and it's still running and also that the",
    "start": "1670910",
    "end": "1677690"
  },
  {
    "text": "consumers controlling its offset have the effect if one consumer instant Goes Down and the controller controls its",
    "start": "1677690",
    "end": "1685130"
  },
  {
    "text": "offered and committing it to the Kafka controller where the last position was he was reading from out from from from",
    "start": "1685130",
    "end": "1692150"
  },
  {
    "text": "the topic itself or from the partition so what for exactly what it was when one consumer goes down and the Kafka",
    "start": "1692150",
    "end": "1700160"
  },
  {
    "text": "controller can rebalance then the partitions to the remaining and consumers which is really good for fault",
    "start": "1700160",
    "end": "1706250"
  },
  {
    "text": "tolerance and it's also very fast I only had a memory from 2016 so LinkedIn was",
    "start": "1706250",
    "end": "1713320"
  },
  {
    "text": "processing once out 1.4 trillion messages a day about over 1,400 brokers",
    "start": "1713320",
    "end": "1719960"
  },
  {
    "text": "so yeah it's very fast and what Kafka",
    "start": "1719960",
    "end": "1725930"
  },
  {
    "start": "1724000",
    "end": "1724000"
  },
  {
    "text": "combines is it combines a messaging system a storage system and also streaming platform so as a messaging",
    "start": "1725930",
    "end": "1732740"
  },
  {
    "text": "system it it provides on the one hand",
    "start": "1732740",
    "end": "1738050"
  },
  {
    "text": "side a queuing mechanism because each message goes to exactly one consumer",
    "start": "1738050",
    "end": "1744050"
  },
  {
    "text": "instance in a consumer group and also publish/subscribe mechanism because each message is broadcasted to every consumer",
    "start": "1744050",
    "end": "1751550"
  },
  {
    "text": "group it also provides a very good storage system because data is thought and on disk and it's also fault tolerant",
    "start": "1751550",
    "end": "1759170"
  },
  {
    "text": "and very very scalable and also provides a streaming platform where you can process an input stream process of my",
    "start": "1759170",
    "end": "1766970"
  },
  {
    "text": "input semen generate an output stream so I'm now focusing on the stream platform and so as I said there's a",
    "start": "1766970",
    "end": "1774040"
  },
  {
    "start": "1772000",
    "end": "1772000"
  },
  {
    "text": "possibility two possibilities in the streaming platform that's on the one side is stream processing but also data",
    "start": "1774040",
    "end": "1781270"
  },
  {
    "text": "integration and with stream processing you are constantly you know you're",
    "start": "1781270",
    "end": "1786370"
  },
  {
    "text": "generating a stream of input data that's continuously updating and you performs",
    "start": "1786370",
    "end": "1791530"
  },
  {
    "text": "some some action on this stream and generate also then another an output",
    "start": "1791530",
    "end": "1796780"
  },
  {
    "text": "stream on this you can use it also as a data integration and you can integrate",
    "start": "1796780",
    "end": "1803040"
  },
  {
    "text": "for example a relational database and also as a source and also for example",
    "start": "1803040",
    "end": "1809530"
  },
  {
    "text": "elastic search as as a sync so for example that you are on the same side",
    "start": "1809530",
    "end": "1815350"
  },
  {
    "text": "for example that you capture the events and streaming them to transform an",
    "start": "1815350",
    "end": "1822340"
  },
  {
    "text": "illness it's into a stream and connect it then for example to elastic short search and on the other side also you",
    "start": "1822340",
    "end": "1828940"
  },
  {
    "text": "can integrate a relational database so whenever you do because a dated relational database is consisting",
    "start": "1828940",
    "end": "1835530"
  },
  {
    "text": "containing a transactional log as well and so whenever an updates whenever your",
    "start": "1835530",
    "end": "1841390"
  },
  {
    "text": "database external database that's up gets updated it's the stream can can",
    "start": "1841390",
    "end": "1847929"
  },
  {
    "text": "then feed those updates into your message system as well so it can",
    "start": "1847929",
    "end": "1854710"
  },
  {
    "text": "integrate external data system either as the sources also as the same so what is",
    "start": "1854710",
    "end": "1863410"
  },
  {
    "text": "the stream itself so a stream itself is an unbounded ordered sequence of data",
    "start": "1863410",
    "end": "1870010"
  },
  {
    "text": "records that they and they have a well-defined structure it's representing",
    "start": "1870010",
    "end": "1875050"
  },
  {
    "text": "a key value pair and this stream is continuously updating and kafka itself",
    "start": "1875050",
    "end": "1880660"
  },
  {
    "text": "it's it's the topic that can be loaded into a stream so so Kafka itself",
    "start": "1880660",
    "end": "1893290"
  },
  {
    "text": "provides a stream API and the stream API provides a",
    "start": "1893290",
    "end": "1898780"
  },
  {
    "text": "specific language that lets you joining streams or filter with them or group",
    "start": "1898780",
    "end": "1904780"
  },
  {
    "text": "them or aggregate them and the essential part here is that the stream API is it's",
    "start": "1904780",
    "end": "1915190"
  },
  {
    "text": "running on you is running on your code in your micro service and it's not running on the broker so this means this",
    "start": "1915190",
    "end": "1921850"
  },
  {
    "text": "the streaming processing itself is running a process of your micro service",
    "start": "1921850",
    "end": "1927310"
  },
  {
    "text": "and and it's that startup when you when you start up your service itself when",
    "start": "1927310",
    "end": "1934720"
  },
  {
    "text": "you created a stream out of a topic for example this topic gets loaded into the stream as startup time and then process",
    "start": "1934720",
    "end": "1941530"
  },
  {
    "text": "it continuously and the topics themselves or the streams themselves are",
    "start": "1941530",
    "end": "1947310"
  },
  {
    "text": "buffered in Kafka was in state store that's an lightweight embedded database",
    "start": "1947310",
    "end": "1954640"
  },
  {
    "text": "it's rocks DB that's a key key value pair a database store and you cannot but",
    "start": "1954640",
    "end": "1962350"
  },
  {
    "text": "occur also create your own state store as well it came to this one in the next slide but what was really really",
    "start": "1962350",
    "end": "1968890"
  },
  {
    "text": "important here is that his dreams now made available wherever you need it and",
    "start": "1968890",
    "end": "1975280"
  },
  {
    "text": "it's it's it's located in your own life service it's not running on an external",
    "start": "1975280",
    "end": "1981130"
  },
  {
    "text": "system and this also lets us using my",
    "start": "1981130",
    "end": "1989680"
  },
  {
    "start": "1985000",
    "end": "1985000"
  },
  {
    "text": "Kafka streams for materialized views so as I mentioned before when we had the",
    "start": "1989680",
    "end": "1996280"
  },
  {
    "text": "usual usual setup of the micro service stateful micro service we had to set up",
    "start": "1996280",
    "end": "2002130"
  },
  {
    "text": "database and keeping a local copy for all the data that's sitting in another",
    "start": "2002130",
    "end": "2008130"
  },
  {
    "text": "service and this we don't have to do anymore so instead what we do is we",
    "start": "2008130",
    "end": "2014370"
  },
  {
    "text": "create a screen in our service itself for example from the document topic so",
    "start": "2014370",
    "end": "2022050"
  },
  {
    "text": "when I want to like when I would like to to display in itself I create a stream from the",
    "start": "2022050",
    "end": "2027470"
  },
  {
    "text": "document topic and I would like to enrich it with the author data this is related versus reciting or stemming from",
    "start": "2027470",
    "end": "2034070"
  },
  {
    "text": "from the profile service and stemming from the profile topic and what I do is",
    "start": "2034070",
    "end": "2040280"
  },
  {
    "text": "I create a table from the profile topic",
    "start": "2040280",
    "end": "2045890"
  },
  {
    "text": "for enriching my my data from the stream itself and those stream in those table I",
    "start": "2045890",
    "end": "2054260"
  },
  {
    "text": "can join together and as a result a credit can create another state store in",
    "start": "2054260",
    "end": "2059300"
  },
  {
    "text": "my own service and this is all running in my service itself and this state saw",
    "start": "2059300",
    "end": "2065090"
  },
  {
    "text": "that I have created as a result from joining my stream and on my topic my table can be used as from from outside",
    "start": "2065090",
    "end": "2073158"
  },
  {
    "text": "so I can access it I can place an API on top of it and then requesting the",
    "start": "2073159",
    "end": "2078378"
  },
  {
    "text": "information from this data and the good thing about this is that you don't have to take care anymore updating your local",
    "start": "2078379",
    "end": "2085520"
  },
  {
    "text": "copy so it's just it's so just coming automatically that your document data",
    "start": "2085520",
    "end": "2092628"
  },
  {
    "text": "along with its alpha data's it's automatically updated",
    "start": "2092629",
    "end": "2097540"
  },
  {
    "start": "2100000",
    "end": "2100000"
  },
  {
    "text": "so what Kefka streams provide is especially for materialized views that",
    "start": "2100300",
    "end": "2106160"
  },
  {
    "text": "it's lower the barrier to entry for your new service so you don't have to set up a separate data storage anymore and you",
    "start": "2106160",
    "end": "2113150"
  },
  {
    "text": "don't have to provide establish local copies or caches to set up and to keep",
    "start": "2113150",
    "end": "2119540"
  },
  {
    "text": "in sync and you don't have a remote call to the other servers and increasing now",
    "start": "2119540",
    "end": "2126410"
  },
  {
    "text": "adopt a decoupling and your materialized view itself it's always up to date and",
    "start": "2126410",
    "end": "2133040"
  },
  {
    "text": "it comes with a scalable and faltering and fast data storage that Kafka provides for you so it's reducing the",
    "start": "2133040",
    "end": "2143060"
  },
  {
    "text": "overhead and that you have usually when you have to meet to to manage data and increasing",
    "start": "2143060",
    "end": "2149820"
  },
  {
    "text": "your performance and also at your autonomy because each service can now run on its own streams and can generate",
    "start": "2149820",
    "end": "2158700"
  },
  {
    "text": "its own materialized view and it's all updated from Kafka you don't have to",
    "start": "2158700",
    "end": "2165330"
  },
  {
    "text": "take care of synchronizing anything anymore so if we could start the journey",
    "start": "2165330",
    "end": "2174840"
  },
  {
    "start": "2172000",
    "end": "2172000"
  },
  {
    "text": "again what would we do differently and",
    "start": "2174840",
    "end": "2179970"
  },
  {
    "text": "as I said in the beginning yeah we we would start with one step at a time and",
    "start": "2179970",
    "end": "2186540"
  },
  {
    "text": "also adjust this step to your size that you can manage don't take a pill that's",
    "start": "2186540",
    "end": "2191970"
  },
  {
    "text": "too big to swallow and sustar was manageable steps and try to start with",
    "start": "2191970",
    "end": "2199650"
  },
  {
    "text": "with small services that can work you can achieve very fast experiences micro",
    "start": "2199650",
    "end": "2206550"
  },
  {
    "text": "services and also with the extraction process of micro services and also take",
    "start": "2206550",
    "end": "2211860"
  },
  {
    "text": "care of get cross-cutting concerns that are for example authentication authorization in our case it was",
    "start": "2211860",
    "end": "2218010"
  },
  {
    "text": "authorization and take care of those who are very early because whenever you introduce some new service and this",
    "start": "2218010",
    "end": "2224940"
  },
  {
    "text": "cross-cutting concerns are not resolved soft at that moment you are trying you",
    "start": "2224940",
    "end": "2230190"
  },
  {
    "text": "are generating some very very strange impacts or very counterproductive results in terms of that you're feeding",
    "start": "2230190",
    "end": "2237090"
  },
  {
    "text": "the monitors again all that you are reimplemented logic are we implementing something",
    "start": "2237090",
    "end": "2242890"
  },
  {
    "text": "which which has to be kept together as",
    "start": "2242890",
    "end": "2248260"
  },
  {
    "text": "one severed central service itself and also if you if you like figure out that",
    "start": "2248260",
    "end": "2256930"
  },
  {
    "text": "something is slowing you down or holding you back in our case it was that we are",
    "start": "2256930",
    "end": "2262690"
  },
  {
    "text": "we're bundling our our artifacts always together as one deployment as one bundle",
    "start": "2262690",
    "end": "2268869"
  },
  {
    "text": "deployment then it's time to to readjust your strategy that you were depending on",
    "start": "2268869",
    "end": "2275290"
  },
  {
    "text": "and yeah and also using Kafka stream for",
    "start": "2275290",
    "end": "2280390"
  },
  {
    "text": "materialized views because this really generates a very low barrier for new services and it's really easy to set up",
    "start": "2280390",
    "end": "2288040"
  },
  {
    "text": "new services as well so I would go for the Kafka streams and that's it and I",
    "start": "2288040",
    "end": "2295960"
  },
  {
    "text": "hope you like [Applause]",
    "start": "2295960",
    "end": "2302190"
  }
]