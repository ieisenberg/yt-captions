[
  {
    "text": "[Music]",
    "start": "1100",
    "end": "10200"
  },
  {
    "text": "yeah I'm an open I'm an open JK developer um that's all you need to know",
    "start": "10200",
    "end": "16160"
  },
  {
    "text": "I do Java stuff as you probably have seen as this title so to start with",
    "start": "16160",
    "end": "22199"
  },
  {
    "text": "consider we have a simple web application on that um You probably all",
    "start": "22199",
    "end": "27240"
  },
  {
    "text": "have these here in my example it's a small documentation website that they have for like all the jfi events for all",
    "start": "27240",
    "end": "33399"
  },
  {
    "text": "the profiling events and it's pretty cool but consider now I have a DS attack",
    "start": "33399",
    "end": "38480"
  },
  {
    "text": "someone militias tries to like get the server down and consider it's not just a simple application but consider it's",
    "start": "38480",
    "end": "44800"
  },
  {
    "text": "your application of your company so what do you do and what's the E for to do and",
    "start": "44800",
    "end": "51600"
  },
  {
    "text": "that's why I got these plers here so the E is to do to just cut the",
    "start": "51600",
    "end": "57879"
  },
  {
    "text": "thing and I press the wrong button interesting it mve without me knowing so",
    "start": "57879",
    "end": "64680"
  },
  {
    "text": "uh and then things happen and top play uh I found the correct button again so",
    "start": "64680",
    "end": "73520"
  },
  {
    "text": "um that's the E effect just cutting it as you saw here and maybe terrible things happen maybe just the attacker",
    "start": "73520",
    "end": "80479"
  },
  {
    "text": "cut off or you cut off and they aren't receiving any packages but there must be a better way than just carrying your",
    "start": "80479",
    "end": "87040"
  },
  {
    "text": "Plies in the data center and cutting cables off um because that's like not done in",
    "start": "87040",
    "end": "92200"
  },
  {
    "text": "software and we here at the software uh conference so the simple thing is what you could do you could have an um uh a",
    "start": "92200",
    "end": "99600"
  },
  {
    "text": "set of blocked IP addresses and every time a package comes in to your and every time an a request comes in for",
    "start": "99600",
    "end": "106040"
  },
  {
    "text": "example through your spring boot application you just check over this IP address in the list of blocked ones if",
    "start": "106040",
    "end": "112680"
  },
  {
    "text": "not then uh yeah uh if if it is then plock it if not then pass it through and",
    "start": "112680",
    "end": "118439"
  },
  {
    "text": "that's quite simple and that's quite nice any idea any any of you see any problems with this",
    "start": "118439",
    "end": "125240"
  },
  {
    "text": "approach anyone louder slow yeah it's it's",
    "start": "125240",
    "end": "131720"
  },
  {
    "text": "terribly slow um it's it's even slower than going to the data center and cutting things um so the the main issue",
    "start": "131720",
    "end": "140920"
  },
  {
    "text": "is consider now here we we have our Linux Network 6 so I'm looking here on to Linux because if we're honest all of",
    "start": "140920",
    "end": "148879"
  },
  {
    "text": "our web applications is running mostly on Linux Dex so you have the package",
    "start": "148879",
    "end": "154400"
  },
  {
    "text": "that come through the network interface then go through the whole Linux networks that can D the rise up your application",
    "start": "154400",
    "end": "160760"
  },
  {
    "text": "that's pretty five five hard above so what you could instead do you could use",
    "start": "160760",
    "end": "166040"
  },
  {
    "text": "a fireball for example here to PL IP address you could call um IP tables and",
    "start": "166040",
    "end": "172200"
  },
  {
    "text": "execute this command and block it and that's pretty decent that works it's",
    "start": "172200",
    "end": "177879"
  },
  {
    "text": "kind of programmatic but that's could couldn't be improve it and if you see it here it looks quite",
    "start": "177879",
    "end": "185760"
  },
  {
    "text": "performant um that's like a bench mark done by by the cloudfare people they",
    "start": "185760",
    "end": "191120"
  },
  {
    "text": "draw packages and what you see here on the yaxis the amount of packages that",
    "start": "191120",
    "end": "196799"
  },
  {
    "text": "are dropped and with IP tables you can drop like on their machine like 2 million packages per second which is not",
    "start": "196799",
    "end": "204159"
  },
  {
    "text": "that bad um but could get better of course because we want to become a 10x",
    "start": "204159",
    "end": "210159"
  },
  {
    "text": "firewall um and it's literally 10x so you see here we can do things that are like almost 10 times faster in this case",
    "start": "210159",
    "end": "217799"
  },
  {
    "text": "like eight times faster approaching like the 12 me the 12 million packages per",
    "start": "217799",
    "end": "223720"
  },
  {
    "text": "second which essentially saturates your uh eonnet cable and it's close to",
    "start": "223720",
    "end": "229080"
  },
  {
    "text": "literally cutting the eonnet cable when you drop all packages speed wise and that's pretty cool um the idea is that",
    "start": "229080",
    "end": "237040"
  },
  {
    "text": "we take advantage of um of the exppress data plane that's the xtp and",
    "start": "237040",
    "end": "243319"
  },
  {
    "text": "this lies essentially between your network interface and your Linux Network stack so it's the first time the package",
    "start": "243319",
    "end": "251519"
  },
  {
    "text": "enters your system from the Linux point of view that's the place where we're checking these packages it's pretty nice",
    "start": "251519",
    "end": "259040"
  },
  {
    "text": "because consider when allocations occur you have one allocation that happens when your package arrives from your",
    "start": "259040",
    "end": "265199"
  },
  {
    "text": "network arrives from your network directly from your cable um into your network interface and then you have",
    "start": "265199",
    "end": "271120"
  },
  {
    "text": "another one when it enters your proper Linux Network deck and you attach things like IP addresses and other information",
    "start": "271120",
    "end": "278600"
  },
  {
    "text": "that you attach as metad data so you want have as little allocations as possible um because allocations just",
    "start": "278600",
    "end": "285880"
  },
  {
    "text": "cost cycles and if you use it there above at the application lineer you have",
    "start": "285880",
    "end": "291840"
  },
  {
    "text": "few allocations and especially there it's even more expensive but so when we cut it early we essentially can block",
    "start": "291840",
    "end": "299360"
  },
  {
    "text": "these at the packets at the speed of your network connection and you can do",
    "start": "299360",
    "end": "304479"
  },
  {
    "text": "it even faster with offload um and that's pretty pretty cool so they're currently a proess of implementing",
    "start": "304479",
    "end": "311000"
  },
  {
    "text": "xcp um which is a way to programmatically modify um your network",
    "start": "311000",
    "end": "316360"
  },
  {
    "text": "interfaces directly in the network interface directly in Silicon which is then even faster because the packet then",
    "start": "316360",
    "end": "322960"
  },
  {
    "text": "never reaches your CPU if it's malicious and that's cool so there were traditionally two ways there was um the",
    "start": "322960",
    "end": "330120"
  },
  {
    "text": "way of like hey change the colel and that's a cool option um because you can just like modify the network driver",
    "start": "330120",
    "end": "337160"
  },
  {
    "text": "itself um but you would have to get a change past lenos TOs and we all know",
    "start": "337160",
    "end": "342960"
  },
  {
    "text": "that it's totally easy and it only takes like a couple of centuries for even",
    "start": "342960",
    "end": "348479"
  },
  {
    "text": "single changes no but it's um I've seen it with other things they tell you later",
    "start": "348479",
    "end": "353680"
  },
  {
    "text": "uh where people try to get things in and it's called L really cares about community so he will probably not insert",
    "start": "353680",
    "end": "361120"
  },
  {
    "text": "your change that you made in an afternoon into Mainline the next colel so you have the option of having a colel",
    "start": "361120",
    "end": "368360"
  },
  {
    "text": "module which essentially allows you to hook into the colel and modify colel functionality but that's also not great",
    "start": "368360",
    "end": "375280"
  },
  {
    "text": "because has problems with stability to quote Craig maintainer you think you",
    "start": "375280",
    "end": "380520"
  },
  {
    "text": "want the St col interface but you really do not no you don't even know it why you",
    "start": "380520",
    "end": "387039"
  },
  {
    "text": "won't um and he quoted things about for example the USB interface where USB",
    "start": "387039",
    "end": "392120"
  },
  {
    "text": "interface with every USB iteration it changed so it wasn't stable but what the",
    "start": "392120",
    "end": "397160"
  },
  {
    "text": "curent will cares about this performance you want to have the most performance the most stable interface at the most",
    "start": "397160",
    "end": "403479"
  },
  {
    "text": "stable operating system and you don't really care about stability that much in",
    "start": "403479",
    "end": "408720"
  },
  {
    "text": "this regard regarding apis that's a problem so essentially the two ways are off if you aren't like a company like",
    "start": "408720",
    "end": "415960"
  },
  {
    "text": "meta Google um and even they find it quite difficult to do this because it costs a",
    "start": "415960",
    "end": "423240"
  },
  {
    "text": "lot of time and it can fundamentally crash your Cel and that's not a great thing in production so can we do better",
    "start": "423240",
    "end": "429919"
  },
  {
    "text": "yes and they were and there's where the Beast comes in it's ebpf um it's really cool um to quote a",
    "start": "429919",
    "end": "438400"
  },
  {
    "text": "guy who is most famous on the internet for shouting at hard drives Brandon Craig ebpf is a crazy technology it's",
    "start": "438400",
    "end": "444639"
  },
  {
    "text": "like putting JavaScript into a Linux kernel um and he normally looks like this if he isn't shouting um and if you",
    "start": "444639",
    "end": "452319"
  },
  {
    "text": "want to know more I'll link the YouTube link there he essentially want to show his monitoring tools uh for discs anyway",
    "start": "452319",
    "end": "459400"
  },
  {
    "text": "um the idea is that ebpf is making the colal programm programmable at Native",
    "start": "459400",
    "end": "464879"
  },
  {
    "text": "execution speed so what this means is you can hook into a Chon at certain places and in and like hook it in like",
    "start": "464879",
    "end": "472879"
  },
  {
    "text": "when some of you might know Java so when you have Java Ur Frameworks and you just and every time you press a button you",
    "start": "472879",
    "end": "478840"
  },
  {
    "text": "can register the Handler and then this Handler can modify some Behavior that's the same thing here but only in way",
    "start": "478840",
    "end": "485599"
  },
  {
    "text": "cooler so the idea is we with ebpf we have our ebpf program we typically ride",
    "start": "485599",
    "end": "491919"
  },
  {
    "text": "it in sea or or our rust and this is then compiled down to a buy code it's",
    "start": "491919",
    "end": "498159"
  },
  {
    "text": "not too different from like a basic jvm bu code or such and so it's compile down",
    "start": "498159",
    "end": "504240"
  },
  {
    "text": "and this is all happening in usland and what you have in what you have in the Linux world you have userland and the",
    "start": "504240",
    "end": "510560"
  },
  {
    "text": "colel land so userland are like the application that you normally write like unprivileged things and in colel land",
    "start": "510560",
    "end": "517800"
  },
  {
    "text": "that's like running directly in the Kel and we can use a system call to",
    "start": "517800",
    "end": "523200"
  },
  {
    "text": "communicate with both between both so um it's essentially an API of your Colonel",
    "start": "523200",
    "end": "529160"
  },
  {
    "text": "and so you tell the colonel hey please load me this program in and then you have a verifier which is pretty pretty",
    "start": "529160",
    "end": "535360"
  },
  {
    "text": "cool because when your EF program has a um has for example um misaligned memory",
    "start": "535360",
    "end": "543399"
  },
  {
    "text": "access or it doesn't check whether a PO is null and access it then you can",
    "start": "543399",
    "end": "548920"
  },
  {
    "text": "potentially crash your car we don't want to do this because it's we can't really recover on this so we have a verify that",
    "start": "548920",
    "end": "556160"
  },
  {
    "text": "checks for out of Bones things for Mis excesses of pointers and other things",
    "start": "556160",
    "end": "562519"
  },
  {
    "text": "and it can do it because it limits the amount of code that you can of the the amount of steps that you can execute in",
    "start": "562519",
    "end": "568800"
  },
  {
    "text": "EPF that means essentially that it's a restricted um execution but it's good",
    "start": "568800",
    "end": "576160"
  },
  {
    "text": "enough we can write simple loops and that's that's good enough for M applications just keep this in mind and",
    "start": "576160",
    "end": "582680"
  },
  {
    "text": "fix and making the verifier happy is the same like with rust making the B Checker",
    "start": "582680",
    "end": "588200"
  },
  {
    "text": "happy can take some time but then when you have a program that's approved that's cool then um it's usually jit",
    "start": "588200",
    "end": "595399"
  },
  {
    "text": "compiled so the jet compilers uh for the Spy code on all the common platforms",
    "start": "595399",
    "end": "600560"
  },
  {
    "text": "like x86 and f390 you can even run it on your main frames at home um and but then",
    "start": "600560",
    "end": "607640"
  },
  {
    "text": "you you attach it and we saw before that you can attach it directly in the network interface by xtp but you can",
    "start": "607640",
    "end": "613959"
  },
  {
    "text": "also attach it at various other places um and that's pretty cool and then because um then you can also communicate",
    "start": "613959",
    "end": "621160"
  },
  {
    "text": "via system calls with your application and what it offers us it",
    "start": "621160",
    "end": "626640"
  },
  {
    "text": "offers a Safety and Security because we have a verified so we check it before and offers us also continuous delivery",
    "start": "626640",
    "end": "633240"
  },
  {
    "text": "because we don't have to restart the colel rebuilding and everything when we modify for example our Network de gives",
    "start": "633240",
    "end": "640040"
  },
  {
    "text": "the efficiency because it's almost close to Native execution speed because of the just in time of comala and how this was",
    "start": "640040",
    "end": "647279"
  },
  {
    "text": "developed it essentially gives us um it essentially came out of of the movement",
    "start": "647279",
    "end": "652639"
  },
  {
    "text": "of um um of this comp computation as as",
    "start": "652639",
    "end": "658360"
  },
  {
    "text": "software which we have with with Docker and then people thought hey can we have Network um defined software and that's",
    "start": "658360",
    "end": "666160"
  },
  {
    "text": "that what that's what it essentially is it allows us to to modify things in",
    "start": "666160",
    "end": "671760"
  },
  {
    "text": "software that were previously not possible and the cool thing is it's a standard yes it changes but it's",
    "start": "671760",
    "end": "677959"
  },
  {
    "text": "standardized enough that you can run applications um on multiple kernels um",
    "start": "677959",
    "end": "684200"
  },
  {
    "text": "when you compile them for one and that's pretty decent so of course you might wonder how how can we then share data",
    "start": "684200",
    "end": "690680"
  },
  {
    "text": "you saw we can tou it in the colel and they like to show you examples of how to properly Do It um in demos um so how can",
    "start": "690680",
    "end": "698519"
  },
  {
    "text": "we share data idea would be in normal applications to use sockets or to use",
    "start": "698519",
    "end": "704760"
  },
  {
    "text": "shared memory the only problem is we we're communicating between colel space",
    "start": "704760",
    "end": "710360"
  },
  {
    "text": "and user space so we want to have more more checks on it and so what we can do",
    "start": "710360",
    "end": "716120"
  },
  {
    "text": "we can use ebpf maps ebpf maps don't have to to be Maps it's more like the PHP terminology of of a map where",
    "start": "716120",
    "end": "724720"
  },
  {
    "text": "everything is essentially a map but um here essentially map describes something",
    "start": "724720",
    "end": "731279"
  },
  {
    "text": "describes a commonly used data structure that shared and you have loads of different Maps but the map types but the",
    "start": "731279",
    "end": "738480"
  },
  {
    "text": "idea is essentially you have your ebpf program that communicates with these Maps that's well use and such and then",
    "start": "738480",
    "end": "744040"
  },
  {
    "text": "you user land program can come in and also access them which makes it pretty nice because you can for example lock",
    "start": "744040",
    "end": "750760"
  },
  {
    "text": "well is out um and yeah that's how it works and it's really the Cornerstone",
    "start": "750760",
    "end": "755920"
  },
  {
    "text": "here there lots of types because uh the col no thought yeah we don't we probably",
    "start": "755920",
    "end": "762800"
  },
  {
    "text": "usually need more than just a hashmap so there are hash maps with um that remove",
    "start": "762800",
    "end": "768040"
  },
  {
    "text": "the least recently used element if they get full um which is pretty useful for",
    "start": "768040",
    "end": "773240"
  },
  {
    "text": "caching um and I wish that Java would have these by default um we we we have a",
    "start": "773240",
    "end": "780000"
  },
  {
    "text": "we have ring buffers and all this makes it fairly easy to develop this and if I'm honest it's far easier to develop",
    "start": "780000",
    "end": "787040"
  },
  {
    "text": "than like the normal C programs because in C when I start out I have to get a",
    "start": "787040",
    "end": "792880"
  },
  {
    "text": "library for for getting simple hash Maps or implementing myself so it's pretty nice um so as I said you can hook",
    "start": "792880",
    "end": "800720"
  },
  {
    "text": "everything you can attach small programs and Morey Behavior almost every place in the colel which is pretty decent they",
    "start": "800720",
    "end": "807720"
  },
  {
    "text": "even approach us to do this with us programs but it's still an early field",
    "start": "807720",
    "end": "813079"
  },
  {
    "text": "you can attach it at so many places that I only myself explore like percentage of",
    "start": "813079",
    "end": "819320"
  },
  {
    "text": "so and I show you later at the end um that we can do even more crazier things",
    "start": "819320",
    "end": "825120"
  },
  {
    "text": "um where it's cly used besides like doing firewalling like cloud like um",
    "start": "825120",
    "end": "832000"
  },
  {
    "text": "Cloud uses it for the firewalls me to use it also for the loow balancing but you can also use it for absorbability",
    "start": "832000",
    "end": "838519"
  },
  {
    "text": "and monitor sh um many people in the open Telemetry space use it because you",
    "start": "838519",
    "end": "843959"
  },
  {
    "text": "have um application wide knowledge um so the idea is that you're on the col level",
    "start": "843959",
    "end": "850759"
  },
  {
    "text": "so you see every application and you can do profiling across multiple languages",
    "start": "850759",
    "end": "855959"
  },
  {
    "text": "which is pretty cool and can have access to things like Network information that you would would never have access to",
    "start": "855959",
    "end": "862480"
  },
  {
    "text": "because you really uh logging the pctures at the source when they coming first in it's",
    "start": "862480",
    "end": "868480"
  },
  {
    "text": "also cool for security control um if you ever heard of app armor that's that can",
    "start": "868480",
    "end": "874160"
  },
  {
    "text": "also be used with ebpf and what's also pretty cool you you saw this before um uh this like crowd",
    "start": "874160",
    "end": "882279"
  },
  {
    "text": "strike it was really nice when everything drown to hold just because you had like these uh every outs of",
    "start": "882279",
    "end": "889560"
  },
  {
    "text": "every outs of boun Ries so that could never happen with the verifier which is cool because the rif fire checks and",
    "start": "889560",
    "end": "895120"
  },
  {
    "text": "it's like nope I can't verify that you can access this every value so that's",
    "start": "895120",
    "end": "900440"
  },
  {
    "text": "cool and that prevents a lot of things here and that's probably also one of the reasons why uh Microsoft more more",
    "start": "900440",
    "end": "908120"
  },
  {
    "text": "pushes ebf into their own Kel and they even now release the ebf for Windows um",
    "start": "908120",
    "end": "915360"
  },
  {
    "text": "but of course EF has bucks too um all my applications have bucks all the time",
    "start": "915360",
    "end": "920639"
  },
  {
    "text": "yours probably too so why should ebpf differ um but most of the bus are in the verifier so please please please don't",
    "start": "920639",
    "end": "927519"
  },
  {
    "text": "run ebpf programs from untrusted users and even if you run them from from trusted users know why you execute them",
    "start": "927519",
    "end": "935279"
  },
  {
    "text": "then not not blind to execute them because they have curent level access they can access all the memories they",
    "start": "935279",
    "end": "940639"
  },
  {
    "text": "can access all the passwords everything stored in so yeah please don't install malware on",
    "start": "940639",
    "end": "948199"
  },
  {
    "text": "your systems it would be nice would make life a little bit easier um and the and",
    "start": "948199",
    "end": "953600"
  },
  {
    "text": "the interesting thing is that with ebf because you can modify CH level applications you can ALS so pretty much",
    "start": "953600",
    "end": "960040"
  },
  {
    "text": "hide your um hide your ebpf attacking applications um from the view of normal",
    "start": "960040",
    "end": "967639"
  },
  {
    "text": "systems that aren't like running in colel and that makes it pretty pretty hard to detect them but anyway um the EF",
    "start": "967639",
    "end": "974959"
  },
  {
    "text": "ecosystem is is quite quite large it grew when ebf started in 2016 it was",
    "start": "974959",
    "end": "981240"
  },
  {
    "text": "just a couple of FKS between a couple of companies Netflix Google and meta working on it but nowadays it grows and",
    "start": "981240",
    "end": "988319"
  },
  {
    "text": "grows and grows and adds even more applications um and as you see the",
    "start": "988319",
    "end": "994360"
  },
  {
    "text": "ecosystem consists of like the Linux Carland light the windows Kel um and",
    "start": "994360",
    "end": "999560"
  },
  {
    "text": "then you have on user space some libraries that some SD that work with that and then on top you have EPF",
    "start": "999560",
    "end": "1005360"
  },
  {
    "text": "programs projects that facilitate use cases and there's even a children's book if you like to read something with your",
    "start": "1005360",
    "end": "1012480"
  },
  {
    "text": "child um but anyone anything missing here in the user space",
    "start": "1012480",
    "end": "1019880"
  },
  {
    "text": "yes yeah there's no Java um that's that's not good because I like Java I'm an JK developer why can't I use Java",
    "start": "1020120",
    "end": "1027839"
  },
  {
    "text": "here and that's essentially what I thought when when last year I thought hey what could I contribute to the EPF",
    "start": "1027839",
    "end": "1033000"
  },
  {
    "text": "ecosystem like maybe add a little tuuk there uh and if you wonder why I'm in",
    "start": "1033000",
    "end": "1040240"
  },
  {
    "text": "this t-shirt um because I was last year last week at um in Vienna at the Linux",
    "start": "1040240",
    "end": "1046678"
  },
  {
    "text": "plumber conference and talked about the very same topic be like have more Java in the kernel um to quote to to quote C",
    "start": "1046679",
    "end": "1056280"
  },
  {
    "text": "again EF is a crazy technology it's like putting Java into the Linux C and I was",
    "start": "1056280",
    "end": "1064160"
  },
  {
    "text": "once I was introduced at the conference being someone who worked on JavaScript um this is my",
    "start": "1064160",
    "end": "1071400"
  },
  {
    "text": "Redemption anyway um and for those of you uh who know the Java Zone conference",
    "start": "1071400",
    "end": "1077200"
  },
  {
    "text": "I want to use a programming language which doesn't only run in userland so uh",
    "start": "1077200",
    "end": "1082480"
  },
  {
    "text": "here you go uh that's a project called Hollow UPF um it's humbly known as hello EPF hello EF hello Java um you find the",
    "start": "1082480",
    "end": "1092120"
  },
  {
    "text": "link of all the resources later in the QR code but of course it's work of progress It's a side project for me I'm",
    "start": "1092120",
    "end": "1098080"
  },
  {
    "text": "happy that um I I can work on it um but still um it's a prototype but anyway I",
    "start": "1098080",
    "end": "1104840"
  },
  {
    "text": "I'll show you in the following how you can use ebpf at least like in demo applications um so now we're going to",
    "start": "1104840",
    "end": "1112280"
  },
  {
    "text": "the live coding um or how I'll call it having fun with ebpf and let's see where",
    "start": "1112280",
    "end": "1117520"
  },
  {
    "text": "the demo gots like me um but first uh uh a short demo um so you show so I can",
    "start": "1117520",
    "end": "1124480"
  },
  {
    "text": "show you what you can actually do with ebpf um so um this is the title giving",
    "start": "1124480",
    "end": "1130559"
  },
  {
    "text": "demo um I finished this demo uh 3 months after submitting this talk here uh so",
    "start": "1130559",
    "end": "1137960"
  },
  {
    "text": "let's see where I Works um essentially the um this is an application written in JavaScript on the front end but spring",
    "start": "1137960",
    "end": "1144280"
  },
  {
    "text": "boot on the back end and the cool thing is when when you develop all this in Java as you show as I show you in a",
    "start": "1144280",
    "end": "1150240"
  },
  {
    "text": "minute you can easily connect it to Spring boot without that much funfare without calling other applications via",
    "start": "1150240",
    "end": "1157360"
  },
  {
    "text": "shell commands or anything or even writing python that go want this um so",
    "start": "1157360",
    "end": "1163760"
  },
  {
    "text": "uh what we can do we can just send um uh some some t in there the idea is here",
    "start": "1163760",
    "end": "1170120"
  },
  {
    "text": "that we say oh please block every IP address from Port 443 from Source Port",
    "start": "1170120",
    "end": "1175200"
  },
  {
    "text": "44c that's essentially the https Port so let's see oh got",
    "start": "1175200",
    "end": "1183919"
  },
  {
    "text": "and I need to give it some power",
    "start": "1185360",
    "end": "1189640"
  },
  {
    "text": "sorry um and essentially we can do this",
    "start": "1193320",
    "end": "1200559"
  },
  {
    "text": "sorry for that um essentially yeah we we we added",
    "start": "1204240",
    "end": "1210400"
  },
  {
    "text": "a new firewall rule uh now we can trigger request to google.com I always",
    "start": "1210400",
    "end": "1215600"
  },
  {
    "text": "use google.com because I assume they are uh online all the time so we can request",
    "start": "1215600",
    "end": "1221280"
  },
  {
    "text": "it and we see here it's blocked and that's running in the colel so you have code running in the colnel that blocks",
    "start": "1221280",
    "end": "1228200"
  },
  {
    "text": "all these packages and we can reset the rules and now it",
    "start": "1228200",
    "end": "1234039"
  },
  {
    "text": "stops y uh and that's all for my talk today no um we're doing some live coding",
    "start": "1234039",
    "end": "1239799"
  },
  {
    "text": "um of course we do so first um so did you trust me that I can write uh spring",
    "start": "1239799",
    "end": "1246159"
  },
  {
    "text": "code don't do it I use J gbt for it um it's the best way and the only way to",
    "start": "1246159",
    "end": "1251960"
  },
  {
    "text": "write Java applications no I'm just kidding um essentially theide is here um",
    "start": "1251960",
    "end": "1257320"
  },
  {
    "text": "that um uh when when we when we add a fiber rule",
    "start": "1257320",
    "end": "1263000"
  },
  {
    "text": "it's serialized by um by the pr into trason you saw trason here and then it's",
    "start": "1263000",
    "end": "1268760"
  },
  {
    "text": "us realized automatically by um spring mode and what we can do here um we add",
    "start": "1268760",
    "end": "1275279"
  },
  {
    "text": "the rule directly in the column so that's essentially all the code to put firewalls rules in the column and show",
    "start": "1275279",
    "end": "1282840"
  },
  {
    "text": "you now how we can develop our own um applications and next following so 20",
    "start": "1282840",
    "end": "1288679"
  },
  {
    "text": "minutes or so so let's see um live demos are always interesting so what we have",
    "start": "1288679",
    "end": "1294640"
  },
  {
    "text": "to do is um we have to first because it's like a more complicated thing that",
    "start": "1294640",
    "end": "1301120"
  },
  {
    "text": "I'm doing here so we have to first give it a license because it's important to know that um in the colel when you're",
    "start": "1301120",
    "end": "1308039"
  },
  {
    "text": "doing EF there are methods that you can use with like an MIT license but many of",
    "start": "1308039",
    "end": "1314360"
  },
  {
    "text": "them are not um with a license exception so many of the method to use for example",
    "start": "1314360",
    "end": "1320159"
  },
  {
    "text": "when you do more more suff located things you have to declare that your program is GPL um and that's what I'm",
    "start": "1320159",
    "end": "1327200"
  },
  {
    "text": "doing here and then what we want to do is we extend our BPF program that",
    "start": "1327200",
    "end": "1332240"
  },
  {
    "text": "essentially means that we we tell my code later um what we want that it's an",
    "start": "1332240",
    "end": "1339600"
  },
  {
    "text": "mpf program and then we want to here in our example we want to do some system call hooks because it's easy um um uh we",
    "start": "1339600",
    "end": "1348679"
  },
  {
    "text": "one hul for example the open at system call",
    "start": "1348679",
    "end": "1354080"
  },
  {
    "text": "and uh open at let's look for it that's",
    "start": "1354080",
    "end": "1359240"
  },
  {
    "text": "just an interface that we implemented open ad",
    "start": "1359240",
    "end": "1364799"
  },
  {
    "text": "no have to look for it here every time we enter oat we call this here and we",
    "start": "1364799",
    "end": "1372240"
  },
  {
    "text": "can um call Trace Sprint K and",
    "start": "1372240",
    "end": "1378919"
  },
  {
    "text": "every time we we access a file where the system call we call hello world and to",
    "start": "1378919",
    "end": "1384480"
  },
  {
    "text": "make it easier to to see that it's really changing we add the file name here but now we have to tell the we have",
    "start": "1384480",
    "end": "1391159"
  },
  {
    "text": "to tell our system how to load it and how to compile and everything and then so in common Java fashion we have a main",
    "start": "1391159",
    "end": "1397679"
  },
  {
    "text": "method what we essentially then do um we we load our program first so we use BPF",
    "start": "1397679",
    "end": "1404440"
  },
  {
    "text": "program. load so that loads the because I'm doing magic by behind the scenes they so that they show you in a minute",
    "start": "1404440",
    "end": "1411039"
  },
  {
    "text": "how it works but essentially when you compile a Java application this part of",
    "start": "1411039",
    "end": "1416080"
  },
  {
    "text": "the code here is compiled to se code and then compiled to EF by code and then",
    "start": "1416080",
    "end": "1423880"
  },
  {
    "text": "when you call load you load this in the kernel so this code here runs in the kernel this code here doesn't run in the",
    "start": "1423880",
    "end": "1431400"
  },
  {
    "text": "kernel so I have here limited way of java that I can express but here I can do every Java I can for example write",
    "start": "1431400",
    "end": "1437960"
  },
  {
    "text": "spring boot application if I want and then I attach it and that's should work",
    "start": "1437960",
    "end": "1444760"
  },
  {
    "text": "so I hope it works um the only problem is the Java",
    "start": "1444760",
    "end": "1451440"
  },
  {
    "text": "ecosystem is not the firstest ecosystem to compile and essentially when you're adding some magic it's uh it's not",
    "start": "1451440",
    "end": "1457320"
  },
  {
    "text": "getting better but um let's see and the cool thing with this is you can write your",
    "start": "1457320",
    "end": "1462960"
  },
  {
    "text": "applications um youf code in the same uh JV in the same class f it you also write",
    "start": "1462960",
    "end": "1469200"
  },
  {
    "text": "your application code so you don't have that many problems with um code",
    "start": "1469200",
    "end": "1474880"
  },
  {
    "text": "application and you can even have code because the amount of java this you can write is limited but you can even write",
    "start": "1474880",
    "end": "1481200"
  },
  {
    "text": "code that can be run in both so let's see um rund demo.",
    "start": "1481200",
    "end": "1489760"
  },
  {
    "text": "sample so so so you see here that's like um uh every file that's currently",
    "start": "1489760",
    "end": "1496559"
  },
  {
    "text": "accessed in your system and that's just a couple of lines of java code and",
    "start": "1496559",
    "end": "1501760"
  },
  {
    "text": "implementing the interface system Cog um and yeah we we can do many things with",
    "start": "1501760",
    "end": "1508679"
  },
  {
    "text": "it um an more more interesting example because when we're relating to to uh",
    "start": "1508679",
    "end": "1514640"
  },
  {
    "text": "firewalls and to other things is that we can um use that we can simply write a",
    "start": "1514640",
    "end": "1521320"
  },
  {
    "text": "write a program that drops every third incoming package this could be used for",
    "start": "1521320",
    "end": "1526600"
  },
  {
    "text": "for example for for monkey test Tes in so for case testing so it's essentially monkey that every third package is like",
    "start": "1526600",
    "end": "1533559"
  },
  {
    "text": "nah nah n and you can even do like sudoo random number generators or",
    "start": "1533559",
    "end": "1539000"
  },
  {
    "text": "something so you can do interesting stuff um so what what we first do we Define a global variable called count as",
    "start": "1539000",
    "end": "1547120"
  },
  {
    "text": "you see here and then we have a method we annotate as BPF function the the",
    "start": "1547120",
    "end": "1552520"
  },
  {
    "text": "function here the xcp handle packet method is implicitly annotate with this so should drop one does it do it just",
    "start": "1552520",
    "end": "1559120"
  },
  {
    "text": "checks oh should get is it m three is it one if so return true um and so what we",
    "start": "1559120",
    "end": "1566799"
  },
  {
    "text": "have with handle packet that's from the interface xtp Hook and the idea is essentially that it gets pointed to an",
    "start": "1566799",
    "end": "1574440"
  },
  {
    "text": "to to to an xtp struct you have to see that essentially what we're doing in Java we're modeling C but it still type",
    "start": "1574440",
    "end": "1581720"
  },
  {
    "text": "checks so um you kind of writing a mixture between between Java and z and",
    "start": "1581720",
    "end": "1587799"
  },
  {
    "text": "that's part of the magic so we first increment the count and then if we",
    "start": "1587799",
    "end": "1592840"
  },
  {
    "text": "should drop we return the enum value XP drop we shouldn't we we pass it and now",
    "start": "1592840",
    "end": "1598559"
  },
  {
    "text": "we just attach it here and the cool thing is we can access the count variable the same way as we access it",
    "start": "1598559",
    "end": "1605720"
  },
  {
    "text": "here in the ebpf program and now um we",
    "start": "1605720",
    "end": "1611000"
  },
  {
    "text": "can probably try um it is compiled the last time so don't have to recompile it",
    "start": "1611000",
    "end": "1617600"
  },
  {
    "text": "this time um xcp",
    "start": "1617600",
    "end": "1623360"
  },
  {
    "text": "drop third package",
    "start": "1623360",
    "end": "1629000"
  },
  {
    "text": "so what you might have noticed is that this is a Mac that doesn't run Linux just because um having Linux systems on",
    "start": "1629000",
    "end": "1636159"
  },
  {
    "text": "stage on presentation slightly riskier so this runs a VM so essentially when",
    "start": "1636159",
    "end": "1641880"
  },
  {
    "text": "I'm pressing enter I'm creating new messages that are passed into the VM but",
    "start": "1641880",
    "end": "1647000"
  },
  {
    "text": "anyway you see here locks and it's it's pretty decent you can do it for simple monitoring tasks um",
    "start": "1647000",
    "end": "1654559"
  },
  {
    "text": "and you can even buy build like your own wihar clone with it which which I found",
    "start": "1654559",
    "end": "1659600"
  },
  {
    "text": "pretty nice and but how does it but how does it work under the hood",
    "start": "1659600",
    "end": "1666039"
  },
  {
    "text": "um so how how it works is that I told you before that when Network packet",
    "start": "1666039",
    "end": "1671760"
  },
  {
    "text": "comes from the internet your network driver essentially asks the ebpf program hey um your xcp hook tach program hey",
    "start": "1671760",
    "end": "1679159"
  },
  {
    "text": "what should I do with this packet it can then decide whether it should pass or not and then it gets passed further up",
    "start": "1679159",
    "end": "1685120"
  },
  {
    "text": "in the Linux Network sck and then turn your application um and the cool thing is your application will never know that",
    "start": "1685120",
    "end": "1690760"
  },
  {
    "text": "there's like an xtp hook running in colel doing this so um it only know it only sees that every third package is",
    "start": "1690760",
    "end": "1697360"
  },
  {
    "text": "dropping but that might be due to a flight connection and then your EF program as we see can communicate",
    "start": "1697360",
    "end": "1703519"
  },
  {
    "text": "statistics up to the EF application but of course we can also use map",
    "start": "1703519",
    "end": "1708720"
  },
  {
    "text": "as I told you before to pass for example pluged IP addresses down um and how this",
    "start": "1708720",
    "end": "1715919"
  },
  {
    "text": "then on the interesting part here is that we're getting what in at xvp level",
    "start": "1715919",
    "end": "1721080"
  },
  {
    "text": "the package like the the proper package just the fuel fights and we have to parse it ourselves so um I was at",
    "start": "1721080",
    "end": "1728919"
  },
  {
    "text": "University like too many years ago and we learned this and I had to relook at my old material how networking works",
    "start": "1728919",
    "end": "1736279"
  },
  {
    "text": "because usually when you're developing application you never consider oh where's this bite and an interesting",
    "start": "1736279",
    "end": "1742559"
  },
  {
    "text": "part is also the network bite order and your host system bite order is different",
    "start": "1742559",
    "end": "1748039"
  },
  {
    "text": "and that leads to quite interesting bucks when you don't consider it because one is big onion and one is lower onion",
    "start": "1748039",
    "end": "1755000"
  },
  {
    "text": "and yes I spend afternoons on this before I tried before I find it anyway",
    "start": "1755000",
    "end": "1761720"
  },
  {
    "text": "um what you saw here is is um that I'm essentially trying to run Java in the",
    "start": "1761720",
    "end": "1767720"
  },
  {
    "text": "Linux Colonel to quote Clark Second Law the only way of discovering the limits of the possible is to venture a little",
    "start": "1767720",
    "end": "1773159"
  },
  {
    "text": "past them into the impossible um and this all was made possible by project",
    "start": "1773159",
    "end": "1778840"
  },
  {
    "text": "Panama that came in in jk22 so quite recently which allows us to invoke um",
    "start": "1778840",
    "end": "1785240"
  },
  {
    "text": "seam method quite easily because what I'm essentially doing I'm building a sophisticated wrapp around lipf which",
    "start": "1785240",
    "end": "1792960"
  },
  {
    "text": "offers me basic functionality like load something into the kernel and so how",
    "start": "1792960",
    "end": "1798519"
  },
  {
    "text": "this works when we reconsider this application here our method should drop uh we take this it looks like Java it",
    "start": "1798519",
    "end": "1806440"
  },
  {
    "text": "works like Java but you also see that we need to support unsign integers so there's an onsign annotation there then",
    "start": "1806440",
    "end": "1812679"
  },
  {
    "text": "we take it to an annotation processor that essentially takes all the data structures and you can Define structs",
    "start": "1812679",
    "end": "1818360"
  },
  {
    "text": "and units and such and converts them um to C code um and then we have a Java",
    "start": "1818360",
    "end": "1824640"
  },
  {
    "text": "compil plugin that takes the abstr syntax tree um um analyze it and then",
    "start": "1824640",
    "end": "1829799"
  },
  {
    "text": "emits EF by code um and so what it essentially does it converts to C the",
    "start": "1829799",
    "end": "1835519"
  },
  {
    "text": "Java code that you see here to the equivalent on well equivalent is is a",
    "start": "1835519",
    "end": "1842120"
  },
  {
    "text": "hard word but to to to something that looks similar to the C code um and",
    "start": "1842120",
    "end": "1848080"
  },
  {
    "text": "that's pretty cool that allows you to write colur code inside your application",
    "start": "1848080",
    "end": "1853880"
  },
  {
    "text": "um and for all the compile NES out there hope there are few uh essentially what does what it then does",
    "start": "1853880",
    "end": "1860880"
  },
  {
    "text": "it uses clang to compile it down to EPF by code um which is Prett simple",
    "start": "1860880",
    "end": "1867440"
  },
  {
    "text": "um yeah um but Let's do let's do more fun stuff we still have 17 minutes so um",
    "start": "1867440",
    "end": "1874120"
  },
  {
    "text": "let's have some fun so uh what you might have uh what you might have thought about is um whether we could use our",
    "start": "1874120",
    "end": "1881720"
  },
  {
    "text": "sample for something nefarious any IDE is what we could do when we when we get",
    "start": "1881720",
    "end": "1887080"
  },
  {
    "text": "to your point of to the file name in",
    "start": "1887080",
    "end": "1892039"
  },
  {
    "text": "anything can yes we can and that's pretty simple so um what we can do if you if your",
    "start": "1893120",
    "end": "1900399"
  },
  {
    "text": "nefarious we can forbid the user to access a file um this here is a simple",
    "start": "1900399",
    "end": "1906360"
  },
  {
    "text": "function um that's also compiled to C code as before that just checks is this file that's coming in um the/ tm/ forbin",
    "start": "1906360",
    "end": "1915039"
  },
  {
    "text": "file and what we enter add them just do is like we have to copy the file name in",
    "start": "1915039",
    "end": "1921840"
  },
  {
    "text": "because um we have to keep in mind that file names comes from the user because it's a system call it comes from usand",
    "start": "1921840",
    "end": "1927960"
  },
  {
    "text": "so we have to first read it because we can't otherwise access it BPF Trace print case interesting it knows how to",
    "start": "1927960",
    "end": "1936399"
  },
  {
    "text": "do this that's also kind of magic um but the idea is here um when this file Forin",
    "start": "1936399",
    "end": "1942919"
  },
  {
    "text": "then we write back to the user for example the empty file and write back to the file the EMP file and then because",
    "start": "1942919",
    "end": "1949799"
  },
  {
    "text": "it's the ENT open system call what this means is that the system call that's like fer process by Linux turn is like I",
    "start": "1949799",
    "end": "1957200"
  },
  {
    "text": "don't know this empty file what do you what do you want user and then just",
    "start": "1957200",
    "end": "1962399"
  },
  {
    "text": "returns an error and that's pretty cool because we can essentially forbid the user to access this file using this file",
    "start": "1962399",
    "end": "1967960"
  },
  {
    "text": "name and let's try it out um",
    "start": "1967960",
    "end": "1975840"
  },
  {
    "text": "uh and I'm starting another shell the important thing is here that",
    "start": "1979039",
    "end": "1986440"
  },
  {
    "text": "um it of course has problems for example when the user uses a symbolic link uh it",
    "start": "1986440",
    "end": "1991679"
  },
  {
    "text": "doesn't work anymore because then the file name is different um um but we can now do it and for",
    "start": "1991679",
    "end": "2000399"
  },
  {
    "text": "example we can touch it touch TMP SL",
    "start": "2000399",
    "end": "2005919"
  },
  {
    "text": "forbid typ so it's touches like what do you want with like the empty file and uh",
    "start": "2005919",
    "end": "2013559"
  },
  {
    "text": "it's also locked here exos to file is forbidden as we see here as we saw here that's pretty cool because you can write",
    "start": "2013559",
    "end": "2020159"
  },
  {
    "text": "simple applications to test and and also do some logging and of course there",
    "start": "2020159",
    "end": "2025559"
  },
  {
    "text": "other ways to do bad um BPF um someone even gave a talk about it but you can",
    "start": "2025559",
    "end": "2033320"
  },
  {
    "text": "see that it's a pretty pretty cool tool and what's also nice is um",
    "start": "2033320",
    "end": "2038360"
  },
  {
    "text": "um you could do more stuff for example you can in in with HF you can Define",
    "start": "2038360",
    "end": "2044440"
  },
  {
    "text": "structs in Java code that you can both use in Java code and in zcode for",
    "start": "2044440",
    "end": "2050118"
  },
  {
    "text": "example you can Define when we lck all the open ends which which file was",
    "start": "2050119",
    "end": "2055878"
  },
  {
    "text": "accessed by which poess we can he uh we can he Define an entry um and that is a",
    "start": "2055879",
    "end": "2062638"
  },
  {
    "text": "class with a string com and an in count and then count per process how many I",
    "start": "2062639",
    "end": "2069480"
  },
  {
    "text": "think it's per process how many files were read and then we have here maps that we can easily Define and access",
    "start": "2069480",
    "end": "2075200"
  },
  {
    "text": "both in javal land um and in usland um for example you see here um we access",
    "start": "2075200",
    "end": "2083520"
  },
  {
    "text": "the map what we do here we read the we read from this map um and then increment",
    "start": "2083520",
    "end": "2090960"
  },
  {
    "text": "and also in in javal land what we do we can just use for each over it and access it directly um and do many more crazy",
    "start": "2090960",
    "end": "2099359"
  },
  {
    "text": "things and also Implement firewalls um which other people done um and and I",
    "start": "2099359",
    "end": "2105000"
  },
  {
    "text": "tried my very share on it um but now of course uh if you want to know",
    "start": "2105000",
    "end": "2112160"
  },
  {
    "text": "more uh I WR the plost every other week since January so they're now 15 in and",
    "start": "2112160",
    "end": "2118240"
  },
  {
    "text": "you can look forward to to having some demos also coming on the blog um and now",
    "start": "2118240",
    "end": "2125599"
  },
  {
    "text": "now climon the future in like the last 10es minutes um um what my aim is with this project is to make EF accessible",
    "start": "2125599",
    "end": "2132720"
  },
  {
    "text": "for like more than just your standard Z developer but for for people like you",
    "start": "2132720",
    "end": "2138800"
  },
  {
    "text": "that like might wonder how this works and might want to like dable a little bit in it uh because many users many",
    "start": "2138800",
    "end": "2146400"
  },
  {
    "text": "people know Java and so it's really accessible um I hope that Java will just",
    "start": "2146400",
    "end": "2152040"
  },
  {
    "text": "also be a part of the ecosystem because it's after all one of the languages um",
    "start": "2152040",
    "end": "2158319"
  },
  {
    "text": "uh that they use for Z development um and of course what like",
    "start": "2158319",
    "end": "2163440"
  },
  {
    "text": "if you if you go back from like the trva side and go more into the pro EF sense",
    "start": "2163440",
    "end": "2168599"
  },
  {
    "text": "um into Pro EF VA it gets us a little bit closer to microc so we getting more",
    "start": "2168599",
    "end": "2174359"
  },
  {
    "text": "and more functionality out of Kernel modules and out of the kernel into applications that are essentially",
    "start": "2174359",
    "end": "2180480"
  },
  {
    "text": "written by the user and then inserted at runtime that makes things so much easier but of course it makes also debugging",
    "start": "2180480",
    "end": "2187960"
  },
  {
    "text": "and uh recently it also it's also quite interesting when you for example on um",
    "start": "2187960",
    "end": "2194960"
  },
  {
    "text": "on distribution R like Fedora or such um and now you have code that's running in",
    "start": "2194960",
    "end": "2201359"
  },
  {
    "text": "a Curel at um at your customer that you can't control so it will probably also",
    "start": "2201359",
    "end": "2206640"
  },
  {
    "text": "make quite a mess and I don't want to be the support person that that needs to help the the the clients be like oh my",
    "start": "2206640",
    "end": "2213960"
  },
  {
    "text": "application doesn't work my C is broken yes you insulted random EF code from",
    "start": "2213960",
    "end": "2219160"
  },
  {
    "text": "somewhere in the internet let's see how that works I saw it worked really well in the JavaScript World anyway um what",
    "start": "2219160",
    "end": "2226000"
  },
  {
    "text": "you can also do um you can we we can reimagine colel fixes because we can",
    "start": "2226000",
    "end": "2231240"
  },
  {
    "text": "modify the behavior at colel level and so for example when we know okay um this",
    "start": "2231240",
    "end": "2236839"
  },
  {
    "text": "access to a system call this can break potentially our system we found an issue then we can write a small ebpf program",
    "start": "2236839",
    "end": "2244119"
  },
  {
    "text": "hog in in and and check for these arguments and just disable them and",
    "start": "2244119",
    "end": "2249280"
  },
  {
    "text": "that's far easier because we can distribute it so um with ebpf you can do",
    "start": "2249280",
    "end": "2254560"
  },
  {
    "text": "things that previously we're like oh I have to recompile the lenux Kel and then",
    "start": "2254560",
    "end": "2259800"
  },
  {
    "text": "ship it to our 10 service to test it out it's like oh flick of a finger you saw",
    "start": "2259800",
    "end": "2264880"
  },
  {
    "text": "it how fast it is um even when you bring Java in the game it's just a matter of seconds um and a thing that I'm I pretty",
    "start": "2264880",
    "end": "2273680"
  },
  {
    "text": "much like and I'm now now part of just as a hobby because like the people there is getex so the idea is that you can",
    "start": "2273680",
    "end": "2280560"
  },
  {
    "text": "write your own Linux Gula and yeah um you might wonder can we",
    "start": "2280560",
    "end": "2286560"
  },
  {
    "text": "do write our own Linux schedule in Java am I the only one who wers",
    "start": "2286560",
    "end": "2293680"
  },
  {
    "text": "this okay I'm the only one I'm not wondering anymore um I I did",
    "start": "2293680",
    "end": "2299920"
  },
  {
    "text": "this I wrote this last week um and I gave a talk on it at the ebps summit uh",
    "start": "2299920",
    "end": "2307560"
  },
  {
    "text": "um online um so essentially the idea is that with a prototype of my hello",
    "start": "2307560",
    "end": "2313280"
  },
  {
    "text": "EF um librry you can just implement the interface schedular um and Implement a",
    "start": "2313280",
    "end": "2319720"
  },
  {
    "text": "few methods uh C4 and then 25 lines of",
    "start": "2319720",
    "end": "2325119"
  },
  {
    "text": "java code later and I mean like the whole Java fall just 25 lines of code you have a schul that works that runs uh",
    "start": "2325119",
    "end": "2332880"
  },
  {
    "text": "when they gave the presentation um and had a Linux machine this even run on the",
    "start": "2332880",
    "end": "2338040"
  },
  {
    "text": "machine that I was doing the presentation with so that's cool um and that's pretty cool because you can use",
    "start": "2338040",
    "end": "2344040"
  },
  {
    "text": "this for example to reimagine testing testing for concurrency stuff and that's the thing that I'll be working in the",
    "start": "2344040",
    "end": "2350280"
  },
  {
    "text": "following week so you can follow up um and to do proper concurrency testing",
    "start": "2350280",
    "end": "2356280"
  },
  {
    "text": "where we can control the scheduling order and that's the cool thing with ebpf we can we as the user we control we",
    "start": "2356280",
    "end": "2363359"
  },
  {
    "text": "can control things that previously were only um controllable by people that work like for years in the C code minds of",
    "start": "2363359",
    "end": "2371480"
  },
  {
    "text": "the Linux underbelly um and that's actually what what's coming so for",
    "start": "2371480",
    "end": "2376880"
  },
  {
    "text": "example with lenux schula to to work on the lenux schula before skex you had to",
    "start": "2376880",
    "end": "2382880"
  },
  {
    "text": "have so many years of experience to even start to even be be able to get",
    "start": "2382880",
    "end": "2388520"
  },
  {
    "text": "something into the col now you just implement the schedule interface in Java and be done um and that's and that's",
    "start": "2388520",
    "end": "2394400"
  },
  {
    "text": "pretty cool so um yeah my final thoughts is it's it's it's a cool um environment",
    "start": "2394400",
    "end": "2400400"
  },
  {
    "text": "to work on because the ecosystem is so young you can even like as a humble JK",
    "start": "2400400",
    "end": "2405760"
  },
  {
    "text": "develop but you can still make a splashing ecosystem because it's not that large so uh you can just join and",
    "start": "2405760",
    "end": "2413280"
  },
  {
    "text": "and have fun and uh yeah come to conferences and also have fun anyway if",
    "start": "2413280",
    "end": "2418480"
  },
  {
    "text": "you want to know more um I collected all my ebpf resources at this link here um",
    "start": "2418480",
    "end": "2425680"
  },
  {
    "text": "then you can also find links to my blog um I want to say thanks to to Dylan who",
    "start": "2425680",
    "end": "2431760"
  },
  {
    "text": "who helped me um with all my ebf questions even at random days of the",
    "start": "2431760",
    "end": "2437119"
  },
  {
    "text": "even at random days of the week as as you do I want to thank my team here um I",
    "start": "2437119",
    "end": "2442839"
  },
  {
    "text": "work at subm machine we're like the third biggest contributor to the open JK and one of the uh open SS projects at",
    "start": "2442839",
    "end": "2450000"
  },
  {
    "text": "sap and you found me on Twitter and on Mone that was my talk thank you",
    "start": "2450000",
    "end": "2456710"
  },
  {
    "text": "[Applause]",
    "start": "2456710",
    "end": "2463640"
  },
  {
    "text": "questions I'm not asking you why you write a firewall in Java well if I'm honest that was like the first things",
    "start": "2463640",
    "end": "2470079"
  },
  {
    "text": "that I that that people asked me at lenux plumbers and I'm like because I",
    "start": "2470079",
    "end": "2476079"
  },
  {
    "text": "can why not yes anyway if you can have",
    "start": "2476079",
    "end": "2481200"
  },
  {
    "text": "you thought about implementing SE Linux in ebbf um so that's what people",
    "start": "2481200",
    "end": "2486680"
  },
  {
    "text": "essentially did so um app armor is I think part of as Linux so yes the people",
    "start": "2486680",
    "end": "2492240"
  },
  {
    "text": "are working on it not me and they don't want to have these things implemented in",
    "start": "2492240",
    "end": "2497480"
  },
  {
    "text": "Java I think but yeah of course there there people working on S Linux related stuff and there's also it's under the",
    "start": "2497480",
    "end": "2504079"
  },
  {
    "text": "project of Linux security modules LSM you can find quite a lot of information",
    "start": "2504079",
    "end": "2509800"
  },
  {
    "text": "and it's where like most of the effort is going into into in the security space you mean using ebpf yeah they're using",
    "start": "2509800",
    "end": "2516359"
  },
  {
    "text": "ebpf you can essentially what you can do I haven't get I I couldn't get it running on my machine but",
    "start": "2516359",
    "end": "2523160"
  },
  {
    "text": "um let's see um you have LS M Hooks and you can",
    "start": "2523160",
    "end": "2530480"
  },
  {
    "text": "essentially um have methods like restrict file open and um you want to",
    "start": "2530480",
    "end": "2535880"
  },
  {
    "text": "have a peak under the hood um you have the method you have like uh the the",
    "start": "2535880",
    "end": "2542400"
  },
  {
    "text": "method restrict file open and that's what it looks like in NC behind behind",
    "start": "2542400",
    "end": "2548400"
  },
  {
    "text": "the SE behind the scenes and this is for example used to restrict the file access properly not like we did it here in this",
    "start": "2548400",
    "end": "2555359"
  },
  {
    "text": "example where you can just set a symbolic link so people are working on that people far smarter than me",
    "start": "2555359",
    "end": "2562040"
  },
  {
    "text": "hopeful hi uh thank you for the talk um this may be a stupid question but do you",
    "start": "2562040",
    "end": "2569359"
  },
  {
    "text": "see this as an interesting like technology or interface for regular application developers like working on",
    "start": "2569359",
    "end": "2576040"
  },
  {
    "text": "plain old business backend project or more something for people that happen to be working for I",
    "start": "2576040",
    "end": "2583040"
  },
  {
    "text": "don't know graph no so so especially with especially with the testing angle",
    "start": "2583040",
    "end": "2588160"
  },
  {
    "text": "and that's angle that I want to continue working on on the side in the next couple of months is that when you",
    "start": "2588160",
    "end": "2594119"
  },
  {
    "text": "consider you for example you control the schu you can quite easily um test for",
    "start": "2594119",
    "end": "2600319"
  },
  {
    "text": "execution order so what you have in your applications especially when you have multi threading you assume oh this this",
    "start": "2600319",
    "end": "2606400"
  },
  {
    "text": "this thread runs and this fret runs but you never when you have a unit test you never can test uh oh this this fret runs",
    "start": "2606400",
    "end": "2614000"
  },
  {
    "text": "on a different CPU than this threet and they run concurrently and now I'm testing this very scenario that's",
    "start": "2614000",
    "end": "2621240"
  },
  {
    "text": "especially important when you want to test how your system behaves on the simulated load because you can for",
    "start": "2621240",
    "end": "2626599"
  },
  {
    "text": "example push these two uh threets onto the same CPU see what happens see what",
    "start": "2626599",
    "end": "2631640"
  },
  {
    "text": "happens if like half of your CP half of your Frets are randomly like stopped for 30 seconds does anything crash so I",
    "start": "2631640",
    "end": "2638440"
  },
  {
    "text": "think that's essentially especially when what I want to do is add an interface",
    "start": "2638440",
    "end": "2643800"
  },
  {
    "text": "layer on top where you just have a Java API and you use this so I think as a",
    "start": "2643800",
    "end": "2648880"
  },
  {
    "text": "normal application developer you probably will be in the future using tools based on this um and you can try",
    "start": "2648880",
    "end": "2655880"
  },
  {
    "text": "it out it's not that hard it only cost you a couple of months thank you",
    "start": "2655880",
    "end": "2662230"
  },
  {
    "text": "[Music]",
    "start": "2662230",
    "end": "2672940"
  }
]