[
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "14249"
  },
  {
    "text": "hi everybody and welcome to my talk about orchestration versus choreography patterns to help design interactions",
    "start": "15299",
    "end": "22320"
  },
  {
    "text": "between our services in a microservices architecture to start off",
    "start": "22320",
    "end": "27539"
  },
  {
    "text": "I'm going to take it on a little tangent and I want to talk to you about footballs specifically this ball that's",
    "start": "27539",
    "end": "32758"
  },
  {
    "text": "on screen right now which is the official match ball for the World Cup 2022. now footballs consist of many different",
    "start": "32759",
    "end": "39540"
  },
  {
    "text": "panels that are normally stitched together to make a sphere and in modern",
    "start": "39540",
    "end": "44879"
  },
  {
    "text": "footballs they're not stitched together using traditional methods anymore they're thermally bonded so the panels",
    "start": "44879",
    "end": "50160"
  },
  {
    "text": "can be of all sorts of different shapes and sizes and this allows manufacturers to make balls as round as possible and",
    "start": "50160",
    "end": "57120"
  },
  {
    "text": "which contributes to different properties and makes them fly faster and straighter and give",
    "start": "57120",
    "end": "63120"
  },
  {
    "text": "players more options for giving them ball bend and stuff like that so just",
    "start": "63120",
    "end": "68400"
  },
  {
    "text": "part of that idea for a second because I'm going to take you on another tangent which is about the bit that's inside this football so this football is",
    "start": "68400",
    "end": "74760"
  },
  {
    "text": "incredible it's got a sensor in the middle that will be measuring different",
    "start": "74760",
    "end": "79920"
  },
  {
    "text": "um aspects of of the ball 500 times a second so that FIFA can make better",
    "start": "79920",
    "end": "86100"
  },
  {
    "text": "refereeing decisions they can determine how fast the ball is moving how often it's been kicked where it is on the",
    "start": "86100",
    "end": "92220"
  },
  {
    "text": "pitch and it can help inform decisions around offsides and and other things like that and also they're going to use",
    "start": "92220",
    "end": "98220"
  },
  {
    "text": "it to produce AI Graphics so that you can you can see at home exactly what's",
    "start": "98220",
    "end": "103799"
  },
  {
    "text": "going on at any time with absolute millimeter precision but this isn't what I want to talk to",
    "start": "103799",
    "end": "110100"
  },
  {
    "text": "you about footballs for remember I was talking to you about those panels well I think the panels on a football especially old footballs bear a striking",
    "start": "110100",
    "end": "118020"
  },
  {
    "text": "resemblance to how our software systems look take this for example this ball has been",
    "start": "118020",
    "end": "123360"
  },
  {
    "text": "well and truly used to within an inch of its life and you can see that it's worn",
    "start": "123360",
    "end": "128640"
  },
  {
    "text": "and the the seams are starting to show and in certain places bits are falling off it and this is a bit similar to how",
    "start": "128640",
    "end": "136319"
  },
  {
    "text": "our systems age if we don't look after them properly this one here you can see has been",
    "start": "136319",
    "end": "142500"
  },
  {
    "text": "pushed even further and it's no longer even round so it's debatable whether this will roll properly whether it will",
    "start": "142500",
    "end": "148920"
  },
  {
    "text": "fly straight through the air it's really in a bad way and if we're that our systems get in this sort of State",
    "start": "148920",
    "end": "154800"
  },
  {
    "text": "there's normally only one course of action left for us and that's two throw it away and start again with",
    "start": "154800",
    "end": "160739"
  },
  {
    "text": "something new if we don't take action soon enough perhaps we'll see something like this",
    "start": "160739",
    "end": "166560"
  },
  {
    "text": "where bits of our football will explode and and the inners will pop out and it becomes completely unusable it might",
    "start": "166560",
    "end": "173760"
  },
  {
    "text": "still have a chance of being fixed but it's a serious incident or if it's just too far gone and everything's exploded",
    "start": "173760",
    "end": "181140"
  },
  {
    "text": "and there's no chance of fixing it we literally are left without any choice",
    "start": "181140",
    "end": "186300"
  },
  {
    "text": "but to start again a very costly mistake so hi I'm in I'm a software architect",
    "start": "186300",
    "end": "192599"
  },
  {
    "text": "from the UK and I want to talk to you today about quite a few things that unlike the footballs help us to maintain",
    "start": "192599",
    "end": "199440"
  },
  {
    "text": "our systems to keep them in good working order over time so specifically I want to look at this",
    "start": "199440",
    "end": "205080"
  },
  {
    "text": "idea of change and how the decisions that we make when we're designing our architectures and the way that we",
    "start": "205080",
    "end": "210239"
  },
  {
    "text": "Implement our architectures affects our ability to affect it and within that kind of context I want to",
    "start": "210239",
    "end": "217200"
  },
  {
    "text": "think about coupling and complexity and various other aspects of how we would put our systems together including the",
    "start": "217200",
    "end": "223019"
  },
  {
    "text": "patterns that we might use such as orchestration and choreography that help us to affect",
    "start": "223019",
    "end": "228739"
  },
  {
    "text": "long-term evolvable Solutions and as we go through this talk I'd like",
    "start": "228739",
    "end": "234959"
  },
  {
    "text": "you to keep in mind these five C's that I've called out on screen right now and I want you to think about them not just",
    "start": "234959",
    "end": "240900"
  },
  {
    "text": "from a technology perspective but also from a human an organizational perspective because ostensibly this is a",
    "start": "240900",
    "end": "247500"
  },
  {
    "text": "talk about decision making and design and that involves people as well as systems",
    "start": "247500",
    "end": "254580"
  },
  {
    "text": "so if we start at the point of change a good reference I think to to help us",
    "start": "254580",
    "end": "260340"
  },
  {
    "text": "understand why change is necessary is a paper by a man called Manny Layman who",
    "start": "260340",
    "end": "266639"
  },
  {
    "text": "was a professor at Imperial College London and before that a researcher at IBM's division in Yorktown Heights New",
    "start": "266639",
    "end": "274080"
  },
  {
    "text": "York and his paper programs life cycles and laws of software Revolution lays out",
    "start": "274080",
    "end": "279419"
  },
  {
    "text": "some laws that I think are quite relevant for this discussion he's got eight laws in total and I'm not going to",
    "start": "279419",
    "end": "285000"
  },
  {
    "text": "go through all of them in individual detail I just want to call out four in particular that all relate to various",
    "start": "285000",
    "end": "290040"
  },
  {
    "text": "things around how we will build and and have to maintain our systems so change",
    "start": "290040",
    "end": "295680"
  },
  {
    "text": "complexity growth and quality they're all affected and and just describe the",
    "start": "295680",
    "end": "301080"
  },
  {
    "text": "need for change so without change our systems become less satisfactory and without growth they'd become less",
    "start": "301080",
    "end": "307020"
  },
  {
    "text": "satisfactory by adding change and adding things as new features without Accu",
    "start": "307020",
    "end": "313560"
  },
  {
    "text": "without intentional maintenance or intentional work to manage and reduce complexity the effort to change in the",
    "start": "313560",
    "end": "321660"
  },
  {
    "text": "future is also made harder so we slow our rate of change if possible and then",
    "start": "321660",
    "end": "326820"
  },
  {
    "text": "this idea bottom left of declining quality is a really interesting one because it's saying that essentially stuff's changing all around our system",
    "start": "326820",
    "end": "333840"
  },
  {
    "text": "and if we don't keep up with it then we're also going to have a perception of reduced quality",
    "start": "333840",
    "end": "339840"
  },
  {
    "text": "so that leads on nicely to this other framing which is thinking about where change comes from and what stimulus it",
    "start": "339840",
    "end": "345419"
  },
  {
    "text": "triggers it so the orange boxes are fairly obviously things that happen outside of our system so either user",
    "start": "345419",
    "end": "352380"
  },
  {
    "text": "needs or feature requirements or wanting to adapt to Modern UI standards whatever these are things that would cause us to",
    "start": "352380",
    "end": "358380"
  },
  {
    "text": "have to update our systems but the purple ones they reflect more the problem that if we're not careful and",
    "start": "358380",
    "end": "364680"
  },
  {
    "text": "deliberate in the way that we want to work with our systems and put the effort into maintain them properly we will",
    "start": "364680",
    "end": "370680"
  },
  {
    "text": "self-limit our ability to impose change on the systems and the two that are in",
    "start": "370680",
    "end": "375780"
  },
  {
    "text": "the middle the organizational stability and conservation of familiarity laws are really interesting from a",
    "start": "375780",
    "end": "382020"
  },
  {
    "text": "socio-technical perspective because they are effectively talking about the need for teams to remain stable so they can",
    "start": "382020",
    "end": "388620"
  },
  {
    "text": "retain a Mastery at a decent enough level to make change efficiently but also they need to be able to keep the",
    "start": "388620",
    "end": "395340"
  },
  {
    "text": "the size of the system to a relatively stable level otherwise they can't hold information in the heads it's an",
    "start": "395340",
    "end": "401580"
  },
  {
    "text": "original source of talking about cognitive load so useful things to think about",
    "start": "401580",
    "end": "407100"
  },
  {
    "text": "in his paper money Layman calls out how complexity and how the growth of",
    "start": "407100",
    "end": "412560"
  },
  {
    "text": "complexity within a system leads to a Slowdown in change and this graph really clearly shows how over a number of years",
    "start": "412560",
    "end": "419460"
  },
  {
    "text": "the ability to if if effect change is slowed quite rapidly the amount of",
    "start": "419460",
    "end": "424800"
  },
  {
    "text": "change that happens at each it releases is reduced typically when we don't think about",
    "start": "424800",
    "end": "430380"
  },
  {
    "text": "microservices it's in the context of our organization organizations wanting to scale and that's not just scaling the",
    "start": "430380",
    "end": "436259"
  },
  {
    "text": "systems themselves it's also scaling a number of people that can work on them and we'd like to think that adding more",
    "start": "436259",
    "end": "442080"
  },
  {
    "text": "people into our our business would lead to an acceleration in the rate of features that we deliver",
    "start": "442080",
    "end": "448080"
  },
  {
    "text": "but actually I've seen it more often than not where with a proper without proper design without proper thought",
    "start": "448080",
    "end": "453479"
  },
  {
    "text": "into how we carve up our systems and the patterns that we use actually adding more people slows us down",
    "start": "453479",
    "end": "459960"
  },
  {
    "text": "so just take a minute to think which of these charts most closely matches your situation and perhaps have a reflection",
    "start": "459960",
    "end": "465479"
  },
  {
    "text": "thinking why it is that you are in the situation you're in so we're talking about interaction",
    "start": "465479",
    "end": "471840"
  },
  {
    "text": "patterns between our services and so that probably means we're thinking about workflows and it's useful to kind of",
    "start": "471840",
    "end": "478680"
  },
  {
    "text": "introduce the concept of what a workflow actually is I've got this rather crude and slightly",
    "start": "478680",
    "end": "484860"
  },
  {
    "text": "naive version of an e-commerce checkout flow to hopefully highlight to you what I would consider a workflow so you can",
    "start": "484860",
    "end": "491940"
  },
  {
    "text": "see there are various States and transitions in this diagram and if you go along the top you've got the happy path but if you also look there are",
    "start": "491940",
    "end": "499259"
  },
  {
    "text": "quite a few states where we've had a problem and we need to recognize that and handle it",
    "start": "499259",
    "end": "504960"
  },
  {
    "text": "so going through this you can see there are lots of different things to consider not least the fact that some of these",
    "start": "504960",
    "end": "511680"
  },
  {
    "text": "stages don't happen straight away so clearly once we've processed the payment with the the product isn't going to",
    "start": "511680",
    "end": "517320"
  },
  {
    "text": "immediately jump off a shelf and into a into a box and onto a wagon to deliver it to your house and equally if there",
    "start": "517320",
    "end": "524099"
  },
  {
    "text": "are problems some of them are completely outside of our control and people end up getting stuck in a quite horrible ways",
    "start": "524099",
    "end": "531839"
  },
  {
    "text": "so one of the useful things about having diagrams like this when we're thinking about designing systems is that we can",
    "start": "531839",
    "end": "537300"
  },
  {
    "text": "start to look at meaning behind them so here I've I've drawn some boxes around",
    "start": "537300",
    "end": "543120"
  },
  {
    "text": "related areas in related States and this is where we start to see um areas that we could perhaps give to",
    "start": "543120",
    "end": "550080"
  },
  {
    "text": "teams as individual ownerships and a lot of the terminology that I'm going to use to talk about these workflows will",
    "start": "550080",
    "end": "556019"
  },
  {
    "text": "relate to domain driven design so just as a quick recap to help make sure everyone's on the same page with what",
    "start": "556019",
    "end": "561540"
  },
  {
    "text": "the words mean that I'm going to use the blobs in the background they represent bounded contacts and Obama context is a",
    "start": "561540",
    "end": "568380"
  },
  {
    "text": "way of thinking about a complete and consistent model that exists strictly within the bands of that bounded context",
    "start": "568380",
    "end": "576060"
  },
  {
    "text": "people from different aspects of the business will have shared understanding of what all the terms and and models etc",
    "start": "576060",
    "end": "583680"
  },
  {
    "text": "mean and that is our ubiquitous language but it's important to think that within a bounded context we're not just saying",
    "start": "583680",
    "end": "590220"
  },
  {
    "text": "it's one microservice there could be many services and many models in there the key things that they're consistent",
    "start": "590220",
    "end": "597240"
  },
  {
    "text": "we could further group things within a boundary context by creating subdomains and the last thing to call now is the",
    "start": "597240",
    "end": "603779"
  },
  {
    "text": "bit between all of these bounded contexts is really important because ultimately these things have to work",
    "start": "603779",
    "end": "609420"
  },
  {
    "text": "together to provide the value of the whole system and that bit in between is where we Define our contracts and it's the data",
    "start": "609420",
    "end": "616200"
  },
  {
    "text": "layer it's The Interchange context that allows us to transfer information between our boundary context in a",
    "start": "616200",
    "end": "622620"
  },
  {
    "text": "understandable and reliable way so with that being said we'll just zoom back out to the overall workflow and",
    "start": "622620",
    "end": "629279"
  },
  {
    "text": "look at this in a different way too because it again it's helpful to kind of think about the meaning when you see the",
    "start": "629279",
    "end": "635100"
  },
  {
    "text": "lines between the states so here we can identify when something might be considered an external communication and",
    "start": "635100",
    "end": "641640"
  },
  {
    "text": "we're going to have to think about our interaction patterns and our interchange context or whether it's an internal",
    "start": "641640",
    "end": "649140"
  },
  {
    "text": "communication and we've got a lot more control so we don't have to be quite as rigorous and robust in our practices",
    "start": "649140",
    "end": "654600"
  },
  {
    "text": "because we have the ability within the team to control everything so let's move on to interaction patterns",
    "start": "654600",
    "end": "661019"
  },
  {
    "text": "and I'm going to start by talking about orchestration because perhaps it's the slightly simpler of the two to",
    "start": "661019",
    "end": "666779"
  },
  {
    "text": "understand so orchestration typically is where you would have a single service that acts as",
    "start": "666779",
    "end": "674279"
  },
  {
    "text": "a an orchestrator or a mediator and that manages the workflow State you would",
    "start": "674279",
    "end": "679560"
  },
  {
    "text": "probably have a defined workflow that it knows about and has modeled properly and it involves organizing API calls to",
    "start": "679560",
    "end": "687480"
  },
  {
    "text": "Downstream services that are part of bounded context so there's generally no domain Behavior",
    "start": "687480",
    "end": "694560"
  },
  {
    "text": "outside of the workflow that is mediating it's just it's generally just there to affect the workflow and all the",
    "start": "694560",
    "end": "699839"
  },
  {
    "text": "all the domain knowledge is in the boundary context themselves one of the more naive ways of thinking",
    "start": "699839",
    "end": "707160"
  },
  {
    "text": "about orchestration is that it's a synchronous approach and and that's kind of true to an extent because a lot of",
    "start": "707160",
    "end": "712380"
  },
  {
    "text": "the times the orchestrator will be calling into these services using synchronous API calls but it doesn't",
    "start": "712380",
    "end": "718140"
  },
  {
    "text": "necessarily mean that the overall workflow is synchronous because we're using these synchronous calls it does mean that there might be a",
    "start": "718140",
    "end": "724560"
  },
  {
    "text": "tendency for the for there to be some latency sensitivity especially if things are happening in sequence and if the",
    "start": "724560",
    "end": "731279"
  },
  {
    "text": "workflow is particularly busy and is a is a source of high traffic that scale",
    "start": "731279",
    "end": "737339"
  },
  {
    "text": "he's obviously going to Cascade too which might also lead to failure of cascading down",
    "start": "737339",
    "end": "742980"
  },
  {
    "text": "now clearly this is a very naive view of what an orchestration workflow might look like and one of the things that's",
    "start": "742980",
    "end": "748019"
  },
  {
    "text": "quite interesting to consider is that actually orchestration does have informal implementations too you might",
    "start": "748019",
    "end": "754260"
  },
  {
    "text": "have quite a few of these without really thinking about it within your code basis so where we have bounded context before",
    "start": "754260",
    "end": "759600"
  },
  {
    "text": "that just looked like they were the end of the request from the orchestrator actually they could act as informal",
    "start": "759600",
    "end": "765779"
  },
  {
    "text": "orchestrating orchestration systems themselves we had such a system like this in a back",
    "start": "765779",
    "end": "771300"
  },
  {
    "text": "and forth front-end application that we designed when I was working with pokerstar sports and here you can see",
    "start": "771300",
    "end": "777540"
  },
  {
    "text": "it's a fairly straightforward pattern to implement because we're only going to go to three services to build up data but",
    "start": "777540",
    "end": "783120"
  },
  {
    "text": "the the end result relied that a customer will see relies on calling all three of these systems now this URL",
    "start": "783120",
    "end": "790079"
  },
  {
    "text": "sequence diagram is a little bit dry and some of the problems with this are probably better called out if we think about it in a slightly more",
    "start": "790079",
    "end": "796079"
  },
  {
    "text": "architectural diagram Manner and the key thing to show here is that we kind of see this representation of a state",
    "start": "796079",
    "end": "802019"
  },
  {
    "text": "machine in this flow but one of the things that's missing is all the error handling and this is the problem with",
    "start": "802019",
    "end": "808440"
  },
  {
    "text": "this approach because in a general purpose programming language you might find that these ad hoc State machines",
    "start": "808440",
    "end": "814019"
  },
  {
    "text": "exist in a lot of places and it's essentially these workflows are just State machines or state charts what have you on a corner and if we're not careful",
    "start": "814019",
    "end": "821880"
  },
  {
    "text": "and we don't think about them and design them properly and do the due diligence that you might do if you were defining a",
    "start": "821880",
    "end": "827639"
  },
  {
    "text": "workflow using an actual orchestrator system such as step functions or Google workflows then it's easy to miss some of",
    "start": "827639",
    "end": "835139"
  },
  {
    "text": "the important nuances in error handling scenarios another thing to think about and I sort",
    "start": "835139",
    "end": "840779"
  },
  {
    "text": "of mentioned it before is that there's this simplification about orchestration being synchronous and choreography is",
    "start": "840779",
    "end": "846540"
  },
  {
    "text": "asynchronous and actually if you think about about it a lot of the workflows",
    "start": "846540",
    "end": "851820"
  },
  {
    "text": "that you'll be modeling in your architectures often have human in the loops and what I mean by that is that",
    "start": "851820",
    "end": "858120"
  },
  {
    "text": "there's some need for some physical thing to happen in the real world before your workflow can progress think about",
    "start": "858120",
    "end": "863519"
  },
  {
    "text": "fulfillment in our e-commerce example perhaps closer to home a better way to",
    "start": "863519",
    "end": "869120"
  },
  {
    "text": "emphasize what I mean here is to think about something that most developers will do so whether you work in e-commerce or not this will hopefully",
    "start": "869120",
    "end": "875339"
  },
  {
    "text": "bear some resemblance to your working patterns and that is the development workflow because here we've got a good",
    "start": "875339",
    "end": "880680"
  },
  {
    "text": "example of something that needs to have both human and automation aspects there are systems that need to talk to each",
    "start": "880680",
    "end": "886560"
  },
  {
    "text": "other to say yes this has happened or no it hasn't in the case of maybe a PR being approved and and that triggering",
    "start": "886560",
    "end": "892260"
  },
  {
    "text": "some behavior in RCI pipeline to go and actually build and deploy to a staging",
    "start": "892260",
    "end": "897420"
  },
  {
    "text": "environment for example but then you can also see how there's needs for parts of this workflow to",
    "start": "897420",
    "end": "902579"
  },
  {
    "text": "pause because we're waiting for a manual approval or the fact that a PR review is not going to happen instantaneously",
    "start": "902579",
    "end": "908519"
  },
  {
    "text": "there are there are things happening in the real world that need to be waited on",
    "start": "908519",
    "end": "914339"
  },
  {
    "text": "the other thing to think about because we're using apis a lot with these orchestration patterns is that there's",
    "start": "914339",
    "end": "919579"
  },
  {
    "text": "significant things like failures that we have to consider in our application design and thankfully I think we've got",
    "start": "919579",
    "end": "925560"
  },
  {
    "text": "quite a mature outlook on this now as an industry and many of these patterns are very well known and often implemented in",
    "start": "925560",
    "end": "932699"
  },
  {
    "text": "in our technology kind of by default and I'm sure there's been quite a lot of chat about this already throughout the",
    "start": "932699",
    "end": "939240"
  },
  {
    "text": "talks in the conference but with the rise of platforms and platform teams and the way that they think about",
    "start": "939240",
    "end": "944699"
  },
  {
    "text": "abstracting the requirements for things like error handling and failure handling",
    "start": "944699",
    "end": "949980"
  },
  {
    "text": "you often find that many of these requirements are now pushed to the platform themselves for example if you're using something",
    "start": "949980",
    "end": "956279"
  },
  {
    "text": "like um a service mesh and in the cases where the failure and all errors are",
    "start": "956279",
    "end": "961920"
  },
  {
    "text": "expected and they're going to be part of the workflow themselves so they're not unexpected things like Network timeouts",
    "start": "961920",
    "end": "967079"
  },
  {
    "text": "or or similar problems the nice thing about having a central orchestration system is that when a",
    "start": "967079",
    "end": "972959"
  },
  {
    "text": "thing goes wrong you can model the undos the the compensatory actions that you",
    "start": "972959",
    "end": "979380"
  },
  {
    "text": "need to be taking to get the previous steps in your workflow back into a known good state so for example here if we had",
    "start": "979380",
    "end": "985860"
  },
  {
    "text": "a problem where we we couldn't fulfill an order and we needed to cancel the payment and reallocate stock or update",
    "start": "985860",
    "end": "992459"
  },
  {
    "text": "our inventory in some way it's easy for the orchestrator to manage that because it has knowledge of the whole workflow",
    "start": "992459",
    "end": "999540"
  },
  {
    "text": "the last thing to say is that because of the way you can build some of these workflows using Cloud systems like step",
    "start": "999540",
    "end": "1004579"
  },
  {
    "text": "functions and Google workflows or Azure logic apps it's it's very trivial to",
    "start": "1004579",
    "end": "1009620"
  },
  {
    "text": "have a single instance of an orchestrator per workflow so rather than one single thing for all workflows you",
    "start": "1009620",
    "end": "1017360"
  },
  {
    "text": "can build them similar to how you would build your micro services so you have one per specific use case",
    "start": "1017360",
    "end": "1023000"
  },
  {
    "text": "so orchestration Pros for it there's a there's a lot you can do to help with understanding the state and managing the",
    "start": "1023000",
    "end": "1029360"
  },
  {
    "text": "state of your workflows and that means that you can do quite a lot of stuff",
    "start": "1029360",
    "end": "1034938"
  },
  {
    "text": "um regarding error handling and complex error handling in a more straightforward",
    "start": "1034939",
    "end": "1040220"
  },
  {
    "text": "and easily understood way lots of platform tooling exist to help you remove some of the complexity around",
    "start": "1040220",
    "end": "1045500"
  },
  {
    "text": "unexpected failures and how you'd handle them and ultimately there's probably a slightly lower cognitive load when",
    "start": "1045500",
    "end": "1051140"
  },
  {
    "text": "working with highly complex workflows on the on the negative sides though because you have this single",
    "start": "1051140",
    "end": "1057260"
  },
  {
    "text": "orchestrator at the at the heart of the system you do have a single point of failure which can cause some issues and",
    "start": "1057260",
    "end": "1064520"
  },
  {
    "text": "that partly might lead to an issue with scalability or additional latency because the the orchestrator itself is",
    "start": "1064520",
    "end": "1070220"
  },
  {
    "text": "acting at the acting as the coordination point and all requests have to go through it you might also find us some problems",
    "start": "1070220",
    "end": "1076520"
  },
  {
    "text": "with responsiveness and generally the because of the way you're coupling things together with the apis and the",
    "start": "1076520",
    "end": "1082940"
  },
  {
    "text": "knowledge of the workload being encoded into the orchestration system there is a higher degree of coupling between the",
    "start": "1082940",
    "end": "1089000"
  },
  {
    "text": "orchestrator and services so let's move on to choreography and",
    "start": "1089000",
    "end": "1094460"
  },
  {
    "text": "think about how that might differ a bit to orchestration and the easiest thing",
    "start": "1094460",
    "end": "1099740"
  },
  {
    "text": "to say and the most obvious thing to say outright is that there is no single coordinator that sits at the heart of",
    "start": "1099740",
    "end": "1104780"
  },
  {
    "text": "this so the workflows are a bit more ad hoc in their specification so that normally is implemented using",
    "start": "1104780",
    "end": "1112640"
  },
  {
    "text": "some sort of intermediate infrastructure like a message broker which is great because it gives us some nice properties",
    "start": "1112640",
    "end": "1118039"
  },
  {
    "text": "around Independence and and coupling and allowing us to develop and grow and",
    "start": "1118039",
    "end": "1123080"
  },
  {
    "text": "scale our systems in in a slightly more independent way because of that as well it might mean",
    "start": "1123080",
    "end": "1129200"
  },
  {
    "text": "that we're slightly less sensitive to latency because things might be able to happen in parallel but there are",
    "start": "1129200",
    "end": "1134780"
  },
  {
    "text": "additional failure modes to consider and there's other aspects to to managing the",
    "start": "1134780",
    "end": "1140419"
  },
  {
    "text": "overall workflow that will become apparent as we go through the next few slides",
    "start": "1140419",
    "end": "1145460"
  },
  {
    "text": "again this is a pretty naive View and if we look at something that's a bit more realistic where there may be several",
    "start": "1145460",
    "end": "1151419"
  },
  {
    "text": "events being emitted by different boundary contexts or many more boundary",
    "start": "1151419",
    "end": "1156980"
  },
  {
    "text": "contexts involved in the the overall workflow you can see that there are some problems come in the form of",
    "start": "1156980",
    "end": "1162679"
  },
  {
    "text": "understanding the state of things and also the potential to introduce problems like infinite loops",
    "start": "1162679",
    "end": "1169460"
  },
  {
    "text": "it's not beyond the Realms of possibility to think that the event coming out of our bottom blue band of",
    "start": "1169460",
    "end": "1175400"
  },
  {
    "text": "context could trigger the start of a workflow all over again and you could end up going round and round and round",
    "start": "1175400",
    "end": "1181580"
  },
  {
    "text": "decisions that you have to make when you're working in this sort of way include thinking well am I going to use an event or am I going to use a command",
    "start": "1181580",
    "end": "1187760"
  },
  {
    "text": "a command would imply that the producer knows about what's going to happen in the consumer and that's perhaps not",
    "start": "1187760",
    "end": "1194660"
  },
  {
    "text": "necessarily the most ideal scenario because one of the things we're trying to get out of this approach and one of",
    "start": "1194660",
    "end": "1200960"
  },
  {
    "text": "the benefits that we get is having weaker coupling and maybe that's inferring a bit too much knowledge about the downstream systems",
    "start": "1200960",
    "end": "1207620"
  },
  {
    "text": "if we do USE events they're not just plain sailing either there's quite a few things to consider there which we'll",
    "start": "1207620",
    "end": "1212780"
  },
  {
    "text": "talk about in a minute but I think on balance I would generally prefer to to use an event over a command because it",
    "start": "1212780",
    "end": "1218539"
  },
  {
    "text": "would allow us to operate independently as a producing system and allow many consumers to to hook into our events",
    "start": "1218539",
    "end": "1225500"
  },
  {
    "text": "without necessarily having to infer that knowledge onto the producer some words of warning though",
    "start": "1225500",
    "end": "1231320"
  },
  {
    "text": "our issues can arise if events are rebroadcast or if you have multiple different systems producing the same",
    "start": "1231320",
    "end": "1237799"
  },
  {
    "text": "event so something to keep in mind it should be a single source of Truth",
    "start": "1237799",
    "end": "1243380"
  },
  {
    "text": "when we have got events Martin Fowler's article about event being event driven",
    "start": "1243380",
    "end": "1248539"
  },
  {
    "text": "provides four nice different categorizations of the types of events you might want to consider using",
    "start": "1248539",
    "end": "1254900"
  },
  {
    "text": "so starting from the top in the most simple is event notification where you're basically just announcing a fact",
    "start": "1254900",
    "end": "1260240"
  },
  {
    "text": "that something has changed there's not much extra information passed along with that that notification and if there is a",
    "start": "1260240",
    "end": "1266960"
  },
  {
    "text": "downstream system that's interested in that change it probably means it's going to have to call back to the source of",
    "start": "1266960",
    "end": "1273140"
  },
  {
    "text": "the event to find out what the current state of the data is if you're not happy with that and that's",
    "start": "1273140",
    "end": "1279080"
  },
  {
    "text": "a degree of coupling and chattiness that you're not wanting to live with then you could use the event carried State",
    "start": "1279080",
    "end": "1284360"
  },
  {
    "text": "transfer approach which would reduce that chattiness but it would infer that there's going to be more data being",
    "start": "1284360",
    "end": "1290299"
  },
  {
    "text": "passed within our events it does allow you to build up your own localized view of a an event or an",
    "start": "1290299",
    "end": "1297860"
  },
  {
    "text": "entity and so that means that the might mean that the downstream systems are more responsive because they're able to",
    "start": "1297860",
    "end": "1303679"
  },
  {
    "text": "reply without having to coordinate with an upstream system if they get a request which is a nice property to have",
    "start": "1303679",
    "end": "1310460"
  },
  {
    "text": "event sourcing takes that a step further where all the events are recorded in a",
    "start": "1310460",
    "end": "1315799"
  },
  {
    "text": "persistent log and so that means that you can probably go back in time and replay them to hopefully get you back to",
    "start": "1315799",
    "end": "1321799"
  },
  {
    "text": "a known good State that's assuming that when you are processing these events in the first place there's no side effects",
    "start": "1321799",
    "end": "1328340"
  },
  {
    "text": "to going off to other systems that you would have to think about and account for when you were doing a replay another",
    "start": "1328340",
    "end": "1333980"
  },
  {
    "text": "things that need to be considered in this in this approach is how you would handle schema changes and and the need",
    "start": "1333980",
    "end": "1340580"
  },
  {
    "text": "for consumers to be able to process old events produced with one format and current events that might have a new",
    "start": "1340580",
    "end": "1346720"
  },
  {
    "text": "latest schema the last pattern to talk about here is cqrs and the only thing I'm really going",
    "start": "1346720",
    "end": "1353299"
  },
  {
    "text": "to say about this is it's something that you should perhaps consider with care and have a have a note of caution about",
    "start": "1353299",
    "end": "1358460"
  },
  {
    "text": "because while on the face of it it sounds like a really nice idea to be able to separate out your patterns for",
    "start": "1358460",
    "end": "1364460"
  },
  {
    "text": "reading and writing actually there's quite a lot of nuance and stuff that can go wrong there that might get you into",
    "start": "1364460",
    "end": "1369860"
  },
  {
    "text": "trouble further down the line so if you are interested in that pattern it's not something I'll cover in great detail now",
    "start": "1369860",
    "end": "1375799"
  },
  {
    "text": "but do go away and have a read and find out more for yourself and think about the consequences of some of the design choices",
    "start": "1375799",
    "end": "1382520"
  },
  {
    "text": "so once we've decided on what type of event we're going to use we have to then think about what kind of message pattern",
    "start": "1382520",
    "end": "1387679"
  },
  {
    "text": "we're going to use because again we've got quite a lot of stuff to think about when we're designing and they have implications on the performance of our",
    "start": "1387679",
    "end": "1394520"
  },
  {
    "text": "system and the coupling between the components if we're going to look at a standard",
    "start": "1394520",
    "end": "1399919"
  },
  {
    "text": "sort of amqp style um approach where you've got different types of exchanges and queues Etc we",
    "start": "1399919",
    "end": "1406640"
  },
  {
    "text": "could look at something like this and say well we've got a direct exchange and we're going to have multiple cues bound to different routing keys and here I've",
    "start": "1406640",
    "end": "1413659"
  },
  {
    "text": "called out a couple of different decisions that you're going to have to make because again it's not as straightforward as it might first appear",
    "start": "1413659",
    "end": "1419480"
  },
  {
    "text": "you've got to think whether whether you're going to have durable or transient exchanges or queues whether you're going to have persistent or",
    "start": "1419480",
    "end": "1424880"
  },
  {
    "text": "transient messages and ultimately you're going to have to think a lot about kind of the behaviors you want to have if the",
    "start": "1424880",
    "end": "1431419"
  },
  {
    "text": "broker goes down or if a consumer stops working one of the things that you might find",
    "start": "1431419",
    "end": "1437120"
  },
  {
    "text": "here is that while messages will be broadcast to all cues that are bound to",
    "start": "1437120",
    "end": "1442280"
  },
  {
    "text": "the same routing key so every consumer every queue will get all messages that is interested in if you bind multiple",
    "start": "1442280",
    "end": "1449600"
  },
  {
    "text": "consumers to a queue you end up with what's known as a workable and this is",
    "start": "1449600",
    "end": "1455600"
  },
  {
    "text": "great if you have no real need to worry about ordering but if ordering and",
    "start": "1455600",
    "end": "1460700"
  },
  {
    "text": "precise ordering is important then this can have implications on the outcomes of your your system so again it's another",
    "start": "1460700",
    "end": "1467360"
  },
  {
    "text": "consideration you have to take in into into mind when you're thinking about implementing implementing things",
    "start": "1467360",
    "end": "1475059"
  },
  {
    "text": "other types of exchanges that you can have include fan out and while this is great because it means that you can",
    "start": "1475520",
    "end": "1481039"
  },
  {
    "text": "broadcast all messages to all consumers in a really efficient way if you choose to use event Carriage State transfer",
    "start": "1481039",
    "end": "1487460"
  },
  {
    "text": "then it might mean that you're sending an awful lot of data because each queue receives a copy of each event so that",
    "start": "1487460",
    "end": "1494059"
  },
  {
    "text": "might have implications on your bandwidth and the cost of bandwidth depending on your your um your world it",
    "start": "1494059",
    "end": "1500480"
  },
  {
    "text": "might make it more expensive or it might saturate and you you have a limit to the throughput you can achieve",
    "start": "1500480",
    "end": "1505880"
  },
  {
    "text": "the last type of topic that you last type of exchange you can have in this sort of setup is a topic exchange where",
    "start": "1505880",
    "end": "1511400"
  },
  {
    "text": "your consumers can can Define cues that bind to patterns so they can receive",
    "start": "1511400",
    "end": "1516740"
  },
  {
    "text": "multiple different types of messages uh through the same queue which is great there's a there's a lot",
    "start": "1516740",
    "end": "1522919"
  },
  {
    "text": "of great things you can do with this but again if you have a high cardinality",
    "start": "1522919",
    "end": "1528799"
  },
  {
    "text": "um in a set of types of messages you're going to receive or lots of different schemas in other words this can have",
    "start": "1528799",
    "end": "1534740"
  },
  {
    "text": "serious implications for the ability of your consumers to keep up with change",
    "start": "1534740",
    "end": "1539960"
  },
  {
    "text": "other approaches that you might have for these systems include something like this which is a Kafka implementation so",
    "start": "1539960",
    "end": "1545659"
  },
  {
    "text": "it works slightly differently to the previous ones in in the it's more of akin to the event sourcing model where you each record is is produced to a",
    "start": "1545659",
    "end": "1553580"
  },
  {
    "text": "topic and stored durably in a partition so there's no replication there's no",
    "start": "1553580",
    "end": "1558919"
  },
  {
    "text": "copies of events going on here it's a slightly more efficient way to allow multiple consumers to can consume the",
    "start": "1558919",
    "end": "1565220"
  },
  {
    "text": "same data and because of the way that partitions work a nice property is that as you scale your consumers assuming you",
    "start": "1565220",
    "end": "1572659"
  },
  {
    "text": "don't scale beyond the number of partitions in your topic you will still you'll be able to manage to to process",
    "start": "1572659",
    "end": "1578840"
  },
  {
    "text": "things really efficiently because you can assign more resources so a consumer per partition but you also retain your",
    "start": "1578840",
    "end": "1586220"
  },
  {
    "text": "ordering within the partition so we're not having the same issues as we would do with the round robin approach from",
    "start": "1586220",
    "end": "1591799"
  },
  {
    "text": "before another nice property of using something like Kafka is that your consumer groups",
    "start": "1591799",
    "end": "1596900"
  },
  {
    "text": "basically keep a record of where they are independently of each other so you're not worried about Q backup or",
    "start": "1596900",
    "end": "1603320"
  },
  {
    "text": "anything like that because ultimately it's just the same data being read and it's it's an offset that's being updated by the consumer Itself by the group",
    "start": "1603320",
    "end": "1609740"
  },
  {
    "text": "itself but again things to consider here is how you want to handle offset lag because if",
    "start": "1609740",
    "end": "1615440"
  },
  {
    "text": "your offset lag grows too much and the retention policy of your topic is set such that it will start to delete",
    "start": "1615440",
    "end": "1621740"
  },
  {
    "text": "messages before they've been consumed then you've got big problems",
    "start": "1621740",
    "end": "1627020"
  },
  {
    "text": "so some of the considerations that I've called out there just kind of summarized in one place and a couple of extras to",
    "start": "1627020",
    "end": "1633440"
  },
  {
    "text": "think about as well two in particular on the left hand side I think people need to be aware of are",
    "start": "1633440",
    "end": "1639799"
  },
  {
    "text": "delivery semantics so are you going to go for at least once or at most ones",
    "start": "1639799",
    "end": "1644900"
  },
  {
    "text": "delivery and I would imagine that probably at least once is the preferable option there to make sure that you're",
    "start": "1644900",
    "end": "1650539"
  },
  {
    "text": "going to actually receive a message but then that means you've got to answer the question of what you're going to do if you receive an event twice and that's",
    "start": "1650539",
    "end": "1656960"
  },
  {
    "text": "where idem potency comes in on the right hand side the key differences there between orchestration",
    "start": "1656960",
    "end": "1663799"
  },
  {
    "text": "and choreography relate more to the error handling which I'll touch on in a second but also how are you going to",
    "start": "1663799",
    "end": "1669320"
  },
  {
    "text": "handle a workflow level timeout or something where you want to see the overall state of a workflow they become",
    "start": "1669320",
    "end": "1675799"
  },
  {
    "text": "much harder in this world because they there is no Central organizing element that's going to be able to tell you the",
    "start": "1675799",
    "end": "1681380"
  },
  {
    "text": "answers or coordinate a timeout in that sort of way so I mentioned error handling and if I",
    "start": "1681380",
    "end": "1686900"
  },
  {
    "text": "go back to this original view of how things might go wrong you can see how if we've got a system that's choreographed",
    "start": "1686900",
    "end": "1693919"
  },
  {
    "text": "and we're using events to say all the different transitions that should happen if we get to a point where we have",
    "start": "1693919",
    "end": "1700460"
  },
  {
    "text": "payment that fails we might already have allocated stock and at that point we've got to work out",
    "start": "1700460",
    "end": "1707000"
  },
  {
    "text": "how we're going to make a compensator reaction and you can see for that slightly simplified view it's probably",
    "start": "1707000",
    "end": "1714020"
  },
  {
    "text": "okay you could probably work out a way to emit an event and make your stock system think about listen to the event",
    "start": "1714020",
    "end": "1719720"
  },
  {
    "text": "and then know what to do when it hears it but if you've got a more complicated or involved workflow having to do those",
    "start": "1719720",
    "end": "1727220"
  },
  {
    "text": "compensatory actions in an event-driven system becomes increasingly difficult",
    "start": "1727220",
    "end": "1733039"
  },
  {
    "text": "so in summary then choreography um you have lots of good things to think",
    "start": "1733039",
    "end": "1738140"
  },
  {
    "text": "about because you get much weaker coupling between your services if you do it right which leads to Greater ability",
    "start": "1738140",
    "end": "1743179"
  },
  {
    "text": "to scale things more responsiveness in your services and because you've got a single point of failure you have a a",
    "start": "1743179",
    "end": "1750140"
  },
  {
    "text": "decent chance of making more robust fault tolerance happen and you could",
    "start": "1750140",
    "end": "1756200"
  },
  {
    "text": "also get quite high throughput and there's a lot of good things to think about here but on the con side if we",
    "start": "1756200",
    "end": "1762740"
  },
  {
    "text": "have a particularly complicated workflow especially if you've got complicated error handling requirements then the",
    "start": "1762740",
    "end": "1768080"
  },
  {
    "text": "complexity of that implementation grows quite rapidly and other things that you need to bear in mind is that it might",
    "start": "1768080",
    "end": "1774980"
  },
  {
    "text": "not be possible to Version Control the end-to-end workflow there's no single representation of it which is something",
    "start": "1774980",
    "end": "1781220"
  },
  {
    "text": "that is again in a complicated workflow quite a nice property to have so how would we go about choosing",
    "start": "1781220",
    "end": "1787760"
  },
  {
    "text": "between these different approaches if you're um if you've read about this or seen any",
    "start": "1787760",
    "end": "1793520"
  },
  {
    "text": "content on the internet you might have come across this blog post from Young Choi where he basically says as a rule",
    "start": "1793520",
    "end": "1799279"
  },
  {
    "text": "of thumb say orchestration should be used within a bounded context of a microservice but choreography between",
    "start": "1799279",
    "end": "1804500"
  },
  {
    "text": "bounded context so to put that into our diagram from before that would mean that",
    "start": "1804500",
    "end": "1809720"
  },
  {
    "text": "within say inventory and payment we're we're all good to use our orchestration",
    "start": "1809720",
    "end": "1814880"
  },
  {
    "text": "systems but between the bounded context we're going to just send the events and I think actually there's a little that's",
    "start": "1814880",
    "end": "1821000"
  },
  {
    "text": "quite problematic especially when you consider what I was talking about with the complicated error handling",
    "start": "1821000",
    "end": "1826940"
  },
  {
    "text": "if we think about how we might want to handle coordination and and understand the overall workflow that's where we can",
    "start": "1826940",
    "end": "1833120"
  },
  {
    "text": "start to think about this Continuum of how formally specified or informally specified our workflows might be",
    "start": "1833120",
    "end": "1839600"
  },
  {
    "text": "on the far left hand end we've got something that is a very specific orchestration service say like a step",
    "start": "1839600",
    "end": "1844880"
  },
  {
    "text": "functions where we can use a DSL or a markup language like yaml or Json to",
    "start": "1844880",
    "end": "1852440"
  },
  {
    "text": "define the various stages of our workflows and we can be very declarative in explaining it and we can Version",
    "start": "1852440",
    "end": "1858140"
  },
  {
    "text": "Control it and in some cases you can even use visual editors to build these workflows too stepping Inward and thinking about the",
    "start": "1858140",
    "end": "1864980"
  },
  {
    "text": "example I gave with the back end for front-end approach you could use a custom orchestrator that's defined using",
    "start": "1864980",
    "end": "1870320"
  },
  {
    "text": "a general purpose programming language but then you're taking on the responsibility of ensuring you've handled all the errors properly yourself",
    "start": "1870320",
    "end": "1876260"
  },
  {
    "text": "and it's perhaps a little bit less robust overall for more complicated approaches",
    "start": "1876260",
    "end": "1882200"
  },
  {
    "text": "going to the other end as as I sort of mentioned choreography doesn't necessarily have the same ability to",
    "start": "1882200",
    "end": "1888260"
  },
  {
    "text": "specify your your workflows in one place but there is an approach you can take where you would use something called a",
    "start": "1888260",
    "end": "1894559"
  },
  {
    "text": "front controller where the first service in a workflow has a burden of knowledge of the rest of the workflow so it can be",
    "start": "1894559",
    "end": "1901279"
  },
  {
    "text": "used to query all the systems involved to give you an accurate update of the state so there is a way that you can",
    "start": "1901279",
    "end": "1908260"
  },
  {
    "text": "semi-formally specify the workflow in some regards but typically right at the very right",
    "start": "1908260",
    "end": "1914419"
  },
  {
    "text": "hand end you would have what would be a more kind of stateless approach there is no Central State Management and in the",
    "start": "1914419",
    "end": "1921200"
  },
  {
    "text": "in this case the best you can hope for his documentation possibly you're only going to have the",
    "start": "1921200",
    "end": "1927200"
  },
  {
    "text": "end-to-end understanding of the workflow in a few people's heads and if you're unlucky you probably don't have anybody",
    "start": "1927200",
    "end": "1932539"
  },
  {
    "text": "you might not have anybody in your business that knows how everything works in one place",
    "start": "1932539",
    "end": "1937580"
  },
  {
    "text": "there's a bit of a gap in the middle there and if that is a SAS opportunity and we're in the right place in in San",
    "start": "1937580",
    "end": "1943220"
  },
  {
    "text": "Francisco for the sort of brains to come and think about an opportunity to build something there if you do do something and you make money off it please keep me",
    "start": "1943220",
    "end": "1950000"
  },
  {
    "text": "in mind distributed systems talks wouldn't be uh complete without a reference to the cap",
    "start": "1950000",
    "end": "1956539"
  },
  {
    "text": "theorem and so this is no different and there's a slightly different lens to",
    "start": "1956539",
    "end": "1962179"
  },
  {
    "text": "this that I wanted Broach which is thinking about the the purpose of microservices from the perspective of an",
    "start": "1962179",
    "end": "1967700"
  },
  {
    "text": "organizational um view so traditionally we think about this in terms of the technology and",
    "start": "1967700",
    "end": "1973580"
  },
  {
    "text": "saying that in the face of a network partition you can either choose to have consistency or or availability but not",
    "start": "1973580",
    "end": "1980120"
  },
  {
    "text": "both well if we flip this around and say well how does this apply to our teams bearing in mind that now we have very",
    "start": "1980120",
    "end": "1986539"
  },
  {
    "text": "distributed Global workforces if we've distributed our services across the world we need to think about how the cap",
    "start": "1986539",
    "end": "1993980"
  },
  {
    "text": "theorem might apply to our teams and so instead of partition tolerance if we",
    "start": "1993980",
    "end": "1999500"
  },
  {
    "text": "replace that with in the face of a globally distributed Workforce we can either optimize for local consistency so",
    "start": "1999500",
    "end": "2006640"
  },
  {
    "text": "teams are co-located and they've got a similar time zones so they can make rapid decisions together they can be",
    "start": "2006640",
    "end": "2013299"
  },
  {
    "text": "very consistent within themselves but obviously they can't be awake 24 hours so they're not going to be highly",
    "start": "2013299",
    "end": "2019240"
  },
  {
    "text": "available on the other hand you could make say well actually it's important the the teams are available to answer questions",
    "start": "2019240",
    "end": "2025539"
  },
  {
    "text": "and support other teams around the world so we'll stripe the people within them across different time zones and in that",
    "start": "2025539",
    "end": "2031720"
  },
  {
    "text": "case yes you've improved your availability but again people can't always be online all the time so the",
    "start": "2031720",
    "end": "2037179"
  },
  {
    "text": "ability for the team to make consistent decisions and how local autonomy is reduced",
    "start": "2037179",
    "end": "2042519"
  },
  {
    "text": "perhaps it's a a rough Earth way of thinking about it but it sort of makes",
    "start": "2042519",
    "end": "2047559"
  },
  {
    "text": "sense to me now complexity and coupling uh are",
    "start": "2047559",
    "end": "2053800"
  },
  {
    "text": "clearly going to be key elements that allow us to build these systems and have successful outcomes in terms of both the",
    "start": "2053800",
    "end": "2060760"
  },
  {
    "text": "the effectiveness of how they work but also the long-term ability to change them and one thing to say is that you",
    "start": "2060760",
    "end": "2068919"
  },
  {
    "text": "can have a degree of coupling that is inevitable a domain will have necessary",
    "start": "2068919",
    "end": "2075099"
  },
  {
    "text": "coupling and it will have necessary complexity and that's not to say that you can't push back and say actually this this thing you're asking me to do",
    "start": "2075099",
    "end": "2082118"
  },
  {
    "text": "is going to be almost impossible to build and is there a simpler where we can do it but generally there is a",
    "start": "2082119",
    "end": "2087940"
  },
  {
    "text": "there's a degree of coupling and complexity that we have to accept because it's mandated by the domain",
    "start": "2087940",
    "end": "2093040"
  },
  {
    "text": "requirements of the solution however what we can find as Architects and tech leads is that how we choose to",
    "start": "2093040",
    "end": "2100119"
  },
  {
    "text": "implement our workflows can have a significant impact on how much worse we make things so we need to really",
    "start": "2100119",
    "end": "2107020"
  },
  {
    "text": "consider coupling in quite a a deep level of detail Michael Nygaard offers his five",
    "start": "2107020",
    "end": "2114339"
  },
  {
    "text": "different types of coupling which I think are a really nice way of thinking about it and in particular I'm really",
    "start": "2114339",
    "end": "2120099"
  },
  {
    "text": "interested in the bottom one incidental coupling because especially when you think about event-driven systems this is",
    "start": "2120099",
    "end": "2126220"
  },
  {
    "text": "where things can go bang or go wrong and you say well how on Earth are these things linked",
    "start": "2126220",
    "end": "2132700"
  },
  {
    "text": "another way to look at this is to consider whether coupling is essential as I mentioned or accidental and in this",
    "start": "2132700",
    "end": "2139960"
  },
  {
    "text": "Frame I think you could say the essential stuff is that this is the necessary coupling for the domain that you're working with whereas accidental",
    "start": "2139960",
    "end": "2147160"
  },
  {
    "text": "is probably down to not doing enough designs or the right sort of design up",
    "start": "2147160",
    "end": "2153339"
  },
  {
    "text": "front and this can manifest itself in in slightly more subtle ways it might not",
    "start": "2153339",
    "end": "2159040"
  },
  {
    "text": "necessarily be that you're being called out every night for incidents it might be that you see something like this appearing and this is from when I was",
    "start": "2159040",
    "end": "2165700"
  },
  {
    "text": "working at Sky Bet back in about 2018 and we had a situation where we'd decomposed our systems into smaller",
    "start": "2165700",
    "end": "2172540"
  },
  {
    "text": "microservices or smaller services and teams owned them nominally with a you build it you run it kind of mindset",
    "start": "2172540",
    "end": "2178720"
  },
  {
    "text": "but we were finding increasingly that the amount of work that required another team to do some work on our behalf was",
    "start": "2178720",
    "end": "2185260"
  },
  {
    "text": "growing all the time and our delivery team put together this board so we could map up the dependencies and talk about",
    "start": "2185260",
    "end": "2191320"
  },
  {
    "text": "and have a stand up every week and I can guarantee you after a short amount of time there wasn't an awful lot of whiteboard left it was mainly just all",
    "start": "2191320",
    "end": "2197980"
  },
  {
    "text": "Post-it notes to really sort of emphasize just how bad this sort of thing can be if you don't",
    "start": "2197980",
    "end": "2203260"
  },
  {
    "text": "get your coupling right let's have a think about this example from making work visible where Dominica de grandis",
    "start": "2203260",
    "end": "2209560"
  },
  {
    "text": "introduces the idea of going for a meal at a restaurant where you're only going to get seated if everyone arrives on",
    "start": "2209560",
    "end": "2215320"
  },
  {
    "text": "time if you're both there on time and there's two people going for a meal great you're going to get seated but if the other",
    "start": "2215320",
    "end": "2221920"
  },
  {
    "text": "person's late or you're late or you're both late you're not going to get sued on time so you've got a one in four",
    "start": "2221920",
    "end": "2227140"
  },
  {
    "text": "chance third person's added to the to the list of attendees then your chances decrease",
    "start": "2227140",
    "end": "2233320"
  },
  {
    "text": "quite rapidly instead of being one in four it's now one in eight or twelve point five percent chance of being",
    "start": "2233320",
    "end": "2239079"
  },
  {
    "text": "seated and adding more people over time it quickly drops your chances of being Seated on time to effectively zero",
    "start": "2239079",
    "end": "2245800"
  },
  {
    "text": "because it's the probability is one over two to the n to put this in slightly more visual",
    "start": "2245800",
    "end": "2251740"
  },
  {
    "text": "format if we think about our coupling and the number of dependencies in the system that model shows that if we have",
    "start": "2251740",
    "end": "2259000"
  },
  {
    "text": "six dependencies we've only got a 1.6 percent chance of success and if we have",
    "start": "2259000",
    "end": "2264400"
  },
  {
    "text": "10 it's less than one percent 0.1 percent so clearly dependencies are very",
    "start": "2264400",
    "end": "2269740"
  },
  {
    "text": "problematic and coupling can be very problematic we have to be very deliberate in how we design things",
    "start": "2269740",
    "end": "2276940"
  },
  {
    "text": "another example from a company at a slightly different scale to us when I was at Sky bet is uh this is from",
    "start": "2276940",
    "end": "2282280"
  },
  {
    "text": "working backwards by Colin Breyer and Bill Carr and they talk about this NPI approach where you would have to submit",
    "start": "2282280",
    "end": "2289359"
  },
  {
    "text": "your prioritization request to say I need another team to work on this thing because it's important for my thing I'm",
    "start": "2289359",
    "end": "2295180"
  },
  {
    "text": "trying to deliver and at its worst case what happened was you would submit your",
    "start": "2295180",
    "end": "2300880"
  },
  {
    "text": "requests nothing would be prioritized for you but instead you'd be told to stop working on your projects that you",
    "start": "2300880",
    "end": "2306940"
  },
  {
    "text": "thought were important because you were being prioritized to work on somebody else's stuff and you were literally getting nothing for something",
    "start": "2306940",
    "end": "2314380"
  },
  {
    "text": "so with all that being said I'm going to add a sick thing onto our our list of types of coupling that we have to bear in mind when we're deciding on these",
    "start": "2314380",
    "end": "2320680"
  },
  {
    "text": "patterns and that is what's the level of organizational coupling that we're going to be putting into our system and that's",
    "start": "2320680",
    "end": "2327099"
  },
  {
    "text": "when progress can only be achieved together uh the last thing to say about coupling",
    "start": "2327099",
    "end": "2332920"
  },
  {
    "text": "is that often when we think about microservices we talk about decomposition and taking our monolith",
    "start": "2332920",
    "end": "2338320"
  },
  {
    "text": "and breaking it up and again if we're not deliberate in our design and we don't put enough thinking into it we can",
    "start": "2338320",
    "end": "2344859"
  },
  {
    "text": "get into a position where we're actually adding coupling rather than removing it so decomposition does not necessarily",
    "start": "2344859",
    "end": "2350920"
  },
  {
    "text": "equal decoupling complexity in our systems is something I've touched on and I mentioned that",
    "start": "2350920",
    "end": "2357460"
  },
  {
    "text": "Manny Layman had some of his laws that touched on thinking about a cognitive load and I think this model helps to",
    "start": "2357460",
    "end": "2364119"
  },
  {
    "text": "kind of show a way of thinking about this and how we might want to to be concerned and addressing cognitive load",
    "start": "2364119",
    "end": "2371380"
  },
  {
    "text": "when we're thinking about our patterns so this is an example from I think it's a civilization four and it's typical of",
    "start": "2371380",
    "end": "2378400"
  },
  {
    "text": "most sort of real-time strategy games where you have a map that you basically can't see anything in apart from a",
    "start": "2378400",
    "end": "2384700"
  },
  {
    "text": "bubble that's your immediate area and you go off exploring to find what's there so the the dark bits of the bits",
    "start": "2384700",
    "end": "2390760"
  },
  {
    "text": "you haven't yet seen the the slightly sort of faded bits or areas that you visited but you then no longer have",
    "start": "2390760",
    "end": "2397540"
  },
  {
    "text": "vision of so you you kind of have an idea what's there but realistically anything could be happening there you've",
    "start": "2397540",
    "end": "2403599"
  },
  {
    "text": "got no you don't actually have visibility you just kind of have a false hope that you do kind of know what's",
    "start": "2403599",
    "end": "2409060"
  },
  {
    "text": "going on and I think this Maps nicely to thinking about an architecture so if we consider the whole map to be our city",
    "start": "2409060",
    "end": "2415660"
  },
  {
    "text": "map or whatever that you would describe your system design your system diagram",
    "start": "2415660",
    "end": "2421180"
  },
  {
    "text": "the size of the team's Vision bubble is restricted by the complexity of the system and rather than trying to make",
    "start": "2421180",
    "end": "2427780"
  },
  {
    "text": "the vision bubble bigger what we ultimately need to aim to do is reduce the size of the map to match the size of",
    "start": "2427780",
    "end": "2433780"
  },
  {
    "text": "their Vision bubble and just depending on whether you're choosing orchestration or choreography or event driven versus",
    "start": "2433780",
    "end": "2439660"
  },
  {
    "text": "synchronous and and a more kind of standardized API driven approach with a coordinator",
    "start": "2439660",
    "end": "2445839"
  },
  {
    "text": "that will have impacts as to just how much stuff they need to think about at all times",
    "start": "2445839",
    "end": "2451480"
  },
  {
    "text": "so as mentioned I think a better way of framing the choice and to boil it down to kind of a nice snapshot Snappy view",
    "start": "2451480",
    "end": "2457240"
  },
  {
    "text": "is to think if I have a particularly complicated workflow something with notably complex error scenarios that's",
    "start": "2457240",
    "end": "2464980"
  },
  {
    "text": "probably a good case to say I'm going to put some sort of orchestration pattern in place whereas if I need highly",
    "start": "2464980",
    "end": "2471520"
  },
  {
    "text": "scalable responsive and there's generally not too much in the way of error handling needed and there's no",
    "start": "2471520",
    "end": "2477220"
  },
  {
    "text": "there's no directly High complexity error handling cases in there choreography is probably a good fit and",
    "start": "2477220",
    "end": "2485380"
  },
  {
    "text": "as a way of sort of summing all of that in a snapshot I've got this slide which I'll just leave on for a second so",
    "start": "2485380",
    "end": "2490839"
  },
  {
    "text": "people can take any screenshots or photographs that they might want",
    "start": "2490839",
    "end": "2496079"
  },
  {
    "text": "so we've chosen our patterns what are some of the things that we need to consider about when we're actually going",
    "start": "2497460",
    "end": "2502780"
  },
  {
    "text": "to go and Implement them so if I explode out from my example from before with the back end for front end here you can see",
    "start": "2502780",
    "end": "2509500"
  },
  {
    "text": "a nice example of actually you can probably use both effectively within your overall architecture and you're",
    "start": "2509500",
    "end": "2515079"
  },
  {
    "text": "going to need to use both and where we had the orchestration in the back end for front end you've also",
    "start": "2515079",
    "end": "2521440"
  },
  {
    "text": "got the choreography between the trading system and the data processing pipeline that's going to build up a view of the",
    "start": "2521440",
    "end": "2527920"
  },
  {
    "text": "world that's going to ultimately provide our catalog of events for our systems",
    "start": "2527920",
    "end": "2533099"
  },
  {
    "text": "some key things to call out here though is that that intermediate infrastructure",
    "start": "2533099",
    "end": "2538420"
  },
  {
    "text": "that I said this is in in here was a Kafka set of different kafika topics",
    "start": "2538420",
    "end": "2544060"
  },
  {
    "text": "there's things here that aren't obviously owned They Don't Really belong to one bounded context or another you",
    "start": "2544060",
    "end": "2550839"
  },
  {
    "text": "now have something some infrastructure that sits in The Interchange context so there's a lot of things to consider in",
    "start": "2550839",
    "end": "2556599"
  },
  {
    "text": "this area so how a scheme is going to be evolved how we're going to manage ACLS what do we need to do about certificates",
    "start": "2556599",
    "end": "2563200"
  },
  {
    "text": "if we want to implement Mutual TLS that kind of thing so if we take this diagram and think",
    "start": "2563200",
    "end": "2569020"
  },
  {
    "text": "about it in a bit more detail we want to consider first kind of what's inside the boxes how can we make them more",
    "start": "2569020",
    "end": "2574480"
  },
  {
    "text": "effective when we're building these patterns and I'm going to reframe something that was published as part of a series of blog posts by confluent",
    "start": "2574480",
    "end": "2580960"
  },
  {
    "text": "where they were talking about four pillars of event streaming and these four pillars map nicely to thinking",
    "start": "2580960",
    "end": "2586060"
  },
  {
    "text": "about these patterns and how we can make them successful so the systems themselves obviously need to have some",
    "start": "2586060",
    "end": "2591280"
  },
  {
    "text": "business value but we also need to ensure they've got appropriate instrumentation so we can tell they're working",
    "start": "2591280",
    "end": "2597280"
  },
  {
    "text": "the other two things I think are often overlooked especially when we're designing event driven systems and",
    "start": "2597280",
    "end": "2602680"
  },
  {
    "text": "that's probably because they're a little bit harder to implement and these are the things that will help us to to stop",
    "start": "2602680",
    "end": "2608079"
  },
  {
    "text": "processing if we need to to make it so that we're not going to compound any problems once they're detected and we",
    "start": "2608079",
    "end": "2613780"
  },
  {
    "text": "can inspect the state of systems and understand what's going on before maybe implementing a fix or providing some",
    "start": "2613780",
    "end": "2620319"
  },
  {
    "text": "compensated reactions and getting us back into a known good State and that operational plane on the far right hand",
    "start": "2620319",
    "end": "2626440"
  },
  {
    "text": "and this is the sort of thing where I've spoken to Ops managers in the past and told them that we were moving to using",
    "start": "2626440",
    "end": "2631960"
  },
  {
    "text": "Kafka for our state management and they started to sweat a little bit because they were like well how on Earth am I going to go about rectifying any data",
    "start": "2631960",
    "end": "2638740"
  },
  {
    "text": "inconsistencies or broken data that I would have ordinarily just been able to manage through logging into a database",
    "start": "2638740",
    "end": "2644619"
  },
  {
    "text": "server and correcting it with SQL commands so lots to think about within the boxes",
    "start": "2644619",
    "end": "2651520"
  },
  {
    "text": "more importantly and something that I think doesn't get enough attention because of the implied Simplicity of",
    "start": "2651520",
    "end": "2658480"
  },
  {
    "text": "diagrams is what's between the boxes so if you think about what's in the line that we often see between these Services",
    "start": "2658480",
    "end": "2665160"
  },
  {
    "text": "there's quite a lot of things that we have to consider and these are just the technical aspects if we add in all of",
    "start": "2665160",
    "end": "2671920"
  },
  {
    "text": "the social and organizational aspects you can see that that small thin line is holding an awful",
    "start": "2671920",
    "end": "2679599"
  },
  {
    "text": "lot of weight and it's enough to cause us to have some severe overload so we",
    "start": "2679599",
    "end": "2684819"
  },
  {
    "text": "have to think when we're doing our designs and we're implementing our patterns we have to think how we're going to handle all this sort of stuff",
    "start": "2684819",
    "end": "2691060"
  },
  {
    "text": "and everything else that won't fit on this slide in particular some things that's cool",
    "start": "2691060",
    "end": "2696400"
  },
  {
    "text": "out here that I think are really important especially again with our event-driven approaches is making sure",
    "start": "2696400",
    "end": "2701859"
  },
  {
    "text": "we've taken the time to be explicit in how we're handling our schemas because the worst thing that can happen is that",
    "start": "2701859",
    "end": "2707560"
  },
  {
    "text": "you can get started quite quickly with event driven architectures but before you know it you've got yourself into a",
    "start": "2707560",
    "end": "2712960"
  },
  {
    "text": "situation you've got many different types of events flowing around lots of ad hoc schema definitions and when you",
    "start": "2712960",
    "end": "2719200"
  },
  {
    "text": "try and change something you notice there's a ripple effect of failure across your systems",
    "start": "2719200",
    "end": "2724900"
  },
  {
    "text": "to counteract that you can be deliberate in how you're going to manage your compatibility and this guideline from",
    "start": "2724900",
    "end": "2731319"
  },
  {
    "text": "again confluent from their schema and Avro schema compatibility a guide for",
    "start": "2731319",
    "end": "2736420"
  },
  {
    "text": "their schema registry is a good way of framing the thinking you need to have so rather than just saying I'm going to",
    "start": "2736420",
    "end": "2742540"
  },
  {
    "text": "be backwards or forwards compatible we also need to consider whether we're going to have transitive compatibility",
    "start": "2742540",
    "end": "2747579"
  },
  {
    "text": "and that means when you publish an update you're not just checking against the previous version of a schema you're checking against all of the previous",
    "start": "2747579",
    "end": "2754060"
  },
  {
    "text": "versions and that'll mean that if you do ever have to replay data you're going to can you're going to make sure that your",
    "start": "2754060",
    "end": "2760240"
  },
  {
    "text": "consumers are going to be able to process that because they've you've guaranteed that all versions of your",
    "start": "2760240",
    "end": "2765640"
  },
  {
    "text": "schemas are going to be compatible equally we have to think about what",
    "start": "2765640",
    "end": "2771160"
  },
  {
    "text": "format we're going to send our data in because again depending on our choices for things like events and whether",
    "start": "2771160",
    "end": "2777640"
  },
  {
    "text": "they're events carried State transfer or notifications or whatever these can have significant impacts on the operational",
    "start": "2777640",
    "end": "2784839"
  },
  {
    "text": "capabilities of our system if we have something that is great for",
    "start": "2784839",
    "end": "2790599"
  },
  {
    "text": "human readability but doesn't compress particularly well we might find that we have issues if we're sending lots of",
    "start": "2790599",
    "end": "2797619"
  },
  {
    "text": "messages with that data in or if there are lots of updates that try and read something back from the system and we",
    "start": "2797619",
    "end": "2803680"
  },
  {
    "text": "found out this to our horror on on a high traffic day boxing day it was I",
    "start": "2803680",
    "end": "2808839"
  },
  {
    "text": "think in 2014 when a document that was used in in our system there was actually",
    "start": "2808839",
    "end": "2815260"
  },
  {
    "text": "it was a notification pattern so a notification an event would come through and this document would get pulled out of and it'll be used to determine",
    "start": "2815260",
    "end": "2821920"
  },
  {
    "text": "what kind of updates to make it grew so large that we actually saturated our Network and were unable to handle the",
    "start": "2821920",
    "end": "2827740"
  },
  {
    "text": "any requests from customers other things to think about if we do want to reduce the size then",
    "start": "2827740",
    "end": "2832780"
  },
  {
    "text": "serialization is clearly important and thinking about balancing the trade-off between compression and efficiency of",
    "start": "2832780",
    "end": "2838420"
  },
  {
    "text": "serialization is going to be important and there's lots of documentation you can do experiments such as the one that Uber have done here to kind of identify",
    "start": "2838420",
    "end": "2845200"
  },
  {
    "text": "what's most appropriate for your scenario the other thing to think about is whether you want to have an informal",
    "start": "2845200",
    "end": "2850359"
  },
  {
    "text": "schema or whether you want to have something that's a bit more firm something that's going to be documented in Version Control Etc like",
    "start": "2850359",
    "end": "2857500"
  },
  {
    "text": "in insane Pro debuffs or afro I don't have time to touch on it now but",
    "start": "2857500",
    "end": "2862599"
  },
  {
    "text": "one of the pillars of the the event streaming systems and overall systems is is instrumentation and I would firmly",
    "start": "2862599",
    "end": "2869380"
  },
  {
    "text": "encourage people to ensure they put distributed tracing at the heart of their systems because this is going to",
    "start": "2869380",
    "end": "2874420"
  },
  {
    "text": "make working with these patterns and these workflows significantly more straightforward especially if you want to try and find",
    "start": "2874420",
    "end": "2880960"
  },
  {
    "text": "things in logs when the logs are coming from lots of different systems and telling you about all sorts of different",
    "start": "2880960",
    "end": "2886060"
  },
  {
    "text": "things that are happening at once having a trace ID in correlation in there is a is a such an effective way of helping",
    "start": "2886060",
    "end": "2891940"
  },
  {
    "text": "you to diagnose problems or understand the state of a system it's probably the only realistic way",
    "start": "2891940",
    "end": "2898240"
  },
  {
    "text": "you've got of understanding how things are working in a truly event-driven distributed system",
    "start": "2898240",
    "end": "2904020"
  },
  {
    "text": "foreign there's lots of other tools that you can use I don't have time to go into all of them now and but one thing I",
    "start": "2904020",
    "end": "2910180"
  },
  {
    "text": "would call out is that in the kind of more synchronous restful HTTP API kind",
    "start": "2910180",
    "end": "2915940"
  },
  {
    "text": "of space I think Swagger or open apis is now known is a fairly well understood uh",
    "start": "2915940",
    "end": "2921640"
  },
  {
    "text": "piece of technology that helps people with managing their schemas and testing and all that sort of stuff and there is",
    "start": "2921640",
    "end": "2927099"
  },
  {
    "text": "a similar approach coming about from async API to help with event-driven systems so I do I would encourage people",
    "start": "2927099",
    "end": "2933099"
  },
  {
    "text": "to check that out and equally while we're thinking about all these patterns key and foremost for them is thinking",
    "start": "2933099",
    "end": "2939940"
  },
  {
    "text": "about how our teams are going to work so definitely I encourage people to go away and think about how team topologies",
    "start": "2939940",
    "end": "2945460"
  },
  {
    "text": "might apply to help them with thinking about the design of their systems and who's going to own what",
    "start": "2945460",
    "end": "2950740"
  },
  {
    "text": "so the last thing to really touch on here before finishing up is this idea that actually when we've decomposed our",
    "start": "2950740",
    "end": "2957040"
  },
  {
    "text": "systems into my into microservices ultimately at the end of the day we're going to have to recompose them again",
    "start": "2957040",
    "end": "2962079"
  },
  {
    "text": "and that again is where we might find a use for our orchestration pattern and from this reference architecture from",
    "start": "2962079",
    "end": "2967540"
  },
  {
    "text": "AWS you can see we've got this example here of of appsync which is a graphql layer that's orchestrating requests to",
    "start": "2967540",
    "end": "2973660"
  },
  {
    "text": "the rest of the system and I've sneakily called this in here because it's no not a coincidence that",
    "start": "2973660",
    "end": "2979780"
  },
  {
    "text": "I've used a reference architecture from AWS because one of the things that I think the bits between boxes the lines",
    "start": "2979780",
    "end": "2986380"
  },
  {
    "text": "are difficult is because they're often striped between multiple different technology teams because teams are",
    "start": "2986380",
    "end": "2992140"
  },
  {
    "text": "aligned at a technology level not at a domain level but Cloud gives us an opportunity to redress that and to think",
    "start": "2992140",
    "end": "2999339"
  },
  {
    "text": "about it in a different way to give whole ownership to our teams and that's because IAC is the magic glue that helps",
    "start": "2999339",
    "end": "3006660"
  },
  {
    "text": "us bind teams the the infrastructure together for our teams and manage that complexity between the boxes",
    "start": "3006660",
    "end": "3013859"
  },
  {
    "text": "so to sum up I think that the title was a bit cheeky obviously I don't want you to have a",
    "start": "3013859",
    "end": "3020220"
  },
  {
    "text": "monolith but we need to think about things working holistically together a system is the sum of its component parts",
    "start": "3020220",
    "end": "3025619"
  },
  {
    "text": "so we need to make sure that they all work together well and they provide us the ability to change over time",
    "start": "3025619",
    "end": "3031380"
  },
  {
    "text": "whether we have one system or many that work together the same kind of rules apply we need to be deliberate in our",
    "start": "3031380",
    "end": "3037380"
  },
  {
    "text": "design and to that mind I want to encourage you please do design for evolution consider",
    "start": "3037380",
    "end": "3043319"
  },
  {
    "text": "changing the reasons for it up front and be thorough and deliberate when you're choosing the patterns for implementing",
    "start": "3043319",
    "end": "3049619"
  },
  {
    "text": "your workflows because how you implement things is the way that you will make things harder for yourselves in the",
    "start": "3049619",
    "end": "3055559"
  },
  {
    "text": "future and the last thing the one thing that I hope everybody will go away and remember is that you have to remember",
    "start": "3055559",
    "end": "3061079"
  },
  {
    "text": "the bits between the boxes and that they all need people too thank you",
    "start": "3061079",
    "end": "3068480"
  },
  {
    "text": "[Music]",
    "start": "3070990",
    "end": "3074180"
  }
]