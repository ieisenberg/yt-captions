[
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7600"
  },
  {
    "text": "my name is Arun Gupta and I work for Oracle um this talk is about Java E7",
    "start": "7600",
    "end": "12960"
  },
  {
    "text": "platform how it can help you improve your productivity and what are we doing as part of the",
    "start": "12960",
    "end": "18160"
  },
  {
    "text": "platform I was thinking uh well we have two options and we can go either way by",
    "start": "18160",
    "end": "23199"
  },
  {
    "text": "a show of hands uh the two options first of all are um I can use slides talk through them and show you exactly you",
    "start": "23199",
    "end": "30080"
  },
  {
    "text": "what's coming in there or the other option is I can use no slides absolutely no slides I can let the code do the",
    "start": "30080",
    "end": "37280"
  },
  {
    "text": "talking I will show you bunch of code and show you exactly how the whole thing works so option",
    "start": "37280",
    "end": "43000"
  },
  {
    "text": "one two hands for slides option two I guess this is a developer",
    "start": "43000",
    "end": "48039"
  },
  {
    "text": "conference so no slides okay this is purely then a code driven session and as",
    "start": "48039",
    "end": "53280"
  },
  {
    "text": "you can see I have net beans open live now this is a 731 development release",
    "start": "53280",
    "end": "59640"
  },
  {
    "text": "what about I'm going to talk over here is well first of all Java E7 is a major",
    "start": "59640",
    "end": "64760"
  },
  {
    "text": "major update of the Java e platform Java E6 was the last one it was released in",
    "start": "64760",
    "end": "70799"
  },
  {
    "text": "December of 2009 so over three and a half years ago and Java E7 is now ready",
    "start": "70799",
    "end": "76159"
  },
  {
    "text": "for launch next week um literally June 12th is when the online launch is going",
    "start": "76159",
    "end": "81280"
  },
  {
    "text": "to happen as part of that we have added four new specifications to the platform",
    "start": "81280",
    "end": "87960"
  },
  {
    "text": "so there's an first class support for building websocket driven applications and I'll show you how we do that I will",
    "start": "87960",
    "end": "93720"
  },
  {
    "text": "show you how there is first class support for Json processing I'll talk about that how there is support for",
    "start": "93720",
    "end": "99119"
  },
  {
    "text": "batch applications you no longer need the third party proprietary apis anymore",
    "start": "99119",
    "end": "104520"
  },
  {
    "text": "um and there is support for concurrency utilities so once again Jon web saret",
    "start": "104520",
    "end": "109799"
  },
  {
    "text": "concurrency and batch that's the new functionality coming in part of the Java E7 platform um and then JX RS 2 JMS 2",
    "start": "109799",
    "end": "120000"
  },
  {
    "text": "been majorly updated I will show features of that what are we doing exactly around those lines um in terms",
    "start": "120000",
    "end": "126280"
  },
  {
    "text": "of know in Java E6 we introduced this concept of a web profile so web profile is what is targeted towards you know a",
    "start": "126280",
    "end": "134080"
  },
  {
    "text": "application of modern or modern application development like let's say if you don't need GMS and RMI IOP interoperability",
    "start": "134080",
    "end": "142000"
  },
  {
    "text": "and things like that you know you can just do web profile small size you know 30 megabyte download and you get started",
    "start": "142000",
    "end": "148360"
  },
  {
    "text": "with it quickly same we have a web profile as part of java E7 as well and",
    "start": "148360",
    "end": "154440"
  },
  {
    "text": "um the three additions really to web profile are first of all is Jax RS 2.0",
    "start": "154440",
    "end": "160760"
  },
  {
    "text": "Jax RS is the first edition know in Java E6 it was not added primarily because of timing scheduling constraints uh and",
    "start": "160760",
    "end": "168200"
  },
  {
    "text": "then in addition we actually surveyed community members on what other Technologies they would like to see as",
    "start": "168200",
    "end": "174280"
  },
  {
    "text": "part of web profile so Jon and websocket are also part of uh web profile as part",
    "start": "174280",
    "end": "180239"
  },
  {
    "text": "of java E7 so that's sort of how the web profile and the full platform Works know now if you need",
    "start": "180239",
    "end": "186879"
  },
  {
    "text": "batch concurrency the whole thing then of course you can have the full platform implementation of java",
    "start": "186879",
    "end": "192680"
  },
  {
    "text": "E7 with that let's get",
    "start": "192680",
    "end": "196599"
  },
  {
    "text": "started so I have a whole bunch of samples like about 200 plus samples um",
    "start": "208519",
    "end": "214720"
  },
  {
    "text": "I'm just going to not going to go through all of them in 1 hour but my goal is to kind of pick and choose certain specific ones which will",
    "start": "214720",
    "end": "221000"
  },
  {
    "text": "highlight what the capabilities of the platform are so the first one that I want to start with is like a websocket",
    "start": "221000",
    "end": "227120"
  },
  {
    "text": "one and if you were at my websocket talk then this would be sort of a repeat from",
    "start": "227120",
    "end": "232439"
  },
  {
    "text": "that but the idea is what is websocket websocket gives you a full duplex B",
    "start": "232439",
    "end": "237920"
  },
  {
    "text": "directional communication over a single TCP Channel which is way better than",
    "start": "237920",
    "end": "244040"
  },
  {
    "text": "traditional HTTP rest because I know it's a single TCP connection you don't have to establish a HTTP connection or a",
    "start": "244040",
    "end": "251120"
  },
  {
    "text": "TCP connection every time you want to send a request you don't have to send those chatty HTTP headers none of that",
    "start": "251120",
    "end": "257600"
  },
  {
    "text": "requires websocket is a very lean protocol specifically with these days",
    "start": "257600",
    "end": "262759"
  },
  {
    "text": "you know with HTML 5 gaming Mobile gaming you know low bandwidth this is",
    "start": "262759",
    "end": "267840"
  },
  {
    "text": "very very efficient so what I'm going to show you is a simple application which allows you to build a collaborative",
    "start": "267840",
    "end": "275039"
  },
  {
    "text": "whiteboard the idea is collaborative whiteboard but can be very easily extended to um online game for example",
    "start": "275039",
    "end": "282000"
  },
  {
    "text": "you know two players playing across the internet let's play the game",
    "start": "282000",
    "end": "289120"
  },
  {
    "text": "first and then I'll walk you through the source code as well",
    "start": "292080",
    "end": "297560"
  },
  {
    "text": "and here is how my game looks like well that's one browser what I'm using here is",
    "start": "305080",
    "end": "310360"
  },
  {
    "text": "Chrome and I can bring up the same game in Firefox as well so on the left what I",
    "start": "310360",
    "end": "315800"
  },
  {
    "text": "have is Chrome browser on the right I have Firefox these two could definitely live across internet all those things",
    "start": "315800",
    "end": "322039"
  },
  {
    "text": "that is very much know a reality um this application would run on any HTML 5",
    "start": "322039",
    "end": "328319"
  },
  {
    "text": "compliant browser as such okay now let's say in terms of the game whatever I'm",
    "start": "328319",
    "end": "334160"
  },
  {
    "text": "clicking here is getting reflected on my other browser as well I can change the",
    "start": "334160",
    "end": "339479"
  },
  {
    "text": "shape here and then gets reflected as well I can change the color here and that gets reflected too so whatever I'm",
    "start": "339479",
    "end": "346400"
  },
  {
    "text": "clicking on one the idea is um if there two players playing if they're clicking",
    "start": "346400",
    "end": "351720"
  },
  {
    "text": "on either of their games they're clicking either of their game screens that would get reflected on",
    "start": "351720",
    "end": "357319"
  },
  {
    "text": "other browser or or the other other players game screen now same thing if I go here if I click a few squares here I",
    "start": "357319",
    "end": "364759"
  },
  {
    "text": "go back here the same squares are reflected here so it's literally a two-way communication client to server",
    "start": "364759",
    "end": "370520"
  },
  {
    "text": "server to client now what happens if you go offline let's say you're saying you know I'm not connected to the net now or",
    "start": "370520",
    "end": "377280"
  },
  {
    "text": "know I lost the connectivity very typical um then let's say you change the",
    "start": "377280",
    "end": "383680"
  },
  {
    "text": "color you clicked around whatever you're clicking is not getting reflected on the",
    "start": "383680",
    "end": "389280"
  },
  {
    "text": "other browser now let's say you know you do come back online but now even though the",
    "start": "389280",
    "end": "395960"
  },
  {
    "text": "state is both online but the games are out of sync so how do you update the other player so you send a snapshot okay",
    "start": "395960",
    "end": "403720"
  },
  {
    "text": "so a typical concept but what I'm going to show you is the code behind this to",
    "start": "403720",
    "end": "408759"
  },
  {
    "text": "help you understand how websockets work",
    "start": "408759",
    "end": "413240"
  },
  {
    "text": "so first thing you know if you want to build a websocket you have to have a websocket endpoint u in terms of",
    "start": "422879",
    "end": "429160"
  },
  {
    "text": "endpoint the websocket API or Java API for websocket allows you to Define uh a",
    "start": "429160",
    "end": "436919"
  },
  {
    "text": "web socket endpoint annotated or programmatically what I'm using is an annotation so line 57 is what is my",
    "start": "436919",
    "end": "444879"
  },
  {
    "text": "server endpoint which says okay this is this pojo is my websocket endpoint um",
    "start": "444879",
    "end": "450000"
  },
  {
    "text": "and this is available at the URI websocket now it's specifying the URI where my websocket endpoint is listening",
    "start": "450000",
    "end": "457479"
  },
  {
    "text": "now a web soet can send a Text data or a binary data but you may not want to deal",
    "start": "457479",
    "end": "463560"
  },
  {
    "text": "with the text and binary data in it's raw form as in raw text and raw binary what you want to deal with is how I can",
    "start": "463560",
    "end": "471199"
  },
  {
    "text": "convert that text SL binary data easily to my business domain objects in my case",
    "start": "471199",
    "end": "477840"
  },
  {
    "text": "it's a figure object so if L what's happening in my HTML 5 canvas every time",
    "start": "477840",
    "end": "483199"
  },
  {
    "text": "I'm clicking I'm capturing the shape the color and the X and Y coordinates of",
    "start": "483199",
    "end": "489479"
  },
  {
    "text": "where I'm clicking I'm building that as a Json structure sending it over to server but that's text and know do I",
    "start": "489479",
    "end": "496400"
  },
  {
    "text": "need to can I have a Json parsel library to deal with that no so that's exactly where your websocket encoders and",
    "start": "496400",
    "end": "503000"
  },
  {
    "text": "decoders come in as part of that what you're saying is I have a decoder which will take my Json text as is convert or",
    "start": "503000",
    "end": "511360"
  },
  {
    "text": "decode that text to A pojo similarly if I'm sending a response back I may be",
    "start": "511360",
    "end": "516839"
  },
  {
    "text": "sending a response back as a figure object in that case I'll have a encoder which will take a figure object and",
    "start": "516839",
    "end": "522360"
  },
  {
    "text": "encode it to the Json text so my encoders and decoders are specified here I have life cycle callback handlers",
    "start": "522360",
    "end": "530120"
  },
  {
    "text": "in websocket which says if a client is connecting to my endpoint call this call",
    "start": "530120",
    "end": "536760"
  },
  {
    "text": "back Handler or if any client is connecting to my end end point call this call back Handler in this case what I'm",
    "start": "536760",
    "end": "542440"
  },
  {
    "text": "doing is I am maintaining a set of sessions session is my client endpoint",
    "start": "542440",
    "end": "547519"
  },
  {
    "text": "or the client that is trying to connect to me and all I'm doing is I'm adding that session object to the set similarly",
    "start": "547519",
    "end": "555480"
  },
  {
    "text": "on on close which is line 69 here I'm saying every time a client is",
    "start": "555480",
    "end": "560920"
  },
  {
    "text": "disconnecting remove it from the set so the idea is at any point of time the set",
    "start": "560920",
    "end": "566959"
  },
  {
    "text": "has the complete set of clients that are connected to you now as I said we have the Json text",
    "start": "566959",
    "end": "574640"
  },
  {
    "text": "going back and forth but I want to deal with my figure object so what I'm doing is I have my figure",
    "start": "574640",
    "end": "581680"
  },
  {
    "text": "object if you receive a web socket message then you want to dispatch that websocket or you want to have access to",
    "start": "582880",
    "end": "590200"
  },
  {
    "text": "the payload in a business method and that method really is U identified by at",
    "start": "590200",
    "end": "595480"
  },
  {
    "text": "on message annotation which is line 70 4 4 now it's shown number here or",
    "start": "595480",
    "end": "602360"
  },
  {
    "text": "line 74 now what I'm saying is this is the my figure encoder decoder I'm",
    "start": "602360",
    "end": "607640"
  },
  {
    "text": "receiving a text Data this encoder and decoder encodes and decodes from text so",
    "start": "607640",
    "end": "613320"
  },
  {
    "text": "this method will be dispatched if I receive a text data that can be encoded to figure and so this method is called",
    "start": "613320",
    "end": "620120"
  },
  {
    "text": "and in this method effectively all I'm saying is I'm iterating through all the clients that are connected and I'm",
    "start": "620120",
    "end": "625959"
  },
  {
    "text": "broadcasting the same shape figure XY coordinates to all the clients which",
    "start": "625959",
    "end": "631200"
  },
  {
    "text": "then refresh themselves similarly if web socket sends",
    "start": "631200",
    "end": "636279"
  },
  {
    "text": "binary data in our case the binary data is when we click on the button send snapshot in that case it's just taking a",
    "start": "636279",
    "end": "642639"
  },
  {
    "text": "HTML 5 canvas a snapshot of it and saying send this as a bite uh buffer or",
    "start": "642639",
    "end": "648000"
  },
  {
    "text": "array buffer uh array buffer is a JavaScript binary type now that is being received",
    "start": "648000",
    "end": "653600"
  },
  {
    "text": "as a bite buffer or even as a bite array in your pojo endpoint here so that's sort of your",
    "start": "653600",
    "end": "659920"
  },
  {
    "text": "um pojo code here if we take a look at the index.jsp that itself is pretty",
    "start": "659920",
    "end": "666440"
  },
  {
    "text": "vanilla nothing fancy there I'm just got some headers my canvas here then I got",
    "start": "666440",
    "end": "673160"
  },
  {
    "text": "some radio buttons you know this is color shape and then I got some buttons which says you know you want to send",
    "start": "673160",
    "end": "679320"
  },
  {
    "text": "instant or send a snapshot and then I have my websocket DJs",
    "start": "679320",
    "end": "686720"
  },
  {
    "text": "file if you want to connect to a websocket endpoint you have to use the URI call as WS colon SL SL you don't use",
    "start": "687760",
    "end": "695600"
  },
  {
    "text": "the HTTP URI scheme um now the moment you say WS colon SL slash it do the data",
    "start": "695600",
    "end": "702720"
  },
  {
    "text": "hand it does the connection negotiation uh in the sense you know there's a handshake defined in the websocket",
    "start": "702720",
    "end": "708880"
  },
  {
    "text": "protocol which says okay you can take an HTTP connection upgrade it to a web",
    "start": "708880",
    "end": "714120"
  },
  {
    "text": "socket and then um do the web soet protocol uh Exchange after that so the",
    "start": "714120",
    "end": "720639"
  },
  {
    "text": "moment you know you create well first of all you make the URI which is saying host Port path name Etc this is the URI",
    "start": "720639",
    "end": "727440"
  },
  {
    "text": "where my endpoint is listening then you say new web socket this is a new JavaScript API which allows you to make",
    "start": "727440",
    "end": "735079"
  },
  {
    "text": "a connection to a websocket endpoint very easily well this is the only way that",
    "start": "735079",
    "end": "740399"
  },
  {
    "text": "you can do connection to J websocket endpoint today um I'm setting the binary type as array",
    "start": "740399",
    "end": "746720"
  },
  {
    "text": "buffer just the way I have on jav side I have my call back handlers same way I",
    "start": "746720",
    "end": "751920"
  },
  {
    "text": "have call back handlers on the JavaScript type and I'm setting those so if I look at on message for",
    "start": "751920",
    "end": "758959"
  },
  {
    "text": "example in on message that means I'm receiving a message once I receive a message all I'm saying is oh if the data",
    "start": "758959",
    "end": "765600"
  },
  {
    "text": "type is string that means I know I just need to update a specific um object in",
    "start": "765600",
    "end": "771440"
  },
  {
    "text": "my HTML 5 canvas and if I'm receiving a snapshot then I need to update the",
    "start": "771440",
    "end": "776519"
  },
  {
    "text": "entire uh HTML 5 canvas so that's the on message but if you look at send text and",
    "start": "776519",
    "end": "781760"
  },
  {
    "text": "send binary those methods are pretty simple just say websocket send websocket send um and the only intent here is to",
    "start": "781760",
    "end": "788880"
  },
  {
    "text": "kind of highlight the semantic nature of it the syntax is exactly the",
    "start": "788880",
    "end": "794199"
  },
  {
    "text": "same now um looking a little bit more at the Java",
    "start": "798199",
    "end": "803560"
  },
  {
    "text": "code so this is my figure decoder which says I'm going to decode a textt message",
    "start": "806519",
    "end": "811560"
  },
  {
    "text": "here essentially taking a string converting it into figure and in this whatever your logic is in this case what",
    "start": "811560",
    "end": "818360"
  },
  {
    "text": "I'm doing is I'm using the standard Json parsing API which is again a new API added to the platform to take the string",
    "start": "818360",
    "end": "825440"
  },
  {
    "text": "data converting it into a Jon object and letting it um populate the figure object",
    "start": "825440",
    "end": "831360"
  },
  {
    "text": "okay so that's my simple sample of web",
    "start": "831360",
    "end": "836040"
  },
  {
    "text": "socket okay let's take look at another sample the next thing I'm going to jump",
    "start": "837000",
    "end": "842199"
  },
  {
    "text": "on is a simple batch",
    "start": "842199",
    "end": "846120"
  },
  {
    "text": "sample now batch applications is a standard way the batch API is a new API",
    "start": "849320",
    "end": "855199"
  },
  {
    "text": "added to the Java E7 platform it allows you to create batch applications using",
    "start": "855199",
    "end": "860959"
  },
  {
    "text": "standard apis so you don't need to use you know any of those proprietary apis with this anymore now in terms of batch",
    "start": "860959",
    "end": "868160"
  },
  {
    "text": "it defines the concept of oh there is a job operator which knows how to operate",
    "start": "868160",
    "end": "874040"
  },
  {
    "text": "the job there is a job repository where all the jobs are stored there is a job",
    "start": "874040",
    "end": "879880"
  },
  {
    "text": "definition which is effectively defined as a deployment descriptor or a job XML",
    "start": "879880",
    "end": "885639"
  },
  {
    "text": "um and there are reasons to do that but those are the basic concepts you know that are very well known in the batch",
    "start": "885639",
    "end": "891480"
  },
  {
    "text": "World effectively now in addition the batch API defines two concepts called as",
    "start": "891480",
    "end": "898120"
  },
  {
    "text": "chunk and bachlet the chunk is a concept where you know chunk is more like item",
    "start": "898120",
    "end": "904600"
  },
  {
    "text": "oriented processing where you read an item you process an item and then you",
    "start": "904600",
    "end": "910759"
  },
  {
    "text": "aggregate it for writing so you read and write an item sorry read and process an",
    "start": "910759",
    "end": "916519"
  },
  {
    "text": "item multiple times and then you give it for aggregation to writer and then writer writes it out think about the use",
    "start": "916519",
    "end": "923360"
  },
  {
    "text": "case where you are reading the records from a CSV file so let's say you're reading the record from a CSV file",
    "start": "923360",
    "end": "930880"
  },
  {
    "text": "processing it in the sense validating it you know is the record valid or not valid and then you're saying okay I'm",
    "start": "930880",
    "end": "936560"
  },
  {
    "text": "done validating you give it to writer for an aggregation you do that maybe say 10 times read process read process and",
    "start": "936560",
    "end": "944560"
  },
  {
    "text": "then in the writer when you have given it for where you have given it for aggregation it will probably make one",
    "start": "944560",
    "end": "949959"
  },
  {
    "text": "database call to write those validated records now in that process there are",
    "start": "949959",
    "end": "955839"
  },
  {
    "text": "mechanisms by which you can say oh this record is not valid so don't write it so it won't be aggregated you also have",
    "start": "955839",
    "end": "962639"
  },
  {
    "text": "mechanism to saying you know that's the last record I want to process there are mechanisms for that very",
    "start": "962639",
    "end": "968480"
  },
  {
    "text": "straightforward the entire chunk you know read process and write all of that",
    "start": "968480",
    "end": "975600"
  },
  {
    "text": "is inherently done in a transaction so um the idea is there is no need for you to explicitly start a transaction so",
    "start": "975600",
    "end": "982959"
  },
  {
    "text": "that's completely inherent just works out of the box there are and think about if you're",
    "start": "982959",
    "end": "988079"
  },
  {
    "text": "reading like say million records you know and if you have done like 800,000 records and let's say an error occurs",
    "start": "988079",
    "end": "993560"
  },
  {
    "text": "over there so same thing you know in the chunk uh concept there is a concept of",
    "start": "993560",
    "end": "1000600"
  },
  {
    "text": "checkpointing um if you by default it reads 10 items like you know reads",
    "start": "1000600",
    "end": "1005759"
  },
  {
    "text": "process read process 10 times and then writes those 10 items if you have changed the uh chunk count or item count",
    "start": "1005759",
    "end": "1013000"
  },
  {
    "text": "so to say to say 100,000 then there is automatic checkpointing that is occurring as well and you can resume",
    "start": "1013000",
    "end": "1019160"
  },
  {
    "text": "from the last um checkpointed um item now chunk is one way by which you",
    "start": "1019160",
    "end": "1026678"
  },
  {
    "text": "can do you know that's the preferred way of doing batch processing there is another style called as batchet which",
    "start": "1026679",
    "end": "1033199"
  },
  {
    "text": "allows you to do a custom um uh roll your own sort of a batch processing job",
    "start": "1033199",
    "end": "1039319"
  },
  {
    "text": "not going to focus more on that because the preferred style is bat uh chunk so let's take a look at junk",
    "start": "1039319",
    "end": "1047480"
  },
  {
    "text": "the entry point to any batch job is a job XML it's defined as a job XML and",
    "start": "1054440",
    "end": "1061799"
  },
  {
    "text": "there's a reason we stick around with job XML here because well first of all a lot of it is borrowed from uh spring",
    "start": "1061799",
    "end": "1068160"
  },
  {
    "text": "batch so if you have if youve been dealing with spring batch you know this would be a little bit familiar um the",
    "start": "1068160",
    "end": "1073960"
  },
  {
    "text": "reason we stick around with XML in this case is because there was a discussion in the the expert group to use uh only",
    "start": "1073960",
    "end": "1081480"
  },
  {
    "text": "annotations but then the job could be really complex and capturing that in annotations would be really really",
    "start": "1081480",
    "end": "1087000"
  },
  {
    "text": "tricky so in the first version at least it's only deployment descriptor based maybe in the subsequent versions We will",
    "start": "1087000",
    "end": "1093360"
  },
  {
    "text": "take a look at it if it could be done using annotations it's basically defining a new DSL",
    "start": "1093360",
    "end": "1098720"
  },
  {
    "text": "altogether now here I have a simple job uh this job has one step but in a",
    "start": "1098720",
    "end": "1104799"
  },
  {
    "text": "typical job that you want to run there will be multiple steps so you could have multiple steps within the job um there",
    "start": "1104799",
    "end": "1110559"
  },
  {
    "text": "are full complex workflows decisions all of those concepts are available to",
    "start": "1110559",
    "end": "1116039"
  },
  {
    "text": "Define as part of your job now this job has one step and the step is of the type",
    "start": "1116039",
    "end": "1121400"
  },
  {
    "text": "chunk by default as I said the item count is 10 in this case I'm explicitly overriding it saying it's three that",
    "start": "1121400",
    "end": "1129120"
  },
  {
    "text": "means I'm going to read process read process read process that's three times",
    "start": "1129120",
    "end": "1135120"
  },
  {
    "text": "and then I'm going to write those three items at one go now I have reader processor and writer",
    "start": "1135120",
    "end": "1141679"
  },
  {
    "text": "items over here and they have references those references essentially are CDI",
    "start": "1141679",
    "end": "1147679"
  },
  {
    "text": "Bean names that are bundled as part of my War file now this is a simple web",
    "start": "1147679",
    "end": "1152960"
  },
  {
    "text": "project deployed as a web archive so in that web archive somewhere I have you",
    "start": "1152960",
    "end": "1158400"
  },
  {
    "text": "know those beans um and those beans have their names resolvable to the these",
    "start": "1158400",
    "end": "1165200"
  },
  {
    "text": "names now if it's in a war file um then your batch XML or job XML has to live in",
    "start": "1165200",
    "end": "1172760"
  },
  {
    "text": "The Meta INF SL bat- jobs directory that is a specific directory required you",
    "start": "1172760",
    "end": "1178440"
  },
  {
    "text": "also give it a name like my job. XML we'll see where that my job is being",
    "start": "1178440",
    "end": "1183720"
  },
  {
    "text": "used okay so first of all let's take a look at my reader processor and writer",
    "start": "1183720",
    "end": "1190320"
  },
  {
    "text": "this is my item reader very simple over in this case um it's just extending uh",
    "start": "1201960",
    "end": "1208080"
  },
  {
    "text": "convenience abstract class you can always Implement an interface if you want to implement all the methods uh I",
    "start": "1208080",
    "end": "1214080"
  },
  {
    "text": "have a open method that I'm overriding here in this case this is exactly where you initialize your resources you know",
    "start": "1214080",
    "end": "1221320"
  },
  {
    "text": "whether I'm going to read from a stream or a reader or from a queue or whatever",
    "start": "1221320",
    "end": "1227360"
  },
  {
    "text": "it is for convenience I'm just using a string tokenizer you know just for Simplicity no big deal uh Now read item",
    "start": "1227360",
    "end": "1235640"
  },
  {
    "text": "is the method that is returning the items as they are being read so effectively let's say in your open",
    "start": "1235640",
    "end": "1242039"
  },
  {
    "text": "method you have opened a stream uh which is a CSV file that's where your your",
    "start": "1242039",
    "end": "1247960"
  },
  {
    "text": "stream is open in the read item you will read line by line and you will read one record at a time or you'll return one",
    "start": "1247960",
    "end": "1255280"
  },
  {
    "text": "record the idea over there is you have a true separation of concerns in reader",
    "start": "1255280",
    "end": "1261120"
  },
  {
    "text": "you read the record you're not processing the record in any sense if you go to",
    "start": "1261120",
    "end": "1267880"
  },
  {
    "text": "processor just implements and interface single method over there so whatever",
    "start": "1268360",
    "end": "1273720"
  },
  {
    "text": "item you Rec Whatever item you return from read item is automatically",
    "start": "1273720",
    "end": "1279480"
  },
  {
    "text": "available as a method parameter over here so in this case all I'm doing is um",
    "start": "1279480",
    "end": "1285240"
  },
  {
    "text": "well let's take a look at reader once again so this is a string tokenizer from 1 to 10",
    "start": "1285240",
    "end": "1291520"
  },
  {
    "text": "so effectively I'm returning 1 2 3 all the way up until 10 so I have 10 records and I'm just creating a my input record",
    "start": "1291520",
    "end": "1298240"
  },
  {
    "text": "over here in this case if I take a look at my input record it just takes a integer um identifier and Returns the",
    "start": "1298240",
    "end": "1305080"
  },
  {
    "text": "value here if I go back to my processor so effectively in my processor even though",
    "start": "1305080",
    "end": "1310679"
  },
  {
    "text": "it's syc object but I'm getting my input record here now from the my input record",
    "start": "1310679",
    "end": "1315799"
  },
  {
    "text": "I check whether is the ID is odd or even if it's even I reject the record by",
    "start": "1315799",
    "end": "1322039"
  },
  {
    "text": "returning null right here and if it is um valid if it is not that means it is",
    "start": "1322039",
    "end": "1327799"
  },
  {
    "text": "not even then I create a new output record my output record is very",
    "start": "1327799",
    "end": "1333120"
  },
  {
    "text": "similar nothing fancy know just same integer Constructor all those things but",
    "start": "1333120",
    "end": "1338840"
  },
  {
    "text": "the whole idea over here is in your process item method which is on line 52 you could receive a different",
    "start": "1338840",
    "end": "1346840"
  },
  {
    "text": "kind of record and and you can return a different kind of record altogether for example in a CSV thing I could return",
    "start": "1346840",
    "end": "1353919"
  },
  {
    "text": "receive a string and I could do the processing of the string you know splitting up the records and I could",
    "start": "1353919",
    "end": "1360039"
  },
  {
    "text": "generate a jpa entity and return from here so that is truly the model that we",
    "start": "1360039",
    "end": "1365559"
  },
  {
    "text": "are planning to support here or that is intended to support now in this case um",
    "start": "1365559",
    "end": "1371279"
  },
  {
    "text": "all even number records are rejected odd numbers are returned and what I'm doing",
    "start": "1371279",
    "end": "1376640"
  },
  {
    "text": "is I'm just doubling the value of the odd number records now if I go to my item",
    "start": "1376640",
    "end": "1383559"
  },
  {
    "text": "writer here again I'm extending a convenience class uh the right items method takes a list this is where the",
    "start": "1384039",
    "end": "1390880"
  },
  {
    "text": "aggregation happens automatically you don't need to aggregate you know I mean as long as you have implementing the",
    "start": "1390880",
    "end": "1397400"
  },
  {
    "text": "right interfaces the item that is being read is automatically passed from reader",
    "start": "1397400",
    "end": "1402559"
  },
  {
    "text": "to processor and from processor to writer for aggregation and as soon as",
    "start": "1402559",
    "end": "1407960"
  },
  {
    "text": "the item count that is defined in our job XML is reached you know that entire thing with reader processor writer you",
    "start": "1407960",
    "end": "1414600"
  },
  {
    "text": "know that writer triggers writes it to the data store in this case I'm just printing out the values um and then the",
    "start": "1414600",
    "end": "1421960"
  },
  {
    "text": "transaction is committed so all of that is inherently transactional with frequent",
    "start": "1421960",
    "end": "1427919"
  },
  {
    "text": "checkpointing so if I were to run this well that's how all the artifacts are",
    "start": "1427919",
    "end": "1434039"
  },
  {
    "text": "hooked up together let's see how we trigger the job first of all",
    "start": "1434039",
    "end": "1439760"
  },
  {
    "text": "in this case I have a simple serlet um the code may look a little bit convoluted but this is a just sample",
    "start": "1444400",
    "end": "1450440"
  },
  {
    "text": "here um line 85 basically what I'm saying is I'm saying to the bachor on",
    "start": "1450440",
    "end": "1456880"
  },
  {
    "text": "time give me a job operator okay so this is the only",
    "start": "1456880",
    "end": "1461679"
  },
  {
    "text": "code the highlighted code is the only one that I want you to look at um so I'm",
    "start": "1462640",
    "end": "1467720"
  },
  {
    "text": "saying to the Bach on time give me a job operator and to the job operator I'm",
    "start": "1467720",
    "end": "1472880"
  },
  {
    "text": "saying start my job and when I'm saying start my job I'm actually giving it the T the string called as my job that my",
    "start": "1472880",
    "end": "1480480"
  },
  {
    "text": "job is the same thing if you remember is the name of my XML file so it picks up that job triggers the job you know step",
    "start": "1480480",
    "end": "1487600"
  },
  {
    "text": "chunk reader processor writer reader processor writer all that and then commits the entire job now I could",
    "start": "1487600",
    "end": "1494240"
  },
  {
    "text": "conceivably have many many job xmls in my batch jobs directory and that way",
    "start": "1494240",
    "end": "1500600"
  },
  {
    "text": "there is a capability by which you can pick and select the job that you care about now starting a job returns a job",
    "start": "1500600",
    "end": "1507799"
  },
  {
    "text": "ID that job ID is your unique identifier which you can use to abandon or restart",
    "start": "1507799",
    "end": "1514880"
  },
  {
    "text": "or cancel the job if you want to and that's what the stuff on the bottom is doing over here for example I'm saying",
    "start": "1514880",
    "end": "1520440"
  },
  {
    "text": "show me how many times this job has been run or what is the job execution status",
    "start": "1520440",
    "end": "1526360"
  },
  {
    "text": "what is the create time start time Etc so all that metadata is available to you",
    "start": "1526360",
    "end": "1532600"
  },
  {
    "text": "something that I've not shown you here is maybe it's worth showing",
    "start": "1532600",
    "end": "1537840"
  },
  {
    "text": "actually well first of all let's run this job okay so right click here and say run",
    "start": "1539559",
    "end": "1546720"
  },
  {
    "text": "it I'm going to start the job here",
    "start": "1554679",
    "end": "1559760"
  },
  {
    "text": "it's going to start my batch processor the whole thing in the background does something Returns the response back to",
    "start": "1559919",
    "end": "1565399"
  },
  {
    "text": "me the metadata but what we care about is the output that is being printed for us so if we take a look at",
    "start": "1565399",
    "end": "1573720"
  },
  {
    "text": "that so this is the output that is being returned to us um it's saying in my",
    "start": "1575760",
    "end": "1581080"
  },
  {
    "text": "process item I'm uh my input record 1 2 3 but",
    "start": "1581080",
    "end": "1589039"
  },
  {
    "text": "output number two or record number two is being rejected one is doubled up to two three is doubled up to six so three",
    "start": "1589039",
    "end": "1596080"
  },
  {
    "text": "records being processed at one point of time first and third picked up second being rejected same thing here 4 56 so",
    "start": "1596080",
    "end": "1604440"
  },
  {
    "text": "four and six are rejected record number five is taken doubled up and 10 7 8 9",
    "start": "1604440",
    "end": "1610440"
  },
  {
    "text": "again record number eight is rejected and finally you have one record that's automatically going through okay so",
    "start": "1610440",
    "end": "1616200"
  },
  {
    "text": "that's how your automatic checkpointing transactions everything works by",
    "start": "1616200",
    "end": "1621919"
  },
  {
    "text": "itself one",
    "start": "1627159",
    "end": "1630399"
  },
  {
    "text": "second so here for example um I'm just showing you another job XML I'm not going to run this job but in the job I",
    "start": "1646760",
    "end": "1653600"
  },
  {
    "text": "have a step and it has another step so I could have two steps and then in this one for example I'm saying oh the my",
    "start": "1653600",
    "end": "1660039"
  },
  {
    "text": "logical identifier is step one but the next step that I want you to execute is step two and in this one step I have",
    "start": "1660039",
    "end": "1667360"
  },
  {
    "text": "chunk and this step is a bachelet so you can do those mixing and matching of how the chunks and the bachelet are mixed up",
    "start": "1667360",
    "end": "1677039"
  },
  {
    "text": "here is another sample of a job um little bit more complex and involving so for",
    "start": "1694320",
    "end": "1700159"
  },
  {
    "text": "example I have a step this is all One Step By the way in that step I have a",
    "start": "1700159",
    "end": "1706440"
  },
  {
    "text": "chunk uh in the chunk I have reader processor and writer okay um now the",
    "start": "1706440",
    "end": "1713320"
  },
  {
    "text": "reader is optionally passing certain properties so start and end so for example let's say you are all reading",
    "start": "1713320",
    "end": "1719559"
  },
  {
    "text": "from a same CSV file but instead of one reader One processor and one writer",
    "start": "1719559",
    "end": "1725919"
  },
  {
    "text": "doing the entire thing uh I may want to say you know reader I may want to run it on multiple",
    "start": "1725919",
    "end": "1732080"
  },
  {
    "text": "threads you know let's say if a four core machine I may be able to spin up up to four threads how do you indicate that",
    "start": "1732080",
    "end": "1738120"
  },
  {
    "text": "in your job XML so in this case um in the chunk itself I've added an element",
    "start": "1738120",
    "end": "1743679"
  },
  {
    "text": "called as partition that's a new that's the element of part of job XML in the partition I'm saying I'm going to run",
    "start": "1743679",
    "end": "1749960"
  },
  {
    "text": "run it in two partitions and I'm specifying the properties in the properties I'm saying okay the start",
    "start": "1749960",
    "end": "1756080"
  },
  {
    "text": "value is one the end value is 10 in this case the start value is 11 the end value",
    "start": "1756080",
    "end": "1761279"
  },
  {
    "text": "is 20 so effectively if I have say 2 million records then I could say the",
    "start": "1761279",
    "end": "1766960"
  },
  {
    "text": "first million record are being read on one thread and then the second million records are being read on the second",
    "start": "1766960",
    "end": "1772960"
  },
  {
    "text": "thread so you're basically splitting up the job similarly your processors and writers work accordingly as well and",
    "start": "1772960",
    "end": "1778880"
  },
  {
    "text": "once again all of this is inherently transactional there was a question here yeah sorry the question is um the well",
    "start": "1778880",
    "end": "1786880"
  },
  {
    "text": "the first question was instead of saying batch runtime. getet job operator I",
    "start": "1786880",
    "end": "1792159"
  },
  {
    "text": "would like to see it being injected I agree there's RF file on the spec for that already that's a clunky job in my",
    "start": "1792159",
    "end": "1799200"
  },
  {
    "text": "opinion um the second question was that the quads uh team they were kind of",
    "start": "1799200",
    "end": "1805200"
  },
  {
    "text": "afraid of going down the workflow route because you know then it's not just workflow there a lot of other components",
    "start": "1805200",
    "end": "1811600"
  },
  {
    "text": "get involved as part of it and uh that was a comment but the question really",
    "start": "1811600",
    "end": "1817039"
  },
  {
    "text": "was is this really become sort of the workflow and are there bigger discussions happening around how a",
    "start": "1817039",
    "end": "1822720"
  },
  {
    "text": "broader workflow could be defined as part of java e so the answer to that really is",
    "start": "1822720",
    "end": "1828720"
  },
  {
    "text": "in this case in batch at least now this is only for batch we have what I'm showing you is a simple partition there",
    "start": "1828720",
    "end": "1835279"
  },
  {
    "text": "are concepts of decisions splits flows all of that so all of that discussion",
    "start": "1835279",
    "end": "1841960"
  },
  {
    "text": "has happened within the context of um uh batch for now at least um now in terms",
    "start": "1841960",
    "end": "1848480"
  },
  {
    "text": "of java E8 I don't think it's on the table yet but that does not mean it's",
    "start": "1848480",
    "end": "1853720"
  },
  {
    "text": "not going to get done as part of java E8 because really we are just two Focus right now to deliver Java E7 which is",
    "start": "1853720",
    "end": "1860320"
  },
  {
    "text": "going to be next week and then after that all the discussions around the scope and you know what features do",
    "start": "1860320",
    "end": "1866600"
  },
  {
    "text": "community care about would be on the table at that point of time but yeah batch already supports and it's not a",
    "start": "1866600",
    "end": "1872840"
  },
  {
    "text": "full workflow anyway you can actually use your decisions splits flows but",
    "start": "1872840",
    "end": "1878440"
  },
  {
    "text": "that's purely within using so that's purely within the context of batch for",
    "start": "1878440",
    "end": "1883760"
  },
  {
    "text": "example oh this job failed so what you should do that but it's and there are",
    "start": "1883760",
    "end": "1888919"
  },
  {
    "text": "concepts by which it can delegate to pojos as well for making those decisions but purely within batch",
    "start": "1888919",
    "end": "1896840"
  },
  {
    "text": "concept all right I'm going to start with a new sample here let me take show you",
    "start": "1905639",
    "end": "1912760"
  },
  {
    "text": "some GMS improvements that we have done",
    "start": "1912760",
    "end": "1917559"
  },
  {
    "text": "now GMS you know the last version if you realize was done in December of",
    "start": "1925000",
    "end": "1932240"
  },
  {
    "text": "2003 so like JMS 1.1 so almost 10 years ago um JMS 2.0 is a big big big",
    "start": "1932240",
    "end": "1939000"
  },
  {
    "text": "Improvement on top of know JMS 1.1 uh most of the work has been focused on",
    "start": "1939000",
    "end": "1944880"
  },
  {
    "text": "simplifying the API making sure we Leverage all the modern language features from the Java from the Java e",
    "start": "1944880",
    "end": "1951039"
  },
  {
    "text": "platform so that's been the focus primarily specifically leveraging CDI",
    "start": "1951039",
    "end": "1956679"
  },
  {
    "text": "pretty significantly so let me um actually if I can show you a different sample",
    "start": "1956679",
    "end": "1964120"
  },
  {
    "text": "now JMS 2.0 supports both the older style API and the newer style API the",
    "start": "1979799",
    "end": "1985559"
  },
  {
    "text": "older style API is called as a classic API and the newer style API is called as simplified API we have to maintain",
    "start": "1985559",
    "end": "1991519"
  },
  {
    "text": "backwards compatibility so this is the code that you have to write to send a",
    "start": "1991519",
    "end": "1997600"
  },
  {
    "text": "message using GMS 1.1 and I'm sure you can improve the code but try to",
    "start": "1997600",
    "end": "2002960"
  },
  {
    "text": "understand the points here first of all um on line 58 I'm doing a lookup of the connection Factory on line 50 61 I'm",
    "start": "2002960",
    "end": "2011799"
  },
  {
    "text": "saying okay this is my destination where I'm going to send the message then I have a send message method where I'm",
    "start": "2011799",
    "end": "2018360"
  },
  {
    "text": "doing you know honoring the API oh from the connection Factory create a connection then create a session then",
    "start": "2018360",
    "end": "2024519"
  },
  {
    "text": "create a producer then a text message my real intent is only line 71 I just want",
    "start": "2024519",
    "end": "2029960"
  },
  {
    "text": "to send the message but you have to honor the API the way it's being defined and then there are checked exceptions so",
    "start": "2029960",
    "end": "2035880"
  },
  {
    "text": "you have to make sure that the exceptions are cut properly and then you need to close the resources so whole lot",
    "start": "2035880",
    "end": "2041120"
  },
  {
    "text": "of boilerplate code that you need to write just to get that job done let's see how we have improved that as part of",
    "start": "2041120",
    "end": "2047840"
  },
  {
    "text": "JMS 2.0 that's all the code that I need to",
    "start": "2047840",
    "end": "2054200"
  },
  {
    "text": "get it working okay to send a message let's take a look JMS context is a new object",
    "start": "2054200",
    "end": "2062040"
  },
  {
    "text": "introduced as part of GMS 2.0 which basically encapsulates your connection and the session object that it exists in",
    "start": "2062040",
    "end": "2069679"
  },
  {
    "text": "um classic API or the older API so all you need to do is instead of saying I",
    "start": "2069679",
    "end": "2075040"
  },
  {
    "text": "want to create a new connection or a connection Factory nothing of that sort you just inject your GMS context the",
    "start": "2075040",
    "end": "2080919"
  },
  {
    "text": "container will automatically inject it for you it's a container manage context effectively then of course you need to",
    "start": "2080919",
    "end": "2086440"
  },
  {
    "text": "point to your destination but in addition know I mean this destination could actually be created as part of",
    "start": "2086440",
    "end": "2093760"
  },
  {
    "text": "your application itself so we have introduced new annotations called called as GMS Destination definition so if I",
    "start": "2093760",
    "end": "2101560"
  },
  {
    "text": "can show that to you for a",
    "start": "2101560",
    "end": "2105240"
  },
  {
    "text": "second so I have this new annotation called as JMS Destination definition this could be put on any of my you know",
    "start": "2111920",
    "end": "2120200"
  },
  {
    "text": "EBS or servlets Etc and then there I'm specifying what destinations need to be",
    "start": "2120200",
    "end": "2126160"
  },
  {
    "text": "created so as part part of your application deployment these destinations would be automatically",
    "start": "2126160",
    "end": "2131720"
  },
  {
    "text": "created for you so for example in my application",
    "start": "2131720",
    "end": "2138079"
  },
  {
    "text": "here if I take a look",
    "start": "2138079",
    "end": "2141920"
  },
  {
    "text": "at not here but right here so in my say simplified",
    "start": "2144800",
    "end": "2151839"
  },
  {
    "text": "message receiver I have the JMS Destination definition I just put The annotation I put the name and the",
    "start": "2151839",
    "end": "2157240"
  },
  {
    "text": "interface name that this is a que and that's it then this will automatically create know my uh destination for me",
    "start": "2157240",
    "end": "2164560"
  },
  {
    "text": "well of course you can go the application server specific way use for example glassfish uh CLI or admin",
    "start": "2164560",
    "end": "2171240"
  },
  {
    "text": "console to create this but this simplifies it lowers the bar for",
    "start": "2171240",
    "end": "2176720"
  },
  {
    "text": "you now going back to my",
    "start": "2177480",
    "end": "2183520"
  },
  {
    "text": "sender simplified message sender okay so first of all um I inject my GMS context",
    "start": "2183520",
    "end": "2189760"
  },
  {
    "text": "here now notice I'm not pointing to a connection Factory here and there's a reason for that because the spec says if",
    "start": "2189760",
    "end": "2197520"
  },
  {
    "text": "you do not point to a connection Factory then we automatically use the default connection Factory first of all the",
    "start": "2197520",
    "end": "2204560"
  },
  {
    "text": "platform itself defines a new default connection Factory not only a new default connection Factory it even",
    "start": "2204560",
    "end": "2210200"
  },
  {
    "text": "defines a new default data source for you so for example if you were to injecting uh jdbc you know if you want",
    "start": "2210200",
    "end": "2217280"
  },
  {
    "text": "to inject a persistence unit or in a persistence unit you want you don't need to refer to a GTA data source there is a",
    "start": "2217280",
    "end": "2224680"
  },
  {
    "text": "default connection source that it will point to which will point to your application server specific jdbc",
    "start": "2224680",
    "end": "2230280"
  },
  {
    "text": "resource so all of that completely automatic and I'll show you a sample for that so coming back here actually I'm",
    "start": "2230280",
    "end": "2237319"
  },
  {
    "text": "injecting my JMS context I'm pointing to my resource that is created by my application then on the context you know",
    "start": "2237319",
    "end": "2243680"
  },
  {
    "text": "we're using a fluent U API you know Builder pattern so on the context I create producer then I say send to this",
    "start": "2243680",
    "end": "2251200"
  },
  {
    "text": "destination and that's the message no more wrapping you know everything is a runtime exception you take care of it",
    "start": "2251200",
    "end": "2257599"
  },
  {
    "text": "only if you want to um the resources are automatically closed for me so we actually making them know try with",
    "start": "2257599",
    "end": "2264440"
  },
  {
    "text": "resources completely basically implementing autoc closable interface um",
    "start": "2264440",
    "end": "2270240"
  },
  {
    "text": "so not only the amount of boilerplate code is cut down but it actually improves the semantic readability of my",
    "start": "2270240",
    "end": "2276240"
  },
  {
    "text": "code I can look at the code I don't need to comment it anymore in this previous case yes you will need to comment it and",
    "start": "2276240",
    "end": "2283920"
  },
  {
    "text": "one of the funniest comments typically goes over these two parameters because we say that in if well in this case I'm",
    "start": "2283920",
    "end": "2290280"
  },
  {
    "text": "doing it in ejb so the ejb spec says if you're using classic API I'm going to",
    "start": "2290280",
    "end": "2295440"
  },
  {
    "text": "ignore those two parameters why go ask the ejb spec lead on that but that's the nature of",
    "start": "2295440",
    "end": "2302880"
  },
  {
    "text": "it okay so those are sort of my improvements in",
    "start": "2305920",
    "end": "2310760"
  },
  {
    "text": "JMS let me show you a simple sample on how what improvements we have done for",
    "start": "2317800",
    "end": "2323640"
  },
  {
    "text": "Jon actually",
    "start": "2323640",
    "end": "2327240"
  },
  {
    "text": "so what I just just did was I invoked Facebook's public API and I'm searching",
    "start": "2343480",
    "end": "2349000"
  },
  {
    "text": "for the keyword Java saying search for the query Java on all the public post",
    "start": "2349000",
    "end": "2354920"
  },
  {
    "text": "and it returned me the result set now that return set result set comes as a Json structure so this is a fairly",
    "start": "2354920",
    "end": "2361560"
  },
  {
    "text": "comprehensive Json structure data array with bunch of name values with nested",
    "start": "2361560",
    "end": "2367400"
  },
  {
    "text": "objects Etc okay I'm going to show you the Json processing API that has been",
    "start": "2367400",
    "end": "2372560"
  },
  {
    "text": "added to the Java E7 platform how we can use well first of all in Json processing",
    "start": "2372560",
    "end": "2377680"
  },
  {
    "text": "itself there is a streaming API which is more lower level API which generate",
    "start": "2377680",
    "end": "2383040"
  },
  {
    "text": "events start object end object start of an array so on so forth and then there's",
    "start": "2383040",
    "end": "2389200"
  },
  {
    "text": "a higher level object API which allows you to read the entire structure as one",
    "start": "2389200",
    "end": "2394839"
  },
  {
    "text": "full object then you can index within the object object very easily so here for",
    "start": "2394839",
    "end": "2402000"
  },
  {
    "text": "example let me show you what I'm going to do with the object API same URL I've mentioned here then",
    "start": "2402000",
    "end": "2410000"
  },
  {
    "text": "I'm opening the stream I'm creating my Jon reader that's a new API by the way is in Java X Jon package then from the",
    "start": "2410000",
    "end": "2418480"
  },
  {
    "text": "once I get my reader from the reader I read the object but once I've have read the object the entire structure is read",
    "start": "2418480",
    "end": "2424680"
  },
  {
    "text": "into the memory and then once I once it's in my memory then I can say okay give me the Json array then I can start",
    "start": "2424680",
    "end": "2430960"
  },
  {
    "text": "indexing okay from the array I want the from element which from which I want the name element so get Jon object get",
    "start": "2430960",
    "end": "2437960"
  },
  {
    "text": "string or I want the string message okay so that's the object API in terms of the",
    "start": "2437960",
    "end": "2444480"
  },
  {
    "text": "streaming API similar start I basically point to",
    "start": "2444480",
    "end": "2450000"
  },
  {
    "text": "the URL I get my Jon parser in this case not a reader but once I get my Json parser I can actually listen for the",
    "start": "2450000",
    "end": "2457599"
  },
  {
    "text": "specific events that I care about that in I mean the parser is reading through my Jon structure it's going to spit out",
    "start": "2457599",
    "end": "2464560"
  },
  {
    "text": "events like key name okay oh key name encounter it don't it doesn't care what key name it is it just knows it's a key",
    "start": "2464560",
    "end": "2470359"
  },
  {
    "text": "name because Json is basically a finite structure which says exactly how this is going to look like so here it generates",
    "start": "2470359",
    "end": "2478359"
  },
  {
    "text": "a keyname event that's the event that's the event that I care about then on the",
    "start": "2478359",
    "end": "2483520"
  },
  {
    "text": "key name I say okay show me what is the key name now what I mean the real key",
    "start": "2483520",
    "end": "2489560"
  },
  {
    "text": "name um if the key name is name or message then I want to do something about it and effectively what I'm doing",
    "start": "2489560",
    "end": "2496400"
  },
  {
    "text": "is so once I know the key name then go to the next element which is parcel.",
    "start": "2496400",
    "end": "2501440"
  },
  {
    "text": "nextt and now if the element next to key name is the value then I'm saying give",
    "start": "2501440",
    "end": "2508520"
  },
  {
    "text": "me the value and I'm printing it out so you can see there is a streaming API there is a object model API for Json",
    "start": "2508520",
    "end": "2515040"
  },
  {
    "text": "processing um very well integrated as part of the",
    "start": "2515040",
    "end": "2520359"
  },
  {
    "text": "platform okay let me show one more thing here",
    "start": "2543960",
    "end": "2549119"
  },
  {
    "text": "we talked briefly about you know how the how we have a default data definition or",
    "start": "2555160",
    "end": "2561720"
  },
  {
    "text": "data source as part of the Java E7 platform now typically when you're",
    "start": "2561720",
    "end": "2567280"
  },
  {
    "text": "building a Java e application is typically a database driven application so you would need some sort of a connection to the database um most of",
    "start": "2567280",
    "end": "2575480"
  },
  {
    "text": "the well uh runtime require IR M for a Java E7 container is to ship with the database so if you ship with the",
    "start": "2575480",
    "end": "2581160"
  },
  {
    "text": "database then typically your application server would provide your specific gdbc resource but then that's application",
    "start": "2581160",
    "end": "2587800"
  },
  {
    "text": "server specific you know you don't know what that name is going to be in some cases is jdbc sample some cases jdbc",
    "start": "2587800",
    "end": "2595079"
  },
  {
    "text": "example but then your apps break you know that means they don't work out of the box so here for example I'm using JD",
    "start": "2595079",
    "end": "2603319"
  },
  {
    "text": "GTA data source called as jdbc sample now yeah yeah that would work out of the box on glassfish but that doesn't make",
    "start": "2603319",
    "end": "2610000"
  },
  {
    "text": "my application portable so the idea here is if I get rid of this GTA data source",
    "start": "2610000",
    "end": "2616280"
  },
  {
    "text": "then my persistence.xml actually maps to a default data source that's what it automatically",
    "start": "2616280",
    "end": "2623359"
  },
  {
    "text": "resolves to that's start of the jdbc name now what is the underlying jdbc",
    "start": "2623359",
    "end": "2629720"
  },
  {
    "text": "resource that is application server specific so from your application perspective you don't care about that",
    "start": "2629720",
    "end": "2635160"
  },
  {
    "text": "all you care about it a is automatically connecting to the default data source what is the jdbc res Source you the",
    "start": "2635160",
    "end": "2641119"
  },
  {
    "text": "application server you go figure it out so that's you know improves your application",
    "start": "2641119",
    "end": "2647599"
  },
  {
    "text": "portability these are older properties so I don't want to show these hold on",
    "start": "2648440",
    "end": "2655200"
  },
  {
    "text": "second well okay done",
    "start": "2657640",
    "end": "2662680"
  },
  {
    "text": "okay that's where blocking helps this is one of the blogs that I did um on jpa 2.1 schema generation",
    "start": "2668200",
    "end": "2676319"
  },
  {
    "text": "properties what is that feature that feature is primarily about how you can take a look",
    "start": "2676319",
    "end": "2681559"
  },
  {
    "text": "at a jpa entity and ask your persistence provider to generate um database tables",
    "start": "2681559",
    "end": "2690359"
  },
  {
    "text": "from it now up until now like jpa 2 we could take a database table and create",
    "start": "2690359",
    "end": "2696680"
  },
  {
    "text": "JP entities out of it that is possible but there was no way or at least a portable way to say take my entities and",
    "start": "2696680",
    "end": "2703680"
  },
  {
    "text": "generate database tables out of it or generate my database scripts out of it so with jpa 2.1 you can actually do that",
    "start": "2703680",
    "end": "2710839"
  },
  {
    "text": "so there are properties like",
    "start": "2710839",
    "end": "2715400"
  },
  {
    "text": "uh Java x. persistence do schema generation. database action so all I'm",
    "start": "2716800",
    "end": "2722920"
  },
  {
    "text": "saying is in this case just drop my tables and recreate them well that's action that's nothing",
    "start": "2722920",
    "end": "2729520"
  },
  {
    "text": "interesting um I'm saying okay fine I can do that but should I do that using",
    "start": "2729520",
    "end": "2736040"
  },
  {
    "text": "scripts or that means you're going to bundle the scripts with your War file or should I do that purely using your jpa",
    "start": "2736040",
    "end": "2743319"
  },
  {
    "text": "entities so you take a jpa entity um you understand what the meaning is out of it and then generate the database tables",
    "start": "2743319",
    "end": "2750119"
  },
  {
    "text": "out of it so that's possible um here for example I'm saying Java X",
    "start": "2750119",
    "end": "2756640"
  },
  {
    "text": "person Sy schema generation scripts. create Target that means whether it's going to be",
    "start": "2756640",
    "end": "2763000"
  },
  {
    "text": "um yeah so here I'm saying what are my scripts that will generate the database",
    "start": "2763000",
    "end": "2768920"
  },
  {
    "text": "table which is basically my ddl now you can bundle that as part of your application and that'll automatically be",
    "start": "2768920",
    "end": "2775599"
  },
  {
    "text": "taken care of by the persistence provider similarly dropping the tables not just",
    "start": "2775599",
    "end": "2781880"
  },
  {
    "text": "that you also have U DML or data manipulation language that can be",
    "start": "2781880",
    "end": "2787760"
  },
  {
    "text": "specified so think about shipping a simple sample application or getting started with it",
    "start": "2787760",
    "end": "2793559"
  },
  {
    "text": "you know you can bundle your ddl your DML fully indexed you know all of that",
    "start": "2793559",
    "end": "2799280"
  },
  {
    "text": "package within one war file and then giving it deploying it on an application server and the application coming",
    "start": "2799280",
    "end": "2806119"
  },
  {
    "text": "complete live at one instance",
    "start": "2806119",
    "end": "2810480"
  },
  {
    "text": "one of the places where we have made huge improvements is GTA GTA 1.2 um well",
    "start": "2828839",
    "end": "2835119"
  },
  {
    "text": "not just GTA but sort of making the platform lot more cohesive and",
    "start": "2835119",
    "end": "2840359"
  },
  {
    "text": "integrated you can do user manage transactions today know very easily you know you can just inject a user",
    "start": "2840680",
    "end": "2846319"
  },
  {
    "text": "transaction object created commit roll back all of that is possible but if you",
    "start": "2846319",
    "end": "2851359"
  },
  {
    "text": "want to do container manage transactions that was only possible in using an ejb um up until Java E6 we have changed that",
    "start": "2851359",
    "end": "2859160"
  },
  {
    "text": "as part of java E7 so JTA 1.2 introduces two new transactions one of them is at",
    "start": "2859160",
    "end": "2866640"
  },
  {
    "text": "transactional oh at transactional so that means you can take that at",
    "start": "2866640",
    "end": "2871920"
  },
  {
    "text": "transactional annotation specify it on any pojo CDI Bean whatever it is you",
    "start": "2871920",
    "end": "2877280"
  },
  {
    "text": "specify on any pojo class or a method and then the underlying container will",
    "start": "2877280",
    "end": "2883760"
  },
  {
    "text": "automatically start and slomit SL rollback a transaction for you so let's take a look at",
    "start": "2883760",
    "end": "2890920"
  },
  {
    "text": "that well not this one here so this is my very simple CDI Bean",
    "start": "2899240",
    "end": "2907400"
  },
  {
    "text": "um and you can see there is no stateless or state full on this it's not an EB as such now on I have tons of methods here",
    "start": "2907400",
    "end": "2914440"
  },
  {
    "text": "but the idea is on any pojo I can specify the at transactional annotation",
    "start": "2914440",
    "end": "2920200"
  },
  {
    "text": "and it has all the semantics that the container manage transactions have in egb for example",
    "start": "2920200",
    "end": "2926599"
  },
  {
    "text": "requires required new mandatory all those attributes are available you can",
    "start": "2926599",
    "end": "2931680"
  },
  {
    "text": "specify as part of The annotation itself but once you specify transactional based",
    "start": "2931680",
    "end": "2936799"
  },
  {
    "text": "on the S or the syntax over here the semantics are automatically enforced for you so for example in this case it's",
    "start": "2936799",
    "end": "2943480"
  },
  {
    "text": "going to ensure that a transaction is automatically started and committed at the end of",
    "start": "2943480",
    "end": "2949160"
  },
  {
    "text": "it okay well I talked about two new",
    "start": "2949160",
    "end": "2956000"
  },
  {
    "text": "features so let me talk about the second feature in that case",
    "start": "2956000",
    "end": "2961960"
  },
  {
    "text": "so here is a simple bean now nothing fancy about it the only new addition",
    "start": "2967520",
    "end": "2972920"
  },
  {
    "text": "here is line 48 where I'm saying at transaction scoped that's a new CDI",
    "start": "2972920",
    "end": "2978720"
  },
  {
    "text": "scope introduced as part of JTA 1.2 all I'm saying is tie the instance",
    "start": "2978720",
    "end": "2985480"
  },
  {
    "text": "of this Bean or the life cycle of this Bean to a transaction that means if",
    "start": "2985480",
    "end": "2991440"
  },
  {
    "text": "somebody tries to inject this Bean within a transaction give it an instance",
    "start": "2991440",
    "end": "2997079"
  },
  {
    "text": "otherwise do not give it an in do not give an instance of this Bean so I'm just saying you know tie the instance of",
    "start": "2997079",
    "end": "3002280"
  },
  {
    "text": "this Bean to a transaction so let's see how how will I use",
    "start": "3002280",
    "end": "3007280"
  },
  {
    "text": "it now I'm using okay first of all I'm injecting this Bean twice here my bean my Bean or bean bean and bean two",
    "start": "3011760",
    "end": "3021558"
  },
  {
    "text": "okay I have um three scenarios well the first one is well in this case I'm explicitly starting a transaction and",
    "start": "3022599",
    "end": "3029079"
  },
  {
    "text": "ending a transaction it's a user transaction I'm injecting a user transaction here so if I'm starting a",
    "start": "3029079",
    "end": "3034760"
  },
  {
    "text": "transaction and ending a transaction here so in this case I'm saying bean. get ID and bean to. get ID effectively",
    "start": "3034760",
    "end": "3042760"
  },
  {
    "text": "is returning the object identifier because from the bean all I'm saying is",
    "start": "3042760",
    "end": "3048000"
  },
  {
    "text": "get the ID or return the object uh by default it includes the object",
    "start": "3048000",
    "end": "3053960"
  },
  {
    "text": "identifier so in this case I'm saying B bean. get ID and bean 2. get ID so even",
    "start": "3053960",
    "end": "3059400"
  },
  {
    "text": "though the bean is injected twice but the proxy because the way CDI works you",
    "start": "3059400",
    "end": "3065359"
  },
  {
    "text": "know if you're saying injection it has a proxy and it gets the runtime instance you know when is required so the two",
    "start": "3065359",
    "end": "3072240"
  },
  {
    "text": "proxies will point to the same instance because a bean is tied to a transaction",
    "start": "3072240",
    "end": "3077559"
  },
  {
    "text": "it's still the same transaction doesn't matter it's two proxies but the bean instance is tied to the same transaction",
    "start": "3077559",
    "end": "3083640"
  },
  {
    "text": "so the two proxies point to the same Bean so if effectively what I'm saying here is even though the bean is being",
    "start": "3083640",
    "end": "3090319"
  },
  {
    "text": "injected twice I still get the same instance identifier for the particular Bean now here this is a different",
    "start": "3090319",
    "end": "3097920"
  },
  {
    "text": "scenario remember here I've have done committed the transaction already now",
    "start": "3097920",
    "end": "3103000"
  },
  {
    "text": "I'm starting a new transaction and committing a new transaction exactly same as scenario one but the difference",
    "start": "3103000",
    "end": "3108960"
  },
  {
    "text": "being when the first transaction is committed that bean is rolled out you know that bean is given for garbage",
    "start": "3108960",
    "end": "3114599"
  },
  {
    "text": "collection so effectively when I'm trying to inject Bean here again or at least trying to use the bean here",
    "start": "3114599",
    "end": "3122040"
  },
  {
    "text": "again both the proxies are going to point to the same instance but that instance is going to be different from",
    "start": "3122040",
    "end": "3128160"
  },
  {
    "text": "the one that was from a previous transaction because this is a new transaction",
    "start": "3128160",
    "end": "3133400"
  },
  {
    "text": "now and finally once this transaction is committed that bean instance goes away",
    "start": "3133559",
    "end": "3138839"
  },
  {
    "text": "and here when I'm trying to say Bean do get ID then there is no transaction here if",
    "start": "3138839",
    "end": "3144599"
  },
  {
    "text": "there is no transaction then it says oh there is no context that is active so I",
    "start": "3144599",
    "end": "3149680"
  },
  {
    "text": "cannot give you an instance of The Bean so clearly showing that you know the bean instance is tight to a transaction",
    "start": "3149680",
    "end": "3155760"
  },
  {
    "text": "you know you just by adding that transaction scope The Bean Is automatically you know activated or",
    "start": "3155760",
    "end": "3161480"
  },
  {
    "text": "passivated for you so if I run this guy here",
    "start": "3161480",
    "end": "3168359"
  },
  {
    "text": "so I do this so here you can see for example this is scenario one being one",
    "start": "3179280",
    "end": "3184640"
  },
  {
    "text": "injected twice and the object identifier in both the cases is D12 and D12 so",
    "start": "3184640",
    "end": "3190119"
  },
  {
    "text": "these are exactly same the two proxies pointing to the same instance repeat of scenario one is a different transaction",
    "start": "3190119",
    "end": "3197359"
  },
  {
    "text": "these two are same but different from the one over here and finally when I'm doing a bean outside a transaction is",
    "start": "3197359",
    "end": "3203799"
  },
  {
    "text": "saying got expected context not active exception so showing you know how at transactional um and transaction scope",
    "start": "3203799",
    "end": "3210359"
  },
  {
    "text": "really work with each other another big Improvement as part of",
    "start": "3210359",
    "end": "3216280"
  },
  {
    "text": "um Java E7 platform itself is that CDI or the context and dependency injection",
    "start": "3216280",
    "end": "3221839"
  },
  {
    "text": "is really really core component model um you can see all the changes that we have done like at transactional is a",
    "start": "3221839",
    "end": "3229000"
  },
  {
    "text": "annotation but effectively the implementation is done as Interceptor binding which is CDI Interceptor binding",
    "start": "3229000",
    "end": "3236240"
  },
  {
    "text": "um same thing transaction scoped is a CDI scope so after receiving a huge",
    "start": "3236240",
    "end": "3243079"
  },
  {
    "text": "feedback from the community we literally surveyed 1100 know existing active users of java e and there was a overwhelming",
    "start": "3243079",
    "end": "3249960"
  },
  {
    "text": "majority of a saying enable CDI by default so for",
    "start": "3249960",
    "end": "3255760"
  },
  {
    "text": "example in here my webin if directory is empty there is no beans.xml I don't need",
    "start": "3258200",
    "end": "3264319"
  },
  {
    "text": "a beans.xml to enable CDI frankly it was very hard for me to kind of put my head",
    "start": "3264319",
    "end": "3269920"
  },
  {
    "text": "around it when I saw CDI for the first time like really wait why do we need beans.xml why can't we enable it by",
    "start": "3269920",
    "end": "3276119"
  },
  {
    "text": "default but you know these inconsistencies happen you know the CDI specification itself was introduced late",
    "start": "3276119",
    "end": "3281960"
  },
  {
    "text": "in the game finally we got it right no beans.xml required CDI is enabled by",
    "start": "3281960",
    "end": "3288079"
  },
  {
    "text": "default well and there are semantics Define on it is enabled for what it says",
    "start": "3288079",
    "end": "3293839"
  },
  {
    "text": "it's enabled for all the bean defining annotation um Bean defining annotation",
    "start": "3293839",
    "end": "3299119"
  },
  {
    "text": "what is that it goes into terms idea is any Bean with the at stateless or state",
    "start": "3299119",
    "end": "3305200"
  },
  {
    "text": "full or with an explicit CDI scope so you need to give at least an indication",
    "start": "3305200",
    "end": "3310839"
  },
  {
    "text": "what beans you want to be injected so any Bean with a bean defining annotation that is stateless stateful or um CDI",
    "start": "3310839",
    "end": "3319280"
  },
  {
    "text": "scope will be automatically available for injection okay so in this case for example if I look at my source packages",
    "start": "3319280",
    "end": "3327200"
  },
  {
    "text": "I have my bean here on the bean I just need to put at",
    "start": "3327200",
    "end": "3332599"
  },
  {
    "text": "request scoped I just made it at request scope and in my",
    "start": "3332599",
    "end": "3338520"
  },
  {
    "text": "serlet if I try to inject my bean well of course this is net beans is complaining oh CDI you're trying to use",
    "start": "3338960",
    "end": "3345760"
  },
  {
    "text": "CDI there is no beans or XML what the ID does not know I'm trying to trick it",
    "start": "3345760",
    "end": "3351200"
  },
  {
    "text": "Java E7 does not need a beans.xml so uh here the injection would just work out of the box if I were to run",
    "start": "3351200",
    "end": "3359558"
  },
  {
    "text": "it I say inject the bean I just say get hello Duke um but what's happening is on",
    "start": "3367720",
    "end": "3374480"
  },
  {
    "text": "the bean I'm invoking the method and there is no beans.xml you want to double check it let's do",
    "start": "3374480",
    "end": "3381039"
  },
  {
    "text": "that let's go to Target look at my War file look at my web and if and U I don't",
    "start": "3381039",
    "end": "3389039"
  },
  {
    "text": "know why it included my specific web XML but no beans.xml so some of the key points",
    "start": "3389039",
    "end": "3395359"
  },
  {
    "text": "here as you can see I can go on for a few hours on this but I think I'm pretty much out of time and I have about 1",
    "start": "3395359",
    "end": "3402000"
  },
  {
    "text": "minute for any questions if you have any the question is how does the batch API",
    "start": "3402000",
    "end": "3407880"
  },
  {
    "text": "impact the existing ETL developers or the existing tool providers so IBM is a",
    "start": "3407880",
    "end": "3414920"
  },
  {
    "text": "specification lead for batch applic ation um and um that's one thing that I'm trying to figure out because spring",
    "start": "3414920",
    "end": "3420359"
  },
  {
    "text": "batch is used pretty heavily and that's sort of the unfortunately the defao",
    "start": "3420359",
    "end": "3425520"
  },
  {
    "text": "standard that people use in the industry but the idea is um there there's a very",
    "start": "3425520",
    "end": "3430640"
  },
  {
    "text": "close similarity between uh spring batch and the job XML as a matter of fact",
    "start": "3430640",
    "end": "3435960"
  },
  {
    "text": "there were folks from VMware who were part of the expert group who were actually contributing pretty actively to",
    "start": "3435960",
    "end": "3441559"
  },
  {
    "text": "the specification so um hopefully in the near future we we should have a compare",
    "start": "3441559",
    "end": "3447160"
  },
  {
    "text": "and contrast kind of an article um hopefully providing a little bit more guidance and Direction on how to get",
    "start": "3447160",
    "end": "3452760"
  },
  {
    "text": "away from Spring bad to badge applications as well thank you [Applause]",
    "start": "3452760",
    "end": "3461719"
  },
  {
    "text": "[Music]",
    "start": "3462020",
    "end": "3465110"
  }
]