[
  {
    "text": "I'm really excited to be here at Q con right here in Times Square I'll start",
    "start": "3870",
    "end": "9629"
  },
  {
    "text": "off with a really quick little story eleven years ago I had an internship at an off-broadway theatre around the",
    "start": "9629",
    "end": "15809"
  },
  {
    "text": "corner I was the production intern so I was helping out with scenery lighting running the shows none of the stuff that",
    "start": "15809",
    "end": "23369"
  },
  {
    "text": "happens up here but all the stuff that happens with hind the scenes and I never expected to be up on a stage in Times",
    "start": "23369",
    "end": "30329"
  },
  {
    "text": "Square under the lights and yet here I am and I'm here to talk about my career services so I hope you're all ready",
    "start": "30329",
    "end": "36059"
  },
  {
    "text": "is there enough energy in this room can I get a whoo yeah there we go okay I know it's like the middle of the",
    "start": "36059",
    "end": "42660"
  },
  {
    "text": "afternoon right after lunch so I just wanted to make sure everyone was awake and ready for this so today",
    "start": "42660",
    "end": "48269"
  },
  {
    "text": "I'm talking about no micro service is an island and one of the things that I've noticed going through a bunch of the",
    "start": "48269",
    "end": "55050"
  },
  {
    "text": "talks that have already been at the conference is no one really defined what a micro-services and yet you've also",
    "start": "55050",
    "end": "61739"
  },
  {
    "text": "been hearing about these distributed systems things so in case you're wondering micro services are a",
    "start": "61739",
    "end": "70050"
  },
  {
    "text": "distributed system just want to start that out just in case you were confused I know there's a lot of people who were",
    "start": "70050",
    "end": "75810"
  },
  {
    "text": "doing micro services at least a little bit in this room and micro services are great we moved to micro services to get",
    "start": "75810",
    "end": "82290"
  },
  {
    "text": "a lot of benefits in terms of agility in terms of speed in terms of decoupling so",
    "start": "82290",
    "end": "87720"
  },
  {
    "text": "that we can move independently and of course micro services can help you cut costs by being able to scale up or down",
    "start": "87720",
    "end": "93900"
  },
  {
    "text": "depending on your load even though there's obviously a lot of other costs associated with them and the thing is",
    "start": "93900",
    "end": "99870"
  },
  {
    "text": "when people first start doing micro services when you have just a couple of them you have this grand idea of what",
    "start": "99870",
    "end": "106260"
  },
  {
    "text": "your micro services system will look at and it usually looks really pretty and all of the lines are straight and they",
    "start": "106260",
    "end": "112380"
  },
  {
    "text": "all make sense but again micro services are a distributed system so as the",
    "start": "112380",
    "end": "117960"
  },
  {
    "text": "system grows as the system gets more complex it's gonna get a little messy and of course the more pieces you add",
    "start": "117960",
    "end": "126450"
  },
  {
    "text": "the more connections you have something we'll probably go wrong these are really",
    "start": "126450",
    "end": "133409"
  },
  {
    "text": "big complex systems there's a lot of things happening time you might have multiple teams",
    "start": "133409",
    "end": "138830"
  },
  {
    "text": "deploying you might have teams deploying new infrastructure while you're also deploying that you don't know about",
    "start": "138830",
    "end": "143840"
  },
  {
    "text": "because you sit over here and this other team is maybe across the country or across the world so when you're dealing",
    "start": "143840",
    "end": "151099"
  },
  {
    "text": "with this really large distributed system how do you figure out when something goes wrong how do you know",
    "start": "151099",
    "end": "158110"
  },
  {
    "text": "what's going on in your systems how do you even know there's a problem and then",
    "start": "158110",
    "end": "164420"
  },
  {
    "text": "once you've figured out that there's some sort of problem how do you fix a problem in your distributed system I'm",
    "start": "164420",
    "end": "171049"
  },
  {
    "text": "not necessarily just talking about oh I have this one application and not like can't connect the database but real big",
    "start": "171049",
    "end": "177620"
  },
  {
    "text": "system-wide problems so when you're thinking about micro services you're thinking about a lot of new challenges",
    "start": "177620",
    "end": "183590"
  },
  {
    "text": "that you haven't necessarily dealt with if you've worked primarily in a monolithic world or even some of the",
    "start": "183590",
    "end": "190220"
  },
  {
    "text": "larger service service oriented architecture worlds you don't necessarily have all of these connections to deal with micro services",
    "start": "190220",
    "end": "197510"
  },
  {
    "text": "are about more than application size it's not just about we're writing really small bits of code that get deployed",
    "start": "197510",
    "end": "202760"
  },
  {
    "text": "independently it's a lot more than that as you'll see mostly because you have significantly increased the failure",
    "start": "202760",
    "end": "209540"
  },
  {
    "text": "points in your system and in order to help that your micro services need to be",
    "start": "209540",
    "end": "216319"
  },
  {
    "text": "surrounded by an ecosystem you don't just deploy one single micro service and call it a day like we're",
    "start": "216319",
    "end": "221420"
  },
  {
    "text": "doing micro services now we have to that's not going to work your applications have to adapt to running in",
    "start": "221420",
    "end": "228560"
  },
  {
    "text": "a micro services based ecosystem and your infrastructure also has to adapt to",
    "start": "228560",
    "end": "234470"
  },
  {
    "text": "be able to support the micro services as you grow in scale otherwise you're going to be playing catch-up I've seen this",
    "start": "234470",
    "end": "240920"
  },
  {
    "text": "happen where you say we're gonna do micro services you deploy a handful of services but your infrastructure isn't",
    "start": "240920",
    "end": "246380"
  },
  {
    "text": "there your tooling isn't there you're doing manual deployments that take several hours that's not doing micro services so when",
    "start": "246380",
    "end": "254870"
  },
  {
    "text": "I talk about these challenges I'm gonna be talking about three specific areas the first is deployment how do you",
    "start": "254870",
    "end": "262280"
  },
  {
    "text": "deploy your micro services how is it different than the way you might've been doing them before how do you scale your",
    "start": "262280",
    "end": "268370"
  },
  {
    "text": "micro services as I said one of the biggest benefit to this large system is you can add more",
    "start": "268370",
    "end": "274080"
  },
  {
    "text": "servers instances whatever you want to call them as they're needed rather than we always are going to have five servers",
    "start": "274080",
    "end": "280500"
  },
  {
    "text": "it's going to cost us the same amount over time scaling lets you scale up and scale down and debugging I know there",
    "start": "280500",
    "end": "287610"
  },
  {
    "text": "was a debugging talk before this but hopefully you learned much from both of our talks but debugging can be a lot",
    "start": "287610",
    "end": "294480"
  },
  {
    "text": "trickier with micro services because as again a lot more failure points and all",
    "start": "294480",
    "end": "299910"
  },
  {
    "text": "of these together help you create a foundation so that your micro services can thrive and grow so let's start with",
    "start": "299910",
    "end": "307230"
  },
  {
    "text": "deploying what are the characteristics of a micro services deployment some of",
    "start": "307230",
    "end": "312570"
  },
  {
    "text": "this might seem a little similar to those that are already doing it but trust me you'll learn more first of all",
    "start": "312570",
    "end": "319920"
  },
  {
    "text": "micro service deployments should be small if you have small services you're probably making small changes and one of",
    "start": "319920",
    "end": "327720"
  },
  {
    "text": "the benefits of small changes as you can release frequently you shouldn't be spending 36 hours running a robust",
    "start": "327720",
    "end": "335160"
  },
  {
    "text": "integration suite for a 10 line change that doesn't quite add up and you also",
    "start": "335160",
    "end": "341640"
  },
  {
    "text": "want your deployments to be consistent if you're having small deployments that are done frequently you want them to be",
    "start": "341640",
    "end": "347760"
  },
  {
    "text": "done the same way every time so you don't need to worry and you don't need to spend four hours but this isn't to",
    "start": "347760",
    "end": "355470"
  },
  {
    "text": "say like when I say consistent I don't necessarily mean you should only be doing Java or you should only be doing go consistent in terms of the tooling",
    "start": "355470",
    "end": "362880"
  },
  {
    "text": "and the underlying way in which they're deployed if you want to standardize on containers that's great but otherwise",
    "start": "362880",
    "end": "368370"
  },
  {
    "text": "your tooling should be able to support all of the different kinds of applications so poly got can work with",
    "start": "368370",
    "end": "374760"
  },
  {
    "text": "consistency as long as you build your tooling correctly that isn't to say that you should always have a special",
    "start": "374760",
    "end": "380400"
  },
  {
    "text": "snowflake a special snowflake is a service that needs a different way of deploying a different way of you know",
    "start": "380400",
    "end": "387419"
  },
  {
    "text": "building artifacts something that is completely different than everything else you do as soon as you start having",
    "start": "387419",
    "end": "392580"
  },
  {
    "text": "one special snowflake you're gonna have two special snowflakes and then three and then four because people are going",
    "start": "392580",
    "end": "398520"
  },
  {
    "text": "to see that you're allowing all of these different things to but in your system and it's just not",
    "start": "398520",
    "end": "405440"
  },
  {
    "text": "gonna work it's not going to scale so what this means is you need to have really really top-notch tooling you need",
    "start": "405440",
    "end": "411680"
  },
  {
    "text": "to invest in your deployment tooling and there's entire conferences and tools out",
    "start": "411680",
    "end": "417470"
  },
  {
    "text": "there and available for you to do this you also need to automate as much as possible if you're deploying multiple",
    "start": "417470",
    "end": "424970"
  },
  {
    "text": "times a day you shouldn't have humans touching your deploys again you should not have humans",
    "start": "424970",
    "end": "431990"
  },
  {
    "text": "touching your deploys maybe kicking them off but you shouldn't be going through manually uploading things manually",
    "start": "431990",
    "end": "437870"
  },
  {
    "text": "pressing buttons or flipping switches it should be automated as much as possible",
    "start": "437870",
    "end": "443140"
  },
  {
    "text": "now there's an industry standard way of doing deployments that you've probably all heard about called stage deployments",
    "start": "443140",
    "end": "448880"
  },
  {
    "text": "this is really great for micro services because it's a zero downtime and it allows you to roll out your changes in a",
    "start": "448880",
    "end": "456200"
  },
  {
    "text": "way that you can feel confident that things are going right so first we have Canary deployments this term has been",
    "start": "456200",
    "end": "462050"
  },
  {
    "text": "thrown out a little bit but I haven't seen anyone yet that's quite explained it so here we go canary deployment",
    "start": "462050",
    "end": "468170"
  },
  {
    "text": "starts with your standard setup you have the internet talking to some sort of router which routes traffic to one of in",
    "start": "468170",
    "end": "474500"
  },
  {
    "text": "this case three different servers I'm going to say server but this could be a Linda's container this could be a VM",
    "start": "474500",
    "end": "480560"
  },
  {
    "text": "this could be anything you put your code in and run it but for this talk I'm just using the word server so for a canary",
    "start": "480560",
    "end": "488120"
  },
  {
    "text": "deployment you first start by deploying one single new version and you start routing just a little bit of traffic to",
    "start": "488120",
    "end": "493610"
  },
  {
    "text": "it it's the canary in the coalmine where if something goes wrong you've only put maybe 10% of your traffic maybe even",
    "start": "493610",
    "end": "500360"
  },
  {
    "text": "less if you're one of the really really big companies and this means if you start seeing a ton of errors you just",
    "start": "500360",
    "end": "506180"
  },
  {
    "text": "remove the one and it goes away and you fix the problem and you don't have to worry about most of the users in your",
    "start": "506180",
    "end": "511700"
  },
  {
    "text": "system being affected if things go well you start replacing the current version",
    "start": "511700",
    "end": "517219"
  },
  {
    "text": "with the new version and eventually you get rid of the old version all together and this keeps you at the same number of",
    "start": "517220",
    "end": "524780"
  },
  {
    "text": "servers as you had before so it keeps your cost relatively stable as well as you know that it can handle your",
    "start": "524780",
    "end": "530780"
  },
  {
    "text": "production traffic you know it can handle your production ecosystem and everything was okay the second type you've heard of",
    "start": "530780",
    "end": "537959"
  },
  {
    "text": "called blue green red black I know Netflix popularized the red black thing",
    "start": "537959",
    "end": "543180"
  },
  {
    "text": "because those are their colors but this is a very similar deployment type but also I think a little bit harsher and",
    "start": "543180",
    "end": "550320"
  },
  {
    "text": "you'll see why in a second so again standards set up internet talk to a router which routes to one of many",
    "start": "550320",
    "end": "555720"
  },
  {
    "text": "services in this instance you stand up a whole bunch of new service so you duplicate the amount of service you have",
    "start": "555720",
    "end": "562440"
  },
  {
    "text": "active at any one point in time this is fine if you have three if you have 300",
    "start": "562440",
    "end": "567870"
  },
  {
    "text": "that might cost a lot of money or if you're in a data center you might not actually have enough servers to do that",
    "start": "567870",
    "end": "572990"
  },
  {
    "text": "and the thing with this Bluegreen deployment is at one single point in time you do I cut over some of the",
    "start": "572990",
    "end": "582060"
  },
  {
    "text": "systems allow you to do like a 50/50 split but at the end of the day you're left with two sets of servers running I",
    "start": "582060",
    "end": "588300"
  },
  {
    "text": "know my previous job at Capital One we actually had to do this mostly because",
    "start": "588300",
    "end": "594180"
  },
  {
    "text": "we always had to have a backup version so you might have legislation or other laws in effect that you need you know",
    "start": "594180",
    "end": "600480"
  },
  {
    "text": "one hundred percent up to him uptime so you might need to use something like this and the great thing about both of",
    "start": "600480",
    "end": "607079"
  },
  {
    "text": "these techniques is you can do automatic roll backs you can have this system detect us unhealthy and say I'm having",
    "start": "607079",
    "end": "614120"
  },
  {
    "text": "100% of requests fail time to rollback and of course you can do manual intervention but this means so if you're",
    "start": "614120",
    "end": "623069"
  },
  {
    "text": "automatically rolling back that was bad but how do you know that things are okay",
    "start": "623069",
    "end": "628380"
  },
  {
    "text": "how do you know a deployment is successful we seem to throw out this term successful a lot but no one really",
    "start": "628380",
    "end": "634589"
  },
  {
    "text": "defines what that is you're just like oh it's successful great and then in order",
    "start": "634589",
    "end": "642240"
  },
  {
    "text": "to figure out that your system is your deployment was successful in your system is healthy what feature tools need to",
    "start": "642240",
    "end": "647819"
  },
  {
    "text": "exist because remember we're not we might be deploying one service we might be deploying one application but it's",
    "start": "647819",
    "end": "653910"
  },
  {
    "text": "not just one application that is affected by this deployment it could be a whole lot of things so for your",
    "start": "653910",
    "end": "659639"
  },
  {
    "text": "application in order to figure out if it's a successful deployment or not you need a robust test suite hope you're all",
    "start": "659639",
    "end": "666420"
  },
  {
    "text": "writing tests and this means both unit and integration because one of the things about micro",
    "start": "666420",
    "end": "672389"
  },
  {
    "text": "services that people seem to forget about is that you need to test the space between micro-services aren't",
    "start": "672389",
    "end": "679170"
  },
  {
    "text": "necessarily about server a is really tiny a server B is really tiny they're about what happens between a and B so",
    "start": "679170",
    "end": "685649"
  },
  {
    "text": "those integration tests become increasingly important as your system grows and of course if you're doing",
    "start": "685649",
    "end": "691529"
  },
  {
    "text": "frequent deployments you need really frequent testing so again your test suite shouldn't take multiple hours to",
    "start": "691529",
    "end": "697050"
  },
  {
    "text": "run so you need to build toolings that you can run your tests really quickly so you can deploy within a reasonable",
    "start": "697050",
    "end": "702749"
  },
  {
    "text": "timeframe you also should have standardized health checks there are some tools out there that just provide",
    "start": "702749",
    "end": "708990"
  },
  {
    "text": "this for you but within your system all of your services should be talking the same health check language be it port",
    "start": "708990",
    "end": "716149"
  },
  {
    "text": "endpoint URL and contents your services",
    "start": "716149",
    "end": "721529"
  },
  {
    "text": "also need to consume dependencies and secrets if you're deploying really quickly and you're going from development environment staging",
    "start": "721529",
    "end": "728009"
  },
  {
    "text": "environment production environment hopefully you're not recompiling your code every time in fact I would say you",
    "start": "728009",
    "end": "733199"
  },
  {
    "text": "should not be compiling your code every time which means if your service needs to talk to the outside world or if it is",
    "start": "733199",
    "end": "739439"
  },
  {
    "text": "expecting files and certificates to live somewhere or if it's expecting passwords and tokens it needs to consume all that",
    "start": "739439",
    "end": "745709"
  },
  {
    "text": "stuff so for dependencies you need things like your URL to your database URL to some third party service and then",
    "start": "745709",
    "end": "752490"
  },
  {
    "text": "obviously your secrets usernames passwords tokens hopefully the keynote scared you all into not putting tokens",
    "start": "752490",
    "end": "759389"
  },
  {
    "text": "and password into your git repositories anymore so please avoid that so to recap you need your test to pass",
    "start": "759389",
    "end": "767699"
  },
  {
    "text": "on your application you need those health checks and of course you need dependency and secret integration so you",
    "start": "767699",
    "end": "773189"
  },
  {
    "text": "can move through the pipeline really quickly now what about the system so the",
    "start": "773189",
    "end": "778559"
  },
  {
    "text": "reason that I said standardized health checks is you need something to aggregate health checks when a",
    "start": "778559",
    "end": "783899"
  },
  {
    "text": "deployment is going on and you have one service going up another service that depends on it you shouldn't need to like",
    "start": "783899",
    "end": "790290"
  },
  {
    "text": "log in to a bunch of servers to figure out if they're all passing you should have a system level dashboard some sort",
    "start": "790290",
    "end": "797100"
  },
  {
    "text": "of system level view of the health of everything because you want to see that system state this is the really important thing",
    "start": "797100",
    "end": "803920"
  },
  {
    "text": "because as you grow your system you're going to have servers and you're going to have applications that are much more",
    "start": "803920",
    "end": "809800"
  },
  {
    "text": "central to the health of your system than anything else like an authentication server how many times do",
    "start": "809800",
    "end": "815260"
  },
  {
    "text": "a plication x' double check that the author content occasion token is valid it happens a lot so there are some",
    "start": "815260",
    "end": "822520"
  },
  {
    "text": "things that they go down everything else goes down you also need a bit more of a",
    "start": "822520",
    "end": "828279"
  },
  {
    "text": "proactive system so a fully automated deployment pipeline means that you",
    "start": "828279",
    "end": "834460"
  },
  {
    "text": "should be confident that if some things goes wrong they're going to be alerted we've all heard the story of the",
    "start": "834460",
    "end": "839560"
  },
  {
    "text": "developer who starts to deploy and then goes to get coffee and comes back and everything is broken in the real world",
    "start": "839560",
    "end": "845800"
  },
  {
    "text": "if you're doing if you are doing best practices the developer who starts as a play goes to get a coffee should then",
    "start": "845800",
    "end": "852310"
  },
  {
    "text": "get an alert saying something's not right we're being rolled back you need to go look at what's going on so you can still",
    "start": "852310",
    "end": "858010"
  },
  {
    "text": "go get a coffee but you need to be ready to act in case something goes wrong and",
    "start": "858010",
    "end": "863400"
  },
  {
    "text": "you need to be able to see the deployment status we don't work on teams of one usually so usually a team will",
    "start": "863400",
    "end": "869860"
  },
  {
    "text": "own one or more services so if one person is kicking off a deploy everyone on their team should be able to go and",
    "start": "869860",
    "end": "876100"
  },
  {
    "text": "see what the status is if you are working on something that's dependent on",
    "start": "876100",
    "end": "881680"
  },
  {
    "text": "the other team and that team is deploying you're seeing something weird you should be able to go and see if that teams to boying",
    "start": "881680",
    "end": "886779"
  },
  {
    "text": "so you know whether or not you should be expecting these errors so having a Status page is accessible to everyone is",
    "start": "886779",
    "end": "893140"
  },
  {
    "text": "important so that you don't have to be like hey person are you deploying right now I'm seeing weird errors because",
    "start": "893140",
    "end": "898330"
  },
  {
    "text": "everybody hates that and if you really really want to have fun in your system",
    "start": "898330",
    "end": "904150"
  },
  {
    "text": "we do this at square have some BOTS and deploy using chat BOTS or other sort of",
    "start": "904150",
    "end": "911230"
  },
  {
    "text": "things they make things a little bit fun but at the same time if every time one of your pieces of code goes out you get",
    "start": "911230",
    "end": "916810"
  },
  {
    "text": "a ping in slack you have really good visibility into what's going on a little bit more advanced and definitely a",
    "start": "916810",
    "end": "923140"
  },
  {
    "text": "little bit more fun but it's something that I've definitely enjoyed since joining Square even though I first put",
    "start": "923140",
    "end": "928930"
  },
  {
    "text": "this in as a little bit of a joke but I really like it now so to recap deployments require changes",
    "start": "928930",
    "end": "936459"
  },
  {
    "text": "from both your application and your infrastructure in order to be determined to be successful right and of course",
    "start": "936459",
    "end": "943589"
  },
  {
    "text": "everything's going great so you have a successful deployment and like you're",
    "start": "943589",
    "end": "948699"
  },
  {
    "text": "done right once you deploy you're done you don't have to worry about anything you can go get that coffee well that's",
    "start": "948699",
    "end": "954730"
  },
  {
    "text": "not necessarily the case all the time distributed systems are constantly",
    "start": "954730",
    "end": "960220"
  },
  {
    "text": "changing so the state of the world when you deploy is not necessarily going to be the state of the world in five",
    "start": "960220",
    "end": "965589"
  },
  {
    "text": "minutes or three hours or the next day so one of the things you have to be",
    "start": "965589",
    "end": "974259"
  },
  {
    "text": "cognizant of is scaling which is our next topic scaling happens when your application",
    "start": "974259",
    "end": "980769"
  },
  {
    "text": "has more or less load this is pretty common stuff but how do you know that",
    "start": "980769",
    "end": "986860"
  },
  {
    "text": "your service has more load do you just like log into it and see how it's doing",
    "start": "986860",
    "end": "991920"
  },
  {
    "text": "hopefully you have some sort of health tracking setup so you can see that load if you're not tracking it you're not",
    "start": "991920",
    "end": "998620"
  },
  {
    "text": "going to know so for health checks for scaling you usually want to look at",
    "start": "998620",
    "end": "1003839"
  },
  {
    "text": "things like RAM CPU latency like your general I have a server it's talking to",
    "start": "1003839",
    "end": "1009600"
  },
  {
    "text": "other servers kind of metrics but of course you're gonna want to do something custom if you're running a queueing",
    "start": "1009600",
    "end": "1015240"
  },
  {
    "text": "system you might want to keep track of how many items are in the queue because if you do a deploy and all of a sudden",
    "start": "1015240",
    "end": "1020610"
  },
  {
    "text": "those items go up and up and up and are not getting smaller something's going wrong or if it's Black Friday and you're",
    "start": "1020610",
    "end": "1027808"
  },
  {
    "text": "an e-commerce site and you're having a ton of orders and there's this giant queue of things you need to roll out more servers to support the items in",
    "start": "1027809",
    "end": "1035038"
  },
  {
    "text": "that queue so how do micro services scale it's a really hard question it's",
    "start": "1035039",
    "end": "1042659"
  },
  {
    "text": "actually not it's automation please don't hand scale your systems you",
    "start": "1042659",
    "end": "1049679"
  },
  {
    "text": "can in a pinch but the really great thing about automation is that you can",
    "start": "1049679",
    "end": "1055140"
  },
  {
    "text": "have a smart system it can scale up when things are under pressure and then it can scale down when they're not so if",
    "start": "1055140",
    "end": "1061830"
  },
  {
    "text": "it's 3:00 a.m. in New York you're primarily a website that's used",
    "start": "1061830",
    "end": "1067710"
  },
  {
    "text": "during us business hours you don't need to be spending all of the time and resources keeping your servers running",
    "start": "1067710",
    "end": "1073040"
  },
  {
    "text": "so in the world of cloud computing where you're charged by the hour you can actually save yourself some money save",
    "start": "1073040",
    "end": "1078990"
  },
  {
    "text": "yourself some headache and scale things down and of course smart systems can",
    "start": "1078990",
    "end": "1084240"
  },
  {
    "text": "trigger scaling so things like job queues being too high ram being too high latency x' being too high all of these",
    "start": "1084240",
    "end": "1090900"
  },
  {
    "text": "things you can control and then have scaling happen automatically and there's",
    "start": "1090900",
    "end": "1097260"
  },
  {
    "text": "two different kinds of scaling scaling up scaling down scaling up should seem pretty similar because you're just",
    "start": "1097260",
    "end": "1104490"
  },
  {
    "text": "deploying a new instance a new server a new whatever which is why I said all of your automation tooling should be",
    "start": "1104490",
    "end": "1110310"
  },
  {
    "text": "deployed or out of your deployment tooling should be automated because I've seen where you have a separate",
    "start": "1110310",
    "end": "1116040"
  },
  {
    "text": "deployment tool from a separate scaling tool and let me tell you if you have two",
    "start": "1116040",
    "end": "1122370"
  },
  {
    "text": "tools you're going to keep forgetting to update one of them so you want your tooling for scaling and deployment to be",
    "start": "1122370",
    "end": "1128310"
  },
  {
    "text": "as unified as possible you obviously need to monitor health checks your system should be able to ingest the data",
    "start": "1128310",
    "end": "1134070"
  },
  {
    "text": "that you're already spitting out into the world once instances are up you should have",
    "start": "1134070",
    "end": "1139410"
  },
  {
    "text": "something that can send traffic to them scaling down again the important thing",
    "start": "1139410",
    "end": "1144840"
  },
  {
    "text": "because people don't necessarily realize it when they're building their tool length they spend so much time building",
    "start": "1144840",
    "end": "1149970"
  },
  {
    "text": "a scale off automation that they forget to bring the scale down automation so when your instances aren't being used",
    "start": "1149970",
    "end": "1156270"
  },
  {
    "text": "which again you need to check Ram CPU request volume servers getting no",
    "start": "1156270",
    "end": "1161490"
  },
  {
    "text": "requests because you deployed a new version of it someplace else you should get rid of those because",
    "start": "1161490",
    "end": "1166800"
  },
  {
    "text": "you're just wasting time and energy you need to stop routing traffic to that server and gracefully shut down this is",
    "start": "1166800",
    "end": "1174840"
  },
  {
    "text": "something that a lot of application authors don't necessarily think about because you want requests to be able to",
    "start": "1174840",
    "end": "1181020"
  },
  {
    "text": "continue right you don't want to just take down a server and have all the requests you know how to return some",
    "start": "1181020",
    "end": "1187410"
  },
  {
    "text": "sort of error but at the same time you don't want to start adding new requests and of course you need to start",
    "start": "1187410",
    "end": "1194040"
  },
  {
    "text": "disconnecting from things you need to close your database connections you to just keep track of things as you're",
    "start": "1194040",
    "end": "1200400"
  },
  {
    "text": "shutting down to make sure that everything happens gracefully you need to report the progress so you're scaling",
    "start": "1200400",
    "end": "1207030"
  },
  {
    "text": "automation for scaling down won't know when it's fully ready to go away unless",
    "start": "1207030",
    "end": "1212100"
  },
  {
    "text": "you tell it it's ready because our systems right now don't necessarily have all the insights into the individual",
    "start": "1212100",
    "end": "1218070"
  },
  {
    "text": "application logic to know when something is really done being used zero CPU not",
    "start": "1218070",
    "end": "1223950"
  },
  {
    "text": "necessarily the best indication because that could also be a problem and then ultimately DS get removed now I've",
    "start": "1223950",
    "end": "1231720"
  },
  {
    "text": "talked a couple of times about this routing traffic thing and didn't really say what I mean well again these are",
    "start": "1231720",
    "end": "1238290"
  },
  {
    "text": "pieces of infrastructure that hopefully everyone in this room is at least somewhat familiar with and I mean either",
    "start": "1238290",
    "end": "1243809"
  },
  {
    "text": "load bouncey load balancer or service discovery if you're in the envoy talk",
    "start": "1243809",
    "end": "1249030"
  },
  {
    "text": "yesterday on boy does service discovery out-of-the-box for you so it's a really great thing and I suggest you check it",
    "start": "1249030",
    "end": "1254309"
  },
  {
    "text": "out so load balancer all cloud providers have one built in so if we're using the",
    "start": "1254309",
    "end": "1260730"
  },
  {
    "text": "public cloud or if you have a private cloud chances are one is already available to you I suggest learning how to use that",
    "start": "1260730",
    "end": "1267510"
  },
  {
    "text": "because it's a lot easier than building your own or running your own you definitely can there are great options",
    "start": "1267510",
    "end": "1273270"
  },
  {
    "text": "out there if you need to run all of your own systems and the great thing about a",
    "start": "1273270",
    "end": "1278520"
  },
  {
    "text": "lot of these load balancers especially the ones in the cloud is you can attach to some sort of scaling group which is",
    "start": "1278520",
    "end": "1283860"
  },
  {
    "text": "an auto scaling group an AWS auto scale and Asher and autoscaler and Google cloud and you can have these two pieces",
    "start": "1283860",
    "end": "1290640"
  },
  {
    "text": "talk to each other so your Google cloud load balancer can say oh hey I need more",
    "start": "1290640",
    "end": "1295860"
  },
  {
    "text": "instances because I'm getting too much traffic it'll automatically scale things up for you and again it will",
    "start": "1295860",
    "end": "1301950"
  },
  {
    "text": "automatically register those new instances as you have things set up so all of that can be taken care of for you",
    "start": "1301950",
    "end": "1307080"
  },
  {
    "text": "if you use a nice smart system conversely instances can go away when",
    "start": "1307080",
    "end": "1313230"
  },
  {
    "text": "they're remove instances get removed when they're going away just like you would expect service discovery for those",
    "start": "1313230",
    "end": "1320100"
  },
  {
    "text": "of you that are not familiar with it this is something that will route to healthy instances it's a much more",
    "start": "1320100",
    "end": "1325260"
  },
  {
    "text": "centralized system even though you can still have sidecars under individual applications kind of",
    "start": "1325260",
    "end": "1331240"
  },
  {
    "text": "boy your applications usually register with it or a piece of infrastructure registers for them and you route via",
    "start": "1331240",
    "end": "1338500"
  },
  {
    "text": "convention so instead of going out and saying I'm going to talk to this server over there it works a little bit",
    "start": "1338500",
    "end": "1346200"
  },
  {
    "text": "differently so for service discovery if a needs to talk to B it'll say hey",
    "start": "1346200",
    "end": "1352270"
  },
  {
    "text": "service discovery get me foo from B please service discovery will go to B get it and then route it back but the",
    "start": "1352270",
    "end": "1359710"
  },
  {
    "text": "beauty with service discovery is if B is unhealthy and a makes that request the",
    "start": "1359710",
    "end": "1366279"
  },
  {
    "text": "service discovery returns a known error and this is where the importance of service discovery really comes in B is",
    "start": "1366279",
    "end": "1373299"
  },
  {
    "text": "you go from an unknown state the server is returning an error mi do just doing",
    "start": "1373299",
    "end": "1378460"
  },
  {
    "text": "something wrong is there something wrong with the server is there something wrong with the network to the service discovery said that this server is not",
    "start": "1378460",
    "end": "1385210"
  },
  {
    "text": "reachable that is a known state it's an error you should still investigate and figure it out but it takes you from an",
    "start": "1385210",
    "end": "1390700"
  },
  {
    "text": "unknown state to a known state so it's a lot easier to figure out what's going wrong service discovery is generally",
    "start": "1390700",
    "end": "1396940"
  },
  {
    "text": "pretty smart it knows the health of your applications through health checks and it again can trigger scaling automation",
    "start": "1396940",
    "end": "1402399"
  },
  {
    "text": "if you have set that up but scaling only solves so many problems because this",
    "start": "1402399",
    "end": "1409270"
  },
  {
    "text": "things will still continue to go wrong so let's talk about debugging your",
    "start": "1409270",
    "end": "1414909"
  },
  {
    "text": "distributed system first you need to",
    "start": "1414909",
    "end": "1420190"
  },
  {
    "text": "know there's a problem again we're back to the how do you find problems in your distributed system well hopefully you",
    "start": "1420190",
    "end": "1428980"
  },
  {
    "text": "have alerts setup no one likes getting paged but we all do but the thing is you",
    "start": "1428980",
    "end": "1434740"
  },
  {
    "text": "also need to know what qualifies as a problem you don't necessarily want to alert engineers every time you get an",
    "start": "1434740",
    "end": "1440830"
  },
  {
    "text": "exception you don't want to alert an engineer the first time a request times out because they're not going to be able",
    "start": "1440830",
    "end": "1446799"
  },
  {
    "text": "to do anything and for instance if you're getting paged about a request timing out and you know you have",
    "start": "1446799",
    "end": "1451929"
  },
  {
    "text": "automatic retries setup then you really can't do anything that's a nuisance page it should not be around so I love alerts",
    "start": "1451929",
    "end": "1459100"
  },
  {
    "text": "but I love alerts that are actually useful even more and what you're going to Alert for",
    "start": "1459100",
    "end": "1464950"
  },
  {
    "text": "various prep for your application so things like rims CPU latency you can do",
    "start": "1464950",
    "end": "1470679"
  },
  {
    "text": "that any other sort of HTTP you get all of those can trigger alerts but you also",
    "start": "1470679",
    "end": "1476619"
  },
  {
    "text": "want to think of less obvious things if your service has scaled seven times in",
    "start": "1476619",
    "end": "1482049"
  },
  {
    "text": "the past hour and you're not getting any more traffic you might have a memory leak that's causing your instances to",
    "start": "1482049",
    "end": "1488200"
  },
  {
    "text": "run out of memory therefore a trigger scaling automation run out of memory trigger scaling automation and that's",
    "start": "1488200",
    "end": "1494259"
  },
  {
    "text": "something you should look into so it's not necessarily about like your application level stuff it could also be",
    "start": "1494259",
    "end": "1500200"
  },
  {
    "text": "all of the other automation you have in the system that you're alerting for as well you can also alert for your key",
    "start": "1500200",
    "end": "1507220"
  },
  {
    "text": "performance indicators or F service level agreements or SLA s if you work in a team or on a service that is super",
    "start": "1507220",
    "end": "1515979"
  },
  {
    "text": "high availability it's important to keep track of the stuff both for yourself and for everyone else but the thing is",
    "start": "1515979",
    "end": "1522999"
  },
  {
    "text": "alerts are for known issues they're for things that you can think about ahead of time and think oh I might get a 500",
    "start": "1522999",
    "end": "1529899"
  },
  {
    "text": "request 500 error if I talk to this other server or there might be times when I'm trying to save a file and the",
    "start": "1529899",
    "end": "1536379"
  },
  {
    "text": "disk is full those are known errors but in debugging and figuring out what's",
    "start": "1536379",
    "end": "1542529"
  },
  {
    "text": "wrong there's always going to be a human component which is why you also need some sort of dashboards you need to be",
    "start": "1542529",
    "end": "1548889"
  },
  {
    "text": "able to get an aggregate view of what's going on in your system again if you saw the Envoy talk yesterday morning there",
    "start": "1548889",
    "end": "1555970"
  },
  {
    "text": "is the mention of being able to see requests with really high latencies and until they had the dashboards they",
    "start": "1555970",
    "end": "1561789"
  },
  {
    "text": "didn't know that they had requests that every once in a while would have super long latency so dashboards are really",
    "start": "1561789",
    "end": "1568419"
  },
  {
    "text": "important because at the end of the day we're humans and we're going to make better connections when we visualize",
    "start": "1568419",
    "end": "1573700"
  },
  {
    "text": "data than when computers do it themselves so you found your issue now",
    "start": "1573700",
    "end": "1579190"
  },
  {
    "text": "how do you debug it right standard debugging 101 you're going to go look at",
    "start": "1579190",
    "end": "1585159"
  },
  {
    "text": "the application that is causing the page that is throwing the error and oh wait pretend that SSH doesn't exist this is",
    "start": "1585159",
    "end": "1592479"
  },
  {
    "text": "the challenge for you all don't log it into SSH into production please in addition to it being a major security",
    "start": "1592479",
    "end": "1600220"
  },
  {
    "text": "vulnerability once you start once you stop relying on SSH and building tooling",
    "start": "1600220",
    "end": "1605950"
  },
  {
    "text": "it helps you gain much better insight into your system and it helps you track things a lot better so if you're not",
    "start": "1605950",
    "end": "1612460"
  },
  {
    "text": "gonna SSH in use your next best thing as your logs so hopefully you have log",
    "start": "1612460",
    "end": "1618009"
  },
  {
    "text": "collection and aggregation set up on your system and if you want to go really",
    "start": "1618009",
    "end": "1623019"
  },
  {
    "text": "really advanced figure out a way you can configure your log levels on the fly so being able to push a button or update a",
    "start": "1623019",
    "end": "1630220"
  },
  {
    "text": "configuration file and all of a sudden your application just start spitting out a bunch of extra logs this is really",
    "start": "1630220",
    "end": "1636759"
  },
  {
    "text": "useful in times of crisis when you're like oh I wish we just had one more piece of information again a little bit",
    "start": "1636759",
    "end": "1641950"
  },
  {
    "text": "more work you have to update your application but it's really worth it if you can't have the time to do it so",
    "start": "1641950",
    "end": "1648269"
  },
  {
    "text": "standard debugging technique you look at your logs figure out what's wrong right if you figure out it's a non-trivial",
    "start": "1648269",
    "end": "1654850"
  },
  {
    "text": "issue and it's gonna take time to fix or you need someone else to help you fix it it's time to escalate that up all of",
    "start": "1654850",
    "end": "1663009"
  },
  {
    "text": "this because you want to avoid cascading failures in a really large distributed system you don't want the failure of one",
    "start": "1663009",
    "end": "1671259"
  },
  {
    "text": "application to mean the failure of everything so there's two parts to this",
    "start": "1671259",
    "end": "1676269"
  },
  {
    "text": "the first is identification and the second is isolation so with identification what parts of your system",
    "start": "1676269",
    "end": "1683679"
  },
  {
    "text": "depend on another can anyone with really great confidence off the top of their head list out all of the consumers of",
    "start": "1683679",
    "end": "1691090"
  },
  {
    "text": "the service that they run on a day to day basis if it's more than like three it's not something that people do it's",
    "start": "1691090",
    "end": "1697389"
  },
  {
    "text": "not something that we necessarily think about on a day to day basis and if you're working at a company that just is",
    "start": "1697389",
    "end": "1702820"
  },
  {
    "text": "open and like any service can call any service even if you have to go through some you know registration flows maybe",
    "start": "1702820",
    "end": "1708789"
  },
  {
    "text": "your proxy firewall things it's still really easy to not know who might be affected if your server goes down and",
    "start": "1708789",
    "end": "1714249"
  },
  {
    "text": "conversely if you're the one talking to this server that's having a problem how do you know who to talk to to get it",
    "start": "1714249",
    "end": "1719740"
  },
  {
    "text": "fixed so you need to have a good idea of what's going on your system and this is",
    "start": "1719740",
    "end": "1724840"
  },
  {
    "text": "request tracing I know that there are some distributed tracing sessions yesterday so do check those out if you have some",
    "start": "1724840",
    "end": "1731500"
  },
  {
    "text": "time I'm just gonna briefly cover it here real quick request r/a request tracing is literally",
    "start": "1731500",
    "end": "1737530"
  },
  {
    "text": "just following a request as they go through your system this is usually done with unique request IDs that are added",
    "start": "1737530",
    "end": "1744280"
  },
  {
    "text": "as part of the request these work best as an overlay again envoy talked",
    "start": "1744280",
    "end": "1749680"
  },
  {
    "text": "mentioned this and I'm gonna reiterate again if you do request tracing at the application level applications might",
    "start": "1749680",
    "end": "1756640"
  },
  {
    "text": "stomp on each other they might forget to pass along the request ID there's a number of things that can go wrong when",
    "start": "1756640",
    "end": "1762850"
  },
  {
    "text": "individual servers are adding request IDs so if you can do it as a system overlay I highly suggest that and if you",
    "start": "1762850",
    "end": "1770110"
  },
  {
    "text": "don't want to use envoy there's an open standard called open tracing that has widely available tools and will help you",
    "start": "1770110",
    "end": "1776620"
  },
  {
    "text": "out and of course if you can't do that for whatever reason just add your head or manually it's better than nothing",
    "start": "1776620",
    "end": "1783580"
  },
  {
    "text": "is what really comes down to add as much as you can and then figure out ways around it if you can't get it everywhere",
    "start": "1783580",
    "end": "1791880"
  },
  {
    "text": "okay isolation how do we isolate our",
    "start": "1794970",
    "end": "1799990"
  },
  {
    "text": "servers well this is circuit breaking again circuit breaking has been mentioned so I will briefly cover what",
    "start": "1799990",
    "end": "1806559"
  },
  {
    "text": "it is in case you have never heard of circuit breaking before or never played with it it's really cool it's basically",
    "start": "1806559",
    "end": "1813190"
  },
  {
    "text": "a little library or sometimes an overlay that sits between your application and",
    "start": "1813190",
    "end": "1819730"
  },
  {
    "text": "the rest of the world all of your requests go through this if it sees to hundreds everything's fine the circuit",
    "start": "1819730",
    "end": "1826480"
  },
  {
    "text": "stays closed if you start getting a lot of errors with thresholds that you can configure high latency is all sorts of",
    "start": "1826480",
    "end": "1832929"
  },
  {
    "text": "things the circuit opens again the benefit of a circuit breaker is it lets",
    "start": "1832929",
    "end": "1840250"
  },
  {
    "text": "you sorry I just lost my train of thought it isolates services so if it",
    "start": "1840250",
    "end": "1849970"
  },
  {
    "text": "brings your application from a known state from an unknown state turned on say that's what I meant to say",
    "start": "1849970",
    "end": "1855640"
  },
  {
    "text": "so circuit breaking does the exact same thing as what I talked about before because in our big distributed system we",
    "start": "1855640",
    "end": "1861370"
  },
  {
    "text": "want our applications to be in known States as often as possible we don't want to be dealing with stuff that just randomly fails but another benefit",
    "start": "1861370",
    "end": "1869779"
  },
  {
    "text": "of a circuit breaker is it just lets the application recover if some server is returning 500 hours the people running",
    "start": "1869779",
    "end": "1876829"
  },
  {
    "text": "that application are spending a lot of time debugging what's going on in it and you don't want to be hammering them with",
    "start": "1876829",
    "end": "1882440"
  },
  {
    "text": "traffic especially really peak traffic because obviously bad things tend to happen when we have a lot of requests",
    "start": "1882440",
    "end": "1888709"
  },
  {
    "text": "you don't want those people to be dealing with a ton of requests while they're trying to figure out why something is broken so the circuit",
    "start": "1888709",
    "end": "1894919"
  },
  {
    "text": "breaker gives that other application time to recover and this can be done at",
    "start": "1894919",
    "end": "1900349"
  },
  {
    "text": "an application or a system level something like envoy will do it as a system level but you can also use",
    "start": "1900349",
    "end": "1905749"
  },
  {
    "text": "libraries yourself to add it to your application if no one else is interested or you just want to be the first one to",
    "start": "1905749",
    "end": "1911629"
  },
  {
    "text": "do it and again circuit breakers let you fail gracefully so taking you from an unknown state to a known state so hopefully your",
    "start": "1911629",
    "end": "1919999"
  },
  {
    "text": "application you figured out what's going wrong you can deploy fix and of course",
    "start": "1919999",
    "end": "1925249"
  },
  {
    "text": "slowly start sending traffic make sure you've actually fixed the problem don't just open the floodgates back up if you",
    "start": "1925249",
    "end": "1930829"
  },
  {
    "text": "can because then you'll start getting paged again things will start going back down and you'll get stuck in this cycle of up and down up and down up and down",
    "start": "1930829",
    "end": "1938119"
  },
  {
    "text": "and everyone will be really unhappy and that scaling up hopefully if you have",
    "start": "1938119",
    "end": "1944659"
  },
  {
    "text": "your automation in place it can be done automatically and then alert you if something goes wrong so all of the built",
    "start": "1944659",
    "end": "1951289"
  },
  {
    "text": "in load balancers for cloud providers and service discovery will do this for you otherwise update manually it's not",
    "start": "1951289",
    "end": "1958459"
  },
  {
    "text": "the best thing in the world but if you live in a manual world sometimes you do have to do this so hopefully everything",
    "start": "1958459",
    "end": "1965509"
  },
  {
    "text": "returns to normal you've figured out the bug you've deployed a fix you have traffic back up",
    "start": "1965509",
    "end": "1971029"
  },
  {
    "text": "to 100% but what if we go all the way back to when you're first looking at those logs to figure out what your",
    "start": "1971029",
    "end": "1977029"
  },
  {
    "text": "problem was what if the problem isn't one of your applications what if it's a",
    "start": "1977029",
    "end": "1982549"
  },
  {
    "text": "problem in another team's application what if it's a problem with a third party provider do you have an external",
    "start": "1982549",
    "end": "1989899"
  },
  {
    "text": "dependency these are usually more obvious to us as developers because we know we're making calls outside of our",
    "start": "1989899",
    "end": "1996440"
  },
  {
    "text": "firewall we're making calls outside of our service we're making calls to the rest of the world",
    "start": "1996440",
    "end": "2002950"
  },
  {
    "text": "hopefully you're aware of those but external dependencies can happen inside your company too so I have three",
    "start": "2002950",
    "end": "2009790"
  },
  {
    "text": "questions that I always ask people when they ask if they have an external dependency or not first one can you see",
    "start": "2009790",
    "end": "2016450"
  },
  {
    "text": "logs if you don't have access to the logs chances are you have an external dependency if you have access to logs",
    "start": "2016450",
    "end": "2022840"
  },
  {
    "text": "but you don't have access to source then you can't figure out what changed used to happen to fix the problem and then",
    "start": "2022840",
    "end": "2029530"
  },
  {
    "text": "finally if you cannot deploy a fix to solve this problem then it is an",
    "start": "2029530",
    "end": "2035080"
  },
  {
    "text": "external dependency if you are an open company and you can see everyone's source code and you can make a PR that's",
    "start": "2035080",
    "end": "2041860"
  },
  {
    "text": "great but you can't merge that PR you can't deploy that PR therefore it is",
    "start": "2041860",
    "end": "2046900"
  },
  {
    "text": "external to you so you have an external dependency which means it's gonna be a little bit harder debug and get fixed so",
    "start": "2046900",
    "end": "2054310"
  },
  {
    "text": "this means you have fewer tools available so how do you limp the impact you have an application it's hitting",
    "start": "2054310",
    "end": "2061659"
  },
  {
    "text": "this external dependency how do you get your application in the best state possible when you have no control over",
    "start": "2061660",
    "end": "2067750"
  },
  {
    "text": "what's happening outside of you if there is a saddest page you can go to for that external dependency most third party API",
    "start": "2067750",
    "end": "2075100"
  },
  {
    "text": "providers had them for instance check it you can also if you really want to have",
    "start": "2075100",
    "end": "2080889"
  },
  {
    "text": "fun you can monitor the status page especially if it's something that keeps going down and you want to have an alert",
    "start": "2080890",
    "end": "2087429"
  },
  {
    "text": "set up when the third party goes down you can do that so that you know this",
    "start": "2087430",
    "end": "2092470"
  },
  {
    "text": "third party goes down we're gonna have trouble we should proactively do something about it but if you're",
    "start": "2092470",
    "end": "2098530"
  },
  {
    "text": "monitoring the Status page you're looking at the Status page you don't see anything being reported as wrong you",
    "start": "2098530",
    "end": "2104320"
  },
  {
    "text": "need to escalate it hopefully you have some sort of contact with this third party whether it's an internal person",
    "start": "2104320",
    "end": "2109420"
  },
  {
    "text": "you can go to or an external contact because you're not going to be able to fix it",
    "start": "2109420",
    "end": "2114700"
  },
  {
    "text": "so make some noise but again you still want to keep your system healthy so in",
    "start": "2114700",
    "end": "2120280"
  },
  {
    "text": "addition to telling someone else that there's a problem and that hey please fix this we really really want you to",
    "start": "2120280",
    "end": "2125650"
  },
  {
    "text": "you still need to take some action on your part to keep your system great so what is inside of your control",
    "start": "2125650",
    "end": "2132130"
  },
  {
    "text": "so we don't have logs so we can't check that out we might be able to do requests",
    "start": "2132130",
    "end": "2137140"
  },
  {
    "text": "tracing if you work at a big company that has a request pricing every a you should be able to go into the system and",
    "start": "2137140",
    "end": "2143200"
  },
  {
    "text": "see if it's the system you're hitting or maybe it's three services down the line that's actually having problem I've seen",
    "start": "2143200",
    "end": "2150430"
  },
  {
    "text": "in large companies sometimes one request will cause things to fan out and hit dozens of other services so if any one",
    "start": "2150430",
    "end": "2157150"
  },
  {
    "text": "of those dozens of services fail you're gonna get a failure so it's useful for you to figure out what's going on",
    "start": "2157150",
    "end": "2162820"
  },
  {
    "text": "next to down the pipeline from where you are you can also circuit break of course circuit breakers are one of",
    "start": "2162820",
    "end": "2169930"
  },
  {
    "text": "the best tools that you have in your arsenal for making your service resilient so you can of course degrade",
    "start": "2169930",
    "end": "2177369"
  },
  {
    "text": "gracefully don't just like limit don't just say like everything's down we can't do anything do as much as you can to",
    "start": "2177369",
    "end": "2184660"
  },
  {
    "text": "keep as much as you can working but sometimes your infrastructure fails who",
    "start": "2184660",
    "end": "2192160"
  },
  {
    "text": "remembers the s3 outage in 2017 oh yeah a bunch of hands everything broke who",
    "start": "2192160",
    "end": "2200530"
  },
  {
    "text": "here was monitoring the AWS s3 Status page oh there's hands that's so great I'm so",
    "start": "2200530",
    "end": "2208240"
  },
  {
    "text": "proud of you so sometimes your infrastructure breaks and hopefully you",
    "start": "2208240",
    "end": "2214900"
  },
  {
    "text": "have things set up to mitigate that but I know a lot of people especially when",
    "start": "2214900",
    "end": "2220359"
  },
  {
    "text": "they're just getting started with especially cloud technologies they're like yeah we'll just save it to s3 it's fine it always succeeds it might not so",
    "start": "2220359",
    "end": "2228430"
  },
  {
    "text": "you need to take steps in your application between error handling and then circle break as much as you",
    "start": "2228430",
    "end": "2233920"
  },
  {
    "text": "possible as much as you possibly can to keep your applications into a known state so to recap with debugging your",
    "start": "2233920",
    "end": "2245710"
  },
  {
    "text": "servers for internal applications aka things you can deploy you have source",
    "start": "2245710",
    "end": "2251080"
  },
  {
    "text": "code to you can see logs of log trace circuit break for external applications",
    "start": "2251080",
    "end": "2257710"
  },
  {
    "text": "remember this is anything you cannot deploy I don't care if the person sits right next to you",
    "start": "2257710",
    "end": "2263140"
  },
  {
    "text": "will likely approve and merge your PR within the hour it is still an external dependency because what if that person",
    "start": "2263140",
    "end": "2268540"
  },
  {
    "text": "just went on maternity or paternity leave for three months who do you talk to that you trace and circuit break",
    "start": "2268540",
    "end": "2275070"
  },
  {
    "text": "so throughout talking about all of these different buckets there's one thing that",
    "start": "2275070",
    "end": "2281170"
  },
  {
    "text": "they all really have in common there's one thing that you've seen me kind of skirt around talking about over and over",
    "start": "2281170",
    "end": "2287830"
  },
  {
    "text": "again and that's a visibility when you're working in these really large distributed systems it's a lot harder to",
    "start": "2287830",
    "end": "2296140"
  },
  {
    "text": "see what's going on and you can observe what you don't see so a lot of making",
    "start": "2296140",
    "end": "2302350"
  },
  {
    "text": "micro-services successful is gaining insight into them and actually seeing what's going on and this is not free",
    "start": "2302350",
    "end": "2309310"
  },
  {
    "text": "this is something that you actually have to work on this is pieces of",
    "start": "2309310",
    "end": "2314320"
  },
  {
    "text": "functionality and capabilities and tools and libraries that you have to build so",
    "start": "2314320",
    "end": "2319600"
  },
  {
    "text": "you can move forward and move fast and grow so to recap if you want to add visibility to your applications you need",
    "start": "2319600",
    "end": "2327010"
  },
  {
    "text": "standardized health checks circuit breakers logging alerting request",
    "start": "2327010",
    "end": "2333130"
  },
  {
    "text": "tracing and being able to gracefully shutdown for your infrastructure to get",
    "start": "2333130",
    "end": "2338350"
  },
  {
    "text": "that visibility you need to use health checks and make sure that you're actually using them not just like yeah",
    "start": "2338350",
    "end": "2344230"
  },
  {
    "text": "everything's okay the health check returned 200 we didn't check the contents don't do that actually check the contents because the",
    "start": "2344230",
    "end": "2350290"
  },
  {
    "text": "health check can return 200 but what if the database hasn't connected I've seen it happen you laughs I've seen that",
    "start": "2350290",
    "end": "2357730"
  },
  {
    "text": "happen use your circuit breakers have pieces of infrastructure that do service discovery and load balancing have a",
    "start": "2357730",
    "end": "2364780"
  },
  {
    "text": "place for you log we aggregate your logs and it's easy to see the logs from one specific server log aggregation does not",
    "start": "2364780",
    "end": "2372130"
  },
  {
    "text": "mean all of the logs from all of the hundreds of docker containers go in one place and then you have no idea what's going on automate your deployments and",
    "start": "2372130",
    "end": "2379690"
  },
  {
    "text": "your roll backs and have dashboards have so so so many dashboards we are visual",
    "start": "2379690",
    "end": "2386530"
  },
  {
    "text": "beings we like seeing pretty colors and dots and lines give them to us and again",
    "start": "2386530",
    "end": "2392530"
  },
  {
    "text": "all of this is about gathering information to create confidence that your system is",
    "start": "2392530",
    "end": "2397550"
  },
  {
    "text": "healthy you want to create an eco screening an eco system for micro services is totally doable it requires a",
    "start": "2397550",
    "end": "2404870"
  },
  {
    "text": "lot more metrics it requires smarter infrastructure and I'd like to end with a quote from the",
    "start": "2404870",
    "end": "2411860"
  },
  {
    "text": "cloud native infrastructure book by Chris Nova and Justin garrison yeah",
    "start": "2411860",
    "end": "2417700"
  },
  {
    "text": "infrastructure won't evolve on its own people need to change their behavior and fundamentally think of what it takes to",
    "start": "2417700",
    "end": "2424190"
  },
  {
    "text": "run an application in a different way so thank you I hope you all go build",
    "start": "2424190",
    "end": "2429290"
  },
  {
    "text": "software to support a healthy ecosystem thank you [Applause]",
    "start": "2429290",
    "end": "2436219"
  }
]