[
  {
    "text": "if you're the newcomer we've got the kind of the standard thing here we've got a a bit.ly URL which has a zip",
    "start": "15519",
    "end": "23080"
  },
  {
    "text": "file and if you get that and download it unpack it and start your notebook server",
    "start": "23199",
    "end": "28320"
  },
  {
    "text": "from there you can all the uh the stuff we've done here okay so you need to once",
    "start": "28320",
    "end": "33360"
  },
  {
    "text": "you've got them you need to go into that directory so I'm going to do that I'm going to go and do this along with you",
    "start": "33360",
    "end": "41360"
  },
  {
    "text": "basically so I'm here and I unzi that MPL this",
    "start": "41920",
    "end": "48399"
  },
  {
    "text": "looks to be needs to be a little bit bigger doesn't it something like",
    "start": "48399",
    "end": "54800"
  },
  {
    "text": "that oh my is that okay or maybe a little bigger still so if you go into the",
    "start": "54800",
    "end": "61199"
  },
  {
    "text": "MPL Workshop directory do one thing",
    "start": "61199",
    "end": "66960"
  },
  {
    "text": "here going to kill my notebook so here we are so you want to start the IPython",
    "start": "66960",
    "end": "74159"
  },
  {
    "text": "notebook and then you want to start it with pylab mode and there are two",
    "start": "76960",
    "end": "82000"
  },
  {
    "text": "options we're going to actually use both today one is called inline and the other is where you the figures will pop out of",
    "start": "82000",
    "end": "87400"
  },
  {
    "text": "the web browser because we want to do some stuff with interaction so we're gonna have an inline mode but we'll start off in inline mode which means",
    "start": "87400",
    "end": "92960"
  },
  {
    "text": "anything we generate in the browser will be popped in I tend to use this other option which is no browser because I",
    "start": "92960",
    "end": "99439"
  },
  {
    "text": "don't like it popping up Windows for me I'd rather just type in the URL myself or copy paste it so once you've",
    "start": "99439",
    "end": "107079"
  },
  {
    "text": "got that that will start your notebook server currently has to be started in",
    "start": "107079",
    "end": "112600"
  },
  {
    "text": "the directory where the IPI notebooks are but over time they're going to get a file system navigation built into it so",
    "start": "112600",
    "end": "119280"
  },
  {
    "text": "I mean they're just work as hard as they can basically um and uh so all of that will be coming",
    "start": "119280",
    "end": "124520"
  },
  {
    "text": "and I we had a long meeting last night where they were talking about where they're going and they're going to try to have GitHub integration so you can",
    "start": "124520",
    "end": "130879"
  },
  {
    "text": "keep your projects on GitHub but pull them into notebooks remotely and I I think they'll be doing a lot of interesting stuff everybody here I",
    "start": "130879",
    "end": "137280"
  },
  {
    "text": "assume has used matplot lib number of times that's why we're in the advanced you've been to the website checked out",
    "start": "137280",
    "end": "144440"
  },
  {
    "text": "the gallery basically know that you can sort of click on a plot type and see the code",
    "start": "144440",
    "end": "149599"
  },
  {
    "text": "that generated it so you know we have hundreds of plotting functions that are",
    "start": "149599",
    "end": "155400"
  },
  {
    "text": "specialized for doing certain things spectrograms power spectral densities error bars histograms stacked bar charts",
    "start": "155400",
    "end": "162959"
  },
  {
    "text": "and you know every scientist or engineer has a different kind of thing they like to",
    "start": "162959",
    "end": "168040"
  },
  {
    "text": "do um so I'm not going to concentrate a lot on those because you know what's really important to one person is",
    "start": "168040",
    "end": "173080"
  },
  {
    "text": "totally useless to another one I mean I could go my whole life and never make a bar chart basically but somebody else",
    "start": "173080",
    "end": "178519"
  },
  {
    "text": "might make them every single day so instead of focusing on those kinds of things I'm going to try to focus on",
    "start": "178519",
    "end": "184080"
  },
  {
    "text": "things that should be somewhat generic to all classes of users and that's sort of customization configuration",
    "start": "184080",
    "end": "191519"
  },
  {
    "text": "customizing the look and feel of things um doing event handling you know interacting with your figures and then",
    "start": "191519",
    "end": "198440"
  },
  {
    "text": "I'm going to just you know finish up with a few TP trips few tips and tricks like stuff that I do a lot in my plots",
    "start": "198440",
    "end": "205080"
  },
  {
    "text": "that I think you know add a lot of visual appeal or functionality and so you know I'll finish up with some",
    "start": "205080",
    "end": "211040"
  },
  {
    "text": "concrete examples on on some things that maybe are slightly underused use cases but there's been a t ton of new stuff",
    "start": "211040",
    "end": "217519"
  },
  {
    "text": "contributed these sank diagrams for you know visualizing oh that's interesting I'll",
    "start": "217519",
    "end": "224920"
  },
  {
    "text": "try to stay off the web okay so the first thing I want to do is talk about this uh notebook called",
    "start": "224920",
    "end": "231640"
  },
  {
    "text": "customizing axes so you can open that up in V2",
    "start": "231640",
    "end": "237439"
  },
  {
    "text": "interesting let me just refresh I I I restarted my kernel I think that's all that's going on",
    "start": "237439",
    "end": "243439"
  },
  {
    "text": "here or else it's the first law of demos which is demos always",
    "start": "243439",
    "end": "250000"
  },
  {
    "text": "fail most people getting that open okay",
    "start": "253879",
    "end": "258959"
  },
  {
    "text": "so how many of you have seen a plot that kind of looks vaguely like this in the sense that you got a whole bunch of tick",
    "start": "258959",
    "end": "264520"
  },
  {
    "text": "labels that are munged together in overlapping form",
    "start": "264520",
    "end": "270840"
  },
  {
    "text": "this happens all the time in matplot lib because you know part of it's our fault for not working hard enough to avoid it",
    "start": "270840",
    "end": "277280"
  },
  {
    "text": "but part of it is some part of the design philosophy that we have which is",
    "start": "277280",
    "end": "283039"
  },
  {
    "text": "I've never liked using Microsoft Windows because I find the operating system tries to help me too much I don't really",
    "start": "283039",
    "end": "288479"
  },
  {
    "text": "want the computer to help me I want it to do what I tell it to do and so I kind of designed matplot lib in that way I I",
    "start": "288479",
    "end": "294280"
  },
  {
    "text": "don't want the layout to be very intelligent I just want everything to go in the place where you tell it to go",
    "start": "294280",
    "end": "299840"
  },
  {
    "text": "then I want to give you easy hooks for fixing it and making it look the way you want so by default and and these are",
    "start": "299840",
    "end": "306880"
  },
  {
    "text": "things will improve a little bit but a lot of times you get these things where you know you your ticks are too wide or",
    "start": "306880",
    "end": "311919"
  },
  {
    "text": "they overlap and you get up this kind of smushed case here so what I've done is I've used this new subplots command",
    "start": "311919",
    "end": "318400"
  },
  {
    "text": "which generates a 3X3 grid of of axes and um how many of you have used this command it's relatively new I mean",
    "start": "318400",
    "end": "325600"
  },
  {
    "text": "relatively being like two years old or something like that Fernando perz uh",
    "start": "325600",
    "end": "331000"
  },
  {
    "text": "wrote this because he got tired of always saying give me a figure and then give me a subplot and then give me another subplot and what this does is it",
    "start": "331000",
    "end": "338800"
  },
  {
    "text": "creates a grid of axes that have numpy like syntax so once we create that thing",
    "start": "338800",
    "end": "345680"
  },
  {
    "text": "I'm going to create a new cell contrl c b for",
    "start": "345680",
    "end": "353240"
  },
  {
    "text": "below control m control MB for below and control M A for above now there two",
    "start": "353240",
    "end": "359919"
  },
  {
    "text": "other things that BNA mean yes before and after with",
    "start": "359919",
    "end": "365160"
  },
  {
    "text": "you is it is it before or after or is it above or below kills me every time and Below okay so you maximize your",
    "start": "365160",
    "end": "372720"
  },
  {
    "text": "absolutely yeah thank you and I'll turn off the XX",
    "start": "372720",
    "end": "377599"
  },
  {
    "text": "stuff okay so what this axes is is it is",
    "start": "379639",
    "end": "385400"
  },
  {
    "text": "a it's an array and it's a it's just like with nump it's a 2 it's a 3X3 grid",
    "start": "385400",
    "end": "390720"
  },
  {
    "text": "of what are called matplot lib axes objects and so the axes is the central object in matplot lib it's one of these",
    "start": "390720",
    "end": "397240"
  },
  {
    "text": "areas that you draw into and the figure is this entire thing so those are kind",
    "start": "397240",
    "end": "402520"
  },
  {
    "text": "of the two fundamental objects in map plot lib the figure contains multiple axes and the figure instance here is a",
    "start": "402520",
    "end": "409880"
  },
  {
    "text": "map plot lib figure oh that's interesting it has a display hook and it stores that list of axes",
    "start": "409880",
    "end": "416759"
  },
  {
    "text": "here as a list of axes so that's just some OB that created in there and you can do numpy style indexing into these",
    "start": "416759",
    "end": "423520"
  },
  {
    "text": "things so you can have that subplot or you can refer to the z00",
    "start": "423520",
    "end": "429720"
  },
  {
    "text": "subplot I haven't mistyped it okay so the oh no I guess it's just linear it's",
    "start": "429720",
    "end": "435319"
  },
  {
    "text": "not that's that's surprising to me in the ax big a you just call it axes",
    "start": "435319",
    "end": "442360"
  },
  {
    "text": "oh that's the problem I'm in the wrong place yeah see I knew I needed you here",
    "start": "442360",
    "end": "447639"
  },
  {
    "text": "Paul yeah so this axis object yeah the axes that the figure stores is a list but this is actually an array object",
    "start": "447639",
    "end": "454800"
  },
  {
    "text": "that will you can index into it just like a numpy array okay so it's a this is a 3X3 array of axes in fact it is a",
    "start": "454800",
    "end": "460919"
  },
  {
    "text": "numpy array um and we've plotted this thing and we've got the typical map plot Li problem when you have too much on",
    "start": "460919",
    "end": "466599"
  },
  {
    "text": "your screen that we've got a lot of overlapping tick labels okay so the",
    "start": "466599",
    "end": "472639"
  },
  {
    "text": "First Command that is really useful here to help with this problem are these share x equals true and share x equals",
    "start": "472639",
    "end": "479720"
  },
  {
    "text": "share y equals true how many of you have used the shared axes in map plot Leb okay this to me is the killer essential",
    "start": "479720",
    "end": "488319"
  },
  {
    "text": "thing to use and I use it every day and if you know if there's one thing that you're going to walk away from here",
    "start": "488319",
    "end": "494240"
  },
  {
    "text": "today is I would know how to use these things and I'll show you what they do I'm going to have to pop out to the terminal though um to make it because",
    "start": "494240",
    "end": "502240"
  },
  {
    "text": "it's it's an interactive feature is that is where it's most mostly useful so here I'm in an IPython",
    "start": "502240",
    "end": "508440"
  },
  {
    "text": "terminal and so I'm going to create just some random",
    "start": "508440",
    "end": "514120"
  },
  {
    "text": "numbers and I'm going to create two",
    "start": "517399",
    "end": "522440"
  },
  {
    "text": "subplots so I'm first I'm going to create them this way without the sharex um convention and then I have to plot my",
    "start": "530440",
    "end": "538440"
  },
  {
    "text": "data",
    "start": "538440",
    "end": "541440"
  },
  {
    "text": "okay and I have to draw this because I'm not using pylab commands pylab commands",
    "start": "550920",
    "end": "556240"
  },
  {
    "text": "trigger a draw I'm using the Met plot Li API here and because I'm calling plot",
    "start": "556240",
    "end": "561399"
  },
  {
    "text": "methods directly on the axes okay so all Pi most of you use pip plot all pip plot",
    "start": "561399",
    "end": "567360"
  },
  {
    "text": "does is it forwards methods to our API very thin wrapper around our API so",
    "start": "567360",
    "end": "572519"
  },
  {
    "text": "every pip plot method forwards a call to an axis pretty much and so these axes methods have plot commands or mow",
    "start": "572519",
    "end": "579040"
  },
  {
    "text": "commands or you know set X label set set title so once I've gotten this thing",
    "start": "579040",
    "end": "584640"
  },
  {
    "text": "done this is our standard navigation window and you can do the standard thing",
    "start": "584640",
    "end": "590120"
  },
  {
    "text": "pan Zoom whatever so that's useful what I like about the shared X is I'm going",
    "start": "590120",
    "end": "596360"
  },
  {
    "text": "to now recreate the same figure but I'm going to tell it the X",
    "start": "596360",
    "end": "601600"
  },
  {
    "text": "labels are shared so both of these axes will share the same X label same plot",
    "start": "601600",
    "end": "607200"
  },
  {
    "text": "and now I just have to up Arrow to",
    "start": "607200",
    "end": "610959"
  },
  {
    "text": "regenerate okay so what this command tells us is any view limit changes that",
    "start": "616880",
    "end": "622720"
  },
  {
    "text": "happen on the xaxis on one axis should happen on the other so they become synchronized together and it also did",
    "start": "622720",
    "end": "629760"
  },
  {
    "text": "something useful here which it knows that these are the same",
    "start": "629760",
    "end": "635680"
  },
  {
    "text": "axes now so it doesn't bother to draw these ticks so it's a little bit Smart in that way that it says if you're going",
    "start": "635680",
    "end": "641240"
  },
  {
    "text": "to have the same axis limits you're not going to need the tick labels twice so already if you're building building a",
    "start": "641240",
    "end": "646680"
  },
  {
    "text": "Big Grid where everybody's on the same viewport turning this feature on will get rid of a lot of redundant tick",
    "start": "646680",
    "end": "651959"
  },
  {
    "text": "labeling so what I like this is now I can go here and when I zoom in one I can zoom in the other and if I zoom to",
    "start": "651959",
    "end": "659440"
  },
  {
    "text": "reckon this one the other one zooms to the same x-axis but if I move this thing up and",
    "start": "659440",
    "end": "668240"
  },
  {
    "text": "down the other one doesn't change because the y- axis is not shared so you can either selectively share the x-axis",
    "start": "668240",
    "end": "674120"
  },
  {
    "text": "or selectively share the Y AIS or both so that's a very useful little thing if",
    "start": "674120",
    "end": "681079"
  },
  {
    "text": "you if you are if you're subplot user it looks a little bit different I'm",
    "start": "681079",
    "end": "687639"
  },
  {
    "text": "just going to show you what that looks like this is the way many people will be",
    "start": "687639",
    "end": "694600"
  },
  {
    "text": "using subplot command you can turn on the same feature but you have to manually say share x",
    "start": "694600",
    "end": "702040"
  },
  {
    "text": "equals X1 because it needs to know who to share with the subplots command builds the",
    "start": "702040",
    "end": "707800"
  },
  {
    "text": "grid for you so it knows who who you're sharing with if you're manually creating your subplots you've got to tell it who",
    "start": "707800",
    "end": "713639"
  },
  {
    "text": "you want to share with so it's a slightly different syntax subplots equals true in the in the subplots",
    "start": "713639",
    "end": "719000"
  },
  {
    "text": "command b or or share x equals specify the axes okay so that's the one thing",
    "start": "719000",
    "end": "725839"
  },
  {
    "text": "I'd like you to to walk away from here today is is that I think you'll find that useful go ahead okay so we're back to customizing this little axis object",
    "start": "725839",
    "end": "732360"
  },
  {
    "text": "here so right away on a grid just turning that feature of sharing the X and Y off gets rid of a lot of that",
    "start": "732360",
    "end": "738519"
  },
  {
    "text": "redundant tick labeling so we're we're partly there in avoiding our overlapping tick label problem so we've got you know",
    "start": "738519",
    "end": "746000"
  },
  {
    "text": "nice x-axis ticks and nice y- AIS ticks but you know not all data in the world",
    "start": "746000",
    "end": "751399"
  },
  {
    "text": "ranges between 0 and 9 on the x- axis and and 0 to one on the Y",
    "start": "751399",
    "end": "756880"
  },
  {
    "text": "AIS so here I'm going to make my data a little bit",
    "start": "756880",
    "end": "763040"
  },
  {
    "text": "uglier so basically I'm plotting the same data now but I'm I'm raising my X data to some power of I and I'm",
    "start": "770880",
    "end": "777920"
  },
  {
    "text": "multiplying my Y data by some um by I + one and so now I'm I'm back into the",
    "start": "777920",
    "end": "784440"
  },
  {
    "text": "same problem that I've had before these things are long they're overlapping um and we have to fix this",
    "start": "784440",
    "end": "791760"
  },
  {
    "text": "problem in two separate ways the first one is with this tight layout that that has been written and",
    "start": "791760",
    "end": "799079"
  },
  {
    "text": "this is where I said you know I want it to do what I tell it to do but I want to give you an easy hook to autod do things",
    "start": "799079",
    "end": "805519"
  },
  {
    "text": "when you want them so this tight layout option will basically solve part of the problem",
    "start": "805519",
    "end": "813240"
  },
  {
    "text": "for us what it does is it makes sure that all of the text from one axis will",
    "start": "813240",
    "end": "820480"
  },
  {
    "text": "be displayed properly so it makes sure that this guy doesn't overlap with this guy and that this guy doesn't overlap",
    "start": "820480",
    "end": "826440"
  },
  {
    "text": "with this guy it will resize all the dimensionalities of the subplots to prevent that overlap for you um but it",
    "start": "826440",
    "end": "834040"
  },
  {
    "text": "doesn't solve this problem for us it doesn't solve this xtick label problem and for that we're going to have to be a",
    "start": "834040",
    "end": "839160"
  },
  {
    "text": "little bit smarter but this tight layout is really nice um just for generating figures that that have a reasonably nice",
    "start": "839160",
    "end": "845519"
  },
  {
    "text": "automatic layout um so we're going to try to solve the rest of this problem now so here I couldn't use the share X",
    "start": "845519",
    "end": "852360"
  },
  {
    "text": "and share y because I really have different scales right my y- Axis are are are different scales so I've got to",
    "start": "852360",
    "end": "859600"
  },
  {
    "text": "I'm not I don't have that luxury of solving that problem",
    "start": "859600",
    "end": "864120"
  },
  {
    "text": "here so to deal with this problem there's there's basically two things we",
    "start": "864880",
    "end": "870040"
  },
  {
    "text": "want to do we want to use fewer ticks there's just too many of these things um",
    "start": "870040",
    "end": "876240"
  },
  {
    "text": "but we don't want to you know you've probably been able to call set X tick like give me my ticks here but that's",
    "start": "876240",
    "end": "882639"
  },
  {
    "text": "not a good case generally because you got to figure out where you want them and you kind of want you don't want to have to manually figure out where you",
    "start": "882639",
    "end": "888399"
  },
  {
    "text": "want them every time you kind of want it to happen more automatically and so what what matplot lip has under the hood is",
    "start": "888399",
    "end": "894519"
  },
  {
    "text": "something called a tick locator and basically this is an it's a extensible c customizable class that you can pass in",
    "start": "894519",
    "end": "902600"
  },
  {
    "text": "um we have several internally or you can write your own that will tell you where to lay ticks out um but our tick locator",
    "start": "902600",
    "end": "909959"
  },
  {
    "text": "the one we use in general is called the max in locator um which is I've got a reference",
    "start": "909959",
    "end": "915120"
  },
  {
    "text": "to it here in the notebook and basically that says give me at most in ticks at",
    "start": "915120",
    "end": "920759"
  },
  {
    "text": "most three at most four at most 10 and the defaults are pretty high so I think",
    "start": "920759",
    "end": "926079"
  },
  {
    "text": "what what we can do with the subplots command to improve it is we should figure out how big your",
    "start": "926079",
    "end": "931839"
  },
  {
    "text": "grid is and the bigger your grid is set that number to be smaller by default so if you're if you're if you're a 1 by one",
    "start": "931839",
    "end": "938360"
  },
  {
    "text": "you might have 10 ticks but if you're 5 by five you might only want one or two or three ticks per subplot so what but",
    "start": "938360",
    "end": "945480"
  },
  {
    "text": "we expose that that that Max in locator to you fairly conveniently so what we're",
    "start": "945480",
    "end": "950880"
  },
  {
    "text": "going to basically do is say hey I've got a 3X3 grid here I'm probably only going to want three four five ticks per",
    "start": "950880",
    "end": "956880"
  },
  {
    "text": "X and per y and so the function that we use there is",
    "start": "956880",
    "end": "962639"
  },
  {
    "text": "called ax. locator prams again the there are two parts that",
    "start": "962639",
    "end": "967759"
  },
  {
    "text": "determine how ticks get drawn in matplot lib there's a locator and there's a formatter the locator tells you where to",
    "start": "967759",
    "end": "973240"
  },
  {
    "text": "put them the formatter tells you how to represent that string so this this this",
    "start": "973240",
    "end": "979000"
  },
  {
    "text": "locator params controls the default ticking the default tick locating in",
    "start": "979000",
    "end": "984680"
  },
  {
    "text": "matplot lib and this is the line everything else is the same here we're adding one line which basically says for both the X and",
    "start": "984680",
    "end": "992279"
  },
  {
    "text": "the y axis you could either do it just for the X or just for the Y but for both the X and the y axis I really only want",
    "start": "992279",
    "end": "998240"
  },
  {
    "text": "four bins which is up to five ticks three bins is up to four because the bins are the spaces between the tick so",
    "start": "998240",
    "end": "1005199"
  },
  {
    "text": "I want up to four bins and this this Auto layout call is in the",
    "start": "1005199",
    "end": "1011000"
  },
  {
    "text": "wrong place it needs to be called",
    "start": "1011000",
    "end": "1016040"
  },
  {
    "text": "once this tight layout okay so when we run",
    "start": "1016040",
    "end": "1021680"
  },
  {
    "text": "this we're getting closer now because instead of having nine or 10",
    "start": "1021680",
    "end": "1026760"
  },
  {
    "text": "on each axis we have five to a few so the map is still trying to help you and pick where they should be but now we've",
    "start": "1026760",
    "end": "1033480"
  },
  {
    "text": "informed it just don't use so many so the last piece here is what's",
    "start": "1033480",
    "end": "1039160"
  },
  {
    "text": "giving us trouble are these guys and these are kind of like in order of 1",
    "start": "1039160",
    "end": "1046160"
  },
  {
    "text": "e to the fourth these are 10,000 you know we seem to be handling the small numbers less than a thousand okay and",
    "start": "1046160",
    "end": "1053039"
  },
  {
    "text": "we're handling the big numbers okay here too any you know so this is what's",
    "start": "1053039",
    "end": "1059280"
  },
  {
    "text": "called the formatter so we just addressed the locator the locator is the guy who tells you where to put the tick",
    "start": "1059280",
    "end": "1065039"
  },
  {
    "text": "now we're dealing with an issue of the formatter which is how do we represent those locations as strings and that is",
    "start": "1065039",
    "end": "1071000"
  },
  {
    "text": "all that's also configurable and our default formatter is pretty smart but",
    "start": "1071000",
    "end": "1076520"
  },
  {
    "text": "not quite smart enough every time so it knows that once you start getting really big it needs to go to exponential",
    "start": "1076520",
    "end": "1082159"
  },
  {
    "text": "notation and once you're really small you don't what it doesn't know is in this intermediate range how close",
    "start": "1082159",
    "end": "1088679"
  },
  {
    "text": "everybody is together so basically it has a it has a limit at which it goes into exponential notation and that",
    "start": "1088679",
    "end": "1095919"
  },
  {
    "text": "default limit is 1 E to minus 7 1 E to 7",
    "start": "1095919",
    "end": "1101360"
  },
  {
    "text": "so all we have to do is tell it maybe over a th at 1 E3 I want you to kick in",
    "start": "1101360",
    "end": "1106640"
  },
  {
    "text": "so the function for controlling the default formatter",
    "start": "1106640",
    "end": "1111360"
  },
  {
    "text": "here is the tick label format so now we've got one helper function to control",
    "start": "1112520",
    "end": "1118200"
  },
  {
    "text": "the locator and one helper function to control the formatter and basically what we want to tell it is use scientific",
    "start": "1118200",
    "end": "1126320"
  },
  {
    "text": "limits at 10 the",
    "start": "1126320",
    "end": "1129960"
  },
  {
    "text": "3 and so now these kick in at a lower resolution and we get at least something",
    "start": "1132080",
    "end": "1138880"
  },
  {
    "text": "that that's usable so those are the kind of the important hooks for you to to",
    "start": "1138880",
    "end": "1144039"
  },
  {
    "text": "make these plots and I think Paul you could do a pull request",
    "start": "1144039",
    "end": "1149919"
  },
  {
    "text": "to the subplots command right which detects the grid geometry and basically sets these two",
    "start": "1149919",
    "end": "1156600"
  },
  {
    "text": "parameters intelligently based on the grid geometry okay any questions at this",
    "start": "1156600",
    "end": "1161919"
  },
  {
    "text": "point yep go ahead to how to configure that that itself like what the format string is",
    "start": "1161919",
    "end": "1167880"
  },
  {
    "text": "for that thing I'm gonna We we'll find out okay",
    "start": "1167880",
    "end": "1173080"
  },
  {
    "text": "so let's take a look I I off the top of my head I don't know the answer to that but I'll show you how to kind of dig",
    "start": "1173080",
    "end": "1178320"
  },
  {
    "text": "into there and we'll take a look and see how to find out so I'm going to create a new cell below and so I want to get get",
    "start": "1178320",
    "end": "1184400"
  },
  {
    "text": "my hands on that formatter basically and where it lives we'll look at the x-axis formatter",
    "start": "1184400",
    "end": "1191280"
  },
  {
    "text": "so first thing I I've got this axe that's defined from my session above so that's just the most recent axis I was",
    "start": "1191280",
    "end": "1197720"
  },
  {
    "text": "working on and then there's this function called get major formatter and that just Returns the",
    "start": "1197720",
    "end": "1206039"
  },
  {
    "text": "instance that does the work okay so the x-axis has a major formatter and a minor",
    "start": "1206039",
    "end": "1211240"
  },
  {
    "text": "formatter Majors the major grid lines minor the minor grid lines and then the y- axis has the same so this is the guy",
    "start": "1211240",
    "end": "1217440"
  },
  {
    "text": "who controls that representation um so I just I'm going to just inspect",
    "start": "1217440",
    "end": "1223559"
  },
  {
    "text": "that for a second and see what's there um this okay I want to see what this is the",
    "start": "1223559",
    "end": "1231440"
  },
  {
    "text": "format it's a string",
    "start": "1232039",
    "end": "1237400"
  },
  {
    "text": "format oh you printed it okay so that's the guy right there who seems to be",
    "start": "1240919",
    "end": "1246720"
  },
  {
    "text": "doing um that's for the but I that's",
    "start": "1246720",
    "end": "1252880"
  },
  {
    "text": "interesting because that doesn't seem to be what what's being used on the x-axis is it I mean those are not 1.0",
    "start": "1252880",
    "end": "1259520"
  },
  {
    "text": "for I'm kind of a go to the source code kind kind of guy typically so I'm just",
    "start": "1259520",
    "end": "1265240"
  },
  {
    "text": "going to pull this",
    "start": "1265240",
    "end": "1267919"
  },
  {
    "text": "up sure",
    "start": "1271960",
    "end": "1278320"
  },
  {
    "text": "yep so the cleanest way would be this guy if this if that's what you're looking at right there is use math text",
    "start": "1280039",
    "end": "1286480"
  },
  {
    "text": "equals true or false so let's just see how that field propagates down into our",
    "start": "1286480",
    "end": "1292840"
  },
  {
    "text": "code that sets it internally I don't know if we expose that to the",
    "start": "1292840",
    "end": "1300279"
  },
  {
    "text": "user set scientific set Power limits format data short format data",
    "start": "1300279",
    "end": "1309840"
  },
  {
    "text": "long to whether whether or not to use that or not so you can change your well I'm going to do something that we",
    "start": "1314400",
    "end": "1319960"
  },
  {
    "text": "shouldn't do but I'm just going to try it to see if it works is I'm going to set that private variable so I'm going to say",
    "start": "1319960",
    "end": "1326960"
  },
  {
    "text": "format I just want to see if we can hook into that that's why it's python right we're",
    "start": "1326960",
    "end": "1333200"
  },
  {
    "text": "all adults",
    "start": "1333200",
    "end": "1335720"
  },
  {
    "text": "here y so we should should probably make that expose that a little bit better to",
    "start": "1345559",
    "end": "1353320"
  },
  {
    "text": "you but but one of the comments was you could you can expose it using the config file which we'll be talking about in a",
    "start": "1354159",
    "end": "1359320"
  },
  {
    "text": "little bit but you may not want it to be true all the time but I guess the point is we we do have access to those RC prams in code here so that's the other",
    "start": "1359320",
    "end": "1366039"
  },
  {
    "text": "way to do it would be exactly so so does anybody can does",
    "start": "1366039",
    "end": "1372320"
  },
  {
    "text": "anybody know the name of it okay what it",
    "start": "1372320",
    "end": "1379440"
  },
  {
    "text": "oh it does use that like this uh no it's not Ed Tech",
    "start": "1379440",
    "end": "1385880"
  },
  {
    "text": "that I want because I'd rather use M plot Li internal math tech rendering is that is that what it uses for that for",
    "start": "1385880",
    "end": "1393200"
  },
  {
    "text": "that value in the are you looking in the code yeah uh it only uses that value",
    "start": "1393200",
    "end": "1401919"
  },
  {
    "text": "okay Sor yeah yeah I don't think the rcam is the only that's the only one that is used that's we see mat lip has",
    "start": "1402799",
    "end": "1410799"
  },
  {
    "text": "two ways of rendering mathematical text one is our internal mathematical rendering engine one is the external latch engine here it's calling out to",
    "start": "1410799",
    "end": "1417480"
  },
  {
    "text": "the latch engine and it's not rendering right on my system it maybe something to do with the the down sampling I'd have",
    "start": "1417480",
    "end": "1422559"
  },
  {
    "text": "to look into that we should be using our internal math rendering engine for that kind of",
    "start": "1422559",
    "end": "1428760"
  },
  {
    "text": "thing okay so you you can hook into these things but there there should be better ways of of hooking into some of",
    "start": "1428960",
    "end": "1434880"
  },
  {
    "text": "that um you could create your own instance and set it that's the other thing is you can",
    "start": "1434880",
    "end": "1440919"
  },
  {
    "text": "say ticker Dot and then just set use Tech equals to that's I mean that's the right way to do it",
    "start": "1440919",
    "end": "1446960"
  },
  {
    "text": "probably um so it would be right here ax.",
    "start": "1446960",
    "end": "1453720"
  },
  {
    "text": "xaxis do set",
    "start": "1453720",
    "end": "1457679"
  },
  {
    "text": "major formatter ticker dot",
    "start": "1458919",
    "end": "1464760"
  },
  {
    "text": "scaler formatter use Tech equals true was it used Tech I'm trying",
    "start": "1464760",
    "end": "1473720"
  },
  {
    "text": "to I'll take I'll take a look at it in a",
    "start": "1473720",
    "end": "1478880"
  },
  {
    "text": "second give me one second camel case",
    "start": "1484520",
    "end": "1494240"
  },
  {
    "text": "yeah so you can instantiate this guy",
    "start": "1497320",
    "end": "1502398"
  },
  {
    "text": "yourself text",
    "start": "1505360",
    "end": "1511120"
  },
  {
    "text": "possibly that's a big Trace back oh because the RC params are still",
    "start": "1516679",
    "end": "1523559"
  },
  {
    "text": "set remember we set those RC prams so that's a global setting so I need to unset",
    "start": "1524080",
    "end": "1532158"
  },
  {
    "text": "that who made me go off the reservation how do how do we spell",
    "start": "1542159",
    "end": "1549440"
  },
  {
    "text": "that",
    "start": "1549440",
    "end": "1552440"
  },
  {
    "text": "okay okay so we've turned that back off now we're getting math tech rendering so that's that's sort of the code way you",
    "start": "1556760",
    "end": "1562799"
  },
  {
    "text": "could hook into that process okay um since we were just talking about the RC",
    "start": "1562799",
    "end": "1568000"
  },
  {
    "text": "prams I'm going to jump into your question real quick and his question was if I'm producing en figures in different",
    "start": "1568000",
    "end": "1574000"
  },
  {
    "text": "kinds of environments maybe sometimes for a certain Journal maybe sometimes for interactive scripting maybe",
    "start": "1574000",
    "end": "1579440"
  },
  {
    "text": "sometimes for a user interface and I want to customize the look and feel of those different things how can I do that",
    "start": "1579440",
    "end": "1585559"
  },
  {
    "text": "so I'm going to jump out of the notebook for a second just show you briefly how you would do that um the first place is",
    "start": "1585559",
    "end": "1593120"
  },
  {
    "text": "you need to hook into our um what's called our RC file and the where where you would find that on our website would",
    "start": "1593120",
    "end": "1600399"
  },
  {
    "text": "be in the doc section and one of the easiest way to find it is in the doc section there's a customizing M plot lib",
    "start": "1600399",
    "end": "1607640"
  },
  {
    "text": "section and that tells you yeah okay I have you now Luke",
    "start": "1607640",
    "end": "1614919"
  },
  {
    "text": "Skywalker okay so this is just my local build tree of the docs this tells you um about the",
    "start": "1617240",
    "end": "1623320"
  },
  {
    "text": "map plot Li RC file which is about what we're about to talk about and it's just a simple key value pair file that has",
    "start": "1623320",
    "end": "1628760"
  },
  {
    "text": "the default configurations here earlier we were setting them in code but you can set them in the config file and this is",
    "start": "1628760",
    "end": "1634919"
  },
  {
    "text": "a sample so you can download that file to your system and basically you can either put it in the map plot lib",
    "start": "1634919",
    "end": "1641320"
  },
  {
    "text": "default config directory which ismap plot lib or you can put it in your local",
    "start": "1641320",
    "end": "1646919"
  },
  {
    "text": "directory so m Li will pick it up and uh in your local directory so that's basically how you how you do this um so",
    "start": "1646919",
    "end": "1655159"
  },
  {
    "text": "I'm going to the way this file works is everything is commented out except for the back end so you basically",
    "start": "1655159",
    "end": "1662120"
  },
  {
    "text": "because we we want to have a little bit of flexibility to change these and so",
    "start": "1662120",
    "end": "1667320"
  },
  {
    "text": "it's good if you only uncomment the defaults you want to change so I'm just going to copy this",
    "start": "1667320",
    "end": "1674320"
  },
  {
    "text": "file",
    "start": "1677120",
    "end": "1680120"
  },
  {
    "text": "and throw it into my emac",
    "start": "1684960",
    "end": "1688158"
  },
  {
    "text": "buffer so I'm going to go to the talks Pi data m npl p",
    "start": "1690240",
    "end": "1698919"
  },
  {
    "text": "data and I'm going to make two directories temp one and temp",
    "start": "1699440",
    "end": "1704880"
  },
  {
    "text": "two and I'm going to drop this file called matplot",
    "start": "1704880",
    "end": "1711159"
  },
  {
    "text": "lib into both of those",
    "start": "1712039",
    "end": "1715840"
  },
  {
    "text": "directories so that I'm dropping in temp two and I'm also going to drop it in temp",
    "start": "1719200",
    "end": "1724919"
  },
  {
    "text": "one so this is a large file and basically every almost every aspect of",
    "start": "1724919",
    "end": "1730080"
  },
  {
    "text": "the figure can be controlled here tick size tick length font size font color",
    "start": "1730080",
    "end": "1735399"
  },
  {
    "text": "metallics um the background of the ax so I'm going to do just I'm going to just",
    "start": "1735399",
    "end": "1741399"
  },
  {
    "text": "tweak one thing so that we don't spend a ton of time here I'm going to say the axis face color so the default that's",
    "start": "1741399",
    "end": "1749200"
  },
  {
    "text": "the this is the axis this is this region here that's white by default for",
    "start": "1749200",
    "end": "1754399"
  },
  {
    "text": "publication a I'm going to make it blue and for publication",
    "start": "1754399",
    "end": "1762360"
  },
  {
    "text": "B I'm going to make it red",
    "start": "1762399",
    "end": "1770039"
  },
  {
    "text": "now any code that work that's run test.py thank",
    "start": "1775919",
    "end": "1784000"
  },
  {
    "text": "you I'm going to cheat here because I'm in a big hurry don't try this at home we",
    "start": "1785799",
    "end": "1790840"
  },
  {
    "text": "try to get people using p plot um so I'm going to create the same thing and then",
    "start": "1790840",
    "end": "1796399"
  },
  {
    "text": "I'm going to save this in temp one too okay so now we've got the same script in",
    "start": "1796399",
    "end": "1801799"
  },
  {
    "text": "two different locations basically actually you know we only need one script we just need to run the same",
    "start": "1801799",
    "end": "1806840"
  },
  {
    "text": "script so I'm going to delete it from temp one because the idea is you want one",
    "start": "1806840",
    "end": "1812120"
  },
  {
    "text": "script right so I'm now just going to navigate on the file",
    "start": "1812120",
    "end": "1819480"
  },
  {
    "text": "system temp one so that's where my map plot Li Bar C lives and I'm going to run",
    "start": "1819480",
    "end": "1825120"
  },
  {
    "text": "the script that's in temp 2",
    "start": "1825120",
    "end": "1829960"
  },
  {
    "text": "should be a show at the end",
    "start": "1831200",
    "end": "1834398"
  },
  {
    "text": "huh oh it's the thing is because I commented out the back end I actually have to tell it the back end I want to",
    "start": "1841159",
    "end": "1847000"
  },
  {
    "text": "use so I'm going to by default if the back end isn't set it goes to one of our image back ends so nothing happened okay",
    "start": "1847000",
    "end": "1853559"
  },
  {
    "text": "so that's that's the background there but now if I run the same script",
    "start": "1853559",
    "end": "1859159"
  },
  {
    "text": "from temp two I get red so you can pretty much",
    "start": "1859159",
    "end": "1865279"
  },
  {
    "text": "customize the look and feel of of all these things using that um methodology",
    "start": "1865279",
    "end": "1870399"
  },
  {
    "text": "and how many of you are R users so as part of this um exercise I",
    "start": "1870399",
    "end": "1877720"
  },
  {
    "text": "was looking at some GG plots that Wes mcken was making today and I just wanted to",
    "start": "1877720",
    "end": "1882960"
  },
  {
    "text": "uh see how we would do emulating the r style so here I've",
    "start": "1882960",
    "end": "1890639"
  },
  {
    "text": "just written a little bit of a section of code basically setting my axes face color to be gray and my tick labels to",
    "start": "1890639",
    "end": "1897440"
  },
  {
    "text": "be white and and changing the default spacing between all of these are configured at the RC level if you want",
    "start": "1897440",
    "end": "1904039"
  },
  {
    "text": "I've configured them in code in this example but you know you could set your config file up to look like R if you",
    "start": "1904039",
    "end": "1909080"
  },
  {
    "text": "wanted to we initially set this thing up to look like mat lab because I was writing mat lab emulation mode um but",
    "start": "1909080",
    "end": "1915440"
  },
  {
    "text": "again I think might be nice to expose a little bit of these at a higher level as well for people who want to say give me",
    "start": "1915440",
    "end": "1920720"
  },
  {
    "text": "this config you're saying can we borrow from somebody who's already developed these",
    "start": "1920720",
    "end": "1927080"
  },
  {
    "text": "Styles there's not you know there there hasn't been a a file exchange or people haven't submitted these kind of style",
    "start": "1927799",
    "end": "1934799"
  },
  {
    "text": "files if you will right or or the other option would",
    "start": "1934799",
    "end": "1940159"
  },
  {
    "text": "be in in module code essentially we could have styles which instead of it",
    "start": "1940159",
    "end": "1946919"
  },
  {
    "text": "depends on whether you'd rather make a function call or drop a file right we could have rc. setr style and it just",
    "start": "1946919",
    "end": "1953600"
  },
  {
    "text": "sets all those parameters so you you could call that function in software and then you could actually toggle within a session to go from our style to mat lab",
    "start": "1953600",
    "end": "1960960"
  },
  {
    "text": "style or or some other style but no no one's ever suggested such a thing but we could we could certainly have some entry",
    "start": "1960960",
    "end": "1967720"
  },
  {
    "text": "points to that yeah I um on how that's done so you know you can look and see I",
    "start": "1967720",
    "end": "1973240"
  },
  {
    "text": "don't think we need to go through everything that's in here but basically these are just you know these are a",
    "start": "1973240",
    "end": "1978679"
  },
  {
    "text": "bunch of API calls that show sort of show you the matplot lib act you know our hierarchy and our API this is the",
    "start": "1978679",
    "end": "1985639"
  },
  {
    "text": "way I write code I don't use the PIP plot interface very much and it's you know another thing to just show you all",
    "start": "1985639",
    "end": "1991080"
  },
  {
    "text": "if you want to sort of write more pythonic code all of these API um methods are available to you um you know",
    "start": "1991080",
    "end": "1998799"
  },
  {
    "text": "I was a C++ programmer before I was a python programmer if I had to do it all over again these would be properties and",
    "start": "1998799",
    "end": "2004320"
  },
  {
    "text": "not Setters and Getters um you know just to make that slightly more pythonic right so if they're just properties then",
    "start": "2004320",
    "end": "2011279"
  },
  {
    "text": "you then you don't know if it's a method so you're old school like me no",
    "start": "2011279",
    "end": "2016360"
  },
  {
    "text": "no I'm just saying it has advantages yeah so ax. xaxis let's just",
    "start": "2016360",
    "end": "2022279"
  },
  {
    "text": "say ax. tab just to give you a flavor of how many of these things are out",
    "start": "2022279",
    "end": "2028360"
  },
  {
    "text": "there so I'm still on the A's so there there's a fair amount of",
    "start": "2028639",
    "end": "2034840"
  },
  {
    "text": "stuff you can set here um and we have we have I would say all very good dock",
    "start": "2034840",
    "end": "2041399"
  },
  {
    "text": "strings um so unlike",
    "start": "2041399",
    "end": "2046679"
  },
  {
    "text": "gido we have good interactive um doc Stream So if I say set X",
    "start": "2046679",
    "end": "2052079"
  },
  {
    "text": "label you'll get something that looks like this um it basically says set the",
    "start": "2052079",
    "end": "2059000"
  },
  {
    "text": "label there's a dictionary to control the fonts and these are the keyword arguments and you know we here's every",
    "start": "2059000",
    "end": "2066079"
  },
  {
    "text": "basically every argument that you can set there's quite a few it tells you the name what they can be you know so every",
    "start": "2066079",
    "end": "2072839"
  },
  {
    "text": "doc string we have pretty much has this level of of detail in terms of of what",
    "start": "2072839",
    "end": "2078560"
  },
  {
    "text": "you can do with it so there's there's a lot of stuff in there I mean the font weights here you",
    "start": "2078560",
    "end": "2084839"
  },
  {
    "text": "know can be an so this is basically is it bold or is it not bold these are your",
    "start": "2084839",
    "end": "2090560"
  },
  {
    "text": "options for setting how bold your text looks so there's a very high degree of of customizability um under the hood if",
    "start": "2090560",
    "end": "2097160"
  },
  {
    "text": "you want to you know go down that path I'm probably going to switch gears",
    "start": "2097160",
    "end": "2102760"
  },
  {
    "text": "now even though there's a lot more in here um but you know that's the great thing about a notebook you guys can read this on your own time if you're",
    "start": "2102760",
    "end": "2108839"
  },
  {
    "text": "interested um I'm basically kind of going through some of the stuff we already did how to set your own formatters how to set your",
    "start": "2108839",
    "end": "2115320"
  },
  {
    "text": "own locators how to do really stupid stuff like rotate your tick labels and",
    "start": "2115320",
    "end": "2120560"
  },
  {
    "text": "make them red you know just kind of showing you the API on how to drill down and get into these things um",
    "start": "2120560",
    "end": "2129640"
  },
  {
    "text": "this is this is some I'm gonna I want to talk a little bit about",
    "start": "2130480",
    "end": "2136240"
  },
  {
    "text": "this because this is probably something most of you either haven't used or not familiar with but is is really nice um",
    "start": "2136240",
    "end": "2141880"
  },
  {
    "text": "have any of you used JJ's axis Grid or grid spec stuff a couple of you JJ's an astronomer",
    "start": "2141880",
    "end": "2148560"
  },
  {
    "text": "he's a really talented map plot lib developer he's the guy who's done if you've looked on the gallery sort of what I would call most of the eye candy",
    "start": "2148560",
    "end": "2155040"
  },
  {
    "text": "these fancy arrows and fancy boxes and all of that kind of stuff he's done a lot of of that work but he's also done",
    "start": "2155040",
    "end": "2162000"
  },
  {
    "text": "an awful lot with um grid layout like how to do sophisticated um grid layout",
    "start": "2162000",
    "end": "2168800"
  },
  {
    "text": "so the map plot lip subplot is is is a by default a regular grid M by in but a",
    "start": "2168800",
    "end": "2174960"
  },
  {
    "text": "lot of times you may want to specify something like this where you've got a big axis something above it here and",
    "start": "2174960",
    "end": "2181079"
  },
  {
    "text": "something above it here you can do that manually with your axis command you can say left right you know left bottom",
    "start": "2181079",
    "end": "2188359"
  },
  {
    "text": "right no it's left bottom width height is the syntax but there's a lot of arithmetic to calculate exactly how you",
    "start": "2188359",
    "end": "2194160"
  },
  {
    "text": "want this to be so what he's done is if you've done any guey programming is he's basically implemented the concept of a",
    "start": "2194160",
    "end": "2201200"
  },
  {
    "text": "span so this is a 3X3 grid so this is your basically your 3 three here he's",
    "start": "2201200",
    "end": "2209079"
  },
  {
    "text": "got a 3X3 grid but it has a call span of two so that basically says this is the zero guy",
    "start": "2209079",
    "end": "2215640"
  },
  {
    "text": "but I want you to span two calls colums",
    "start": "2215640",
    "end": "2221040"
  },
  {
    "text": "um so the first one is a one here so basically he's saying and when he did",
    "start": "2221040",
    "end": "2226920"
  },
  {
    "text": "this you know Matt plot lib uses this one-based indexing like subplot one subplot two figure one figure two which",
    "start": "2226920",
    "end": "2233760"
  },
  {
    "text": "is very unyon because python is zerob based indexing but again we I was emulating mat Lab at the time so I mat",
    "start": "2233760",
    "end": "2240960"
  },
  {
    "text": "lab had a one based convention when JJ rewrote this he's like I'm not going to continue to perpetuate that that idiocy",
    "start": "2240960",
    "end": "2248000"
  },
  {
    "text": "so he redid this with zero based indexing so that's one mental mapping that you'll have to make this is more",
    "start": "2248000",
    "end": "2253079"
  },
  {
    "text": "pythonic um but but as you'll see in a second he he also wanted to support this",
    "start": "2253079",
    "end": "2258560"
  },
  {
    "text": "with axi slices so I'll show you that in a second but he he basically you can",
    "start": "2258560",
    "end": "2263880"
  },
  {
    "text": "slice these things to create spans so what this is basically saying is for for axis one which is here give me a 3X3",
    "start": "2263880",
    "end": "2271319"
  },
  {
    "text": "grid this is first row um zero column so this is the sky",
    "start": "2271319",
    "end": "2278280"
  },
  {
    "text": "and span two rows this is spanning two columns and two rows axis two here is",
    "start": "2278280",
    "end": "2285319"
  },
  {
    "text": "the z00 guy so he's the uppermost guy in the array and he spans two columns but",
    "start": "2285319",
    "end": "2290839"
  },
  {
    "text": "only one row and this guy here spans he's the one two guy so Row one column",
    "start": "2290839",
    "end": "2298079"
  },
  {
    "text": "two which is the last column because it's pyth python based and it spans two rows so this enables you to lay things",
    "start": "2298079",
    "end": "2303800"
  },
  {
    "text": "out nicely so the the example I gave above is is similar you know looking at like a marginal distribution of a 2d",
    "start": "2303800",
    "end": "2310520"
  },
  {
    "text": "histogram these are the kind of layouts that are useful for those kinds of",
    "start": "2310520",
    "end": "2315720"
  },
  {
    "text": "things and he does so this is this is an example showing the same",
    "start": "2315720",
    "end": "2322319"
  },
  {
    "text": "thing you can actually create one of these grid specs and you can do slicing on them so you can express a span here",
    "start": "2322319",
    "end": "2328720"
  },
  {
    "text": "like this span on A2 you can express that as an array slice so starting at",
    "start": "2328720",
    "end": "2334079"
  },
  {
    "text": "zero going all the way up and not including the end right so he's basically expressing the",
    "start": "2334079",
    "end": "2340400"
  },
  {
    "text": "spans here as slices of a two-dimensional array so just like you",
    "start": "2340400",
    "end": "2345599"
  },
  {
    "text": "have numpy slices give me the first you know up to and you can do the minus one so you know",
    "start": "2345599",
    "end": "2353000"
  },
  {
    "text": "the the the last row but the second to last column so it's kind of a nice thing and",
    "start": "2353000",
    "end": "2360079"
  },
  {
    "text": "he's perverse enough that it goes even more more deep than this um just I'll show you one example where",
    "start": "2360079",
    "end": "2367839"
  },
  {
    "text": "he does this thing um so this he there's a documentation page called um using",
    "start": "2367839",
    "end": "2375880"
  },
  {
    "text": "gridspec so this is just that example I just showed you but it turns out like",
    "start": "2375880",
    "end": "2382119"
  },
  {
    "text": "this guy here is a is is a more complicated one once you've got one of these you can put subplots within",
    "start": "2382119",
    "end": "2389640"
  },
  {
    "text": "subplots so he defines one of these grid specs like this but then he starts",
    "start": "2389640",
    "end": "2396240"
  },
  {
    "text": "sticking this is a 1 by two and then he sticks these you can put geometries within geometries",
    "start": "2396240",
    "end": "2402720"
  },
  {
    "text": "basically so you can you can recursively specify these things so you know he does",
    "start": "2402720",
    "end": "2409000"
  },
  {
    "text": "things with matplot lib which should be illegal yeah so here he's basically using his grid specs from above that he",
    "start": "2409000",
    "end": "2415920"
  },
  {
    "text": "created but he's sticking them in a one by two grid Arrangement so he sticks one in the first one he sticks this other",
    "start": "2415920",
    "end": "2421800"
  },
  {
    "text": "layout in the other one and they all kind of lay out nicely so if you need to do sophisticated layouts of axis um he's",
    "start": "2421800",
    "end": "2428599"
  },
  {
    "text": "your man okay so I'm going to shift gears here and do some um event",
    "start": "2428599",
    "end": "2435680"
  },
  {
    "text": "handling the next section is basically going to be interacting with your figures um Mouse clicks keyboard events",
    "start": "2435680",
    "end": "2442280"
  },
  {
    "text": "selecting data picking data that kind of thing and in order to do that I'm going to restart my notebook server because",
    "start": "2442280",
    "end": "2448920"
  },
  {
    "text": "everything so far has been into the browser and here I want to actually pan and zoom and click and interact so I",
    "start": "2448920",
    "end": "2454240"
  },
  {
    "text": "actually want the old school mat plot lib figures to pop out so I can interact with them um there's a lot of talk about",
    "start": "2454240",
    "end": "2461240"
  },
  {
    "text": "how to get interactive figures into the browser but that's a development project so for right now the the figures inside",
    "start": "2461240",
    "end": "2467400"
  },
  {
    "text": "the browser are static but we can um you know most people interact with their figures through the standard map plot",
    "start": "2467400",
    "end": "2473880"
  },
  {
    "text": "lib window so in order to get that and if you want to follow along you basically just need to kill your",
    "start": "2473880",
    "end": "2479480"
  },
  {
    "text": "notebook kernel and then I'm going to say instead",
    "start": "2479480",
    "end": "2486480"
  },
  {
    "text": "of PAB inline I'm just going to use the TK",
    "start": "2486480",
    "end": "2491520"
  },
  {
    "text": "backend and so that just tells the notebook use the TK backend pop the figures out and you can interact with",
    "start": "2491520",
    "end": "2498000"
  },
  {
    "text": "them and if you've done that you also need to refresh this page because this",
    "start": "2498000",
    "end": "2503280"
  },
  {
    "text": "page is still talking to the old notebook Colonel so simply refreshes it it's the same URL for me so it's going",
    "start": "2503280",
    "end": "2509720"
  },
  {
    "text": "to point to the new and the and the workbook we're going to be dealing with is called npl",
    "start": "2509720",
    "end": "2515800"
  },
  {
    "text": "events how many of you done any guey programming event",
    "start": "2516240",
    "end": "2522240"
  },
  {
    "text": "handling most of you how many of you done any event handling in met plot lib",
    "start": "2522240",
    "end": "2527720"
  },
  {
    "text": "couple Paul wrote pong in met plot lib um we have our we have our own event",
    "start": "2527720",
    "end": "2536800"
  },
  {
    "text": "model and just like you know we have we support user interfaces in QT TK WX",
    "start": "2536800",
    "end": "2543319"
  },
  {
    "text": "native Mac OS X widgets and some you know fltk that you've almost never heard",
    "start": "2543319",
    "end": "2549520"
  },
  {
    "text": "of and um so we have to support user interfaces across many different windowing systems and so we have an a",
    "start": "2549520",
    "end": "2556680"
  },
  {
    "text": "Windows system agnostic drawing API and we also have a window system agnostic event API so that if you write a new",
    "start": "2556680",
    "end": "2565240"
  },
  {
    "text": "backend or a new window system comes out we don't have to redo all that work so when you interact with a figure in",
    "start": "2565240",
    "end": "2571160"
  },
  {
    "text": "matplot lib you're doing it through our event system so we basically all of the",
    "start": "2571160",
    "end": "2577440"
  },
  {
    "text": "interactions are written using M matplot lib events um see if",
    "start": "2577440",
    "end": "2585640"
  },
  {
    "text": "I so there's some standard keyboard events like G for grid you can turn that",
    "start": "2589000",
    "end": "2594319"
  },
  {
    "text": "off we're trapping the key press and and and exposing it or I can type L for log",
    "start": "2594319",
    "end": "2600280"
  },
  {
    "text": "to toggle logarithmic axes on and off or I can type S for Save and it should pop",
    "start": "2600280",
    "end": "2606319"
  },
  {
    "text": "up a save dialogue H not implemented on this back end",
    "start": "2606319",
    "end": "2611720"
  },
  {
    "text": "apparently um but we expose that event handler to you so you can write your own events um and the advantage of doing it",
    "start": "2611720",
    "end": "2618920"
  },
  {
    "text": "that way is that you can send your code to another",
    "start": "2618920",
    "end": "2625040"
  },
  {
    "text": "map plot lib user who might be on Mac OSX and the same event model will work that's the basic Advantage",
    "start": "2625040",
    "end": "2630880"
  },
  {
    "text": "there kill that it's n widgets 3 that's what I'm going to be working with n v is",
    "start": "2630880",
    "end": "2637240"
  },
  {
    "text": "a perfectly good worksheet there's a couple here and I'm not going to do it all that were written by Fernando and Paul um while I'm on the subject I think",
    "start": "2637240",
    "end": "2643839"
  },
  {
    "text": "I'll just show you Paul's because it's kind of cool um what he did",
    "start": "2643839",
    "end": "2649359"
  },
  {
    "text": "here was he took an XKCD plot and said how can I make this in mat plot",
    "start": "2649359",
    "end": "2655640"
  },
  {
    "text": "lip that was his goal and so it's a nice long tutorial oh do I have to do run",
    "start": "2655640",
    "end": "2662480"
  },
  {
    "text": "all you saved it without without the output",
    "start": "2662480",
    "end": "2669040"
  },
  {
    "text": "oh so there's going to be a lot of stuff popping out okay well I'll I don't want to yeah",
    "start": "2673559",
    "end": "2681680"
  },
  {
    "text": "you do said pilot oh that may be confusing the kernel I'll worry about that at the end because I've I've set my kernel to pop out and he's setting it in",
    "start": "2681680",
    "end": "2688000"
  },
  {
    "text": "line so I'm going to just actually restart my kernel but it's a nice little demo you can look at it later as you",
    "start": "2688000",
    "end": "2693760"
  },
  {
    "text": "have time um where he basically replicates the xkdc",
    "start": "2693760",
    "end": "2700920"
  },
  {
    "text": "figure in Matt plot",
    "start": "2700920",
    "end": "2704599"
  },
  {
    "text": "lib okay so I've Got to Now maximize this so you can see what we're",
    "start": "2707119",
    "end": "2712680"
  },
  {
    "text": "doing so this is sort of the basic um event handling model that we have where",
    "start": "2713520",
    "end": "2719880"
  },
  {
    "text": "the the map figure has a canvas that's sort of your guey canvas and it has a connection method where you can connect",
    "start": "2719880",
    "end": "2726559"
  },
  {
    "text": "to one of many matplot lib events um and there's a tutorial on the website called the event handling tutorial where these",
    "start": "2726559",
    "end": "2732720"
  },
  {
    "text": "will be listed for you there's a key press event a button press event a mouse motion event the kind of the standard",
    "start": "2732720",
    "end": "2738640"
  },
  {
    "text": "guey events and the way it works is you connect the event to a call back",
    "start": "2738640",
    "end": "2744280"
  },
  {
    "text": "function and every time you press this key any key this function is called and",
    "start": "2744280",
    "end": "2749880"
  },
  {
    "text": "we try to keep it pretty simple you know so if the event has a key field um and and so what happens is when",
    "start": "2749880",
    "end": "2757200"
  },
  {
    "text": "you press this whenever you press a button it should print you've pressed this key and then it looks for this is",
    "start": "2757200",
    "end": "2764280"
  },
  {
    "text": "key handling if the key is X what we're going to do is toggle a line's visibility so on this example I'm",
    "start": "2764280",
    "end": "2770800"
  },
  {
    "text": "plotting two lines and every time you press X I want you to turn one of the lines on or off so I ask is the line",
    "start": "2770800",
    "end": "2776960"
  },
  {
    "text": "visible by calling the lines get visible property everything in the map plot Li figure has this property every tick",
    "start": "2776960",
    "end": "2783400"
  },
  {
    "text": "every text has this visible property um it's the it's the base classes method of",
    "start": "2783400",
    "end": "2788480"
  },
  {
    "text": "artist and then I can set the visible set the visibility to not visible so that's sort of the toggle operation and",
    "start": "2788480",
    "end": "2794680"
  },
  {
    "text": "then I have to force the the figure to redraw itself so that's sort of a very simple event handling Loop and let's see",
    "start": "2794680",
    "end": "2801920"
  },
  {
    "text": "if I can run this from okay so there's my figure that pops up I've plotted two lines and I just press X and in the",
    "start": "2801920",
    "end": "2810960"
  },
  {
    "text": "notebook it should be saying you pressed X let's see if it does Okay so saying you pressed X and",
    "start": "2810960",
    "end": "2818720"
  },
  {
    "text": "every time I pressed X I toggle a line so that's sort of a very simple way of",
    "start": "2818720",
    "end": "2824559"
  },
  {
    "text": "connecting to the lowlevel key press",
    "start": "2824559",
    "end": "2828440"
  },
  {
    "text": "events so as I said we have several of them um the most important ones are key",
    "start": "2830800",
    "end": "2836480"
  },
  {
    "text": "press button press and mouse motion called motion notify event but most people don't want to wire up really",
    "start": "2836480",
    "end": "2844160"
  },
  {
    "text": "low-level guey code themselves so we've tried to encapsulate some of",
    "start": "2844160",
    "end": "2849559"
  },
  {
    "text": "the common things that people want to do with mouse interaction into what we call widgets so these are little tools that",
    "start": "2849559",
    "end": "2856800"
  },
  {
    "text": "we've written to do kind of basic stuff that you might want to do in a figure so we have a module called matplot li.",
    "start": "2856800",
    "end": "2864000"
  },
  {
    "text": "widgets and I'll show you one of these in action and then I'll show you where you can find more so this is a sort of a",
    "start": "2864000",
    "end": "2870640"
  },
  {
    "text": "standard cursor widget where as you move your mouse a cursor will follow you so",
    "start": "2870640",
    "end": "2876319"
  },
  {
    "text": "basically I'm just creating some random data and I instantiate this cursor",
    "start": "2876319",
    "end": "2881400"
  },
  {
    "text": "object has a color has a line width and this bliding is is kind of a rendering",
    "start": "2881400",
    "end": "2887160"
  },
  {
    "text": "feature that is that does optimizing rendering on back ends that support it",
    "start": "2887160",
    "end": "2892680"
  },
  {
    "text": "um Mac OSX native back end is not so if you're running that you may encounter",
    "start": "2892680",
    "end": "2897720"
  },
  {
    "text": "you would want to set use blood equals false if you encounter any problems with",
    "start": "2897720",
    "end": "2902599"
  },
  {
    "text": "it so that's interesting",
    "start": "2904440",
    "end": "2908760"
  },
  {
    "text": "it's failing oh I got a trace",
    "start": "2910640",
    "end": "2914119"
  },
  {
    "text": "back I didn't execute that line those are the kind of Errors I",
    "start": "2915680",
    "end": "2922079"
  },
  {
    "text": "like so that just gives me a little cursor widg as I'm following along um and I'm getting my XY coordinates as",
    "start": "2922079",
    "end": "2928319"
  },
  {
    "text": "usual down there",
    "start": "2928319",
    "end": "2932480"
  },
  {
    "text": "so the cursor is not that useful the M multic cursor to me is actually useful so the way the multic cursor works is",
    "start": "2934319",
    "end": "2941359"
  },
  {
    "text": "you can create as many subplots as you want and you you you basically I have axis zero",
    "start": "2941359",
    "end": "2948640"
  },
  {
    "text": "and axis one but you can create as many of these as you want you initialize this multic cursor with the figure canvas",
    "start": "2948640",
    "end": "2954000"
  },
  {
    "text": "every figure will have this canvas instance it's our abstraction of the guey um and you give it the list of axes",
    "start": "2954000",
    "end": "2960400"
  },
  {
    "text": "that you want to share this cursor on and then you set your line properties as we did before so what's useful here is",
    "start": "2960400",
    "end": "2966480"
  },
  {
    "text": "when when you have two data sets and you want to look at events in one and see how they're registered to events in the",
    "start": "2966480",
    "end": "2972520"
  },
  {
    "text": "other so that's I think a lot of times useful because you have like four or five of these panels and you you see a",
    "start": "2972520",
    "end": "2978079"
  },
  {
    "text": "feature in in one when you're share when you have the same axes limits and you want to zoom in on that and see precisely where you are so it just gives",
    "start": "2978079",
    "end": "2984720"
  },
  {
    "text": "you a visual alignment",
    "start": "2984720",
    "end": "2988880"
  },
  {
    "text": "there we have a lasso widget you know for selecting regions",
    "start": "2989960",
    "end": "2995640"
  },
  {
    "text": "um so this was kind of a nice little example uh how many of you made one of the pandas",
    "start": "2995640",
    "end": "3002319"
  },
  {
    "text": "talks so what I wrote here was a little Panda's uh widget viewer basically so uh",
    "start": "3002319",
    "end": "3012240"
  },
  {
    "text": "in this script I'll kind of walk you through what this thing does and um but the idea here is you know you might have",
    "start": "3012240",
    "end": "3018960"
  },
  {
    "text": "a data set that has multiple types of data um some of which are not some of",
    "start": "3018960",
    "end": "3026839"
  },
  {
    "text": "maybe strings or categories that you know are not easily represented on your graph and you know a lot of times what",
    "start": "3026839",
    "end": "3033079"
  },
  {
    "text": "you might want to do is plot value One versus value two on a scatter plot and then you see some outliers somewhere and",
    "start": "3033079",
    "end": "3039000"
  },
  {
    "text": "you want to say hey what's going on with those outliers how do I drill down into those outliers so what and what are they",
    "start": "3039000",
    "end": "3044920"
  },
  {
    "text": "what days did they occur on what was the other values that I that are not on my graph so sort of you know hover over a",
    "start": "3044920",
    "end": "3050359"
  },
  {
    "text": "region and inspect that region that's kind of what we're trying to do here so what we're going to do is plot two of",
    "start": "3050359",
    "end": "3055480"
  },
  {
    "text": "our values we read in some financial data from a CSV file do some standard",
    "start": "3055480",
    "end": "3061200"
  },
  {
    "text": "Panda stuff attach a new column and uh print out some of it so this is as you",
    "start": "3061200",
    "end": "3066720"
  },
  {
    "text": "can see the daily pricing data from the stock Crocs so I loaded up this little Panda's data",
    "start": "3066720",
    "end": "3074000"
  },
  {
    "text": "frame and so I want this to be kind of generic so I'm going to specify which pandas Fields I'm going to be working",
    "start": "3077400",
    "end": "3083640"
  },
  {
    "text": "with as strings so that throughout the code I can refer to these things so I'm basically going to um be working on the",
    "start": "3083640",
    "end": "3090520"
  },
  {
    "text": "x axis with volume which is the daily trading volume and on the y- axis is the daily return in a percentage terms um",
    "start": "3090520",
    "end": "3097280"
  },
  {
    "text": "I'm going to have a single axis and plot this is the data frame access the the",
    "start": "3097280",
    "end": "3102599"
  },
  {
    "text": "the X field column versus the Y field column and as a marker plot so it's",
    "start": "3102599",
    "end": "3107640"
  },
  {
    "text": "basically a scatter plot okay so it's just going to be a 2d scatter",
    "start": "3107640",
    "end": "3114720"
  },
  {
    "text": "plot now this is um one of our widgets um",
    "start": "3115520",
    "end": "3121839"
  },
  {
    "text": "called a span selector and what the span selector does is it lets you just basically select a horizontal or",
    "start": "3121839",
    "end": "3128040"
  },
  {
    "text": "vertical region of your plot it's like a rectangle like a zoom to rectangle but it's only one of the dimensions of the",
    "start": "3128040",
    "end": "3133599"
  },
  {
    "text": "rectangle it's what we call a span like a region of the x-axis so this is a pretty simple one so I'm starting kind",
    "start": "3133599",
    "end": "3139160"
  },
  {
    "text": "of with the easiest one and I'm going to basically say when you select a a region",
    "start": "3139160",
    "end": "3144640"
  },
  {
    "text": "call this function on select so this is sort of the standard call back mechanism call this function some of these these",
    "start": "3144640",
    "end": "3151240"
  },
  {
    "text": "are just sort of drawing things it's going to draw rectangles that are red and translucent so these are the rectangle properties um that we're going",
    "start": "3151240",
    "end": "3157720"
  },
  {
    "text": "to draw this is where the action happens we're selecting what again a span is an X-Men xmax region so we're going to be",
    "start": "3157720",
    "end": "3164000"
  },
  {
    "text": "selecting a region it's going to print the region we selected it's going to get the the same X field that we plotted so",
    "start": "3164000",
    "end": "3170760"
  },
  {
    "text": "it's grabbing that guy there and it's going to do a Boolean mask where X is greater than x Min and X is l than x max",
    "start": "3170760",
    "end": "3177079"
  },
  {
    "text": "so it's selecting the region it's selecting the data in that region and then it's just going to print",
    "start": "3177079",
    "end": "3183559"
  },
  {
    "text": "it to standard out so what this prints the entire data frame so we have an XY scatter plot but we're just going to be",
    "start": "3183559",
    "end": "3191400"
  },
  {
    "text": "um looking at the data in that region let me run it one time so you can kind of see what it looks like and then um",
    "start": "3191400",
    "end": "3197559"
  },
  {
    "text": "maybe we can take some questions if there's what's going on in the code so this is the XY scatter plot",
    "start": "3197559",
    "end": "3204359"
  },
  {
    "text": "xfield versus y field",
    "start": "3204359",
    "end": "3208440"
  },
  {
    "text": "and so basically you know we have a lot of data around here which are um small volume days um and kind of you know some",
    "start": "3209599",
    "end": "3217480"
  },
  {
    "text": "sort of distribution of returns around those days but we also have a few outlier days that we might be interested in saying these were really big volume",
    "start": "3217480",
    "end": "3223359"
  },
  {
    "text": "days out here what what did the rest of the data look like over there so that's where we select that",
    "start": "3223359",
    "end": "3229240"
  },
  {
    "text": "region that that little rectangle that I just selected and that triggered our on select event here so so what happened",
    "start": "3229240",
    "end": "3237040"
  },
  {
    "text": "now is we got this standard output back from the terminal this was the data",
    "start": "3237040",
    "end": "3242440"
  },
  {
    "text": "between xmin and x max inside this region so here we can see the outlier",
    "start": "3242440",
    "end": "3248400"
  },
  {
    "text": "events that happened on those days so it's it's kind of a nice way of of",
    "start": "3248400",
    "end": "3253520"
  },
  {
    "text": "interacting with your data I'm going to try that again I'm going to try to go over here and just collect the very two biggest",
    "start": "3253520",
    "end": "3259839"
  },
  {
    "text": "days so that's my span that I'm selecting and when I release the mouse it triggered another print here to my",
    "start": "3259839",
    "end": "3266720"
  },
  {
    "text": "screen these are the two events that I selected so it's a it's an easy way of drilling down into your data so I",
    "start": "3266720",
    "end": "3276040"
  },
  {
    "text": "accidentally probably selected the whole data set just as I was trying to close the",
    "start": "3276040",
    "end": "3281480"
  },
  {
    "text": "window this is exactly the same thing but it's using a different widget it's the rectangle selector so you know Zoom",
    "start": "3281720",
    "end": "3287760"
  },
  {
    "text": "to rect is a very common mode of interacting with data we give you a widget so you can hook into it yourself",
    "start": "3287760",
    "end": "3292920"
  },
  {
    "text": "so if you want your own rectangle tool you just create cre one of these widgets you know there's a lot of arguments but",
    "start": "3292920",
    "end": "3298839"
  },
  {
    "text": "you don't need all of these These are these are just options you know sometimes when your rectangle is too",
    "start": "3298839",
    "end": "3303920"
  },
  {
    "text": "small you you just click your figure and your rectangle's too small you want to ignore that this is basically saying if",
    "start": "3303920",
    "end": "3309319"
  },
  {
    "text": "your rectangle's smaller than some minimum rectangle ignore it so you know",
    "start": "3309319",
    "end": "3314920"
  },
  {
    "text": "these are just some extra options but it's exactly the same selection code that we had before except now it's a",
    "start": "3314920",
    "end": "3320760"
  },
  {
    "text": "two- dimensional selection we have a the X1 y1 of where the upper corner of the",
    "start": "3320760",
    "end": "3326400"
  },
  {
    "text": "rectangle was and the X2 Y2 of where the lower corner of the rectangle was so we get that and to do the mask we have to",
    "start": "3326400",
    "end": "3332920"
  },
  {
    "text": "make sure X1 is less than X2 you know because I want to basically say this operation where X is bigger than X1 less",
    "start": "3332920",
    "end": "3339119"
  },
  {
    "text": "than X2 Y is bigger than y1 less than Y2 so this is just a toggle make sure that X1 is always less than X2 I get my X and",
    "start": "3339119",
    "end": "3346680"
  },
  {
    "text": "my y Fields apply two dimensional mask and then I select that region out of pandas so it's same logic in two",
    "start": "3346680",
    "end": "3352839"
  },
  {
    "text": "Dimensions now and so we should be able to now you",
    "start": "3352839",
    "end": "3358599"
  },
  {
    "text": "know we we could go in here and try to get one of sort of a denser area I did a tiny rectangle in there and it shows us",
    "start": "3358599",
    "end": "3367359"
  },
  {
    "text": "what we get so I should be able to grab these two points like that so you you can hook into a lot of these widget",
    "start": "3367359",
    "end": "3372960"
  },
  {
    "text": "tools and you you know it's I hate to say write once run anywhere because it",
    "start": "3372960",
    "end": "3378039"
  },
  {
    "text": "reminds me of java and that was the failed promise of java you know and I'm not going to promise that you won't",
    "start": "3378039",
    "end": "3383880"
  },
  {
    "text": "encounter some glitches across some backends across some platforms but for the most part the event model is the one",
    "start": "3383880",
    "end": "3389880"
  },
  {
    "text": "we use internally for panning and zooming and doing these things so to the",
    "start": "3389880",
    "end": "3395119"
  },
  {
    "text": "extent that those things work the event model should work to us reasonably well",
    "start": "3395119",
    "end": "3400480"
  },
  {
    "text": "okay all right so I'm going to even though Paul told me I don't have to do it the old school way because I",
    "start": "3400480",
    "end": "3407000"
  },
  {
    "text": "don't have a lot of time and I know how to do it this way I'm just going to kill my Colonel and go back to",
    "start": "3407000",
    "end": "3413559"
  },
  {
    "text": "inline for the last segment I wanted to talk talk about",
    "start": "3413720",
    "end": "3418559"
  },
  {
    "text": "today the last one is called MPL recipes oh I have to refresh if you kill",
    "start": "3425799",
    "end": "3433480"
  },
  {
    "text": "your Colonel and restart because I went back to I have to refresh this mode um",
    "start": "3433480",
    "end": "3438839"
  },
  {
    "text": "so these are just going to illustrate a few different kinds of plotting commands that I like to use that um some of them",
    "start": "3438839",
    "end": "3445559"
  },
  {
    "text": "are in the I handy um realm just making plots look a little bit more attractive um there's a command I like",
    "start": "3445559",
    "end": "3452839"
  },
  {
    "text": "to use called fill between where the syntax of it basically is given time or your x-axis fill the",
    "start": "3452839",
    "end": "3461640"
  },
  {
    "text": "area between y Min and Y Max and these can either be a constant or an array so",
    "start": "3461640",
    "end": "3467319"
  },
  {
    "text": "if they're an array it basically will fill between the the the Y Min and Y Max",
    "start": "3467319",
    "end": "3472480"
  },
  {
    "text": "is an array um and if it's a constant in this case y min is the constant one it",
    "start": "3472480",
    "end": "3478119"
  },
  {
    "text": "fills between a solid line and you can set some parameters just to create shaded region plots so that's a pretty",
    "start": "3478119",
    "end": "3484039"
  },
  {
    "text": "easy thing to do but it there's a has a nice argument to it called where that to",
    "start": "3484039",
    "end": "3490799"
  },
  {
    "text": "me makes it pretty",
    "start": "3490799",
    "end": "3493640"
  },
  {
    "text": "interesting so this is a this is an example that I've used to show how you",
    "start": "3496440",
    "end": "3501839"
  },
  {
    "text": "can use the wear argument in both cases I'm filling between the two arrays I'll show you how I created these in a second",
    "start": "3501839",
    "end": "3508440"
  },
  {
    "text": "but I'm filling between this array y50 and y200 so this is a case where both y men and YX are both arrays um and it",
    "start": "3508440",
    "end": "3516799"
  },
  {
    "text": "just creates the polygon between them and I can give them the same arrays in both cases but I can give it a Boolean",
    "start": "3516799",
    "end": "3522599"
  },
  {
    "text": "mask here that says where some condition is true um so this is a a random walk",
    "start": "3522599",
    "end": "3529960"
  },
  {
    "text": "that I've I've set up here",
    "start": "3529960",
    "end": "3534318"
  },
  {
    "text": "and oh it's the same random walk from above",
    "start": "3535039",
    "end": "3540119"
  },
  {
    "text": "so basically this is my random walk it's a geometric random walk where I take one",
    "start": "3540119",
    "end": "3546359"
  },
  {
    "text": "plus some random number cumulative product it's what Wes called the total return the total return on $1 invested",
    "start": "3546359",
    "end": "3553799"
  },
  {
    "text": "in his Panda talk and these are two different moving",
    "start": "3553799",
    "end": "3559359"
  },
  {
    "text": "averages of that variable so you can compute a moving average in numpy as a convolution so if you convolve your",
    "start": "3559359",
    "end": "3566280"
  },
  {
    "text": "variable with a waiting function that's essentially the concept of a moving average so you could do an exponential moving average if this was an",
    "start": "3566280",
    "end": "3572280"
  },
  {
    "text": "exponential function or an equal weight moving average by giving it an array of",
    "start": "3572280",
    "end": "3577760"
  },
  {
    "text": "ones you know to make it a proper average you need to divide by 50 so that the total weighting is one so here I",
    "start": "3577760",
    "end": "3584000"
  },
  {
    "text": "have 200 ones weighted by 200 so I do this convolution the convolution has",
    "start": "3584000",
    "end": "3590799"
  },
  {
    "text": "sort of a Decay part at the end so you want to just extract out the the beginning part and be and at the",
    "start": "3590799",
    "end": "3596280"
  },
  {
    "text": "beginning there's an artifact where you know the you it's it's a moving window",
    "start": "3596280",
    "end": "3601520"
  },
  {
    "text": "basically the way the convolution works so at the beginning it's only the average of one point so these points aren't really valid averages because",
    "start": "3601520",
    "end": "3608480"
  },
  {
    "text": "it's 150th of one point you know so you basically what I'm doing is saying for the 50 point moving average I'm going to",
    "start": "3608480",
    "end": "3614720"
  },
  {
    "text": "just say that's bad data for the 200 Point moving average I'm going to say that's bad data but then a very simple",
    "start": "3614720",
    "end": "3621400"
  },
  {
    "text": "measure of trending that you know kind of the the simplest measure of trending that people in the financial industry",
    "start": "3621400",
    "end": "3626760"
  },
  {
    "text": "like to look at is whether a short-term moving average is higher than a longer term moving average so here I'm creating",
    "start": "3626760",
    "end": "3633200"
  },
  {
    "text": "a logical array saying I'm going to say this thing is trending up when the short-term moving average is greater",
    "start": "3633200",
    "end": "3639599"
  },
  {
    "text": "than the slower moving average it's a trailing because the moving average is is a trailing indicator it's a trailing",
    "start": "3639599",
    "end": "3645799"
  },
  {
    "text": "indicator um so what I'm doing now is I'm basically coding these different",
    "start": "3645799",
    "end": "3651079"
  },
  {
    "text": "regions so I can see where my moving average is positive where the where the shortterm is higher than the long term",
    "start": "3651079",
    "end": "3657280"
  },
  {
    "text": "and where the short- term is lower than the long term um so these basically show",
    "start": "3657280",
    "end": "3662480"
  },
  {
    "text": "you kind of one example of how you can use these fill between to you know put extra data onto your graph in a way that",
    "start": "3662480",
    "end": "3669000"
  },
  {
    "text": "conveys a lot of information I like to use whenever I use these polygons I find",
    "start": "3669000",
    "end": "3675280"
  },
  {
    "text": "these I find these um colors are too",
    "start": "3675280",
    "end": "3680640"
  },
  {
    "text": "star so I like to soften them with alpha alpha is the transparency channel in map",
    "start": "3680640",
    "end": "3685799"
  },
  {
    "text": "PL lib so anything that has an alpha less than one you can see through you can see what's behind it that's not so",
    "start": "3685799",
    "end": "3691400"
  },
  {
    "text": "important here because these are disjoint regions you don't need to see through them but there's a secondary",
    "start": "3691400",
    "end": "3698000"
  },
  {
    "text": "effect of alpha which is is that they just soften",
    "start": "3698000",
    "end": "3702720"
  },
  {
    "text": "colors that's weird what was wrong I oh did I not execute it so this",
    "start": "3703960",
    "end": "3712559"
  },
  {
    "text": "is an example when I was talking about softening the colors this is the standard blue if you take that away make that Alpha",
    "start": "3712559",
    "end": "3719160"
  },
  {
    "text": "1.0 is the default it's just a much stronger color so I tend to I like these",
    "start": "3719160",
    "end": "3725440"
  },
  {
    "text": "like kind of soft pastell colors that you can get out of setting Alpha equals um 0.1 so this is again just to kind of",
    "start": "3725440",
    "end": "3733279"
  },
  {
    "text": "for the visual enhancement of your figures I find tweaking that Alpha a little bit can give you different kinds of uh feel to your",
    "start": "3733279",
    "end": "3740720"
  },
  {
    "text": "colors this is a uh slightly more involved example",
    "start": "3740720",
    "end": "3748920"
  },
  {
    "text": "where what we have it's actually quite nice an illustration of of of how",
    "start": "3748920",
    "end": "3754000"
  },
  {
    "text": "powerful numpy is as an expressive syntax what I'm doing here is I'm doing",
    "start": "3754000",
    "end": "3759200"
  },
  {
    "text": "a random walk simulation with a hundred different random Walkers and each random Walker is going to take 250 steps and I",
    "start": "3759200",
    "end": "3766359"
  },
  {
    "text": "want to do some statistics on the population like like so what is the average position of the random Walkers",
    "start": "3766359",
    "end": "3771599"
  },
  {
    "text": "and what is the a the variance of the of the average position of the random walkers",
    "start": "3771599",
    "end": "3776839"
  },
  {
    "text": "so I want to take you know 250 steps and basically I'm creating a random distribution here with different means",
    "start": "3776839",
    "end": "3783480"
  },
  {
    "text": "so my mean of the first population is 0.02 and my mean of the second population is 0.04 so they're going to",
    "start": "3783480",
    "end": "3790160"
  },
  {
    "text": "be walking a little faster they both of these random walks have drifts basically so this is the",
    "start": "3790160",
    "end": "3795680"
  },
  {
    "text": "drift term and this is the variance term so my my first population has a smaller standard deviation than my second so",
    "start": "3795680",
    "end": "3802000"
  },
  {
    "text": "these are unit normal two-dimensional unit normal distributions with a different and standard deviation and all",
    "start": "3802000",
    "end": "3807839"
  },
  {
    "text": "we have to do to compute the the random walk is this step which basically say give me the cumulative sum of the the",
    "start": "3807839",
    "end": "3815640"
  },
  {
    "text": "Walkers and sum over Dimension zero so with numpy sum on a two-dimensional array if you just call sum you get the",
    "start": "3815640",
    "end": "3821760"
  },
  {
    "text": "sum of all the elements or you can sum over axis equals zero and just get the sum over one over the zeroth dimension",
    "start": "3821760",
    "end": "3827920"
  },
  {
    "text": "or you can say sum over axis one and get the sum so what we've done here in you know six lines of code is a complete",
    "start": "3827920",
    "end": "3835240"
  },
  {
    "text": "simulation of 100 random Walkers taking 250 steps",
    "start": "3835240",
    "end": "3843079"
  },
  {
    "text": "um I'm going to insert control M",
    "start": "3843079",
    "end": "3848359"
  },
  {
    "text": "okay so at the end of all of this I've got something that comes out um that",
    "start": "3850599",
    "end": "3855839"
  },
  {
    "text": "looks like that it's still 100 by 250 it's still 100 random Walkers and I'll",
    "start": "3855839",
    "end": "3861119"
  },
  {
    "text": "just plot one of the trajectories",
    "start": "3861119",
    "end": "3866920"
  },
  {
    "text": "so this is the first random Walker in",
    "start": "3866920",
    "end": "3873318"
  },
  {
    "text": "X1 so here he goes and he's because it's got this positive drift term he starts to take off and in met plot lib you can",
    "start": "3874279",
    "end": "3881440"
  },
  {
    "text": "also slice this guy so you can give you can for example say show me the first five random Walkers so you can pass",
    "start": "3881440",
    "end": "3888440"
  },
  {
    "text": "these array slices in and you'll get the trajectories of the first five random",
    "start": "3888440",
    "end": "3893480"
  },
  {
    "text": "Walkers so that's um and I think we have 100 total so what we",
    "start": "3893480",
    "end": "3899920"
  },
  {
    "text": "want to now do is is compute some statistics on those random Walkers which basically says give me the average",
    "start": "3899920",
    "end": "3907200"
  },
  {
    "text": "position over time of all the random walkers in in population one give me the",
    "start": "3907200",
    "end": "3912240"
  },
  {
    "text": "standard deviation of all the random walkers in population two and do the same thing for both sets so we've got",
    "start": "3912240",
    "end": "3917319"
  },
  {
    "text": "two Walkers different variances different means so here again four lines of code we've got population statistics",
    "start": "3917319",
    "end": "3923359"
  },
  {
    "text": "so again you know it's why numpy is numpy lab and all this family of languages is so good for this stuff so",
    "start": "3923359",
    "end": "3930119"
  },
  {
    "text": "for the last thing I just want to plot the result set and again I'm illustrating this fill between using",
    "start": "3930119",
    "end": "3936279"
  },
  {
    "text": "shaded region so basically we can see the population mean which I'm plotting here",
    "start": "3936279",
    "end": "3943039"
  },
  {
    "text": "is T * mu1 and T * mu2 and you can see the population variance here what I'm",
    "start": "3943039",
    "end": "3948680"
  },
  {
    "text": "Computing Is Well it's mean plus one standard deviation mean minus one standard deviation so what we're seeing",
    "start": "3948680",
    "end": "3954119"
  },
  {
    "text": "is the one standard deviation from the mean of the population over time so",
    "start": "3954119",
    "end": "3959760"
  },
  {
    "text": "population two had a bigger mean so it's climbing faster but it also had a bigger standard deviation and so it's got a",
    "start": "3959760",
    "end": "3967000"
  },
  {
    "text": "wider distribution of outcomes so this is the one Sigma probability density function over time of the of the random",
    "start": "3967000",
    "end": "3973640"
  },
  {
    "text": "Walkers basically so we're viewing slices of this and again using the fill between with an alpha Channel we can see",
    "start": "3973640",
    "end": "3979880"
  },
  {
    "text": "both populations even when they overlap you can see through them so it's a nice little um technique",
    "start": "3979880",
    "end": "3987559"
  },
  {
    "text": "unque and you know we expect the variance to grow linearly with time for",
    "start": "3991279",
    "end": "3996480"
  },
  {
    "text": "population of random Walkers so we expect the standard deviation to grow as a square root of time and that's basically what you see here is is a",
    "start": "3996480",
    "end": "4003640"
  },
  {
    "text": "standard deviation function that grows as the square root of time so I use fill between a lot I think",
    "start": "4003640",
    "end": "4010000"
  },
  {
    "text": "that's a nice little um nice little helper function another one that I like for is",
    "start": "4010000",
    "end": "4016480"
  },
  {
    "text": "is kind of these text boxes it's very easy to create around any text in the figure just a little box",
    "start": "4016480",
    "end": "4024440"
  },
  {
    "text": "and I think it it draws attention to it it makes your figure a little bit richer visually",
    "start": "4024440",
    "end": "4030920"
  },
  {
    "text": "um I'm normally against most forms of what um tufty calls chart junk but I",
    "start": "4030920",
    "end": "4037079"
  },
  {
    "text": "think some of this stuff adds a little bit of of of a visual appeal",
    "start": "4037079",
    "end": "4043119"
  },
  {
    "text": "so text is a generic command command I'm going to turn this",
    "start": "4043119",
    "end": "4049480"
  },
  {
    "text": "off so this would be a standard text command the rest of this is just a histogram so I've got a long",
    "start": "4050000",
    "end": "4056000"
  },
  {
    "text": "mathematical expression saying in latch the mean is this the median is this and",
    "start": "4056000",
    "end": "4062000"
  },
  {
    "text": "the standard deviation is that and we have this support for new line separated text so one text command gives us three",
    "start": "4062000",
    "end": "4067480"
  },
  {
    "text": "different textual representations and this is actually a very useful technique here which",
    "start": "4067480",
    "end": "4074119"
  },
  {
    "text": "basically says place this thing in axis coordinates not data coordinates so rather than try to",
    "start": "4074119",
    "end": "4081160"
  },
  {
    "text": "figure out oh I want this thing to be at because the normal coordinate system is data so this is like in data this is",
    "start": "4081160",
    "end": "4087799"
  },
  {
    "text": "minus 125 versus you know 550 so you have to",
    "start": "4087799",
    "end": "4093880"
  },
  {
    "text": "figure out where that if you want it in the upper left you have to figure out what is it for this data set hardcode",
    "start": "4093880",
    "end": "4098920"
  },
  {
    "text": "that in if your data changes it's suddenly in the wrong place so we we have a number of different coordinate",
    "start": "4098920",
    "end": "4104880"
  },
  {
    "text": "systems but one the most useful one is this this axis coordinate system um where you can say I want you to be at",
    "start": "4104880",
    "end": "4111838"
  },
  {
    "text": "0.05 which is a relative position on the axes 5% over and 95% from the bottom so",
    "start": "4111839",
    "end": "4119199"
  },
  {
    "text": "that's basically saying forget about my data I could pan and zoom and would this would not move because this is not in",
    "start": "4119199",
    "end": "4125199"
  },
  {
    "text": "the data coordinate system and the way you specify that is by setting the transformation so maplet lip has a every",
    "start": "4125199",
    "end": "4131400"
  },
  {
    "text": "maplet Li artist has a transform under the hood the default one is called trans data it's what turns your data into the",
    "start": "4131400",
    "end": "4137640"
  },
  {
    "text": "M into the figure coordinate system but the axis coordinate system is 0 0 is here and one one is here so you can put",
    "start": "4137640",
    "end": "4145120"
  },
  {
    "text": "something anywhere in your figure in that coordinate system just by saying use the axis coordinate",
    "start": "4145120",
    "end": "4150679"
  },
  {
    "text": "system so that's what your what a standard text would look like but if you want to decorate it a little",
    "start": "4150679",
    "end": "4158278"
  },
  {
    "text": "bit you can pass in this dictionary of properties and these are properties from",
    "start": "4158279",
    "end": "4165040"
  },
  {
    "text": "map but lib patches um they have face colors Edge colors alphas and essentially a style um",
    "start": "4165040",
    "end": "4175359"
  },
  {
    "text": "so this I'm going to use a round Style with a wheat face color um and an alpha",
    "start": "4175359",
    "end": "4181560"
  },
  {
    "text": "of 0.5 so you basically pass in this dictionary to What's called the B box it's the bounding box of your",
    "start": "4181560",
    "end": "4188199"
  },
  {
    "text": "text props and then you can do something like",
    "start": "4188199",
    "end": "4193640"
  },
  {
    "text": "that turns out we have number of",
    "start": "4193640",
    "end": "4198040"
  },
  {
    "text": "styles so you know if you like the postage stamp look or something like that there's a number of styles that you",
    "start": "4199960",
    "end": "4205440"
  },
  {
    "text": "can use and if you do a help on the all of this stuff comes in matplot lib patch",
    "start": "4205440",
    "end": "4211280"
  },
  {
    "text": "the patch is the abstraction of a 2d area so basically M flot lip has a line as a base class and a patch as a base",
    "start": "4211280",
    "end": "4217800"
  },
  {
    "text": "class so rectangles polygons ellipses all of that stuff is a patch so if you want to see the different box styles",
    "start": "4217800",
    "end": "4226040"
  },
  {
    "text": "that are out there left Arrow right arrow round we we've looked at round and Sal tooth",
    "start": "4226040",
    "end": "4232120"
  },
  {
    "text": "these things also have optional parameters that you can pass in so I'm going to just use a different one like a",
    "start": "4232120",
    "end": "4238159"
  },
  {
    "text": "right arrow is a different style we can",
    "start": "4238159",
    "end": "4243199"
  },
  {
    "text": "use so you there there's all various things and you can control some padding and things like that so again this is",
    "start": "4253000",
    "end": "4261000"
  },
  {
    "text": "the work of our friend JJ since we're out of time I'm just",
    "start": "4261000",
    "end": "4266560"
  },
  {
    "text": "going to highlight some stuff you may have seen we have very um a lot of",
    "start": "4266560",
    "end": "4272239"
  },
  {
    "text": "support for annotations so basically an annotation is I want some text to point to Something in My figure and you can",
    "start": "4272239",
    "end": "4280040"
  },
  {
    "text": "sub you can each one of these things there's basically the point you want to",
    "start": "4280040",
    "end": "4285080"
  },
  {
    "text": "end annotate is XY so here I'm I'm annotating this point at 2 minus",
    "start": "4285080",
    "end": "4290199"
  },
  {
    "text": "one and my my text also has an XY location so very simply those are two",
    "start": "4290199",
    "end": "4296239"
  },
  {
    "text": "different things but what we support is the ability to specify those coordinate systems in many different ways so you",
    "start": "4296239",
    "end": "4302840"
  },
  {
    "text": "here for example my X Y coordinates are data that's your standard data coordinate system that you're used to working in but you can you can specify",
    "start": "4302840",
    "end": "4309920"
  },
  {
    "text": "your XY in data if you want you can say in data I want my my text to be here or",
    "start": "4309920",
    "end": "4315040"
  },
  {
    "text": "you can I want it to be an offset from my data in points so points are printer 72 points per inch this is basically",
    "start": "4315040",
    "end": "4321360"
  },
  {
    "text": "saying 100 points to the left and 60 points above so it's just a relative",
    "start": "4321360",
    "end": "4326920"
  },
  {
    "text": "physical position to your data that's where you want your text to live and then you can connect connect your",
    "start": "4326920",
    "end": "4332280"
  },
  {
    "text": "annotation with an arrow and there's a lot of Arrow Styles so this is a fancy",
    "start": "4332280",
    "end": "4337480"
  },
  {
    "text": "Arrow it's got a face color of 0.6 that's gray an edge color of none so there's no Edge color um basically we",
    "start": "4337480",
    "end": "4345880"
  },
  {
    "text": "say we're connecting to this ellipse so rather than the center of the ellipse that we're annotating is actually here",
    "start": "4345880",
    "end": "4351520"
  },
  {
    "text": "that's the that's the point it's annotating but we're informing it you're annotating this ellipse so just point to",
    "start": "4351520",
    "end": "4358639"
  },
  {
    "text": "the edge of the ellipse so you can actually tell it the the physic even though you're annotating a coordinate",
    "start": "4358639",
    "end": "4364440"
  },
  {
    "text": "system you can tell it the the the shape of the thing that it's annotating and it will look at where that is and make sure",
    "start": "4364440",
    "end": "4370920"
  },
  {
    "text": "it doesn't go inside it um so there's a lot of things you can do there with",
    "start": "4370920",
    "end": "4376600"
  },
  {
    "text": "connection Styles I mean you know this is again JJ stuff you I'll just show you",
    "start": "4376600",
    "end": "4382800"
  },
  {
    "text": "without if I don't for example tell it what that patch looks like it goes into the",
    "start": "4382800",
    "end": "4389000"
  },
  {
    "text": "center and I you know I can say I want this to be at minus 60 which would be below and it comes in",
    "start": "4389199",
    "end": "4396400"
  },
  {
    "text": "from below so there's a lot of ways of of of specifying annotations there these",
    "start": "4396400",
    "end": "4402040"
  },
  {
    "text": "are just two other examples showing you the kinds of things you can do and I'm",
    "start": "4402040",
    "end": "4407320"
  },
  {
    "text": "going to call it quits because we're just over 3:00 but the last thing in this worksheet is how to create your own",
    "start": "4407320",
    "end": "4413159"
  },
  {
    "text": "color mapping so if you want to write we probably have hundreds of color Maps inside matplot lib if you want to write",
    "start": "4413159",
    "end": "4419600"
  },
  {
    "text": "your own um it's here one of the things Paul's interested in working on and we might even have a Google summer of code",
    "start": "4419600",
    "end": "4425960"
  },
  {
    "text": "is writing a color map editing tool you've probably seen these things in like Adobe Photoshop where you can drag",
    "start": "4425960",
    "end": "4432920"
  },
  {
    "text": "the segments to show the RGB of the color mapping we want to write a tool like that using the map plot lib event",
    "start": "4432920",
    "end": "4438440"
  },
  {
    "text": "handling so we can deploy it across",
    "start": "4438440",
    "end": "4442480"
  },
  {
    "text": "platform",
    "start": "4450600",
    "end": "4453600"
  }
]