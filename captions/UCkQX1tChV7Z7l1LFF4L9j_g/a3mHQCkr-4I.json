[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "good afternoon I think we're gonna get started Peter and I want to thank you for",
    "start": "3780",
    "end": "9210"
  },
  {
    "text": "attending our talk and for the opportunity to come here and to speak to share a little bit of our experience with you we're excited we hope you enjoy",
    "start": "9210",
    "end": "17039"
  },
  {
    "text": "it we'll be talking about monkeys and lab coats or break you know breaking things on purpose and production how we",
    "start": "17039",
    "end": "23070"
  },
  {
    "text": "have we do automatic failure testing and how we made it work at Netflix so as as",
    "start": "23070",
    "end": "29730"
  },
  {
    "text": "the professor on stage it's probably fitting for me to begin with a quote by Aristotle a quote or a cliche if you",
    "start": "29730",
    "end": "35670"
  },
  {
    "text": "like that I'm sure you're familiar with the whole is greater than some of its parts and we've probably seen this quote interpreted in various ways in different",
    "start": "35670",
    "end": "42840"
  },
  {
    "text": "context but the way I'd like us to interpret it in this context because this is a talk about collaboration and",
    "start": "42840",
    "end": "48330"
  },
  {
    "text": "how it can work is that if a collaboration is done well and carefully we can walk away with it from with much",
    "start": "48330",
    "end": "56040"
  },
  {
    "text": "more than sort of the mere totality of what we've brought to it that is to say collaboration when done right can be a",
    "start": "56040",
    "end": "63180"
  },
  {
    "text": "multiplier oh one other point I'd like to make and this might be sort of a controversial point is that it seems to",
    "start": "63180",
    "end": "69090"
  },
  {
    "text": "me from my experience that the further apart you begin sort of the further you",
    "start": "69090",
    "end": "74880"
  },
  {
    "text": "walk from two poles to a a middle where you meet when you do a collaboration the richer the opportunities for",
    "start": "74880",
    "end": "81600"
  },
  {
    "text": "multiplicative effect I hope will convince you of this today and so just to give you an idea of just how far",
    "start": "81600",
    "end": "87600"
  },
  {
    "text": "apart Colton and I began let me give a little bit of introduction of us so I'm",
    "start": "87600",
    "end": "93659"
  },
  {
    "text": "Peter Alvaro I'm an assistant professor of computer science at UC Santa Cruz before that I was a PhD student for many",
    "start": "93659",
    "end": "99990"
  },
  {
    "text": "years at UC Berkeley and before that I was a software engineer for about eight or nine years in industry when I left",
    "start": "99990",
    "end": "106830"
  },
  {
    "text": "industry I swore I'd never go back so never say never something that I have to",
    "start": "106830",
    "end": "112080"
  },
  {
    "text": "come clean about for this crowd even though it's a little bit embarrassing is that I'm really a prototype er at heart",
    "start": "112080",
    "end": "117780"
  },
  {
    "text": "I'm so all about the idea that once I convince myself that the idea is",
    "start": "117780",
    "end": "123240"
  },
  {
    "text": "possible by constructing a prototype I'm not that great at finishing it I wish",
    "start": "123240",
    "end": "128700"
  },
  {
    "text": "somebody else would take care of that that mere engineering and so this collaboration was quite a learning experience for me being forced to push",
    "start": "128700",
    "end": "135300"
  },
  {
    "text": "stuff all the way through so hi my name is Colton Andrus I cut my teeth on failure testing at Amazon we",
    "start": "135300",
    "end": "142409"
  },
  {
    "text": "were on the retail website availability team and I had the opportunity to build a failure injection system there to help",
    "start": "142409",
    "end": "148830"
  },
  {
    "text": "us become more resilient after that I went to Netflix I figure if there's a place that you can go and learn more",
    "start": "148830",
    "end": "154769"
  },
  {
    "text": "about failure testing Netflix has got to be the place and indeed it was but when",
    "start": "154769",
    "end": "159840"
  },
  {
    "text": "I got there I found that there was some opportunity to improve I had an opportunity to contribute and to build",
    "start": "159840",
    "end": "165150"
  },
  {
    "text": "kind of the next generation of the monkeys there with fit a failure injection service at both companies I've",
    "start": "165150",
    "end": "172260"
  },
  {
    "text": "had the privilege to serve as a call leader or an engineering crisis manager someone who's nominated to manage",
    "start": "172260",
    "end": "179700"
  },
  {
    "text": "large-scale incidents to be on the phone to help resolve it to figure out what's wrong and truth be told I kind of miss",
    "start": "179700",
    "end": "186900"
  },
  {
    "text": "getting paged at 2:00 in the morning there's a little rush that comes with oh this is broken for everybody I can fix",
    "start": "186900",
    "end": "193500"
  },
  {
    "text": "it to further emphasize how different we were at the beginning of this",
    "start": "193500",
    "end": "198720"
  },
  {
    "text": "collaboration I think it's worthwhile looking at the figures of Merit for our respective communities how does in an",
    "start": "198720",
    "end": "204150"
  },
  {
    "text": "academic versus a practitioner measure whether they're on the right track whether they're achieving success and so",
    "start": "204150",
    "end": "210450"
  },
  {
    "text": "as an academic one of the most important sort of KPIs is the so called h-index can I see a show of hands who knows what",
    "start": "210450",
    "end": "216510"
  },
  {
    "text": "an h-index is hey some people know okay so my H index is K if my K most cited",
    "start": "216510",
    "end": "223739"
  },
  {
    "text": "papers have been cited at least K times yeah so it's sort of a you know slightly",
    "start": "223739",
    "end": "229799"
  },
  {
    "text": "sophisticated retweet count we're also measured by our ability to do",
    "start": "229799",
    "end": "235319"
  },
  {
    "text": "research in the future which really just comes down to dollars cost about a half a million dollars to mint a PhD so how",
    "start": "235319",
    "end": "242669"
  },
  {
    "text": "many millions have you brought in from grants from gifts from industry and things like that and arguably maybe most",
    "start": "242669",
    "end": "249870"
  },
  {
    "text": "important how high is your department ranked among other departments in the United States in terms of the quality of",
    "start": "249870",
    "end": "254910"
  },
  {
    "text": "research that you're doing so three different KPIs that collectively tell me how I'm doing as an academic measured",
    "start": "254910",
    "end": "262109"
  },
  {
    "text": "very narrowly based on my impact on other academics so it's just a",
    "start": "262109",
    "end": "268650"
  },
  {
    "text": "popularity contest it is a popular contest and that's why it's important to remain popular because popularity",
    "start": "268650",
    "end": "273930"
  },
  {
    "text": "contests work out great for for popular kids so what do we care about an",
    "start": "273930",
    "end": "279270"
  },
  {
    "text": "industry we have some hard metrics you're probably familiar with that measure whether or not we're winning",
    "start": "279270",
    "end": "284430"
  },
  {
    "text": "whether we're successful at what we're trying to accomplish the measure of availability however you slice and dice",
    "start": "284430",
    "end": "289800"
  },
  {
    "text": "it is an important one the number of 9s that you're able to serve to your customers to me we're winning if we have",
    "start": "289800",
    "end": "295590"
  },
  {
    "text": "four nines or five nines of availability our customers essentially never understand that we're down then what",
    "start": "295590",
    "end": "302520"
  },
  {
    "text": "happens next is the number of incidents so sometimes it's also the severity that goes into the the overall metric but if",
    "start": "302520",
    "end": "308910"
  },
  {
    "text": "you're on calls all the time if your things are broken all the time no one's happy customers aren't happy management",
    "start": "308910",
    "end": "314550"
  },
  {
    "text": "isn't happy engineers aren't happy and lastly and I think most importantly I'm lazy so if there's something I can do to",
    "start": "314550",
    "end": "321960"
  },
  {
    "text": "reduce my operational burden if there's something I can do so that I don't have to firefight in the middle of the night",
    "start": "321960",
    "end": "327330"
  },
  {
    "text": "then I'm all about that so kind of an",
    "start": "327330",
    "end": "332580"
  },
  {
    "start": "329000",
    "end": "457000"
  },
  {
    "text": "unlikely team in academic and and an industry collaborator so how did this come to be so I want to I want to",
    "start": "332580",
    "end": "339390"
  },
  {
    "text": "provide a little backstory here but I also want to provide a little context so",
    "start": "339390",
    "end": "345600"
  },
  {
    "text": "before we dive into how this came to be let me tell you a little bit about fit so I mentioned fit or failure as a",
    "start": "345600",
    "end": "351510"
  },
  {
    "text": "service is what we built at Netflix and it enabled us to do this collaboration because it provided a couple of key",
    "start": "351510",
    "end": "357660"
  },
  {
    "text": "things fit is built to be application layer failure testing and so what it",
    "start": "357660",
    "end": "362790"
  },
  {
    "text": "enabled us to do is decorate individual requests as they entered the Netflix ecosystem and follow that request as it",
    "start": "362790",
    "end": "370290"
  },
  {
    "text": "traveled its path and break anything we want along the lines it integrated with",
    "start": "370290",
    "end": "375360"
  },
  {
    "text": "our tracing infrastructure so we could see what happened and it led us that that fine-grained granularity allowed us",
    "start": "375360",
    "end": "381960"
  },
  {
    "text": "to control the blast radius or the potential for who we were going to impact so we could start and we often",
    "start": "381960",
    "end": "388200"
  },
  {
    "text": "did start by testing a single user mine usually or a single device maybe the",
    "start": "388200",
    "end": "393300"
  },
  {
    "text": "Xbox I have maybe my browser and as we saw that that worked as we expected then",
    "start": "393300",
    "end": "398340"
  },
  {
    "text": "we built upon that we increased the failure scope so then we might run for a percentage of customer traffic",
    "start": "398340",
    "end": "404070"
  },
  {
    "text": "then we might run for 10% of customer traffic and I find that the successful failure test that we ran our goal was",
    "start": "404070",
    "end": "410700"
  },
  {
    "text": "always to run it at scale at a hundred percent in production so you may not have known this but we've done this",
    "start": "410700",
    "end": "416670"
  },
  {
    "text": "several times and probably while you're watching Netflix maybe it manifest is the ratings go away or things change but",
    "start": "416670",
    "end": "423570"
  },
  {
    "text": "but we were able to to do this successfully the last bit I'll say about this is we",
    "start": "423570",
    "end": "428850"
  },
  {
    "text": "built it as a service we wanted other people to be able to extend this idea and to build upon it in ways that we",
    "start": "428850",
    "end": "434400"
  },
  {
    "text": "didn't anticipate and so we provided a service API and we allow it to be extended upon I'll leaves giving a talk",
    "start": "434400",
    "end": "442260"
  },
  {
    "text": "tomorrow about chap which I'd recommend that you attend but chap is built upon fit so the infrastructure and the the",
    "start": "442260",
    "end": "450390"
  },
  {
    "text": "failure service that fit provided allowed them to do these more interesting experiments on top of it so",
    "start": "450390",
    "end": "458040"
  },
  {
    "start": "457000",
    "end": "518000"
  },
  {
    "text": "great fit works great we went out we were able to use it to help improve the reliability of both the edge services",
    "start": "458040",
    "end": "464220"
  },
  {
    "text": "that we owned and Netflix as a whole but it's primarily a manual process we would",
    "start": "464220",
    "end": "470760"
  },
  {
    "text": "work with engineers we would sit down with teams we would talk about what could go wrong and we would work through",
    "start": "470760",
    "end": "476280"
  },
  {
    "text": "those exercises now obviously we would prefer something that would scale without the number of engineers involved",
    "start": "476280",
    "end": "482870"
  },
  {
    "text": "so surely there's got to be a better way and the opportunity here was for me to",
    "start": "482870",
    "end": "488430"
  },
  {
    "text": "be able out and to look for people smarter than I who might have figured out this problem and lo and behold I'm",
    "start": "488430",
    "end": "495450"
  },
  {
    "text": "at my desk it was holiday break 2014 and I'm watching this video from this interesting-looking professor guy and",
    "start": "495450",
    "end": "502680"
  },
  {
    "text": "he's talking about lineage driven fault injection and I I listened to this talk and I go read the paper and it's it's",
    "start": "502680",
    "end": "510060"
  },
  {
    "text": "very interesting I thought AHA this is it this is a way that we could go about doing failure testing for everyone",
    "start": "510060",
    "end": "516659"
  },
  {
    "text": "automatically so how do you get how do you get time with a professor well one",
    "start": "516660",
    "end": "523770"
  },
  {
    "start": "518000",
    "end": "568000"
  },
  {
    "text": "you blind email their CS that berkeley.edu email address and you say",
    "start": "523770",
    "end": "529320"
  },
  {
    "text": "hey I read your talk and I saw your presentation I'd love to chat more I'll",
    "start": "529320",
    "end": "535140"
  },
  {
    "text": "come to you in the city and by lunch would you like to get together and truer",
    "start": "535140",
    "end": "541710"
  },
  {
    "text": "words were never spoken because grad students and I was actually grad student at the time grad students and professors are extremely lazy and",
    "start": "541710",
    "end": "548520"
  },
  {
    "text": "extremely hungry so so you know buy me buy me lunch sometime so Colton came to the city and he bought me lunch it's a",
    "start": "548520",
    "end": "554880"
  },
  {
    "text": "really nice lunch and we had a great talk I shared some my ideas I I went a little deeper into LDF I that then I did",
    "start": "554880",
    "end": "561060"
  },
  {
    "text": "in the paper right so Colton learned some things and uh Colton told me more about the Netflix infrastructure that I",
    "start": "561060",
    "end": "566730"
  },
  {
    "text": "had ever known or maybe even wanted to know and it could have ended there you know that would have been an example of",
    "start": "566730",
    "end": "573450"
  },
  {
    "start": "568000",
    "end": "755000"
  },
  {
    "text": "like an additive collaboration where we both come to the table of some things we know and we we trade a couple things",
    "start": "573450",
    "end": "579240"
  },
  {
    "text": "Colton goes back to to Netflix knowing a little bit more about the academic take on how to automate failure testing I go",
    "start": "579240",
    "end": "585420"
  },
  {
    "text": "back to academia with a little bit more street cred next time I write a paper I might have a case study that looks a",
    "start": "585420",
    "end": "591240"
  },
  {
    "text": "little bit like Netflix and has a little bit you know it looks like a realistic use case right but I know from experience that that",
    "start": "591240",
    "end": "598500"
  },
  {
    "text": "this kind of additive collaboration doesn't really move the needle much it doesn't really advance the state of the",
    "start": "598500",
    "end": "604320"
  },
  {
    "text": "art it would be additive right so fast",
    "start": "604320",
    "end": "610800"
  },
  {
    "text": "forward a couple of weeks Peter calls me up and he says hey I've got a crazy idea what if we built this do you like",
    "start": "610800",
    "end": "617820"
  },
  {
    "text": "Netflix is a hip place they're open to taking risk do you think that that they'd let us go build it and Netflix is",
    "start": "617820",
    "end": "624090"
  },
  {
    "text": "pretty good one of their core values freedom and responsibility if you you",
    "start": "624090",
    "end": "629910"
  },
  {
    "text": "have the freedom to make choices and to take risks and you're responsible for the outcome so I went and I spoke to my",
    "start": "629910",
    "end": "635550"
  },
  {
    "text": "management and then they grilled me a little bit on the value and and how it would translate into to real value for",
    "start": "635550",
    "end": "641820"
  },
  {
    "text": "our customers but in the end we were able to convince him and so Peter came and was my professor intern for a summer",
    "start": "641820",
    "end": "647760"
  },
  {
    "text": "as we we went about exploring this idea and you know just to pop up a level you",
    "start": "647760",
    "end": "654480"
  },
  {
    "text": "know I made a big deal in the very beginning of this talk about how different we were this was really a point of convergence for us at least",
    "start": "654480",
    "end": "660300"
  },
  {
    "text": "within Netflix the responsibilities and freedom of Engineers look very much like the story in academia right and I could",
    "start": "660300",
    "end": "667440"
  },
  {
    "text": "even we don't have any bosses we're completely free but as Milton said we're free to fall right any chance we",
    "start": "667440",
    "end": "675870"
  },
  {
    "text": "take any gamble that we take all we're putting on the line is our is the success of our career and so both of us",
    "start": "675870",
    "end": "682500"
  },
  {
    "text": "a little bit concerned about this responsibility did some due diligence before we did our collaboration we both",
    "start": "682500",
    "end": "688290"
  },
  {
    "text": "wrote down individually what we wanted to get out of this summer how we would know if we had succeeded and when we",
    "start": "688290",
    "end": "694740"
  },
  {
    "text": "compared notes we were delighted to find that we had written more or less the same things so for my part it's really",
    "start": "694740",
    "end": "701430"
  },
  {
    "text": "important to me to take these ideas that we've developed in the lab these idealize models of reality and to",
    "start": "701430",
    "end": "707490"
  },
  {
    "text": "provide evidence that that they match reality right equally important you know",
    "start": "707490",
    "end": "714270"
  },
  {
    "text": "we want to be able to show that our algorithms actually work at real-world scale because as many of you know or",
    "start": "714270",
    "end": "720060"
  },
  {
    "text": "maybe don't know in the lab we don't have large-scale systems right we're forced to simulate them and we're always",
    "start": "720060",
    "end": "726840"
  },
  {
    "text": "afraid maybe we're quiet about it but always afraid that because we're creative people we're inventing and",
    "start": "726840",
    "end": "732570"
  },
  {
    "text": "solving imaginary problems rather than addressing real-world ones right and then arguably most importantly when I",
    "start": "732570",
    "end": "738720"
  },
  {
    "text": "returned after that summer to the lab I wanted to return with a treasure chest full of real bugs from real systems that",
    "start": "738720",
    "end": "746250"
  },
  {
    "text": "wouldn't have been found without our work and it turned out that Colton had",
    "start": "746250",
    "end": "751290"
  },
  {
    "text": "more or less written down the same exact thanks oh right so now it's time to dive",
    "start": "751290",
    "end": "759390"
  },
  {
    "start": "755000",
    "end": "1257000"
  },
  {
    "text": "down and talk a little bit about the idea behind LD fi that so attracted : what is the main idea and how does it",
    "start": "759390",
    "end": "765780"
  },
  {
    "text": "work right considering microservices based company in which a large number of",
    "start": "765780",
    "end": "772110"
  },
  {
    "text": "services that are independently maintained interact yes well what does it mean for a user to have a successful",
    "start": "772110",
    "end": "778290"
  },
  {
    "text": "interaction with something like that that might involve connecting some large",
    "start": "778290",
    "end": "783510"
  },
  {
    "text": "number of services let's say like 100 services at the end of the talk we'll see an example in which a single interaction actually involves",
    "start": "783510",
    "end": "789180"
  },
  {
    "text": "cooperation of a hundred services and in order to have confidence that those interactions work correctly under fault",
    "start": "789180",
    "end": "795480"
  },
  {
    "text": "to a first approximation we would need to see what they do under every possible",
    "start": "795480",
    "end": "800730"
  },
  {
    "text": "combination of false right so if we have a hundred services that are rating at least back-of-the-envelope we",
    "start": "800730",
    "end": "807930"
  },
  {
    "text": "have to consider the set of all subsets that's 2 to the 100 different experiments that we would need to perform to cover the space exhaustively",
    "start": "807930",
    "end": "815160"
  },
  {
    "text": "exhaustively that's like a one with with 30 zeros after it right so that's obviously not going to work now we might",
    "start": "815160",
    "end": "820230"
  },
  {
    "text": "not be ambitious we might say well we're going to consider what happens when one service falls down during an interaction",
    "start": "820230",
    "end": "825480"
  },
  {
    "text": "and that's tractable that's like a hundred execution so you imagine that these experiments are going to run order of seconds right but if we turn the dial",
    "start": "825480",
    "end": "833790"
  },
  {
    "text": "up to four faults we're looking at three million executions if we consider up to seven faults happening we're looking at",
    "start": "833790",
    "end": "839820"
  },
  {
    "text": "16 billion experiments we would need to run this this isn't going to work right we need to do something smarter now an",
    "start": "839820",
    "end": "846630"
  },
  {
    "text": "approach like chaos monkey which was pioneered in Netflix says well it's hard to do much you know like when you do",
    "start": "846630",
    "end": "852720"
  },
  {
    "text": "random you certainly don't hit the worst case right so we could flip coins and that's pretty much what chaos monkey does you imagine there's this dartboard",
    "start": "852720",
    "end": "859230"
  },
  {
    "text": "characterizing the space of possible experiments under failure and chaos monkey randomly picks failures to inject",
    "start": "859230",
    "end": "865230"
  },
  {
    "text": "some of them are fairly deep in the space some are quite shallow right now",
    "start": "865230",
    "end": "870300"
  },
  {
    "text": "the advantage of random search is that it's very easy to automate right random search works equally well on any",
    "start": "870300",
    "end": "876120"
  },
  {
    "text": "infrastructure you don't need to tune it to an infrastructure unfortunately random search doesn't work very well on",
    "start": "876120",
    "end": "881310"
  },
  {
    "text": "any infrastructure right and certainly it doesn't give us any notion of coverage like let's say there's a point",
    "start": "881310",
    "end": "887160"
  },
  {
    "text": "out here where there's a known bug what are the odds we're gonna hit it with a dart and can we ever hope to blacken",
    "start": "887160",
    "end": "892560"
  },
  {
    "text": "this this dart board by stabbing into it at random right the Sun will be burnt out before we finish an approach that's",
    "start": "892560",
    "end": "900030"
  },
  {
    "text": "more popular in practice when the colton already alluded to that that the users are fit to is to exploit the intuition",
    "start": "900030",
    "end": "906720"
  },
  {
    "text": "of the actual service owners right in a service oriented architecture different teams manage different services there's",
    "start": "906720",
    "end": "912420"
  },
  {
    "text": "quite a bit of deep knowledge on a service by service basis so you can exploit that knowledge and do a sort of engineer guided walk through the fault",
    "start": "912420",
    "end": "919740"
  },
  {
    "text": "space achieving much better coverage exploring some deep faults and some narrow faults but unfortunately unlike",
    "start": "919740",
    "end": "926340"
  },
  {
    "text": "random search this approach is fundamentally unscalable right it's only as good as the intuition of the",
    "start": "926340",
    "end": "931620"
  },
  {
    "text": "programmers and it only scales with humans right so the i main idea is to",
    "start": "931620",
    "end": "938310"
  },
  {
    "text": "kind of - main idea behind lineage and fault injection the first is that you know fault tolerance is really just redundancy like",
    "start": "938310",
    "end": "946080"
  },
  {
    "text": "definitionally fault ha and redundancy are like synonyms a system is fault tolerant precisely if it provides more",
    "start": "946080",
    "end": "952590"
  },
  {
    "text": "ways to obtain some good or expected outcome than we anticipate there will be failures in an execution right so if we",
    "start": "952590",
    "end": "960060"
  },
  {
    "text": "could spot the redundancy in a system we could know what faults it can tolerate",
    "start": "960060",
    "end": "965310"
  },
  {
    "text": "or conversely what faults would make it fall down but how do we know redundancy when we see it so another key idea of LB",
    "start": "965310",
    "end": "973470"
  },
  {
    "text": "fi is that instead of starting with this really open-ended question like this is how we do verification with model",
    "start": "973470",
    "end": "979260"
  },
  {
    "text": "checkers we say could a bad thing ever happen let's just check every state in the state space and say that a bad thing",
    "start": "979260",
    "end": "984270"
  },
  {
    "text": "never happens when the state space is large this gives us very little direction about how to carry out the",
    "start": "984270",
    "end": "989730"
  },
  {
    "text": "search right a better idea is to begin with some good outcome or some",
    "start": "989730",
    "end": "997530"
  },
  {
    "text": "representative class of good outcomes and say exactly why did the good thing",
    "start": "997530",
    "end": "1002630"
  },
  {
    "text": "happen and you know could the system have made any wrong turns along the way the answers to those questions are going",
    "start": "1002630",
    "end": "1007970"
  },
  {
    "text": "to turn out to be the much smaller set of faults that are going to be interesting to spend resources injecting",
    "start": "1007970",
    "end": "1015560"
  },
  {
    "text": "ok now I come from a database background and in the database world when we think",
    "start": "1015560",
    "end": "1020810"
  },
  {
    "text": "about how we explain why things happen a really popular tool is provenance or",
    "start": "1020810",
    "end": "1025939"
  },
  {
    "text": "lineage a succinct explanation of the data and computational steps that led to",
    "start": "1025940",
    "end": "1031640"
  },
  {
    "text": "some outcome so let's take a look at lineage a little bit more deeply let's consider a good thing that happened in",
    "start": "1031640",
    "end": "1037760"
  },
  {
    "text": "some execution you imagine it's a system like Cassandra the good thing that happened was that we did it right and it was acknowledged and it was durably",
    "start": "1037760",
    "end": "1044180"
  },
  {
    "text": "stored you say well that's good why was it good so we start to unroll in this well the rate was stable because it was",
    "start": "1044180",
    "end": "1050900"
  },
  {
    "text": "stored on some replicas replicas a but that's not the only reason it was stable it was stable also because it was stored",
    "start": "1050900",
    "end": "1056450"
  },
  {
    "text": "on another replicas replicas B its redundancy right ok but we continue",
    "start": "1056450",
    "end": "1061700"
  },
  {
    "text": "asking this why question why was it stored on replicas a well because the client broadcasted its replicas but",
    "start": "1061700",
    "end": "1066920"
  },
  {
    "text": "there might have been more than one broadcast there might be more than one reason it's on replicas a right so when we're done recursively asking why",
    "start": "1066920",
    "end": "1072860"
  },
  {
    "text": "since were left with this graph that essentially shows us how the good thing happened and what redundancy there was",
    "start": "1072860",
    "end": "1079460"
  },
  {
    "text": "in the system to support it right so now we can start to ask okay could I make",
    "start": "1079460",
    "end": "1085370"
  },
  {
    "text": "any cuts in this graph that could prevent flow from the leaves to the root",
    "start": "1085370",
    "end": "1090530"
  },
  {
    "text": "right so naively the replicas could fail or the broadcast could fail that's four",
    "start": "1090530",
    "end": "1096590"
  },
  {
    "text": "things that could go wrong so that's two to the four experiments that we could carry out sixteen experiments but it's",
    "start": "1096590",
    "end": "1102260"
  },
  {
    "text": "easy to see just looking at this graph that not all those experiments are interesting right like it wouldn't be it wouldn't be interesting to fill these",
    "start": "1102260",
    "end": "1108470"
  },
  {
    "text": "two things because I can see that there's a path from leaf to roof right by contrast those two failures look",
    "start": "1108470",
    "end": "1115280"
  },
  {
    "text": "promising right because they block the flow okay well how do we take this kind of human intuition staring at a graph and turn it",
    "start": "1115280",
    "end": "1122270"
  },
  {
    "text": "into a problem that a computer can solve efficiently right well we can just sort of mine out the individual sort of sub",
    "start": "1122270",
    "end": "1128690"
  },
  {
    "text": "trees that are themselves sufficient to produce the outcome like a client could broadcast saying I could get two replicas and would be stable we say okay",
    "start": "1128690",
    "end": "1135650"
  },
  {
    "text": "well what would it take to break that subtree well we could crash replica a or block broadcast one we said wait a",
    "start": "1135650",
    "end": "1142940"
  },
  {
    "text": "minute there's more than one subtree here's another one and to break the whole system we'd have to break both of those sub trees so we'd have to do this and this yeah and so we just keep",
    "start": "1142940",
    "end": "1150980"
  },
  {
    "text": "turning the crank mining out these sub trees until we've exhausted them all and along the way we've caused up this",
    "start": "1150980",
    "end": "1156350"
  },
  {
    "text": "boolean formula which you may recognize as already being in conjunctive normal form so we could just take this formula",
    "start": "1156350",
    "end": "1163520"
  },
  {
    "text": "as it is and pass it to an efficient off-the-shelf Sat solver and say are there any solutions to this formula the",
    "start": "1163520",
    "end": "1169580"
  },
  {
    "text": "solutions to the formula are going to represent faults that are interesting to inject that could break the flow for",
    "start": "1169580",
    "end": "1175880"
  },
  {
    "text": "example here's a suggestion interrupt these two broadcasts okay so what we get",
    "start": "1175880",
    "end": "1181790"
  },
  {
    "text": "out of this and indeed what we wanted was every time we cast a dart into this dart board we don't just cast it",
    "start": "1181790",
    "end": "1187160"
  },
  {
    "text": "randomly we cast it into a region that we can prove based on our model is interesting could break the expected",
    "start": "1187160",
    "end": "1193490"
  },
  {
    "text": "outcome but more importantly every time we cast a dart into the dart board it casts a shadow over the search space",
    "start": "1193490",
    "end": "1199490"
  },
  {
    "text": "that we never need to explore again we add constraints to our model and our solution space diminishes",
    "start": "1199490",
    "end": "1206269"
  },
  {
    "text": "quickly so at a high level when Colton I began our collaboration I said Colton",
    "start": "1206269",
    "end": "1212690"
  },
  {
    "text": "here's the recipe for LD fi it's easy you have all the pieces it'll be a snap you start with the successful outcome",
    "start": "1212690",
    "end": "1217999"
  },
  {
    "text": "and work backwards you ask why did it happen and this recursive process of asking and answering why questions gives",
    "start": "1217999",
    "end": "1224149"
  },
  {
    "text": "us a lineage graph which we can efficiently encode into a CNF formula solve the solutions represent hypotheses",
    "start": "1224149",
    "end": "1232099"
  },
  {
    "text": "that we should go experiment with using our fault injection infrastructure and when we run an experiment one of two",
    "start": "1232099",
    "end": "1238940"
  },
  {
    "text": "things happens right we find a bug in which case success or you know defeat or",
    "start": "1238940",
    "end": "1245389"
  },
  {
    "text": "something I'm not sure it depends how you look at it or we find evidence of additional redundancy and keep going around the loop until we run out of",
    "start": "1245389",
    "end": "1251419"
  },
  {
    "text": "moves so we're either going to end up at a bug or we're gonna run out of moves and say we've covered the space everything looks good great so we've got",
    "start": "1251419",
    "end": "1259879"
  },
  {
    "start": "1257000",
    "end": "1390000"
  },
  {
    "text": "an approach now we're gonna talk a little bit about what what the process looked like how it evolved over time how",
    "start": "1259879",
    "end": "1265789"
  },
  {
    "text": "we took this idea seems simple and straightforward maybe not simple seem straightforward and and wanted to apply it to production",
    "start": "1265789",
    "end": "1272450"
  },
  {
    "text": "and some of the challenges that we encounter ok so you know our recipe says step 1 is start with a successful",
    "start": "1272450",
    "end": "1278239"
  },
  {
    "text": "outcome so okay so like what it you know in Netflix what a success look like yes",
    "start": "1278239",
    "end": "1283339"
  },
  {
    "text": "this this was a fun question to ask Peter what is success well so you know when I did in the lab I was doing stuff",
    "start": "1283339",
    "end": "1290059"
  },
  {
    "text": "over sort of distributed databases so success was like a row that said it worked there's a zero return coder so",
    "start": "1290059",
    "end": "1295639"
  },
  {
    "text": "well you have return codes you do like request response over HTTP right so why don't we just say if we send the client",
    "start": "1295639",
    "end": "1301429"
  },
  {
    "text": "a 200 we're good yeah yeah that's an option we can see HTTP status 200 we can",
    "start": "1301429",
    "end": "1308029"
  },
  {
    "text": "give that a shot so we go out and we we run some requests and we look at some things oh yeah I mean let me tell you",
    "start": "1308029",
    "end": "1314929"
  },
  {
    "text": "about the dirty secrets of production be great if we all followed this convention and it was true all the time but in fact",
    "start": "1314929",
    "end": "1321529"
  },
  {
    "text": "we have a framework within Netflix that purposefully always returns a 200 and",
    "start": "1321529",
    "end": "1326629"
  },
  {
    "text": "wraps an error inside of it so why would you do a perverse thing like that",
    "start": "1326629",
    "end": "1332829"
  },
  {
    "text": "it's production man okay so kind of went back to the drawing",
    "start": "1332829",
    "end": "1340979"
  },
  {
    "text": "board here and we said okay well what what can we use to measure success so I want to draw on an Amazon leadership",
    "start": "1340979",
    "end": "1346799"
  },
  {
    "text": "principle that I'm fond of start with the customer and work backwards so when we're talking about what's des means we",
    "start": "1346799",
    "end": "1353669"
  },
  {
    "text": "can talk about it in very concrete terms success means that our customers were able to do what they were trying to do",
    "start": "1353669",
    "end": "1359639"
  },
  {
    "text": "that they didn't get an error and that something didn't prevent them from doing it in the case of Netflix can they string so really that's what we want to",
    "start": "1359639",
    "end": "1366749"
  },
  {
    "text": "measure so nice the nice thing is within Netflix then we have real user",
    "start": "1366749",
    "end": "1371879"
  },
  {
    "text": "monitoring built into our client-side devices that propagate back up information to the service about",
    "start": "1371879",
    "end": "1378019"
  },
  {
    "text": "successes and failures and in fact we were able to tie these in and learn",
    "start": "1378019",
    "end": "1383820"
  },
  {
    "text": "about whether a specific request had resulted in a customer facing error worth considering if you've seen this",
    "start": "1383820",
    "end": "1391470"
  },
  {
    "start": "1390000",
    "end": "1681000"
  },
  {
    "text": "screen before I apologize I it might have been us but I don't think so so we",
    "start": "1391470",
    "end": "1397979"
  },
  {
    "text": "want we want to catch those errors and we want to find them and we want to measure them so that we can have that feedback so we sort of solved our first",
    "start": "1397979",
    "end": "1405509"
  },
  {
    "text": "the first problem that presented itself to us and it's worth popping up a level and saying like what was it what was the resounding lesson for free Colton and",
    "start": "1405509",
    "end": "1411659"
  },
  {
    "text": "myself and for me it really had to do with when you feel like you're lost start with something that you know start",
    "start": "1411659",
    "end": "1417929"
  },
  {
    "text": "with the gold standard and kind of work backwards from that gold standard start in the middle of the maze and work your way out and so for me like in my",
    "start": "1417929",
    "end": "1424379"
  },
  {
    "text": "academic idealized model of reality it would never have occurred to me how to have customers be like part of the model",
    "start": "1424379",
    "end": "1430619"
  },
  {
    "text": "but thanks to Colton's insight on it I'll never again look at systems like LD Fi and fault injection in general",
    "start": "1430619",
    "end": "1435899"
  },
  {
    "text": "without sort of contextualizing success in the context of observable results for",
    "start": "1435899",
    "end": "1442950"
  },
  {
    "text": "end-users and and for me working backwards from what you know as I read the LD Fi papers I watched Peter's talk",
    "start": "1442950",
    "end": "1449369"
  },
  {
    "text": "I had it was an epiphany moment you know I'm a pessimistic person I like to think about all the things that could go wrong",
    "start": "1449369",
    "end": "1455239"
  },
  {
    "text": "sometimes that makes it a little bit more complicated a little bit more of an intractable problem but you know once",
    "start": "1455239",
    "end": "1461639"
  },
  {
    "text": "once Peter convinced me oh let's start from what went well and look at what it could have prevented it that narrowed my",
    "start": "1461639",
    "end": "1467970"
  },
  {
    "text": "my vision in our pro it allowed us to take a more directed solution awesome so one down three to go",
    "start": "1467970",
    "end": "1474420"
  },
  {
    "text": "right so the next thing that we need is to be able to ask and answer why questions what I would love is for you",
    "start": "1474420",
    "end": "1479640"
  },
  {
    "text": "to tell me that netflix has lineage what have you got so you're gonna be excited because we do we have tracing its built",
    "start": "1479640",
    "end": "1486840"
  },
  {
    "text": "in similar to dapper or Zipkin we have the ability to see where request travels through our system okay sounds legit",
    "start": "1486840",
    "end": "1495270"
  },
  {
    "text": "pictures worth a thousand words let's stare at a picture so Colton I spend a lot of time in front of the whiteboard pretty much every solution involved us",
    "start": "1495270",
    "end": "1502050"
  },
  {
    "text": "staring at a whiteboard for a while and one of us saying I've got it so we're looking at the whiteboard okay III buy",
    "start": "1502050",
    "end": "1509220"
  },
  {
    "text": "it so it's you know request comes in and hits API and it calls that fans out to some services that are required to satisfy that request and then it fans",
    "start": "1509220",
    "end": "1515370"
  },
  {
    "text": "back in and in some sense this is an explanation of how the system provided",
    "start": "1515370",
    "end": "1521429"
  },
  {
    "text": "its expected outcome and even nicer than that in addition to being an explanation it also identifies the inflection points",
    "start": "1521429",
    "end": "1527730"
  },
  {
    "text": "services at a very coarse grain where failures could happen so that's great",
    "start": "1527730",
    "end": "1532920"
  },
  {
    "text": "that's that's exactly what I wanted except yeah so there's one wrinkle with",
    "start": "1532920",
    "end": "1538020"
  },
  {
    "text": "this right where's the redundancy remember that graph I showed you where like there's replica a and replica B",
    "start": "1538020",
    "end": "1543740"
  },
  {
    "text": "where's the redundancy yeah there's not any redundancy in that graph I mean granted you know it's Netflix we",
    "start": "1543740",
    "end": "1551730"
  },
  {
    "text": "have redundancy everywhere I believe it redundancy in regions redundancy and hardware even redundancy in code well so",
    "start": "1551730",
    "end": "1557670"
  },
  {
    "text": "that's great but but but uh I need the redundancy to be in the graph because",
    "start": "1557670",
    "end": "1562830"
  },
  {
    "text": "because the way that LDF I prunes that giant space of inputs is is by recognizing the experiments it doesn't need to do based on the redundancy so so",
    "start": "1562830",
    "end": "1571440"
  },
  {
    "text": "you know like we knew this might not work out like maybe we should just cut our losses here right game over",
    "start": "1571440",
    "end": "1578130"
  },
  {
    "text": "ya know it was a good shot yeah but but it's three o'clock I don't have to go home for a little bit it's like stare at this thing for a",
    "start": "1578130",
    "end": "1584190"
  },
  {
    "text": "little longer what could we do so so what what could we do well we know there's redundancy like let's just go",
    "start": "1584190",
    "end": "1590760"
  },
  {
    "text": "break some stuff and let's see what happens like we got some time we got this request we pulled up the graph like",
    "start": "1590760",
    "end": "1596640"
  },
  {
    "text": "we know it's there let's go break some stuff and see what occurs that day all",
    "start": "1596640",
    "end": "1601679"
  },
  {
    "text": "right okay so we break it we run and it",
    "start": "1601679",
    "end": "1607060"
  },
  {
    "text": "doesn't result in a user-visible failure okay what it does result in is another",
    "start": "1607060",
    "end": "1613090"
  },
  {
    "text": "graph okay so I see what you did there you didn't need bookmark to satisfy the user because you have a bookmark",
    "start": "1613090",
    "end": "1618600"
  },
  {
    "text": "fallback but I'm still not you know I'm still not seeing any redundancy well but we know",
    "start": "1618600",
    "end": "1626020"
  },
  {
    "text": "it's there so what we need is we need to be able to need to be able to learn about it over time we know that the",
    "start": "1626020",
    "end": "1632320"
  },
  {
    "text": "fallback is there we know that give bookmark works but we need to somehow put that all in one graph that we can",
    "start": "1632320",
    "end": "1637750"
  },
  {
    "text": "solve oh of course so like you know I was coming with this model where a graph reveals redundancy",
    "start": "1637750",
    "end": "1644650"
  },
  {
    "text": "and now I'm giving a bunch of graphs that don't reveal redundancy what reveals redundancy is the site its behavior over time reveals its",
    "start": "1644650",
    "end": "1652240"
  },
  {
    "text": "redundancy what I need to do is think about these models of the system we're done of system redundancy as being much",
    "start": "1652240",
    "end": "1657820"
  },
  {
    "text": "longer lived something that we build over a longer time scale right so in fact very trivially we could take both",
    "start": "1657820",
    "end": "1664360"
  },
  {
    "text": "those graphs and route them under the same node and now it would be a graph",
    "start": "1664360",
    "end": "1670390"
  },
  {
    "text": "with ands and ORS now it would essentially capture the redundancy of the site and over time we can just imagine enriching this graph as we learn",
    "start": "1670390",
    "end": "1677500"
  },
  {
    "text": "about more successful executions despite faults yeah yeah oh man so I got to pay",
    "start": "1677500",
    "end": "1684310"
  },
  {
    "start": "1681000",
    "end": "2100000"
  },
  {
    "text": "homage to Colton on this one I I was so rigidly attached to my initial model of",
    "start": "1684310",
    "end": "1690700"
  },
  {
    "text": "what a lineage graph looked like that even if I had somehow been given VPN access to Netflix and could actually",
    "start": "1690700",
    "end": "1696280"
  },
  {
    "text": "look at these traces and look at these systems it would never have occurred to me to kind of pop up a level and think",
    "start": "1696280",
    "end": "1702700"
  },
  {
    "text": "about redundancy is something that's revealed over time in response to failures as opposed to an individual",
    "start": "1702700",
    "end": "1708610"
  },
  {
    "text": "executions so I got to hand it to you Matt and I like to think that you know",
    "start": "1708610",
    "end": "1713740"
  },
  {
    "text": "this is the kind of thing that maybe neither of us would have would have been able to do on our own this is like an example of that multiplicative effect",
    "start": "1713740",
    "end": "1719500"
  },
  {
    "text": "that I was talking about you know we're kind of starting at these two different poles and marching towards this middle point and when we get there we find that",
    "start": "1719500",
    "end": "1726400"
  },
  {
    "text": "we have more than either of us brought brought with us and I think really Peters too kind you know as we're",
    "start": "1726400",
    "end": "1732520"
  },
  {
    "text": "sitting here as we're white boarding as we're side-by-side trying to solve these problems you know we discuss it we",
    "start": "1732520",
    "end": "1738460"
  },
  {
    "text": "debate it we talk about trade-offs we find something that'll work and so this is this is exactly what comes of that so",
    "start": "1738460",
    "end": "1744460"
  },
  {
    "text": "back and forth some oh this doesn't work let's try this we get some more information and together we're able to",
    "start": "1744460",
    "end": "1749769"
  },
  {
    "text": "find a solution awesome so now we're really cooking with gas so the next",
    "start": "1749769",
    "end": "1755320"
  },
  {
    "text": "parts easy right we just have to take that graph and extract the subtrees as I showed you this is kind of my area and I also",
    "start": "1755320",
    "end": "1761890"
  },
  {
    "text": "wanted to prove to Colton that I could like write real code so I said I got this I'll like I'll code it up I'll code up the solver component",
    "start": "1761890",
    "end": "1767950"
  },
  {
    "text": "and so you know I gave myself I figured this would take about two hours I started going I installed IntelliJ that",
    "start": "1767950",
    "end": "1775750"
  },
  {
    "text": "actually used up the whole time budget actually and then I got Gradle working",
    "start": "1775750",
    "end": "1780909"
  },
  {
    "text": "okay so the next day I mean you know I'm like okay well how do you convert a",
    "start": "1780909",
    "end": "1786039"
  },
  {
    "text": "formula to CNF this is undergrad stuff right so it's undergrad stuff but it's still a pain in the ass I had to like write a",
    "start": "1786039",
    "end": "1791740"
  },
  {
    "text": "lot of notes figuring out how to distribute the ants over the ORS and so on and so forth figure out how to do",
    "start": "1791740",
    "end": "1797440"
  },
  {
    "text": "good commit messages and so suffice it to say after about you know three three and a half days of coding I committed",
    "start": "1797440",
    "end": "1802510"
  },
  {
    "text": "some code to the Netflix production repo code that I'm proud to say is running in",
    "start": "1802510",
    "end": "1808029"
  },
  {
    "text": "production at a company right now well minus the print lines yeah right I'm",
    "start": "1808029",
    "end": "1813909"
  },
  {
    "text": "sorry about the print lines so okay that's done and now it's just the victory lap right because we know how to",
    "start": "1813909",
    "end": "1819760"
  },
  {
    "text": "inject false we already got the great infrastructure for that we can just hook right into the API so it's just a matter of sort of doing a victory lap around",
    "start": "1819760",
    "end": "1825970"
  },
  {
    "text": "this thing and replaying the interactions as many times as we need to to either find a bug or you know find",
    "start": "1825970",
    "end": "1833080"
  },
  {
    "text": "more call graphs what are you looking at me like that for did you say replay now you know you replay the request I don't",
    "start": "1833080",
    "end": "1839889"
  },
  {
    "text": "know if that's gonna work why not well and we're talking about a distributed",
    "start": "1839889",
    "end": "1845289"
  },
  {
    "text": "system requests that are hitting things all down the line who knows what's gonna change underneath this who knows what",
    "start": "1845289",
    "end": "1850960"
  },
  {
    "text": "kind of state is gonna be mutated or things are gonna change just replay the gets oh so idempotence yeah so we can",
    "start": "1850960",
    "end": "1858669"
  },
  {
    "text": "leverage item phones right hmm that sounds like a reasonable approach who thinks that would work",
    "start": "1858669",
    "end": "1865330"
  },
  {
    "text": "yeah oh so many smart crowd smart crowd so so oh dude why is reality so ugly",
    "start": "1865330",
    "end": "1872769"
  },
  {
    "text": "this is so messed up and so and of course yeah it's not just a matter of the request might change something it's",
    "start": "1872769",
    "end": "1877960"
  },
  {
    "text": "like what's the point of replaying requests because the services are changing under you all the time you know like one is one is reminded of another",
    "start": "1877960",
    "end": "1883419"
  },
  {
    "text": "dusty old philosopher quotes out of Heraclitus who said you know you can never step in the same river twice and",
    "start": "1883419",
    "end": "1888999"
  },
  {
    "text": "that's not just because the river keeps flowing or because the foot changes the river but also because the foot changes",
    "start": "1888999",
    "end": "1894730"
  },
  {
    "text": "right there have never been two requests in the history of Netflix that are exactly the same so like we're",
    "start": "1894730",
    "end": "1900970"
  },
  {
    "text": "right like this is a good time to cut our losses right we had a lot of fun",
    "start": "1900970",
    "end": "1906909"
  },
  {
    "text": "over the summer to hit some spots oh no I think it's all this what we need is we",
    "start": "1906909",
    "end": "1914080"
  },
  {
    "text": "need to find a way that we can treat requests like they're replayable without actually replaying them okay can I",
    "start": "1914080",
    "end": "1919809"
  },
  {
    "text": "whiteboard for a little bit yeah all right so what you're saying interpreted through an academic lens is that we have",
    "start": "1919809",
    "end": "1925570"
  },
  {
    "text": "a Vince and balls problem right and we have this like infinite stream of requests no two of which are alike and",
    "start": "1925570",
    "end": "1931090"
  },
  {
    "text": "what we want to do though is we want to group them into some finite and manageable set of equivalence classes",
    "start": "1931090",
    "end": "1938619"
  },
  {
    "text": "among the requests in which any two requests if they map to the same bucket",
    "start": "1938619",
    "end": "1943929"
  },
  {
    "text": "we can treat the second one as if it was a replay of the first we could like",
    "start": "1943929",
    "end": "1949440"
  },
  {
    "text": "simulate replay with some sort of fuzzy notion of fungibility but that would",
    "start": "1949440",
    "end": "1955659"
  },
  {
    "text": "require R&R primed it like be the same according to some definition the sameness what does it mean to be the same well let's think about that I mean",
    "start": "1955659",
    "end": "1962049"
  },
  {
    "text": "we're doing failure testing so what we really care is do they fail the same and in some regards you know we want to know",
    "start": "1962049",
    "end": "1968409"
  },
  {
    "text": "do they behave the same well if we think about it we have these nice graphs that we already have that we're using to",
    "start": "1968409",
    "end": "1974409"
  },
  {
    "text": "answer this question that's brilliant it's almost like the same solution so those those call graphs that we used as as a proxy for lineage we can use a sort",
    "start": "1974409",
    "end": "1981999"
  },
  {
    "text": "of a proxy label for the classes right of two requests produce the same call graph then those two requests are",
    "start": "1981999",
    "end": "1987399"
  },
  {
    "text": "sensitive by assumption to the same failures right so so yeah so that's like",
    "start": "1987399",
    "end": "1992679"
  },
  {
    "text": "a class label but wait a minute hold on hold on in order to do the injection and",
    "start": "1992679",
    "end": "1997960"
  },
  {
    "text": "fit based on what you told me about fit we're gonna need to sort of annotate the things right when they come in yeah",
    "start": "1997960",
    "end": "2004140"
  },
  {
    "text": "which makes any decision as the request comes in with what data we have available which means that we need to be",
    "start": "2004140",
    "end": "2010050"
  },
  {
    "text": "able to predict the call graph that a request is going to produce when it fans out through this through the site before",
    "start": "2010050",
    "end": "2015390"
  },
  {
    "text": "it pans out through the site which means let's see we need to we need to learn a",
    "start": "2015390",
    "end": "2022440"
  },
  {
    "text": "function f that that we give it a request and it predicts a a call graph all I mean sounds like a supervised",
    "start": "2022440",
    "end": "2029490"
  },
  {
    "text": "learning problem tomorrow well Netflix has a lot of smart people that know way more about machine learning than I do so",
    "start": "2029490",
    "end": "2035670"
  },
  {
    "text": "let's go chat with them you know and we go and we sit down and we start talking to them and it turns out that we can't",
    "start": "2035670",
    "end": "2042510"
  },
  {
    "text": "just say they solved this problem for me and get back to me in two weeks we have to do some work to make it work we have",
    "start": "2042510",
    "end": "2048629"
  },
  {
    "text": "to do some scrubbing we have to make sure that the matching works correctly we have to try different algorithms and so what we found ourselves with was a",
    "start": "2048630",
    "end": "2055710"
  },
  {
    "text": "problem a conundrum we could either solve the machine learning problem which looks sweet and a lot of fun or we could",
    "start": "2055710",
    "end": "2063060"
  },
  {
    "text": "solve the failure testing one and since the failure testing one is the one we needed we chose that one so what is the",
    "start": "2063060",
    "end": "2069330"
  },
  {
    "text": "simplest thing that worked so credit to Peter here because you know I was a",
    "start": "2069330",
    "end": "2074610"
  },
  {
    "text": "little disillusioned wasn't quite sure how are you gonna solve this Peter goes off and dives into the data lake he's walking through requests he's walking",
    "start": "2074610",
    "end": "2081750"
  },
  {
    "text": "through all sorts of information and he finds that for a subset of requests there's a pretty consistent mapping",
    "start": "2081750",
    "end": "2087570"
  },
  {
    "text": "between some of the parameters we see in the request and the services that get executed so great if we just target",
    "start": "2087570",
    "end": "2094648"
  },
  {
    "text": "these requests we can find that mapping and it will work well enough for what we're trying to accomplish so lesson",
    "start": "2094649",
    "end": "2102570"
  },
  {
    "start": "2100000",
    "end": "2173000"
  },
  {
    "text": "three and I'm gonna go quickly because we're actually running out of time was was in large part a lesson for me right",
    "start": "2102570",
    "end": "2107820"
  },
  {
    "text": "I came to the table with these sort of pristine idealized models of reality and as much as I didn't want to let go of",
    "start": "2107820",
    "end": "2114570"
  },
  {
    "text": "the simplicity because simplicity is is what is what makes a model good it turns out it's a lot easier to adapt to fit or",
    "start": "2114570",
    "end": "2121920"
  },
  {
    "text": "retrofit a model to an extremely dynamic reality than it then it would ever be to",
    "start": "2121920",
    "end": "2127680"
  },
  {
    "text": "do the reverse especially in a summer so what I had to kind of give something right and this is like collaboration",
    "start": "2127680",
    "end": "2133510"
  },
  {
    "text": "involves compromise not just the kind of compromise where you just give something up where you give something up to get",
    "start": "2133510",
    "end": "2138609"
  },
  {
    "text": "much more back and you know it's a great opportunity for us as well we learn about how our models could be",
    "start": "2138609",
    "end": "2144460"
  },
  {
    "text": "better the data that we should be capturing additional things that we could do better that would make it easier for us to solve these problems",
    "start": "2144460",
    "end": "2150789"
  },
  {
    "text": "down the road so you know as Peter talked about a simple matter of code a little bit of",
    "start": "2150789",
    "end": "2156760"
  },
  {
    "text": "time goes by two or three months and we go hack at it and we make it work is the",
    "start": "2156760",
    "end": "2162730"
  },
  {
    "text": "long and short we go through we fix some bugs we have some rendezvous problems with reporting customer data you know",
    "start": "2162730",
    "end": "2168490"
  },
  {
    "text": "we've got some I'm an engineer I wrote some bugs I had to debug them and figure it him out but and I guess I kind of ruined",
    "start": "2168490",
    "end": "2176079"
  },
  {
    "start": "2173000",
    "end": "2248000"
  },
  {
    "text": "this doesn't work I mean obviously we're here so probably be talking about it if it doesn't work but it does so let me",
    "start": "2176079",
    "end": "2182589"
  },
  {
    "text": "tell you a little bit about the request the the the case study that we studied so at Netflix there's a request that's",
    "start": "2182589",
    "end": "2188920"
  },
  {
    "text": "called the app booth that happens at startup it touches a lot of different services and it sets up your session it",
    "start": "2188920",
    "end": "2194829"
  },
  {
    "text": "authenticates it downloads some content it caches so that it's going to be a quick and important user experience",
    "start": "2194829",
    "end": "2201069"
  },
  {
    "text": "it's what Netflix tells a moment of truth if you go to boot the app and it falls on its face you're probably not",
    "start": "2201069",
    "end": "2206410"
  },
  {
    "text": "gonna be happy as a customer and that's certainly not what we want so in this case we're talking hundreds of services",
    "start": "2206410",
    "end": "2212440"
  },
  {
    "text": "that are touched in this request as Peter mentioned if we were to do a naive approach we're talking a very large",
    "start": "2212440",
    "end": "2218500"
  },
  {
    "text": "number of experiments so I'm happy to say that we were able to explore this entire search space in 200 experiments",
    "start": "2218500",
    "end": "2226150"
  },
  {
    "text": "and furthermore we were able to find 11 different bugs some of them single points of failure",
    "start": "2226150",
    "end": "2231880"
  },
  {
    "text": "some of them multiple points of failure but bugs that would have been customer facing bugs the real bugs probably the",
    "start": "2231880",
    "end": "2237760"
  },
  {
    "text": "customers were hitting so we both got what we wanted Colten found bugs before customers did I got to argue that we",
    "start": "2237760",
    "end": "2244390"
  },
  {
    "text": "identified bugs that another technique would never have found because of their depth and complexity so you know we did",
    "start": "2244390",
    "end": "2251589"
  },
  {
    "start": "2248000",
    "end": "2344000"
  },
  {
    "text": "it this is the part where we part ways and our two column are one column that we merged into kind of breaks off again",
    "start": "2251589",
    "end": "2257529"
  },
  {
    "text": "into a duality I'll go quickly through this but obviously as an academic there's a bunch of academic questions that I would like to ask and I have you",
    "start": "2257529",
    "end": "2264069"
  },
  {
    "text": "know a sort of comfortably academic timeframe to do them in our sat formulation of the problem sometimes has",
    "start": "2264069",
    "end": "2270700"
  },
  {
    "text": "a very large number of solutions and they're not all equally likely so in an ideal world what we'd like to do is next",
    "start": "2270700",
    "end": "2276610"
  },
  {
    "text": "time we use our fault injection infrastructure we want to test faults that we think are the most likely ones to be tripped by customers this is going",
    "start": "2276610",
    "end": "2283690"
  },
  {
    "text": "to involve turning that decision problem into an optimization problem that tries to find the best next solution this hard",
    "start": "2283690",
    "end": "2290530"
  },
  {
    "text": "work it's going to take a few years and lots and lots and lots of money obviously now him I would like I would",
    "start": "2290530",
    "end": "2298630"
  },
  {
    "text": "like to be able to improve our tracing infrastructures to collect something that looks a little bit more like",
    "start": "2298630",
    "end": "2304200"
  },
  {
    "text": "legitimate lineage and database systems in particular some of those services and that graph are stateful and the",
    "start": "2304200",
    "end": "2309880"
  },
  {
    "text": "explanation about why you got a response doesn't just have to do with that call graph but it has to do with call graphs from the past that changed that state",
    "start": "2309880",
    "end": "2316030"
  },
  {
    "text": "now Colton is extremely suspicious about it thinks it's extremely unlikely that",
    "start": "2316030",
    "end": "2322120"
  },
  {
    "text": "that this is going to work in practice that the overheads of provenance collection are going to be too high for industries to bear but that's what makes",
    "start": "2322120",
    "end": "2328720"
  },
  {
    "text": "it research um we also kind of looked we didn't look at time right we said what set of services fails but in order to",
    "start": "2328720",
    "end": "2335200"
  },
  {
    "text": "trip certain faults we have to fail services in a particular order which needless to say vastly increases the the",
    "start": "2335200",
    "end": "2341640"
  },
  {
    "text": "complexity of the problem by a factorial figure thank you oops yeah so on the",
    "start": "2341640",
    "end": "2347290"
  },
  {
    "start": "2344000",
    "end": "2368000"
  },
  {
    "text": "other end you know Richard device metrics we're only capturing them for a subset of devices we want more inch more",
    "start": "2347290",
    "end": "2353110"
  },
  {
    "text": "insight into what fails this this request class creation problem it's not solved this still needs to be done right",
    "start": "2353110",
    "end": "2358900"
  },
  {
    "text": "now we can only focus on a subset of the Netflix API we can't hit all of it and as Peter mentioned you know we can do a",
    "start": "2358900",
    "end": "2365350"
  },
  {
    "text": "better job in prioritizing how we search this space so I have lab now and a team",
    "start": "2365350",
    "end": "2370510"
  },
  {
    "start": "2368000",
    "end": "2460000"
  },
  {
    "text": "it's called disorderly labs you should visit our website I have a bunch of brilliant students who are gonna be working on this problem for the next",
    "start": "2370510",
    "end": "2375790"
  },
  {
    "text": "five years at least and then beyond that if I'm lucky enough to get tenure so look me up especially if you want to do",
    "start": "2375790",
    "end": "2381400"
  },
  {
    "text": "these kinds of collaborations in the future I have some good ideas still and so I left Netflix in January to found a",
    "start": "2381400",
    "end": "2388720"
  },
  {
    "text": "company one of the things that made this possible at Amazon and Netflix was the infrastructure that allowed us to cause",
    "start": "2388720",
    "end": "2395290"
  },
  {
    "text": "these failures in production in a safe and deterministic way not everybody has but I think if everyone did that they'd",
    "start": "2395290",
    "end": "2401470"
  },
  {
    "text": "be able to do this better more thoughtful fault exploration in particular gremlin is built to run on",
    "start": "2401470",
    "end": "2408700"
  },
  {
    "text": "Linux has a command-line interface that causes bad behavior things like taking out CPU or RAM making mucking with",
    "start": "2408700",
    "end": "2415960"
  },
  {
    "text": "network traffic as we talked about an API I think an API is extremely important who knows what's going to be",
    "start": "2415960",
    "end": "2421599"
  },
  {
    "text": "built on on top of it and the ability to tie into your continuous integration and continuous deployment is what helps us",
    "start": "2421599",
    "end": "2427810"
  },
  {
    "text": "prevent the drift into failure lastly I think that good engineering tools need",
    "start": "2427810",
    "end": "2433210"
  },
  {
    "text": "to be easy to use you want people to do the right thing you need to make it easy for them to do the right thing and so",
    "start": "2433210",
    "end": "2438790"
  },
  {
    "text": "I'm a big fan of how a simple powerful web UI that guides users through understanding how to fail what could go",
    "start": "2438790",
    "end": "2445900"
  },
  {
    "text": "wrong and helping them to to understand it things like being able to schedule attacks being able to configure it to",
    "start": "2445900",
    "end": "2452800"
  },
  {
    "text": "confine that blast radius and the failure scope and of course the big red button this is whole tall because if",
    "start": "2452800",
    "end": "2458380"
  },
  {
    "text": "things ever go wrong you should just stop it so we should probably go fast yeah I",
    "start": "2458380",
    "end": "2463780"
  },
  {
    "start": "2460000",
    "end": "2884000"
  },
  {
    "text": "think you know we've talked through these these lessons you know work backwards meet-in-the-middle adapt a theory to the reality and if you",
    "start": "2463780",
    "end": "2469750"
  },
  {
    "text": "take away one thing from this talk because you fell asleep and I'm sorry you know this this was a talk about",
    "start": "2469750",
    "end": "2475599"
  },
  {
    "text": "putting together two things right and the metaphor that I like to use is that you know we start at these two poles that we've marched to the middle what's",
    "start": "2475599",
    "end": "2482500"
  },
  {
    "text": "interesting is you know we started with all this knowledge so we're like carrying all this stuff in our arms we had to make all these compromises along",
    "start": "2482500",
    "end": "2487839"
  },
  {
    "text": "the way so as we're marching we're like dropping things and yet somehow miraculously when we get to the middle we end up with more than we began with",
    "start": "2487839",
    "end": "2495430"
  },
  {
    "text": "it's like some loaves & Fishes kind of miracle it's amazing for me so academic academia plus industry can be academia",
    "start": "2495430",
    "end": "2502690"
  },
  {
    "text": "times industry right if you're willing to make compromises embrace risk and",
    "start": "2502690",
    "end": "2507910"
  },
  {
    "text": "march towards that middle point right we can provide we can build better solutions which is what I think we",
    "start": "2507910",
    "end": "2514060"
  },
  {
    "text": "succeeded in doing so thank you very much thank you",
    "start": "2514060",
    "end": "2518940"
  },
  {
    "text": "nice to the press we have time for",
    "start": "2519660",
    "end": "2527740"
  },
  {
    "text": "questions",
    "start": "2527740",
    "end": "2529980"
  },
  {
    "text": "obviously the invitations open to come and find me and Peter online on Twitter Twitter Pinterest Peters big on Twitter",
    "start": "2533130",
    "end": "2539290"
  },
  {
    "text": "or anywhere else and come chat with us",
    "start": "2539290",
    "end": "2543180"
  },
  {
    "text": "go ahead gremlins in closed beta we",
    "start": "2544530",
    "end": "2550450"
  },
  {
    "text": "launched closed beta on Monday there's a handful of companies that were we're working with we're planning to do open",
    "start": "2550450",
    "end": "2556330"
  },
  {
    "text": "beta come January 1st if you'd like to hit our website I threw some stickers around people like stickers you can hit",
    "start": "2556330",
    "end": "2562780"
  },
  {
    "text": "our website and sign up so how are you",
    "start": "2562780",
    "end": "2571450"
  },
  {
    "text": "guys simulating things breaking in prod without actually breaking things in prod",
    "start": "2571450",
    "end": "2579420"
  },
  {
    "text": "so that's that's where the the fit the failure injection infrastructure allowed",
    "start": "2579420",
    "end": "2584560"
  },
  {
    "text": "us do we kind of abstracted over it here I actually gave a talk in queue con New York last year about that if you want to",
    "start": "2584560",
    "end": "2591640"
  },
  {
    "text": "go watch it but the long and short of it is we're simulating failure at key injection points along this back so RPC",
    "start": "2591640",
    "end": "2598330"
  },
  {
    "text": "boundaries hystrix if you're familiar with persistence and caching tiers are",
    "start": "2598330",
    "end": "2603460"
  },
  {
    "text": "great places to either inject a delay or return an exception or throw an error and we had the people that own those",
    "start": "2603460",
    "end": "2610030"
  },
  {
    "text": "libraries at Netflix write that failure code so they did their best to emulate real production failures as close as",
    "start": "2610030",
    "end": "2616030"
  },
  {
    "text": "possible",
    "start": "2616030",
    "end": "2618540"
  },
  {
    "text": "I think this is maybe more on the other question but like to this logistical II",
    "start": "2622779",
    "end": "2628329"
  },
  {
    "text": "how do you you know how do you simulate do you actually have a test infrastructure that has every service",
    "start": "2628329",
    "end": "2634239"
  },
  {
    "text": "running or do you just find individually the points and just test those in isolation Oh Netflix are Cowboys they do",
    "start": "2634239",
    "end": "2640539"
  },
  {
    "text": "everything in production and the reason that they can do it safely is called vindicated is that they can in simulate failure at the granularity of an",
    "start": "2640539",
    "end": "2647019"
  },
  {
    "text": "individual request without affecting the other requests that may be multi-tenant Adhan that on that portion of the of the",
    "start": "2647019",
    "end": "2653589"
  },
  {
    "text": "architecture so we're testing in production and in the strict sense but",
    "start": "2653589",
    "end": "2660400"
  },
  {
    "text": "controlling as colton said the blast radius of what what you could affect",
    "start": "2660400",
    "end": "2665609"
  },
  {
    "text": "I think you guys are meaning able to grab those production issue information",
    "start": "2673170",
    "end": "2679829"
  },
  {
    "text": "like the pelo in order to do that an analysis right and how does the Netflix",
    "start": "2679829",
    "end": "2686670"
  },
  {
    "text": "grab those pelo production pelo without affecting the performance yeah so two",
    "start": "2686670",
    "end": "2692849"
  },
  {
    "text": "points fit is fit is meant to be you know short-circuited where it's not gonna do any work unless it needs to if",
    "start": "2692849",
    "end": "2698579"
  },
  {
    "text": "we've chosen to decorate a request with failure we're okay with a small amount of performance degradation it's one that",
    "start": "2698579",
    "end": "2704460"
  },
  {
    "text": "we've measured and that was negligible it didn't really show up in custom I think it's question was about tracing though right I think tracing was an",
    "start": "2704460",
    "end": "2710910"
  },
  {
    "text": "element of it so I think like you know in general Netflix is using a system called self which is an inheritor of",
    "start": "2710910",
    "end": "2716250"
  },
  {
    "text": "Zipkin based on Google staffer so it's doing this at sample rates that are completely controllable to trade off",
    "start": "2716250",
    "end": "2721260"
  },
  {
    "text": "between observability and an overhead and things like Zipkin open tracing are",
    "start": "2721260",
    "end": "2727680"
  },
  {
    "text": "becoming an emerging standard that is you know you're beginning to be able to expect that large scale micro service",
    "start": "2727680",
    "end": "2733010"
  },
  {
    "text": "architectures are collecting traces of this kind obviously at a fairly low sample rate do you have a sense of the",
    "start": "2733010",
    "end": "2745849"
  },
  {
    "text": "financial value of the investment in quality call on me I think that I love",
    "start": "2745849",
    "end": "2753750"
  },
  {
    "text": "to ask what's the cost of being wrong what's the cost of downtime for your company if you work at Amazon and you're",
    "start": "2753750",
    "end": "2759119"
  },
  {
    "text": "down on Black Friday its measured in hundreds of thousands of dollars a minute so I think that that that's",
    "start": "2759119",
    "end": "2764880"
  },
  {
    "text": "really what you have to that's really what you have to do and if you want to go convince your management that failure testing is an important investment not",
    "start": "2764880",
    "end": "2771599"
  },
  {
    "text": "just for the training or the operational burden reduction you make it about the money what does that nine cost you and",
    "start": "2771599",
    "end": "2777510"
  },
  {
    "text": "that doesn't even count the cost to your brand the cost of customer trust",
    "start": "2777510",
    "end": "2782869"
  },
  {
    "text": "give some examples of a bug that you found with the system that you could not",
    "start": "2787010",
    "end": "2792270"
  },
  {
    "text": "have found with the engineer guided because you obviously doing a lot of feel like testing already but engineer guided so like like you have a specific",
    "start": "2792270",
    "end": "2798720"
  },
  {
    "text": "example of like why you found it with this that you couldn't have found it with engineers so we did a lot of our",
    "start": "2798720",
    "end": "2804000"
  },
  {
    "text": "proactive failure testing at the failing us failing one thing at a time there's so much low-hanging fruit that just",
    "start": "2804000",
    "end": "2809940"
  },
  {
    "text": "failing a single component tended to keep us busy some of the bugs that we",
    "start": "2809940",
    "end": "2815130"
  },
  {
    "text": "found in Abu involved three and four services failing together yeah yeah so I mean what I would add on to that is that",
    "start": "2815130",
    "end": "2820770"
  },
  {
    "text": "you know like a lot of the sort of engineer guided stuff is focused on whether this sort of solipsistic view of a service and its immediate dependencies",
    "start": "2820770",
    "end": "2827369"
  },
  {
    "text": "and as a service robust to failures of its immediate dependencies or something like that you can go a very long way with that but it's also true that",
    "start": "2827369",
    "end": "2833220"
  },
  {
    "text": "correctness is really an end-to-end property of a whole users interaction across many microservices and it's by no means trivial to sort of stitch together",
    "start": "2833220",
    "end": "2840270"
  },
  {
    "text": "and compose the expertise of the individual service owners to reason about what could go wrong sort of",
    "start": "2840270",
    "end": "2845609"
  },
  {
    "text": "transitively and so and that's why it was so important for me to find not just dot just to count the bugs that we found",
    "start": "2845609",
    "end": "2852150"
  },
  {
    "text": "but to illustrate that some of them involve these non-trivial compositions of multiple types of faults that would",
    "start": "2852150",
    "end": "2857430"
  },
  {
    "text": "involve the expertise of many service owners who don't really know the totality of that graph and I'm sure as",
    "start": "2857430",
    "end": "2863910"
  },
  {
    "text": "you know being from uber like at scale you see not just single failures but combinations of failures and some of the",
    "start": "2863910",
    "end": "2870420"
  },
  {
    "text": "worst outages are two or three things that you don't expect to go wrong at the same time yes thank you all right thank",
    "start": "2870420",
    "end": "2881579"
  },
  {
    "text": "you [Applause]",
    "start": "2881579",
    "end": "2885949"
  }
]