[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "[Music]",
    "start": "570",
    "end": "14400"
  },
  {
    "text": "okay and I think we are ready to get started it's two o'clock on my Android phone so uh time has come so hey",
    "start": "14400",
    "end": "20960"
  },
  {
    "text": "everyone my name is Alexander garanta I also go by nickname of Sasha and um we'll be doing a talk on the with Marco",
    "start": "20960",
    "end": "28359"
  },
  {
    "text": "brand that is the black mag IC of Android Services um which is basically a fancy way of saying we're going to be",
    "start": "28359",
    "end": "34280"
  },
  {
    "text": "talking about some of the kind of interesting verticals that exist in Android we call them services but they",
    "start": "34280",
    "end": "40840"
  },
  {
    "text": "involve a lot more um and you'll see that you know we obviously won't have to have the time to cover all 60 plus of",
    "start": "40840",
    "end": "47440"
  },
  {
    "text": "them at least as that's how many I count in my Nexus Galaxy Nexus we'll cover",
    "start": "47440",
    "end": "52719"
  },
  {
    "text": "some of the more interesting ones just to give you a taste of how they're put together to give you an idea of the the",
    "start": "52719",
    "end": "59239"
  },
  {
    "text": "kind of the the flow if you will of data as well as control all the way from the top of the stack so the app layer down",
    "start": "59239",
    "end": "66960"
  },
  {
    "text": "to the kernel in a lot of cases um I only have about 10 services that I'll",
    "start": "66960",
    "end": "72119"
  },
  {
    "text": "actually go over um and these as you will see are very much described in form",
    "start": "72119",
    "end": "77240"
  },
  {
    "text": "of diagrams some of which may be hard to read if you're sitting in the back and there are some open seats up front so",
    "start": "77240",
    "end": "84119"
  },
  {
    "text": "here's your chance to uh take advantage of the seats if you want to be able to read uh what's uh what's in the diagrams",
    "start": "84119",
    "end": "90479"
  },
  {
    "text": "anyway just to um I guess introduce myself um I um work at a company called Maracana I",
    "start": "90479",
    "end": "98280"
  },
  {
    "text": "help deliver and develop training courses on among other things Android internals Android security and the like",
    "start": "98280",
    "end": "105759"
  },
  {
    "text": "I happen to uh I found it and and I co organized the San Francisco Android User Group uh so we meet every month you guys",
    "start": "105759",
    "end": "113680"
  },
  {
    "text": "should if you're local come and check out some more events they're free and very educational I also run the Java",
    "start": "113680",
    "end": "119840"
  },
  {
    "text": "User Group um I co-run the HTML 5 user group I tend to speak at events like",
    "start": "119840",
    "end": "125399"
  },
  {
    "text": "this I um I've been doing actually I started my career mostly on the server side Java on Linux so a lot of Linux",
    "start": "125399",
    "end": "133040"
  },
  {
    "text": "Administration along the way um but then moved into kind of desk I guess I I",
    "start": "133040",
    "end": "138680"
  },
  {
    "text": "don't want to say desktop but client side so Android embedded systems and the like um I've worked in other mobile",
    "start": "138680",
    "end": "144480"
  },
  {
    "text": "technologies like WAP push MMS proxies that sort of stuff you know long long",
    "start": "144480",
    "end": "149879"
  },
  {
    "text": "long time ago um the company work for focuses on open source software uh",
    "start": "149879",
    "end": "156200"
  },
  {
    "text": "specifically one large part of that is Android and we provide training we publish content we record uh videos",
    "start": "156200",
    "end": "164200"
  },
  {
    "text": "tutorials all all of it most of it is actually available for free on our website um and uh we help um sponsor and",
    "start": "164200",
    "end": "172680"
  },
  {
    "text": "run different communities organize different communities around the technologies that we're passionate about",
    "start": "172680",
    "end": "178239"
  },
  {
    "text": "so I'm pretty sure actually let's just by show of hands how many of you have",
    "start": "178239",
    "end": "183760"
  },
  {
    "text": "never seen a picture that looks like this okay cool so that means you came to",
    "start": "183760",
    "end": "191400"
  },
  {
    "text": "the right place so we're not going to be talking about the stack we're going to be talking about essentially the you",
    "start": "191400",
    "end": "197159"
  },
  {
    "text": "know intersections through the stack so think of it as a you know way of going you know from the top of the stack down",
    "start": "197159",
    "end": "204480"
  },
  {
    "text": "through the application framework through the native layer uh to the Linux kernel um and we'll be discussing some",
    "start": "204480",
    "end": "212120"
  },
  {
    "text": "of the services along the way as I mentioned we'll be looking at um only about 10 out of the you know 60 plus",
    "start": "212120",
    "end": "219280"
  },
  {
    "text": "plus Services uh but the idea is to get a taste of how they're put together how",
    "start": "219280",
    "end": "224720"
  },
  {
    "text": "they're similar in many ways in terms of communication but also how they're different and and why they're different",
    "start": "224720",
    "end": "231720"
  },
  {
    "text": "um that said I do want to point out that there are or there actually in fact there's going to be an interesting talk",
    "start": "231720",
    "end": "237400"
  },
  {
    "text": "on the camera Hull after this one uh folks from optina there sitting in the back are going to be talking about it",
    "start": "237400",
    "end": "243760"
  },
  {
    "text": "right here um and there were actually a couple of interesting talks already on",
    "start": "243760",
    "end": "249159"
  },
  {
    "text": "sensors audio and a few other things so by all means you know there are definitely complimentary talks with this",
    "start": "249159",
    "end": "255760"
  },
  {
    "text": "one in fact there may be some redundancy to for example what uh Benjamin talked about here last night if any of you",
    "start": "255760",
    "end": "262000"
  },
  {
    "text": "actually said in this room um that said hopefully it will still be interesting and uh well entertaining so whoops hold",
    "start": "262000",
    "end": "269080"
  },
  {
    "text": "on that's not what I meant to click on um so that said hopefully by the way one",
    "start": "269080",
    "end": "275039"
  },
  {
    "text": "thing I just want to point out from from this picture um I hope that you most of you are familiar with the idea that",
    "start": "275039",
    "end": "282759"
  },
  {
    "text": "applications um essentially run in separate processes uh that they communicate to Services mostly through",
    "start": "282759",
    "end": "290120"
  },
  {
    "text": "binder um binder is this IPC mechanism that Android uh provides um in form of a",
    "start": "290120",
    "end": "296560"
  },
  {
    "text": "a kind of a kernel driver we'll mention it briefly on the next slide slides kind of how it works um the services do talk",
    "start": "296560",
    "end": "303160"
  },
  {
    "text": "to each other most of which run inside of this system server process others may",
    "start": "303160",
    "end": "308560"
  },
  {
    "text": "run in other processes like for example the media server which we'll touch upon later on um they among themselves talk",
    "start": "308560",
    "end": "316479"
  },
  {
    "text": "sometimes through simple Java calls most of which are actually written in Java some some of which are written in actually",
    "start": "316479",
    "end": "321759"
  },
  {
    "text": "cc++ um but what it comes to the native layer and by native layer I mean you know the the the user space Hall I mean",
    "start": "321759",
    "end": "329639"
  },
  {
    "text": "the um the different kind of uh um say stage fright or the plugins that andreid",
    "start": "329639",
    "end": "335000"
  },
  {
    "text": "provides for different for example media codecs uh the different Damons and so on and so on most of the communication",
    "start": "335000",
    "end": "341639"
  },
  {
    "text": "between the Java layer and that is through the jni although in some cases",
    "start": "341639",
    "end": "347120"
  },
  {
    "text": "there's actually the communication can also be done through binder and can also be done through Unix sockets and we'll",
    "start": "347120",
    "end": "352319"
  },
  {
    "text": "touch upon those as well um and then finally the kind of to go from the Native layer down into the Linux kernel",
    "start": "352319",
    "end": "359240"
  },
  {
    "text": "and actually access the drivers that's essentially you guys probably know you know given that you're here at this",
    "start": "359240",
    "end": "364520"
  },
  {
    "text": "conference about that already but you know there are obviously uh different apis from system calls to you know",
    "start": "364520",
    "end": "371680"
  },
  {
    "text": "interacting with the drivers through ictl through netlink through you know simple reads and writes and so on and so",
    "start": "371680",
    "end": "378599"
  },
  {
    "text": "on so we'll touch upon essentially like I said different services and take a look at how they Cris cross through this",
    "start": "378599",
    "end": "384840"
  },
  {
    "text": "through this stack so let's start off with something that's kind of easy um you know oops the vibrator service um I",
    "start": "384840",
    "end": "394880"
  },
  {
    "text": "say it's easy because it doesn't involve as many moving Parts okay um and of",
    "start": "394880",
    "end": "400120"
  },
  {
    "text": "course this is the vanilla AOSP implementation this may differ um to",
    "start": "400120",
    "end": "405840"
  },
  {
    "text": "what you have on your device especially for example uh there are companies that specialize in providing heptic um you",
    "start": "405840",
    "end": "412080"
  },
  {
    "text": "know better heptic implementation in form of both software and Hardware U which actually AOSP does not Embrace",
    "start": "412080",
    "end": "418520"
  },
  {
    "text": "because it's not it's flow sourced um and so this actually is kind of what the vibrator stack if you will or the flow",
    "start": "418520",
    "end": "425440"
  },
  {
    "text": "looks like on a Galaxy Nexus device in fact most of these slides are geared towards Galaxy Nexus and Ice Cream",
    "start": "425440",
    "end": "431599"
  },
  {
    "text": "Sandwich so let's let's kind of just take a look at this um here what we have",
    "start": "431599",
    "end": "437000"
  },
  {
    "text": "is two different processes one being this example application on the left and",
    "start": "437000",
    "end": "442560"
  },
  {
    "text": "this system server on the right and then down below as you see we have a kernel with couple of you know two drivers",
    "start": "442560",
    "end": "449400"
  },
  {
    "text": "exposed to us now um ultimately this application wants to vibrate the device",
    "start": "449400",
    "end": "455919"
  },
  {
    "text": "what you know maybe it's because of notification although in that case it would going through a different it wouldn't do it directly it would actually go through notification service",
    "start": "455919",
    "end": "462720"
  },
  {
    "text": "but let's assume it wants to vibrate the device for whatever reasons and provide some heptic heptic like feedback um",
    "start": "462720",
    "end": "469240"
  },
  {
    "text": "before we can actually talk about you know the application we actually have to jump on the right hand side to talk about the system server before we",
    "start": "469240",
    "end": "475560"
  },
  {
    "text": "talking about the system server we have to talk about the the the service manager and by you know while we're",
    "start": "475560",
    "end": "481080"
  },
  {
    "text": "there might as well talk about the boot up so at you know when the Android device boots up we know that you know we",
    "start": "481080",
    "end": "488000"
  },
  {
    "text": "initialize the kernel we load the kernel kernel executes this init process init process parses these init RC files which",
    "start": "488000",
    "end": "496039"
  },
  {
    "text": "hopefully you guys know about if you don't you know go and see Benjamin's talks from yesterday when it's published",
    "start": "496039",
    "end": "501240"
  },
  {
    "text": "and in it RC among other things launches this service manager which is this box",
    "start": "501240",
    "end": "507240"
  },
  {
    "text": "right here okay and I apologize for all the lines it's actually going to get uglier than this but I'll try to draw",
    "start": "507240",
    "end": "513599"
  },
  {
    "text": "attention to the different things and don't worry about trying to read everything I'll explain it along the way um the service manager is a Damon that",
    "start": "513599",
    "end": "521159"
  },
  {
    "text": "basically is tracked by in it so should it exit it should you know it would automatically be restarted for example",
    "start": "521159",
    "end": "526680"
  },
  {
    "text": "and one of the things that it does it actually goes and registers with the",
    "start": "526680",
    "end": "531959"
  },
  {
    "text": "binder as the Contex manager basically registers itself is this uh uh binder uh",
    "start": "531959",
    "end": "539360"
  },
  {
    "text": "um service at at position zero which is a special position um and the the reason for that is so that others can find the",
    "start": "539360",
    "end": "545760"
  },
  {
    "text": "service manager now sech manager's job is to essentially act as a registry of",
    "start": "545760",
    "end": "551120"
  },
  {
    "text": "all the other services so as you will see you know for us to actually be able to talk to some other service and this",
    "start": "551120",
    "end": "556680"
  },
  {
    "text": "talk is about Services we have to find that service in the first place and for us to find it we have to talk you know",
    "start": "556680",
    "end": "562079"
  },
  {
    "text": "talk to something that has a reference to the service ultimately a a reference is nothing more than a kind of a logical",
    "start": "562079",
    "end": "568560"
  },
  {
    "text": "name which is think of it as a string right mean b a character buffer and some",
    "start": "568560",
    "end": "574959"
  },
  {
    "text": "sort of an ID an integer that uniquely identifies a particular process and in that process a particular service in",
    "start": "574959",
    "end": "581399"
  },
  {
    "text": "that process that binder knows about so service manager is in fact a service in",
    "start": "581399",
    "end": "587680"
  },
  {
    "text": "it in itself because it actess a service to others that actually need to query other services so it registers as the",
    "start": "587680",
    "end": "594480"
  },
  {
    "text": "context manager now one interesting thing about the service manager is that you know our our applications can't",
    "start": "594480",
    "end": "601880"
  },
  {
    "text": "randomly register services with a service manager um one of the things the service manager does it implements a",
    "start": "601880",
    "end": "607560"
  },
  {
    "text": "security check which is kind of hardcoded and it checks whether whoever is doing the registration is one of the",
    "start": "607560",
    "end": "613040"
  },
  {
    "text": "trusted uids system the system user is actually one of the trusted uids so that's why you",
    "start": "613040",
    "end": "620560"
  },
  {
    "text": "know this is the services you get from the service manager are somewhat to be trusted although you know if you were to",
    "start": "620560",
    "end": "626120"
  },
  {
    "text": "attend the SE Linux talk or SE Android talk happening concurrently you know you may hear otherwise anyway service",
    "start": "626120",
    "end": "633000"
  },
  {
    "text": "manager gets launched um and essentially you know it becomes available to everyone because it's at this known",
    "start": "633000",
    "end": "638560"
  },
  {
    "text": "location after that the zygote starts up which hopefully you know is this Half",
    "start": "638560",
    "end": "643959"
  },
  {
    "text": "Baked Bic instance if you will that listens on on a uni socket and and and",
    "start": "643959",
    "end": "649279"
  },
  {
    "text": "forks itself to start your applications but before it does that it actually forc itself to start this big process called",
    "start": "649279",
    "end": "656600"
  },
  {
    "text": "the system server um system server is run by the system user which you know has capabilities of talking to the",
    "start": "656600",
    "end": "663000"
  },
  {
    "text": "service manager now one of the things the system server does it actually goes and executes this system server Java you",
    "start": "663000",
    "end": "671480"
  },
  {
    "text": "know uh U CL class runs a main method that main method goes and loads some",
    "start": "671480",
    "end": "676680"
  },
  {
    "text": "native libraries initial registers a few essentially jni libraries if you will",
    "start": "676680",
    "end": "682519"
  },
  {
    "text": "with the jni uh environment and then starts bringing up or or booting",
    "start": "682519",
    "end": "687800"
  },
  {
    "text": "services like I said there's 60 plus services not all of which are coming from here but most of which are so one",
    "start": "687800",
    "end": "694240"
  },
  {
    "text": "of the services that it registers in this case that it actually instantiates so it creates that's kind of what this",
    "start": "694240",
    "end": "699600"
  },
  {
    "text": "means so it's kind of hard to see but um it builds a vibrator service now vibr",
    "start": "699600",
    "end": "706079"
  },
  {
    "text": "service happens to implement a i vibrator aidl which turns out to be an",
    "start": "706079",
    "end": "712639"
  },
  {
    "text": "interface in Java it you know gets compiled into essentially an interface um and particularly implements a stub",
    "start": "712639",
    "end": "719440"
  },
  {
    "text": "we'll talk about how this comes into play okay um then the vibrator service",
    "start": "719440",
    "end": "724560"
  },
  {
    "text": "once instantiated be gets a registered that's what this well I guess it's card",
    "start": "724560",
    "end": "729600"
  },
  {
    "start": "728000",
    "end": "746000"
  },
  {
    "text": "again for some reason it can't actually select it so let me do it this other way so",
    "start": "729600",
    "end": "735160"
  },
  {
    "text": "registers this service with the service manager now the service manager knows",
    "start": "735160",
    "end": "740720"
  },
  {
    "text": "about the service that got instantiated by the by the service uh the system server um and that's it now the system",
    "start": "740720",
    "end": "748160"
  },
  {
    "start": "746000",
    "end": "803000"
  },
  {
    "text": "server boots up services and at the end the end of the day goes and you know tells the activity manager service hey",
    "start": "748160",
    "end": "754320"
  },
  {
    "text": "we're done the activity manager service goes and sends out that boot completed event and sends out another intent to",
    "start": "754320",
    "end": "760079"
  },
  {
    "text": "launch the you know the the the launcher and now our system is booted now now our",
    "start": "760079",
    "end": "765839"
  },
  {
    "text": "application starts up assuming the user started started it and here we go that's the application the example app.apk that",
    "start": "765839",
    "end": "772440"
  },
  {
    "text": "application you know let's assume has some sort of example activity that activity actually wants to vibrate the device so what would do it would",
    "start": "772440",
    "end": "779440"
  },
  {
    "text": "instantiate this uh android. vibrator um in in some cases you",
    "start": "779440",
    "end": "785120"
  },
  {
    "text": "actually use the context to get system services in some cases you instantiate and there's different in some cases you",
    "start": "785120",
    "end": "790360"
  },
  {
    "text": "just say context. getet package manager for example which is also system service so it's not very consistent depends on",
    "start": "790360",
    "end": "797320"
  },
  {
    "text": "on what are we you know on different services in this case actually you don't instantiated you do use the context Del",
    "start": "797320",
    "end": "802519"
  },
  {
    "text": "system service you after you get a vibrator um you call a public method or",
    "start": "802519",
    "end": "808959"
  },
  {
    "start": "803000",
    "end": "948000"
  },
  {
    "text": "method on it to to vibrate the device now the vibrator job is as you will see",
    "start": "808959",
    "end": "814959"
  },
  {
    "text": "just to proxy our call to vibrate a device to this vibrator service which is",
    "start": "814959",
    "end": "820240"
  },
  {
    "text": "sitting over here so vibrator itself could have been actually called vibrator",
    "start": "820240",
    "end": "825320"
  },
  {
    "text": "manager a lot of services are actually split into two parts the manager and the service the manager acts essentially as",
    "start": "825320",
    "end": "830680"
  },
  {
    "text": "a as a proxy to Shield you as the developer from knowing that there's binder calls happening in the background",
    "start": "830680",
    "end": "837040"
  },
  {
    "text": "okay so what this does it actually goes the vibrator goes and gets a reference",
    "start": "837040",
    "end": "842800"
  },
  {
    "text": "to the service manager by asking for you know whatever is at handle zero which is the context manager and that's how he",
    "start": "842800",
    "end": "848720"
  },
  {
    "text": "learns about this service manager the thing that we already discussed um it then goes and again how does it know",
    "start": "848720",
    "end": "855399"
  },
  {
    "text": "that is because it goes to binder and binder itself references the service manager because it knows what's a",
    "start": "855399",
    "end": "861360"
  },
  {
    "text": "position zero so you can give it that information um then what we do is we go",
    "start": "861360",
    "end": "866560"
  },
  {
    "text": "and ask the service manager over here to tell us to to give us something of by",
    "start": "866560",
    "end": "872959"
  },
  {
    "text": "name vibrator this is this is just a string nothing more than that and essentially what that gives us is a",
    "start": "872959",
    "end": "878720"
  },
  {
    "text": "reference to this service that we previously talked about okay um now we",
    "start": "878720",
    "end": "884759"
  },
  {
    "text": "don't actually get a real reference we get an idea of that service which behind the scenes we can kind of think of it as",
    "start": "884759",
    "end": "890519"
  },
  {
    "text": "a reference we then go and ask this I vibrator stub to actually give us this",
    "start": "890519",
    "end": "897519"
  },
  {
    "text": "as a proxy and we now have something that looks like I vibrator service to",
    "start": "897519",
    "end": "902600"
  },
  {
    "text": "use now when I say we I don't mean our application I mean this vibrator you know which is essentially a",
    "start": "902600",
    "end": "908720"
  },
  {
    "text": "proxy so that's how we get this now we're ready to finally vibrated device",
    "start": "908720",
    "end": "915040"
  },
  {
    "text": "so we say you know this service. vibrate that goes and essentially makes a call",
    "start": "915040",
    "end": "920800"
  },
  {
    "text": "to binder that's what this uses means or calls binder and says execute this",
    "start": "920800",
    "end": "926519"
  },
  {
    "text": "transaction by some ID and ex such and such method by some ID every method of",
    "start": "926519",
    "end": "931600"
  },
  {
    "text": "every essentially service has a particular ID it's not important to know but that's kind of how it works with the",
    "start": "931600",
    "end": "937240"
  },
  {
    "text": "covers and it also passes like for example information how long to vibrate the device now the binder essentially",
    "start": "937240",
    "end": "943759"
  },
  {
    "text": "delivers that over here to this vibrator service now the vibrator service one",
    "start": "943759",
    "end": "950600"
  },
  {
    "start": "948000",
    "end": "1010000"
  },
  {
    "text": "thing that's interesting is that it extends this stub now this stub is something that was created automatically",
    "start": "950600",
    "end": "956839"
  },
  {
    "text": "by that aidl tool if any of you you know that is great if you don't essentially aidl is an interface def you know",
    "start": "956839",
    "end": "963360"
  },
  {
    "text": "Android interface definition language which is used to describe these services to their clients and so um this tool can",
    "start": "963360",
    "end": "970480"
  },
  {
    "text": "generate these proxies and stops that that help with Marshall link data across",
    "start": "970480",
    "end": "976000"
  },
  {
    "text": "this binder Channel if you will so that we don't have to deal with lowlevel you know how do we convert some rich Java",
    "start": "976000",
    "end": "982560"
  },
  {
    "text": "data types for example into these Parcels which are the objects we can send over the binder wire to the other",
    "start": "982560",
    "end": "989000"
  },
  {
    "text": "side and then how does the other side demarshal them into back into Java objects that he can use or Java data",
    "start": "989000",
    "end": "995160"
  },
  {
    "text": "types in C by the way we don't get that where so if you implement services in C++ as we will see later on you end up",
    "start": "995160",
    "end": "1001680"
  },
  {
    "text": "having to do this by hand this marshalling and UNM marshaling whereas here the IDL tool essentially generates",
    "start": "1001680",
    "end": "1007399"
  },
  {
    "text": "these stops and proxies and makes this trivial so ultimately this service or",
    "start": "1007399",
    "end": "1012959"
  },
  {
    "start": "1010000",
    "end": "1058000"
  },
  {
    "text": "the stub has a transact or on transact method that's what get the binder calls binder also by the way manages all these",
    "start": "1012959",
    "end": "1019800"
  },
  {
    "text": "threading and so on and so in the background so every every process in Android has essentially a thread pool",
    "start": "1019800",
    "end": "1026798"
  },
  {
    "text": "which through which it gets uh from where it grabs a thread to actually service these remote requests and so",
    "start": "1026799",
    "end": "1033798"
  },
  {
    "text": "finally this stub all it does it it it captures that on transaction on on",
    "start": "1033799",
    "end": "1039640"
  },
  {
    "text": "transact request figures out which actual methods to invoke and then calls",
    "start": "1039640",
    "end": "1044760"
  },
  {
    "text": "that method on the vibrator service so in reality you can kind of think of this transaction is going to the stub which",
    "start": "1044760",
    "end": "1051280"
  },
  {
    "text": "calls the service but because they're one in the same at R time it's one object you know they essentially live in the same memory space if you will so",
    "start": "1051280",
    "end": "1058440"
  },
  {
    "text": "this service at this point one thing that it does and this is actually why we need services in most cases is that a it",
    "start": "1058440",
    "end": "1065640"
  },
  {
    "text": "checks for whether the caller has the permission to actually in this case fber the device so you know one one one could",
    "start": "1065640",
    "end": "1074039"
  },
  {
    "text": "argue why would we you know have to go through this entire elaborate you know go and talk to some other processed to",
    "start": "1074039",
    "end": "1079760"
  },
  {
    "text": "vibrate device why don't we just talk to the driver ourselves and so in a lot of cases this has to do with security and",
    "start": "1079760",
    "end": "1085320"
  },
  {
    "text": "so the services is provide that essentially that Gateway that that enforce security uh uh permissions for",
    "start": "1085320",
    "end": "1091919"
  },
  {
    "text": "us and two it also acts as a mutual exclusion point because you don't want multiple locations vibrating the device",
    "start": "1091919",
    "end": "1098960"
  },
  {
    "start": "1092000",
    "end": "1161000"
  },
  {
    "text": "at the very same time with different for example patterns that would work work very well so for example a lot of these",
    "start": "1098960",
    "end": "1105240"
  },
  {
    "text": "Services synchronize if you will because they're stateful in and synchronized blogs they allow these requests to",
    "start": "1105240",
    "end": "1110760"
  },
  {
    "text": "continue so the vi service the first thing that it does go ahead yeah and",
    "start": "1110760",
    "end": "1115880"
  },
  {
    "text": "they also and you're right about that and they also provide essentially",
    "start": "1115880",
    "end": "1121440"
  },
  {
    "text": "persistent State throughout the life cycle of the system so that the system behaves appropriately you know the",
    "start": "1121440",
    "end": "1127320"
  },
  {
    "text": "vibrator you know needs to work perally across hundreds of processes and the same",
    "start": "1127320",
    "end": "1132720"
  },
  {
    "text": "thing that's right so so we basically we there's a lot of code in Android written",
    "start": "1132720",
    "end": "1138080"
  },
  {
    "text": "with an assumption these services are there and they're always going to be there so so uh and and in some cases",
    "start": "1138080",
    "end": "1144039"
  },
  {
    "text": "there State that's important in some cases there potentially isn't like so for example location manager service",
    "start": "1144039",
    "end": "1150480"
  },
  {
    "text": "will remember what was the last known location is for vibr that's not that big of a deal the state here is like is",
    "start": "1150480",
    "end": "1156960"
  },
  {
    "text": "there someone else already vibrating the device that's the state in this case anyway the let me just mention this and",
    "start": "1156960",
    "end": "1162440"
  },
  {
    "text": "I'll get to your question the question is how a question I like to answer I don't know if anyone wants to ask it is",
    "start": "1162440",
    "end": "1167799"
  },
  {
    "text": "how does how does the vibrator service know whether or not we have a permission to vibrate a device and so the way this",
    "start": "1167799",
    "end": "1174840"
  },
  {
    "text": "works is that binder one of the things that it does it passes every time you invoke a binder transaction from process",
    "start": "1174840",
    "end": "1181120"
  },
  {
    "text": "to process it passes the uid and the P ID of the calling process to the process being called and so this service can",
    "start": "1181120",
    "end": "1187919"
  },
  {
    "text": "just say what is the remote uid andp ID now once you have a uid the user identifier and in Android every",
    "start": "1187919",
    "end": "1194159"
  },
  {
    "text": "application gets a unique uid that that persists for the lifetime of that application on the device once we have a uid we can actually ask",
    "start": "1194159",
    "end": "1200720"
  },
  {
    "text": "the package manager which is another service to give us to tell us everything we knows about the that application",
    "start": "1200720",
    "end": "1206760"
  },
  {
    "text": "including for example which permissions it holds or uses once we know which",
    "start": "1206760",
    "end": "1211919"
  },
  {
    "start": "1211000",
    "end": "1361000"
  },
  {
    "text": "permissions it uses we can basically know we can you know on that list is there a permission that you know that we want to enforce now all of this is",
    "start": "1211919",
    "end": "1218880"
  },
  {
    "text": "actually you know shielded away from us from these you know by these little helper methods But ultimately every",
    "start": "1218880",
    "end": "1224360"
  },
  {
    "text": "service in a very trivial way can ask does the calling process hold a",
    "start": "1224360",
    "end": "1230039"
  },
  {
    "text": "particular permission and if it doesn't it can simply throw a security exception so that's again one of the reasons why",
    "start": "1230039",
    "end": "1236159"
  },
  {
    "text": "we have services so that's what the first thing that the vibrated service does and then it goes and basically you",
    "start": "1236159",
    "end": "1241840"
  },
  {
    "text": "know in a synchronized block goes and says okay now I'm going to vibrate the device now the other thing that the Viber service does compared to just",
    "start": "1241840",
    "end": "1248480"
  },
  {
    "text": "talking to a normal you know in this case you know a GPI or driver is that it",
    "start": "1248480",
    "end": "1254559"
  },
  {
    "text": "we could you know it also provides more features like for example can Implement pattern vibrations so we don't have to",
    "start": "1254559",
    "end": "1261400"
  },
  {
    "text": "actually do it ourselves like if you want to vibrate for a little bit than not and then vibrate again you know we don't do it ourselves we actually go and",
    "start": "1261400",
    "end": "1267320"
  },
  {
    "text": "give it an array of you know Longs which you know provide our timings and it goes and implements that behavior for us so",
    "start": "1267320",
    "end": "1273640"
  },
  {
    "text": "kind of to provide a heptic feedback not just a simple stupid vibration it's on off and done so anyways there's more",
    "start": "1273640",
    "end": "1280200"
  },
  {
    "text": "value to Services as you will see than just simply wrapping the drivers so assuming we have the permission assuming",
    "start": "1280200",
    "end": "1286120"
  },
  {
    "text": "we you know enter a synchronized block what then the vibr service does it calls a native method and a lot of these",
    "start": "1286120",
    "end": "1291720"
  },
  {
    "text": "Services actually parts parts of their implementation are built natively and so native when you say a method in Java is",
    "start": "1291720",
    "end": "1298240"
  },
  {
    "text": "native essentially that means is that it's implemented in jni right now for those you that don't know J jni stands",
    "start": "1298240",
    "end": "1304400"
  },
  {
    "text": "for Java native interface it's a way of java code essentially linking to Native",
    "start": "1304400",
    "end": "1310080"
  },
  {
    "text": "methods or functions I should say that are implemented in C or C++ and then so when somebody goes and invokes a native",
    "start": "1310080",
    "end": "1316279"
  },
  {
    "text": "method in Java that actually goes and Marshals the Java data Java data types",
    "start": "1316279",
    "end": "1321320"
  },
  {
    "text": "into C data types you know that are you know somehow mapped properly and then",
    "start": "1321320",
    "end": "1326360"
  },
  {
    "text": "you know the C code or let's say C++ code goes and executes um here it says",
    "start": "1326360",
    "end": "1331640"
  },
  {
    "text": "that it's C++ but really this is not object oriented in this case it's really nothing more than a simple you know",
    "start": "1331640",
    "end": "1336840"
  },
  {
    "text": "using simple spell just for namespacing um so the actual implementation or you know the next step happens inside of",
    "start": "1336840",
    "end": "1343400"
  },
  {
    "text": "this vibrator service. CPP now this service comes from a Library called lib",
    "start": "1343400",
    "end": "1348960"
  },
  {
    "text": "Android servers. Soo which is actually loaded ahead of time by the system server on boot so one of the things the",
    "start": "1348960",
    "end": "1354799"
  },
  {
    "text": "first things that the system server does is that it loads this uh uh Android servers doso file now this library is",
    "start": "1354799",
    "end": "1362760"
  },
  {
    "start": "1361000",
    "end": "1472000"
  },
  {
    "text": "actually compiled and just I just one thing I wanted to mention I don't know if it was obvious this box represents",
    "start": "1362760",
    "end": "1369520"
  },
  {
    "text": "the Java world right so or the doic world I should say so all of this so far has been happening in dovic now we",
    "start": "1369520",
    "end": "1377080"
  },
  {
    "text": "escape the dovic boundary we're still in the same process we now essentially execute a function in this service now",
    "start": "1377080",
    "end": "1383679"
  },
  {
    "text": "that that function all that it does it actually executes or looks for a hul",
    "start": "1383679",
    "end": "1389240"
  },
  {
    "text": "component specifically the vibrator hul now I hope that most of you are familiar",
    "start": "1389240",
    "end": "1394279"
  },
  {
    "text": "with this idea of H but if you're not let me just quickly mention it so in Android we have multiple forms of H the",
    "start": "1394279",
    "end": "1400760"
  },
  {
    "text": "hard abstraction layers I mean the kernel itself through the form of drivers essentially provides fall but",
    "start": "1400760",
    "end": "1406559"
  },
  {
    "text": "now we have also a user space is H the reason why we need it there are two reasons why we need it at least is one",
    "start": "1406559",
    "end": "1412480"
  },
  {
    "text": "we want to provide consistent apis to the top of the platform so the top layers of the stack so that we can build",
    "start": "1412480",
    "end": "1419600"
  },
  {
    "text": "these these Services you know you know in the same similar way and P them from system to system to system with not",
    "start": "1419600",
    "end": "1425760"
  },
  {
    "text": "actually not knowing or having to worry about the actual drivers that may be used underneath the covers so that's",
    "start": "1425760",
    "end": "1431159"
  },
  {
    "text": "that's the main reason why we uh we basically you know we need call the other reason is um you know the the",
    "start": "1431159",
    "end": "1437240"
  },
  {
    "text": "kernel code or the kernel called stuff that goes into a kernel is you know should be GPL um of course there's",
    "start": "1437240",
    "end": "1443480"
  },
  {
    "text": "different you know some people tend to interpret that differently um but if you want to keep your secret thought secret",
    "start": "1443480",
    "end": "1449080"
  },
  {
    "text": "and you don't want to release your code after GPL um Android actually works very hard to make that possible so everything",
    "start": "1449080",
    "end": "1455960"
  },
  {
    "text": "in Android with a few exceptions is licensed under you know the business friendly quote unquote license like you",
    "start": "1455960",
    "end": "1461840"
  },
  {
    "text": "know Apache or MIT or BSD license so the entire for example bics Lipsy libraries",
    "start": "1461840",
    "end": "1467640"
  },
  {
    "text": "like that they're not lgpl but rather as as BSD so point being is this these H",
    "start": "1467640",
    "end": "1474960"
  },
  {
    "start": "1472000",
    "end": "1572000"
  },
  {
    "text": "components in Android can remain proprietary if you as a as an oem want",
    "start": "1474960",
    "end": "1480279"
  },
  {
    "text": "to keep them that way um finally now in this particular case this vibrator C",
    "start": "1480279",
    "end": "1486279"
  },
  {
    "text": "actually implements a vibrator Doh file which comes from this lib Hardware Legacy um you know include if you will",
    "start": "1486279",
    "end": "1493679"
  },
  {
    "text": "uh directory and there's a you know vibrator Ag and so this just does a",
    "start": "1493679",
    "end": "1498919"
  },
  {
    "text": "simple um you know call to in this case a driver exposed through the CFS by",
    "start": "1498919",
    "end": "1505279"
  },
  {
    "text": "literally you know saying okay write a particular you know uh long which is how",
    "start": "1505279",
    "end": "1511480"
  },
  {
    "text": "long it should go and and turn on the vibration for and then you know it writes a you know now you should power",
    "start": "1511480",
    "end": "1517559"
  },
  {
    "text": "off so literally this is just writing to a driver through simple IO nothing fancy",
    "start": "1517559",
    "end": "1524159"
  },
  {
    "text": "you know to turn on the vibrator or turn off now of course there's better ways of doing this but unfortunately um",
    "start": "1524159",
    "end": "1530640"
  },
  {
    "text": "vibration you know the whole heptic you know the world of heptic feedback is is riddled with patents and so this is what",
    "start": "1530640",
    "end": "1537159"
  },
  {
    "text": "AOSP can provide out of the box without running into any sort of issues there but ultimately that's that's what the",
    "start": "1537159",
    "end": "1544520"
  },
  {
    "text": "vibrator looks like okay now I know you had a question did I answer your question or yes I was just wonder about",
    "start": "1544520",
    "end": "1552640"
  },
  {
    "text": "permission okay so I did guess your question any other questions yeah could you comment on use of thread",
    "start": "1552640",
    "end": "1559320"
  },
  {
    "text": "pools so so it's the the thread pools for the system server thread pools for the binder system server obviously the",
    "start": "1559320",
    "end": "1567320"
  },
  {
    "text": "vibrator is going to take a long time to execute M thre yeah so so and this is",
    "start": "1567320",
    "end": "1573760"
  },
  {
    "text": "diff from service to service um ultimately a lot of calls through binder for example can be implemented through",
    "start": "1573760",
    "end": "1580880"
  },
  {
    "text": "nothing more than you know like one one of those oneway calls in which case the client doesn't actually wait for for the",
    "start": "1580880",
    "end": "1588200"
  },
  {
    "text": "completion um and the threat the threat pulling is then the buer side is done automatically so so the kernel",
    "start": "1588200",
    "end": "1594080"
  },
  {
    "text": "automatically or the driver manages that now the system server itself different Services inside of system server have",
    "start": "1594080",
    "end": "1600880"
  },
  {
    "text": "their own threads so for example the vibrator especially if you give it some sort of a pattern to vibrate on what it",
    "start": "1600880",
    "end": "1607440"
  },
  {
    "text": "does it actually builds a thread or thread pool and executes the vibration of that pattern in that separate thread",
    "start": "1607440",
    "end": "1613640"
  },
  {
    "text": "independently of anything else happening um so so now the system server process",
    "start": "1613640",
    "end": "1618880"
  },
  {
    "text": "this this guy also has you know for example start services in a different thread to allow the rest of the system",
    "start": "1618880",
    "end": "1625440"
  },
  {
    "text": "Cod to boot up con currently um but there isn't a you know a thread pool for the entire system server it's more like",
    "start": "1625440",
    "end": "1632039"
  },
  {
    "text": "there are thread pools for Individual Services or better yet different calls are imp run through through threads that",
    "start": "1632039",
    "end": "1639919"
  },
  {
    "text": "are owned by those particular services and it's again you know so so",
    "start": "1639919",
    "end": "1645080"
  },
  {
    "text": "so in some cases it's somewhat redundant because you could just you know the thread from the binder and just execute everything in there or in this case of",
    "start": "1645080",
    "end": "1651399"
  },
  {
    "text": "the vibration for example it does manage its own threading okay go ahead go ahead",
    "start": "1651399",
    "end": "1659880"
  },
  {
    "text": "Sy does iten sorry through from say it again from the system from the oh to the",
    "start": "1659880",
    "end": "1667720"
  },
  {
    "text": "service manager so how does that how does this work so so when the system server goes over here to talk to service",
    "start": "1667720",
    "end": "1673039"
  },
  {
    "text": "manager no it actually so so the system server and this is kind of hard to to see and again there too many lines and",
    "start": "1673039",
    "end": "1679440"
  },
  {
    "text": "at some point you'll see that I gave up on lines but U the system server actually uses a service manager Java",
    "start": "1679440",
    "end": "1686720"
  },
  {
    "text": "class to say get a service by a particular name now that class what it",
    "start": "1686720",
    "end": "1692039"
  },
  {
    "text": "does it actually jumps into the jni again over jni to the to the lib binder",
    "start": "1692039",
    "end": "1698240"
  },
  {
    "text": "lib binder actually goes and asks the the/ debinder for for for service at",
    "start": "1698240",
    "end": "1704720"
  },
  {
    "text": "position zero and then you uses that actually creates a handle if you will to",
    "start": "1704720",
    "end": "1710080"
  },
  {
    "text": "something at position zero um and then anytime it wants to for example ask for a service like in this case over here",
    "start": "1710080",
    "end": "1716960"
  },
  {
    "text": "you can see it's asking for a service called you know vibrator so this that that kind of line it already knows how",
    "start": "1716960",
    "end": "1723799"
  },
  {
    "text": "to get to it and it's essentially talking to the driver and it's it's talking to the driver by memory mapping",
    "start": "1723799",
    "end": "1729399"
  },
  {
    "text": "debinder passing it a you know particular area of it passing a particular request at a at a you know",
    "start": "1729399",
    "end": "1735399"
  },
  {
    "text": "for whatever something by a particular name and getting uh um or sorry in this case it's talking",
    "start": "1735399",
    "end": "1741200"
  },
  {
    "text": "to the service manager but it's talking to it through binder as well so no there are no unic sockets in",
    "start": "1741200",
    "end": "1748320"
  },
  {
    "text": "this case used for anything okay so this is again one of the simpler ones um let's take a look at",
    "start": "1748320",
    "end": "1755960"
  },
  {
    "start": "1751000",
    "end": "2223000"
  },
  {
    "text": "something a little more complicated if you will um the power or the power management so I'm pretty sure most of",
    "start": "1755960",
    "end": "1763240"
  },
  {
    "text": "you here are familiar with wake locks um if not from using wake locks but you",
    "start": "1763240",
    "end": "1768799"
  },
  {
    "text": "know maybe from you disliking wake locks for one or other reasons so anyway um in Android we use wake locks to prevent the",
    "start": "1768799",
    "end": "1775360"
  },
  {
    "text": "device from essentially eagerly going into this suspense state to conserve power um but the question is how does",
    "start": "1775360",
    "end": "1782000"
  },
  {
    "text": "that work so in this case we have you know again on the right hand side sorry on the right hand side we have a system",
    "start": "1782000",
    "end": "1788480"
  },
  {
    "text": "server which again you know has a system server Java class which in this case",
    "start": "1788480",
    "end": "1794840"
  },
  {
    "text": "creates a power manager service power manager Service uh what it does and by",
    "start": "1794840",
    "end": "1801960"
  },
  {
    "text": "again this is just simple you know new so that's how I created it the power manager service basically gets",
    "start": "1801960",
    "end": "1807080"
  },
  {
    "text": "registered with the service manager again using you know power so quote",
    "start": "1807080",
    "end": "1812519"
  },
  {
    "text": "unquote power as as a name um that's how the service manager you know remembers it also power manager service service",
    "start": "1812519",
    "end": "1819720"
  },
  {
    "text": "links with this power. CPP which we'll see later on you know so so it it",
    "start": "1819720",
    "end": "1825000"
  },
  {
    "text": "provides some functionality okay and now we are you know that's the the system server part that's kind of the booting",
    "start": "1825000",
    "end": "1830880"
  },
  {
    "text": "process let's say we have an application that wants to use a weight clock so what it does it has an activity that and it",
    "start": "1830880",
    "end": "1837399"
  },
  {
    "text": "now wants to grab a wake CL in that activity it gets a reference to the power manager uh and again he gets a",
    "start": "1837399",
    "end": "1843519"
  },
  {
    "text": "reference to power manager usually through the context um by saying you know context do get system system server",
    "start": "1843519",
    "end": "1850200"
  },
  {
    "text": "sorry system service puts in quotes VI power and essentially gets a reference to the to the power manager now again",
    "start": "1850200",
    "end": "1857880"
  },
  {
    "text": "this is what that you know that's um sorry that's what that that that's what gives us this now the power manager what",
    "start": "1857880",
    "end": "1865120"
  },
  {
    "text": "it does it acts as a factory for these wake locks wake locks are objects that",
    "start": "1865120",
    "end": "1870720"
  },
  {
    "text": "are built from the power manager now what what it does is that it gives those",
    "start": "1870720",
    "end": "1875919"
  },
  {
    "text": "wake locks over to the activity the reason why it provides these objects as",
    "start": "1875919",
    "end": "1881200"
  },
  {
    "text": "wake locks is because wake locks are stateful they need to know what they are so that you can acquire them and later on you can release them and the state is",
    "start": "1881200",
    "end": "1888320"
  },
  {
    "text": "in the Wake lock essentially it's a it's a kind of a unique ID if you will or a name or tag um so the Wake lock is given",
    "start": "1888320",
    "end": "1895639"
  },
  {
    "text": "back to the activity activity will at some point go and say Wake loog that Acquire okay and this doesn't have to be",
    "start": "1895639",
    "end": "1901440"
  },
  {
    "text": "activity it could be you know a service or something other than that so it acquires the we clock now the the",
    "start": "1901440",
    "end": "1907799"
  },
  {
    "text": "acquire actually goes to the power manager stub which is or proxy I should",
    "start": "1907799",
    "end": "1913600"
  },
  {
    "text": "say which again we get a a reference to do by for going to the service manager",
    "start": "1913600",
    "end": "1920200"
  },
  {
    "text": "okay what it so essentially when this this reference this proxy is really",
    "start": "1920200",
    "end": "1927039"
  },
  {
    "text": "referencing this guy over here of course we can't go to it directly we have to go through it to binder okay so so we don't",
    "start": "1927039",
    "end": "1933600"
  },
  {
    "text": "actually the power manager in this case itself is well I should say this power",
    "start": "1933600",
    "end": "1938960"
  },
  {
    "text": "manager is useless after we get a get a wake lck the actual communication with",
    "start": "1938960",
    "end": "1945919"
  },
  {
    "text": "the power manager service is through the W clock no no longer through the power manager so after we",
    "start": "1945919",
    "end": "1952600"
  },
  {
    "text": "say you know acquire or release later on it again through a proxy goes to the",
    "start": "1952600",
    "end": "1959200"
  },
  {
    "text": "binder again binder issues a transaction on this power manager service power",
    "start": "1959200",
    "end": "1964960"
  },
  {
    "text": "manager service is essentially tied or extends from this stub that stub",
    "start": "1964960",
    "end": "1971120"
  },
  {
    "text": "provides one of those on transact methods which is what binder actually invokes that stuff goes and then Dem",
    "start": "1971120",
    "end": "1977320"
  },
  {
    "text": "Marshals the request into something that the power manager service implemented in Java knows and then the power manager",
    "start": "1977320",
    "end": "1984159"
  },
  {
    "text": "service now actually goes and say say wants to acquire weight clock it goes and calls a native method which now",
    "start": "1984159",
    "end": "1991720"
  },
  {
    "text": "comes from this power. CPP file again it's implemented through jni and then",
    "start": "1991720",
    "end": "1997000"
  },
  {
    "text": "this again goes and executes a h essentially function which is acquired",
    "start": "1997000",
    "end": "2004200"
  },
  {
    "text": "a wake lock which is implemented in this power. C now part of C is actually part",
    "start": "2004200",
    "end": "2009760"
  },
  {
    "text": "of this lip Hardware Legacy doso it could be implemented elsewhere but that's essentially what this you know by",
    "start": "2009760",
    "end": "2015360"
  },
  {
    "text": "default uses to to load it um what this does it does nothing more than a simple",
    "start": "2015360",
    "end": "2021480"
  },
  {
    "text": "write again simple ey or right to in this case CIS wake lock sorry CIS power",
    "start": "2021480",
    "end": "2027000"
  },
  {
    "text": "wake lock and passes the tag name as well as potential you know um expire if",
    "start": "2027000",
    "end": "2032279"
  },
  {
    "text": "you you're asking for a wake lock to AO expire later on when you want to release the Wake lock it does exactly the same",
    "start": "2032279",
    "end": "2038519"
  },
  {
    "text": "thing except that he goes again all the way down here and he talks to wake unlock to basically unlock that Serv or",
    "start": "2038519",
    "end": "2044919"
  },
  {
    "text": "unlock that the W Lo okay yeah well I think when I remember digging through the power manager service code it's",
    "start": "2044919",
    "end": "2053158"
  },
  {
    "text": "instead of mapping all the calls onto kernel wake locks the power manager service actually maintains all the user",
    "start": "2053159",
    "end": "2059358"
  },
  {
    "text": "space wake locks and then there's a single wake lock called Power Manager service which it grabs in the kernel and",
    "start": "2059359",
    "end": "2064760"
  },
  {
    "text": "releases if there's no w user space have requested so it basically multiplexes all the user space ones on the single",
    "start": "2064760",
    "end": "2072118"
  },
  {
    "text": "and it's it's possible that that's I'm not going to say that's not what's going on um I've actually not um I I should",
    "start": "2072119",
    "end": "2079760"
  },
  {
    "text": "should have double checked this for IC um either way whether whether",
    "start": "2079760",
    "end": "2085280"
  },
  {
    "text": "essentially the power manager as you said multiplexes you know the W locks ultimately it's going to go to that",
    "start": "2085280",
    "end": "2090560"
  },
  {
    "text": "driver whether it's going to use a shared wake clock or whether it's going to use you know a app specific W clock",
    "start": "2090560",
    "end": "2097000"
  },
  {
    "text": "clock point being is though that this W clock over here is referenced as some",
    "start": "2097000",
    "end": "2103320"
  },
  {
    "text": "sort of State on the side of the power manager service so that it knows essentially what's currently outstanding",
    "start": "2103320",
    "end": "2108560"
  },
  {
    "text": "go ahead yeah for what it's worth the gentleman's explanation seems",
    "start": "2108560",
    "end": "2113599"
  },
  {
    "text": "to yeah cool two questions first one is um if the application should fail how is",
    "start": "2114920",
    "end": "2122480"
  },
  {
    "text": "clean upom so activity manager service is also actually aware of the",
    "start": "2122480",
    "end": "2129680"
  },
  {
    "text": "currently outstanding or it's aware of basically applications that hold wake locks have not looked specifically into",
    "start": "2129680",
    "end": "2135560"
  },
  {
    "text": "how where it's holding that list but it does handle that um there may be something else as well that I'm not",
    "start": "2135560",
    "end": "2141760"
  },
  {
    "text": "looked into but uh I know that a service man activity manager service does have",
    "start": "2141760",
    "end": "2147000"
  },
  {
    "text": "essentially cleanup code as well in there like a binder diet so so so that's also a good point so um binder allows",
    "start": "2147000",
    "end": "2155040"
  },
  {
    "text": "you to to basically attach attach a a a call back to pretty much any process uh",
    "start": "2155040",
    "end": "2161240"
  },
  {
    "text": "so that if it dies you can execute you know random cleanup but I know that there's basically more cleanup that can",
    "start": "2161240",
    "end": "2167880"
  },
  {
    "text": "happen even if an application misbehaves uh which is not you know it dying it's just basically it says go",
    "start": "2167880",
    "end": "2173880"
  },
  {
    "text": "goes in a you know stop State and doesn't release a wake log there's there's some timeouts and and so on and so on implement the radi activity",
    "start": "2173880",
    "end": "2179800"
  },
  {
    "text": "manager service go does the um does weight Lo Tie Way",
    "start": "2179800",
    "end": "2187319"
  },
  {
    "text": "killer or resource activity killer that says hey this process is run away with",
    "start": "2187319",
    "end": "2193640"
  },
  {
    "text": "my battery life and be more aggressive killing it uh no a low memory",
    "start": "2193640",
    "end": "2199480"
  },
  {
    "text": "killer doesn't care about the Wake locks activity manager service does and activity manager service is actually the",
    "start": "2199480",
    "end": "2205599"
  },
  {
    "text": "first line of defense if you will in memory management so it'll it'll preemptive kill applications um the L",
    "start": "2205599",
    "end": "2211200"
  },
  {
    "text": "killer comes into play when when it activity manager service doesn't actually properly or or or when the applications don't die die so activity",
    "start": "2211200",
    "end": "2218560"
  },
  {
    "text": "manager does monitor the use of weight locks among other things yeah okay so",
    "start": "2218560",
    "end": "2224280"
  },
  {
    "start": "2223000",
    "end": "2338000"
  },
  {
    "text": "let's move on I I do have quite a few more things to talk about and one around time so alarms so you know this is how I",
    "start": "2224280",
    "end": "2231440"
  },
  {
    "text": "got you know here this morning uh by having you know this happen um so I use the desk clock APK which is a system you",
    "start": "2231440",
    "end": "2238800"
  },
  {
    "text": "know system application to to basically you know schedule an Alarm um on the right hand side again what do we have",
    "start": "2238800",
    "end": "2245680"
  },
  {
    "text": "you know we have a system server in uh in you instantial this alarm manager service Alarm manager service is links",
    "start": "2245680",
    "end": "2252720"
  },
  {
    "text": "to this alarm manager service. CPP um which we'll talk about you know how what it does later this on the other side we",
    "start": "2252720",
    "end": "2259359"
  },
  {
    "text": "have the the desk clock the desk clock again goes and talk has internally some sort of activity called alarm clock",
    "start": "2259359",
    "end": "2265599"
  },
  {
    "text": "which uses some sort of a you know functions stat a bunch of static functions implemented in this alarms",
    "start": "2265599",
    "end": "2271200"
  },
  {
    "text": "alarms actually uses a context and asks the context for the alarm manager",
    "start": "2271200",
    "end": "2277599"
  },
  {
    "text": "context actually this context implementation goes down to the binder and figures out it gives it something by",
    "start": "2277599",
    "end": "2283520"
  },
  {
    "text": "by name alarm so now we have the alarm manager now the alarm manager is what we invoke the alarm manager again is",
    "start": "2283520",
    "end": "2290240"
  },
  {
    "text": "implemented as a binder service so this is really uh what we we what we talk to is really a proxy that proxy goes down",
    "start": "2290240",
    "end": "2297079"
  },
  {
    "text": "to the to the to the binder then from the binder we have a call to the alarm manager service now we're saying for",
    "start": "2297079",
    "end": "2303599"
  },
  {
    "text": "example schedule something to be to be woken up um and then this this goes and",
    "start": "2303599",
    "end": "2309400"
  },
  {
    "text": "invokes a you know larm manager service you know of native implementation which uses ioctls to talk to the to the driver",
    "start": "2309400",
    "end": "2317040"
  },
  {
    "text": "which is implemented Dev Sol alarm now there's these lists of things that are scheduled and you know there's management of what's the next thing that",
    "start": "2317040",
    "end": "2324280"
  },
  {
    "text": "essentially needs to wake up the device we don't have the time to go into the specifics of I works but ultimately",
    "start": "2324280",
    "end": "2329560"
  },
  {
    "text": "that's the that's that's what happens when you schedule a repeating up you know repeating wake up or exact wake up",
    "start": "2329560",
    "end": "2336000"
  },
  {
    "text": "in the in in the future so package manager this is uh you know again just",
    "start": "2336000",
    "end": "2342359"
  },
  {
    "start": "2338000",
    "end": "2522000"
  },
  {
    "text": "to show you a little bit of a difference here we actually have yet another process so let's say you want to install",
    "start": "2342359",
    "end": "2347880"
  },
  {
    "text": "a new application what happens so typically you actually send an intent uh",
    "start": "2347880",
    "end": "2354040"
  },
  {
    "text": "to install application and you pass by URI the location of an APK which can be an SD card could be somewhere else um",
    "start": "2354040",
    "end": "2361280"
  },
  {
    "text": "and what you're doing is you're essentially launching this package installer package installer you know",
    "start": "2361280",
    "end": "2367160"
  },
  {
    "text": "inside of it has a package installer activity which happens to talk to this convenience class called installed app",
    "start": "2367160",
    "end": "2373040"
  },
  {
    "text": "progress which in turn gets a reference to the application basically this",
    "start": "2373040",
    "end": "2379720"
  },
  {
    "text": "application package manager and again this application package manager is an instance of package manager okay so it",
    "start": "2379720",
    "end": "2386680"
  },
  {
    "text": "actually builds it instantiates it it's kind of hardcoded um this package",
    "start": "2386680",
    "end": "2392359"
  },
  {
    "text": "manager this application package manager um essentially again talks to the binder",
    "start": "2392359",
    "end": "2398319"
  },
  {
    "text": "gets a reference to the remote service which is this package manager service and now has a proxy so hopefully you're",
    "start": "2398319",
    "end": "2405440"
  },
  {
    "text": "seeing a pattern here right um that that when we then invoke that proxy U",
    "start": "2405440",
    "end": "2410560"
  },
  {
    "text": "transaction method it goes again to the binder from binder involes a transaction into the package manager service how do",
    "start": "2410560",
    "end": "2416440"
  },
  {
    "text": "this get in here again the system server put it in here and registered it with the system service manager so now we",
    "start": "2416440",
    "end": "2422240"
  },
  {
    "text": "have the package manager service which we know extends from this stub again that the pro the stub of the marshalling the marshaling so now what what this",
    "start": "2422240",
    "end": "2429319"
  },
  {
    "text": "does it talks to this installer which is you know just a local a local you know",
    "start": "2429319",
    "end": "2434440"
  },
  {
    "text": "convenience if you will you know object that it's not exposed elsewhere um which in turn actually what's interesting",
    "start": "2434440",
    "end": "2441880"
  },
  {
    "text": "talks to this install D sorry I should say it sends messages to install the",
    "start": "2441880",
    "end": "2447880"
  },
  {
    "text": "Unix socket these messages are read by this installed Damon now why do we need this",
    "start": "2447880",
    "end": "2455680"
  },
  {
    "text": "installed the you know Damon why do we just not directly install the application um well the the reason being",
    "start": "2455680",
    "end": "2461880"
  },
  {
    "text": "is the system server runs as the system user and every application when when when installed or when created um needs",
    "start": "2461880",
    "end": "2469119"
  },
  {
    "text": "to be assigned a unique uid and then all the files and directories need to be owned by that uid so we we can't change",
    "start": "2469119",
    "end": "2476119"
  },
  {
    "text": "own uh the the the F the file the folders if you will the files from the system server so instead we have the",
    "start": "2476119",
    "end": "2483079"
  },
  {
    "text": "install D do that work for us this install D run as root and the reason why",
    "start": "2483079",
    "end": "2488680"
  },
  {
    "text": "only we can talk to install D and nobody else is because this basically socket is",
    "start": "2488680",
    "end": "2494560"
  },
  {
    "text": "only readable and writable by the system user and root so so that's how we get",
    "start": "2494560",
    "end": "2500119"
  },
  {
    "text": "the directory structure created now of course there's more work that happens in the background like the you know the",
    "start": "2500119",
    "end": "2506119"
  },
  {
    "text": "moving of the libraries into the the native librar in the right place the running of the Dex optimizations and so",
    "start": "2506119",
    "end": "2512560"
  },
  {
    "text": "on and so on we're we're not going to go into that but that's kind of the workflow and what's interesting is there's a helper Damon here being used",
    "start": "2512560",
    "end": "2519160"
  },
  {
    "text": "to to to augment that workflow um Wi-Fi so as you can see this",
    "start": "2519160",
    "end": "2525720"
  },
  {
    "start": "2522000",
    "end": "2820000"
  },
  {
    "text": "progressively getting more complicated um Wi-Fi by Wi-Fi I mean the Wi-Fi",
    "start": "2525720",
    "end": "2531079"
  },
  {
    "text": "management not the actual communication through Wi-Fi so ultimately what we have",
    "start": "2531079",
    "end": "2536119"
  },
  {
    "text": "is again let's say someone application that wants to initiate a scan of you know local hotspots again we have an",
    "start": "2536119",
    "end": "2542920"
  },
  {
    "text": "activity again we have a manager hopefully Again by now you're seeing the manager is nothing more than a proxy to",
    "start": "2542920",
    "end": "2549400"
  },
  {
    "text": "Shield us from knowledge of the binder the manager actually talks to this proxy which we obtain by grabbing a reference",
    "start": "2549400",
    "end": "2556599"
  },
  {
    "text": "to this Wi-Fi service now when we invoke a method call on that proxy that becomes",
    "start": "2556599",
    "end": "2562680"
  },
  {
    "text": "a transaction through binder so gets to binder then from binder then we we get into this you know Wi-Fi service Wi-Fi",
    "start": "2562680",
    "end": "2569400"
  },
  {
    "text": "service got in here by the system server basically creating it and then registering with the service manager the",
    "start": "2569400",
    "end": "2575599"
  },
  {
    "text": "Wi-Fi service what it does it calls talks to this wi-fi State machine there's this whole management of the",
    "start": "2575599",
    "end": "2580760"
  },
  {
    "text": "state on what's you know what is the state of the Wi-Fi whether it's active inactive whether it's supposed to be",
    "start": "2580760",
    "end": "2586680"
  },
  {
    "text": "active whether dri is loaded and so on and so on because um the Wi-Fi driver tends to be one that actually can be",
    "start": "2586680",
    "end": "2593440"
  },
  {
    "text": "loaded out loaded and reconfigured with different firmware if you for example want to use it in a you know in a normal",
    "start": "2593440",
    "end": "2599440"
  },
  {
    "text": "modor in this peer-to-peer or Wi-Fi Direct mode so let's again not get into the details of it but ultimately what",
    "start": "2599440",
    "end": "2606400"
  },
  {
    "text": "this is doing is then invoking Wi-Fi native Wi-Fi native is essentially just a bridge to the Sealand which or C++ if",
    "start": "2606400",
    "end": "2614760"
  },
  {
    "text": "you will which basically links to this wi-fi. CPP now wi-fi. CPP actually talks",
    "start": "2614760",
    "end": "2621559"
  },
  {
    "text": "to a h component which again comes from this blip Hardware Legacy it's wi-fi. C",
    "start": "2621559",
    "end": "2627960"
  },
  {
    "text": "which by default and most phones at least my Galaxy Nexus does use it um",
    "start": "2627960",
    "end": "2633040"
  },
  {
    "text": "that's essenti an implementation that it uses one of the things the Wi-Fi do see is resp responsible for is for example loading and unloading the driver into",
    "start": "2633040",
    "end": "2638800"
  },
  {
    "text": "the into the kernel um on my Nexus S for example that does happen on Galaxy Nexus that doesn't happen it's actually it's",
    "start": "2638800",
    "end": "2645280"
  },
  {
    "text": "not delivered as a as a module um but one other thing that it does let let's",
    "start": "2645280",
    "end": "2651000"
  },
  {
    "text": "say you want to scan for hotpots or or you want to initiate like a pink supplicant or or I don't know connect",
    "start": "2651000",
    "end": "2658359"
  },
  {
    "text": "initiate connection to a particular Network he basically talks to this WPA",
    "start": "2658359",
    "end": "2664119"
  },
  {
    "text": "client which comes from uh the the external directory and you may notice",
    "start": "2664119",
    "end": "2669720"
  },
  {
    "text": "that you know there's this WPA and there's different versions of it the five six and eight on Galaxy Nexus for",
    "start": "2669720",
    "end": "2674760"
  },
  {
    "text": "example uses version 8 this client then sends a message via a Unix socket again",
    "start": "2674760",
    "end": "2681920"
  },
  {
    "text": "gets you know I know the these lines crisscross here looks a little weird sends a message via Unix socket to this",
    "start": "2681920",
    "end": "2688200"
  },
  {
    "text": "WPA supplicant the wp supplicant is actually what talks to the driver and",
    "start": "2688200",
    "end": "2694040"
  },
  {
    "text": "does the configuration of the driver um now the way it talks to the driver it depends on you know the the wp suppliant",
    "start": "2694040",
    "end": "2700680"
  },
  {
    "text": "support different drivers in this case or at least the Galaxy Nexus this is the some broadcom driver that is essentially",
    "start": "2700680",
    "end": "2707119"
  },
  {
    "text": "that implements this NL you know 802 uh 2 211 you know 211 so 80211 API um and",
    "start": "2707119",
    "end": "2714839"
  },
  {
    "text": "essentially that's how the configuration happens go ahead yeah I don't know if you looked at it I know the wp standard",
    "start": "2714839",
    "end": "2721720"
  },
  {
    "text": "one they have a Linux and just mve it over and using do you know how much",
    "start": "2721720",
    "end": "2726800"
  },
  {
    "text": "changes they made to it to make it work with this C stack or is it just plain",
    "start": "2726800",
    "end": "2732240"
  },
  {
    "text": "standard WP there are I mean I've not so so so",
    "start": "2732240",
    "end": "2737359"
  },
  {
    "text": "honestly I've not used WPA or I not had any experience with WPA supplicant prior to Android so I I have seen changes to",
    "start": "2737359",
    "end": "2745359"
  },
  {
    "text": "the source code but that said it is in the external directory so they are you know I'm assuming trying to stay as",
    "start": "2745359",
    "end": "2751760"
  },
  {
    "text": "close to the to the Upstream as possible but I can't tell you specifically the the percentage if you will of the code",
    "start": "2751760",
    "end": "2757000"
  },
  {
    "text": "it's affected by you know Android I do know that there are different versions of it that you know",
    "start": "2757000",
    "end": "2762359"
  },
  {
    "text": "different different uh devices support different versions of w suppli depending on which which CS they have or or",
    "start": "2762359",
    "end": "2768599"
  },
  {
    "text": "drivers they have is the reason why they use sockets to communicate from the system server to the other demons is it",
    "start": "2768599",
    "end": "2775200"
  },
  {
    "text": "because it's just a a on toone connection and not a many to one connection like you know applications",
    "start": "2775200",
    "end": "2780480"
  },
  {
    "text": "talking to the system server I wonder why they don't use finder just to talk between the system yeah because so WPS supplicate is a it comes from from Linux",
    "start": "2780480",
    "end": "2788359"
  },
  {
    "text": "already I think it's dual license that's how why we we can use it and so they it already has this framework for basically",
    "start": "2788359",
    "end": "2795040"
  },
  {
    "text": "U you know so as a client in a server if you will so so rather than imp reimplementing the wheel they just you",
    "start": "2795040",
    "end": "2800520"
  },
  {
    "text": "know using it this way okay question so as far as",
    "start": "2800520",
    "end": "2808280"
  },
  {
    "text": "ice right a good point okay so location um",
    "start": "2814800",
    "end": "2822400"
  },
  {
    "start": "2820000",
    "end": "3074000"
  },
  {
    "text": "let's just quickly go over this um so location basically has a again u a",
    "start": "2822400",
    "end": "2828119"
  },
  {
    "text": "service here called location manager service which is put you know created by System server it extends from this stub",
    "start": "2828119",
    "end": "2835000"
  },
  {
    "text": "um which you know it's this stub comes from an a file and on the other side we",
    "start": "2835000",
    "end": "2840040"
  },
  {
    "text": "have an activity that wants to talk to a manager the manager again talks to proxy just like we've seen already nothing too",
    "start": "2840040",
    "end": "2846480"
  },
  {
    "text": "exciting on this side yet um when we say for example get Les last know location",
    "start": "2846480",
    "end": "2851720"
  },
  {
    "text": "what this does it asks well which provider we want to you know do this for with this GPS Network or passive um and",
    "start": "2851720",
    "end": "2859160"
  },
  {
    "text": "it also looks at whether it knows or it has the previous last know location um it then let's assume we we want GPS he",
    "start": "2859160",
    "end": "2866319"
  },
  {
    "text": "goes and talks to the GPS location provider which essentially uh first of all it loads it as a as a Java class or",
    "start": "2866319",
    "end": "2873280"
  },
  {
    "text": "Java object which essentially is implement the native functionality through this you know G GPS location",
    "start": "2873280",
    "end": "2878720"
  },
  {
    "text": "provider CPP which in this case looks for Via lip Hardware not lip Hardware",
    "start": "2878720",
    "end": "2885000"
  },
  {
    "text": "like gu lip hardware for a component called GPS um and then he has the lip",
    "start": "2885000",
    "end": "2890839"
  },
  {
    "text": "Hardware has a specific mechanism that he uses to search for these kind of how components some of them are Legacy some",
    "start": "2890839",
    "end": "2897119"
  },
  {
    "text": "of them are kind of the newer GPS being one of them and on my Galaxy Nexus it loads this particular Library that's the",
    "start": "2897119",
    "end": "2903119"
  },
  {
    "text": "first one that it finds uh so it deal opens the library that Library essentially provides the function",
    "start": "2903119",
    "end": "2908400"
  },
  {
    "text": "prototypes that you know they're they're declared in the gps. AG um and that what that knows how to talk to the actual GPS",
    "start": "2908400",
    "end": "2915119"
  },
  {
    "text": "Hardware in my case in Galaxy Nexus it is talking to this particular you know that's where the GPS is exposed through",
    "start": "2915119",
    "end": "2922000"
  },
  {
    "text": "and how it actually works it's proprietary I don't actually have access to the source code to this I have no clue how it actually um behaves",
    "start": "2922000",
    "end": "2928839"
  },
  {
    "text": "underneath the covers um that said on Galaxy S for or sorry nexs um you know",
    "start": "2928839",
    "end": "2934640"
  },
  {
    "text": "there was one extra component there was a GPS Damon um that I I'm not sure exactly what it did in terms of it",
    "start": "2934640",
    "end": "2940799"
  },
  {
    "text": "provided some sort of State whether it's to make GPS whether it just did caching whether it made the GPS AC you know",
    "start": "2940799",
    "end": "2947960"
  },
  {
    "text": "signal acquisition Faster by using you know access do networks and so on and so on um again that that's the part that",
    "start": "2947960",
    "end": "2955000"
  },
  {
    "text": "was proprietary um I know that it you know that was not part of the standard if you will but that's what the the the",
    "start": "2955000",
    "end": "2961480"
  },
  {
    "text": "GPS or the lid GPS if you will uh talk to on Galaxy uh on on sorry nexs um one",
    "start": "2961480",
    "end": "2968319"
  },
  {
    "text": "thing that's interesting about location though and this is true for other things like sensors and so on is that it also works the other way around so for",
    "start": "2968319",
    "end": "2974319"
  },
  {
    "text": "example um if you subscribe to receive not location updates what you're doing",
    "start": "2974319",
    "end": "2979839"
  },
  {
    "text": "essentially is over here you're passing a reference to some sort of a listener all the way over to this uh manager",
    "start": "2979839",
    "end": "2986079"
  },
  {
    "text": "service this manager service can for example now use that listener to post",
    "start": "2986079",
    "end": "2991200"
  },
  {
    "text": "updates you know that he gets from the from GPS and then the finder call goes",
    "start": "2991200",
    "end": "2996480"
  },
  {
    "text": "the other way around now the update is being executed inside of let's say the activity this you know they may",
    "start": "2996480",
    "end": "3002119"
  },
  {
    "text": "implement this location listener by a binder thread inside of the client app",
    "start": "3002119",
    "end": "3007359"
  },
  {
    "text": "so the communication can happen you know back and forth so asynchronously GRE yeah as a bsp",
    "start": "3007359",
    "end": "3014839"
  },
  {
    "text": "developer at what point am I allowed to change the API is it between the Java",
    "start": "3014839",
    "end": "3020319"
  },
  {
    "text": "and the uh servero so so you cannot change public API at all and call",
    "start": "3020319",
    "end": "3026200"
  },
  {
    "text": "yourself an call your device an Android compatible device period understood is live Android servers. part of the public",
    "start": "3026200",
    "end": "3033319"
  },
  {
    "text": "API or that top so you mean the what's implemented here uh there yes so it's a",
    "start": "3033319",
    "end": "3040880"
  },
  {
    "text": "good question I don't believe that the CTS or the CDD does you know talk about",
    "start": "3040880",
    "end": "3045960"
  },
  {
    "text": "specifically the Android for example the live Android service and what it needs to implement uh it does say for example",
    "start": "3045960",
    "end": "3051079"
  },
  {
    "text": "what the you know GPS age must stay consistent so this implement mation can be whatever you want to as long as",
    "start": "3051079",
    "end": "3057280"
  },
  {
    "text": "you're providing the same consistent implementation of the of the of the H component but whether for example you",
    "start": "3057280",
    "end": "3062520"
  },
  {
    "text": "can go and change this I believe you probably can I've not looked at it specifically um let me actually have a",
    "start": "3062520",
    "end": "3068799"
  },
  {
    "text": "few more things to talk about and we'll write I don't want to run out of time so and then I'll answer your questions afterwards um here's one another one",
    "start": "3068799",
    "end": "3075799"
  },
  {
    "start": "3074000",
    "end": "3231000"
  },
  {
    "text": "that's a little more complicated um you can see a lot of lines um so for example",
    "start": "3075799",
    "end": "3081480"
  },
  {
    "text": "here what we want to do is let's say change the volume on our device right there's something in Android called",
    "start": "3081480",
    "end": "3087280"
  },
  {
    "text": "audio policy uh there's actually a talk this morning on on the um tiny tiny Elsa",
    "start": "3087280",
    "end": "3094200"
  },
  {
    "text": "uh no tiny Ela is part of what we're going to use um tiny tiny something hul um audio hul or something uh they",
    "start": "3094200",
    "end": "3101040"
  },
  {
    "text": "basically you know talk talks about this in a little more detail but anyway let's",
    "start": "3101040",
    "end": "3106200"
  },
  {
    "text": "assume we want to change the change the volume so again re activity talks to the manager talks to the stuff talks to the",
    "start": "3106200",
    "end": "3112599"
  },
  {
    "text": "driver down below the binder binder goes over here to the to the audio sorry to the um audio service um that audio",
    "start": "3112599",
    "end": "3121040"
  },
  {
    "text": "service again this gets really messy with these lines so it's kind of hard to follow so bear with me here um this",
    "start": "3121040",
    "end": "3127000"
  },
  {
    "text": "audio service calls this audio system this audio system is actually implemented in jni through audio system.",
    "start": "3127000",
    "end": "3133559"
  },
  {
    "text": "CPP this in turn loads this audio system uh which comes from lid media which",
    "start": "3133559",
    "end": "3140760"
  },
  {
    "text": "actually initiates another binder call okay and this call is done in C or C++",
    "start": "3140760",
    "end": "3147359"
  },
  {
    "text": "so it calls this BP audio policy service which actually and again goes and gets a",
    "start": "3147359",
    "end": "3153119"
  },
  {
    "text": "reference to something called audio policy um so now we go grab a reference",
    "start": "3153119",
    "end": "3158720"
  },
  {
    "text": "to this or specifically the audio policy service which extends this this audio",
    "start": "3158720",
    "end": "3165160"
  },
  {
    "text": "policy service goes into essentially loads a h component a specific you know um um H component sorry not yet uh it",
    "start": "3165160",
    "end": "3173240"
  },
  {
    "text": "goes and calls this audio policy manager def default which then loads the hall component which in our the case of",
    "start": "3173240",
    "end": "3179400"
  },
  {
    "text": "Galaxy Nexus loads this tiny Elsa implementation which is new essentially it's a it's a simplified implementation",
    "start": "3179400",
    "end": "3185200"
  },
  {
    "text": "of the Elsa U and specifically inside of the mixer C uh cause or or passes",
    "start": "3185200",
    "end": "3192440"
  },
  {
    "text": "through ict's uh um essentially control to the to this driver to tell it for",
    "start": "3192440",
    "end": "3197960"
  },
  {
    "text": "example to adjust the volume okay now the volume adjustments can be directed for specific um channel so you can have",
    "start": "3197960",
    "end": "3204119"
  },
  {
    "text": "volume you know for for whatever Bluetooth and the lot speaker and so on and so on so but can as you can see here",
    "start": "3204119",
    "end": "3210480"
  },
  {
    "text": "what's interesting here is that you have actually two binder calls to get to this and the reason for this is because this is all in the media server this is in",
    "start": "3210480",
    "end": "3216480"
  },
  {
    "text": "the system server um this one actually going to leave for last because we are going to",
    "start": "3216480",
    "end": "3222640"
  },
  {
    "text": "run out of time because this this one is so complicated I you know give up on on drawing lines um but let me let me get",
    "start": "3222640",
    "end": "3229920"
  },
  {
    "text": "to this um let's couple mention a few more things um the telepon is interesting so so telepan is uh done",
    "start": "3229920",
    "end": "3236920"
  },
  {
    "start": "3231000",
    "end": "3355000"
  },
  {
    "text": "again slightly differently doesn't involve system server with with respect actually talking to the telephon itself",
    "start": "3236920",
    "end": "3242760"
  },
  {
    "text": "instead what it does you have this phone app which um essentially has this call controller um I don't know why we have",
    "start": "3242760",
    "end": "3249400"
  },
  {
    "text": "two of these one of these is actually activity which talks to this phone utilities which talks to the phone or",
    "start": "3249400",
    "end": "3254880"
  },
  {
    "text": "call manager which does talk to the audio manager which we actually mentioned on previous slide uh that it",
    "start": "3254880",
    "end": "3261240"
  },
  {
    "text": "could for example tells the system that you're now in a phone call so the system knows how to Ste Focus away from other",
    "start": "3261240",
    "end": "3266880"
  },
  {
    "text": "applications that may say playing music which then talks to this phone uh once we talk to the phone uh the phone is",
    "start": "3266880",
    "end": "3273799"
  },
  {
    "text": "actually sorry implemented by let's say a CDMA phone or GSM phone that g on Galaxy Nexus we have the GSM phone which",
    "start": "3273799",
    "end": "3280240"
  },
  {
    "text": "actually talks to real real is the radio um essentially interface or specifically",
    "start": "3280240",
    "end": "3285400"
  },
  {
    "text": "real talks to this U real D which is a Damon that and the way they communicate",
    "start": "3285400",
    "end": "3290920"
  },
  {
    "text": "is not by a binder but rather through Unix socket so there's the dev socket real D that essentially we use to",
    "start": "3290920",
    "end": "3297240"
  },
  {
    "text": "exchange messages real D is persistent um and the reason why it's persistent why it's not just a simple how is",
    "start": "3297240",
    "end": "3304040"
  },
  {
    "text": "because we needed to to to receive calls from the Bas band modem on unsolicited",
    "start": "3304040",
    "end": "3309119"
  },
  {
    "text": "requests like when there's a phone call coming in um so there's mechanism for us to receive those in here as well as to",
    "start": "3309119",
    "end": "3315440"
  },
  {
    "text": "send out messages um one of the things that real does it actually loads something called the real uh a li real",
    "start": "3315440",
    "end": "3322160"
  },
  {
    "text": "which in turn looks for a specific Library uh that's that is essentially a h so in my case it's this vendor lib uh",
    "start": "3322160",
    "end": "3330039"
  },
  {
    "text": "lib you know sack library which in our case again uses a specific driver to to",
    "start": "3330039",
    "end": "3336640"
  },
  {
    "text": "initiate communication with the basement modem through you know at commands for example um again this is mostly",
    "start": "3336640",
    "end": "3343240"
  },
  {
    "text": "proprietary we don't have access to the driver most of the time and um you know but that's generally how it works there's this whole audio component to it",
    "start": "3343240",
    "end": "3350000"
  },
  {
    "text": "which we're not going to you know have time to how does you know the audio fit into this picture um and let me just",
    "start": "3350000",
    "end": "3356079"
  },
  {
    "start": "3355000",
    "end": "3517000"
  },
  {
    "text": "mention one last one um and then we'll probably be wrapping up um so device",
    "start": "3356079",
    "end": "3361920"
  },
  {
    "text": "policy uh uh service so device policy is what you use to enforce the or or use",
    "start": "3361920",
    "end": "3367520"
  },
  {
    "text": "the device Administration which was added in Froyo um so for example let's say you wanted to initiate a whing of",
    "start": "3367520",
    "end": "3374160"
  },
  {
    "text": "the device okay let's say you have you are your application is device policy enabled so you are a device device",
    "start": "3374160",
    "end": "3380880"
  },
  {
    "text": "administrator let's say you want to WIP a device you have an activity that goes into this device policy manager that",
    "start": "3380880",
    "end": "3387359"
  },
  {
    "text": "again via Stu this proxy via the the you know that he gets from the service manager via the binder talks to",
    "start": "3387359",
    "end": "3393680"
  },
  {
    "text": "basically and this again gets a little complicated probably more than a little talks to basically this um let me find",
    "start": "3393680",
    "end": "3399680"
  },
  {
    "text": "it now device policy manager service device policy manager service actually talks to let's say you're doing the wipe",
    "start": "3399680",
    "end": "3406359"
  },
  {
    "text": "command I assume you have the permission for it talks to the recovery system the recovery system actually schedules goes",
    "start": "3406359",
    "end": "3413400"
  },
  {
    "text": "over here and this is C to see but he writes to this cash recovery directory",
    "start": "3413400",
    "end": "3418720"
  },
  {
    "text": "that say you want to wipe wipe the system um it then goes and schedules a reboot via the power manager power",
    "start": "3418720",
    "end": "3425440"
  },
  {
    "text": "manager essentially over here as you can see is talks this power or or or is",
    "start": "3425440",
    "end": "3430960"
  },
  {
    "text": "implemented and this is again a binder so this power manager is what we talked about previously which is implemented by",
    "start": "3430960",
    "end": "3436119"
  },
  {
    "text": "a power manager service so there's actually an internal binder call happening here um this is all still in the same process this goes and",
    "start": "3436119",
    "end": "3442680"
  },
  {
    "text": "essentially goes back over here to power to initiate a reboot I should say it talks to this shutdown thread which",
    "start": "3442680",
    "end": "3448920"
  },
  {
    "text": "talks to power to initiate a reboot the power actually goes and down below somewhere I can't find the link uh talks",
    "start": "3448920",
    "end": "3456240"
  },
  {
    "text": "to sorry right here to the power CPP which actually does a system called to initiate a reboot on reboot because we",
    "start": "3456240",
    "end": "3463160"
  },
  {
    "text": "wrote this file that we want to initiate and then we also defected something in the in the boot ROM we basically initi",
    "start": "3463160",
    "end": "3469760"
  },
  {
    "text": "you want to do a recovery what happens now is the recovery D this is after the reboot runs executes this recovery see",
    "start": "3469760",
    "end": "3476839"
  },
  {
    "text": "this goes and reads for the command and then based on the command oh I have four minutes that's amazing um and then reads",
    "start": "3476839",
    "end": "3483160"
  },
  {
    "text": "from the command and then based on that command goes and essentially executes a um um in this case erasing the volume uh",
    "start": "3483160",
    "end": "3491240"
  },
  {
    "text": "which then you know talks to the the MTD and you know erases block by block or",
    "start": "3491240",
    "end": "3496559"
  },
  {
    "text": "just reformats the volume depending on how it's implemented so what's interesting here is you can see there's again quite a few Services involved and",
    "start": "3496559",
    "end": "3503599"
  },
  {
    "text": "this doesn't even touch the whole picture I mean if I actually had to draw lines for everything You' be you know it's already just spr spaghetti as it is",
    "start": "3503599",
    "end": "3510359"
  },
  {
    "text": "but ultimately you know this what that's interesting is the service call happens after reboot through the use of recovery",
    "start": "3510359",
    "end": "3516760"
  },
  {
    "text": "um and let me just mention this briefly since I do have I guess three and a half minutes um in this case audio playback",
    "start": "3516760",
    "end": "3524839"
  },
  {
    "start": "3517000",
    "end": "3599000"
  },
  {
    "text": "so again this is somewhat complicated so I just you know just give up our lines",
    "start": "3524839",
    "end": "3530079"
  },
  {
    "text": "let's say you wanted to play an audio track um audio track is you do play through something called called media",
    "start": "3530079",
    "end": "3535160"
  },
  {
    "text": "player media player you have I don't know if any of you had a chance to look at the API but you'll see it has a fairly complicated State machine you",
    "start": "3535160",
    "end": "3542280"
  },
  {
    "text": "have to go and call you know set data source then you prepare and then you actually do the play and and each of",
    "start": "3542280",
    "end": "3549119"
  },
  {
    "text": "these calls actually goes through quite quite deep through the stack ultimately the what happens here is that this",
    "start": "3549119",
    "end": "3555720"
  },
  {
    "text": "activity may be talking to a media player which really just implemented through a c code which talks to an",
    "start": "3555720",
    "end": "3561440"
  },
  {
    "text": "actual proxy to a media player that exists over here um so the jni is",
    "start": "3561440",
    "end": "3567359"
  },
  {
    "text": "happening on the client side we're not doing binder in in you know from java to to system server or media server in in",
    "start": "3567359",
    "end": "3574000"
  },
  {
    "text": "fact we're doing the binder call from here so from here into here so it's kind",
    "start": "3574000",
    "end": "3581400"
  },
  {
    "text": "of it's It's not what we've seen before and again I couldn't draw lines for binder this player service actually",
    "start": "3581400",
    "end": "3586960"
  },
  {
    "text": "talks to this media player service which figures out what sort of a player to get let's assume this is a playing a local",
    "start": "3586960",
    "end": "3592960"
  },
  {
    "text": "file um and so now it's looking for a state TR player what's interesting is that binder supports sending file",
    "start": "3592960",
    "end": "3599799"
  },
  {
    "text": "descriptors from process to process and even though the file descriptor is not really the same number if you will on on",
    "start": "3599799",
    "end": "3605599"
  },
  {
    "text": "the side of the other on the other side it does point to the F same physical file and the same offset in that file so",
    "start": "3605599",
    "end": "3612319"
  },
  {
    "text": "that's so when we say play let's say an MP3 file we're sending a file descriptor to the other side to initiate the",
    "start": "3612319",
    "end": "3618000"
  },
  {
    "text": "playback we're not setting the raw data right we're not copying the data we're just setting a file descriptor now this stage right basically goes and in this",
    "start": "3618000",
    "end": "3625000"
  },
  {
    "text": "case let's say or initiate say an you know this awesome player it's interesting name this awesome player",
    "start": "3625000",
    "end": "3631520"
  },
  {
    "text": "basically goes and again depending on whether we in a in a set data source or",
    "start": "3631520",
    "end": "3636720"
  },
  {
    "text": "the prepare or the call there's different things that happens but ultimately what happens inside of this we're now in the stage right what",
    "start": "3636720",
    "end": "3642720"
  },
  {
    "text": "happens is that awesome player builds up this pipeline of um if you will media",
    "start": "3642720",
    "end": "3649160"
  },
  {
    "text": "sources that essentially present what you want to play so let me just quickly mention this um ultimately you know this",
    "start": "3649160",
    "end": "3656319"
  },
  {
    "text": "pipeline basically works by I tell I have two more minutes um this pipeline basically works like this you have a",
    "start": "3656319",
    "end": "3662720"
  },
  {
    "text": "media extractor which reads a raw file then you have essentially a decoder that",
    "start": "3662720",
    "end": "3667920"
  },
  {
    "text": "actually decodes data from that file then you have something and the code is implemented through this open Max",
    "start": "3667920",
    "end": "3674400"
  },
  {
    "text": "plugins which vendors can provide and then you have the actual uh media player",
    "start": "3674400",
    "end": "3679440"
  },
  {
    "text": "which is reading essentially one bite or I should say bite buffer at a time so it's saying okay the code one bite",
    "start": "3679440",
    "end": "3685480"
  },
  {
    "text": "buffer at a time this goes and says go and extract one b b buffer at a time then this goes and reads one bite buffer at a time from this media source which",
    "start": "3685480",
    "end": "3692200"
  },
  {
    "text": "could be either a local media Source or it could be like a network media Source ultimately this then talks to the AUD",
    "start": "3692200",
    "end": "3698160"
  },
  {
    "text": "flinger AUD flinger in my case talks to Ala this tiny ala tiny alsa talks to the my kernel driver and you know that's how",
    "start": "3698160",
    "end": "3705200"
  },
  {
    "text": "the media player payback happens there's also communication to the audio policy to acquire a focus and other things um",
    "start": "3705200",
    "end": "3713119"
  },
  {
    "text": "again I'd be happy to talk more but unfortunately we have run out of time uh so this is you know I'll take any",
    "start": "3713119",
    "end": "3719480"
  },
  {
    "text": "questions offline but uh thank you for your",
    "start": "3719480",
    "end": "3723160"
  },
  {
    "text": "[Music]",
    "start": "3726790",
    "end": "3732119"
  },
  {
    "text": "attention",
    "start": "3732119",
    "end": "3735119"
  }
]