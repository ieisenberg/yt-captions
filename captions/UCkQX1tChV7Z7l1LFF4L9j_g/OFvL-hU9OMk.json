[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "[Music]",
    "start": "500",
    "end": "9410"
  },
  {
    "text": "so um as I was saying this talk is going to be about clientside storage so during this talk I'll typically be talking",
    "start": "13120",
    "end": "19560"
  },
  {
    "text": "about not suitcases but storage this is the only image of storage that I could get on the internet I'll be talking",
    "start": "19560",
    "end": "25880"
  },
  {
    "text": "about storage on the browser uh and use using it today now I",
    "start": "25880",
    "end": "31119"
  },
  {
    "start": "28000",
    "end": "63000"
  },
  {
    "text": "know what question you're asking me the question you're asking me is why did I say browser and put that icon there well",
    "start": "31119",
    "end": "37719"
  },
  {
    "text": "uh okay that's also the browser and in fact a lot of people today would say this is the browser so yes we're going",
    "start": "37719",
    "end": "44800"
  },
  {
    "text": "to be typically talking about cross browser storage and when we talking about it let's also talk about how to",
    "start": "44800",
    "end": "50399"
  },
  {
    "text": "secure this and use it not just today but also like for the browsers that of",
    "start": "50399",
    "end": "55559"
  },
  {
    "text": "that are of yesterday so that's what the talk is going to be on it's going to be on",
    "start": "55559",
    "end": "60680"
  },
  {
    "text": "client side storage and using it today uh before we get started a little bit about myself my name is pararam",
    "start": "60680",
    "end": "68479"
  },
  {
    "start": "63000",
    "end": "86000"
  },
  {
    "text": "that's a long Indian name and I'm sure that it's going going to be hard to pronounce you can call me axe as it",
    "start": "68479",
    "end": "74680"
  },
  {
    "text": "happens to be uh parshuram in Sanskrit means a man with the axe and uh by",
    "start": "74680",
    "end": "80600"
  },
  {
    "text": "profession I'm an engineer I like building stuff especially mobile stuff and I've built",
    "start": "80600",
    "end": "88079"
  },
  {
    "start": "86000",
    "end": "115000"
  },
  {
    "text": "some heavy duty stuff for Microsoft and and sneak peek not that I'm implying that I've built sentries and stuff like that I mean I I'm all for pce so and",
    "start": "88079",
    "end": "96479"
  },
  {
    "text": "then I also have tiny hobby projects and that's who I am on",
    "start": "96479",
    "end": "102399"
  },
  {
    "text": "Twitter well uh you must have seen from the images on the site there were like a lot of gaming images uh I a huge fan of",
    "start": "102399",
    "end": "108479"
  },
  {
    "text": "Team Fortress how many here play Team Fortress wow that's a good good number",
    "start": "108479",
    "end": "115079"
  },
  {
    "start": "115000",
    "end": "133000"
  },
  {
    "text": "awesome so uh here's going to here's what the agenda is going to be uh I I",
    "start": "115320",
    "end": "120560"
  },
  {
    "text": "want to put a tough guy image there to make the talk serious but I really hope that because this is going to be uh how",
    "start": "120560",
    "end": "127039"
  },
  {
    "text": "many of you here are database administrators zero how many of you here are front end",
    "start": "127039",
    "end": "132879"
  },
  {
    "text": "developers almost all of you awesome so you know it's kind of hard to talk about storage and databases to a front- end",
    "start": "132879",
    "end": "139519"
  },
  {
    "text": "group and I hope that I'm able to make this talk as fun as possible and that's why I have all these references to Team",
    "start": "139519",
    "end": "145720"
  },
  {
    "text": "Fortress uh though it's all a reference uh you really don't have to understand team for to understand this talk but it it'll be",
    "start": "145720",
    "end": "152280"
  },
  {
    "text": "awesome if you are able to get onto Team Fortress but anyway so uh yeah that's the agenda um",
    "start": "152280",
    "end": "158959"
  },
  {
    "text": "what I wanted to do was reduce the big guy to a smaller part basically meaning have less slides and get something even",
    "start": "158959",
    "end": "166480"
  },
  {
    "text": "heavier get more code in yeah get some heavy duty stuff by the way that animation you saw there I actually took",
    "start": "166480",
    "end": "173239"
  },
  {
    "text": "some time to do it on Google dogs kind of looks cool right okay so uh as I was saying this is",
    "start": "173239",
    "end": "180080"
  },
  {
    "start": "177000",
    "end": "236000"
  },
  {
    "text": "pretty much going to be the agenda it's going to be using client side storage today just talking about three",
    "start": "180080",
    "end": "186640"
  },
  {
    "text": "points uh anyone recognize this anyone who's wow there are actually a lot of",
    "start": "186640",
    "end": "192200"
  },
  {
    "text": "people who are at least as old as I am that's good so uh this is the zorc game",
    "start": "192200",
    "end": "197239"
  },
  {
    "text": "and um I've kind of zarifi the presentation in a sense that uh rather",
    "start": "197239",
    "end": "202720"
  },
  {
    "text": "than me driving the presentation I think it'll be cool if you guys are able to drive the presentation uh the idea being",
    "start": "202720",
    "end": "208560"
  },
  {
    "text": "that uh I mean frankly to put it I I really don't know what you guys want to hear and uh my manager has taught me to",
    "start": "208560",
    "end": "214920"
  },
  {
    "text": "delegate anything that I I don't know how to do it and well I'm delegating it to you and tell me how how you want me",
    "start": "214920",
    "end": "220439"
  },
  {
    "text": "how you want the presentation to go so through this presentation uh we will we can take different routes different",
    "start": "220439",
    "end": "225599"
  },
  {
    "text": "paths uh just be mindful that we have only very limited amount of time uh and a question to the team",
    "start": "225599",
    "end": "231959"
  },
  {
    "text": "Fortress fans here uh what image is this this is the dead ringer it's it's",
    "start": "231959",
    "end": "237640"
  },
  {
    "text": "it's it's it's a game thing so anyway uh another thing I wanted to talk about was if you have heard me talk before",
    "start": "237640",
    "end": "244400"
  },
  {
    "text": "about index TB uh this is actually a little bit different in fact it's a lot more different because the last talk I",
    "start": "244400",
    "end": "250560"
  },
  {
    "text": "gave was six months ago and in six months I've actually had a lot of time to play a lot of games and write some",
    "start": "250560",
    "end": "256000"
  },
  {
    "text": "amount of code and it actually in incorporates all of that and the image that you see is basically a",
    "start": "256000",
    "end": "261040"
  },
  {
    "text": "representative of that how counter- strike used to be in the older times versus uh the the latest version so as",
    "start": "261040",
    "end": "267479"
  },
  {
    "text": "the business people say it it's new and improved I I guess you are the guys who have to judge so uh talking about using index DB",
    "start": "267479",
    "end": "276919"
  },
  {
    "start": "269000",
    "end": "305000"
  },
  {
    "text": "or using client side storage what what can you really do with client side storage well um how many of you here use",
    "start": "276919",
    "end": "283680"
  },
  {
    "text": "a web based client like Gmail uh hot Hotmail Gmail anything like that how many of you use a",
    "start": "283680",
    "end": "290600"
  },
  {
    "text": "desktop client and if you notice the split here is like 50% so it's it's kind of half",
    "start": "290600",
    "end": "296800"
  },
  {
    "text": "half of us use web base while the other half use desktop and the biggest complaint that desktop uh mail users",
    "start": "296800",
    "end": "302600"
  },
  {
    "text": "have is that their web clients cannot work when they go offline wouldn't it be cool if this entire part of Gmail was",
    "start": "302600",
    "end": "309240"
  },
  {
    "text": "taken and stored offline as a client side thing I mean they they were doing it using Google gears and websql but",
    "start": "309240",
    "end": "315440"
  },
  {
    "text": "Google gears is now deprecated and Google gears is not not maintained any longer wouldn't it be cooler if this was",
    "start": "315440",
    "end": "321160"
  },
  {
    "text": "available offline or even to start with something like U to-do lists this is the",
    "start": "321160",
    "end": "327160"
  },
  {
    "text": "this is remember the milk they also have an offline version again based on Gears not supported across",
    "start": "327160",
    "end": "332360"
  },
  {
    "text": "browsers and not just that but even for e-commerce sites how about bringing all the cataloges offline or how how about",
    "start": "332360",
    "end": "338280"
  },
  {
    "text": "bringing your shopping shopping list offline not only will bringing it all offline make your sites faster it'll",
    "start": "338280",
    "end": "345039"
  },
  {
    "text": "also give users a very very good experience when you when they're not online and that's actually very relevant",
    "start": "345039",
    "end": "350319"
  },
  {
    "start": "350000",
    "end": "445000"
  },
  {
    "text": "especially in the mobile world so um a quick glaze through about how the local",
    "start": "350319",
    "end": "356280"
  },
  {
    "text": "storage scenario was and uh people would even call call me crazy because I'm mentioning cookies when I'm talking",
    "start": "356280",
    "end": "362000"
  },
  {
    "text": "about local storage but cookies is pretty much this it was like a primitive primitive way of doing it all that we as",
    "start": "362000",
    "end": "369199"
  },
  {
    "text": "really really clever Engineers have done is put in a nice truck kind of thing on top of it and we we have kind of",
    "start": "369199",
    "end": "375880"
  },
  {
    "text": "glorified cookies but let's be real cookies are just not meant to be a thing for local",
    "start": "375880",
    "end": "380960"
  },
  {
    "text": "storage uh yeah the second thing that came after cookies or something that we are very comfortable with is the local",
    "start": "380960",
    "end": "387360"
  },
  {
    "text": "or the session storage concept where you just have a very simple window. Lo storage or window. session storage and",
    "start": "387360",
    "end": "392840"
  },
  {
    "text": "it's like a key value bag that you can add stuff to so that's local storage and",
    "start": "392840",
    "end": "399319"
  },
  {
    "text": "it was actually pretty useful but then it was overloaded we we started using local storage for everything right from",
    "start": "399319",
    "end": "405720"
  },
  {
    "text": "uh Network caches to say actually storing database kind of stuff how many of you here use local storage for real",
    "start": "405720",
    "end": "413639"
  },
  {
    "text": "websites not many that's that that's actually good uh so does that mean that you do not have a requirement for",
    "start": "413639",
    "end": "419759"
  },
  {
    "text": "storage or is it more because local storage is not the not the right thing to do it could be one of the one of the",
    "start": "419759",
    "end": "424960"
  },
  {
    "text": "two so uh yeah this is where the game part comes in do you guys want me to go on to web SQL or do you want want me to",
    "start": "424960",
    "end": "431759"
  },
  {
    "text": "talk a little bit about some of the local storage libraries libraries how many Li how many",
    "start": "431759",
    "end": "438840"
  },
  {
    "text": "people want to get into libraries that's actually a good number",
    "start": "438840",
    "end": "443879"
  },
  {
    "text": "awesome Google Docs and hyperlinks doing the magic so um there are a lot of",
    "start": "444520",
    "end": "450319"
  },
  {
    "start": "445000",
    "end": "574000"
  },
  {
    "text": "libraries for local storage primarily because it's been around for like 3 4 years and I think all of them do some uh",
    "start": "450319",
    "end": "456520"
  },
  {
    "text": "do very very similar stuff uh these were some of the these were the 10 libraries that I've actually had experience with",
    "start": "456520",
    "end": "462680"
  },
  {
    "text": "and there are a lot of other good ones outside let me quickly go through uh all these 10 uh I will be putting up these",
    "start": "462680",
    "end": "469440"
  },
  {
    "text": "slides on my blog and on SlideShare so you probably don't have to note these down these are these are in themselves",
    "start": "469440",
    "end": "475039"
  },
  {
    "text": "very good philosophies of how differently local storage can be used for example if you notice uh there is",
    "start": "475039",
    "end": "480879"
  },
  {
    "text": "persistent JS which kind of does websql a little bit of local storage and also",
    "start": "480879",
    "end": "486199"
  },
  {
    "text": "supports uh Google app engine storage or nodejs kind of uh uh paradigms there's also the other category that does local",
    "start": "486199",
    "end": "493800"
  },
  {
    "text": "storage with tables and queries or so you have like local storage DB you have",
    "start": "493800",
    "end": "499039"
  },
  {
    "text": "like um the Dom storage query language these are kind of sequel languages kind",
    "start": "499039",
    "end": "504840"
  },
  {
    "text": "of type of local libraries local storage libraries that let you do a little bit of querying",
    "start": "504840",
    "end": "510319"
  },
  {
    "text": "and then there are some local storage libraries that come built in with uh uh JavaScript libraries like uh yui or dojo",
    "start": "510319",
    "end": "518800"
  },
  {
    "text": "and that's kind of the landscape if you notice and the library that you choose for local storage is primarily dependent",
    "start": "518800",
    "end": "525600"
  },
  {
    "text": "on one what is your overarching framework or what is your general JavaScript framework I mean if you were",
    "start": "525600",
    "end": "530680"
  },
  {
    "text": "to use yah user interface yui Library as your JavaScript framework you probably wouldn't look at any other any anything",
    "start": "530680",
    "end": "536360"
  },
  {
    "text": "else except say yui cash offline or if you were to use use Dojo you would probably use Dojo or storage and that's",
    "start": "536360",
    "end": "543079"
  },
  {
    "text": "primarily what dominates what you want to what local storage Library do you",
    "start": "543079",
    "end": "548560"
  },
  {
    "text": "use uh and as you can see a very good a very interesting point to note here is",
    "start": "548560",
    "end": "554360"
  },
  {
    "text": "some of these libraries are actually trying to trying to be just storage libraries and support at the back end",
    "start": "554360",
    "end": "561079"
  },
  {
    "text": "they support things like say local storage or websql and that's actually a good thing because this way all of these",
    "start": "561079",
    "end": "566800"
  },
  {
    "text": "local storage things can become faster and also give you cross browser support so going back to our main story line",
    "start": "566800",
    "end": "574160"
  },
  {
    "start": "574000",
    "end": "598000"
  },
  {
    "text": "again uh local storage is available in Mobile so technically they do work in Mobile I personally have played around",
    "start": "574160",
    "end": "580800"
  },
  {
    "text": "with persistent GS and that does work in Mobile uh but uh hold that thought for a",
    "start": "580800",
    "end": "586000"
  },
  {
    "text": "minute because if you're thinking that wow they work in mobile this is how I should go probably there's some good good stuff that's coming towards the end",
    "start": "586000",
    "end": "592560"
  },
  {
    "text": "and uh so just hold hold that hold that thought for some time so yeah that's local storage and apart uh after local",
    "start": "592560",
    "end": "599959"
  },
  {
    "start": "598000",
    "end": "818000"
  },
  {
    "text": "storage was this whole brilliant effort by Google that started as a Google summer of code project it was called",
    "start": "599959",
    "end": "606360"
  },
  {
    "text": "websql and uh it was a very very simple concept the idea was almost all browsers",
    "start": "606360",
    "end": "612279"
  },
  {
    "text": "those days say Chrome or Firefox they did support this underlying embedded database called SQ light uh the idea was",
    "start": "612279",
    "end": "620600"
  },
  {
    "text": "why not just pick up SQ light expose it to JavaScript and why not every every web page start using it it was a",
    "start": "620600",
    "end": "626399"
  },
  {
    "text": "brilliant concept at that time because the only available storage me mechanisms so probably local storage and the bad uh",
    "start": "626399",
    "end": "632920"
  },
  {
    "text": "API that that is called cookies uh that's how it started so uh as the image shows you actually can poke",
    "start": "632920",
    "end": "640320"
  },
  {
    "text": "around and see what the engine is doing and it's it's like a it's like the engine part of the trailer truck and you",
    "start": "640320",
    "end": "645920"
  },
  {
    "text": "can ATT attach any payload any payload that you want and run your own uh",
    "start": "645920",
    "end": "651200"
  },
  {
    "text": "queries you can do stuff like create table from blah or you can say select star from and you can you have the power",
    "start": "651200",
    "end": "657160"
  },
  {
    "text": "of queries how many of you here have heard about websql or have had an experience with it that's a good number",
    "start": "657160",
    "end": "664279"
  },
  {
    "text": "so do the others want me to go into uh what web SQL is a quick",
    "start": "664279",
    "end": "669480"
  },
  {
    "text": "introduction yes how many s's the louder the better yes yes",
    "start": "669480",
    "end": "676360"
  },
  {
    "text": "awesome so uh what is this what does this look like it's a",
    "start": "676360",
    "end": "683880"
  },
  {
    "text": "browser um the whole concept of websql as I was saying was it's a database inside a browser",
    "start": "683880",
    "end": "689839"
  },
  {
    "text": "so for websql you pretty much have a database you can have multiple databases",
    "start": "689839",
    "end": "695240"
  },
  {
    "text": "and the way these are separated is exactly the same way cookies are separated they are separated by by the",
    "start": "695240",
    "end": "701360"
  },
  {
    "text": "uh same origin policy so for one origin you can have multiple databases inside a database you have",
    "start": "701360",
    "end": "708320"
  },
  {
    "text": "this whole concept of a transaction the whole point being when you do multiple operations you want them to be",
    "start": "708320",
    "end": "714360"
  },
  {
    "text": "encapsulated inside one single transaction it's one or nothing",
    "start": "714360",
    "end": "719839"
  },
  {
    "text": "and every database can have its own version of transaction and from this transaction you can directly access the",
    "start": "719839",
    "end": "725240"
  },
  {
    "text": "sqlite database you can pretty much to execute SQL commands so that's the kind",
    "start": "725240",
    "end": "730399"
  },
  {
    "text": "of SQL commands that you can uh actually directly execute and if you look at the Google Chrome source code I'm not sure",
    "start": "730399",
    "end": "737120"
  },
  {
    "text": "whether it's a good idea to pull it up right now but let's just see",
    "start": "737120",
    "end": "744360"
  },
  {
    "text": "so let's see yeah so it's in trunk",
    "start": "744360",
    "end": "751160"
  },
  {
    "text": "[Music] web you know what I think I I I'll pull",
    "start": "756420",
    "end": "762839"
  },
  {
    "text": "this up later but the point I was trying to make was if you actually go into the Google uh Chrome source code and look at",
    "start": "762839",
    "end": "768560"
  },
  {
    "text": "the SQL statement it will pretty much say execute SQL and then it will pretty much pass in the SQL statement that",
    "start": "768560",
    "end": "775000"
  },
  {
    "text": "you've given to directly to the database engine of course with a lot of sanitization and stuff so that the",
    "start": "775000",
    "end": "780399"
  },
  {
    "text": "security of the sandbox is maintained but that's the whole point uh the standard itself basically said uh web uh",
    "start": "780399",
    "end": "788920"
  },
  {
    "text": "web SQL that that's the name of the standard so the standard said you should be able to execute any SQL query and the",
    "start": "788920",
    "end": "796440"
  },
  {
    "text": "SQL should be formatted as a specific version of the sqlite SQL",
    "start": "796440",
    "end": "802000"
  },
  {
    "text": "language well uh unfortunately going back to our main",
    "start": "802000",
    "end": "807160"
  },
  {
    "text": "story unfortunately uh uh this is something that not all browsers could agree upon uh if you notice I was",
    "start": "807160",
    "end": "813720"
  },
  {
    "text": "mentioning repeatedly I was talking about Chrome and Firefox and to an extent Safari also but this is something",
    "start": "813720",
    "end": "820079"
  },
  {
    "start": "818000",
    "end": "945000"
  },
  {
    "text": "that Internet Explorer could not do for two reasons first Internet Explorer is not open source uh SQL Li is it's",
    "start": "820079",
    "end": "828600"
  },
  {
    "text": "probably going to be harder for Microsoft to take a non-op source project put it into into Internet Explorer without having to probably say",
    "start": "828600",
    "end": "835639"
  },
  {
    "text": "dilute their licenses and stuff the second thing and the second more important thing that Microsoft actually brought up was why should a web standard",
    "start": "835639",
    "end": "843160"
  },
  {
    "text": "be so very closely linked to a standard of an open source product and remember",
    "start": "843160",
    "end": "849279"
  },
  {
    "text": "that it's it's SQL itself as a standard is completely different uh websql was talking only about SQL lights",
    "start": "849279",
    "end": "856399"
  },
  {
    "text": "implementation of the SQL language and that was actually bad and looking at looking back at it right now it looks",
    "start": "856399",
    "end": "862199"
  },
  {
    "text": "like it was a good decision that Microsoft made primarily because Google now has replaced a web web SQL with",
    "start": "862199",
    "end": "868199"
  },
  {
    "text": "index DB and their underlying database is level DB and uh some of the performance tests that I've been able to",
    "start": "868199",
    "end": "873720"
  },
  {
    "text": "run indicate that level DB is way faster than Google uh Google's implementation of web SQL and that's actually a good",
    "start": "873720",
    "end": "879440"
  },
  {
    "text": "thing so in a way it did help Innovation um so while all this was",
    "start": "879440",
    "end": "886759"
  },
  {
    "text": "going on while I told you the story of what why Microsoft and even Mozilla to a very great extent thought that index DB",
    "start": "886759",
    "end": "892759"
  },
  {
    "text": "was a good idea and websql should be retired that's when the whole concept of indexed DB came in",
    "start": "892759",
    "end": "899720"
  },
  {
    "text": "uh index TB is basically an Isam based uh database indexed sequential access uh",
    "start": "899720",
    "end": "908279"
  },
  {
    "text": "has anyone here played with Berkeley DB a couple of them so uh Berkeley the",
    "start": "908279",
    "end": "913959"
  },
  {
    "text": "whole concept here is that it's not really relational in the true SQL sense where you can have foreign keys from",
    "start": "913959",
    "end": "919800"
  },
  {
    "text": "between one table to the other the point is you can kind of store key value Pairs",
    "start": "919800",
    "end": "925040"
  },
  {
    "text": "and probably iterate over them and index some values it may kind of look a little bit heavy right now but let me go into",
    "start": "925040",
    "end": "931399"
  },
  {
    "text": "the introduction of index DV and tell you how it works so index DB wanted to",
    "start": "931399",
    "end": "936560"
  },
  {
    "text": "be something like this uh any guesses on what this is I'm not able to hear any guesses uh",
    "start": "936560",
    "end": "945000"
  },
  {
    "text": "it's a Tru okay but people wanted it to be this Optimus Prime they wanted index",
    "start": "945000",
    "end": "950639"
  },
  {
    "text": "TV to be con to be a convertible super powerful robot but there are a lot of people who think that index DB is this",
    "start": "950639",
    "end": "959040"
  },
  {
    "text": "it's just a it's just a collection of truck parts it's not a whole system in its own and it's not usable at all and",
    "start": "959040",
    "end": "966240"
  },
  {
    "text": "the whole the the JavaScript Community or the frontend developer Community is very very divided on is index DB really",
    "start": "966240",
    "end": "972600"
  },
  {
    "text": "the next uh is is it really the future thing because it's actually not as powerful as websql I mean indexb doesn't",
    "start": "972600",
    "end": "978199"
  },
  {
    "text": "have queries and is that a good thing or a bad thing people are not sure uh through the stock I hope I am able to",
    "start": "978199",
    "end": "984000"
  },
  {
    "text": "give you my opinions and you guys can decide so submission mini game anyone wants to",
    "start": "984000",
    "end": "990759"
  },
  {
    "text": "do uh index DB uh introduction uh yes how many SES yes how",
    "start": "990759",
    "end": "997279"
  },
  {
    "text": "many NOS okay so we accept the submission and",
    "start": "997279",
    "end": "1004360"
  },
  {
    "start": "999000",
    "end": "1128000"
  },
  {
    "text": "quickly do a index DB refresher what is this awesome and",
    "start": "1004360",
    "end": "1012399"
  },
  {
    "text": "this it's a database inside the browser pretty much very similar to web SQL and exactly like websql you can have",
    "start": "1012399",
    "end": "1020959"
  },
  {
    "text": "multiple databases but if you notice there's one extra concept that I'm introducing here called an object store",
    "start": "1020959",
    "end": "1027640"
  },
  {
    "text": "so inside a database you have an object store and the object store is very very",
    "start": "1027640",
    "end": "1032760"
  },
  {
    "text": "similar to a table it can hold a key and a so there are only two columns if you may want to",
    "start": "1032760",
    "end": "1039079"
  },
  {
    "text": "call it you can you can hold a key and a value and you can hold multiple key",
    "start": "1039079",
    "end": "1044918"
  },
  {
    "text": "value Pairs and this is pretty much a simple table structure the key there are",
    "start": "1044919",
    "end": "1051320"
  },
  {
    "text": "different types that can be keys there are different types that can be values I'll talk about it later and once you have a set of these",
    "start": "1051320",
    "end": "1058600"
  },
  {
    "text": "values you would like to iterate over them and the best way to iterate over them is a concept called a cursor this",
    "start": "1058600",
    "end": "1064840"
  },
  {
    "text": "is a database concept where a cursor is effectively a something like a pointer about where you are during your",
    "start": "1064840",
    "end": "1071080"
  },
  {
    "text": "iteration it's like it's like your it's like it's like the I uh counter in your",
    "start": "1071080",
    "end": "1076280"
  },
  {
    "text": "Loop and so what you see here is it has an object store it has a cursor and on",
    "start": "1076280",
    "end": "1082400"
  },
  {
    "text": "these key values or on these values you can have indexes and indexes are pretty much like",
    "start": "1082400",
    "end": "1088520"
  },
  {
    "text": "say you have a Json object and one one of the properties in the Json object is a price you can actually have an index",
    "start": "1088520",
    "end": "1095120"
  },
  {
    "text": "on top of the price i' probably tell you why you need indexes as we go further but for now uh just think that there is",
    "start": "1095120",
    "end": "1101600"
  },
  {
    "text": "there is a requirement for indexes and you can iterate over indexes and uh what is this this is",
    "start": "1101600",
    "end": "1108360"
  },
  {
    "text": "exactly the same replica same story you can have multiple Keys multiple values and indexes let me quickly pause here",
    "start": "1108360",
    "end": "1115880"
  },
  {
    "text": "and ask you if you have any questions any questions uh is this clear is this",
    "start": "1115880",
    "end": "1121520"
  },
  {
    "text": "confusing how many think it's okay it's clear that's a good number anyone still",
    "start": "1121520",
    "end": "1127080"
  },
  {
    "text": "confused okay so uh some interesting uh parts of",
    "start": "1127080",
    "end": "1133960"
  },
  {
    "text": "the API or how the whole API was designed so if you notice local storage is a syn API which effectively means",
    "start": "1133960",
    "end": "1140799"
  },
  {
    "text": "when you once you want to set set an item or once you want to write data it probably is going to pause right to the",
    "start": "1140799",
    "end": "1146240"
  },
  {
    "text": "disc and come back uh that's not a great idea for web applications given that JavaScript is single threaded so that's",
    "start": "1146240",
    "end": "1152640"
  },
  {
    "text": "primarily the reason why indextv has a synchronous and an asynchronous API the synchronous API is available in web",
    "start": "1152640",
    "end": "1159120"
  },
  {
    "text": "workers the async is available on your window object uh as far as security is",
    "start": "1159120",
    "end": "1164960"
  },
  {
    "text": "concerned it's the it's the same security as cookies so it's about same same origin policy it's stay stored in",
    "start": "1164960",
    "end": "1171400"
  },
  {
    "text": "the is in almost the same place where your cookies are stored and stuff like that and the whole concept of index DB",
    "start": "1171400",
    "end": "1177919"
  },
  {
    "text": "revolves around the request so what you do is you start you say I want to open an object and what index DB will give",
    "start": "1177919",
    "end": "1184919"
  },
  {
    "text": "you back is a request and on the request you say request.on success do something request.on error do something else and",
    "start": "1184919",
    "end": "1192440"
  },
  {
    "text": "the whole of index GB API revolves around this concept of requests uh you probably",
    "start": "1192440",
    "end": "1199200"
  },
  {
    "text": "think this is a little bit heavy for now I will be going into C uh code questions very very soon Uh u i I will show you",
    "start": "1199200",
    "end": "1205799"
  },
  {
    "text": "code examples very soon and uh I I hope that makes it clear apart from that uh",
    "start": "1205799",
    "end": "1212280"
  },
  {
    "text": "there are all of these requests and responses they're all inside transactions you can do multiple reads",
    "start": "1212280",
    "end": "1218320"
  },
  {
    "text": "or multiple wrs inside transactions and there are three different types of transactions",
    "start": "1218320",
    "end": "1223880"
  },
  {
    "text": "typically in as in any database there's a read there's a write and apart from that there's a special transaction",
    "start": "1223880",
    "end": "1229760"
  },
  {
    "text": "called a version change transaction that occurs whenever you want to say change the schema or create a new object store",
    "start": "1229760",
    "end": "1235880"
  },
  {
    "text": "or delete a new Object Store and finally uh when I said the",
    "start": "1235880",
    "end": "1241200"
  },
  {
    "text": "keys can be Json objects they cannot they they they can actually be Json objects that can be reproduced I mean",
    "start": "1241200",
    "end": "1247039"
  },
  {
    "text": "you can't just have a Dom node and save it into the uh database and when getting it back that Dom node doesn't make any",
    "start": "1247039",
    "end": "1252360"
  },
  {
    "text": "sense right so there is this whole concept of a structured cloning algorithm which clones your Json object",
    "start": "1252360",
    "end": "1258880"
  },
  {
    "text": "so that it is independently reproducible and finally uh keys can be of different",
    "start": "1258880",
    "end": "1264320"
  },
  {
    "text": "types keys so JavaScript so question is Javascript a untyped language or a Loosely type",
    "start": "1264320",
    "end": "1270679"
  },
  {
    "text": "language it's a Loosely type language right so when when it's Loosely typed",
    "start": "1270679",
    "end": "1275720"
  },
  {
    "text": "how do you how do you deal with keys or how do you know if number one is greater than a string a for example uh index DB",
    "start": "1275720",
    "end": "1282640"
  },
  {
    "text": "defines those kind of coll and it says that this is how keys are encoded and and yes some heavy duty",
    "start": "1282640",
    "end": "1290080"
  },
  {
    "start": "1286000",
    "end": "1658000"
  },
  {
    "text": "stuff let's look at some sample code uh so actually you have three choices here",
    "start": "1290080",
    "end": "1295240"
  },
  {
    "text": "do you want to look at sample code do you want to see how Firefox or Chrome implements it or do you want to go back to the main",
    "start": "1295240",
    "end": "1300279"
  },
  {
    "text": "thread code sample code browser implementations wow there's like zero",
    "start": "1300279",
    "end": "1307559"
  },
  {
    "text": "people okay let's look at sample code so uh I put up this uh sample code",
    "start": "1307559",
    "end": "1314760"
  },
  {
    "text": "thing where you can look at how index DB code looks like so uh I'm sure this is too too tiny to read right are you able",
    "start": "1314760",
    "end": "1321360"
  },
  {
    "text": "to read it this okay so unfortunately like with",
    "start": "1321360",
    "end": "1328600"
  },
  {
    "text": "most vendor prefixes you'll have to jump through the Hoops about creating index DB so if the window. index DB object is",
    "start": "1328600",
    "end": "1334880"
  },
  {
    "text": "not present you'd probably look for a mozilla's implementation or you would look for web webkit",
    "start": "1334880",
    "end": "1341279"
  },
  {
    "text": "implementation or you would look for Microsoft implementation notice that Microsoft IE 10 actually does implement",
    "start": "1341279",
    "end": "1347320"
  },
  {
    "text": "index DV and I think uh all the three browsers are have either completely unprefixed them or are almost prefixing",
    "start": "1347320",
    "end": "1354039"
  },
  {
    "text": "it because I remember that Mozilla like a couple of days ago they did un prefix it webkit also had un unprefixed the",
    "start": "1354039",
    "end": "1360480"
  },
  {
    "text": "implementation very very uh like a couple of days ago so that's that that's",
    "start": "1360480",
    "end": "1366600"
  },
  {
    "text": "that's how you get started and you get hold of the indexed DB object then look at let's look at the second example of",
    "start": "1366600",
    "end": "1372480"
  },
  {
    "text": "opening a database opening a database is very very simple let's just look at this part so",
    "start": "1372480",
    "end": "1380799"
  },
  {
    "text": "what does this do any guesses what this statement does it basically opens a",
    "start": "1380799",
    "end": "1388080"
  },
  {
    "text": "database and remember I was talking about a request concept where you have where whenever you try to do something",
    "start": "1388080",
    "end": "1393919"
  },
  {
    "text": "it it gives you back a request object and then you do stuff with the request object that's what is exactly happening",
    "start": "1393919",
    "end": "1399840"
  },
  {
    "text": "and that's what makes it asynchronous so window. index db. open or index db. open",
    "start": "1399840",
    "end": "1405880"
  },
  {
    "text": "immediately require gives you back and open open uh uh idb request object and",
    "start": "1405880",
    "end": "1412320"
  },
  {
    "text": "what you do is to this request you kind of attach a success Handler you attach an event that needs",
    "start": "1412320",
    "end": "1419320"
  },
  {
    "text": "to be called when the version changes and you kind of continue doing that with",
    "start": "1419320",
    "end": "1424480"
  },
  {
    "text": "what happens if there's an upgrade needed or what happens if there's an error or what happens if this same",
    "start": "1424480",
    "end": "1429559"
  },
  {
    "text": "database is opened in multiple tabs in that case a blogged event is raised so what you notice here is in all these",
    "start": "1429559",
    "end": "1436760"
  },
  {
    "text": "cases events are raised on your request",
    "start": "1436760",
    "end": "1442159"
  },
  {
    "text": "object so um Yep this is how it looks like and once youve opened an object",
    "start": "1442159",
    "end": "1448320"
  },
  {
    "text": "let's say you want to like say uh write data to it so let's look at adding",
    "start": "1448320",
    "end": "1455200"
  },
  {
    "text": "data so the code that you see here is all about my sample uh I'm just",
    "start": "1455200",
    "end": "1461799"
  },
  {
    "text": "constructing a random test data and the best way to do it or best way to write",
    "start": "1461799",
    "end": "1466919"
  },
  {
    "text": "it is just this you do something called object store. add and all this does is",
    "start": "1466919",
    "end": "1472399"
  },
  {
    "text": "it simply adds it or writes the data to the database you may ask me the question where did I get a handle to Object Store",
    "start": "1472399",
    "end": "1478159"
  },
  {
    "text": "right so let me show you that bridge also so let me go",
    "start": "1478159",
    "end": "1485640"
  },
  {
    "text": "here and show you what transactions are so remember when I had done db. open",
    "start": "1485640",
    "end": "1493360"
  },
  {
    "text": "I I had gotten a request object and using that I had got this variable called DB which which",
    "start": "1493360",
    "end": "1498880"
  },
  {
    "text": "represents my database on the database I can open a new transaction using the do",
    "start": "1498880",
    "end": "1504760"
  },
  {
    "text": "transaction method and I can give it what should be",
    "start": "1504760",
    "end": "1509880"
  },
  {
    "text": "the name of the object store and what should be the type of the transaction in this case it's a read write",
    "start": "1509880",
    "end": "1515880"
  },
  {
    "text": "transaction and once I do this what I get back in return is a transaction",
    "start": "1515880",
    "end": "1521679"
  },
  {
    "text": "object and it is using this object that I can say transaction. Object Store and it'll give me back an object store so uh",
    "start": "1521679",
    "end": "1529720"
  },
  {
    "text": "three or four steps to writing uh to really writing data first open a database when you open it it'll give you",
    "start": "1529720",
    "end": "1535360"
  },
  {
    "text": "back a request object so let's actually look at the whole example together so uh",
    "start": "1535360",
    "end": "1542000"
  },
  {
    "text": "let me expand the data operations again so there is this neat little button called load prerequisits which",
    "start": "1542000",
    "end": "1547640"
  },
  {
    "text": "kind of loads the whole thing so let me just do that and yeah so you remember this code",
    "start": "1547640",
    "end": "1553399"
  },
  {
    "text": "right this is how you set it up do you remember this",
    "start": "1553399",
    "end": "1559000"
  },
  {
    "text": "card this is how you uh opened the index database object and if the database is",
    "start": "1559000",
    "end": "1564200"
  },
  {
    "text": "successful this is what is called are you guys able to read it when I highlight",
    "start": "1564200",
    "end": "1570320"
  },
  {
    "text": "it yes okay so this is what happens when on the on success object and what I'm",
    "start": "1570320",
    "end": "1577080"
  },
  {
    "text": "doing here is on success I get a handle to the database that is",
    "start": "1577080",
    "end": "1582480"
  },
  {
    "text": "this and let me skip over all the extra things because I don't worry if there's a version change or not and let me",
    "start": "1582480",
    "end": "1588799"
  },
  {
    "text": "quickly go to the transaction part so once I have the database object I get the transaction out of",
    "start": "1588799",
    "end": "1594760"
  },
  {
    "text": "it and once I have the transaction with me using the transaction I grab a handle",
    "start": "1594760",
    "end": "1602120"
  },
  {
    "text": "to the object store there you are and once I have the",
    "start": "1602120",
    "end": "1607960"
  },
  {
    "text": "object store I'm going down a little bit more and here you go this is how it",
    "start": "1607960",
    "end": "1614440"
  },
  {
    "text": "looks like uh do you want me to continue showing you more examples or shall we go back to the talk because there's a",
    "start": "1614440",
    "end": "1620320"
  },
  {
    "text": "little more to cover in the talk and I'm not sure if I will have time for it do you want to see more examples or go",
    "start": "1620320",
    "end": "1626120"
  },
  {
    "text": "back okay uh this this these examples are hosted off uh online and uh I will",
    "start": "1626120",
    "end": "1631960"
  },
  {
    "text": "be giving out a link at the end of the talk so you can actually go go go to this",
    "start": "1631960",
    "end": "1637240"
  },
  {
    "text": "website play around with it click on different examples See How They Run click on load requisites and you can run",
    "start": "1637240",
    "end": "1642399"
  },
  {
    "text": "them in line and see how they run so let me quickly go back do you want do you want to see the implementation on fire or",
    "start": "1642399",
    "end": "1649000"
  },
  {
    "text": "Chrome awesome uh but uh a quick note there I",
    "start": "1649000",
    "end": "1655240"
  },
  {
    "text": "was I was really hoping I can show you the implementation on Firefox or Chrome but given that you have decided not to",
    "start": "1655240",
    "end": "1660360"
  },
  {
    "start": "1658000",
    "end": "1721000"
  },
  {
    "text": "go that route a quick thing is uh if you use uh the SQ light manager which is a",
    "start": "1660360",
    "end": "1665840"
  },
  {
    "text": "Firefox add-on you can actually open up your uh index DB databases in Firefox and actually see how they look like and",
    "start": "1665840",
    "end": "1672200"
  },
  {
    "text": "through these examples I can I'll also be showing you how it shows up on the Chrome developer tools so",
    "start": "1672200",
    "end": "1678679"
  },
  {
    "text": "we go back we did this and we've done our",
    "start": "1678679",
    "end": "1685679"
  },
  {
    "text": "submission and yes so if you noticed for writing index TB you had to do four",
    "start": "1685919",
    "end": "1691080"
  },
  {
    "text": "things right what are the four things the first thing was opening a database uh second",
    "start": "1691080",
    "end": "1697120"
  },
  {
    "text": "was creating a transaction third was using the transaction get a handle to the object store and fourth is actually",
    "start": "1697120",
    "end": "1703799"
  },
  {
    "text": "right to the object store that's kind of hard so you know index DB in itself does not seem as powerful you know what would",
    "start": "1703799",
    "end": "1710480"
  },
  {
    "text": "be better you probably upgrade it upgrade it using libraries you know what would be even",
    "start": "1710480",
    "end": "1716600"
  },
  {
    "text": "better upgrade it even more using libraries and that's what the rest of this talk is going to be about so there",
    "start": "1716600",
    "end": "1723640"
  },
  {
    "start": "1721000",
    "end": "1923000"
  },
  {
    "text": "are a bunch of really good libraries that I've seen out in the uh open all of these are open source libraries that",
    "start": "1723640",
    "end": "1729600"
  },
  {
    "text": "play very well with index DB uh your choice which Library should I look into",
    "start": "1729600",
    "end": "1737559"
  },
  {
    "text": "uh G how many people want to see the jQuery index EB Library okay that's a good number I probably would do that first how many of",
    "start": "1737559",
    "end": "1744799"
  },
  {
    "text": "you want to see the link to index DB Library not many how many of you here know what link is L NQ that's a good",
    "start": "1744799",
    "end": "1752440"
  },
  {
    "text": "number okay so let's start with probably the jQuery index table Library so the reason I came up or I",
    "start": "1752440",
    "end": "1759480"
  },
  {
    "text": "wrote this library was because I really did not want to write so much boiler plate code every single",
    "start": "1759480",
    "end": "1766120"
  },
  {
    "text": "time so you know what I did I would yeah this is the best place to look at it so",
    "start": "1767039",
    "end": "1772840"
  },
  {
    "text": "you know what I did to make it simple here's what I did I'm not sure whether this is visible",
    "start": "1772840",
    "end": "1778880"
  },
  {
    "text": "but yeah so here's how the library looks like it says dollar. indexdb doob store.",
    "start": "1778880",
    "end": "1785559"
  },
  {
    "text": "add and then it returns a promise back whenever the addition is completed is this",
    "start": "1785559",
    "end": "1791080"
  },
  {
    "text": "better so this is a lot more usable right and that that's primarily the reason why I wrote it because all the",
    "start": "1791080",
    "end": "1796279"
  },
  {
    "text": "samples that I wanted to write with index TB I thought I didn't want to write like uh those four states every single time when I wanted to do an ad",
    "start": "1796279",
    "end": "1803559"
  },
  {
    "text": "and this is how this jQuery Library looks like uh how about say iterating over the objects or listing all the",
    "start": "1803559",
    "end": "1810360"
  },
  {
    "text": "items so this is how it looks like uh is this readable so it says dollar. indexdb doob",
    "start": "1810360",
    "end": "1817440"
  },
  {
    "text": "store. console. info so it's effectively very very similar to what jQuery does when iterating over elements and this",
    "start": "1817440",
    "end": "1824720"
  },
  {
    "text": "exactly does the same thing for you now let's look at how it looks if it's the whole index DB if I was to write native",
    "start": "1824720",
    "end": "1830120"
  },
  {
    "text": "index DB code so I just toggled the full code and here's how it looks like so what you did you opened the",
    "start": "1830120",
    "end": "1836720"
  },
  {
    "text": "index DV Library you got a transaction which is this line you got an object store which is",
    "start": "1836720",
    "end": "1843960"
  },
  {
    "text": "this line you open a cursor which is this line and whenever the cursor is successful you start you continue",
    "start": "1843960",
    "end": "1850679"
  },
  {
    "text": "writing or you continue displaying it and you have you you have to deal",
    "start": "1850679",
    "end": "1857039"
  },
  {
    "text": "with error conditions that every single point of time so the advantage of the jQuery index DB library is uh in the",
    "start": "1857039",
    "end": "1862799"
  },
  {
    "text": "each if you have an error you can actually say then do this so you you can use the jQuery Deford which is then",
    "start": "1862799",
    "end": "1869080"
  },
  {
    "text": "success comma failure and that's actually the biggest Advantage because all of your error error handling can be done at one place or can be done at",
    "start": "1869080",
    "end": "1876399"
  },
  {
    "text": "individual steps whatever you prefer do you want to see more examples of how the jQuery index DB library",
    "start": "1876399",
    "end": "1882679"
  },
  {
    "text": "is yes I heard one yes so I'd probably like show one",
    "start": "1882679",
    "end": "1889039"
  },
  {
    "text": "more uh yeah let's see how it looks",
    "start": "1889039",
    "end": "1893518"
  },
  {
    "text": "like let's look at something that's interesting yeah let's look at indexes for example so this is how indexing looks",
    "start": "1894880",
    "end": "1901440"
  },
  {
    "text": "like in jary index TV um there you go all you have to do is just like an",
    "start": "1901440",
    "end": "1906919"
  },
  {
    "text": "object store you can open up indexes and then you can iterate on top of indexes",
    "start": "1906919",
    "end": "1911960"
  },
  {
    "text": "so here in this case you iterate on price let's go back",
    "start": "1911960",
    "end": "1919840"
  },
  {
    "text": "so here are my slides so we did look at jqu index DB libraries we have five more",
    "start": "1921720",
    "end": "1927519"
  },
  {
    "text": "doors to go uh which one do you want to go next uh the people who shout the most are",
    "start": "1927519",
    "end": "1934919"
  },
  {
    "text": "going to that that's the path you're going to go so where do you want to go backbone",
    "start": "1934919",
    "end": "1941720"
  },
  {
    "text": "awesome so this actually came in very very early even when index TB was in its infant see and it's actually a pretty",
    "start": "1942880",
    "end": "1949639"
  },
  {
    "text": "good library because it it makes a lot more sense to gel it with backbone because if you notice backbone models",
    "start": "1949639",
    "end": "1955960"
  },
  {
    "text": "themselves can actually be persisted in index DB right and that's what that's exactly what this",
    "start": "1955960",
    "end": "1961919"
  },
  {
    "text": "does so as soon as I bring it yeah so if you notice backbone has this so both",
    "start": "1964600",
    "end": "1971279"
  },
  {
    "text": "backbone and the jary index TB Library have this Con really nice concept of migrations where this is what you do",
    "start": "1971279",
    "end": "1977120"
  },
  {
    "text": "whenever you start start up your model in case of uh say a backbone whenever you're defining or doing a backbone do",
    "start": "1977120",
    "end": "1982960"
  },
  {
    "text": "model. extend you also want to set up these things called object stores because this is effectively the way",
    "start": "1982960",
    "end": "1988720"
  },
  {
    "text": "you're telling backbone where my data should be stored so this is basically a little bit of housekeeping I'm I'm",
    "start": "1988720",
    "end": "1995600"
  },
  {
    "text": "saying that I need a data I need a object store called movies and in that movies I'll probably have indexes for",
    "start": "1995600",
    "end": "2002240"
  },
  {
    "text": "title uh format Etc and then the model itself is very very simple it's pretty",
    "start": "2002240",
    "end": "2007279"
  },
  {
    "text": "much the exact same uh backbone model you create a new model and you can",
    "start": "2007279",
    "end": "2012600"
  },
  {
    "text": "do a Fetch and this fetch will effectively fetch from your index DB library and the bigger the bigger",
    "start": "2012600",
    "end": "2019279"
  },
  {
    "text": "Advantage is the whole point of collections so when you're doing Fetch with collections you can actually do pseudo queries you can say get me the",
    "start": "2019279",
    "end": "2026240"
  },
  {
    "text": "movie or get me the theater that has that is at offset one and is at limit three and on success to such and such or",
    "start": "2026240",
    "end": "2034279"
  },
  {
    "text": "you can specify ranges or you can specify a little bit complex queries and if you notice here in this case you have",
    "start": "2034279",
    "end": "2040840"
  },
  {
    "text": "no idea or you have you you don't really have to understand anything about index TB all you all you need to know is",
    "start": "2040840",
    "end": "2046399"
  },
  {
    "text": "backbone models and you just need to know the fact that you want to sync you want to save it on your on your local",
    "start": "2046399",
    "end": "2051720"
  },
  {
    "text": "disk and this actually does a very very good job of it and uh if you notice so this is this",
    "start": "2051720",
    "end": "2058878"
  },
  {
    "text": "is yet another example and then the final part is how do you sync it back to your server this",
    "start": "2058879",
    "end": "2065320"
  },
  {
    "text": "is actually very very cool because not only can you save the data on your local uh disk or on the Lo users machine you",
    "start": "2065320",
    "end": "2072398"
  },
  {
    "text": "can actually save it and then sync it back and it's the usual Ajax sync method of backbone and this is actually pretty",
    "start": "2072399",
    "end": "2078040"
  },
  {
    "text": "cool pretty much abstracting or ensuring that the developer is not confused by index DB and continuous to work in their",
    "start": "2078040",
    "end": "2084800"
  },
  {
    "text": "comfort zone of backbone so that's the backbone uh",
    "start": "2084800",
    "end": "2090359"
  },
  {
    "text": "Library uh who's next how many of you here love uh couch",
    "start": "2095760",
    "end": "2102119"
  },
  {
    "start": "2096000",
    "end": "2221000"
  },
  {
    "text": "TB not a lot of people do you want me to go in yeah louder yeah",
    "start": "2102119",
    "end": "2110079"
  },
  {
    "text": "awesome so uh actually let me not go in here and let me show show you couch the same way I was showing you",
    "start": "2110440",
    "end": "2118760"
  },
  {
    "text": "examples so if you notice couch also fits in very very well with uh the whole",
    "start": "2118839",
    "end": "2124119"
  },
  {
    "text": "index DB Paradigm because couch is also about uh object stores it's also about key value pairs it's also about",
    "start": "2124119",
    "end": "2130520"
  },
  {
    "text": "iterating and stuff so yep there you",
    "start": "2130520",
    "end": "2135599"
  },
  {
    "text": "go uh just a minute yeah so this is how you so in case of",
    "start": "2135599",
    "end": "2142760"
  },
  {
    "text": "couch for example this is how uh so couch this is",
    "start": "2142760",
    "end": "2149640"
  },
  {
    "text": "a couch like API it's called portable couch or pouch for example and here all your URLs are prefix with an idb colon",
    "start": "2149640",
    "end": "2156400"
  },
  {
    "text": "SL slash instead of actually referring to the referring to a real backend server and what you do do is when you",
    "start": "2156400",
    "end": "2162319"
  },
  {
    "text": "create pouch and you say this is your database name you will have you will have direct access to your database your",
    "start": "2162319",
    "end": "2168880"
  },
  {
    "text": "indexed DB database remember this is local this is not remote and then if you want to say",
    "start": "2168880",
    "end": "2174200"
  },
  {
    "text": "create a document let me load load prerequisites so what you had is you created the",
    "start": "2174200",
    "end": "2179960"
  },
  {
    "text": "database this way and then you say db. poost and your here your document is printed or your document is uploaded",
    "start": "2179960",
    "end": "2187839"
  },
  {
    "text": "you can continue uh to do things like fetching documents or say querying the database in the exact same method",
    "start": "2187839",
    "end": "2194000"
  },
  {
    "text": "querying is almost similar across all these libraries and if you notice does this feel like couch does this have a",
    "start": "2194000",
    "end": "2200280"
  },
  {
    "text": "good feel of couch yes right so that's actually that that's even better because in this case now not only can you use",
    "start": "2200280",
    "end": "2207119"
  },
  {
    "text": "couch on the back end you can actually use JavaScript to use couch so that it synced between your back end and your",
    "start": "2207119",
    "end": "2212359"
  },
  {
    "text": "front end Okay so",
    "start": "2212359",
    "end": "2219520"
  },
  {
    "start": "2221000",
    "end": "2319000"
  },
  {
    "text": "go on or one more Library uh yeah the question is there's",
    "start": "2221280",
    "end": "2227839"
  },
  {
    "text": "something about the mobile world you probably have to hold on a little bit more I know I'm running out of time so",
    "start": "2227839",
    "end": "2232880"
  },
  {
    "text": "let me actually yeah this this is where the mobile comes in so this is actually a very good picture that I I came across",
    "start": "2232880",
    "end": "2239160"
  },
  {
    "text": "about so I searched for browser incompatibilities and Google shows me this picture how how much more app can",
    "start": "2239160",
    "end": "2245280"
  },
  {
    "text": "it be so the whole landscape you have index DB on one side index DB is",
    "start": "2245280",
    "end": "2250640"
  },
  {
    "text": "supported by Internet Explorer Firefox and chrome the other side of the bridge you have web SQL which is supported by",
    "start": "2250640",
    "end": "2256920"
  },
  {
    "text": "Opera Safari and chrome again so Chrome is a chrome is playing uh a good citizen by being on both sides of the bridge but",
    "start": "2256920",
    "end": "2264119"
  },
  {
    "text": "pretty much you know what this means for the developer it means this a developer cannot use index DB right now a",
    "start": "2264119",
    "end": "2270839"
  },
  {
    "text": "developer cannot use websql right now effectively meaning a developer cannot use client side storage right now well",
    "start": "2270839",
    "end": "2278119"
  },
  {
    "text": "once you have Bridges like this uh once you have badly built Bridges like this you also have people who come up with",
    "start": "2278119",
    "end": "2284280"
  },
  {
    "text": "interesting bridges that kind of are bridges between Bridges so the picture that you see here is uh a bridge that's",
    "start": "2284280",
    "end": "2291160"
  },
  {
    "text": "between Hong Kong and Mainland China uh the way it works is I'm from India and uh the the way we drive on the road is",
    "start": "2291160",
    "end": "2297839"
  },
  {
    "text": "completely opposite to the way we drive drive in the US and that's actually true between Hong Kong and Mainland China and",
    "start": "2297839",
    "end": "2304200"
  },
  {
    "text": "the traffic so instead of like putting say traffic signals and stopping the cars that are coming in from the right to make way for the people who are going",
    "start": "2304200",
    "end": "2310400"
  },
  {
    "text": "to the left this really really interesting Loop pretty much inverses the way once you're going from China to",
    "start": "2310400",
    "end": "2316119"
  },
  {
    "text": "Hong Kong or the way back so that's what it does it is actually a bridge between the bridges and that is exactly what the",
    "start": "2316119",
    "end": "2323240"
  },
  {
    "start": "2319000",
    "end": "2570000"
  },
  {
    "text": "indexdb polyfill is so I I was playing around with this whole idea about using client side storage and enabling offline",
    "start": "2323240",
    "end": "2330040"
  },
  {
    "text": "stuff on the mobile spe or at least enabling off offline stuff on uh desktop",
    "start": "2330040",
    "end": "2335160"
  },
  {
    "text": "browsers but if I cannot support all the browsers it's it's pretty much a failure",
    "start": "2335160",
    "end": "2340359"
  },
  {
    "text": "and that's pretty much what prompted me to write an index DB polyfill for all these",
    "start": "2340359",
    "end": "2345720"
  },
  {
    "text": "browsers and hence meaning that the index GB API can be used across all these browsers and",
    "start": "2345720",
    "end": "2352560"
  },
  {
    "text": "this so uh let's quickly look at an example so I have uh index DB so here's",
    "start": "2352560",
    "end": "2359319"
  },
  {
    "text": "the uh index DB example opened in Firefox",
    "start": "2359319",
    "end": "2365119"
  },
  {
    "text": "so I say it's it's a very simple web store it's a it's a sort of an e-commerce site where I have like a",
    "start": "2365119",
    "end": "2371400"
  },
  {
    "text": "whole bunch of items it's probably books yeah I have like a whole bunch of items and I can say add to card and when I add",
    "start": "2371400",
    "end": "2377359"
  },
  {
    "text": "to card it's kind of stored here and when I say move to wish list",
    "start": "2377359",
    "end": "2383040"
  },
  {
    "text": "it's kind of move move to my wish list the whole point here being there are three data three three object stores the",
    "start": "2383040",
    "end": "2388560"
  },
  {
    "text": "first is the catalog the second is the card and the third is the wish list so if you were to see this in Chrome for",
    "start": "2388560",
    "end": "2394040"
  },
  {
    "text": "example so it's exactly the same thing I do this",
    "start": "2394040",
    "end": "2401960"
  },
  {
    "text": "I move to wish list and if I open up my developer toolbar go to resources go to",
    "start": "2401960",
    "end": "2407240"
  },
  {
    "text": "index DB that's exactly what you see you see that uh my database is called uh is",
    "start": "2407240",
    "end": "2412319"
  },
  {
    "text": "this visible better so it's it's effectively this it",
    "start": "2412319",
    "end": "2419319"
  },
  {
    "text": "has a table it has all these three different object stores which basically means I'm not lying I this is actually a",
    "start": "2419319",
    "end": "2425599"
  },
  {
    "text": "live example and it works I mean in case you guys had the question so it works on Opera also Opa doesn't",
    "start": "2425599",
    "end": "2433119"
  },
  {
    "text": "support uh index DB in fact let me do it and show it you it's yeah this is not a",
    "start": "2433119",
    "end": "2438960"
  },
  {
    "text": "screenshot there you go I can actually do stuff like sort",
    "start": "2438960",
    "end": "2444359"
  },
  {
    "text": "show all sort by Price Etc sort by price is basically price being the index it",
    "start": "2444359",
    "end": "2449440"
  },
  {
    "text": "works on Safari also and when I say it works on Safari it means it it pretty much is going to work on your mobile",
    "start": "2449440",
    "end": "2454599"
  },
  {
    "text": "browsers too so there you go and in in case of safari",
    "start": "2454599",
    "end": "2459920"
  },
  {
    "text": "if you take a look at how it works or how it's implemented internally it's actually implemented using websql so",
    "start": "2459920",
    "end": "2466160"
  },
  {
    "text": "it's the whole same story again except that in this case all of these are tables and the and the index DB polyfill",
    "start": "2466160",
    "end": "2474040"
  },
  {
    "text": "pretty much stores all of your values in tables here and I think the the big the",
    "start": "2474040",
    "end": "2479240"
  },
  {
    "text": "best illustration for this is Google Chrome because Chrome supports both of them so let me go back to",
    "start": "2479240",
    "end": "2485760"
  },
  {
    "text": "Chrome yeah if you look at this here in Chrome there is oops there is this guy",
    "start": "2485760",
    "end": "2491920"
  },
  {
    "text": "called databases which shows me all the websql databases that I have and there is this index DB that shows me all the",
    "start": "2491920",
    "end": "2497359"
  },
  {
    "text": "index DB index databases that I have and in case of chrome I can switch the example to run either on websql or on",
    "start": "2497359",
    "end": "2503280"
  },
  {
    "text": "index DB so going back the question is how",
    "start": "2503280",
    "end": "2508920"
  },
  {
    "text": "does it work on phone Gap well uh here's my Eclipse code if Eclipse thinks that",
    "start": "2508920",
    "end": "2516040"
  },
  {
    "text": "it's good enough to open yeah so here's my Eclipse code it's the same story on phone Gap I have a",
    "start": "2516040",
    "end": "2521119"
  },
  {
    "text": "regular rudimentary uh Android application set up uh all the magic",
    "start": "2521119",
    "end": "2526880"
  },
  {
    "text": "happens in the assets dubdub duub folder and if you notice this is the exact same",
    "start": "2526880",
    "end": "2531920"
  },
  {
    "text": "example that I was showing you it's the same source code here with the addition of the fact that on my",
    "start": "2531920",
    "end": "2538880"
  },
  {
    "text": "index.html uh I have included",
    "start": "2540920",
    "end": "2545480"
  },
  {
    "text": "I have included this index DB polyfill and what this does is even in Android and on the iPhone it pretty much uses",
    "start": "2548640",
    "end": "2555680"
  },
  {
    "text": "index TB polyl uses web SQL and adds in all the data there uh so does that answer your mobile",
    "start": "2555680",
    "end": "2563920"
  },
  {
    "text": "question okay so going",
    "start": "2564119",
    "end": "2570160"
  },
  {
    "start": "2570000",
    "end": "2798000"
  },
  {
    "text": "back so that's the index DB polyfill and apart from index DB you also have a lot of other uh libraries that just",
    "start": "2570160",
    "end": "2577680"
  },
  {
    "text": "do uh save value and return value back and these are these work across indexdb",
    "start": "2577680",
    "end": "2583040"
  },
  {
    "text": "websql and um local storage and these are these are three of the libraries that I actually came across uh they pick",
    "start": "2583040",
    "end": "2589520"
  },
  {
    "text": "up the store that is available and you can actually use these today to ensure that uh your data is actually persisted",
    "start": "2589520",
    "end": "2596359"
  },
  {
    "text": "on the client and the last section of the presentation is going to be about performance so given that it's about",
    "start": "2596359",
    "end": "2603240"
  },
  {
    "text": "index TB shouldn't it be fast I think it should be so I was able to write a couple of performance benchmarks here so",
    "start": "2603240",
    "end": "2611280"
  },
  {
    "text": "this is uh this is a Google uh this is a g project that I was able to uh that I cloned from a different project and I",
    "start": "2611280",
    "end": "2617319"
  },
  {
    "text": "basically uh added browser scrope to it it this will fail on Firefox because there's no web SQL so let me run this on",
    "start": "2617319",
    "end": "2623240"
  },
  {
    "text": "Chrome because Chrome has both of them so I run it on Chrome close my",
    "start": "2623240",
    "end": "2630599"
  },
  {
    "text": "developer tool barar and this basically Compares local storage web SQL and uh index DB",
    "start": "2630599",
    "end": "2637280"
  },
  {
    "text": "and if you notice here there are cases where I mean in this case I'm trying to save something to the local storage which is like almost instantaneous but",
    "start": "2637280",
    "end": "2643760"
  },
  {
    "text": "if you notice web websql is actually a little bit faster a little bit slower than index",
    "start": "2643760",
    "end": "2649680"
  },
  {
    "text": "TBS uh let me just reduce this yeah so there are cases where websql is",
    "start": "2651440",
    "end": "2657920"
  },
  {
    "text": "faster there are cases where websql is slower than indextv and this is effectively uh depending on the type of",
    "start": "2657920",
    "end": "2663559"
  },
  {
    "text": "data that I'm writing and the way I'm writing these data uh these T are also available on GitHub and I welcome you to",
    "start": "2663559",
    "end": "2669440"
  },
  {
    "text": "play around with it to see how it suits your data and how it works for your data and finally if you really want to play",
    "start": "2669440",
    "end": "2676240"
  },
  {
    "text": "around with index DB and see how it works I think the best example is",
    "start": "2676240",
    "end": "2682119"
  },
  {
    "text": "this how many of you use Chrome tracing for your everyday uh performance analysis Chrome colon tracing one okay",
    "start": "2683160",
    "end": "2691440"
  },
  {
    "text": "so uh the good thing about this is Chrome colon tracing actually adds support for index DB so let me start",
    "start": "2691440",
    "end": "2696559"
  },
  {
    "text": "recording and let me say go to my example",
    "start": "2696559",
    "end": "2703920"
  },
  {
    "text": "here and let me do a couple of",
    "start": "2704319",
    "end": "2708240"
  },
  {
    "text": "operations then I say stop and what I should be able to see",
    "start": "2715319",
    "end": "2720480"
  },
  {
    "text": "here in this really really ugly looking graph is if I'm able to find it it is",
    "start": "2720480",
    "end": "2726480"
  },
  {
    "text": "effectively that whenever uh whenever index DB operations happen it shows that one of these uh bars will show that it's",
    "start": "2726480",
    "end": "2733760"
  },
  {
    "text": "an idb transaction or it will show that it's it's actually writing it to the object store or it's reading it from the object store and this effectively will",
    "start": "2733760",
    "end": "2740599"
  },
  {
    "text": "also let you know if you want to put multiple transaction into uh using window. set timeout or you want to use",
    "start": "2740599",
    "end": "2746240"
  },
  {
    "text": "one transaction and write multiple values and things like that and uh yep so I think I'm almost",
    "start": "2746240",
    "end": "2755240"
  },
  {
    "text": "out of time and like all gamer once you're at the end of the level you'll typically be thinking I probably should",
    "start": "2755240",
    "end": "2761000"
  },
  {
    "text": "have played those other parts that I haven't played uh right now looks like we don't have time for it but I will be",
    "start": "2761000",
    "end": "2767000"
  },
  {
    "text": "hanging around here uh I will be ready uh more than happy to answer your questions and while I'm answering your",
    "start": "2767000",
    "end": "2772599"
  },
  {
    "text": "questions these are the links this is where most of your uh most of the things that you would want for index DB would be so in interest of time I think I'm",
    "start": "2772599",
    "end": "2779319"
  },
  {
    "text": "going to step down I'm going to be hanging around here if you have any questions or if you would like to use index DB in your day-to-day applications",
    "start": "2779319",
    "end": "2785280"
  },
  {
    "text": "please come talk to me I'd be more than happy to have help you thank you [Applause]",
    "start": "2785280",
    "end": "2792810"
  },
  {
    "text": "[Music]",
    "start": "2792910",
    "end": "2800510"
  }
]