[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "19480"
  },
  {
    "text": "um hello welcome I'm very glad to be here uh this is actually a new style meeting for me I've never been to",
    "start": "19480",
    "end": "25080"
  },
  {
    "text": "something like this before but I'm really enjoying it uh I um",
    "start": "25080",
    "end": "30800"
  },
  {
    "text": "uh you know I like new experiences and maybe by way of introduction I've had you know a number of fun experiences along the way I've uh um been a chief",
    "start": "30800",
    "end": "37960"
  },
  {
    "text": "maintainer for a free software Foundation project I've been a postto I've worked in a startup company and now",
    "start": "37960",
    "end": "43680"
  },
  {
    "text": "I'm a professor at a university where I do research and machine learning and today I get to talk about two things",
    "start": "43680",
    "end": "48840"
  },
  {
    "text": "that I love a lot uh machine learning which I've Loved for many many years and Scala which I've Loved for just a few",
    "start": "48840",
    "end": "54039"
  },
  {
    "text": "years um so uh what is machine learning they are it's essentially the study of",
    "start": "54039",
    "end": "59320"
  },
  {
    "start": "56000",
    "end": "56000"
  },
  {
    "text": "computer program that automatically improve their behavior with experience or training data one way to see this is",
    "start": "59320",
    "end": "65040"
  },
  {
    "text": "they're machines that program themselves but uh don't worry the you know this is not going to put programmers out of business it's actually going to make",
    "start": "65040",
    "end": "71680"
  },
  {
    "text": "your life harder in some ways because what this really means is that it's about writing a program that encapsulates within itself enough",
    "start": "71680",
    "end": "77200"
  },
  {
    "text": "structure to represent an immense number of different possible solutions and it's uh then you know then we use data to",
    "start": "77200",
    "end": "84119"
  },
  {
    "text": "then estimate the parameters that guide the behavior through this structure of different possible solutions and you",
    "start": "84119",
    "end": "89600"
  },
  {
    "text": "know interest in machine learning has been exploding uh in the last decade or more because so many of the things that",
    "start": "89600",
    "end": "95799"
  },
  {
    "text": "matter in the world that we care about are really driven by Machine learning like genomics which is essentially all",
    "start": "95799",
    "end": "100880"
  },
  {
    "text": "about finding patterns in gene data that's really Revolution revolutionizing biology we have free web search and a",
    "start": "100880",
    "end": "107439"
  },
  {
    "text": "lot of services from Google because there are machine learning algorithms that have been very highly tuned within Google to show us relevant ads that",
    "start": "107439",
    "end": "113399"
  },
  {
    "text": "people actually click on um there exist already you know self-driving cars and maybe we'll all have one sometime soon",
    "start": "113399",
    "end": "120039"
  },
  {
    "text": "at the heart of this in order to handle the uncertainty in the world machine learning algorithms help make this",
    "start": "120039",
    "end": "125119"
  },
  {
    "text": "possible uh and machine learning is a big part of what makes Siri work inside of our iPhones and how do I know that",
    "start": "125119",
    "end": "132160"
  },
  {
    "text": "actually well you know before Siri was an Apple product it was a startup company and before I was a startup company it was a federally funded uh",
    "start": "132160",
    "end": "139040"
  },
  {
    "text": "research uh project with a lot of academics involved uh including me actually um so I want to talk a bit",
    "start": "139040",
    "end": "145200"
  },
  {
    "text": "about machine learning in a bit more detail ah sure great yeah this helps and particularly about its structures let's",
    "start": "145200",
    "end": "151319"
  },
  {
    "text": "start with a very simple example like spam filtering in which You observe some email messages and uh um we're call",
    "start": "151319",
    "end": "157959"
  },
  {
    "text": "these These Are The observed random variables and I don't mean variable in the programming sense this is like in the statistical sense and it's the job",
    "start": "157959",
    "end": "164319"
  },
  {
    "text": "here to then for each one of these predict whether it's spam or not spam uh for each of its corresponding things and",
    "start": "164319",
    "end": "170840"
  },
  {
    "text": "the way uh and so we're this is the predicted random variable and the way that this is often set up is with a",
    "start": "170840",
    "end": "176400"
  },
  {
    "text": "function that I'm drawing here which gets which takes as input the two the values of the two here random variables",
    "start": "176400",
    "end": "183120"
  },
  {
    "text": "that it's observing and produces as output a real valued score that you can think of as a compatibility score for",
    "start": "183120",
    "end": "189159"
  },
  {
    "text": "how compatible do I find the values in these variables like if I see Nigerian bank account here and I see spam I think",
    "start": "189159",
    "end": "195000"
  },
  {
    "text": "well that sounds pretty compatible and you know for for not spam I would say that's less compatible and it's the job",
    "start": "195000",
    "end": "200040"
  },
  {
    "text": "then of um sorry so these functions are called um factors uh and it's the job of",
    "start": "200040",
    "end": "206720"
  },
  {
    "text": "problemistic entrance to cycle through all possible values in the predicted random variables to say which ones score",
    "start": "206720",
    "end": "212640"
  },
  {
    "text": "best in order to pick what we think is the best answer and what I'm drawing here is called a factor graph it's a",
    "start": "212640",
    "end": "219080"
  },
  {
    "text": "particular kind of basian network or graphical model that are really it's really becoming the lingua franka for so",
    "start": "219080",
    "end": "224120"
  },
  {
    "text": "much of protic modeling that's at the heart of machine learning so let's take a little bit more complicated example",
    "start": "224120",
    "end": "229560"
  },
  {
    "start": "227000",
    "end": "227000"
  },
  {
    "text": "like Chinese word segmentation so you know in Chinese sometimes one character is a word but sometime but sometimes a",
    "start": "229560",
    "end": "235400"
  },
  {
    "text": "word is actually two three or four characters but when the Chinese write things that there are no spaces between",
    "start": "235400",
    "end": "241000"
  },
  {
    "text": "words it's just you know a Chinese person reads this they just are finding the spaces themselves in their head as",
    "start": "241000",
    "end": "247159"
  },
  {
    "text": "they read it and so to do natural language processing which is actually um my particular area of research uh it",
    "start": "247159",
    "end": "254040"
  },
  {
    "text": "would be very nice to find these word segmentation boundaries to do later kinds of processing so we observe random",
    "start": "254040",
    "end": "259199"
  },
  {
    "text": "variables that are the Chinese characters and we'd like to determine which ones are the start of a word and which ones are not the start of a word",
    "start": "259199",
    "end": "265479"
  },
  {
    "text": "and we can do these with some factors here but this is a task in which uh when when I'm determining that this is not",
    "start": "265479",
    "end": "271080"
  },
  {
    "text": "the start of a word um it would be very helpful to know whether I thought that the previous word was a start or not",
    "start": "271080",
    "end": "277080"
  },
  {
    "text": "it's like the context of my solution so far so we want to add factors that uh that capture this as well sort of",
    "start": "277080",
    "end": "282600"
  },
  {
    "text": "compatibility of our neighboring decisions and this makes inance a bit harder right because I can't",
    "start": "282600",
    "end": "288199"
  },
  {
    "text": "independently decide for each of these red or green uh uh variables which value to give it because they all interact",
    "start": "288199",
    "end": "294039"
  },
  {
    "text": "with each other uh and So naively speaking I need to consider all possible",
    "start": "294039",
    "end": "299160"
  },
  {
    "text": "labeling of this sequence which is the size of that set is exponential in the length of the sequence but thankfully",
    "start": "299160",
    "end": "305360"
  },
  {
    "text": "for graphs that are tree-shaped they are efficient dynamic programming solutions that can make this uh fast okay so and this kind of model is",
    "start": "305360",
    "end": "313080"
  },
  {
    "text": "actually called a linear chain conditional random field it's one of the most widely used methods for sequence",
    "start": "313080",
    "end": "318120"
  },
  {
    "text": "modeling and natural language processing okay so then there are other kinds of tasks that lead to really hairy",
    "start": "318120",
    "end": "324919"
  },
  {
    "start": "320000",
    "end": "320000"
  },
  {
    "text": "structures like the following information integration so say that you're trying to do um a study of",
    "start": "324919",
    "end": "330319"
  },
  {
    "text": "medical outcomes and you'd like to gather data from a hundred different hospitals spread across the country and so you want their database of patients",
    "start": "330319",
    "end": "337039"
  },
  {
    "text": "and you want to integrate those together so that you can do some data mining on the results but you know each Hospital's",
    "start": "337039",
    "end": "342280"
  },
  {
    "text": "database was built by a different DBA with a different schema uh you know different ways of setting up the values",
    "start": "342280",
    "end": "347319"
  },
  {
    "text": "and you would like to unify these all together into a single database so this involves doing schema matching",
    "start": "347319",
    "end": "352639"
  },
  {
    "text": "essentially aligning The Columns of the database against each other co-reference essentially aligning the rows against",
    "start": "352639",
    "end": "358720"
  },
  {
    "text": "each other because the same person might have been a patient at more than one hospital and then finally doing some canonicalization to decide well how",
    "start": "358720",
    "end": "364800"
  },
  {
    "text": "should I represent the canonical values of this merged uh database and it's an it's a quite complicated task I'm not",
    "start": "364800",
    "end": "371440"
  },
  {
    "text": "going to get into great detail about the structure of these models but um I can say just a few things in these models we",
    "start": "371440",
    "end": "377759"
  },
  {
    "text": "can do better if we uh so each of these are representing a record from the original database this is saying I think",
    "start": "377759",
    "end": "382800"
  },
  {
    "text": "that these all go together these are rows and we actually have factors on partitions of this model so we have in a",
    "start": "382800",
    "end": "389400"
  },
  {
    "text": "way as many factors as there are partitionings possible partitionings in the world of this data which is there's",
    "start": "389400",
    "end": "395000"
  },
  {
    "text": "a super it's called The Bell number there's a super exponential number of partitionings uh I can't possibly create",
    "start": "395000",
    "end": "400720"
  },
  {
    "text": "all these factors ahead of time I have to be creating them on the fly as I'm you sort of considering various",
    "start": "400720",
    "end": "406000"
  },
  {
    "text": "hypotheses and then there are extra factors in the model as well and this is just for the row alignment part of it schema alignment looks a little bit like",
    "start": "406000",
    "end": "412400"
  },
  {
    "text": "that as well but it's more complicated because there could be hierarchical relationships and how the schema is organized and furthermore I want to",
    "start": "412400",
    "end": "419240"
  },
  {
    "text": "actually doing both of these tasks at the same time jointly because they interact with each other and uh it's",
    "start": "419240",
    "end": "425479"
  },
  {
    "text": "just incredibly hairy and so how to do this is a big issue and you know it",
    "start": "425479",
    "end": "430520"
  },
  {
    "text": "brings up big issues for me as a machine learning researcher because just how to do inference and parameter estimation this model is very tough but today I",
    "start": "430520",
    "end": "437360"
  },
  {
    "text": "want to talk about another aspect which is just doing the software uh engineering of this is being",
    "start": "437360",
    "end": "443440"
  },
  {
    "text": "a big problem for us as researchers because often you know the prog uh uh",
    "start": "443440",
    "end": "450039"
  },
  {
    "text": "the essence of the research is to propose a new model with a different structure different factors in different places and it can take us more than a",
    "start": "450039",
    "end": "456080"
  },
  {
    "text": "month just to coat up one of these things and the nature of research is that you try something and it doesn't work and then you have to try something else and you know just it's really",
    "start": "456080",
    "end": "463400"
  },
  {
    "text": "slowing our progress how long it takes us to engineer uh some of these things so there's been some interest already in",
    "start": "463400",
    "end": "470199"
  },
  {
    "text": "the scholet community in supporting machine learning in various ways there a very nice package called Scala where the",
    "start": "470199",
    "end": "476400"
  },
  {
    "text": "last La stands for linear algebra that essentially provides m lab like functionality uh in Scala very nice this",
    "start": "476400",
    "end": "482560"
  },
  {
    "text": "is out of Stanford uh um optl provides uh data structures for vectors and",
    "start": "482560",
    "end": "488440"
  },
  {
    "text": "matrices and does amazing things by automatically producing code for your GPU not just the CPU to make things",
    "start": "488440",
    "end": "494879"
  },
  {
    "text": "incredibly fast spark is a project out of Berkeley that makes it very easy to do uh handle distributed data do",
    "start": "494879",
    "end": "501199"
  },
  {
    "text": "distributed computation has shared types for accumulators that make things quite easy uh there's another project at",
    "start": "501199",
    "end": "507080"
  },
  {
    "text": "Carnegie melon it's C++ not Scala but it's you can think of it as an alternative to map reduce that has",
    "start": "507080",
    "end": "512440"
  },
  {
    "text": "updates not for map and reduce but for update and sync operations on graphs which is a very nice fit for machine",
    "start": "512440",
    "end": "519719"
  },
  {
    "text": "learning but so all of these provide very nice facilities for us to say take our machine learning problem and",
    "start": "519719",
    "end": "525519"
  },
  {
    "text": "distributor to make it faster by being parallel but it's not really solving my problem because it's giving me kind of",
    "start": "525519",
    "end": "531480"
  },
  {
    "text": "the same Primitives that I did my raw coding in before it's just making them be fast and distributed I need something",
    "start": "531480",
    "end": "537600"
  },
  {
    "text": "that operates at a higher level that makes it easy for me to Define models and then do inference on them and a",
    "start": "537600",
    "end": "544440"
  },
  {
    "text": "number of people have been concerned with this issue and there is a rising in the community it's this notion of",
    "start": "544440",
    "end": "549800"
  },
  {
    "text": "probabilistic programming languages these are uh languages or dsls that make",
    "start": "549800",
    "end": "555560"
  },
  {
    "text": "it easy to specify a really rich complicated probabilistic model and then",
    "start": "555560",
    "end": "560640"
  },
  {
    "text": "know using the full power of the kinds of things we're used to having in deterministic programming languages you know nice data structures control",
    "start": "560640",
    "end": "567000"
  },
  {
    "text": "mechanisms abstractions that help us with problem techn models and then once we Define the model in a lot of these",
    "start": "567000",
    "end": "572560"
  },
  {
    "text": "systems the inference implementation comes for free as a as a oneliner you okay here's the model now just go do",
    "start": "572560",
    "end": "578680"
  },
  {
    "text": "inference and you know it was it was coding up the inference method for some new model structure that was especially",
    "start": "578680",
    "end": "584680"
  },
  {
    "text": "uh tough for us before so I'm going to do a whirlwind very fast tour of some other systems mostly not in Scala and",
    "start": "584680",
    "end": "591600"
  },
  {
    "text": "then talk a bit about the system that uh that we've been building at UMass um okay so one system out of",
    "start": "591600",
    "end": "597000"
  },
  {
    "text": "Berkeley called blog is a gener model of objects and relations uh um by",
    "start": "597000",
    "end": "602640"
  },
  {
    "text": "generative I mean the graphical model you visit the variables sort of in some order of some directed graph generate",
    "start": "602640",
    "end": "608680"
  },
  {
    "text": "them one at a time conditioned on their parents and it's a nice you know uh small language that lets you specify",
    "start": "608680",
    "end": "614640"
  },
  {
    "text": "things with uh kind of the way that statisticians are used to writing equations you know the number of researchers as a random variable that's",
    "start": "614640",
    "end": "620360"
  },
  {
    "text": "generated According to some distribution According to some prior and then uh you know this value will then get used in",
    "start": "620360",
    "end": "626079"
  },
  {
    "text": "the generation later and you build these things up and it does ref by Marco J mon Carlo which is a sampling",
    "start": "626079",
    "end": "632000"
  },
  {
    "text": "Method Church is a a system out of MIT that uh also is a generative model this",
    "start": "632000",
    "end": "639000"
  },
  {
    "text": "lets you tell the generative storyline in scheme actually so you write a scheme program with extra random operators that",
    "start": "639000",
    "end": "645839"
  },
  {
    "text": "say uh that represent the uncertainty in the problemistic model and um so I mean",
    "start": "645839",
    "end": "652000"
  },
  {
    "text": "the right mental model is that you can run one of these programs once uh um and it will generate a single sample from",
    "start": "652000",
    "end": "658560"
  },
  {
    "text": "the distribution of all possible values and uh you would do inference say what's the distribution over a given some",
    "start": "658560",
    "end": "665320"
  },
  {
    "text": "particular value on b or you would run this program many many times generate many samples grab just the subset that",
    "start": "665320",
    "end": "670519"
  },
  {
    "text": "have the particular value on B look at the distribution of a in that subset um that would actually be quite inefficient",
    "start": "670519",
    "end": "676839"
  },
  {
    "text": "so the magical amazing thing that they do is that they do Markov CH mon Carlo over possible execution paths through",
    "start": "676839",
    "end": "683000"
  },
  {
    "text": "these programs infer Donnet is a system uh from Microsoft that's actually getting deployed in products",
    "start": "683000",
    "end": "690040"
  },
  {
    "text": "um that builds up a factor graph by a series of declarations uh um I won't",
    "start": "690040",
    "end": "695760"
  },
  {
    "text": "talk too much about that let's see here figuro is in Scala it's just been released recently it's by AI feffer who",
    "start": "695760",
    "end": "700959"
  },
  {
    "text": "used to be at Harvard and is now at Charles River Associates here in Boston um it's object oriented it has this",
    "start": "700959",
    "end": "706000"
  },
  {
    "text": "notion of a model which is a basic building block that en encompasses both data and factors and then they compose",
    "start": "706000",
    "end": "712560"
  },
  {
    "text": "together um and Markov logic uh is a system that lets you define where",
    "start": "712560",
    "end": "718480"
  },
  {
    "start": "714000",
    "end": "714000"
  },
  {
    "text": "factors are placed by expressing Clauses in first order logic uh and so it's",
    "start": "718480",
    "end": "724440"
  },
  {
    "text": "completely declarative you just say here's the my logical structure and then you know goes off and does inance so I",
    "start": "724440",
    "end": "730639"
  },
  {
    "text": "want to talk a little bit about this declarative versus alternative uh consideration here um so in a way in a",
    "start": "730639",
    "end": "738680"
  },
  {
    "text": "broad sense thinking about declarative models has brought great clarity to",
    "start": "738680",
    "end": "743880"
  },
  {
    "text": "artificial intelligence research over the last two decades but I've been feeling like it's perhaps gone a bit too",
    "start": "743880",
    "end": "749440"
  },
  {
    "text": "farc because a lot of the domain knowledge that we machine learning model Builders have about what good solutions",
    "start": "749440",
    "end": "755880"
  },
  {
    "text": "would look like is actually um procedural or imperative and actually I'm afraid that I'm using these terms in",
    "start": "755880",
    "end": "761440"
  },
  {
    "text": "a much more fuzzy way than you would in this community which you used them more precisely all I really mean is not",
    "start": "761440",
    "end": "767880"
  },
  {
    "text": "declarative I just mean thinking about it as as a sequence of of actions uh um and I'm actually going to use procedural",
    "start": "767880",
    "end": "773440"
  },
  {
    "text": "and imperative interchangeably which maybe you would hate I don't I don't really know uh but so just read not",
    "start": "773440",
    "end": "778680"
  },
  {
    "text": "declarative when I say that um and there's been increasing interest in this direction um like there in our machine",
    "start": "778680",
    "end": "784480"
  },
  {
    "text": "Learning Community there was a lot of previous interest in combining logic and probability and there's sort of rising interest in some new systems in",
    "start": "784480",
    "end": "790680"
  },
  {
    "text": "combining these non- declarative plus probability systems and infer Uhn net",
    "start": "790680",
    "end": "795800"
  },
  {
    "text": "and church are two examples so I'm interested in build in trying to get the",
    "start": "795800",
    "end": "801079"
  },
  {
    "start": "796000",
    "end": "796000"
  },
  {
    "text": "Best of Both Worlds by building imperative tools for creating a declarative model specification so the",
    "start": "801079",
    "end": "808240"
  },
  {
    "text": "approach in the toolkit that that we're building preserves the declarative statistical semantics of factor graphs",
    "start": "808240",
    "end": "814240"
  },
  {
    "text": "these lingua Franco for building problemistic models but provides these imperative hooks for defining their",
    "start": "814240",
    "end": "821160"
  },
  {
    "text": "structure their parameterization the way that inance is done and the way parameter estimation is done so we've",
    "start": "821160",
    "end": "826760"
  },
  {
    "text": "been calling these things imperatively defined Factor graphs and the design goals of our system are that it well",
    "start": "826760",
    "end": "832839"
  },
  {
    "start": "830000",
    "end": "830000"
  },
  {
    "text": "first it represents Factor graphs that it's very scalable so it's not just a toy to be used in the classroom but you",
    "start": "832839",
    "end": "838800"
  },
  {
    "text": "can deploy it at Large Scale you know industry it's large in terms of input",
    "start": "838800",
    "end": "843959"
  },
  {
    "text": "data output configurations the number of factors the amount of total bount of data that we can leverage",
    "start": "843959",
    "end": "849519"
  },
  {
    "text": "object-oriented benefits uh that variables factors inference methods are",
    "start": "849519",
    "end": "854839"
  },
  {
    "text": "all classes that can be subclassed and uh and modified and that it makes it easy to you know integrate the sort of",
    "start": "854839",
    "end": "860720"
  },
  {
    "text": "declarative and procedural domain knowledge that we have to um bake as much smarts as we can into the models",
    "start": "860720",
    "end": "866240"
  },
  {
    "text": "that we built so our system is called called Factory uh it's a DSL for machine",
    "start": "866240",
    "end": "872839"
  },
  {
    "text": "learning with Factor graphs and it's implemented as a library in Scala um so you know programs in Factory are Scala",
    "start": "872839",
    "end": "880440"
  },
  {
    "text": "um programs uh it's worked out very nicely for us that it's a library and not a new little language of our own",
    "start": "880440",
    "end": "887279"
  },
  {
    "text": "creation because we can now leverage all of scala's great facility for just doing our data pre-processing and uh and um",
    "start": "887279",
    "end": "895120"
  },
  {
    "text": "you know debugging uh you know just printing out Diagnostics in the middle of our our model definition uh and you leveraging scol",
    "start": "895120",
    "end": "902759"
  },
  {
    "text": "it's very nice type system and you know o design capabilities has made it very nice to build um subclassable uh uh you",
    "start": "902759",
    "end": "910839"
  },
  {
    "text": "know variables and factors and objects here um Factory strives this is different from some of the previous",
    "start": "910839",
    "end": "916680"
  },
  {
    "text": "systems that I described strives to keep very distinct its notion of variables in",
    "start": "916680",
    "end": "922920"
  },
  {
    "text": "the random variables in the model in other words the data that represent a solution the factors in other words the",
    "start": "922920",
    "end": "929279"
  },
  {
    "text": "model or how we how how the model expresses preferences for some solutions over others the entrance methods and the",
    "start": "929279",
    "end": "936279"
  },
  {
    "text": "learning methods and these are all defined quite separately allowing a lot of mixing and matching in a way that's worked out very nicely for us um and and",
    "start": "936279",
    "end": "943680"
  },
  {
    "text": "it is indeed scalable we've run it on you know billions of random variables with super exponential number of factors",
    "start": "943680",
    "end": "949440"
  },
  {
    "text": "and there's a database uh back end so you can run on more data than you can fit in memory so the way to think about writing",
    "start": "949440",
    "end": "957240"
  },
  {
    "start": "955000",
    "end": "955000"
  },
  {
    "text": "a protic model in Factory comes in certain very distinct stages that uh correspond to this kind of Separation I",
    "start": "957240",
    "end": "962959"
  },
  {
    "text": "was just talking about first you define what you think of as templates for the data or these are actually just classes",
    "start": "962959",
    "end": "968920"
  },
  {
    "text": "to represent random variables and um uh you know you can use a lot of data",
    "start": "968920",
    "end": "974519"
  },
  {
    "text": "structures that you would use in deterministic programming which is a bit unusual for people who are used to more",
    "start": "974519",
    "end": "979880"
  },
  {
    "text": "basic graphical models um and only one special requirement for doing sampling based inference is that you provide an",
    "start": "979880",
    "end": "986279"
  },
  {
    "text": "undo capability on the setting of of these variables almost think about them almost like transactions so you can say",
    "start": "986279",
    "end": "992519"
  },
  {
    "text": "I propose to make this change to my configuration and then you can undo that um then you define templates for factors",
    "start": "992519",
    "end": "999959"
  },
  {
    "text": "expressing preferences over certain uh Solutions and this is again distinct from the data representation so I can",
    "start": "999959",
    "end": "1005720"
  },
  {
    "text": "here Define what my problem is in essence and then keep that constant as I hypothesize different possible solutions",
    "start": "1005720",
    "end": "1012160"
  },
  {
    "text": "with different model structures without having to change the stuff upstairs and then I select an inance method which",
    "start": "1012160",
    "end": "1018399"
  },
  {
    "text": "often is actually just a oneliner uh but you can also bake some domain knowledge into that inference method and then you",
    "start": "1018399",
    "end": "1024678"
  },
  {
    "text": "read in the data create variables and then call your oneliner uh inference Method All right so let's get a bit more",
    "start": "1024679",
    "end": "1030160"
  },
  {
    "text": "detailed so what are some components and these are actually on the left all class names in the library so there's a notion",
    "start": "1030160",
    "end": "1036199"
  },
  {
    "text": "of a variable a random variable which all have values and can be set and have",
    "start": "1036199",
    "end": "1041280"
  },
  {
    "text": "domains there are um domains which are some representation of the set of uh values that a variable can take on",
    "start": "1041280",
    "end": "1047640"
  },
  {
    "text": "there's a diff object a diff list which represents you know a list of changes to these variables which can be undone",
    "start": "1047640",
    "end": "1053720"
  },
  {
    "text": "there are factors and the values of the variables that are neighbors to factors and the sufficient statistics of those",
    "start": "1053720",
    "end": "1060559"
  },
  {
    "text": "values um sometimes factors belong to families that may share common parameters and some kinds of families",
    "start": "1060559",
    "end": "1067760"
  },
  {
    "text": "are actually templates which are able to generate factors uh on the Fly and then",
    "start": "1067760",
    "end": "1073320"
  },
  {
    "text": "models are a collection of factors or a way to get a hold of factors and then some inference meth method can work on",
    "start": "1073320",
    "end": "1080320"
  },
  {
    "text": "some combination of a model and some data and here are some examples of kinds of random variables we have some you",
    "start": "1080320",
    "end": "1086360"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "know very standard ones that You' be used to in statistics but some other ones that are uh very powerful but",
    "start": "1086360",
    "end": "1091840"
  },
  {
    "text": "unusual for for people in my world to think about variables that could be set valued or variables that are sequences",
    "start": "1091840",
    "end": "1099120"
  },
  {
    "text": "so like a couple summers ago I wrote a machine translation system to go between French and English uh uh in this that",
    "start": "1099120",
    "end": "1105280"
  },
  {
    "text": "operated a lot on sequences of words and actually I wrote the whole thing in just seven Pages uh of code okay so let me",
    "start": "1105280",
    "end": "1111919"
  },
  {
    "text": "show you an example let's get even more concrete of uh a relatively simple model it'll be this linear chain model that we",
    "start": "1111919",
    "end": "1117679"
  },
  {
    "start": "1117000",
    "end": "1117000"
  },
  {
    "text": "described at the beginning uh of the talk it's going to do segmentation here it's actually going to do sentence segmentation it's going to find the",
    "start": "1117679",
    "end": "1123520"
  },
  {
    "text": "boundaries between sentences so it's going to put put a true at the beginning of a sentence and a false at something",
    "start": "1123520",
    "end": "1129200"
  },
  {
    "text": "that's uh in the middle or end of a sentence so first we need some way to represent our data uh which are labels",
    "start": "1129200",
    "end": "1136120"
  },
  {
    "text": "and words or tokens so I'll Define some classes for labels which is a kind of Boolean variable here and a token which",
    "start": "1136120",
    "end": "1142520"
  },
  {
    "text": "is a kind of categorical variable it holds a word in in essence and I should say something about how these things",
    "start": "1142520",
    "end": "1148520"
  },
  {
    "text": "relate to each other so I can say that you know they have a trait that says that there are a link in a chain that",
    "start": "1148520",
    "end": "1153840"
  },
  {
    "text": "represents this this um sequence of of words and this essentially provides those variables with methods for",
    "start": "1153840",
    "end": "1160400"
  },
  {
    "text": "previous and next so they can navigate up and down the sequence um and you know these are just regular scolar classes",
    "start": "1160400",
    "end": "1166080"
  },
  {
    "text": "and uh so I can also Express how the data is related to each other by adding member variables to so I can say well",
    "start": "1166080",
    "end": "1173039"
  },
  {
    "text": "what's the corresponding token that goes with a label and vice versa and this is",
    "start": "1173039",
    "end": "1178280"
  },
  {
    "text": "maybe it know seems very simple to you but it's quite a change from the way that a lot of people have been been",
    "start": "1178280",
    "end": "1183720"
  },
  {
    "text": "building graphical models in which there wouldn't be these sort of natural pointers between related pieces of data they might just build up independent",
    "start": "1183720",
    "end": "1190360"
  },
  {
    "text": "arrays and just remember that coresponding indices actually are related to each other and this has been",
    "start": "1190360",
    "end": "1196440"
  },
  {
    "text": "very nice for us also just the fact that these are regular objects we can add arbitrary useful methods to our random",
    "start": "1196440",
    "end": "1201919"
  },
  {
    "text": "variables has been a big win for us that you know hasn't been in some other toolkits um okay then we specify our",
    "start": "1201919",
    "end": "1207840"
  },
  {
    "text": "model uh uh it's uh so this is a model that's going to have template for fa for",
    "start": "1207840",
    "end": "1214320"
  },
  {
    "text": "factors so here we're going to say here's how we say that this kind of factor exists it's a factor that expresses a prior probability on certain",
    "start": "1214320",
    "end": "1220480"
  },
  {
    "text": "labels independence of any evidence uh here's another one that expresses this factor between tokens and labels so for",
    "start": "1220480",
    "end": "1227480"
  },
  {
    "text": "you know every label um should have some factor that expresses some compatibility score over",
    "start": "1227480",
    "end": "1233120"
  },
  {
    "text": "itself and its corresponding token right which is uh what this says and then here's how we specify this Factor here",
    "start": "1233120",
    "end": "1240320"
  },
  {
    "text": "and then once you specify the model you just you know read in the data somehow create a new inference method like",
    "start": "1240320",
    "end": "1245880"
  },
  {
    "text": "here's a Gib sampler and then ask the Gib sampler to do its work and it's",
    "start": "1245880",
    "end": "1251000"
  },
  {
    "text": "these it's like this one line and this actually having it do its work that just is mind-blowing to we machine learning",
    "start": "1251000",
    "end": "1257080"
  },
  {
    "text": "people because this is what would have taken A month's worth of effort previously um okay",
    "start": "1257080",
    "end": "1263120"
  },
  {
    "text": "so this is actually a deep bit of Scala magic that isn't at all what it looks",
    "start": "1263120",
    "end": "1268240"
  },
  {
    "text": "like actually like this thing is not actually a type label it's actually some quite complicated um almost like a",
    "start": "1268240",
    "end": "1275760"
  },
  {
    "text": "getter uh it's a method that knows how to navigate among uh among sort of",
    "start": "1275760",
    "end": "1282240"
  },
  {
    "text": "across edges of this uh of this variable and I want to of these variables and I want to try to um lift the cover of some",
    "start": "1282240",
    "end": "1290039"
  },
  {
    "text": "of this magic here and show what these things actually create are these things called templates um and I'm realizing",
    "start": "1290039",
    "end": "1297520"
  },
  {
    "text": "that I'm very short on time I really might not be able to say a lot of this but uh um so uh you know we can create",
    "start": "1297520",
    "end": "1303880"
  },
  {
    "text": "templates for these different kinds of factors and let's then think about what work these templates actually have to do",
    "start": "1303880",
    "end": "1310799"
  },
  {
    "text": "right they're going to have to create factors on the fly when they're needed so key operation and say a a sampling",
    "start": "1310799",
    "end": "1317520"
  },
  {
    "start": "1314000",
    "end": "1314000"
  },
  {
    "text": "based kind of entrance is that you propose some change to a variable this proposal method runs we automatically",
    "start": "1317520",
    "end": "1323039"
  },
  {
    "text": "build up a list of the variables that have changed and then I need to find the factors that touch the variables that",
    "start": "1323039",
    "end": "1328840"
  },
  {
    "text": "change so if I just change the green variables I need to find the red factors and I I don't actually don't need the other factors and so I can be very",
    "start": "1328840",
    "end": "1335279"
  },
  {
    "text": "efficient by never ask I don't have to ask them for scores I can ask just the red factors for scores and um then I",
    "start": "1335279",
    "end": "1342039"
  },
  {
    "text": "also need to find the other variables that touch the factors uh um uh that are",
    "start": "1342039",
    "end": "1347240"
  },
  {
    "text": "needed to calculate uh uh those scores and so it's just sort of complicated process of how to navigate through this",
    "start": "1347240",
    "end": "1353400"
  },
  {
    "text": "data structure and you think about how to do this so there's this question of how to find factors from variables in",
    "start": "1353400",
    "end": "1359159"
  },
  {
    "text": "vice versa and it's Berkeley system they build a highly indexed quite complicated data structure to store this kind of",
    "start": "1359159",
    "end": "1364880"
  },
  {
    "text": "mapping but it's can be quite painful to maintain and so what we're going to do instead is maintain no such map between",
    "start": "1364880",
    "end": "1371640"
  },
  {
    "start": "1368000",
    "end": "1368000"
  },
  {
    "text": "these things and solve it in a different way we're going to say well finding the factors from the changed variables is",
    "start": "1371640",
    "end": "1377240"
  },
  {
    "text": "easy actually because the number of templates is often quite small I can just take each change",
    "start": "1377240",
    "end": "1382679"
  },
  {
    "text": "variable ask each template do you care that this variable changed yes or no and if it does give me a factor and uh that",
    "start": "1382679",
    "end": "1388919"
  },
  {
    "text": "can be quite efficient the hard part is given a factor template and one changed variable how to find the other variables",
    "start": "1388919",
    "end": "1396919"
  },
  {
    "text": "and in my experience when you've got something hard that's a good place to just declare this to be a primitive",
    "start": "1396919",
    "end": "1402919"
  },
  {
    "text": "operation and then let it be solved in various different ways so this is what we're going to do there's within a",
    "start": "1402919",
    "end": "1409000"
  },
  {
    "text": "template you define these methods called unroll which given a single changed",
    "start": "1409000",
    "end": "1414320"
  },
  {
    "text": "variable are responsible for somehow going out to find the other needed variables that are the neighbors of this",
    "start": "1414320",
    "end": "1419799"
  },
  {
    "text": "factor and returning them so let me show you uh what this looks like in practice",
    "start": "1419799",
    "end": "1425120"
  },
  {
    "text": "in the code um so here in this template we could be given a single change oops a",
    "start": "1425120",
    "end": "1431640"
  },
  {
    "text": "single changed label and then we just need to find its corresponding token and well you know luckily we we have code",
    "start": "1431640",
    "end": "1437279"
  },
  {
    "text": "that makes that very easy um so you know these things are often onliners um and",
    "start": "1437279",
    "end": "1443320"
  },
  {
    "text": "and correspondingly for these uh uh tokens here we can just navigate through label next and previous to find uh what",
    "start": "1443320",
    "end": "1448600"
  },
  {
    "text": "we need um things can get more interesting say for I won't maybe motivate this but describe",
    "start": "1448600",
    "end": "1456760"
  },
  {
    "text": "uh you know here's an additional kind of factor that could be useful that's expressing uh the the notion that well",
    "start": "1456760",
    "end": "1464520"
  },
  {
    "text": "two words that have the same string form I should have a mild preference that their labels are maybe a bit more likely",
    "start": "1464520",
    "end": "1470640"
  },
  {
    "text": "to be the same and I would like this factor to express that preference and um oops sorry",
    "start": "1470640",
    "end": "1477840"
  },
  {
    "text": "so see how am I doing for time okay uh uh no the default kind of",
    "start": "1477840",
    "end": "1485720"
  },
  {
    "text": "parameterization here would look at all possible values of these two neighboring variables uh which for this named",
    "start": "1485720",
    "end": "1491240"
  },
  {
    "text": "dentity recognition problem would be five there would be 25 parameters here but really I don't I don't need 25 parameters here because I'm just I only",
    "start": "1491240",
    "end": "1497720"
  },
  {
    "text": "really care that they're the same value I don't care what the value is and so um",
    "start": "1497720",
    "end": "1503679"
  },
  {
    "start": "1501000",
    "end": "1501000"
  },
  {
    "text": "the way that we can express this is that actually these templates are an instance of the cake pattern in which there are",
    "start": "1503679",
    "end": "1511640"
  },
  {
    "text": "multiple needed pieces of templates that get pulled together and we can pull that apart to say that I have a template with",
    "start": "1511640",
    "end": "1518240"
  },
  {
    "text": "two neighbors but whose sufficient statistics are not the original values of uh my neighboring variables but",
    "start": "1518240",
    "end": "1525600"
  },
  {
    "text": "something different that I can Define and uh uh um and I can Define methods",
    "start": "1525600",
    "end": "1531159"
  },
  {
    "text": "that make that mapping between labels and values in an interesting way uh okay",
    "start": "1531159",
    "end": "1536960"
  },
  {
    "text": "I planned on going through this in more detail but uh let me for the sake of time actually accelerate just a bit and",
    "start": "1536960",
    "end": "1544440"
  },
  {
    "text": "uh show you just very briefly uh an example example of what this looks like",
    "start": "1544440",
    "end": "1550320"
  },
  {
    "text": "running let's see here I don't know if I can actually because I'm not really going to fit this so here I'm going to",
    "start": "1550320",
    "end": "1555799"
  },
  {
    "text": "train a name entity recognition system on 200,000 words of newswire data finding names of people organizations",
    "start": "1555799",
    "end": "1563200"
  },
  {
    "text": "locations and uh miscellaneous uh uh named entities oops okay yeah and so",
    "start": "1563200",
    "end": "1568799"
  },
  {
    "text": "here I just loaded in 200,000 uh words actually more than that because I also gathered some test data I went through",
    "start": "1568799",
    "end": "1574440"
  },
  {
    "text": "and found about 50,000 observable features of these things uh of uh of",
    "start": "1574440",
    "end": "1579880"
  },
  {
    "text": "these words this is running on my little MacBook Air it runs about three times faster on a regular machine it's just made its first pass of training through",
    "start": "1579880",
    "end": "1586320"
  },
  {
    "text": "all these things uh it's already getting about 97% accuracy and uh on its third",
    "start": "1586320",
    "end": "1592679"
  },
  {
    "text": "iteration it's done it's got 98% accuracy and here are some examples so it's found that EU is an organization",
    "start": "1592679",
    "end": "1599039"
  },
  {
    "text": "and that Britain is a location and so on and this kind of training in an earlier system that we did took about six hours",
    "start": "1599039",
    "end": "1607000"
  },
  {
    "text": "and we just finished it in in 20 minutes and it's you know uh Scola didn't slow",
    "start": "1607000",
    "end": "1612480"
  },
  {
    "text": "us down what Factory did was it let us use some fancier new machine learning methods that were quite a bit more more",
    "start": "1612480",
    "end": "1618600"
  },
  {
    "text": "difficult in uh in previous systems okay let's see here so I have about three",
    "start": "1618600",
    "end": "1624679"
  },
  {
    "text": "minutes left and so I'm going to skip a number of things including some stuff on topic",
    "start": "1624679",
    "end": "1629760"
  },
  {
    "text": "modeling um a minor point that I want to make here just extremely briefly is that",
    "start": "1629760",
    "end": "1635000"
  },
  {
    "text": "we've also been very interested in large-scale distributed parallelism and we have found some great advantages",
    "start": "1635000",
    "end": "1640760"
  },
  {
    "text": "to thinking about how to do parallelism and thinking about how to do the machine",
    "start": "1640760",
    "end": "1645919"
  },
  {
    "text": "learning entrance at the same time in an in twined way that actually makes things significantly faster so it's like the",
    "start": "1645919",
    "end": "1652440"
  },
  {
    "text": "entrance method is thinking not only about how to solve the problem but thinking about how to most efficiently",
    "start": "1652440",
    "end": "1657960"
  },
  {
    "text": "distribute the data across the machine and this is one of the ways that we're very excited about say integrating ideas",
    "start": "1657960",
    "end": "1664399"
  },
  {
    "text": "from Factory which knows about the machine learning modeling and you know with some of these previous Scala",
    "start": "1664399",
    "end": "1671159"
  },
  {
    "text": "machine learning AIDs that I described earlier that are thinking deeply about distribution and you know putting them",
    "start": "1671159",
    "end": "1676440"
  },
  {
    "text": "together in a deeply intertwined way um I don't have time to show this but this is uh like this is with parallelism",
    "start": "1676440",
    "end": "1683360"
  },
  {
    "text": "without being smart about using machine learning to think about parallelism and when you do them together they can make a very big difference okay so I'll just",
    "start": "1683360",
    "end": "1689880"
  },
  {
    "text": "conclude with just a couple of points here so uh what we love about Scala I",
    "start": "1689880",
    "end": "1695240"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "think it's not going to be any surprise it's uh um the same things that you love we've made extensive use of of traits",
    "start": "1695240",
    "end": "1700919"
  },
  {
    "text": "and it's been a big win for us we also use implicit parameters say to keep you know automatically pass in diff list",
    "start": "1700919",
    "end": "1707039"
  },
  {
    "text": "arguments we've you know made a lot of use of function arguments uh say to capture closures for partially built",
    "start": "1707039",
    "end": "1713399"
  },
  {
    "text": "factors that still need more information to finally create them and you get that information later um you know we've used",
    "start": "1713399",
    "end": "1719200"
  },
  {
    "text": "implicit conversions and the cake pattern in a number of places but I guess what I more interested to talk",
    "start": "1719200",
    "end": "1725200"
  },
  {
    "start": "1725000",
    "end": "1725000"
  },
  {
    "text": "about are some things that we'd still like to see from Scala and I have three things to say um so one is it would be",
    "start": "1725200",
    "end": "1731640"
  },
  {
    "text": "nice to have just a little bit more efficiency and uh um you know I I know that there's a desire not to do",
    "start": "1731640",
    "end": "1737440"
  },
  {
    "text": "premature optimization but I kind of feel like we're at the point where just a little bit more optimization wouldn't be premature um so there's some places",
    "start": "1737440",
    "end": "1745080"
  },
  {
    "text": "where we're scared to use the scholar collection Library just because we just get surprised by some strange inefficiency there um we're tremendously",
    "start": "1745080",
    "end": "1752320"
  },
  {
    "text": "happy that it seems that this uh you know four Loops over integers seems to",
    "start": "1752320",
    "end": "1757760"
  },
  {
    "text": "be fixed it's no longer uh um uh you know wrapping integers and uh you know",
    "start": "1757760",
    "end": "1763000"
  },
  {
    "text": "creating a lot of objects uh for us this mattered to us a lot uh it was quite painful to just do while Loops",
    "start": "1763000",
    "end": "1769640"
  },
  {
    "text": "everywhere um but we still get surprises like uh just last week we were using Signum you know which is one of the E",
    "start": "1769640",
    "end": "1776320"
  },
  {
    "text": "it's a single operation on the CPU it just gives you the sign of the number and but this is what it turns into in in",
    "start": "1776320",
    "end": "1782960"
  },
  {
    "text": "Scala unfortunately it it boxes and it's just mindblowing to us it's just so sad",
    "start": "1782960",
    "end": "1789960"
  },
  {
    "text": "uh um so okay so it's some of that and point number two is I've desired for a long time Constructor Arguments for",
    "start": "1789960",
    "end": "1796840"
  },
  {
    "text": "traits right this would let me get manifests the manifests for the type arguments of traits as well as a bunch of other things and I know there's been",
    "start": "1796840",
    "end": "1803279"
  },
  {
    "text": "discussion about this for years and uh Donna maler who you know I think has",
    "start": "1803279",
    "end": "1808440"
  },
  {
    "text": "been working with epfl folks is I think has a way to do this and I know it's been sort of in discussion but you know",
    "start": "1808440",
    "end": "1814640"
  },
  {
    "text": "not happened yet and lastly this is my last thing and that I know I'm just a little bit over time but so this is",
    "start": "1814640",
    "end": "1820039"
  },
  {
    "text": "something uh that I've wanted so often and I don't even know I don't know",
    "start": "1820039",
    "end": "1825440"
  },
  {
    "text": "whether it's considered or being discussed or whether it makes sense than I thought this audience could tell me and this is the following issue",
    "start": "1825440",
    "end": "1833240"
  },
  {
    "text": "so uh you know when you uh um you can stack some traits that override a method",
    "start": "1833240",
    "end": "1840240"
  },
  {
    "text": "and when you call Super Fu here you know as you all know I'm sure there's linearization and the meaning of that",
    "start": "1840240",
    "end": "1845760"
  },
  {
    "text": "super Fu depends on the linearization of the traits it will cause sort of the the implementation of food The Next Step",
    "start": "1845760",
    "end": "1851799"
  },
  {
    "text": "through uh set of traits I would like the same kind of thing to be possible when I say uh extends super Fu in an",
    "start": "1851799",
    "end": "1860279"
  },
  {
    "text": "inner class right so right now if I say I have an innerclass Fu here and then I",
    "start": "1860279",
    "end": "1865720"
  },
  {
    "text": "have some some traits that create new inter classes that extend superu this",
    "start": "1865720",
    "end": "1870919"
  },
  {
    "text": "super fu is just statically refers to this outer one uh um and I would like to",
    "start": "1870919",
    "end": "1877559"
  },
  {
    "text": "be able to stack a bunch of traits here and have Fu here you know incorporate uh",
    "start": "1877559",
    "end": "1885039"
  },
  {
    "text": "um you know all of the aspects of all of the sub definitions a Fu and all of these uh uh traits here it's like a kind",
    "start": "1885039",
    "end": "1890960"
  },
  {
    "text": "of cake pattern that lets me reach into an already defined inner object and add some functionality to that pre-existing",
    "start": "1890960",
    "end": "1896480"
  },
  {
    "text": "inner object with that I'm sorry I'm a little bit over but I I close now and happy to take questions thank you",
    "start": "1896480",
    "end": "1904300"
  },
  {
    "text": "[Applause]",
    "start": "1904300",
    "end": "1911000"
  },
  {
    "text": "[Music]",
    "start": "1911170",
    "end": "1914259"
  }
]