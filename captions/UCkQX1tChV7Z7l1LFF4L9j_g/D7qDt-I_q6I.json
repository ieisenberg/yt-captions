[
  {
    "text": "[Music]",
    "start": "3320",
    "end": "8769"
  },
  {
    "text": "uh welcome to uh wum what is universal compute good for uh my name is Sean isum",
    "start": "10800",
    "end": "15920"
  },
  {
    "text": "I'm a senior engineering manager at Adobe I work on our uh Cloud compute platform uh and Colin mentioned I live",
    "start": "15920",
    "end": "23320"
  },
  {
    "text": "three blocks that way you can see this from my apartment so long commute for me this morning um today we're going to",
    "start": "23320",
    "end": "28840"
  },
  {
    "text": "talk a little bit about uh web assembly a little bit about Edge a little bit about Cloud architecture and I hope you",
    "start": "28840",
    "end": "34440"
  },
  {
    "text": "can take away from this talk uh how and why you can use web assembly to build a universal compute engine that allows you",
    "start": "34440",
    "end": "41079"
  },
  {
    "text": "to bring your code closer to your data increasing your efficiency uh increasing your application's performance let's go",
    "start": "41079",
    "end": "48280"
  },
  {
    "text": "ahead and Dive Right In okay so what specifically do I mean",
    "start": "48280",
    "end": "55760"
  },
  {
    "text": "by Universal compute imagine a world where you can ship your code to any device and run the code where it makes",
    "start": "55760",
    "end": "62800"
  },
  {
    "text": "the most sense sounds great right uh this might sound familiar people have tried uh different techniques for this",
    "start": "62800",
    "end": "69840"
  },
  {
    "text": "before through various uh Virtual Machine Technologies idls bite code",
    "start": "69840",
    "end": "74960"
  },
  {
    "text": "formats one example that comes to mind for me specifically uh is some of the early days of java which I'm sure is",
    "start": "74960",
    "end": "81600"
  },
  {
    "text": "something that a lot of people here can empathize with one of the early design goals of java was uh to be able to have",
    "start": "81600",
    "end": "88600"
  },
  {
    "text": "a portable bite code format can run on a plethora of devices abstracting away",
    "start": "88600",
    "end": "93799"
  },
  {
    "text": "some of that underlying Hardware allowing developers to focus more on the the business logic That Matters to them",
    "start": "93799",
    "end": "100759"
  },
  {
    "text": "than the underlying infrastructure and the underlying host uh so I I would call",
    "start": "100759",
    "end": "105920"
  },
  {
    "text": "Web assembly kind of the the next generation of this it is simply a more modern tool that's going to allow us to",
    "start": "105920",
    "end": "111520"
  },
  {
    "text": "run that code not only on any device not only on any form factor but where it",
    "start": "111520",
    "end": "117039"
  },
  {
    "text": "makes the most business sense to the actual application in question that's where you actually derive value from",
    "start": "117039",
    "end": "122280"
  },
  {
    "text": "these kinds of large architectural",
    "start": "122280",
    "end": "125840"
  },
  {
    "text": "shifts let's establish a thesis statement and actually first I always like to to start my talks with a quote",
    "start": "127560",
    "end": "134080"
  },
  {
    "text": "and and this is a good one compute is Nimble and can be easily moved anywhere",
    "start": "134080",
    "end": "139760"
  },
  {
    "text": "data is heavy and moving it has a cost this is uh from an individual named",
    "start": "139760",
    "end": "145200"
  },
  {
    "text": "glabber Costa and actually comes from an article on the new stack called uh what the heck is Edge and why should you care",
    "start": "145200",
    "end": "152280"
  },
  {
    "text": "uh it's a really great write up highly encourage you to go uh read it and uh learn a little bit more about people",
    "start": "152280",
    "end": "157480"
  },
  {
    "text": "want to why people want to move code to the edge in the first place uh but let's apply this to establish our thesis",
    "start": "157480",
    "end": "164000"
  },
  {
    "text": "statement and that is this web assembly is the best tool for Universal compute",
    "start": "164000",
    "end": "169239"
  },
  {
    "text": "but moving compute only makes sense when you improve data locality uh when you improve performance or cost when you",
    "start": "169239",
    "end": "175440"
  },
  {
    "text": "move some sort of metric and move the needle uh in a positive direction um um when you improve your data locality uh",
    "start": "175440",
    "end": "182560"
  },
  {
    "text": "you uh drive more efficient Cloud native architectures in the first place my goal",
    "start": "182560",
    "end": "188519"
  },
  {
    "text": "really is to convince you that yes we can run the universal compute run times",
    "start": "188519",
    "end": "194519"
  },
  {
    "text": "anywhere uh but that there's heris and Frameworks and techniques we can use to think about where that code should run",
    "start": "194519",
    "end": "200760"
  },
  {
    "text": "both at runtime and at design time some may argue with the fact that",
    "start": "200760",
    "end": "207040"
  },
  {
    "text": "compute is actually that Nimble let's say You're Building build something around a specific cloud provider SDK uh",
    "start": "207040",
    "end": "213000"
  },
  {
    "text": "you're running a AWS Lambda function you need to pull data from S3 you're probably using the AWS SDK for whatever",
    "start": "213000",
    "end": "220200"
  },
  {
    "text": "language you're running in you're locked into that framework and you're locked in that way of doing things but rewriting",
    "start": "220200",
    "end": "225599"
  },
  {
    "text": "that chunk of code uh that's more generically pulling data from some sort of blob store is still easier and",
    "start": "225599",
    "end": "232239"
  },
  {
    "text": "cheaper than uh let's say running a Lambda and pulling from a different cloud provider or pulling from a",
    "start": "232239",
    "end": "238400"
  },
  {
    "text": "proprietary piece of block storage um so that data component is critical to",
    "start": "238400",
    "end": "245640"
  },
  {
    "text": "understanding where your application should run because really your application is just a set of code Plus data so compute is fairly Nimble I would",
    "start": "245640",
    "end": "253519"
  },
  {
    "text": "say Nimble asterisk Nimble if we design it from the outset to be nimble uh",
    "start": "253519",
    "end": "258840"
  },
  {
    "text": "Nimble if we design it to be moved around but we want to move it on the basis of where our data resides and",
    "start": "258840",
    "end": "263960"
  },
  {
    "text": "where that data is going to be closest to the user and the use case uh necessary to operate on that data",
    "start": "263960",
    "end": "271600"
  },
  {
    "text": "So today we're going to talk a little bit more about Universal compute and some of the background on web assembly",
    "start": "271680",
    "end": "276919"
  },
  {
    "text": "uh how Adobe uses web assembly both on the back end and on the front end um a little bit about how one should think",
    "start": "276919",
    "end": "284080"
  },
  {
    "text": "about architecting for Edge and architecting for moving compute across different devices uh some of the value",
    "start": "284080",
    "end": "290000"
  },
  {
    "text": "prop of building code for web assembly in the first place I'm going to go through three different architectural",
    "start": "290000",
    "end": "296520"
  },
  {
    "text": "examples where web assembly can power this concept of universal compute allowing you to move that around and",
    "start": "296520",
    "end": "302759"
  },
  {
    "text": "then end on a discussion of scheduling or where should the code run I think there's a lot of useful heuristics you",
    "start": "302759",
    "end": "309160"
  },
  {
    "text": "can apply at design time and at runtime but you can also algorithmically schedule based off of some sort of me",
    "start": "309160",
    "end": "314680"
  },
  {
    "text": "measured metric so this is a bit of a a",
    "start": "314680",
    "end": "320919"
  },
  {
    "text": "fascinating proposition this this concept of universal compute and I want to start with a bit of a background on",
    "start": "320919",
    "end": "325960"
  },
  {
    "text": "on web assembly uh well I wanted to start with the background web assembly seems like everyone raised their hand",
    "start": "325960",
    "end": "331440"
  },
  {
    "text": "here and has had a heard of web assembly already but I'll still give the background uh in case you just know some of the basic definitions of it so web",
    "start": "331440",
    "end": "338319"
  },
  {
    "text": "assembly provides a universal runtime it's a universal bite code format uh there's a set of associated tools and",
    "start": "338319",
    "end": "345039"
  },
  {
    "text": "runtimes like WM time which is one of the more popular ones backed by the bite code Alliance but web assembly is a set",
    "start": "345039",
    "end": "351479"
  },
  {
    "text": "of standards and set of technologies that allows you to write your code once and run it anywhere uh I think I love",
    "start": "351479",
    "end": "358600"
  },
  {
    "text": "this quote and I think it's attributed to Tyler McMullan who's the CTO of fley who've been some of the Pioneers in the",
    "start": "358600",
    "end": "364840"
  },
  {
    "text": "web assembly space uh but let's let's discuss the the the evolution of this",
    "start": "364840",
    "end": "370199"
  },
  {
    "text": "over time web assembly started in a web browser it's why it has the name web",
    "start": "370199",
    "end": "375880"
  },
  {
    "text": "assembly and a lot of the motivation for doing this was being able to run native code uh run high performance code in a",
    "start": "375880",
    "end": "382319"
  },
  {
    "text": "sandboxed way within the context of a web browser so you're bringing that core compute and that business logic to a new",
    "start": "382319",
    "end": "388960"
  },
  {
    "text": "form factor to solve some sort of business problem to increase your number of channels you have to sell software to",
    "start": "388960",
    "end": "395479"
  },
  {
    "text": "your users uh to be able to integrate in with more modern Stacks web-based UI Frameworks for example it allows a",
    "start": "395479",
    "end": "402120"
  },
  {
    "text": "common codebase to be able to work within the confines of a web browser in a fairly standardized way that is both",
    "start": "402120",
    "end": "407880"
  },
  {
    "text": "sandbox isolated but can also efficiently communicate with the host system",
    "start": "407880",
    "end": "413520"
  },
  {
    "text": "itself and here in the example for web browser the host system is kind of twofold uh the host system is the web",
    "start": "413520",
    "end": "420840"
  },
  {
    "text": "browser but there are also underlying system processes as well uh there's underlying compute capabilities that",
    "start": "420840",
    "end": "427199"
  },
  {
    "text": "live outside of that web browser that are necessary and so over time people started looking at web assembly holistically and said is this something",
    "start": "427199",
    "end": "434800"
  },
  {
    "text": "that can run outside of the web browser uh there's a well- defined set of standards for sandbox highly performant",
    "start": "434800",
    "end": "442240"
  },
  {
    "text": "bite code systems that can be aot compiled for Native Hardware so you can imagine a a flurry of use cases start",
    "start": "442240",
    "end": "449360"
  },
  {
    "text": "screening up around running this outside of a browser uh maybe plugin systems for a game uh maybe some sort of dynamic",
    "start": "449360",
    "end": "457039"
  },
  {
    "text": "application some sort of function as a service uh a method to write very specific chunks of sandbox code and run",
    "start": "457039",
    "end": "463479"
  },
  {
    "text": "them in a safe performant way so all of these outside of the browser use cases start appearing and things like the bik",
    "start": "463479",
    "end": "470240"
  },
  {
    "text": "code Alliance and and Wy or the web assistant web assembly system interface",
    "start": "470240",
    "end": "475879"
  },
  {
    "text": "uh spun up to allow web assembly to work well outside of a web browser and this",
    "start": "475879",
    "end": "481000"
  },
  {
    "text": "is this is really interesting so we've got web we've got desktop two different worlds right well maybe not maybe the",
    "start": "481000",
    "end": "488879"
  },
  {
    "text": "way we should be thinking about this is it's still the same web assembly it's still the same code it's still the same",
    "start": "488879",
    "end": "494319"
  },
  {
    "text": "guarantees and it's the same application model that we've written for this more generic computer let's let's call it",
    "start": "494319",
    "end": "500360"
  },
  {
    "text": "that it's a generic compute runtime uh but it's running in a plethora of different form factors uh that same code",
    "start": "500360",
    "end": "506560"
  },
  {
    "text": "independent of system resources and can run in both of those locations and so we've got two let's",
    "start": "506560",
    "end": "514039"
  },
  {
    "text": "think of more what about iot devices at the end of the day these can",
    "start": "514039",
    "end": "519518"
  },
  {
    "text": "be viewed kind of like a desktop computer just a much more constrained compute environment and with the",
    "start": "519519",
    "end": "524959"
  },
  {
    "text": "performance of web assembly with a safety of web assembly why not run that same code that's running in your web",
    "start": "524959",
    "end": "530080"
  },
  {
    "text": "browser I don't know on your refrigerator on your toaster joking about that one but in all seriousness",
    "start": "530080",
    "end": "536040"
  },
  {
    "text": "there are the same guarantees across these different form factors performance security being able to run that same",
    "start": "536040",
    "end": "541720"
  },
  {
    "text": "chunk of code in a more constrained form factor uh be that a browser be that a desktop maybe a server uh and that",
    "start": "541720",
    "end": "548760"
  },
  {
    "text": "extends to Edge compute as well when we think about Edge compute",
    "start": "548760",
    "end": "554600"
  },
  {
    "text": "often we uh often there's a lot of different definitions but we associate this most",
    "start": "554600",
    "end": "560079"
  },
  {
    "text": "of things like Telos uh different Edge Cloud providers that are not centralized but maybe provide some sort of resource",
    "start": "560079",
    "end": "566240"
  },
  {
    "text": "that's still multi-tenant still programmable and closer to the user than a centralized Cloud region or data",
    "start": "566240",
    "end": "571440"
  },
  {
    "text": "center although maybe not quite as far out as an inpoint device like some of these other three why not bring that",
    "start": "571440",
    "end": "576959"
  },
  {
    "text": "same chunk of code that's running in a web browser uh why not run that same function on a desktop why not run that",
    "start": "576959",
    "end": "582720"
  },
  {
    "text": "same function on your toaster why not run that same function on an edge device there's no reason you",
    "start": "582720",
    "end": "588760"
  },
  {
    "text": "can't and so you can also bring this to the",
    "start": "588760",
    "end": "593880"
  },
  {
    "text": "cloud and this is kind of where we come full circle with traditional architecture between a client in a",
    "start": "593880",
    "end": "599360"
  },
  {
    "text": "server a client in a cloud [Music] um there's there's just there's a lot of",
    "start": "599360",
    "end": "605000"
  },
  {
    "text": "different architectures for what we call cloud and a lot of different ways to Define Cloud uh but through things like",
    "start": "605000",
    "end": "610360"
  },
  {
    "text": "AKs wiy node pool support and a lot of the PA platforms that have sprung up over the last year uh there's really",
    "start": "610360",
    "end": "616040"
  },
  {
    "text": "easy and straightforward and performant ways to run web assembly within the cloud as well so this is where this concept of",
    "start": "616040",
    "end": "624800"
  },
  {
    "text": "right once run anywhere in Universal compute becomes really cool uh I don't have to write web assembly",
    "start": "624800",
    "end": "631200"
  },
  {
    "text": "for this one specific thing this one specific use case or this specific device I think the concept really shines",
    "start": "631200",
    "end": "637959"
  },
  {
    "text": "by being able to abstract the system abstract the host abstract the language and be able to run the same Core",
    "start": "637959",
    "end": "643920"
  },
  {
    "text": "Business logic across form factors where it makes the most business sense and",
    "start": "643920",
    "end": "649000"
  },
  {
    "text": "that's why and that's because web assembly is simply a lot more than just the runtime itself it's the developer",
    "start": "649000",
    "end": "656160"
  },
  {
    "text": "ecosystem it's the mechanism we use to communicate across components it's the mechanism to access that data in a",
    "start": "656160",
    "end": "662680"
  },
  {
    "text": "standardized way separating it uh from the compute to be able to manage those",
    "start": "662680",
    "end": "667720"
  },
  {
    "text": "dependencies uh if you're running on the cloud on the right for example uh you're",
    "start": "667720",
    "end": "673240"
  },
  {
    "text": "probably modifying multiple containers you multiply that across all of your different applications or all of your",
    "start": "673240",
    "end": "679000"
  },
  {
    "text": "clusters let let's use the log for J vulnerability as an example anybody remember that from a few years ago um so",
    "start": "679000",
    "end": "686440"
  },
  {
    "text": "you've got to rebuild all those containers you got to ship those sets of containers across all of your environments and all of your clusters well maybe we should invert",
    "start": "686440",
    "end": "693279"
  },
  {
    "text": "that model a bit and start thinking about dependencies in terms of capabilities and that's what allows us",
    "start": "693279",
    "end": "698720"
  },
  {
    "text": "to have a better developer experience where we can just update the code and the Manifest in one place and let the",
    "start": "698720",
    "end": "704399"
  },
  {
    "text": "runtime itself take care of patching those libraries when they're abstracted away from the business logic so that's",
    "start": "704399",
    "end": "711120"
  },
  {
    "text": "why I think web assembly is really turning out to be a a much beefier much stronger technology that allows us to",
    "start": "711120",
    "end": "717800"
  },
  {
    "text": "not only run in multiple places but support the ecosystem and the data for an application in multiple",
    "start": "717800",
    "end": "724760"
  },
  {
    "text": "places so specifically this talk we're going to focus more a little bit more from these boxes on the interaction",
    "start": "724760",
    "end": "729920"
  },
  {
    "text": "between Edge compute uh Cloud compute and client Hardware uh and how they can interact with same web assembly",
    "start": "729920",
    "end": "738360"
  },
  {
    "text": "modules let's give some some preliminary background uh Adobe has run web assembly successfully for many years now uh and",
    "start": "738880",
    "end": "746720"
  },
  {
    "text": "actually take taking a step back looking at some of the pr or some of the previous attempts uh things like asm.js",
    "start": "746720",
    "end": "752639"
  },
  {
    "text": "and um actually do anybody anybody heard of Google's portable native client um",
    "start": "752639",
    "end": "758279"
  },
  {
    "text": "yeah um so these are some early attempts at running uh sandbox well sandbox",
    "start": "758279",
    "end": "765120"
  },
  {
    "text": "question mark running running safe native code in a web browser uh and the reason we want to do that is because we",
    "start": "765120",
    "end": "771040"
  },
  {
    "text": "can uh reuse some of these native code bases that a lot of large companies have that have many decades of investment um",
    "start": "771040",
    "end": "778839"
  },
  {
    "text": "this is kind of LED and and bled across different products it started with Lightroom web I think that actually",
    "start": "778839",
    "end": "784079"
  },
  {
    "text": "originally launched on an as injs and uh with our more modern web stack uh products like acrobat JS and the actual",
    "start": "784079",
    "end": "791320"
  },
  {
    "text": "uh Photoshop beta which is in a web browser um mostly using the same common",
    "start": "791320",
    "end": "797199"
  },
  {
    "text": "code um there's a lot of uh integration into UI Frameworks so web assembly is",
    "start": "797199",
    "end": "803519"
  },
  {
    "text": "becoming the default and you see that in some of our next Generation products like Firefly this is a recently announced beta which uh is a generative",
    "start": "803519",
    "end": "811240"
  },
  {
    "text": "AI engine which is a very hot topic for many organizations today so as we've",
    "start": "811240",
    "end": "816560"
  },
  {
    "text": "adopted web assembly it's it's kind of gotten to the point where it's powered a lot of our front-end products and the reason behind that is because it meets",
    "start": "816560",
    "end": "822760"
  },
  {
    "text": "all those guarantees that we talked about it's a high performance system we can utilize those existing code bases",
    "start": "822760",
    "end": "828600"
  },
  {
    "text": "and it's secure by default in a multi-tenant environment like a web",
    "start": "828600",
    "end": "833680"
  },
  {
    "text": "browser speaking of multi-tenant environments obviously there's backing Services behind those products as well",
    "start": "833680",
    "end": "840320"
  },
  {
    "text": "uh Adobe uh runs kubernetes uh as the complexity of our you know user facing",
    "start": "840320",
    "end": "846399"
  },
  {
    "text": "products grow the size of the backend capabilities grow as well I'm sure this is something most people in this room",
    "start": "846399",
    "end": "852199"
  },
  {
    "text": "are interfacing with seems like uh there's very few organizations today that are not running kubernetes um this",
    "start": "852199",
    "end": "858320"
  },
  {
    "text": "is not an exhaustive list of everything that's running in what I would call our Cloud but you can imagine that",
    "start": "858320",
    "end": "863959"
  },
  {
    "text": "centralized kubernetes and container infrastructure Powers most of our capabilities we got over 5,000",
    "start": "863959",
    "end": "869680"
  },
  {
    "text": "production microservices 5.5 million different running containers so matter no matter how you look at the metrics we",
    "start": "869680",
    "end": "875800"
  },
  {
    "text": "run a lot of compute on the back end to power those front-end products um so you",
    "start": "875800",
    "end": "881399"
  },
  {
    "text": "can imagine how we have a very high performance in user product very high performance backend that's powering",
    "start": "881399",
    "end": "888000"
  },
  {
    "text": "those products but what sets between and this is where the concept of",
    "start": "888000",
    "end": "894600"
  },
  {
    "text": "the edge comes into play now I promise you this is not just an edge talk right right we're here to talk about web",
    "start": "894600",
    "end": "900240"
  },
  {
    "text": "assembly but I think we have to give some definitions of this and talk about what lies between back and and front end",
    "start": "900240",
    "end": "908120"
  },
  {
    "text": "uh in terms of being able to shift computer around remember that original quote uh what the heck is Edge and why",
    "start": "908120",
    "end": "914519"
  },
  {
    "text": "does it matter I love using this graphic to explain this is from our friends at Cosmic thank you very much uh I think um",
    "start": "914519",
    "end": "923120"
  },
  {
    "text": "Edge means a lot of different things to a lot of different people uh to me Edge is a good form factor for shifting",
    "start": "923120",
    "end": "928800"
  },
  {
    "text": "compute and allowing us to have better data locality and so by Edge specific to this talk I'm mean things in this",
    "start": "928800",
    "end": "935240"
  },
  {
    "text": "graphic like the regional or access Edge um these are uh systems that are outside",
    "start": "935240",
    "end": "942319"
  },
  {
    "text": "of maybe the major Cloud providers outside of corporate data centers um they're run out of outside of centralized locations uh these are",
    "start": "942319",
    "end": "949240"
  },
  {
    "text": "compute nodes that are just out further towards user inpoint devices um there's",
    "start": "949240",
    "end": "954959"
  },
  {
    "text": "other definitions as well like some might actually consider a web browser to be an device and that's fine you know",
    "start": "954959",
    "end": "960759"
  },
  {
    "text": "that's maybe an extreme example of as as a company you're not paying anything for that compute and you are paying",
    "start": "960759",
    "end": "966240"
  },
  {
    "text": "something for the data to get that uh web assembly module to the user but but the runtime cost is from a financial",
    "start": "966240",
    "end": "972839"
  },
  {
    "text": "perspective essentially free anyways there's no right or wrong answer on this right this is intended to say this is a",
    "start": "972839",
    "end": "978560"
  },
  {
    "text": "spectrum um but for this talk we will Define Edge to be sets of services that",
    "start": "978560",
    "end": "984399"
  },
  {
    "text": "live between centralized data centers and that endpoint user device there's lot of different architectures a lot of",
    "start": "984399",
    "end": "989759"
  },
  {
    "text": "different ways this can play out for for different organizations and then let's dig in on",
    "start": "989759",
    "end": "997399"
  },
  {
    "text": "service architecture as as well uh what might a typical web service look like",
    "start": "997399",
    "end": "1002959"
  },
  {
    "text": "that's running on that back end and what are some of the different capabilities it's doing and what are some of the the",
    "start": "1002959",
    "end": "1008519"
  },
  {
    "text": "functions that we can we can use maybe to offset some of this compute on the",
    "start": "1008519",
    "end": "1014040"
  },
  {
    "text": "back end uh first of all services come in all shapes and sizes speaking to a",
    "start": "1014040",
    "end": "1019120"
  },
  {
    "text": "room of developers and Architects so there should be no surprise uh but within our multi-tenant platform uh you",
    "start": "1019120",
    "end": "1024959"
  },
  {
    "text": "can graph kind of a Services utilization and resource and capacity requirements like this these are five Dimensions that",
    "start": "1024959",
    "end": "1031959"
  },
  {
    "text": "matter to us there can be different dimensions that matter to different applications but essentially there is",
    "start": "1031959",
    "end": "1037600"
  },
  {
    "text": "you are mapping some sort of system capability in this case CPU memory Network dis throughput in iops you're",
    "start": "1037600",
    "end": "1044438"
  },
  {
    "text": "mapping some sort of fixed capability to a more Dynamic uh Cent runtime that's",
    "start": "1044439",
    "end": "1049640"
  },
  {
    "text": "not going to fill all of that and that's okay right uh if you were to 100%",
    "start": "1049640",
    "end": "1054720"
  },
  {
    "text": "utilize your CPU your accountants would probably be very happy but then your application would probably have huge qos",
    "start": "1054720",
    "end": "1060799"
  },
  {
    "text": "problems and um you know at the end of the day that's not a good thing if you fully utilize your memory it's probably",
    "start": "1060799",
    "end": "1067200"
  },
  {
    "text": "crashing and restarting uh if your dis is full it probably can't do much else",
    "start": "1067200",
    "end": "1072960"
  },
  {
    "text": "and so if you were to graph a bunch of different applications across across here what you note is this the shape of",
    "start": "1072960",
    "end": "1080240"
  },
  {
    "text": "that yellow line in the middle that shape of that utilization graph is going to be all over the map and that's kind",
    "start": "1080240",
    "end": "1085679"
  },
  {
    "text": "of the blessing in the curse of multi-tenant systems is you have to play Tetris a bit you have to bin pack you",
    "start": "1085679",
    "end": "1090960"
  },
  {
    "text": "have to fit you have to utilize those backing resources effectively uh to match the requirements of the",
    "start": "1090960",
    "end": "1096080"
  },
  {
    "text": "application itself but let's let's let's dig in on how a spe this specific service ey graph",
    "start": "1096080",
    "end": "1102919"
  },
  {
    "text": "what the service does doesn't matter um I just want to use this an example as an example for for the rest of the talk so",
    "start": "1102919",
    "end": "1109720"
  },
  {
    "text": "by default it's Java in Spring boot it's running in kubernetes in a containerized environment uh it's going to be running",
    "start": "1109720",
    "end": "1116240"
  },
  {
    "text": "at about 28% CPU utilization 55% Ram utilization uh it's going to have a uh",
    "start": "1116240",
    "end": "1124159"
  },
  {
    "text": "pretty large Ram working set because of how Java allocates the heat in a container it's going to have a workflow",
    "start": "1124159",
    "end": "1131400"
  },
  {
    "text": "that looks something like this uh it's going to be running some sort of thread pools uh that you can Fork a thread or",
    "start": "1131400",
    "end": "1137520"
  },
  {
    "text": "not Fork you can take take a thread off the thread Poole and be able to handle some sort of incoming web request uh it's probably a rest API request that's",
    "start": "1137520",
    "end": "1144400"
  },
  {
    "text": "coming in from a front-end product uh might be coming in from another service you you might have a chain of services",
    "start": "1144400",
    "end": "1149440"
  },
  {
    "text": "calling each other uh you know there's a lot of different answers to this pretty typical pattern you're going to take",
    "start": "1149440",
    "end": "1155200"
  },
  {
    "text": "that input from the rest API you're going to transform it in some way you're going to perform some sort of data operation on that input you're going to",
    "start": "1155200",
    "end": "1162679"
  },
  {
    "text": "go out and request data from some sort of dependency could be a database could be block stor",
    "start": "1162679",
    "end": "1169000"
  },
  {
    "text": "doesn't really matter what the dependency is right uh there's very few services that take data and crunch a",
    "start": "1169000",
    "end": "1174039"
  },
  {
    "text": "number and spit something out without talking to some sort dependency and it's going to send that response and it's going to send that response",
    "start": "1174039",
    "end": "1180120"
  },
  {
    "text": "synchronously back to the user but probably also asynchronously back to another set of services maybe you've got",
    "start": "1180120",
    "end": "1185280"
  },
  {
    "text": "an eventually consistent system you need to update some sort of system of record um this is sorry this is not supposed to",
    "start": "1185280",
    "end": "1193080"
  },
  {
    "text": "be an exhaustive example but the idea is just start thinking about uh if I've got a bunch bunch of containers on the back",
    "start": "1193080",
    "end": "1199440"
  },
  {
    "text": "end they're serving frontend products that look like this what can I do to to run those in",
    "start": "1199440",
    "end": "1205280"
  },
  {
    "text": "different environments and so let's let's think",
    "start": "1205280",
    "end": "1210360"
  },
  {
    "text": "about how we can architect for Edge and how we can discuss Cloud architecture in",
    "start": "1210360",
    "end": "1215559"
  },
  {
    "text": "terms of boxes I like boxes I'm a pretty visual person um a lot of Architecture",
    "start": "1215559",
    "end": "1222320"
  },
  {
    "text": "is two boxes these days you've got a client and you've got a server and data",
    "start": "1222320",
    "end": "1228440"
  },
  {
    "text": "in this nomenclature and your users just want to do a thing they don't really care about",
    "start": "1228440",
    "end": "1233760"
  },
  {
    "text": "the architecture behind the product that they're using let's say they hit a button in your product and they want it to go perform an operation so there's",
    "start": "1233760",
    "end": "1241200"
  },
  {
    "text": "already some decision points at runtime for the product uh or done as you by you as the developer uh as to how to power",
    "start": "1241200",
    "end": "1249120"
  },
  {
    "text": "that request for example on an inpoint user device you have to think critically",
    "start": "1249120",
    "end": "1254440"
  },
  {
    "text": "about can I quickly run this functionality like if I'm let's say I'm running some",
    "start": "1254440",
    "end": "1260799"
  },
  {
    "text": "massive ml model I'm running a generative AI model like I said all the hype these days I probably don't want to",
    "start": "1260799",
    "end": "1266200"
  },
  {
    "text": "pull down that entire model load all of the weights into my local vram spin it up do the inferencing locally and use",
    "start": "1266200",
    "end": "1272720"
  },
  {
    "text": "that result in another function that that's very wasteful very silly also probably an extreme example but for a",
    "start": "1272720",
    "end": "1279480"
  },
  {
    "text": "constrained uh compute environment you might want to answer this question a little bit differently than in a desktop",
    "start": "1279480",
    "end": "1284880"
  },
  {
    "text": "environment where you have a GPU and if you need to perform some sort of convolution based process you have a",
    "start": "1284880",
    "end": "1290640"
  },
  {
    "text": "very powerful parallel processing mechanism to do that maybe on a mobile",
    "start": "1290640",
    "end": "1295679"
  },
  {
    "text": "device with 5% of your battery remaining you want to call out to some sort of web service to perform that same operation",
    "start": "1295679",
    "end": "1302360"
  },
  {
    "text": "instead um the other decision point is kind of around data locality does this device",
    "start": "1302360",
    "end": "1309320"
  },
  {
    "text": "have the data locally to do the thing let's use the example of an order",
    "start": "1309320",
    "end": "1315080"
  },
  {
    "text": "history system um every single order is probably stored in some sort of database somewhere on a server and that makes",
    "start": "1315080",
    "end": "1321400"
  },
  {
    "text": "sense because the actual payment Gateway lives on that server and so does the user device need the entire order",
    "start": "1321400",
    "end": "1328520"
  },
  {
    "text": "history for the operation um let's say that the function you're accessing the user doing a thing is trying to view",
    "start": "1328520",
    "end": "1334480"
  },
  {
    "text": "their shipment status on their most recent order you probably don't need that entire order history in in local",
    "start": "1334480",
    "end": "1339720"
  },
  {
    "text": "cache maybe you could cash something more recent closer to the user there's plenty of other real world",
    "start": "1339720",
    "end": "1346120"
  },
  {
    "text": "examples these are just some of these decision points that when you're writing client side code you have to",
    "start": "1346120",
    "end": "1352159"
  },
  {
    "text": "make um where Edge becomes really powerful is thinking about a closer",
    "start": "1352159",
    "end": "1357320"
  },
  {
    "text": "method to run offline compute to a user than a data center itself are there",
    "start": "1357320",
    "end": "1362360"
  },
  {
    "text": "existing compute functions that can be split off from a client application does it make more sense to to run in a more",
    "start": "1362360",
    "end": "1369880"
  },
  {
    "text": "powerful environment uh utilizing the network injecting latency uh but still",
    "start": "1369880",
    "end": "1375559"
  },
  {
    "text": "while keeping that compute as close to the user as POS possible uh is there a way to split off functions on the other",
    "start": "1375559",
    "end": "1381360"
  },
  {
    "text": "side from the back end maybe we don't need all that roundtrip latency something's running on the back end if we if we have a device that's capable",
    "start": "1381360",
    "end": "1388159"
  },
  {
    "text": "enough using a web assembly model to run that compute closer to the user so to",
    "start": "1388159",
    "end": "1393760"
  },
  {
    "text": "use it going back to to the order history example if you have to pull the full order history every time for your",
    "start": "1393760",
    "end": "1399200"
  },
  {
    "text": "operation Edge makes no sense because then you're going from client to Edge your cash is gold you're going to the",
    "start": "1399200",
    "end": "1405200"
  },
  {
    "text": "server pulling from the database going back at out Etc right it's there's no",
    "start": "1405200",
    "end": "1410320"
  },
  {
    "text": "point to caching everything that that that's wasteful um but if you can summarize that user profile or if a",
    "start": "1410320",
    "end": "1417400"
  },
  {
    "text": "subset of the data makes sense to keep warm uh you can not only reduce the cost but you can move that data one time and",
    "start": "1417400",
    "end": "1424240"
  },
  {
    "text": "improve the performance and the user experience and and then last preliminary",
    "start": "1424240",
    "end": "1431000"
  },
  {
    "text": "slide before we get into into more specifics I don't want to spend long on this but I do want to talk about how to",
    "start": "1431000",
    "end": "1436039"
  },
  {
    "text": "run web assembly inside kubernetes uh this is a graphic from I did a talk I did at qcon EU this year you can go",
    "start": "1436039",
    "end": "1442720"
  },
  {
    "text": "watch the talk if you want more technical details on this uh but for the sake of this talk I want to make you clear that you can easily run web",
    "start": "1442720",
    "end": "1448240"
  },
  {
    "text": "assembly code uh for your service in kubernetes and that's what's going to allow us to shift that compute between",
    "start": "1448240",
    "end": "1454000"
  },
  {
    "text": "the client side edge device and also in kubernetes on the back end um this is a method that we have set up to do this",
    "start": "1454000",
    "end": "1460240"
  },
  {
    "text": "based off WM Cloud there's other ways to do this there's no Universal solution um",
    "start": "1460240",
    "end": "1465279"
  },
  {
    "text": "basic idea is to utilize providers within the context of an existing kubernetes namespace it's going be one of those blue boxes on on the right um",
    "start": "1465279",
    "end": "1473640"
  },
  {
    "text": "and utilize something called the service supplier which is going to uh create a kubernetes service uh provision Ingress",
    "start": "1473640",
    "end": "1480640"
  },
  {
    "text": "essentially uh for an HTTP request uh hook that up to an HTTP provider that's going to communicate uh via gats outside",
    "start": "1480640",
    "end": "1488000"
  },
  {
    "text": "of the client's name space into a pool of common uh was and Cloud hosts and",
    "start": "1488000",
    "end": "1493200"
  },
  {
    "text": "these are the things that are actually running the actors or the functions that power the business log",
    "start": "1493200",
    "end": "1499640"
  },
  {
    "text": "um and then also you can communicate back out right if you need to send a result or if you need to access part of",
    "start": "1499640",
    "end": "1505240"
  },
  {
    "text": "that Services existing capabilities that are already provisioned in the namespace you can bidirectionally communicate via",
    "start": "1505240",
    "end": "1511360"
  },
  {
    "text": "VIA the lattice Network back into the namespace for horizontal service service communication pulling data from",
    "start": "1511360",
    "end": "1517799"
  },
  {
    "text": "dependencies S3 Etc um there's a few links on how to how",
    "start": "1517799",
    "end": "1522960"
  },
  {
    "text": "to do this at the bottom as well uh so taking the previous Java example let's say we got large container is doing",
    "start": "1522960",
    "end": "1528520"
  },
  {
    "text": "things we split off that function that's serving that request to more of a function as a service model uh we've got",
    "start": "1528520",
    "end": "1536000"
  },
  {
    "text": "we've still got the side cars in the namespace we're still you know running the compute the same way we were before but we have the capability to centralize",
    "start": "1536000",
    "end": "1543240"
  },
  {
    "text": "centralize that uh uh compute run time within that pool of common hosts uh like I said not intended to to",
    "start": "1543240",
    "end": "1550320"
  },
  {
    "text": "go deep into this but just wanted to say that there are ways to do this fairly easily uh to run this compute in",
    "start": "1550320",
    "end": "1558200"
  },
  {
    "text": "on a variety of form factors the other important thing is not",
    "start": "1558200",
    "end": "1563919"
  },
  {
    "text": "just running the code but being able to manage the code's dependencies and this",
    "start": "1563919",
    "end": "1569039"
  },
  {
    "text": "is where Wy or the web assembly system interface comes in uh more specifically",
    "start": "1569039",
    "end": "1574720"
  },
  {
    "text": "Wy Cloud which is a new set of standards that are coming out some of the Wy working groups uh there are things like",
    "start": "1574720",
    "end": "1580039"
  },
  {
    "text": "Wy SQL that are coming out that will make this possible um I bet this is an example that resonates with a lot of",
    "start": "1580039",
    "end": "1585240"
  },
  {
    "text": "people here um with most cloud architectures I would say at this point you're",
    "start": "1585240",
    "end": "1590640"
  },
  {
    "text": "probably running some sort of SQL based system somewhere it's a very common capability uh you need the ability to",
    "start": "1590640",
    "end": "1597039"
  },
  {
    "text": "interface with some sort of backing store or KV functionality in order to introduce State into your code Into Your",
    "start": "1597039",
    "end": "1604000"
  },
  {
    "text": "Logic uh so we want to build upon the foundation the original foundations of Wy which allowed us to have a system",
    "start": "1604000",
    "end": "1609440"
  },
  {
    "text": "interface to safely expose host resources to a web assembly module um",
    "start": "1609440",
    "end": "1615320"
  },
  {
    "text": "like looking at some of the earlier work like Wy Rando or uh random sorry Wy",
    "start": "1615320",
    "end": "1622080"
  },
  {
    "text": "FS um we're kind of big building off of those basic system capabilities being",
    "start": "1622080",
    "end": "1628360"
  },
  {
    "text": "able to access safely system resources and we're leveling those up towards Cloud native architectures as well",
    "start": "1628360",
    "end": "1636360"
  },
  {
    "text": "um maybe you care less about programming for a specific database like post right you just need access to a stateful",
    "start": "1636360",
    "end": "1642799"
  },
  {
    "text": "backing store uh you've got some sort of shim and you're programming for the Wy SQL inter face you can plug that in and",
    "start": "1642799",
    "end": "1649559"
  },
  {
    "text": "it can work in a variety of these different environments independent of the backing provider so the point I want to highlight here is just that this is",
    "start": "1649559",
    "end": "1656600"
  },
  {
    "text": "what's going to allow kubernetes to work across these different did I just say kubernetes this is what's going to allow",
    "start": "1656600",
    "end": "1661880"
  },
  {
    "text": "web assembly to operate across uh these different uh compute environments uh not",
    "start": "1661880",
    "end": "1668399"
  },
  {
    "text": "just in terms of raw system capabil capabilities like random numbers you know these very coarse posic style",
    "start": "1668399",
    "end": "1675080"
  },
  {
    "text": "system capabilities but higher level cloud native capabilities or application Level capabilities as",
    "start": "1675080",
    "end": "1682440"
  },
  {
    "text": "well okay we get to the good part now let's talk through some actual use cases",
    "start": "1682760",
    "end": "1687799"
  },
  {
    "text": "uh I think this will help people start thinking about why shifting compute makes sense uh my colleague Colin Murphy",
    "start": "1687799",
    "end": "1695600"
  },
  {
    "text": "gave this example at WM day EU in 2022 of the background removal service it's a",
    "start": "1695600",
    "end": "1701640"
  },
  {
    "text": "very simple concept you got an image here in this case it's a signature and you remove the background",
    "start": "1701640",
    "end": "1708559"
  },
  {
    "text": "of it and that's it I'm sure everyone in this room has probably utilized some sort of capability like this in some",
    "start": "1708559",
    "end": "1714240"
  },
  {
    "text": "product at some point in their lives this is traditionally for us capability that's provided by a Java service that",
    "start": "1714240",
    "end": "1720799"
  },
  {
    "text": "looks very much like the one I described earlier so now if we were to go back and take the actual function that does the",
    "start": "1720799",
    "end": "1726399"
  },
  {
    "text": "image processing uh that does the background removal takes the io as input",
    "start": "1726399",
    "end": "1732039"
  },
  {
    "text": "transforms it you know performs some sort of operations on it sends the output back to the the user for further",
    "start": "1732039",
    "end": "1738279"
  },
  {
    "text": "use let's say super super position on top of a PowerPoint slide uh let's build",
    "start": "1738279",
    "end": "1743880"
  },
  {
    "text": "the code that does that function as a web assembly model module in the first place so so the first step for that",
    "start": "1743880",
    "end": "1750919"
  },
  {
    "text": "looks something kind of like this uh logical answer is let's run this",
    "start": "1750919",
    "end": "1757039"
  },
  {
    "text": "Logic on the client side we can do this in a web browser we can do this within a desktop product uh using some sort of",
    "start": "1757039",
    "end": "1763240"
  },
  {
    "text": "embedding engine for web assembly there are also ways to do this on mobile um",
    "start": "1763240",
    "end": "1768559"
  },
  {
    "text": "these are really cheap compute devices thus the green box in terms of cloud spend so um maybe instead of running",
    "start": "1768559",
    "end": "1775080"
  },
  {
    "text": "this back in a server-based environment maybe instead of running a service for this we run this on the client device itself shifting that compute closer to",
    "start": "1775080",
    "end": "1781480"
  },
  {
    "text": "where the data is because uh the image itself is probably in some sort of local store local",
    "start": "1781480",
    "end": "1787640"
  },
  {
    "text": "cache well maybe you're power constrained maybe you need online functionality for further",
    "start": "1787640",
    "end": "1793559"
  },
  {
    "text": "processing you can run the same code on the edge through things like wasm cloud or other Edge provider specific",
    "start": "1793559",
    "end": "1799320"
  },
  {
    "text": "implementations you don't need a full featured server uh a constrained compute environment will work but it's less",
    "start": "1799320",
    "end": "1806360"
  },
  {
    "text": "constrained than the the free environment that's running on the mobile device but maybe very low power uh",
    "start": "1806360",
    "end": "1812919"
  },
  {
    "text": "you've got pretty fast Ingress pretty pretty cheap egress as well uh lower latency than going back to the",
    "start": "1812919",
    "end": "1818080"
  },
  {
    "text": "server-based environment so you're still running pretty close to the user you've offloaded that compute so you've exchanged that runtime cost for a",
    "start": "1818080",
    "end": "1825200"
  },
  {
    "text": "network cost and and ass Network latency uh which whether that's whether that's a",
    "start": "1825200",
    "end": "1831720"
  },
  {
    "text": "bad thing or not for you really depends on the application depends on the use case there still might be some reason to",
    "start": "1831720",
    "end": "1837720"
  },
  {
    "text": "run this in a data center as well uh to run this within kubernetes you can run this as part of a native application but",
    "start": "1837720",
    "end": "1843799"
  },
  {
    "text": "the real power comes when you're able to run that same background removal function as a web assembly module within",
    "start": "1843799",
    "end": "1849679"
  },
  {
    "text": "kubernetes as well using that same core common code base uh the developer",
    "start": "1849679",
    "end": "1854960"
  },
  {
    "text": "experience is great because you don't really care about where the code is running and that takes us back to the very original",
    "start": "1854960",
    "end": "1860799"
  },
  {
    "text": "points of the talk right that's one of the original design goals behind all these systems is being able to to",
    "start": "1860799",
    "end": "1866360"
  },
  {
    "text": "abstract away the underlying compute Hardware",
    "start": "1866360",
    "end": "1872000"
  },
  {
    "text": "um why would we do this in the in in the backend though well maybe you need the transformed image for for further",
    "start": "1872679",
    "end": "1878440"
  },
  {
    "text": "operations maybe you synchronously need to update a document store because someone else is depending on that data",
    "start": "1878440",
    "end": "1884480"
  },
  {
    "text": "uh maybe you're composing a stack of these single images into an ml model there's all sorts of different use cases",
    "start": "1884480",
    "end": "1889960"
  },
  {
    "text": "so uh in that case the data residency to the back end to where those more powerful models live is more important",
    "start": "1889960",
    "end": "1897240"
  },
  {
    "text": "than the data residency locally and therefore the network cost makes sense there's no right or wrong answer",
    "start": "1897240",
    "end": "1903639"
  },
  {
    "text": "to the question of where do I run this code but web assembly allows us to choose the best place to run it and to",
    "start": "1903639",
    "end": "1910080"
  },
  {
    "text": "have that Universal compute engine uh based off the actual product use",
    "start": "1910080",
    "end": "1916120"
  },
  {
    "text": "case let's go to a bit more of a complex example uh I personally love this one",
    "start": "1916159",
    "end": "1922880"
  },
  {
    "text": "not only because it's code I wrote but also because it's uh it introduces the concept of programmatic and",
    "start": "1922880",
    "end": "1928559"
  },
  {
    "text": "decision-based scheduling this is an example that I gave at wasm iio uh earlier this year about how to use WM to",
    "start": "1928559",
    "end": "1935559"
  },
  {
    "text": "optimize your data so there's often large chunks of data that are generated through some",
    "start": "1935559",
    "end": "1940799"
  },
  {
    "text": "sort of vector processing in this case we're going to use 3D models uh as an",
    "start": "1940799",
    "end": "1945840"
  },
  {
    "text": "example so you could replace the output 3D model with the set of instructions",
    "start": "1945840",
    "end": "1951000"
  },
  {
    "text": "that are used to generate that 3D model in the first place in this case geometry operations uh and you can represent",
    "start": "1951000",
    "end": "1958039"
  },
  {
    "text": "those instructions through a formal grammar so here's an example on the too",
    "start": "1958039",
    "end": "1963279"
  },
  {
    "text": "small to actually read but take my word for it there's an example on the right it's just a formal grammar that's been transpiled in C++ can be compiled down",
    "start": "1963279",
    "end": "1970559"
  },
  {
    "text": "into a web assembly module that when you run the entry point of that function is going to actually generate the output",
    "start": "1970559",
    "end": "1976480"
  },
  {
    "text": "it's going to generate the data this is super valuable because then you can shift uh from before where you",
    "start": "1976480",
    "end": "1984240"
  },
  {
    "text": "might be streaming let's say from some sort of centralized data center a very large data set uh you can shift that uh",
    "start": "1984240",
    "end": "1992720"
  },
  {
    "text": "to the client device or you can run that on the edge or or you can run that generation Step at runtime save some of",
    "start": "1992720",
    "end": "1998720"
  },
  {
    "text": "that bandwidth for transferring you know what could be a huge binary object um and save some of that latency as well",
    "start": "1998720",
    "end": "2005080"
  },
  {
    "text": "while exchanging that for a runtime cost it's almost the opposite of the previous",
    "start": "2005080",
    "end": "2010320"
  },
  {
    "text": "example so let's let's missed a few bullet points let's let's uh let's see",
    "start": "2010320",
    "end": "2017000"
  },
  {
    "text": "what this looks like in practice so on the client side you've got a uh Graphics",
    "start": "2017000",
    "end": "2022039"
  },
  {
    "text": "engine hooked up to a GPU doesn't really matter which one so it's going to uh determine that data is non-resident and",
    "start": "2022039",
    "end": "2028960"
  },
  {
    "text": "it's going to need to make a network call out to get that data um why I mean",
    "start": "2028960",
    "end": "2035639"
  },
  {
    "text": "we've all played video games where that is not necessary you got everything install in your device locally but think",
    "start": "2035639",
    "end": "2041919"
  },
  {
    "text": "of think of a larger example think of something like a map you couldn't store a high resolution map of the entire",
    "start": "2041919",
    "end": "2047919"
  },
  {
    "text": "world on your cell phone that would be a a pretty silly idea and so there's always going to be use cases where we",
    "start": "2047919",
    "end": "2053158"
  },
  {
    "text": "need higher resolution data where that's not present on a local device so we're going to call out and in this case this",
    "start": "2053159",
    "end": "2058638"
  },
  {
    "text": "going to be two box architecture we're going to call out to the edge for that and that's running some sort of service",
    "start": "2058639",
    "end": "2064079"
  },
  {
    "text": "that can respond with with graphics and that's service then has a important decision to make well first it has to",
    "start": "2064079",
    "end": "2070398"
  },
  {
    "text": "check to see if the DAT is in cash locally and if not it has to make sure the cash is hydrated how that cache gets hydrated isn't super important for this",
    "start": "2070399",
    "end": "2077079"
  },
  {
    "text": "example so assuming that data is resident what do we do do we send the um",
    "start": "2077079",
    "end": "2083079"
  },
  {
    "text": "procedural instructions do we send the grammar back to the user back to the inpoint device and then run that",
    "start": "2083079",
    "end": "2088760"
  },
  {
    "text": "generation locally or do we s or do we run that generation step on the edge and",
    "start": "2088760",
    "end": "2093839"
  },
  {
    "text": "send the generated model to the user so for one one we're introducing runtime compute at the edge for the other we're",
    "start": "2093839",
    "end": "2099720"
  },
  {
    "text": "trans we're exchanging that for Network bandwidth and the answer is you can do",
    "start": "2099720",
    "end": "2106440"
  },
  {
    "text": "either and there's different use cases for doing either let's say you got three",
    "start": "2106440",
    "end": "2112079"
  },
  {
    "text": "users that are geolocated within each other and uh in some sort of shared immersive experience and so therefore",
    "start": "2112079",
    "end": "2118880"
  },
  {
    "text": "they're requesting the same tiles repeatedly in that case your code can determine that it's getting cash hits",
    "start": "2118880",
    "end": "2126320"
  },
  {
    "text": "it's getting very frequent cach hits for the same data it probably makes sense to generate it once on the edge and not",
    "start": "2126320",
    "end": "2133400"
  },
  {
    "text": "have to run that generation 10 times very frequently and send the actual uh data itself to the user um maybe the",
    "start": "2133400",
    "end": "2141400"
  },
  {
    "text": "user is running a very powerful device and you can measure that through some sort of empirical data uh in that case",
    "start": "2141400",
    "end": "2147160"
  },
  {
    "text": "maybe it makes sense to uh send send the the grammar to the user and not cach the",
    "start": "2147160",
    "end": "2152680"
  },
  {
    "text": "generated output on the edge there's a lot of different cases for this and you might want to actually make a a",
    "start": "2152680",
    "end": "2157960"
  },
  {
    "text": "programmatic runtime decision to decide which scheduling case makes the most",
    "start": "2157960",
    "end": "2163359"
  },
  {
    "text": "sense but the end result is the same either we send the generated model to the user or we send the grammar to the",
    "start": "2163359",
    "end": "2169119"
  },
  {
    "text": "user generate the model either way it gets uploaded to that device's GPU and then you see an output that looks",
    "start": "2169119",
    "end": "2174720"
  },
  {
    "text": "something like that and the whole process starts all over again so there's no right or wrong answer as to where to",
    "start": "2174720",
    "end": "2181560"
  },
  {
    "text": "run your code but what's important is the generation for this is written in web assembly it can run uh on a wasm",
    "start": "2181560",
    "end": "2189119"
  },
  {
    "text": "Time based runtime wherever that can live be it on the edge be it on the client be on the",
    "start": "2189119",
    "end": "2195680"
  },
  {
    "text": "server last example uh this is also interesting because this is a very hot architectural topic these days how to do",
    "start": "2196760",
    "end": "2204599"
  },
  {
    "text": "machine learning inferencing on the edge uh this is very important topic for a",
    "start": "2204599",
    "end": "2209760"
  },
  {
    "text": "lot of applications and in this case I'm going to use the example of user Impressions so let's say a user does a",
    "start": "2209760",
    "end": "2215359"
  },
  {
    "text": "thing uh in a browser doesn't really matter what kind of client uh and you want to personalize that user's",
    "start": "2215359",
    "end": "2221040"
  },
  {
    "text": "experience based off of some data that we know about the user uh so instead of",
    "start": "2221040",
    "end": "2227560"
  },
  {
    "text": "sending that data all the way back to your data center identify who that user is based off of their the metrics that",
    "start": "2227560",
    "end": "2233560"
  },
  {
    "text": "are passed in from the client and personalize that experience um you can",
    "start": "2233560",
    "end": "2238720"
  },
  {
    "text": "look up that profile and run that inference model thought I had Outlook stopped I",
    "start": "2238720",
    "end": "2245119"
  },
  {
    "text": "apologize for that um you can run that inference model at the edge instead and this is becoming a pretty common pattern",
    "start": "2245119",
    "end": "2252040"
  },
  {
    "text": "and so uh you'd send those results that personalization step back to the user for immediate use after running the",
    "start": "2252040",
    "end": "2258200"
  },
  {
    "text": "inferencing on the edge and then you'd pass it back to the data center to allow further training or further processing",
    "start": "2258200",
    "end": "2264240"
  },
  {
    "text": "of that data let's let's describe this system in terms of capabilities as a user you do a",
    "start": "2264240",
    "end": "2271560"
  },
  {
    "text": "thing doesn't really matter what the thing is really uh it hits the Ingress",
    "start": "2271560",
    "end": "2276599"
  },
  {
    "text": "PR for the edge and you get got a profile service that's just looking up to see if I have uh data in the edge",
    "start": "2276599",
    "end": "2282880"
  },
  {
    "text": "cache if I have information uh if you do it can connect the user to their model and it can run that inferencing model uh",
    "start": "2282880",
    "end": "2290079"
  },
  {
    "text": "using tools from ay on the edge um if it's not in the cache that's fine",
    "start": "2290079",
    "end": "2296680"
  },
  {
    "text": "we can asynchronously well in this case somewhat synchronously still communicate with the data center run that same",
    "start": "2296680",
    "end": "2302480"
  },
  {
    "text": "profile service written in web assembly running in the back and kubernetes as well uh",
    "start": "2302480",
    "end": "2308560"
  },
  {
    "text": "you can run that same profile service but hook it up to a database instead in that case you can then uh hydrate the",
    "start": "2308560",
    "end": "2315079"
  },
  {
    "text": "cache and the edge send the data back to the user so uh you know this is kind of",
    "start": "2315079",
    "end": "2320400"
  },
  {
    "text": "the classic case for for caching um that but the idea is to get as much",
    "start": "2320400",
    "end": "2326800"
  },
  {
    "text": "of the information to to the edge note as possible uh and still utilizing the backing capabilities could be for",
    "start": "2326800",
    "end": "2332880"
  },
  {
    "text": "further retraining you know data scientists seem to always TW their models there's always going to be updates to model as",
    "start": "2332880",
    "end": "2339800"
  },
  {
    "text": "well uh we still have we still have a need for that data center but we're able to write chunks of code and write modules that run regardless of the",
    "start": "2339800",
    "end": "2346400"
  },
  {
    "text": "underlying host architecture speed up the overall application maybe even reducing cost as well this gives a high",
    "start": "2346400",
    "end": "2352839"
  },
  {
    "text": "performance user experience increases the flexibility of the code to run in the place that makes the most sense",
    "start": "2352839",
    "end": "2358200"
  },
  {
    "text": "given that data locality so three examples maybe they've",
    "start": "2358200",
    "end": "2364319"
  },
  {
    "text": "resonated with people maybe not depending on your architectural in your in your systems uh but as an architect",
    "start": "2364319",
    "end": "2370319"
  },
  {
    "text": "as a developer you probably have a lot of questions like where do I run my thing uh my first answer is build the",
    "start": "2370319",
    "end": "2378480"
  },
  {
    "text": "code for for Run Anywhere build the code for web assembly by default um you will",
    "start": "2378480",
    "end": "2383760"
  },
  {
    "text": "probably pay a higher price for doing that especially in certain languages than you might for just deploying it in",
    "start": "2383760",
    "end": "2390200"
  },
  {
    "text": "a container or deploying a native you know I'm not here to to claim that you know you're automatically going to be",
    "start": "2390200",
    "end": "2395280"
  },
  {
    "text": "able to build everything for web assembly and and it's going to work super well the first time uh but pay pay",
    "start": "2395280",
    "end": "2400680"
  },
  {
    "text": "that slightly higher price get it working in web assembly test it and make sure you have the capabilities to run it",
    "start": "2400680",
    "end": "2405960"
  },
  {
    "text": "everywhere first utilize Wy utilize some of the wasi upcoming Wy Cloud capabilities uh to unlock being able to",
    "start": "2405960",
    "end": "2413119"
  },
  {
    "text": "run it in different locations at runtime consider what matters most to your business are you optimizing for",
    "start": "2413119",
    "end": "2419400"
  },
  {
    "text": "total cost are you optimizing for user experience uh do you need fail safe",
    "start": "2419400",
    "end": "2425040"
  },
  {
    "text": "levels of reliability there's no right or wrong answers here it's all about what matters to the application itself",
    "start": "2425040",
    "end": "2431079"
  },
  {
    "text": "and then consider not just the cost but the cost of performance when you need",
    "start": "2431079",
    "end": "2436119"
  },
  {
    "text": "that those additional levels uh sometimes you'll pay a financial premium in order to have a better user",
    "start": "2436119",
    "end": "2441960"
  },
  {
    "text": "experience sometimes you can tolerate a slightly degraded experience in order to keep your product margins uh and this",
    "start": "2441960",
    "end": "2448920"
  },
  {
    "text": "leads these kinds of decisions lead us to kind of three different categories or or or",
    "start": "2448920",
    "end": "2454119"
  },
  {
    "text": "buckets the cheapest way to run things obviously uh is to run it side by side",
    "start": "2454119",
    "end": "2459839"
  },
  {
    "text": "with your data so there's no latency um you can run totally",
    "start": "2459839",
    "end": "2465040"
  },
  {
    "text": "distributed compute uh based off of lowest L latency as well that that's an extreme example completely private",
    "start": "2465040",
    "end": "2471839"
  },
  {
    "text": "networks not going over public internet as all at all those are going to be the cheapest and the fastest way to do",
    "start": "2471839",
    "end": "2477680"
  },
  {
    "text": "things so how many applications can squarely fit in that green box probably",
    "start": "2477680",
    "end": "2483440"
  },
  {
    "text": "very few things of actual substance um you know there's there's there's other",
    "start": "2483440",
    "end": "2489400"
  },
  {
    "text": "options as well right do I do I exchange some of that cheap compute for runtime Compu and by runtime I mean online I",
    "start": "2489400",
    "end": "2495920"
  },
  {
    "text": "mean at an edge or a cloud provider um can I use methods that reduce latency",
    "start": "2495920",
    "end": "2501359"
  },
  {
    "text": "can I shop around for the cheapest egress uh can I uh shift computer",
    "start": "2501359",
    "end": "2509440"
  },
  {
    "text": "around um sometimes you need heavier capabilities uh database to Edge",
    "start": "2509440",
    "end": "2515400"
  },
  {
    "text": "replication is is a cost and is expensive and and as outlined earlier if you are moving everything from your",
    "start": "2515400",
    "end": "2521839"
  },
  {
    "text": "database to Edge does the edge really make sense does it really provide that much value U maybe maybe not I I",
    "start": "2521839",
    "end": "2529200"
  },
  {
    "text": "personally don't think so um if you're running a batch process though right maybe maybe roundtrip latency doesn't",
    "start": "2529200",
    "end": "2535880"
  },
  {
    "text": "matter right and so that's that's a good example of I'm doing AC inous offline processing and exchanging that uh",
    "start": "2535880",
    "end": "2543440"
  },
  {
    "text": "runtime cost this I think this is just kind of a heuristic framework for how people",
    "start": "2543440",
    "end": "2548640"
  },
  {
    "text": "should be thinking about where to run their code nothing's going to squarely fall in one of these boxes but for this application pick out the individual",
    "start": "2548640",
    "end": "2555839"
  },
  {
    "text": "items that matter to you and lastly this this leads us to the",
    "start": "2555839",
    "end": "2562480"
  },
  {
    "text": "concept of dynamic scheduling uh somewhat of of what I",
    "start": "2562480",
    "end": "2568000"
  },
  {
    "text": "described is some of what I just described is necessary at design time but I think the real power of web",
    "start": "2568000",
    "end": "2573160"
  },
  {
    "text": "assembly is Unleashed by shipping your code everywhere uh by building for web assembly by default abstracting away",
    "start": "2573160",
    "end": "2579760"
  },
  {
    "text": "your dependencies through Wy cloud and being able to ship your code all these different form factors which is going to",
    "start": "2579760",
    "end": "2585960"
  },
  {
    "text": "enable you to do make some of these decisions automatically uh shift that compute around dynamically at runtime uh",
    "start": "2585960",
    "end": "2593160"
  },
  {
    "text": "depending upon metrics and measured weights uh these weights can be Set uh",
    "start": "2593160",
    "end": "2599680"
  },
  {
    "text": "for what matters to your business and so things like execution time uh you can run high high resolution timers and you",
    "start": "2599680",
    "end": "2605760"
  },
  {
    "text": "can meure things you can say here's the performance of this device as measured in real time you can measure peing you",
    "start": "2605760",
    "end": "2611040"
  },
  {
    "text": "can measure latency I'm sure everyone here has played a game where it starts lagging and then it gets better when the",
    "start": "2611040",
    "end": "2616359"
  },
  {
    "text": "runtime switches you to a different multiplayer server um you can do these",
    "start": "2616359",
    "end": "2621480"
  },
  {
    "text": "same techniques within your code as well but you have to wait it according to your applications business metrics some costs can be measured",
    "start": "2621480",
    "end": "2630079"
  },
  {
    "text": "uh and then I want to leave with this uh I think a dynamic scheduling framework",
    "start": "2630079",
    "end": "2635559"
  },
  {
    "text": "can be built this is a minimization problem this is a basic set of components I would consider you can use",
    "start": "2635559",
    "end": "2641160"
  },
  {
    "text": "your own comp components this is not just designed to be an exhaustive list but some of the factors I've seen that are common across application",
    "start": "2641160",
    "end": "2647480"
  },
  {
    "text": "architectures um let's let's say device CPU I Define this as the sum of the CPU",
    "start": "2647480",
    "end": "2654960"
  },
  {
    "text": "nanc times that weight times that weighted business cost like I said for uh realtime applications uh every nanc",
    "start": "2654960",
    "end": "2662800"
  },
  {
    "text": "counts so you're going to want to assign a higher cost to that your Edge costs which I Define as the",
    "start": "2662800",
    "end": "2668640"
  },
  {
    "text": "sum of your resources running on the edge times whatever rate that that edge provider is charging you times your Edge",
    "start": "2668640",
    "end": "2675079"
  },
  {
    "text": "accuracy which really this should be inverse Edge accuracy but essentially um",
    "start": "2675079",
    "end": "2681119"
  },
  {
    "text": "what is your hit rate on your cach in your Edge do you need to go back to the data center every time if so adding The",
    "start": "2681119",
    "end": "2686559"
  },
  {
    "text": "Edge is infinitely more expensive your storage cost which is your storage weight times your bytes and",
    "start": "2686559",
    "end": "2692960"
  },
  {
    "text": "whatever rate you're paying for that uh plus any cost of replication if you're duplicating data in multiple",
    "start": "2692960",
    "end": "2698400"
  },
  {
    "text": "environments you've got multiple data charges uh and um while subtracting any",
    "start": "2698400",
    "end": "2705520"
  },
  {
    "text": "D duplicated data maybe you can move it from the back end to the edge and it stays in the edge and and it's uh data",
    "start": "2705520",
    "end": "2712319"
  },
  {
    "text": "that isn't necessary to keep in cold storage for an example latency uh which is just the sum",
    "start": "2712319",
    "end": "2718040"
  },
  {
    "text": "of the of your providers I say latency plus a factor because some types of latency are better than others some are",
    "start": "2718040",
    "end": "2725559"
  },
  {
    "text": "built in like if you need to communicate to a database on Local Host uh always that is a very defined factor and that",
    "start": "2725559",
    "end": "2731960"
  },
  {
    "text": "is something that you're always going to have to do and so maybe you don't want to factor that in your application but maybe if you're moving compute I need to",
    "start": "2731960",
    "end": "2738040"
  },
  {
    "text": "pull something from a data center in China while I'm here in New York well that's going to be an extremely expensive Factor uh and so we want to",
    "start": "2738040",
    "end": "2745040"
  },
  {
    "text": "weit that heavier uh I call this kubernetes compute really this is just your data",
    "start": "2745040",
    "end": "2750240"
  },
  {
    "text": "center compute but like I said I think probably everyone's running kubernetes at this point the some of your resources",
    "start": "2750240",
    "end": "2755680"
  },
  {
    "text": "Plus plus the overhead remember our compute graph shape we're mapping uh",
    "start": "2755680",
    "end": "2760880"
  },
  {
    "text": "client services to to backing nodes times the inverse of that edge accuracy yeah so I guess I got it right here so",
    "start": "2760880",
    "end": "2767640"
  },
  {
    "text": "so if so whatever the remaining is from between your your Edge and your and your backend compute that's going to factor",
    "start": "2767640",
    "end": "2773480"
  },
  {
    "text": "higher on your back end and then last obviously the egress cost uh which I Define as the weight times the the sum",
    "start": "2773480",
    "end": "2780440"
  },
  {
    "text": "of the across your different providers across every single hop the sum of your btes times your rate that's luckily a",
    "start": "2780440",
    "end": "2786079"
  },
  {
    "text": "pretty easy one to to measure and Define um and this results in the cost",
    "start": "2786079",
    "end": "2793319"
  },
  {
    "text": "of of performance you want to minimize this cost uh this is not intended to be",
    "start": "2793319",
    "end": "2798920"
  },
  {
    "text": "exhaustive list you can Define your own resources these are what works for",
    "start": "2798920",
    "end": "2804559"
  },
  {
    "text": "us all right so this takes us back to our original thesis original topic of the talk what is web assembly sorry what",
    "start": "2804559",
    "end": "2811480"
  },
  {
    "text": "is universal compute good for uh We've defined Universal compute",
    "start": "2811480",
    "end": "2817040"
  },
  {
    "text": "is using web assembly to write your code once and run it everywhere on a plethora of form factors you can bring your code",
    "start": "2817040",
    "end": "2823079"
  },
  {
    "text": "closer to where the data lives maybe the the data that's important is on the back end maybe it's on the user side and you",
    "start": "2823079",
    "end": "2828800"
  },
  {
    "text": "want to shift that computer around to match the cardinality of your data you've got to make sure that the the",
    "start": "2828800",
    "end": "2834200"
  },
  {
    "text": "data itself uh when you do have it resident you have to move it sorry you",
    "start": "2834200",
    "end": "2839440"
  },
  {
    "text": "have to move your code closest to that use case for the data which is often where your user is and through",
    "start": "2839440",
    "end": "2844839"
  },
  {
    "text": "techniques like Edge in uh you can minimize that cost so build your code for web assembly",
    "start": "2844839",
    "end": "2852640"
  },
  {
    "text": "it's the enabler of being able to run your code uh without assuming a runtime environment through tools like Wy and",
    "start": "2852640",
    "end": "2858760"
  },
  {
    "text": "wasy Cloud Outsource your uh scheduling decisions to a minimum set of heuristics that uh matter to your application and",
    "start": "2858760",
    "end": "2866359"
  },
  {
    "text": "consider actually a writing code that allows you to pick the best path and the best runtime environment",
    "start": "2866359",
    "end": "2872079"
  },
  {
    "text": "itself I think the future for web assembly as a compute engine is extremely bright and I'm excited about",
    "start": "2872079",
    "end": "2877559"
  },
  {
    "text": "all the possibilities that Universal compute is going to bring to drive down costs increase performance and give us",
    "start": "2877559",
    "end": "2883920"
  },
  {
    "text": "the best user experience for the next set and next generation of applications that's it thank",
    "start": "2883920",
    "end": "2891680"
  },
  {
    "text": "[Music]",
    "start": "2896210",
    "end": "2901659"
  },
  {
    "text": "you",
    "start": "2901880",
    "end": "2904880"
  }
]