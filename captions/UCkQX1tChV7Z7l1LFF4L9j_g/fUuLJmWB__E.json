[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "18840"
  },
  {
    "text": "so guys I'm uh I'm Matias I'm the original author and lead developer of spray and I'm uh glad to be having the",
    "start": "18840",
    "end": "26560"
  },
  {
    "text": "opportunity today to introduce you to the project in this talk I've got quite a lot of material to cover so I hope",
    "start": "26560",
    "end": "31840"
  },
  {
    "text": "we'll get to some questions at the end if not feel free to approach me at any time I'm going to be around today and tomorrow as well um yeah let's Dive",
    "start": "31840",
    "end": "39960"
  },
  {
    "text": "Right In what is spray how many of you have actually had anything to do with spray so",
    "start": "39960",
    "end": "46000"
  },
  {
    "text": "far excellent excellent cool so we call it a suite of libraries for building and",
    "start": "46000",
    "end": "51960"
  },
  {
    "start": "48000",
    "end": "132000"
  },
  {
    "text": "consuming restful web services on top of AKA says it all actually um it was first",
    "start": "51960",
    "end": "57719"
  },
  {
    "text": "released about a year ago uh right after the AKA 1.0 release and we needed it for",
    "start": "57719",
    "end": "63160"
  },
  {
    "text": "our own purposes because we had a AKA 1.0 uh application that needed to go",
    "start": "63160",
    "end": "69600"
  },
  {
    "text": "into production in summer last year and we were looking around for something like spray couldn't find anything and",
    "start": "69600",
    "end": "74880"
  },
  {
    "text": "just basically started to scratch our own itch like so many libraries and uh",
    "start": "74880",
    "end": "80240"
  },
  {
    "text": "here we are a year later um four releases later and we're quite happy with the reception and the um positive",
    "start": "80240",
    "end": "86799"
  },
  {
    "text": "reactions we got so far so there are few principle principles that um guide our",
    "start": "86799",
    "end": "92520"
  },
  {
    "text": "development here first we want something that's lightweight right lightweight few dependencies it's buil on AA so it's",
    "start": "92520",
    "end": "98920"
  },
  {
    "text": "fully asynchronous non-blocking actor based that's it um we wanted to have it",
    "start": "98920",
    "end": "104640"
  },
  {
    "text": "modular that's why it's a sweet of libraries because we want you to only depend on the ones that you actually",
    "start": "104640",
    "end": "109960"
  },
  {
    "text": "need and not just pull in a huge block of Monolithic something right and of course it needs to be",
    "start": "109960",
    "end": "116000"
  },
  {
    "text": "testable um our philosophy it's it's a library rather than a framework right",
    "start": "116000",
    "end": "121119"
  },
  {
    "text": "initially we weren't quite clear on that distinction but we have eradicated all mentioning of the words framework from",
    "start": "121119",
    "end": "126360"
  },
  {
    "text": "documentation just to make this clear we're going to get to that a little bit",
    "start": "126360",
    "end": "132080"
  },
  {
    "start": "132000",
    "end": "234000"
  },
  {
    "text": "so uh as a suite it contains of a few components one of uh one of the important ones is it's got a rich",
    "start": "132080",
    "end": "137879"
  },
  {
    "text": "immutable HTTP model which is actually based on the one by the blue eyes team",
    "start": "137879",
    "end": "143879"
  },
  {
    "text": "uh so kudos to the blue eyes team for letting us use that and um and starting",
    "start": "143879",
    "end": "149200"
  },
  {
    "text": "this because it's it's great um it has one component the central component of this torque which is spray server which",
    "start": "149200",
    "end": "155920"
  },
  {
    "text": "is a DSL for the server side construction of rest apis there's also a complimentary HTTP",
    "start": "155920",
    "end": "163840"
  },
  {
    "text": "client which works with the same model with the same abstractions and uh it's actually quite",
    "start": "163840",
    "end": "169879"
  },
  {
    "text": "nice in many situations when you have a client as well as a server um working",
    "start": "169879",
    "end": "175159"
  },
  {
    "text": "with the same things because it makes lots of things easier like proxying or and a few things maybe we get to one",
    "start": "175159",
    "end": "181280"
  },
  {
    "text": "example later on in the talk there's also something that we didn't have from the beginning on which is called spray",
    "start": "181280",
    "end": "186920"
  },
  {
    "text": "can it's a very thin layer um no dependencies HTTP server um also built",
    "start": "186920",
    "end": "193159"
  },
  {
    "text": "on AA as the only dependency apart from Scala uh what this gives you is",
    "start": "193159",
    "end": "199159"
  },
  {
    "text": "basically it lets you use spray with outside of an of an surfleet container and it gives you a nice few other things",
    "start": "199159",
    "end": "206239"
  },
  {
    "text": "like um asynchronous response and request processing um which you can't do",
    "start": "206239",
    "end": "212120"
  },
  {
    "text": "with a suret container because the API doesn't support it and then finally there's uh yet another Scala Json",
    "start": "212120",
    "end": "219080"
  },
  {
    "text": "implementation that you can use there are many of them out there this one is type class based actually originated",
    "start": "219080",
    "end": "225040"
  },
  {
    "text": "from sjon that you might know it's very clean nothing much to say that actually doesn't depend on AKA as the only",
    "start": "225040",
    "end": "230840"
  },
  {
    "text": "component so let's double click on spray server that's basically as I said it",
    "start": "230840",
    "end": "236360"
  },
  {
    "text": "runs on on surf containers or on spray can um the surf containers it supports are",
    "start": "236360",
    "end": "242480"
  },
  {
    "text": "basically all the 3.0 API compatible suret containers you can also use ji7 or Tom Kat 6 if you are",
    "start": "242480",
    "end": "250400"
  },
  {
    "text": "stuck on these old ones and still need to support them basically all we need is some way of",
    "start": "250400",
    "end": "257040"
  },
  {
    "text": "asynchronously processing the request um as I said it's the tool for",
    "start": "257040",
    "end": "262240"
  },
  {
    "text": "building a self-contained API ler we're going to get to that in a second what that means a central element is a",
    "start": "262240",
    "end": "267360"
  },
  {
    "text": "routing DSL for defining the behavior that you want want and the focus",
    "start": "267360",
    "end": "272680"
  },
  {
    "text": "is web apis not web gu right this is a clear distinction uh from the beginning",
    "start": "272680",
    "end": "279479"
  },
  {
    "text": "on it was clear we wanted to build something that you that is focused on the API side so we're not really we",
    "start": "279479",
    "end": "285560"
  },
  {
    "text": "don't really see spray as an as a as as in the same space as play or lift or",
    "start": "285560",
    "end": "291919"
  },
  {
    "text": "something just because it's um focused clearly on apis we're going to see that in a second when we talk about the basic",
    "start": "291919",
    "end": "299199"
  },
  {
    "start": "299000",
    "end": "470000"
  },
  {
    "text": "architecture that we were that we have in mind when you build something or we use spray like let's say you have an",
    "start": "299199",
    "end": "305560"
  },
  {
    "text": "application you have an application that you build has your build your business logic in there you buil it using the",
    "start": "305560",
    "end": "311160"
  },
  {
    "text": "tools that you want so you use your build tool your middleware layer probably AKA maybe not we don't affect",
    "start": "311160",
    "end": "319000"
  },
  {
    "text": "this way uh we we don't affect in any way how you build your application that's your application and it should be",
    "start": "319000",
    "end": "324680"
  },
  {
    "text": "in the way that you want it now say you want to put a rest API layer on the side",
    "start": "324680",
    "end": "330199"
  },
  {
    "text": "right so you want to somehow connect it with the rest of the world through an through a rest layer um I've drawn this",
    "start": "330199",
    "end": "336000"
  },
  {
    "text": "on the side on purpose Not underneath because we want we don't want you to get the notion that you build your",
    "start": "336000",
    "end": "341479"
  },
  {
    "text": "application on top of spray you don't you build your application on top of whatever you build your application and",
    "start": "341479",
    "end": "347160"
  },
  {
    "text": "you put in spray on the side so what happens when a request comes in this is",
    "start": "347160",
    "end": "352880"
  },
  {
    "text": "an actor message actually coming in from the surflo container or from spray can it hits the API layer and the API layer",
    "start": "352880",
    "end": "359319"
  },
  {
    "text": "is going going to probably in the interesting cases trigger some kind of action in your application this is also",
    "start": "359319",
    "end": "365280"
  },
  {
    "text": "a message now the key Point here is that this action is a domain object it should",
    "start": "365280",
    "end": "371039"
  },
  {
    "text": "be something that's def defined in the context of your application right it shouldn't be Json it shouldn't be XML it",
    "start": "371039",
    "end": "378599"
  },
  {
    "text": "shouldn't be something that's got anything to do with HTTP you define on the business level what this action is",
    "start": "378599",
    "end": "385919"
  },
  {
    "text": "and it's the the responsibility of the API layer to do this translation and lifting in the level of",
    "start": "385919",
    "end": "392720"
  },
  {
    "text": "abstraction right now when your application answers it's going to come back maybe it doesn't have to but",
    "start": "392720",
    "end": "399680"
  },
  {
    "text": "sometimes or many times it comes back with a reply and this deply reply as well is a domain object right and again it's the rest API",
    "start": "399680",
    "end": "407840"
  },
  {
    "text": "layer that actually then translates this down to an HTTP response so this is the",
    "start": "407840",
    "end": "412880"
  },
  {
    "text": "architecture that you have in have to have in mind when you when you want to build something cleanly the advant of",
    "start": "412880",
    "end": "420000"
  },
  {
    "text": "doing it this way is that your application is completely decoupled right and you can swap out should something better come along your your",
    "start": "420000",
    "end": "426919"
  },
  {
    "text": "API layer against unfiltered or blue eyes or whatever but your application",
    "start": "426919",
    "end": "432560"
  },
  {
    "text": "stands as it is contrast this with this with a web GUI application like a real",
    "start": "432560",
    "end": "438240"
  },
  {
    "text": "web application yeah what's what we that's what we mean when we talk about web applications you would be building it with play or lift or something but",
    "start": "438240",
    "end": "444599"
  },
  {
    "text": "you're going to be very tightly integrated with the framework that you use and it makes sense for play to be a",
    "start": "444599",
    "end": "450000"
  },
  {
    "text": "framework and give you much more structure than spray does because the",
    "start": "450000",
    "end": "455080"
  },
  {
    "text": "center point of your application if it's a web application is going to be the interface right here it's not your",
    "start": "455080",
    "end": "462000"
  },
  {
    "text": "application is some big service and this is just an API",
    "start": "462000",
    "end": "467720"
  },
  {
    "text": "layer so the API lay layer has certain responsibilities you want to",
    "start": "467720",
    "end": "474000"
  },
  {
    "start": "470000",
    "end": "569000"
  },
  {
    "text": "discriminate between different requests based on the HTTP method the path the query parameters the content of the uh",
    "start": "474000",
    "end": "481360"
  },
  {
    "text": "of the request and so on and obviously you need to treat one one request this",
    "start": "481360",
    "end": "487840"
  },
  {
    "text": "way and another one another way and this routing is something that's uh the responsibility of the API layer then as",
    "start": "487840",
    "end": "494199"
  },
  {
    "text": "I said you need to lift or decrease the level of abstraction by marshalling or unmarshaling um to and from your domain",
    "start": "494199",
    "end": "501680"
  },
  {
    "text": "objects encoding decoding compression is something that should happen in the API layer that your application shouldn't be",
    "start": "501680",
    "end": "507840"
  },
  {
    "text": "worried about uh auth tication is something that should be happening there maybe the API ler needs to talk to your",
    "start": "507840",
    "end": "514360"
  },
  {
    "text": "application to authenticate maybe it doesn't depends still it's uh it's",
    "start": "514360",
    "end": "519599"
  },
  {
    "text": "living in the API layer then you might you might want to do some caching you might want to serve a little bit of State content that should certainly be",
    "start": "519599",
    "end": "526320"
  },
  {
    "text": "possible if you have some documentation or something it's nice if you can do this and obviously since we're trying to",
    "start": "526320",
    "end": "532440"
  },
  {
    "text": "be restful here it's important that that the API layer supports you or does it",
    "start": "532440",
    "end": "537880"
  },
  {
    "text": "properly um the aror handling you want the right HTTP status uh eror codes come",
    "start": "537880",
    "end": "543600"
  },
  {
    "text": "coming back and since we're talking about an API you're going to have clients and in many cases",
    "start": "543600",
    "end": "549640"
  },
  {
    "text": "you might want to have a public API and your clients are going to be some kind of whatever consumers and having proper",
    "start": "549640",
    "end": "556279"
  },
  {
    "text": "error messages that really are helpful that tell the guys what went wrong and how to fix it is crucial in building a",
    "start": "556279",
    "end": "562480"
  },
  {
    "text": "product that's actually appealing to the outside so this is an important point now let's look an example of what",
    "start": "562480",
    "end": "570320"
  },
  {
    "start": "569000",
    "end": "604000"
  },
  {
    "text": "it might look like if you build something like a route or or some kind of API definition with spray this is",
    "start": "570320",
    "end": "577399"
  },
  {
    "text": "just a very simple example and without telling you much more of how exactly it works you should be able to figure out what happens here like it should be it's",
    "start": "577399",
    "end": "584360"
  },
  {
    "text": "quite readable you can see it right basically we have two different ways of completing",
    "start": "584360",
    "end": "590600"
  },
  {
    "text": "this request one for get request one for put requests and there's a certain path",
    "start": "590600",
    "end": "595920"
  },
  {
    "text": "that's going to be matched so it's very straightforward let's look at how this actually works so um a route is the",
    "start": "595920",
    "end": "604320"
  },
  {
    "start": "604000",
    "end": "674000"
  },
  {
    "text": "central point in spray and a route in spray is nothing but an alias for a function type which",
    "start": "604320",
    "end": "612360"
  },
  {
    "text": "is request context to unit now you might be wondering why this is unit and it doesn't return some kind of future right",
    "start": "612360",
    "end": "618959"
  },
  {
    "text": "you could think okay maybe it should return a future on a response if it's asynchronous that would certainly work as well what we decided to do here is um",
    "start": "618959",
    "end": "627560"
  },
  {
    "text": "to use the explicit continuation p passing style which is basically equivalent you can do most things that",
    "start": "627560",
    "end": "633800"
  },
  {
    "text": "you can do with with Futures in this way and the other way around there certain pros and cons the different uh choices",
    "start": "633800",
    "end": "639680"
  },
  {
    "text": "we consciously made the choice to go this way because it plays well with um actors and um if someone has more",
    "start": "639680",
    "end": "647000"
  },
  {
    "text": "questions on why we went this way I'm happy to take it offline and discuss it with you so the key Point here the key",
    "start": "647000",
    "end": "654240"
  },
  {
    "text": "object is the request context that you can see how you use it is basically it's",
    "start": "654240",
    "end": "659360"
  },
  {
    "text": "it's a it's a wrapper around the HTTP request and it gives you all kinds of additional functionality like complete",
    "start": "659360",
    "end": "666839"
  },
  {
    "text": "for example there are several overloads of a method called complete and um how you use it is the most simple route",
    "start": "666839",
    "end": "673959"
  },
  {
    "text": "would be this one you get the request context you call complete on it you're done basically when you call complete",
    "start": "673959",
    "end": "680519"
  },
  {
    "start": "674000",
    "end": "739000"
  },
  {
    "text": "this is going to set off a whole chain of closures and functions that are going to be executing all the logic that needs",
    "start": "680519",
    "end": "685880"
  },
  {
    "text": "to come after you applied your route this way to finally trigger the sending",
    "start": "685880",
    "end": "691000"
  },
  {
    "text": "out of the response to the client you can also write it this way if you want",
    "start": "691000",
    "end": "696399"
  },
  {
    "text": "or you can use something called a directive in spray which is a building",
    "start": "696399",
    "end": "701920"
  },
  {
    "text": "block in a route structure that is you know made up of all kinds of smaller uh",
    "start": "701920",
    "end": "707800"
  },
  {
    "text": "chunks to build some complex uh some complex Behavior so you could also just",
    "start": "707800",
    "end": "712839"
  },
  {
    "text": "say complete withd say hello something right and the complete width let's look at what it is it's very simple it",
    "start": "712839",
    "end": "719519"
  },
  {
    "text": "basically just calls complete on the request context and it also requires",
    "start": "719519",
    "end": "724800"
  },
  {
    "text": "that the type that you use for completion actually has a marshala associated with it that's type class",
    "start": "724800",
    "end": "731680"
  },
  {
    "text": "stuff that Seth just talked about right so let's go back to the example",
    "start": "731680",
    "end": "738639"
  },
  {
    "text": "and you know dissect it a little bit so the key point up here is the is the path",
    "start": "738639",
    "end": "744240"
  },
  {
    "start": "739000",
    "end": "1193000"
  },
  {
    "text": "directive it's also a directive right has a name and it has a number of arguments in this case it's a mini DSL",
    "start": "744240",
    "end": "751680"
  },
  {
    "text": "giving you a way of describing what kind of paths you want to match right so this is an order followed by some kind of in",
    "start": "751680",
    "end": "759519"
  },
  {
    "text": "like an INT number but in HEX notation so what it does it extracts something",
    "start": "759519",
    "end": "764760"
  },
  {
    "text": "right it extracts the thing that was matched here like the hex in number",
    "start": "764760",
    "end": "770440"
  },
  {
    "text": "extracts means it basically if a directive extract something it pulls out something from the request and makes it",
    "start": "770440",
    "end": "776800"
  },
  {
    "text": "available to the inner route which is something that you nest in there and",
    "start": "776800",
    "end": "782120"
  },
  {
    "text": "that can work then with whatever you extracted but it's itself again just another route so it's it's just um going",
    "start": "782120",
    "end": "791959"
  },
  {
    "text": "on like this uh deeper at deeper levels and you can Nest it arbitrarily deep as as you want so the inner route here",
    "start": "791959",
    "end": "798560"
  },
  {
    "text": "basically consists of two parts which are both routes again so you have the get directive and a put directive and",
    "start": "798560",
    "end": "806040"
  },
  {
    "text": "they just filter based on HTTP method and pass it on on to their inner route and so",
    "start": "806040",
    "end": "811120"
  },
  {
    "text": "on um and what happens when you shoot a put request into this structure is",
    "start": "811120",
    "end": "816920"
  },
  {
    "text": "basically the get directive is going to see it it's going to decide no this one doesn't fit my filter so I'm not going",
    "start": "816920",
    "end": "823480"
  },
  {
    "text": "to pass it on into my inner route I'm just going to reject it and this little",
    "start": "823480",
    "end": "829720"
  },
  {
    "text": "tier there the this operator basically just recovers from RE from rejections if",
    "start": "829720",
    "end": "835720"
  },
  {
    "text": "you want like if the first route doesn't want to handle this request then the next one chained in afterwards getss a",
    "start": "835720",
    "end": "841360"
  },
  {
    "text": "chance to do it if this one fits all good if it doesn't then the whole",
    "start": "841360",
    "end": "846440"
  },
  {
    "text": "request is going to fall through the whole structure and it's not going to be handled by this thing and spray is going",
    "start": "846440",
    "end": "851959"
  },
  {
    "text": "to take care that you there's going to be a proper error message going back to the client in this case if you shoot a",
    "start": "851959",
    "end": "857240"
  },
  {
    "text": "post request in there the client is going to see post doesn't work it's a 405 method not allowed error saying you",
    "start": "857240",
    "end": "864040"
  },
  {
    "text": "can only do gets and puts here right you don't have to do anything spray is all going to take care of proper error",
    "start": "864040",
    "end": "870240"
  },
  {
    "text": "messaging in this case so when we step back and look at this thing basically we",
    "start": "870240",
    "end": "875279"
  },
  {
    "text": "see the whole structure forms a tree right a tree of routes that go on deep",
    "start": "875279",
    "end": "881079"
  },
  {
    "text": "and that have several branches and a request flows through this structure in a depth first manner up until a level",
    "start": "881079",
    "end": "887000"
  },
  {
    "text": "where it gets either completed or rejected then it goes back and flows through the rest of the structure",
    "start": "887000",
    "end": "894839"
  },
  {
    "text": "right so what we saw there basically still",
    "start": "894839",
    "end": "901399"
  },
  {
    "text": "contained a little bit of repetition because it was in the get branch and in",
    "start": "901399",
    "end": "906680"
  },
  {
    "text": "the put grunch almost the same thing you can dry it up like this if you just put them together you can combine directives",
    "start": "906680",
    "end": "913160"
  },
  {
    "text": "with the or operator which gives you another directive having the combined",
    "start": "913160",
    "end": "918680"
  },
  {
    "text": "filter with an ore right so this is also going to work now we needed to change the inside of the rout a little bit",
    "start": "918680",
    "end": "924440"
  },
  {
    "text": "because we wanted to get the request method so you can not use the complete width but you just write it like this",
    "start": "924440",
    "end": "930480"
  },
  {
    "text": "and then the context give you the way to actually get to the method now what we can do here you can actually pull this",
    "start": "930480",
    "end": "937519"
  },
  {
    "text": "out now you can make your own directive called get or put which is a custom one that doesn't exist before hasn't exist",
    "start": "937519",
    "end": "944639"
  },
  {
    "text": "before and you can just use that one right so that gives you a way of",
    "start": "944639",
    "end": "950560"
  },
  {
    "text": "labeling preconfigured configurations of directives that Mak sense in your respect or in your uh in your",
    "start": "950560",
    "end": "956680"
  },
  {
    "text": "application and you can reuse it at several times so if you have like a long large construct you can just use get or",
    "start": "956680",
    "end": "962160"
  },
  {
    "text": "put if you wanted to now if you look at what's left down",
    "start": "962160",
    "end": "967480"
  },
  {
    "text": "there you have a path directive and nested inside you have the guest get or put basically a request is only going to",
    "start": "967480",
    "end": "973040"
  },
  {
    "text": "get to the very to the very uh end of this route if both of these things match",
    "start": "973040",
    "end": "978120"
  },
  {
    "text": "the path needs to match and the method needs to match right and this you can also Express differently if you use the",
    "start": "978120",
    "end": "984480"
  },
  {
    "text": "end operator right so rather as an alternative to nesting you can just put pull those things together into one",
    "start": "984480",
    "end": "990759"
  },
  {
    "text": "thing which is also going to give you a directive and then use this one and once again you can pull that out if you want",
    "start": "990759",
    "end": "997639"
  },
  {
    "text": "so now you have order get or put what's something very specific in your case so",
    "start": "997639",
    "end": "1003240"
  },
  {
    "text": "and down the route there is has become much easier to read what this is supposed to show you",
    "start": "1003240",
    "end": "1009880"
  },
  {
    "text": "is that it's possible to really work with the directives that you write yourself or that come with spray to",
    "start": "1009880",
    "end": "1017360"
  },
  {
    "text": "combine it into something that makes sense in your application and reuse it in complex structures right the point is",
    "start": "1017360",
    "end": "1023759"
  },
  {
    "text": "that you can have really really large descriptions of apis that are still very readable because you just name them",
    "start": "1023759",
    "end": "1031558"
  },
  {
    "text": "properly now another nice aspect of these operators is that they are completely typ safe so let's look at",
    "start": "1031559",
    "end": "1037520"
  },
  {
    "text": "what this means suppose we Define this one which is a directive that just another name for a preconfigured path",
    "start": "1037520",
    "end": "1044199"
  },
  {
    "text": "directive right what this does it's it's a directive that pulls out it extracts one",
    "start": "1044199",
    "end": "1049799"
  },
  {
    "text": "as we've seen before now this one obviously compiles let's let's try to make up this one like",
    "start": "1049799",
    "end": "1056120"
  },
  {
    "text": "we want to compile com combine a directive that pulls out an INT with one",
    "start": "1056120",
    "end": "1061280"
  },
  {
    "text": "that just filters and doesn't pull out anything so this doesn't work you can't do this this doesn't compile because",
    "start": "1061280",
    "end": "1067400"
  },
  {
    "text": "what's going to be the the common super type of these two things all right so let's take another example let's say we",
    "start": "1067400",
    "end": "1074360"
  },
  {
    "text": "try to combine the autop paath with a directive uh down there which looks a",
    "start": "1074360",
    "end": "1079480"
  },
  {
    "text": "bit strange it has two elements this is a regular expression combined with a double number right so this one the",
    "start": "1079480",
    "end": "1086440"
  },
  {
    "text": "rightmost side of this pulls out two things it pulls out a string that matched the regular expression and the",
    "start": "1086440",
    "end": "1093559"
  },
  {
    "text": "double number which is going to be converted to a double right and you can't combine that with an or operator",
    "start": "1093559",
    "end": "1099480"
  },
  {
    "text": "with with an directive that just extracts an in so this doesn't work you can't do this so spray takes care or the",
    "start": "1099480",
    "end": "1106120"
  },
  {
    "text": "compiler takes care that you that you don't mess the up and it that your structure properly",
    "start": "1106120",
    "end": "1111559"
  },
  {
    "text": "works so this one is going to work because you extract again you have a",
    "start": "1111559",
    "end": "1117600"
  },
  {
    "text": "directive extracting an INT and the second thing also extract an INT what this thing does it basically looks at a query parameter with the name order um",
    "start": "1117600",
    "end": "1125280"
  },
  {
    "text": "and it makes sure that it's an it can be converted to an INT cleanly and if it does it pulls it out so you have two",
    "start": "1125280",
    "end": "1131480"
  },
  {
    "text": "different directives that both pull out an INT and you can or them like this so this works",
    "start": "1131480",
    "end": "1138919"
  },
  {
    "text": "let's look at this you have again the thing that pulls out an INT and you combine it with the end operator with a",
    "start": "1139919",
    "end": "1145960"
  },
  {
    "text": "directive that pulls out a string so the value of the query parameter with the",
    "start": "1145960",
    "end": "1151039"
  },
  {
    "text": "name OEM and it and an option of string which is the expired parameter that you",
    "start": "1151039",
    "end": "1158240"
  },
  {
    "text": "might have in the in your request the little question mark at the end basically says okay this is not required",
    "start": "1158240",
    "end": "1163520"
  },
  {
    "text": "you know if it's not there don't worry about it and this automatically gives you an option so you can use this",
    "start": "1163520",
    "end": "1170240"
  },
  {
    "text": "for example in a route like this where you say okay just apply this logic and",
    "start": "1170240",
    "end": "1175840"
  },
  {
    "text": "then give me the order ID which is the int the OEM which is a string and the expired which is an option",
    "start": "1175840",
    "end": "1183880"
  },
  {
    "text": "string all right let's move on spray comes with",
    "start": "1184039",
    "end": "1189400"
  },
  {
    "text": "69 predefined directives so it's a it's a whole lot you can they do all kinds of things they work with cookies they work",
    "start": "1189400",
    "end": "1195520"
  },
  {
    "start": "1193000",
    "end": "1699000"
  },
  {
    "text": "on header values they change things about responses compress decompress whatever right we're",
    "start": "1195520",
    "end": "1200960"
  },
  {
    "text": "not going to go through all of them um I just want to show you that there's lots of meat there for you to combine in",
    "start": "1200960",
    "end": "1208200"
  },
  {
    "text": "whatever ways you want them so rather than going through any of these in detail I'm going to switch",
    "start": "1208200",
    "end": "1214559"
  },
  {
    "text": "over to this which is a real world example of what a spray R spray route",
    "start": "1214559",
    "end": "1222679"
  },
  {
    "text": "might look like in the wild so don't worry about the boiler plate up there that might change let's look it what's",
    "start": "1222679",
    "end": "1229760"
  },
  {
    "text": "going on here so anyway okay let's let's go through it one by one so up here we",
    "start": "1229760",
    "end": "1236120"
  },
  {
    "text": "have something saying encode response so basically everything that's inside there",
    "start": "1236120",
    "end": "1241440"
  },
  {
    "text": "is going to be compressed is going to be Gip compressed but it's not only going to be Gip compressed it also makes sure",
    "start": "1241440",
    "end": "1248400"
  },
  {
    "text": "that the request that comes in actually has accept encoding headers that match",
    "start": "1248400",
    "end": "1253520"
  },
  {
    "text": "this right if the client doesn't accept GC encoding then this also just completes the request right away and",
    "start": "1253520",
    "end": "1259600"
  },
  {
    "text": "says you know this not going to work you get a 406 unacceptable response with the information inside of the arrow message",
    "start": "1259600",
    "end": "1266559"
  },
  {
    "text": "that you need to accept git this is all packaged in this nice directive so for you don't you don't have to worry about",
    "start": "1266559",
    "end": "1272039"
  },
  {
    "text": "it so this this thing here just defines the behavior of the root uh",
    "start": "1272039",
    "end": "1280120"
  },
  {
    "text": "of the root path so if there's no further path down there you just redirect to/ do very simple and only get",
    "start": "1280120",
    "end": "1287159"
  },
  {
    "text": "requests so let's go down to the root path um no to the dock this is what",
    "start": "1287159",
    "end": "1294480"
  },
  {
    "text": "going to what's going to hit if you shoot in as request to SL do it actually",
    "start": "1294480",
    "end": "1300360"
  },
  {
    "text": "what it does in the inside here is it says get from resource directory so it serves up static content that lives on",
    "start": "1300360",
    "end": "1307000"
  },
  {
    "text": "your class path in some jars and um underneath this path and",
    "start": "1307000",
    "end": "1312120"
  },
  {
    "text": "whatever is the subpath behind the path prefix is going to be taken out of the dock route underneath your your um your",
    "start": "1312120",
    "end": "1320919"
  },
  {
    "text": "class path structure and then because in this particular project all this documentation actually was written in",
    "start": "1320919",
    "end": "1326679"
  },
  {
    "text": "markdown files so what we need to do here we basically do this which looks",
    "start": "1326679",
    "end": "1331919"
  },
  {
    "text": "complicated and probably should have been pulled out and named um with a nice name what it does it transforms the the",
    "start": "1331919",
    "end": "1339440"
  },
  {
    "text": "response and converts markdown to to to HTML this is this thing here is defined",
    "start": "1339440",
    "end": "1345200"
  },
  {
    "text": "in the context of this application that doesn't come with spray but someone wrote a function that changes markdown",
    "start": "1345200",
    "end": "1350360"
  },
  {
    "text": "to HTML and you just apply it to this round like this right so that's the SL dog let's",
    "start": "1350360",
    "end": "1356679"
  },
  {
    "text": "look at this guy so if we have that's the interesting bit the",
    "start": "1356679",
    "end": "1362679"
  },
  {
    "text": "API what happens here so we have one thing that says Json p with parameter that's basically Json P support",
    "start": "1362679",
    "end": "1368960"
  },
  {
    "text": "automatically already coming with spray clearly whatever is in here is a Json API so you want to give your clients the",
    "start": "1368960",
    "end": "1375400"
  },
  {
    "text": "ability to use Json p uh which is a special kind of JavaScript wrapper around Json and that's all you need to",
    "start": "1375400",
    "end": "1381440"
  },
  {
    "text": "do in order to have this then if you have the path SL API toop articles you",
    "start": "1381440",
    "end": "1387279"
  },
  {
    "text": "go in here it only responds to get requests it requires that there's a parameter that can be uh can be",
    "start": "1387279",
    "end": "1393960"
  },
  {
    "text": "converted to an INT the parameter has to be named Max it makes sure that the max parameter is actually non negative",
    "start": "1393960",
    "end": "1401279"
  },
  {
    "text": "otherwise it's you're going to get an error and then the interesting bit is down here this is a complete width as",
    "start": "1401279",
    "end": "1407120"
  },
  {
    "text": "we've seen before what it does it takes the parameter Max wraps it in a message",
    "start": "1407120",
    "end": "1412880"
  },
  {
    "text": "sends it out to an actor the topless now the top top articles uh service and this",
    "start": "1412880",
    "end": "1420760"
  },
  {
    "text": "comes back with a future that is mapped to a sequence of Articles so your that's",
    "start": "1420760",
    "end": "1427080"
  },
  {
    "text": "the call the bridging call from your rest layer to your application right the top article service lives in your",
    "start": "1427080",
    "end": "1432960"
  },
  {
    "text": "application it expects you to send in a get message and it gives you back a list of articles",
    "start": "1432960",
    "end": "1439000"
  },
  {
    "text": "and this works just like this because there's a marshala defined for this",
    "start": "1439000",
    "end": "1445360"
  },
  {
    "text": "application that knows how to translate an article into Json and spray helps you with things",
    "start": "1445360",
    "end": "1450880"
  },
  {
    "text": "like spray Json support and so on to do that nicely so you don't have to do a lot but this is very readable and shows",
    "start": "1450880",
    "end": "1457000"
  },
  {
    "text": "you exactly what this route is doing so someone who doesn't know spray or Scala can figure out what this guy what this",
    "start": "1457000",
    "end": "1463640"
  },
  {
    "text": "thing does without any problem so you see this this path top",
    "start": "1463640",
    "end": "1470520"
  },
  {
    "text": "articles if it doesn't match we're going to get down here and there is something called token authenticate that's a",
    "start": "1470520",
    "end": "1477240"
  },
  {
    "text": "custom directive that someone using this uh application wrote and what it does it's basically what it does is it looks",
    "start": "1477240",
    "end": "1483760"
  },
  {
    "text": "at uh cookie and checks whether the cookie is there and if it is it's going to extract a user object out of",
    "start": "1483760",
    "end": "1491840"
  },
  {
    "text": "somewhere maybe by asking the database or whatever but it makes sure that only authenticated requests get in here so",
    "start": "1491840",
    "end": "1500039"
  },
  {
    "text": "and there are few Sub sub routes like the ranking um this only request",
    "start": "1500039",
    "end": "1505520"
  },
  {
    "text": "responds to get requests there's a custom thing here that wraps the uh this route with some logic that counts how",
    "start": "1505520",
    "end": "1513360"
  },
  {
    "text": "how often the user has used the API how long how much time it spent there and so on and then it extracts a a bunch of uh",
    "start": "1513360",
    "end": "1520559"
  },
  {
    "text": "query parameters actually five query parameters here that are all of type int",
    "start": "1520559",
    "end": "1526640"
  },
  {
    "text": "now how do you see this this question Mark says if it's not there then just Supply the value that's that's that",
    "start": "1526640",
    "end": "1533120"
  },
  {
    "text": "comes here right so it's an it's an optional query parameter with a default value of zero and just by writing this",
    "start": "1533120",
    "end": "1538919"
  },
  {
    "text": "brain knows okay the type of this parameter needs to be an INT right otherwise you couldn't have a zero as a",
    "start": "1538919",
    "end": "1544520"
  },
  {
    "text": "as a as a default value so you extract five things usually you would have to have pick them up at the end as we've",
    "start": "1544520",
    "end": "1550960"
  },
  {
    "text": "seen you would have to pick them up individually as five different parameters now that can become a bit",
    "start": "1550960",
    "end": "1556640"
  },
  {
    "text": "clunky in your route definition so spray gives you the ability to just say okay uh wrap it up in a case class like this",
    "start": "1556640",
    "end": "1563279"
  },
  {
    "text": "one if we actually go there it's a simple case class defined like this that",
    "start": "1563279",
    "end": "1569799"
  },
  {
    "text": "has the different inss there right so this is case class support",
    "start": "1569799",
    "end": "1575600"
  },
  {
    "text": "automatic putting of extractions into case classes and there's no reflection involved this is all type class based",
    "start": "1575600",
    "end": "1582880"
  },
  {
    "text": "it's all type safe there's it's fast so you don't need to worry about it you get here you get a ranking descriptor so",
    "start": "1582880",
    "end": "1589279"
  },
  {
    "text": "it's an instance of this case class and once again you shoot it to your ranking service map it to a result and that's",
    "start": "1589279",
    "end": "1595559"
  },
  {
    "text": "going to be used for completing the request and so on right there's more stuff here we have a post um this",
    "start": "1595559",
    "end": "1604520"
  },
  {
    "text": "requires that the user that that was extracted up there is actually an admin otherwise you can't do this then this",
    "start": "1604520",
    "end": "1611840"
  },
  {
    "text": "actually extracts the content of the request so it's it does the opposite of marshalling unmarshalling",
    "start": "1611840",
    "end": "1618679"
  },
  {
    "text": "and it converts it to accounts details whatever type that is right if it",
    "start": "1618679",
    "end": "1624000"
  },
  {
    "text": "doesn't work if there's any problem the whole thing is going to create a proper error message that goes back to the",
    "start": "1624000",
    "end": "1629720"
  },
  {
    "text": "client and then once again you have another service that is actually going to do the work in your application you",
    "start": "1629720",
    "end": "1636200"
  },
  {
    "text": "map the result that's it so you you see how this how this works um this is just",
    "start": "1636200",
    "end": "1641679"
  },
  {
    "text": "uh some stops I put in here so there might be more things where you have different routes for crud support get",
    "start": "1641679",
    "end": "1648679"
  },
  {
    "text": "put delete whatever you want to have there and so on here we might have something like an old version of this",
    "start": "1648679",
    "end": "1655039"
  },
  {
    "text": "that's still written in Python in some Django server and if you use it's also",
    "start": "1655039",
    "end": "1660720"
  },
  {
    "text": "custom but very easy to write if you use pray client you can just proxy requests",
    "start": "1660720",
    "end": "1665880"
  },
  {
    "text": "back somewhere else right so you take the request here you send it out as on the client side to the jungle and",
    "start": "1665880",
    "end": "1671080"
  },
  {
    "text": "whatever comes back there just goes back and completes this route very easy to ride no problem with",
    "start": "1671080",
    "end": "1677120"
  },
  {
    "text": "spray and down here finally we actually uh serve some static",
    "start": "1677120",
    "end": "1682240"
  },
  {
    "text": "content some CSS some images they live in again on the class path and public",
    "start": "1682240",
    "end": "1687360"
  },
  {
    "text": "are gzipped and they're cached and so on so this is what I want you to to take",
    "start": "1687360",
    "end": "1693360"
  },
  {
    "text": "away from this is that you can have very complex definitions that are very readable very easy to maintain and you",
    "start": "1693360",
    "end": "1698919"
  },
  {
    "text": "can understand what they do even a half a year from now when you come back and look at the code because you need to fix something okay so that was our real",
    "start": "1698919",
    "end": "1706480"
  },
  {
    "start": "1699000",
    "end": "1713000"
  },
  {
    "text": "world example that's the real world example again just as a backup let me wrap this",
    "start": "1706480",
    "end": "1712320"
  },
  {
    "text": "up what are the best practices basically best practice is you keep your route",
    "start": "1712320",
    "end": "1718519"
  },
  {
    "start": "1713000",
    "end": "1789000"
  },
  {
    "text": "structure clean and readable just similar to what we've seen so far if you have a lot of logic pull it out into",
    "start": "1718519",
    "end": "1723919"
  },
  {
    "text": "custom directives so that you maintain a very clean structure that is easy to",
    "start": "1723919",
    "end": "1729159"
  },
  {
    "text": "read don't let the API layer leak into your application right that should be separate stick to the clean architecture",
    "start": "1729159",
    "end": "1736039"
  },
  {
    "text": "this is easily done by just putting the API project or make it a separate sub",
    "start": "1736039",
    "end": "1741399"
  },
  {
    "text": "project underneath your common project that doesn't even have any dependency going back in so there's nothing that",
    "start": "1741399",
    "end": "1747640"
  },
  {
    "text": "your application can depend on use the unmarshaling infrastructure it really helps keeping your routes clean so don't",
    "start": "1747640",
    "end": "1754519"
  },
  {
    "text": "do it yourself manually just just decouple it use the marshalling in the",
    "start": "1754519",
    "end": "1759640"
  },
  {
    "text": "type class based uh way there's blocking okay let's not go",
    "start": "1759640",
    "end": "1765440"
  },
  {
    "text": "there um and then if you use spray on spray can you can use the uh cool plugin",
    "start": "1765440",
    "end": "1771960"
  },
  {
    "text": "um the spt revolver plugin plus jrebel that gives you hot reloading so you can have your application run all the time",
    "start": "1771960",
    "end": "1778880"
  },
  {
    "text": "and just change Bits And as you change them spt is going to recompile the bits that are required load them into your",
    "start": "1778880",
    "end": "1783919"
  },
  {
    "text": "jvm and you've got really fast turnaround it's excellent um there's a lot of more stuff",
    "start": "1783919",
    "end": "1789000"
  },
  {
    "start": "1789000",
    "end": "1827000"
  },
  {
    "text": "that I'm not going to be able to talk about today that's there support for Lift Jon for twirl which is basically the play templating engine language um",
    "start": "1789000",
    "end": "1797399"
  },
  {
    "text": "that we pulled out and you can use in spt outside of play there's support for Scala T there is a synchronous response",
    "start": "1797399",
    "end": "1804640"
  },
  {
    "text": "push streaming that we've haven't seen if you use if you use spray on spray can you can do that um there stuff",
    "start": "1804640",
    "end": "1812000"
  },
  {
    "text": "on testing obviously on how to customize the error messages all that's possible",
    "start": "1812000",
    "end": "1818159"
  },
  {
    "text": "and we can talk about this maybe tomorrow if there's a workshop that you guys are interested that's spray client obviously which has its own",
    "start": "1818159",
    "end": "1825360"
  },
  {
    "text": "things current state we just released uh the 09 release this morning um it's the",
    "start": "1825360",
    "end": "1832880"
  },
  {
    "text": "last release for AKA 1X we know that we're behind and AKA 20 is out and we everyone wants to have it and use it and",
    "start": "1832880",
    "end": "1839840"
  },
  {
    "text": "whatever and we we want to do it as well so we're heavily focused on getting the",
    "start": "1839840",
    "end": "1844880"
  },
  {
    "text": "first spray release out that's AKA 20 compatible um there are lots of coming",
    "start": "1844880",
    "end": "1849919"
  },
  {
    "text": "features even better documentation better and so on and so on and so on",
    "start": "1849919",
    "end": "1855080"
  },
  {
    "text": "there are a few sprayers already uh these companies all you spray in some way or another um there's a there's a",
    "start": "1855080",
    "end": "1863279"
  },
  {
    "text": "growing Community just join the mailing list it's very helpful so follow us on",
    "start": "1863279",
    "end": "1868679"
  },
  {
    "text": "Twitter thank you [Applause]",
    "start": "1868679",
    "end": "1877210"
  },
  {
    "text": "[Music]",
    "start": "1877210",
    "end": "1885669"
  }
]