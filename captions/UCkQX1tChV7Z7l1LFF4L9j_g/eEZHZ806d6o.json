[
  {
    "text": "good morning and welcome everyone I'll ask a question first of all how many of you are subscriber happy I put in the",
    "start": "4420",
    "end": "11980"
  },
  {
    "text": "past can he also true friends ok most of you as a Netflix subscriber maybe your",
    "start": "11980",
    "end": "23679"
  },
  {
    "text": "experience this where you are trying to watch a title on Netflix let's say on your TV and you found out that you have been locked out of your account on that",
    "start": "23679",
    "end": "30339"
  },
  {
    "text": "TV we can imagine that it can be annoying for our customers because logging in back on the TV using a TV",
    "start": "30339",
    "end": "36879"
  },
  {
    "text": "remote is no fun especially if your Netflix account email includes your full",
    "start": "36879",
    "end": "42820"
  },
  {
    "text": "name and if your full name is as big as mine on the server side we categorized",
    "start": "42820",
    "end": "51460"
  },
  {
    "text": "the errors that caused this as user your terrors and if these user yachts were to happen on a larger scale it would cause",
    "start": "51460",
    "end": "57370"
  },
  {
    "text": "a drop in some of our course link metrics because if people get logged out they can't stream and it might trigger",
    "start": "57370",
    "end": "65860"
  },
  {
    "text": "an outage incident an outage that would take much longer to resolve even after the server-side issues are resolved",
    "start": "65860",
    "end": "71860"
  },
  {
    "text": "because people may not log in back on their devices or maybe they don't remember their password and above all",
    "start": "71860",
    "end": "78460"
  },
  {
    "text": "this just adds more friction between our customers and the content that they are trying to watch and Netflix tries to",
    "start": "78460",
    "end": "84460"
  },
  {
    "text": "eliminate all such friction all the time so my name is SATA jet and I'm on the",
    "start": "84460",
    "end": "89950"
  },
  {
    "text": "product edge access systems team at Netflix short for Pease and that's our team logo yeah we love acronyms and we",
    "start": "89950",
    "end": "97329"
  },
  {
    "text": "love creating logos our team operates some of the most critical services that Netflix that managed the lifecycle of",
    "start": "97329",
    "end": "104079"
  },
  {
    "text": "authentication tokens that we send out to these customer devices we ensure that",
    "start": "104079",
    "end": "109240"
  },
  {
    "text": "all Netflix subscribers around been logged in on their devices and are not",
    "start": "109240",
    "end": "114280"
  },
  {
    "text": "logged out because of any server-side issues or any changes that we make to our services but in a large distributed",
    "start": "114280",
    "end": "120579"
  },
  {
    "text": "services environment failures are inevitable in fact before a couple of",
    "start": "120579",
    "end": "125979"
  },
  {
    "text": "years whenever such an issue like authentication or identity related issue",
    "start": "125979",
    "end": "131200"
  },
  {
    "text": "was reported it used to take much longer to resolve that issue because our",
    "start": "131200",
    "end": "136330"
  },
  {
    "text": "systems were very complicated here is a screenshot from one of the",
    "start": "136330",
    "end": "142090"
  },
  {
    "text": "pradhans students from back then we use JIRA for prod incident and most of the",
    "start": "142090",
    "end": "148540"
  },
  {
    "text": "information here is directly redacted but what I want to highlight are these two things just look at the number of",
    "start": "148540",
    "end": "154570"
  },
  {
    "text": "people and number of teams involved to resolve this incident and this is not usual for Netflix that's our team by the",
    "start": "154570",
    "end": "161140"
  },
  {
    "text": "way playback access which is shown with the highlight arrow we were part of the bigot or back then whenever such an",
    "start": "161140",
    "end": "168250"
  },
  {
    "text": "issue was reported we had to include people from multiple teams because there are multiple systems that were dealing with authentication tokens and resolving",
    "start": "168250",
    "end": "174250"
  },
  {
    "text": "identities also we did not have enough visibility into these systems we just",
    "start": "174250",
    "end": "179530"
  },
  {
    "text": "made it harder to find the root cause at some point we wanted to simplify this and streamline the authentication and",
    "start": "179530",
    "end": "186190"
  },
  {
    "text": "identity resolution paths and hence we decided to react attacked our system and that is what I'm going to talk about today also this talk is not about",
    "start": "186190",
    "end": "194680"
  },
  {
    "text": "service to service communication within the Netflix ecosystem for that we use mutual TLS with self-signed search this",
    "start": "194680",
    "end": "202090"
  },
  {
    "text": "is about authenticating Netflix subscribers like some of you folks here and the devices that we use so today",
    "start": "202090",
    "end": "209920"
  },
  {
    "text": "I'll talk about where we were with regards to access and Identity Management what we did as a part of the",
    "start": "209920",
    "end": "215470"
  },
  {
    "text": "tree architecture and what winds did we see as a result of that",
    "start": "215470",
    "end": "220350"
  },
  {
    "text": "to better explain where we were let me run you through a very simple user login flow which will illustrate how he used",
    "start": "226780",
    "end": "232400"
  },
  {
    "text": "to issue the authentication tokens and how he used to validate those tokens server-side so let's say you are trying",
    "start": "232400",
    "end": "238850"
  },
  {
    "text": "to log into the Netflix app on your TV you enter your email you enter your password and you hit next",
    "start": "238850",
    "end": "244220"
  },
  {
    "text": "that request then lands on Netflix is hedge proxy which is shown here as rule",
    "start": "244220",
    "end": "249400"
  },
  {
    "text": "so Zul is our primary primary edge proxy which is a gateway for all traffic coming into Netflix think of something",
    "start": "249400",
    "end": "257120"
  },
  {
    "text": "similar to an l7 proxy which routes requests to the origin services that are deployed behind it additionally Zul also",
    "start": "257120",
    "end": "264830"
  },
  {
    "text": "allows us to run custom filter code that can act on a request or a response depending on the type of filter and",
    "start": "264830",
    "end": "271570"
  },
  {
    "text": "throughout this talk whenever I say Zul or whenever I say edge I'm talking about Zoo or Y server so coming back to this",
    "start": "271570",
    "end": "279590"
  },
  {
    "text": "flow from Netflix is perspective your DV on which the Netflix app is installed has a unique identity which we call as",
    "start": "279590",
    "end": "285710"
  },
  {
    "text": "the ESN or the electronic serial number and along with your credentials this ESN is also passed in the login request that",
    "start": "285710",
    "end": "293540"
  },
  {
    "text": "request then gets to route it to one of our origin servers that is the API which",
    "start": "293540",
    "end": "299750"
  },
  {
    "text": "then calls one of the McTeer services not surprisingly called auth service to validate your credentials once auth",
    "start": "299750",
    "end": "306500"
  },
  {
    "text": "service validates your credentials it's it it issues HTTP cooking with a",
    "start": "306500",
    "end": "311810"
  },
  {
    "text": "customer and device identity information in it and eventually that cookie is sent back to the device as a set cookie",
    "start": "311810",
    "end": "317630"
  },
  {
    "text": "header with the device stores in its cookie store so this is how at a very",
    "start": "317630",
    "end": "322790"
  },
  {
    "text": "high level user login flow used to issue the cookie which is the authentication token here now once you log in in order",
    "start": "322790",
    "end": "329720"
  },
  {
    "text": "to present you the Netflix homepage the app makes another request with the previously acquired cookie again this",
    "start": "329720",
    "end": "336380"
  },
  {
    "text": "request lands on one of the API servers as routed by H proxy now to authenticate",
    "start": "336380",
    "end": "341900"
  },
  {
    "text": "this request and to extract the identity present in this cookie the API server needs to decrypt this cookie bit because",
    "start": "341900",
    "end": "347780"
  },
  {
    "text": "it is encrypted and in order to do that it needs access to a specific",
    "start": "347780",
    "end": "352790"
  },
  {
    "text": "cryptographic key which is provisioned by a key management service that we have built at Netflix for those of you are",
    "start": "352790",
    "end": "358669"
  },
  {
    "text": "not familiar a key management service provide storage and access control for cryptographic keys so the server takes",
    "start": "358669",
    "end": "365030"
  },
  {
    "text": "this key open the cookie and if the cookie is valid and is not expired it'll send the customer ID NES and",
    "start": "365030",
    "end": "370790"
  },
  {
    "text": "informational downstream event generating a Netflix homepage which is personalized for that customer right now",
    "start": "370790",
    "end": "378020"
  },
  {
    "text": "all the tokens that we sent to these customer devices have a set expiration so if this cookie was expired API server",
    "start": "378020",
    "end": "384650"
  },
  {
    "text": "would additionally also renew this cookie before sending the customer ID NES an informational downstream so this",
    "start": "384650",
    "end": "390560"
  },
  {
    "text": "is how we used to authenticate the request and as you can see it's pretty straightforward and standard flow right but we had some problems first of all we",
    "start": "390560",
    "end": "398690"
  },
  {
    "text": "had more than one service consuming cookies so this is a very high level",
    "start": "398690",
    "end": "403910"
  },
  {
    "text": "architecture diagram of a part of a Netflix ecosystem each block that you see here represents a cluster of AWS ec2",
    "start": "403910",
    "end": "410240"
  },
  {
    "text": "instances and as you can see we have more than one what we call as origin services deployed behind Zoo we have an",
    "start": "410240",
    "end": "416690"
  },
  {
    "text": "API we have a legacy API and we have a service called as device or service API",
    "start": "416690",
    "end": "422750"
  },
  {
    "text": "servers formed our primary API service layer which hosted endpoints for different functionalities for different device types or platforms like iOS",
    "start": "422750",
    "end": "429200"
  },
  {
    "text": "Android app C devices etc device odd",
    "start": "429200",
    "end": "435200"
  },
  {
    "text": "service plays a very special role in performing device shot which I'll talk about later",
    "start": "435200",
    "end": "440710"
  },
  {
    "text": "legacy API service as the name suggests is used by older legacy devices all",
    "start": "440920",
    "end": "446450"
  },
  {
    "text": "these services were consuming cookies there were even some mid tier services which are consuming cookies because",
    "start": "446450",
    "end": "452540"
  },
  {
    "text": "those systems wanted to extract some information which is present in the cookie all this means is that we had to",
    "start": "452540",
    "end": "459560"
  },
  {
    "text": "provision key access for all these services which was a security concern also these requests go to multiple mid",
    "start": "459560",
    "end": "466640"
  },
  {
    "text": "tier services and multiple origin services so not having a central place for identity resolution caused",
    "start": "466640",
    "end": "472070"
  },
  {
    "text": "discrepancies and lot of errors and which were exaggerated by lack of visibility into the systems also as it",
    "start": "472070",
    "end": "480080"
  },
  {
    "text": "is apparent all these services are doing redundant work of decrypting tokens and resolving identity which was very",
    "start": "480080",
    "end": "486350"
  },
  {
    "text": "inefficient especially in the scale we operated at to give you an idea of scale",
    "start": "486350",
    "end": "492260"
  },
  {
    "text": "Netflix has more than 158 milli subscribers worldwide there are more than a billion devices with a Netflix",
    "start": "492260",
    "end": "498110"
  },
  {
    "text": "app on it and all those devices make requests to Netflix services we observe",
    "start": "498110",
    "end": "503420"
  },
  {
    "text": "more than 2 million requests per second at peak at the edge layer what this",
    "start": "503420",
    "end": "509240"
  },
  {
    "text": "number is to is the code that is decrypting the token and extracting identity is getting called 2 million",
    "start": "509240",
    "end": "515419"
  },
  {
    "text": "times per second and with more than one service doing it that number just multiplies that many times and even",
    "start": "515419",
    "end": "522080"
  },
  {
    "text": "though we use a symmetric cryptographic key here there is still a CPU cost that is incurred for each request here so on",
    "start": "522080",
    "end": "528950"
  },
  {
    "text": "top of this multiple services consuming cookies at this massive scale we had one more problem which was the biggest",
    "start": "528950",
    "end": "534230"
  },
  {
    "text": "factor in making our systems more complicated cookie was not the only token type being used we support",
    "start": "534230",
    "end": "540920"
  },
  {
    "text": "multiple types of tokens for different categories of requests let's look at",
    "start": "540920",
    "end": "546110"
  },
  {
    "text": "what all types of token we support so you already saw cookies right cookies are used in request for sign up flow",
    "start": "546110",
    "end": "551570"
  },
  {
    "text": "meaning when you scribe for Netflix for login and for discovery and when I say",
    "start": "551570",
    "end": "559040"
  },
  {
    "text": "discovery that means a user is trying to discover some content to watch either by browsing the home page or a genre page",
    "start": "559040",
    "end": "564680"
  },
  {
    "text": "or using the search functionality so all these requests use cookie as a form of authentication then we have something",
    "start": "564680",
    "end": "573440"
  },
  {
    "text": "called as message security layer which is an internal security protocol developed by Netflix which stands for",
    "start": "573440",
    "end": "581320"
  },
  {
    "text": "abbreviated as MSL and we pronounce it a missile and we call the corresponding missile tokens think of missile as",
    "start": "581320",
    "end": "591080"
  },
  {
    "text": "something equivalent to TLS in terms of the feature set it provides and without going into too much detail on missile at",
    "start": "591080",
    "end": "598460"
  },
  {
    "text": "a very high level missile provides us with device authentication and encryption Netflix has a very critical",
    "start": "598460",
    "end": "605720"
  },
  {
    "text": "business requirement of authenticating devices to not just users because we have contractual obligations with",
    "start": "605720",
    "end": "611330"
  },
  {
    "text": "studios as well as content creators to secure the content that we show on our service authenticating a device means",
    "start": "611330",
    "end": "618770"
  },
  {
    "text": "validating a device's identity which is done by employing a particular device or scheme we use different device or scheme",
    "start": "618770",
    "end": "625670"
  },
  {
    "text": "for different device types and we put an appropriate level of trust on devices identity based on the odd scheme",
    "start": "625670",
    "end": "630770"
  },
  {
    "text": "used sometimes these odd scheme also leverage the existing DRM on the device",
    "start": "630770",
    "end": "635780"
  },
  {
    "text": "so the more secure the DRM the more level of trust we put on devices identity and eventually this trust or",
    "start": "635780",
    "end": "642260"
  },
  {
    "text": "assurance is used by services to make authorization decisions I'll give you an example the level of trust that we put",
    "start": "642260",
    "end": "649310"
  },
  {
    "text": "on a Chrome browser on a Mac OS is very low compared to let's say a latest TV that you can buy from Best Buy because",
    "start": "649310",
    "end": "654800"
  },
  {
    "text": "the TV most likely will employ a much secure form of auth scheme and because of this low level of trust on that",
    "start": "654800",
    "end": "660890"
  },
  {
    "text": "Chrome browser on Mac OS we will not serve 4k streams on that browser even if available for a title so we use this",
    "start": "660890",
    "end": "668480"
  },
  {
    "text": "missile protocol for license and playback requests which are very critical from Netflix this business point of view then we have these tokens",
    "start": "668480",
    "end": "677210"
  },
  {
    "text": "called a C ticket token which are part of the legacy authentication protocol that Netflix developed during the early",
    "start": "677210",
    "end": "682370"
  },
  {
    "text": "days of streaming these tokens are used by various e devices being used and we",
    "start": "682370",
    "end": "688970"
  },
  {
    "text": "have no way of obtaining Netflix app on these devices we folks still own the TV that you bought 10 years ago with a Netflix app on it I still do and back",
    "start": "688970",
    "end": "697160"
  },
  {
    "text": "then if the Netflix app was hitting a legacy service endpoint chances are that it is still hitting it because we can't",
    "start": "697160",
    "end": "702590"
  },
  {
    "text": "apply upgrade the Netflix app on it and so we because of this we have to continue to support the legacy service",
    "start": "702590",
    "end": "708410"
  },
  {
    "text": "corresponding authentication protocol and the tokens then we have these JW s",
    "start": "708410",
    "end": "714290"
  },
  {
    "text": "or JW variants of charts that we use for some partner integrations lately Netflix has been partnering with device",
    "start": "714290",
    "end": "720170"
  },
  {
    "text": "manufacturers to merchandise Netflix content to members as well as non-members and sometimes from with",
    "start": "720170",
    "end": "726650"
  },
  {
    "text": "partners UI itself for these integrations we built specific api's and",
    "start": "726650",
    "end": "731840"
  },
  {
    "text": "we chose to use an open standard like JW t to better integrate with partner infrastructure so when these tokens come",
    "start": "731840",
    "end": "738620"
  },
  {
    "text": "to our services we have to extract identity from these tokens as well so I",
    "start": "738620",
    "end": "744290"
  },
  {
    "text": "talked about at least four different types of tokens which are used for these categories of requests which looks",
    "start": "744290",
    "end": "751190"
  },
  {
    "text": "something like this this is the same architecture diagram that I showed you earlier but with all the tokens flowing in our system like this",
    "start": "751190",
    "end": "758080"
  },
  {
    "text": "so just to summarize we had multiple services consuming multiple types of auth tokens at a very massive scale",
    "start": "763560",
    "end": "769600"
  },
  {
    "text": "which just made it very inefficient insecure and complicated and if this was",
    "start": "769600",
    "end": "774640"
  },
  {
    "text": "not enough we were thinking of building a client-side services layer earlier I",
    "start": "774640",
    "end": "779980"
  },
  {
    "text": "mentioned that API server hosted these endpoints for different device types or platforms right now with this new initiative there was this plan of",
    "start": "779980",
    "end": "787300"
  },
  {
    "text": "migrating these endpoints to this new platform whether they would be deployed as independently running node.js servers",
    "start": "787300",
    "end": "793240"
  },
  {
    "text": "on containers we were also planning to build new API stacks for these services and we definitely didn't want these new",
    "start": "793240",
    "end": "800290"
  },
  {
    "text": "services running JavaScript code to start consuming tokens like existing systems so as you can see we did not",
    "start": "800290",
    "end": "807430"
  },
  {
    "text": "consciously choose this architecture that we had for authentication it happened gradually and organically over",
    "start": "807430",
    "end": "812529"
  },
  {
    "text": "time has business requirements grew but we had reached a point where we wanted to simplify this and even though we",
    "start": "812529",
    "end": "818740"
  },
  {
    "text": "wanted to simplify it we had to keep the existing protocols intact like we",
    "start": "818740",
    "end": "823839"
  },
  {
    "text": "couldn't start from scratch and abandon those million-plus devices already being used so we did was we moved",
    "start": "823839",
    "end": "831430"
  },
  {
    "text": "authentication to the edge and what I mean by that is instead of all these tokens flowing into these origin servers",
    "start": "831430",
    "end": "837100"
  },
  {
    "text": "and material services we started terminating these tokens at the edge layer where in we started resolving",
    "start": "837100",
    "end": "844600"
  },
  {
    "text": "identities and send it downstream so that any service that was deployed behind Zul did not have to worry about",
    "start": "844600",
    "end": "849790"
  },
  {
    "text": "this or did not have to deal about they deal with this tokens we also created",
    "start": "849790",
    "end": "854920"
  },
  {
    "text": "new micro services to handle the life cycle of these tokens and one micro service would just handle the life cycle",
    "start": "854920",
    "end": "860920"
  },
  {
    "text": "of just one type of token as you can see from this diagram there is a dedicated service which handles the life cycle of",
    "start": "860920",
    "end": "866529"
  },
  {
    "text": "cookies dedicated one for missile tokens and so on and when I say lifecycle of a token it involves creating or minting",
    "start": "866529",
    "end": "873790"
  },
  {
    "text": "new token or renewing it if it is expired so we call this shared authentication",
    "start": "873790",
    "end": "879640"
  },
  {
    "text": "code running in Zul as well as in these micro services as EAS or edge authentication services let's zoom into",
    "start": "879640",
    "end": "887589"
  },
  {
    "text": "this es layer a little bit which is shown here by the dotted line so in this architecture the es layer is",
    "start": "887589",
    "end": "895279"
  },
  {
    "text": "structured in such a way that the code running in zoo could handle authentication as well as identity",
    "start": "895279",
    "end": "900649"
  },
  {
    "text": "resolution for ninety five percent of the total request without making any remote calls to any of these edge authentication servers and these are the",
    "start": "900649",
    "end": "907640"
  },
  {
    "text": "requests where the token coming with the request is valid and it's not expired so all it takes for the code running in Zul",
    "start": "907640",
    "end": "913940"
  },
  {
    "text": "is to decrypt the token and resolve the dines resolve the identity and send it downstream the remaining fight the",
    "start": "913940",
    "end": "920959"
  },
  {
    "text": "request however the code running in Zul does need to make remote call to one of these ES servers and these are the",
    "start": "920959",
    "end": "927500"
  },
  {
    "text": "requests where the token coming with the request is either expired so we need to renew it or let's say for a missile",
    "start": "927500",
    "end": "933709"
  },
  {
    "text": "request we need to perform a device auth or some sort of a cryptographic key exchange so this split of 95 percent and",
    "start": "933709",
    "end": "941120"
  },
  {
    "text": "five percent where for only five percent of the requests we need to make remote calls from zoon helped a lot with the",
    "start": "941120",
    "end": "946579"
  },
  {
    "text": "resiliency of suit because at the end of the day Zul is our primary age proxy and entry point for all requests into",
    "start": "946579",
    "end": "953180"
  },
  {
    "text": "Netflix so it's a resiliency is very important to us because if Zul is down and it flicks us down and nobody can",
    "start": "953180",
    "end": "958910"
  },
  {
    "text": "stream or even browse to further improve its resiliency we also built fall backs",
    "start": "958910",
    "end": "964399"
  },
  {
    "text": "while designing this layer now you might have heard that there is no fallback for authentication right which is true if",
    "start": "964399",
    "end": "970640"
  },
  {
    "text": "your main op service which is validating your caduceus credentials is down there's nothing you can do about it",
    "start": "970640",
    "end": "976750"
  },
  {
    "text": "there are some cases when we have some leeway to issue fall backs when we can't talk to one of our dependency services",
    "start": "976750",
    "end": "983110"
  },
  {
    "text": "so to explain a fallback scenario let's take expired cookies as an example by",
    "start": "983110",
    "end": "989600"
  },
  {
    "text": "the way whenever we renew cookie or for that matter any token we also verify that the user is a paying member or not",
    "start": "989600",
    "end": "995620"
  },
  {
    "text": "and we do that by picking a remote call to a service called a subscriber service which eventually does a database lookups",
    "start": "995620",
    "end": "1001540"
  },
  {
    "text": "so let's say the cookie coming with the request is valid meaning we could",
    "start": "1001540",
    "end": "1006970"
  },
  {
    "text": "decrypt it and we could verify that we had previously issued but it is expired so the es code running in Zul tries to",
    "start": "1006970",
    "end": "1013750"
  },
  {
    "text": "renew the cookie by making a remote call to cookie service if that called the cookie service fails because let's say",
    "start": "1013750",
    "end": "1020350"
  },
  {
    "text": "the cookie service is down or it can talk to one of its dependencies subscribe or service or let's say there is a network error",
    "start": "1020350",
    "end": "1025918"
  },
  {
    "text": "network error Services passed a part of life in distributed services environment",
    "start": "1025919",
    "end": "1031270"
  },
  {
    "text": "right so let's say if that call fails for whatever reason we will not fail the",
    "start": "1031270",
    "end": "1036970"
  },
  {
    "text": "original incoming inquest instead we will mark this renewal call as rescheduled and we'll send the result",
    "start": "1036970",
    "end": "1043660"
  },
  {
    "text": "identity downstream while responding back to the device we will send a cookie",
    "start": "1043660",
    "end": "1050320"
  },
  {
    "text": "which we call as a rescheduled cookie with a very short expiration time because of this very short expiration",
    "start": "1050320",
    "end": "1056140"
  },
  {
    "text": "the cookie will get expired pretty soon and when the same device makes another",
    "start": "1056140",
    "end": "1061450"
  },
  {
    "text": "call with this expired rescheduled cookie that is when we will renew the cookie assuming that the server-side",
    "start": "1061450",
    "end": "1066520"
  },
  {
    "text": "issues are resolved so this is a example of a fallback that we have in place which prioritizes user experience / / /",
    "start": "1066520",
    "end": "1074380"
  },
  {
    "text": "security so going back to this current architecture diagram the next logical",
    "start": "1074380",
    "end": "1080230"
  },
  {
    "text": "question would be in what form did we send the identity information downstream",
    "start": "1080230",
    "end": "1085380"
  },
  {
    "text": "for this we created a new identity structure called passport so what is",
    "start": "1085380",
    "end": "1095919"
  },
  {
    "text": "passport it is an identity structure created at the edge for each request and services consumed in the scope of same",
    "start": "1095919",
    "end": "1101830"
  },
  {
    "text": "request it contains user and device identity information it is internal to",
    "start": "1101830",
    "end": "1109240"
  },
  {
    "text": "Netflix ecosystem meaning it is an internal identity token that we don't send it out back to the device for",
    "start": "1109240",
    "end": "1115960"
  },
  {
    "text": "security it is integrity protected by H map so those of you are not familiar with H Mac H Mac stands for hash-based",
    "start": "1115960",
    "end": "1122289"
  },
  {
    "text": "message authentication code and in cryptography it is used to verify the authenticity and integrity of the data",
    "start": "1122289",
    "end": "1128620"
  },
  {
    "text": "that is being transmitted and it involves using cryptographic hash function and a symmetric key so we added",
    "start": "1128620",
    "end": "1134799"
  },
  {
    "text": "H Mac protection in passports so that any service which wants to do an additional verification on the integrity",
    "start": "1134799",
    "end": "1140590"
  },
  {
    "text": "of the data that is present in passport it",
    "start": "1140590",
    "end": "1144630"
  },
  {
    "text": "thank you lastly it is in protobuf format protobuf because most back-end services at",
    "start": "1158770",
    "end": "1164779"
  },
  {
    "text": "Netflix use TR PC so protobuf was a natural choice we could just put the passport binary Pro today in a G RPC",
    "start": "1164779",
    "end": "1171230"
  },
  {
    "text": "request and the framework will take care of serialization and deserialization for us",
    "start": "1171230",
    "end": "1176409"
  },
  {
    "text": "so here is what a passport protobuf message looks like and for those of you are not familiar with protobuf just",
    "start": "1176409",
    "end": "1183080"
  },
  {
    "text": "think of this as something similar to data class in catalan or a plain old java class which has some member variables and holds data those indices",
    "start": "1183080",
    "end": "1189799"
  },
  {
    "text": "there are part of the protocol syntax where you need to have a unique index for each field in your message so let's",
    "start": "1189799",
    "end": "1197270"
  },
  {
    "text": "look at what all information does passport have firstly it has header which has some metadata about the passport then it has two buckets of",
    "start": "1197270",
    "end": "1205100"
  },
  {
    "text": "information user info and device info as the name suggests user info stores user",
    "start": "1205100",
    "end": "1211130"
  },
  {
    "text": "or the customer identity information mainly the customer ID and the count owner ID and device info instead stores",
    "start": "1211130",
    "end": "1218779"
  },
  {
    "text": "the device identity information mainly the ESN and the device type if you",
    "start": "1218779",
    "end": "1224779"
  },
  {
    "text": "notice both user info and device info have these two fields which have a very special purpose for us source and",
    "start": "1224779",
    "end": "1230210"
  },
  {
    "text": "authentication level source indicates how we resolve the identity or what",
    "start": "1230210",
    "end": "1235789"
  },
  {
    "text": "claim was presented to resolve the identity meaning did we resolve a user's identity using cookie a missile token or",
    "start": "1235789",
    "end": "1241820"
  },
  {
    "text": "some other claim so here is a list of some of the claims that we use to resolve the identity so we launched",
    "start": "1241820",
    "end": "1248929"
  },
  {
    "text": "passport with this source field and we got feedback from our customers that",
    "start": "1248929",
    "end": "1254080"
  },
  {
    "text": "they wanted a higher abstraction than source so what we did was we grouped",
    "start": "1254080",
    "end": "1259370"
  },
  {
    "text": "these sources into these three buckets of authentication level of low high and highest an authentication level",
    "start": "1259370",
    "end": "1266600"
  },
  {
    "text": "signifies the level of crust that we put on a particular claim so for example an authentication level of highest means",
    "start": "1266600",
    "end": "1272390"
  },
  {
    "text": "resolve the identity using a missile token or a user credentials claim if you",
    "start": "1272390",
    "end": "1277789"
  },
  {
    "text": "remember I earlier mentioned that we use missile protocol for license and playback requests so let's say a license",
    "start": "1277789",
    "end": "1283370"
  },
  {
    "text": "server while using the identity in passport can do an assertion on the authentication level for user",
    "start": "1283370",
    "end": "1288979"
  },
  {
    "text": "info or device info and it can do an assertion that it has to be authentication level of highest otherwise it can fail the request and",
    "start": "1288979",
    "end": "1298509"
  },
  {
    "text": "lastly as I mentioned that the identity information in passport is integrity protected this is we where we store the",
    "start": "1298509",
    "end": "1304369"
  },
  {
    "text": "user and device ID integrity information so we take the H Mac of user info object and put it and put those bytes in user",
    "start": "1304369",
    "end": "1310999"
  },
  {
    "text": "info and we take the H Mac of device info object and put those bytes in device integrity so this passport is",
    "start": "1310999",
    "end": "1318769"
  },
  {
    "text": "passed in a G RPC request either as binary blob of bytes or as a base64",
    "start": "1318769",
    "end": "1324799"
  },
  {
    "text": "encoded string which represents those bytes we also built a wrapper on top of",
    "start": "1324799",
    "end": "1330409"
  },
  {
    "text": "this passport binary data called passport introspect err and this is what",
    "start": "1330409",
    "end": "1336139"
  },
  {
    "text": "the Java interface for that Passport introspective looks like which has bunch of Gator methods to access the device and user identity information we build",
    "start": "1336139",
    "end": "1344690"
  },
  {
    "text": "this wrapper so that lets say in future we want to move to a different wire format for passport we could do that",
    "start": "1344690",
    "end": "1350029"
  },
  {
    "text": "because of this abstraction without affecting every consumer so when a",
    "start": "1350029",
    "end": "1355190"
  },
  {
    "text": "service gets Passport binary data in a request it then creates an instance of this passport and prospector using a",
    "start": "1355190",
    "end": "1361519"
  },
  {
    "text": "factory that we have provided so Passport intro Specter is for services",
    "start": "1361519",
    "end": "1368179"
  },
  {
    "text": "to consume passport data programmatically at runtime but there was also a need for humans to introspect",
    "start": "1368179",
    "end": "1376249"
  },
  {
    "text": "the passport data for debugging purposes so here is a screenshot of one of the tools that we have provided that the",
    "start": "1376249",
    "end": "1381829"
  },
  {
    "text": "teams can use to decrypt a base64 passport base64 encoded passport string",
    "start": "1381829",
    "end": "1386929"
  },
  {
    "text": "and see what is in there if you folks",
    "start": "1386929",
    "end": "1392479"
  },
  {
    "text": "noticed both user info and device info have these lists of something called as actions so along with Passport we also",
    "start": "1392479",
    "end": "1399619"
  },
  {
    "text": "introduced an interesting concept of actions which we call as passport actions and pass protections because",
    "start": "1399619",
    "end": "1405259"
  },
  {
    "text": "passport here is a carrier for these actions earlier I mentioned that",
    "start": "1405259",
    "end": "1410629"
  },
  {
    "text": "passport is an internal identity token which is not sent back to the device right so whenever an identity mutation",
    "start": "1410629",
    "end": "1416809"
  },
  {
    "text": "happens we need to send the updated identity back to device in the token that it understands",
    "start": "1416809",
    "end": "1422490"
  },
  {
    "text": "and that is where passport actions come into play and when this mutation happens the downstream service that actually",
    "start": "1422490",
    "end": "1428550"
  },
  {
    "text": "perform the mutation in that request sends an explicit signal in the form of passport actions while responding to the",
    "start": "1428550",
    "end": "1434910"
  },
  {
    "text": "request this signal is used by the es",
    "start": "1434910",
    "end": "1441030"
  },
  {
    "text": "layer at at the edge to create or update the corresponding type of token and that token is then sent back to the device so",
    "start": "1441030",
    "end": "1447050"
  },
  {
    "text": "let's look at some of the examples where we are using these passport actions for identity mutations can you folks think",
    "start": "1447050",
    "end": "1455670"
  },
  {
    "text": "of a very basic example of an identity mutation anyone user login right because",
    "start": "1455670",
    "end": "1464430"
  },
  {
    "text": "before user login happens we don't know the identity of the user and we call them non-member and after user login and",
    "start": "1464430",
    "end": "1471390"
  },
  {
    "text": "after user login we have verified that they are a paying member and we have authenticated their credentials we call",
    "start": "1471390",
    "end": "1478200"
  },
  {
    "text": "them current member so we need to send this current member identity back to the device in the form of a token that the",
    "start": "1478200",
    "end": "1483900"
  },
  {
    "text": "device understands so if the device understands cookies we need to send the current member cookies back and if the",
    "start": "1483900",
    "end": "1488940"
  },
  {
    "text": "device understands missing protocol we need to send the Missal current member missile tokens back so let's look at the",
    "start": "1488940",
    "end": "1495540"
  },
  {
    "text": "same user login flow in this new architecture just like before login to the Netflix app you will enter",
    "start": "1495540",
    "end": "1501090"
  },
  {
    "text": "your credentials you will hit next that request will then land on one of the API servers is routed by the H proxy",
    "start": "1501090",
    "end": "1507980"
  },
  {
    "text": "the new thing in this architecture is that the es code running in Zul will create a passport for this login request",
    "start": "1507980",
    "end": "1514470"
  },
  {
    "text": "and send it to API it the passport just has device identity information that is the ESN because we don't know the user",
    "start": "1514470",
    "end": "1520440"
  },
  {
    "text": "identity yet api will then call auth Service to validate the credentials will",
    "start": "1520440",
    "end": "1527040"
  },
  {
    "text": "send the passport along and once auth service successfully validates the credentials unlike before where it would",
    "start": "1527040",
    "end": "1534750"
  },
  {
    "text": "use to issue cookies now it sends back a passport with the updated current number identity along with a user action user",
    "start": "1534750",
    "end": "1540960"
  },
  {
    "text": "login passport action the es code running in Zul sees this user login",
    "start": "1540960",
    "end": "1547110"
  },
  {
    "text": "action along with the updated passport and that is a signal explicit signal that it needs to create new cookies for",
    "start": "1547110",
    "end": "1553860"
  },
  {
    "text": "the for the current member identity so then it calls cookie service creates a new",
    "start": "1553860",
    "end": "1559560"
  },
  {
    "text": "cookie and that cookie is sent back to the device as a set cookie header as you should so as you can see this passport",
    "start": "1559560",
    "end": "1565170"
  },
  {
    "text": "action acts as an adapter pattern wherein you have an internal token that is passport and you have an external token that is cookie and passport action",
    "start": "1565170",
    "end": "1572550"
  },
  {
    "text": "bridges the gap between the two it also provides us with a very clean separation of concerns",
    "start": "1572550",
    "end": "1578130"
  },
  {
    "text": "now auth service is only responsible for authenticating users validating credentials and the token creation is",
    "start": "1578130",
    "end": "1585090"
  },
  {
    "text": "taken care by the es layer and because of this the es or the auth service does",
    "start": "1585090",
    "end": "1590610"
  },
  {
    "text": "not need to know about different types of token that it needs to send another",
    "start": "1590610",
    "end": "1596580"
  },
  {
    "text": "example of an identity mutation is a profile switch you folks must be having",
    "start": "1596580",
    "end": "1601740"
  },
  {
    "text": "multiple profiles on your Netflix account right it's a nice feature each profile has its own identity because we",
    "start": "1601740",
    "end": "1609300"
  },
  {
    "text": "show personalized content for each profile so whenever you switch to a different profile our downstream",
    "start": "1609300",
    "end": "1615480"
  },
  {
    "text": "services switching is switching your identity and fetching a new home page for that identity and when this happens",
    "start": "1615480",
    "end": "1621780"
  },
  {
    "text": "we need to send the switch profile identity back to the device in the form of token that it understands so these",
    "start": "1621780",
    "end": "1629340"
  },
  {
    "text": "are just couple of examples where we use these passport actions out of 30 plus different flows which we use for which",
    "start": "1629340",
    "end": "1635910"
  },
  {
    "text": "we have at Netflix so these passport actions have two benefits firstly as I",
    "start": "1635910",
    "end": "1644550"
  },
  {
    "text": "mentioned it provides a clean separation of concerns and second is since now all",
    "start": "1644550",
    "end": "1650370"
  },
  {
    "text": "the identity mutation happens why are these passport actions we could instrument these actions with much",
    "start": "1650370",
    "end": "1655410"
  },
  {
    "text": "better logging and metrics which provides us with much increased visibility that was not there earlier so",
    "start": "1655410",
    "end": "1662420"
  },
  {
    "text": "just to summarize we moved to a removed authentication to the edge and",
    "start": "1662420",
    "end": "1669200"
  },
  {
    "text": "streamline the identity resolution as well as the mutation paths making the consumption and of user and device",
    "start": "1669200",
    "end": "1677850"
  },
  {
    "text": "identity by a passport much more efficient secure and simple",
    "start": "1677850",
    "end": "1684289"
  },
  {
    "text": "so let's look at some of the wins that we saw as a result of this architecture",
    "start": "1685389",
    "end": "1691360"
  },
  {
    "text": "first and foremost we moved to a token agnostic identity model where the star",
    "start": "1697179",
    "end": "1704000"
  },
  {
    "text": "systems consuming identity did not have to worry about any of the authentication concerns this was a very big win in",
    "start": "1704000",
    "end": "1711200"
  },
  {
    "text": "itself it greatly simplified their code bases because now they could remove all",
    "start": "1711200",
    "end": "1716720"
  },
  {
    "text": "the authentication related code and it also simplified their operational model",
    "start": "1716720",
    "end": "1721940"
  },
  {
    "text": "because authentication and identity was no longer there concerned they would just consume the identity present in",
    "start": "1721940",
    "end": "1727100"
  },
  {
    "text": "passport and focus on their business logic it also greatly simplified",
    "start": "1727100",
    "end": "1736429"
  },
  {
    "text": "authorization because we now put enough claims in passport while resolving the",
    "start": "1736429",
    "end": "1743389"
  },
  {
    "text": "identity which the downstream services can use to make authorization decisions",
    "start": "1743389",
    "end": "1748450"
  },
  {
    "text": "earlier these services were just being handed over to values number four",
    "start": "1748450",
    "end": "1754820"
  },
  {
    "text": "customer ID and a string for ESN and there was no way to know how this identity was resolved just by looking at these values and we also moved to a",
    "start": "1754820",
    "end": "1766760"
  },
  {
    "text": "model that is much more extensible now it's not it's no longer just two values for user and device identity services",
    "start": "1766760",
    "end": "1773539"
  },
  {
    "text": "now consume Passport as a form of identity which is much more extensible and if you have to add new attributes",
    "start": "1773539",
    "end": "1779029"
  },
  {
    "text": "about a user or device identity we can do so in fact we see a pattern at",
    "start": "1779029",
    "end": "1786200"
  },
  {
    "text": "Netflix where once a service gets identity in a request it then takes that identity and makes a remote call to a",
    "start": "1786200",
    "end": "1792830"
  },
  {
    "text": "service called a subscriber service to get more information about the subscriber meaning like their membership",
    "start": "1792830",
    "end": "1798980"
  },
  {
    "text": "status or the which plant they are on and there are multiple services in the",
    "start": "1798980",
    "end": "1804139"
  },
  {
    "text": "same request path making the same redundant call to subscribe or service so looking into the future we could",
    "start": "1804139",
    "end": "1810049"
  },
  {
    "text": "possibly call subscriber service from Zul and put the latest subscriber data in passport for other services to",
    "start": "1810049",
    "end": "1816529"
  },
  {
    "text": "consume thereby avoiding all this redundant calls to a subscriber service so the",
    "start": "1816529",
    "end": "1822919"
  },
  {
    "text": "point here is now we have since we have this extensible structure it gives us more opportunities for such",
    "start": "1822919",
    "end": "1828320"
  },
  {
    "text": "optimizations as I mentioned we",
    "start": "1828320",
    "end": "1836509"
  },
  {
    "text": "offloaded token processing from all material surfaces and all origin services which resulted in two significant gains for many of their",
    "start": "1836509",
    "end": "1842839"
  },
  {
    "text": "system metrics we were also able to find",
    "start": "1842839",
    "end": "1848599"
  },
  {
    "text": "you Rea services based on the token processing profile which was not possible earlier because for example",
    "start": "1848599",
    "end": "1856159"
  },
  {
    "text": "earlier the API origin service would process all the tokens in the same JVM",
    "start": "1856159",
    "end": "1862450"
  },
  {
    "text": "to give you an example missile protocol is very CPU intensive and adds a lot of heap pressure so we",
    "start": "1862450",
    "end": "1869599"
  },
  {
    "text": "could we were able to fine tune the missile server by choosing an instance with more compute units and a much",
    "start": "1869599",
    "end": "1875029"
  },
  {
    "text": "aggressive GC settings profile",
    "start": "1875029",
    "end": "1878440"
  },
  {
    "text": "so speaking of gains let's take API server as an example so here is a graph",
    "start": "1881200",
    "end": "1886579"
  },
  {
    "text": "of CPU two RPS ratio as well as load average for an API server and for both",
    "start": "1886579",
    "end": "1891829"
  },
  {
    "text": "those metrics lower number is better we saw 30% reduction in CPU cost per seat",
    "start": "1891829",
    "end": "1898070"
  },
  {
    "text": "per request and a 40% reduction in load average which roughly contributed to half a million in savings per year for",
    "start": "1898070",
    "end": "1904519"
  },
  {
    "text": "ec2 costs those the those gradual drops that you see there is because we",
    "start": "1904519",
    "end": "1910700"
  },
  {
    "text": "launched token termination at the edge during those times by a percentage of requests base tile here is another graph",
    "start": "1910700",
    "end": "1920719"
  },
  {
    "text": "which shows the response time for API server we saw 30% reduction in average latency for API responses and p99",
    "start": "1920719",
    "end": "1928279"
  },
  {
    "text": "dropping by 20% and since most of our",
    "start": "1928279",
    "end": "1936079"
  },
  {
    "text": "servers run on JVM we have garbage collection we saw a significant",
    "start": "1936079",
    "end": "1941119"
  },
  {
    "text": "reduction in GC pressure and GC pause times for API cluster",
    "start": "1941119",
    "end": "1946419"
  },
  {
    "text": "we now have much increased visibility into identities flowing in and out of",
    "start": "1948970",
    "end": "1953990"
  },
  {
    "text": "metric system and also into the identity mutations happening in a given request that means we can resolve identity",
    "start": "1953990",
    "end": "1960920"
  },
  {
    "text": "related issues much faster now this is because we now own the token creation as",
    "start": "1960920",
    "end": "1968270"
  },
  {
    "text": "well as identity resolution paths so we could instrument both those paths with much better metrics and logging that",
    "start": "1968270",
    "end": "1974150"
  },
  {
    "text": "provides us with this increased visibility I cannot emphasize this point",
    "start": "1974150",
    "end": "1981440"
  },
  {
    "text": "more earlier we had to consult multiple teams and touch multiple services code base in order to make a change which was",
    "start": "1981440",
    "end": "1987740"
  },
  {
    "text": "authentication or identity related now it just involves one of our services greatly simplifying the developer",
    "start": "1987740",
    "end": "1994490"
  },
  {
    "text": "experience so a change before used to take multiple weeks now just takes a few",
    "start": "1994490",
    "end": "1999860"
  },
  {
    "text": "days and last but not the least because",
    "start": "1999860",
    "end": "2007900"
  },
  {
    "text": "of this architecture it created a it created a separation of concerns among",
    "start": "2007900",
    "end": "2013000"
  },
  {
    "text": "all the teams and because of the separation of concerns our team could focus on server-side security and",
    "start": "2013000",
    "end": "2019560"
  },
  {
    "text": "gradually and eventually make it better and more secure other teams did not",
    "start": "2019560",
    "end": "2025060"
  },
  {
    "text": "prioritize security because it was not their primary charter and more important than that they had other product",
    "start": "2025060",
    "end": "2030580"
  },
  {
    "text": "features to focus on so just to",
    "start": "2030580",
    "end": "2036700"
  },
  {
    "text": "summarize these are some of the key learnings that we saw as a result of these architecture and if you are also",
    "start": "2036700",
    "end": "2043090"
  },
  {
    "text": "in a similar boat as us and you don't have the luxury of implementing your authentication from scratch maybe some",
    "start": "2043090",
    "end": "2050379"
  },
  {
    "text": "of these learnings could help you in some of your decisions thank you",
    "start": "2050380",
    "end": "2057340"
  },
  {
    "text": "[Applause]",
    "start": "2057340",
    "end": "2066760"
  },
  {
    "text": "okay we have about 10 or 15 minutes for questions if anyone has one you want to might have to wait for me to run the",
    "start": "2066760",
    "end": "2072919"
  },
  {
    "text": "microphone back and forth unless we have a second one two questions the first one",
    "start": "2072919",
    "end": "2080510"
  },
  {
    "text": "I have one edge case for you I want to hear how you Hanyu it suppose I use TV",
    "start": "2080510",
    "end": "2087080"
  },
  {
    "text": "to log in to Netflix so you mentioned that your cookie service could be done",
    "start": "2087080",
    "end": "2093200"
  },
  {
    "text": "right it's like I was locked in then your cookie sir is down you sent me to",
    "start": "2093200",
    "end": "2098660"
  },
  {
    "text": "reschedule cookie with a short expiration time and then suppose your",
    "start": "2098660",
    "end": "2105380"
  },
  {
    "text": "expiring in time is 10 days then 10 days Li I turn off my TV first then 10 days later I turn turn on my TV again so",
    "start": "2105380",
    "end": "2113089"
  },
  {
    "text": "should I see your login page or I'm already logged in so your question is if",
    "start": "2113089",
    "end": "2122390"
  },
  {
    "text": "you get a rescheduled cookie and you turn your TV on after that many days will you get a login page or no so first",
    "start": "2122390",
    "end": "2128780"
  },
  {
    "text": "of all our expiration time is not ten days it's few hours so it's very short in general without the rescheduled",
    "start": "2128780",
    "end": "2134599"
  },
  {
    "text": "cookie and rescheduled cookie has even smaller expiration time so it will not be ten days it will be much before than",
    "start": "2134599",
    "end": "2140660"
  },
  {
    "text": "that and if even if you have a rescheduled cookie you will not get the log login page we will try to renew that",
    "start": "2140660",
    "end": "2145880"
  },
  {
    "text": "cookie if our services if we can reach one of our services so that that stands",
    "start": "2145880",
    "end": "2151339"
  },
  {
    "text": "out to a question basically we will try to renew that cookie and you will not be logged out in that case all of what you",
    "start": "2151339",
    "end": "2164750"
  },
  {
    "text": "had There was assuming that requests are always coming from outside through Zul there are there any requests that",
    "start": "2164750",
    "end": "2170359"
  },
  {
    "text": "originate inside of Netflix that need to use the authorization services and so",
    "start": "2170359",
    "end": "2175580"
  },
  {
    "text": "they're not passed through from the client requests they originate inside",
    "start": "2175580",
    "end": "2181369"
  },
  {
    "text": "and how do you deal with that situation so we don't have that many use cases as of now we are trying to do push",
    "start": "2181369",
    "end": "2187820"
  },
  {
    "text": "notifications where in requests originate from within Netflix and for",
    "start": "2187820",
    "end": "2192830"
  },
  {
    "text": "that they use a different form of tokens but we do still own those tokens but they don't use this air services so",
    "start": "2192830",
    "end": "2203600"
  },
  {
    "text": "we when you talk to external services do you pass the passport or do you have like in case of Jade JWT it okay",
    "start": "2203600",
    "end": "2210830"
  },
  {
    "text": "we never send passport to external services it's only within Netflix",
    "start": "2210830",
    "end": "2217240"
  },
  {
    "text": "so given that you're just one team right how did you coordinate like how did you",
    "start": "2223559",
    "end": "2229019"
  },
  {
    "text": "convince management that the importance of this thing and how did you coordinate this transition since all the",
    "start": "2229019",
    "end": "2235349"
  },
  {
    "text": "authentication it was in all these different micro services I'm assuming there are different teams and now you have to form a new team maybe to do this",
    "start": "2235349",
    "end": "2242039"
  },
  {
    "text": "work how did you safely go through that transition goes back to my very initial",
    "start": "2242039",
    "end": "2247380"
  },
  {
    "text": "point in the first few slides that we were seeing so many issues and it was a complicated architecture and so even",
    "start": "2247380",
    "end": "2252509"
  },
  {
    "text": "management saw that there is a lot of pain involved when there are issues that pop up like this and for this eventual",
    "start": "2252509",
    "end": "2258660"
  },
  {
    "text": "migration it was not a quarter's job it took many years it took two to three years for us to migrate to this new path",
    "start": "2258660",
    "end": "2267079"
  },
  {
    "text": "so in between you talked about moving the no cookie service missile service",
    "start": "2273140",
    "end": "2278369"
  },
  {
    "text": "all to the edge right what about the km is what Apple to the chemists sorry look",
    "start": "2278369",
    "end": "2284279"
  },
  {
    "text": "kms is owned by a separate team and they they own that in the operate that you",
    "start": "2284279",
    "end": "2289920"
  },
  {
    "text": "talking about the key management service right Colin hears no the cookie missiles",
    "start": "2289920",
    "end": "2297960"
  },
  {
    "text": "how is everything moved to the edge you can't move the kms to the edge and when",
    "start": "2297960",
    "end": "2303150"
  },
  {
    "text": "you say kms you mean the key management service yeah it's not moved to the edge but it's a separate team that owns and",
    "start": "2303150",
    "end": "2308339"
  },
  {
    "text": "operates that service so the cookie so that is the edge but it calls kms yes",
    "start": "2308339",
    "end": "2315170"
  },
  {
    "text": "how did you make sure that your testing is covering all the scenarios and then",
    "start": "2328819",
    "end": "2334200"
  },
  {
    "text": "what kind of different testing yeah good question so we rely heavily on unit tests and",
    "start": "2334200",
    "end": "2341460"
  },
  {
    "text": "integration tests and we also test these new services by end-to-end tests and",
    "start": "2341460",
    "end": "2350509"
  },
  {
    "text": "that is the first gate so we make sure there is enough test coverage there and then when we roll out this feature",
    "start": "2350509",
    "end": "2356880"
  },
  {
    "text": "we don't do it all at once we have these dials which are based on percentage of requests we also have dials wherein we",
    "start": "2356880",
    "end": "2363059"
  },
  {
    "text": "roll out certain features only for certain device types like we just told it for example we may roll out this",
    "start": "2363059",
    "end": "2368760"
  },
  {
    "text": "token termination just for a small percentage of iOS devices or a small percentage of android mobiles and things",
    "start": "2368760",
    "end": "2374549"
  },
  {
    "text": "like that so it was a very controlled roll out and and testing was done before that since there are many teams that are",
    "start": "2374549",
    "end": "2385619"
  },
  {
    "text": "interested in the passport and a few that are updating that are interested if you can share some of your experience",
    "start": "2385619",
    "end": "2390660"
  },
  {
    "text": "and evolving the passport structure like how do you decide what use cases will be",
    "start": "2390660",
    "end": "2396599"
  },
  {
    "text": "back by the passport and what data goes in there and what doesn't yeah we are very particular about what",
    "start": "2396599",
    "end": "2403319"
  },
  {
    "text": "data goes in there because we don't want passport to become a kitchen sink of things that people want so we we choose",
    "start": "2403319",
    "end": "2412619"
  },
  {
    "text": "it based on how frequently the attribute is used so and and and something that",
    "start": "2412619",
    "end": "2419190"
  },
  {
    "text": "doesn't change that often so let's say customer ID or account owner ID does not change but let's say membership status",
    "start": "2419190",
    "end": "2426390"
  },
  {
    "text": "can change so that's why we don't put membership status in Passport even if many teams has asked us so we go by the",
    "start": "2426390",
    "end": "2435329"
  },
  {
    "text": "use case and we look at what is feasible and what is not but we generally we are very strict about what goes in Passport",
    "start": "2435329",
    "end": "2440819"
  },
  {
    "text": "and for services that want additional information that is not in passport we",
    "start": "2440819",
    "end": "2446760"
  },
  {
    "text": "encourage them to call make a remote call to the service like let's say subscribe or service like give them in the passport and they'll give you more",
    "start": "2446760",
    "end": "2452220"
  },
  {
    "text": "information so that's the model that we have been following so far follow-up",
    "start": "2452220",
    "end": "2457410"
  },
  {
    "text": "question to that sure when you evolve the passport protobuf schema how do you coordinate that across all of the",
    "start": "2457410",
    "end": "2463770"
  },
  {
    "text": "clients so that was the whole point of the abstraction Passport introspect err",
    "start": "2463770",
    "end": "2468839"
  },
  {
    "text": "wherein we the teams are not directly consuming the proto they are in a way",
    "start": "2468839",
    "end": "2474569"
  },
  {
    "text": "they are but it is consumed Wireless passport introspect err so we keep maintain that contract and that",
    "start": "2474569",
    "end": "2480390"
  },
  {
    "text": "interface that you saw we maintain that and when it comes to like what if",
    "start": "2480390",
    "end": "2487170"
  },
  {
    "text": "someone's using an old client library how do you go track that down and so good thing about protobuf is it",
    "start": "2487170",
    "end": "2492900"
  },
  {
    "text": "the additive changes are backwards compatible so I think some of that helps us so we think that's Netflix services",
    "start": "2492900",
    "end": "2503999"
  },
  {
    "text": "how do you pass around passport in what format it's passed explicitly in a request so let's see if you have a G RPC",
    "start": "2503999",
    "end": "2510479"
  },
  {
    "text": "request that to a back-end service we pass passport as a proto binary data",
    "start": "2510479",
    "end": "2515849"
  },
  {
    "text": "it's it's passed either as a base64 encoded string or as a byte array no",
    "start": "2515849",
    "end": "2524519"
  },
  {
    "text": "explicitly in the API in the payload yeah yes yes",
    "start": "2524519",
    "end": "2532369"
  },
  {
    "text": "hi so for decoding the passport in the services you know you provide that",
    "start": "2537500",
    "end": "2543300"
  },
  {
    "text": "introspect err interface so I'm curious if you guys require developers of the",
    "start": "2543300",
    "end": "2548880"
  },
  {
    "text": "services to all use a like Java or a JVM language so you only have to write a",
    "start": "2548880",
    "end": "2554760"
  },
  {
    "text": "library support for that or do you support the library in different languages though interface that I showed",
    "start": "2554760",
    "end": "2560070"
  },
  {
    "text": "was for Java but we also have similar interface for JavaScript but those are the only two stacks which use passport",
    "start": "2560070",
    "end": "2567619"
  },
  {
    "text": "well it's not getting tired of questions",
    "start": "2568760",
    "end": "2573890"
  },
  {
    "text": "so authentication is one transformation you saw that you could refactor across the services are there any others that",
    "start": "2574040",
    "end": "2579630"
  },
  {
    "text": "you've identified you mean within this domain or there are always there but our",
    "start": "2579630",
    "end": "2590550"
  },
  {
    "text": "team specifically focuses on as authentication aspect so that is what there might be other teams that might be",
    "start": "2590550",
    "end": "2596339"
  },
  {
    "text": "doing such optimizations but I might not not I may not be the best person to answer that how do you validate the",
    "start": "2596339",
    "end": "2604109"
  },
  {
    "text": "passport when your si when you receive it on the service what do you mean by",
    "start": "2604109",
    "end": "2609930"
  },
  {
    "text": "validator so how you include these these authentication fields in the passport",
    "start": "2609930",
    "end": "2615359"
  },
  {
    "text": "but how do you validate it so how do you make sure the passport is something you generated so as I mentioned it's not a",
    "start": "2615359",
    "end": "2624359"
  },
  {
    "text": "token that is coming from an external device or an external service it is it",
    "start": "2624359",
    "end": "2629430"
  },
  {
    "text": "is minted within Zul so unless we introduce some bug in Zul we can trust",
    "start": "2629430",
    "end": "2635970"
  },
  {
    "text": "the passport for what the identity present in passport so when you did the",
    "start": "2635970",
    "end": "2645329"
  },
  {
    "text": "migration was there any specific steps you followed because especially because of the legacy API is like were there any",
    "start": "2645329",
    "end": "2652109"
  },
  {
    "text": "challenges to like to maintain legacy API is along with to make this",
    "start": "2652109",
    "end": "2658800"
  },
  {
    "text": "incorporate the change in the legacy API is because they they had they work differently compared to what you have",
    "start": "2658800",
    "end": "2664740"
  },
  {
    "text": "yeah yeah but definitely when it's when comes specifically to the legacy API is",
    "start": "2664740",
    "end": "2670020"
  },
  {
    "text": "we saw lot of pain migrating those services to this news pass new new passport so what we did was",
    "start": "2670020",
    "end": "2675300"
  },
  {
    "text": "we refactored the legacy API code in such a way that it can it can operate in both the model like without passport and",
    "start": "2675300",
    "end": "2682170"
  },
  {
    "text": "with passport and without passport meaning the old way of operate operation and the new way is using passport where",
    "start": "2682170",
    "end": "2688260"
  },
  {
    "text": "in that token gets terminated at the edge so we tested that and we found a lot of issues and it was a slow and",
    "start": "2688260",
    "end": "2694590"
  },
  {
    "text": "painful migration so once a passport is",
    "start": "2694590",
    "end": "2701460"
  },
  {
    "text": "created modified so good question there",
    "start": "2701460",
    "end": "2710430"
  },
  {
    "text": "are only certain services that have a need to modify the passport not anyone can modify the passport and we since the",
    "start": "2710430",
    "end": "2716880"
  },
  {
    "text": "integration this since the identity information in passport is integrity protected we don't provide this key key",
    "start": "2716880",
    "end": "2722970"
  },
  {
    "text": "permission to all these services and for let's say some service that needs to mutate the identity in the passport it",
    "start": "2722970",
    "end": "2728850"
  },
  {
    "text": "then passed passes the same passport in the same request so if there is an internal orchestration happening the",
    "start": "2728850",
    "end": "2734370"
  },
  {
    "text": "service ensures that it is passing the new passport and not the old one but there are very a handful of services",
    "start": "2734370",
    "end": "2740130"
  },
  {
    "text": "that have the ability to modify a passport in Netflix ecosystem yes and if",
    "start": "2740130",
    "end": "2757200"
  },
  {
    "text": "it is external facing and you are trusting the passport token going there",
    "start": "2757200",
    "end": "2762360"
  },
  {
    "text": "where is the so then you have an extranet and an internet intranet in between well when we create a passport",
    "start": "2762360",
    "end": "2772290"
  },
  {
    "text": "we are looking at the token that we issued at some point right in past so that put token also is cryptographically",
    "start": "2772290",
    "end": "2779550"
  },
  {
    "text": "encrypted so once we are able to decrypt and verify its identity then we can safely create a passport from that no",
    "start": "2779550",
    "end": "2791390"
  },
  {
    "text": "rule is internal it is it is attached to LPS which are facing the external",
    "start": "2791390",
    "end": "2799880"
  },
  {
    "text": "any more questions okay probably last one I don't much it's relying to the",
    "start": "2801720",
    "end": "2812940"
  },
  {
    "text": "same thing about like when it crossed let's say you have zulan inside a cluster so you you have a kind of fully",
    "start": "2812940",
    "end": "2819390"
  },
  {
    "text": "trust environment at some point you might cross boundaries where you have to kind of a have a zero trust so do you",
    "start": "2819390",
    "end": "2827460"
  },
  {
    "text": "convert back your passport in order to send it to another cluster that like could be potential middleware or things",
    "start": "2827460",
    "end": "2836460"
  },
  {
    "text": "like that could be if we don't send passport to any of the external services as somebody asked earlier as well",
    "start": "2836460",
    "end": "2843360"
  },
  {
    "text": "the only time we need to send an external token is when we are responding back to the device and that's where passport action comes into play did I",
    "start": "2843360",
    "end": "2851070"
  },
  {
    "text": "answer that question like is that you question we don't send it to any services passport is within the network's ecosystem and we don't send it",
    "start": "2851070",
    "end": "2857550"
  },
  {
    "text": "to any any middleware or any any other services there are not within or or VPC",
    "start": "2857550",
    "end": "2863600"
  },
  {
    "text": "all right let's thank our speaker again for a great presentation and a great discussion [Applause]",
    "start": "2863600",
    "end": "2871929"
  }
]