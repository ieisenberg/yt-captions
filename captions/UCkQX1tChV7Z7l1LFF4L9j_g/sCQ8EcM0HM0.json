[
  {
    "text": "uh welcome everyone uh to the last session of the conference I close things",
    "start": "14599",
    "end": "19640"
  },
  {
    "text": "out so welcome my name is Ken Jones I'm a senior instructor with Marana we",
    "start": "19640",
    "end": "25560"
  },
  {
    "text": "specialize in open source training including Android and so what I'm going to to present here is a session on",
    "start": "25560",
    "end": "32520"
  },
  {
    "text": "fragments it's kind of a continuation of this honeycom is uh type set of topics",
    "start": "32520",
    "end": "38120"
  },
  {
    "text": "you learn about the action bar the last session if you were here and so now I'm going to tell you what in the world",
    "start": "38120",
    "end": "43239"
  },
  {
    "text": "these fragments are and how to use them now you may probably have already heard a little bit about fragments in case you",
    "start": "43239",
    "end": "50120"
  },
  {
    "text": "haven't what exactly is a fragment well it's a class that implements a portion",
    "start": "50120",
    "end": "55960"
  },
  {
    "text": "of an activity so it's going to either represent some portion of the interface",
    "start": "55960",
    "end": "61120"
  },
  {
    "text": "or some type of operation that we want the activity to be performing now the rationale for",
    "start": "61120",
    "end": "67960"
  },
  {
    "text": "fragments is to provide more modular activity design as uh Android uh was",
    "start": "67960",
    "end": "73880"
  },
  {
    "text": "rolled out to tablets you know the uh the layouts used to work fine for a little handset wouldn't necessarily look",
    "start": "73880",
    "end": "80720"
  },
  {
    "text": "good as they uh scaled up to a full tablet size you have a lot of unused",
    "start": "80720",
    "end": "86360"
  },
  {
    "text": "space well the resource system has been around for long time to be able to provide alternate sets of layouts",
    "start": "86360",
    "end": "93240"
  },
  {
    "text": "depending upon screen size and orientation but um you know if we put a",
    "start": "93240",
    "end": "98399"
  },
  {
    "text": "lot more things on the activity that means that we need to hook up more behaviors to them as well so you that",
    "start": "98399",
    "end": "103799"
  },
  {
    "text": "was the challenge that was being faced and so that's why fragments were uh introduced so that we can have a class",
    "start": "103799",
    "end": "109759"
  },
  {
    "text": "encapsulating both a portion of the layout and the behavior that we want for that layout and then an activity will be",
    "start": "109759",
    "end": "116479"
  },
  {
    "text": "able to uh compose itself of whatever fragments are appropriate for the screen size and the resolution that we have so",
    "start": "116479",
    "end": "124159"
  },
  {
    "text": "as I was implying there the fragments that we create must be embedded in activities they cannot run as any",
    "start": "124159",
    "end": "130679"
  },
  {
    "text": "Standalone entities so it's not as though you're ever going to see a fragment just kind of flying around on the screen by itself uh most fragments uh will Define",
    "start": "130679",
    "end": "138720"
  },
  {
    "text": "their own layouts of views that will just become incorporated into the overall activity view hierarchy but",
    "start": "138720",
    "end": "145440"
  },
  {
    "text": "that's not required turns out we can have a fragment that has no layout whatsoever it turns out to be a rather",
    "start": "145440",
    "end": "151280"
  },
  {
    "text": "useful technique to uh have I'll show you some examples as to why we might want to do that later on now if you've",
    "start": "151280",
    "end": "158760"
  },
  {
    "text": "done any type of Android programming you're probably quite familiar with the life cycle of the activity class and",
    "start": "158760",
    "end": "164560"
  },
  {
    "text": "different life cycle methods that are invoked well because a fragment lives inside of an activity it's going to have",
    "start": "164560",
    "end": "170000"
  },
  {
    "text": "its own life cycle as well so we're going to see how the life cycle of a fragment mirrors that of the activity",
    "start": "170000",
    "end": "176680"
  },
  {
    "text": "that is contained within it now in terms of actually uh you know",
    "start": "176680",
    "end": "182040"
  },
  {
    "text": "creating the activity that uh that then uses the uh fragment we'll see that there's two different approaches we can",
    "start": "182040",
    "end": "188360"
  },
  {
    "text": "use one is that the fragment can be what I think of as a static part of the activity it's created as soon as the",
    "start": "188360",
    "end": "194040"
  },
  {
    "text": "activity is created and it's always there in the activity but we also have the capability of instantiating",
    "start": "194040",
    "end": "201680"
  },
  {
    "text": "fragments at runtime and adding them to an activity and then dynamically managing these fragments for interesting",
    "start": "201680",
    "end": "208799"
  },
  {
    "text": "effects as well so I'll show you both techniques for fragment management so you want to do fragments",
    "start": "208799",
    "end": "216000"
  },
  {
    "text": "well if you're programming in honeycom or later there's a set of classes and",
    "start": "216000",
    "end": "221360"
  },
  {
    "text": "the primary ones that we are dealing with are shown here on the screen fragment is going to be our base class",
    "start": "221360",
    "end": "227239"
  },
  {
    "text": "from which we derive all of our fragment subclasses all of our specific implementations thereof fragment manager",
    "start": "227239",
    "end": "233480"
  },
  {
    "text": "will be using to interact with the fragment objects that are part of our activity and then we'll talk about the",
    "start": "233480",
    "end": "239000"
  },
  {
    "text": "purpose of the fragment transaction class and how it allows us to perform an atomic set of operations on a collection",
    "start": "239000",
    "end": "245799"
  },
  {
    "text": "of fragments in our activity now these were introduced in honeycomb in API 11",
    "start": "245799",
    "end": "252519"
  },
  {
    "text": "so if you know that your target is going to be honeycomb or later you can use these directly but what if you're trying",
    "start": "252519",
    "end": "259840"
  },
  {
    "text": "to be compatible with older versions you want your application to run in gingerbread or froo or even you know",
    "start": "259840",
    "end": "264880"
  },
  {
    "text": "earlier like eclair well that's where the compatibility package comes into place",
    "start": "264880",
    "end": "270560"
  },
  {
    "text": "compatibility package provided by Google uh is a Java library that we can incorporate in our application and it",
    "start": "270560",
    "end": "278080"
  },
  {
    "text": "implements support for fragments and other honeycom features uh loaders being the most significant of those and it",
    "start": "278080",
    "end": "284720"
  },
  {
    "text": "does so in a way that's compatible all the way back to Donut to version 1.6",
    "start": "284720",
    "end": "290720"
  },
  {
    "text": "so each of the classes that are used for manipulating fragments that are part of",
    "start": "290720",
    "end": "297199"
  },
  {
    "text": "the standard honeycom API and later are going to be reflected in this compatibility package and they work",
    "start": "297199",
    "end": "303160"
  },
  {
    "text": "pretty much the same as their counterparts in the latest Android platform so for more detailed",
    "start": "303160",
    "end": "308720"
  },
  {
    "text": "documentation of all these classes and methods from the compatibility package you can reference that now when you",
    "start": "308720",
    "end": "314160"
  },
  {
    "text": "download the compatibility package you can also use Java do to generate uh documentation of those uh those classes",
    "start": "314160",
    "end": "321080"
  },
  {
    "text": "if you want to do that as well so one thing to make note is that if you are um",
    "start": "321080",
    "end": "328919"
  },
  {
    "text": "using compatibility package and you're making use of some of these compatibility classes that are listed",
    "start": "328919",
    "end": "336000"
  },
  {
    "text": "down here below those look rather familiar but notice that the package names are different here uh those are",
    "start": "336000",
    "end": "341199"
  },
  {
    "text": "what you're going to be stuck with it's not as though these packages are smart enough to try to determine well what",
    "start": "341199",
    "end": "346759"
  },
  {
    "text": "version of the API does the actual device have am I running on honeycomb and if so switch over to the native",
    "start": "346759",
    "end": "353319"
  },
  {
    "text": "implementations on the system so to speak so if you are using compatibility package that's what your application is",
    "start": "353319",
    "end": "359720"
  },
  {
    "text": "going to be run against no matter what version the actual device is actually running now that means that as new",
    "start": "359720",
    "end": "365880"
  },
  {
    "text": "features get added to the apis you know Ice Cream Sandwich comes out and adds you know new classes and new methods to",
    "start": "365880",
    "end": "373080"
  },
  {
    "text": "the fragment capabilities if you're using the compatibility package you're not going to get them even if you run on",
    "start": "373080",
    "end": "378639"
  },
  {
    "text": "Ice Cream Sandwich so just be aware of that and of course if any bugs are detected and are fixed in the mainline",
    "start": "378639",
    "end": "385560"
  },
  {
    "text": "release it might be a bit of a lag before those are reflected in compatibility package you'd have to",
    "start": "385560",
    "end": "390680"
  },
  {
    "text": "download the new version of the compatibility package and rebuild your application against that as you can see",
    "start": "390680",
    "end": "397160"
  },
  {
    "text": "uh three primary uh classes fragment fragment manager and fragment transaction uh are going to be present",
    "start": "397160",
    "end": "402720"
  },
  {
    "text": "in the compatibility package there's also one that we're going to have to use that uh is unique to compatibility",
    "start": "402720",
    "end": "408800"
  },
  {
    "text": "package it's called fragment activity you must use fragment activity as the",
    "start": "408800",
    "end": "413880"
  },
  {
    "text": "base class for all of your activities that going to be using the fragment capabilities as well as load ERS if",
    "start": "413880",
    "end": "419720"
  },
  {
    "text": "you're going to be using loaders in your activities as well so that's one of those things it's",
    "start": "419720",
    "end": "425639"
  },
  {
    "text": "really easy to forget particularly if you're taking an existing code and you are you know retrofitting it to use",
    "start": "425639",
    "end": "432000"
  },
  {
    "text": "fragments it's really easy to forget to change your base class for your activity there's also the issue of uh well that's",
    "start": "432000",
    "end": "437879"
  },
  {
    "text": "fine for just a standard activity but what if you're using preference activity as a base class or List Activity one of",
    "start": "437879",
    "end": "443599"
  },
  {
    "text": "those nice little convenience on there well we'll see that um there's something",
    "start": "443599",
    "end": "449160"
  },
  {
    "text": "uh in in uh in store for us that we'll be able to use instead but we still have to use fragment activity as our Base",
    "start": "449160",
    "end": "455599"
  },
  {
    "text": "Class if we're using compatibility package uh to download this you can use the SDK manager it's part of the",
    "start": "455599",
    "end": "461759"
  },
  {
    "text": "standard Android open source repository you just grab that and install it once",
    "start": "461759",
    "end": "467919"
  },
  {
    "text": "you've got it on your development system you then need to add the jar file from",
    "start": "467919",
    "end": "473120"
  },
  {
    "text": "the compatibility package into your project and then include it in your Project's build path now you can",
    "start": "473120",
    "end": "478919"
  },
  {
    "text": "certainly do that by hand you know go to your SDK folder look in the extras folder find the jar file for it you know",
    "start": "478919",
    "end": "486199"
  },
  {
    "text": "you know copy it in there and then uh update your build path but in the latest versions of the eclipse ADT plugin",
    "start": "486199",
    "end": "492560"
  },
  {
    "text": "there's a nice little convenience you can just uh do a right click bring up the context sensitive menu for your",
    "start": "492560",
    "end": "498599"
  },
  {
    "text": "project and then near the bottom there's a set of Android tools and there's add compatibility Library there now when you",
    "start": "498599",
    "end": "505919"
  },
  {
    "text": "do that if you've ever tried this before you notice it actually goes out and fetches the compatibility Library live",
    "start": "505919",
    "end": "511400"
  },
  {
    "text": "from the site so it's always going to try to fetch the latest and greatest version and install that so if you don't have network connectivity that might",
    "start": "511400",
    "end": "519839"
  },
  {
    "text": "fail okay so before we get into actually creating any fragments let's take a look at the fragment life cycle so uh just",
    "start": "519839",
    "end": "527680"
  },
  {
    "text": "like our activity class and most of the other application components they're based upon the template method design",
    "start": "527680",
    "end": "533320"
  },
  {
    "text": "pattern fragment based class follows the same type of pattern there are a few dozen methods there defined on the",
    "start": "533320",
    "end": "539760"
  },
  {
    "text": "fragment base uh class and so for us to implement our own fragment we will subclass fragment and override the ones",
    "start": "539760",
    "end": "546200"
  },
  {
    "text": "that make sense for us that we need to implement customized Behavior now the most important methods",
    "start": "546200",
    "end": "552560"
  },
  {
    "text": "to keep in mind are going to be those related to the life cycle of the fragment and these are very similar to",
    "start": "552560",
    "end": "559160"
  },
  {
    "text": "the life cycle methods that we see for an activity in fact six of the seven basic uh activity life cycle methods are",
    "start": "559160",
    "end": "566880"
  },
  {
    "text": "also present on fragment the only only one that's missing is on restart a fragment does not have an on restart",
    "start": "566880",
    "end": "573480"
  },
  {
    "text": "method now the fragment uh you know implementation the purpose of all these life cycle methods are very similar",
    "start": "573480",
    "end": "580240"
  },
  {
    "text": "there is a slight difference that we'll discuss in just a moment but for the most part if you know what you typically do in a non-start or a non-resume in an",
    "start": "580240",
    "end": "587120"
  },
  {
    "text": "activity you know what you need to do in a fragment as well the fragment supplements this list of life cycle",
    "start": "587120",
    "end": "593480"
  },
  {
    "text": "methods with uh five additional ones I think I countle this correctly and so those are mention mention down here at",
    "start": "593480",
    "end": "599720"
  },
  {
    "text": "the bottom the first one that's invoked in the life cycle of a fragment is onattach and this is notifying the",
    "start": "599720",
    "end": "606920"
  },
  {
    "text": "fragment after it's been instantiated that it's just been attached to an activity and the fragment will get a",
    "start": "606920",
    "end": "612720"
  },
  {
    "text": "reference to the activity it's now hosted in as its only argument after the onattach then the oncreate method of the",
    "start": "612720",
    "end": "620399"
  },
  {
    "text": "fragment is invoked this is our chance to initialize our fragment and then on create View and so that's where we're",
    "start": "620399",
    "end": "627079"
  },
  {
    "text": "supposed to actually create The View hierarchy for our fragment so the fragment the overall fragment",
    "start": "627079",
    "end": "633360"
  },
  {
    "text": "initialization and the visual view initialization are separated out in two separate methods so that's something",
    "start": "633360",
    "end": "639800"
  },
  {
    "text": "else that you might have to uh adapt existing code to if you're taking existing activities and transmogrify",
    "start": "639800",
    "end": "647240"
  },
  {
    "text": "them them into fragments how many people have transmogrified anything okay uh so",
    "start": "647240",
    "end": "653200"
  },
  {
    "text": "that's that's our oncreate uh then uh after our oncreate view the system is going to invoke on activity created and",
    "start": "653200",
    "end": "661160"
  },
  {
    "text": "this is letting the fragment know that its host activity has now been completely created so this will be",
    "start": "661160",
    "end": "667079"
  },
  {
    "text": "invoked only once the activities on create method has returned so if we need",
    "start": "667079",
    "end": "672120"
  },
  {
    "text": "to hook into that that's our point there okay at this point we're now into familiar territory uh on start we'll be",
    "start": "672120",
    "end": "678639"
  },
  {
    "text": "invoked when the fragment is uh become invisible on resume when the uh host activity is becoming the foreground",
    "start": "678639",
    "end": "684760"
  },
  {
    "text": "activity on pause when it's no longer the foreground activity on stop when it's no longer visible and then we get a",
    "start": "684760",
    "end": "691040"
  },
  {
    "text": "difference again rather than just a straightforward destruction there's an on Destroy view method where we're",
    "start": "691040",
    "end": "697839"
  },
  {
    "text": "supposed to tear down the view that we created in our on create view now that's normally done for us automatically but",
    "start": "697839",
    "end": "704279"
  },
  {
    "text": "if there's any additional type of cleanup that we need to do for a fragment we could override it and do it then then we have our on Destroy and",
    "start": "704279",
    "end": "711240"
  },
  {
    "text": "then finally there's an on attached method letting the fragment know it is no longer attached to a host activity",
    "start": "711240",
    "end": "717360"
  },
  {
    "text": "and once that method returns then the fragment object will be marked for garbage",
    "start": "717360",
    "end": "722639"
  },
  {
    "text": "collection so one of the things that isn't in the documentation is that for",
    "start": "722639",
    "end": "728959"
  },
  {
    "text": "all of these life cycle methods except for on create view you have to invoke",
    "start": "728959",
    "end": "734240"
  },
  {
    "text": "the super class version of the method if you overwrite it so if you're providing your own custom implementation of on",
    "start": "734240",
    "end": "739839"
  },
  {
    "text": "start on pause on detach or anything else you must invoke the superclass version of that method if you don't",
    "start": "739839",
    "end": "746399"
  },
  {
    "text": "throws an exception wish the documentation told us that but it doesn't found that out the hard way the",
    "start": "746399",
    "end": "751920"
  },
  {
    "text": "only exception is on create view so we don't need to invoke The Base Class",
    "start": "751920",
    "end": "756959"
  },
  {
    "text": "version of on create view there's really no point to it's a it's a it's a do nothing no op stub method that's all it",
    "start": "756959",
    "end": "763320"
  },
  {
    "text": "is at least that's what it is in the compatibility Library I'm assuming that's what it is in the formal",
    "start": "763320",
    "end": "769440"
  },
  {
    "text": "honeycomb Source though I've not been privileged to see that okay so if you're going to be",
    "start": "769440",
    "end": "774560"
  },
  {
    "text": "creating your own fragment uh you're going to have to create your own uh uh subass of the fragment based class and",
    "start": "774560",
    "end": "780399"
  },
  {
    "text": "so you know typically you know you're going to uh uh Implement some sort of oncreate method uh you will have an",
    "start": "780399",
    "end": "786959"
  },
  {
    "text": "oncreate view if you want to have a visual interface for the fragment like I said that's optional you might not need",
    "start": "786959",
    "end": "792480"
  },
  {
    "text": "that in which case you don't need to override that method and then you would use the other methods in the way you",
    "start": "792480",
    "end": "797839"
  },
  {
    "text": "normally would on resume you'd probably allocate expensive resources that you know might cost lot battery life or",
    "start": "797839",
    "end": "804399"
  },
  {
    "text": "monetary cost and then you would release those type of resources in your on pause",
    "start": "804399",
    "end": "810160"
  },
  {
    "text": "okay so let's say that we want a visual interface to our fragment well we're going to have to create some sort of fragment layout and that's going to uh",
    "start": "810160",
    "end": "817360"
  },
  {
    "text": "uh be taking place in our oncreate view callback method so we're going to have to implement that now the return value",
    "start": "817360",
    "end": "824440"
  },
  {
    "text": "of oncreate view is going to be the root view of the fragment's view hierarchy so",
    "start": "824440",
    "end": "830360"
  },
  {
    "text": "somehow we're going to have to create that view hierarchy now we have the same options that we do when we're creating a",
    "start": "830360",
    "end": "836880"
  },
  {
    "text": "view hierarchy for an activity we can either do it programmatically where we create all the objects uh by hand in",
    "start": "836880",
    "end": "843360"
  },
  {
    "text": "Java code and set up all their properties and hook them all together or we can do the declarative approach where we create an XML layout file and then",
    "start": "843360",
    "end": "850800"
  },
  {
    "text": "inflate that layout of course that's usually the simplest way to do it and I'm a lazy programmer so I'll take the",
    "start": "850800",
    "end": "856560"
  },
  {
    "text": "simplest way whenever possible now because that is the most common pattern",
    "start": "856560",
    "end": "862160"
  },
  {
    "text": "that we see um the designers of the uh of the oncreate view method went ahead",
    "start": "862160",
    "end": "867639"
  },
  {
    "text": "and suppli this with a layout inflator as one of the arguments that are passed",
    "start": "867639",
    "end": "873199"
  },
  {
    "text": "into oncreate view also passing in the reference to The View group that is going to serve as the parent of our",
    "start": "873199",
    "end": "879800"
  },
  {
    "text": "fragment and you know who knows that might be a linear layout or a relative layout or whatever type of layout the",
    "start": "879800",
    "end": "885079"
  },
  {
    "text": "activity is allocated to host its fragments so here's an example where uh",
    "start": "885079",
    "end": "891440"
  },
  {
    "text": "you know it's just a uh typical layout file that uh put together for a fragment you can see that we have a root geometry",
    "start": "891440",
    "end": "899000"
  },
  {
    "text": "manager in this case I used a linear layout because it was a rather simple layout uh put together just a few uh",
    "start": "899000",
    "end": "904720"
  },
  {
    "text": "components in there text View at text and button nothing here that is in any way different from what you'd do to",
    "start": "904720",
    "end": "911120"
  },
  {
    "text": "create a layout for an activity it's just going to be one part of an overall activities uh",
    "start": "911120",
    "end": "917160"
  },
  {
    "text": "layout so now that we've got our class our I miss something yes I did I missed",
    "start": "917160",
    "end": "924440"
  },
  {
    "text": "the Java code so I was just uh showing you how you'd actually uh you know in flate that in the on create view method",
    "start": "924440",
    "end": "932040"
  },
  {
    "text": "let me uh unmagnify that a little bit so we can better see all this so uh just focusing on The oncreate View uh we're",
    "start": "932040",
    "end": "939199"
  },
  {
    "text": "using the inflator parameter that was pasted and us and we're invoking its inflate operation the first argument is",
    "start": "939199",
    "end": "946639"
  },
  {
    "text": "the resource ID of the layout that we need to inflate so here is just the",
    "start": "946639",
    "end": "951800"
  },
  {
    "text": "resource file that I created for my fragments layout the second argument is The View group that's going to serve as",
    "start": "951800",
    "end": "957839"
  },
  {
    "text": "the parent well that was passed in as the second parameter to The oncreate View and then the third parameter that",
    "start": "957839",
    "end": "964399"
  },
  {
    "text": "uh argument that we want to provide to the inflate operation is false we're saying that we want the inflator to",
    "start": "964399",
    "end": "969680"
  },
  {
    "text": "inflate our layout but not attach the layout to the parent container now that",
    "start": "969680",
    "end": "975480"
  },
  {
    "text": "seems odd at first because you say well don't we want our layout hooked into the parent is that the whole point of it",
    "start": "975480",
    "end": "981199"
  },
  {
    "text": "well yes it is however the system is going to do that for us automatically when we return our view the root of our",
    "start": "981199",
    "end": "989079"
  },
  {
    "text": "layout hierarchy from oncreate view the system is automatically going to attach it to the parent layout at the",
    "start": "989079",
    "end": "994839"
  },
  {
    "text": "appropriate point in time so if we provide a value of true here it's going to be tried to hooked up twice it's not",
    "start": "994839",
    "end": "1001160"
  },
  {
    "text": "going to be very successful so you always put a false in now at this point we could do any of the rest of our UI",
    "start": "1001160",
    "end": "1007519"
  },
  {
    "text": "setup that we needed to do for example if we need to install listeners on buttons or other types of objects uh we",
    "start": "1007519",
    "end": "1014240"
  },
  {
    "text": "could do so so here I'm show you an example of just using the fragment itself as The Listener for the button",
    "start": "1014240",
    "end": "1020240"
  },
  {
    "text": "click operation so just you know as you might do with an activity and overload it with additional responsibility such",
    "start": "1020240",
    "end": "1026760"
  },
  {
    "text": "as listening to button clicks we can do the same thing with the fragments that we create as well",
    "start": "1026760",
    "end": "1034558"
  },
  {
    "text": "yes uh well for a fragment I cannot think of any case where we would ever",
    "start": "1044240",
    "end": "1049480"
  },
  {
    "text": "provide true here I mean the the layout inflator is a general purpose uh class",
    "start": "1049480",
    "end": "1054679"
  },
  {
    "text": "in in Android so it's what's used in in general when like when in an activity when you do a set content view it's",
    "start": "1054679",
    "end": "1061840"
  },
  {
    "text": "actually responsible for parsing the XML if you provideed a layout and doing all the inflation and then attaching it to",
    "start": "1061840",
    "end": "1068400"
  },
  {
    "text": "the uh root uh view of the entire window itself uh so because it is a general",
    "start": "1068400",
    "end": "1073640"
  },
  {
    "text": "purpose it does have that parameter we can choose true or false but for a fragment we always want to use false to",
    "start": "1073640",
    "end": "1079080"
  },
  {
    "text": "defer that to the system itself okay so what next well we've got",
    "start": "1079080",
    "end": "1086919"
  },
  {
    "text": "our fragment now defined we've created the fragment class we've got our uh we've got our layout we just need to put",
    "start": "1086919",
    "end": "1092440"
  },
  {
    "text": "into an activity somewhere so the easiest way to use the fragment is to uh statically include it into an activity",
    "start": "1092440",
    "end": "1099520"
  },
  {
    "text": "layout so let's say that we've got an activity layout file well we can actually use this element called",
    "start": "1099520",
    "end": "1105520"
  },
  {
    "text": "fragment and yes that really is lowercase f fragment to just indicate where in the activity we want this",
    "start": "1105520",
    "end": "1111840"
  },
  {
    "text": "fragment to appear uh we want to then specify the Android name attribute and",
    "start": "1111840",
    "end": "1117039"
  },
  {
    "text": "provide the fully package qualified class name of the fragment that we want to include and then any layout",
    "start": "1117039",
    "end": "1123559"
  },
  {
    "text": "attributes to control the size and positioning of the fragment within the activities layout now every fragment",
    "start": "1123559",
    "end": "1130120"
  },
  {
    "text": "that we create has to have a unique identifier so that we can uh you know get access to it programmatically and",
    "start": "1130120",
    "end": "1136600"
  },
  {
    "text": "there's a couple of different ways we can do so one is that we can supply a unique Android ID attribute here in the layout",
    "start": "1136600",
    "end": "1143440"
  },
  {
    "text": "to identify it another possibility is to uh provide an Android tag which is just an arbitrary string that we assign and",
    "start": "1143440",
    "end": "1150280"
  },
  {
    "text": "we'd be able to do lookups on the fragment at runtime using that now if you fail to do either of these in this",
    "start": "1150280",
    "end": "1156400"
  },
  {
    "text": "approach this static inclusion of a fragment it's going to uh try to use the ID of the fragments container it's its",
    "start": "1156400",
    "end": "1164039"
  },
  {
    "text": "root view of its hierarchy but you really should uh use one of these ways of uniquely identifying your fragments",
    "start": "1164039",
    "end": "1170159"
  },
  {
    "text": "when you insert it so here's an example of an activity layout where decided to include a couple of fragments you can",
    "start": "1170159",
    "end": "1176720"
  },
  {
    "text": "see we use the fully qualified uh class name and then any type of layout parameters that we'd like to",
    "start": "1176720",
    "end": "1183520"
  },
  {
    "text": "use okay so that's static and that's it now let's talk about the fun stuff the",
    "start": "1183520",
    "end": "1188679"
  },
  {
    "text": "interesting things where we want to dynamically create an ad fragments to our activity at runtime be able to swap",
    "start": "1188679",
    "end": "1194679"
  },
  {
    "text": "these things out and do Dynamic Behavior now the first step in doing that is to",
    "start": "1194679",
    "end": "1200880"
  },
  {
    "text": "uh get a reference to the fragment manager now the way you do so depends upon whether you're using the uh",
    "start": "1200880",
    "end": "1206559"
  },
  {
    "text": "honeycomb apis or the compatibility package in the honeycomb apis the activity class has get fragment manager",
    "start": "1206559",
    "end": "1213360"
  },
  {
    "text": "and it returns a reference to the fragment manager on the other hand if you are using the compatibility package",
    "start": "1213360",
    "end": "1218440"
  },
  {
    "text": "the fragment activity has a get support fragment manager that you have to use",
    "start": "1218440",
    "end": "1223720"
  },
  {
    "text": "it's really easy to make that mistake to uh call the wrong method call there I've done that several times there so make",
    "start": "1223720",
    "end": "1229200"
  },
  {
    "text": "sure you're using the right one okay so now that we've got our reference to fragment manager we need to begin a",
    "start": "1229200",
    "end": "1235120"
  },
  {
    "text": "fragment transaction even if there's only one thing we're going to be doing on one uh fragment we still need to uh",
    "start": "1235120",
    "end": "1242520"
  },
  {
    "text": "start a transaction and we do that by invoking the begin transaction method on the fragment manager and this is going",
    "start": "1242520",
    "end": "1249480"
  },
  {
    "text": "to return a reference an instance of a fragment transaction object okay so now we got our transaction object we're",
    "start": "1249480",
    "end": "1255960"
  },
  {
    "text": "ready to go so if we haven't done so already it's time to instantiate an instance of our fragment we just invoke",
    "start": "1255960",
    "end": "1261720"
  },
  {
    "text": "its Constructor new my custom fragment or whatever it is we got that and then",
    "start": "1261720",
    "end": "1267240"
  },
  {
    "text": "on the fragment transaction we're going to invoke this add operation and we need",
    "start": "1267240",
    "end": "1272720"
  },
  {
    "text": "to specify The View group that is going to be a parent of the of the fragment",
    "start": "1272720",
    "end": "1278240"
  },
  {
    "text": "and we do so by specifying its ID now optionally we can also provide a string",
    "start": "1278240",
    "end": "1283919"
  },
  {
    "text": "tag to identify the fragment as well now once we've executed the ad then we need",
    "start": "1283919",
    "end": "1289760"
  },
  {
    "text": "to commit the transaction by executing the commit method on that fragment transaction so putting it all together",
    "start": "1289760",
    "end": "1296080"
  },
  {
    "text": "this is what it's going to look like getting our fragment manager whichever way is appropriate the honeycomb API or",
    "start": "1296080",
    "end": "1301720"
  },
  {
    "text": "the compatibility package there we're getting our fragment transaction we got our fragment we add it we commit it",
    "start": "1301720",
    "end": "1307840"
  },
  {
    "text": "sounds simple if only were that simple there is a catch and it has to do with turning",
    "start": "1307840",
    "end": "1315279"
  },
  {
    "text": "the device sideways onetime configuration changes you know if you've done any type of Android programming you",
    "start": "1315279",
    "end": "1321679"
  },
  {
    "text": "know in a runtime configuration change the system bounces the activity it destroys the activity and then it",
    "start": "1321679",
    "end": "1327520"
  },
  {
    "text": "recreates the activity so it can refresh itself with all the new configuration options any new resources it needs to",
    "start": "1327520",
    "end": "1333640"
  },
  {
    "text": "load up in the new configuration well once a fragment has been added to an activity if the activity gets balanced",
    "start": "1333640",
    "end": "1340600"
  },
  {
    "text": "if it gets destroyed and recreated because of a runtime uh you know reconstruction configuration change like",
    "start": "1340600",
    "end": "1346000"
  },
  {
    "text": "that the fragment gets automattic Al recreated as well automatically which is",
    "start": "1346000",
    "end": "1351480"
  },
  {
    "text": "great unless you weren't planning for that because uh if you happen to have",
    "start": "1351480",
    "end": "1357000"
  },
  {
    "text": "like this code here creating and adding fragment in your oncreate method of the activity and you just always do it well",
    "start": "1357000",
    "end": "1363799"
  },
  {
    "text": "now you've got the old version of the fragment that got recreated and this new one that you're adding in as well and um",
    "start": "1363799",
    "end": "1372120"
  },
  {
    "text": "that's another one of these things that not really documented very well you find it out the hard way when your applications break so what you do well",
    "start": "1372120",
    "end": "1379760"
  },
  {
    "text": "you need to figure out uh are we getting recreated because of a configuration change or is this the first time through",
    "start": "1379760",
    "end": "1386080"
  },
  {
    "text": "it and the way we can do that is in our activity check the",
    "start": "1386080",
    "end": "1391880"
  },
  {
    "text": "bundle that bundle is going to contain all you know the runtime configuration",
    "start": "1391880",
    "end": "1397039"
  },
  {
    "text": "the of the old activity that is being recreated now if this is the first time the activity has been created that",
    "start": "1397039",
    "end": "1403039"
  },
  {
    "text": "bundle argument is going to be null and so that's your signal ah I need to create all my fragments from scratch if",
    "start": "1403039",
    "end": "1409520"
  },
  {
    "text": "that bundle argument is not null we are recreating the activity because of",
    "start": "1409520",
    "end": "1415240"
  },
  {
    "text": "configuration change and that means that we should not recreate any Dynamic",
    "start": "1415240",
    "end": "1420360"
  },
  {
    "text": "fragments they are already being recreated for us so it's a simple test uh here's an example of doing it in the",
    "start": "1420360",
    "end": "1426080"
  },
  {
    "text": "on create where we just check that bundle that we get and our activities on create if it's not null then we do our",
    "start": "1426080",
    "end": "1432200"
  },
  {
    "text": "Dynamic fragment uh you know initialization and adding otherwise we skip this step",
    "start": "1432200",
    "end": "1439799"
  },
  {
    "text": "okay now what about saving a fragment State you know the whole idea of a runtime configuration well what are",
    "start": "1439799",
    "end": "1446080"
  },
  {
    "text": "there's additional State information that I need to save well in an activity there's the onsave instance State method",
    "start": "1446080",
    "end": "1453159"
  },
  {
    "text": "it's invoked automatically by the system when it needs to save the state of the activity usually because of configuration change and it's provided",
    "start": "1453159",
    "end": "1460000"
  },
  {
    "text": "with a bundle well the fragment class has an on saave instance State method as",
    "start": "1460000",
    "end": "1465960"
  },
  {
    "text": "well and it works pretty much same way as the activity class the fragment is going to automatically crawl its view",
    "start": "1465960",
    "end": "1471919"
  },
  {
    "text": "hierarchy any views in the hierarchy that have IDs it's going to invoke their on saav instance State methods which",
    "start": "1471919",
    "end": "1478200"
  },
  {
    "text": "will you know save whatever Dynamic State those views have and then as the",
    "start": "1478200",
    "end": "1483440"
  },
  {
    "text": "system recreates the fragment it will use that information to resuscitate my fragment in the state that it was",
    "start": "1483440",
    "end": "1489799"
  },
  {
    "text": "previously now if I have some additional information that wouldn't normally be uh",
    "start": "1489799",
    "end": "1495000"
  },
  {
    "text": "taken care of by this default Behavior I have the option of overriding the onsave instance state in my fragment and then",
    "start": "1495000",
    "end": "1502399"
  },
  {
    "text": "I'll just be putting it into a bundle just like you would in an activity and then I would use the values from the",
    "start": "1502399",
    "end": "1507679"
  },
  {
    "text": "bundle uh in my oncreate my oncreate view or my on activity Crea method those",
    "start": "1507679",
    "end": "1512919"
  },
  {
    "text": "are the three objects of the bundle provided to now there is one difference here versus in activity a fragment does",
    "start": "1512919",
    "end": "1519360"
  },
  {
    "text": "not have an on restore instance State method so you can't override that uh you",
    "start": "1519360",
    "end": "1524679"
  },
  {
    "text": "know in a fragment the way you could in an activity",
    "start": "1524679",
    "end": "1529679"
  },
  {
    "text": "now if you've done any work with activities and uh you've had to save State information of an activity because",
    "start": "1530399",
    "end": "1537159"
  },
  {
    "text": "of configuration change you know sometimes that this bundle isn't enough you've got some heavyweight object that",
    "start": "1537159",
    "end": "1542399"
  },
  {
    "text": "you want to retain across instances you know you bring the activity down bring it back up you say wait a minute I got a",
    "start": "1542399",
    "end": "1547840"
  },
  {
    "text": "lot of data that I pulled off the uh the internet or uh you take a lot of calculation to come up with I don't want",
    "start": "1547840",
    "end": "1554159"
  },
  {
    "text": "to recreate all that from scratch and so the activity has a technique where we can say oh we'd like to have the system",
    "start": "1554159",
    "end": "1560640"
  },
  {
    "text": "hang on to this object for us and then give it back to us once the activity is",
    "start": "1560640",
    "end": "1566159"
  },
  {
    "text": "been recreated now it's not all that obvious to do it's a kind of clunky and if there's multiple pieces of",
    "start": "1566159",
    "end": "1571720"
  },
  {
    "text": "information you want to retain well it's not an insurmountable problem it just",
    "start": "1571720",
    "end": "1577120"
  },
  {
    "text": "bothersome turns out that with fragments it's a lot easier the fragment class has",
    "start": "1577120",
    "end": "1583080"
  },
  {
    "text": "a method called set retain instance it just takes a Boolean value and if give it a Boolean value of true you're asking",
    "start": "1583080",
    "end": "1590360"
  },
  {
    "text": "the system to automatically retain this fragment object in memory as the",
    "start": "1590360",
    "end": "1596600"
  },
  {
    "text": "activity goes down and gets recreated and so it's not as though it's getting destroyed and recreated in the",
    "start": "1596600",
    "end": "1602200"
  },
  {
    "text": "same state it is hanging around in memory retaining all of its state information and we can do this for as",
    "start": "1602200",
    "end": "1609240"
  },
  {
    "text": "many fragments as we like so if we got you know three or four fragments we could set retain instance to true on all",
    "start": "1609240",
    "end": "1616399"
  },
  {
    "text": "of them if they all have important information that I don't want to recreate from scratch now when you set uh retain",
    "start": "1616399",
    "end": "1624320"
  },
  {
    "text": "instance state to True uh then what's going to happen is that when the activity is going to be recreated the",
    "start": "1624320",
    "end": "1630399"
  },
  {
    "text": "fragments on Destroy method will not be called and then its oncreate method will",
    "start": "1630399",
    "end": "1635559"
  },
  {
    "text": "not be called either and then the fragment will be retained in memory but all the other fragment life cycle",
    "start": "1635559",
    "end": "1640799"
  },
  {
    "text": "methods are invoked in the typical sequence now one thing that um I did get",
    "start": "1640799",
    "end": "1647200"
  },
  {
    "text": "burned by when I experimenting with this and learning more about fragments is that if you use the set retain instance",
    "start": "1647200",
    "end": "1653919"
  },
  {
    "text": "uh uh to true then the bundle pass to the fragments on",
    "start": "1653919",
    "end": "1660000"
  },
  {
    "text": "create View and on activity created is always going to be null now I've done logging and I've",
    "start": "1660000",
    "end": "1666240"
  },
  {
    "text": "determined that the uh you know the uh the what's it called I've already forgotten the name of it uh the on on",
    "start": "1666240",
    "end": "1673039"
  },
  {
    "text": "Save instance State method still gets called so I thought it was storing information in the bundle",
    "start": "1673039",
    "end": "1678200"
  },
  {
    "text": "but no that bundle just is ignored it's not returned to my fragment when the",
    "start": "1678200",
    "end": "1683840"
  },
  {
    "text": "fragment is you know being invoked through all these methods that's because it didn't get destroyed I assume is the uh is the rationale",
    "start": "1683840",
    "end": "1690919"
  },
  {
    "text": "there okay so this means that we don't really need to use that activity classes",
    "start": "1690919",
    "end": "1697120"
  },
  {
    "text": "on retain non-configuration instance method anymore which is good because it's impossible to say thank goodness",
    "start": "1697120",
    "end": "1703120"
  },
  {
    "text": "for code completion otherwise I'd never type it correctly and that's why it has been deprecated as of API 11 in fact if",
    "start": "1703120",
    "end": "1710919"
  },
  {
    "text": "you are using the compatibility package you cannot use the activities on retain",
    "start": "1710919",
    "end": "1716919"
  },
  {
    "text": "non-configuration instance method in the fragment activity class it's part of the compatibility package it has been",
    "start": "1716919",
    "end": "1722760"
  },
  {
    "text": "overridden and marked as final the fragment activity is using it for its own internal purposes of retaining these",
    "start": "1722760",
    "end": "1730600"
  },
  {
    "text": "fragments and loaders and it doesn't want you messing up with that so if you using on retained non-configuration",
    "start": "1730600",
    "end": "1736279"
  },
  {
    "text": "instance that is something that you're going to have to change as you port code to use your",
    "start": "1736279",
    "end": "1742919"
  },
  {
    "text": "fragments okay now just in aside here it's pretty straightforward what if you",
    "start": "1743039",
    "end": "1748200"
  },
  {
    "text": "want to create a fragment with no layout now why might you do that well maybe you just creating a fragment",
    "start": "1748200",
    "end": "1754120"
  },
  {
    "text": "because you want to maintain some State information or perhaps you wanted to manage a thread or an async task and",
    "start": "1754120",
    "end": "1761000"
  },
  {
    "text": "you'd like that to be retained across activity bounces and you'd say I don't need an actual visual interface I just",
    "start": "1761000",
    "end": "1767559"
  },
  {
    "text": "wanted to store all this information okay well fragments with no layouts are easy to do no need to create a layout",
    "start": "1767559",
    "end": "1773880"
  },
  {
    "text": "file no need to overrate on create view well in that case how do we",
    "start": "1773880",
    "end": "1779279"
  },
  {
    "text": "actually use these well we're just going to instantiate the fragment object you know",
    "start": "1779279",
    "end": "1784440"
  },
  {
    "text": "invoke its Constructor and then we're going to use a fragment transaction add method to add it to the activity in this",
    "start": "1784440",
    "end": "1791159"
  },
  {
    "text": "case we use a different version of the add method we're not going to be adding it to a container we use a two argument",
    "start": "1791159",
    "end": "1796600"
  },
  {
    "text": "version where the first argument is just the reference to the fragment being added and then the second argument is a",
    "start": "1796600",
    "end": "1801760"
  },
  {
    "text": "string which is the tag that we want to assign to this fragment so that we could then programmatically access it later on",
    "start": "1801760",
    "end": "1808679"
  },
  {
    "text": "so this is just an example of how we might go about doing one of these but it looks the same pretty much as dynamically adding a fragment with a",
    "start": "1808679",
    "end": "1816519"
  },
  {
    "text": "layout it just that the add method is slightly",
    "start": "1816519",
    "end": "1821080"
  },
  {
    "text": "changed I've mentioned that uh sometimes we might need to go looking up fragments well that's what frag manager can do for",
    "start": "1821559",
    "end": "1828279"
  },
  {
    "text": "us it has a couple methods for that one is find fragment by ID you just give it",
    "start": "1828279",
    "end": "1833519"
  },
  {
    "text": "the resource ID of the fragment returns a reference to the fragment if it's currently uh existent within the current",
    "start": "1833519",
    "end": "1839360"
  },
  {
    "text": "activity and there's also defined fragment by tag just give it the string tag and it too will return the fragment",
    "start": "1839360",
    "end": "1846679"
  },
  {
    "text": "reference if it exists or null if it doesn't exist in the activity currently of course if you're going to be",
    "start": "1846679",
    "end": "1852159"
  },
  {
    "text": "manipulating the same fragment over and over it's usually best to retain a reference to that fragment and just cach it and some sort of uh you know instance",
    "start": "1852159",
    "end": "1858919"
  },
  {
    "text": "field of your activity now so far the only Dynamic",
    "start": "1858919",
    "end": "1864159"
  },
  {
    "text": "fragment operation we've dealt with is the ad operation creating a new one and putting it into an activity but the",
    "start": "1864159",
    "end": "1869720"
  },
  {
    "text": "fragment transaction class has several other methods that we can invoke as well in addition to add there's remove where",
    "start": "1869720",
    "end": "1876279"
  },
  {
    "text": "it says we are going to be uh destroying this fragment completely unless we're going to be using the backstack and I'm",
    "start": "1876279",
    "end": "1882360"
  },
  {
    "text": "going to be telling you about the backstack and its purpose in just a moment but remove says we want to take that fragment out of activity replace is",
    "start": "1882360",
    "end": "1889080"
  },
  {
    "text": "basically doing a remove an ad all at once you're going to identify a fragment that you want to remove and give it a",
    "start": "1889080",
    "end": "1895039"
  },
  {
    "text": "reference to a fragment you want to add in its place we also have the ability to hide or show a fragment this does not",
    "start": "1895039",
    "end": "1902639"
  },
  {
    "text": "destroy the fragment it does not destroy the fragment's view it simply toggles the visibility of the root View group of",
    "start": "1902639",
    "end": "1909840"
  },
  {
    "text": "my uh of my fragment that can often be a lighter weight operation corresponding show for that and then in API 13 they",
    "start": "1909840",
    "end": "1916720"
  },
  {
    "text": "added two new ones detach and attach uh so you can read up about those uh",
    "start": "1916720",
    "end": "1923360"
  },
  {
    "text": "basically detaching it uh destroying its view hierarchy but retaining the fragment instance it's not a destroy",
    "start": "1923360",
    "end": "1929039"
  },
  {
    "text": "just you know detaching it from The View hierarchy and then attach with reattach a previously detached uh",
    "start": "1929039",
    "end": "1936200"
  },
  {
    "text": "fragment important once again discovered through hard uh trial and much error um",
    "start": "1936200",
    "end": "1944159"
  },
  {
    "text": "those static fragments the ones that you include in an activ layout you can't do any of this with you can't go around",
    "start": "1944159",
    "end": "1950399"
  },
  {
    "text": "removing them replacing them you can hide and show them but that's the only",
    "start": "1950399",
    "end": "1955600"
  },
  {
    "text": "thing you can do you can hide a static fragment or then you can show it but you can't remove it you can't replace it if",
    "start": "1955600",
    "end": "1960760"
  },
  {
    "text": "you try to do so your application's going to blow up often in unpredictable ways but you sometimes it's very",
    "start": "1960760",
    "end": "1967279"
  },
  {
    "text": "confusing because you you do an operation it looks like the fragment's still on screen but then you try",
    "start": "1967279",
    "end": "1972519"
  },
  {
    "text": "manipulating the fragment and you get illegal State exceptions or null point or exceptions or other types of weird",
    "start": "1972519",
    "end": "1979039"
  },
  {
    "text": "Behavior I haven't found this documented anywhere it's just you know kind of that group knowledge that people get through",
    "start": "1979039",
    "end": "1985480"
  },
  {
    "text": "um the gra find like this",
    "start": "1985480",
    "end": "1991080"
  },
  {
    "text": "yes well there's some slight overhead in using a fragment versus just uh putting it all directly in activity but overall",
    "start": "1995960",
    "end": "2003120"
  },
  {
    "text": "the uh the overhead is going to be minimal it's not as though you know fragment operations are taking place",
    "start": "2003120",
    "end": "2008639"
  },
  {
    "text": "multiple times a second or these are typically fairly infrequent operations and um I've not noticed any significant",
    "start": "2008639",
    "end": "2016399"
  },
  {
    "text": "performance degradation using fragments versus just putting it directly in",
    "start": "2016399",
    "end": "2022440"
  },
  {
    "text": "activity it's uh once again I'm not done a lot of detailed uh um uh checking of",
    "start": "2031720",
    "end": "2037799"
  },
  {
    "text": "the memory uh impact of uh you know how much memory does using a static fragment",
    "start": "2037799",
    "end": "2043799"
  },
  {
    "text": "versus how much memory using in Dynamic fragments uh you know part of it would just be you number of temporary objects",
    "start": "2043799",
    "end": "2050040"
  },
  {
    "text": "that' be created that would have to be garbage collected at some point I my gut tells me that if I'm using Dynamic uh",
    "start": "2050040",
    "end": "2056520"
  },
  {
    "text": "fragment manipulation I'm probably creating a lot more temporary objects that will then require garbage",
    "start": "2056520",
    "end": "2061720"
  },
  {
    "text": "collection static uh is simply inflating the view once and then it's pretty",
    "start": "2061720",
    "end": "2067480"
  },
  {
    "text": "there so it's more",
    "start": "2067480",
    "end": "2071240"
  },
  {
    "text": "it's okay it it it is um what I'm airm GNA",
    "start": "2073280",
    "end": "2081599"
  },
  {
    "text": "have to do is take this offline because I have several more slides to do so we can talk afterwards if you like okay so um so what do you want to",
    "start": "2081599",
    "end": "2090000"
  },
  {
    "text": "do if you want to do some fragment manipulation well first of all you have to begin a transaction just like we did",
    "start": "2090000",
    "end": "2095158"
  },
  {
    "text": "when we did a simple ad then perform any number of fragment operations you want it can be on any number of fragments",
    "start": "2095159",
    "end": "2101800"
  },
  {
    "text": "they can actually be in different containers it doesn't matter you know ads removes Etc and then you finally do a commit to apply the transaction to the",
    "start": "2101800",
    "end": "2109640"
  },
  {
    "text": "activity uh just a note here is that uh you can only commit a transaction prior to the activity saving at state so",
    "start": "2109640",
    "end": "2116520"
  },
  {
    "text": "technically the commit has to take place before the activity would invoke onsave",
    "start": "2116520",
    "end": "2122079"
  },
  {
    "text": "instance State uh the the whole point is is activity on Save instance state is trying to pickle the state of the",
    "start": "2122079",
    "end": "2128440"
  },
  {
    "text": "activity so it can be resuscitated later on and if you're trying to do some fragment manipulation the save state is",
    "start": "2128440",
    "end": "2134440"
  },
  {
    "text": "no longer represent the last you know the last state of the activity so you'll",
    "start": "2134440",
    "end": "2139880"
  },
  {
    "text": "get an exception if you try to do that after the on saav instance date uh but you know this is showing an example of",
    "start": "2139880",
    "end": "2145760"
  },
  {
    "text": "doing some fragment transactions and for all of these fragment trans uh transaction methods uh you get a",
    "start": "2145760",
    "end": "2152440"
  },
  {
    "text": "reference back to the original fragment transaction object so it allows you to do meth method chaining like this to uh",
    "start": "2152440",
    "end": "2158480"
  },
  {
    "text": "kind of abbreviate your code if you like to now the uh fragment manipulation that",
    "start": "2158480",
    "end": "2165520"
  },
  {
    "text": "we do um we have the option of including in a back stack so if we're working with",
    "start": "2165520",
    "end": "2171599"
  },
  {
    "text": "activities if I'm in one activity it launches another the system is going to remember the task stack the activities",
    "start": "2171599",
    "end": "2177760"
  },
  {
    "text": "that we're going you know activity a then launch B and if I do a back button it would then destroy the top activity",
    "start": "2177760",
    "end": "2183560"
  },
  {
    "text": "and take me back to the previous activity so what if I got fragments Incorporated in my uh in my uh activity",
    "start": "2183560",
    "end": "2190920"
  },
  {
    "text": "and I've been doing Dynamic Behavior well the default behavior is that if I press the back button it destroys the",
    "start": "2190920",
    "end": "2197119"
  },
  {
    "text": "activity doesn't matter how many fragment transactions I might have committed it just says Bo that activity",
    "start": "2197119",
    "end": "2202400"
  },
  {
    "text": "is gone but I do have the option of taking all these fragment transactions",
    "start": "2202400",
    "end": "2208240"
  },
  {
    "text": "and incorporating them into the back stack as well in my fragment transaction as I'm",
    "start": "2208240",
    "end": "2214280"
  },
  {
    "text": "doing a manipulation any type at all adds removes replaces or anything else if I do an add to backstack method",
    "start": "2214280",
    "end": "2221880"
  },
  {
    "text": "before doing the commit that's telling the activity remember this state and so then if I were to do a back button the",
    "start": "2221880",
    "end": "2229119"
  },
  {
    "text": "user presses the back button it will go to the previous fragment State before",
    "start": "2229119",
    "end": "2234839"
  },
  {
    "text": "that transaction was committed and so we could stack up as many transaction States as we like and back back back",
    "start": "2234839",
    "end": "2240560"
  },
  {
    "text": "back back and it's only once we popped all of the fragment transactions off the stack that pressing the back button",
    "start": "2240560",
    "end": "2246400"
  },
  {
    "text": "again would destroy the",
    "start": "2246400",
    "end": "2249680"
  },
  {
    "text": "activity okay so action bars option Menus can",
    "start": "2251560",
    "end": "2257079"
  },
  {
    "text": "fragments play with those too why yes they can yes they can so my fragment can say hey I've got a set of action bar",
    "start": "2257079",
    "end": "2263400"
  },
  {
    "text": "items or I've got some option menu items that I want to include now for us to do",
    "start": "2263400",
    "end": "2268960"
  },
  {
    "text": "that in the fragments on create method the fragment must invoke set has options",
    "start": "2268960",
    "end": "2275200"
  },
  {
    "text": "menu it's telling the activity hey hey look at me I've got option menu items okay so once we've done that then in our",
    "start": "2275200",
    "end": "2281800"
  },
  {
    "text": "fragment class we can provide our own implementation of an oncreate options menu saying when the option menu is",
    "start": "2281800",
    "end": "2287839"
  },
  {
    "text": "created here are the items that we want to include in it and then we would uh provide an implementation of on options",
    "start": "2287839",
    "end": "2294079"
  },
  {
    "text": "items selected so that we could detect if any of the items that we had created had been selected and then optionally if",
    "start": "2294079",
    "end": "2301079"
  },
  {
    "text": "we want to we could also provide uh implementations for the other option menu manipulation items like on prepare",
    "start": "2301079",
    "end": "2306319"
  },
  {
    "text": "on options closed non- destroy now the activity needs to work",
    "start": "2306319",
    "end": "2311839"
  },
  {
    "text": "and play well with us so if we've got my activity then what it needs to do in the",
    "start": "2311839",
    "end": "2319040"
  },
  {
    "text": "activity on create options menu for example it can do its own setup of option uh items it can say I've got",
    "start": "2319040",
    "end": "2326640"
  },
  {
    "text": "three that I want to add but then the activity must invoke its super version",
    "start": "2326640",
    "end": "2331839"
  },
  {
    "text": "you know the Base Class version of the oncreate options menu to say oh and now let's go ahead and do the rest of the",
    "start": "2331839",
    "end": "2336960"
  },
  {
    "text": "setup and so the fragment activity or the activity based class would then look at all the fragments that have registered as having option items and",
    "start": "2336960",
    "end": "2343800"
  },
  {
    "text": "invoke their on create options menu similarly in the uh in the activities on",
    "start": "2343800",
    "end": "2350200"
  },
  {
    "text": "options items selected it should look for any items that it added and then invoke its Base Class on option item",
    "start": "2350200",
    "end": "2357480"
  },
  {
    "text": "selected method so that it can then propagate that call down to the fragment so they can detect if any of their items",
    "start": "2357480",
    "end": "2363760"
  },
  {
    "text": "had been added now what about the dynamic Behavior what if a fragment gets added",
    "start": "2363760",
    "end": "2369280"
  },
  {
    "text": "or removed at runtime well the system takes care of that fragment gets added that has option items those get",
    "start": "2369280",
    "end": "2374680"
  },
  {
    "text": "automatically added to the options uh menu or or action bar if that fragment is hidden or removed they're",
    "start": "2374680",
    "end": "2380319"
  },
  {
    "text": "automatically taken away so the action bar always reflects the current state of the visible fragments that are",
    "start": "2380319",
    "end": "2386400"
  },
  {
    "text": "Incorporated in the activity and so just an example of a code that would do this this is an activity so we're showing",
    "start": "2386400",
    "end": "2393000"
  },
  {
    "text": "that uh the on create options menu here is invoking the base class so it can do the fragment initialization and then it",
    "start": "2393000",
    "end": "2399880"
  },
  {
    "text": "flates its own menu items in returns true to indicate to go ahead and display the uh menu in the on options items",
    "start": "2399880",
    "end": "2406640"
  },
  {
    "text": "selected somebody you know selected one of those items so in this case we're uh te testing the ID the item selected",
    "start": "2406640",
    "end": "2413480"
  },
  {
    "text": "looking for any that the activity put in it and then if it doesn't match any the activity put in it we just say let's",
    "start": "2413480",
    "end": "2419119"
  },
  {
    "text": "kick it up to the base class on options items selected and let it check all the fragments the fragments then would have",
    "start": "2419119",
    "end": "2425800"
  },
  {
    "text": "their own implement ations uh the oncreate to indicate that they have option items the oncreate options menu",
    "start": "2425800",
    "end": "2432319"
  },
  {
    "text": "to then inflate their items into the menu and then the selected to check for the ones that they explicitly added",
    "start": "2432319",
    "end": "2440160"
  },
  {
    "text": "in yes so oh if you got well in in that case uh",
    "start": "2446920",
    "end": "2452440"
  },
  {
    "text": "then the Overflow options menu would be uh displayed full you know options menu or similarly the uh the action bar those",
    "start": "2452440",
    "end": "2460000"
  },
  {
    "text": "would end up in the Overflow menu of the action bar okay now we've seen you how the",
    "start": "2460000",
    "end": "2466720"
  },
  {
    "text": "activity can create these uh uh these fragments and how the fragments can contribute uh option items there and",
    "start": "2466720",
    "end": "2472599"
  },
  {
    "text": "enter the menus um what other type of communication can take place well the activity created the fragment it's got a",
    "start": "2472599",
    "end": "2478839"
  },
  {
    "text": "reference to the fragment so basically any public method on that fragment is fair game so I can directly access those",
    "start": "2478839",
    "end": "2484480"
  },
  {
    "text": "public methods no problem if you didn't retain a reference to the fragment you could always look it up with the fragment maner using F fragment by ID or",
    "start": "2484480",
    "end": "2492079"
  },
  {
    "text": "fine fragment by tag uh what about the other way well the fragment class has a",
    "start": "2492079",
    "end": "2497280"
  },
  {
    "text": "get activity method which will return a reference to the hosting activity and then I could invoke any public methods",
    "start": "2497280",
    "end": "2503880"
  },
  {
    "text": "on my activity I'm contained within you know for example you know I could say hey I'm in a fragment here and I want to",
    "start": "2503880",
    "end": "2510000"
  },
  {
    "text": "go up to my activity and I want to go explore its view hierarchy find view by ID manipulate the things directly",
    "start": "2510000",
    "end": "2517000"
  },
  {
    "text": "anything public I would have access to but you probably don't want to do that and so I'll tell you a best best",
    "start": "2517000",
    "end": "2523079"
  },
  {
    "text": "practice approach to that in just a moment I do want to make uh you know one one comment here though once we're",
    "start": "2523079",
    "end": "2528359"
  },
  {
    "text": "talking about interacting with the environment is that uh the fragment class is not derived from the context",
    "start": "2528359",
    "end": "2534640"
  },
  {
    "text": "based class a fragment is not a context and so if you need a context for anything within your fragment you're",
    "start": "2534640",
    "end": "2540880"
  },
  {
    "text": "going to have to obtain it you could either you know just use the activity object use act get activity and use it",
    "start": "2540880",
    "end": "2546400"
  },
  {
    "text": "as a context or through the activity you could invoke get application context to",
    "start": "2546400",
    "end": "2552119"
  },
  {
    "text": "get the application object as a context and so particularly for anything that's going to hold on to a reference to a",
    "start": "2552119",
    "end": "2558119"
  },
  {
    "text": "context for a long period of time you're probably going to want to get the get application context you don't want to",
    "start": "2558119",
    "end": "2563800"
  },
  {
    "text": "hold a reference to an activity that the system is trying to destroy so uh you know don't don't hold the context longer",
    "start": "2563800",
    "end": "2569520"
  },
  {
    "text": "than you need need it okay so some just general some best practices here one design for loose",
    "start": "2569520",
    "end": "2576640"
  },
  {
    "text": "coupling and this is one place where I think that the examples on the Google site really are bad if you take a look",
    "start": "2576640",
    "end": "2583640"
  },
  {
    "text": "at you've got you this article selector you know fragment and an article viewer fragment and you've got the article",
    "start": "2583640",
    "end": "2590240"
  },
  {
    "text": "selector that's asking the activity hey activity I need to check uh the container that you've got over there uh",
    "start": "2590240",
    "end": "2596920"
  },
  {
    "text": "does it actually have the other fragment visible and that is really tightly coupling this fragment with the way it's",
    "start": "2596920",
    "end": "2603720"
  },
  {
    "text": "going to be used you know what if you wanted to reuse this fragment as a standalone fragment in another activity",
    "start": "2603720",
    "end": "2609160"
  },
  {
    "text": "well suddenly all of that introspection of its environment doesn't apply anymore",
    "start": "2609160",
    "end": "2614720"
  },
  {
    "text": "so you really want to uh be careful about making your fragment too aware of its hosting activity because then that's",
    "start": "2614720",
    "end": "2622000"
  },
  {
    "text": "going to greatly reduce the amount of reuse now on the other hand it's kind of difficult to uh avoid the other way I",
    "start": "2622000",
    "end": "2628800"
  },
  {
    "text": "mean the activity has to have certain knowledge of the fragment to interact with that so that's okay because you're",
    "start": "2628800",
    "end": "2634040"
  },
  {
    "text": "usually designing the activity knowing the capabilities of a fragment you're saying the activity needs to do this and",
    "start": "2634040",
    "end": "2639720"
  },
  {
    "text": "the fragment is a core component of that so that tends not to be the big issue",
    "start": "2639720",
    "end": "2644760"
  },
  {
    "text": "the big issue is tight coupling of the fragment to its hosting activity so one",
    "start": "2644760",
    "end": "2650119"
  },
  {
    "text": "of the best ways to avoid this Java interfaces you define callbacks so you",
    "start": "2650119",
    "end": "2656319"
  },
  {
    "text": "say okay this fragment is going to have a set of callbacks as defined by an",
    "start": "2656319",
    "end": "2661359"
  },
  {
    "text": "interface that it provides and so then we can register a listener to detect",
    "start": "2661359",
    "end": "2666440"
  },
  {
    "text": "these events going on in the fragment so we could either have the hosting activity implement the interface",
    "start": "2666440",
    "end": "2672480"
  },
  {
    "text": "if you want or you could you know provide a a registration method on the fragment where we could register any",
    "start": "2672480",
    "end": "2677920"
  },
  {
    "text": "listener object as long as it implements the appropriate Java interface so here's an example where creating a fragment",
    "start": "2677920",
    "end": "2685079"
  },
  {
    "text": "definition here and what we're saying is that we're going to declare a nested",
    "start": "2685079",
    "end": "2690559"
  },
  {
    "text": "interface called on tile selected listener and say there's only one callback method called called on title",
    "start": "2690559",
    "end": "2697000"
  },
  {
    "text": "selected so if you want to be a listener this is the method you have to implement now if we decide that we're always going",
    "start": "2697000",
    "end": "2702760"
  },
  {
    "text": "to require the activity to implement the interface well we could go ahead and check for that in the onattach method of",
    "start": "2702760",
    "end": "2709160"
  },
  {
    "text": "the fragment as the fragment is attached to the activity we could then just try",
    "start": "2709160",
    "end": "2714480"
  },
  {
    "text": "to do an assignment try to take this activity cast it to the listener uh type if that throws a classcast exception hey",
    "start": "2714480",
    "end": "2720920"
  },
  {
    "text": "you're trying to put me in an activity that doesn't know how to listen to me and so you're just going to you know B",
    "start": "2720920",
    "end": "2726079"
  },
  {
    "text": "out at that point but as long as the uh cast is successful now we've got a listener and so uh as something",
    "start": "2726079",
    "end": "2733440"
  },
  {
    "text": "interesting occurs in my fragment I can then just go to The Listener and invoke the call back method that",
    "start": "2733440",
    "end": "2739880"
  },
  {
    "text": "registered and so this just activity servce code showing you the implementation how we doing on time I'm",
    "start": "2739880",
    "end": "2745000"
  },
  {
    "text": "assuming I'm pretty much out I I can't tell where I am oh geez 405 how that",
    "start": "2745000",
    "end": "2750119"
  },
  {
    "text": "happened okay so uh then this gets to the other best practice I was going to",
    "start": "2750119",
    "end": "2755319"
  },
  {
    "text": "point out using the activity is I call it a switchboard so just basically",
    "start": "2755319",
    "end": "2760559"
  },
  {
    "text": "saying the activity is where you should have the communication so the fragment",
    "start": "2760559",
    "end": "2766079"
  },
  {
    "text": "does know am I in a in an activity with another fragment that I work in play with is that other fragment hosted in",
    "start": "2766079",
    "end": "2772200"
  },
  {
    "text": "another activity it shouldn't care it's the activity that should know how to glue everything together and so through",
    "start": "2772200",
    "end": "2779079"
  },
  {
    "text": "the callbacks that a uh that a fragment could could invoke the activity could",
    "start": "2779079",
    "end": "2784119"
  },
  {
    "text": "then determine oh this this frag has indicated something has occurred I know that I the activity am hosting a",
    "start": "2784119",
    "end": "2789960"
  },
  {
    "text": "companion fragment I will just invoke the proper methods on that companion fragment to invoke Its Behavior but if",
    "start": "2789960",
    "end": "2796400"
  },
  {
    "text": "we've had to refactor it for a smaller screen where both fragments wouldn't fit into the same activity well in that case",
    "start": "2796400",
    "end": "2802800"
  },
  {
    "text": "we' write the logic in my activity to say well in that case I'm going to have to start another activity where I know",
    "start": "2802800",
    "end": "2808000"
  },
  {
    "text": "it's hosting that other fragment so don't make the fragments have to go and figure out where these are put that",
    "start": "2808000",
    "end": "2814680"
  },
  {
    "text": "logic in the activity you know make those fragments more reusable because keep in mind fragments don't have intent",
    "start": "2814680",
    "end": "2820680"
  },
  {
    "text": "filters they can't detect intents going on activities can so that's another",
    "start": "2820680",
    "end": "2825760"
  },
  {
    "text": "thing to keep in mind so uh that uh that uh pretty much exhaust the time there's",
    "start": "2825760",
    "end": "2831680"
  },
  {
    "text": "a few other uh things here I'm not going to have time to get into if uh you're interested the PDF that's available uh",
    "start": "2831680",
    "end": "2837200"
  },
  {
    "text": "on the conference site we'll talk a little bit about more about implementing dialogues using fragments and talking",
    "start": "2837200",
    "end": "2842839"
  },
  {
    "text": "about a few other specialty fragments the list fragment which is a predefined fragment that hosts a list view it's",
    "start": "2842839",
    "end": "2849040"
  },
  {
    "text": "kind of like the analogy of a list activity a preference fragment which you",
    "start": "2849040",
    "end": "2854079"
  },
  {
    "text": "know sets up a preference screen for you pointed at an XML preference resource and they'll create the preference screen and all the editors for it so it's the",
    "start": "2854079",
    "end": "2860839"
  },
  {
    "text": "analog of the preference activity and there's also a special uh web frag web view fragment that is a fragment that's",
    "start": "2860839",
    "end": "2867520"
  },
  {
    "text": "got a pre-built web view setting sitting at just a convenience there as well so uh that's uh that's it then I'm going to",
    "start": "2867520",
    "end": "2874760"
  },
  {
    "text": "be hanging out if there's any questions afterwards but at this point thank you",
    "start": "2874760",
    "end": "2879960"
  },
  {
    "text": "all",
    "start": "2888400",
    "end": "2891400"
  }
]