[
  {
    "text": "[Music]",
    "start": "2020",
    "end": "14789"
  },
  {
    "text": "hi everybody thank you for coming today sorry I'm going to be hiding behind all",
    "start": "15480",
    "end": "20800"
  },
  {
    "text": "my gear here so I can't be out amongst you this particular time so hopefully that's not too big of a problem but um",
    "start": "20800",
    "end": "26679"
  },
  {
    "text": "as Sasha mentioned my name is Dave um I'm here in San Francisco because I'm teaching some classes for New Circle",
    "start": "26679",
    "end": "32119"
  },
  {
    "text": "this week generally I'm based out of Denver um but I'm here today to talk to you about uh Android accessory",
    "start": "32119",
    "end": "37239"
  },
  {
    "text": "development so we're going to talk about Bluetooth we're also going to talk about USB we're going to talk about Bluetooth LE Bluetooth classic and all all kinds",
    "start": "37239",
    "end": "44399"
  },
  {
    "text": "of different stuff and I've got a ton of demos to show you and I just hope we get through it all because there's so much stuff um so just a couple things about",
    "start": "44399",
    "end": "51920"
  },
  {
    "text": "myself uh you know I said my name is Dave I work in Denver for double Encore if you're familiar with them at all",
    "start": "51920",
    "end": "57000"
  },
  {
    "text": "we're an app development shop we also do some embedded andro Android client work uh in addition to that as I mentioned",
    "start": "57000",
    "end": "62519"
  },
  {
    "text": "I'm an instructor for New Circle I teach a number of classes there including Android internals um and I also am the",
    "start": "62519",
    "end": "67960"
  },
  {
    "text": "author of Android recipes from apress so if you want to be pleasant and help feed my family please check it out um we",
    "start": "67960",
    "end": "73960"
  },
  {
    "text": "actually just released the Third Edition last week so there's a brand new addition out that goes all the way through KitKat apis so if you're",
    "start": "73960",
    "end": "80960"
  },
  {
    "text": "interested in learning some more about Android development check it out okay all right so what are we going to talk",
    "start": "80960",
    "end": "86280"
  },
  {
    "text": "about here so these are the topics that I'm really going to look at um we're going to look look at Bluetooth classic and specifically we're going to look at",
    "start": "86280",
    "end": "92200"
  },
  {
    "text": "rfom so if you're not familiar with what that is we're going to talk a little bit about what that really means from an accessory perspective uh and then we're",
    "start": "92200",
    "end": "98759"
  },
  {
    "text": "going to talk about Bluetooth LE a little bit um and that really splits out into two different categories um we call",
    "start": "98759",
    "end": "104399"
  },
  {
    "text": "Bluetooth LE uh we're going to look at it from The Gap perspective which is connected Bluetooth devices and then",
    "start": "104399",
    "end": "110159"
  },
  {
    "text": "we're going to look at these things we're calling beacons which are Bluetooth LE devices that don't really accept connections and what that kind of",
    "start": "110159",
    "end": "115960"
  },
  {
    "text": "means uh then we're going to dive into some of the USB stuff and I'm going to talk about Google's USB API called open accessory",
    "start": "115960",
    "end": "123159"
  },
  {
    "text": "that you can use to communicate with an accessory to a phone or tablet uh and we'll also talk about the USB host apis",
    "start": "123159",
    "end": "129640"
  },
  {
    "text": "that you can use to write applications to communicate with other commercial USB devices",
    "start": "129640",
    "end": "135239"
  },
  {
    "text": "okay all right so let's start with Bluetooth and work our way down so just a little bit of background on Bluetooth",
    "start": "135239",
    "end": "141040"
  },
  {
    "text": "classic now Bluetooth classic is a relatively new term um it's essentially what we refer to as Bluetooth everything",
    "start": "141040",
    "end": "147519"
  },
  {
    "text": "before 4.0 okay so now that we have Bluetooth LE or bluetooth smart uh",
    "start": "147519",
    "end": "152720"
  },
  {
    "text": "everything that doesn't fit in that category we've decided to call Bluetooth classic okay so um just some basic",
    "start": "152720",
    "end": "158879"
  },
  {
    "text": "background about how all this stuff works so in Bluetooth classic we have some concepts of things like device",
    "start": "158879",
    "end": "164280"
  },
  {
    "text": "Discovery so device Discovery is the process of um two devices finding each other in order to make a connection uh",
    "start": "164280",
    "end": "171440"
  },
  {
    "text": "and in the Bluetooth classic Paradigm this is um actually quite different from Bluetooth LE so I want to kind of focus",
    "start": "171440",
    "end": "177400"
  },
  {
    "text": "on it but uh device Discovery in Bluetooth Bluetooth classic is very Centric to the uh the scanning device so",
    "start": "177400",
    "end": "184920"
  },
  {
    "text": "in in case of Bluetooth classic devices that are out in the world to be connected um are known as discoverable",
    "start": "184920",
    "end": "191760"
  },
  {
    "text": "and they're actually just dumb listening devices and the device in for instance in examples that I have like the Android",
    "start": "191760",
    "end": "198120"
  },
  {
    "text": "device is outs scanning actively pushing packets out to the world to find these",
    "start": "198120",
    "end": "203400"
  },
  {
    "text": "new devices um and that's specific to Bluetooth classic because it turns out Bluetooth LE actually does it in reverse",
    "start": "203400",
    "end": "209280"
  },
  {
    "text": "but we'll talk about that a little bit later um in addition to that we have this concept of pairing or bonding um",
    "start": "209280",
    "end": "215640"
  },
  {
    "text": "most people have probably heard of pairing not as many people have probably heard of bonding they're kind of the same thing but not really um when you're",
    "start": "215640",
    "end": "222799"
  },
  {
    "text": "looking at the Android API specifically they use the term bonded more than they use pairing um in general a bonded",
    "start": "222799",
    "end": "230280"
  },
  {
    "text": "device or bonded devices are two devices that uh have gone through the pairing process so that's the sort of the",
    "start": "230280",
    "end": "237120"
  },
  {
    "text": "difference between those two so when you hear that you're pairing to Bluetooth devices that's simply a process you go",
    "start": "237120",
    "end": "243040"
  },
  {
    "text": "through to enter in a secure pin or some other connection mechanism to achieve a bond between those two once those",
    "start": "243040",
    "end": "250079"
  },
  {
    "text": "devices are bonded together they can more easily connect together later on you don't have to go through that same",
    "start": "250079",
    "end": "255239"
  },
  {
    "text": "process over and over again okay yes",
    "start": "255239",
    "end": "259680"
  },
  {
    "text": "question tethering um it's it completely outside the scope I mean tethering is as",
    "start": "262759",
    "end": "268639"
  },
  {
    "text": "a a higher level distinction of being outside any connection mechanism and is more about connecting some device either",
    "start": "268639",
    "end": "275600"
  },
  {
    "text": "wired or wirelessly for the purposes of like a network connection or something like that so it's not quite at the same",
    "start": "275600",
    "end": "281280"
  },
  {
    "text": "layer good question though uh okay uh one thing that I do want to focus on though is that there was a change in the",
    "start": "281280",
    "end": "287479"
  },
  {
    "text": "Bluetooth spec uh in Bluetooth 2.1 where they added the ability to do something",
    "start": "287479",
    "end": "292680"
  },
  {
    "text": "called Simple secure pairing now those of you who have basic Bluetooth devices maybe a headset or you have Bluetooth in",
    "start": "292680",
    "end": "298680"
  },
  {
    "text": "your car you're probably familiar with the basic pairing mechanism which is you connect to the device there's some",
    "start": "298680",
    "end": "304759"
  },
  {
    "text": "four-digit pin that you have to enter in on the screen and then once you get that right hoping the device doesn't time out",
    "start": "304759",
    "end": "310240"
  },
  {
    "text": "before you get it entered in you're going to have this connection and you can now start communicating between the two simple secure pairing sort of",
    "start": "310240",
    "end": "316840"
  },
  {
    "text": "eliminates that piece um and allows devices that support it the ability to pair and bond together without user",
    "start": "316840",
    "end": "323880"
  },
  {
    "text": "intervention okay this is very helpful for embedded devices where we don't necessarily have a display that we can",
    "start": "323880",
    "end": "330400"
  },
  {
    "text": "either show a pin codee or type anything in okay so and that uh has some",
    "start": "330400",
    "end": "336000"
  },
  {
    "text": "ramifications for what they added to the Android apis so we'll talk about that um the Bluetooth in general both in classic",
    "start": "336000",
    "end": "343560"
  },
  {
    "text": "and Le has this concept of protocols and profiles this is really just how the stack is built so the protocols are",
    "start": "343560",
    "end": "350400"
  },
  {
    "text": "typically the middleware layer between the hardware and the link and um what we would call the abstracted profiles which",
    "start": "350400",
    "end": "357400"
  },
  {
    "text": "are more of the functional piece that that device device uh represents so a Bluetooth profile would be something",
    "start": "357400",
    "end": "363479"
  },
  {
    "text": "you're familiar with like a handsfree profile or a wireless media profile or",
    "start": "363479",
    "end": "368919"
  },
  {
    "text": "a2dp which is audio streaming to speaker or in the case of what we're going to look at tonight A Serial Port profile so",
    "start": "368919",
    "end": "376039"
  },
  {
    "text": "these are these are functions that you you actually interact with as an end user and the protocols are typically",
    "start": "376039",
    "end": "381840"
  },
  {
    "text": "just the the pieces underneath that to be the glue between that and the link in the stack okay so in the case of what",
    "start": "381840",
    "end": "389160"
  },
  {
    "text": "we're going to talk about today rfom is really the protocol and then the serial Port profile is what sits on top of that",
    "start": "389160",
    "end": "396319"
  },
  {
    "text": "uh in the examples that we're going to look at okay uh and then kind of to finish that out Bluetooth devices expose",
    "start": "396319",
    "end": "404280"
  },
  {
    "text": "their capabilities to scanning devices uh via these things called Services",
    "start": "404280",
    "end": "409560"
  },
  {
    "text": "really a service is just a a logical definition of something you can connect to that is referenced by a unique",
    "start": "409560",
    "end": "416120"
  },
  {
    "text": "identifier or uu ID Okay so in the case of Android those of you who have played",
    "start": "416120",
    "end": "423720"
  },
  {
    "text": "around with the apis a little bit you may have landed on this part of the documentation before um this specific",
    "start": "423720",
    "end": "430879"
  },
  {
    "text": "method this create RF rfom socket to service record um is designed to allow",
    "start": "430879",
    "end": "436080"
  },
  {
    "text": "you to connect to an external Bluetooth device open a channel and start streaming data but it passes in this",
    "start": "436080",
    "end": "442960"
  },
  {
    "text": "unique identifier value and the question is what is that you know what do I put in here to get access to the service on",
    "start": "442960",
    "end": "449199"
  },
  {
    "text": "the other device that I'm interested in in the case of communication between two Android devices this is an easy question",
    "start": "449199",
    "end": "455599"
  },
  {
    "text": "to answer because for instance if you look at the Bluetooth chat sample that they provide one device is implementing",
    "start": "455599",
    "end": "461599"
  },
  {
    "text": "the service itself and so you define what that uu ID is so you know what it is over here so you just put it in your",
    "start": "461599",
    "end": "467199"
  },
  {
    "text": "code over here and you can make that connection but in cases of an embedded device like the one I have here in my",
    "start": "467199",
    "end": "473240"
  },
  {
    "text": "hand what is the uuid that I use to connect to this board well what they",
    "start": "473240",
    "end": "478840"
  },
  {
    "text": "added to the documentation shortly thereafter was this little note down here that basically says hint if you're",
    "start": "478840",
    "end": "484720"
  },
  {
    "text": "connecting to a Bluetooth serial board maybe you should try this well-known s uu ID and puts it out there in front",
    "start": "484720",
    "end": "492520"
  },
  {
    "text": "first time I read that I'm like what the hell does that mean wellknown I didn't know what it meant um but there's an",
    "start": "492520",
    "end": "497759"
  },
  {
    "text": "interesting way about where that comes about so the way that Bluetooth services are identified using these uu IDs is",
    "start": "497759",
    "end": "505520"
  },
  {
    "text": "following this kind of pattern okay so a uu ID is always 128bit value that's just",
    "start": "505520",
    "end": "511919"
  },
  {
    "text": "by a definition what it is but in terms of the Bluetooth specification there are",
    "start": "511919",
    "end": "517000"
  },
  {
    "text": "a number of service uu IDs that are defined specifically by the Bluetooth Sig for specific reasons so the serial",
    "start": "517000",
    "end": "523479"
  },
  {
    "text": "Port profile has an ID the I have them listed there the rfom protocol has an ID",
    "start": "523479",
    "end": "529040"
  },
  {
    "text": "and all of these are actually 16bit values but the way that they get translated into a full uuid is by taking",
    "start": "529040",
    "end": "536560"
  },
  {
    "text": "this hardcoded base value that's true for every Bluetooth device ever Bluetooth LE Bluetooth classic all of",
    "start": "536560",
    "end": "542560"
  },
  {
    "text": "them and then they simply apply the 16bit value in the initial field of the",
    "start": "542560",
    "end": "548839"
  },
  {
    "text": "uuid okay now this also means that you can if you're writing your own firmware",
    "start": "548839",
    "end": "554160"
  },
  {
    "text": "or some other embedded Bluetooth device you can create any service you'd like that has nothing to do with the Bluetooth spec and you just identify it",
    "start": "554160",
    "end": "561360"
  },
  {
    "text": "by your own unique identifier that has nothing to do with this format but in the case of the standard ones like what",
    "start": "561360",
    "end": "567279"
  },
  {
    "text": "we're interested in is is the serial port profile that's what I want to connect to so I can start streaming data to my board well if we take a look and",
    "start": "567279",
    "end": "574320"
  },
  {
    "text": "we see that serial Port profiles value is 1101 and then the rest of it is that giant hardcoded value for all Bluetooth",
    "start": "574320",
    "end": "581760"
  },
  {
    "text": "we add them together and we get the same number that we had here before okay so it was well known to",
    "start": "581760",
    "end": "588839"
  },
  {
    "text": "people who understood the Bluetooth spec even if it was nobody else",
    "start": "588839",
    "end": "593920"
  },
  {
    "text": "okay so from a Android perspective I won't dive too deeply into the code because I have an example show you",
    "start": "593920",
    "end": "599760"
  },
  {
    "text": "instead but just some of the basic pieces that you would expect to see in the Android apis for this um you know if",
    "start": "599760",
    "end": "605560"
  },
  {
    "text": "if we're going to use an rfom connection to communicate between an Android device and some embedded board or some embedded",
    "start": "605560",
    "end": "611920"
  },
  {
    "text": "chip uh first we have to be able to discover those two devices they have to be able to find each other so the",
    "start": "611920",
    "end": "617760"
  },
  {
    "text": "process of Discovery in the Android framework is started on the Bluetooth adapter so we just there's a method we",
    "start": "617760",
    "end": "623640"
  },
  {
    "text": "call start Discovery and this is an asynchronous process that as it goes through searching the world around it it",
    "start": "623640",
    "end": "629399"
  },
  {
    "text": "will call back into the application in this case using broadcasts uh every time",
    "start": "629399",
    "end": "634560"
  },
  {
    "text": "it finds a new device that is out that is discovered and then at that point our application can react to that figure out",
    "start": "634560",
    "end": "641639"
  },
  {
    "text": "if it's the device we were really interested in then try to connect to it or move on okay the uh at some point in",
    "start": "641639",
    "end": "648440"
  },
  {
    "text": "a at some point in the future we may have already bonded to the device it may already be active and we don't need to",
    "start": "648440",
    "end": "654399"
  },
  {
    "text": "Discover it again so there's also the opportunity to call get Remote device to",
    "start": "654399",
    "end": "659519"
  },
  {
    "text": "get a list well you can get a list of devices from the adapter and then call get Remote device to get access to a",
    "start": "659519",
    "end": "665200"
  },
  {
    "text": "specific instance of a device you've already bonded to so you don't have to go through this process again Discovery",
    "start": "665200",
    "end": "670880"
  },
  {
    "text": "process does take some time and it's also high power because it's turning on a radio and spewing a bunch of stuff out",
    "start": "670880",
    "end": "676639"
  },
  {
    "text": "to the world so we only want to do this when we actually have to okay uh then we have these methods for creating socket",
    "start": "676639",
    "end": "683519"
  },
  {
    "text": "connections notice there's create rfom socket and create insecure rfom socket",
    "start": "683519",
    "end": "689399"
  },
  {
    "text": "the difference between those two has goes back to that simple secure pairing idea so create rfom socket was the first",
    "start": "689399",
    "end": "696639"
  },
  {
    "text": "version of this method that we got that allowed us to connect to a device but it used the old prior to Bluetooth 2.1",
    "start": "696639",
    "end": "703639"
  },
  {
    "text": "standard pairing mechanism so if the devices weren't already paired and you hadn't manually gone through that",
    "start": "703639",
    "end": "708959"
  },
  {
    "text": "process somehow this would usually fail so you had to somehow add that layer into your application with insecure rfom",
    "start": "708959",
    "end": "716680"
  },
  {
    "text": "sockets we can create one of those and attempt to connect to that same device if that device supports the Bluetooth",
    "start": "716680",
    "end": "722639"
  },
  {
    "text": "2.1 spec I can pair to that device without any user intervention at all okay so that's the difference between",
    "start": "722639",
    "end": "729000"
  },
  {
    "text": "those two methods there once we have a active socket to our device we can",
    "start": "729000",
    "end": "735519"
  },
  {
    "text": "simply open or connect to that socket and then get an a raw input and output stream from that socket okay so now I've",
    "start": "735519",
    "end": "742160"
  },
  {
    "text": "got an input stream an output stream and I can start shoveling whatever data I'd like back and forth what that data is",
    "start": "742160",
    "end": "747959"
  },
  {
    "text": "specific to my application there's no additional protocol or overhead I have to do at that point it's just a raw open",
    "start": "747959",
    "end": "753440"
  },
  {
    "text": "Channel between me and my Remote device",
    "start": "753440",
    "end": "758399"
  },
  {
    "text": "yes so I kind of skipped over it but that section in the middle there sort of points to that that there you can also",
    "start": "763040",
    "end": "769639"
  },
  {
    "text": "on an Android device set up a listen socket which and then by calling accept right after that blocks waiting for an",
    "start": "769639",
    "end": "776279"
  },
  {
    "text": "incoming connection so yes in the case of rfom you can do either this example",
    "start": "776279",
    "end": "781320"
  },
  {
    "text": "was very client-based though sure so how do they connect together when there's no um you know",
    "start": "781320",
    "end": "788120"
  },
  {
    "text": "when there's no direct address known now you may know the address because you can if you know it ahead of time it's a MAC",
    "start": "788120",
    "end": "793440"
  },
  {
    "text": "address instead of an IP address but even still in those cases um device Discovery is what that's for so during",
    "start": "793440",
    "end": "799519"
  },
  {
    "text": "the discovery process is when you would find the other device and attempt to connect to that existing socket um if",
    "start": "799519",
    "end": "805120"
  },
  {
    "text": "you want more uh information on a good way to do that the Bluetooth chat sample in the SDK does exactly that both",
    "start": "805120",
    "end": "811959"
  },
  {
    "text": "devices set up a server and then they attempt to connect and whichever one wins that's how that direction goes okay",
    "start": "811959",
    "end": "818399"
  },
  {
    "text": "good question all right so beyond that we have this idea",
    "start": "818399",
    "end": "824600"
  },
  {
    "text": "of Bluetooth LE so Bluetooth LE was added to the Android framework in 4.3 and so it's really only been around for",
    "start": "824600",
    "end": "831000"
  },
  {
    "text": "a couple of months uh 4.3 was released in July so uh what this now provides is",
    "start": "831000",
    "end": "837079"
  },
  {
    "text": "additional apis that allow us to connect to Bluetooth LE devices using uh what's",
    "start": "837079",
    "end": "843240"
  },
  {
    "text": "known as the Gat profile so any device that implements or refers to itself as bluetooth smart or Bluetooth LE and it's",
    "start": "843240",
    "end": "849759"
  },
  {
    "text": "not a beacon um that device implements what's known as a gat server Gat stands",
    "start": "849759",
    "end": "855399"
  },
  {
    "text": "for General attribute profile it just runs on top of the attribute protocol but these devices are basically just",
    "start": "855399",
    "end": "862600"
  },
  {
    "text": "simple key value data uh a a gat server device really just represents its memory",
    "start": "862600",
    "end": "868079"
  },
  {
    "text": "as a key value table of information known as characteristics and these characteristics are grouped together",
    "start": "868079",
    "end": "873680"
  },
  {
    "text": "into services and then these services are grouped together into a one or more profiles and the profiles are what you",
    "start": "873680",
    "end": "879600"
  },
  {
    "text": "see published for things like the find me profile the proximity profile the health thermometer profile each of these",
    "start": "879600",
    "end": "885839"
  },
  {
    "text": "is a collection of services and characteristics which is just data you can read and write discreetly okay yes",
    "start": "885839",
    "end": "891399"
  },
  {
    "text": "so what is the question to which profile is the answer what are profiles for how",
    "start": "891399",
    "end": "897079"
  },
  {
    "text": "do they help me as a simp it's really just an abstraction right it's it's a documented definition of a set of",
    "start": "897079",
    "end": "904120"
  },
  {
    "text": "services and characteristics that a device could expect to have so for in if a device claims that it implements the",
    "start": "904120",
    "end": "911600"
  },
  {
    "text": "proximity profile you know that because it claims it's implementing that profile which is specked out by the Bluetooth",
    "start": "911600",
    "end": "917880"
  },
  {
    "text": "Sig that that profile has these services and those Services have these characteristics so without having to",
    "start": "917880",
    "end": "923120"
  },
  {
    "text": "have any additional documentation you know how to talk to that device is it fair to say it's like a interface sure",
    "start": "923120",
    "end": "930600"
  },
  {
    "text": "yeah it's an interface specification that's exactly what it is M good question okay so then kind of uh beyond",
    "start": "930600",
    "end": "939839"
  },
  {
    "text": "that I mentioned this idea that Bluetooth LE deals with Device Discovery very differently from classic Bluetooth",
    "start": "939839",
    "end": "946240"
  },
  {
    "text": "in the fact that it's exact opposite so in Bluetooth LE the devices themselves",
    "start": "946240",
    "end": "951920"
  },
  {
    "text": "the server devices don't listen when they're in a discoverable mode instead they're constantly advertising okay this",
    "start": "951920",
    "end": "959000"
  },
  {
    "text": "helps us get to this concept of beacons a little bit later but the devices that are out with data on them are simply",
    "start": "959000",
    "end": "965920"
  },
  {
    "text": "advertising on some regular interval so a scan in this case is not a transmission instead it's just listening",
    "start": "965920",
    "end": "972279"
  },
  {
    "text": "for incoming advertisements that's one of the reasons why scans in Bluetooth LE are so much lower power because the the",
    "start": "972279",
    "end": "979240"
  },
  {
    "text": "the beacon devices themselves are doing this on a schedule instead of continuously and on the other side the",
    "start": "979240",
    "end": "984839"
  },
  {
    "text": "scanning device isn't transmitting at all it's just listening okay and then so",
    "start": "984839",
    "end": "990120"
  },
  {
    "text": "there are there's a number of what you would consider device roles when we talk about Bluetooth LE now there's there's",
    "start": "990120",
    "end": "997000"
  },
  {
    "text": "four major roles there's what we call the central role and the peripheral role those are connected roles and then the",
    "start": "997000",
    "end": "1002600"
  },
  {
    "text": "Observer and the broadcaster those are kind of the paired roles of what we would think of as a beacon okay so a",
    "start": "1002600",
    "end": "1008480"
  },
  {
    "text": "broadcaster is a beacon and an observer is a device just looking at Beacon information okay uh Central role and",
    "start": "1008480",
    "end": "1015360"
  },
  {
    "text": "observer to date are the only types of roles we can Implement inside of an Android application the apis are not",
    "start": "1015360",
    "end": "1022680"
  },
  {
    "text": "there to do the other things yet they're there are hints that they will be there eventually both in the way the API works",
    "start": "1022680",
    "end": "1029880"
  },
  {
    "text": "and things that Google will tell you at conferences but in general today all we can do is Central role and observer okay",
    "start": "1029880",
    "end": "1037600"
  },
  {
    "text": "and those are the examples we'll look at okay so this is just sort of a visualization of what I had just",
    "start": "1037600",
    "end": "1043798"
  },
  {
    "text": "mentioned there and this is sort of how the data gets collected inside of a Bluetooth Leed device",
    "start": "1043799",
    "end": "1049400"
  },
  {
    "text": "right so there will be one or more of these profiles each profile will have one or more services defined in it",
    "start": "1049400",
    "end": "1055160"
  },
  {
    "text": "either with a custom muu ID if it's not a specific profile that the Bluetooth",
    "start": "1055160",
    "end": "1060200"
  },
  {
    "text": "Sig defines or these assigned what are called assigned numbers which are really just those 16bit uu IDs that Bluetooth",
    "start": "1060200",
    "end": "1067320"
  },
  {
    "text": "Sig does Define for its own services and characteristics okay and then underneath each service is going to be a group of",
    "start": "1067320",
    "end": "1073200"
  },
  {
    "text": "characteristics so a characteristic is really just a it's a value with some properties so I mean you know the service for instance the profile is the",
    "start": "1073200",
    "end": "1080280"
  },
  {
    "text": "health thermometer and the the service is the actual thermometer data and then the characteristics inside of that would",
    "start": "1080280",
    "end": "1086400"
  },
  {
    "text": "be the temperature value the temperature units and you know maybe some other configuration information okay so that's",
    "start": "1086400",
    "end": "1092720"
  },
  {
    "text": "kind of how that would break down in a general case Okay the same basic information",
    "start": "1092720",
    "end": "1099679"
  },
  {
    "text": "about the device architecture I won't go over that again okay so from the API P oh go ahead",
    "start": "1099679",
    "end": "1106919"
  },
  {
    "text": "question can you define your own profile absolutely now getting those ratified is",
    "start": "1106919",
    "end": "1112559"
  },
  {
    "text": "a different story but the the idea is that I can make a any uyu ID I'd like to",
    "start": "1112559",
    "end": "1118720"
  },
  {
    "text": "advertise a service and a characteristic so if I if I want to make my own that has nothing to do with interoperability",
    "start": "1118720",
    "end": "1125400"
  },
  {
    "text": "with other Bluetooth devices it's just my own custom thing with my own custom application go for it absolutely that's",
    "start": "1125400",
    "end": "1130799"
  },
  {
    "text": "that's why that part to the spec exists MH exactly that's exactly the the",
    "start": "1130799",
    "end": "1138400"
  },
  {
    "text": "profile defined by the Sig are there really only for the purposes of interoperability so that with by simply",
    "start": "1138400",
    "end": "1144559"
  },
  {
    "text": "calling something X we all know what that means and we can all talk together but if it's specific to you define your",
    "start": "1144559",
    "end": "1150640"
  },
  {
    "text": "own absolutely yes sure well so one of the reasons is",
    "start": "1150640",
    "end": "1156679"
  },
  {
    "text": "uh kind of what I described earlier about the difference in scanning procedures but even beyond that you'll",
    "start": "1156679",
    "end": "1162159"
  },
  {
    "text": "notice that there aren't any there's no such thing as a Bluetooth ell profile that has streaming data right these are",
    "start": "1162159",
    "end": "1167960"
  },
  {
    "text": "all key Val value packet based Communications we don't open a stream for audio and start pushing data over",
    "start": "1167960",
    "end": "1173600"
  },
  {
    "text": "Bluetooth El so it's simply conceptually the fact that there are there's smaller data packets that are transmitted in",
    "start": "1173600",
    "end": "1180240"
  },
  {
    "text": "interval chunks rather than setting up streaming channels between that and the scanning those are kind of the two biggest reasons yes the key value arure",
    "start": "1180240",
    "end": "1189720"
  },
  {
    "text": "I'm sorry say again the key value architecture Json no no I mean it's it's",
    "start": "1189720",
    "end": "1196159"
  },
  {
    "text": "really sure the the question was what is the architecture of the key value data I",
    "start": "1196159",
    "end": "1201240"
  },
  {
    "text": "mean it's it's really just a map in memory um you know the the IDS are just memory addresses to the values so it's",
    "start": "1201240",
    "end": "1208280"
  },
  {
    "text": "not it's not that high level at all um it's and the it's the job of the Bluetooth stack on the device to Simply",
    "start": "1208280",
    "end": "1215120"
  },
  {
    "text": "expose those addresses as specific characteristics or services and when",
    "start": "1215120",
    "end": "1220280"
  },
  {
    "text": "when request we request packets come in that define those IDs which they do so by that same address value um then it's",
    "start": "1220280",
    "end": "1228000"
  },
  {
    "text": "the respons ability of the Bluetooth device to respond back with another packet that has the data in it so it's",
    "start": "1228000",
    "end": "1233440"
  },
  {
    "text": "it's um it's packet level communication it's it's not higher level in any type of definition that you would think of",
    "start": "1233440",
    "end": "1239080"
  },
  {
    "text": "Json or XML or any other data format that's structured does that make sense okay okay okay",
    "start": "1239080",
    "end": "1247240"
  },
  {
    "text": "yeah that's correct you know and actually another important distinction to make is that Bluetooth 4.0 and",
    "start": "1247240",
    "end": "1254679"
  },
  {
    "text": "Bluetooth LE are not the same thing okay the Bluetooth 4.0 spec is just the next version of the Bluetooth spec that",
    "start": "1254679",
    "end": "1261120"
  },
  {
    "text": "includes b as a part of it um but all the other pieces in Bluetooth that you know we've continue to use that are we",
    "start": "1261120",
    "end": "1267799"
  },
  {
    "text": "now calling Bluetooth classic um are still active and well you know it's streaming audio to my car happens over",
    "start": "1267799",
    "end": "1273480"
  },
  {
    "text": "Bluetooth classic and will probably never be part of Bluetooth El it's just another piece to the whole",
    "start": "1273480",
    "end": "1279600"
  },
  {
    "text": "puzzle how difficult would it be to backport the Bluetooth I apis to Ice",
    "start": "1279600",
    "end": "1285000"
  },
  {
    "text": "Cream Sandwich extremely um specifically because at least in that difference",
    "start": "1285000",
    "end": "1291120"
  },
  {
    "text": "you're talking about uh Bluetooth LE apis were added into a version of Android that had a completely different",
    "start": "1291120",
    "end": "1297120"
  },
  {
    "text": "Bluetooth stack than 4.0 did the the Bluetooth stack change actually happened",
    "start": "1297120",
    "end": "1302520"
  },
  {
    "text": "in 4.2 the version just before it um and that that drills down deeply into how the stack is implemented and how that",
    "start": "1302520",
    "end": "1308840"
  },
  {
    "text": "works with the underlying Hardware so I wouldn't expect to do it anytime soon now the what the manufacturers have done",
    "start": "1308840",
    "end": "1315559"
  },
  {
    "text": "prior to when Google came out with their own API in for three they provided their own sdks to do Bluetooth LE specifically",
    "start": "1315559",
    "end": "1322559"
  },
  {
    "text": "on HTC devices or on Motorola devices and they could do that because they were putting their own pieces in the Bluetooth stack when they built those",
    "start": "1322559",
    "end": "1328799"
  },
  {
    "text": "system images which is probably the more likely proposition in that case yeah for sure",
    "start": "1328799",
    "end": "1335039"
  },
  {
    "text": "all right let me U let me keep rolling here we can do some more questions at the end because I want to make sure to get to the demos okay so just a couple",
    "start": "1335039",
    "end": "1340720"
  },
  {
    "text": "other pieces about the API so when you're scanning for new devices there's a different method for Le scans it's not",
    "start": "1340720",
    "end": "1347000"
  },
  {
    "text": "discover devices it's start Le scan SC um then once you have a reference to the device that it gets discovered you're",
    "start": "1347000",
    "end": "1353640"
  },
  {
    "text": "going to connect to that device with connect Gat so it even has a separate connect method than traditional",
    "start": "1353640",
    "end": "1359039"
  },
  {
    "text": "Bluetooth uh Bluetooth classic so and remember you're going to see the word Gat a lot in the apis and that's because",
    "start": "1359039",
    "end": "1364720"
  },
  {
    "text": "it refers back to the Gap profile that Bluetooth Elli is kind of based on okay",
    "start": "1364720",
    "end": "1370000"
  },
  {
    "text": "um then once we have this connection in place we can start reading and writing these characteristic values by ID so",
    "start": "1370000",
    "end": "1375880"
  },
  {
    "text": "every characteristic has a uu ID we tell it want to read this characteristic you know if it's the temperature value of a",
    "start": "1375880",
    "end": "1381559"
  },
  {
    "text": "thermometer or whatever the case it is um or I want to write something back maybe it's a configuration value",
    "start": "1381559",
    "end": "1387279"
  },
  {
    "text": "characteristics also support notification so I can tell the Bluetooth device that I'm interested in this",
    "start": "1387279",
    "end": "1392880"
  },
  {
    "text": "characteristic and while we're connected when this value changes you tell me okay",
    "start": "1392880",
    "end": "1397960"
  },
  {
    "text": "that goes back to that whole low power thing I don't have to keep pulling the device for new data the notification",
    "start": "1397960",
    "end": "1403400"
  },
  {
    "text": "tells me when that information occurs okay uh and then all these processes though",
    "start": "1403400",
    "end": "1409120"
  },
  {
    "text": "asynchronous so there's this Bluetooth G call back that uh basically imple you",
    "start": "1409120",
    "end": "1414200"
  },
  {
    "text": "have to implement for all these different methods when these events occur so I call read characteristic but",
    "start": "1414200",
    "end": "1419400"
  },
  {
    "text": "it doesn't come back to me until uncharacteristic read is fired I call write characteristic it's not done until",
    "start": "1419400",
    "end": "1424960"
  },
  {
    "text": "uncharacteristic right has been has taken place okay and that's actually very important because you you very much",
    "start": "1424960",
    "end": "1432480"
  },
  {
    "text": "want to wait for those characteristic call backs before you move to the next",
    "start": "1432480",
    "end": "1437880"
  },
  {
    "text": "event trying to cue these up at least in the Android apis fails every time okay",
    "start": "1437880",
    "end": "1443200"
  },
  {
    "text": "it very much only works one at a time and so your code will end up having this giant State machine in it where you say",
    "start": "1443200",
    "end": "1449600"
  },
  {
    "text": "do this okay done do this okay done and just kind of cycling through this unfortunately I've tried to do it any",
    "start": "1449600",
    "end": "1455279"
  },
  {
    "text": "faster than that and the API just freaks out okay so you very much have to involve those callbacks okay so moving on to",
    "start": "1455279",
    "end": "1462480"
  },
  {
    "text": "broadcasters or what we would call beacons so an LA broadcaster is really just a device that",
    "start": "1462480",
    "end": "1469120"
  },
  {
    "text": "is transmitting data in its advertisement rather than accepting incoming connections okay so a beacon",
    "start": "1469120",
    "end": "1476640"
  },
  {
    "text": "device or a broadcaster like the the ones that I have here and I've placed a couple around the room these devices",
    "start": "1476640",
    "end": "1483000"
  },
  {
    "text": "have a very simple Bluetooth stack because they don't support connections of any kind they simply on some regular",
    "start": "1483000",
    "end": "1489120"
  },
  {
    "text": "schedule send out an advertisement and the only difference between that advertisement and what a connectable",
    "start": "1489120",
    "end": "1494320"
  },
  {
    "text": "device sends is that it includes the data that it has its advertisement so",
    "start": "1494320",
    "end": "1500240"
  },
  {
    "text": "rather than having to connect to the device to find some information on a characteristic I just parse the advertisement and it's right there okay",
    "start": "1500240",
    "end": "1507000"
  },
  {
    "text": "so it's much faster but at the same time advertisements aren't exactly large packets so that limit of what I can fit",
    "start": "1507000",
    "end": "1514279"
  },
  {
    "text": "in there gets hit pretty quickly you know we're talking 27 bytes maybe you know there's not a lot of information",
    "start": "1514279",
    "end": "1519760"
  },
  {
    "text": "there but for a handful of sensor values works great so that also simplifies the",
    "start": "1519760",
    "end": "1525600"
  },
  {
    "text": "Bluetooth stack on the embedded side so it's become very popular just because embedded developers can write these",
    "start": "1525600",
    "end": "1532279"
  },
  {
    "text": "devices without having to deal with a very complex Bluetooth stack on an embedded device that handles you know",
    "start": "1532279",
    "end": "1537840"
  },
  {
    "text": "connections and reconnecting and all those types of things that are in the the rest of the Bluetooth spec",
    "start": "1537840",
    "end": "1545240"
  },
  {
    "text": "okay all right so just kind of a basic about this so there there's a call back in the Android API is called onell scan",
    "start": "1545240",
    "end": "1552080"
  },
  {
    "text": "and this call back is where you would you'll get this regularly whenever a new device is discovered and in addition",
    "start": "1552080",
    "end": "1559240"
  },
  {
    "text": "there's this third parameter that when we're dealing with connected devices we tend to ignore for the most part but",
    "start": "1559240",
    "end": "1565159"
  },
  {
    "text": "it's what uh Google calls the scan record and what's in this is this is",
    "start": "1565159",
    "end": "1570200"
  },
  {
    "text": "actually the advertisement data packet in raw format okay now according to the Bluetooth spec all this data stru packet",
    "start": "1570200",
    "end": "1577799"
  },
  {
    "text": "really is is a series of these advertisement data structures lumped together in an array okay and each of",
    "start": "1577799",
    "end": "1585240"
  },
  {
    "text": "these structures is quite simple it just contains a length a type and some type of a payload okay so there there're you",
    "start": "1585240",
    "end": "1592640"
  },
  {
    "text": "can kind of parse through this array pretty simply with Beacon devices to get out all these specific elements you know",
    "start": "1592640",
    "end": "1599120"
  },
  {
    "text": "whether it's a i Beacon made by some happen copertino fruit company or other",
    "start": "1599120",
    "end": "1604440"
  },
  {
    "text": "beacons designed by other developers that have a different protocol to them okay then the the types themselves again",
    "start": "1604440",
    "end": "1613000"
  },
  {
    "text": "kind of like with services and characteristics could really be anything but there there are number of standard",
    "start": "1613000",
    "end": "1619320"
  },
  {
    "text": "types that you will find defined inside Bluetooth assigned numbers uh and most",
    "start": "1619320",
    "end": "1624760"
  },
  {
    "text": "of the beacons that aren't made by Apple are going to use these standard uh Bluetooth IDs in one way or another okay",
    "start": "1624760",
    "end": "1632080"
  },
  {
    "text": "so you'll find things like there's an ID for a device name IDs for service data transmit power you know other things you",
    "start": "1632080",
    "end": "1639080"
  },
  {
    "text": "would expect to find and then based on the type value that sort of defines how big the payload is going to be so you",
    "start": "1639080",
    "end": "1645640"
  },
  {
    "text": "can just kind of look at these pieces and parse them out in chunks U with a pretty simple parser and I've got one in",
    "start": "1645640",
    "end": "1651000"
  },
  {
    "text": "the example as well um so in terms of beacons the service data",
    "start": "1651000",
    "end": "1657880"
  },
  {
    "text": "becomes the most important because we may have interesting information like the device name that we can display but",
    "start": "1657880",
    "end": "1664440"
  },
  {
    "text": "the service data block is where that information's going to be so you know if we want to stick a temperature value in",
    "start": "1664440",
    "end": "1670519"
  },
  {
    "text": "our advertisement it's going to be a service data block with the U uuid of A thermometer and the value right after",
    "start": "1670519",
    "end": "1676880"
  },
  {
    "text": "that okay because that become sort of the most important in terms of",
    "start": "1676880",
    "end": "1682159"
  },
  {
    "text": "beacons all right so then just a couple Hands-On tips if you will from dealing with Bluetooth ell in Android the first",
    "start": "1682159",
    "end": "1689159"
  },
  {
    "text": "one I already mentioned but I'll stress it again wait for those callbacks if you're going to do anything with Bluetooth Gap you're going to end up",
    "start": "1689159",
    "end": "1695880"
  },
  {
    "text": "doing this in a very even though it's an asynchronous API a very one shot synchronous fashion so read call back",
    "start": "1695880",
    "end": "1702919"
  },
  {
    "text": "write call back set characteristic notify call back otherwise you'll confuse the ID apis maybe that'll change",
    "start": "1702919",
    "end": "1709720"
  },
  {
    "text": "in the future but it still works that way at least in KitKat okay make sure that if you're doing",
    "start": "1709720",
    "end": "1715799"
  },
  {
    "text": "anything with the user interface you're going to need to post the results you're getting onto the main thread these",
    "start": "1715799",
    "end": "1721679"
  },
  {
    "text": "callbacks come back on a thread pool so everything that happens in on read on write onchanged are on some random pool",
    "start": "1721679",
    "end": "1729880"
  },
  {
    "text": "out of a thread and you try to touch a view from that thread and you're going to have a very bad time okay so you need",
    "start": "1729880",
    "end": "1735799"
  },
  {
    "text": "to post those changes back to using a Handler or whatever case you're familiar with to get that data onto the main",
    "start": "1735799",
    "end": "1741559"
  },
  {
    "text": "thread before you update the UI okay uh notifications are kind of tricky and",
    "start": "1741559",
    "end": "1747360"
  },
  {
    "text": "this may change in future versions of the API but at least today the the method for doing this in the API is set",
    "start": "1747360",
    "end": "1753679"
  },
  {
    "text": "characteristic notification and if you look at the documentation you assume that by calling this method it sets what",
    "start": "1753679",
    "end": "1759960"
  },
  {
    "text": "we need to on the Remote device you would be wrong it turns out that set characteristic notification just sets",
    "start": "1759960",
    "end": "1766600"
  },
  {
    "text": "locally on the Android device inside of its internal Gat server database that this characteristic should have",
    "start": "1766600",
    "end": "1772279"
  },
  {
    "text": "notifications turned on but nobody told the device that that was the case so generally any time and you'll see that",
    "start": "1772279",
    "end": "1777919"
  },
  {
    "text": "in the example code that I have posted anytime you need to set notifications on a characteristic you have to tell the",
    "start": "1777919",
    "end": "1784080"
  },
  {
    "text": "local database using set notification and write that characteristic explicitly on the device okay um Android has this",
    "start": "1784080",
    "end": "1792760"
  },
  {
    "text": "hard limit right now and they don't tell you about it that is you have to have a maximum of four simult aneous",
    "start": "1792760",
    "end": "1798559"
  },
  {
    "text": "notifications active at any given time so if you try to set notification on more than four characteristics it'll",
    "start": "1798559",
    "end": "1804360"
  },
  {
    "text": "just stop working okay there's a lot of that in the Bluetooth API right now it'll just stop working um okay and then",
    "start": "1804360",
    "end": "1812600"
  },
  {
    "text": "the last piece is unlike with Bluetooth classic which has really been a part of Android apis for so long we don't even",
    "start": "1812600",
    "end": "1818159"
  },
  {
    "text": "really pay attention to whether or not devices have it anymore Bluetooth El is still relatively new so if you're going",
    "start": "1818159",
    "end": "1824279"
  },
  {
    "text": "to use this in an application you're going to want to make sure that you're properly verifying that the devices that",
    "start": "1824279",
    "end": "1830159"
  },
  {
    "text": "you're running on have support for this just because a device says on its spec sheet that it has Bluetooth 4.0 doesn't",
    "start": "1830159",
    "end": "1837120"
  },
  {
    "text": "mean the manufacturer implemented the Le apis it just doesn't so you have to",
    "start": "1837120",
    "end": "1842840"
  },
  {
    "text": "check either using a manifest filter for Google Play or simply at runtime checking with package manager does this",
    "start": "1842840",
    "end": "1849519"
  },
  {
    "text": "device have this feature okay all right so just a little bit",
    "start": "1849519",
    "end": "1855639"
  },
  {
    "text": "about the stack um Bluetooth device will come in a number of different flavors uh you'll typically find them in either a",
    "start": "1855639",
    "end": "1862000"
  },
  {
    "text": "single mode or dual mode version now that we've come into Bluetooth 4.0 Bluetooth 4.0 the Bluetooth stack itself",
    "start": "1862000",
    "end": "1869360"
  },
  {
    "text": "is different enough that many devices will only support one type or the other and not both but the stack is common",
    "start": "1869360",
    "end": "1876240"
  },
  {
    "text": "enough as you can see here that we get most of the way up before we start to diverge and then like in our classic",
    "start": "1876240",
    "end": "1882120"
  },
  {
    "text": "example rfom and serial Port profile are different from our attribute and Gat but",
    "start": "1882120",
    "end": "1887360"
  },
  {
    "text": "everything underne beneath that as far as the protocols and links are actually the same so many devices will be what's",
    "start": "1887360",
    "end": "1892919"
  },
  {
    "text": "called dual mode and will support both of these where others may only be one one versus the other now in terms of",
    "start": "1892919",
    "end": "1900159"
  },
  {
    "text": "marketing terminology this is how that kind of breaks down so when you hear the term Bluetooth classic applied to a",
    "start": "1900159",
    "end": "1906320"
  },
  {
    "text": "device that means that that device is single mode and only supports the Bluetooth stack probably up to Bluetooth",
    "start": "1906320",
    "end": "1911960"
  },
  {
    "text": "2.1 okay if it's a bluetooth smart device that means that it only supports",
    "start": "1911960",
    "end": "1918000"
  },
  {
    "text": "Bluetooth 4.0 probably the B piece of that okay bluetooth smart ready means",
    "start": "1918000",
    "end": "1925159"
  },
  {
    "text": "dual mode okay so often times Android devices will be marketed as bluetooth",
    "start": "1925159",
    "end": "1930840"
  },
  {
    "text": "smart ready because they support classic Bluetooth and B on the same chip",
    "start": "1930840",
    "end": "1937480"
  },
  {
    "text": "okay something to keep in mind impress your friends at your next party with that one okay so a little bit about the",
    "start": "1937480",
    "end": "1944519"
  },
  {
    "text": "history of the apis for Bluetooth so inside of the Bluetooth we've kind of",
    "start": "1944519",
    "end": "1949880"
  },
  {
    "text": "had a long history of how this is evolved through Android so we got the first API in Android 2.0 so that's level",
    "start": "1949880",
    "end": "1956159"
  },
  {
    "text": "five as I mentioned that was a long time ago most of us don't even pay attention to devices that old or older anymore um",
    "start": "1956159",
    "end": "1962120"
  },
  {
    "text": "and this was a very simple API at the time it was rfom only um it gave us enough to discover devices connect to",
    "start": "1962120",
    "end": "1968919"
  },
  {
    "text": "them using sockets and transfer data that was about it okay uh in gingerbread",
    "start": "1968919",
    "end": "1974360"
  },
  {
    "text": "specifically the version 10 of gingerbread um we got that that insecure rfom connection support So after they",
    "start": "1974360",
    "end": "1981080"
  },
  {
    "text": "revved it into the Bluetooth spec they rev the apis on Android to include that create insecure socket so that we could",
    "start": "1981080",
    "end": "1987480"
  },
  {
    "text": "start connecting to embedded devices without having to do this manual pairing process okay uh in 3.0 they added",
    "start": "1987480",
    "end": "1994120"
  },
  {
    "text": "Bluetooth profiles which we won't talk a lot about today because they're kind of outside the scope of dealing with",
    "start": "1994120",
    "end": "1999799"
  },
  {
    "text": "accessories but this is if you want information about connected commercial devices that support or Implement a",
    "start": "1999799",
    "end": "2006320"
  },
  {
    "text": "given profile so if you want figure out is there a headset connected am I connected to my car right now uh you",
    "start": "2006320",
    "end": "2012159"
  },
  {
    "text": "know Health devices do I have a Bluetooth heart rate monitor or something like that the apis associated",
    "start": "2012159",
    "end": "2017600"
  },
  {
    "text": "with these are pretty thin you know really Beyond determining that these devices are connected and maybe doing",
    "start": "2017600",
    "end": "2023600"
  },
  {
    "text": "some basic introspection of them there's not a whole lot there so they're really these are really more things they added",
    "start": "2023600",
    "end": "2029159"
  },
  {
    "text": "for platform level support than to help developers out in any way um but those have kind of evolved over time even all",
    "start": "2029159",
    "end": "2035840"
  },
  {
    "text": "the way up to KitKat where they added the hit over Gat or hogp profile and uh the message access profile okay uh in",
    "start": "2035840",
    "end": "2044799"
  },
  {
    "text": "Ice Cream Sandwich R1 I guess you could say they added the a public method for",
    "start": "2044799",
    "end": "2050560"
  },
  {
    "text": "doing uid searches so this is actually a process that happens during device",
    "start": "2050560",
    "end": "2055839"
  },
  {
    "text": "Discovery anyway where when I discover a a Bluetooth device part of that Discovery process is it's going to go",
    "start": "2055839",
    "end": "2062079"
  },
  {
    "text": "out and query that device for all the services that that device exposes and give me back a list of those as uu IDs",
    "start": "2062079",
    "end": "2068240"
  },
  {
    "text": "it did that all the time even since Bluetooth 2.0 but it never exposed that functionality to developers so I never",
    "start": "2068240",
    "end": "2074079"
  },
  {
    "text": "had any way myself to figure out what the uuid was on a device I'd never touched before um there were some hacks",
    "start": "2074079",
    "end": "2080240"
  },
  {
    "text": "using reflection and I admit even I had done it but now we don't have to do that anymore so in 403 they added uh public",
    "start": "2080240",
    "end": "2087960"
  },
  {
    "text": "apis to allow you to do that service Discovery that's what sdp stands for um",
    "start": "2087960",
    "end": "2093398"
  },
  {
    "text": "and get those uu IDs back so you could sort of interact with the device a little more explicitly if you didn't know exactly which U IDs there were",
    "start": "2093399",
    "end": "2100040"
  },
  {
    "text": "there okay then we of course talked about we got Bluetooth LE apis in",
    "start": "2100040",
    "end": "2105240"
  },
  {
    "text": "4.3 um and then recently in KitKat we actually got an addition back to the",
    "start": "2105240",
    "end": "2110640"
  },
  {
    "text": "classic Bluetooth stuff where um if you're not using simple secure pairing",
    "start": "2110640",
    "end": "2116160"
  },
  {
    "text": "your device has to interact with a pin code you can pre-program into your code",
    "start": "2116160",
    "end": "2121280"
  },
  {
    "text": "the pin that it should automatically apply okay so now as part of that pairing process you can say I know this",
    "start": "2121280",
    "end": "2128200"
  },
  {
    "text": "device has a pin code but I still don't want to bother the user with it I can Auto apply that pin as part of the",
    "start": "2128200",
    "end": "2133560"
  },
  {
    "text": "process in my own code there's apis for that now okay all right let's take a look at my",
    "start": "2133560",
    "end": "2140520"
  },
  {
    "text": "first set of demos",
    "start": "2140520",
    "end": "2143480"
  },
  {
    "text": "here and if this is too easy or too hard to read please let me",
    "start": "2146400",
    "end": "2152280"
  },
  {
    "text": "know all right so I think what I'll do is show you the example first",
    "start": "2152280",
    "end": "2158160"
  },
  {
    "text": "and then we'll look at the code because the examples are more fun all right so what I've got",
    "start": "2158160",
    "end": "2164000"
  },
  {
    "text": "here is my little Nexus 7 and my uh fancy game controller that I",
    "start": "2164000",
    "end": "2170680"
  },
  {
    "text": "created out of an Arduino and some additional Shields okay now we probably W to have time to look at the Arduino",
    "start": "2170680",
    "end": "2176280"
  },
  {
    "text": "code if you're curious about it I can show it to you um because it's not that complex but I want to make sure we get",
    "start": "2176280",
    "end": "2182079"
  },
  {
    "text": "through everything else first okay so what we're going to do is I've created uh just a very simple game that I have",
    "start": "2182079",
    "end": "2188040"
  },
  {
    "text": "on my Android device and I'm going to use my Bluetooth controller to play that game so this is going to happen using",
    "start": "2188040",
    "end": "2193760"
  },
  {
    "text": "the classic Bluetooth apis using an rfom connection okay so I'm going to open a stream between this device and my tablet",
    "start": "2193760",
    "end": "2200560"
  },
  {
    "text": "and start playing the game using my controller okay so let me power up my controller",
    "start": "2200560",
    "end": "2207200"
  },
  {
    "text": "first we'll launch the app okay so when I when I get this up",
    "start": "2209760",
    "end": "2217160"
  },
  {
    "text": "the first thing that I need to be able to do is to connect to the device so when I hit this button what's going to",
    "start": "2217160",
    "end": "2222800"
  },
  {
    "text": "happen is it's going to go through the discovery and connection process now because Bluetooth classic supports",
    "start": "2222800",
    "end": "2229000"
  },
  {
    "text": "server side in theory I could write my embedded device to be constantly looking for new things my app could just open a",
    "start": "2229000",
    "end": "2236240"
  },
  {
    "text": "server connection and accept the first connection that comes in um I wrote it the other way there's really no reason",
    "start": "2236240",
    "end": "2241720"
  },
  {
    "text": "for that other than that's the way I did it um so if I come in here I can hit this connect button what it's going to",
    "start": "2241720",
    "end": "2246960"
  },
  {
    "text": "do is discover for a device that has a specific name because I've set this controller device to have a specific",
    "start": "2246960",
    "end": "2253160"
  },
  {
    "text": "Bluetooth name and as soon as it finds it it will just automatically start connecting to it and jump me into the",
    "start": "2253160",
    "end": "2258319"
  },
  {
    "text": "game okay and hopefully it'll just work like that so we're scanning for",
    "start": "2258319",
    "end": "2264200"
  },
  {
    "text": "devices so this is doing Discovery you can see Discovery does take a little while it and once it now it's found the",
    "start": "2264200",
    "end": "2270200"
  },
  {
    "text": "device so it's going to connect to it and now I'm in my game so the purpose of this game is for me just to drive my",
    "start": "2270200",
    "end": "2275400"
  },
  {
    "text": "little Android around the screen and try to pick up the Ruby so if I and if I get to the Ruby I",
    "start": "2275400",
    "end": "2282280"
  },
  {
    "text": "can hit one of these little buttons and you can also hear there's some vibrator feedback in the controller",
    "start": "2282280",
    "end": "2287680"
  },
  {
    "text": "so when I either positively or negatively am able to do that the controller will vibrate back at me okay",
    "start": "2287680",
    "end": "2294480"
  },
  {
    "text": "so I'm doing a little bit of two-way communication as far as the controls going this way and the feedback coming back to the to the device in this case I",
    "start": "2294480",
    "end": "2301240"
  },
  {
    "text": "can drive around pick this up and it'll just continue to go so you notice I'm not",
    "start": "2301240",
    "end": "2306880"
  },
  {
    "text": "connected to the device at all you know this is all happening over Bluetooth I'll show you the same example here in a little while using USB but in this case",
    "start": "2306880",
    "end": "2314040"
  },
  {
    "text": "we're talking Bluetooth here and of course the killer feature if I hit the other button changes",
    "start": "2314040",
    "end": "2320800"
  },
  {
    "text": "color that's the one that's going to get me the festar review I think",
    "start": "2321000",
    "end": "2328160"
  },
  {
    "text": "okay so let's take a look at the source code for that",
    "start": "2329599",
    "end": "2334240"
  },
  {
    "text": "guy so I won't spend too much time on the the game itself um by the way this source code is all in my GitHub um it's",
    "start": "2336119",
    "end": "2342839"
  },
  {
    "text": "just GitHub Dev unwired I'll I'll share that link again at the end it was on the first slide as well but um all this",
    "start": "2342839",
    "end": "2349760"
  },
  {
    "text": "project is up there uh for you to take a look at so I won't spend too much time on the game but the game activity is",
    "start": "2349760",
    "end": "2355079"
  },
  {
    "text": "where all of those drawing pieces are so I mean that's where it's it's actually drawing the player and receiving the",
    "start": "2355079",
    "end": "2360119"
  },
  {
    "text": "input events and moving it around Yeah question I'm just curious for a game like that what's the you can do",
    "start": "2360119",
    "end": "2367839"
  },
  {
    "text": "sure that's a good question I can't say I've really tested it oh sure the question was um what kind of throughput",
    "start": "2367839",
    "end": "2374480"
  },
  {
    "text": "do you get you know out of that controller um I can't say I've really tested that much um but in the protocol",
    "start": "2374480",
    "end": "2382880"
  },
  {
    "text": "that I'm using is very simplistic this whole all those data transactions are happening in about a three or four bite",
    "start": "2382880",
    "end": "2389000"
  },
  {
    "text": "payload um so it's it's not really taxing the system at all um I would say",
    "start": "2389000",
    "end": "2395000"
  },
  {
    "text": "that you can do pretty well with it and you know I you could probably get into the high kilobytes per second I don't",
    "start": "2395000",
    "end": "2400880"
  },
  {
    "text": "know about megabits per second um but I don't really have any numbers to back that up either so you know play around",
    "start": "2400880",
    "end": "2406640"
  },
  {
    "text": "with it and see what you get Yeah question if it's RFC it's for streaming audio right yes absolutely rfom would be",
    "start": "2406640",
    "end": "2414359"
  },
  {
    "text": "adequate well rfom is not designed for streaming audio it's a different uh protocol profile but it's the same",
    "start": "2414359",
    "end": "2419880"
  },
  {
    "text": "channel that yes is adequate for streaming audio so it is capable of doing that it's absolutely true question",
    "start": "2419880",
    "end": "2427760"
  },
  {
    "text": "the P SI dur can you modify the packet size and interval duration um as far as",
    "start": "2427760",
    "end": "2434480"
  },
  {
    "text": "I'm aware no those those implementation details are specific to the Bluetooth stack um and they aren't exposed as",
    "start": "2434480",
    "end": "2441240"
  },
  {
    "text": "apis iOS at least you can yes in iOS you",
    "start": "2441240",
    "end": "2446960"
  },
  {
    "text": "can but the the Android apis as far as I'm aware don't expose that at the packet",
    "start": "2446960",
    "end": "2453440"
  },
  {
    "text": "level no I don't I don't off the top of my head it might be in the document but I haven't looked so okay so what we're",
    "start": "2453440",
    "end": "2460680"
  },
  {
    "text": "going to focus on instead is the Bluetooth connection side of all this okay so I have this activity",
    "start": "2460680",
    "end": "2467960"
  },
  {
    "text": "here and we'll come in we'll go up to the top here so when I when I go in and",
    "start": "2467960",
    "end": "2473599"
  },
  {
    "text": "I hit that connect button what's going to happen is uh a",
    "start": "2473599",
    "end": "2479000"
  },
  {
    "text": "couple things we're going to register a broadcast receiver because in Bluetooth classic the the device Discovery comes",
    "start": "2479000",
    "end": "2484960"
  },
  {
    "text": "back to us as a broadcast okay so we're going to register a receiver for those actions and then we're going to attempt",
    "start": "2484960",
    "end": "2491960"
  },
  {
    "text": "to start discovery on the Bluetooth adapter okay so then that's going to",
    "start": "2491960",
    "end": "2497319"
  },
  {
    "text": "trigger my receiver here every time a new device is found so for each device",
    "start": "2497319",
    "end": "2503040"
  },
  {
    "text": "that it finds it's going to verify that that controller's name and device class",
    "start": "2503040",
    "end": "2508680"
  },
  {
    "text": "match the values that I've specifically hardcoded for my controller okay so that",
    "start": "2508680",
    "end": "2513720"
  },
  {
    "text": "way it knows when it finds the right device and any other devices it's just going to skip over and ignore okay so",
    "start": "2513720",
    "end": "2519839"
  },
  {
    "text": "then once I found it I'm going to go through and again start connecting to",
    "start": "2519839",
    "end": "2524960"
  },
  {
    "text": "the device now notice the other thing that I do as soon as I found the device I'm interested in we're going to cancel",
    "start": "2524960",
    "end": "2531119"
  },
  {
    "text": "Discovery okay remember a discovery is a high power operation so I don't want to keep wasting the radio and battery time",
    "start": "2531119",
    "end": "2536920"
  },
  {
    "text": "once I found the device I need okay now if for whatever reason I don't find that device what we're going to see instead",
    "start": "2536920",
    "end": "2543760"
  },
  {
    "text": "is a discovery finished broadcast saying I'm done looking if you you didn't find what you're looking for I'm sorry try",
    "start": "2543760",
    "end": "2549040"
  },
  {
    "text": "again okay so it is a finite scan that at some point will time out um but",
    "start": "2549040",
    "end": "2554200"
  },
  {
    "text": "sometimes we may F Well usually we'll find the device before that happens and we want to cancel it ahead of time",
    "start": "2554200",
    "end": "2560440"
  },
  {
    "text": "okay all right so we'll go look at the thread here so what happens is once I have the reference to the device I'm",
    "start": "2560440",
    "end": "2567440"
  },
  {
    "text": "interested in I'm just going to attempt to connect to it so notice I'm using that insecure rfom method so I'm using",
    "start": "2567440",
    "end": "2575079"
  },
  {
    "text": "this because I don't want to have to manually to the device you notice I didn't nothing came up on the screen I didn't have to enter a pin code or",
    "start": "2575079",
    "end": "2581079"
  },
  {
    "text": "anything like that it just connected okay um and this helps a lot now at some",
    "start": "2581079",
    "end": "2586520"
  },
  {
    "text": "point the two devices will be bonded together anyway so you don't have to worry about this this is more of a first time problem um because after they're",
    "start": "2586520",
    "end": "2593640"
  },
  {
    "text": "bonded it doesn't matter you don't have to pair anymore but at least in the initial stage you need to worry about that okay so this create method will",
    "start": "2593640",
    "end": "2601800"
  },
  {
    "text": "generate one of these uh Bluetooth sockets now this doesn't take very long um this is sort of a local operation",
    "start": "2601800",
    "end": "2608319"
  },
  {
    "text": "what's going to take a long time is when I hit connect so connect is going to block while the Bluetooth stack goes and",
    "start": "2608319",
    "end": "2613800"
  },
  {
    "text": "tries attempts to make a connection to that device okay and then it's either going to throw an exception when it fails or it's going to continue on if",
    "start": "2613800",
    "end": "2620240"
  },
  {
    "text": "everything went okay okay so assuming everything went okay and I don't fall in here um we're going to get our input and",
    "start": "2620240",
    "end": "2626640"
  },
  {
    "text": "output stream for the Bluetooth device okay now at this point I can do whatever",
    "start": "2626640",
    "end": "2632680"
  },
  {
    "text": "I want I have a raw input stream and a raw output stream and so my Arduino device Dev alongside with my Android",
    "start": "2632680",
    "end": "2639760"
  },
  {
    "text": "application I've just pre-written a basic three byte protocol that transfers individual data back and forth okay and",
    "start": "2639760",
    "end": "2646800"
  },
  {
    "text": "again like I said if if we have time I can show you that on the Arduino side it's really just for each sensor value",
    "start": "2646800",
    "end": "2652760"
  },
  {
    "text": "spit this out over the Bluetooth stream and it shows up in here and same thing the other way okay so it's just parsing",
    "start": "2652760",
    "end": "2657839"
  },
  {
    "text": "random bites back and forth okay but from a from a Bluetooth or from an api's",
    "start": "2657839",
    "end": "2664000"
  },
  {
    "text": "perspective at this point I'm done I have two open connection streams that I can read and write data freely back to",
    "start": "2664000",
    "end": "2669240"
  },
  {
    "text": "my device okay all",
    "start": "2669240",
    "end": "2674520"
  },
  {
    "text": "right let's take a look at the next one all right so the next one that I'm",
    "start": "2674520",
    "end": "2679839"
  },
  {
    "text": "going to show you is a Bluetooth LE example now I'm",
    "start": "2679839",
    "end": "2686000"
  },
  {
    "text": "going to admit up front the Bluetooth LE stack is still a little shaky and sometime this demo doesn't work don't",
    "start": "2686000",
    "end": "2691319"
  },
  {
    "text": "blame me okay uh even even so this is a sensor tag it's made by TI um you can",
    "start": "2691319",
    "end": "2698160"
  },
  {
    "text": "get one of these for like 25 bucks it's got six or eight different sensors on it um that you can just you can connect to",
    "start": "2698160",
    "end": "2703960"
  },
  {
    "text": "this device and read the sensor data you know any way you'd like even TI's application on Google Play doesn't work",
    "start": "2703960",
    "end": "2709760"
  },
  {
    "text": "all the time that's how I know it's not my fault yes right so this is um no fault of your own sure so the question",
    "start": "2709760",
    "end": "2715760"
  },
  {
    "text": "is is there a Best practice for when the Bluetooth stack just screws up um at",
    "start": "2715760",
    "end": "2721319"
  },
  {
    "text": "this point what I've noticed is that U and this is another reason I know it's not my fault uh during the all the call",
    "start": "2721319",
    "end": "2728520"
  },
  {
    "text": "backs that happen on a gat call back um during connection State changes the return value will be something that is",
    "start": "2728520",
    "end": "2734640"
  },
  {
    "text": "completely undocumented so I mean you know there's basically only three documented States or four there's like connected",
    "start": "2734640",
    "end": "2741040"
  },
  {
    "text": "connecting disconnected disconnecting um if I get a call back and it has one",
    "start": "2741040",
    "end": "2746200"
  },
  {
    "text": "completely off-the-wall State like the Nexus 7 sometimes will kick back 130 and I have no idea what that means that's",
    "start": "2746200",
    "end": "2752160"
  },
  {
    "text": "usually a pretty pretty good idea that the stack is completely hosed and I'm going to have to actually toggle the",
    "start": "2752160",
    "end": "2757400"
  },
  {
    "text": "Bluetooth enable and disable it to be able to get things back working again it sounds like you're saying these are",
    "start": "2757400",
    "end": "2763079"
  },
  {
    "text": "weaknesses in the Android absolutely yes and it's one of the reasons that at least today I like leaning towards",
    "start": "2763079",
    "end": "2769119"
  },
  {
    "text": "beacons because I don't have to deal with connections I just have to do scanning because the issues are always",
    "start": "2769119",
    "end": "2774440"
  },
  {
    "text": "in dealing with getting connections set up and the device you're holding aacon",
    "start": "2774440",
    "end": "2779839"
  },
  {
    "text": "no this is this is a connectable device so basically this is a gat server and all each individual uh sensor on this",
    "start": "2779839",
    "end": "2787200"
  },
  {
    "text": "device is exposed as a service and then each service has characteristics like the sensor's value ways to configure its",
    "start": "2787200",
    "end": "2794319"
  },
  {
    "text": "update interval and stuff like that so this device we're actually going to connect to which is why it might not work all right so let's give it a",
    "start": "2794319",
    "end": "2801359"
  },
  {
    "text": "shot so what we'll do here so what I've created since this is all sensors and don't shoot me I'm not a designer but um",
    "start": "2801359",
    "end": "2808480"
  },
  {
    "text": "I've created just a very basic weather station that's going to read some of the sensor data off of this device okay so",
    "start": "2808480",
    "end": "2814319"
  },
  {
    "text": "if I if I wake this device up and attempt to scan for it I should see it pop up in my list here",
    "start": "2814319",
    "end": "2819800"
  },
  {
    "text": "and then I can try to connect hey that was the fastest it's ever done it there we go so it's",
    "start": "2819800",
    "end": "2826400"
  },
  {
    "text": "connected to the device and actually what it did in all that time was it connected to the device enabled uh in",
    "start": "2826400",
    "end": "2833280"
  },
  {
    "text": "this case three of the sensors read their values and set characteristic notifications okay so if we sit here",
    "start": "2833280",
    "end": "2839319"
  },
  {
    "text": "long enough you see some of these values are changing up and down because I'm getting updated from the device using",
    "start": "2839319",
    "end": "2844960"
  },
  {
    "text": "notification okay so I'm not polling contain continuously I'm just getting call backs in on characteristic changed",
    "start": "2844960",
    "end": "2850280"
  },
  {
    "text": "every time one of these guys um you know gives gives me an update and the update rate for most of these sensors is a",
    "start": "2850280",
    "end": "2855800"
  },
  {
    "text": "couple times a second you know so it's not really streaming data to me but it's regular enough for an application like",
    "start": "2855800",
    "end": "2861440"
  },
  {
    "text": "this okay so then I can shut the device off disconnect it and everything's good",
    "start": "2861440",
    "end": "2867760"
  },
  {
    "text": "hooray that one worked okay so we'll look at the basics",
    "start": "2867760",
    "end": "2873400"
  },
  {
    "text": "for that so if we go into my BLU blueto Gat sample",
    "start": "2873400",
    "end": "2879599"
  },
  {
    "text": "here activity so in this case what we've got",
    "start": "2879599",
    "end": "2885599"
  },
  {
    "text": "going on is that uh I have some methods for starting and stopping a",
    "start": "2885599",
    "end": "2891119"
  },
  {
    "text": "scan and these happen when I when I press that button in the action bar okay so when I hit scan in the action bar",
    "start": "2891119",
    "end": "2897720"
  },
  {
    "text": "it's going to start a scan by calling that start Ellie scan method and notice I pass a a parameter to it which is the",
    "start": "2897720",
    "end": "2904800"
  },
  {
    "text": "call back uh where I want the results to come back in so I'm just I've implemented that on this activity where",
    "start": "2904800",
    "end": "2910480"
  },
  {
    "text": "did you get the adap oh sure um great",
    "start": "2910480",
    "end": "2916319"
  },
  {
    "text": "question so where did I get the adapter from um and this is actually a little bit different than classic so thank you",
    "start": "2916319",
    "end": "2922359"
  },
  {
    "text": "for the question um in Bluetooth classic there's a static method that just says Bluetooth adapter. default adapter with",
    "start": "2922359",
    "end": "2929720"
  },
  {
    "text": "Bluetooth LE apis and really this is true for Bluetooth in general starting in 4.3 forward there's now actually a",
    "start": "2929720",
    "end": "2935880"
  },
  {
    "text": "Bluetooth manager like any other system service okay so there's a Bluetooth manager get system service and I get the",
    "start": "2935880",
    "end": "2941520"
  },
  {
    "text": "adapter from there okay so it is a little bit different than on the older API structure good question okay so when I",
    "start": "2941520",
    "end": "2949440"
  },
  {
    "text": "start the scan I just get that and I've I've set up a Handler to trigger my stop after a couple seconds so I don't want",
    "start": "2949440",
    "end": "2955520"
  },
  {
    "text": "to scan continuously I just want to try quickly see if I can find it and move on okay so then onell scan is going to be",
    "start": "2955520",
    "end": "2962440"
  },
  {
    "text": "called with every time I get a new device so again kind of like I did before I'm checking to see or I'm",
    "start": "2962440",
    "end": "2968480"
  },
  {
    "text": "figuring out whether or not it's a sensor tag device so I you know if I had more than one they would have showed up",
    "start": "2968480",
    "end": "2974000"
  },
  {
    "text": "in the list but I only want sensor tags I don't want all the other Bluetooth LE devices that may be sitting around in",
    "start": "2974000",
    "end": "2979119"
  },
  {
    "text": "the room at the moment to show up in that list so I'm checking that and if they are I'm adding it to this",
    "start": "2979119",
    "end": "2984200"
  },
  {
    "text": "collection that makes up that menu okay and then at some point later when I go",
    "start": "2984200",
    "end": "2990520"
  },
  {
    "text": "back in so that's all just implemented as part of the options menu that's why it's in the action bar um so if I then",
    "start": "2990520",
    "end": "2996720"
  },
  {
    "text": "select one of those options later I go back and pull that device out and attempt to connect to it by simply",
    "start": "2996720",
    "end": "3002680"
  },
  {
    "text": "calling connect Gat okay so connect Gat takes a call back for all the other",
    "start": "3002680",
    "end": "3008960"
  },
  {
    "text": "things that are going to go on inside of this so connection changes service Discovery characteristic read write it's",
    "start": "3008960",
    "end": "3014960"
  },
  {
    "text": "all in one instance okay so and what I've done as I",
    "start": "3014960",
    "end": "3020119"
  },
  {
    "text": "mentioned before you really have to deal with these um one step at a time so I've sort of built this into an advancing",
    "start": "3020119",
    "end": "3026799"
  },
  {
    "text": "State machine that I can click my way through to enable all the sensors and get all that going so you know we've got",
    "start": "3026799",
    "end": "3032400"
  },
  {
    "text": "a method where every time I I move this forward I'm going to enable the next sensor and the next sensor um by simply",
    "start": "3032400",
    "end": "3039760"
  },
  {
    "text": "getting a reference to that characteristic and I I should point out real quickly let me do that that um each",
    "start": "3039760",
    "end": "3045839"
  },
  {
    "text": "of these are just uu IDs okay so everything that I put that's a service or characteristic reference is just a",
    "start": "3045839",
    "end": "3052119"
  },
  {
    "text": "uuid that is documented for that sensor tag in TI's document mentation okay so",
    "start": "3052119",
    "end": "3057760"
  },
  {
    "text": "this is how I know where to get these U IDs from yes can you ask a device for uid that it supports yes you can that's",
    "start": "3057760",
    "end": "3064240"
  },
  {
    "text": "called service Discovery so um the question was can you ask a device for its uu IDs um specifically and get a",
    "start": "3064240",
    "end": "3071040"
  },
  {
    "text": "list back you can do that for uh all service uu IDs and then you can ask a service for all of its characteristic uu",
    "start": "3071040",
    "end": "3077240"
  },
  {
    "text": "IDs um so you can do both of those and in fact I do have them in here somewhere",
    "start": "3077240",
    "end": "3082760"
  },
  {
    "text": "that's before you're connected or after connect uh after you're connected you have to connect first which is true in",
    "start": "3082760",
    "end": "3089160"
  },
  {
    "text": "Bluetooth classic also so the same thing happens in Bluetooth classic you have to connect first",
    "start": "3089160",
    "end": "3096040"
  },
  {
    "text": "yes the advertisement yes that's correct you so you have to",
    "start": "3097480",
    "end": "3104160"
  },
  {
    "text": "connect first to get characteristics and services only the advertisement data will come prior to that uh and I mean",
    "start": "3104160",
    "end": "3111000"
  },
  {
    "text": "that's true that's really really true of all Bluetooth devices it just happens that in Bluetooth LE we started to turn",
    "start": "3111000",
    "end": "3116960"
  },
  {
    "text": "the advertisement into something interesting so okay oh question",
    "start": "3116960",
    "end": "3123558"
  },
  {
    "text": "yes I I I doubt it so um the question was do you think that we might expand",
    "start": "3130079",
    "end": "3137400"
  },
  {
    "text": "that at some point I mean it's well first of all it's part of the Bluetooth spec so it's up to them um but I don't",
    "start": "3137400",
    "end": "3143520"
  },
  {
    "text": "know that that necessarily going to be the case even with the popularity that beacons are achieving just because at",
    "start": "3143520",
    "end": "3149400"
  },
  {
    "text": "some point you start to impact the power capability of these be I mean these",
    "start": "3149400",
    "end": "3154640"
  },
  {
    "text": "advertising packets are small so that we can quickly get them out there and do it on an interval if they start to get real",
    "start": "3154640",
    "end": "3159880"
  },
  {
    "text": "real large then that becomes a trade-off with that so may it might happen and it might get a little bigger but I wouldn't",
    "start": "3159880",
    "end": "3166280"
  },
  {
    "text": "expect them to grow to the point of a full Gat server table um just because that would really impact the power",
    "start": "3166280",
    "end": "3172720"
  },
  {
    "text": "performance so I think there's a trade-off there as well yes all right ended advertising pets are there",
    "start": "3172720",
    "end": "3179599"
  },
  {
    "text": "extended advertising packets um I believe there are yes but they're not at least in the Android API",
    "start": "3179599",
    "end": "3186040"
  },
  {
    "text": "supported yes do you can you speak at all what the physical layer looks like",
    "start": "3186040",
    "end": "3192200"
  },
  {
    "text": "is this CDMA of some sort devices backing off when they see it other people talking how does this",
    "start": "3192200",
    "end": "3198319"
  },
  {
    "text": "work you know I'm definitely the wrong guy for that question um yeah I I don't",
    "start": "3198319",
    "end": "3203559"
  },
  {
    "text": "I don't really know much about how the the frequency popping and the actual radio layer really works it's well",
    "start": "3203559",
    "end": "3209760"
  },
  {
    "text": "defined I mean that's all documented on Bluetooth website but um it's definitely not my specialty so one more and then",
    "start": "3209760",
    "end": "3217119"
  },
  {
    "text": "we're gonna keep going and this mate variable doesn't look like you come in with the state and you're not",
    "start": "3217119",
    "end": "3223559"
  },
  {
    "text": "incrementing it through your sorry if that's all done here so what I'm going to show you here is what's going on here",
    "start": "3223559",
    "end": "3229839"
  },
  {
    "text": "in a second this is just something I architected around the API it's not really part of it but so for each sensor",
    "start": "3229839",
    "end": "3235480"
  },
  {
    "text": "you know we have to get a characteristic and then for enabling it I write a value to that characteristic to enable the",
    "start": "3235480",
    "end": "3241640"
  },
  {
    "text": "sensor so one of the characteristics on this device is turn the sensor on by default all the sensors are off because",
    "start": "3241640",
    "end": "3246920"
  },
  {
    "text": "sensors take power so you only turn them on if you're going to read their data um same thing there's one for reading a",
    "start": "3246920",
    "end": "3252280"
  },
  {
    "text": "sensor which is again just reading a specific characteristic value to get it its value um and set notify which is",
    "start": "3252280",
    "end": "3259839"
  },
  {
    "text": "just a wrapper I put around to allow a specific characteristic to have its notification enabled to start pushing",
    "start": "3259839",
    "end": "3266599"
  },
  {
    "text": "data back to me okay so uh and again that's a two-step process I have to set it locally in the Gat server database",
    "start": "3266599",
    "end": "3274000"
  },
  {
    "text": "and then I have to tell the device by writing what's called a descriptor a descriptor is just a portion of a",
    "start": "3274000",
    "end": "3279440"
  },
  {
    "text": "characteristic okay so U and I'll get to the advancing",
    "start": "3279440",
    "end": "3284839"
  },
  {
    "text": "there in a second but just to mention this so on connection State change is where you'll say it'll tell you now",
    "start": "3284839",
    "end": "3291079"
  },
  {
    "text": "we've connected we've been disconnected um or I'll get one of those whacked out values because something is completely",
    "start": "3291079",
    "end": "3296559"
  },
  {
    "text": "host okay that's all going to come in here um and so you mentioned the discovery so discover Services is that",
    "start": "3296559",
    "end": "3302799"
  },
  {
    "text": "method that would start the process of give me back a list of uu IDs for services okay um and then there's an on",
    "start": "3302799",
    "end": "3310599"
  },
  {
    "text": "Services discovered in which case you would have them at that point okay but so here's here's kind of how we're we're",
    "start": "3310599",
    "end": "3317160"
  },
  {
    "text": "gearing this is inside these callbacks so you know when I get Services I start with the next sensor reset my little",
    "start": "3317160",
    "end": "3323280"
  },
  {
    "text": "machine and start with the next sensor then on characteristic read I do set notify on characteristic right is the",
    "start": "3323280",
    "end": "3330079"
  },
  {
    "text": "read so we kind of go through these with each call back and then at the very end",
    "start": "3330079",
    "end": "3335240"
  },
  {
    "text": "um here inside of the descriptor right because the last thing that I do is set notify for that sensor I advance to the",
    "start": "3335240",
    "end": "3341559"
  },
  {
    "text": "next sensor and do it all again okay and this the the ti source code does",
    "start": "3341559",
    "end": "3347200"
  },
  {
    "text": "something a little bit different than this which kind of stinks and might be why their app doesn't work very well either they don't wait for the callbacks",
    "start": "3347200",
    "end": "3353720"
  },
  {
    "text": "they just block the thread for 100 milliseconds and then try the next one so they just assume that it's only going",
    "start": "3353720",
    "end": "3358839"
  },
  {
    "text": "to take this amount of time and then we'll try again and they completely ignore the call backs okay yes",
    "start": "3358839",
    "end": "3365480"
  },
  {
    "text": "question right now this is all in an activity",
    "start": "3365880",
    "end": "3370240"
  },
  {
    "text": "yes absolutely so would would you ever want to put this code in a service in production probably every time um it's",
    "start": "3376200",
    "end": "3382960"
  },
  {
    "text": "just simpler to do in an example inside of an activity yeah absolutely absolutely okay oh question are",
    "start": "3382960",
    "end": "3390400"
  },
  {
    "text": "thesei manur no no I mean if so the question was are the uuids uniform um",
    "start": "3391599",
    "end": "3399799"
  },
  {
    "text": "from one device to another if they're conforming to a spec yes so if this is a health thermometer profile which has a",
    "start": "3399799",
    "end": "3406400"
  },
  {
    "text": "specific thermometer characteristic in it that will always be the same U idid but this thing that TI made they made up",
    "start": "3406400",
    "end": "3412160"
  },
  {
    "text": "their own uu IDs for all their services and if somebody else makes their own tag they'll probably make them up their own for that so unless they decide to",
    "start": "3412160",
    "end": "3418640"
  },
  {
    "text": "conform to the profiles defined that's really what interoperability is all about um they'll be making them up for",
    "start": "3418640",
    "end": "3424880"
  },
  {
    "text": "whatever they want okay all right so let's keep going here so then just you know some",
    "start": "3424880",
    "end": "3430400"
  },
  {
    "text": "additional call back so that's all in this so all we're really doing when after I hit that connect button is it's",
    "start": "3430400",
    "end": "3436799"
  },
  {
    "text": "just going through an enabling sensor read characteristics set notify enable read set notify enable read set notify",
    "start": "3436799",
    "end": "3442440"
  },
  {
    "text": "and then at that point what we're going to get is onch characteristic changed from here until I disconnect so I've not",
    "start": "3442440",
    "end": "3449319"
  },
  {
    "text": "set notify on All Those sensors so the sensors are just going to push data to me and I'm going to get this call back whenever I get new data okay so I'm just",
    "start": "3449319",
    "end": "3456440"
  },
  {
    "text": "figuring out okay it was this characteristic or this characteristic and notice I'm posting those all back",
    "start": "3456440",
    "end": "3461920"
  },
  {
    "text": "using a Handler because I can't update the display from here I'm not on the main thread okay so all I'm doing here",
    "start": "3461920",
    "end": "3467599"
  },
  {
    "text": "is posting those characteristics back so that inside of a Handler let me go",
    "start": "3467599",
    "end": "3474079"
  },
  {
    "text": "that I can read those character istics out and actually touch the views okay so",
    "start": "3474079",
    "end": "3480480"
  },
  {
    "text": "that's all we got going on here all right show you the next one",
    "start": "3480480",
    "end": "3487119"
  },
  {
    "text": "lots of fun demos today okay so the next one I'm going to show you is much much simpler from a",
    "start": "3487119",
    "end": "3492559"
  },
  {
    "text": "demonstration perspective is a beacon monitor so what I've placed around the",
    "start": "3492559",
    "end": "3497599"
  },
  {
    "text": "room there's one right here in front of me there's one back there on the beer and there's another one over there um",
    "start": "3497599",
    "end": "3502640"
  },
  {
    "text": "these are Beacon devices that are pushing to me a temperature value okay",
    "start": "3502640",
    "end": "3509599"
  },
  {
    "text": "now so these are not I beacons they're not esot or anything like that these beacons are actually made by a company",
    "start": "3509599",
    "end": "3514880"
  },
  {
    "text": "in Colorado called kst kst is actually going to be out here on Friday for that hackathon so if you want more",
    "start": "3514880",
    "end": "3520039"
  },
  {
    "text": "information about them come back on Friday um but the uh these beacons really just everything you see here for",
    "start": "3520039",
    "end": "3526960"
  },
  {
    "text": "each of these elements is pushed to me in the advertisement data I'm not connecting to these devices at all I'm",
    "start": "3526960",
    "end": "3532319"
  },
  {
    "text": "just simply running a scan every you know two to 3 seconds for a second or so and then stopping and scanning again",
    "start": "3532319",
    "end": "3538760"
  },
  {
    "text": "okay and that's just so that I can pick up the changes in the beacons each time this is actually what I would consider a",
    "start": "3538760",
    "end": "3544359"
  },
  {
    "text": "deficiency in the Android stack right now the apis don't allow me to stay scanning continuously and get changes in",
    "start": "3544359",
    "end": "3551400"
  },
  {
    "text": "advertisements it will if I discover the device once it's just going to say well you've already seen that one even though",
    "start": "3551400",
    "end": "3556839"
  },
  {
    "text": "the data in the advertisement that I want has actually changed so we actually have to toggle the scan on and off periodically okay so part of the trick",
    "start": "3556839",
    "end": "3564359"
  },
  {
    "text": "is figuring out what your up interval is on your beacons and trying to sort of time those two things so that they they",
    "start": "3564359",
    "end": "3569640"
  },
  {
    "text": "work well together um so the the values that are in these is just the device name that temperature value which is",
    "start": "3569640",
    "end": "3576799"
  },
  {
    "text": "blocked in service data so it uses the standard Bluetooth uid for a thermometer",
    "start": "3576799",
    "end": "3582240"
  },
  {
    "text": "and says for that uid here's the temperature and it just gives me a temperature value in Celsius that I can convert and stick up on the display okay",
    "start": "3582240",
    "end": "3589559"
  },
  {
    "text": "now I put one on the beer hoping it would be a lot colder but I think we may have only lost half a degree on that one",
    "start": "3589559",
    "end": "3594960"
  },
  {
    "text": "back there so it's not it's not in the that's true I was afraid if I put it in",
    "start": "3594960",
    "end": "3600039"
  },
  {
    "text": "the beer then it might not connect well or something like that so didn't want to ruin my demo or anything so so there you",
    "start": "3600039",
    "end": "3607119"
  },
  {
    "text": "go so that's all this is really doing just regularly scanning and posting that information okay is that the expensive",
    "start": "3607119",
    "end": "3615000"
  },
  {
    "text": "scan um is there any is that the expensive scan is there any scan that's not expensive I mean Bluetooth La",
    "start": "3615000",
    "end": "3622160"
  },
  {
    "text": "scanning is lower power than a Bluetooth classic Discovery uh relatively speaking but it is it's still turning on a radio",
    "start": "3622160",
    "end": "3628920"
  },
  {
    "text": "it just happens to be turning on a radio in receive mode instead of transmit mode yes question why can't they match it so",
    "start": "3628920",
    "end": "3634880"
  },
  {
    "text": "the the devices agree on you know time window and you don't have to have too much margin on the listen well so why",
    "start": "3634880",
    "end": "3642280"
  },
  {
    "text": "can't they match the uh connection intervals the the advertising intervals you mean so that they're consistent if",
    "start": "3642280",
    "end": "3647760"
  },
  {
    "text": "you have to listen I mean say interval only comes maybe five seconds right",
    "start": "3647760",
    "end": "3652920"
  },
  {
    "text": "you'd don't have to listen yeah for second above that 5 second1 Second below",
    "start": "3652920",
    "end": "3660400"
  },
  {
    "text": "it have that scan to make sure yeah absolutely um the real reason that the the Bluetooth spec doesn't specifically",
    "start": "3660400",
    "end": "3667240"
  },
  {
    "text": "Force those to certain things is because the advertisement packet is probably the one thing that governs the battery life",
    "start": "3667240",
    "end": "3674440"
  },
  {
    "text": "of that device the less I advertise the longer my battery lasts so it's really",
    "start": "3674440",
    "end": "3679640"
  },
  {
    "text": "depending on the application how frequent or infrequent they want those um advertisement packets to be pushed",
    "start": "3679640",
    "end": "3686039"
  },
  {
    "text": "out at an interval because if I do it every second my battery may only last a week if I do it every 10 seconds I may",
    "start": "3686039",
    "end": "3691880"
  },
  {
    "text": "last a month so yes why that kind of makes the question why isn't there a",
    "start": "3691880",
    "end": "3699200"
  },
  {
    "text": "standard U uid for um for refresh",
    "start": "3699200",
    "end": "3704520"
  },
  {
    "text": "interval for connection interval uish republishing re advertising",
    "start": "3704520",
    "end": "3710720"
  },
  {
    "text": "interval right so the question is why isn't there a why don't they publish the connection interval the the answer is",
    "start": "3710720",
    "end": "3715920"
  },
  {
    "text": "actually they do um the inside the advertisement it the but of course it's not required but um there is a service",
    "start": "3715920",
    "end": "3723520"
  },
  {
    "text": "data ele entry that you can use for advertising your connection interval um",
    "start": "3723520",
    "end": "3729000"
  },
  {
    "text": "and but that's actually the connection interval not the advertising interval so that that the reason that it's in there",
    "start": "3729000",
    "end": "3735359"
  },
  {
    "text": "is so that devices that can accept connections know how to synchronize that with with making a connection to the",
    "start": "3735359",
    "end": "3741359"
  },
  {
    "text": "device um so I guess I kind of answered the question backwards in saying that the the interval for the advertisement",
    "start": "3741359",
    "end": "3748960"
  },
  {
    "text": "is not um by default provided in there now they could put it in there so a",
    "start": "3748960",
    "end": "3755279"
  },
  {
    "text": "manufacturer um you know let's say kst wants to add that to their Beacon so that one of the service data elements",
    "start": "3755279",
    "end": "3760559"
  },
  {
    "text": "they provide is the advertising interval so that you can kind of get one and lock on it I that's a great idea and they",
    "start": "3760559",
    "end": "3766160"
  },
  {
    "text": "could definitely do that the space is in the advertisement to make that happen it's just not part of the spec so good",
    "start": "3766160",
    "end": "3773279"
  },
  {
    "text": "thought okay so let's take a look at this source",
    "start": "3773279",
    "end": "3780520"
  },
  {
    "text": "code so this source code is pretty straightforward so just like before we get access to our Bluetooth",
    "start": "3780520",
    "end": "3788240"
  },
  {
    "text": "adapter we verify I didn't show you this before so I'll show it to you quickly you know there are ways to determine",
    "start": "3788520",
    "end": "3793760"
  },
  {
    "text": "whether or not Bluetooth is enabled or not um and basically if you don't get an adapter or if the adapter has its is",
    "start": "3793760",
    "end": "3801440"
  },
  {
    "text": "enabled set to false then you're not going to be able to do anything else cuz Bluetooth is actually disable in settings um so that what we're doing",
    "start": "3801440",
    "end": "3808160"
  },
  {
    "text": "here instead is firing off an intent which kicks off settings that tell the user I want to use Bluetooth and you",
    "start": "3808160",
    "end": "3813799"
  },
  {
    "text": "shut it off so could you turn it on please um and then that that will come back in and then we can go through this",
    "start": "3813799",
    "end": "3818920"
  },
  {
    "text": "process again um this is that check for whether B is supported so does this device have the B feature should we even",
    "start": "3818920",
    "end": "3826079"
  },
  {
    "text": "continue in this case okay all right so then by default we start a scan so in this case there's",
    "start": "3826079",
    "end": "3833520"
  },
  {
    "text": "notice there's a couple little differences here and this is another neat thing you can do with the Android apis when you're talking to beacons um",
    "start": "3833520",
    "end": "3840039"
  },
  {
    "text": "start Le scan actually has a version that takes another parameter and this is an array of uu IDs um if you know that",
    "start": "3840039",
    "end": "3848079"
  },
  {
    "text": "your data is in the advertisement packet you can ask the framework to only return",
    "start": "3848079",
    "end": "3854000"
  },
  {
    "text": "to you devices that have certain uu IDs in the advertisement okay so here I can",
    "start": "3854000",
    "end": "3860039"
  },
  {
    "text": "say well I'm only interested in these temperature beacons that have this thermometer uu ID in the advertisement",
    "start": "3860039",
    "end": "3865359"
  },
  {
    "text": "so if there's a ton of other beacons in the room which there probably is around a place like this I'm not going to get them polluting my list you know I'm not",
    "start": "3865359",
    "end": "3871880"
  },
  {
    "text": "interested in them I don't know how to parse their advertisement data just give me back the stuff I want okay so you can",
    "start": "3871880",
    "end": "3877279"
  },
  {
    "text": "really clean up your code by letting the framework do the work for you and sort of parsing those out ahead of time okay",
    "start": "3877279",
    "end": "3885240"
  },
  {
    "text": "yes can you create an ad hoc network can you be more specific",
    "start": "3886359",
    "end": "3892278"
  },
  {
    "text": "um you know I suppose to some degree that's true uh you could certainly you",
    "start": "3896160",
    "end": "3901240"
  },
  {
    "text": "could use this as a mechanism for grouping scans so you could say I want to scan for this set of devices and this",
    "start": "3901240",
    "end": "3907240"
  },
  {
    "text": "set of devices whether I would call that a network or not is a different story but I I think I understand what you're saying and yes you could okay all right",
    "start": "3907240",
    "end": "3914599"
  },
  {
    "text": "so we we start the scan and you can see that just like before I'm doing this sort of auto trade back and forth but",
    "start": "3914599",
    "end": "3920440"
  },
  {
    "text": "now instead of starting the scan and automatically stopping it I'm also every time I stop it automatically scheduling",
    "start": "3920440",
    "end": "3926119"
  },
  {
    "text": "a new start okay so I'm just toggling back and forth continuously scanning so that each scan I can get new data from",
    "start": "3926119",
    "end": "3932559"
  },
  {
    "text": "these beacons okay then inside of onell scan I don't",
    "start": "3932559",
    "end": "3938359"
  },
  {
    "text": "care about Connections anymore what I really care about is this scan record now okay so the scan record is where all",
    "start": "3938359",
    "end": "3943920"
  },
  {
    "text": "that ad data is so and I mentioned before I've basically just created a very simple parser that takes that bite",
    "start": "3943920",
    "end": "3950359"
  },
  {
    "text": "array and chunks it out into these little data objects that are 80 records which is just their length type and raw",
    "start": "3950359",
    "end": "3955480"
  },
  {
    "text": "pap payload okay um so I mean we can take a look at that but it's it's just a very basic parser that chunks the data",
    "start": "3955480",
    "end": "3962119"
  },
  {
    "text": "out and returns it back so that I can use it in a more useful fashion okay and then I've also got a",
    "start": "3962119",
    "end": "3971279"
  },
  {
    "text": "reference to another object I've created called the temperature Beacon which will take the part pre-parsed data of all",
    "start": "3971279",
    "end": "3978720"
  },
  {
    "text": "those records search through it for the ones I care about in this case the device name record and the service data",
    "start": "3978720",
    "end": "3985200"
  },
  {
    "text": "record and pull those specific elements out to display the name and display the temperature inside of my list adapter",
    "start": "3985200",
    "end": "3992880"
  },
  {
    "text": "okay so in here and and I've caught some additional helpers so that when it is a name I know how to parse that bite array",
    "start": "3992880",
    "end": "3999520"
  },
  {
    "text": "and when it is service data I know how to parse that bite array and at least for the kst uh Beacon the temperature is",
    "start": "3999520",
    "end": "4006119"
  },
  {
    "text": "quite simple it's just two bytes with the lower bite being the temperature in degrees and the higher bite being um",
    "start": "4006119",
    "end": "4012079"
  },
  {
    "text": "flipped or not if it's half a degree because the uh the resolution is only half a degree C in this particular",
    "start": "4012079",
    "end": "4017839"
  },
  {
    "text": "sensor okay so this is obviously going to be specific to the device I'm working",
    "start": "4017839",
    "end": "4023359"
  },
  {
    "text": "with if you're you know playing with a different Beacon your format will be different if you're playing with the copertino fruit company Beacon you have",
    "start": "4023359",
    "end": "4029599"
  },
  {
    "text": "a secret protocol that do that people RSE engineered but isn't technically public yet well actually that's not true",
    "start": "4029599",
    "end": "4034799"
  },
  {
    "text": "they made it public yesterday as part of mfi so you have to sign a bunch of legal contracts first and then you can look at",
    "start": "4034799",
    "end": "4040400"
  },
  {
    "text": "it okay so that just creates one of these",
    "start": "4040400",
    "end": "4045839"
  },
  {
    "text": "objects that we can display it in the list and then we just have a basic adapter to show them all there so that",
    "start": "4045839",
    "end": "4051000"
  },
  {
    "text": "you can see the content okay all",
    "start": "4051000",
    "end": "4057279"
  },
  {
    "text": "right let's see if I can fly through the next section so I can show you the USB",
    "start": "4057279",
    "end": "4063920"
  },
  {
    "text": "stuff all right so the next things that uh I kind of want to walk you through here are USB communication so there's",
    "start": "4069000",
    "end": "4075960"
  },
  {
    "text": "two major modes in which we can use the USB on our Android devices to connect to",
    "start": "4075960",
    "end": "4081520"
  },
  {
    "text": "accessories or other external hardware okay there's open accessory and there's USB host okay open accessory is what",
    "start": "4081520",
    "end": "4088319"
  },
  {
    "text": "we're going to talk about first it's a protocol that they added to the Android apis in 3.1 um at the time they also",
    "start": "4088319",
    "end": "4095480"
  },
  {
    "text": "backported it using the Google apis library to 2.34 um and most devices now that are",
    "start": "4095480",
    "end": "4102000"
  },
  {
    "text": "running Gingerbread will have this um but it used to be that the safest way is just to only support 3 3.1 and later",
    "start": "4102000",
    "end": "4109199"
  },
  {
    "text": "which here pretty soon won't be an issue but um but it is in both and what this is is it's a it's a way for an Android",
    "start": "4109199",
    "end": "4116159"
  },
  {
    "text": "device which in USB terminology is a device not a host um to act as a USB",
    "start": "4116159",
    "end": "4123798"
  },
  {
    "text": "host so the difference between the two being you know a USB host is typically like my machine here and a USB device is",
    "start": "4123799",
    "end": "4130199"
  },
  {
    "text": "my phone and that means a couple different things both protocol wise and electrically so I mean electrically USB",
    "start": "4130199",
    "end": "4136040"
  },
  {
    "text": "device gets power from a USB host and that's a a One Direction thing so you",
    "start": "4136040",
    "end": "4141480"
  },
  {
    "text": "know if I if I want to charge my phone there's power in USB to let me do that and the host always provides the power",
    "start": "4141480",
    "end": "4147278"
  },
  {
    "text": "the uh device always consumes it protocol wise that also means that the",
    "start": "4147279",
    "end": "4152758"
  },
  {
    "text": "USB host device is responsible for initiating all communication a USB device never initiates anything it",
    "start": "4152759",
    "end": "4159120"
  },
  {
    "text": "always responds and reacts okay so device enumeration to figure out what a newly connected device is um sending",
    "start": "4159120",
    "end": "4166238"
  },
  {
    "text": "commands to get basic information that always comes from the host but the roles",
    "start": "4166239",
    "end": "4171600"
  },
  {
    "text": "are kind of reversed when we're talking about a USB accessory because if we want to plug this into our phone our phone",
    "start": "4171600",
    "end": "4178278"
  },
  {
    "text": "needs to act as a host without technically being one um from a from a USB perspective and so that's really",
    "start": "4178279",
    "end": "4184278"
  },
  {
    "text": "what open accessory is designed to solve okay it's it's an embedded protocol that allows the the USB accessory to be the",
    "start": "4184279",
    "end": "4192000"
  },
  {
    "text": "host and interact with the Android device as a USB host but make it look to",
    "start": "4192000",
    "end": "4197520"
  },
  {
    "text": "the application like it's still the device or the accessory okay so we'll take a look at what that really means um",
    "start": "4197520",
    "end": "4203840"
  },
  {
    "text": "that does also mean though that the USB accessory is responsible for powering",
    "start": "4203840",
    "end": "4209120"
  },
  {
    "text": "the phone okay so it is now it is possible to create a a USB host that",
    "start": "4209120",
    "end": "4215199"
  },
  {
    "text": "doesn't have 5vt power in it but it's it's not real easy because 5vt power is also used to connect the detection or",
    "start": "4215199",
    "end": "4222400"
  },
  {
    "text": "yeah detect the connection um in addition to actually providing that charging power so if you're trying to",
    "start": "4222400",
    "end": "4228560"
  },
  {
    "text": "create a battery powered accessory it's also going to be sending current to the phone to try and charge it and that's",
    "start": "4228560",
    "end": "4233679"
  },
  {
    "text": "just a design consideration you have to keep in mind okay um okay so the way",
    "start": "4233679",
    "end": "4238960"
  },
  {
    "text": "this works there's two different versions of it um AOA 1.0 was the initial version this really was designed",
    "start": "4238960",
    "end": "4244719"
  },
  {
    "text": "to just create a single basic interface between an embedded device and an application and in USB terms it",
    "start": "4244719",
    "end": "4251040"
  },
  {
    "text": "manifested itself as a bulk data transfer similar to a mass storage device which is kind of like when we",
    "start": "4251040",
    "end": "4256320"
  },
  {
    "text": "talked about the RFC it's just a dumb pipe that allows me to shovel data back and forth it just did all the work of",
    "start": "4256320",
    "end": "4263280"
  },
  {
    "text": "hooking that into a specific app for me okay and then on the embedded device I just have the same pipe on that side uh",
    "start": "4263280",
    "end": "4270679"
  },
  {
    "text": "in Jellybean so 4.1 they added some new features to it and what they're what they call AOA version 2.0 so in addition",
    "start": "4270679",
    "end": "4278080"
  },
  {
    "text": "to the application stuff they added support for audio accessories so that a",
    "start": "4278080",
    "end": "4283280"
  },
  {
    "text": "an Android device when you connect it an audio-based accessory could treat that as an audio route and transmit its audio",
    "start": "4283280",
    "end": "4290719"
  },
  {
    "text": "data out over the USB connection to say a Bluetooth enable or a USB enabled",
    "start": "4290719",
    "end": "4295800"
  },
  {
    "text": "speaker okay but it wasn't the same as traditional USB audio because it had to",
    "start": "4295800",
    "end": "4301199"
  },
  {
    "text": "use open accessory because in traditional USB audio the speaker is a device not a host okay so we had to sort",
    "start": "4301199",
    "end": "4306920"
  },
  {
    "text": "of flip things around a little bit uh in addition they added another feature that haven't really seen used much yet but",
    "start": "4306920",
    "end": "4313600"
  },
  {
    "text": "it's this idea of an HID Port forwarder I guess you could say so same basic idea that if I wanted to plug",
    "start": "4313600",
    "end": "4320679"
  },
  {
    "text": "a keyboard into my phone a keyboard is typically a device not a host and so it",
    "start": "4320679",
    "end": "4325760"
  },
  {
    "text": "responds to input not initiates it um and that's what an HID device typically is a mouse keyboard joystick stands for",
    "start": "4325760",
    "end": "4332800"
  },
  {
    "text": "human interface device um the they added these features to the accessory protocol",
    "start": "4332800",
    "end": "4338040"
  },
  {
    "text": "so that I could write an embedded you know little program that would take data",
    "start": "4338040",
    "end": "4343600"
  },
  {
    "text": "and push it into to the Android device to make it look like the data it would have gotten from a traditional hid okay",
    "start": "4343600",
    "end": "4350639"
  },
  {
    "text": "so hid devices transmit their data in these structured formats called reports and typically they hand them back when",
    "start": "4350639",
    "end": "4357000"
  },
  {
    "text": "they're asked for but this accessory protocol allows an Android device to have them shoved into it and have it",
    "start": "4357000",
    "end": "4363639"
  },
  {
    "text": "react the same way as keyboard or mouse or whatever that hid device is reported as",
    "start": "4363639",
    "end": "4370000"
  },
  {
    "text": "okay it's kind of an off-the-wall feature I haven't really seen it use much but the support is there okay I",
    "start": "4370000",
    "end": "4376080"
  },
  {
    "text": "won't focus on this too much this actually goes through how you implement the protocol but um some of the basics",
    "start": "4376080",
    "end": "4381239"
  },
  {
    "text": "are because the host or the uh yeah the host a the accessory is in control it's",
    "start": "4381239",
    "end": "4387360"
  },
  {
    "text": "up to the accessory to reconfigure the Android device to be an accessory mode okay so in general when I just have my",
    "start": "4387360",
    "end": "4393760"
  },
  {
    "text": "device hanging out or when I plug it into my computer that USB driver on the device is in a completely different mode",
    "start": "4393760",
    "end": "4399719"
  },
  {
    "text": "where it just it responds to things like ADB and you know deals with charging but it doesn't have all this accessories",
    "start": "4399719",
    "end": "4405199"
  },
  {
    "text": "stuff enabled the way that that works is I have to plug in an accessory that as a host starts pinging the Android device",
    "start": "4405199",
    "end": "4412360"
  },
  {
    "text": "with commands to determine if it supports AOA what version of AOA it supports and if it does it physically",
    "start": "4412360",
    "end": "4419520"
  },
  {
    "text": "has to reboot the USB driver on the device to turn on Accessory mode okay",
    "start": "4419520",
    "end": "4425480"
  },
  {
    "text": "and it turns on the way that they identify that is using the vendor and product ID which are two identifiers",
    "start": "4425480",
    "end": "4431080"
  },
  {
    "text": "that every USB device has sort of burned into it the the vendor ID for Google is always static and the product ID tells",
    "start": "4431080",
    "end": "4437679"
  },
  {
    "text": "us whether it's in accessory mode or not so if it returns back an incorrect product ID the accessory tries to reboot",
    "start": "4437679",
    "end": "4443520"
  },
  {
    "text": "it again and see if it can get that to work okay so on the embedded device that I have the the code to make all that",
    "start": "4443520",
    "end": "4450280"
  },
  {
    "text": "work is written so I mean we can show you that in the Arduino stuff but it's it's specific to the embedded",
    "start": "4450280",
    "end": "4457600"
  },
  {
    "text": "implementation okay similarly with 2.0 it worked the same way the only difference was before you sent the",
    "start": "4457600",
    "end": "4463400"
  },
  {
    "text": "command to reboot the device into accessory mode you added additional commands so you say before you do that",
    "start": "4463400",
    "end": "4469199"
  },
  {
    "text": "set audio mode because I have audio that I want you to send to me or set these additional hid parameters and then when",
    "start": "4469199",
    "end": "4475760"
  },
  {
    "text": "you reboot your device into accessory mode it will have those features enabled okay so same process just some",
    "start": "4475760",
    "end": "4481760"
  },
  {
    "text": "additional commands Okay for those of you who want to play around with this stuff there's a",
    "start": "4481760",
    "end": "4487480"
  },
  {
    "text": "number of different kits out there um the 80k which is the one that I have here um you can buy directly from",
    "start": "4487480",
    "end": "4493880"
  },
  {
    "text": "Arduino yours will look a little different than mine because this one I got at Google IO but now they're blue U",
    "start": "4493880",
    "end": "4499040"
  },
  {
    "text": "but it's the same Basic Hardware you know it's it's an Arduino from an Arduino perspective it's an 18 Mega with",
    "start": "4499040",
    "end": "4505040"
  },
  {
    "text": "a USB Shield that you would typically stick on top solder directly on the board okay so that's really what an adk",
    "start": "4505040",
    "end": "4511080"
  },
  {
    "text": "is made of um but there are also other projects out there um you know there are actually two different versions of the",
    "start": "4511080",
    "end": "4517679"
  },
  {
    "text": "Arduino now that support this AOA type communication there's the Arduino Mega that I have there's the Arduino du which",
    "start": "4517679",
    "end": "4524679"
  },
  {
    "text": "is a much newer processor it's actually based on a 32bit arm cortex M3 chip so",
    "start": "4524679",
    "end": "4530520"
  },
  {
    "text": "it's much more powerful and so because of that it also has its own USB stack on it um some of the basic microcontrollers",
    "start": "4530520",
    "end": "4536960"
  },
  {
    "text": "like the pick from microchip and ftdi all support actual existing libraries",
    "start": "4536960",
    "end": "4543320"
  },
  {
    "text": "for AOA so I mean if you're using that microcontroller family you just go to the vendor get that shared library and",
    "start": "4543320",
    "end": "4548800"
  },
  {
    "text": "drop it into your microcontroller project and you don't have to write the protocol okay so there's a number of these out there we also have list things",
    "start": "4548800",
    "end": "4555199"
  },
  {
    "text": "to the documentation there the the one for source.android.com is the most interesting to me if you're interested",
    "start": "4555199",
    "end": "4560600"
  },
  {
    "text": "in actually having to implement your own AOA protocol on whatever chip you're working with the steps that I just",
    "start": "4560600",
    "end": "4566719"
  },
  {
    "text": "showed you on the previous slide for here's all the protocol commands we send and in what order is defined that's all",
    "start": "4566719",
    "end": "4572400"
  },
  {
    "text": "that documentation is on source.android.com not the developer site",
    "start": "4572400",
    "end": "4578360"
  },
  {
    "text": "okay all right so just a little bit about the accessory apis um you know the USB accessory apis are a little bit",
    "start": "4578360",
    "end": "4586239"
  },
  {
    "text": "different than what we were dealing with with Bluetooth um because they include this idea of reacting to the physical",
    "start": "4586239",
    "end": "4592480"
  },
  {
    "text": "connection rather than sort of going out and initiating it some way using device Discovery or something like that so if",
    "start": "4592480",
    "end": "4599760"
  },
  {
    "text": "your accessory is already connected to your device you can ask the USB manager",
    "start": "4599760",
    "end": "4605199"
  },
  {
    "text": "to get an get a reference to that you know by just saying you give me a list of the accessories that are connected um",
    "start": "4605199",
    "end": "4611480"
  },
  {
    "text": "and determining if the one that I want is already there uh but there's actually also a format that allows you to",
    "start": "4611480",
    "end": "4618120"
  },
  {
    "text": "autoload an application based on an accessory connection okay so part of the",
    "start": "4618120",
    "end": "4623920"
  },
  {
    "text": "embedded firmware that I have on this device is it includes some definitions for a manufacturer model serial number",
    "start": "4623920",
    "end": "4631600"
  },
  {
    "text": "version there's a number of different strings that actually get reported from the accessory to the Android device I",
    "start": "4631600",
    "end": "4637080"
  },
  {
    "text": "can then set up in an application filters for that data so I basically Define an XML file that says if an if an",
    "start": "4637080",
    "end": "4645280"
  },
  {
    "text": "accessory that is of this version this manufacturer so on and so forth gets attached I want to use it and then the",
    "start": "4645280",
    "end": "4651800"
  },
  {
    "text": "Android framework when you connect the device says we found an app that uses accessory would you like to launch it",
    "start": "4651800",
    "end": "4657239"
  },
  {
    "text": "and just does that whole thing automatically one of those strings is actually also a URL and the purpose of",
    "start": "4657239",
    "end": "4663199"
  },
  {
    "text": "the URL in your embedded device is that if your app is not installed yet when",
    "start": "4663199",
    "end": "4669000"
  },
  {
    "text": "they connect the accessory it will say we haven't found an app that works with this accessory would you like to go to",
    "start": "4669000",
    "end": "4674880"
  },
  {
    "text": "URL X to find it so typically people would put their Google Play URL or something like that embedded on the",
    "start": "4674880",
    "end": "4681000"
  },
  {
    "text": "device for that to work okay um so there are actions for attach and detach and",
    "start": "4681000",
    "end": "4686960"
  },
  {
    "text": "when you register for an attach action you give it that filter and that's how the framework knows we should launch",
    "start": "4686960",
    "end": "4692239"
  },
  {
    "text": "this app this specific component okay I'm going to go through the rest of this before I show you the",
    "start": "4692239",
    "end": "4698199"
  },
  {
    "text": "demos but in addition we have this idea of host mode so this is more commercial type USB communication um so there are",
    "start": "4698199",
    "end": "4706360"
  },
  {
    "text": "many Android devices it used to be just a tablet thing but now we're starting to see it on handsets as well where the",
    "start": "4706360",
    "end": "4712639"
  },
  {
    "text": "devices support USB host as well as being a USB device um some of them use a",
    "start": "4712639",
    "end": "4718239"
  },
  {
    "text": "you might have heard a term called USB on the- go really that's just both versions in the same connector it's an",
    "start": "4718239",
    "end": "4723760"
  },
  {
    "text": "electrical specification it just means that the device can be either a host or a device it can still only be one at any",
    "start": "4723760",
    "end": "4730199"
  },
  {
    "text": "given time and it makes that decision based on what it's connected to but it it really just means that it can support",
    "start": "4730199",
    "end": "4735800"
  },
  {
    "text": "both protocols okay so because of that we actually have the ability to hook in",
    "start": "4735800",
    "end": "4741760"
  },
  {
    "text": "commercial USB devices that you would just buy off the shelf and work with them inside of an application so for",
    "start": "4741760",
    "end": "4747639"
  },
  {
    "text": "instance the example I have is I have a postage scale that I got from Staples and I can plug that into my tablet and",
    "start": "4747639",
    "end": "4753360"
  },
  {
    "text": "communicate with it and write an app that that talks to that scale right I mean this is not something I wrote or",
    "start": "4753360",
    "end": "4758480"
  },
  {
    "text": "coded I just bought one okay so because we have the host capability we can kind of work with that",
    "start": "4758480",
    "end": "4765600"
  },
  {
    "text": "all right so just a little bit about usb devices um USB devices are built up of",
    "start": "4765600",
    "end": "4771280"
  },
  {
    "text": "endpoints they're sort of the smallest building block and endpoint is the the element that you actually connect to you",
    "start": "4771280",
    "end": "4778800"
  },
  {
    "text": "know and there will be endpoints grouped together uh by their function so there's a number of different endpoint types",
    "start": "4778800",
    "end": "4784800"
  },
  {
    "text": "there are control endpoints interrupt endpoints bulk endpoints and isochronous end points the first three are allowed",
    "start": "4784800",
    "end": "4793040"
  },
  {
    "text": "to use inside of an app is end points are not enabled for apps they actually",
    "start": "4793040",
    "end": "4798280"
  },
  {
    "text": "are supported in the framework because that's how they do the USB audio stuff with an accessory but an application",
    "start": "4798280",
    "end": "4804480"
  },
  {
    "text": "cannot talk to an isochronous endpoint it's not supported in the apis okay but control endpoints and interrupt those",
    "start": "4804480",
    "end": "4809840"
  },
  {
    "text": "are typically used for simple commands like there's a command for me to zero the scale that's a control command um",
    "start": "4809840",
    "end": "4816440"
  },
  {
    "text": "the interrupt sometimes will have small data messages and bulk transfer would be",
    "start": "4816440",
    "end": "4821760"
  },
  {
    "text": "like flash flash drive right I open up a bulk endpoint and start shoveling data back and forth in large mass okay those",
    "start": "4821760",
    "end": "4828760"
  },
  {
    "text": "end points are then collected together in interfaces so an interface is what you would think of as a logical device",
    "start": "4828760",
    "end": "4834440"
  },
  {
    "text": "you know and the reason that it's not the highest block which is a configuration is that a single physical",
    "start": "4834440",
    "end": "4840600"
  },
  {
    "text": "device might represent itself as more than one logical device think of like a multi-function printer right it's a",
    "start": "4840600",
    "end": "4846639"
  },
  {
    "text": "printer a scanner a fax machine and those are all devices that show up on your machine when you hook it in each",
    "start": "4846639",
    "end": "4852280"
  },
  {
    "text": "one of those is an interface that are members of a single configuration okay that's kind of how that all breaks up",
    "start": "4852280",
    "end": "4858920"
  },
  {
    "text": "the reason those terms are important is because the Android API line up exactly with those terms the Android apis don't",
    "start": "4858920",
    "end": "4865560"
  },
  {
    "text": "give you much in terms of higher level access they just you just get to enumerate descriptors and enumerate",
    "start": "4865560",
    "end": "4872400"
  },
  {
    "text": "configurations interfaces and endpoints and you have to know what those endpoints are and how to talk to them because all they're giving you is sort",
    "start": "4872400",
    "end": "4877880"
  },
  {
    "text": "of that very thin layer okay um this is just the way that devices report their",
    "start": "4877880",
    "end": "4883800"
  },
  {
    "text": "capabilities back to the host is using descriptors so I just wanted to give you sort of an idea of what descriptors look",
    "start": "4883800",
    "end": "4889400"
  },
  {
    "text": "like you know these are standard descriptors for the in this case the device as a whole and the configuration",
    "start": "4889400",
    "end": "4895080"
  },
  {
    "text": "for that device they report things like it's vendor and product ID how much power this device is going to need all",
    "start": "4895080",
    "end": "4901320"
  },
  {
    "text": "that information is resident in descriptors on the device then there are other descriptors for string values the",
    "start": "4901320",
    "end": "4908040"
  },
  {
    "text": "interface has its own descriptor to to report how many endpoints that interface has what type of interface it is all",
    "start": "4908040",
    "end": "4914199"
  },
  {
    "text": "that information so the host during enumeration just goes through and says give me this descriptor give me this",
    "start": "4914199",
    "end": "4919320"
  },
  {
    "text": "descriptor and that's how it knows what kind of device it is to configure on a desktop the driver for it but you know",
    "start": "4919320",
    "end": "4925360"
  },
  {
    "text": "here in Android how we're going to configure our app right okay USB host apis are very",
    "start": "4925360",
    "end": "4932080"
  },
  {
    "text": "similar to the accessory apis so we'll kind of Breeze through this but you still work with USB manager if you want",
    "start": "4932080",
    "end": "4938760"
  },
  {
    "text": "a list of currently connected devices there's a git device list instead of get accessory uh and similar to the",
    "start": "4938760",
    "end": "4945440"
  },
  {
    "text": "connection there are events for being for getting an attachment or a Detachment of a device and just like",
    "start": "4945440",
    "end": "4952000"
  },
  {
    "text": "with accessories if I want my application to only respond to connections from certain USB devices I",
    "start": "4952000",
    "end": "4958960"
  },
  {
    "text": "can create another one of those filters to say only launch my app if the device has this vendor ID product ID um",
    "start": "4958960",
    "end": "4966480"
  },
  {
    "text": "interface class you know so on and so forth there's a number of different fields in there in both cases with devices and",
    "start": "4966480",
    "end": "4973120"
  },
  {
    "text": "accessories if you set that filter and make it empty you will filter on any connection from any device okay so it is",
    "start": "4973120",
    "end": "4979840"
  },
  {
    "text": "possible to do that all right so um when working with",
    "start": "4979840",
    "end": "4985239"
  },
  {
    "text": "USB devices um and to be honest accessories too you the user is always involved in that process so either a",
    "start": "4985239",
    "end": "4992560"
  },
  {
    "text": "connection is made and the user sees a dialogue asking if they would like to launch your app or when you go to",
    "start": "4992560",
    "end": "4999480"
  },
  {
    "text": "connect to an existing device they will get another dialogue that says do you grant per permission for them to use",
    "start": "4999480",
    "end": "5005840"
  },
  {
    "text": "this app or for the app to use this device okay the first dialogue implicitly grants permission when they",
    "start": "5005840",
    "end": "5011280"
  },
  {
    "text": "say yes so they usually only see one or the other but you can never actually connect to a USB device or accessory",
    "start": "5011280",
    "end": "5017080"
  },
  {
    "text": "without going through that user dialogue first okay um so once you've requested",
    "start": "5017080",
    "end": "5022679"
  },
  {
    "text": "permission and it's been granted to you then you can open up a connection and you know that's where things like open",
    "start": "5022679",
    "end": "5028560"
  },
  {
    "text": "device come in and we can start um claiming interfaces and transferring data back and forth with this device it",
    "start": "5028560",
    "end": "5035960"
  },
  {
    "text": "turns out enumerating the information on a device we don't need permission for so things like get interface get endpoint I",
    "start": "5035960",
    "end": "5043440"
  },
  {
    "text": "can do those on any connected device without permission so I can figure out what this device is first I just can't",
    "start": "5043440",
    "end": "5049000"
  },
  {
    "text": "open communication to it at that point if I don't have permission things will start failing",
    "start": "5049000",
    "end": "5054159"
  },
  {
    "text": "okay all right and then just actual data transfer um there's a number of different ways to do this there are USB",
    "start": "5054159",
    "end": "5060800"
  },
  {
    "text": "requests which is an asynchronous model and can be used for bulk endpoints or interrupt endpoints this is something",
    "start": "5060800",
    "end": "5067320"
  },
  {
    "text": "where you initialize a request and you just say ceue it up and when it's done let me know and then later on you can",
    "start": "5067320",
    "end": "5072719"
  },
  {
    "text": "check this is actually a polling mechanism you have to check back later and see if that request is finished and it will uh it will tell you that the",
    "start": "5072719",
    "end": "5080400"
  },
  {
    "text": "remaining two the bulk transfer and control transfer are used specifically for bulk endpoints and control endpoints",
    "start": "5080400",
    "end": "5086800"
  },
  {
    "text": "um but those are synchronous so those I call the method and it will try and then return back when it either succeeded or",
    "start": "5086800",
    "end": "5093280"
  },
  {
    "text": "failed or timed out or something something like that okay um I will say having played around with this recently",
    "start": "5093280",
    "end": "5099119"
  },
  {
    "text": "that all of these used to work really well in the 3.0 days the USB request",
    "start": "5099119",
    "end": "5104440"
  },
  {
    "text": "stuff is kind of broken recently so if you're dealing with having to talk to an",
    "start": "5104440",
    "end": "5109880"
  },
  {
    "text": "interrupt endpoint and trying to do that using USB request that doesn't seem to work so well in Jelly Bean used to work",
    "start": "5109880",
    "end": "5116639"
  },
  {
    "text": "fine and now there's some bugs in there it seems to work fine for bulk end points still um but the interrupt stuff",
    "start": "5116639",
    "end": "5122520"
  },
  {
    "text": "is is been acting a little goofy lately so if you're dealing with that and you've had similar problems I'm with",
    "start": "5122520",
    "end": "5128400"
  },
  {
    "text": "you okay let's get these last Demos in",
    "start": "5128400",
    "end": "5134320"
  },
  {
    "text": "here all right so the first one that I'll show you is just a rehash of what we had before I'm going to play my game",
    "start": "5134760",
    "end": "5142119"
  },
  {
    "text": "again but this time what we're going to do is I'm going to take my",
    "start": "5143159",
    "end": "5149520"
  },
  {
    "text": "controller and I am going to plug it into my Android device in",
    "start": "5149520",
    "end": "5156239"
  },
  {
    "text": "instead you always do it the wrong way first what's that unless unless you're",
    "start": "5157159",
    "end": "5164000"
  },
  {
    "text": "app that's right so who's so notice that the uh the",
    "start": "5164000",
    "end": "5171480"
  },
  {
    "text": "controller is actually plugged in um and because this is a host Port it will be",
    "start": "5171480",
    "end": "5176920"
  },
  {
    "text": "providing power to my device okay so I don't know if you'll be able to see it or not yeah you actually can see it when",
    "start": "5176920",
    "end": "5183560"
  },
  {
    "text": "the status bar comes back you'll notice that the charging symbol is actually on um okay so when I connect it what I get",
    "start": "5183560",
    "end": "5190679"
  },
  {
    "text": "is this dialogue because I have my my accessory app already installed and it knows which application because I've set",
    "start": "5190679",
    "end": "5196960"
  },
  {
    "text": "the filters correctly and so when I connect it it immediately says would you like to open the controller app and",
    "start": "5196960",
    "end": "5202520"
  },
  {
    "text": "start you know playing around or or would you like to not I could hit cancel and nothing would happen but I'll go",
    "start": "5202520",
    "end": "5207679"
  },
  {
    "text": "ahead and launch the app from here and it just immediately jumps me into the app and I can play my game again except",
    "start": "5207679",
    "end": "5213480"
  },
  {
    "text": "I've got my controller upside down so now I'm playing the exact same game but now I'm talking over USB",
    "start": "5213480",
    "end": "5220880"
  },
  {
    "text": "instead of over Bluetooth make sure to change the",
    "start": "5220880",
    "end": "5226239"
  },
  {
    "text": "color okay we so same basic functionality but now I'm using in this",
    "start": "5226280",
    "end": "5231600"
  },
  {
    "text": "case open accessory so open accessory opens up that same raw input and output",
    "start": "5231600",
    "end": "5237840"
  },
  {
    "text": "stream between me and my Arduino or the Android and the Arduino device so I can even use the same accessory because at",
    "start": "5237840",
    "end": "5243560"
  },
  {
    "text": "the end of the day it's just pushing the same data just over a different pipe now it's going over USB instead of my",
    "start": "5243560",
    "end": "5249480"
  },
  {
    "text": "Bluetooth Shield that I have in between the two",
    "start": "5249480",
    "end": "5254119"
  },
  {
    "text": "okay all right so we'll unhook that maybe there we",
    "start": "5255760",
    "end": "5262280"
  },
  {
    "text": "go so let's take a look at the code for that guy",
    "start": "5262280",
    "end": "5267800"
  },
  {
    "text": "so in here well let me show you a couple things actually we'll start with the Manifest for this and a couple other",
    "start": "5275280",
    "end": "5282360"
  },
  {
    "text": "pieces so if I bring up some XML come back here okay so inside of the",
    "start": "5282360",
    "end": "5290159"
  },
  {
    "text": "USB activity notice I have an extra intent filter besides just the main launcher for an accessory being attached",
    "start": "5290159",
    "end": "5298400"
  },
  {
    "text": "okay and in addition I provide some metadata that points to the um filter",
    "start": "5298400",
    "end": "5303560"
  },
  {
    "text": "XML for when that action occurs okay and then the filter looks something like",
    "start": "5303560",
    "end": "5308679"
  },
  {
    "text": "this let me actually change it so these are just some values these are all string values that are defined on my",
    "start": "5308679",
    "end": "5315239"
  },
  {
    "text": "controller there's manufacturer model uh version serial number and URL I think",
    "start": "5315239",
    "end": "5320560"
  },
  {
    "text": "those are the five um and I can put as many or as few in here as I would like",
    "start": "5320560",
    "end": "5326119"
  },
  {
    "text": "to filter on so for instance let's say I had several accessories from my company and I want to filter on anything that",
    "start": "5326119",
    "end": "5331800"
  },
  {
    "text": "has the same manufacturer I just put that one in there okay so I can do that and then this this in concert with",
    "start": "5331800",
    "end": "5338119"
  },
  {
    "text": "what's in the Manifest is how I get that dialogue to automatically pop up when I plugged in the accessory",
    "start": "5338119",
    "end": "5345840"
  },
  {
    "text": "okay now by the same token I may need to get it ahead of time so if I didn't come",
    "start": "5346639",
    "end": "5351880"
  },
  {
    "text": "in uh for that reason I may if I just jump into the app I may want to check to",
    "start": "5351880",
    "end": "5357199"
  },
  {
    "text": "see if the accessories already connected first so in that case that's why and on resume here um depending on this result",
    "start": "5357199",
    "end": "5363639"
  },
  {
    "text": "I may go to see if there are any accessories and if I've already got one check to see",
    "start": "5363639",
    "end": "5369400"
  },
  {
    "text": "if I've got permission for it already if the users already clicked okay and if so then I can just jump right in and start",
    "start": "5369400",
    "end": "5376080"
  },
  {
    "text": "doing things um but if not I have to request permission first and then notice",
    "start": "5376080",
    "end": "5381600"
  },
  {
    "text": "request permission takes a that's actually a pending intent um so I pass it a pending intent and then when the",
    "start": "5381600",
    "end": "5387520"
  },
  {
    "text": "permission is either granted or denied it triggers the pending intent back to me um which in this case the pending",
    "start": "5387520",
    "end": "5394159"
  },
  {
    "text": "intent is a broadcast I think is what I have set up yeah I set that up as a broadcast so",
    "start": "5394159",
    "end": "5401239"
  },
  {
    "text": "that fires inside of my broadcast",
    "start": "5401239",
    "end": "5405280"
  },
  {
    "text": "receiver when the user has either granted or denied permission now depending on how you want to architect",
    "start": "5406639",
    "end": "5412480"
  },
  {
    "text": "your app this is actually a a nice simple way to do this where even if the user has already granted you permission",
    "start": "5412480",
    "end": "5419400"
  },
  {
    "text": "in that case if you call request permission it will just immediately fire your inent okay so sometimes it's safe",
    "start": "5419400",
    "end": "5426280"
  },
  {
    "text": "to just create a code path that always calls a request and one of two things will happen either you'll Jump Right In",
    "start": "5426280",
    "end": "5431480"
  },
  {
    "text": "or you'll involve the user first and jump right in but the code will work the same way at that point okay um but then",
    "start": "5431480",
    "end": "5437000"
  },
  {
    "text": "in any case once I have the accessory that I'm interested in I can go in and call open so open accessory is a method",
    "start": "5437000",
    "end": "5443280"
  },
  {
    "text": "that I wrote that really just takes the accessory instance I've been given from that Discovery connection process and",
    "start": "5443280",
    "end": "5451000"
  },
  {
    "text": "out of that always comes a file descriptor okay so when I open an accessory what I get is a file descriptor which is really just a file",
    "start": "5451000",
    "end": "5457360"
  },
  {
    "text": "handle to the driver it's just abstracted a little bit um and then from there a file descriptor I can create",
    "start": "5457360",
    "end": "5463119"
  },
  {
    "text": "input and output streams by just wrapping it as a file okay so there's a file handle to the open accessory I",
    "start": "5463119",
    "end": "5469040"
  },
  {
    "text": "create streams for it and then just like my game with Bluetooth once I have streams I can just play the game the way",
    "start": "5469040",
    "end": "5474880"
  },
  {
    "text": "I did before okay so it's the same basic principle at that point",
    "start": "5474880",
    "end": "5481800"
  },
  {
    "text": "okay let's take a look at the the last one that I've got",
    "start": "5482159",
    "end": "5487360"
  },
  {
    "text": "here all right so the last guy that I've got to show you here is my USB host",
    "start": "5489440",
    "end": "5495880"
  },
  {
    "text": "demo so in this case what I've got is this postage scale and using this fancy",
    "start": "5495880",
    "end": "5501159"
  },
  {
    "text": "little adapter from Amazon I am going to connect the USB host Port into my tablet",
    "start": "5501159",
    "end": "5508000"
  },
  {
    "text": "so that I can use it as a display for the scale so I'm going to plug that in just",
    "start": "5508000",
    "end": "5514199"
  },
  {
    "text": "like before I get a similar dialogue because just like with my accessory I'm filtering for this specific device type",
    "start": "5514199",
    "end": "5520679"
  },
  {
    "text": "so when it plugs in it says oh would you like to open the scale monitor app yes I'd love to okay so what I've got in this",
    "start": "5520679",
    "end": "5527800"
  },
  {
    "text": "application is really just it's a very basic thing where it parses out some config information from the scale",
    "start": "5527800",
    "end": "5533639"
  },
  {
    "text": "initially that's how I get the default units and the weight limit and some of that other stuff those are just um",
    "start": "5533639",
    "end": "5539360"
  },
  {
    "text": "they're descriptors on my USB device and I can just pull those by asking for specific report data the scale acts like",
    "start": "5539360",
    "end": "5546679"
  },
  {
    "text": "an HID device which is the same thing as keyboards and mice so they have they structure this data in reports and I",
    "start": "5546679",
    "end": "5552320"
  },
  {
    "text": "just ask for different report types okay all right so what it's displaying at any",
    "start": "5552320",
    "end": "5557480"
  },
  {
    "text": "given time is just the weight on the scale and then the color is based on whether the weight is stable or whether",
    "start": "5557480",
    "end": "5562800"
  },
  {
    "text": "it's transitioning so you know if I drop my phone on here it'll show up for a second as white and then once it's",
    "start": "5562800",
    "end": "5567880"
  },
  {
    "text": "stable it go back to green right you know and I can take that off and it'll go back there um so the other thing that",
    "start": "5567880",
    "end": "5574000"
  },
  {
    "text": "I can do there's a control request to zero the scale so I can from a button on",
    "start": "5574000",
    "end": "5580360"
  },
  {
    "text": "my screen send that request to zero out the scale so if I do that then the value will come back to zero on the scale and",
    "start": "5580360",
    "end": "5587000"
  },
  {
    "text": "it's on the display trust me um and then if I take this off now the value is going to go negative right so if I",
    "start": "5587000",
    "end": "5593760"
  },
  {
    "text": "zeroed it with the the device on then I lift it now this the color has changed to say that this is a value below zero",
    "start": "5593760",
    "end": "5600199"
  },
  {
    "text": "those are just status bits in the report I get back to say What's the status of the scale or the status of the weight",
    "start": "5600199",
    "end": "5606239"
  },
  {
    "text": "and that's what I'm using to change this color okay then I can zero it again it",
    "start": "5606239",
    "end": "5611320"
  },
  {
    "text": "also supports the it part of that weight is what are the units so on this scale I",
    "start": "5611320",
    "end": "5617280"
  },
  {
    "text": "can change the units from pounds and ounces to to grams and kilograms so if I do that then the value will come back in",
    "start": "5617280",
    "end": "5623760"
  },
  {
    "text": "a different unit structure and it just tells me that in the next report that I pull so I update the display okay so I",
    "start": "5623760",
    "end": "5630600"
  },
  {
    "text": "didn't design this device but it conforms to an HID spec on us.org so I can read the doc figure out what the",
    "start": "5630600",
    "end": "5637000"
  },
  {
    "text": "reports are and write an app that talks to it okay",
    "start": "5637000",
    "end": "5642080"
  },
  {
    "text": "yes advantages to using USB over Bluetooth um designing a system sure and",
    "start": "5646679",
    "end": "5652560"
  },
  {
    "text": "I think what you meant to say is that Bluetooth was a replacement for cables I'm like USB how do you get a cable out of that but I I know what you mean um so",
    "start": "5652560",
    "end": "5661320"
  },
  {
    "text": "I think at least today the the primary primary difference between the two is",
    "start": "5661320",
    "end": "5666800"
  },
  {
    "text": "going to be speed you know I will every day especially as the USB spec continues",
    "start": "5666800",
    "end": "5672239"
  },
  {
    "text": "to advance get much more throughput out of USB than Bluetooth uh you know and even as Bluetooth gets faster so does",
    "start": "5672239",
    "end": "5678360"
  },
  {
    "text": "USB USB 3 is ridiculously fast um and we can't get anything close to that in Bluetooth right now um and I don't know",
    "start": "5678360",
    "end": "5685040"
  },
  {
    "text": "that we ever will because anytime you talk about Wireless you start getting into Power considerations um so I mean",
    "start": "5685040",
    "end": "5690400"
  },
  {
    "text": "probably the biggest thing is that just that speed requirement let it serve different use cases you know I an",
    "start": "5690400",
    "end": "5696280"
  },
  {
    "text": "external hard drive works great over USB probably doesn't make as much sense to do that over Bluetooth because of the throughput but at the same time if",
    "start": "5696280",
    "end": "5703000"
  },
  {
    "text": "something needs to be portable then a Cable's kind of pointless so I think it's just different use cases in that",
    "start": "5703000",
    "end": "5708480"
  },
  {
    "text": "case that's my thought on it anyway",
    "start": "5708480",
    "end": "5712920"
  },
  {
    "text": "yes harder to sniff when it yes it's more secure over a cable that's probably true",
    "start": "5717280",
    "end": "5722400"
  },
  {
    "text": "too sure so yeah to some degree I think it boils down to the the different",
    "start": "5722400",
    "end": "5727920"
  },
  {
    "text": "implementation headaches that you'd like to deal with because they each have their own um and which ones fit better",
    "start": "5727920",
    "end": "5733400"
  },
  {
    "text": "with your use case so yes sir yes yes so I did mention that that's",
    "start": "5733400",
    "end": "5738880"
  },
  {
    "text": "one of the things that the the accessory does is rebooting the USB",
    "start": "5738880",
    "end": "5744040"
  },
  {
    "text": "driver no no it's just the driver it's not the entire device good question yes",
    "start": "5745560",
    "end": "5751040"
  },
  {
    "text": "one more and then we're going to finish here so when you data sure so maybe a",
    "start": "5751040",
    "end": "5758080"
  },
  {
    "text": "after everything maybe we can kind of if the people who are interested in the Arduino stuff I can kind of show you that but really it's just it's packing",
    "start": "5758080",
    "end": "5764360"
  },
  {
    "text": "up the raw sensor values that are coming from the analog joystick or the digital buttons um and packing them up into btes",
    "start": "5764360",
    "end": "5770480"
  },
  {
    "text": "and shipping them across just a little protocol I basically invented to be able to do that so we can take a look at that",
    "start": "5770480",
    "end": "5776119"
  },
  {
    "text": "for sure okay all right so just real quick I want to go through this example here so just like with the Manifest in",
    "start": "5776119",
    "end": "5783400"
  },
  {
    "text": "the accessory I have a similar layout for the device okay so let me get this",
    "start": "5783400",
    "end": "5789880"
  },
  {
    "text": "out of the way so my activity still has an intent filter there for a USB device attachment",
    "start": "5789880",
    "end": "5797119"
  },
  {
    "text": "instead of an accessory attachment and that same metadata saying here's how we want to filter those device connections",
    "start": "5797119",
    "end": "5803520"
  },
  {
    "text": "okay in this case what we're filtering for is a specific vendor ID and product ID that match up exactly with this",
    "start": "5803520",
    "end": "5810800"
  },
  {
    "text": "product okay so I mean the vendor ID is basically assigned to Doo and the",
    "start": "5810800",
    "end": "5816080"
  },
  {
    "text": "product ID is this specific model so one thing I could do is support all Dio scales with this app and just look for",
    "start": "5816080",
    "end": "5821800"
  },
  {
    "text": "the vendor ID assuming they're all the same protocol I hope they do but um you can also add other values in here like",
    "start": "5821800",
    "end": "5828800"
  },
  {
    "text": "the device class subass and protocol the problem with that is when",
    "start": "5828800",
    "end": "5835040"
  },
  {
    "text": "you start looking at USB devices you start to realize that a lot of them don't Implement their class subclass and",
    "start": "5835040",
    "end": "5840520"
  },
  {
    "text": "protocol at the device level they Implement them per interface think of that multifunction device where I have",
    "start": "5840520",
    "end": "5847159"
  },
  {
    "text": "one physical device with three interfaces for three logical devices the device level descriptors for those three",
    "start": "5847159",
    "end": "5853760"
  },
  {
    "text": "values are always zero and the individual descriptors for each interface is where they describe this is",
    "start": "5853760",
    "end": "5860040"
  },
  {
    "text": "a printer this is a scanner this is a fax machine um I can't get the interface",
    "start": "5860040",
    "end": "5865320"
  },
  {
    "text": "level stuff for filtering only device level so generally that one's not real useful but technically it is there okay",
    "start": "5865320",
    "end": "5870880"
  },
  {
    "text": "usually the vendor and product ID are the most useful here okay so by putting that filter on then I",
    "start": "5870880",
    "end": "5876159"
  },
  {
    "text": "can get that to launch my application inside of this activity so this activity I've just",
    "start": "5876159",
    "end": "5881599"
  },
  {
    "text": "predefined a number of constants and I ripped those right out of that hid",
    "start": "5881599",
    "end": "5886840"
  },
  {
    "text": "spec so same same idea be as with the accessory where we have to request permission before we can talk to this",
    "start": "5887080",
    "end": "5894639"
  },
  {
    "text": "device but in the case where the user launched the app from that dialogue they've implicitly already granted it so",
    "start": "5894639",
    "end": "5901280"
  },
  {
    "text": "we may have a couple code paths in here um but eventually what's going to happen is we're going to end up at this same",
    "start": "5901280",
    "end": "5906719"
  },
  {
    "text": "broadcast receiver that says okay we have an attached device we've got permission",
    "start": "5906719",
    "end": "5913280"
  },
  {
    "text": "available now we can start communicating with the device okay so in this case",
    "start": "5913280",
    "end": "5918920"
  },
  {
    "text": "when I set the device really that's just going in here and this is doing some of that basic",
    "start": "5918920",
    "end": "5924760"
  },
  {
    "text": "enumeration so what I'm doing so far I don't need permission to do even though I checked that first you know I can",
    "start": "5924760",
    "end": "5931440"
  },
  {
    "text": "check the interface count I can look at different interfaces I can check for endpoints on each interface I can",
    "start": "5931440",
    "end": "5937040"
  },
  {
    "text": "enumerate all that stuff figure out what kind of endpoints they are all that sort of thing okay so I can do all that",
    "start": "5937040",
    "end": "5944360"
  },
  {
    "text": "without having to request permission it's as soon as I try to do open device that the permission needs to be there",
    "start": "5944360",
    "end": "5951280"
  },
  {
    "text": "okay so open device is going to give me one of these connection objects and once I have a USB device",
    "start": "5951280",
    "end": "5957880"
  },
  {
    "text": "connection then I can start making requests back and forth now in in this example I'm not using USB request the",
    "start": "5957880",
    "end": "5964880"
  },
  {
    "text": "asynchronous one because like I mentioned it's been kind of wonky lately I'm doing this all with synchronous requests but so I mentioned the first",
    "start": "5964880",
    "end": "5971480"
  },
  {
    "text": "thing that I do is update those attributes so for the scale attributes and the scale weight limit we just go in",
    "start": "5971480",
    "end": "5977840"
  },
  {
    "text": "here we Define a report type so these values again come straight out of the",
    "start": "5977840",
    "end": "5983199"
  },
  {
    "text": "hid spec like the hid spec says that for this command there's a command ID for",
    "start": "5983199",
    "end": "5988639"
  },
  {
    "text": "getting a report and these bits need to be set this way because of the direction of the report the type of report it is",
    "start": "5988639",
    "end": "5995719"
  },
  {
    "text": "and its ID all that stuff is inside the USB spec I'm just ripping it out and using it again okay but so once I've",
    "start": "5995719",
    "end": "6003199"
  },
  {
    "text": "constructed all those values those values get passed into this control transfer method that's on USB device",
    "start": "6003199",
    "end": "6009440"
  },
  {
    "text": "connection so control transfer says this command goes to end point0 the control endpoint every device has at least one",
    "start": "6009440",
    "end": "6016040"
  },
  {
    "text": "control endpoint it's end point0 okay so anytime you use these that's where it's going so I can get the data for this",
    "start": "6016040",
    "end": "6023000"
  },
  {
    "text": "scale scale by just asking for these reports from the control endpoint okay",
    "start": "6023000",
    "end": "6028639"
  },
  {
    "text": "so this one is what just tells me the scale class in units the limit data is the one that told me the maximum weight",
    "start": "6028639",
    "end": "6035840"
  },
  {
    "text": "limit of the scale so I could put that in the display the uh the set zero scale was",
    "start": "6035840",
    "end": "6043440"
  },
  {
    "text": "that command that I fired when I hit the button so when I hit the button this sends another command in this case it's",
    "start": "6043440",
    "end": "6049280"
  },
  {
    "text": "a set report instead of a get Report with the bit flipped to to say Force this zero force zero on the scale okay",
    "start": "6049280",
    "end": "6057840"
  },
  {
    "text": "but it's just another control transfer and then the one that gets called regularly is this weight data so",
    "start": "6057840",
    "end": "6064440"
  },
  {
    "text": "weight data is just another report in this case it's report ID3 um and its length is six bytes again",
    "start": "6064440",
    "end": "6071159"
  },
  {
    "text": "I'm pulling all this stuff out of the hid spec so we just call that control transfer again but what I'm",
    "start": "6071159",
    "end": "6077560"
  },
  {
    "text": "doing is that once uh once set device gets fired",
    "start": "6077560",
    "end": "6083880"
  },
  {
    "text": "and everything's ready to go I'm starting a background thread to do all this",
    "start": "6083880",
    "end": "6089400"
  },
  {
    "text": "polling and the background thread is just executing the run method inside of this",
    "start": "6089400",
    "end": "6094719"
  },
  {
    "text": "activity so it's just running through and calling that update function you know a few times a second right so it",
    "start": "6094719",
    "end": "6101800"
  },
  {
    "text": "calls the update which does a control transfer posts that back to the UI which is how I update the the green color and",
    "start": "6101800",
    "end": "6108599"
  },
  {
    "text": "the display and the number um then pauses for a second and does it again you know just a fairly simple polling",
    "start": "6108599",
    "end": "6114360"
  },
  {
    "text": "Loop okay and it all it does this as long as I consider this to be active and",
    "start": "6114360",
    "end": "6120960"
  },
  {
    "text": "then that that running bit when we leave the application if we go to on pause or on",
    "start": "6120960",
    "end": "6128239"
  },
  {
    "text": "stop sorry when we go into the background it shuts that off which kills the thread okay within 25",
    "start": "6128239",
    "end": "6137440"
  },
  {
    "text": "milliseconds so okay let's go back over",
    "start": "6137560",
    "end": "6146199"
  },
  {
    "text": "here so there you go so that's everything I've got for you um thanks for hanging out with me tonight I",
    "start": "6147159",
    "end": "6153440"
  },
  {
    "text": "appreciate your time as I mentioned before the um the",
    "start": "6153440",
    "end": "6160920"
  },
  {
    "text": "samples are on my GitHub so that's the link there or you can just go to my GitHub page and you'll see it on the",
    "start": "6160920",
    "end": "6165960"
  },
  {
    "text": "main page there um the beacons I mentioned are made by KS Technologies so go to their website if you want to get",
    "start": "6165960",
    "end": "6171760"
  },
  {
    "text": "more of that or they're going to be here Friday um you know if you want to look at more at our work go to double Encore",
    "start": "6171760",
    "end": "6178000"
  },
  {
    "text": "and then there's all my social stuff if you want to hook up with me so thanks again guys",
    "start": "6178000",
    "end": "6184520"
  }
]