[
  {
    "text": "[Music]",
    "start": "3350",
    "end": "14249"
  },
  {
    "text": "hello everyone good day good afternoon good evening wherever you are um today I",
    "start": "15519",
    "end": "21359"
  },
  {
    "text": "want to dive into from monitoring to observability ebpf chaos um in the next",
    "start": "21359",
    "end": "29199"
  },
  {
    "text": "50 minutes we will like hear the story around uh my learning story about ebpf",
    "start": "29199",
    "end": "36000"
  },
  {
    "text": "um how to use like tools based on ebpf and debugging certain things in",
    "start": "36000",
    "end": "41160"
  },
  {
    "text": "production like an incident and how like chaos engineering and Chaos um can help",
    "start": "41160",
    "end": "47000"
  },
  {
    "text": "with that um my name is Michael I'm a senior developer by evangelist gab I go",
    "start": "47000",
    "end": "53120"
  },
  {
    "text": "as DNS Mi which is DNS Mii on social media on the internet on Twitter on",
    "start": "53120",
    "end": "58199"
  },
  {
    "text": "LinkedIn meod on and on gitlab.com so if you want to reach out to me um you can",
    "start": "58199",
    "end": "63359"
  },
  {
    "text": "do so um here's the here's the resources actually so you if you want to like follow along um in this talk you can",
    "start": "63359",
    "end": "70600"
  },
  {
    "text": "access uh the slides using the QR code I have my own newsletter um we will learn",
    "start": "70600",
    "end": "76080"
  },
  {
    "text": "about certain like many many things so it's it's key to like remember them even if you don't immediately understand them",
    "start": "76080",
    "end": "83200"
  },
  {
    "text": "research um look into like an e what is an ebpf program what is a Berkley packet",
    "start": "83200",
    "end": "88840"
  },
  {
    "text": "filter diving into kernel user space spite code compilers um C C++ go and",
    "start": "88840",
    "end": "96240"
  },
  {
    "text": "rust might be related and then going a little more high level with observability def SE up security um",
    "start": "96240",
    "end": "103360"
  },
  {
    "text": "chaos experiments um obviously a little bit of DNS will be involved and then",
    "start": "103360",
    "end": "108680"
  },
  {
    "text": "tying everything together with like security chaos ebpf probes reliability and more ideas uh which should inspire",
    "start": "108680",
    "end": "116520"
  },
  {
    "text": "you to to get more efficient with anything uh production related incidents and whatnot so to get started with um",
    "start": "116520",
    "end": "124920"
  },
  {
    "text": "like observability so we had monitoring now we have observability how would",
    "start": "124920",
    "end": "130440"
  },
  {
    "text": "someone Define observability and my personal definition of that is that I'm saying like modern application",
    "start": "130440",
    "end": "137040"
  },
  {
    "text": "development and deployment with microservices in using Cloud native",
    "start": "137040",
    "end": "142280"
  },
  {
    "text": "technologies that requires a new approach Beyond traditional metrics monitoring um or state-based monitoring",
    "start": "142280",
    "end": "148760"
  },
  {
    "text": "in essence with are collecting a lot of data types A lot of events a lot of signals um so we are able to answer not",
    "start": "148760",
    "end": "155560"
  },
  {
    "text": "the known questions but like what is like the overall state of of the production environment but it's also key",
    "start": "155560",
    "end": "161480"
  },
  {
    "text": "to identify unknown unknowns so for example um a DNS uh response lat latency",
    "start": "161480",
    "end": "168560"
  },
  {
    "text": "in a cicd pipeline actually caus the deployment uh costs to rise",
    "start": "168560",
    "end": "173640"
  },
  {
    "text": "significantly so like the the cloud costs are like I don't know 10,000 or dollars a month um and this is something",
    "start": "173640",
    "end": "182599"
  },
  {
    "text": "you probably wouldn't figure out with like the individual data sources and metrics on their own but combined this",
    "start": "182599",
    "end": "190280"
  },
  {
    "text": "is what describes observability and it it's also a way um to help reduce",
    "start": "190280",
    "end": "195879"
  },
  {
    "text": "infrastructure costs now considering that there are like many different data types involved with observability we",
    "start": "195879",
    "end": "203400"
  },
  {
    "text": "started with metrics um then there were like traces logs and events uh profiling",
    "start": "203400",
    "end": "209400"
  },
  {
    "text": "comes to mind error tracking real user monitoring or inter end monitoring test",
    "start": "209400",
    "end": "214519"
  },
  {
    "text": "reports even can be treated as observability data um and also net flow or network data and there's much much",
    "start": "214519",
    "end": "220879"
  },
  {
    "text": "more which can add to the bigger picture within observability and just to like get give",
    "start": "220879",
    "end": "227000"
  },
  {
    "text": "you an idea what metrics are um it's like a key value with tag stored in a Time series database Pro uh premisus has",
    "start": "227000",
    "end": "235040"
  },
  {
    "text": "become like the the defining the standard in the cloud native uh monitoring and observability Community",
    "start": "235040",
    "end": "242200"
  },
  {
    "text": "it provides a quer language the open metric specification which was also adopted into open Telemetry um and the",
    "start": "242200",
    "end": "249680"
  },
  {
    "text": "ability to like visualize that as a graph um doing forecast Trends and",
    "start": "249680",
    "end": "254840"
  },
  {
    "text": "whatnot now there are different data sources um within observability so like",
    "start": "254840",
    "end": "260040"
  },
  {
    "text": "metrics from a premisis exporter a code instrument say code instrumentation",
    "start": "260040",
    "end": "265320"
  },
  {
    "text": "could be sending traces um potentially like in a kubernetes clust so there's a side car fetching the podt locks and",
    "start": "265320",
    "end": "271479"
  },
  {
    "text": "then sending that to a central storage and everything happens on the user level and this is great um to to some degree",
    "start": "271479",
    "end": "278360"
  },
  {
    "text": "but sometimes we really want to look deeper so like there are more data sources specifically like a CIS call um",
    "start": "278360",
    "end": "285080"
  },
  {
    "text": "Network events uh resource access in in a microservices cluster this would need",
    "start": "285080",
    "end": "291080"
  },
  {
    "text": "a deeper look into the Curel level um so we have more observability data",
    "start": "291080",
    "end": "296759"
  },
  {
    "text": "possibilities even now um is a problem solved or like there is evf and everyone",
    "start": "296759",
    "end": "303639"
  },
  {
    "text": "talks about it it's on the current level but what is it what problem does it solve and by definition um it provides",
    "start": "303639",
    "end": "311160"
  },
  {
    "text": "observability security and networking at the kernel level um which the ebpf doio",
    "start": "311160",
    "end": "317160"
  },
  {
    "text": "website um describes pretty much the thing is the kernel um needs to be",
    "start": "317160",
    "end": "322759"
  },
  {
    "text": "stable so there is like less Innovation within the kernel itself um and the idea",
    "start": "322759",
    "end": "327960"
  },
  {
    "text": "with ebpf was to run ebpf programs as a as an operating system runtime Edition",
    "start": "327960",
    "end": "334680"
  },
  {
    "text": "so it's kind of a an addition to the cernal and you can like execute small",
    "start": "334680",
    "end": "340360"
  },
  {
    "text": "programs in the safe environment um looking into the use cases um for for these like small",
    "start": "340360",
    "end": "348160"
  },
  {
    "text": "programs one of them is high performance networking and load balancing um which is done by pum and others um you can",
    "start": "348160",
    "end": "355319"
  },
  {
    "text": "trace applications what they're like doing on the inside which function calls are being executed it helps with also",
    "start": "355319",
    "end": "361440"
  },
  {
    "text": "helps with performance troubleshooting um different use cases come to mind with like fine grain security observability",
    "start": "361440",
    "end": "368639"
  },
  {
    "text": "or even like something around um application or container runtime security so being able to see which",
    "start": "368639",
    "end": "375440"
  },
  {
    "text": "network connections or container opens or something like that this is all possible um on the current level with an",
    "start": "375440",
    "end": "381960"
  },
  {
    "text": "ebpf program um when provided and developed now an ebpf program itself um",
    "start": "381960",
    "end": "389520"
  },
  {
    "text": "is a little complicated to start with because it currently expects bite code",
    "start": "389520",
    "end": "394560"
  },
  {
    "text": "and nobody writes bite code so I have no idea how how it looks like and the thing",
    "start": "394560",
    "end": "400599"
  },
  {
    "text": "is um we need an abstraction layer for that so um provides a go Library um",
    "start": "400599",
    "end": "406240"
  },
  {
    "text": "there is like um BCC as a tool chain there's BPF trays so a lot of tools and",
    "start": "406240",
    "end": "412160"
  },
  {
    "text": "and names floating around um which provide an abstraction layer in a higher level programming language being able to",
    "start": "412160",
    "end": "419680"
  },
  {
    "text": "like convert it and create bite code for the kernel um this happens in a way that um",
    "start": "419680",
    "end": "426879"
  },
  {
    "text": "the verification happens with just in time compilation from bite code to the machine specific instruction set at the",
    "start": "426879",
    "end": "433759"
  },
  {
    "text": "curent level so this is essentially in in the background the idea behind it um",
    "start": "433759",
    "end": "439960"
  },
  {
    "text": "from a user side it's like oh um I need a lot to learn and this can be quite",
    "start": "439960",
    "end": "445280"
  },
  {
    "text": "overwhelming and for me personally it took me quite some time to really say okay where should I be starting um",
    "start": "445280",
    "end": "452400"
  },
  {
    "text": "because there is like what is the best learning strategy um I started my own research and documented everything on a",
    "start": "452400",
    "end": "458879"
  },
  {
    "text": "knowledge base which I maintain on on o1 wi love um which is linked in the slides",
    "start": "458879",
    "end": "464759"
  },
  {
    "text": "but in essence um at some point everyone was saying well um there Brenton Greg's",
    "start": "464759",
    "end": "470720"
  },
  {
    "text": "um tutorial uh the blog post from from 2019 but it's like it's current it's",
    "start": "470720",
    "end": "476440"
  },
  {
    "text": "accurate um and it provides tutorial and examples for beginners for intermediate",
    "start": "476440",
    "end": "481520"
  },
  {
    "text": "and advanced users and um the best way to get started with is like start with a",
    "start": "481520",
    "end": "487319"
  },
  {
    "text": "Linux virtual machine or on a Linux Linux host um use a Cel greater than",
    "start": "487319",
    "end": "492639"
  },
  {
    "text": "4.17 U which provides access um to to ebpf support um and also on the way of",
    "start": "492639",
    "end": "501120"
  },
  {
    "text": "like learning all these terms and tools and Technologies it's important like to",
    "start": "501120",
    "end": "507199"
  },
  {
    "text": "note them so when you don't really understand what it does write some write",
    "start": "507199",
    "end": "512839"
  },
  {
    "text": "the the term down um and also like think about how would you explain how what it",
    "start": "512839",
    "end": "519080"
  },
  {
    "text": "does when you have like the first success moment in running BPF trace and think about hey this solved my problem",
    "start": "519080",
    "end": "526080"
  },
  {
    "text": "but how would I explain this complex technology to others and like do doing so really helped me understand or even",
    "start": "526080",
    "end": "533519"
  },
  {
    "text": "like verify my knowledge and considering hey I actually was wrong so in essence",
    "start": "533519",
    "end": "538680"
  },
  {
    "text": "it's really it's really a good thing to practice explaining this and this is also why I'm doing this talk today um I",
    "start": "538680",
    "end": "546000"
  },
  {
    "text": "got started with like what looking into the BC BCC tool chain which was",
    "start": "546000",
    "end": "551040"
  },
  {
    "text": "mentioned quite often and um it's also mentioned in Brandon Greg's tutorial so",
    "start": "551040",
    "end": "557040"
  },
  {
    "text": "um I looked into what's available and what are the tools and thought of well something uh similar to like estray um",
    "start": "557040",
    "end": "565200"
  },
  {
    "text": "telling me that a specific binary has been executed um so like XX noop DT",
    "start": "565200",
    "end": "573040"
  },
  {
    "text": "means like Trace um a program or Trace all programs which are actually like um",
    "start": "573040",
    "end": "580399"
  },
  {
    "text": "executing something or executing a binary um and in the first terminal I",
    "start": "580399",
    "end": "586079"
  },
  {
    "text": "ran the command on the second terminal I decided to run some Cur commands um just",
    "start": "586079",
    "end": "591279"
  },
  {
    "text": "to like simulate an outgoing connection as well could could be something like a",
    "start": "591279",
    "end": "597279"
  },
  {
    "text": "malicious actor downloading something which could be an interesting use case for later on in essence um I saw",
    "start": "597279",
    "end": "603200"
  },
  {
    "text": "something working um the commands have been loged s HD was also doing something",
    "start": "603200",
    "end": "608640"
  },
  {
    "text": "um so I was like okay this is my first success moment but like what else is out",
    "start": "608640",
    "end": "613720"
  },
  {
    "text": "there um so I looked into the next tool or platform of framework which was BPF",
    "start": "613720",
    "end": "619360"
  },
  {
    "text": "Trace so I was really like addicted addicted to learning now um because BPF",
    "start": "619360",
    "end": "624760"
  },
  {
    "text": "Trace provides many use cases or many things you can actually like probe or",
    "start": "624760",
    "end": "630079"
  },
  {
    "text": "look at and most obvious like um ethernet traffic but also things like",
    "start": "630079",
    "end": "635240"
  },
  {
    "text": "looking into file systems um and and much much more like getting a better Insight when high high performance",
    "start": "635240",
    "end": "642240"
  },
  {
    "text": "scaling systems are not working and um it provides a high level tracing language so it's not like necessary to",
    "start": "642240",
    "end": "649639"
  },
  {
    "text": "write deep down C code or something um but it's more inspired by dce and others",
    "start": "649639",
    "end": "655600"
  },
  {
    "text": "and it can help with um Ops and this retooling um maybe replacing even",
    "start": "655600",
    "end": "662639"
  },
  {
    "text": "something like EST Trace um because often times it's really hard to remember what all the C tools are doing so with",
    "start": "662639",
    "end": "670600"
  },
  {
    "text": "BPF Trace I thought hey um there is open Snoop um which is able to trace open",
    "start": "670600",
    "end": "676800"
  },
  {
    "text": "Calles and I thought well um I could open a file by myself but what if I",
    "start": "676800",
    "end": "683360"
  },
  {
    "text": "write a quick C program which just like opens a file create it and then closes",
    "start": "683360",
    "end": "689440"
  },
  {
    "text": "it again um in order to see or compile it and then see what um open Snoop is",
    "start": "689440",
    "end": "695480"
  },
  {
    "text": "actually doing so I could write my own code um and then see how the the dppf",
    "start": "695480",
    "end": "700839"
  },
  {
    "text": "tooling is like handling that so in essence um I made this happen compiled",
    "start": "700839",
    "end": "706920"
  },
  {
    "text": "uh compiled the C binary um executed it and then I saw not only that like the ef- chaos. txt was created but also um",
    "start": "706920",
    "end": "715880"
  },
  {
    "text": "the lip C was loaded um by the binary it was like ah this this actually makes",
    "start": "715880",
    "end": "721200"
  },
  {
    "text": "sense because uh the header include for the standard Library um is there and uh",
    "start": "721200",
    "end": "726680"
  },
  {
    "text": "lipc provides that so this was an interesting Insight also in a way of saying ah I can verify what other files",
    "start": "726680",
    "end": "734040"
  },
  {
    "text": "are being opened by this specific binary and maybe see whether um the call to to",
    "start": "734040",
    "end": "741279"
  },
  {
    "text": "MOG or J J MOG or something else is actually happening and um well it got me thinking",
    "start": "741279",
    "end": "749000"
  },
  {
    "text": "what else is out there folks have been mentioning like BCC um but this needs C",
    "start": "749000",
    "end": "755480"
  },
  {
    "text": "and python knowledge or you should know at least like C on the side for the",
    "start": "755480",
    "end": "760519"
  },
  {
    "text": "kernel instrumentation um and Python and LU actually as frontend",
    "start": "760519",
    "end": "766920"
  },
  {
    "text": "um can be used to like run these pro programs so BCC means BPF compiler",
    "start": "766920",
    "end": "773240"
  },
  {
    "text": "collection um I found it pretty interesting because it's the first time I saw really like there's a hook in into",
    "start": "773240",
    "end": "779360"
  },
  {
    "text": "the the K Pro pro SS clone um and whenever this kind of happened it was",
    "start": "779360",
    "end": "785279"
  },
  {
    "text": "printing the the hello world command um and this this really was like",
    "start": "785279",
    "end": "791560"
  },
  {
    "text": "interesting for um Network performance uh Network traffic control and",
    "start": "791560",
    "end": "797240"
  },
  {
    "text": "performance analysis and and whatnot it's like okay I'm bookmarking this now and documenting it now um what else do",
    "start": "797240",
    "end": "805079"
  },
  {
    "text": "we do we have um looking into lip BPF um this got me interested as a CO rust",
    "start": "805079",
    "end": "812120"
  },
  {
    "text": "developer um because the uh the great thing about it is there are bootstrap Dem was available in in a separate",
    "start": "812120",
    "end": "819199"
  },
  {
    "text": "repository um which also provided me with the term X XDP um like measuring",
    "start": "819199",
    "end": "825720"
  },
  {
    "text": "the the Ingress path of packets and I was curious to like how do how would I",
    "start": "825720",
    "end": "830920"
  },
  {
    "text": "be like compiling and installing this could be something like a TCP Dum if I'm able to capture packets um but more in a",
    "start": "830920",
    "end": "838519"
  },
  {
    "text": "in in a FAS or in an efficient way um so I tried compiling um the uh the tools um",
    "start": "838519",
    "end": "846959"
  },
  {
    "text": "try to tried several things like is it the network interface name is it the",
    "start": "846959",
    "end": "852360"
  },
  {
    "text": "network interface ID um and after a while I was able to",
    "start": "852360",
    "end": "858920"
  },
  {
    "text": "actually see the package package size being captured um and sent um sent for",
    "start": "858920",
    "end": "864440"
  },
  {
    "text": "example by System du resolve uh process and also I file the C um just to verify it's it's actually",
    "start": "864440",
    "end": "871560"
  },
  {
    "text": "doing something um the slides provide all the instructions how to like compil",
    "start": "871560",
    "end": "877120"
  },
  {
    "text": "that and I've also linked um uh a demo project at the end where everything is documented so you can reproduce What I I",
    "start": "877120",
    "end": "885000"
  },
  {
    "text": "was doing back then now considering that these are all great tools um what if I",
    "start": "885000",
    "end": "890600"
  },
  {
    "text": "want to write my own ebpf program so what is like the development steps to get going and learning development is is",
    "start": "890600",
    "end": "900000"
  },
  {
    "text": "similar to like learning ebpf on its own um but I would recommend think about a use case um",
    "start": "900000",
    "end": "907199"
  },
  {
    "text": "which is either fun or which helps um solve a production problem so like think",
    "start": "907199",
    "end": "912360"
  },
  {
    "text": "about an s or def Ops use case um like program is starting or exiting there is",
    "start": "912360",
    "end": "917600"
  },
  {
    "text": "like control groups the TCP sessions network interfaces something where you",
    "start": "917600",
    "end": "923079"
  },
  {
    "text": "can easily see something um or verify specific values of whatnot um",
    "start": "923079",
    "end": "930240"
  },
  {
    "text": "then it's um required to select a compiler um because there is like llvm",
    "start": "930240",
    "end": "937839"
  },
  {
    "text": "and um even GCC in version 10 as far as I know um supports like um compiling the",
    "start": "937839",
    "end": "947079"
  },
  {
    "text": "ebpf program or the high level code into um an ebpf program within the bite code",
    "start": "947079",
    "end": "953880"
  },
  {
    "text": "and we don't need to actually worry about anything like what is bite code in the back in the background now um for",
    "start": "953880",
    "end": "960000"
  },
  {
    "text": "specific libraries it's recommended to know go rust or cc++ in the basics or",
    "start": "960000",
    "end": "967480"
  },
  {
    "text": "maybe I would say maybe probably intermediate or Advanced knowledge um is required to some degree so um all the",
    "start": "967480",
    "end": "974720"
  },
  {
    "text": "libraries provide great examples um how to get started documentation but",
    "start": "974720",
    "end": "979839"
  },
  {
    "text": "sometimes it's really like um you should know the language to really understand what's what is the next step or what is",
    "start": "979839",
    "end": "986560"
  },
  {
    "text": "like the design pattern being used in the implementation um for once I looked into",
    "start": "986560",
    "end": "992800"
  },
  {
    "text": "the dyum go ebpf Library um which was interesting because it also provided",
    "start": "992800",
    "end": "998959"
  },
  {
    "text": "more use case examples so actually like cloning the the repository um allowed to",
    "start": "998959",
    "end": "1005519"
  },
  {
    "text": "navigate into the examples path and then run the xtp measure ring again um but in",
    "start": "1005519",
    "end": "1013440"
  },
  {
    "text": "this case for example I I saw that like it's storing um the network trafficing",
    "start": "1013440",
    "end": "1019680"
  },
  {
    "text": "so called Maps so it's like a persistent storage within within ebpf um being able to see hey this IP",
    "start": "1019680",
    "end": "1026798"
  },
  {
    "text": "address was sending this many packets and so on now um there is more with um",
    "start": "1026799",
    "end": "1034000"
  },
  {
    "text": "theum go Library so like you from the examples you can attach to program the c",
    "start": "1034000",
    "end": "1039199"
  },
  {
    "text": "groups and again like the network interfaces which is a great way to start",
    "start": "1039199",
    "end": "1044360"
  },
  {
    "text": "um for rust I've been looking into A- RS which is a rust developer tool chain so",
    "start": "1044360",
    "end": "1050840"
  },
  {
    "text": "like anything you know about rust can just continue using it and use cargo to",
    "start": "1050840",
    "end": "1056679"
  },
  {
    "text": "build um and even like run um the uh the",
    "start": "1056679",
    "end": "1062080"
  },
  {
    "text": "examples there was a book tutorial available online which is fun to learn and look into um and for example the the",
    "start": "1062080",
    "end": "1069880"
  },
  {
    "text": "xtp hello um program was sparking my interest again um just to see hey this",
    "start": "1069880",
    "end": "1075799"
  },
  {
    "text": "is like how this example for measuring Andric traffic um is being implemented",
    "start": "1075799",
    "end": "1081000"
  },
  {
    "text": "um the most interesting part for me was like in production um Parker is like um",
    "start": "1081000",
    "end": "1087320"
  },
  {
    "text": "a tool or an agent for continuous profiling from Polar signals and um this",
    "start": "1087320",
    "end": "1092960"
  },
  {
    "text": "is actually using I um and ebpf for like magic uh function call stack unwinding",
    "start": "1092960",
    "end": "1100080"
  },
  {
    "text": "and other things in different languages using evf um and using using it in Rust",
    "start": "1100080",
    "end": "1106440"
  },
  {
    "text": "because it's more memory safe or that's better memory safety than like in raw C code which is quite interesting and the",
    "start": "1106440",
    "end": "1113240"
  },
  {
    "text": "cubec con uh Europe talk and all sing resources which are linked here are super interesting to learn as",
    "start": "1113240",
    "end": "1119960"
  },
  {
    "text": "well now considering that probably we don't want to like get started",
    "start": "1119960",
    "end": "1125640"
  },
  {
    "text": "immediately with developing our own use cases and reinvent the whe because someone else actually thought about hey",
    "start": "1125640",
    "end": "1132360"
  },
  {
    "text": "ebpf debugging and troubleshooting production um we should be building something and people have been like",
    "start": "1132360",
    "end": "1138799"
  },
  {
    "text": "looking into this already um I think it's important to like kind of separate or create an overview for different use",
    "start": "1138799",
    "end": "1145720"
  },
  {
    "text": "cases so considering that we think about observability um which is often the case",
    "start": "1145720",
    "end": "1151480"
  },
  {
    "text": "in a distributed kubernetes cluster or somewhere else there is um actually like a premisus exporter using ebpf there are",
    "start": "1151480",
    "end": "1158880"
  },
  {
    "text": "open Telemetry collectors collecting metrics from different ways which we will look into a bit um a different",
    "start": "1158880",
    "end": "1166000"
  },
  {
    "text": "example is for example specifically for developers and auto instrumentation um when something is",
    "start": "1166000",
    "end": "1172559"
  },
  {
    "text": "deployed in a kubernetes cluster pixie is an example for that um more on the",
    "start": "1172559",
    "end": "1177760"
  },
  {
    "text": "upsite I found coot um which has an interesting way of implementing service",
    "start": "1177760",
    "end": "1183600"
  },
  {
    "text": "Maps using EF and providing General kubernetes observability um and last but not least",
    "start": "1183600",
    "end": "1190480"
  },
  {
    "text": "I've mentioned already Parker for continuous profiling um so these are like some some tools it's obviously not",
    "start": "1190480",
    "end": "1196919"
  },
  {
    "text": "complete um so the the ecosystem or in community is growing fast um in in 2023",
    "start": "1196919",
    "end": "1204480"
  },
  {
    "text": "but it's important to like keep this in mind um looking on the security end on the on the security side you can see",
    "start": "1204480",
    "end": "1212039"
  },
  {
    "text": "like tools like cium for network connectivity uh security and observability most recently tetragon was",
    "start": "1212039",
    "end": "1219720"
  },
  {
    "text": "released for runtime security enforcement um specifically around like",
    "start": "1219720",
    "end": "1225679"
  },
  {
    "text": "um awarding that an attacker can access a file or specific other things um Tracy",
    "start": "1225679",
    "end": "1230840"
  },
  {
    "text": "on the other side also provides grun time security and forensics um we will see in a bit how how to hunt a root kit",
    "start": "1230840",
    "end": "1238440"
  },
  {
    "text": "um and I think one of the most mature or even I would say like the most mature um",
    "start": "1238440",
    "end": "1244600"
  },
  {
    "text": "tool is a kubernetes threat engine threat detection engine called Falco um which provides different use cases also",
    "start": "1244600",
    "end": "1251320"
  },
  {
    "text": "to inspect what containers are doing um and the teams at gitlab have been inventing the package Hunter which does",
    "start": "1251320",
    "end": "1257760"
  },
  {
    "text": "um of the dependency scanning using Falco just by installing a dependency in",
    "start": "1257760",
    "end": "1263600"
  },
  {
    "text": "a container and then seeing whether it calls home or download some malicious software and whatnot so it's pretty",
    "start": "1263600",
    "end": "1269039"
  },
  {
    "text": "interesting space and actually then knowing that DPF is used in the background um now when we consider the",
    "start": "1269039",
    "end": "1278360"
  },
  {
    "text": "third use case or the third area I'm thinking of like for S and devops what",
    "start": "1278360",
    "end": "1283679"
  },
  {
    "text": "tools are out there what what could be helpful for ebpf um my found Inspector",
    "start": "1283679",
    "end": "1288840"
  },
  {
    "text": "Gadget which is a collection of ebpf based gadgets to debug and inspect",
    "start": "1288840",
    "end": "1294279"
  },
  {
    "text": "kubernetes apps and resources and there's a wide range of tools and things um so like Trace outgoing connections",
    "start": "1294279",
    "end": "1302080"
  },
  {
    "text": "DNS um and and even more so it's like install it try it out and and get to see",
    "start": "1302080",
    "end": "1309159"
  },
  {
    "text": "what what it what it's capable of um another thought or another tool I found was ketta I think I pronounced it",
    "start": "1309159",
    "end": "1315640"
  },
  {
    "text": "correctly um for instant cub kubernetes service dependency Maps which also looks pretty pretty awesome um to get a visual",
    "start": "1315640",
    "end": "1322720"
  },
  {
    "text": "picture of what is actually going on in the kubernetes cluster last but not least um I was thinking of like hey an",
    "start": "1322720",
    "end": "1329400"
  },
  {
    "text": "evf program needs to be distributed somehow so like package it tab zip file",
    "start": "1329400",
    "end": "1334440"
  },
  {
    "text": "whatever um and Bumblebee actually goes in the direction of building running and distributing EVPs programs using oci",
    "start": "1334440",
    "end": "1342320"
  },
  {
    "text": "images so you actually like use a container image to distribute um thef",
    "start": "1342320",
    "end": "1347679"
  },
  {
    "text": "program which is a nice isolated and way and can also be tested and automated now",
    "start": "1347679",
    "end": "1354400"
  },
  {
    "text": "considering that this is all awesome um we also need to store all the events we",
    "start": "1354400",
    "end": "1360720"
  },
  {
    "text": "are collecting so changing the topic from like collecting uh the data or",
    "start": "1360720",
    "end": "1366480"
  },
  {
    "text": "collecting the events to more like storage with all things observability so",
    "start": "1366480",
    "end": "1372200"
  },
  {
    "text": "we have so many different storage types over time there is like a Time series database there's locks data databases",
    "start": "1372200",
    "end": "1378400"
  },
  {
    "text": "traces databases maybe an ebpf event database or something else like Network",
    "start": "1378400",
    "end": "1384159"
  },
  {
    "text": "traffic net flow database everything all together maybe it's time to create a",
    "start": "1384159",
    "end": "1390159"
  },
  {
    "text": "unified observability data storage um which is something our teams are doing at gitlab but also like others are doing",
    "start": "1390159",
    "end": "1396760"
  },
  {
    "text": "that as well so it's um probably something to consider in the future now",
    "start": "1396760",
    "end": "1403240"
  },
  {
    "text": "for the Storage storage it itself it's like what is what should be the best",
    "start": "1403240",
    "end": "1408600"
  },
  {
    "text": "retention period so how long do I need this data is now the incident that got resolved three days ago um do I really",
    "start": "1408600",
    "end": "1415440"
  },
  {
    "text": "need to keep the data for future SLA reporting um or is it just good well for",
    "start": "1415440",
    "end": "1422200"
  },
  {
    "text": "uh troubleshooting a life incident um another question is like do I really",
    "start": "1422200",
    "end": "1427400"
  },
  {
    "text": "want to self host everything and then like scale it and invest money to buy new hardware buy new resources or would",
    "start": "1427400",
    "end": "1434799"
  },
  {
    "text": "I be just uploading everything to S provider and then pay for for the amount of traffic or data being being pushed or",
    "start": "1434799",
    "end": "1441000"
  },
  {
    "text": "pulled um coming to the over question like which data do I really need um to",
    "start": "1441000",
    "end": "1446520"
  },
  {
    "text": "uh troubleshoot an incident um debu something um also considering a way of like we want to become more efficient",
    "start": "1446520",
    "end": "1453039"
  },
  {
    "text": "and also more cost efficient we need sort of like Capac capacity planning forecasting trending um the teams",
    "start": "1453039",
    "end": "1460480"
  },
  {
    "text": "there's three teams or infrastructure teams at gitlab have been creating tamland which provides that can also be",
    "start": "1460480",
    "end": "1466200"
  },
  {
    "text": "used in a way of like estimating um the the storage needed by the",
    "start": "1466200",
    "end": "1471960"
  },
  {
    "text": "observability systems um by using observability metrics um which which can",
    "start": "1471960",
    "end": "1477440"
  },
  {
    "text": "be helpful um to really like say well our growth of observability data is like",
    "start": "1477440",
    "end": "1482640"
  },
  {
    "text": "a paby next year do we really need that data um in order to reduce costs now",
    "start": "1482640",
    "end": "1490159"
  },
  {
    "text": "considering that observability also means like we have we're doing something with the data we're defining alert",
    "start": "1490159",
    "end": "1497000"
  },
  {
    "text": "thresholds with we have dashboards we want to reduce the the meantime to response um because like an alert where",
    "start": "1497000",
    "end": "1504840"
  },
  {
    "text": "an alert is fired when when a threshold is violated so we want to do something about it and um obviously like also",
    "start": "1504840",
    "end": "1512240"
  },
  {
    "text": "correlate analyze and suppress all these alerts because when when too many alerts are being fired it's not fun debugging",
    "start": "1512240",
    "end": "1518960"
  },
  {
    "text": "at 3:00 a.m. in the morning um and also if there are new possibilities with ebpf",
    "start": "1518960",
    "end": "1524520"
  },
  {
    "text": "event data this would also be an interesting use case to actually add that now considering that we also have",
    "start": "1524520",
    "end": "1530919"
  },
  {
    "text": "dashboards we need to like do something with the data so uh creating summaries",
    "start": "1530919",
    "end": "1536200"
  },
  {
    "text": "and correlations providing the overall health State reducing the meantime to response and also considering like",
    "start": "1536200",
    "end": "1543000"
  },
  {
    "text": "forecast and Trends the thing is if the dashboard is",
    "start": "1543000",
    "end": "1548240"
  },
  {
    "text": "green and everything is hey this doesn't prove anything so all okay is like how",
    "start": "1548240",
    "end": "1553799"
  },
  {
    "text": "do how do I like verify reliability and all the the tools and dashboards and",
    "start": "1553799",
    "end": "1558919"
  },
  {
    "text": "whatnot which brings me to chaos engineering um so we can break things in a controlled way in order to verify",
    "start": "1558919",
    "end": "1566080"
  },
  {
    "text": "service level objectives alerts and dashboards um and for that using chaos Frameworks and experiments um the",
    "start": "1566080",
    "end": "1573320"
  },
  {
    "text": "interesting thing is like in the in the example before that was chaos mesh but there was like different chaos",
    "start": "1573320",
    "end": "1579320"
  },
  {
    "text": "Frameworks available which is uh chaos toolkit which can be run on the CLI for",
    "start": "1579320",
    "end": "1584679"
  },
  {
    "text": "example um providing extensions with Pixie can be integrated",
    "start": "1584679",
    "end": "1590200"
  },
  {
    "text": "in cicd um you can develop your own extensions so it's like a wide variety",
    "start": "1590200",
    "end": "1595399"
  },
  {
    "text": "of ensuring I can break things in my environment and then verify that all the",
    "start": "1595399",
    "end": "1601320"
  },
  {
    "text": "the data collection um which happens with ebpf also um is actually like in a",
    "start": "1601320",
    "end": "1607559"
  },
  {
    "text": "in a good shape now um considering that chaos engineering isn't just like",
    "start": "1607559",
    "end": "1614440"
  },
  {
    "text": "break things and then observability dashboards are r um but it's also a way of like inject thinking of traditional",
    "start": "1614440",
    "end": "1621840"
  },
  {
    "text": "going Beyond traditional chaos engineering injecting unexpected behavior um doing security testing um",
    "start": "1621840",
    "end": "1627840"
  },
  {
    "text": "even like hard learning software and doing some fast testing which could also be seen or defined as a chaos experiment",
    "start": "1627840",
    "end": "1633919"
  },
  {
    "text": "um which is helpful knowledge um by looking into all the things which which",
    "start": "1633919",
    "end": "1639559"
  },
  {
    "text": "are helpful because um we will be talking about specific",
    "start": "1639559",
    "end": "1645320"
  },
  {
    "text": "tools um in the next few minutes um and we also want to break them to verify that they actually working um and what",
    "start": "1645320",
    "end": "1652520"
  },
  {
    "text": "are the weaknesses what are like the the edge cases which are not yet implemented and not yet solved um so let's consider",
    "start": "1652520",
    "end": "1661039"
  },
  {
    "text": "some some ideas and some use cases specifically tied to observability so for like golden signals um it's rather",
    "start": "1661039",
    "end": "1669559"
  },
  {
    "text": "easy to like create chaos experiments or use chaos experiments for latency traffic errors and",
    "start": "1669559",
    "end": "1675840"
  },
  {
    "text": "situations situation there are tools and and examples already available so this",
    "start": "1675840",
    "end": "1682000"
  },
  {
    "text": "can be verified um considering that we might be using um",
    "start": "1682000",
    "end": "1688440"
  },
  {
    "text": "the ebpf to premisus exporter we can collect metrics um the exporter uses lip",
    "start": "1688440",
    "end": "1695120"
  },
  {
    "text": "BPF supports uh core which is like you compile it once and can literally run it",
    "start": "1695120",
    "end": "1702080"
  },
  {
    "text": "run it with every Curel so it's a good way to to run it um on different systems",
    "start": "1702080",
    "end": "1708039"
  },
  {
    "text": "I did it using a container um specifying in the uh in the box at the bottom with",
    "start": "1708039",
    "end": "1714519"
  },
  {
    "text": "the command the different um configuration names which are available um like using um looking for example the",
    "start": "1714519",
    "end": "1722399"
  },
  {
    "text": "T tcps backlog window and so on so this is really like helpful to look inside",
    "start": "1722399",
    "end": "1728080"
  },
  {
    "text": "thinking about like how to verify this is actually working um at some chaos experiments which is like CPU stress",
    "start": "1728080",
    "end": "1734880"
  },
  {
    "text": "testing IO stress testing memory stress press testing adding TCP delays um maybe",
    "start": "1734880",
    "end": "1741240"
  },
  {
    "text": "even doing a netwk attack or something in order to see that the metrics that are being collected with this",
    "start": "1741240",
    "end": "1747480"
  },
  {
    "text": "export are not like all the all times the same but you can like see the spikes",
    "start": "1747480",
    "end": "1752679"
  },
  {
    "text": "see the behavior of the system um and then also get a get an Insight whether the tool is working or not now um",
    "start": "1752679",
    "end": "1760600"
  },
  {
    "text": "looking into a more like a different example which I mentioned before around like how",
    "start": "1760600",
    "end": "1766960"
  },
  {
    "text": "develop can benefit from kubernetes observability um where pixie is one of",
    "start": "1766960",
    "end": "1773320"
  },
  {
    "text": "the tools provides Auto instrumentation for a deployed application and there's also a way to like in um get an Insight",
    "start": "1773320",
    "end": "1780799"
  },
  {
    "text": "with service Maps which which can be a great way to visualize things um and it",
    "start": "1780799",
    "end": "1786679"
  },
  {
    "text": "got me thinking of hey um if there is like a service map um how does this",
    "start": "1786679",
    "end": "1793000"
  },
  {
    "text": "change when there is an incident or when there's like something broken so stress testing this again or even like running",
    "start": "1793000",
    "end": "1799640"
  },
  {
    "text": "a network attack to to see if the service map changes or to see if like the um the application inside the traces",
    "start": "1799640",
    "end": "1808039"
  },
  {
    "text": "are taking longer there might be some RIS conditions some Deadlocks something something weird going on which could be",
    "start": "1808039",
    "end": "1814720"
  },
  {
    "text": "a production incident and then we can see hey the tool is actually working and providing the insert we actually need um",
    "start": "1814720",
    "end": "1820960"
  },
  {
    "text": "and again this is all using ebpf in the background um for kubernetes",
    "start": "1820960",
    "end": "1826799"
  },
  {
    "text": "troubleshoot I've mentioned like there is Inspector Gadget so we can trace DNS um and even",
    "start": "1826799",
    "end": "1832320"
  },
  {
    "text": "more um within the kubernetes cluster um it's not bound to kubernetes only um",
    "start": "1832320",
    "end": "1839320"
  },
  {
    "text": "there's also like a local CLI which can be run in in a virtual machine on Linux",
    "start": "1839320",
    "end": "1845840"
  },
  {
    "text": "um which is a great way to like get an Insight what are the DNS requests doing",
    "start": "1845840",
    "end": "1850960"
  },
  {
    "text": "is there is there something like blocked um returning anex domain or something",
    "start": "1850960",
    "end": "1856600"
  },
  {
    "text": "like that and for chaos experiments like verifying that these tools are actually providing the expected um results like inject some",
    "start": "1856600",
    "end": "1865200"
  },
  {
    "text": "DNS chos which provides like random results or index domain um results think",
    "start": "1865200",
    "end": "1871200"
  },
  {
    "text": "about like breaking the network or doing even like a network DS attack traffic",
    "start": "1871200",
    "end": "1876440"
  },
  {
    "text": "attack and out of memory kills certain other things like this is really like a",
    "start": "1876440",
    "end": "1881519"
  },
  {
    "text": "helpful tool chain um but in order to verify it's working we need to break it and this is why I'm always thinking of",
    "start": "1881519",
    "end": "1888720"
  },
  {
    "text": "like test it with chaos experiments or chaos engineering um speaking of which",
    "start": "1888720",
    "end": "1894919"
  },
  {
    "text": "um for kubernetes observability it's also great to have service Maps or getting an overview which container is",
    "start": "1894919",
    "end": "1902720"
  },
  {
    "text": "like talking to another container which cor provides us with like the the using",
    "start": "1902720",
    "end": "1908799"
  },
  {
    "text": "ebpf for creating network service Maps which it's a super interesting feature in my opinion um because it also",
    "start": "1908799",
    "end": "1916360"
  },
  {
    "text": "provides an Insight of of like what is the traffic going on the CPU usage on the nodes and so on um and if we break",
    "start": "1916360",
    "end": "1924440"
  },
  {
    "text": "TCB connections or increase the network traffic um or even like stress the memory how would this graph behaving um",
    "start": "1924440",
    "end": "1932159"
  },
  {
    "text": "or what is like the the actual qet cluster doing um which is a way to like",
    "start": "1932159",
    "end": "1938480"
  },
  {
    "text": "also verify that the tool is actually providing um the the solution for use",
    "start": "1938480",
    "end": "1945159"
  },
  {
    "text": "cases um it's working reli um and we can like use it in production in the future and from time to time",
    "start": "1945159",
    "end": "1952240"
  },
  {
    "text": "again run the chaos experiment to really verify that the tool is still working after an update or something like",
    "start": "1952240",
    "end": "1958720"
  },
  {
    "text": "that um yeah lots lots of ideas lots of things to consider um when looking into",
    "start": "1958720",
    "end": "1965679"
  },
  {
    "text": "profiling and this is an example with Parker um we do so Parker uses ebpf um",
    "start": "1965679",
    "end": "1972440"
  },
  {
    "text": "to Auto instrument the code um which means like function call um stack un",
    "start": "1972440",
    "end": "1979320"
  },
  {
    "text": "stack debug symbol unwinding I must have to admit I know a little bit of this but it's it's been quite a while I looked",
    "start": "1979320",
    "end": "1986799"
  },
  {
    "text": "into it last um but it's really interesting that it's like Auto instrumentation and I as a developer",
    "start": "1986799",
    "end": "1992799"
  },
  {
    "text": "don't need to take any action on on adding this or understanding uh how perf",
    "start": "1992799",
    "end": "1998120"
  },
  {
    "text": "calls work which I cannot remember um the most interesting part here is like",
    "start": "1998120",
    "end": "2003639"
  },
  {
    "text": "really that the agent provides all this functionality um there is a demo available and the the",
    "start": "2003639",
    "end": "2011279"
  },
  {
    "text": "the polar signal Forks also started e learning series called L profile which I",
    "start": "2011279",
    "end": "2018399"
  },
  {
    "text": "where they are actually like profiling kubernetes um and and then looking into how to optimizing it um which can be a",
    "start": "2018399",
    "end": "2026760"
  },
  {
    "text": "use case for for your projects as well but in essence it's like continuous profiling is is on the rise also in",
    "start": "2026760",
    "end": "2035279"
  },
  {
    "text": "2023 and the idea is how to verify that it's like that the behavior is there",
    "start": "2035279",
    "end": "2041600"
  },
  {
    "text": "that we can like simulate a spike with cold traces um the function calls are taking too long we maybe want to unve a",
    "start": "2041600",
    "end": "2048679"
  },
  {
    "text": "race condition or lock in the software um so we can run CPU memory stress tests",
    "start": "2048679",
    "end": "2055040"
  },
  {
    "text": "to see hey the The Continuous profiling results are actually showing um that",
    "start": "2055040",
    "end": "2060320"
  },
  {
    "text": "this under CPU stress everything is like behaving as expected or maybe there it",
    "start": "2060320",
    "end": "2065919"
  },
  {
    "text": "is not um so this is really like a runtime verification um using some chaos",
    "start": "2065919",
    "end": "2072358"
  },
  {
    "text": "experiments with continuous profiling now considering that open",
    "start": "2072359",
    "end": "2078200"
  },
  {
    "text": "Telemetry moved Beyond traces um also with like adding support for metrics logs and different other observability",
    "start": "2078200",
    "end": "2085638"
  },
  {
    "text": "data types in the future um there is a project which implements ebpf in open telet to collect lowlevel metrics",
    "start": "2085639",
    "end": "2093440"
  },
  {
    "text": "directly from the kernel um from a kubernetes CL cluster or even like from",
    "start": "2093440",
    "end": "2099040"
  },
  {
    "text": "a cloud collector which I think H AWS and gcp are currently supported um the",
    "start": "2099040",
    "end": "2105040"
  },
  {
    "text": "idea really is to send that to reducer which I think is like an injesture allowing to to modify the data or um",
    "start": "2105040",
    "end": "2112920"
  },
  {
    "text": "sanitize it and then send it or then provide it either as a scrape Target for metric uh in premisus or send it to the",
    "start": "2112920",
    "end": "2120720"
  },
  {
    "text": "open telemetric collector which then can um forward the metrics and do more with",
    "start": "2120720",
    "end": "2125760"
  },
  {
    "text": "that now now again in order to verify that the data collection is usable at",
    "start": "2125760",
    "end": "2131359"
  },
  {
    "text": "some chaos experiments when testing the tool think about like CP memory and also Network attacks to to really see oh the",
    "start": "2131359",
    "end": "2139240"
  },
  {
    "text": "data being collected is actually like something valid or something useful in in this",
    "start": "2139240",
    "end": "2145079"
  },
  {
    "text": "regard last but not least um I think DNS is my favorite topic um there is a",
    "start": "2145079",
    "end": "2150560"
  },
  {
    "text": "thorough guide on DNS monitoring with ebpf which has a lot of source code and",
    "start": "2150560",
    "end": "2156079"
  },
  {
    "text": "examples to learn learn um and in essence to test that again is like similar to hey let's break DNS um at",
    "start": "2156079",
    "end": "2163160"
  },
  {
    "text": "some DNS chaos to the tests um which I think is always a great idea because",
    "start": "2163160",
    "end": "2170119"
  },
  {
    "text": "it's always DNS as a problem whether when a chaos experimental in production now I've talked a lot about",
    "start": "2170119",
    "end": "2176920"
  },
  {
    "text": "observability chaos with ebpf now let's add some security chaos um which is",
    "start": "2176920",
    "end": "2182839"
  },
  {
    "text": "pretty interesting um especially because we want to verify security policies with",
    "start": "2182839",
    "end": "2192200"
  },
  {
    "text": "with everything like going on so some adding thinking about how to break things uh we want to have for example",
    "start": "2192200",
    "end": "2199000"
  },
  {
    "text": "inject behavioral data that simulates privilege escalation um or another idea",
    "start": "2199000",
    "end": "2204480"
  },
  {
    "text": "could be like there is M DET tendency with data separation and we want to simulate an access to a sector of a data",
    "start": "2204480",
    "end": "2211560"
  },
  {
    "text": "set we shouldn't have access to um which brought me like to idea of hey what are",
    "start": "2211560",
    "end": "2218400"
  },
  {
    "text": "the tools out there like promising kind of all these things and I read a lot about Tracy from mic security um which",
    "start": "2218400",
    "end": "2227480"
  },
  {
    "text": "had some interesting um features described in a blog post and also in a",
    "start": "2227480",
    "end": "2232560"
  },
  {
    "text": "recording um saying it can detect csol hooking and in the beginning I wasn't",
    "start": "2232560",
    "end": "2238319"
  },
  {
    "text": "really sure what the csol hook means um but then i' I read on and thought hey this is actually like a rootkit which",
    "start": "2238319",
    "end": "2245319"
  },
  {
    "text": "can be installed on Linux and then um it kind of hooks the sus call and um",
    "start": "2245319",
    "end": "2250760"
  },
  {
    "text": "overwrites the kill command or the get dance command which I think is for directory listing um or could like",
    "start": "2250760",
    "end": "2256640"
  },
  {
    "text": "overwrite any um CIS call um in order to do anything malicious um or just read um",
    "start": "2256640",
    "end": "2264280"
  },
  {
    "text": "password credentials or do Bitcoin mining or whatever um so in in in",
    "start": "2264280",
    "end": "2269520"
  },
  {
    "text": "essence I was curious of saying well how can Tracy detect um a root kit",
    "start": "2269520",
    "end": "2276280"
  },
  {
    "text": "and this this was the first time I I actually um installed a rootkit on a",
    "start": "2276280",
    "end": "2281400"
  },
  {
    "text": "Linux virtual machine so on a fresh Linux virtual machine not on a production environment um and I was able",
    "start": "2281400",
    "end": "2288520"
  },
  {
    "text": "to like inject the rootkit um and then run Tracy with some like modifications",
    "start": "2288520",
    "end": "2294839"
  },
  {
    "text": "to The Container command shown in in in the Box here um to really see oh there's",
    "start": "2294839",
    "end": "2301319"
  },
  {
    "text": "actually a SS call being hooked I mean it's or written or hidden in in the screenshot but it shows something weird",
    "start": "2301319",
    "end": "2308160"
  },
  {
    "text": "is going on in the system um it's was like okay this this proves to be useful",
    "start": "2308160",
    "end": "2314640"
  },
  {
    "text": "now considering that like I also wanted to test different tools um I looked into",
    "start": "2314640",
    "end": "2320920"
  },
  {
    "text": "celium tetragon which provides its own instruction layer and security policy uh domain specific language um and I",
    "start": "2320920",
    "end": "2328800"
  },
  {
    "text": "thought of well this could also be used for",
    "start": "2328800",
    "end": "2333920"
  },
  {
    "text": "detecting a rootkit so like simulating a root kit as a car experiment um or like",
    "start": "2333920",
    "end": "2339440"
  },
  {
    "text": "simulate file access that match certain policies and after running tetragon in a container I was able to also see what",
    "start": "2339440",
    "end": "2347400"
  },
  {
    "text": "the root kid was doing because it provided me with the inside of hey there was like some strange binaries being",
    "start": "2347400",
    "end": "2353520"
  },
  {
    "text": "created which then runs some commands which are calling home opening a port um",
    "start": "2353520",
    "end": "2359760"
  },
  {
    "text": "and yeah some like fancy things um potentially the the the virtual machine",
    "start": "2359760",
    "end": "2366000"
  },
  {
    "text": "is like compromised and um we shouldn't be using it but it was really like an interesting um use case now this brought",
    "start": "2366000",
    "end": "2374920"
  },
  {
    "text": "me got me to the idea could we do a chaos experiment which is like a rootkit simulation so um like something which",
    "start": "2374920",
    "end": "2383240"
  },
  {
    "text": "hooks a sus call but does nothing not sure if this actually is possible um but",
    "start": "2383240",
    "end": "2389359"
  },
  {
    "text": "it would be an interesting way to do some like red team pen testing in production um trying to verify that for",
    "start": "2389359",
    "end": "2397200"
  },
  {
    "text": "example the policies with tetragon and Tracy actually working um so impersonating the attacker again um",
    "start": "2397200",
    "end": "2404440"
  },
  {
    "text": "installing a full routine production is real unwanted chaos you don't want to do that um trust me I deleted the virtual",
    "start": "2404440",
    "end": "2411160"
  },
  {
    "text": "machine after after like doing the the demos or the the ideas for this talk and",
    "start": "2411160",
    "end": "2418079"
  },
  {
    "text": "documented all the steps to do it again um which should be fine then now um considering that that there",
    "start": "2418079",
    "end": "2427640"
  },
  {
    "text": "is more to that so what is like the idea behind combining ebpf with chos",
    "start": "2427640",
    "end": "2433280"
  },
  {
    "text": "engineering and verifying that everything is working um I also had the idea of around like hey we could be",
    "start": "2433280",
    "end": "2440400"
  },
  {
    "text": "using ebpf on the Kernel level to inject some chaos so change assist call um",
    "start": "2440400",
    "end": "2446920"
  },
  {
    "text": "change to responses um modify a DNS request um into a different response",
    "start": "2446920",
    "end": "2453400"
  },
  {
    "text": "maybe even access protected data and um try to protect protect it um so like",
    "start": "2453400",
    "end": "2460200"
  },
  {
    "text": "when I thought about this um I also saw um my friend Jason ye um having like a",
    "start": "2460200",
    "end": "2466599"
  },
  {
    "text": "similar idea um using using ebpf to collect everything and then also think",
    "start": "2466599",
    "end": "2473200"
  },
  {
    "text": "about like um how does this help our chaos engineering work in that regard",
    "start": "2473200",
    "end": "2478960"
  },
  {
    "text": "and there's also a great research paper which I linked at the bottom for maximizing error injection realism for",
    "start": "2478960",
    "end": "2485400"
  },
  {
    "text": "chaos engine resst system cause which is called the febe F project um which",
    "start": "2485400",
    "end": "2491760"
  },
  {
    "text": "brings more ideas in into this area thinking of a real world example",
    "start": "2491760",
    "end": "2497680"
  },
  {
    "text": "with chaos mesh and DNS chaos um it's using um a plugin that implements the",
    "start": "2497680",
    "end": "2502720"
  },
  {
    "text": "kubernetes DNS based service this cover spe um and it needs quns um so what if",
    "start": "2502720",
    "end": "2509119"
  },
  {
    "text": "we could be like changing that ebpf program that intercepts the DNS request and then does some chaos engineering",
    "start": "2509119",
    "end": "2516760"
  },
  {
    "text": "um and while looking into this um and researching a little bit I found Express",
    "start": "2516760",
    "end": "2522200"
  },
  {
    "text": "DNS um as an experimental DNS server which is written in BPF um which has a",
    "start": "2522200",
    "end": "2528400"
  },
  {
    "text": "user space application where you can like add DNS records or modify DNS records into a BPF map um which is then",
    "start": "2528400",
    "end": "2535640"
  },
  {
    "text": "read directly by the module um or by the by the ebpf program and I thought oh H",
    "start": "2535640",
    "end": "2541640"
  },
  {
    "text": "this would be actually an interesting way um to do chaos engineering 2 2.0",
    "start": "2541640",
    "end": "2547559"
  },
  {
    "text": "something like that um to being able to modify DNS requests on the Fly um and",
    "start": "2547559",
    "end": "2555960"
  },
  {
    "text": "adding some some high performance um DNS chaos engineering to production",
    "start": "2555960",
    "end": "2562839"
  },
  {
    "text": "environments now another idea around this was like ebpf probes something I'm",
    "start": "2562839",
    "end": "2569640"
  },
  {
    "text": "I thought of this could be a feasable term for a chaos experiment um we can",
    "start": "2569640",
    "end": "2574760"
  },
  {
    "text": "simulate the rootkit behavior in such small programs or Snippets um could Al",
    "start": "2574760",
    "end": "2580119"
  },
  {
    "text": "use a feature flag or whatever we want to use for like enabling a specific",
    "start": "2580119",
    "end": "2585240"
  },
  {
    "text": "chaos experiment um we can simulate a call home using some like HTTP requests",
    "start": "2585240",
    "end": "2590640"
  },
  {
    "text": "or whatnot could intercept the traffic and cause delays so like I'm I'm reading",
    "start": "2590640",
    "end": "2596559"
  },
  {
    "text": "something from the buffer I'm sleeping for 10 seconds and then I'm continuing maybe um also considering DN uh CPU",
    "start": "2596559",
    "end": "2603680"
  },
  {
    "text": "stress testing um DNS Kos all the things which can be broken or",
    "start": "2603680",
    "end": "2609440"
  },
  {
    "text": "which you want to break in a professional way and then verify reliability now this is all great ideas",
    "start": "2609440",
    "end": "2617559"
  },
  {
    "text": "um but we also got work to do so vice versa chaos with ebpf um because from like a development",
    "start": "2617559",
    "end": "2625559"
  },
  {
    "text": "perspective or defs Ops um EF programs this is like normal source code you want",
    "start": "2625559",
    "end": "2632000"
  },
  {
    "text": "to compile it you want to run it you want to build it you want to test it um you want to look into code quality so um",
    "start": "2632000",
    "end": "2639079"
  },
  {
    "text": "it's it's complicated to write good ebpf program code um it's also like humans",
    "start": "2639079",
    "end": "2645559"
  },
  {
    "text": "make mistakes so we need security scanning in the cicd pipeline or like shifting left um and we also want to see",
    "start": "2645559",
    "end": "2652680"
  },
  {
    "text": "like if there are programs that could be like slowing down the kernel or could be doing something which is not with good",
    "start": "2652680",
    "end": "2659520"
  },
  {
    "text": "intentions like supply chain attacks installing an EF program and magically",
    "start": "2659520",
    "end": "2664839"
  },
  {
    "text": "it becomes a Bitcoin min um so this is an interesting like",
    "start": "2664839",
    "end": "2670400"
  },
  {
    "text": "problem to solve because at the moment um the colel verifies dbf programs at",
    "start": "2670400",
    "end": "2676160"
  },
  {
    "text": "load time and rejects anything which is deemed unsafe so um in cicd it this is a",
    "start": "2676160",
    "end": "2682960"
  },
  {
    "text": "nightmare to test because you need something to to being able to test it um",
    "start": "2682960",
    "end": "2688720"
  },
  {
    "text": "and not you cannot really like run run it in actual colel um so one of the",
    "start": "2688720",
    "end": "2694800"
  },
  {
    "text": "attempts is like to create and harness which moves um the ebpf verify out of",
    "start": "2694800",
    "end": "2700200"
  },
  {
    "text": "outside of the running kernel and the linked article is an interesting read um let's see how far this goes in order to",
    "start": "2700200",
    "end": "2706599"
  },
  {
    "text": "improve everything another thought is um there are certain risks involved so like ebpf",
    "start": "2706599",
    "end": "2712480"
  },
  {
    "text": "is ruled on the current level um there are real world exploits root kits and vulnerabilities which are actually",
    "start": "2712480",
    "end": "2718240"
  },
  {
    "text": "bypassing ebpf um because there are also limitations of ebpf security enforcement",
    "start": "2718240",
    "end": "2724000"
  },
  {
    "text": "um using different um programming techniques different like um ring buffers and so on so it's like a Ken",
    "start": "2724000",
    "end": "2731920"
  },
  {
    "text": "mice game with ebpf um my own wish list for ebpf would be like having sort of like a fiber or",
    "start": "2731920",
    "end": "2739079"
  },
  {
    "text": "sleepable BPF program in order to like sleep and continue at a later later Point um also considering observe or",
    "start": "2739079",
    "end": "2747040"
  },
  {
    "text": "monitor the monitor like ebpf programs that observe other ebpf programs for malicious behavior or having it light",
    "start": "2747040",
    "end": "2753760"
  },
  {
    "text": "out of the box in the kernel um better developer experience and also",
    "start": "2753760",
    "end": "2759160"
  },
  {
    "text": "abstraction by platforms um there are all great resources to learn and read um which are link there um on the slide as",
    "start": "2759160",
    "end": "2766160"
  },
  {
    "text": "well now um as a conclusion like the recap and inspiration for your next",
    "start": "2766160",
    "end": "2771760"
  },
  {
    "text": "project um consider rbpf as a new way to collect observability data provides you",
    "start": "2771760",
    "end": "2777000"
  },
  {
    "text": "with network insights provides security observability and enforcement um at chaos engineering to verify this",
    "start": "2777000",
    "end": "2784000"
  },
  {
    "text": "observability data ver the evf program behavior and also consider integrating",
    "start": "2784000",
    "end": "2789280"
  },
  {
    "text": "evf probes for chaos experiments hopefully done by Upstream in the future",
    "start": "2789280",
    "end": "2794720"
  },
  {
    "text": "um we have moved from monitoring to observability we have moved from traditional metrix monitoring to being",
    "start": "2794720",
    "end": "2801480"
  },
  {
    "text": "able to correlate verify and observe we need to like consider um there is data Ops coming we want to use the",
    "start": "2801480",
    "end": "2808440"
  },
  {
    "text": "observability data for mlops and Air Ops in the future we might be seeing all ops",
    "start": "2808440",
    "end": "2815160"
  },
  {
    "text": "or like whatever Ops and also consider like the benefits like",
    "start": "2815160",
    "end": "2821720"
  },
  {
    "text": "we have observability driven development with other instrumentation so developers can focus on writing code and not",
    "start": "2821720",
    "end": "2828160"
  },
  {
    "text": "something else we can verify the relability from an Ops perspective with chaos engineering and for the SEC",
    "start": "2828160",
    "end": "2834920"
  },
  {
    "text": "perspective we hopefully get better Cloud native security defaults from everything we learn while using",
    "start": "2834920",
    "end": "2841359"
  },
  {
    "text": "ebpf to do the ebpf program verification in cicd um just the chaos experiment using new",
    "start": "2841359",
    "end": "2848160"
  },
  {
    "text": "technology and also more ready to use ebpf flabber abstractions um would be",
    "start": "2848160",
    "end": "2853240"
  },
  {
    "text": "something last but not least um cons consider these learning tips start in a",
    "start": "2853240",
    "end": "2859440"
  },
  {
    "text": "virtual machine um use an or vagrant provisioning or something else and share that with your teams I did that in the",
    "start": "2859440",
    "end": "2866240"
  },
  {
    "text": "project which which uses an to to install all the tools in the in the yunto virtual machine um consider taking",
    "start": "2866240",
    "end": "2874680"
  },
  {
    "text": "a step back when anything like when you don't understand names of Technologies take a note um read on um you don't need",
    "start": "2874680",
    "end": "2882960"
  },
  {
    "text": "to understand everything which is ebpf a general understanding can help you when like the data collection breaks or",
    "start": "2882960",
    "end": "2888920"
  },
  {
    "text": "something else is going on and tools are not working um this is helpful information um to get a deeper insight",
    "start": "2888920",
    "end": "2896200"
  },
  {
    "text": "into what what's actually going on and that's it um thanks for listening",
    "start": "2896200",
    "end": "2901599"
  },
  {
    "text": "thanks for tuning in um you can read more about the GB of so ility Direction on the left hand side you can access the",
    "start": "2901599",
    "end": "2907960"
  },
  {
    "text": "demo project where all the tools and all the scripts are located the slides are linked again here here's my newsletter",
    "start": "2907960",
    "end": "2915119"
  },
  {
    "text": "where where I write everything I learn about ebpf about observability and and",
    "start": "2915119",
    "end": "2920240"
  },
  {
    "text": "other chaos engineering yeah and um you can find me on social media for",
    "start": "2920240",
    "end": "2925920"
  },
  {
    "text": "questions um hit me up in public um I will be at qon in person myself um",
    "start": "2925920",
    "end": "2932720"
  },
  {
    "text": "otherwise meet you virtually and hopefully in at future events all over the world thanks for for listening um",
    "start": "2932720",
    "end": "2941799"
  },
  {
    "text": "and have a great day",
    "start": "2941799",
    "end": "2945920"
  },
  {
    "text": "[Music]",
    "start": "2948930",
    "end": "2955219"
  },
  {
    "text": "bye",
    "start": "2955559",
    "end": "2958559"
  }
]