[
  {
    "text": "[Music]",
    "start": "820",
    "end": "8880"
  },
  {
    "text": "so yeah the name of this talk is uh remedies for back Bane uh scaling back when ja SoundCloud um caveat is",
    "start": "8880",
    "end": "17119"
  },
  {
    "text": "obviously not going to solve all your problems but it's kind of a a look at how we solved several problems and just",
    "start": "17119",
    "end": "23359"
  },
  {
    "text": "some kind of like best practices and things that really helped guide us uh build our large single page app",
    "start": "23359",
    "end": "30920"
  },
  {
    "text": "so yeah um I'm Daryl darl Stevenson I'm a frontend engineer at SoundCloud um we",
    "start": "30920",
    "end": "37600"
  },
  {
    "text": "most of the engineering is actually out of Berlin um and as far as professional credentials I guess I had enough to work",
    "start": "37600",
    "end": "44800"
  },
  {
    "text": "on a production app there so that's more than I guess necessary um if you guys",
    "start": "44800",
    "end": "50039"
  },
  {
    "text": "have any questions just you know uh ask me on Twitter uh or I'll be around um so",
    "start": "50039",
    "end": "56840"
  },
  {
    "text": "yeah um so some quick assumptions about this talk uh is that you already know",
    "start": "56840",
    "end": "62680"
  },
  {
    "text": "what backbone GS is this is it's not going to be a talk that really is introducing the kind of standard",
    "start": "62680",
    "end": "68960"
  },
  {
    "text": "patterns or what a model or collection in backbone is um so if you're not sure",
    "start": "68960",
    "end": "75600"
  },
  {
    "text": "what backbone is you're probably in for a bit of a weird ride um and I'm hoping",
    "start": "75600",
    "end": "80920"
  },
  {
    "text": "also that you have some kind of awareness of single page application patterns maybe you've been kind of",
    "start": "80920",
    "end": "86320"
  },
  {
    "text": "keeping up to the date with different blogs um and you you've looked at kind of competing libraries and and code",
    "start": "86320",
    "end": "93159"
  },
  {
    "text": "bases um so what are the what are the pains that we're going to talk about",
    "start": "93159",
    "end": "98200"
  },
  {
    "text": "here uh the first one is this boilerplate issue that a lot of people come across with",
    "start": "98200",
    "end": "103520"
  },
  {
    "text": "backbone um the pain of using a public API I think this is this was specific to",
    "start": "103520",
    "end": "109719"
  },
  {
    "text": "our case but I know this is kind of like a trend uh in a lot of uh companies who",
    "start": "109719",
    "end": "115719"
  },
  {
    "text": "are using single pay applications and um",
    "start": "115719",
    "end": "120880"
  },
  {
    "text": "and when n gets big enough to to flip tables or cause frustration or however",
    "start": "120880",
    "end": "126240"
  },
  {
    "text": "we pronounce this uh characters um so current scale at SoundCloud we have 30",
    "start": "126240",
    "end": "133640"
  },
  {
    "text": "million registered users in growing um 10 hours of audio are uploaded every minute so we have a lot",
    "start": "133640",
    "end": "139959"
  },
  {
    "text": "of activity on the site um and this our single page app has been our default",
    "start": "139959",
    "end": "145480"
  },
  {
    "text": "production app since uh December 2012 um obviously it's been a lot of work before",
    "start": "145480",
    "end": "151480"
  },
  {
    "text": "that probably about I'd say about a year of development first with a proof of",
    "start": "151480",
    "end": "156879"
  },
  {
    "text": "concept and then after um we had a beta program for about six months and finally",
    "start": "156879",
    "end": "163519"
  },
  {
    "text": "uh went live with it um on December 12 so uh yeah and as far as lines of code",
    "start": "163519",
    "end": "170040"
  },
  {
    "text": "it's about 37,000 lines of code currently um which I guess in the scale",
    "start": "170040",
    "end": "175280"
  },
  {
    "text": "of really large apps is actually quite small but um for JavaScript apps it's quite large um and 80% of that is JS so",
    "start": "175280",
    "end": "183720"
  },
  {
    "text": "just to kind of give you a mental picture of um you know what kind of",
    "start": "183720",
    "end": "190519"
  },
  {
    "text": "things we're interacting with a lot it's really heavy um on on JavaScript so this",
    "start": "190519",
    "end": "197159"
  },
  {
    "text": "is what our homepage looks like um who here has used SoundCloud or know what it",
    "start": "197159",
    "end": "202879"
  },
  {
    "text": "is okay awesome so I don't have to do too much explaining but the purpose of showing a lot of these views is that we",
    "start": "202879",
    "end": "209560"
  },
  {
    "text": "can see that these are all kinds of like different views within SoundCloud all within the same app um and so this is a",
    "start": "209560",
    "end": "217799"
  },
  {
    "text": "stream page so for logged in users they get basically a news feed of sounds",
    "start": "217799",
    "end": "223200"
  },
  {
    "text": "coming through my play count is super sad so check out my tracks um and also",
    "start": "223200",
    "end": "232439"
  },
  {
    "text": "uh we have these kind of listen detail Pages um so first this is like the obvious",
    "start": "232439",
    "end": "239000"
  },
  {
    "text": "question when people always ask like what's your what's your stack like you know what what what are you what are you building on um so sound sound manager 2",
    "start": "239000",
    "end": "247599"
  },
  {
    "text": "I guess is really like the core of SoundCloud currently I mean you can't have SoundCloud without sound obviously",
    "start": "247599",
    "end": "254480"
  },
  {
    "text": "this is an open- Source Library um it is basically a bridge between Flash and",
    "start": "254480",
    "end": "260840"
  },
  {
    "text": "HTML 5 Audio it uses um you can do a lot of different configurations to say",
    "start": "260840",
    "end": "266759"
  },
  {
    "text": "choose HTML 5 or choose flash um and you know given a lot of the the",
    "start": "266759",
    "end": "273880"
  },
  {
    "text": "current standard of HTML 5 Audio it's really good to have this kind of flash fallback because certain certain pieces",
    "start": "273880",
    "end": "280240"
  },
  {
    "text": "just aren't there um the the triumvirate of jQuery backbone and",
    "start": "280240",
    "end": "285840"
  },
  {
    "text": "underscore um we use handlebars for our templating with a lot of helpers one of",
    "start": "285840",
    "end": "291680"
  },
  {
    "text": "the really great things about handlebars is that you can write um helpers for it",
    "start": "291680",
    "end": "297320"
  },
  {
    "text": "um requirejs we use in uh development environment so",
    "start": "297320",
    "end": "303240"
  },
  {
    "text": "basically to keep code fresh to keep line counts exact um so when you have you know an an air or you set break",
    "start": "303240",
    "end": "310199"
  },
  {
    "text": "points you know exactly where it is and then there's alond JS which is a lightweight loader that we um put into",
    "start": "310199",
    "end": "317560"
  },
  {
    "text": "our build when the app is getting built out to production um they're both like I",
    "start": "317560",
    "end": "322960"
  },
  {
    "text": "said these are links to them you can check out in these slides later um yeah and of course we use we use nodejs but",
    "start": "322960",
    "end": "329160"
  },
  {
    "text": "only for our build and tooling um so really to uh compile there's some a bit",
    "start": "329160",
    "end": "336400"
  },
  {
    "text": "of kind of like uh as walking and some other fun stuff but yeah there's no kind",
    "start": "336400",
    "end": "342440"
  },
  {
    "text": "of production servers hitting node it's just really for uh tooling and then we",
    "start": "342440",
    "end": "347720"
  },
  {
    "text": "have homegrown deployment tools um I really wanted to include this part because I think it's just as important",
    "start": "347720",
    "end": "353800"
  },
  {
    "text": "to have super strong deployment tools when you're doing a JS app um to keep",
    "start": "353800",
    "end": "359080"
  },
  {
    "text": "these the the the kind of feedback cycle when you're working um you know really",
    "start": "359080",
    "end": "365039"
  },
  {
    "text": "fast and you kind of can get fixes out or you know respond to user feedback as",
    "start": "365039",
    "end": "370400"
  },
  {
    "text": "fast as possible if you want more info about actually like the stack",
    "start": "370400",
    "end": "375599"
  },
  {
    "text": "implementation we wrote a blog post I think about six months ago it's called building next SoundCloud um there's a",
    "start": "375599",
    "end": "382120"
  },
  {
    "text": "link there and um just Google for it as well it's got a lot more of these like I",
    "start": "382120",
    "end": "387639"
  },
  {
    "text": "said these implementation details about what is kind of going on at at a foundational level um yeah so on to the",
    "start": "387639",
    "end": "396919"
  },
  {
    "text": "first one which is boiler",
    "start": "396919",
    "end": "401000"
  },
  {
    "text": "[Music] plate so here's a quote this boiler plate is the product of much research",
    "start": "401970",
    "end": "408800"
  },
  {
    "text": "and frustration this is a g blame from the readme of backbone boiler plate",
    "start": "408800",
    "end": "415680"
  },
  {
    "text": "which is actually an open- Source repo um that is kind of aimed at solving this",
    "start": "415680",
    "end": "421599"
  },
  {
    "text": "issue that you know is a common problem to people using back blone is that they feel that there's a lot of boiler plate",
    "start": "421599",
    "end": "428240"
  },
  {
    "text": "it takes a lot to get started building an application on top of it um and you",
    "start": "428240",
    "end": "434319"
  },
  {
    "text": "know this is like I just wanted to have this quote in here to really show this",
    "start": "434319",
    "end": "439639"
  },
  {
    "text": "is this kind of common issue to building an app on top of backround so what exactly is the boiler",
    "start": "439639",
    "end": "447039"
  },
  {
    "text": "plate though um well for first of all backbone is the small compact library",
    "start": "447039",
    "end": "452479"
  },
  {
    "text": "and it has couple key Concepts in it but like I said it's a small Library you can",
    "start": "452479",
    "end": "457639"
  },
  {
    "text": "actually sit and read the code and put most of it in your head in a single reading um so a lot of this is actually",
    "start": "457639",
    "end": "464639"
  },
  {
    "text": "just building an app I mean when we think of of boilerplate it's not stuff that has to be repeated this is stuff",
    "start": "464639",
    "end": "470159"
  },
  {
    "text": "that we can actually you know automate away and Abstract away as well so a lot",
    "start": "470159",
    "end": "476319"
  },
  {
    "text": "of this is just building an app on top of a Library this is not a framework",
    "start": "476319",
    "end": "482000"
  },
  {
    "text": "that is going to put you out and you're going to be writing apps in you know 5 minutes and you know everyone will be",
    "start": "482000",
    "end": "488800"
  },
  {
    "text": "happy um then there's also the workflow environment um which is build tools file",
    "start": "488800",
    "end": "494039"
  },
  {
    "text": "creation file watching these are super important to have as a really strong",
    "start": "494039",
    "end": "499720"
  },
  {
    "text": "base in your project obviously you need to be able to iterate fast um and you",
    "start": "499720",
    "end": "505960"
  },
  {
    "text": "know the better your development environment is the the better kind of code you'll WR because you're not",
    "start": "505960",
    "end": "511120"
  },
  {
    "text": "struggling against some extra thing um and then there's the kind of some boiler play that comes from",
    "start": "511120",
    "end": "518039"
  },
  {
    "text": "application internals which is basically sharing model instances across views um",
    "start": "518039",
    "end": "524720"
  },
  {
    "text": "especially when you keep your code modular sharing these models uh between views is uh a problem that you know",
    "start": "524720",
    "end": "531120"
  },
  {
    "text": "backbone doesn't offer a solution for and really uh writing a modular view system",
    "start": "531120",
    "end": "538160"
  },
  {
    "text": "um back is least opinionated about views so basically the models and collections",
    "start": "538160",
    "end": "545360"
  },
  {
    "text": "the the kind of what you get there is is pretty tight it's pretty um uh kind of",
    "start": "545360",
    "end": "551279"
  },
  {
    "text": "simple to use and understand but there's a lot of ways to do views um so most",
    "start": "551279",
    "end": "557360"
  },
  {
    "text": "people I think when they go to build a um an app and they see that they have",
    "start": "557360",
    "end": "563399"
  },
  {
    "text": "all this like boiler plate they're like oh like now I have to do all this",
    "start": "563399",
    "end": "568800"
  },
  {
    "text": "work you know I have to actually like work on an application I can't just pull different uh GitHub repositories and you",
    "start": "568800",
    "end": "575839"
  },
  {
    "text": "know have something out tomorrow um and you know in hindsight this should be",
    "start": "575839",
    "end": "581279"
  },
  {
    "text": "really obvious right it's like you're building an app on top of a library and",
    "start": "581279",
    "end": "586560"
  },
  {
    "text": "you're building an app with a lot of user interface elements on top of a library that isn't really giving you a",
    "start": "586560",
    "end": "593240"
  },
  {
    "text": "lot to deal with views so clearly you know this is this kind of thing and I",
    "start": "593240",
    "end": "598600"
  },
  {
    "text": "think it it frust a lot of people and maybe they go running into another framework really quick but um what you",
    "start": "598600",
    "end": "604640"
  },
  {
    "text": "really should be like is like that where you're just kind of like all right you know the main reason is because you",
    "start": "604640",
    "end": "611320"
  },
  {
    "text": "actually get to make these opinions for yourself based on the specific use case",
    "start": "611320",
    "end": "616800"
  },
  {
    "text": "requirements of your application um so you know there's two ways to look at it really it is extra work but it's work",
    "start": "616800",
    "end": "623839"
  },
  {
    "text": "that pays off in the end because you have a system that is more for your own",
    "start": "623839",
    "end": "629040"
  },
  {
    "text": "user use case and it doesn't really get in your way at all um so if we were to look at the balance of how models",
    "start": "629040",
    "end": "636360"
  },
  {
    "text": "Collections and Views in our code is we have about 33 different",
    "start": "636360",
    "end": "641880"
  },
  {
    "text": "models 48 Collections and around 200 views so it's clearly I mean you show",
    "start": "641880",
    "end": "649440"
  },
  {
    "text": "that when you're writing one of these apps with a lot of features and a lot of different elements it it really Trends",
    "start": "649440",
    "end": "656399"
  },
  {
    "text": "towards a lot of views you're going to be working the views more than anything else um and actually writing kind of the",
    "start": "656399",
    "end": "663200"
  },
  {
    "text": "interaction in the view a lot um you know and this makes sense if we look at",
    "start": "663200",
    "end": "668880"
  },
  {
    "text": "how an app breaks down you know in the in the red I've highlighted uh what kind",
    "start": "668880",
    "end": "675200"
  },
  {
    "text": "of separate views are so play button its own view badges or titles are its own",
    "start": "675200",
    "end": "680440"
  },
  {
    "text": "view waveform the waveform comments Etc basically everything that can model data",
    "start": "680440",
    "end": "687000"
  },
  {
    "text": "can respond to a change data or um can basically have any kind of interaction this constitutes a view um",
    "start": "687000",
    "end": "695320"
  },
  {
    "text": "so you know also because many will represent the same model or the same collection we start trending uh to",
    "start": "695320",
    "end": "703120"
  },
  {
    "text": "really kind of project is get gets loaded up on view code",
    "start": "703120",
    "end": "709399"
  },
  {
    "text": "um so modular views um you know this is clearly the I think",
    "start": "709399",
    "end": "718040"
  },
  {
    "text": "the most important thing that need to stress about scaling one of these apps is that you really need a strong modular",
    "start": "718040",
    "end": "724480"
  },
  {
    "text": "view system and you need a modular view system with a lot of opinions because also the library that you're using",
    "start": "724480",
    "end": "730880"
  },
  {
    "text": "doesn't make a lot of them um so really they need to do a lot of things",
    "start": "730880",
    "end": "736480"
  },
  {
    "text": "modularity is not necess you know you want it to be self-sufficient really and within this kind of system they have to",
    "start": "736480",
    "end": "743000"
  },
  {
    "text": "do a lot of different stuff um they have to render their templates uh mutate data before",
    "start": "743000",
    "end": "749560"
  },
  {
    "text": "rendering in case what you're getting from the server needs to change a bit or you maybe you're pluralizing things or",
    "start": "749560",
    "end": "755880"
  },
  {
    "text": "whatever before it goes out to the template um they need to establish a data source uh communicate with the",
    "start": "755880",
    "end": "762959"
  },
  {
    "text": "model of course manage their own visual States this is important too uh you know",
    "start": "762959",
    "end": "768320"
  },
  {
    "text": "we have to maybe apply CSS classes to the view or alter the view in some other way to respond to State um set up and",
    "start": "768320",
    "end": "776440"
  },
  {
    "text": "tear down event listeners recently this is kind of made easier in backbone uh",
    "start": "776440",
    "end": "782680"
  },
  {
    "text": "well the last two versions really version changes and um but yeah you can",
    "start": "782680",
    "end": "787839"
  },
  {
    "text": "also set up other views other events yourself um that you'll need to tear down later caching template elements",
    "start": "787839",
    "end": "795440"
  },
  {
    "text": "this is really important so we're not doing expensive Dom lookups all the time um and we need to respond to of course",
    "start": "795440",
    "end": "802320"
  },
  {
    "text": "the Dom and other events um and last we need to add or remove sub views so we",
    "start": "802320",
    "end": "808399"
  },
  {
    "text": "really want to have have a composable system uh where we're adding or R removing subviews this is super",
    "start": "808399",
    "end": "815360"
  },
  {
    "text": "important again um and the Really the goal when you're writing your view code especially your foundational view class",
    "start": "815360",
    "end": "821839"
  },
  {
    "text": "is to make it modular um in our project it's a bit hard to see but the including",
    "start": "821839",
    "end": "828320"
  },
  {
    "text": "a view is really as easy as including a handlebar Helper and a template with a",
    "start": "828320",
    "end": "833399"
  },
  {
    "text": "file path and a resource ID and really I think this is this is as simple as it",
    "start": "833399",
    "end": "839759"
  },
  {
    "text": "should be because any other kind of view instantiation if you're doing it in",
    "start": "839759",
    "end": "845279"
  },
  {
    "text": "different ways as your project grows and people do this in different ways your code starts to get really messy so",
    "start": "845279",
    "end": "852199"
  },
  {
    "text": "strong opinions here are super important um so obviously this is how you would include one this is kind of an",
    "start": "852199",
    "end": "858720"
  },
  {
    "text": "implementation of a simple view uh we're writing in commonjs module style which",
    "start": "858720",
    "end": "863800"
  },
  {
    "text": "gets converted later during a build step but again it's very simple um we require",
    "start": "863800",
    "end": "870160"
  },
  {
    "text": "Group which is our model we require the base view class that we're using and then we apply a class name we include",
    "start": "870160",
    "end": "877560"
  },
  {
    "text": "the CSS from the uh the view include the template from The",
    "start": "877560",
    "end": "882639"
  },
  {
    "text": "View declare our model class so that our base view class can instantiate it",
    "start": "882639",
    "end": "888600"
  },
  {
    "text": "automatically um and then we have required attributes and these are",
    "start": "888600",
    "end": "894079"
  },
  {
    "text": "important so these two here are important because views need to know",
    "start": "896279",
    "end": "901440"
  },
  {
    "text": "when they have enough data to render um and so automating that away or making",
    "start": "901440",
    "end": "907880"
  },
  {
    "text": "that kind of interface as simple as possible is super important um so we can declare an array of different properties",
    "start": "907880",
    "end": "915160"
  },
  {
    "text": "that we need to check after a fetch has been made to uh to make sure that you",
    "start": "915160",
    "end": "920720"
  },
  {
    "text": "know this is all we need for this view let's render if the model changes and",
    "start": "920720",
    "end": "926720"
  },
  {
    "text": "say one of these observe attributes changes then maybe we render um and",
    "start": "926720",
    "end": "932360"
  },
  {
    "text": "sometimes we don't even put required attributes but we'll have an observed attribute say for something that's empty",
    "start": "932360",
    "end": "937880"
  },
  {
    "text": "and then the this property comes in then we will actually uh put the view into",
    "start": "937880",
    "end": "944680"
  },
  {
    "text": "place so really given this this kind of shift where your app gets heavier and it",
    "start": "944759",
    "end": "951160"
  },
  {
    "text": "adds a lot of views The View really is the most important class for code growth",
    "start": "951160",
    "end": "956880"
  },
  {
    "text": "um it's going to be the most used but it's the least built out already by",
    "start": "956880",
    "end": "962000"
  },
  {
    "text": "backbone um solidifies a huge amount of shared Behavior this is also super",
    "start": "962000",
    "end": "967160"
  },
  {
    "text": "important um done properly this is going to save you bytes in the long run and",
    "start": "967160",
    "end": "972800"
  },
  {
    "text": "keep your application uh thinner because you're not reduplicating you have kind of your foundation is providing a way to",
    "start": "972800",
    "end": "980600"
  },
  {
    "text": "avoid uh repeating yourself and I think this is really the most important thing about this as your project grows is that",
    "start": "980600",
    "end": "987800"
  },
  {
    "text": "how you includ include that and how you program that base view class is really",
    "start": "987800",
    "end": "993759"
  },
  {
    "text": "what codifies convention and having convention and strong opinions is really",
    "start": "993759",
    "end": "999160"
  },
  {
    "text": "what will help your app grow there's not if if you have these conventions in here",
    "start": "999160",
    "end": "1004399"
  },
  {
    "text": "um and you have these really strong opinions at this level there's not a lot of kind of uh you know concern when",
    "start": "1004399",
    "end": "1011319"
  },
  {
    "text": "you're working on a team of other developers about how to implement something the patterns are strict uh",
    "start": "1011319",
    "end": "1017279"
  },
  {
    "text": "they're easier to follow and it removes a lot of the worry of those kind of things so just to sum up this you know",
    "start": "1017279",
    "end": "1024600"
  },
  {
    "text": "boilerplate is really building an application Foundation um especially when you're building it on top of a",
    "start": "1024600",
    "end": "1030480"
  },
  {
    "text": "library um focus time and energy on getting the base view class right and really as much as possible um yeah it's",
    "start": "1030480",
    "end": "1039360"
  },
  {
    "text": "that so on to using the public API so dog fooding uh this term kind of",
    "start": "1039360",
    "end": "1050360"
  },
  {
    "text": "exists I guess in the tech industry and if you go to Wikipedia you can kind of",
    "start": "1050360",
    "end": "1055559"
  },
  {
    "text": "see this there's like this history of dog fooding where I guess there was a a commercial about someone feeding food to",
    "start": "1055559",
    "end": "1062400"
  },
  {
    "text": "their own dog or something like that then it became some buzzword circulated in ' 80s Microsoft and you know I heard",
    "start": "1062400",
    "end": "1070880"
  },
  {
    "text": "this a lot and I'm sure you all have um and what this really means is like using",
    "start": "1070880",
    "end": "1077000"
  },
  {
    "text": "your product the same way a user would um and this is really about you know if",
    "start": "1077000",
    "end": "1083799"
  },
  {
    "text": "you use your product the same way user would you can experience the same frustrations but you also have the power",
    "start": "1083799",
    "end": "1089200"
  },
  {
    "text": "to uh go back and kind of solve these uh these frustrations",
    "start": "1089200",
    "end": "1095280"
  },
  {
    "text": "but it sounds weird right like what if I told you I eat dog food I mean this this",
    "start": "1095280",
    "end": "1102080"
  },
  {
    "text": "idea that we're eating dog food I think is it's kind of bizarre um and I think",
    "start": "1102080",
    "end": "1108559"
  },
  {
    "text": "that you know if if the goal of this is really to to ensure like high product",
    "start": "1108559",
    "end": "1115559"
  },
  {
    "text": "standards you know surely there are other ways other than uh doing exactly",
    "start": "1115559",
    "end": "1120600"
  },
  {
    "text": "this way and this kind of a funny story that I know uh it's like my second day",
    "start": "1120600",
    "end": "1126400"
  },
  {
    "text": "of working at SoundCloud um and I guess we had had a phone conversation with Dan",
    "start": "1126400",
    "end": "1131640"
  },
  {
    "text": "web uh from Twitter and he was like this single eight page application approach",
    "start": "1131640",
    "end": "1137039"
  },
  {
    "text": "like it's not working out um you know and this is like six or seven months into SoundCloud building out this single",
    "start": "1137039",
    "end": "1143000"
  },
  {
    "text": "page app that's using the public API and he's like just not it's just not going to work we're transitioning a bunch of",
    "start": "1143000",
    "end": "1148720"
  },
  {
    "text": "stuff back to the server um and you know like doing so we found uh you know we've",
    "start": "1148720",
    "end": "1155480"
  },
  {
    "text": "got a lot better results um so of course there's that worry and you can read the blog post about it but again like you",
    "start": "1155480",
    "end": "1163120"
  },
  {
    "text": "have to think like what is your use case um in these scenarios and and not get like so cargo called to about these",
    "start": "1163120",
    "end": "1169200"
  },
  {
    "text": "things as well like really think like why would why would you dog food why would you use your own product in the",
    "start": "1169200",
    "end": "1175320"
  },
  {
    "text": "same way are you really using it the way other people would I mean clearly there's other ways to maintain high",
    "start": "1175320",
    "end": "1182080"
  },
  {
    "text": "standards like metrics I mean attaching metrics to your app is a really great way of course contractual agreements if",
    "start": "1182080",
    "end": "1189600"
  },
  {
    "text": "you really want to have you know uh the high you know uh basically standard",
    "start": "1189600",
    "end": "1196799"
  },
  {
    "text": "legally binding is pretty good motivation um face to face with Builders",
    "start": "1196799",
    "end": "1202000"
  },
  {
    "text": "understanding your users um so talking about the good things about",
    "start": "1202000",
    "end": "1208559"
  },
  {
    "text": "public API the data is there in a lot of cases like you're already offering it to public to people so when you start going",
    "start": "1208559",
    "end": "1216440"
  },
  {
    "text": "down the approach of a single page application you're not being blocked at all there's no services to build it's",
    "start": "1216440",
    "end": "1223120"
  },
  {
    "text": "already handling a large amount of traffic it's there it's usable um and it has probably a lot of what you want um",
    "start": "1223120",
    "end": "1230720"
  },
  {
    "text": "you know concentrates common business logic as well so if you have uh you know",
    "start": "1230720",
    "end": "1236280"
  },
  {
    "text": "the desktop site and the mobile site and then maybe you have your Android and iOS clients or you know different clients",
    "start": "1236280",
    "end": "1243440"
  },
  {
    "text": "can consume your API in the same way um and of course it's once you start putting this into production it demands",
    "start": "1243440",
    "end": "1248919"
  },
  {
    "text": "High availability low latency all the kind of features that or things that you would expect from a reliable",
    "start": "1248919",
    "end": "1255960"
  },
  {
    "text": "service but the bad stuff is really that it's far too generic to be performing at",
    "start": "1255960",
    "end": "1261559"
  },
  {
    "text": "scale um and I think this is this is a a really huge thing and also it's",
    "start": "1261559",
    "end": "1266960"
  },
  {
    "text": "inflexible because of external obligations once you have built",
    "start": "1266960",
    "end": "1272360"
  },
  {
    "text": "something like this and you have a public API and people start using it you want it to be stable you want it to be",
    "start": "1272360",
    "end": "1279840"
  },
  {
    "text": "fixed you want you can't you know mess around with the properties as much because other people are depending on this as well so you have this kind of",
    "start": "1279840",
    "end": "1286840"
  },
  {
    "text": "unspoken contract most of the time to serve people a quality API so for an example this is a standard",
    "start": "1286840",
    "end": "1296360"
  },
  {
    "text": "playlist Json representation that our API would serve um and you can see really that there's a lot of um a lot of",
    "start": "1296360",
    "end": "1304559"
  },
  {
    "text": "properties on here I mean we're we're giving basically any consumer of this API all of the data because we're not",
    "start": "1304559",
    "end": "1312679"
  },
  {
    "text": "actually sure what they're going to build with it right I mean you're serving a bunch of stuff so that people",
    "start": "1312679",
    "end": "1318600"
  },
  {
    "text": "can actually um use it so we're including other kind of submodels as well um you know so like I said that",
    "start": "1318600",
    "end": "1326320"
  },
  {
    "text": "idea it's it's too generic um back",
    "start": "1326320",
    "end": "1332039"
  },
  {
    "text": "here so oops what we really would like",
    "start": "1332039",
    "end": "1337279"
  },
  {
    "text": "is actually I think that my slides got out of sync",
    "start": "1337279",
    "end": "1343400"
  },
  {
    "text": "somehow there we go so what we really would like is a playlist representation that looks like this that is short um",
    "start": "1347120",
    "end": "1354600"
  },
  {
    "text": "succinct it's to the point it's what we're going to need for our basically",
    "start": "1354600",
    "end": "1359720"
  },
  {
    "text": "our app Chrome that is in the client and you may think okay well these these Json",
    "start": "1359720",
    "end": "1365799"
  },
  {
    "text": "representation the difference is probably not that big um especially when you factor in latency and going to the",
    "start": "1365799",
    "end": "1371840"
  },
  {
    "text": "server Etc but if you're doing this thousands and thousands and thousands of",
    "start": "1371840",
    "end": "1377000"
  },
  {
    "text": "times and even you want to load hundreds of these into the client then it does",
    "start": "1377000",
    "end": "1382840"
  },
  {
    "text": "make a difference not just in sheer data or or sheer through throughput of Json",
    "start": "1382840",
    "end": "1388480"
  },
  {
    "text": "but actually parsing the Json as well into a backbone collection so it's",
    "start": "1388480",
    "end": "1393520"
  },
  {
    "text": "really good to to get specific with these things um so yeah so again when",
    "start": "1393520",
    "end": "1400960"
  },
  {
    "text": "your data source is inflexible you start running into problems um and what happens is the",
    "start": "1400960",
    "end": "1407559"
  },
  {
    "text": "client code gets the brunt of it because you can't shift the code on the API but",
    "start": "1407559",
    "end": "1413640"
  },
  {
    "text": "you know we have this client app out there that we can actually put some kind of logic into um but you start adding",
    "start": "1413640",
    "end": "1420600"
  },
  {
    "text": "more complexity into it because you have uh an inflexible uh data store um and",
    "start": "1420600",
    "end": "1427440"
  },
  {
    "text": "you start doing more expensive operations in the client which is really bad you don't want to do a lot of",
    "start": "1427440",
    "end": "1432640"
  },
  {
    "text": "complex sorting filtering um maybe you want to to kind of have a Shuffle",
    "start": "1432640",
    "end": "1438880"
  },
  {
    "text": "feature for example you don't want to like over fetch hundreds of models to",
    "start": "1438880",
    "end": "1444080"
  },
  {
    "text": "just shuffle a couple you just need you want some service that will give you five shuffled um and ultimately you also",
    "start": "1444080",
    "end": "1452919"
  },
  {
    "text": "start making more requests to the AP which is is really bad in terms of performance we we want to make as little",
    "start": "1452919",
    "end": "1459919"
  },
  {
    "text": "um requests as possible obviously um so for an example of",
    "start": "1459919",
    "end": "1465679"
  },
  {
    "text": "this um this is uh user profile um in",
    "start": "1465679",
    "end": "1470760"
  },
  {
    "text": "the top we have a spotlight section which is basically um a it's an editable",
    "start": "1470760",
    "end": "1476760"
  },
  {
    "text": "section that a user can adjust based on their disease their desires maybe they want to showcase a couple latest tracks",
    "start": "1476760",
    "end": "1483399"
  },
  {
    "text": "Etc and then below that we have just the kind of normal Stream So ideally in in",
    "start": "1483399",
    "end": "1489640"
  },
  {
    "text": "backbone world this would break down into a single collection maybe where the variety the the actual representation is",
    "start": "1489640",
    "end": "1496679"
  },
  {
    "text": "different a little and we could say okay put the spotlight items on the top and the rest of the items going to the back",
    "start": "1496679",
    "end": "1502640"
  },
  {
    "text": "or at the bottom of the stream but the problem was that they were actually two different data data uh endpoints",
    "start": "1502640",
    "end": "1511200"
  },
  {
    "text": "so functionally they work as a single collection the design is to be",
    "start": "1511200",
    "end": "1517080"
  },
  {
    "text": "functional as a single collection but remotely they're completely different data so you start running into real uh",
    "start": "1517080",
    "end": "1525960"
  },
  {
    "text": "like problems sorting out how these are going to work on the client um examples",
    "start": "1525960",
    "end": "1531760"
  },
  {
    "text": "of this so like like I said the cleanest implementation is really a single data object per uh view per per functional",
    "start": "1531760",
    "end": "1540320"
  },
  {
    "text": "view um the design treats items functionally as a single collection but",
    "start": "1540320",
    "end": "1545880"
  },
  {
    "text": "the server providing uh endpoints for each collection you start getting into complications in is this collection",
    "start": "1545880",
    "end": "1552440"
  },
  {
    "text": "ready is this collection ready how do we know when Ren render what happens if one has an error Etc",
    "start": "1552440",
    "end": "1559919"
  },
  {
    "text": "um and then you start really freaking out you're like this is not how this",
    "start": "1559919",
    "end": "1565200"
  },
  {
    "text": "backbone and abstraction is supposed to work at all um this is supposed to be really kind of simple actually in that",
    "start": "1565200",
    "end": "1571919"
  },
  {
    "text": "server provides the data it's a source of Truth for our application and we present that um in a really nice way so",
    "start": "1571919",
    "end": "1580159"
  },
  {
    "text": "obviously you know you have to you have to get flexible at these Services um here's an example of a place where we",
    "start": "1580159",
    "end": "1586720"
  },
  {
    "text": "have a completely separate Sur service actually serving the data now so we release a feature where Pro Partners at",
    "start": "1586720",
    "end": "1593440"
  },
  {
    "text": "SoundCloud can customize the backgrounds of their sound to offer some more brand",
    "start": "1593440",
    "end": "1598760"
  },
  {
    "text": "um awareness all those images um and that data is fed by a",
    "start": "1598760",
    "end": "1604520"
  },
  {
    "text": "totally separate service um and it was really easy to work with similarly we",
    "start": "1604520",
    "end": "1610080"
  },
  {
    "text": "did the same thing for recommendations um it's actually through the API to avoid caching but it's not",
    "start": "1610080",
    "end": "1616120"
  },
  {
    "text": "like a public route or anything um and again we were able to from the start",
    "start": "1616120",
    "end": "1623360"
  },
  {
    "text": "map this into a really cleanly dividing uh representation from the",
    "start": "1623360",
    "end": "1629720"
  },
  {
    "text": "server again uh for the explor page and so after working with these like three",
    "start": "1629720",
    "end": "1636640"
  },
  {
    "text": "uh examples of situations where we were able to uh decide what the the format of",
    "start": "1636640",
    "end": "1642720"
  },
  {
    "text": "the data works with and be flexible and have fast iterations you know it was like ah this is this is a joy again you",
    "start": "1642720",
    "end": "1649720"
  },
  {
    "text": "know like this is really pleasurable to work with um and this is really where",
    "start": "1649720",
    "end": "1655760"
  },
  {
    "text": "the abstraction shines if you're doing too much complicated filtering um and",
    "start": "1655760",
    "end": "1661679"
  },
  {
    "text": "overcompensation on the client your app is not going to scale very well you're going to really run into a lot of",
    "start": "1661679",
    "end": "1667760"
  },
  {
    "text": "problems so uh in Su I really think that using a",
    "start": "1667760",
    "end": "1675279"
  },
  {
    "text": "public API doesn't work well at scale um I know you know if your app is on it I",
    "start": "1675279",
    "end": "1680720"
  },
  {
    "text": "would definitely say you know try and move into flexible services that don't",
    "start": "1680720",
    "end": "1686000"
  },
  {
    "text": "have external obligations as soon as possible um and it's really it's all about having that flexibility being able",
    "start": "1686000",
    "end": "1693399"
  },
  {
    "text": "to bind uh or to kind of set up your res representation and feed your client app",
    "start": "1693399",
    "end": "1699240"
  },
  {
    "text": "properly um so comments on Soundcloud are a very special thing um this user is",
    "start": "1699240",
    "end": "1707480"
  },
  {
    "text": "saying sound SoundCloud user comments attached to songs are iconic and",
    "start": "1707480",
    "end": "1712519"
  },
  {
    "text": "lifechanging and this one says a special corner of Internet hell the innan",
    "start": "1712519",
    "end": "1717640"
  },
  {
    "text": "comments on Soundcloud tracks and like I understand you know it's commenting it's",
    "start": "1717640",
    "end": "1723679"
  },
  {
    "text": "and it's commenting on the internet um but you know between those two mixed",
    "start": "1723679",
    "end": "1729240"
  },
  {
    "text": "positions it's like you you we have to support this and um obviously it's",
    "start": "1729240",
    "end": "1734720"
  },
  {
    "text": "something that a lot of people are using um and so leads me to this point is when",
    "start": "1734720",
    "end": "1740039"
  },
  {
    "text": "n gets big so n is just a kind of random thing and N might be big at a certain",
    "start": "1740039",
    "end": "1747200"
  },
  {
    "text": "level based on your use case um but for us we've seen like when n gets big",
    "start": "1747200",
    "end": "1752399"
  },
  {
    "text": "really in relation to comments um so this is Skrillex he's a",
    "start": "1752399",
    "end": "1758399"
  },
  {
    "text": "really popular uh dubstep artist electronic musician and uh this is just",
    "start": "1758399",
    "end": "1764720"
  },
  {
    "text": "like three sounds from the top of his stream if we look at the counts for this you",
    "start": "1764720",
    "end": "1770559"
  },
  {
    "text": "know we have like 1,265 almost 2,000 1,612 on a waveform that respond to time",
    "start": "1770559",
    "end": "1779919"
  },
  {
    "text": "as well um so if we think of these setup totals we have about 4,800 comments just",
    "start": "1779919",
    "end": "1787399"
  },
  {
    "text": "on those three sounds and then so like just to kind of",
    "start": "1787399",
    "end": "1792480"
  },
  {
    "text": "you know complete some arbitrariness not all of them were going to show right away of course we have about say say 15%",
    "start": "1792480",
    "end": "1799519"
  },
  {
    "text": "replies and you know a bunch of offscreen things um so in the",
    "start": "1799519",
    "end": "1804679"
  },
  {
    "text": "backbone app kind of model you have this collection of comments and uh a template",
    "start": "1804679",
    "end": "1811519"
  },
  {
    "text": "maybe a loop on a template that would render these out so the initial template based approach for this um it worked",
    "start": "1811519",
    "end": "1818159"
  },
  {
    "text": "fine on low counts obviously um it was using a list item you know it seemed like kind of a standard",
    "start": "1818159",
    "end": "1823960"
  },
  {
    "text": "implementation um and we have actually this uh list view class with in uh our",
    "start": "1823960",
    "end": "1829000"
  },
  {
    "text": "codebase that helps manage lists and insert things in the correct place um and you know each list item say",
    "start": "1829000",
    "end": "1836399"
  },
  {
    "text": "make about four nodes in the Dom you have a list item say maybe a a link an image and a span maybe to show or hide",
    "start": "1836399",
    "end": "1844360"
  },
  {
    "text": "text so now we're at 16,320 nodes and we're just showing",
    "start": "1844360",
    "end": "1849640"
  },
  {
    "text": "three sounds so Doms these days are pretty good they can handle a lot of",
    "start": "1849640",
    "end": "1854960"
  },
  {
    "text": "nodes um but Skrillex has 50 sounds and we have infinite scroll so as we're",
    "start": "1854960",
    "end": "1861320"
  },
  {
    "text": "getting there now we have if you were to scroll from the top of his page the bottom we have",
    "start": "1861320",
    "end": "1867720"
  },
  {
    "text": "272,000 Dom nodes just from commenting Alone um so common symptom of this is",
    "start": "1867720",
    "end": "1877399"
  },
  {
    "text": "I'll snap browser crashes or if it didn't crash and You Were Somehow able",
    "start": "1877399",
    "end": "1882480"
  },
  {
    "text": "to hang in there um it was really incredibly uh unresponsive scrolling was",
    "start": "1882480",
    "end": "1889480"
  },
  {
    "text": "a real pain and that whole user experience is ruined basically the the whole reason we're building these single",
    "start": "1889480",
    "end": "1895600"
  },
  {
    "text": "page apps is to really uh have a concrete awesome user experience and we've totally wiped it out uh just you",
    "start": "1895600",
    "end": "1904000"
  },
  {
    "text": "know putting comments into the Dom so of course you can do some kind of limit enforcing where you say hey um we're",
    "start": "1904000",
    "end": "1911880"
  },
  {
    "text": "only going to show 200 comments uh per sound but we still end up with about 40,000 comments nodes in a in a stream",
    "start": "1911880",
    "end": "1920000"
  },
  {
    "text": "um and of course there's you know some other tricks of hiding these things but one of the problems with this",
    "start": "1920000",
    "end": "1925720"
  },
  {
    "text": "implementation is that um even if you didn't get the off snap which sometimes",
    "start": "1925720",
    "end": "1931720"
  },
  {
    "text": "you would I mean we're dealing with computers that have uh you know higher amounts of ram lower amounts of ram some",
    "start": "1931720",
    "end": "1938639"
  },
  {
    "text": "people have other processes running that are taking up things um it still is not performant and what's worse you've",
    "start": "1938639",
    "end": "1945279"
  },
  {
    "text": "actually ruined the reason you're showing comments in the first place which is some kind of visual indication",
    "start": "1945279",
    "end": "1951519"
  },
  {
    "text": "of the popularity of a track basically all tracks over 200 comments now are",
    "start": "1951519",
    "end": "1957519"
  },
  {
    "text": "going to look exactly the same uh so you know you've done this you've actually",
    "start": "1957519",
    "end": "1963399"
  },
  {
    "text": "ended up with a still poorly performing product and you've actually ruined the",
    "start": "1963399",
    "end": "1968720"
  },
  {
    "text": "kind of design uh motivation for doing this so you know there was a lot of",
    "start": "1968720",
    "end": "1974120"
  },
  {
    "text": "thinking um and we decided to go back we decided to say back to the canvas uh we",
    "start": "1974120",
    "end": "1980679"
  },
  {
    "text": "don't need templates for this like a DA based approach is just not going to work here um so we went with something which",
    "start": "1980679",
    "end": "1989240"
  },
  {
    "text": "are actually loading all the comment onto the canvas um the beauty of this",
    "start": "1989240",
    "end": "1994320"
  },
  {
    "text": "approach is now we have one node P per sound that can handle an arbitrary",
    "start": "1994320",
    "end": "2000639"
  },
  {
    "text": "amount of of comments and the initial memory profile barely changes um so you",
    "start": "2000639",
    "end": "2009279"
  },
  {
    "text": "know it's kind of a really uh efficient way I mean it's hard to get more efficient in the way of Dom nodes of",
    "start": "2009279",
    "end": "2016720"
  },
  {
    "text": "having more than one p or just one person so there's obviously no template in this view there's just a reference to",
    "start": "2016720",
    "end": "2024039"
  },
  {
    "text": "the canvas context um so we've kind of changed it a bit but it uses the same",
    "start": "2024039",
    "end": "2030279"
  },
  {
    "text": "patterns for collection events which is super nice because actually working in that that way you're still within the",
    "start": "2030279",
    "end": "2037799"
  },
  {
    "text": "the backbone framework of handling data and handling events on data um so how it",
    "start": "2037799",
    "end": "2043639"
  },
  {
    "text": "works we actually just pre-load um all avatars uh create deferred objects for",
    "start": "2043639",
    "end": "2050118"
  },
  {
    "text": "each one and uh put them into an array um have a we have a when all method and",
    "start": "2050119",
    "end": "2057480"
  },
  {
    "text": "uh so when all the comments are loaded in a single quick Loop we write them out to the canvas um and then because canvas",
    "start": "2057480",
    "end": "2066440"
  },
  {
    "text": "is not that great to work with for interaction you have to start testing uh Mouse points Etc um we have some",
    "start": "2066440",
    "end": "2072800"
  },
  {
    "text": "separate views that sit on top that are just very light um ways to actually interact with the",
    "start": "2072800",
    "end": "2079560"
  },
  {
    "text": "comments but of course like you know you're still making tons of requests loading thousands and thousands of comments in this situation which is also",
    "start": "2079560",
    "end": "2086679"
  },
  {
    "text": "kind of crazy so then we're like well let's let's go even further here um we're",
    "start": "2086679",
    "end": "2094280"
  },
  {
    "text": "going to limit this to the last X comma the most recent whatever it's a it's a configuration",
    "start": "2094280",
    "end": "2100320"
  },
  {
    "text": "variable that we can use um we're going to draw the last comment avatars and then we're going to draw the",
    "start": "2100320",
    "end": "2107640"
  },
  {
    "text": "actual amount of lines that we have in a repeatable way on the waveform um so",
    "start": "2107640",
    "end": "2113440"
  },
  {
    "text": "which is is helping us solve the problem of you can still get that visual",
    "start": "2113440",
    "end": "2118560"
  },
  {
    "text": "information about which ones are Ultra popular um by looking at the the",
    "start": "2118560",
    "end": "2125000"
  },
  {
    "text": "waveform itself so this is a the before and after",
    "start": "2125000",
    "end": "2130680"
  },
  {
    "text": "it's a little hard to see in the slide but the top one is actually loading all the the comment avatars and drawing the",
    "start": "2130680",
    "end": "2137520"
  },
  {
    "text": "lines out and the bottom one is uh the optimized version where we just generate",
    "start": "2137520",
    "end": "2144320"
  },
  {
    "text": "the lines to draw to create that information based on a a single count property and then the avatars um are set",
    "start": "2144320",
    "end": "2152079"
  },
  {
    "text": "in the bottom so obviously there are some slight differences um they're definitely",
    "start": "2152079",
    "end": "2158720"
  },
  {
    "text": "not as recognizable if you're not attending a talk about optimizing uh canvas and how this whole thing is",
    "start": "2158720",
    "end": "2165040"
  },
  {
    "text": "explained but generally this really serves well in um getting us this to",
    "start": "2165040",
    "end": "2172359"
  },
  {
    "text": "this point where now we have an optimized implementation of uh comments",
    "start": "2172359",
    "end": "2177440"
  },
  {
    "text": "on on the waveform and so you may be thinking like oh well that's just a trick you know",
    "start": "2177440",
    "end": "2184040"
  },
  {
    "text": "like uh you know this is this is just a kind of a visual trick um and my",
    "start": "2184040",
    "end": "2190040"
  },
  {
    "text": "response to this is yeah it is and and and I'm okay with that um so obviously",
    "start": "2190040",
    "end": "2197880"
  },
  {
    "text": "in this case you know canvas is not some magic bullet for performance at all um in fact",
    "start": "2197880",
    "end": "2204480"
  },
  {
    "text": "like you really need to decide where it makes sense um in our case it works",
    "start": "2204480",
    "end": "2210599"
  },
  {
    "text": "super well I mean this is a point where a template and a backbone kind of uh",
    "start": "2210599",
    "end": "2217200"
  },
  {
    "text": "collect ction and template thing just couldn't meet up to basically a scale",
    "start": "2217200",
    "end": "2222480"
  },
  {
    "text": "need of having tons of uh nodes but they're also kind of special in this",
    "start": "2222480",
    "end": "2227760"
  },
  {
    "text": "case in that they're in a high density uh in kind of a small space and it's highly visual um so there's no text you",
    "start": "2227760",
    "end": "2235480"
  },
  {
    "text": "know um and the the information is pretty easy to grab as well from just loading in the images um so I think the",
    "start": "2235480",
    "end": "2245079"
  },
  {
    "text": "lesson here really is break out of the stand standard pattern where it makes sense um",
    "start": "2245079",
    "end": "2251920"
  },
  {
    "text": "and and you know that modular view system you set up again when you have it set up like this you can break out of",
    "start": "2251920",
    "end": "2258200"
  },
  {
    "text": "this pattern and it actually doesn't take much effort at all to break out of this pattern our our canvas view is",
    "start": "2258200",
    "end": "2263599"
  },
  {
    "text": "really basically setting the the tag of the uh backbone view to Canvas and then",
    "start": "2263599",
    "end": "2269560"
  },
  {
    "text": "we had chain the uh context after we render it um and the great thing is is",
    "start": "2269560",
    "end": "2274800"
  },
  {
    "text": "that this back's view opinion is flexible enough to support this kind of",
    "start": "2274800",
    "end": "2279880"
  },
  {
    "text": "thing later on down the road and it's really a kind of unexpected thing so I",
    "start": "2279880",
    "end": "2285960"
  },
  {
    "text": "mean when you have something in the base that doesn't make a lot of opinions about how views are refreshed rendered",
    "start": "2285960",
    "end": "2293119"
  },
  {
    "text": "you really have the flexibility to kind of think outside the box and uh solve",
    "start": "2293119",
    "end": "2298359"
  },
  {
    "text": "Solutions in different ways so a little more trickery um this is a playlist of uh",
    "start": "2298359",
    "end": "2308280"
  },
  {
    "text": "2012's best dub dubstep tracks it's 10 hours and 14 minutes long it's composed",
    "start": "2308280",
    "end": "2313920"
  },
  {
    "text": "of like 70 different songs or sets and it's",
    "start": "2313920",
    "end": "2319280"
  },
  {
    "text": "hard to tell in this photo but there's actually dividers in between every waveform the design idea of this is to",
    "start": "2319280",
    "end": "2326119"
  },
  {
    "text": "view sound not as you know a a list but actually as kind of like a single wave",
    "start": "2326119",
    "end": "2332480"
  },
  {
    "text": "form you know this one of the things that we're known for and we really want to keep that kind of brand and uh",
    "start": "2332480",
    "end": "2338560"
  },
  {
    "text": "recognition alive um so our standard way of loading waveforms before was actually",
    "start": "2338560",
    "end": "2345119"
  },
  {
    "text": "to load an image and and then draw that image out on the canvas um and then",
    "start": "2345119",
    "end": "2351240"
  },
  {
    "text": "recently we changed this over to a flexible service that actually just gives us basically a large array of",
    "start": "2351240",
    "end": "2358800"
  },
  {
    "text": "1,800 um amplitude points for the waveform so now we just have a Json",
    "start": "2358800",
    "end": "2364520"
  },
  {
    "text": "array which is by far a far more efficent object when we want to just write things",
    "start": "2364520",
    "end": "2369640"
  },
  {
    "text": "out of the canvas um but we're still in a in a use case like this making and 80",
    "start": "2369640",
    "end": "2376119"
  },
  {
    "text": "fetches or whatever 180 requests to get these waveforms but if you look closely at",
    "start": "2376119",
    "end": "2384359"
  },
  {
    "text": "these waveforms there's actually these are all the same waveform um or at least",
    "start": "2384359",
    "end": "2389800"
  },
  {
    "text": "these ones here are not the same um so well those are the ones you can recognize actually this whole waveform",
    "start": "2389800",
    "end": "2396480"
  },
  {
    "text": "in itself is composed of pre-selected",
    "start": "2396480",
    "end": "2401640"
  },
  {
    "text": "kind of randomish looking waveforms um and then we just write that out from",
    "start": "2401640",
    "end": "2408680"
  },
  {
    "text": "only five files or so um so don't tell anyone",
    "start": "2408680",
    "end": "2415079"
  },
  {
    "text": "that uh but obviously it doesn't make a difference in that sense if we draw the",
    "start": "2415079",
    "end": "2420200"
  },
  {
    "text": "whole waveform out right like people can't tell it's not the point to analyze",
    "start": "2420200",
    "end": "2425400"
  },
  {
    "text": "the waveform in such a small context anyway um so really if the view is",
    "start": "2425400",
    "end": "2431160"
  },
  {
    "text": "compressed into a very small space just draw a fake um choose from a pool of",
    "start": "2431160",
    "end": "2436280"
  },
  {
    "text": "pre-selected ones possibly cached on the client um the page is much faster at",
    "start": "2436280",
    "end": "2442960"
  },
  {
    "text": "that kind of level you can't tell anyway everybody wins so the lesson learned",
    "start": "2442960",
    "end": "2448560"
  },
  {
    "text": "here is really Illusions can go a long way and I think that I mean it sounds",
    "start": "2448560",
    "end": "2454680"
  },
  {
    "text": "funny it sounds like Hey we're tricking people but if we think of so much of our best practices in front end development",
    "start": "2454680",
    "end": "2461599"
  },
  {
    "text": "there's actually a lot of that I mean and it's not just you know substituting at waveforms we're loading uh HTML into",
    "start": "2461599",
    "end": "2469520"
  },
  {
    "text": "the to the window so we can have something to render before the JavaScript loads in to bind it and a lot",
    "start": "2469520",
    "end": "2476119"
  },
  {
    "text": "of what we're doing is kind of hacking visual perception and I think at scale a",
    "start": "2476119",
    "end": "2482800"
  },
  {
    "text": "lot of these things work incredibly well um and",
    "start": "2482800",
    "end": "2487960"
  },
  {
    "text": "you know the whole reason we're doing this is really for this user experience",
    "start": "2487960",
    "end": "2493200"
  },
  {
    "text": "um so yeah conclusions um a strong modular view system is really I think",
    "start": "2493200",
    "end": "2499880"
  },
  {
    "text": "one of the most important keys to Growing your codebase gracefully especially when you're basing it on a",
    "start": "2499880",
    "end": "2505599"
  },
  {
    "text": "bagbone library um public apis are inflexible um and they can put the",
    "start": "2505599",
    "end": "2511880"
  },
  {
    "text": "burden on the client use flexible specific services for your production application instead",
    "start": "2511880",
    "end": "2518280"
  },
  {
    "text": "um don't be afraid to ditch the standard view uh canvas solves certain problems extremely well and sometimes uh an",
    "start": "2518280",
    "end": "2526319"
  },
  {
    "text": "illusion is as good as the real thing so thank",
    "start": "2526319",
    "end": "2531920"
  },
  {
    "text": "you uh my question is about the when you were building this uh view system did",
    "start": "2537839",
    "end": "2543880"
  },
  {
    "text": "you look at any of the uh these other third party libraries that build on top of backbone and draw any conclusions or",
    "start": "2543880",
    "end": "2549559"
  },
  {
    "text": "see any promise in any of them yeah I mean I think the um as when we first started out I mean there was one of the",
    "start": "2549559",
    "end": "2555559"
  },
  {
    "text": "first things that you have to build when you build these applications and I think that at that time there wasn't a lot of",
    "start": "2555559",
    "end": "2561440"
  },
  {
    "text": "like super welldeveloped ones uh while I was writing this talk I recently went back through and I looked at",
    "start": "2561440",
    "end": "2567200"
  },
  {
    "text": "marionette um and it looks like it has a lot of the same ideas um I haven't I",
    "start": "2567200",
    "end": "2573480"
  },
  {
    "text": "haven't used it so I can't say if you know how well it works but it's seems like it has a lot of the the kind of",
    "start": "2573480",
    "end": "2580359"
  },
  {
    "text": "pre-built modular View kind of composable view system in place I have",
    "start": "2580359",
    "end": "2586000"
  },
  {
    "text": "two questions uh first is how are you handling internationalization and second is are",
    "start": "2586000",
    "end": "2592400"
  },
  {
    "text": "you rendering on the server or are you sending down empty pages to the client yeah um so first question of",
    "start": "2592400",
    "end": "2598720"
  },
  {
    "text": "internalization that we're not actually doing anything for internationalization right now which is not really an app",
    "start": "2598720",
    "end": "2604359"
  },
  {
    "text": "issue it's more of like we want to be able to support and have customer support and Community Support uh for",
    "start": "2604359",
    "end": "2611200"
  },
  {
    "text": "people in different languages before we were actually introduce that into the code obviously so um it's more of an",
    "start": "2611200",
    "end": "2617640"
  },
  {
    "text": "issue of having that piece first um and the second one was sorry server side",
    "start": "2617640",
    "end": "2622880"
  },
  {
    "text": "rendering yeah um so we're not doing any serers side rendering for this app right now um which is something that we will",
    "start": "2622880",
    "end": "2628760"
  },
  {
    "text": "have to do eventually but this app is grown out of basically an older app",
    "start": "2628760",
    "end": "2634680"
  },
  {
    "text": "which is a rails app which we still serve to um crawlers um like for",
    "start": "2634680",
    "end": "2642079"
  },
  {
    "text": "instance Facebook we want to have the open graph tags um so we serve that to them um for Google actually it's been",
    "start": "2642079",
    "end": "2648680"
  },
  {
    "text": "interesting we've seen um if you Google SoundCloud results and look at the page preview they're clearly on the single",
    "start": "2648680",
    "end": "2655960"
  },
  {
    "text": "Page Apps and they are actually caching and indexing them some quite well and",
    "start": "2655960",
    "end": "2662240"
  },
  {
    "text": "some not so well so I think that we want to explore some solution in the future",
    "start": "2662240",
    "end": "2667760"
  },
  {
    "text": "um where we can render these just for for Bots but right now we're not doing that okay thank you yep hi thanks the",
    "start": "2667760",
    "end": "2675839"
  },
  {
    "text": "talk was really good it was very helpful especially for coming from backbone and getting started um one of the questions",
    "start": "2675839",
    "end": "2681720"
  },
  {
    "text": "I had was the view that you showed was an example um was had a very declarative syntax um is it really that declarative",
    "start": "2681720",
    "end": "2688440"
  },
  {
    "text": "or do you have a bunch of functions under there for responding to events and then also I saw you were packaging CSS",
    "start": "2688440",
    "end": "2695640"
  },
  {
    "text": "and templates in there yeah that something you do everywhere and how does that actually get bundled in when it gets deployed yeah sure um so as far as",
    "start": "2695640",
    "end": "2703119"
  },
  {
    "text": "the declarative I mean it is it is pretty declarative yeah I mean like a lot of the if like for instance if you",
    "start": "2703119",
    "end": "2709480"
  },
  {
    "text": "have a collection that you've included in setup you already get some events bound and then the Prototype would have",
    "start": "2709480",
    "end": "2714720"
  },
  {
    "text": "onclick on whatever um or the standard events hash the backbone uses um so most",
    "start": "2714720",
    "end": "2721280"
  },
  {
    "text": "of it is is pretty declarative we also have a mixin system um that I didn't go into but that helps kind of make some of",
    "start": "2721280",
    "end": "2728319"
  },
  {
    "text": "that transparent um and for the second sorry the second",
    "start": "2728319",
    "end": "2734920"
  },
  {
    "text": "question yeah so packaging the CSS so yeah it's it's we're requiring it there",
    "start": "2734920",
    "end": "2740000"
  },
  {
    "text": "right so we have this in our dependency graph so we can actually look and see which CSS um uh you know we need and",
    "start": "2740000",
    "end": "2747640"
  },
  {
    "text": "then we just bundle this together in order and and put it into the Dom um and we also have a build step that makes",
    "start": "2747640",
    "end": "2753760"
  },
  {
    "text": "basically a base CSS um file out of everything before it goes out so yeah",
    "start": "2753760",
    "end": "2759880"
  },
  {
    "text": "putting it like working with CSS in that way is really nice actually I would say like where you have each view has a uh a",
    "start": "2759880",
    "end": "2767880"
  },
  {
    "text": "JS file for the actual view uh Constructor The View class and then you have you know the template and the CSS",
    "start": "2767880",
    "end": "2775800"
  },
  {
    "text": "and they're all kind of in the same they live in the same place and their concerns are very much only about that",
    "start": "2775800",
    "end": "2781400"
  },
  {
    "text": "exact view um so that's that's how it goes there's more information on the CSS",
    "start": "2781400",
    "end": "2786680"
  },
  {
    "text": "actually in that blog post about building the next SoundCloud cool thanks",
    "start": "2786680",
    "end": "2795020"
  },
  {
    "text": "[Applause]",
    "start": "2795020",
    "end": "2800679"
  },
  {
    "text": "[Music]",
    "start": "2800910",
    "end": "2808538"
  }
]