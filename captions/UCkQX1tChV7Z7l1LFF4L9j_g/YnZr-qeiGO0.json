[
  {
    "text": "hello everyone and welcome to the last talk of the day I appreciate you all coming I hope that you feel invigorated",
    "start": "4170",
    "end": "11130"
  },
  {
    "text": "by the graph QL by the end of this so my talk today is about introducing and",
    "start": "11130",
    "end": "17099"
  },
  {
    "text": "scaling a graph QL BSS and I'm hoping that this talk will have something for",
    "start": "17099",
    "end": "23460"
  },
  {
    "text": "people who have already adopted graph QL and might have been using it in production for a while and hopefully",
    "start": "23460",
    "end": "29340"
  },
  {
    "text": "will help you think about what you want to do next with that architecture but I also hope that if you are thinking about",
    "start": "29340",
    "end": "36180"
  },
  {
    "text": "using graph QL or you want to know more about it this will give you some ideas about the benefits that might be in",
    "start": "36180",
    "end": "41850"
  },
  {
    "text": "store for you if you do decide to use graph QL so this is a talk about growing",
    "start": "41850",
    "end": "48510"
  },
  {
    "text": "a graph QL API much like a plant so we're going to talk about what it's like",
    "start": "48510",
    "end": "54180"
  },
  {
    "text": "to introduce graph QL to a code base and we're also going to talk about what it's",
    "start": "54180",
    "end": "59489"
  },
  {
    "text": "like to use graph QL in production for a year or two and how your architecture",
    "start": "59489",
    "end": "65280"
  },
  {
    "text": "might evolve so I'm gonna take you on the journey of a graph QL API that I've built with my team at Conde Nast and",
    "start": "65280",
    "end": "71960"
  },
  {
    "text": "ultimately what's happened to it over the course of just over two years and",
    "start": "71960",
    "end": "78530"
  },
  {
    "text": "I'm specifically talking about the backend for front-end pattern which some",
    "start": "78920",
    "end": "84420"
  },
  {
    "text": "of you may have heard of and if not it's okay I'm gonna give a crash course and I'm talking about this not just because",
    "start": "84420",
    "end": "90810"
  },
  {
    "text": "it's what I built at Canaan ass but also because in the industry this is quite a",
    "start": "90810",
    "end": "96299"
  },
  {
    "text": "common pattern for adopting graph QL and there are a lot of people out there with graph QL bffs so I wanted to give a talk",
    "start": "96299",
    "end": "104850"
  },
  {
    "text": "that goes a little bit beyond graph QL 101 because graph QL is no longer a bleeding edge technology and there are a",
    "start": "104850",
    "end": "111810"
  },
  {
    "text": "lot of people out there who have already adopted graph QL and are starting to feel the need to scale their api's so if",
    "start": "111810",
    "end": "119729"
  },
  {
    "text": "you have graph your own production there's a lot for you and if not then there'll be something for you as well so",
    "start": "119729",
    "end": "127920"
  },
  {
    "text": "here's what I'll be talking about my talk is split into four sections the first section will be a quick",
    "start": "127920",
    "end": "133290"
  },
  {
    "text": "introduction to graph QL and the BFF design pattern so I know some of you will or be familiar with these concepts but I'm",
    "start": "133290",
    "end": "139620"
  },
  {
    "text": "gonna get us all on the same page regardless secondly we're going to talk about building a graph QL vff how graph",
    "start": "139620",
    "end": "145980"
  },
  {
    "text": "QL and the BFF design pattern relate to each other and what it's like to actually build a graph QL BFF then I'm",
    "start": "145980",
    "end": "153810"
  },
  {
    "text": "going to talk about some problems or opportunities that might arise with this architecture and how you ultimately might want to scale your graph QL BFS",
    "start": "153810",
    "end": "160950"
  },
  {
    "text": "and finally I'm going to talk about the future of graph QL architecture some",
    "start": "160950",
    "end": "166650"
  },
  {
    "text": "industry trends and where we ultimately might want to evolve our graph to our architecture",
    "start": "166650",
    "end": "173300"
  },
  {
    "text": "all right Who am I I'm Michelle this is a photo of me I'm a",
    "start": "173300",
    "end": "178650"
  },
  {
    "text": "software engineer at Conde Nast in London and if you want to tweet me about graph QL or BFFs you can do so right",
    "start": "178650",
    "end": "184890"
  },
  {
    "text": "though all right section one an introduction to graph QL and BFFs we're",
    "start": "184890",
    "end": "191700"
  },
  {
    "text": "gonna start with graph QL so many of you will already know about graph QL but I",
    "start": "191700",
    "end": "197250"
  },
  {
    "text": "want to give a quick 101 regardless can I ask for a show of hands how many people are using graph QL in",
    "start": "197250",
    "end": "203310"
  },
  {
    "text": "production here ok it's like it's like a quarter a third this is good sis like a",
    "start": "203310",
    "end": "210150"
  },
  {
    "text": "mix all right so let's talk about what graph QL is here are a few definitions",
    "start": "210150",
    "end": "215340"
  },
  {
    "text": "if you go to the official graph QL website the documentation will tell you",
    "start": "215340",
    "end": "220380"
  },
  {
    "text": "that it is a query language for AP is I also quite like the definition of a",
    "start": "220380",
    "end": "225750"
  },
  {
    "text": "language for requesting remote data and finally you've probably had graph QL",
    "start": "225750",
    "end": "231299"
  },
  {
    "text": "talked about as the cool popular new alternative to rest and this is a",
    "start": "231299",
    "end": "237269"
  },
  {
    "text": "definition that I think encompasses all of that from how to graph QL which is a great website for learning how to graph",
    "start": "237269",
    "end": "243959"
  },
  {
    "text": "QL it's how to graph QL comm so they say graph QL is a new API standard that provides a more efficient powerful and",
    "start": "243959",
    "end": "250890"
  },
  {
    "text": "flexible alternative to rest and here are some things that graph QL is not",
    "start": "250890",
    "end": "256440"
  },
  {
    "text": "graph QL is not a database language and it's not related to graph databases in",
    "start": "256440",
    "end": "262830"
  },
  {
    "text": "any way and it's not anything to do with neo4j so it is a query language for API",
    "start": "262830",
    "end": "268470"
  },
  {
    "text": "is not for databases it provides interface to describe data regardless of",
    "start": "268470",
    "end": "274169"
  },
  {
    "text": "where that data is stored whether that's a database or another API or wherever graph QL is not just for react or",
    "start": "274169",
    "end": "282209"
  },
  {
    "text": "JavaScript developers so graph QL may be extremely popular with web developers",
    "start": "282209",
    "end": "289050"
  },
  {
    "text": "but javascript is not the only language in which you can write and work with graph QL so graph QL can be used",
    "start": "289050",
    "end": "296580"
  },
  {
    "text": "anywhere that a client communicates with an API regardless of the language so there are libraries for working with",
    "start": "296580",
    "end": "302129"
  },
  {
    "text": "graph QL in Python go Ruby Java etc the",
    "start": "302129",
    "end": "307499"
  },
  {
    "text": "list goes on here are some of the key differences between rest and graph QL so",
    "start": "307499",
    "end": "313949"
  },
  {
    "text": "in rust api's you'll usually have multiple endpoints so say you have a",
    "start": "313949",
    "end": "319139"
  },
  {
    "text": "content API that gives content for a news website you might have an endpoint",
    "start": "319139",
    "end": "325619"
  },
  {
    "text": "which is slash article and one which is slash video the article endpoint will give the article data the video endpoint",
    "start": "325619",
    "end": "331050"
  },
  {
    "text": "will give you video data in graph QL there is only one multi purpose endpoint",
    "start": "331050",
    "end": "337529"
  },
  {
    "text": "and this single endpoint can provide all the data that that API is concerned with",
    "start": "337529",
    "end": "342569"
  },
  {
    "text": "so if it's a Content API then you can go to slash graphically well to find out about articles videos galleries and",
    "start": "342569",
    "end": "349829"
  },
  {
    "text": "whatever else that API cares about so in rest you get the same set of fields from an endpoint every single",
    "start": "349829",
    "end": "356490"
  },
  {
    "text": "time so if I'm looking up an article I will always get the same say 50 fields every single time even if I only want",
    "start": "356490",
    "end": "363989"
  },
  {
    "text": "the title of an article if I make an it request to the article endpoint I'll probably get the body the contributors",
    "start": "363989",
    "end": "370169"
  },
  {
    "text": "that category is the tags a bunch of metadata and probably a list of that I",
    "start": "370169",
    "end": "376199"
  },
  {
    "text": "won't use so with graph QL you get exactly the fields that you asked for no",
    "start": "376199",
    "end": "381869"
  },
  {
    "text": "more and no less so you specify exactly the fields that you want and graph QL will give those to you and the key",
    "start": "381869",
    "end": "389489"
  },
  {
    "text": "concepts in graph QL are schema and query so the graph QL schema tells you",
    "start": "389489",
    "end": "394979"
  },
  {
    "text": "what fields you are able to request from the API and then you write a graph QL query describing the data fields that",
    "start": "394979",
    "end": "401669"
  },
  {
    "text": "you want it's kind of like a shopping list for all the data you want back from the API so you will",
    "start": "401669",
    "end": "407550"
  },
  {
    "text": "get back exactly the data that you asked for in your query so now we've done",
    "start": "407550",
    "end": "416190"
  },
  {
    "text": "crash course of graph QL let's do the BFF software design pattern which does",
    "start": "416190",
    "end": "421770"
  },
  {
    "text": "not stand for best friends forever it stands for a back-end for front-end",
    "start": "421770",
    "end": "427020"
  },
  {
    "text": "API so this is a software design pattern that was first popularized by SoundCloud",
    "start": "427020",
    "end": "432330"
  },
  {
    "text": "a number of years ago and it's a design pattern for internal api's so I'm",
    "start": "432330",
    "end": "437430"
  },
  {
    "text": "talking about api's that are internal to a particular organization rather than published as a third party API for the",
    "start": "437430",
    "end": "444720"
  },
  {
    "text": "public to use and so I want to talk about what the backend the front-end api",
    "start": "444720",
    "end": "450090"
  },
  {
    "text": "pattern is offering an alternative to and that is the one-size-fits-all api so",
    "start": "450090",
    "end": "456660"
  },
  {
    "text": "this is a monolithic api that is shared between multiple applications or front-ends inside of an organization it",
    "start": "456660",
    "end": "463260"
  },
  {
    "text": "most likely wraps the the primary data source inside of that organization so",
    "start": "463260",
    "end": "470300"
  },
  {
    "text": "might look like this where you have multiple applications all speaking to a",
    "start": "470300",
    "end": "475320"
  },
  {
    "text": "single shed api these applications might",
    "start": "475320",
    "end": "480720"
  },
  {
    "text": "have different user experiences or use different parts of that shared api but because it is a one-size-fits-all api",
    "start": "480720",
    "end": "488180"
  },
  {
    "text": "the api must serve all of these clients equally so it is a monolith that is a",
    "start": "488180",
    "end": "495120"
  },
  {
    "text": "common denominator between all platforms so it's not necessarily a bad idea to",
    "start": "495120",
    "end": "502620"
  },
  {
    "text": "share an API between different applications but there are some common pain points in this scenario firstly",
    "start": "502620",
    "end": "509460"
  },
  {
    "text": "different clients need different sets of data the one size fits all has to try",
    "start": "509460",
    "end": "515490"
  },
  {
    "text": "and serve all of these different needs and unfortunately it's almost impossible to provide the perfect endpoint for",
    "start": "515490",
    "end": "521219"
  },
  {
    "text": "every single client if it tries to do this the monolith is probably going to become increasingly unruly as it tries",
    "start": "521219",
    "end": "527970"
  },
  {
    "text": "to keep up with the demands of all the different clients secondly the Shedd api",
    "start": "527970",
    "end": "533760"
  },
  {
    "text": "becomes a bottleneck when rolling out new features so every time a new feature is required",
    "start": "533760",
    "end": "538920"
  },
  {
    "text": "the front-end team has to coordinate with the API team or the back-end team which is responsible for the single shed",
    "start": "538920",
    "end": "545009"
  },
  {
    "text": "API this API team then in turn has to balance the priorities of all of the",
    "start": "545009",
    "end": "550589"
  },
  {
    "text": "different clients and because of the nature of software your priority might",
    "start": "550589",
    "end": "556199"
  },
  {
    "text": "not always be the top of the list so this is where the backend for front-end",
    "start": "556199",
    "end": "562410"
  },
  {
    "text": "design pattern comes in so in order to solve the pain points of having one API",
    "start": "562410",
    "end": "567809"
  },
  {
    "text": "and multiple consumers the BFF pattern recommends building one API per client",
    "start": "567809",
    "end": "574609"
  },
  {
    "text": "so that means that each front-end essentially has its own custom API which is built and maintained as by the same",
    "start": "574609",
    "end": "582029"
  },
  {
    "text": "team as the front-end so might look a bit like this so a BFF is created as an",
    "start": "582029",
    "end": "589319"
  },
  {
    "text": "interface between each API consumer and a shed API or data resource the BFF",
    "start": "589319",
    "end": "595169"
  },
  {
    "text": "implements API logic that is specific to that particular application it's essentially a translation layout that",
    "start": "595169",
    "end": "602429"
  },
  {
    "text": "ensures data is transformed specifically to suit the needs of that particular client so clients might be using",
    "start": "602429",
    "end": "613049"
  },
  {
    "text": "multiple api's in which case the BFF can also act as a kind of API gateway that",
    "start": "613049",
    "end": "618389"
  },
  {
    "text": "is defiant just for a single application it will perform the task of aggregating",
    "start": "618389",
    "end": "623639"
  },
  {
    "text": "and combining all the data from a set of API s into a common format that is",
    "start": "623639",
    "end": "628739"
  },
  {
    "text": "convenient for the client so what are the benefits of this well firstly it's",
    "start": "628739",
    "end": "635730"
  },
  {
    "text": "easier to adopt the API as UI requirements change as a front-end developer now instead of having to wait",
    "start": "635730",
    "end": "642720"
  },
  {
    "text": "for the API team to create a particular endpoint for you or integrate a new field or a new set of data you now have",
    "start": "642720",
    "end": "649589"
  },
  {
    "text": "the power to just go ahead and make those changes yourself it also",
    "start": "649589",
    "end": "654959"
  },
  {
    "text": "simplifies the process of lining up server and client releases so now that one team manages both the UI and the API",
    "start": "654959",
    "end": "661709"
  },
  {
    "text": "there's no longer coordination that has to happen between a front end and a back end team thirdly because it's focused",
    "start": "661709",
    "end": "670289"
  },
  {
    "text": "the BFF API will be smaller than the shed single purpose API it'll probably be easier to understand and",
    "start": "670289",
    "end": "677069"
  },
  {
    "text": "navigate and we'll probably have smaller payloads if it's a REST API finally",
    "start": "677069",
    "end": "683189"
  },
  {
    "text": "you're able to aggregate multiple calls to downstream api's into a single call to the BFF which is a lot simpler and",
    "start": "683189",
    "end": "689730"
  },
  {
    "text": "often more performant so now that we're",
    "start": "689730",
    "end": "695670"
  },
  {
    "text": "on the same page about graph queue and BFFs let's talk about graph QL BFFs so I",
    "start": "695670",
    "end": "702660"
  },
  {
    "text": "want to talk about how graph QL and BFFs relate to each other and if you're a",
    "start": "702660",
    "end": "707699"
  },
  {
    "text": "graphical enthusiast or you listened really well in my crash course you might be thinking that a lot of the benefits",
    "start": "707699",
    "end": "713790"
  },
  {
    "text": "that I just mentioned of a BFF actually sound quite familiar to you and you",
    "start": "713790",
    "end": "719459"
  },
  {
    "text": "would be right because a lot of the benefits that I just mentioned actually come for free with graph QL and there's",
    "start": "719459",
    "end": "726029"
  },
  {
    "text": "a lot that is shared in terms of benefits between graph QL and BFFs for",
    "start": "726029",
    "end": "732029"
  },
  {
    "text": "example just as a BFF provides only the data that is needed by a client graph QL",
    "start": "732029",
    "end": "737370"
  },
  {
    "text": "allows clients the flexibility to define their own data needs the ffs reduce over",
    "start": "737370",
    "end": "743910"
  },
  {
    "text": "fetching since the BFF returns only the data for one particular client rather than many clients and graph QL reduces",
    "start": "743910",
    "end": "752009"
  },
  {
    "text": "over fetching because graph QL returns only the data that you actually requested in the query the ffs allow you",
    "start": "752009",
    "end": "759209"
  },
  {
    "text": "to combine multiple data sources into one single BFF interface and graph QL",
    "start": "759209",
    "end": "764610"
  },
  {
    "text": "allows you to combine multiple data sources into one single graph QL interface but even though there's a lot",
    "start": "764610",
    "end": "774209"
  },
  {
    "text": "of shed ground between graph QL and bffs graph QL is not necessarily equivalent",
    "start": "774209",
    "end": "779490"
  },
  {
    "text": "to a BFF API back-end for front-end is a design pattern that was invented before",
    "start": "779490",
    "end": "785879"
  },
  {
    "text": "graph QL and it might leverage either rest or graph QL and graph QL api's and",
    "start": "785879",
    "end": "791819"
  },
  {
    "text": "not always designed to be a BFF sometimes a graph QL API is built to be shared by multiple applications and it's",
    "start": "791819",
    "end": "799889"
  },
  {
    "text": "built to be generic but in my experience graph QL BFFs",
    "start": "799889",
    "end": "805560"
  },
  {
    "text": "actually very common and is a very common way for people to introduce graph QL to their codebase for the first time",
    "start": "805560",
    "end": "811010"
  },
  {
    "text": "so I've had of many teams introducing graph QL to their company or project in",
    "start": "811010",
    "end": "816060"
  },
  {
    "text": "the form of a BFF that will frequently rack legacy api's it'll frequently",
    "start": "816060",
    "end": "821820"
  },
  {
    "text": "aggregate multiple data sources possibly ease the transition to micro services or",
    "start": "821820",
    "end": "826860"
  },
  {
    "text": "help with migrations between different api's and this is my theory about why",
    "start": "826860",
    "end": "832230"
  },
  {
    "text": "graph QL bffs also popular so a BFF is a low-stakes way to introduce graph QL to",
    "start": "832230",
    "end": "839310"
  },
  {
    "text": "an organization its surface area is limited to just one application and it",
    "start": "839310",
    "end": "844770"
  },
  {
    "text": "does not require you to actually rewrite any downstream services or api's in graph QL so with this in mind I'm going",
    "start": "844770",
    "end": "855060"
  },
  {
    "text": "to tell you about the graph QL BFF that I built with my team at Conde Nast and I'll tell you where we started out and",
    "start": "855060",
    "end": "860279"
  },
  {
    "text": "then I will take you on the journey of where this BFF API has ended up after over two years in production but first",
    "start": "860279",
    "end": "869490"
  },
  {
    "text": "some context I work for Conde Nast which if you've never heard of it before is",
    "start": "869490",
    "end": "875210"
  },
  {
    "text": "the parent company and publisher of the magazine brands that you probably have heard of like Vogue and GQ and I always",
    "start": "875210",
    "end": "882990"
  },
  {
    "text": "feel the need to clarify when I give a graph QL talk that GQ is not a magazine about graph QL thank you it's my only",
    "start": "882990",
    "end": "892950"
  },
  {
    "text": "graph QL drink so for three years I've been working on a team that builds the",
    "start": "892950",
    "end": "897960"
  },
  {
    "text": "international websites for Vogue and GQ magazine which are all served by a single multi-tenant react application",
    "start": "897960",
    "end": "905180"
  },
  {
    "text": "these sites are currently fully powered by a graph QL API in production and have",
    "start": "905180",
    "end": "910350"
  },
  {
    "text": "been since early 2018 so that's just over two years so the content for Vogue",
    "start": "910350",
    "end": "917520"
  },
  {
    "text": "website needs to come from somewhere and if you've ever worked for a media company or for or built any product that",
    "start": "917520",
    "end": "923040"
  },
  {
    "text": "needs content then you will know that the Vogue website must be backed by a content management system or a CMS and",
    "start": "923040",
    "end": "930200"
  },
  {
    "text": "the content for our websites comes from an internally built content management system called co-pilot copilot has a",
    "start": "930200",
    "end": "937920"
  },
  {
    "text": "REST API which allows you to request data for content such as articles videos",
    "start": "937920",
    "end": "943829"
  },
  {
    "text": "galleries etc now when we first started working on the website application in",
    "start": "943829",
    "end": "950910"
  },
  {
    "text": "2017 graph QL was not really I mean it existed but it wasn't really a thing yet",
    "start": "950910",
    "end": "957149"
  },
  {
    "text": "it wasn't on our radar that much and it wasn't really that popular so of course copilot did not have a graphical API for",
    "start": "957149",
    "end": "963839"
  },
  {
    "text": "us to use and we didn't even really think about it so we used the REST API",
    "start": "963839",
    "end": "969180"
  },
  {
    "text": "and back to our application with this so",
    "start": "969180",
    "end": "975660"
  },
  {
    "text": "before graph QL our API architecture used to look something like this in a very simplified form a website",
    "start": "975660",
    "end": "983970"
  },
  {
    "text": "application which is written in react was speaking pretty much directly to",
    "start": "983970",
    "end": "989160"
  },
  {
    "text": "multiple REST API s and the most important of those api's was the content API from copilot lc/ms so we worked like",
    "start": "989160",
    "end": "998550"
  },
  {
    "text": "this with this architecture for about a year and launched the first vogue site or relaunched the first vogue site",
    "start": "998550",
    "end": "1004009"
  },
  {
    "text": "successfully with this architecture and overall it was fine but there were some",
    "start": "1004009",
    "end": "1010309"
  },
  {
    "text": "pain points that really started to make themselves known the more we started to scale and add more websites to out",
    "start": "1010309",
    "end": "1016639"
  },
  {
    "text": "multi-tenant application and here are the main problems that we had with the",
    "start": "1016639",
    "end": "1022250"
  },
  {
    "text": "REST API first of all the REST API was not always intuitive to use some of the",
    "start": "1022250",
    "end": "1028970"
  },
  {
    "text": "fields had really confusing names that we had to explain whenever we owned boarded a new developer to the codebase",
    "start": "1028970",
    "end": "1034730"
  },
  {
    "text": "and these abstract names sometimes made our react components really difficult for people to understand secondly we had",
    "start": "1034730",
    "end": "1043579"
  },
  {
    "text": "to make a multiple request to get all the data that we needed so to render an article we didn't just need to get the",
    "start": "1043579",
    "end": "1050120"
  },
  {
    "text": "data from the slash article end point we were making around 15 different requests to different end points of the same",
    "start": "1050120",
    "end": "1056570"
  },
  {
    "text": "content API we will fetching a wide range of related data such as categories",
    "start": "1056570",
    "end": "1062240"
  },
  {
    "text": "tags and contributor information from different end points and then trying to combine all this data together so number",
    "start": "1062240",
    "end": "1069530"
  },
  {
    "text": "three as you can imagine we were massively over fetch from all of these api's the jason",
    "start": "1069530",
    "end": "1075140"
  },
  {
    "text": "responds to each end point often included hundreds of fields and of these we would only use a tiny fraction and",
    "start": "1075140",
    "end": "1082540"
  },
  {
    "text": "unfortunately we went great at filtering out the data that we didn't need so a lot of this data did end up in the",
    "start": "1082540",
    "end": "1088610"
  },
  {
    "text": "client finally our react components were listed",
    "start": "1088610",
    "end": "1093710"
  },
  {
    "text": "with API related business logic rather than being mostly presentational as we",
    "start": "1093710",
    "end": "1098720"
  },
  {
    "text": "would prefer so this isn't necessarily the fault of the REST API because we're",
    "start": "1098720",
    "end": "1104780"
  },
  {
    "text": "the ones who put the logic there but something about an architecture was encouraging quite poor separation of ELQ",
    "start": "1104780",
    "end": "1111200"
  },
  {
    "text": "concerns and we incurred a lot of tech debt because of this we needed a clearer",
    "start": "1111200",
    "end": "1116240"
  },
  {
    "text": "distinction between our data layer and our view layer and we didn't really have them so to solve these problems in early",
    "start": "1116240",
    "end": "1124460"
  },
  {
    "text": "2018 we introduced graph QL to our project in the form of a back-end for front-end API although I don't think we",
    "start": "1124460",
    "end": "1131300"
  },
  {
    "text": "knew that we were creating a back-end for front-end API at the time so we wrapped all the rest api s that we were",
    "start": "1131300",
    "end": "1137270"
  },
  {
    "text": "using in a graph QL leo and now the react application instead of speaking",
    "start": "1137270",
    "end": "1143960"
  },
  {
    "text": "directly to any REST API s would speak to this graph QL layout and the graph QL",
    "start": "1143960",
    "end": "1149120"
  },
  {
    "text": "BFF was effectively shielding the react application from having to deal with any of the rest logic together so a react",
    "start": "1149120",
    "end": "1156740"
  },
  {
    "text": "application didn't have to glue together 15 different requests to make an article it would just request the article data",
    "start": "1156740",
    "end": "1163429"
  },
  {
    "text": "from graph QL now people asked how long",
    "start": "1163429",
    "end": "1169010"
  },
  {
    "text": "it takes to switch over to graph QL and of course this depends on the size and complexity of your application but for",
    "start": "1169010",
    "end": "1177830"
  },
  {
    "text": "us it took about three months so we integrated our new BFF API incrementally",
    "start": "1177830",
    "end": "1183490"
  },
  {
    "text": "making the switch literally page by page so we started with a category page as",
    "start": "1183490",
    "end": "1188660"
  },
  {
    "text": "you can see and we ended with the home page and by the end our websites were",
    "start": "1188660",
    "end": "1193730"
  },
  {
    "text": "100% power bi graph QL and all data that is required for the site is accessed",
    "start": "1193730",
    "end": "1199280"
  },
  {
    "text": "through a single graph QL interface and people to ask what the most challenging",
    "start": "1199280",
    "end": "1205309"
  },
  {
    "text": "part of switching DeGraw gl was and for us the most time-consuming part of this whole process was ensuring that all pages were",
    "start": "1205309",
    "end": "1212480"
  },
  {
    "text": "covered by really comprehensive acceptance tests so that we could ensure that there were no regressions when we",
    "start": "1212480",
    "end": "1218780"
  },
  {
    "text": "turned on the graph QL feature flag and we did break the article page about three times in this process but we",
    "start": "1218780",
    "end": "1225770"
  },
  {
    "text": "learned from our mistakes and we got there in the end and so now we're fully powered by graph QL and we have very",
    "start": "1225770",
    "end": "1232670"
  },
  {
    "text": "comprehensive acceptance tests to make sure that we don't break things so",
    "start": "1232670",
    "end": "1238850"
  },
  {
    "text": "here's what graph QL gave us firstly it gave us a really nice intuitively",
    "start": "1238850",
    "end": "1245360"
  },
  {
    "text": "designed API no more confusing names or confusing deeply nested relationships we",
    "start": "1245360",
    "end": "1252170"
  },
  {
    "text": "designed it in a way that actually made sense to us as product developers and was human readable secondly we gained",
    "start": "1252170",
    "end": "1259970"
  },
  {
    "text": "the ability to fetch only the data that we actually needed so no more over fetching because we",
    "start": "1259970",
    "end": "1265070"
  },
  {
    "text": "could specify exactly the fields that we wanted and we didn't have to filter through hundreds of lines of unnecessary",
    "start": "1265070",
    "end": "1271250"
  },
  {
    "text": "data to get what we actually wanted and we could do all of this in one request instead of 15 requests thirdly we now",
    "start": "1271250",
    "end": "1281150"
  },
  {
    "text": "have a single interface to interact with multiple downstream services so our react application now does not",
    "start": "1281150",
    "end": "1287330"
  },
  {
    "text": "have to care about the distinction between multiple REST API s and request data from them separately components can",
    "start": "1287330",
    "end": "1294830"
  },
  {
    "text": "now request the data that they need regardless of where that data comes from it can focus on being the presentational",
    "start": "1294830",
    "end": "1301370"
  },
  {
    "text": "leão finally we gained components free",
    "start": "1301370",
    "end": "1306440"
  },
  {
    "text": "of API related business logic graph QL really encouraged us to clean up a lot",
    "start": "1306440",
    "end": "1311720"
  },
  {
    "text": "of our tech debt around this and the data transformation that we were previously doing inside of our",
    "start": "1311720",
    "end": "1316970"
  },
  {
    "text": "components was now delegated to the graph QL AO leaving the components to focus solely on presentational logic so",
    "start": "1316970",
    "end": "1327230"
  },
  {
    "text": "we loved on you graphical API honestly we're a bit obsessed with it and it was a really successful development in our",
    "start": "1327230",
    "end": "1334250"
  },
  {
    "text": "architecture that made everyone working in the codebase extremely happy",
    "start": "1334250",
    "end": "1339690"
  },
  {
    "text": "so it encourages to clean up a lot about tech debt we felt really confident in our application and you come as to the",
    "start": "1339690",
    "end": "1345360"
  },
  {
    "text": "codebase for way less confused because instead of us following internal patterns that we had created ourselves",
    "start": "1345360",
    "end": "1351740"
  },
  {
    "text": "we'd we'd used a pattern which was open source and something that they could",
    "start": "1351740",
    "end": "1356879"
  },
  {
    "text": "easily familiarize themselves with but for now the API that we've built is just",
    "start": "1356879",
    "end": "1362580"
  },
  {
    "text": "being used for a single application we've created our own personal back-end",
    "start": "1362580",
    "end": "1367830"
  },
  {
    "text": "for front-end API and to foreshadow the next section of my talk I will say that",
    "start": "1367830",
    "end": "1374070"
  },
  {
    "text": "we always had a slight feeling that perhaps someday this API would come in",
    "start": "1374070",
    "end": "1379830"
  },
  {
    "text": "useful beyond the confines of just our application and we did keep this in the back of our minds while we were",
    "start": "1379830",
    "end": "1385320"
  },
  {
    "text": "designing our initial schema so we have",
    "start": "1385320",
    "end": "1391230"
  },
  {
    "text": "this graph QL the FF API which we love now what happens next so this section of",
    "start": "1391230",
    "end": "1399210"
  },
  {
    "text": "the talk is going to focus on some of the dilemmas that you might find yourself having once you've actually",
    "start": "1399210",
    "end": "1405090"
  },
  {
    "text": "built a graph QL BFF I'll tell you how we scaled our graph to our BFF and how",
    "start": "1405090",
    "end": "1410759"
  },
  {
    "text": "we've ultimately involved it into something that goes a little beyond the back end for front-end design pattern so",
    "start": "1410759",
    "end": "1421649"
  },
  {
    "text": "before I go on I want to stop here and be a bit philosophical and talk about",
    "start": "1421649",
    "end": "1426870"
  },
  {
    "text": "one of the most common criticisms of the BFF pattern which is duplication already",
    "start": "1426870",
    "end": "1433620"
  },
  {
    "text": "there's some risk of duplication in the graph QL BFF that I just described we're essentially re-implementing a shed",
    "start": "1433620",
    "end": "1440429"
  },
  {
    "text": "content API and if another application in the same company",
    "start": "1440429",
    "end": "1445620"
  },
  {
    "text": "perhaps wrapped the same API in graph QL or built a graph QL BFF wrapping this",
    "start": "1445620",
    "end": "1451500"
  },
  {
    "text": "API then our code would probably look pretty similar and I think that as",
    "start": "1451500",
    "end": "1457590"
  },
  {
    "text": "developers we are naturally averse to duplication we are obsessed sometimes",
    "start": "1457590",
    "end": "1464250"
  },
  {
    "text": "and often to a fault with making everything as dry and abstract as possible all of the time we really love",
    "start": "1464250",
    "end": "1471480"
  },
  {
    "text": "abstraction and will often aim to create a shed component function or service to avoid doing something more",
    "start": "1471480",
    "end": "1479240"
  },
  {
    "text": "than once so for many of us BFFs will feel counterintuitive because duplication is kind of inherent to the",
    "start": "1479240",
    "end": "1486740"
  },
  {
    "text": "BFF pattern so Sam Newman who was",
    "start": "1486740",
    "end": "1492110"
  },
  {
    "text": "speaking at this conference hi Sam if you're in the room one of the consented one of the concerns of having a single",
    "start": "1492110",
    "end": "1499460"
  },
  {
    "text": "BFF per user interface is that you can end up with lots of duplication between the BFFs themselves they may end up",
    "start": "1499460",
    "end": "1507170"
  },
  {
    "text": "performing the same types of aggregation will have the same or similar code for",
    "start": "1507170",
    "end": "1512360"
  },
  {
    "text": "interfacing with downstream services some people react to this by wanting to merge these back together and have a",
    "start": "1512360",
    "end": "1518990"
  },
  {
    "text": "general-purpose aggregating edge api service this model has proven time and",
    "start": "1518990",
    "end": "1524930"
  },
  {
    "text": "again to lead to highly bloated code with multiple concerns squashed together that's a damning review of creating",
    "start": "1524930",
    "end": "1533030"
  },
  {
    "text": "abstractions out of a BFF and I if you google the backend for front-end pattern",
    "start": "1533030",
    "end": "1539510"
  },
  {
    "text": "you will find some humans iconic blog posts from this from which this quote",
    "start": "1539510",
    "end": "1545270"
  },
  {
    "text": "was taken now I want to share another query which I really love by Sandi Metz",
    "start": "1545270",
    "end": "1551030"
  },
  {
    "text": "which is duplication is cheaper than the wrong abstraction so I really love this",
    "start": "1551030",
    "end": "1557660"
  },
  {
    "text": "quote and ever since I heard it I think about it every time I go to create a",
    "start": "1557660",
    "end": "1563090"
  },
  {
    "text": "abstract something out into a function or abstract something in some way I've been bent by creating the wrong",
    "start": "1563090",
    "end": "1569600"
  },
  {
    "text": "abstraction too many times and after being bent I really believe that when we",
    "start": "1569600",
    "end": "1575900"
  },
  {
    "text": "design curtain services we should always start from a place of duplication wherever possible we should optimize",
    "start": "1575900",
    "end": "1583130"
  },
  {
    "text": "later down the line once we've validated the actual need for a particular abstraction and validated that it is the",
    "start": "1583130",
    "end": "1589400"
  },
  {
    "text": "correct abstraction and I'm talking about this philosophy because on our",
    "start": "1589400",
    "end": "1595100"
  },
  {
    "text": "graph to our BFF Jenny we did ultimately create an abstraction to try and fix",
    "start": "1595100",
    "end": "1600320"
  },
  {
    "text": "some of the duplication that was inherent to our BFF but I don't suggest",
    "start": "1600320",
    "end": "1605630"
  },
  {
    "text": "that you do this without really questioning first if your abstraction is really necessary or if it",
    "start": "1605630",
    "end": "1611419"
  },
  {
    "text": "is the correct one and don't create a shed micro-service before you actually need one so there are costs associated",
    "start": "1611419",
    "end": "1620510"
  },
  {
    "text": "with creating a shed abstraction or in the case of what I'm going to talk about today a shed service once you start to",
    "start": "1620510",
    "end": "1629330"
  },
  {
    "text": "share something with other developers the stakes have risen and you have acquired essentially a burden so the",
    "start": "1629330",
    "end": "1637070"
  },
  {
    "text": "first cost is that you now have less ability to take risks and try out new things whenever you want so your",
    "start": "1637070",
    "end": "1643070"
  },
  {
    "text": "decisions now affect more than just your own application and you might not be able to change things as frequently as",
    "start": "1643070",
    "end": "1648590"
  },
  {
    "text": "you would like other people are now depending on your API to be stable and",
    "start": "1648590",
    "end": "1653720"
  },
  {
    "text": "not break their application which leads me to the second cost widget which is",
    "start": "1653720",
    "end": "1659390"
  },
  {
    "text": "you actually have to be careful I would say extra careful not to break other people's applications so five minutes of",
    "start": "1659390",
    "end": "1668299"
  },
  {
    "text": "downtime might be fine for you and your team's application but it might be critical for another application in the",
    "start": "1668299",
    "end": "1674720"
  },
  {
    "text": "organization so when you start to have a shed obstruction you really need to create a strategy around breaking",
    "start": "1674720",
    "end": "1681020"
  },
  {
    "text": "changes that's not to say that you should absolutely never create a shared",
    "start": "1681020",
    "end": "1687799"
  },
  {
    "text": "abstraction so assuming that you have done all of your due jealous due Jilla",
    "start": "1687799",
    "end": "1693110"
  },
  {
    "text": "due diligence and you've decided that the costs of sharing an abstract sharing",
    "start": "1693110",
    "end": "1698809"
  },
  {
    "text": "a service or an obstruction are worth it in your particular case then there are some compelling advantages the first one",
    "start": "1698809",
    "end": "1706400"
  },
  {
    "text": "is of course less duplication of efforts so now that multiple teams aren't building the exact same thing hopefully",
    "start": "1706400",
    "end": "1713419"
  },
  {
    "text": "developers will have more time to work on other perhaps more impactful projects rather than duplicating the same efforts",
    "start": "1713419",
    "end": "1720640"
  },
  {
    "text": "fix once benefit every web so now if there's a bug it can be fixed all in one",
    "start": "1720640",
    "end": "1726740"
  },
  {
    "text": "go the same goes for features and improvements you might benefit from an",
    "start": "1726740",
    "end": "1732830"
  },
  {
    "text": "edge case found by another application or gained a feature that you would not have thought to actually build yourself",
    "start": "1732830",
    "end": "1739770"
  },
  {
    "text": "finally you'll gain organizational alignment more teams in the organization will not be doing everything all things",
    "start": "1739770",
    "end": "1746760"
  },
  {
    "text": "in the same way so that opens up opportunity for collaboration in the",
    "start": "1746760",
    "end": "1751890"
  },
  {
    "text": "case of graph QL having a shared schema is really valuable because it means that teams will now have alignment on naming",
    "start": "1751890",
    "end": "1757530"
  },
  {
    "text": "which as we all know is a very difficult thing so with that in mind I'm going to",
    "start": "1757530",
    "end": "1763380"
  },
  {
    "text": "talk to you about how and why we scaled our graph QL BFF at Conde Nast and I'll tell you about the shared",
    "start": "1763380",
    "end": "1769080"
  },
  {
    "text": "abstraction that we ultimately created so when the question came up early last",
    "start": "1769080",
    "end": "1775650"
  },
  {
    "text": "year of what was next for our graph QL architecture we had been using our graph QL API in production for about a year we",
    "start": "1775650",
    "end": "1783930"
  },
  {
    "text": "were using our API to power a platform that is serving 21 different web sites",
    "start": "1783930",
    "end": "1788940"
  },
  {
    "text": "in ten countries across the world so that's International Vogue and GQ websites and our graph QL API was",
    "start": "1788940",
    "end": "1796530"
  },
  {
    "text": "serving around 200 million users each month which is a big number so by all",
    "start": "1796530",
    "end": "1804120"
  },
  {
    "text": "accounts our graphical API was quite successful so why did we feel the need",
    "start": "1804120",
    "end": "1809310"
  },
  {
    "text": "to actually scale beyond what we were already doing so when we first built our",
    "start": "1809310",
    "end": "1814590"
  },
  {
    "text": "graphical API who kind of rebels because it was 2018 and graph QL was not as popular as it is",
    "start": "1814590",
    "end": "1821070"
  },
  {
    "text": "now what we were doing was considered experimental and we really had to prove",
    "start": "1821070",
    "end": "1827010"
  },
  {
    "text": "the technical value of what we were doing we had to fight against the perception that we were introducing a",
    "start": "1827010",
    "end": "1833280"
  },
  {
    "text": "new technology for vanity reasons that didn't deliver any actual business value but now in 2020 it's a very different",
    "start": "1833280",
    "end": "1840750"
  },
  {
    "text": "world for graph QL graph QL is skyrocketing in popularity and everybody",
    "start": "1840750",
    "end": "1845790"
  },
  {
    "text": "wants to work with graph QL ap is and we started hearing from other engineering teams at Conde Nast that they were",
    "start": "1845790",
    "end": "1852180"
  },
  {
    "text": "thinking of introducing graph QL to that projects so we had wrapped the rest",
    "start": "1852180",
    "end": "1858330"
  },
  {
    "text": "content API that we used in graph QL we'd spent time designing a schema that",
    "start": "1858330",
    "end": "1864810"
  },
  {
    "text": "we really liked and that made sense to us and we had validated this schema in production for over a year and it did",
    "start": "1864810",
    "end": "1872220"
  },
  {
    "text": "seem kind of a shame to this to ourselves because other teams in the business was still using the REST",
    "start": "1872220",
    "end": "1877679"
  },
  {
    "text": "API that we had found difficult to work with we even discovered that there was another team building the urn graph QL",
    "start": "1877679",
    "end": "1884669"
  },
  {
    "text": "wrapper around the exact same REST API producing remarkably and I would say eerily similar results so with this in",
    "start": "1884669",
    "end": "1893640"
  },
  {
    "text": "mind it came time to think seriously about abstract about the part of our BFF that actually made sense to share with",
    "start": "1893640",
    "end": "1900210"
  },
  {
    "text": "other people and would be useful to many teams in the organization so this is the",
    "start": "1900210",
    "end": "1907049"
  },
  {
    "text": "new architecture that we introduced we decided to split our graph to your API",
    "start": "1907049",
    "end": "1912419"
  },
  {
    "text": "into to the core content API and the BFF",
    "start": "1912419",
    "end": "1919070"
  },
  {
    "text": "it was clear to us that the content related fields in our schema would be",
    "start": "1919159",
    "end": "1924390"
  },
  {
    "text": "useful to other teams so we decided to create a core content API making graph",
    "start": "1924390",
    "end": "1929970"
  },
  {
    "text": "QL fastclaw citizen for any application requesting data from our content management system copilot we'd already",
    "start": "1929970",
    "end": "1937169"
  },
  {
    "text": "written a schema and resolvers wrapping that REST API for ourselves but now we wanted to make this available for other",
    "start": "1937169",
    "end": "1942600"
  },
  {
    "text": "teams to use as well but we still felt that there was a need for the BFF the",
    "start": "1942600",
    "end": "1948870"
  },
  {
    "text": "core content API could not serve all of the data needs of our react application alone there are some parts of a schema",
    "start": "1948870",
    "end": "1955169"
  },
  {
    "text": "that were not content related they were quite specific to our particular application things like configuration or",
    "start": "1955169",
    "end": "1961830"
  },
  {
    "text": "integrations with some other third a third party API is that went via al BFF layer so we decided that resolvers for",
    "start": "1961830",
    "end": "1970380"
  },
  {
    "text": "these things would remain inside the BFF schema for now so here's what our",
    "start": "1970380",
    "end": "1977460"
  },
  {
    "text": "architecture looked like before we split out the content API into its own service as you can see the graph to your BFF is",
    "start": "1977460",
    "end": "1985380"
  },
  {
    "text": "speaking directly to the rest content API as well as some other API s and",
    "start": "1985380",
    "end": "1990830"
  },
  {
    "text": "here's the change that took place now our graph QL BFF will actually consume a",
    "start": "1990830",
    "end": "1997140"
  },
  {
    "text": "graph QL content API directly the logic required to wrap the REST API has now",
    "start": "1997140",
    "end": "2003409"
  },
  {
    "text": "been moved into its own service and the theft will consume pure graph QL content",
    "start": "2003409",
    "end": "2009309"
  },
  {
    "text": "data so now that graph QL service can be",
    "start": "2009309",
    "end": "2014770"
  },
  {
    "text": "used by other applications in place of the REST API it's now been elevated to the very esteem status of being a",
    "start": "2014770",
    "end": "2021220"
  },
  {
    "text": "official published graph geo API for the content management system itself and a",
    "start": "2021220",
    "end": "2029110"
  },
  {
    "text": "big part of the dream of this new architecture is that we would be consuming graph QL all the way down so",
    "start": "2029110",
    "end": "2034750"
  },
  {
    "text": "instead of carrying the complexity of wrapping the REST API inside of our BFF we could just consume pure organic graph",
    "start": "2034750",
    "end": "2041679"
  },
  {
    "text": "QL direct from the source from our new service so let's talk about implementing",
    "start": "2041679",
    "end": "2049840"
  },
  {
    "text": "this new architecture here's what we need to do we need to build a new",
    "start": "2049840",
    "end": "2055440"
  },
  {
    "text": "content micro service we need to integrate this micro service back into the existing BFF and we need to do this",
    "start": "2055440",
    "end": "2062888"
  },
  {
    "text": "incrementally and crucially without breaking 21 production websites and",
    "start": "2062889",
    "end": "2069840"
  },
  {
    "text": "first of all the building and here's a lovely team Vudu so I was part of the team that we actually looked quite",
    "start": "2069840",
    "end": "2076599"
  },
  {
    "text": "angelic with this light behind us so I was part of the team that built this new",
    "start": "2076599",
    "end": "2081638"
  },
  {
    "text": "micro service but because this micro service was now going to serve the entire organization instead of just our",
    "start": "2081639",
    "end": "2087908"
  },
  {
    "text": "particular team we assembled the team with engineers from across multiple areas in the business to build this",
    "start": "2087909",
    "end": "2093638"
  },
  {
    "text": "together so the team included myself and some other people from the team that had",
    "start": "2093639",
    "end": "2098740"
  },
  {
    "text": "built the graph QL BFF that I've been talking about but the team also included some engineers who were working on the",
    "start": "2098740",
    "end": "2105130"
  },
  {
    "text": "other graph QL BFF that was wrapping the same REST API and the team also included",
    "start": "2105130",
    "end": "2111250"
  },
  {
    "text": "some people who had worked on the REST API itself so it was a pretty solid mix",
    "start": "2111250",
    "end": "2116859"
  },
  {
    "text": "of experiences for this team so as a developer it is quite a rare opportunity",
    "start": "2116859",
    "end": "2122740"
  },
  {
    "text": "when you're given the time and space to improve on something that you've built and this time the challenge was",
    "start": "2122740",
    "end": "2130660"
  },
  {
    "text": "different so the challenge this time was to take the schema that we had already used in production for over a year and",
    "start": "2130660",
    "end": "2137170"
  },
  {
    "text": "we needed to make it generic enough to be shed by application other than our own so although this new",
    "start": "2137170",
    "end": "2144220"
  },
  {
    "text": "graph QL service is representing pretty much the same content data as what was in the BFF we now have the license to",
    "start": "2144220",
    "end": "2151270"
  },
  {
    "text": "make improvements with hindsight in mind so we can take all the learnings and pain points of using our schema for over",
    "start": "2151270",
    "end": "2157780"
  },
  {
    "text": "a year in production and actually make something better to be used by other people we also have the added insight of",
    "start": "2157780",
    "end": "2164109"
  },
  {
    "text": "engineers who worked on other relevant teams and have experienced use cases that we did not experience on our team",
    "start": "2164109",
    "end": "2170230"
  },
  {
    "text": "so we built it this is it the core content API so we spent a few months",
    "start": "2170230",
    "end": "2177250"
  },
  {
    "text": "building it and then there was the final challenge which is to integrate this new",
    "start": "2177250",
    "end": "2183160"
  },
  {
    "text": "content API back into the existing BFFs chemo now as a reminder here's what our",
    "start": "2183160",
    "end": "2190240"
  },
  {
    "text": "application architecture now looks like the new graph QL content API may replace",
    "start": "2190240",
    "end": "2197500"
  },
  {
    "text": "parts of the BFF schema but the BFF is still very much the graph QL point of",
    "start": "2197500",
    "end": "2202510"
  },
  {
    "text": "entry for our application there is data from other sources that is still represented in the BFF as you see from",
    "start": "2202510",
    "end": "2209320"
  },
  {
    "text": "the other REST API is down the bottom and here's what we won in order to",
    "start": "2209320",
    "end": "2214359"
  },
  {
    "text": "integrate with the new microservice we need a way to forward or proxy content queries through to our new content API",
    "start": "2214359",
    "end": "2220270"
  },
  {
    "text": "via the BFF and we need the ability to integrate with the new content API",
    "start": "2220270",
    "end": "2225510"
  },
  {
    "text": "incrementally so if you're familiar with the graph QL space you might know that",
    "start": "2225510",
    "end": "2232109"
  },
  {
    "text": "there is a new open source tool from Apollo who is the dominant player in the",
    "start": "2232109",
    "end": "2237339"
  },
  {
    "text": "graph QL space and this was called a polar Federation Federation is Apollo's",
    "start": "2237339",
    "end": "2242619"
  },
  {
    "text": "answer to implementing graph QL in a microservices architecture it's replacing schema stitching which has now",
    "start": "2242619",
    "end": "2249010"
  },
  {
    "text": "been deprecated by Apple ooh so I'm personally quite excited about a polar Federation and I would like to use it",
    "start": "2249010",
    "end": "2255910"
  },
  {
    "text": "but when we looked into using a pulley Federation for our purposes here it",
    "start": "2255910",
    "end": "2261070"
  },
  {
    "text": "didn't seem quite right quite right for our use case right now while we still have the BFF schema and it would",
    "start": "2261070",
    "end": "2267730"
  },
  {
    "text": "probably require a bit of an architectural shift for us to use it so even though it's like to use",
    "start": "2267730",
    "end": "2274330"
  },
  {
    "text": "eventually what we really wanted right now was a minimal way to get started querying this new content API without",
    "start": "2274330",
    "end": "2280630"
  },
  {
    "text": "having to react attacked any further and we're happy to go with something imperfect and iterate on it later so we",
    "start": "2280630",
    "end": "2288130"
  },
  {
    "text": "ultimately chose something called schema delegation which is a method made available by Apple ooh basically it's a",
    "start": "2288130",
    "end": "2295480"
  },
  {
    "text": "way to forwards graph QL queries from one graph QL service to another so you",
    "start": "2295480",
    "end": "2301120"
  },
  {
    "text": "set up what's called a remote schema and you delegate queries to that schema to",
    "start": "2301120",
    "end": "2306520"
  },
  {
    "text": "be resolved so in this diagram you'll see the content graph QL micro Service is our remote schema and we delegate all",
    "start": "2306520",
    "end": "2313600"
  },
  {
    "text": "content related queries to this service to be resolved any non content related",
    "start": "2313600",
    "end": "2319540"
  },
  {
    "text": "queries to the BFF results locally by the BFF so this option was a little bit",
    "start": "2319540",
    "end": "2326470"
  },
  {
    "text": "messy for various reasons that are too niche to go into but this approach got us forwarding content queries through to",
    "start": "2326470",
    "end": "2333460"
  },
  {
    "text": "our new service with minimal effort and pretty minimal code changes most",
    "start": "2333460",
    "end": "2339670"
  },
  {
    "text": "importantly for us we were now able to integrate incrementally so much like how we initially released graph QL we set up",
    "start": "2339670",
    "end": "2347470"
  },
  {
    "text": "schema delegation per content type so we could switch the feature flag on page by",
    "start": "2347470",
    "end": "2352570"
  },
  {
    "text": "page and what are the results of all of this well we now have a vertical that",
    "start": "2352570",
    "end": "2361270"
  },
  {
    "text": "looks exactly the same well the ply of a back-end developer",
    "start": "2361270",
    "end": "2366450"
  },
  {
    "text": "except underneath the surface unbeknownst to all the readers of Vogue Germany you want to catch up on the",
    "start": "2366450",
    "end": "2372640"
  },
  {
    "text": "German fashion we can use the article data is now coming from a different place so instead of the article data",
    "start": "2372640",
    "end": "2379570"
  },
  {
    "text": "coming from the BFF that data is now coming from a beautiful content micro",
    "start": "2379570",
    "end": "2385150"
  },
  {
    "text": "service somewhere else and the developers that work on this application might now have some more free time to",
    "start": "2385150",
    "end": "2391930"
  },
  {
    "text": "work on other features that readers actually will see and notice on the front page and they're much happier",
    "start": "2391930",
    "end": "2397390"
  },
  {
    "text": "because now they don't have to maintain all that local resolver code well that",
    "start": "2397390",
    "end": "2405520"
  },
  {
    "text": "fantasy isn't quite real just yet this is actually still a work in progress and we're still in the process",
    "start": "2405520",
    "end": "2411280"
  },
  {
    "text": "of migrating over to using the view content micro service but in the",
    "start": "2411280",
    "end": "2417550"
  },
  {
    "text": "meantime several other engineering teams at Conde Nast have also started to use",
    "start": "2417550",
    "end": "2422680"
  },
  {
    "text": "this new service so it's already validating the model that we were going for so the other team that had also",
    "start": "2422680",
    "end": "2430870"
  },
  {
    "text": "wrapped the same graph QL API at the same REST API and now using this graph QL service so that's pretty cool",
    "start": "2430870",
    "end": "2439800"
  },
  {
    "text": "so now the final section the future of graph QL architecture so I've shown you",
    "start": "2439800",
    "end": "2447190"
  },
  {
    "text": "how my graph QL architecture has evolved but I have some ideas about how it might",
    "start": "2447190",
    "end": "2452770"
  },
  {
    "text": "evolve even further in the future so I want to talk about where graph QL is headed this year starting with some",
    "start": "2452770",
    "end": "2458920"
  },
  {
    "text": "industry trends industry trends number one graph QL adoption is growing and",
    "start": "2458920",
    "end": "2465880"
  },
  {
    "text": "many more api's will be built with graph QL in 2020 so these are the results of",
    "start": "2465880",
    "end": "2472540"
  },
  {
    "text": "the state of JavaScript survey in 2019 which has 21,000 respondents so in 2016",
    "start": "2472540",
    "end": "2478930"
  },
  {
    "text": "5% of JavaScript devs have used graph QL compare that to 2019 39 percent of",
    "start": "2478930",
    "end": "2484330"
  },
  {
    "text": "JavaScript developers had used graph QL in 2016 36 percent had never heard of it",
    "start": "2484330",
    "end": "2489850"
  },
  {
    "text": "but now in in 2019 only 5% had never heard of graph QL so I expect these",
    "start": "2489850",
    "end": "2495460"
  },
  {
    "text": "numbers to continue growing in 2020 industry trend number 2 graph QL",
    "start": "2495460",
    "end": "2503080"
  },
  {
    "text": "architecture is moving towards federated microservices with a polar Federation so",
    "start": "2503080",
    "end": "2508900"
  },
  {
    "text": "when I was at graph QL Summit last year this was a really clear theme and a really clear takeaway from the",
    "start": "2508900",
    "end": "2514450"
  },
  {
    "text": "conference and nearly every speaker from a large organization using graph QL spoke about the architecture evolving in",
    "start": "2514450",
    "end": "2521350"
  },
  {
    "text": "this way graph QL API is are becoming a set of federated micro services the",
    "start": "2521350",
    "end": "2529480"
  },
  {
    "text": "ideal graph QL API of the future will be an API gateway that allows you to query",
    "start": "2529480",
    "end": "2534550"
  },
  {
    "text": "seamlessly for data for multiple different micro services I think that it's a natural progression as",
    "start": "2534550",
    "end": "2541119"
  },
  {
    "text": "organizations are starting to scale their graph QL api's engineers are",
    "start": "2541119",
    "end": "2546190"
  },
  {
    "text": "finding that a monolithic graph QL API needs to be split out into micro services to be worked or more",
    "start": "2546190",
    "end": "2551619"
  },
  {
    "text": "efficiently or they're finding that people have built graph QL services all",
    "start": "2551619",
    "end": "2556839"
  },
  {
    "text": "around the organization and it would be convenient if they could share schema so",
    "start": "2556839",
    "end": "2564249"
  },
  {
    "text": "Poli Federation has been out for about a year now and given Apple is enormous influence in the graph QL space I expect",
    "start": "2564249",
    "end": "2571749"
  },
  {
    "text": "that this will become industry standard and personally I would really like to start using a polar Federation so the",
    "start": "2571749",
    "end": "2580150"
  },
  {
    "text": "final industry trend of note is that graph QL architecture is moving towards one Universal data graph per",
    "start": "2580150",
    "end": "2585789"
  },
  {
    "text": "organization so this is kind of related to the form a trend organizations will",
    "start": "2585789",
    "end": "2592359"
  },
  {
    "text": "seek to combine all of their graph QL services into one common data graph shared by everyone in the organization",
    "start": "2592359",
    "end": "2598749"
  },
  {
    "text": "and it will look something like this a data graph for the entire organization a",
    "start": "2598749",
    "end": "2604299"
  },
  {
    "text": "gateway to every graph QL Micro service that is earned by that company teams",
    "start": "2604299",
    "end": "2609819"
  },
  {
    "text": "able to query for any data that the organization earns and which is in graph QL in one place and seamlessly combine",
    "start": "2609819",
    "end": "2616299"
  },
  {
    "text": "data from multiple different places so",
    "start": "2616299",
    "end": "2622089"
  },
  {
    "text": "where does this leave a humble BFF pattern well with graph QL becoming more",
    "start": "2622089",
    "end": "2627489"
  },
  {
    "text": "widespread across organizations graph QL architecture patterns are ultimately evolving beyond the BFF pattern but",
    "start": "2627489",
    "end": "2635529"
  },
  {
    "text": "regardless of this I still think that if you are introducing graph QL to an organization for the very first time or",
    "start": "2635529",
    "end": "2641440"
  },
  {
    "text": "you're a very small organization then the BFF pattern is still a good place to stop you may ultimately evolve it into",
    "start": "2641440",
    "end": "2648279"
  },
  {
    "text": "something bigger but when you do you will be informed by real world usage and",
    "start": "2648279",
    "end": "2653999"
  },
  {
    "text": "thinking back to what I said earlier about the similarities between graph two and bffs here's what I think now graph",
    "start": "2653999",
    "end": "2661359"
  },
  {
    "text": "QL is not a like-for-like replacement for a BFF but it solves enough of the",
    "start": "2661359",
    "end": "2666400"
  },
  {
    "text": "same problems that if you evolve your architecture towards consuming pure graph QL micro services you might find",
    "start": "2666400",
    "end": "2672910"
  },
  {
    "text": "that you no longer actually need a FF and what do I want",
    "start": "2672910",
    "end": "2680020"
  },
  {
    "text": "Michell Guerra of Conde Nast with y1 out architecture to end up like so these",
    "start": "2680020",
    "end": "2686320"
  },
  {
    "text": "three trends in mind this is the architecture that I personally would really like to move towards I'd like to",
    "start": "2686320",
    "end": "2692740"
  },
  {
    "text": "get to a point where we could remove the existing BFF and speak directly to a single Universal Conde Nast graph that",
    "start": "2692740",
    "end": "2699580"
  },
  {
    "text": "is backed by graph QL micro-services if we have the ability to get all of our",
    "start": "2699580",
    "end": "2704860"
  },
  {
    "text": "application data via pure graph QL from a single endpoint then there's no need to keep our application level BFF I",
    "start": "2704860",
    "end": "2711810"
  },
  {
    "text": "think that the BFF will be useful for a while and it will probably probably be a while before we remove it but if we",
    "start": "2711810",
    "end": "2719380"
  },
  {
    "text": "convert the wide organization to building api's graph QL first behind the Gateway then ultimately I think we might",
    "start": "2719380",
    "end": "2725800"
  },
  {
    "text": "grow out of this pattern and now much like this turtle I don't want to rush",
    "start": "2725800",
    "end": "2732580"
  },
  {
    "text": "the process of evolving our architecture I want to be thoughtful about how we scale our graph QL and I would like to",
    "start": "2732580",
    "end": "2739300"
  },
  {
    "text": "continue validating all of our obstructions before we make them now I",
    "start": "2739300",
    "end": "2745450"
  },
  {
    "text": "have two closing thoughts and takeaways from this entire graph QL journey the",
    "start": "2745450",
    "end": "2751480"
  },
  {
    "text": "first one is that I really believe in focusing on incremental change and we've done this throughout our entire graph QL",
    "start": "2751480",
    "end": "2757720"
  },
  {
    "text": "journey and I think that it's proven to be very important so you may dream of",
    "start": "2757720",
    "end": "2763600"
  },
  {
    "text": "having an ultimate graph QL gateway of micro services but if you're evolving",
    "start": "2763600",
    "end": "2768730"
  },
  {
    "text": "the architecture of a production application then this isn't necessarily realistic and you need to start smaller",
    "start": "2768730",
    "end": "2774300"
  },
  {
    "text": "BIGBANG BIGBANG releases are risky and if you build something for too long in",
    "start": "2774300",
    "end": "2779320"
  },
  {
    "text": "isolation you might build the wrong thing so try and get in production as soon as possible and keep going even if",
    "start": "2779320",
    "end": "2787000"
  },
  {
    "text": "it's not your ideal solution or architecture I'm related to this during optimized 2le we could have built our",
    "start": "2787000",
    "end": "2793870"
  },
  {
    "text": "content API as the generic official organization-wide API in the first place",
    "start": "2793870",
    "end": "2798910"
  },
  {
    "text": "but we built it fast just for one application and I think that ultimately we created a better API because of this",
    "start": "2798910",
    "end": "2804940"
  },
  {
    "text": "because by the time we went to design a replacement for the REST API we had a year of learnings and product",
    "start": "2804940",
    "end": "2810970"
  },
  {
    "text": "experience to inform this we were also able to take more risks along the way as we didn't yet have the burden of",
    "start": "2810970",
    "end": "2816910"
  },
  {
    "text": "supporting other clients with a published API and that is the end thank",
    "start": "2816910",
    "end": "2824830"
  },
  {
    "text": "you for having me and good luck on your graphical journeys [Applause]",
    "start": "2824830",
    "end": "2831980"
  }
]