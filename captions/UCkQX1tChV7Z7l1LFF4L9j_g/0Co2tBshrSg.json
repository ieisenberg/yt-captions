[
  {
    "text": "hey Java developers did you know that Microsoft supports your workload with abundant choices whether you're working",
    "start": "900",
    "end": "6660"
  },
  {
    "text": "on a Java app app server or framework learn more at developer.microsoft.com forward slash",
    "start": "6660",
    "end": "12540"
  },
  {
    "text": "java Cloud Computing can be thought of as two",
    "start": "12540",
    "end": "19260"
  },
  {
    "text": "or as today's guests will discuss three different ways the first wave of cloud computing can be describe this",
    "start": "19260",
    "end": "24840"
  },
  {
    "text": "virtualization along became the VM and we no longer were running on our physical computes we introduced virtual",
    "start": "24840",
    "end": "31439"
  },
  {
    "text": "machines to our apps we improve density resiliency operations the second wave",
    "start": "31439",
    "end": "36780"
  },
  {
    "text": "came along with containers and we built orchestrators like kubernetes to help manage the startup times decrease we",
    "start": "36780",
    "end": "42420"
  },
  {
    "text": "improved isolation between teams we improve flow velocity we Embrace devops",
    "start": "42420",
    "end": "47520"
  },
  {
    "text": "we also really introduce the network into how our applications operated we've had to adapt and think about that as",
    "start": "47520",
    "end": "53280"
  },
  {
    "text": "we've been building apps taking all of that into consideration many have described serverless or functions as a",
    "start": "53280",
    "end": "59100"
  },
  {
    "text": "service as a third wave of cloud compute today's guest the CEO of fermion Technologies is working on functions as",
    "start": "59100",
    "end": "65760"
  },
  {
    "text": "a service delivered via wasm a web assembly and that will be the topic today's podcast hi my name is Wes rice",
    "start": "65760",
    "end": "71280"
  },
  {
    "text": "I'm a technical principal with thoughtworks and codes to the infoq podcast Edition I chair a software",
    "start": "71280",
    "end": "76500"
  },
  {
    "text": "conference called qcon San Francisco qcon is a community of senior software Engineers focused on sharing practical",
    "start": "76500",
    "end": "82560"
  },
  {
    "text": "no marketing based solutions to real world engineering problems if you search the web for deeply technical topics and",
    "start": "82560",
    "end": "88560"
  },
  {
    "text": "ran across videos on infoqueue odds are you've seen some of the talks I'm referring to about qcon if you're",
    "start": "88560",
    "end": "93840"
  },
  {
    "text": "interested in being a part of qcon and contributing to that conversation the next one is happening at the end of October in the Bay Area check us out at",
    "start": "93840",
    "end": "100020"
  },
  {
    "text": "Yukon sf.com as I mentioned today our guest is Matt butcher Matt is a founding",
    "start": "100020",
    "end": "105720"
  },
  {
    "text": "member of dozens of Open Source projects including Helm Cloud native application bundles crustlet Brigade open",
    "start": "105720",
    "end": "111899"
  },
  {
    "text": "application model Glide the PHP HTML5 processor and query path he's contributed to over 200 open source",
    "start": "111899",
    "end": "118560"
  },
  {
    "text": "projects spanning dozens of programming languages today on the podcast we're talking about distributed systems and",
    "start": "118560",
    "end": "124740"
  },
  {
    "text": "how webassembly can be used to implement functions as a service Matt welcome to the podcast thanks for having me Wes in",
    "start": "124740",
    "end": "131520"
  },
  {
    "text": "that intro I talked about two waves of cloud compute you talk about a third what is the third wave of cloud compute",
    "start": "131520",
    "end": "137220"
  },
  {
    "text": "yeah and actually spending a little time on the first two autobiographically kind of helps articulate why I think there's",
    "start": "137220",
    "end": "143700"
  },
  {
    "text": "a third you know I got into cloud services really back when openstack got",
    "start": "143700",
    "end": "150000"
  },
  {
    "text": "started I had joined HP and joined the HP Cloud group right when they really",
    "start": "150000",
    "end": "155220"
  },
  {
    "text": "committed a lot of resources into developing openstack which had a full virtual machine layer and object storage",
    "start": "155220",
    "end": "161459"
  },
  {
    "text": "and networking and all of that I came into it as a Drupal developer of all things you know I was doing content",
    "start": "161459",
    "end": "167400"
  },
  {
    "text": "management systems and having a great time it was running the developer CMS system for HP and as soon as I got like",
    "start": "167400",
    "end": "174540"
  },
  {
    "text": "my first taste of the virtual machine world I was just totally hooked right because it felt magical in in the past",
    "start": "174540",
    "end": "181800"
  },
  {
    "text": "up until that time we really thought about the relationship between a piece of hardware and the operating system as",
    "start": "181800",
    "end": "188160"
  },
  {
    "text": "being sort of like one to one right my Hardware at any given time can only run one operating system and you know I'm",
    "start": "188160",
    "end": "194400"
  },
  {
    "text": "one of those people who's been dual booting with Linux since you know the 90s and suddenly the game changed right",
    "start": "194400",
    "end": "200280"
  },
  {
    "text": "and not only that but I didn't have to stand up a server anymore right I could essentially rent space on somebody",
    "start": "200280",
    "end": "205379"
  },
  {
    "text": "else's server and pay their electricity bills to run my application right yeah it was magic yeah magic is exactly the",
    "start": "205379",
    "end": "212580"
  },
  {
    "text": "word that it felt like at that time right and I was just hooked and got really into that world and had a great",
    "start": "212580",
    "end": "218400"
  },
  {
    "text": "time working on openstack then Along Came containers and you know things",
    "start": "218400",
    "end": "223620"
  },
  {
    "text": "changed up for me job-wise and I ended up in a different job working on containers and at the time I sort of was",
    "start": "223620",
    "end": "230819"
  },
  {
    "text": "trying to wrestle through this sort of inner conflict right our container is",
    "start": "230819",
    "end": "235980"
  },
  {
    "text": "going to defeat virtual machines or our virtual machines going to defeat containers and I was at the time really",
    "start": "235980",
    "end": "242159"
  },
  {
    "text": "sort of myopically looking at these as competitive Technologies where one would come out the Victor and the other one",
    "start": "242159",
    "end": "247799"
  },
  {
    "text": "would you know Fall by the wayside your computers right as we've seen happen so many other times with different",
    "start": "247799",
    "end": "253200"
  },
  {
    "text": "Technologies and it took me a while really all through my Deus days up until Microsoft acquired Deus and I got a view",
    "start": "253200",
    "end": "260400"
  },
  {
    "text": "of what it looked like inside the Sausage Factory to realize that no what we weren't seeing is two competing",
    "start": "260400",
    "end": "265860"
  },
  {
    "text": "Technologies we were really seeing two waves of computing happen and the first one was us learning how to virtualize",
    "start": "265860",
    "end": "272280"
  },
  {
    "text": "workloads using a VM style and then containers offered an alternative way with some different pros and some",
    "start": "272280",
    "end": "277620"
  },
  {
    "text": "different cons but when you looked at the Venn diagram of features and benefits and even patterns that we used",
    "start": "277620",
    "end": "283860"
  },
  {
    "text": "right there was actually very little overlap between the two surprisingly little overlap between the two so I",
    "start": "283860",
    "end": "289500"
  },
  {
    "text": "started kind of reconceptualizing the cloud compute world as you know kind of having this sort of wavy kind of",
    "start": "289500",
    "end": "295740"
  },
  {
    "text": "structure and so here we are at Microsoft right the team that used to be Deus and then we joined micro Microsoft",
    "start": "295740",
    "end": "301259"
  },
  {
    "text": "and we gain new developers from other parts of Microsoft and we start to interact with you know the functions as",
    "start": "301259",
    "end": "307740"
  },
  {
    "text": "a service team the iot team the AKs team and all of these different groups inside",
    "start": "307740",
    "end": "312780"
  },
  {
    "text": "of azure and get a real look a very very eye-opening look for what all of this",
    "start": "312780",
    "end": "318600"
  },
  {
    "text": "stuff looks like under the hood and what the real struggles are to run a cloud at",
    "start": "318600",
    "end": "323699"
  },
  {
    "text": "scale right I hate using the term at scale but that's really what it is there but also you know we're doing open",
    "start": "323699",
    "end": "329460"
  },
  {
    "text": "source and we're engaged with startups and medium-sized companies and large companies all of whom are trying to build Technologies using this stuff you",
    "start": "329460",
    "end": "336300"
  },
  {
    "text": "know containers virtual machines object storage and stuff like that and so we start seeing where both the mega Corp",
    "start": "336300",
    "end": "343800"
  },
  {
    "text": "and the startups are having a hard time and we're trying to solve this by using",
    "start": "343800",
    "end": "349139"
  },
  {
    "text": "containers and using virtual machines and at some point we started to realize hey there are problems we can't solve with either of these Technologies right",
    "start": "349139",
    "end": "355199"
  },
  {
    "text": "we can only push the startup time to Containers down to you know a few hundred milliseconds and that's if",
    "start": "355199",
    "end": "360419"
  },
  {
    "text": "you're really packing stuff in and really careful about it you know virtual machine images are always going to be",
    "start": "360419",
    "end": "366120"
  },
  {
    "text": "large because you've always got to package the kernel so we started this checklist of things and at some point it sort of became the checklist of what is",
    "start": "366120",
    "end": "373020"
  },
  {
    "text": "the next wave of cloud computing and that's where we got into webassembly right we start looking around and saying",
    "start": "373020",
    "end": "378960"
  },
  {
    "text": "okay what technology candidates are there that might kind of fill a new compute Niche where we can pack",
    "start": "378960",
    "end": "385740"
  },
  {
    "text": "something together and distribute it onto a cloud platform and have the cloud platform executed serverless at the time",
    "start": "385740",
    "end": "391500"
  },
  {
    "text": "is getting and we should come back to servers like this later because it's an enticing topic on its own serverless is getting popular but wasn't necessarily",
    "start": "391500",
    "end": "397800"
  },
  {
    "text": "solving that problem and we wanted to address it more at an infrastructure layer and say is there a third kind of",
    "start": "397800",
    "end": "403259"
  },
  {
    "text": "cloud compute and after looking around at a couple of different Technologies we landed on webassembly of all things you",
    "start": "403259",
    "end": "409800"
  },
  {
    "text": "know a browser technology but what made it good for the browser right that security isolation model small binary",
    "start": "409800",
    "end": "417000"
  },
  {
    "text": "sizes fast startup times right those are just core things you have to to have in a web browser people aren't going to",
    "start": "417000",
    "end": "423000"
  },
  {
    "text": "wait for the application to start they're not going to tolerate being able to root your system through the browser",
    "start": "423000",
    "end": "428160"
  },
  {
    "text": "and so all these security and performance characteristics and multi-language multi-architecture characteristics were important for the",
    "start": "428160",
    "end": "434280"
  },
  {
    "text": "browser and that list was starting to match up very closely with the list of things that we were looking for in this",
    "start": "434280",
    "end": "440819"
  },
  {
    "text": "kind of third wave of cloud computing so this became kind of our covid project you know we spent our Fridays what would",
    "start": "440819",
    "end": "446699"
  },
  {
    "text": "it mean to try and write a cloud compute layer with webassembly and that became",
    "start": "446699",
    "end": "452340"
  },
  {
    "text": "crustlet which is a webassembly runtime essentially for kubernetes and we were",
    "start": "452340",
    "end": "458099"
  },
  {
    "text": "happy with that but we started saying happy yes but is this the right complete",
    "start": "458099",
    "end": "463620"
  },
  {
    "text": "solution well probably not and that was about the time we thought okay it's time to do the startup thing based on all the",
    "start": "463620",
    "end": "470699"
  },
  {
    "text": "knowledge we've accrued about how web assembly Works we're going to start without the presupposition that we need to run inside of a container ecosystem",
    "start": "470699",
    "end": "477240"
  },
  {
    "text": "like kubernetes and we just need to start for it and that was really what got us kicking with fermion and what got",
    "start": "477240",
    "end": "483000"
  },
  {
    "text": "us excited and what got us to create a company around this idea that we can create the right kind of platform that",
    "start": "483000",
    "end": "488220"
  },
  {
    "text": "illustrates what we mean by this kind of third wave of cloud computing so we're talking about webassembly to be able to",
    "start": "488220",
    "end": "495599"
  },
  {
    "text": "run like server-side code are we talking about a project specifically like crosslits a project are we talking about",
    "start": "495599",
    "end": "502319"
  },
  {
    "text": "an idea what is the focus oh that's a great question because as a startup founder right at my initial link is well",
    "start": "502319",
    "end": "508680"
  },
  {
    "text": "if we're talking about a project but actually I think we're really talking more about an ecosystem you know there are several ecosystems we could choose",
    "start": "508680",
    "end": "514919"
  },
  {
    "text": "from you know the Java ecosystem or the.net ecosystem as illustrations of this but I think the docker ecosystem is",
    "start": "514919",
    "end": "520740"
  },
  {
    "text": "such a great example of an ecosystem evolving and one that's kind of recent so we all kind of remember it but you",
    "start": "520740",
    "end": "526380"
  },
  {
    "text": "know there were some core Technologies like Docker of course and early schedulers including like mesos and",
    "start": "526380",
    "end": "531660"
  },
  {
    "text": "swarm and Fleet and you know the key value storage systems like NCD and console so there were a whole bunch of",
    "start": "531660",
    "end": "537660"
  },
  {
    "text": "technologies that sort of co-evolved in order to create an ecosystem but the core of the ecosystem was the container",
    "start": "537660",
    "end": "544500"
  },
  {
    "text": "right and that's what I think we are really in probably the first year or two years of seeing that develop inside of",
    "start": "544500",
    "end": "551279"
  },
  {
    "text": "webassembly right a number of different companies and individual developers and Scholars in Academia have all sort of",
    "start": "551279",
    "end": "557940"
  },
  {
    "text": "said hey the web assembly binary looks like it might be the right foundation for this what are the Technologies we",
    "start": "557940",
    "end": "563820"
  },
  {
    "text": "need to build around it and what's the community structure we need to build around it because standardizing is still",
    "start": "563820",
    "end": "569480"
  },
  {
    "text": "the gotcha for almost all of our big efforts right we want things standardized enough so that we can run",
    "start": "569480",
    "end": "576180"
  },
  {
    "text": "reliably and understand how things are going to execute and all that while we all still want to keep enough space open",
    "start": "576180",
    "end": "581700"
  },
  {
    "text": "that we can do our own thing right and Pioneer a little bit so I think that the answer to your question is kind of the",
    "start": "581700",
    "end": "587160"
  },
  {
    "text": "ecosystem is the first thing for this third wave of cloud compute we need groups like bytecode Alliance where the",
    "start": "587160",
    "end": "592740"
  },
  {
    "text": "focus is on working together to create the specifications like webassembly system interface that determines how you",
    "start": "592740",
    "end": "598500"
  },
  {
    "text": "interface with a system clock how you load environment variables how you read and write files and we need that as a",
    "start": "598500",
    "end": "604680"
  },
  {
    "text": "foundational piece so there's that in a community right there's the conferences like webassembly Summit and Blossom Day",
    "start": "604680",
    "end": "610980"
  },
  {
    "text": "at kubecon and we need those as areas where we can collaborate and then we need lots and lots of developers often",
    "start": "610980",
    "end": "617100"
  },
  {
    "text": "working for different companies that are all trying to solve a set of problems that Define sort of the boundaries of",
    "start": "617100",
    "end": "622800"
  },
  {
    "text": "the ecosystem I think we're in about you know year one and a half to year two of",
    "start": "622800",
    "end": "628620"
  },
  {
    "text": "really seeing that flourishing by code Alliance has been around a little longer but only formalized about a year and a",
    "start": "628620",
    "end": "633660"
  },
  {
    "text": "half ago you know you're seeing a whole bunch of startups like fermion and suborbital and cosmonic and profion you",
    "start": "633660",
    "end": "641459"
  },
  {
    "text": "know kind of bubbling up but you're also seeing fastly and cloudflare by into this Microsoft Amazon Google buying into",
    "start": "641459",
    "end": "647760"
  },
  {
    "text": "this so we're really sort of seeing once again the same kind of replay of a ecosystem formation that we saw in the",
    "start": "647760",
    "end": "653880"
  },
  {
    "text": "docker ecosystem when it was red hat yeah yeah so I know of fastly doing things at the edge being able to compile",
    "start": "653880",
    "end": "660899"
  },
  {
    "text": "things at the edge and be able to run webassembly wasm there I can write you know wasm applications myself and deploy",
    "start": "660899",
    "end": "668519"
  },
  {
    "text": "them with the cloud part how do I deploy wasm in a cloud native way how does that",
    "start": "668519",
    "end": "674220"
  },
  {
    "text": "work today in this case Cloud native and Edge are similar maybe the edge is a little more constrained in some of the",
    "start": "674220",
    "end": "680459"
  },
  {
    "text": "things it can do and a little faster to deliver on others but at the core of it we need to be able to push a number of",
    "start": "680459",
    "end": "686459"
  },
  {
    "text": "artifacts somewhere and understand how they're going to be executed so we know for example we've got the binary right a",
    "start": "686459",
    "end": "693600"
  },
  {
    "text": "webassembly binary file and then we need some supporting files so a good example of this is fermion.com is powered by a",
    "start": "693600",
    "end": "699660"
  },
  {
    "text": "CMS that we wrote called Bartholomew so for Bartholomew right we need the webassembly binaries that serve out the",
    "start": "699660",
    "end": "706320"
  },
  {
    "text": "different parts of the site and it's created with a microservice architecture I think it's got at this point five different binary files that execute",
    "start": "706320",
    "end": "712620"
  },
  {
    "text": "fermion.com then we need all the blog posts and all the files and all the images and all the CSS some of which are",
    "start": "712620",
    "end": "718140"
  },
  {
    "text": "Dynamic and some of which are static and somehow we have to bundle all these up this is a great example of where",
    "start": "718140",
    "end": "724380"
  },
  {
    "text": "bytecode Alliance is a great entity to have in a burgeoning ecosystem right we",
    "start": "724380",
    "end": "729480"
  },
  {
    "text": "need to have a standard way of pushing these bundles up to a cloud and fastly's you know computed Edge is very similar",
    "start": "729480",
    "end": "735540"
  },
  {
    "text": "right we need a way to push their artifacts up to computed edge with fastly or any of these so there's a",
    "start": "735540",
    "end": "740940"
  },
  {
    "text": "working group called Sig registry that convenes under bytecode Alliance that's working on defining a package format and",
    "start": "740940",
    "end": "747899"
  },
  {
    "text": "defining how we're going to push and pull packages essentially where you think of in the docker world right pushing and pulling from Registries and",
    "start": "747899",
    "end": "754440"
  },
  {
    "text": "packaging things up with a Docker file and creating an image file right same kind of thinking is happening in",
    "start": "754440",
    "end": "760800"
  },
  {
    "text": "bytecode Alliance specific to webassembly so Sig Registries is a great place to get involved if that's the kind",
    "start": "760800",
    "end": "766620"
  },
  {
    "text": "of thing that people are interested in you can find out about a bycode alliance.org and so that's one of the",
    "start": "766620",
    "end": "773279"
  },
  {
    "text": "pieces of community building slash ecosystem building that we've got to be engaged in so you started a company",
    "start": "773279",
    "end": "778800"
  },
  {
    "text": "fermion and now what's the mission of fermion is it to be able to take those artifacts and then be able to deploy",
    "start": "778800",
    "end": "784380"
  },
  {
    "text": "them onto a cloud footprint what does fermian doing yeah for us we're really excited excited about the idea that we",
    "start": "784380",
    "end": "791339"
  },
  {
    "text": "can create a cloud runtime that can run in AWS in Azure in Google digitalocean",
    "start": "791339",
    "end": "798000"
  },
  {
    "text": "that can execute these webassembly modules and that we can streamline that experience to make it frictionless right",
    "start": "798000",
    "end": "803700"
  },
  {
    "text": "so it's really kind of a two-part thing right we want to make it easy for developers to build these kinds of",
    "start": "803700",
    "end": "809100"
  },
  {
    "text": "applications and then make it easy for developers to deploy and then manage these applications over the long term",
    "start": "809100",
    "end": "814500"
  },
  {
    "text": "when you think about the development cycle oftentimes as we build these new kinds of systems we introduce a lot of",
    "start": "814500",
    "end": "821220"
  },
  {
    "text": "Fairly heavy tooling virtual machines are still hard to build for us now even a decade in some into the ecosystem",
    "start": "821220",
    "end": "828240"
  },
  {
    "text": "right and Technologies like Packer made it easier but it's still kind of hard the number one thing that Docker did",
    "start": "828240",
    "end": "834959"
  },
  {
    "text": "amazingly well was create a format that made it easy for people to take their applications that already existed",
    "start": "834959",
    "end": "840060"
  },
  {
    "text": "package them up using a Docker file into an image and we looked at that and said could we make it simpler right could we",
    "start": "840060",
    "end": "845940"
  },
  {
    "text": "make the developer story easier than that and the cool thing about webassembly is that all these languages",
    "start": "845940",
    "end": "850980"
  },
  {
    "text": "are adding support into their compilers so with rust you just add dash dash Target wasn't 32 wasi and it compiles",
    "start": "850980",
    "end": "858060"
  },
  {
    "text": "the binary for you and so we've really kind of opted for that lightweight tooling so spin is our developer tool",
    "start": "858060",
    "end": "863760"
  },
  {
    "text": "and the spin project is basically designed to assist in what we call the inner loop of development right so this",
    "start": "863760",
    "end": "870360"
  },
  {
    "text": "is a big microsofty term I think inner and outer loop of development fast compile times yeah yeah and what we",
    "start": "870360",
    "end": "875940"
  },
  {
    "text": "really mean is when you as the individual developer are focused on your development cycle and you've blocked out the world and you're just wholly engaged",
    "start": "875940",
    "end": "882600"
  },
  {
    "text": "in your code you're in your inner loop right you're in flow and so we wanted to build some tools that would help",
    "start": "882600",
    "end": "887820"
  },
  {
    "text": "developers when they're in dot mode be able to very quickly and rapidly build webassembly-based applications without",
    "start": "887820",
    "end": "893399"
  },
  {
    "text": "having to think about the deployment time so much and without having to use a lot of external tools so spin is really",
    "start": "893399",
    "end": "898860"
  },
  {
    "text": "the one tool that we think is useful there and we've written vs code extension to streamline that and then on",
    "start": "898860",
    "end": "905339"
  },
  {
    "text": "the cloud side you know you got to run it somewhere and we built the tool we call fermion or the fermion platform to",
    "start": "905339",
    "end": "911220"
  },
  {
    "text": "really execute there and that's kind of a conglomeration of a number of Open Source projects with a nice dashboard on",
    "start": "911220",
    "end": "917519"
  },
  {
    "text": "top of it that you can install into digitalocean or AWS or Azure or whatever you want and get it running there and",
    "start": "917519",
    "end": "923579"
  },
  {
    "text": "that runs a full wasm binary earlier I talked functions as a service as it run like functions or is it run full ASM",
    "start": "923579",
    "end": "930300"
  },
  {
    "text": "binaries yeah this gets us back into the serverless topic which we were talking about earlier and serverless I think has",
    "start": "930300",
    "end": "935760"
  },
  {
    "text": "always been a great idea right and the core of this is can we make it possible so that the developer doesn't even have",
    "start": "935760",
    "end": "941820"
  },
  {
    "text": "to think about what a server is exactly the plumbing yeah and functions as a",
    "start": "941820",
    "end": "946860"
  },
  {
    "text": "service to me is just about the purest form of serverless that you can get where not only do you not have to think",
    "start": "946860",
    "end": "952380"
  },
  {
    "text": "about the hardware or the operating system but you don't even have to think about the web framework that you're",
    "start": "952380",
    "end": "958260"
  },
  {
    "text": "running in right you're merely saying when a request comes into this endpoint I'm going to handle it this way and I'm",
    "start": "958260",
    "end": "964260"
  },
  {
    "text": "going to serve back this data So within moments of starting your code you're deep into the business line logic and",
    "start": "964260",
    "end": "969360"
  },
  {
    "text": "you're not worried about okay I'm going to stand up an HTTP server it's got to listen on this port here's the SSL configuration alert Damon said it's all",
    "start": "969360",
    "end": "976079"
  },
  {
    "text": "part of the platform yeah and as a developer you know that to me is like that's what I want no thousand lines of",
    "start": "976079",
    "end": "983220"
  },
  {
    "text": "yaml config so serverless and functions as a service we're looking like very promising models to us so as we built",
    "start": "983220",
    "end": "989220"
  },
  {
    "text": "out spin we decided that at least as the first primary model that we wanted to",
    "start": "989220",
    "end": "994560"
  },
  {
    "text": "use we wanted to use that particular model so spin for example it functions more like an event listener where you",
    "start": "994560",
    "end": "1000920"
  },
  {
    "text": "say okay on an HTTP request here's the request object do your thing and send back a response object or as a redis",
    "start": "1000920",
    "end": "1008180"
  },
  {
    "text": "listener when a message comes in on this channel here's the message do your thing and then you know optionally send",
    "start": "1008180",
    "end": "1013940"
  },
  {
    "text": "something back and that model really is much closer to Azure functions and Lambda and Technologies like that and we",
    "start": "1013940",
    "end": "1020839"
  },
  {
    "text": "picked that because developers seem to really enjoy that developers say they really enjoy that model and we think",
    "start": "1020839",
    "end": "1027020"
  },
  {
    "text": "it's a great complement for webassembly so it really gets you thinking about writing microservices in terms of very",
    "start": "1027020",
    "end": "1032660"
  },
  {
    "text": "very small chunks of code and not in terms of HTTP servers that happen to have microservice infrastructure built",
    "start": "1032660",
    "end": "1039260"
  },
  {
    "text": "in so spin but you write this kind of this inner loop fast flow event driven model where you can kind of respond to",
    "start": "1039260",
    "end": "1046280"
  },
  {
    "text": "the events that are going like the serverless model and then you're able to package that into wasm that can then be",
    "start": "1046280",
    "end": "1052460"
  },
  {
    "text": "deployed with fermion cloud is that the idea yeah and there you know when you think about writing a typical HTTP",
    "start": "1052460",
    "end": "1058880"
  },
  {
    "text": "application even going back to say rails rails and Django I think really Define how we think about HTTP applications",
    "start": "1058880",
    "end": "1066679"
  },
  {
    "text": "and you have got this concept of the routing table right and in the routing table you say when somebody hits slash",
    "start": "1066679",
    "end": "1072980"
  },
  {
    "text": "Foo then that executes my Foo module if I hit slash bar that executes my bar",
    "start": "1072980",
    "end": "1078500"
  },
  {
    "text": "module that's really the direction that we went with the programming model where when you hit firmion.com index you know",
    "start": "1078500",
    "end": "1085340"
  },
  {
    "text": "it executes the webassembly module that generates the index file and serves that out when you hit static slash file.jpg",
    "start": "1085340",
    "end": "1093020"
  },
  {
    "text": "it loads the file server and serves about and I think that model really kind of resonates with pretty much all modern",
    "start": "1093020",
    "end": "1098539"
  },
  {
    "text": "web application and microservice developers but all their writing in the back end is just a function and I really",
    "start": "1098539",
    "end": "1104780"
  },
  {
    "text": "like that model because it just feels like you're getting right to the meat of what you actually care about within a moment of starting your application",
    "start": "1104780",
    "end": "1110900"
  },
  {
    "text": "instead of a half hour or an hour later when you've written out all the scaffolding for it so what about State",
    "start": "1110900",
    "end": "1116120"
  },
  {
    "text": "you mentioned redis before having redis listeners how do you manage State when you're working with spin or with fermion",
    "start": "1116120",
    "end": "1121820"
  },
  {
    "text": "Cloud how does that come into play that's a great architectural discussion for microservices as a whole and we've",
    "start": "1121820",
    "end": "1127640"
  },
  {
    "text": "really have felt strongly that what we have observed you know coming from you know Deus and Microsoft and then on into",
    "start": "1127640",
    "end": "1133640"
  },
  {
    "text": "fermion or Google in the case of some of the other Engineers who work on Fermi on Google into fermion we've seen the",
    "start": "1133640",
    "end": "1139880"
  },
  {
    "text": "microservice pattern be successful repeatedly and statelessness has been a big virtue of the microservice model as",
    "start": "1139880",
    "end": "1147200"
  },
  {
    "text": "far as the binary keeping State internally right but you gotta put stateful information somewhere at some",
    "start": "1147200",
    "end": "1152780"
  },
  {
    "text": "point yep and the easy one is well you can put it in files right and Wazi in",
    "start": "1152780",
    "end": "1158360"
  },
  {
    "text": "webassembly you know introduced file support two years ago right and that was good but that's not really where you",
    "start": "1158360",
    "end": "1164960"
  },
  {
    "text": "want to stop right so with spin we began experimenting with adding some additional ones like redis support and",
    "start": "1164960",
    "end": "1172039"
  },
  {
    "text": "generic key value storage which is coming out and release very soon database support is coming out really",
    "start": "1172039",
    "end": "1177559"
  },
  {
    "text": "soon and those kinds of things spin by the way is open source so you can actually go see all these PRS kind of in",
    "start": "1177559",
    "end": "1182960"
  },
  {
    "text": "flight as we work on post support and stuff like that it's coming along and and the strategy we want to use is the",
    "start": "1182960",
    "end": "1188419"
  },
  {
    "text": "same strategy that you used in Docker containers and other stateless microservice architectures right where",
    "start": "1188419",
    "end": "1193640"
  },
  {
    "text": "state gets persisted in the right kind of data storage for whatever you're working on be that a caching service or",
    "start": "1193640",
    "end": "1198919"
  },
  {
    "text": "relational database or a nosql database we are hoping that as the webassembly",
    "start": "1198919",
    "end": "1204200"
  },
  {
    "text": "component model and other similar standards kind of solidify we're going to see this kind of stuff not be a spin",
    "start": "1204200",
    "end": "1210380"
  },
  {
    "text": "specific feature but just the way that webassembly as a whole works and different people using different",
    "start": "1210380",
    "end": "1215480"
  },
  {
    "text": "architectures will be able to pull the same kinds of components and get the same kind of feature set yeah very cool",
    "start": "1215480",
    "end": "1221059"
  },
  {
    "text": "when we were talking just before we started recording you mentioned that you wanted to talk a little bit about performance of webassembly and how it's",
    "start": "1221059",
    "end": "1227720"
  },
  {
    "text": "changed I remember I guess a year ago maybe two years ago I did a podcast with Lynn Clark we're talking about fastly",
    "start": "1227720",
    "end": "1234679"
  },
  {
    "text": "and running webassembly at the edge like we were talking about before and if I remember right I may be wrong but if I",
    "start": "1234679",
    "end": "1239900"
  },
  {
    "text": "remember I was like three milliseconds was like the overhead that was for like the inline request compile time which I",
    "start": "1239900",
    "end": "1246980"
  },
  {
    "text": "thought was impressive but you said you're way lower than that now what is the request level inline performance",
    "start": "1246980",
    "end": "1252080"
  },
  {
    "text": "time of a web assembly these days we're lower now fastly's lower now as an Eco we've learned a lot in the last couple",
    "start": "1252080",
    "end": "1257900"
  },
  {
    "text": "of years about how to optimize and how to pre-initialize and cache things ahead of time so three milliseconds even a",
    "start": "1257900",
    "end": "1264320"
  },
  {
    "text": "year and a half ago would have been a very good startup time then we are pushing down toward a millisecond and",
    "start": "1264320",
    "end": "1270080"
  },
  {
    "text": "now we are sub 1 millisecond and so again let's characterize this in terms of these three waves of cloud computing",
    "start": "1270080",
    "end": "1276200"
  },
  {
    "text": "right a virtual machine which is a Powerhouse right you start with the kernel and you got the file system and",
    "start": "1276200",
    "end": "1281480"
  },
  {
    "text": "you've got all the process table and everything you know starting up and initializing and then opening sockets",
    "start": "1281480",
    "end": "1287360"
  },
  {
    "text": "and everything that takes minutes to do right then you get to containers and containers on average take a dozen",
    "start": "1287360",
    "end": "1294320"
  },
  {
    "text": "seconds to start up right and you can push down into the low seconds range and if you get really aggressive and you're",
    "start": "1294320",
    "end": "1300020"
  },
  {
    "text": "really not doing very much you might be able to get into the 100 milliseconds or the several hundred milliseconds range",
    "start": "1300020",
    "end": "1305299"
  },
  {
    "text": "and so one of the core features that we think this third wave of cloud compute needed and one of our criteria coming in",
    "start": "1305299",
    "end": "1311299"
  },
  {
    "text": "was it's got to be in the tens of milliseconds so that was a design goal coming out of the gate for us and the",
    "start": "1311299",
    "end": "1317299"
  },
  {
    "text": "fact that now we're seeing that push down below the millisecond marker for being able to get from cold State VM to",
    "start": "1317299",
    "end": "1324500"
  },
  {
    "text": "something executing to that first you know instruction having that under a millisecond is just phenomenal right in",
    "start": "1324500",
    "end": "1331220"
  },
  {
    "text": "many ways we've kind of learned lessons from the jvm and the CLR and lots and lots of other research that's been done",
    "start": "1331220",
    "end": "1337039"
  },
  {
    "text": "in this area and in another some of it just comes about because with both us and with fastly and other Cloud",
    "start": "1337039",
    "end": "1343640"
  },
  {
    "text": "providers distinctly from the browser scenario right we can pre-load code compile it ahead of time into native and",
    "start": "1343640",
    "end": "1351320"
  },
  {
    "text": "then be able to have it sort of cached there and ready to go because we know everything we need to know about what the architecture and what the system is",
    "start": "1351320",
    "end": "1357679"
  },
  {
    "text": "going to look like when that first invocation hits and that's why we can really start to drive times way way down",
    "start": "1357679",
    "end": "1362840"
  },
  {
    "text": "so occasionally you'll see a blog post of somebody saying well webassembly wasn't terribly fast when I ran it in",
    "start": "1362840",
    "end": "1369080"
  },
  {
    "text": "the browser and then those of us on the cloud side are saying well we can just make it blazingly fast a lot of that",
    "start": "1369080",
    "end": "1374659"
  },
  {
    "text": "difference is because the things that the runtime has to be able to learn about the system at execution time in",
    "start": "1374659",
    "end": "1380120"
  },
  {
    "text": "the browser we know way ahead of time on the cloud and so we can optimize for that and I wouldn't be surprised to see",
    "start": "1380120",
    "end": "1385700"
  },
  {
    "text": "you know fastly fermion other companies pushing even lower until it really does start to appear to be at Native or",
    "start": "1385700",
    "end": "1391760"
  },
  {
    "text": "faster than native speeds that's awesome again I haven't really tracked webassembly in the last year and a half",
    "start": "1391760",
    "end": "1397159"
  },
  {
    "text": "or so but some of the other challenges were like types and I think component approach to where you could share things",
    "start": "1397159",
    "end": "1403159"
  },
  {
    "text": "how has that advanced over the last year half what is the state of that today specifications often move in fits and",
    "start": "1403159",
    "end": "1409520"
  },
  {
    "text": "starts right and W3 by the way the same standards body that does CSS HTML and",
    "start": "1409520",
    "end": "1415039"
  },
  {
    "text": "hdb you know this is the same standards body that works on webassembly and types was one of the initial how do we share",
    "start": "1415039",
    "end": "1421280"
  },
  {
    "text": "type information and that morphed in and out of several other models and ultimately what's emerged out of that is",
    "start": "1421280",
    "end": "1428419"
  },
  {
    "text": "borrowing heavily from existing academic work on components webassembly is now",
    "start": "1428419",
    "end": "1433760"
  },
  {
    "text": "gaining a component model so what that means in practice is that when I compile a webassembly module I can also build a",
    "start": "1433760",
    "end": "1441740"
  },
  {
    "text": "file that says these are my exported functions and this is what they do and these are the types that they use and",
    "start": "1441740",
    "end": "1447559"
  },
  {
    "text": "you know types here aren't just like instant floats and strings right we can build up very elaborate struct like",
    "start": "1447559",
    "end": "1453020"
  },
  {
    "text": "types where we say you know this is a shopping cart and a shopping cart has a count of items and an item looks like",
    "start": "1453020",
    "end": "1458360"
  },
  {
    "text": "this and the component model for webassembly can articulate what those look like but it also can do a couple of",
    "start": "1458360",
    "end": "1465500"
  },
  {
    "text": "other really cool things and this is where I think we're going to see webassembly really break out developers",
    "start": "1465500",
    "end": "1470960"
  },
  {
    "text": "will be able to do things in webassembly that they have not yet been able to do using other popular architectures other popular paradigms and this is that",
    "start": "1470960",
    "end": "1477559"
  },
  {
    "text": "webassembly can articulate okay so when this module starts up it needs to have something that looks like a key value",
    "start": "1477559",
    "end": "1483919"
  },
  {
    "text": "storage here's the interface that defines it right I need to be able to put a string string and I need to be able to get string and get back a string",
    "start": "1483919",
    "end": "1490580"
  },
  {
    "text": "object or I need you know a cache where it lives for x amount of time or else I get a cache Miss but it has no real",
    "start": "1490580",
    "end": "1496880"
  },
  {
    "text": "strong feelings about no strong it doesn't have any feelings at all it's binary that's no real Sun not yet",
    "start": "1496880",
    "end": "1504799"
  },
  {
    "text": "a given time yeah anthropomorphizing code yeah",
    "start": "1504799",
    "end": "1511039"
  },
  {
    "text": "and then at startup time you know we can articulate okay fastly can say well we've got a cash like thing and it'll",
    "start": "1511039",
    "end": "1516740"
  },
  {
    "text": "handle these requests and fermion can say well we don't we can load a Docker container that has those cache-like",
    "start": "1516740",
    "end": "1522380"
  },
  {
    "text": "characteristics and expose a driver through that and suddenly applications can be sort of built up based on what's",
    "start": "1522380",
    "end": "1528260"
  },
  {
    "text": "available in the environment now because webassembly is multi-language what this means is effectively for the most part",
    "start": "1528260",
    "end": "1534320"
  },
  {
    "text": "we've been writing the same tools over and over again in JavaScript and Ruby",
    "start": "1534320",
    "end": "1539720"
  },
  {
    "text": "and python in Java you know if we can compile all to the same binary format and we can expose the imports and",
    "start": "1539720",
    "end": "1547100"
  },
  {
    "text": "exports for each thing then suddenly language doesn't make so much of a difference and so you know whereas in",
    "start": "1547100",
    "end": "1553279"
  },
  {
    "text": "the past we've had to say okay here's what you can do in JavaScript and here's what you can do in Python now we can say",
    "start": "1553279",
    "end": "1558799"
  },
  {
    "text": "well here's what you can do and reuse components yeah and whether the key value store is written in rust or C or",
    "start": "1558799",
    "end": "1565880"
  },
  {
    "text": "you know erlang or whatever as long as it's compiled to webassembly my JavaScript application can use it and my",
    "start": "1565880",
    "end": "1571760"
  },
  {
    "text": "python app can use it use it and that's where I think we should see a big difference in the way we can start constructing applications by aggregating",
    "start": "1571760",
    "end": "1579220"
  },
  {
    "text": "binaries instead of fetching a library and building it into our application yeah it's cool speaking of language",
    "start": "1579220",
    "end": "1585799"
  },
  {
    "text": "support it was another thing that you wanted to talk about there's a lot of changes momentum and things that have",
    "start": "1585799",
    "end": "1591080"
  },
  {
    "text": "been happening with languages themselves in support of webassembly like switches there's things with node we talked about",
    "start": "1591080",
    "end": "1597020"
  },
  {
    "text": "blazer for a minute what's happening in the language space when it comes to webassembly to us webassembly will not",
    "start": "1597020",
    "end": "1604159"
  },
  {
    "text": "be a real viable technology until there is really good language support right so",
    "start": "1604159",
    "end": "1609799"
  },
  {
    "text": "on fermion.com we actually track the status of the top 20 languages as determined by Red Monk and we watch very",
    "start": "1609799",
    "end": "1615980"
  },
  {
    "text": "closely and we continually update our Matrix of what the status is of webassembly in these languages rewind",
    "start": "1615980",
    "end": "1622220"
  },
  {
    "text": "again back only a year or two and all the check boxes are checked are basically C and rust right both great",
    "start": "1622220",
    "end": "1628700"
  },
  {
    "text": "languages both well-respected languages both not usually the first languages a",
    "start": "1628700",
    "end": "1633919"
  },
  {
    "text": "developer says yeah this is my go-to language right rust is gaining popularity of course and we love rust but JavaScript wasn't on there python",
    "start": "1633919",
    "end": "1640700"
  },
  {
    "text": "wasn't on there Ruby wasn't on their Java and C sharp certainly weren't on there what we've seen over only like a",
    "start": "1640700",
    "end": "1646700"
  },
  {
    "text": "year year and a half is just language after language first announcing support and then rapidly delivering on it so",
    "start": "1646700",
    "end": "1653000"
  },
  {
    "text": "earlier this year I mean I was ecstatic when I saw in just the space of like two",
    "start": "1653000",
    "end": "1658039"
  },
  {
    "text": "weeks Ruby and python both announced that the C Ruby and C python runtimes were compilable to webassembly with Wazi",
    "start": "1658039",
    "end": "1665240"
  },
  {
    "text": "which effectively meant all of a sudden spin which applications were kind of limited to rust and C at the time could",
    "start": "1665240",
    "end": "1671840"
  },
  {
    "text": "suddenly do Python and Ruby applications and go the core project is a little bit behind on webassembly support but the",
    "start": "1671840",
    "end": "1678320"
  },
  {
    "text": "community picked up the slack and tinygo can compile go programs into webassembly plus Waze so go came along you know",
    "start": "1678320",
    "end": "1685340"
  },
  {
    "text": "right around actually a little bit earlier than Python and Ruby but now what we're seeing I mean like now being",
    "start": "1685340",
    "end": "1690980"
  },
  {
    "text": "in the last couple of weeks right is the beginning of movement from the big Enterprise languages right Microsoft has",
    "start": "1690980",
    "end": "1698240"
  },
  {
    "text": "been putting a lot of work into webassembly in the browser over the past with the Blazer framework which",
    "start": "1698240",
    "end": "1705260"
  },
  {
    "text": "essentially ran by compiling the CLR the runtime for c-sharp in those languages into webassembly and then interpreting",
    "start": "1705260",
    "end": "1711559"
  },
  {
    "text": "the dlls but what they've been saying is that was just the first step right the better way to do it is to compile",
    "start": "1711559",
    "end": "1718480"
  },
  {
    "text": "c-sharp F sharp all the CLR supported languages directly into webassembly and",
    "start": "1718480",
    "end": "1723679"
  },
  {
    "text": "be able to run them directly inside of a webassembly runtime which means big performance boost much smaller binary",
    "start": "1723679",
    "end": "1729080"
  },
  {
    "text": "sizes and all of a sudden it's easy to start adding support for newly emerging specifications because it doesn't have",
    "start": "1729080",
    "end": "1734480"
  },
  {
    "text": "to get routed through multiple layers of indirection so Steve Sanderson who's one of the lead I think he's the lead PM for",
    "start": "1734480",
    "end": "1741140"
  },
  {
    "text": "the.net framework has been showing off a couple times since kubecon and Valencia now I think four or five different",
    "start": "1741140",
    "end": "1747080"
  },
  {
    "text": "places has shown off where they are in supporting you know.net to webassembly",
    "start": "1747080",
    "end": "1752179"
  },
  {
    "text": "with see and it's astounding so often we've thought of languages like C sharp",
    "start": "1752179",
    "end": "1757580"
  },
  {
    "text": "as being sort of like reactive looking around at what's happening elsewhere and kind of reacting but they're not they",
    "start": "1757580",
    "end": "1763460"
  },
  {
    "text": "are very forward-thinking engineers and David Fowler's brilliant and the stuff they're doing is awesome now they've",
    "start": "1763460",
    "end": "1771260"
  },
  {
    "text": "earmarked webassembly as the future as one of the things they really want to focus on and I'm really excited my",
    "start": "1771260",
    "end": "1777080"
  },
  {
    "text": "understanding is the next version of.net will have full support for compiling the native web assembly and the working drafts of beta is about now yeah that's",
    "start": "1777080",
    "end": "1784159"
  },
  {
    "text": "awesome you mentioned that there's work happening with Java as well so Java the CLR that's amazing yep kotlin 2 is also",
    "start": "1784159",
    "end": "1791000"
  },
  {
    "text": "working on a native implementation so I think we'll see Java kotlin the.net languages all coming I think they'll be",
    "start": "1791000",
    "end": "1797419"
  },
  {
    "text": "coming by the end of the year right I'm optimistic I have to because I'm a startup founder and if you're not optimistic",
    "start": "1797419",
    "end": "1803919"
  },
  {
    "text": "but I think they'll be coming by the end of the year I think you'll really start to see the top 20 languages I think",
    "start": "1804039",
    "end": "1809419"
  },
  {
    "text": "we'll see probably 15 plus of them support webassembly by the end that's awesome so let's come back for a",
    "start": "1809419",
    "end": "1815179"
  },
  {
    "text": "second to fermion we're going to wrap up here but I wanted you to kind of walk through there's an app that you talk",
    "start": "1815179",
    "end": "1820460"
  },
  {
    "text": "about wagy that's on one of your blog posts that kind of how you might go about using Spin and how you use fermion",
    "start": "1820460",
    "end": "1826159"
  },
  {
    "text": "cloud could you walk through what it looks like to bootstrap an app to kind of talk about just what does it look like for me if I wanted to go use from",
    "start": "1826159",
    "end": "1832460"
  },
  {
    "text": "Young Cloud what would it look like it spins the tool you'd use there wagy is actually just sort of a description of",
    "start": "1832460",
    "end": "1837620"
  },
  {
    "text": "how to write an application so when you're writing it think about wagy as one of those ways to write a sort of functions of service language so you",
    "start": "1837620",
    "end": "1844580"
  },
  {
    "text": "know you download spin from our GitHub repository and you type in spin new and",
    "start": "1844580",
    "end": "1849620"
  },
  {
    "text": "then the type of application you want to write and the name so say I want to create hello world and rust it's spin",
    "start": "1849620",
    "end": "1854779"
  },
  {
    "text": "new rust hello world and that command scaffolds out it runs the cargo commands",
    "start": "1854779",
    "end": "1860480"
  },
  {
    "text": "in the background and creates your whole application environment and when you open it from there it's gonna look like",
    "start": "1860480",
    "end": "1865760"
  },
  {
    "text": "your regular old rust application the only thing that's really happening behind the scenes is wiring up all the pieces for the component model and for",
    "start": "1865760",
    "end": "1872600"
  },
  {
    "text": "the compile so that you don't have to think about that so spin new you've got your Hello World app created instantly",
    "start": "1872600",
    "end": "1878179"
  },
  {
    "text": "you can edit it however you normally edit I use vs code from there you type in spin build it'll build your binary",
    "start": "1878179",
    "end": "1884480"
  },
  {
    "text": "for you and again largely it's invoking the rust compiler in rust's case or the",
    "start": "1884480",
    "end": "1889880"
  },
  {
    "text": "tiny go compiler in ghost case or whatever and then spin deploy will push it out to fermion so assuming you've got",
    "start": "1889880",
    "end": "1895700"
  },
  {
    "text": "a fermion instance running somewhere you can spin deploy and have it pushed out there if you're doing your local development you can just instead of",
    "start": "1895700",
    "end": "1901940"
  },
  {
    "text": "typing spin deploy you can type spin up and it'll create you a local web server and be running your application inside",
    "start": "1901940",
    "end": "1907700"
  },
  {
    "text": "there so the local development story is super easy there in total we say you",
    "start": "1907700",
    "end": "1912919"
  },
  {
    "text": "should be able to get your first spin application up and running in two minutes or less how do you target different endpoints when you deploy out",
    "start": "1912919",
    "end": "1918980"
  },
  {
    "text": "to the cloud or do you not worry about it that's what you paid fermion for for example yeah I mean so you're building your routing",
    "start": "1918980",
    "end": "1925279"
  },
  {
    "text": "table as you build the application there's a toml file in there called spin.tommel where you say okay if they hit slash then they load this module if",
    "start": "1925279",
    "end": "1931580"
  },
  {
    "text": "they hit slash Foo they hit that module and it supports you know all the normal things that routing tables support but",
    "start": "1931580",
    "end": "1936919"
  },
  {
    "text": "from there when you push it out to the fermion platform the platform will provision your SSL certificate set up a",
    "start": "1936919",
    "end": "1942860"
  },
  {
    "text": "domain name for you the fermion dashboard that comes as part of that platform will allow you to set up environment variables and things like",
    "start": "1942860",
    "end": "1949100"
  },
  {
    "text": "that so as the developer you're really kind of just thinking merely in terms of how you build your binary and what you want to do and then once you deploy it",
    "start": "1949100",
    "end": "1956059"
  },
  {
    "text": "then you can log into the fermion dashboard and start tweaking and doing the devopsy side of what we would call the outer loop of development so what's",
    "start": "1956059",
    "end": "1962659"
  },
  {
    "text": "next for fermium we are working on our software as a service because again you know our goal is to make it possible for",
    "start": "1962659",
    "end": "1969140"
  },
  {
    "text": "anybody to be able to run spin applications and get them up and running in two minutes or less even when that means deploying them out somewhere where",
    "start": "1969140",
    "end": "1975260"
  },
  {
    "text": "they've got a public address so while right now if you want to run fermion you got to go install it in your AWS cluster",
    "start": "1975260",
    "end": "1981320"
  },
  {
    "text": "your Google Cloud cluster whatever as we unroll this service later on this year it should make it possible for you to",
    "start": "1981320",
    "end": "1987020"
  },
  {
    "text": "get that started just by typing spin deploy and have that up and running inside of fermion this as well very cool",
    "start": "1987020",
    "end": "1993620"
  },
  {
    "text": "well Matt thank you for taking some time to catch up and help us further understand what's happening in the wasm",
    "start": "1993620",
    "end": "1998899"
  },
  {
    "text": "community and tell us about fermion and for me on cloud thanks so much for having me hey folks our upcoming International",
    "start": "1998899",
    "end": "2005019"
  },
  {
    "text": "qcon software conferences are starting to take shape we are back in San Francisco this October 24th through 28th",
    "start": "2005019",
    "end": "2012100"
  },
  {
    "text": "online November 29th through December 9th and in London in 2023 from March",
    "start": "2012100",
    "end": "2017620"
  },
  {
    "text": "27th to 29th at qcon you'll find practical inspiration of best practices on how to implement emerging software",
    "start": "2017620",
    "end": "2025059"
  },
  {
    "text": "Trends directly from senior software developers at innovator early adopter companies they'll help you adopt the",
    "start": "2025059",
    "end": "2031600"
  },
  {
    "text": "right patterns and practices moving forward learn more at cucumberences.com hope to see you there foreign",
    "start": "2031600",
    "end": "2040000"
  },
  {
    "text": "[Music]",
    "start": "2043370",
    "end": "2058330"
  }
]