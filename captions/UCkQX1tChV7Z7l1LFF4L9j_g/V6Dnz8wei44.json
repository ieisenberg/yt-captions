[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "i have a lot of very exciting material here i had to try to trim it a lot and i know i also will have a lot of",
    "start": "4560",
    "end": "10960"
  },
  {
    "text": "questions so it's impossible to fit all the very great stuff i have to share in 50",
    "start": "10960",
    "end": "17039"
  },
  {
    "text": "minutes so i will be around later as well make sure you you you find me we can have all the discussions you want um",
    "start": "17039",
    "end": "23600"
  },
  {
    "text": "because like i love coming to these events especially for the kind of feedback like i love discussing this",
    "start": "23600",
    "end": "29439"
  },
  {
    "text": "with peers and now speaking of peers um just uh not so long ago you know uh i",
    "start": "29439",
    "end": "37360"
  },
  {
    "text": "actually made lots of friends in these events because i work on many of the open source projects in the jvm world i'm very",
    "start": "37360",
    "end": "44320"
  },
  {
    "text": "interested in performance and i i love you know contributing to other projects or",
    "start": "44320",
    "end": "49360"
  },
  {
    "text": "receiving contributions to projects and so in during these meetings like one of",
    "start": "49360",
    "end": "54879"
  },
  {
    "text": "these friends his name is alex he was we were contributing",
    "start": "54879",
    "end": "60399"
  },
  {
    "text": "to each other's projects a lot like exchanging ideas to have like a very high performance",
    "start": "60399",
    "end": "66320"
  },
  {
    "text": "solutions on the jvm working on caching technologies and well at some point uh he changed the",
    "start": "66320",
    "end": "73119"
  },
  {
    "text": "job so he was not contributing to uh hibernate anymore",
    "start": "73119",
    "end": "78159"
  },
  {
    "text": "or to age cash anymore and he went to work for uh shopify and uh so you know we met again at some events",
    "start": "78159",
    "end": "85759"
  },
  {
    "text": "and he has this super interesting feedback about shopify likes they are you know he's happy because he has a super high",
    "start": "85759",
    "end": "92159"
  },
  {
    "text": "performance infrastructure to manage like he's some kind of technical lead in there",
    "start": "92159",
    "end": "97200"
  },
  {
    "text": "they have a very high load um and so i'm i'm asking oh well you will be you know",
    "start": "97200",
    "end": "104399"
  },
  {
    "text": "learning a lot about how to tune java how to do you know even better uh database access or caching and it's like",
    "start": "104399",
    "end": "111439"
  },
  {
    "text": "oh yeah you know sadly yeah i know all this stuff for jvm but we can't use java here this is all",
    "start": "111439",
    "end": "117759"
  },
  {
    "text": "ruby on rails and i'm like completely shocked because uh he's telling me that they are willing",
    "start": "117759",
    "end": "123520"
  },
  {
    "start": "120000",
    "end": "153000"
  },
  {
    "text": "to invest millions to get ruby faster because they have a very huge business case to make um their",
    "start": "123520",
    "end": "130640"
  },
  {
    "text": "infrastructure very efficient like there is a very serious amount of money to be made",
    "start": "130640",
    "end": "136160"
  },
  {
    "text": "and they're spending a lot of money in cloud technologies so i'm like well why are you using ruby",
    "start": "136160",
    "end": "141200"
  },
  {
    "text": "you know everybody knows that if your performance is really important for you you should you know move to the jvm but he's like",
    "start": "141200",
    "end": "147280"
  },
  {
    "text": "oh yeah you know but you know the jdm has a warm-up problem uh and i was like",
    "start": "147280",
    "end": "152560"
  },
  {
    "text": "well we all know about warm-up what what is so special about your situation",
    "start": "152560",
    "end": "157840"
  },
  {
    "start": "153000",
    "end": "425000"
  },
  {
    "text": "right so let's talk a little bit about like warm up uh you're all kind of experienced",
    "start": "157840",
    "end": "165519"
  },
  {
    "text": "developers here i think you all have heard probably that you know if you start an application in",
    "start": "165519",
    "end": "171280"
  },
  {
    "text": "java right away and you measure its performance it's not going to be super great right away because you need to",
    "start": "171280",
    "end": "176560"
  },
  {
    "text": "warm it up right while other technologies like ruby rails running on you know its",
    "start": "176560",
    "end": "183280"
  },
  {
    "text": "basic interpret mode it it just starts performing right away it it will never achieve the same",
    "start": "183280",
    "end": "189920"
  },
  {
    "text": "performance as the jvm right so at a very high level uh the",
    "start": "189920",
    "end": "195200"
  },
  {
    "text": "performance is going to look something like this right so you have your application which is having you know in java it",
    "start": "195200",
    "end": "202000"
  },
  {
    "text": "starts slow-ish and you need to explicitly warm it up now you need to have it get a little bit of load so that",
    "start": "202000",
    "end": "208799"
  },
  {
    "text": "the runtime starts to learn what i'm supposed to do like which are the hotspots which is the code that's",
    "start": "208799",
    "end": "214159"
  },
  {
    "text": "more likely to be invoked here while you know the other applications will just perform",
    "start": "214159",
    "end": "219840"
  },
  {
    "text": "okay and you know they don't have the overhead of needing to watch and monitor everything that's",
    "start": "219840",
    "end": "226080"
  },
  {
    "text": "going on and so they have a performance advantage over there now of course after some minutes",
    "start": "226080",
    "end": "231200"
  },
  {
    "text": "jvm takes over and that's why we like java because it can gets get you like a very",
    "start": "231200",
    "end": "237840"
  },
  {
    "text": "good uh you know performance per dollar if we're talking about clouds it's",
    "start": "237840",
    "end": "243840"
  },
  {
    "text": "becoming more and more important to think like what's your total energy consumption of all these",
    "start": "243840",
    "end": "249200"
  },
  {
    "text": "machines you're running of all these containers that you're running and another aspect is like how much memory",
    "start": "249200",
    "end": "255920"
  },
  {
    "text": "you're paying for all of these things like and another problem there is like the jvm really is quite large so even if you run like a",
    "start": "255920",
    "end": "263040"
  },
  {
    "text": "simple service it's you know it starts by having like well half a gigabyte at least you know that's the baseline starting",
    "start": "263040",
    "end": "269360"
  },
  {
    "text": "point for a small service now the problem here is like really you know it takes let's say about 10 minutes",
    "start": "269360",
    "end": "276000"
  },
  {
    "text": "uh after you know average load for an application to to take over and then you know to be a",
    "start": "276000",
    "end": "282080"
  },
  {
    "text": "good choice for your system but what if you do continuous delivery",
    "start": "282080",
    "end": "287120"
  },
  {
    "text": "like properly and you have like a large team who's like pushing all the time like you have a shopify",
    "start": "287120",
    "end": "292639"
  },
  {
    "text": "now turns out they're deploying in production directly from any comments like there is no intermediate qa or staging platform",
    "start": "292639",
    "end": "299680"
  },
  {
    "text": "they have like a proper continuous delivery thing they have gates and checks and canaries but then it's pushed in",
    "start": "299680",
    "end": "305120"
  },
  {
    "text": "production on average every five to seven minutes you never reach the pool performance performance",
    "start": "305120",
    "end": "311759"
  },
  {
    "text": "on their use case is going to look something like this now if you revert this graph and think that these are your costs",
    "start": "311759",
    "end": "318880"
  },
  {
    "text": "well it's clear that you really cannot use java in this system even though you want the best performing",
    "start": "318880",
    "end": "325280"
  },
  {
    "text": "application because it just doesn't work at the performance you need and there are other runtimes that just",
    "start": "325280",
    "end": "331840"
  },
  {
    "text": "you know will perform better in your specific conditions now this was kind of mind-blowing to me",
    "start": "331840",
    "end": "338479"
  },
  {
    "text": "like as a java person i was like oh wow i i understand continuous delivery is like",
    "start": "338479",
    "end": "343919"
  },
  {
    "text": "pretty good but this is the problem now little bit simple you know similar thing",
    "start": "343919",
    "end": "350560"
  },
  {
    "text": "where all have you know we work in i.t you probably have nightmares of like",
    "start": "350560",
    "end": "355600"
  },
  {
    "text": "black friday is coming right you will need to be able to scale up your infrastructure",
    "start": "355600",
    "end": "362319"
  },
  {
    "text": "a lot but nobody's going to be able to tell you how much exactly like what's the load going to be well you know that",
    "start": "362319",
    "end": "367440"
  },
  {
    "text": "depends on marketing is your marketing campaign going to be effective your marketing and business people they're going to tell you oh we're going",
    "start": "367440",
    "end": "374160"
  },
  {
    "text": "to be crazy you know it's going to be super awesome now the problem is if you pre run a lot",
    "start": "374160",
    "end": "381759"
  },
  {
    "text": "of jms ready to get these you know billions of people that want to go to your website",
    "start": "381759",
    "end": "386800"
  },
  {
    "text": "they're going to pay a huge bill for all these servers that are running there",
    "start": "386800",
    "end": "392160"
  },
  {
    "text": "but not really processing much if you know if the expectation isn't reached and",
    "start": "392160",
    "end": "397280"
  },
  {
    "text": "the opposite is also possible like you're trying to scale dynamically depending on the load coming in",
    "start": "397280",
    "end": "402720"
  },
  {
    "text": "but the jvm you know takes time to start and then it takes time to warm up you",
    "start": "402720",
    "end": "409120"
  },
  {
    "text": "cannot predict uh the load uh as effectively as you would with another system which just",
    "start": "409120",
    "end": "414960"
  },
  {
    "text": "starts right away right so that's why lambdas or like simpler services are just",
    "start": "414960",
    "end": "420080"
  },
  {
    "text": "way easier to run on a client environment if your load isn't predictable right",
    "start": "420080",
    "end": "425599"
  },
  {
    "text": "so this starts to be a big problem because we're seeing that you know java isn't",
    "start": "425599",
    "end": "431520"
  },
  {
    "text": "then a good fit you're saying for continuous delivery or it's not fit if you want to scale",
    "start": "431520",
    "end": "436960"
  },
  {
    "text": "elastically scale on the clouds so you know it doesn't fit with trans people it doesn't fit with reality",
    "start": "436960",
    "end": "442960"
  },
  {
    "text": "right now we can go back and have our fun with performance and benchmarks",
    "start": "442960",
    "end": "448639"
  },
  {
    "text": "but if we are not fitting with reality um then maybe you know we shouldn't use this technology",
    "start": "448639",
    "end": "454080"
  },
  {
    "text": "now that's a big one now i'm sana grinovo i work in the",
    "start": "454080",
    "end": "459759"
  },
  {
    "text": "middleware engineering for reddot and we do research and development in the area there i'm very focused on the",
    "start": "459759",
    "end": "465120"
  },
  {
    "text": "java aspect so it this was kind of mind-blowing to me like oh well jvm is over like it's not a fit for the",
    "start": "465120",
    "end": "472400"
  },
  {
    "text": "technology needs of today anymore if you know unless we can solve these issues now i also work on hibernate",
    "start": "472400",
    "end": "479440"
  },
  {
    "text": "primarily like i've been working on that for 10 years and i'm leading the team now and you know these thoughts that we're",
    "start": "479440",
    "end": "484639"
  },
  {
    "text": "having today got me to work with a small core team within red hat which was like the protein research",
    "start": "484639",
    "end": "491440"
  },
  {
    "text": "team and you know protein was the code name for what quarkus became so what is this quercus it has this",
    "start": "491440",
    "end": "499280"
  },
  {
    "text": "weird tackle line you know it might sound a bit embarrassing if you're looking for you know facts and numbers but",
    "start": "499280",
    "end": "504879"
  },
  {
    "text": "supersonic it's it's there in the you know subtitle of the project well what we mean by that is like really",
    "start": "504879",
    "end": "511199"
  },
  {
    "text": "that it's it's designed to fast really fast but by fast we mean like really really fast like orders of",
    "start": "511199",
    "end": "517518"
  },
  {
    "text": "magnitude faster than other technologies that we have seen before on the jvm yeah and uh we're going to see today how",
    "start": "517519",
    "end": "525120"
  },
  {
    "text": "that's made possible and uh you know what what are the drawbacks for you like what do you need to take into account of",
    "start": "525120",
    "end": "530959"
  },
  {
    "text": "is this a good platform for you to use and why is it subatomic uh well that's another catchy phrase but",
    "start": "530959",
    "end": "537120"
  },
  {
    "text": "we're referring really to the the low memory overhead right it's uh",
    "start": "537120",
    "end": "542959"
  },
  {
    "text": "as i mentioned before like uh a typical framework will take you you know for a small service you would",
    "start": "542959",
    "end": "548959"
  },
  {
    "text": "need at least half a gigabyte of memory which you know used to be fine but now if you're doing micro services",
    "start": "548959",
    "end": "554320"
  },
  {
    "text": "and lots of containers lots of small micro services half a gigabyte each for a small thing",
    "start": "554320",
    "end": "559920"
  },
  {
    "text": "you're starting to consider well you know like you know could we write this in something else",
    "start": "559920",
    "end": "565040"
  },
  {
    "text": "it's going to take a tenth of the size right now we want to achieve the same size",
    "start": "565040",
    "end": "570959"
  },
  {
    "text": "without having to abandon all the nice tools that we have in jvm and",
    "start": "570959",
    "end": "576640"
  },
  {
    "text": "we don't want to have any performance drawback like the jvm is great we want to keep having these advantages um yeah",
    "start": "576640",
    "end": "586000"
  },
  {
    "text": "so what is quark is really it is a bit in the final space you could say",
    "start": "586000",
    "end": "591839"
  },
  {
    "text": "it's a toolkit it's also a bit of a framework uh i hope it will be clearer when we now see",
    "start": "591839",
    "end": "597120"
  },
  {
    "text": "some actual demos uh clearly it's designed to you know create java applications at",
    "start": "597120",
    "end": "603680"
  },
  {
    "text": "this point it's a bit limited to like a web uh development uh with we are going to expand that but",
    "start": "603680",
    "end": "610720"
  },
  {
    "text": "you know the focus has been like web applications rest endpoints uh components for",
    "start": "610720",
    "end": "616839"
  },
  {
    "text": "microservices it's very light and we have been designing it for raw vm",
    "start": "616839",
    "end": "623279"
  },
  {
    "text": "from upfront like when we saw what the gravian team was doing and we were thinking about this general problem we",
    "start": "623279",
    "end": "628800"
  },
  {
    "text": "were thinking like oh there is like so many opportunities here to do something great together",
    "start": "628800",
    "end": "635040"
  },
  {
    "text": "and now some group vm has some limitations in terms of like it's not really easy to",
    "start": "635040",
    "end": "641040"
  },
  {
    "text": "port your existing application to a girl vm native image now",
    "start": "641040",
    "end": "646079"
  },
  {
    "text": "we are overcoming all those limitations and we actually love those limitations because depending how you look at those",
    "start": "646079",
    "end": "651200"
  },
  {
    "text": "you know the fact that you cannot do certain things but because it needs to optimize for certain things they",
    "start": "651200",
    "end": "656880"
  },
  {
    "text": "fit perfectly what our goals are with these other projects so at the high level what we do is we",
    "start": "656880",
    "end": "664720"
  },
  {
    "text": "take your application which is defined by classes and configuration files as you are used to",
    "start": "664720",
    "end": "671920"
  },
  {
    "text": "and you know rather than making a runnable i don't know spring boot application or",
    "start": "671920",
    "end": "678320"
  },
  {
    "text": "a word deployment or an ear deployment that you then stuck in another application server we process",
    "start": "678320",
    "end": "685360"
  },
  {
    "text": "this at build time and we create an optimized runnable jar now this optimized runnable jar then you",
    "start": "685360",
    "end": "691600"
  },
  {
    "text": "can do two different things with it you can either run it on the jvm as this you know",
    "start": "691600",
    "end": "697120"
  },
  {
    "text": "java jar start this jar thing or you can process it again with the graveyam",
    "start": "697120",
    "end": "702640"
  },
  {
    "text": "native compiler and we're going to produce an elf binary so architectural specific",
    "start": "702640",
    "end": "709519"
  },
  {
    "text": "little binary which is pushing the boundaries even further and we'll see that now the architecture",
    "start": "709519",
    "end": "717680"
  },
  {
    "start": "716000",
    "end": "756000"
  },
  {
    "text": "of quarkx is built around extensions because we actually need to do some specific magic for different aspects of",
    "start": "717680",
    "end": "724480"
  },
  {
    "text": "you know what we're used to in the java ecosystem so for example uh hibernate will have an extension so",
    "start": "724480",
    "end": "731120"
  },
  {
    "text": "quarkus has a core thing and there is a quarkus extension for hibernate and then there is a quarkus extension for",
    "start": "731120",
    "end": "736800"
  },
  {
    "text": "vertex and a quercus extension for rusty steezy camel",
    "start": "736800",
    "end": "743200"
  },
  {
    "text": "in finnish pan and there is a ton more now this light it was like one of the very early launch time it's been a year",
    "start": "743200",
    "end": "750720"
  },
  {
    "text": "since we announced the project we have hundreds of extensions today contributed by many people",
    "start": "750720",
    "end": "756639"
  },
  {
    "start": "756000",
    "end": "796000"
  },
  {
    "text": "it also has an aim to embrace reactive uh both in external api so you can use",
    "start": "756639",
    "end": "764160"
  },
  {
    "text": "uh reactive apis or you can use imperative apis if that's more you know your cup of tea internally we",
    "start": "764160",
    "end": "771040"
  },
  {
    "text": "are making sure that everything is moving to a reactive as much as possible so that you have like",
    "start": "771040",
    "end": "776480"
  },
  {
    "text": "zero overhead and extremely good performance if you are more like into the reactive",
    "start": "776480",
    "end": "782800"
  },
  {
    "text": "camp and you need to push the boundaries if you want to just port applications like you're using to write them they",
    "start": "782800",
    "end": "788480"
  },
  {
    "text": "will just work as is out of the box they will just you know benefit from improved performance internally now",
    "start": "788480",
    "end": "796880"
  },
  {
    "start": "796000",
    "end": "813000"
  },
  {
    "text": "one of these goals is really like it's designed uh for to be container friendly which is a",
    "start": "796880",
    "end": "802160"
  },
  {
    "text": "new thing for java right you know we first we have java and we didn't have containers and containers came along and existing frameworks",
    "start": "802160",
    "end": "808639"
  },
  {
    "text": "you know they just have to work with it but they were not really designed for that front",
    "start": "808639",
    "end": "814079"
  },
  {
    "start": "813000",
    "end": "859000"
  },
  {
    "text": "now we're aiming here that the application that is built is also actually small on disk like all the stuff that we can like",
    "start": "814079",
    "end": "821760"
  },
  {
    "text": "recognize this is not going to be useful at runtime it's stripped out it's not",
    "start": "821760",
    "end": "826800"
  },
  {
    "text": "going to be necessary we're also making sure that the the way the dependencies are layered like we're",
    "start": "826800",
    "end": "832959"
  },
  {
    "text": "not uber jarring everything in one thing because that makes layering of container images like not very effective at all so we",
    "start": "832959",
    "end": "839440"
  },
  {
    "text": "just keep the libraries separate and change it and your application separates so you can",
    "start": "839440",
    "end": "845440"
  },
  {
    "text": "change your application very quickly and ship just some kilobytes of difference as a delta on top of your",
    "start": "845440",
    "end": "851440"
  },
  {
    "text": "existing images and boot it now of course we want to boot very fast and we want to consume",
    "start": "851440",
    "end": "858399"
  },
  {
    "text": "a lot less memory now when it comes to memory we need to point out we're not talking about heap sizes no",
    "start": "858399",
    "end": "864800"
  },
  {
    "start": "859000",
    "end": "998000"
  },
  {
    "text": "that's not the point at all if your application is running in a container",
    "start": "864800",
    "end": "870000"
  },
  {
    "text": "the linux kernel is watching it from outside it doesn't really care how much heap you're using what it",
    "start": "870000",
    "end": "875040"
  },
  {
    "text": "cares is how much residence sets memory you're using so this needs to include like all the",
    "start": "875040",
    "end": "880800"
  },
  {
    "text": "metadata and overhead that the jvm jvm has on top of the heap and you know",
    "start": "880800",
    "end": "885839"
  },
  {
    "text": "stacks so like the more processes you have you will consume some more memory the garbage collection process will need",
    "start": "885839",
    "end": "893120"
  },
  {
    "text": "some memory in its own and you know just all the definitions of classes the metadata of classes and you know car tables",
    "start": "893120",
    "end": "901040"
  },
  {
    "text": "all of the you know not symbols that actually make the jvm they consume memory that we normally",
    "start": "901040",
    "end": "906399"
  },
  {
    "text": "don't see when we're profiling application we're trying to take into account all these like",
    "start": "906399",
    "end": "912160"
  },
  {
    "text": "black matter as well and minimize for that so when we're measuring uh memory",
    "start": "912160",
    "end": "918800"
  },
  {
    "text": "this is how we suggest doing it um this is well on linux or mac i think it",
    "start": "918800",
    "end": "924880"
  },
  {
    "text": "works as well you just need to put the process id here",
    "start": "924880",
    "end": "930320"
  },
  {
    "text": "and it will dump you something like this like this is in uh bytes and then sorry kilobytes",
    "start": "930320",
    "end": "938079"
  },
  {
    "text": "and now this is the total memory consumption of the process it's not the heap right this is typically far larger so",
    "start": "938079",
    "end": "945920"
  },
  {
    "text": "um now you can constrain the total memory there are some new flags here and i have put a link here to",
    "start": "945920",
    "end": "952639"
  },
  {
    "text": "a blog from christine vlad who's like one of our colleagues at red as she's like super deep",
    "start": "952639",
    "end": "958639"
  },
  {
    "text": "into uh how garbage collectors work she's the designer of the shenandoah garbage collector and they added some flags in jvm to",
    "start": "958639",
    "end": "965519"
  },
  {
    "text": "allow you to better control um like java running in a container and explicitly",
    "start": "965519",
    "end": "971360"
  },
  {
    "text": "you know bound bound not only the heap but also like the full process memory because what happens when",
    "start": "971360",
    "end": "977759"
  },
  {
    "text": "you are not thinking about it well the kernel will see like if you're running like kubernetes or openshift",
    "start": "977759",
    "end": "983839"
  },
  {
    "text": "uh if you're going above the threshold that you allocated you it's your process is killed right",
    "start": "983839",
    "end": "989920"
  },
  {
    "text": "and then okay well it will restart it but you're back again in the warm-up problem and you know your service wasn't",
    "start": "989920",
    "end": "995759"
  },
  {
    "text": "available for a while so how do we compare now if i build a small rest",
    "start": "995759",
    "end": "1003360"
  },
  {
    "text": "uh service and by rest i mean we're going to use rest easy and undertow",
    "start": "1003360",
    "end": "1010079"
  },
  {
    "text": "and we expose some toy operations so it's not a very complex application but and then we compile this to growl vm",
    "start": "1010079",
    "end": "1017440"
  },
  {
    "text": "native we can run this in a process of 13 megabytes total right so that's the heap size i believe",
    "start": "1017440",
    "end": "1023839"
  },
  {
    "text": "is like two megabytes and then the rest is like one eleven megabytes of overhead now that's",
    "start": "1023839",
    "end": "1029038"
  },
  {
    "text": "thanks to the graph vm and atv match compiler um you can run the same thing on open",
    "start": "1029039",
    "end": "1034880"
  },
  {
    "text": "jdk hotspot you know under um on manage the jvm it will consume 74 megabytes and this is",
    "start": "1034880",
    "end": "1041760"
  },
  {
    "text": "like compared to like any other best of breed stack that you can find i'm not going to name any specific but",
    "start": "1041760",
    "end": "1048240"
  },
  {
    "text": "like if you can test most of them the best of those will consume about",
    "start": "1048240",
    "end": "1053280"
  },
  {
    "text": "twice quarkus now if you start making a more complex application let's introduce",
    "start": "1053280",
    "end": "1058880"
  },
  {
    "start": "1055000",
    "end": "1112000"
  },
  {
    "text": "hibernate transaction manager uh infinixpan for caching",
    "start": "1058880",
    "end": "1064080"
  },
  {
    "text": "and you know the gdbc driver the gdbc connection pool and we're not talking about toy",
    "start": "1064080",
    "end": "1069120"
  },
  {
    "text": "connection pools but like agrol is like very high performance connection pool so these are production grade components",
    "start": "1069120",
    "end": "1075120"
  },
  {
    "text": "but running at quarkus the total memory consumption of the process",
    "start": "1075120",
    "end": "1080559"
  },
  {
    "text": "in native image is still extremely low compared to what we're used to and you know same for jvm and you can",
    "start": "1080559",
    "end": "1087360"
  },
  {
    "text": "see now um now to give you a ballpark idea you know these 130 megabytes here",
    "start": "1087360",
    "end": "1093600"
  },
  {
    "text": "this is probably consuming like 20 megabytes of heap yeah but it gives you an idea like",
    "start": "1093600",
    "end": "1098880"
  },
  {
    "text": "you're wasting 110 megabytes in uh other stuff in the jvm that you",
    "start": "1098880",
    "end": "1104400"
  },
  {
    "text": "normally uh are not looking at so watch for it it's not a small amount in the",
    "start": "1104400",
    "end": "1110160"
  },
  {
    "text": "in the big picture and well startup time how are you referring",
    "start": "1110160",
    "end": "1115200"
  },
  {
    "start": "1112000",
    "end": "1295000"
  },
  {
    "text": "with startup time uh first off how we measure this as well it's not fair to measure",
    "start": "1115200",
    "end": "1121440"
  },
  {
    "text": "what the application itself is logging because you know the first time stamp it's taking is after the application actually",
    "start": "1121440",
    "end": "1128400"
  },
  {
    "text": "was able to do anything but there was it is the jvm starting before that right which is a very large amount of stuff",
    "start": "1128400",
    "end": "1135520"
  },
  {
    "text": "so what we do uh oh sorry other problem is many frameworks actually initialize some stuff lazily right so they will report oh and",
    "start": "1135520",
    "end": "1142080"
  },
  {
    "text": "now i'm done starting and so you know they measure way after they started",
    "start": "1142080",
    "end": "1147280"
  },
  {
    "text": "and then the report i'm done way before they actually finished because there is a lot of lazy stuff happening in the background and they're",
    "start": "1147280",
    "end": "1153520"
  },
  {
    "text": "telling you okay it was just like two seconds now that's not how we want to measure things we want to measure from",
    "start": "1153520",
    "end": "1159200"
  },
  {
    "text": "before the process was created to actually successfully returning the first request because that's what matters for our",
    "start": "1159200",
    "end": "1165280"
  },
  {
    "text": "business right so i have a little script for that and what it turns out like on rest",
    "start": "1165280",
    "end": "1171600"
  },
  {
    "text": "in gravim native we can respond from process doesn't exist to actually",
    "start": "1171600",
    "end": "1176840"
  },
  {
    "text": "respond in about 10 milliseconds and that's a full running like no lazy",
    "start": "1176840",
    "end": "1182080"
  },
  {
    "text": "loaded services now on openjdk it's way longer like we're talking orders of magnitude difference",
    "start": "1182080",
    "end": "1188400"
  },
  {
    "text": "but we're still below the single second mark yeah so it's much more suitable to scale this",
    "start": "1188400",
    "end": "1194400"
  },
  {
    "text": "dynamically or anything in containers at high speed now there is no other",
    "start": "1194400",
    "end": "1200160"
  },
  {
    "text": "framework at this point that can get closer to like four seconds if you do this external measurement",
    "start": "1200160",
    "end": "1207280"
  },
  {
    "text": "you start introducing more frameworks like let's do jpa as well you know",
    "start": "1207280",
    "end": "1213840"
  },
  {
    "text": "competition skyrockets to like nine and something seconds",
    "start": "1213840",
    "end": "1219520"
  },
  {
    "text": "while quarkus in native can still boot in around 50 milliseconds um this light is actually out of date",
    "start": "1219520",
    "end": "1226559"
  },
  {
    "text": "i'm not sure if i should you know in out of fairness fix it but we can actually boot this",
    "start": "1226559",
    "end": "1231760"
  },
  {
    "text": "in 10 milliseconds as well even on this very low powered laptop what happens in",
    "start": "1231760",
    "end": "1237520"
  },
  {
    "text": "40 of those milliseconds is we're creating the schema on the database now we're establishing all those connections and doing stuff on the",
    "start": "1237520",
    "end": "1243840"
  },
  {
    "text": "database so the actual boot of the framework is really still in the same ballpark as the rest",
    "start": "1243840",
    "end": "1250320"
  },
  {
    "text": "example and now on jvm it's a bit more complex because there actually are a lot of classes to be",
    "start": "1250320",
    "end": "1257039"
  },
  {
    "text": "loaded so it's still going to be about two seconds",
    "start": "1257039",
    "end": "1263600"
  },
  {
    "text": "now yeah two seconds but on a very underpowered machine right so we're measuring here",
    "start": "1263600",
    "end": "1268799"
  },
  {
    "text": "on a single core cpu and why are we doing that well out of you know to be able to compare better",
    "start": "1268799",
    "end": "1274559"
  },
  {
    "text": "different things like it's the amount of course you have actually influences a lot on how much memory",
    "start": "1274559",
    "end": "1279600"
  },
  {
    "text": "you're consuming so to make sure we can compare things right we are doing all metrics on single",
    "start": "1279600",
    "end": "1285919"
  },
  {
    "text": "core small or limited containers and you know in those conditions you can",
    "start": "1285919",
    "end": "1291679"
  },
  {
    "text": "boot into seconds the full stack show us i'm going to show you",
    "start": "1291679",
    "end": "1300480"
  },
  {
    "start": "1295000",
    "end": "1654000"
  },
  {
    "text": "now what i have here i have this small crowd demo is it it's",
    "start": "1302840",
    "end": "1309360"
  },
  {
    "text": "off yes that's good because it's not running",
    "start": "1309360",
    "end": "1315039"
  },
  {
    "text": "but let me show you the code first so this is intellij and this is how a configuration",
    "start": "1315039",
    "end": "1321840"
  },
  {
    "text": "file in quercus looks like so it's a simple properties file what we need is some gdbc configuration",
    "start": "1321840",
    "end": "1328880"
  },
  {
    "text": "of course we cannot really guess those and pretty much everything else is guessed or inferred like so you can have",
    "start": "1328880",
    "end": "1335120"
  },
  {
    "text": "additional properties but that's more like to override what quarkos is automatically",
    "start": "1335120",
    "end": "1341120"
  },
  {
    "text": "understanding from your application because doing build we're actually analyzing",
    "start": "1341120",
    "end": "1347200"
  },
  {
    "text": "everything like it's like an x-ray of your application and your dependencies and from there there is some logic that's being",
    "start": "1347200",
    "end": "1353360"
  },
  {
    "text": "triggered so i also wanted to uh you know drop and",
    "start": "1353360",
    "end": "1359120"
  },
  {
    "text": "recreate this schema every time we start and import my new example uh data set so my example data set is",
    "start": "1359120",
    "end": "1366400"
  },
  {
    "text": "easier we have three fluids to be inserted in a database",
    "start": "1366400",
    "end": "1371520"
  },
  {
    "text": "and then we have a web page which i'm not going to show you that is just some",
    "start": "1371520",
    "end": "1377120"
  },
  {
    "text": "it's it's just doing uh just showing you what's going on but you know we are doing the back end here",
    "start": "1377120",
    "end": "1383520"
  },
  {
    "text": "so we have a gpa entity now this is full hibernate right full",
    "start": "1383520",
    "end": "1389440"
  },
  {
    "text": "unmodified hibernate latest version um well i modified of course we we",
    "start": "1389440",
    "end": "1395120"
  },
  {
    "text": "patched it but now all the patches are in hibernate right so this is using like a named query it's",
    "start": "1395120",
    "end": "1402240"
  },
  {
    "text": "a cachable object it's you know you can use anything you normally do in hibernate",
    "start": "1402240",
    "end": "1407360"
  },
  {
    "text": "and it has a name and it has an id we also have like a jax rs rest endpoint",
    "start": "1407360",
    "end": "1415200"
  },
  {
    "text": "muppet with rest easy so we're going to have like a method to list all the fruits a method to retrieve one",
    "start": "1415200",
    "end": "1422159"
  },
  {
    "text": "fluid from the database to create a new fluid and persist it update it and delete it now crud",
    "start": "1422159",
    "end": "1429600"
  },
  {
    "text": "i also have like a helper thing to print timestamps when i measure for a good thing",
    "start": "1429600",
    "end": "1434720"
  },
  {
    "text": "and some more helper now this is all the application like there is no need to add",
    "start": "1434720",
    "end": "1440240"
  },
  {
    "text": "additional ceremony because like you wanted to rest endpoint fine what you what do you do you inject",
    "start": "1440240",
    "end": "1446400"
  },
  {
    "text": "an entity manager right so there is cdi here at place but cti isn't going to be running at runtime",
    "start": "1446400",
    "end": "1453120"
  },
  {
    "text": "like everything is being processed at build time and when generating the code that's making this magic work at runtime as you",
    "start": "1453120",
    "end": "1459760"
  },
  {
    "text": "would expect so now of course there is this is a maven project you could use gradle as",
    "start": "1459760",
    "end": "1466159"
  },
  {
    "text": "well we are importing some dependencies from quarkus and then you know we are importing well the",
    "start": "1466159",
    "end": "1472640"
  },
  {
    "text": "support you remember this approach via extensions so we are importing the extension which takes care",
    "start": "1472640",
    "end": "1479279"
  },
  {
    "text": "of hibernate which it's transitively pulling in a dependency on hybrid right it's not",
    "start": "1479279",
    "end": "1484720"
  },
  {
    "text": "having a different version of hibernate it's just making it easier by having transitive dependencies",
    "start": "1484720",
    "end": "1490320"
  },
  {
    "text": "and then we want like the connection pool rest easy and the json b encoders the gdbc driver for mariadb and smaller",
    "start": "1490320",
    "end": "1498320"
  },
  {
    "text": "eye open api i like to use those and we have testing support",
    "start": "1498320",
    "end": "1504159"
  },
  {
    "text": "but let's just run this well first i need to build it clean",
    "start": "1504159",
    "end": "1511279"
  },
  {
    "text": "package not much magic here going on it's just corkus oh sorry i",
    "start": "1511279",
    "end": "1517440"
  },
  {
    "text": "forgot to show you there is a there is a quercus plugin here",
    "start": "1517440",
    "end": "1522960"
  },
  {
    "text": "quarkus maven plugin that's what's doing all the magic you add that thing and now",
    "start": "1525600",
    "end": "1532720"
  },
  {
    "text": "what we have here is the the jar which contains those two classes",
    "start": "1532720",
    "end": "1538240"
  },
  {
    "text": "and the resource file that we have but we also created a runner jar",
    "start": "1538240",
    "end": "1544720"
  },
  {
    "text": "which you can run like this [Music]",
    "start": "1544720",
    "end": "1550480"
  },
  {
    "text": "quark who's the mario db i want a runner version start is up and there it is up",
    "start": "1550480",
    "end": "1558640"
  },
  {
    "text": "it started and let me go back to our web service yeah so now i have those",
    "start": "1558640",
    "end": "1565760"
  },
  {
    "text": "three fruits that we created a cherry a banana and still just an",
    "start": "1565760",
    "end": "1570880"
  },
  {
    "text": "apple there let me store a new fruit everything is working fine",
    "start": "1570880",
    "end": "1576559"
  },
  {
    "text": "now this is pretty much corkus the the difference really is like how it processed all of these things and it booted",
    "start": "1576559",
    "end": "1584400"
  },
  {
    "text": "in so here it's reporting a second and a half but you know we're not doing the proper",
    "start": "1584400",
    "end": "1590240"
  },
  {
    "text": "measurement i explained like let me show you so",
    "start": "1590240",
    "end": "1596240"
  },
  {
    "text": "some scripts here uh shoulder rss right so this is consuming now 290",
    "start": "1597840",
    "end": "1605279"
  },
  {
    "text": "megabytes of memory now of course because we didn't really constrain the memory at all right so you",
    "start": "1605279",
    "end": "1611200"
  },
  {
    "text": "know the jvm does kind of use ergonomics",
    "start": "1611200",
    "end": "1617360"
  },
  {
    "text": "let's stick this in a 30 megabyte heap and see does it still start does it still work yes",
    "start": "1617360",
    "end": "1623840"
  },
  {
    "text": "it didn't even consume far more where is my script now of course you see",
    "start": "1623840",
    "end": "1629840"
  },
  {
    "text": "this is getting quite lower because like heap is there but there still is some other overheads like this",
    "start": "1629840",
    "end": "1636799"
  },
  {
    "text": "now of course if you compare this with other frameworks you would see like a very higher cost like this is complete uh",
    "start": "1638480",
    "end": "1644080"
  },
  {
    "text": "cost of the process in memory but let me go back to slice because i",
    "start": "1644080",
    "end": "1649600"
  },
  {
    "text": "have far many more things to show you um",
    "start": "1649600",
    "end": "1655039"
  },
  {
    "start": "1654000",
    "end": "2150000"
  },
  {
    "text": "how does this work well before explaining how this work let me explain you how",
    "start": "1655039",
    "end": "1660720"
  },
  {
    "text": "hibernate or other frameworks or like the typical libraries normally boot now what we have is your",
    "start": "1660720",
    "end": "1668080"
  },
  {
    "text": "application which is like a java jar or maybe a deployment",
    "start": "1668080",
    "end": "1673919"
  },
  {
    "text": "now at boot time when you're starting this thing uh let's say you're booting hibernate like you have many frameworks in your",
    "start": "1673919",
    "end": "1680720"
  },
  {
    "text": "in your stock but you're going to boot one by one all of these components now the first thing that we need to do is uh",
    "start": "1680720",
    "end": "1688559"
  },
  {
    "text": "well like i'm a hybrid guy so i know all those details there right so i i'll take this example but first thing",
    "start": "1688559",
    "end": "1694799"
  },
  {
    "text": "is like where are the configuration files like i don't know if you are using a persistent xml file or maybe hybrid or",
    "start": "1694799",
    "end": "1700320"
  },
  {
    "text": "properties or hibernate hbm file you know there are multiple ways that you can configure this thing i need to search for all of these things",
    "start": "1700320",
    "end": "1708159"
  },
  {
    "text": "and you know i need to search them on the file system in various places and i also need to search them across the resources",
    "start": "1708159",
    "end": "1714559"
  },
  {
    "text": "now we live in a modular world modular application servers searching for resources means i need to",
    "start": "1714559",
    "end": "1721120"
  },
  {
    "text": "actually check different class loaders in different orders there are their rules to respect so you know i'm going",
    "start": "1721120",
    "end": "1726480"
  },
  {
    "text": "to check for the first resource here i fail over there i fail again you know exceptions being swallowed there is a lot of stuff going on there",
    "start": "1726480",
    "end": "1734240"
  },
  {
    "text": "now when i find one let's say i find a persistent xml okay it's an xml file let me boot",
    "start": "1734240",
    "end": "1741360"
  },
  {
    "text": "you know the xml parser that the jvm has now that's 300 classes that need to be loaded they",
    "start": "1741360",
    "end": "1747279"
  },
  {
    "text": "need to be initialized they have their static constants in there that need to be initialized as well that's 19 megabytes of memory just",
    "start": "1747279",
    "end": "1754000"
  },
  {
    "text": "in constants if you measure that that's not to parse the file that's just to boot the xml parser",
    "start": "1754000",
    "end": "1760480"
  },
  {
    "text": "yeah and then we know we can finally parse this thing and create a model",
    "start": "1760480",
    "end": "1766080"
  },
  {
    "text": "which is our configuration file and from there there is more work to do right so at that point it's like okay well this is",
    "start": "1766080",
    "end": "1772159"
  },
  {
    "text": "the configuration where are the entities and off we go again let's find anything",
    "start": "1772159",
    "end": "1777679"
  },
  {
    "text": "that might be annotated with like gpa annotations or hibernate annotations everywhere in the class part because i",
    "start": "1777679",
    "end": "1783679"
  },
  {
    "text": "have no idea where you might be hiding those and you're going to complain if you're not finding them you know",
    "start": "1783679",
    "end": "1789919"
  },
  {
    "text": "so uh scanning this scanning if it's not done properly like use uh in all time we would do it",
    "start": "1789919",
    "end": "1797200"
  },
  {
    "text": "with reflection and that would be very slow and of course it's depending you know the the cost of this is depending on how many jars and",
    "start": "1797200",
    "end": "1804000"
  },
  {
    "text": "how large are these files that you're having on class but now we have many of those normally right",
    "start": "1804000",
    "end": "1810320"
  },
  {
    "text": "now then we need to find extension points like oh you have this additional plug-in or like service or callback factory that",
    "start": "1810320",
    "end": "1817520"
  },
  {
    "text": "you want to be registered with the integration thing that we automatically register and buy into it",
    "start": "1817520",
    "end": "1826000"
  },
  {
    "text": "so that's more class part scanning and searching and thing now finally we built like this in memory",
    "start": "1826000",
    "end": "1831919"
  },
  {
    "text": "meta model and most of the time you know exception oh you forgot the critical annotation",
    "start": "1831919",
    "end": "1837679"
  },
  {
    "text": "there uh let's start over kill it um when you're lucky at this point you",
    "start": "1837679",
    "end": "1844159"
  },
  {
    "text": "know we need to create a like an optimized version of this model so that then when we're actually working we have like most of the",
    "start": "1844159",
    "end": "1851200"
  },
  {
    "text": "prepared statements that we will need at runtime they will need to be ready uh so that we are not you know generating too much garbage at runtime",
    "start": "1851200",
    "end": "1858000"
  },
  {
    "text": "uh all the you know injection points need to be created we will need to create like",
    "start": "1858000",
    "end": "1864080"
  },
  {
    "text": "class definitions for proxies we might need to enhance your objects which means like bytecode manipulation of your",
    "start": "1864080",
    "end": "1869919"
  },
  {
    "text": "classes which also implies like if i'm changing the bytecode of your class then the class path oh you know we need",
    "start": "1869919",
    "end": "1877440"
  },
  {
    "text": "to get rid of the old definition we need to drop the class path create a new class loader",
    "start": "1877440",
    "end": "1882480"
  },
  {
    "text": "and start over and then finally you know you validate world but",
    "start": "1882480",
    "end": "1888960"
  },
  {
    "text": "this was just hibernate then you know the next framework starts and says let me find everything which",
    "start": "1888960",
    "end": "1894480"
  },
  {
    "text": "has another you know the jax b annotation or the cdi annotation or so on now this is why it takes a long time to",
    "start": "1894480",
    "end": "1902640"
  },
  {
    "text": "boot and why there is a ton of classes being initialized in the jdk because there is a lot of work happening",
    "start": "1902640",
    "end": "1909120"
  },
  {
    "text": "when your application is starting and well finally eventually you know you manage to get",
    "start": "1909120",
    "end": "1914480"
  },
  {
    "text": "okay we can open 8080 we can start responding right",
    "start": "1914480",
    "end": "1920320"
  },
  {
    "text": "now that's quite some work and it's uh you know it's intensive on",
    "start": "1920320",
    "end": "1926880"
  },
  {
    "text": "the gvm side it's loading a lot of classes like this xml parser",
    "start": "1926880",
    "end": "1932000"
  },
  {
    "text": "it is 200 xml parser files which you only need once to pass the configuration",
    "start": "1932000",
    "end": "1937840"
  },
  {
    "text": "file beginning they have all been loaded and maybe optimized may be you know evaluated for compilation by",
    "start": "1937840",
    "end": "1943600"
  },
  {
    "text": "jet and all that now that's a lot of fat",
    "start": "1943600",
    "end": "1948960"
  },
  {
    "text": "you know when you put this thing in a container and this fat starts to matter that's one thing like you're paying some",
    "start": "1948960",
    "end": "1955519"
  },
  {
    "text": "cost there what's more worrying is that you're paying this cost many many times when",
    "start": "1955519",
    "end": "1960720"
  },
  {
    "text": "you go to microservices or continuous delivery you're redeploying over and over and over every",
    "start": "1960720",
    "end": "1966080"
  },
  {
    "text": "time you're redeploying or scaling up your service you're paying that cost again you know you can put some number",
    "start": "1966080",
    "end": "1973519"
  },
  {
    "text": "in dollars on that cost like one dollar two dollars i don't know depends on your system but this one each",
    "start": "1973519",
    "end": "1981039"
  },
  {
    "text": "now in quarkus we try to do everything or as much as possible during the build",
    "start": "1981440",
    "end": "1987840"
  },
  {
    "text": "of the application and it makes a lot of sense if you think of it in terms of you know containers",
    "start": "1987840",
    "end": "1993360"
  },
  {
    "text": "and cloud environments um in terms of uh bytecode um",
    "start": "1993360",
    "end": "1998559"
  },
  {
    "text": "sorry so then we take this state and we create uh via bytecode processing or bytecode",
    "start": "1998559",
    "end": "2004080"
  },
  {
    "text": "generation we we capture the state of what's a working state for your application",
    "start": "2004080",
    "end": "2011600"
  },
  {
    "text": "and dump that to disk so that then this is the state you can go directly into runtime mod so this is",
    "start": "2011600",
    "end": "2018240"
  },
  {
    "text": "how it looks like all these you know the configuration the analysis the scanning thing we do it via this maven plugin right or",
    "start": "2018240",
    "end": "2026240"
  },
  {
    "text": "doing the gradle plugin now the drawback is you are not allowed to make changes",
    "start": "2026240",
    "end": "2031360"
  },
  {
    "text": "after the application is built right so forget about the idea of like i'm packaging my application and then i",
    "start": "2031360",
    "end": "2037200"
  },
  {
    "text": "deploy it on the server and configure you know i change the data source from postgres to oracle",
    "start": "2037200",
    "end": "2042880"
  },
  {
    "text": "like who would do that anyway you know if i hope you know which database you're going to target and",
    "start": "2042880",
    "end": "2048398"
  },
  {
    "text": "we all know that it's not a good idea to change a container image uh after you shipped it right so you're",
    "start": "2048399",
    "end": "2054720"
  },
  {
    "text": "building a container image here and that's meant to be immutable and the state you need there",
    "start": "2054720",
    "end": "2060079"
  },
  {
    "text": "is all you have like you're not going to make changes or you want to maybe build another one",
    "start": "2060079",
    "end": "2065440"
  },
  {
    "text": "that's entirely possible now this state at the end that's",
    "start": "2065440",
    "end": "2071358"
  },
  {
    "text": "goes directly to you know load the classes we need for actual running and only those",
    "start": "2071359",
    "end": "2078960"
  },
  {
    "text": "and that's uh you know up um let's get the second tool so the",
    "start": "2078960",
    "end": "2086560"
  },
  {
    "text": "extension model so the these extensions that we have they take care of",
    "start": "2086560",
    "end": "2091679"
  },
  {
    "text": "uh helping each of these individual frameworks to accomplish these optimizations but we can also like",
    "start": "2091679",
    "end": "2098000"
  },
  {
    "text": "physically strip out all the stuff that you don't need so for example i had this rant about xml",
    "start": "2098000",
    "end": "2104560"
  },
  {
    "text": "parsers right now if you need xml parsers because you're parsing configuration here but you don't need them at runtime",
    "start": "2104560",
    "end": "2110560"
  },
  {
    "text": "in a quercus build application the quarkus the xml parsers will not be in the final shifted code",
    "start": "2110560",
    "end": "2118560"
  },
  {
    "text": "they are not there because they are not really needed right now the same goes for a lot of other",
    "start": "2118560",
    "end": "2124000"
  },
  {
    "text": "dependencies like we like hibernate does bytecode enhancements of entities we use a bite body for that which uses",
    "start": "2124000",
    "end": "2131119"
  },
  {
    "text": "asm now that's many very cool libraries but we only need them during the build they will not be included",
    "start": "2131119",
    "end": "2136880"
  },
  {
    "text": "in your image at the end which is great for many reasons right you are not going to support those",
    "start": "2136880",
    "end": "2142400"
  },
  {
    "text": "libraries at runtime and you know they're not a security liability or anything",
    "start": "2142400",
    "end": "2149920"
  },
  {
    "start": "2150000",
    "end": "2322000"
  },
  {
    "text": "um so an extension looks like this in terms of maven models like you have a",
    "start": "2150000",
    "end": "2155440"
  },
  {
    "text": "deployment maven model and the runtime maven model every single extension in quercus is",
    "start": "2155440",
    "end": "2161520"
  },
  {
    "text": "modulated like the same pattern so we can actually separate the code physically like this is going to be run",
    "start": "2161520",
    "end": "2167520"
  },
  {
    "text": "in this phase and it's going to be run there but also we're only going to ship the dependencies and the module runtime",
    "start": "2167520",
    "end": "2173280"
  },
  {
    "text": "itself gendex is a library we use",
    "start": "2173280",
    "end": "2180880"
  },
  {
    "text": "to find all the annotations the very well it has many great features like the the",
    "start": "2180880",
    "end": "2187119"
  },
  {
    "text": "main one is it doesn't initialize the classes at all like so it's going to search or give you a way to identify",
    "start": "2187119",
    "end": "2193119"
  },
  {
    "text": "classes which have specific annotations or specific interfaces directly from an index this index can be",
    "start": "2193119",
    "end": "2199280"
  },
  {
    "text": "pre-built and it can be stored in your jars if you want you can do",
    "start": "2199280",
    "end": "2204400"
  },
  {
    "text": "many interesting things but the most important aspect is we do this once on behalf of all the frameworks that are",
    "start": "2204400",
    "end": "2210400"
  },
  {
    "text": "booting right so there is no exponential complexity there arc is a new project that we use",
    "start": "2210400",
    "end": "2217119"
  },
  {
    "text": "it this implements uh most of cdi it's not a full implementation of cdi at",
    "start": "2217119",
    "end": "2222720"
  },
  {
    "text": "this point yet it does all the dependence injection but it does it all at build time so you have",
    "start": "2222720",
    "end": "2228160"
  },
  {
    "text": "no overhead at runtime and gizmo is a bytecode generation library that's",
    "start": "2228160",
    "end": "2234079"
  },
  {
    "text": "helpful to you know create this state or create these representations of state that are your application now this means like",
    "start": "2234079",
    "end": "2241440"
  },
  {
    "text": "you're loading far less classes and um you know it's smaller and uh",
    "start": "2241440",
    "end": "2249040"
  },
  {
    "text": "the final point is really interesting like most of the things that we do at build time are exactly the red flags to compile",
    "start": "2249040",
    "end": "2256480"
  },
  {
    "text": "something in graph you have native images like there are some rules you cannot do bytecode enhancement you",
    "start": "2256480",
    "end": "2261760"
  },
  {
    "text": "cannot do proxies you cannot do reflections unless you specifically list",
    "start": "2261760",
    "end": "2266880"
  },
  {
    "text": "the you know make the full list of all those things but we do this all of all of these things we",
    "start": "2266880",
    "end": "2273920"
  },
  {
    "text": "are done at build time they are not done later they are not even part of the set",
    "start": "2273920",
    "end": "2279200"
  },
  {
    "text": "of code that's being compiled by gravel vm so they're not a problem at all we can do this uh in a far easier way",
    "start": "2279200",
    "end": "2286160"
  },
  {
    "text": "than convert a traditional application to growl vm",
    "start": "2286160",
    "end": "2290880"
  },
  {
    "text": "just general architecture so we have these basic components right the ground sdk",
    "start": "2291200",
    "end": "2296400"
  },
  {
    "text": "which we use to you know give hints to our compiler about what each of these components are",
    "start": "2296400",
    "end": "2301839"
  },
  {
    "text": "needing and every extension and you know a lot of people have contributed extensions you can add your own there",
    "start": "2301839",
    "end": "2308560"
  },
  {
    "text": "every extension is driving these basic core components so that for example you know it can let the",
    "start": "2308560",
    "end": "2313680"
  },
  {
    "text": "compiler know about i'm going to need these specific flags or this specific behavior or i'm going to need the annotation",
    "start": "2313680",
    "end": "2320560"
  },
  {
    "text": "scanning and so on but there is one more consequence here that i have not mentioned yet",
    "start": "2320560",
    "end": "2326960"
  },
  {
    "start": "2322000",
    "end": "2608000"
  },
  {
    "text": "and it's really really nice um we call it developer's joy aspect of",
    "start": "2326960",
    "end": "2333280"
  },
  {
    "text": "quercus and this is a consequence of being so extremely light",
    "start": "2333280",
    "end": "2338560"
  },
  {
    "text": "in booting and also not loading all those classes at all",
    "start": "2338560",
    "end": "2344240"
  },
  {
    "text": "let me show you i'm going to kill the application i started before and now we're going to run it in a",
    "start": "2344240",
    "end": "2351440"
  },
  {
    "text": "different mode level mode it's up",
    "start": "2351440",
    "end": "2358880"
  },
  {
    "text": "and running and it's even opened like the debug port",
    "start": "2358880",
    "end": "2365280"
  },
  {
    "text": "now what does it imply uh so first off it reset my database you remember we are",
    "start": "2365280",
    "end": "2370480"
  },
  {
    "text": "setting this to import the schema every time right now in developer mode you have the jvm",
    "start": "2370480",
    "end": "2375520"
  },
  {
    "text": "running there and it's now watching your project for changes now if i switch to my",
    "start": "2375520",
    "end": "2382160"
  },
  {
    "text": "id and now i can make any change i like right so let me add the fruit here yeah so if i",
    "start": "2382160",
    "end": "2390560"
  },
  {
    "text": "add the fruit now easy i change your resource let me",
    "start": "2390560",
    "end": "2396640"
  },
  {
    "text": "refresh this what's happened you see in the bottom left you know hot replace total time",
    "start": "2396640",
    "end": "2403480"
  },
  {
    "text": "360 milliseconds now this was the full reboot of the stack",
    "start": "2403480",
    "end": "2409280"
  },
  {
    "text": "why was it that when i started this in jvm mode it takes two seconds and now it took only 300",
    "start": "2409280",
    "end": "2414720"
  },
  {
    "text": "milliseconds well because we are not restarting the jdk and i told you like the biggest",
    "start": "2414720",
    "end": "2419760"
  },
  {
    "text": "overhead is all the jdk classes that need to be initialized now here we have a complete drop of the code of your application",
    "start": "2419760",
    "end": "2426800"
  },
  {
    "text": "it's completely being rebuilt you know all the class enhancement scanning everything",
    "start": "2426800",
    "end": "2432560"
  },
  {
    "text": "that we need to do to build your application is being done in those 300 milliseconds and then is restarted again",
    "start": "2432560",
    "end": "2439838"
  },
  {
    "text": "do i have a mango here yes i have yeah let me delete some and now this was easy",
    "start": "2440160",
    "end": "2446880"
  },
  {
    "text": "i changed the resource right but now we're not using agents or like j rebel or anything you know",
    "start": "2446880",
    "end": "2453760"
  },
  {
    "text": "they those things they they have been amazing but",
    "start": "2453760",
    "end": "2458880"
  },
  {
    "text": "you know there was a difference between restarting your application from scratch and clean",
    "start": "2458880",
    "end": "2464319"
  },
  {
    "text": "and seeing if the agent was able to do some magic for you now let's do something which is like a bit more",
    "start": "2464319",
    "end": "2469839"
  },
  {
    "text": "crazy you know i could change the entity uh now you see there is this find all",
    "start": "2469839",
    "end": "2477119"
  },
  {
    "text": "here they are sorted by id yeah so if i go here uh",
    "start": "2477119",
    "end": "2482319"
  },
  {
    "text": "apparently i'm sorry well i forgot those well let's let me change the query",
    "start": "2482319",
    "end": "2488079"
  },
  {
    "text": "sort by name yeah i save i go here i refresh and there i have",
    "start": "2488079",
    "end": "2495119"
  },
  {
    "text": "a b c well sorry oh yes though i still have the mango in",
    "start": "2495119",
    "end": "2501200"
  },
  {
    "text": "my import of course don't you believe we change the code i can go back and set the id",
    "start": "2501200",
    "end": "2507359"
  },
  {
    "text": "because it was maybe not too clear i see now it's no longer abc yeah i made a",
    "start": "2507359",
    "end": "2514079"
  },
  {
    "text": "change to the entity and you know everything has been rebuilt so even you know the meta model of hibernate has",
    "start": "2514079",
    "end": "2519839"
  },
  {
    "text": "been restarted and the whole application has been restarted that's all really because",
    "start": "2519839",
    "end": "2525200"
  },
  {
    "text": "it is very it's very light there isn't much that needs to be initialized or rebooted",
    "start": "2525200",
    "end": "2531760"
  },
  {
    "text": "so that's what you call developer joy you just change your code while it's running and you keep going",
    "start": "2534720",
    "end": "2539920"
  },
  {
    "text": "and uh i can even make uh errors let me show you one um",
    "start": "2539920",
    "end": "2546400"
  },
  {
    "text": "i lost my screen yeah let's make i don't know um i forgot the id here yeah",
    "start": "2546400",
    "end": "2554319"
  },
  {
    "text": "and you get there oh the hybrid thing you have no identifier here we can go back and fix my thing",
    "start": "2554319",
    "end": "2564240"
  },
  {
    "text": "there we are application working again yeah",
    "start": "2564240",
    "end": "2568560"
  },
  {
    "text": "it feels a bit like php right it feels a bit dirty",
    "start": "2571520",
    "end": "2576000"
  },
  {
    "text": "but that really is the point right you you might have seen people that you know you need something very light you do it in php and you know a change",
    "start": "2577359",
    "end": "2584240"
  },
  {
    "text": "is needed you just ssh to the server make the change to the page and you're done right it's it's very dirty but it's",
    "start": "2584240",
    "end": "2590560"
  },
  {
    "text": "sometimes it's very effective um so these extensions you know you are",
    "start": "2590560",
    "end": "2596880"
  },
  {
    "text": "needing them to bypass the gldm limitations but they also enable you to do all of these optimizations",
    "start": "2596880",
    "end": "2603599"
  },
  {
    "text": "uh yeah only five minutes um so where is the catch well that's the",
    "start": "2603599",
    "end": "2611200"
  },
  {
    "text": "fun part right there there isn't really no um it's running consuming less memory which",
    "start": "2611200",
    "end": "2618560"
  },
  {
    "text": "is just a good thing right and you're also having far less code actually loaded in the jvm",
    "start": "2618560",
    "end": "2624240"
  },
  {
    "text": "which is great because the just-in-time compiler can focus on the code that matters for your",
    "start": "2624240",
    "end": "2629680"
  },
  {
    "text": "runtime and not on all the other garbage which is there and you know a lot of optimizations the",
    "start": "2629680",
    "end": "2635119"
  },
  {
    "text": "jvm can do are based on like how many types of this kind that are around can i optimize this polymorphic",
    "start": "2635119",
    "end": "2641119"
  },
  {
    "text": "or megamorphic call or not so you know the performance is is pretty good um",
    "start": "2641119",
    "end": "2647280"
  },
  {
    "text": "and why do i mean like no compromises like you're really running here the best of breed of the jvm stocks here like they are unmodified",
    "start": "2647280",
    "end": "2654480"
  },
  {
    "text": "or even better in some cases now for example the http",
    "start": "2654480",
    "end": "2659599"
  },
  {
    "text": "layer is based on undertow which was used to like it uses to win all the benchmarks",
    "start": "2659599",
    "end": "2666400"
  },
  {
    "text": "on um what's the name again and then lapses um attacking power like all the attack and",
    "start": "2666400",
    "end": "2673440"
  },
  {
    "text": "power benchmarks like at some point they were being run and like they were being won by undertale",
    "start": "2673440",
    "end": "2678880"
  },
  {
    "text": "that was under 202 then vertex took over now fun thing",
    "start": "2678880",
    "end": "2685280"
  },
  {
    "text": "the vertex team and the undertow team they're working together on the quercus rest endpoint it's going",
    "start": "2685280",
    "end": "2691119"
  },
  {
    "text": "to be the best of breed of those two things this is working progress but it's almost merged already so that's just an",
    "start": "2691119",
    "end": "2698640"
  },
  {
    "text": "example of like we are also very focused on like we want the best runtime performance and it's not just",
    "start": "2698640",
    "end": "2704000"
  },
  {
    "text": "about you know the build and and thing and things um unfortunately",
    "start": "2704000",
    "end": "2709040"
  },
  {
    "text": "i'll have to skip this um but yeah just to wrap this up so it's the same google java like you",
    "start": "2709040",
    "end": "2715839"
  },
  {
    "text": "have seen this code how long is it going to take you to learn [Music]",
    "start": "2715839",
    "end": "2721200"
  },
  {
    "text": "this like it's the same rest easy it's the same hibernate and it's the same",
    "start": "2721200",
    "end": "2726240"
  },
  {
    "text": "other 200 frameworks that we are supporting out there it's just being built and packaged in a",
    "start": "2726240",
    "end": "2731680"
  },
  {
    "text": "different way like there is this notion of application server which we are getting rid of because of you know",
    "start": "2731680",
    "end": "2738160"
  },
  {
    "text": "containers and how the classes are working and now a note about the native image",
    "start": "2738160",
    "end": "2744839"
  },
  {
    "text": "performance when it's compiled all the way to native the performance is slightly lower",
    "start": "2744839",
    "end": "2751280"
  },
  {
    "text": "oh i'm sorry i didn't show you i need to show that it's too good",
    "start": "2751280",
    "end": "2756400"
  },
  {
    "text": "let me kill the demo here so let's build this as a native",
    "start": "2757359",
    "end": "2762640"
  },
  {
    "text": "application let me check if i'm running the right jvm here",
    "start": "2762640",
    "end": "2769520"
  },
  {
    "text": "no i'm using the growl",
    "start": "2769760",
    "end": "2775920"
  },
  {
    "text": "version 1931 for jdk 11 now let me do a clean package but enabling",
    "start": "2775920",
    "end": "2783520"
  },
  {
    "text": "the native profile now this is going to do all the same processing that we did before but then",
    "start": "2783520",
    "end": "2790560"
  },
  {
    "text": "the runner jar which is generated it's a maven profile yeah",
    "start": "2790560",
    "end": "2798400"
  },
  {
    "text": "yes but i triggered the environment variable yeah yeah but you're right typically it should be dashby",
    "start": "2799920",
    "end": "2807200"
  },
  {
    "text": "now this is going to take a couple minutes that's why i let it run right away and then i can finish my talk",
    "start": "2808079",
    "end": "2814319"
  },
  {
    "text": "but it's also interesting to watch what it is doing like uh if you see here now that's the command",
    "start": "2814319",
    "end": "2820079"
  },
  {
    "text": "line that's invoking the native image thing and you have some statistics here but in between now you see oh hibernate core",
    "start": "2820079",
    "end": "2826839"
  },
  {
    "text": "5410 what this is the compiler but it's it's starting the frameworks",
    "start": "2826839",
    "end": "2834800"
  },
  {
    "text": "in the jvm like it's the compiler is running in java it that's how growl vm works and it's",
    "start": "2834800",
    "end": "2840800"
  },
  {
    "text": "actually starting our libraries so that's their libraries like we can delegate",
    "start": "2840800",
    "end": "2845920"
  },
  {
    "text": "the work of like building this metadata validating the model creating the state that you need at",
    "start": "2845920",
    "end": "2852880"
  },
  {
    "text": "runtime that's being created within the memory space of the compiler",
    "start": "2852880",
    "end": "2858559"
  },
  {
    "text": "and then when we are ready to like we have like a booted up hibernate the only thing that's missing there is of course",
    "start": "2858559",
    "end": "2864640"
  },
  {
    "text": "we didn't do connections to the database right we stopped right before that point now when you have that state now we take",
    "start": "2864640",
    "end": "2871520"
  },
  {
    "text": "a snapshot of the heap and that's what the native image is then compiling to uh to native code",
    "start": "2871520",
    "end": "2880319"
  },
  {
    "text": "right so the actual booting of uh the frameworks uh it's completely",
    "start": "2880319",
    "end": "2886880"
  },
  {
    "text": "done and there is a very nice additional benefit from this now it means that all of this state",
    "start": "2886880",
    "end": "2894240"
  },
  {
    "text": "that's being generated and captured during the boot is a compile time constant the compiler",
    "start": "2894240",
    "end": "2899680"
  },
  {
    "text": "can go nuts on optimizing additional code based on the assumptions that it's gathering from",
    "start": "2899680",
    "end": "2905119"
  },
  {
    "text": "this output and by nuts i mean it can actually",
    "start": "2905119",
    "end": "2910400"
  },
  {
    "text": "remove every single symbol and method or class which is not going to be absolutely",
    "start": "2910400",
    "end": "2916960"
  },
  {
    "text": "necessary at runtime and that's why the binary is",
    "start": "2916960",
    "end": "2922640"
  },
  {
    "text": "story i had it's it's almost done uh let me just",
    "start": "2922640",
    "end": "2930559"
  },
  {
    "text": "finish talking about the native image performance so it is slightly lower than the jvm mode",
    "start": "2930559",
    "end": "2937280"
  },
  {
    "text": "at least in our tests it will depend of course on your specific application like generally speaking we see it is",
    "start": "2937280",
    "end": "2944480"
  },
  {
    "text": "like 30 slower with our you know typical quarkus rest endpoints",
    "start": "2944480",
    "end": "2949839"
  },
  {
    "text": "but still it is a very winner in it's a very good economical choice of technology because",
    "start": "2949839",
    "end": "2956160"
  },
  {
    "text": "you know it consumes far less memory if your build is in amount of megabytes you know that you're consuming",
    "start": "2956160",
    "end": "2961920"
  },
  {
    "text": "and most of us are maybe you're not aware but all machines on clouds they are scaling up mostly by memory cost and more than by",
    "start": "2961920",
    "end": "2968640"
  },
  {
    "text": "cpu's costs and you don't need warm-up you remember my big",
    "start": "2968640",
    "end": "2974480"
  },
  {
    "text": "big problem like jvm is not fit for this line of business uh well now it is this",
    "start": "2974480",
    "end": "2981040"
  },
  {
    "text": "isn't a source problem this is making it fit to run your applications",
    "start": "2981040",
    "end": "2986559"
  },
  {
    "text": "written in java using java libraries and you have no warmer problems and you can",
    "start": "2986559",
    "end": "2992559"
  },
  {
    "text": "like instantly scale up and down you can create lambdas with this code and there is a very nice",
    "start": "2992559",
    "end": "3000559"
  },
  {
    "text": "additional thought which is you don't really need to make a choice upfront about this right you know you can build everything in java use the",
    "start": "3000559",
    "end": "3008000"
  },
  {
    "text": "debuggers if the jvm have fun on the jvm and then you know at some point if you see that",
    "start": "3008000",
    "end": "3013920"
  },
  {
    "text": "the kind of needs you have at runtime are a better fit for the native image you just compile it",
    "start": "3013920",
    "end": "3020880"
  },
  {
    "text": "in a different way let's see if the compilation finished it's there",
    "start": "3020880",
    "end": "3027280"
  },
  {
    "text": "so i said this is a binary so i don't use java to start it it's target and there we have quercus",
    "start": "3027280",
    "end": "3035839"
  },
  {
    "text": "demo mariadb runner no jar yeah what is this file",
    "start": "3035839",
    "end": "3042400"
  },
  {
    "text": "it's uh an elf linux binary and if i press enter is up in",
    "start": "3042480",
    "end": "3049040"
  },
  {
    "text": "17 milliseconds that's that was including connecting to the database and creating this keymind everything right",
    "start": "3049040",
    "end": "3054960"
  },
  {
    "text": "we can check for that where is my browser again",
    "start": "3054960",
    "end": "3059839"
  },
  {
    "text": "there it is again with the four things that we we saved and you know it's a fully functional application",
    "start": "3061280",
    "end": "3066480"
  },
  {
    "text": "there is absolutely no difference because the compiler just took the same code we had and created you know it packaged it in a",
    "start": "3066480",
    "end": "3072640"
  },
  {
    "text": "different way sorry lost and that's it",
    "start": "3072640",
    "end": "3079119"
  },
  {
    "text": "thank you very much i have some resources here if you want to check it out",
    "start": "3079119",
    "end": "3087838"
  }
]