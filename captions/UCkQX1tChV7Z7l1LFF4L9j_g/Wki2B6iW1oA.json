[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "okay hello",
    "start": "359",
    "end": "2280"
  },
  {
    "text": "everyone uh let's just get started",
    "start": "2280",
    "end": "7000"
  },
  {
    "text": "here okay so my name is Marone and I",
    "start": "11280",
    "end": "14639"
  },
  {
    "text": "work for",
    "start": "14639",
    "end": "16039"
  },
  {
    "text": "reginate um and before I start",
    "start": "16039",
    "end": "20560"
  },
  {
    "text": "uh uh last August I had the opportunity",
    "start": "20560",
    "end": "23439"
  },
  {
    "text": "to meet dick wall in San Francisco at",
    "start": "23439",
    "end": "26080"
  },
  {
    "text": "Scala by De Bay and I was telling him",
    "start": "26080",
    "end": "28800"
  },
  {
    "text": "that many years ago",
    "start": "28800",
    "end": "30679"
  },
  {
    "text": "when I was learning English I downloaded",
    "start": "30679",
    "end": "33239"
  },
  {
    "text": "every single episode of the Java posy",
    "start": "33239",
    "end": "36200"
  },
  {
    "text": "and I was listening to to the Java posy",
    "start": "36200",
    "end": "38719"
  },
  {
    "text": "four or five hours a day it was a very",
    "start": "38719",
    "end": "41520"
  },
  {
    "text": "important tool for me to learn English",
    "start": "41520",
    "end": "44079"
  },
  {
    "text": "so if you have any problem understand my",
    "start": "44079",
    "end": "46120"
  },
  {
    "text": "accent blame it on dick",
    "start": "46120",
    "end": "49079"
  },
  {
    "text": "okay it's totally his",
    "start": "49079",
    "end": "52559"
  },
  {
    "text": "fault so yeah I'm going to talk about F",
    "start": "52559",
    "end": "55800"
  },
  {
    "text": "bounded polymorphis man thank for the",
    "start": "55800",
    "end": "57719"
  },
  {
    "text": "guy who didn't spoil my talk uh",
    "start": "57719",
    "end": "60199"
  },
  {
    "start": "60000",
    "end": "102000"
  },
  {
    "text": "recursive type signatures in Scala and I",
    "start": "60199",
    "end": "63440"
  },
  {
    "text": "would like to to use the opportunity to",
    "start": "63440",
    "end": "65239"
  },
  {
    "text": "thank my good friend Andrew at originate",
    "start": "65239",
    "end": "68200"
  },
  {
    "text": "who wrote most of the content that I'm",
    "start": "68200",
    "end": "71000"
  },
  {
    "text": "going to present here",
    "start": "71000",
    "end": "73520"
  },
  {
    "text": "today okay so raise your hand who has",
    "start": "73520",
    "end": "77600"
  },
  {
    "text": "ever seen a type signature like this one",
    "start": "77600",
    "end": "80520"
  },
  {
    "text": "TR to extends to you okay yeah the ones",
    "start": "80520",
    "end": "86920"
  },
  {
    "text": "who did not raise the hand you should",
    "start": "86920",
    "end": "89439"
  },
  {
    "text": "have because even Java has them so you",
    "start": "89439",
    "end": "92720"
  },
  {
    "text": "have something like enumerations in Java",
    "start": "92720",
    "end": "95159"
  },
  {
    "text": "that they are parameterized and they",
    "start": "95159",
    "end": "97520"
  },
  {
    "text": "extend the numeration on the on the same",
    "start": "97520",
    "end": "101920"
  },
  {
    "text": "parameter uh so this is called f bounded",
    "start": "101920",
    "end": "104960"
  },
  {
    "start": "102000",
    "end": "250000"
  },
  {
    "text": "polymorphism and you may also see the",
    "start": "104960",
    "end": "107640"
  },
  {
    "text": "names like self referential types",
    "start": "107640",
    "end": "110200"
  },
  {
    "text": "recursive type signatures recursively",
    "start": "110200",
    "end": "113040"
  },
  {
    "text": "bounded quen",
    "start": "113040",
    "end": "114920"
  },
  {
    "text": "ification and so I got this from the",
    "start": "114920",
    "end": "118719"
  },
  {
    "text": "Wikipedia page I not going to read that",
    "start": "118719",
    "end": "121119"
  },
  {
    "text": "the important thing here to know is that",
    "start": "121119",
    "end": "123520"
  },
  {
    "text": "it's an interaction of paramet",
    "start": "123520",
    "end": "125640"
  },
  {
    "text": "polymorphism paramet polymorphism is a",
    "start": "125640",
    "end": "127920"
  },
  {
    "text": "fancy name for generics with subtyping",
    "start": "127920",
    "end": "130800"
  },
  {
    "text": "so if you have generics in a",
    "start": "130800",
    "end": "133599"
  },
  {
    "text": "objectoriented",
    "start": "133599",
    "end": "135480"
  },
  {
    "text": "language all objectoriented language",
    "start": "135480",
    "end": "137920"
  },
  {
    "text": "have subtyping most of them have so this",
    "start": "137920",
    "end": "140800"
  },
  {
    "text": "is something that you can use with",
    "start": "140800",
    "end": "142560"
  },
  {
    "text": "objectoriented language",
    "start": "142560",
    "end": "144640"
  },
  {
    "text": "and uh generics and F bounded",
    "start": "144640",
    "end": "148400"
  },
  {
    "text": "quantification is when",
    "start": "148400",
    "end": "150480"
  },
  {
    "text": "the constraint the sub type constraint",
    "start": "150480",
    "end": "152840"
  },
  {
    "text": "itself is parameterized by one of the",
    "start": "152840",
    "end": "155480"
  },
  {
    "text": "things you know that are on the left",
    "start": "155480",
    "end": "157280"
  },
  {
    "text": "hand side but that means is if I have a",
    "start": "157280",
    "end": "159720"
  },
  {
    "text": "type a and a parameter B that b is going",
    "start": "159720",
    "end": "164680"
  },
  {
    "text": "to be a subtype of a itself okay uh what",
    "start": "164680",
    "end": "169040"
  },
  {
    "text": "Wikipedia is not going to tell you it's",
    "start": "169040",
    "end": "171760"
  },
  {
    "text": "why it's called f bounded polymorphism",
    "start": "171760",
    "end": "175519"
  },
  {
    "text": "but don't worry because I will also not",
    "start": "175519",
    "end": "178239"
  },
  {
    "text": "tell you because I",
    "start": "178239",
    "end": "181840"
  },
  {
    "text": "I I I just have no idea why they call",
    "start": "182480",
    "end": "184760"
  },
  {
    "text": "this F bounded uh polymorphism I don't",
    "start": "184760",
    "end": "187440"
  },
  {
    "text": "know it could be called e bounded G",
    "start": "187440",
    "end": "190080"
  },
  {
    "text": "bounded X bounded I have no idea if",
    "start": "190080",
    "end": "192480"
  },
  {
    "text": "anyone knows the answer please raise the",
    "start": "192480",
    "end": "195400"
  },
  {
    "text": "hand I would love to know why it's",
    "start": "195400",
    "end": "196840"
  },
  {
    "text": "called f",
    "start": "196840",
    "end": "198599"
  },
  {
    "text": "bounded okay so how I see it uh for me",
    "start": "198599",
    "end": "202080"
  },
  {
    "text": "this is a very powerful object oriented",
    "start": "202080",
    "end": "204799"
  },
  {
    "text": "technique that levers the type system so",
    "start": "204799",
    "end": "207560"
  },
  {
    "text": "we can encode constraints on generic",
    "start": "207560",
    "end": "210439"
  },
  {
    "text": "so our generics do not grow too",
    "start": "210439",
    "end": "213519"
  },
  {
    "text": "wild uh so we have some Advanced type",
    "start": "213519",
    "end": "217640"
  },
  {
    "text": "semantics that are enforced by the",
    "start": "217640",
    "end": "219200"
  },
  {
    "text": "compiler over classes and",
    "start": "219200",
    "end": "222280"
  },
  {
    "text": "traits and just enhanced type",
    "start": "222280",
    "end": "225879"
  },
  {
    "text": "safety and at the same time and this is",
    "start": "225879",
    "end": "228480"
  },
  {
    "text": "what I love the most about them is that",
    "start": "228480",
    "end": "230720"
  },
  {
    "text": "the number of unit test that you have to",
    "start": "230720",
    "end": "233120"
  },
  {
    "text": "write to test your code they can be",
    "start": "233120",
    "end": "234879"
  },
  {
    "text": "greatly reduced because there will be",
    "start": "234879",
    "end": "237120"
  },
  {
    "text": "lot of things you're not going to need",
    "start": "237120",
    "end": "238480"
  },
  {
    "text": "to test because the compiler will ensure",
    "start": "238480",
    "end": "240959"
  },
  {
    "text": "to you that they would just work and",
    "start": "240959",
    "end": "242920"
  },
  {
    "text": "your T get simpler so this is the main",
    "start": "242920",
    "end": "245439"
  },
  {
    "text": "reason my main motivation for using uh F",
    "start": "245439",
    "end": "248519"
  },
  {
    "text": "bounded",
    "start": "248519",
    "end": "249480"
  },
  {
    "text": "polymorphism okay but what the heck does",
    "start": "249480",
    "end": "251599"
  },
  {
    "start": "250000",
    "end": "310000"
  },
  {
    "text": "it do after all",
    "start": "251599",
    "end": "254360"
  },
  {
    "text": "um why can I just use tra Tu you know",
    "start": "254360",
    "end": "259280"
  },
  {
    "text": "even better just trade T and go home I'm",
    "start": "259280",
    "end": "264800"
  },
  {
    "text": "done well let's learn by example here I",
    "start": "264800",
    "end": "268720"
  },
  {
    "text": "think it be be a good",
    "start": "268720",
    "end": "270919"
  },
  {
    "text": "idea uh let's suppose that I have a",
    "start": "270919",
    "end": "273600"
  },
  {
    "text": "database and you know I have entities",
    "start": "273600",
    "end": "276479"
  },
  {
    "text": "and some crud",
    "start": "276479",
    "end": "278080"
  },
  {
    "text": "methods uh we could Define them",
    "start": "278080",
    "end": "280560"
  },
  {
    "text": "something like this so I have a class",
    "start": "280560",
    "end": "282960"
  },
  {
    "text": "apple and I have a class orange and they",
    "start": "282960",
    "end": "286199"
  },
  {
    "text": "have methods for create read update",
    "start": "286199",
    "end": "288000"
  },
  {
    "text": "delete that are take some reasonable",
    "start": "288000",
    "end": "291960"
  },
  {
    "text": "parameters and return some reasonable",
    "start": "291960",
    "end": "294560"
  },
  {
    "text": "things um do not pay too much attention",
    "start": "294560",
    "end": "297960"
  },
  {
    "text": "to the methods themselves if this where",
    "start": "297960",
    "end": "299919"
  },
  {
    "text": "where real things like read would not be",
    "start": "299919",
    "end": "302919"
  },
  {
    "text": "on the instance would be on a companion",
    "start": "302919",
    "end": "304880"
  },
  {
    "text": "object but this is not important here",
    "start": "304880",
    "end": "306919"
  },
  {
    "text": "just an",
    "start": "306919",
    "end": "308160"
  },
  {
    "text": "example",
    "start": "308160",
    "end": "310600"
  },
  {
    "start": "310000",
    "end": "377000"
  },
  {
    "text": "and the problem is that the class they",
    "start": "310600",
    "end": "313000"
  },
  {
    "text": "they look nearly identical you know they",
    "start": "313000",
    "end": "315080"
  },
  {
    "text": "have the same methods with very",
    "start": "315080",
    "end": "317440"
  },
  {
    "text": "symmetric",
    "start": "317440",
    "end": "319240"
  },
  {
    "text": "signatures and if we were to create a",
    "start": "319240",
    "end": "322759"
  },
  {
    "text": "new entity we would have to expose the",
    "start": "322759",
    "end": "325720"
  },
  {
    "text": "same methods",
    "start": "325720",
    "end": "327319"
  },
  {
    "text": "again so let's abstract all that into a",
    "start": "327319",
    "end": "330720"
  },
  {
    "text": "trade but let's start",
    "start": "330720",
    "end": "333240"
  },
  {
    "text": "simple with our little friend trade",
    "start": "333240",
    "end": "337319"
  },
  {
    "text": "T okay so I have a trait",
    "start": "337319",
    "end": "340440"
  },
  {
    "text": "entity uh and then I have create that",
    "start": "340440",
    "end": "343280"
  },
  {
    "text": "returns an entity read which may or may",
    "start": "343280",
    "end": "345720"
  },
  {
    "text": "not return an entity and so on and so",
    "start": "345720",
    "end": "348199"
  },
  {
    "text": "forth and then I have a class apple and",
    "start": "348199",
    "end": "350360"
  },
  {
    "text": "a class orange and they both sent entity",
    "start": "350360",
    "end": "353639"
  },
  {
    "text": "uh there's nothing",
    "start": "353639",
    "end": "356240"
  },
  {
    "text": "really uh great about this code uh I'm",
    "start": "356240",
    "end": "360000"
  },
  {
    "text": "not worry about the methods here you",
    "start": "360000",
    "end": "361560"
  },
  {
    "text": "know just going to Define empty trades",
    "start": "361560",
    "end": "364080"
  },
  {
    "text": "because what I want to show you is if",
    "start": "364080",
    "end": "366560"
  },
  {
    "text": "they type check I I'm really not worried",
    "start": "366560",
    "end": "368560"
  },
  {
    "text": "about the methods for now I don't expect",
    "start": "368560",
    "end": "371319"
  },
  {
    "text": "to surprise anyone with that piece of",
    "start": "371319",
    "end": "373759"
  },
  {
    "text": "code over there",
    "start": "373759",
    "end": "377360"
  },
  {
    "text": "okay well this",
    "start": "377360",
    "end": "380960"
  },
  {
    "text": "sucks uh the method signatures that we",
    "start": "381240",
    "end": "384199"
  },
  {
    "text": "have on trade T they do not express what",
    "start": "384199",
    "end": "387680"
  },
  {
    "text": "we want",
    "start": "387680",
    "end": "389720"
  },
  {
    "text": "okay I cannot ensure for instance that",
    "start": "389720",
    "end": "392319"
  },
  {
    "text": "if I call update on an Apple I'm going",
    "start": "392319",
    "end": "395479"
  },
  {
    "text": "to get apple back there's no guarantee",
    "start": "395479",
    "end": "398639"
  },
  {
    "text": "in the type system for",
    "start": "398639",
    "end": "400919"
  },
  {
    "text": "that and it is I can return any entity I",
    "start": "400919",
    "end": "405240"
  },
  {
    "text": "want when I call apple.",
    "start": "405240",
    "end": "408520"
  },
  {
    "text": "update so let's try",
    "start": "408520",
    "end": "411039"
  },
  {
    "text": "again and now we're going to add a type",
    "start": "411039",
    "end": "414639"
  },
  {
    "text": "parameter okay trade to you whoa getting",
    "start": "414639",
    "end": "418680"
  },
  {
    "text": "there",
    "start": "418680",
    "end": "421520"
  },
  {
    "text": "uh so I have again a trade entity e and",
    "start": "422319",
    "end": "426199"
  },
  {
    "text": "now I have a apple extends entity apple",
    "start": "426199",
    "end": "429360"
  },
  {
    "text": "and orange extends entity orange so",
    "start": "429360",
    "end": "432360"
  },
  {
    "text": "let's run this code",
    "start": "432360",
    "end": "434960"
  },
  {
    "text": "here um and again I really do not expect",
    "start": "434960",
    "end": "438879"
  },
  {
    "text": "anyone to be",
    "start": "438879",
    "end": "441400"
  },
  {
    "text": "surprised it's better than what we had",
    "start": "441840",
    "end": "444639"
  },
  {
    "start": "442000",
    "end": "490000"
  },
  {
    "text": "before but it's still not",
    "start": "444639",
    "end": "448160"
  },
  {
    "text": "good and the types do not yet Express",
    "start": "448160",
    "end": "451479"
  },
  {
    "text": "exactly what we",
    "start": "451479",
    "end": "453639"
  },
  {
    "text": "want do you see the",
    "start": "453639",
    "end": "457280"
  },
  {
    "text": "problem well",
    "start": "457280",
    "end": "460039"
  },
  {
    "text": "no uh the problem is that entity can be",
    "start": "460039",
    "end": "463080"
  },
  {
    "text": "extended in unintended",
    "start": "463080",
    "end": "465479"
  },
  {
    "text": "ways okay there is nothing forbiding me",
    "start": "465479",
    "end": "468120"
  },
  {
    "text": "of having class orange extends entity",
    "start": "468120",
    "end": "470440"
  },
  {
    "text": "Flying",
    "start": "470440",
    "end": "471479"
  },
  {
    "text": "Saucer um and just to show to you I have",
    "start": "471479",
    "end": "475360"
  },
  {
    "text": "a class Flying",
    "start": "475360",
    "end": "477720"
  },
  {
    "text": "Saucer yeah it's dur",
    "start": "477720",
    "end": "481440"
  },
  {
    "text": "and",
    "start": "481960",
    "end": "484039"
  },
  {
    "text": "um now orange extends flying sourcer",
    "start": "484039",
    "end": "487080"
  },
  {
    "text": "doesn't make any",
    "start": "487080",
    "end": "489879"
  },
  {
    "start": "490000",
    "end": "567000"
  },
  {
    "text": "sense so how the problem now is that",
    "start": "490280",
    "end": "493639"
  },
  {
    "text": "entity does not restrict the type of E I",
    "start": "493639",
    "end": "496800"
  },
  {
    "text": "can have any",
    "start": "496800",
    "end": "499240"
  },
  {
    "text": "e and anything could be used there's no",
    "start": "499240",
    "end": "502720"
  },
  {
    "text": "compiler errors you know I just compiled",
    "start": "502720",
    "end": "505080"
  },
  {
    "text": "the code and you saw the output the",
    "start": "505080",
    "end": "506560"
  },
  {
    "text": "compiler was very happy this is no",
    "start": "506560",
    "end": "511440"
  },
  {
    "text": "by the way I speak Portuguese not",
    "start": "512080",
    "end": "514380"
  },
  {
    "text": "[Laughter]",
    "start": "514380",
    "end": "516279"
  },
  {
    "text": "Spanish uh you know we want a big fat",
    "start": "516279",
    "end": "519518"
  },
  {
    "text": "compil error if we try something other",
    "start": "519519",
    "end": "521839"
  },
  {
    "text": "than orange extends entity",
    "start": "521839",
    "end": "525160"
  },
  {
    "text": "orange uh so how to ensure that e match",
    "start": "525160",
    "end": "528440"
  },
  {
    "text": "its",
    "start": "528440",
    "end": "530200"
  },
  {
    "text": "class type bounts of course of course",
    "start": "530200",
    "end": "532880"
  },
  {
    "text": "who how could I forget uh and finally we",
    "start": "532880",
    "end": "536800"
  },
  {
    "text": "arrive at trade T extends t",
    "start": "536800",
    "end": "540120"
  },
  {
    "text": "youu which is the whole point of this",
    "start": "540120",
    "end": "542440"
  },
  {
    "text": "talk so let's try again be careful now",
    "start": "542440",
    "end": "546360"
  },
  {
    "text": "who whoa whoa whoa",
    "start": "546360",
    "end": "548120"
  },
  {
    "text": "sorry uh so I have a trade uh entity e",
    "start": "548120",
    "end": "552279"
  },
  {
    "text": "extends entity e and everything else",
    "start": "552279",
    "end": "555440"
  },
  {
    "text": "usual let's see how this guy works it",
    "start": "555440",
    "end": "559000"
  },
  {
    "text": "works compiles nothing nothing",
    "start": "559000",
    "end": "563800"
  },
  {
    "text": "wrong okay it's better",
    "start": "566120",
    "end": "569959"
  },
  {
    "start": "567000",
    "end": "586000"
  },
  {
    "text": "uh we have constraint that e has to be a",
    "start": "569959",
    "end": "572519"
  },
  {
    "text": "sub type of",
    "start": "572519",
    "end": "574839"
  },
  {
    "text": "entity uh no more orange extending",
    "start": "574839",
    "end": "577560"
  },
  {
    "text": "flying sauce and I can show you that if",
    "start": "577560",
    "end": "579959"
  },
  {
    "text": "I try to extend flying sauce I finally",
    "start": "579959",
    "end": "582720"
  },
  {
    "text": "get a type error",
    "start": "582720",
    "end": "586240"
  },
  {
    "start": "586000",
    "end": "616000"
  },
  {
    "text": "here uh but there's still one last",
    "start": "586399",
    "end": "588959"
  },
  {
    "text": "problem there's always",
    "start": "588959",
    "end": "592560"
  },
  {
    "text": "problems oh thank you sir can you guess",
    "start": "592560",
    "end": "595079"
  },
  {
    "text": "what it is and our good friend there",
    "start": "595079",
    "end": "597360"
  },
  {
    "text": "just gave us the answer I may have have",
    "start": "597360",
    "end": "599519"
  },
  {
    "text": "a class Apple that extends apple and",
    "start": "599519",
    "end": "602040"
  },
  {
    "text": "orange can extend Apple so just to show",
    "start": "602040",
    "end": "605000"
  },
  {
    "text": "you that the compiler will happily",
    "start": "605000",
    "end": "607160"
  },
  {
    "text": "accept it I just did it I created a",
    "start": "607160",
    "end": "610480"
  },
  {
    "text": "class orange extending Apple okay thank",
    "start": "610480",
    "end": "614240"
  },
  {
    "text": "you",
    "start": "614240",
    "end": "615640"
  },
  {
    "text": "sir uh so it's not Ure that e mats its",
    "start": "615640",
    "end": "620360"
  },
  {
    "start": "616000",
    "end": "662000"
  },
  {
    "text": "own type e can be any entity",
    "start": "620360",
    "end": "625200"
  },
  {
    "text": "okay and the trait is still open for",
    "start": "625800",
    "end": "628399"
  },
  {
    "text": "abuse",
    "start": "628399",
    "end": "631079"
  },
  {
    "text": "we are getting there getting",
    "start": "631079",
    "end": "634639"
  },
  {
    "text": "there okay we need a way to ensure that",
    "start": "635200",
    "end": "637880"
  },
  {
    "text": "orange extends entity orange and nothing",
    "start": "637880",
    "end": "642200"
  },
  {
    "text": "else self types of course self types oh",
    "start": "642200",
    "end": "647000"
  },
  {
    "text": "come on come on who could not think",
    "start": "647000",
    "end": "648959"
  },
  {
    "text": "about it so this is what we need okay we",
    "start": "648959",
    "end": "651959"
  },
  {
    "text": "we need a trait entity e extends entity",
    "start": "651959",
    "end": "654720"
  },
  {
    "text": "e with the self Type",
    "start": "654720",
    "end": "656920"
  },
  {
    "text": "e huh",
    "start": "656920",
    "end": "660920"
  },
  {
    "text": "um okay so the self Type e ensures that",
    "start": "661800",
    "end": "665360"
  },
  {
    "start": "662000",
    "end": "699000"
  },
  {
    "text": "end class that extends entity is of type",
    "start": "665360",
    "end": "668720"
  },
  {
    "text": "a uh I believe I should show you here",
    "start": "668720",
    "end": "673200"
  },
  {
    "text": "okay um so I have my class here as I",
    "start": "673200",
    "end": "677200"
  },
  {
    "text": "said and I have apple extend Apple just",
    "start": "677200",
    "end": "679279"
  },
  {
    "text": "as I wanted it",
    "start": "679279",
    "end": "681680"
  },
  {
    "text": "works but now if I try something like",
    "start": "681680",
    "end": "684959"
  },
  {
    "text": "class orange extends entity Apple what",
    "start": "684959",
    "end": "688079"
  },
  {
    "text": "I'm going to get let's go back here so",
    "start": "688079",
    "end": "691200"
  },
  {
    "text": "this is my little guy and I get a",
    "start": "691200",
    "end": "693160"
  },
  {
    "text": "compiler error finally I cannot have an",
    "start": "693160",
    "end": "695760"
  },
  {
    "text": "orange that extends an entity",
    "start": "695760",
    "end": "699160"
  },
  {
    "text": "Apple okay so we can rest confident that",
    "start": "699160",
    "end": "702279"
  },
  {
    "text": "our definition of entity ensures that n",
    "start": "702279",
    "end": "704600"
  },
  {
    "text": "subtype of entity e is in fact an e so",
    "start": "704600",
    "end": "709240"
  },
  {
    "text": "if you have a code base you do not need",
    "start": "709240",
    "end": "711120"
  },
  {
    "text": "to write unit test for every single",
    "start": "711120",
    "end": "713279"
  },
  {
    "text": "entity in your code base to make sure",
    "start": "713279",
    "end": "714920"
  },
  {
    "text": "that create is going to return the same",
    "start": "714920",
    "end": "718160"
  },
  {
    "text": "kind of entity that update is going to",
    "start": "718160",
    "end": "720360"
  },
  {
    "text": "work you cre Define those methods in a",
    "start": "720360",
    "end": "722800"
  },
  {
    "text": "trait and just by the type signature of",
    "start": "722800",
    "end": "725639"
  },
  {
    "text": "the trait the compiler will ensure that",
    "start": "725639",
    "end": "727680"
  },
  {
    "text": "everything is fits right in",
    "start": "727680",
    "end": "730720"
  },
  {
    "text": "place okay so we have the semantic as we",
    "start": "730720",
    "end": "734720"
  },
  {
    "text": "desire and the compiler will reject",
    "start": "734720",
    "end": "737480"
  },
  {
    "text": "invalid",
    "start": "737480",
    "end": "738920"
  },
  {
    "text": "code okay and that was it for me uh",
    "start": "738920",
    "end": "743399"
  },
  {
    "start": "740000",
    "end": "766000"
  },
  {
    "text": "here's some reference uh I'm there's",
    "start": "743399",
    "end": "746399"
  },
  {
    "text": "this GitHub I'm going to put this",
    "start": "746399",
    "end": "747800"
  },
  {
    "text": "presentation there it's not there yet",
    "start": "747800",
    "end": "750519"
  },
  {
    "text": "because usually I make some Chang even",
    "start": "750519",
    "end": "752519"
  },
  {
    "text": "to the last minute uh all the content is",
    "start": "752519",
    "end": "755760"
  },
  {
    "text": "posted as a blog post in blog. originate",
    "start": "755760",
    "end": "758800"
  },
  {
    "text": "decom you can go there and you can read",
    "start": "758800",
    "end": "761360"
  },
  {
    "text": "the article it's a lot better than what",
    "start": "761360",
    "end": "763199"
  },
  {
    "text": "I could do here okay thank you all very",
    "start": "763199",
    "end": "766959"
  },
  {
    "start": "766000",
    "end": "909000"
  },
  {
    "text": "much and do you have questions all the",
    "start": "766959",
    "end": "769120"
  },
  {
    "text": "then how did I do it everything the",
    "start": "769120",
    "end": "770960"
  },
  {
    "text": "[Laughter]",
    "start": "770960",
    "end": "773360"
  },
  {
    "text": "raffle",
    "start": "773360",
    "end": "775320"
  },
  {
    "text": "you uh okay that's a good question so",
    "start": "775320",
    "end": "778720"
  },
  {
    "text": "let me",
    "start": "778720",
    "end": "780279"
  },
  {
    "text": "recover the slide here no I don't have a",
    "start": "780279",
    "end": "785320"
  },
  {
    "text": "slide well okay",
    "start": "786399",
    "end": "790079"
  },
  {
    "text": "so has yet yeah so I I would say that",
    "start": "794240",
    "end": "799800"
  },
  {
    "text": "the self type annotation would forbid",
    "start": "799800",
    "end": "802120"
  },
  {
    "text": "that I would have to test I really not",
    "start": "802120",
    "end": "804519"
  },
  {
    "text": "not sure but it's a good question I'll",
    "start": "804519",
    "end": "807199"
  },
  {
    "text": "test it uh",
    "start": "807199",
    "end": "810240"
  },
  {
    "text": "if you just had a t put a plus minus in",
    "start": "810240",
    "end": "812920"
  },
  {
    "text": "front of it oh that that's variance I",
    "start": "812920",
    "end": "816160"
  },
  {
    "text": "don't think right seems like this is the",
    "start": "816160",
    "end": "818079"
  },
  {
    "text": "next level down you're trying to put",
    "start": "818079",
    "end": "819720"
  },
  {
    "text": "bounds on not t but the thing inside T",
    "start": "819720",
    "end": "824800"
  },
  {
    "text": "yeah",
    "start": "824800",
    "end": "827000"
  },
  {
    "text": "syta yeah it's a little ugly but it does",
    "start": "827000",
    "end": "829720"
  },
  {
    "text": "work and after you learn it it make",
    "start": "829720",
    "end": "833320"
  },
  {
    "text": "sense",
    "start": "833320",
    "end": "836320"
  },
  {
    "text": "is the way it",
    "start": "839519",
    "end": "842240"
  },
  {
    "text": "is yeah um I first saw this kind of",
    "start": "845079",
    "end": "848920"
  },
  {
    "text": "syntax on Java 5 for the enumeration and",
    "start": "848920",
    "end": "852279"
  },
  {
    "text": "if you have that you know that Java book",
    "start": "852279",
    "end": "855519"
  },
  {
    "text": "The Java programming language they're",
    "start": "855519",
    "end": "856959"
  },
  {
    "text": "going to say something like the type",
    "start": "856959",
    "end": "859079"
  },
  {
    "text": "theorist tell us that this is the type",
    "start": "859079",
    "end": "861079"
  },
  {
    "text": "it should be I think this is you know in",
    "start": "861079",
    "end": "864360"
  },
  {
    "text": "the book this is the explanation they",
    "start": "864360",
    "end": "866199"
  },
  {
    "text": "give and I said okay awesome uh oh I",
    "start": "866199",
    "end": "869279"
  },
  {
    "text": "have 35 seconds 30 seconds",
    "start": "869279",
    "end": "873639"
  },
  {
    "text": "yes uh it will be online on my GitHub uh",
    "start": "874839",
    "end": "878320"
  },
  {
    "text": "it's it's just a little trick here uh",
    "start": "878320",
    "end": "882800"
  },
  {
    "text": "something to fill the screen on the rle",
    "start": "882800",
    "end": "884880"
  },
  {
    "text": "yeah you just",
    "start": "884880",
    "end": "886399"
  },
  {
    "text": "press n and p to to go back and forth",
    "start": "886399",
    "end": "890000"
  },
  {
    "text": "between the slides",
    "start": "890000",
    "end": "891920"
  },
  {
    "text": "yeah I'm abusing the the",
    "start": "891920",
    "end": "894759"
  },
  {
    "text": "rapper okay guys thank you so much",
    "start": "894759",
    "end": "900160"
  }
]