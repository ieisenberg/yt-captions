[
  {
    "text": "foreign",
    "start": "960",
    "end": "3960"
  },
  {
    "text": "welcome everyone to the session Paulie framework web applications with Java EE",
    "start": "8519",
    "end": "16219"
  },
  {
    "text": "so we're going to talk today about developing web applications that are implemented with more than one web",
    "start": "17520",
    "end": "23580"
  },
  {
    "text": "framework while working under the constraint that we don't want our users to be aware of",
    "start": "23580",
    "end": "29220"
  },
  {
    "text": "this we want to preserve a consistent user experience in terms of look and fear look and feel and behavior of the",
    "start": "29220",
    "end": "35280"
  },
  {
    "text": "application so I'm Brian letham I'm a senior",
    "start": "35280",
    "end": "40860"
  },
  {
    "text": "software engineer at Red Hat I'm the rich faces Project Lead and today's topic actually comes out of",
    "start": "40860",
    "end": "49260"
  },
  {
    "text": "out of some work we've done for bridge faces five where we've come up with a new component architecture for",
    "start": "49260",
    "end": "56460"
  },
  {
    "text": "delivering JSF components using these Standalone JavaScript widgets and then",
    "start": "56460",
    "end": "63120"
  },
  {
    "text": "enabling our users to take those widgets and use them in other web applications so I put together a proof of concept of",
    "start": "63120",
    "end": "69780"
  },
  {
    "text": "that idea of building an application with multiple Frameworks using these these widgets and uh",
    "start": "69780",
    "end": "77700"
  },
  {
    "text": "that led to this presentation so a little bit of a motivation for the",
    "start": "77700",
    "end": "83460"
  },
  {
    "text": "problem why would we want to mix web Frameworks well maybe we have a legacy application",
    "start": "83460",
    "end": "90420"
  },
  {
    "text": "and we want to take advantage of some of these new things we've learned about this week at Jax",
    "start": "90420",
    "end": "96299"
  },
  {
    "text": "we want to use these new JavaScript Frameworks for developing web applications",
    "start": "96299",
    "end": "102060"
  },
  {
    "text": "for instance or maybe we just had an acquisition we bought another company we've got two disparate teams with two",
    "start": "102060",
    "end": "108960"
  },
  {
    "text": "sus skill sets we want to be able to marry them together and build an application",
    "start": "108960",
    "end": "114420"
  },
  {
    "text": "or maybe it's just that we want to use the best tool for the job every framework has its Niche has its thing",
    "start": "114420",
    "end": "119880"
  },
  {
    "text": "that it's good at and we want to be able to to patch these together and build a cohesive application",
    "start": "119880",
    "end": "126659"
  },
  {
    "text": "so in short we just want to use the shiny new technology",
    "start": "126659",
    "end": "131780"
  },
  {
    "text": "so to further motivate this we're going to jump straight into the demo we'll go through and we'll see what the proof of",
    "start": "132120",
    "end": "139200"
  },
  {
    "text": "concept of all this looks like and then we'll go into the details of how this was done",
    "start": "139200",
    "end": "144920"
  },
  {
    "text": "foreign so this is a demo a web app running up",
    "start": "145379",
    "end": "151560"
  },
  {
    "text": "on openshift it's uh the same page implemented in three different web Frameworks using JSF",
    "start": "151560",
    "end": "158640"
  },
  {
    "text": "with Rich faces another page using gwit with awry a JBoss project that extends",
    "start": "158640",
    "end": "164940"
  },
  {
    "text": "gwit and then a plain HTML5 page using a",
    "start": "164940",
    "end": "170340"
  },
  {
    "text": "JavaScript and then Arrow gear to speak to the rest will back end so we look at the",
    "start": "170340",
    "end": "176700"
  },
  {
    "text": "JSF page first it's pretty simple page",
    "start": "176700",
    "end": "183560"
  },
  {
    "text": "styled with bootstrap we see here this pick list component where we can select",
    "start": "183560",
    "end": "189060"
  },
  {
    "text": "our cities drag and drop one to the other",
    "start": "189060",
    "end": "194420"
  },
  {
    "text": "and then when we click submit we update the server on the back end and",
    "start": "194879",
    "end": "200040"
  },
  {
    "text": "now if we look at the gwit awry page",
    "start": "200040",
    "end": "204019"
  },
  {
    "text": "I'll go away we see the glitter eye page picks up",
    "start": "205080",
    "end": "210959"
  },
  {
    "text": "that server state that we submitted from JSF from the JSF page the page otherwise looks the same styled the same the",
    "start": "210959",
    "end": "219120"
  },
  {
    "text": "behavior of the widget is the same drag and drop same look and feel we don't know as we went from one page",
    "start": "219120",
    "end": "226319"
  },
  {
    "text": "to the next that we went from a JSF page to a gwit page um similarly select some more cities",
    "start": "226319",
    "end": "234060"
  },
  {
    "text": "here click submit and go to the HTML5",
    "start": "234060",
    "end": "242159"
  },
  {
    "text": "JavaScript page it's populated with the same same data same look and feel",
    "start": "242159",
    "end": "248940"
  },
  {
    "text": "the user again doesn't know that we change Frameworks it's also picked up the same values from the server side",
    "start": "248940",
    "end": "254640"
  },
  {
    "text": "from the the shared State between the web Frameworks so we can take this one step further if",
    "start": "254640",
    "end": "261180"
  },
  {
    "text": "I load up all three at once",
    "start": "261180",
    "end": "266720"
  },
  {
    "text": "if I change the value of one and I click submit",
    "start": "267120",
    "end": "273720"
  },
  {
    "text": "you'll see the value update and the other two Frameworks so this is",
    "start": "273720",
    "end": "278880"
  },
  {
    "text": "a JSF page updates the the value on the server and that change is propagated to",
    "start": "278880",
    "end": "284460"
  },
  {
    "text": "the to the gwit and the HTML5 page so you can see there's a lot of possibilities here for building an",
    "start": "284460",
    "end": "291120"
  },
  {
    "text": "application in multiple web Frameworks and giving",
    "start": "291120",
    "end": "296220"
  },
  {
    "text": "users a consistent look and feel between them yet still having shared State and responding to Shared events between the",
    "start": "296220",
    "end": "303419"
  },
  {
    "text": "different Frameworks so",
    "start": "303419",
    "end": "310919"
  },
  {
    "text": "back to the talk so in building that demo",
    "start": "310919",
    "end": "317820"
  },
  {
    "text": "there's essentially two sets of concerns that we had to solve one was on the client side",
    "start": "317820",
    "end": "323100"
  },
  {
    "text": "we wanted to provide the end user a consistent look and feel so that one page looks like the next but",
    "start": "323100",
    "end": "329039"
  },
  {
    "text": "there was the further consideration of having a consistent Behavior we wanted the JavaScript that the user interacts",
    "start": "329039",
    "end": "334380"
  },
  {
    "text": "with what actually gives the page its characteristics Its Behavior we wanted",
    "start": "334380",
    "end": "339419"
  },
  {
    "text": "that to be consistent as well then on the server side we have the constraint of having shared state",
    "start": "339419",
    "end": "345419"
  },
  {
    "text": "there's no point in having multiple web Frameworks as beaches sharing State independently and we're going to get",
    "start": "345419",
    "end": "351300"
  },
  {
    "text": "into uh to conflicts that way and then as an added benefit if we can achieve some kind of common programming",
    "start": "351300",
    "end": "357180"
  },
  {
    "text": "model between the red Frameworks that is an another added bonus",
    "start": "357180",
    "end": "363439"
  },
  {
    "text": "so let's look first at how we achieve a consistent look so to do that I used a CSS framework",
    "start": "363720",
    "end": "373280"
  },
  {
    "text": "so just about every web framework out there has some kind of theming capability that lets you theme the applications you",
    "start": "373860",
    "end": "380759"
  },
  {
    "text": "build without web framework but as you go from one web framework to another you're not going to be able to share",
    "start": "380759",
    "end": "387120"
  },
  {
    "text": "that scan or share that theme between those applications so if we fall back to using a third party CSS framework",
    "start": "387120",
    "end": "395100"
  },
  {
    "text": "that takes care of styling all your HTML elements and provides a way of extending",
    "start": "395100",
    "end": "400680"
  },
  {
    "text": "that style into your custom widgets custom components then we'll be better off right so it's reusable across",
    "start": "400680",
    "end": "406740"
  },
  {
    "text": "Frameworks there's a ton of CSS Frameworks out there before you choose one for your",
    "start": "406740",
    "end": "413340"
  },
  {
    "text": "application I recommend you check out a number of them",
    "start": "413340",
    "end": "418340"
  },
  {
    "text": "they're going to introduce different requirements into your tool chain for",
    "start": "418380",
    "end": "423419"
  },
  {
    "text": "instance bootstrap the bootstrap compiler is Javascript based so it's going to work well in",
    "start": "423419",
    "end": "428639"
  },
  {
    "text": "environments where you are using JavaScript Foundation is a great CSS framework but it uses SAS which needs",
    "start": "428639",
    "end": "436080"
  },
  {
    "text": "Ruby to compile so you don't necessarily want to introduce that if you don't have any",
    "start": "436080",
    "end": "441360"
  },
  {
    "text": "other requirements to use Ruby just different things to take into account as you look through the CSS Frameworks",
    "start": "441360",
    "end": "447060"
  },
  {
    "text": "for the purpose of this discussion we're going to pick on bootstrap I was originally put out by Twitter",
    "start": "447060",
    "end": "453780"
  },
  {
    "text": "has gotten pretty popular in the meantime they got their stats on the bottom here from GitHub 16 000 Forks 50",
    "start": "453780",
    "end": "461400"
  },
  {
    "text": "000 Stars it's a lot more popular than any project I have on GitHub",
    "start": "461400",
    "end": "467539"
  },
  {
    "text": "just about every CSS framework solves the scaffolding problem they give us a grid that we can use to lay out our",
    "start": "470639",
    "end": "477599"
  },
  {
    "text": "application we all remember from the the web 1.0 days when we use tables for layout we're",
    "start": "477599",
    "end": "484860"
  },
  {
    "text": "not supposed to do that anymore we have to use uh divs and and CSS to lay out",
    "start": "484860",
    "end": "491039"
  },
  {
    "text": "our page but we've all wrestled with that in a multi-browser environments multi versions of these browsers and",
    "start": "491039",
    "end": "498419"
  },
  {
    "text": "trying to get that to wear consistently so it's nice that the CSS Frameworks take care of that for us so the bootstrap grid breaks the page",
    "start": "498419",
    "end": "506639"
  },
  {
    "text": "into 12 columns and then you can put things in each of these 12 columns and you can span",
    "start": "506639",
    "end": "511919"
  },
  {
    "text": "multiple columns if we look at that a bit more closely",
    "start": "511919",
    "end": "519360"
  },
  {
    "text": "we take a div we assign it a row and within that row we can put more divs give them a span",
    "start": "519360",
    "end": "526380"
  },
  {
    "text": "followed by a number class span 4 span eight that tells the",
    "start": "526380",
    "end": "532800"
  },
  {
    "text": "that tells us how many columns we want to Span in the framework so up here we have some columns that span a single",
    "start": "532800",
    "end": "540060"
  },
  {
    "text": "column here we span two columns span four span nine and so on",
    "start": "540060",
    "end": "547140"
  },
  {
    "text": "you additionally have the offset class which lets you take a class or is there",
    "start": "547140",
    "end": "553680"
  },
  {
    "text": "an element and move it over a number of offset columns so this allows you to position things to find degree of detail",
    "start": "553680",
    "end": "561240"
  },
  {
    "text": "on a page additionally this grid system is fluid as you resize the browser the grid can",
    "start": "561240",
    "end": "570180"
  },
  {
    "text": "change size this it's also responsive if you look at your",
    "start": "570180",
    "end": "577560"
  },
  {
    "text": "at a grid on a mobile phone where you have an arrow screen width the grid elements",
    "start": "577560",
    "end": "583320"
  },
  {
    "text": "will align vertically",
    "start": "583320",
    "end": "586880"
  },
  {
    "text": "so you can see you can achieve the the famous two column layout if we use a",
    "start": "592740",
    "end": "599519"
  },
  {
    "text": "span 2 and a span 10 class and put our content in there it's pretty simple way",
    "start": "599519",
    "end": "604740"
  },
  {
    "text": "of achieving a layout we're always looking for",
    "start": "604740",
    "end": "608899"
  },
  {
    "text": "more there's more handles available to us for responsive layout",
    "start": "610560",
    "end": "617399"
  },
  {
    "text": "we can use the bootstrap classes that determine when we're visible on phones",
    "start": "617399",
    "end": "622920"
  },
  {
    "text": "tablets and desktops by simply dropping these CSS classes on our elements we can toggle the visibility for the different",
    "start": "622920",
    "end": "629640"
  },
  {
    "text": "types of elements all right sorry different types of devices",
    "start": "629640",
    "end": "634519"
  },
  {
    "text": "all right so this is all just CSS there's nothing invasive about this at all",
    "start": "635220",
    "end": "642320"
  },
  {
    "text": "so in addition to the scaffolding bootstrap takes care of styling the basic CSS or sorry HTML",
    "start": "644399",
    "end": "651540"
  },
  {
    "text": "elements uh your your basic heading paragraph and so",
    "start": "651540",
    "end": "658680"
  },
  {
    "text": "on elements are styled the bootstrap bootstrap will style our our code blocks",
    "start": "658680",
    "end": "665899"
  },
  {
    "text": "bootstrap Styles tables you got a nice slick looking table out of the box",
    "start": "666140",
    "end": "671459"
  },
  {
    "text": "here we get um add the table stripe class and we get some nice striping across the rows of our our table",
    "start": "671459",
    "end": "679019"
  },
  {
    "text": "and this is just CSS there's no JavaScript involved in this",
    "start": "679019",
    "end": "684120"
  },
  {
    "text": "we can add a border to our table values by adding the table bordered class",
    "start": "684120",
    "end": "689880"
  },
  {
    "text": "we can get with the table hover class we can get a highlight of the row we're working on",
    "start": "689880",
    "end": "697100"
  },
  {
    "text": "bootstrap style is all our form elements can give you rounded borders on your",
    "start": "697980",
    "end": "705240"
  },
  {
    "text": "your search components Styles buttons with colors",
    "start": "705240",
    "end": "710459"
  },
  {
    "text": "to indicate state and what's going to happen",
    "start": "710459",
    "end": "717140"
  },
  {
    "text": "and bootstrap gives us a large set of icons that we can use in our application",
    "start": "717720",
    "end": "723200"
  },
  {
    "text": "right so you see how using this stuff in a CSS framework and bringing it into our",
    "start": "724980",
    "end": "731760"
  },
  {
    "text": "web framework as we bring it into the different web Frameworks they're all going to be using the same style the",
    "start": "731760",
    "end": "736860"
  },
  {
    "text": "same approach we're going to get that same look and feel um we'll take a final look at",
    "start": "736860",
    "end": "743899"
  },
  {
    "text": "bootstrap the components that it provides so it gives us drop down elements",
    "start": "743899",
    "end": "751140"
  },
  {
    "text": "it gives us button groups where we can collect these buttons together to make it look like a single",
    "start": "751140",
    "end": "758779"
  },
  {
    "text": "multi-faceted button used quite a bit in paging across data",
    "start": "758779",
    "end": "764040"
  },
  {
    "text": "tables we see that kind of a Style we get drop down components or sorry",
    "start": "764040",
    "end": "770459"
  },
  {
    "text": "drop down buttons providing alternate actions we get",
    "start": "770459",
    "end": "776519"
  },
  {
    "text": "tabs tab components nav bars breadcrumbs",
    "start": "776519",
    "end": "784680"
  },
  {
    "text": "pagination labels and badges to give feedback to the user",
    "start": "785160",
    "end": "792620"
  },
  {
    "text": "progress bars it's all going to be there consistently styled for us to make use",
    "start": "793860",
    "end": "798959"
  },
  {
    "text": "of in addition to that",
    "start": "798959",
    "end": "804019"
  },
  {
    "text": "bootstrap is very easily customizable and extensible so it's",
    "start": "804019",
    "end": "809940"
  },
  {
    "text": "built using less which we'll get into shortly we can Define these variables that",
    "start": "809940",
    "end": "816480"
  },
  {
    "text": "bootstrap uses and we can configure these variables in fact if you go to the bootstrap website",
    "start": "816480",
    "end": "822839"
  },
  {
    "text": "you can fill in these values and download a CSS generated bundle with those values in",
    "start": "822839",
    "end": "829740"
  },
  {
    "text": "there so let's take a closer look",
    "start": "829740",
    "end": "835800"
  },
  {
    "text": "at how this works with less so less is a CSS extension that's used",
    "start": "835800",
    "end": "842940"
  },
  {
    "text": "to power bootstrap if you look at this less example here it looks a lot like CSS but there's some",
    "start": "842940",
    "end": "849540"
  },
  {
    "text": "constructs in there that we're not familiar with if we've if we're only familiar with CSS",
    "start": "849540",
    "end": "855240"
  },
  {
    "text": "so let's go through those and discover what additional power we can get when we use a CSS extension like less",
    "start": "855240",
    "end": "862560"
  },
  {
    "text": "so the first one and the one that stuck out immediately as useful for me was the definition of variables how many times in the past",
    "start": "862560",
    "end": "869760"
  },
  {
    "text": "I've been working on a CSS file and I defined a particular color somewhere and I was copying and pasting it throughout",
    "start": "869760",
    "end": "875399"
  },
  {
    "text": "the CSS file with less you can Define that variable",
    "start": "875399",
    "end": "880560"
  },
  {
    "text": "or Define a variable to hold that value and just reference that value throughout your application",
    "start": "880560",
    "end": "886019"
  },
  {
    "text": "so here we use the at sign to indicate it's a variable and we assign it a particular color value",
    "start": "886019",
    "end": "893100"
  },
  {
    "text": "we can even do math then on those color values assign it to a new value",
    "start": "893100",
    "end": "898199"
  },
  {
    "text": "and reference that color value in a CSS definition so this Less in the above box renders",
    "start": "898199",
    "end": "905339"
  },
  {
    "text": "down into the below CSS that has to render into CS CSS of course because",
    "start": "905339",
    "end": "911639"
  },
  {
    "text": "that's all that the browser understands",
    "start": "911639",
    "end": "915380"
  },
  {
    "text": "so I know in my opinion even if all less provided was variables it would be useful",
    "start": "919740",
    "end": "924779"
  },
  {
    "text": "but it of course does a lot more than that less gives us mix-ins",
    "start": "924779",
    "end": "930300"
  },
  {
    "text": "so here we Define the CSS class bordered and we can use that with less as a",
    "start": "930300",
    "end": "937440"
  },
  {
    "text": "mixing so we can Define this uh down here this for the element of ID",
    "start": "937440",
    "end": "945060"
  },
  {
    "text": "menu any anchor tag underneath it We'll Inherit this bordered class we put the dot",
    "start": "945060",
    "end": "951660"
  },
  {
    "text": "border there so it's going to pick up the Border top and Border bottom definitions of the Border class and we",
    "start": "951660",
    "end": "957060"
  },
  {
    "text": "can reuse this mix in anywhere we want uh an element of class Post Its anchor",
    "start": "957060",
    "end": "964500"
  },
  {
    "text": "element is also going to pick up this bordered class sorry this bordered mixing",
    "start": "964500",
    "end": "970019"
  },
  {
    "text": "so we've defined our border mix in centrally if we now want to",
    "start": "970019",
    "end": "975060"
  },
  {
    "text": "change the color or the thickness of that border we change it in one place and then all our CSS classes are all our",
    "start": "975060",
    "end": "982620"
  },
  {
    "text": "CSS definitions that mix that CSS class in we'll pick it up so it's",
    "start": "982620",
    "end": "988160"
  },
  {
    "text": "it's dry right we don't repeat ourselves that brings that to CSS",
    "start": "988160",
    "end": "994880"
  },
  {
    "text": "taking mixins a step further we can pass parameters to our mix-ins",
    "start": "996560",
    "end": "1002060"
  },
  {
    "text": "if you've taken advantage of the HTML I guess css3 property border radius you",
    "start": "1002060",
    "end": "1007459"
  },
  {
    "text": "know you have to define the the proprietary CSS attributes Dash Moz and",
    "start": "1007459",
    "end": "1014240"
  },
  {
    "text": "dash webkit it's a bit of a pain to repeat that everywhere so you can Define where this",
    "start": "1014240",
    "end": "1021800"
  },
  {
    "text": "this is straight from bootstrap actually this particular mixing you can Define the Border radius mix in that takes a",
    "start": "1021800",
    "end": "1027438"
  },
  {
    "text": "radius parameter and applies that to the list of",
    "start": "1027439",
    "end": "1033500"
  },
  {
    "text": "CSS attributes there so when using the mix-in we then pass a value to that",
    "start": "1033500",
    "end": "1041780"
  },
  {
    "text": "parameter so our element with ID header is going to pick up a border radius of 4",
    "start": "1041780",
    "end": "1047298"
  },
  {
    "text": "pixels anything with the class button is going to pick up a border radius of 6 pixels",
    "start": "1047299",
    "end": "1054580"
  },
  {
    "text": "another useful feature unless is the ability to Nest classes",
    "start": "1057200",
    "end": "1062240"
  },
  {
    "text": "so on the left you see a traditional CSS approach where we only want to style these elements underneath the header the",
    "start": "1062240",
    "end": "1069919"
  },
  {
    "text": "element with ID header so everything gets prepended with the pound header on the right you can see the less",
    "start": "1069919",
    "end": "1076460"
  },
  {
    "text": "equivalent where we Nest all those CSS definitions within the definition for",
    "start": "1076460",
    "end": "1081860"
  },
  {
    "text": "header so when that CSS gets evaluated the less on the right is going to evaluate to the",
    "start": "1081860",
    "end": "1087320"
  },
  {
    "text": "CSS on the left keeps things simpler more concise",
    "start": "1087320",
    "end": "1093500"
  },
  {
    "text": "more readable",
    "start": "1093500",
    "end": "1096340"
  },
  {
    "text": "less allows us to perform operations in the CSS all right we set the",
    "start": "1099140",
    "end": "1105919"
  },
  {
    "text": "CSS sorry the less variable base to five percent filler then is base multiplied by two",
    "start": "1105919",
    "end": "1114380"
  },
  {
    "text": "and other is the addition of base and filler um",
    "start": "1114380",
    "end": "1119900"
  },
  {
    "text": "you can additionally do color arithmetic we can take the base color",
    "start": "1119900",
    "end": "1124940"
  },
  {
    "text": "and add RGB values to our color",
    "start": "1124940",
    "end": "1130360"
  },
  {
    "text": "similarly less provides us functions that can operate on our CSS values right",
    "start": "1130720",
    "end": "1135980"
  },
  {
    "text": "we can take a color and we can lighten it here we see background color",
    "start": "1135980",
    "end": "1141860"
  },
  {
    "text": "is the base color lightened by 25 percent here we're changing the saturation of a",
    "start": "1141860",
    "end": "1148580"
  },
  {
    "text": "color or converting a value into a percent so the express expressivity available to",
    "start": "1148580",
    "end": "1155960"
  },
  {
    "text": "us in last allows us to be much more creative and flexible in the CSS we write and allows us to",
    "start": "1155960",
    "end": "1164179"
  },
  {
    "text": "um extend CS CSS Frameworks to into our",
    "start": "1164179",
    "end": "1169280"
  },
  {
    "text": "own application into our own widgets but of course it has to be compiled",
    "start": "1169280",
    "end": "1174980"
  },
  {
    "text": "right I mentioned that bootstrap sorry less is compiled with JavaScript so the less project provides a less.js",
    "start": "1174980",
    "end": "1182780"
  },
  {
    "text": "file that will compile your less Source into CSS so you can run that anywhere",
    "start": "1182780",
    "end": "1188059"
  },
  {
    "text": "you can run JavaScript including in the browser itself you can serve in your web",
    "start": "1188059",
    "end": "1194059"
  },
  {
    "text": "page a less resource along with the less JS file and the browser will compile it",
    "start": "1194059",
    "end": "1199640"
  },
  {
    "text": "and view that as CSS you can compile it in your desktop with with with node or any anywhere really",
    "start": "1199640",
    "end": "1208340"
  },
  {
    "text": "that you can evaluate JavaScript and the Java world there's a couple projects that wrap less.js with Rhino to let us",
    "start": "1208340",
    "end": "1217280"
  },
  {
    "text": "call up from java environments the row for J Project does this for less",
    "start": "1217280",
    "end": "1222919"
  },
  {
    "text": "as well as a number of other projects and there's a maven plugin available for Row for J so you can incorporate this",
    "start": "1222919",
    "end": "1229520"
  },
  {
    "text": "into your build so as an example of what we can do with",
    "start": "1229520",
    "end": "1237440"
  },
  {
    "text": "less and bootstrap I took this this is the rich faces for accordion component",
    "start": "1237440",
    "end": "1243860"
  },
  {
    "text": "I just pulled out the HTML and JavaScript and dropped it in this application I",
    "start": "1243860",
    "end": "1249080"
  },
  {
    "text": "think it's really cool it's a HTML application and you can put HTML JavaScript widgets in there and then you",
    "start": "1249080",
    "end": "1254660"
  },
  {
    "text": "can interact with them like I can't get over the fact that I can just click on this thing and it's not a screenshot",
    "start": "1254660",
    "end": "1261260"
  },
  {
    "text": "so on the bottom we see the same HTML and the same JavaScript but styled with",
    "start": "1261260",
    "end": "1267080"
  },
  {
    "text": "less and with bootstrap we didn't have to go in and modify the",
    "start": "1267080",
    "end": "1272780"
  },
  {
    "text": "HTML introduce any new CSS classes we were just able to override the existing",
    "start": "1272780",
    "end": "1278660"
  },
  {
    "text": "CSS classes and attributes with values inherited from bootstrap",
    "start": "1278660",
    "end": "1284059"
  },
  {
    "text": "so what is that look like",
    "start": "1284059",
    "end": "1288159"
  },
  {
    "text": "this is the less file the first thing we do is import a couple bootstrap files the variables dot less",
    "start": "1289340",
    "end": "1296360"
  },
  {
    "text": "and mixins.less these are some bootstrap values that we wanted to incorporate in",
    "start": "1296360",
    "end": "1303320"
  },
  {
    "text": "this particular skin I nested all this in a in a skin class",
    "start": "1303320",
    "end": "1309679"
  },
  {
    "text": "so only the only accordion elements that have the CSS class skin will pick this up",
    "start": "1309679",
    "end": "1316840"
  },
  {
    "text": "and then you can see here I Style",
    "start": "1317919",
    "end": "1324740"
  },
  {
    "text": "if you've used Rich faces you'll recognize the rich faces CSS classes up there",
    "start": "1324740",
    "end": "1330020"
  },
  {
    "text": "and so I overrode some particular CSS attributes using variables pulled from",
    "start": "1330020",
    "end": "1335840"
  },
  {
    "text": "the bootstrap project so I picked up the font size font family line height",
    "start": "1335840",
    "end": "1341980"
  },
  {
    "text": "navbar border and the definition of of the color white",
    "start": "1341980",
    "end": "1347659"
  },
  {
    "text": "from bootstrap so the nice thing about using this approach is I've now styled",
    "start": "1347659",
    "end": "1353299"
  },
  {
    "text": "this accordion element to look like bootstrap and if I go and customize bootstrap and drop that in my",
    "start": "1353299",
    "end": "1359480"
  },
  {
    "text": "application I'm going to be picking up those changes in this style as well right if I just done this with static",
    "start": "1359480",
    "end": "1364640"
  },
  {
    "text": "CSS values then I wouldn't be picking up those changes as I modify bootstrap",
    "start": "1364640",
    "end": "1371320"
  },
  {
    "text": "some additional changes are to apply a border radius using the Border radius",
    "start": "1372020",
    "end": "1377960"
  },
  {
    "text": "mix in setting the the link color and some other values",
    "start": "1377960",
    "end": "1384620"
  },
  {
    "text": "so let's take a look at this in action",
    "start": "1384620",
    "end": "1391700"
  },
  {
    "text": "this is a",
    "start": "1391700",
    "end": "1395200"
  },
  {
    "text": "this is the less file here",
    "start": "1398900",
    "end": "1402520"
  },
  {
    "text": "so I can go and Define say a new variable I don't like this skin I need to use my",
    "start": "1408679",
    "end": "1415520"
  },
  {
    "text": "my corporate red color which is going to be say",
    "start": "1415520",
    "end": "1423260"
  },
  {
    "text": "td1122 right and then I want my header element",
    "start": "1423260",
    "end": "1428659"
  },
  {
    "text": "to pick up that red color right so I'll say",
    "start": "1428659",
    "end": "1434440"
  },
  {
    "text": "put it at the end background",
    "start": "1436159",
    "end": "1441440"
  },
  {
    "text": "we're going to pick up that corporate red I click save and the less.js file is",
    "start": "1441440",
    "end": "1449720"
  },
  {
    "text": "looking for changes and it's not going to let me down it's going to pick it up no",
    "start": "1449720",
    "end": "1457340"
  },
  {
    "text": "what happened",
    "start": "1457340",
    "end": "1460000"
  },
  {
    "text": "hmm okay supposed to pick it up right away so that that red",
    "start": "1475159",
    "end": "1480559"
  },
  {
    "text": "it's not quite nice we want to darken it a bit so we can use the darken",
    "start": "1480559",
    "end": "1486039"
  },
  {
    "text": "mix in or sorry function we want to darken that corporate Red by say 20",
    "start": "1486200",
    "end": "1491780"
  },
  {
    "text": "percent save that there we go I picked it up that time but now we can't read the font",
    "start": "1491780",
    "end": "1498440"
  },
  {
    "text": "colors so let's uh pick up the um",
    "start": "1498440",
    "end": "1503960"
  },
  {
    "text": "definition of white from bootstrap",
    "start": "1503960",
    "end": "1509720"
  },
  {
    "text": "right so the neat thing about using white is if later we decide that white is it's too bright we want to use a gray",
    "start": "1509720",
    "end": "1515419"
  },
  {
    "text": "we'll change that in our Central variables dot last file and everywhere",
    "start": "1515419",
    "end": "1521480"
  },
  {
    "text": "we reference the the less variable white is going to pick up the adjusted White",
    "start": "1521480",
    "end": "1529360"
  },
  {
    "text": "um play with this a little bit further let's override one of the bootstrap variables that we imported",
    "start": "1529460",
    "end": "1536120"
  },
  {
    "text": "let's take the um base",
    "start": "1536120",
    "end": "1541760"
  },
  {
    "text": "border radius and let's set that to say 15 pixels",
    "start": "1541760",
    "end": "1549399"
  },
  {
    "text": "right so you can see we rounded the corners further on our little accordion element",
    "start": "1551299",
    "end": "1557140"
  },
  {
    "text": "let's take the base font size here and let's add 20 to it",
    "start": "1557299",
    "end": "1563659"
  },
  {
    "text": "right we can't read it anymore we have to adjust the line height let's also add 20 there",
    "start": "1563659",
    "end": "1570220"
  },
  {
    "text": "so you can see in working with less and able to do these operations directly",
    "start": "1571220",
    "end": "1576860"
  },
  {
    "text": "within the skin file can be quite um quite liberating as you're trying to",
    "start": "1576860",
    "end": "1583580"
  },
  {
    "text": "fiddle with development of a skin can I see a show of hands how many people have",
    "start": "1583580",
    "end": "1588620"
  },
  {
    "text": "a designer that they work with that takes care of the styling of their applications oh so you do yeah",
    "start": "1588620",
    "end": "1596179"
  },
  {
    "text": "so it doesn't necessarily apply to you quite so much but a lot of us do our own styling and it's quite nice to have a",
    "start": "1596179",
    "end": "1602120"
  },
  {
    "text": "framework like this to work in",
    "start": "1602120",
    "end": "1605380"
  },
  {
    "text": "all right moving on",
    "start": "1610940",
    "end": "1616820"
  },
  {
    "text": "so that takes care of the look right diet according example is actually",
    "start": "1616820",
    "end": "1622159"
  },
  {
    "text": "a good segue into the next piece that I want to talk about which is the behavior we are able to give that accordion",
    "start": "1622159",
    "end": "1628220"
  },
  {
    "text": "element or so the accordion widget from the ridge phases project a nice bootstrap look but it's still the",
    "start": "1628220",
    "end": "1636140"
  },
  {
    "text": "JavaScript implementation and that particular component is tied to the JSF backend so if I want to have an",
    "start": "1636140",
    "end": "1641960"
  },
  {
    "text": "accordion component in my grit page I'm not going to be able to use that same JavaScript so my widget is invariably",
    "start": "1641960",
    "end": "1647779"
  },
  {
    "text": "going to have a different Behavior so we want to be able to provide a consistent Behavior",
    "start": "1647779",
    "end": "1653120"
  },
  {
    "text": "for our widgets between our pages JSF is particularly uh",
    "start": "1653120",
    "end": "1660400"
  },
  {
    "text": "vulnerable to this there's a number of component implementations for JSF they each provide their own JavaScript",
    "start": "1660400",
    "end": "1668600"
  },
  {
    "text": "implementations that are integrated with their their own back end so there's there's no interrupt",
    "start": "1668600",
    "end": "1674059"
  },
  {
    "text": "possibilities there similarly falls into this category",
    "start": "1674059",
    "end": "1679279"
  },
  {
    "text": "there's a whole lot set of grit components that you can use a lot of them are implemented in with gwit some",
    "start": "1679279",
    "end": "1685940"
  },
  {
    "text": "of them take to take advantage of third-party libraries which is the approach that we're that I'm advocating",
    "start": "1685940",
    "end": "1691760"
  },
  {
    "text": "here today but a number of them are just using",
    "start": "1691760",
    "end": "1696860"
  },
  {
    "text": "built-in gwit um",
    "start": "1696860",
    "end": "1701960"
  },
  {
    "text": "definitions to Define the JavaScript that the user interacts with",
    "start": "1701960",
    "end": "1709940"
  },
  {
    "text": "and similarly HTML5 applications there's a whole set of widgets available there",
    "start": "1709940",
    "end": "1717679"
  },
  {
    "text": "but herein is the difference these HTML widget sets as I call them",
    "start": "1717679",
    "end": "1723980"
  },
  {
    "text": "they're just Standalone JavaScript widgets that you can use with any HTML this is our lowest common denominator",
    "start": "1723980",
    "end": "1729740"
  },
  {
    "text": "right what is a quit application or a rich spaces JSF application delivering to anyone other than HTML and JavaScript",
    "start": "1729740",
    "end": "1738080"
  },
  {
    "text": "so if we can integrate these Standalone JavaScript widgets and with our other web Frameworks and we can use them in",
    "start": "1738080",
    "end": "1745340"
  },
  {
    "text": "our HTML5 JavaScript applications then we're going to be able to achieve a",
    "start": "1745340",
    "end": "1750740"
  },
  {
    "text": "consistent Behavior",
    "start": "1750740",
    "end": "1753520"
  },
  {
    "text": "there we go so the one I'm gonna just hope you picked on bootstrap I'm going to pick on jQuery UI today",
    "start": "1756500",
    "end": "1764539"
  },
  {
    "text": "so jQuery UI gives us a lot of widgets all right jQuery UI gives us an",
    "start": "1764539",
    "end": "1770960"
  },
  {
    "text": "accordion widget we can see already just clicking around with this it behaves quite a bit differently than the rich",
    "start": "1770960",
    "end": "1776720"
  },
  {
    "text": "faces Aquarium you can see there's a transition as it changes there's a gap between the accordion",
    "start": "1776720",
    "end": "1783140"
  },
  {
    "text": "elements that you don't see in the rich faces accordion so there's there's a different behavior in the widget just",
    "start": "1783140",
    "end": "1788840"
  },
  {
    "text": "from the different implementation jQuery UI gives us tab components gives us pop-ups gives us dialogues",
    "start": "1788840",
    "end": "1797480"
  },
  {
    "text": "lots of great stuff comes from jQuery UI date picker progress bar",
    "start": "1797480",
    "end": "1804140"
  },
  {
    "text": "but it doesn't give us a lot there's actually a limited set of widgets available in jQuery UI",
    "start": "1804140",
    "end": "1809779"
  },
  {
    "text": "so to address that in the rich bases project we've started the rich bases",
    "start": "1809779",
    "end": "1815299"
  },
  {
    "text": "widgets project so this is uh something we're developing alongside our",
    "start": "1815299",
    "end": "1820820"
  },
  {
    "text": "Rich bases five um",
    "start": "1820820",
    "end": "1825159"
  },
  {
    "text": "effort for lack of a better word it's the set of Standalone JavaScript widgets",
    "start": "1826640",
    "end": "1831679"
  },
  {
    "text": "that are rich faces five JSF components we'll use so these are going to be using jQuery UI",
    "start": "1831679",
    "end": "1837080"
  },
  {
    "text": "where available and then we'll be composing new",
    "start": "1837080",
    "end": "1842179"
  },
  {
    "text": "uh widgets where we have requirements to fill we want to be able to provide an",
    "start": "1842179",
    "end": "1847520"
  },
  {
    "text": "Enterprise set of widgets for developing Rich enterprise-like applications",
    "start": "1847520",
    "end": "1853940"
  },
  {
    "text": "so it's part of the rich races project but it's framework independent these are Standalone JavaScript widgets they're",
    "start": "1853940",
    "end": "1859880"
  },
  {
    "text": "going to be using the jQuery UI widget Factory and styled with bootstrap",
    "start": "1859880",
    "end": "1866919"
  },
  {
    "text": "um the neat thing about this Standalone JavaScript widget approach is how we can",
    "start": "1867440",
    "end": "1876020"
  },
  {
    "text": "couple them into the web framework right so if we take a widget and we enrich it with a lot of events so every time the",
    "start": "1876020",
    "end": "1883760"
  },
  {
    "text": "state of the widget changes or the user interacts with the widget an event is fired then we can easily bridge that",
    "start": "1883760",
    "end": "1890659"
  },
  {
    "text": "widget into any back-end framework by listening to those events in fact this has great ramifications on the",
    "start": "1890659",
    "end": "1897140"
  },
  {
    "text": "testability of the component that you build for the framework because you can test the widget in isolation in any",
    "start": "1897140",
    "end": "1902240"
  },
  {
    "text": "browser any version of a browser and and make sure the widget Works without any",
    "start": "1902240",
    "end": "1907700"
  },
  {
    "text": "requirement of having a back-end present and then when you put it in a back end all you have to verify is that you you",
    "start": "1907700",
    "end": "1915080"
  },
  {
    "text": "respond to the events properly so this decoupling of the client-side",
    "start": "1915080",
    "end": "1920360"
  },
  {
    "text": "behavior from the web framework is going to give us a much more easily testable",
    "start": "1920360",
    "end": "1926480"
  },
  {
    "text": "and extensible component set so here's an example it's the pick list",
    "start": "1926480",
    "end": "1933320"
  },
  {
    "text": "component we saw from the demo at the beginning um",
    "start": "1933320",
    "end": "1939158"
  },
  {
    "text": "I wired in a listener to this pic to the picklist widget you can see every time",
    "start": "1940220",
    "end": "1945940"
  },
  {
    "text": "the value on the right changes I've got this little listener that just",
    "start": "1945940",
    "end": "1951140"
  },
  {
    "text": "depends a list element at the bottom and says hey the value of the picklist widget has changed right so I take",
    "start": "1951140",
    "end": "1958279"
  },
  {
    "text": "London from the left drag it to the right and we see that the selected elements have changed we",
    "start": "1958279",
    "end": "1963980"
  },
  {
    "text": "respond to that event I can take one element and reorder it and we respond to that",
    "start": "1963980",
    "end": "1969860"
  },
  {
    "text": "event so you can imagine in the bridge code where we integrate this with a framework all we have to do is listen for that",
    "start": "1969860",
    "end": "1976220"
  },
  {
    "text": "event and then we can trigger whatever Ajax call we need to to",
    "start": "1976220",
    "end": "1981559"
  },
  {
    "text": "initiate into our framework back end to make that work as if it was a native component",
    "start": "1981559",
    "end": "1988960"
  },
  {
    "text": "so let's move now to server side concerns we talked a lot about having a",
    "start": "1993919",
    "end": "2001059"
  },
  {
    "text": "consistent look and feel and behavior for the user on the client side and on",
    "start": "2001059",
    "end": "2007240"
  },
  {
    "text": "the server side we want to talk about having shared State between the web Frameworks and then we're going to talk",
    "start": "2007240",
    "end": "2012460"
  },
  {
    "text": "about a bonus that we get with CDI we get a and getting a consistent programming model",
    "start": "2012460",
    "end": "2019139"
  },
  {
    "text": "yes CDI is the solution so CDI stands for context and dependency",
    "start": "2020620",
    "end": "2027399"
  },
  {
    "text": "injection is everyone familiar with CDI because you show hands who's aware of",
    "start": "2027399",
    "end": "2032500"
  },
  {
    "text": "CDI so CDI is part of the Java ee standard",
    "start": "2032500",
    "end": "2038500"
  },
  {
    "text": "um it gives us dependency ejection and the Java EE",
    "start": "2038500",
    "end": "2044440"
  },
  {
    "text": "framework so what is dependency injection is we want to retrieve a contextual instance",
    "start": "2044440",
    "end": "2051638"
  },
  {
    "text": "of a beam so here we have this class called capitals Observer and we want to",
    "start": "2051639",
    "end": "2057820"
  },
  {
    "text": "inject capitals Bean so we use the at inject annotation and then all we have to do is",
    "start": "2057820",
    "end": "2065320"
  },
  {
    "text": "put that at inject annotation there and the container will be responsible for",
    "start": "2065320",
    "end": "2070358"
  },
  {
    "text": "providing us the correct instance of that capital's beam it'll achieve it from the right scope associated with the",
    "start": "2070359",
    "end": "2076780"
  },
  {
    "text": "right user um it'll take care of that magic for us",
    "start": "2076780",
    "end": "2081878"
  },
  {
    "text": "so the C and CDI stands for context contexts are related to scopes",
    "start": "2081879",
    "end": "2090040"
  },
  {
    "text": "so the scope of a bean is is pretty intuitive it's it's the life cycle of a",
    "start": "2090040",
    "end": "2095440"
  },
  {
    "text": "bean right so it determines when a a bean is instantiated and when it's terminated and then the scope Maps",
    "start": "2095440",
    "end": "2104740"
  },
  {
    "text": "an instance of a being to a particular client to a particular user so the context then is just the",
    "start": "2104740",
    "end": "2110920"
  },
  {
    "text": "implementation of the scope so this is CDI it's the context and dependency injection",
    "start": "2110920",
    "end": "2117220"
  },
  {
    "text": "a lot of Scopes that we see that we're familiar with are session scoped request scope dependent scope",
    "start": "2117220",
    "end": "2123280"
  },
  {
    "text": "application Scopes another useful one conversation scope these are available with CDI out of the box",
    "start": "2123280",
    "end": "2129780"
  },
  {
    "text": "and then CDI can integrate through CDI extensions with any web framework and",
    "start": "2129780",
    "end": "2135160"
  },
  {
    "text": "it's a number of web Frameworks provide their own Scopes so in JSF 2.2 we have the flow scope and the view scope for",
    "start": "2135160",
    "end": "2142240"
  },
  {
    "text": "instance another",
    "start": "2142240",
    "end": "2147760"
  },
  {
    "text": "yes so yes an example what did I not have an example here yes okay so an example of a",
    "start": "2147760",
    "end": "2156280"
  },
  {
    "text": "a bean that's been annotated with the session scope you can see that we have then access to the life cycle of The",
    "start": "2156280",
    "end": "2163359"
  },
  {
    "text": "Bean using additional annotations so here with the at post-construct annotation that allows us to call some",
    "start": "2163359",
    "end": "2170380"
  },
  {
    "text": "code after the container has initialized our bean and resolved all dependency injection in the beam",
    "start": "2170380",
    "end": "2176800"
  },
  {
    "text": "so we can initialize the state of our beam",
    "start": "2176800",
    "end": "2183780"
  },
  {
    "text": "another piece of CDI that I find is really useful and is often overlooked is",
    "start": "2184079",
    "end": "2189220"
  },
  {
    "text": "the event mechanism it should be called CDI e we need an e",
    "start": "2189220",
    "end": "2194920"
  },
  {
    "text": "in there for events it's a really powerful Eventing mechanism",
    "start": "2194920",
    "end": "2200500"
  },
  {
    "text": "that um is going to allow us to integrate the",
    "start": "2200500",
    "end": "2206740"
  },
  {
    "text": "back end on the back end our different web Frameworks the different beans and classes of our web Frameworks with a",
    "start": "2206740",
    "end": "2212079"
  },
  {
    "text": "common Eventing mechanism so here I take my my capitals bean and I",
    "start": "2212079",
    "end": "2217599"
  },
  {
    "text": "inject This Server event um object it's an event object it can be",
    "start": "2217599",
    "end": "2225339"
  },
  {
    "text": "any pojo it doesn't have to be of type event",
    "start": "2225339",
    "end": "2231640"
  },
  {
    "text": "oh wait I got that backwards",
    "start": "2231640",
    "end": "2235319"
  },
  {
    "text": "yes thank you CDI expert in the back row",
    "start": "2238859",
    "end": "2244420"
  },
  {
    "text": "so we inject this uh this event class and we use this to fire events so here on this bottom line here we see Server",
    "start": "2244420",
    "end": "2251619"
  },
  {
    "text": "event we're going to fire a new event the event that we fire can just be a pojo there's no requirements on what",
    "start": "2251619",
    "end": "2258099"
  },
  {
    "text": "that class is so here we're firing a capital selected event and then",
    "start": "2258099",
    "end": "2263500"
  },
  {
    "text": "so you can see firing an event is as simple as injecting the object that fires the event and similarly observing",
    "start": "2263500",
    "end": "2271300"
  },
  {
    "text": "the event is as simple as using the at observes annotation so here we have two methods where the parameters of the",
    "start": "2271300",
    "end": "2277900"
  },
  {
    "text": "method are annotated with at observes and we're observing the capitals selected event",
    "start": "2277900",
    "end": "2284980"
  },
  {
    "text": "we have an additional qualifier on these observers so that we can distinguish",
    "start": "2284980",
    "end": "2290079"
  },
  {
    "text": "between events that are fired on the client or on the server we'll see why we do that",
    "start": "2290079",
    "end": "2296380"
  },
  {
    "text": "when we get into looking at the arai code near the end of the talk",
    "start": "2296380",
    "end": "2303000"
  },
  {
    "text": "so you can see with with CDI with the context and dependency injection",
    "start": "2311980",
    "end": "2317320"
  },
  {
    "text": "that can be resolved in the backing beans of our JSF application can be",
    "start": "2317320",
    "end": "2322420"
  },
  {
    "text": "resolved and the the Java objects we use in our RI application and they can be injected into the restful endpoints of",
    "start": "2322420",
    "end": "2329200"
  },
  {
    "text": "our our HTML5 JavaScript application that we've achieved shared State between",
    "start": "2329200",
    "end": "2336160"
  },
  {
    "text": "all these web Frameworks another piece we saw in the demo was",
    "start": "2336160",
    "end": "2342420"
  },
  {
    "text": "the different web Frameworks responding asynchronously to changes in another web",
    "start": "2342420",
    "end": "2347619"
  },
  {
    "text": "framework so when I changed the value in the JSF page we saw the URI and JavaScript page update",
    "start": "2347619",
    "end": "2353740"
  },
  {
    "text": "so the tools we used to use that are rich bases push",
    "start": "2353740",
    "end": "2360280"
  },
  {
    "text": "um there's a push element that you can use in Rich bases in your JSF page to",
    "start": "2360280",
    "end": "2365740"
  },
  {
    "text": "achieve that arai has that built in with the Rye RPC and then for the HTML5",
    "start": "2365740",
    "end": "2370960"
  },
  {
    "text": "JavaScript approach we use the atmosphere framework so it's kind of hard to talk about those",
    "start": "2370960",
    "end": "2378400"
  },
  {
    "text": "in a slide so let's jump into some code",
    "start": "2378400",
    "end": "2384119"
  },
  {
    "text": "where is my IDE okay so this is the oh",
    "start": "2387460",
    "end": "2392619"
  },
  {
    "text": "can you guys see that is that too dark okay that's better you can see that",
    "start": "2392619",
    "end": "2398980"
  },
  {
    "text": "so here we have the the project for the demo we saw at the beginning",
    "start": "2398980",
    "end": "2404880"
  },
  {
    "text": "we start with the with the web resources we look at the JSF page",
    "start": "2405400",
    "end": "2411640"
  },
  {
    "text": "Rich bases bootstrap so this uses the rich faces bootstrap project to Define all the bootstrap",
    "start": "2411640",
    "end": "2419079"
  },
  {
    "text": "elements in the page and here we see the call",
    "start": "2419079",
    "end": "2424359"
  },
  {
    "text": "to the pick list component where we instantiated with the value so",
    "start": "2424359",
    "end": "2429400"
  },
  {
    "text": "it's pretty standard JSF but it uses the ridge faces bootstrap",
    "start": "2429400",
    "end": "2434640"
  },
  {
    "text": "sandbox project to achieve the the bootstrap skin",
    "start": "2434640",
    "end": "2440200"
  },
  {
    "text": "so just to remind everyone Where We Are",
    "start": "2440200",
    "end": "2445020"
  },
  {
    "text": "I don't know sorry probably what poly widgets okay so we're looking at",
    "start": "2462400",
    "end": "2468940"
  },
  {
    "text": "the source code behind this page here",
    "start": "2468940",
    "end": "2472500"
  },
  {
    "text": "so here we see the JSF definition of the tag that gives us the pick list component it's very JSF like right I",
    "start": "2475900",
    "end": "2483880"
  },
  {
    "text": "mean we're using a standalone JavaScript widget but from the JSF developer's perspective they have no idea they just",
    "start": "2483880",
    "end": "2490300"
  },
  {
    "text": "write their JSF tag they don't care how the behavior is implemented in the",
    "start": "2490300",
    "end": "2495579"
  },
  {
    "text": "browser similarly we can look at the gwit page it's just an HTML page",
    "start": "2495579",
    "end": "2503700"
  },
  {
    "text": "um and we just Define a marker where we want to put the pick list component and",
    "start": "2504040",
    "end": "2509200"
  },
  {
    "text": "then we're actually going to populate that pick list component from java code",
    "start": "2509200",
    "end": "2514780"
  },
  {
    "text": "other than that it's just plain HTML5 uh taking advantage of the bootstrap",
    "start": "2514780",
    "end": "2521619"
  },
  {
    "text": "classes to give us notice the the row and span",
    "start": "2521619",
    "end": "2527700"
  },
  {
    "text": "grid elements that we spoke about earlier",
    "start": "2527700",
    "end": "2532320"
  },
  {
    "text": "um and finally let's look at the HTML5 bootstrap page it looks HTML5 bootstrap",
    "start": "2533380",
    "end": "2539020"
  },
  {
    "text": "page it looks a lot like the awry page it's just vanilla HTML and then we have",
    "start": "2539020",
    "end": "2545920"
  },
  {
    "text": "a marker here where we want to put the pick list element and that's going to be populated by a JavaScript so let's look",
    "start": "2545920",
    "end": "2553060"
  },
  {
    "text": "at the back end how does this have to look for all this to work together",
    "start": "2553060",
    "end": "2560079"
  },
  {
    "text": "so the package structure you'll notice has this client and server package",
    "start": "2560079",
    "end": "2565900"
  },
  {
    "text": "structure this is mandated by the awry project arise really neat if you haven't looked",
    "start": "2565900",
    "end": "2572680"
  },
  {
    "text": "at it I recommend you take a look at it awry takes the CDI environment from the",
    "start": "2572680",
    "end": "2578440"
  },
  {
    "text": "server and brings it to the browser right so when you write your your gwit application with awry you write",
    "start": "2578440",
    "end": "2584560"
  },
  {
    "text": "everything in Java you write your client code in Java and the CDI is the programming model right so in the",
    "start": "2584560",
    "end": "2591040"
  },
  {
    "text": "browser in your your code that's going to get rendered into browser code you fire a CDI event that CDI event is going",
    "start": "2591040",
    "end": "2597819"
  },
  {
    "text": "to get fired in the browser propagated through awry RPC to the server and you",
    "start": "2597819",
    "end": "2603280"
  },
  {
    "text": "can listen to that CDI event on the server it's it's really neat",
    "start": "2603280",
    "end": "2608940"
  },
  {
    "text": "um but it needs to know which Java classes it needs to compile",
    "start": "2609220",
    "end": "2615880"
  },
  {
    "text": "into JavaScript and it does that with this naming convention on the package structure so everything that's in the",
    "start": "2615880",
    "end": "2622599"
  },
  {
    "text": "client package is going to get compiled using the gwit oops",
    "start": "2622599",
    "end": "2628119"
  },
  {
    "text": "is going to get compiled using the gwit compiler into JavaScript and HTML everything that's in the server package",
    "start": "2628119",
    "end": "2635079"
  },
  {
    "text": "is going to stay in the server package so let's look a bit at what we have in",
    "start": "2635079",
    "end": "2640540"
  },
  {
    "text": "here are capitals being",
    "start": "2640540",
    "end": "2645359"
  },
  {
    "text": "is annotated as session scoped right so we're going to have a single",
    "start": "2646800",
    "end": "2652839"
  },
  {
    "text": "instance of the capitals being that is going to be used by JSF it's going to be used by awry and it's going to be used",
    "start": "2652839",
    "end": "2659740"
  },
  {
    "text": "by the restful endpoint so everyone who connects to this application is going to get associated with with that particular",
    "start": "2659740",
    "end": "2665920"
  },
  {
    "text": "user a single instance of this beam um",
    "start": "2665920",
    "end": "2672060"
  },
  {
    "text": "the capitals Observer class we saw a code snip a bit earlier in the",
    "start": "2673200",
    "end": "2678520"
  },
  {
    "text": "presentation this is going to respond to the events",
    "start": "2678520",
    "end": "2683619"
  },
  {
    "text": "from the application so we see in this first observed Capital",
    "start": "2683619",
    "end": "2689200"
  },
  {
    "text": "selection client event we're using the client qualifier to",
    "start": "2689200",
    "end": "2695260"
  },
  {
    "text": "observe capital's selected events that are initiated with awry in the browser so using the URI",
    "start": "2695260",
    "end": "2702460"
  },
  {
    "text": "using the wit compiler we're going to look at the wit code",
    "start": "2702460",
    "end": "2707500"
  },
  {
    "text": "that fires that event and then we can respond to it on the server side and what are we going to do when that",
    "start": "2707500",
    "end": "2714099"
  },
  {
    "text": "happens on the client we're going to update the server side being with the",
    "start": "2714099",
    "end": "2719500"
  },
  {
    "text": "value from that event when the server side value is updated",
    "start": "2719500",
    "end": "2726040"
  },
  {
    "text": "we're going to fire an event that the capitals have been selected and this is going to trigger that server sent event",
    "start": "2726040",
    "end": "2733359"
  },
  {
    "text": "that goes back to the other browsers and triggers for them to update so a bit of a complicated back and forth as",
    "start": "2733359",
    "end": "2740319"
  },
  {
    "text": "the different clients need to propagate their information of the server we use CDI as a single mechanism to collect all",
    "start": "2740319",
    "end": "2747040"
  },
  {
    "text": "those events and then propagate the changes back to the other clients",
    "start": "2747040",
    "end": "2753579"
  },
  {
    "text": "so here is our rest class this is the class that holds our restful endpoints",
    "start": "2753579",
    "end": "2759579"
  },
  {
    "text": "you see that the restful or the the class that provides our",
    "start": "2759579",
    "end": "2764920"
  },
  {
    "text": "restful endpoints is um we inject the capitals being into it",
    "start": "2764920",
    "end": "2769960"
  },
  {
    "text": "so it's tied to the session of the user other than that it's pretty standard",
    "start": "2769960",
    "end": "2777099"
  },
  {
    "text": "restful endpoints we Define the get and post endpoints",
    "start": "2777099",
    "end": "2784540"
  },
  {
    "text": "that are called by the Aero gear pipeline so yeah we missed that let's",
    "start": "2784540",
    "end": "2790359"
  },
  {
    "text": "jump back to that let's look at the Aero gear pipeline",
    "start": "2790359",
    "end": "2795400"
  },
  {
    "text": "so Aero gear is a project at JBoss that is looking at taking all these new",
    "start": "2796720",
    "end": "2803079"
  },
  {
    "text": "JavaScript HTML applications built with node or angular or",
    "start": "2803079",
    "end": "2808540"
  },
  {
    "text": "knock out whatever framework you want to build to build your client application you can bring in Aero gear as a way of",
    "start": "2808540",
    "end": "2815260"
  },
  {
    "text": "integrating with the JBoss back end right so here we see a JavaScript class",
    "start": "2815260",
    "end": "2821140"
  },
  {
    "text": "that when we instantiate where we initialize this class",
    "start": "2821140",
    "end": "2826660"
  },
  {
    "text": "up to I'm going to mix my metaphors here but when we instantiate this JavaScript",
    "start": "2826660",
    "end": "2831940"
  },
  {
    "text": "object we first thing we do is we're going to fetch the capitals to do that we use the Aero gear pipeline that is",
    "start": "2831940",
    "end": "2839200"
  },
  {
    "text": "going to be mapped to a particular restable endpoint right so this here this capital's pipe",
    "start": "2839200",
    "end": "2845740"
  },
  {
    "text": "is the Aero gear pipeline it reads from the restful endpoint and we can use that to populate the pick list value",
    "start": "2845740",
    "end": "2853020"
  },
  {
    "text": "using the init pick list method it looks for that that pick list ID tag that we",
    "start": "2853020",
    "end": "2859420"
  },
  {
    "text": "had marked in our HTML5 page and initializes the pick list with the values retrieved from that rest call",
    "start": "2859420",
    "end": "2865180"
  },
  {
    "text": "this is why it's probably not done in an optimal way but when you load the HTML5",
    "start": "2865180",
    "end": "2871240"
  },
  {
    "text": "Arrow Gear Page you see that delay until the data shows up that's why the rest call is is going on and evaluating the",
    "start": "2871240",
    "end": "2878619"
  },
  {
    "text": "um The Returned payload so that's what the capitals rest values",
    "start": "2878619",
    "end": "2885280"
  },
  {
    "text": "for but it's it's interesting for this presentation because we see that cdei is",
    "start": "2885280",
    "end": "2890740"
  },
  {
    "text": "involved in there right we're using the same instance of capitals being that we're going to be using in our JSF page",
    "start": "2890740",
    "end": "2897220"
  },
  {
    "text": "right capitals being has the at named annotation on it so when we reference it",
    "start": "2897220",
    "end": "2903160"
  },
  {
    "text": "from the JSF page we're using that same instance from CDI",
    "start": "2903160",
    "end": "2909220"
  },
  {
    "text": "if we look quickly at the wit code",
    "start": "2909220",
    "end": "2914940"
  },
  {
    "text": "so this is the the capital object that represents the capital that we're selecting and moving around and this",
    "start": "2920200",
    "end": "2926740"
  },
  {
    "text": "this um in this application it's in the client",
    "start": "2926740",
    "end": "2932520"
  },
  {
    "text": "package so that means the wit compiler is actually going to compile this down into a JavaScript object and if you",
    "start": "2932520",
    "end": "2939579"
  },
  {
    "text": "inspect the JavaScript code that's flying around in the browser while you're running your eye application",
    "start": "2939579",
    "end": "2944680"
  },
  {
    "text": "you'll see this capital A JavaScript version of this Capital class that we have on the server",
    "start": "2944680",
    "end": "2951640"
  },
  {
    "text": "um qualifiers",
    "start": "2951640",
    "end": "2956800"
  },
  {
    "text": "so the pick list app itself we Define the array",
    "start": "2956800",
    "end": "2962260"
  },
  {
    "text": "application class if you will is defined with the at entry point annotation",
    "start": "2962260",
    "end": "2967300"
  },
  {
    "text": "this is kind of like the um static what is it public static void",
    "start": "2967300",
    "end": "2973780"
  },
  {
    "text": "mean that you have when you write a Java application you have to identify the class that is used to start the",
    "start": "2973780",
    "end": "2980800"
  },
  {
    "text": "application and that's the entry point annotation for Mirai so when it initializes IT similarly",
    "start": "2980800",
    "end": "2986980"
  },
  {
    "text": "fetches a list of capitals and then initializes the picklist component",
    "start": "2986980",
    "end": "2994078"
  },
  {
    "text": "it initializes this RPC call on the client to connect with the back",
    "start": "2994839",
    "end": "3000900"
  },
  {
    "text": "end and retrieve using awry RPC the list of capitals so similarly when we load",
    "start": "3000900",
    "end": "3007560"
  },
  {
    "text": "the quit awry page we see also a slight delay before the data shows up that's the gwit RPC call sorry the Ari RPC call",
    "start": "3007560",
    "end": "3015300"
  },
  {
    "text": "evaluating so where did it go",
    "start": "3015300",
    "end": "3021900"
  },
  {
    "text": "and then finally the last one we'll look at is pick list widget this is",
    "start": "3021900",
    "end": "3028260"
  },
  {
    "text": "could probably be done a lot more concisely actually I know it can be done a lot more concisely I when I developed the",
    "start": "3028260",
    "end": "3034980"
  },
  {
    "text": "pick list JavaScript widget I targeted Rich faces and I provided the widget API",
    "start": "3034980",
    "end": "3042420"
  },
  {
    "text": "everything that I knew I needed to get it to work with Rich faces and getting it to integrate with gwit and with the",
    "start": "3042420",
    "end": "3049440"
  },
  {
    "text": "arrow gear back end I realized that I could provide a more Rich API on the",
    "start": "3049440",
    "end": "3054540"
  },
  {
    "text": "widget to make it easier to integrate with other applications so it's uh it's",
    "start": "3054540",
    "end": "3059579"
  },
  {
    "text": "the N plus one problem as soon as you solve it for more than one you solved it for many but anyway so there's a whole bunch of",
    "start": "3059579",
    "end": "3065520"
  },
  {
    "text": "glue code that has to exist in here to populate that Dom structure in the or",
    "start": "3065520",
    "end": "3071819"
  },
  {
    "text": "using the the grit compiler to um to create that pick list component",
    "start": "3071819",
    "end": "3078619"
  },
  {
    "text": "um and can we see the CDI event in here",
    "start": "3079200",
    "end": "3087020"
  },
  {
    "text": "in the picklist that maybe so you notice in this pick list app",
    "start": "3087180",
    "end": "3093540"
  },
  {
    "text": "class the awry Base Class we inject this event object and then",
    "start": "3093540",
    "end": "3100380"
  },
  {
    "text": "we fire an event here we go event fire so this submit",
    "start": "3100380",
    "end": "3105780"
  },
  {
    "text": "button gets bound to the button on the um on the page and when we click that",
    "start": "3105780",
    "end": "3111480"
  },
  {
    "text": "button it's going to fire a CDI event so this is to me the neat thing about awry",
    "start": "3111480",
    "end": "3116579"
  },
  {
    "text": "this is client code right this is a a submit click Handler for an HTML button",
    "start": "3116579",
    "end": "3123900"
  },
  {
    "text": "but it's server side CDI code how does that work it's just magic right we fire",
    "start": "3123900",
    "end": "3130140"
  },
  {
    "text": "a CDI event when we click a button in the client and we can observe that CDI",
    "start": "3130140",
    "end": "3136140"
  },
  {
    "text": "event on the server or irpc propagates that back and forth for us so",
    "start": "3136140",
    "end": "3141599"
  },
  {
    "text": "I probably uh over emphasize that point but I think it's pretty Magic",
    "start": "3141599",
    "end": "3148680"
  },
  {
    "text": "uh um and that's that's it that brings us to",
    "start": "3148680",
    "end": "3154800"
  },
  {
    "text": "the end of the presentation so here's the um Creative Commons",
    "start": "3154800",
    "end": "3160680"
  },
  {
    "text": "license on my presentation I use the number of images with a Creative Commons",
    "start": "3160680",
    "end": "3166020"
  },
  {
    "text": "license on them so here's the links for further reading I based this presentation on a Blog I wrote at the",
    "start": "3166020",
    "end": "3173339"
  },
  {
    "text": "end of last year you can check that out the source code for all this is available on GitHub",
    "start": "3173339",
    "end": "3179099"
  },
  {
    "text": "um and if you want to look closer at the rich faces widgets project if that's something you want to get involved and we're just starting out with that now",
    "start": "3179099",
    "end": "3187040"
  },
  {
    "text": "stay in the loop here's our here's the coordinates",
    "start": "3187040",
    "end": "3192119"
  },
  {
    "text": "oh you can get a hold of us mom my slides will be available on my website .ca",
    "start": "3192119",
    "end": "3198859"
  },
  {
    "text": "2013 yeah all right good stuff guys thank you very much",
    "start": "3198859",
    "end": "3204740"
  },
  {
    "text": "foreign",
    "start": "3204900",
    "end": "3207900"
  }
]