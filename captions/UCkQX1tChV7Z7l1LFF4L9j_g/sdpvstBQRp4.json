[
  {
    "start": "0",
    "end": "123000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "9280"
  },
  {
    "text": "my name is Ken Russell I am actually not Neil Trevit not the president of the Kronos group but I am the chair of the",
    "start": "9280",
    "end": "15120"
  },
  {
    "text": "WebGL working group I will be uh presenting Neil's uh slides given that he is in Dublin for a Kronos face toface",
    "start": "15120",
    "end": "21160"
  },
  {
    "text": "meeting And uh the topic that I would like to talk to you about today is um the ecosystem around WebGL and WebCL",
    "start": "21160",
    "end": "28880"
  },
  {
    "text": "which are two of the uh graphical and compute acceleration APIs that Kronos is",
    "start": "28880",
    "end": "34000"
  },
  {
    "text": "developing for the web So the uh the topics that we'll go over",
    "start": "34000",
    "end": "40160"
  },
  {
    "text": "first we'll do a very quick introduction to uh 3D I mean has anyone programmed using 3D graphics before here in the",
    "start": "40160",
    "end": "47559"
  },
  {
    "text": "audience small percentage like one person Okay Um so we'll break down a",
    "start": "47559",
    "end": "54480"
  },
  {
    "text": "little bit how the 3D pipeline works Uh talk about the need for accelerating APIs like 3D like uh WebCL and then go",
    "start": "54480",
    "end": "62239"
  },
  {
    "text": "into a little bit more about what exactly these APIs provide to the web ecosystem Um we'll talk a little bit",
    "start": "62239",
    "end": "68320"
  },
  {
    "text": "about WebGL tools and frameworks that help developers that aren't too experienced with 3 3D graphics actually",
    "start": "68320",
    "end": "74240"
  },
  {
    "text": "get stuff onto the web quite easily Um and then we'll talk a little bit about",
    "start": "74240",
    "end": "79360"
  },
  {
    "text": "uh going from 3D graphics to actually lower level computation and how WebCL",
    "start": "79360",
    "end": "84799"
  },
  {
    "text": "can accelerate these sorts of computations in the web browser And then talk a little bit about uh actually it's Neil's favorite topic and it's also a",
    "start": "84799",
    "end": "91280"
  },
  {
    "text": "pretty cool one Uh what if we could do augmented reality applications in the web browser and what would that what",
    "start": "91280",
    "end": "96400"
  },
  {
    "text": "would that entail what would that take um and then we can uh have plenty of time for questions and uh my colleague",
    "start": "96400",
    "end": "101600"
  },
  {
    "text": "Jinya Mo from Google who also works on the WebGL implementation on in Chrome Uh",
    "start": "101600",
    "end": "106880"
  },
  {
    "text": "we'll next talk about uh WebGL in more detail showing you exactly how you can construct a very simple scene from",
    "start": "106880",
    "end": "113920"
  },
  {
    "text": "nothing to having at least a shaded triangle on the screen and uh possibly more topics we haven't actually synced",
    "start": "113920",
    "end": "120079"
  },
  {
    "text": "up on all of the slides that he will be uh presenting today",
    "start": "120079",
    "end": "125320"
  },
  {
    "start": "123000",
    "end": "195000"
  },
  {
    "text": "So question number one what what is real-time 3D graphics i mean you've all",
    "start": "125320",
    "end": "130560"
  },
  {
    "text": "seen it in the movies It every film that comes out nowadays has uh CGI uh for all",
    "start": "130560",
    "end": "136720"
  },
  {
    "text": "the special effects They really don't like to put actors at risk anymore nowadays falling off horses or anything like that All of this stuff is done in",
    "start": "136720",
    "end": "143440"
  },
  {
    "text": "the safety of a studio with plenty of crash pads around and then computer graphics is added later to make it look",
    "start": "143440",
    "end": "149160"
  },
  {
    "text": "realistic Um and anybody play games computer",
    "start": "149160",
    "end": "154200"
  },
  {
    "text": "games Okay there there it is Um pretty much every game that comes out",
    "start": "154200",
    "end": "160959"
  },
  {
    "text": "today on on PCs on mobile on consoles is has some element of 3D Even if it's only",
    "start": "160959",
    "end": "166400"
  },
  {
    "text": "a 2D game you typically have parallax and other effects done using uh 3D",
    "start": "166400",
    "end": "171680"
  },
  {
    "text": "effects using you know multiple planes that are uh whose textures are uploaded to the graphics processor and who are",
    "start": "171680",
    "end": "177599"
  },
  {
    "text": "translated around using uh commands that are sent down to the GPU So 3D graphics",
    "start": "177599",
    "end": "183000"
  },
  {
    "text": "fundamentally is the science and art of using computers to create and enjoy beautiful and interactive experiences",
    "start": "183000",
    "end": "189920"
  },
  {
    "text": "And the piece of silicon that makes this possible in real time is the graphics processing unit or the",
    "start": "189920",
    "end": "196120"
  },
  {
    "start": "195000",
    "end": "322000"
  },
  {
    "text": "GPU And did anybody here play Doom when it",
    "start": "196120",
    "end": "201360"
  },
  {
    "text": "came out i mean I loved Doom We when I was in the in college we hacked Doom to death Not only did we play it a lot uh",
    "start": "201360",
    "end": "209200"
  },
  {
    "text": "late at night but we also took apart the level files and um and did things with",
    "start": "209200",
    "end": "214720"
  },
  {
    "text": "them So we we had the privilege of having some silicon graphics machines which were the top-end graphics",
    "start": "214720",
    "end": "221280"
  },
  {
    "text": "processors really super fast uh CPU central processing units that you could",
    "start": "221280",
    "end": "226319"
  },
  {
    "text": "do a lot of physics and other kinds of simulation as well as amazing graphics",
    "start": "226319",
    "end": "232159"
  },
  {
    "text": "pipelines And this is you know they they were the genesis of the entire 3D uh ecosystem today So we took Doom apart",
    "start": "232159",
    "end": "240319"
  },
  {
    "text": "and took the level data and did things with it like put the user you know you the person into the Doom environment or",
    "start": "240319",
    "end": "246640"
  },
  {
    "text": "put uh virtual interactive creatures into the Doom environment and had them wandering around So not just monsters",
    "start": "246640",
    "end": "252400"
  },
  {
    "text": "and you know chainsaws but actually like dogs and cats and hamsters wandering around the the halls of these huge Doom",
    "start": "252400",
    "end": "259359"
  },
  {
    "text": "levels And um it was a blast but you know that the the techniques were fairly",
    "start": "259359",
    "end": "266400"
  },
  {
    "text": "um limited It was fairly limited what you could do back then because all the 3D actually had to be done on the",
    "start": "266400",
    "end": "272800"
  },
  {
    "text": "central processing unit at least on PCs And that's why Doom's visual effects were kind of blocky And then Doom for GL",
    "start": "272800",
    "end": "280240"
  },
  {
    "text": "came out where it was actually running on the graphics processor and silicon graphics machines And that was another",
    "start": "280240",
    "end": "286720"
  },
  {
    "text": "major step forward in terms of speed and in terms of quality And since then you know Quake came out and a ton of other",
    "start": "286720",
    "end": "293199"
  },
  {
    "text": "games And nowadays you see the uh the Samaritan demo that was shown at um I think that was at at SIGRAF 2011 And",
    "start": "293199",
    "end": "300639"
  },
  {
    "text": "it's just incredible This is running on like I think two uh Fermy cards from",
    "start": "300639",
    "end": "307039"
  },
  {
    "text": "Nvidia I mean it takes that much graphical processing power the two highest end cards side by side in order",
    "start": "307039",
    "end": "313039"
  },
  {
    "text": "to get these amazing lighting effects But um but the ecosystem has just",
    "start": "313039",
    "end": "318240"
  },
  {
    "text": "evolved dramatically and and the effects that are possible even on a mobile phone today are pretty amazing And we'll show",
    "start": "318240",
    "end": "323440"
  },
  {
    "start": "322000",
    "end": "610000"
  },
  {
    "text": "some examples in a bit now And and what's super cool by the way is that",
    "start": "323440",
    "end": "328560"
  },
  {
    "text": "this is all real time You can do these thing these kinds of effects at 60 frames a second That's what's so cool",
    "start": "328560",
    "end": "333680"
  },
  {
    "text": "about it You can imagine an effect that you want to put in front of the end user and you can get it to them You can",
    "start": "333680",
    "end": "338720"
  },
  {
    "text": "deliver it to them over the web as we'll discuss and get some amazing visual effects that run on every kind of",
    "start": "338720",
    "end": "344479"
  },
  {
    "text": "computer out there be it a handheld cell phone or a high-end",
    "start": "344479",
    "end": "349560"
  },
  {
    "text": "workstation So what's 3D basically 3D is a bit of a cheat Okay",
    "start": "349560",
    "end": "356400"
  },
  {
    "text": "it's the it's an art um of faking what looks photorealistic by doing some uh by",
    "start": "356400",
    "end": "364319"
  },
  {
    "text": "using heruristics that have been developed over the years The earliest um sorts of 3D effects were fairly",
    "start": "364319",
    "end": "371479"
  },
  {
    "text": "simple First of all you have you know that uh things that are closer to you appear bigger things that are further",
    "start": "371479",
    "end": "377600"
  },
  {
    "text": "away appear smaller This is a very straightforward geometric um relationship uh that is I guess uh uh",
    "start": "377600",
    "end": "386720"
  },
  {
    "text": "technically called perspective projection But you can actually draw you know using just high school geometry",
    "start": "386720",
    "end": "393120"
  },
  {
    "text": "similar triangles showing the relationship of objects uh objects",
    "start": "393120",
    "end": "399039"
  },
  {
    "text": "perceived size depending on how far away they are from you And it really just amounts to uh dividing by z the farther",
    "start": "399039",
    "end": "405840"
  },
  {
    "text": "away in the Zcoordinate the object is from you the smaller it appears to be because you're dividing by a larger and",
    "start": "405840",
    "end": "412160"
  },
  {
    "text": "larger value as it goes away from you So the earliest 3D was basically just",
    "start": "412160",
    "end": "417600"
  },
  {
    "text": "taking the the vertices of your 3D model perspective projecting them and",
    "start": "417600",
    "end": "422720"
  },
  {
    "text": "then shading them in such a way that it looked like there was some kind of light effect going on But the the heruristics",
    "start": "422720",
    "end": "429039"
  },
  {
    "text": "have dramatically increased over the years And again we'll we'll touch this and touch on this a bit more",
    "start": "429039",
    "end": "436039"
  },
  {
    "text": "So there's usually some kind of a database or some uh stored representation of your 3D models and the",
    "start": "436039",
    "end": "444400"
  },
  {
    "text": "surfaces of the objects that you're going to be displaying on the screen are broken down into a grid of not just polygons but actually triangles Okay The",
    "start": "444400",
    "end": "452160"
  },
  {
    "text": "triangle is the key element of 3D graphics Does anyone know why the triangle is the key element of 3D",
    "start": "452160",
    "end": "457479"
  },
  {
    "text": "graphics anyone anyone it's it's actually a really simple answer",
    "start": "457479",
    "end": "464800"
  },
  {
    "text": "the triangle as opposed to say a square or a quadrilateral it's it's absolutely",
    "start": "464800",
    "end": "471120"
  },
  {
    "text": "determined which plane that triangle lies in I mean the three corners of the triangle determine actually a plane in",
    "start": "471120",
    "end": "477599"
  },
  {
    "text": "3D space If you have four points it's a bit ambiguous They don't necessarily",
    "start": "477599",
    "end": "482879"
  },
  {
    "text": "have to lie in a plane They can twist a little bit And then you have to decide okay well if I want to disambiguate what",
    "start": "482879",
    "end": "489680"
  },
  {
    "text": "uh surface I'm trying to represent Do I connect this diagonal or do I connect that diagonal okay this is why the",
    "start": "489680",
    "end": "496400"
  },
  {
    "text": "triangle is used as the basic primitive on graphics processors that there is no ambiguity about how it's going to be",
    "start": "496400",
    "end": "502960"
  },
  {
    "text": "rendered Okay How each of the points that are inside the triangle show up on the screen",
    "start": "502960",
    "end": "509840"
  },
  {
    "text": "So the surfaces of the 3D objects that are rendered with WebGL with any of these APIs are broken down into a grid",
    "start": "509840",
    "end": "516159"
  },
  {
    "text": "of triangles a mesh of triangles and the points of the",
    "start": "516159",
    "end": "521200"
  },
  {
    "text": "triangles live in a 3D coordinate system 3D space",
    "start": "521200",
    "end": "527160"
  },
  {
    "text": "Um ear in in the previous fixed function 3D ecosystem and we'll talk about what",
    "start": "527160",
    "end": "534959"
  },
  {
    "text": "that was and where we are now um you would associate a material with each vertex You'd say this is blue or it's",
    "start": "534959",
    "end": "541760"
  },
  {
    "text": "shiny or something like that and the uh the graphics card would figure out how",
    "start": "541760",
    "end": "546959"
  },
  {
    "text": "that vertex was supposed to be colored depending on that information So for example if you have a blue vertex out",
    "start": "546959",
    "end": "553440"
  },
  {
    "text": "here and it's not shiny and you have a white light source pointing at it it's going to be blue because you know the",
    "start": "553440",
    "end": "559839"
  },
  {
    "text": "the white light source is illuminating this uh diffuse blue point Excuse me But",
    "start": "559839",
    "end": "566880"
  },
  {
    "text": "if the vertex is is shiny you may get a bit of a glint coming off of the light source right okay And for that reason",
    "start": "566880",
    "end": "575360"
  },
  {
    "text": "the the vertex would actually show up white not blue which is interesting right so you get different visual",
    "start": "575360",
    "end": "580800"
  },
  {
    "text": "effects depending on the kinds of materials you apply to the 3D models that you're you're displaying",
    "start": "580800",
    "end": "587640"
  },
  {
    "text": "Um and finally the vertices of course are positioned in a 3D coordinate system",
    "start": "587640",
    "end": "593040"
  },
  {
    "text": "right this is the the typical thing that you do when you're a computer graphics programmer You make your right-handed",
    "start": "593040",
    "end": "598240"
  },
  {
    "text": "coordinate system positive x positive y positive z and then you position your your objects in the scene And it's",
    "start": "598240",
    "end": "604800"
  },
  {
    "text": "linear algebra It's matrix math that allows you to uh represent how these objects move around in the scene",
    "start": "604800",
    "end": "611720"
  },
  {
    "start": "610000",
    "end": "853000"
  },
  {
    "text": "Okay So how does it work the first thing that's done is on a per",
    "start": "611720",
    "end": "619279"
  },
  {
    "text": "triangle basis the graphics card projects the uh the vertices of the triangle onto the screen Typically there",
    "start": "619279",
    "end": "626399"
  },
  {
    "text": "are there are two matrices involved in this One is the uh the mo well maybe",
    "start": "626399",
    "end": "632880"
  },
  {
    "text": "three One one is typically called the model matrix and the model matrix moves",
    "start": "632880",
    "end": "638320"
  },
  {
    "text": "conceptually anyway moves your object around in the 3D space Okay Then there's",
    "start": "638320",
    "end": "643440"
  },
  {
    "text": "the viewing matrix The viewing matrix uh decides where the camera that's viewing",
    "start": "643440",
    "end": "648880"
  },
  {
    "text": "all of the objects in the scene is supposed to be placed And then finally there's the projection matrix And the",
    "start": "648880",
    "end": "654640"
  },
  {
    "text": "projection matrix warps space in this way that we talked about You know it gives you the perspective projection And",
    "start": "654640",
    "end": "659920"
  },
  {
    "text": "there are different projections that you might choose For example you might want orthographic projection An orthographic",
    "start": "659920",
    "end": "665839"
  },
  {
    "text": "projection is extremely useful for uh computerated design Okay and it's a different view because it doesn't",
    "start": "665839",
    "end": "671279"
  },
  {
    "text": "actually have the forcehortening that the real world does with perspect perspective projection There are other",
    "start": "671279",
    "end": "677120"
  },
  {
    "text": "twopoint perspective projections that are really useful in architecture where you have actually two vanishing points",
    "start": "677120",
    "end": "683040"
  },
  {
    "text": "uh not just one And all of these can be represented using the appropriate um",
    "start": "683040",
    "end": "688240"
  },
  {
    "text": "projection matrices But once you've multiplied using just linear algebra the vertices",
    "start": "688240",
    "end": "695440"
  },
  {
    "text": "of your models through these matrices what you ultimately get is points in 2D",
    "start": "695440",
    "end": "701600"
  },
  {
    "text": "Okay Um and it it's basically minus1 minus one So one by one it's a unit or",
    "start": "701600",
    "end": "709920"
  },
  {
    "text": "maybe two times unit uh coordinate system And that's ultimately what OpenGL",
    "start": "709920",
    "end": "716399"
  },
  {
    "text": "and what WebGL work with And so ultimately they boil down to a 2D graphics API believe it or not Anyway",
    "start": "716399",
    "end": "723680"
  },
  {
    "text": "once you have the triangles on the screen okay you have to figure out which dots which pixels are going to be",
    "start": "723680",
    "end": "729920"
  },
  {
    "text": "colored in And that's what the GPU does part of what the GPU does All right Now",
    "start": "729920",
    "end": "736560"
  },
  {
    "text": "once we figured out which points which pixels we're going to color we have to figure out how we're going to color them",
    "start": "736560",
    "end": "743360"
  },
  {
    "text": "And this is where the uh the shading techniques and some of the other heruristic tricks that have been developed in the 3D space come in So for",
    "start": "743360",
    "end": "750639"
  },
  {
    "text": "example with smooth shading typically what you do is you take the points of",
    "start": "750639",
    "end": "756399"
  },
  {
    "text": "the triangles and you figure out what the color is supposed to be at those three points It's going to be different",
    "start": "756399",
    "end": "762480"
  },
  {
    "text": "right because each of these points is at a different location relative to the light source for example you know maybe",
    "start": "762480",
    "end": "768800"
  },
  {
    "text": "this this point on this triangle is closer and this one is farther away and they're pointing in different directions",
    "start": "768800",
    "end": "774639"
  },
  {
    "text": "So they're going to get shaded differently This one is going to be brighter because it's pointing at the light source This one's going to be not",
    "start": "774639",
    "end": "779760"
  },
  {
    "text": "as bright because it's pointing away from it So in smooth shading you compute",
    "start": "779760",
    "end": "785200"
  },
  {
    "text": "the lighting at each vertex and then you interpolate the colors of the vertices across the triangle",
    "start": "785200",
    "end": "791320"
  },
  {
    "text": "Okay Um there are techniques for getting enhanced realism at a low cost like",
    "start": "791320",
    "end": "797360"
  },
  {
    "text": "texture mapping where you take an image and you wrap it around your 3D model Okay Uh this was one of the first uh",
    "start": "797360",
    "end": "804959"
  },
  {
    "text": "techniques that was developed on silicon graphics workstations to dramatically improve the realism of the scenes that you were looking at because you didn't",
    "start": "804959",
    "end": "811200"
  },
  {
    "text": "have to send down a lot more triangles in order to get something that looked much more visually realistic",
    "start": "811200",
    "end": "817920"
  },
  {
    "text": "And environment mapping is is another nifty trick and uh we can show a demo later where um it you actually consider",
    "start": "817920",
    "end": "825519"
  },
  {
    "text": "your object to be living in a space and the space is defined by an image or actually a set of images So you put your",
    "start": "825519",
    "end": "832079"
  },
  {
    "text": "your objects in a box and you consider the objects to be reflective and environment mapping when it's rendering",
    "start": "832079",
    "end": "837920"
  },
  {
    "text": "the triangles it'll bounce a ray off the object and figure out what part of the environment is being reflected off it",
    "start": "837920",
    "end": "844320"
  },
  {
    "text": "and hitting the eye and it gives you a very very compelling you know realistic looking mirrored",
    "start": "844320",
    "end": "850279"
  },
  {
    "text": "object and and these were um some of the techniques that were developed in the",
    "start": "850279",
    "end": "855839"
  },
  {
    "text": "early days of silicon graphics workstations",
    "start": "855839",
    "end": "861000"
  },
  {
    "text": "So what happens when we're rendering our triangles um the the pipeline basically",
    "start": "861000",
    "end": "868240"
  },
  {
    "text": "goes in the top down here First we traverse our object representation our our scene",
    "start": "868240",
    "end": "874800"
  },
  {
    "text": "database and figure out what we're going to be rendering this the the representations differ dramatically",
    "start": "874800",
    "end": "880560"
  },
  {
    "text": "depending on whether you're doing a real-time game whether you're doing a uh some kind of an architectural or CAD",
    "start": "880560",
    "end": "886160"
  },
  {
    "text": "application but fundamentally you have to you have a bunch of 3D objects that you're going to be rendering and you",
    "start": "886160",
    "end": "891360"
  },
  {
    "text": "have to iterate down to figure out what you're putting on the screen Then you um",
    "start": "891360",
    "end": "896800"
  },
  {
    "text": "you transform them Okay you move them into their appropriate place in 3D Then you say okay well based on their current",
    "start": "896800",
    "end": "903519"
  },
  {
    "text": "locations in 3D and the current positions of the lights in the scene how are they shaded okay And then finally uh",
    "start": "903519",
    "end": "911360"
  },
  {
    "text": "they are they're rasterized They're converted from uh you know a vector",
    "start": "911360",
    "end": "916880"
  },
  {
    "text": "representation where they're just three points in in space and they're actually converted into what pixels are going to",
    "start": "916880",
    "end": "922880"
  },
  {
    "text": "be filled in on the screen Okay so this is sort of the the geometry phase of the",
    "start": "922880",
    "end": "928000"
  },
  {
    "text": "pipeline And then there is the rasterization phase of the graphics pipeline where the actual pixel by pixel",
    "start": "928000",
    "end": "934720"
  },
  {
    "text": "operations are executed For example uh interpolating the colors of each of the",
    "start": "934720",
    "end": "940720"
  },
  {
    "text": "vertices of the triangles okay to get the right uh smooth result Figuring out which dots on the screen are actually",
    "start": "940720",
    "end": "947279"
  },
  {
    "text": "visible because these triangles if you consider my uh laptop screen to be the edge of the screen the triangle might go",
    "start": "947279",
    "end": "954320"
  },
  {
    "text": "off screen Okay and then this vertex down here wouldn't actually be visible So the triangle would be clipped to the",
    "start": "954320",
    "end": "959759"
  },
  {
    "text": "edge of the screen Um and then finally the pixels are actually written to the to the screen to the frame buffer So",
    "start": "959759",
    "end": "967600"
  },
  {
    "text": "here are a couple of diagrams of actual 3D pipelines Um and for comparison we're going to show what the mobile phones",
    "start": "967600",
    "end": "974320"
  },
  {
    "text": "used to look like which is on the left and what mobile phones today look like which is on the right So on the left is",
    "start": "974320",
    "end": "982320"
  },
  {
    "text": "uh mobile phones from I don't know vintage uh early early 2000 2001 2002",
    "start": "982320",
    "end": "989360"
  },
  {
    "text": "These mimicked the the 3D functionality that was on desktop PCs at the time Okay",
    "start": "989360",
    "end": "996079"
  },
  {
    "text": "And it had huristics like lighting texture mapping uh environment mapping",
    "start": "996079",
    "end": "1001519"
  },
  {
    "text": "They had a little bit of uh additional uh fog for example They had uh you can",
    "start": "1001519",
    "end": "1007040"
  },
  {
    "text": "actually see these stages by the way in here So if you can see my mouse this is the part of the pipeline that would",
    "start": "1007040",
    "end": "1013519"
  },
  {
    "text": "implement the fog function All right there was actually a special purpose thing in the graphics pipeline that",
    "start": "1013519",
    "end": "1019519"
  },
  {
    "text": "would compute uh fog to give you a little more realism in terrain rendering",
    "start": "1019519",
    "end": "1025438"
  },
  {
    "text": "for example but it was very very specialized right i mean if you're uh if you're indoors for example you don't",
    "start": "1025439",
    "end": "1031839"
  },
  {
    "text": "need fog right so the previous pipelines were a a collection of huristics that",
    "start": "1031839",
    "end": "1038240"
  },
  {
    "text": "allowed you to get pretty compelling looking uh graphics and it was realized",
    "start": "1038240",
    "end": "1044000"
  },
  {
    "text": "that it wasn't enough because the the people who were designing these pipelines couldn't come up with all the ideas that the graphics programmers",
    "start": "1044000",
    "end": "1050320"
  },
  {
    "text": "wanted to put in practice right all the visual techniques that they wanted to achieve So the major shift that occurred",
    "start": "1050320",
    "end": "1056720"
  },
  {
    "text": "some years ago is the introduction of the programmable graphics pipeline Now you can actually write a small",
    "start": "1056720",
    "end": "1063280"
  },
  {
    "text": "snippet of computer code and upload it onto the graphics card and have the graphics card run it and that is how it",
    "start": "1063280",
    "end": "1069280"
  },
  {
    "text": "figures out how the pixels are shaded on the screen This is really cool This is what WebGL is built on This is what all",
    "start": "1069280",
    "end": "1076320"
  },
  {
    "text": "phone all smartphones today are shipping with It's called OpenGLES 2.0 And this",
    "start": "1076320",
    "end": "1081600"
  },
  {
    "text": "shift from the old fixed function pipeline paradigm to the programmable graphics pipeline was a major major",
    "start": "1081600",
    "end": "1087520"
  },
  {
    "text": "paradigm shift It was an incompatible API shift So basically old applications",
    "start": "1087520",
    "end": "1092640"
  },
  {
    "text": "had to be rewritten for the new uh API structure but it gives you much much",
    "start": "1092640",
    "end": "1097919"
  },
  {
    "text": "more control over how your 3D scene works how your pixels are shaded and it",
    "start": "1097919",
    "end": "1104400"
  },
  {
    "text": "lets you do amazing effects that you could not possibly do with the fixed function pipeline And we're going to",
    "start": "1104400",
    "end": "1109520"
  },
  {
    "text": "show some um examples of that in a bit So now uh I have to step back and put on",
    "start": "1109520",
    "end": "1117440"
  },
  {
    "text": "my business hat for Neil and talk about a little what the Kronos Group actually does So the Kronos Group is the",
    "start": "1117440",
    "end": "1123600"
  },
  {
    "text": "organization that develops OpenGL and develops OpenGLes These are the the standard 3D graphics APIs that run",
    "start": "1123600",
    "end": "1130320"
  },
  {
    "text": "across multiple platforms like Linux and uh Mac and Windows and um they are",
    "start": "1130320",
    "end": "1137400"
  },
  {
    "text": "creating open and royaltyfree acceleration API standards Okay And their focus is on graphics it's on audio",
    "start": "1137400",
    "end": "1145520"
  },
  {
    "text": "it's on um any really any kind of dynamic media either input or output And we'll talk more about uh all of the",
    "start": "1145520",
    "end": "1152320"
  },
  {
    "text": "stuff that's going on in the Kronos group in a bit And the Kronos group tries to develop APIs that are very low",
    "start": "1152320",
    "end": "1158480"
  },
  {
    "text": "level Okay Just above the the silicon just above the lowest level graphics",
    "start": "1158480",
    "end": "1163520"
  },
  {
    "text": "driver because historically there there's never been",
    "start": "1163520",
    "end": "1168799"
  },
  {
    "text": "any agreement on higher level 3D graphics APIs although there's been some miraculous 3D graphics APIs developed",
    "start": "1168799",
    "end": "1175039"
  },
  {
    "text": "over the years SGI Silicon Graphics had a couple of wonderful uh libraries",
    "start": "1175039",
    "end": "1180400"
  },
  {
    "text": "called Open Inventor and Performer I used both of them back in the day and they were just a pleasure to write",
    "start": "1180400",
    "end": "1186559"
  },
  {
    "text": "program code for They were easy to use easy to get 3D graphics on the screen But unfortunately for some reason and I",
    "start": "1186559",
    "end": "1193840"
  },
  {
    "text": "think the reason is that they don't they don't admit enough use cases",
    "start": "1193840",
    "end": "1199120"
  },
  {
    "text": "Fundamentally they don't allow you to write maybe highest performing games on them because they're not targeted for the game model representation They",
    "start": "1199120",
    "end": "1206720"
  },
  {
    "text": "didn't succeed But OpenGL tries to be just a layer above the graphics hardware and",
    "start": "1206720",
    "end": "1212400"
  },
  {
    "text": "any other higher level APIs that you want to build it's responsible the application is responsible for doing it",
    "start": "1212400",
    "end": "1217919"
  },
  {
    "text": "and this has succeeded that paradigm that technique so Kronos tries to target",
    "start": "1217919",
    "end": "1224080"
  },
  {
    "text": "the lowest level API so that they will have the most um the highest applicability to",
    "start": "1224080",
    "end": "1230840"
  },
  {
    "text": "applications and Kronos by the way is also a um an industry cooperation",
    "start": "1230840",
    "end": "1236240"
  },
  {
    "text": "consortium okay any company can join it there is an IP framework to protect",
    "start": "1236240",
    "end": "1241280"
  },
  {
    "text": "members ers from uh to to allow safe development of in intellectual property",
    "start": "1241280",
    "end": "1246880"
  },
  {
    "text": "So you can have like a two-year time window for development of an actual graphics chip and collaborate with",
    "start": "1246880",
    "end": "1251919"
  },
  {
    "text": "others that are in the Kronos group and that that IP will stay safe within the Kronos group So there are a lot of",
    "start": "1251919",
    "end": "1257760"
  },
  {
    "text": "members um again any company is welcome to join uh there if you are an",
    "start": "1257760",
    "end": "1263679"
  },
  {
    "text": "open-source software developer and you have something uh strong to contribute I actually think that the Kronos group",
    "start": "1263679",
    "end": "1269120"
  },
  {
    "text": "would be uh open to possibly waving the the membership fees Um but lot of uh lot",
    "start": "1269120",
    "end": "1275679"
  },
  {
    "text": "of industry participation and by the way it's a very unique forum because for example in the development of WebGL the",
    "start": "1275679",
    "end": "1282799"
  },
  {
    "text": "browser vendors can talk directly to the graphics chip makers We can say okay Nvidia AMD here are some constraints",
    "start": "1282799",
    "end": "1288559"
  },
  {
    "text": "that we're under Can you please make your graphics chips work in such a way so that we can make the web API work",
    "start": "1288559",
    "end": "1294240"
  },
  {
    "text": "better and the these things happen these sort of uh synergistic relationships",
    "start": "1294240",
    "end": "1299440"
  },
  {
    "text": "actually happen within Kronos So some of the things that Kronos",
    "start": "1299440",
    "end": "1304960"
  },
  {
    "text": "is developing today um WebGL is down there We'll talk about that Uh WebGL is",
    "start": "1304960",
    "end": "1311600"
  },
  {
    "start": "1306000",
    "end": "1389000"
  },
  {
    "text": "built on OpenGL and OpenGLes The two uh Cbased 3D APIs for again multiple",
    "start": "1311600",
    "end": "1318039"
  },
  {
    "text": "platforms Um there is a standard for doing vector graphics open VG There is a",
    "start": "1318039",
    "end": "1324400"
  },
  {
    "text": "new standard for doing uh high performance low latency audio called open SL and open",
    "start": "1324400",
    "end": "1329640"
  },
  {
    "text": "SLES Um the uh the colada format is developed by Kronis as well This is an",
    "start": "1329640",
    "end": "1336080"
  },
  {
    "text": "industry standard interchange format for moving 3D models from one application to another Um and there's some interest",
    "start": "1336080",
    "end": "1343679"
  },
  {
    "text": "open CL how could I forget uh the ability to to use the graphics processor which is a real high performance",
    "start": "1343679",
    "end": "1350640"
  },
  {
    "text": "floatingpoint uh machine for general purpose computation So you can do matrix",
    "start": "1350640",
    "end": "1357039"
  },
  {
    "text": "uh math physical simulation very very quickly on your home PC Um and one of",
    "start": "1357039",
    "end": "1363840"
  },
  {
    "text": "the new foray that Kronis has made is called stream input which is a really really cool input API that tries to define semantics for different kinds of",
    "start": "1363840",
    "end": "1371360"
  },
  {
    "text": "inputs that you might receive into your application and lets the application negotiate what it wants to receive from",
    "start": "1371360",
    "end": "1377039"
  },
  {
    "text": "say the phone because the phone actually has a lot of sensors in it and you want those sensors to feed an input into your 3D game that you're running hopefully in",
    "start": "1377039",
    "end": "1384159"
  },
  {
    "text": "WebGL in the browser on the phone So Kronos develops all of these kinds of standards to meet real market needs and",
    "start": "1384159",
    "end": "1390960"
  },
  {
    "text": "help drive industry adoption across multiple platforms So",
    "start": "1390960",
    "end": "1396799"
  },
  {
    "text": "ultimately you're trying to drive user experience You're trying to make some amazing visual experience or visual and",
    "start": "1396799",
    "end": "1402400"
  },
  {
    "text": "audio and input experience that the user is going to remember And the the new uh",
    "start": "1402400",
    "end": "1408880"
  },
  {
    "text": "mobile silicon that has advanced GPUs built in is the the key thing the key uh",
    "start": "1408880",
    "end": "1415520"
  },
  {
    "text": "innovation over the past say 5 years that's really driving the ability to deploy these things everywhere not just",
    "start": "1415520",
    "end": "1420880"
  },
  {
    "text": "on a big workstation or big desktop PC but also uh things that you can take with you So",
    "start": "1420880",
    "end": "1428760"
  },
  {
    "start": "1426000",
    "end": "1501000"
  },
  {
    "text": "um I I'm pretty sure that this is the the Nvidia product line Okay uh and",
    "start": "1428760",
    "end": "1435919"
  },
  {
    "text": "expectations for acceleration as there as we go forward But you can see that it's actually getting like performance",
    "start": "1435919",
    "end": "1442480"
  },
  {
    "text": "is exponentially increasing on these mobile devices The performance of a mobile phone today is dramatically",
    "start": "1442480",
    "end": "1449760"
  },
  {
    "text": "uh higher than what it was just a few years ago So the the experiences that you develop on the desktop can now be",
    "start": "1449760",
    "end": "1455679"
  },
  {
    "text": "run on a mobile phone I mean if you just think about the way that the computing industry in general has gone over the past 20 years uh you had your Apple 2 a",
    "start": "1455679",
    "end": "1462799"
  },
  {
    "text": "long time ago and now you have a handheld cell phone that's like a thousand times more powerful than it It's amazing And these are the kinds of",
    "start": "1462799",
    "end": "1470799"
  },
  {
    "text": "um performance increases that we're seeing in mobile GPUs nowadays Th this is neat because it really uh lets you",
    "start": "1470799",
    "end": "1478720"
  },
  {
    "text": "write your 3D application once deploy it on the web and run it everywhere",
    "start": "1478720",
    "end": "1485158"
  },
  {
    "text": "So Nvidia in particular and the Kronos group in particular are interested in",
    "start": "1486440",
    "end": "1492120"
  },
  {
    "text": "um in getting this these experiences wrapped up in the web so that we can",
    "start": "1492120",
    "end": "1497919"
  },
  {
    "text": "collectively write our applications and deploy them everywhere Okay And the question is how can the web browser",
    "start": "1497919",
    "end": "1503919"
  },
  {
    "text": "actually pull in all of these features like rich audio rich graphics uh input",
    "start": "1503919",
    "end": "1509520"
  },
  {
    "text": "devices um cameras uh computer vision all into one experience How can the web",
    "start": "1509520",
    "end": "1515520"
  },
  {
    "text": "browser be the vehicle for deploying all of these kinds of uh portions of the",
    "start": "1515520",
    "end": "1522120"
  },
  {
    "start": "1522000",
    "end": "1627000"
  },
  {
    "text": "experience so let's talk about each of the uh the subcomponents in a little more detail",
    "start": "1522120",
    "end": "1529520"
  },
  {
    "text": "First of all OpenGLES which is what WebGL is built on is the OpenGL subset",
    "start": "1529520",
    "end": "1535600"
  },
  {
    "text": "that was designed for mobile and embedded devices OpenGLES even the 1.0 version but in particular the the 2.0",
    "start": "1535600",
    "end": "1542640"
  },
  {
    "text": "version erased all of the legacy APIs from the uh 3D development over the past",
    "start": "1542640",
    "end": "1548159"
  },
  {
    "text": "15 years And it got down to the real core of it like what do you really need in order to put triangles on the screen",
    "start": "1548159",
    "end": "1555200"
  },
  {
    "text": "and control their their pixel colors that you can get amazing visual effects",
    "start": "1555200",
    "end": "1561000"
  },
  {
    "text": "OpenGLES2 which is what WebGL is built on is that API and it actually is now",
    "start": "1561000",
    "end": "1567840"
  },
  {
    "text": "the dominant API for mobile devices pretty much any device that you see shipping with say you know the Android",
    "start": "1567840",
    "end": "1574080"
  },
  {
    "text": "operating system um uh the the rim playbook the uh Apple iPad and iPhone",
    "start": "1574080",
    "end": "1581520"
  },
  {
    "text": "are all built around the OpenGLes standard So this is the one API If you",
    "start": "1581520",
    "end": "1587120"
  },
  {
    "text": "need to learn one API this year I would recommend that you learn OpenGLES because it will let you write",
    "start": "1587120",
    "end": "1592880"
  },
  {
    "text": "3D applications for all of these devices And it doesn't matter the language that you're writing in really you'd have to",
    "start": "1592880",
    "end": "1598640"
  },
  {
    "text": "just understand the the API and its semantics And OpenGL by the way is the",
    "start": "1598640",
    "end": "1604559"
  },
  {
    "text": "basis for many high-end uh content and engines such as it softwarees Rage Unity",
    "start": "1604559",
    "end": "1610799"
  },
  {
    "text": "Unreal Engine uh for example So we uh we already discussed",
    "start": "1610799",
    "end": "1617200"
  },
  {
    "text": "this but basically the the OpenGES2 programmable pipeline",
    "start": "1617200",
    "end": "1623039"
  },
  {
    "text": "erased a ton of legacy from the 1.0 window pipeline and gave you the ability to write a piece of program code that",
    "start": "1623039",
    "end": "1630080"
  },
  {
    "start": "1627000",
    "end": "1655000"
  },
  {
    "text": "runs it's actually two pieces of program code One which runs on every point of your triangles and one which runs on",
    "start": "1630080",
    "end": "1637600"
  },
  {
    "text": "every pixel that those triangles cover on the screen And those two abilities",
    "start": "1637600",
    "end": "1642720"
  },
  {
    "text": "the ability to move your points around in 3D space and then control exactly how",
    "start": "1642720",
    "end": "1648159"
  },
  {
    "text": "they're colored are the two key elements of being able to develop um really",
    "start": "1648159",
    "end": "1653360"
  },
  {
    "text": "amazing looking 3D scenes So what's",
    "start": "1653360",
    "end": "1659320"
  },
  {
    "start": "1655000",
    "end": "1742000"
  },
  {
    "text": "WebGL webgl brings the OpenGL ES2 API to the web It brings threedimensional",
    "start": "1659320",
    "end": "1665840"
  },
  {
    "text": "graphics to the web without any browser plugin Does anybody remember VRML from",
    "start": "1665840",
    "end": "1671360"
  },
  {
    "text": "back in the day 1995 era few of us All right Um this is it's not maybe the you",
    "start": "1671360",
    "end": "1680000"
  },
  {
    "text": "know a brand new concept It was tried 15 years ago but VRML really didn't take",
    "start": "1680000",
    "end": "1685039"
  },
  {
    "text": "off And you know there's plenty of uh guesses about why that might have been the case But in my uh opinion WebGL is",
    "start": "1685039",
    "end": "1693440"
  },
  {
    "text": "actually quite different It's a different situation Um it brings a lower level API to the web one which everybody",
    "start": "1693440",
    "end": "1701360"
  },
  {
    "text": "can build on top of and make um more powerful libraries more powerful",
    "start": "1701360",
    "end": "1706559"
  },
  {
    "text": "experiences And um and and fundamentally the JavaScript",
    "start": "1706559",
    "end": "1712159"
  },
  {
    "text": "engines of the web browser have gotten a lot lot lot faster since 1995 And that lets you write much more",
    "start": "1712159",
    "end": "1720320"
  },
  {
    "text": "application code and customize its behavior in ways",
    "start": "1720320",
    "end": "1725360"
  },
  {
    "text": "that you couldn't do with VRML because VRML was a bunch of of fairly big building blocks But with WebGL the",
    "start": "1725360",
    "end": "1732000"
  },
  {
    "text": "building blocks are much smaller and you can put them together you know you can put many more of them together in your",
    "start": "1732000",
    "end": "1738159"
  },
  {
    "text": "application So basically your application can be much much more customized than it could have been 15",
    "start": "1738159",
    "end": "1744000"
  },
  {
    "start": "1742000",
    "end": "1801000"
  },
  {
    "text": "you know 20 years ago with the the VRML solution That's why I think that this is going to work and why it already is",
    "start": "1744000",
    "end": "1750320"
  },
  {
    "text": "working Um and it is bringing accelerated 3D graphics to the web There's no question about that There are",
    "start": "1750320",
    "end": "1756000"
  },
  {
    "text": "lots and lots of demos and I'm going to show you some of them today and show you where to find more Um so WebGL hooks",
    "start": "1756000",
    "end": "1762240"
  },
  {
    "text": "into the HTML 5 canvas element and interoperates pretty cleanly with all the other DOM content that you have on",
    "start": "1762240",
    "end": "1768960"
  },
  {
    "text": "your page So in addition to being able to overlay and underlay text and build your UIs in HTML you can also bring in",
    "start": "1768960",
    "end": "1775520"
  },
  {
    "text": "images from your web page and use them as textures in your 3D scene So it builds on top of the infrastructure",
    "start": "1775520",
    "end": "1781840"
  },
  {
    "text": "that's in the web browser Um and so the the convergence of things",
    "start": "1781840",
    "end": "1787120"
  },
  {
    "text": "like faster JavaScript engines wide availability of OpenGES2 and multiple",
    "start": "1787120",
    "end": "1792159"
  },
  {
    "text": "browsers running on multiple platforms really makes this the time that I think this is going to succeed as a concept 3D",
    "start": "1792159",
    "end": "1799360"
  },
  {
    "text": "on the web Just go to a web page and you you have this amazing interactive experience So there there's an ecosystem",
    "start": "1799360",
    "end": "1807440"
  },
  {
    "start": "1801000",
    "end": "1968000"
  },
  {
    "text": "around WebGL Um and it's it's really interesting This is a cool uh diagram of",
    "start": "1807440",
    "end": "1812960"
  },
  {
    "text": "what's actually going on in the working groups So on the desktop side the OpenGL",
    "start": "1812960",
    "end": "1818720"
  },
  {
    "text": "architecture viewboard evolves the capabilities of the graphics processors",
    "start": "1818720",
    "end": "1824080"
  },
  {
    "text": "that you see in workstations and in PCs Okay So the leading edge functionality typically does come out on desktops Then",
    "start": "1824080",
    "end": "1832279"
  },
  {
    "text": "that these ideas come down into the OpenGES working group Okay from OpenGL",
    "start": "1832279",
    "end": "1838399"
  },
  {
    "text": "and they're you know distilled down and maybe simplified maybe some features are removed so that the API can remain",
    "start": "1838399",
    "end": "1844640"
  },
  {
    "text": "simple and the silicon can be simpler on mobile phones but that's uh what shows",
    "start": "1844640",
    "end": "1850640"
  },
  {
    "text": "up on your smartphones and that that direction of um of flow of ideas is what",
    "start": "1850640",
    "end": "1857279"
  },
  {
    "text": "happened and what allowed OpenGES2 to develop shaderbased graphics for your",
    "start": "1857279",
    "end": "1862480"
  },
  {
    "text": "phone and WebGL is building on OpenGES s so that as the phones evolve in",
    "start": "1862480",
    "end": "1870600"
  },
  {
    "text": "capability so will WebGL and also so that WebGL will run on all of these",
    "start": "1870600",
    "end": "1877120"
  },
  {
    "text": "devices So WebGL exposes the semantics of what's on your mobile phone even on",
    "start": "1877120",
    "end": "1884080"
  },
  {
    "text": "the desktop So it doesn't expose everything that you can do with your desktop graphics card But the wonderful",
    "start": "1884080",
    "end": "1890399"
  },
  {
    "text": "advantage is that if you write to WebGL your content will run on the mobile phone You don't have to write three",
    "start": "1890399",
    "end": "1897120"
  },
  {
    "text": "applications for desktop for iPhone for Android You write it once on the web",
    "start": "1897120",
    "end": "1902480"
  },
  {
    "text": "It's simple to deploy runs everywhere reach millions hundreds of millions of users That's the",
    "start": "1902480",
    "end": "1908679"
  },
  {
    "text": "promise And let me point out by the way that that",
    "start": "1908679",
    "end": "1914200"
  },
  {
    "text": "OpenGES has fed ideas back to OpenGL okay to define a core profile of the API",
    "start": "1914200",
    "end": "1921440"
  },
  {
    "text": "that removes legacy features that there's a very there's one very simple way of doing every operation that the 3D",
    "start": "1921440",
    "end": "1927679"
  },
  {
    "text": "card can do and WebGL is feeding back into OpenGL",
    "start": "1927679",
    "end": "1932960"
  },
  {
    "text": "um by way of informing the creation of necessary security properties so that",
    "start": "1932960",
    "end": "1939919"
  },
  {
    "text": "you can safely go to any web page and run 3D content and know that it's not going to mess up your machine in any way",
    "start": "1939919",
    "end": "1946559"
  },
  {
    "text": "So there's a real nice feedback loop between all of these APIs and it's really going on This this is actually",
    "start": "1946559",
    "end": "1953600"
  },
  {
    "text": "happening We have almost daily conversations between these working groups and things are evolving and I",
    "start": "1953600",
    "end": "1959679"
  },
  {
    "text": "I'll show you uh how to find the WebGL working group list but I would definitely encourage you to follow these",
    "start": "1959679",
    "end": "1965279"
  },
  {
    "text": "discussions if you're interested in how these APIs are progressing",
    "start": "1965279",
    "end": "1972320"
  },
  {
    "start": "1968000",
    "end": "2117000"
  },
  {
    "text": "So what does WebGL look like inside okay",
    "start": "1972679",
    "end": "1978360"
  },
  {
    "text": "Um it it's a a fairly large stack of software You have this web browser right what's a web browser it's a you know",
    "start": "1978360",
    "end": "1984320"
  },
  {
    "text": "large large amount of code to do layout and rendering and uh interaction all these things And WebGL hooks into this",
    "start": "1984320",
    "end": "1992039"
  },
  {
    "text": "So at the bottom level when we work our way up um you have the OpenGL",
    "start": "1992039",
    "end": "1997279"
  },
  {
    "text": "implementation on the desktop PC or on your mobile phone You the OpenG implementation on your mobile phone Okay",
    "start": "1997279",
    "end": "2003200"
  },
  {
    "text": "that's what the GPU vendors provide This is what um Nvidia provides what AMD",
    "start": "2003200",
    "end": "2009440"
  },
  {
    "text": "provides what Intel provides what you know all of the mobile vendors like Imagination Technologies and Power VR",
    "start": "2009440",
    "end": "2015039"
  },
  {
    "text": "this is what they provide Um I should point out that on",
    "start": "2015039",
    "end": "2020360"
  },
  {
    "text": "Windows Chrome at least and also Firefox are using a translation library currently to work around the fact that",
    "start": "2020360",
    "end": "2027360"
  },
  {
    "text": "some of the um desktop PC OEMs don't actually ship a a viable",
    "start": "2027360",
    "end": "2032679"
  },
  {
    "text": "OpenGL So WebGL can even run on top of Direct 3D today using the angle",
    "start": "2032679",
    "end": "2038000"
  },
  {
    "text": "translation library So anyway once you have the graphics library at the very",
    "start": "2038000",
    "end": "2043159"
  },
  {
    "text": "bottom then uh the the web browser actually provides WebGL to you There's a",
    "start": "2043159",
    "end": "2049358"
  },
  {
    "text": "lot of C++ code involved to get WebGL rendering into an HTML canvas element and make making it go fast Okay no",
    "start": "2049359",
    "end": "2056560"
  },
  {
    "text": "plugins required This runs today in Firefox in Chrome It runs in Safari with",
    "start": "2056560",
    "end": "2062240"
  },
  {
    "text": "a little check box that you have to turn on and it runs in Opera Next Opera 12 that's coming out soon Okay so on de on",
    "start": "2062240",
    "end": "2068158"
  },
  {
    "text": "the desktop you got wide vendor support for this functionality Once you got the web",
    "start": "2068159",
    "end": "2074240"
  },
  {
    "text": "browser running your application comes down in the form of an HTML 5 web page",
    "start": "2074240",
    "end": "2079919"
  },
  {
    "text": "with JavaScript The JavaScript drives the WebGL API and makes your 3D models render and go Um and there's there's",
    "start": "2079919",
    "end": "2087679"
  },
  {
    "text": "plenty of middleware by the way Plenty of 3D libraries that let uh non-expert",
    "start": "2087679",
    "end": "2094158"
  },
  {
    "text": "3D programmers get compelling really nice looking content that runs really fast on the screen with very little",
    "start": "2094159",
    "end": "2100800"
  },
  {
    "text": "effort 10 lines of code and you can have you know spinning textured box that you can actually interact with uh using your",
    "start": "2100800",
    "end": "2106880"
  },
  {
    "text": "mouse pointer using 3.js And I'll uh I'm I'm happy to provide pointers to these things You can find them very easily Um",
    "start": "2106880",
    "end": "2113119"
  },
  {
    "text": "there are some links in the in the slide presentation and certainly on the WebGL wiki which uh is is a good",
    "start": "2113119",
    "end": "2119000"
  },
  {
    "start": "2117000",
    "end": "2246000"
  },
  {
    "text": "resource So the um the way that the web page",
    "start": "2119000",
    "end": "2126240"
  },
  {
    "text": "renders is a little bit different than the way that typical OpenGL applications used to render Typically you would just",
    "start": "2126240",
    "end": "2132320"
  },
  {
    "text": "have a big window You would do your drawing there There were two buffers the back buffer and the front buffer And in",
    "start": "2132320",
    "end": "2138560"
  },
  {
    "text": "order to avoid seeing glitches as the triangles were drawn onto the screen the",
    "start": "2138560",
    "end": "2143599"
  },
  {
    "text": "the OpenGL application would render into the back buffer And then when it knew that it was done rendering this frame it",
    "start": "2143599",
    "end": "2148720"
  },
  {
    "text": "would say swap buffers And then the back buffer would become the front buffer The front buffer would become the back",
    "start": "2148720",
    "end": "2153760"
  },
  {
    "text": "buffer And at the next time the uh the electron gun inside the CRT went to the",
    "start": "2153760",
    "end": "2159200"
  },
  {
    "text": "top that's when it would start to render the other buffer Um now the web browser",
    "start": "2159200",
    "end": "2164960"
  },
  {
    "text": "works completely differently I mean it's got its own composition architecture So basically the um the the web page engine",
    "start": "2164960",
    "end": "2173359"
  },
  {
    "text": "takes the HTML content that's on the page and makes a kind of a bit map of it Okay it renders it into uh some picture",
    "start": "2173359",
    "end": "2181839"
  },
  {
    "text": "You may have video elements You may have uh the canvas tag containing either 2D",
    "start": "2181839",
    "end": "2187599"
  },
  {
    "text": "or 3D content via WebGL And all of these images are actually represented as",
    "start": "2187599",
    "end": "2194720"
  },
  {
    "text": "textures on the graphics processing unit and they're drawn back to front so that you can get nice blending between them",
    "start": "2194720",
    "end": "2201280"
  },
  {
    "text": "And you can actually have multiple layers which is is cool So you can have a background you know uh gradient and",
    "start": "2201280",
    "end": "2207839"
  },
  {
    "text": "then your WebGL content and then some text on top of it and all of this stuff is just all the rendering of this the",
    "start": "2207839",
    "end": "2213720"
  },
  {
    "text": "composition is handled automatically by the web browser You don't have to worry about it All you got to worry about is",
    "start": "2213720",
    "end": "2219119"
  },
  {
    "text": "making your nice 3D scene and writing HTML that gets all the effects that you",
    "start": "2219119",
    "end": "2224560"
  },
  {
    "text": "want It's it's really cool because back in the day if you wanted to do text in OpenGL it was a real difficult",
    "start": "2224560",
    "end": "2231359"
  },
  {
    "text": "proposition There were libraries but by design text is not part of the OpenGL",
    "start": "2231359",
    "end": "2236560"
  },
  {
    "text": "API but it is part of the web browser So it's really easy to put text and other interactive elements on top of your 3D",
    "start": "2236560",
    "end": "2243119"
  },
  {
    "text": "scene and build your entire UI in HTML and it interacts seamlessly That's that's",
    "start": "2243119",
    "end": "2248920"
  },
  {
    "text": "cool So um how does your WebGL content interact",
    "start": "2248920",
    "end": "2254800"
  },
  {
    "text": "with the rest of the web page okay as I mentioned that the 3D content",
    "start": "2254800",
    "end": "2260000"
  },
  {
    "text": "can actually be uh you can overlay and underlay the web page with your 3D Um I",
    "start": "2260000",
    "end": "2266960"
  },
  {
    "text": "would like to show you a demo So let's hope that I can get back to",
    "start": "2266960",
    "end": "2272320"
  },
  {
    "text": "exactly that web page Um okay Let's go to the WebGL wiki Let's",
    "start": "2272320",
    "end": "2279680"
  },
  {
    "text": "go to the demos Let's go to this simple thing Okay",
    "start": "2279680",
    "end": "2286560"
  },
  {
    "text": "here's a shiny teapot Um and it's sitting on top of a web page So we can actually select the",
    "start": "2286560",
    "end": "2294160"
  },
  {
    "text": "text of the HTML and just by using um absolute positioned HTML elements you",
    "start": "2294160",
    "end": "2300640"
  },
  {
    "text": "can get this visual effect trivially you know hey look it's 3D sitting on top of my web page easy right it's like two",
    "start": "2300640",
    "end": "2308000"
  },
  {
    "text": "lines of code to make this work actually since I'm no CSS expert was trying to",
    "start": "2308000",
    "end": "2313200"
  },
  {
    "text": "figure out how to get the the teapot to sit in the center of the text and tried all these I don't know auto CS autofill",
    "start": "2313200",
    "end": "2320320"
  },
  {
    "text": "CSS rules and wasn't able to get it finally just used the center tag which any of you who do a lot of HTML will",
    "start": "2320320",
    "end": "2327280"
  },
  {
    "text": "probably laugh at and it worked uh from HTML you know 1.0 from 1994 Um but",
    "start": "2327280",
    "end": "2334240"
  },
  {
    "text": "because the web has amazing backward compatibility that still worked and uh and and yet you know you didn't think",
    "start": "2334240",
    "end": "2340240"
  },
  {
    "text": "that you'd see that effect on a web page when they invented the center tag right so the center tag carries forward and actually allows you to position your",
    "start": "2340240",
    "end": "2346079"
  },
  {
    "text": "your 3D content in the way that you want uh depending on the effect that you want",
    "start": "2346079",
    "end": "2351119"
  },
  {
    "text": "Um but but the point is that it's really really easy to get the 3D stuff to interoperate with the HTML That's that's",
    "start": "2351119",
    "end": "2357680"
  },
  {
    "text": "the high level point here Okay So let's try",
    "start": "2357680",
    "end": "2364520"
  },
  {
    "text": "this So you can do your entire user interface in HTML In fact you can",
    "start": "2364520",
    "end": "2369680"
  },
  {
    "text": "develop the user interface separately from your 3D app And you can have so you can have one group of designers doing",
    "start": "2369680",
    "end": "2374720"
  },
  {
    "text": "the UI and one group doing the 3D And then you can just plug them together You don't have to have them all working on",
    "start": "2374720",
    "end": "2380000"
  },
  {
    "text": "the same codebase It's really things interoperate really really nicely Um as",
    "start": "2380000",
    "end": "2386160"
  },
  {
    "text": "I mentioned before you can pull in other media content into WebGL You can pull in",
    "start": "2386160",
    "end": "2391280"
  },
  {
    "text": "video tags You can pull in image tags You can pull in other canvases You can pull in other WebGL rendered canvases",
    "start": "2391280",
    "end": "2396800"
  },
  {
    "text": "and use them as textures in your 3D scene so that you can wrap them around",
    "start": "2396800",
    "end": "2401920"
  },
  {
    "text": "other objects or shade them or do uh embossing or other filters on the graphics processing unit so that it runs",
    "start": "2401920",
    "end": "2408400"
  },
  {
    "text": "really fast Um you can use 3D graphics for your web user interface I mean you",
    "start": "2408400",
    "end": "2414480"
  },
  {
    "text": "could actually uh use a big canvas and render WebGL into it and get your mouse",
    "start": "2414480",
    "end": "2419680"
  },
  {
    "text": "click events and figure out what objects you're hovering over But then you can you know have the the objects fly by as",
    "start": "2419680",
    "end": "2425599"
  },
  {
    "text": "you go into a menu system that's actually deep as opposed to you know spread out all over the screen So you",
    "start": "2425599",
    "end": "2431280"
  },
  {
    "text": "can make really unique uh and very different kinds of user interfaces than or you typically see on the web today",
    "start": "2431280",
    "end": "2436960"
  },
  {
    "text": "using WebGL and using the fact that you can interoperate with the the web page around you Okay Um there's an experiment",
    "start": "2436960",
    "end": "2445200"
  },
  {
    "text": "that both Google and Misilla are working on I'll show you a demo um that lets you",
    "start": "2445200",
    "end": "2450640"
  },
  {
    "text": "take a portion actually it's it's really the entire web page and get that",
    "start": "2450640",
    "end": "2456160"
  },
  {
    "text": "rendered content into WebGL so that you can then take your web pages and and",
    "start": "2456160",
    "end": "2461200"
  },
  {
    "text": "wrap them around you know a cylinder or a sphere do crazy kinds of you know rippling effects or cloth simulations",
    "start": "2461200",
    "end": "2467280"
  },
  {
    "text": "and um and so the these have security ramifications unfortunately but",
    "start": "2467280",
    "end": "2474359"
  },
  {
    "text": "um they so so they can't be accessible from ordinary web pages but if you you",
    "start": "2474359",
    "end": "2480160"
  },
  {
    "text": "know trust the website that you're going to it should be really really seamless to write an application that does this",
    "start": "2480160",
    "end": "2486400"
  },
  {
    "text": "sort of visual effect So we're seeing some really nice uh back and forth interaction between 3D and the",
    "start": "2486400",
    "end": "2492800"
  },
  {
    "text": "surrounding web environment So let's talk about where it stands now and I'll use this um this",
    "start": "2492800",
    "end": "2501280"
  },
  {
    "start": "2496000",
    "end": "2609000"
  },
  {
    "text": "opportunity to give an update on the current WebGL spec",
    "start": "2501280",
    "end": "2506560"
  },
  {
    "text": "So um last year last March uh the the first version of the WebGL spec was introduced call it 1.0 O and uh and this",
    "start": "2506560",
    "end": "2515520"
  },
  {
    "text": "was developed by four major browser vendors uh Mozilla Apple Opera and",
    "start": "2515520",
    "end": "2520640"
  },
  {
    "text": "Google working very very closely with Nvidia AMD Intel and and other GPU vendors in order to produce this",
    "start": "2520640",
    "end": "2527359"
  },
  {
    "text": "specification that we believed was portable that could run on mobile phones It could run on Windows and it could run",
    "start": "2527359",
    "end": "2533119"
  },
  {
    "text": "on Mac and Linux and it could run identically Okay And it it actually was not trivial to do this And if you want",
    "start": "2533119",
    "end": "2539119"
  },
  {
    "text": "some more technical details we can talk about the semantic differences between OpenGLES and desktop OpenGL and some of",
    "start": "2539119",
    "end": "2545359"
  },
  {
    "text": "the emulation that has to go on there But anyway the first version of the spec was released last year That was a great",
    "start": "2545359",
    "end": "2551280"
  },
  {
    "text": "step forward Now um at the same time or a couple months",
    "start": "2551280",
    "end": "2557680"
  },
  {
    "text": "later the uh the type array spec came out Has anybody programmed with these on the web today typed arrays Yeah one",
    "start": "2557680",
    "end": "2564880"
  },
  {
    "text": "person Um okay So when we first developed WebGL the",
    "start": "2564880",
    "end": "2571200"
  },
  {
    "text": "number one problem was how do you get your vertex data onto the graphics card wasn't possible to do with JavaScript",
    "start": "2571200",
    "end": "2577200"
  },
  {
    "text": "because JavaScript arrays can hold any kind of object They can hold numbers",
    "start": "2577200",
    "end": "2582480"
  },
  {
    "text": "They can hold strings They can hold objects They can hold undefined They can hold null Anything you want goes right",
    "start": "2582480",
    "end": "2589040"
  },
  {
    "text": "into a JavaScript array They're great but they're not efficient So for OpenGL",
    "start": "2589040",
    "end": "2594720"
  },
  {
    "text": "you have to know exactly how your vertices are laid out There's no question about it You have to know that",
    "start": "2594720",
    "end": "2600960"
  },
  {
    "text": "this is a floatingoint value and the next thing to it is a floatingoint value and then you know it's followed by four bytes which are your color All all sorts",
    "start": "2600960",
    "end": "2609040"
  },
  {
    "start": "2609000",
    "end": "2666000"
  },
  {
    "text": "of very low-level details are required in order to um to develop an OpenGL app",
    "start": "2609040",
    "end": "2615560"
  },
  {
    "text": "So the WebGL spec or the WebGL working group actually designed the type array spec and that allows you to talk about",
    "start": "2615560",
    "end": "2622560"
  },
  {
    "text": "how you are laying out numeric data and giving it to say the graphics processing",
    "start": "2622560",
    "end": "2627839"
  },
  {
    "text": "unit and then it was split off from the webgl spec because it seems to be more generally useful than just webgl and now",
    "start": "2627839",
    "end": "2634480"
  },
  {
    "text": "it seems that it's the standard for using binary data on the web which is pretty awesome So that was a nice uh uh",
    "start": "2634480",
    "end": "2642160"
  },
  {
    "text": "I don't know contribution save from the WebGL ecosystem to the to the web Um so",
    "start": "2642160",
    "end": "2648800"
  },
  {
    "text": "the type to race spec came out around the same time last year and there's some really cool stuff going on there too",
    "start": "2648800",
    "end": "2655000"
  },
  {
    "text": "Um the uh one of the new things that is that has just come out is the ability to",
    "start": "2655000",
    "end": "2661280"
  },
  {
    "text": "give uh to transfer data between threads Anybody use web",
    "start": "2661280",
    "end": "2666440"
  },
  {
    "start": "2666000",
    "end": "2717000"
  },
  {
    "text": "workers anybody writing a web worker anybody so a web worker is a JavaScript",
    "start": "2666440",
    "end": "2672880"
  },
  {
    "text": "script where you can basically start up another thread in your web browser running a different piece of JavaScript",
    "start": "2672880",
    "end": "2679599"
  },
  {
    "text": "And you can use this post message API to send data back and forth between your worker and your main thread So it's cool",
    "start": "2679599",
    "end": "2685440"
  },
  {
    "text": "And they're actually implemented with operating system threads So you can give some work to the worker to do and it can",
    "start": "2685440",
    "end": "2690960"
  },
  {
    "text": "chew on it for a while without blocking your user interface and then give the result back The problem with workers is",
    "start": "2690960",
    "end": "2696960"
  },
  {
    "text": "that because of their semantics they cannot share data with the main thread",
    "start": "2696960",
    "end": "2702000"
  },
  {
    "text": "Okay so you can't get you couldn't get um efficient computation of lots of data",
    "start": "2702000",
    "end": "2707760"
  },
  {
    "text": "and then give it to the main thread for rendering for example But the type array spec had the opportunity to contribute",
    "start": "2707760",
    "end": "2714800"
  },
  {
    "text": "there and solve this problem And it we I think we did um we worked with uh",
    "start": "2714800",
    "end": "2721599"
  },
  {
    "start": "2717000",
    "end": "3124000"
  },
  {
    "text": "basically all the browser vendors including Microsoft by the way and slightly extended the semantics of the",
    "start": "2721599",
    "end": "2729119"
  },
  {
    "text": "post message API for web workers to allow you to give a block of data to",
    "start": "2729119",
    "end": "2734720"
  },
  {
    "text": "another worker Okay So you've got your typed array and you're holding on to this massive block of data like you know",
    "start": "2734720",
    "end": "2740960"
  },
  {
    "text": "tens and tens or hundreds of megabytes and you say transfer and the thing goes into like",
    "start": "2740960",
    "end": "2746880"
  },
  {
    "text": "one of those uh you know sliding drawers that you see at the bank you know you slide the thing in and then the the",
    "start": "2746880",
    "end": "2752240"
  },
  {
    "text": "worker has access to the data and you don't have access to it anymore Okay And then when the worker is done producing",
    "start": "2752240",
    "end": "2757839"
  },
  {
    "text": "its results it transfers it back to you and those transfer operations are zero copy and basically zero cost That's cool",
    "start": "2757839",
    "end": "2765280"
  },
  {
    "text": "All right So now you can actually do multipprocessing in JavaScript And we we've got some preliminary demos showing",
    "start": "2765280",
    "end": "2770640"
  },
  {
    "text": "the speed ups that you can get by actually taking advantage of the multiple cores on your machine Um and",
    "start": "2770640",
    "end": "2776960"
  },
  {
    "text": "there's a lot of use cases for WebGL like mesh downloading and decompression",
    "start": "2776960",
    "end": "2782160"
  },
  {
    "text": "image downloading decompression and transcoding There's just some really cool new results um in this area uh you",
    "start": "2782160",
    "end": "2788800"
  },
  {
    "text": "can do physics lots and lots of amazing um uh use cases scenarios that you can",
    "start": "2788800",
    "end": "2796160"
  },
  {
    "text": "reach with this functionality that's in the type array spec So what have we been",
    "start": "2796160",
    "end": "2801440"
  },
  {
    "text": "doing over the past year the type the transferable support was actually part of that work but um there's a new",
    "start": "2801440",
    "end": "2807680"
  },
  {
    "text": "version of WebGL coming out We're calling it 1.0.1 and it fixes a lot of corner cases in the original spec and it",
    "start": "2807680",
    "end": "2814000"
  },
  {
    "text": "makes the spec much more portable the behavior is much more tightly defined and you're basically guaranteed that the",
    "start": "2814000",
    "end": "2820240"
  },
  {
    "text": "WebGL implementation under your application is going to work the same across all these devices So that's",
    "start": "2820240",
    "end": "2825599"
  },
  {
    "text": "what's new This is about to come out We are focusing heavily on security If",
    "start": "2825599",
    "end": "2831839"
  },
  {
    "text": "anybody has questions about that happy to field them Um fixing bugs and corner",
    "start": "2831839",
    "end": "2837119"
  },
  {
    "text": "cases in the original conformance suite and we're taking WebGL out from under the experimental flag So you're just",
    "start": "2837119",
    "end": "2843280"
  },
  {
    "text": "going to say get context to WebGL once multiple browsers are passing the conformance tests on multiple",
    "start": "2843280",
    "end": "2850040"
  },
  {
    "text": "platforms I must say that today we are waiting for OpenGL driver bug fixes in",
    "start": "2850040",
    "end": "2857680"
  },
  {
    "text": "order to pass the conformance suite on at least two platforms Getting closer though Okay But these are bugs that that",
    "start": "2857680",
    "end": "2863839"
  },
  {
    "text": "have to be fixed that really can't be worked around in the WebGL implementation itself And honestly some",
    "start": "2863839",
    "end": "2868880"
  },
  {
    "text": "of them are pretty longstanding So anyway once those bugs are fixed we anticipate that going forward you are",
    "start": "2868880",
    "end": "2875520"
  },
  {
    "text": "going to see very very predictable behavior of not only WebGL but also",
    "start": "2875520",
    "end": "2881480"
  },
  {
    "text": "OpenGL across a wide range of platforms where previously there were a lot of corner cases that weren't actually",
    "start": "2881480",
    "end": "2887680"
  },
  {
    "text": "covered and where applications had to do workarounds and so WebGL is feeding back into this um this ecosystem",
    "start": "2887680",
    "end": "2896160"
  },
  {
    "text": "Uh if you take a look here this um this uh table is a bit old but if you go to",
    "start": "2896160",
    "end": "2903400"
  },
  {
    "text": "caniuse.com which shows all the HTML 5 features and shows their their deployment WebGL is getting out there Um",
    "start": "2903400",
    "end": "2910960"
  },
  {
    "text": "so it's uh it it's fairly wise widespread support at",
    "start": "2910960",
    "end": "2916960"
  },
  {
    "text": "least if you look at the numbers of web browsers that are supporting it If you look at market",
    "start": "2916960",
    "end": "2922920"
  },
  {
    "text": "share there's a conspicuous absence of one particular browser that doesn't claim to support WebGL today And I don't",
    "start": "2922920",
    "end": "2929599"
  },
  {
    "text": "have anything more to say about that Um all right let's do another",
    "start": "2929599",
    "end": "2935000"
  },
  {
    "text": "demo So if you go to the um let me think here What's the best way",
    "start": "2935000",
    "end": "2941280"
  },
  {
    "text": "to find this if you go to the WebGL wiki and if you didn't see how I found that",
    "start": "2941280",
    "end": "2946480"
  },
  {
    "text": "you just go to WebGL wiki or If you go to say your some search engine",
    "start": "2946480",
    "end": "2953920"
  },
  {
    "text": "doesn't matter which one WebGL wiki okay the top hit is the WebGL public wiki on",
    "start": "2953920",
    "end": "2959520"
  },
  {
    "text": "the Kronos site And here you can go to there's a lot of links Uh there are a few simple demos that we developed uh",
    "start": "2959520",
    "end": "2966400"
  },
  {
    "text": "very early in the working group but those aren't the interesting ones If you go here to the um to the user",
    "start": "2966400",
    "end": "2972480"
  },
  {
    "text": "contributions there's a ton of libraries a ton of uh demos a ton of just examples",
    "start": "2972480",
    "end": "2979680"
  },
  {
    "text": "that show just incredible incredible effects So if we look for",
    "start": "2979680",
    "end": "2986799"
  },
  {
    "text": "um WebGL samples samples Yes Okay here we go",
    "start": "2987319",
    "end": "2994880"
  },
  {
    "text": "Uh this project uh was actually mainly done by Mo and my colleague Greg Tvaris",
    "start": "2994880",
    "end": "3001200"
  },
  {
    "text": "at Google And he's got a bunch of really cool demos Not all of them are 3D by the way And some of them show how to do like",
    "start": "3001200",
    "end": "3006480"
  },
  {
    "text": "really fast 2D graphics using WebGL Uh the first one that he did was a response to Microsoft's IE Fish Tank demo And you",
    "start": "3006480",
    "end": "3014319"
  },
  {
    "text": "may remember that the IE Fish Tank was uh 2D fish you know wiggling around a little bit flying around on the web page",
    "start": "3014319",
    "end": "3021040"
  },
  {
    "text": "Uh this one is actually a 3D fish tank in a 3D space with light rays uh fish",
    "start": "3021040",
    "end": "3028160"
  },
  {
    "text": "and sharks with laser beams that shoot out of their heads You can see So um",
    "start": "3028160",
    "end": "3033359"
  },
  {
    "text": "this is much more compelling Uh and um this I think that this was developed in",
    "start": "3033359",
    "end": "3039280"
  },
  {
    "text": "in collaboration with human engines I think they did the art assets and some of the rendering techniques for this",
    "start": "3039280",
    "end": "3045240"
  },
  {
    "text": "So it's a it's a pretty canonical demo that we use for for performance actually",
    "start": "3045240",
    "end": "3050640"
  },
  {
    "text": "performance measurement because even though the scene is fairly complex and you can see if we go to like a thousand",
    "start": "3050640",
    "end": "3056960"
  },
  {
    "text": "fish you know it's quite a lot of fish it still runs at 60 frames a second and it should the graphics card is barely",
    "start": "3056960",
    "end": "3062640"
  },
  {
    "text": "breathing hard doing this kind of content which is really amazing So um WebGL is trying to expose this power of",
    "start": "3062640",
    "end": "3070079"
  },
  {
    "text": "this graphics card to your application so you can develop cool content like this And um we're you know iterating on",
    "start": "3070079",
    "end": "3076880"
  },
  {
    "text": "this and doing more and more advanced demos um going forward So anyway all the",
    "start": "3076880",
    "end": "3082480"
  },
  {
    "text": "source code for this is out there so you can see the tricks that Greg did in order to achieve really good performance of these um these kinds of scenes Um",
    "start": "3082480",
    "end": "3091200"
  },
  {
    "text": "we'll show some more in a bit Uh let me go back here",
    "start": "3091200",
    "end": "3096640"
  },
  {
    "text": "Okay Uh we already went there You uh user contributions on the WebGL wiki Uh",
    "start": "3097200",
    "end": "3103280"
  },
  {
    "text": "tons of stuff 3.js is arguably the most uh popular WebGL library right now And",
    "start": "3103280",
    "end": "3109599"
  },
  {
    "text": "it's got it's really easy to use I mean that that was uh Mr Doo the original creator's point Got to be easy to use 10",
    "start": "3109599",
    "end": "3118079"
  },
  {
    "text": "lines of code got a got a 3D scene on the screen That's the point Um and it it",
    "start": "3118079",
    "end": "3124160"
  },
  {
    "start": "3124000",
    "end": "3451000"
  },
  {
    "text": "definitely achieves that goal So um who wants to hear about WebGL",
    "start": "3124160",
    "end": "3131880"
  },
  {
    "text": "security okay let's do",
    "start": "3131880",
    "end": "3135680"
  },
  {
    "text": "it I got more to talk about than is on this slide So there was a flurry of",
    "start": "3137240",
    "end": "3144000"
  },
  {
    "text": "articles and activity around WebJL security last summer Um there was a little bit of truth and a lot of uh fear",
    "start": "3144000",
    "end": "3150640"
  },
  {
    "text": "uncertainty and doubt So let me clear the air here Um the WebGL API is 100% secure It",
    "start": "3150640",
    "end": "3160000"
  },
  {
    "text": "is impossible to access memory that doesn't belong to you Okay out of bounds",
    "start": "3160000",
    "end": "3165599"
  },
  {
    "text": "This means out of bounds reads or writes either on the CPU or on the graphics processing unit And it's also impossible",
    "start": "3165599",
    "end": "3173119"
  },
  {
    "text": "to access uninitialized memory according to this API specification And many of",
    "start": "3173119",
    "end": "3178160"
  },
  {
    "text": "these assertions are tested thoroughly by the WebGL conformance suite where the behavior is actually defined in such a",
    "start": "3178160",
    "end": "3183760"
  },
  {
    "text": "way that you can test the results and make sure that the assertion is true So these are",
    "start": "3183760",
    "end": "3191440"
  },
  {
    "text": "um properties of the specification Okay The spec says that if you index into an",
    "start": "3191440",
    "end": "3197040"
  },
  {
    "text": "array in your vertex or your fragment shader that you cannot go outside the bounds of that uh array that you're",
    "start": "3197040",
    "end": "3203040"
  },
  {
    "text": "indexing Now OpenGLES doesn't provide that guarantee but the webgl implementation does This is the level of",
    "start": "3203040",
    "end": "3210319"
  },
  {
    "text": "security that is implemented by the web browsers So the only question that remains",
    "start": "3210319",
    "end": "3217359"
  },
  {
    "text": "basically about WebGL security is can you provide a really lousy user experience is possible to say lock up",
    "start": "3217359",
    "end": "3224160"
  },
  {
    "text": "your graphics card for a long period of time Now this is a long-standing problem",
    "start": "3224160",
    "end": "3230240"
  },
  {
    "text": "in the graphics industry The GPU doesn't multitask in the same way that central processing units do So you can't go in",
    "start": "3230240",
    "end": "3237280"
  },
  {
    "text": "and preemptively terminate um a graphical operation that was submitted to the GPU you basically have",
    "start": "3237280",
    "end": "3243280"
  },
  {
    "text": "to wait for it to to complete But Microsoft actually innovated in this area and developed a mechanism for",
    "start": "3243280",
    "end": "3249920"
  },
  {
    "text": "Windows that lets them reset the graphics card and the driver on demand",
    "start": "3249920",
    "end": "3255200"
  },
  {
    "text": "So if something goes dramatically wrong you get maybe a two-cond hiccup in your user interface experience and then the",
    "start": "3255200",
    "end": "3262160"
  },
  {
    "text": "monitor powers off and comes back on It says so and so graphics driver stopped responding and was restarted Okay that's",
    "start": "3262160",
    "end": "3269520"
  },
  {
    "text": "the experience on Windows and it's actually not bad You get an application notification when that happens and you",
    "start": "3269520",
    "end": "3275359"
  },
  {
    "text": "can respond to it So two things have happened in the",
    "start": "3275359",
    "end": "3281680"
  },
  {
    "text": "OpenGL ecosystem on on Linux and Mac Specifications have been developed for",
    "start": "3281680",
    "end": "3287040"
  },
  {
    "text": "basically accessing the same kind of functionality of resetting the graphics card if something bad happens And these",
    "start": "3287040",
    "end": "3292640"
  },
  {
    "text": "are being implemented today by GPU vendors and some have already shipped this functionality the web browsers have",
    "start": "3292640",
    "end": "3299119"
  },
  {
    "text": "already incorporated the functionality So Chrome for example watches for these graphics processor resets and does",
    "start": "3299119",
    "end": "3305680"
  },
  {
    "text": "something in response If it can be conclusively determined that WebGL was responsible it's not going to run WebGL",
    "start": "3305680",
    "end": "3312319"
  },
  {
    "text": "anymore for that web page It's going to say \"Sorry WebGL content on the web page",
    "start": "3312319",
    "end": "3317920"
  },
  {
    "text": "caused the graphics card to reset and that's a bad user experience and we don't want that to happen to the end user.\" And this is an uncommon",
    "start": "3317920",
    "end": "3324079"
  },
  {
    "text": "occurrence but it's one that has to be guarded against I mean I'm sure we can all appreciate that we don't want even",
    "start": "3324079",
    "end": "3329760"
  },
  {
    "text": "by accident to lock up our our end users machines and certainly not you know over and over again So the web browser is",
    "start": "3329760",
    "end": "3336720"
  },
  {
    "text": "defending against this and we are going to be designing more um a slight",
    "start": "3336720",
    "end": "3343280"
  },
  {
    "text": "additional amount of uh user uh UI um in order to prevent a web",
    "start": "3343280",
    "end": "3351119"
  },
  {
    "text": "page from repeatedly doing this Okay So basically if it ever happens we're going to prompt the user put something up in",
    "start": "3351119",
    "end": "3357760"
  },
  {
    "text": "the user interface saying uh you know the graphics card reset or or something like this or you know WebGL stops",
    "start": "3357760",
    "end": "3363839"
  },
  {
    "text": "working do you want to continue yes or no try again or no thank you So the user",
    "start": "3363839",
    "end": "3369280"
  },
  {
    "text": "gets to decide whether or not they they want to continue running the content And we as we discover actual driver bugs",
    "start": "3369280",
    "end": "3378319"
  },
  {
    "text": "that are causing lockups like this we are putting test cases in the WebGL conformance tests This is a slightly uh",
    "start": "3378319",
    "end": "3386720"
  },
  {
    "text": "tricky way of getting all of the GPU vendors to really make their drivers robust so that they can't get away with",
    "start": "3386720",
    "end": "3394319"
  },
  {
    "text": "implementing some feature in a half-baked way that has the possibility of locking things up They got to make it",
    "start": "3394319",
    "end": "3400400"
  },
  {
    "text": "work if they want to say that WebGL actually works on their GPU And this is already having a very positive effect on",
    "start": "3400400",
    "end": "3406640"
  },
  {
    "text": "the quality of graphics drivers I can definitively state state that So anyway",
    "start": "3406640",
    "end": "3411839"
  },
  {
    "text": "the um the R robustness OpenGL extension is the key thing that is giving us the",
    "start": "3411839",
    "end": "3417200"
  },
  {
    "text": "the kill switch for the lowest level graphics operations and then the web",
    "start": "3417200",
    "end": "3422480"
  },
  {
    "text": "browsers are building more security on top of that and we're really getting very close to conclusively solving this",
    "start": "3422480",
    "end": "3428079"
  },
  {
    "text": "problem And that to me is is actually very exciting because it's a long-standing issue in the graphics industry And if we solve it then we can",
    "start": "3428079",
    "end": "3434240"
  },
  {
    "text": "just with uh with great confidence deploy amazing user experiences over the",
    "start": "3434240",
    "end": "3439880"
  },
  {
    "text": "web By the way that last bullet point is correct Longer term the graphics processors will do multitasking and then",
    "start": "3439880",
    "end": "3445920"
  },
  {
    "text": "they can you can just you know kill the rendering command in the same way that you could kill a process on on a",
    "start": "3445920",
    "end": "3451200"
  },
  {
    "start": "3451000",
    "end": "3497000"
  },
  {
    "text": "computer if it goes uh goes ary So",
    "start": "3451200",
    "end": "3456520"
  },
  {
    "text": "um we we've pretty much already discussed this You pro did did anybody hear specifically about the cross-domain",
    "start": "3456520",
    "end": "3462880"
  },
  {
    "text": "image access problem that came out last summer about WebGL like okay Yeah Anyway",
    "start": "3462880",
    "end": "3469200"
  },
  {
    "text": "basically issues that that came up in this area have been conclusively solved",
    "start": "3469200",
    "end": "3474240"
  },
  {
    "text": "not only in the WebGL spec but also the HTML specification So basically WebGL",
    "start": "3474240",
    "end": "3479599"
  },
  {
    "text": "secure develop your content with confidence Okay",
    "start": "3479599",
    "end": "3485880"
  },
  {
    "text": "Um I I'm gonna go a little faster through some of the rest of the slides because I want to get to some demos and",
    "start": "3485880",
    "end": "3491280"
  },
  {
    "text": "questions But um the the the cool thing about developing your app for the web as",
    "start": "3491280",
    "end": "3498160"
  },
  {
    "start": "3497000",
    "end": "3599000"
  },
  {
    "text": "opposed to developing like an Android an iOS and some kind of maybe it's a Steam game or something is that you get to",
    "start": "3498160",
    "end": "3503359"
  },
  {
    "text": "write your app once You get to deploy it everywhere and you get to use the wonderful infrastructure that's in the",
    "start": "3503359",
    "end": "3509520"
  },
  {
    "text": "web browser to do not only your output in in the form of text or or buttons or something but also uh to build your",
    "start": "3509520",
    "end": "3516559"
  },
  {
    "text": "entire user experience using HTML That's why it's cool Uh I'm privileged to have",
    "start": "3516559",
    "end": "3522000"
  },
  {
    "text": "some colleagues who have developed some pretty cool uh WebGL content that and they're by the way like longtime OpenGL",
    "start": "3522000",
    "end": "3527680"
  },
  {
    "text": "hackers and at least one of them said uh that WebGL was the best OpenGL development environment he'd ever used",
    "start": "3527680",
    "end": "3534079"
  },
  {
    "text": "He just hits shift reload and he sees the new JavaScript code that he wrote and it is really cool I mean I did a lot",
    "start": "3534079",
    "end": "3539440"
  },
  {
    "text": "of Java OpenGL work back in the day and it was still painful to do the compile step put the jar on the server you know",
    "start": "3539440",
    "end": "3545440"
  },
  {
    "text": "and then hit shift reload Now you just edit it in your text editor save it shift reload and the reload time is",
    "start": "3545440",
    "end": "3551280"
  },
  {
    "text": "really really fast because the JavaScript engines have been heavily optimized So it's a great development environment and there are amazing tools",
    "start": "3551280",
    "end": "3556880"
  },
  {
    "text": "built into the browsers too Um the re one another reason again that",
    "start": "3556880",
    "end": "3563920"
  },
  {
    "text": "you would want to develop for the web as opposed to say an app store again you cover all the devices you don't have to",
    "start": "3563920",
    "end": "3570400"
  },
  {
    "text": "worry about different app stores for different devices even app stores for the web you don't have to worry about it you may have to worry about your payment",
    "start": "3570400",
    "end": "3576400"
  },
  {
    "text": "model depending on the kind of application you're building but as long as you have like a login screen to your website and you can uh you know federate",
    "start": "3576400",
    "end": "3583200"
  },
  {
    "text": "access to your your content based on whether or not the login has access to the thing you put in your own payment",
    "start": "3583200",
    "end": "3589520"
  },
  {
    "text": "system and then still deploy over the web So um lot of lot of cool",
    "start": "3589520",
    "end": "3596880"
  },
  {
    "text": "infrastructure that's already built on the web that completely applies to the development of 3D on the web Um a lot of",
    "start": "3596880",
    "end": "3602640"
  },
  {
    "text": "tools lot of uh libraries good development environment good uh debugger",
    "start": "3602640",
    "end": "3607680"
  },
  {
    "text": "support good mobile debugger support You can connect your Android phone to your PC and debug with you know the other",
    "start": "3607680",
    "end": "3614079"
  },
  {
    "text": "debugger It's amazing Okay amazing stuff So",
    "start": "3614079",
    "end": "3619319"
  },
  {
    "text": "um I don't really want to talk about this Does anybody care if I skip over uh",
    "start": "3619319",
    "end": "3624480"
  },
  {
    "text": "there's another effort to put Vermal back in the web browser Declarative 3D for the web Not to denigrate it in any",
    "start": "3624480",
    "end": "3630640"
  },
  {
    "text": "way I'm not a big fan of going in that particular direction because I think that it shovels a lot more code into the web browser It doesn't really belong",
    "start": "3630640",
    "end": "3636799"
  },
  {
    "text": "there But um there are other reasons for doing it like accessibility and uh but I'm not an expert in this area So I",
    "start": "3636799",
    "end": "3643440"
  },
  {
    "text": "prefer to focus on the WebGL stuff So um Kronos is actually contributing more",
    "start": "3643440",
    "end": "3651440"
  },
  {
    "text": "than just WebGL into the web e ecosystem and the the next couple of slides we'll talk about web",
    "start": "3651440",
    "end": "3658160"
  },
  {
    "text": "CL but um there's there I think that there actually is an opportunity to to",
    "start": "3658200",
    "end": "3664319"
  },
  {
    "text": "develop the the low-level APIs in parallel with the ones that bind those low-level APIs into JavaScript That's",
    "start": "3664319",
    "end": "3670240"
  },
  {
    "text": "what WebGL does But OpenGLES2 previously existed and so WebGL was a natural",
    "start": "3670240",
    "end": "3676000"
  },
  {
    "text": "binding of that functionality up into the web There are other uh specs that Kronis develops like Open CL like open",
    "start": "3676000",
    "end": "3683200"
  },
  {
    "text": "SL um for sound like open CV for computer vision like um uh stream input",
    "start": "3683200",
    "end": "3692119"
  },
  {
    "text": "for pulling in like every kind of device under the sun into one nice unified API that's semantically driven And there are",
    "start": "3692119",
    "end": "3700319"
  },
  {
    "text": "lots of opportunities for exposing more of this functionality that is on the native PC up into the uh the web",
    "start": "3700319",
    "end": "3707920"
  },
  {
    "text": "ecosystem And the Kronos group is working very well I think with the W3C",
    "start": "3707920",
    "end": "3713200"
  },
  {
    "text": "on uh on WebGL on typed arrays and on other uh collaborations So I I look",
    "start": "3713200",
    "end": "3718480"
  },
  {
    "text": "personally look forward to more of uh more of this So um I'm going to breeze through the",
    "start": "3718480",
    "end": "3726240"
  },
  {
    "text": "web CL slides here but basically in addition to being able to do 3D graphics",
    "start": "3726240",
    "end": "3731520"
  },
  {
    "text": "with your um with your web page with your PC the graphics processor has been",
    "start": "3731520",
    "end": "3737280"
  },
  {
    "text": "repurposed to be more of a general purpose processor So you can upload uh",
    "start": "3737280",
    "end": "3742400"
  },
  {
    "text": "little snippets of Cike code onto it and do actual computation like physics",
    "start": "3742400",
    "end": "3747760"
  },
  {
    "text": "simulation for example And that's what OpenCL provides an industry standard way",
    "start": "3747760",
    "end": "3752960"
  },
  {
    "text": "of doing computation using your graphics chip And",
    "start": "3752960",
    "end": "3759440"
  },
  {
    "text": "um the I mean there's not much more to say about it It basically lets you write",
    "start": "3760119",
    "end": "3765359"
  },
  {
    "text": "really high performance uh kernels that run everywhere because all of the",
    "start": "3765359",
    "end": "3771200"
  },
  {
    "text": "graphics devices are supporting the Open CL you know base functionality So the",
    "start": "3771200",
    "end": "3777359"
  },
  {
    "text": "ability to compile these C like kernels and run them on your device even if it's",
    "start": "3777359",
    "end": "3782400"
  },
  {
    "text": "a mobile phone that behavior is specified across the industry So WebCL",
    "start": "3782400",
    "end": "3788240"
  },
  {
    "text": "is an initiative that Kronos uh is working on and actually the first draft of the spec just came out like within",
    "start": "3788240",
    "end": "3793599"
  },
  {
    "text": "the past week So I encourage you to go take a look and provide feedback to the working group But um basically it",
    "start": "3793599",
    "end": "3799760"
  },
  {
    "text": "exposes Open CL to JavaScript So Open CL has specified behavior across a wide",
    "start": "3799760",
    "end": "3805839"
  },
  {
    "text": "range of devices and that is the you know the key um property that's",
    "start": "3805839",
    "end": "3813119"
  },
  {
    "text": "necessary in order to expose it to the web because the web works the same everywhere So you need your compute",
    "start": "3813119",
    "end": "3819119"
  },
  {
    "text": "environment to work the same everywhere WebCL brings the lowest level primitives for accessing the graphics card as a",
    "start": "3819119",
    "end": "3826720"
  },
  {
    "text": "compute device to the web and that lets you do some pretty cool stuff You could",
    "start": "3826720",
    "end": "3833200"
  },
  {
    "text": "actually write new languages for the web that are auto parallelizing and host them on top of",
    "start": "3833200",
    "end": "3840920"
  },
  {
    "text": "WebCL So it can be a new building block for dramatically extending JavaScript in",
    "start": "3840920",
    "end": "3846559"
  },
  {
    "text": "new directions It's pretty cool Um so I recommend that you check it out and try out the prototypes that have been uh",
    "start": "3846559",
    "end": "3852799"
  },
  {
    "text": "developed by uh by Samsung and by Nokia So um I'm going to skip through",
    "start": "3852799",
    "end": "3860400"
  },
  {
    "text": "this The slides are all available by the way so you can go back and and refer to these but I do want to show uh one",
    "start": "3860400",
    "end": "3865680"
  },
  {
    "text": "demonstration from Samsung Uh this this link this YouTube page is",
    "start": "3865680",
    "end": "3871839"
  },
  {
    "text": "linked from the um uh from the slides but basically this is the",
    "start": "3871839",
    "end": "3877960"
  },
  {
    "text": "uh this is a cool little uh I'm going to leave the sound off and talk over it Um",
    "start": "3877960",
    "end": "3884720"
  },
  {
    "text": "it's a cool demo of Samsung's WebCL implementation running in the browser They do two uh",
    "start": "3884720",
    "end": "3891880"
  },
  {
    "text": "comparisons First they they make a deforming model Okay",
    "start": "3891880",
    "end": "3897680"
  },
  {
    "text": "uh that is doing all sorts of physics simulation and it's it's for now now the",
    "start": "3897680",
    "end": "3904079"
  },
  {
    "text": "simulation is off Okay And the next thing they're going to do is turn on the simulation and it's going to be running in JavaScript",
    "start": "3904079",
    "end": "3911920"
  },
  {
    "text": "Okay Okay So they're getting like one frame per second or one frame",
    "start": "3912599",
    "end": "3918640"
  },
  {
    "text": "every two seconds Okay Something like that Maybe two frames a second Not very fast And the reason is that this is a a",
    "start": "3918640",
    "end": "3925680"
  },
  {
    "text": "really hard problem for the CPU to compute It's a a much a problem much",
    "start": "3925680",
    "end": "3930720"
  },
  {
    "text": "better suited for the GPU which has massive parallelism So this part of the video shows their open their WebCL",
    "start": "3930720",
    "end": "3937520"
  },
  {
    "text": "prototype doing the physics simulation of these deforming bodies And you see it's interactive rates It's like you",
    "start": "3937520",
    "end": "3942960"
  },
  {
    "text": "know 100 frames a second So you can get massive speed ups by taking advantage of the floatingoint performance of the",
    "start": "3942960",
    "end": "3949440"
  },
  {
    "text": "graphics processor from JavaScript depending on your application So um not",
    "start": "3949440",
    "end": "3955599"
  },
  {
    "text": "much more to say about that There are definitely areas where or fields where",
    "start": "3955599",
    "end": "3961200"
  },
  {
    "text": "this kind of uh uh ability is is a huge huge win",
    "start": "3961200",
    "end": "3967480"
  },
  {
    "text": "So that's what WebCL is is aiming to provide",
    "start": "3967480",
    "end": "3973319"
  },
  {
    "text": "Um going forward you can envision really cool stuff going on You can envision video input coming in via OpenMax or",
    "start": "3973720",
    "end": "3981599"
  },
  {
    "text": "actually maybe just via uh WebRTC But basically one way or another you get your video frames in from the camera and",
    "start": "3981599",
    "end": "3988160"
  },
  {
    "text": "you feed it into the Open CV computer vision library to do object uh finding",
    "start": "3988160",
    "end": "3993359"
  },
  {
    "text": "and tracking And then you feed it into your JavaScript code which does some sort of you know 3D model of the scene",
    "start": "3993359",
    "end": "3999200"
  },
  {
    "text": "that it's looking at does an overlay of some 3D graphics on it and then uses WebGL to compose the video with the 3D",
    "start": "3999200",
    "end": "4005599"
  },
  {
    "text": "overlay And then you can take your tablet and look around at the world and see oh ah the subway station is in that",
    "start": "4005599",
    "end": "4011599"
  },
  {
    "text": "direction or free pizza in the kitchen or you know all all sorts of useful information Where's the bathroom you",
    "start": "4011599",
    "end": "4017839"
  },
  {
    "text": "know um and uh and I think that the web would actually be an ideal platform to develop",
    "start": "4017839",
    "end": "4023599"
  },
  {
    "text": "these kinds of applications in and it's becoming increasingly possible So um with that I'm going to",
    "start": "4023599",
    "end": "4031119"
  },
  {
    "text": "just ask everybody to to get involved in the development of these specifications especially I mean if you have interest",
    "start": "4031119",
    "end": "4036480"
  },
  {
    "text": "in 3D graphics please join the WebGL public mailing list and at least watch the discussions if not participate",
    "start": "4036480",
    "end": "4043039"
  },
  {
    "text": "There's um we're we're improving the um we're fixing corner cases in the spec",
    "start": "4043039",
    "end": "4050240"
  },
  {
    "text": "every day we're developing uh not developing but let's say that we're pulling in new functionality from the",
    "start": "4050240",
    "end": "4055440"
  },
  {
    "text": "desktop 3D graphics environment to um in order to increase the kinds of",
    "start": "4055440",
    "end": "4061839"
  },
  {
    "text": "visual effects that you can do with WebGL and the the entire ecosystem is",
    "start": "4061839",
    "end": "4067280"
  },
  {
    "text": "evolving quite quickly and it's it's actually really exciting to see as multiple web browsers implement new",
    "start": "4067280",
    "end": "4072960"
  },
  {
    "text": "features uh you can see demos coming out just every day So I I want to show some",
    "start": "4072960",
    "end": "4078400"
  },
  {
    "text": "demos um and point out by the way that there are at least two mobile browsers today that",
    "start": "4078400",
    "end": "4085359"
  },
  {
    "text": "support WebGL It's Opera Mobile and Firefox on Android And I ex I fully",
    "start": "4085359",
    "end": "4090440"
  },
  {
    "text": "expect more mobile browser implementations to support WebGL in the",
    "start": "4090440",
    "end": "4095680"
  },
  {
    "text": "near future Actually Rim Playbook is the third So anyway um with that let me pull",
    "start": "4095680",
    "end": "4101520"
  },
  {
    "text": "up a couple of demos and let me call for questions Um if anybody has a question please just raise your hand interrupt me",
    "start": "4101520",
    "end": "4108159"
  },
  {
    "text": "please back there That's a good question The question was when can we expect WebCL to show up in real browsers i",
    "start": "4108159",
    "end": "4114960"
  },
  {
    "text": "don't have a prediction for you on that but what I would suggest is join the WebCL public mailing list provide",
    "start": "4114960",
    "end": "4122238"
  },
  {
    "text": "feedback on the API and help the working group move it forward to a point where the spec and its security properties are",
    "start": "4122239",
    "end": "4129920"
  },
  {
    "text": "specified well enough that we all feel confident in deploying it These are the main issues Another",
    "start": "4129920",
    "end": "4138679"
  },
  {
    "text": "issue another issue is that so we've seen how WebGL was implemented on top of",
    "start": "4138679",
    "end": "4145040"
  },
  {
    "text": "this angle graphics library and angle provides OpenGLES semantics on top of",
    "start": "4145040",
    "end": "4151600"
  },
  {
    "text": "direct 3D If you assume that the the target that you're",
    "start": "4151600",
    "end": "4158880"
  },
  {
    "text": "going to be hosting WebCL on top of is actually direct compute as opposed to Open CL on Windows you may need there",
    "start": "4158880",
    "end": "4167120"
  },
  {
    "text": "some work may be necessary there More minds thinking about that particular issue would definitely help accelerate",
    "start": "4167120",
    "end": "4174000"
  },
  {
    "text": "the deployment of the spec So if you have any experience in that area I would highly encourage you to get",
    "start": "4174000",
    "end": "4180120"
  },
  {
    "text": "involved Question up here Okay So uh this is a this is a question and a point",
    "start": "4180120",
    "end": "4186560"
  },
  {
    "text": "The the question point was that um uh I was advocating using WebGL as the",
    "start": "4186560",
    "end": "4191920"
  },
  {
    "text": "mechanism for deploying onto mobile devices but since mobile browsers aren't really supporting it yet it's not really viable to replace doing an app store",
    "start": "4191920",
    "end": "4198520"
  },
  {
    "text": "deployment Um I expect this to be the year of WebGL on mobile There are",
    "start": "4198520",
    "end": "4203760"
  },
  {
    "text": "already two browsers supporting it The the actually there's more than two there",
    "start": "4203760",
    "end": "4209040"
  },
  {
    "text": "Um Nvidia has released uh a WebGL implementation on their Tegra hardware that supports Android that is really",
    "start": "4209040",
    "end": "4214800"
  },
  {
    "text": "really fast They spent a lot of time getting the composition architecture to be fast so they could get WebGL content",
    "start": "4214800",
    "end": "4220800"
  },
  {
    "text": "to the screen very quickly And um so so the point was that WebGL can't really",
    "start": "4220800",
    "end": "4226560"
  },
  {
    "text": "replace these mobile app stores yet And that that is true Okay But if you if your time horizon for the development of",
    "start": "4226560",
    "end": "4232719"
  },
  {
    "text": "your content is something like six months I think it would be safe to target WebGL as what you you know how",
    "start": "4232719",
    "end": "4239840"
  },
  {
    "text": "you write your app So that with the expectation that maybe six months from now you're going to see a wide range of",
    "start": "4239840",
    "end": "4246239"
  },
  {
    "text": "browsers supporting WebGL and mobile That's a personal opinion I can't promise you know release dates or",
    "start": "4246239",
    "end": "4252159"
  },
  {
    "text": "anything like that But um given that WebGL was specifically designed to run on mobile devices I think that this will",
    "start": "4252159",
    "end": "4258080"
  },
  {
    "text": "be the year that that happens There's it's been a bit of a a difficult road getting to a certain point of",
    "start": "4258080",
    "end": "4263920"
  },
  {
    "text": "conformance and cross browser and crossplatform behavior on desktop machines but um the bumble devices were",
    "start": "4263920",
    "end": "4271040"
  },
  {
    "text": "specifically designed for this form of the OpenG API So I think that um it'll",
    "start": "4271040",
    "end": "4277600"
  },
  {
    "text": "be easier to get it running on mobile devices now that we have all of this infrastructure in the browsers for for",
    "start": "4277600",
    "end": "4284159"
  },
  {
    "text": "doing it on the desktop Uh all right I think I should probably give you guys a 15-minute break So thanks for coming and uh look forward",
    "start": "4284159",
    "end": "4290800"
  },
  {
    "text": "to seeing you again soon Bye [Applause]",
    "start": "4290800",
    "end": "4296600"
  },
  {
    "text": "[Music]",
    "start": "4296600",
    "end": "4305050"
  }
]