[
  {
    "text": "[Music]",
    "start": "410",
    "end": "27480"
  },
  {
    "text": "uh I'm Michael Rogers uh I write a lot of code uh it's my GitHub you can see it",
    "start": "27480",
    "end": "33280"
  },
  {
    "text": "uh I also contribute a little bit to core here and there when I get time I also run node comp which is a conference",
    "start": "33280",
    "end": "38760"
  },
  {
    "text": "about nodejs uh which will happen in July and tickets should be on sale towards the end of the month and uh yeah",
    "start": "38760",
    "end": "46160"
  },
  {
    "text": "you can ask me questions about that later if you like but let's get started this is a talk about the first node",
    "start": "46160",
    "end": "51640"
  },
  {
    "text": "program that I ever wrote and actually how that changed over time um and this talk is really good at showing you where",
    "start": "51640",
    "end": "58760"
  },
  {
    "text": "nod's priorities are and how we think about how to solve a lot of programming problems so let's get started so in",
    "start": "58760",
    "end": "65960"
  },
  {
    "text": "December of 2009 uh this guy Yan learnard who's great friend of mine uh",
    "start": "65960",
    "end": "71159"
  },
  {
    "text": "ran a conference he ran a conference called uh JSC EU which is the European",
    "start": "71159",
    "end": "76880"
  },
  {
    "text": "version by European he means Berlin version of JS comp and that was where",
    "start": "76880",
    "end": "82240"
  },
  {
    "text": "Ryan do gave his first kind of public talk about nodejs and where most people first heard about it where I first heard",
    "start": "82240",
    "end": "87600"
  },
  {
    "text": "about it and he had already posted that video and I was really interested and Yan said on Twitter has anybody written",
    "start": "87600",
    "end": "92720"
  },
  {
    "text": "an actual HTP proxy in node yet I kind of want to play with this idea but I don't want to write the proxy from",
    "start": "92720",
    "end": "97759"
  },
  {
    "text": "scratch um and I had written this thing in in Python called windmill i' spent about three years on it it's a a",
    "start": "97759",
    "end": "103920"
  },
  {
    "text": "competitive selenium that didn't win it's why you haven't heard about it uh but it but it was uh it it was very very",
    "start": "103920",
    "end": "112399"
  },
  {
    "text": "smart it it had a proxy inside of it that would actually trick the browser into thinking that it never Lo left the same domain it would return forwards to",
    "start": "112399",
    "end": "119240"
  },
  {
    "text": "content at the same domain and figure out where it should actually be proessing was crazy spent a lot of time on it and because we wanted our tests to",
    "start": "119240",
    "end": "125280"
  },
  {
    "text": "run fast um I spent most of my time optimizing it by the time that I was done it was over 10,000 lines of code it",
    "start": "125280",
    "end": "131239"
  },
  {
    "text": "used a better htb client in in addition to that I had a bunch of fixes on top of it to make it thread safe I had thread",
    "start": "131239",
    "end": "137480"
  },
  {
    "text": "two so that we could maybe try to kill python reliably um and we even had a special socket server so that we could",
    "start": "137480",
    "end": "143560"
  },
  {
    "text": "do SSL fanciness um so I knew a little bit about running an HTP proxy and I figured",
    "start": "143560",
    "end": "149200"
  },
  {
    "text": "this would be good thing I'm going to try out this node.js thing I already know JavaScript I was working at Mozilla",
    "start": "149200",
    "end": "154720"
  },
  {
    "text": "at the time so it's kind of a requirement um and so two hours later I",
    "start": "154720",
    "end": "159959"
  },
  {
    "text": "had some code uh and this is what in December of 2009 an HTP proxy looked",
    "start": "159959",
    "end": "165040"
  },
  {
    "text": "like in node uh the first half of this slide is pretty much just parsing Earls",
    "start": "165040",
    "end": "171080"
  },
  {
    "text": "because we don't have an Earl parser yet nobody's written one so that's what this code is about it's a terrible or parer",
    "start": "171080",
    "end": "176920"
  },
  {
    "text": "but it works um then we instantiate a a client object which is an HP client",
    "start": "176920",
    "end": "182720"
  },
  {
    "text": "object we pull off the headers we add a host header to it um and then we we call",
    "start": "182720",
    "end": "187799"
  },
  {
    "text": "a method on that client object for the HTTP method that's why we do this client request. method. to lowercase so that we",
    "start": "187799",
    "end": "194080"
  },
  {
    "text": "can match the the output method from the input method and then we give it the path and the headers then we listen for",
    "start": "194080",
    "end": "200120"
  },
  {
    "text": "these body events that give us chunks and then we call this send body thing um",
    "start": "200120",
    "end": "205599"
  },
  {
    "text": "and then we give a function to this finish call this is not an event this is",
    "start": "205599",
    "end": "211360"
  },
  {
    "text": "a special call that takes a call back for finishing um and we also have to do",
    "start": "211360",
    "end": "217400"
  },
  {
    "text": "a lot of stuff around encoding um in the early days node had to deal with string encoding about as much as you have to in",
    "start": "217400",
    "end": "223799"
  },
  {
    "text": "other platforms which is to say a lot uh and we we had this way to do the way that you did binary in node was actually",
    "start": "223799",
    "end": "230560"
  },
  {
    "text": "through these binary encoded strings so you had to be really careful about when you use them when you didn't use them um",
    "start": "230560",
    "end": "236360"
  },
  {
    "text": "and in the really early days back then there were actually bugs where the data would mutate if you changed it to a",
    "start": "236360",
    "end": "241799"
  },
  {
    "text": "binary encoded string and it even if that was the input or if the input was asking you format into binary encoded",
    "start": "241799",
    "end": "247799"
  },
  {
    "text": "string and then wrote it out that way it would be different was very bad bug um so that's why we have this very fancy",
    "start": "247799",
    "end": "253799"
  },
  {
    "text": "encoding handling here then we listen for complete and we call the Finish guy and then we're kind of done that's not a",
    "start": "253799",
    "end": "260400"
  },
  {
    "text": "lot of code that's significantly less code than my python proxy it can't possibly be faster because this doesn't",
    "start": "260400",
    "end": "266600"
  },
  {
    "text": "include all the crazy Network optimizations that that I know that you can can do I know that this Returns the",
    "start": "266600",
    "end": "272840"
  },
  {
    "text": "request iteratively which is one of the bigger optimizations that I had in Python but this is literally about a third to a half of the amount of code",
    "start": "272840",
    "end": "279400"
  },
  {
    "text": "that it took just to do iterative responses in Python um this isn't you know keeping a nice pool around of",
    "start": "279400",
    "end": "284720"
  },
  {
    "text": "connections so I decided to play around and test it a little bit and it turns out that it was way faster than my",
    "start": "284720",
    "end": "290800"
  },
  {
    "text": "python proxy um like like by several orders of magnitude and it it was it",
    "start": "290800",
    "end": "296479"
  },
  {
    "text": "also used way less resources I mean way less memory the CPU if I left it there",
    "start": "296479",
    "end": "301680"
  },
  {
    "text": "on for days at a time it wouldn't eat up my CPU randomly like my python proxy did",
    "start": "301680",
    "end": "307120"
  },
  {
    "text": "and it was much easier to understand and reason about so this was about the time that I decided that I wasn't going to write",
    "start": "307120",
    "end": "313000"
  },
  {
    "text": "python anymore um I I loved python I was one of the biggest Advocates of python I loved the",
    "start": "313000",
    "end": "319479"
  },
  {
    "text": "community I I loved everything about it but my problems the problems that I was dealing with python was not interested",
    "start": "319479",
    "end": "325720"
  },
  {
    "text": "in solving and where node already was showed that they were more interested in that so I made a decision that I just",
    "start": "325720",
    "end": "331560"
  },
  {
    "text": "wasn't going to write python anymore which was problematic because I was kind of employed to write python um",
    "start": "331560",
    "end": "337840"
  },
  {
    "text": "so had some discussions uh but it worked out uh and in February of 2010 we we had",
    "start": "337840",
    "end": "345000"
  },
  {
    "text": "a new release of node and all of a sudden this proxy starts to look like this so hey we have an Earl module isn't",
    "start": "345000",
    "end": "352120"
  },
  {
    "text": "that nice that's way less code now it's like a half a slide done um we we also",
    "start": "352120",
    "end": "358280"
  },
  {
    "text": "have a request method on the client which is much easier because now I can just pass a string as the method rather",
    "start": "358280",
    "end": "363560"
  },
  {
    "text": "than calling a method method um we that really bad encoding bug in",
    "start": "363560",
    "end": "370560"
  },
  {
    "text": "binary encoded strings is gone um so we don't have a lot of the really really fancy handling around encoding we can",
    "start": "370560",
    "end": "376639"
  },
  {
    "text": "just set the encoding as binary and use binary encoded strings everywhere also the the body event is gone um and the",
    "start": "376639",
    "end": "383720"
  },
  {
    "text": "the Finish call is also gone and you have a more unified unified interface here around the client request object in",
    "start": "383720",
    "end": "390120"
  },
  {
    "text": "the HTTP response object so if you see here like there's they both have the same data events and they and they all",
    "start": "390120",
    "end": "396639"
  },
  {
    "text": "have right methods and they all have close methods so things are just getting a little bit more unified around how you",
    "start": "396639",
    "end": "401680"
  },
  {
    "text": "deal with things that emit and close data okay one more thing that I want to",
    "start": "401680",
    "end": "408680"
  },
  {
    "text": "cover in this slide um the string encoding although we fixed this binary encoding the that uh binary encoding",
    "start": "408680",
    "end": "415919"
  },
  {
    "text": "problem this still sucks like this this way of dealing with is really bad because what would happen is U we would",
    "start": "415919",
    "end": "422560"
  },
  {
    "text": "get data off of a socket we would convert it into a string which is like this binary encoded string um and then we would end up just writing it back out",
    "start": "422560",
    "end": "429120"
  },
  {
    "text": "to another socket half of the time or writing it to a file descriptor or something that we actually need to take it and then copy it again so and and the",
    "start": "429120",
    "end": "437000"
  },
  {
    "text": "the two string conversion was big enough much less like dealing with that also at the time V8 had um a Max Heap size of",
    "start": "437000",
    "end": "444599"
  },
  {
    "text": "about a gig so once you hit the Heap limit all bets are off it it just spins up to 100 % CPU and it was really",
    "start": "444599",
    "end": "450840"
  },
  {
    "text": "terrible so after this release and the next release um this kind of goes away we deprecate",
    "start": "450840",
    "end": "457879"
  },
  {
    "text": "this binary encoding of strings and we move to what are called buffer objects and so buffer objects are an object in",
    "start": "457879",
    "end": "463840"
  },
  {
    "text": "JavaScript that is basically a pointer to a static allocation of memory that's outside of va8 Heap so we don't convert",
    "start": "463840",
    "end": "470000"
  },
  {
    "text": "to string anymore when things come off of the network and come off of file descriptors we stick them into this alotment of memory that's not in V8 Heap",
    "start": "470000",
    "end": "477080"
  },
  {
    "text": "um and then we pass around a reference to that and it's much faster it got us out of a lot of Heap problems um and we",
    "start": "477080",
    "end": "482360"
  },
  {
    "text": "don't suffer extra copies when we're just taking things from one file descriptor to another okay so July of",
    "start": "482360",
    "end": "490240"
  },
  {
    "text": "2010 Ryan had Ryan do the creator of node had been talking a lot about um",
    "start": "490240",
    "end": "496360"
  },
  {
    "text": "unifying the interface around file descriptors and sockets and even system processes there are all these things",
    "start": "496360",
    "end": "502520"
  },
  {
    "text": "that we deal with that sort of iteratively emit data and you can write data to them or sometimes you can't so",
    "start": "502520",
    "end": "508599"
  },
  {
    "text": "you have these readable objects and these writable objects we have them all over node why don't we why don't we",
    "start": "508599",
    "end": "514399"
  },
  {
    "text": "unify the API around them so that you can just write this function like it it should probably look like this and",
    "start": "514399",
    "end": "520440"
  },
  {
    "text": "there's just this function and it can take two two of these objects and just send them so in this release of node um",
    "start": "520440",
    "end": "527920"
  },
  {
    "text": "I put in some code into CIS CIS was a module where we just put stuff that we didn't really have a good place for um",
    "start": "527920",
    "end": "534399"
  },
  {
    "text": "and and this this method takes two stream objects it takes a readable stream and then a writable stream",
    "start": "534399",
    "end": "540279"
  },
  {
    "text": "and it takes all the data from one and sends it to another and when one finishes it calls end on the other object so that removed all of the code",
    "start": "540279",
    "end": "547440"
  },
  {
    "text": "in this proxy that had to deal with listening for right events and calling end all that's gone now because we have",
    "start": "547440",
    "end": "553120"
  },
  {
    "text": "this much more unified interface awesome stuff um wow we're getting rid of so",
    "start": "553120",
    "end": "559600"
  },
  {
    "text": "much code that we can do like comma first and we just have room and fits on a slide this is beautiful so uh one of",
    "start": "559600",
    "end": "565600"
  },
  {
    "text": "the nice things that that you see at the top here is that we don't have that create client call anymore um in this release of node we actually",
    "start": "565600",
    "end": "572480"
  },
  {
    "text": "got rid of the create client call and just switched right to getting a request because it was kind of silly you would create this client object and then you",
    "start": "572480",
    "end": "578600"
  },
  {
    "text": "would create another object off of that for the client request um which is just",
    "start": "578600",
    "end": "583880"
  },
  {
    "text": "you know that's the object that you care about when don't we just get you right to that so this gets smaller here uh and",
    "start": "583880",
    "end": "590360"
  },
  {
    "text": "also we we deprecated the CIS module it turns out that if we can't think of a good place for it it either doesn't",
    "start": "590360",
    "end": "595600"
  },
  {
    "text": "belong in node or we haven't spent enough time thinking about where to put it so so we put a pipe method it's now",
    "start": "595600",
    "end": "601519"
  },
  {
    "text": "called pipe instead of pump um on all readable streams so every readable stream in node has this method on it",
    "start": "601519",
    "end": "608200"
  },
  {
    "text": "called a pipe and you pass in a writable argument to it much easier this is all getting very",
    "start": "608200",
    "end": "614240"
  },
  {
    "text": "very small so then in July 2001 another release of node came out and I got in uh",
    "start": "614240",
    "end": "620079"
  },
  {
    "text": "one line in the core in that release um which is probably like the best line",
    "start": "620079",
    "end": "625360"
  },
  {
    "text": "ever in node uh all that line does is at the end of the uh pipe call it emits an",
    "start": "625360",
    "end": "632360"
  },
  {
    "text": "event on the writable stream called pipe uh and it passes in the readable argument so now when streams are piped",
    "start": "632360",
    "end": "639800"
  },
  {
    "text": "to each other each one knows about its input and output because one of them the method is actually on the readable",
    "start": "639800",
    "end": "645320"
  },
  {
    "text": "stream object so it can intercept and and figure out what the writable argument is um and the other one gets an event so it knows what its readable",
    "start": "645320",
    "end": "651720"
  },
  {
    "text": "argument was so now we can start to do really fancy things about the input and output of streams they don't have to be",
    "start": "651720",
    "end": "658399"
  },
  {
    "text": "opaque they can actually means something so uh in my library request which is this highle HTTP libr client that",
    "start": "658399",
    "end": "665240"
  },
  {
    "text": "everybody's using I just added in proxying support so now if you create a",
    "start": "665240",
    "end": "671639"
  },
  {
    "text": "request object to an Earl uh and you pipe in a server request object and you",
    "start": "671639",
    "end": "677120"
  },
  {
    "text": "pipe it to a response object or you can just do one of them or the other actually um it'll inspect the inputs and",
    "start": "677120",
    "end": "683360"
  },
  {
    "text": "outputs and actually call the right methods and take the headers and the method and all the other information",
    "start": "683360",
    "end": "690360"
  },
  {
    "text": "from the input and output and do what you want to do with it so now the proxy is down to three lines and that may seem",
    "start": "690360",
    "end": "697680"
  },
  {
    "text": "unfair comparing it to the old python proxy but remember I was actually using a third party HTP client in that Library",
    "start": "697680",
    "end": "704240"
  },
  {
    "text": "as well um so then in November of 2011 we added one more thing into node uh",
    "start": "704240",
    "end": "710560"
  },
  {
    "text": "that was the last thing that's that's affected this code um all the way till today it's that pipe Returns the",
    "start": "710560",
    "end": "717040"
  },
  {
    "text": "destination Stream So when you pass in a writable stream to pipe it will return",
    "start": "717040",
    "end": "722279"
  },
  {
    "text": "that same writable stream at the end which means that now this one this proxy is actually a one line so we went from",
    "start": "722279",
    "end": "729279"
  },
  {
    "text": "two slides down to essentially one line uh in a couple years I mean it did take a while but this is these are the",
    "start": "729279",
    "end": "736519"
  },
  {
    "text": "problems that we're focused on like we're not focused on using all of your cores to do Fibonacci we really don't",
    "start": "736519",
    "end": "743320"
  },
  {
    "text": "care like that's not a thing that we worry about what we worry about is how do you write better Network programs",
    "start": "743320",
    "end": "749760"
  },
  {
    "text": "uh how do you remove boiler plate how do you make things more predictable and simpler to read and that's what we're",
    "start": "749760",
    "end": "756760"
  },
  {
    "text": "doing so that's the end of that talk I have another talk now because my talks are very",
    "start": "756760",
    "end": "763199"
  },
  {
    "text": "short okay all right this is the module tour",
    "start": "763199",
    "end": "769720"
  },
  {
    "text": "this is what was actually on the program so this is what you paid for all right um that's me",
    "start": "769720",
    "end": "777240"
  },
  {
    "text": "again and why am I going to talk about third party modules so most I know that I just spent a lot of time talking about",
    "start": "777240",
    "end": "782880"
  },
  {
    "text": "advances that we make in core but a lot of the value the vast majority of the value really in node is being created by",
    "start": "782880",
    "end": "789639"
  },
  {
    "text": "the community in third party modules so it's more important to know about the really good modules the modules that you",
    "start": "789639",
    "end": "796480"
  },
  {
    "text": "can take for granted not necessarily the really opinioned modules or the ones that you know like are going to get",
    "start": "796480",
    "end": "802720"
  },
  {
    "text": "replaced in a month with something better or you know are going to get abandoned because Tim cwell wrote them",
    "start": "802720",
    "end": "808279"
  },
  {
    "text": "like this is just for the modu this is like I'm just going to talk about the modules that are solid enough",
    "start": "808279",
    "end": "814720"
  },
  {
    "text": "now that you can just take them for granted okay so yeah npm everybody uses",
    "start": "814720",
    "end": "820600"
  },
  {
    "text": "npm it is the best package manager ever um really it is I've used package",
    "start": "820600",
    "end": "825920"
  },
  {
    "text": "managers in every system and I've never seen one this nice um I checked today we are over um 8,800 packages in the",
    "start": "825920",
    "end": "833320"
  },
  {
    "text": "registry we grow by between 50 and 100 a day uh and we get about 2 to 300 updates",
    "start": "833320",
    "end": "839360"
  },
  {
    "text": "of packages a day to existing packages um okay so really simple stuff",
    "start": "839360",
    "end": "845639"
  },
  {
    "text": "like yeah you can do mpm install Express it's really simple um but there's some other stuff that like I didn't know",
    "start": "845639",
    "end": "851320"
  },
  {
    "text": "about until Isaac showed me so let's do npm explore request oh by the way like",
    "start": "851320",
    "end": "857160"
  },
  {
    "text": "this is my slides directory and I have some node modules installed in here so npm explore",
    "start": "857160",
    "end": "865199"
  },
  {
    "text": "request yeah yeah yeah zsh okay whoa okay so what this does is",
    "start": "865199",
    "end": "870959"
  },
  {
    "text": "it runs a new shell in whatever directory resolves to that module so",
    "start": "870959",
    "end": "877399"
  },
  {
    "text": "wherever you have that module installed if in your node program at that same level you can require it this command",
    "start": "877399",
    "end": "884079"
  },
  {
    "text": "will drop you into a new shell that's in that directory so this is really nice because um if the request module has the",
    "start": "884079",
    "end": "891880"
  },
  {
    "text": "same dependency that I have the top level and they're two different versions it'll actually be getting two different versions of those because we don't have",
    "start": "891880",
    "end": "897120"
  },
  {
    "text": "Global versions um in packages so in this directory if I wanted to do node I",
    "start": "897120",
    "end": "902240"
  },
  {
    "text": "could actually now require something that request has no dependencies so that",
    "start": "902240",
    "end": "908720"
  },
  {
    "text": "won't work but whatever um I I could check you know what is that dependency and and does that have a bug in it and",
    "start": "908720",
    "end": "915000"
  },
  {
    "text": "all that kind of stuff and then when I'm done I can just control D out and then I go back to my old shelf so that's really",
    "start": "915000",
    "end": "921000"
  },
  {
    "text": "useful um this is cool so there's a ton of hidden little config gems everywhere",
    "start": "921000",
    "end": "928240"
  },
  {
    "text": "and this is one of them you can set your viewer to browser um and then if you do",
    "start": "928240",
    "end": "934680"
  },
  {
    "text": "npm help it'll open in the",
    "start": "934680",
    "end": "938600"
  },
  {
    "text": "browser um that's cute okay mpm list this is one of the",
    "start": "940040",
    "end": "946959"
  },
  {
    "text": "most useful ones ever so this is great none of them are",
    "start": "946959",
    "end": "952040"
  },
  {
    "text": "colored like let me yeah yeah whatever um",
    "start": "952040",
    "end": "960040"
  },
  {
    "text": "uh get okay pretend that you didn't see any of this",
    "start": "960920",
    "end": "966639"
  },
  {
    "text": "code okay awesome so this is much cooler this is like all of these crazy",
    "start": "966639",
    "end": "972519"
  },
  {
    "text": "dependencies look I have an unmet dependency in there I have a bunch of dependencies that are actually aren't necessary because they aren't depended",
    "start": "972519",
    "end": "978440"
  },
  {
    "text": "on anywhere else in the tree they're just installed probably because they were installed back when it did require",
    "start": "978440",
    "end": "983600"
  },
  {
    "text": "it but now it doesn't require it in the package ason anymore it's like a really really useful tool um and you see here",
    "start": "983600",
    "end": "989519"
  },
  {
    "text": "this is like just really simple it shows me all the dependencies of my dependencies as well so you can see the socket IO actually requires quite a bit",
    "start": "989519",
    "end": "995079"
  },
  {
    "text": "of stuff I mean it requires its own client which in turn requires a couple different",
    "start": "995079",
    "end": "1001360"
  },
  {
    "text": "modules okay that's enough npm oh no wait I lied so this is actually it's okay I",
    "start": "1001639",
    "end": "1009800"
  },
  {
    "text": "wrote this in like a weekend so bear with me this page kind of sucks you can",
    "start": "1009800",
    "end": "1014880"
  },
  {
    "text": "uh search for stuff though like hello give it a second",
    "start": "1014880",
    "end": "1020040"
  },
  {
    "text": "maybe it's",
    "start": "1020040",
    "end": "1022399"
  },
  {
    "text": "broken it's probably broken all right so yeah that's probably",
    "start": "1025919",
    "end": "1033160"
  },
  {
    "text": "actually because it's a big coub View and nobody uses search so every time that I hit this I'm like the first",
    "start": "1033160",
    "end": "1038480"
  },
  {
    "text": "person in a week and it has to regenerate the view um okay you can see",
    "start": "1038480",
    "end": "1043760"
  },
  {
    "text": "the most useful thing is probably this guy here this most depended on so these are the modules that like for all intent",
    "start": "1043760",
    "end": "1050360"
  },
  {
    "text": "of purposes everybody's using you can see that everyone really does use underscore it's incredibly useful um not",
    "start": "1050360",
    "end": "1057919"
  },
  {
    "text": "like 500 packages are written in coffee script so 500 packages require coffee",
    "start": "1057919",
    "end": "1064240"
  },
  {
    "text": "script um that number gets a little bit skewed because like everybody who ever",
    "start": "1064240",
    "end": "1069480"
  },
  {
    "text": "does anything in Coffey script has to require this all right moving along",
    "start": "1069480",
    "end": "1075840"
  },
  {
    "text": "Optimist Prime okay um Optimist is",
    "start": "1075840",
    "end": "1082280"
  },
  {
    "text": "awesome all right this is Optimist uh this is written by substack most modules",
    "start": "1082280",
    "end": "1088200"
  },
  {
    "text": "you will use end up being written by substack um he is somewhat",
    "start": "1088200",
    "end": "1094840"
  },
  {
    "text": "prolific it's a very simple option parser that does all the things that you need in a really simple package um you",
    "start": "1094840",
    "end": "1101080"
  },
  {
    "text": "can see here that you require Optimist and then it's just going to automatically parse the process. ARs but it's not going to overwrite the process.",
    "start": "1101080",
    "end": "1107559"
  },
  {
    "text": "ARs because that would be evil all it's doing is providing you with a new",
    "start": "1107559",
    "end": "1113760"
  },
  {
    "text": "RV and we can see there that I didn't pass it anything so it doesn't get very much stuff but then like oh I can",
    "start": "1113760",
    "end": "1119360"
  },
  {
    "text": "actually get stuff and then and then like f that and",
    "start": "1119360",
    "end": "1124480"
  },
  {
    "text": "then there we go see lots of useful parsing and it sort of handles like every weird parse case that you would",
    "start": "1124760",
    "end": "1130640"
  },
  {
    "text": "want to do like I can do you know I think this works yep see that",
    "start": "1130640",
    "end": "1137520"
  },
  {
    "text": "works okay",
    "start": "1137520",
    "end": "1140720"
  },
  {
    "text": "okay you can write your own usage which is very nice um and you can also demand",
    "start": "1143320",
    "end": "1149400"
  },
  {
    "text": "that certain things are required so like let's run tojs okay that console.log call never",
    "start": "1149400",
    "end": "1156720"
  },
  {
    "text": "happened and it printed the usage and the required arguments because I didn't give it some of the required arguments",
    "start": "1156720",
    "end": "1161880"
  },
  {
    "text": "very very simple stuff if I go ahead and give it those it'll actually run to that",
    "start": "1161880",
    "end": "1169320"
  },
  {
    "text": "very simple here hold",
    "start": "1169320",
    "end": "1175440"
  },
  {
    "text": "on whoops okay all right uh we can also set",
    "start": "1175919",
    "end": "1182400"
  },
  {
    "text": "defaults just saying defaults around options so that when I run three.js those will be",
    "start": "1182400",
    "end": "1190000"
  },
  {
    "text": "there um",
    "start": "1190919",
    "end": "1195960"
  },
  {
    "text": "that okay uh this is a really simple script this C lines in a file it demands",
    "start": "1196159",
    "end": "1202200"
  },
  {
    "text": "that you give f it aliases F to file which is incredibly useful um and then it will describe the option for you and",
    "start": "1202200",
    "end": "1209360"
  },
  {
    "text": "if I don't give it it's actually prints really really useful uses information so it describes the file thing it says that",
    "start": "1209360",
    "end": "1215400"
  },
  {
    "text": "it's Alias to this other guy and it says that it's required so if I give that let's give that D- file equals",
    "start": "1215400",
    "end": "1222600"
  },
  {
    "text": "4js 17 lines are in that file very interesting okay",
    "start": "1222600",
    "end": "1229120"
  },
  {
    "text": "uh now we're moving into request okay so I wrote this",
    "start": "1229120",
    "end": "1235960"
  },
  {
    "text": "Library I think it's awesome uh some other people seem to think so it's very",
    "start": "1235960",
    "end": "1242280"
  },
  {
    "text": "well used and depended on um node has a very very good htb client in it already",
    "start": "1242280",
    "end": "1249640"
  },
  {
    "text": "it's very good it's very complete I know I've worked on it a lot um it's just a",
    "start": "1249640",
    "end": "1255080"
  },
  {
    "text": "little bit verbose and it's a little bit hard to do really simple things you end up writing a lot of lines to do things",
    "start": "1255080",
    "end": "1260120"
  },
  {
    "text": "like buffering the response um and there's just a lot of little tiny features in HTTP and the client that you",
    "start": "1260120",
    "end": "1266440"
  },
  {
    "text": "just want to support you know like cookies or you want to do like proxying like we saw earlier so i' show you some",
    "start": "1266440",
    "end": "1272400"
  },
  {
    "text": "of the things that you can do with this higher order HB client so let's get Google this is going to take forever um",
    "start": "1272400",
    "end": "1278960"
  },
  {
    "text": "and then we're going to print the entire body which comes in uh as an argument to the call",
    "start": "1278960",
    "end": "1285360"
  },
  {
    "text": "back then we're going to wait for AT&T all right there we go there's lots",
    "start": "1287080",
    "end": "1294760"
  },
  {
    "text": "of minified JavaScript all over google.com so that was really easy and",
    "start": "1294760",
    "end": "1301279"
  },
  {
    "text": "useful show me more okay all right here we go here we're um",
    "start": "1301279",
    "end": "1309880"
  },
  {
    "text": "we're going to take the Earl for the Google doodle uh hilarious and uh we're going",
    "start": "1309880",
    "end": "1318200"
  },
  {
    "text": "to write it to a file so all we do is we request that Earl and then we pipe that",
    "start": "1318200",
    "end": "1324559"
  },
  {
    "text": "object the request object to a new fs. WR stream this is the core file writer",
    "start": "1324559",
    "end": "1331039"
  },
  {
    "text": "object with that new image path",
    "start": "1331039",
    "end": "1337360"
  },
  {
    "text": "six this will take a little while to run too because images are big okay and oh",
    "start": "1337880",
    "end": "1343440"
  },
  {
    "text": "there's the doodle and let's open it and make sure that it works yes it does you don't care care about the continental",
    "start": "1343440",
    "end": "1349480"
  },
  {
    "text": "breakfast at the caterer that I'm thinking about all [Music]",
    "start": "1349480",
    "end": "1355600"
  },
  {
    "text": "right uh okay that was great all right here we go now we're going to take uh the doodle",
    "start": "1355600",
    "end": "1363320"
  },
  {
    "text": "that we just wrote to the file system um and then we're getting this this new guy here this new file Arrow um and then",
    "start": "1363320",
    "end": "1370120"
  },
  {
    "text": "we're going to write this little HTTP server that opens a WR stream to Google 2 and writes whatever the input is to a",
    "start": "1370120",
    "end": "1377960"
  },
  {
    "text": "file and then at the end of the file it's going to do this response this is just standard sort of node HTTP server",
    "start": "1377960",
    "end": "1383159"
  },
  {
    "text": "stuff and so we create a read stream of the Google doodle and we pipe that to a",
    "start": "1383159",
    "end": "1388840"
  },
  {
    "text": "request. put call so this is actually taking the body of the image and piping it to the server and the server is just",
    "start": "1388840",
    "end": "1394120"
  },
  {
    "text": "going to write it out to a file so we can make sure that it worked correctly everybody get that good okay awesome you",
    "start": "1394120",
    "end": "1401159"
  },
  {
    "text": "were all Network programmers oh I also printed the stuff",
    "start": "1401159",
    "end": "1406400"
  },
  {
    "text": "that was really oh yeah because it's all my local system things are much faster when you don't go through AT&T's",
    "start": "1406400",
    "end": "1413000"
  },
  {
    "text": "network hey it works everything's fine another nice thing um that you can",
    "start": "1413000",
    "end": "1418960"
  },
  {
    "text": "see here is that I just closed this server after the end of the the first call here node would have stayed open",
    "start": "1418960",
    "end": "1424880"
  },
  {
    "text": "indefinitely if I just would have listened and not closed it uh but also when nothing is left in nodes event system it just exits cleanly it's really",
    "start": "1424880",
    "end": "1432520"
  },
  {
    "text": "useful um okay especially if you've dealt with python Python's like impossible to make it just",
    "start": "1432520",
    "end": "1439039"
  },
  {
    "text": "close just stop um really hates it okay so this is",
    "start": "1439039",
    "end": "1447200"
  },
  {
    "text": "similar but what we're going to do here is we're actually going to get the Google doodle again from Google then",
    "start": "1447200",
    "end": "1452559"
  },
  {
    "text": "we're going to pipe the call that we get to a new request output object to that",
    "start": "1452559",
    "end": "1459640"
  },
  {
    "text": "same bit of code that was writing to the file system this is useful um in node because",
    "start": "1459640",
    "end": "1467760"
  },
  {
    "text": "like you'll notice that all these objects are stream objects they're all going to get data as it comes off of the network they're not going to keep more",
    "start": "1467760",
    "end": "1473799"
  },
  {
    "text": "than one chunk ever in memory like because we're piping all of this data as soon as this chunk comes in and gets",
    "start": "1473799",
    "end": "1479120"
  },
  {
    "text": "emitted it's just going to get written out to wherever it needs to go this is how node handles so many inflight connections it's not just that you know",
    "start": "1479120",
    "end": "1485960"
  },
  {
    "text": "it's asynchronous and it uses eole it's that in your application you don't keep around more data than you need you just",
    "start": "1485960",
    "end": "1491559"
  },
  {
    "text": "pass it off to the next file Handler all right that's number eight",
    "start": "1491559",
    "end": "1498440"
  },
  {
    "text": "I'm sure you believe that these work but I'm just going to run them anyway so that you know that I know how to write",
    "start": "1498440",
    "end": "1503480"
  },
  {
    "text": "code watch it fail okay see this is a very interesting",
    "start": "1503480",
    "end": "1508760"
  },
  {
    "text": "thing about this one this had way more headers in it because what we ended up doing here was taking this get call and",
    "start": "1508760",
    "end": "1515799"
  },
  {
    "text": "then we piped the the request object to another request object that's doing a put so it actually took all of the",
    "start": "1515799",
    "end": "1522679"
  },
  {
    "text": "response headers and use them as right headers which is super useful because this means that if you take data from a",
    "start": "1522679",
    "end": "1528399"
  },
  {
    "text": "web service and then you write it to another web service it's going to keep the content type intact and it's going",
    "start": "1528399",
    "end": "1534760"
  },
  {
    "text": "to keep the content length intact and all those other nice good headers that make everything more useful I got a sign",
    "start": "1534760",
    "end": "1540279"
  },
  {
    "text": "I don't know how much time that means how much time five minutes five minutes",
    "start": "1540279",
    "end": "1547120"
  },
  {
    "text": "okay you believe oh no this one's really cool though okay this is the one line",
    "start": "1547120",
    "end": "1552640"
  },
  {
    "text": "proxy that we showed earlier but you can see that it actually works",
    "start": "1552640",
    "end": "1557880"
  },
  {
    "text": "1337 God I'm a",
    "start": "1563000",
    "end": "1566399"
  },
  {
    "text": "dork really you're in offline mode so you can't talk to local hosts you",
    "start": "1569960",
    "end": "1575720"
  },
  {
    "text": " all right there we go see look we can talk to",
    "start": "1576480",
    "end": "1582000"
  },
  {
    "text": "Google uh this is all being proxied locally awesome stuff good times",
    "start": "1582000",
    "end": "1590039"
  },
  {
    "text": "um okay now we're on to new cool hotness sag iio socket iio is the new hotness",
    "start": "1591320",
    "end": "1598520"
  },
  {
    "text": "because real time the new hotness this is a really nice trick you take an idea that already exists like bake sales and",
    "start": "1598520",
    "end": "1604960"
  },
  {
    "text": "then you add real time to it and then your real time bake sales and then you go to a VC and you get millions of",
    "start": "1604960",
    "end": "1612320"
  },
  {
    "text": "dollars um",
    "start": "1613279",
    "end": "1617279"
  },
  {
    "text": "oh we should look at this code it's actually kind of complicated okay so we have this HTML page and this",
    "start": "1619080",
    "end": "1626919"
  },
  {
    "text": "JavaScript this is our server um all it does is it serves up this 10. HTML as",
    "start": "1626919",
    "end": "1632520"
  },
  {
    "text": "the index if you get on slash and then uh it also sets up a socket IO that",
    "start": "1632520",
    "end": "1638880"
  },
  {
    "text": "listens on that server and for every connection that comes in it actually takes the",
    "start": "1638880",
    "end": "1646600"
  },
  {
    "text": "process.st standard in output and writes it to the websocket so that's some crazy",
    "start": "1646600",
    "end": "1652960"
  },
  {
    "text": "magic and then here all we do is we set up a new socket IO client we take all",
    "start": "1652960",
    "end": "1659120"
  },
  {
    "text": "the data and we write it to the console and we also write it to this um element right",
    "start": "1659120",
    "end": "1664799"
  },
  {
    "text": "here so let's run that guy hope that it",
    "start": "1664799",
    "end": "1670799"
  },
  {
    "text": "works okay did I do 337 again because I'm",
    "start": "1670799",
    "end": "1676840"
  },
  {
    "text": "dark yes",
    "start": "1676840",
    "end": "1680120"
  },
  {
    "text": "did okay there we",
    "start": "1690320",
    "end": "1695519"
  },
  {
    "text": "go come on guy I did this last time oh there it goes see now it's sending the",
    "start": "1697360",
    "end": "1703559"
  },
  {
    "text": "actual data I don't know why there was oh there's a lag in process. in handling that's what's the problem is hey I wrote",
    "start": "1703559",
    "end": "1709480"
  },
  {
    "text": "it and it's really happening in real time I",
    "start": "1709480",
    "end": "1713919"
  },
  {
    "text": "promise oh it's already there okay it's really hard to show on one",
    "start": "1715559",
    "end": "1722120"
  },
  {
    "text": "screen everything that's happening oh you know what I could just do this this is what windowing was made",
    "start": "1722120",
    "end": "1730399"
  },
  {
    "text": "for come on",
    "start": "1734519",
    "end": "1738679"
  },
  {
    "text": "oh look at how fast that is all [Applause]",
    "start": "1742000",
    "end": "1749760"
  },
  {
    "text": "right okay now I have about 40 seconds for",
    "start": "1749760",
    "end": "1755240"
  },
  {
    "text": "questions so you can ask a question but the answer has to only take 40 seconds",
    "start": "1755240",
    "end": "1761480"
  },
  {
    "text": "you okay so the question is um can he take a response pass it to a function",
    "start": "1761480",
    "end": "1768559"
  },
  {
    "text": "and then pass that to another web service and the answer is yes but there",
    "start": "1768559",
    "end": "1773600"
  },
  {
    "text": "there is one caveat so in all the examples that I showed um we didn't do anything in between taking the data and",
    "start": "1773600",
    "end": "1779399"
  },
  {
    "text": "just sending it off like we we inspected the data and did stuff with it but right away we wrote it um if you're taking in",
    "start": "1779399",
    "end": "1785720"
  },
  {
    "text": "input in a stream and then you want to go off and ask a question over IO like you want to ask a question to redus that",
    "start": "1785720",
    "end": "1791640"
  },
  {
    "text": "stream is already emitting data it's already going to be emitting data and you need to buffer that um if you want",
    "start": "1791640",
    "end": "1797320"
  },
  {
    "text": "to send it off to another another web service off in the future whenever that other call back happens from that IO action so that's the only added",
    "start": "1797320",
    "end": "1803320"
  },
  {
    "text": "complexity when you add in a call back um like an application layer callback I assume that the Callback is to go off",
    "start": "1803320",
    "end": "1808760"
  },
  {
    "text": "and do IO because you would just add a call back for no reason um but yeah that's that's a problem that we're",
    "start": "1808760",
    "end": "1813840"
  },
  {
    "text": "actually dealing with um in a future version of node uh streams will when you open a stream it will open in a pause",
    "start": "1813840",
    "end": "1820039"
  },
  {
    "text": "State and when you pause it it will emit it won't emit data so you'll be able to just pause that stream and it'll hold on",
    "start": "1820039",
    "end": "1825360"
  },
  {
    "text": "to the data until you give it off to the next input so so we're we're working on making that easier so you don't have to buffer by hand but all of the really",
    "start": "1825360",
    "end": "1832320"
  },
  {
    "text": "popular web Frameworks right now I mean my framework Taco Express like most people that have to deal with this",
    "start": "1832320",
    "end": "1837840"
  },
  {
    "text": "problem they have some sort of buffer in built in production high performance load balancing I mean I use it in production",
    "start": "1837840",
    "end": "1845559"
  },
  {
    "text": "uh substack uses it in production all of node jitsu's hosting platform uses node for the load balancer in production um I",
    "start": "1845559",
    "end": "1852559"
  },
  {
    "text": "mean you get different order you get different performance depending on what your load looks like um no jitsu's proxy",
    "start": "1852559",
    "end": "1858880"
  },
  {
    "text": "it's all open source but they do a lot of fancy stuff I mean they do a lot of rewriting of headers and so they don't",
    "start": "1858880",
    "end": "1864880"
  },
  {
    "text": "get as many concurrent connections as I do I I have a pure TCP proxy that sits behind stud and just round Robins all of",
    "start": "1864880",
    "end": "1871960"
  },
  {
    "text": "my like everything behind the scenes so I get like 10 times as many concurrent connections as they do um but yeah I",
    "start": "1871960",
    "end": "1878000"
  },
  {
    "text": "mean you definitely can do it many people do do it in production thank you all done awesome",
    "start": "1878000",
    "end": "1884120"
  },
  {
    "text": "thank you [Applause]",
    "start": "1884120",
    "end": "1889259"
  },
  {
    "text": "[Music]",
    "start": "1889490",
    "end": "1897940"
  }
]