[
  {
    "start": "0",
    "end": "135000"
  },
  {
    "text": "companies from atlassian to capital one use commander's open source automation platform to build better customer",
    "start": "1040",
    "end": "6720"
  },
  {
    "text": "experiences faster no matter where the process is or what it entails commander helps automate any",
    "start": "6720",
    "end": "12480"
  },
  {
    "text": "process anywhere learn more at commanda.com",
    "start": "12480",
    "end": "17639"
  },
  {
    "text": "hello and welcome to the infocu podcast i'm charles humble one of the co-hosts of the show and editor-in-chief at cloud",
    "start": "19920",
    "end": "27039"
  },
  {
    "text": "native consultancy firm container solutions today i'm joined by sam newman",
    "start": "27039",
    "end": "32558"
  },
  {
    "text": "sam is an independent consultant and is the author of a number of books including two on microservices monolith",
    "start": "32559",
    "end": "38399"
  },
  {
    "text": "to microservices which has been the subject of a previous infocus podcast and building microservices the second",
    "start": "38399",
    "end": "44160"
  },
  {
    "text": "edition of the latter is just out and having just finished reading it i was keen to talk to sam to find out more",
    "start": "44160",
    "end": "49520"
  },
  {
    "text": "about what has changed between the new edition and the first version which was published in 2015.",
    "start": "49520",
    "end": "55440"
  },
  {
    "text": "microservices will also be one of the tracks at qcon plus the software developer conference which will be back",
    "start": "55440",
    "end": "61520"
  },
  {
    "text": "this november the 1st to the 12th online qcon plus features 16 tracks created by",
    "start": "61520",
    "end": "67600"
  },
  {
    "text": "domain experts to focus on the topics that matter right now in software as well as the microservice patterns and",
    "start": "67600",
    "end": "74159"
  },
  {
    "text": "anti-patterns track other tracks covered this november include the cloud operating model from remote to hybrid",
    "start": "74159",
    "end": "80240"
  },
  {
    "text": "teams and architectures you've always wondered about at qcon plus you can find out what should be on your radar from the world's",
    "start": "80240",
    "end": "86880"
  },
  {
    "text": "most innovative software leaders driving change and innovation each will share with you their solutions best practices",
    "start": "86880",
    "end": "93840"
  },
  {
    "text": "and actionable insights to reduce uncertainty on which technologies should be part of your roadmap we hope to see",
    "start": "93840",
    "end": "100079"
  },
  {
    "text": "you online this november you can visit qcon dot plus for more information and",
    "start": "100079",
    "end": "105119"
  },
  {
    "text": "with that sam welcome back to the infiq podcast thank you very much for having me congratulations on getting the second",
    "start": "105119",
    "end": "112079"
  },
  {
    "text": "edition of the microservices book out there i think it's a fantastic book i've just finished reading the early access",
    "start": "112079",
    "end": "117360"
  },
  {
    "text": "version and i believe as we're recording this the second edition is going to print and we'll be out in the next month",
    "start": "117360",
    "end": "123360"
  },
  {
    "text": "we'll say i was interested by some of the things that have changed and in particular you talk a lot more about information hiding",
    "start": "123360",
    "end": "129520"
  },
  {
    "text": "in the second edition drawing on david parnassa's work can you talk about that why you feel it's so important when i",
    "start": "129520",
    "end": "135840"
  },
  {
    "text": "wrote the first edition i think we were just dealing with what people were doing we were looking at this architecture",
    "start": "135840",
    "end": "141360"
  },
  {
    "text": "looking at that architecture and just seeing the different style of soa that microservices was becoming and",
    "start": "141360",
    "end": "148319"
  },
  {
    "text": "it was almost as a process of just almost recording what people were doing rather than trying at that stage you",
    "start": "148319",
    "end": "154959"
  },
  {
    "text": "didn't really have the time or the energy to be able to distill down",
    "start": "154959",
    "end": "160160"
  },
  {
    "text": "the essence of what unified these approaches a bit of a way of saying but basically there was too much stuff going",
    "start": "160160",
    "end": "166640"
  },
  {
    "text": "on and there was no time to step back and have a bit of a think about what",
    "start": "166640",
    "end": "172480"
  },
  {
    "text": "were the core ideas at play here we could see there was something different but not what a lot of the early focus",
    "start": "172480",
    "end": "177599"
  },
  {
    "text": "was on other things and after time and energy looking at it and throughout writing the first edition i kind of",
    "start": "177599",
    "end": "183360"
  },
  {
    "text": "zeroed in on this idea of this independent deployability as being the big hook for microservices but then in",
    "start": "183360",
    "end": "190239"
  },
  {
    "text": "the intervening time after writing that first edition i spent time working with people who",
    "start": "190239",
    "end": "195360"
  },
  {
    "text": "were struggling to deliver on that and i realized talking about independent deployability was great but how do you",
    "start": "195360",
    "end": "201840"
  },
  {
    "text": "achieve it and so i'd been put on the trail of information hiding during the first edition martin fowler who helped",
    "start": "201840",
    "end": "207840"
  },
  {
    "text": "review the first book and mentioned it i do cover it in passing and thinking the first edition but i came back to that",
    "start": "207840",
    "end": "213519"
  },
  {
    "text": "concept as well is this the hook for the hook in a way if you get information hiding right does it therefore make",
    "start": "213519",
    "end": "220400"
  },
  {
    "text": "independent deployability much easier and i realize that actually it does and if you go back to the original work by",
    "start": "220400",
    "end": "226640"
  },
  {
    "text": "parnasse when he's talking about information hiding as a way of building good modular architectures",
    "start": "226640",
    "end": "232480"
  },
  {
    "text": "the concepts of what we want from independent deployability are right there and stuff he wrote back in the early 70s and so you know at the",
    "start": "232480",
    "end": "239599"
  },
  {
    "text": "beginning of last year i'd kind of come full circle almost thinking of microservices really fundamentally as",
    "start": "239599",
    "end": "245599"
  },
  {
    "text": "being a modular architecture albeit a modular architecture with the complexity",
    "start": "245599",
    "end": "251280"
  },
  {
    "text": "of a distributed system and so therefore taking parnasso's advice about information hiding made even more sense",
    "start": "251280",
    "end": "257840"
  },
  {
    "text": "in that context so that's kind of where it came from so the first edition the worlds are chaotic and i have no time to",
    "start": "257840",
    "end": "264720"
  },
  {
    "text": "work out what the hell's going on i'm just capturing the good advice and then in the second edition i've had a bit of",
    "start": "264720",
    "end": "269919"
  },
  {
    "text": "time to think there's some core hooks i think that are important to emphasize more in the second edition to hopefully",
    "start": "269919",
    "end": "276880"
  },
  {
    "text": "help people deliver better on the promises of micro services can you give a definition of exactly what you mean by",
    "start": "276880",
    "end": "284479"
  },
  {
    "start": "280000",
    "end": "422000"
  },
  {
    "text": "information hiding yeah i mean there's some specific definitions that parnassus uses in his work but the kind of one i",
    "start": "284479",
    "end": "290400"
  },
  {
    "text": "go to is that the default if you think about microservice boundary your default position is almost to you don't expose",
    "start": "290400",
    "end": "296639"
  },
  {
    "text": "anything so any information you expose so if you expose a method a data structure a piece of functionality to",
    "start": "296639",
    "end": "303919"
  },
  {
    "text": "something outside of your microservice boundary well then an external consumer can make use of that and so once they",
    "start": "303919",
    "end": "310639"
  },
  {
    "text": "make use of that they then effectively have a contract between you and them it's an interface they're using",
    "start": "310639",
    "end": "317280"
  },
  {
    "text": "once they have an expectation about how that function works about the presence of that piece of data that then makes it",
    "start": "317280",
    "end": "324400"
  },
  {
    "text": "harder for you to change your microservice without breaking them if you want independent deployability",
    "start": "324400",
    "end": "329759"
  },
  {
    "text": "you need backwards compatibility by hiding things inside your service boundary the things inside your service",
    "start": "329759",
    "end": "336960"
  },
  {
    "text": "boundary can change without fear of breaking your external consumers so it's almost like partly",
    "start": "336960",
    "end": "343280"
  },
  {
    "text": "saying things that are hidden can change easily and things that are shared are part of your contract you have to be very careful about how they change if",
    "start": "343280",
    "end": "350240"
  },
  {
    "text": "you want proper independent deployability the more you hide the more freedom you have as a developer working",
    "start": "350240",
    "end": "357120"
  },
  {
    "text": "on a microservice to change things safely you know i talk about information hiding really as just about clarity",
    "start": "357120",
    "end": "364160"
  },
  {
    "text": "being really clear to a developer as to what things can be changed fairly safely and are not going to have nasty ripple",
    "start": "364160",
    "end": "370560"
  },
  {
    "text": "effects in production developers don't go to their day job wanting to break computer systems they want to do a job",
    "start": "370560",
    "end": "376560"
  },
  {
    "text": "and with information hiding right you're saying this world this stuff is hidden no one else can see it that's yours",
    "start": "376560",
    "end": "382080"
  },
  {
    "text": "anything you change in there it's going to be okay now anything in this part of your code base this is where you're",
    "start": "382080",
    "end": "387840"
  },
  {
    "text": "shared with other parties the outside consumers you need to be really careful in that world",
    "start": "387840",
    "end": "393600"
  },
  {
    "text": "so this is where you're exposing your rest endpoints your grpc endpoints and",
    "start": "393600",
    "end": "398639"
  },
  {
    "text": "whatever kind of external contracts you might have and so when you change anything in that world you need to have",
    "start": "398639",
    "end": "404560"
  },
  {
    "text": "safeguards in place to make sure that you don't break people accidentally this is why i'm a big fan of explicit contracts for service interfaces things",
    "start": "404560",
    "end": "411919"
  },
  {
    "text": "like consumer different contracts but information hiding allows you to really focus that energy and work on the small",
    "start": "411919",
    "end": "418000"
  },
  {
    "text": "parts of your microsoft code base which actually are used by other parties and then for those bits that you are",
    "start": "418000",
    "end": "423840"
  },
  {
    "start": "422000",
    "end": "528000"
  },
  {
    "text": "exposing to other parties how do you then control that do you have some sort of schema do you have some sort of",
    "start": "423840",
    "end": "430960"
  },
  {
    "text": "contract that defines what isn't isn't allowed there for me again this is something i've",
    "start": "430960",
    "end": "436319"
  },
  {
    "text": "definitely come full circle on i got burned using soap many users did and you",
    "start": "436319",
    "end": "441759"
  },
  {
    "text": "know when we reacted again we threw soap away because it was for a lot of reasons none of them were good reasons but one",
    "start": "441759",
    "end": "448160"
  },
  {
    "text": "of the things we threw away there was the concept of the schema you know whistle not great schema format in my opinion but we got rid of that schema",
    "start": "448160",
    "end": "455199"
  },
  {
    "text": "format and then you know most people now are doing service interactions with implicit schemas rather than explicit",
    "start": "455199",
    "end": "461120"
  },
  {
    "text": "schemas i agree with martin fall on this you always do have a schema between how a client and service communicates if you",
    "start": "461120",
    "end": "467440"
  },
  {
    "text": "don't have an explicit schema the client still has expectations on what it thinks your endpoint should do there is a",
    "start": "467440",
    "end": "473919"
  },
  {
    "text": "schema it's just now entirely implicit so having an explicit schema allows you",
    "start": "473919",
    "end": "479199"
  },
  {
    "text": "to be really clear so i definitely prefer now having explicit schemas for my service endpoints and that clarity",
    "start": "479199",
    "end": "486319"
  },
  {
    "text": "gives you clarity for consumers of your microservice as to the structure of your service interfaces but it also gives you",
    "start": "486319",
    "end": "492720"
  },
  {
    "text": "clarity as a person implementing that microservice as to what you signed up for now schemes can only help with the",
    "start": "492720",
    "end": "498879"
  },
  {
    "text": "structure but that's still incredibly valuable especially when you consider there's good tooling out there to",
    "start": "498879",
    "end": "505199"
  },
  {
    "text": "compare two different versions of an explicit schema and tell you if one is backwards compatible or not which is",
    "start": "505199",
    "end": "511440"
  },
  {
    "text": "something you can then put into a simple build process so even before you deploy your microservice you might be able to",
    "start": "511440",
    "end": "517760"
  },
  {
    "text": "pick up breaking changes in service compatibility which is just you know amazingly great and so much simpler than",
    "start": "517760",
    "end": "525040"
  },
  {
    "text": "say having to have like lots of large test cycles and things right yes you've talked a little bit",
    "start": "525040",
    "end": "530560"
  },
  {
    "start": "528000",
    "end": "667000"
  },
  {
    "text": "about service boundaries already here and obviously eric evans domain driven design has become firmly established as",
    "start": "530560",
    "end": "536720"
  },
  {
    "text": "one of the kind of key texts for people thinking about building microservices you particularly mentioned bounded",
    "start": "536720",
    "end": "543200"
  },
  {
    "text": "context and aggregates in the book but you also talk about ubiquitous language this idea of having a shared language",
    "start": "543200",
    "end": "548959"
  },
  {
    "text": "between the business and the language used in the code itself and although it seems kind of obvious i think it's one",
    "start": "548959",
    "end": "554080"
  },
  {
    "text": "of those things that kind of weirdly gets missed a lot could you talk about that why you think it's important and",
    "start": "554080",
    "end": "559360"
  },
  {
    "text": "maybe also why you think people often don't pay attention to it the ubiquitous language in many ways is the keystone of",
    "start": "559360",
    "end": "565519"
  },
  {
    "text": "domain-driven design and it's amazing how many people skip it and it's foundational i think a lot of the reason",
    "start": "565519",
    "end": "570720"
  },
  {
    "text": "that people skip ubiquitous language is because to understand what terms and terminology are used by the business",
    "start": "570720",
    "end": "576959"
  },
  {
    "text": "side of your organization by the use of your software it involves having to talk to people it still stuns me how many",
    "start": "576959",
    "end": "583519"
  },
  {
    "text": "enterprise architects have come up with a domain model by themselves without ever having spoken to anybody outside of",
    "start": "583519",
    "end": "589600"
  },
  {
    "text": "it so this fundamentally the ubiquitous language starts with having",
    "start": "589600",
    "end": "594640"
  },
  {
    "text": "conversations this is why i like event storming as a dimension design technique because it places primacy on having that kind of",
    "start": "594640",
    "end": "602320"
  },
  {
    "text": "collective brainstorming activity where you get sort of maybe your non-developer your non-technical stakeholders in the room",
    "start": "602320",
    "end": "609120"
  },
  {
    "text": "and listen to what they're talking about and you're picking up their terms their terminology and you're trying to put",
    "start": "609120",
    "end": "616079"
  },
  {
    "text": "those terms into your code this is ultimately what brings some of the biggest value from domain driven design",
    "start": "616079",
    "end": "621920"
  },
  {
    "text": "a developer joining that code base where the terms and terminology use are the same that are used in the business the",
    "start": "621920",
    "end": "628000"
  },
  {
    "text": "same ideas in people's heads inside the organization a developer working on that code base is going to become a better",
    "start": "628000",
    "end": "634240"
  },
  {
    "text": "domain expert and will be much more able to have conversations with people outside their development team and use",
    "start": "634240",
    "end": "640959"
  },
  {
    "text": "the right terms this is partly about aiding communication is also i think a big part about building empathy without",
    "start": "640959",
    "end": "647200"
  },
  {
    "text": "that i think it's very hard to have these great collective relationships and so i think it's something you can't skip",
    "start": "647200",
    "end": "653120"
  },
  {
    "text": "i think if you do skip i think it invalidates so much of what comes i mean ultimately the language is how we name",
    "start": "653120",
    "end": "659600"
  },
  {
    "text": "the concepts if you decide to skip the whole step of understanding what that common language is the concepts you come",
    "start": "659600",
    "end": "665519"
  },
  {
    "text": "up with are similarly devalued we should perhaps touch on what an aggregate is as well because there are quite a few",
    "start": "665519",
    "end": "671040"
  },
  {
    "start": "667000",
    "end": "795000"
  },
  {
    "text": "different definitions out there do you have a preferred one that you use i'm pretty sure the one i use is just a",
    "start": "671040",
    "end": "677200"
  },
  {
    "text": "bit of an amalgamation of how eric describes them and how martin describes them which is you know it's a collection",
    "start": "677200",
    "end": "682880"
  },
  {
    "text": "of objects which you always want to manage together from a point of view of state management which is a very dry",
    "start": "682880",
    "end": "689120"
  },
  {
    "text": "definition they're typically things that have state and identity and often they",
    "start": "689120",
    "end": "694160"
  },
  {
    "text": "represent real world concepts almost the canonical example of this might be an order aggregate right so you can think",
    "start": "694160",
    "end": "700240"
  },
  {
    "text": "of an order aggregate as something you place that the order might have stages it goes through but you could think",
    "start": "700240",
    "end": "706160"
  },
  {
    "text": "about it from a data point of view that an order might have say an order table that maybe each row represents a state",
    "start": "706160",
    "end": "712320"
  },
  {
    "text": "of one order this might be the customer id maybe the shipping location is going to but that will then also have",
    "start": "712320",
    "end": "718480"
  },
  {
    "text": "associated with it many order line items so each item you have purchased maybe a quantity what the item is and how much",
    "start": "718480",
    "end": "725600"
  },
  {
    "text": "the item costs collectively that represents the concept of an order in",
    "start": "725600",
    "end": "730800"
  },
  {
    "text": "that domain but from an implementation detail point of view we might have to manage that state in two separate tables",
    "start": "730800",
    "end": "736959"
  },
  {
    "text": "assuming we're using kind of a standard relational model but you'd always want to manage those order line items and the",
    "start": "736959",
    "end": "743040"
  },
  {
    "text": "top line order record together as a single unit so it's also this core concept around thinking about aggregates",
    "start": "743040",
    "end": "749279"
  },
  {
    "text": "so not only should they really represent real world concepts but also that from a transactional management point of view",
    "start": "749279",
    "end": "754720"
  },
  {
    "text": "we'd always want to keep the management of an aggregate within a single transactional boundary and so even when",
    "start": "754720",
    "end": "759760"
  },
  {
    "text": "you're breaking say monolithic systems apart into microservice architectures if you're using a domain driven design",
    "start": "759760",
    "end": "765440"
  },
  {
    "text": "approach as you identify those aggregates you still want to kind of keep the ownership of an aggregate with",
    "start": "765440",
    "end": "771519"
  },
  {
    "text": "inside a single microservice because that then allows you to effectively you can always then implement the management",
    "start": "771519",
    "end": "777839"
  },
  {
    "text": "of those aggregates like a state machine and have a single microservice managing that state machine and so really it's",
    "start": "777839",
    "end": "783440"
  },
  {
    "text": "kind of where at the high level domain-driven design is all about talking and interaction with non-technical stakeholders but at the",
    "start": "783440",
    "end": "789519"
  },
  {
    "text": "more detailed level around aggregates it does move much more into how we think about state management to things as well",
    "start": "789519",
    "end": "795360"
  },
  {
    "start": "795000",
    "end": "863000"
  },
  {
    "text": "and can one microservice handle the life cycle and data storage of more than one",
    "start": "795360",
    "end": "800639"
  },
  {
    "text": "aggregate yes and that's quite common so you could have a microservice might encapsulate say five or it might manage",
    "start": "800639",
    "end": "807920"
  },
  {
    "text": "two three four five ten fifteen twenty different aggregates inside it so the idea is that you say each aggregate",
    "start": "807920",
    "end": "814160"
  },
  {
    "text": "you'd probably order associated with one microservice but one microservice might manage many aggregates we could have a",
    "start": "814160",
    "end": "819600"
  },
  {
    "text": "domain model for how microservices handle domain models effectively if you wanted to from that point of view and",
    "start": "819600",
    "end": "825199"
  },
  {
    "text": "often you know this is where kind of lots of people get obsessed about the granularity of a microservice actually doesn't matter too much because there's",
    "start": "825199",
    "end": "831920"
  },
  {
    "text": "lots of different factors that go into size and that's probably a separate conversation some aggregates are incredibly simple to manage other",
    "start": "831920",
    "end": "839120"
  },
  {
    "text": "aggregates the logic around them and the algorithmic complexity around those aggregates might be much more developed",
    "start": "839120",
    "end": "845839"
  },
  {
    "text": "so we can't say that's got 25 aggregates in it therefore it's doing too much because those aggregates might be",
    "start": "845839",
    "end": "851120"
  },
  {
    "text": "incredibly simple things or they might be incredibly complicated things that",
    "start": "851120",
    "end": "856399"
  },
  {
    "text": "are highly critical to your organization so yes you know it's not immediately cause for concern if that's happening and can",
    "start": "856399",
    "end": "863600"
  },
  {
    "start": "863000",
    "end": "922000"
  },
  {
    "text": "aggregates have relationships to other aggregates yeah and then the example i",
    "start": "863600",
    "end": "868639"
  },
  {
    "text": "gave before with the sort of the order as being one of the canonical examples of an aggregate an order is placed by a",
    "start": "868639",
    "end": "874880"
  },
  {
    "text": "customer so you know you would imagine in your relational data model you'd have the order line in your order table and",
    "start": "874880",
    "end": "880800"
  },
  {
    "text": "that would have an id for the customer that placed that order and that is effectively how from an implementation",
    "start": "880800",
    "end": "886000"
  },
  {
    "text": "point of view we're showing the relationships between aggregates and now obviously with a microservice architecture where this gets interesting",
    "start": "886000",
    "end": "892560"
  },
  {
    "text": "is that the aggregate that one you might relate to so maybe when my order relates to a customer that customer aggregate",
    "start": "892560",
    "end": "898959"
  },
  {
    "text": "might actually manage by a separate microservice somewhere else so you still have kind of almost a logical concept of",
    "start": "898959",
    "end": "905199"
  },
  {
    "text": "something like a foreign key relationship but that foreign key relationship is effectively now pointing",
    "start": "905199",
    "end": "910240"
  },
  {
    "text": "you not to another table inside the boundary of that microservice but it's now pointing you to an aggregate managed",
    "start": "910240",
    "end": "917040"
  },
  {
    "text": "by a separate microservice that you would have to resolve that relationship probably via some kind of service call",
    "start": "917040",
    "end": "922720"
  },
  {
    "start": "922000",
    "end": "1063000"
  },
  {
    "text": "great thank you another thing that has a lot of definitions is actually bounded context so could you maybe give us a",
    "start": "922720",
    "end": "928000"
  },
  {
    "text": "definition for them as well oh this is you know you ever heard the phrase when someone's you know monads are like",
    "start": "928000",
    "end": "933120"
  },
  {
    "text": "burritos it is a bit like this about context there are so many different definitions out there again i like",
    "start": "933120",
    "end": "938720"
  },
  {
    "text": "eric's original definition of it which talks really about a bounded context like a cell in biology but the way to",
    "start": "938720",
    "end": "945440"
  },
  {
    "text": "think about it is think about your organization your organization has lots of different bits to do lots of different things you've got the finance",
    "start": "945440",
    "end": "951759"
  },
  {
    "text": "department who handle like you know they do all sorts of things they manage your accounts receivable they manage your payroll you've got the warehouse team",
    "start": "951759",
    "end": "958880"
  },
  {
    "text": "who manage the stock that you have and shipping products from the outside you kind of have a high level idea about",
    "start": "958880",
    "end": "964959"
  },
  {
    "text": "what the warehouse does you understand that the warehouse is responsible for the stock that it carries receiving",
    "start": "964959",
    "end": "971839"
  },
  {
    "text": "goods shipping products out but you don't need to know the detail of how the warehouse does it you don't need to care",
    "start": "971839",
    "end": "977519"
  },
  {
    "text": "about how many shelves there are in your warehouse you don't need to care from the outside which forklift trucks that",
    "start": "977519",
    "end": "982800"
  },
  {
    "text": "they've got you just need to know they do a job a bounded context is effectively a way of us modeling these",
    "start": "982800",
    "end": "988480"
  },
  {
    "text": "kind of groups of functionality within a domain model so from the outside the",
    "start": "988480",
    "end": "993920"
  },
  {
    "text": "bounded context allows you to kind of access some sort of higher level concepts and ideas like i can check the",
    "start": "993920",
    "end": "1000160"
  },
  {
    "text": "stock level with the warehouse inside the bounded context we have all the detail and all the aggregates as we came",
    "start": "1000160",
    "end": "1006800"
  },
  {
    "text": "to be talked about before that might be required to implement the functionality of that given warehouse banner context",
    "start": "1006800",
    "end": "1014240"
  },
  {
    "text": "so really banner contacts are all about information hiding so from the outside you see an explicit boundary with",
    "start": "1014240",
    "end": "1021519"
  },
  {
    "text": "explicit responsibilities that it provides to the wider system inside that boundaries all the details",
    "start": "1021519",
    "end": "1026959"
  },
  {
    "text": "but that's hidden from you you need to engage with that detail if you're working inside that bounded context so",
    "start": "1026959",
    "end": "1032880"
  },
  {
    "text": "banner context really are how you implement the concept of information",
    "start": "1032880",
    "end": "1038000"
  },
  {
    "text": "hiding in domain driven design i'm not sure if that was originally the intention of what eric was talking about",
    "start": "1038000",
    "end": "1044640"
  },
  {
    "text": "it's been a while since i read the full blue book i'm not sure if information hiding is explicitly referenced in domain driven design but for my money",
    "start": "1044640",
    "end": "1051600"
  },
  {
    "text": "this is it right this is the connection in the same way that encapsulation is an example of information hiding in",
    "start": "1051600",
    "end": "1057600"
  },
  {
    "text": "object-oriented programming bounded contexts are an example of information hiding in domain-driven design now we've",
    "start": "1057600",
    "end": "1063600"
  },
  {
    "start": "1063000",
    "end": "1254000"
  },
  {
    "text": "said that microservices are basically a form of modular architecture and we've been talking about domain-driven design",
    "start": "1063600",
    "end": "1069600"
  },
  {
    "text": "in that context thinking about decomposition presumably dimension design isn't the only game in",
    "start": "1069600",
    "end": "1076000"
  },
  {
    "text": "town what other approaches or techniques are there that might be useful or helpful if indeed they're already yes so",
    "start": "1076000",
    "end": "1084000"
  },
  {
    "text": "i find that the main driven design is the best general purpose approach to decomposition but whenever i'm sort of",
    "start": "1084000",
    "end": "1090320"
  },
  {
    "text": "working with a team trying to find boundaries i'm not going to look at just a domain model in isolation i'm going to",
    "start": "1090320",
    "end": "1096000"
  },
  {
    "text": "overlay other concepts on top and they might help you tweak because if you think about it there's often a degree of",
    "start": "1096000",
    "end": "1102480"
  },
  {
    "text": "subjectivity in terms of where you draw some of these boundaries especially when you get into the bounded context it could be some fluffiness so the other",
    "start": "1102480",
    "end": "1109280"
  },
  {
    "text": "things that i like to bring into sort of scope in terms of helping find those boundaries are going to be the organizational structure you know",
    "start": "1109280",
    "end": "1115200"
  },
  {
    "text": "typically people are adopting micro services to speed up delivery is not always the case but for a large amount of people that's what they're trying to",
    "start": "1115200",
    "end": "1120880"
  },
  {
    "text": "do so looking at where your boundaries of your architecture are without looking at the boundaries of your organization would be",
    "start": "1120880",
    "end": "1127120"
  },
  {
    "text": "a bit crazy i mean obviously you would expect your domain model in the bounded context especially you would normally",
    "start": "1127120",
    "end": "1133520"
  },
  {
    "text": "follow your organizational structures anyway but not always so overlaying that organizational structure is worthwhile",
    "start": "1133520",
    "end": "1139760"
  },
  {
    "text": "often because you realize the organizational structures then got a problem other overlays that can be useful is looking at things like",
    "start": "1139760",
    "end": "1145360"
  },
  {
    "text": "volatility so are there parts of your code base that are changing more frequently than other parts of your code base now again for me this is an overlay",
    "start": "1145360",
    "end": "1153200"
  },
  {
    "text": "not a place i'd start with so if you're decomposing an existing monolithic structure it might be good to know which",
    "start": "1153200",
    "end": "1158640"
  },
  {
    "text": "parts your code base changes more frequently there are some sort of general purpose decompositional techniques i don't like i mean the",
    "start": "1158640",
    "end": "1165120"
  },
  {
    "text": "classic example will be things like the three-tiered architectures because i don't think they make much sense as a",
    "start": "1165120",
    "end": "1170160"
  },
  {
    "text": "way of actually speeding up delivery really they're based on old-fashioned concepts around manufacturing theory",
    "start": "1170160",
    "end": "1175280"
  },
  {
    "text": "which don't really work and we know they haven't worked for 40 years so things like the three-tiered architectures",
    "start": "1175280",
    "end": "1180720"
  },
  {
    "text": "you know they don't tend to be a good approach if you're trying to speed up delivery although often fixing 3d architectures often means also changing",
    "start": "1180720",
    "end": "1187600"
  },
  {
    "text": "all structures which is a different thing again this is also why i dislike things like pace laid architectures or",
    "start": "1187600",
    "end": "1193280"
  },
  {
    "text": "bimodal it which are just often concepts from insert name of big analyst firm here to",
    "start": "1193280",
    "end": "1200559"
  },
  {
    "text": "allow enterprise organizations to not actually have to change anything they do and so to codify their current very slow",
    "start": "1200559",
    "end": "1207280"
  },
  {
    "text": "pace of change so in general i avoid layered architectures you can sort of simplistically say that",
    "start": "1207280",
    "end": "1213760"
  },
  {
    "text": "what we're trying to do with microservices is talk about maybe more end-to-end vertical slices",
    "start": "1213760",
    "end": "1218960"
  },
  {
    "text": "and move away from a previous world of predominantly being horizontal layered",
    "start": "1218960",
    "end": "1225200"
  },
  {
    "text": "slices when you want to deliver a piece of functionality with a layered architecture you often have to change",
    "start": "1225200",
    "end": "1230240"
  },
  {
    "text": "multiple different layers and if those layers are owned by different teams that results in lots of handoffs which slows",
    "start": "1230240",
    "end": "1236400"
  },
  {
    "text": "you down if we can move to a world where we're predominantly talking about end-to-end vertical slices then we're",
    "start": "1236400",
    "end": "1242559"
  },
  {
    "text": "hoping that the changes that we want to roll out for our customers are more likely to sit within those vertical",
    "start": "1242559",
    "end": "1247840"
  },
  {
    "text": "slices and we can speed up delivery that's simplistically kind of the reason i'm trying to move people away from",
    "start": "1247840",
    "end": "1253039"
  },
  {
    "text": "layered architectures now one of the things that's covered much more extensively in the second edition of the",
    "start": "1253039",
    "end": "1258480"
  },
  {
    "start": "1254000",
    "end": "1551000"
  },
  {
    "text": "book than the first is around decomposition and ui and one of the things you talk about",
    "start": "1258480",
    "end": "1264720"
  },
  {
    "text": "is that you prefer to see non-dedicated front-end teams you prefer to see the",
    "start": "1264720",
    "end": "1270799"
  },
  {
    "text": "front-end people as part of the team responsible for a given microservice and you argue that it's a mistake to have a",
    "start": "1270799",
    "end": "1277120"
  },
  {
    "text": "dedicated frontend team it's always seemed to me that there are quite persuasive reasons for going the other",
    "start": "1277120",
    "end": "1283120"
  },
  {
    "text": "way on that obviously ui is a specialist skill good front engineers are hard to find",
    "start": "1283120",
    "end": "1288559"
  },
  {
    "text": "a single microservice team might not be able to keep a front-end person sufficiently busy",
    "start": "1288559",
    "end": "1293600"
  },
  {
    "text": "and in theory at least having a single front-end team gives you a more consistent ui so i was interested in your view on that",
    "start": "1293600",
    "end": "1300720"
  },
  {
    "text": "why do you think having a centralized team here is a mistake i think all of those arguments are good arguments i",
    "start": "1300720",
    "end": "1306559"
  },
  {
    "text": "think you could also have made all those arguments around a centralized dba function a centralized security function",
    "start": "1306559",
    "end": "1312960"
  },
  {
    "text": "a test function an infrastructure function you know an ops function and those are good arguments and in many",
    "start": "1312960",
    "end": "1318720"
  },
  {
    "text": "cases make a lot of sense but we've also recognized that we want to bring some of those functions into our team and that's",
    "start": "1318720",
    "end": "1324960"
  },
  {
    "text": "made us better now we've traded some things off around that absolutely so for me i think it's another example of a",
    "start": "1324960",
    "end": "1330480"
  },
  {
    "text": "problem that we've been dealing with over the last of 20 years or so which is we've had centralized specialist",
    "start": "1330480",
    "end": "1337280"
  },
  {
    "text": "functions which allow you to have a team structures which are fundamentally",
    "start": "1337280",
    "end": "1342480"
  },
  {
    "text": "around your core competency right you have the ui developers and the ui development team and they're specialists",
    "start": "1342480",
    "end": "1348480"
  },
  {
    "text": "you have the dbas and the specialist team the challenge is those handoffs i mentioned before when you had a separate",
    "start": "1348480",
    "end": "1354559"
  },
  {
    "text": "dev team a separate support team a separate test team a separate infrastructure and ops team a separate",
    "start": "1354559",
    "end": "1360159"
  },
  {
    "text": "security team to deliver software you've got all these handoffs that happen and that just slows us down right so we've",
    "start": "1360159",
    "end": "1365760"
  },
  {
    "text": "been putting those functions in and so for me the ui is just a continuation of that idea i think there are some",
    "start": "1365760",
    "end": "1371200"
  },
  {
    "text": "specific challenges in making those ui teams work though so if if i now own",
    "start": "1371200",
    "end": "1376559"
  },
  {
    "text": "delivery of an end-to-end slice of customer functionality inside my team that i can go a lot faster because we",
    "start": "1376559",
    "end": "1383120"
  },
  {
    "text": "can come up with an idea myself from the ui and remember you can still have front-end specialists inside a team we",
    "start": "1383120",
    "end": "1388880"
  },
  {
    "text": "can work together to deliver that change and put it out but also i remember this thing that happened with dba functionality when we started moving dba",
    "start": "1388880",
    "end": "1395919"
  },
  {
    "text": "work more into delivery teams it used to be that the dba has do all the dba work and some of the dba work was really hard",
    "start": "1395919",
    "end": "1402880"
  },
  {
    "text": "and a lot of the dba work was really simple like adding a column and so what",
    "start": "1402880",
    "end": "1408080"
  },
  {
    "text": "happened was when we started pulling dba work more into development teams is it freed up your dba specialists to do the",
    "start": "1408080",
    "end": "1414960"
  },
  {
    "text": "hard stuff and you could have developers do the easy low hanging through so for me i think if you pull your front end",
    "start": "1414960",
    "end": "1421360"
  },
  {
    "text": "functions into your teams there are simple front end things that a server side developer absolutely can do in the",
    "start": "1421360",
    "end": "1427360"
  },
  {
    "text": "same way that there are some simple suicide things that a front-end developer can do so you're giving people",
    "start": "1427360",
    "end": "1432480"
  },
  {
    "text": "the opportunity to grow their skill set you're kind of creating a i hate using the word term full stack because i'm",
    "start": "1432480",
    "end": "1438400"
  },
  {
    "text": "with charity majors on this you're not a full stack developer unless you also build the chips but more of a full stack team than a full stack developer then",
    "start": "1438400",
    "end": "1446000"
  },
  {
    "text": "you still can have a role for ui specialist but they're focusing on the hard stuff the thing you lose of course when you pull those front end teams into",
    "start": "1446000",
    "end": "1452720"
  },
  {
    "text": "your delivery team rather having dedicated is that lack of consistency in the same way that you might argue about",
    "start": "1452720",
    "end": "1458159"
  },
  {
    "text": "a lack of consistency in your data model now with microservices that's not an issue because we break our databases apart but with the ui this is very much",
    "start": "1458159",
    "end": "1465440"
  },
  {
    "text": "about how you present your this is your front of house your customers and you see some organizations that really seem",
    "start": "1465440",
    "end": "1472320"
  },
  {
    "text": "to be okay with having a high degree of inconsistency to their users amazon's a good example",
    "start": "1472320",
    "end": "1478400"
  },
  {
    "text": "that it used to be the amazon shopping site was quite poor from this point of view lots of inconsistency of",
    "start": "1478400",
    "end": "1483440"
  },
  {
    "text": "experiences that's got better but the aws web console is a great example of where you see this inconsistency in a",
    "start": "1483440",
    "end": "1489360"
  },
  {
    "text": "way it does i think harm the customer experience the trade-off for amazon is this allows us to go fast and guess what",
    "start": "1489360",
    "end": "1496320"
  },
  {
    "text": "it seems to be working for them but you can still do things around consistency of experience even if you have separate",
    "start": "1496320",
    "end": "1503520"
  },
  {
    "text": "ui teams examples of how you can do this is you could have enabling teams this is term from the team topologies book who",
    "start": "1503520",
    "end": "1509840"
  },
  {
    "text": "provide things like living css style guides they can be incredibly effective so you basically have some people that",
    "start": "1509840",
    "end": "1515679"
  },
  {
    "text": "collaborate to come up with like this is the style book we're going to use so everyone just inherits from that style book that's a simple change that you",
    "start": "1515679",
    "end": "1522240"
  },
  {
    "text": "could do that already helps you know unify things so i think you have to recognize that",
    "start": "1522240",
    "end": "1528400"
  },
  {
    "text": "you have lost some things by going from a dedicated front-end team to breaking them apart but you also might recognize",
    "start": "1528400",
    "end": "1534240"
  },
  {
    "text": "that there may be ways to deal with those downsides and even if those downsides still exist the upsides may still be worth it and in most",
    "start": "1534240",
    "end": "1540159"
  },
  {
    "text": "experiences especially when you're dealing with larger projects of work i definitely feel that avoiding that",
    "start": "1540159",
    "end": "1546400"
  },
  {
    "text": "separate second team needed to coordinate with work is vital it's interesting you",
    "start": "1546400",
    "end": "1552320"
  },
  {
    "start": "1551000",
    "end": "1715000"
  },
  {
    "text": "mentioned enabling teams there in your answer as well this idea from matthew skelton emmanuel pace is team topology's",
    "start": "1552320",
    "end": "1558400"
  },
  {
    "text": "book because i think that can also help with the underutilization problem that you might get yep absolutely and their",
    "start": "1558400",
    "end": "1565679"
  },
  {
    "text": "work came from looking at devops organizational structures and in there when we were looking at embracing the",
    "start": "1565679",
    "end": "1571279"
  },
  {
    "text": "concepts of devops we would often have this idea that you would now have specialists that didn't have enough work",
    "start": "1571279",
    "end": "1576720"
  },
  {
    "text": "in one team just be dedicated to one team and so you would have this kind of almost roving concept so as an ops",
    "start": "1576720",
    "end": "1582559"
  },
  {
    "text": "person i might spend half my time embedded with team a and half my time",
    "start": "1582559",
    "end": "1587840"
  },
  {
    "text": "embedded with team b and literally i used to play those roles i would go and sit in with those teams and i'd move to the other team you know later in the",
    "start": "1587840",
    "end": "1593919"
  },
  {
    "text": "week and we recognized that was a good way to deal with the lack of utilization of a specialist within a single team and",
    "start": "1593919",
    "end": "1600640"
  },
  {
    "text": "what they've done in the team topologies book is maybe kind of almost call that out more in the concept of having like",
    "start": "1600640",
    "end": "1607120"
  },
  {
    "text": "the enabling team structure the mindset behind team topology's book is your primary unit of delivery is what they",
    "start": "1607120",
    "end": "1613679"
  },
  {
    "text": "call the streamer line team right you have a team dedicated on to delivering a stream of",
    "start": "1613679",
    "end": "1618960"
  },
  {
    "text": "valuable work right so we focus on this part of our functionality and we deliver this we own that responsibility for",
    "start": "1618960",
    "end": "1625840"
  },
  {
    "text": "delivering and this is also also a shift of responsibility as well and then you have these enabling teams and their job",
    "start": "1625840",
    "end": "1631600"
  },
  {
    "text": "is not to control or not to say what does or doesn't happen their job is to enable so when you're in an enabling",
    "start": "1631600",
    "end": "1638080"
  },
  {
    "text": "team my job is to help the streaming line teams do their job and this again though is an important shift often those",
    "start": "1638080",
    "end": "1644240"
  },
  {
    "text": "people in their traditionally siloed roles were placed in a situation where not only did they have to do the work",
    "start": "1644240",
    "end": "1649440"
  },
  {
    "text": "but they were responsible for doing the work and they were accountable for any problems in that area as well now you're",
    "start": "1649440",
    "end": "1654720"
  },
  {
    "text": "kind of trying to invert that you're saying no no you're responsible for the ui i am responsible for helping you own",
    "start": "1654720",
    "end": "1661039"
  },
  {
    "text": "your ui and work out how we do that and so that that's a tricky switch you know",
    "start": "1661039",
    "end": "1666480"
  },
  {
    "text": "i think the biggest switch is not we don't have a central ui team anymore i think the biggest switch is understanding how much responsibility",
    "start": "1666480",
    "end": "1673440"
  },
  {
    "text": "can move and what teams are ready to take on board that responsibility and also the mindset on both parts right so",
    "start": "1673440",
    "end": "1680559"
  },
  {
    "text": "if you're used to being the person in charge of this part of piece of functionality or this responsibility be",
    "start": "1680559",
    "end": "1685919"
  },
  {
    "text": "as an ops person a security person a ui person and now you're being asked to sort of seed some of that responsibility",
    "start": "1685919",
    "end": "1693360"
  },
  {
    "text": "to other teams that can be difficult to do and it's almost like a consultancy mindset in a way that you have to adopt",
    "start": "1693360",
    "end": "1699200"
  },
  {
    "text": "which can be really really tricky but yeah if you want these sort of end-to-end fast delivering stream aligned teams to",
    "start": "1699200",
    "end": "1705440"
  },
  {
    "text": "work enabling teams are essential to make them because you will need help that's",
    "start": "1705440",
    "end": "1710480"
  },
  {
    "text": "why i really love the terminology they use enabling team i think is the right term for that in terms of ui",
    "start": "1710480",
    "end": "1716240"
  },
  {
    "start": "1715000",
    "end": "1972000"
  },
  {
    "text": "decomposition you offer a couple of different approaches in the book page based and widget based and for web apps",
    "start": "1716240",
    "end": "1722000"
  },
  {
    "text": "you lean towards page based can you talk about why that is i'm a bit old school i started off as a",
    "start": "1722000",
    "end": "1727919"
  },
  {
    "text": "web developer back in 1995 96 right so i was at university and i",
    "start": "1727919",
    "end": "1735440"
  },
  {
    "text": "made side money doing websites a lot of them involve little animated gifts of workmen saying this site is under construction",
    "start": "1735440",
    "end": "1741520"
  },
  {
    "text": "i remember them well i've done a few of those as well so there's a fundamental belief i have",
    "start": "1741520",
    "end": "1747039"
  },
  {
    "text": "that single page app experiences can be incredibly useful for delivering very rich styles of graphical user interfaces",
    "start": "1747039",
    "end": "1754240"
  },
  {
    "text": "on the web that were never envisaged as being the things we built on the web right so single page apps make sense in",
    "start": "1754240",
    "end": "1759360"
  },
  {
    "text": "certain locations but there's still a wide array of types of web-based user interfaces which makes sense as websites",
    "start": "1759360",
    "end": "1766480"
  },
  {
    "text": "i read the sydney morning herald a lot because i used to live in australia and it's probably the best way to get news about the nrl and so they have built",
    "start": "1766480",
    "end": "1774159"
  },
  {
    "text": "their news based website as a single page app and the experience is horrendous partly as a result of this it",
    "start": "1774159",
    "end": "1780799"
  },
  {
    "text": "would be much simpler for them to build it as a series of web pages now if you ever see other web pages each page can",
    "start": "1780799",
    "end": "1786080"
  },
  {
    "text": "be served up from different microservices it's a very easy decompositional look because then you're effectively using url routing as a way",
    "start": "1786080",
    "end": "1793360"
  },
  {
    "text": "of dispatching requests to different microservices what seems to have happened is the assumption now is that",
    "start": "1793360",
    "end": "1798960"
  },
  {
    "text": "every experience that we're going to deliver over web must be a single page app and therefore we have to pick one of",
    "start": "1798960",
    "end": "1805360"
  },
  {
    "text": "these single page app frameworks to build it there's some situations where it's justified but a lot where there isn't the key thing is no one ever",
    "start": "1805360",
    "end": "1811360"
  },
  {
    "text": "thinks anymore should it be a web page or should it be a single page app that switch doesn't seem to even be engaged",
    "start": "1811360",
    "end": "1816960"
  },
  {
    "text": "anymore and so as a result we end up building websites which are a lot more complicated than they often need to be",
    "start": "1816960",
    "end": "1823120"
  },
  {
    "text": "you know i did i can't remember what i think it was i did a check recently i think the apple home page at one point",
    "start": "1823120",
    "end": "1828399"
  },
  {
    "text": "had a page load size bigger than the alpine docker image right so i've got full-fledged linux operating systems",
    "start": "1828399",
    "end": "1835440"
  },
  {
    "text": "that are smaller than some web pages now and you know yes yeah sure it's cash and",
    "start": "1835440",
    "end": "1841360"
  },
  {
    "text": "everything else but it does seem that we've got a bit awry there and actually the problem is that this adoption of",
    "start": "1841360",
    "end": "1846399"
  },
  {
    "text": "single page apps is the way to do things has proved problematic because single page apps as they were originally",
    "start": "1846399",
    "end": "1852080"
  },
  {
    "text": "envisaged did not make modularization possible they weren't built with the concept of decomposition on the user",
    "start": "1852080",
    "end": "1858159"
  },
  {
    "text": "pane in mind again because a lot of the people that built those things did not",
    "start": "1858159",
    "end": "1863840"
  },
  {
    "text": "have a lot of experience of building user interfaces and i say this you know i used gwt for a while right so google",
    "start": "1863840",
    "end": "1870880"
  },
  {
    "text": "web toolkit i used this while i was working at google and that was built basically in such a way to try and",
    "start": "1870880",
    "end": "1877120"
  },
  {
    "text": "ignore the fact that the web even existed and you can't do that you know you look at you know angular which has been very very successful but the clues",
    "start": "1877120",
    "end": "1884480"
  },
  {
    "text": "single page app i am the app i own the browser it is mine there's no concept of",
    "start": "1884480",
    "end": "1890720"
  },
  {
    "text": "breaking that apart so it took us like a good five years before we started seeing approaches to",
    "start": "1890720",
    "end": "1896159"
  },
  {
    "text": "allow us to sort of decompose those single page apps in ways that allowed for different",
    "start": "1896159",
    "end": "1902799"
  },
  {
    "text": "parts of that ui to be updated at different frequencies and it's astonishing to me that we had",
    "start": "1902799",
    "end": "1909200"
  },
  {
    "text": "solutions for that on the web 10 years ago 20 years ago and we've waited like",
    "start": "1909200",
    "end": "1915519"
  },
  {
    "text": "years until single page apps have something similar so often the reason i've seen dedicated",
    "start": "1915519",
    "end": "1922320"
  },
  {
    "text": "front-end teams has been because of a decision to adopt single-page app frameworks that cannot be broken apart",
    "start": "1922320",
    "end": "1928720"
  },
  {
    "text": "easily or historically couldn't be and so for me it's like just ask the question could it be a web page could it",
    "start": "1928720",
    "end": "1934880"
  },
  {
    "text": "be a web page because if so your life from a decompositional viewpoint can be significantly easier because now you've",
    "start": "1934880",
    "end": "1941519"
  },
  {
    "text": "got the option of decomposing your ui around pages and even within an individual page you could then further",
    "start": "1941519",
    "end": "1948559"
  },
  {
    "text": "decompose it in terms of widgets now if your app has to be a single page app because that's the kind of experience",
    "start": "1948559",
    "end": "1953760"
  },
  {
    "text": "you want to create and that's absolutely fine but then you're going to have to look into solutions around micro front end effectively in terms of having a",
    "start": "1953760",
    "end": "1960559"
  },
  {
    "text": "container app and then having separate apps you swap in and then being able to communicate sort of between those",
    "start": "1960559",
    "end": "1965600"
  },
  {
    "text": "components within the browser pane which adds complexity as that stuff has historically been an afterthought with the single page app frameworks",
    "start": "1965600",
    "end": "1972320"
  },
  {
    "start": "1972000",
    "end": "2115000"
  },
  {
    "text": "right yes we've talked about micro front ends before actually words did an interview with lucas mesolieri who is vp",
    "start": "1972320",
    "end": "1979360"
  },
  {
    "text": "of engineering at the zone and they talked about micro frontends on that episode of the podcast so i'll link to that in the show notes i've not used",
    "start": "1979360",
    "end": "1986159"
  },
  {
    "text": "them in anger but instinctively it's an approach i quite like at least if you're working with a single page app do they",
    "start": "1986159",
    "end": "1991840"
  },
  {
    "text": "have any particular problems that you're aware of there's a couple of particular issues you need to watch for with a",
    "start": "1991840",
    "end": "1997120"
  },
  {
    "text": "single page now i like the approach assuming you really do need a single page app i think it's a good thing to do so i think that's thing if you can",
    "start": "1997120",
    "end": "2002799"
  },
  {
    "text": "justify using single paycheck frameworks using some of the micro front-end frameworks make a lot of sense there are",
    "start": "2002799",
    "end": "2007840"
  },
  {
    "text": "still some caveats around it the first thing i'm going to carry out all this by saying i do not spend my life doing front-end development anymore so you",
    "start": "2007840",
    "end": "2014799"
  },
  {
    "text": "need to take some as the pinch of salt although i have spoken to experts in this space the couple of the issues really you'll think about are well the",
    "start": "2014799",
    "end": "2021120"
  },
  {
    "text": "page load size can get kind of interesting so you can have say two apps",
    "start": "2021120",
    "end": "2026399"
  },
  {
    "text": "that you spliced into the same browser pane using a micro frontend framework if they're using two different say point",
    "start": "2026399",
    "end": "2032320"
  },
  {
    "text": "releases or even minor point releases of the same single page app framework their list of transitive dependencies can be",
    "start": "2032320",
    "end": "2039279"
  },
  {
    "text": "quite different so although they might all depend even though app a and app b might all depend on the same library",
    "start": "2039279",
    "end": "2045679"
  },
  {
    "text": "they might all depend on slightly different version to the same live just because of how the transit dependency chains work and so you're gonna have to",
    "start": "2045679",
    "end": "2052240"
  },
  {
    "text": "bring those in and sandbox them all inside that browser pane now imagine you've got four five ten fifteen",
    "start": "2052240",
    "end": "2057599"
  },
  {
    "text": "different single page apps that are just there to develop simple widgets you can actually see a much larger page load",
    "start": "2057599",
    "end": "2064320"
  },
  {
    "text": "size occur as a result so that can be problematic now of course one way to deal with that is say",
    "start": "2064320",
    "end": "2069520"
  },
  {
    "text": "everyone's got to use the same version and then of course you undermine the whole ability to be able to roll out these single page apps so that's one of",
    "start": "2069520",
    "end": "2076320"
  },
  {
    "text": "the big issues i see i think the other one is kind of just how you handle the communication between them the thing is",
    "start": "2076320",
    "end": "2081839"
  },
  {
    "text": "by definition that there'll be solutions in the vue community and in the angular community and in the react community about how you solve these types of",
    "start": "2081839",
    "end": "2087760"
  },
  {
    "text": "problems but also kind of ideally what you want with micro frontend stuff is almost to be language agnostic in a way",
    "start": "2087760",
    "end": "2093679"
  },
  {
    "text": "as well because there are organizations that have wanted to move say from angular to view and if their application",
    "start": "2093679",
    "end": "2100000"
  },
  {
    "text": "was a single monolithic piece that's a huge migration but if you use micro front ends you could then migrate a",
    "start": "2100000",
    "end": "2105520"
  },
  {
    "text": "piece at a time over to view and that i think is a great thing about micro front ends but then you've got to work out how",
    "start": "2105520",
    "end": "2111839"
  },
  {
    "text": "you do the comms basically between those components yeah we're coming to the end of our time",
    "start": "2111839",
    "end": "2117440"
  },
  {
    "start": "2115000",
    "end": "2327000"
  },
  {
    "text": "there's one other thing i wanted to quickly pick up which is that in the second edition of the book you are very",
    "start": "2117440",
    "end": "2123200"
  },
  {
    "text": "assertive about not doing end-to-end tests much more so i think than in the first version of the book",
    "start": "2123200",
    "end": "2129200"
  },
  {
    "text": "and i was curious about that why is that he's in the first book but i was equivocating a lot more i remember",
    "start": "2129200",
    "end": "2134240"
  },
  {
    "text": "getting the feedback at the time which is don't equivocate in the first edition if you believe it just saying it's like well i'm not sure and in a second i'm",
    "start": "2134240",
    "end": "2140640"
  },
  {
    "text": "like yeah no i really don't think we should be doing it and i want to be really clear about this what i say is as you move from say a single process",
    "start": "2140640",
    "end": "2146800"
  },
  {
    "text": "monolithic system to a distributed microservice architecture end-to-end tests become a lot more expensive to",
    "start": "2146800",
    "end": "2154000"
  },
  {
    "text": "write and they become a lot less valuable now you'll get a lot more false negatives right they will fail for",
    "start": "2154000",
    "end": "2159920"
  },
  {
    "text": "reasons that aren't down to your software they'll be more and more expensive to create them in the first place because a test scope becomes",
    "start": "2159920",
    "end": "2165839"
  },
  {
    "text": "broader when they fail it's harder to find out what caused them to fail and they're not going to necessarily give",
    "start": "2165839",
    "end": "2171920"
  },
  {
    "text": "you the same degree of confidence around system issues as you may have had with a simpler non-distributed system so",
    "start": "2171920",
    "end": "2179599"
  },
  {
    "text": "over time you'll find that you're spending more and more time and energy on your end-to-end tests and getting",
    "start": "2179599",
    "end": "2185200"
  },
  {
    "text": "less and less value so i kind of almost see it as like a sliding scale as as you become more distributed you want to put",
    "start": "2185200",
    "end": "2192000"
  },
  {
    "text": "less energy into your end-to-end test you're going to bring that effort and energy down and put that effort and",
    "start": "2192000",
    "end": "2197520"
  },
  {
    "text": "energy it's not a zero-sum game right you're going to need to shift some of that energy into looking at firstly",
    "start": "2197520",
    "end": "2204000"
  },
  {
    "text": "different types of testing and i would argue that consumer and contract testing can be really effective in terms of",
    "start": "2204000",
    "end": "2210079"
  },
  {
    "text": "picking up some of the things that you would have picked up with end-to-end tests i think schema compatibility checking can also pick up some of the",
    "start": "2210079",
    "end": "2216560"
  },
  {
    "text": "issues that end-to-end tests would have picked up and then you're also putting some of that effort and energy into",
    "start": "2216560",
    "end": "2221839"
  },
  {
    "text": "doing more work in production so you're doing things like parallel runs you're doing things like automated remediation",
    "start": "2221839",
    "end": "2228880"
  },
  {
    "text": "and canary releases and things like that i mean fundamentally i think we have a problem that we've always seen the world",
    "start": "2228880",
    "end": "2234640"
  },
  {
    "text": "as there's testing and then there's production and they're two different worlds and really it's what the",
    "start": "2234640",
    "end": "2240560"
  },
  {
    "text": "activities we do actually quite conceptually when you're testing you're trying to validate is this software good",
    "start": "2240560",
    "end": "2246079"
  },
  {
    "text": "enough and in production we have all this monitoring stuff you can't see the air quotes i'm doing at quotes and monitoring which is saying is our",
    "start": "2246079",
    "end": "2252640"
  },
  {
    "text": "software good enough we're asking the same question using totally different tools",
    "start": "2252640",
    "end": "2258320"
  },
  {
    "text": "but i do think there's a lot of that verification of our software that could be done in a production environment and",
    "start": "2258320",
    "end": "2263520"
  },
  {
    "text": "should be done in a production environment that will be better and in some cases it looks a lot like",
    "start": "2263520",
    "end": "2268560"
  },
  {
    "text": "old end-to-end testing so for me as a system becomes more distributed your end-to-end tests are going to become more expensive less valuable to divert",
    "start": "2268560",
    "end": "2276640"
  },
  {
    "text": "some energy into other types of verification look at schema compatibility checking which i think is",
    "start": "2276640",
    "end": "2281920"
  },
  {
    "text": "analogous to sort of typing in statically typed languages consumers even contract taking for picking up",
    "start": "2281920",
    "end": "2287200"
  },
  {
    "text": "semantic breakages canaries maybe parallel runs certainly for some types",
    "start": "2287200",
    "end": "2292480"
  },
  {
    "text": "of functionality and all those things can help you pick up issues before a customer ever sees them that's great sam",
    "start": "2292480",
    "end": "2299359"
  },
  {
    "text": "thank you so much indeed for doing this it's been lovely to talk to you and thank you for joining us this week on the infa podcast you're welcome thanks",
    "start": "2299359",
    "end": "2305119"
  },
  {
    "text": "for having me",
    "start": "2305119",
    "end": "2308359"
  },
  {
    "text": "[Music]",
    "start": "2311190",
    "end": "2327210"
  },
  {
    "text": "you",
    "start": "2327520",
    "end": "2329599"
  }
]