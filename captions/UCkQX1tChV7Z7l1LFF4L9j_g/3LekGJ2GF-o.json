[
  {
    "text": "hello everyone hope you all had a fantastic week the keuken conference in",
    "start": "3939",
    "end": "9519"
  },
  {
    "text": "New York Capital One has been sponsoring this conference for the past several years and personally for me this is the",
    "start": "9519",
    "end": "17019"
  },
  {
    "text": "second visit last year I was here manning the booth for Capital One if curiosity got the better of some of",
    "start": "17019",
    "end": "24519"
  },
  {
    "text": "you in terms of thinking like what does a large financial institution have anything to do with serverless",
    "start": "24519",
    "end": "29979"
  },
  {
    "text": "architectures then you definitely are in the right talk my name is Shree Neapolitan I'm a vice",
    "start": "29979",
    "end": "38560"
  },
  {
    "text": "president in the consumer bank engineering team here at Capital One",
    "start": "38560",
    "end": "43620"
  },
  {
    "text": "within the bank me and my teams are responsible for a few different things when it comes to",
    "start": "43620",
    "end": "48940"
  },
  {
    "text": "the software delivery portfolio first and foremost all things related to payments money movement fraud building",
    "start": "48940",
    "end": "57940"
  },
  {
    "text": "real-time decisioning platforms to prevent fraud DevOps and then managing",
    "start": "57940",
    "end": "63370"
  },
  {
    "text": "the public cloud office for the consumer bank consumer bank engineering team is",
    "start": "63370",
    "end": "68979"
  },
  {
    "text": "primarily spread across three sites we have an engineering team in McLean Virginia we have a pretty large",
    "start": "68979",
    "end": "75819"
  },
  {
    "text": "engineering team in Delaware Wilmington and then lastly the New York office and",
    "start": "75819",
    "end": "80829"
  },
  {
    "text": "the New York office in 1 1 4 and 5th Avenue is quite fantastic and we have tremendous focus in terms of hiring",
    "start": "80829",
    "end": "87280"
  },
  {
    "text": "top-notch engineering talent in New York in the upcoming year the other",
    "start": "87280",
    "end": "96729"
  },
  {
    "text": "interesting thing about our multiple site strategy is we have pretty tight collaboration between product and tech",
    "start": "96729",
    "end": "102639"
  },
  {
    "text": "in each of our sites and we have a lean toward staffing cross-functional teams so that engineers can build awesome",
    "start": "102639",
    "end": "109479"
  },
  {
    "text": "digital experiences for our customers at each site you know we thought from soup to nuts without dependency from from",
    "start": "109479",
    "end": "115719"
  },
  {
    "text": "other sites Capital One is one of the top 10 largest banks within United",
    "start": "115719",
    "end": "121389"
  },
  {
    "text": "States we serve millions of customers across the country offering a range of",
    "start": "121389",
    "end": "127329"
  },
  {
    "text": "financial products from credit cards checking and savings accounts auto loans small business and commercial accounts",
    "start": "127329",
    "end": "134170"
  },
  {
    "text": "as well I'm going to kick us off in my portion",
    "start": "134170",
    "end": "141410"
  },
  {
    "text": "of the talk I'm going to kind of lead us through the existing architecture of Capital One systems then talk about the",
    "start": "141410",
    "end": "148760"
  },
  {
    "text": "increase in growth of our customers across our various digital channels and",
    "start": "148760",
    "end": "154040"
  },
  {
    "text": "what kind of challenges it presented itself and then kind of let the context to that and then lead us through this",
    "start": "154040",
    "end": "161240"
  },
  {
    "text": "project or platform that we have built called the transactions hub with a lean",
    "start": "161240",
    "end": "166400"
  },
  {
    "text": "towards serverless architectures and what kind of problems it alleviated in doing that and then I'll transition my",
    "start": "166400",
    "end": "173930"
  },
  {
    "text": "talk to one of my lead engineers cadence certainly who is going to build upon additional use cases in the bank that we",
    "start": "173930",
    "end": "181790"
  },
  {
    "text": "started to again leverage serverless architectures based on the success we had with the transactions hub so let me",
    "start": "181790",
    "end": "189380"
  },
  {
    "text": "dive in directly so traditionally the retail bank within Capital One has been",
    "start": "189380",
    "end": "195530"
  },
  {
    "text": "powered by a large monolith mainframe system when you think of a large monolith mainframe system it's pretty",
    "start": "195530",
    "end": "202040"
  },
  {
    "text": "much a bank in the box what I mean by that is this mainframe system has",
    "start": "202040",
    "end": "207230"
  },
  {
    "text": "customer information transaction information account information it's",
    "start": "207230",
    "end": "212360"
  },
  {
    "text": "pretty much the ledger that generates taxes and also statements the",
    "start": "212360",
    "end": "218209"
  },
  {
    "text": "traditional channels of mobile web as well as the branches where our customers walk in to service their accounts",
    "start": "218209",
    "end": "224650"
  },
  {
    "text": "integrate with our modern restful api platform that Capital One has heavily",
    "start": "224650",
    "end": "230000"
  },
  {
    "text": "invested in the recent years this restful api platform in addition we also",
    "start": "230000",
    "end": "236660"
  },
  {
    "text": "have our own API gateway internal to capital one that secures these api's for clients to securely integrate with them",
    "start": "236660",
    "end": "243080"
  },
  {
    "text": "and we also have a external device change portal that exposes these api's",
    "start": "243080",
    "end": "248780"
  },
  {
    "text": "to third-party merchants and also a dev exchange portal for our developers to play with our API so in addition to this",
    "start": "248780",
    "end": "257209"
  },
  {
    "text": "new restful api layer we have a legacy so player that interacts with this mainframe system now the channels talk",
    "start": "257209",
    "end": "265760"
  },
  {
    "text": "to the api is then to the soap layer and then eventually to the backend mainframe system to read and",
    "start": "265760",
    "end": "272310"
  },
  {
    "text": "write information in a nutshell the large financial institutions across the",
    "start": "272310",
    "end": "277560"
  },
  {
    "text": "whole world mimic this architecture today probably ten years ago 15 years",
    "start": "277560",
    "end": "283500"
  },
  {
    "text": "ago this architecture was fine but with the advent of cloud DevOps see ICD and new digital experiences that we are",
    "start": "283500",
    "end": "290099"
  },
  {
    "text": "building for customers we have seen some significant challenges with this architecture in the last two years and",
    "start": "290099",
    "end": "299310"
  },
  {
    "text": "more Capital One has made significant investments in their mobile platform both iOS and Android and our customers",
    "start": "299310",
    "end": "308280"
  },
  {
    "text": "have told us loud and clear how much they relish servicing their accounts on our industry best rated mobile",
    "start": "308280",
    "end": "314520"
  },
  {
    "text": "application basically we are seeing a study growth in consumer traffic",
    "start": "314520",
    "end": "320580"
  },
  {
    "text": "especially the new accounts and how they are servicing their financial accounts using your mobile application for",
    "start": "320580",
    "end": "326490"
  },
  {
    "text": "Capital One I have the good fortune of",
    "start": "326490",
    "end": "331650"
  },
  {
    "text": "collaboratively working with a brilliant product team at our multiple sites together product and tech are",
    "start": "331650",
    "end": "338570"
  },
  {
    "text": "collaboratively thinking about innovative digital experiences to make the financial lives of our customers",
    "start": "338570",
    "end": "344520"
  },
  {
    "text": "much better there is a problem with this the newer restful api is the newer",
    "start": "344520",
    "end": "350580"
  },
  {
    "text": "front-end digital experiences we are building all these applications and services are being deployed continuously",
    "start": "350580",
    "end": "358530"
  },
  {
    "text": "into the cloud using robust DevOps e ICD practices in some cases we deploy",
    "start": "358530",
    "end": "364560"
  },
  {
    "text": "multiple times into production in an audit compliant way which is unheard of in a large financial organization when",
    "start": "364560",
    "end": "372960"
  },
  {
    "text": "you think of the large mainframe system behind these services as I mentioned it was a bank in the box it becomes a",
    "start": "372960",
    "end": "380009"
  },
  {
    "text": "nightmare to push any kind of code changes really relatively faster and the challenge there really is a large",
    "start": "380009",
    "end": "386610"
  },
  {
    "text": "regression manual testing window if anytime you touch anything because of the kludgy dependencies and the web of",
    "start": "386610",
    "end": "392520"
  },
  {
    "text": "dependencies so suddenly we have a clash of the modern infrastructure that is getting continuously deployed into the",
    "start": "392520",
    "end": "398909"
  },
  {
    "text": "cloud and then the legacy mainframe infrastructure that not move as fast the net to result when",
    "start": "398909",
    "end": "406230"
  },
  {
    "text": "you think of the kind of products we want to ship and place them into the hands of third customers you know we are",
    "start": "406230",
    "end": "412140"
  },
  {
    "text": "severely challenged when it comes to speed to market so I'm kind of walking you guys through in terms of the",
    "start": "412140",
    "end": "417960"
  },
  {
    "text": "challenges that we as an organization started to face with some of the legacy architectures clashing with the modern",
    "start": "417960",
    "end": "424740"
  },
  {
    "text": "cloud DevOps architectures in addition to that we are offering some really",
    "start": "424740",
    "end": "431850"
  },
  {
    "text": "interesting digital tools for our customers in the mobile platform there are quite a few of them like the time to",
    "start": "431850",
    "end": "438180"
  },
  {
    "text": "share a couple of them one of the foremost thing being the zel person-to-person money movement",
    "start": "438180",
    "end": "443490"
  },
  {
    "text": "experience that makes it extremely easy fast and secure for our customers to",
    "start": "443490",
    "end": "451050"
  },
  {
    "text": "stay within the mobile application app for Capital One and seamlessly send and receive money from for their family and",
    "start": "451050",
    "end": "457950"
  },
  {
    "text": "friends who could be banking with other banks our customers love this zel",
    "start": "457950",
    "end": "463860"
  },
  {
    "text": "application and i'm pleased to announce that my engineering team has built a fantastic microservices architecture for",
    "start": "463860",
    "end": "472110"
  },
  {
    "text": "all the services that power up the zel experience and this is one area where in some cases we deploy multiple times each",
    "start": "472110",
    "end": "480090"
  },
  {
    "text": "single day into production and we are able to release these experiences frequently to our customers similar to",
    "start": "480090",
    "end": "486990"
  },
  {
    "text": "that our card customers today enjoy a feature called second look where capital",
    "start": "486990",
    "end": "492330"
  },
  {
    "text": "and systems monitor the account activity of a particular customer and proactively alert them through email alerts as well",
    "start": "492330",
    "end": "499530"
  },
  {
    "text": "as in mobile application notifications if we notice any transactions that we",
    "start": "499530",
    "end": "505920"
  },
  {
    "text": "think are suspicious proactively letting the customers know that they should take a second look at these transactions",
    "start": "505920",
    "end": "511350"
  },
  {
    "text": "because after all it is their money and it is an instant hit with our customers",
    "start": "511350",
    "end": "516690"
  },
  {
    "text": "too so these are few specific examples of digital tools we are continuously",
    "start": "516690",
    "end": "521880"
  },
  {
    "text": "innovating with our product team and offering these experiences to our customers in our digital channels so",
    "start": "521880",
    "end": "532710"
  },
  {
    "text": "a combination of study increase in growth in our mobile channel and other",
    "start": "532710",
    "end": "537990"
  },
  {
    "text": "digital channels in conjunction with the new digital experiences that we are offering for our customers during peak",
    "start": "537990",
    "end": "545490"
  },
  {
    "text": "volume traffic Thanksgiving as well as Christmastime we did see degradation in",
    "start": "545490",
    "end": "551730"
  },
  {
    "text": "performance of certain services that are reading and writing information from the mainframe systems and in some cases we",
    "start": "551730",
    "end": "561240"
  },
  {
    "text": "have seen stability issues too now one option on the table was to throws more money against the monolith mainframe",
    "start": "561240",
    "end": "568890"
  },
  {
    "text": "system make it more resilient increase the cpu performance cycles and make it faster but that's necessarily not the",
    "start": "568890",
    "end": "575340"
  },
  {
    "text": "direction we as an engineering team wanted to go anyhow that was really the",
    "start": "575340",
    "end": "582120"
  },
  {
    "text": "trigger for us to really remediate some of the challenges that we have been facing and the biggest thing to solve",
    "start": "582120",
    "end": "589470"
  },
  {
    "text": "for in this situation is like where exactly do we start when I when I talk about a bank in the box where exactly do",
    "start": "589470",
    "end": "594960"
  },
  {
    "text": "we start on closer introspection and analysis we figured out that 80% of the",
    "start": "594960",
    "end": "600270"
  },
  {
    "text": "read queries against mainframe they're all hinged against customers trying to retrieve their financial transactional",
    "start": "600270",
    "end": "607350"
  },
  {
    "text": "data and that was our biggest opportunity and that gave us the focus needed and we sat on to establish a",
    "start": "607350",
    "end": "614790"
  },
  {
    "text": "project or a platform called transactions hub in the cloud and our",
    "start": "614790",
    "end": "619860"
  },
  {
    "text": "high-level goals were to cache the customers transactional data billions of",
    "start": "619860",
    "end": "625050"
  },
  {
    "text": "transactions securely into the cloud migrate the traffic off of the mainframe system to the cloud and then ease the",
    "start": "625050",
    "end": "631950"
  },
  {
    "text": "pain make it such that it performs faster but more importantly resilient and scalable for additional growth as we",
    "start": "631950",
    "end": "639630"
  },
  {
    "text": "continue to build customer friendly products and experiences so based on",
    "start": "639630",
    "end": "647310"
  },
  {
    "text": "what I spoke so far there are when you think about the solution that need to be developed or built there are few major",
    "start": "647310",
    "end": "653040"
  },
  {
    "text": "work streams first and foremost what data store do we choose in the cloud and the goal here is like billions of",
    "start": "653040",
    "end": "660210"
  },
  {
    "text": "customer financial transactions must be stored in that data store we decided to go with dynamodb",
    "start": "660210",
    "end": "665960"
  },
  {
    "text": "but few reasons first of all it's a managed service and we really like that about dynamodb we want fast response",
    "start": "665960",
    "end": "673340"
  },
  {
    "text": "times when it compares to reads against the data store on dynamodb with its cache solution that is on offering",
    "start": "673340",
    "end": "680170"
  },
  {
    "text": "definitely meets the mark on that but more importantly the ecosystem of",
    "start": "680170",
    "end": "685910"
  },
  {
    "text": "DynamoDB lambda functions and DynamoDB streams was really enticing for us",
    "start": "685910",
    "end": "691160"
  },
  {
    "text": "because strategically we had a need to stream transactional data to upstream",
    "start": "691160",
    "end": "697220"
  },
  {
    "text": "applications to open up new digital experiences for example we can start generating statements in the cloud and",
    "start": "697220",
    "end": "703520"
  },
  {
    "text": "then we can think about real time fraud detection as another example so there are so many plethora of use cases that",
    "start": "703520",
    "end": "710960"
  },
  {
    "text": "would open up once you unlock the transactional data from mainframe systems and make it available for",
    "start": "710960",
    "end": "716540"
  },
  {
    "text": "readily to be consumed in the cloud the next important work stream is billions",
    "start": "716540",
    "end": "723440"
  },
  {
    "text": "of customer transactions how do we bootstrap or prime the data from the",
    "start": "723440",
    "end": "728570"
  },
  {
    "text": "mainframe system and make it available in dynamo DB another critical work",
    "start": "728570",
    "end": "734360"
  },
  {
    "text": "stream is how do we keep both the data stores in sync near real-time and ensure",
    "start": "734360",
    "end": "740300"
  },
  {
    "text": "that there is data integrity between the mainframe system and DynamoDB in the cloud once you solve for these things",
    "start": "740300",
    "end": "747520"
  },
  {
    "text": "the next thing would really be building a new gay transactions API in the cloud",
    "start": "747520",
    "end": "753320"
  },
  {
    "text": "that connects to dynamodb securely reads transactional data and presents the data",
    "start": "753320",
    "end": "758960"
  },
  {
    "text": "outward to all the channels that are looking for customers transactional information the final icing in the cake",
    "start": "758960",
    "end": "766460"
  },
  {
    "text": "is to really migrate customer's transactions that is currently reading the data from mainframe system in a safe",
    "start": "766460",
    "end": "773390"
  },
  {
    "text": "and secure way pivot it all the read traffic to dynamodb and alleviate all",
    "start": "773390",
    "end": "779090"
  },
  {
    "text": "the performance issues that are causing caused by going against the mainframe system not to mention the the cost",
    "start": "779090",
    "end": "786200"
  },
  {
    "text": "associated with the cpu cycles and the number of calls that goes to the",
    "start": "786200",
    "end": "791960"
  },
  {
    "text": "mainframe system itself so how did we go",
    "start": "791960",
    "end": "797390"
  },
  {
    "text": "about solving for these workstreams so we put together a top-notch cross-functional engineering",
    "start": "797390",
    "end": "803440"
  },
  {
    "text": "team and empowered them to solve for these work streams by establishing",
    "start": "803440",
    "end": "808630"
  },
  {
    "text": "certain well-defined success criteria or acceptance criteria first and foremost",
    "start": "808630",
    "end": "813670"
  },
  {
    "text": "is speed the new service that retrieves customers transactions must perform much",
    "start": "813670",
    "end": "820240"
  },
  {
    "text": "faster and better than the legacy API and the legacy API performance numbers and the data associated with it we're",
    "start": "820240",
    "end": "827800"
  },
  {
    "text": "available for us so we knew what response times that the team was going after the next significant thing is data",
    "start": "827800",
    "end": "835060"
  },
  {
    "text": "integrity given that we are a reputed financial organization and we are talking about customers financial",
    "start": "835060",
    "end": "841140"
  },
  {
    "text": "information there is little room for any kind of compromises when it comes to",
    "start": "841140",
    "end": "846760"
  },
  {
    "text": "data integrity and we want to ensure the data quality is true with the source system and lastly security we need to",
    "start": "846760",
    "end": "854950"
  },
  {
    "text": "ensure the data is properly encrypted at rest as well as in transit because we are talking about taking customers",
    "start": "854950",
    "end": "861220"
  },
  {
    "text": "transactions from mainframe system and making it readily available in the cloud",
    "start": "861220",
    "end": "867000"
  },
  {
    "text": "so we embraced the CQRS pattern it's a pretty industry popular pattern command",
    "start": "867900",
    "end": "875680"
  },
  {
    "text": "query responsibility segregation pattern in this particular pattern there are two data models one data model for all the",
    "start": "875680",
    "end": "883090"
  },
  {
    "text": "read information and one data model for all the right information so when you think about how Capital and customers",
    "start": "883090",
    "end": "890320"
  },
  {
    "text": "transact and service their accounts they could be depositing a check they could be swiping their debit card or",
    "start": "890320",
    "end": "896010"
  },
  {
    "text": "provisioning their debit card in a point-of-sale and tapping it through their phone and all these transactions",
    "start": "896010",
    "end": "902770"
  },
  {
    "text": "flow through various networks and hit the mainframe system and that's where your write model is and then we",
    "start": "902770",
    "end": "909070"
  },
  {
    "text": "establish a mechanism to replicate and cache these transactions within near real-time in the cloud and then you have",
    "start": "909070",
    "end": "917050"
  },
  {
    "text": "all the channels reading customers financial transactions from their read data model in this particular side I'm",
    "start": "917050",
    "end": "926470"
  },
  {
    "text": "going to walk us through the high-level logical architecture diagram for transactions hub",
    "start": "926470",
    "end": "932770"
  },
  {
    "text": "now I've mentioned the various work streams the high level architecture pattern and then the surrealist",
    "start": "932770",
    "end": "939010"
  },
  {
    "text": "components within this through which we solve for this within the mainframe system we had a COBOL program that",
    "start": "939010",
    "end": "946300"
  },
  {
    "text": "basically extracted the customers financial transactions writes all those",
    "start": "946300",
    "end": "951430"
  },
  {
    "text": "financial financial transactions into a file this file securely passes through",
    "start": "951430",
    "end": "956830"
  },
  {
    "text": "Capital One's internal gateway and gets ft peed into the s3 bucket and the file",
    "start": "956830",
    "end": "961930"
  },
  {
    "text": "is stored there in fully encrypted form the moment the file arrives in the s3",
    "start": "961930",
    "end": "968050"
  },
  {
    "text": "bucket we have an SNS notification that gets relayed indicating that the file has arrived there is a lambda function",
    "start": "968050",
    "end": "976810"
  },
  {
    "text": "that is subscribing to this notification and what it does is basically inserts",
    "start": "976810",
    "end": "982090"
  },
  {
    "text": "the state of the file into an RDS instance indicating that the file has arrived we also have a cloud watch",
    "start": "982090",
    "end": "992020"
  },
  {
    "text": "trigger rule that actually triggers another lambda function which reads the",
    "start": "992020",
    "end": "997030"
  },
  {
    "text": "state of the file in the RDS database and then it basically invokes this ec2",
    "start": "997030",
    "end": "1005070"
  },
  {
    "text": "instance and a spring batch application that runs on this ec2 instance basically it spins up the entire stack based on",
    "start": "1005070",
    "end": "1011400"
  },
  {
    "text": "the file being arrived and the spring batch application connects to the s3 file reads each transactional record and",
    "start": "1011400",
    "end": "1018090"
  },
  {
    "text": "then we use client-side encryption with region-based KMS keys to encrypt each",
    "start": "1018090",
    "end": "1024569"
  },
  {
    "text": "record and safely and securely save the customers financial transaction into dynamodb using dynamo DB's api this",
    "start": "1024570",
    "end": "1035400"
  },
  {
    "text": "takes care of the bootstrapping or priming of files and data and catching up DynamoDB to sync up into the same",
    "start": "1035400",
    "end": "1041790"
  },
  {
    "text": "state as the data in in in the mainframe system the next big work stream is how",
    "start": "1041790",
    "end": "1047459"
  },
  {
    "text": "do you keep both these data stores in sync and this is where we leverage a",
    "start": "1047459",
    "end": "1052470"
  },
  {
    "text": "messaging system so we have an existing IBM mq infrastructure that is connecting",
    "start": "1052470",
    "end": "1058770"
  },
  {
    "text": "to the mainframe system we have created four new remote queue managers and then",
    "start": "1058770",
    "end": "1063900"
  },
  {
    "text": "there is a COBOL program on the mainframe system each transaction hits the mainframe system it puts those events seamlessly",
    "start": "1063900",
    "end": "1072210"
  },
  {
    "text": "onto the queues then in the cloud running again on an ec2 instance we have",
    "start": "1072210",
    "end": "1079290"
  },
  {
    "text": "a spring boot application this is pretty much a namkyu listener that is listening to the transactional events that are",
    "start": "1079290",
    "end": "1085800"
  },
  {
    "text": "arriving from mainframe system and then again it encrypts each of those transactional events and successfully",
    "start": "1085800",
    "end": "1092490"
  },
  {
    "text": "ingest them into DynamoDB now that the data is available both real-time and in",
    "start": "1092490",
    "end": "1099450"
  },
  {
    "text": "batch mode all the client channels can now seamlessly access this data through",
    "start": "1099450",
    "end": "1105150"
  },
  {
    "text": "our internal dev exchange gateway by calling an API the gate transactions API",
    "start": "1105150",
    "end": "1110880"
  },
  {
    "text": "that we again have built and deployed into the ec2 instance running in the cloud and this connects to dynamo DB",
    "start": "1110880",
    "end": "1117420"
  },
  {
    "text": "seamlessly retrieves all the transactional information and presents it to all the channels so you can see",
    "start": "1117420",
    "end": "1129330"
  },
  {
    "text": "that about 12 months ago we have incorporated this solution by using a",
    "start": "1129330",
    "end": "1135450"
  },
  {
    "text": "combination of ec2 instances certain services spring batch applications and lambda functions to build this platform",
    "start": "1135450",
    "end": "1142500"
  },
  {
    "text": "called transaction hub and make it readily available for our various channels to consume transactional data",
    "start": "1142500",
    "end": "1151040"
  },
  {
    "text": "so within Capital One there is tremendous rigor within engineering",
    "start": "1159250",
    "end": "1164330"
  },
  {
    "text": "teams when you think about operational monitoring we leverage New Relic",
    "start": "1164330",
    "end": "1169429"
  },
  {
    "text": "and Nagi O's to monitor our api's and other applications what you are looking at at the screen is a monitor for our",
    "start": "1169429",
    "end": "1176600"
  },
  {
    "text": "gate transactions API I am pleased to announce that the entire transaction platform is live in production for the",
    "start": "1176600",
    "end": "1183140"
  },
  {
    "text": "past several months and the new API is performing much much better it clocks an",
    "start": "1183140",
    "end": "1188990"
  },
  {
    "text": "average time time of about 50 milliseconds during peak volume traffic and you know I'm humbled by all the hard",
    "start": "1188990",
    "end": "1196220"
  },
  {
    "text": "work done by the team that we are in a very good spot when it comes to alleviating some of the pressure and",
    "start": "1196220",
    "end": "1201289"
  },
  {
    "text": "cost implications when it comes to you know depending on the mainframe system",
    "start": "1201289",
    "end": "1206860"
  },
  {
    "text": "in addition we also have business monitoring by leveraging elasticsearch",
    "start": "1206860",
    "end": "1212330"
  },
  {
    "text": "and Cabana dashboards so on the screen on the left hand side you are seeing the Cabana dashboard monitor for all the",
    "start": "1212330",
    "end": "1218870"
  },
  {
    "text": "batch data ingestion for every single day and you can see that we are able to ingest successfully millions of",
    "start": "1218870",
    "end": "1226039"
  },
  {
    "text": "transactions from the mainframe system going into DynamoDB on the right hand",
    "start": "1226039",
    "end": "1231590"
  },
  {
    "text": "side is a Cabana dashboard monitor that actually shows the real-time ingestion coming through the messaging",
    "start": "1231590",
    "end": "1238190"
  },
  {
    "text": "infrastructure and this kind of business monitoring is giving us the transparency to let us know at what hour during a",
    "start": "1238190",
    "end": "1245360"
  },
  {
    "text": "given week day how much traffic can we expect and how long is it taking for the",
    "start": "1245360",
    "end": "1250480"
  },
  {
    "text": "destination data store in dynamo DB to catch up so we today have an average lag",
    "start": "1250480",
    "end": "1255500"
  },
  {
    "text": "of approximately five to six milliseconds for the near real-time transactions to be caught up so this",
    "start": "1255500",
    "end": "1264679"
  },
  {
    "text": "brings to conclusion my portion of the talk and I'm going to hand it over to",
    "start": "1264679",
    "end": "1269960"
  },
  {
    "text": "Kieran certainly who is going to walk us through how our team kind of built upon",
    "start": "1269960",
    "end": "1275539"
  },
  {
    "text": "the success of transaction hub to basically incorporate more serverless",
    "start": "1275539",
    "end": "1280880"
  },
  {
    "text": "architectures to solve for similarly account related information statements email generation and few other things in",
    "start": "1280880",
    "end": "1288590"
  },
  {
    "text": "addition to also talking about other learning's that we had when it comes to leveraging Cerberus architectures in",
    "start": "1288590",
    "end": "1295280"
  },
  {
    "text": "general thank you so much whoa thanks a",
    "start": "1295280",
    "end": "1306500"
  },
  {
    "text": "lot Serena for giving such a detailed Oriole transactions hub well I just wanted to say that right now",
    "start": "1306500",
    "end": "1313090"
  },
  {
    "text": "transactions hub is live in correction from last couple of years and we have been serving millions of transactions",
    "start": "1313090",
    "end": "1320120"
  },
  {
    "text": "every day for our customers at a lightning speed if you might have just seen couple of slides back you have seen",
    "start": "1320120",
    "end": "1326690"
  },
  {
    "text": "50 milliseconds response time for almost like three billion transactions items",
    "start": "1326690",
    "end": "1331940"
  },
  {
    "text": "that we are storing in dynamo DB that is phenomenal and I just wanted to even say",
    "start": "1331940",
    "end": "1337580"
  },
  {
    "text": "that we are having almost like 13 terabytes of data in our dynamo DB right now so well hello friends my name is",
    "start": "1337580",
    "end": "1347540"
  },
  {
    "text": "Kieran satelli I am a lead software engineer working for code banking platform and I have even the privilege",
    "start": "1347540",
    "end": "1356120"
  },
  {
    "text": "to say that I was a tech lead for this transaction hub and I was there from the busy the inception of this whole project",
    "start": "1356120",
    "end": "1363470"
  },
  {
    "text": "till when it went live into the production and as I'm speaking over here that means the whole project went live",
    "start": "1363470",
    "end": "1370190"
  },
  {
    "text": "successfully and there were no issues for the financial transactions not to be presented to the customers and I was not",
    "start": "1370190",
    "end": "1376070"
  },
  {
    "text": "sacked in the company at least okay and",
    "start": "1376070",
    "end": "1380590"
  },
  {
    "text": "after the successful after the successful rollout of transactions hub",
    "start": "1381669",
    "end": "1387260"
  },
  {
    "text": "our leadership team decided to build a localized leukocyte cache of accounts",
    "start": "1387260",
    "end": "1393890"
  },
  {
    "text": "data set in cloud so what does that mean actually so they were saying that hey we have got all our transactions",
    "start": "1393890",
    "end": "1400250"
  },
  {
    "text": "information in cloud and we are able to serve the customers much more faster so what does it mean for taking our",
    "start": "1400250",
    "end": "1406610"
  },
  {
    "text": "accounts data set also into cloud because account data as well as the transaction data happens to be like 70%",
    "start": "1406610",
    "end": "1413600"
  },
  {
    "text": "of the populations that our mainframe systems were handling we could have just leveraged the existing pattern of",
    "start": "1413600",
    "end": "1420740"
  },
  {
    "text": "transaction hub because it was already proven by we as a team decided to further enhance",
    "start": "1420740",
    "end": "1426040"
  },
  {
    "text": "upon it so we decided we actually were targeting towards going more serverless and the couple of factors that were",
    "start": "1426040",
    "end": "1434230"
  },
  {
    "text": "actually making a Selene towards serverless was the cost and the maintenance of the batch stack and when",
    "start": "1434230",
    "end": "1442540"
  },
  {
    "text": "you say cost and the maintenance the maintenance especially is because we are speeding up these ec2 instances on",
    "start": "1442540",
    "end": "1447580"
  },
  {
    "text": "demand and we are supposed to ensure that we are having the latest ami patches for our ec2 instances for which",
    "start": "1447580",
    "end": "1454270"
  },
  {
    "text": "we have to ensure that we are having our CloudFormation templates updated every",
    "start": "1454270",
    "end": "1459430"
  },
  {
    "text": "time with the latest patch so as part of the new architecture we completely",
    "start": "1459430",
    "end": "1465010"
  },
  {
    "text": "eliminated this ec2 instances as well as the Aria stack which were previously used for us to have this processing of",
    "start": "1465010",
    "end": "1473350"
  },
  {
    "text": "data in a batch mode and we started leveraging step functions which orchestrates series of lambdas to read",
    "start": "1473350",
    "end": "1481810"
  },
  {
    "text": "millions of account data and ingest them into DynamoDB we are going to be talking",
    "start": "1481810",
    "end": "1486970"
  },
  {
    "text": "more about the step functions in the next slide but this is how the new account of architecture gonna look like",
    "start": "1486970",
    "end": "1493720"
  },
  {
    "text": "now so in the previous slide when srini actually presented the transactions hub although it was an on-demand ec2",
    "start": "1493720",
    "end": "1501550"
  },
  {
    "text": "instances but he was repeatedly using the word EC to EC to EC - and we thought",
    "start": "1501550",
    "end": "1507310"
  },
  {
    "text": "that ok we are spending a lot of money on the ec2 instances and by that time serverless was just the step functions",
    "start": "1507310",
    "end": "1514450"
  },
  {
    "text": "and all those things were still emerging actually so the moment the step transactions have went live and step",
    "start": "1514450",
    "end": "1521350"
  },
  {
    "text": "functions was becoming more mature we started deciding to use these step",
    "start": "1521350",
    "end": "1526480"
  },
  {
    "text": "functions as I said earlier so over here you can see in transactions have the the",
    "start": "1526480",
    "end": "1532750"
  },
  {
    "text": "data that is actually getting flowed from our source as srini already mentioned is in two formats one is in",
    "start": "1532750",
    "end": "1539110"
  },
  {
    "text": "the batch format and one is in the real-time format okay in the batch",
    "start": "1539110",
    "end": "1544510"
  },
  {
    "text": "format the file the files are actually generated this time this is account",
    "start": "1544510",
    "end": "1549670"
  },
  {
    "text": "elated files and these files are securely FTP to our s3 bucket and we are",
    "start": "1549670",
    "end": "1555100"
  },
  {
    "text": "actually having a cloud watch rule that is scheduled to trigger at lambda",
    "start": "1555100",
    "end": "1560350"
  },
  {
    "text": "and I'll call it as a batch trigger lambda over here and this batch trigger lambda just keeps on pulling this s3",
    "start": "1560350",
    "end": "1566380"
  },
  {
    "text": "bucket to see if it has received the files and if it has received the files it keeps a counter of the number of",
    "start": "1566380",
    "end": "1571720"
  },
  {
    "text": "files that it has received and the moment it hits a threshold that we have",
    "start": "1571720",
    "end": "1576790"
  },
  {
    "text": "set according to our business requirements it triggers our step functions and this stuff functions goes",
    "start": "1576790",
    "end": "1583150"
  },
  {
    "text": "and calls multiple lambdas behind the screen which reads the data from s3",
    "start": "1583150",
    "end": "1588720"
  },
  {
    "text": "downloads the data from s3 it parses the information and writes the data into DynamoDB the second channel that I was",
    "start": "1588720",
    "end": "1598090"
  },
  {
    "text": "talking of which is the real-time messages so it's our mainframe sends the",
    "start": "1598090",
    "end": "1603190"
  },
  {
    "text": "real-time messages through our IBM MQ and we have built we have just followed",
    "start": "1603190",
    "end": "1609280"
  },
  {
    "text": "the same path of having MQ client created in production on cloud which",
    "start": "1609280",
    "end": "1615370"
  },
  {
    "text": "reads this message from the queue and writes the data into DynamoDB so now you can see over here one more difference",
    "start": "1615370",
    "end": "1621670"
  },
  {
    "text": "over here we are no more using or we are not having a separate stack of ec2 instances for api's as well as for the",
    "start": "1621670",
    "end": "1628900"
  },
  {
    "text": "MQ consumer so we have enhanced even the stack over here to have the e CS and we",
    "start": "1628900",
    "end": "1635620"
  },
  {
    "text": "are running on this e CS we are running the API as well as the MQ consumer has two different tasks just ensuring that",
    "start": "1635620",
    "end": "1641740"
  },
  {
    "text": "we are saving some cost to our bank at least so I just wanted to know as to how",
    "start": "1641740",
    "end": "1648730"
  },
  {
    "text": "many of you might have used step functions in the real time for batch processing do we have any perfect",
    "start": "1648730",
    "end": "1654400"
  },
  {
    "text": "awesome so this is a good place for all of us to share our experiences or at",
    "start": "1654400",
    "end": "1659860"
  },
  {
    "text": "least get some learnings from water we have learned so we have written three step functions one at the batch level",
    "start": "1659860",
    "end": "1666640"
  },
  {
    "text": "one at the file level one at the chunk level so the batch level step function",
    "start": "1666640",
    "end": "1672010"
  },
  {
    "text": "the batch state machine orchestrates all the steps that are required in processing of a job what it means is it",
    "start": "1672010",
    "end": "1681190"
  },
  {
    "text": "ensures that all the business requirements are met before proceeding with the job it bootstraps all the",
    "start": "1681190",
    "end": "1688360"
  },
  {
    "text": "lambdas by creating the necessary input files and then it staged all the",
    "start": "1688360",
    "end": "1693580"
  },
  {
    "text": "files and folders for running the job once all these prerequisites are met for",
    "start": "1693580",
    "end": "1700750"
  },
  {
    "text": "each file we spin a file state machine and wait for its completion and as you",
    "start": "1700750",
    "end": "1710620"
  },
  {
    "text": "can see or hear the batch for example just let's take an example of we are",
    "start": "1710620",
    "end": "1715929"
  },
  {
    "text": "trying to process a batch of eleven files or three files over here so the movement systematics or the",
    "start": "1715929",
    "end": "1722860"
  },
  {
    "text": "mainframe system sends to s3 bucket the three files the batch trigger triggers the step functions and step functions",
    "start": "1722860",
    "end": "1729760"
  },
  {
    "text": "sees that here we have received all the three files it performs all the business functionality that should this batch be",
    "start": "1729760",
    "end": "1735280"
  },
  {
    "text": "run today or was it yesterday as files and all those business requirements are met and once that thing is done as we",
    "start": "1735280",
    "end": "1741070"
  },
  {
    "text": "are having three files over there the batch state machine executes three three final state machine executions and the",
    "start": "1741070",
    "end": "1748630"
  },
  {
    "text": "file state execution all that it does is it takes a file and it splits that file into further smaller file sets and",
    "start": "1748630",
    "end": "1754659"
  },
  {
    "text": "uploads them into s3 bucket and once the files are uploaded into s3 bucket this file state machine executes chunk state",
    "start": "1754659",
    "end": "1762100"
  },
  {
    "text": "machine and this chunk state machine in parallel okay and the chunk state machines responsible needs to get the",
    "start": "1762100",
    "end": "1768669"
  },
  {
    "text": "chunk of data and write read of read encrypt and write the data into dynamo",
    "start": "1768669",
    "end": "1774309"
  },
  {
    "text": "dB so this is how we have actually come up with the complete with the complete step",
    "start": "1774309",
    "end": "1780130"
  },
  {
    "text": "functions we are able to completely say that we have a bad job which is purely",
    "start": "1780130",
    "end": "1785559"
  },
  {
    "text": "serverless in nature okay and I just wanted to even share some compute costs",
    "start": "1785559",
    "end": "1791710"
  },
  {
    "text": "that we have just gathered so we have like 11 files that we try to process every day with almost approximately 10",
    "start": "1791710",
    "end": "1800470"
  },
  {
    "text": "million information in it and it runs for 60 minutes and the total compute",
    "start": "1800470",
    "end": "1806200"
  },
  {
    "text": "cost of this whole thing that I'm talking about is just 78 cents so which",
    "start": "1806200",
    "end": "1811809"
  },
  {
    "text": "is which is very very much phenomenal and this is just the compute cost that we are talking of ok I'm not trying to",
    "start": "1811809",
    "end": "1817030"
  },
  {
    "text": "say anything about the DynamoDB cost it is having its own cost but still ok",
    "start": "1817030",
    "end": "1823440"
  },
  {
    "text": "for resilience for resiliency purpose we have our stack spread across both East and West regions so as their as Feeny",
    "start": "1823710",
    "end": "1832320"
  },
  {
    "text": "has already pointed out that we are using the client-side encryption with region specific KMS keys we are",
    "start": "1832320",
    "end": "1838080"
  },
  {
    "text": "constrained to use the new DynamoDB feature of cross region replication but as this is a leukocyte cache or a CQRS",
    "start": "1838080",
    "end": "1846659"
  },
  {
    "text": "pattern we are able to write data into multiple regions at the same time so in",
    "start": "1846659",
    "end": "1851880"
  },
  {
    "text": "case of a region level failure that is like if the badge of fails on one of the region we are able to serve the data",
    "start": "1851880",
    "end": "1859049"
  },
  {
    "text": "from the other region at least where the data is completely correct so if you see over here if the US East one the bad job",
    "start": "1859049",
    "end": "1866340"
  },
  {
    "text": "fails in the US East one as we are writing the data parallely on the u.s. west we are able to redirect our traffic",
    "start": "1866340",
    "end": "1872220"
  },
  {
    "text": "to u.s. west two at least and we are even ensuring that the data is",
    "start": "1872220",
    "end": "1878010"
  },
  {
    "text": "completely synchronized between east and west by having our source system to send the files in case of the batch mode to",
    "start": "1878010",
    "end": "1885179"
  },
  {
    "text": "both the regions as one single transaction and in case of the real time machine in case of the real-time",
    "start": "1885179",
    "end": "1890850"
  },
  {
    "text": "transmission the same message is sent to two different queues as part of the same transaction well I am using the word",
    "start": "1890850",
    "end": "1896940"
  },
  {
    "text": "transaction if the source system is unable to push the file for some reason",
    "start": "1896940",
    "end": "1902520"
  },
  {
    "text": "both the files will not be coming to a region and at the same time if the message is not being delivered to our",
    "start": "1902520",
    "end": "1907590"
  },
  {
    "text": "IBM MQ then the transaction will not be considered as the file that message that",
    "start": "1907590",
    "end": "1912659"
  },
  {
    "text": "has been sent from the source system now recently we have got the dynamodb has",
    "start": "1912659",
    "end": "1919529"
  },
  {
    "text": "given the support for encryption at rest and me and my team are actually working",
    "start": "1919529",
    "end": "1925230"
  },
  {
    "text": "on leveraging this encryption at rest which will help us to stop doing this",
    "start": "1925230",
    "end": "1930779"
  },
  {
    "text": "client-side encryption which has created the constraint for us to use a cross region replication and why we are",
    "start": "1930779",
    "end": "1936390"
  },
  {
    "text": "actually trying to lean on the cross region replication more is because we closely we have the privilege of working",
    "start": "1936390",
    "end": "1941640"
  },
  {
    "text": "closely with the actual architects of the DynamoDB team and we are able to influence their product saying that we",
    "start": "1941640",
    "end": "1948059"
  },
  {
    "text": "want this requirement we want that requirement and we know that there is lot of features that are been going to",
    "start": "1948059",
    "end": "1954029"
  },
  {
    "text": "be provided as part of the dynamodb so so we are actually targeting for improving our application account her",
    "start": "1954029",
    "end": "1959760"
  },
  {
    "text": "batch applications to start leveraging the client-side the server-side encryption concept it is always challenging to",
    "start": "1959760",
    "end": "1968760"
  },
  {
    "text": "monitor a serverless application okay so as part of the account abash apart from",
    "start": "1968760",
    "end": "1976320"
  },
  {
    "text": "the cloud watch matrix we even started integrating ourselves with pager duty",
    "start": "1976320",
    "end": "1981360"
  },
  {
    "text": "and data dog so once the file state machines the in the previous slides as I",
    "start": "1981360",
    "end": "1987000"
  },
  {
    "text": "said you once the file state machines executions gets completed the batch state machine collects a matrix of all",
    "start": "1987000",
    "end": "1993480"
  },
  {
    "text": "the file state machines and aggregates them and sends it as an SNS topic SNS to",
    "start": "1993480",
    "end": "1998730"
  },
  {
    "text": "a specific topic and this topic is subscribed by a lambda function which parses all the information and creates",
    "start": "1998730",
    "end": "2005840"
  },
  {
    "text": "necessary metrics on data dog and as this data as these metrics are made",
    "start": "2005840",
    "end": "2010850"
  },
  {
    "text": "available on data dog we are able to create some interactive dashboards which",
    "start": "2010850",
    "end": "2015890"
  },
  {
    "text": "really helped out the development team as well as a product team to make sure that everything looks great",
    "start": "2015890",
    "end": "2021140"
  },
  {
    "text": "so as you can see in this on the screen we are having almost these many records",
    "start": "2021140",
    "end": "2026240"
  },
  {
    "text": "that are inserted on both the places on east and west you should we should make sure that the numbers match over there",
    "start": "2026240",
    "end": "2032150"
  },
  {
    "text": "ok if even two transactions or two items are mismatching that means the batch has failed for some reason and then you can",
    "start": "2032150",
    "end": "2039320"
  },
  {
    "text": "see the total number of step executions and the total number of step execution failures and the lambda function",
    "start": "2039320",
    "end": "2045140"
  },
  {
    "text": "invocations on the east and dynamodb writes over there so if you can see or there when the lambda so you if you see",
    "start": "2045140",
    "end": "2051408"
  },
  {
    "text": "the timing or there I don't know whether you are able to see it because of the small font size but we have this bad job",
    "start": "2051409",
    "end": "2057169"
  },
  {
    "text": "that runs early in the morning around 2 o'clock or three o'clock so until that time the dynamodb writes you see that it",
    "start": "2057169",
    "end": "2064070"
  },
  {
    "text": "is actually at the zero K and during the batch execution we actually increase the",
    "start": "2064070",
    "end": "2069080"
  },
  {
    "text": "WCU's okay so what we even try to do is as part of the batch state machine we",
    "start": "2069080",
    "end": "2074480"
  },
  {
    "text": "are leveraging our AWS lambdas to dynamically increase the WCU's when the",
    "start": "2074480",
    "end": "2080898"
  },
  {
    "text": "bad job starts and dynamically decrease the WSU's once a bad job is completed okay so I just wanted to highlight that",
    "start": "2080899",
    "end": "2087290"
  },
  {
    "text": "one and we have created a couple of alerts on pager duty alerts on data dog which",
    "start": "2087290",
    "end": "2094330"
  },
  {
    "text": "triggers pager duty whenever we come across any errors as part of the lamda invocations or any sort of discrepancy",
    "start": "2094330",
    "end": "2101700"
  },
  {
    "text": "recently a SS x-rays is approved pattern",
    "start": "2101700",
    "end": "2107020"
  },
  {
    "text": "for us to use in capital 1 so we are me and my team are even thinking of enhancing our monitoring stack to even",
    "start": "2107020",
    "end": "2113920"
  },
  {
    "text": "include aw sixes for debugging of our lambdas yeah and you can even see that",
    "start": "2113920",
    "end": "2121600"
  },
  {
    "text": "this is the data dog dashboard and right hand side you see an email that is",
    "start": "2121600",
    "end": "2126670"
  },
  {
    "text": "actually generated so this is the email that my team also receives so we have subscribed our",
    "start": "2126670",
    "end": "2133270"
  },
  {
    "text": "email distribution list for the topic for which the may SNS message that batch",
    "start": "2133270",
    "end": "2138520"
  },
  {
    "text": "state machine sends the SNS message so if you can see or hear we are having the total number of files we see what is",
    "start": "2138520",
    "end": "2144940"
  },
  {
    "text": "that start time what is end time and if you see the settings in the below section you can see that it is having",
    "start": "2144940",
    "end": "2150250"
  },
  {
    "text": "the wcu hi how much is the high throughput that we are supposed to beginning which is 50,000 over here and",
    "start": "2150250",
    "end": "2155800"
  },
  {
    "text": "once the batch completes what is the throughput that we have to dial in back which is 10,000 over there so this is",
    "start": "2155800",
    "end": "2160990"
  },
  {
    "text": "how we just try to ensure that we are having everything buttoned up",
    "start": "2160990",
    "end": "2166170"
  },
  {
    "text": "this slide shows all the aw services that I count Hub account hub stack uses",
    "start": "2166800",
    "end": "2173950"
  },
  {
    "text": "when I'm using the word account up stack it includes the batch the mq and the api's so as you can see the first row",
    "start": "2173950",
    "end": "2182440"
  },
  {
    "text": "has three SNS lamda step functions cloud watch rule all these things are something I can call it as a server less",
    "start": "2182440",
    "end": "2189520"
  },
  {
    "text": "because I didn't I don't need to really worry upon it they are completely managed services and in the second row",
    "start": "2189520",
    "end": "2195040"
  },
  {
    "text": "we are having dynamodb and cloud watch and ems so these are other services",
    "start": "2195040",
    "end": "2200680"
  },
  {
    "text": "where I don't really need to worry about the easiest over there it is still on the ec2 stack and the reason we are",
    "start": "2200680",
    "end": "2207370"
  },
  {
    "text": "actually we did a quick POC on seeing what does it mean for us to have our ap",
    "start": "2207370",
    "end": "2213370"
  },
  {
    "text": "is also hosted on lambdas but there are a couple of lessons that were learned so",
    "start": "2213370",
    "end": "2218830"
  },
  {
    "text": "when we are actually having a very high throughput which is a TPS that knocking off for the api's we really had",
    "start": "2218830",
    "end": "2225670"
  },
  {
    "text": "to weigh in weather are we really getting benefited with having a lambda or there are we having a benefit by",
    "start": "2225670",
    "end": "2231070"
  },
  {
    "text": "having an e CS with an ec2 instance that will just process so if an API is having",
    "start": "2231070",
    "end": "2237280"
  },
  {
    "text": "a low throughput it is always advantageous to have just have the API to be built on a lambda and if it is",
    "start": "2237280",
    "end": "2243640"
  },
  {
    "text": "having a very high TPS like P on 100 TPS we felt that it was much more",
    "start": "2243640",
    "end": "2248890"
  },
  {
    "text": "advantageous to have that application to be running on and ec2 instance but as we",
    "start": "2248890",
    "end": "2253990"
  },
  {
    "text": "are using the EC s over here we are still ensuring that we are managing our easy to usage a lot in the next couple",
    "start": "2253990",
    "end": "2262930"
  },
  {
    "text": "of slides I am going to touch upon a couple of other business use cases that were built upon account hub in order to",
    "start": "2262930",
    "end": "2270340"
  },
  {
    "text": "serve millions of our customer needs so the first use case is generating the",
    "start": "2270340",
    "end": "2276040"
  },
  {
    "text": "statement ready emails to our customers is completely developed on serverless technologies and the second use case",
    "start": "2276040",
    "end": "2282160"
  },
  {
    "text": "says that how catalonia is migrating its legacy api's to lambda functions so how",
    "start": "2282160",
    "end": "2288790"
  },
  {
    "text": "many of you might be receiving emails over here from your respective banks that your statement is ready I know that",
    "start": "2288790",
    "end": "2294670"
  },
  {
    "text": "evident deletes that but still evidence most of you might have so what does that statement is ready means so what it",
    "start": "2294670",
    "end": "2301390"
  },
  {
    "text": "means is Kiran receives an email from his bank Capital One saying that your statement is ready I can I see that and",
    "start": "2301390",
    "end": "2308320"
  },
  {
    "text": "I have to go into my digital channel which is either web or mobile and I see",
    "start": "2308320",
    "end": "2313360"
  },
  {
    "text": "my statement and go through all my transactions so this is what a statement ready means actually so this is the",
    "start": "2313360",
    "end": "2320800"
  },
  {
    "text": "high-level architecture of our statement ready email so just like any other banks",
    "start": "2320800",
    "end": "2326020"
  },
  {
    "text": "we are also sending this statement ready emails for all our banking customers and this is a fantastic example of the of",
    "start": "2326020",
    "end": "2335640"
  },
  {
    "text": "the pattern that we have chosen because we have eliminated a legacy data warehousing control-m job which even",
    "start": "2335640",
    "end": "2343390"
  },
  {
    "text": "included a couple of manual steps and manual approve approvals with the completely serverless technologies and",
    "start": "2343390",
    "end": "2349590"
  },
  {
    "text": "this is how we are actually sending our statement ready generated emails to millions of our customers",
    "start": "2349590",
    "end": "2355750"
  },
  {
    "text": "so if you can see or hear I just wanted to give a little bit of business use case so usually the banks don't send the",
    "start": "2355750",
    "end": "2363070"
  },
  {
    "text": "customer ready generated emails on day one for all the customers because the customers are millions in numbers so",
    "start": "2363070",
    "end": "2369160"
  },
  {
    "text": "they try to break it up into one or two waves or one or one to three waves so",
    "start": "2369160",
    "end": "2374230"
  },
  {
    "text": "what it means is like day one thirty percent of the population will get the customer emails the day to thirty",
    "start": "2374230",
    "end": "2381670"
  },
  {
    "text": "percent more will get the notifications and the last day we will be getting all the forty percent will get the",
    "start": "2381670",
    "end": "2386710"
  },
  {
    "text": "notifications and there are a couple of reasons over there we just wanted to make sure that we are not throttling our customer call centers with more",
    "start": "2386710",
    "end": "2394000"
  },
  {
    "text": "customers calling in saying that hey why we are having this discrepancy or something like that so this is the more like a business use case wherein we had",
    "start": "2394000",
    "end": "2400240"
  },
  {
    "text": "to go in couple of waves but what why I had to give this context to you is that we try to store this information as part",
    "start": "2400240",
    "end": "2407530"
  },
  {
    "text": "of our RDS wherein if Karen is going and querying an audience data store I'll be",
    "start": "2407530",
    "end": "2413920"
  },
  {
    "text": "seeing if I am saying like it is broken up in three waves I'll see three records over there which says that 30% of the",
    "start": "2413920",
    "end": "2420280"
  },
  {
    "text": "population on this date the emails has to be sent 30 percent of the population on this date it has to be send and 40",
    "start": "2420280",
    "end": "2426250"
  },
  {
    "text": "percent the population to be sent on this date why I had to set this context is that will give more overview of this",
    "start": "2426250",
    "end": "2432040"
  },
  {
    "text": "whole flow so we are having a cloud watch rule that is scheduled to trigger a lambda and this lambda is triggered",
    "start": "2432040",
    "end": "2440260"
  },
  {
    "text": "every day and this responsibility of this trial lambda is to go and check this RDS data store to ensure that is",
    "start": "2440260",
    "end": "2447190"
  },
  {
    "text": "this the day that I have to send the emails and if it is that day that the emails are supposed to be sent then it",
    "start": "2447190",
    "end": "2453520"
  },
  {
    "text": "tries to read all the customer information from s3 bucket which is another bucket and it downloads all the",
    "start": "2453520",
    "end": "2460330"
  },
  {
    "text": "data of that customers for the 30 person of the population and then it generates it it even fetches all the necessary",
    "start": "2460330",
    "end": "2467440"
  },
  {
    "text": "email templates that are supposed to be sent to the customers it agree gets all this information writes into into a",
    "start": "2467440",
    "end": "2472930"
  },
  {
    "text": "separate file and uploads it into s3 bucket a different ESRI bucket and this s3 bucket is read by another app which",
    "start": "2472930",
    "end": "2480130"
  },
  {
    "text": "is called as a direct send app which reads all the information and just sends this email store customer so now you can",
    "start": "2480130",
    "end": "2487150"
  },
  {
    "text": "see that we have completely eliminated a data warehousing control-m job with completely serverless technologies and",
    "start": "2487150",
    "end": "2493660"
  },
  {
    "text": "all these things happen in the very first first one week or two weeks of every month so this is pretty",
    "start": "2493660",
    "end": "2500530"
  },
  {
    "text": "interesting use case I just wanted to share the second use case is I just",
    "start": "2500530",
    "end": "2507100"
  },
  {
    "text": "wanted to illustrate that Catalan is actually trying to migrate most of his",
    "start": "2507100",
    "end": "2512650"
  },
  {
    "text": "business legacy api's from APs that were actually running for on the ec2",
    "start": "2512650",
    "end": "2519430"
  },
  {
    "text": "instances to lambda functions so this is our picture of an API called get",
    "start": "2519430",
    "end": "2525460"
  },
  {
    "text": "statements API wherein given a customer number we try to say these are the list",
    "start": "2525460",
    "end": "2531400"
  },
  {
    "text": "of statements that you are you are having okay so as you can see in the diagram over here the requests are being",
    "start": "2531400",
    "end": "2537550"
  },
  {
    "text": "sent from the digital channel which is e which is mobile and web through our",
    "start": "2537550",
    "end": "2544500"
  },
  {
    "text": "valet ur which is a secure draft layer if the requests are sent or internal",
    "start": "2544500",
    "end": "2549880"
  },
  {
    "text": "orchestration layer and the requests are then redirected to our internal API gateway so this API gateway is not the",
    "start": "2549880",
    "end": "2556540"
  },
  {
    "text": "capital on API gateway it is an internal API gateway which has its own implementation and once the request is",
    "start": "2556540",
    "end": "2563650"
  },
  {
    "text": "received to this API gateway it tries to go and ensure whether the client is",
    "start": "2563650",
    "end": "2569040"
  },
  {
    "text": "authorized and authenticated to call our API and once the request is",
    "start": "2569040",
    "end": "2574450"
  },
  {
    "text": "authenticated then the request is forwarded to the lambda and this lambda just takes a customer number goes and",
    "start": "2574450",
    "end": "2581050"
  },
  {
    "text": "queries RDS data store and gets the statement leased and sends back this information to the respective channel so",
    "start": "2581050",
    "end": "2587980"
  },
  {
    "text": "this is how we have just migrated a couple of our legacy applications to",
    "start": "2587980",
    "end": "2594040"
  },
  {
    "text": "lambda also so in the next slide I just wanted to share a couple of our lambda",
    "start": "2594040",
    "end": "2601030"
  },
  {
    "text": "as well as step function experiences which which I can call it as a learning and best practices so the first",
    "start": "2601030",
    "end": "2608260"
  },
  {
    "text": "experience is improve the response time with data caching so I just wanted to",
    "start": "2608260",
    "end": "2615550"
  },
  {
    "text": "make sure that although lambda is considered to be server less but in reality there is a container that is",
    "start": "2615550",
    "end": "2621730"
  },
  {
    "text": "provisioned behind the at runtime for a lambda and this container is made available for some",
    "start": "2621730",
    "end": "2628510"
  },
  {
    "text": "time and if you are creating a global level variable you will be having this",
    "start": "2628510",
    "end": "2634240"
  },
  {
    "text": "global variable accessible at the container level so if you are going to store any information into the global",
    "start": "2634240",
    "end": "2639670"
  },
  {
    "text": "variable another lambda immigration that comes to the same container will have a hook on that respective variance on that",
    "start": "2639670",
    "end": "2647319"
  },
  {
    "text": "respective value actually so we have been using this quite frequently for caching our connections with RDS data",
    "start": "2647319",
    "end": "2654609"
  },
  {
    "text": "store storing the kms keys so this avoids us to again go and establish a",
    "start": "2654609",
    "end": "2660339"
  },
  {
    "text": "connection on fetch the details and something on those counts the second thing for example in this code snippet",
    "start": "2660339",
    "end": "2666609"
  },
  {
    "text": "you can see we are actually caching the database password which is actually encrypted with kms keys so every time",
    "start": "2666609",
    "end": "2672849"
  },
  {
    "text": "the lambda function invocation happens they don't really need to go and go and face the kms keys for every invocation",
    "start": "2672849",
    "end": "2678400"
  },
  {
    "text": "once the database is the password is cached at least until the container is available you'll be able to fetch the",
    "start": "2678400",
    "end": "2684490"
  },
  {
    "text": "database password for the subsequent invocations lambda concurrency just like any other AWS service lambda also has a",
    "start": "2684490",
    "end": "2692410"
  },
  {
    "text": "concurrency also has a limit that is set at the account level but there is a",
    "start": "2692410",
    "end": "2698829"
  },
  {
    "text": "typical problem with lambda if you don't properly manage your lambda one function of lambda can consume all the limits at",
    "start": "2698829",
    "end": "2706420"
  },
  {
    "text": "your account level then AWS has recently introduced the concurrency levels at",
    "start": "2706420",
    "end": "2713650"
  },
  {
    "text": "function level at lambda function level so we strongly urge you to use that",
    "start": "2713650",
    "end": "2719640"
  },
  {
    "text": "concurrency at the function level because if you are not setting this limit then your function can consume all",
    "start": "2719640",
    "end": "2726700"
  },
  {
    "text": "the limits at the account level which deprives other function to start throttling which are not even belong",
    "start": "2726700",
    "end": "2732160"
  },
  {
    "text": "into your application so just make sure that you are having your function running and you are making other application teams functions also running",
    "start": "2732160",
    "end": "2738900"
  },
  {
    "text": "VPC attach lambdas so if lambda is attached to a V PC that lambda gets its",
    "start": "2738900",
    "end": "2746349"
  },
  {
    "text": "IP address from the subnet of that V PC so make sure that you are monitoring your lambda because the lambda can eat",
    "start": "2746349",
    "end": "2753430"
  },
  {
    "text": "up all your IP addresses and all these are the real-time experiences that I'm talking of because we have been really at least",
    "start": "2753430",
    "end": "2760420"
  },
  {
    "text": "I have been called out many attempts saying that hey just go and make sure that your lambdas are killed because it",
    "start": "2760420",
    "end": "2766720"
  },
  {
    "text": "is eating away the IP addresses and the ec2 instances are not getting the IP and they are not able to get spun up so at",
    "start": "2766720",
    "end": "2773470"
  },
  {
    "text": "least at Capital One we have created a separate V PC for our lambdas so that we are not getting ourselves involved into",
    "start": "2773470",
    "end": "2780490"
  },
  {
    "text": "the other services like AWS ec2 or ICS related subnets lambda cold-start",
    "start": "2780490",
    "end": "2789070"
  },
  {
    "text": "so a cold start occurs when a aw slam de is invoked after a very long period of",
    "start": "2789070",
    "end": "2795250"
  },
  {
    "text": "inactivity which increases the invocation time so what we have seen is we can reduce this Kol start at least we",
    "start": "2795250",
    "end": "2803020"
  },
  {
    "text": "reduce the cold start with following these three things we trim down the code size and its dependencies we have used",
    "start": "2803020",
    "end": "2809350"
  },
  {
    "text": "couple of libraries for our node.js like web pack minify uglify so these are some",
    "start": "2809350",
    "end": "2816700"
  },
  {
    "text": "of the libraries that we have used which shrunk our artifact size so small and",
    "start": "2816700",
    "end": "2822460"
  },
  {
    "text": "there is no magic that is actually happening behind the screen all that it does is it removes all the unnecessary",
    "start": "2822460",
    "end": "2827650"
  },
  {
    "text": "dependencies which are never being used in your application and I just tries to do some formatting it just messes up",
    "start": "2827650",
    "end": "2835840"
  },
  {
    "text": "with the formatting which brings down the whole packet size and when we did this if you can see over here the file",
    "start": "2835840",
    "end": "2842980"
  },
  {
    "text": "size of the bundle or zip is 5.4 MB and it has been shrunk to almost 82 KB so",
    "start": "2842980",
    "end": "2848110"
  },
  {
    "text": "what this helps out is the moment this artifact is uploaded it becomes much faster for the invocation of the lambda",
    "start": "2848110",
    "end": "2855240"
  },
  {
    "text": "keep the function warm to reduce a cold start so it's always good if you are aware that your lambda is very inactive",
    "start": "2855240",
    "end": "2862720"
  },
  {
    "text": "it's always good to create a cloud watch rule to skid a schedule rule to just go",
    "start": "2862720",
    "end": "2868630"
  },
  {
    "text": "and invoke that lambda at a specific interval periods of time to keep it warm and we have even seen that allocation of",
    "start": "2868630",
    "end": "2875530"
  },
  {
    "text": "more memory it reduces the cold start and these are the two things that we",
    "start": "2875530",
    "end": "2881080"
  },
  {
    "text": "have lessons learned for there are many more but these are something that I wanted to bring it up so using the retry",
    "start": "2881080",
    "end": "2887290"
  },
  {
    "text": "policy the state machine can error out during runtime and the reasons for the state",
    "start": "2887290",
    "end": "2893250"
  },
  {
    "text": "machine erroring out is more like they just try to error out if this definition",
    "start": "2893250",
    "end": "2898350"
  },
  {
    "text": "is wrong or the task or the state is wrong and why I had to just put this in",
    "start": "2898350",
    "end": "2904920"
  },
  {
    "text": "over here is because there is a feature to have a property called retry to be put at the step step-step definition",
    "start": "2904920",
    "end": "2912120"
  },
  {
    "text": "level which can have all the exceptions that we can list out which says that upon hitting these exceptions just go",
    "start": "2912120",
    "end": "2919380"
  },
  {
    "text": "and retry the whole execution because if the task fails the default behavior if",
    "start": "2919380",
    "end": "2925230"
  },
  {
    "text": "this retry block is not there the default behavior is the whole execution is failed so if you don't want to if you",
    "start": "2925230",
    "end": "2931110"
  },
  {
    "text": "wanted to avoid the execution to fail and we just want to get it retried once again this is how we just followed the",
    "start": "2931110",
    "end": "2937950"
  },
  {
    "text": "retry policy and keeping the state data lightweight so what does this mean is that the state when we are actually",
    "start": "2937950",
    "end": "2945090"
  },
  {
    "text": "passing the information from one state to another state you can actually pass the data so just ensure that you are not",
    "start": "2945090",
    "end": "2951900"
  },
  {
    "text": "passing a hell of a data because there is a limit over there which is 32 KB and just try to send some sort of pointers",
    "start": "2951900",
    "end": "2958830"
  },
  {
    "text": "as against the actual data so having said so these are some of the things that we just had the experience",
    "start": "2958830",
    "end": "2967290"
  },
  {
    "text": "Seanie can you just come and give the closing notes thank you guys",
    "start": "2967290",
    "end": "2973130"
  },
  {
    "text": "[Applause] folks I don't want to hold you up any",
    "start": "2975490",
    "end": "2981150"
  },
  {
    "text": "longer thank you so much for your time we had a blast sharing our server last journey here I just want to put out a",
    "start": "2981150",
    "end": "2986970"
  },
  {
    "text": "note there saying we are hiring number of Engineers at various levels across",
    "start": "2986970",
    "end": "2991980"
  },
  {
    "text": "our sites especially in New York there is tremendous focus to hire mobile engineers we are also hiring DevOps",
    "start": "2991980",
    "end": "2998520"
  },
  {
    "text": "engineers architectures architects into my architecture team as well you guys have seen the LinkedIn addresses for",
    "start": "2998520",
    "end": "3006140"
  },
  {
    "text": "both of us so you can contact directly any offers you can also go to capital on",
    "start": "3006140",
    "end": "3011630"
  },
  {
    "text": "website and look at any open positions we are desperately looking for top-notch engineering talent and Capital One is a",
    "start": "3011630",
    "end": "3018830"
  },
  {
    "text": "fantastic place to work so once again have a wonderful weekend and a fantastic July 4th thank you so much",
    "start": "3018830",
    "end": "3026890"
  }
]