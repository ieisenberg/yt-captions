[
  {
    "start": "0",
    "end": "115000"
  },
  {
    "text": "[Music]",
    "start": "310",
    "end": "20220"
  },
  {
    "text": "yeah my name is s i uh I'm a part-time jel evangelist I used to work for some",
    "start": "25680",
    "end": "31039"
  },
  {
    "text": "MOS systems as a Java evangelist as well at the moment I'm actually running my own website called the Java",
    "start": "31039",
    "end": "37640"
  },
  {
    "text": "passion.com so today's topic is CDI how many of you have used",
    "start": "37640",
    "end": "43879"
  },
  {
    "text": "CDI oh okay several of you okay all right so let me just move on",
    "start": "43879",
    "end": "51399"
  },
  {
    "text": "right so I'm going to spend about 30 minutes talking about CDI Basics and I'm going to talk about Advanced features of",
    "start": "51399",
    "end": "58399"
  },
  {
    "text": "CDI for about 45 minutes and uh my actually trip is",
    "start": "58399",
    "end": "63840"
  },
  {
    "text": "sponsored by Gable for so I'm going to actually do five minutes just demo right technical demo on jel and then I hope",
    "start": "63840",
    "end": "71360"
  },
  {
    "text": "you have some time for Q&A by the way everything I'm going to demo today is available on my website called the javap",
    "start": "71360",
    "end": "78000"
  },
  {
    "text": "passion.com sljt talks right so in that website you'll actually see CDI Basics",
    "start": "78000",
    "end": "84759"
  },
  {
    "text": "and CDI Advanced presentation which is a little bit larger number of uh content",
    "start": "84759",
    "end": "90200"
  },
  {
    "text": "understand what I'm going to talk about today so let's talk about the basics of",
    "start": "90200",
    "end": "97079"
  },
  {
    "text": "CDI so these are the topics of CDI uh so the topics that are grade out are not uh",
    "start": "97079",
    "end": "104399"
  },
  {
    "text": "those are the topics that I'm not going to talk about today because those are two Basics and I don't have enough time",
    "start": "104399",
    "end": "110439"
  },
  {
    "text": "but uh the topics in bold font uh those are the things I'm going to talk about",
    "start": "110439",
    "end": "115960"
  },
  {
    "start": "115000",
    "end": "233000"
  },
  {
    "text": "so what Ison why CDI I assume everyone of you understand the concept of",
    "start": "115960",
    "end": "121360"
  },
  {
    "text": "dependence injection right di okay so CDI basically unifies existing",
    "start": "121360",
    "end": "128759"
  },
  {
    "text": "dependency injection schemes so you probably have used the sping framework dependency injection what juice or seen",
    "start": "128759",
    "end": "136319"
  },
  {
    "text": "and basically these are proprietary dependency inje schemes even though those are popular now CDI standardized",
    "start": "136319",
    "end": "143440"
  },
  {
    "text": "these dependence injection schemes it provides a completely new and richer dependence inje injection scheme",
    "start": "143440",
    "end": "150560"
  },
  {
    "text": "compared to these three dependence injection schemes and it provides a type",
    "start": "150560",
    "end": "155640"
  },
  {
    "text": "safe dependence injection and I'm going to explain what I mean by that in the rest of the",
    "start": "155640",
    "end": "161560"
  },
  {
    "text": "presentation and it's designed for use with a stateful object so it's sometimes called the scope object uh this scope",
    "start": "161560",
    "end": "168599"
  },
  {
    "text": "object something I'm not going to talk about because this is again pretty basic concept you probably know the session",
    "start": "168599",
    "end": "173959"
  },
  {
    "text": "scope application scope and requested scope now it has a conversation scope and it's a dependency a dependency scope",
    "start": "173959",
    "end": "181760"
  },
  {
    "text": "okay so basically it's providing this scope object now the difference between CDI and other uh the scope object you",
    "start": "181760",
    "end": "189840"
  },
  {
    "text": "probably have used is that in CDI it is a CDI container's responsibility to manage the life cycle of the scope",
    "start": "189840",
    "end": "197040"
  },
  {
    "text": "object other than that the concepts are pretty much the same and I'm going to talk I'm not going I'm not going to",
    "start": "197040",
    "end": "202319"
  },
  {
    "text": "actually talk about that now CDI initially called Web beans and the scope",
    "start": "202319",
    "end": "209080"
  },
  {
    "text": "of the was very small is basically to use egb beans as a managed beans of JSF",
    "start": "209080",
    "end": "216519"
  },
  {
    "text": "okay so instead of two separate component model they want to comp combine these two component model that",
    "start": "216519",
    "end": "222000"
  },
  {
    "text": "was actually original goal and that is still being supported in CDI but CDI is actually kind of broadened the scope of",
    "start": "222000",
    "end": "229439"
  },
  {
    "text": "uh the GSR okay so that's basically what we're going to talk about today so another exciting feature of CDI",
    "start": "229439",
    "end": "237319"
  },
  {
    "start": "233000",
    "end": "439000"
  },
  {
    "text": "is extensibility okay in fact I believe this is a killer feature of CDI we are",
    "start": "237319",
    "end": "242519"
  },
  {
    "text": "not going to actually use this extensibility for a while okay however this allows you to build your own Java e",
    "start": "242519",
    "end": "250519"
  },
  {
    "text": "platform so if you don't like any of the features that are provided by Java e platform right now Java E6 you can",
    "start": "250519",
    "end": "256759"
  },
  {
    "text": "change the behavior of the services and if somebody actually build a brand new services and then you can",
    "start": "256759",
    "end": "263520"
  },
  {
    "text": "actually take advantage of it in a portable fashion in fact Jos guys who are you know they are in back the",
    "start": "263520",
    "end": "270039"
  },
  {
    "text": "reference Implement implementor of CDI basically they are rewriting their same",
    "start": "270039",
    "end": "275759"
  },
  {
    "text": "framework as a collection of CDI extensions and you can take advantage of all those extensions they buil whether",
    "start": "275759",
    "end": "282120"
  },
  {
    "text": "that's a security or loging on your CDI platform right so basically you can",
    "start": "282120",
    "end": "288160"
  },
  {
    "text": "think of CDA allowed you to build your next generation of java e platform on your own right so it's pretty exciting",
    "start": "288160",
    "end": "295919"
  },
  {
    "text": "all right but we're not going to talk about that feature today all right so why we need a CDI for Java",
    "start": "295919",
    "end": "302960"
  },
  {
    "text": "e platform by the way even though CDI the GSL says is actually context dependence injection for Java e platform",
    "start": "302960",
    "end": "310280"
  },
  {
    "text": "it could be used on Java SE platform as well okay all right now why we need CDI",
    "start": "310280",
    "end": "319400"
  },
  {
    "text": "on Java e platform the reason is the first existing Java e platform meaning",
    "start": "319400",
    "end": "325639"
  },
  {
    "text": "Java E5 meaning I'm I meant the previous version of java platform meaning Java",
    "start": "325639",
    "end": "331280"
  },
  {
    "text": "E5 have a dependency injection schemes however the resources that you can",
    "start": "331280",
    "end": "337400"
  },
  {
    "text": "inject are known resources to container meaning it doesn't provide general",
    "start": "337400",
    "end": "342680"
  },
  {
    "text": "purpose dependence injection scheme like a spring framework so we need general purpose application Level dependence",
    "start": "342680",
    "end": "349639"
  },
  {
    "text": "injection scheme like a framewor uh spring framework and that's basically what CDI provides okay second reason is",
    "start": "349639",
    "end": "356520"
  },
  {
    "text": "we need a type based dependenc in injection so type based injection",
    "start": "356520",
    "end": "363280"
  },
  {
    "text": "generally considered is providing more robust implementation and it actually",
    "start": "363280",
    "end": "369000"
  },
  {
    "text": "enables a better tooling as opposed to string or XML based dependence injection",
    "start": "369000",
    "end": "376440"
  },
  {
    "text": "okay so spring framework you're basically using either XML or the string based well you know right now they",
    "start": "376440",
    "end": "382919"
  },
  {
    "text": "actually support the uh the uh annotation based injection as well but in general you know you're probably most",
    "start": "382919",
    "end": "389400"
  },
  {
    "text": "uh mostly you are probably familiar with the string based injection is Being Framed all right moving forward Bean",
    "start": "389400",
    "end": "395880"
  },
  {
    "text": "definition so we have used this term Bean in many",
    "start": "395880",
    "end": "401000"
  },
  {
    "text": "different context you have a JSF Bean you have a ejb bean you have a sping Bean seam Bean now we have a CDI Bean so",
    "start": "401000",
    "end": "408479"
  },
  {
    "text": "what Bean are we talking about okay so there is in fact a lot of different definitions of beans that's the reason",
    "start": "408479",
    "end": "415520"
  },
  {
    "text": "in Java E6 it has a managed Bean one that specification defines what a bean",
    "start": "415520",
    "end": "421319"
  },
  {
    "text": "is all about okay so what is the definition of The Bean in managed Bean",
    "start": "421319",
    "end": "427039"
  },
  {
    "text": "one. is very very simple it's a poo class that is managed by the container",
    "start": "427039",
    "end": "432960"
  },
  {
    "text": "okay in a simplis fashion so it's very lightweight and instances again managed by the container all",
    "start": "432960",
    "end": "439280"
  },
  {
    "start": "439000",
    "end": "517000"
  },
  {
    "text": "right so what about the other beans from the context of this Bean managed managed",
    "start": "439280",
    "end": "446000"
  },
  {
    "text": "Bean specification what is a e ejb Bean what is the JSF being what is for",
    "start": "446000",
    "end": "451800"
  },
  {
    "text": "example rest Bean basically these are the beans managed beans with extra",
    "start": "451800",
    "end": "458520"
  },
  {
    "text": "services so ejb is a managed Bean with ejb specific",
    "start": "458520",
    "end": "464280"
  },
  {
    "text": "services for example transaction or security and threat management and things like that or persistence okay but",
    "start": "464280",
    "end": "470960"
  },
  {
    "text": "rest Bean you can think of is a managed Bean with some HTTP services and CDI is",
    "start": "470960",
    "end": "477159"
  },
  {
    "text": "a managed being with a CDI services so what do I mean by CDI services in fact",
    "start": "477159",
    "end": "482400"
  },
  {
    "text": "that's what you're going to talk about in the rest of the presentation so these are a subset of the services that are",
    "start": "482400",
    "end": "489639"
  },
  {
    "text": "provided by CDI Bean Discovery okay how Bean is being discovered by be uh CDI",
    "start": "489639",
    "end": "497000"
  },
  {
    "text": "container or CDI runtime set of qualifiers again we're going to talk about each of these in a bit more detail",
    "start": "497000",
    "end": "503080"
  },
  {
    "text": "so I'm going to just move on so this is a CDI Bean example you can",
    "start": "503080",
    "end": "509800"
  },
  {
    "text": "see this is a poo okay there is no XML there is no annotation it's a genuine",
    "start": "509800",
    "end": "515320"
  },
  {
    "text": "CDI okay all right all right so let's talk about the first CDI Services Bean",
    "start": "515320",
    "end": "523200"
  },
  {
    "start": "517000",
    "end": "622000"
  },
  {
    "text": "Discovery okay so how that CD at one time figures out the beans of your",
    "start": "523200",
    "end": "529440"
  },
  {
    "text": "application basically it scans the class path now in the class path there are",
    "start": "529440",
    "end": "536760"
  },
  {
    "text": "archives not only for your application but also from the systems and you want the CD one time to",
    "start": "536760",
    "end": "545160"
  },
  {
    "text": "discover only the beans that you provide right so the way that you can specify",
    "start": "545160",
    "end": "551560"
  },
  {
    "text": "this is the archive that I want the CDI container to scan is by providing an XML",
    "start": "551560",
    "end": "558640"
  },
  {
    "text": "file called the beans. XML okay so in fact there is an XML file however unlike",
    "start": "558640",
    "end": "564600"
  },
  {
    "text": "in Spring framework context configuration file in which you declare all the beans the role of the beans.xml",
    "start": "564600",
    "end": "570360"
  },
  {
    "text": "file in CDI context is not for declaring your beans is basically the presence of",
    "start": "570360",
    "end": "577040"
  },
  {
    "text": "it in a bean uh the archive indicates to the CDI run time this is the archive I",
    "start": "577040",
    "end": "582640"
  },
  {
    "text": "want the container to scan does that make sense okay so in the case of War",
    "start": "582640",
    "end": "588800"
  },
  {
    "text": "file the be. XML file is in web INF directory and for jav file is in the",
    "start": "588800",
    "end": "596040"
  },
  {
    "text": "meta INF directory so as I said before is not for declaring your beans so it",
    "start": "596040",
    "end": "602680"
  },
  {
    "text": "could be empty okay it's just the presence of the beans uh XML file just indicates to the",
    "start": "602680",
    "end": "610000"
  },
  {
    "text": "container that this is the archive that needs to be scanned now it will be used",
    "start": "610000",
    "end": "615200"
  },
  {
    "text": "later on for advanced features of CDI so you're going to actually take a look at examples of those later",
    "start": "615200",
    "end": "622200"
  },
  {
    "start": "622000",
    "end": "690000"
  },
  {
    "text": "on okay so basic injections how you going to actually inject your beans pretty",
    "start": "622200",
    "end": "627560"
  },
  {
    "text": "straightforward basically you're going to use at inject annotation with a Java",
    "start": "627560",
    "end": "632720"
  },
  {
    "text": "type and variable for field injection okay so Java type could be",
    "start": "632720",
    "end": "639800"
  },
  {
    "text": "either interface or it could be class typically it's going to be interface So when you say inject greeting greeting",
    "start": "639800",
    "end": "647440"
  },
  {
    "text": "what that means is that I want an object instance of greeting type okay so",
    "start": "647440",
    "end": "653639"
  },
  {
    "text": "nothing different from Spring framework so once you got the object injected that",
    "start": "653639",
    "end": "658760"
  },
  {
    "text": "you can invoke the method of that object okay nothing that much different from rest of the uh dependency injection",
    "start": "658760",
    "end": "665040"
  },
  {
    "text": "scheme injection Point could be a field that's an example that we have seen in",
    "start": "665040",
    "end": "670800"
  },
  {
    "text": "previous slide but it could be a method me method could be Constructor or initializer or seta method or it could",
    "start": "670800",
    "end": "677920"
  },
  {
    "text": "be producer and observer and again we're going to take a look at examples of the",
    "start": "677920",
    "end": "684040"
  },
  {
    "text": "producer and observer uh the injection points again there is not that much difference from Spring framework okay",
    "start": "684040",
    "end": "691160"
  },
  {
    "start": "690000",
    "end": "839000"
  },
  {
    "text": "okay okay so I'm going to give you my first demo for those of you who have't access",
    "start": "691160",
    "end": "697480"
  },
  {
    "text": "again to the internet again you can actually download uh CDI Basics Hands-On",
    "start": "697480",
    "end": "702800"
  },
  {
    "text": "lab and CDI Advanced handson lab and uh you can actually run the exactly same uh",
    "start": "702800",
    "end": "708200"
  },
  {
    "text": "demo application that I'm running right now so those are all Maven projects should be able to import it and just run",
    "start": "708200",
    "end": "714839"
  },
  {
    "text": "it okay so I am going to inject so let me actually show the",
    "start": "714839",
    "end": "721600"
  },
  {
    "text": "code so this is a very simple serlet code and here is injecting ejb Bean okay",
    "start": "721600",
    "end": "730360"
  },
  {
    "text": "and once ejb Bean is injected I connect a call okay right now and this is a",
    "start": "730360",
    "end": "737399"
  },
  {
    "text": "greeting Bean okay now in Java E5 so this is the way that you are injecting a",
    "start": "737399",
    "end": "743800"
  },
  {
    "text": "resource like using at ejb moving forward is recommended that you use add",
    "start": "743800",
    "end": "750240"
  },
  {
    "text": "inject annotation rather than old annotation like ajb okay so let me run",
    "start": "750240",
    "end": "755680"
  },
  {
    "text": "this application then I'm going to change this code to use add inject anotation okay so let me",
    "start": "755680",
    "end": "763760"
  },
  {
    "text": "run this code okay so it's very simple code",
    "start": "763760",
    "end": "770639"
  },
  {
    "text": "calling a method of injected method and AOW quote camper okay so I'm going to change this code to use add inject",
    "start": "770639",
    "end": "781120"
  },
  {
    "text": "and okay so I import uh inject and just to make sure I'm not lying to you I'm",
    "start": "783839",
    "end": "789760"
  },
  {
    "text": "going to just change this code uh injected maybe ejb class something like",
    "start": "789760",
    "end": "797120"
  },
  {
    "text": "that say the change and refresh you can see it's now",
    "start": "797120",
    "end": "805360"
  },
  {
    "text": "using at inject annotation is used used in replacement",
    "start": "805360",
    "end": "811040"
  },
  {
    "text": "of at EB okay so moving forward is recommended that you use CDI annotation",
    "start": "811040",
    "end": "818040"
  },
  {
    "text": "rather than old at EB or at resource annotations okay all right moving",
    "start": "818040",
    "end": "825480"
  },
  {
    "text": "forward okay qualifier so again the concept of qualify is available in all other",
    "start": "830279",
    "end": "837399"
  },
  {
    "text": "dependenc injection scheme so what is a qualifier by the way qualifier is a type this is a very",
    "start": "837399",
    "end": "845120"
  },
  {
    "start": "839000",
    "end": "910000"
  },
  {
    "text": "important concept and I'm going to actually emphasize this aspect several times in my presentation okay all right",
    "start": "845120",
    "end": "852399"
  },
  {
    "text": "so qualify is basically when you happen to have a multiple candidates for the",
    "start": "852399",
    "end": "857480"
  },
  {
    "text": "type you are looking for unless you are using qualifier",
    "start": "857480",
    "end": "864399"
  },
  {
    "text": "ambiguity error will occur because CDI runtime doesn't know which one to to choose okay so qualifier is used to",
    "start": "864399",
    "end": "873279"
  },
  {
    "text": "select a particular type among the multiple candidates okay very simple",
    "start": "873279",
    "end": "880720"
  },
  {
    "text": "concept okay so the way that you're going to use a qualifier is set of qualifiers and Java type so in this case",
    "start": "880720",
    "end": "887880"
  },
  {
    "text": "I'm not just asking just regular user type object but I'm also as I'm actually",
    "start": "887880",
    "end": "893079"
  },
  {
    "text": "asking the combination of these two I'm let me just repeat I'm not just",
    "start": "893079",
    "end": "899199"
  },
  {
    "text": "asking for just regular user type I'm asking for at logged in and user type",
    "start": "899199",
    "end": "906040"
  },
  {
    "text": "combination object okay all right so how you going",
    "start": "906040",
    "end": "911199"
  },
  {
    "start": "910000",
    "end": "933000"
  },
  {
    "text": "to actually build and use a qualifier so first you are going to build the",
    "start": "911199",
    "end": "916720"
  },
  {
    "text": "qualifier is basically annotation okay so you're going to actually build an the the qualifier in",
    "start": "916720",
    "end": "923880"
  },
  {
    "text": "the form of anotation so here I'm actually building informal qualifier",
    "start": "923880",
    "end": "930440"
  },
  {
    "text": "okay this is your type all right now you are going to",
    "start": "930440",
    "end": "936519"
  },
  {
    "start": "933000",
    "end": "991000"
  },
  {
    "text": "qualify an implementation with that qualifier type you are basically adding",
    "start": "936519",
    "end": "942040"
  },
  {
    "text": "extra type to this implementation it's not just regular migrating type It's a combination of",
    "start": "942040",
    "end": "950120"
  },
  {
    "text": "informal and migrating type does that make sense all right now when you are",
    "start": "950120",
    "end": "957079"
  },
  {
    "text": "using as a consumer as is actually a coder who wants an object instance of",
    "start": "957079",
    "end": "964240"
  },
  {
    "text": "the qualified Java type so basically you are going to specify I want not just not",
    "start": "964240",
    "end": "971120"
  },
  {
    "text": "just reg the the regular greeing type I want informal and reading type",
    "start": "971120",
    "end": "977079"
  },
  {
    "text": "combination object make sense you see the reason why I'm saying that this",
    "start": "977079",
    "end": "982199"
  },
  {
    "text": "qualifier is a type is actually extending the type of java this is a power a very powerful concept if you",
    "start": "982199",
    "end": "988560"
  },
  {
    "text": "think about it okay okay so this is the point that I just mentioned so qualify and Java type",
    "start": "988560",
    "end": "996360"
  },
  {
    "start": "991000",
    "end": "1027000"
  },
  {
    "text": "make a composite type or extended type okay so you can think of qualifier as",
    "start": "996360",
    "end": "1002800"
  },
  {
    "text": "extra type that you can associate or bind to a particular implementation class okay so qualifiers make type save",
    "start": "1002800",
    "end": "1010560"
  },
  {
    "text": "injection possible so qualifier is a genuine Java type okay so instead of",
    "start": "1010560",
    "end": "1016279"
  },
  {
    "text": "using string now you're using anyone Java type this is a way that we can make",
    "start": "1016279",
    "end": "1022040"
  },
  {
    "text": "type safe dependence injection possible okay all",
    "start": "1022040",
    "end": "1027760"
  },
  {
    "text": "right there are several built-in qualifiers that are provided by CDI",
    "start": "1027760",
    "end": "1033400"
  },
  {
    "text": "implementation first at named I'm going to actually talk about at named in the following slide and then we have a",
    "start": "1033400",
    "end": "1040558"
  },
  {
    "text": "default if you don't specify any qualifier for a particular being then at",
    "start": "1040559",
    "end": "1047360"
  },
  {
    "text": "default qualifier is assumed okay all right the new is if you",
    "start": "1047360",
    "end": "1055280"
  },
  {
    "text": "want to actually create an object instance without associating a scope that's the time that you can use at new",
    "start": "1055280",
    "end": "1062080"
  },
  {
    "text": "for example if you want to inject the bean instance as one of the argument of a method this could be actually the",
    "start": "1062080",
    "end": "1068640"
  },
  {
    "text": "usage of the new we'll see an example of that in one of the demos and any is",
    "start": "1068640",
    "end": "1075000"
  },
  {
    "text": "basically you want actually provide injection point for any qualified type",
    "start": "1075000",
    "end": "1080320"
  },
  {
    "text": "okay that's the time you can use at any all right moving forward so let's",
    "start": "1080320",
    "end": "1085440"
  },
  {
    "text": "actually try the second demo here I'm going to actually show you ambiguity",
    "start": "1085440",
    "end": "1091120"
  },
  {
    "text": "eror first okay and then we are going to use a qualifier so let me show the",
    "start": "1091120",
    "end": "1098400"
  },
  {
    "text": "code so this is the ambiguity case so we",
    "start": "1098400",
    "end": "1103840"
  },
  {
    "text": "have so this is exactly the same code that we have seen in previous code here we are in injecting greeing interface",
    "start": "1103840",
    "end": "1110919"
  },
  {
    "text": "type object now we have two implementations of this interface we have formal greeing which is in in",
    "start": "1110919",
    "end": "1117320"
  },
  {
    "text": "implements the greeting interface and we have informal greeting also implements greeting interface so we have a two",
    "start": "1117320",
    "end": "1124000"
  },
  {
    "text": "candidate okay so when you run this application CDI run time doesn't know which one to choose so it will throw",
    "start": "1124000",
    "end": "1131320"
  },
  {
    "text": "exception ambiguity exception okay so let's run that application",
    "start": "1131320",
    "end": "1137600"
  },
  {
    "text": "okay so if I see the detail of this era you can see ambiguity dependency",
    "start": "1141520",
    "end": "1149200"
  },
  {
    "text": "error okay because there are two candidates all right so let me",
    "start": "1149200",
    "end": "1155480"
  },
  {
    "text": "remove that",
    "start": "1155480",
    "end": "1158840"
  },
  {
    "text": "case all right now so we are going to use a qualifier this time so we have",
    "start": "1160880",
    "end": "1166159"
  },
  {
    "text": "defined so this is the uh same code but we using a qualifier informal qualifier",
    "start": "1166159",
    "end": "1173360"
  },
  {
    "text": "so informal qualifier is basically qualify annotation that we",
    "start": "1173360",
    "end": "1178799"
  },
  {
    "text": "have defined okay and then the implementation in the uh informal",
    "start": "1178799",
    "end": "1184520"
  },
  {
    "text": "greeding implementation is bound with this informal qualify meaning this",
    "start": "1184520",
    "end": "1190559"
  },
  {
    "text": "implementation class is qualified with ADD informal qualifier type so this is",
    "start": "1190559",
    "end": "1197400"
  },
  {
    "text": "not just regular inform greeting class it is a combination of this and this",
    "start": "1197400",
    "end": "1203600"
  },
  {
    "text": "okay same reason we have a formal greeting is anotated with formal",
    "start": "1203600",
    "end": "1209679"
  },
  {
    "text": "qualifier got it so now here in this code I'm asking",
    "start": "1209679",
    "end": "1214760"
  },
  {
    "text": "for implementation class of informal type okay so if I run this",
    "start": "1214760",
    "end": "1222760"
  },
  {
    "text": "application it will say informal okay because it picked up",
    "start": "1224200",
    "end": "1229520"
  },
  {
    "text": "informal type of implementation class okay now if I change this one to",
    "start": "1229520",
    "end": "1237039"
  },
  {
    "text": "formal now is picking up formal implementation class ex sense all",
    "start": "1246559",
    "end": "1253640"
  },
  {
    "text": "right",
    "start": "1253640",
    "end": "1256640"
  },
  {
    "text": "by the way I'm using Gable underne so whenever I make a change you know I don't have to rebuild and redeploy the",
    "start": "1260200",
    "end": "1266280"
  },
  {
    "text": "application okay all right moving forward so qualifier is annotation okay",
    "start": "1266280",
    "end": "1273799"
  },
  {
    "text": "so the examples that we have seen is we have informal annotation informal qualifier and formal qualifier so we",
    "start": "1273799",
    "end": "1280120"
  },
  {
    "text": "have only two qualifiers however suppose you got hundreds of qualifiers you don't want to",
    "start": "1280120",
    "end": "1285919"
  },
  {
    "text": "actually Define hundred of qualifiers right instead you want to use an attribute because it's a genuine annotation you can have a set of",
    "start": "1285919",
    "end": "1292559"
  },
  {
    "text": "attributes right so here I'm actually defining various greeing qualifier with",
    "start": "1292559",
    "end": "1299000"
  },
  {
    "text": "an attribute a single attribute and the default value is greeing type informal that's in type okay so this is the",
    "start": "1299000",
    "end": "1307120"
  },
  {
    "text": "definition of qualifier using an attribute this time and then I'm binding",
    "start": "1307120",
    "end": "1312159"
  },
  {
    "text": "my class meaning I'm qualifying this implementation class again with this",
    "start": "1312159",
    "end": "1317200"
  },
  {
    "text": "qualifier with that attribute value make sense and then when you're",
    "start": "1317200",
    "end": "1322760"
  },
  {
    "text": "using that the uh the qualifier again you are going to specify the value of it",
    "start": "1322760",
    "end": "1328679"
  },
  {
    "text": "as an attribute make sense all right pretty straightforward so I'm going to skip",
    "start": "1328679",
    "end": "1334960"
  },
  {
    "text": "this demo because it's going to result the same you know look and Fa okay all right moving forward named built-in",
    "start": "1334960",
    "end": "1342159"
  },
  {
    "start": "1340000",
    "end": "1456000"
  },
  {
    "text": "qualifier so why we need at named built-in qualifier Okay so",
    "start": "1342159",
    "end": "1350519"
  },
  {
    "text": "we have seen examples that the qualifier is used inside a Java code however there",
    "start": "1351000",
    "end": "1356679"
  },
  {
    "text": "are cases that we have to deal with meaning invocation of your being okay",
    "start": "1356679",
    "end": "1364240"
  },
  {
    "text": "without depending on Java for example if you're writing GSP or facelet code okay",
    "start": "1364240",
    "end": "1369559"
  },
  {
    "text": "you have to have this notation right okay so we dealing with non Java type",
    "start": "1369559",
    "end": "1375400"
  },
  {
    "text": "code in this case we have a way of referencing your be that's the time we",
    "start": "1375400",
    "end": "1382320"
  },
  {
    "text": "provide that's the time you're going to use at name anotation so here basically",
    "start": "1382320",
    "end": "1387360"
  },
  {
    "text": "what I'm saying is that I'm actually naming this be with my printer okay by",
    "start": "1387360",
    "end": "1393440"
  },
  {
    "text": "the way if you're not using that name the default name is going to be the name of the class with the cap uh the small",
    "start": "1393440",
    "end": "1399840"
  },
  {
    "text": "letter first small letter okay so here I Define my bean with my printer and then",
    "start": "1399840",
    "end": "1406480"
  },
  {
    "text": "I can use then my printer in my face letter JSP code that's what name is all",
    "start": "1406480",
    "end": "1412440"
  },
  {
    "text": "about again pretty straightforward okay moving forward okay",
    "start": "1412440",
    "end": "1418400"
  },
  {
    "text": "so far you probably have seen these things and you know what is the big deal",
    "start": "1418400",
    "end": "1423440"
  },
  {
    "text": "okay I can do pretty much anything that I explained so far using just regular",
    "start": "1423440",
    "end": "1428520"
  },
  {
    "text": "Java code Java and Java implementation interface right so what is a big deal",
    "start": "1428520",
    "end": "1434080"
  },
  {
    "text": "right so basically the second part of this presentation is going to actually answer that question so these are where",
    "start": "1434080",
    "end": "1440559"
  },
  {
    "text": "the power of CDI we going we going to talk about so these are the topics we're",
    "start": "1440559",
    "end": "1446440"
  },
  {
    "text": "going to talk about producer events alternative Interceptor and decorator",
    "start": "1446440",
    "end": "1451919"
  },
  {
    "text": "and stereotype okay so let's move on to producer so producer method so so far",
    "start": "1451919",
    "end": "1459480"
  },
  {
    "start": "1456000",
    "end": "1541000"
  },
  {
    "text": "the example you have seen is that you know you ask a be and the container will",
    "start": "1459480",
    "end": "1464840"
  },
  {
    "text": "actually find the class and it will actually call The Constructor method of the being create an instance and give it",
    "start": "1464840",
    "end": "1469960"
  },
  {
    "text": "to you right okay now producer let you have a control of being",
    "start": "1469960",
    "end": "1477559"
  },
  {
    "text": "instanciation okay for example you want to create a bin instance based on",
    "start": "1477559",
    "end": "1482919"
  },
  {
    "text": "business logic okay based on your mood based on time of the day whatever okay",
    "start": "1482919",
    "end": "1487960"
  },
  {
    "text": "so it might in fact give you a different B instance depending on business condition okay you could actually create",
    "start": "1487960",
    "end": "1495120"
  },
  {
    "text": "a non-be object as well using produces okay and if you have to provide some",
    "start": "1495120",
    "end": "1501880"
  },
  {
    "text": "custom setup instead of a dependent Constructor method of The Bean if you want to have some custom instantiation",
    "start": "1501880",
    "end": "1508799"
  },
  {
    "text": "again this is where producers could be used so again two major principles of",
    "start": "1508799",
    "end": "1517279"
  },
  {
    "text": "CDI is loose coupling and type based dependen injection okay so this is again",
    "start": "1517279",
    "end": "1523480"
  },
  {
    "text": "one examples of loosely coupled framework okay okay all right so here",
    "start": "1523480",
    "end": "1530320"
  },
  {
    "text": "you are actually separating out the producer of the bin instance from the",
    "start": "1530320",
    "end": "1535480"
  },
  {
    "text": "consumer consumer doesn't care how the bean instance gets created okay all right okay so let's see examples so this",
    "start": "1535480",
    "end": "1543000"
  },
  {
    "text": "is the case that a bean instance is being created depending on business",
    "start": "1543000",
    "end": "1549080"
  },
  {
    "text": "logic so here so this is the consumer consumer basically says I want the coder object",
    "start": "1549080",
    "end": "1557279"
  },
  {
    "text": "instance who qualifier is chosen okay and the consumer doesn't care how the B",
    "start": "1557279",
    "end": "1563240"
  },
  {
    "text": "instance gets created okay now this is how you could",
    "start": "1563240",
    "end": "1568760"
  },
  {
    "text": "create the coder chosen coder object instance here basically again this is an",
    "start": "1568760",
    "end": "1574919"
  },
  {
    "text": "example of new here we have got two implementation object being passed okay",
    "start": "1574919",
    "end": "1580640"
  },
  {
    "text": "uh to this method and depending on the logic so here in this code the code type",
    "start": "1580640",
    "end": "1587039"
  },
  {
    "text": "is something the user will actually said I'm going to actually give the demo in a few seconds based on what what the user",
    "start": "1587039",
    "end": "1593399"
  },
  {
    "text": "said it will choose either object instance of this or object instance of",
    "start": "1593399",
    "end": "1600039"
  },
  {
    "text": "this okay so different object instance will be created and will be returned",
    "start": "1600039",
    "end": "1606440"
  },
  {
    "text": "again client meaning consumer doesn't care how the object instance get created",
    "start": "1606440",
    "end": "1612039"
  },
  {
    "text": "this is in fact Loosely coupled okay the model that I just talked about all right",
    "start": "1612039",
    "end": "1619840"
  },
  {
    "start": "1618000",
    "end": "1632000"
  },
  {
    "text": "okay creation of non-b instance in this case I want to actually have a face context object okay and you can create",
    "start": "1619840",
    "end": "1627640"
  },
  {
    "text": "the SP context object and now it is a bean instance",
    "start": "1627640",
    "end": "1632799"
  },
  {
    "start": "1632000",
    "end": "1959000"
  },
  {
    "text": "okay all right so let me actually show you a few",
    "start": "1632799",
    "end": "1637720"
  },
  {
    "text": "demos so let me run this application first and I'm going to show the",
    "start": "1640799",
    "end": "1646559"
  },
  {
    "text": "code so here we are actually injecting three different object instance uh this",
    "start": "1646760",
    "end": "1652440"
  },
  {
    "text": "is a string this is integer and this is the again integer okay so let's actually",
    "start": "1652440",
    "end": "1658279"
  },
  {
    "text": "see the consumer code first so this is hello Ser",
    "start": "1658279",
    "end": "1664799"
  },
  {
    "text": "Java so basically I'm asking not just regular string object",
    "start": "1664799",
    "end": "1672240"
  },
  {
    "text": "instance but formal string object instance here I'm not just asking",
    "start": "1672240",
    "end": "1677799"
  },
  {
    "text": "regular int primitive type but Max number int",
    "start": "1677799",
    "end": "1683600"
  },
  {
    "text": "type and here again I'm actually asking for not just regular integer type but random integer type okay all right so",
    "start": "1683600",
    "end": "1693200"
  },
  {
    "text": "let's actually see producers again consumer doesn't care how the object instance gets",
    "start": "1693200",
    "end": "1699840"
  },
  {
    "text": "created here producers is there okay so here this is the code so depending on",
    "start": "1699840",
    "end": "1706000"
  },
  {
    "text": "the time of the day difference string object will be",
    "start": "1706000",
    "end": "1711398"
  },
  {
    "text": "created make sense this is an example of business logic is used to create a",
    "start": "1712120",
    "end": "1717799"
  },
  {
    "text": "different bin instance do you agree with that okay all right same thing with the max number okay so here you know we",
    "start": "1717799",
    "end": "1725039"
  },
  {
    "text": "don't have that much of the setup code but here you know the this Max number could be generated depending on again",
    "start": "1725039",
    "end": "1731640"
  },
  {
    "text": "your mood or depending on whatever business logic you want and same thing with this okay all right",
    "start": "1731640",
    "end": "1739240"
  },
  {
    "text": "now uh let's see I'm going to actually do couple of exercises so here we Define",
    "start": "1739240",
    "end": "1746360"
  },
  {
    "text": "the formal okay and it produces formal type of string okay and this is the",
    "start": "1746360",
    "end": "1753880"
  },
  {
    "text": "consumer okay what happens if I actually do this what do you",
    "start": "1753880",
    "end": "1761880"
  },
  {
    "text": "think what do you think it will happen well you know it happen this again is actually you know J",
    "start": "1764840",
    "end": "1771080"
  },
  {
    "text": "actually doesn't work okay so it's unsa unsatisfied dependencies okay",
    "start": "1771080",
    "end": "1777840"
  },
  {
    "text": "because if you remove this one it's going to be default",
    "start": "1777840",
    "end": "1783919"
  },
  {
    "text": "qualifier okay however the consumer was asking formal qualifier so there was no",
    "start": "1783919",
    "end": "1791760"
  },
  {
    "text": "formal string object available that's the reason we got unsatisfied okay dependency injection",
    "start": "1791760",
    "end": "1799240"
  },
  {
    "text": "okay so now if I remove this one do you think it will work how many of you think it will work",
    "start": "1799240",
    "end": "1807200"
  },
  {
    "text": "how many of you think it will not work how many of you don't know what you're doing you're here for pizza be honest no",
    "start": "1807200",
    "end": "1815080"
  },
  {
    "text": "I'm just kidding all right it should work because here the producer is generating",
    "start": "1815080",
    "end": "1821720"
  },
  {
    "text": "default qualifier object and consumer is also asking for the default objects so",
    "start": "1821720",
    "end": "1828919"
  },
  {
    "text": "it should work okay so if I just run it",
    "start": "1828919",
    "end": "1836519"
  },
  {
    "text": "again it works okay what about the case that now I'm going to",
    "start": "1838000",
    "end": "1846360"
  },
  {
    "text": "remove this guy it would work or not it didn't work",
    "start": "1846760",
    "end": "1855279"
  },
  {
    "text": "okay okay again this guy was actually looking for you know you can see unsatisfied",
    "start": "1855279",
    "end": "1863039"
  },
  {
    "text": "dependencies because this is providing formal string object however this is",
    "start": "1863039",
    "end": "1869840"
  },
  {
    "text": "guys this guy is asking for default string object okay all",
    "start": "1869840",
    "end": "1876919"
  },
  {
    "text": "right okay so that is the first demo now let's take a look at the second demo that is the one that I showed uh in the",
    "start": "1877840",
    "end": "1885559"
  },
  {
    "text": "presentation so let me just run this application so here this the string encoder so I",
    "start": "1885559",
    "end": "1891760"
  },
  {
    "text": "have a two choice I can either choose test or shift letters and depending on what I choose different implementation",
    "start": "1891760",
    "end": "1900000"
  },
  {
    "text": "will be used for creating an object instance so here if I choose a and then",
    "start": "1900000",
    "end": "1905240"
  },
  {
    "text": "if I want to move by two then it will generally it will actually display C",
    "start": "1905240",
    "end": "1910720"
  },
  {
    "text": "okay and this is actually using implementation based on this but if I use test version of it then it will use",
    "start": "1910720",
    "end": "1917080"
  },
  {
    "text": "a different implement ation okay so if we see the code that is",
    "start": "1917080",
    "end": "1922360"
  },
  {
    "text": "basically what I showed you in the",
    "start": "1922360",
    "end": "1926080"
  },
  {
    "text": "presentation so we have coder implementation and test coder implementation and",
    "start": "1927760",
    "end": "1936158"
  },
  {
    "text": "here depending on what user has chosen okay so this coder type is set from the",
    "start": "1936240",
    "end": "1943519"
  },
  {
    "text": "JSP page okay and depending on which one I chose it will choose a different",
    "start": "1943519",
    "end": "1949720"
  },
  {
    "text": "implementation for providing object instance make sense all",
    "start": "1949720",
    "end": "1956399"
  },
  {
    "text": "right okay moving forward type save use of java E",
    "start": "1956399",
    "end": "1964639"
  },
  {
    "start": "1959000",
    "end": "2044000"
  },
  {
    "text": "Resources so this is another usage of producers and again this is in fact one",
    "start": "1964639",
    "end": "1970760"
  },
  {
    "text": "of the differences that you will see in fact you know what is possible with existing Java type versus what is",
    "start": "1970760",
    "end": "1976880"
  },
  {
    "text": "possible with the CDI now in Old Java E5 code okay you might",
    "start": "1976880",
    "end": "1983000"
  },
  {
    "text": "in fact have to use a string value like this okay persistent unit if you have just one single persistent unit you",
    "start": "1983000",
    "end": "1988639"
  },
  {
    "text": "don't have to specify it but you could have a multiple persistent unit in that case you have to specify and this one is",
    "start": "1988639",
    "end": "1994159"
  },
  {
    "text": "just a persistent unit resource however if you're actually providing like a connection Factory of jmss you know again you have to specify the string",
    "start": "1994159",
    "end": "2000600"
  },
  {
    "text": "value of it okay now if you have to have multiple places where you have to spef",
    "start": "2000600",
    "end": "2007919"
  },
  {
    "text": "ify these resources using strings okay what you can do is you can use a",
    "start": "2007919",
    "end": "2014840"
  },
  {
    "text": "producers to create a single so here this is an example so here instead of",
    "start": "2014840",
    "end": "2021639"
  },
  {
    "text": "actually having this produc producer field persistent unit in many different places I'm going to actually have a",
    "start": "2021639",
    "end": "2028279"
  },
  {
    "text": "single location where I'm actually producing user database type of",
    "start": "2028279",
    "end": "2033840"
  },
  {
    "text": "persistent complex object in this case entity manager object okay again this usual manager um usual",
    "start": "2033840",
    "end": "2040679"
  },
  {
    "text": "database is the qualifier and then in the consumer code",
    "start": "2040679",
    "end": "2047000"
  },
  {
    "text": "you are going to use this user database type so here you don't have to use a",
    "start": "2047000",
    "end": "2052200"
  },
  {
    "text": "string so this is providing again type save code okay all right so let me show the",
    "start": "2052200",
    "end": "2062960"
  },
  {
    "start": "2057000",
    "end": "2311000"
  },
  {
    "text": "demo so I'm using Java DB and Java DB is actually running from this uh for",
    "start": "2066720",
    "end": "2073158"
  },
  {
    "text": "convenience reason I'm actually running it from the NEP beans so here we don't have any tables yet so it's going to",
    "start": "2073159",
    "end": "2079480"
  },
  {
    "text": "create the to-do database table so let's actually run this application",
    "start": "2079480",
    "end": "2085800"
  },
  {
    "text": "first okay so this is the code let me run the code and I'm going to show the",
    "start": "2091280",
    "end": "2096398"
  },
  {
    "text": "code so you know I'm going to just create a",
    "start": "2096399",
    "end": "2102680"
  },
  {
    "text": "to-do list keep a talk in San Francisco job",
    "start": "2102680",
    "end": "2109480"
  },
  {
    "text": "submit oops trans about it let me just try time oh probably I didn't run it",
    "start": "2109480",
    "end": "2119000"
  },
  {
    "text": "okay okay let me see",
    "start": "2121800",
    "end": "2127320"
  },
  {
    "text": "refresh okay it's",
    "start": "2128480",
    "end": "2132000"
  },
  {
    "text": "clear just",
    "start": "2138359",
    "end": "2141799"
  },
  {
    "text": "test exception let me see",
    "start": "2143440",
    "end": "2148880"
  },
  {
    "text": "it should actually create the persistent unit persistent XML file is defined in a way that it should actually create",
    "start": "2165720",
    "end": "2171960"
  },
  {
    "text": "automatically so let me just see man I just tested before I came in",
    "start": "2171960",
    "end": "2180319"
  },
  {
    "text": "let's see what is a persistant we go",
    "start": "2180319",
    "end": "2187359"
  },
  {
    "text": "okay yeah so drop and create tables so that should work",
    "start": "2189680",
    "end": "2195119"
  },
  {
    "text": "okay so let me see I'm going to just clean build and if",
    "start": "2195119",
    "end": "2202520"
  },
  {
    "text": "it doesn't work I probably have to move",
    "start": "2202520",
    "end": "2206160"
  },
  {
    "text": "on so what is actually building let me actually show the code all right so let me just",
    "start": "2210000",
    "end": "2218760"
  },
  {
    "text": "again so this is the entity manager I mean this is again the same code that we have seen so you know by the way you can",
    "start": "2223880",
    "end": "2230640"
  },
  {
    "text": "see producers can be ex used not only in the method but also field okay so this",
    "start": "2230640",
    "end": "2237319"
  },
  {
    "text": "is actually where I'm actually producing not just regular entity manager object but us your database type of entity",
    "start": "2237319",
    "end": "2244319"
  },
  {
    "text": "manager object and then I'm actually using it in this this ejb code so here",
    "start": "2244319",
    "end": "2249640"
  },
  {
    "text": "I'm actually using that code so I'm here asking for not just regular entity manager type object but use your",
    "start": "2249640",
    "end": "2256680"
  },
  {
    "text": "database type of entity manager object okay so let me just I'm going to just",
    "start": "2256680",
    "end": "2262839"
  },
  {
    "text": "remove this guy just make sure okay and I'm going to just run it",
    "start": "2262839",
    "end": "2270440"
  },
  {
    "text": "one more time",
    "start": "2270440",
    "end": "2273880"
  },
  {
    "text": "okay test okay that worked okay and test 222",
    "start": "2280119",
    "end": "2287480"
  },
  {
    "text": "whatever and submit and if I see two items you know I got those two items",
    "start": "2287480",
    "end": "2292680"
  },
  {
    "text": "added to the database and if I want to see actual table I'm going to just",
    "start": "2292680",
    "end": "2297960"
  },
  {
    "text": "refresh and this is the too list so I'm going to actually see the view the data and you can see the two items actually",
    "start": "2297960",
    "end": "2304079"
  },
  {
    "text": "have been added as the to-do items okay so pretty straightforward",
    "start": "2304079",
    "end": "2309440"
  },
  {
    "start": "2311000",
    "end": "2404000"
  },
  {
    "text": "events so I assume everyone of us is actually quite familiar with uh Java",
    "start": "2314040",
    "end": "2320000"
  },
  {
    "text": "beans event model where you have Event Source and you have event uh receiver and event receiver has to register its",
    "start": "2320000",
    "end": "2327560"
  },
  {
    "text": "interest of getting events to the event source using add and remove event",
    "start": "2327560",
    "end": "2332640"
  },
  {
    "text": "listener it's very complex if you think about it okay so in CDR it's greatly",
    "start": "2332640",
    "end": "2339000"
  },
  {
    "text": "simplified okay and you will see what I mean by that again this is another example of loosely coupled scheme where",
    "start": "2339000",
    "end": "2346880"
  },
  {
    "text": "event producer and event consumer in fact are separated out okay all",
    "start": "2346880",
    "end": "2353839"
  },
  {
    "text": "right so the way that you're going to use this event model is you're going to",
    "start": "2353839",
    "end": "2358920"
  },
  {
    "text": "Define event class and then you're going to fire an event as a event producer and",
    "start": "2358920",
    "end": "2364200"
  },
  {
    "text": "event listener in fact this is the simplification as V listener only thing I have to do is to observe using at",
    "start": "2364200",
    "end": "2371960"
  },
  {
    "text": "observe Z notation that's it you don't have to register yourself to the Event Source anything like that okay so let's",
    "start": "2371960",
    "end": "2378520"
  },
  {
    "text": "see example of this so event class is just a project class okay so you can see this is the",
    "start": "2378520",
    "end": "2385760"
  },
  {
    "text": "locked event okay and event producer is going to have injected event object so",
    "start": "2385760",
    "end": "2393319"
  },
  {
    "text": "here we are injecting event object of this generic type and then is going to just fire using that event",
    "start": "2393319",
    "end": "2401560"
  },
  {
    "text": "object okay all right all right now as event",
    "start": "2401560",
    "end": "2407240"
  },
  {
    "start": "2404000",
    "end": "2419000"
  },
  {
    "text": "listener the only thing it has to do is using at observed an",
    "start": "2407240",
    "end": "2414119"
  },
  {
    "text": "event that's it very simple okay all right so let's do simple",
    "start": "2414119",
    "end": "2422040"
  },
  {
    "start": "2419000",
    "end": "2522000"
  },
  {
    "text": "demo",
    "start": "2422040",
    "end": "2425040"
  },
  {
    "text": "so in this code this guy is actually functioning as",
    "start": "2435400",
    "end": "2442680"
  },
  {
    "text": "both event producer and event uh listener in a single class so this is a login class you just log in and uh so",
    "start": "2442680",
    "end": "2450599"
  },
  {
    "text": "when well let me run the code first okay",
    "start": "2450599",
    "end": "2456760"
  },
  {
    "text": "so it doesn't care what username and password you're using okay it will just",
    "start": "2459240",
    "end": "2464599"
  },
  {
    "text": "accept it and if I click submit then it will just return this value very simple the suret code okay now so this is the",
    "start": "2464599",
    "end": "2472560"
  },
  {
    "text": "code now when it does perform this uh the uh the login process it's going to",
    "start": "2472560",
    "end": "2480640"
  },
  {
    "text": "fire okay the serlet code will actually you know the invoke so this is a login serlet code and uh this code will",
    "start": "2480640",
    "end": "2487960"
  },
  {
    "text": "actually call the login method here okay so this login method is",
    "start": "2487960",
    "end": "2494200"
  },
  {
    "text": "basically perform the validation of username and password in this case accept anything and then it will fire an",
    "start": "2494200",
    "end": "2500880"
  },
  {
    "text": "event okay and uh and it also actually uh received event so this is the case",
    "start": "2500880",
    "end": "2507800"
  },
  {
    "text": "I'm actually observing the logged inent logged in event using observed okay so",
    "start": "2507800",
    "end": "2513480"
  },
  {
    "text": "when I see the console you can see this is observed",
    "start": "2513480",
    "end": "2519000"
  },
  {
    "text": "okay pretty straightforward okay now you can also",
    "start": "2519560",
    "end": "2526720"
  },
  {
    "start": "2522000",
    "end": "2791000"
  },
  {
    "text": "qualifier event with qualifier okay so",
    "start": "2526720",
    "end": "2533440"
  },
  {
    "text": "here I'm not just dealing with a regular event type but admin qualified event",
    "start": "2533440",
    "end": "2541920"
  },
  {
    "text": "type okay and uh here producer will fire an event now event consumer can",
    "start": "2541920",
    "end": "2549119"
  },
  {
    "text": "specify I'm not just receiving regular logged event but I'm actually receiving admin and log event combination event",
    "start": "2549119",
    "end": "2557680"
  },
  {
    "text": "object this is a qualification do you agree with that all",
    "start": "2557680",
    "end": "2563200"
  },
  {
    "text": "right okay so let's actually do the next",
    "start": "2563200",
    "end": "2569078"
  },
  {
    "text": "demo so this is the case",
    "start": "2571520",
    "end": "2576720"
  },
  {
    "text": "so we now qualified with admin okay and then we fire that event",
    "start": "2580119",
    "end": "2588440"
  },
  {
    "text": "now we have three event listeners okay one is observing just any and it's also",
    "start": "2588440",
    "end": "2596480"
  },
  {
    "text": "actually using at any Ty and then it's also receiving admin type okay so this",
    "start": "2596480",
    "end": "2603359"
  },
  {
    "text": "is a question for you how many lock message should we see one raise your",
    "start": "2603359",
    "end": "2610599"
  },
  {
    "text": "hand two okay",
    "start": "2610599",
    "end": "2616200"
  },
  {
    "text": "three no one or just one person over there okay",
    "start": "2616680",
    "end": "2621960"
  },
  {
    "text": "the answer is three okay so let's exp want this code",
    "start": "2621960",
    "end": "2628359"
  },
  {
    "text": "okay and let's see how many we got we got",
    "start": "2646200",
    "end": "2651440"
  },
  {
    "text": "three okay so let's see the code again so again qualifier is Java type",
    "start": "2651440",
    "end": "2660359"
  },
  {
    "text": "right so same Java type concept should actually work for the",
    "start": "2660359",
    "end": "2665559"
  },
  {
    "text": "qualifier okay so this guy should receive this event because it's accepting any event type by the way this",
    "start": "2665559",
    "end": "2675280"
  },
  {
    "text": "is the same thing as at any so these two are in fact you can think of them the same okay and then of course this guy",
    "start": "2675280",
    "end": "2681280"
  },
  {
    "text": "should receive it as well okay so we should receive three events in this",
    "start": "2681280",
    "end": "2687920"
  },
  {
    "text": "case all right",
    "start": "2687920",
    "end": "2691760"
  },
  {
    "text": "okay question",
    "start": "2693520",
    "end": "2697520"
  },
  {
    "text": "any yeah so any is a g is used when you want to receive any qualifier type okay",
    "start": "2699680",
    "end": "2707359"
  },
  {
    "text": "so you know for example in fact I actually remove this Slide the uh the uh",
    "start": "2707359",
    "end": "2712400"
  },
  {
    "text": "suppose if you are receiving you know some kind of if you actually write it's basically idea of any is you want",
    "start": "2712400",
    "end": "2720040"
  },
  {
    "text": "actually specify injection point and you wanton receive anything regardless of",
    "start": "2720040",
    "end": "2725119"
  },
  {
    "text": "what qualifi is used for that object okay but how does it differ if I",
    "start": "2725119",
    "end": "2731400"
  },
  {
    "text": "don't mention it yeah so it is it is the same impact",
    "start": "2731400",
    "end": "2737880"
  },
  {
    "text": "okay yeah question so the question is you know are there any ordering involved",
    "start": "2737880",
    "end": "2743839"
  },
  {
    "text": "in this uh the uh the event handling the answer is no okay yeah in fact there was",
    "start": "2743839",
    "end": "2749839"
  },
  {
    "text": "actually some discussion about in know ordering but that's not in the current spec but is actually being asked by the",
    "start": "2749839",
    "end": "2756440"
  },
  {
    "text": "community and uh you know CDI communities in fact trying to define a way of specifying order of these vent",
    "start": "2756440",
    "end": "2763520"
  },
  {
    "text": "handlers okay something that is being worked on all right alternative so what is an",
    "start": "2763520",
    "end": "2771240"
  },
  {
    "text": "alternative being so if you're using if you're using at alternative annotation",
    "start": "2771240",
    "end": "2776559"
  },
  {
    "text": "okay for a bean what that means is that the bean is going to be ignored when it",
    "start": "2776559",
    "end": "2783520"
  },
  {
    "text": "is scanned so what's the purpose at alternative okay so let your package you",
    "start": "2783520",
    "end": "2790640"
  },
  {
    "text": "can in fact have a multiple beans multiple candidates okay without",
    "start": "2790640",
    "end": "2796079"
  },
  {
    "start": "2791000",
    "end": "2859000"
  },
  {
    "text": "causing ambigu exception okay so you might in fact have",
    "start": "2796079",
    "end": "2801480"
  },
  {
    "text": "four candidates and three of them you can specify with ADD",
    "start": "2801480",
    "end": "2807760"
  },
  {
    "text": "alternative okay that means those three will not be considered as a candidate",
    "start": "2807760",
    "end": "2813240"
  },
  {
    "text": "okay by CDI run time okay so when you use at",
    "start": "2813240",
    "end": "2818480"
  },
  {
    "text": "alternative one example is testing you might in fact have a multiple M objects",
    "start": "2818480",
    "end": "2824079"
  },
  {
    "text": "for testing and you want to have all these Mar object with ADD alternative so",
    "start": "2824079",
    "end": "2829319"
  },
  {
    "text": "they are not going to be considered as a candidate however during the testing you",
    "start": "2829319",
    "end": "2835920"
  },
  {
    "text": "want to enable one of those M object for testing purpose now in order to enable",
    "start": "2835920",
    "end": "2841559"
  },
  {
    "text": "that Mar object that is anotated with the alternative you have to specify that",
    "start": "2841559",
    "end": "2846960"
  },
  {
    "text": "Bean in beans.xml file so this is the first example of using beans.xml file",
    "start": "2846960",
    "end": "2854160"
  },
  {
    "text": "nothing just more than the indication of the application Ty okay all right so",
    "start": "2854160",
    "end": "2862400"
  },
  {
    "start": "2859000",
    "end": "3050000"
  },
  {
    "text": "this is an example suppose you know I have a testing code and I set with at",
    "start": "2862400",
    "end": "2867520"
  },
  {
    "text": "alternative what it means is that this implementation class will not be considered as a candidate okay by the CD",
    "start": "2867520",
    "end": "2874160"
  },
  {
    "text": "run time now if I want to activate this particular implementation then I specify",
    "start": "2874160",
    "end": "2882520"
  },
  {
    "text": "in the beans.xml file then this guy will be",
    "start": "2882520",
    "end": "2887640"
  },
  {
    "text": "used okay as implementation class of choice okay all right so let's try",
    "start": "2887640",
    "end": "2896440"
  },
  {
    "text": "that so we have two implementation class one is coder inut and then we have test",
    "start": "2902680",
    "end": "2911559"
  },
  {
    "text": "coder inut again both of those implementation class is implementing coder interface and in this user",
    "start": "2911559",
    "end": "2919800"
  },
  {
    "text": "consumer is asking for coder okay now if I don't have this test code",
    "start": "2919800",
    "end": "2927160"
  },
  {
    "text": "implementation anotated with at alternative then you will we will experience ambiguity exception right now",
    "start": "2927160",
    "end": "2935280"
  },
  {
    "text": "because I set this in impementation with alternative this is not going to be considered as a candidate so there will",
    "start": "2935280",
    "end": "2942119"
  },
  {
    "text": "not be amb beator so this one should work it will choose this guy right so",
    "start": "2942119",
    "end": "2947480"
  },
  {
    "text": "let me run the",
    "start": "2947480",
    "end": "2950240"
  },
  {
    "text": "code okay so this is the same code I'm going to say a and Shi by true then it",
    "start": "2956839",
    "end": "2963040"
  },
  {
    "text": "will say C okay all right now for testing purpose",
    "start": "2963040",
    "end": "2969440"
  },
  {
    "text": "I want to actually use this guy so now this is the time I am going to go to my",
    "start": "2969440",
    "end": "2975960"
  },
  {
    "text": "beans.xml file oh here you go beans.xml file and I'm going to enable that",
    "start": "2975960",
    "end": "2982440"
  },
  {
    "text": "particular test implementation okay now this will use",
    "start": "2982440",
    "end": "2989280"
  },
  {
    "text": "this okay so let me just re run the code",
    "start": "2989280",
    "end": "2995160"
  },
  {
    "text": "yeah actually is jble actually do its work so I should be able to this time",
    "start": "2996799",
    "end": "3003040"
  },
  {
    "text": "refresh oh yeah",
    "start": "3003040",
    "end": "3006559"
  },
  {
    "text": "looks so this time if I say a and two it should use test implementation okay so",
    "start": "3013319",
    "end": "3020319"
  },
  {
    "text": "this is from the testing code okay all right",
    "start": "3020319",
    "end": "3027680"
  },
  {
    "text": "Interceptor I'm sure you know the concept of Interceptor we've used we have used Interceptor in you know the",
    "start": "3029599",
    "end": "3036400"
  },
  {
    "text": "previous Java e platform however the previous version of java e platform like a Java",
    "start": "3036400",
    "end": "3042559"
  },
  {
    "text": "E5 have some issues in terms of how it Implement The Intercept that we'll take",
    "start": "3042559",
    "end": "3047760"
  },
  {
    "text": "a look at in the following slide okay so the issues of non-cdi based Interceptor",
    "start": "3047760",
    "end": "3054359"
  },
  {
    "start": "3050000",
    "end": "3124000"
  },
  {
    "text": "implementation in Java E5 the first problem is Interceptor implementation",
    "start": "3054359",
    "end": "3060559"
  },
  {
    "text": "references are kind of hardcoded you see the code here and the whole purpose of using Interceptor is that separation of",
    "start": "3060559",
    "end": "3067319"
  },
  {
    "text": "certain thing applied to your class right now you're hard coding that classes in your code which is not good",
    "start": "3067319",
    "end": "3073880"
  },
  {
    "text": "do you agree with that the second thing is suppose if you're actually providing",
    "start": "3073880",
    "end": "3079000"
  },
  {
    "text": "multiple interceptors due to programming errors you know in one place you are probably using this guy as a first in",
    "start": "3079000",
    "end": "3086559"
  },
  {
    "text": "Interceptor and then using transaction as a second Interceptor but by programming mistake in another place you",
    "start": "3086559",
    "end": "3092200"
  },
  {
    "text": "exchange you change the you change the order okay in that case it will actually provide some different Behavior okay so",
    "start": "3092200",
    "end": "3100200"
  },
  {
    "text": "there is there is a possibility of different Behavior without actually",
    "start": "3100200",
    "end": "3106319"
  },
  {
    "text": "being noticed okay so that's second problem and third problem is looks",
    "start": "3106319",
    "end": "3111440"
  },
  {
    "text": "verbose okay looks very crowdy so these are the issues of intercept schemes of",
    "start": "3111440",
    "end": "3117559"
  },
  {
    "text": "java E5 so CDI provides a better Interceptor schemes okay so here the way",
    "start": "3117559",
    "end": "3125280"
  },
  {
    "start": "3124000",
    "end": "3176000"
  },
  {
    "text": "you're going to actually do Implement Interceptor is again you're going to Define",
    "start": "3125280",
    "end": "3131559"
  },
  {
    "text": "Interceptor binding type so here you're going to use Interceptor binding you're basically you you're defining log",
    "start": "3131559",
    "end": "3137880"
  },
  {
    "text": "Interceptor binding type okay again you can think of it as a qualifier as well",
    "start": "3137880",
    "end": "3144040"
  },
  {
    "text": "okay and then you're going to write in Interceptor implementation so here we",
    "start": "3144040",
    "end": "3149240"
  },
  {
    "text": "actually separating out implementation intercept implementation from the user",
    "start": "3149240",
    "end": "3155040"
  },
  {
    "text": "of the Interceptor okay so here you're going to provide loged Interceptor",
    "start": "3155040",
    "end": "3161480"
  },
  {
    "text": "binding type and then you're are going to provide implementation okay so we actually providing around",
    "start": "3161480",
    "end": "3168680"
  },
  {
    "text": "invoke Interceptor implementation and then you are going to specify that",
    "start": "3168680",
    "end": "3175000"
  },
  {
    "text": "Interceptor for target class okay so target class doesn't know how this is",
    "start": "3175000",
    "end": "3181079"
  },
  {
    "text": "implemented the implementation of lot could be changing okay without affecting",
    "start": "3181079",
    "end": "3186440"
  },
  {
    "text": "this code see the Improvement all right all",
    "start": "3186440",
    "end": "3192440"
  },
  {
    "text": "right now Interceptor implementation has to be activated in be. XML file so this",
    "start": "3192680",
    "end": "3199280"
  },
  {
    "start": "3195000",
    "end": "3208000"
  },
  {
    "text": "is another example that you're using v. XML file okay all right so I'm going to just move",
    "start": "3199280",
    "end": "3205960"
  },
  {
    "text": "ahead this is pretty straightforward now you can have a multiple interceptors you have a transaction transactional",
    "start": "3205960",
    "end": "3213440"
  },
  {
    "start": "3208000",
    "end": "3282000"
  },
  {
    "text": "Interceptor here and we have a secure Interceptor at the method level if you have Interceptor at the class level then",
    "start": "3213440",
    "end": "3221160"
  },
  {
    "text": "that Interceptor gets applied for all methods okay if you're specifying Interceptor on a particular method then",
    "start": "3221160",
    "end": "3228359"
  },
  {
    "text": "that Interceptor will be applied on that particular method pretty straightforward now here you can specify",
    "start": "3228359",
    "end": "3236760"
  },
  {
    "text": "order of Yeah question the question was you know is there any other cases I can use Interceptor besides the class and",
    "start": "3236760",
    "end": "3244119"
  },
  {
    "text": "Method and the answer is no it's just class or method okay",
    "start": "3244119",
    "end": "3249599"
  },
  {
    "text": "yeah all right so this is the case that you can specify order in b. XM alha so",
    "start": "3249599",
    "end": "3255119"
  },
  {
    "text": "here I'm saying that security uh Interceptor has to be invoked first and",
    "start": "3255119",
    "end": "3260880"
  },
  {
    "text": "then transaction Interceptor should be invoked next okay so there is no ambiguity or error uh possible error on",
    "start": "3260880",
    "end": "3269440"
  },
  {
    "text": "order of these interceptors being invoked in fact order of interceptors being invoked is pretty important right",
    "start": "3269440",
    "end": "3275400"
  },
  {
    "text": "has you know has implication in terms of his behavior all right so I'm going to just move ahead as well okay you can create a",
    "start": "3275400",
    "end": "3283920"
  },
  {
    "start": "3282000",
    "end": "3354000"
  },
  {
    "text": "composite Interceptor here again the verbos city of previous Java ebase",
    "start": "3283920",
    "end": "3290240"
  },
  {
    "text": "interceptors you can actually combine the set of interceptors to create a",
    "start": "3290240",
    "end": "3295400"
  },
  {
    "text": "brand new Sy atically meaningful Interceptor here I'm actually creating",
    "start": "3295400",
    "end": "3300599"
  },
  {
    "text": "business operation Interceptor combining the security and transaction",
    "start": "3300599",
    "end": "3306079"
  },
  {
    "text": "interceptors and then the code is going to use this business operation",
    "start": "3306079",
    "end": "3314960"
  },
  {
    "text": "Interceptor okay question the ordering doesn't matter right in this case in",
    "start": "3314960",
    "end": "3320000"
  },
  {
    "text": "this case yeah because you actually specify the order in the uh previous you know the uh the uh the composite",
    "start": "3320000",
    "end": "3328319"
  },
  {
    "text": "interceptors okay moving forward uh I'm sorry the so the order is",
    "start": "3328319",
    "end": "3334280"
  },
  {
    "text": "actually still specify the beans. XML I actually gave you a wrong answer okay so the order of the the Interceptor still",
    "start": "3334280",
    "end": "3341160"
  },
  {
    "text": "being defined in bin. XML not in the order of the uh you know that the annotations okay yeah sorry okay moving",
    "start": "3341160",
    "end": "3348520"
  },
  {
    "text": "forward decorator okay so decorator is basically",
    "start": "3348520",
    "end": "3353920"
  },
  {
    "text": "implementing decorator pattern how many of you use aspect J no one okay just okay okay so aspect J",
    "start": "3353920",
    "end": "3363680"
  },
  {
    "start": "3354000",
    "end": "3498000"
  },
  {
    "text": "has what is called the uh the uh the uh the uh instantiation so basically it's",
    "start": "3363680",
    "end": "3370000"
  },
  {
    "text": "decorating interface you basically adding some logic to your interface okay",
    "start": "3370000",
    "end": "3377720"
  },
  {
    "text": "all right you don't have to actually create a brand new interface instead you can actually add business logic to the",
    "start": "3377720",
    "end": "3382920"
  },
  {
    "text": "existing interface okay all right so you can actually also use delegate",
    "start": "3382920",
    "end": "3388520"
  },
  {
    "text": "annotation to use the original object okay and uh again the decorators must be",
    "start": "3388520",
    "end": "3396200"
  },
  {
    "text": "specified in bin. XML file okay so let's see example of this so in this case I'm",
    "start": "3396200",
    "end": "3402680"
  },
  {
    "text": "actually decorating this particular code and is implementing this coder interface",
    "start": "3402680",
    "end": "3408000"
  },
  {
    "text": "okay so I am actually decorating this interface meaning I'm actually adding extra business logic okay to this cod",
    "start": "3408000",
    "end": "3416799"
  },
  {
    "text": "with with this code string so here I'm actually invoking the old original object of coder and I can call that",
    "start": "3416799",
    "end": "3424280"
  },
  {
    "text": "coder object because I specify with a delegate on notation and this is the extra business logic I'm adding to it",
    "start": "3424280",
    "end": "3433799"
  },
  {
    "text": "okay so this is decorator and again you have to specify that decorator in this. XML file so",
    "start": "3433799",
    "end": "3440720"
  },
  {
    "text": "let's let's actually try that",
    "start": "3440720",
    "end": "3445160"
  },
  {
    "text": "so this is the same code that we have seen before so I'm going to just say a and two and in code so this is actually",
    "start": "3456599",
    "end": "3466240"
  },
  {
    "text": "coming from this C is coming from original implementation okay and then rest of",
    "start": "3466240",
    "end": "3472160"
  },
  {
    "text": "this is actually coming from edit logic okay so again you you see the code here",
    "start": "3472160",
    "end": "3478480"
  },
  {
    "text": "we have a decorator and this is the one that I showed on the slide okay so this is the original Cod of object that just",
    "start": "3478480",
    "end": "3485440"
  },
  {
    "text": "display C okay and then these are the extra Logics that are added by this",
    "start": "3485440",
    "end": "3492000"
  },
  {
    "text": "decorator okay all",
    "start": "3492000",
    "end": "3495680"
  },
  {
    "text": "right stereotypes stereotype is on notation that groups of the notation",
    "start": "3497039",
    "end": "3502720"
  },
  {
    "start": "3498000",
    "end": "3539000"
  },
  {
    "text": "okay so you can in fact have multiple annotations uh into a single stereotype",
    "start": "3502720",
    "end": "3510240"
  },
  {
    "text": "okay so these are the things that you can have uh inside your stereotype okay",
    "start": "3510240",
    "end": "3515480"
  },
  {
    "text": "so examples of this you know suppose I have multiple qualifiers like this and",
    "start": "3515480",
    "end": "3521039"
  },
  {
    "text": "it looks pretty verbos right and if I have to use the set of this qualifiers",
    "start": "3521039",
    "end": "3526079"
  },
  {
    "text": "in many different places then it's a little bit too much to you know it's kind of duplication right so in that",
    "start": "3526079",
    "end": "3533319"
  },
  {
    "text": "case what you can do is you can actually create a stereotype like this okay so",
    "start": "3533319",
    "end": "3539240"
  },
  {
    "text": "I'm creating I created a stereotype called the business component and then I just use this business component",
    "start": "3539240",
    "end": "3547039"
  },
  {
    "text": "qualifier okay as a replacement of all this combination of qualifiers all right",
    "start": "3547039",
    "end": "3553119"
  },
  {
    "text": "so pretty straightforward concept all right so that ends my presentation on",
    "start": "3553119",
    "end": "3558760"
  },
  {
    "text": "CDI uh I'm going to actually spend just less than five minutes on demonstration",
    "start": "3558760",
    "end": "3563960"
  },
  {
    "text": "of gable and then hopefully we have about 10 minutes Q&A on CDI or jble",
    "start": "3563960",
    "end": "3569200"
  },
  {
    "text": "whatever you want to talk about how many of you ever heard of jble how many of you okay how many of",
    "start": "3569200",
    "end": "3576319"
  },
  {
    "text": "you are using J oh one person okay",
    "start": "3576319",
    "end": "3583520"
  },
  {
    "text": "so so some of you know the concept of Jer jble is basically productivity tool",
    "start": "3586200",
    "end": "3593079"
  },
  {
    "text": "so idea especially when you're building Enterprise application ations is whenever you make a change you want to",
    "start": "3593079",
    "end": "3600520"
  },
  {
    "text": "see the changes right away without rebuilding and redeploying or sometimes",
    "start": "3600520",
    "end": "3605799"
  },
  {
    "text": "restarting the server so basically saving 10 to 20% of your development time so the demo I'm going to actually",
    "start": "3605799",
    "end": "3611559"
  },
  {
    "text": "show you is a sping MSY application running over Tomcat I'm using Eclipse IDE but J can work with any IDE of your",
    "start": "3611559",
    "end": "3618839"
  },
  {
    "text": "choice it works with any server of your choice and it support pretty much all the Frameworks out there whether it's a",
    "start": "3618839",
    "end": "3624039"
  },
  {
    "text": "spring framework spring spring security JSF CDI you have seen the example of that ejb and all those things so this is",
    "start": "3624039",
    "end": "3630960"
  },
  {
    "text": "a spring eny application called the pet clinic so I'm going to actually make a series of changes and see the changes right away again without rebuilding and",
    "start": "3630960",
    "end": "3637480"
  },
  {
    "text": "redeploying the application so I'm going to click find owner and I'm going to click add owner now if I click add owner",
    "start": "3637480",
    "end": "3643480"
  },
  {
    "text": "the validation logic is kicked in so these red colored messages are from validation logic so I'm going to actually disable the validation logic of",
    "start": "3643480",
    "end": "3650119"
  },
  {
    "text": "the first name okay",
    "start": "3650119",
    "end": "3654279"
  },
  {
    "text": "so this is a validation logic so I'm going to just comment out the validation logic of the get first name okay I mean",
    "start": "3658680",
    "end": "3665079"
  },
  {
    "text": "the first name field and save the",
    "start": "3665079",
    "end": "3670520"
  },
  {
    "text": "change and refresh the browser and you can see the change is picked up and you can see in fact jble just pick up the",
    "start": "3671960",
    "end": "3678200"
  },
  {
    "text": "change and it just reloaded that class okay now I'm going to create a brand new",
    "start": "3678200",
    "end": "3683400"
  },
  {
    "text": "method out of the six lines of code validation law loic of the last name and address",
    "start": "3683400",
    "end": "3690200"
  },
  {
    "text": "field so I call it my method so my method has been created as invol so I'm",
    "start": "3695880",
    "end": "3701720"
  },
  {
    "text": "going to go to the my method that has been created at the moment I'm actually running in non debugging mode but if I'm",
    "start": "3701720",
    "end": "3706920"
  },
  {
    "text": "running in debugging mode even if this method is a brand new method that has been created during runtime I should be",
    "start": "3706920",
    "end": "3713400"
  },
  {
    "text": "able to make a breakpoint and should be able to do Source C level develing okay that's pretty cool now I'm going to",
    "start": "3713400",
    "end": "3719480"
  },
  {
    "text": "actually make a change of this reject Value method of this last name so reject Value method is going to get is going to",
    "start": "3719480",
    "end": "3726520"
  },
  {
    "text": "get invoked when there is a validation error on last name field so I'm going to change this some random value which I",
    "start": "3726520",
    "end": "3732200"
  },
  {
    "text": "know is not a message is mile so maybe ABC which means this third string object",
    "start": "3732200",
    "end": "3737359"
  },
  {
    "text": "will be used as error message so I'm going to just you know I couldn't type well so I'm going to just do dddd thing",
    "start": "3737359",
    "end": "3743920"
  },
  {
    "text": "and then refresh the page and obviously you can see is actually picking up the change now I'm going to change messages",
    "start": "3743920",
    "end": "3751799"
  },
  {
    "text": "f file to add is ABC because I do not want my code is breaking",
    "start": "3751799",
    "end": "3758359"
  },
  {
    "text": "internationalization so I'm going to actually open Messages the properties file and then",
    "start": "3758359",
    "end": "3764000"
  },
  {
    "text": "ABC okay so messages bundle file is add it so I'm going to just a b c",
    "start": "3769440",
    "end": "3776880"
  },
  {
    "text": "and I'm going to say San Francisco job whatever save the",
    "start": "3776880",
    "end": "3781960"
  },
  {
    "text": "change and refresh the browser you can see it's picking up a change from message respond file okay and you can",
    "start": "3781960",
    "end": "3788319"
  },
  {
    "text": "see in fact jble just reloaded this uh message respond file because it detect a change another type of properties file I",
    "start": "3788319",
    "end": "3795720"
  },
  {
    "text": "want to change once in a while again without rebuilding and redeploying my application is lck for J property spot",
    "start": "3795720",
    "end": "3801720"
  },
  {
    "text": "okay sometimes I want to see more fine grain debuging messages okay all right so I'm going to actually open log for",
    "start": "3801720",
    "end": "3807319"
  },
  {
    "text": "properties file so this is log for properties but",
    "start": "3807319",
    "end": "3814680"
  },
  {
    "text": "for now sping framework web package the default log level is set to error which",
    "start": "3814680",
    "end": "3820240"
  },
  {
    "text": "means I'm not seeing debu level lock messages I'm going to change this one to debug so that I can see debug level lock",
    "start": "3820240",
    "end": "3828558"
  },
  {
    "text": "messages save the change and let me just clear this cont",
    "start": "3829839",
    "end": "3835799"
  },
  {
    "text": "cons so that we can see debug level lock messages and refresh the page you can",
    "start": "3835799",
    "end": "3840839"
  },
  {
    "text": "see now we are seeing debug level lock messages from spin Weare framework okay now if I'm done with this",
    "start": "3840839",
    "end": "3848799"
  },
  {
    "text": "deu level log messages I can change it back okay so I'm I'm I'm going to change it back this time to",
    "start": "3848799",
    "end": "3855880"
  },
  {
    "text": "info okay save the change and let me just clear this guy and refresh the page now we not",
    "start": "3857240",
    "end": "3865039"
  },
  {
    "text": "seeing any more Deb level lock messages but you can see jble just reloaded log for their properties F because it detect",
    "start": "3865039",
    "end": "3871079"
  },
  {
    "text": "a change okay all right so you can see jble can handle the changes in Java code as well as wellknown properties file",
    "start": "3871079",
    "end": "3877240"
  },
  {
    "text": "what about the framework specific annotation and framework specific XML file in fact as a developer you know I",
    "start": "3877240",
    "end": "3883160"
  },
  {
    "text": "make changes typically framework related okay so I'm going to actually open",
    "start": "3883160",
    "end": "3888279"
  },
  {
    "text": "spring framework controller",
    "start": "3888279",
    "end": "3891839"
  },
  {
    "text": "class this is is add on a form spring controller class which has request",
    "start": "3894279",
    "end": "3899680"
  },
  {
    "text": "mapping annotation so in Spring framework request mapping annotation is used to map incoming request URL to this",
    "start": "3899680",
    "end": "3906240"
  },
  {
    "text": "controller class okay so that is basically what I'm using right now okay owner/ new that's basically what I'm",
    "start": "3906240",
    "end": "3912559"
  },
  {
    "text": "using here so I'm going to change this value to some random number give me some number six six I love six all right so",
    "start": "3912559",
    "end": "3921039"
  },
  {
    "text": "if I press enter as expected we get four four kind of error because we don't have",
    "start": "3921039",
    "end": "3926480"
  },
  {
    "text": "any controller class that handles this brand new URL okay so we're going to actually go to that controller class and",
    "start": "3926480",
    "end": "3933039"
  },
  {
    "text": "change the value of this controller to handle this new URL okay and save the",
    "start": "3933039",
    "end": "3939000"
  },
  {
    "text": "change and refresh the page voila it's picking that up okay so now you can see",
    "start": "3939000",
    "end": "3944559"
  },
  {
    "text": "jble can handle framework specific annotation okay so when we say jble handle any kind of framework that means",
    "start": "3944559",
    "end": "3951079"
  },
  {
    "text": "it understand what it does and it understands whenever you make a change in annotations or XML file it knows what",
    "start": "3951079",
    "end": "3958000"
  },
  {
    "text": "to do so next demo is in fact actually changing XML file so in Spring framework you actually declare all your beans in",
    "start": "3958000",
    "end": "3964599"
  },
  {
    "text": "Spring framework context configuration part right so I'm going to to make a three changes first I'm going to create a bean spring bean and then I'm going to",
    "start": "3964599",
    "end": "3971200"
  },
  {
    "text": "declare that pin an XML file and then I'm going to inject that pin and use that pin okay all right so I am going to",
    "start": "3971200",
    "end": "3977520"
  },
  {
    "text": "go to this class I mean the package where all the domain classes are located",
    "start": "3977520",
    "end": "3984119"
  },
  {
    "text": "so I'm going to just create a brand new new Java class called my Gable",
    "start": "3984119",
    "end": "3990038"
  },
  {
    "text": "being okay so my jble beam class has been created and then I'm going to actually add a very simple field called",
    "start": "3997799",
    "end": "4003359"
  },
  {
    "text": "the",
    "start": "4003359",
    "end": "4005519"
  },
  {
    "text": "name and then I'm going to create the get and seta method so source generate",
    "start": "4009680",
    "end": "4016279"
  },
  {
    "text": "Getters and Setters select name field click okay so we created a very simple spring be",
    "start": "4016279",
    "end": "4022559"
  },
  {
    "text": "called my Gable B now I'm going to declare this an XML file so in this application the XML file is called P",
    "start": "4022559",
    "end": "4029200"
  },
  {
    "text": "Clinic server XML",
    "start": "4029200",
    "end": "4032400"
  },
  {
    "text": "file so this is a file so let me actually open that file let",
    "start": "4034440",
    "end": "4040480"
  },
  {
    "text": "me expand the screen so we have these three lines of code that is at the moment is commented out so this is the",
    "start": "4040480",
    "end": "4047000"
  },
  {
    "text": "Declaration of The Bean that I just created okay my J bean okay so I'm going",
    "start": "4047000",
    "end": "4052079"
  },
  {
    "text": "to uncomment these three lines of code so what it means is that whenever I",
    "start": "4052079",
    "end": "4058359"
  },
  {
    "text": "want this bean I want the container in this case spring framewor container to create a bin instance using this class",
    "start": "4058359",
    "end": "4064960"
  },
  {
    "text": "and when it create a bin instance I want it to set the name property value of that bin instance with this value okay",
    "start": "4064960",
    "end": "4071960"
  },
  {
    "text": "so I'm going to change this one to some other value",
    "start": "4071960",
    "end": "4076680"
  },
  {
    "text": "okay now we are ready to use this pin so I'm going to go to the same controller class that we have seen before so I'm",
    "start": "4079079",
    "end": "4084319"
  },
  {
    "text": "going to inject this Bean using sping framework at Auto notation so this is",
    "start": "4084319",
    "end": "4089400"
  },
  {
    "text": "two lines of code that I'm going to uncomment okay and import the class so basically",
    "start": "4089400",
    "end": "4098120"
  },
  {
    "text": "I'm injecting my bean using Auto notation now I can use this Bean instance in my code so this controller",
    "start": "4098120",
    "end": "4104520"
  },
  {
    "text": "class has a setup form method that is used to create a form object called the",
    "start": "4104520",
    "end": "4109880"
  },
  {
    "text": "owner class and this owner class is the one that has a first name and last name field that I use to display this form",
    "start": "4109880",
    "end": "4115080"
  },
  {
    "text": "page so what I want to do is I want to use a name property value of my B instance which is set with the Java",
    "start": "4115080",
    "end": "4121120"
  },
  {
    "text": "passion to set the first name field of this own of form object so that is this line of code so here I'm calling get",
    "start": "4121120",
    "end": "4126960"
  },
  {
    "text": "name method of my beam to set the first name field of owner okay so I'm going to",
    "start": "4126960",
    "end": "4132159"
  },
  {
    "text": "uncomment now I save them all okay okay now I'm going to refresh how many of you",
    "start": "4132159",
    "end": "4137318"
  },
  {
    "text": "think it will work all right how many of you think will not work okay one person all right",
    "start": "4137319",
    "end": "4143920"
  },
  {
    "text": "that's good so I refresh and it worked okay now my last part of the demo",
    "start": "4143920",
    "end": "4151318"
  },
  {
    "text": "is I am going to change everything back to where it was right so I'm going to just undo all the",
    "start": "4151319",
    "end": "4159079"
  },
  {
    "text": "changes so this one l",
    "start": "4161719",
    "end": "4168759"
  },
  {
    "text": "j and",
    "start": "4171679",
    "end": "4175279"
  },
  {
    "text": "validation now as far as jel is concerned these are just additional set of changes I'm making to the changes I",
    "start": "4181239",
    "end": "4188318"
  },
  {
    "text": "made okay so I'm going to even delete the class that I have created okay so I'm going to remove the class that I",
    "start": "4188319",
    "end": "4194360"
  },
  {
    "text": "have created delete and then I save them all okay and",
    "start": "4194360",
    "end": "4199880"
  },
  {
    "text": "then I'm going to actually go to my old URL and then it behaves nothing has been",
    "start": "4199880",
    "end": "4206560"
  },
  {
    "text": "changed and if I click add owner you can see it's using old validation logic okay",
    "start": "4206560",
    "end": "4211600"
  },
  {
    "text": "so you can see jable is actually saving a lot of your time if you actually have to make a lot of changes during the day",
    "start": "4211600",
    "end": "4217800"
  },
  {
    "text": "it's basically saving about an hour sometimes two hours okay all right so that is end of my presentation thank you",
    "start": "4217800",
    "end": "4224760"
  },
  {
    "text": "for invitation and hopefully to you see see you guys again some point okay thank you",
    "start": "4224760",
    "end": "4230730"
  },
  {
    "text": "[Applause] [Music]",
    "start": "4230730",
    "end": "4242969"
  }
]