[
  {
    "text": "if you're trying to figure out how to actually integrate AI improve your platform or make the dev experience better for your team then InfoC",
    "start": "880",
    "end": "7120"
  },
  {
    "text": "DevSummit Boston 2025 might be worth checking out it's 2 days in June focused on the real world side of adopting these",
    "start": "7120",
    "end": "13280"
  },
  {
    "text": "technologies you'll hear from senior engineers who've already been through it what worked what didn't and what they do",
    "start": "13280",
    "end": "18320"
  },
  {
    "text": "differently it's built for teams who want to move past being inspired and start taking action now join us this",
    "start": "18320",
    "end": "24000"
  },
  {
    "text": "June 9th and 10th learn more at devsummit.infoq.com",
    "start": "24000",
    "end": "28840"
  },
  {
    "text": "hello and welcome to another episode of the InfoQ podcast today I'm joined by Vlad Koninov vlad is a software engineer",
    "start": "33200",
    "end": "40160"
  },
  {
    "text": "with extensive industry experience working for companies large and small in roles ranging from web master to chief",
    "start": "40160",
    "end": "46200"
  },
  {
    "text": "architect his core areas of expertise include software architecture distributed systems and domain driven",
    "start": "46200",
    "end": "51520"
  },
  {
    "text": "design he is a consultant trainer speaker and the author of learning domain driven design but today we're going to be talking about uh the ideas",
    "start": "51520",
    "end": "58079"
  },
  {
    "text": "in Vlad's latest book Balancing Coupling in Software Design vlad welcome to the InfoQ podcast hey Thomas thank you so",
    "start": "58079",
    "end": "65600"
  },
  {
    "text": "much for having me so uh the title of your book Balancing Coupling and I think a lot of",
    "start": "65600",
    "end": "71520"
  },
  {
    "text": "architects and engineers are familiar with the idea of wanting low coupling we want to have our systems loosely coupled",
    "start": "71520",
    "end": "78240"
  },
  {
    "text": "but as your book points out that's really an oversimplification that we",
    "start": "78240",
    "end": "83280"
  },
  {
    "text": "don't want to have no coupling we need to have a balanced coupling so can you explain why that's an oversimplified",
    "start": "83280",
    "end": "89759"
  },
  {
    "text": "idea to say we just want loose coupling everywhere yeah so by the way loose coupling is",
    "start": "89759",
    "end": "95840"
  },
  {
    "text": "okay what I'm really afraid of is people saying let's decouple things let's have",
    "start": "95840",
    "end": "101439"
  },
  {
    "text": "completely independent components in our system which is problematic because if",
    "start": "101439",
    "end": "107119"
  },
  {
    "text": "you ask yourself what is a system what makes a system then the answer is a",
    "start": "107119",
    "end": "112320"
  },
  {
    "text": "system is a set of components working together to achieve some overarching goal now in order to achieve that goal",
    "start": "112320",
    "end": "119920"
  },
  {
    "text": "it's not enough to have those components they have to work together those interactions is what makes the value of",
    "start": "119920",
    "end": "126719"
  },
  {
    "text": "that whole system greater than the sum of its components sum of its parts and",
    "start": "126719",
    "end": "133120"
  },
  {
    "text": "those interactions is what we usually call coupling if you look look that word up",
    "start": "133120",
    "end": "138800"
  },
  {
    "text": "in the dictionary coupled means connected so to make the system work we",
    "start": "138800",
    "end": "145040"
  },
  {
    "text": "need coupling now of course too much of a good thing is is going to be bad like we",
    "start": "145040",
    "end": "153040"
  },
  {
    "text": "need water any living organism that we know of on this planet needs water to survive however if you're going to drink",
    "start": "153040",
    "end": "160319"
  },
  {
    "text": "too much water well guess what's going to happen nothing good is is going to happen same with coupling you know we",
    "start": "160319",
    "end": "167599"
  },
  {
    "text": "cannot eliminate it because just as in the case of water you're not going to survive a system is not going to survive",
    "start": "167599",
    "end": "175280"
  },
  {
    "text": "so we need to find that just right amount of coupling that will make the",
    "start": "175280",
    "end": "181599"
  },
  {
    "text": "system alive it will allow it to achieve that overarching goal i like the idea if",
    "start": "181599",
    "end": "188159"
  },
  {
    "text": "we add too much water maybe that's how we get to the big ball of mud that we have everything is completely connected",
    "start": "188159",
    "end": "193680"
  },
  {
    "text": "and we can't see where there should be good separations between those couples",
    "start": "193680",
    "end": "199519"
  },
  {
    "text": "you can't see the modules that should be there that make the system um understandable and I know that's part of",
    "start": "199519",
    "end": "205120"
  },
  {
    "text": "it is uh we want to get to small enough modules that we can understand and work with and evolve over time without having",
    "start": "205120",
    "end": "212319"
  },
  {
    "text": "to handle the entire big mall of mud if you will so that coupling itself that's",
    "start": "212319",
    "end": "218239"
  },
  {
    "text": "not the problem the the problem really is the complexity um and I think people",
    "start": "218239",
    "end": "224200"
  },
  {
    "text": "sometimes correlate the two that if I have a highly coupled system that everything's talking to each other",
    "start": "224200",
    "end": "229599"
  },
  {
    "text": "that's that's causing the complexity can you can you distinguish where coupling",
    "start": "229599",
    "end": "235200"
  },
  {
    "text": "and complexity are not always the same thing one isn't always the bad yeah",
    "start": "235200",
    "end": "240959"
  },
  {
    "text": "that's a great point and the thing is when we when we are designing the",
    "start": "240959",
    "end": "247920"
  },
  {
    "text": "system we need to find that just right amount of coupling to make it work and if you go overboard as you said we'll",
    "start": "247920",
    "end": "254879"
  },
  {
    "text": "end up with that monster that we usually call big ball of mud and that pretty",
    "start": "254879",
    "end": "260560"
  },
  {
    "text": "much describes what we are afraid of complexity i guess anyone with few years",
    "start": "260560",
    "end": "268639"
  },
  {
    "text": "of experience in software engineering has that experience of working on a big wall of math project that maybe it works",
    "start": "268639",
    "end": "276560"
  },
  {
    "text": "but nobody has the courage to to modify it because you don't know what's going",
    "start": "276560",
    "end": "281759"
  },
  {
    "text": "to happen following that change whether it's going to break now or it's going to",
    "start": "281759",
    "end": "288199"
  },
  {
    "text": "break a week later after it was deployed to production and what is going to break",
    "start": "288199",
    "end": "294320"
  },
  {
    "text": "and That's that relationship between an action and its outcome is my preferred",
    "start": "294320",
    "end": "302000"
  },
  {
    "text": "way of describing complexity if you're working on a system and you want to do",
    "start": "302000",
    "end": "307280"
  },
  {
    "text": "something and you know exactly what's going to happen that's not complexity if you can ask someone and some other",
    "start": "307280",
    "end": "314800"
  },
  {
    "text": "external expert knows what's going to happen that's not complexity either however if the only way to find out an",
    "start": "314800",
    "end": "323680"
  },
  {
    "text": "the outcome of the thing you want to do is to do it and then observe what",
    "start": "323680",
    "end": "329800"
  },
  {
    "text": "happens then you're dealing with a system and the that is complex and that",
    "start": "329800",
    "end": "336960"
  },
  {
    "text": "means that the design of that system makes those interactions much harder",
    "start": "336960",
    "end": "343360"
  },
  {
    "text": "than we as people can fathom we have our cognitive limits our cognitive abilities",
    "start": "343360",
    "end": "350479"
  },
  {
    "text": "if you look at studies they're not looking good by the way",
    "start": "350479",
    "end": "356039"
  },
  {
    "text": "and it means that the design of that system exceeds our cognitive abilities",
    "start": "356039",
    "end": "363039"
  },
  {
    "text": "it's hard for us to understand what's going on there of course it has something to do with",
    "start": "363039",
    "end": "368360"
  },
  {
    "text": "coupling however it's not because of coupling but because of misdesigned",
    "start": "368360",
    "end": "374080"
  },
  {
    "text": "coupling yeah and then I think your book talks about the idea of sharing too much",
    "start": "374080",
    "end": "379520"
  },
  {
    "text": "knowledge the coupling is where knowledge is being transferred and so the idea of cognitive load being",
    "start": "379520",
    "end": "385199"
  },
  {
    "text": "exceeded the I have to under my the knowledge I have to have in order to troubleshoot this bug is I have to",
    "start": "385199",
    "end": "390880"
  },
  {
    "text": "understand everything well I can't understand everything and remember it all so I'm just going to try and",
    "start": "390880",
    "end": "396240"
  },
  {
    "text": "recreate it and in order for me to try and recreate it I have to have the full integration stack right i have to have",
    "start": "396240",
    "end": "402720"
  },
  {
    "text": "everything running be able to debug all the way through and the flip side of",
    "start": "402720",
    "end": "407840"
  },
  {
    "text": "that is somebody wants to be able to have that experience because they're they're used to having the big monolith",
    "start": "407840",
    "end": "413440"
  },
  {
    "text": "the big ball of mud they're like I don't understand it so I'm going to just see what happens once they're working in",
    "start": "413440",
    "end": "420080"
  },
  {
    "text": "microservices then they get to well I can't actually step through the code once I send the request to the other how",
    "start": "420080",
    "end": "425840"
  },
  {
    "text": "do I know what happens how do you help get people into that mindset of you're making it better but it's a it's a",
    "start": "425840",
    "end": "432960"
  },
  {
    "text": "different shift of the paradigm that you can't just run everything but the benefit is you don't have to know about",
    "start": "432960",
    "end": "438400"
  },
  {
    "text": "it once it you know goes past that boundary yeah and that's the thing about",
    "start": "438400",
    "end": "444720"
  },
  {
    "text": "coupling we we are way too used to oversimplified as hey coupling is bad",
    "start": "444720",
    "end": "451840"
  },
  {
    "text": "let's eliminate all the coupling and that's how we get the modular software",
    "start": "451840",
    "end": "457160"
  },
  {
    "text": "systems however if you look what happens",
    "start": "457160",
    "end": "462400"
  },
  {
    "text": "when you connect any two components when you couple any two components in a system what happens beneath the surf",
    "start": "462400",
    "end": "470400"
  },
  {
    "text": "surface then you will see that coupling is not that simple it's not unit dimension actually it manifests itself",
    "start": "470400",
    "end": "477120"
  },
  {
    "text": "in three dimensions as you mentioned first of all we have that knowledge sharing you have two components working",
    "start": "477120",
    "end": "483599"
  },
  {
    "text": "together how are they going to work together how are they going to communicate with each other how are they",
    "start": "483599",
    "end": "489440"
  },
  {
    "text": "going to understand each other they need to exchange to share that knowledge mhm",
    "start": "489440",
    "end": "495919"
  },
  {
    "text": "then we have the dimension of distance if you have two objects in the same file",
    "start": "495919",
    "end": "503280"
  },
  {
    "text": "then the distance between the source code of the two objects is short however if those two objects belong to different",
    "start": "503280",
    "end": "510360"
  },
  {
    "text": "microservices then you have different code bases different projects different repositories maybe even different teams",
    "start": "510360",
    "end": "516560"
  },
  {
    "text": "suddenly the distance growth much bigger why is that important well the longer",
    "start": "516560",
    "end": "522399"
  },
  {
    "text": "the distance that is traveled by the knowledge the sooner it will cause that",
    "start": "522399",
    "end": "528080"
  },
  {
    "text": "cognitive overload and we will say that hey that's complexity we need to",
    "start": "528080",
    "end": "534480"
  },
  {
    "text": "decouple things so distance is a very important factor",
    "start": "534480",
    "end": "541200"
  },
  {
    "text": "when designing coupling and the third dimension is dimension of time of",
    "start": "541200",
    "end": "546560"
  },
  {
    "text": "volatility because well why do we care we want to be able to change the system",
    "start": "546560",
    "end": "553279"
  },
  {
    "text": "we wanted to change its components their behavior maybe we will modify existing",
    "start": "553279",
    "end": "558640"
  },
  {
    "text": "functionalities maybe we'll add new ones for that we want to make sure that",
    "start": "558640",
    "end": "563920"
  },
  {
    "text": "the coupling is just right however if that is not going to happen maybe",
    "start": "563920",
    "end": "569600"
  },
  {
    "text": "because the component is a part of a legacy system or maybe the business is not interested in investing any effort",
    "start": "569600",
    "end": "577920"
  },
  {
    "text": "in that specific area then the effect of coupling is going to be much lower so we",
    "start": "577920",
    "end": "585360"
  },
  {
    "text": "better prioritize our efforts on other parts with higher volatilities so let's I want to talk about that that distance",
    "start": "585360",
    "end": "591680"
  },
  {
    "text": "part uh first i think that's a um a new way of thinking of stuff the problem",
    "start": "591680",
    "end": "597279"
  },
  {
    "text": "because I think we can relate to I'm going to separate this into microservices and that'll that'll solve",
    "start": "597279",
    "end": "602480"
  },
  {
    "text": "my problem and um if you go back to the combination of how much knowledge is",
    "start": "602480",
    "end": "609120"
  },
  {
    "text": "being shared and how far away it is well if I have all the code and my monolith",
    "start": "609120",
    "end": "614320"
  },
  {
    "text": "then the distance between the code is pretty low right like I can I can change",
    "start": "614320",
    "end": "619839"
  },
  {
    "text": "all the code all at once but that also leads to a lot of complexity because I",
    "start": "619839",
    "end": "625200"
  },
  {
    "text": "might not be able to easily see what code I need to change because there's too much of it now if I take it into the",
    "start": "625200",
    "end": "630959"
  },
  {
    "text": "the microservices approach I can say I only need to change this there's only so much code to look at i can understand",
    "start": "630959",
    "end": "637560"
  },
  {
    "text": "it but if I say if I make a change here I also need to make a change in this",
    "start": "637560",
    "end": "643519"
  },
  {
    "text": "upstream or downstream service that they have to know that I'm making the change then you're saying that that's where the",
    "start": "643519",
    "end": "649040"
  },
  {
    "text": "knowledge comes in the knowledge being shared is tightly coupled is that a good",
    "start": "649040",
    "end": "654079"
  },
  {
    "text": "explanation of what you're trying to say yeah yeah that's where complexity gets",
    "start": "654079",
    "end": "659560"
  },
  {
    "text": "complex we have essentially we have two types of complexities when working on any system first let's say that you are",
    "start": "659560",
    "end": "667360"
  },
  {
    "text": "working on one of one of its components and it is a small big ball of mud let's",
    "start": "667360",
    "end": "674399"
  },
  {
    "text": "call it a small ball of mud then it would be we could say that the",
    "start": "674399",
    "end": "679920"
  },
  {
    "text": "local complexity of that component is high we don't understand how it works and if you want to change something we",
    "start": "679920",
    "end": "685760"
  },
  {
    "text": "don't know what's going to happen now there is another type of complexity and that's global complexity and this one is",
    "start": "685760",
    "end": "692720"
  },
  {
    "text": "about the interactions on a higher level of abstraction say we have our component",
    "start": "692720",
    "end": "698800"
  },
  {
    "text": "and other components on of that system and they're integrated in a way that",
    "start": "698800",
    "end": "703839"
  },
  {
    "text": "makes it hard to predict how change in one of the components is going to",
    "start": "703839",
    "end": "709399"
  },
  {
    "text": "be whether it's going to require simultaneous changes in other components",
    "start": "709399",
    "end": "715519"
  },
  {
    "text": "so that's global complexity the difference between the two as you mentioned is distance and way",
    "start": "715519",
    "end": "724399"
  },
  {
    "text": "back when the microservices hype just started people wanted to decouple things",
    "start": "724399",
    "end": "730519"
  },
  {
    "text": "by increasing the distance because previously we had all the knowledge",
    "start": "730519",
    "end": "735680"
  },
  {
    "text": "concentrated in a monolith let's call it the old school monolith everything in",
    "start": "735680",
    "end": "742160"
  },
  {
    "text": "one physical boundary now back then decoupling involve",
    "start": "742160",
    "end": "749360"
  },
  {
    "text": "extracting functionalities into microservices so we increased the distance",
    "start": "749360",
    "end": "755720"
  },
  {
    "text": "however way too many projects focused just on that on increasing the distance",
    "start": "755720",
    "end": "762639"
  },
  {
    "text": "not they were not focused enough on hey what is that knowledge that is going to",
    "start": "762639",
    "end": "768399"
  },
  {
    "text": "travel that increased distance and that's how many companies ended up",
    "start": "768399",
    "end": "774720"
  },
  {
    "text": "transforming their old school monoliths in new shiny distributed mods so they",
    "start": "774720",
    "end": "780399"
  },
  {
    "text": "kind of traded local complexity into global complexity and that only becomes",
    "start": "780399",
    "end": "785519"
  },
  {
    "text": "a problem when that third element that third dimension of volatility re raises its head because as long as those two",
    "start": "785519",
    "end": "792320"
  },
  {
    "text": "things don't change the fact that they share knowledge over a long distance",
    "start": "792320",
    "end": "798160"
  },
  {
    "text": "shouldn't matter but if one of those has to make a change and it has to affect",
    "start": "798160",
    "end": "803360"
  },
  {
    "text": "the other one now you've got the distributed ball of mud problem that everything in two different services",
    "start": "803360",
    "end": "809760"
  },
  {
    "text": "have to change you actually made the problem worse by going to microservices so that's where all all",
    "start": "809760",
    "end": "816000"
  },
  {
    "text": "three factors have to be con considered correct yeah exactly and that's that's",
    "start": "816000",
    "end": "821279"
  },
  {
    "text": "funny because all those companies that tried doing that of course they didn't",
    "start": "821279",
    "end": "828399"
  },
  {
    "text": "decompose their whole systems on the first very first day of that microser endeavor now they start with a small",
    "start": "828399",
    "end": "835920"
  },
  {
    "text": "proof of concept and that proof of concept was successful so so they said",
    "start": "835920",
    "end": "841440"
  },
  {
    "text": "\"Hey let's go on let's proceed and apply the same um the same",
    "start": "841440",
    "end": "848839"
  },
  {
    "text": "um decomposition logic everywhere else now the difference is that",
    "start": "848839",
    "end": "855160"
  },
  {
    "text": "P is usually done on something that is not business critical its volatility is",
    "start": "855160",
    "end": "861040"
  },
  {
    "text": "low so you are kind of safe introducing",
    "start": "861040",
    "end": "866320"
  },
  {
    "text": "complexity there so the mistake was taking those less business critical",
    "start": "866320",
    "end": "874399"
  },
  {
    "text": "components extracting them and thinking that they will achieve the same result",
    "start": "874399",
    "end": "879760"
  },
  {
    "text": "with other components of the system and of course there once you step into that",
    "start": "879760",
    "end": "884880"
  },
  {
    "text": "distributed big ball of mud area well suddenly microservices became evil and",
    "start": "884880",
    "end": "892480"
  },
  {
    "text": "people started praising monish right right it's the we didn't",
    "start": "892480",
    "end": "897519"
  },
  {
    "text": "understand what we were doing we didn't understand why we were trying to accomplish it we thought the problem was everything's too close we'll solve it by",
    "start": "897519",
    "end": "905040"
  },
  {
    "text": "just moving it apart but if you don't factor in the you know how is the knowledge changing how is the volatility",
    "start": "905040",
    "end": "912040"
  },
  {
    "text": "affected because yeah that that first one might work because you have I can it",
    "start": "912040",
    "end": "918000"
  },
  {
    "text": "doesn't matter if they're close to close together in one monolith or separate if",
    "start": "918000",
    "end": "923360"
  },
  {
    "text": "there's no volatility things aren't changing doesn't matter where it lives but once you get to this is something",
    "start": "923360",
    "end": "930000"
  },
  {
    "text": "that we're going to be making changes to really quickly because that was the other thing that people said if we go to",
    "start": "930000",
    "end": "935040"
  },
  {
    "text": "microservices we can make changes really quickly yeah yeah and then they maybe make even more changes faster but they",
    "start": "935040",
    "end": "940720"
  },
  {
    "text": "run into all these issues that separate teams in separate modules and separate microservices are trying to change",
    "start": "940720",
    "end": "946639"
  },
  {
    "text": "things all at once and then they lead back to we have to still have all this communication or we have this major",
    "start": "946639",
    "end": "952000"
  },
  {
    "text": "integration step that just you weren't ready for it because you did the thing wrong when you make them move to",
    "start": "952000",
    "end": "958079"
  },
  {
    "text": "microservices you have to consider all three factors what is changing and if I",
    "start": "958079",
    "end": "963199"
  },
  {
    "text": "know it's going to change what do I do differently then how do I because",
    "start": "963199",
    "end": "968560"
  },
  {
    "text": "obviously we still want to break those things up but how do I say this is going to be a a volatile module it's going to",
    "start": "968560",
    "end": "975440"
  },
  {
    "text": "have you know core business it's going to be evolving what's the solution then because I want to be able to change it",
    "start": "975440",
    "end": "983720"
  },
  {
    "text": "mhm yeah yep that dimension of space distance is very tricky and what makes",
    "start": "983720",
    "end": "991440"
  },
  {
    "text": "it even trickier is that it has let's call it subd dimensions so first we have that",
    "start": "991440",
    "end": "999120"
  },
  {
    "text": "physical distance between source codes the greater that distance gets the",
    "start": "999120",
    "end": "1007279"
  },
  {
    "text": "harder it is going to be to modify the two components simultaneously so that's one thing",
    "start": "1007279",
    "end": "1016000"
  },
  {
    "text": "we have another force that works in the opposing direction and that's life cycle",
    "start": "1016000",
    "end": "1021320"
  },
  {
    "text": "coupling the closer things are the more related their their life cycles so they",
    "start": "1021320",
    "end": "1027839"
  },
  {
    "text": "will be developed tested deployed together if you have components implemented in the same physical",
    "start": "1027839",
    "end": "1034000"
  },
  {
    "text": "boundary for example as you go toward the other end then you're reducing those",
    "start": "1034000",
    "end": "1040160"
  },
  {
    "text": "life cycle dependencies and then we have social technical factors",
    "start": "1040160",
    "end": "1049480"
  },
  {
    "text": "like those two components are implemented by the same team or do we do",
    "start": "1049480",
    "end": "1054799"
  },
  {
    "text": "we have to coordinate the change with multiple teams and suddenly the distance",
    "start": "1054799",
    "end": "1060000"
  },
  {
    "text": "can go grow even larger and the life cycle life cycle coupling will be",
    "start": "1060000",
    "end": "1065919"
  },
  {
    "text": "reduced even further so distance is super important but as you mentioned",
    "start": "1065919",
    "end": "1072720"
  },
  {
    "text": "what makes it all let's call it painful is that",
    "start": "1072720",
    "end": "1077919"
  },
  {
    "text": "knowledge that is going to travel that distance right so if I know that this thing is",
    "start": "1077919",
    "end": "1084480"
  },
  {
    "text": "going to be changing in some ways those changes affect the knowledge that is",
    "start": "1084480",
    "end": "1089760"
  },
  {
    "text": "being shared right if I'm adding new features and functionality that means there's more knowledge in this module",
    "start": "1089760",
    "end": "1095760"
  },
  {
    "text": "and if I have to communicate those changes that's that's the challenge so",
    "start": "1095760",
    "end": "1101919"
  },
  {
    "text": "is the trade-off of I'm going to have more volatility in this module i have",
    "start": "1101919",
    "end": "1108520"
  },
  {
    "text": "to reduce the the knowledge that's being shared reduce that integration strength of how tightly those two things are",
    "start": "1108520",
    "end": "1114720"
  },
  {
    "text": "coupled um how do I is that a matter of defining good API boundaries for example",
    "start": "1114720",
    "end": "1121840"
  },
  {
    "text": "yeah so we have to manage that knowledge that we are sharing across the boundaries we",
    "start": "1121840",
    "end": "1128640"
  },
  {
    "text": "have to make it explicit now the thing about knowledge is as you said the more knowledge we are",
    "start": "1128640",
    "end": "1134799"
  },
  {
    "text": "sharing the more cascading changes will follow because the more knowledge we share the higher the chances that piece",
    "start": "1134799",
    "end": "1141919"
  },
  {
    "text": "of that shared knowledge will change and then we'll have to communicate that change to the other component to the",
    "start": "1141919",
    "end": "1147200"
  },
  {
    "text": "coupled component now how do we evaluate",
    "start": "1147200",
    "end": "1153640"
  },
  {
    "text": "knowledge what units should we use to measure knowledge that's tricky question it's",
    "start": "1153640",
    "end": "1162080"
  },
  {
    "text": "tricky and I'm not sure we have an answer for that however what we do have",
    "start": "1162080",
    "end": "1168919"
  },
  {
    "text": "is a methodology from 70s called structure design and in it there was a",
    "start": "1168919",
    "end": "1176320"
  },
  {
    "text": "model for measuring or for evaluating interdependencies between components of",
    "start": "1176320",
    "end": "1182160"
  },
  {
    "text": "a system called module couplet that model had six levels they were focused around the",
    "start": "1182160",
    "end": "1190559"
  },
  {
    "text": "needs of systems that were written in those days mhm",
    "start": "1190559",
    "end": "1196280"
  },
  {
    "text": "so but essentially these levels describe different types of knowledge that can be",
    "start": "1196280",
    "end": "1203520"
  },
  {
    "text": "exchanged across boundaries of components in my model in the balance coupling model I adapted module coupling",
    "start": "1203520",
    "end": "1212160"
  },
  {
    "text": "and changed its name to integration strength i had to change its name because the levels of the model are",
    "start": "1212160",
    "end": "1220000"
  },
  {
    "text": "completely different because again they have to be accessible to people working",
    "start": "1220000",
    "end": "1225039"
  },
  {
    "text": "on modern systems i reduced the levels to four",
    "start": "1225039",
    "end": "1230720"
  },
  {
    "text": "basic types of knowledge to make it easier to remember them and if you need",
    "start": "1230720",
    "end": "1235919"
  },
  {
    "text": "finer grain details then you can use a different model from a different era",
    "start": "1235919",
    "end": "1242720"
  },
  {
    "text": "called canence to measure the degrees of those types of knowledge so the basic",
    "start": "1242720",
    "end": "1248159"
  },
  {
    "text": "four types of knowledge are from highest to lowest first of all is intrusive coupling so you have a",
    "start": "1248159",
    "end": "1254880"
  },
  {
    "text": "component with public interface that should be used for",
    "start": "1254880",
    "end": "1260080"
  },
  {
    "text": "integration however you say \"Okay that's fine i have",
    "start": "1260080",
    "end": "1265679"
  },
  {
    "text": "a better way i will go to your database directly pick whatever I need maybe maybe modify it.\" In other words",
    "start": "1265679",
    "end": "1272799"
  },
  {
    "text": "intrusive coupling is all about using private interfaces for integration once",
    "start": "1272799",
    "end": "1278000"
  },
  {
    "text": "you introduce that dependency on private interfaces you're basically have a",
    "start": "1278000",
    "end": "1283039"
  },
  {
    "text": "dependency on implementation details so any change can potentially break the integration so with intrusive coupling",
    "start": "1283039",
    "end": "1289679"
  },
  {
    "text": "you have to assume that all knowledge is shared right that's that's the classic if you have a micros service you own",
    "start": "1289679",
    "end": "1295520"
  },
  {
    "text": "your own database and no one else is allowed to go there they have to go through this boundary and I like that you're you're calling back to these are",
    "start": "1295520",
    "end": "1302159"
  },
  {
    "text": "papers written in the you know 50 years ago and no one was talking about microservices there no one was talking",
    "start": "1302159",
    "end": "1308240"
  },
  {
    "text": "about having separate databases but it's still the same idea of I can structure this so that in order for this to go",
    "start": "1308240",
    "end": "1315360"
  },
  {
    "text": "through it has to go through this module That's why you know C++ evolved to have object-oriented design to say I have you",
    "start": "1315360",
    "end": "1322480"
  },
  {
    "text": "know this class and it has behavior and here's public and private data and that's what you're talking about if if",
    "start": "1322480",
    "end": "1327840"
  },
  {
    "text": "you can just get all the way through there's no point in having that public versus private interface yeah yeah it's",
    "start": "1327840",
    "end": "1334799"
  },
  {
    "text": "it's funny if you look at one of the books from that",
    "start": "1334799",
    "end": "1340280"
  },
  {
    "text": "period one that I particularly like it's called composite structure design by Glenn for",
    "start": "1340280",
    "end": "1346280"
  },
  {
    "text": "Myers and if you ignore the publishing date it sounds like he is talking about",
    "start": "1346280",
    "end": "1354000"
  },
  {
    "text": "the problems we're facing today right it's crazy it's",
    "start": "1354000",
    "end": "1360280"
  },
  {
    "text": "crazy yeah so what's the what's the next level after that intrusive coupling yeah",
    "start": "1360280",
    "end": "1366240"
  },
  {
    "text": "so after intrusive coupling we have the functional coupling and here we are sharing the knowledge of functional",
    "start": "1366240",
    "end": "1373440"
  },
  {
    "text": "requirements we are shifting from how the component is implemented to what",
    "start": "1373440",
    "end": "1378960"
  },
  {
    "text": "that component implements what is that business functionality again that's quite high",
    "start": "1378960",
    "end": "1385760"
  },
  {
    "text": "amount of knowledge that is shared by this type because if you share that kind of",
    "start": "1385760",
    "end": "1391360"
  },
  {
    "text": "knowledge then probably any change in the business requirements is going to",
    "start": "1391360",
    "end": "1396960"
  },
  {
    "text": "affect both of the couple components so they will change together next we have",
    "start": "1396960",
    "end": "1402960"
  },
  {
    "text": "model coupling which means we have two components that are using the same model",
    "start": "1402960",
    "end": "1408240"
  },
  {
    "text": "of the business domain now DDD people will get it right",
    "start": "1408240",
    "end": "1413880"
  },
  {
    "text": "away uh but the idea is when we are",
    "start": "1413880",
    "end": "1419280"
  },
  {
    "text": "developing a software system we cannot encode all the knowledge about its business domain it's not possible if you",
    "start": "1419280",
    "end": "1425679"
  },
  {
    "text": "are building a medical system you're not going to become a doctor right instead what we are doing is we are building a",
    "start": "1425679",
    "end": "1431840"
  },
  {
    "text": "model of that business domain that focuses only on the areas that are relevant for this for that actual",
    "start": "1431840",
    "end": "1439799"
  },
  {
    "text": "system now once you have two components based on the same model then if you have",
    "start": "1439799",
    "end": "1446320"
  },
  {
    "text": "an insight into that business domain and you want to improve your model then guess what both of them will have to",
    "start": "1446320",
    "end": "1452880"
  },
  {
    "text": "change simultaneous so that's model coupling and the lowest",
    "start": "1452880",
    "end": "1458400"
  },
  {
    "text": "level is contract coupling here we have a integration contract you can think",
    "start": "1458400",
    "end": "1463919"
  },
  {
    "text": "about it as a model of a model that encapsulates all other types of",
    "start": "1463919",
    "end": "1470279"
  },
  {
    "text": "knowledges it doesn't let any knowledge of the implementation model outside of the boundary that means you can evolve",
    "start": "1470279",
    "end": "1477520"
  },
  {
    "text": "it without affecting the integration contract you're not letting any",
    "start": "1477520",
    "end": "1482559"
  },
  {
    "text": "knowledge of function requirements cross the boundaries and of course you're you",
    "start": "1482559",
    "end": "1487600"
  },
  {
    "text": "want to protect your implementation details right so I just to echo that back if",
    "start": "1487600",
    "end": "1494960"
  },
  {
    "text": "you're talking about I'm going to have um you said DDDP will get this right away if I have uh an new invoice coming",
    "start": "1494960",
    "end": "1502240"
  },
  {
    "text": "in that I want to pay maybe I have a you know you know expense management system",
    "start": "1502240",
    "end": "1507679"
  },
  {
    "text": "where somebody says here's a new thing to pay i'm going to submit it to the expense management system and it has to",
    "start": "1507679",
    "end": "1513120"
  },
  {
    "text": "go through an approval process to say yes it's approved then all the way at the end we have our accounts",
    "start": "1513120",
    "end": "1518679"
  },
  {
    "text": "payable person who's going to log in and say oh I need to go pay this invoice I have to pay the vendor right there's",
    "start": "1518679",
    "end": "1524640"
  },
  {
    "text": "there's an invoice that flows all the way through the system but if you say I need to know the how is it going to get",
    "start": "1524640",
    "end": "1530960"
  },
  {
    "text": "paid at the end all the accounting details upfront it's tightly coupled if you",
    "start": "1530960",
    "end": "1537200"
  },
  {
    "text": "think about it from who's doing the work you might have an you know the invoice request that starts in expense",
    "start": "1537200",
    "end": "1543120"
  },
  {
    "text": "management and then the the paid invoice and those ideas of I have one model but",
    "start": "1543120",
    "end": "1548880"
  },
  {
    "text": "it can that the words sound the same but ubiquitous language says in this domain",
    "start": "1548880",
    "end": "1555039"
  },
  {
    "text": "that's what this means um and I I work on accounting systems so the invoice",
    "start": "1555039",
    "end": "1560400"
  },
  {
    "text": "whether you're an accounts payable or accounts receivable we both have invoices but they're exactly the opposite am I going to pay someone or is",
    "start": "1560400",
    "end": "1566799"
  },
  {
    "text": "someone going to pay me and so ubiquous language helps us reduce the cognitive",
    "start": "1566799",
    "end": "1572799"
  },
  {
    "text": "load because I know in this space I'm only talking about this part of the workflow because it's satisfying this",
    "start": "1572799",
    "end": "1578480"
  },
  {
    "text": "person this role they're doing their job and so that's going to the levels of",
    "start": "1578480",
    "end": "1583600"
  },
  {
    "text": "coupling you're talking about the contract coupling says I'm going to hand off from here to the next to the next",
    "start": "1583600",
    "end": "1590000"
  },
  {
    "text": "and I don't have to know what's going to happen a week from now with this because once it leaves my boundary I'm done with",
    "start": "1590000",
    "end": "1596440"
  },
  {
    "text": "it and the intrusive coupling is they're all editing the same database record and",
    "start": "1596440",
    "end": "1602000"
  },
  {
    "text": "everybody knows about all the details and somewhere above that is I have to know that there's this next workflow of",
    "start": "1602000",
    "end": "1608960"
  },
  {
    "text": "pay the invoice versus submit the invoice and everybody knows about those things is that a a good example of how",
    "start": "1608960",
    "end": "1615760"
  },
  {
    "text": "to see those different layers in there yeah absolutely absolutely and there are",
    "start": "1615760",
    "end": "1621679"
  },
  {
    "text": "so many creative ways to introduce intrusive coupling",
    "start": "1621679",
    "end": "1626960"
  },
  {
    "text": "there are such interesting death defined stunts we can pull mhm for example maybe",
    "start": "1626960",
    "end": "1633960"
  },
  {
    "text": "you're you are introducing not a dependency but you rely on some",
    "start": "1633960",
    "end": "1639039"
  },
  {
    "text": "undocumented behavior right that's intrusive coupling maybe you you're",
    "start": "1639039",
    "end": "1646960"
  },
  {
    "text": "working in let's say in objectoriented codebase and a component that you are",
    "start": "1646960",
    "end": "1653120"
  },
  {
    "text": "interacting with returns you an array or a list of objects and then you can go",
    "start": "1653120",
    "end": "1660480"
  },
  {
    "text": "ahead and modify it and because it's reference type it's going to affect the internals of that component so so that's",
    "start": "1660480",
    "end": "1667520"
  },
  {
    "text": "another creative example of intrusive coupling by the way a reader of the book",
    "start": "1667520",
    "end": "1673679"
  },
  {
    "text": "sent it to me and I was like \"Oh why haven't I thought about it when I was writing the book it's such great",
    "start": "1673679",
    "end": "1680399"
  },
  {
    "text": "example.\" Yeah well I think what you're describing is the that's the difference between the local and the global",
    "start": "1680399",
    "end": "1686720"
  },
  {
    "text": "complexity right like I can we think about these as microservices i'm going",
    "start": "1686720",
    "end": "1691840"
  },
  {
    "text": "to separate big modules out but the same problems occur within our codebase because even if you're working in a",
    "start": "1691840",
    "end": "1697919"
  },
  {
    "text": "monolith you can structure this is what people talk about modular monolith you can set up your code so even if it's",
    "start": "1697919",
    "end": "1704000"
  },
  {
    "text": "stored in one repository you can make it easier to understand and that gets to",
    "start": "1704000",
    "end": "1709360"
  },
  {
    "text": "this class doesn't have to know about you know the 900 other classes that are in the project i only know about the 10",
    "start": "1709360",
    "end": "1715600"
  },
  {
    "text": "that are close to me yeah exactly yeah and by the way it brings us back to the",
    "start": "1715600",
    "end": "1722480"
  },
  {
    "text": "topic of complexity or rather the opposite of complexity so if complexity is if we're going to define it as the",
    "start": "1722480",
    "end": "1730640"
  },
  {
    "text": "relationship between an action and its outcome then majority is the opposite it's very strong relationship between an",
    "start": "1730640",
    "end": "1738159"
  },
  {
    "text": "action and its outcome so if we want to design a modular system we want to be",
    "start": "1738159",
    "end": "1744000"
  },
  {
    "text": "able to know what we have to change that's one thing and the second thing is",
    "start": "1744000",
    "end": "1750640"
  },
  {
    "text": "once we make the change what's going to happen that's that I would say",
    "start": "1750640",
    "end": "1756200"
  },
  {
    "text": "is the idea of modularity now how can we do it how can we achieve what you",
    "start": "1756200",
    "end": "1762399"
  },
  {
    "text": "described let's say that you have a monolith that can be ball of mud but it",
    "start": "1762399",
    "end": "1768320"
  },
  {
    "text": "also can be a modular monolith and the thing is ideas are the core ideas are",
    "start": "1768320",
    "end": "1774640"
  },
  {
    "text": "the same you can increase the distance You don't have to step away uh to step",
    "start": "1774640",
    "end": "1780000"
  },
  {
    "text": "across its physical bound you can introduce this distance in form of modules within that monolith you can put",
    "start": "1780000",
    "end": "1788159"
  },
  {
    "text": "related things together because if you let's say you have one boundary with",
    "start": "1788159",
    "end": "1794159"
  },
  {
    "text": "lots of unrelated things and how can we define unrelated",
    "start": "1794159",
    "end": "1799279"
  },
  {
    "text": "things things that are not sharing knowledge between them so if they're are located close to each",
    "start": "1799279",
    "end": "1805679"
  },
  {
    "text": "other then it will increase the cognitive load to find what we have to change there right so we can reduce the",
    "start": "1805679",
    "end": "1814320"
  },
  {
    "text": "cognitive load by grouping related things those components that have to share knowledge in logical groups",
    "start": "1814320",
    "end": "1822399"
  },
  {
    "text": "logical modules and that's how we can achieve modular monoliths which is by",
    "start": "1822399",
    "end": "1828159"
  },
  {
    "text": "the way in my opinion the first step towards decomposing the system into microservices because it's way easier to",
    "start": "1828159",
    "end": "1836320"
  },
  {
    "text": "fix a mistake once you are in the same physical boundary right you're you're keeping the distance a little bit closer",
    "start": "1836320",
    "end": "1843279"
  },
  {
    "text": "you're separating it logically into separate name spaces different directory structures but you're not making a",
    "start": "1843279",
    "end": "1850480"
  },
  {
    "text": "network call right that that's definitely increasing the distance you're not necessarily handing over to",
    "start": "1850480",
    "end": "1856240"
  },
  {
    "text": "another team you might be but maybe it is still the same team just saying \"Hey I want to be able to think about this part this problem right now and I want",
    "start": "1856240",
    "end": "1862559"
  },
  {
    "text": "to think about I don't want to have to think about these other problems and so let me just split the code.\" But that",
    "start": "1862559",
    "end": "1868880"
  },
  {
    "text": "causes you as an architect designing this to say \"What makes sense what do I",
    "start": "1868880",
    "end": "1875039"
  },
  {
    "text": "move around where am I having the problem understanding it?\" Because there's too much going on there's too much local complexity and let's look for",
    "start": "1875039",
    "end": "1882399"
  },
  {
    "text": "that and figure out how do I increase the distance a little bit so that the",
    "start": "1882399",
    "end": "1887840"
  },
  {
    "text": "knowledge that's being shared stays within the things that are close and you start looking for you know have I",
    "start": "1887840",
    "end": "1894679"
  },
  {
    "text": "introduced distance while not reducing the knowledge right that's what you're trying to do too is have the knowledge",
    "start": "1894679",
    "end": "1900720"
  },
  {
    "text": "transfer go down that integration strength when you're adding distance right yeah absolutely we always want to",
    "start": "1900720",
    "end": "1908600"
  },
  {
    "text": "reduce the integration strength want to always minimize the knowledge but if",
    "start": "1908600",
    "end": "1914799"
  },
  {
    "text": "you're familiar with the business domain you kind of know that hey here I need to use the same model of the business",
    "start": "1914799",
    "end": "1920640"
  },
  {
    "text": "domain Here we have closely related business functionalities so not it doesn't matter",
    "start": "1920640",
    "end": "1926799"
  },
  {
    "text": "if you want to reduce it to the minimum you can't you have to remain on that level of let's say for example",
    "start": "1926799",
    "end": "1932640"
  },
  {
    "text": "functional coupling once you observe that level of knowledge being shared",
    "start": "1932640",
    "end": "1938000"
  },
  {
    "text": "then you have to take it into consideration and balance it with another dimension which is distance",
    "start": "1938000",
    "end": "1945039"
  },
  {
    "text": "don't spread those things apart because otherwise that's going to be cognitive",
    "start": "1945039",
    "end": "1950960"
  },
  {
    "text": "load and as a result complexity right and and again this is where the",
    "start": "1950960",
    "end": "1956320"
  },
  {
    "text": "volatility comes into place so if I'm focused on let's go from our big ball of",
    "start": "1956320",
    "end": "1961440"
  },
  {
    "text": "mud to having a more organized modular monolith then I can look at oh where where are we",
    "start": "1961440",
    "end": "1969039"
  },
  {
    "text": "seeing lots of changes where is the the business evolving a lot and where is it not and so I can now focus on if we're",
    "start": "1969039",
    "end": "1976559"
  },
  {
    "text": "going to pull one service out because let's say we actually have scaling needs we need to make sure that this part of",
    "start": "1976559",
    "end": "1982880"
  },
  {
    "text": "the system can grow up to 10 times the size but the rest of it we don't need to scale up as",
    "start": "1982880",
    "end": "1988440"
  },
  {
    "text": "big th those types of things you can look at well what's volatile and then if you pull it out of that monolith you say",
    "start": "1988440",
    "end": "1996080"
  },
  {
    "text": "I'm adding the distance have I reduced the knowledge to the you know a safer",
    "start": "1996080",
    "end": "2001760"
  },
  {
    "text": "coupling level I haven't like kept that high integration strength that you still know about my my private methods and how",
    "start": "2001760",
    "end": "2008960"
  },
  {
    "text": "to call my database even though I pulled you out because you haven't actually done anything to solve the the",
    "start": "2008960",
    "end": "2014320"
  },
  {
    "text": "volatility problem right yeah and volatility initially that it sounds like",
    "start": "2014320",
    "end": "2020000"
  },
  {
    "text": "something simple like the simplest dimension of the three oh my god it's not it's tricky because to truly predict",
    "start": "2020000",
    "end": "2030080"
  },
  {
    "text": "the rate of changes in a component it's not enough to look at maybe your",
    "start": "2030080",
    "end": "2035440"
  },
  {
    "text": "experience or at the source code because there are things like we can differentiate between",
    "start": "2035440",
    "end": "2042640"
  },
  {
    "text": "essential volatility and accidental volatility or accidental in volatility",
    "start": "2042640",
    "end": "2048158"
  },
  {
    "text": "accidental volatility can be because of or design of the system things are changing just because that's the way the",
    "start": "2048159",
    "end": "2054720"
  },
  {
    "text": "system is designed and accidental in",
    "start": "2054720",
    "end": "2060440"
  },
  {
    "text": "volatility is can happen let's say that you have an area of the system that the",
    "start": "2060440",
    "end": "2066720"
  },
  {
    "text": "business wants to optimize but it it is designed in such a way that people are",
    "start": "2066720",
    "end": "2073839"
  },
  {
    "text": "afraid to touch it right and the business is afraid to touch it to modify",
    "start": "2073839",
    "end": "2079358"
  },
  {
    "text": "it as well as a result so to truly truly evaluate volatility you have to",
    "start": "2079359",
    "end": "2084960"
  },
  {
    "text": "understand the business domain you have to analyze the business strategy what differentiates that system from its",
    "start": "2084960",
    "end": "2091599"
  },
  {
    "text": "competitors again the people are thinking about core subdomains right now",
    "start": "2091599",
    "end": "2097320"
  },
  {
    "text": "and and once you identify those areas the based on their strategic value to",
    "start": "2097320",
    "end": "2103839"
  },
  {
    "text": "the company then you can really start thinking about the volatility levels",
    "start": "2103839",
    "end": "2110560"
  },
  {
    "text": "desired by the business and and that's where you mentioned things happen internal and external so",
    "start": "2110560",
    "end": "2117119"
  },
  {
    "text": "the business might have we want to pursue this new business venture or this was an MVP and we want to it's this MVP",
    "start": "2117119",
    "end": "2124880"
  },
  {
    "text": "has taken off we want to make sure it's a a product we can sell to more people but we need to make changes to it so",
    "start": "2124880",
    "end": "2130800"
  },
  {
    "text": "there are business drivers that can change the code but there's also internal things like I just need to make",
    "start": "2130800",
    "end": "2136240"
  },
  {
    "text": "sure my code is on the latest version of whatever so that it's not sitting there getting obsolete and has hasn't gotten",
    "start": "2136240",
    "end": "2141920"
  },
  {
    "text": "security patches or whatever so some of those you you know the system's just going to evolve over time because you",
    "start": "2141920",
    "end": "2148800"
  },
  {
    "text": "need to keep even the legacy code you need to keep up to date to some standards and then there's the no we",
    "start": "2148800",
    "end": "2154160"
  },
  {
    "text": "want to make big changes because the business is asking us to right so the",
    "start": "2154160",
    "end": "2159280"
  },
  {
    "text": "the architect has to factor in all of those things as well as I think you mentioned the sociotechnical aspects",
    "start": "2159280",
    "end": "2164640"
  },
  {
    "text": "right who is going to do the work all of this comes into play it's not always just one simple solution like you can't",
    "start": "2164640",
    "end": "2171599"
  },
  {
    "text": "just go to loose coupling right yeah and it's complicated i'm not going to",
    "start": "2171599",
    "end": "2178560"
  },
  {
    "text": "say that it's complex but it's complicated but the good news is",
    "start": "2178560",
    "end": "2183960"
  },
  {
    "text": "that once you truly understand the dynamics of system design doesn't really matter what level of abstraction you're",
    "start": "2183960",
    "end": "2190640"
  },
  {
    "text": "working on the underlying rules are going to be the same whether it's a",
    "start": "2190640",
    "end": "2196480"
  },
  {
    "text": "methods within an object or microservices in a distributed system the underlying ideas are the same if you",
    "start": "2196480",
    "end": "2204520"
  },
  {
    "text": "have a large amount of knowledge being shared balance it by minimizing the",
    "start": "2204520",
    "end": "2211079"
  },
  {
    "text": "distance if you're not sharing much knowledge you can increase the distance so it's one of the two either knowledge",
    "start": "2211079",
    "end": "2218160"
  },
  {
    "text": "is high and the distance is low or vice versa distance is high but knowledge is",
    "start": "2218160",
    "end": "2225480"
  },
  {
    "text": "low or or things are not going to change which",
    "start": "2225480",
    "end": "2231359"
  },
  {
    "text": "is volatility is low which can balance those two al together right right so",
    "start": "2231359",
    "end": "2237440"
  },
  {
    "text": "that if you just looked at strength and distance like how much knowledge is being shared over too long like that",
    "start": "2237440",
    "end": "2243520"
  },
  {
    "text": "looks bad but if it's never going to change you don't care if it does change",
    "start": "2243520",
    "end": "2248880"
  },
  {
    "text": "then it's not balanced on the flip side if it's going to change a lot then you need to think about the relationship",
    "start": "2248880",
    "end": "2256400"
  },
  {
    "text": "between the integration strength and the distance so if there if there's not much knowledge being shared over a long",
    "start": "2256400",
    "end": "2262480"
  },
  {
    "text": "distance that's okay or if there's a lot of knowledge shared over a small distance that's okay so you can have one",
    "start": "2262480",
    "end": "2269040"
  },
  {
    "text": "or one but not both if things are changing but if things aren't changing you don't care yeah and of course things",
    "start": "2269040",
    "end": "2275599"
  },
  {
    "text": "are not changing today maybe something is going to change on the business side tomorrow and you as an architect you",
    "start": "2275599",
    "end": "2282560"
  },
  {
    "text": "have to be aware of that change and its implications on the design the classical example here is I am integrating a",
    "start": "2282560",
    "end": "2290320"
  },
  {
    "text": "legacy system nobody is going to change it and I can just go ahead and grab",
    "start": "2290320",
    "end": "2295760"
  },
  {
    "text": "whatever I need from its database that's fine another classic example",
    "start": "2295760",
    "end": "2301880"
  },
  {
    "text": "is again DDD influence a some functionality that is not business",
    "start": "2301880",
    "end": "2308560"
  },
  {
    "text": "critical but you have to implement it which is usually in DDD world a lexicon",
    "start": "2308560",
    "end": "2313760"
  },
  {
    "text": "is called a supporting subdomain usually there are going to be much less water than core subdomains however business",
    "start": "2313760",
    "end": "2320480"
  },
  {
    "text": "strategy might change and suddenly that core subdomain will evolve into the core one",
    "start": "2320480",
    "end": "2326839"
  },
  {
    "text": "suddenly there is that big strategy change that should be reflected in the",
    "start": "2326839",
    "end": "2332640"
  },
  {
    "text": "design of the system so it's three dimensions working together and whether",
    "start": "2332640",
    "end": "2339839"
  },
  {
    "text": "you will end up with modularity or complexity depends on how you're balancing those forces right and I think",
    "start": "2339839",
    "end": "2346960"
  },
  {
    "text": "you you got to the last point I wanted to get to is we can design this for today based on what we know but six",
    "start": "2346960",
    "end": "2353760"
  },
  {
    "text": "months six years from now those things might shift not because of things we can",
    "start": "2353760",
    "end": "2359119"
  },
  {
    "text": "predict right now um and you know if you if you try and design for that future state you're always going to make some",
    "start": "2359119",
    "end": "2365359"
  },
  {
    "text": "mistakes but you want to set yourself up for success so do the small things first",
    "start": "2365359",
    "end": "2371119"
  },
  {
    "text": "like if it is reorganize your code so it's a little easier to understand that seems like a benefit but don't jump to I",
    "start": "2371119",
    "end": "2378079"
  },
  {
    "text": "have to have all microservices and I liked how you talked about how this can be applied at the you know the system",
    "start": "2378079",
    "end": "2384560"
  },
  {
    "text": "level or the component level or the code level I I think you described this as like the fractal approach of no matter",
    "start": "2384560",
    "end": "2391119"
  },
  {
    "text": "how much you keep looking at it the same problem exists at all these different layers of the system so that that",
    "start": "2391119",
    "end": "2397280"
  },
  {
    "text": "coupling and balance is something you have to look at at different part parts of your system either inside a microser",
    "start": "2397280",
    "end": "2404400"
  },
  {
    "text": "at the entire system level and what are you trying to solve for at different times right mhm yeah yeah and that's by",
    "start": "2404400",
    "end": "2412079"
  },
  {
    "text": "the way why I'm saying that if you pick up a book from 70s like that book I",
    "start": "2412079",
    "end": "2417920"
  },
  {
    "text": "mentioned composite structure design it looks way too familiar the problems that they're facing that problems they are",
    "start": "2417920",
    "end": "2425640"
  },
  {
    "text": "describing the solutions they're applying are also going to be quite",
    "start": "2425640",
    "end": "2431520"
  },
  {
    "text": "familiar once you step over those terms that are used there because they're used on those terms are based on language",
    "start": "2431520",
    "end": "2438000"
  },
  {
    "text": "like for cobalt uh yeah you need some time some cognitive effort to understand",
    "start": "2438000",
    "end": "2444400"
  },
  {
    "text": "what they mean but but yeah the underlying ideas are the same commits and just a different level of",
    "start": "2444400",
    "end": "2451440"
  },
  {
    "text": "abstraction that was popular back then not popular that's all they had back then so uh if if you want to follow up",
    "start": "2451440",
    "end": "2459200"
  },
  {
    "text": "with you or um have want to learn more about your balanced coupling model um",
    "start": "2459200",
    "end": "2464640"
  },
  {
    "text": "any recommendations of where they can go next yeah",
    "start": "2464640",
    "end": "2469720"
  },
  {
    "text": "so on social media aspect I'm the most active on LinkedIn at the moment",
    "start": "2469720",
    "end": "2477680"
  },
  {
    "text": "i have accounts on other social networks like Blue Sky Twitter etc right now",
    "start": "2477680",
    "end": "2483119"
  },
  {
    "text": "LinkedIn is my preferred network um at the moment I'm working on a",
    "start": "2483119",
    "end": "2489599"
  },
  {
    "text": "website called coupling.dev so if you're listening to this I hope that it is already live and you can go go there",
    "start": "2489599",
    "end": "2498280"
  },
  {
    "text": "and and learn some stuff about coupling well um Vlad Konov I want to thank you",
    "start": "2498280",
    "end": "2503599"
  },
  {
    "text": "again for being on the InfoQ podcast thank you so much Thomas it's an honor and a pleasure being here and listeners",
    "start": "2503599",
    "end": "2510800"
  },
  {
    "text": "we hope you'll join us again soon for a future episode [Music]",
    "start": "2510800",
    "end": "2532320"
  }
]