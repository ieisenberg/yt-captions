[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "foreign [Music]",
    "start": "0",
    "end": "14249"
  },
  {
    "text": "do you find you have trouble with the apis in your organization do Services struggle to interact with each other",
    "start": "15240",
    "end": "20400"
  },
  {
    "text": "because their apis are misunderstood or they change in Breaking ways could you point to the definition of an",
    "start": "20400",
    "end": "25920"
  },
  {
    "text": "API for a given service let alone to a catalog of all of them available in your estate",
    "start": "25920",
    "end": "31679"
  },
  {
    "text": "have you maybe tried to use an API Gateway to bring all of this under control but do you find it doesn't quite feel like there are still for this job",
    "start": "31679",
    "end": "38520"
  },
  {
    "text": "I'm Matt Turner and in this talk today I'm going to talk about some more modern techniques and tools for managing your",
    "start": "38520",
    "end": "44399"
  },
  {
    "text": "apis we're going to see what API gateways really do what they're useful for and",
    "start": "44399",
    "end": "50460"
  },
  {
    "text": "where they can be replaced by some more modern tooling",
    "start": "50460",
    "end": "54739"
  },
  {
    "start": "57000",
    "end": "57000"
  },
  {
    "text": "so in the first half of this talk I'm going to talk about what an API is just very briefly get us back on the same",
    "start": "57539",
    "end": "63539"
  },
  {
    "text": "page talk about what an API Gateway is where they came from and why I'm talking about them and then we're going to look",
    "start": "63539",
    "end": "69960"
  },
  {
    "text": "at sidecars which I think are a sort of more modern distributed microservice",
    "start": "69960",
    "end": "75659"
  },
  {
    "text": "style alternative and then going to look at some more",
    "start": "75659",
    "end": "81900"
  },
  {
    "start": "78000",
    "end": "78000"
  },
  {
    "text": "tooling around the sort of the the life cycle of an API so some of these stages",
    "start": "81900",
    "end": "86939"
  },
  {
    "text": "you might be familiar with in the design and development of an API I think API gateways have been pressed",
    "start": "86939",
    "end": "93119"
  },
  {
    "text": "into helping us with a lot of these things as well but actually rather than using an API Gateway or a sidecar there",
    "start": "93119",
    "end": "99780"
  },
  {
    "text": "are some you know rather than using a component of a network like an online active component at runtime",
    "start": "99780",
    "end": "105360"
  },
  {
    "text": "there's a bunch of more modern tooling now that enables us to do this earlier in the dev cycle to sort of shift these",
    "start": "105360",
    "end": "111060"
  },
  {
    "text": "concerns left so I'm going to be covering that as well in the second half of this talk",
    "start": "111060",
    "end": "117078"
  },
  {
    "text": "so API gateways and sidecars let's just very briefly I know this is",
    "start": "118399",
    "end": "124439"
  },
  {
    "text": "qcon that the audience is very sophisticated but let's very briefly go over uh what I mean by API at least for",
    "start": "124439",
    "end": "131520"
  },
  {
    "text": "the purposes of this talk so let's start off easy right what isn't an API",
    "start": "131520",
    "end": "138980"
  },
  {
    "start": "133000",
    "end": "133000"
  },
  {
    "text": "the definition I've come up with is that an API is the definition of an external",
    "start": "139620",
    "end": "145500"
  },
  {
    "text": "interface of some kind of service service is you know open to",
    "start": "145500",
    "end": "150540"
  },
  {
    "text": "interpretation workload endpoint you where you want to call it but there's a way of interacting with it and talking",
    "start": "150540",
    "end": "156000"
  },
  {
    "text": "to it from the outside and that's that's what an API is",
    "start": "156000",
    "end": "161060"
  },
  {
    "text": "Wikipedia and you know sorry to cite Wikipedia but I don't think this explanation is too bad Wikipedia says",
    "start": "161900",
    "end": "167879"
  },
  {
    "text": "that an API is a document or a standard that describes how to build or use a software interface",
    "start": "167879",
    "end": "174060"
  },
  {
    "text": "and that document is called an API specification and it says that the term API May refer",
    "start": "174060",
    "end": "179400"
  },
  {
    "text": "to either the specification or the implementation what I really just wanted us to agree on",
    "start": "179400",
    "end": "185580"
  },
  {
    "text": "is for that the purposes of this talk and API is not a piece of code or a running process so people I've heard",
    "start": "185580",
    "end": "192000"
  },
  {
    "text": "them talk about deploying an API and what they mean is deploying a part to kubernetes you know deploying uh some",
    "start": "192000",
    "end": "198480"
  },
  {
    "text": "kind of workload to a compute environment that's you know the fact that that service is not a batch",
    "start": "198480",
    "end": "204659"
  },
  {
    "text": "processing service but it's some kind of demon that has an API great but the word API I think I think we get confused if",
    "start": "204659",
    "end": "211140"
  },
  {
    "text": "we start using the word API for that so an API by my definition you how do we",
    "start": "211140",
    "end": "217680"
  },
  {
    "start": "214000",
    "end": "214000"
  },
  {
    "text": "Define it so an API is defined by any an IDL an interface definition language you may",
    "start": "217680",
    "end": "223319"
  },
  {
    "text": "have come across open API specs formerly called Swagger or protobar files which",
    "start": "223319",
    "end": "228840"
  },
  {
    "text": "include the grpc extensions and there's Avro and Thrift and a lot of those other protocols have their own idls as well so",
    "start": "228840",
    "end": "236459"
  },
  {
    "text": "this is kind of like a c plus header file a Java interface a c-sharp interface",
    "start": "236459",
    "end": "243000"
  },
  {
    "text": "so very briefly you know a workload a running process a pod I can't have an",
    "start": "243000",
    "end": "248459"
  },
  {
    "text": "API that we can talk to if you've got more than one of those you put something in front",
    "start": "248459",
    "end": "254099"
  },
  {
    "text": "that you know spreads the work between apis this is just sort of classic load balancer",
    "start": "254099",
    "end": "259799"
  },
  {
    "text": "you can have more than one different API on some different workloads and then you know your your front-facing thing",
    "start": "259799",
    "end": "265680"
  },
  {
    "text": "whatever it is can expose both of them you can have a slightly fatter more",
    "start": "265680",
    "end": "270840"
  },
  {
    "text": "intelligent front-facing theme that can combine those back-end apis in some way so think of this as a graphql resolver",
    "start": "270840",
    "end": "277800"
  },
  {
    "text": "or even uh you know a load balancer or an API gate we're doing some sort of path reading",
    "start": "277800",
    "end": "284160"
  },
  {
    "text": "yeah it's worth saying a pod a service a workload can actually Implement two apis",
    "start": "284160",
    "end": "290040"
  },
  {
    "text": "two different apis if you want like a class having two interfaces or maybe two",
    "start": "290040",
    "end": "295259"
  },
  {
    "text": "versions of the same API which is something that's going to be quite relevant for us",
    "start": "295259",
    "end": "300900"
  },
  {
    "text": "so what is an API Gateway well I'm going to say that they have a set of common features they are network gateways right",
    "start": "300900",
    "end": "307860"
  },
  {
    "start": "303000",
    "end": "303000"
  },
  {
    "text": "I guess the clue is kind of in the name with Gateway and they do things like terminate TLS a low balance between Services they",
    "start": "307860",
    "end": "315240"
  },
  {
    "text": "route between services and they they do service Discovery first to find out where those services are",
    "start": "315240",
    "end": "320880"
  },
  {
    "text": "they can do authentication with client certificates jots and whatever they can do authorization",
    "start": "320880",
    "end": "327840"
  },
  {
    "text": "um so that's you know allow listing block listing certain uh hosts certain paths certain",
    "start": "327840",
    "end": "334320"
  },
  {
    "text": "header combinations whatever because these are layer seven they do security related stuff",
    "start": "334320",
    "end": "340320"
  },
  {
    "text": "an obvious example would be injecting call status but you know more on that later they can rate limit and apply quotas",
    "start": "340320",
    "end": "346979"
  },
  {
    "text": "they can cash they can provide a lot of observability because we send all traffic through them",
    "start": "346979",
    "end": "352800"
  },
  {
    "text": "so we can get a lot of observability for free and then the some of the common features",
    "start": "352800",
    "end": "358080"
  },
  {
    "text": "that get more interesting and more relevant to this talk that I've you know pulled out of a lot",
    "start": "358080",
    "end": "363479"
  },
  {
    "text": "of those different product specifications is things like the ability to upload one of those IDL files uh like a like an open API spec and have",
    "start": "363479",
    "end": "371340"
  },
  {
    "text": "the API Gateway build an internal object model of your API you know hosts paths",
    "start": "371340",
    "end": "376740"
  },
  {
    "text": "methods and even down to body schema so enforcing the schemer of bodies and",
    "start": "376740",
    "end": "382800"
  },
  {
    "text": "request bodies coming in and going out a lot of them also have some kind of support for versioning apis you know",
    "start": "382800",
    "end": "390199"
  },
  {
    "text": "different stages of of deployment so maybe a sort of a test they're staging at a broad version of an API",
    "start": "390199",
    "end": "396960"
  },
  {
    "text": "and a lot of them will also do format translations so that's maybe trpc to soap or grpc to take quote unquote",
    "start": "396960",
    "end": "405539"
  },
  {
    "text": "rest the Json over http the they can do schema transforms so",
    "start": "405539",
    "end": "411240"
  },
  {
    "text": "they might take a you know a structured body like a Json document in one format and and rearrange some of the fields",
    "start": "411240",
    "end": "417360"
  },
  {
    "text": "rename some of the fields and they can manipulate metadata as well so you know insert modify delete headers",
    "start": "417360",
    "end": "424919"
  },
  {
    "text": "so why am I talking about these things well back in the day we had a network right and we would probably need some",
    "start": "424919",
    "end": "431340"
  },
  {
    "start": "428000",
    "end": "428000"
  },
  {
    "text": "load balancing and since we got Beyond a toy example we'd have certain services in this case",
    "start": "431340",
    "end": "436500"
  },
  {
    "text": "I'm showing a database that what you where we need more than one copy running for",
    "start": "436500",
    "end": "442560"
  },
  {
    "text": "redundancy for uh load you know carrying ability",
    "start": "442560",
    "end": "449639"
  },
  {
    "text": "so and we'd have multiple clients as well that needed to talk to those things so we'd stick a load balancer in the network you know sort of logically in",
    "start": "449639",
    "end": "455940"
  },
  {
    "text": "the middle uh these were originally Hardware pizza boxes you know I think in F5 or Juniper or a netscaler and then there were some",
    "start": "455940",
    "end": "462720"
  },
  {
    "text": "sort of famous software implementation something like AJ proxy nginx is quite good at doing this",
    "start": "462720",
    "end": "469220"
  },
  {
    "text": "and they balance load service to service but you also needed one on the edge so",
    "start": "469800",
    "end": "475500"
  },
  {
    "text": "that external clients could reach your services at all across that Network boundary",
    "start": "475500",
    "end": "480900"
  },
  {
    "text": "discover your services and you know then they would offer those features like load balancing between different copies",
    "start": "480900",
    "end": "486180"
  },
  {
    "text": "of the service so here I've just sort of shown that middle epoxy copied we've got another",
    "start": "486180",
    "end": "491699"
  },
  {
    "text": "instance of it because it's it's doing some load balancing over you know this is probably the 90s or the or the 2000s",
    "start": "491699",
    "end": "498300"
  },
  {
    "text": "this is you know your web tier right and then they've got a load balancer in front of your database tier",
    "start": "498300",
    "end": "505099"
  },
  {
    "text": "but because this thing is is a network Gateway because it's exposed out on the Internet it's facing untrusted clients",
    "start": "505139",
    "end": "510900"
  },
  {
    "text": "on an untrusted Network it needs to gain more features so things like TLS termination right you know just offering",
    "start": "510900",
    "end": "517200"
  },
  {
    "text": "a serving cert so you can do https uh rate limiting authentication",
    "start": "517200",
    "end": "522300"
  },
  {
    "text": "authorization and then more advanced stuff like bot blocking and your web application firewall features like",
    "start": "522300",
    "end": "528300"
  },
  {
    "text": "detecting injection payloads that kind of stuff so although it's a very blurry",
    "start": "528300",
    "end": "533339"
  },
  {
    "text": "definition I think all of these features made a load balancer into what we can sort of nebulously call an API Gateway",
    "start": "533339",
    "end": "542120"
  },
  {
    "start": "541000",
    "end": "541000"
  },
  {
    "text": "so now that we've moved to microservices you know our modelers are becoming distributed systems we need a bunch of",
    "start": "543540",
    "end": "550800"
  },
  {
    "text": "those features inside the network as well so you know our reservability doesn't come from attaching a debugger to the",
    "start": "550800",
    "end": "557459"
  },
  {
    "text": "monolith that it comes from looking at the the requests that are happening on The Wire",
    "start": "557459",
    "end": "562620"
  },
  {
    "text": "yeah things that were a function call from one class into another that were",
    "start": "562620",
    "end": "567860"
  },
  {
    "text": "effectively infinite and infallible are now Network transactions that can fail that can time out that can be slow that",
    "start": "567860",
    "end": "575339"
  },
  {
    "text": "can need retrying so all of this kind of routing and uh well yeah we used to have dependency injection Frameworks right",
    "start": "575339",
    "end": "581519"
  },
  {
    "text": "you wanted to uh you know do you read some different config or access a different database in test you would",
    "start": "581519",
    "end": "587399"
  },
  {
    "text": "just use dependency injection uh to do a sort of different build profile we can't",
    "start": "587399",
    "end": "592500"
  },
  {
    "text": "do any of that stuff anymore in the processes themselves because they're too small they're too simple so a lot of",
    "start": "592500",
    "end": "598380"
  },
  {
    "text": "that stuff is now being done on the network so that dumb load balancer in a fairly dumb load balancer in the middle",
    "start": "598380",
    "end": "604380"
  },
  {
    "text": "has gained a lot of features and it's starting to look a lot like an API Gateway and in fact a lot of API Gateway",
    "start": "604380",
    "end": "610560"
  },
  {
    "text": "software is being pressed into use to to perform this function",
    "start": "610560",
    "end": "617399"
  },
  {
    "text": "and I think the issue with this is that it can do a lot right the issue is that it can maybe do too much uh and it is",
    "start": "617399",
    "end": "623700"
  },
  {
    "text": "probably extensible as well uh you know you can just run a bit of lure or something to plug in so it's very easy",
    "start": "623700",
    "end": "629220"
  },
  {
    "text": "for this to become an Enterprise service bus kind of thing you know from 2005 it's this sort of all-knowing traffic",
    "start": "629220",
    "end": "636000"
  },
  {
    "text": "director that does all the surface Discovery holds all the credentials um for things to talk to each other it's",
    "start": "636000",
    "end": "642480"
  },
  {
    "text": "the only policy enforcement Point um and you know and all of those extensions all of those things that we",
    "start": "642480",
    "end": "648060"
  },
  {
    "text": "can plug in even the the built-in features like the ability to to just you",
    "start": "648060",
    "end": "653760"
  },
  {
    "text": "know add a header here and manipulate a body there just rename a field just so that a V1 request looks like a V2",
    "start": "653760",
    "end": "659160"
  },
  {
    "text": "request you'll order that stuff sort of strikes Terror into me of the SBS and",
    "start": "659160",
    "end": "664260"
  },
  {
    "text": "makes me think of these systems that are created so much you know duct tape uh that",
    "start": "664260",
    "end": "670800"
  },
  {
    "text": "nobody really understood and of course that duct tape isn't really duct tape this is this is part of a running",
    "start": "670800",
    "end": "676560"
  },
  {
    "text": "production system so you've got to consider it production code it's also not giving us the security we",
    "start": "676560",
    "end": "683880"
  },
  {
    "start": "681000",
    "end": "681000"
  },
  {
    "text": "think it is in this day and age you know the the edge proxy works the edge proxy secures us from",
    "start": "683880",
    "end": "689820"
  },
  {
    "text": "things on the internet because it's the only way in and out of the network and that's fine as long as we",
    "start": "689820",
    "end": "695339"
  },
  {
    "text": "you know as long as all of our threats are outside um and then that's the only way in because you know the subnet is is",
    "start": "695339",
    "end": "701339"
  },
  {
    "text": "literally unrootable but better experience shows us that not threads not all threats are on the",
    "start": "701339",
    "end": "707640"
  },
  {
    "text": "outside um you know compromised Services attempting lateral movement",
    "start": "707640",
    "end": "712700"
  },
  {
    "text": "because probably because they've had a supply chain attack uh or a discounted employees put some bad code in or just",
    "start": "712700",
    "end": "719700"
  },
  {
    "text": "somebody on the internal Network because they've cleaned us plugged into an internet and you know an ethernet port",
    "start": "719700",
    "end": "725040"
  },
  {
    "text": "or somebody's cracked the Wi-Fi or something and there's more and more of these devices on our networks now",
    "start": "725040",
    "end": "731760"
  },
  {
    "text": "um with you know with bring your own device and with cloud computing and with one monolith becoming 3000 micro",
    "start": "731760",
    "end": "738000"
  },
  {
    "text": "Services there's just more and more units of compute more and more workloads",
    "start": "738000",
    "end": "743040"
  },
  {
    "text": "that we have to worry about that could be a Potential Threat so while an API Gateway you know being",
    "start": "743040",
    "end": "748440"
  },
  {
    "text": "used as a little box he might do authentication that's kind of update right you've got to send your traffic",
    "start": "748440",
    "end": "754140"
  },
  {
    "text": "through it with the right headers if you if you don't have the right headers what's to stop you going sideways like",
    "start": "754140",
    "end": "759540"
  },
  {
    "text": "this so on to side cards so the basic psycho idea is the idea of",
    "start": "759540",
    "end": "766500"
  },
  {
    "text": "taking this this you know middle proxy that's got a bunch of logic and logic that you know I agree that we need I",
    "start": "766500",
    "end": "772740"
  },
  {
    "text": "just don't think it should be here so what a psychi does is it moves it to each of the services",
    "start": "772740",
    "end": "778440"
  },
  {
    "text": "right so for example I mean some of them are maybe a little bit obvious uh like rate limiting each one of those sidecars",
    "start": "778440",
    "end": "786060"
  },
  {
    "text": "can can you know rate limit on behalf of the you know service it's running on",
    "start": "786060",
    "end": "792600"
  },
  {
    "text": "um low balancing is one people often get a bit confused about you don't need a",
    "start": "792600",
    "end": "797700"
  },
  {
    "text": "centralized load balancer you know each uh Service uh in this case it's it's",
    "start": "797700",
    "end": "804180"
  },
  {
    "text": "sidecar can know about all of the other potential services and it can choose which one to",
    "start": "804180",
    "end": "809880"
  },
  {
    "text": "talk to they can even coordinate through something called a look aside load balancer to uh all make sure that then",
    "start": "809880",
    "end": "818279"
  },
  {
    "text": "you know their random number generators aren't going to make the middle hit the same one basically they can look at the look aside low answer to find out which",
    "start": "818279",
    "end": "825720"
  },
  {
    "text": "of the potential back ends has the you know the currently lease connections from from all clients so client-side low",
    "start": "825720",
    "end": "833639"
  },
  {
    "text": "balancing is actually perfectly valid and viable for those back end kind of",
    "start": "833639",
    "end": "838920"
  },
  {
    "text": "services for internal trusted Services where we have control over the code",
    "start": "838920",
    "end": "844399"
  },
  {
    "start": "844000",
    "end": "844000"
  },
  {
    "text": "so I've said sidecar a few times I mean I should actually have talked more generally about that logic so the first",
    "start": "844399",
    "end": "850139"
  },
  {
    "text": "thing we did with with that logic you know that stuff that the API Gateway was doing for us on the network retries",
    "start": "850139",
    "end": "857100"
  },
  {
    "text": "timeouts caching authentication rate limiting all that kind of stuff the first thing we did was",
    "start": "857100",
    "end": "863519"
  },
  {
    "text": "you know we factored it out into a library because like that Kong slide showed earlier we don't want every",
    "start": "863519",
    "end": "869700"
  },
  {
    "text": "microservice to have to you know re-implement that coach we don't want to the developer of each service to have to",
    "start": "869700",
    "end": "874760"
  },
  {
    "text": "reinvent that wheel and type the code out or copy and paste it in so we we Factor it out and there are a couple of",
    "start": "874760",
    "end": "880860"
  },
  {
    "text": "early examples of this we've got histrix and finagle which are both very full featured libraries that did this kind of",
    "start": "880860",
    "end": "887459"
  },
  {
    "text": "stuff the problem with those libraries is that",
    "start": "887459",
    "end": "893100"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "they're still you know part of the same process they're still part of the same build so deployments and upgrades are",
    "start": "893100",
    "end": "899279"
  },
  {
    "text": "coupled you know they're there reams of code they're probably orders of magnitude more code than your business logic so they actually have bug fix",
    "start": "899279",
    "end": "906240"
  },
  {
    "text": "updates a lot more often and every time they do you have to roll your service you also practically speaking need an",
    "start": "906240",
    "end": "913440"
  },
  {
    "text": "implementation in your language histricts and finagle were both jvm based languages so if you want to do",
    "start": "913440",
    "end": "920279"
  },
  {
    "text": "rust or something then you know you're out of luck and unless there's a decent implementation that comes along",
    "start": "920279",
    "end": "926339"
  },
  {
    "text": "so we factored it out even further basically to uh to an external process um a separate demon that can do that",
    "start": "926339",
    "end": "933959"
  },
  {
    "text": "kind of stuff in another process that can therefore you know have its configuration loaded be restarted be",
    "start": "933959",
    "end": "939480"
  },
  {
    "text": "upgraded independently so what kind of process you know what kind of software can we",
    "start": "939480",
    "end": "945720"
  },
  {
    "text": "find that will do that for us well it turns out they've already existed you know this this basically is",
    "start": "945720",
    "end": "950940"
  },
  {
    "text": "an HTTP proxy uh you know running as a reverse proxy so well actually arguably",
    "start": "950940",
    "end": "956519"
  },
  {
    "text": "running as a forward proxy on the sort of client side and then a reverse proxy on the you know on the server side on",
    "start": "956519",
    "end": "961980"
  },
  {
    "text": "the quality side so you know even Apache can do this if we press it uh but nginx ha proxy are better at it and the new",
    "start": "961980",
    "end": "969899"
  },
  {
    "text": "call is uh sort of cloud native HTTP proxy called Envoy which has a few",
    "start": "969899",
    "end": "975060"
  },
  {
    "text": "advantages like being able to be configured over its API um uh in a you know on an online fashion",
    "start": "975060",
    "end": "982320"
  },
  {
    "text": "so if you want to change the setting on nginx you have to render out a config file put it on disk hit nginx with sick",
    "start": "982320",
    "end": "988380"
  },
  {
    "text": "Hub I think I don't think you actually have to quit it but you do have to sort of hit it with a signal and it will potentially drop uh connections while",
    "start": "988380",
    "end": "995100"
  },
  {
    "text": "it's reconfiguring itself Envoy applies all of that stuff live",
    "start": "995100",
    "end": "1000620"
  },
  {
    "text": "so yeah as I say this is the logo for envoys so Envoy is a good implementation of that and we can now use nice cool",
    "start": "1000620",
    "end": "1006440"
  },
  {
    "text": "modern programming languages um any language we want rather than being stuck in the jvm",
    "start": "1006440",
    "end": "1013480"
  },
  {
    "text": "this is great for security too so you know I talked before about how that API Gateway Middle proxy was was opt-in it",
    "start": "1013839",
    "end": "1021199"
  },
  {
    "text": "could be bypassed fairly easily if you're running kubernetes and each of",
    "start": "1021199",
    "end": "1027020"
  },
  {
    "text": "these black boxes is a is a pod then your sidecar is you know a sidecar container so a separate container it's",
    "start": "1027020",
    "end": "1034040"
  },
  {
    "text": "in the same network namespace and the the actual business Logic the application",
    "start": "1034040",
    "end": "1039500"
  },
  {
    "text": "process is is unrootable from the outside right the only way traffic can reach it is through the pods single IP",
    "start": "1039500",
    "end": "1047720"
  },
  {
    "text": "and and therefore through the sidecar because that's where all traffic is is rooted",
    "start": "1047720",
    "end": "1053380"
  },
  {
    "text": "these you know sidecars are also going to be present in in all traffic Flows In and Out of the pot so",
    "start": "1053380",
    "end": "1060380"
  },
  {
    "text": "um whatever tries to call a particular service no matter where on the network it is or you know how compromised it is",
    "start": "1060380",
    "end": "1066260"
  },
  {
    "text": "it's going to have to go through that sidecar they kind of can't opt out um so we therefore apply you know",
    "start": "1066260",
    "end": "1072740"
  },
  {
    "text": "authentication authorization rate limit Etc to everything even stuff that's you",
    "start": "1072740",
    "end": "1078860"
  },
  {
    "text": "know internal in our Network that you would have just been trusted because you know it was it's on the same network in the same cluster it came from a 192.168",
    "start": "1078860",
    "end": "1086179"
  },
  {
    "text": "address we don't trust any of that anymore because it's so easy for this stuff to be compromised these days so",
    "start": "1086179",
    "end": "1092299"
  },
  {
    "text": "this is an idea called zero trust because you you trust nothing basically and I've put a few links up for people",
    "start": "1092299",
    "end": "1098960"
  },
  {
    "text": "who want to read more on that and just to quickly say they can also cover the egress case right you're",
    "start": "1098960",
    "end": "1104960"
  },
  {
    "text": "trying to reach out to the cloud all traffic goes through the cloud uh so Millennial of me you're trying to reach",
    "start": "1104960",
    "end": "1110960"
  },
  {
    "text": "out to you know things on the internet again all traffic out of any business logic has to go through the Sidecar",
    "start": "1110960",
    "end": "1119179"
  },
  {
    "start": "1118000",
    "end": "1118000"
  },
  {
    "text": "okay so these sidecars they can do great things but they can be quite tricky to",
    "start": "1119179",
    "end": "1124280"
  },
  {
    "text": "configure um you know nginx config files can get quite long if you want them to do a lot of voice config is very long",
    "start": "1124280",
    "end": "1130700"
  },
  {
    "text": "and fiddly uh it's not really designed to be written by human uh and each of these sidecars is going to need a",
    "start": "1130700",
    "end": "1137299"
  },
  {
    "text": "different config you know depending on the service that it's serving each one is going to have different uh",
    "start": "1137299",
    "end": "1142940"
  },
  {
    "text": "connections that it allows and different rate limits that it applies on whatever so managing that configuration by hand",
    "start": "1142940",
    "end": "1148940"
  },
  {
    "text": "is a nightmare we very quickly came up with this idea of a control plane so you know a demon",
    "start": "1148940",
    "end": "1155900"
  },
  {
    "text": "that provides a high level simple sort of config API we can give it high level",
    "start": "1155900",
    "end": "1163100"
  },
  {
    "text": "Notions like service a can talk to service B at five RPS and it will then",
    "start": "1163100",
    "end": "1169160"
  },
  {
    "text": "go and render the you know the long-winded individual configs needed for the sidecars and and go and",
    "start": "1169160",
    "end": "1175039"
  },
  {
    "text": "configure them so uh this control plane in addition to the sidecar proxies gives",
    "start": "1175039",
    "end": "1181039"
  },
  {
    "text": "us what's called a service mesh istio is probably the most famous example you may have heard of it there's others others",
    "start": "1181039",
    "end": "1187220"
  },
  {
    "text": "out there like link D or psyllium or AWS is it's a native app mesh",
    "start": "1187220",
    "end": "1194059"
  },
  {
    "text": "just a note that if you're running your workloads in kubernetes then uh you",
    "start": "1194059",
    "end": "1199340"
  },
  {
    "text": "actually you can kind of get this service mesh uh solution quite easily so using",
    "start": "1199340",
    "end": "1205220"
  },
  {
    "text": "various kubernetes features you can just make container images that contain just",
    "start": "1205220",
    "end": "1212059"
  },
  {
    "text": "your business logic you can write deployments that deploy just your business logic you know just",
    "start": "1212059",
    "end": "1217700"
  },
  {
    "text": "one container in a pod with your container image in and then using various kubernetes features you can have",
    "start": "1217700",
    "end": "1223400"
  },
  {
    "text": "those sidecars automatically injected the the service mesh gets",
    "start": "1223400",
    "end": "1228760"
  },
  {
    "text": "its configuration API and storage hosted for free in the kubernetes control plane",
    "start": "1228760",
    "end": "1233860"
  },
  {
    "text": "it can be it can be very simple to get started with these things if you're in a you know friendly high level computer",
    "start": "1233860",
    "end": "1240200"
  },
  {
    "text": "environment like kubernetes so I just well just just a recap I guess",
    "start": "1240200",
    "end": "1247160"
  },
  {
    "text": "I think you know we've seen while an API Gateway is as a sort of",
    "start": "1247160",
    "end": "1252740"
  },
  {
    "text": "piece of network equipment what features it has why they used to be necessary well they are still necessary but why in",
    "start": "1252740",
    "end": "1260059"
  },
  {
    "text": "a microservice world having them all centralized in one place is maybe not the best thing and how we can move a lot",
    "start": "1260059",
    "end": "1268100"
  },
  {
    "text": "of those features uh out to Individual Services through this sidecar pattern so I just want to spend the last 10",
    "start": "1268100",
    "end": "1274100"
  },
  {
    "text": "minutes talking about some of the stuff we haven't touched on so some of those API Gateway features",
    "start": "1274100",
    "end": "1279980"
  },
  {
    "text": "like enforcing requests and response bodies like doing um",
    "start": "1279980",
    "end": "1285760"
  },
  {
    "text": "body transformation and and all that kind of stuff because",
    "start": "1285760",
    "end": "1291860"
  },
  {
    "text": "as I was saying API gateways some of them do offer these features but I don't think it's the right place for it I",
    "start": "1291860",
    "end": "1297740"
  },
  {
    "text": "don't think it should be an infrastructure networking so and I don't you know think it should be moved to a",
    "start": "1297740",
    "end": "1303260"
  },
  {
    "text": "sidecar I think it should be dealt with completely differently so I'm now going to go through various stages of an api's",
    "start": "1303260",
    "end": "1309320"
  },
  {
    "text": "life cycle and look at different tooling that we can use to help us out in all of those stages",
    "start": "1309320",
    "end": "1315679"
  },
  {
    "text": "so we want to come along and design an API the first thing I would say is you",
    "start": "1315679",
    "end": "1321200"
  },
  {
    "text": "should design your API up front now this idea of schema driven development of sitting down and writing what the API is",
    "start": "1321200",
    "end": "1328159"
  },
  {
    "text": "going to be because that's the sort of services contract is really powerful I found it very useful personally uh it",
    "start": "1328159",
    "end": "1334760"
  },
  {
    "text": "can also be great for sort of more gated development processes so if you need to go to a",
    "start": "1334760",
    "end": "1342020"
  },
  {
    "text": "technical design review meeting to get you know sort of approval to spend six weeks writing your service or you need",
    "start": "1342020",
    "end": "1348500"
  },
  {
    "text": "to go to a sort of budget holders review meeting to get the investment then you",
    "start": "1348500",
    "end": "1354740"
  },
  {
    "text": "know going with maybe a sketch of the architecture and and the contract the schema I found to be a really powerful",
    "start": "1354740",
    "end": "1359840"
  },
  {
    "text": "thing so schema driven development I think it's it's really useful it really clarifies what this service is for and",
    "start": "1359840",
    "end": "1367640"
  },
  {
    "text": "what it does and you know what services it's going to offer to whom so if you're going to be writing",
    "start": "1367640",
    "end": "1375260"
  },
  {
    "text": "um definitions of rest interfaces then you're almost certainly writing open API",
    "start": "1375260",
    "end": "1380360"
  },
  {
    "text": "files that's kind of the standard you can do that with Vim or with your IDE with various plugins but there's also",
    "start": "1380360",
    "end": "1388120"
  },
  {
    "text": "software packages out there that sort of support this first class so things like stoplight and Postman and Kong's",
    "start": "1388120",
    "end": "1394880"
  },
  {
    "text": "insomnia if you're writing protobuf files describing grpc apis which I would",
    "start": "1394880",
    "end": "1402440"
  },
  {
    "start": "1396000",
    "end": "1396000"
  },
  {
    "text": "encourage you to do by the way I think grpc is great it's got a it's got a bunch of advantages um not just around the sort of API",
    "start": "1402440",
    "end": "1409039"
  },
  {
    "text": "design but it's just around you know actual runtime Network usage kind of stuff then you're going to be writing Proto",
    "start": "1409039",
    "end": "1415400"
  },
  {
    "text": "files again you can use Vim you can use your IDE and some plugins I don't personally know of any uh first class",
    "start": "1415400",
    "end": "1423380"
  },
  {
    "text": "tools that support this at the moment but somebody please chime in if I've missed anything so what happens when I",
    "start": "1423380",
    "end": "1429440"
  },
  {
    "text": "want to come to implement the service behind this API the first thing to do I think is to is",
    "start": "1429440",
    "end": "1434960"
  },
  {
    "start": "1431000",
    "end": "1431000"
  },
  {
    "text": "to generate all of the things right generate stubs uh generate basically an SDK for",
    "start": "1434960",
    "end": "1441320"
  },
  {
    "text": "the client side and generate stub hooks on the server side so all of that boilerplate code for say hosting a rest",
    "start": "1441320",
    "end": "1447799"
  },
  {
    "text": "API where you open a socket and you attach a HTTP Max router kind of thing",
    "start": "1447799",
    "end": "1453919"
  },
  {
    "text": "and you register a logging middleware and all that kind of stuff that's boilerplate code yeah you can copy and",
    "start": "1453919",
    "end": "1460460"
  },
  {
    "text": "paste it yeah you can Factor it out into a microservices framework but you can also generate it from these API definition",
    "start": "1460460",
    "end": "1467419"
  },
  {
    "text": "files and then they will you know leave you with code where you just have to write the handlers for the business",
    "start": "1467419",
    "end": "1473360"
  },
  {
    "text": "logic same on the client side you can generate your client libraries sdks whatever you want to call them that you",
    "start": "1473360",
    "end": "1480440"
  },
  {
    "text": "know our library code where you write the business logic and then you you make one function call to hit an API endpoint",
    "start": "1480440",
    "end": "1488659"
  },
  {
    "text": "on a remote service and you can just kind of assume that it works because all of the finding the service serializing",
    "start": "1488659",
    "end": "1495380"
  },
  {
    "text": "the request body you know sending it retrying it timing it out all of that kind of stuff is taken care of so again",
    "start": "1495380",
    "end": "1502159"
  },
  {
    "text": "you can just focus on writing business logic now one of the main",
    "start": "1502159",
    "end": "1508580"
  },
  {
    "text": "reasons I think for doing this is we we used to use well I often see API gateways used for",
    "start": "1508580",
    "end": "1515260"
  },
  {
    "text": "enforcing request schemas on The Wire alright so service a will send a request",
    "start": "1515260",
    "end": "1520280"
  },
  {
    "text": "to service B and the API Gateway will be configured to check that it's its body has you know it's the Json document that",
    "start": "1520280",
    "end": "1527059"
  },
  {
    "text": "it's sending has the right schema this just becomes unnecessary if all",
    "start": "1527059",
    "end": "1533000"
  },
  {
    "text": "you're ever doing is calling Auto generated client stubs to send requests and you know hooking",
    "start": "1533000",
    "end": "1539480"
  },
  {
    "text": "into Auto generated service types to send responses it's not possible to send the wrong",
    "start": "1539480",
    "end": "1545720"
  },
  {
    "text": "um body schema because you're not generating it and serializing it right you're you're typically new up an",
    "start": "1545720",
    "end": "1552559"
  },
  {
    "text": "instance of a class you'll you'll fill in the fields right so you'll have to fill in all of the fields and you can't",
    "start": "1552559",
    "end": "1558140"
  },
  {
    "text": "fill any extra fields and then the stubs will sort of take it from there and they'll serialize it um and they'll do",
    "start": "1558140",
    "end": "1563840"
  },
  {
    "text": "any um you know field validation or not integer size or string length or whatever",
    "start": "1563840",
    "end": "1569539"
  },
  {
    "text": "so by using these client stubs you just a whole class of Errors just just goes",
    "start": "1569539",
    "end": "1574880"
  },
  {
    "text": "away and gets it gets caught a lot earlier",
    "start": "1574880",
    "end": "1578980"
  },
  {
    "start": "1578000",
    "end": "1578000"
  },
  {
    "text": "so generating stubs uh from open API documents for rest there's a few tools out there",
    "start": "1580100",
    "end": "1587179"
  },
  {
    "text": "um there's Azure open rest which uh gets a fair amount of love but only supports a few languages there's this project",
    "start": "1587179",
    "end": "1594500"
  },
  {
    "text": "called open API generator its main advantage is that it's got templates for",
    "start": "1594500",
    "end": "1599659"
  },
  {
    "text": "like a zillion languages um in fact for python I think it's got four separate templates so you choose",
    "start": "1599659",
    "end": "1605480"
  },
  {
    "text": "your favorite I I do have to say from a lot of bitter practical experience that most of those templates aren't very good",
    "start": "1605480",
    "end": "1612440"
  },
  {
    "text": "the code they emit is is very elaborate very complicated very slow and just not",
    "start": "1612440",
    "end": "1617840"
  },
  {
    "text": "here idiomatic at all your mileage may vary and you can write your own templates although that's not easy so",
    "start": "1617840",
    "end": "1623659"
  },
  {
    "text": "it's a nice idea I've sadly not had a great a matter of success with that tool um even the APA AWS API Gateway can do",
    "start": "1623659",
    "end": "1631760"
  },
  {
    "text": "this did you know if you if you it's it's not a great Dev experience but if",
    "start": "1631760",
    "end": "1637159"
  },
  {
    "text": "you take an open API file and you you upload it into AWS API Gateway which is",
    "start": "1637159",
    "end": "1642320"
  },
  {
    "text": "kind of the same thing as you know clicking through the UI making paths and methods and all that kind of stuff",
    "start": "1642320",
    "end": "1648260"
  },
  {
    "text": "there's an AWS CLI command that'll get you get you a stub but it only works for",
    "start": "1648260",
    "end": "1653960"
  },
  {
    "text": "like two languages and they they seem pretty basic doing the same for for grpc then there's the original you know",
    "start": "1653960",
    "end": "1659600"
  },
  {
    "text": "Upstream Google uh protalk protalk Proto compiler and uh it has a plug-in",
    "start": "1659600",
    "end": "1666799"
  },
  {
    "text": "mechanism so there needs to be a plug-in for your language and there's there's plugins for most of the major languages it's fine uh but there's this new tool",
    "start": "1666799",
    "end": "1674419"
  },
  {
    "text": "called buff which I think is a lot better",
    "start": "1674419",
    "end": "1678520"
  },
  {
    "start": "1679000",
    "end": "1679000"
  },
  {
    "text": "so when we've done that we will really hopefully get to this point of just add business logic right so we can see this",
    "start": "1680059",
    "end": "1685760"
  },
  {
    "text": "service on the bottom left is you know a client that's calling the service on the top",
    "start": "1685760",
    "end": "1691220"
  },
  {
    "text": "right which is which is a server and a distinction becomes kind of irrelevant in microservices often but you know in",
    "start": "1691220",
    "end": "1697520"
  },
  {
    "text": "this case we've got one thing calling another to make it simple yeah that server side has business logic and that",
    "start": "1697520",
    "end": "1703279"
  },
  {
    "text": "really can just be business logic because Network concerns like rate limiting and authentication or whatever",
    "start": "1703279",
    "end": "1710720"
  },
  {
    "text": "are taken care of by the sidecar and then things like um body deserialization",
    "start": "1710720",
    "end": "1718419"
  },
  {
    "text": "uh a body schema validation all of that kind of stuff are taken care of by the",
    "start": "1718419",
    "end": "1724460"
  },
  {
    "text": "it just the boilerplate like open this socket and set the buffer a bit bigger so we can go faster all of that stuff's",
    "start": "1724460",
    "end": "1730520"
  },
  {
    "text": "taken care of in the generated service stop code likewise on the client the sidecar is doing sort of reach eyes and",
    "start": "1730520",
    "end": "1737480"
  },
  {
    "text": "and caching for us and then the business logic here can um can call on three separate services",
    "start": "1737480",
    "end": "1744919"
  },
  {
    "text": "and it has a generated client stub uh for each one",
    "start": "1744919",
    "end": "1750100"
  },
  {
    "text": "so when we want to deploy these services um schema validation right that we use",
    "start": "1750740",
    "end": "1756320"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "to configure on an API Gateway well I'm going to say uh don't because I've talked about how we can we can sort of",
    "start": "1756320",
    "end": "1761779"
  },
  {
    "text": "shift that left and how we can we don't make those mistakes if we use generated code um I have I have actually already",
    "start": "1761779",
    "end": "1767720"
  },
  {
    "text": "covered it but the the idls tend to only be expressive to the sort of granularity",
    "start": "1767720",
    "end": "1773960"
  },
  {
    "text": "of oh the field um email is is a string there are enhancements and plugins",
    "start": "1773960",
    "end": "1782659"
  },
  {
    "text": "um I think for open API certainly for Proto um where you can give more validation so",
    "start": "1782659",
    "end": "1789620"
  },
  {
    "text": "you can say that you know the field email is is a string it's a minimum of six characters it's got to have an ampersand in the middle it's got a match",
    "start": "1789620",
    "end": "1797000"
  },
  {
    "text": "a certain regular expression so that kind of fine grain stuff can can all be done you know declaratively in your IDL",
    "start": "1797000",
    "end": "1804380"
  },
  {
    "text": "and there therefore you know uh generated into into automatic code at",
    "start": "1804380",
    "end": "1810260"
  },
  {
    "text": "build time what happens when we want to publish these things",
    "start": "1810260",
    "end": "1816020"
  },
  {
    "start": "1815000",
    "end": "1815000"
  },
  {
    "text": "so buff for example and this is just one example um Spotlight and things uh Postman all",
    "start": "1816020",
    "end": "1822559"
  },
  {
    "text": "offer this this as well I think um but buff has a schema registry so I can take you know my predo buff file on",
    "start": "1822559",
    "end": "1829460"
  },
  {
    "text": "the left and I can upload it into into the buff skiba registry and uh there's a",
    "start": "1829460",
    "end": "1835820"
  },
  {
    "text": "hosted version or you can run your own and you can see that it's it's done you know sort of um you know rust stocks or godox it's",
    "start": "1835820",
    "end": "1842299"
  },
  {
    "text": "rendered this nicely into the documentation with hyperlinks uh but but now I've gotten you know nice",
    "start": "1842299",
    "end": "1848240"
  },
  {
    "text": "documentation for what this API is yeah what services it offers how I should call them",
    "start": "1848240",
    "end": "1853520"
  },
  {
    "text": "um and I've got a catalog by looking at the you know the whole um schema registry I've got a catalog",
    "start": "1853520",
    "end": "1859700"
  },
  {
    "text": "for all the apis available in my organization all the services I can get from all the running microservices and",
    "start": "1859700",
    "end": "1866120"
  },
  {
    "text": "this is really really useful for um you know discovering that kind of stuff the amount of time",
    "start": "1866120",
    "end": "1872059"
  },
  {
    "text": "um you know in previous jobs I've had people say oh I'd love to write that code but this piece of information isn't",
    "start": "1872059",
    "end": "1878120"
  },
  {
    "text": "available or you know I'm going to spend a week writing the code to sort of extract",
    "start": "1878120",
    "end": "1883940"
  },
  {
    "text": "um some data from the database and transform it when a service to do that already exists so we can find them a lot",
    "start": "1883940",
    "end": "1889820"
  },
  {
    "text": "more easily now so yeah there's this kind of idea of you know ambient apis you just push all your",
    "start": "1889820",
    "end": "1895760"
  },
  {
    "start": "1891000",
    "end": "1891000"
  },
  {
    "text": "schema publish all your schema to to the schema registry and then others can search them others can find them",
    "start": "1895760",
    "end": "1903200"
  },
  {
    "start": "1902000",
    "end": "1902000"
  },
  {
    "text": "you can take that stock generation and you can put it in your CI system so",
    "start": "1903200",
    "end": "1910880"
  },
  {
    "text": "um when you're automatically building those stubs you automatically build those stubs in in CI every time uh",
    "start": "1910880",
    "end": "1917720"
  },
  {
    "text": "the the IDL yeah product definition file changes and those built stubs are are pushed to",
    "start": "1917720",
    "end": "1925399"
  },
  {
    "text": "your pip or uh npm or your internal artifactory or whatever",
    "start": "1925399",
    "end": "1930679"
  },
  {
    "text": "so though if I'm writing a new service that wants to you know call a service called Foo I can justify if I'm writing",
    "start": "1930679",
    "end": "1936980"
  },
  {
    "text": "in Python I just pip install Food Service client I don't have to go and grab the IDL and run the tooling on it",
    "start": "1936980",
    "end": "1942740"
  },
  {
    "text": "myself and do the do the generation I don't have to copy the code into my code base I can I can depend on it as a",
    "start": "1942740",
    "end": "1948740"
  },
  {
    "text": "package and then I can use something like dependabot to automatically upgrade",
    "start": "1948740",
    "end": "1954080"
  },
  {
    "text": "those stops so if a new version of the API is published then a new version of the you know",
    "start": "1954080",
    "end": "1960740"
  },
  {
    "text": "client library that can call all of the new methods will be generated and dependable can can you know come along",
    "start": "1960740",
    "end": "1966860"
  },
  {
    "text": "and suggest or even do the upgrade for me so what would I want to I want to modify",
    "start": "1966860",
    "end": "1973760"
  },
  {
    "text": "an API right it's going through its life cycle well we should version them we should version them from day one and we should use semv to do that right",
    "start": "1973760",
    "end": "1980899"
  },
  {
    "start": "1975000",
    "end": "1975000"
  },
  {
    "text": "probably sucking eggs but it's worth saying so when I want to go from 1.0 to 1.1 you",
    "start": "1980899",
    "end": "1986720"
  },
  {
    "start": "1984000",
    "end": "1984000"
  },
  {
    "text": "know this is a non-breaking change we're just I'd say adding a method well I've like I've already said you know CI CD",
    "start": "1986720",
    "end": "1992539"
  },
  {
    "text": "will spot the new IDL file generate and publish new clients Dependable can come",
    "start": "1992539",
    "end": "1997580"
  },
  {
    "text": "along and it's it should be safe to automatically upgrade the services that use them um you know and then next time you're",
    "start": "1997580",
    "end": "2003880"
  },
  {
    "text": "hacking on your business logic you can just call a new method you know you press client Library dot in your IDE and",
    "start": "2003880",
    "end": "2011140"
  },
  {
    "text": "autocomplete will tell you the the latest set of you know methods that are available because they're they're local",
    "start": "2011140",
    "end": "2016539"
  },
  {
    "text": "function calls on the SDK when I want to go to V2 so this is a",
    "start": "2016539",
    "end": "2021760"
  },
  {
    "text": "breaking change you know say I've removed a method renamed a field well again cicd can can spot the annual IDL",
    "start": "2021760",
    "end": "2028360"
  },
  {
    "text": "file generate a new client uh with a V2 version on the package now and publish that but people are going to have to",
    "start": "2028360",
    "end": "2034899"
  },
  {
    "text": "manually do this dependency upgrading because the API changed on The Wire then",
    "start": "2034899",
    "end": "2040840"
  },
  {
    "text": "the the API for the SDK is also going to change in a breaking way you might be",
    "start": "2040840",
    "end": "2047260"
  },
  {
    "text": "calling the method on the SDK that called the you know the endpoint on the API that's being removed",
    "start": "2047260",
    "end": "2053919"
  },
  {
    "text": "so this is a potentially breaking change um and people have to you know do the",
    "start": "2053919",
    "end": "2060099"
  },
  {
    "text": "upgrade manually and deal with any Fallout in in their code",
    "start": "2060099",
    "end": "2064800"
  },
  {
    "start": "2064000",
    "end": "2064000"
  },
  {
    "text": "the best thing to do is to not make breaking changes right is to just go to 1.2 or 1.3 and never actually have to",
    "start": "2066580",
    "end": "2073060"
  },
  {
    "text": "declare V2 we can do this with breaking change detection so the buff tool and this is",
    "start": "2073060",
    "end": "2079419"
  },
  {
    "text": "one of the reasons I like it so much can do this for product files so given an old and a new product buff file coming",
    "start": "2079419",
    "end": "2085720"
  },
  {
    "text": "through your CI system buff can tell you whether the difference between them is a breaking change or an",
    "start": "2085720",
    "end": "2091898"
  },
  {
    "text": "additive one and that's really really nice for stopping people you know making them think oh I didn't mean to that for",
    "start": "2091899",
    "end": "2097599"
  },
  {
    "text": "that to be a breaking change or oh yeah that is annoying let me think if I can do this in a way that that isn't breaking on The Wire",
    "start": "2097599",
    "end": "2105240"
  },
  {
    "text": "so how do we deprecate them if I if I have had to make a v 2.0 I don't really want V 1.0 to be hanging around for a",
    "start": "2105940",
    "end": "2112780"
  },
  {
    "text": "long time because realistically I'm going to have to offer both right it's a breaking change",
    "start": "2112780",
    "end": "2118300"
  },
  {
    "text": "maybe all the clients aren't up to date yet I want to get them up to date I want to get the more calling V2 but you know",
    "start": "2118300",
    "end": "2124180"
  },
  {
    "text": "until they are I've got to keep serving V1 because you know a V1 only client is not compatible with my menu V2",
    "start": "2124180",
    "end": "2131079"
  },
  {
    "start": "2130000",
    "end": "2130000"
  },
  {
    "text": "so yeah as I say keep offering V1 a way to offer and do this is you know you take your refactored improved code the",
    "start": "2131079",
    "end": "2137440"
  },
  {
    "text": "sort of natively has a V2 API and you can write an adapter layer that uh will",
    "start": "2137440",
    "end": "2143200"
  },
  {
    "text": "keep serving V1 if if the code it has to be so different then then yeah you can have two different code bases and two",
    "start": "2143200",
    "end": "2149079"
  },
  {
    "text": "different pods running and then the advantage of the sort of",
    "start": "2149079",
    "end": "2154960"
  },
  {
    "start": "2151000",
    "end": "2151000"
  },
  {
    "text": "approach I've been talking about is you can go and proactively uh deprecate these uh these older clients so",
    "start": "2154960",
    "end": "2162760"
  },
  {
    "text": "yeah the the way you need to do that is you need to be make sure that no one's still using it right so we've got V2 now",
    "start": "2162760",
    "end": "2169359"
  },
  {
    "text": "where we we want everybody to be using V2 we want to turn off V1 so we want to delete that code in the Pod that's",
    "start": "2169359",
    "end": "2175359"
  },
  {
    "text": "offering B1 or turn off the odd V1 pods or whatever it is we can't do that if",
    "start": "2175359",
    "end": "2180400"
  },
  {
    "start": "2178000",
    "end": "2178000"
  },
  {
    "text": "people are still using it obviously or potentially still using it like the amount of people I've seen try to work",
    "start": "2180400",
    "end": "2186460"
  },
  {
    "text": "out if the one is still being used by just looking at at logs or sniffing Network traffic right that's only data",
    "start": "2186460",
    "end": "2192820"
  },
  {
    "text": "from the last five minutes or seven days or something that doesn't tell you I",
    "start": "2192820",
    "end": "2198160"
  },
  {
    "text": "used to work in the financial institution it doesn't tell you whether you know you turn it off now in 11",
    "start": "2198160",
    "end": "2203980"
  },
  {
    "text": "months when it comes around to year end some batch process or some subroutine is",
    "start": "2203980",
    "end": "2209200"
  },
  {
    "text": "going to run that's going to need uh that's good to know that's good you expect gonna expect to be able to call",
    "start": "2209200",
    "end": "2214359"
  },
  {
    "text": "V1 and it's going to blow up and you're going to have a big problem if we build those client stubs uh into",
    "start": "2214359",
    "end": "2220780"
  },
  {
    "text": "packages and we push them to you know something like a pip registry then we can use dependency scanners",
    "start": "2220780",
    "end": "2228099"
  },
  {
    "text": "because we can see which uh repos in our in our GitHub",
    "start": "2228099",
    "end": "2234599"
  },
  {
    "text": "are importing you know Food Service client version 1.x",
    "start": "2234599",
    "end": "2241420"
  },
  {
    "text": "yeah if we insist that people use client stops to call everything and we insist",
    "start": "2241420",
    "end": "2246579"
  },
  {
    "text": "that they get those client stubs from the published packages then the only way anybody can possibly ever call V1 even",
    "start": "2246579",
    "end": "2253900"
  },
  {
    "text": "if they're not doing it now is if their code Imports you know Foo client you know Foo Auto",
    "start": "2253900",
    "end": "2260560"
  },
  {
    "text": "generated client uh Library V1 so we can use a security dependent scanner it's",
    "start": "2260560",
    "end": "2266020"
  },
  {
    "text": "dependency see I have to go and find that um and then we can you know go and talk to them at least we've got a visibility at least even if they you",
    "start": "2266020",
    "end": "2272560"
  },
  {
    "text": "know they can't or won't change we know it's not safe to turn off V1",
    "start": "2272560",
    "end": "2278020"
  },
  {
    "text": "so thank you everyone um I've run out of time so I'll leave this",
    "start": "2278020",
    "end": "2283720"
  },
  {
    "start": "2280000",
    "end": "2280000"
  },
  {
    "text": "slide here so you can pause it uh come back to it it basically says for all of the features that you're probably getting from an API Gateway where should",
    "start": "2283720",
    "end": "2290619"
  },
  {
    "text": "it go there are actually a couple of cases where you do need to keep an API Gateway you know those those kind of",
    "start": "2290619",
    "end": "2295900"
  },
  {
    "text": "features things like Advanced um web application firewall stuff uh",
    "start": "2295900",
    "end": "2302339"
  },
  {
    "text": "Advanced sort of AI based uh bot blocking all of that kind of stuff I haven't seen any sidecars that do that",
    "start": "2302339",
    "end": "2309400"
  },
  {
    "text": "yet that the sort of product Marketplace is just less mature it's full of Open Source software at the moment and you",
    "start": "2309400",
    "end": "2314680"
  },
  {
    "text": "know these are big heavy r d sort of value ads so you might you might want to keep a you know a network Gateway but",
    "start": "2314680",
    "end": "2321520"
  },
  {
    "text": "for internal stuff this is talking about whether you want to and move that code actually into the the",
    "start": "2321520",
    "end": "2328180"
  },
  {
    "text": "service itself into the business logic whether you want to use a service mesh sidecar or whether you want to shift it",
    "start": "2328180",
    "end": "2333760"
  },
  {
    "text": "left so to conclude I think API Gateway is a",
    "start": "2333760",
    "end": "2339040"
  },
  {
    "start": "2335000",
    "end": "2335000"
  },
  {
    "text": "sort of nebulous term um for a bunch of features that have been piled into into what used to be Ingress proxies",
    "start": "2339040",
    "end": "2344859"
  },
  {
    "text": "these features are useful so API gateways are being used to provide them but they're now being used in places",
    "start": "2344859",
    "end": "2350800"
  },
  {
    "text": "they're not really suited you know like the middle of microservices service measures and then the shift",
    "start": "2350800",
    "end": "2357280"
  },
  {
    "text": "shift left API management tooling can take on most of what an API Gateway does",
    "start": "2357280",
    "end": "2362380"
  },
  {
    "text": "uh like I said API gate we still have a place especially for sort of Internet facing egress in Ingress",
    "start": "2362380",
    "end": "2369400"
  },
  {
    "text": "uh you actually probably need something like a CDN uh you know Regional caching",
    "start": "2369400",
    "end": "2374440"
  },
  {
    "text": "even further left in your API Gateway anyway you know in this day and age you probably shouldn't actually have an API",
    "start": "2374440",
    "end": "2379839"
  },
  {
    "text": "Gateway exposed to the raw internet and these patterns like um",
    "start": "2379839",
    "end": "2385680"
  },
  {
    "text": "cdns and Edge compute and service meshes are all standard now I would say so I",
    "start": "2385680",
    "end": "2391000"
  },
  {
    "text": "wouldn't be afraid of adopting them I think this is a reasonably well trodden path",
    "start": "2391000",
    "end": "2396820"
  },
  {
    "start": "2396000",
    "end": "2396000"
  },
  {
    "text": "so for practical takeaways you can Implement incrementally adopt sidecars",
    "start": "2396820",
    "end": "2402040"
  },
  {
    "text": "the service meshes support incremental rollouts to your workloads one by one so",
    "start": "2402040",
    "end": "2407200"
  },
  {
    "text": "I wouldn't be too worried about that I think sidecars will get more of these API Gateway features like the advanced",
    "start": "2407200",
    "end": "2413500"
  },
  {
    "text": "Waf stuff over time so I don't think you're painting yourself into a black hole you're not um giving yourself a",
    "start": "2413500",
    "end": "2419619"
  },
  {
    "text": "much bigger operational bird overhead forever um check out what your CDN can do you",
    "start": "2419619",
    "end": "2425500"
  },
  {
    "text": "know when you've got those few features left in the API Gateway is cdns can be really sophisticated",
    "start": "2425500",
    "end": "2430900"
  },
  {
    "text": "these days you might find that they can do everything that's left and you really can get rid of the API Gateway",
    "start": "2430900",
    "end": "2436780"
  },
  {
    "text": "that shift left management tooling can also be incrementally adopted um and even if you're not ready to adopt",
    "start": "2436780",
    "end": "2442780"
  },
  {
    "text": "any of this stuff if I've convinced you this is a good way of doing things and you think it's a good North Star then you can certainly",
    "start": "2442780",
    "end": "2448480"
  },
  {
    "text": "design with this stuff in mind so thank you everyone and I think now",
    "start": "2448480",
    "end": "2454839"
  },
  {
    "text": "we're on to q a",
    "start": "2454839",
    "end": "2457859"
  },
  {
    "text": "thank you Matt always good to see you and you sir um so a few questions that came in",
    "start": "2460599",
    "end": "2467980"
  },
  {
    "text": "um I want to jump in here and ask some of those uh didn't scroll up there's a few more that",
    "start": "2467980",
    "end": "2474220"
  },
  {
    "text": "I saw too okay yeah say again I've been trying to get",
    "start": "2474220",
    "end": "2479680"
  },
  {
    "text": "through them sorry I'll just uh yeah go for it and I'll uh yeah yeah yeah so um I want to talk about",
    "start": "2479680",
    "end": "2486220"
  },
  {
    "text": "um you know you mentioned in the chat for example what problem are you trying to solve um and you I think that's a",
    "start": "2486220",
    "end": "2492160"
  },
  {
    "text": "great first question so when when we're talking about um moving from an API Gateway to a",
    "start": "2492160",
    "end": "2497740"
  },
  {
    "text": "service mesh if you're in more of a something where the network isn't as predominant",
    "start": "2497740",
    "end": "2504460"
  },
  {
    "text": "um when do you start you got more of a like modular monolith when do you start really thinking uh service mesh",
    "start": "2504460",
    "end": "2511960"
  },
  {
    "text": "um is a good solution to start solving some of your problems at what point is like in a modular monolith do you is it",
    "start": "2511960",
    "end": "2518740"
  },
  {
    "text": "a good idea to begin implementing a service mesh yeah absolutely um",
    "start": "2518740",
    "end": "2524020"
  },
  {
    "text": "I mean I do like a service mesh I won't lie but I I would say there's no reason not to do that from the start I mean",
    "start": "2524020",
    "end": "2530920"
  },
  {
    "text": "even if you have in in the worst case where you have just the one monolith right it still needs",
    "start": "2530920",
    "end": "2537099"
  },
  {
    "text": "that that Ingress piece that in and out of the network to the internet which is probably what a more traditional API",
    "start": "2537099",
    "end": "2542800"
  },
  {
    "text": "Gateway or load balancer is doing a service mesh will bring um an Ingress layer of its own that can",
    "start": "2542800",
    "end": "2548800"
  },
  {
    "text": "do you know a lot of those features like I say maybe not everything if you've if you're subscribed to an expensive API",
    "start": "2548800",
    "end": "2554020"
  },
  {
    "text": "Gateway that's going to do like AI based bot detection and stuff but you know if it satisfies your needs and it can do a",
    "start": "2554020",
    "end": "2560560"
  },
  {
    "text": "bunch of stuff and then as soon as you do start to split that monolith up you",
    "start": "2560560",
    "end": "2566320"
  },
  {
    "text": "you don't ever have to be in the position of writing any of that resiliency code or whatever or suffering",
    "start": "2566320",
    "end": "2571720"
  },
  {
    "text": "outages because of networking problems if you see what I mean you sort of sort of get it there proxating all of the",
    "start": "2571720",
    "end": "2577359"
  },
  {
    "text": "traffic in and out you can get a baseline you can see that it works it doesn't affect anything and then as soon",
    "start": "2577359",
    "end": "2583480"
  },
  {
    "text": "as you make that first split into you know to split one little satellite off Implement one new separate service",
    "start": "2583480",
    "end": "2589540"
  },
  {
    "text": "that you're already used to running this thing and operating it and you get the advantages straight away",
    "start": "2589540",
    "end": "2594880"
  },
  {
    "text": "yeah absolutely makes sense um one of the other common things we hear when you first start talking about",
    "start": "2594880",
    "end": "2600280"
  },
  {
    "text": "service measures particularly in that Journey from like module monolith into microservices is like the overhead cost",
    "start": "2600280",
    "end": "2606400"
  },
  {
    "text": "right like we're taking a bunch of those cross-cutting features like retries and",
    "start": "2606400",
    "end": "2612720"
  },
  {
    "text": "circuit breakers out of libraries and putting them into reverse proxies that",
    "start": "2612720",
    "end": "2618280"
  },
  {
    "text": "run in it that has that that overhead cost how do you answer people like when you say when they say I don't want to",
    "start": "2618280",
    "end": "2624640"
  },
  {
    "text": "pay the the overhead of having a reverse proxy at the at the Ingress each one of",
    "start": "2624640",
    "end": "2630579"
  },
  {
    "text": "my services sure um I mean it might not be for you you",
    "start": "2630579",
    "end": "2635740"
  },
  {
    "text": "know if you if you are high frequency trading or doing something else I I think it's going to depend on on your",
    "start": "2635740",
    "end": "2642640"
  },
  {
    "text": "requirements right and knowing them maybe if you haven't done it yet going through that exercise of of agreeing and",
    "start": "2642640",
    "end": "2649000"
  },
  {
    "text": "writing down you know your slas and your slos to to know because this might be an implicit thing and the people are just",
    "start": "2649000",
    "end": "2654760"
  },
  {
    "text": "sort of a bit scared so you know write it down why do you do you can you cope with a 500 millisecond response time do",
    "start": "2654760",
    "end": "2661000"
  },
  {
    "text": "you need 50 you know where are you at now how much budget is there left um you know I would say that that code",
    "start": "2661000",
    "end": "2667420"
  },
  {
    "text": "is is either happening anyway you know in a library um in which case there are going to be",
    "start": "2667420",
    "end": "2673000"
  },
  {
    "text": "the Cycles used within your process and you're just moving them out um or maybe it's not happening at all",
    "start": "2673000",
    "end": "2678520"
  },
  {
    "text": "right so things look fast but are you prepared to swap a few dollars of cloud compute cost for a better working",
    "start": "2678520",
    "end": "2684700"
  },
  {
    "text": "product um but but yes I mean having you know having that as a separate process",
    "start": "2684700",
    "end": "2690760"
  },
  {
    "text": "there's going to be a few more Cycles to use because it's got to do a bit of its own gatekeeping ideas they do use a fair",
    "start": "2690760",
    "end": "2695980"
  },
  {
    "text": "amount of ram typically as I say you know that's maybe a cost benefit thing they do have a theoretical throughput",
    "start": "2695980",
    "end": "2701680"
  },
  {
    "text": "limit but what I'd say is that's probably higher you know these proxies do one job and they do it well envoy's",
    "start": "2701680",
    "end": "2707440"
  },
  {
    "text": "written in C plus plus the linkidy ones written in Rust you know these are pretty high performance systems languages the chances of their cap on",
    "start": "2707440",
    "end": "2716440"
  },
  {
    "text": "throughput will be lower than than your application this may be written in Java or python or node is actually fairly low",
    "start": "2716440",
    "end": "2723819"
  },
  {
    "text": "again depends on your environment you know measure and test but it's a trade-off right I mean you're",
    "start": "2723819",
    "end": "2729280"
  },
  {
    "text": "you're taking you're focusing on the business locket logic and trading off um a little bit of performance that it's",
    "start": "2729280",
    "end": "2736540"
  },
  {
    "text": "all it's all about trade-offs you may be trading off that performance that you don't have to worry about dealing with",
    "start": "2736540",
    "end": "2741700"
  },
  {
    "text": "the circuit breakers the retries you can push that into the uh kind of different tier",
    "start": "2741700",
    "end": "2746920"
  },
  {
    "text": "um at least those are some of the things that I've heard in that space yeah absolutely I think you're training a few dollars for the for the convenience and",
    "start": "2746920",
    "end": "2752859"
  },
  {
    "text": "the features you're trading some milliseconds of latency for the same",
    "start": "2752859",
    "end": "2758079"
  },
  {
    "text": "thing but as I say if it's slowing you down a lot that's probably because you're introducing this stuff for the first time and it's probably well worth",
    "start": "2758079",
    "end": "2763720"
  },
  {
    "text": "it yeah the only time where it's not a trade-off or it's you know sort of straight up hindrance is probably that",
    "start": "2763720",
    "end": "2769780"
  },
  {
    "text": "cap that that cap on queries per second throughput but as I say like unless",
    "start": "2769780",
    "end": "2774880"
  },
  {
    "text": "you've got some some sort of well-optimized C plus plus you're writing like a trading system or",
    "start": "2774880",
    "end": "2779920"
  },
  {
    "text": "something then the chances are it's not your bottleneck and it won't be so there really isn't a trade-off there",
    "start": "2779920",
    "end": "2785440"
  },
  {
    "text": "and sidecars this is where you can you can Channel Liz rice the conversation that we had before and if you want to",
    "start": "2785440",
    "end": "2791500"
  },
  {
    "text": "hear more about this I think uh next week Liz rice will be talking as well by ebpf but if there is a sidecar or not",
    "start": "2791500",
    "end": "2798400"
  },
  {
    "text": "sidecar like we've been talking kind of like an istio kind of envoy side Mark sidecar model but there are interesting",
    "start": "2798400",
    "end": "2805240"
  },
  {
    "text": "things happening with outside cars to be able to implement service measures right any thoughts or comments there",
    "start": "2805240",
    "end": "2811000"
  },
  {
    "text": "no absolutely yeah no it's a good point that this is I guess the worst case you know the model we have now gets things",
    "start": "2811000",
    "end": "2817300"
  },
  {
    "text": "working this the service mesh folks have been using Envoy it is very good what it",
    "start": "2817300",
    "end": "2822400"
  },
  {
    "text": "does you know it already exists but it's it's a separate Unix process um so yeah I think things aren't bad at",
    "start": "2822400",
    "end": "2828819"
  },
  {
    "text": "a moment but with uh BPF moving things into the kernel there's this thing called the istio cni like if you already",
    "start": "2828819",
    "end": "2834520"
  },
  {
    "text": "deep into your into your kubernetes then the istio folks have written a cni",
    "start": "2834520",
    "end": "2839740"
  },
  {
    "text": "plug-in which actually provides you know the the interface into the your positive Network namespace so that you don't have",
    "start": "2839740",
    "end": "2846099"
  },
  {
    "text": "to use IP tables to um sort of forcefully intercept the traffic which means you save a hop into kernel space",
    "start": "2846099",
    "end": "2851800"
  },
  {
    "text": "and back so yeah basically technological advancement is happening in this space it's only getting better so you're",
    "start": "2851800",
    "end": "2857980"
  },
  {
    "text": "probably okay with the trade-offs now and if you're not you know watch the space go look at some of the more Advanced Technologies coming out of the",
    "start": "2857980",
    "end": "2864640"
  },
  {
    "text": "the fdio um VPP folks or psyllium or that kind of",
    "start": "2864640",
    "end": "2869980"
  },
  {
    "text": "stuff so yeah just very exciting um any thoughts on on serverless is are",
    "start": "2869980",
    "end": "2876460"
  },
  {
    "text": "these type of things all provided by the provider um are you you're there isn't really",
    "start": "2876460",
    "end": "2882579"
  },
  {
    "text": "like a service mesh that you can Implement is it just at the provider um what are your thoughts if some people",
    "start": "2882579",
    "end": "2888220"
  },
  {
    "text": "are in the serverless world yeah that's an interesting one um I'll confess I'm not completely okay",
    "start": "2888220",
    "end": "2895180"
  },
  {
    "text": "with serverless so I don't I don't know the details of sort of every provider uh yeah strapping if I think of a",
    "start": "2895180",
    "end": "2902380"
  },
  {
    "text": "serverless uh product like a uh a k-native surf or an open fans you know",
    "start": "2902380",
    "end": "2907720"
  },
  {
    "text": "something wrong as a workloading kubernetes then as far as kubernetes is concerned that's kind of opaque you know",
    "start": "2907720",
    "end": "2913180"
  },
  {
    "text": "and it may well be hosting a lot of different functions so if you deploy your service mesh in kubernetes then",
    "start": "2913180",
    "end": "2918520"
  },
  {
    "text": "you're going to get one sidecar that sits alongside you know that whole blob so it will do something but it's almost",
    "start": "2918520",
    "end": "2923619"
  },
  {
    "text": "like an Ingress component into that separate little world that may or may not be you know what you want you may be able to get some value out of it you'll",
    "start": "2923619",
    "end": "2930220"
  },
  {
    "text": "get the observability piece at least um I don't personally know of any serverless you know native and any",
    "start": "2930220",
    "end": "2937960"
  },
  {
    "text": "service meshes that it can extend into serverless and I don't know enough about serverless to know what these individual",
    "start": "2937960",
    "end": "2943900"
  },
  {
    "text": "platforms like a Lambda or an open fast offers natively I'm afraid outside of like key native for example they can run",
    "start": "2943900",
    "end": "2949900"
  },
  {
    "text": "on cluster yeah but what you'll get is I guess k-native is maybe it's a little world so",
    "start": "2949900",
    "end": "2955180"
  },
  {
    "text": "kubernetes will see one pod and it but that'll actually run lots of different functions right so a service mesh is",
    "start": "2955180",
    "end": "2961300"
  },
  {
    "text": "going to sort of apply to that to that whole pod so it's going to apply sort of equally to all of those",
    "start": "2961300",
    "end": "2967180"
  },
  {
    "text": "functions it doesn't have too much visibility all right inside we're at time if you want to keep the",
    "start": "2967180",
    "end": "2974440"
  },
  {
    "text": "conversation on we didn't really dive into cicd so if you want to ask some more questions on cicd and shift left",
    "start": "2974440",
    "end": "2980440"
  },
  {
    "text": "with Matt join us in the zoom room after this we will have Daniel Mangum talking about on off cluster uh managing on off",
    "start": "2980440",
    "end": "2988300"
  },
  {
    "text": "cluster resources um in the follow-on talk other than that we'll see you in the zoom room here in",
    "start": "2988300",
    "end": "2994780"
  },
  {
    "text": "just a few okay thanks very much everybody thanks",
    "start": "2994780",
    "end": "3000380"
  },
  {
    "text": "foreign [Music]",
    "start": "3001200",
    "end": "3009449"
  }
]