[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "good morning happy that you're here for my talk I called it opportunities and pitfalls of event-driven Autopia that's",
    "start": "4130",
    "end": "10549"
  },
  {
    "text": "probably a strange title here what what did motivate me to do this talk actually so what I saw over the last couple of",
    "start": "10549",
    "end": "18500"
  },
  {
    "start": "12000",
    "end": "366000"
  },
  {
    "text": "years and basically especially the last year is that we're more and more people more and more companies more and more of",
    "start": "18500",
    "end": "23989"
  },
  {
    "text": "our customers as well are picking up event-driven architectures it's actually it's not a new topic I mean there is a",
    "start": "23989",
    "end": "30290"
  },
  {
    "text": "book even called eventual architectures was it which is quite old but I really",
    "start": "30290",
    "end": "35450"
  },
  {
    "text": "see that adopted more and more there's one evidence where you can also see that so we are at Q Khan so you probably also",
    "start": "35450",
    "end": "41420"
  },
  {
    "text": "read info Q they did that architectural trends report for example and they're in",
    "start": "41420",
    "end": "47350"
  },
  {
    "text": "2018 so that's the craft from 2018 they had aventurine architectures for the",
    "start": "47350",
    "end": "53480"
  },
  {
    "text": "early adaptors and already in 2019 in q1 they moved that basically to the early",
    "start": "53480",
    "end": "59420"
  },
  {
    "text": "maturity so that's just one indication which for what I also see in the market they're eventing architectures are",
    "start": "59420",
    "end": "65899"
  },
  {
    "text": "picked up much more more and more nowadays and at the same time we're",
    "start": "65899",
    "end": "72080"
  },
  {
    "text": "basically seeing that they basically we don't have any yet a common understanding of what event driven",
    "start": "72080",
    "end": "78080"
  },
  {
    "text": "architecture basically means and this is this is a good blog post actually by Martin Fowler he also did a keynote on",
    "start": "78080",
    "end": "83690"
  },
  {
    "text": "that I think it wasn't to go to Chicago which is on YouTube so he can watch that as well and he said hey we also saw that",
    "start": "83690",
    "end": "91220"
  },
  {
    "text": "at thought works for example we discussed event-driven applications with a couple of people there and we",
    "start": "91220",
    "end": "96350"
  },
  {
    "text": "recognized we recognized that when people talk about events they actually mean something quite different so it's",
    "start": "96350",
    "end": "102799"
  },
  {
    "text": "really hard to talk about event room like in a bigger audience because everybody thinks of different things so",
    "start": "102799",
    "end": "107840"
  },
  {
    "text": "I think it makes very much sense to go over that and to understand a couple of the concepts and I structured that in a",
    "start": "107840",
    "end": "114290"
  },
  {
    "text": "way that I first I want to talk about what I called events on the inside so how can I use event trim to build better applications",
    "start": "114290",
    "end": "122420"
  },
  {
    "text": "or better services and I talked about a single service here not like a complete set of micro services one single service",
    "start": "122420",
    "end": "129019"
  },
  {
    "text": "how can I use events there in order to do things different and then when we when we start to understand that we can",
    "start": "129019",
    "end": "135139"
  },
  {
    "text": "also talk about hey can use events to communicate between services to collaborate between services",
    "start": "135139",
    "end": "141460"
  },
  {
    "text": "for example - yeah basically to communicate between them and I call that events on the outside that's actually",
    "start": "141460",
    "end": "147280"
  },
  {
    "text": "pretty much in sync or also I'm inspired by and you probably know Chris Richardson he wrote the micro-services",
    "start": "147280",
    "end": "152500"
  },
  {
    "text": "patterns book in in mening and he also talks about events on the inside and",
    "start": "152500",
    "end": "157900"
  },
  {
    "text": "outside I think that makes very much sense I actually and you probably spotted that if you read the slides here very",
    "start": "157900",
    "end": "164170"
  },
  {
    "text": "carefully that's topic one that's topic three so there's some method some topic missing here I added something which I",
    "start": "164170",
    "end": "171400"
  },
  {
    "text": "call events inside out and I want to want to go into that like later on I don't want everyone introduce that now",
    "start": "171400",
    "end": "176680"
  },
  {
    "text": "so that's basically the agenda what I want to go over today let's go",
    "start": "176680",
    "end": "182440"
  },
  {
    "text": "if we look at how can we leverage events on the inside of an application or a service I first want to have a look at",
    "start": "182440",
    "end": "189130"
  },
  {
    "text": "how we build applications over the last probably one or two decades right you",
    "start": "189130",
    "end": "194440"
  },
  {
    "text": "probably know this kind of architecture and by the way that's a hint that's throughout the whole slide deck so",
    "start": "194440",
    "end": "199840"
  },
  {
    "text": "whenever you see that appears here it means that's a traditional architecture that's probably not the best practice",
    "start": "199840",
    "end": "206440"
  },
  {
    "text": "architecture for you for the future it's not necessarily a venture at all it's what we did over the last years and",
    "start": "206440",
    "end": "212799"
  },
  {
    "text": "that's you probably know that and that's what tech Newark once referred to as the BBC architecture box era Box arrow",
    "start": "212799",
    "end": "219850"
  },
  {
    "text": "cylinder that's all diagrams you ever need right we can express every every",
    "start": "219850",
    "end": "225790"
  },
  {
    "text": "architecture by that but you probably know that right we build an application and we use a relational database",
    "start": "225790",
    "end": "231989"
  },
  {
    "text": "underneath there's a great thing about that architecture and that's very often",
    "start": "231989",
    "end": "237070"
  },
  {
    "text": "forgotten when we now discuss that it's very often forgotten the great thing about that architectures there's a",
    "start": "237070",
    "end": "242380"
  },
  {
    "text": "relational database management system that's really great it gives you a lot of features we shouldn't forget about",
    "start": "242380",
    "end": "247390"
  },
  {
    "text": "that it gives you asset transactions you probably know asset like atomic and consistent isolated durable and that's",
    "start": "247390",
    "end": "254500"
  },
  {
    "text": "awesome you can build awesome applications by that and really the database does a lot of things for you",
    "start": "254500",
    "end": "259989"
  },
  {
    "text": "which are pretty hard to do like really I'm care about consistency for example and these kind of things so that's great",
    "start": "259989",
    "end": "266830"
  },
  {
    "text": "so whenever it's possible to use a really database I think it's still the best",
    "start": "266830",
    "end": "272109"
  },
  {
    "text": "option to do but the problem about that architecture as the database the",
    "start": "272109",
    "end": "278469"
  },
  {
    "text": "database is not really what we nowadays very often called web scale or internet scale so if you're you're an Amazon or",
    "start": "278469",
    "end": "285819"
  },
  {
    "text": "probably even a much smaller company but offer your services will write it probably doesn't deliver the scalability",
    "start": "285819",
    "end": "292989"
  },
  {
    "text": "you need especially resiliency is very important so you can either whatever go",
    "start": "292989",
    "end": "298599"
  },
  {
    "text": "for an Oracle GoldenGate or my sequel has a couple of clustering options that",
    "start": "298599",
    "end": "303639"
  },
  {
    "text": "are not easy to set up that are not easy to operate so that's already hard to do and then if you add some geographically",
    "start": "303639",
    "end": "310719"
  },
  {
    "text": "distributed things to that it gets really hard ok we have a couple of",
    "start": "310719",
    "end": "315939"
  },
  {
    "text": "customers doing that replicating between Europe and the US and that it's so much latency that add so much problems that",
    "start": "315939",
    "end": "322839"
  },
  {
    "text": "this is probably not the best way to use a relational database so that's a limit basically of the relational database",
    "start": "322839",
    "end": "328509"
  },
  {
    "text": "here if you don't hit the limit go over the relational database I'm I'm a I'm a",
    "start": "328509",
    "end": "333519"
  },
  {
    "text": "metaphor person on a picture person I remember things better if I have a picture for that and I was in the mood",
    "start": "333519",
    "end": "339610"
  },
  {
    "text": "of making bad animations actually for that slide so I basically used to Bernie",
    "start": "339610",
    "end": "345399"
  },
  {
    "text": "this as kind of that's the cloud native thing at the moment and you can imagine it like that the relational database it",
    "start": "345399",
    "end": "351729"
  },
  {
    "text": "doesn't fit in Cuban either so you can see that by the shape right it doesn't it doesn't fit so that's the thing you",
    "start": "351729",
    "end": "360610"
  },
  {
    "text": "can probably remember right so it's not really the cloning of the scalability architecture right if you look at that",
    "start": "360610",
    "end": "367869"
  },
  {
    "start": "366000",
    "end": "725000"
  },
  {
    "text": "more seriously you probably come across patterned I'm a big pet home fan and he worked at Amazon Salesforce Microsoft a",
    "start": "367869",
    "end": "374079"
  },
  {
    "text": "couple of the big companies and he had a talk quite a while back actually where he said immutability changes everything",
    "start": "374079",
    "end": "379479"
  },
  {
    "text": "and we have to think about immutability in order to build these resilient and scalable applications and what does that",
    "start": "379479",
    "end": "386499"
  },
  {
    "text": "mean and if you look at an example and that's a very common example actually so let's assume you build that BBC",
    "start": "386499",
    "end": "394059"
  },
  {
    "text": "architecture and you build an accounting application or a bank account application or something that use the database you have a table where say hey",
    "start": "394059",
    "end": "400389"
  },
  {
    "text": "this account has this balance at the and that's what what I called persistent states so you persist the current state",
    "start": "400389",
    "end": "406779"
  },
  {
    "text": "if you withdraw money you do an update on that stage right that's what everybody knows here why doesn't it",
    "start": "406779",
    "end": "412689"
  },
  {
    "text": "scale so bad yeah I mean if you're now replicating the database for example you have one in the US what in Europe you",
    "start": "412689",
    "end": "418899"
  },
  {
    "text": "have to make sure they're in sync right and if they're not in sync and you doing update on the balance in Europe and an",
    "start": "418899",
    "end": "425259"
  },
  {
    "text": "update on the balance in the US you have a conflict which is hard to to resolve because you update it to one amount here",
    "start": "425259",
    "end": "431799"
  },
  {
    "text": "to another amount here which one wins that's really hard to answer so they're couple of these reasons why this doesn't",
    "start": "431799",
    "end": "437319"
  },
  {
    "text": "really scale so what's the alternative the alternative is to persist the change you want to make not the the latest",
    "start": "437319",
    "end": "443769"
  },
  {
    "text": "state but the change you want to make and that's very often known as these append-only locks or a Penta locks",
    "start": "443769",
    "end": "449559"
  },
  {
    "text": "basically our event locks and that works like I just have a couple of these",
    "start": "449559",
    "end": "455579"
  },
  {
    "text": "immutable things like I created the bank account then I transferred money to it",
    "start": "455579",
    "end": "461979"
  },
  {
    "text": "and probably I withdraw money and so on and so forth so I don't update the current state I just write what we",
    "start": "461979",
    "end": "468789"
  },
  {
    "text": "nowadays normally name events which are immutable facts I can never change them",
    "start": "468789",
    "end": "475659"
  },
  {
    "text": "and that makes things much easier and then the the the basically the current balance I just derived by reading all",
    "start": "475659",
    "end": "483399"
  },
  {
    "text": "these kind of facts right I can always derive that and in this scenario it's much easier if I have a withdraw in",
    "start": "483399",
    "end": "489459"
  },
  {
    "text": "Europe and in in the US for example and they are not in synchrony I might make a wrong decision about the current balance",
    "start": "489459",
    "end": "495579"
  },
  {
    "text": "and allowed to withdraw too much money but I don't have a conflict in the updates I withdraw $100 here a hundred",
    "start": "495579",
    "end": "502539"
  },
  {
    "text": "years here I'm fine I know what to do right and that's much easier to scale",
    "start": "502539",
    "end": "507639"
  },
  {
    "text": "like this is how I can imagine it so this is like what's very often or what's",
    "start": "507639",
    "end": "513099"
  },
  {
    "text": "called event sourcing right that's event sourcing and that means I use the events",
    "start": "513099",
    "end": "519008"
  },
  {
    "text": "the change as my data store for the application and that works like like this if you if you imagine you have a",
    "start": "519009",
    "end": "526059"
  },
  {
    "text": "customer service and you have your events store by the way an event store technically it could be different things",
    "start": "526059",
    "end": "532179"
  },
  {
    "text": "so you could even implement that by by relational database but nowadays you also have like special applications for",
    "start": "532179",
    "end": "538920"
  },
  {
    "text": "that there are a couple of applications which are really focusing on being an event store so you just store these kind",
    "start": "538920",
    "end": "544050"
  },
  {
    "text": "of events and then you probably want to create a customer and now you have an execution loop inside your your own",
    "start": "544050",
    "end": "550830"
  },
  {
    "text": "service your application to execute that and that works like you first of all you",
    "start": "550830",
    "end": "555840"
  },
  {
    "text": "have to read back all the events from the past basically and build some internal state of the application",
    "start": "555840",
    "end": "562260"
  },
  {
    "text": "because you have to know that state four in this example you have to know if you already know the customer right or in",
    "start": "562260",
    "end": "568110"
  },
  {
    "text": "the withdrawal example you have to know the current balance of the account and this kind of thing so you have to",
    "start": "568110",
    "end": "573680"
  },
  {
    "text": "rebuild that state internally the big difference is I don't store that I can throw it away it's just for for the",
    "start": "573680",
    "end": "581370"
  },
  {
    "text": "purpose of basically validating invariants can I withdraw the money do I have enough balance that's the decision",
    "start": "581370",
    "end": "587640"
  },
  {
    "text": "I have to make on that so that's why I need the internal state I make the validations I decide okay I can create",
    "start": "587640",
    "end": "593400"
  },
  {
    "text": "that customer or I can withdraw the amount and then you write the event to the log as soon as you know hey that's",
    "start": "593400",
    "end": "599880"
  },
  {
    "text": "okay the event is getting a real fact it's written to the log and then you",
    "start": "599880",
    "end": "605520"
  },
  {
    "text": "might imply that to the outside world we're coming back to that in a second like that's an event on the outside probably right so that's a typical loop",
    "start": "605520",
    "end": "612600"
  },
  {
    "text": "and you go through an event sourcing there's one great thing about that which",
    "start": "612600",
    "end": "617790"
  },
  {
    "text": "is that you only I talked about asset transactions at the very beginning like consistency there's only one requirement",
    "start": "617790",
    "end": "624660"
  },
  {
    "text": "for an atomic operation here whenever you insert events in the event store",
    "start": "624660",
    "end": "629790"
  },
  {
    "text": "which is probably not only one but a couple of them this has to be atomic right so you you",
    "start": "629790",
    "end": "636270"
  },
  {
    "text": "you have to make sure you either write all of the events or none but you don't need more atomicity and i want to want",
    "start": "636270",
    "end": "643470"
  },
  {
    "text": "to make the counter example to you to get that across so that's again the prepare so that's a traditional",
    "start": "643470",
    "end": "650010"
  },
  {
    "text": "architecture right so I have the customer service and then I would go for in relational database for example I",
    "start": "650010",
    "end": "655470"
  },
  {
    "text": "create the customer and that means I insert the customer into the table and database right that's my business logic",
    "start": "655470",
    "end": "662160"
  },
  {
    "text": "and the next and and then I commit that that's an atomic operation again",
    "start": "662160",
    "end": "667920"
  },
  {
    "text": "right I commit that but let's assume the following let's assume whenever I created the customer the customer",
    "start": "667920",
    "end": "673320"
  },
  {
    "text": "service should also make sure an account is opened right so it won't probably want to want to call or what about want",
    "start": "673320",
    "end": "679860"
  },
  {
    "text": "to propagate something in order to make the account being okay that's a normally a remote communication",
    "start": "679860",
    "end": "686850"
  },
  {
    "text": "here if you're talking micro services for example or user be less it means that the customer is one box the account",
    "start": "686850",
    "end": "692070"
  },
  {
    "text": "is one box which lives somewhere else so that's a remote call if it's a remote call we don't have asset transactions",
    "start": "692070",
    "end": "699630"
  },
  {
    "text": "available we can't do a transaction which spawns that business logic in the",
    "start": "699630",
    "end": "705959"
  },
  {
    "text": "database and for example sending a message on a message queue right normally some people are thinking hey I",
    "start": "705959",
    "end": "713850"
  },
  {
    "text": "can do that there's two phase commit there's these distributed transactions if you're still believing that I I would",
    "start": "713850",
    "end": "719550"
  },
  {
    "text": "recommend you read that paper I also it's a very good paper life beyond distributed transactions from pet health",
    "start": "719550",
    "end": "725160"
  },
  {
    "text": "and I just use his own quote grown-ups don't use distributed transactions it's",
    "start": "725160",
    "end": "730940"
  },
  {
    "text": "the summary is basically it doesn't scale so it doesn't scale again and the",
    "start": "730940",
    "end": "736440"
  },
  {
    "text": "second thing is it's too complex it doesn't really work nobody understands it so don't use these distributed",
    "start": "736440",
    "end": "741930"
  },
  {
    "text": "transactions you don't have them assume you don't have them so in this scenario where you say hey but I want to have it",
    "start": "741930",
    "end": "748890"
  },
  {
    "text": "like atomic I want to want to create the customer in my database and open the account either both or none right what",
    "start": "748890",
    "end": "756120"
  },
  {
    "text": "can I do I mean you have to decide for an ordering of the commits so either you commit that first and then it might",
    "start": "756120",
    "end": "762329"
  },
  {
    "text": "happen that the application crashes you never open the account or you open the account first and you never commit to",
    "start": "762329",
    "end": "768120"
  },
  {
    "text": "the database that's immersed and you have an account without customer so that's bad what can you do that very",
    "start": "768120",
    "end": "773399"
  },
  {
    "text": "often referred to as the I'm so called outbox pattern what people start doing is they write what very often is called",
    "start": "773399",
    "end": "780660"
  },
  {
    "text": "a job so they write something in the database and say hey when I create that the customer I still have to create an",
    "start": "780660",
    "end": "787529"
  },
  {
    "text": "account that's a job it's not yet done but I write it to the same database write an a separate table but the same",
    "start": "787529",
    "end": "794610"
  },
  {
    "text": "database and they I execute that later on and that makes it possible that I",
    "start": "794610",
    "end": "800579"
  },
  {
    "text": "that have that job creation and the real business logic in one transaction and",
    "start": "800579",
    "end": "806190"
  },
  {
    "text": "now it's kind of atomic because I make sure I do both even if it's like eventual consistency that I execute the",
    "start": "806190",
    "end": "814350"
  },
  {
    "text": "job later on so there might be a delay like milliseconds seconds probably minutes that depends on the application",
    "start": "814350",
    "end": "819510"
  },
  {
    "text": "but I make sure both will happen right so that's a very competitor actually see",
    "start": "819510",
    "end": "824610"
  },
  {
    "text": "that applied relatively often there are a couple of ways of implementing that actually that's not a focus for me today",
    "start": "824610",
    "end": "830700"
  },
  {
    "text": "but I'm just for the reference so either you write your own scheduler I see that",
    "start": "830700",
    "end": "835890"
  },
  {
    "text": "applied very often so you write a scheduler which just regularly checks the top table and then executes these",
    "start": "835890",
    "end": "841590"
  },
  {
    "text": "kind of jobs I saw more often than I would have expected reading database transaction",
    "start": "841590",
    "end": "848010"
  },
  {
    "text": "locks so if you know that logo that's DBZ oh that's a I think a red hat no I'm not immature",
    "start": "848010",
    "end": "853410"
  },
  {
    "text": "that's a framework for replicating databases across very often across data",
    "start": "853410",
    "end": "859350"
  },
  {
    "text": "centers and what they do is they they also read the database transaction lock in order to replicate so people leverage",
    "start": "859350",
    "end": "866190"
  },
  {
    "text": "that in order to read the database transaction lock to see hey there was a job created we have to do something",
    "start": "866190",
    "end": "872820"
  },
  {
    "text": "right that's an opportunity possibility or you can leverage that's my domain that's my world where I work a lot you",
    "start": "872820",
    "end": "879540"
  },
  {
    "text": "can leverage a virtual engine in order to have a very easy workflow of doing that right so there are a couple of ways",
    "start": "879540",
    "end": "884820"
  },
  {
    "text": "of doing that so it's not impossible probably you even want to want to add",
    "start": "884820",
    "end": "891230"
  },
  {
    "text": "idempotency because I'm not talking about that today but I still believe if you do distributed systems idempotency",
    "start": "891230",
    "end": "897660"
  },
  {
    "text": "is the number one problem you should solve very well in order to save you a",
    "start": "897660",
    "end": "903180"
  },
  {
    "text": "lot of trouble later on and idempotency here means I probably get the create",
    "start": "903180",
    "end": "908220"
  },
  {
    "text": "customer message multiple times I get retries I get redelivery so I probably have that message multiple times and I",
    "start": "908220",
    "end": "913980"
  },
  {
    "text": "want to make sure I don't process it multiple times so very often that architecture you also capture that",
    "start": "913980",
    "end": "919530"
  },
  {
    "text": "request in a separate table if it's a message I'm not safe there in my own database I even saw that people are",
    "start": "919530",
    "end": "926310"
  },
  {
    "text": "splitting that up into multiple transactions to make sure that the request is captured because before it's",
    "start": "926310",
    "end": "932310"
  },
  {
    "text": "executed to make sure you don't have like like the message coming again in",
    "start": "932310",
    "end": "937829"
  },
  {
    "text": "milliseconds and being processed advice so what I try to get across as there's quite some complexity involved to do",
    "start": "937829",
    "end": "944639"
  },
  {
    "text": "that right and we're doing relatively simply simple things here that's a great",
    "start": "944639",
    "end": "950939"
  },
  {
    "text": "thing if you're doing these more events or system you don't basically you don't",
    "start": "950939",
    "end": "957329"
  },
  {
    "text": "have all these problems that outbox pattern is basically solved because you only have that one atomic operation",
    "start": "957329",
    "end": "963870"
  },
  {
    "text": "Ferries where is right the event and then you basically have the same loop again so it's kind of included in that",
    "start": "963870",
    "end": "969779"
  },
  {
    "text": "architecture so a couple of these problems you don't have to solve yourself so that's I think one of the advantages of these using event sourcing",
    "start": "969779",
    "end": "977699"
  },
  {
    "text": "underneath I want to give you a more more concrete example so so far it was",
    "start": "977699",
    "end": "982949"
  },
  {
    "start": "978000",
    "end": "1019000"
  },
  {
    "text": "kind of like the hello world example of event sourcing but I found it more",
    "start": "982949",
    "end": "988230"
  },
  {
    "text": "interesting to dive deeper to dive into like real systems and look how they behave when I I wanted to bring you what",
    "start": "988230",
    "end": "995519"
  },
  {
    "text": "I know best actually so yes it sounded quickly introduced me I'm just just a couple of words so my name's and Luca",
    "start": "995519",
    "end": "1001759"
  },
  {
    "text": "right I'm confront of Camus now what we're doing is an open source workflow engine right and yeah I always add that morning",
    "start": "1001759",
    "end": "1010790"
  },
  {
    "text": "know I'm a human being I have my own opinion keep that in mind right I'm a workflow guy so you probably need that",
    "start": "1010790",
    "end": "1016699"
  },
  {
    "text": "in order to judge what one day but what we have and that's actually interesting and I discussed that a lot recently we",
    "start": "1016699",
    "end": "1023629"
  },
  {
    "start": "1019000",
    "end": "1065000"
  },
  {
    "text": "have two different workflow engines as open source project the one is it's called communi and that's the one we",
    "start": "1023629",
    "end": "1029600"
  },
  {
    "text": "have her for four years and then we have a new project a relatively new product called see me now people are asking why",
    "start": "1029600",
    "end": "1036470"
  },
  {
    "text": "are you doing two different workflow engines which basically do the same thing they solve the same problem why",
    "start": "1036470",
    "end": "1042740"
  },
  {
    "text": "right why and the reason is simple so we have tamanna' which this persistent",
    "start": "1042740",
    "end": "1047959"
  },
  {
    "text": "state so it uses also it uses a relational database that's how you build",
    "start": "1047959",
    "end": "1053140"
  },
  {
    "text": "applications ten years ago right and we have CB where we changed that in order",
    "start": "1053140",
    "end": "1058400"
  },
  {
    "text": "to have persistent change in order to be more scalable in order to be more resilient and if you look at that",
    "start": "1058400",
    "end": "1064580"
  },
  {
    "text": "in particular then that works like this not sure if you're familiar too much",
    "start": "1064580",
    "end": "1070250"
  },
  {
    "start": "1065000",
    "end": "1146000"
  },
  {
    "text": "with workflow engines but it's a relatively simple concept so you can define these kind of flows where you say",
    "start": "1070250",
    "end": "1076010"
  },
  {
    "text": "hey this should happen whenever I kick off a new instance this should happen first whenever that's done this should",
    "start": "1076010",
    "end": "1081620"
  },
  {
    "text": "happen second for example and then I'm done you can make more complicated things but that's basic idea right activities in a",
    "start": "1081620",
    "end": "1087350"
  },
  {
    "text": "sequence if you have that in a relational database how it works like an is simplified slide it's like I want to",
    "start": "1087350",
    "end": "1094520"
  },
  {
    "text": "kick off a new workflow instance so I basically insert in the right database table right I now have a new workflow",
    "start": "1094520",
    "end": "1101690"
  },
  {
    "text": "instance which currently is in that activity and that's it right and then",
    "start": "1101690",
    "end": "1107179"
  },
  {
    "text": "somebody whatever can pick that up does whatever needs to be done to retrieve the payment and basically calls back the",
    "start": "1107179",
    "end": "1113929"
  },
  {
    "text": "verge line and says I did that it's done and what we basically do then is we",
    "start": "1113929",
    "end": "1119630"
  },
  {
    "text": "update the current state and say hey okay this workflow instance it's no longer in that in that activity it's now",
    "start": "1119630",
    "end": "1124880"
  },
  {
    "text": "on that activity and so on and so forth right actually to be to be honest we also write a couple of database tables",
    "start": "1124880",
    "end": "1131390"
  },
  {
    "text": "where we keep the changes for audit purposes but that's kind of an additional thing you can even configure",
    "start": "1131390",
    "end": "1137600"
  },
  {
    "text": "it to not write that to save disk space or to optimize performance for example so that's additional the basic thing is",
    "start": "1137600",
    "end": "1143870"
  },
  {
    "text": "we update things right how does it work if you if you go event source and that's",
    "start": "1143870",
    "end": "1149750"
  },
  {
    "start": "1146000",
    "end": "1209000"
  },
  {
    "text": "a bit different and actually if we want to kick off in your virtual instance it works like that we write a couple of",
    "start": "1149750",
    "end": "1155690"
  },
  {
    "text": "these events the first is like we want to have a workflow instance created right and then basically what the",
    "start": "1155690",
    "end": "1161630"
  },
  {
    "text": "virtual engine does a couple of steps in order to do that and also ok then I need the workflow instance to be created the",
    "start": "1161630",
    "end": "1167899"
  },
  {
    "text": "starred event or cured because we start here the sequence flow is taken so because we walk that way and an activity",
    "start": "1167899",
    "end": "1173750"
  },
  {
    "text": "is activated that's our terminology and a task is created for the retrieved payment right so I have these events",
    "start": "1173750",
    "end": "1180409"
  },
  {
    "text": "like written to the log next thing that happens is somebody says ok I can do that I can retrieve payment it locks the",
    "start": "1180409",
    "end": "1186710"
  },
  {
    "text": "task that's the details not that important and then it completes the task so again we're writing that to the log I",
    "start": "1186710",
    "end": "1193250"
  },
  {
    "text": "complete the task ok the task is completed the activity is completed we leave that the sequence flow is taking",
    "start": "1193250",
    "end": "1198770"
  },
  {
    "text": "and so on and so forth right I hope you get the idea right so we're just riding that why is",
    "start": "1198770",
    "end": "1204530"
  },
  {
    "text": "that cool let's go into the the handling loop here and if you look in the inside",
    "start": "1204530",
    "end": "1210290"
  },
  {
    "start": "1209000",
    "end": "1451000"
  },
  {
    "text": "of how we have built that engine it works like that so we have that workflow",
    "start": "1210290",
    "end": "1215900"
  },
  {
    "text": "engine we call it broker which is that's kind of what you nowadays call systems that they're in a distributed system so",
    "start": "1215900",
    "end": "1222320"
  },
  {
    "text": "it's a program we have that event lock and let's assume I want to complete the",
    "start": "1222320",
    "end": "1227450"
  },
  {
    "text": "task that activity right so I send in a command I go to I talk about commands later on in real am death I sent that",
    "start": "1227450",
    "end": "1234820"
  },
  {
    "text": "right to the broker the broker adds it to its lock all right the next thing",
    "start": "1234820",
    "end": "1241790"
  },
  {
    "text": "that happens is we store that in the event lock in our case that's simply",
    "start": "1241790",
    "end": "1248090"
  },
  {
    "text": "writing it to disk okay you're writing that to disk and we're replicating it so",
    "start": "1248090",
    "end": "1254000"
  },
  {
    "text": "what we what we have here we are having followers that's a tipping concept in a distributed system like if you use Kafka",
    "start": "1254000",
    "end": "1260600"
  },
  {
    "text": "or sue people or others what it basically does it it builds an old distributed system and know okay I have",
    "start": "1260600",
    "end": "1267080"
  },
  {
    "text": "to replicate that to a couple of peers in order to make sure it's there I don't lose data all right so it's replicated",
    "start": "1267080",
    "end": "1273740"
  },
  {
    "text": "as soon as it's replicated we can process it we don't process it before",
    "start": "1273740",
    "end": "1279560"
  },
  {
    "text": "it's replicated by the way so I'm talking about that in a second then we",
    "start": "1279560",
    "end": "1284810"
  },
  {
    "text": "process it and then we need the internal state in order to that we are using",
    "start": "1284810",
    "end": "1291140"
  },
  {
    "text": "rocks DB for that rocks TB is a framework from Netflix that's a key value store a very very efficient one a",
    "start": "1291140",
    "end": "1297110"
  },
  {
    "text": "very fast one which can also flush to disk so rebuilding that state internally",
    "start": "1297110",
    "end": "1303260"
  },
  {
    "text": "in Roxie be right and there's one important thing here and I'm talking",
    "start": "1303260",
    "end": "1308900"
  },
  {
    "text": "about very briefly but I think that's one of the core concepts here and then we have one single threat which executes",
    "start": "1308900",
    "end": "1316280"
  },
  {
    "text": "these kind of commands on the Roxie be why is that so important if it's a single threat we don't have contention",
    "start": "1316280",
    "end": "1323390"
  },
  {
    "text": "we don't need the isolation a relational database would give you give you because we don't have competing threats writing",
    "start": "1323390",
    "end": "1329690"
  },
  {
    "text": "to the same data it's one threat it's always one threat so we're we're having a clear sequence it's",
    "start": "1329690",
    "end": "1335320"
  },
  {
    "text": "clear what happens it's totally it's it's kind of easy to understand and it's kind of easy to build right so that's a",
    "start": "1335320",
    "end": "1342370"
  },
  {
    "text": "very important concept how is that scalable I come back to that in a second right a single threat doesn't sound that",
    "start": "1342370",
    "end": "1347950"
  },
  {
    "text": "scalable right okay come back to that in a second but that's important thing a writer so we process that on the",
    "start": "1347950",
    "end": "1353680"
  },
  {
    "text": "internal state and then that's also interesting as soon as we validated that",
    "start": "1353680",
    "end": "1359590"
  },
  {
    "text": "the command is executable that we can do it we send back a response to our client",
    "start": "1359590",
    "end": "1365950"
  },
  {
    "text": "say yep we completed the task if you're really looking at on a very detailed",
    "start": "1365950",
    "end": "1372130"
  },
  {
    "text": "level you might qualify that as kind of a lie it's not yet executed I mean we haven't yet done anything but we have",
    "start": "1372130",
    "end": "1380020"
  },
  {
    "text": "validated that we can execute it that's enough because now we know that we can",
    "start": "1380020",
    "end": "1385210"
  },
  {
    "text": "always execute it it's validated and it's written to the log it has a clear sequence it's replicated and we cannot lose the data it's totally clear what",
    "start": "1385210",
    "end": "1392140"
  },
  {
    "text": "happens so we are kind of already have it executed and that's why we are sending the response earlier on we save",
    "start": "1392140",
    "end": "1398860"
  },
  {
    "text": "latency we improve performance by doing that and only if we did when we did that",
    "start": "1398860",
    "end": "1403990"
  },
  {
    "text": "afterwards we write all the events which are cured because of that like what I had on the",
    "start": "1403990",
    "end": "1410020"
  },
  {
    "text": "slide earlier like the activity is completed that sequence flows saying next activity is entered and so on so",
    "start": "1410020",
    "end": "1415450"
  },
  {
    "text": "forth so there might be a lot of events actually and we do that afterwards right",
    "start": "1415450",
    "end": "1422260"
  },
  {
    "text": "and then we append the event and be replicated and the trick is that we can always we can replay that if something",
    "start": "1422260",
    "end": "1430510"
  },
  {
    "text": "happens while appending the events or replicating if the system crashes that's no problem we can always restart it from",
    "start": "1430510",
    "end": "1438340"
  },
  {
    "text": "that command and it will produce exactly the same result it's a single thread it has a clear ordering it will produce exactly the",
    "start": "1438340",
    "end": "1444520"
  },
  {
    "text": "same result so that's one of the tricks you can use in this kind of event source M systems and that's by the way one of",
    "start": "1444520",
    "end": "1452140"
  },
  {
    "text": "the things we do different like if you look at events or systems and you can",
    "start": "1452140",
    "end": "1457500"
  },
  {
    "text": "yeah basically if you search the internet for command sourcing that's an interesting exercise actually you find a",
    "start": "1457500",
    "end": "1464260"
  },
  {
    "text": "lot of threads where they discuss about if that's a good idea bad or evil in and that's basically one",
    "start": "1464260",
    "end": "1471180"
  },
  {
    "text": "of the things we do difference we explicitly store the command in order to have that faster response times right",
    "start": "1471180",
    "end": "1478730"
  },
  {
    "text": "but that's kind of very often disgusting that's a good idea for us it's a good idea so it's always like I like like",
    "start": "1478730",
    "end": "1484860"
  },
  {
    "text": "trade offs what else do we do different that's also interesting we we actually do persist the internal state I talked",
    "start": "1484860",
    "end": "1492780"
  },
  {
    "text": "about you don't need that you can always replay the events yeah that's true but replaying the events take time right so",
    "start": "1492780",
    "end": "1498570"
  },
  {
    "text": "to increase performance we persist the internal state so we can start up faster",
    "start": "1498570",
    "end": "1503790"
  },
  {
    "text": "mean replicate that to remote peers so they don't have to rebuild the internal",
    "start": "1503790",
    "end": "1509760"
  },
  {
    "text": "state because to our experiments so far that's faster than rebuilding it so these are optimizations and and that's",
    "start": "1509760",
    "end": "1518280"
  },
  {
    "text": "also interesting event sourcing by the idea if you read about it's always like",
    "start": "1518280",
    "end": "1523710"
  },
  {
    "text": "hey we have the events from the beginning of time like and we keep them for all the time so we can always replay",
    "start": "1523710",
    "end": "1529920"
  },
  {
    "text": "everything from the world and that obviously needs a lot of like memory you have to store a lot of things so then",
    "start": "1529920",
    "end": "1536850"
  },
  {
    "text": "kicks in something called LOC compaction hey at some point in time we delete all the events we don't need anymore",
    "start": "1536850",
    "end": "1543240"
  },
  {
    "text": "and that's the same that's the thing it's really hard to decide which events I don't need anymore if you're a",
    "start": "1543240",
    "end": "1549420"
  },
  {
    "text": "workflow engine because some workflows they run for months so you can't just delete old events there's probably still",
    "start": "1549420",
    "end": "1555990"
  },
  {
    "text": "very valid so for us that was a was a really hard challenge to to compact a",
    "start": "1555990",
    "end": "1561960"
  },
  {
    "text": "lot which is then you're you're going through a whole log and delete like for this process instance this word for",
    "start": "1561960",
    "end": "1567270"
  },
  {
    "text": "instance ended like a month ago so we can probably delete it but the events are here there and they're there and we try to be fast and efficient so we even",
    "start": "1567270",
    "end": "1574260"
  },
  {
    "text": "optimized for disk writing performance so that's not a good option then you ending up with a fragment lock so what",
    "start": "1574260",
    "end": "1580920"
  },
  {
    "text": "we do is as soon as a workflow instance as soon as a command is completely executed as soon as we don't need it",
    "start": "1580920",
    "end": "1587580"
  },
  {
    "text": "anymore we delete it from the lock so as you can see in there we're not",
    "start": "1587580",
    "end": "1593400"
  },
  {
    "text": "like purely event source I want it quickly quickly at that point",
    "start": "1593400",
    "end": "1600210"
  },
  {
    "start": "1596000",
    "end": "1708000"
  },
  {
    "text": "quickly talk about cup you probably know the cup theory right see some people",
    "start": "1600210",
    "end": "1605400"
  },
  {
    "text": "nodding are you still listening yeah okay awesome some people are nodding yeah right the cup theorem and I love that thought",
    "start": "1605400",
    "end": "1612720"
  },
  {
    "text": "experiment about the cap theorem that's how I can always remember it so the cap theorem says there's consistency there's",
    "start": "1612720",
    "end": "1620280"
  },
  {
    "text": "availability and partition you can only have two of them and basically you can decide for partitioning if you have a",
    "start": "1620280",
    "end": "1627059"
  },
  {
    "text": "distributed system you can always have partitions and the analogy the thought experiment is marriage so marriage is an",
    "start": "1627059",
    "end": "1635040"
  },
  {
    "text": "atomic operation right either both are married or none of them we do that in a very monolithic way we meet at",
    "start": "1635040",
    "end": "1642330"
  },
  {
    "text": "a church everybody is every every resource is blocked until we're done right so it's a very inefficient thing",
    "start": "1642330",
    "end": "1648540"
  },
  {
    "text": "to do that but we can make sure we're consistent right if you can support that",
    "start": "1648540",
    "end": "1654090"
  },
  {
    "text": "to a distributed system you want to be more efficient if you marry then we can",
    "start": "1654090",
    "end": "1659250"
  },
  {
    "text": "do it via the phone right remote and then you can think about it the priest asked like do you want to marry her I",
    "start": "1659250",
    "end": "1665760"
  },
  {
    "text": "say yes and then do you want to marry her and the line breaks you don't know",
    "start": "1665760",
    "end": "1670890"
  },
  {
    "text": "the answer right you don't know what happened I could be married I couldn't",
    "start": "1670890",
    "end": "1676080"
  },
  {
    "text": "die I don't know and then you have two options right the first option is like",
    "start": "1676080",
    "end": "1681179"
  },
  {
    "text": "okay I don't know and just in case I date this evening right I want to be available I mean otherwise I probably",
    "start": "1681179",
    "end": "1687240"
  },
  {
    "text": "I'm not married and then I missed a date that's that's kind of a waste so I I go for dating then I go for availability",
    "start": "1687240",
    "end": "1693780"
  },
  {
    "text": "right or I could say no I don't know so I have to wait until I know I don't date",
    "start": "1693780",
    "end": "1698820"
  },
  {
    "text": "no no I'm probably I'm married and that's consistency right and you have to make that choice you have to make that",
    "start": "1698820",
    "end": "1705450"
  },
  {
    "text": "choice very country consciously and for example in simi we definitely decided",
    "start": "1705450",
    "end": "1710760"
  },
  {
    "start": "1708000",
    "end": "1741000"
  },
  {
    "text": "for consistency so if we can't and these are detailed in this events or system like if we can't replicate",
    "start": "1710760",
    "end": "1716610"
  },
  {
    "text": "we're not executing all right so we go for consistency in the account",
    "start": "1716610",
    "end": "1722030"
  },
  {
    "text": "withdrawal example for the example you can decide if you have a partition if Europe and US is not connected you can",
    "start": "1722030",
    "end": "1728640"
  },
  {
    "text": "decide if you want to withdraw the money go for availability or if you want to wait go",
    "start": "1728640",
    "end": "1734370"
  },
  {
    "text": "for consistency and to not give the people too much money right so that's a",
    "start": "1734370",
    "end": "1739500"
  },
  {
    "text": "decision you always have to make in these kind of systems so how do we scale I haven't seen a single threat thing as",
    "start": "1739500",
    "end": "1744960"
  },
  {
    "start": "1741000",
    "end": "1804000"
  },
  {
    "text": "parrot it's not that scalable right we do partitioning so you have that thing of threat but then we have multiple",
    "start": "1744960",
    "end": "1751200"
  },
  {
    "text": "partitions each partition has a threat you can distribute them on one machine with multi threads or you can even",
    "start": "1751200",
    "end": "1756960"
  },
  {
    "text": "distribute them remotely and then for every single work for instance we are sure on which partition is executed and",
    "start": "1756960",
    "end": "1763020"
  },
  {
    "text": "then for every work for instance we have a single write this is how you scare these systems okay good that's events or",
    "start": "1763020",
    "end": "1770820"
  },
  {
    "text": "see if I have any vents or system the problem I have the next problem I have I can't ask the event lock questions like",
    "start": "1770820",
    "end": "1779930"
  },
  {
    "text": "which were flowing since do I have where do they curly wait are they taking too long and this kind of trend you can't",
    "start": "1779930",
    "end": "1786150"
  },
  {
    "text": "ask that an event lock so what do you need is to have to build in another like a separate read model a query model",
    "start": "1786150",
    "end": "1792300"
  },
  {
    "text": "which you can ask questions in our case that's elastic so we push out all the events to elastic with our own read",
    "start": "1792300",
    "end": "1797520"
  },
  {
    "text": "model and this we can ask whether like our tooling for example in order to to show their operations what's going on",
    "start": "1797520",
    "end": "1803280"
  },
  {
    "text": "and you have to think about that so it's a summary for events on the inside I think it's a good way of building like",
    "start": "1803280",
    "end": "1810300"
  },
  {
    "start": "1804000",
    "end": "1840000"
  },
  {
    "text": "really resilient and highly scalable systems that's awesome right but you have to think about a lot of things and",
    "start": "1810300",
    "end": "1816150"
  },
  {
    "text": "my experience so far is that there's ambitious I think the important point there's not that much industry",
    "start": "1816150",
    "end": "1822510"
  },
  {
    "text": "experience available so probably there's not that many people that understand it probably most of them are here to care",
    "start": "1822510",
    "end": "1828120"
  },
  {
    "text": "and if you go to other conference like typical developer conferences rarely nobody understands this right so it's",
    "start": "1828120",
    "end": "1834330"
  },
  {
    "text": "really hard and I would really think about if I want to go that way go there only if you really need it okay there is",
    "start": "1834330",
    "end": "1841950"
  },
  {
    "start": "1840000",
    "end": "1849000"
  },
  {
    "text": "something if you go on more on the outside I call that inside out so what's",
    "start": "1841950",
    "end": "1848400"
  },
  {
    "text": "that if you think of our system where we have that event store and we have a service right normally if you're",
    "start": "1848400",
    "end": "1855840"
  },
  {
    "start": "1849000",
    "end": "1963000"
  },
  {
    "text": "eventually very off you also use messaging I rarely see that you have a REST API for that but it's probably also",
    "start": "1855840",
    "end": "1862710"
  },
  {
    "text": "the case but let's assume you have messaging so one idea which is probably not that",
    "start": "1862710",
    "end": "1869220"
  },
  {
    "text": "surprising is to say hey I had that event store down there and the messaging down there why shouldn't I merge them -",
    "start": "1869220",
    "end": "1875160"
  },
  {
    "text": "that's probably a good idea and then you have like a shared event store where you",
    "start": "1875160",
    "end": "1880290"
  },
  {
    "text": "say hey you don't send me the event buy a message and I write it in my log write it in my lock yourself right it sounds a",
    "start": "1880290",
    "end": "1887760"
  },
  {
    "text": "bit weird but it's actually advertised relatively good so um if you look for Kafka for example and these like",
    "start": "1887760",
    "end": "1894240"
  },
  {
    "text": "messaging as a single source of cruise it's not explicitly written but it sounds like this is what you should",
    "start": "1894240",
    "end": "1900000"
  },
  {
    "text": "probably do I personally I'm not that convinced that this is a good idea so I always make that exhibition mark there",
    "start": "1900000",
    "end": "1906179"
  },
  {
    "text": "as a warning because now you you open up your internals so I'm personally I'm a big fan of having my local data of the",
    "start": "1906179",
    "end": "1914820"
  },
  {
    "text": "service which I can totally control and having a clear API right so I'm actually not a not a big fan of that so I",
    "start": "1914820",
    "end": "1921950"
  },
  {
    "text": "wouldn't go that direction what I what you can do but I I think it's important",
    "start": "1921950",
    "end": "1927690"
  },
  {
    "text": "to make the distinction here is you can use something like Kafka as kind of like",
    "start": "1927690",
    "end": "1932880"
  },
  {
    "text": "let's say the input topic the input queue so you can use it as a transport that's fine and it's still persistent by",
    "start": "1932880",
    "end": "1939419"
  },
  {
    "text": "the way that changes a lot of things it's not like in rabbitmq you consume a message it's gone you have consumed it",
    "start": "1939419",
    "end": "1945780"
  },
  {
    "text": "and calf gets persistent that changes a couple of things how you can work with that that would be a good a good place also",
    "start": "1945780",
    "end": "1953100"
  },
  {
    "text": "to talk about streaming like but I don't have the time actually so I don't do that today so if you're interested in",
    "start": "1953100",
    "end": "1958380"
  },
  {
    "text": "discussing about streaming or to take just that probably approached me later on awesome",
    "start": "1958380",
    "end": "1964679"
  },
  {
    "text": "so that's event inside out very short here I want to I want to dedicate the rest of the time basically to to the",
    "start": "1964679",
    "end": "1970799"
  },
  {
    "text": "outside so how can I use events to communicate between services and that's actually what probably much more of you",
    "start": "1970799",
    "end": "1976530"
  },
  {
    "text": "will do on a daily basis so again let's look let's say 20 years back we have a",
    "start": "1976530",
    "end": "1983010"
  },
  {
    "start": "1978000",
    "end": "2171000"
  },
  {
    "text": "serum system and we have other systems right whenever you change the address of the customer you have to inform all the",
    "start": "1983010",
    "end": "1989460"
  },
  {
    "text": "other systems right that was a big time of enterprise application integration tools or probably in ES base right how",
    "start": "1989460",
    "end": "1997110"
  },
  {
    "text": "do I make that efficient that cost or change the address in the billing system with the event notification you",
    "start": "1997110",
    "end": "2002929"
  },
  {
    "text": "turn that around what he basically do is I'm you say hey the customer the CRM",
    "start": "2002929",
    "end": "2008779"
  },
  {
    "text": "system that's a very general component in my whole architecture so that should produce events put it on some topic",
    "start": "2008779",
    "end": "2015169"
  },
  {
    "text": "don't know about who is interested in that and the billing system knows oh I should listen for address changes and",
    "start": "2015169",
    "end": "2020690"
  },
  {
    "text": "consumes it right the direction of dependencies now the billing system knows about address changes from the",
    "start": "2020690",
    "end": "2027590"
  },
  {
    "text": "customer and not the other way around like the customer service knows about billing and has to inform it because",
    "start": "2027590",
    "end": "2034100"
  },
  {
    "text": "then you end up with the customer CRM system knowing basically each and every system ok that's the idea of even",
    "start": "2034100",
    "end": "2040549"
  },
  {
    "text": "notification there's one interesting discussion which I don't want to go into",
    "start": "2040549",
    "end": "2047120"
  },
  {
    "text": "details today but just as a reference whenever you do that you will end up",
    "start": "2047120",
    "end": "2054618"
  },
  {
    "text": "with discussions what's the payload of my event right in this case a pure event",
    "start": "2054619",
    "end": "2059990"
  },
  {
    "text": "notification if you go for terminology would be the interest has changed now",
    "start": "2059990",
    "end": "2065358"
  },
  {
    "text": "it's your problem and that basically means I probably have to ask for ok what's the new address I want to have",
    "start": "2065359",
    "end": "2071450"
  },
  {
    "text": "that I need that right so much more often actually I see something which is",
    "start": "2071450",
    "end": "2076878"
  },
  {
    "text": "if you go for terminology it should be then carried State transfer right so I'm not only saying hey that has changed but",
    "start": "2076879",
    "end": "2083450"
  },
  {
    "text": "I add the data but that's a discussion in itself so that's an whole own talk what data should I include in there it",
    "start": "2083450",
    "end": "2090800"
  },
  {
    "text": "could be like this I could send a Delta that was the old address that was a new address all right I could send just the",
    "start": "2090800",
    "end": "2097220"
  },
  {
    "text": "any addresses change that's the new situation that's a new state there will be an option I can even discuss about",
    "start": "2097220",
    "end": "2103430"
  },
  {
    "text": "granularity is at rest change or do I send a customer change whenever something changes in the customer or",
    "start": "2103430",
    "end": "2110950"
  },
  {
    "text": "especially in dimension design if you go to these communities they normally discuss in a way that yeah interests",
    "start": "2110950",
    "end": "2117140"
  },
  {
    "text": "change that's kind of a technical thing why should I care about address change I care about the business requirement",
    "start": "2117140",
    "end": "2122900"
  },
  {
    "text": "behind that so the customer is moved right that's a different event yeah I",
    "start": "2122900",
    "end": "2129290"
  },
  {
    "text": "spare that discussion today it's it's it's very interesting and to be honest it's very hard to get that right because as soon as you have these",
    "start": "2129290",
    "end": "2135740"
  },
  {
    "text": "events defined and circulate it around it's pretty hard to change them right so",
    "start": "2135740",
    "end": "2141550"
  },
  {
    "text": "but I don't have to talk about that today so I'm it's it's complex it's",
    "start": "2141550",
    "end": "2147470"
  },
  {
    "text": "unease um the other one and I want to want to actually dive into that in more depth there also have much more experience so I can talk into more more",
    "start": "2147470",
    "end": "2154339"
  },
  {
    "text": "depth about that and that's the decision if you want to call somebody else right or if you want to be notified by",
    "start": "2154339",
    "end": "2161990"
  },
  {
    "text": "an event right and that's actually was a very complex decision and done very we",
    "start": "2161990",
    "end": "2168109"
  },
  {
    "text": "don't yet have a lot of understanding how to do that right and if I go in the details I make an example let's say you",
    "start": "2168109",
    "end": "2174290"
  },
  {
    "start": "2171000",
    "end": "2199000"
  },
  {
    "text": "want to change the address to go to a web interface say I I want to change my address and let's assume you get a",
    "start": "2174290",
    "end": "2179630"
  },
  {
    "text": "notification email which says hey your address has changed that correct please confirm that right good imaginary",
    "start": "2179630",
    "end": "2185540"
  },
  {
    "text": "grammar okay so if we do that if we implement that we might end up with two",
    "start": "2185540",
    "end": "2191300"
  },
  {
    "text": "different services the one for the concei RM the customer management one for sending the notifications now we",
    "start": "2191300",
    "end": "2197180"
  },
  {
    "text": "have two possibilities the first is hey please change the address so the",
    "start": "2197180",
    "end": "2202910"
  },
  {
    "text": "customer service it publishes an event like address change not yet it needs to",
    "start": "2202910",
    "end": "2208309"
  },
  {
    "text": "be confirmed so it's more like address change requested notification service know oh if there's an address change",
    "start": "2208309",
    "end": "2213920"
  },
  {
    "text": "requested I send out an email wait for the notification when it's notified I can basically say address change or",
    "start": "2213920",
    "end": "2220609"
  },
  {
    "text": "address changed or interests change confirm something like that okay in this case I have the direction of dependency",
    "start": "2220609",
    "end": "2226730"
  },
  {
    "text": "from notification to customer notification needs to know about customer right the alternative the other",
    "start": "2226730",
    "end": "2235309"
  },
  {
    "text": "way is the other way around the customer doesn't send an event but it knows hey",
    "start": "2235309",
    "end": "2241430"
  },
  {
    "text": "there's a notification service somewhere I can leverage that I send them a command to send an email I wait for the",
    "start": "2241430",
    "end": "2248690"
  },
  {
    "text": "response and then this probably sends back an event like hey the confirmation was approved and then I probably",
    "start": "2248690",
    "end": "2255470"
  },
  {
    "text": "generate the address change event right see the difference in this case I have the direction of dependency from",
    "start": "2255470",
    "end": "2262339"
  },
  {
    "text": "customer to notification and the thing is that's a case-by-case decision there's not a single rule where say go",
    "start": "2262339",
    "end": "2268010"
  },
  {
    "text": "always event to them and that's actually what I see a lot and the current projects they think of hey eventually",
    "start": "2268010",
    "end": "2273260"
  },
  {
    "text": "that's the future we want to be in the future so we go in venture but it's not that easy it should you should always",
    "start": "2273260",
    "end": "2278990"
  },
  {
    "text": "think about do I have any notifications or do I want to send commands so that's",
    "start": "2278990",
    "end": "2284720"
  },
  {
    "start": "2283000",
    "end": "2293000"
  },
  {
    "text": "quite a challenge there's one thing and that's it's basically only about terminology but I think it's really",
    "start": "2284720",
    "end": "2290240"
  },
  {
    "text": "important so if you look bad what makes that even more important is that people",
    "start": "2290240",
    "end": "2296030"
  },
  {
    "start": "2293000",
    "end": "2329000"
  },
  {
    "text": "mix it up very often with for example with communication protocols they think if I command somebody like change the",
    "start": "2296030",
    "end": "2303200"
  },
  {
    "text": "address that's rest or PC I want to do that I want to be like event driven but",
    "start": "2303200",
    "end": "2308930"
  },
  {
    "text": "that's not sure it both can be messaging can can put a command in a message send it over no problem right it can be rest",
    "start": "2308930",
    "end": "2316430"
  },
  {
    "text": "even if it's eventually like rest feeds for example as an example to be eventual with",
    "start": "2316430",
    "end": "2321680"
  },
  {
    "text": "technology so it's totally independent of the question of what kind of transport I want to use right and",
    "start": "2321680",
    "end": "2329319"
  },
  {
    "start": "2329000",
    "end": "2346000"
  },
  {
    "text": "especially nowadays you have a lot of lot of technical possibilities to be event-driven for example it might be",
    "start": "2329319",
    "end": "2335990"
  },
  {
    "text": "Kafka that's what everybody thinking or event when I use cafe but it might also be a topic of rabbit it might be rest",
    "start": "2335990",
    "end": "2341690"
  },
  {
    "text": "feed it might be web horse web poops is eventually especially if you look into the whole server less or or cloud",
    "start": "2341690",
    "end": "2348500"
  },
  {
    "start": "2346000",
    "end": "2363000"
  },
  {
    "text": "environments they have a lot of ways of being eventually all right basically everything is event room there that's by",
    "start": "2348500",
    "end": "2354290"
  },
  {
    "text": "the way one of the reasons why I think it's what will get more more important over the next year's all right so that's",
    "start": "2354290",
    "end": "2359780"
  },
  {
    "text": "all event written it's not only something like after but the problem then is like if we have that event and",
    "start": "2359780",
    "end": "2368390"
  },
  {
    "start": "2363000",
    "end": "2389000"
  },
  {
    "text": "the event is always affect something that already happened in the past immutable we have the commands the",
    "start": "2368390",
    "end": "2374720"
  },
  {
    "text": "command is an intent I wanted somebody else to do something some people then discussed yeah but that I want somebody",
    "start": "2374720",
    "end": "2381290"
  },
  {
    "text": "to do something is already like effect like an event I want but that's kind of",
    "start": "2381290",
    "end": "2386900"
  },
  {
    "text": "a weird discussion sometimes but I have commands and sometimes I want to know someone something from somebody else so",
    "start": "2386900",
    "end": "2392900"
  },
  {
    "text": "I have queries and that's actually very much agreed on even if you read through C or C whereas communities and these campaigns",
    "start": "2392900",
    "end": "2399320"
  },
  {
    "text": "we have event command and cruise but that makes sense it's evenly in the enterprise integration patterns book I",
    "start": "2399320",
    "end": "2405230"
  },
  {
    "text": "think it talks about events commands and queries so that's the thing but the problem now is like a couple of years",
    "start": "2405230",
    "end": "2411410"
  },
  {
    "text": "back normally that was called a message right because we have messaging systems sometimes nowadays if you use CAFTA they",
    "start": "2411410",
    "end": "2418430"
  },
  {
    "text": "talk about record okay can live with record but a lot of people refer to that like to let's say the common class of",
    "start": "2418430",
    "end": "2424850"
  },
  {
    "text": "that to be an event and that's actually a clash we currently have and in a lot",
    "start": "2424850",
    "end": "2430010"
  },
  {
    "text": "of discussions is that people are when they say event they either mean the the",
    "start": "2430010",
    "end": "2435350"
  },
  {
    "text": "content the event effect or they mean like I'm sending a message and that can",
    "start": "2435350",
    "end": "2440990"
  },
  {
    "text": "lead to very weird discussions so that's why I'm I'm really putting a lot of emphasis on that it's only terminology",
    "start": "2440990",
    "end": "2447170"
  },
  {
    "text": "but I think it's important so personally I try to really talk about messages or records in CV for example recorded",
    "start": "2447170",
    "end": "2453680"
  },
  {
    "text": "record as well not event right because that's clash so then you have events commands and",
    "start": "2453680",
    "end": "2459080"
  },
  {
    "start": "2459000",
    "end": "2506000"
  },
  {
    "text": "queries what I see a lot as a result of that or what I call commands in disguise",
    "start": "2459080",
    "end": "2464870"
  },
  {
    "text": "so hey the customer needs to be send a message to confirm their trust change hint hint that's kind of that's a",
    "start": "2464870",
    "end": "2471950"
  },
  {
    "text": "command I want somebody else to do something if that helps you in order to get your architecture through might be",
    "start": "2471950",
    "end": "2478580"
  },
  {
    "text": "okay to do it but one thing which is very important form an architecture point of view is that the alternative",
    "start": "2478580",
    "end": "2485630"
  },
  {
    "text": "like send a message normally uses the the terminology the wording of the",
    "start": "2485630",
    "end": "2491510"
  },
  {
    "text": "recipient so the service which provides that service which is more natural which",
    "start": "2491510",
    "end": "2496580"
  },
  {
    "text": "normally is much more stable API versus the command in disguise uses the words",
    "start": "2496580",
    "end": "2502040"
  },
  {
    "text": "of the sender who wants to do something which is normally not that stable right okay let's do a couple of examples to",
    "start": "2502040",
    "end": "2509140"
  },
  {
    "start": "2506000",
    "end": "2574000"
  },
  {
    "text": "make that more concrete so let's assume you have a payment service then for me",
    "start": "2509140",
    "end": "2514880"
  },
  {
    "text": "it's very natural that other services who want to retrieve payments sends a command because otherwise the payment",
    "start": "2514880",
    "end": "2520070"
  },
  {
    "text": "service needs to know all the services which probably need a payment let us make a lot of sense right so in this",
    "start": "2520070",
    "end": "2526040"
  },
  {
    "text": "case I want to have it in this direction let's assume yeah they are tress change we already",
    "start": "2526040",
    "end": "2532099"
  },
  {
    "text": "talked about that for me that's a very good good example where I want to have it in this direction because the",
    "start": "2532099",
    "end": "2537260"
  },
  {
    "text": "customer service shouldn't know about all the clients which are interested in interest rates if you go for a",
    "start": "2537260",
    "end": "2542630"
  },
  {
    "text": "notification service which probably does all the notifications for an order fulfillment it could be completely event",
    "start": "2542630",
    "end": "2549049"
  },
  {
    "text": "trim because it knows about what stages the order could be and in order to send the right notification so that",
    "start": "2549049",
    "end": "2554390"
  },
  {
    "text": "eventually makes a lot of sense for me but it could be different if you have a general notification service which sends",
    "start": "2554390",
    "end": "2560420"
  },
  {
    "text": "out notifications for everything in your company that's very weird that this should know about orders then you have",
    "start": "2560420",
    "end": "2565940"
  },
  {
    "text": "to send a command so it's really a case case by the decision so that's just a couple of examples to get you into the",
    "start": "2565940",
    "end": "2573109"
  },
  {
    "text": "thinking when I discussed the talk with a Suzanna when I prepared it actually she had a good example as well I like",
    "start": "2573109",
    "end": "2578900"
  },
  {
    "start": "2574000",
    "end": "2639000"
  },
  {
    "text": "that so they had a kind of a document management system that was the context and they used EDD and they had a couple",
    "start": "2578900",
    "end": "2585589"
  },
  {
    "text": "of contexts like for caring about the document for caring about a certain page and probably certain attachment and so",
    "start": "2585589",
    "end": "2592220"
  },
  {
    "text": "on and so forth and they had an authentication service and they started with an eventual approach where there",
    "start": "2592220",
    "end": "2598910"
  },
  {
    "text": "were a lot of events like whatever document has created a new pages added or whatever where you have to add",
    "start": "2598910",
    "end": "2604730"
  },
  {
    "text": "authentication information and if you do this kind of thing you end up with every change in each and every single bounded",
    "start": "2604730",
    "end": "2611839"
  },
  {
    "text": "context lead to normally a change in the authentication service that's what we call a distributed monolith you can't",
    "start": "2611839",
    "end": "2617420"
  },
  {
    "text": "independently change anything anymore that's a pretty bad situation to be it so in this case it's got pretty clear",
    "start": "2617420",
    "end": "2625730"
  },
  {
    "text": "and they refactored it to to have a clear stable API basically and the the",
    "start": "2625730",
    "end": "2632750"
  },
  {
    "text": "the service is down there at the boundary context basically call the authentication service to do something right okay enough of the examples next",
    "start": "2632750",
    "end": "2641299"
  },
  {
    "start": "2639000",
    "end": "2647000"
  },
  {
    "text": "challenge five minutes for that that's a challenge as well even changed one of my favorite topics let's assume you want to",
    "start": "2641299",
    "end": "2648589"
  },
  {
    "start": "2647000",
    "end": "2710000"
  },
  {
    "text": "create a customer and let's assume you do a couple of checks before you do that these are a couple of services you have",
    "start": "2648589",
    "end": "2653839"
  },
  {
    "text": "for that and an event bus it could work like that the registration says there's a registration requested that's an event",
    "start": "2653839",
    "end": "2660289"
  },
  {
    "text": "credit check check says okay then I have to check the customer oh I did that then a trust",
    "start": "2660289",
    "end": "2667030"
  },
  {
    "text": "check knows oh if the credit was checked I need to check or verify the address if that is done the customer can be created",
    "start": "2667030",
    "end": "2674020"
  },
  {
    "text": "and it's registered right that's an event chain that's actually how we can implement these kind of flows if you do",
    "start": "2674020",
    "end": "2680560"
  },
  {
    "text": "that it's pretty hard to get an overview how that works right so I personally",
    "start": "2680560",
    "end": "2686680"
  },
  {
    "text": "it's hard to understand the system it's yeah it's just during run time you see",
    "start": "2686680",
    "end": "2693640"
  },
  {
    "text": "what what's happening I I personally love the blog post from our apologies at the dangers there it's very easy to make",
    "start": "2693640",
    "end": "2699070"
  },
  {
    "text": "nicely decouple systems without realizing that you're losing sight of a larger scale flow and thus set yourself",
    "start": "2699070",
    "end": "2704890"
  },
  {
    "text": "up for traveling futures right so that's dangerous you have in this kind of search systems IceCube bad for a second",
    "start": "2704890",
    "end": "2714450"
  },
  {
    "text": "if we want to change it let's assume we get it somehow right we can work with",
    "start": "2715680",
    "end": "2720820"
  },
  {
    "text": "that but we want to change it and let's assume and that was a bite by the way that's a real example from a customer I",
    "start": "2720820",
    "end": "2727060"
  },
  {
    "text": "just custard with they wanted to add an additional check let's assume something like criminal register check if you want",
    "start": "2727060",
    "end": "2732910"
  },
  {
    "text": "to do that and you want to add it you have to change a couple of things in that system the first is you have to",
    "start": "2732910",
    "end": "2739359"
  },
  {
    "text": "remove that notification and now you have to listen for the address checked in the criminal track and then you have",
    "start": "2739359",
    "end": "2745720"
  },
  {
    "text": "to change the customer not longer to listen to the address check but to the criminal check right so you have to do",
    "start": "2745720",
    "end": "2751240"
  },
  {
    "text": "to have two changes which you have to coordinate not a good idea in a micro service environment not really",
    "start": "2751240",
    "end": "2756550"
  },
  {
    "text": "decoupling right now we could argue that this is a bad event flow it's not a good",
    "start": "2756550",
    "end": "2763270"
  },
  {
    "text": "event floor and I do agree probably should do it differently so let's try again from scratch you can't do that",
    "start": "2763270",
    "end": "2769660"
  },
  {
    "text": "that often in the real life products but let's do it for now registration requested both address",
    "start": "2769660",
    "end": "2775750"
  },
  {
    "text": "check and credit check listen to that so it's a parallel laws changing a bit but it gets easier now they produce their",
    "start": "2775750",
    "end": "2782890"
  },
  {
    "text": "results customer aggregates that does everything now we can just simply add the criminal check without changing",
    "start": "2782890",
    "end": "2788710"
  },
  {
    "text": "anything else that's good right but you still have to change the customer service - I'm basically incorporate the",
    "start": "2788710",
    "end": "2795400"
  },
  {
    "text": "result in order to so you still have two changes in your micro-services and I think that's my",
    "start": "2795400",
    "end": "2802250"
  },
  {
    "text": "point here I think that's unavoidable you have these two changes you want to have these two changes you want to",
    "start": "2802250",
    "end": "2808580"
  },
  {
    "text": "change your system right and the thing is how easy is it to do that and if you",
    "start": "2808580",
    "end": "2817100"
  },
  {
    "text": "now have requirements for the sequence of these kind of things what we want to do there that gets pretty hard to do",
    "start": "2817100",
    "end": "2823340"
  },
  {
    "text": "right so if you want to change something it's like in this game if you say hey we want to keep it stable don't worry we",
    "start": "2823340",
    "end": "2829280"
  },
  {
    "text": "don't have to touch it you just have to remove that stick down there that shouldn't be that hard right that's it",
    "start": "2829280",
    "end": "2836780"
  },
  {
    "text": "that's all we ask right and that's how it feels that what I see in a lot of systems currently yeah",
    "start": "2836780",
    "end": "2842630"
  },
  {
    "start": "2841000",
    "end": "2858000"
  },
  {
    "text": "I always use that picture like this is a choreography right that's these event ping-pong we just saw beautiful dance we",
    "start": "2842630",
    "end": "2848180"
  },
  {
    "text": "add a new micro-service and it's part of the dance it's not what I see in real systems right so right what's the",
    "start": "2848180",
    "end": "2858560"
  },
  {
    "start": "2858000",
    "end": "2959000"
  },
  {
    "text": "alternative and that's basically one of the last things I want to talk about its orchestration orchestration means that",
    "start": "2858560",
    "end": "2864860"
  },
  {
    "text": "in this case I want to have it registered now the credit check or address check doesn't listen to that we",
    "start": "2864860",
    "end": "2870890"
  },
  {
    "text": "have a separate service that might be merged with the customer service or I I did it as a separate service but it can",
    "start": "2870890",
    "end": "2877160"
  },
  {
    "text": "be the customer service that depends on different things right so this listens to it and then it sends out commands it",
    "start": "2877160",
    "end": "2883100"
  },
  {
    "text": "says hey the credit check please do that for me and wait for the response as soon as it did that hey address check",
    "start": "2883100",
    "end": "2889820"
  },
  {
    "text": "please do that for me wait for the response and then it says okay now we're done right and now you have that one",
    "start": "2889820",
    "end": "2895520"
  },
  {
    "text": "point where you can where you can change where you can remove the stick easily right and that's important to keep in",
    "start": "2895520",
    "end": "2901790"
  },
  {
    "text": "mind and that's very often connected to the to the thought that you need these kind of commands it's not everything is",
    "start": "2901790",
    "end": "2906830"
  },
  {
    "text": "eventually good if we look at the change",
    "start": "2906830",
    "end": "2912320"
  },
  {
    "text": "scenario that gets easier again like we have these interest checks we want to have the criminal check additionally",
    "start": "2912320",
    "end": "2918110"
  },
  {
    "text": "what do we have to change yeah we have to take the customer onboarding right because this one no no's okay we have to",
    "start": "2918110",
    "end": "2925670"
  },
  {
    "text": "have a traditional and if you compare that and I wrote an infoworld Ortega here which compares the changes the",
    "start": "2925670",
    "end": "2932330"
  },
  {
    "text": "coupling you have to make from my perspective it's exactly the same why you have to change the customer service",
    "start": "2932330",
    "end": "2939680"
  },
  {
    "text": "you have to change the criminal or at the criminal tech service right in both scenarios so why do I emphasize on that",
    "start": "2939680",
    "end": "2946070"
  },
  {
    "text": "because I think it's nonsense that purely choreographed systems are less or less couple than the others if I have a",
    "start": "2946070",
    "end": "2952550"
  },
  {
    "text": "communication between two things it's coupling it's not you can't avoid that you can decide about how to do that",
    "start": "2952550",
    "end": "2960020"
  },
  {
    "text": "yeah and in my world you can do orchestration workflow engine obviously but you don't have to let's get that",
    "start": "2960020",
    "end": "2966760"
  },
  {
    "text": "back so commands and events decide about the direction of the dependency that's a",
    "start": "2966760",
    "end": "2973369"
  },
  {
    "start": "2967000",
    "end": "2991000"
  },
  {
    "text": "very important thought actually and as soon as you have that and beware of event chains you avoid you lose sight",
    "start": "2973369",
    "end": "2979369"
  },
  {
    "text": "and you don't have less coupling that's that's that's simply not true right so you should balance choreography and",
    "start": "2979369",
    "end": "2985640"
  },
  {
    "text": "orchestration in a way that it makes sense for your detector it's not easy but it's very important right so that",
    "start": "2985640",
    "end": "2993470"
  },
  {
    "start": "2991000",
    "end": "3012000"
  },
  {
    "text": "was basically it I I walked through the events on the inside the event sourcing part I went through shared events tours",
    "start": "2993470",
    "end": "2999560"
  },
  {
    "text": "and events first come on so there was quite a lot of things actually I hope that got across at least a couple of the",
    "start": "2999560",
    "end": "3005290"
  },
  {
    "text": "ideas I'm if there are any questions I think we don't have time now so I'm still available here we have a booth",
    "start": "3005290",
    "end": "3010690"
  },
  {
    "text": "over there approached me there I do the summary if I will I put a lot",
    "start": "3010690",
    "end": "3016420"
  },
  {
    "start": "3012000",
    "end": "3035000"
  },
  {
    "text": "of effort in the end of animation actually right so it's not easy right the events on the inside it's even not",
    "start": "3016420",
    "end": "3022720"
  },
  {
    "text": "it's even harder but it's doable I mean you can't do that and it's probably",
    "start": "3022720",
    "end": "3027730"
  },
  {
    "text": "worth it if you if you need it right so I needed to do that slide sorry for that thank you very much",
    "start": "3027730",
    "end": "3033230"
  },
  {
    "text": "[Applause]",
    "start": "3033230",
    "end": "3036960"
  }
]