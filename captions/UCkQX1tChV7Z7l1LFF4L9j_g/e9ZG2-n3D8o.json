[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "14249"
  },
  {
    "text": "hello everyone my name is Alex and I'm here to talk to you today about why I think everyone can be a full stack",
    "start": "15420",
    "end": "21960"
  },
  {
    "text": "software engineer currently web apps are built often with large teams of Engineers with each",
    "start": "21960",
    "end": "28560"
  },
  {
    "text": "engineer just owning a little piece of the puzzle but I think that there's a better model for developing modern web apps one in",
    "start": "28560",
    "end": "35460"
  },
  {
    "text": "which individual engineers get to own their feature all the way from the top of the stack to the bottom I think when",
    "start": "35460",
    "end": "40860"
  },
  {
    "text": "you do it this way you can ship more product features faster and individual",
    "start": "40860",
    "end": "46079"
  },
  {
    "text": "Engineers are able to think deeper about the product experience so when I say modern web app what am I",
    "start": "46079",
    "end": "52440"
  },
  {
    "text": "talking about uh I'm talking about apps like these apps like Facebook Airbnb",
    "start": "52440",
    "end": "58260"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "slack Asana Reddit uh what are all of these have in common",
    "start": "58260",
    "end": "63899"
  },
  {
    "text": "first they're websites that have Dynamic content we're no longer serving static",
    "start": "63899",
    "end": "69119"
  },
  {
    "text": "HTML to everyone on the internet instead different information is served to each user that's pulled from some kind of",
    "start": "69119",
    "end": "75360"
  },
  {
    "text": "database so the app is personal and has user generated content the second thing is that these apps at",
    "start": "75360",
    "end": "82920"
  },
  {
    "text": "least when they're done well are reactive uh when a user loads the app they'll see the changes to the data",
    "start": "82920",
    "end": "89700"
  },
  {
    "text": "happening in real time you don't have to refresh the page but the most up-to-date content is pushed directly to the",
    "start": "89700",
    "end": "95579"
  },
  {
    "text": "browser and the last thing is that these apps are all interactive not only can you",
    "start": "95579",
    "end": "101460"
  },
  {
    "text": "view data but you can add your own content write posts write messages and",
    "start": "101460",
    "end": "107100"
  },
  {
    "text": "when you do that you see your own like edits update in real time um and so the sum total of all these",
    "start": "107100",
    "end": "113820"
  },
  {
    "text": "properties together can make these apps when they're done really well just feel native users are no longer feel like",
    "start": "113820",
    "end": "120060"
  },
  {
    "text": "they're on a website but they feel like they're having a rich native experience and this is what I want to talk about",
    "start": "120060",
    "end": "125520"
  },
  {
    "text": "today I want to talk about how you build apps like these and how we can design the infrastructure for these apps to",
    "start": "125520",
    "end": "131879"
  },
  {
    "text": "enable individual software Engineers to own the whole stack now but before we do that who am I uh hi",
    "start": "131879",
    "end": "139140"
  },
  {
    "start": "137000",
    "end": "137000"
  },
  {
    "text": "my name is Alex I'm a software engineer at convex convex is a reactive backend as a",
    "start": "139140",
    "end": "146400"
  },
  {
    "text": "service we're a lot we're helping people build their web apps on top of our serverless infrastructure so you don't have to",
    "start": "146400",
    "end": "153300"
  },
  {
    "text": "manage all the infrastructure yourself um so we've been doing a lot of thinking about what are the right ways to build",
    "start": "153300",
    "end": "159060"
  },
  {
    "text": "web apps today before this I worked at Asana",
    "start": "159060",
    "end": "164099"
  },
  {
    "text": "I was heading leading the client infrastructure team this was a team that was building out",
    "start": "164099",
    "end": "169620"
  },
  {
    "text": "the reactive web framework that Asana uses internally so I also did a lot of",
    "start": "169620",
    "end": "174660"
  },
  {
    "text": "thinking there about what are the right abstractions to give product engineers and how can we put product Engineers",
    "start": "174660",
    "end": "179879"
  },
  {
    "text": "into the pit of success um so all of this combined means I care deeply about how we build modern",
    "start": "179879",
    "end": "186840"
  },
  {
    "text": "reactive web apps and I want to tell you a bunch about my thinking today so first up I want to talk about the",
    "start": "186840",
    "end": "194340"
  },
  {
    "text": "architecture that most apps are using today what is happening behind the scenes in these large web apps and what",
    "start": "194340",
    "end": "202200"
  },
  {
    "text": "kind of problems do these architectures hit so let's start by talking through a you",
    "start": "202200",
    "end": "209040"
  },
  {
    "text": "know example web app what do we need if we want to get our app off the ground and serve to users",
    "start": "209040",
    "end": "214920"
  },
  {
    "start": "214000",
    "end": "214000"
  },
  {
    "text": "uh well we're going to need a couple things we're going to need to build a front end probably we'll build it in",
    "start": "214920",
    "end": "220260"
  },
  {
    "text": "react we'll write some you know react components and put together the UI that we really want to deliver to our users",
    "start": "220260",
    "end": "227879"
  },
  {
    "text": "um that front end is going to need to go and talk to some kind of back end we're going to need a way to run server-side",
    "start": "227879",
    "end": "233580"
  },
  {
    "text": "business logic and probably we're going to Define some endpoints or graphql",
    "start": "233580",
    "end": "238680"
  },
  {
    "text": "schema and graphql resolvers to load and like mutate data",
    "start": "238680",
    "end": "244560"
  },
  {
    "text": "the dotted line in this diagram represents the boundary between the client and the server so the front end",
    "start": "244560",
    "end": "250019"
  },
  {
    "text": "is going to make some requests at the back end and then on top of that we need some way to permanently store data so we're going",
    "start": "250019",
    "end": "256859"
  },
  {
    "text": "to need some type of database perhaps my SQL or mongodb and that's going to store data based on some schema for our app",
    "start": "256859",
    "end": "265160"
  },
  {
    "text": "and to start this is it many apps will you know sort of launch",
    "start": "265160",
    "end": "270900"
  },
  {
    "text": "with a three level architecture like this and get right off the ground running um",
    "start": "270900",
    "end": "276000"
  },
  {
    "text": "but once our app is wildly successful we're going to hit some limitations here",
    "start": "276000",
    "end": "281360"
  },
  {
    "text": "and I think one of the first limitations we're going to hit is that an individual back end might not be powerful enough to",
    "start": "281360",
    "end": "287940"
  },
  {
    "text": "serve all of our users we could have problems like the back end is going down because there's just too",
    "start": "287940",
    "end": "293820"
  },
  {
    "text": "many requests or every time we rewrite the code in the back end we have to swap it out for a new one and there's",
    "start": "293820",
    "end": "299759"
  },
  {
    "text": "downtime um so likely the first step as we're growing our application is that we're",
    "start": "299759",
    "end": "306180"
  },
  {
    "start": "302000",
    "end": "302000"
  },
  {
    "text": "going to need to expand the back end to no longer be a single service but instead we'll run multiple copies of the",
    "start": "306180",
    "end": "312120"
  },
  {
    "text": "back end and have a load balancer in front of them um this will give us some redundancy so",
    "start": "312120",
    "end": "317880"
  },
  {
    "text": "if one back end goes down we'll be able to handle that fine and it will also",
    "start": "317880",
    "end": "323100"
  },
  {
    "text": "help us because now when we redeploy code we can have our load balancer talk to the new back ends instead of the old",
    "start": "323100",
    "end": "329100"
  },
  {
    "text": "ones and sort of do seamless transitions and yeah Asana started out with an",
    "start": "329100",
    "end": "334919"
  },
  {
    "text": "architecture very much like this cool so are we done are we ready to",
    "start": "334919",
    "end": "341580"
  },
  {
    "text": "check off and just you know run our app and keep it in production like this uh I think not uh I think as our user base",
    "start": "341580",
    "end": "348720"
  },
  {
    "text": "grows we're not at the end of our scaling woes and I think the next part of our system",
    "start": "348720",
    "end": "353880"
  },
  {
    "text": "diagram that may have issues is the database here we're running a single database",
    "start": "353880",
    "end": "359639"
  },
  {
    "text": "which once again means that it can be a single point of failure uh you know one if our user base grows",
    "start": "359639",
    "end": "367680"
  },
  {
    "text": "enough we're no longer going to be able to handle our traffic in one database and if we don't have a database we don't have an app",
    "start": "367680",
    "end": "373680"
  },
  {
    "text": "um so I think the next step in our scaling is that we're going to want to Shard the database instead of running one big database",
    "start": "373680",
    "end": "379740"
  },
  {
    "start": "377000",
    "end": "377000"
  },
  {
    "text": "we're going to probably want to split our customers content into separate shards where different shards live on",
    "start": "379740",
    "end": "385199"
  },
  {
    "text": "different databases this will let us horizontally scale the database layer and grow to more numbers of users and it",
    "start": "385199",
    "end": "392160"
  },
  {
    "text": "also means that an outage on one database won't affect everybody also surprisingly Asana started out with",
    "start": "392160",
    "end": "399300"
  },
  {
    "text": "a single database and reached those limits and as anyone who's done charting knows",
    "start": "399300",
    "end": "405060"
  },
  {
    "text": "it's no easy task right when you're doing charting you're going to have to break up your work into that maybe",
    "start": "405060",
    "end": "411300"
  },
  {
    "text": "crossed multiple different parts of your data model into work of individual",
    "start": "411300",
    "end": "416880"
  },
  {
    "text": "transactions on databases so you're going to need to only be able to do a transaction on one database and",
    "start": "416880",
    "end": "423300"
  },
  {
    "text": "if you want to write dated multiple databases you're going to have to think through the consistency of it yourself",
    "start": "423300",
    "end": "428819"
  },
  {
    "text": "um but that's fine you know we're a big web app we have a big team we're going to have some people who have thought",
    "start": "428819",
    "end": "434039"
  },
  {
    "text": "hard and long about my SQL and the right way to Shard and they're going to split up our data into multiple databases",
    "start": "434039",
    "end": "440880"
  },
  {
    "text": "what's next you know our scaling was and our performance problems over",
    "start": "440880",
    "end": "446340"
  },
  {
    "text": "uh once again I think it just keeps getting more complicated so next up I",
    "start": "446340",
    "end": "451740"
  },
  {
    "start": "451000",
    "end": "451000"
  },
  {
    "text": "think we're going to need a way to improve performance beyond the database like for many apps loading all of your",
    "start": "451740",
    "end": "457020"
  },
  {
    "text": "data from a single database or a set of databases is fine but it's also increasingly popular to have a caching",
    "start": "457020",
    "end": "464340"
  },
  {
    "text": "tier as well so here we'll have some kind of cache nodes that are storing in memory a lot",
    "start": "464340",
    "end": "470520"
  },
  {
    "text": "of the data from the database these might be services like MySQL or redis",
    "start": "470520",
    "end": "475740"
  },
  {
    "text": "um and instead of the back end loading data straight from the database at least for some kinds of content it can go to",
    "start": "475740",
    "end": "481680"
  },
  {
    "text": "the cache first see if the data is in the cache and then follow up and go to the database",
    "start": "481680",
    "end": "488479"
  },
  {
    "text": "and if any of you have experience with caching you will know that I just brushed under the rug a tremendous",
    "start": "488880",
    "end": "494280"
  },
  {
    "text": "amount of complexity as soon as you add a caching tier now we're going to have to make sure that",
    "start": "494280",
    "end": "499979"
  },
  {
    "text": "the data in the cache actually matches the data in the database uh it is",
    "start": "499979",
    "end": "506220"
  },
  {
    "text": "extremely easy to end up with cash inconsistencies where some user you know",
    "start": "506220",
    "end": "511560"
  },
  {
    "text": "edits data in the cache but fails to write to the database or vice versa where they write to the database but",
    "start": "511560",
    "end": "517260"
  },
  {
    "text": "don't update the cache uh and these might seem like small problems right like okay the correct",
    "start": "517260",
    "end": "523020"
  },
  {
    "text": "data is still saved in the DB what's the issue but when the users are showing up on your site",
    "start": "523020",
    "end": "528180"
  },
  {
    "text": "what they're going to see is the information in the cache and so if it differs from the database they're",
    "start": "528180",
    "end": "534000"
  },
  {
    "text": "going to believe that their content was lost or corrupted um so",
    "start": "534000",
    "end": "539220"
  },
  {
    "text": "likely building out this infrastructure we're now going to need more Engineers with more expertise to make sure that",
    "start": "539220",
    "end": "545100"
  },
  {
    "text": "the caching layer and the database stay in sync um okay fine we did that we've built the",
    "start": "545100",
    "end": "551100"
  },
  {
    "text": "cache Alex are we done are we ready to launch our web app and scale up to the entire user base",
    "start": "551100",
    "end": "557959"
  },
  {
    "text": "it keeps getting worse so I think the next problem we may run into is actually a product one of I said we were building",
    "start": "558060",
    "end": "564899"
  },
  {
    "text": "these really interesting reactive interactive apps but the architecture diagram I've drawn here is really only",
    "start": "564899",
    "end": "571680"
  },
  {
    "text": "about loading data and writing it how are users going to see content when it changes",
    "start": "571680",
    "end": "577320"
  },
  {
    "start": "577000",
    "end": "577000"
  },
  {
    "text": "so we're going to need to make it reactive um so the standard way to make it reactive",
    "start": "577320",
    "end": "583680"
  },
  {
    "text": "would be to change our front end to no longer use HTTP to request its data but",
    "start": "583680",
    "end": "589680"
  },
  {
    "text": "instead have some long-lived websocket connection to the back end that's the double-ended Arrow",
    "start": "589680",
    "end": "595200"
  },
  {
    "text": "uh using a websocket means that we can still load data on the front end by",
    "start": "595200",
    "end": "600300"
  },
  {
    "text": "requesting it from our back end but also it'll keep a connection to the back end open so the back end can push data all",
    "start": "600300",
    "end": "607500"
  },
  {
    "text": "the way to the front end but I guess how is the back end going to know when to push what data this will",
    "start": "607500",
    "end": "615000"
  },
  {
    "text": "require yet another new piece of infrastructure a common choice is to use a pub sub",
    "start": "615000",
    "end": "620279"
  },
  {
    "text": "service and the idea behind this is that the back ends will be able to like publish",
    "start": "620279",
    "end": "627080"
  },
  {
    "text": "topics to the pub sub service whenever any whenever they edit any information",
    "start": "627080",
    "end": "632240"
  },
  {
    "text": "and they'll subscribe to the information that their clients currently care about and the pub sub service will sort of act",
    "start": "632240",
    "end": "639120"
  },
  {
    "text": "as a message broker letting backends know when information changes",
    "start": "639120",
    "end": "644579"
  },
  {
    "text": "um and yeah Asana also did exactly this Asana had an in-house Pub sub system",
    "start": "644579",
    "end": "650040"
  },
  {
    "text": "they built themselves and broke up the data model into these fine-grained Pub Subs topics and use those to like push",
    "start": "650040",
    "end": "657600"
  },
  {
    "text": "around information so that anytime you're viewing content in the app you would see see it change in real time",
    "start": "657600",
    "end": "664399"
  },
  {
    "text": "but once again there's a lot of complexity here there's a lot of complexity in getting",
    "start": "664399",
    "end": "670380"
  },
  {
    "text": "the correctness right of how do you correctly publish and write to the database at the same time you can't",
    "start": "670380",
    "end": "677660"
  },
  {
    "text": "there's complexity in making the front end be able to like understand the messages about changes to information",
    "start": "677660",
    "end": "684540"
  },
  {
    "text": "right we're going to need some way for the front end to have some local client store and store all this data and update",
    "start": "684540",
    "end": "691019"
  },
  {
    "text": "it as it changes um but okay you know we've already scaled up our team we're going to have",
    "start": "691019",
    "end": "696720"
  },
  {
    "text": "some set of people that are working just on reactivity in Pub sub uh",
    "start": "696720",
    "end": "701880"
  },
  {
    "text": "and yeah about now is when I run out of space in the screen but that doesn't mean that the complexity stops growing",
    "start": "701880",
    "end": "708300"
  },
  {
    "text": "I think in many modern web apps there's actually a lot more boxes in this diagram some other common choices are that",
    "start": "708300",
    "end": "715800"
  },
  {
    "text": "if your product someday needs to have full text search you know you want the ability for users to search for messages",
    "start": "715800",
    "end": "721940"
  },
  {
    "text": "by the text in them your existing database might not be able to handle that so you add in a whole",
    "start": "721940",
    "end": "728820"
  },
  {
    "text": "other database we can start running something like elasticsearch to fill those queries",
    "start": "728820",
    "end": "734100"
  },
  {
    "text": "you know so at some point we might want to be able to do things like send emails in the background if we want to have",
    "start": "734100",
    "end": "739980"
  },
  {
    "text": "background jobs we're going to need some sort of job queue where we can schedule jobs to happen and workers that actually",
    "start": "739980",
    "end": "745980"
  },
  {
    "text": "do the work uh we're probably as the site scales up going to need to have analytics people",
    "start": "745980",
    "end": "753000"
  },
  {
    "text": "are going to want to know what users are doing on the site how many users we have so we'll also need to add in a data",
    "start": "753000",
    "end": "758940"
  },
  {
    "text": "warehouse and it just keeps going and I think yeah basically as I've",
    "start": "758940",
    "end": "764639"
  },
  {
    "text": "described here this is the state of the art for modern web development you're sort of combining together a",
    "start": "764639",
    "end": "771120"
  },
  {
    "text": "bunch of different services and it's your responsibility to wire them all up in the right way and keep them",
    "start": "771120",
    "end": "776880"
  },
  {
    "text": "consistent and it works you know I think almost every logo I have written on my on the",
    "start": "776880",
    "end": "783720"
  },
  {
    "text": "first slide was built in this kind of way but there's also some downsides",
    "start": "783720",
    "end": "789720"
  },
  {
    "text": "and I think one of the big questions comes down to the people involved how many people are we going to need how",
    "start": "789720",
    "end": "796380"
  },
  {
    "start": "790000",
    "end": "790000"
  },
  {
    "text": "are they going to be divided up into teams and so for this sort of imaginary app",
    "start": "796380",
    "end": "803399"
  },
  {
    "text": "we're probably going to need a front-end team we're going to need some people who know how to write really good JavaScript and",
    "start": "803399",
    "end": "809880"
  },
  {
    "text": "typescript CSS and HTML because we're building a site for the web and there's a bunch of specific",
    "start": "809880",
    "end": "815399"
  },
  {
    "text": "technologies that this team is going to have to be experts in they're going to need to be understanding react graphql they're",
    "start": "815399",
    "end": "822720"
  },
  {
    "text": "going to need to know how browsers work and yeah be thinking through the UI on top of this",
    "start": "822720",
    "end": "829260"
  },
  {
    "text": "we're probably going to need a separate backend team these are people that are going to be writing our backend business logic and",
    "start": "829260",
    "end": "836459"
  },
  {
    "text": "probably we picked a back-end language like Java python or Ruby we're going to need to be doing SQL",
    "start": "836459",
    "end": "842760"
  },
  {
    "text": "queries from the back end in order to load our data and these Engineers are going to have to think really hard about",
    "start": "842760",
    "end": "847980"
  },
  {
    "text": "performance and security right so we have a front-end team a team",
    "start": "847980",
    "end": "854220"
  },
  {
    "text": "that writes the sort of back-end business logic but what about all the other boxes in this diagram",
    "start": "854220",
    "end": "860339"
  },
  {
    "text": "we're also going to need to have another team some sort of SRE DBA or",
    "start": "860339",
    "end": "867120"
  },
  {
    "text": "infrastructure team yeah this team would think a lot about scalability and reliability correctness and performance",
    "start": "867120",
    "end": "874019"
  },
  {
    "text": "and probably be doing a lot of writing configuration scripts SQL",
    "start": "874019",
    "end": "879860"
  },
  {
    "text": "to keep sort of the site running and everything correct and performant",
    "start": "879860",
    "end": "886399"
  },
  {
    "text": "okay this is a lot I had a diagram that filled the whole slides of the",
    "start": "886399",
    "end": "891420"
  },
  {
    "text": "architecture we have three different teams here and we know we need all of that before I've even told you what kind",
    "start": "891420",
    "end": "897720"
  },
  {
    "text": "of app we're actually building uh pretty wild",
    "start": "897720",
    "end": "902820"
  },
  {
    "text": "um but just to round this out let's think about what product development looks like in this kind of model",
    "start": "902820",
    "end": "909120"
  },
  {
    "text": "so yeah let's imagine now that we actually want to go and add a new feature to our",
    "start": "909120",
    "end": "915899"
  },
  {
    "text": "app given this architecture in these teams and sort of as a toy feature to talk",
    "start": "915899",
    "end": "922560"
  },
  {
    "start": "919000",
    "end": "919000"
  },
  {
    "text": "about adding let's imagine that we're building a chat app kind of like slack and we want to add channels to the app",
    "start": "922560",
    "end": "928620"
  },
  {
    "text": "for the first time so we already have a single Channel chat",
    "start": "928620",
    "end": "933660"
  },
  {
    "text": "app but now we want to go and add the ability for users to you know have custom channels send messages in those",
    "start": "933660",
    "end": "940320"
  },
  {
    "text": "channels see the full list of channels all that good stuff um",
    "start": "940320",
    "end": "946260"
  },
  {
    "text": "so what do we need to do to add channels all right well first we're going to need",
    "start": "946260",
    "end": "951540"
  },
  {
    "start": "949000",
    "end": "949000"
  },
  {
    "text": "to think at the bottom of the stack at the database layer we need some way to define a SQL schema",
    "start": "951540",
    "end": "957720"
  },
  {
    "text": "and Define what our data model is this is probably going to be a",
    "start": "957720",
    "end": "962820"
  },
  {
    "text": "conversation between the back end team who is thinking about what kind of endpoints we need to write and the",
    "start": "962820",
    "end": "968940"
  },
  {
    "text": "infrastructure team who is thinking about scalability and uh performance",
    "start": "968940",
    "end": "974760"
  },
  {
    "text": "and so they're going to agree on a SQL schema once they do that we're going to need to actually go update our database to have",
    "start": "974760",
    "end": "981300"
  },
  {
    "text": "the schema so maybe the infrastructure team is going to go at the schema whatever appropriate indices we think",
    "start": "981300",
    "end": "987240"
  },
  {
    "text": "we'll need and also generally scale up the services to support this new feature",
    "start": "987240",
    "end": "993959"
  },
  {
    "text": "okay great we have the schema what's next up we're going to need the back end and",
    "start": "993959",
    "end": "1000740"
  },
  {
    "text": "front-end teams to talk to each other to define the API of the endpoints right if we're building a chat app we",
    "start": "1000740",
    "end": "1007160"
  },
  {
    "text": "probably need a way to write load the list of channels we're going to need the",
    "start": "1007160",
    "end": "1012500"
  },
  {
    "text": "way to load messages that are in a specific Channel we're going to need to be able to create channels delete channels rename channels",
    "start": "1012500",
    "end": "1019480"
  },
  {
    "text": "and we're going to need to make sure that the front-end team is getting all of their needs met by the",
    "start": "1019480",
    "end": "1025339"
  },
  {
    "text": "endpoints but also that they can be implemented by the back end team yeah yeah and often I've seen teams that",
    "start": "1025339",
    "end": "1031760"
  },
  {
    "text": "will jump to graphql to solve this because this conversation is so difficult it's often nice to have a like",
    "start": "1031760",
    "end": "1038418"
  },
  {
    "text": "rigid structured language in order to yeah to sort of guide the conversation",
    "start": "1038419",
    "end": "1043459"
  },
  {
    "text": "and write down the conclusions okay back end in front-end teams we've",
    "start": "1043459",
    "end": "1048740"
  },
  {
    "text": "defined the API finally the backend team can go and actually build the endpoints",
    "start": "1048740",
    "end": "1054080"
  },
  {
    "text": "they'll implement this API and use the SQL schema that the infrastructure team set up for them",
    "start": "1054080",
    "end": "1059780"
  },
  {
    "text": "and finally only then can we actually go and build the components and actually build the UI",
    "start": "1059780",
    "end": "1065419"
  },
  {
    "text": "and so now the front-end team can write the components and we have built our new feature end to end",
    "start": "1065419",
    "end": "1071740"
  },
  {
    "text": "so how do we feel about this process uh so in total we had over six different",
    "start": "1071740",
    "end": "1078260"
  },
  {
    "text": "Services involved there were five steps we had at least three teams and so I",
    "start": "1078260",
    "end": "1084559"
  },
  {
    "text": "think realistically even for a small feature like this it's going to take weeks there's just too many moving Parts",
    "start": "1084559",
    "end": "1089600"
  },
  {
    "text": "involved too many different people uh and sort of the like work of developing the feature has been like",
    "start": "1089600",
    "end": "1095900"
  },
  {
    "text": "split up between totally different teams so that no team is thinking about this feature end to end everybody's sort of",
    "start": "1095900",
    "end": "1103100"
  },
  {
    "text": "focusing on their part and throwing a bit of work over the wall um",
    "start": "1103100",
    "end": "1108679"
  },
  {
    "text": "okay can we do better what does a better model look like what does the world look like in which",
    "start": "1108679",
    "end": "1114559"
  },
  {
    "text": "people could actually own their features end to end um yeah I guess to sort of say the negative",
    "start": "1114559",
    "end": "1122299"
  },
  {
    "text": "version here in this existing model how could anyone be a full stack engineer it seems completely infeasible for a single",
    "start": "1122299",
    "end": "1129080"
  },
  {
    "text": "engineer to be thinking about or owning this much infrastructure yeah and so yeah if you stop the talk",
    "start": "1129080",
    "end": "1134900"
  },
  {
    "text": "now I will have convinced you of exactly the opposite of my goal uh It seems impossible",
    "start": "1134900",
    "end": "1141380"
  },
  {
    "text": "yeah okay but how could we do it what would it look like and so I think the thing I want to talk",
    "start": "1141380",
    "end": "1147080"
  },
  {
    "text": "about next is what a serverless architecture would look like for building a complex web app like this",
    "start": "1147080",
    "end": "1154039"
  },
  {
    "text": "um how do serverless change things and how does it change the teams that are building the apps",
    "start": "1154039",
    "end": "1160179"
  },
  {
    "start": "1160000",
    "end": "1160000"
  },
  {
    "text": "and so I think before we talk about what architecture we're actually going to use I think we should come back to this",
    "start": "1160580",
    "end": "1165980"
  },
  {
    "text": "complicated one that we had before and focus in on a question of what part is the app",
    "start": "1165980",
    "end": "1172460"
  },
  {
    "text": "right as I said before I drew all of these boxes before I even told you what app we're building",
    "start": "1172460",
    "end": "1177880"
  },
  {
    "text": "what parts of these boxes actually have to do with the product features we're building",
    "start": "1177880",
    "end": "1183380"
  },
  {
    "text": "and so I think there's a couple of bits here on the front end side",
    "start": "1183380",
    "end": "1188539"
  },
  {
    "text": "we're going to have different react components depending on what app we're building right the react components are specific",
    "start": "1188539",
    "end": "1193700"
  },
  {
    "text": "to the user experience we want to give similarly on the back end there's bits",
    "start": "1193700",
    "end": "1200000"
  },
  {
    "text": "of business logic right we talked about the fact that every new product feature is going to need new endpoints or",
    "start": "1200000",
    "end": "1205640"
  },
  {
    "text": "adjustments to the endpoints and when you sort of like condense down",
    "start": "1205640",
    "end": "1210919"
  },
  {
    "text": "what is an endpoint all it really is is a function right we need a function that's going to be",
    "start": "1210919",
    "end": "1216740"
  },
  {
    "text": "taking in some like an HTTP request and returning some data to the front end",
    "start": "1216740",
    "end": "1222980"
  },
  {
    "text": "so there's some functions on the back end and then the last piece that changes and",
    "start": "1222980",
    "end": "1229520"
  },
  {
    "text": "is sort of part of our app is the database schema right every app needs to store",
    "start": "1229520",
    "end": "1235220"
  },
  {
    "text": "information in the database but the schema they use to store it depends on your data model in particular",
    "start": "1235220",
    "end": "1242240"
  },
  {
    "text": "um and so I claim that that's this is really it like when I think about what",
    "start": "1242240",
    "end": "1247460"
  },
  {
    "text": "is the app there's the react components there's functions in the back end and there's a",
    "start": "1247460",
    "end": "1252919"
  },
  {
    "text": "database schema everything else in this diagram that's just scaffolding to get these",
    "start": "1252919",
    "end": "1258980"
  },
  {
    "text": "three things in place and so if we want to sort of remove as much unnecessary complexity as possible",
    "start": "1258980",
    "end": "1267140"
  },
  {
    "text": "where do we end up yeah if we want to like Empower Engineers to edit the whole app how do",
    "start": "1267140",
    "end": "1273740"
  },
  {
    "start": "1269000",
    "end": "1269000"
  },
  {
    "text": "we do it well I think we need to do a few things we need to remove all this excess complexity right we want to focus in on",
    "start": "1273740",
    "end": "1280340"
  },
  {
    "text": "just those three things your react components your functions and your schema and manage everything else by",
    "start": "1280340",
    "end": "1287299"
  },
  {
    "text": "sort of centrally the second thing is that if we want Engineers to actually be able to edit",
    "start": "1287299",
    "end": "1293419"
  },
  {
    "text": "the whole app themselves we need to write all of these pieces in the same language and given the realities of web",
    "start": "1293419",
    "end": "1300320"
  },
  {
    "text": "development today I think we have to pick JavaScript or typescript because that's the one that can run in the browser",
    "start": "1300320",
    "end": "1306679"
  },
  {
    "text": "um cool and then once we've done this profit if we can remove all the complexity and",
    "start": "1306679",
    "end": "1313880"
  },
  {
    "text": "write everything in the same language I think we're going to be in a really good place but let me convince two of this",
    "start": "1313880",
    "end": "1321260"
  },
  {
    "start": "1321000",
    "end": "1321000"
  },
  {
    "text": "so in the serverless architecture these are the only things we need we need react components some way to",
    "start": "1321260",
    "end": "1327740"
  },
  {
    "text": "build the UI we need back-end serverless functions some way to have back-end",
    "start": "1327740",
    "end": "1332900"
  },
  {
    "text": "business logic and run code on the server and we need a schema we need to describe",
    "start": "1332900",
    "end": "1338299"
  },
  {
    "text": "how we want to save our data in a database yeah and unlike the previous diagrams like",
    "start": "1338299",
    "end": "1344600"
  },
  {
    "text": "this is it I'm not going to be pulling out any more complexity here because there isn't any more I think these three ingredients",
    "start": "1344600",
    "end": "1352220"
  },
  {
    "text": "really give us everything we need to build the app and so when we've done this let's break",
    "start": "1352220",
    "end": "1359600"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "down what the responsibilities are so if you're using a serverless architecture like this",
    "start": "1359600",
    "end": "1365539"
  },
  {
    "text": "right you have to manage just those three things you'll have to write UI components you'll have to write",
    "start": "1365539",
    "end": "1370940"
  },
  {
    "text": "serverless functions and you'll have to define a schema",
    "start": "1370940",
    "end": "1375399"
  },
  {
    "text": "but where did all of the other parts go how are those getting taken care of like if you're using a serverless",
    "start": "1376640",
    "end": "1382760"
  },
  {
    "text": "provider you're sort of giving them the responsibility for handling the scalability correctness caching and",
    "start": "1382760",
    "end": "1389120"
  },
  {
    "text": "performance reactivity backups availability hosting the whole list",
    "start": "1389120",
    "end": "1395419"
  },
  {
    "text": "um and so I think we didn't do anything totally revolutionary here right I just",
    "start": "1395419",
    "end": "1400520"
  },
  {
    "text": "took the responsibilities that used to be spread across a large engineering team and offloaded them into a like",
    "start": "1400520",
    "end": "1406880"
  },
  {
    "text": "serverless hosting provider um yeah and having personally worked on",
    "start": "1406880",
    "end": "1411980"
  },
  {
    "text": "a large engineering team building Asana I can tell you that a great a large fraction Engineers we're",
    "start": "1411980",
    "end": "1418280"
  },
  {
    "text": "actually focused on all of these problems and not the UI components the functions and the",
    "start": "1418280",
    "end": "1423440"
  },
  {
    "text": "schema um and so by sort of giving the provider all of these responsibilities",
    "start": "1423440",
    "end": "1429980"
  },
  {
    "text": "it will let you focus in on building the parts of the app that actually affect your user experience",
    "start": "1429980",
    "end": "1436159"
  },
  {
    "text": "um okay cool this sounds good in theory but what does product development actually",
    "start": "1436159",
    "end": "1441860"
  },
  {
    "text": "look like in this kind of serverless environment um so what I want to do is walk through",
    "start": "1441860",
    "end": "1447200"
  },
  {
    "text": "the same example we did before and I want to just show you how that would work if you're using convex I think a",
    "start": "1447200",
    "end": "1454400"
  },
  {
    "text": "lot of the same ideas apply to many other serverless providers but this is the one that I know well",
    "start": "1454400",
    "end": "1460720"
  },
  {
    "text": "so when you're using convex you write your schema in typescript and so before you added messages to your",
    "start": "1460720",
    "end": "1468980"
  },
  {
    "start": "1462000",
    "end": "1462000"
  },
  {
    "text": "chat app your schema might look like this so here this is a typescript file we're",
    "start": "1468980",
    "end": "1474320"
  },
  {
    "text": "importing some helpers Define schema Define table and S and we're defining a schema that just",
    "start": "1474320",
    "end": "1480440"
  },
  {
    "text": "has a single table messages messages are just objects that have two properties on them author and body and",
    "start": "1480440",
    "end": "1487760"
  },
  {
    "text": "both of them are string right a very minimal chat app where people can post messages and say who posted them",
    "start": "1487760",
    "end": "1496039"
  },
  {
    "text": "if we now want to expand this into a chat app that has channels right we're just going to go ahead and",
    "start": "1496039",
    "end": "1502039"
  },
  {
    "text": "add channels to our schema so here I've updated the schema now",
    "start": "1502039",
    "end": "1507200"
  },
  {
    "text": "there's another table called channels and each channel is just an object that has a string name",
    "start": "1507200",
    "end": "1513380"
  },
  {
    "text": "and then we need to connect the messages to the channel somehow and so in convex",
    "start": "1513380",
    "end": "1518960"
  },
  {
    "text": "the way you can do that is by referencing the ID of the objects in the other table",
    "start": "1518960",
    "end": "1524779"
  },
  {
    "text": "so here now messages have a channel property and that's just the ID of a channel",
    "start": "1524779",
    "end": "1530260"
  },
  {
    "text": "and this is sort of how we handle foreign key references um",
    "start": "1530260",
    "end": "1535700"
  },
  {
    "text": "okay to find the schema took 30 seconds what's next",
    "start": "1535700",
    "end": "1541220"
  },
  {
    "text": "well we need to define the back end functions once again in convex this is all just",
    "start": "1541220",
    "end": "1546919"
  },
  {
    "start": "1543000",
    "end": "1543000"
  },
  {
    "text": "written in typescript and so this is an example of what the kinds of functions you might need to",
    "start": "1546919",
    "end": "1552380"
  },
  {
    "text": "build this like multi-channel chat app uh so the first function would live in a",
    "start": "1552380",
    "end": "1559039"
  },
  {
    "text": "file like list channels.js or TS and it's using query here which is",
    "start": "1559039",
    "end": "1564980"
  },
  {
    "text": "saying that this is a convex query function uh in convex query functions let you",
    "start": "1564980",
    "end": "1570679"
  },
  {
    "text": "load data and they're automatically reactive so whenever you load a query",
    "start": "1570679",
    "end": "1575779"
  },
  {
    "text": "function convex will also push to you a new version of the like data whenever the underlying data changes",
    "start": "1575779",
    "end": "1583299"
  },
  {
    "text": "in this case what do we want to do we want to go to the database we'll query the channels table and just",
    "start": "1583299",
    "end": "1589760"
  },
  {
    "text": "collect all the channels that we find and that way we can list all the channels in our little slack channels",
    "start": "1589760",
    "end": "1594980"
  },
  {
    "text": "picker I should say though that in a convex query function you can write arbitrary",
    "start": "1594980",
    "end": "1600620"
  },
  {
    "text": "typescript and it will still be reactive so if we wanted to take the length of this list and list how many channels",
    "start": "1600620",
    "end": "1607100"
  },
  {
    "text": "there are we could get a live updating number of the number of channels in the app",
    "start": "1607100",
    "end": "1612700"
  },
  {
    "text": "um okay and we don't just want to list the channels we also need a way to add new channels and we can Define that",
    "start": "1613039",
    "end": "1618799"
  },
  {
    "text": "using this convex mutation in an add Channel file so here this is a mutation that takes in",
    "start": "1618799",
    "end": "1624799"
  },
  {
    "text": "the name String and then inserts a new document into the channels table with that name",
    "start": "1624799",
    "end": "1630200"
  },
  {
    "text": "you know nothing revolutionary here but I think the cool part is that the same",
    "start": "1630200",
    "end": "1635840"
  },
  {
    "text": "engineer who went and wrote the schema could easily hop over here and start writing the functions",
    "start": "1635840",
    "end": "1641620"
  },
  {
    "text": "right they're just sort of in the same code base typescript code nothing magical nothing special",
    "start": "1641620",
    "end": "1649159"
  },
  {
    "text": "and then the last piece is that we actually need to use these functions to build components and add on that new UI",
    "start": "1649159",
    "end": "1654799"
  },
  {
    "start": "1650000",
    "end": "1650000"
  },
  {
    "text": "for our new user experience and so in this example we'll probably want to make a new react component",
    "start": "1654799",
    "end": "1661220"
  },
  {
    "text": "called channels list and what does that do well we need to",
    "start": "1661220",
    "end": "1666260"
  },
  {
    "text": "load the channels if we want to list them and convex gives you a use Query hook",
    "start": "1666260",
    "end": "1672100"
  },
  {
    "text": "use Query takes in the like name of a query function and just gives you a",
    "start": "1672100",
    "end": "1677419"
  },
  {
    "text": "reactive version of the result so this is sort of a live updating set of channels",
    "start": "1677419",
    "end": "1682760"
  },
  {
    "text": "and then based on those we're going to render some UI so maybe we map through all the channels and for each Channel we",
    "start": "1682760",
    "end": "1689179"
  },
  {
    "text": "render a link that lets you load the messages in that channel",
    "start": "1689179",
    "end": "1694460"
  },
  {
    "text": "um cool and that's it you can load data from queries on the front end",
    "start": "1694460",
    "end": "1700940"
  },
  {
    "text": "you can call mutations and that gives you all of the tools you need to build any like interactive experience",
    "start": "1700940",
    "end": "1709299"
  },
  {
    "text": "uh right and I think when we've done this it's like almost yeah it is both completely",
    "start": "1710539",
    "end": "1717980"
  },
  {
    "text": "obvious and also somewhat revolutionary we've taken a process that was going to take weeks for three different teams to",
    "start": "1717980",
    "end": "1723740"
  },
  {
    "text": "complete and I just described how to do it in 10 minutes uh and by using the same language and",
    "start": "1723740",
    "end": "1731120"
  },
  {
    "text": "the same abstractions at every layer of the stack it's now realistic for individual Engineers to understand all",
    "start": "1731120",
    "end": "1737000"
  },
  {
    "text": "of this and own their feature end to end um so instead of having people split up",
    "start": "1737000",
    "end": "1742340"
  },
  {
    "text": "on what part of the stack they're working on you can now have teams that are just focused on their parts of the",
    "start": "1742340",
    "end": "1747380"
  },
  {
    "text": "data model and their features and can think through how to build those features end to end",
    "start": "1747380",
    "end": "1754059"
  },
  {
    "text": "on top of that I think there's some things that you get with server lists that are actually just hard to build in",
    "start": "1754100",
    "end": "1759500"
  },
  {
    "text": "traditional architectures um and let me give you sort of my two",
    "start": "1759500",
    "end": "1765140"
  },
  {
    "text": "examples of what you get for free by using server lists that may have never been able to be built using a traditional model",
    "start": "1765140",
    "end": "1772100"
  },
  {
    "start": "1771000",
    "end": "1771000"
  },
  {
    "text": "the first one is reactivity by default when I say that what do I mean",
    "start": "1772100",
    "end": "1777799"
  },
  {
    "text": "often in an app you're starting sort of in the way that I did in my example where you start by",
    "start": "1777799",
    "end": "1783500"
  },
  {
    "text": "calling endpoints and loading non-reactive data and then adding on a pub sub system which will give you some",
    "start": "1783500",
    "end": "1789860"
  },
  {
    "text": "amount of reactivity but perhaps only to the things that you actually like manually built it for",
    "start": "1789860",
    "end": "1796640"
  },
  {
    "text": "um so it's very common to have apps where the chat portion of the app is reactive but the other views are not",
    "start": "1796640",
    "end": "1802279"
  },
  {
    "text": "because that would be extra infrastructure and extra engineering complexity in convex though",
    "start": "1802279",
    "end": "1809360"
  },
  {
    "text": "you actually get this for free so anytime that you load a query on the front end convex pushes you updates to",
    "start": "1809360",
    "end": "1815120"
  },
  {
    "text": "that query whenever the data changes so an example of the kind of experience",
    "start": "1815120",
    "end": "1820340"
  },
  {
    "text": "I mean is look at these two windows there's one here that's creating a channel and then one that is like",
    "start": "1820340",
    "end": "1825860"
  },
  {
    "text": "viewing the channels list in slack for example when you go and hit new channel and click the create button",
    "start": "1825860",
    "end": "1832159"
  },
  {
    "text": "the new channel pops up in the channels list immediately and I think this is like",
    "start": "1832159",
    "end": "1838820"
  },
  {
    "text": "sort of a detail that can take an enormous amount of work in a traditional architecture but if you're using a",
    "start": "1838820",
    "end": "1845659"
  },
  {
    "text": "centralized system like convex that understands the data that query functions load then it can push newer",
    "start": "1845659",
    "end": "1851419"
  },
  {
    "text": "updates to those query functions whenever the underlying data changes yeah pretty cool",
    "start": "1851419",
    "end": "1858220"
  },
  {
    "text": "yeah the second sort of freebie that you get in this sort of system is end-to-end type safety",
    "start": "1858320",
    "end": "1865299"
  },
  {
    "start": "1862000",
    "end": "1862000"
  },
  {
    "text": "so because we've written all of our code in typescript on every layer of the stack we can give you really good",
    "start": "1865299",
    "end": "1872120"
  },
  {
    "text": "precise generated types now so what do I mean by this so here I'm like inside of a react",
    "start": "1872120",
    "end": "1878539"
  },
  {
    "text": "component channels list and I'm calling the use Query hook in convex uh",
    "start": "1878539",
    "end": "1885260"
  },
  {
    "text": "yeah use Query now is like understands what query functions we've",
    "start": "1885260",
    "end": "1891020"
  },
  {
    "text": "defined and auto-completes them automatically so here you can see that there's a list channels query function and a list",
    "start": "1891020",
    "end": "1897440"
  },
  {
    "text": "messages query function in our code base often this kind of thing can be built in",
    "start": "1897440",
    "end": "1903260"
  },
  {
    "text": "other Frameworks but requires complex code generation to take your SQL schema",
    "start": "1903260",
    "end": "1908600"
  },
  {
    "text": "and turn it into typescript or take your graphql schema and build your sort of types for your graphql clients",
    "start": "1908600",
    "end": "1916419"
  },
  {
    "text": "but in convex this is all pipes together in end-to-end correct automatically",
    "start": "1916419",
    "end": "1923059"
  },
  {
    "text": "similarly the types can actually just flow all the way from the database layer up into your UI",
    "start": "1923059",
    "end": "1929419"
  },
  {
    "text": "so our like list channels query function was loading a list of like Channel",
    "start": "1929419",
    "end": "1935960"
  },
  {
    "text": "objects and here when we load those channels on the front end you can see that it's just an array of documents that each have an",
    "start": "1935960",
    "end": "1943580"
  },
  {
    "text": "ID a creation time and a name so one field that we defined two system fields",
    "start": "1943580",
    "end": "1948679"
  },
  {
    "text": "that got added but we can see them all in our editor right here now and I think this also helps",
    "start": "1948679",
    "end": "1954679"
  },
  {
    "text": "Engineers move faster across all layers of the stock because they know that the types are going to sort of guide them",
    "start": "1954679",
    "end": "1960500"
  },
  {
    "text": "through the process okay thank you all for bearing with me",
    "start": "1960500",
    "end": "1966460"
  },
  {
    "start": "1963000",
    "end": "1963000"
  },
  {
    "text": "uh a couple conclusions and parting thoughts to walk away with",
    "start": "1966460",
    "end": "1971960"
  },
  {
    "text": "the first one is that most of the complexity in modern web apps has nothing to do with the app at all",
    "start": "1971960",
    "end": "1978500"
  },
  {
    "text": "our sort of standard infrastructure and pieces that we wire together actually",
    "start": "1978500",
    "end": "1984260"
  },
  {
    "text": "are amazingly complex and that's part of what necessitates these large engineering teams or each individual",
    "start": "1984260",
    "end": "1990620"
  },
  {
    "text": "engineer only owns a tiny part of the stock",
    "start": "1990620",
    "end": "1994960"
  },
  {
    "text": "second if we can remove this complexity first it obviously saves time if there's",
    "start": "1995659",
    "end": "2001360"
  },
  {
    "text": "things that your team doesn't need to manage you can focus more on the other options yeah and it also changes how you",
    "start": "2001360",
    "end": "2008919"
  },
  {
    "text": "actually work um when you're only focusing in on the parts of the app that have to do with",
    "start": "2008919",
    "end": "2014980"
  },
  {
    "text": "your app you can think about them more holistically and own the same thing own features end to end",
    "start": "2014980",
    "end": "2022059"
  },
  {
    "text": "yeah and the last thing everyone can be a full stack engineer once you remove all the unnecessary complexity it is",
    "start": "2022059",
    "end": "2028960"
  },
  {
    "text": "completely feasible for engineers to work all the way from the schema layer up to the UI and think about an entire",
    "start": "2028960",
    "end": "2034960"
  },
  {
    "text": "product feature no thank you all for listening uh if you",
    "start": "2034960",
    "end": "2040600"
  },
  {
    "text": "have questions or thoughts feel free to shoot me an email my email is Alex at convex.dev and if you're curious about",
    "start": "2040600",
    "end": "2047559"
  },
  {
    "text": "convex check out our website convex.dev we're hiring yeah thanks everybody",
    "start": "2047559",
    "end": "2055079"
  },
  {
    "text": "well done sir I really enjoyed that talk thank you so much for taking the time to",
    "start": "2058179",
    "end": "2064000"
  },
  {
    "text": "educate the community on uh the basics of serverless and uh uh we wanted to",
    "start": "2064000",
    "end": "2071260"
  },
  {
    "text": "jump into this q a so everyone in the chat if you do have a question just pop it in the chat and I will review those",
    "start": "2071260",
    "end": "2078760"
  },
  {
    "text": "and pull the best ones and relay them to uh to Alex here um but I wanted to start off with just a",
    "start": "2078760",
    "end": "2085000"
  },
  {
    "text": "few questions um you talked about Outsourcing our infra to teams who specialized in areas",
    "start": "2085000",
    "end": "2092138"
  },
  {
    "text": "you know we would normally manage in-house now while this sounds great in theory to me uh is there actually a complexity",
    "start": "2092139",
    "end": "2099400"
  },
  {
    "text": "trade-off here when we Outsource these critical tasks uh I mean",
    "start": "2099400",
    "end": "2106180"
  },
  {
    "text": "I definitely think about it as just moving around the complexity not necessarily trading it off of there is",
    "start": "2106180",
    "end": "2112359"
  },
  {
    "text": "some inherent complexity in building the infrastructure for a modern web app it's just a question of yours the in-house",
    "start": "2112359",
    "end": "2117520"
  },
  {
    "text": "team doing it or an external team but I also think it's interesting to put",
    "start": "2117520",
    "end": "2122680"
  },
  {
    "text": "this in sort of the larger Arc of like how has like engineering big web apps",
    "start": "2122680",
    "end": "2128200"
  },
  {
    "text": "changed over time yeah it used to be that you would have a server sitting in your garage that you would manage",
    "start": "2128200",
    "end": "2133839"
  },
  {
    "text": "yourself and buy now with like hosted platforms like AWS people switch to using ec2",
    "start": "2133839",
    "end": "2140160"
  },
  {
    "text": "in addition people have increasingly using more managed databases like RDS",
    "start": "2140160",
    "end": "2145359"
  },
  {
    "text": "and so I think sort of the line about like which parts of the infrastructure you manage and which ones you're paying",
    "start": "2145359",
    "end": "2151599"
  },
  {
    "text": "to manage is just continually moving up um and so sooner or later people are also not going to want to be",
    "start": "2151599",
    "end": "2156700"
  },
  {
    "text": "provisioning their own back ends and that type of thing so perhaps it's not exactly more complex",
    "start": "2156700",
    "end": "2163480"
  },
  {
    "text": "it's just a different type of complexity yeah for sure um and the complexity is now moving into",
    "start": "2163480",
    "end": "2169960"
  },
  {
    "text": "the realm of Specialists who are building this as their business um",
    "start": "2169960",
    "end": "2176880"
  },
  {
    "text": "and I I think many people who have really not tried this architecture may have a perception that it's not ready",
    "start": "2176920",
    "end": "2183160"
  },
  {
    "text": "for you know large-scale production applications what is your response to this and just a quick follow-up to that",
    "start": "2183160",
    "end": "2190060"
  },
  {
    "text": "are there any companies you know who are using serverless architecture at scale",
    "start": "2190060",
    "end": "2195220"
  },
  {
    "text": "yeah for sure um I mean I think as with any new technology a lot of the early adopters",
    "start": "2195220",
    "end": "2200980"
  },
  {
    "text": "are smaller companies who are more willing to try it out and take a risk um but I think sort of anecdotally I'm",
    "start": "2200980",
    "end": "2207820"
  },
  {
    "text": "definitely hearing about big companies that are dipping their toe in testing the waters using it for small features",
    "start": "2207820",
    "end": "2213700"
  },
  {
    "text": "or small parts of their app and some companies that are also just building their apps on top of it",
    "start": "2213700",
    "end": "2219339"
  },
  {
    "text": "um like certainly AWS Lambda I think probably the biggest serverless product out there right now has a ridiculously",
    "start": "2219339",
    "end": "2226060"
  },
  {
    "text": "long impressive list of logos on their website yeah seems like Zillow coinbase lots of",
    "start": "2226060",
    "end": "2231700"
  },
  {
    "text": "people are switching and using lambdas to simplify their stock and I think certainly the trend is",
    "start": "2231700",
    "end": "2237520"
  },
  {
    "text": "undeniable that yeah more companies are using this in the future",
    "start": "2237520",
    "end": "2242740"
  },
  {
    "text": "so is that something you would recommend to get started with serverless is just try it out in some small section of an",
    "start": "2242740",
    "end": "2248380"
  },
  {
    "text": "app or some small new feature yeah I think sure like any new technology you don't want to like move your entire you",
    "start": "2248380",
    "end": "2255160"
  },
  {
    "text": "know web app onto this and assume that it will work and be fine but I think fine it's all ways to test it out make",
    "start": "2255160",
    "end": "2261339"
  },
  {
    "text": "sure that it works for you and your technology I think it's always a good way to get started",
    "start": "2261339",
    "end": "2266800"
  },
  {
    "text": "great we I'm gonna pull some questions from the audience now um yay Han or J Han z uh thanks you for",
    "start": "2266800",
    "end": "2275500"
  },
  {
    "text": "your insightful presentation and ask how you manage migrations of schema",
    "start": "2275500",
    "end": "2280780"
  },
  {
    "text": "um so obviously this kind of thing varies depending on which product you're using",
    "start": "2280780",
    "end": "2286000"
  },
  {
    "text": "um in the case of convex um the schemas are actually pretty",
    "start": "2286000",
    "end": "2291400"
  },
  {
    "text": "interesting because they're not you can use convex either with a schema where you explicitly write out what tables you",
    "start": "2291400",
    "end": "2298060"
  },
  {
    "text": "have and what types those tables have and then they generate typescript types or even without a schema where you just",
    "start": "2298060",
    "end": "2304000"
  },
  {
    "text": "put in data and pull it out and sort of keep track of this on your own",
    "start": "2304000",
    "end": "2309820"
  },
  {
    "text": "um I think convex currently has sort of limited ad hoc schema migration",
    "start": "2309820",
    "end": "2315160"
  },
  {
    "text": "capabilities you definitely can go and write mutations that read out your data in one format and write it back in",
    "start": "2315160",
    "end": "2321579"
  },
  {
    "text": "another but we also are planning to add more automated schema migrations where",
    "start": "2321579",
    "end": "2326619"
  },
  {
    "text": "you can write sort of write a transform from your documents from one format to",
    "start": "2326619",
    "end": "2331720"
  },
  {
    "text": "another and have that run automatically but yeah",
    "start": "2331720",
    "end": "2337420"
  },
  {
    "text": "all right uh and I'm going to butcher this name so apologies in advance v j",
    "start": "2337420",
    "end": "2344160"
  },
  {
    "text": "Vijaya karthika G as how did QA adopt",
    "start": "2344160",
    "end": "2350440"
  },
  {
    "text": "this transformation to serverless architecture sorry what's QA",
    "start": "2350440",
    "end": "2357060"
  },
  {
    "text": "I would guess quality assurance we will um I'll ask Vijay to uh clarify that in",
    "start": "2358119",
    "end": "2364599"
  },
  {
    "text": "the chat we'll move on to the next question from Giuseppe B how do you",
    "start": "2364599",
    "end": "2370359"
  },
  {
    "text": "imagine these principles to work for teams having multiple front ends web and mobile or even only mobile",
    "start": "2370359",
    "end": "2378160"
  },
  {
    "text": "I mean I think the dream is that a lot of this just applies directly and",
    "start": "2378160",
    "end": "2383980"
  },
  {
    "text": "certainly if you have an app that is only mobile I still think it's a really good model to have the same Engineers",
    "start": "2383980",
    "end": "2389680"
  },
  {
    "text": "building out the app as the people building out the back end because they can sort of think holistically about",
    "start": "2389680",
    "end": "2394839"
  },
  {
    "text": "their feature um and I'm also excited and interested in ways to break down the barriers",
    "start": "2394839",
    "end": "2400720"
  },
  {
    "text": "between web and mobile and companies that have both um when I worked at Asana it was there",
    "start": "2400720",
    "end": "2406480"
  },
  {
    "text": "was actually a very hard line between the web engineers and the mobile engineers and so product features that",
    "start": "2406480",
    "end": "2412780"
  },
  {
    "text": "required launching on both were sort of this like complicated coordination game um but I think with new Frameworks like",
    "start": "2412780",
    "end": "2419200"
  },
  {
    "text": "react native or you can build your mobile app and react components just like your web app",
    "start": "2419200",
    "end": "2424680"
  },
  {
    "text": "some of these boundaries are becoming a little looser and I'm excited about ways in which the same Engineers can build",
    "start": "2424680",
    "end": "2431500"
  },
  {
    "text": "product on all the platforms yeah absolutely this is what got me into the react Community uh I didn't really",
    "start": "2431500",
    "end": "2438160"
  },
  {
    "text": "properly introduce myself for those who don't know I managed the uh I produced the conference react-a-thon so I've been",
    "start": "2438160",
    "end": "2443500"
  },
  {
    "text": "very close to the react Community for a long time and it was really the keynote and I think it was like 2014 to 2015",
    "start": "2443500",
    "end": "2450040"
  },
  {
    "text": "when they introduced react native that I was like oh my God this is this is game changing and it's proven to be and now",
    "start": "2450040",
    "end": "2455079"
  },
  {
    "text": "we have Technologies like Expo um if uh for those of you who are interested in in cross-platform",
    "start": "2455079",
    "end": "2460900"
  },
  {
    "text": "development I would highly encourage you to uh check that out expose a technology where you can build for mobile across",
    "start": "2460900",
    "end": "2467859"
  },
  {
    "text": "platforms and web with the same code it's just incredible um okay let's go to the uh next question",
    "start": "2467859",
    "end": "2476800"
  },
  {
    "text": "from Lily l",
    "start": "2476800",
    "end": "2483460"
  },
  {
    "text": "can you host convex on Azure serverless inference such as app service",
    "start": "2483460",
    "end": "2489900"
  },
  {
    "text": "um I guess the short answer is no not yet um convex internally is running on top",
    "start": "2490119",
    "end": "2496240"
  },
  {
    "text": "of AWS but we actually manage all that for you so that's a implementation detail that we don't actually talk about",
    "start": "2496240",
    "end": "2503619"
  },
  {
    "text": "um but I think if there's demand for more different hosting options and that kind of thing certainly we're willing to",
    "start": "2503619",
    "end": "2509440"
  },
  {
    "text": "expand and be more flexible there got it and going back to vijaya's uh",
    "start": "2509440",
    "end": "2517839"
  },
  {
    "text": "question uh they said yes it is quality assurance so going back to that question",
    "start": "2517839",
    "end": "2523000"
  },
  {
    "text": "how did quality assurance adopt this transformation to serverless architecture so I guess I actually don't have that",
    "start": "2523000",
    "end": "2530320"
  },
  {
    "text": "much experience with quality assurance when I was working at Asana the way that things mostly worked is we like relied",
    "start": "2530320",
    "end": "2536920"
  },
  {
    "text": "really heavily on automated tests so that we could ensure code is working and Asana would actually release code twice",
    "start": "2536920",
    "end": "2543579"
  },
  {
    "text": "a day which is just so fast that having like manual QA process is not really",
    "start": "2543579",
    "end": "2549040"
  },
  {
    "text": "possible um but I guess in general I don't think switching to serverless drastically",
    "start": "2549040",
    "end": "2554440"
  },
  {
    "text": "changes how your team has to do QA um if you're using automatic tests you",
    "start": "2554440",
    "end": "2560680"
  },
  {
    "text": "can certainly write automated tests against serverless infrastructure just like you could with your traditional infrastructure and if you want to do a",
    "start": "2560680",
    "end": "2566920"
  },
  {
    "text": "manual QA process I think that's also just as easy to do as ever and maybe in some ways even easier if you can spin up",
    "start": "2566920",
    "end": "2574540"
  },
  {
    "text": "a background a back end without having to like provision servers and have some kind of staging environment that your QA",
    "start": "2574540",
    "end": "2581140"
  },
  {
    "text": "people use because it's you know you don't actually have to manage the",
    "start": "2581140",
    "end": "2586300"
  },
  {
    "text": "servers having a like yeah second deployment of convex out there to test against is",
    "start": "2586300",
    "end": "2592060"
  },
  {
    "text": "super easy right okay and Jacob S asks does this model",
    "start": "2592060",
    "end": "2598180"
  },
  {
    "text": "imply your product will be a monolith do all teams need to work in the same repo and have the same sdlc",
    "start": "2598180",
    "end": "2606460"
  },
  {
    "text": "software development I know these acronyms oh okay got it",
    "start": "2606460",
    "end": "2612760"
  },
  {
    "text": "um yeah so I mean I think certainly my hot take is that I actually",
    "start": "2612760",
    "end": "2618640"
  },
  {
    "text": "love monoliths I think that having everything in the same repo makes it easier for developers to cross",
    "start": "2618640",
    "end": "2625300"
  },
  {
    "text": "boundaries and jump into parts of the code that they don't normally work on um",
    "start": "2625300",
    "end": "2630640"
  },
  {
    "text": "and I think yeah having a single software development like cycle is a often pretty simple model for most teams",
    "start": "2630640",
    "end": "2637240"
  },
  {
    "text": "unless you're getting up to some huge scale and really want to separate deployments into more granular units",
    "start": "2637240",
    "end": "2643480"
  },
  {
    "text": "um I guess that being said if you wanted to split things up more that's also an option so you certainly could use",
    "start": "2643480",
    "end": "2649839"
  },
  {
    "text": "serverless and have a separate repo for your back end and a separate repo for your front end",
    "start": "2649839",
    "end": "2655720"
  },
  {
    "text": "um I think getting more granular than that though is actually not very common",
    "start": "2655720",
    "end": "2661720"
  },
  {
    "text": "um like in a traditional architecture you may have many microservices and want to deploy these all separately but now",
    "start": "2661720",
    "end": "2669040"
  },
  {
    "text": "that you're not really managing deployment at all it's being managed by your serverless hosting provider I think",
    "start": "2669040",
    "end": "2674140"
  },
  {
    "text": "the benefit of splitting up these microservices into tiny little pieces at least in my mind no longer makes sense",
    "start": "2674140",
    "end": "2680980"
  },
  {
    "text": "um because you're not even managing deployments so if you're you know using netlifier versus L and deploying every",
    "start": "2680980",
    "end": "2686560"
  },
  {
    "text": "time a new commit is pushed I don't think that this kind of like sharding up into pieces is really",
    "start": "2686560",
    "end": "2692440"
  },
  {
    "text": "necessary anymore um right on I think that's all of the it",
    "start": "2692440",
    "end": "2698319"
  },
  {
    "text": "looks like my connection is having issues can you still hear me yeah I can still hear you I just got a big red notification all right good to hear I'm",
    "start": "2698319",
    "end": "2705819"
  },
  {
    "text": "still here um it looks like that's all of the serverless questions there's one question about react native so if anyone",
    "start": "2705819",
    "end": "2710920"
  },
  {
    "text": "has any more questions uh please post them in the chat uh otherwise we will end shortly but one question about react",
    "start": "2710920",
    "end": "2718480"
  },
  {
    "text": "native since you brought it up Mo HS how would you uh how would you recommend",
    "start": "2718480",
    "end": "2724240"
  },
  {
    "text": "going with react native in Brownfield a hybrid or a rewrite",
    "start": "2724240",
    "end": "2729599"
  },
  {
    "text": "uh good question uh so I I'm not a react native Pro",
    "start": "2729599",
    "end": "2735460"
  },
  {
    "text": "um I think my understanding right now is it's sort of an emerging technology so",
    "start": "2735460",
    "end": "2740800"
  },
  {
    "text": "plenty of people are still building apps in a more traditional way using Swift or Java to build native IOS and Android",
    "start": "2740800",
    "end": "2746800"
  },
  {
    "text": "things um I would consider react native if we have if you have a team that is already",
    "start": "2746800",
    "end": "2752500"
  },
  {
    "text": "used to writing react components um I think that makes it much easier to",
    "start": "2752500",
    "end": "2757839"
  },
  {
    "text": "start an iOS projects I think I don't know that much though about the integration between react",
    "start": "2757839",
    "end": "2763900"
  },
  {
    "text": "native and traditional apps and I think if you're in a Brownfield environment where you're trying to transition your",
    "start": "2763900",
    "end": "2770020"
  },
  {
    "text": "app to a new technology I would just make sure that there's like a really good incremental migration plan in",
    "start": "2770020",
    "end": "2777099"
  },
  {
    "text": "general I'm always scared about you know do it all at once kind of rewrites where you stop the world and rewrite your app",
    "start": "2777099",
    "end": "2783819"
  },
  {
    "text": "in a new framework um we were always very careful to make or sure our rewrites are incremental so",
    "start": "2783819",
    "end": "2789760"
  },
  {
    "text": "we could ship pieces as we went and that made it possible to make some really big changes to our infrastructure",
    "start": "2789760",
    "end": "2796920"
  },
  {
    "text": "wonderful and then looks like last question is from is waria and I will",
    "start": "2797020",
    "end": "2804460"
  },
  {
    "text": "answer that because uh Israel is asking if you moved uh Asana into serverless",
    "start": "2804460",
    "end": "2811599"
  },
  {
    "text": "using convex and I would say no he didn't because he moved to convex and convex is a newer company",
    "start": "2811599",
    "end": "2818400"
  },
  {
    "text": "but I will follow up with that in that in that vein and ask why you left Sana",
    "start": "2818400",
    "end": "2825400"
  },
  {
    "text": "for convex what excites you about convex that perhaps you you know you didn't get",
    "start": "2825400",
    "end": "2833079"
  },
  {
    "text": "while working at Asana yeah so at Asana I worked a lot on the",
    "start": "2833079",
    "end": "2839140"
  },
  {
    "text": "like reactive data loading framework that Asana built in-house uh called Luna",
    "start": "2839140",
    "end": "2844720"
  },
  {
    "text": "um and I think it was cool to see how this supercharged our product engineers and enable them to build new features",
    "start": "2844720",
    "end": "2851619"
  },
  {
    "text": "really rapidly and so I think part of my excitement in coming to convex is getting to work on the same kind of",
    "start": "2851619",
    "end": "2857140"
  },
  {
    "text": "thing but building it for the rest of the community um because I think that there were a lot of cool things going on at Asana that",
    "start": "2857140",
    "end": "2863380"
  },
  {
    "text": "yeah I'm excited to bring to the rest of Engineers",
    "start": "2863380",
    "end": "2868078"
  },
  {
    "text": "cool and why were you so excited to join convex I mean I think I think they were",
    "start": "2869020",
    "end": "2875200"
  },
  {
    "text": "thinking about a lot of the same kinds of problems in good ways um and also it's you know fun to draw in",
    "start": "2875200",
    "end": "2881260"
  },
  {
    "text": "a small team with a lot of good people all right",
    "start": "2881260",
    "end": "2886839"
  },
  {
    "text": "well Alex thank you so much for your time thank you so much for uh educating",
    "start": "2886839",
    "end": "2891880"
  },
  {
    "text": "the community on this this wonderful wonderful new technology Direction",
    "start": "2891880",
    "end": "2897040"
  },
  {
    "text": "um where can everyone reach you yeah feel free to shoot me an email at Alex convex.dev and thanks for coming",
    "start": "2897040",
    "end": "2904480"
  },
  {
    "text": "everyone this was really fun all right thanks everyone for joining thanks for the questions we'll see you",
    "start": "2904480",
    "end": "2910240"
  },
  {
    "text": "in the next sessions",
    "start": "2910240",
    "end": "2913200"
  },
  {
    "text": "[Music]",
    "start": "2915830",
    "end": "2922130"
  }
]