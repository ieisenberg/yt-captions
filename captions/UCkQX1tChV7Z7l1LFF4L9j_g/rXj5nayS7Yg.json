[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "okay well I mean I'm Billy thanks for",
    "start": "15859",
    "end": "18480"
  },
  {
    "text": "having me here today",
    "start": "18480",
    "end": "20180"
  },
  {
    "text": "yeah so I'm currently working as a",
    "start": "20180",
    "end": "22529"
  },
  {
    "text": "principal engineer at a drawl so and",
    "start": "22529",
    "end": "25050"
  },
  {
    "text": "like like Rajesh mentioned we are",
    "start": "25050",
    "end": "26970"
  },
  {
    "text": "producing tons of data which makes it",
    "start": "26970",
    "end": "28980"
  },
  {
    "text": "very interesting I've been actually",
    "start": "28980",
    "end": "30210"
  },
  {
    "start": "30000",
    "end": "76000"
  },
  {
    "text": "doing big data with Python for like two",
    "start": "30210",
    "end": "33510"
  },
  {
    "text": "long time probably at least since 2000",
    "start": "33510",
    "end": "35730"
  },
  {
    "text": "and maybe something that should be",
    "start": "35730",
    "end": "37320"
  },
  {
    "text": "interesting to you is that if you ever",
    "start": "37320",
    "end": "38640"
  },
  {
    "text": "find yourself in the need of MapReduce",
    "start": "38640",
    "end": "41489"
  },
  {
    "text": "and you like Python as obviously you do",
    "start": "41489",
    "end": "43410"
  },
  {
    "text": "since you are here you should go to",
    "start": "43410",
    "end": "44760"
  },
  {
    "text": "disco project a torque which is disco",
    "start": "44760",
    "end": "46530"
  },
  {
    "text": "MapReduce a an implementation of",
    "start": "46530",
    "end": "49440"
  },
  {
    "text": "MapReduce that uses Erlang and python",
    "start": "49440",
    "end": "51690"
  },
  {
    "text": "that has been around since 2008 I",
    "start": "51690",
    "end": "53219"
  },
  {
    "text": "studied the project and it's the",
    "start": "53219",
    "end": "55500"
  },
  {
    "text": "community is really really active and",
    "start": "55500",
    "end": "56940"
  },
  {
    "text": "it's really great if you like Python",
    "start": "56940",
    "end": "58800"
  },
  {
    "text": "well but this talk is not about that",
    "start": "58800",
    "end": "60870"
  },
  {
    "text": "this talk is about something else",
    "start": "60870",
    "end": "62219"
  },
  {
    "text": "this talk is about the stuff that I an",
    "start": "62219",
    "end": "65309"
  },
  {
    "text": "add role have been working on like for",
    "start": "65309",
    "end": "67200"
  },
  {
    "text": "the past couple of months especially",
    "start": "67200",
    "end": "69600"
  },
  {
    "text": "related to the question that I'm sure",
    "start": "69600",
    "end": "71189"
  },
  {
    "text": "that many of you and actually like the",
    "start": "71189",
    "end": "73290"
  },
  {
    "text": "previous speakers also have clearly had",
    "start": "73290",
    "end": "75960"
  },
  {
    "text": "which is that that one when a kind of a",
    "start": "75960",
    "end": "79530"
  },
  {
    "text": "modern company like a drawl or pretty",
    "start": "79530",
    "end": "81930"
  },
  {
    "text": "much like Eventbrite I'm sure or any",
    "start": "81930",
    "end": "83970"
  },
  {
    "text": "other company producing tons of data has",
    "start": "83970",
    "end": "85650"
  },
  {
    "text": "but when you want to understand what's",
    "start": "85650",
    "end": "87450"
  },
  {
    "text": "going on either in your business you",
    "start": "87450",
    "end": "88920"
  },
  {
    "text": "want to do business intelligence and",
    "start": "88920",
    "end": "90390"
  },
  {
    "text": "today involves data and lots of data so",
    "start": "90390",
    "end": "93500"
  },
  {
    "text": "really the first question is that how do",
    "start": "93500",
    "end": "95880"
  },
  {
    "text": "you actually slice and dice how do you",
    "start": "95880",
    "end": "98759"
  },
  {
    "text": "worry tens of billions of data points or",
    "start": "98759",
    "end": "101520"
  },
  {
    "text": "hundreds of billions of data points and",
    "start": "101520",
    "end": "104340"
  },
  {
    "text": "now if you have been following the field",
    "start": "104340",
    "end": "106350"
  },
  {
    "text": "you know that they have been like the",
    "start": "106350",
    "end": "107670"
  },
  {
    "text": "pumps of interesting projects that have",
    "start": "107670",
    "end": "109409"
  },
  {
    "text": "come out like for the past during the",
    "start": "109409",
    "end": "111479"
  },
  {
    "text": "past five years say so there are like",
    "start": "111479",
    "end": "114780"
  },
  {
    "text": "interesting projects that work on top of",
    "start": "114780",
    "end": "116850"
  },
  {
    "text": "Hadoop so there is a first hive and",
    "start": "116850",
    "end": "118920"
  },
  {
    "text": "they're speak and well I mean you might",
    "start": "118920",
    "end": "122310"
  },
  {
    "text": "use something like HBase even or a of",
    "start": "122310",
    "end": "124439"
  },
  {
    "text": "course they're local of the new aircraft",
    "start": "124439",
    "end": "125880"
  },
  {
    "text": "you have things like Impala but I mean",
    "start": "125880",
    "end": "127890"
  },
  {
    "text": "it's very much like an ongoing thing",
    "start": "127890",
    "end": "130280"
  },
  {
    "text": "so I mean it there isn't really a clear",
    "start": "130280",
    "end": "132350"
  },
  {
    "text": "winner in that space and in a way I do",
    "start": "132350",
    "end": "134510"
  },
  {
    "text": "believe that it's very hard to have a",
    "start": "134510",
    "end": "136160"
  },
  {
    "text": "one project that would fit in all",
    "start": "136160",
    "end": "138500"
  },
  {
    "text": "problems but still it's a very valid",
    "start": "138500",
    "end": "140330"
  },
  {
    "text": "question and actually the reason why I'm",
    "start": "140330",
    "end": "144290"
  },
  {
    "text": "here today and why I think that like",
    "start": "144290",
    "end": "146150"
  },
  {
    "text": "this stuff should be interesting to you",
    "start": "146150",
    "end": "148280"
  },
  {
    "text": "is that actually we ended up building a",
    "start": "148280",
    "end": "151209"
  },
  {
    "text": "custom in-house solution instead of",
    "start": "151209",
    "end": "153680"
  },
  {
    "text": "using well maybe a proprietary solution",
    "start": "153680",
    "end": "156350"
  },
  {
    "text": "like vertical or a redshift or or one of",
    "start": "156350",
    "end": "159860"
  },
  {
    "text": "the well-known open-source projects like",
    "start": "159860",
    "end": "162230"
  },
  {
    "text": "well let's say hi and well the thing is",
    "start": "162230",
    "end": "166730"
  },
  {
    "text": "the power solution that we have built",
    "start": "166730",
    "end": "168290"
  },
  {
    "text": "over actually the last couple of months",
    "start": "168290",
    "end": "170209"
  },
  {
    "text": "of course based on the much of the",
    "start": "170209",
    "end": "171620"
  },
  {
    "text": "previous work that we have done is",
    "start": "171620",
    "end": "173120"
  },
  {
    "text": "implemented in Python and now if you",
    "start": "173120",
    "end": "175850"
  },
  {
    "start": "174000",
    "end": "247000"
  },
  {
    "text": "prefer like the really like if you think",
    "start": "175850",
    "end": "178760"
  },
  {
    "text": "about Python is that everybody knows",
    "start": "178760",
    "end": "180230"
  },
  {
    "text": "that poison is a slow language slow",
    "start": "180230",
    "end": "183110"
  },
  {
    "text": "meaning that it's nowhere near the speed",
    "start": "183110",
    "end": "185420"
  },
  {
    "text": "or performance or of C or C++ or Java",
    "start": "185420",
    "end": "189380"
  },
  {
    "text": "even so in a way I mean you might think",
    "start": "189380",
    "end": "192560"
  },
  {
    "text": "that especially when you are interested",
    "start": "192560",
    "end": "193910"
  },
  {
    "text": "in doing low latency processing in",
    "start": "193910",
    "end": "196850"
  },
  {
    "text": "Python with huge amounts of data it's",
    "start": "196850",
    "end": "199579"
  },
  {
    "text": "it's totally not a match it's totally an",
    "start": "199579",
    "end": "202700"
  },
  {
    "text": "oxymoron statement that you are saying",
    "start": "202700",
    "end": "204799"
  },
  {
    "text": "that you are doing a big data processing",
    "start": "204799",
    "end": "206690"
  },
  {
    "text": "in Python and it's low late and so first",
    "start": "206690",
    "end": "208730"
  },
  {
    "text": "the thing is that if you don't care",
    "start": "208730",
    "end": "209930"
  },
  {
    "text": "about latency you can do MapReduce and",
    "start": "209930",
    "end": "211760"
  },
  {
    "text": "then well I mean then it's totally",
    "start": "211760",
    "end": "213650"
  },
  {
    "text": "doable as proven by this go for instance",
    "start": "213650",
    "end": "216049"
  },
  {
    "text": "but the interesting thing here is that",
    "start": "216049",
    "end": "217640"
  },
  {
    "text": "we are definitely interested in kind of",
    "start": "217640",
    "end": "219500"
  },
  {
    "text": "keeping things at low latency and the",
    "start": "219500",
    "end": "221930"
  },
  {
    "text": "reason for that is that we want to",
    "start": "221930",
    "end": "223400"
  },
  {
    "text": "support first ad-hoc query so I mean you",
    "start": "223400",
    "end": "226250"
  },
  {
    "text": "don't have to define the queries that",
    "start": "226250",
    "end": "227720"
  },
  {
    "text": "you are interested in beforehand and",
    "start": "227720",
    "end": "228980"
  },
  {
    "text": "secondly data exploration as well as",
    "start": "228980",
    "end": "231170"
  },
  {
    "text": "data science really kind of doing the",
    "start": "231170",
    "end": "232850"
  },
  {
    "text": "iterations really fast and you shouldn't",
    "start": "232850",
    "end": "235340"
  },
  {
    "text": "have to wait for hours for a MapReduce",
    "start": "235340",
    "end": "237170"
  },
  {
    "text": "job to finish so the question is that",
    "start": "237170",
    "end": "239269"
  },
  {
    "text": "how do we actually do this with billions",
    "start": "239269",
    "end": "241280"
  },
  {
    "text": "and tens of billions of events so that",
    "start": "241280",
    "end": "243440"
  },
  {
    "text": "you can get results in seconds and well",
    "start": "243440",
    "end": "247549"
  },
  {
    "start": "247000",
    "end": "294000"
  },
  {
    "text": "another thing is that of course if you",
    "start": "247549",
    "end": "250549"
  },
  {
    "text": "had like tons of machines that your",
    "start": "250549",
    "end": "253370"
  },
  {
    "text": "disposal which is very easy nowadays in",
    "start": "253370",
    "end": "255650"
  },
  {
    "text": "a way I mean like doing this debuted",
    "start": "255650",
    "end": "257150"
  },
  {
    "text": "computing is very easy I mean especially",
    "start": "257150",
    "end": "259120"
  },
  {
    "text": "you have immutable data per se if you do",
    "start": "259120",
    "end": "260919"
  },
  {
    "text": "have mutable data then it actually gets",
    "start": "260919",
    "end": "262389"
  },
  {
    "text": "replay horribly complicated but if you",
    "start": "262389",
    "end": "264610"
  },
  {
    "text": "have immutable data you can just add",
    "start": "264610",
    "end": "266110"
  },
  {
    "text": "like sure nothing architecture you",
    "start": "266110",
    "end": "267699"
  },
  {
    "text": "should just shark your data have as many",
    "start": "267699",
    "end": "269919"
  },
  {
    "text": "machines as you need and and things are",
    "start": "269919",
    "end": "271840"
  },
  {
    "text": "kind of they do work but I mean it adds",
    "start": "271840",
    "end": "274210"
  },
  {
    "text": "an extra layer of complexity and it adds",
    "start": "274210",
    "end": "277840"
  },
  {
    "text": "also first like all kinds of issues with",
    "start": "277840",
    "end": "280090"
  },
  {
    "text": "cost and complexity and so forth and",
    "start": "280090",
    "end": "281680"
  },
  {
    "text": "especially when you are starting to do",
    "start": "281680",
    "end": "282699"
  },
  {
    "text": "more complicated advanced things like",
    "start": "282699",
    "end": "284169"
  },
  {
    "text": "data science you really want to keep",
    "start": "284169",
    "end": "285880"
  },
  {
    "text": "things simple so as a kind of",
    "start": "285880",
    "end": "288310"
  },
  {
    "text": "interesting kind of a starting point",
    "start": "288310",
    "end": "289540"
  },
  {
    "text": "motivation for the whole thing about",
    "start": "289540",
    "end": "290889"
  },
  {
    "text": "Python and Python being slow",
    "start": "290889",
    "end": "292840"
  },
  {
    "text": "here's a small benchmark so I mean this",
    "start": "292840",
    "end": "295060"
  },
  {
    "start": "294000",
    "end": "462000"
  },
  {
    "text": "is a very small of course like a subset",
    "start": "295060",
    "end": "296949"
  },
  {
    "text": "of data I mean it's not small in that so",
    "start": "296949",
    "end": "298720"
  },
  {
    "text": "it's and still I mean 1.5 billion rows",
    "start": "298720",
    "end": "300430"
  },
  {
    "text": "in your database is a pretty sizable",
    "start": "300430",
    "end": "302350"
  },
  {
    "text": "database but I mean like the I mean",
    "start": "302350",
    "end": "304210"
  },
  {
    "text": "that's the kind of amount of data we are",
    "start": "304210",
    "end": "305710"
  },
  {
    "text": "probably producing in an hour or so so",
    "start": "305710",
    "end": "307949"
  },
  {
    "text": "the size of the data data set is about a",
    "start": "307949",
    "end": "311020"
  },
  {
    "text": "little bit more than half a terabyte so",
    "start": "311020",
    "end": "313060"
  },
  {
    "text": "not that much obviously in our benchmark",
    "start": "313060",
    "end": "315280"
  },
  {
    "text": "we really care about ladies so smaller",
    "start": "315280",
    "end": "317470"
  },
  {
    "text": "execution time is better",
    "start": "317470",
    "end": "318910"
  },
  {
    "text": "we chose the fastest result from ten",
    "start": "318910",
    "end": "321610"
  },
  {
    "text": "consecutive runs meaning that well I",
    "start": "321610",
    "end": "323620"
  },
  {
    "text": "mean like if there happens to be just",
    "start": "323620",
    "end": "325270"
  },
  {
    "text": "one path that or if for some reason we",
    "start": "325270",
    "end": "327220"
  },
  {
    "text": "don't count that and we don't of course",
    "start": "327220",
    "end": "329169"
  },
  {
    "text": "- the result so this is really about",
    "start": "329169",
    "end": "331210"
  },
  {
    "text": "like testing the query performance well",
    "start": "331210",
    "end": "334470"
  },
  {
    "text": "another thing is that we are comparing",
    "start": "334470",
    "end": "336700"
  },
  {
    "text": "our system in this motivational example",
    "start": "336700",
    "end": "339010"
  },
  {
    "text": "the Amazon redshift and I guess will",
    "start": "339010",
    "end": "341889"
  },
  {
    "text": "actually mention about redshift in the",
    "start": "341889",
    "end": "343300"
  },
  {
    "text": "in the last talk so unless you have",
    "start": "343300",
    "end": "344830"
  },
  {
    "text": "heard about redshift it's a data",
    "start": "344830",
    "end": "346750"
  },
  {
    "text": "warehouse offering by Amazon meaning",
    "start": "346750",
    "end": "349180"
  },
  {
    "text": "that it's basically data warehouses",
    "start": "349180",
    "end": "350470"
  },
  {
    "text": "service so if you have ever used Amazon",
    "start": "350470",
    "end": "352690"
  },
  {
    "text": "services so you know that it's very easy",
    "start": "352690",
    "end": "354160"
  },
  {
    "text": "to get started with these things so you",
    "start": "354160",
    "end": "355660"
  },
  {
    "text": "just click the button and you have your",
    "start": "355660",
    "end": "357070"
  },
  {
    "text": "own data warehouse up and running well",
    "start": "357070",
    "end": "359979"
  },
  {
    "text": "in this case like I mentioned I mean",
    "start": "359979",
    "end": "361449"
  },
  {
    "text": "like this is not about distributed",
    "start": "361449",
    "end": "363039"
  },
  {
    "text": "computing that would be a separate Bowl",
    "start": "363039",
    "end": "364539"
  },
  {
    "text": "and in this kind of you know in many",
    "start": "364539",
    "end": "365770"
  },
  {
    "text": "ways I mean that's kind of it I mean",
    "start": "365770",
    "end": "367389"
  },
  {
    "text": "there are really many good solutions for",
    "start": "367389",
    "end": "368740"
  },
  {
    "text": "that this is about asking how much we",
    "start": "368740",
    "end": "371080"
  },
  {
    "text": "can actually deal with a single machine",
    "start": "371080",
    "end": "372340"
  },
  {
    "text": "so look I mean we are taking a single",
    "start": "372340",
    "end": "374560"
  },
  {
    "text": "server that's actually the most powerful",
    "start": "374560",
    "end": "376720"
  },
  {
    "text": "server that you can find in Amazon with",
    "start": "376720",
    "end": "379030"
  },
  {
    "text": "244 244 gigabytes of memory 16 cores and",
    "start": "379030",
    "end": "383370"
  },
  {
    "text": "so it's pretty much a monster machine so",
    "start": "383370",
    "end": "386080"
  },
  {
    "text": "it's it's really pretty decent",
    "start": "386080",
    "end": "387729"
  },
  {
    "text": "this isn't iron and we kick",
    "start": "387729",
    "end": "390550"
  },
  {
    "text": "purple cluster in red six so we take",
    "start": "390550",
    "end": "392620"
  },
  {
    "text": "three notes unfortunately since kind of",
    "start": "392620",
    "end": "394599"
  },
  {
    "text": "otherwise it wouldn't work and actually",
    "start": "394599",
    "end": "396759"
  },
  {
    "text": "in this case red city is getting twice",
    "start": "396759",
    "end": "398169"
  },
  {
    "text": "the number of cores but about the same",
    "start": "398169",
    "end": "400030"
  },
  {
    "text": "amount of RAM and well so it happens",
    "start": "400030",
    "end": "402940"
  },
  {
    "text": "that actually Red's if if you've run it",
    "start": "402940",
    "end": "404560"
  },
  {
    "text": "in this configuration it would end up",
    "start": "404560",
    "end": "406030"
  },
  {
    "text": "being a little bit costlier but I mean",
    "start": "406030",
    "end": "408250"
  },
  {
    "text": "maybe maybe that's not the consideration",
    "start": "408250",
    "end": "409419"
  },
  {
    "text": "and now of course if you if you wonder",
    "start": "409419",
    "end": "413860"
  },
  {
    "text": "if actually red suit is a bad apple so",
    "start": "413860",
    "end": "415960"
  },
  {
    "text": "it's just a crappy system that we decide",
    "start": "415960",
    "end": "417550"
  },
  {
    "text": "to compare against at least some people",
    "start": "417550",
    "end": "419110"
  },
  {
    "text": "playing that is faster than hive I don't",
    "start": "419110",
    "end": "420849"
  },
  {
    "text": "have personal experience but like you",
    "start": "420849",
    "end": "422199"
  },
  {
    "text": "can actually read the blog articles and",
    "start": "422199",
    "end": "424210"
  },
  {
    "text": "believe them if you like another thing",
    "start": "424210",
    "end": "426580"
  },
  {
    "text": "is that looking at the actual numbers",
    "start": "426580",
    "end": "430380"
  },
  {
    "text": "since this is all about analytics so I",
    "start": "430380",
    "end": "433509"
  },
  {
    "text": "should have made it maybe more clear",
    "start": "433509",
    "end": "434949"
  },
  {
    "text": "that in contrast the maybe let's say",
    "start": "434949",
    "end": "437650"
  },
  {
    "text": "elastic search which is really great for",
    "start": "437650",
    "end": "439360"
  },
  {
    "text": "a heterogeneous data and structured data",
    "start": "439360",
    "end": "441490"
  },
  {
    "text": "and so forth this is really about like",
    "start": "441490",
    "end": "443409"
  },
  {
    "text": "having numerical data having tons of",
    "start": "443409",
    "end": "445569"
  },
  {
    "text": "numerical data and having large",
    "start": "445569",
    "end": "446800"
  },
  {
    "text": "aggregations over numerical data and not",
    "start": "446800",
    "end": "448990"
  },
  {
    "text": "so much about looking up single rows in",
    "start": "448990",
    "end": "451599"
  },
  {
    "text": "a database like you what you would do",
    "start": "451599",
    "end": "453190"
  },
  {
    "text": "with the no sequel database or key value",
    "start": "453190",
    "end": "455469"
  },
  {
    "text": "database say so in this case we are",
    "start": "455469",
    "end": "457659"
  },
  {
    "text": "taking probably the simplest aggregation",
    "start": "457659",
    "end": "459819"
  },
  {
    "text": "that you can imagine you are summing",
    "start": "459819",
    "end": "461500"
  },
  {
    "text": "over a column in a table and remember",
    "start": "461500",
    "end": "464560"
  },
  {
    "start": "462000",
    "end": "588000"
  },
  {
    "text": "that again we have about 1.5 billion",
    "start": "464560",
    "end": "466810"
  },
  {
    "text": "rows so you are basically summing over",
    "start": "466810",
    "end": "468550"
  },
  {
    "text": "1.5 billion values so it's a non-trivial",
    "start": "468550",
    "end": "471219"
  },
  {
    "text": "thing but as you can see both red shift",
    "start": "471219",
    "end": "473590"
  },
  {
    "text": "and our system kind of a manage that",
    "start": "473590",
    "end": "475330"
  },
  {
    "text": "pretty well and yes our system is faster",
    "start": "475330",
    "end": "477969"
  },
  {
    "text": "but I mean the difference isn't that",
    "start": "477969",
    "end": "479259"
  },
  {
    "text": "huge",
    "start": "479259",
    "end": "479969"
  },
  {
    "text": "one thing to note here is that our first",
    "start": "479969",
    "end": "482800"
  },
  {
    "text": "both the system scale pretty much",
    "start": "482800",
    "end": "484690"
  },
  {
    "text": "linearly so imagine that if you had 10",
    "start": "484690",
    "end": "487000"
  },
  {
    "text": "times more data",
    "start": "487000",
    "end": "487960"
  },
  {
    "text": "15 billion data points red zipped would",
    "start": "487960",
    "end": "490569"
  },
  {
    "text": "most likely take something like 19",
    "start": "490569",
    "end": "492219"
  },
  {
    "text": "seconds and our system would take six",
    "start": "492219",
    "end": "494020"
  },
  {
    "text": "seconds so it's not an order of",
    "start": "494020",
    "end": "495430"
  },
  {
    "text": "magnitude difference but it actually",
    "start": "495430",
    "end": "497650"
  },
  {
    "text": "might make a difference when you're",
    "start": "497650",
    "end": "499180"
  },
  {
    "text": "actually doing your interactive analysis",
    "start": "499180",
    "end": "501150"
  },
  {
    "text": "another example a typical thing that you",
    "start": "501150",
    "end": "504099"
  },
  {
    "text": "might want to do is that you take an",
    "start": "504099",
    "end": "506860"
  },
  {
    "text": "aggregation and you want to group that",
    "start": "506860",
    "end": "508630"
  },
  {
    "text": "by a dimension dimension might be a",
    "start": "508630",
    "end": "510400"
  },
  {
    "text": "country it might be a customer ID or",
    "start": "510400",
    "end": "512620"
  },
  {
    "text": "something of that kind again I mean the",
    "start": "512620",
    "end": "514810"
  },
  {
    "text": "systems are pretty much comparable and",
    "start": "514810",
    "end": "516490"
  },
  {
    "text": "again you might consider that it's",
    "start": "516490",
    "end": "518469"
  },
  {
    "text": "pretty amazing that something written in",
    "start": "518469",
    "end": "519909"
  },
  {
    "text": "Python is as fast as",
    "start": "519909",
    "end": "522000"
  },
  {
    "text": "as pretty much state-of-the-art",
    "start": "522000",
    "end": "523969"
  },
  {
    "text": "distributed database that's really kind",
    "start": "523970",
    "end": "526290"
  },
  {
    "text": "of written by people who should know",
    "start": "526290",
    "end": "528180"
  },
  {
    "text": "what they're doing and I'm sure that",
    "start": "528180",
    "end": "529530"
  },
  {
    "text": "they do well actually things start",
    "start": "529530",
    "end": "533490"
  },
  {
    "text": "getting more interesting when you start",
    "start": "533490",
    "end": "535020"
  },
  {
    "text": "digging aggregations over a number of",
    "start": "535020",
    "end": "536640"
  },
  {
    "text": "columns so here we are taking an",
    "start": "536640",
    "end": "538950"
  },
  {
    "text": "aggregation the same summing over seven",
    "start": "538950",
    "end": "541080"
  },
  {
    "text": "columns and now suddenly our system is",
    "start": "541080",
    "end": "543060"
  },
  {
    "text": "five times faster than redshift so you",
    "start": "543060",
    "end": "545850"
  },
  {
    "text": "can kind of a guess the pattern actually",
    "start": "545850",
    "end": "548070"
  },
  {
    "text": "if you pass forward this 250 columns you",
    "start": "548070",
    "end": "551700"
  },
  {
    "text": "can see that MSN starts taking 8 minutes",
    "start": "551700",
    "end": "553950"
  },
  {
    "text": "whereas our system is pretty much the",
    "start": "553950",
    "end": "555450"
  },
  {
    "text": "same as before and now of course you",
    "start": "555450",
    "end": "559680"
  },
  {
    "text": "might say that well it's a pretty kind",
    "start": "559680",
    "end": "561660"
  },
  {
    "text": "of a bad example I mean no one ever",
    "start": "561660",
    "end": "563370"
  },
  {
    "text": "wants to do an aggregation over 250",
    "start": "563370",
    "end": "566370"
  },
  {
    "text": "columns",
    "start": "566370",
    "end": "567230"
  },
  {
    "text": "well except if you do data mining or",
    "start": "567230",
    "end": "569880"
  },
  {
    "text": "data science or anything of that kind",
    "start": "569880",
    "end": "571140"
  },
  {
    "text": "that actually let's say it requires you",
    "start": "571140",
    "end": "572880"
  },
  {
    "text": "to kind of take all the features of a",
    "start": "572880",
    "end": "574650"
  },
  {
    "text": "certain point and then you want to see",
    "start": "574650",
    "end": "576960"
  },
  {
    "text": "the results so it's it's actually a",
    "start": "576960",
    "end": "578340"
  },
  {
    "text": "pretty realistic example and this was",
    "start": "578340",
    "end": "579900"
  },
  {
    "text": "one of the motivating reasons why we",
    "start": "579900",
    "end": "581460"
  },
  {
    "text": "started considering alternatives to",
    "start": "581460",
    "end": "583620"
  },
  {
    "text": "redshift so in stuff courses you can",
    "start": "583620",
    "end": "586140"
  },
  {
    "text": "imagine this only get worse when you get",
    "start": "586140",
    "end": "587550"
  },
  {
    "text": "more data so again this is a Python",
    "start": "587550",
    "end": "592050"
  },
  {
    "start": "588000",
    "end": "672000"
  },
  {
    "text": "based system I mean it should be totally",
    "start": "592050",
    "end": "593790"
  },
  {
    "text": "impossible to have any anything like",
    "start": "593790",
    "end": "595890"
  },
  {
    "text": "this so I mean it's a single server",
    "start": "595890",
    "end": "597510"
  },
  {
    "text": "it's 1.5 billion data points and it's",
    "start": "597510",
    "end": "600780"
  },
  {
    "text": "outperforming the the best of the breed",
    "start": "600780",
    "end": "603930"
  },
  {
    "text": "system running on three servers having",
    "start": "603930",
    "end": "605910"
  },
  {
    "text": "twice the number of cores well actually",
    "start": "605910",
    "end": "609170"
  },
  {
    "text": "it's a real system it does exist and the",
    "start": "609170",
    "end": "612870"
  },
  {
    "text": "stack looks pretty much like this so I",
    "start": "612870",
    "end": "614880"
  },
  {
    "text": "know that I don't have too much time so",
    "start": "614880",
    "end": "618240"
  },
  {
    "text": "unfortunately I don't go into detail",
    "start": "618240",
    "end": "619890"
  },
  {
    "text": "here so this is pretty much an overview",
    "start": "619890",
    "end": "621270"
  },
  {
    "text": "talk I'm pretty happy to kind of give",
    "start": "621270",
    "end": "623640"
  },
  {
    "text": "you any details you might be interested",
    "start": "623640",
    "end": "625140"
  },
  {
    "text": "in after the talk but I just want to",
    "start": "625140",
    "end": "627330"
  },
  {
    "text": "highlight these three items here and so",
    "start": "627330",
    "end": "630900"
  },
  {
    "text": "basically just to give you an idea how",
    "start": "630900",
    "end": "632370"
  },
  {
    "text": "it works I mean typically analysts or",
    "start": "632370",
    "end": "634920"
  },
  {
    "text": "anyone actually wanting to do the",
    "start": "634920",
    "end": "636630"
  },
  {
    "text": "interactive analysis or data exploration",
    "start": "636630",
    "end": "638420"
  },
  {
    "text": "actually would use a tool like Excel or",
    "start": "638420",
    "end": "641070"
  },
  {
    "text": "tableau or which is a visual business",
    "start": "641070",
    "end": "643650"
  },
  {
    "text": "intelligence tool to actually generate",
    "start": "643650",
    "end": "645210"
  },
  {
    "text": "sequel queries that then hit Postgres",
    "start": "645210",
    "end": "647580"
  },
  {
    "text": "that then actually hit this thing called",
    "start": "647580",
    "end": "648900"
  },
  {
    "text": "multi court that I'll be talking about",
    "start": "648900",
    "end": "650160"
  },
  {
    "text": "soon then it hits our servers then it",
    "start": "650160",
    "end": "652500"
  },
  {
    "text": "goes to these worker processes that we",
    "start": "652500",
    "end": "654660"
  },
  {
    "text": "have",
    "start": "654660",
    "end": "655170"
  },
  {
    "text": "one per core and then goes to this",
    "start": "655170",
    "end": "657120"
  },
  {
    "text": "tingled gnome but more about that later",
    "start": "657120",
    "end": "658500"
  },
  {
    "text": "and then to LLVM and then to our",
    "start": "658500",
    "end": "660779"
  },
  {
    "text": "specially encoded data and that's pretty",
    "start": "660779",
    "end": "663329"
  },
  {
    "text": "much the process how it works and I want",
    "start": "663329",
    "end": "667019"
  },
  {
    "text": "to highlight these things there I mean",
    "start": "667019",
    "end": "668940"
  },
  {
    "text": "starting from bottom up since I think",
    "start": "668940",
    "end": "670560"
  },
  {
    "text": "that's the interesting part well really",
    "start": "670560",
    "end": "674639"
  },
  {
    "start": "672000",
    "end": "709000"
  },
  {
    "text": "the thing and the secret sauce here and",
    "start": "674639",
    "end": "677010"
  },
  {
    "text": "and the reason why it is actually",
    "start": "677010",
    "end": "678630"
  },
  {
    "text": "possible to do this with python is that",
    "start": "678630",
    "end": "680459"
  },
  {
    "text": "we do care about data structures so the",
    "start": "680459",
    "end": "683820"
  },
  {
    "text": "thing is that actually kind of caring",
    "start": "683820",
    "end": "685529"
  },
  {
    "text": "about the language that you are using in",
    "start": "685529",
    "end": "687510"
  },
  {
    "text": "a way yes you can get like really order",
    "start": "687510",
    "end": "689430"
  },
  {
    "text": "of magnitude improvements let's say 10",
    "start": "689430",
    "end": "691139"
  },
  {
    "text": "times faster if you you see instead of",
    "start": "691139",
    "end": "692730"
  },
  {
    "text": "python but the thing is that you can get",
    "start": "692730",
    "end": "694649"
  },
  {
    "text": "infinite improvements if you actually",
    "start": "694649",
    "end": "696570"
  },
  {
    "text": "rethink the algorithms and if you",
    "start": "696570",
    "end": "698310"
  },
  {
    "text": "rethink the data structures that you are",
    "start": "698310",
    "end": "700980"
  },
  {
    "text": "using so let me just give you a good",
    "start": "700980",
    "end": "703470"
  },
  {
    "text": "idea what I'm talking about so here",
    "start": "703470",
    "end": "706339"
  },
  {
    "text": "that's really the data that we are",
    "start": "706339",
    "end": "708480"
  },
  {
    "text": "talking about so it's events I mean I'm",
    "start": "708480",
    "end": "711750"
  },
  {
    "start": "709000",
    "end": "1036000"
  },
  {
    "text": "sure that like all of you have seen",
    "start": "711750",
    "end": "713100"
  },
  {
    "text": "something like this so it's basic like",
    "start": "713100",
    "end": "715019"
  },
  {
    "text": "JSON messages that the data is produced",
    "start": "715019",
    "end": "718230"
  },
  {
    "text": "by our system so it's very homogeneous",
    "start": "718230",
    "end": "720500"
  },
  {
    "text": "we know the fields that it contains and",
    "start": "720500",
    "end": "723649"
  },
  {
    "text": "they all have the same form basically",
    "start": "723649",
    "end": "726630"
  },
  {
    "text": "and like you see I mean like we have",
    "start": "726630",
    "end": "728970"
  },
  {
    "text": "some boolean field some strings some",
    "start": "728970",
    "end": "731130"
  },
  {
    "text": "integers all nice and simple now of",
    "start": "731130",
    "end": "734370"
  },
  {
    "text": "course well again I mean we have 1.5",
    "start": "734370",
    "end": "736050"
  },
  {
    "text": "billion of these probes in the benchmark",
    "start": "736050",
    "end": "738290"
  },
  {
    "text": "well I mean since it's very homogeneous",
    "start": "738290",
    "end": "740399"
  },
  {
    "text": "data what you can do is that you can of",
    "start": "740399",
    "end": "741959"
  },
  {
    "text": "course property des you can drop the",
    "start": "741959",
    "end": "744720"
  },
  {
    "text": "field names and again it's the same data",
    "start": "744720",
    "end": "746730"
  },
  {
    "text": "nothing changed is it it's a very",
    "start": "746730",
    "end": "748740"
  },
  {
    "text": "trivial transformation well I mean what",
    "start": "748740",
    "end": "751500"
  },
  {
    "text": "you can do as well is that a person if",
    "start": "751500",
    "end": "753029"
  },
  {
    "text": "this is the stress and it's most likely",
    "start": "753029",
    "end": "754500"
  },
  {
    "text": "strings may be sitting somewhere on your",
    "start": "754500",
    "end": "756600"
  },
  {
    "text": "disk waiting to be decoded as JSON so",
    "start": "756600",
    "end": "759420"
  },
  {
    "text": "that's not very nice what you can do",
    "start": "759420",
    "end": "761250"
  },
  {
    "text": "instead is that you can actually then go",
    "start": "761250",
    "end": "763350"
  },
  {
    "text": "encode everything as integers so again I",
    "start": "763350",
    "end": "765930"
  },
  {
    "text": "mean like here so true and false could",
    "start": "765930",
    "end": "769649"
  },
  {
    "text": "be zeros and ones obviously countries",
    "start": "769649",
    "end": "772319"
  },
  {
    "text": "can be encoded with integers between",
    "start": "772319",
    "end": "774389"
  },
  {
    "text": "let's say 0 and 300 like you give an",
    "start": "774389",
    "end": "776519"
  },
  {
    "text": "integer to each country the cost could",
    "start": "776519",
    "end": "779220"
  },
  {
    "text": "be again another integer obviously so",
    "start": "779220",
    "end": "781319"
  },
  {
    "text": "you get this like a nice matrix",
    "start": "781319",
    "end": "783120"
  },
  {
    "text": "integers so it's a three by three matrix",
    "start": "783120",
    "end": "785040"
  },
  {
    "text": "and now well the thing is that computers",
    "start": "785040",
    "end": "788129"
  },
  {
    "text": "actually do like matrices so matrices",
    "start": "788129",
    "end": "789990"
  },
  {
    "text": "are really really nice in computers",
    "start": "789990",
    "end": "791639"
  },
  {
    "text": "point of view and well the thing is that",
    "start": "791639",
    "end": "794730"
  },
  {
    "text": "that's of course is very small matrix",
    "start": "794730",
    "end": "796499"
  },
  {
    "text": "actually if you now think that we have",
    "start": "796499",
    "end": "798990"
  },
  {
    "text": "1.5 billion of those rows it looks more",
    "start": "798990",
    "end": "802350"
  },
  {
    "text": "something like this and this is not 1.5",
    "start": "802350",
    "end": "804779"
  },
  {
    "text": "billion this is something I do hundred",
    "start": "804779",
    "end": "806339"
  },
  {
    "text": "but you get the idea it's this kind of",
    "start": "806339",
    "end": "807990"
  },
  {
    "text": "the same idea we have lots of integers",
    "start": "807990",
    "end": "809610"
  },
  {
    "text": "but instead of having a one big solid",
    "start": "809610",
    "end": "812160"
  },
  {
    "text": "red matrix it's sparse it's it's body",
    "start": "812160",
    "end": "815220"
  },
  {
    "text": "red meaning that actually we don't have",
    "start": "815220",
    "end": "818089"
  },
  {
    "text": "values for all possible rows so it",
    "start": "818089",
    "end": "821459"
  },
  {
    "text": "becomes a sparse matrix and that's a",
    "start": "821459",
    "end": "823589"
  },
  {
    "text": "very good starting point and there I",
    "start": "823589",
    "end": "826290"
  },
  {
    "text": "have that that's pretty much kind of did",
    "start": "826290",
    "end": "828240"
  },
  {
    "text": "100 percent of the original size so the",
    "start": "828240",
    "end": "830129"
  },
  {
    "text": "question is that can we actually make",
    "start": "830129",
    "end": "831389"
  },
  {
    "text": "this more efficient since still this",
    "start": "831389",
    "end": "833459"
  },
  {
    "text": "matrix is actually pretty huge so if you",
    "start": "833459",
    "end": "835680"
  },
  {
    "text": "just took all your data and encoded it",
    "start": "835680",
    "end": "838559"
  },
  {
    "text": "with integer binary data and had it as",
    "start": "838559",
    "end": "841230"
  },
  {
    "text": "far as huge matrix still I mean",
    "start": "841230",
    "end": "843480"
  },
  {
    "text": "processing that would take quite a while",
    "start": "843480",
    "end": "845420"
  },
  {
    "text": "well the first thing that you can do is",
    "start": "845420",
    "end": "848670"
  },
  {
    "text": "that you can recognize the fact the",
    "start": "848670",
    "end": "850949"
  },
  {
    "text": "different columns have different types",
    "start": "850949",
    "end": "852509"
  },
  {
    "text": "so this is the first basic observation",
    "start": "852509",
    "end": "854879"
  },
  {
    "text": "that all columnar database is probably",
    "start": "854879",
    "end": "857100"
  },
  {
    "text": "did already in 1980 is that well I mean",
    "start": "857100",
    "end": "859740"
  },
  {
    "text": "some of the columns might be strings",
    "start": "859740",
    "end": "861300"
  },
  {
    "text": "some of them might be like we had wool",
    "start": "861300",
    "end": "864300"
  },
  {
    "text": "and flags so obviously you can encode a",
    "start": "864300",
    "end": "866189"
  },
  {
    "text": "boolean flag as a bit instead of well",
    "start": "866189",
    "end": "868949"
  },
  {
    "text": "it's a integer and let's say that like",
    "start": "868949",
    "end": "871620"
  },
  {
    "text": "you have cost value that I had in the",
    "start": "871620",
    "end": "874050"
  },
  {
    "text": "example and the cost price between 0 & 1",
    "start": "874050",
    "end": "876839"
  },
  {
    "text": "million so well then you can just use 3",
    "start": "876839",
    "end": "879240"
  },
  {
    "text": "bytes or a 24-bit integer to encode that",
    "start": "879240",
    "end": "881879"
  },
  {
    "text": "value so again I mean you get huge huge",
    "start": "881879",
    "end": "884490"
  },
  {
    "text": "savings like already just by doing this",
    "start": "884490",
    "end": "886769"
  },
  {
    "text": "you get like 50% smaller matrix that",
    "start": "886769",
    "end": "889170"
  },
  {
    "text": "what do you started with so it's a it's",
    "start": "889170",
    "end": "890999"
  },
  {
    "text": "a big improvement and this is a for",
    "start": "890999",
    "end": "892319"
  },
  {
    "text": "something that all holnar databases do",
    "start": "892319",
    "end": "894480"
  },
  {
    "text": "including redshift so that's really the",
    "start": "894480",
    "end": "896939"
  },
  {
    "text": "basic basic trick well still I mean the",
    "start": "896939",
    "end": "899699"
  },
  {
    "text": "question is can you do something more",
    "start": "899699",
    "end": "901939"
  },
  {
    "text": "well the the matrix looks pretty random",
    "start": "901939",
    "end": "904829"
  },
  {
    "text": "so I mean like kind of a dozen it's not",
    "start": "904829",
    "end": "908100"
  },
  {
    "text": "obvious that what you can do with the",
    "start": "908100",
    "end": "909300"
  },
  {
    "text": "random matrix but the thing is that",
    "start": "909300",
    "end": "911069"
  },
  {
    "text": "actually when you sort the matrix let me",
    "start": "911069",
    "end": "913340"
  },
  {
    "text": "patterns start to emerge so it's not",
    "start": "913340",
    "end": "915470"
  },
  {
    "text": "like a random matrix after all but when",
    "start": "915470",
    "end": "917810"
  },
  {
    "text": "you actually store it the rows do start",
    "start": "917810",
    "end": "919310"
  },
  {
    "text": "seeing that well I mean for one I mean",
    "start": "919310",
    "end": "920960"
  },
  {
    "text": "girl like all kinds of things that you",
    "start": "920960",
    "end": "923720"
  },
  {
    "text": "see happening and always when you see",
    "start": "923720",
    "end": "925610"
  },
  {
    "text": "things like that you might start",
    "start": "925610",
    "end": "926870"
  },
  {
    "text": "thinking that well lemme maybe there is",
    "start": "926870",
    "end": "928190"
  },
  {
    "text": "a way how we can actually leverage this",
    "start": "928190",
    "end": "930050"
  },
  {
    "text": "information and that's really the case",
    "start": "930050",
    "end": "932720"
  },
  {
    "text": "you can actually a note by the way that",
    "start": "932720",
    "end": "934550"
  },
  {
    "text": "this is exactly the same matrix we just",
    "start": "934550",
    "end": "936170"
  },
  {
    "text": "saw read it the rows so it's the same",
    "start": "936170",
    "end": "937580"
  },
  {
    "text": "size and the same information and and",
    "start": "937580",
    "end": "940010"
  },
  {
    "text": "all these transformations are a lossless",
    "start": "940010",
    "end": "942110"
  },
  {
    "text": "so I mean we are not losing any data but",
    "start": "942110",
    "end": "944630"
  },
  {
    "text": "I mean one obvious thing that we can do",
    "start": "944630",
    "end": "946010"
  },
  {
    "text": "is that we can get rid of dublicate rows",
    "start": "946010",
    "end": "948140"
  },
  {
    "text": "so we can just kind of squeeze the",
    "start": "948140",
    "end": "950360"
  },
  {
    "text": "matrix and then get rid of like",
    "start": "950360",
    "end": "952100"
  },
  {
    "text": "redundant data so obviously if you have",
    "start": "952100",
    "end": "954200"
  },
  {
    "text": "three rows that have exactly the same",
    "start": "954200",
    "end": "955940"
  },
  {
    "text": "values and then they have count 1 you",
    "start": "955940",
    "end": "958730"
  },
  {
    "text": "can just represent them as one row and",
    "start": "958730",
    "end": "960529"
  },
  {
    "text": "say that the count is 3 and now when you",
    "start": "960529",
    "end": "962660"
  },
  {
    "text": "are summing over these things you are",
    "start": "962660",
    "end": "964400"
  },
  {
    "text": "summing over one row instead of three",
    "start": "964400",
    "end": "966110"
  },
  {
    "text": "rows but the result is exactly the same",
    "start": "966110",
    "end": "967970"
  },
  {
    "text": "and again I mean the matrix is much much",
    "start": "967970",
    "end": "970520"
  },
  {
    "text": "smaller so that's a really a nice nice",
    "start": "970520",
    "end": "973130"
  },
  {
    "text": "like way to kind of a compress the stuff",
    "start": "973130",
    "end": "975589"
  },
  {
    "text": "that we are working on well there's at",
    "start": "975589",
    "end": "979580"
  },
  {
    "text": "least one more thing that we can do",
    "start": "979580",
    "end": "980870"
  },
  {
    "text": "actually they're like tons of things",
    "start": "980870",
    "end": "982160"
  },
  {
    "text": "that we can do but I mean this is just a",
    "start": "982160",
    "end": "983810"
  },
  {
    "text": "kind of a give you an idea of the",
    "start": "983810",
    "end": "985460"
  },
  {
    "text": "process well I mean one is that what I",
    "start": "985460",
    "end": "987650"
  },
  {
    "text": "mentioned about different types yes I",
    "start": "987650",
    "end": "989570"
  },
  {
    "text": "mean it's a good idea what like all",
    "start": "989570",
    "end": "991100"
  },
  {
    "text": "these systems do that you use different",
    "start": "991100",
    "end": "993680"
  },
  {
    "text": "types for different columns but still",
    "start": "993680",
    "end": "995510"
  },
  {
    "text": "there's the question that if you use",
    "start": "995510",
    "end": "996710"
  },
  {
    "text": "let's say the pre byte column that I",
    "start": "996710",
    "end": "998870"
  },
  {
    "text": "mentioned and you have a value of one",
    "start": "998870",
    "end": "1000790"
  },
  {
    "text": "and you are still using three bytes then",
    "start": "1000790",
    "end": "1002530"
  },
  {
    "text": "odd value of one which is like really",
    "start": "1002530",
    "end": "1004420"
  },
  {
    "text": "really really really redundant since I",
    "start": "1004420",
    "end": "1007300"
  },
  {
    "text": "mean you really don't need three bytes",
    "start": "1007300",
    "end": "1008560"
  },
  {
    "text": "for that so actually what you can do is",
    "start": "1008560",
    "end": "1010030"
  },
  {
    "text": "that you can devise some encoding",
    "start": "1010030",
    "end": "1011260"
  },
  {
    "text": "variable length encoding so that you use",
    "start": "1011260",
    "end": "1013480"
  },
  {
    "text": "the minimal number of bits to encode",
    "start": "1013480",
    "end": "1015430"
  },
  {
    "text": "these values and now so it happens that",
    "start": "1015430",
    "end": "1017860"
  },
  {
    "text": "if you look at the result the result is",
    "start": "1017860",
    "end": "1020920"
  },
  {
    "text": "rapes kind of a way smaller than what we",
    "start": "1020920",
    "end": "1023140"
  },
  {
    "text": "started with actually it's just a 15% of",
    "start": "1023140",
    "end": "1025540"
  },
  {
    "text": "the original size and it's all very",
    "start": "1025540",
    "end": "1027790"
  },
  {
    "text": "compactly encoded and like you have",
    "start": "1027790",
    "end": "1030010"
  },
  {
    "text": "minimize really many minimize the",
    "start": "1030010",
    "end": "1031900"
  },
  {
    "text": "redundancy matrix and why this is",
    "start": "1031900",
    "end": "1034420"
  },
  {
    "text": "important well I mean there are number",
    "start": "1034420",
    "end": "1039069"
  },
  {
    "start": "1036000",
    "end": "1364000"
  },
  {
    "text": "of reasons one is that well overall",
    "start": "1039069",
    "end": "1040870"
  },
  {
    "text": "there's less redundancy",
    "start": "1040870",
    "end": "1042168"
  },
  {
    "text": "there is just like a fewer computations",
    "start": "1042169",
    "end": "1044839"
  },
  {
    "text": "that you need to perform so I mean like",
    "start": "1044839",
    "end": "1046428"
  },
  {
    "text": "I mentioned I mean you want to get rid",
    "start": "1046429",
    "end": "1048199"
  },
  {
    "text": "of duplicate results that's us with",
    "start": "1048199",
    "end": "1050119"
  },
  {
    "text": "result to unnecessary work being done",
    "start": "1050119",
    "end": "1052359"
  },
  {
    "text": "but maybe the most important point is",
    "start": "1052359",
    "end": "1054799"
  },
  {
    "text": "that like these matrices or any dense",
    "start": "1054799",
    "end": "1057379"
  },
  {
    "text": "data is free cash efficient so you know",
    "start": "1057379",
    "end": "1061369"
  },
  {
    "text": "how CPUs work so when you do something",
    "start": "1061369",
    "end": "1064129"
  },
  {
    "text": "let's say the CPU knows that I need to",
    "start": "1064129",
    "end": "1066679"
  },
  {
    "text": "sum over some column it goes to Ram it",
    "start": "1066679",
    "end": "1069080"
  },
  {
    "text": "fetches the item from RAM it maybe goes",
    "start": "1069080",
    "end": "1071480"
  },
  {
    "text": "to l lq - that's near the cpu it goes to",
    "start": "1071480",
    "end": "1074690"
  },
  {
    "text": "l1 cache and then just the computation",
    "start": "1074690",
    "end": "1076999"
  },
  {
    "text": "it fetches the next number and if it so",
    "start": "1076999",
    "end": "1079609"
  },
  {
    "text": "happens that the number is already in",
    "start": "1079609",
    "end": "1081350"
  },
  {
    "text": "the cache you don't have to go to the",
    "start": "1081350",
    "end": "1083389"
  },
  {
    "text": "RAM and actually you can do probably",
    "start": "1083389",
    "end": "1085100"
  },
  {
    "text": "like thousand times more work just by",
    "start": "1085100",
    "end": "1087139"
  },
  {
    "text": "using the data that's in the cache then",
    "start": "1087139",
    "end": "1088940"
  },
  {
    "text": "what it would take if you actually",
    "start": "1088940",
    "end": "1090649"
  },
  {
    "text": "needed to go to grab so you really",
    "start": "1090649",
    "end": "1092840"
  },
  {
    "text": "really want to pay close attention to",
    "start": "1092840",
    "end": "1094399"
  },
  {
    "text": "cache efficiency of your data if if you",
    "start": "1094399",
    "end": "1096859"
  },
  {
    "text": "are operating at this level and well I",
    "start": "1096859",
    "end": "1100039"
  },
  {
    "text": "mean one interesting feature of this is",
    "start": "1100039",
    "end": "1101629"
  },
  {
    "text": "that also when you are kind of getting",
    "start": "1101629",
    "end": "1102889"
  },
  {
    "text": "rid of redundancy you are kind of",
    "start": "1102889",
    "end": "1104119"
  },
  {
    "text": "implicitly building indices but that's",
    "start": "1104119",
    "end": "1105950"
  },
  {
    "text": "maybe topic for another talk but let's",
    "start": "1105950",
    "end": "1108200"
  },
  {
    "text": "let me focus on the cache efficiency",
    "start": "1108200",
    "end": "1109789"
  },
  {
    "text": "since that's actually pre-assess to the",
    "start": "1109789",
    "end": "1111739"
  },
  {
    "text": "next topic which is known by well so it",
    "start": "1111739",
    "end": "1116989"
  },
  {
    "text": "happens that if you care about something",
    "start": "1116989",
    "end": "1118639"
  },
  {
    "text": "as low-level as CPU cache efficiency of",
    "start": "1118639",
    "end": "1121429"
  },
  {
    "text": "course using a language like high-level",
    "start": "1121429",
    "end": "1123769"
  },
  {
    "text": "language like Python is is a bit",
    "start": "1123769",
    "end": "1125359"
  },
  {
    "text": "problematic since there's a lot of lots",
    "start": "1125359",
    "end": "1127309"
  },
  {
    "text": "of many things happening behind behind",
    "start": "1127309",
    "end": "1128809"
  },
  {
    "text": "the scenes and behind your back so",
    "start": "1128809",
    "end": "1130220"
  },
  {
    "text": "there's garbage collection and and of",
    "start": "1130220",
    "end": "1132289"
  },
  {
    "text": "course pies in the C Python virtual",
    "start": "1132289",
    "end": "1134090"
  },
  {
    "text": "machine of course does all kinds of",
    "start": "1134090",
    "end": "1135289"
  },
  {
    "text": "things so it's it's very hard to first",
    "start": "1135289",
    "end": "1137059"
  },
  {
    "text": "make sure that you are not doing",
    "start": "1137059",
    "end": "1138169"
  },
  {
    "text": "unnecessary work well so it happens in",
    "start": "1138169",
    "end": "1140659"
  },
  {
    "text": "the Python world there are like really",
    "start": "1140659",
    "end": "1142220"
  },
  {
    "text": "lots of and many interesting projects",
    "start": "1142220",
    "end": "1144049"
  },
  {
    "text": "going on today that help you to produce",
    "start": "1144049",
    "end": "1146330"
  },
  {
    "text": "really efficient code in Python noon",
    "start": "1146330",
    "end": "1149389"
  },
  {
    "text": "bias is one of those projects so you",
    "start": "1149389",
    "end": "1151309"
  },
  {
    "text": "should definitely check it out so what",
    "start": "1151309",
    "end": "1153470"
  },
  {
    "text": "it actually does is that he said as it",
    "start": "1153470",
    "end": "1155059"
  },
  {
    "text": "says it's a just-in-time specializing or",
    "start": "1155059",
    "end": "1156980"
  },
  {
    "text": "boiler which composed another invite in",
    "start": "1156980",
    "end": "1158869"
  },
  {
    "text": "a non pipe out to LLVM and LLVM being",
    "start": "1158869",
    "end": "1161600"
  },
  {
    "text": "the compiler it will get developed by",
    "start": "1161600",
    "end": "1164389"
  },
  {
    "text": "apple and others",
    "start": "1164389",
    "end": "1165409"
  },
  {
    "text": "and how it works is that like it can",
    "start": "1165409",
    "end": "1167779"
  },
  {
    "text": "take any Python function like an example",
    "start": "1167779",
    "end": "1169549"
  },
  {
    "text": "here you just add a decorator like which",
    "start": "1169549",
    "end": "1172519"
  },
  {
    "text": "is in this case called Auto cheat and it",
    "start": "1172519",
    "end": "1174440"
  },
  {
    "text": "magically compiles your Python function",
    "start": "1174440",
    "end": "1176509"
  },
  {
    "text": "to machine code and it's super super",
    "start": "1176509",
    "end": "1178669"
  },
  {
    "text": "magic I'll think about it so you have a",
    "start": "1178669",
    "end": "1180289"
  },
  {
    "text": "Python function and you just add a",
    "start": "1180289",
    "end": "1182000"
  },
  {
    "text": "decorator and suddenly you have this",
    "start": "1182000",
    "end": "1183380"
  },
  {
    "text": "super high efficient version of the",
    "start": "1183380",
    "end": "1184820"
  },
  {
    "text": "function so it's it's great well the",
    "start": "1184820",
    "end": "1187309"
  },
  {
    "text": "downside of that is that unfortunately",
    "start": "1187309",
    "end": "1188630"
  },
  {
    "text": "it's not able to take any arbitrary",
    "start": "1188630",
    "end": "1190789"
  },
  {
    "text": "Python code and make it fast so it",
    "start": "1190789",
    "end": "1192620"
  },
  {
    "text": "mainly works with numerical code so if",
    "start": "1192620",
    "end": "1195529"
  },
  {
    "text": "you ever by using numpy or things like",
    "start": "1195529",
    "end": "1198320"
  },
  {
    "text": "that it can all actually automatically",
    "start": "1198320",
    "end": "1200059"
  },
  {
    "text": "detect the types of matrices that you",
    "start": "1200059",
    "end": "1201980"
  },
  {
    "text": "are using and using that information can",
    "start": "1201980",
    "end": "1203659"
  },
  {
    "text": "actually produce efficient code whereas",
    "start": "1203659",
    "end": "1205909"
  },
  {
    "text": "if you are doing like what we are doing",
    "start": "1205909",
    "end": "1207740"
  },
  {
    "text": "80% 90% of the time with Python doing",
    "start": "1207740",
    "end": "1210350"
  },
  {
    "text": "stream manipulation and stuff it's",
    "start": "1210350",
    "end": "1211909"
  },
  {
    "text": "actually not that good but I mean so it",
    "start": "1211909",
    "end": "1214279"
  },
  {
    "text": "happens that this is actually exactly",
    "start": "1214279",
    "end": "1215330"
  },
  {
    "text": "what we need we need a way to produce",
    "start": "1215330",
    "end": "1217480"
  },
  {
    "text": "low-level code that manipulates",
    "start": "1217480",
    "end": "1219889"
  },
  {
    "text": "numerical data so noone buys a good",
    "start": "1219889",
    "end": "1221779"
  },
  {
    "text": "match for the project how gnome by",
    "start": "1221779",
    "end": "1225620"
  },
  {
    "text": "actually works in our case and this is",
    "start": "1225620",
    "end": "1227330"
  },
  {
    "text": "the reason why the talk is titled meta",
    "start": "1227330",
    "end": "1229909"
  },
  {
    "text": "programming is that we're actually",
    "start": "1229909",
    "end": "1231590"
  },
  {
    "text": "generating code python code on the fly",
    "start": "1231590",
    "end": "1234080"
  },
  {
    "text": "so again going back to the stack you",
    "start": "1234080",
    "end": "1236870"
  },
  {
    "text": "remember that at the top at the very top",
    "start": "1236870",
    "end": "1239509"
  },
  {
    "text": "of the stack we have a tool like Excel",
    "start": "1239509",
    "end": "1241580"
  },
  {
    "text": "or tableau or maybe analyst typing C",
    "start": "1241580",
    "end": "1245059"
  },
  {
    "text": "well so what happens is the sequel where",
    "start": "1245059",
    "end": "1247490"
  },
  {
    "text": "you actually post a post Chris and the",
    "start": "1247490",
    "end": "1249440"
  },
  {
    "text": "post press through number of steps",
    "start": "1249440",
    "end": "1251570"
  },
  {
    "text": "actually sends the query to our system",
    "start": "1251570",
    "end": "1253340"
  },
  {
    "text": "and eventually hits the part of our",
    "start": "1253340",
    "end": "1255080"
  },
  {
    "text": "system that handles the compilation the",
    "start": "1255080",
    "end": "1257919"
  },
  {
    "text": "compiler actually decides the query",
    "start": "1257919",
    "end": "1260240"
  },
  {
    "text": "takes the columns that you are",
    "start": "1260240",
    "end": "1261710"
  },
  {
    "text": "interested in and takes the where",
    "start": "1261710",
    "end": "1263629"
  },
  {
    "text": "clauses that you are interested in and",
    "start": "1263629",
    "end": "1265870"
  },
  {
    "text": "basically knowing the matrices and the",
    "start": "1265870",
    "end": "1268730"
  },
  {
    "text": "types of matrices we're analyzing and",
    "start": "1268730",
    "end": "1270559"
  },
  {
    "text": "knowing the query it can actually",
    "start": "1270559",
    "end": "1272539"
  },
  {
    "text": "generate a piece of Python function that",
    "start": "1272539",
    "end": "1275809"
  },
  {
    "text": "answers exactly the question that you",
    "start": "1275809",
    "end": "1277639"
  },
  {
    "text": "are asking so this is actually the kind",
    "start": "1277639",
    "end": "1279649"
  },
  {
    "text": "of you get the idea what what do the",
    "start": "1279649",
    "end": "1281360"
  },
  {
    "text": "kind of the Python the automatically",
    "start": "1281360",
    "end": "1282559"
  },
  {
    "text": "generated plate and look like and it's",
    "start": "1282559",
    "end": "1284090"
  },
  {
    "text": "very low-level and the reason that it's",
    "start": "1284090",
    "end": "1285889"
  },
  {
    "text": "low-level is that that's exactly the",
    "start": "1285889",
    "end": "1287360"
  },
  {
    "text": "type of Python stuff that nobody likes",
    "start": "1287360",
    "end": "1289309"
  },
  {
    "text": "so now we can actually feed this",
    "start": "1289309",
    "end": "1291590"
  },
  {
    "text": "automatically generated Python function",
    "start": "1291590",
    "end": "1293809"
  },
  {
    "text": "the",
    "start": "1293809",
    "end": "1294050"
  },
  {
    "text": "nova which compiles it to LLVM so this",
    "start": "1294050",
    "end": "1297110"
  },
  {
    "text": "is the LLVM intermediate representation",
    "start": "1297110",
    "end": "1299780"
  },
  {
    "text": "so it looks like assembly so if you have",
    "start": "1299780",
    "end": "1301610"
  },
  {
    "text": "ever done any low-level coding it's it's",
    "start": "1301610",
    "end": "1303890"
  },
  {
    "text": "very low-level but the thing about this",
    "start": "1303890",
    "end": "1305360"
  },
  {
    "text": "is that this when you are operating at",
    "start": "1305360",
    "end": "1307520"
  },
  {
    "text": "this level it really gives you an",
    "start": "1307520",
    "end": "1308780"
  },
  {
    "text": "opportunity to kind of optimize things",
    "start": "1308780",
    "end": "1311000"
  },
  {
    "text": "like that - efficiency and of course the",
    "start": "1311000",
    "end": "1313820"
  },
  {
    "text": "thing is that now I mean we are actually",
    "start": "1313820",
    "end": "1315320"
  },
  {
    "text": "producing a piece of code that's",
    "start": "1315320",
    "end": "1317570"
  },
  {
    "text": "especially it's basically specialized",
    "start": "1317570",
    "end": "1319580"
  },
  {
    "text": "for it for the type of the query and for",
    "start": "1319580",
    "end": "1321590"
  },
  {
    "text": "the kind of the data that we are",
    "start": "1321590",
    "end": "1322670"
  },
  {
    "text": "operating on which is another key",
    "start": "1322670",
    "end": "1324290"
  },
  {
    "text": "deficiency that we are seeing so that's",
    "start": "1324290",
    "end": "1328070"
  },
  {
    "text": "that's how it works",
    "start": "1328070",
    "end": "1329150"
  },
  {
    "text": "well the last episode I don't know if",
    "start": "1329150",
    "end": "1330890"
  },
  {
    "text": "you can see that but it says that like",
    "start": "1330890",
    "end": "1332600"
  },
  {
    "text": "the last step is to compile this to",
    "start": "1332600",
    "end": "1334130"
  },
  {
    "text": "optimize machine code on the fly so",
    "start": "1334130",
    "end": "1335840"
  },
  {
    "text": "another interesting kind of side effect",
    "start": "1335840",
    "end": "1338180"
  },
  {
    "text": "of these two is that we can leverage",
    "start": "1338180",
    "end": "1339580"
  },
  {
    "text": "LLVM optimization framework to actually",
    "start": "1339580",
    "end": "1342440"
  },
  {
    "text": "optimize the query that we are executing",
    "start": "1342440",
    "end": "1344450"
  },
  {
    "text": "so if it so happens that there are any",
    "start": "1344450",
    "end": "1346400"
  },
  {
    "text": "kind of redundancies in the code itself",
    "start": "1346400",
    "end": "1348200"
  },
  {
    "text": "LLVM hopefully can take care of that so",
    "start": "1348200",
    "end": "1351440"
  },
  {
    "text": "that's that's really super awesome and",
    "start": "1351440",
    "end": "1353660"
  },
  {
    "text": "that's also a key why we can both",
    "start": "1353660",
    "end": "1355880"
  },
  {
    "text": "combine the densely encoded matrices",
    "start": "1355880",
    "end": "1358550"
  },
  {
    "text": "with densely optimized code and get the",
    "start": "1358550",
    "end": "1361580"
  },
  {
    "text": "result that you saw earlier well now let",
    "start": "1361580",
    "end": "1366140"
  },
  {
    "text": "me actually check the time so okay",
    "start": "1366140",
    "end": "1369200"
  },
  {
    "text": "anyway I'm almost running well",
    "start": "1369200",
    "end": "1370670"
  },
  {
    "text": "practically running out of time let me",
    "start": "1370670",
    "end": "1372020"
  },
  {
    "text": "just pass forward so the thing is that",
    "start": "1372020",
    "end": "1375620"
  },
  {
    "text": "like like I mentioned no system is in",
    "start": "1375620",
    "end": "1377390"
  },
  {
    "text": "Ireland the analysts actually want to",
    "start": "1377390",
    "end": "1379820"
  },
  {
    "text": "use this analysts like sequel as we",
    "start": "1379820",
    "end": "1381860"
  },
  {
    "text": "heard in the previous presentation so we",
    "start": "1381860",
    "end": "1383900"
  },
  {
    "text": "want to provide a sequel interface now",
    "start": "1383900",
    "end": "1386030"
  },
  {
    "text": "of course we are not as insane as tests",
    "start": "1386030",
    "end": "1388370"
  },
  {
    "text": "that we would be thinking that we can",
    "start": "1388370",
    "end": "1389780"
  },
  {
    "text": "actually implement the sequel standard",
    "start": "1389780",
    "end": "1391280"
  },
  {
    "text": "by ourselves and knowing that there are",
    "start": "1391280",
    "end": "1394070"
  },
  {
    "text": "really excellent projects around like",
    "start": "1394070",
    "end": "1395720"
  },
  {
    "text": "post press I mean of course we do want",
    "start": "1395720",
    "end": "1397220"
  },
  {
    "text": "to leverage the whatever is available",
    "start": "1397220",
    "end": "1399230"
  },
  {
    "text": "and now of course there's a question",
    "start": "1399230",
    "end": "1401330"
  },
  {
    "text": "that how do you actually use something",
    "start": "1401330",
    "end": "1402830"
  },
  {
    "text": "like post cursor or any relational",
    "start": "1402830",
    "end": "1404570"
  },
  {
    "text": "database with like no sequel custom",
    "start": "1404570",
    "end": "1407480"
  },
  {
    "text": "system that we built well now let me",
    "start": "1407480",
    "end": "1410510"
  },
  {
    "text": "introduce you the multi quorum so again",
    "start": "1410510",
    "end": "1412610"
  },
  {
    "text": "if you have never heard about multi core",
    "start": "1412610",
    "end": "1415160"
  },
  {
    "text": "actually I hadn't so I mean you should",
    "start": "1415160",
    "end": "1416750"
  },
  {
    "text": "definitely check it out yet another",
    "start": "1416750",
    "end": "1418160"
  },
  {
    "text": "thing that like you should be using it's",
    "start": "1418160",
    "end": "1420020"
  },
  {
    "text": "a way how you can actually map your",
    "start": "1420020",
    "end": "1421510"
  },
  {
    "text": "- datasource yeah I know I should be",
    "start": "1421510",
    "end": "1423580"
  },
  {
    "text": "well anyone let me just passport I know",
    "start": "1423580",
    "end": "1425530"
  },
  {
    "text": "we are running out of time anyway the",
    "start": "1425530",
    "end": "1427090"
  },
  {
    "text": "point is that you can write things in",
    "start": "1427090",
    "end": "1428290"
  },
  {
    "text": "Python and they will show up as normal",
    "start": "1428290",
    "end": "1431410"
  },
  {
    "text": "tables in your post press database so",
    "start": "1431410",
    "end": "1433330"
  },
  {
    "text": "you can actually do all kinds of joins",
    "start": "1433330",
    "end": "1434710"
  },
  {
    "text": "all the magic you see well while",
    "start": "1434710",
    "end": "1436690"
  },
  {
    "text": "actually offloading the Big Data stuff",
    "start": "1436690",
    "end": "1438730"
  },
  {
    "text": "do whatever again you might be using at",
    "start": "1438730",
    "end": "1441250"
  },
  {
    "text": "the deliver on our case well let me just",
    "start": "1441250",
    "end": "1443500"
  },
  {
    "text": "quickly conclude my talk yes this is",
    "start": "1443500",
    "end": "1446710"
  },
  {
    "text": "cheating yes and that's exactly the",
    "start": "1446710",
    "end": "1448180"
  },
  {
    "text": "point",
    "start": "1448180",
    "end": "1448630"
  },
  {
    "text": "what do you want to do with the language",
    "start": "1448630",
    "end": "1450040"
  },
  {
    "text": "like Python is that you want to embed",
    "start": "1450040",
    "end": "1451510"
  },
  {
    "text": "all the domain knowledge you have and",
    "start": "1451510",
    "end": "1453580"
  },
  {
    "text": "all the tricks or all the kind of the",
    "start": "1453580",
    "end": "1455410"
  },
  {
    "text": "information about the constraints that",
    "start": "1455410",
    "end": "1456850"
  },
  {
    "text": "you know that well we will never need",
    "start": "1456850",
    "end": "1458560"
  },
  {
    "text": "worries like this and you want to",
    "start": "1458560",
    "end": "1460120"
  },
  {
    "text": "implement the system that really takes",
    "start": "1460120",
    "end": "1462460"
  },
  {
    "text": "that into account and the key thing here",
    "start": "1462460",
    "end": "1463870"
  },
  {
    "text": "is that you can actually outperform any",
    "start": "1463870",
    "end": "1465580"
  },
  {
    "text": "system built in any language and you",
    "start": "1465580",
    "end": "1467530"
  },
  {
    "text": "just design your data structures",
    "start": "1467530",
    "end": "1468910"
  },
  {
    "text": "correctly even if you are using Python",
    "start": "1468910",
    "end": "1470710"
  },
  {
    "text": "and actually it might be that especially",
    "start": "1470710",
    "end": "1472720"
  },
  {
    "text": "when you are using Python since many of",
    "start": "1472720",
    "end": "1474640"
  },
  {
    "text": "these things that I showed here would",
    "start": "1474640",
    "end": "1476050"
  },
  {
    "text": "have been such that yes they are",
    "start": "1476050",
    "end": "1477490"
  },
  {
    "text": "possible to implement in is C but I mean",
    "start": "1477490",
    "end": "1479890"
  },
  {
    "text": "it would have been extremely painful to",
    "start": "1479890",
    "end": "1481450"
  },
  {
    "text": "do all those transformations and stuff",
    "start": "1481450",
    "end": "1483010"
  },
  {
    "text": "in C which is very I mean which is quite",
    "start": "1483010",
    "end": "1485080"
  },
  {
    "text": "not as expressive as Python so you can",
    "start": "1485080",
    "end": "1487390"
  },
  {
    "text": "actually benefit from the fact that",
    "start": "1487390",
    "end": "1488800"
  },
  {
    "text": "Python is really expressive and do",
    "start": "1488800",
    "end": "1491200"
  },
  {
    "text": "things that would be way too complicated",
    "start": "1491200",
    "end": "1492880"
  },
  {
    "text": "to implement in low-level language and",
    "start": "1492880",
    "end": "1494650"
  },
  {
    "text": "actually you can beat a low-level",
    "start": "1494650",
    "end": "1496240"
  },
  {
    "text": "language in their own game in this way",
    "start": "1496240",
    "end": "1497970"
  },
  {
    "text": "so thank you so actually we are using",
    "start": "1497970",
    "end": "1500950"
  },
  {
    "text": "her like by the way",
    "start": "1500950",
    "end": "1503639"
  },
  {
    "text": "okay I think I'm confused to speak to",
    "start": "1516879",
    "end": "1519549"
  },
  {
    "text": "the software I can use now this",
    "start": "1519549",
    "end": "1521589"
  },
  {
    "text": "attempted vengeance is a number oh oh",
    "start": "1521589",
    "end": "1523570"
  },
  {
    "text": "yeah well unfortunately so it happens",
    "start": "1523570",
    "end": "1525429"
  },
  {
    "text": "that I actually haven't asked my boss",
    "start": "1525429",
    "end": "1527619"
  },
  {
    "text": "yet if we can open source this so I know",
    "start": "1527619",
    "end": "1529749"
  },
  {
    "text": "it's not yet available but I hope that",
    "start": "1529749",
    "end": "1531729"
  },
  {
    "text": "what's the kind of the take-home message",
    "start": "1531729",
    "end": "1533379"
  },
  {
    "text": "here is that you should definitely check",
    "start": "1533379",
    "end": "1534699"
  },
  {
    "text": "out number you should check out multi",
    "start": "1534699",
    "end": "1536379"
  },
  {
    "text": "corn and you should also always have the",
    "start": "1536379",
    "end": "1539589"
  },
  {
    "text": "feeling that anything is possible with",
    "start": "1539589",
    "end": "1541299"
  },
  {
    "text": "Python so I mean if anyone tries to tell",
    "start": "1541299",
    "end": "1543669"
  },
  {
    "text": "you that it's not fast enough I mean",
    "start": "1543669",
    "end": "1545289"
  },
  {
    "text": "they are wrong I mean like it's it's",
    "start": "1545289",
    "end": "1546940"
  },
  {
    "text": "really not the case but it yes it does",
    "start": "1546940",
    "end": "1548649"
  },
  {
    "text": "require some work do you see a possible",
    "start": "1548649",
    "end": "1552759"
  },
  {
    "text": "implementation of place for multiple",
    "start": "1552759",
    "end": "1554649"
  },
  {
    "text": "data type of demonstration well if I",
    "start": "1554649",
    "end": "1557589"
  },
  {
    "text": "remember correctly place is actually",
    "start": "1557589",
    "end": "1559059"
  },
  {
    "text": "another project by continuum IO which is",
    "start": "1559059",
    "end": "1561279"
  },
  {
    "text": "behind a number and they have like a",
    "start": "1561279",
    "end": "1564069"
  },
  {
    "text": "very similar world view how you can",
    "start": "1564069",
    "end": "1565839"
  },
  {
    "text": "actually efficiently encode matrices and",
    "start": "1565839",
    "end": "1568089"
  },
  {
    "text": "personal vast computation on matrices",
    "start": "1568089",
    "end": "1569799"
  },
  {
    "text": "and I'm definitely looking forward to",
    "start": "1569799",
    "end": "1571869"
  },
  {
    "text": "whatever they end up doing so it so",
    "start": "1571869",
    "end": "1574029"
  },
  {
    "text": "happens that this was something that we",
    "start": "1574029",
    "end": "1575769"
  },
  {
    "text": "needed know and and well I mean in place",
    "start": "1575769",
    "end": "1577899"
  },
  {
    "text": "it's not yet available at least not the",
    "start": "1577899",
    "end": "1580119"
  },
  {
    "text": "features that we would need oh that's it",
    "start": "1580119",
    "end": "1582399"
  },
  {
    "text": "that's an excellent question yeah so the",
    "start": "1582399",
    "end": "1584499"
  },
  {
    "text": "question was that like how much of the",
    "start": "1584499",
    "end": "1587319"
  },
  {
    "text": "performance difference between read",
    "start": "1587319",
    "end": "1588819"
  },
  {
    "text": "saved and delivered can be attributed to",
    "start": "1588819",
    "end": "1590409"
  },
  {
    "text": "the fact that actually our system is",
    "start": "1590409",
    "end": "1591999"
  },
  {
    "text": "running on a single machine whereas",
    "start": "1591999",
    "end": "1593859"
  },
  {
    "text": "redshift is running on multiple machines",
    "start": "1593859",
    "end": "1595659"
  },
  {
    "text": "so obviously there is some like a",
    "start": "1595659",
    "end": "1596889"
  },
  {
    "text": "network overhead so well I mean one",
    "start": "1596889",
    "end": "1599259"
  },
  {
    "text": "thing is that especially when it comes",
    "start": "1599259",
    "end": "1600819"
  },
  {
    "text": "to kind of a basic summing over columns",
    "start": "1600819",
    "end": "1602769"
  },
  {
    "text": "of course actually how great shift work",
    "start": "1602769",
    "end": "1604839"
  },
  {
    "text": "is that it offloads like computation to",
    "start": "1604839",
    "end": "1607809"
  },
  {
    "text": "these individual charts and the chart",
    "start": "1607809",
    "end": "1609279"
  },
  {
    "text": "just like return whatever like",
    "start": "1609279",
    "end": "1610779"
  },
  {
    "text": "intermediate results so there should be",
    "start": "1610779",
    "end": "1612459"
  },
  {
    "text": "very little like a network communication",
    "start": "1612459",
    "end": "1614649"
  },
  {
    "text": "happening between the nodes and actually",
    "start": "1614649",
    "end": "1615999"
  },
  {
    "text": "there's a dashboard in website that",
    "start": "1615999",
    "end": "1617409"
  },
  {
    "text": "shows you the network communication it's",
    "start": "1617409",
    "end": "1619119"
  },
  {
    "text": "really pretty minimal so I don't believe",
    "start": "1619119",
    "end": "1621699"
  },
  {
    "text": "that that's the reason it's really well",
    "start": "1621699",
    "end": "1623289"
  },
  {
    "text": "ok maybe I shouldn't they operate okay",
    "start": "1623289",
    "end": "1624999"
  },
  {
    "text": "go ahead yes so multi boring that's a",
    "start": "1624999",
    "end": "1628089"
  },
  {
    "text": "very good question of course there is",
    "start": "1628089",
    "end": "1629169"
  },
  {
    "text": "the whole point behind this thing is",
    "start": "1629169",
    "end": "1630849"
  },
  {
    "text": "that well well I mean we definitely want",
    "start": "1630849",
    "end": "1632799"
  },
  {
    "text": "to be doing and like utilizing all the",
    "start": "1632799",
    "end": "1635259"
  },
  {
    "text": "course that we have on the machine it's",
    "start": "1635259",
    "end": "1636699"
  },
  {
    "text": "it's ray CPU intensive things so I mean",
    "start": "1636699",
    "end": "1638679"
  },
  {
    "text": "yes you do want",
    "start": "1638679",
    "end": "1639740"
  },
  {
    "text": "use all the CPU power well I mean like",
    "start": "1639740",
    "end": "1642679"
  },
  {
    "text": "really the obvious thing with with",
    "start": "1642679",
    "end": "1644210"
  },
  {
    "text": "multi-core is that you have so you have",
    "start": "1644210",
    "end": "1645919"
  },
  {
    "text": "K nodes K pores on your system so you",
    "start": "1645919",
    "end": "1649399"
  },
  {
    "text": "have K processes so I mean you have one",
    "start": "1649399",
    "end": "1651770"
  },
  {
    "text": "process one worker process per core well",
    "start": "1651770",
    "end": "1654440"
  },
  {
    "text": "I mean the things are practically not",
    "start": "1654440",
    "end": "1656480"
  },
  {
    "text": "quite as simple what you do want to do",
    "start": "1656480",
    "end": "1658250"
  },
  {
    "text": "as well is that there's this thing in",
    "start": "1658250",
    "end": "1659809"
  },
  {
    "text": "Linux that you can actually set the task",
    "start": "1659809",
    "end": "1661399"
  },
  {
    "text": "affinity so that played the kernel won't",
    "start": "1661399",
    "end": "1663440"
  },
  {
    "text": "be like a moving process it round",
    "start": "1663440",
    "end": "1665210"
  },
  {
    "text": "especially with the machine like ours",
    "start": "1665210",
    "end": "1666649"
  },
  {
    "text": "which is actually a non-uniform memory",
    "start": "1666649",
    "end": "1668419"
  },
  {
    "text": "access machine so you want to kind of",
    "start": "1668419",
    "end": "1670100"
  },
  {
    "text": "pay attention things like that but yes",
    "start": "1670100",
    "end": "1671809"
  },
  {
    "text": "the basic approach is to have a well I",
    "start": "1671809",
    "end": "1673640"
  },
  {
    "text": "mean like in this case 16 Python",
    "start": "1673640",
    "end": "1675260"
  },
  {
    "text": "processes running on the machine right",
    "start": "1675260",
    "end": "1677539"
  },
  {
    "text": "so that's another good question about",
    "start": "1677539",
    "end": "1679299"
  },
  {
    "text": "all about the everything that I",
    "start": "1679299",
    "end": "1681590"
  },
  {
    "text": "presented here today is about reading",
    "start": "1681590",
    "end": "1683899"
  },
  {
    "text": "it's kind of everything is about reading",
    "start": "1683899",
    "end": "1686029"
  },
  {
    "text": "and there's nothing about writing and",
    "start": "1686029",
    "end": "1687860"
  },
  {
    "text": "well I mean I like Erlang I'm a big fan",
    "start": "1687860",
    "end": "1690470"
  },
  {
    "text": "of immutability so I mean I don't",
    "start": "1690470",
    "end": "1692210"
  },
  {
    "text": "typically change anything and it",
    "start": "1692210",
    "end": "1693529"
  },
  {
    "text": "specific historical data doesn't change",
    "start": "1693529",
    "end": "1695450"
  },
  {
    "text": "so unfortunately well I mean maybe",
    "start": "1695450",
    "end": "1697730"
  },
  {
    "text": "fortunately I'm like working in the",
    "start": "1697730",
    "end": "1700370"
  },
  {
    "text": "field of analytics which is like mainly",
    "start": "1700370",
    "end": "1702770"
  },
  {
    "text": "the part that actually gets all the crap",
    "start": "1702770",
    "end": "1704840"
  },
  {
    "text": "that the kind of the guys end up",
    "start": "1704840",
    "end": "1706700"
  },
  {
    "text": "producing on the operational side and of",
    "start": "1706700",
    "end": "1708409"
  },
  {
    "text": "course like kind of people you use the",
    "start": "1708409",
    "end": "1710210"
  },
  {
    "text": "systems so my worldview is that like I",
    "start": "1710210",
    "end": "1713029"
  },
  {
    "text": "mean like we are actually using earth as",
    "start": "1713029",
    "end": "1715100"
  },
  {
    "text": "well so what happens is that Kafka like",
    "start": "1715100",
    "end": "1717710"
  },
  {
    "text": "basically pushes and produces like a",
    "start": "1717710",
    "end": "1719630"
  },
  {
    "text": "tons of data but I mean the first like",
    "start": "1719630",
    "end": "1721820"
  },
  {
    "text": "after we have collected those log files",
    "start": "1721820",
    "end": "1723529"
  },
  {
    "text": "they don't change so it's only immutable",
    "start": "1723529",
    "end": "1725360"
  },
  {
    "text": "I don't have to care about rights at all",
    "start": "1725360",
    "end": "1727070"
  },
  {
    "text": "so that's the three easy and simple okay",
    "start": "1727070",
    "end": "1732700"
  },
  {
    "text": "you",
    "start": "1739170",
    "end": "1741230"
  }
]