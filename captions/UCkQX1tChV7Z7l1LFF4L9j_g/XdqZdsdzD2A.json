[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hi my name is Seth lad and welcome to",
    "start": "280",
    "end": "1599"
  },
  {
    "text": "this episode of Dart tips today we take",
    "start": "1599",
    "end": "3320"
  },
  {
    "text": "back control and look at dart's control",
    "start": "3320",
    "end": "4880"
  },
  {
    "text": "flow statements all the greatest hits",
    "start": "4880",
    "end": "6520"
  },
  {
    "text": "are here if while for and switch plus",
    "start": "6520",
    "end": "9360"
  },
  {
    "text": "I'll show you a helpful tweak that",
    "start": "9360",
    "end": "10559"
  },
  {
    "text": "should make web developers very happy",
    "start": "10559",
    "end": "12599"
  },
  {
    "text": "join us right now on Dart",
    "start": "12599",
    "end": "14610"
  },
  {
    "text": "[Music]",
    "start": "14610",
    "end": "18640"
  },
  {
    "text": "tips first up if and else no big",
    "start": "18640",
    "end": "21160"
  },
  {
    "text": "surprises here the conditional if",
    "start": "21160",
    "end": "23000"
  },
  {
    "text": "statements can be followed by zero or",
    "start": "23000",
    "end": "24680"
  },
  {
    "text": "more else if statements and can end with",
    "start": "24680",
    "end": "26920"
  },
  {
    "text": "an else statement here's an example",
    "start": "26920",
    "end": "29800"
  },
  {
    "start": "29000",
    "end": "39000"
  },
  {
    "text": "however I do want to point out that the",
    "start": "29800",
    "end": "31359"
  },
  {
    "text": "condition must resolve to a Boolean in",
    "start": "31359",
    "end": "33520"
  },
  {
    "text": "Dart only the Boolean value true is true",
    "start": "33520",
    "end": "35879"
  },
  {
    "text": "although the values are treated as false",
    "start": "35879",
    "end": "38920"
  },
  {
    "text": "consider this example here the variable",
    "start": "38920",
    "end": "41039"
  },
  {
    "start": "39000",
    "end": "55000"
  },
  {
    "text": "name is a string of course a string is",
    "start": "41039",
    "end": "43320"
  },
  {
    "text": "not a bull and therefore the else block",
    "start": "43320",
    "end": "45120"
  },
  {
    "text": "is run here's the correct way to write",
    "start": "45120",
    "end": "47600"
  },
  {
    "text": "this code you must be more explicit but",
    "start": "47600",
    "end": "49640"
  },
  {
    "text": "the advantage is that the rules for",
    "start": "49640",
    "end": "51000"
  },
  {
    "text": "truthy and falcy values are very simple",
    "start": "51000",
    "end": "53079"
  },
  {
    "text": "to remember for very simple conditions",
    "start": "53079",
    "end": "55760"
  },
  {
    "text": "you can write an if statement on one",
    "start": "55760",
    "end": "57199"
  },
  {
    "text": "line of code here's an example you might",
    "start": "57199",
    "end": "59559"
  },
  {
    "text": "use this pattern at the very beginning",
    "start": "59559",
    "end": "61320"
  },
  {
    "text": "of a function when you need to check a",
    "start": "61320",
    "end": "63079"
  },
  {
    "text": "simple condition and bail out early most",
    "start": "63079",
    "end": "65478"
  },
  {
    "text": "of the time Dart style prefers",
    "start": "65479",
    "end": "67200"
  },
  {
    "text": "multi-line if statements with explicit",
    "start": "67200",
    "end": "69040"
  },
  {
    "text": "curly",
    "start": "69040",
    "end": "69920"
  },
  {
    "text": "braces for looping pun definitely",
    "start": "69920",
    "end": "72360"
  },
  {
    "text": "intended Dart has four Loops like if",
    "start": "72360",
    "end": "74840"
  },
  {
    "text": "statements four Loops look quite",
    "start": "74840",
    "end": "76600"
  },
  {
    "text": "familiar here's an",
    "start": "76600",
    "end": "78479"
  },
  {
    "text": "example let's consider a more complex",
    "start": "78479",
    "end": "81159"
  },
  {
    "text": "example here callbacks are created",
    "start": "81159",
    "end": "83200"
  },
  {
    "text": "inside a for Loop each closing around",
    "start": "83200",
    "end": "85159"
  },
  {
    "text": "the loop variable I after the loop each",
    "start": "85159",
    "end": "87680"
  },
  {
    "text": "callback is run printing out its number",
    "start": "87680",
    "end": "89759"
  },
  {
    "text": "the the question is what will print out",
    "start": "89759",
    "end": "91720"
  },
  {
    "text": "or a better question is what would you",
    "start": "91720",
    "end": "93399"
  },
  {
    "text": "expect to print out unlike traditional",
    "start": "93399",
    "end": "95799"
  },
  {
    "start": "95000",
    "end": "142000"
  },
  {
    "text": "web programming languages Dart will",
    "start": "95799",
    "end": "97280"
  },
  {
    "text": "print zero and then one why is this",
    "start": "97280",
    "end": "100240"
  },
  {
    "text": "inside a for Loop each iteration gets",
    "start": "100240",
    "end": "102439"
  },
  {
    "text": "its own variable this prevents common",
    "start": "102439",
    "end": "104280"
  },
  {
    "text": "errors when using closures inside of",
    "start": "104280",
    "end": "106280"
  },
  {
    "text": "Loops if you want to iterate over",
    "start": "106280",
    "end": "108280"
  },
  {
    "text": "collection or any iterable and you don't",
    "start": "108280",
    "end": "110560"
  },
  {
    "text": "care about the loop variable you can use",
    "start": "110560",
    "end": "112240"
  },
  {
    "text": "the 4in style Loop here's an example of",
    "start": "112240",
    "end": "114640"
  },
  {
    "text": "a 4in",
    "start": "114640",
    "end": "115920"
  },
  {
    "text": "loop the 4in loop is just syntactic",
    "start": "115920",
    "end": "119000"
  },
  {
    "text": "sugar for the longer iterator form",
    "start": "119000",
    "end": "121320"
  },
  {
    "text": "either form works but I'm partial to the",
    "start": "121320",
    "end": "122960"
  },
  {
    "text": "4 in as it's shorter and shorter means",
    "start": "122960",
    "end": "125039"
  },
  {
    "text": "less code and less code means less",
    "start": "125039",
    "end": "126960"
  },
  {
    "text": "chance for me to get it wrong when you",
    "start": "126960",
    "end": "128679"
  },
  {
    "text": "want to Loop while a condition is true",
    "start": "128679",
    "end": "130440"
  },
  {
    "text": "you can use the while and do while Loops",
    "start": "130440",
    "end": "132440"
  },
  {
    "text": "unlike the for Loop which counts up or",
    "start": "132440",
    "end": "133920"
  },
  {
    "text": "down or moves through collection the",
    "start": "133920",
    "end": "135519"
  },
  {
    "text": "while and do while Loops more simply run",
    "start": "135519",
    "end": "137760"
  },
  {
    "text": "a block of code until a condition is",
    "start": "137760",
    "end": "139640"
  },
  {
    "text": "false here's an example the while loop",
    "start": "139640",
    "end": "142959"
  },
  {
    "start": "142000",
    "end": "198000"
  },
  {
    "text": "evaluates the condition before the loop",
    "start": "142959",
    "end": "144760"
  },
  {
    "text": "and repeats the loop as long as the",
    "start": "144760",
    "end": "146480"
  },
  {
    "text": "condition is true the W Loop is a good",
    "start": "146480",
    "end": "148440"
  },
  {
    "text": "choice if you want to check condition",
    "start": "148440",
    "end": "150280"
  },
  {
    "text": "before entering the loop For the First",
    "start": "150280",
    "end": "151920"
  },
  {
    "text": "Time The doal Loop however evaluates the",
    "start": "151920",
    "end": "154879"
  },
  {
    "text": "condition after the loop this means the",
    "start": "154879",
    "end": "156800"
  },
  {
    "text": "loop lock is run at least one",
    "start": "156800",
    "end": "159040"
  },
  {
    "text": "time you can control a Loop's execution",
    "start": "159040",
    "end": "161640"
  },
  {
    "text": "with break and continue use break to",
    "start": "161640",
    "end": "164159"
  },
  {
    "text": "stop looping here's an example if",
    "start": "164159",
    "end": "166440"
  },
  {
    "text": "shutdown requested returns false the",
    "start": "166440",
    "end": "168440"
  },
  {
    "text": "program breaks out of the loop you can",
    "start": "168440",
    "end": "170879"
  },
  {
    "text": "use continue to skip to the next Loop",
    "start": "170879",
    "end": "173200"
  },
  {
    "text": "iteration here's an example you can",
    "start": "173200",
    "end": "176000"
  },
  {
    "text": "usually use if and El statements instead",
    "start": "176000",
    "end": "178159"
  },
  {
    "text": "of continue but sometimes it's a a bit",
    "start": "178159",
    "end": "180040"
  },
  {
    "text": "easier on the eyes to use continue this",
    "start": "180040",
    "end": "182239"
  },
  {
    "text": "example wants to work with only odd",
    "start": "182239",
    "end": "183840"
  },
  {
    "text": "numbers so the even numbers are skipped",
    "start": "183840",
    "end": "185920"
  },
  {
    "text": "I'd consider continue a sometimes",
    "start": "185920",
    "end": "187840"
  },
  {
    "text": "statement used sparingly finally in",
    "start": "187840",
    "end": "189879"
  },
  {
    "text": "order to help with efforts to Port old",
    "start": "189879",
    "end": "191440"
  },
  {
    "text": "code over to Dart there is the switch",
    "start": "191440",
    "end": "193360"
  },
  {
    "text": "statement while the syntax looks",
    "start": "193360",
    "end": "195040"
  },
  {
    "text": "familiar there are numerous caveats",
    "start": "195040",
    "end": "196720"
  },
  {
    "text": "worth",
    "start": "196720",
    "end": "197519"
  },
  {
    "text": "mentioning you can only compare integer",
    "start": "197519",
    "end": "200080"
  },
  {
    "start": "198000",
    "end": "281000"
  },
  {
    "text": "string or compile time constants the",
    "start": "200080",
    "end": "202560"
  },
  {
    "text": "compared objects must be instances of",
    "start": "202560",
    "end": "204239"
  },
  {
    "text": "the same class and not of any of its",
    "start": "204239",
    "end": "205799"
  },
  {
    "text": "subtypes and the class must not override",
    "start": "205799",
    "end": "208120"
  },
  {
    "text": "equal equal one surprising aspect of",
    "start": "208120",
    "end": "210239"
  },
  {
    "text": "switch and dart is that non-empty case",
    "start": "210239",
    "end": "212159"
  },
  {
    "text": "Clauses must end with break or less",
    "start": "212159",
    "end": "214319"
  },
  {
    "text": "commonly continue throw or return that",
    "start": "214319",
    "end": "216840"
  },
  {
    "text": "is non-empty case Clauses cannot fall",
    "start": "216840",
    "end": "218920"
  },
  {
    "text": "through you must explicitly end a",
    "start": "218920",
    "end": "220959"
  },
  {
    "text": "non-empty case Clause usually with a",
    "start": "220959",
    "end": "222959"
  },
  {
    "text": "break here's an",
    "start": "222959",
    "end": "224840"
  },
  {
    "text": "example you will get a static warning if",
    "start": "224840",
    "end": "227560"
  },
  {
    "text": "you emit break continue throw or return",
    "start": "227560",
    "end": "230879"
  },
  {
    "text": "and the code will error at that location",
    "start": "230879",
    "end": "233239"
  },
  {
    "text": "at runtime I keep saying non-empty case",
    "start": "233239",
    "end": "236040"
  },
  {
    "text": "Clauses why is that it turns out that",
    "start": "236040",
    "end": "238439"
  },
  {
    "text": "Dart supports empty case case Clauses",
    "start": "238439",
    "end": "240560"
  },
  {
    "text": "which do fall through here's an example",
    "start": "240560",
    "end": "243159"
  },
  {
    "text": "the deny entry method runs for both",
    "start": "243159",
    "end": "245200"
  },
  {
    "text": "closed and locked the closed case Clause",
    "start": "245200",
    "end": "248040"
  },
  {
    "text": "is empty and thus does not require a",
    "start": "248040",
    "end": "250239"
  },
  {
    "text": "break as with many other switch",
    "start": "250239",
    "end": "252239"
  },
  {
    "text": "statements you can end a switch",
    "start": "252239",
    "end": "254000"
  },
  {
    "text": "statement with a default clause here's",
    "start": "254000",
    "end": "256000"
  },
  {
    "text": "an example if no case Clause matches the",
    "start": "256000",
    "end": "259040"
  },
  {
    "text": "default clause will run I hope you",
    "start": "259040",
    "end": "261639"
  },
  {
    "text": "enjoyed this tour of darts control flow",
    "start": "261639",
    "end": "263400"
  },
  {
    "text": "statements thanks for watching I'm Seth",
    "start": "263400",
    "end": "265240"
  },
  {
    "text": "lad as we say here on Dart tips stay",
    "start": "265240",
    "end": "267120"
  },
  {
    "text": "sharp click here to subscribe to our",
    "start": "267120",
    "end": "268960"
  },
  {
    "text": "channel for more episodes of Dart tips",
    "start": "268960",
    "end": "270800"
  },
  {
    "text": "we appreciate any thoughts you might",
    "start": "270800",
    "end": "272080"
  },
  {
    "text": "have for the series please leave them in",
    "start": "272080",
    "end": "273639"
  },
  {
    "text": "the comments below if you have any",
    "start": "273639",
    "end": "275520"
  },
  {
    "text": "additional questions about Dart please",
    "start": "275520",
    "end": "277039"
  },
  {
    "text": "drop by stack Overflow where Dart",
    "start": "277039",
    "end": "278600"
  },
  {
    "text": "experts are standing by to help you out",
    "start": "278600",
    "end": "280240"
  },
  {
    "text": "see you next time",
    "start": "280240",
    "end": "283400"
  }
]