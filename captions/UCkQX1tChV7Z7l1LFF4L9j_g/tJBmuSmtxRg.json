[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "[Music]",
    "start": "680",
    "end": "8549"
  },
  {
    "text": "hi so today we're going to talk about how facebook brought quick to billions next slide",
    "start": "15040",
    "end": "21199"
  },
  {
    "text": "so first off who are we so my name is matt joris i'm a software engineer on the traffic protocols team at facebook",
    "start": "21199",
    "end": "27519"
  },
  {
    "text": "i'm also one of the co-chairs of the itf quick working group which is the group that standardized quick",
    "start": "27519",
    "end": "34239"
  },
  {
    "text": "and my name is yang i'm also a software engineer on the traffic chronicles team at facebook",
    "start": "34239",
    "end": "40719"
  },
  {
    "start": "40000",
    "end": "394000"
  },
  {
    "text": "so what is quick to be really brief about it quick is the next internet transport protocol next slide",
    "start": "40719",
    "end": "48000"
  },
  {
    "text": "so in terms of the more traditional osi layering model that everyone's probably familiar with you have",
    "start": "48399",
    "end": "55039"
  },
  {
    "text": "application security and transport layers so at the very top you have http semantics these are things like get post",
    "start": "55039",
    "end": "62559"
  },
  {
    "text": "other things like that that form the basis of http requests so under that is the mapping of those semantics to an",
    "start": "62559",
    "end": "69520"
  },
  {
    "text": "actual protocol so the one that's existed for a while now is http 2 and",
    "start": "69520",
    "end": "74880"
  },
  {
    "text": "as you might expect h2d3 being 3 is the next version and is quick specific both",
    "start": "74880",
    "end": "80000"
  },
  {
    "text": "of these provide things like prioritization and header compression and in 2 it provides the stream",
    "start": "80000",
    "end": "86560"
  },
  {
    "text": "multiplexing so the next layer um is the security layer now this is where things start to",
    "start": "86560",
    "end": "92640"
  },
  {
    "text": "diverge a little bit with the traditional stack with http 2 underneath it is usually tls and usually",
    "start": "92640",
    "end": "99040"
  },
  {
    "text": "tls 1.3 so pls provides things like authentication decryption and you know",
    "start": "99040",
    "end": "106720"
  },
  {
    "text": "generally makes the transport secures for use on the internet now on the quick side you notice that",
    "start": "106720",
    "end": "113280"
  },
  {
    "text": "there's not really a clean delineation and this is because tls is sort of baked into quick then",
    "start": "113280",
    "end": "120159"
  },
  {
    "text": "what that means is there's only one handshake there's not like a separate tls handshake and quick handshake there's just the quick handshake and",
    "start": "120159",
    "end": "126960"
  },
  {
    "text": "also the encryption is done on a per packet basis so then when we go into the transport",
    "start": "126960",
    "end": "133200"
  },
  {
    "text": "layer again we see that there's a bit of a difference so on the left hand side we have tcp which everyone's familiar with it's",
    "start": "133200",
    "end": "139440"
  },
  {
    "text": "connection oriented provides reliability on the internet provides congestion control things like that and also of",
    "start": "139440",
    "end": "145440"
  },
  {
    "text": "course provides the typical tcp byte stream semantic which is usually exposed from",
    "start": "145440",
    "end": "150800"
  },
  {
    "text": "something like a socket now quick has some of the same things so it says things like connect congestion control",
    "start": "150800",
    "end": "157280"
  },
  {
    "text": "reliability has connection oriented uh behaviors but what's different is that it has",
    "start": "157280",
    "end": "162959"
  },
  {
    "text": "stream multiplexing what this means is that quick exposes multiple independent",
    "start": "162959",
    "end": "168000"
  },
  {
    "text": "streams on a single connection and they're independent so far as one stream",
    "start": "168000",
    "end": "173120"
  },
  {
    "text": "does not block the delivery of another stream this is a fundamental difference with tcp that you can only achieve with",
    "start": "173120",
    "end": "178640"
  },
  {
    "text": "multiple tcp connections additionally we see another difference which is that quick has udp underneath",
    "start": "178640",
    "end": "185360"
  },
  {
    "text": "and why is this well tcp was defined a long time ago and had the luxury of being its own separate internet protocol",
    "start": "185360",
    "end": "191920"
  },
  {
    "text": "and getting its own internet protocol number this isn't realistic to do anymore because it's hard to update old",
    "start": "191920",
    "end": "198159"
  },
  {
    "text": "equipment to understand new internet protocols so instead quick basically piggybacks on top of udp like a lot of",
    "start": "198159",
    "end": "204560"
  },
  {
    "text": "other protocols do and that allows it to transit around the internet unperturbed",
    "start": "204560",
    "end": "210560"
  },
  {
    "text": "and of course both of these sit on top of ipv4 and ipv6 which is just the way that we route data around the internet",
    "start": "210560",
    "end": "217200"
  },
  {
    "text": "next slide so why quick we already kind of touched on a little bit this but one of the",
    "start": "217200",
    "end": "222879"
  },
  {
    "text": "biggest reasons is something that we call ossification and protocol design and ossification is a word to me that",
    "start": "222879",
    "end": "229760"
  },
  {
    "text": "means to become bone and what that's referring to is that protocols like tcp have existed for so",
    "start": "229760",
    "end": "236400"
  },
  {
    "text": "long and their wire formats are so well known that it gets really hard to change",
    "start": "236400",
    "end": "241840"
  },
  {
    "text": "them and that's because there's a lot of equipment on the internet that makes assumptions about that wire format and",
    "start": "241840",
    "end": "247920"
  },
  {
    "text": "may do things like drop it or modify it if it diverts from its expectations quick solves this by encrypting the vast",
    "start": "247920",
    "end": "255599"
  },
  {
    "text": "majority of the protocols so there's not really much exposed which means that we",
    "start": "255599",
    "end": "260639"
  },
  {
    "text": "can change whatever goes on underneath the encryption because no one can make any assumptions about it",
    "start": "260639",
    "end": "266400"
  },
  {
    "text": "another key advantage of quick is since it's built on top of udp that allows us to implement it in user space and this",
    "start": "266400",
    "end": "273600"
  },
  {
    "text": "is important because tcp is generally implemented by your operating system and is kind of untouchable and unchangeable",
    "start": "273600",
    "end": "280000"
  },
  {
    "text": "like it will change over slowly over time but you don't have much control over it it's hard to iterate on it or",
    "start": "280000",
    "end": "286400"
  },
  {
    "text": "extend it or modify it and then experiment with those modifications with quick since it's implemented in",
    "start": "286400",
    "end": "291680"
  },
  {
    "text": "user space we can change and iterate it as fast as we can push software to our servers or release",
    "start": "291680",
    "end": "299919"
  },
  {
    "text": "release software to mobile things like mobile apps and of course additionally as i said",
    "start": "300400",
    "end": "305600"
  },
  {
    "text": "before quick has independent streams that can be multiplexed at the connection layer",
    "start": "305600",
    "end": "310960"
  },
  {
    "text": "and since it's been designed recently it can integrate decades of experience running protocols on the internet like",
    "start": "310960",
    "end": "318080"
  },
  {
    "text": "tcp which lets us have state-of-the-art loss recovery next slide",
    "start": "318080",
    "end": "323600"
  },
  {
    "text": "so let's talk about quick at facebook so we have the diagram same diagram we saw earlier on the left and this is how our",
    "start": "323600",
    "end": "330080"
  },
  {
    "text": "software fits into it and all of these are open pieces of open source software so the top three are proxygen fizz and",
    "start": "330080",
    "end": "336800"
  },
  {
    "text": "move fast and they together are c-plus plus implementations of http tls 1.3 and",
    "start": "336800",
    "end": "342880"
  },
  {
    "text": "the quick transport protocol and all three of these taken together are how we implement our servers so our",
    "start": "342880",
    "end": "350080"
  },
  {
    "text": "web servers our load balancers things like that and it's also been packaged together",
    "start": "350080",
    "end": "355120"
  },
  {
    "text": "and with what we use in the mobile apps to implement a basically a networking stack",
    "start": "355120",
    "end": "360240"
  },
  {
    "text": "and this is really valuable because we can share code from on the client and the server and iterate it on as fast as",
    "start": "360240",
    "end": "366319"
  },
  {
    "text": "we can release apps and as fast as we can release servers you know software to our servers",
    "start": "366319",
    "end": "372479"
  },
  {
    "text": "and the bottom one is is the one that's a little bit of an odd one out but it's our it's our",
    "start": "372479",
    "end": "378160"
  },
  {
    "text": "l4 layer 4 load balancing software called catron which is based on xtp and ebpf and it allows us to load balance",
    "start": "378160",
    "end": "385759"
  },
  {
    "text": "both tcp and quick connections consistently and reliably for our data",
    "start": "385759",
    "end": "391520"
  },
  {
    "text": "centers next slide so all that sounds great right you know",
    "start": "391520",
    "end": "397199"
  },
  {
    "start": "394000",
    "end": "410000"
  },
  {
    "text": "we have this new modern transport protocol it's encrypted everything's great about it uh we have all the",
    "start": "397199",
    "end": "402800"
  },
  {
    "text": "software that we implemented and so we probably just implemented it turned it on and everything was great next slide",
    "start": "402800",
    "end": "410800"
  },
  {
    "start": "410000",
    "end": "555000"
  },
  {
    "text": "obviously though that's not really how it happens um and so to talk more about that i'm going to pass it over to young",
    "start": "410800",
    "end": "416800"
  },
  {
    "text": "thank you matt uh yes so it turns out changing the transport layer protocol",
    "start": "416800",
    "end": "422400"
  },
  {
    "text": "and http at the scale of facebook is actually quite challenging um before we dive into some of the",
    "start": "422400",
    "end": "429440"
  },
  {
    "text": "interesting problems we solved in the past couple years let's first look at how exactly the",
    "start": "429440",
    "end": "436560"
  },
  {
    "text": "networking stack looks like in facebook and instagram app uh before we start to do this transition",
    "start": "436560",
    "end": "442479"
  },
  {
    "text": "into quick so they were both using tls one three with early data enabled",
    "start": "442479",
    "end": "448000"
  },
  {
    "text": "on the facebook side um all the api requests aka graphql and other static",
    "start": "448000",
    "end": "453680"
  },
  {
    "text": "requests whether it's image or video they all use http 2.",
    "start": "453680",
    "end": "459280"
  },
  {
    "text": "for instagram the api requests use http 2 but for the static content like image",
    "start": "459280",
    "end": "465280"
  },
  {
    "text": "and video they were still going over http11 connection um",
    "start": "465280",
    "end": "470400"
  },
  {
    "text": "so for facebook app graph image and video they all go through separate connections and on the instagram side",
    "start": "470400",
    "end": "476879"
  },
  {
    "text": "image and video can potentially go through the same connection on the server side we just use standard",
    "start": "476879",
    "end": "482560"
  },
  {
    "text": "linux tcp stack the connection control we use is version one of dbr",
    "start": "482560",
    "end": "489360"
  },
  {
    "text": "so on the internet there's still roughly about one percent of the user who cannot",
    "start": "489759",
    "end": "495440"
  },
  {
    "text": "really have their traffic go through udp over portfolio three",
    "start": "495440",
    "end": "500639"
  },
  {
    "text": "and one percent user in facebook's user base is a very large number",
    "start": "500639",
    "end": "506319"
  },
  {
    "text": "to make sure that when we enable quick and hp 3 for our users they can still safely",
    "start": "506319",
    "end": "512240"
  },
  {
    "text": "and reliably use the app we come up with this algorithm to raise the quake and tcp",
    "start": "512240",
    "end": "518479"
  },
  {
    "text": "connection when we need to open your connection the idea is very simple so we open a",
    "start": "518479",
    "end": "523680"
  },
  {
    "text": "quick connection and we wait 200 milliseconds after that we fall back to",
    "start": "523680",
    "end": "529120"
  },
  {
    "text": "a tcp connection and if we have both quick and tcp",
    "start": "529120",
    "end": "534480"
  },
  {
    "text": "available in our session pool on the client side we always prefer quick connection",
    "start": "534480",
    "end": "540160"
  },
  {
    "text": "so this algorithm clearly has a preference in quick overtcp that's because our data",
    "start": "540160",
    "end": "547600"
  },
  {
    "text": "shows as long as quick is not blocked it always performs good or even better than",
    "start": "547600",
    "end": "552720"
  },
  {
    "text": "tcp so with this algorithm ready we were ready to run real experiment with",
    "start": "552720",
    "end": "559279"
  },
  {
    "start": "555000",
    "end": "971000"
  },
  {
    "text": "production traffic and i will give it back to matt to talk about congestion control and the focus",
    "start": "559279",
    "end": "565760"
  },
  {
    "text": "thanks so yeah so to understand some of the challenges we face next let's start with",
    "start": "565760",
    "end": "571040"
  },
  {
    "text": "some basic definitions of congestion control and flow control so congestion control is essentially an algorithm used",
    "start": "571040",
    "end": "577600"
  },
  {
    "text": "by ascending transport like tcp or quick to minimize loss or you know congestion",
    "start": "577600",
    "end": "584959"
  },
  {
    "text": "and maximize something like usually throughput so our ability to deliver data to",
    "start": "584959",
    "end": "591120"
  },
  {
    "text": "the client flow control is different flow control is essentially a way to limit the amount",
    "start": "591120",
    "end": "596959"
  },
  {
    "text": "of data that an application buffers so if i'm receiving data i might want to say oh i only want to receive you know",
    "start": "596959",
    "end": "604160"
  },
  {
    "text": "100 kilobytes or two megabytes of data and once you once you hit that don't send me any more data until i tell you",
    "start": "604160",
    "end": "611040"
  },
  {
    "text": "it's okay this is essentially a way to limit the amount of data that an receiving",
    "start": "611040",
    "end": "616959"
  },
  {
    "text": "application has to buffer next slide so an interesting thing that we saw with",
    "start": "616959",
    "end": "623839"
  },
  {
    "text": "uh congestion control and specifically on instagram was if you remember what young said",
    "start": "623839",
    "end": "629920"
  },
  {
    "text": "instagram was using six connections to fetch",
    "start": "629920",
    "end": "635200"
  },
  {
    "text": "fetch data from the servers now it was not only doing this basically for multiplexing reasons so",
    "start": "635200",
    "end": "642079"
  },
  {
    "text": "that it could have multiple in-flight requests at the same time but another side effect of this is that",
    "start": "642079",
    "end": "647760"
  },
  {
    "text": "for the first request that the app makes it's able to download quite a lot of data in that",
    "start": "647760",
    "end": "653440"
  },
  {
    "text": "first initial slide this is because the sending congestion controllers they're",
    "start": "653440",
    "end": "658800"
  },
  {
    "text": "all independent and they all decide okay we're gonna we're gonna send not too many packets because we don't know how much congestion there might be so we're",
    "start": "658800",
    "end": "664800"
  },
  {
    "text": "gonna send 10 but since there's six connections it's actually the same server will end up sending about 60",
    "start": "664800",
    "end": "670240"
  },
  {
    "text": "packets to the to the same app now if we go to the next slide",
    "start": "670240",
    "end": "675920"
  },
  {
    "text": "when we changed everything to quick since click has multiplexing on a single connection",
    "start": "675920",
    "end": "681120"
  },
  {
    "text": "uh we don't necessarily need those six connections to achieve multiplexing however it ends up being disadvantaged",
    "start": "681120",
    "end": "687760"
  },
  {
    "text": "compared to those six tcp connections early on because that same connection is still limited by",
    "start": "687760",
    "end": "693040"
  },
  {
    "text": "those 10 packets so this showed up meaningfully in the metrics when we tried to use quick and instagram mostly",
    "start": "693040",
    "end": "699839"
  },
  {
    "text": "in metrics related to app startup time and media loading",
    "start": "699839",
    "end": "705279"
  },
  {
    "text": "and so how how did we decide to fix this well basically we split the difference and so we had one",
    "start": "705279",
    "end": "711600"
  },
  {
    "text": "connection but we decided okay we're not going to go all the way to 60 because that's that's quite high",
    "start": "711600",
    "end": "717200"
  },
  {
    "text": "but what about 30 30 is a more reasonable number and and indeed it's still less impactful to the network than",
    "start": "717200",
    "end": "723279"
  },
  {
    "text": "having those six connections but by doing this we were actually able to completely make up the gap in those",
    "start": "723279",
    "end": "728800"
  },
  {
    "text": "metrics with tcp and actually even improve it so we ended up having um",
    "start": "728800",
    "end": "733920"
  },
  {
    "text": "the media load times during startup were improved by switching to quick with this uh increase in initial",
    "start": "733920",
    "end": "740480"
  },
  {
    "text": "congestion window next slide so i've already mentioned congestion",
    "start": "740480",
    "end": "746480"
  },
  {
    "text": "window a couple times but i'm gonna let's talk about it again a little bit more in detail so suppose you have a 10",
    "start": "746480",
    "end": "752639"
  },
  {
    "text": "megabit per second link with a 100 millisecond rtt or round trip time so a",
    "start": "752639",
    "end": "757920"
  },
  {
    "text": "round trip time of 100 milliseconds means that the time it takes from for a packet to go from one end to the other",
    "start": "757920",
    "end": "764160"
  },
  {
    "text": "end and back again is 100 milliseconds so a question you might ask and the",
    "start": "764160",
    "end": "769440"
  },
  {
    "text": "question that we ask in servers is how much data do i need to have in flight in order to fully utilize this 10 megabit",
    "start": "769440",
    "end": "776880"
  },
  {
    "text": "per second link and to do this it's just simple math you take the link speed you multiply by the round",
    "start": "776880",
    "end": "782880"
  },
  {
    "text": "trip time you get something called the bandwidth bandwidth delay product or pdp and the bdp is also a sort of idealized",
    "start": "782880",
    "end": "789680"
  },
  {
    "text": "congestion window which is the amount of data that a server should have sent to maximize the throughput here",
    "start": "789680",
    "end": "796720"
  },
  {
    "text": "next slide so why is this relevant this is relevant because of flow control because",
    "start": "796720",
    "end": "802959"
  },
  {
    "text": "congestion window can essentially be bound by flow control what i mean by that is that flow control essentially as",
    "start": "802959",
    "end": "810320"
  },
  {
    "text": "we said limits the amount of data an application is willing to receive so in pcp and with",
    "start": "810320",
    "end": "816079"
  },
  {
    "text": "http 2 there's two layers of flow control there's the tcp flow control and there's the http 2 flow control",
    "start": "816079",
    "end": "823519"
  },
  {
    "text": "the the tcp one is determined by the ttp stack it shrinks and grows over time and you don't really mess with it too much",
    "start": "823519",
    "end": "830000"
  },
  {
    "text": "usually the http 2 flow control is set by the application very explicitly and",
    "start": "830000",
    "end": "835360"
  },
  {
    "text": "for us it's usually static in size so you set it to say a static number of like 100 kilobytes one megabyte 10",
    "start": "835360",
    "end": "840480"
  },
  {
    "text": "megabytes whatever you want now in quick since um",
    "start": "840480",
    "end": "846240"
  },
  {
    "text": "the stream multiplexing and all that is built into the transport we there's no separate flow control for like the",
    "start": "846240",
    "end": "852959"
  },
  {
    "text": "transport and http there's just one and it's controlled by the transport and similar to the hv2 one it's we have it",
    "start": "852959",
    "end": "858800"
  },
  {
    "text": "set by the application and it's also static in size now something that we found was that",
    "start": "858800",
    "end": "864639"
  },
  {
    "text": "the the static limit set by our applications for http 2",
    "start": "864639",
    "end": "870720"
  },
  {
    "text": "did not work well for quick so it was set into something like 165 kilobytes",
    "start": "870720",
    "end": "876160"
  },
  {
    "text": "and when we tried to use this with quick we would see a lot of negative uh metrics and to figure out why we have",
    "start": "876160",
    "end": "882639"
  },
  {
    "text": "the next slide so one way to visualize this is we can go back to that ideal congestion window",
    "start": "882639",
    "end": "888480"
  },
  {
    "text": "idea which is for that 10 megabit per second length at 100 milliseconds rtt we want to have",
    "start": "888480",
    "end": "895600"
  },
  {
    "text": "ideally 122 kilobytes of data available in order to maximize that throughput",
    "start": "895600",
    "end": "901839"
  },
  {
    "text": "but the flow control if you remember limits the sender from sending more than a set amount of",
    "start": "901839",
    "end": "907680"
  },
  {
    "text": "data so if you have a flow control let's say it's at 100 kilobytes then the sender has no choice but to respect that",
    "start": "907680",
    "end": "914880"
  },
  {
    "text": "and it's n it's unable to really fully utilize the link and so like in this case the flow",
    "start": "914880",
    "end": "921040"
  },
  {
    "text": "control is too small it's 100 kilobytes it's less than 122 kilobytes and so all that image and video data it's kind of",
    "start": "921040",
    "end": "927440"
  },
  {
    "text": "constrained by what it could potentially send simply from the flow control so next slide",
    "start": "927440",
    "end": "934079"
  },
  {
    "text": "so the way that we can fix this is essentially allow the application to have a higher flow control limit and so",
    "start": "934079",
    "end": "940720"
  },
  {
    "text": "in this case when you set it to something higher like two megabytes your ideal congestion window is 122 kilobytes",
    "start": "940720",
    "end": "947519"
  },
  {
    "text": "well now the congestion window can grow because the the server is able to send more data that fits more data onto the",
    "start": "947519",
    "end": "954880"
  },
  {
    "text": "wire which has a higher throughput and that that leads to a better experience for the user as they're able",
    "start": "954880",
    "end": "960320"
  },
  {
    "text": "to download things like images and videos much faster this is something we had to do for quick in order to",
    "start": "960320",
    "end": "966720"
  },
  {
    "text": "show improvements over http do next slide",
    "start": "966720",
    "end": "972720"
  },
  {
    "start": "971000",
    "end": "1241000"
  },
  {
    "text": "so we covered the congestion control we covered flow control we talked about how we can safely erase a quick connection",
    "start": "974959",
    "end": "981839"
  },
  {
    "text": "and a tcp connection so that user always have a connection to use",
    "start": "981839",
    "end": "987040"
  },
  {
    "text": "if you're a networking person i hope you find all those topics very relevant to you as a networking person myself when i",
    "start": "987040",
    "end": "994160"
  },
  {
    "text": "started to work on this project i was also thinking those will be the problem i will run",
    "start": "994160",
    "end": "999360"
  },
  {
    "text": "into and i will have to solve and turns out there are also some very surprising application behavior that i",
    "start": "999360",
    "end": "1006079"
  },
  {
    "text": "actually need to understand to actually make quick and hp3 worthwhile",
    "start": "1006079",
    "end": "1011440"
  },
  {
    "text": "the first example here is when we started to enable quick and hp 3",
    "start": "1011440",
    "end": "1016480"
  },
  {
    "text": "in the facebook app we started small we first only enabled it for the graphql",
    "start": "1016480",
    "end": "1023680"
  },
  {
    "text": "the api requests and surprisingly by enabling quick for graphql we request",
    "start": "1023680",
    "end": "1031199"
  },
  {
    "text": "image and video requests which was still over http 2 and the tcp",
    "start": "1031199",
    "end": "1037360"
  },
  {
    "text": "we did not touch image and video at all but somehow they request so how did this happen",
    "start": "1037360",
    "end": "1044558"
  },
  {
    "text": "after some debugging what we figure out is the first",
    "start": "1044559",
    "end": "1049600"
  },
  {
    "text": "initial feed loading requests or when this was sent out from the application application has this heuristic",
    "start": "1049600",
    "end": "1056799"
  },
  {
    "text": "if it gets the response within two seconds it will try to load fresh feed",
    "start": "1056799",
    "end": "1062400"
  },
  {
    "text": "from the network but if after two seconds you still have not received the fit loading response",
    "start": "1062400",
    "end": "1068880"
  },
  {
    "text": "it will actually try to load feed from a local cache as you can imagine when we switched",
    "start": "1068880",
    "end": "1075919"
  },
  {
    "text": "to use quick for the graphql request because now it is slightly faster",
    "start": "1075919",
    "end": "1082400"
  },
  {
    "text": "we have more user that's within this two seconds limit but then their tcp",
    "start": "1082400",
    "end": "1088799"
  },
  {
    "text": "their image and video requests are still over tcp so the percentage of image and video",
    "start": "1088799",
    "end": "1095360"
  },
  {
    "text": "requests that will be used in a relatively bad network actually increased so this is why those metrics",
    "start": "1095360",
    "end": "1101840"
  },
  {
    "text": "actually regressed once we also enabled quick and http 3 for image and video this problem",
    "start": "1101840",
    "end": "1108400"
  },
  {
    "text": "disappeared another very surprising app behavior that we had to understand was in the",
    "start": "1108400",
    "end": "1115760"
  },
  {
    "text": "instagram android app we enabled quake for video image and api",
    "start": "1115760",
    "end": "1121440"
  },
  {
    "text": "requests for api and video everything looks very positive",
    "start": "1121440",
    "end": "1126799"
  },
  {
    "text": "but on the image side the number was quite mixed and a notable regression",
    "start": "1126799",
    "end": "1133679"
  },
  {
    "text": "is the image queueing time in the app itself so turns out in the application there is",
    "start": "1133679",
    "end": "1139760"
  },
  {
    "text": "a rather complex request queue that has a separate portion for the image",
    "start": "1139760",
    "end": "1145120"
  },
  {
    "text": "and as quick make the video download slightly faster the video player started",
    "start": "1145120",
    "end": "1150640"
  },
  {
    "text": "to fetch radio of higher resolution so the video response starts to take a",
    "start": "1150640",
    "end": "1156720"
  },
  {
    "text": "larger chunk from the request queue because the request 2 also has a response price limit",
    "start": "1156720",
    "end": "1162960"
  },
  {
    "text": "and as a result some image has to wait inside the image queue slightly longer",
    "start": "1162960",
    "end": "1169280"
  },
  {
    "text": "we solve this problem by tuning the response by limit in this request queue",
    "start": "1169280",
    "end": "1176960"
  },
  {
    "text": "so with all those changes then we have mentioned eventually we were able to deliver a very significant one in both",
    "start": "1177200",
    "end": "1183919"
  },
  {
    "text": "facebook and instagram app especially for video performance we were able to reduce the mean time",
    "start": "1183919",
    "end": "1191840"
  },
  {
    "text": "between buffering of the video in the radio player by 22",
    "start": "1191840",
    "end": "1197039"
  },
  {
    "text": "and also 20 decrease of radio stall we were also able to reduce 80",
    "start": "1197039",
    "end": "1203120"
  },
  {
    "text": "of the networking errors that the radio has to run into",
    "start": "1203120",
    "end": "1207840"
  },
  {
    "text": "this is the timeline of our project of working on quick and hp 3 and facebook",
    "start": "1208480",
    "end": "1216480"
  },
  {
    "text": "there are many milestones in the past three years",
    "start": "1216480",
    "end": "1221760"
  },
  {
    "text": "one thing very noticeable is from the beginning which is early 2017",
    "start": "1221760",
    "end": "1227200"
  },
  {
    "text": "to the point where our code is able to interact with other implementation",
    "start": "1227200",
    "end": "1232400"
  },
  {
    "text": "that's slightly beyond half year but from there it took us another three years to actually ship this project",
    "start": "1232400",
    "end": "1241280"
  },
  {
    "start": "1241000",
    "end": "1417000"
  },
  {
    "text": "so what are some of the takeaways here so one thing that i think is really significant is that",
    "start": "1243039",
    "end": "1249600"
  },
  {
    "text": "while quick does perform better and quick can give you great performance it's not as simple as turning it on it's",
    "start": "1249600",
    "end": "1255919"
  },
  {
    "text": "not as simple as implementing it flipping a switch and turning it on and this is usually because",
    "start": "1255919",
    "end": "1261600"
  },
  {
    "text": "existing especially complex applications can be sort of implicitly tuned or coupled to tcp",
    "start": "1261600",
    "end": "1268000"
  },
  {
    "text": "and another interesting thing that we saw when we were doing early experiments is that http and transport metrics are",
    "start": "1268000",
    "end": "1274159"
  },
  {
    "text": "things like latency number of losses number of re-transmits things like this will often just show blanket improvement",
    "start": "1274159",
    "end": "1281440"
  },
  {
    "text": "with quick they'll just feel like oh yeah this this all got better this is all really awesome but then we look at the application metrics and there'll be",
    "start": "1281440",
    "end": "1287440"
  },
  {
    "text": "regressions and this can be really confusing and really difficult to reason out but you often have to do this in order to ensure",
    "start": "1287440",
    "end": "1294000"
  },
  {
    "text": "that you're not just making some numbers better on paper you're actually improving the experience of those using",
    "start": "1294000",
    "end": "1300159"
  },
  {
    "text": "your applications and but once you do this uh put in this effort quick will have a transformative",
    "start": "1300159",
    "end": "1306720"
  },
  {
    "text": "effect on your application performance on the modern internet now in terms of future work where are we",
    "start": "1306720",
    "end": "1312640"
  },
  {
    "text": "going so you might have noticed that we didn't mention two probably headline features of quick which are zero t",
    "start": "1312640",
    "end": "1319039"
  },
  {
    "text": "connection establishment and connection migration and these are very important features but we didn't actually need",
    "start": "1319039",
    "end": "1325440"
  },
  {
    "text": "them to replace pcp with quick and there's a couple of reasons for this",
    "start": "1325440",
    "end": "1332240"
  },
  {
    "text": "one is that xero ttt essentially improves the experience when you have a new connect when you need to make a new",
    "start": "1332240",
    "end": "1338799"
  },
  {
    "text": "connection well with our applications they'd already been highly optimized to reuse connections really aggressively",
    "start": "1338799",
    "end": "1344799"
  },
  {
    "text": "and so having being in a state where you don't have a new connection is relatively rare and it mostly happens",
    "start": "1344799",
    "end": "1350240"
  },
  {
    "text": "when you're just starting the app up which is not the majority of the time it's important and in fact we're experimenting with the rtt right now",
    "start": "1350240",
    "end": "1357760"
  },
  {
    "text": "but it was we didn't need it to ship quick another one is of course connection migration which is this notion that you",
    "start": "1357760",
    "end": "1364640"
  },
  {
    "text": "can seamlessly transition between say a wi-fi interface and a cellular interface and not interrupt the user's connection",
    "start": "1364640",
    "end": "1372080"
  },
  {
    "text": "well it is really great on paper but the implementation complexities are significant both on the client side and",
    "start": "1372080",
    "end": "1378960"
  },
  {
    "text": "the server side in order to get the most potential out of it and we just haven't been able to uh invest all of our time",
    "start": "1378960",
    "end": "1385520"
  },
  {
    "text": "in it yet to ship connection migration but we do want to do it in the future in addition to these big headline",
    "start": "1385520",
    "end": "1391679"
  },
  {
    "text": "features quick because it has inherent extensibility because it's resistant to ossification",
    "start": "1391679",
    "end": "1398240"
  },
  {
    "text": "and because we can iterate on it really quickly gives us a platform for transport and http level experimentation",
    "start": "1398240",
    "end": "1406480"
  },
  {
    "text": "well into the future in a way that was never possible with tcp and http 2.",
    "start": "1406480",
    "end": "1411679"
  },
  {
    "text": "next slide and that is all we have thank you so much",
    "start": "1411679",
    "end": "1417840"
  },
  {
    "start": "1417000",
    "end": "1489000"
  },
  {
    "text": "thanks a lot for preparing a great talk i personally always really enjoy those",
    "start": "1420559",
    "end": "1427200"
  },
  {
    "text": "stories of uh deploying the lara like making big changes especially in the networking space well that's where i",
    "start": "1427200",
    "end": "1433520"
  },
  {
    "text": "work on as well and they're running into this sort of surprises coming coming to the space",
    "start": "1433520",
    "end": "1439919"
  },
  {
    "text": "with one sort of expectations and then realizing oh things are actually quality is more difficult than",
    "start": "1439919",
    "end": "1446799"
  },
  {
    "text": "one expected them to be so we we should have about 15 minutes for the live q a uh for the attendees i",
    "start": "1446799",
    "end": "1453520"
  },
  {
    "text": "would uh encourage you to post your questions into chat um",
    "start": "1453520",
    "end": "1458559"
  },
  {
    "text": "as they can as they come up we'll uh hopefully get to most of them during the session",
    "start": "1458559",
    "end": "1464080"
  },
  {
    "text": "um i think the the first question that i have was uh i was listening to you to your presentation you've mentioned the",
    "start": "1464080",
    "end": "1469760"
  },
  {
    "text": "timeline uh that it took you quite a bit like over about like three years to go through all the all the steps",
    "start": "1469760",
    "end": "1477120"
  },
  {
    "text": "uh what are the main reasons for that taking three like three years was it some of the operational",
    "start": "1477120",
    "end": "1483360"
  },
  {
    "text": "challenges what are some aspects about quick summatization or something else",
    "start": "1483360",
    "end": "1488960"
  },
  {
    "text": "um i would say that it was mostly the fact that",
    "start": "1491200",
    "end": "1497679"
  },
  {
    "text": "we took a while to get to the baselines so the infrastructure supported it um so that that took quite a while like it's",
    "start": "1497679",
    "end": "1503120"
  },
  {
    "text": "one thing to interrupt with you know some other some other implementation like a one-off it took a lot longer to",
    "start": "1503120",
    "end": "1509120"
  },
  {
    "text": "make sure that like everything was ready to go and like in the app and like the code was there and like even working and",
    "start": "1509120",
    "end": "1516080"
  },
  {
    "text": "um then the majority of the time though really after that is make we can't just turn stuff on because we want to um",
    "start": "1516080",
    "end": "1523279"
  },
  {
    "text": "we have we have to make sure it uh actually improves the experience otherwise it's kind of pointless so i",
    "start": "1523279",
    "end": "1530080"
  },
  {
    "text": "think most of it was investigating um investigating regressions that are",
    "start": "1530080",
    "end": "1536720"
  },
  {
    "text": "caused either by tuning or bugs it would be what i would say and you want to add anything to that",
    "start": "1536720",
    "end": "1543679"
  },
  {
    "text": "uh yeah i i i think uh i agree with what matt just said um i",
    "start": "1543679",
    "end": "1550640"
  },
  {
    "text": "think one thing i would add is um understanding the you know the networking behavior",
    "start": "1550640",
    "end": "1556559"
  },
  {
    "text": "and the understanding why application is going to see a regression there there is always a gap there um the",
    "start": "1556559",
    "end": "1563520"
  },
  {
    "text": "visibility um the causation you know we change this",
    "start": "1563520",
    "end": "1568640"
  },
  {
    "text": "between a and then suddenly system b has some number moved um",
    "start": "1568640",
    "end": "1574960"
  },
  {
    "text": "sometimes that's that's not always clear so figuring that out um took surprising",
    "start": "1574960",
    "end": "1580880"
  },
  {
    "text": "the amount of time and uh can you identify maybe some of the good practices that you followed",
    "start": "1580880",
    "end": "1587120"
  },
  {
    "text": "facebook to optimize that process because like in my experience i can totally relate that uh this this is uh",
    "start": "1587120",
    "end": "1592880"
  },
  {
    "text": "like you you nailed it this is the key of uh rolling out uh kind of changes especially on the",
    "start": "1592880",
    "end": "1599360"
  },
  {
    "text": "kind of transparent or like on the infrastructure layer but at facebook like how do you what you do to make it",
    "start": "1599360",
    "end": "1604880"
  },
  {
    "text": "more optimal and uh can prevent some of the delays or prevent some of the outages issues that will be impacting",
    "start": "1604880",
    "end": "1611279"
  },
  {
    "text": "users yeah so we have like we had a couple things which is like first off our all",
    "start": "1611279",
    "end": "1617919"
  },
  {
    "start": "1613000",
    "end": "1699000"
  },
  {
    "text": "of our when we say like we turned on or shipped quick like this is all gated by",
    "start": "1617919",
    "end": "1623520"
  },
  {
    "text": "basically experimentation frameworks that let us uh selectively turn it on in the",
    "start": "1623520",
    "end": "1629760"
  },
  {
    "text": "application so like in the mobile apps um and we can also turn it off right so like we can turn it on we can turn it",
    "start": "1629760",
    "end": "1636080"
  },
  {
    "text": "back off and then of course we can also turn it on and turn it off on the server side so like if we found a problem which",
    "start": "1636080",
    "end": "1641520"
  },
  {
    "text": "did happen where we'd find like oh we've shipped a bug um we can we can still turn it off both",
    "start": "1641520",
    "end": "1648640"
  },
  {
    "text": "on the clients but really in an emergency we can just totally turn it off entirely um and",
    "start": "1648640",
    "end": "1655279"
  },
  {
    "text": "we really were able to leverage like facebook has a lot of this stuff just for general experimentation because you",
    "start": "1655279",
    "end": "1660559"
  },
  {
    "text": "know this is how the the products are developed that's how the infrastructure is developed is to you know iterate",
    "start": "1660559",
    "end": "1665760"
  },
  {
    "text": "quickly and there's a lot of things a lot of tools to help us do that and we're basically able to integrate into",
    "start": "1665760",
    "end": "1671120"
  },
  {
    "text": "those really easily and as you go through those",
    "start": "1671120",
    "end": "1677520"
  },
  {
    "text": "migrations uh do you were do you enable things for all the traffic or do you try to break things down by",
    "start": "1677520",
    "end": "1684480"
  },
  {
    "text": "the functional or by the user sharing or something else like i know that in the in the talk you mentioned that you treat",
    "start": "1684480",
    "end": "1690240"
  },
  {
    "text": "facebook and instagram as two different use cases because they operate quite quite differently but are there any",
    "start": "1690240",
    "end": "1695600"
  },
  {
    "text": "other segments that you have to make those diplomats easier",
    "start": "1695600",
    "end": "1700320"
  },
  {
    "start": "1699000",
    "end": "1767000"
  },
  {
    "text": "yeah we would segment like um we would have we would basically have like little groups that would you know",
    "start": "1700720",
    "end": "1707120"
  },
  {
    "text": "this group has this on this group has this on like you know so like with the flow control experimentation for example",
    "start": "1707120",
    "end": "1712399"
  },
  {
    "text": "uh we try uh we bet we have like different groups that have the default a group that had",
    "start": "1712399",
    "end": "1717840"
  },
  {
    "text": "like another number another number and we just we just run that experiment and like separately we'd have like oh this",
    "start": "1717840",
    "end": "1723600"
  },
  {
    "text": "is the experiment where we're changing the way we map error codes or something and so like try to test things",
    "start": "1723600",
    "end": "1729679"
  },
  {
    "text": "individually to see like what their individual effect is try not to compound the signals too much so that we because",
    "start": "1729679",
    "end": "1737120"
  },
  {
    "text": "like young said like things can have really unexpected like you turn two things on and like a third thing moves",
    "start": "1737120",
    "end": "1742640"
  },
  {
    "text": "but only if you turn these two things on so it's like um being able to isolate that is really important",
    "start": "1742640",
    "end": "1750320"
  },
  {
    "text": "great yeah so let's take a questions from the from the chat so the first one um so quick works on top of udp",
    "start": "1751440",
    "end": "1758480"
  },
  {
    "text": "uh so can you elaborate a little bit more on the experience of dealing with udp being blocked",
    "start": "1758480",
    "end": "1764240"
  },
  {
    "text": "and how do you generally dealt with it yeah so basically the flow that young",
    "start": "1764240",
    "end": "1771279"
  },
  {
    "start": "1767000",
    "end": "1873000"
  },
  {
    "text": "showed with the racing that is the way that we deal with udp being blocked which is to say that",
    "start": "1771279",
    "end": "1778080"
  },
  {
    "text": "we always have a tcp fallback um in the case that we can detect that a quick handshake is not going to complete",
    "start": "1778080",
    "end": "1785039"
  },
  {
    "text": "and the most the time when that happens is because udp is blocked or not functioning for some reason in terms of",
    "start": "1785039",
    "end": "1790480"
  },
  {
    "text": "its prevalence it's kind of difficult actually to answer that question um just because",
    "start": "1790480",
    "end": "1795520"
  },
  {
    "text": "it it kind of depends on how you frame it like if you frame it in terms of number of users if you frame it in terms",
    "start": "1795520",
    "end": "1801600"
  },
  {
    "text": "of like number of networks uh you know number of sessions like these are all different things uh what we can say is",
    "start": "1801600",
    "end": "1807520"
  },
  {
    "text": "like the vast majority of the place it's it's it is not blocked um it and it's",
    "start": "1807520",
    "end": "1813120"
  },
  {
    "text": "a lot of this is probably because it's kind of been normalized a bit um even so before even we were rolling out quick",
    "start": "1813120",
    "end": "1819360"
  },
  {
    "text": "google had a private variant of proprietary variant of click that also ran uh udp on port 443 um so they've",
    "start": "1819360",
    "end": "1826960"
  },
  {
    "text": "already done a lot of ground work there to get it unblocked generally but there still are places but you know it's it's",
    "start": "1826960",
    "end": "1832000"
  },
  {
    "text": "usually like you can tell really obviously that's like some network or like a lot of its companies like you know some companies clearly blocking it",
    "start": "1832000",
    "end": "1839600"
  },
  {
    "text": "with their firewalls um but it's in general not a huge problem and we it's like",
    "start": "1839600",
    "end": "1846320"
  },
  {
    "text": "really less than one percent no matter how you slice it is of users are going to be impacted by",
    "start": "1846320",
    "end": "1852159"
  },
  {
    "text": "this and i think i remember from the young's",
    "start": "1852159",
    "end": "1857279"
  },
  {
    "text": "flow that was on the slide that he chose 200 milliseconds as the threshold so to fall back to tcp uh why 200 milliseconds",
    "start": "1857279",
    "end": "1865360"
  },
  {
    "text": "why what's so magical about this number uh we actually tried it a couple of",
    "start": "1865360",
    "end": "1871039"
  },
  {
    "text": "different numbers um it honestly didn't show too much difference",
    "start": "1871039",
    "end": "1877039"
  },
  {
    "text": "like we try something slightly longer something slightly you know shorter than that um",
    "start": "1877039",
    "end": "1883760"
  },
  {
    "text": "there isn't much difference um like once you are a let's say sub 500",
    "start": "1883760",
    "end": "1890399"
  },
  {
    "text": "millisecond range um there isn't too much scientific behind that either it's it's really a",
    "start": "1890399",
    "end": "1897279"
  },
  {
    "text": "experimental result um yeah and and do you save that decision to",
    "start": "1897279",
    "end": "1903440"
  },
  {
    "text": "stay in tcp throughout like a local device so every new session uh that decision has been made",
    "start": "1903440",
    "end": "1911679"
  },
  {
    "text": "i think uh yes every every new session there is this 200 milliseconds delay with one exception which is if your last",
    "start": "1913120",
    "end": "1921120"
  },
  {
    "text": "attempt of using quick actually run into an error we actually does not delay the next time we open tcp",
    "start": "1921120",
    "end": "1928880"
  },
  {
    "text": "connection okay yeah i think the question is is there a java",
    "start": "1928880",
    "end": "1934960"
  },
  {
    "start": "1931000",
    "end": "1981000"
  },
  {
    "text": "implementation of for quick at this point there's a lot of implementations um if you go to the there's the quick working",
    "start": "1934960",
    "end": "1942000"
  },
  {
    "text": "group has a github and there's a list of implementations there and there's like literally dozens and i think there's at",
    "start": "1942000",
    "end": "1948320"
  },
  {
    "text": "least two or three that are are java or a something that runs on top of the jvm um but you can bring them",
    "start": "1948320",
    "end": "1955519"
  },
  {
    "text": "there's the nice thing about quickest since it's built on top of udp like lots of people have implemented it there's many more quick implementations now than",
    "start": "1955519",
    "end": "1961600"
  },
  {
    "text": "there have ever really been tcp implementations",
    "start": "1961600",
    "end": "1966559"
  },
  {
    "text": "and how would you estimate the maturity level of those implementations because still it's a relatively new",
    "start": "1966640",
    "end": "1971679"
  },
  {
    "text": "protocol especially compared like the tcp et cetera and i think you mentioned that during the talk so what's it and",
    "start": "1971679",
    "end": "1977360"
  },
  {
    "text": "being the co-chair of the quick working group like what's your current take on it so i think that there are some it varies",
    "start": "1977360",
    "end": "1983519"
  },
  {
    "start": "1981000",
    "end": "2069000"
  },
  {
    "text": "a lot um we're kind of at the beginning of people really using it",
    "start": "1983519",
    "end": "1989519"
  },
  {
    "text": "outside of like you know facebook and companies like google are in sort of a unique position where we often control",
    "start": "1989519",
    "end": "1994720"
  },
  {
    "text": "both sides with the client and the server and this gives us an ability to be like we're going to control these",
    "start": "1994720",
    "end": "2000080"
  },
  {
    "text": "implementations a lot of things a lot of people are not in that position they only have one side",
    "start": "2000080",
    "end": "2005120"
  },
  {
    "text": "and that makes the iteration time slower and that means that they're gonna find bugs and find these other things slower",
    "start": "2005120",
    "end": "2010640"
  },
  {
    "text": "so i would say that they they've done a lot of great work um i would not expect that like you turn you",
    "start": "2010640",
    "end": "2017440"
  },
  {
    "text": "if you're gonna go invest time into quick expect to find problems like that right now um because",
    "start": "2017440",
    "end": "2024240"
  },
  {
    "text": "they're still early days for these implementations but i'm sure they will mature um really rapidly over like the next year",
    "start": "2024240",
    "end": "2030720"
  },
  {
    "text": "or two okay yeah that's that's great to know",
    "start": "2030720",
    "end": "2036000"
  },
  {
    "text": "um so i think in the presentation you've mentioned some interesting findings that",
    "start": "2036000",
    "end": "2041679"
  },
  {
    "text": "you've had at facebook of application codes making some assumptions about transport behavior",
    "start": "2041679",
    "end": "2049118"
  },
  {
    "text": "uh can you elaborate a little bit more maybe a couple like were there any more",
    "start": "2049119",
    "end": "2054878"
  },
  {
    "text": "stories and learnings from facebook or maybe you've seen some other patterns like in the industry in general our",
    "start": "2054879",
    "end": "2061679"
  },
  {
    "text": "applications are coupled with tcp so one general thing i think is um",
    "start": "2061679",
    "end": "2069839"
  },
  {
    "start": "2069000",
    "end": "2202000"
  },
  {
    "text": "that this multiplexing thing um",
    "start": "2069839",
    "end": "2075040"
  },
  {
    "text": "so with http 2 you'll have you have multiplexing but it goes over that single byte stream and that kind of",
    "start": "2075359",
    "end": "2081599"
  },
  {
    "text": "makes the multiplexing different than if you have in quick when you have these independent byte streams and so i think",
    "start": "2081599",
    "end": "2088720"
  },
  {
    "text": "a lot of place a lot of complex applications will see this sort of weird behavior where they have some sort of",
    "start": "2088720",
    "end": "2095200"
  },
  {
    "text": "gating mechanism that they're implicitly relying on whether it's like we saw it in this in instagram with that request",
    "start": "2095200",
    "end": "2101440"
  },
  {
    "text": "queue we saw it in both apps with the flow control but some sort of like",
    "start": "2101440",
    "end": "2107920"
  },
  {
    "text": "mechanism to try to limit how much how much data is being fetched",
    "start": "2107920",
    "end": "2115280"
  },
  {
    "text": "and these seemed common because we've seen them multiple times and they seem kind of natural to arise naturally",
    "start": "2115280",
    "end": "2122640"
  },
  {
    "text": "and i think that they are when you have these gates they have you have to decide",
    "start": "2122640",
    "end": "2128480"
  },
  {
    "text": "on a number and often and those numbers that's where the implicit tuning comes to tcp which is to say that like",
    "start": "2128480",
    "end": "2134960"
  },
  {
    "text": "somebody iterated on that a few times and they tweaked it and there you go they arrived at this magic number um and that will potentially be",
    "start": "2134960",
    "end": "2143040"
  },
  {
    "text": "where you need to change stuff which is you know it can be difficult to realize that because you don't realize like you",
    "start": "2143040",
    "end": "2148079"
  },
  {
    "text": "know somebody made this change a while ago um but you might that's where you often need to look other things it's",
    "start": "2148079",
    "end": "2153839"
  },
  {
    "text": "like it's more like concurrency in general like",
    "start": "2153839",
    "end": "2159280"
  },
  {
    "text": "your concurrency limits might be different um for like how many requests you can send things like that um",
    "start": "2159280",
    "end": "2166079"
  },
  {
    "text": "would be what i would say is just fundamentally different because have how tcp works versus how quick works",
    "start": "2166079",
    "end": "2172720"
  },
  {
    "text": "so basically the connection pool on the on the client on the server is making specific assumptions of how the",
    "start": "2172720",
    "end": "2179200"
  },
  {
    "text": "transport layer works right yeah pretty much yeah well i think there was a i think we have",
    "start": "2179200",
    "end": "2185280"
  },
  {
    "text": "uh time for one more question and there were two interesting ones in the chat so you've talked about the public facing",
    "start": "2185280",
    "end": "2192000"
  },
  {
    "text": "network interactions and using click click for that how's your position of using quick for data center communications or",
    "start": "2192000",
    "end": "2198160"
  },
  {
    "text": "communication between edge and the origin server",
    "start": "2198160",
    "end": "2203119"
  },
  {
    "start": "2202000",
    "end": "2342000"
  },
  {
    "text": "yeah so we had one slight mistake on our our slide there which is corrected in the downloadable slides but just said 50",
    "start": "2203200",
    "end": "2209760"
  },
  {
    "text": "of edge to origin traffic using quick that was specifically for uh",
    "start": "2209760",
    "end": "2214960"
  },
  {
    "text": "basically when we proxy the api request 50 of those go over quick and we have that as a as a test bed um in terms of",
    "start": "2214960",
    "end": "2221920"
  },
  {
    "text": "quick for other traffic um we're it's something that we're working on it's it has more challenges on the data",
    "start": "2221920",
    "end": "2229040"
  },
  {
    "text": "center which is to say that like um because it's implemented in user space there's obviously performance",
    "start": "2229040",
    "end": "2234400"
  },
  {
    "text": "overheads that come come with that um and also the the",
    "start": "2234400",
    "end": "2240800"
  },
  {
    "text": "encryption happens a bit differently and quick which is happens on a per packet basis which is less efficient than with",
    "start": "2240800",
    "end": "2246000"
  },
  {
    "text": "tcp um and so these are challenges that we think are we can overcome but they",
    "start": "2246000",
    "end": "2252640"
  },
  {
    "text": "they make it difficult for certain use cases but for some uses cases in the data center that aren't like super super high throughput you know like",
    "start": "2252640",
    "end": "2259280"
  },
  {
    "text": "sub sub gigabits per second use cases um or use cases where you go from like an edge",
    "start": "2259280",
    "end": "2265599"
  },
  {
    "text": "location out to like another location on the internet that's some place that we think more",
    "start": "2265599",
    "end": "2271520"
  },
  {
    "text": "immediately could benefit from quick for the same reasons that it does benefit quick going from the edge to the client",
    "start": "2271520",
    "end": "2277760"
  },
  {
    "text": "um so it's it's them something that we are hoping to explore like the next year and we're hoping also to get like the",
    "start": "2277760",
    "end": "2283920"
  },
  {
    "text": "cost down in terms of making quick truly uh usable everywhere",
    "start": "2283920",
    "end": "2289359"
  },
  {
    "text": "where tcp is currently used all right i think we are at the end of",
    "start": "2289359",
    "end": "2295760"
  },
  {
    "text": "the session and uh young and matt thanks again for for preparing the presentation thanks",
    "start": "2295760",
    "end": "2301359"
  },
  {
    "text": "for uh providing lots of extra insights during the q a uh we have about 20 more",
    "start": "2301359",
    "end": "2307760"
  },
  {
    "text": "minutes in the hangout room and in zoom where everyone would have an opportunity",
    "start": "2307760",
    "end": "2313280"
  },
  {
    "text": "to have a little bit more informal conversation uh ask questions in person and then we didn't get to couple",
    "start": "2313280",
    "end": "2319119"
  },
  {
    "text": "questions in in the chat so that would be a good opportunity for us to keep the discussion there",
    "start": "2319119",
    "end": "2324160"
  },
  {
    "text": "um i'm going to head out there uh right now so again thanks again for the presentation and see you in the in the",
    "start": "2324160",
    "end": "2330320"
  },
  {
    "text": "zoom room [Music]",
    "start": "2330320",
    "end": "2340409"
  },
  {
    "text": "you",
    "start": "2342640",
    "end": "2344720"
  }
]