[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7720"
  },
  {
    "text": "welcome everybody uh my name is David blevens and uh I'm here to present Apache Tommy uh before I get started",
    "start": "7720",
    "end": "16640"
  },
  {
    "text": "about myself and all that stuff let me ask you some questions about yourself so who uses Tom Cat raise your hand okay",
    "start": "16640",
    "end": "23840"
  },
  {
    "text": "the entire audience that's pretty that's pretty common who also uses another app server like J boss or glass",
    "start": "23840",
    "end": "30800"
  },
  {
    "text": "fish about half the room it's usually more about 34 the room but uh it's a pretty common theme you tend to get as",
    "start": "30800",
    "end": "37960"
  },
  {
    "text": "far as you can on tomcat and then where it falls short you end up having to use another appserver like glassfish or J",
    "start": "37960",
    "end": "44440"
  },
  {
    "text": "boss uh because it sometimes it can be too difficult to build all those things up on tomat yourself that's precisely",
    "start": "44440",
    "end": "51039"
  },
  {
    "text": "what Tommy is about um so what is a paty Tommy and let",
    "start": "51039",
    "end": "56559"
  },
  {
    "start": "54000",
    "end": "125000"
  },
  {
    "text": "me just before I say Tommy you know I uh I'm myself been working in the Java e",
    "start": "56559",
    "end": "61920"
  },
  {
    "text": "space for I guess maybe 10 plus almost 15 years uh since 99 we've about when we",
    "start": "61920",
    "end": "68960"
  },
  {
    "text": "started Apache open ejb and uh then gonal and uh I've been working on the E",
    "start": "68960",
    "end": "76320"
  },
  {
    "text": "specifications since uh 2004 or so egb",
    "start": "76320",
    "end": "81400"
  },
  {
    "text": "3.0 was my first uh set of java e specifications then later E6 and now E7",
    "start": "81400",
    "end": "87759"
  },
  {
    "text": "which is just as completed and uh so having worked in this space for a really long time I just felt that",
    "start": "87759",
    "end": "94200"
  },
  {
    "text": "the whole world used tomcat and so to try and sell people anything else was just pushing a rock up a hill so why not",
    "start": "94200",
    "end": "102799"
  },
  {
    "text": "take Tom Cat and finish it I mean Tom E specifications and various technologies",
    "start": "102799",
    "end": "108200"
  },
  {
    "text": "have progressed over the years and Tomcat has stayed the same not for the",
    "start": "108200",
    "end": "114200"
  },
  {
    "text": "lack of people needing more things like JX RS and jpa and not that these things don't have better integration",
    "start": "114200",
    "end": "120600"
  },
  {
    "text": "uh than than what's you know there in Tom Cat uh you know so we decided to go",
    "start": "120600",
    "end": "125680"
  },
  {
    "start": "125000",
    "end": "270000"
  },
  {
    "text": "ahead and let's let's let's put tom cat in the same realm as all the other Java",
    "start": "125680",
    "end": "131480"
  },
  {
    "text": "app servers so what is Tom what is Tommy uh it's a Java E6 web profile",
    "start": "131480",
    "end": "138800"
  },
  {
    "text": "certified stack uh it's pronounced Tommy not uh Tom E it's Tommy like the name you may",
    "start": "138800",
    "end": "147440"
  },
  {
    "text": "know someone called Tommy and they probably think this app server is pretty cool uh it's Tomcat through and",
    "start": "147440",
    "end": "154640"
  },
  {
    "text": "through uh so our very very very very core aspect of it is to not mess with",
    "start": "154640",
    "end": "160440"
  },
  {
    "text": "Tomcat so if we've done something you know to mess with that experience it's it's not what we want uh it's all Apache",
    "start": "160440",
    "end": "167640"
  },
  {
    "text": "components that we've added to Tomcat so open jpa open web beans open ejb my",
    "start": "167640",
    "end": "174120"
  },
  {
    "text": "faces Bean validation um cxf and active mq",
    "start": "174120",
    "end": "180440"
  },
  {
    "text": "and then our core values that really focus the project and I think these are you know kind of an interesting and",
    "start": "180440",
    "end": "188239"
  },
  {
    "text": "unique perspective amongst appservers specifically is be",
    "start": "188239",
    "end": "193360"
  },
  {
    "text": "small so we don't want to offer the world another large appserver I don't",
    "start": "193360",
    "end": "198480"
  },
  {
    "text": "think there's much of a need for that there's plenty of good app servers out there uh but they're they're fairly big",
    "start": "198480",
    "end": "204159"
  },
  {
    "text": "in size um Tommy is small very small",
    "start": "204159",
    "end": "210319"
  },
  {
    "text": "uh be certified so unlike you know when you put all the stuff together on Tomcat yourself it doesn't uh it's not",
    "start": "210319",
    "end": "218000"
  },
  {
    "text": "certified uh what certified means is that there's a very large test Suite that you have to pass that all when you",
    "start": "218000",
    "end": "224799"
  },
  {
    "text": "integrate all the stuff together you have to run these you know tens of thousands of tests that that are",
    "start": "224799",
    "end": "230360"
  },
  {
    "text": "provided by Oracle uh and then when you do that you're",
    "start": "230360",
    "end": "236000"
  },
  {
    "text": "certified uh and then of course be Tomcat so if we've done something to",
    "start": "236000",
    "end": "241920"
  },
  {
    "text": "mess with the Tom Cat experience then we've done a really",
    "start": "241920",
    "end": "248239"
  },
  {
    "text": "uh we we've done something seriously wrong we've we've Val you know violated one of the core tenants of the project",
    "start": "248239",
    "end": "254640"
  },
  {
    "text": "so if your app runs on Tom Cat and it doesn't run on Tommy that's a big issue so please let",
    "start": "254640",
    "end": "260320"
  },
  {
    "text": "us know and then we will fix that immediately we we take those into the highest uh into the highest level of of",
    "start": "260320",
    "end": "267680"
  },
  {
    "text": "of severity so as a lot of this hinges on what is uh",
    "start": "267680",
    "end": "275080"
  },
  {
    "start": "270000",
    "end": "293000"
  },
  {
    "text": "you know that Tommy is a web profile certified server the question is of",
    "start": "275080",
    "end": "280479"
  },
  {
    "text": "course what is the web profile uh so who has actually heard of the web profile",
    "start": "280479",
    "end": "285560"
  },
  {
    "text": "already all right so who's heard of java e just in general okay everybody of",
    "start": "285560",
    "end": "291199"
  },
  {
    "text": "course so you know how people would say jav e is big and Bloated and in some",
    "start": "291199",
    "end": "297039"
  },
  {
    "start": "293000",
    "end": "460000"
  },
  {
    "text": "regards they were correct and so what we did in E6 at the specification level is what we",
    "start": "297039",
    "end": "304080"
  },
  {
    "text": "decided to do is create another version of java e that is basically half the size of java e the full profile so this",
    "start": "304080",
    "end": "312639"
  },
  {
    "text": "smaller version is called the web profile and the web profile cuts out a",
    "start": "312639",
    "end": "317840"
  },
  {
    "text": "lot of the Legacy Technologies uh and allows vendors to create certified servers that are half",
    "start": "317840",
    "end": "325479"
  },
  {
    "text": "the size of these big bloated Legacy systems so when you talk to somebody and",
    "start": "325479",
    "end": "330919"
  },
  {
    "text": "they say jav e is big and Bloated blah blah blah blah ask them the question",
    "start": "330919",
    "end": "336080"
  },
  {
    "text": "have you heard of the web profile if they say no stop listening to everything they have to say if they say yes then",
    "start": "336080",
    "end": "342160"
  },
  {
    "text": "definitely listen to what they have to say and communicate that that back to me and uh we'll try and make sure that that",
    "start": "342160",
    "end": "347639"
  },
  {
    "text": "feedback reaches the specifications so what is cut out that",
    "start": "347639",
    "end": "354319"
  },
  {
    "text": "is in the full profile that is not in the web profile some big examples of that are",
    "start": "354319",
    "end": "360280"
  },
  {
    "text": "corba CMP anti beans if you've ever had to work with CMP entity beans I I I",
    "start": "360280",
    "end": "367960"
  },
  {
    "text": "apologize um Jack's RPC if you ever had to work with that I'd apologize three",
    "start": "367960",
    "end": "373840"
  },
  {
    "text": "times more uh I had to implement all these things and I can tell you how much of a bear they are uh the predecessor or",
    "start": "373840",
    "end": "382520"
  },
  {
    "text": "the successor to these Technologies are of course Jax WS replaces Jack RPC J PA",
    "start": "382520",
    "end": "389919"
  },
  {
    "text": "replaces CMP entity beans and corba just no one uses that anymore we're all into",
    "start": "389919",
    "end": "396360"
  },
  {
    "text": "text base type of stuff like ja RS uh unfortunately in Java E6 the web",
    "start": "396360",
    "end": "402560"
  },
  {
    "text": "profile is missing some good Technologies uh those are listed down",
    "start": "402560",
    "end": "408080"
  },
  {
    "text": "the bottom JX RS is a really important technology that's actually now in the web profile in Java",
    "start": "408080",
    "end": "414319"
  },
  {
    "text": "E7 uh Jack WS which is soap and various types of EX ml uh web services uh that's",
    "start": "414319",
    "end": "423680"
  },
  {
    "text": "in the full profile we do have a version of Tommy with it in it uh JMS is a very",
    "start": "423680",
    "end": "430759"
  },
  {
    "text": "still very useful technology and it's only in the full profile not the web profile but we of course we do have a",
    "start": "430759",
    "end": "436800"
  },
  {
    "text": "version of Tommy with it in there and then connectors which is something people don't uh really hear a lot about",
    "start": "436800",
    "end": "442680"
  },
  {
    "text": "because it was sort of one of those specifications that was a good idea that never went anywhere uh We've revised",
    "start": "442680",
    "end": "448599"
  },
  {
    "text": "that quite a bit in Java E7 and fixed it up and uh so that's now going to be a very important part of java e going",
    "start": "448599",
    "end": "455560"
  },
  {
    "text": "forward uh that's not in the web profile uh flavors of tomies so to address these",
    "start": "455560",
    "end": "465560"
  },
  {
    "start": "460000",
    "end": "610000"
  },
  {
    "text": "basic kind of levels of need uh we have three versions of Tommy so the first one",
    "start": "465560",
    "end": "472879"
  },
  {
    "text": "is the web profile contains the minimum set of Technologies required to pass the",
    "start": "472879",
    "end": "478840"
  },
  {
    "text": "Java e 6 web profile tck so we don't go over that by any significant margin so that",
    "start": "478840",
    "end": "486280"
  },
  {
    "text": "you can have the smallest uh level of components and still have a certified",
    "start": "486280",
    "end": "491879"
  },
  {
    "text": "portable server so other vendors like uh Red Hat Oracle IBM they all have web profile",
    "start": "491879",
    "end": "499159"
  },
  {
    "text": "certified servers and you can portter applications from those or to to and from Tommy to them or from them to Tommy",
    "start": "499159",
    "end": "507720"
  },
  {
    "text": "then we also have Tommy Jax RS which was sort of a Forward Thinking type of",
    "start": "507720",
    "end": "513000"
  },
  {
    "text": "distribution we anticipated that JX RS would be added to the web profile so we wanted basically what would be the web",
    "start": "513000",
    "end": "520360"
  },
  {
    "text": "profile in Java E7 so that's Tommy Jax RS it's all the previous Technologies",
    "start": "520360",
    "end": "527000"
  },
  {
    "text": "plus the jaxr uh which is supplied by cxf Apache",
    "start": "527000",
    "end": "533240"
  },
  {
    "text": "cxf then we have Apache Tommy plus which is basically the rest of the stuff",
    "start": "533240",
    "end": "538519"
  },
  {
    "text": "that's useful that's in the full profile but not in the web profile so it contains Jaws connector and JMS we",
    "start": "538519",
    "end": "547000"
  },
  {
    "text": "haven't seen anybody ask for a single technology outside this specific outside this group uh we've never seen anybody",
    "start": "547000",
    "end": "553560"
  },
  {
    "text": "ask for CMP we've never seen anybody asked for corba uh certainly no one's",
    "start": "553560",
    "end": "559079"
  },
  {
    "text": "ever asked for Jack's RPC uh and we find this meets a lot of",
    "start": "559079",
    "end": "564640"
  },
  {
    "text": "requirements uh the really interesting thing is that in Java E7 as much as Java",
    "start": "564640",
    "end": "570279"
  },
  {
    "text": "E6 was about shrinking Java e to make the web profile Java E7 is about a lot of it is",
    "start": "570279",
    "end": "578560"
  },
  {
    "text": "about shrinking the full profile in some regards so a lot of the things that I mentioned uh that are in the full",
    "start": "578560",
    "end": "584360"
  },
  {
    "text": "profile that are quote unquote non-used Legacy Technologies those are now cut in",
    "start": "584360",
    "end": "589680"
  },
  {
    "text": "Java E7 so CMP is no longer required part of java E7 full profile and neither",
    "start": "589680",
    "end": "596720"
  },
  {
    "text": "is Jax RPC and corbo so we might actually see a version of Tommy that's",
    "start": "596720",
    "end": "602160"
  },
  {
    "text": "full profile certified but yet still",
    "start": "602160",
    "end": "606319"
  },
  {
    "text": "small okay let me give a quick demo",
    "start": "607320",
    "end": "612240"
  },
  {
    "start": "610000",
    "end": "830000"
  },
  {
    "text": "here so with this demo uh I want to show Tommy running in Eclipse uh using the",
    "start": "612360",
    "end": "619160"
  },
  {
    "text": "tonat web adapter what's",
    "start": "619160",
    "end": "624560"
  },
  {
    "text": "that the the distribution yeah Apache the software Foundation yeah yes so Apache received a license",
    "start": "625360",
    "end": "634200"
  },
  {
    "text": "for the job ET in 2004 when jonal was created and uh so jonal certified with",
    "start": "634200",
    "end": "641600"
  },
  {
    "text": "that tck for several years and then we used it as well uh when certifying Tommy",
    "start": "641600",
    "end": "648360"
  },
  {
    "text": "so Pache actually has two certified Java e implementations so yeah it's uh donated",
    "start": "648360",
    "end": "655240"
  },
  {
    "text": "to Apache by Oracle and uh so yeah we're one of the four or five you know vendors",
    "start": "655240",
    "end": "662079"
  },
  {
    "text": "with the yeah right exactly so a quick question Who uses",
    "start": "662079",
    "end": "669560"
  },
  {
    "text": "Eclipse okay most the room and I'm guessing you all use the Tom Cat adapter with",
    "start": "669680",
    "end": "675279"
  },
  {
    "text": "Eclipse yep of course all right so so as I mentioned that Tommy is Tom",
    "start": "675279",
    "end": "682240"
  },
  {
    "text": "Cat with stuff added to it and the advantage of that is that all the Tom Cat tools work with Tommy you don't have",
    "start": "682240",
    "end": "687279"
  },
  {
    "text": "to learn a new server and and uh so in this demo I want to show you from scratch setting up",
    "start": "687279",
    "end": "694399"
  },
  {
    "text": "Eclipse with",
    "start": "697240",
    "end": "700480"
  },
  {
    "text": "Tommy so I'm just going to extract Eclipse right off the disc right off the zip file or the tar and then we'll open",
    "start": "702800",
    "end": "710480"
  },
  {
    "text": "that up let's just",
    "start": "710480",
    "end": "715160"
  },
  {
    "text": "extract Tommy also",
    "start": "715760",
    "end": "720360"
  },
  {
    "text": "and this is the plus version of Tommy this is the largest version of Tommy so I'm showing you the heaviest thing we have to offer not the",
    "start": "724079",
    "end": "730560"
  },
  {
    "text": "lightest um I think that's only fair you know you can assume that the heavy that everything else is a little bit faster",
    "start": "730560",
    "end": "735720"
  },
  {
    "text": "and a little bit lighter from this one and I guess before we",
    "start": "735720",
    "end": "740920"
  },
  {
    "text": "uh boot up Eclipse here I want to show you just Tommy itself and how you boot",
    "start": "740920",
    "end": "746160"
  },
  {
    "text": "it so you probably can't see that there you go is this readable by everyone okay",
    "start": "746160",
    "end": "754040"
  },
  {
    "text": "great so first of all you start up Tommy like you start up tomat we haven't changed anything significant about",
    "start": "754040",
    "end": "760880"
  },
  {
    "text": "tomat we haven't removed anything so you you boot it up just like you normally",
    "start": "760880",
    "end": "767320"
  },
  {
    "text": "would then we go there's the Tomcat splash page so just the same as",
    "start": "769399",
    "end": "774800"
  },
  {
    "text": "usual uh we have a little goey here in the bottom that's currently uh protected",
    "start": "774800",
    "end": "780360"
  },
  {
    "text": "uh there's not much there in the moment but it's one of the things that we're developing kind of a console type of te thing for uh for Tommy and then I'll",
    "start": "780360",
    "end": "788160"
  },
  {
    "text": "shut this down and you shut down via the same",
    "start": "788160",
    "end": "795360"
  },
  {
    "text": "shutdown script okay now I'll boot up Eclipse",
    "start": "795360",
    "end": "802839"
  },
  {
    "text": "here and of course it always takes a little bit of time to start",
    "start": "804839",
    "end": "810720"
  },
  {
    "text": "okay we'll create a temporary",
    "start": "815480",
    "end": "820240"
  },
  {
    "text": "workspace so that way I don't you can see that I haven't uh created a workspace in advance and uh taken all",
    "start": "821959",
    "end": "827800"
  },
  {
    "text": "the fun out of the out of the demo all right so the first thing we'll do is we'll say",
    "start": "827800",
    "end": "835880"
  },
  {
    "start": "830000",
    "end": "955000"
  },
  {
    "text": "new Dynamic web project you do not select Enterprise project the reason",
    "start": "835880",
    "end": "842800"
  },
  {
    "text": "being is in Java E6 we changed some things about Java e that have been big",
    "start": "842800",
    "end": "848839"
  },
  {
    "text": "big problems for a number of years you don't need ear files anymore in Java E6",
    "start": "848839",
    "end": "854240"
  },
  {
    "text": "those are pretty much Legacy in Java E6 we made it so you can put everything in",
    "start": "854240",
    "end": "859800"
  },
  {
    "text": "the war file you can put your ejbs in the war file you can put your persistence units in the world file and they all share the same class low it's",
    "start": "859800",
    "end": "866399"
  },
  {
    "text": "all very simple and you don't have to create all these little modules and bind them all together in an ear file and",
    "start": "866399",
    "end": "872360"
  },
  {
    "text": "create yourself an application XML file it's",
    "start": "872360",
    "end": "877600"
  },
  {
    "text": "pointless it and then then they have different class loaders so if you have a class that needs to be shared by an ejb",
    "start": "877600",
    "end": "883600"
  },
  {
    "text": "and a serlet then you need to put that class in a separate jar and move that into the ear file lib directory and at",
    "start": "883600",
    "end": "890680"
  },
  {
    "text": "this point everyone wants to pull their hair out and kick their computer and walk out of the door screaming so no more of that",
    "start": "890680",
    "end": "897120"
  },
  {
    "text": "everything's in the wall everybody knows how to build a war file done end of story so we're going to select Dynamic",
    "start": "897120",
    "end": "903519"
  },
  {
    "text": "web project and we'll call it uh Jacks",
    "start": "903519",
    "end": "911199"
  },
  {
    "text": "com and then here we go setting up Tommy you say new",
    "start": "911199",
    "end": "917480"
  },
  {
    "text": "runtime a Apache Tom Cat",
    "start": "917480",
    "end": "921880"
  },
  {
    "text": "7 and we'll put a little tag on here called Tommy it's not necessary but you know",
    "start": "922839",
    "end": "929199"
  },
  {
    "text": "just nice to see if you have a few different versions of things in there we navigate to where we unzipped Tommy and",
    "start": "929199",
    "end": "936240"
  },
  {
    "text": "then we simply say open and then we say",
    "start": "936240",
    "end": "941639"
  },
  {
    "text": "finish we'll leave all the defaults Ser at 3.0 and we say",
    "start": "941639",
    "end": "949240"
  },
  {
    "text": "finish okay and then we close this all",
    "start": "951160",
    "end": "956440"
  },
  {
    "start": "955000",
    "end": "1105000"
  },
  {
    "text": "right so now we'll go ahead and create some code",
    "start": "956440",
    "end": "961480"
  },
  {
    "text": "here and we'll right click on and we'll say",
    "start": "962560",
    "end": "969399"
  },
  {
    "text": "new serlet we'll call it hello serlet that's the Java package I",
    "start": "969399",
    "end": "976440"
  },
  {
    "text": "always do",
    "start": "976440",
    "end": "978920"
  },
  {
    "text": "that okay and then we'll say finish now of course Eclipse likes to",
    "start": "981639",
    "end": "988040"
  },
  {
    "text": "generate all the board boiler played code which is complete nonsense although if you get paid by the",
    "start": "988040",
    "end": "993920"
  },
  {
    "text": "line of code is a really really good",
    "start": "993920",
    "end": "997519"
  },
  {
    "text": "bargain all right I forget how to maximize this there we go okay so we're",
    "start": "1001120",
    "end": "1006199"
  },
  {
    "text": "just going to delete all this",
    "start": "1006199",
    "end": "1009120"
  },
  {
    "text": "stuff all right and then we'll just have it return some",
    "start": "1014319",
    "end": "1020399"
  },
  {
    "text": "set content type text",
    "start": "1024079",
    "end": "1030918"
  },
  {
    "text": "HTML oops",
    "start": "1043199",
    "end": "1047199"
  },
  {
    "text": "hello",
    "start": "1056280",
    "end": "1058720"
  },
  {
    "text": "seret okay and then to run this we go back to this window",
    "start": "1061799",
    "end": "1067679"
  },
  {
    "text": "here and we right click on our",
    "start": "1068880",
    "end": "1074080"
  },
  {
    "text": "serlet we say run as run on server now we'll pop open this",
    "start": "1075760",
    "end": "1082520"
  },
  {
    "text": "dialogue box let's just click always use the server so we don't have to see this dialogue box again and then we say",
    "start": "1082520",
    "end": "1089159"
  },
  {
    "text": "finish and now it will boot up Tommy deploy the application and pop open our web page",
    "start": "1089159",
    "end": "1096000"
  },
  {
    "text": "there it was fairly quick too basically this is Tom Cat speeds",
    "start": "1096000",
    "end": "1102039"
  },
  {
    "text": "with all the additional stuff in it um so that's basically using Tommy uh",
    "start": "1102039",
    "end": "1108360"
  },
  {
    "start": "1105000",
    "end": "1265000"
  },
  {
    "text": "that's using tomat but we haven't seen anything that tomat can't normally do so let's go off and and try something that",
    "start": "1108360",
    "end": "1116559"
  },
  {
    "text": "isn't normally possible with Tom cat so we're going to add an",
    "start": "1116559",
    "end": "1121600"
  },
  {
    "text": "ejb so here we'll say new class and we'll call it hello",
    "start": "1121600",
    "end": "1127190"
  },
  {
    "text": "[Music] bean say",
    "start": "1127190",
    "end": "1132000"
  },
  {
    "text": "finish now I'll annotate it",
    "start": "1133240",
    "end": "1138120"
  },
  {
    "text": "javx ejb Singleton and then we'll make a method",
    "start": "1140919",
    "end": "1148679"
  },
  {
    "text": "here and have it return string hello",
    "start": "1154400",
    "end": "1161039"
  },
  {
    "text": "ejb okay now to get a reference to our ejb",
    "start": "1162600",
    "end": "1168159"
  },
  {
    "text": "into our serlet we simply make a private",
    "start": "1168159",
    "end": "1173280"
  },
  {
    "text": "field of type hello",
    "start": "1175159",
    "end": "1179840"
  },
  {
    "text": "bean then we annotate it with Java X",
    "start": "1183120",
    "end": "1188960"
  },
  {
    "text": "ejb and if I could type today that' be wonderful ejb",
    "start": "1188960",
    "end": "1194280"
  },
  {
    "text": "okay and we'll go ahead and update our output here",
    "start": "1194280",
    "end": "1200159"
  },
  {
    "text": "just making a local variable I like hot Keys writer",
    "start": "1200159",
    "end": "1207400"
  },
  {
    "text": "upend and we'll have it",
    "start": "1214960",
    "end": "1218679"
  },
  {
    "text": "return okay now when we save this uh Eclipse should notice that the serl",
    "start": "1223360",
    "end": "1229200"
  },
  {
    "text": "let's changed and go ahead and redeploy the application for us there it goes it noticed and it",
    "start": "1229200",
    "end": "1238679"
  },
  {
    "text": "redeployed and now we can go back to our uh web page which is over",
    "start": "1238960",
    "end": "1245440"
  },
  {
    "text": "here and refresh there we go hello serlet hello ejb we haven't had to chase",
    "start": "1245440",
    "end": "1252240"
  },
  {
    "text": "down any libraries we haven't had to read any blog posts on how to integrate this stuff we haven't had to do all the",
    "start": "1252240",
    "end": "1257960"
  },
  {
    "text": "normal things that we normally have to do when we're working with Tomcat because it's basically Bare",
    "start": "1257960",
    "end": "1264880"
  },
  {
    "text": "Bones so there's a lot more in the Box this is the full Pro this is the",
    "start": "1264880",
    "end": "1270240"
  },
  {
    "start": "1265000",
    "end": "1550000"
  },
  {
    "text": "basically the Tommy plus version which is very close to full profile so let's do some web",
    "start": "1270240",
    "end": "1277640"
  },
  {
    "text": "services okay so I annotate my ejb with Java X jws web service and now it's both",
    "start": "1286600",
    "end": "1295080"
  },
  {
    "text": "a local ejb and a remote web service so I'll go ahead and ping my",
    "start": "1295080",
    "end": "1300720"
  },
  {
    "text": "serlet here and so that will cause Eclipse to notice the files changed and",
    "start": "1300720",
    "end": "1308240"
  },
  {
    "text": "reload any second now there it goes and it reloaded okay so first thing to",
    "start": "1314640",
    "end": "1321000"
  },
  {
    "text": "notice and this may be difficult to see for the people in the back I'll try and is at the",
    "start": "1321000",
    "end": "1327720"
  },
  {
    "text": "bottom there is the web service address we log that for every web service so",
    "start": "1327720",
    "end": "1333720"
  },
  {
    "text": "that you don't have to guess it or go do you know searching around Google for documentation and guessing it and typing",
    "start": "1333720",
    "end": "1340919"
  },
  {
    "text": "it in and getting it wrong so we're just going to copy",
    "start": "1340919",
    "end": "1346320"
  },
  {
    "text": "this go to our web [Music]",
    "start": "1346679",
    "end": "1352569"
  },
  {
    "text": "browser and there we go we have full wisdo for our now completely new web",
    "start": "1353400",
    "end": "1359679"
  },
  {
    "text": "service and we haven't had to generate anything we haven't had to go build anything we just simply annotate that",
    "start": "1359679",
    "end": "1365400"
  },
  {
    "text": "component with at web service and now we have Jax's WS web services completely we",
    "start": "1365400",
    "end": "1370960"
  },
  {
    "text": "can invoke this Bean now remotely over HTTP or locally in the server via just a",
    "start": "1370960",
    "end": "1376640"
  },
  {
    "text": "reference and we can do transactions in security and in fact an interesting aspect of Tommy is how fully integrated",
    "start": "1376640",
    "end": "1384039"
  },
  {
    "text": "everything is so not only do you did you not have to go read the cxf blog post on",
    "start": "1384039",
    "end": "1389559"
  },
  {
    "text": "how to set cxf up into tomcat and so on and so forth we've gone to the additional lengths of making sure that",
    "start": "1389559",
    "end": "1396840"
  },
  {
    "text": "even things like web service security works on top of Tomcat Realms so if you",
    "start": "1396840",
    "end": "1402000"
  },
  {
    "text": "have supplied your own tomat realm to persist users to your own database for example you can use",
    "start": "1402000",
    "end": "1409400"
  },
  {
    "text": "web services security and those users to log in via web service and authenticate",
    "start": "1409400",
    "end": "1415400"
  },
  {
    "text": "so you actually have full control over the security fee the web services because of the way we've done the",
    "start": "1415400",
    "end": "1420880"
  },
  {
    "text": "integration this is normally not even possible when you take for example spring and cxf and throw it to Tomcat it",
    "start": "1420880",
    "end": "1426720"
  },
  {
    "text": "doesn't use the Tomcat uh security uses all the Spring Security doesn't uh",
    "start": "1426720",
    "end": "1432200"
  },
  {
    "text": "doesn't have that integration that's part of our Focus to keep Tomcat as you know Top Dog as as",
    "start": "1432200",
    "end": "1438799"
  },
  {
    "text": "King of the Hill uh everything that you do with tonat you should still be able to do and",
    "start": "1438799",
    "end": "1445320"
  },
  {
    "text": "more okay so that's ejb jws let's add some restful",
    "start": "1445640",
    "end": "1454840"
  },
  {
    "text": "stuff so we annotate with the path component which is is the sort of now",
    "start": "1464279",
    "end": "1470159"
  },
  {
    "text": "this makes it a restful service we'll give it a path of rest and now we have",
    "start": "1470159",
    "end": "1476200"
  },
  {
    "text": "to annotate this method here to let us know that we can use a get request to uh",
    "start": "1476200",
    "end": "1482679"
  },
  {
    "text": "access this method and we just say get and now we're",
    "start": "1482679",
    "end": "1489960"
  },
  {
    "text": "done we'll go ahead our serlet [Music]",
    "start": "1489960",
    "end": "1495590"
  },
  {
    "text": "again and then of course it should notice and reload and yes it's done and just like the web service all the",
    "start": "1496399",
    "end": "1505880"
  },
  {
    "text": "restful service URLs are of course also logged so here it",
    "start": "1505880",
    "end": "1512480"
  },
  {
    "text": "is rest service and that's the",
    "start": "1512480",
    "end": "1516840"
  },
  {
    "text": "URL so we'll grab that we'll paste that into our browser and now we get hello",
    "start": "1519159",
    "end": "1524679"
  },
  {
    "text": "ejb the default Tech the default uh producer type for rest is text but of",
    "start": "1524679",
    "end": "1531960"
  },
  {
    "text": "course with some additional annotations you can easily have this return Json XML",
    "start": "1531960",
    "end": "1537360"
  },
  {
    "text": "whatever you want all of the above uh there's you can really add an unlimited number of return Types on the same",
    "start": "1537360",
    "end": "1544279"
  },
  {
    "text": "method with Jax RS which is one of the most amazing things about Jax RS is the",
    "start": "1544279",
    "end": "1549679"
  },
  {
    "text": "amount of time it can save you so two Java classes in our project and we have",
    "start": "1549679",
    "end": "1556720"
  },
  {
    "start": "1550000",
    "end": "1758000"
  },
  {
    "text": "serlet ejb jaxws Jax RS all fully integrated we haven't had to go thanks",
    "start": "1556720",
    "end": "1564120"
  },
  {
    "text": "we haven't had to go uh anybody need a water uh we haven't had to go uh search",
    "start": "1564120",
    "end": "1571399"
  },
  {
    "text": "around blog posts we haven't had to hunt down any libraries we haven't had to go",
    "start": "1571399",
    "end": "1577080"
  },
  {
    "text": "oh this blog post is incomplete did you ever try doing this no I didn't need that so I only went this far well I need to go this far and now you're at square",
    "start": "1577080",
    "end": "1584200"
  },
  {
    "text": "one again uh you know this is this is the the problem with with doing things",
    "start": "1584200",
    "end": "1590399"
  },
  {
    "text": "like this building your own app server as I call it uh the difficult thing becomes when you've put all the time to",
    "start": "1590399",
    "end": "1597320"
  },
  {
    "text": "building it so you don't really want to back away from it but then a new technology comes out and now you don't",
    "start": "1597320",
    "end": "1602559"
  },
  {
    "text": "know anything about that technology but you know you want to try it out and you know you want to use it but now you have to learn it and figure out how to",
    "start": "1602559",
    "end": "1608880"
  },
  {
    "text": "integrate into Tomcat all at the same time and this becomes a really really really hard thing to do your job is",
    "start": "1608880",
    "end": "1615440"
  },
  {
    "text": "never done as technology is going to keep moving moving forward you're always going to be building that app server and",
    "start": "1615440",
    "end": "1622080"
  },
  {
    "text": "uh a good example of that is CDI it came out in Java E6 lots of people are interested a lot of people want to check",
    "start": "1622080",
    "end": "1628000"
  },
  {
    "text": "it out but simply it's not in the server that they use because maybe they're using Tomcat or Jetty uh who's heard of",
    "start": "1628000",
    "end": "1637159"
  },
  {
    "text": "CDI one hand okay so CDI is basically a a new technology in Java E6 uh CDI is to",
    "start": "1637159",
    "end": "1647000"
  },
  {
    "text": "Spring and juice what jpa is to hibernate CDI is the standard version uh",
    "start": "1647000",
    "end": "1653080"
  },
  {
    "text": "of the lot of dependency injection ideas that were added and created in projects",
    "start": "1653080",
    "end": "1659320"
  },
  {
    "text": "like juice and spring those were fixed up uh standardized and then added to",
    "start": "1659320",
    "end": "1665559"
  },
  {
    "text": "Java e as a core technology in fact a lot of the platform itself is moving on",
    "start": "1665559",
    "end": "1670720"
  },
  {
    "text": "to CDI uh the interesting thing about cdii is not necessarily the dependency",
    "start": "1670720",
    "end": "1675840"
  },
  {
    "text": "injection I think that's sort of an old concept and it's really cool and important uh but one thing if to write I",
    "start": "1675840",
    "end": "1681880"
  },
  {
    "text": "don't have time to show it to you but write it down for research later the CDI event model is the best I've ever seen",
    "start": "1681880",
    "end": "1689760"
  },
  {
    "text": "it will change the way you want to write Cod once you learn it you'll instantly think of a bunch of places that you can",
    "start": "1689760",
    "end": "1695600"
  },
  {
    "text": "use it and you'll want to rewrite all your applications in a really good way uh it's a listening concept it's been",
    "start": "1695600",
    "end": "1702679"
  },
  {
    "text": "around for decade and a half right but the interesting thing about it is that you do not need to create or register",
    "start": "1702679",
    "end": "1710159"
  },
  {
    "text": "these listener managers and then go register this object with this listener",
    "start": "1710159",
    "end": "1715760"
  },
  {
    "text": "manager you simply create a method that says at observes and say type f then",
    "start": "1715760",
    "end": "1721919"
  },
  {
    "text": "somebody else can grab the CDI Bean manager and say fire this event and pass in a new Foo well end of story your",
    "start": "1721919",
    "end": "1729760"
  },
  {
    "text": "component will get invoked when that happens but you haven't had to create a little registry to register all these",
    "start": "1729760",
    "end": "1735360"
  },
  {
    "text": "listeners and you haven't had to then go and every new component you add that wants to listen for Fu has to be",
    "start": "1735360",
    "end": "1741559"
  },
  {
    "text": "registered and it's actually even inheritance aware so if you want to say observe object you will see all events",
    "start": "1741559",
    "end": "1748760"
  },
  {
    "text": "in the whole system it will make you want to rewrite all of your code if you're doing",
    "start": "1748760",
    "end": "1754360"
  },
  {
    "text": "anything Loosely coupled it's a perfect application for it okay so I'm going to go ahead and add",
    "start": "1754360",
    "end": "1761600"
  },
  {
    "text": "some uh CDI functionality to our web app so you can see how that's done so the first thing you need to do",
    "start": "1761600",
    "end": "1768519"
  },
  {
    "text": "is you need to add a new file called the beans XML file you don't need to have anything in",
    "start": "1768519",
    "end": "1775559"
  },
  {
    "text": "it but its presence turns CDI on and it has to be in the web INF directory of",
    "start": "1775559",
    "end": "1782279"
  },
  {
    "text": "your War file and now we can go and create",
    "start": "1782279",
    "end": "1788279"
  },
  {
    "text": "another Java object we'll call",
    "start": "1788279",
    "end": "1794279"
  },
  {
    "text": "it hello pojo",
    "start": "1794279",
    "end": "1798960"
  },
  {
    "text": "okay and then we're going to do a similar thing we're going to make a public method",
    "start": "1805200",
    "end": "1809880"
  },
  {
    "text": "here call hello it's going to",
    "start": "1813080",
    "end": "1817919"
  },
  {
    "text": "return okay now we're not going to annotate this with anything this is a plal Java",
    "start": "1822360",
    "end": "1829960"
  },
  {
    "text": "object go back to our serlet and in a similar fashion the",
    "start": "1831559",
    "end": "1838799"
  },
  {
    "text": "dependency injection",
    "start": "1838799",
    "end": "1841799"
  },
  {
    "text": "Works private hello",
    "start": "1844120",
    "end": "1850600"
  },
  {
    "text": "pojo and then we annotate it with Java X inject",
    "start": "1851080",
    "end": "1856720"
  },
  {
    "text": "inject and when we do this it will cause Tommy to see that grab the pojo inject",
    "start": "1856720",
    "end": "1863080"
  },
  {
    "text": "it into our server and then we can go ahead and use it and we'll update our",
    "start": "1863080",
    "end": "1869200"
  },
  {
    "text": "output to do a similar",
    "start": "1869200",
    "end": "1873120"
  },
  {
    "text": "thing now we save that and it should cause Eclipse to notice and redeploy",
    "start": "1876480",
    "end": "1881880"
  },
  {
    "text": "which it did it'll go back to our web page which is up here somewhere there we",
    "start": "1881880",
    "end": "1887200"
  },
  {
    "text": "go hello pojo so now we have plain old dependency",
    "start": "1887200",
    "end": "1893120"
  },
  {
    "text": "injection spring like but we haven't had to add any libraries there's no uh",
    "start": "1893120",
    "end": "1898880"
  },
  {
    "text": "complexity we have to have we didn't need to Define being an XML and we didn't need to do anything if you notice",
    "start": "1898880",
    "end": "1904799"
  },
  {
    "text": "we haven't really written any XML but we still have a full XML web services we still have jax RS we have full egb",
    "start": "1904799",
    "end": "1912240"
  },
  {
    "text": "functionality with transaction support and security support we have full dependency injection",
    "start": "1912240",
    "end": "1918399"
  },
  {
    "text": "we haven't added any libraries and we haven't had to set up any configuration files and we haven't added even a web",
    "start": "1918399",
    "end": "1923760"
  },
  {
    "text": "XML file nothing all set up for you right off the bat very fast with the normal Le",
    "start": "1923760",
    "end": "1932480"
  },
  {
    "text": "of weeks of time that you would spend working on the stuff getting it to go like this um",
    "start": "1932480",
    "end": "1941519"
  },
  {
    "start": "1940000",
    "end": "2013000"
  },
  {
    "text": "it's it's in my mind a a game Cher you know it's U it's what we've been trying",
    "start": "1941519",
    "end": "1947399"
  },
  {
    "text": "to do for the last 10 years I mean everybody in their brother's been been been adding more to Tomcat there is",
    "start": "1947399",
    "end": "1953120"
  },
  {
    "text": "nobody I mean let me ask the question who uses tomcat and doesn't add any third party the libraries to their their",
    "start": "1953120",
    "end": "1959440"
  },
  {
    "text": "applications right of course I mean that would be absurd uh it's you know we haven't added",
    "start": "1959440",
    "end": "1965919"
  },
  {
    "text": "any third party libraries to our application so far that's the advantage of using a server with more in it you",
    "start": "1965919",
    "end": "1971960"
  },
  {
    "text": "can have lighter web applications but uh you know it's it's",
    "start": "1971960",
    "end": "1977120"
  },
  {
    "text": "uh it's it's it's pretty significant in how it changes the way you would normally",
    "start": "1977120",
    "end": "1984480"
  },
  {
    "text": "approach things and the great thing about it is that this this application that we've written it's is just three Java classes it's portable to JBoss it's",
    "start": "1984480",
    "end": "1992120"
  },
  {
    "text": "portable to glassfish it's portable to webs spere if you decide you don't like Tommy you can Port these things away and",
    "start": "1992120",
    "end": "1997639"
  },
  {
    "text": "on the reverse if you have had to use these servers alongside Tomcat now you can finally move them all onto Tom Cat",
    "start": "1997639",
    "end": "2005360"
  },
  {
    "text": "and have everything on one server so some interesting kind of fun things",
    "start": "2005360",
    "end": "2011120"
  },
  {
    "text": "about where Tommy came from so uh we announced it in uh 2011 at Java 1 that",
    "start": "2011120",
    "end": "2018720"
  },
  {
    "start": "2013000",
    "end": "2100000"
  },
  {
    "text": "was the very first certified server that we had that was when we very that was the first release and the first time we",
    "start": "2018720",
    "end": "2024480"
  },
  {
    "text": "passed the job Eck we announced it at Java one and we got a really big really big response from that uh in April we",
    "start": "2024480",
    "end": "2032880"
  },
  {
    "text": "did our 1.0 final release we did a lot of Performance Tuning between the beta",
    "start": "2032880",
    "end": "2039200"
  },
  {
    "text": "and the uh the 1.0 but the first iteration was focused on feature complete and then we called that beta we",
    "start": "2039200",
    "end": "2044919"
  },
  {
    "text": "went to uh fast and performance that was 1.0 then between that and the next",
    "start": "2044919",
    "end": "2051320"
  },
  {
    "text": "following six months we completely focused on you know filling gaps because people try to Port applications from",
    "start": "2051320",
    "end": "2058158"
  },
  {
    "text": "other places to Tommy and then we need we discover we need a bunch of features that are not part of the standard so we",
    "start": "2058159",
    "end": "2064358"
  },
  {
    "text": "did a lot of Gap filling and we bumped the version up significant ly taking a page from Tomcat you know 50 and",
    "start": "2064359",
    "end": "2072720"
  },
  {
    "text": "55 uh type of uh numbering system and then just this last April we did another",
    "start": "2072720",
    "end": "2079158"
  },
  {
    "text": "uh our our most latest uh dot release is probably the most stable mature by Far",
    "start": "2079159",
    "end": "2084760"
  },
  {
    "text": "We've Reed lots of lots of feedback so basically every six months we're focusing on something very very",
    "start": "2084760",
    "end": "2091440"
  },
  {
    "text": "significant to move it forward it's taken I guess you know year and a half or so but we have something that you",
    "start": "2091440",
    "end": "2098079"
  },
  {
    "text": "know very very stable and very mature you can kind of see the uh what",
    "start": "2098079",
    "end": "2104200"
  },
  {
    "start": "2100000",
    "end": "2203000"
  },
  {
    "text": "our life has been like since we announced that little bump in the middle is our Java 1 announcement and we've",
    "start": "2104200",
    "end": "2109240"
  },
  {
    "text": "just sort of been going crazy uh since then that's our website traffic that's",
    "start": "2109240",
    "end": "2114480"
  },
  {
    "text": "our user lless traffic so we get slammed on a regular basis uh and then we just uh got Tommy",
    "start": "2114480",
    "end": "2122359"
  },
  {
    "text": "into gelastic here this last March and uh our first month in gelastic uh we got",
    "start": "2122359",
    "end": "2130119"
  },
  {
    "text": "7% of their market share which is really crazy we didn't expect that nobody did",
    "start": "2130119",
    "end": "2135680"
  },
  {
    "text": "gelastic didn't expect it we didn't expect it that was the first month that we in gelastic the second month we got",
    "start": "2135680",
    "end": "2142320"
  },
  {
    "text": "133% of the market share tying with glassfish passing up Jetty I very",
    "start": "2142320",
    "end": "2150520"
  },
  {
    "text": "astonished um and as all these look like numbers uh I I I I think that it's easy",
    "start": "2150520",
    "end": "2157280"
  },
  {
    "text": "to look at technology as numbers I just wanted to show my personal significant",
    "start": "2157280",
    "end": "2163079"
  },
  {
    "text": "Milestone of the project this was 2011 this was after we we uh presented",
    "start": "2163079",
    "end": "2171359"
  },
  {
    "text": "Tommy for the very first time at Jack in London and the week after that",
    "start": "2171359",
    "end": "2177240"
  },
  {
    "text": "conference we all got together in Tours France and hacked on Tommy for a week",
    "start": "2177240",
    "end": "2182920"
  },
  {
    "text": "and we all took vacation to do this and we all just wanted to do it",
    "start": "2182920",
    "end": "2188200"
  },
  {
    "text": "and we started out the week at 40% tck compliant and we ended the week at 80%",
    "start": "2188200",
    "end": "2193480"
  },
  {
    "text": "tck compliant never happens like that I've worked on Donal for uh version one",
    "start": "2193480",
    "end": "2200520"
  },
  {
    "text": "two and three major certifications it takes us months to make that kind of",
    "start": "2200520",
    "end": "2206119"
  },
  {
    "text": "jump but it's just what happens when you get the right people and the right energy and the right Focus uh we have a",
    "start": "2206119",
    "end": "2212640"
  },
  {
    "text": "significant advantage in terms of how we run the tck we run it an Amazon ec2 so",
    "start": "2212640",
    "end": "2218960"
  },
  {
    "text": "we took a very modern approach to tackling this problem with the tck running tens of thousands of tests takes",
    "start": "2218960",
    "end": "2225200"
  },
  {
    "text": "a long time so what we did was we took and split them all up on uh into",
    "start": "2225200",
    "end": "2231520"
  },
  {
    "text": "hundreds of chunks of tests we throw those uh units of work onto an jmss Q we",
    "start": "2231520",
    "end": "2239040"
  },
  {
    "text": "fire up a 100 spot instances on Amazon ec2 and they all pull down the work and",
    "start": "2239040",
    "end": "2244560"
  },
  {
    "text": "churn it away and put it all back to us so basically we can get results in an hour so during that week we were able to",
    "start": "2244560",
    "end": "2250720"
  },
  {
    "text": "do uh eight complete runs of the tck one at lunch time when after we'd hacked for",
    "start": "2250720",
    "end": "2257599"
  },
  {
    "text": "all morning then after we hack all afternoon we run it again before we go and we're sitting there having beers",
    "start": "2257599",
    "end": "2263839"
  },
  {
    "text": "watching the tck results roll in a test Suite A compatibility test",
    "start": "2263839",
    "end": "2269240"
  },
  {
    "text": "Suite it's basically the the uh what you get as a license e for Java e is you get",
    "start": "2269240",
    "end": "2274520"
  },
  {
    "text": "this test suite and uh you're required to pass it before you can say that you're certified and you have to present",
    "start": "2274520",
    "end": "2281520"
  },
  {
    "text": "that information to Oracle of course uh and then they add you to their website as certified implementation and then you",
    "start": "2281520",
    "end": "2288079"
  },
  {
    "text": "get to refer to yourself as certified uh if you don't then they get really mad and the lawyers come at",
    "start": "2288079",
    "end": "2295240"
  },
  {
    "text": "you excuse me are there performance requirements",
    "start": "2295240",
    "end": "2301920"
  },
  {
    "text": "for passing the tck no and the first requirement first question you asked I I forget I'm being recorded is uh uh what",
    "start": "2301920",
    "end": "2309240"
  },
  {
    "text": "is a tck and that that's a test Suite that you must pass to be a licensed implementation of",
    "start": "2309240",
    "end": "2316799"
  },
  {
    "text": "java there are thread security requirements uh certainly multi-threaded requirements and stuff like that but",
    "start": "2317640",
    "end": "2323280"
  },
  {
    "text": "you're allowed to be as slow as you want to be um we're actually quite light uh",
    "start": "2323280",
    "end": "2328319"
  },
  {
    "text": "so when we pass the Java Eck we pass it with the default 64 megabytes of Heap",
    "start": "2328319",
    "end": "2333720"
  },
  {
    "text": "space we don't increase the memory space at all uh we're so far I've been saying",
    "start": "2333720",
    "end": "2340119"
  },
  {
    "text": "this for almost two years we're we're the only one who's done it to my knowledge no one's bothered to challenge us on it so I'm going to assume that",
    "start": "2340119",
    "end": "2346920"
  },
  {
    "text": "that's the case I know in the case of jono we take a gig of memory to to pass the tck and that's a significant",
    "start": "2346920",
    "end": "2353720"
  },
  {
    "text": "difference yeah so and actually I've been doing work with trying to run with running the tck on a Raspberry Pi just",
    "start": "2353720",
    "end": "2359400"
  },
  {
    "text": "for fun uh Tommy actually does run pretty well on a Raspberry Pi especially the next release one six we've done some",
    "start": "2359400",
    "end": "2366880"
  },
  {
    "text": "specific performance tuming for Raspberry Pi so here's some of the feedback yeah go ahead okay so got a lot",
    "start": "2366880",
    "end": "2374960"
  },
  {
    "text": "of productivity in that one okay that's impressive did you guys have problems with",
    "start": "2374960",
    "end": "2381640"
  },
  {
    "text": "depes uh Magic was it well you know the the no we didn't have problems with",
    "start": "2383359",
    "end": "2390000"
  },
  {
    "text": "circular pendencies between packages because the things that we're integrating are distinct projects like",
    "start": "2390000",
    "end": "2395200"
  },
  {
    "text": "open web beans open ejb the transaction manager and they're all very independent",
    "start": "2395200",
    "end": "2400920"
  },
  {
    "text": "so we actually have the inverse problem integrating them together not that they're too integrated um so the whole week there is",
    "start": "2400920",
    "end": "2408480"
  },
  {
    "text": "basically tying knots together Making Connections uh and that uh gets you big",
    "start": "2408480",
    "end": "2414960"
  },
  {
    "text": "jumps quick now when I say 40 to 80 here's what it's like to live in the in",
    "start": "2414960",
    "end": "2420359"
  },
  {
    "text": "the shoes of someone who writes an app server uh when you get this huge test Suite it takes you uh a couple months",
    "start": "2420359",
    "end": "2427359"
  },
  {
    "text": "mons to just to get it to running then it takes you uh that gets you up fast I",
    "start": "2427359",
    "end": "2433280"
  },
  {
    "text": "you're making big gains and then that 40 to 80 usually takes a couple months not",
    "start": "2433280",
    "end": "2439000"
  },
  {
    "text": "a week or so as you get closer to 100% it gets incrementally longer to finish",
    "start": "2439000",
    "end": "2446440"
  },
  {
    "text": "that work uh and so for us to go from 80 to 100 you know that took another six",
    "start": "2446440",
    "end": "2453400"
  },
  {
    "text": "months so yeah it's you know uh it's it's uh but still that our whole",
    "start": "2453400",
    "end": "2460720"
  },
  {
    "text": "certification cycle was about 10 months long so that's really impressive I mean for drama it's normally taking us at",
    "start": "2460720",
    "end": "2467200"
  },
  {
    "text": "least a year and a half often uh longer so some feedback we've gotten",
    "start": "2467200",
    "end": "2473359"
  },
  {
    "text": "from people um since we launched this is sort of early feedback from our 1.0 uh",
    "start": "2473359",
    "end": "2479520"
  },
  {
    "start": "2477000",
    "end": "2523000"
  },
  {
    "text": "you know Tommy is insanely fast uh I from an architect switched from xXx to",
    "start": "2479520",
    "end": "2485079"
  },
  {
    "text": "Tommy I can tell you Tommy kicks XXX but in every way memory speed reliability",
    "start": "2485079",
    "end": "2490880"
  },
  {
    "text": "validation I remove the server names because I think it's Crash to trash other servers we're not about that uh if",
    "start": "2490880",
    "end": "2497839"
  },
  {
    "text": "people want to trash other servers that's their business but we're not going to do that uh and then if you're",
    "start": "2497839",
    "end": "2504079"
  },
  {
    "text": "concerned about performance footprint but it can accept that you'll support yourself a little bit uh you know",
    "start": "2504079",
    "end": "2509560"
  },
  {
    "text": "Tommy's great um actually we're in the process of fixing that I'm I'm launching off a a support company around Tommy to",
    "start": "2509560",
    "end": "2516880"
  },
  {
    "text": "offer a greater level support than you can normally get from open source mailing lists",
    "start": "2516880",
    "end": "2523240"
  },
  {
    "text": "um since our Point 1.5 or lease where we we gained a lot more maturity obviously",
    "start": "2523240",
    "end": "2529440"
  },
  {
    "text": "we're seeing some very different names uh an ideal fit for a private Cloud American Express we have",
    "start": "2529440",
    "end": "2536040"
  },
  {
    "text": "completely replaced xxs with Tommy at my department have no regrets Condon Nast",
    "start": "2536040",
    "end": "2541920"
  },
  {
    "text": "an ex an amazingly pure stable and simpl to manage Java e web profile container",
    "start": "2541920",
    "end": "2547240"
  },
  {
    "text": "Starbucks so it's about uh we compete with uh JBoss HTTP",
    "start": "2547240",
    "end": "2556960"
  },
  {
    "text": "speed about even because both use Tomcat uh ejb speed is uh double to double and",
    "start": "2556960",
    "end": "2564680"
  },
  {
    "text": "a half Tommy's faster than than JBoss JBoss just uses RMI for the remote ejb",
    "start": "2564680",
    "end": "2570920"
  },
  {
    "text": "calls whereas we use our own socket implementation significantly faster because we've written it in tuned",
    "start": "2570920",
    "end": "2577800"
  },
  {
    "text": "uh the secret performance is if you can control the client and the server you can set the buffer sizes to be exactly the same on both sides and then you get",
    "start": "2577800",
    "end": "2583880"
  },
  {
    "text": "a much better throughput it's actually quite simple but uh they don't uh write their own",
    "start": "2583880",
    "end": "2590319"
  },
  {
    "text": "protocol so we're we're definitely a lot lighter in terms of memory where uh we",
    "start": "2590319",
    "end": "2597200"
  },
  {
    "text": "take about a third to a half of what you would find in a jbos install uh in terms",
    "start": "2597200",
    "end": "2603400"
  },
  {
    "text": "of footprint on disk Tommy is 27 megabytes in download size JBoss is 127",
    "start": "2603400",
    "end": "2610920"
  },
  {
    "text": "megabytes so it's basically smaller in about every possible way and uh",
    "start": "2610920",
    "end": "2616520"
  },
  {
    "text": "speed-wise it's either equivalent or faster uh and so it's it's it's pretty",
    "start": "2616520",
    "end": "2622200"
  },
  {
    "start": "2622000",
    "end": "2687000"
  },
  {
    "text": "it's pretty great um so as what I showed can look like a lot of magic here are the steps",
    "start": "2622200",
    "end": "2628720"
  },
  {
    "text": "that we've taken to add these things to tomat uh we add two configuration files",
    "start": "2628720",
    "end": "2635880"
  },
  {
    "text": "into the conf directory uh one is simply there for as a convenience you can add system properties to it and you don't have to",
    "start": "2635880",
    "end": "2642359"
  },
  {
    "text": "put them as-d Flags simple uh the other one is a Tommy XML configuration file",
    "start": "2642359",
    "end": "2647480"
  },
  {
    "text": "and that's there simply because there are a lot of things that you can do in a full profile or web profile jav e server",
    "start": "2647480",
    "end": "2653920"
  },
  {
    "text": "uh that you can't configure with via the Tomcat server XML such as JMS topics and",
    "start": "2653920",
    "end": "2659000"
  },
  {
    "text": "q's uh your broker uh various persistence uh things uh CMP or DB",
    "start": "2659000",
    "end": "2667440"
  },
  {
    "text": "containers J you know uh web service uh transaction manager trans",
    "start": "2667440",
    "end": "2673720"
  },
  {
    "text": "there's no transaction manager in Tomcat uh by default but there is in Tommy of course and so we have this additional",
    "start": "2673720",
    "end": "2680720"
  },
  {
    "text": "configuration file and then of course here are the projects that I mentioned uh in the lib directory of the server so",
    "start": "2680720",
    "end": "2687760"
  },
  {
    "start": "2687000",
    "end": "2730000"
  },
  {
    "text": "we do that we add this listener to the server XML file and then we basically",
    "start": "2687760",
    "end": "2694359"
  },
  {
    "text": "start when Tom CAD starts we participate in full life cycle of Tomcat and that's how we do integration Tomcat actually is",
    "start": "2694359",
    "end": "2700960"
  },
  {
    "text": "a pretty good uh event model internally so when it starts it says I'm starting",
    "start": "2700960",
    "end": "2706400"
  },
  {
    "text": "when it stops it says I'm starting I'm stopping when it deploys an application it really gets veros I'm going to deploy",
    "start": "2706400",
    "end": "2712880"
  },
  {
    "text": "an application I'm deploying an application I have just stopped deploying an application and then of course the opposite and un undeploy so",
    "start": "2712880",
    "end": "2720520"
  },
  {
    "text": "that's enough for us to hook in fully and when Tomcat is scanning for servat",
    "start": "2720520",
    "end": "2726280"
  },
  {
    "text": "we scan for JBS we scan for Jaws components testing so as I mentioned we",
    "start": "2726280",
    "end": "2732800"
  },
  {
    "start": "2730000",
    "end": "2798000"
  },
  {
    "text": "run the stuff in Amazon ec2 we run it on very small machines so uh the T1 micro",
    "start": "2732800",
    "end": "2739880"
  },
  {
    "text": "instance that we run on is uh you know uh uh it's got 613 megabytes of memory",
    "start": "2739880",
    "end": "2747119"
  },
  {
    "text": "it's quite small we don't increase the Java memory so we're taking the the",
    "start": "2747119",
    "end": "2752400"
  },
  {
    "text": "minimum that a Java process can take on that machine leaving you with a couple 100 megabytes of additional space for",
    "start": "2752400",
    "end": "2760240"
  },
  {
    "text": "your application which is the way it should be that means you can run Tommy on a T1 micro instance in Amazon ec2 and",
    "start": "2760240",
    "end": "2768359"
  },
  {
    "text": "basically use the majority of the memory for your application and not have it hogged by the app server the interesting",
    "start": "2768359",
    "end": "2775200"
  },
  {
    "text": "thing about that is if you can't do that because your app server is too big you got to go to the next level up which is the M1 and that's four times the",
    "start": "2775200",
    "end": "2783680"
  },
  {
    "text": "price uh and of course we uh we certify all up to C1 and uh yeah it's it's it's",
    "start": "2783680",
    "end": "2790079"
  },
  {
    "text": "pretty great we also have our a ton of our own tests and uh it's it's uh it's pretty",
    "start": "2790079",
    "end": "2797200"
  },
  {
    "text": "it's pretty significant the amount of testing that we do so the results are that this web profile is uh 27 megabytes",
    "start": "2797200",
    "end": "2806520"
  },
  {
    "start": "2798000",
    "end": "2900000"
  },
  {
    "text": "the Tommy plus version is 47 megabytes so it's another 20 megabytes to get",
    "start": "2806520",
    "end": "2811760"
  },
  {
    "text": "active mq in there to get cxf in there and to get uh connector architecture and the additional",
    "start": "2811760",
    "end": "2817559"
  },
  {
    "text": "so you basically have your choice between 27 megabytes and 47 megabytes of of of zip size uh it runs with the",
    "start": "2817559",
    "end": "2824640"
  },
  {
    "text": "default memory settings you don't need to bump up the memory just to start the server or deploy basic",
    "start": "2824640",
    "end": "2830920"
  },
  {
    "text": "applications um and and it's tightly integrated you know so it's it's very small it's very small uh you know it",
    "start": "2830920",
    "end": "2838319"
  },
  {
    "text": "represents each zip file that you get uh represents hundreds of hours of",
    "start": "2838319",
    "end": "2844200"
  },
  {
    "text": "testing I think it's a significant thing to to think about it's easy to focus",
    "start": "2844200",
    "end": "2850559"
  },
  {
    "text": "just on the time saved in terms of integration which is obviously significant but each zip file gets",
    "start": "2850559",
    "end": "2856800"
  },
  {
    "text": "hundreds of hours of testing We Run The tck every single day on Tommy and so our even trunk is on on average 95 to 100%",
    "start": "2856800",
    "end": "2865119"
  },
  {
    "text": "passing it's really stable um and it's certified there's portability can there",
    "start": "2865119",
    "end": "2871119"
  },
  {
    "text": "so unlike when you Cobble things together yourself on Tomcat you can't move that to web spere or anything else like that uh J boss you know you have to",
    "start": "2871119",
    "end": "2879599"
  },
  {
    "text": "rewrite those applications or significantly modify them and then you have if you've done the integration",
    "start": "2879599",
    "end": "2885040"
  },
  {
    "text": "yourself you've often find that your interpretation of the specification was perhaps different than somebody else's",
    "start": "2885040",
    "end": "2890880"
  },
  {
    "text": "interpretation of the specification and you integrated things differently and so now you maybe have a significant issue",
    "start": "2890880",
    "end": "2896800"
  },
  {
    "text": "that prevents your application from moving anywhere at all uh so some Perils of doing it",
    "start": "2896800",
    "end": "2903000"
  },
  {
    "start": "2900000",
    "end": "3204000"
  },
  {
    "text": "yourself and I sort of kind of went into there already uh there's a",
    "start": "2903000",
    "end": "2908640"
  },
  {
    "text": "performance penalty that people don't really realize uh people would you would",
    "start": "2908640",
    "end": "2916000"
  },
  {
    "text": "normally think seeing all these things added to Tomcat would result in a slower",
    "start": "2916000",
    "end": "2921119"
  },
  {
    "text": "application but that is only true unless you have not added things to Tomcat",
    "start": "2921119",
    "end": "2926400"
  },
  {
    "text": "yourself so if we're both adding things to Tomcat well then they have effectively similar size libraries but",
    "start": "2926400",
    "end": "2932400"
  },
  {
    "text": "there's a big difference that these days all these liaries we're adding are",
    "start": "2932400",
    "end": "2938200"
  },
  {
    "text": "scanning our web app that's the way new uh apis work in Java e So when you say",
    "start": "2938200",
    "end": "2945720"
  },
  {
    "text": "at path on a JX RS component and that gets discovered and deployed what that means is that uh cxf",
    "start": "2945720",
    "end": "2955240"
  },
  {
    "text": "or Jersey has read every single class file in your",
    "start": "2955240",
    "end": "2960599"
  },
  {
    "text": "War looked it with parsed it with like ASM looked to see if it had at path on",
    "start": "2960599",
    "end": "2966119"
  },
  {
    "text": "it and then it sets it aside deploys that so when you add say Jersey to a",
    "start": "2966119",
    "end": "2972559"
  },
  {
    "text": "simple web app Tom Cat will read every single class file and every single jar",
    "start": "2972559",
    "end": "2977720"
  },
  {
    "text": "looking for serlet at web serlet then it's done and then Jersey gets its turn",
    "start": "2977720",
    "end": "2984280"
  },
  {
    "text": "okay now I'm going to take my shot at really scanning every single class file in this war and it does the same thing",
    "start": "2984280",
    "end": "2991359"
  },
  {
    "text": "so if you got an embedded database in there they that gets scanned I mean everything gets scanned there's no it's it's very",
    "start": "2991359",
    "end": "2997559"
  },
  {
    "text": "very blind in how it how it does it and then you add jpa in there and now thr",
    "start": "2997559",
    "end": "3003040"
  },
  {
    "text": "all these at entity components now open JP or hibernate or Eclipse link they're",
    "start": "3003040",
    "end": "3009000"
  },
  {
    "text": "going to scan every single class file you see where I'm going with this the same is true if you add JSF there's at",
    "start": "3009000",
    "end": "3015160"
  },
  {
    "text": "managed bean and then if you add ejb there's at Singleton if you add uh jaws",
    "start": "3015160",
    "end": "3021000"
  },
  {
    "text": "now you have at web service all of these things now get scanned multiple times so",
    "start": "3021000",
    "end": "3026359"
  },
  {
    "text": "the more more things you're cramming onto Tomcat the more inefficient your startup gets and so this is one of the",
    "start": "3026359",
    "end": "3032280"
  },
  {
    "text": "things that we do differently in our integration because we have the everything you know integrated very well",
    "start": "3032280",
    "end": "3038760"
  },
  {
    "text": "and and uh one of the big things that we did between the the beta and the 1.0 was we eliminated all this double scanning",
    "start": "3038760",
    "end": "3045480"
  },
  {
    "text": "and triple scanning and quadruple scanning so not only are you not scanning it say six times your web",
    "start": "3045480",
    "end": "3051640"
  },
  {
    "text": "application because it doesn't have all those libraries in the web location is six times as small so that one scan is",
    "start": "3051640",
    "end": "3057960"
  },
  {
    "text": "many times faster than what you would normally get so that's one significant thing to be to be aware of another thing",
    "start": "3057960",
    "end": "3065920"
  },
  {
    "text": "is that uh there's a there's a fallacy that if you drop open jpa for example",
    "start": "3065920",
    "end": "3071920"
  },
  {
    "text": "into tomet that you're getting 100% of jpa functionality you're not you cannot",
    "start": "3071920",
    "end": "3077640"
  },
  {
    "text": "use at persistence context in a tomet web application that has open jpa in it",
    "start": "3077640",
    "end": "3083280"
  },
  {
    "text": "it's impossible because that requires a transaction man manager which requires logic to register the entity",
    "start": "3083280",
    "end": "3091119"
  },
  {
    "text": "manager with the transaction manager and then everybody who uses ad persistence context should get the same entity",
    "start": "3091119",
    "end": "3097720"
  },
  {
    "text": "manager injected into them so if they're all in the same transaction they're all using the same entity manager using the",
    "start": "3097720",
    "end": "3103520"
  },
  {
    "text": "same database connection to the same database that's a lot of integration you just do not get by throwing open jpa or",
    "start": "3103520",
    "end": "3110960"
  },
  {
    "text": "hyate in the Tomcat which is why everybody who uses plain Tomcat with a",
    "start": "3110960",
    "end": "3116599"
  },
  {
    "text": "JP provider uses the entity manager Factory directly to instantiate their entity managers and then you have to",
    "start": "3116599",
    "end": "3122400"
  },
  {
    "text": "track them and then you have to use the the JTA entity transaction and if you",
    "start": "3122400",
    "end": "3127640"
  },
  {
    "text": "have two entity managers that you want to coordinate together guess what you can't they're separate they don't",
    "start": "3127640",
    "end": "3133280"
  },
  {
    "text": "participate in the same transaction so you couldn't move data from one database to another database using this because",
    "start": "3133280",
    "end": "3139400"
  },
  {
    "text": "they do not share a transaction very significant open web beans for example",
    "start": "3139400",
    "end": "3147040"
  },
  {
    "text": "only runs 60% of the CDI tck on its standal loone implementation of",
    "start": "3147040",
    "end": "3154960"
  },
  {
    "text": "CDI because the other 40% is all integration and they're not going to write integration with ejb and JX RS and",
    "start": "3154960",
    "end": "3162079"
  },
  {
    "text": "jaxws and all that stuff so these are things that we had to do in Tommy to make it so it's a fallacy to think that",
    "start": "3162079",
    "end": "3168520"
  },
  {
    "text": "I have open jpa I have my faces and I have uh U you know open web beams in my",
    "start": "3168520",
    "end": "3173880"
  },
  {
    "text": "Tomcat application so therefore it's the same as Tommy it's not it's about it's about half to",
    "start": "3173880",
    "end": "3180319"
  },
  {
    "text": "60% you know when we added all this stuff into Tomcat you know before we did",
    "start": "3180319",
    "end": "3185960"
  },
  {
    "text": "any really serious integration work we were only about 40% compliant as I mentioned and uh you know it's a lot of",
    "start": "3185960",
    "end": "3194440"
  },
  {
    "text": "work to get from 40 to 100% And it's a lot more work to get it fast and it's a lot more work to get it stable and to",
    "start": "3194440",
    "end": "3200599"
  },
  {
    "text": "keep it tested and well oiled all the time is a very big amount of work um",
    "start": "3200599",
    "end": "3207920"
  },
  {
    "text": "so I've gone by with the with the portability stuff U we have just five minutes but I want to show you one real",
    "start": "3207920",
    "end": "3214160"
  },
  {
    "text": "quick thing here there's a significant testing Advantage with Java e these days",
    "start": "3214160",
    "end": "3219440"
  },
  {
    "text": "that you may not have been aware of uh normally Java gets it hit on the chin for being",
    "start": "3219440",
    "end": "3225079"
  },
  {
    "text": "untestable uh there's a new testing framework called archilon which is supported by all the jav app servers in",
    "start": "3225079",
    "end": "3231920"
  },
  {
    "text": "J boss glassfish uh web sphere web logic so write down archilon and research this",
    "start": "3231920",
    "end": "3239640"
  },
  {
    "text": "afterwards uh I'll show it to you briefly so here it is at a 10,000 foot",
    "start": "3239640",
    "end": "3247440"
  },
  {
    "text": "the goal of archan is to allow you to write a test",
    "start": "3247440",
    "end": "3253960"
  },
  {
    "text": "run it on any server uh this has been tried before with projects like cargo uh and things",
    "start": "3253960",
    "end": "3260799"
  },
  {
    "text": "like that but the significant thing that's different about arilan is that uh",
    "start": "3260799",
    "end": "3267960"
  },
  {
    "text": "it has adapters for every single server and it's getting used and now in Java E7",
    "start": "3267960",
    "end": "3273920"
  },
  {
    "text": "the CDI tck is using archilon as its uh testing",
    "start": "3273920",
    "end": "3280200"
  },
  {
    "text": "vehicle so all the app servers from now forever will have to support archilon so",
    "start": "3280200",
    "end": "3286119"
  },
  {
    "text": "it's safe to invest in it and have it stay there uh so what you do is you use plain",
    "start": "3286119",
    "end": "3291720"
  },
  {
    "text": "old junit test you say at runs with archilon you make plain old at test annotated uh",
    "start": "3291720",
    "end": "3300319"
  },
  {
    "text": "test methods and the new twist here is that you build up your application in code",
    "start": "3300319",
    "end": "3308200"
  },
  {
    "text": "and return it to the testing framework the testing framework will create a war file from that and deploy that into the",
    "start": "3308200",
    "end": "3314359"
  },
  {
    "text": "server for you and then even as a little perk you don't have to guess the URL that the",
    "start": "3314359",
    "end": "3321280"
  },
  {
    "text": "server is running on so you don't have to know the ports and you don't have to work out that kind of mechanics that you normally have to deal with you simply",
    "start": "3321280",
    "end": "3327720"
  },
  {
    "text": "say arilan resource URL and that will be the URL of the web app itself all the",
    "start": "3327720",
    "end": "3332799"
  },
  {
    "text": "way right up to the to the first flash of the web app including the port including HTTP htps",
    "start": "3332799",
    "end": "3340039"
  },
  {
    "text": "whatever so here we've just got a war file with three simple classes in it and",
    "start": "3340039",
    "end": "3347480"
  },
  {
    "text": "the great thing about that is that now if I want to swap about say one implementation of something for a mocked",
    "start": "3347480",
    "end": "3353000"
  },
  {
    "text": "version I just specified the mocked version",
    "start": "3353000",
    "end": "3358039"
  },
  {
    "text": "all right so I'm going to just go ahead and run these little CDI tests and you can kind of see the speeds",
    "start": "3358039",
    "end": "3365079"
  },
  {
    "text": "that you're that you're looking at so we have an archelon adapter for an embedded",
    "start": "3365079",
    "end": "3370240"
  },
  {
    "text": "version of Tommy and there we go so that ran 6 seconds all those tests this uses",
    "start": "3370240",
    "end": "3376079"
  },
  {
    "text": "the embedded version of Tommy we have an archan adapter for a separate process running Tommy a standard booted up",
    "start": "3376079",
    "end": "3383119"
  },
  {
    "text": "server uh so you can take that one test that we've written here and you can run it on your local machine on an embedded",
    "start": "3383119",
    "end": "3389640"
  },
  {
    "text": "datab on embedded server while you're developing and then you can take that same test and then run it on like a QA",
    "start": "3389640",
    "end": "3395559"
  },
  {
    "text": "server that's running in a completely different section of the network you don't have to edit the test because as I said all the location information is",
    "start": "3395559",
    "end": "3401359"
  },
  {
    "text": "extracted extracted from the test and the test simply builds up a war file and then as you move that to uh say some",
    "start": "3401359",
    "end": "3408599"
  },
  {
    "text": "sort of staging you could run those tests again so your tests become a significant asset and resource for you",
    "start": "3408599",
    "end": "3416000"
  },
  {
    "text": "person personally and they're not even Tommy specific if you decide to go to another server or you're in a position",
    "start": "3416000",
    "end": "3421319"
  },
  {
    "text": "that you have to support multiple servers because you have some sort of product that you sell that needs to run on many implementations then AR killing",
    "start": "3421319",
    "end": "3428400"
  },
  {
    "text": "is a is a you know godsend it's it's it's a huge game changer there are some really great",
    "start": "3428400",
    "end": "3435559"
  },
  {
    "text": "perks about this about using an embedded server which Tommy has a wonderful embedded",
    "start": "3435559",
    "end": "3441240"
  },
  {
    "text": "server it's very much a a uh focus of the project embedded Technologies I",
    "start": "3441240",
    "end": "3447760"
  },
  {
    "text": "think are the future uh running a server as a standalone process where you then",
    "start": "3447760",
    "end": "3453039"
  },
  {
    "text": "boot the server and then deploy an application that fits for some things but if you just have one application",
    "start": "3453039",
    "end": "3459240"
  },
  {
    "text": "take the server take the application bundle them together and just start it as one process like you would use an",
    "start": "3459240",
    "end": "3465119"
  },
  {
    "text": "embedded database why not it can it can provide you with some options that you normally would not get uh a great perk",
    "start": "3465119",
    "end": "3473599"
  },
  {
    "text": "of that is it runs as a plain Java SE application",
    "start": "3473599",
    "end": "3480160"
  },
  {
    "text": "so that's not what I want to do all right so we're going to take and put a a break point in this",
    "start": "3480160",
    "end": "3487839"
  },
  {
    "text": "servlet here we have a serlet with the Constructor simple serlet extends HTTP",
    "start": "3487839",
    "end": "3494400"
  },
  {
    "text": "servlet and it's got a Constructor normally you don't get Constructors in injection in servlets uh but this is a",
    "start": "3494400",
    "end": "3500400"
  },
  {
    "text": "new feature in Java E7 which is supported in in uh Tommy uh for about",
    "start": "3500400",
    "end": "3505480"
  },
  {
    "text": "two years now actually it I was the one who uh added it um to the specs uh so",
    "start": "3505480",
    "end": "3512400"
  },
  {
    "text": "we're going to add a break point there and then we're going to go to our serlet our test case and we're going to",
    "start": "3512400",
    "end": "3520599"
  },
  {
    "text": "run it in debug mode so we go to run this",
    "start": "3520599",
    "end": "3528200"
  },
  {
    "text": "app and then our code window is very",
    "start": "3528200",
    "end": "3534000"
  },
  {
    "text": "shrunk there we are we've stopped at our breakpoint we haven't had to set up any",
    "start": "3534000",
    "end": "3540440"
  },
  {
    "text": "remote debugging any booting things on separate ports as a separate command and",
    "start": "3540440",
    "end": "3545640"
  },
  {
    "text": "coming back to the IDE nothing we we're able to debug this here's our car object",
    "start": "3545640",
    "end": "3551480"
  },
  {
    "text": "that's injected it's a Lexus IS 350 it's uh you know we can see into our",
    "start": "3551480",
    "end": "3559039"
  },
  {
    "text": "application completely and we haven't had to set up anything different and it runs just as fast as a standard Java SE",
    "start": "3559039",
    "end": "3564880"
  },
  {
    "text": "application uh there is really no reason to avoid heavy technology anymore that is really",
    "start": "3564880",
    "end": "3573079"
  },
  {
    "text": "of of the past that's no longer the reality so to invest a considerable",
    "start": "3573079",
    "end": "3578200"
  },
  {
    "text": "amount of time to do it all yourself to avoid all this heaviness means now you have to write your own testing framework",
    "start": "3578200",
    "end": "3584079"
  },
  {
    "text": "you've got to do all the other integration testing that's there and if you upgrade a component and it breaks",
    "start": "3584079",
    "end": "3589440"
  },
  {
    "text": "something then you got to fix that so I normally ask this and I I didn't but for",
    "start": "3589440",
    "end": "3595160"
  },
  {
    "text": "all the people who have added added things to tomat how many of you have written tests for your integration of",
    "start": "3595160",
    "end": "3601760"
  },
  {
    "text": "those Technologies one hand that's typically",
    "start": "3601760",
    "end": "3607000"
  },
  {
    "text": "the way it goes so it's not tens of thousands of tests and it's not all the additional tests that we've written",
    "start": "3607000",
    "end": "3612680"
  },
  {
    "text": "which we've discovered weren't covered by those tens of thousands of tests zero tests so every time something breaks",
    "start": "3612680",
    "end": "3619160"
  },
  {
    "text": "basically you hope it works and a lot of times you don't know tell production uh",
    "start": "3619160",
    "end": "3626240"
  },
  {
    "text": "it's how many of you have written tests for your applications at all for your jav applications at",
    "start": "3626240",
    "end": "3632319"
  },
  {
    "text": "all five hands yeah much less uh much much less than it should be",
    "start": "3632319",
    "end": "3639240"
  },
  {
    "text": "should be all the hands um this is not just a good way to test your application it's a good way to",
    "start": "3639240",
    "end": "3644520"
  },
  {
    "text": "develop I mean you can write code and just see what it does as you're working",
    "start": "3644520",
    "end": "3650200"
  },
  {
    "text": "and you don't have to sit and live through those continuous deploy build deploy Cycles you can write it as a",
    "start": "3650200",
    "end": "3657000"
  },
  {
    "text": "plain Java SE application as fast as you would a Java SE application run it as fast as you",
    "start": "3657000",
    "end": "3662520"
  },
  {
    "text": "would a Java the SE application complete Game Cher I mean there's some really great tools like zero turnaround which",
    "start": "3662520",
    "end": "3668160"
  },
  {
    "text": "make a their whole job is you know to to make deploy faster well the server",
    "start": "3668160",
    "end": "3674240"
  },
  {
    "text": "doesn't mean that the server is running so fast that it's Java SE speed you don't really need that and if your test",
    "start": "3674240",
    "end": "3682000"
  },
  {
    "text": "cases are able to control the exact size of your file then you don't need you",
    "start": "3682000",
    "end": "3687599"
  },
  {
    "text": "should keep them small so they can be closer to unit test you don't want to deploy this whole big war file that has",
    "start": "3687599",
    "end": "3694039"
  },
  {
    "text": "all these different functionalities every time for one little test you want to isolate as much as possible that's a",
    "start": "3694039",
    "end": "3700640"
  },
  {
    "text": "tenant of good tenant of of of unit testing this is a I I believe is a",
    "start": "3700640",
    "end": "3708720"
  },
  {
    "text": "turning point for Java e not Tommy specifically but just the whole movement I mean Tommy is a part of it but but",
    "start": "3708720",
    "end": "3715440"
  },
  {
    "text": "what ja is done with itself in the last just two years is huge this is not the",
    "start": "3715440",
    "end": "3722839"
  },
  {
    "text": "same thing that we had from 2000 to 2010 this is a completely different thing The",
    "start": "3722839",
    "end": "3728880"
  },
  {
    "text": "Only Thing That Remains the Same is the name and actually that was changed some time ago from j2e to Java e uh so you",
    "start": "3728880",
    "end": "3736440"
  },
  {
    "text": "know I encourage everyone to look at Java e differently look at what you can",
    "start": "3736440",
    "end": "3741480"
  },
  {
    "text": "do on tomat differently look at the motivation if I'm doing the same thing on Tom Cat that Tommy's doing what's the",
    "start": "3741480",
    "end": "3747920"
  },
  {
    "text": "advantage of me doing it myself uh you know it's it's you know if",
    "start": "3747920",
    "end": "3753319"
  },
  {
    "text": "you do find an advantage of doing yourself of course let us know and we'll we'll add that to the project as a part",
    "start": "3753319",
    "end": "3758839"
  },
  {
    "text": "of what we do we do get that feedback often actually uh anyway it's uh it's it's a",
    "start": "3758839",
    "end": "3765240"
  },
  {
    "text": "significant it's a significant change to the way we normally think of doing work and the way we do work um I really",
    "start": "3765240",
    "end": "3773640"
  },
  {
    "text": "encourage people to to try out time and",
    "start": "3773640",
    "end": "3778839"
  },
  {
    "text": "uh you know give it a shot just a quick thing before we go here's some of the",
    "start": "3778839",
    "end": "3784559"
  },
  {
    "text": "vendors who have added support for Tommy in their products in the last year so we have a a Tommy adapter in in",
    "start": "3784559",
    "end": "3793039"
  },
  {
    "text": "gelas in intell J jrebel has added support for Tommy uh in their U zero",
    "start": "3793039",
    "end": "3800119"
  },
  {
    "text": "turnaround in you know in their hot deploy type of functionality New Relic has support from monitoring applications",
    "start": "3800119",
    "end": "3806799"
  },
  {
    "text": "in Tommy uh Stato has Tommy in their private pass of course I mentioned",
    "start": "3806799",
    "end": "3812160"
  },
  {
    "text": "gelastic who has it in their public pass uh meta works is sort of a host Tom Cat",
    "start": "3812160",
    "end": "3817200"
  },
  {
    "text": "hosting company uh they've got Tommy in there uh and more is added all the time",
    "start": "3817200",
    "end": "3824520"
  },
  {
    "text": "uh the secret sauce is that I go up to them and I say do you support tomcat and of course they say yes and I say well",
    "start": "3824520",
    "end": "3830039"
  },
  {
    "text": "then you should add Tommy support oh we don't have the resources to do know other integration well if you tried it",
    "start": "3830039",
    "end": "3836559"
  },
  {
    "text": "no it's probably going to work because it's tomcat and the same thing is true for your environments if you are running",
    "start": "3836559",
    "end": "3842680"
  },
  {
    "text": "Tomcat to get Tommy in is easy you're already set up for it you don't have to",
    "start": "3842680",
    "end": "3848599"
  },
  {
    "text": "write new tools you don't have to write new anything it's good to go thank you",
    "start": "3848599",
    "end": "3853640"
  },
  {
    "text": "very much uh I hope you enjoyed the presentation and uh I hope you enjoy trying out Tommy and I look forward to",
    "start": "3853640",
    "end": "3860079"
  },
  {
    "text": "your your feedback thank you [Applause]",
    "start": "3860079",
    "end": "3867010"
  },
  {
    "text": "[Music]",
    "start": "3870240",
    "end": "3877829"
  }
]