[
  {
    "text": "so hi I'm Matt and I'm going to talk a little bit how you could build a brain",
    "start": "4010",
    "end": "9650"
  },
  {
    "text": "with go which apparently is the thing you can do I didn't really think that be the case two years ago but yeah it's a",
    "start": "9650",
    "end": "18740"
  },
  {
    "text": "thing so little quick instruction I match you could put me on Twitter here",
    "start": "18740",
    "end": "24620"
  },
  {
    "text": "if you have any questions give me a shout I mainly work as a back-end",
    "start": "24620",
    "end": "29930"
  },
  {
    "text": "engineer do a lot of infrastructure and kind of back-end systems and I've been",
    "start": "29930",
    "end": "35300"
  },
  {
    "text": "doing that for a few years and I've been working with go for kind of four and a half years pretty much full-time for",
    "start": "35300",
    "end": "41450"
  },
  {
    "text": "last four years which for me has been kind of amazing i as a PHP engineer",
    "start": "41450",
    "end": "46760"
  },
  {
    "text": "before I say engineer very loosely there I know form from PHP but my ability at",
    "start": "46760",
    "end": "52310"
  },
  {
    "text": "that point was terrible and for me goes kind of changed the way I think quite a",
    "start": "52310",
    "end": "57320"
  },
  {
    "text": "lot about programming and kind of different kind of approach that it's given me but has anyone had a bad ones",
    "start": "57320",
    "end": "66799"
  },
  {
    "text": "oh okay so a few people go so I work a company called one zone we make these",
    "start": "66799",
    "end": "73369"
  },
  {
    "text": "kind of hot coral debit cards cover Dupre page soon to be full debit cards",
    "start": "73369",
    "end": "79130"
  },
  {
    "text": "and we release current accounts later this year and we're a bank so the the",
    "start": "79130",
    "end": "87499"
  },
  {
    "text": "main reason we kind of started this whole thing to like build a new kind of bank is mainly because this is how I see",
    "start": "87499",
    "end": "94880"
  },
  {
    "text": "banks and yeah I mean they're kind of",
    "start": "94880",
    "end": "99950"
  },
  {
    "text": "they look pretty fancy and this for me is kind of as a guy with slightly crazy",
    "start": "99950",
    "end": "105950"
  },
  {
    "text": "eyes and for me anytime I interact with my bank this is kind of how it feels",
    "start": "105950",
    "end": "113389"
  },
  {
    "text": "occasionally I have to go physically to a bank which is quite annoying and even",
    "start": "113389",
    "end": "120079"
  },
  {
    "text": "if I don't then I have to bring someone up my internet marketing is not really that great and ultimately the cutting of",
    "start": "120079",
    "end": "126829"
  },
  {
    "text": "customer experience that I expect from banking in 2017 is not what prankster",
    "start": "126829",
    "end": "132769"
  },
  {
    "text": "little in a world where like I can tackle my and a car arrives to pick me up and while I'm in that car I order some food",
    "start": "132769",
    "end": "140530"
  },
  {
    "text": "on my phone and it arrives in my house by the time I get home but like to even",
    "start": "140530",
    "end": "145840"
  },
  {
    "text": "deal with my money I have to physically walk somewhere a bit lazy but that that",
    "start": "145840",
    "end": "152049"
  },
  {
    "text": "kind of is a bit crazy Glee and there's a lot some lots of reasons for that",
    "start": "152049",
    "end": "157090"
  },
  {
    "text": "banking is an interesting business where the banks tend to consolidate quite heavily which means you end up with lots",
    "start": "157090",
    "end": "163959"
  },
  {
    "text": "and lots of different IT systems that have to be managed by kind of a whole team of different people and the core of",
    "start": "163959",
    "end": "171430"
  },
  {
    "text": "that we have like super awesome mainframes which are very powerful and",
    "start": "171430",
    "end": "176859"
  },
  {
    "text": "insanely expensive but cool facts if you wrote code the run on this in like 1960",
    "start": "176859",
    "end": "183459"
  },
  {
    "text": "you can still buy a mainframe that will run your code which is great if you",
    "start": "183459",
    "end": "188560"
  },
  {
    "text": "don't really want to change things but if you actually need to then interact with that code and kind of modify how",
    "start": "188560",
    "end": "194439"
  },
  {
    "text": "your business works and kind of stay up to date that that is very difficult and you end up in this kind of standard",
    "start": "194439",
    "end": "201819"
  },
  {
    "text": "place where you built up technical debt but it's very very difficult to turn him head out to that so we started building",
    "start": "201819",
    "end": "208780"
  },
  {
    "text": "ones about two years ago which was back in February 2015",
    "start": "208780",
    "end": "214620"
  },
  {
    "text": "getting the full banking license takes a little while we kind of got our",
    "start": "214620",
    "end": "219720"
  },
  {
    "text": "restricted banking license in August last year and we're kind of working through with",
    "start": "219720",
    "end": "225759"
  },
  {
    "text": "regulators to get those last couple of restrictions lifted and hopefully that will happen very soon and then at that",
    "start": "225759",
    "end": "232840"
  },
  {
    "text": "point we are a fully regulated bank we can issue current occurs to people and",
    "start": "232840",
    "end": "238479"
  },
  {
    "text": "you have all the kind of standard protections that any normal high street won't gives you so what do we do this",
    "start": "238479",
    "end": "243970"
  },
  {
    "text": "difference so start with we give you an out and everything you do with Manzo's",
    "start": "243970",
    "end": "249400"
  },
  {
    "text": "to your cards I swipe through through the app on your phone so this is why one",
    "start": "249400",
    "end": "254409"
  },
  {
    "text": "of my kind of funding features favorite features you can if you have your cards are legal awesome you can you can freeze",
    "start": "254409",
    "end": "261130"
  },
  {
    "text": "it and then if you find it then you can turn it back on amazing and kind of like",
    "start": "261130",
    "end": "268480"
  },
  {
    "text": "it's just something that like obviously every bank in the world should provide and should have provided ten years ago",
    "start": "268480",
    "end": "273790"
  },
  {
    "text": "where I don't really need the backing where so far I don't I shouldn't really have to wait for like three days for a",
    "start": "273790",
    "end": "280130"
  },
  {
    "text": "replacement Walton place five days probably for a replacement to arrive and so lots of kind of little things like",
    "start": "280130",
    "end": "286760"
  },
  {
    "text": "that or what we're trying to do to change the water banking so we have now we show you like where you actually",
    "start": "286760",
    "end": "293990"
  },
  {
    "text": "bought things so you understand where you spend your money we give you like kind of budgeting advice you can send",
    "start": "293990",
    "end": "300590"
  },
  {
    "text": "money through Yap in which case you get like James in space if you send James money we can we have like fully built in",
    "start": "300590",
    "end": "308660"
  },
  {
    "text": "search again this is like just kind of standard stuff that you have building anything that wasn't about you would go to insurance including the ability to",
    "start": "308660",
    "end": "315620"
  },
  {
    "text": "search with emoji oh yeah and like when",
    "start": "315620",
    "end": "322820"
  },
  {
    "text": "you go when you've actually bought something you can see like on a map where it was so there's no more like confusion around like what is this thing",
    "start": "322820",
    "end": "328640"
  },
  {
    "text": "on my bank statement you can also attach receipts I attach photos of my brunch",
    "start": "328640",
    "end": "333910"
  },
  {
    "text": "which again is super useful and yeah as I mentioned before you can like if you",
    "start": "333910",
    "end": "340340"
  },
  {
    "text": "lose your card you can freeze it literally with one tap and if you find it you can one tap on freezers or you",
    "start": "340340",
    "end": "346100"
  },
  {
    "text": "can just order a replacement you don't you speak 21 just comes on the post like the next day usually and that's kind of",
    "start": "346100",
    "end": "353150"
  },
  {
    "text": "it so all of these things seem like relatively straightforward like you're",
    "start": "353150",
    "end": "358970"
  },
  {
    "text": "building kind of any kind of internet-based app like there's a huge range of different technologies you can",
    "start": "358970",
    "end": "364160"
  },
  {
    "text": "use and they're all like pretty standard but Mike how would you how do you start",
    "start": "364160",
    "end": "370430"
  },
  {
    "text": "that if you're building a mobile app so usually you have an application of some form let's say rails whatever and behind",
    "start": "370430",
    "end": "378710"
  },
  {
    "text": "that you're going to have some kind of database that's going to store your customers data and over time that's",
    "start": "378710",
    "end": "384380"
  },
  {
    "text": "going to get much larger it's kind of the inevitability of like adding features and functionality to to your",
    "start": "384380",
    "end": "390230"
  },
  {
    "text": "application and that's kind of going to increasing complexity you might have",
    "start": "390230",
    "end": "395570"
  },
  {
    "text": "multiple databases you might need like kind of search things caching and all sorts of other like really",
    "start": "395570",
    "end": "401340"
  },
  {
    "text": "important features and ultimately you end up in this horrible world where you",
    "start": "401340",
    "end": "407370"
  },
  {
    "text": "have this monolith kind of a huge application now that's not always a bad thing like right at the beginning if",
    "start": "407370",
    "end": "414240"
  },
  {
    "text": "you're a startup this is not your problem right like you don't have any customers so like building an",
    "start": "414240",
    "end": "421740"
  },
  {
    "text": "application that people actually use at the most important part but at some point further down the line you end up",
    "start": "421740",
    "end": "428610"
  },
  {
    "text": "with lots of complexity and this is kind of a very very common pattern loads of people here have talked about that and",
    "start": "428610",
    "end": "434910"
  },
  {
    "text": "the last day or two loads of other companies have kind of talked about this situation where they have to real",
    "start": "434910",
    "end": "440280"
  },
  {
    "text": "connect at some point in the future and this is pretty much what happens and",
    "start": "440280",
    "end": "445920"
  },
  {
    "text": "this is my face and ultimately it it's a",
    "start": "445920",
    "end": "451470"
  },
  {
    "text": "really bad problem for developers because if if you would develop a day to day is just so frustrating because you",
    "start": "451470",
    "end": "457560"
  },
  {
    "text": "have to like you want to do like also kind of different things you want to like add a really cool feature and then",
    "start": "457560",
    "end": "463680"
  },
  {
    "text": "you could deploy it because like someone else is kind of dealing with something and you have to like deal with one",
    "start": "463680",
    "end": "468780"
  },
  {
    "text": "horrible release pipeline so stand of thing we kind of break this up into lots",
    "start": "468780",
    "end": "474510"
  },
  {
    "text": "of discrete services I hate to say micro services some science services and these",
    "start": "474510",
    "end": "482940"
  },
  {
    "text": "will be communicating in a variety of different ways potentially depending on how your application works and this is",
    "start": "482940",
    "end": "488460"
  },
  {
    "text": "basically how we start it so it's an in order perfect system if you start from day one building lots of",
    "start": "488460",
    "end": "494250"
  },
  {
    "text": "small kind of web services that communicate to each other you have a very big kind of amount up from work to",
    "start": "494250",
    "end": "501420"
  },
  {
    "text": "do and that amount of work is getting a lot smaller as tooling is kind of getting a capacity better but there's a",
    "start": "501420",
    "end": "508320"
  },
  {
    "text": "lot of work to do if you want to like start off with a load of applications that communicate to each other in our",
    "start": "508320",
    "end": "514710"
  },
  {
    "text": "case getting a banking license takes a really long time so we have like slightly more time which meant that we",
    "start": "514710",
    "end": "521640"
  },
  {
    "text": "could kind of build a a kind of platform which would allow us to them and a scale design without hand to me",
    "start": "521640",
    "end": "528000"
  },
  {
    "text": "architect at some point of the future so where we were kind of going through this we kind of kind of few basic principles single",
    "start": "528000",
    "end": "534170"
  },
  {
    "text": "responsibility principle so every one of our services does one job does it well within those things we are bounding the",
    "start": "534170",
    "end": "540350"
  },
  {
    "text": "context of each application so we're taking a discrete area of functionality in our app building a service that",
    "start": "540350",
    "end": "546350"
  },
  {
    "text": "supports that or a number of services that are not kind of a sharing",
    "start": "546350",
    "end": "551509"
  },
  {
    "text": "functionality across boundaries there and the cool part about that is we then get like really well-defined interfaces",
    "start": "551509",
    "end": "557000"
  },
  {
    "text": "between our services which also means if you're skiing out your development team you have very well-defined interfaces",
    "start": "557000",
    "end": "563029"
  },
  {
    "text": "and teams can do stuff without needing to like entrap on each other so how does",
    "start": "563029",
    "end": "568279"
  },
  {
    "text": "that involve Gophers so anyone who hasn't seen the Go gopher this is the Go",
    "start": "568279",
    "end": "574310"
  },
  {
    "text": "gopher mascots of go program lounges and the real question is like why would we",
    "start": "574310",
    "end": "580759"
  },
  {
    "text": "use a relatively new language to build a bank which is like super risky and",
    "start": "580759",
    "end": "590440"
  },
  {
    "text": "actually there's a number of reasons for one we want something that is kind of",
    "start": "590440",
    "end": "596810"
  },
  {
    "text": "memory managed we want something as statically typed so we don't get like number conversions accidentally that",
    "start": "596810",
    "end": "603620"
  },
  {
    "text": "would be quite bad if your bank we also are building a micro servers architecture or at least we're building",
    "start": "603620",
    "end": "609949"
  },
  {
    "text": "a number of discrete systems which communicate over a network which means we realistically need pretty good",
    "start": "609949",
    "end": "615680"
  },
  {
    "text": "concurrency and because we're building small services we want them to be very",
    "start": "615680",
    "end": "621110"
  },
  {
    "text": "very lightweight so obviously memory management has been a really good thing",
    "start": "621110",
    "end": "627370"
  },
  {
    "text": "kind of demonstrated quite recently we don't really want like buffer overflows because they're quite bad and they've",
    "start": "627370",
    "end": "634579"
  },
  {
    "text": "been in the news recently I went a while but as far as like lightweight goes we",
    "start": "634579",
    "end": "642589"
  },
  {
    "text": "we have a lot of different applications and if we're using something on the JVM then we're going to have every application is n 100 megabytes of memory",
    "start": "642589",
    "end": "651319"
  },
  {
    "text": "whereas ghost services you can use like 20 or 30 megabytes of memory and that's the whole application running they can",
    "start": "651319",
    "end": "658130"
  },
  {
    "text": "also run like huge huge numbers of requests and pretty much scale linearly",
    "start": "658130",
    "end": "664040"
  },
  {
    "text": "with the number cause so some of the features that we're looking for in our language as I mentioned we're",
    "start": "664040",
    "end": "671270"
  },
  {
    "text": "running network services we're doing a lot in network communication so we need",
    "start": "671270",
    "end": "676460"
  },
  {
    "text": "these things to they'd be a pretty good at currency especially in our run like",
    "start": "676460",
    "end": "681500"
  },
  {
    "text": "network services so has anyone heard of",
    "start": "681500",
    "end": "686900"
  },
  {
    "text": "go routines in the go program language ok so quite a few people cool and so if",
    "start": "686900",
    "end": "693650"
  },
  {
    "text": "you don't think her and see a standard sound concurrency model would be to use something like threads or if you're",
    "start": "693650",
    "end": "699920"
  },
  {
    "text": "doing an extreme kite Ruppert server like you see might be using a small number of threads and like an",
    "start": "699920",
    "end": "705320"
  },
  {
    "text": "appallingly pole or something to kind of minimize the number of our s threads you're running an operating system the",
    "start": "705320",
    "end": "712010"
  },
  {
    "text": "reason for that is because threads are very resource intensive and if you are scaling like your servers that you're",
    "start": "712010",
    "end": "718610"
  },
  {
    "text": "scaling out your number requests with with the number of threads you're going to hit like the limitations of physical",
    "start": "718610",
    "end": "723710"
  },
  {
    "text": "hardware relatively quickly lots of languages provide alternative ways to do that and go provides guarantees so GUI",
    "start": "723710",
    "end": "732200"
  },
  {
    "text": "teens are essentially lightweight concurrently running functions so Chico",
    "start": "732200",
    "end": "738260"
  },
  {
    "text": "routines which are then multiplexed across a number of threads by the go runtime and what that means is you don't",
    "start": "738260",
    "end": "745130"
  },
  {
    "text": "really have to think about it it's just kind of magic that magically happens the",
    "start": "745130",
    "end": "750350"
  },
  {
    "text": "runtime will take care of running a number of threads based on the number of cores that you've allocated to the",
    "start": "750350",
    "end": "756410"
  },
  {
    "text": "program itself if you're dealing with i/o over a network or reading from disk",
    "start": "756410",
    "end": "761420"
  },
  {
    "text": "again the runtime will deal with threads for that problem but the the actual",
    "start": "761420",
    "end": "768320"
  },
  {
    "text": "function is B you're running your business project that is doing all of this will be multiplexed over those threads without you having to deal with",
    "start": "768320",
    "end": "774800"
  },
  {
    "text": "it and it's extremely efficient there's very very low switching cost and the",
    "start": "774800",
    "end": "780200"
  },
  {
    "text": "ghost scheduler is kind of quite optimistic on how it will move between executing the routines so to demonstrate",
    "start": "780200",
    "end": "786650"
  },
  {
    "text": "how easy that is let's assume we have function call in our code somewhere and",
    "start": "786650",
    "end": "792110"
  },
  {
    "text": "we would like this to run at the same time as the calling function so we're",
    "start": "792110",
    "end": "798080"
  },
  {
    "text": "going to put go for it and now it will run concurrently magic and of course now we just have I",
    "start": "798080",
    "end": "806759"
  },
  {
    "text": "mean that's great but now we've also got all sorts of problems of concurrently running programs we we have all sorts of",
    "start": "806759",
    "end": "814079"
  },
  {
    "text": "like concur a variable access and all of those kind of things which are kind of slightly harder problems but the go",
    "start": "814079",
    "end": "822149"
  },
  {
    "text": "language makes it extremely simple to do this and you can run like hundreds of thousands of go routines concurrently on",
    "start": "822149",
    "end": "828269"
  },
  {
    "text": "a reasonable amount of hardware that's a perfectly realistic amount to run so as",
    "start": "828269",
    "end": "835379"
  },
  {
    "text": "an example and the HTTP server will be running a new go routine every single request that comes in into HTTP server",
    "start": "835379",
    "end": "843389"
  },
  {
    "text": "they're extremely lightweight so when you create a new go routine it's going to allocate very small amount of stack",
    "start": "843389",
    "end": "849629"
  },
  {
    "text": "memory that's going to grow dynamically and contract on a mcli and it's usually kind of like 8k or something like that",
    "start": "849629",
    "end": "856519"
  },
  {
    "text": "compared to like a megabyte or like half a megabyte which is a limp agent when you create a new thread",
    "start": "856519",
    "end": "862490"
  },
  {
    "text": "so in our say we have a main function in",
    "start": "862490",
    "end": "867809"
  },
  {
    "text": "our main package this is kind of what go programmers alike and we want to run this handle request method and run that",
    "start": "867809",
    "end": "875370"
  },
  {
    "text": "concurrently since you're our flow will be our main outer function will run and",
    "start": "875370",
    "end": "881309"
  },
  {
    "text": "then this will run at some point concurrently probably on under the core and then it will exit and the main",
    "start": "881309",
    "end": "887519"
  },
  {
    "text": "program has carried on running during that time so as I mentioned when you're",
    "start": "887519",
    "end": "893220"
  },
  {
    "text": "then using shared values you potentially have a problem you need to kind of",
    "start": "893220",
    "end": "898980"
  },
  {
    "text": "coordinate access between potentially hundreds of thousands of different like",
    "start": "898980",
    "end": "904620"
  },
  {
    "text": "co-routines so the kind of monitoring go is to not communicate by sharing memory",
    "start": "904620",
    "end": "910620"
  },
  {
    "text": "but share memory by communicating and what this means is instead of like having a global variable that is",
    "start": "910620",
    "end": "917459"
  },
  {
    "text": "protected by mutexes or kind of some other kind of locking mechanism we",
    "start": "917459",
    "end": "924329"
  },
  {
    "text": "should press values between our executing go routines and go will take care of the kind of access to those",
    "start": "924329",
    "end": "930600"
  },
  {
    "text": "variables in case so that only one go routine will have access to very well at that time and go provides a really nice way of",
    "start": "930600",
    "end": "937149"
  },
  {
    "text": "doing that our chance so channels are essentially a pipeline",
    "start": "937149",
    "end": "943450"
  },
  {
    "text": "that you can put something into and it will come out the other end and usually you will have one go routine which is",
    "start": "943450",
    "end": "948550"
  },
  {
    "text": "doing lots of stuff and it will stick something in and come out and a different go routine which can then work on that value and then it may go",
    "start": "948550",
    "end": "954490"
  },
  {
    "text": "somewhere else and they're extremely simple but they allow us to do like a",
    "start": "954490",
    "end": "960550"
  },
  {
    "text": "huge range of different kind of design patterns in our application so in this",
    "start": "960550",
    "end": "965709"
  },
  {
    "text": "case I have to go FERS who are shouting at each other and we're going to pass something from one together if we had a",
    "start": "965709",
    "end": "971800"
  },
  {
    "text": "pipeline of different kind of functionality we could have one go routine that's doing lots of things it",
    "start": "971800",
    "end": "977890"
  },
  {
    "text": "has the kind of results of that that kind of functionality is going to press",
    "start": "977890",
    "end": "983140"
  },
  {
    "text": "it down another ton of channel to another go routine which will then do some more functionality and then those",
    "start": "983140",
    "end": "989980"
  },
  {
    "text": "results can be pressed down again to another one and they can be either in",
    "start": "989980",
    "end": "995260"
  },
  {
    "text": "this case synchronous or you can actually allow your channels to be buffered in which case you can size the",
    "start": "995260",
    "end": "1001620"
  },
  {
    "text": "amount of messages that can be fitted in the channel and as long as there's space in the channel then you you're kind of",
    "start": "1001620",
    "end": "1008420"
  },
  {
    "text": "there eating this putting stuff in we'll just put it in is non-blocking and they'll carry on working and as soon as",
    "start": "1008420",
    "end": "1013920"
  },
  {
    "text": "it does fill up by default it'll block until there's space on the channel or there are kind of other mechanisms that",
    "start": "1013920",
    "end": "1020430"
  },
  {
    "text": "allow you to have a different case if the troubles form and that's quite cool",
    "start": "1020430",
    "end": "1025860"
  },
  {
    "text": "because it means like actually so I think if anyone's use the acute",
    "start": "1025860",
    "end": "1031168"
  },
  {
    "text": "echnology call desk you know okay so nsq is like a quite high throughput",
    "start": "1031169",
    "end": "1037110"
  },
  {
    "text": "messaging system by default on a topic it has 10,000 messages in memory and",
    "start": "1037110",
    "end": "1042270"
  },
  {
    "text": "then once that succeeded it puts the restaurant disk and that's how it's using a kernel so it has a buffered",
    "start": "1042270",
    "end": "1048329"
  },
  {
    "text": "channel with 10,000 slots and as soon as that's film it starts writing messages to disk instead and that's quite cool",
    "start": "1048329",
    "end": "1055440"
  },
  {
    "text": "because that's like about this much code like literally three or four lines and that functionality is just super simple",
    "start": "1055440",
    "end": "1062880"
  },
  {
    "text": "to write so the other thing channels allow us to do kind of different patterns so this will be like a Fanning in pattern where",
    "start": "1062880",
    "end": "1068870"
  },
  {
    "text": "you might have lots of different workers generating things that then a single worker that perhaps has coordination can",
    "start": "1068870",
    "end": "1075290"
  },
  {
    "text": "then use the results about weekly if you have something is generating loads of work you can have multiple workers which",
    "start": "1075290",
    "end": "1081560"
  },
  {
    "text": "again pulling messages off this channel and you can then scale these things independently within the process of your",
    "start": "1081560",
    "end": "1087170"
  },
  {
    "text": "service so the other cool thing for us to go is that the language is South is extremely",
    "start": "1087170",
    "end": "1093290"
  },
  {
    "text": "simple so if anyone first started using it you can go on the goaline websites there's like a 70 step kind of tutorials",
    "start": "1093290",
    "end": "1101480"
  },
  {
    "text": "in the browser that starts off like really really simple and then it will take you through life and concurrency",
    "start": "1101480",
    "end": "1107600"
  },
  {
    "text": "patterns some pretty cool like maths puzzles and the the language itself is",
    "start": "1107600",
    "end": "1113630"
  },
  {
    "text": "like really really small and the thing I like about that is in the case of like",
    "start": "1113630",
    "end": "1119300"
  },
  {
    "text": "most other programming languages I've worked in there's like a million different ways you can solve a problem and I kind of this is probably entirely",
    "start": "1119300",
    "end": "1128330"
  },
  {
    "text": "my fault but I I find I spend like some amount of time working on the actual problem and then the other respite I am",
    "start": "1128330",
    "end": "1135290"
  },
  {
    "text": "trying to make the code more idiomatic because I think that's what it should be like I mean though I just don't really",
    "start": "1135290",
    "end": "1141140"
  },
  {
    "text": "have a choice like there's kind of the language itself is extremely small the syntax is very very simple so it's kind",
    "start": "1141140",
    "end": "1148040"
  },
  {
    "text": "of almost a natural way to to solve a lot of problems on top of that when you",
    "start": "1148040",
    "end": "1153650"
  },
  {
    "text": "build the go programming you get a single executable binary so if you are",
    "start": "1153650",
    "end": "1159290"
  },
  {
    "text": "shipping a huge number of different applications you don't have to ship around like an entire source tree kind",
    "start": "1159290",
    "end": "1164840"
  },
  {
    "text": "of runtime and make sure the runtimes installed on those servers and all of",
    "start": "1164840",
    "end": "1169850"
  },
  {
    "text": "that kind of stuff you get a single binary which you can just run now a lot of those problems are kind of taken care",
    "start": "1169850",
    "end": "1175040"
  },
  {
    "text": "of by running all your applications in docker containers which hopefully everyone is but in the case of go",
    "start": "1175040",
    "end": "1182660"
  },
  {
    "text": "programs you actually don't really need to do that because you don't need a runtime the runtime is built into the binary as long as you compile it for the",
    "start": "1182660",
    "end": "1188510"
  },
  {
    "text": "right architecture your kind of problems and that means like if you did right you're like compile your program your",
    "start": "1188510",
    "end": "1194690"
  },
  {
    "text": "deployment is pretty much compile put in s3 hope s3 is working this week and then",
    "start": "1194690",
    "end": "1199940"
  },
  {
    "text": "put your for your binary on your server and run it and that's literally it on top of that the standard library has",
    "start": "1199940",
    "end": "1208070"
  },
  {
    "text": "huge amounts of functionality so although the language itself is really small the standard library provides",
    "start": "1208070",
    "end": "1213410"
  },
  {
    "text": "everything you can spin a HTTP server in like three lines of code that will automatically upgrade towards HTTP 2",
    "start": "1213410",
    "end": "1220190"
  },
  {
    "text": "since go 1.7 March it's kind of just done and all of those things kind of",
    "start": "1220190",
    "end": "1227150"
  },
  {
    "text": "have extremely sensible defaults you don't really need to fiddle with but if you want to kind of customize the dial",
    "start": "1227150",
    "end": "1234710"
  },
  {
    "text": "or timeouts on your HTTP clients you can do all the back yourself bundling so for",
    "start": "1234710",
    "end": "1240260"
  },
  {
    "text": "us like having that simplicity is really important because as we've been building",
    "start": "1240260",
    "end": "1246290"
  },
  {
    "text": "our services and our infrastructure over the last two years things have got progressively more complicated which",
    "start": "1246290",
    "end": "1251660"
  },
  {
    "text": "obviously is kind of the inevitability of building a large application so I",
    "start": "1251660",
    "end": "1257060"
  },
  {
    "text": "mentioned before we we have Micro Service architecture in February we had",
    "start": "1257060",
    "end": "1262310"
  },
  {
    "text": "no services obviously and then progressively over time we're up to like",
    "start": "1262310",
    "end": "1267650"
  },
  {
    "text": "a hundred ninety something now and each of these is a discrete go binary single",
    "start": "1267650",
    "end": "1273980"
  },
  {
    "text": "process that can communicate over HTTP to any of the other services so if",
    "start": "1273980",
    "end": "1279530"
  },
  {
    "text": "you're kind of starting with this there is actually a few kind of tools you can use are those go kits which don't if",
    "start": "1279530",
    "end": "1286400"
  },
  {
    "text": "anyone's heard of which provides you a kind of toolkit pretty much like a framework that allows you to build",
    "start": "1286400",
    "end": "1292300"
  },
  {
    "text": "simple services but then plug in the more complicated things you need for kind of distributed systems things like",
    "start": "1292300",
    "end": "1298160"
  },
  {
    "text": "tracing logging like all of those things to kind of instrument how your code is working there's also micro which is",
    "start": "1298160",
    "end": "1307100"
  },
  {
    "text": "again micro service toolkit this one comes like more fully featured by default and then you can switch things",
    "start": "1307100",
    "end": "1313070"
  },
  {
    "text": "out if you don't really like the way that they work in our case these unfortunately didn't exist when we",
    "start": "1313070",
    "end": "1318170"
  },
  {
    "text": "started building on restrictive so we have a really simple kind of library called Tyson and that's",
    "start": "1318170",
    "end": "1325440"
  },
  {
    "text": "on github and all that is is it allows us to build really simple HTTP service and clients that are kind of",
    "start": "1325440",
    "end": "1331139"
  },
  {
    "text": "pre-configured in the kind of way that we use them so if we have a kind of",
    "start": "1331139",
    "end": "1338250"
  },
  {
    "text": "service talking to another service a lot of this happens in orange structure these are communicating over some form",
    "start": "1338250",
    "end": "1345360"
  },
  {
    "text": "of transport now in some cases that might be a message bus you might be",
    "start": "1345360",
    "end": "1350519"
  },
  {
    "text": "using something RabbitMQ zero and cue something like that however that works you're going to realistically be",
    "start": "1350519",
    "end": "1357240"
  },
  {
    "text": "communicating to more than one copy of every service and hopefully doing that because any one of these could fail at",
    "start": "1357240",
    "end": "1364139"
  },
  {
    "text": "any point especially if you're running on kind of cloud infrastructure that's kind of a good thing they have fails",
    "start": "1364139",
    "end": "1370700"
  },
  {
    "text": "networks are unreliable and basically by kind of knowing that and building an",
    "start": "1370700",
    "end": "1376230"
  },
  {
    "text": "intro application you can make your applications much stronger as a result so in our case we have a client server",
    "start": "1376230",
    "end": "1382590"
  },
  {
    "text": "library this is that Titans package that we use and we're actually communicating which you just with HTTP but the problem",
    "start": "1382590",
    "end": "1390779"
  },
  {
    "text": "you have is like when you're building a micro service architecture you need to build a huge number of things into these",
    "start": "1390779",
    "end": "1396450"
  },
  {
    "text": "clients and servers to make it was reliable stuff like so discovering load",
    "start": "1396450",
    "end": "1402539"
  },
  {
    "text": "balancing timeouts rate limiting surfer braking failure detection like things are extremely unreliable",
    "start": "1402539",
    "end": "1407909"
  },
  {
    "text": "I think break all the time and if you're building up I mean unfortunately that's not really an option like your",
    "start": "1407909",
    "end": "1413159"
  },
  {
    "text": "applications have to be very very resilient ideally they would be quite quick but I did like even more ideally",
    "start": "1413159",
    "end": "1419909"
  },
  {
    "text": "requests will succeed within a kind of branded amount of time so in our",
    "start": "1419909",
    "end": "1425789"
  },
  {
    "text": "infrastructure we kind of big question mark here we can either build all of these things ourselves automatically",
    "start": "1425789",
    "end": "1431250"
  },
  {
    "text": "into our virtual services or there are a number of tools that you can use in",
    "start": "1431250",
    "end": "1436379"
  },
  {
    "text": "between these which kind of take away a lot of that complexity and that's actually what we want we want to make",
    "start": "1436379",
    "end": "1441690"
  },
  {
    "text": "our services as small as possible which means we can just write smaller HTTP servers that live here and our",
    "start": "1441690",
    "end": "1449700"
  },
  {
    "text": "application development has been super fast and super quick so in our case we use linka d the know",
    "start": "1449700",
    "end": "1455560"
  },
  {
    "text": "if anyone's heard of that so it's basically if anyone's used integral which is Skyler Connor library that came",
    "start": "1455560",
    "end": "1463000"
  },
  {
    "text": "out of Twitter that provides they're like RPC between processes linker D wraps that up in like a sidecar process",
    "start": "1463000",
    "end": "1469570"
  },
  {
    "text": "you put one on a host and allows you to kind of does all of that stuff without you really dealing enough and it's very",
    "start": "1469570",
    "end": "1477700"
  },
  {
    "text": "configurable and in our case we use Cuban Artie's so this is plugged into Cuban attitudes as well so it knows",
    "start": "1477700",
    "end": "1482770"
  },
  {
    "text": "where all of our services are and I'll come back a little bit so in our",
    "start": "1482770",
    "end": "1488350"
  },
  {
    "text": "infrastructure we have an load balancer at the top we run on Amazon so just nail B and behind that we have a kind of go",
    "start": "1488350",
    "end": "1495160"
  },
  {
    "text": "based HTTP layer which is going to take in HTTP requests and decide where they're going to go and route them",
    "start": "1495160",
    "end": "1500680"
  },
  {
    "text": "within our in structure we then route that off to what we call an api service",
    "start": "1500680",
    "end": "1505870"
  },
  {
    "text": "so this is again just a small go server which is this thing on on a port in a",
    "start": "1505870",
    "end": "1512140"
  },
  {
    "text": "container infinities and it takes in requests and then probably onion juice",
    "start": "1512140",
    "end": "1517360"
  },
  {
    "text": "on Marshalls room doesn't staff returns some kind of response yeah kind of like",
    "start": "1517360",
    "end": "1523930"
  },
  {
    "text": "I think 90% of what we do and probably what everybody does is basically",
    "start": "1523930",
    "end": "1529000"
  },
  {
    "text": "Marshall JSON into a database and then back out to the database and that's kind",
    "start": "1529000",
    "end": "1534490"
  },
  {
    "text": "of what happens here so a song and then in our case what we don't want to do is",
    "start": "1534490",
    "end": "1541510"
  },
  {
    "text": "change this routing layer at the top every time we have functionality to application we want this to like be the",
    "start": "1541510",
    "end": "1546580"
  },
  {
    "text": "most stable possible thing that can deal with potential failure further down our infrastructure so instead we deploy",
    "start": "1546580",
    "end": "1555250"
  },
  {
    "text": "individual API services and we route them based on name so in our case we",
    "start": "1555250",
    "end": "1560680"
  },
  {
    "text": "have an API if you've signed up for a multi card and a have an account you can",
    "start": "1560680",
    "end": "1566860"
  },
  {
    "text": "literally go to the kind of API Doc's there's a developer portal I put them on your handler but you can go to this you",
    "start": "1566860",
    "end": "1575380"
  },
  {
    "text": "can get full access to your data as you spend it as you use your card all around the world and in this case I'm using a",
    "start": "1575380",
    "end": "1583090"
  },
  {
    "text": "web hook so I can register a new web hook which will real swing callbacks to a NASA I thought",
    "start": "1583090",
    "end": "1589049"
  },
  {
    "text": "as a third-party app so while I use my card until or in a shop somewhere you'll",
    "start": "1589049",
    "end": "1595740"
  },
  {
    "text": "actually receive a HTTP call realistically before the receipt has printed alpha machine so this is",
    "start": "1595740",
    "end": "1603179"
  },
  {
    "text": "literally slash web hooks on our API now if we want to add lots of extra stuff to",
    "start": "1603179",
    "end": "1608220"
  },
  {
    "text": "our API we don't change our routing there so what we can do is we route this web hooks thing to a service which is",
    "start": "1608220",
    "end": "1614820"
  },
  {
    "text": "just a go binary and that will deal with web hooks for us and if you want to add",
    "start": "1614820",
    "end": "1620160"
  },
  {
    "text": "a new thing which is like I don't know slash ponies and we have like a highly",
    "start": "1620160",
    "end": "1625320"
  },
  {
    "text": "available Pony based API we just deploy new service and our API will see it's",
    "start": "1625320",
    "end": "1631950"
  },
  {
    "text": "they're using service discovery and then it will stop forward for in those requests people route them through to the correct application so in our case",
    "start": "1631950",
    "end": "1639030"
  },
  {
    "text": "this is the web hook API and then behind out this will do some kind of business logic realistically it's going to like",
    "start": "1639030",
    "end": "1645179"
  },
  {
    "text": "check your actually a valid user and then register or D register or web hook",
    "start": "1645179",
    "end": "1651210"
  },
  {
    "text": "for you and dual validation and these services can do anything they want again they're just standard HTTP servers and",
    "start": "1651210",
    "end": "1660510"
  },
  {
    "text": "behind this they're then using a database or some kind of external provider or anything like that so in our",
    "start": "1660510",
    "end": "1667470"
  },
  {
    "text": "case we one of the kind of really cool functionality and go is you can just appoint really really basic interfaces",
    "start": "1667470",
    "end": "1674250"
  },
  {
    "text": "for kind of any data type really so in our case we define any of these",
    "start": "1674250",
    "end": "1680520"
  },
  {
    "text": "functions like essentially HTTP comers to literally just be a type of service which is a function that takes requests",
    "start": "1680520",
    "end": "1687780"
  },
  {
    "text": "and returns a response and that's all it does so I can do anything I want as an application developer I don't need to",
    "start": "1687780",
    "end": "1692970"
  },
  {
    "text": "like kind of think of like them do anything really complicated I literally just register a thing that takes",
    "start": "1692970",
    "end": "1699540"
  },
  {
    "text": "standardized request type does anything and then returns a response type and",
    "start": "1699540",
    "end": "1704820"
  },
  {
    "text": "then when we're doing and registering these in our go service we can just register like get slash will be to list",
    "start": "1704820",
    "end": "1712770"
  },
  {
    "text": "them post will be register new one and delete with an ID would be register one and this is just using those",
    "start": "1712770",
    "end": "1719059"
  },
  {
    "text": "there's quite a few different like routing libraries for go you can use my key to gorilla or like gorilla marks a",
    "start": "1719059",
    "end": "1725870"
  },
  {
    "text": "couple different ones but as an application developer I can create a new",
    "start": "1725870",
    "end": "1731299"
  },
  {
    "text": "service like with a single single commands I can then write a couple of handlers which are just simple functions",
    "start": "1731299",
    "end": "1736700"
  },
  {
    "text": "I can't violet push it through CI and deploy it realistically within IBM for",
    "start": "1736700",
    "end": "1743330"
  },
  {
    "text": "the super super critical making half an hour probably less and that's incredibly",
    "start": "1743330",
    "end": "1749690"
  },
  {
    "text": "liberating if if you're an application developer you don't have to you've gone through like all the kind of the checks",
    "start": "1749690",
    "end": "1755570"
  },
  {
    "text": "and balances we obviously have code review and we're asserting everything in",
    "start": "1755570",
    "end": "1760700"
  },
  {
    "text": "our normal infrastructure works even after the addition of my new new code but being able to do that extremely",
    "start": "1760700",
    "end": "1767090"
  },
  {
    "text": "quickly is like what that's kind of our advantage",
    "start": "1767090",
    "end": "1772309"
  },
  {
    "text": "like our competition is huge the the vias that banks that spend billions by like billions of pounds on i.t every",
    "start": "1772309",
    "end": "1779929"
  },
  {
    "text": "year and the only real thing that we have going for us is like speed like we",
    "start": "1779929",
    "end": "1785840"
  },
  {
    "text": "can execute really quickly and that's what we need to be able to do in order to commit stay ahead and provide a really good experience to customers and",
    "start": "1785840",
    "end": "1792049"
  },
  {
    "text": "so be able to do stuff really quickly is super important the other point is making our system really reliable and if",
    "start": "1792049",
    "end": "1800240"
  },
  {
    "text": "anyone has built micro service architectures and send lots of lots of",
    "start": "1800240",
    "end": "1805580"
  },
  {
    "text": "calls over the network that's generally not very reliable so we have a bit of",
    "start": "1805580",
    "end": "1812600"
  },
  {
    "text": "kind of a trade-off here now in our case I mentioned earlier we use document",
    "start": "1812600",
    "end": "1818629"
  },
  {
    "text": "abilities so we build all of our individual services into a docker container cool thing with go binaries is",
    "start": "1818629",
    "end": "1824629"
  },
  {
    "text": "because you don't have a runtime your containers are literally the size of binary you can use a scratch detailer",
    "start": "1824629",
    "end": "1830240"
  },
  {
    "text": "that also means you don't even have a shell in your container so if hopefully this never happens but",
    "start": "1830240",
    "end": "1837559"
  },
  {
    "text": "if there is some kind of like breakout or escape vulnerability you kind of break out into a potato that of another",
    "start": "1837559",
    "end": "1843230"
  },
  {
    "text": "shell which is largely infuriating and",
    "start": "1843230",
    "end": "1848590"
  },
  {
    "text": "the other thing is then they're really clean so we can ship these around in if it is you run them in pods you can",
    "start": "1848590",
    "end": "1855359"
  },
  {
    "text": "still do like all the kind of if you need to like chapter a TCP dump HTTP",
    "start": "1855359",
    "end": "1860940"
  },
  {
    "text": "server but you don't have a shell in the container then that's fine because include niceties you have a shared",
    "start": "1860940",
    "end": "1866759"
  },
  {
    "text": "network name space within pods so you can run like a special TCP dump container in the pod and you can like",
    "start": "1866759",
    "end": "1873119"
  },
  {
    "text": "TCP dump the interface that your actual services using which is quite cool and in our case we switch to kubernetes",
    "start": "1873119",
    "end": "1881460"
  },
  {
    "text": "actually from methane's a little while back in August last year",
    "start": "1881460",
    "end": "1886580"
  },
  {
    "text": "and this is kind of our previous infrastructure which was starting to get quite expensive and we switched over to",
    "start": "1886580",
    "end": "1892739"
  },
  {
    "text": "communities and that's worked out about a third of the cost of our previous infrastructure and that's mainly because",
    "start": "1892739",
    "end": "1897899"
  },
  {
    "text": "we can condense things a lot more densely but we still have things like pod auto scaling so our individual",
    "start": "1897899",
    "end": "1903899"
  },
  {
    "text": "services can scale within the constraints of our main infrastructure",
    "start": "1903899",
    "end": "1909049"
  },
  {
    "text": "so to go back to my previous example if I'm registering web hooks and I want",
    "start": "1909049",
    "end": "1915389"
  },
  {
    "text": "really reliable web server web hooks then we're going to run a number of",
    "start": "1915389",
    "end": "1921059"
  },
  {
    "text": "number copies of these services so this is just again a pod in communities we're running many copies of that and let's",
    "start": "1921059",
    "end": "1927960"
  },
  {
    "text": "say that this one fails and then all requests going to this or failing if it actually vanishes or like the host",
    "start": "1927960",
    "end": "1934469"
  },
  {
    "text": "machine vanishes then cube Ulysses will deal with that and it will spin up a new pod for us and then that will kind of",
    "start": "1934469",
    "end": "1940889"
  },
  {
    "text": "propagate through service discovery our services will find out work where it is and requests will go through time the",
    "start": "1940889",
    "end": "1947609"
  },
  {
    "text": "other case is we might have that one's dead got a new one this one is particularly slow in which case the",
    "start": "1947609",
    "end": "1954330"
  },
  {
    "text": "other thing we need to make our system more reliable is going to be some kind of either circuit braking or ideally",
    "start": "1954330",
    "end": "1960749"
  },
  {
    "text": "kind of a load balancing and the client to design which instances are best suited to serving our individual",
    "start": "1960749",
    "end": "1966570"
  },
  {
    "text": "requests in our case link addy does that it has a power of two choices",
    "start": "1966570",
    "end": "1972269"
  },
  {
    "text": "exponentially weighted moving average load balancer which who knows what that does but it's like super great and the",
    "start": "1972269",
    "end": "1979529"
  },
  {
    "text": "main thing is doing is checking that like these two a faster that one's slower here and some cases that might be",
    "start": "1979529",
    "end": "1985430"
  },
  {
    "text": "routing a request on a single host and there might be a copy of the kind of receiving service on the same host and",
    "start": "1985430",
    "end": "1992330"
  },
  {
    "text": "that might not be the fastest one so it will send it across the network to a different machine and that will just happen automatically so if you're",
    "start": "1992330",
    "end": "2000310"
  },
  {
    "text": "building again like distributed infrastructure like distributed architectures you have to be aware of these problems and you need to be able",
    "start": "2000310",
    "end": "2008020"
  },
  {
    "text": "to either have things that will retry if the random Potence or like deal with the fact that some",
    "start": "2008020",
    "end": "2013660"
  },
  {
    "text": "services are going to be slower than others especially if you're kind of running in cloud infrastructure where",
    "start": "2013660",
    "end": "2019240"
  },
  {
    "text": "you might have one of those that is officially the same but much much slower because it's more heavily loaded the",
    "start": "2019240",
    "end": "2027220"
  },
  {
    "text": "other thing we do is we try and push it as much stuff I'm going to be a decoupled as possible by moving it to",
    "start": "2027220",
    "end": "2034900"
  },
  {
    "text": "being a event based event-driven architecture and this means we can do",
    "start": "2034900",
    "end": "2041440"
  },
  {
    "text": "things like if something is down if a system is down and it's not of critical",
    "start": "2041440",
    "end": "2047200"
  },
  {
    "text": "importance we can buffer messages and deal with later we can process things asynchronously that don't need immediate",
    "start": "2047200",
    "end": "2053919"
  },
  {
    "text": "responses and all of these things mean that we can filter them within a reasonable amount of time but that we",
    "start": "2053920",
    "end": "2059710"
  },
  {
    "text": "can provide a better more reliable experience to customers so actually in the case of so similar kind of thing",
    "start": "2059710",
    "end": "2066370"
  },
  {
    "text": "we'll have some synchronous call that comes to our API - again just another go",
    "start": "2066370",
    "end": "2071379"
  },
  {
    "text": "service we're going to read that through maybe it does cause to these two services and as a result of some kind of",
    "start": "2071380",
    "end": "2078100"
  },
  {
    "text": "action in kind of in rem structure will generate an event that this has happened and published a little message wails so",
    "start": "2078100",
    "end": "2085510"
  },
  {
    "text": "let's say this was creating a transaction that's obviously going to go into someone's like an app online light",
    "start": "2085510",
    "end": "2091480"
  },
  {
    "text": "break statement pretty much so we can publish that this transaction has been created and then any number of things",
    "start": "2091480",
    "end": "2098670"
  },
  {
    "text": "downstream of that can consume that and this is completely decoupled from the",
    "start": "2098670",
    "end": "2103990"
  },
  {
    "text": "consumers so anyone we can build any new functionality and deploy that again",
    "start": "2103990",
    "end": "2110320"
  },
  {
    "text": "internally separate of our core transaction flow which obviously needs to be super reliable",
    "start": "2110320",
    "end": "2116220"
  },
  {
    "text": "however the problem we have here is any number of things could be happening here",
    "start": "2116390",
    "end": "2121650"
  },
  {
    "text": "and if you have a system that has hundreds of microservices and you've",
    "start": "2121650",
    "end": "2126870"
  },
  {
    "text": "decoupled consumers and producers you probably have no idea what's going on like I have no idea how our",
    "start": "2126870",
    "end": "2134550"
  },
  {
    "text": "infrastructure works I know how some sections of it work but we have lots and lots of developers and that will go grow",
    "start": "2134550",
    "end": "2141360"
  },
  {
    "text": "infinitely more complicated over 20 and we need to be able to test them and we make sure that our synchronous and kind",
    "start": "2141360",
    "end": "2147960"
  },
  {
    "text": "of cost reduction flows extremely reliable but fundamentally the flip side is we need to be able to empower",
    "start": "2147960",
    "end": "2153480"
  },
  {
    "text": "developers to build stuff really really quickly and decoupling this kind of makes that much easier so in order to",
    "start": "2153480",
    "end": "2160710"
  },
  {
    "text": "like understand how I'm structure works we need to kind of trace things through through that now go provides kind of a",
    "start": "2160710",
    "end": "2168240"
  },
  {
    "text": "way of doing this with contexts so go 1.7 actually pull this into the main standard library but it for a given kind",
    "start": "2168240",
    "end": "2176850"
  },
  {
    "text": "of request path we need to understand how this is flowing through our infrastructure and in the case of",
    "start": "2176850",
    "end": "2183540"
  },
  {
    "text": "something coming into our API going to one of our API services doing some JSON stuff and then hitting something that",
    "start": "2183540",
    "end": "2190290"
  },
  {
    "text": "actually does real work at the top of our API we can tag something with a",
    "start": "2190290",
    "end": "2197670"
  },
  {
    "text": "unique reference kind of request ID if",
    "start": "2197670",
    "end": "2202860"
  },
  {
    "text": "anyone's use kind of trading systems like Zipkin basically something like that we pass that then down our request",
    "start": "2202860",
    "end": "2209340"
  },
  {
    "text": "tree so will at this point generate the ID Marceline's the headers send it over the",
    "start": "2209340",
    "end": "2216030"
  },
  {
    "text": "wire unmarshal it pass it through every function call in this context object when it comes over at this point marshal",
    "start": "2216030",
    "end": "2222780"
  },
  {
    "text": "it back onto the wire send it down and that means even though these are between running on different machines we can",
    "start": "2222780",
    "end": "2228780"
  },
  {
    "text": "still tie together different different requests across different services so",
    "start": "2228780",
    "end": "2233820"
  },
  {
    "text": "and go you can use this context there's kind of contact interface so you can actually build this into any of your own",
    "start": "2233820",
    "end": "2241350"
  },
  {
    "text": "custom types so now our request type implements the context interface which",
    "start": "2241350",
    "end": "2246810"
  },
  {
    "text": "does lots of stuff which don't really care but the cool part is this so you can stick any key value into this object",
    "start": "2246810",
    "end": "2254250"
  },
  {
    "text": "it's immutable so every time you modify it it actually copies itself internally",
    "start": "2254250",
    "end": "2259390"
  },
  {
    "text": "which means it's thread-safe and you don't have to worry about that as you pass it around so a kind of a",
    "start": "2259390",
    "end": "2265510"
  },
  {
    "text": "common pattern that you see in go is for a lot of functions to have the first function argument as a context you pass",
    "start": "2265510",
    "end": "2272710"
  },
  {
    "text": "in this context object and that means that then any further callers have access to potentially any keys and",
    "start": "2272710",
    "end": "2279730"
  },
  {
    "text": "values so you kind of define like request ID something like a well-known key and then you can try and pull that",
    "start": "2279730",
    "end": "2285640"
  },
  {
    "text": "out and if it's there you could log out and if it's not peyo so obviously the reason you need this is",
    "start": "2285640",
    "end": "2292840"
  },
  {
    "text": "because go doesn't read local variables so pros and cons but that's because",
    "start": "2292840",
    "end": "2298570"
  },
  {
    "text": "we're running in co-routines rather than the threads so assuming that we have a",
    "start": "2298570",
    "end": "2303609"
  },
  {
    "text": "request ID available all the way down we can then at each one of these points",
    "start": "2303609",
    "end": "2309340"
  },
  {
    "text": "kind of instrument various kind of piece of information like the time that we",
    "start": "2309340",
    "end": "2315160"
  },
  {
    "text": "receive the request sent sent on receiver response sent it back obviously",
    "start": "2315160",
    "end": "2320770"
  },
  {
    "text": "we can only correlate times on individual nodes because of clock skew but we can then try those together",
    "start": "2320770",
    "end": "2326830"
  },
  {
    "text": "because we know that that send happened before this receive so our our system",
    "start": "2326830",
    "end": "2332710"
  },
  {
    "text": "can kind of correlate them and in our case we aggregate all this together so you could use something like system for",
    "start": "2332710",
    "end": "2339280"
  },
  {
    "text": "this and you get a huge block of data that's completely unintelligible and",
    "start": "2339280",
    "end": "2345160"
  },
  {
    "text": "obviously humans are not meant to read stuff like this but giving you've done",
    "start": "2345160",
    "end": "2353230"
  },
  {
    "text": "that you can then kind of reconstruct that into some kind of core graph and",
    "start": "2353230",
    "end": "2359560"
  },
  {
    "text": "this is calling across lots of different services so each one of these is again a different go binary we've got HTTP",
    "start": "2359560",
    "end": "2365589"
  },
  {
    "text": "server hits to be clients all the way down again really straightforward kind of simple standard library stuff and",
    "start": "2365589",
    "end": "2373720"
  },
  {
    "text": "what we're actually modeling here is this first section is a synchronous call for using a comment",
    "start": "2373720",
    "end": "2381430"
  },
  {
    "text": "so if you have a card which well maybe I do you make the don'ts I don't okay",
    "start": "2381430",
    "end": "2389290"
  },
  {
    "text": "and if you've got to cut your debit card and then you stick it in a machine or use con telus at some point we're going",
    "start": "2389290",
    "end": "2396160"
  },
  {
    "text": "to receive some form of HTTP or from that at the moment we receive them over HTTP as soap and we pretend to be a soap",
    "start": "2396160",
    "end": "2403570"
  },
  {
    "text": "server and unfortunately that's the way that the banking world works",
    "start": "2403570",
    "end": "2409390"
  },
  {
    "text": "if you connect directly to payment schemes realistically or be doing like really low-level socket stuff quite",
    "start": "2409390",
    "end": "2416260"
  },
  {
    "text": "often you have to use like EDC Dec encoding because ASCII is like way too modern and the result of that is some",
    "start": "2416260",
    "end": "2426010"
  },
  {
    "text": "kind of payment instructions from a card machine we then have to do a few things and so we need to look at the cards we",
    "start": "2426010",
    "end": "2432460"
  },
  {
    "text": "need to make sure it's not like blocked completely I need to make sure you've not frozen it",
    "start": "2432460",
    "end": "2438580"
  },
  {
    "text": "we then obviously a transactions I've taken parents do all these kind of things but then there's a lot of other",
    "start": "2438580",
    "end": "2445780"
  },
  {
    "text": "things we do in the app which we don't need to do right at that point so in the ones around when you use your card we",
    "start": "2445780",
    "end": "2452020"
  },
  {
    "text": "display like the merchants logo we display like a really nice name we kind of show you on a map where the merchant",
    "start": "2452020",
    "end": "2457060"
  },
  {
    "text": "was we don't need to do any of that right now because that's kind of irrelevant for your card working in the",
    "start": "2457060",
    "end": "2462940"
  },
  {
    "text": "shop and I'd prefer my card to work in the shop and get a pretty map so this",
    "start": "2462940",
    "end": "2468070"
  },
  {
    "text": "point we can respond back to our payment provider and we can all about",
    "start": "2468070",
    "end": "2473920"
  },
  {
    "text": "synchronously but during that will publish a message that says this transaction was created with some kind",
    "start": "2473920",
    "end": "2481990"
  },
  {
    "text": "of basic amount of information and further down from that we do this like transaction enrichment step where we'll",
    "start": "2481990",
    "end": "2487690"
  },
  {
    "text": "kind of correlate it to a merchant will like look up the merchant details try",
    "start": "2487690",
    "end": "2492910"
  },
  {
    "text": "and kind of work out where that is do all that kind of stuff and then at that point we'll insert it will actually kind",
    "start": "2492910",
    "end": "2499360"
  },
  {
    "text": "of fire in other events and then at that point we'll insert it into the feed in the app so the interesting part is",
    "start": "2499360",
    "end": "2505870"
  },
  {
    "text": "actually if all of this was broken you're kind of work but it wouldn't appear in your app but that's kind of",
    "start": "2505870",
    "end": "2512890"
  },
  {
    "text": "okay because you can't worked and it some point in the next like couple of seconds hopefully they'll appear in your",
    "start": "2512890",
    "end": "2520089"
  },
  {
    "text": "app or your app will be out of date for a little while but in the real world like is going to be a shorter at a time",
    "start": "2520089",
    "end": "2525220"
  },
  {
    "text": "worst case scenario we're down to ours but your card still works and we still",
    "start": "2525220",
    "end": "2530500"
  },
  {
    "text": "have the right balance but just your apps kind of it out of date which like realistically is like a good way of",
    "start": "2530500",
    "end": "2536260"
  },
  {
    "text": "making our systems a lot more reliable and then after this we push send your push notifications and the cool thing is",
    "start": "2536260",
    "end": "2542710"
  },
  {
    "text": "although this looks really complicated you get a push notification disappears in your app usually before the receipt",
    "start": "2542710",
    "end": "2548920"
  },
  {
    "text": "has printed on the machine because computers are really fast and like 20",
    "start": "2548920",
    "end": "2554020"
  },
  {
    "text": "networks are very slow and here we have a coffee cup emoji because it's at",
    "start": "2554020",
    "end": "2561099"
  },
  {
    "text": "Starbucks so we know it's a coffee so he gave you a coffee cup of and people love this like this is like our best feature",
    "start": "2561099",
    "end": "2568559"
  },
  {
    "text": "if you buy stuff at it so you get sushi emoji like truth or II and we we do all",
    "start": "2568559",
    "end": "2576160"
  },
  {
    "text": "of this like before the receipt comes out of the machine because again like computers are quite fast you can do",
    "start": "2576160",
    "end": "2582549"
  },
  {
    "text": "stuff like this really quickly tastes like 200 milliseconds and yeah that's pretty straightforward and so",
    "start": "2582549",
    "end": "2588880"
  },
  {
    "text": "this is of course like a massive line this is actually what happens and actually that was a couple months ago I",
    "start": "2588880",
    "end": "2594520"
  },
  {
    "text": "have no idea what some of this stuff is but things like if you have budgeting",
    "start": "2594520",
    "end": "2599589"
  },
  {
    "text": "enabled will will check your budgets will life see if you are above or below target will send you like kind of praise",
    "start": "2599589",
    "end": "2605740"
  },
  {
    "text": "if you are something like that we'll look up new merchants we like get all of that information and all of that stuff",
    "start": "2605740",
    "end": "2612099"
  },
  {
    "text": "happens before you get a push notification because like if you're doing spending analysis like the push",
    "start": "2612099",
    "end": "2617770"
  },
  {
    "text": "privation contains that information so you did before but even if all that's broken your cards there works in a job",
    "start": "2617770",
    "end": "2623920"
  },
  {
    "text": "so it's all good so in our case we've kind of started",
    "start": "2623920",
    "end": "2630700"
  },
  {
    "text": "using go 99% of our services are in go",
    "start": "2630700",
    "end": "2635950"
  },
  {
    "text": "we've got one or two the arms because we run everything as really basic HTTP",
    "start": "2635950",
    "end": "2642130"
  },
  {
    "text": "servers in cuba Nettie's and we have like our service discovery is separate from",
    "start": "2642130",
    "end": "2647210"
  },
  {
    "text": "actual business logic we can write stuff in like a Python if things like kind of",
    "start": "2647210",
    "end": "2652730"
  },
  {
    "text": "machine learning data analysis that kind of stuff that's way more suited to that if we're dealing with IBM MQ then don't",
    "start": "2652730",
    "end": "2660920"
  },
  {
    "text": "use the go laboring for that there's like really good Java libraries so like use scholar or Java for that particular thing but in our case like goes being",
    "start": "2660920",
    "end": "2669380"
  },
  {
    "text": "kind of perfect for for like that kind of micro service architecture it's",
    "start": "2669380",
    "end": "2675020"
  },
  {
    "text": "allowed us to build stuff really quickly the kind of concurrency and like kind of",
    "start": "2675020",
    "end": "2681770"
  },
  {
    "text": "features it provides a language really like looks into the language let us build highly performant very scalable",
    "start": "2681770",
    "end": "2690020"
  },
  {
    "text": "very lightweight services and build them really really quickly and the language",
    "start": "2690020",
    "end": "2696770"
  },
  {
    "text": "itself is like really small and simple and easy and that's meant if we're onboarding engineers like even if you've",
    "start": "2696770",
    "end": "2703430"
  },
  {
    "text": "used the language before when you start another company like inevitably there is like some wonderful homegrown framework",
    "start": "2703430",
    "end": "2709220"
  },
  {
    "text": "that you have to learn and it's kind of like it never table and in our case like sure there is some of that but it's so",
    "start": "2709220",
    "end": "2716300"
  },
  {
    "text": "simple that like even though you're learning a new language potentially and you're learning potentially new",
    "start": "2716300",
    "end": "2721940"
  },
  {
    "text": "framework like people are productive within like a couple of days and a deploying to production within a few",
    "start": "2721940",
    "end": "2727070"
  },
  {
    "text": "days or usually a double day or so yeah and so that's about it thank you very",
    "start": "2727070",
    "end": "2734930"
  },
  {
    "text": "much everyone [Applause]",
    "start": "2734930",
    "end": "2745390"
  },
  {
    "text": "yes so if anyone's got questions if the question is do you have mondo cars the",
    "start": "2745390",
    "end": "2750440"
  },
  {
    "text": "answer is yes cool",
    "start": "2750440",
    "end": "2754930"
  },
  {
    "text": "so the question is once we have the banking license will we do credit facilities yeah so we apprentice or for overdrafts and",
    "start": "2758660",
    "end": "2764390"
  },
  {
    "text": "but we won't initially be doing like things like loans or contracts by our aim is to like build the best possible",
    "start": "2764390",
    "end": "2770239"
  },
  {
    "text": "current account and like really like mail back oh yeah over just is part",
    "start": "2770239",
    "end": "2787819"
  },
  {
    "text": "again so you talked a lot about using RPC over the network and using a liquidy and stuff like that and getting stuff",
    "start": "2787819",
    "end": "2793519"
  },
  {
    "text": "out quickly to prague from development but there's kind of been less talk about doing this while insuring that the",
    "start": "2793519",
    "end": "2800269"
  },
  {
    "text": "security and in between like doing kind authentication or protecting hands lateral movement I'm curious how you're",
    "start": "2800269",
    "end": "2806299"
  },
  {
    "text": "maintaining like this this velocity while also while also protecting like the security of your users yes",
    "start": "2806299",
    "end": "2812599"
  },
  {
    "text": "so I guess there's a lot of different areas of that like security is a pretty pretty wide topic and we have a security",
    "start": "2812599",
    "end": "2820910"
  },
  {
    "text": "team that kind of works full-time on that so both in the client itself obviously",
    "start": "2820910",
    "end": "2827299"
  },
  {
    "text": "clients are untrusted like we contrast anything that our clients send us",
    "start": "2827299",
    "end": "2832509"
  },
  {
    "text": "however we can build in lots of functionality in smart things like touch ID and that kind of stuff actually in",
    "start": "2832509",
    "end": "2839599"
  },
  {
    "text": "our infrastructure I think one my",
    "start": "2839599",
    "end": "2844609"
  },
  {
    "text": "colleague Simon has done a couple of talks about how we segregate Amazon access so you can separate people who",
    "start": "2844609",
    "end": "2851930"
  },
  {
    "text": "can manage users versus people who can provision users and give them roles you can do those in separate Amazon accounts",
    "start": "2851930",
    "end": "2858109"
  },
  {
    "text": "so you can separate that kind of thing within there you then have all sorts of network policies and Cuban entities you",
    "start": "2858109",
    "end": "2863299"
  },
  {
    "text": "can use Coleco to do network policies between services even below that you then have to like prove who you are",
    "start": "2863299",
    "end": "2869630"
  },
  {
    "text": "within structure that's essentially a big soup of stuff that can communicate and",
    "start": "2869630",
    "end": "2877589"
  },
  {
    "text": "humanities provides a little way of doing that but it's not really kind of established enough we are I don't know",
    "start": "2877589",
    "end": "2884349"
  },
  {
    "text": "how far we've got with it yet but we we do like client authentication with certificates that rotated between",
    "start": "2884349",
    "end": "2890589"
  },
  {
    "text": "services which means we do like a lot of kind of CA stuff internally and you can",
    "start": "2890589",
    "end": "2896470"
  },
  {
    "text": "keep parts of that offline like wikis and queens yeah",
    "start": "2896470",
    "end": "2902049"
  },
  {
    "text": "I don't know if that's really answer your question like essentially there's there's a lot of stuff you have to do and ultimately if you have like 200",
    "start": "2902049",
    "end": "2910119"
  },
  {
    "text": "services each of which you're running between 3 & n copies of you're realistically running like a couple of",
    "start": "2910119",
    "end": "2916960"
  },
  {
    "text": "thousand binaries across a number of machines that can all make HTTP calls to",
    "start": "2916960",
    "end": "2921970"
  },
  {
    "text": "each other so yeah they have to have relatively strong authentication and you have to know something is who it says it",
    "start": "2921970",
    "end": "2927490"
  },
  {
    "text": "is within the infrastructure to guarantee what countries do you operate",
    "start": "2927490",
    "end": "2934390"
  },
  {
    "text": "in so the moment just UK I'm afraid all right but the cards work globally so that's one advantage of like we are cars",
    "start": "2934390",
    "end": "2941380"
  },
  {
    "text": "or mass cards which means they work in every machine in the world pretty much versus like building your own point of",
    "start": "2941380",
    "end": "2948130"
  },
  {
    "text": "sale devices we can't give you a cards",
    "start": "2948130",
    "end": "2954279"
  },
  {
    "text": "if you live in another country yet although hopefully soon but the cards will work anywhere in the world and like",
    "start": "2954279",
    "end": "2960369"
  },
  {
    "text": "you can't get a better exchange rate as far as well hello you mentioned that you",
    "start": "2960369",
    "end": "2965859"
  },
  {
    "text": "are using linker team you know with kubernetes can you elaborate a little bit how to deploy in Gardena kubernetes",
    "start": "2965859",
    "end": "2973599"
  },
  {
    "text": "environment and yes we we one link the locally owned a free machine which means",
    "start": "2973599",
    "end": "2978760"
  },
  {
    "text": "you run it as a diamond set in communities so that means like I seem to bring up a new node link a teapot",
    "start": "2978760",
    "end": "2983859"
  },
  {
    "text": "launches on that runs that obviously you can't communicate to localhost because",
    "start": "2983859",
    "end": "2989380"
  },
  {
    "text": "that's not a thing in kubernetes like every pot has its own IP and so we the the pod manifest for the diamond set",
    "start": "2989380",
    "end": "2995890"
  },
  {
    "text": "like works out what the local link ID is given the subnet and provides that as a proxy address to all of the pods that",
    "start": "2995890",
    "end": "3002760"
  },
  {
    "text": "run on that machine so that means all the things know the local engineers they communicate back and then that uses the kubernetes",
    "start": "3002760",
    "end": "3009269"
  },
  {
    "text": "namer which lengthy provides which hits big simonetti api which gives you service",
    "start": "3009269",
    "end": "3014609"
  },
  {
    "text": "discovery so it then knows about all the other pods are and if it's communicating from this one this service to that",
    "start": "3014609",
    "end": "3021209"
  },
  {
    "text": "service it'll go for the local entity over an established TCP connection to",
    "start": "3021209",
    "end": "3027150"
  },
  {
    "text": "that local links B and then to that one so the whole point is like to stop opening socket connections with your web structure which is like relatively slow",
    "start": "3027150",
    "end": "3035988"
  },
  {
    "text": "with that many services how do you handle automated integration testing and to end automated automated integration",
    "start": "3042469",
    "end": "3049469"
  },
  {
    "text": "testing so say do you test the entire flow with that many services so we have",
    "start": "3049469",
    "end": "3055279"
  },
  {
    "text": "we have lots of different plays and yet you basically have to like run you have",
    "start": "3055279",
    "end": "3061140"
  },
  {
    "text": "to write something that can run your automated test suite like against your production infrastructure I think",
    "start": "3061140",
    "end": "3066930"
  },
  {
    "text": "actually Craig talked a little bit about that in the failure track yesterday yes",
    "start": "3066930",
    "end": "3072660"
  },
  {
    "text": "we we have a test suite that does both individual unit testing but also",
    "start": "3072660",
    "end": "3078170"
  },
  {
    "text": "acceptance tests that's what I sailing to remember in the micro service",
    "start": "3078170",
    "end": "3083249"
  },
  {
    "text": "architecture like unit tests are great but like they essentially prove that they've really tiny amount of functionality works which is ultimately",
    "start": "3083249",
    "end": "3089219"
  },
  {
    "text": "useless because the thing is the bugs that you have are like between the interfaces like you've changed something",
    "start": "3089219",
    "end": "3095249"
  },
  {
    "text": "it provides the parent sir this isn't expecting it it explodes so yes you have",
    "start": "3095249",
    "end": "3100619"
  },
  {
    "text": "to have full accepting tests we have those we run those on CI as well on every single kind of comment which which",
    "start": "3100619",
    "end": "3108569"
  },
  {
    "text": "is time-consuming or at least not if you provide enough power so I guess expensive but that means that we have",
    "start": "3108569",
    "end": "3115499"
  },
  {
    "text": "flows that everything out there's everything the core like Cod flow all of those kind of things will be admin staff",
    "start": "3115499",
    "end": "3121319"
  },
  {
    "text": "and those are run against a set of we run on every single service against the",
    "start": "3121319",
    "end": "3127440"
  },
  {
    "text": "set of docker containers which run all of our shared infrastructure I've spun up on CI way every single time that",
    "start": "3127440",
    "end": "3133459"
  },
  {
    "text": "tests that you in theory have a working set precise commit but it doesn't assert",
    "start": "3133459",
    "end": "3139210"
  },
  {
    "text": "that if you deploy that commit and that commit in production that makes but it would work so then yes realistically you",
    "start": "3139210",
    "end": "3145690"
  },
  {
    "text": "have to then build a system which can take those exceptions tests and run those as from tasks attempt against",
    "start": "3145690",
    "end": "3150789"
  },
  {
    "text": "production we do some of that some of that in production at the moment so",
    "start": "3150789",
    "end": "3155890"
  },
  {
    "text": "we'll do like we simulate customer behavior and once we have our actual",
    "start": "3155890",
    "end": "3162309"
  },
  {
    "text": "core processor because we win the process directing directly connecting to MasterCard we can then stimulate full",
    "start": "3162309",
    "end": "3168160"
  },
  {
    "text": "card flows without going through separate infrastructure so we'll do both like hey here's an actual card terminal",
    "start": "3168160",
    "end": "3174309"
  },
  {
    "text": "and you probably see loads of videos online of like train track which drives like a card around goes past a card",
    "start": "3174309",
    "end": "3179920"
  },
  {
    "text": "terminal and that's hooked up to a monitoring system will justify that but we can test also at the actual",
    "start": "3179920",
    "end": "3187359"
  },
  {
    "text": "MasterCard point than that point as well which we thank you yes cool well thank",
    "start": "3187359",
    "end": "3197260"
  },
  {
    "text": "you very much the only question is going to give yourself [Applause]",
    "start": "3197260",
    "end": "3202789"
  }
]