[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "okay I think it's um about time we can get started here um I'm Alan wors Brock",
    "start": "599",
    "end": "7360"
  },
  {
    "text": "um and I was the project editor which I'll explain what that means a bit more",
    "start": "7360",
    "end": "14120"
  },
  {
    "text": "of the enscript 2015 standard and what I want to do",
    "start": "14120",
    "end": "19359"
  },
  {
    "text": "today is kind of let you peek inside what is the process of creating a",
    "start": "19359",
    "end": "25840"
  },
  {
    "text": "JavaScript standard and such is I'm I'm sure here over the course of this conference in",
    "start": "25840",
    "end": "32279"
  },
  {
    "text": "the classes you've heard a lot about um es6 or equiscript 2015 and",
    "start": "32279",
    "end": "39680"
  },
  {
    "text": "you'll have to pardon the slides here don't quite fit on the projection here",
    "start": "39680",
    "end": "44920"
  },
  {
    "text": "and stuff but uh but yeah so so ecmascript 2015 also known as es6 is the",
    "start": "44920",
    "end": "52280"
  },
  {
    "text": "new JavaScript standard uh and um just if you wonder where any of these names",
    "start": "52280",
    "end": "59280"
  },
  {
    "text": "naming comes from whoops sorry here back",
    "start": "59280",
    "end": "66000"
  },
  {
    "text": "back is um the uh well equiscript 2015 comes",
    "start": "66000",
    "end": "72880"
  },
  {
    "text": "from the year of its publication and es6 comes from that it's the sixth edition of the",
    "start": "72880",
    "end": "78720"
  },
  {
    "text": "standard um and for years this was sort of the working name for it and about the",
    "start": "78720",
    "end": "84040"
  },
  {
    "text": "time we published it we decided we could have switch to a year-based name but it's all the same thing whether you hear",
    "start": "84040",
    "end": "89400"
  },
  {
    "text": "es6 or 2 2015 um it's the new standard for",
    "start": "89400",
    "end": "96119"
  },
  {
    "text": "JavaScript so um I've seen over the years lots of",
    "start": "96119",
    "end": "101920"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "confusion about what equiscript means and what's the relationship between ecmascript and",
    "start": "101920",
    "end": "108119"
  },
  {
    "text": "JavaScript and I just s of want to make sure explain it ecmascript is n nothing",
    "start": "108119",
    "end": "113320"
  },
  {
    "text": "more or less than the standard that defines what JavaScript is so e script",
    "start": "113320",
    "end": "120560"
  },
  {
    "text": "and JavaScript are the same thing uh sometimes I've run into people who think well there's actually kind of two",
    "start": "120560",
    "end": "126360"
  },
  {
    "text": "different languages there's ecmascript and then there's JavaScript which is a dialect of ecmascript and you can have",
    "start": "126360",
    "end": "134599"
  },
  {
    "text": "uh you can have a version of ecmascript that isn't JavaScript and none of that",
    "start": "134599",
    "end": "139800"
  },
  {
    "text": "is true it's it's basically they're the same thing and in your everyday life",
    "start": "139800",
    "end": "145319"
  },
  {
    "text": "talk about JavaScript that's really what matters you're using JavaScript your your programming in JavaScript and",
    "start": "145319",
    "end": "152319"
  },
  {
    "text": "hopefully you expect the platforms you use JavaScript on whether it's browsers",
    "start": "152319",
    "end": "157560"
  },
  {
    "text": "or or node or any anything else to be as",
    "start": "157560",
    "end": "162920"
  },
  {
    "text": "current as they possibly can with the current standard for JavaScript that's ecmascript um similarly you probably",
    "start": "162920",
    "end": "170000"
  },
  {
    "text": "shouldn't worry a whole lot about whether you're dealing with the 2015 or the 2016 or 2017 version of",
    "start": "170000",
    "end": "179720"
  },
  {
    "text": "of of ecmascript uh you're use you should be using the current version of JavaScript and you probably won't have a",
    "start": "179720",
    "end": "187000"
  },
  {
    "text": "lot of choice about that so it's it's just JavaScript is what we're talking about here um so you can think of here",
    "start": "187000",
    "end": "194959"
  },
  {
    "text": "of sorry I got to get used to the buttons here on this so you can think of",
    "start": "194959",
    "end": "200720"
  },
  {
    "text": "the standard up here which is the specification of what you have to how a",
    "start": "200720",
    "end": "206680"
  },
  {
    "text": "JavaScript implementation is supposed to work what it's supposed to do and that's the specification that everybody who",
    "start": "206680",
    "end": "212640"
  },
  {
    "text": "implements a JavaScript engine then follows that uh and writes tests to make",
    "start": "212640",
    "end": "218280"
  },
  {
    "text": "sure they conform to it and stuff so uh just to be to really get nerdy standards",
    "start": "218280",
    "end": "224920"
  },
  {
    "text": "nerdy about this so um so the ecri standard is developed by a group called",
    "start": "224920",
    "end": "231640"
  },
  {
    "text": "technical committee 39 or tc39 it's a technical Committee of ecma",
    "start": "231640",
    "end": "238120"
  },
  {
    "text": "international ecma inter National is an organization based in Switzerland that",
    "start": "238120",
    "end": "245159"
  },
  {
    "text": "hosts the development of standards and there's all sorts of legal mechanisms and stuff around what it means to",
    "start": "245159",
    "end": "251200"
  },
  {
    "text": "develop a standard and E and Emma provides that infrastructure",
    "start": "251200",
    "end": "256280"
  },
  {
    "text": "t39 is the group of technical experts who actually sit down and and write the",
    "start": "256280",
    "end": "262560"
  },
  {
    "text": "standard ecma 262 is a term you might hear sometimes",
    "start": "262560",
    "end": "268520"
  },
  {
    "text": "standards organization like ecma love to assign numbers to things and stuff and",
    "start": "268520",
    "end": "274560"
  },
  {
    "text": "so ecma 262 is simply the document number of the ecmascript standard and it",
    "start": "274560",
    "end": "281240"
  },
  {
    "text": "goes through various additions as it evolves and finally",
    "start": "281240",
    "end": "286560"
  },
  {
    "text": "something uh none of this process of standardizing ecmascript involves",
    "start": "286560",
    "end": "292639"
  },
  {
    "text": "w3c uh now which is a lot of people find surprising I mean it clearly uh",
    "start": "292639",
    "end": "298720"
  },
  {
    "text": "JavaScript is is a major component of the web the web platform but it's not a",
    "start": "298720",
    "end": "304320"
  },
  {
    "text": "standard developed by w3c it's developed by by ecma and there is really no formal",
    "start": "304320",
    "end": "313479"
  },
  {
    "text": "cross fertilization between those organizations now in fact the the same",
    "start": "313479",
    "end": "318800"
  },
  {
    "text": "companies are involved as members in both organizations and sometimes even the",
    "start": "318800",
    "end": "324039"
  },
  {
    "text": "same people are involved in tc39 as are involved in in the of various w3c",
    "start": "324039",
    "end": "331319"
  },
  {
    "text": "specifications so there's lots of of cross fertilization in that sense but in terms of of of formal organizational",
    "start": "331319",
    "end": "339479"
  },
  {
    "text": "coupling there really isn't any okay so kind of the back story here",
    "start": "339479",
    "end": "347319"
  },
  {
    "text": "uh probably most of you have heard the uh the the JavaScript origin myth that",
    "start": "347319",
    "end": "354240"
  },
  {
    "text": "uh Brendan Ike at Netscape in 10 days of May of 2095 live sat down and",
    "start": "354240",
    "end": "360680"
  },
  {
    "text": "implemented JavaScript now I think the reality is there's quite a bit of thought went into",
    "start": "360680",
    "end": "368400"
  },
  {
    "text": "what was going to happen before those 10 days and sorry and after the 10 days",
    "start": "368400",
    "end": "375360"
  },
  {
    "text": "there was you know kind of a standard development process of evolving before it finally shipped but the the the S the",
    "start": "375360",
    "end": "382919"
  },
  {
    "text": "core of the design of JavaScript is what happened in those first 10 days um and",
    "start": "382919",
    "end": "389120"
  },
  {
    "text": "uh W within a year after that uh JavaScript had been cloned into",
    "start": "389120",
    "end": "396800"
  },
  {
    "text": "Internet Explorer by Microsoft and they called it jscript and so suddenly the",
    "start": "396800",
    "end": "401919"
  },
  {
    "text": "web had two implementations of this language that for web pages to work they",
    "start": "401919",
    "end": "407199"
  },
  {
    "text": "needed to interoperate or work the same and so there is a need of a standard and",
    "start": "407199",
    "end": "413199"
  },
  {
    "text": "the intered parties including people from Netscape and Microsoft and and and",
    "start": "413199",
    "end": "418520"
  },
  {
    "text": "web some web developers got together worked with Emma to go start the process",
    "start": "418520",
    "end": "424240"
  },
  {
    "text": "of defining a standard and that created ecmascript one if you will the first",
    "start": "424240",
    "end": "429360"
  },
  {
    "text": "edition of the ecmascript standard uh and then uh over the next",
    "start": "429360",
    "end": "435360"
  },
  {
    "text": "couple years two more editions were were worked on until in at December",
    "start": "435360",
    "end": "442560"
  },
  {
    "text": "1999 the EC ecmascript 3 specification was published and ecmascript 3",
    "start": "442560",
    "end": "448919"
  },
  {
    "text": "essentially Define the Baseline of what everybody knows of today as modern JavaScript before e ecmascript 3 there",
    "start": "448919",
    "end": "456360"
  },
  {
    "text": "is things like uh uh exception handling and regular expressions and a number of",
    "start": "456360",
    "end": "462960"
  },
  {
    "text": "important features weren't present in JavaScript but kind of all the sort of normal core JavaScript that you expect",
    "start": "462960",
    "end": "469800"
  },
  {
    "text": "to use every day was kind of defined there in",
    "start": "469800",
    "end": "475000"
  },
  {
    "text": "1999 so uh then after that I call it uh ecos scripts troubled",
    "start": "475240",
    "end": "482400"
  },
  {
    "text": "adolescence there's basically right away right after ES3 was",
    "start": "482400",
    "end": "489000"
  },
  {
    "text": "done there is an attempt to do the uh to do it right uh I think of this as the",
    "start": "489000",
    "end": "495919"
  },
  {
    "text": "ecmascript second system syndrome Point uh the very same people who worked on",
    "start": "495919",
    "end": "503159"
  },
  {
    "text": "ES3 wrote sat down and created a much more ambitious spec specification that had many many more features",
    "start": "503159",
    "end": "510479"
  },
  {
    "text": "um and then nobody implemented it uh for for various reasons uh and and sort of",
    "start": "510479",
    "end": "516399"
  },
  {
    "text": "the whole activity def find a new version of ecmascript ended and some",
    "start": "516399",
    "end": "521719"
  },
  {
    "text": "work happened sort of the XML people came in at the time so this was a time when XML on the web was uh kind of",
    "start": "521719",
    "end": "531040"
  },
  {
    "text": "gaining interest and so there was a lot of work that went into trying to say how does XML fit into ecmascript that sort",
    "start": "531040",
    "end": "538000"
  },
  {
    "text": "of was finished and Peter D out there's another attempt to do an",
    "start": "538000",
    "end": "543240"
  },
  {
    "text": "ES4 um it went on for uh about three years before that work was abandoned uh",
    "start": "543240",
    "end": "551000"
  },
  {
    "text": "in parallel with a kind of a much smaller effort that was called es31",
    "start": "551000",
    "end": "556120"
  },
  {
    "text": "started as sort of a tc39 side project uh to clean up some things from ES3 and",
    "start": "556120",
    "end": "564079"
  },
  {
    "text": "kind of as a backup in case ES4 didn't work out it didn't work out and so in",
    "start": "564079",
    "end": "572120"
  },
  {
    "text": "2009 um ecmascript 5 the work that was es 3.1 ended up being published and it",
    "start": "572120",
    "end": "578959"
  },
  {
    "text": "was rebranded as es5 and it introduced things like strict mode Json object",
    "start": "578959",
    "end": "584640"
  },
  {
    "text": "create a relatively small number of features it really didn't it was very a limited set of extensions so if you look",
    "start": "584640",
    "end": "591959"
  },
  {
    "text": "at it on on a timeline U and unfortunately the scale here doesn't work all that well but it's",
    "start": "591959",
    "end": "598279"
  },
  {
    "text": "kind of like there was a nice period of Rapid development of standards and then everything went off here into this black",
    "start": "598279",
    "end": "604240"
  },
  {
    "text": "hole of es4s and e4x and what have you uh be uh now during that period it was",
    "start": "604240",
    "end": "612920"
  },
  {
    "text": "interesting because one of the reasons I think the original ES4 didn't get any traction was well",
    "start": "612920",
    "end": "620640"
  },
  {
    "text": "people were just starting to use ES3 they really didn't know how JavaScript was going to be used at scale on the web",
    "start": "620640",
    "end": "627880"
  },
  {
    "text": "and during this period of distraction well Ajax sort of the Web",
    "start": "627880",
    "end": "633240"
  },
  {
    "text": "2.0 view of the world emerged and so by the time we got out here to where was",
    "start": "633240",
    "end": "639959"
  },
  {
    "text": "time to actually codify S5 there's now a lot better understanding of what the web",
    "start": "639959",
    "end": "645360"
  },
  {
    "text": "really needed in terms of extensions to JavaScript and it also gave room here",
    "start": "645360",
    "end": "650519"
  },
  {
    "text": "for the JavaScript performance Evolution where the performance of JavaScript engines increased by orders of magnitude",
    "start": "650519",
    "end": "657839"
  },
  {
    "text": "and again that's is one of these things would this have happened if there was a major new version of JavaScript to",
    "start": "657839",
    "end": "663600"
  },
  {
    "text": "implement maybe not so B basically once es5 was done then a",
    "start": "663600",
    "end": "670160"
  },
  {
    "text": "serious effort got underway to really do a major new re revision and that",
    "start": "670160",
    "end": "675320"
  },
  {
    "text": "ultimately became es25 or es6 and uh I'm not going to make any",
    "start": "675320",
    "end": "682440"
  },
  {
    "start": "680000",
    "end": "680000"
  },
  {
    "text": "attempt here to try to go through all the details features of what's in es6",
    "start": "682440",
    "end": "688120"
  },
  {
    "text": "there's other talks here in classes that go into that but I want to kind of give you a sense of the scale of scope here",
    "start": "688120",
    "end": "694600"
  },
  {
    "text": "now you can't really see down here at the bottom here in the black but ES1 was 110 page spec okay so you can kind of",
    "start": "694600",
    "end": "703120"
  },
  {
    "text": "see how the growth of the spec 110 Pages 117 Pages 188 Pages 252 pages and 566",
    "start": "703120",
    "end": "711079"
  },
  {
    "text": "pages so really good scale here that es6 or ES 2015 is really a major major major",
    "start": "711079",
    "end": "720279"
  },
  {
    "text": "revision and extension of the of the language it and it really is a culmination of kind of the 15 15 years",
    "start": "720279",
    "end": "727120"
  },
  {
    "text": "of evolution of the language from where ES3 was in 1999 to what we have",
    "start": "727120",
    "end": "735079"
  },
  {
    "text": "today so one of the things um people wonder",
    "start": "735079",
    "end": "741120"
  },
  {
    "text": "what is how does tc39 work what it's really like when it tc39 gets together",
    "start": "741120",
    "end": "747680"
  },
  {
    "text": "to meet and what goes on there and how do people interact and I just give it kind of two things people imagine which",
    "start": "747680",
    "end": "755000"
  },
  {
    "text": "isn't it I mean it isn't a giant formal uh parliamentary style organiz or",
    "start": "755000",
    "end": "763120"
  },
  {
    "text": "meeting with hundreds of people and very strict in formal processes and stuff so",
    "start": "763120",
    "end": "769680"
  },
  {
    "text": "so that's not what it's like it's also not a smoke filled room where you can",
    "start": "769680",
    "end": "774800"
  },
  {
    "text": "imagine here I don't know you can imagine uh you know Google and Microsoft",
    "start": "774800",
    "end": "781720"
  },
  {
    "text": "and Milla and uh and and and apple kind of getting here together their chips and",
    "start": "781720",
    "end": "787399"
  },
  {
    "text": "making deals about what's going to happen um it's really not like either of those",
    "start": "787399",
    "end": "792839"
  },
  {
    "text": "scenarios um this is uh a picture of an actual tc39 meeting from last summer",
    "start": "792839",
    "end": "801480"
  },
  {
    "text": "it's a it's a it's a room full of people uh the the the people there the actual",
    "start": "801480",
    "end": "808079"
  },
  {
    "text": "formerly the members of tc39 are are organizations are",
    "start": "808079",
    "end": "814680"
  },
  {
    "text": "companies uh and you know so people like Google and Microsoft and uh you know Milla and but",
    "start": "814680",
    "end": "824160"
  },
  {
    "text": "also companies that that have an extens extensive investment in using JavaScript",
    "start": "824160",
    "end": "829639"
  },
  {
    "text": "which is almost everybody these days but like you know Twitter and PayPal and",
    "start": "829639",
    "end": "834959"
  },
  {
    "text": "Salesforce who recently joined these are the the formal members of",
    "start": "834959",
    "end": "840120"
  },
  {
    "text": "tc39 and then they all appoint people to to represent them at these meetings and",
    "start": "840120",
    "end": "847279"
  },
  {
    "text": "the people who are sent to these meetings it's it's up to each company to decide who to send uh but generally",
    "start": "847279",
    "end": "853880"
  },
  {
    "text": "they're people who are language experts uh either at language design or language",
    "start": "853880",
    "end": "859279"
  },
  {
    "text": "implementation or and they may also be people who are simp are sort of expert users of the Technologies of application",
    "start": "859279",
    "end": "866480"
  },
  {
    "text": "developers and stuff uh but every every body gets together and what really this",
    "start": "866480",
    "end": "872240"
  },
  {
    "text": "is essentially the the the JavaScript design team this",
    "start": "872240",
    "end": "878160"
  },
  {
    "text": "is gets together and have technical discussions about how how the language should evolve what what what features",
    "start": "878160",
    "end": "885360"
  },
  {
    "text": "are proposed I talk about we talk about the features why the feature would be useful what use cases it support how it",
    "start": "885360",
    "end": "892120"
  },
  {
    "text": "fits with other parts of the language so it's it's getting a little large it's",
    "start": "892120",
    "end": "898279"
  },
  {
    "text": "grown over time time but it it is a very very technically focused group of people",
    "start": "898279",
    "end": "903680"
  },
  {
    "text": "working on technical problems",
    "start": "903680",
    "end": "908800"
  },
  {
    "text": "so just a sense of it as as we went into working on uh e ecmascript 6 these these are",
    "start": "908800",
    "end": "917279"
  },
  {
    "text": "some of these are the sorts of things we we were looking at uh you know what what",
    "start": "917279",
    "end": "923040"
  },
  {
    "start": "921000",
    "end": "921000"
  },
  {
    "text": "was what was missing in JavaScript what was holding it back and so issues like modularity better abstraction",
    "start": "923040",
    "end": "930800"
  },
  {
    "text": "capabilities uh how to make the language clearer more expressive less error",
    "start": "930800",
    "end": "936560"
  },
  {
    "text": "prone uh and uh some something we explicitly were thinking about this was",
    "start": "936560",
    "end": "943959"
  },
  {
    "text": "six or seven years ago was this idea of a better better compilation Target we're",
    "start": "943959",
    "end": "949199"
  },
  {
    "text": "anticipating more and more use of languages that compile the JavaScript and so we wanted to make sure that the",
    "start": "949199",
    "end": "956240"
  },
  {
    "text": "the new version of of ecmascript had we actually considered what what",
    "start": "956240",
    "end": "962959"
  },
  {
    "text": "transpilers or compilers of various sorts would need and and I guess an",
    "start": "962959",
    "end": "968160"
  },
  {
    "text": "overring writing thing in all this as we think about the language is what are the",
    "start": "968160",
    "end": "973800"
  },
  {
    "text": "things that can only be done at the at the by tc39 by the designers of the",
    "start": "973800",
    "end": "981399"
  },
  {
    "text": "language um if if things can be done in a library uh essentially if you can write",
    "start": "981399",
    "end": "988360"
  },
  {
    "text": "a poly F fill for it maybe it doesn't need to be in the standard right but if",
    "start": "988360",
    "end": "993959"
  },
  {
    "text": "things that only this only the the standards body can do is you know Define",
    "start": "993959",
    "end": "999360"
  },
  {
    "text": "new syntax for the language def Define change the semantics or add new deep",
    "start": "999360",
    "end": "1005240"
  },
  {
    "text": "semantics into the language uh and and so that's why you tend to see those are",
    "start": "1005240",
    "end": "1010959"
  },
  {
    "text": "the sorts of things there's a lot of focus we have on so as we sit here in tc39 and have",
    "start": "1010959",
    "end": "1018600"
  },
  {
    "text": "these discussions um you know it's it's it's",
    "start": "1018600",
    "end": "1023920"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "just like any other discussion about JavaScript and the future of JavaScript you might imagine right we think about",
    "start": "1023920",
    "end": "1030480"
  },
  {
    "text": "what kind of language is this you know is it is it functional is it object oriented if it is object oriented what",
    "start": "1030480",
    "end": "1037280"
  },
  {
    "text": "style of objectoriented is it permissive is it secure these are we we continually",
    "start": "1037280",
    "end": "1042880"
  },
  {
    "text": "talk and we continually fight about these things but we kind of fight in a playful way you know like our dogs here",
    "start": "1042880",
    "end": "1049000"
  },
  {
    "text": "stuff because we really are trying to to find the the medium of of what what",
    "start": "1049000",
    "end": "1055880"
  },
  {
    "text": "JavaScript needs for for all its users um it's c i mean JavaScript is really is",
    "start": "1055880",
    "end": "1062080"
  },
  {
    "text": "a multi Paradigm programming language it really is all these things and one of our challenges is figuring out how do we",
    "start": "1062080",
    "end": "1069679"
  },
  {
    "text": "balance these if we go too far one way towards functional or towards objectoriented then it it may",
    "start": "1069679",
    "end": "1076640"
  },
  {
    "text": "disadvantage people who wanted to use the language in the other way if we make it too secure then the people who enjoy",
    "start": "1076640",
    "end": "1083720"
  },
  {
    "text": "the prissiness of JavaScript may not be serve so we have to find a balance between all those things um another",
    "start": "1083720",
    "end": "1091159"
  },
  {
    "text": "thing we have to do is Javascript going all the way back to those 10 days in May has a whole lot of",
    "start": "1091159",
    "end": "1099280"
  },
  {
    "text": "baggage built into the language and wouldn't be nice if you could really clean up some of that baggage and and",
    "start": "1099280",
    "end": "1106799"
  },
  {
    "text": "and get rid of some of the error prone features for example but really our number one overriding",
    "start": "1106799",
    "end": "1114400"
  },
  {
    "text": "principle is don't break the web right so there's lots of things we'd like to",
    "start": "1114400",
    "end": "1120840"
  },
  {
    "text": "do uh well no doubt we would argue about exactly what those things are but there",
    "start": "1120840",
    "end": "1126919"
  },
  {
    "text": "we would find some agreement we would we would there's lots of things you would like to do to improve the the Legacy",
    "start": "1126919",
    "end": "1134200"
  },
  {
    "text": "baggage that comes along with JavaScript and in many cases we simply",
    "start": "1134200",
    "end": "1139640"
  },
  {
    "text": "just can't do it because it would break the would break code that exists on on",
    "start": "1139640",
    "end": "1144720"
  },
  {
    "text": "on the web uh and we don't want to break anybody's code right so another thing we do want",
    "start": "1144720",
    "end": "1152720"
  },
  {
    "text": "to look at is sorry here let",
    "start": "1152720",
    "end": "1158080"
  },
  {
    "text": "me as as we add new features and stuff we really have to think carefully about",
    "start": "1158080",
    "end": "1163360"
  },
  {
    "text": "how new features fit into the language as it exists right say here we don't want to create a a Franken language we",
    "start": "1163360",
    "end": "1170200"
  },
  {
    "text": "don't want to put the you know we don't NE we don't want to put the you know the",
    "start": "1170200",
    "end": "1176720"
  },
  {
    "text": "snazziest new functional feature on the language if it's not going to fit in",
    "start": "1176720",
    "end": "1181760"
  },
  {
    "text": "well with what's already there we have to find a way to to balance all the new features and try to create a coherent",
    "start": "1181760",
    "end": "1188080"
  },
  {
    "text": "hole out of it so that in the long run when somebody comes back three or four",
    "start": "1188080",
    "end": "1193400"
  },
  {
    "text": "or five or 10 years from now they don't see the language as a set of kind of is",
    "start": "1193400",
    "end": "1199520"
  },
  {
    "text": "that have have uh uh have fossilized over time but they",
    "start": "1199520",
    "end": "1205480"
  },
  {
    "text": "still see the language as a coherent hole so one one of the things really",
    "start": "1205480",
    "end": "1211039"
  },
  {
    "start": "1211000",
    "end": "1211000"
  },
  {
    "text": "common I call this a metat tweet uh I see tweets like this all the time somebody",
    "start": "1211039",
    "end": "1218000"
  },
  {
    "text": "says es6 pick some feature uh you know",
    "start": "1218039",
    "end": "1223960"
  },
  {
    "text": "classes in es6 is based on pick insert your favorite language here and there's",
    "start": "1223960",
    "end": "1229240"
  },
  {
    "text": "there's a lot of I would say misperception that what a language design team what a standards team like",
    "start": "1229240",
    "end": "1234960"
  },
  {
    "text": "us are doing is we're simply harvesting features from other languages and we're we're shoving them in into ecmascript",
    "start": "1234960",
    "end": "1242320"
  },
  {
    "text": "and we're taking them as we found them and we almost never do that uh we we're",
    "start": "1242320",
    "end": "1251480"
  },
  {
    "text": "as as a group we have broad experience with many languages and many styles of",
    "start": "1251480",
    "end": "1257000"
  },
  {
    "text": "programming and we understand many features in many different programming languages and we",
    "start": "1257000",
    "end": "1263760"
  },
  {
    "text": "try to evaluate them in depth of of what really the core of these features are",
    "start": "1263760",
    "end": "1269400"
  },
  {
    "text": "what what they provide to the programmer and how we might integrate that if that's a valuable feature how it might",
    "start": "1269400",
    "end": "1275440"
  },
  {
    "text": "be integrated in a coherent manner into JavaScript so for",
    "start": "1275440",
    "end": "1281159"
  },
  {
    "start": "1281000",
    "end": "1281000"
  },
  {
    "text": "example giv a survey question here is what language had the most influence on",
    "start": "1281159",
    "end": "1286720"
  },
  {
    "text": "the design of ecmascript classes uh how many would say",
    "start": "1286720",
    "end": "1293880"
  },
  {
    "text": "Java yeah a fair number uh it's it's that's something that surprised me is",
    "start": "1294240",
    "end": "1300840"
  },
  {
    "text": "that so many people just when they saw a class keyword immediately assumed that",
    "start": "1300840",
    "end": "1305880"
  },
  {
    "text": "ecmascript six classes were based on Java classes somehow or another or",
    "start": "1305880",
    "end": "1312679"
  },
  {
    "text": "inspired from them um the answer for this is actually JavaScript was the L",
    "start": "1312679",
    "end": "1318679"
  },
  {
    "text": "Ang that had the most influence on ecmascript class definitions uh in in in fact if you if",
    "start": "1318679",
    "end": "1327760"
  },
  {
    "text": "you look at uh JavaScript has always had a latent class model it's been there since since",
    "start": "1327760",
    "end": "1335000"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "ecmascript one it it it manifests itself in how Constructor functions work it",
    "start": "1335000",
    "end": "1341919"
  },
  {
    "text": "manifests itself in terms of how the the build-in constructors and the standard",
    "start": "1341919",
    "end": "1349120"
  },
  {
    "text": "Library how they work and they all follow the same basic model of",
    "start": "1349120",
    "end": "1354520"
  },
  {
    "text": "Constructors with a prototype holding on the methods which instances uh reference",
    "start": "1354520",
    "end": "1360120"
  },
  {
    "text": "the prototype for inheritance and you can inherit up the Prototype chain that is the latent built-in uh class model of",
    "start": "1360120",
    "end": "1369400"
  },
  {
    "text": "of JavaScript that Bren and I coded up in May of of uh 2000 of",
    "start": "1369400",
    "end": "1376840"
  },
  {
    "text": "1995 right and that is exactly what is implemented in",
    "start": "1376840",
    "end": "1383279"
  },
  {
    "start": "1379000",
    "end": "1379000"
  },
  {
    "text": "ecmascript 2015 on the left here you have the code",
    "start": "1383279",
    "end": "1388520"
  },
  {
    "text": "the manual wiring code that you have to would that that you had to do at at es5",
    "start": "1388520",
    "end": "1395400"
  },
  {
    "text": "or ES3 to build that structure what the class model in uh ecas 2015 does is",
    "start": "1395400",
    "end": "1404039"
  },
  {
    "text": "provide a syntactic convenience to say I want",
    "start": "1404039",
    "end": "1409080"
  },
  {
    "text": "I can create a single syntactic unit to say I'm defining something that follows",
    "start": "1409080",
    "end": "1414799"
  },
  {
    "text": "the standard ecmascript class model and so so that's what that's what ecmascript 2015 classes do it simply implements the",
    "start": "1414799",
    "end": "1423240"
  },
  {
    "text": "the model that's always been there so that's why I say JavaScript is",
    "start": "1423240",
    "end": "1428559"
  },
  {
    "text": "is the language that most had the largest influence on on es6",
    "start": "1428559",
    "end": "1436440"
  },
  {
    "text": "classes so so so so basically one of the things we're seeing here as we talk about all these features that as you're",
    "start": "1436440",
    "end": "1443320"
  },
  {
    "text": "designing a language like this uh you can't just take one one feature and add",
    "start": "1443320",
    "end": "1448600"
  },
  {
    "text": "it to the language and say ah this is cool this is how it works you have to figure out how everything integrates",
    "start": "1448600",
    "end": "1454840"
  },
  {
    "text": "together every feature interacts with every other feature and you have to",
    "start": "1454840",
    "end": "1459960"
  },
  {
    "text": "understand those interconnections and stuff and so I want to what I'm going to do here is I'm going to walk through",
    "start": "1459960",
    "end": "1465919"
  },
  {
    "text": "kind of a a set of steps here that so just kind of kind of the the reasoning",
    "start": "1465919",
    "end": "1470960"
  },
  {
    "text": "of logic that LE led to a one particular set of features in eosp",
    "start": "1470960",
    "end": "1477360"
  },
  {
    "text": "2016 and so we're going to start here with the the closure the closure and",
    "start": "1477360",
    "end": "1482480"
  },
  {
    "text": "loop problem that you might see and ES3 level JavaScript and basically what we",
    "start": "1482480",
    "end": "1488720"
  },
  {
    "text": "have here is we we we have a 4in loop and in this Loop",
    "start": "1488720",
    "end": "1495000"
  },
  {
    "text": "uh a a call back is being associated with some object and that callback is",
    "start": "1495000",
    "end": "1501000"
  },
  {
    "text": "passed as a as a as a function object a a closure and that closure references",
    "start": "1501000",
    "end": "1507039"
  },
  {
    "text": "two variables here V and P that are defined by the loop and down here at the",
    "start": "1507039",
    "end": "1512559"
  },
  {
    "text": "bottom where you can't see very well um it's basically all those callbacks are",
    "start": "1512559",
    "end": "1518320"
  },
  {
    "text": "being called and um those of you who are experienced Java Script programmers",
    "start": "1518320",
    "end": "1524520"
  },
  {
    "text": "probably see a bug here you a bug you probably encountered the bug is",
    "start": "1524520",
    "end": "1531600"
  },
  {
    "text": "that each of these callbacks that are are installed in this Loop all end up",
    "start": "1531600",
    "end": "1537240"
  },
  {
    "text": "using the same value for V and P down here when the callbacks are activated in",
    "start": "1537240",
    "end": "1543120"
  },
  {
    "text": "fact the values they Ed for p andv are the last values from the last time",
    "start": "1543120",
    "end": "1549679"
  },
  {
    "text": "through the loop where it's pretty clearly the intent of somebody who programmed this was thinking for each of",
    "start": "1549679",
    "end": "1555559"
  },
  {
    "text": "these callbacks was probably capturing the value p and v for the particular",
    "start": "1555559",
    "end": "1560600"
  },
  {
    "text": "iteration of the loop where they created the Callback so millions of T millions",
    "start": "1560600",
    "end": "1566120"
  },
  {
    "text": "of bugs in JavaScript programs are created because of this problem it's",
    "start": "1566120",
    "end": "1571200"
  },
  {
    "text": "just really too easy to do so one of the things we wanted to fix for equiscript",
    "start": "1571200",
    "end": "1577240"
  },
  {
    "text": "2015 was to make it to to not have this",
    "start": "1577240",
    "end": "1582399"
  },
  {
    "text": "Hazard right to make it so people didn't co-use this pattern that would cause",
    "start": "1582399",
    "end": "1587799"
  },
  {
    "text": "this sort of bug to occur so how do you fix it how if you're at a language design level how can you fix it and and",
    "start": "1587799",
    "end": "1595120"
  },
  {
    "text": "what is the source of the problem the source of the problem is that BEC even though here in the four Loop and inside",
    "start": "1595120",
    "end": "1602440"
  },
  {
    "text": "the body of the four statement there are these VAR declarations what the semantics VAR is",
    "start": "1602440",
    "end": "1608919"
  },
  {
    "text": "really the same as if if the vars were up here at the top of the function these these vars are are hoisted to the top",
    "start": "1608919",
    "end": "1616080"
  },
  {
    "text": "right so each time when you to uh create this closure what's being captured here by the",
    "start": "1616080",
    "end": "1622080"
  },
  {
    "text": "closure a reference to these function level variables and when the function is",
    "start": "1622080",
    "end": "1627440"
  },
  {
    "text": "is evaluated it's just getting whatever their current values were which was what they had at the end of the loop right so",
    "start": "1627440",
    "end": "1634640"
  },
  {
    "text": "hoisting is what caused the problem and so you might say well an easy fix of this would be let's let's redefine VAR",
    "start": "1634640",
    "end": "1643600"
  },
  {
    "text": "so it doesn't hoist and then if each iteration with the loop has its own VAR are then we don't have that capture",
    "start": "1643600",
    "end": "1650559"
  },
  {
    "text": "problem but unfortunately people write code that depend upon VAR being hoisted even being",
    "start": "1650559",
    "end": "1658039"
  },
  {
    "text": "hoisted outside of a loop they write code patterns like this and so if we change if we change that in the language",
    "start": "1658039",
    "end": "1665840"
  },
  {
    "text": "we would break those programs we would break the web can't do that that's against our",
    "start": "1665840",
    "end": "1671360"
  },
  {
    "text": "rules okay so that we can't fix the problem that way",
    "start": "1671360",
    "end": "1678679"
  },
  {
    "text": "um what we can do well we can't change we couldn't change the meaning of VAR we",
    "start": "1678679",
    "end": "1683880"
  },
  {
    "text": "could add a new type of Declaration that added a variable that had different sort of scoping and so we added let and",
    "start": "1683880",
    "end": "1692240"
  },
  {
    "text": "specifically we added let as a type of Declaration that doesn't get hoisted to the top of the function but is",
    "start": "1692240",
    "end": "1699640"
  },
  {
    "text": "has each block that contains a let declaration or in this case the loop",
    "start": "1699640",
    "end": "1705440"
  },
  {
    "text": "itself acts as a block uh has its own distinct variable that shares the name V",
    "start": "1705440",
    "end": "1711480"
  },
  {
    "text": "but they're different variables and and when you do that then then then each",
    "start": "1711480",
    "end": "1717840"
  },
  {
    "text": "time you you capture the closure you're capturing a reference to to the variable",
    "start": "1717840",
    "end": "1723760"
  },
  {
    "text": "in that block not the global one and and then you're",
    "start": "1723760",
    "end": "1729399"
  },
  {
    "text": "uh that way it works okay so so essentially every callback here uses",
    "start": "1729399",
    "end": "1734919"
  },
  {
    "text": "gets a distinct binding for v& p so that e is the problem but okay so now that we've added",
    "start": "1734919",
    "end": "1744080"
  },
  {
    "text": "that we've added this new thing let and we've said it's going to have this Block Level semantics but what else what what",
    "start": "1744080",
    "end": "1750760"
  },
  {
    "text": "what are the other characteristics of let we have to worry about um",
    "start": "1750760",
    "end": "1756720"
  },
  {
    "text": "well let's see here so it turns out that JavaScript had a lot of Legacy",
    "start": "1756720",
    "end": "1764240"
  },
  {
    "text": "peculiarities with declarations so we're we're talking here about declaring a variable",
    "start": "1764240",
    "end": "1771640"
  },
  {
    "text": "well here is a little function look at all the each of these red X's is in",
    "start": "1771640",
    "end": "1778720"
  },
  {
    "text": "essence a different Declaration of the same variable of X right you",
    "start": "1778720",
    "end": "1784600"
  },
  {
    "text": "it's X is the name of two different parameters it's declared as a VAR it's",
    "start": "1784600",
    "end": "1790080"
  },
  {
    "text": "used as a for Loop index it's it's declared with within uh the block of a",
    "start": "1790080",
    "end": "1796679"
  },
  {
    "text": "loop there's a fun function down here there's a function declaration named X and at the very end somebody calls X",
    "start": "1796679",
    "end": "1803440"
  },
  {
    "text": "what's the value of x at this point in the program okay um it's well defined by",
    "start": "1803440",
    "end": "1810279"
  },
  {
    "text": "JavaScript but it is is",
    "start": "1810279",
    "end": "1815640"
  },
  {
    "text": "very basically this is crap is what it comes down right but it's crap we have to live",
    "start": "1817360",
    "end": "1823559"
  },
  {
    "text": "with but now we're adding this new thing let so what do we do with let do do",
    "start": "1823559",
    "end": "1829480"
  },
  {
    "text": "we do do we give do we give let the same",
    "start": "1829480",
    "end": "1834799"
  },
  {
    "text": "wtfs that that VAR had or or can we fix them somehow right what so we got to ask",
    "start": "1834799",
    "end": "1841760"
  },
  {
    "text": "ourself a lot of this in the process so so you can think of you know situations",
    "start": "1841760",
    "end": "1847200"
  },
  {
    "text": "how let might be misused for example what happens if you have two lets in the",
    "start": "1847200",
    "end": "1853399"
  },
  {
    "text": "same scope with the same variable name uh sorry what what hap what happens if",
    "start": "1853399",
    "end": "1860600"
  },
  {
    "text": "you have both a let and a VAR for the same name right so remember these are all new things these are things that",
    "start": "1860600",
    "end": "1866799"
  },
  {
    "text": "couldn't have occurred in earlier versions of language because let didn't exist uh what happens if you have a let",
    "start": "1866799",
    "end": "1876519"
  },
  {
    "text": "X but there's also a parameter named x what what happens if uh you have let in",
    "start": "1876519",
    "end": "1883000"
  },
  {
    "text": "a function so so yeah yeah basically there's all these different issues that",
    "start": "1883000",
    "end": "1888600"
  },
  {
    "text": "come up so so the resolution we came to was okay these are new things we don't",
    "start": "1888600",
    "end": "1895919"
  },
  {
    "text": "want to duplicate these errors we made them these static errors so static error is an error that occurs at parse time",
    "start": "1895919",
    "end": "1903519"
  },
  {
    "text": "it's essentially the equivalent of what happens when you have a syntax error so as we introduce all these new",
    "start": "1903519",
    "end": "1909360"
  },
  {
    "text": "declarations we had to Define rules for for what the error cases were uh and",
    "start": "1909360",
    "end": "1916399"
  },
  {
    "text": "there's a way to eliminate all these ISS isues so so es6 basically has a a a set of",
    "start": "1916399",
    "end": "1925559"
  },
  {
    "text": "rules is that of really principles for declarations we ended up having to articulate to explain how declarations",
    "start": "1925559",
    "end": "1932159"
  },
  {
    "text": "work in the language so it's like in any scope every every name has a unique",
    "start": "1932159",
    "end": "1938399"
  },
  {
    "text": "binding uh uh basically V uh varen",
    "start": "1938399",
    "end": "1945960"
  },
  {
    "text": "let declarations that the top level you can have both a a VAR you can have both",
    "start": "1945960",
    "end": "1952000"
  },
  {
    "text": "a VAR and a function declaration and they Define the same variable and you have to do that because that's how ES1",
    "start": "1952000",
    "end": "1958919"
  },
  {
    "text": "through five worked and kind kind of go down go down the list here of these uh",
    "start": "1958919",
    "end": "1965440"
  },
  {
    "text": "it's hard to read here because of the clipping and stuff but it's essentially all the new declarations forms are much",
    "start": "1965440",
    "end": "1971000"
  },
  {
    "text": "more restrictive about duplicate def declarations or different types of",
    "start": "1971000",
    "end": "1976840"
  },
  {
    "text": "entities being declared with the same names and it's only in places where we H",
    "start": "1976840",
    "end": "1982559"
  },
  {
    "text": "have to deal with the existing Legacy code that there are we fall back to the",
    "start": "1982559",
    "end": "1988240"
  },
  {
    "text": "rules that we had before that so I just want to give you a flavor here of sort of the thinking the sorts",
    "start": "1988240",
    "end": "1996000"
  },
  {
    "text": "of things we have to think about as as we add these new features we really have to think about the impact of the feature",
    "start": "1996000",
    "end": "2001960"
  },
  {
    "text": "across the whole language so so what's next basically uh what's the next step",
    "start": "2001960",
    "end": "2009279"
  },
  {
    "text": "in uh in ecmascript evolution uh if you uh kind of followed history you might",
    "start": "2009279",
    "end": "2015880"
  },
  {
    "text": "say well 15 years from now may maybe we'll have uh maybe this we have the",
    "start": "2015880",
    "end": "2021600"
  },
  {
    "text": "seventh edition ecmascript 2030 and it would probably be about 11",
    "start": "2021600",
    "end": "2027600"
  },
  {
    "text": "or 1200 pages and uh between now and then it's hard to say what would happen",
    "start": "2027600",
    "end": "2035039"
  },
  {
    "text": "but it would probably be kind of ugly so as you know as we were as we were",
    "start": "2035039",
    "end": "2040760"
  },
  {
    "text": "developing uh equiscript 2015 was clear that we needed to change how ecmascript",
    "start": "2040760",
    "end": "2047159"
  },
  {
    "start": "2041000",
    "end": "2041000"
  },
  {
    "text": "was developed uh and and well before released ecmascript 2015 we decided in",
    "start": "2047159",
    "end": "2053240"
  },
  {
    "text": "tc39 that we would do incremental annual updates so going forward at least for",
    "start": "2053240",
    "end": "2060040"
  },
  {
    "text": "the next few years uh the idea is there there will be a a new ecmascript spec",
    "start": "2060040",
    "end": "2066000"
  },
  {
    "text": "revision every year the these these revisions and for the most part are",
    "start": "2066000",
    "end": "2071040"
  },
  {
    "text": "probably going to be fairly small but the idea is to keep a A continuing stream of improvements to the JavaScript",
    "start": "2071040",
    "end": "2078200"
  },
  {
    "text": "language not bundle them all up for very long periods of time so uh and and and we also developed",
    "start": "2078200",
    "end": "2087679"
  },
  {
    "text": "a sort of a process to understand sort of how features go new feature proposals",
    "start": "2087679",
    "end": "2093800"
  },
  {
    "text": "will go through tc39 and how they mature to the point point where they're going to be ready to",
    "start": "2093800",
    "end": "2098920"
  },
  {
    "text": "go into the specification so um so so features start here at what we call a",
    "start": "2098920",
    "end": "2104960"
  },
  {
    "text": "strawman stage which is basically here's an interesting idea or here's something somebody thinks would be good to add to",
    "start": "2104960",
    "end": "2111520"
  },
  {
    "text": "the language they go through a process of tc39 evaluating it deciding that in",
    "start": "2111520",
    "end": "2117480"
  },
  {
    "text": "fact yes maybe there is a use case here that we need to support refining coming up with actually a",
    "start": "2117480",
    "end": "2124440"
  },
  {
    "text": "proposed spec of how to approach the problem ref finding that and then eventually getting it to the point where",
    "start": "2124440",
    "end": "2130640"
  },
  {
    "text": "there is a complete specification and that there is implementation experience preferably in",
    "start": "2130640",
    "end": "2136800"
  },
  {
    "text": "browsers that people have actually tried to implement that and only when we get to that stage are things going to go",
    "start": "2136800",
    "end": "2143079"
  },
  {
    "text": "into the the actual specification so so when you so what's",
    "start": "2143079",
    "end": "2149880"
  },
  {
    "start": "2148000",
    "end": "2148000"
  },
  {
    "text": "new in excript 2016 well basically there's only two new",
    "start": "2149880",
    "end": "2155520"
  },
  {
    "text": "features there there's a new array function and there's an exponential exponentiation operator that's it that's",
    "start": "2155520",
    "end": "2162880"
  },
  {
    "text": "the only thing that's ready that's the only thing that's met the criteria um but the train is leaving anyway now what",
    "start": "2162880",
    "end": "2170599"
  },
  {
    "text": "this doesn't mention up here is there are dozens if not hundreds of actually bug fixes to the spec that's also uh in",
    "start": "2170599",
    "end": "2178400"
  },
  {
    "text": "in in the 2016 Edition and and that's as important I think as these new features",
    "start": "2178400",
    "end": "2184760"
  },
  {
    "text": "is the fact we're able to maintain and correct errors and stuff as we go forward um there are a number of things",
    "start": "2184760",
    "end": "2190720"
  },
  {
    "text": "that people thought were going to be in E ecmascript 2016 that didn't make it",
    "start": "2190720",
    "end": "2195800"
  },
  {
    "text": "async functions SMD support uh some new string functions",
    "start": "2195800",
    "end": "2201839"
  },
  {
    "text": "there's there's a number of things there various people had had guesses about what was going to be in ecos script",
    "start": "2201839",
    "end": "2208079"
  },
  {
    "text": "2016 and in some cases the the champions of those features even promised they'd",
    "start": "2208079",
    "end": "2213960"
  },
  {
    "text": "be in 2015 but they aren't primary merely because they haven't had enough",
    "start": "2213960",
    "end": "2219319"
  },
  {
    "text": "implementation experience yet so probably showing up in 2017 but we'll",
    "start": "2219319",
    "end": "2225119"
  },
  {
    "text": "have to see you know kind of no no more promises about when something is going to be mature enough until it actually",
    "start": "2225119",
    "end": "2232040"
  },
  {
    "text": "is um so kind of kind of sum sum summing it up here is kind kind of that's that's",
    "start": "2232040",
    "end": "2240440"
  },
  {
    "text": "how we made ES 2015 and that's how we're planning on making it forward it's a",
    "start": "2240440",
    "end": "2247040"
  },
  {
    "text": "huge Chang the language it's uh it respects the language that's gone that",
    "start": "2247040",
    "end": "2253880"
  },
  {
    "text": "as it was before and what actually exists in out on the web uh I like to",
    "start": "2253880",
    "end": "2259480"
  },
  {
    "text": "say it has legs which I kind of represent like this uh we've taken the",
    "start": "2259480",
    "end": "2266119"
  },
  {
    "text": "baggage and we put some legs on it and stuff and hopefully we've made a much better language",
    "start": "2266119",
    "end": "2272680"
  },
  {
    "text": "so that's basically it uh I got here maybe two minutes here",
    "start": "2272680",
    "end": "2278960"
  },
  {
    "text": "if anyone has a quick question or anything but",
    "start": "2278960",
    "end": "2284000"
  },
  {
    "text": "uh yeah so so",
    "start": "2284359",
    "end": "2290319"
  },
  {
    "text": "decorators decorators have have interes in use cases decorators are a complex",
    "start": "2290319",
    "end": "2296319"
  },
  {
    "text": "set of is a complex feature that has lots of interactions with other features of the language uh and it's hard to get",
    "start": "2296319",
    "end": "2304280"
  },
  {
    "text": "those right um I think it's it remain we'll have to see how how",
    "start": "2304280",
    "end": "2311359"
  },
  {
    "text": "decorators evolve uh and how they'll how they'll proceed down the maturity chart",
    "start": "2311359",
    "end": "2319000"
  },
  {
    "text": "um I I think it's likely we'll end up with something like decorators but I personally wouldn't want to predict",
    "start": "2319000",
    "end": "2325960"
  },
  {
    "text": "exactly when and what all the details will",
    "start": "2325960",
    "end": "2330838"
  },
  {
    "text": "be front here middle yeah yeah you any",
    "start": "2331599",
    "end": "2338280"
  },
  {
    "text": "you know I don't think there's very many",
    "start": "2338280",
    "end": "2344560"
  },
  {
    "text": "um no doubt there are some people disagree if you really want a function scoped variable I guess that's a reason",
    "start": "2344560",
    "end": "2350119"
  },
  {
    "text": "to use VAR but I'd look really closely at you know what your requirement is and",
    "start": "2350119",
    "end": "2356839"
  },
  {
    "text": "say why why wouldn't I want the let rules in terms of take you know worrying",
    "start": "2356839",
    "end": "2364960"
  },
  {
    "text": "about duplicate definitions and stuff uh and uh so I'd recommend uh using let and only if you",
    "start": "2364960",
    "end": "2372520"
  },
  {
    "text": "run into some unusual situation where lead isn't doing the job for you then go",
    "start": "2372520",
    "end": "2378040"
  },
  {
    "text": "to VAR but okay I've done the left in the back",
    "start": "2378040",
    "end": "2385640"
  },
  {
    "text": "here oh okay a different question I thought you were asking",
    "start": "2386720",
    "end": "2392240"
  },
  {
    "text": "ah oh gee",
    "start": "2392240",
    "end": "2397319"
  },
  {
    "text": "so there's an active programming language Community uh particularly academic programming languages uh so I",
    "start": "2399720",
    "end": "2407920"
  },
  {
    "text": "try to keep up on all that stuff um you know I I guess if just in the",
    "start": "2407920",
    "end": "2415000"
  },
  {
    "text": "broadest sense you just have to be kind of be a programming language geek and follow that stuff uh things new ideas",
    "start": "2415000",
    "end": "2422960"
  },
  {
    "text": "take a fairly long time to kind of germinate and become prac itical to the level where they might go in the",
    "start": "2422960",
    "end": "2429040"
  },
  {
    "text": "JavaScript but they eventually get there was one more here I think yeah you",
    "start": "2429040",
    "end": "2435040"
  },
  {
    "text": "on the right yeah by the yeah yeah yeah oh when does it leave um so it",
    "start": "2435040",
    "end": "2443280"
  },
  {
    "text": "takes it actually takes about three months to go through the bureaucracy of",
    "start": "2443280",
    "end": "2449119"
  },
  {
    "text": "making something a standard so the idea that it it it's kind of anointed as a",
    "start": "2449119",
    "end": "2454760"
  },
  {
    "text": "standard in June which means that that the actual document needs to be complete",
    "start": "2454760",
    "end": "2460839"
  },
  {
    "text": "in March and to be complete in March sort of really all the the final",
    "start": "2460839",
    "end": "2467040"
  },
  {
    "text": "decisions have to be made in January and in fact in January there was",
    "start": "2467040",
    "end": "2472480"
  },
  {
    "text": "a tc39 meeting and that's where you know that final calling to the list was done",
    "start": "2472480",
    "end": "2478240"
  },
  {
    "text": "it says yeah exponentiation is ready yes uh array includes is ready no all these",
    "start": "2478240",
    "end": "2484560"
  },
  {
    "text": "other things are out so so sort of kind of in January of each year you would",
    "start": "2484560",
    "end": "2490200"
  },
  {
    "text": "expect uh determination of what's going to be in what's going to be out and the actual finished document would be out in",
    "start": "2490200",
    "end": "2498160"
  },
  {
    "text": "June okay uh we're really out of time here but I think we're up against a break so um was there anything else any",
    "start": "2498160",
    "end": "2507800"
  },
  {
    "text": "others yeah right here in the middle yeah so so it's actually allowed people",
    "start": "2507800",
    "end": "2515200"
  },
  {
    "text": "to be exposed and used um new features much faster so that's really good and it's actually provided a",
    "start": "2515200",
    "end": "2521319"
  },
  {
    "text": "way uh in some cases to actually get feedback on on those features so that's that's that's really really good and the",
    "start": "2521319",
    "end": "2528119"
  },
  {
    "text": "fact that people are using them I think are actually driving browsers to implement things faster than maybe they",
    "start": "2528119",
    "end": "2534760"
  },
  {
    "text": "wouldn't have otherwise uh the one downside of it is sometimes transpilers Implement features kind of early in the",
    "start": "2534760",
    "end": "2542480"
  },
  {
    "text": "in the cycle and things change because you know when things are in these early",
    "start": "2542480",
    "end": "2547760"
  },
  {
    "text": "stages of development PCU 39 can't make any promises",
    "start": "2547760",
    "end": "2552800"
  },
  {
    "text": "about uh not making changes or even that a feature will ever ultimately make it",
    "start": "2552800",
    "end": "2557880"
  },
  {
    "text": "to the end of the process okay so I'll be around happy to",
    "start": "2557880",
    "end": "2563480"
  },
  {
    "text": "answer any questions or anything or argue about stuff or what have you so uh thanks for coming",
    "start": "2563480",
    "end": "2569540"
  },
  {
    "text": "[Applause]",
    "start": "2569540",
    "end": "2578290"
  }
]