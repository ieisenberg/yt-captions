[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "7980"
  },
  {
    "text": "if you believe that if you believe what you hear if you believe what everybody is saying enterprise Android is just",
    "start": "7980",
    "end": "14289"
  },
  {
    "text": "about to happen okay so so you know the days when when when you went out and",
    "start": "14289",
    "end": "20890"
  },
  {
    "text": "made a hundred thousand dollars writing an iOS app you know an iOS game or",
    "start": "20890",
    "end": "27279"
  },
  {
    "text": "something like that are probably behind us and what's ahead",
    "start": "27279",
    "end": "33160"
  },
  {
    "text": "though is is things like this I mean this is just a random sample of a random",
    "start": "33160",
    "end": "38860"
  },
  {
    "text": "collection of stuff that I found just by querying for enterprise mobile it seems",
    "start": "38860",
    "end": "45490"
  },
  {
    "text": "that the all sorts of people are predicting that that's just though it's sort of inaudible inevitable that's the",
    "start": "45490",
    "end": "51970"
  },
  {
    "text": "way it's going and I've always said that the big the big place for Android is not",
    "start": "51970",
    "end": "57480"
  },
  {
    "text": "or a huge place for Android it's not so much your phone I mean that's nice and",
    "start": "57480",
    "end": "63250"
  },
  {
    "text": "all but the place that you're gonna see Android all over the place is he's OEM devices when the FedEx guy",
    "start": "63250",
    "end": "69010"
  },
  {
    "text": "shows up at your door and you have to sign something that's going to be an Android tablet and when a waiter comes",
    "start": "69010",
    "end": "76210"
  },
  {
    "text": "over to your table and wants to run a card through something that's going to be an Android device I mean they're",
    "start": "76210",
    "end": "83020"
  },
  {
    "text": "gonna be all over the place all the quiet things all the ones that you don't talk to so much those are going to be",
    "start": "83020",
    "end": "89740"
  },
  {
    "text": "Android devices and Android and the",
    "start": "89740",
    "end": "96700"
  },
  {
    "start": "94000",
    "end": "94000"
  },
  {
    "text": "enterprise is making people nervous so there are all sorts of reasons that just mobile just mobile stuff in business",
    "start": "96700",
    "end": "104680"
  },
  {
    "text": "makes people nervous there's the whole bring-your-own-device problem as I say",
    "start": "104680",
    "end": "109870"
  },
  {
    "text": "here let's not even talk about security people are scared to death about security decentralizing the business",
    "start": "109870",
    "end": "118420"
  },
  {
    "text": "this one is huge of course is that the load on IT if you can bring your own device than IT is going to have to at",
    "start": "118420",
    "end": "124990"
  },
  {
    "text": "least either support it or figure out how to tell you that they're not supporting it or something like that ok",
    "start": "124990",
    "end": "130779"
  },
  {
    "text": "so it's it's a big deal I think its developers though we have an",
    "start": "130779",
    "end": "138830"
  },
  {
    "text": "additional problem I think that as we ask the mobile crew meets the the",
    "start": "138830",
    "end": "148010"
  },
  {
    "text": "back-end service crew there's gonna be a clash there's going to be a style issue",
    "start": "148010",
    "end": "155019"
  },
  {
    "text": "okay which I sort of tried to express",
    "start": "155019",
    "end": "160190"
  },
  {
    "text": "here with you know this guy who has a master's degree in science and our",
    "start": "160190",
    "end": "165440"
  },
  {
    "text": "skateboard Punk over there mobile looks at the world differently the mobile",
    "start": "165440",
    "end": "171769"
  },
  {
    "text": "mobile developers have a different experience even Java mobile developers and even now that mobile has been tamed",
    "start": "171769",
    "end": "178360"
  },
  {
    "text": "to the point that it is tamed in Android how many of you had to work on j2me you",
    "start": "178360",
    "end": "187040"
  },
  {
    "text": "know I'm really sorry it just told me apologize to you guys I mean that was",
    "start": "187040",
    "end": "192049"
  },
  {
    "text": "awful right and and there were worse things around okay Android is fairly",
    "start": "192049",
    "end": "197510"
  },
  {
    "text": "tame compared to that stuff so here are some things that web service developers",
    "start": "197510",
    "end": "204079"
  },
  {
    "start": "201000",
    "end": "201000"
  },
  {
    "text": "take for granted an incredibly rich source of open source frameworks okay",
    "start": "204079",
    "end": "210530"
  },
  {
    "text": "we've got everybody it seems to me that jerk virtually everybody who's ever written a web service has written a web",
    "start": "210530",
    "end": "217489"
  },
  {
    "text": "service framework right there are a million web service frameworks out there there are great things like spring and",
    "start": "217489",
    "end": "224299"
  },
  {
    "text": "hibernate there's all this stuff sitting around that that as a Java developer",
    "start": "224299",
    "end": "232280"
  },
  {
    "text": "your main job isn't to know a language or even the library that belongs to Java",
    "start": "232280",
    "end": "238130"
  },
  {
    "text": "anymore your main job is to understand that the environment of frameworks what",
    "start": "238130",
    "end": "244250"
  },
  {
    "text": "frameworks there are and how to use them nearly every web web service developer",
    "start": "244250",
    "end": "251090"
  },
  {
    "text": "takes for granted an AR DBMS and that's a big deal because it means that for",
    "start": "251090",
    "end": "257299"
  },
  {
    "text": "instance there's such a thing as a global singleton there's a way to lock there's a way to say",
    "start": "257299",
    "end": "264380"
  },
  {
    "text": "across all of the instances that power your your web UI there's a way to grab a",
    "start": "264380",
    "end": "270860"
  },
  {
    "text": "single lock okay because it's the database that in the",
    "start": "270860",
    "end": "275930"
  },
  {
    "text": "real in the big things the things Amazon and Twitter and Google and people like that that's not necessarily the case",
    "start": "275930",
    "end": "281750"
  },
  {
    "text": "okay there they outgrow Oracle or something like that but a lot of us still think in terms of it's possible to",
    "start": "281750",
    "end": "288890"
  },
  {
    "text": "grab put a lock on that row in the table and all of the instances no matter how many there are believe that that thing",
    "start": "288890",
    "end": "295850"
  },
  {
    "text": "is locked unit testing okay the unit",
    "start": "295850",
    "end": "302240"
  },
  {
    "text": "testing is just part of the of developing now it's just part of the deal and this one is kind of fun if",
    "start": "302240",
    "end": "312410"
  },
  {
    "text": "you've got a rack if you've got a rack mounted server back in your off back in your your somewhere what you want is you",
    "start": "312410",
    "end": "323990"
  },
  {
    "text": "want that thing running at 100% CPU all the time that's what it means to be optimally used right god forbid my",
    "start": "323990",
    "end": "332090"
  },
  {
    "text": "optimally used for my phone is that the CPU never runs okay if the CPU never",
    "start": "332090",
    "end": "338090"
  },
  {
    "text": "executed a cycle it would be best because the most expensive thing on there is the battery things mobile",
    "start": "338090",
    "end": "347450"
  },
  {
    "start": "346000",
    "end": "346000"
  },
  {
    "text": "developers take for granted so first of all networks are unreliable we're pretty",
    "start": "347450",
    "end": "353000"
  },
  {
    "text": "much used to believing a lot of us are pretty much used to believing that a network is just sort of an extension of",
    "start": "353000",
    "end": "358130"
  },
  {
    "text": "your computer okay the stuffin on the network is just always there okay and",
    "start": "358130",
    "end": "363290"
  },
  {
    "text": "and mobile developers know that's not the case you can start to do something just as you go through a tunnel and",
    "start": "363290",
    "end": "369100"
  },
  {
    "text": "that's that furthermore the OS is unreliable and finally the hardware is",
    "start": "369100",
    "end": "375500"
  },
  {
    "text": "unreliable Hey mobile developers are mobile developers work in an environment where you can't",
    "start": "375500",
    "end": "382550"
  },
  {
    "text": "count on anything where everything is about details it's about this works this time on this device that works that time on that",
    "start": "382550",
    "end": "389450"
  },
  {
    "text": "device right there's actually some common ground I",
    "start": "389450",
    "end": "396429"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "believe so for us Android developers an",
    "start": "396429",
    "end": "401499"
  },
  {
    "text": "activity is a servlet it really is it is exactly a servlet it has the same life",
    "start": "401499",
    "end": "407619"
  },
  {
    "text": "cycle it has the same responsibilities it's just a servlet we can talk to each",
    "start": "407619",
    "end": "415779"
  },
  {
    "text": "other about this an activity fills that role developers on both sides have to",
    "start": "415779",
    "end": "422679"
  },
  {
    "text": "deal with the life cycles of manage op managed objects objects come and go one of the biggest problems in android one",
    "start": "422679",
    "end": "428949"
  },
  {
    "text": "of the things that's hardest for people to get used to is that that they're they",
    "start": "428949",
    "end": "433990"
  },
  {
    "text": "don't have an application they have an activity or a service or something like that and that service can go away",
    "start": "433990",
    "end": "439330"
  },
  {
    "text": "without without much notification well anybody who's dealt with j2ee is totally",
    "start": "439330",
    "end": "446860"
  },
  {
    "text": "familiar with that ok so that's a something that we share concurrency is",
    "start": "446860",
    "end": "453550"
  },
  {
    "text": "in your face in both environments and testing is painful in both environments any place where you have a container",
    "start": "453550",
    "end": "459879"
  },
  {
    "text": "where you have to work in a container testing is a pain so what I'd like to do",
    "start": "459879",
    "end": "467979"
  },
  {
    "text": "for the rest of this talk as I'd like to I'd like to pick a couple of things that",
    "start": "467979",
    "end": "473589"
  },
  {
    "text": "have appeared that have that challenged me when I started doing this I took the",
    "start": "473589",
    "end": "481059"
  },
  {
    "text": "wrong path right and I ended up doubling back and and doing it a different way",
    "start": "481059",
    "end": "487679"
  },
  {
    "text": "right and maybe I can save you some time there's a what is it a friend of mine",
    "start": "487679",
    "end": "495909"
  },
  {
    "text": "once told me and I don't know if this is a fact or not that that's a there's a sign on the wall of Carleton College and",
    "start": "495909",
    "end": "502059"
  },
  {
    "text": "the gates to Carleton College that says learn from the mistakes of others you can't possibly live long enough to make",
    "start": "502059",
    "end": "507759"
  },
  {
    "text": "them all yourself right for what it's worth so what I'd like to do here is I'd",
    "start": "507759",
    "end": "514388"
  },
  {
    "text": "like to pick these three things and I'd like to do I'd like to do deep dives in",
    "start": "514389",
    "end": "521620"
  },
  {
    "text": "just a couple of places in each of them ok I'm not",
    "start": "521620",
    "end": "526700"
  },
  {
    "text": "going to present either an overview of any of them or detailed implementations",
    "start": "526700",
    "end": "532700"
  },
  {
    "text": "of any of them I'm going to pick and choose the things that I thought were in either painful or interesting okay so if",
    "start": "532700",
    "end": "542570"
  },
  {
    "text": "this seems like a hodgepodge it's because it is so my first suggestion is",
    "start": "542570",
    "end": "550880"
  },
  {
    "start": "547000",
    "end": "547000"
  },
  {
    "text": "that you just get over it and embrace cursors okay so if you come from Web",
    "start": "550880",
    "end": "556970"
  },
  {
    "text": "Services the first thing you're going to do is and you hear that you have to deal with data the first thing you're going",
    "start": "556970",
    "end": "562610"
  },
  {
    "text": "to look for is some kind of ORS some kind of object relational mapping software hibernate or something like",
    "start": "562610",
    "end": "568640"
  },
  {
    "text": "that the baddest there are a bunch of them around they exist for Android my",
    "start": "568640",
    "end": "574610"
  },
  {
    "text": "advice pay no attention just use the cursor so here are some reasons here's",
    "start": "574610",
    "end": "587420"
  },
  {
    "start": "583000",
    "end": "583000"
  },
  {
    "text": "some reasons that I suggest this first of all it's the simplest thing to do",
    "start": "587420",
    "end": "592550"
  },
  {
    "text": "okay a cursor is already there the cursor cursor is already sitting there",
    "start": "592550",
    "end": "598400"
  },
  {
    "text": "it's already pretty amazing it works across processes and things like that",
    "start": "598400",
    "end": "603740"
  },
  {
    "text": "just use it the second argument is the cursor loader the cursor loader is a man",
    "start": "603740",
    "end": "611600"
  },
  {
    "text": "is a fantastic way to get data into your application quickly and easily okay it",
    "start": "611600",
    "end": "617510"
  },
  {
    "text": "works you don't have to worry about managing it and stuff like that it just works a cursor loader depends will",
    "start": "617510",
    "end": "626450"
  },
  {
    "text": "return you a cursor okay it won't return you some it won't return you some you",
    "start": "626450",
    "end": "633920"
  },
  {
    "text": "know ORM tool it will return you a cursor use it a ListView puts the cursor",
    "start": "633920",
    "end": "641210"
  },
  {
    "text": "right up against the glass okay you hand a ListView you hand its adapter a cursor",
    "start": "641210",
    "end": "648980"
  },
  {
    "text": "adapter a simple simple cursor adapter you hand it the cursor it's right up at",
    "start": "648980",
    "end": "654260"
  },
  {
    "text": "the glass that means does that is to say that all the way from the back end all the way from the database",
    "start": "654260",
    "end": "659960"
  },
  {
    "text": "clear to the glass Android is already thinking in terms of cursors content observers",
    "start": "659960",
    "end": "669580"
  },
  {
    "text": "content observers make life really simple when you use when you want to get",
    "start": "669580",
    "end": "676100"
  },
  {
    "text": "updates when you use this second technique I'll describe in a minute",
    "start": "676100",
    "end": "682520"
  },
  {
    "text": "especially when the data set underneath a cursor updates you can get",
    "start": "682520",
    "end": "688850"
  },
  {
    "text": "notifications really really simply using content a Content observer on a cursor",
    "start": "688850",
    "end": "694970"
  },
  {
    "text": "and finally the cursor works across processed boundaries exactly the same",
    "start": "694970",
    "end": "701120"
  },
  {
    "text": "code the code that you write in your activity to load information from a database",
    "start": "701120",
    "end": "708230"
  },
  {
    "text": "works whether that database is part of your process are part of somebody else's",
    "start": "708230",
    "end": "714310"
  },
  {
    "text": "the big arguments against a cursor are that the mutable row pointer okay it's",
    "start": "714310",
    "end": "720110"
  },
  {
    "text": "it's a pain in the neck that somebody can move the pointer around on you if you if you ever want to see really",
    "start": "720110",
    "end": "725540"
  },
  {
    "text": "really interesting bugs in your view binder which is part of a list view in",
    "start": "725540",
    "end": "730910"
  },
  {
    "text": "the view binder move the row pointer okay move that you you have access to",
    "start": "730910",
    "end": "739040"
  },
  {
    "text": "the cursor just move the road pointer boy is that awful okay so you need you",
    "start": "739040",
    "end": "746390"
  },
  {
    "text": "need some sort of protocol for managing that row pointer the second problem with",
    "start": "746390",
    "end": "751930"
  },
  {
    "text": "with cursors is that they're not thread safe okay so so if you're going to pass",
    "start": "751930",
    "end": "757040"
  },
  {
    "text": "them around across threads you need to do something I have a suggestion here",
    "start": "757040",
    "end": "767180"
  },
  {
    "start": "765000",
    "end": "765000"
  },
  {
    "text": "this isn't the first of my deep ties I have a suggestion I suggest that you",
    "start": "767180",
    "end": "772580"
  },
  {
    "text": "that that if you need it in the in those",
    "start": "772580",
    "end": "778670"
  },
  {
    "text": "circumstances where you are not passing the cursor directly to a ListView and",
    "start": "778670",
    "end": "784060"
  },
  {
    "text": "simply viewing it which is mostly what you will probably do in those cases",
    "start": "784060",
    "end": "790450"
  },
  {
    "text": "where you need to do some calculation or you know you need to do computation on",
    "start": "790450",
    "end": "795840"
  },
  {
    "text": "stuff that's in the cursor that you wrap the cursor with a really simple wrapper that it provides you with getter",
    "start": "795840",
    "end": "802410"
  },
  {
    "text": "semantics and restricts access to the to the row pointer and the cursor so I'm",
    "start": "802410",
    "end": "808710"
  },
  {
    "text": "not saying that this is a solution this is a general solution okay in particular it doesn't handle and too",
    "start": "808710",
    "end": "816420"
  },
  {
    "text": "many relationships okay it doesn't handle the case where you where an ORM",
    "start": "816420",
    "end": "821700"
  },
  {
    "text": "would return a list okay it doesn't do that and it's still not thread safe but",
    "start": "821700",
    "end": "827730"
  },
  {
    "text": "it is kind of neat so here's an example this is this is how you would use this",
    "start": "827730",
    "end": "835170"
  },
  {
    "start": "830000",
    "end": "830000"
  },
  {
    "text": "this tool to wrap a cursor the the constructor takes as arguments it takes",
    "start": "835170",
    "end": "843420"
  },
  {
    "text": "the cursor that you're going to wrap as its argument to the super constructor it",
    "start": "843420",
    "end": "848970"
  },
  {
    "text": "passes that cursor and a list of the names of columns that that cursor might",
    "start": "848970",
    "end": "856350"
  },
  {
    "text": "contain in this particular case what you see here is these are are all of the",
    "start": "856350",
    "end": "862080"
  },
  {
    "text": "column names from the contract okay so the content provider publishes a",
    "start": "862080",
    "end": "867900"
  },
  {
    "text": "contract that contract has the names of a bunch of columns in it you simply put",
    "start": "867900",
    "end": "874440"
  },
  {
    "text": "all those columns here in the constructor and then you write your getters and together simply get back the",
    "start": "874440",
    "end": "883470"
  },
  {
    "text": "values from those columns in use you",
    "start": "883470",
    "end": "889410"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "this is unnecessarily sparse I think but",
    "start": "889410",
    "end": "896730"
  },
  {
    "text": "the point is that if the top if the container if the outside the top layer",
    "start": "896730",
    "end": "903360"
  },
  {
    "text": "holds access to the cursor and it's the only one that fiddles with a",
    "start": "903360",
    "end": "908640"
  },
  {
    "text": "cursor:pointer and you use the wrapper to manage the cursor everywhere else",
    "start": "908640",
    "end": "916800"
  },
  {
    "text": "most things that you do are safe okay it's still not thread safe but most of",
    "start": "916800",
    "end": "922170"
  },
  {
    "text": "the things that will happen inside there are safe because nobody can get at that row point",
    "start": "922170",
    "end": "927300"
  },
  {
    "text": "nobody is actually looking at the cursor and they're using standard getter and getter semantics to get stuff out and",
    "start": "927300",
    "end": "936740"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "here's the base class oh it does is it",
    "start": "936740",
    "end": "942390"
  },
  {
    "text": "builds it builds a map so it walks through the cursor so it has to do this",
    "start": "942390",
    "end": "947640"
  },
  {
    "text": "at at runtime it has to each cursor contains different",
    "start": "947640",
    "end": "953070"
  },
  {
    "text": "things and may contain the columns in different orders and so on so it has to take the cursor walk through it and for",
    "start": "953070",
    "end": "960420"
  },
  {
    "text": "each of the arguments that you passed here it has to see if that column is in",
    "start": "960420",
    "end": "966329"
  },
  {
    "text": "the is in the cursor and then it just provides a way to ask for the index that",
    "start": "966329",
    "end": "972420"
  },
  {
    "text": "corresponds to a column name you probably have to do that anyway",
    "start": "972420",
    "end": "978420"
  },
  {
    "text": "this doesn't cost anything you have to compute that column index you have to",
    "start": "978420",
    "end": "985200"
  },
  {
    "text": "compute the column index for the cursor name anyway so you might so this may be",
    "start": "985200",
    "end": "991829"
  },
  {
    "text": "excessive in that it can it computes more column name indices than you actually need but it's two or three the only real",
    "start": "991829",
    "end": "999120"
  },
  {
    "text": "expense is getting the thing out of the map I suggested I suggested so Mike I've",
    "start": "999120",
    "end": "1015529"
  },
  {
    "text": "just shown one way to sort of ease the to make cursor access a little prettier",
    "start": "1015529",
    "end": "1022790"
  },
  {
    "text": "and I suggest that that the point of one",
    "start": "1022790",
    "end": "1028790"
  },
  {
    "text": "of the reasons for daos and so on is to abstract cursors away okay in your in in",
    "start": "1028790",
    "end": "1037400"
  },
  {
    "text": "your web services people wrote programs and they want to abstract the idea that you're dealing with a sequel database",
    "start": "1037400",
    "end": "1044058"
  },
  {
    "text": "they want to abstract it away so they decided so that that I mean the",
    "start": "1044059",
    "end": "1051290"
  },
  {
    "text": "direction that they took was say okay we'll hide the cursors cursors are",
    "start": "1051290",
    "end": "1057320"
  },
  {
    "text": "inherently database objects let's hide them my suggestion is that you take a",
    "start": "1057320",
    "end": "1062930"
  },
  {
    "text": "different tack on this and you think of a cursor as a relation okay relations are well-defined they're well",
    "start": "1062930",
    "end": "1069800"
  },
  {
    "text": "understood they're easy to explain and they're good abstraction for data a cursor is a relation use it as your",
    "start": "1069800",
    "end": "1078320"
  },
  {
    "text": "abstraction just go ahead and use it and",
    "start": "1078320",
    "end": "1084770"
  },
  {
    "text": "what's next well next is that networks are data if you're going to do",
    "start": "1084770",
    "end": "1093410"
  },
  {
    "text": "enterprise Android you really owe it to yourself to look at this 2010 talk I",
    "start": "1093410",
    "end": "1099760"
  },
  {
    "text": "think his name is dope dope John ski",
    "start": "1099760",
    "end": "1105220"
  },
  {
    "text": "it's a brilliant talk although it might take two or three times through it to",
    "start": "1105220",
    "end": "1111560"
  },
  {
    "text": "understand it and what I hope to do in",
    "start": "1111560",
    "end": "1116720"
  },
  {
    "text": "the next 15 minutes is is help it is",
    "start": "1116720",
    "end": "1124310"
  },
  {
    "text": "help out with that okay so when you go back and look at his talk it might be a",
    "start": "1124310",
    "end": "1130430"
  },
  {
    "text": "little bit easier to understand after listening to this if there's a key to",
    "start": "1130430",
    "end": "1135440"
  },
  {
    "text": "this to what I'm saying here today it is this okay this is the heart of enterprise Android",
    "start": "1135440",
    "end": "1141860"
  },
  {
    "text": "this is the thing you have to do right",
    "start": "1141860",
    "end": "1145720"
  },
  {
    "text": "so the point here is that it's a figure eight is that the UI never ever ever",
    "start": "1149050",
    "end": "1156620"
  },
  {
    "text": "talks to the network the UI only talks",
    "start": "1156620",
    "end": "1161780"
  },
  {
    "text": "to a local cache which is a combination of a service and a content provider and",
    "start": "1161780",
    "end": "1167110"
  },
  {
    "text": "then this thing you see with the network",
    "start": "1167110",
    "end": "1172690"
  },
  {
    "start": "1177000",
    "end": "1177000"
  },
  {
    "text": "here's what outbound processing looks like so the user changes state for",
    "start": "1177910",
    "end": "1184580"
  },
  {
    "text": "example consider contacts or something contacts that are synced to the to the network right so the user changes",
    "start": "1184580",
    "end": "1192890"
  },
  {
    "text": "somebody's phone number okay and trying",
    "start": "1192890",
    "end": "1198260"
  },
  {
    "text": "not to say async task here because I'm gonna be all over them in a minute but",
    "start": "1198260",
    "end": "1204100"
  },
  {
    "text": "but the state changes so what happens next so the the activity is the thing that's",
    "start": "1204100",
    "end": "1211790"
  },
  {
    "text": "responsible it's the controller it handles the state and what does it do it calls the service helper it makes a",
    "start": "1211790",
    "end": "1220520"
  },
  {
    "text": "method call like change contact telephone number okay it's a perfectly",
    "start": "1220520",
    "end": "1227060"
  },
  {
    "text": "standard method call nothing nothing tricky right it doesn't have to think",
    "start": "1227060",
    "end": "1233150"
  },
  {
    "text": "about an async task it doesn't have to think about any of that stuff it makes a straightforward method call to do what",
    "start": "1233150",
    "end": "1239840"
  },
  {
    "text": "it wants done the service helper converts that method call into an intent",
    "start": "1239840",
    "end": "1247210"
  },
  {
    "text": "now there's a really straightforward way to do that and I'll show you in a minute what that is but an intent simply exit",
    "start": "1247210",
    "end": "1254810"
  },
  {
    "text": "if you look at an intent you can see it as a method call it's got a name which",
    "start": "1254810",
    "end": "1262430"
  },
  {
    "text": "is the operation that you want performed and then a way to add parameters to it and a way to get back a response which",
    "start": "1262430",
    "end": "1272540"
  },
  {
    "text": "that's the trickiest part but all this does all the service helper does is convert from the method call into an",
    "start": "1272540",
    "end": "1279230"
  },
  {
    "text": "intent it's a very simple piece of code it fires that intent off to this service",
    "start": "1279230",
    "end": "1286120"
  },
  {
    "text": "the service is there because it is the context in which everything beneath runs",
    "start": "1286120",
    "end": "1292210"
  },
  {
    "text": "that is to say it is the context in which all of this stuff happens the",
    "start": "1292210",
    "end": "1305240"
  },
  {
    "text": "processor is the hard part the processor does two things first marks the record",
    "start": "1305240",
    "end": "1312770"
  },
  {
    "text": "marks the corresponding record in the content provider as dirty and then fires",
    "start": "1312770",
    "end": "1318560"
  },
  {
    "text": "off a request that will sync enough synchronize it up one of the great",
    "start": "1318560",
    "end": "1324650"
  },
  {
    "text": "things about this is that the dirty marker is in the content provider you",
    "start": "1324650",
    "end": "1332090"
  },
  {
    "text": "can reflect the complete state to your user at any time your ListView for",
    "start": "1332090",
    "end": "1340520"
  },
  {
    "text": "whatever is in this content provider for instance your contacts can ship for",
    "start": "1340520",
    "end": "1345590"
  },
  {
    "text": "instance show this guy in italic saying this guy is dirty okay your state is",
    "start": "1345590",
    "end": "1350870"
  },
  {
    "text": "different than the network state and that can persist for months right you",
    "start": "1350870",
    "end": "1356660"
  },
  {
    "text": "can show because because the dirtiness because the state is in the content",
    "start": "1356660",
    "end": "1363020"
  },
  {
    "text": "provider you can reflect it to the user finally the rest method is an analogue",
    "start": "1363020",
    "end": "1370340"
  },
  {
    "text": "of the service helper the rest method simply translates a method call by the",
    "start": "1370340",
    "end": "1375980"
  },
  {
    "text": "processor which says update the telephone number on the network into a",
    "start": "1375980",
    "end": "1381590"
  },
  {
    "text": "rest call that does that",
    "start": "1381590",
    "end": "1384880"
  },
  {
    "text": "inbound processing works nearly the same way so the network data changes state",
    "start": "1388060",
    "end": "1395830"
  },
  {
    "text": "and that can be a number of possibilities either the request the",
    "start": "1395830",
    "end": "1400960"
  },
  {
    "text": "processor sent out gets a response I've updated that record or you get a GCM",
    "start": "1400960",
    "end": "1408730"
  },
  {
    "text": "call or worst of all you have to pull now if you don't control the server you",
    "start": "1408730",
    "end": "1414610"
  },
  {
    "text": "might have to pull there are good ways to pull and bad ways to Paul always always Paul are better than getting push",
    "start": "1414610",
    "end": "1422410"
  },
  {
    "text": "but sometimes you have to do it so the rest method calls the processor with the",
    "start": "1422410",
    "end": "1428740"
  },
  {
    "text": "state change the processor updates the content provider and yes that caused a",
    "start": "1428740",
    "end": "1437020"
  },
  {
    "text": "real change your app finds out about it the UI finds out about it because it has",
    "start": "1437020",
    "end": "1443530"
  },
  {
    "text": "registered a Content observer is that is",
    "start": "1443530",
    "end": "1449290"
  },
  {
    "text": "that pretty clear so one of the things that that mr. John Key says in his",
    "start": "1449290",
    "end": "1458490"
  },
  {
    "text": "presentation is that he's not going to show you code and he's hope he hopes you're glad about that so I'm gonna show",
    "start": "1458490",
    "end": "1464770"
  },
  {
    "text": "you code and I hope you're glad about that um so the case for this",
    "start": "1464770",
    "end": "1473260"
  },
  {
    "start": "1468000",
    "end": "1468000"
  },
  {
    "text": "architecture it's it's dramatically simple the dramatically simpler I I've",
    "start": "1473260",
    "end": "1479980"
  },
  {
    "text": "spent I've spent maybe a year working on developing researching async tasks in",
    "start": "1479980",
    "end": "1488800"
  },
  {
    "text": "and how to make them work and what to do with them and they get they get bizarrely complex they can get bizarrely",
    "start": "1488800",
    "end": "1496450"
  },
  {
    "text": "complex and not only that but but stuff that stuff that should be stuff that",
    "start": "1496450",
    "end": "1506380"
  },
  {
    "text": "applies to all of your async tasks gets distributed across each of them okay",
    "start": "1506380",
    "end": "1512620"
  },
  {
    "text": "it's hard it's hard to build async task frameworks it's hard to build a",
    "start": "1512620",
    "end": "1517870"
  },
  {
    "text": "framework that underlies your async tasks okay it's hard to abstract things out of",
    "start": "1517870",
    "end": "1524710"
  },
  {
    "text": "your async tasks you end up with these tremendously complex async tasks that do",
    "start": "1524710",
    "end": "1529840"
  },
  {
    "text": "such things as retries right which is it's just horrible or when they fail",
    "start": "1529840",
    "end": "1536680"
  },
  {
    "text": "they try to post a toast or put something in the status bar or something like that",
    "start": "1536680",
    "end": "1542250"
  },
  {
    "text": "right it's it's awful this architecture almost gets rid of it",
    "start": "1542250",
    "end": "1549400"
  },
  {
    "text": "gets rid of async tasks it basically gets rid of acing tests they're hidden in an intent service yeah so you need to",
    "start": "1549400",
    "end": "1569320"
  },
  {
    "text": "register content observer you it's very easy registering a Content observer on a",
    "start": "1569320",
    "end": "1574810"
  },
  {
    "text": "cursor is really simple and not only that if you do so what I'm saying is",
    "start": "1574810",
    "end": "1579880"
  },
  {
    "text": "it's it just makes it easier okay loaders know how to handle cursors cursors know how to handle content",
    "start": "1579880",
    "end": "1585100"
  },
  {
    "text": "observers okay if you if you aren't gonna use that that really easy path all",
    "start": "1585100",
    "end": "1592000"
  },
  {
    "text": "you have to do is read up on content observers and do you want all you have to do is handle the change um so the",
    "start": "1592000",
    "end": "1602890"
  },
  {
    "text": "downsides of this architecture is that the content provider can be complex in the processor is complex",
    "start": "1602890",
    "end": "1608940"
  },
  {
    "text": "it's tricky so as I said just dumping",
    "start": "1608940",
    "end": "1616750"
  },
  {
    "start": "1613000",
    "end": "1613000"
  },
  {
    "text": "async tasks is a major win the async tasks now live in in the intent service",
    "start": "1616750",
    "end": "1623940"
  },
  {
    "text": "okay this is this is this is a very good thing um who can tell me who knows the",
    "start": "1623940",
    "end": "1635590"
  },
  {
    "text": "two big problems with async tasks what are the two big problems with async tasks",
    "start": "1635590",
    "end": "1641610"
  },
  {
    "text": "the first one is leaking them the first one is that if you have a pointer to an",
    "start": "1641610",
    "end": "1647560"
  },
  {
    "text": "activity from your async task then the activity can't be garbage collected for",
    "start": "1647560",
    "end": "1653590"
  },
  {
    "text": "the lifecycle of the async task okay that means that any time that this",
    "start": "1653590",
    "end": "1659350"
  },
  {
    "text": "async task has a different life cycle than your activity if the act if the",
    "start": "1659350",
    "end": "1664870"
  },
  {
    "text": "async task has a reference to the activity the activity has been leaked okay you've leaked an activity",
    "start": "1664870",
    "end": "1671559"
  },
  {
    "text": "activities are big ugly objects you don't want to leak them the second yeah",
    "start": "1671559",
    "end": "1679020"
  },
  {
    "text": "by exactly that's exactly correct on the",
    "start": "1679440",
    "end": "1686380"
  },
  {
    "text": "other hand if you destroy an async task that is in the middle of handling a retry you've got a problem the second",
    "start": "1686380",
    "end": "1696010"
  },
  {
    "text": "problem with this is is that is it is",
    "start": "1696010",
    "end": "1701170"
  },
  {
    "text": "that when it fails it may have nobody to talk to at worst it will still have a",
    "start": "1701170",
    "end": "1707440"
  },
  {
    "text": "reference to this activity which has been destroyed and it will try to use it and it will crash at best it won't have",
    "start": "1707440",
    "end": "1715630"
  },
  {
    "text": "a reference to anything at all and the failure just goes away my claim is my",
    "start": "1715630",
    "end": "1728860"
  },
  {
    "text": "claim is that it's really hard to implement async tasks correctly okay so",
    "start": "1728860",
    "end": "1735100"
  },
  {
    "text": "in particular one of the things that you can do and I actually have code up on github that'll do this is you can drop",
    "start": "1735100",
    "end": "1741670"
  },
  {
    "text": "the reference to this activity and pick up the reference to this one that's a perfectly legit thing to do",
    "start": "1741670",
    "end": "1746679"
  },
  {
    "text": "but it makes your async task this incredibly stateful thing you can do",
    "start": "1746679",
    "end": "1755260"
  },
  {
    "text": "that you know Godspeed if you do what I'm suggesting",
    "start": "1755260",
    "end": "1760360"
  },
  {
    "text": "is that there are simpler ways to do that that this architecture puts that",
    "start": "1760360",
    "end": "1765460"
  },
  {
    "text": "complexity in one spot and it makes it really clear how it works yes yes yes",
    "start": "1765460",
    "end": "1781120"
  },
  {
    "start": "1778000",
    "end": "1778000"
  },
  {
    "text": "that's that's that's a very that's a great idea yes it's not what I'm doing here but that's a great idea",
    "start": "1781120",
    "end": "1789299"
  },
  {
    "text": "yes and and there is an async task here there is an async task in this",
    "start": "1791790",
    "end": "1798190"
  },
  {
    "text": "implementation and I'll show you where it is in a minute so walking down stack the service helper",
    "start": "1798190",
    "end": "1808000"
  },
  {
    "text": "although one of the things that one of the things that's kind of hard about Duggan skis talk is that he draws this",
    "start": "1808000",
    "end": "1816490"
  },
  {
    "text": "architecture in which all the boxes are the same size okay and the thing is that the service helper",
    "start": "1816490",
    "end": "1822250"
  },
  {
    "text": "the second piece down the stack really is incredibly simple",
    "start": "1822250",
    "end": "1827350"
  },
  {
    "text": "it's an incredibly he is separating these things by separated into their",
    "start": "1827350",
    "end": "1832660"
  },
  {
    "text": "concerns he is separating them architectural II but just because he separates them architectural II doesn't",
    "start": "1832660",
    "end": "1839410"
  },
  {
    "text": "mean there's a huge amount of code that's that comprises each one some of them are very simple in particular this",
    "start": "1839410",
    "end": "1845800"
  },
  {
    "text": "one and this one are very simple the rest method and the service helper so",
    "start": "1845800",
    "end": "1851890"
  },
  {
    "text": "let's walk through this service helper and see what it does so there there are a bunch of operative ways to implement",
    "start": "1851890",
    "end": "1858429"
  },
  {
    "text": "this service helper the service helpers responsibility is to hand this task it's",
    "start": "1858429",
    "end": "1864640"
  },
  {
    "text": "it gets a method call from the activity that says for instance update this contacts telephone number and what it",
    "start": "1864640",
    "end": "1871690"
  },
  {
    "text": "wants to do is it wants to pass that off to a service ok there are a bunch of",
    "start": "1871690",
    "end": "1878530"
  },
  {
    "text": "ways to do that one is you can make that you could bind the service so when the activity wakes up it could bind the",
    "start": "1878530",
    "end": "1883900"
  },
  {
    "text": "service it when it does when it binds the service it gets back in interface and it uses that interface to make calls",
    "start": "1883900",
    "end": "1890470"
  },
  {
    "text": "okay that's perfectly legit another possibility much less legit is",
    "start": "1890470",
    "end": "1896170"
  },
  {
    "text": "that that it can use some kind of communication mechanism that involves broadcast intents okay that's that's",
    "start": "1896170",
    "end": "1902980"
  },
  {
    "text": "entirely possible and it might be useful in a case where you want to do pub/sub okay where when",
    "start": "1902980",
    "end": "1909340"
  },
  {
    "text": "when the service replies or something like that you want lots of pieces of your UI to update right that it would",
    "start": "1909340",
    "end": "1917860"
  },
  {
    "text": "make sense to do a broadcast the one I'm going to show you is the one that is newest to me and the one that I",
    "start": "1917860",
    "end": "1924280"
  },
  {
    "text": "think is sort of simplest and easiest to grasp is doing it with a pending intent this is kind of cool so here's the code",
    "start": "1924280",
    "end": "1932799"
  },
  {
    "text": "I hope you can see it so this is the",
    "start": "1932799",
    "end": "1945610"
  },
  {
    "text": "this is the this is the method in the",
    "start": "1945610",
    "end": "1951640"
  },
  {
    "text": "service helper so that the activity calls this service helper the service",
    "start": "1951640",
    "end": "1957400"
  },
  {
    "text": "helper is a singleton that below that that the activity knows how to find it",
    "start": "1957400",
    "end": "1963400"
  },
  {
    "text": "calls send my request with a bunch of arguments and the current context and itself alright so all that this all of",
    "start": "1963400",
    "end": "1972850"
  },
  {
    "text": "this guy does is build an intent this part is pretty much straightforward the",
    "start": "1972850",
    "end": "1978970"
  },
  {
    "text": "only tricky part here is this thing this create pending result create pending",
    "start": "1978970",
    "end": "1985659"
  },
  {
    "text": "result is a method on activity that creates a pending intent which when it",
    "start": "1985659",
    "end": "1992380"
  },
  {
    "text": "is sent we'll call the activities on handle",
    "start": "1992380",
    "end": "1998610"
  },
  {
    "text": "something on activity result okay so",
    "start": "1998610",
    "end": "2007049"
  },
  {
    "text": "this this method creates a pending intent it creates a little object which",
    "start": "2007049",
    "end": "2015690"
  },
  {
    "text": "when it's send method what is called will first of all even if it is in a",
    "start": "2015690",
    "end": "2022530"
  },
  {
    "text": "different process let alone a different thread from a different process it will",
    "start": "2022530",
    "end": "2028049"
  },
  {
    "text": "change to this activities if that intent will be fired from this activity's",
    "start": "2028049",
    "end": "2033450"
  },
  {
    "text": "process and it will call its on activity",
    "start": "2033450",
    "end": "2038820"
  },
  {
    "text": "result method okay so what we're going to do is we're going to pass this intent",
    "start": "2038820",
    "end": "2045179"
  },
  {
    "text": "as one of the arguments we're going to send it off to the service",
    "start": "2045179",
    "end": "2050388"
  },
  {
    "text": "here's the service so we're walking down the stack that's the service helper or",
    "start": "2052980",
    "end": "2059679"
  },
  {
    "text": "the service helper calls the service here's the service this by the way is",
    "start": "2059680",
    "end": "2066490"
  },
  {
    "text": "where the async task is hidden a normal",
    "start": "2066490",
    "end": "2071679"
  },
  {
    "text": "service doesn't have an on handle intent method it's got an on start method the",
    "start": "2071680",
    "end": "2079389"
  },
  {
    "text": "on start method of an intent service spawns essentially spawns a new say sync",
    "start": "2079390",
    "end": "2085840"
  },
  {
    "text": "task and hands at the intent that async task calls on handle intent with the",
    "start": "2085840",
    "end": "2092169"
  },
  {
    "text": "intent so this method runs on a background thread hey you've gotten this",
    "start": "2092170",
    "end": "2097390"
  },
  {
    "text": "thing so so it is a common",
    "start": "2097390",
    "end": "2102520"
  },
  {
    "text": "misunderstanding probably not in this room that service is run on a different thread services in fact run on the UI",
    "start": "2102520",
    "end": "2109900"
  },
  {
    "text": "thread in general a service runs on the UI thread in order to get things off the UI thread you can use this intent",
    "start": "2109900",
    "end": "2117130"
  },
  {
    "text": "service which gets things run exactly the way you want them it gets them run in order and on a on a thread in a",
    "start": "2117130",
    "end": "2127660"
  },
  {
    "text": "thread pool so this guy process request",
    "start": "2127660",
    "end": "2134890"
  },
  {
    "text": "is the local method that does whatever it needs to do okay this is the brains",
    "start": "2134890",
    "end": "2141280"
  },
  {
    "text": "of this operation it's you know it's an implementation it's your business logic",
    "start": "2141280",
    "end": "2148350"
  },
  {
    "text": "but it is past all of the arguments this",
    "start": "2148350",
    "end": "2154660"
  },
  {
    "text": "guy put all those arguments in here added them as extras with their with",
    "start": "2154660",
    "end": "2160240"
  },
  {
    "text": "their names this guy now gets them out and uses process to process them",
    "start": "2160240",
    "end": "2168660"
  },
  {
    "text": "whatever this thing returns is put into the response with the tag return",
    "start": "2168660",
    "end": "2178680"
  },
  {
    "text": "and then we just send that we said we pride the call back out here right so we",
    "start": "2179430",
    "end": "2191220"
  },
  {
    "text": "put we put this pending intent in with",
    "start": "2191220",
    "end": "2201299"
  },
  {
    "text": "the name call back here we get it back",
    "start": "2201299",
    "end": "2207750"
  },
  {
    "text": "out so this thing is the pending intent and now we just send the pending intent",
    "start": "2207750",
    "end": "2215630"
  },
  {
    "text": "this response is this intent with these extras with with this return value put",
    "start": "2215630",
    "end": "2221910"
  },
  {
    "text": "into it so now we have an intent with the return value in it this does it an",
    "start": "2221910",
    "end": "2229770"
  },
  {
    "text": "intent Fillion that is it copies all that all the stuff from this into the response the pending",
    "start": "2229770",
    "end": "2238799"
  },
  {
    "text": "intent response and this sends it off and now we're back at the service helper",
    "start": "2238799",
    "end": "2247760"
  },
  {
    "text": "so this is the return to this into the service helper the service helpers on",
    "start": "2247760",
    "end": "2254609"
  },
  {
    "text": "activity result method is called as a result of this send causes this method",
    "start": "2254609",
    "end": "2262680"
  },
  {
    "text": "to be called inside that method we caught we use the service helper we just",
    "start": "2262680",
    "end": "2268440"
  },
  {
    "text": "invoked the service help helpers handler response method it gets the result",
    "start": "2268440",
    "end": "2274859"
  },
  {
    "text": "status and pulls the return value of",
    "start": "2274859",
    "end": "2280160"
  },
  {
    "text": "actually this probably should be personable this is really this is this",
    "start": "2280579",
    "end": "2290190"
  },
  {
    "text": "is really neat it's sweet and simple okay there's no binding services there's",
    "start": "2290190",
    "end": "2295980"
  },
  {
    "text": "no worrying about about broadcast intents flying all over the place okay",
    "start": "2295980",
    "end": "2302910"
  },
  {
    "text": "it's really straightforward it's really simple and it's it's frame workable",
    "start": "2302910",
    "end": "2312020"
  },
  {
    "text": "and it's on github so moving down the",
    "start": "2312840",
    "end": "2320710"
  },
  {
    "start": "2314000",
    "end": "2314000"
  },
  {
    "text": "stack the processor is that the processor is the part of this that's hard okay the processor is the thing",
    "start": "2320710",
    "end": "2326290"
  },
  {
    "text": "that has to handle what happens if there are multiple requests outstanding at the",
    "start": "2326290",
    "end": "2332530"
  },
  {
    "text": "same time and so on it has to handle all of that stuff I assert though that it's practically",
    "start": "2332530",
    "end": "2339100"
  },
  {
    "text": "impossible to handle that stuff with an async task if you have an async task and the guy hits the button the guy matches",
    "start": "2339100",
    "end": "2346090"
  },
  {
    "text": "the button and you launch a bunch of these async tasks I mean I found that",
    "start": "2346090",
    "end": "2353440"
  },
  {
    "text": "hard to take care of I found that to be a real pain this it's real easy to",
    "start": "2353440",
    "end": "2358720"
  },
  {
    "text": "handle the processor knows the processor simply records whether whether there's a",
    "start": "2358720",
    "end": "2366910"
  },
  {
    "text": "pending request out to sink this data or not and if there is it doesn't do",
    "start": "2366910",
    "end": "2372940"
  },
  {
    "text": "anything if there isn't it marks it dirty and starts one you do have to",
    "start": "2372940",
    "end": "2381970"
  },
  {
    "text": "manage concurrency there is you know there's all sorts of concurrent stuff happening there's stuff coming in from the top that's concurrent there's stuff",
    "start": "2381970",
    "end": "2388210"
  },
  {
    "text": "coming in from the bottom that's concurrent use transactions liberally",
    "start": "2388210",
    "end": "2393570"
  },
  {
    "text": "watch your database the database it is possible to corrupt the sequel Lite",
    "start": "2393570",
    "end": "2399070"
  },
  {
    "text": "database with concurrent transactions be",
    "start": "2399070",
    "end": "2406000"
  },
  {
    "text": "careful and finally there's the rest method it's not always appropriate but",
    "start": "2406000",
    "end": "2414700"
  },
  {
    "start": "2409000",
    "end": "2409000"
  },
  {
    "text": "if you're if you're actually gonna do this stuff once again I recommend have a look at using a sync adapter a sync",
    "start": "2414700",
    "end": "2422440"
  },
  {
    "text": "adapter isn't always the answer but it's often the answer especially if you have to login okay especially if",
    "start": "2422440",
    "end": "2430000"
  },
  {
    "text": "synchronizing implies logging in first and then synchronizing the sync adapter might be just the right thing and",
    "start": "2430000",
    "end": "2437100"
  },
  {
    "text": "finally this note",
    "start": "2437100",
    "end": "2440550"
  },
  {
    "text": "this is hard to find when I for instance when I had to find it for this lecture I knew it existed but it's hard to dig",
    "start": "2442800",
    "end": "2450270"
  },
  {
    "text": "up it is in the it is in the documentation for default HTTP client it",
    "start": "2450270",
    "end": "2456600"
  },
  {
    "text": "says that if you're using old Android use the Apache client but despite",
    "start": "2456600",
    "end": "2463470"
  },
  {
    "text": "everything you hear everything that you hear to the contrary post gingerbread use the HTTP URL connection yeah it's in",
    "start": "2463470",
    "end": "2473400"
  },
  {
    "text": "the in the docs for default HTTP client ID down and ready to comm dubbed in ski",
    "start": "2473400",
    "end": "2484620"
  },
  {
    "text": "for instance says exactly the opposite but that's because he's on Froyo so the",
    "start": "2484620",
    "end": "2494100"
  },
  {
    "text": "point here is that in the long run a sync tasks are are flawed in that they",
    "start": "2494100",
    "end": "2501330"
  },
  {
    "text": "hide they hide state transition in objects that are ephemeral okay they",
    "start": "2501330",
    "end": "2507600"
  },
  {
    "text": "wrap the entire state transition in something that is gonna go away",
    "start": "2507600",
    "end": "2513620"
  },
  {
    "text": "better is a better idea is to put that",
    "start": "2513620",
    "end": "2519000"
  },
  {
    "text": "kind of put the state transition where it belongs put it in something persistent put it in",
    "start": "2519000",
    "end": "2524160"
  },
  {
    "text": "the database and finally let's talk",
    "start": "2524160",
    "end": "2534510"
  },
  {
    "text": "about embracing content providers I I",
    "start": "2534510",
    "end": "2542310"
  },
  {
    "text": "have a harder time making this Lisi I will I will argue the preceding two things I will argue about with you I",
    "start": "2542310",
    "end": "2550640"
  },
  {
    "text": "will stand my ground on those this one not so much this one I can imagine that",
    "start": "2550640",
    "end": "2556890"
  },
  {
    "text": "just you know taste dictates that you want to do it differently my my belief",
    "start": "2556890",
    "end": "2563400"
  },
  {
    "text": "after I started out what let's see one of the first things that I saw was",
    "start": "2563400",
    "end": "2568880"
  },
  {
    "text": "documentation in in the in the description of content providers that",
    "start": "2568880",
    "end": "2575070"
  },
  {
    "text": "says when you content provided the first thing you need to think is as it says here first",
    "start": "2575070",
    "end": "2580600"
  },
  {
    "text": "thing we need to consider is that if you're not going to share your data you may not need a content provider at all so I spent I wrote 710 applications each",
    "start": "2580600",
    "end": "2589930"
  },
  {
    "text": "one of which had its little Dao that hung in the hung in the application okay just take the Dao hang it in the",
    "start": "2589930",
    "end": "2596800"
  },
  {
    "text": "application anybody who wants it can get it from there okay it's a singleton I end up thinking",
    "start": "2596800",
    "end": "2603820"
  },
  {
    "text": "that's the wrong thing to do I ended up thinking that any Android a content",
    "start": "2603820",
    "end": "2610960"
  },
  {
    "text": "provider is the Dao just use it my",
    "start": "2610960",
    "end": "2621220"
  },
  {
    "text": "reasoning all the arguments for cursor apply all of the things that I said about cursor apply in particular if you",
    "start": "2621220",
    "end": "2628090"
  },
  {
    "text": "look at a cursor loader it works if you look at an async if you look at an async",
    "start": "2628090",
    "end": "2634630"
  },
  {
    "text": "loader you will find that it doesn't okay there's an there's been a bug outstanding for the sense o version",
    "start": "2634630",
    "end": "2643450"
  },
  {
    "text": "eight well no obviously not since honeycomb so for since version 11",
    "start": "2643450",
    "end": "2648870"
  },
  {
    "text": "there's been a bug that causes that that requires you to write a little boolean",
    "start": "2648870",
    "end": "2656710"
  },
  {
    "text": "two-step to make sure that your cursor loads okay that's not in cursor loader",
    "start": "2656710",
    "end": "2662320"
  },
  {
    "text": "cursor loader just works if you write your own subclasses of async task loader you have to there they don't necessarily",
    "start": "2662320",
    "end": "2670840"
  },
  {
    "text": "work you're gonna have to track down that bug and make sure you fix them right and the last thing is that a",
    "start": "2670840",
    "end": "2680980"
  },
  {
    "text": "content provider allows you to publish your data to other tasks to other things",
    "start": "2680980",
    "end": "2689680"
  },
  {
    "text": "and my suggestion is that that's that in the long run that's the Android way right in the Android way is is make your",
    "start": "2689680",
    "end": "2698410"
  },
  {
    "text": "stuff public is let other people use it a lot of other people use it in ways you didn't expect right I think you're gonna",
    "start": "2698410",
    "end": "2704680"
  },
  {
    "text": "want to do that so do it now the problem is that the API is",
    "start": "2704680",
    "end": "2709850"
  },
  {
    "text": "constrained it's a REST API it means you have to get used to the idea that your",
    "start": "2709850",
    "end": "2715550"
  },
  {
    "text": "activities are going to do rest you're the back end of your activity is going",
    "start": "2715550",
    "end": "2720740"
  },
  {
    "text": "to be rest okay the other thing the thing that I find most annoying about it",
    "start": "2720740",
    "end": "2727070"
  },
  {
    "text": "is that batch operations are harder batch operations are tricky trying to do something a lot of things in one",
    "start": "2727070",
    "end": "2732740"
  },
  {
    "text": "transaction is kind of a pain and as I said I admit that this case it's harder to make this case than it is to make the",
    "start": "2732740",
    "end": "2738980"
  },
  {
    "text": "previous two on the other hand it's a chance for me to talk about the query",
    "start": "2738980",
    "end": "2744230"
  },
  {
    "text": "builder which is really cool so if you build a content provider your contract",
    "start": "2744230",
    "end": "2753740"
  },
  {
    "text": "publishes the names of virtual tables with virtual columns in them don't make",
    "start": "2753740",
    "end": "2761420"
  },
  {
    "text": "those the real columns don't make them the real tables that's it's exposing too",
    "start": "2761420",
    "end": "2767810"
  },
  {
    "text": "much information people obviously if you do that people will depend on it and",
    "start": "2767810",
    "end": "2773840"
  },
  {
    "text": "when you change when you change your database structure they'll break okay",
    "start": "2773840",
    "end": "2779650"
  },
  {
    "text": "make sure that they can't ever see the real tables make sure that they can't",
    "start": "2779650",
    "end": "2785060"
  },
  {
    "text": "really see the real column names and the query builder is exactly how to do that",
    "start": "2785060",
    "end": "2792700"
  },
  {
    "text": "so first of all when you get it when when the content provider gets a request it's gonna get the retread request",
    "start": "2793120",
    "end": "2799550"
  },
  {
    "text": "through a URI that URI determines the name of the virtual table so you can use",
    "start": "2799550",
    "end": "2804770"
  },
  {
    "text": "any table you want in fact what you will commonly do or what you may very well do",
    "start": "2804770",
    "end": "2811130"
  },
  {
    "text": "is build a virtual table out of for instance a join of multiple tables okay",
    "start": "2811130",
    "end": "2817840"
  },
  {
    "text": "so you will build a virtual table in response to this query which and you can pick any table you name you want it's",
    "start": "2817840",
    "end": "2824300"
  },
  {
    "text": "not specified in the query all you get is the URL on the other hand the",
    "start": "2824300",
    "end": "2830060"
  },
  {
    "text": "projection is part of the query API so",
    "start": "2830060",
    "end": "2835100"
  },
  {
    "text": "your your clients are going to tell you what columns they want to see and it's",
    "start": "2835100",
    "end": "2840410"
  },
  {
    "text": "tricky to make that work the query builder supports something called a projection map the projection",
    "start": "2840410",
    "end": "2848600"
  },
  {
    "text": "map so if the way you come on a query builder is because you want to build complex sequel queries it appears to be",
    "start": "2848600",
    "end": "2854930"
  },
  {
    "text": "the only way in android to build for instance a join query okay but if that's",
    "start": "2854930",
    "end": "2863270"
  },
  {
    "text": "the way you come on it you're gonna see this projection map and you're gonna wonder what the heck is that thing for",
    "start": "2863270",
    "end": "2869030"
  },
  {
    "text": "and my my guess is that the projection that is that query builder was",
    "start": "2869030",
    "end": "2874220"
  },
  {
    "text": "originally written to support content providers the query that's why the projection map is in there and it",
    "start": "2874220",
    "end": "2880880"
  },
  {
    "text": "happens to do some other things as well right it happens to do joins as well but it was written to support the content",
    "start": "2880880",
    "end": "2886820"
  },
  {
    "text": "provider so the projection map is simply a map of virtual column names to the",
    "start": "2886820",
    "end": "2894680"
  },
  {
    "text": "names that you actually want to use a naive mapping won't work okay and this",
    "start": "2894680",
    "end": "2901850"
  },
  {
    "text": "this query is an example of why so if you naively map your virtual column name",
    "start": "2901850",
    "end": "2908660"
  },
  {
    "text": "to the actual column name right so so your projection map simply contains the virtual column name as the key and the",
    "start": "2908660",
    "end": "2915200"
  },
  {
    "text": "real column name as the value what happens is that for instance it will say",
    "start": "2915200",
    "end": "2920570"
  },
  {
    "text": "it will end up mapping ID it will it will say select real column name because",
    "start": "2920570",
    "end": "2926750"
  },
  {
    "text": "it will replace the virtual column name with the real column name from my table order by virtual column okay",
    "start": "2926750",
    "end": "2935110"
  },
  {
    "text": "so this is nothing anyone knows anything about okay that query will fail you see",
    "start": "2935110",
    "end": "2943940"
  },
  {
    "text": "why this query will fail I didn't make it clear here but what you've done is you replace virtual column in the",
    "start": "2943940",
    "end": "2950150"
  },
  {
    "text": "projection with real column which is the name of the real column in the table but",
    "start": "2950150",
    "end": "2956510"
  },
  {
    "text": "you didn't do it out here you didn't do it anywhere else in this query so if it's in the if it's in the where clause",
    "start": "2956510",
    "end": "2963860"
  },
  {
    "text": "it won't work if it's in the order by clause it won't work on the other hand",
    "start": "2963860",
    "end": "2969530"
  },
  {
    "text": "there is something you can do which is in your",
    "start": "2969530",
    "end": "2974810"
  },
  {
    "text": "in your projection map map the virtual column name - real column as virtual",
    "start": "2974810",
    "end": "2982670"
  },
  {
    "text": "column - the string real column as virtual column ok and this works great",
    "start": "2982670",
    "end": "2989510"
  },
  {
    "text": "so for instance all sequel Lite databases have a column a virtual column",
    "start": "2989510",
    "end": "2997760"
  },
  {
    "text": "called row ID which turns out to be an integer primary key in order to see",
    "start": "2997760",
    "end": "3004180"
  },
  {
    "text": "something in a list view you need an integer primary key called underscore ID",
    "start": "3004180",
    "end": "3009360"
  },
  {
    "text": "well what if your table doesn't have one well it does now so you just map row ID",
    "start": "3009360",
    "end": "3015490"
  },
  {
    "text": "as ID and real column and it's virtual",
    "start": "3015490",
    "end": "3021010"
  },
  {
    "text": "column now this virtual column works I",
    "start": "3021010",
    "end": "3037080"
  },
  {
    "text": "think I think that this works pretty well and and that means they're gonna",
    "start": "3037080",
    "end": "3043540"
  },
  {
    "text": "have to parse everything and not only that but but the sequel Lite is gonna",
    "start": "3043540",
    "end": "3050590"
  },
  {
    "text": "parse it again it seems that it seems like this is sort of the best way to do it so this is what you get you get this",
    "start": "3050590",
    "end": "3058090"
  },
  {
    "text": "is the virtual name this is the virtual name and you map it to the virtual name",
    "start": "3058090",
    "end": "3065860"
  },
  {
    "text": "or the real name as the virtual name and one of the things that you can do here",
    "start": "3065860",
    "end": "3071470"
  },
  {
    "text": "that's pretty cool is this is a completely virtual column this is this",
    "start": "3071470",
    "end": "3077470"
  },
  {
    "text": "is completely made-up right but you can I have this case that I then map as the",
    "start": "3077470",
    "end": "3085380"
  },
  {
    "text": "virtual column name",
    "start": "3085380",
    "end": "3089130"
  },
  {
    "text": "um this is important I didn't mention",
    "start": "3094210",
    "end": "3100099"
  },
  {
    "text": "this but this is important if you are",
    "start": "3100099",
    "end": "3105130"
  },
  {
    "text": "normally the query builder will throw an",
    "start": "3105670",
    "end": "3110900"
  },
  {
    "text": "exception if there is no key map matching the name of a column unless",
    "start": "3110900",
    "end": "3119140"
  },
  {
    "text": "unless the key contains the word as so if the projection says select you know",
    "start": "3119140",
    "end": "3128839"
  },
  {
    "text": "foo as bar that will pass through but if it just says foo and you don't have any",
    "start": "3128839",
    "end": "3135410"
  },
  {
    "text": "column name foo you'll get an exception it's no it's the key it looks for the",
    "start": "3135410",
    "end": "3145220"
  },
  {
    "text": "key so it walks it looks at these things and matches them as teasing in that",
    "start": "3145220",
    "end": "3151640"
  },
  {
    "text": "table right so if it can't find this as a key in your table it's gonna throw it",
    "start": "3151640",
    "end": "3159410"
  },
  {
    "text": "out unless it looks like this in strict mode it doesn't care even if it has an",
    "start": "3159410",
    "end": "3165710"
  },
  {
    "text": "AZ in it this makes you very safe this means that that even even people who",
    "start": "3165710",
    "end": "3173270"
  },
  {
    "text": "guess your implementation can't get through your query builder right they",
    "start": "3173270",
    "end": "3179210"
  },
  {
    "text": "can't pass the real names of your columns through and the query gets dead",
    "start": "3179210",
    "end": "3186020"
  },
  {
    "text": "simple the query gets just completely trivial set strict this by the way this",
    "start": "3186020",
    "end": "3193880"
  },
  {
    "text": "method only this method appears in maybe 13 so it's not available or older",
    "start": "3193880",
    "end": "3200869"
  },
  {
    "text": "versions of the of the API set the projection map set the table run the",
    "start": "3200869",
    "end": "3207619"
  },
  {
    "text": "query it's safe and easy as I say I have",
    "start": "3207619",
    "end": "3215780"
  },
  {
    "text": "a harder time making this argument like I sort of I admit that I even sort of",
    "start": "3215780",
    "end": "3221480"
  },
  {
    "text": "sidestepped it I haven't really made a strong argument for you content providers I think it's the right",
    "start": "3221480",
    "end": "3228700"
  },
  {
    "text": "thing to do though I think the strongest argument for me was that was the cursorloader so what do I want you to",
    "start": "3228700",
    "end": "3239230"
  },
  {
    "start": "3236000",
    "end": "3236000"
  },
  {
    "text": "take away from this so at a high level when you're working with people so you",
    "start": "3239230",
    "end": "3244420"
  },
  {
    "text": "will when you're building enterprise applications it's half yours if you're",
    "start": "3244420",
    "end": "3249910"
  },
  {
    "text": "working in Android it's going to be half yours and half somebody else's okay and not only that but you're gonna get",
    "start": "3249910",
    "end": "3256839"
  },
  {
    "text": "into each other's faces and you're going to start talking about each other's designs be prepared to stand your ground",
    "start": "3256839",
    "end": "3262390"
  },
  {
    "text": "be prepared to know what you're talking about and convince other people to try a",
    "start": "3262390",
    "end": "3267430"
  },
  {
    "text": "new way okay there are things there are things on mobile platforms that honest",
    "start": "3267430",
    "end": "3273579"
  },
  {
    "text": "to god don't look like the back you know look like server servers be prepared to",
    "start": "3273579",
    "end": "3279789"
  },
  {
    "text": "make that case on the other hand also be prepared to try something new yourself",
    "start": "3279789",
    "end": "3288420"
  },
  {
    "text": "Android is not standard Mobile Android works differently Android is the",
    "start": "3288420",
    "end": "3294220"
  },
  {
    "text": "similarities between Android and j2ee are astounding right all the way from",
    "start": "3294220",
    "end": "3300940"
  },
  {
    "text": "from you know life cycles to the difficulty to debug difficulty to test",
    "start": "3300940",
    "end": "3307240"
  },
  {
    "text": "in debug there are things that that people who have done back-end development for years",
    "start": "3307240",
    "end": "3313180"
  },
  {
    "text": "will know about if you come from strictly mobile space be prepared to",
    "start": "3313180",
    "end": "3318759"
  },
  {
    "text": "learn from them don't fear the cursor just go ahead and use it all right go",
    "start": "3318759",
    "end": "3326710"
  },
  {
    "text": "ahead use cursors all over the place invent nice ways to wrap them up but but",
    "start": "3326710",
    "end": "3332799"
  },
  {
    "text": "go ahead and use them in only use async tasks locally don't ever try and do",
    "start": "3332799",
    "end": "3339460"
  },
  {
    "text": "something over the network with an async task it's possible but it's just a bad idea and then some other things that I",
    "start": "3339460",
    "end": "3347950"
  },
  {
    "text": "hope you take away from this or at least have access to the code to do um I",
    "start": "3347950",
    "end": "3353640"
  },
  {
    "text": "proposed a way to wrap a cursor that I think is pretty clever and pretty you",
    "start": "3353640",
    "end": "3359020"
  },
  {
    "text": "I use it a lot depending into using a pending intent for a service callback is",
    "start": "3359020",
    "end": "3365980"
  },
  {
    "text": "very simple it doesn't require binding it doesn't require a IDL it's very",
    "start": "3365980",
    "end": "3372280"
  },
  {
    "text": "simple very easy to implement I recommend it to your attention and",
    "start": "3372280",
    "end": "3377940"
  },
  {
    "text": "finally using the query builder for mapping to map virtual tables to to real",
    "start": "3377940",
    "end": "3386050"
  },
  {
    "text": "tables inside your content provider thanks a lot slides in code soon at at github be Mike",
    "start": "3386050",
    "end": "3395110"
  },
  {
    "text": "and it will probably be an end I haven't put it there yet so I can't be sure of this but it will probably be an in-depth",
    "start": "3395110",
    "end": "3401590"
  },
  {
    "text": "con for if it's not it'll be nearby alright thanks a lot",
    "start": "3401590",
    "end": "3407840"
  },
  {
    "text": "[Music]",
    "start": "3407840",
    "end": "3416300"
  }
]