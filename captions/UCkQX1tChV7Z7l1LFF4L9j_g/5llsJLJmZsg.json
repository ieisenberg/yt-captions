[
  {
    "start": "0",
    "end": "147000"
  },
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "17650"
  },
  {
    "text": "it's a pleasure to be here the title of my talk is istio is a platform for",
    "start": "19400",
    "end": "24539"
  },
  {
    "text": "running microservices in the abstract for this talk you might",
    "start": "24539",
    "end": "29640"
  },
  {
    "text": "have noticed that I raised the question the following question that you see here on your screen which is for those",
    "start": "29640",
    "end": "34920"
  },
  {
    "text": "organizations those of you who are working either in the process of transitioning",
    "start": "34920",
    "end": "40620"
  },
  {
    "text": "to microservices or have already transitioned to microservices how do you deal with or address problems relating",
    "start": "40620",
    "end": "46500"
  },
  {
    "text": "to service Discovery and load balancing and other concerns having to do with application resilience",
    "start": "46500",
    "end": "52260"
  },
  {
    "text": "keeping a secure system making it observable and dealing with issues",
    "start": "52260",
    "end": "57539"
  },
  {
    "text": "relating to traffic management those are typically the types of issues that we come across in the context of",
    "start": "57539",
    "end": "64018"
  },
  {
    "text": "transitioning to a microservice architecture so our agenda will be to begin by",
    "start": "64019",
    "end": "72200"
  },
  {
    "text": "understanding the nature of the problem so it'll be a little bit of a sort of a",
    "start": "72200",
    "end": "78540"
  },
  {
    "text": "journey to try to understand the transition from monolith to microservice understand the difficulties and then",
    "start": "78540",
    "end": "85680"
  },
  {
    "text": "explore how these difficulties are addressed how they've been perhaps historically addressed and then then we",
    "start": "85680",
    "end": "92040"
  },
  {
    "text": "transition to looking at istio an open source project and understanding how it functions its design and its",
    "start": "92040",
    "end": "98040"
  },
  {
    "text": "architecture in order to critically evaluate uh how suited it is as a foundation for running microservices or",
    "start": "98040",
    "end": "104579"
  },
  {
    "text": "distributed applications in general so hello my name is etan Suez I",
    "start": "104579",
    "end": "110759"
  },
  {
    "text": "mentioned I work at a company by the name of tetrate a relatively young company in the Enterprise service mesh",
    "start": "110759",
    "end": "117659"
  },
  {
    "text": "space my role is with technical Education and Training and I've had the",
    "start": "117659",
    "end": "123180"
  },
  {
    "text": "privilege uh in in this role to spend time with this technology with istio and",
    "start": "123180",
    "end": "128880"
  },
  {
    "text": "other related Technologies ongoing and so on and really uh connect the dots and",
    "start": "128880",
    "end": "134520"
  },
  {
    "text": "that's what inspired this talk so let's begin",
    "start": "134520",
    "end": "139819"
  },
  {
    "text": "I would like to begin by exploring uh the transition from monolith to",
    "start": "140099",
    "end": "145379"
  },
  {
    "text": "microservices and specifically what are the pressures",
    "start": "145379",
    "end": "150660"
  },
  {
    "start": "147000",
    "end": "455000"
  },
  {
    "text": "or the forces that uh actually drive us in that in this",
    "start": "150660",
    "end": "155700"
  },
  {
    "text": "direction so the assumption is that we're moving from uh a an application",
    "start": "155700",
    "end": "161760"
  },
  {
    "text": "that's running fine that's been running fine for a long time where business has derived a great deal of value from but",
    "start": "161760",
    "end": "168720"
  },
  {
    "text": "as our application becomes more important and more vital to the success of the business things change the",
    "start": "168720",
    "end": "175980"
  },
  {
    "text": "application itself becomes more complex we hire more developers our team becomes larger we might encounter contention",
    "start": "175980",
    "end": "184260"
  },
  {
    "text": "with continuous integration but a certain characteristics of our",
    "start": "184260",
    "end": "190019"
  },
  {
    "text": "system uh are become vital and more important than they were before specifically High availability uptime",
    "start": "190019",
    "end": "196040"
  },
  {
    "text": "and and the lack of availability could cost the business a lot of money and what we discover is a monolithic",
    "start": "196040",
    "end": "202739"
  },
  {
    "text": "architecture perhaps doesn't lend itself as well to those new criteria or more",
    "start": "202739",
    "end": "208739"
  },
  {
    "text": "important criteria let's say we have issues with deploy limit",
    "start": "208739",
    "end": "214019"
  },
  {
    "text": "coupling the idea that there may be multiple features that are coupled together you cannot release one",
    "start": "214019",
    "end": "220620"
  },
  {
    "text": "independently of others teams have less control with respect to releasing and monitoring their systems there's a",
    "start": "220620",
    "end": "226200"
  },
  {
    "text": "central sort of team that's in charge of releases releases happen less often than",
    "start": "226200",
    "end": "231780"
  },
  {
    "text": "than desired and those lead to more risk the risk of something going down a risk",
    "start": "231780",
    "end": "239280"
  },
  {
    "text": "of our system not being as available and so we're in we're pressured to move in a",
    "start": "239280",
    "end": "246540"
  },
  {
    "text": "direction to solve these problems and that's essentially breaking our",
    "start": "246540",
    "end": "252060"
  },
  {
    "text": "application up into a microservice architecture now what I'd like to do is go through a",
    "start": "252060",
    "end": "258419"
  },
  {
    "text": "very simple illustration to try to better understand the differences in in these environments by going through a",
    "start": "258419",
    "end": "265380"
  },
  {
    "text": "very simple or fictitious or maybe a common scenario that we typically uh",
    "start": "265380",
    "end": "272699"
  },
  {
    "text": "interact with in in the course of working with the system so imagine an",
    "start": "272699",
    "end": "279120"
  },
  {
    "text": "incoming request and the system is designed in such a way that the Handler function inside our",
    "start": "279120",
    "end": "285960"
  },
  {
    "text": "monolithic application is is receiving this incoming request and and perhaps it",
    "start": "285960",
    "end": "291500"
  },
  {
    "text": "this a lot of the business logic is delegated to a particular service and so we have a call to a service and that",
    "start": "291500",
    "end": "297900"
  },
  {
    "text": "service might have a number of delegates or it enlists the help of other services to get specific subtasks done so we may",
    "start": "297900",
    "end": "305100"
  },
  {
    "text": "be calling some service that may be turning around and itself make a maybe a call over the network to an external",
    "start": "305100",
    "end": "311520"
  },
  {
    "text": "service and uh subsequently calling another service",
    "start": "311520",
    "end": "316560"
  },
  {
    "text": "um that's a typical sort of a flow and what we can say about the environment in",
    "start": "316560",
    "end": "322080"
  },
  {
    "text": "which this logic execute is that with a monolith all this happens inside of a",
    "start": "322080",
    "end": "327360"
  },
  {
    "text": "process this is a very well known very comfortable environment this is uh you",
    "start": "327360",
    "end": "332580"
  },
  {
    "text": "know the type of environment that you typically expect to uh to be running your business logic in and the other",
    "start": "332580",
    "end": "339780"
  },
  {
    "text": "thing that we can say is um these actors inside of this logic may be",
    "start": "339780",
    "end": "346440"
  },
  {
    "text": "spring beans If This Were a spring application they may be just plain objects or they could just be pure functions right and then the main point",
    "start": "346440",
    "end": "352680"
  },
  {
    "text": "here that I want to make is the way in which these functions or actors communicate with one another is by",
    "start": "352680",
    "end": "359400"
  },
  {
    "text": "making function calls and function calls are a very simple uh well understood uh",
    "start": "359400",
    "end": "366660"
  },
  {
    "text": "very fast type of thing that we don't really give much thought to in the context of a monolith enter a",
    "start": "366660",
    "end": "373620"
  },
  {
    "text": "distributed application the interesting part is that the uh and this is not necessarily so of course this is driven",
    "start": "373620",
    "end": "380400"
  },
  {
    "text": "by because we have a different concerns but let's just assume that the flow is is more or less laid",
    "start": "380400",
    "end": "386819"
  },
  {
    "text": "out in a similar fashion an incoming request comes in and is handled by an Ingress controller which routes the",
    "start": "386819",
    "end": "393539"
  },
  {
    "text": "request to a particular service which handles that request and again enlists the help of a couple of other services",
    "start": "393539",
    "end": "400560"
  },
  {
    "text": "same exact business logic but we even though the picture is the same I think I",
    "start": "400560",
    "end": "405600"
  },
  {
    "text": "flipped some of the colors here just to make it look a little bit different but it's exactly the same picture",
    "start": "405600",
    "end": "411080"
  },
  {
    "text": "is an implied understanding that each of these boxes is now an independent",
    "start": "411080",
    "end": "416699"
  },
  {
    "text": "Deployable right these each may be running and deployed independently on different VMS maybe in our data center",
    "start": "416699",
    "end": "423120"
  },
  {
    "text": "on-prem or they could be running in the cloud they could be running in kubernetes and if so then maybe each one",
    "start": "423120",
    "end": "430860"
  },
  {
    "text": "is deployed using a kubernetes deployment and so we've got pods essentially which represent our",
    "start": "430860",
    "end": "436979"
  },
  {
    "text": "workloads and these what used to be function calls are now Network calls or",
    "start": "436979",
    "end": "442199"
  },
  {
    "text": "way now before we um sort of begin to investigate how this",
    "start": "442199",
    "end": "450000"
  },
  {
    "text": "new environment sort of affects and and creates a new set of problems let's pause for a minute and think of the",
    "start": "450000",
    "end": "457139"
  },
  {
    "start": "455000",
    "end": "582000"
  },
  {
    "text": "benefits of what we've gained in the process of transitioning Maybe by using the Strangler pattern and other",
    "start": "457139",
    "end": "463620"
  },
  {
    "text": "mechanisms to sort of transition from our monolith to extract logic out into separate deployables that can be sort of",
    "start": "463620",
    "end": "471599"
  },
  {
    "text": "run as a distributed application so if we think of all of the pressures that we've had we may get to a point where we",
    "start": "471599",
    "end": "478380"
  },
  {
    "text": "now have smaller teams that each work on smaller code bases in separate code bases that means it allows us to",
    "start": "478380",
    "end": "485099"
  },
  {
    "text": "parallelize work streams better our velocity comes back up we eliminate the contention we used to have with",
    "start": "485099",
    "end": "491580"
  },
  {
    "text": "continuous integration we have more flexibility we can become polyglot we have the freedom to choose different",
    "start": "491580",
    "end": "497639"
  },
  {
    "text": "sort of tools and languages for for different tasks we can eliminate the deployment coupling eliminate risks",
    "start": "497639",
    "end": "503400"
  },
  {
    "text": "increase High availability we can deploy each of these services independently of one another and in general we've moved",
    "start": "503400",
    "end": "511379"
  },
  {
    "text": "to perhaps a better place right right and so that's the uh sort of the the good part of of the of the story now",
    "start": "511379",
    "end": "519539"
  },
  {
    "text": "of course the uh this is a warning that is uh almost 30 years old you know publication from Sun microsystem by",
    "start": "519539",
    "end": "526200"
  },
  {
    "text": "Peter Deutsch and others James Gosling the fallacies of distributed computing you move to distributed computing",
    "start": "526200",
    "end": "532740"
  },
  {
    "text": "environment and we typically make the mistake of overlooking the fact that a network call",
    "start": "532740",
    "end": "540060"
  },
  {
    "text": "is not a function call the network doesn't is not always reliable those",
    "start": "540060",
    "end": "545100"
  },
  {
    "text": "calls May sometimes fail latency is not zero it's orders of magnitude more than",
    "start": "545100",
    "end": "550860"
  },
  {
    "text": "a typical function call and so we have to be very mindful of that otherwise we're going to run into a variety of",
    "start": "550860",
    "end": "556560"
  },
  {
    "text": "problems so I'd like to call it a couple more here one is topology is very Dynamic these days when we Auto scale",
    "start": "556560",
    "end": "562320"
  },
  {
    "text": "services in environments um and maybe deploy things or have",
    "start": "562320",
    "end": "567600"
  },
  {
    "text": "failover multiple data centers or what have you uh the network is uh secure is another fallacy so things to be mindful",
    "start": "567600",
    "end": "574560"
  },
  {
    "text": "and uh these lessons typically if we heat them will um will serve us well",
    "start": "574560",
    "end": "581880"
  },
  {
    "text": "and so uh let us then move on and speak about the very specific problems that",
    "start": "581880",
    "end": "590100"
  },
  {
    "start": "582000",
    "end": "989000"
  },
  {
    "text": "you typically encounter in the course of uh running a distributed system",
    "start": "590100",
    "end": "596720"
  },
  {
    "text": "now as I go through um each concern one by one what I want",
    "start": "596760",
    "end": "602760"
  },
  {
    "text": "you to do is to sort of vet the concern not only with respect to distributed",
    "start": "602760",
    "end": "608760"
  },
  {
    "text": "applications but ask yourself how did this use to is this a why is this not a problem with the monolith or how is this",
    "start": "608760",
    "end": "615300"
  },
  {
    "text": "problem solved in in the context of a monolith as well so the first perhaps more most evident most fundamental",
    "start": "615300",
    "end": "621540"
  },
  {
    "text": "problem is the problem of service Discovery so you've got multiple Services deployed in some environment",
    "start": "621540",
    "end": "626779"
  },
  {
    "text": "service a may need to collaborate with service B and C it needs to know where",
    "start": "626779",
    "end": "631860"
  },
  {
    "text": "instances of service BNC are located and so there's a need for a service registry now it's interesting to to think about",
    "start": "631860",
    "end": "638399"
  },
  {
    "text": "in a monolith scenario uh typically objects have references to other objects",
    "start": "638399",
    "end": "643860"
  },
  {
    "text": "so you know maybe we have a dependency injection framework that does all this for us so we take that for granted that's sort of um built in so to speak",
    "start": "643860",
    "end": "651480"
  },
  {
    "text": "and so we have to rebuild uh similar capabilities in our new environment and",
    "start": "651480",
    "end": "657120"
  },
  {
    "text": "that's essentially what we've been busy doing over the last decade or so right or maybe longer",
    "start": "657120",
    "end": "663120"
  },
  {
    "text": "um we're now running in a at Cloud scale we may have a hundred instances of service B around replicas we scale out",
    "start": "663120",
    "end": "671040"
  },
  {
    "text": "horizontally and that gives us a great deal of flexibility but with that flexibility also the added burden of",
    "start": "671040",
    "end": "678480"
  },
  {
    "text": "clients needing to load balance requests to those Target workloads",
    "start": "678480",
    "end": "684600"
  },
  {
    "text": "and so what what typically starts to happen is we add logic or Library dependency I'd like to call this maybe a",
    "start": "684600",
    "end": "691980"
  },
  {
    "text": "kind of a barnacle of code that becomes encrusted in service a that is necessary it's not related at all to the business",
    "start": "691980",
    "end": "699839"
  },
  {
    "text": "logic but it is necessary in order to function in this environment in which we basically know that we need to load",
    "start": "699839",
    "end": "706860"
  },
  {
    "text": "balance requests to services that we rely on",
    "start": "706860",
    "end": "711319"
  },
  {
    "text": "um what happens when we have failures what if one of these endpoints is not healthy uh we you know that's basically",
    "start": "713339",
    "end": "721079"
  },
  {
    "text": "the uh the fallacy that we were talking about about the uh the network not not always being reliable so some requests",
    "start": "721079",
    "end": "727500"
  },
  {
    "text": "will fail and so we now we need to build in perhaps retry uh sort of mechanisms a",
    "start": "727500",
    "end": "733260"
  },
  {
    "text": "little bit more code inside our clients to um to deal with that possibility",
    "start": "733260",
    "end": "738959"
  },
  {
    "text": "again in the monolith we did not have that problem uh because we were not using the network as a mechanism for",
    "start": "738959",
    "end": "744360"
  },
  {
    "text": "messaging because everything was of course in process um the the matter of resilience and",
    "start": "744360",
    "end": "750959"
  },
  {
    "text": "there are multiple concerns here here I depict uh the you know the sort of two prototypical uh situation or scenario",
    "start": "750959",
    "end": "757800"
  },
  {
    "text": "that was made Popular by by the histrix project uh the idea of a cascading failure you know that when you have",
    "start": "757800",
    "end": "764220"
  },
  {
    "text": "latency in the network that latency could tie up resources it could tie up Connections in the connection pool and",
    "start": "764220",
    "end": "770760"
  },
  {
    "text": "what happens when a service is slow uh it may actually have uh Downstream",
    "start": "770760",
    "end": "776880"
  },
  {
    "text": "impacts and may bring the caller down uh in a sort of a cascading failure scenario especially in the face of lots",
    "start": "776880",
    "end": "783600"
  },
  {
    "text": "of uh Downstream requests coming into the service but there are other situations and we typically the idea",
    "start": "783600",
    "end": "789600"
  },
  {
    "text": "here what the lesson that we've learned is this idea of failing fast of having timeouts uh can really go a long way to",
    "start": "789600",
    "end": "797220"
  },
  {
    "text": "to resolving some of these issues that sort of manifest themselves in the context of this distributed system",
    "start": "797220",
    "end": "803760"
  },
  {
    "text": "uh the next problem is one that again is absent in the monolith the idea that when we break again uh two uh pieces of",
    "start": "803760",
    "end": "811620"
  },
  {
    "text": "logic and and they're now uh separated uh and one calls the other over the",
    "start": "811620",
    "end": "816779"
  },
  {
    "text": "network uh there's the matter of identity and what I talk about here is not the identity of the end user but",
    "start": "816779",
    "end": "822899"
  },
  {
    "text": "rather the identity of the workload how does service B know that service a is calling it how can it trust that it's",
    "start": "822899",
    "end": "828839"
  },
  {
    "text": "really service a so there's a new concern here that pertains to security which uh is a very important one and",
    "start": "828839",
    "end": "835620"
  },
  {
    "text": "increasingly being mandated uh by by regulation as well uh on top of the authentication is",
    "start": "835620",
    "end": "842459"
  },
  {
    "text": "authorization if we have the identity of the color uh the calling service uh are",
    "start": "842459",
    "end": "849120"
  },
  {
    "text": "they allowed to call us so do we embed those rules do we inject those configuration rules into every single",
    "start": "849120",
    "end": "854279"
  },
  {
    "text": "service and add yet another layer another dependency in our application to deal with with this particular scenario",
    "start": "854279",
    "end": "860060"
  },
  {
    "text": "so that's that's the matter here observability again back in the in the",
    "start": "860060",
    "end": "865260"
  },
  {
    "text": "monolith we begin to appreciate a lot of the tooling and a lot of the um so the design of the of things the",
    "start": "865260",
    "end": "872279"
  },
  {
    "text": "way that they allow us to diagnose issues for example a very simple uh call",
    "start": "872279",
    "end": "877320"
  },
  {
    "text": "stack a stack Trace goes a long way to helping us understand and reason about what's actually happening inside a",
    "start": "877320",
    "end": "883620"
  },
  {
    "text": "thread the chain of calls from uh from object to object or function to function",
    "start": "883620",
    "end": "888680"
  },
  {
    "text": "whereas do we have something similar in the distributed world to know to see the",
    "start": "888680",
    "end": "894180"
  },
  {
    "text": "chain of calls from service to service and that's essentially what distributed traces uh sort of help us do in the and",
    "start": "894180",
    "end": "900839"
  },
  {
    "text": "microservices World traffic management becomes a very important thing to support High",
    "start": "900839",
    "end": "907139"
  },
  {
    "text": "availability to support failover the and think about the ability to govern how",
    "start": "907139",
    "end": "914279"
  },
  {
    "text": "traffic is routed again in a manner that's orthogonal to the applications themselves this supports zero downtime",
    "start": "914279",
    "end": "921720"
  },
  {
    "text": "deployments Canary deployments maybe rolling back after we've deployed a new",
    "start": "921720",
    "end": "928380"
  },
  {
    "text": "version and there are other scenarios besides so the ability to really control and",
    "start": "928380",
    "end": "934019"
  },
  {
    "text": "having the flexibility to control how we rather request from service say to service B which particular subsets of a",
    "start": "934019",
    "end": "940079"
  },
  {
    "text": "service we want to Target uh can help us a great deal uh here's the situation the",
    "start": "940079",
    "end": "945660"
  },
  {
    "text": "idea here is maybe we want to favor uh service a making calls to local instances of service B and the same",
    "start": "945660",
    "end": "951720"
  },
  {
    "text": "availability Zone but be able to fail over to another AZ or another region in",
    "start": "951720",
    "end": "956880"
  },
  {
    "text": "a situation where the local instance is not available all right so that's kind of a potpourri",
    "start": "956880",
    "end": "963600"
  },
  {
    "text": "of so many different concerns that are sort of new problems that we need to",
    "start": "963600",
    "end": "968760"
  },
  {
    "text": "tackle some of them have already to some extent uh have Solutions uh and that's",
    "start": "968760",
    "end": "975240"
  },
  {
    "text": "what we turn our attention to next now the problems that I just described",
    "start": "975240",
    "end": "981060"
  },
  {
    "text": "are not new they're typically encountered by every organization in the context of their transition to",
    "start": "981060",
    "end": "987060"
  },
  {
    "text": "distributed services and the case in point is the story of of Netflix uh and",
    "start": "987060",
    "end": "992940"
  },
  {
    "start": "989000",
    "end": "1144000"
  },
  {
    "text": "uh and the codification of a lot of their Solutions their open source solutions by the spring engineering team",
    "start": "992940",
    "end": "998699"
  },
  {
    "text": "and you can almost see uh almost the one-to-one mapping between the problems I just described and these particular",
    "start": "998699",
    "end": "1004579"
  },
  {
    "text": "Solutions so Netflix in the course of moving to the public cloud and going to",
    "start": "1004579",
    "end": "1010459"
  },
  {
    "text": "a microservice architecture had to develop uh or they maybe didn't have to but chose to develop their own service",
    "start": "1010459",
    "end": "1017060"
  },
  {
    "text": "registry in the form of Eureka the ribbon is an implementation of a client-side load balancer histrix was",
    "start": "1017060",
    "end": "1024620"
  },
  {
    "text": "designed to really help them with dealing with resiliency matters Zuul was",
    "start": "1024620",
    "end": "1031760"
  },
  {
    "text": "their sort of a dynamic uh sort of front-end Edge Gateway that allowed them",
    "start": "1031760",
    "end": "1037040"
  },
  {
    "text": "to really be able to dynamically control routing and then other Solutions in in",
    "start": "1037040",
    "end": "1045319"
  },
  {
    "text": "their respective spaces that deal with observability or exposing metrics and",
    "start": "1045319",
    "end": "1050840"
  },
  {
    "text": "making making your applications more observable and more visible",
    "start": "1050840",
    "end": "1057820"
  },
  {
    "text": "if you go and visit the spring Cloud project landing page you come across",
    "start": "1058100",
    "end": "1064100"
  },
  {
    "text": "this illustration which I like very much because it gives you a sense at not not at a detailed level but of how these",
    "start": "1064100",
    "end": "1071419"
  },
  {
    "text": "things are arranged we see in this picture a variety of microservices that are running that supposedly can",
    "start": "1071419",
    "end": "1078020"
  },
  {
    "text": "find each other because of that box up at the top the service registry they register with the service registry and",
    "start": "1078020",
    "end": "1083539"
  },
  {
    "text": "are become discoverable the API Gateway in front is able to control uh you know routing",
    "start": "1083539",
    "end": "1091220"
  },
  {
    "text": "to particular services and maybe these microservices also are designed to emit",
    "start": "1091220",
    "end": "1096919"
  },
  {
    "text": "uh distributed tracing and other information to a kind of a collector a Telemetry collector so that we have more",
    "start": "1096919",
    "end": "1103400"
  },
  {
    "text": "visibility into the the functioning of our system um now what's implied in this picture is",
    "start": "1103400",
    "end": "1110900"
  },
  {
    "text": "the fact that uh the way in which we enable our microservices is by uh",
    "start": "1110900",
    "end": "1117559"
  },
  {
    "text": "adopting dependencies so through third-party dependencies we essentially",
    "start": "1117559",
    "end": "1123679"
  },
  {
    "text": "have a microservice that has extra capabilities that we didn't have to ride ourselves",
    "start": "1123679",
    "end": "1129620"
  },
  {
    "text": "uh to be able to for example serve as a client to the service registry API we",
    "start": "1129620",
    "end": "1136220"
  },
  {
    "text": "don't have to code those ourselves which is which is terrific but it's implied that these things happen in process",
    "start": "1136220",
    "end": "1143360"
  },
  {
    "text": "um all right so let's talk about um let's try to imagine or Envision and",
    "start": "1143360",
    "end": "1149900"
  },
  {
    "start": "1144000",
    "end": "1266000"
  },
  {
    "text": "in a process create a list of desired traits and maybe even design objectives",
    "start": "1149900",
    "end": "1156679"
  },
  {
    "text": "for a system that can solve many of the problems that that we've just described and the first one uh sounds like maybe a",
    "start": "1156679",
    "end": "1164299"
  },
  {
    "text": "tall order this idea of maybe turning the tables and rather than make",
    "start": "1164299",
    "end": "1170660"
  },
  {
    "text": "an application adapt to an environment by adding dependencies in process could",
    "start": "1170660",
    "end": "1176240"
  },
  {
    "text": "we create a platform whereby the application as is without any changes can just begin to function in a as a",
    "start": "1176240",
    "end": "1184100"
  },
  {
    "text": "member of a distributed a larger distributed application wouldn't it be nice if we could also",
    "start": "1184100",
    "end": "1191000"
  },
  {
    "text": "bake into that infrastructure all of these ancillary concerns I was mentioning earlier retries timeouts",
    "start": "1191000",
    "end": "1197660"
  },
  {
    "text": "could be configured outside of the context of applications the basic theme Here is Let's Not Disturb our",
    "start": "1197660",
    "end": "1203539"
  },
  {
    "text": "applications can we actually somehow deal with these matters in an external",
    "start": "1203539",
    "end": "1208940"
  },
  {
    "text": "fashion uh the realization that the workload identity problem which has is",
    "start": "1208940",
    "end": "1215900"
  },
  {
    "text": "intertwined with a secure environment for running distributed applications is one that must be addressed and",
    "start": "1215900",
    "end": "1221780"
  },
  {
    "text": "recognized and solved and and then finally a very a very general statement here with respect to separation of",
    "start": "1221780",
    "end": "1228260"
  },
  {
    "text": "concerns and that is to say that if we are going to have a chance at having systems that are",
    "start": "1228260",
    "end": "1234980"
  },
  {
    "text": "responsive that we can very quickly be able to modify how they behave with respect to security policy Network",
    "start": "1234980",
    "end": "1242059"
  },
  {
    "text": "policy routing policy or other orthogonal cross-cutting concerns that",
    "start": "1242059",
    "end": "1247340"
  },
  {
    "text": "we should be able to apply them without having to rebuild redeploy or restart or",
    "start": "1247340",
    "end": "1252500"
  },
  {
    "text": "even reconfigure an application that is that they're truly orthogonal concerns that are somehow can be applied without",
    "start": "1252500",
    "end": "1259700"
  },
  {
    "text": "disturbing all of these running applications and so um let us finally uh it's high",
    "start": "1259700",
    "end": "1267559"
  },
  {
    "start": "1266000",
    "end": "1578000"
  },
  {
    "text": "time that we discuss uh istio I want to give you an overview of the architecture of istio",
    "start": "1267559",
    "end": "1273140"
  },
  {
    "text": "and uh after which we can discuss how istio solves the problems that we just",
    "start": "1273140",
    "end": "1279020"
  },
  {
    "text": "described the first thing that we should say about istio is that it is a project that",
    "start": "1279020",
    "end": "1287240"
  },
  {
    "text": "was created after the Advent of kubernetes and so it leverages kubernetes and extends it in",
    "start": "1287240",
    "end": "1294679"
  },
  {
    "text": "fact so let's uh go together uh through this exercise of understanding the",
    "start": "1294679",
    "end": "1300559"
  },
  {
    "text": "architecture of istio imagine the smallest possible building block of a",
    "start": "1300559",
    "end": "1305780"
  },
  {
    "text": "distributed application which is two Services trying to call one another um and uh we we mentioned that this is",
    "start": "1305780",
    "end": "1312679"
  },
  {
    "text": "going to happen in the context of the kubernetes cluster now that's not exactly true in that istio supports",
    "start": "1312679",
    "end": "1318620"
  },
  {
    "text": "workloads running both on and off clusters they can be running on VMS which is beyond the scope of this conversation",
    "start": "1318620",
    "end": "1324500"
  },
  {
    "text": "but if these services are going to run in kubernetes they're going to be deployed uh as kubernetes deployments",
    "start": "1324500",
    "end": "1331159"
  },
  {
    "text": "we're going to end up with pods and uh perhaps the first problem we tackle is is the problem of service Discovery so",
    "start": "1331159",
    "end": "1337460"
  },
  {
    "text": "we've got to have somewhere to collect a registry and istio indeed deploys its",
    "start": "1337460",
    "end": "1342860"
  },
  {
    "text": "main deployment is called istiod and so we we draw a box maybe another pod that's running in our kubernetes cluster",
    "start": "1342860",
    "end": "1349460"
  },
  {
    "text": "called stod now uh the way this works is as a",
    "start": "1349460",
    "end": "1354919"
  },
  {
    "text": "service is deployed or so pod is deployed to your kubernetes cluster the idea is that istio can be notified of",
    "start": "1354919",
    "end": "1361220"
  },
  {
    "text": "the event and updates its registry and thus build up a list of all of the",
    "start": "1361220",
    "end": "1366260"
  },
  {
    "text": "services in their endpoints uh but that list obviously needs to be communicated to the pods right and here we have a",
    "start": "1366260",
    "end": "1372200"
  },
  {
    "text": "conundrum because the desire is for the applications to not be aware of the platform but the other way around",
    "start": "1372200",
    "end": "1379039"
  },
  {
    "text": "and so what the way it still solves this problem is by introducing the envoy Sidecar",
    "start": "1379039",
    "end": "1385039"
  },
  {
    "text": "uh so the idea is the sidecar is sort of a landing spot where we're going to send",
    "start": "1385039",
    "end": "1390860"
  },
  {
    "text": "our copy of our registry so to speak and it's those envoys are going to do our bidding unbeknownst to our applications now what",
    "start": "1390860",
    "end": "1398600"
  },
  {
    "text": "is Envoy Envoy has a very interesting sort of uh story in that it came out of",
    "start": "1398600",
    "end": "1404419"
  },
  {
    "text": "lift it's an open source project the lead developer of this project is Matt Klein who's still today is at lift uh",
    "start": "1404419",
    "end": "1412220"
  },
  {
    "text": "the website's Envoy proxy.io it's um you could say a modern proxy in that",
    "start": "1412220",
    "end": "1419059"
  },
  {
    "text": "it's remotely programmable you can configure it to essentially",
    "start": "1419059",
    "end": "1424360"
  },
  {
    "text": "dictate Its Behavior and the way that it works is through an API known as",
    "start": "1424360",
    "end": "1429679"
  },
  {
    "text": "Discovery services and that could be it can be controlled remotely via arrest or via more commonly GRTC and that's",
    "start": "1429679",
    "end": "1436700"
  },
  {
    "text": "exactly what the Cod does it has connections to all of these envoys and",
    "start": "1436700",
    "end": "1441980"
  },
  {
    "text": "it can push configuration to those invoice at any time so it's perfectly suited for this particular task",
    "start": "1441980",
    "end": "1448100"
  },
  {
    "text": "and another Advantage again is that you do not have to restart those envoys as",
    "start": "1448100",
    "end": "1453740"
  },
  {
    "text": "you reconfigure them and so they're dynamically configurable you could say",
    "start": "1453740",
    "end": "1460280"
  },
  {
    "text": "so these sidecars are injected automatically as a developer sort of deploys their workloads their manifests",
    "start": "1460280",
    "end": "1467179"
  },
  {
    "text": "do not need to be modified but there's one more important point that must be made here in terms of how this actually",
    "start": "1467179",
    "end": "1473179"
  },
  {
    "text": "works these envoys cannot serve a useful purpose unless",
    "start": "1473179",
    "end": "1480020"
  },
  {
    "text": "those pods are reconfigured in such a way that they can intercept traffic going in and out of of each of our",
    "start": "1480020",
    "end": "1486320"
  },
  {
    "text": "applications and that's why I personally like to depict Envoy it's kind of a ring",
    "start": "1486320",
    "end": "1491539"
  },
  {
    "text": "around each of these containers to make that more explicit",
    "start": "1491539",
    "end": "1497240"
  },
  {
    "text": "but the fact that when service day calls service B it's going to have to go through that Envoy and vice versa",
    "start": "1497240",
    "end": "1504200"
  },
  {
    "text": "all right so uh where do we go next let's talk about two particular flows",
    "start": "1504200",
    "end": "1510320"
  },
  {
    "text": "the first one I like to call the control plane flow and the second one we'll see afterwards is a data plane flow the idea",
    "start": "1510320",
    "end": "1517039"
  },
  {
    "text": "that uh okay we've sort of set the stage we have a proxy it's intercepting",
    "start": "1517039",
    "end": "1522620"
  },
  {
    "text": "requests to and from uh services but it doesn't yet know what to do it doesn't",
    "start": "1522620",
    "end": "1527659"
  },
  {
    "text": "know the state of the world but who does it's a cod istiod as services are",
    "start": "1527659",
    "end": "1533240"
  },
  {
    "text": "deployed to your kubernetes cluster or to the mesh in general which can be expanded to Encompass you know multiple",
    "start": "1533240",
    "end": "1539120"
  },
  {
    "text": "clusters or additional VMS or whatever you may have um uh the uh event notifications allow",
    "start": "1539120",
    "end": "1546980"
  },
  {
    "text": "istio to essentially keep up to date its state of the world in uh what I depict",
    "start": "1546980",
    "end": "1552980"
  },
  {
    "text": "here as a registry and then istio does the obvious next thing which is to",
    "start": "1552980",
    "end": "1558140"
  },
  {
    "text": "translate that information to an Envoy configuration a configuration Envoy understands and it distributes them in",
    "start": "1558140",
    "end": "1564799"
  },
  {
    "text": "real time to all of these envoys and so now we finally have all the",
    "start": "1564799",
    "end": "1569900"
  },
  {
    "text": "pieces of the puzzle in place these envoys are armed with the information they need to know how to",
    "start": "1569900",
    "end": "1575059"
  },
  {
    "text": "route requests according to that configuration and it's important to mention that this",
    "start": "1575059",
    "end": "1580220"
  },
  {
    "start": "1578000",
    "end": "1637000"
  },
  {
    "text": "works out of the box you have a cluster you deploy your workloads and assuming istio is deployed as well of course when",
    "start": "1580220",
    "end": "1586640"
  },
  {
    "text": "servicing is deployed in call service B unbeknownst to it that request is intercepted by the proxy the proxy then",
    "start": "1586640",
    "end": "1594440"
  },
  {
    "text": "has configuration it's already been armed with that configuration by istio but istio is not in the path of this",
    "start": "1594440",
    "end": "1600140"
  },
  {
    "text": "request it's strictly concerned with the control plane flow that we just went through and that proxy is able to load",
    "start": "1600140",
    "end": "1608360"
  },
  {
    "text": "balance requests just like ribbon used to it's able to um",
    "start": "1608360",
    "end": "1613940"
  },
  {
    "text": "uh retry requests that fail so dealing with issues with a network is a concern",
    "start": "1613940",
    "end": "1619940"
  },
  {
    "text": "that is no longer one that our application proper has to be concerned about it's been pushed down to the",
    "start": "1619940",
    "end": "1626600"
  },
  {
    "text": "platform so to speak and on the receiving side the other proxy receives the request and forwards it to service B",
    "start": "1626600",
    "end": "1633200"
  },
  {
    "text": "and the response follows uh sort of the reverse path",
    "start": "1633200",
    "end": "1638600"
  },
  {
    "start": "1637000",
    "end": "1701000"
  },
  {
    "text": "now uh we can go even further that is uh what I just described functions out of",
    "start": "1638600",
    "end": "1645320"
  },
  {
    "text": "the box you don't need to configure your services in any special way and that's the beauty of istio but if you so wish",
    "start": "1645320",
    "end": "1651440"
  },
  {
    "text": "to influence the behavior of these um uh of these proxies you can and this is",
    "start": "1651440",
    "end": "1657440"
  },
  {
    "text": "what exactly this picture is is sort of depicting the idea that istio provides a",
    "start": "1657440",
    "end": "1663080"
  },
  {
    "text": "list of um a handful of customer Source definitions this one is called a destination rule which allow us to",
    "start": "1663080",
    "end": "1669679"
  },
  {
    "text": "custom configure in this case the exact load balancing algorithm we wish this to you to use our Envoy actually to use as",
    "start": "1669679",
    "end": "1677299"
  },
  {
    "text": "it makes calls to a particular service or this could have been configured globally for the entire mesh but the",
    "start": "1677299",
    "end": "1683360"
  },
  {
    "text": "idea is you apply this custom resource to your kubernetes cluster istio takes",
    "start": "1683360",
    "end": "1689000"
  },
  {
    "text": "that information and updates the envoy configuration which it distributes then to all of the proxies so that they now",
    "start": "1689000",
    "end": "1695600"
  },
  {
    "text": "behave according to the specification a cross-cutting concern",
    "start": "1695600",
    "end": "1700880"
  },
  {
    "text": "all right let's look at another scenario this one is called a virtual service which allows us to manipulate traffic so",
    "start": "1700880",
    "end": "1708200"
  },
  {
    "start": "1701000",
    "end": "1744000"
  },
  {
    "text": "here we Define supposedly somewhere uh subsets the fact that this there's a",
    "start": "1708200",
    "end": "1714020"
  },
  {
    "text": "service by the name of reviews which uh there are two subsets one which happens to be version two the second one which",
    "start": "1714020",
    "end": "1720200"
  },
  {
    "text": "is version three in this case and what we specify is that we want 50 of traffic to be sent to one subset and and the",
    "start": "1720200",
    "end": "1727760"
  },
  {
    "text": "rest to the other and again you apply this kubernetes resource to your kubernetes cluster istio",
    "start": "1727760",
    "end": "1735140"
  },
  {
    "text": "will take that information and generate an updated onboard configuration and distribute it to all of the envoys that",
    "start": "1735140",
    "end": "1741980"
  },
  {
    "text": "need to know about it now the reason that I repeat uh this",
    "start": "1741980",
    "end": "1747799"
  },
  {
    "start": "1744000",
    "end": "1801000"
  },
  {
    "text": "pattern is to impress upon you this this particular uh thing that this particular",
    "start": "1747799",
    "end": "1753799"
  },
  {
    "text": "pattern that istio implements uh knowingly or unknowingly is beside the",
    "start": "1753799",
    "end": "1759440"
  },
  {
    "text": "point the idea that it injects or pushes configuration not to the service but to",
    "start": "1759440",
    "end": "1764659"
  },
  {
    "text": "its delegate so you could think about the service so that it can then resolve",
    "start": "1764659",
    "end": "1770000"
  },
  {
    "text": "requests to other services and and do other other tasks besides and that pattern is a very familiar one in the",
    "start": "1770000",
    "end": "1777080"
  },
  {
    "text": "monolith world it's called dependency injection and so just like spring does dependency",
    "start": "1777080",
    "end": "1782480"
  },
  {
    "text": "injection within the monolith to give one service references to other services so it doesn't have to look them up uh",
    "start": "1782480",
    "end": "1789020"
  },
  {
    "text": "the same thing happened in the distributed application with respect to um the different actors in our",
    "start": "1789020",
    "end": "1796159"
  },
  {
    "text": "distributed system that need to communicate with one another",
    "start": "1796159",
    "end": "1800919"
  },
  {
    "start": "1801000",
    "end": "1935000"
  },
  {
    "text": "all right so let us then proceed and talk about other facets of istio that",
    "start": "1802220",
    "end": "1809659"
  },
  {
    "text": "address other problems right so resilience let's talk about resilience and this is just a simple example of",
    "start": "1809659",
    "end": "1815779"
  },
  {
    "text": "another way of configuring um you know adding a bit of configuration to say to govern how many",
    "start": "1815779",
    "end": "1821899"
  },
  {
    "text": "times we want to retry a particular call to a particular service in this case we're saying we want three retry",
    "start": "1821899",
    "end": "1827720"
  },
  {
    "text": "attempts and we can even specify a per try timeout and also the type of",
    "start": "1827720",
    "end": "1834260"
  },
  {
    "text": "the type of error that should trigger a retry so we could be selective there",
    "start": "1834260",
    "end": "1839360"
  },
  {
    "text": "so retries can be incorporated again or communicated to the platform without",
    "start": "1839360",
    "end": "1844700"
  },
  {
    "text": "disturbing our applications here's an example of specifying a timeout so the",
    "start": "1844700",
    "end": "1850640"
  },
  {
    "text": "idea is that when I call out to a particular service if it doesn't respond within typically a good a good value",
    "start": "1850640",
    "end": "1857299"
  },
  {
    "text": "should be in the order of tens or hundreds of milliseconds then we can fail fast and and just",
    "start": "1857299",
    "end": "1864860"
  },
  {
    "text": "terminate that call because uh you know this this obviously this particular service we're calling or the instance of",
    "start": "1864860",
    "end": "1870740"
  },
  {
    "text": "the services having some issues and we're going to fail fast uh this is an example of uh circuit",
    "start": "1870740",
    "end": "1879140"
  },
  {
    "text": "breaker implementation in um in istio there are two two things going on here one is the configuration of a",
    "start": "1879140",
    "end": "1886100"
  },
  {
    "text": "connection pool and the basic idea here is to limit the uh the amount of pressure on a particular service by",
    "start": "1886100",
    "end": "1893360"
  },
  {
    "text": "specifying a maximum number of requests that in aggregate that service and all",
    "start": "1893360",
    "end": "1899240"
  },
  {
    "text": "of its uh backing endpoints are supporting and so if we exceed that uh",
    "start": "1899240",
    "end": "1904700"
  },
  {
    "text": "that maximum we can have those envoys just return 503s outlier detection is a",
    "start": "1904700",
    "end": "1910820"
  },
  {
    "text": "little more sophisticated it's the idea that we can identify an offending uh pod for example and if it throws in this",
    "start": "1910820",
    "end": "1918200"
  },
  {
    "text": "case uh more than you know five more than seven 500 type errors or in an interval of five minutes that we're",
    "start": "1918200",
    "end": "1924440"
  },
  {
    "text": "going to eject it and no longer give it any um any traffic for duration that we",
    "start": "1924440",
    "end": "1931340"
  },
  {
    "text": "specify which in this case is that base ejection time all right so that's resilience so we",
    "start": "1931340",
    "end": "1936919"
  },
  {
    "start": "1935000",
    "end": "2115000"
  },
  {
    "text": "have a bunch of knobs that allow us to configure you know and and get our you",
    "start": "1936919",
    "end": "1941960"
  },
  {
    "text": "know timeouts and retries and and circuit breaker configuration to uh",
    "start": "1941960",
    "end": "1947539"
  },
  {
    "text": "to uh to tuned in such a way that our system is working perfectly well",
    "start": "1947539",
    "end": "1954080"
  },
  {
    "text": "um the next step is uh let's uh let's talk about addressing the problem of security",
    "start": "1954080",
    "end": "1960919"
  },
  {
    "text": "so with respect to security istio leverages a framework known as spiffy which stands for secure production",
    "start": "1960919",
    "end": "1967340"
  },
  {
    "text": "identity framework for everyone but the basic idea is to give every Service uh",
    "start": "1967340",
    "end": "1974600"
  },
  {
    "text": "its own unique identity a cryptographic identity based on the x509 certificate",
    "start": "1974600",
    "end": "1980440"
  },
  {
    "text": "but to embed the basic ideas to embed in a particular field the sand field the",
    "start": "1980440",
    "end": "1986419"
  },
  {
    "text": "subject alternative name a URI that follows a particular",
    "start": "1986419",
    "end": "1991840"
  },
  {
    "text": "pattern that can help identify every single service in the mesh now I've got",
    "start": "1991840",
    "end": "1998360"
  },
  {
    "text": "this illustration that I've taken straight out of these two documentation that illustrates the process by which",
    "start": "1998360",
    "end": "2004360"
  },
  {
    "text": "that identity is sort of imprinted on every every workload but the theme Here",
    "start": "2004360",
    "end": "2010120"
  },
  {
    "text": "Again is to not put that burden on the shoulders of developers so it's automated as every new pod is deployed",
    "start": "2010120",
    "end": "2018220"
  },
  {
    "text": "there's an istio agent that essentially creates the certificate signing request sends it to istia which delegates it to",
    "start": "2018220",
    "end": "2025600"
  },
  {
    "text": "a certificate Authority signs the certificate issues it the istio agent",
    "start": "2025600",
    "end": "2030640"
  },
  {
    "text": "keeps it in memory for the envoy proxy to fetch and and be able to use as it",
    "start": "2030640",
    "end": "2037299"
  },
  {
    "text": "upgrades connections to other services to use Mutual TLS so that's the security",
    "start": "2037299",
    "end": "2042399"
  },
  {
    "text": "story and it happens transparently you get it out of the box without any configuration whatsoever so if we then",
    "start": "2042399",
    "end": "2049060"
  },
  {
    "text": "revisit the same flow that we saw earlier we can sort of add on the fact that this is actually taking place now",
    "start": "2049060",
    "end": "2055419"
  },
  {
    "text": "it can be configured of course but the basic idea is that that istio proxy has",
    "start": "2055419",
    "end": "2061300"
  },
  {
    "text": "a certificate and it establishes a mutual TLS connection with the service that it's calling and that certificate",
    "start": "2061300",
    "end": "2068260"
  },
  {
    "text": "is communicated in both directions here I depict only one but it's happening mutually of course",
    "start": "2068260",
    "end": "2073839"
  },
  {
    "text": "uh the certificate is verified and the identity of the caller extracted from that SPV URI",
    "start": "2073839",
    "end": "2079960"
  },
  {
    "text": "and the next step is that now that identity is known that we solve workload",
    "start": "2079960",
    "end": "2085179"
  },
  {
    "text": "Authentication in the service mesh we can then overlay",
    "start": "2085179",
    "end": "2090760"
  },
  {
    "text": "on top of it a higher level concept which is authorization policy right so the receiving istio proxy can look up",
    "start": "2090760",
    "end": "2097839"
  },
  {
    "text": "its authorization policy from its local configuration determine that this call is either allowed or denied and then",
    "start": "2097839",
    "end": "2104140"
  },
  {
    "text": "choose to whether uh pass on the request to the service or or deny it so it's in this case you see",
    "start": "2104140",
    "end": "2110859"
  },
  {
    "text": "Envoy acting as a policy enforcement point so let's look at an example",
    "start": "2110859",
    "end": "2115900"
  },
  {
    "start": "2115000",
    "end": "2173000"
  },
  {
    "text": "authorization policy these are actually quite flexible and versatile this one is called the the name of the resource the",
    "start": "2115900",
    "end": "2123400"
  },
  {
    "text": "kind is authorization policy and the basic idea here on line 10 is we target a a database",
    "start": "2123400",
    "end": "2130900"
  },
  {
    "text": "um pod which is receiving database connections from variety of services but",
    "start": "2130900",
    "end": "2135940"
  },
  {
    "text": "it'll only allow colors that match a particular identity so the source principle here is using a",
    "start": "2135940",
    "end": "2142540"
  },
  {
    "text": "spiffy URI that identifies the book application so in this case we're saying the book application is the only service",
    "start": "2142540",
    "end": "2148060"
  },
  {
    "text": "that can talk to the book application database which makes perfect sense uh but there we see on voice serving uh the",
    "start": "2148060",
    "end": "2156099"
  },
  {
    "text": "role of the security enforcer so we apply this kubernetes resource to our cluster and again the",
    "start": "2156099",
    "end": "2162280"
  },
  {
    "text": "envoy configuration has an extra filter in its filter chain which allow tells it",
    "start": "2162280",
    "end": "2167859"
  },
  {
    "text": "to actually check that that rule is satisfied all right next up observability",
    "start": "2167859",
    "end": "2177880"
  },
  {
    "start": "2173000",
    "end": "2349000"
  },
  {
    "text": "so observability is another very important facet of of the equation that",
    "start": "2178000",
    "end": "2184060"
  },
  {
    "text": "can help you reduce uh mean time to detection improve mean time to recovery",
    "start": "2184060",
    "end": "2189339"
  },
  {
    "text": "and so on so let's talk about it for a minute and specifically what value does istio bring to the table here if we go",
    "start": "2189339",
    "end": "2195880"
  },
  {
    "text": "back to this picture of of two Services communicating with one another with respect to observability",
    "start": "2195880",
    "end": "2202960"
  },
  {
    "text": "um the the main uh idea here is that we",
    "start": "2202960",
    "end": "2208660"
  },
  {
    "text": "have three separate and complementary pieces of information that or subsystems",
    "start": "2208660",
    "end": "2214060"
  },
  {
    "text": "that bring something to the table uh the first one is",
    "start": "2214060",
    "end": "2219339"
  },
  {
    "text": "um logs right so the fact that we sort of stream and aggregate logs and that really does not",
    "start": "2219339",
    "end": "2225520"
  },
  {
    "text": "um concern istio to a very great degree you can configure your own voice to also",
    "start": "2225520",
    "end": "2230740"
  },
  {
    "text": "send logs to the same location that your services receive logs the other piece is",
    "start": "2230740",
    "end": "2235960"
  },
  {
    "text": "distributed tracing so collecting of distributed traces configuring distributed tracing",
    "start": "2235960",
    "end": "2242440"
  },
  {
    "text": "um the envoys can actually add Trace IDs and these B3 Trace headers to initiating",
    "start": "2242440",
    "end": "2248859"
  },
  {
    "text": "requests but the thing to be mindful of is that there's no way that they can sort of ensure that every service will",
    "start": "2248859",
    "end": "2255280"
  },
  {
    "text": "propagate those headers and so that's something that you have to be mindful that your development teams must propagate those those Trace headers",
    "start": "2255280",
    "end": "2262420"
  },
  {
    "text": "uh the third piece is metrics and this is where because Envoy is in the path of",
    "start": "2262420",
    "end": "2268300"
  },
  {
    "text": "all of these requests it can collect and it does collect metrics with respect to requests that are happening between",
    "start": "2268300",
    "end": "2274660"
  },
  {
    "text": "Services the volume of requests whether they succeed or failed all kind of request meta data and latencies as well",
    "start": "2274660",
    "end": "2281619"
  },
  {
    "text": "and it exposed them exposes them itself on a particular scrape endpoint that you see there on the screen",
    "start": "2281619",
    "end": "2287980"
  },
  {
    "text": "for Prometheus to collect and for grafana to report upon",
    "start": "2287980",
    "end": "2293020"
  },
  {
    "text": "and istio indeed provides standard dashboards a pre-built rafana dashboards that you can use to monitor your entire",
    "start": "2293020",
    "end": "2299800"
  },
  {
    "text": "mesh and in my mind the biggest value there is uniformity the fact that first",
    "start": "2299800",
    "end": "2305079"
  },
  {
    "text": "of all your developers don't have to each your teams don't have to each fender for themselves and build their",
    "start": "2305079",
    "end": "2310240"
  },
  {
    "text": "own Monitoring Solutions but the fact that it's uniform the names of the metrics the dashboards are all the same",
    "start": "2310240",
    "end": "2315900"
  },
  {
    "text": "and so it gives you the kind of uniformity that makes it very easy for your entire uh sort of I.T staff to to",
    "start": "2315900",
    "end": "2323920"
  },
  {
    "text": "become familiar with and and and monitor the entire mesh in the same uniform way",
    "start": "2323920",
    "end": "2329260"
  },
  {
    "text": "uh there's another tool worth talking about kiali is a sort of bespoke observability console for istio that",
    "start": "2329260",
    "end": "2336339"
  },
  {
    "text": "leverages all of this information to give you these uh these compelling visualizations and other ability to",
    "start": "2336339",
    "end": "2341920"
  },
  {
    "text": "Monitor and and also uh sort of control your mesh from from a single visual dashboard",
    "start": "2341920",
    "end": "2349200"
  },
  {
    "start": "2349000",
    "end": "2382000"
  },
  {
    "text": "uh here's a screenshot uh perhaps not a very useful one of a uh of a service running and a mesh running locally on my",
    "start": "2349359",
    "end": "2356440"
  },
  {
    "text": "machine where you see the basic red metrics request volumes success rate and",
    "start": "2356440",
    "end": "2361720"
  },
  {
    "text": "and latencies durations uh here's a screenshot from kiali showing a visualization of an incoming request all",
    "start": "2361720",
    "end": "2368740"
  },
  {
    "text": "the way from from the Ingress Gateway on the left to a database on the right traversing a variety of microservices",
    "start": "2368740",
    "end": "2376900"
  },
  {
    "text": "and that gives you a sense of of the observability story with respect to istio",
    "start": "2376900",
    "end": "2383280"
  },
  {
    "text": "let us make some final observations and summarize this talk",
    "start": "2383380",
    "end": "2389140"
  },
  {
    "text": "going back to this picture I had mentioned how vis-a-vis security these sidecars play the role of policy",
    "start": "2389140",
    "end": "2397000"
  },
  {
    "text": "enforcement points and at some point it dawned on me that it's it's more General than that that more generally these",
    "start": "2397000",
    "end": "2404260"
  },
  {
    "text": "sidecars are what we call a join point right in uh in the parlance of aspect or in programming and that's when it dawned",
    "start": "2404260",
    "end": "2410740"
  },
  {
    "text": "on me that really istio is an aop framework for distributed applications now one could make the case that aop has",
    "start": "2410740",
    "end": "2418720"
  },
  {
    "text": "had perhaps limited success in the realm of monoliths because it involved having to weave all of these concerns into your",
    "start": "2418720",
    "end": "2427119"
  },
  {
    "text": "code base literally but what we see in a context of distributed application is istio is able to weave all these",
    "start": "2427119",
    "end": "2433780"
  },
  {
    "text": "concerns through the young boy's sidecars so when we explode the monolith into a distributed application where",
    "start": "2433780",
    "end": "2441180"
  },
  {
    "text": "these services are really independent of one another and we can put these sidecars in the path of requests between",
    "start": "2441180",
    "end": "2447160"
  },
  {
    "text": "the services it's the perfect join point in which to sort of apply all of these",
    "start": "2447160",
    "end": "2452560"
  },
  {
    "text": "concerns whether they be security concerns or traffic management concerns or network policy concerns and the list",
    "start": "2452560",
    "end": "2458020"
  },
  {
    "text": "goes on all right so let's summarize by going",
    "start": "2458020",
    "end": "2463060"
  },
  {
    "start": "2461000",
    "end": "2528000"
  },
  {
    "text": "back to my opening question how now you know how istio essentially solves or",
    "start": "2463060",
    "end": "2468940"
  },
  {
    "text": "addresses the problems relating to service Discovery resilience security observability and traffic management and",
    "start": "2468940",
    "end": "2475180"
  },
  {
    "text": "my advice my advice is that you want a platform you want a platform that is application aware and not the other way",
    "start": "2475180",
    "end": "2482260"
  },
  {
    "text": "around the kind of dependency injection you want all of these concerns to be",
    "start": "2482260",
    "end": "2487480"
  },
  {
    "text": "baked into the infrastructure and not coupled to your applications and you want a platform that's",
    "start": "2487480",
    "end": "2494740"
  },
  {
    "text": "inherently secure with the notion of workload identity is built in and finally and most generally you want a",
    "start": "2494740",
    "end": "2500500"
  },
  {
    "text": "clear separation of concerns where these all of these different concerns can be sort of tuned and modified without",
    "start": "2500500",
    "end": "2508960"
  },
  {
    "text": "having to disturb the applications running in your mesh and that creates for a very highly available",
    "start": "2508960",
    "end": "2515460"
  },
  {
    "text": "sort of environment in which to run your systems all right I hope you found this enjoy uh",
    "start": "2515460",
    "end": "2521800"
  },
  {
    "text": "this uh talk interesting and uh that you've enjoyed it and thank you for your time",
    "start": "2521800",
    "end": "2528660"
  },
  {
    "start": "2528000",
    "end": "3034000"
  },
  {
    "text": "thank you so much I think uh I don't know that I've ever heard the phrase istio is an aop framework for",
    "start": "2531700",
    "end": "2537520"
  },
  {
    "text": "distributed system but I think I like it well I hope to hear it",
    "start": "2537520",
    "end": "2542880"
  },
  {
    "text": "whenever I record one of these talks particularly ahead of time um there's always something I wish I had",
    "start": "2542880",
    "end": "2548680"
  },
  {
    "text": "added or something I wish I had they'll put in there is there anything that comes to mind as it was playing or",
    "start": "2548680",
    "end": "2555880"
  },
  {
    "text": "uh did you get everything out um I in my opinion I got everything I",
    "start": "2555880",
    "end": "2561760"
  },
  {
    "text": "wanted to say I'm really fascinated by the the questions in the comments and the uh but alternative architectures",
    "start": "2561760",
    "end": "2567700"
  },
  {
    "text": "supporting event-based uh models um that's really triggering a lot of uh",
    "start": "2567700",
    "end": "2574000"
  },
  {
    "text": "interesting uh conversations um but no I I that was my idea is to",
    "start": "2574000",
    "end": "2579040"
  },
  {
    "text": "essentially provoke and to to make put out statements out there that uh help us connect the dots sometimes uh sometimes",
    "start": "2579040",
    "end": "2586300"
  },
  {
    "text": "we see yeah okay uh I was going to say sometimes we see",
    "start": "2586300",
    "end": "2592420"
  },
  {
    "text": "um a uh you know we study on new technology but the pattern sometimes is familiar and uh so it's it's a lot of",
    "start": "2592420",
    "end": "2599440"
  },
  {
    "text": "fun to uh to be able to dive into technology deep enough to to see those",
    "start": "2599440",
    "end": "2604720"
  },
  {
    "text": "connections so um there's a lot of overlap between let's jump into somebody's question there's a lot of overlap between",
    "start": "2604720",
    "end": "2610960"
  },
  {
    "text": "particularly when we talk north south between um load balancers API gateways service mesh",
    "start": "2610960",
    "end": "2617380"
  },
  {
    "text": "um one of the questions was about where do you draw the line",
    "start": "2617380",
    "end": "2622500"
  },
  {
    "text": "gosh yeah I mean uh in my opinion uh I",
    "start": "2623520",
    "end": "2628900"
  },
  {
    "text": "think it might have started at the Ingress level you know load balancers and Ingress because everybody needed",
    "start": "2628900",
    "end": "2633940"
  },
  {
    "text": "that uh but yeah as we break our applications we see the same sort of needs crop up even internally within the",
    "start": "2633940",
    "end": "2640540"
  },
  {
    "text": "mesh and I think that's where I see istio satisfy uh you know a lot of that and fill that Gap so to speak",
    "start": "2640540",
    "end": "2646900"
  },
  {
    "text": "um but but yeah there's uh and anisio also you know there's no it's it's an",
    "start": "2646900",
    "end": "2652359"
  },
  {
    "text": "interesting fact that there are plenty of uh sort of Ingress gateways that are",
    "start": "2652359",
    "end": "2657460"
  },
  {
    "text": "based on Envoy and that uh I guess speaks to the fact that Envoy is is a pretty good building block for for",
    "start": "2657460",
    "end": "2664660"
  },
  {
    "text": "supporting this sort of scenarios would you",
    "start": "2664660",
    "end": "2670060"
  },
  {
    "text": "um agree that it's at the setup where you choose to enforce it whether it's at",
    "start": "2670060",
    "end": "2675700"
  },
  {
    "text": "um you know the front or between kind of a yeah so that's that's a terrific",
    "start": "2675700",
    "end": "2681040"
  },
  {
    "text": "question and that's that's something that a lot of folks in the service mesh uh ecosystem uh try to impress is uh",
    "start": "2681040",
    "end": "2689319"
  },
  {
    "text": "this idea you know the the term for it is zero trust architectures uh the idea",
    "start": "2689319",
    "end": "2694420"
  },
  {
    "text": "that you know can we have a perimeter that we secure within which our services are safe and don't have to",
    "start": "2694420",
    "end": "2701440"
  },
  {
    "text": "worry about you know issues of security and uh increasingly that's not the case",
    "start": "2701440",
    "end": "2706660"
  },
  {
    "text": "because uh for all for many reasons I mean we're no longer in a in a data center exclusively right we have code",
    "start": "2706660",
    "end": "2712420"
  },
  {
    "text": "running in the cloud we have hybrid cloud and and so being able to draw this sort of line around all of your",
    "start": "2712420",
    "end": "2719079"
  },
  {
    "text": "workloads is increasingly difficult and and maybe it's a fallacy and so that the idea there is you know let's just assume",
    "start": "2719079",
    "end": "2725680"
  },
  {
    "text": "that uh we can't trust anything and uh just give me your certificate let's just make everything Mutual TLS and uh and",
    "start": "2725680",
    "end": "2733540"
  },
  {
    "text": "and now um it solves problems not even it goes that go beyond just even a single",
    "start": "2733540",
    "end": "2739420"
  },
  {
    "text": "kubernetes cluster it doesn't matter uh you know how how wide your footprint is uh you're going to be able to make more",
    "start": "2739420",
    "end": "2746140"
  },
  {
    "text": "intelligence you know decisions uh that pertain to security yeah sure",
    "start": "2746140",
    "end": "2753119"
  },
  {
    "text": "I was going to add that talking over you no I'm sorry I I kind of like to",
    "start": "2753839",
    "end": "2759099"
  },
  {
    "text": "interject how this naturally then bring brings the conversation to a higher level which is the authorization policy",
    "start": "2759099",
    "end": "2765400"
  },
  {
    "text": "and the kind of things you can do there but go ahead yeah yeah so istio is amazing it can do a lot of",
    "start": "2765400",
    "end": "2772180"
  },
  {
    "text": "like you said cross-cutting concerns that for distributed system but it you know it introduces a sidecar it it does",
    "start": "2772180",
    "end": "2779079"
  },
  {
    "text": "at least in the most common implementation jerus is a sidecar well",
    "start": "2779079",
    "end": "2784240"
  },
  {
    "text": "how do you talk to people when they say yeah but you're doubling the number of containers what what is your response to that and",
    "start": "2784240",
    "end": "2791260"
  },
  {
    "text": "how do you how do you have to think about it right indeed you are and and that's that's come up that's a very apropos uh",
    "start": "2791260",
    "end": "2799180"
  },
  {
    "text": "topic of conversation today specifically with uh istio has been sort of in the news with respect to trying to refine",
    "start": "2799180",
    "end": "2806079"
  },
  {
    "text": "and optimize that implementation they've got uh kind of a uh an early and I don't",
    "start": "2806079",
    "end": "2811839"
  },
  {
    "text": "know if I call it data just yet but an implementation of uh of this kind of a sidecarless option uh so it's a",
    "start": "2811839",
    "end": "2819099"
  },
  {
    "text": "refinement of the implementation uh but my personal uh beef is to really let",
    "start": "2819099",
    "end": "2826500"
  },
  {
    "text": "one's experiences in production speak for themselves that is if you apply istio to a problem and it solves those",
    "start": "2826500",
    "end": "2833859"
  },
  {
    "text": "problems and uh and and really really Alters uh what you're able to do as a",
    "start": "2833859",
    "end": "2840339"
  },
  {
    "text": "consequence um you know you've you've benefited more than it's cost you",
    "start": "2840339",
    "end": "2846099"
  },
  {
    "text": "to adopt it and so I Look to practitioners to sort of vet whether that implementation has has problems so",
    "start": "2846099",
    "end": "2851740"
  },
  {
    "text": "I think too uh there's a company in the UK called AutoTrader and uh one of its",
    "start": "2851740",
    "end": "2857619"
  },
  {
    "text": "Architects his name is Carl Stony he is a very outspoken uh you know a tech",
    "start": "2857619",
    "end": "2863859"
  },
  {
    "text": "individual I think he was at thoughtworks before he was at AutoTrader and they they went through a journey of adopting istio with uh really amazing",
    "start": "2863859",
    "end": "2871540"
  },
  {
    "text": "success uh and I'm not sure how many situations are really",
    "start": "2871540",
    "end": "2876880"
  },
  {
    "text": "um in a sense bitten by uh the presence of extra sidecars now obviously it's",
    "start": "2876880",
    "end": "2882880"
  },
  {
    "text": "it's it's clear that you're doubling number of containers within each pod and so it's going to have some kind of uh uh",
    "start": "2882880",
    "end": "2891160"
  },
  {
    "text": "you know extra cost um yeah in terms of operationalizing and you know your Cloud costs and so on but",
    "start": "2891160",
    "end": "2897460"
  },
  {
    "text": "I think it's myopic to really jump to the conclusion that oh it's not going to work just because I think the",
    "start": "2897460",
    "end": "2902680"
  },
  {
    "text": "segregation of the concerns to me at Trump's the the extra cost specifically when we talk about",
    "start": "2902680",
    "end": "2909220"
  },
  {
    "text": "eliminating duplication of effort you know you have teams that create you know their own separate implementations of",
    "start": "2909220",
    "end": "2914859"
  },
  {
    "text": "some cross-cutting concern it for their services but they're only one piece of the puzzle you've got a dozen teams that",
    "start": "2914859",
    "end": "2920020"
  },
  {
    "text": "are doing that so that cost is is probably older the magnitude greater than uh yeah because of the Sidecar",
    "start": "2920020",
    "end": "2926319"
  },
  {
    "text": "yeah like like I said there's no freelance things to do definitely have a cost you gain a lot of capability",
    "start": "2926319",
    "end": "2931599"
  },
  {
    "text": "but um you know there is you got to pay at some point in in some cases which",
    "start": "2931599",
    "end": "2936760"
  },
  {
    "text": "some of these things are being addressed right but in some cases you're paying with a a small performance penalty to be",
    "start": "2936760",
    "end": "2943540"
  },
  {
    "text": "able to do it um however there's lots of interesting things out there that are happening that are that are paying down some of that",
    "start": "2943540",
    "end": "2949839"
  },
  {
    "text": "that cost exactly so we are at time any final words what",
    "start": "2949839",
    "end": "2955720"
  },
  {
    "text": "would you like what would be the final message you'd like to give the audience to take away",
    "start": "2955720",
    "end": "2960760"
  },
  {
    "text": "oh gosh there are many but uh I guess one that I'm going to just throw out there is how interesting it is uh",
    "start": "2960760",
    "end": "2967780"
  },
  {
    "text": "sometimes when you go a little out of your comfort zone you know if you're a developer type and you look at something that's more of a you know platform type",
    "start": "2967780",
    "end": "2974079"
  },
  {
    "text": "solution the extent to which those things are really intertwined and connected and you it's not really",
    "start": "2974079",
    "end": "2980319"
  },
  {
    "text": "something that you should consider outside your domain of expertise rather embrace it and and you'll be surprised",
    "start": "2980319",
    "end": "2986859"
  },
  {
    "text": "to find out to what degree it may even solve some problems that you maybe originally didn't Envision they would uh",
    "start": "2986859",
    "end": "2993040"
  },
  {
    "text": "they would help yourself well the service mesh is an amazing space and uh we're lucky to be all",
    "start": "2993040",
    "end": "2998800"
  },
  {
    "text": "involved with it Tom thank you so much for uh for speaking um some of you may not know but it's on had to step up",
    "start": "2998800",
    "end": "3005280"
  },
  {
    "text": "there and kind of put some stuff together last week for us because of a cancellation we had so thank you very",
    "start": "3005280",
    "end": "3010319"
  },
  {
    "text": "much for doing that and thank you very much for giving the talk on istio I hope you all enjoy the conversation today and",
    "start": "3010319",
    "end": "3016560"
  },
  {
    "text": "I look forward to hearing more from you on the slack channels thanks Tom it's my pleasure with bye",
    "start": "3016560",
    "end": "3024440"
  },
  {
    "text": "[Music] thank you",
    "start": "3026770",
    "end": "3034160"
  }
]