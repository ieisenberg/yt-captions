[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "360",
    "end": "20039"
  },
  {
    "text": "all right my name is Runar um and I'm G",
    "start": "20039",
    "end": "22720"
  },
  {
    "text": "be talking about dependency ejection",
    "start": "22720",
    "end": "25160"
  },
  {
    "text": "from my point of view uh we don't have a",
    "start": "25160",
    "end": "27119"
  },
  {
    "text": "lot of time so I'm going to Jump Right",
    "start": "27119",
    "end": "28359"
  },
  {
    "text": "In",
    "start": "28359",
    "end": "30240"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "uh so a little bit about me first I'm a",
    "start": "30240",
    "end": "32078"
  },
  {
    "text": "software engineer at Capital IQ right",
    "start": "32079",
    "end": "33840"
  },
  {
    "text": "here in Boston I contribute to the",
    "start": "33840",
    "end": "35680"
  },
  {
    "text": "schola Z",
    "start": "35680",
    "end": "36920"
  },
  {
    "text": "library and uh I'm currently writing a",
    "start": "36920",
    "end": "39760"
  },
  {
    "text": "book about functional programming in",
    "start": "39760",
    "end": "41559"
  },
  {
    "text": "Scola and the uh Early Access program",
    "start": "41559",
    "end": "44520"
  },
  {
    "text": "from Manning was was uh put online today",
    "start": "44520",
    "end": "47760"
  },
  {
    "text": "and so you can go and uh check out the",
    "start": "47760",
    "end": "49960"
  },
  {
    "text": "first chapter uh there's a couple of",
    "start": "49960",
    "end": "52600"
  },
  {
    "text": "chapters that you can you can check out",
    "start": "52600",
    "end": "54079"
  },
  {
    "text": "already and if you use this promotional",
    "start": "54079",
    "end": "55920"
  },
  {
    "text": "code here I'm told that you can get a",
    "start": "55920",
    "end": "57480"
  },
  {
    "text": "40% discount",
    "start": "57480",
    "end": "61079"
  },
  {
    "text": "oh good thank",
    "start": "61079",
    "end": "64280"
  },
  {
    "text": "you okay so let's let's Jump Right In um",
    "start": "64600",
    "end": "68360"
  },
  {
    "text": "so here we have you know a Scala method",
    "start": "68360",
    "end": "71159"
  },
  {
    "text": "that updates some some data in a",
    "start": "71159",
    "end": "74000"
  },
  {
    "text": "database and you'll notice that",
    "start": "74000",
    "end": "75439"
  },
  {
    "text": "everything here is kind of hardcoded U",
    "start": "75439",
    "end": "77520"
  },
  {
    "text": "it's self-contained but uh you know I",
    "start": "77520",
    "end": "80520"
  },
  {
    "text": "have hard-coded the the sqlite uh jtbc",
    "start": "80520",
    "end": "83479"
  },
  {
    "text": "driver here and I have a a URL that's",
    "start": "83479",
    "end": "85960"
  },
  {
    "text": "hardcoded so this isn't very very",
    "start": "85960",
    "end": "88479"
  },
  {
    "text": "reusable or anything like that that you",
    "start": "88479",
    "end": "90360"
  },
  {
    "text": "know fine for a little little toy test",
    "start": "90360",
    "end": "93040"
  },
  {
    "text": "uh but it's this is not how you want to",
    "start": "93040",
    "end": "95439"
  },
  {
    "text": "write actual actual applications so one",
    "start": "95439",
    "end": "98320"
  },
  {
    "text": "thing that people might might do is that",
    "start": "98320",
    "end": "101600"
  },
  {
    "text": "they use some kind of global Factory to",
    "start": "101600",
    "end": "103360"
  },
  {
    "text": "provide the database connection so you",
    "start": "103360",
    "end": "105520"
  },
  {
    "text": "have this connection Factory thing uh",
    "start": "105520",
    "end": "107960"
  },
  {
    "text": "and it can give you a",
    "start": "107960",
    "end": "109840"
  },
  {
    "text": "connection uh now you'll notice that uh",
    "start": "109840",
    "end": "113399"
  },
  {
    "text": "on the previous slide I was closing the",
    "start": "113399",
    "end": "116119"
  },
  {
    "text": "the connection at the end but here uh",
    "start": "116119",
    "end": "118719"
  },
  {
    "text": "when I'm getting a connection from this",
    "start": "118719",
    "end": "120439"
  },
  {
    "text": "connection Factory it's not really clear",
    "start": "120439",
    "end": "122360"
  },
  {
    "text": "whose responsibility it is uh to close",
    "start": "122360",
    "end": "124880"
  },
  {
    "text": "the",
    "start": "124880",
    "end": "126079"
  },
  {
    "text": "connection uh and so this is a really",
    "start": "126079",
    "end": "128599"
  },
  {
    "start": "127000",
    "end": "127000"
  },
  {
    "text": "bad idea for other reasons as well uh it",
    "start": "128599",
    "end": "131920"
  },
  {
    "text": "introduces this hidden dependency on",
    "start": "131920",
    "end": "133599"
  },
  {
    "text": "this global object uh and it requires",
    "start": "133599",
    "end": "136640"
  },
  {
    "text": "this initialization step like you can't",
    "start": "136640",
    "end": "138360"
  },
  {
    "text": "call this method before it uh that",
    "start": "138360",
    "end": "142200"
  },
  {
    "text": "object has been initialized",
    "start": "142200",
    "end": "143879"
  },
  {
    "text": "somehow and um yeah that's all I have to",
    "start": "143879",
    "end": "147920"
  },
  {
    "text": "say about that",
    "start": "147920",
    "end": "150319"
  },
  {
    "start": "148000",
    "end": "148000"
  },
  {
    "text": "so the solution to that is inversion of",
    "start": "150319",
    "end": "152959"
  },
  {
    "text": "control which is really just the",
    "start": "152959",
    "end": "154360"
  },
  {
    "text": "pretentious way of saying taking an",
    "start": "154360",
    "end": "156879"
  },
  {
    "text": "argument",
    "start": "156879",
    "end": "159879"
  },
  {
    "text": "uh so so here I'm taking an argument I'm",
    "start": "161720",
    "end": "165000"
  },
  {
    "text": "I'm injecting or or you know I'm I'm",
    "start": "165000",
    "end": "168040"
  },
  {
    "text": "taking taking this argument C which is a",
    "start": "168040",
    "end": "170080"
  },
  {
    "text": "database connection right uh no",
    "start": "170080",
    "end": "172400"
  },
  {
    "text": "injection going on here yet but uh so",
    "start": "172400",
    "end": "176360"
  },
  {
    "text": "you can see that I don't care where this",
    "start": "176360",
    "end": "178319"
  },
  {
    "text": "connection comes from I just just accept",
    "start": "178319",
    "end": "180319"
  },
  {
    "text": "that I have one and I'm just going to",
    "start": "180319",
    "end": "182200"
  },
  {
    "text": "use it and I don't I don't care how it's",
    "start": "182200",
    "end": "183959"
  },
  {
    "text": "discarded so I don't have to know how to",
    "start": "183959",
    "end": "186560"
  },
  {
    "text": "obtain connections I don't have to know",
    "start": "186560",
    "end": "188599"
  },
  {
    "text": "how to uh discard connections when I'm",
    "start": "188599",
    "end": "190799"
  },
  {
    "text": "done with them I just assume that this",
    "start": "190799",
    "end": "192120"
  },
  {
    "text": "connection is",
    "start": "192120",
    "end": "193840"
  },
  {
    "text": "open",
    "start": "193840",
    "end": "195599"
  },
  {
    "text": "um but you know you might you might",
    "start": "195599",
    "end": "198120"
  },
  {
    "text": "object and say well what if the thing",
    "start": "198120",
    "end": "200120"
  },
  {
    "text": "that knows how to create and discard of",
    "start": "200120",
    "end": "202519"
  },
  {
    "text": "databas database connections is way up",
    "start": "202519",
    "end": "204760"
  },
  {
    "text": "here in Maine and then you know down in",
    "start": "204760",
    "end": "208080"
  },
  {
    "text": "my my call graph I have some code that",
    "start": "208080",
    "end": "210680"
  },
  {
    "text": "actually needs the connection do I do I",
    "start": "210680",
    "end": "212319"
  },
  {
    "text": "now need to pass the connection all the",
    "start": "212319",
    "end": "214000"
  },
  {
    "text": "way through that's going to get pretty",
    "start": "214000",
    "end": "216519"
  },
  {
    "text": "cumbersome um and so the solution to",
    "start": "216519",
    "end": "220319"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "that is",
    "start": "220319",
    "end": "221959"
  },
  {
    "text": "currying uh and I'll show you show you",
    "start": "221959",
    "end": "224040"
  },
  {
    "text": "why that is here so this is what my code",
    "start": "224040",
    "end": "227200"
  },
  {
    "text": "looked like on on the previous slide and",
    "start": "227200",
    "end": "229400"
  },
  {
    "text": "then I'm going to Curry this this method",
    "start": "229400",
    "end": "231959"
  },
  {
    "text": "and that's what that looks like so",
    "start": "231959",
    "end": "234000"
  },
  {
    "start": "232000",
    "end": "232000"
  },
  {
    "text": "instead of passing in the connection",
    "start": "234000",
    "end": "235599"
  },
  {
    "text": "right away I'm simply going to partially",
    "start": "235599",
    "end": "238400"
  },
  {
    "text": "apply uh and so what I'm going to return",
    "start": "238400",
    "end": "242480"
  },
  {
    "text": "instead of you know returning uh unit",
    "start": "242480",
    "end": "245760"
  },
  {
    "text": "I'm going to actually return a function",
    "start": "245760",
    "end": "247599"
  },
  {
    "text": "that accepts the connection at a",
    "start": "247599",
    "end": "249959"
  },
  {
    "text": "convenient time and so you can see I'm",
    "start": "249959",
    "end": "252560"
  },
  {
    "text": "returning a function literal it takes",
    "start": "252560",
    "end": "254079"
  },
  {
    "text": "some connection C and then it does all",
    "start": "254079",
    "end": "256079"
  },
  {
    "text": "the things that I was doing before in",
    "start": "256079",
    "end": "257720"
  },
  {
    "text": "exactly the same way the only difference",
    "start": "257720",
    "end": "259600"
  },
  {
    "text": "is that uh I'm delaying the actual",
    "start": "259600",
    "end": "261919"
  },
  {
    "text": "passing of the",
    "start": "261919",
    "end": "263160"
  },
  {
    "text": "connection um and we can capture this in",
    "start": "263160",
    "end": "266440"
  },
  {
    "text": "a data type this is just for for",
    "start": "266440",
    "end": "268479"
  },
  {
    "text": "convenience you may or may not not want",
    "start": "268479",
    "end": "269960"
  },
  {
    "text": "to do this in real life um but this is",
    "start": "269960",
    "end": "272479"
  },
  {
    "text": "just to show you and so uh this is just",
    "start": "272479",
    "end": "275479"
  },
  {
    "text": "a wrapper around this type connection to",
    "start": "275479",
    "end": "277919"
  },
  {
    "text": "a for for uh type A so a DB of a is like",
    "start": "277919",
    "end": "282680"
  },
  {
    "text": "a database action given in a connection",
    "start": "282680",
    "end": "285360"
  },
  {
    "text": "it can it can produce some value of type",
    "start": "285360",
    "end": "287800"
  },
  {
    "text": "a uh I have an apply method to make it",
    "start": "287800",
    "end": "290120"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "convenient to call and it you can have",
    "start": "290120",
    "end": "294160"
  },
  {
    "text": "this uh this map method on it which will",
    "start": "294160",
    "end": "296919"
  },
  {
    "text": "allow you to take any exist existing",
    "start": "296919",
    "end": "299160"
  },
  {
    "text": "function",
    "start": "299160",
    "end": "300320"
  },
  {
    "text": "for for any types A and B if you have a",
    "start": "300320",
    "end": "302800"
  },
  {
    "text": "function from A to B you can uh promote",
    "start": "302800",
    "end": "306199"
  },
  {
    "text": "it to a function that operates on these",
    "start": "306199",
    "end": "308680"
  },
  {
    "text": "database actions so you'll notice that",
    "start": "308680",
    "end": "310479"
  },
  {
    "text": "your existing code doesn't have to know",
    "start": "310479",
    "end": "312440"
  },
  {
    "text": "anything about uh database connections",
    "start": "312440",
    "end": "315560"
  },
  {
    "text": "you can just simply take all your",
    "start": "315560",
    "end": "316720"
  },
  {
    "text": "existing code and kind of lift it so",
    "start": "316720",
    "end": "318800"
  },
  {
    "text": "that it passes the the connection along",
    "start": "318800",
    "end": "321720"
  },
  {
    "text": "um and you'll also notice that the",
    "start": "321720",
    "end": "323440"
  },
  {
    "text": "implementation of map is just function",
    "start": "323440",
    "end": "326560"
  },
  {
    "text": "composition and in order to combine two",
    "start": "326560",
    "end": "329240"
  },
  {
    "start": "327000",
    "end": "327000"
  },
  {
    "text": "actions so say I have some action that",
    "start": "329240",
    "end": "331680"
  },
  {
    "text": "produces is there a question in the back",
    "start": "331680",
    "end": "334039"
  },
  {
    "text": "yes did you forget to WRA the results",
    "start": "334039",
    "end": "336360"
  },
  {
    "text": "for math what",
    "start": "336360",
    "end": "338919"
  },
  {
    "text": "happen uh I may have I may have been",
    "start": "338919",
    "end": "341720"
  },
  {
    "text": "assuming that there was a an implicit",
    "start": "341720",
    "end": "344280"
  },
  {
    "text": "conversion",
    "start": "344280",
    "end": "346520"
  },
  {
    "text": "from",
    "start": "346520",
    "end": "348880"
  },
  {
    "text": "yeah so yeah just assume that there's an",
    "start": "348880",
    "end": "351319"
  },
  {
    "text": "implicit conversion from from connection",
    "start": "351319",
    "end": "353440"
  },
  {
    "text": "uh from function one to DB",
    "start": "353440",
    "end": "357680"
  },
  {
    "text": "um so anyway",
    "start": "357680",
    "end": "360720"
  },
  {
    "text": "uh what what happens here in flap map is",
    "start": "360720",
    "end": "363240"
  },
  {
    "text": "that we get to combine two actions so if",
    "start": "363240",
    "end": "366520"
  },
  {
    "text": "you have an action that produces some",
    "start": "366520",
    "end": "369400"
  },
  {
    "text": "some value of type A in our case this um",
    "start": "369400",
    "end": "372639"
  },
  {
    "text": "and then you call flap map with a",
    "start": "372639",
    "end": "374479"
  },
  {
    "text": "function that then consumes that a so",
    "start": "374479",
    "end": "377680"
  },
  {
    "text": "requires depends on it uh wants it",
    "start": "377680",
    "end": "381800"
  },
  {
    "text": "injected if you will uh then you can you",
    "start": "381800",
    "end": "385680"
  },
  {
    "text": "can flap map that function over it and",
    "start": "385680",
    "end": "387599"
  },
  {
    "text": "that will give you one combined action",
    "start": "387599",
    "end": "389759"
  },
  {
    "text": "so you can you can combine uh two",
    "start": "389759",
    "end": "391840"
  },
  {
    "text": "database actions together using flat",
    "start": "391840",
    "end": "394800"
  },
  {
    "text": "map and uh this thing is a monad because",
    "start": "394800",
    "end": "398080"
  },
  {
    "start": "395000",
    "end": "395000"
  },
  {
    "text": "you have flat map and the other",
    "start": "398080",
    "end": "399880"
  },
  {
    "text": "component that you need is this pure",
    "start": "399880",
    "end": "401400"
  },
  {
    "text": "method which is uh really as simple as",
    "start": "401400",
    "end": "403840"
  },
  {
    "text": "it could be um takes some value of of a",
    "start": "403840",
    "end": "406840"
  },
  {
    "text": "type A and wraps it in one of these",
    "start": "406840",
    "end": "408960"
  },
  {
    "text": "database actions that proceeds to ignore",
    "start": "408960",
    "end": "411720"
  },
  {
    "text": "the",
    "start": "411720",
    "end": "412720"
  },
  {
    "text": "connection",
    "start": "412720",
    "end": "414360"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "um and having map and flatmap methods on",
    "start": "414360",
    "end": "418319"
  },
  {
    "text": "this thing allow us to sequence it",
    "start": "418319",
    "end": "420360"
  },
  {
    "text": "through uh Monet",
    "start": "420360",
    "end": "421960"
  },
  {
    "text": "comprehension uh using the the Scola",
    "start": "421960",
    "end": "424120"
  },
  {
    "text": "four syntax uh so you'll notice that",
    "start": "424120",
    "end": "427919"
  },
  {
    "text": "here I'm not actually talking about the",
    "start": "427919",
    "end": "430319"
  },
  {
    "text": "database connection at all none of this",
    "start": "430319",
    "end": "432800"
  },
  {
    "text": "code actually uh mentions the connection",
    "start": "432800",
    "end": "435639"
  },
  {
    "text": "it's just assumed and it's all threaded",
    "start": "435639",
    "end": "438360"
  },
  {
    "text": "through this code for me by the fact",
    "start": "438360",
    "end": "441000"
  },
  {
    "text": "that uh that it's a monad that I have",
    "start": "441000",
    "end": "444160"
  },
  {
    "text": "map and Flat map methods that are",
    "start": "444160",
    "end": "445560"
  },
  {
    "text": "implemented a certain",
    "start": "445560",
    "end": "447800"
  },
  {
    "text": "way um and so at the end of the day",
    "start": "447800",
    "end": "451639"
  },
  {
    "start": "449000",
    "end": "449000"
  },
  {
    "text": "you're going to want to pass a database",
    "start": "451639",
    "end": "454240"
  },
  {
    "text": "connection to one of these one of these",
    "start": "454240",
    "end": "456479"
  },
  {
    "text": "actions that you've",
    "start": "456479",
    "end": "458280"
  },
  {
    "text": "composed uh so what what you want to do",
    "start": "458280",
    "end": "461120"
  },
  {
    "text": "is have some abstract class uh that",
    "start": "461120",
    "end": "463120"
  },
  {
    "text": "provides a",
    "start": "463120",
    "end": "464400"
  },
  {
    "text": "connection and and here that's just it",
    "start": "464400",
    "end": "467240"
  },
  {
    "text": "takes a database action and gives it a",
    "start": "467240",
    "end": "469440"
  },
  {
    "text": "connection and extracts the the value of",
    "start": "469440",
    "end": "471800"
  },
  {
    "text": "type a um and I have a",
    "start": "471800",
    "end": "475240"
  },
  {
    "text": "concrete uh Constructor of that here uh",
    "start": "475240",
    "end": "478400"
  },
  {
    "text": "make provider takes a driver and a URL",
    "start": "478400",
    "end": "481919"
  },
  {
    "text": "and then connects using that driver and",
    "start": "481919",
    "end": "484199"
  },
  {
    "text": "that URL passes the connection uh to you",
    "start": "484199",
    "end": "489280"
  },
  {
    "text": "know a given a given database action and",
    "start": "489280",
    "end": "492240"
  },
  {
    "text": "then closes the connection so really",
    "start": "492240",
    "end": "496879"
  },
  {
    "text": "simple uh and here are a couple of",
    "start": "496879",
    "end": "498639"
  },
  {
    "start": "497000",
    "end": "497000"
  },
  {
    "text": "concrete instances of that like you",
    "start": "498639",
    "end": "500479"
  },
  {
    "text": "might have uh a couple of",
    "start": "500479",
    "end": "502000"
  },
  {
    "text": "implementations of your of your uh",
    "start": "502000",
    "end": "504599"
  },
  {
    "text": "connection provider interface and here",
    "start": "504599",
    "end": "506319"
  },
  {
    "text": "are two implementations one is like a a",
    "start": "506319",
    "end": "508120"
  },
  {
    "text": "test database in sequ light and the",
    "start": "508120",
    "end": "510000"
  },
  {
    "text": "other one might be a a MySQL uh",
    "start": "510000",
    "end": "512760"
  },
  {
    "text": "production",
    "start": "512760",
    "end": "513640"
  },
  {
    "text": "database and so how do you select",
    "start": "513640",
    "end": "515919"
  },
  {
    "text": "between these two like you you want at",
    "start": "515919",
    "end": "518919"
  },
  {
    "text": "you know when you're actually writing",
    "start": "518919",
    "end": "521080"
  },
  {
    "text": "your application you want to inject the",
    "start": "521080",
    "end": "524200"
  },
  {
    "text": "correct one right uh depending on some",
    "start": "524200",
    "end": "528959"
  },
  {
    "text": "something and for instance here is a",
    "start": "528959",
    "end": "531080"
  },
  {
    "start": "529000",
    "end": "529000"
  },
  {
    "text": "program that needs a connection provider",
    "start": "531080",
    "end": "532920"
  },
  {
    "text": "it it asks to have a connection provider",
    "start": "532920",
    "end": "535320"
  },
  {
    "text": "injected if you will and so you'll",
    "start": "535320",
    "end": "537399"
  },
  {
    "text": "notice that I'm doing the exact same",
    "start": "537399",
    "end": "538640"
  },
  {
    "text": "thing I was doing with with connections",
    "start": "538640",
    "end": "540519"
  },
  {
    "text": "I'm just",
    "start": "540519",
    "end": "541920"
  },
  {
    "text": "currying so this thing requires a",
    "start": "541920",
    "end": "544480"
  },
  {
    "text": "connection provider",
    "start": "544480",
    "end": "545800"
  },
  {
    "text": "R and then you know does some some stuff",
    "start": "545800",
    "end": "549200"
  },
  {
    "text": "to interact with the user and then it",
    "start": "549200",
    "end": "551120"
  },
  {
    "text": "calls our change password method from",
    "start": "551120",
    "end": "553079"
  },
  {
    "text": "before which is a database action and",
    "start": "553079",
    "end": "555000"
  },
  {
    "text": "passes that action to R and it will then",
    "start": "555000",
    "end": "557320"
  },
  {
    "text": "receive a database connection it will be",
    "start": "557320",
    "end": "559279"
  },
  {
    "text": "injected into it if you",
    "start": "559279",
    "end": "561000"
  },
  {
    "text": "will uh and you know everyone will be",
    "start": "561000",
    "end": "564399"
  },
  {
    "text": "happy so the injection actually occurs",
    "start": "564399",
    "end": "567959"
  },
  {
    "text": "like this um",
    "start": "567959",
    "end": "570120"
  },
  {
    "text": "for instance if I want to run something",
    "start": "570120",
    "end": "571440"
  },
  {
    "text": "in test I simply pass the test database",
    "start": "571440",
    "end": "576200"
  },
  {
    "text": "to it if I want to run run something in",
    "start": "576200",
    "end": "578040"
  },
  {
    "text": "production I pass the production",
    "start": "578040",
    "end": "579480"
  },
  {
    "text": "database to it and here's an example of",
    "start": "579480",
    "end": "582279"
  },
  {
    "text": "a main where I run my program program on",
    "start": "582279",
    "end": "585480"
  },
  {
    "text": "the previous slide in test by simply",
    "start": "585480",
    "end": "588480"
  },
  {
    "text": "passing the program uh to uh to my run",
    "start": "588480",
    "end": "591920"
  },
  {
    "text": "in test and so that's really simple and",
    "start": "591920",
    "end": "595839"
  },
  {
    "start": "595000",
    "end": "595000"
  },
  {
    "text": "so here is your dependency injection",
    "start": "595839",
    "end": "597560"
  },
  {
    "text": "framework it all fits on this one slide",
    "start": "597560",
    "end": "600959"
  },
  {
    "text": "uh it's uh I I've I've abstracted this a",
    "start": "600959",
    "end": "605120"
  },
  {
    "text": "little bit so now it's a reader from C",
    "start": "605120",
    "end": "608120"
  },
  {
    "text": "to a instead of being you know a",
    "start": "608120",
    "end": "610600"
  },
  {
    "text": "database reader or or something",
    "start": "610600",
    "end": "612600"
  },
  {
    "text": "something uh concrete whereas before our",
    "start": "612600",
    "end": "615880"
  },
  {
    "text": "C was like a database connection now",
    "start": "615880",
    "end": "617839"
  },
  {
    "text": "it's any c any c that you care to to uh",
    "start": "617839",
    "end": "620760"
  },
  {
    "text": "inject or pass",
    "start": "620760",
    "end": "622959"
  },
  {
    "text": "around um you know it has the same",
    "start": "622959",
    "end": "625440"
  },
  {
    "text": "implementations of map and Flat map as",
    "start": "625440",
    "end": "627160"
  },
  {
    "text": "before the only thing that changes is",
    "start": "627160",
    "end": "628680"
  },
  {
    "text": "the type and then we have pure making",
    "start": "628680",
    "end": "630920"
  },
  {
    "text": "this whole thing a Monet and we can use",
    "start": "630920",
    "end": "632640"
  },
  {
    "text": "it in Monet comprehensions and here's",
    "start": "632640",
    "end": "634440"
  },
  {
    "text": "our my implicit for for Daniel my that I",
    "start": "634440",
    "end": "638200"
  },
  {
    "text": "omit it",
    "start": "638200",
    "end": "640800"
  },
  {
    "text": "earlier okay um",
    "start": "640800",
    "end": "644760"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "so uh things that that I like about the",
    "start": "644760",
    "end": "647480"
  },
  {
    "text": "ROM Monet are it's well it's it's really",
    "start": "647480",
    "end": "650200"
  },
  {
    "text": "as simple as it could possibly be it's",
    "start": "650200",
    "end": "651720"
  },
  {
    "text": "literally just function composition um",
    "start": "651720",
    "end": "654720"
  },
  {
    "text": "all the dependencies are explicit they",
    "start": "654720",
    "end": "658000"
  },
  {
    "text": "are they are advertised in type and you",
    "start": "658000",
    "end": "660519"
  },
  {
    "text": "can't not pass something its",
    "start": "660519",
    "end": "662720"
  },
  {
    "text": "dependencies it's not",
    "start": "662720",
    "end": "664720"
  },
  {
    "text": "possible uh you can take any existing",
    "start": "664720",
    "end": "667040"
  },
  {
    "text": "code any existing function and lift it",
    "start": "667040",
    "end": "668880"
  },
  {
    "text": "into this monad um it doesn't have to",
    "start": "668880",
    "end": "671440"
  },
  {
    "text": "know anything about uh your your",
    "start": "671440",
    "end": "673920"
  },
  {
    "text": "dependencies beforehand there are no",
    "start": "673920",
    "end": "676320"
  },
  {
    "text": "Frameworks to download no jars to drop",
    "start": "676320",
    "end": "678240"
  },
  {
    "text": "into your class path there are no",
    "start": "678240",
    "end": "680120"
  },
  {
    "text": "annotations no XML uh there's no magic",
    "start": "680120",
    "end": "683079"
  },
  {
    "text": "initialization step like you have to you",
    "start": "683079",
    "end": "684800"
  },
  {
    "text": "know build this injector framework uh",
    "start": "684800",
    "end": "687959"
  },
  {
    "text": "beforehand and doesn't rely on any uh",
    "start": "687959",
    "end": "691200"
  },
  {
    "text": "Advanced language features like uh",
    "start": "691200",
    "end": "693920"
  },
  {
    "text": "dependent method types or or that kind",
    "start": "693920",
    "end": "695720"
  },
  {
    "text": "of thing so it's really really",
    "start": "695720",
    "end": "698839"
  },
  {
    "text": "simple um now you know it's not all a",
    "start": "698839",
    "end": "702120"
  },
  {
    "text": "win so there are certain things that",
    "start": "702120",
    "end": "704399"
  },
  {
    "text": "that are made a little bit difficult",
    "start": "704399",
    "end": "706240"
  },
  {
    "text": "like for instance if you write a lot of",
    "start": "706240",
    "end": "708519"
  },
  {
    "text": "code uh in monatic style like if you if",
    "start": "708519",
    "end": "711120"
  },
  {
    "text": "you use a lot of other monads then",
    "start": "711120",
    "end": "713040"
  },
  {
    "text": "composing composing the reader Monet",
    "start": "713040",
    "end": "715120"
  },
  {
    "text": "with your existing monets may get a",
    "start": "715120",
    "end": "718079"
  },
  {
    "text": "little may get a little hary uh you",
    "start": "718079",
    "end": "720560"
  },
  {
    "text": "might might get verbose it's not",
    "start": "720560",
    "end": "722399"
  },
  {
    "text": "necessarily difficult it's just that you",
    "start": "722399",
    "end": "724040"
  },
  {
    "text": "might have to write more code than you",
    "start": "724040",
    "end": "725480"
  },
  {
    "text": "like uh and you can see an example of",
    "start": "725480",
    "end": "727680"
  },
  {
    "text": "that if you look at uh kley in the",
    "start": "727680",
    "end": "729760"
  },
  {
    "text": "scholar Library which is a reader monad",
    "start": "729760",
    "end": "734000"
  },
  {
    "text": "Transformer um also juggling multiple",
    "start": "734000",
    "end": "737440"
  },
  {
    "text": "configurations at once uh so if you have",
    "start": "737440",
    "end": "740639"
  },
  {
    "text": "you know some some set of programs over",
    "start": "740639",
    "end": "742360"
  },
  {
    "text": "here that require say you know an A and",
    "start": "742360",
    "end": "745399"
  },
  {
    "text": "then you have a set of programs over",
    "start": "745399",
    "end": "746880"
  },
  {
    "text": "here that require a b then and composing",
    "start": "746880",
    "end": "750760"
  },
  {
    "text": "those together into programs that",
    "start": "750760",
    "end": "752000"
  },
  {
    "text": "require both an A and A B or either an A",
    "start": "752000",
    "end": "755160"
  },
  {
    "text": "or a B that can be uh it could be",
    "start": "755160",
    "end": "758040"
  },
  {
    "text": "awkward it's not you know hard but it's",
    "start": "758040",
    "end": "761040"
  },
  {
    "text": "a little more Awkward than I'd like uh",
    "start": "761040",
    "end": "763480"
  },
  {
    "text": "also you have to start writing programs",
    "start": "763480",
    "end": "765079"
  },
  {
    "text": "in monatic style which you know I'm fine",
    "start": "765079",
    "end": "767680"
  },
  {
    "text": "with I'm I'm writing programs in monatic",
    "start": "767680",
    "end": "769160"
  },
  {
    "text": "style anyway um so it's you know it's",
    "start": "769160",
    "end": "773399"
  },
  {
    "text": "not terrible and Scala already provides",
    "start": "773399",
    "end": "776839"
  },
  {
    "text": "you know Monet comprehensions for us so",
    "start": "776839",
    "end": "778639"
  },
  {
    "text": "it's not really",
    "start": "778639",
    "end": "780000"
  },
  {
    "text": "uh not really a problem and there's no",
    "start": "780000",
    "end": "783240"
  },
  {
    "text": "it doesn't have any of this Auto wiring",
    "start": "783240",
    "end": "785040"
  },
  {
    "text": "like for instance if you have something",
    "start": "785040",
    "end": "786639"
  },
  {
    "text": "like juice uh juice",
    "start": "786639",
    "end": "789320"
  },
  {
    "text": "will uh it'll sort of wire up all your",
    "start": "789320",
    "end": "793720"
  },
  {
    "text": "dependencies for you in this in this",
    "start": "793720",
    "end": "795399"
  },
  {
    "text": "magic initialization step that happens",
    "start": "795399",
    "end": "797320"
  },
  {
    "text": "at the beginning um and you never have",
    "start": "797320",
    "end": "800240"
  },
  {
    "text": "to sort of mention the fact that you're",
    "start": "800240",
    "end": "802920"
  },
  {
    "text": "passing dependencies uh into into this",
    "start": "802920",
    "end": "806800"
  },
  {
    "text": "uh thing that that requires them",
    "start": "806800",
    "end": "809959"
  },
  {
    "text": "but implicits can actually compensate",
    "start": "809959",
    "end": "811440"
  },
  {
    "text": "for that you still with any dependency",
    "start": "811440",
    "end": "813920"
  },
  {
    "text": "in framework you still need a",
    "start": "813920",
    "end": "816120"
  },
  {
    "text": "configuration file or whatever that or",
    "start": "816120",
    "end": "818720"
  },
  {
    "text": "something that is specifying your",
    "start": "818720",
    "end": "820000"
  },
  {
    "text": "dependencies whether it's the code or",
    "start": "820000",
    "end": "821560"
  },
  {
    "text": "whether it's some XML file or yeah yeah",
    "start": "821560",
    "end": "824480"
  },
  {
    "text": "Paul comments that uh that with any",
    "start": "824480",
    "end": "827360"
  },
  {
    "text": "inject injection uh framework you'll",
    "start": "827360",
    "end": "830519"
  },
  {
    "text": "have to have some kind of configuration",
    "start": "830519",
    "end": "832519"
  },
  {
    "text": "where you actually do talk about all",
    "start": "832519",
    "end": "833920"
  },
  {
    "text": "your dependencies and so it's",
    "start": "833920",
    "end": "835320"
  },
  {
    "text": "essentially the same as uh as mentioning",
    "start": "835320",
    "end": "838000"
  },
  {
    "text": "them explicitly",
    "start": "838000",
    "end": "840480"
  },
  {
    "text": "okay so that was the reader minute now",
    "start": "840480",
    "end": "843959"
  },
  {
    "text": "uh I want to take this idea a little bit",
    "start": "843959",
    "end": "846240"
  },
  {
    "start": "846000",
    "end": "846000"
  },
  {
    "text": "further so imagine for for a minute if",
    "start": "846240",
    "end": "850320"
  },
  {
    "text": "you want to",
    "start": "850320",
    "end": "851480"
  },
  {
    "text": "inject uh or you know pass in uh",
    "start": "851480",
    "end": "855440"
  },
  {
    "text": "something like a key value store and",
    "start": "855440",
    "end": "857839"
  },
  {
    "text": "this is this is a a side Effy uh",
    "start": "857839",
    "end": "861040"
  },
  {
    "text": "interface uh a key value store has these",
    "start": "861040",
    "end": "863759"
  },
  {
    "text": "capabilities where you can put get and",
    "start": "863759",
    "end": "865240"
  },
  {
    "text": "delete so you can you can you know put a",
    "start": "865240",
    "end": "867519"
  },
  {
    "text": "value under a string you can get the",
    "start": "867519",
    "end": "869160"
  },
  {
    "text": "value under a uh under a key and you can",
    "start": "869160",
    "end": "872120"
  },
  {
    "text": "delete the value under a",
    "start": "872120",
    "end": "873920"
  },
  {
    "text": "key um and so if this were done in the",
    "start": "873920",
    "end": "876959"
  },
  {
    "text": "reader Monet if you write this method",
    "start": "876959",
    "end": "879000"
  },
  {
    "text": "modify that requires a key value store",
    "start": "879000",
    "end": "881560"
  },
  {
    "text": "then you say you know you return a",
    "start": "881560",
    "end": "883800"
  },
  {
    "text": "reader of key value stores and uh and",
    "start": "883800",
    "end": "887040"
  },
  {
    "text": "here's a little program that you know",
    "start": "887040",
    "end": "888320"
  },
  {
    "text": "gets a key stores it in a value and then",
    "start": "888320",
    "end": "890320"
  },
  {
    "text": "puts the modified uh value back you know",
    "start": "890320",
    "end": "895000"
  },
  {
    "text": "that's that's great that's a reader mod",
    "start": "895000",
    "end": "896360"
  },
  {
    "text": "not but I want you to imagine for a",
    "start": "896360",
    "end": "898440"
  },
  {
    "text": "minute If instead of accepting a key",
    "start": "898440",
    "end": "902360"
  },
  {
    "text": "value store and then proceeding to",
    "start": "902360",
    "end": "904160"
  },
  {
    "text": "manipulate it why don't we instead",
    "start": "904160",
    "end": "907279"
  },
  {
    "text": "return ah return a little program",
    "start": "907279",
    "end": "912519"
  },
  {
    "text": "that uh tells the caller what we might",
    "start": "912519",
    "end": "915880"
  },
  {
    "text": "do to a key value store if we had one so",
    "start": "915880",
    "end": "919120"
  },
  {
    "text": "don't give me a key value store I'm",
    "start": "919120",
    "end": "920880"
  },
  {
    "text": "going to give you a program that you're",
    "start": "920880",
    "end": "922079"
  },
  {
    "text": "going to run once you have a key value",
    "start": "922079",
    "end": "924959"
  },
  {
    "text": "store and so that per that little",
    "start": "924959",
    "end": "927040"
  },
  {
    "start": "926000",
    "end": "926000"
  },
  {
    "text": "language might look like this so we have",
    "start": "927040",
    "end": "929440"
  },
  {
    "text": "a sealed abstract trait",
    "start": "929440",
    "end": "931920"
  },
  {
    "text": "KVs and it'll have three cases you can",
    "start": "931920",
    "end": "934920"
  },
  {
    "text": "put get and delete and you'll notice",
    "start": "934920",
    "end": "937680"
  },
  {
    "text": "that each one of these guys has a",
    "start": "937680",
    "end": "939920"
  },
  {
    "text": "hole um of type",
    "start": "939920",
    "end": "943480"
  },
  {
    "text": "A and and what is that what is that",
    "start": "943480",
    "end": "946120"
  },
  {
    "text": "value of type A for well it's so that we",
    "start": "946120",
    "end": "948319"
  },
  {
    "text": "can Nest these together so we can put of",
    "start": "948319",
    "end": "951600"
  },
  {
    "text": "a get of a delete so kind of like a list",
    "start": "951600",
    "end": "956240"
  },
  {
    "text": "where we we Nest lists within lists you",
    "start": "956240",
    "end": "958759"
  },
  {
    "text": "know",
    "start": "958759",
    "end": "959600"
  },
  {
    "text": "there's a head and then the tail is",
    "start": "959600",
    "end": "960839"
  },
  {
    "text": "another list in this case a KVs is one",
    "start": "960839",
    "end": "964560"
  },
  {
    "text": "of these instructions and then another",
    "start": "964560",
    "end": "966600"
  },
  {
    "text": "one of these kbs's for something like",
    "start": "966600",
    "end": "969480"
  },
  {
    "text": "this if you want to",
    "start": "969480",
    "end": "971319"
  },
  {
    "text": "modify uh from our previous slide we had",
    "start": "971319",
    "end": "973800"
  },
  {
    "text": "this this monatic uh this for",
    "start": "973800",
    "end": "977199"
  },
  {
    "text": "comprehension but using this little",
    "start": "977199",
    "end": "979360"
  },
  {
    "text": "language it simply becomes you know get",
    "start": "979360",
    "end": "982560"
  },
  {
    "text": "K and then given uh the value that you",
    "start": "982560",
    "end": "986560"
  },
  {
    "text": "get out of it V put F of V and then",
    "start": "986560",
    "end": "989600"
  },
  {
    "text": "terminate with unit right pretty",
    "start": "989600",
    "end": "993360"
  },
  {
    "text": "straightforward and so we return a",
    "start": "993360",
    "end": "995279"
  },
  {
    "text": "program that kind of looks like this now",
    "start": "995279",
    "end": "997519"
  },
  {
    "text": "there's a problem and the problem is",
    "start": "997519",
    "end": "1000360"
  },
  {
    "text": "that this thing returns a KVs of a KVs",
    "start": "1000360",
    "end": "1002800"
  },
  {
    "text": "of",
    "start": "1002800",
    "end": "1003560"
  },
  {
    "text": "unit not exactly what we want and if we",
    "start": "1003560",
    "end": "1006040"
  },
  {
    "text": "you know get get get get put get delete",
    "start": "1006040",
    "end": "1008639"
  },
  {
    "text": "then it's going to be KVs KVs KVs KVs",
    "start": "1008639",
    "end": "1010800"
  },
  {
    "text": "KVs Etc and that's not what we want so",
    "start": "1010800",
    "end": "1014279"
  },
  {
    "text": "if only there were a way that we could",
    "start": "1014279",
    "end": "1017199"
  },
  {
    "text": "combine KVs of K SF into just kvsf that'",
    "start": "1017199",
    "end": "1021680"
  },
  {
    "text": "be really cool now what would that mean",
    "start": "1021680",
    "end": "1023919"
  },
  {
    "text": "exactly well it would mean that KVs has",
    "start": "1023919",
    "end": "1026079"
  },
  {
    "text": "to be what anybody a monad thank",
    "start": "1026079",
    "end": "1030520"
  },
  {
    "text": "you",
    "start": "1030520",
    "end": "1032480"
  },
  {
    "start": "1031000",
    "end": "1031000"
  },
  {
    "text": "so here is um a data structure is called",
    "start": "1032480",
    "end": "1037678"
  },
  {
    "text": "the free",
    "start": "1037679",
    "end": "1038880"
  },
  {
    "text": "Monet uh and it actually generates a",
    "start": "1038880",
    "end": "1041438"
  },
  {
    "text": "Monet given any functor and it just what",
    "start": "1041439",
    "end": "1044480"
  },
  {
    "text": "happens that our KVs thing is is a",
    "start": "1044480",
    "end": "1046558"
  },
  {
    "text": "funter and I'll show you that here in a",
    "start": "1046559",
    "end": "1047760"
  },
  {
    "text": "minute but what I want to draw your",
    "start": "1047760",
    "end": "1050000"
  },
  {
    "text": "attention to on this slide uh I know",
    "start": "1050000",
    "end": "1052039"
  },
  {
    "text": "it's it's sort of dense but what I want",
    "start": "1052039",
    "end": "1053760"
  },
  {
    "text": "to draw your attention to is that we",
    "start": "1053760",
    "end": "1055720"
  },
  {
    "text": "have this class",
    "start": "1055720",
    "end": "1056960"
  },
  {
    "text": "free and it has two uh cases it has two",
    "start": "1056960",
    "end": "1061000"
  },
  {
    "text": "you know um",
    "start": "1061000",
    "end": "1063520"
  },
  {
    "text": "implementations it can be either done in",
    "start": "1063520",
    "end": "1066440"
  },
  {
    "text": "which case we have a value of type A or",
    "start": "1066440",
    "end": "1069200"
  },
  {
    "text": "it can have more Fs in which case it'll",
    "start": "1069200",
    "end": "1072280"
  },
  {
    "text": "have an F of you know recurs recursion",
    "start": "1072280",
    "end": "1076480"
  },
  {
    "text": "so we want to recurse so for instance",
    "start": "1076480",
    "end": "1079760"
  },
  {
    "text": "you know you might have a more of more",
    "start": "1079760",
    "end": "1081640"
  },
  {
    "text": "of more of more of done and that will",
    "start": "1081640",
    "end": "1083760"
  },
  {
    "text": "still just be a free of fa",
    "start": "1083760",
    "end": "1088240"
  },
  {
    "text": "okay uh and you can see that this is a a",
    "start": "1088240",
    "end": "1091000"
  },
  {
    "text": "monad and we could use it in four",
    "start": "1091000",
    "end": "1092280"
  },
  {
    "text": "comprehensions because it has map and",
    "start": "1092280",
    "end": "1094280"
  },
  {
    "text": "Flat map",
    "start": "1094280",
    "end": "1095640"
  },
  {
    "text": "implemented um I won't go into",
    "start": "1095640",
    "end": "1098520"
  },
  {
    "start": "1098000",
    "end": "1098000"
  },
  {
    "text": "that uh so a functor is just something",
    "start": "1098520",
    "end": "1102320"
  },
  {
    "text": "that has a map method so if we have you",
    "start": "1102320",
    "end": "1104919"
  },
  {
    "text": "know a function from A to B then we can",
    "start": "1104919",
    "end": "1107000"
  },
  {
    "text": "turn that into a function uh from F of a",
    "start": "1107000",
    "end": "1110880"
  },
  {
    "text": "which is our a here to F of",
    "start": "1110880",
    "end": "1113720"
  },
  {
    "text": "B uh and I told you that KVs was a",
    "start": "1113720",
    "end": "1116480"
  },
  {
    "text": "funtor and there's there's proof of that",
    "start": "1116480",
    "end": "1119520"
  },
  {
    "text": "um and the implementation of of this",
    "start": "1119520",
    "end": "1121799"
  },
  {
    "text": "functor is simply you know pattern match",
    "start": "1121799",
    "end": "1124520"
  },
  {
    "text": "on on the uh structure and pull out the",
    "start": "1124520",
    "end": "1129159"
  },
  {
    "text": "the actual a and apply F to it and and",
    "start": "1129159",
    "end": "1131799"
  },
  {
    "text": "and then put it back together",
    "start": "1131799",
    "end": "1134120"
  },
  {
    "text": "right really",
    "start": "1134120",
    "end": "1135919"
  },
  {
    "text": "simple and so we can now get a KVs Monet",
    "start": "1135919",
    "end": "1139960"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "for",
    "start": "1139960",
    "end": "1140840"
  },
  {
    "text": "free so uh you see that these methods",
    "start": "1140840",
    "end": "1144760"
  },
  {
    "text": "put get and delete actually return a",
    "start": "1144760",
    "end": "1147880"
  },
  {
    "text": "free of KVs and and a you know unit",
    "start": "1147880",
    "end": "1151559"
  },
  {
    "text": "string and unit",
    "start": "1151559",
    "end": "1153679"
  },
  {
    "text": "respectively uh and they're just they're",
    "start": "1153679",
    "end": "1155799"
  },
  {
    "text": "constructing these little programs like",
    "start": "1155799",
    "end": "1157159"
  },
  {
    "text": "there's more you know put the",
    "start": "1157159",
    "end": "1159960"
  },
  {
    "text": "K uh with with the value V and then done",
    "start": "1159960",
    "end": "1163960"
  },
  {
    "text": "and then get is just more get K and with",
    "start": "1163960",
    "end": "1166600"
  },
  {
    "text": "the V say done V right so so we write",
    "start": "1166600",
    "end": "1170480"
  },
  {
    "text": "this these little programs and now we",
    "start": "1170480",
    "end": "1172600"
  },
  {
    "text": "can Implement modify In monatic Style by",
    "start": "1172600",
    "end": "1176280"
  },
  {
    "text": "saying you know four and then assign V",
    "start": "1176280",
    "end": "1180159"
  },
  {
    "text": "to to the value under the key K and then",
    "start": "1180159",
    "end": "1182760"
  },
  {
    "text": "put F of V into K and that is um you",
    "start": "1182760",
    "end": "1187799"
  },
  {
    "text": "know a free of of KVs unit and we don't",
    "start": "1187799",
    "end": "1191440"
  },
  {
    "text": "you know we don't have to worry about",
    "start": "1191440",
    "end": "1192360"
  },
  {
    "text": "this nesting anymore because it's a",
    "start": "1192360",
    "end": "1195000"
  },
  {
    "text": "Monet um and yeah so what you want to do",
    "start": "1195000",
    "end": "1199360"
  },
  {
    "text": "is return one of these guys and then at",
    "start": "1199360",
    "end": "1201600"
  },
  {
    "text": "the end of the day you'll want to pass",
    "start": "1201600",
    "end": "1204360"
  },
  {
    "start": "1202000",
    "end": "1202000"
  },
  {
    "text": "this thing to an interpreter I hope",
    "start": "1204360",
    "end": "1206080"
  },
  {
    "text": "you're seeing a pattern here uh at the",
    "start": "1206080",
    "end": "1209039"
  },
  {
    "text": "end of the day you want to you want to",
    "start": "1209039",
    "end": "1210240"
  },
  {
    "text": "actually you know give this thing some",
    "start": "1210240",
    "end": "1212200"
  },
  {
    "text": "kind of key value store to",
    "start": "1212200",
    "end": "1214799"
  },
  {
    "text": "manipulate and so here's that method",
    "start": "1214799",
    "end": "1216760"
  },
  {
    "text": "this is this is an interpreter that uses",
    "start": "1216760",
    "end": "1218520"
  },
  {
    "text": "an immutable map to interpret our KVs",
    "start": "1218520",
    "end": "1223159"
  },
  {
    "text": "language um and it just proceeds by",
    "start": "1223159",
    "end": "1225280"
  },
  {
    "text": "pattern matching on on the value so we",
    "start": "1225280",
    "end": "1228280"
  },
  {
    "text": "have AE of KVs which is our little",
    "start": "1228280",
    "end": "1230159"
  },
  {
    "text": "program and then we just match on it and",
    "start": "1230159",
    "end": "1233280"
  },
  {
    "text": "if you know if there's more and it's",
    "start": "1233280",
    "end": "1235559"
  },
  {
    "text": "it's putting then we simply add our k",
    "start": "1235559",
    "end": "1238120"
  },
  {
    "text": "key value pair if there's more and we're",
    "start": "1238120",
    "end": "1240280"
  },
  {
    "text": "getting then we simply uh you know apply",
    "start": "1240280",
    "end": "1244919"
  },
  {
    "text": "uh our function and uh and recurse you",
    "start": "1244919",
    "end": "1248400"
  },
  {
    "text": "know we we we get the value out and if",
    "start": "1248400",
    "end": "1251520"
  },
  {
    "text": "there is uh more to delete and then we",
    "start": "1251520",
    "end": "1253480"
  },
  {
    "text": "remove the key from the table and if",
    "start": "1253480",
    "end": "1255320"
  },
  {
    "text": "we're done then we simply return the",
    "start": "1255320",
    "end": "1256720"
  },
  {
    "text": "table okay",
    "start": "1256720",
    "end": "1259440"
  },
  {
    "text": "awesome so",
    "start": "1259440",
    "end": "1262600"
  },
  {
    "start": "1260000",
    "end": "1260000"
  },
  {
    "text": "conclusions so Scola is not Java right",
    "start": "1262600",
    "end": "1265919"
  },
  {
    "text": "so like uh like Josh was saying in his",
    "start": "1265919",
    "end": "1268880"
  },
  {
    "text": "in his keynote don't you know don't",
    "start": "1268880",
    "end": "1271200"
  },
  {
    "text": "don't feel compelled to necessarily",
    "start": "1271200",
    "end": "1272840"
  },
  {
    "text": "bring all of your old Java habits into",
    "start": "1272840",
    "end": "1275360"
  },
  {
    "text": "Scola because it's it's a much much more",
    "start": "1275360",
    "end": "1278080"
  },
  {
    "text": "powerful language and there are so many",
    "start": "1278080",
    "end": "1279520"
  },
  {
    "text": "more things that you could do and you",
    "start": "1279520",
    "end": "1281919"
  },
  {
    "text": "know this is not necessarily best",
    "start": "1281919",
    "end": "1284279"
  },
  {
    "text": "practices that I'm giving you here I",
    "start": "1284279",
    "end": "1285799"
  },
  {
    "text": "just want to say that uh there's so many",
    "start": "1285799",
    "end": "1288159"
  },
  {
    "text": "other things that you can do than the",
    "start": "1288159",
    "end": "1289799"
  },
  {
    "text": "same old stuff that you're used to doing",
    "start": "1289799",
    "end": "1291440"
  },
  {
    "text": "in other",
    "start": "1291440",
    "end": "1292880"
  },
  {
    "text": "languages um and so I just want to know",
    "start": "1292880",
    "end": "1298360"
  },
  {
    "text": "I just want to give you like a little",
    "start": "1298360",
    "end": "1301120"
  },
  {
    "text": "guide from how to how to move from the",
    "start": "1301120",
    "end": "1302640"
  },
  {
    "text": "old EMB busted to the new hotness so you",
    "start": "1302640",
    "end": "1306480"
  },
  {
    "text": "know where you're used to using",
    "start": "1306480",
    "end": "1307799"
  },
  {
    "text": "Frameworks factories and and Magic",
    "start": "1307799",
    "end": "1309520"
  },
  {
    "text": "initialization steps uh try to frame",
    "start": "1309520",
    "end": "1312159"
  },
  {
    "text": "your systems in terms of functions from",
    "start": "1312159",
    "end": "1314159"
  },
  {
    "text": "inputs to outputs and I promise you that",
    "start": "1314159",
    "end": "1317039"
  },
  {
    "text": "every system that you can imagine can be",
    "start": "1317039",
    "end": "1320159"
  },
  {
    "text": "framed in terms of functions from inputs",
    "start": "1320159",
    "end": "1322440"
  },
  {
    "text": "to",
    "start": "1322440",
    "end": "1323480"
  },
  {
    "text": "outputs",
    "start": "1323480",
    "end": "1325400"
  },
  {
    "text": "um and then instead of dependency",
    "start": "1325400",
    "end": "1328320"
  },
  {
    "text": "injection why don't we use you know",
    "start": "1328320",
    "end": "1330520"
  },
  {
    "text": "little languages we're used to doing",
    "start": "1330520",
    "end": "1332200"
  },
  {
    "text": "this with with monads I mean with uh",
    "start": "1332200",
    "end": "1334559"
  },
  {
    "text": "with uh options and lists and and other",
    "start": "1334559",
    "end": "1337919"
  },
  {
    "text": "things like you don't you don't inject",
    "start": "1337919",
    "end": "1339880"
  },
  {
    "text": "something that like has two methods one",
    "start": "1339880",
    "end": "1341919"
  },
  {
    "text": "for empty and another one for uh for",
    "start": "1341919",
    "end": "1345039"
  },
  {
    "text": "non-empty you just return an option",
    "start": "1345039",
    "end": "1346919"
  },
  {
    "text": "right and that's a little language so",
    "start": "1346919",
    "end": "1348799"
  },
  {
    "text": "we're basically doing the same thing",
    "start": "1348799",
    "end": "1350880"
  },
  {
    "text": "here uh and instead of having many",
    "start": "1350880",
    "end": "1353520"
  },
  {
    "text": "implementations of an interface that you",
    "start": "1353520",
    "end": "1356520"
  },
  {
    "text": "then you know pass into things have many",
    "start": "1356520",
    "end": "1358840"
  },
  {
    "text": "interpreters of your language and then",
    "start": "1358840",
    "end": "1361600"
  },
  {
    "text": "you don't have to pass anything around",
    "start": "1361600",
    "end": "1364679"
  },
  {
    "text": "right all right I'm G to open it to to",
    "start": "1364679",
    "end": "1367400"
  },
  {
    "text": "questions in the back the question is",
    "start": "1367400",
    "end": "1369840"
  },
  {
    "text": "whether I have suggestions for debugging",
    "start": "1369840",
    "end": "1372159"
  },
  {
    "text": "no you do it the same way as you debug",
    "start": "1372159",
    "end": "1373720"
  },
  {
    "text": "anything else",
    "start": "1373720",
    "end": "1376240"
  },
  {
    "text": "yeah Daniel okay so the the question is",
    "start": "1376240",
    "end": "1379640"
  },
  {
    "text": "if you can get a monad for any funter uh",
    "start": "1379640",
    "end": "1383440"
  },
  {
    "text": "what is the distinction between a funter",
    "start": "1383440",
    "end": "1384919"
  },
  {
    "text": "and a monad why aren't all funs uh",
    "start": "1384919",
    "end": "1387120"
  },
  {
    "text": "monets well it's not the same so so",
    "start": "1387120",
    "end": "1390320"
  },
  {
    "text": "every Monet is a functor",
    "start": "1390320",
    "end": "1392400"
  },
  {
    "text": "right but the free Monet of a funter is",
    "start": "1392400",
    "end": "1395400"
  },
  {
    "text": "not the same functor as the fun that you",
    "start": "1395400",
    "end": "1397679"
  },
  {
    "text": "started",
    "start": "1397679",
    "end": "1398600"
  },
  {
    "text": "with uh it's the free Monet is a",
    "start": "1398600",
    "end": "1401640"
  },
  {
    "text": "recursive structure whereas the fun that",
    "start": "1401640",
    "end": "1404039"
  },
  {
    "text": "we started with was just a simple you",
    "start": "1404039",
    "end": "1406200"
  },
  {
    "text": "know a simple wrapper right",
    "start": "1406200",
    "end": "1408960"
  },
  {
    "text": "so that's the that's the difference uh",
    "start": "1408960",
    "end": "1412279"
  },
  {
    "text": "and you know if you're if you're curious",
    "start": "1412279",
    "end": "1413760"
  },
  {
    "text": "to to learn more about you know free",
    "start": "1413760",
    "end": "1415360"
  },
  {
    "text": "structures uh generated by by functors",
    "start": "1415360",
    "end": "1418760"
  },
  {
    "text": "and by algebras um then you",
    "start": "1418760",
    "end": "1422120"
  },
  {
    "text": "know uh read up in your on your category",
    "start": "1422120",
    "end": "1424960"
  },
  {
    "text": "Theory you",
    "start": "1424960",
    "end": "1427320"
  },
  {
    "text": "know I mean it's a very very deep",
    "start": "1427320",
    "end": "1429919"
  },
  {
    "text": "subject",
    "start": "1429919",
    "end": "1431799"
  },
  {
    "text": "yes you had uh you had a slide several",
    "start": "1431799",
    "end": "1434480"
  },
  {
    "text": "slides back about um about reita for the",
    "start": "1434480",
    "end": "1436640"
  },
  {
    "text": "lose U reita for the L",
    "start": "1436640",
    "end": "1440240"
  },
  {
    "text": "yep there you go uh in which juggling",
    "start": "1440240",
    "end": "1443200"
  },
  {
    "text": "multiple configurations or combining",
    "start": "1443200",
    "end": "1445080"
  },
  {
    "text": "with other monads uh can can be awkward",
    "start": "1445080",
    "end": "1447559"
  },
  {
    "text": "so uh one point of reference that I have",
    "start": "1447559",
    "end": "1449480"
  },
  {
    "text": "for that is is if you've seen the snap",
    "start": "1449480",
    "end": "1451720"
  },
  {
    "text": "web framework for H I have not looked it",
    "start": "1451720",
    "end": "1454720"
  },
  {
    "text": "no the idea is is that there's there's",
    "start": "1454720",
    "end": "1456919"
  },
  {
    "text": "some State and and the snap is",
    "start": "1456919",
    "end": "1458799"
  },
  {
    "text": "essentially reader yeah and in sort of a",
    "start": "1458799",
    "end": "1461200"
  },
  {
    "text": "priori you have to basically precompose",
    "start": "1461200",
    "end": "1464039"
  },
  {
    "text": "into this into some sort of big data",
    "start": "1464039",
    "end": "1465679"
  },
  {
    "text": "structure all of the state that you care",
    "start": "1465679",
    "end": "1467480"
  },
  {
    "text": "about um is that is that something you",
    "start": "1467480",
    "end": "1470159"
  },
  {
    "text": "consider best practice or a hack or or",
    "start": "1470159",
    "end": "1472679"
  },
  {
    "text": "like how would you suggest um composing",
    "start": "1472679",
    "end": "1475240"
  },
  {
    "text": "these things yeah so if you're working",
    "start": "1475240",
    "end": "1476919"
  },
  {
    "text": "so the question is uh you know if you if",
    "start": "1476919",
    "end": "1479640"
  },
  {
    "text": "you need multiple things uh how do you",
    "start": "1479640",
    "end": "1483120"
  },
  {
    "text": "how do you sort of um depend on on a",
    "start": "1483120",
    "end": "1487679"
  },
  {
    "text": "structure that might be might consist of",
    "start": "1487679",
    "end": "1489720"
  },
  {
    "text": "a lot of things and yeah I think it's",
    "start": "1489720",
    "end": "1491240"
  },
  {
    "text": "really best practice to uh to",
    "start": "1491240",
    "end": "1493840"
  },
  {
    "text": "consolidate your configuration so I mean",
    "start": "1493840",
    "end": "1495840"
  },
  {
    "text": "if you're if you're talking about it's a",
    "start": "1495840",
    "end": "1497000"
  },
  {
    "text": "configuration to your program",
    "start": "1497000",
    "end": "1499200"
  },
  {
    "text": "then yeah I really think that you should",
    "start": "1499200",
    "end": "1500480"
  },
  {
    "text": "consolidate it into uh like an actual",
    "start": "1500480",
    "end": "1502880"
  },
  {
    "text": "class or a type yes point if you use",
    "start": "1502880",
    "end": "1506559"
  },
  {
    "text": "like a a lens to get down to the member",
    "start": "1506559",
    "end": "1510000"
  },
  {
    "text": "uh know the portion of the state that",
    "start": "1510000",
    "end": "1511279"
  },
  {
    "text": "you care about the portion of the",
    "start": "1511279",
    "end": "1512559"
  },
  {
    "text": "environment that you care about that",
    "start": "1512559",
    "end": "1513960"
  },
  {
    "text": "gets you your comp and that's actually",
    "start": "1513960",
    "end": "1516799"
  },
  {
    "text": "the mechanism that use directly in",
    "start": "1516799",
    "end": "1518960"
  },
  {
    "text": "snap yeah there's an answer snap from",
    "start": "1518960",
    "end": "1523720"
  },
  {
    "text": "Ed uh to drill down the portions of the",
    "start": "1523720",
    "end": "1526279"
  },
  {
    "text": "state for s",
    "start": "1526279",
    "end": "1529000"
  },
  {
    "text": "yeah so you can use uh type lenses in",
    "start": "1529000",
    "end": "1530960"
  },
  {
    "text": "order to uh to drill down into the",
    "start": "1530960",
    "end": "1534080"
  },
  {
    "text": "portion of the of the configuration that",
    "start": "1534080",
    "end": "1536240"
  },
  {
    "text": "you care about I'm G to take was there I",
    "start": "1536240",
    "end": "1539600"
  },
  {
    "text": "saw some hands in the back there",
    "start": "1539600",
    "end": "1542880"
  },
  {
    "text": "yeah oh the snap framework it's a it's a",
    "start": "1542880",
    "end": "1545559"
  },
  {
    "text": "web framework for has yeah you sir okay",
    "start": "1545559",
    "end": "1549200"
  },
  {
    "text": "so the question is uh do do dependency",
    "start": "1549200",
    "end": "1551919"
  },
  {
    "text": "injection Frameworks in other languages",
    "start": "1551919",
    "end": "1554039"
  },
  {
    "text": "like spring um and that kind of thing do",
    "start": "1554039",
    "end": "1556720"
  },
  {
    "text": "they compensate for lack of language",
    "start": "1556720",
    "end": "1558360"
  },
  {
    "text": "features I don't know the answer to that",
    "start": "1558360",
    "end": "1560600"
  },
  {
    "text": "uh it may be that they compensate for",
    "start": "1560600",
    "end": "1562080"
  },
  {
    "text": "lack of",
    "start": "1562080",
    "end": "1563799"
  },
  {
    "text": "imagination",
    "start": "1563799",
    "end": "1566799"
  },
  {
    "text": "so did you have a followup well you're",
    "start": "1569360",
    "end": "1572000"
  },
  {
    "text": "asking if they if they provide any",
    "start": "1572000",
    "end": "1573840"
  },
  {
    "text": "additional value and and well the answer",
    "start": "1573840",
    "end": "1576000"
  },
  {
    "text": "to that is that value to whom I mean",
    "start": "1576000",
    "end": "1578520"
  },
  {
    "text": "they don't provide any value to me but",
    "start": "1578520",
    "end": "1580360"
  },
  {
    "text": "they might provide value to you and so",
    "start": "1580360",
    "end": "1582720"
  },
  {
    "text": "it really depends on what it is that you",
    "start": "1582720",
    "end": "1584200"
  },
  {
    "text": "value I'm talking about say scalability",
    "start": "1584200",
    "end": "1587159"
  },
  {
    "text": "or object Cooling",
    "start": "1587159",
    "end": "1589159"
  },
  {
    "text": "both aspects I I don't I don't know the",
    "start": "1589159",
    "end": "1590840"
  },
  {
    "text": "answer to that I I don't know what you",
    "start": "1590840",
    "end": "1593200"
  },
  {
    "text": "want out of a framework like that um but",
    "start": "1593200",
    "end": "1596760"
  },
  {
    "text": "I can tell you I don't use them and",
    "start": "1596760",
    "end": "1598159"
  },
  {
    "text": "because I I don't I don't get a value",
    "start": "1598159",
    "end": "1600399"
  },
  {
    "text": "out of them but you know your mileage",
    "start": "1600399",
    "end": "1602240"
  },
  {
    "text": "May differ Josh I was told be free candy",
    "start": "1602240",
    "end": "1605600"
  },
  {
    "text": "no free monets no free candy there's",
    "start": "1605600",
    "end": "1608320"
  },
  {
    "text": "free",
    "start": "1608320",
    "end": "1609159"
  },
  {
    "text": "monets",
    "start": "1609159",
    "end": "1611080"
  },
  {
    "text": "okay okay cool thank you",
    "start": "1611080",
    "end": "1613910"
  },
  {
    "text": "[Applause]",
    "start": "1613910",
    "end": "1616640"
  },
  {
    "text": "[Music]",
    "start": "1616640",
    "end": "1624980"
  }
]