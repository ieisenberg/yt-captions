[
  {
    "text": "I'm here to talk about something different so that was uh if you if you're not used to don't know much about Gradle or you do and and you wanted to",
    "start": "80",
    "end": "5359"
  },
  {
    "text": "know more about where we're going what we've been doing that kind of thing Hans fill you with that this is a a different",
    "start": "5359",
    "end": "10599"
  },
  {
    "text": "kind of talk I'm going to be talking about a very kind of specific aspect of Gradle there's many different Gradle",
    "start": "10599",
    "end": "15679"
  },
  {
    "text": "talks uh I could do and if you're interested in more Gradle talks you can go to Gradle we.com there's many listed",
    "start": "15679",
    "end": "21320"
  },
  {
    "text": "on there from last year's Gradle Summit uh there's two full days of talks coming up later this week at the grad Summit so",
    "start": "21320",
    "end": "27000"
  },
  {
    "text": "there's many things that could be said I want to focus on a particular aspect tonight talking about using Gradle to",
    "start": "27000",
    "end": "33239"
  },
  {
    "text": "build a custom build platform so that's some nice words what",
    "start": "33239",
    "end": "38520"
  },
  {
    "text": "does it mean what are we talking about with a build platform so I'm really talking about if you have a portfolio of",
    "start": "38520",
    "end": "43879"
  },
  {
    "text": "builds so more than one more than Commons Lang open source projects likely when you're in your workplace you have",
    "start": "43879",
    "end": "49559"
  },
  {
    "text": "many different things that you're building there's going to be signifant significant commonalities across those projects probably things that you like",
    "start": "49559",
    "end": "55559"
  },
  {
    "text": "to do the same across all projects they may be personal preferences they may be driven by architect that you have to",
    "start": "55559",
    "end": "60680"
  },
  {
    "text": "work with those kinds of things there's also going to be significant differences between those projects and this was",
    "start": "60680",
    "end": "66560"
  },
  {
    "text": "something that we kind of tried to ignore a few years ago this fact we tried to pretend that everything was the",
    "start": "66560",
    "end": "72320"
  },
  {
    "text": "same and we could build it the same way and that building Java software in particular was a more or less solved problem if we just stayed within the",
    "start": "72320",
    "end": "78680"
  },
  {
    "text": "lines that didn't quite work out if you have a portfolio of builds you're going to have some kind of desire for",
    "start": "78680",
    "end": "84360"
  },
  {
    "text": "consistency you don't want to go around from Project to project and have it be completely different that's going to waste time on boarding and just going to",
    "start": "84360",
    "end": "90720"
  },
  {
    "text": "make things generally chaotic and the flip side of that is you need some control if you don't have some control",
    "start": "90720",
    "end": "96200"
  },
  {
    "text": "then the tendency is going to be that things will become less consistent and change over time there are other reasons",
    "start": "96200",
    "end": "101720"
  },
  {
    "text": "for control sometimes there are compliance issues sometimes there are just some standards that need to be kept",
    "start": "101720",
    "end": "107719"
  },
  {
    "text": "um also whenever you have scale horizontal scale you need automation you",
    "start": "107719",
    "end": "113200"
  },
  {
    "text": "cannot apply manual processes that worked with when you had one build to 10 builds right so you need automation",
    "start": "113200",
    "end": "121840"
  },
  {
    "text": "so here's a few assertions that I'm going to make that are going to back up why the rest of the talk is important I",
    "start": "122960",
    "end": "128280"
  },
  {
    "text": "think in the software industry so very few real software projects are alike practices are evolving the way we",
    "start": "128280",
    "end": "135879"
  },
  {
    "text": "develop software is evolving and changing and will continue to and also the tools are evolving probably a lot",
    "start": "135879",
    "end": "142000"
  },
  {
    "text": "more of us are pushing to Cloud deployment platforms we're using different CI tools using different tools",
    "start": "142000",
    "end": "147599"
  },
  {
    "text": "at every level of the build and this is going to Contin to happen everything is changing so projects from two years ago",
    "start": "147599",
    "end": "153560"
  },
  {
    "text": "are different to projects from this year and things are just not static modern automation has to be",
    "start": "153560",
    "end": "161879"
  },
  {
    "text": "effective it has to be personal it has to be automated to your particular conditions you have to automate to the",
    "start": "161879",
    "end": "167959"
  },
  {
    "text": "nth degree and get everything done which means fine-tuning it to the way that you work has to be ambitious which is",
    "start": "167959",
    "end": "173519"
  },
  {
    "text": "another way saying the same thing you have to automate everything and pervasive everywhere you can't get away",
    "start": "173519",
    "end": "178560"
  },
  {
    "text": "with just automating the things that your tool neatly allows you to automate or you need a tool that lets you automate a lot and the side of this is",
    "start": "178560",
    "end": "186159"
  },
  {
    "text": "that if you don't automate you are going to be put out of business companies deliver software faster and faster now",
    "start": "186159",
    "end": "191519"
  },
  {
    "text": "and it is a real competitive Advantage more so now than it was even 12 months ago Hans was talking about LinkedIn and",
    "start": "191519",
    "end": "196959"
  },
  {
    "text": "obviously that's a huge difference to their business their ability to deliver that fast so modern automation is very",
    "start": "196959",
    "end": "202400"
  },
  {
    "text": "different to the kinds of build automation we were talking about 5 years ago 10 years ago maybe even one year ago",
    "start": "202400",
    "end": "208040"
  },
  {
    "text": "all right so one of the uh innov that happened in the build space and in the",
    "start": "208040",
    "end": "214360"
  },
  {
    "text": "sort of software framework tooling space in general this idea of Convention of a configuration right and this was a real",
    "start": "214360",
    "end": "221239"
  },
  {
    "text": "um real win it was a bonus it let us stop inventing the wheel so we were able to go from having to have a set of",
    "start": "221239",
    "end": "227400"
  },
  {
    "text": "scripts on a Wiki somewhere in XML that we would copy into different XML files across different projects and that's how",
    "start": "227400",
    "end": "233480"
  },
  {
    "text": "we achieve standardization that kind of thing we were able to use a tool that had some outof the-box conventions did a",
    "start": "233480",
    "end": "239000"
  },
  {
    "text": "lot of the leg work for us right you can probably piece together the tools I'm talking about",
    "start": "239000",
    "end": "244120"
  },
  {
    "text": "here it allowed greater collaboration when you have conventions things can make different parts or different uh",
    "start": "244120",
    "end": "249720"
  },
  {
    "text": "tools can make assumptions about the way things work and they can collaborate there's another famous problem with uh",
    "start": "249720",
    "end": "255599"
  },
  {
    "text": "tools that don't uh Embrace conventions is that when you're stitching things together you're you have to take control",
    "start": "255599",
    "end": "262000"
  },
  {
    "text": "of all those stitching points I want to use um Joko with this build I have to find the exact kind of XML that is going",
    "start": "262000",
    "end": "268960"
  },
  {
    "text": "to plug into the way that I compile stuff which might be different to the way that the person who posted that snippet compile Stuff",
    "start": "268960",
    "end": "275039"
  },
  {
    "text": "Etc but it's not the Silver Bullet it didn't solve all our problems just embracing conventions or at least in the",
    "start": "275039",
    "end": "281639"
  },
  {
    "text": "conventions that we did Embrace and the way we embrac them so the other side is that when",
    "start": "281639",
    "end": "286680"
  },
  {
    "text": "conventions are too rigid they inhibit Innovation and efficiency and this is a little bit of the head in the sand",
    "start": "286680",
    "end": "292639"
  },
  {
    "text": "approach so that if what I need to do is outside of the conventions that my tool gives me then I shouldn't be doing it",
    "start": "292639",
    "end": "299120"
  },
  {
    "text": "right that's the that's the stance that some people take but that's just not how an effective way to run the business you have requirements you need to fulfill",
    "start": "299120",
    "end": "305400"
  },
  {
    "text": "them tools if they get in the way need to be gotten out of the way so what this leads to is abstraction",
    "start": "305400",
    "end": "312120"
  },
  {
    "text": "inversion if you can't make the tool do what you want you build something on top of the tool working around the things",
    "start": "312120",
    "end": "317759"
  },
  {
    "text": "that doesn't let you do so this is the um shell scripts hanging around the build this kind of",
    "start": "317759",
    "end": "325199"
  },
  {
    "text": "thing and so what what you ultimately need conventions are good rigid conventions are bad you need conventions",
    "start": "325199",
    "end": "330880"
  },
  {
    "text": "that are maleable and scalable so whose conventions are we",
    "start": "330880",
    "end": "336400"
  },
  {
    "text": "really talking about here in Gradle is a Convention of a configuration based tool",
    "start": "336400",
    "end": "341880"
  },
  {
    "text": "that's kind of something we Embrace at a core level but the key difference is that we're embracing your conventions",
    "start": "341880",
    "end": "347319"
  },
  {
    "text": "conventions are a first class citizen something that you're in control of you might want to extend the",
    "start": "347319",
    "end": "353479"
  },
  {
    "text": "conventions that grad comes with so it might be perfectly fine for you to say that all our projects use check Style",
    "start": "353479",
    "end": "359800"
  },
  {
    "text": "that's an assertion we're going to make we just want across the board that to happen that's not something that Gradle can say about all Java projects in the",
    "start": "359800",
    "end": "365919"
  },
  {
    "text": "world right so you want to take our conventions extend that make that part of your world you might want to replace",
    "start": "365919",
    "end": "371800"
  },
  {
    "text": "General conventions so one of the things that Gradle does in um like another tool out there as a convention says that",
    "start": "371800",
    "end": "378319"
  },
  {
    "text": "there is a main set of source in this project it's the stuff that we're actually building and might have little bits of test stuff hanging off the side",
    "start": "378319",
    "end": "384440"
  },
  {
    "text": "but there's this main thing that makes sense for 95 98% of projects in the world there's some projects that doesn't",
    "start": "384440",
    "end": "390599"
  },
  {
    "text": "make any sense for they construct softare in a different way so they want to back out of that convention they",
    "start": "390599",
    "end": "396039"
  },
  {
    "text": "don't want to have to throw away the whole tool it's just I just don't want that convention let me do things the way I want it's extending and being able to",
    "start": "396039",
    "end": "403319"
  },
  {
    "text": "back down so it's scalable and malleable so Gradle is a toolkit fundamentally we",
    "start": "403319",
    "end": "408880"
  },
  {
    "text": "generally don't like to say grad as a framework we think about it a bit differently Gradle is a collection of tools like ant it's what ant is you get",
    "start": "408880",
    "end": "415960"
  },
  {
    "text": "all these pieces and you stitch them together via reams of XML that's how you do it unlike ant though part of gradle's",
    "start": "415960",
    "end": "422360"
  },
  {
    "text": "toolkit are tools for standardization reuse and creating",
    "start": "422360",
    "end": "428319"
  },
  {
    "text": "conventions so we have plugins plugin Stacks which I'll talk about briefly and some other points here which I'm going",
    "start": "428400",
    "end": "433879"
  },
  {
    "text": "to go into so this is roughly the order of things I'm going to cover that really talk about why um I'm making that",
    "start": "433879",
    "end": "439800"
  },
  {
    "text": "assertion that Gradle allows you to build your own convention so the Deep API the kinds of things you can do with",
    "start": "439800",
    "end": "445360"
  },
  {
    "text": "a grad API configuration rules a very important part of that how plug PLS work how easy it is to create a plugin and",
    "start": "445360",
    "end": "452039"
  },
  {
    "text": "nit scripts custom distributions finally to stitch it all together and please remember feel free to ask questions",
    "start": "452039",
    "end": "457599"
  },
  {
    "text": "along the way okay deep",
    "start": "457599",
    "end": "462840"
  },
  {
    "text": "API so the grad API can also be used for reflecting right see was going to you",
    "start": "462840",
    "end": "470520"
  },
  {
    "text": "beat me to a Justin but I'll come to the second um so if you think about ant ant",
    "start": "470520",
    "end": "476000"
  },
  {
    "text": "is fundamentally a right API and that ml I tell this is what I want you to do",
    "start": "476000",
    "end": "481960"
  },
  {
    "text": "great API is read WR I can look at the model and see what has been specified what's happening I have much more I have",
    "start": "481960",
    "end": "488240"
  },
  {
    "text": "a richer interaction with it so one thing I might want to ask is or in short",
    "start": "488240",
    "end": "493720"
  },
  {
    "text": "in short that happens how do I make sure that no one compiles against anything with this group anybody worked with",
    "start": "493720",
    "end": "499840"
  },
  {
    "text": "plexus anything from the plexus family okay so you might have wanted to do this at some",
    "start": "499840",
    "end": "505520"
  },
  {
    "text": "point um another how do I verify the existence to this way we just have some dependencies we don't want I just want",
    "start": "505520",
    "end": "511479"
  },
  {
    "text": "to get them out of my world somehow we'll see how we're going to do that here's a different kind of one how do I verify the existence of a test task so",
    "start": "511479",
    "end": "518200"
  },
  {
    "text": "that every single gradal project in our Enterprise or business has a test task which really means I can check out any",
    "start": "518200",
    "end": "524800"
  },
  {
    "text": "project run gradal test that runs the tests whether it's a JavaScript project Android project Java whatever it is",
    "start": "524800",
    "end": "531600"
  },
  {
    "text": "that's our convention that I just I have to able to check out the project rung grade or test if it passes them or all good and I I want to enforce that if",
    "start": "531600",
    "end": "538000"
  },
  {
    "text": "somebody tries to check in a project that doesn't have a test task that's a failure right so do those kinds of",
    "start": "538000",
    "end": "543279"
  },
  {
    "text": "things so the first one here are some uh Gradle build",
    "start": "543279",
    "end": "548680"
  },
  {
    "text": "scripts now if you haven't if you've never seen a gradal build script before this is kind of the logical equivalent of your build.xml or your pom.xml this",
    "start": "548680",
    "end": "556000"
  },
  {
    "text": "is the description of telling Gradle what to do now we're looking at something a little bit different here we're looking at that read side of the",
    "start": "556000",
    "end": "562200"
  },
  {
    "text": "API here this block of code is getting involved in the dependency resolution process and checking what happened",
    "start": "562200",
    "end": "570040"
  },
  {
    "text": "all right so this is some groovy code that's the language we write Gradle build scripts in so configurations",
    "start": "570040",
    "end": "575360"
  },
  {
    "text": "configurations are buckets of dependencies you can think Maven Scopes if you like or if you're coming from IV IV configuration similar kind of concept",
    "start": "575360",
    "end": "582519"
  },
  {
    "text": "now get the compile bucket of dependencies this incoming is just part of the API I want to talk about the",
    "start": "582519",
    "end": "588440"
  },
  {
    "text": "things that are are coming in the dependencies after you've gone and resolved all those dependencies let me",
    "start": "588440",
    "end": "594000"
  },
  {
    "text": "have a walk through them and see what happened so here we this is where we're walking through give me all the resolved",
    "start": "594000",
    "end": "600040"
  },
  {
    "text": "artifacts everything that came in so this is my dependencies plus my transitive dependencies is there anything that has",
    "start": "600040",
    "end": "607160"
  },
  {
    "text": "this group right these are the dependencies I don't want I'm just using some groovy here to say give me all the things with that group right if there",
    "start": "607160",
    "end": "613880"
  },
  {
    "text": "was anything then throw an exception we're failing here so as soon as we've done dependency resolution if we find",
    "start": "613880",
    "end": "619200"
  },
  {
    "text": "this condition let's fail so if that if we had this situation",
    "start": "619200",
    "end": "624440"
  },
  {
    "text": "so if I if I ran it like this we'd be fine we're just depending on common Lang common Lang doesn't depend depend on",
    "start": "624440",
    "end": "629640"
  },
  {
    "text": "anything be okay you would hope that Gradle would catch this case of course we have a first level dependency on",
    "start": "629640",
    "end": "635360"
  },
  {
    "text": "something in our Blacklist oh let me just move that down a little bit and that's relatively easy if you",
    "start": "635360",
    "end": "642240"
  },
  {
    "text": "know that you shouldn't be using that dependency then you would hope nobody checks that in but there are all kinds of back doors for dependencies in the",
    "start": "642240",
    "end": "649079"
  },
  {
    "text": "Java ecosystem right we have large dependency trees they have surprising dependencies popping up all the time so",
    "start": "649079",
    "end": "654839"
  },
  {
    "text": "if you have a blacklist if you have things that you don't want there you should be taking some steps to make sure that doesn't happen this is one way to",
    "start": "654839",
    "end": "661040"
  },
  {
    "text": "do that okay so the second example so",
    "start": "661040",
    "end": "666240"
  },
  {
    "text": "that's one small part of the dependency resolution API I'm going to show some others as we're going on but here's a",
    "start": "666240",
    "end": "671920"
  },
  {
    "text": "different kind of reading of the model so what we're saying now is that gradal",
    "start": "671920",
    "end": "677480"
  },
  {
    "text": "after the project has been configured so after you've gone and run all the build scripts and you know everything about the project now have a look and see are",
    "start": "677480",
    "end": "685160"
  },
  {
    "text": "there any tasks with the name test if there aren't then game's over so",
    "start": "685160",
    "end": "690320"
  },
  {
    "text": "this is mind forcing that there is a test task here so the the idea here is",
    "start": "690320",
    "end": "695839"
  },
  {
    "text": "not to give a bunch of kind of um standard rules that you could apply you",
    "start": "695839",
    "end": "701079"
  },
  {
    "text": "have the model there to read and make of what you",
    "start": "701079",
    "end": "705120"
  },
  {
    "text": "want so the aim is to give access to the entire model question yes yeah um in",
    "start": "710000",
    "end": "716399"
  },
  {
    "text": "terms of so the question was um in terms of giving access how much of the kind of",
    "start": "716399",
    "end": "723160"
  },
  {
    "text": "Gradle internals access to and I guess the question is I mean how much do you have access to really yeah so it's not",
    "start": "723160",
    "end": "730240"
  },
  {
    "text": "everything there is kind of internal compartment within gradal that things the the API is carefully designed and um",
    "start": "730240",
    "end": "737560"
  },
  {
    "text": "expose the things that are safe that are stable that we can kind of expose in a safe way over time we open that that up",
    "start": "737560",
    "end": "743320"
  },
  {
    "text": "to different kinds of things and very use case driven so um there is no",
    "start": "743320",
    "end": "749160"
  },
  {
    "text": "particular hook right now to do exactly what you want so to get into that caching layer um that's not to say there won't be sometime in the future and",
    "start": "749160",
    "end": "755120"
  },
  {
    "text": "there almost certainly will be um it's just not something that is accessed now um there's another let me come back to",
    "start": "755120",
    "end": "762639"
  },
  {
    "text": "that point just after after this so um I've got two layers here talking about",
    "start": "762639",
    "end": "767720"
  },
  {
    "text": "the way the API is structured the simple concrete out of DSL layer which is if you've used gradal probably where you've",
    "start": "767720",
    "end": "773920"
  },
  {
    "text": "been playing you've been adding scripts configuring how things compile adding some dependencies this kind of thing",
    "start": "773920",
    "end": "778959"
  },
  {
    "text": "this this is what we call the DSL this is targeted at developers who want to configure how the build works right and",
    "start": "778959",
    "end": "784440"
  },
  {
    "text": "design choices are made to keep that simple to keep it very concrete as you go down things get more",
    "start": "784440",
    "end": "790480"
  },
  {
    "text": "abstract more complex and the target here really build and release Engineers so you need a bit more gradal food bit",
    "start": "790480",
    "end": "795639"
  },
  {
    "text": "more background knowledge to make that work and it's very much designed that way there is a third level here which are the gradal internals which you have",
    "start": "795639",
    "end": "801600"
  },
  {
    "text": "access to but aren't API stable they change from version to version so if you wanted to do what you want to do you",
    "start": "801600",
    "end": "807600"
  },
  {
    "text": "could do it via that mechanism but there's no guarantee the next grade will release might break a",
    "start": "807600",
    "end": "813279"
  },
  {
    "text": "code okay so just to make one thing clear what so far as having these rules local",
    "start": "814760",
    "end": "821639"
  },
  {
    "text": "in one project that not very useful we're going to see how we can get that logic out so we can apply to multiple projects because we're having a platform",
    "start": "821639",
    "end": "827959"
  },
  {
    "text": "here we have a portfolio of builds we want to apply this too we're going to get there all right so grle provides",
    "start": "827959",
    "end": "833480"
  },
  {
    "text": "many ways to configure speculatively what do I mean by this Gradle can configure things that don't",
    "start": "833480",
    "end": "840720"
  },
  {
    "text": "exist yet and may not exist this is very important for doing things across projects where you don't have intimate",
    "start": "840720",
    "end": "846279"
  },
  {
    "text": "knowledge of that project I don't know if every project that we're going to build is a Java project I don't know",
    "start": "846279",
    "end": "851680"
  },
  {
    "text": "what kind of dependency management is going to be in place in different projects so I need to do things speculatively based on",
    "start": "851680",
    "end": "858079"
  },
  {
    "text": "characteristics the other option is you copy and paste across all the places you need something which doesn't work out very well all right so how do I",
    "start": "858079",
    "end": "865480"
  },
  {
    "text": "configure all the test tasks to be as parallel as they can be so here we have",
    "start": "865480",
    "end": "871279"
  },
  {
    "text": "a Java project Gradle Java project Gradle Java projects come with support for running test NG and junit tests out",
    "start": "871279",
    "end": "877959"
  },
  {
    "text": "of the box all I have to do is put my tests in Source test Java and run it and way we go one of the things I can",
    "start": "877959",
    "end": "884320"
  },
  {
    "text": "configure is to say that run these in parallel batches right so start up four test processes fan the work out and get",
    "start": "884320",
    "end": "891079"
  },
  {
    "text": "it done faster and I do that by just setting the simple property on the test task so that doesn't quite meet our",
    "start": "891079",
    "end": "898560"
  },
  {
    "text": "requirements though because it can be it's very easy in gradal to set up other types of tests in this case I've used",
    "start": "898560",
    "end": "906079"
  },
  {
    "text": "the very descriptive name other test this could very easily be integration test functional test browser test",
    "start": "906079",
    "end": "911440"
  },
  {
    "text": "whatever you like so you can have multiple sets of tests quite easily and the requirement is that each of those",
    "start": "911440",
    "end": "916880"
  },
  {
    "text": "sets of tests should be run in parallel but as the Builder release engineer I want to say that in a way where I don't",
    "start": "916880",
    "end": "922279"
  },
  {
    "text": "know if they're browser test I don't know if they're integration tests just all of them do it so the way we do that",
    "start": "922279",
    "end": "930120"
  },
  {
    "text": "is via this rule all the things of that type go and do that configuration",
    "start": "930120",
    "end": "937360"
  },
  {
    "text": "against them right so the interesting thing about this which I'll expand on a",
    "start": "937360",
    "end": "942959"
  },
  {
    "text": "little bit more is that it wouldn't Beed or here right it applies to things that",
    "start": "942959",
    "end": "948560"
  },
  {
    "text": "exist and things that are going to exist in the future which is very important again if you're speculating about",
    "start": "948560",
    "end": "953880"
  },
  {
    "text": "projects you don't know what's going to exist",
    "start": "953880",
    "end": "958199"
  },
  {
    "text": "so if I ran this all you'd see is that it ran faster when I uncommented that code as opposed to because I have more",
    "start": "959560",
    "end": "965040"
  },
  {
    "text": "than one core in my machine so very useful technique if you how would you do",
    "start": "965040",
    "end": "970240"
  },
  {
    "text": "this kind of thing in ant so you had multiple compilation steps and you wanted to do the same thing for all of",
    "start": "970240",
    "end": "976639"
  },
  {
    "text": "them there are some black magic ways to get this done but most likely you're going to copy paste this across right",
    "start": "976639",
    "end": "981959"
  },
  {
    "text": "that's usually the simplest way all right so how do I configure all test tasks to be as parallel as they can",
    "start": "981959",
    "end": "987560"
  },
  {
    "text": "be let's apply the same technique teque to say that it's not only compile dependencies I'm worried about I don't want anything from plexus to show up",
    "start": "987560",
    "end": "994199"
  },
  {
    "text": "anywhere in my dependency list what I mean by that is I don't want",
    "start": "994199",
    "end": "999759"
  },
  {
    "text": "it to be a test dependency an integration test dependency a functional test dependency uh whatever kinds of",
    "start": "999759",
    "end": "1005480"
  },
  {
    "text": "source have going on so we're using this all keyword here configurations is a container of different configurations so",
    "start": "1005480",
    "end": "1012680"
  },
  {
    "text": "different buckets of dependencies and just all of them all of them that exist now and in the future apply this",
    "start": "1012680",
    "end": "1018319"
  },
  {
    "text": "configuration to them all is kind of like a a keyword in this API for doing",
    "start": "1018319",
    "end": "1023759"
  },
  {
    "text": "this kind of thing so the difference here is that I had the previous one I",
    "start": "1023759",
    "end": "1030038"
  },
  {
    "text": "had hardcoded compile here and I was assuming there was going to be a compile set of compile dependencies here if I",
    "start": "1030039",
    "end": "1036000"
  },
  {
    "text": "ran this on a JavaScript project that doesn't have a compiler configuration that was going to blow up right if I run",
    "start": "1036000",
    "end": "1045720"
  },
  {
    "text": "this not that version if I run this version here on project that doesn't have a set of compile dependencies",
    "start": "1045839",
    "end": "1051320"
  },
  {
    "text": "everything's going to be fine so this is this little example here",
    "start": "1051320",
    "end": "1058840"
  },
  {
    "text": "is just to show this characteristic of liveness so I have a what we call inrad",
    "start": "1058840",
    "end": "1064200"
  },
  {
    "text": "a domain object collection it's a container of things that has this property that I can apply configuration",
    "start": "1064200",
    "end": "1069760"
  },
  {
    "text": "to Future elements and Things based on characteristics it's just a little simp of code just creating one of those",
    "start": "1069760",
    "end": "1075159"
  },
  {
    "text": "things this is not important what I have now is a container of numbers it contains one and two we can think about",
    "start": "1075159",
    "end": "1080799"
  },
  {
    "text": "this like a Java list right so we have a Java list here I can spin off a separate",
    "start": "1080799",
    "end": "1087640"
  },
  {
    "text": "list saying give me all the things that match this criteria so all the even numbers now in that list right so now I",
    "start": "1087640",
    "end": "1093400"
  },
  {
    "text": "have two lists I go and check okay well two is in the even number set makes",
    "start": "1093400",
    "end": "1098440"
  },
  {
    "text": "sense let me add something back to the original list right so this is numbers",
    "start": "1098440",
    "end": "1103640"
  },
  {
    "text": "this is the original set here and it's now available in my derived list right",
    "start": "1103640",
    "end": "1110320"
  },
  {
    "text": "so if you've done any closure any Scala using sort of persistent data structures this is a similar kind of thing um",
    "start": "1110320",
    "end": "1116000"
  },
  {
    "text": "totally lazy has a s some similar stuff for Java but the idea here is that um this is really a specification of what I",
    "start": "1116000",
    "end": "1122960"
  },
  {
    "text": "want rather than a concrete set it's unlikely that you'll be wanting to deal about even numbers and what not",
    "start": "1122960",
    "end": "1128960"
  },
  {
    "text": "in a Grade old build but hopefully that shows the kind of characteristic of liveness and these things are everywhere",
    "start": "1128960",
    "end": "1134919"
  },
  {
    "text": "in Gradle some of the things that we can deal with in this manner the set of tasks in the project the set of plugins do",
    "start": "1134919",
    "end": "1142280"
  },
  {
    "text": "something if the Java plugin is applied and when it is the set of configurations we saw that with the dependency example",
    "start": "1142280",
    "end": "1149720"
  },
  {
    "text": "the repositories as different U dependency repositories are added do something we'll see that the source sets",
    "start": "1149720",
    "end": "1156039"
  },
  {
    "text": "so there's a different bucket if as somebody adds some integration test Source sets or some functional test Source sets go and preconfig them in",
    "start": "1156039",
    "end": "1162320"
  },
  {
    "text": "some way right pre- add this dependency or do whatever it is and we can actually get notified as dependencies are coming",
    "start": "1162320",
    "end": "1168480"
  },
  {
    "text": "on line that kind of thing so pretty much anywhere in Gradle where you have a collection of things you can do this",
    "start": "1168480",
    "end": "1173640"
  },
  {
    "text": "kind of thing with that collection so we can do it with all the",
    "start": "1173640",
    "end": "1180039"
  },
  {
    "text": "things that exist now and in the future we can just do things when new things are added and we can do things when",
    "start": "1180039",
    "end": "1186640"
  },
  {
    "text": "things are removed usually far less useful so we tend to just build as we go rather than break",
    "start": "1186640",
    "end": "1193919"
  },
  {
    "text": "down okay so just um another dependency management use case and we could do a",
    "start": "1194320",
    "end": "1199600"
  },
  {
    "text": "whole talk on the different parts of the dependency management API and things you could configure but here's just some interesting cases that highlight some of",
    "start": "1199600",
    "end": "1206799"
  },
  {
    "text": "those features so what I want to do is implicitly replace a dependency globally",
    "start": "1206799",
    "end": "1214799"
  },
  {
    "text": "and this dependency shows up in my dependency tree no matter where it is swap it with something else this it's quite a common one thing to do for",
    "start": "1214799",
    "end": "1221120"
  },
  {
    "text": "logging bindings right I don't want slf over J I want over JCL or something like",
    "start": "1221120",
    "end": "1226919"
  },
  {
    "text": "that and you can either Main a massive list of excludes and deal with that or you can just specify a rule and say when",
    "start": "1226919",
    "end": "1232760"
  },
  {
    "text": "you see that just swap it uh dealing with fat jars is another example of this dealing with classified dependencies for",
    "start": "1232760",
    "end": "1239320"
  },
  {
    "text": "different jvm versions is another example quite often the case you just want to swap something out and another",
    "start": "1239320",
    "end": "1245000"
  },
  {
    "text": "example we'll have a look at is semantic version aware conflict resolution so what does that look",
    "start": "1245000",
    "end": "1250360"
  },
  {
    "text": "like here's the first one so we're using the dependency",
    "start": "1250360",
    "end": "1255760"
  },
  {
    "text": "management API here we're getting a hold of this resolution strategy object which has a bunch of knobs that we can turn to",
    "start": "1255760",
    "end": "1261480"
  },
  {
    "text": "configure how dependency management works here we're saying that let me run some code let me look at each dependency",
    "start": "1261480",
    "end": "1267840"
  },
  {
    "text": "as it comes flying past in the resolution process all right so here's callback and we get this dependency",
    "start": "1267840",
    "end": "1273559"
  },
  {
    "text": "resolve details object which has some API for looking at what was that that went past so here we're saying that if",
    "start": "1273559",
    "end": "1279720"
  },
  {
    "text": "the dependency that went past was called groovy or right this is The Groovy um runtime Library if it's the all version",
    "start": "1279720",
    "end": "1287279"
  },
  {
    "text": "which is the fat jar I don't want that instead use the nonfat version",
    "start": "1287279",
    "end": "1295200"
  },
  {
    "text": "here all right so I can just completely swap something out to anything I like and there are a number of different ways to to cut this or things you could do",
    "start": "1295400",
    "end": "1301760"
  },
  {
    "text": "with it as I said you could replace logging bindings um completely replace dependencies a very common one these",
    "start": "1301760",
    "end": "1307520"
  },
  {
    "text": "days is to want to hit some kind of web service to work out what this should be so when I'm resolving dependencies I",
    "start": "1307520",
    "end": "1314840"
  },
  {
    "text": "want to use some kind of um static notation that as are going on I'm going to get that dependency ask some service",
    "start": "1314840",
    "end": "1321400"
  },
  {
    "text": "what should that be so we going have a central manifest of how that works there are all kinds there are implications of that approach you now have moving",
    "start": "1321400",
    "end": "1327679"
  },
  {
    "text": "targets and and you're losing um some repeatability but for a lot of people who want to move fast that's an",
    "start": "1327679",
    "end": "1335720"
  },
  {
    "text": "option so here's a different option what we're doing now is the semantic version aware conflict resolution so gradal has",
    "start": "1335840",
    "end": "1344039"
  },
  {
    "text": "automatic conflict resolution Allah Maven with a few differences so if I am my dependency tree depend on a and b a",
    "start": "1344039",
    "end": "1351640"
  },
  {
    "text": "depends on version one of C B depends on version two of C something's got to give here we can't have version one of c and",
    "start": "1351640",
    "end": "1357640"
  },
  {
    "text": "version two of C in the same project right so some somehow we have to resolve the situation Gradle is going has a um",
    "start": "1357640",
    "end": "1364480"
  },
  {
    "text": "conflict resolution strategy called newest so in that situation it's going to pick 2.0 over 1.0 on the assumption",
    "start": "1364480",
    "end": "1372000"
  },
  {
    "text": "that um higher is better right you have all kinds of control over that you could explicitly say hey no I want 1.0 there",
    "start": "1372000",
    "end": "1378799"
  },
  {
    "text": "get rid of 2.0 all kind of ways to do that but in the absence of other instruction that's what's going to happen now what you could do is say that",
    "start": "1378799",
    "end": "1385559"
  },
  {
    "text": "well actually we we're we've got this whole kind of versioning thing under control we strictly practice semantic versioning in our organization and if",
    "start": "1385559",
    "end": "1392799"
  },
  {
    "text": "you haven't heard of it semantic versioning def find some very clear semantics about what version numbers mean and for our case what we need to",
    "start": "1392799",
    "end": "1399440"
  },
  {
    "text": "know is that if a major version number changes then that is no longer compatible so if I wanted version 1.10",
    "start": "1399440",
    "end": "1406200"
  },
  {
    "text": "of something and I ended up with 2.2 that's not going to work that change between one and two signifies that that",
    "start": "1406200",
    "end": "1411919"
  },
  {
    "text": "is a breaking change right so in that case using the newest is not really what I want I want to say well we're a bad",
    "start": "1411919",
    "end": "1418480"
  },
  {
    "text": "situation here I need to fix my codes and not use 1.x so I could actually",
    "start": "1418480",
    "end": "1423559"
  },
  {
    "text": "pretty simply in these few lines of code here Implement that kind of conflict resolution in Gradle so here we're",
    "start": "1423559",
    "end": "1428919"
  },
  {
    "text": "saying similar kind of thing all dependencies give me the thing that came in we had the requested version what did",
    "start": "1428919",
    "end": "1435360"
  },
  {
    "text": "we ask for and then what did we end up with after conflict resolution occurred so we",
    "start": "1435360",
    "end": "1442080"
  },
  {
    "text": "have the requested version and the selected version all we're doing here is just passing those version numbers out",
    "start": "1442080",
    "end": "1447960"
  },
  {
    "text": "into a major minor patch so into the kind of three numbers there just some little simple reg Xing here to break",
    "start": "1447960",
    "end": "1453799"
  },
  {
    "text": "that out then all we do is just say that well if the major version number of what we requested is different to the major",
    "start": "1453799",
    "end": "1460039"
  },
  {
    "text": "version number of what we ended up with game's over right I could also again here reach",
    "start": "1460039",
    "end": "1466799"
  },
  {
    "text": "out to some database has this dependency been blacklisted has it passed QA all these kinds of",
    "start": "1466799",
    "end": "1473919"
  },
  {
    "text": "conditions so Gradle as a tool can't anticipate all the possible use cases you might have in dependency management",
    "start": "1474880",
    "end": "1480960"
  },
  {
    "text": "what it can do is give you the levers that you need to implement your own Solutions all right so we've seen some",
    "start": "1480960",
    "end": "1487919"
  },
  {
    "text": "things you can do with API now I want to package that stuff up and reuse it yes question so the amount of magic that I'm",
    "start": "1487919",
    "end": "1494880"
  },
  {
    "text": "see it is amazing it's part of DSL if I were coming at this fresh would I",
    "start": "1494880",
    "end": "1502120"
  },
  {
    "text": "be able to dig in with a debug option or something that would just show the",
    "start": "1502120",
    "end": "1507240"
  },
  {
    "text": "dependency management rules that are being applied so the question was",
    "start": "1507240",
    "end": "1513080"
  },
  {
    "text": "um I guess around Discovery so if coming to this fresh and I wanted to understand what was going on is there some kind of",
    "start": "1513080",
    "end": "1519679"
  },
  {
    "text": "debug option that you could use to find out what was going on essentially is that fair information okay so um yes to",
    "start": "1519679",
    "end": "1527440"
  },
  {
    "text": "a point I guess as my my answer so the authorative description of what's Happening of course is the code right",
    "start": "1527440",
    "end": "1533440"
  },
  {
    "text": "but if you want to see how that affects the end result right so after all these rules what actually applied then the way",
    "start": "1533440",
    "end": "1539640"
  },
  {
    "text": "you would do that would be to run",
    "start": "1539640",
    "end": "1544960"
  },
  {
    "text": "Gradle uh debug is going to give you a lot so what you actually want to see is the dependency tree right so how did",
    "start": "1544960",
    "end": "1550000"
  },
  {
    "text": "this all work out so gradal dependencies oh I'm in the wrong directory",
    "start": "1550000",
    "end": "1555960"
  },
  {
    "text": "so that's going to give me after as a textural representation of the dependency tree that's that's okay um a",
    "start": "1567120",
    "end": "1573880"
  },
  {
    "text": "large dependency tree that's going to get unwieldy very quickly so another option is I could be well what I'm interested in is how did this work out",
    "start": "1573880",
    "end": "1580240"
  },
  {
    "text": "for let's say uh the grvy oil dependency right so I could say well let's say",
    "start": "1580240",
    "end": "1586039"
  },
  {
    "text": "Gradle what I want instead of looking at all the dependencies just give me some insight on the",
    "start": "1586039",
    "end": "1593440"
  },
  {
    "text": "dependency that is groovy so now we've flipped around now",
    "start": "1593440",
    "end": "1600600"
  },
  {
    "text": "we're not seeing the top of the graph down we're seeing from that one dependency groovy here right and seeing",
    "start": "1600600",
    "end": "1607159"
  },
  {
    "text": "why was it included right it was included we ended up with that version because it was selected by rule and conflict resolution",
    "start": "1607159",
    "end": "1613720"
  },
  {
    "text": "right so we detected there was a custom rule in place and things changed there as to what the implementation of the",
    "start": "1613720",
    "end": "1618919"
  },
  {
    "text": "rule is you then have to go back and look at the code kind of thing um and just to take that a bit further what you",
    "start": "1618919",
    "end": "1625200"
  },
  {
    "text": "could do this is a relatively uh new feature I think I got",
    "start": "1625200",
    "end": "1630480"
  },
  {
    "text": "this name right Daz Adam if you no help fair",
    "start": "1630480",
    "end": "1638158"
  },
  {
    "text": "enough we're a very supportive team okay so I applied a another plugin",
    "start": "1638200",
    "end": "1644240"
  },
  {
    "text": "here the project report plugin gives me a bunch of other options to get information out that added the HTML",
    "start": "1644240",
    "end": "1650000"
  },
  {
    "text": "dependency report task which I ran and now I want to open that guy up",
    "start": "1650000",
    "end": "1657600"
  },
  {
    "text": "oops ports project dependencies uh what is it",
    "start": "1657679",
    "end": "1663240"
  },
  {
    "text": "index so now I get a HTML file which has all my dependencies in there I can go through there and the nice thing about",
    "start": "1663440",
    "end": "1669559"
  },
  {
    "text": "this report is that I get the dependencies output here my whole tree if I want to see that dependency Insight",
    "start": "1669559",
    "end": "1676519"
  },
  {
    "text": "information I click on one of these guys and there it is right so I can see both",
    "start": "1676519",
    "end": "1681559"
  },
  {
    "text": "versions um that's three or four gradal versions",
    "start": "1681559",
    "end": "1686960"
  },
  {
    "text": "old now just just on that point before I finish what what this would mean for users say you were doing something like",
    "start": "1691320",
    "end": "1696480"
  },
  {
    "text": "this right which is our semantic version aware uh conflict resolution as a",
    "start": "1696480",
    "end": "1701840"
  },
  {
    "text": "builder release engineer and you're implementing this you'd want to go out of your way to make sure that this was a reasonable error message to tell people",
    "start": "1701840",
    "end": "1707960"
  },
  {
    "text": "what what's going on and you can use the richness of the API to include all the information about what happened in the",
    "start": "1707960",
    "end": "1713000"
  },
  {
    "text": "error message right so you wanted this version but you got this version you can't have it because blah blah blah",
    "start": "1713000",
    "end": "1719000"
  },
  {
    "text": "whatever so there's discoverability for the build engineer and also discoverability for the",
    "start": "1719000",
    "end": "1724679"
  },
  {
    "text": "developer okay back to plugins so plugins are just reusable build script code one of the things about gradal is",
    "start": "1724679",
    "end": "1730919"
  },
  {
    "text": "that there isn't a huge divide between the build language and the plug-in world",
    "start": "1730919",
    "end": "1737200"
  },
  {
    "text": "so plugins are just the same things we have in build scripts packaged up in a reusable fashion so who here uh uses",
    "start": "1737200",
    "end": "1744519"
  },
  {
    "text": "Maven who here has written a maven plugin that's that's a pretty high",
    "start": "1744519",
    "end": "1749919"
  },
  {
    "text": "number okay usually there's far more people use Maven than ever write a maven plugin lot of people would like to they",
    "start": "1749919",
    "end": "1756399"
  },
  {
    "text": "would like to be able to get it to do something it doesn't do that's a pretty heavy undertaking in a lot of cases so",
    "start": "1756399",
    "end": "1761679"
  },
  {
    "text": "one of the design goals of grad was to make the the barrier the low the cost of Entry really low so you can start to",
    "start": "1761679",
    "end": "1767360"
  },
  {
    "text": "factor this stuff in okay so what kind of things could you do with a plugin add new capabilities you",
    "start": "1767360",
    "end": "1772919"
  },
  {
    "text": "could write a plugin that adds support for let's say use Encompass the Ruby Bas uh SAS uh CSS processor that kind of",
    "start": "1772919",
    "end": "1781000"
  },
  {
    "text": "thing so that's adding a new capability or supporting the Android build tool chain that's a capability add new",
    "start": "1781000",
    "end": "1786399"
  },
  {
    "text": "conventions use a plugin to say that we use check style and everything a plugin to do that and tighten existing",
    "start": "1786399",
    "end": "1792320"
  },
  {
    "text": "conventions which is an example of the check style one bear with me okay adding new capabilities that's a completely",
    "start": "1792320",
    "end": "1799080"
  },
  {
    "text": "different talk how would I write a plugin that adds support for JavaScript Etc what we're really interested in is",
    "start": "1799080",
    "end": "1805279"
  },
  {
    "text": "how do I write a plugin that adds or extends conventions which is what we're talking about here so they may provide",
    "start": "1805279",
    "end": "1812559"
  },
  {
    "text": "defaults um a default would be that we just use junit 4.10 across the board for testing just get it going in every",
    "start": "1812559",
    "end": "1819200"
  },
  {
    "text": "project we don't want to have to manually specify it as a default there are integration tests so if I just put",
    "start": "1819200",
    "end": "1825360"
  },
  {
    "text": "my Java files in Source integ test Java everything works I want that to be a default out of the box uh dependencies",
    "start": "1825360",
    "end": "1832240"
  },
  {
    "text": "always come from our repository so let's just go ahead and pre-configure that and we have to build for 1.5 so we're going",
    "start": "1832240",
    "end": "1837880"
  },
  {
    "text": "to enforce that all our code is built for 1.5 so just a selection of different requirements here we're going to",
    "start": "1837880",
    "end": "1843600"
  },
  {
    "text": "implement some plugins that provide these things and package them up and see how we can reuse that",
    "start": "1843600",
    "end": "1848960"
  },
  {
    "text": "logic there are two main ways to package plugins so they can be scripts just like",
    "start": "1848960",
    "end": "1854480"
  },
  {
    "text": "the script files we've been dealing with so far literally just Files full of group code that we can reuse across",
    "start": "1854480",
    "end": "1859559"
  },
  {
    "text": "different projects or we can go a bit more heavyweight we can write them as a class we can compile them we can edit",
    "start": "1859559",
    "end": "1865080"
  },
  {
    "text": "them in our IDE we can test them we can upload them to repositories that kind of thing we're going to see both of",
    "start": "1865080",
    "end": "1872000"
  },
  {
    "text": "those so here I have uh just a Java project and I want to use my uh get",
    "start": "1873240",
    "end": "1879279"
  },
  {
    "text": "those features and standards we're just talking about in the previous slide into this project where is it okay here I",
    "start": "1879279",
    "end": "1885080"
  },
  {
    "text": "have the plugins directory and here is the implementation of my",
    "start": "1885080",
    "end": "1890600"
  },
  {
    "text": "plug-in right so we had a few requirements one was that we use junit out of the box right so go ahead and set",
    "start": "1890600",
    "end": "1897039"
  },
  {
    "text": "that up for us we have support integration tests out of the box so this following code here is all we need to do",
    "start": "1897039",
    "end": "1902679"
  },
  {
    "text": "to make that happen say there is now an integration test Source set and we get",
    "start": "1902679",
    "end": "1908080"
  },
  {
    "text": "um a lot of configuration already for that we want to go a bit further and say that all of the compile dependencies are",
    "start": "1908080",
    "end": "1914200"
  },
  {
    "text": "also integration test compile dependencies our main class path we want for integration test as well similar for",
    "start": "1914200",
    "end": "1919840"
  },
  {
    "text": "runtime you might also want to say that our integration test class path is a suet of our test class path but we're",
    "start": "1919840",
    "end": "1926080"
  },
  {
    "text": "not saying that here it's only superet of the main class but may use a different testing engine Etc and finally",
    "start": "1926080",
    "end": "1932080"
  },
  {
    "text": "here's our test task that says go ahead and run those tests that's all the configuration we need to actually make that happen and we can stamp that out as",
    "start": "1932080",
    "end": "1938320"
  },
  {
    "text": "many times as we like how many kinds of batches of tests you like another requirement was that we always use Java",
    "start": "1938320",
    "end": "1944120"
  },
  {
    "text": "1.5 so here we had go just and configure that ready but also before we actually",
    "start": "1944120",
    "end": "1950480"
  },
  {
    "text": "go and do any compilation make sure that hasn't changed right so that the user hasn't so",
    "start": "1950480",
    "end": "1955840"
  },
  {
    "text": "the person rting this build script hasn't gone and changed that's a 1.7 or or whatnot so we're enforcing that standard set it up as a default and",
    "start": "1955840",
    "end": "1962360"
  },
  {
    "text": "because this is a hard requirement we we just cannot afford to ship software that doesn't work 1.5 Etc go ahead and",
    "start": "1962360",
    "end": "1968639"
  },
  {
    "text": "enforce that the other one was to pre-configure the corporate repository we actually need to go a little bit",
    "start": "1968639",
    "end": "1974600"
  },
  {
    "text": "further and say no other repositories are actually allowed right so here we use one of those",
    "start": "1974600",
    "end": "1979840"
  },
  {
    "text": "callbacks because this guy is a container of repositories we can say all the all the repositories that come along",
    "start": "1979840",
    "end": "1985799"
  },
  {
    "text": "run this code for them if it's not a maven repository or it's not the repository that we want right so it's",
    "start": "1985799",
    "end": "1991880"
  },
  {
    "text": "not our corporate repository just go ahead and print out this warning and then remove it so we're not going to",
    "start": "1991880",
    "end": "1997279"
  },
  {
    "text": "fail we're just going to say sorry you can't use it using the main one and go ahead and pre-populate",
    "start": "1997279",
    "end": "2005840"
  },
  {
    "text": "that so that's a implementation of our plugin just written in a little script over to the side how do we use",
    "start": "2006159",
    "end": "2012679"
  },
  {
    "text": "it oops not like that like this so from any build script we can",
    "start": "2012679",
    "end": "2019039"
  },
  {
    "text": "just say bring in that other script right we factor that stuff into a little script on the side bring it in it's like",
    "start": "2019039",
    "end": "2024559"
  },
  {
    "text": "a mixin or an include mechanism it's just there so this is useful when these",
    "start": "2024559",
    "end": "2029679"
  },
  {
    "text": "things are project local this will be checked into the source tree or you may have it on a shared kind of network file",
    "start": "2029679",
    "end": "2035080"
  },
  {
    "text": "system but that's becoming less and less uh trendy to do so if you want to use this across projects one option will be",
    "start": "2035080",
    "end": "2041360"
  },
  {
    "text": "then to pull it from HTTP a HTTP server you can give it any HTTP URL and it will",
    "start": "2041360",
    "end": "2047159"
  },
  {
    "text": "go and get that file and use it from there obviously you want to be in control of this URL and make sure that",
    "start": "2047159",
    "end": "2053760"
  },
  {
    "text": "random people can't put um RM minus RF behind this thing so you know um this is",
    "start": "2053760",
    "end": "2062000"
  },
  {
    "text": "probably a bad idea reaching out to the internet but no use with caution",
    "start": "2062000",
    "end": "2069040"
  },
  {
    "text": "and that would give us our default so would configure junit for us configure all the bits and pieces that we need to do",
    "start": "2069040",
    "end": "2075679"
  },
  {
    "text": "there um okay so once we get past that point another option so that we called",
    "start": "2077760",
    "end": "2084638"
  },
  {
    "text": "collectively called Script plugins we can pull them from the local file system we can pull them from HTTP if we want to go a bit further and",
    "start": "2084639",
    "end": "2091240"
  },
  {
    "text": "say let's build this thing as a jar we want to have some dedicated build logic and compile it up and share it that way",
    "start": "2091240",
    "end": "2098480"
  },
  {
    "text": "so here we have a Gradle project and a little bit hard to see so let me zoom in so we're just interested in this",
    "start": "2098480",
    "end": "2107160"
  },
  {
    "text": "guy so here's our grad project here's our build. Gradle file we have this special build SRC directory here and",
    "start": "2107160",
    "end": "2113200"
  },
  {
    "text": "this is a kind of magic directory inside of Gradle build Gradle will find this and say this is an embedded Java project",
    "start": "2113200",
    "end": "2119480"
  },
  {
    "text": "that provides build logic Gradle will build this first and put its output on the build class path to be used so",
    "start": "2119480",
    "end": "2126400"
  },
  {
    "text": "inside here go up I've chosen to implement my plugin in",
    "start": "2126400",
    "end": "2133640"
  },
  {
    "text": "groovy you could quite easily do this in Java we've got that same logic this code",
    "start": "2133640",
    "end": "2138680"
  },
  {
    "text": "should look pretty familiar I literally just copy and pasted it out of that script from before but wrapped it up",
    "start": "2138680",
    "end": "2145400"
  },
  {
    "text": "inside plugin plugin class gr plugin this is actually just an interface with one method called apply there's no deep",
    "start": "2145400",
    "end": "2152839"
  },
  {
    "text": "contract here there's nothing really to do it's just a container for your logic somewhere to put it somewhere we know",
    "start": "2152839",
    "end": "2158040"
  },
  {
    "text": "how to call it right so I copy paste my stuff in here here's my implementation of my plugin largely the same inside",
    "start": "2158040",
    "end": "2166280"
  },
  {
    "text": "source man groovy now if I run this project what I should",
    "start": "2166280",
    "end": "2171599"
  },
  {
    "text": "see where am I so let me run let's say gradal",
    "start": "2172480",
    "end": "2182838"
  },
  {
    "text": "test I need to update my examples a little bit updated I've got some um deprecation warnings here but that's",
    "start": "2185119",
    "end": "2190760"
  },
  {
    "text": "just cuz my examples are a little old the first thing we're seeing here is gradal building that build source project it detected it built it as a",
    "start": "2190760",
    "end": "2197359"
  },
  {
    "text": "Java project ran its tests put the output jar onto the build class path to be used so another part of that was we",
    "start": "2197359",
    "end": "2205960"
  },
  {
    "text": "have this little resource file here which is um a descriptor of the",
    "start": "2205960",
    "end": "2211079"
  },
  {
    "text": "plugin that says that the plugin with ID corporate is implemented by this class",
    "start": "2211079",
    "end": "2216960"
  },
  {
    "text": "which was our class class right so we've given our plugin a little ID just like apply plugin Java or apply plugin XYZ we",
    "start": "2216960",
    "end": "2223359"
  },
  {
    "text": "can now do oops if we're in the right directory we can I",
    "start": "2223359",
    "end": "2229799"
  },
  {
    "text": "think apply plugin corporate right so I packaged it up put it in a jar put on the class path I ask",
    "start": "2230520",
    "end": "2237079"
  },
  {
    "text": "for this plugin greater looks at that file loads it up so I give things cute little",
    "start": "2237079",
    "end": "2242240"
  },
  {
    "text": "names so now we're still project local though right this build Source directory is inside my particular project I don't",
    "start": "2242240",
    "end": "2248480"
  },
  {
    "text": "have a mechanism for sharing this yet but this is a good way to incubate build logic incubate plugins right it's a very",
    "start": "2248480",
    "end": "2254319"
  },
  {
    "text": "fast development cycle I change the file I rebuild it's there ready to go but if we want to go cross project we need to",
    "start": "2254319",
    "end": "2259839"
  },
  {
    "text": "do something a little bit different so fortunately Gradle knows how to build",
    "start": "2259839",
    "end": "2267079"
  },
  {
    "text": "Java projects and our plugin is a Java project so what we have now is two",
    "start": "2267079",
    "end": "2272960"
  },
  {
    "text": "separate projects a plugin project which is a standalone gradal build when no longer using the build Source directory",
    "start": "2272960",
    "end": "2279720"
  },
  {
    "text": "but it has the same code we that same uh gvy file in here we changed the build script a little bit because we're saying that I want to use the version of groovy",
    "start": "2279720",
    "end": "2286359"
  },
  {
    "text": "that Gradle provides because I'm implementing my stuff in groovy and I'm also compiling against a gradal API I",
    "start": "2286359",
    "end": "2292280"
  },
  {
    "text": "need that plug-in class I need the repositories I need all that stuff right so this a standalone Java project I can",
    "start": "2292280",
    "end": "2297560"
  },
  {
    "text": "put tests in here any of the grade stuff that you can do with a project I can do including uploading it so here's in",
    "start": "2297560",
    "end": "2304440"
  },
  {
    "text": "Gradle how I configure where I want this project to go and upload and in this case I'm just going to upload it to the file system treating the file system as",
    "start": "2304440",
    "end": "2311319"
  },
  {
    "text": "a maven repository here to share it question on the back is that we think of that as being a",
    "start": "2311319",
    "end": "2319040"
  },
  {
    "text": "tendy or some kind of magic",
    "start": "2319040",
    "end": "2323720"
  },
  {
    "text": "name like an yeah um so the question was Gradle API can we think about that as a",
    "start": "2328480",
    "end": "2333800"
  },
  {
    "text": "dependency or a kind of magic name for a dependency and probably the ladder it's something",
    "start": "2333800",
    "end": "2339640"
  },
  {
    "text": "that's built into Gradle that says if you want to compile against a grad API use that notation we know what that",
    "start": "2339640",
    "end": "2344720"
  },
  {
    "text": "means we'll set things up is there anything else that gets special treat uh this is the only other one saying give",
    "start": "2344720",
    "end": "2350640"
  },
  {
    "text": "me The Groovy from so the question was is there anything else that gets at special treatment yeah if you want to talk about if you're building uh gradal",
    "start": "2350640",
    "end": "2357280"
  },
  {
    "text": "logic it makes sense to just use gradle's version of groovy at build time so you've got so they're synced up uh",
    "start": "2357280",
    "end": "2363200"
  },
  {
    "text": "they're the only two that I can think of I'm pretty sure it's the only two that exist",
    "start": "2363200",
    "end": "2368359"
  },
  {
    "text": "so of course we're building gr build logic we need uh that stuff here so here's my source main there's my gvy",
    "start": "2368359",
    "end": "2374560"
  },
  {
    "text": "file that we saw before my properties file is there so let's go ahead and publish this guy so I should be able to",
    "start": "2374560",
    "end": "2383400"
  },
  {
    "text": "get out of this directory now I have my plugin and project if I run grade will upload",
    "start": "2383400",
    "end": "2390800"
  },
  {
    "text": "archives here if you haven't seen this before um when you're specifying the name of a task on the greater command",
    "start": "2390800",
    "end": "2396240"
  },
  {
    "text": "line you can abbreviate it grader will fill in the gaps so the long version of this was upload archives archives but",
    "start": "2396240",
    "end": "2404359"
  },
  {
    "text": "I'm far too lazy for this so I'm going to go with",
    "start": "2404359",
    "end": "2409640"
  },
  {
    "text": "that so go ahead and build that and push it out here's where it's pushed it to now this could very easily be HTTP but",
    "start": "2410119",
    "end": "2416839"
  },
  {
    "text": "for the sake of demo I've just pushed it to the file system and what I see now",
    "start": "2416839",
    "end": "2423040"
  },
  {
    "text": "is what do I see in the wrong directory",
    "start": "2423160",
    "end": "2428559"
  },
  {
    "text": "so there's all my plug-in files as a m repository on disk and in my projects",
    "start": "2428800",
    "end": "2436839"
  },
  {
    "text": "where I want to use this I need a little bit more configuration to get this guy in right cuz it's now in a um Nexus or",
    "start": "2436839",
    "end": "2444240"
  },
  {
    "text": "artifactory repository somewhere I need to get it onto my project and this is how I do it saying the dependencies I",
    "start": "2444240",
    "end": "2449640"
  },
  {
    "text": "have for the build script you can go and get them from here and this is what they are just and this could be Commons math",
    "start": "2449640",
    "end": "2455720"
  },
  {
    "text": "could be any Library any Java logic you want to use in your project in this case it is a Gradle",
    "start": "2455720",
    "end": "2461720"
  },
  {
    "text": "plugin um if you'd like an alternative to this stay tuned for later in the",
    "start": "2461720",
    "end": "2466920"
  },
  {
    "text": "week so now I've got that on the class path I do the same thing apply plug-in",
    "start": "2466920",
    "end": "2472319"
  },
  {
    "text": "corporate and that would",
    "start": "2472319",
    "end": "2475760"
  },
  {
    "text": "work uh I should have listened to the instruction sorry about that okay so one other important aspect",
    "start": "2478040",
    "end": "2485920"
  },
  {
    "text": "of gradal plugins and this is really a really great feature and you've used this if you've used grad at all you have",
    "start": "2485920",
    "end": "2491160"
  },
  {
    "text": "used this feature the ability to extend the DSL you can inject your own language",
    "start": "2491160",
    "end": "2497000"
  },
  {
    "text": "elements into the build files and they look and feel like first class elements so this slide is uh probably",
    "start": "2497000",
    "end": "2504359"
  },
  {
    "text": "should be updated because probably for most people the best example of this is the Android Block in a greater build",
    "start": "2504359",
    "end": "2509960"
  },
  {
    "text": "file if you built an Android project you'll know that you specify all the things you need to do under this Android",
    "start": "2509960",
    "end": "2515119"
  },
  {
    "text": "block so Android open up this thing here and use the API for that particular plugin right there and it looks and",
    "start": "2515119",
    "end": "2521640"
  },
  {
    "text": "feels like it's native to gradal right but that's an extension to the DSL that the Android plugin makes it's going I",
    "start": "2521640",
    "end": "2527599"
  },
  {
    "text": "want to make this new language element available this new API just inject it and make it available there that's very",
    "start": "2527599",
    "end": "2533280"
  },
  {
    "text": "easy to do and this is something that many people who using grade will do build and release Engineers use this to",
    "start": "2533280",
    "end": "2539000"
  },
  {
    "text": "expose nice concise dsls the developers can use to make the bill do all kinds of",
    "start": "2539000",
    "end": "2544680"
  },
  {
    "text": "configuration under the hood they just need to expose one or two little switches when those switches are turned on lots of things happen but those",
    "start": "2544680",
    "end": "2550680"
  },
  {
    "text": "switches get exposed via an is DSL so let's see how easy that is to do so our",
    "start": "2550680",
    "end": "2556000"
  },
  {
    "text": "use case is that we don't really have just one repository for dependencies we have multiple and people have to select",
    "start": "2556000",
    "end": "2561119"
  },
  {
    "text": "them but we'd like a nicer way to do that so here's how we could do it so",
    "start": "2561119",
    "end": "2567559"
  },
  {
    "text": "we're doing it all in our build script at the moment again I could Factor this out into a plugin on different classes but for the sake of brevity let's do it",
    "start": "2567559",
    "end": "2574160"
  },
  {
    "text": "in one file here I just wrote a simple class simple groovy or Java class with the API that I want and it has the",
    "start": "2574160",
    "end": "2580559"
  },
  {
    "text": "functionality that I need and here's the API that I want to expose was a use Libs",
    "start": "2580559",
    "end": "2585880"
  },
  {
    "text": "method when somebody calls this we go ahead and set up that particular repository so I have my implementation",
    "start": "2585880",
    "end": "2591359"
  },
  {
    "text": "here here's my DSL extension in one line I can inject that into the build script I say that make",
    "start": "2591359",
    "end": "2598640"
  },
  {
    "text": "this guy available under this name so after we've done this my build",
    "start": "2598640",
    "end": "2605200"
  },
  {
    "text": "scripts I can now go ahead and do this and it looks like a first class citizen in the build script so if this was a way",
    "start": "2605200",
    "end": "2611559"
  },
  {
    "text": "in a plugin somewhere the user of the build script wouldn't have to know any of this stuff all they know is that if I",
    "start": "2611559",
    "end": "2617599"
  },
  {
    "text": "want to specify repositories I need this is the syntax I used to do it corporate repos whatever is in",
    "start": "2617599",
    "end": "2624720"
  },
  {
    "text": "[Music]",
    "start": "2626040",
    "end": "2629369"
  },
  {
    "text": "there another concept that you'll find throughout Gradle is this idea of plugin Stacks I mentioned the St being able to",
    "start": "2631280",
    "end": "2638200"
  },
  {
    "text": "opt out of conventions or back out this is a key Part of That So Sophisticated plugins like the Java plugin the Android",
    "start": "2638200",
    "end": "2644960"
  },
  {
    "text": "plugin the native stuff they're actually com comprised of multiple plugins that stack on top of each other and the Java",
    "start": "2644960",
    "end": "2651280"
  },
  {
    "text": "plugin works like this there is a base plugin and grad that provides some core functionality like clean some core",
    "start": "2651280",
    "end": "2656839"
  },
  {
    "text": "dependency management stuff there's a Java based plugin that gives us the ability to run tests compile code do",
    "start": "2656839",
    "end": "2662920"
  },
  {
    "text": "these kinds of things what it doesn't say is anything about the project doesn't be so bold as to say there will",
    "start": "2662920",
    "end": "2668720"
  },
  {
    "text": "be main source and there will be test Source just says that I know how to compile Java code if you need me to the",
    "start": "2668720",
    "end": "2674440"
  },
  {
    "text": "Java plugin goes further and says well thank you for that functionality Java Bas plugin but I'm going to state that",
    "start": "2674440",
    "end": "2680000"
  },
  {
    "text": "there is Main Source there is test source so the developer just puts their files into Source main Java Source test",
    "start": "2680000",
    "end": "2685240"
  },
  {
    "text": "Java and it works so here we have capability so this guy and here we have",
    "start": "2685240",
    "end": "2691520"
  },
  {
    "text": "convention so if those conventions don't work for you you just drop down a level",
    "start": "2691520",
    "end": "2697800"
  },
  {
    "text": "and say instead of applying the Java plugin let's apply the Java base plugin build our own conventions on top of",
    "start": "2697800",
    "end": "2704558"
  },
  {
    "text": "that all right and it scripts so they are plugins and one more",
    "start": "2707839",
    "end": "2713160"
  },
  {
    "text": "point I want to make about plugins just to reiterate is that inside a plug-in implementation you can do exactly the",
    "start": "2713160",
    "end": "2718280"
  },
  {
    "text": "same things you can do in a build script there's really no special API that you use all of that um logic that we all the",
    "start": "2718280",
    "end": "2724800"
  },
  {
    "text": "API we haven't seen is available to you so if you've written a build script you can write a Gradle plugin there's really",
    "start": "2724800",
    "end": "2730839"
  },
  {
    "text": "no difference there okay n scripts facilitate cross project configuration they have a larger",
    "start": "2730839",
    "end": "2736800"
  },
  {
    "text": "reach they allow us to make statements ACR about many projects and they exist at a different point in the build life",
    "start": "2736800",
    "end": "2743160"
  },
  {
    "text": "cycle they're really a bootstrapping mechanism for getting things going and they again are just gradal scripts just",
    "start": "2743160",
    "end": "2749920"
  },
  {
    "text": "text Files full of groovy code there are a few places we can put them that Gradle will look for them conventionally so",
    "start": "2749920",
    "end": "2755800"
  },
  {
    "text": "inside your user home directory you'll find a little Gradle directory so this is tilder sl. Gradle that's where Gradle",
    "start": "2755800",
    "end": "2762040"
  },
  {
    "text": "stores this dependency cache and a bunch of working files in there you can go ahead and put an an. Gradle file in",
    "start": "2762040",
    "end": "2767359"
  },
  {
    "text": "there and Gradle will implicitly look at this and run that every time it runs a build so you might want to put something",
    "start": "2767359",
    "end": "2772480"
  },
  {
    "text": "in there like well I've got a really fast machine here I've got eight cores just go ahead and turn test parallelism",
    "start": "2772480",
    "end": "2778440"
  },
  {
    "text": "on for all tests we don't want to turn that on globally for every developer because some cases we don't like it but",
    "start": "2778440",
    "end": "2784280"
  },
  {
    "text": "on my machine I want it or after the test of run if they failed go ahead and just open up the HTML dependency report",
    "start": "2784280",
    "end": "2790800"
  },
  {
    "text": "straight away the other guy on my team doesn't like the behavior I really like it I'm going to set it up for my environment obviously you don't want to",
    "start": "2790800",
    "end": "2797599"
  },
  {
    "text": "do things here like in my project I'm going to change the depend in my version of this project going to change the",
    "start": "2797599",
    "end": "2802880"
  },
  {
    "text": "version of this dependency from 1 to two obviously when you build it it's going to be different to the way that it builds in CI but sort of Behavioral",
    "start": "2802880",
    "end": "2809720"
  },
  {
    "text": "differences of the way Gradle works and some logging and things like that it's a good candidate for this um this is the same thing just",
    "start": "2809720",
    "end": "2816880"
  },
  {
    "text": "showing that you can have multiple of these files the most interesting one in terms of the build platform idea is you",
    "start": "2816880",
    "end": "2822559"
  },
  {
    "text": "can embed these things inside the gradal distribution so gradal home here refers to a gradal",
    "start": "2822559",
    "end": "2829280"
  },
  {
    "text": "installation so I can put files inside the gradal installation and have them work just implicitly loaded therefore",
    "start": "2829280",
    "end": "2835400"
  },
  {
    "text": "every single project that runs with that Gradle installation is going to have that logic and one other option that is",
    "start": "2835400",
    "end": "2841119"
  },
  {
    "text": "typically only used at the CI server is to specify which in it script I like I can",
    "start": "2841119",
    "end": "2846160"
  },
  {
    "text": "use Dash capital I say use CI in. gradal that might do some extra checking or",
    "start": "2846160",
    "end": "2852359"
  },
  {
    "text": "some other configuration that you need in CI only but the one I'm most interested in is this guy and before I",
    "start": "2852359",
    "end": "2858400"
  },
  {
    "text": "get to why that's so useful or how that can be leveraged need to discuss another feature now we don't need to discuss",
    "start": "2858400",
    "end": "2863680"
  },
  {
    "text": "this more so what can build scripts uh what can anit scripts do load plugins we",
    "start": "2863680",
    "end": "2868920"
  },
  {
    "text": "can pre-load plugins specify plug-in repositories environmental configuration more or less all the same things that",
    "start": "2868920",
    "end": "2874480"
  },
  {
    "text": "plugins do you can do in nit scripts but they happen sooner they generally used for a bootstrapping mechanism there are",
    "start": "2874480",
    "end": "2880520"
  },
  {
    "text": "certain listeners and things that you can also register in a nit script so you can have things happen before Gradle",
    "start": "2880520",
    "end": "2886079"
  },
  {
    "text": "starts to load a project so very very early checks in the life",
    "start": "2886079",
    "end": "2890920"
  },
  {
    "text": "cycle okay so let's have a look at what would a nit script what would an anit script look like that preloads a plug-in",
    "start": "2891400",
    "end": "2897599"
  },
  {
    "text": "so here have an anit do gradal file and it's just more groovy code more gradal",
    "start": "2897599",
    "end": "2903440"
  },
  {
    "text": "DSL because an anit script is global across many projects to say what projects are we interested",
    "start": "2903440",
    "end": "2908880"
  },
  {
    "text": "in you use this API to say that just go ahead and run this code against all the projects that you load",
    "start": "2908880",
    "end": "2914640"
  },
  {
    "text": "up right so go ahead and just preedee that dependency information for a build logic just get it going there because we",
    "start": "2914640",
    "end": "2920319"
  },
  {
    "text": "always want it so now when I build that I could specify - capital I point to the NIT",
    "start": "2920319",
    "end": "2926599"
  },
  {
    "text": "script put it in my user n. gradal none of those options are really that appealing because it's not portable and it's not",
    "start": "2926599",
    "end": "2933599"
  },
  {
    "text": "implicit so need to take a little bit further so out of out of the people using grad who here is using the grad",
    "start": "2933599",
    "end": "2940520"
  },
  {
    "text": "rapper let me put another way who here is not who is using grad and not using the grad rapper okay didn't you put your hand up",
    "start": "2940520",
    "end": "2947480"
  },
  {
    "text": "twice Sean mix and match I like it okay so",
    "start": "2947480",
    "end": "2952920"
  },
  {
    "text": "what the great raer is I won't go into too much but it's a self bootstrapping build system so let's have it's a way",
    "start": "2952920",
    "end": "2958359"
  },
  {
    "text": "the build system can self bootstrap so let's just have a look uh that's not",
    "start": "2958359",
    "end": "2963640"
  },
  {
    "text": "what I wanted so I have an empty project here nothing",
    "start": "2963640",
    "end": "2970480"
  },
  {
    "text": "in here I'm bootstrapping a new project I'm the build master or release engineer I have grad installed on my",
    "start": "2970480",
    "end": "2977040"
  },
  {
    "text": "machine I run Gradle and knit which is a way to bootstrap a new project um grad",
    "start": "2977040",
    "end": "2982880"
  },
  {
    "text": "knit takes a few parameters I can tell it that this is a Java Library so go ahead and set it up that",
    "start": "2982880",
    "end": "2989480"
  },
  {
    "text": "way I can say it's a scalar Library go ahead and set it up that way it's a groovy Library",
    "start": "2989480",
    "end": "2995440"
  },
  {
    "text": "Etc and you may know this kind of idea as archetypes in other Realms I guess",
    "start": "2995440",
    "end": "3002440"
  },
  {
    "text": "okay what I want to do is just give me a Bare Bones Gradle project go ahead and do that so it's done two things it's",
    "start": "3002440",
    "end": "3009720"
  },
  {
    "text": "created a build. Gradle file for me to kind of help me get going a lot of stuff commented out you",
    "start": "3009720",
    "end": "3017440"
  },
  {
    "text": "probably go ahead and do that or selectively take what you need but more importantly for us it has set up the",
    "start": "3017440",
    "end": "3023960"
  },
  {
    "text": "Gradle wrapper so this Gradle rapper directory we have the gradal rapper jar",
    "start": "3023960",
    "end": "3029720"
  },
  {
    "text": "which is how the thing bootstraps itself and this properties file so if you haven't seen this before what happens",
    "start": "3029720",
    "end": "3036240"
  },
  {
    "text": "now once I have done this I get these files which I check",
    "start": "3036240",
    "end": "3041280"
  },
  {
    "text": "into the project here's a grad W shell script here's a gradlew.bat batch script for the windows",
    "start": "3041280",
    "end": "3047240"
  },
  {
    "text": "folk and from this point on I now run the build via these",
    "start": "3047240",
    "end": "3053599"
  },
  {
    "text": "scripts I no longer use gradal on the command line I use /rw that's going to",
    "start": "3053599",
    "end": "3058920"
  },
  {
    "text": "load up have a bit of a look around and when I say load up it's really this guy here the grad raer jar",
    "start": "3058920",
    "end": "3065480"
  },
  {
    "text": "it's about 200k I think last time I checked using this configuration file it's going to work out where does Gradle",
    "start": "3065480",
    "end": "3072079"
  },
  {
    "text": "get installed on this machine and where is gradal if I need it to get it so if it doesn't find gradal in the place that",
    "start": "3072079",
    "end": "3078319"
  },
  {
    "text": "it needs it it's going to go and get it install it and use it all right so what that means is that if you're using the",
    "start": "3078319",
    "end": "3083559"
  },
  {
    "text": "grer wrapper on a project you check it out a source control run the build via gradel W if it needs a version of Gradle",
    "start": "3083559",
    "end": "3089400"
  },
  {
    "text": "installed it will just get it and things are going there so you have a completely portable build so for bootstrapping that's great it's also great for version",
    "start": "3089400",
    "end": "3095960"
  },
  {
    "text": "pinning you know that the build is going to be run with a version of grad it was designed for you don't have this mix",
    "start": "3095960",
    "end": "3101240"
  },
  {
    "text": "match of you designed it for one version of a build system person has a different version on their machine all kind of",
    "start": "3101240",
    "end": "3106400"
  },
  {
    "text": "chaos and shoes there it's a very useful feature and",
    "start": "3106400",
    "end": "3111920"
  },
  {
    "text": "looks like almost all of you were using it but if you know somebody who is using grad isn't using the gr rapper they",
    "start": "3111920",
    "end": "3117520"
  },
  {
    "text": "should be every single project should use the rapper question seane push back on open source",
    "start": "3117520",
    "end": "3126240"
  },
  {
    "text": "projects so the question well it's more of a statement than a question but um it's a it is a question is there a",
    "start": "3128359",
    "end": "3134960"
  },
  {
    "text": "solution okay so the qu um question was uh how do you deal with open source",
    "start": "3134960",
    "end": "3140640"
  },
  {
    "text": "projects where um the jar the jar can't be checked in or there's the desire not to check that small jar file in",
    "start": "3140640",
    "end": "3148839"
  },
  {
    "text": "um there's no simple easy portable solution to this so lot some Enterprises",
    "start": "3148839",
    "end": "3154160"
  },
  {
    "text": "who use this feature they also have some restrictions against this they have their own deployment tools for pushing",
    "start": "3154160",
    "end": "3160200"
  },
  {
    "text": "out tools to machines and they preed machines with grade all that kind of thing obviously in an open source",
    "start": "3160200",
    "end": "3165640"
  },
  {
    "text": "project you can't preedee open source development from around the world so um",
    "start": "3165640",
    "end": "3170680"
  },
  {
    "text": "at the moment your alternative is to say well go and install Gradle basically",
    "start": "3170680",
    "end": "3177000"
  },
  {
    "text": "yes Justin of leading question guess um would we ever see the actual gr commands",
    "start": "3179760",
    "end": "3186720"
  },
  {
    "text": "being respect proper file so the question was um will we ever see the",
    "start": "3186720",
    "end": "3191880"
  },
  {
    "text": "gradal command what we're using before respects the rapper file or respect the jar right property file property file",
    "start": "3191880",
    "end": "3198319"
  },
  {
    "text": "yes so let's say that I what I want to do is um I guess the end result there",
    "start": "3198319",
    "end": "3205160"
  },
  {
    "text": "would be that instead of using grad W you just use Gradle and have the same functionality exists so that if Gradle",
    "start": "3205160",
    "end": "3211680"
  },
  {
    "text": "wasn't installed it would go and download itself that kind of thing right more respecting the version number that's in the property po so that maybe",
    "start": "3211680",
    "end": "3218200"
  },
  {
    "text": "on my path I have 112 but the project was locked down to n right and it would stop go and get one n pass over control",
    "start": "3218200",
    "end": "3224720"
  },
  {
    "text": "um there's no reason why you wouldn't see that um it's a it's a really good idea there are some solutions like",
    "start": "3224720",
    "end": "3230799"
  },
  {
    "text": "they're out that in terms of people who have taken the gradal W scripts and packaged them up in a reusable way and",
    "start": "3230799",
    "end": "3236280"
  },
  {
    "text": "they push out a kind of modified version of the grad W script to machines so everybody has Gradle installed but it's",
    "start": "3236280",
    "end": "3242520"
  },
  {
    "text": "not really gradal it's really the grad W script that kind of looks around so that's the kind of work for that the",
    "start": "3242520",
    "end": "3248119"
  },
  {
    "text": "moment but yeah that's a good idea and it should yes so question is can you do it now no is it a good idea yes so you",
    "start": "3248119",
    "end": "3255880"
  },
  {
    "text": "might be in the running for a book we'll see okay so the great rapper that's a",
    "start": "3255880",
    "end": "3261720"
  },
  {
    "text": "great Standalone feature for single open source project builds for portfolio builds whatnot what I gets really",
    "start": "3261720",
    "end": "3268280"
  },
  {
    "text": "interesting is that you can actually specify what part of the configuration",
    "start": "3268280",
    "end": "3274359"
  },
  {
    "text": "of the wrapper is where should I get it from right the default version is go and get plain Gradle from our service right",
    "start": "3274359",
    "end": "3281559"
  },
  {
    "text": "go if you need it Go and download it from the gray.org website and install it which is just the vanilla version of Gradle there's nothing stopping you from",
    "start": "3281559",
    "end": "3287799"
  },
  {
    "text": "changing this URL to poting into a different version of grad possibly modified version of grad how would you",
    "start": "3287799",
    "end": "3293720"
  },
  {
    "text": "want a modify Gradle well you may want to patch the codee if you're really ambitious that's one",
    "start": "3293720",
    "end": "3300000"
  },
  {
    "text": "option or you could go ahead and put in anit script inside that",
    "start": "3300000",
    "end": "3306200"
  },
  {
    "text": "distribution right so this is the this is basically that zip is a packed version of Gradle home unpack it put",
    "start": "3306200",
    "end": "3312240"
  },
  {
    "text": "your preceding AIT script in there repackage it up put it on your HTTP servers and get project started by",
    "start": "3312240",
    "end": "3319040"
  },
  {
    "text": "pointing to that therefore you don't you have implicit logic that is custom to you but you're guaranteed that every",
    "start": "3319040",
    "end": "3325440"
  },
  {
    "text": "project uses it or the project that needs it use it you don't have to go ahead and preload that information on everybody's machine so it's a",
    "start": "3325440",
    "end": "3332480"
  },
  {
    "text": "bootstrapping mechanism and many people who do this um",
    "start": "3332480",
    "end": "3339400"
  },
  {
    "text": "go ahead and automate this process so here's an example of a bunch of builds to go and do that just",
    "start": "3339400",
    "end": "3348000"
  },
  {
    "text": "for a bit of fun so I've created a little Gradle project here and what it does is it goes",
    "start": "3348000",
    "end": "3354079"
  },
  {
    "text": "and downloads Gradle from our website unpacks It Go goes ahead and puts our nit script",
    "start": "3354079",
    "end": "3363079"
  },
  {
    "text": "in there which is our nit script from before go ahead and preload this stuff right and we want to repackage it and",
    "start": "3363079",
    "end": "3368359"
  },
  {
    "text": "upload it so go ahead and download Gradle because there's no kind of builtin download functionality um at the",
    "start": "3368359",
    "end": "3377079"
  },
  {
    "text": "time that I wrote this I just wrote a quick little Gradle task to do this so another grad top of grad extension I",
    "start": "3377079",
    "end": "3382359"
  },
  {
    "text": "wrote a task a bit of imperative logic to do some work it just uses the jdk to download the zip write it to disk so",
    "start": "3382359",
    "end": "3390160"
  },
  {
    "text": "download it unpack it this is pulling apart that zip file merging in our nit",
    "start": "3390160",
    "end": "3396079"
  },
  {
    "text": "script into the right directory and here my uh emulation of uploading is just a",
    "start": "3396079",
    "end": "3401200"
  },
  {
    "text": "copy to another place on the file system there's nothing stopping me from treating this like a jar that I just made and pushing it up to a Nexus or",
    "start": "3401200",
    "end": "3407920"
  },
  {
    "text": "artifactory if you want to wherever you need to get it to so I can automate this customization process to a large extent",
    "start": "3407920",
    "end": "3414200"
  },
  {
    "text": "so at the end of that I get this thing built and now what I would do in my",
    "start": "3414200",
    "end": "3419920"
  },
  {
    "text": "project is wrapper enable this change the url to point to that custom uploaded",
    "start": "3419920",
    "end": "3426240"
  },
  {
    "text": "version and then I implicitly go ahead and get all that logic that was in the inet script in that",
    "start": "3426240",
    "end": "3432880"
  },
  {
    "text": "[Music] project so that's the kind of current",
    "start": "3433060",
    "end": "3439319"
  },
  {
    "text": "state of play um of course just to just keep in mind that the examples that I chose of things you can customize and",
    "start": "3439319",
    "end": "3444559"
  },
  {
    "text": "things that use the API for they are selective examples there are many more things you can potentially do there are lots of aspects to the API um typically",
    "start": "3444559",
    "end": "3452359"
  },
  {
    "text": "a good starting point if you have a question of can I do this forums. great.org go and post there it's a",
    "start": "3452359",
    "end": "3458599"
  },
  {
    "text": "public forum the developers of grad like myself I monitor that and we help people out other Gradle users around the world",
    "start": "3458599",
    "end": "3464559"
  },
  {
    "text": "do that so if you have a kind of question I just I want to do this thing I don't really know where to start looking post there I usually get a",
    "start": "3464559",
    "end": "3470240"
  },
  {
    "text": "pretty good answer okay so what are we where are we going with this kind of aspect of gradal and as I mentioned it's",
    "start": "3470240",
    "end": "3475880"
  },
  {
    "text": "one of many aspects of Gradle so plug-in development and life cycle support",
    "start": "3475880",
    "end": "3482400"
  },
  {
    "text": "um you can develop plugins now you can release them you can test them but there's certain things we could be doing to make that easier we definitely want",
    "start": "3482400",
    "end": "3488839"
  },
  {
    "text": "to do that and I'm sure sure Justin has some things he could say about that uh keep an eye on Justin's going to be",
    "start": "3488839",
    "end": "3494119"
  },
  {
    "text": "announcing some stuff later this week at the grle summit I'm sure that's going to be made publicly public information so keep an eye on that Justin uh from",
    "start": "3494119",
    "end": "3501160"
  },
  {
    "text": "Netflix so plugin Discovery and use infrastructure as Gradle grows it becomes more Main stream there are more",
    "start": "3501160",
    "end": "3506720"
  },
  {
    "text": "and more gradal plugins appearing out there and you might want to has somebody written a gradal plugin to do",
    "start": "3506720",
    "end": "3512680"
  },
  {
    "text": "XYZ um and there are sever versions of that has there is there an open source plugin out there that does this has",
    "start": "3512680",
    "end": "3518720"
  },
  {
    "text": "somebody else in my organization written a plugin that does this kind of thing so Discovery and use what are the plugins",
    "start": "3518720",
    "end": "3524480"
  },
  {
    "text": "being used in this build if I'm getting all this implicit logic I want to know about it third Point here being our",
    "start": "3524480",
    "end": "3529799"
  },
  {
    "text": "richer plug-in collaboration constructs it's very easy to write plugins that collaborate in gradal via the model",
    "start": "3529799",
    "end": "3535480"
  },
  {
    "text": "because I can read and write and I can look and see when things have done that kind of thing plugins can collaborate we",
    "start": "3535480",
    "end": "3540599"
  },
  {
    "text": "want to make that easier and richer basically allow deeper kinds of collaboration so good example of this um",
    "start": "3540599",
    "end": "3546599"
  },
  {
    "text": "this this is burgeoning in the Android space we have the Google team producing the Android plugin and there's been an",
    "start": "3546599",
    "end": "3552599"
  },
  {
    "text": "explosion of testing the cloud providers come along so you can basically take the Android plugin take the plugin from this",
    "start": "3552599",
    "end": "3559200"
  },
  {
    "text": "provider and automatically now your tests go up and get run in the cloud there are many many aspects of this so",
    "start": "3559200",
    "end": "3564480"
  },
  {
    "text": "we have really rich collaboration going going on between plugins and that's the Android realm is really pushing this so",
    "start": "3564480",
    "end": "3571599"
  },
  {
    "text": "we want to make that easier and really make it um well it's not hard to create a Custom",
    "start": "3571599",
    "end": "3577359"
  },
  {
    "text": "Distribution and use it we want to make that simpler we want to provide better tooling for managing that process and what that really comes down to is make",
    "start": "3577359",
    "end": "3584359"
  },
  {
    "text": "running Gradle in a context of first class citizen where the context may be your organization that may mean",
    "start": "3584359",
    "end": "3590799"
  },
  {
    "text": "different things to running Gradle in the kind of Open Source world right so",
    "start": "3590799",
    "end": "3596559"
  },
  {
    "text": "that can all be done we've seen examples how to do that but really want to make that a first class concept because it is important when you are creating a custom",
    "start": "3596559",
    "end": "3602280"
  },
  {
    "text": "build platform to do that so um that's all we have time for so we have a few um minutes left and for",
    "start": "3602280",
    "end": "3609480"
  },
  {
    "text": "some questions and I see one at the back so let's jump to that",
    "start": "3609480",
    "end": "3615160"
  },
  {
    "text": "tools yeah so the question was are there any tools to migrate from um is is that",
    "start": "3617280",
    "end": "3623920"
  },
  {
    "text": "another question or a question on this I'll come back to you um so the question was are there any tools to help migrate",
    "start": "3623920",
    "end": "3630119"
  },
  {
    "text": "from Maven to Gradle so what you can do um I don't in interest of time I don't have a maven build here ready to go but",
    "start": "3630119",
    "end": "3637119"
  },
  {
    "text": "what you can do is install Gradle on your machine download Gradle unpack it you have to set a few environment variables ready to go so to the point",
    "start": "3637119",
    "end": "3643760"
  },
  {
    "text": "you can run Gradle go into your Maven project your directory with your pom files and if",
    "start": "3643760",
    "end": "3648960"
  },
  {
    "text": "it's a multi project go to the top run Gradle and knit it will detect that's a maven build detect the pump files and",
    "start": "3648960",
    "end": "3655520"
  },
  {
    "text": "convert over to gradal files so the output of that result is a bunch of build. gradal files on your file system",
    "start": "3655520",
    "end": "3661400"
  },
  {
    "text": "now what that's going to do is copy over the dependency information compiler configuration most of the the 80% stuff",
    "start": "3661400",
    "end": "3667559"
  },
  {
    "text": "uh things like uh the configuration of the Tomcat plugin your assemblies those kind of things it's not going to catch those but it gets does the grunt work",
    "start": "3667559",
    "end": "3674599"
  },
  {
    "text": "for you and then you look at the plugins that you're using the functionality and find the equivalent of Gradle and fill",
    "start": "3674599",
    "end": "3679720"
  },
  {
    "text": "in the gaps it it drastically um speeds up the process typically because Maven",
    "start": "3679720",
    "end": "3684760"
  },
  {
    "text": "is is is so rigid in its structure it's typically quite easy to convert a maven build um if you have an ant build that",
    "start": "3684760",
    "end": "3690480"
  },
  {
    "text": "was designed 15 years ago it's a different story you",
    "start": "3690480",
    "end": "3695160"
  },
  {
    "text": "knows uh if so does the question was Does it include parent PS that are outside of the project if it can",
    "start": "3696440",
    "end": "3701880"
  },
  {
    "text": "determine what that dependency is in terms of it's a um build it's a runtime dependency and not a configuration",
    "start": "3701880",
    "end": "3707520"
  },
  {
    "text": "dependency yes but if it's like extra code configuration code no you're going to have to deal with that",
    "start": "3707520",
    "end": "3713000"
  },
  {
    "text": "somehow so there's question at the back yeah imag yes",
    "start": "3713000",
    "end": "3720039"
  },
  {
    "text": "that so um this init mechanism is the startings of that so this bit say init",
    "start": "3720039",
    "end": "3725920"
  },
  {
    "text": "type Java Library Etc this kind of templating system at the moment it's a closed set we haven't yet opened this",
    "start": "3725920",
    "end": "3732799"
  },
  {
    "text": "mechanism specifying what type do you want but that's what we're going to do so basically a plugin a pluggable system",
    "start": "3732799",
    "end": "3738200"
  },
  {
    "text": "for specifying your own types uh in your when you're running Gradle in your context it'll know about your custom",
    "start": "3738200",
    "end": "3744079"
  },
  {
    "text": "types and load that stuff up yeah um sorry the front here was yes",
    "start": "3744079",
    "end": "3751039"
  },
  {
    "text": "question for transition from Marvin to gr yes so the question was um converting",
    "start": "3751039",
    "end": "3759359"
  },
  {
    "text": "from Maven to Gradle really about how do you deal with the maven site plug-in I guess is what it comes down to right generating a website for your project",
    "start": "3759359",
    "end": "3765880"
  },
  {
    "text": "from your Maven build uh there isn't a direct equivalent that we provide so that we don't provide a kind of gradal",
    "start": "3765880",
    "end": "3771480"
  },
  {
    "text": "site plug-in there are third party ones out there that do a similar kind of job they give you a place to put your Java",
    "start": "3771480",
    "end": "3776920"
  },
  {
    "text": "docs and that kind of thing um they're all kind of loose ports there are some that go a little bit further um using",
    "start": "3776920",
    "end": "3783119"
  },
  {
    "text": "GitHub pages is now much in Vogue for open source projects so there are plugins that automate that process and",
    "start": "3783119",
    "end": "3788680"
  },
  {
    "text": "deal with the GitHub templating system that kind of thing um so to the first party of question um there is no direct",
    "start": "3788680",
    "end": "3795960"
  },
  {
    "text": "translation but the equivalent functionality is there in terms of third party plugins uh the second part in",
    "start": "3795960",
    "end": "3802200"
  },
  {
    "text": "terms of can you use um a m can use Maven plugins from a gradal build not in",
    "start": "3802200",
    "end": "3808359"
  },
  {
    "text": "a kind of native way you can't take a maven plugin and plug it into a gradal build but what many people do in a transition is they put Gradle in front",
    "start": "3808359",
    "end": "3816160"
  },
  {
    "text": "and have Maven do certain bits of functionality right so um you can tell Gradle hey tell Maven to do this just",
    "start": "3816160",
    "end": "3823000"
  },
  {
    "text": "run this Maven command grab its outputs take it a little bit further do a this kind of thing and then eventually cut",
    "start": "3823000",
    "end": "3828200"
  },
  {
    "text": "Maven out of the process so there's no deep native integration but there are mechanisms to keep the two running side",
    "start": "3828200",
    "end": "3834319"
  },
  {
    "text": "by side for a Time um this is this kind of project documentation space is pretty hot um",
    "start": "3834319",
    "end": "3840440"
  },
  {
    "text": "there's lots of stuff going on particularly on asid do and some other tools to make this a lot easier so um",
    "start": "3840440",
    "end": "3847240"
  },
  {
    "text": "yeah that's kind of the state of where things are now um over here okay so the question is um myself",
    "start": "3847240",
    "end": "3854760"
  },
  {
    "text": "and Hans use the term we quite a lot in talking about them things who is we yeah fairly um so we in um I speak for myself",
    "start": "3854760",
    "end": "3863400"
  },
  {
    "text": "we is the greater core development team I guess which are a bunch of people employed by",
    "start": "3863400",
    "end": "3868680"
  },
  {
    "text": "Gradle Weare which is the company behind Gradle as full-time Engineers trainers Consultants that kind of thing uh grad",
    "start": "3868680",
    "end": "3875680"
  },
  {
    "text": "is an open source project and we run it truly as an open source project we do design out in the open we discuss with",
    "start": "3875680",
    "end": "3882079"
  },
  {
    "text": "anybody who wants to discuss how things should be implemented in gradal we accept third party contributions all",
    "start": "3882079",
    "end": "3887240"
  },
  {
    "text": "that kind of stuff of a normal open source project but uh we we have are a commercial entity behind the project",
    "start": "3887240",
    "end": "3893520"
  },
  {
    "text": "does that answer the question",
    "start": "3893520",
    "end": "3897240"
  },
  {
    "text": "okay so again I speak for myself not necessarily Hans but um uh I'm an engineer on the project so for me we is",
    "start": "3905400",
    "end": "3912359"
  },
  {
    "text": "Gradle first and foremost and that's all I'm really how we want it to work that kind of thing and what we're really",
    "start": "3912359",
    "end": "3917960"
  },
  {
    "text": "focused on is making Gradle a great tool making it successful and then people",
    "start": "3917960",
    "end": "3923279"
  },
  {
    "text": "want it to work that kind of thing and what we're really focused on is making Gradle a great tool making it successful",
    "start": "3923279",
    "end": "3929680"
  },
  {
    "text": "and then other people work out how to make money out of that",
    "start": "3929680",
    "end": "3934359"
  },
  {
    "text": "hopefully um so I don't quite understand the question the question being um actually can you just clarify bit then I'll repeat it so you were talking about",
    "start": "3943599",
    "end": "3951839"
  },
  {
    "text": "a specific example AP in internal API thing",
    "start": "3951839",
    "end": "3957279"
  },
  {
    "text": "yeah okay so right okay so the question being that",
    "start": "3957279",
    "end": "3963960"
  },
  {
    "text": "I I mentioned a particular feature and there was a question on is there part of the API to do something with dependency",
    "start": "3963960",
    "end": "3970480"
  },
  {
    "text": "cache um who is we in regards to the decision to not open that up yet uh",
    "start": "3970480",
    "end": "3975559"
  },
  {
    "text": "that's really the greater core engineering team um the decisions about what's in the public API versus what isn't our engineering driven it's it's",
    "start": "3975559",
    "end": "3982920"
  },
  {
    "text": "about um keeping the making things public that we can keep stable and that are at a certain kind of level um gen",
    "start": "3982920",
    "end": "3990920"
  },
  {
    "text": "that's that's really just a engineering decision there's not really much of a business imperative behind that um great",
    "start": "3990920",
    "end": "3996880"
  },
  {
    "text": "there's a deep deep commitment to keeping gr an open source project there is not a pro version of Gradle a paid",
    "start": "3996880",
    "end": "4002279"
  },
  {
    "text": "for version you may see um certain other things come along but Gradle itself is",
    "start": "4002279",
    "end": "4007760"
  },
  {
    "text": "fundamentally an open source project and it's in its DNA how it works and what's the license Apache 2 yeah question at",
    "start": "4007760",
    "end": "4016000"
  },
  {
    "text": "the back so maybe in to that so when L is opening up really just saying this is",
    "start": "4016000",
    "end": "4022599"
  },
  {
    "text": "a public API where we promis backwards compatibility of course the stuff that is not open up is also open source but",
    "start": "4022599",
    "end": "4029520"
  },
  {
    "text": "it's an internal API so if you mess around with that we don't guarantee that your extension that you still API will",
    "start": "4029520",
    "end": "4036200"
  },
  {
    "text": "work with the next version of CR you can do that it's all open S so so just for the video what Hans was saying is that",
    "start": "4036200",
    "end": "4042480"
  },
  {
    "text": "yeah in terms of opening up it doesn't mean that you can't access that stuff and you're closed off from it it means that we don't consider a public stable",
    "start": "4042480",
    "end": "4048799"
  },
  {
    "text": "API that we encourage the use of you can use all the internal stuff but we don't guarantee it's not going to change from",
    "start": "4048799",
    "end": "4053960"
  },
  {
    "text": "release release and many companies do do this they want that feature they use it they wear that change but they understand that that aspect of",
    "start": "4053960",
    "end": "4060760"
  },
  {
    "text": "it uh sorry sorry question the back I'll come over there yes sure uh one of the biggest indicators of project is when",
    "start": "4060760",
    "end": "4067400"
  },
  {
    "text": "you come across something it's Source main job right um so is this the",
    "start": "4067400",
    "end": "4073440"
  },
  {
    "text": "recommended way when you start a new project should we convert existing projects from traditional source to this",
    "start": "4073440",
    "end": "4081480"
  },
  {
    "text": "or is you know just some random thing that one of the early engineers said oh I like",
    "start": "4081480",
    "end": "4087200"
  },
  {
    "text": "this okay so the question is um the specific example was the default",
    "start": "4087200",
    "end": "4092440"
  },
  {
    "text": "location of java Source in a Gradle build is Source main Java so if we're coming to Gradle from a different project should we Embrace that should we",
    "start": "4092440",
    "end": "4098960"
  },
  {
    "text": "keep doing what we were doing um why is it that way that that the question yeah okay so um why is it that way uh I",
    "start": "4098960",
    "end": "4105920"
  },
  {
    "text": "wasn't around when that decision was made but that's kind of what Maven did and it's a reasonable default so why not",
    "start": "4105920",
    "end": "4112600"
  },
  {
    "text": "use it um there's no kind of Greater alignment of the stars as to why it's Source main Java I don't think uh the",
    "start": "4112600",
    "end": "4119238"
  },
  {
    "text": "question is should you use it so should you change your project to use those defaults vers keep your custom setting",
    "start": "4119239",
    "end": "4124600"
  },
  {
    "text": "that's largely up to you uh what many people do in a transition is leave the build the way it",
    "start": "4124600",
    "end": "4130440"
  },
  {
    "text": "is put Gradle in around it get Gradle producing the same thing that the original build was doing doing and test",
    "start": "4130440",
    "end": "4136480"
  },
  {
    "text": "drive that so as you're building out the Gradle build you're writing tests to make sure that the jars are exactly the",
    "start": "4136480",
    "end": "4141600"
  },
  {
    "text": "same between Gradle and whatever your previous build system was so just get it in place and get it going and then the",
    "start": "4141600",
    "end": "4147560"
  },
  {
    "text": "difference between using a custom uh directory for your Source versus a different one is probably it's about",
    "start": "4147560",
    "end": "4153960"
  },
  {
    "text": "maximum two lines of grad configuration code to say that now if you're happy to wear those two lines it's no problem for",
    "start": "4153960",
    "end": "4160080"
  },
  {
    "text": "Gradle to do that but it's generally people will say well",
    "start": "4160080",
    "end": "4165838"
  },
  {
    "text": "it's much of a muchness I just want to get rid of those two lines go with the default location it's standard let's go with it let's not have the hours long",
    "start": "4165839",
    "end": "4172640"
  },
  {
    "text": "argument about what we should call the directory with that Java source code in it there are many argument the many things you should have those arguments",
    "start": "4172640",
    "end": "4178400"
  },
  {
    "text": "about but I would say the directory that you put your Java Source in probably not one of them over",
    "start": "4178400",
    "end": "4185319"
  },
  {
    "text": "here the question is are there any tools that we recommend to help write the build script so IDE code completion Etc",
    "start": "4190040",
    "end": "4197159"
  },
  {
    "text": "uh the current state-ofthe-art is intellig idea they push things forward with their content assist in authoring",
    "start": "4197159",
    "end": "4203400"
  },
  {
    "text": "our build files quite a lot especially in idea 13 um there's a a long way to go",
    "start": "4203400",
    "end": "4209040"
  },
  {
    "text": "though um grade old the great old DSL is very Dynamic uh as opposed to Java code",
    "start": "4209040",
    "end": "4214719"
  },
  {
    "text": "which is completely static it's great for tooling they can really understand a lot of it um the great C is quite",
    "start": "4214719",
    "end": "4220000"
  },
  {
    "text": "Dynamic so it's a big challenge for tools to autocomplete it but that's as Hans mentioned in his tooling point this",
    "start": "4220000",
    "end": "4225400"
  },
  {
    "text": "is something we're very keenly aware of so it's something and it's driven by Google Android folks as well uh this",
    "start": "4225400",
    "end": "4231159"
  },
  {
    "text": "something that will improve drastically over the coming releases of cradle so the current state-of-the-art is really um intellig idea Eclipse has some",
    "start": "4231159",
    "end": "4238360"
  },
  {
    "text": "support as well but ideas just kind of leap frogged a little bit um and developing your custom build logic as a",
    "start": "4238360",
    "end": "4244600"
  },
  {
    "text": "plug-in as a standalone Java project is the way to get the best results because in that way you're writing your code in",
    "start": "4244600",
    "end": "4250560"
  },
  {
    "text": "just Java or groovy files like it was a web application rather than in build scripts which are a little bit different",
    "start": "4250560",
    "end": "4256480"
  },
  {
    "text": "there's not as much hints not much hinting there for the IDE to deal with so if you want editing support develop it as a standalone um project yes at",
    "start": "4256480",
    "end": "4263920"
  },
  {
    "text": "front um in the same way you have this way to convert",
    "start": "4263920",
    "end": "4270120"
  },
  {
    "text": "a uh do you have any automatic uh tools for going from say gr 11 12 to",
    "start": "4271360",
    "end": "4279760"
  },
  {
    "text": "gr uh so the question was in the same way that we have the ability to convert Maven builds to gradal builds is there",
    "start": "4279760",
    "end": "4285840"
  },
  {
    "text": "similar kind of tooling for moving between gradal versions uh there are no conversion uh functions out there so you",
    "start": "4285840",
    "end": "4292840"
  },
  {
    "text": "can't so automatically changing your build script from 1.12 to 2.0 um what we",
    "start": "4292840",
    "end": "4299400"
  },
  {
    "text": "what we are building have been for some time and we'll continue to do is um building some tooling to help you check",
    "start": "4299400",
    "end": "4305080"
  },
  {
    "text": "between different versions so to assert that when I move from this version to that version everything is still the same so that you can just move forward",
    "start": "4305080",
    "end": "4310800"
  },
  {
    "text": "with confidence but really we we take backwards compatibility extremely seriously ly so if you're not moving",
    "start": "4310800",
    "end": "4316440"
  },
  {
    "text": "across major version boundaries and you're not getting deprecation warnings 99.9% of the time you'll be able to",
    "start": "4316440",
    "end": "4321480"
  },
  {
    "text": "upgrade just fine I'm moving across major version boundaries even then is if you don't have any deprecation warnings",
    "start": "4321480",
    "end": "4327719"
  },
  {
    "text": "you're still going to be fine right so we backwards compatibility is extremely important for us as Hans mentioned it's",
    "start": "4327719",
    "end": "4333120"
  },
  {
    "text": "a very conservative domain and we release every eight or so weeks right so you can't be rewriting your build scripts every eight weeks it has to keep",
    "start": "4333120",
    "end": "4339560"
  },
  {
    "text": "working so I'm very serious about that one last question we have to do sure let me the front here um do you have an",
    "start": "4339560",
    "end": "4345920"
  },
  {
    "text": "example of like how you go go playist for a project for example and is there",
    "start": "4345920",
    "end": "4352960"
  },
  {
    "text": "like a best approach to follow like right now I have a scenario where I have like um two different Source folders or",
    "start": "4352960",
    "end": "4360120"
  },
  {
    "text": "two different uh you know you know Bill flavors is there like a better option than that you know for example I might",
    "start": "4360120",
    "end": "4366679"
  },
  {
    "text": "have a scenario where I have to check and cod to the both you know both flavors at the same time make sure you",
    "start": "4366679",
    "end": "4372000"
  },
  {
    "text": "know so that's a is there okay so uh so Android specific question so the Android",
    "start": "4372000",
    "end": "4377760"
  },
  {
    "text": "build tooling allows you to specify your build in terms of flavors because again it's domain than building a jar I have",
    "start": "4377760",
    "end": "4384880"
  },
  {
    "text": "code that's in my free version code that's in my paid version code that's in my x86 version Etc um and the question",
    "start": "4384880",
    "end": "4390800"
  },
  {
    "text": "is is there a different way to lay those things out the fundamental answer is yes just in the same way that you can",
    "start": "4390800",
    "end": "4395920"
  },
  {
    "text": "specify um this the main set of source lives in Source main Java with the android model you can say that the free",
    "start": "4395920",
    "end": "4402960"
  },
  {
    "text": "source set its source code lives in Source free Java but also lives in Source common Java and this other flavor",
    "start": "4402960",
    "end": "4410239"
  },
  {
    "text": "lives there as well so you have all that same kind of configurability to do that um I would suggest asking about that on",
    "start": "4410239",
    "end": "4416760"
  },
  {
    "text": "the ADT Dev list from the um Android experts give some good help on that yeah",
    "start": "4416760",
    "end": "4422239"
  },
  {
    "text": "all right so with that thank you L thank you",
    "start": "4422239",
    "end": "4427560"
  }
]