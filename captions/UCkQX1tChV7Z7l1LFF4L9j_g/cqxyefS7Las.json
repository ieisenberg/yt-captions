[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "[Music]",
    "start": "1990",
    "end": "14789"
  },
  {
    "text": "all right welcome uh hope everyone had some lovely pizza and thank you again to uh to Grace and everyone else here so my",
    "start": "19600",
    "end": "26240"
  },
  {
    "text": "first talk tonight is the application deployment state of the onion so first first just a quick bit about me so like",
    "start": "26240",
    "end": "31880"
  },
  {
    "text": "gray said I well getting a little bit of feedback there um I do uh operations and",
    "start": "31880",
    "end": "37640"
  },
  {
    "text": "server management for the python software foundation and I help organize Pyon uh I currently work for balance payments uh I work a lot on Chef uh and",
    "start": "37640",
    "end": "45559"
  },
  {
    "text": "I really like making things so let's move right along to talk about uh application platforms so really when",
    "start": "45559",
    "end": "52120"
  },
  {
    "start": "48000",
    "end": "48000"
  },
  {
    "text": "we're talking about deploying applications what we're talking about is building application platforms so what goes into an application platform five",
    "start": "52120",
    "end": "58120"
  },
  {
    "text": "main components database web ser server the application code itself and then configuration and orchestration there's",
    "start": "58120",
    "end": "63800"
  },
  {
    "text": "some other parts I'll cover later but those five are really the the biggest moving pieces in any application",
    "start": "63800",
    "end": "69720"
  },
  {
    "text": "platform uh I will do my best to illustrate the differences between the various tools trade-offs and whatnot uh",
    "start": "69720",
    "end": "75159"
  },
  {
    "text": "but this is not an unated talk these are my views on what tools are good for deploying applications uh caveat",
    "start": "75159",
    "end": "82680"
  },
  {
    "text": "empor so to begin application code usually the first thing that you have to deal with when you're deploying an app",
    "start": "82680",
    "end": "88320"
  },
  {
    "text": "is getting the code onto the server so we needed a transportation mechanism something to get the code from point A",
    "start": "88320",
    "end": "93680"
  },
  {
    "text": "to point B so the earliest of these is tar uh tar has been around forever it is",
    "start": "93680",
    "end": "100240"
  },
  {
    "text": "the ancestor of every major deployment system you probably already have it on every machine that you've ever touched",
    "start": "100240",
    "end": "105759"
  },
  {
    "text": "uh it's very very simple to use you take code on your machine you make a tarball you transfer that somewhere you unpack",
    "start": "105759",
    "end": "111200"
  },
  {
    "text": "it and Bam the code is on the machine it's really all there is to it uh but it is pretty repetitive uh it's very easy",
    "start": "111200",
    "end": "117719"
  },
  {
    "text": "to make mistakes you should really write some scripts rapid this sort of tar workflow copying the files around make sure that everything's",
    "start": "117719",
    "end": "123360"
  },
  {
    "text": "in sync uh and if uh if synchronization sounds like a good thing there's rsync",
    "start": "123360",
    "end": "129319"
  },
  {
    "text": "rsync is also probably installed on every machine you've ever touched uh it copies the files from your machine to",
    "start": "129319",
    "end": "135599"
  },
  {
    "text": "the Target but whereas tar requires copying the files over and over rsync does it in a a much more efficient",
    "start": "135599",
    "end": "142080"
  },
  {
    "text": "fashion uh you can also set it to exclude certain files stuff like that so those are uh push based systems copying",
    "start": "142080",
    "end": "149040"
  },
  {
    "text": "it straight from your laptop to a Target server git is an example usually of a poll system so you push your code from",
    "start": "149040",
    "end": "155879"
  },
  {
    "text": "your laptop to a git server and then you pull from the git server onto the target",
    "start": "155879",
    "end": "161800"
  },
  {
    "text": "application machine uh it does also use an efficient binary protocol and if you're already using it for your source",
    "start": "161800",
    "end": "168360"
  },
  {
    "text": "code management itself it's very very easy to use for deployment it means that there's a single point of truth of what",
    "start": "168360",
    "end": "174239"
  },
  {
    "text": "is the current version of the software that lives in one place as opposed to using something like t r sync where can",
    "start": "174239",
    "end": "179879"
  },
  {
    "text": "live in multiple places and those can easily fall out of sync uh packages are",
    "start": "179879",
    "end": "185159"
  },
  {
    "start": "184000",
    "end": "184000"
  },
  {
    "text": "another pull-based option so again you have a a central server usually this case a package repository of some kind",
    "start": "185159",
    "end": "191000"
  },
  {
    "text": "either uh a yum repository or an AP repository and again you're you're pushing it from a build server into the",
    "start": "191000",
    "end": "197080"
  },
  {
    "text": "package repository and you then pulling that onto the target machines this is somewhat nicer than get in some cases",
    "start": "197080",
    "end": "203080"
  },
  {
    "text": "because the server can be a lot simpler running a git server or Mercurial server or something like that requires a fair",
    "start": "203080",
    "end": "208120"
  },
  {
    "text": "bit of complexity uh and not always something you want in your deployment pipeline uh if things go wrong they",
    "start": "208120",
    "end": "213959"
  },
  {
    "text": "usually go very very wrong I see JJ glaring at me about this um whereas package servers is usually just a simple",
    "start": "213959",
    "end": "220000"
  },
  {
    "text": "web server and nothing more so fewer moving pieces can be pretty nice there's a lot of very solid tooling around",
    "start": "220000",
    "end": "225360"
  },
  {
    "text": "working with packages like Apton yum whereas with a lot of other stuff like manual tarball deployment you're going",
    "start": "225360",
    "end": "230439"
  },
  {
    "text": "to have to write all those tools yourself and uh the repositories themselves there's efficient tools for",
    "start": "230439",
    "end": "235480"
  },
  {
    "text": "managing those uh and a quick shout out on the packaging side to a tool called om bus it's a very nice way of building",
    "start": "235480",
    "end": "242159"
  },
  {
    "start": "237000",
    "end": "237000"
  },
  {
    "text": "packages uh so if you want to build a package on a on a a CI build slave and",
    "start": "242159",
    "end": "247200"
  },
  {
    "text": "then ship it up to a package repository Omnibus lets you build uh Standalone packages that do not depend on anything",
    "start": "247200",
    "end": "253599"
  },
  {
    "text": "on the system so you don't have to worry about changing system dependencies and things like that uh my current recommendation for how to deploy",
    "start": "253599",
    "end": "259199"
  },
  {
    "text": "applications is Omnibus built packages and a nice big package repository so that covers getting the application code",
    "start": "259199",
    "end": "265680"
  },
  {
    "text": "onto the machine so then we need to deal with configuration management so what is configuration management I mean this",
    "start": "265680",
    "end": "270919"
  },
  {
    "text": "very literally managing the actual configuration of the software not the somewhat more buzzword friendly uh way",
    "start": "270919",
    "end": "276960"
  },
  {
    "text": "it's applied to somewhat more uh fanciful tools so we have to provide our",
    "start": "276960",
    "end": "282560"
  },
  {
    "text": "application with some kind of settings file in almost all cases so how are we going to do that simplest way flat files",
    "start": "282560",
    "end": "288320"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "check them into Source control they live as part of the source code this is really really simple they are properly versioned they're very readable it's",
    "start": "288320",
    "end": "294960"
  },
  {
    "text": "also super inflexible it means that if things change you need to deploy a new version of your software Ware and that's",
    "start": "294960",
    "end": "300080"
  },
  {
    "text": "not usually a great thing if say your database server goes down so I would highly recommend looking into one of",
    "start": "300080",
    "end": "306680"
  },
  {
    "text": "these other tools uh full disclosure like I said I do a lot of work with Chef so I will talk about that one uh",
    "start": "306680",
    "end": "312000"
  },
  {
    "text": "probably in a little bit more depth but uh all of them are good options so Chef Ruby based it is a declarative is system",
    "start": "312000",
    "end": "319680"
  },
  {
    "text": "it's it's not fully declarative but it's mostly declarative has a very big ecosystem of Tools around it uh and is a",
    "start": "319680",
    "end": "326240"
  },
  {
    "text": "great way to write out config files puppet uses a custom DSL instead of Ruby and it's fully declarative instead but",
    "start": "326240",
    "end": "332520"
  },
  {
    "start": "328000",
    "end": "328000"
  },
  {
    "text": "other than that generally similar to Chef um one problem uh you can have",
    "start": "332520",
    "end": "337800"
  },
  {
    "text": "though is that it doesn't scale quite as well as Chef does so if you have more than 50 or 100 servers puppet can get to",
    "start": "337800",
    "end": "343400"
  },
  {
    "text": "be a bit of a management headache salt stack newer than chef and puppet but still relatively well established it",
    "start": "343400",
    "end": "349800"
  },
  {
    "text": "uses yaml and ginger uh and its Community is an in and ecosystem is smaller than cheffer puppet but growing",
    "start": "349800",
    "end": "356600"
  },
  {
    "text": "uh quite nicely it is somewhat nice to be written in Python but I would ask you please do not pick your tools based on",
    "start": "356600",
    "end": "362639"
  },
  {
    "text": "what language they are written in h and finally anible uh another great",
    "start": "362639",
    "end": "367800"
  },
  {
    "text": "option for writing a config files again it uses yaml and Ginga it is very very new compared to all of the others uh it",
    "start": "367800",
    "end": "374120"
  },
  {
    "text": "has some interesting bits like an agentless model uh you don't have to actually install anything on the target machine but that's not used super",
    "start": "374120",
    "end": "381000"
  },
  {
    "text": "commonly at scale so while it's cute for you know under five servers or for small personal projects uh in in actual",
    "start": "381000",
    "end": "388199"
  },
  {
    "text": "production deploys it ends up looking very very similar to the other three uh it's also because it's so new it has the",
    "start": "388199",
    "end": "393800"
  },
  {
    "text": "smallest ecosystem of all of them but I think as of uh last month it is the third fastest growing project on GitHub",
    "start": "393800",
    "end": "400080"
  },
  {
    "text": "so to say it's growing very quickly would be an understatement so watch ansible uh but check out all four of",
    "start": "400080",
    "end": "406000"
  },
  {
    "text": "them so that's talking about writing config files there are a few other things that you should maybe think about",
    "start": "406000",
    "end": "411560"
  },
  {
    "text": "having your config management system deal with so stuff like creating user and and group accounts on the system for",
    "start": "411560",
    "end": "418160"
  },
  {
    "text": "the application to run as and installing service files those three things config files users and services are really the",
    "start": "418160",
    "end": "424879"
  },
  {
    "text": "most important to manage via some kind of config management Tool uh Beware of",
    "start": "424879",
    "end": "430479"
  },
  {
    "text": "overusing config management tools for example uh it is very nice to sometimes use your config management tool to",
    "start": "430479",
    "end": "436120"
  },
  {
    "text": "deploy application code but sometimes that can get turn into a a pretty serious headache uh don't worry too much",
    "start": "436120",
    "end": "442160"
  },
  {
    "text": "about having those be separate systems do whatever works for your workflow and your team's",
    "start": "442160",
    "end": "447319"
  },
  {
    "text": "workflow so onto orchestration chances are you'll have more than one server so you need to do things on different",
    "start": "447319",
    "end": "452560"
  },
  {
    "text": "machines and make sure they happen in the right order that's an orchestration tool they provide a way to run things",
    "start": "452560",
    "end": "457879"
  },
  {
    "text": "usually shell commands on multiple machines in the correct order gather the output make sure that all of the",
    "start": "457879",
    "end": "463840"
  },
  {
    "text": "commands are succeeding things like that so this is very useful for either executing the config management tool if",
    "start": "463840",
    "end": "470159"
  },
  {
    "text": "they don't ship their own orchestration system as well as managing code deployments if that's not already being handled by your config management system",
    "start": "470159",
    "end": "477199"
  },
  {
    "text": "simplest possible orchestration system ssh in a for Loop super simple most",
    "start": "477199",
    "end": "482240"
  },
  {
    "start": "478000",
    "end": "478000"
  },
  {
    "text": "people who have done application Employments have done this at least once um this is the current official solution",
    "start": "482240",
    "end": "487960"
  },
  {
    "text": "with Chef uh it's also exactly as bad as you would imagine it to be uh super",
    "start": "487960",
    "end": "493440"
  },
  {
    "text": "inflexible um you can only process one loop at a time and if anything fails you have to make sure you're doing all the",
    "start": "493440",
    "end": "499000"
  },
  {
    "text": "failure handling on your own you can't do things like well say if you know 75%",
    "start": "499000",
    "end": "504720"
  },
  {
    "text": "of them succeeded then you should continue stuff like that and that starts to matter because if you're deploying onto 500 machines all 500 are never",
    "start": "504720",
    "end": "511440"
  },
  {
    "text": "going to succeed it will never ever happen uh so having the flexibility to be able to account for that kind of a",
    "start": "511440",
    "end": "517719"
  },
  {
    "text": "failure rate at Large Scale does matter but when you're getting started S4 Loop not the worst option on the planet uh",
    "start": "517719",
    "end": "524519"
  },
  {
    "text": "the next one that people usually play with at least the people in this room will be fabric so it's written in Python",
    "start": "524519",
    "end": "530080"
  },
  {
    "text": "uh it lets you write tasks in a python based uh not quite a DSL it's a set of",
    "start": "530080",
    "end": "535480"
  },
  {
    "text": "of helpers and tools for python to write you know things that should run on remote systems you can say what order",
    "start": "535480",
    "end": "541680"
  },
  {
    "text": "they run in you should say where they should run things like that you get to to write these tasks in Python code uh",
    "start": "541680",
    "end": "547160"
  },
  {
    "text": "can also as an advantage over s and for Loop it can run tasks in parallel across multiple machines which is quite nice if",
    "start": "547160",
    "end": "553160"
  },
  {
    "text": "you have a a long or complicated deploy process and you want to be running it on all of your machines at the same time uh",
    "start": "553160",
    "end": "558760"
  },
  {
    "text": "and it allows you to do multi-tier deployments once you start playing with things like the execute helpers so anible also ships their own",
    "start": "558760",
    "end": "565880"
  },
  {
    "start": "565000",
    "end": "565000"
  },
  {
    "text": "orchestration tool um it does allow running ad hoc Shel commands uh and it's",
    "start": "565880",
    "end": "570920"
  },
  {
    "text": "it's hooked into their node catalog system but you don't necessarily need to use it with anible you can just use it",
    "start": "570920",
    "end": "576000"
  },
  {
    "text": "to run arbitrary commands on machine so I actually know people that are using anible to run Chef happens not super",
    "start": "576000",
    "end": "583000"
  },
  {
    "text": "common but it can be done um it also offers a thing called accelerated mode which allows you to run uh multiple",
    "start": "583000",
    "end": "589279"
  },
  {
    "text": "tasks multiplexed through a single SSH connection which can be a lot faster than Fabric in certain",
    "start": "589279",
    "end": "594399"
  },
  {
    "text": "cases similarly salt also ships their own orchestration system so unlike the previous two which were based around SSH",
    "start": "594399",
    "end": "600959"
  },
  {
    "start": "595000",
    "end": "595000"
  },
  {
    "text": "uh salt stack actually uses a custom zeromq based framework so it does require you to use the salt uh minion",
    "start": "600959",
    "end": "608040"
  },
  {
    "text": "Master System but if you are already using that or you just don't mind installing that anyway it does offer a",
    "start": "608040",
    "end": "614560"
  },
  {
    "text": "much lower overhead system as compared to SSH just the raw computational overhead of running 100 or a thousand",
    "start": "614560",
    "end": "620920"
  },
  {
    "text": "parallel sh connections can get to be pretty significant but again only really matters if you have 100 or a thousand",
    "start": "620920",
    "end": "626240"
  },
  {
    "text": "machines which I certainly don't and most of you probably don't either uh so don't worry too much about that one",
    "start": "626240",
    "end": "632839"
  },
  {
    "text": "thing to know about the salt stack system it doesn't really allow ad hoc command execution kind of but it's",
    "start": "632839",
    "end": "638920"
  },
  {
    "text": "really built to be running uh pieces of salt configuration and then M Collective is",
    "start": "638920",
    "end": "645600"
  },
  {
    "start": "644000",
    "end": "644000"
  },
  {
    "text": "the last of the bundled ones so this is part of puppet um like the salt stack one it uses u a message cue internally",
    "start": "645600",
    "end": "653399"
  },
  {
    "text": "in this case it uses amqp so either rabbit mq or active mq generally it does again offer some ad hoc command support",
    "start": "653399",
    "end": "660720"
  },
  {
    "text": "but it's pretty limited it's really designed for just running puppet uh but nicely this one does offer Live",
    "start": "660720",
    "end": "666760"
  },
  {
    "text": "Discovery so it has a built-in node Discovery system as part of the orchestration layer you don't need to provide it with a list of your servers",
    "start": "666760",
    "end": "672920"
  },
  {
    "text": "it will figure out who is listening and use that as a list of servers and finally on the the",
    "start": "672920",
    "end": "678959"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "orchestration tools is rund deck so whereas the rest of these have pretty much all been you run a command line",
    "start": "678959",
    "end": "684800"
  },
  {
    "text": "tool on your laptop and then stuff happens somewhere on the servers run is a centralized API service so it's very",
    "start": "684800",
    "end": "691839"
  },
  {
    "text": "similar to Jenkins uh in that you create jobs in it and then you can execute jobs it captures the output but unlike",
    "start": "691839",
    "end": "698000"
  },
  {
    "text": "Jenkins this is really built for remote orchestration so it understands the concept of running jobs on multiple",
    "start": "698000",
    "end": "703519"
  },
  {
    "text": "machines running jobs in parallel things like that uh the advantage of rund deck over something like Fabric or all the",
    "start": "703519",
    "end": "709959"
  },
  {
    "text": "other ones I mentioned is that it puts everything into a single centralized location it means that you can see who's run what jobs is there currently deploy",
    "start": "709959",
    "end": "717000"
  },
  {
    "text": "pending and who started that what things have been failing what their output was so it means if somebody kicks off a",
    "start": "717000",
    "end": "722120"
  },
  {
    "text": "deploy and it fails halfway through and they already left for the day you can actually see what's going on uh that is",
    "start": "722120",
    "end": "727920"
  },
  {
    "text": "really really useful and just in general let you sort of encode all of the workflow into Co into actual uh usable",
    "start": "727920",
    "end": "735399"
  },
  {
    "text": "code instead of having a read me with if you want to do X run fabric task Y which",
    "start": "735399",
    "end": "740600"
  },
  {
    "text": "isn't bad but it is nice to have have that all in a single place with a pretty",
    "start": "740600",
    "end": "745720"
  },
  {
    "text": "interface and then it's not really a specific tool but a brief of of the idea of chatops uh hubot is a tool and is",
    "start": "745720",
    "end": "752320"
  },
  {
    "start": "746000",
    "end": "746000"
  },
  {
    "text": "probably the most popular of the the current generation of chat Ops tools this is the general idea of uh take all",
    "start": "752320",
    "end": "758440"
  },
  {
    "text": "the stuff I just mentioned about centralized workflow uh and having sort of encoded workflows into uh services",
    "start": "758440",
    "end": "765440"
  },
  {
    "text": "and put that into your corporate chat room uh most people use things like hipchat or sometimes now slack possibly",
    "start": "765440",
    "end": "771120"
  },
  {
    "text": "IRC but most companies will have this sort of General uh chat room for just",
    "start": "771120",
    "end": "776440"
  },
  {
    "text": "employee conversations and having all of your operations management stuff in there is really really nice it makes it",
    "start": "776440",
    "end": "782440"
  },
  {
    "text": "a lot easier for non-technical people to interact with the tools and it means that the team gets automatic visibility",
    "start": "782440",
    "end": "788720"
  },
  {
    "text": "so if somebody kicks off a deploy by saying it in a public chat room everyone can see that that happened everyone can",
    "start": "788720",
    "end": "794920"
  },
  {
    "text": "see that it was initiated everyone can see the result that is very very important when you have a lot of deploy flying around so chat Ops is definitely",
    "start": "794920",
    "end": "802000"
  },
  {
    "text": "not what I would say is common uh I think it should be though and I think everyone should pay attention to this at",
    "start": "802000",
    "end": "807160"
  },
  {
    "text": "least and consider if it would be right for your organization so that's registration tools now let's talk about",
    "start": "807160",
    "end": "812720"
  },
  {
    "text": "databases so while your application servers can hopefully be stateless and not really have too much information",
    "start": "812720",
    "end": "817880"
  },
  {
    "text": "stored on those servers themselves uh the database is not so lucky that's what contains all the state stored",
    "start": "817880",
    "end": "823480"
  },
  {
    "text": "information for all of your applications sometimes it will be things like user accounts sometimes it'll be page data or",
    "start": "823480",
    "end": "829519"
  },
  {
    "text": "just any other business specific information uh in most cases your application will need to be able to reach a database server to work",
    "start": "829519",
    "end": "835320"
  },
  {
    "text": "correctly uh albeit some form of degradation is is something sometimes possible so the the availability and",
    "start": "835320",
    "end": "841600"
  },
  {
    "text": "performance of your database uh is one of the largest source of yak shaves in the operations",
    "start": "841600",
    "end": "846680"
  },
  {
    "text": "world so to kick it off the probably the most popular database in the python world is postgress uh most of you have",
    "start": "846680",
    "end": "852880"
  },
  {
    "text": "probably played with it at least once it's relational it uses SQL offers all kinds of nice acety benefits and it has",
    "start": "852880",
    "end": "858800"
  },
  {
    "text": "add-ons Galore everything from Json types to GIS database storage uh",
    "start": "858800",
    "end": "864079"
  },
  {
    "text": "anything you can really think of in the database World somebody has probably tried it with postgress so",
    "start": "864079",
    "end": "869279"
  },
  {
    "start": "869000",
    "end": "869000"
  },
  {
    "text": "one of the big problems with uh postest though is because it is uh a relational database that means that it is single",
    "start": "869279",
    "end": "876079"
  },
  {
    "text": "Master for the most part there are some multimaster replication systems available for it but they're pretty rare",
    "start": "876079",
    "end": "881240"
  },
  {
    "text": "and they're still pretty error prone so for the most part you'll be bounded on availability by the availability of this",
    "start": "881240",
    "end": "886800"
  },
  {
    "text": "one master database for writing anyway and we can't really talk about postgress so that at least mentioning my",
    "start": "886800",
    "end": "892279"
  },
  {
    "start": "890000",
    "end": "890000"
  },
  {
    "text": "SQL uh a very polarizing topic uh basically everything that I said about postgress applies with the exception",
    "start": "892279",
    "end": "898959"
  },
  {
    "text": "that their idea of acid is a little bit less acidy so somewhat somewhat less",
    "start": "898959",
    "end": "904199"
  },
  {
    "text": "transactional than postgress notably ddl changes so things like alter table uh means if you ever get a crash during a",
    "start": "904199",
    "end": "910600"
  },
  {
    "text": "schema migration good luck uh you're restoring from backup now",
    "start": "910600",
    "end": "916199"
  },
  {
    "text": "so the biggest problem with with my SQL right now is that since Oracle took over from Sun there has been a lot of",
    "start": "916199",
    "end": "922320"
  },
  {
    "text": "community fragmentation Oracle is continuing to manage the official MySQL project but there have been several Forks that have split off DB uh is the",
    "start": "922320",
    "end": "930279"
  },
  {
    "text": "biggest of the community run Forks although drizzle is starting to get prominence Mara is actually now shipping",
    "start": "930279",
    "end": "935639"
  },
  {
    "text": "in Fedora Linux as the the primary uh MySQL version uh there's also prona",
    "start": "935639",
    "end": "943120"
  },
  {
    "text": "which is offering a commercial Fork so they offer commercial support and some additional features over the standard",
    "start": "943120",
    "end": "948920"
  },
  {
    "text": "MySQL between all of those I can't really uh give you much advice other than look at all of them they all have",
    "start": "948920",
    "end": "956079"
  },
  {
    "text": "very uh similar features but they tend to play catch up with each other so if one adds a feature the other Forks",
    "start": "956079",
    "end": "961680"
  },
  {
    "text": "generally will within a year but any given time it can be a bit of a mess so that's two main relational",
    "start": "961680",
    "end": "968440"
  },
  {
    "text": "databases uh sqlite notwithstanding but there has been a",
    "start": "968440",
    "end": "973680"
  },
  {
    "text": "growing Trend to uh to lump a lot of other databases together under the incredibly unhelpful name of no",
    "start": "973680",
    "end": "980519"
  },
  {
    "start": "980000",
    "end": "980000"
  },
  {
    "text": "SQL so the first of those that people will usually encounter is reddis it's a key Value Store it runs completely out",
    "start": "980519",
    "end": "986000"
  },
  {
    "text": "of memory it has effectively no uh solution for high availability uh and",
    "start": "986000",
    "end": "991160"
  },
  {
    "text": "it's really nice for what it is if what you need is a a slightly nicer mcache",
    "start": "991160",
    "end": "997040"
  },
  {
    "text": "just storing a little bit of transient data in memory if it disappears you're okay with that your application can cope",
    "start": "997040",
    "end": "1002279"
  },
  {
    "text": "with it all Vanishing at any time then reddis is really cool uh it offers a lot of really nice highlevel constructs for",
    "start": "1002279",
    "end": "1008360"
  },
  {
    "text": "manipulating data but never ever use it as a database",
    "start": "1008360",
    "end": "1013959"
  },
  {
    "text": "ever uh Cassandra is another popular nosql store uh it has absolutely nothing to do do with redus in any way shape or",
    "start": "1013959",
    "end": "1019680"
  },
  {
    "start": "1014000",
    "end": "1014000"
  },
  {
    "text": "form um it is a highly distributed database so high availability is uh part of it from day one it uses a a layout",
    "start": "1019680",
    "end": "1026640"
  },
  {
    "text": "called big table which is kind of similar to the way SQL Works in that you have the same idea of tables with with",
    "start": "1026640",
    "end": "1032798"
  },
  {
    "text": "rows and columns but instead of them all living on one server those tables are broken up and spread across many",
    "start": "1032799",
    "end": "1038240"
  },
  {
    "text": "different servers uh it uses something called cql for running the queries which does look very much like SQL so if you",
    "start": "1038240",
    "end": "1044839"
  },
  {
    "text": "just want something that's uh sort of very warm and fuzzy and close to sequel sassandra is probably the right place to",
    "start": "1044839",
    "end": "1050520"
  },
  {
    "text": "start if you want High availability but you don't want to quite dive completely into the map reduce world yet and on",
    "start": "1050520",
    "end": "1056880"
  },
  {
    "text": "that note react so again fully distributed database came from the same origination as Cassandra which was the",
    "start": "1056880",
    "end": "1062559"
  },
  {
    "text": "the old Amazon Dynamo paper nothing to do with the Amazon Dynamo product anymore but unlike uh Cassandra react",
    "start": "1062559",
    "end": "1070480"
  },
  {
    "text": "has gone much more towards trying to actually let you model data in a way that is truly highly available so this",
    "start": "1070480",
    "end": "1077360"
  },
  {
    "text": "means things like map produce it means things like secondary indexes it's really just a large key Value Store uh",
    "start": "1077360",
    "end": "1084039"
  },
  {
    "text": "so you have to actually write your queries much more manually so why would anyone ever do this the advantage of",
    "start": "1084039",
    "end": "1089240"
  },
  {
    "text": "react over Cassandra is that it exposes something called crdts that stands for commutative replicated data type mostly",
    "start": "1089240",
    "end": "1095760"
  },
  {
    "text": "some people disagree on exactly what it stands for but usually commuted replicated data type it's kind of like",
    "start": "1095760",
    "end": "1100880"
  },
  {
    "text": "git for your database it lets you branch and merge your data later this is really important if you get random failures all",
    "start": "1100880",
    "end": "1106679"
  },
  {
    "text": "over your network which if you run in the CL you do all the time uh and it lets you then after a failure you can",
    "start": "1106679",
    "end": "1112679"
  },
  {
    "text": "merge the data back together so using crdds is not easy you will have to read",
    "start": "1112679",
    "end": "1118360"
  },
  {
    "text": "a lot of academic papers but if you really really want 100% availability",
    "start": "1118360",
    "end": "1123480"
  },
  {
    "text": "it's really the only game in town h and a couple of other databases that I can mention briefly uh mongodb",
    "start": "1123480",
    "end": "1129880"
  },
  {
    "text": "the various couches uh mongodb is prized for its Simplicity and ease of use but",
    "start": "1129880",
    "end": "1135679"
  },
  {
    "text": "continually plagued by data loss and performance issues couch not quite as simple as uh and I've had a lot of",
    "start": "1135679",
    "end": "1141679"
  },
  {
    "text": "issues with this replication system but it's still pretty simple to use as a document database uh none of them really",
    "start": "1141679",
    "end": "1147120"
  },
  {
    "text": "offer anything over Cassandra or reak in my opinion and between these three options I would choose the third take",
    "start": "1147120",
    "end": "1152320"
  },
  {
    "text": "that as you will a quick shout out to zookeeper uh so zookeeper really isn't like the other",
    "start": "1152320",
    "end": "1158440"
  },
  {
    "start": "1154000",
    "end": "1154000"
  },
  {
    "text": "databases I mentioned uh it's it's a very very slow database is designed for small amounts of data uh specifically",
    "start": "1158440",
    "end": "1165240"
  },
  {
    "text": "configuration information the main thing it has going for it is consistency so whereas the others were designed for",
    "start": "1165240",
    "end": "1170880"
  },
  {
    "text": "high availability you can have your data spread across many servers in many different places so the data doesn't have to fit in one place zookeeper is",
    "start": "1170880",
    "end": "1177120"
  },
  {
    "text": "designed for very small data that you want to be consistent across your entire network this is really useful for things",
    "start": "1177120",
    "end": "1183320"
  },
  {
    "text": "like who is the current postgress Master uh that's why it's called a configuration database usually uh but",
    "start": "1183320",
    "end": "1189360"
  },
  {
    "text": "really it's just a another database with another type of replication model in this case a highly consistent one using",
    "start": "1189360",
    "end": "1195600"
  },
  {
    "text": "the paos family of algorithms uh I would definitely recommend checking it out there's also uh ETD which is overall",
    "start": "1195600",
    "end": "1202559"
  },
  {
    "text": "relatively similar and now console from Hashi Corp but both of those are very early on in",
    "start": "1202559",
    "end": "1208480"
  },
  {
    "text": "development uh and then on to web servers so web servers will perform many",
    "start": "1208480",
    "end": "1213559"
  },
  {
    "text": "functions in your application platform the simplest and most important is it opens a socket it listens for HTP requests and it sends those to your",
    "start": "1213559",
    "end": "1219600"
  },
  {
    "text": "application and then it sends back your application response uh that is the heart of any web app it also will often",
    "start": "1219600",
    "end": "1226640"
  },
  {
    "text": "be responsible for sending out uh static content and possibly other pieces of",
    "start": "1226640",
    "end": "1231880"
  },
  {
    "text": "middleware so Apache is probably the second oldest piece of software I've mentioned today only after tar and it's",
    "start": "1231880",
    "end": "1237960"
  },
  {
    "start": "1233000",
    "end": "1233000"
  },
  {
    "text": "still going strong a lot of people discount Apache as bloated outdated uh a relic of a former era but I think that's",
    "start": "1237960",
    "end": "1244480"
  },
  {
    "text": "generally unfair you do need to take a lot of care when you're configuring its performance settings and most of the default configs coming from",
    "start": "1244480",
    "end": "1250679"
  },
  {
    "text": "distributions like red hat nuunu are woefully out of date but it does allow you to use uh mod wisy which is an",
    "start": "1250679",
    "end": "1256919"
  },
  {
    "text": "excellent application container and it will let you then run your application and your static file hosting from a single system which is really really",
    "start": "1256919",
    "end": "1263400"
  },
  {
    "text": "nice so enginex is usually the next stop after Apache uh also an excellent choice",
    "start": "1263400",
    "end": "1269000"
  },
  {
    "start": "1264000",
    "end": "1264000"
  },
  {
    "text": "it uses a slightly different internal concurrency model uh and people will go back and forth on performance metrics",
    "start": "1269000",
    "end": "1274360"
  },
  {
    "text": "between engine X and Apache until they're blue in the face unless you are running Alexa top 100 website it really",
    "start": "1274360",
    "end": "1281720"
  },
  {
    "text": "really doesn't matter uh the performance of your web server itself is not going to be the blocking piece of performance",
    "start": "1281720",
    "end": "1287760"
  },
  {
    "text": "in your application so really just pick the one that you like and stick with it they're all good um it does offer",
    "start": "1287760",
    "end": "1293720"
  },
  {
    "text": "somewhat simpler configuration than Apache does and it's very very nice to use for reverse",
    "start": "1293720",
    "end": "1299320"
  },
  {
    "start": "1299000",
    "end": "1299000"
  },
  {
    "text": "proxies so what are you going to reverse proxy 2 so while mod wisy allows you to run your application within uh Apache",
    "start": "1299320",
    "end": "1306679"
  },
  {
    "text": "itself enginex doesn't really offer that so you have to do static file hosting from enginex and then serve your application from a dedicated app server",
    "start": "1306679",
    "end": "1313000"
  },
  {
    "text": "and proxy to it so the first of those is usually junicorn it's written in pure python it's really really simple to to",
    "start": "1313000",
    "end": "1318159"
  },
  {
    "text": "set up usually one command and it's pretty fast uh it does have to be run",
    "start": "1318159",
    "end": "1323279"
  },
  {
    "text": "behind a proxy so you can't just directly expose unicorn to the internet or you risk uh dos attacks but it's very",
    "start": "1323279",
    "end": "1329880"
  },
  {
    "text": "very simple and easy to get going uisg uh offers a lot more application support integrates a lot of service Frameworks",
    "start": "1329880",
    "end": "1335840"
  },
  {
    "start": "1332000",
    "end": "1332000"
  },
  {
    "text": "and things like that uh it offers a nice binary protocol for the reverse proxying with enginex but it's much more complex",
    "start": "1335840",
    "end": "1342080"
  },
  {
    "text": "to set up it is written in C instead of in Python so you do have to compile it and it's uh unfortunately a victim of",
    "start": "1342080",
    "end": "1348000"
  },
  {
    "text": "configuration soup it has at least 100 different config options most of which are pretty poorly documented it is",
    "start": "1348000",
    "end": "1353679"
  },
  {
    "text": "faster than unicorn but exactly as I said between Apache and enginex the performance between those two really",
    "start": "1353679",
    "end": "1358960"
  },
  {
    "text": "isn't going to be the bottleneck in your application I promise Twisted is not specifically a",
    "start": "1358960",
    "end": "1364880"
  },
  {
    "start": "1362000",
    "end": "1362000"
  },
  {
    "text": "web server but it does ship a very nice whiskey server inside it uh it is extremely fast and the really nice thing",
    "start": "1364880",
    "end": "1371159"
  },
  {
    "text": "about using Twisted is it means you can mix your standard whiskey web app along with non- whsy uh asynchronous code this",
    "start": "1371159",
    "end": "1377760"
  },
  {
    "text": "is is really important if you want to do something like use websockets or anything else that doesn't sort of follow the standard CGI model of web",
    "start": "1377760",
    "end": "1385120"
  },
  {
    "text": "apps that we've been using since I don't even know before I was born probably so uh this also all applies to",
    "start": "1385120",
    "end": "1391159"
  },
  {
    "text": "tornado although between those two I've generally seen Twisted used more but neither of them are really used all that much so unfortunately you will not find",
    "start": "1391159",
    "end": "1398200"
  },
  {
    "text": "the documentation quite as easy as setting up engine X and unicorn and you won't find nearly as many guides as for the other tools but still worth checking",
    "start": "1398200",
    "end": "1404919"
  },
  {
    "text": "out if you're interested in things like websockets or servers and events uh and finally cdns not quite in the",
    "start": "1404919",
    "end": "1410640"
  },
  {
    "text": "same realm as the other web servers I've mentioned but they're definitely something to be aware of the idea of a CDN is that you take your content and",
    "start": "1410640",
    "end": "1417480"
  },
  {
    "text": "they instead of serving it directly from your server they cach it in a bunch of intermediary servers spread all over the",
    "start": "1417480",
    "end": "1422679"
  },
  {
    "text": "world connected to really really fast internet pipes this means that most of your content for most users will be",
    "start": "1422679",
    "end": "1427720"
  },
  {
    "text": "coming directly from those cast servers and it'll generally go uh much faster for all of them fastly is an excellent",
    "start": "1427720",
    "end": "1433720"
  },
  {
    "text": "choice for this and full disclosure they are a very generous psf sponsor uh but if you already use Amazon cloudfront is",
    "start": "1433720",
    "end": "1440320"
  },
  {
    "text": "very easy to integrate with other Amazon services and if you want to do some level of caching but you don't",
    "start": "1440320",
    "end": "1445440"
  },
  {
    "text": "necessarily want to Shell out uh the the big bucks for a full CDN you can look at varnish which is actually what powers",
    "start": "1445440",
    "end": "1451120"
  },
  {
    "text": "fastly internally onward again to server provisioning so now we have a pretty",
    "start": "1451120",
    "end": "1456360"
  },
  {
    "text": "good idea of the things that we need to run uh we need somewhere to run them in the simplest case this will be physical",
    "start": "1456360",
    "end": "1462159"
  },
  {
    "text": "Hardware you will uh fill out a purchase order for Dell or HP and you will send them a very large check and then you",
    "start": "1462159",
    "end": "1467240"
  },
  {
    "text": "will wait six tweaks and then some machines will show up and you will put your server you'll put your application on on those servers but most people",
    "start": "1467240",
    "end": "1474279"
  },
  {
    "text": "aren't going to do that uh both because physical servers are increasingly a rarity uh and just because it's very slow and expensive most people will be",
    "start": "1474279",
    "end": "1480679"
  },
  {
    "text": "deploying on some mix of public and private Cloud systems so we generally want to have some kind of provisioning",
    "start": "1480679",
    "end": "1486000"
  },
  {
    "text": "tool to control how we create virtual machines and the other virtual Hardware used for modern infrastructures simplest",
    "start": "1486000",
    "end": "1492720"
  },
  {
    "text": "one of those again purely manual uh you go on the web UI or use a simple command line client and you say boot me a server",
    "start": "1492720",
    "end": "1498679"
  },
  {
    "text": "and then you wait 5 minutes and a server appears and it is lovely but this means that human intervention is needed so it",
    "start": "1498679",
    "end": "1504480"
  },
  {
    "text": "means if a server fails on a weekend or if you get the Reddit hug of death at 4: a.m. you're going to be",
    "start": "1504480",
    "end": "1511000"
  },
  {
    "text": "unhappy uh if you use Amazon already uh a slight step up for manual provisioning is to use what's called autoscaling",
    "start": "1511000",
    "end": "1516559"
  },
  {
    "text": "groups they are uh relatively koola you do have to buy into the Amazon ecosystem",
    "start": "1516559",
    "end": "1521840"
  },
  {
    "text": "to a large degree uh but they offer pretty simple scaling so if you already have one machine you can turn turn it",
    "start": "1521840",
    "end": "1528039"
  },
  {
    "text": "into end machines and they will scale up linearly and then scale back down as your load decreases you do have to drink a lot of",
    "start": "1528039",
    "end": "1534960"
  },
  {
    "text": "the Kool-Aid it really is tightly integrated into their ecosystem but it is a lot of benefit for very little",
    "start": "1534960",
    "end": "1541080"
  },
  {
    "text": "effort but if that wasn't enough Kool-Aid don't worry uh there's also cloud formation uh whereas Autos",
    "start": "1541080",
    "end": "1547200"
  },
  {
    "start": "1542000",
    "end": "1542000"
  },
  {
    "text": "Skilling groups really only deal with uh provisioning the the ec2 instances the actual virtual machines cloud formation",
    "start": "1547200",
    "end": "1553320"
  },
  {
    "text": "allows you to describe and create script the creation of your entire amaz Amon infrastructure uh everything in Amazon",
    "start": "1553320",
    "end": "1559919"
  },
  {
    "text": "can be controlled through cloud formation more or less but really really really cool lady um and it can be a bit",
    "start": "1559919",
    "end": "1567679"
  },
  {
    "text": "fragile uh if you change the state of something that cloud information thinks it's owning Cloud information doesn't",
    "start": "1567679",
    "end": "1573279"
  },
  {
    "text": "hide any of the API complexity to for you from you so if you change things and",
    "start": "1573279",
    "end": "1578960"
  },
  {
    "text": "cloud formation doesn't know that cloud formation will generally just break and there's nothing you can do about it so",
    "start": "1578960",
    "end": "1584919"
  },
  {
    "text": "incredibly powerful but definitely fragile not a whole lot I can say about heat uh heat is a almost line forline",
    "start": "1584919",
    "end": "1591679"
  },
  {
    "start": "1588000",
    "end": "1588000"
  },
  {
    "text": "Port of cloud formation for open stack so uh everything I've said it just applies to open stack instead of Amazon",
    "start": "1591679",
    "end": "1598399"
  },
  {
    "text": "it does offer some limited compatibility with the Amazon resources but you should usually use the open source the open",
    "start": "1598399",
    "end": "1604279"
  },
  {
    "text": "stack specific ones briefly mentioned right scale uh it is another option um",
    "start": "1604279",
    "end": "1610640"
  },
  {
    "start": "1606000",
    "end": "1606000"
  },
  {
    "text": "it offers a lot of very nice benefits if you have a multi cloud provider deployment so if you're deploying onto",
    "start": "1610640",
    "end": "1615799"
  },
  {
    "text": "multiple public clouds or public in private Cloud right scale can be very interesting it also offers tight",
    "start": "1615799",
    "end": "1620880"
  },
  {
    "text": "integration with Chef although their chef implementation has at times lagged behind the main version of Chef by years",
    "start": "1620880",
    "end": "1627520"
  },
  {
    "text": "uh it's also very expensive and because of that I've never used it so I can't really speak to it much personally and",
    "start": "1627520",
    "end": "1633120"
  },
  {
    "start": "1633000",
    "end": "1633000"
  },
  {
    "text": "finally Asgard a tool from Netflix so this is really built around automating the creation and management of Auto",
    "start": "1633120",
    "end": "1639000"
  },
  {
    "text": "scaling groups so it allows you to manage Auto Skilling groups as part of your application deployment cycle every",
    "start": "1639000",
    "end": "1644279"
  },
  {
    "text": "time you want to deploy a new version uh rather than changing existing Auto skill group you create a new one and slowly",
    "start": "1644279",
    "end": "1649320"
  },
  {
    "text": "move traffic over to it if you want to if you detect any uh any issues with the deployer you want to switch back you",
    "start": "1649320",
    "end": "1655000"
  },
  {
    "text": "just switch the traffic back to the original Auto scaling groups unfortunately it hasn't really been used outside of Netflix very much so it's",
    "start": "1655000",
    "end": "1660519"
  },
  {
    "text": "still Rough Around the Edges in a lot of places and then on to Secrets management so Secrets management is the idea that",
    "start": "1660519",
    "end": "1667679"
  },
  {
    "text": "in most most of the configuration data in your system can be public things like the from address on your emails or the",
    "start": "1667679",
    "end": "1673440"
  },
  {
    "text": "port on your load balancer that you're using no one really cares who knows that information in some cases like the from",
    "start": "1673440",
    "end": "1678679"
  },
  {
    "text": "address everyone is going to know it it is by definition public but some stuff needs to be secret for example database",
    "start": "1678679",
    "end": "1684399"
  },
  {
    "text": "passwords the most common case for this but there are other things things like your page Duty API keys or other uh",
    "start": "1684399",
    "end": "1690200"
  },
  {
    "text": "integration Keys uh you need to keep them secret sometimes from the public and sometimes even within the",
    "start": "1690200",
    "end": "1695480"
  },
  {
    "text": "organization so we don't necessarily want to store these the same way we do other data so the biggest problem with",
    "start": "1695480",
    "end": "1701679"
  },
  {
    "text": "storing them the same way we do configuration uh is that it's it's going to be insecure the existing config man",
    "start": "1701679",
    "end": "1707679"
  },
  {
    "start": "1702000",
    "end": "1702000"
  },
  {
    "text": "tools don't really provide the kind of audit logging um kind of access controls that you would really need to lock down",
    "start": "1707679",
    "end": "1713159"
  },
  {
    "text": "secret information so the next step for a lot of people is encryption uh encryption is",
    "start": "1713159",
    "end": "1718720"
  },
  {
    "start": "1715000",
    "end": "1715000"
  },
  {
    "text": "wonderful and and secure and all that uh no so just because it says encryption on it doesn't mean you're actually getting",
    "start": "1718720",
    "end": "1724399"
  },
  {
    "text": "security so this is things like Chef encrypted data bags or the anable Vault system they do render the data as an",
    "start": "1724399",
    "end": "1730880"
  },
  {
    "text": "opaque blob but all they're really doing is moving the problem around now you don't have to manage the original Secrets but you have to figure out how",
    "start": "1730880",
    "end": "1736559"
  },
  {
    "text": "to get the decryption key on all the machines and good luck with that so I consider these to be unwise just",
    "start": "1736559",
    "end": "1742279"
  },
  {
    "text": "structurally also some of them have in the past had dangerously shoty implementations although fortunately I think all of them are now fixed if",
    "start": "1742279",
    "end": "1749320"
  },
  {
    "start": "1749000",
    "end": "1749000"
  },
  {
    "text": "you're running on Amazon and you don't mind even more vendor lockin uh using the AWS IM system combined with server",
    "start": "1749320",
    "end": "1756120"
  },
  {
    "text": "roles and a private S3 bucket uh gives you a very very nice and secure system unfortunately it has a lot of moving",
    "start": "1756120",
    "end": "1762240"
  },
  {
    "text": "pieces and a lot of complexity so the idea is you put your secrets as files in a private S3 bucket",
    "start": "1762240",
    "end": "1767840"
  },
  {
    "text": "and you use am roles to authorize specific servers to access those unfortunately because of the number of",
    "start": "1767840",
    "end": "1773480"
  },
  {
    "text": "moving pieces you'll probably need some kind of scripting to help you manage This Cloud information is good at that or you can write something yourself",
    "start": "1773480",
    "end": "1779320"
  },
  {
    "text": "using something like boto but uh it does have a lot of moving pieces and it can",
    "start": "1779320",
    "end": "1785200"
  },
  {
    "text": "be a little unwieldy to manage but the advantage is that it's somewhat proably secure to whatever degree you trust that",
    "start": "1785200",
    "end": "1791360"
  },
  {
    "text": "I am uh will be safe and I have a a lovely PCI certification which says if it's not they can't sue me",
    "start": "1791360",
    "end": "1799320"
  },
  {
    "start": "1798000",
    "end": "1798000"
  },
  {
    "text": "so barbin is a project from the openstack world but it's not really limited to use with open stack uh it is a dedicated uh secret storage and",
    "start": "1799320",
    "end": "1806159"
  },
  {
    "text": "management system complete with acl's auditing all the lovely powerful features you really want in a Secrets management platform unfortunately it's",
    "start": "1806159",
    "end": "1812760"
  },
  {
    "text": "not actually finished uh so I don't think you can even use it yet but I think it's very promising as a potential",
    "start": "1812760",
    "end": "1819080"
  },
  {
    "text": "way out of this Secrets Quagmire and then Red October uh Red October is a bit of a different take so",
    "start": "1819080",
    "end": "1825360"
  },
  {
    "start": "1822000",
    "end": "1822000"
  },
  {
    "text": "whereas all the other systems were generally dealing with encrypting stuff with a single key or Distributing uh",
    "start": "1825360",
    "end": "1831679"
  },
  {
    "text": "unencrypted data to a bunch of servers Red October is what's called N ofm Management so this means that you take a",
    "start": "1831679",
    "end": "1838279"
  },
  {
    "text": "a piece of secret data and you encrypt it such that any n ofm people can access it so if you have five operations",
    "start": "1838279",
    "end": "1844519"
  },
  {
    "text": "Engineers you give each of them your this is your M you get five M you get the m is five you give them each a",
    "start": "1844519",
    "end": "1850080"
  },
  {
    "text": "decryption key and it means you can set it up so that any one any2 whatever the N you want is uh you can you can control",
    "start": "1850080",
    "end": "1857279"
  },
  {
    "text": "who can access stuff by virtue of how many people you need this means that for simple stuff you can set it to n equals",
    "start": "1857279",
    "end": "1863480"
  },
  {
    "text": "1 or anyone can access it but for high security stuff maybe it's three or four where you need most of the company to",
    "start": "1863480",
    "end": "1869000"
  },
  {
    "text": "work together uh to agree to unlock this data so what is this useful for whereas",
    "start": "1869000",
    "end": "1874279"
  },
  {
    "text": "the other ones were really for sort of online or hot storage where the data is going to be accessed frequently without human intervention Red October is really",
    "start": "1874279",
    "end": "1880760"
  },
  {
    "text": "built for cold or offline storage secrets that need to be written down but you're not really going to access very",
    "start": "1880760",
    "end": "1885840"
  },
  {
    "text": "often so an example is the masterpath password for an Amazon account or the recovery credentials for say your GitHub",
    "start": "1885840",
    "end": "1890880"
  },
  {
    "text": "or pag Duty account so it's stuff that you may need at some point you do need to write this down but you don't really",
    "start": "1890880",
    "end": "1896720"
  },
  {
    "text": "need to access it every day and you probably want a little bit more security than usual about it because if somebody gets access to it they can probably",
    "start": "1896720",
    "end": "1902760"
  },
  {
    "text": "torpedo your company at least for a while and then a few other things that maybe you just want to think about a",
    "start": "1902760",
    "end": "1908600"
  },
  {
    "start": "1908000",
    "end": "1908000"
  },
  {
    "text": "little bit when you're specking out an application platform so with metrics uh you are going to need some information",
    "start": "1908600",
    "end": "1914679"
  },
  {
    "text": "about the health of your application so metrics are the tools let you judge whether or not your application is healthy so statsd is a buffering proxy",
    "start": "1914679",
    "end": "1921679"
  },
  {
    "text": "it sits between the rest of these metric Tools in your application so that you don't have to deal with buffer overflows",
    "start": "1921679",
    "end": "1927760"
  },
  {
    "text": "or spinning up a background thread within your app collectd is a another metric statement it runs on all of your",
    "start": "1927760",
    "end": "1933480"
  },
  {
    "text": "machines and it spits data about the servers up to a central collection point and then graphite is very often that",
    "start": "1933480",
    "end": "1939639"
  },
  {
    "text": "Central collection point it's a data storage system and a graphing uh like a graphics API so that you can create nice",
    "start": "1939639",
    "end": "1945480"
  },
  {
    "text": "pretty graphs and see what's going on your system uh most people are still managing log files by writing the file out on the",
    "start": "1945480",
    "end": "1952519"
  },
  {
    "start": "1948000",
    "end": "1948000"
  },
  {
    "text": "local machine and they SSH around and they GP a bunch of files uh everyone has done this at some point and it's",
    "start": "1952519",
    "end": "1958120"
  },
  {
    "text": "terrible so usually you want to try to migrate through some kind of central logging system log stash is a very",
    "start": "1958120",
    "end": "1963240"
  },
  {
    "text": "popular choice for this as is Splunk kibana is a UI for log staff so it gives",
    "start": "1963240",
    "end": "1968559"
  },
  {
    "text": "you a centralized place to search and view your log files uh and Splunk has a built-in interface I would also highly",
    "start": "1968559",
    "end": "1975279"
  },
  {
    "text": "recommend uh looking at specifically for error logs it handles only errors and",
    "start": "1975279",
    "end": "1980799"
  },
  {
    "text": "exceptions but it gives you a lot of very nice tools to look at your error rates and figure out if there's new",
    "start": "1980799",
    "end": "1985880"
  },
  {
    "text": "errors happening in your application so now we know a lot of the components and complexi is of building",
    "start": "1985880",
    "end": "1990919"
  },
  {
    "text": "an application platform and some of you are probably saying I'll never have time to do all of this well I have a solution you can get other people to do it for",
    "start": "1990919",
    "end": "1997440"
  },
  {
    "start": "1997000",
    "end": "1997000"
  },
  {
    "text": "you so Heroku is the king of platforms of service or pass for simple single web",
    "start": "1997440",
    "end": "2002760"
  },
  {
    "text": "uh single layer web applications that are powered by postgress you can very often be up running in under an hour and",
    "start": "2002760",
    "end": "2008360"
  },
  {
    "text": "you can run your application for free which is pretty hard to beat so and it's it is very very simple and easy to get",
    "start": "2008360",
    "end": "2014600"
  },
  {
    "text": "going uh as you outgro their free tier you can very easily scale up usually as simple as either typing one command or",
    "start": "2014600",
    "end": "2020840"
  },
  {
    "text": "even just moving a slider on a web page to say I want more performance unfortunately you pay a premium for this",
    "start": "2020840",
    "end": "2026600"
  },
  {
    "text": "it's uh it's not a cheap service after you outgrow their free tier and it can also be a little restrictive and stifling they really only offer one",
    "start": "2026600",
    "end": "2033200"
  },
  {
    "text": "model of how to run your application and if your application doesn't fit that they say not our problem uh fortunately porting off Heroku is",
    "start": "2033200",
    "end": "2039399"
  },
  {
    "text": "very very easy they are very much anti vendor lockin so moving from Heroku onto your own Hardware can be as easy as it",
    "start": "2039399",
    "end": "2046799"
  },
  {
    "text": "can possibly get not saying a whole lot but it's it's nice to have that as an option I highly recommend using Heroku",
    "start": "2046799",
    "end": "2053280"
  },
  {
    "text": "for small personal experiments or applications that you're just trying out to see if they'll work Google app engine",
    "start": "2053280",
    "end": "2058720"
  },
  {
    "text": "is another option for platforms of service uh but it's so dwarfed by Heroku that I don't really think there's much going for it uh it does allow you to run",
    "start": "2058720",
    "end": "2065679"
  },
  {
    "text": "on Google's infrastructure instead of on Amazon Heroku itself runs on top of AWS uh and it does come with a lot of baked",
    "start": "2065679",
    "end": "2072839"
  },
  {
    "text": "in expertise about how to run scalable applications things like the Google data store but I don't actually know anyone",
    "start": "2072839",
    "end": "2078919"
  },
  {
    "text": "that uses this anymore so take that as you will open shift is an open source",
    "start": "2078919",
    "end": "2084200"
  },
  {
    "start": "2082000",
    "end": "2082000"
  },
  {
    "text": "platform as a service Tool uh written by written and managed I guess by Red Hat they also offer a hosted version but you",
    "start": "2084200",
    "end": "2089878"
  },
  {
    "text": "can download and deploy yourself unfortunately deploying open shift is not simple and it may you may find that",
    "start": "2089879",
    "end": "2095440"
  },
  {
    "text": "it's just as easy to deploy an application platform yourself then to deploy open shift uh Cloud Foundry is",
    "start": "2095440",
    "end": "2101079"
  },
  {
    "text": "also an option basically all the same things apply except it's from VMware instead of red hat and finally de and",
    "start": "2101079",
    "end": "2106599"
  },
  {
    "start": "2105000",
    "end": "2105000"
  },
  {
    "text": "Flynn both passes built on top of Docker to say they are early in development isn't very very vast understatement",
    "start": "2106599",
    "end": "2113280"
  },
  {
    "text": "Docker itself is not production ready so needless to say neither of these are production ready uh not even remotely",
    "start": "2113280",
    "end": "2120000"
  },
  {
    "text": "but if you like the idea of Heroku and you want to run it yourself and you'd like to play around with some emerging technology i' definitely recommend",
    "start": "2120000",
    "end": "2125400"
  },
  {
    "text": "checking out both D and Flynn uh if nothing else they're they're promising ways to run applications in",
    "start": "2125400",
    "end": "2131200"
  },
  {
    "text": "the future uh and some quick attributions and thank",
    "start": "2131200",
    "end": "2137280"
  },
  {
    "start": "2132000",
    "end": "2132000"
  },
  {
    "text": "you so we have time for a few questions on this talk sure we have maybe five minutes questions uh just wait to the uh",
    "start": "2142839",
    "end": "2151000"
  },
  {
    "text": "microphone people be running around microphones thanks L um you briefly touch upon it uh I i' just like to hear",
    "start": "2151000",
    "end": "2158319"
  },
  {
    "text": "your thoughts on the move towards conization and Docker and seems like there's a lot of dozz in that space and",
    "start": "2158319",
    "end": "2164119"
  },
  {
    "text": "what you think about it I don't think there's a whole lot there I mean what you call a container is really pretty",
    "start": "2164119",
    "end": "2169480"
  },
  {
    "text": "arbitrary you know Docker as a container sure so is a a Zen VM or a KVM VM I mean",
    "start": "2169480",
    "end": "2176000"
  },
  {
    "text": "it's a question of the overhead and the time it takes to spin one up so spinning up a Zen VM on Amazon takes 45 seconds",
    "start": "2176000",
    "end": "2181640"
  },
  {
    "text": "spinning up a Docker lxc VM takes I don't know like 200 milliseconds spinning up a z VM VM takes Nan but",
    "start": "2181640",
    "end": "2189880"
  },
  {
    "text": "really it's all just different layers on the same technology on the other hand I think it's the right model for",
    "start": "2189880",
    "end": "2195319"
  },
  {
    "text": "applications and so if Docker is the thing that finally gets people to pay attention to this is how you're supposed to be using computers I'm really not",
    "start": "2195319",
    "end": "2200800"
  },
  {
    "text": "going to complain um also just you know have you",
    "start": "2200800",
    "end": "2206240"
  },
  {
    "text": "have you looked into cors and like what they're doing kind of embracing the do model I'm just curious I have uh I like",
    "start": "2206240",
    "end": "2213000"
  },
  {
    "text": "the coros guys I mean like I said ETD is cool um Fleet is interesting um I don't agree with a lot",
    "start": "2213000",
    "end": "2220359"
  },
  {
    "text": "of their decisions mostly around Fleet uh they're they're really building stuff around a very manual model which I think",
    "start": "2220359",
    "end": "2225560"
  },
  {
    "text": "is wrong but I think cor itself is a pretty cool idea you know I like the idea of a very so so for those not",
    "start": "2225560",
    "end": "2231880"
  },
  {
    "text": "familiar cor OS is a very slim Linux build it's basically just a Linux kernel",
    "start": "2231880",
    "end": "2236960"
  },
  {
    "text": "and the beest essential is to run containers on top of it so you don't get very much in the the hypervisor system",
    "start": "2236960",
    "end": "2243280"
  },
  {
    "text": "and I think that's pretty nice I mean that's uh basically what VMware does already vmware's hypervisors are a stripped down Linux system and they've",
    "start": "2243280",
    "end": "2249880"
  },
  {
    "text": "been selling that product for years it seems to work pretty well so cool again I'm not going to complain if that's what it gets people to to use the stuff",
    "start": "2249880",
    "end": "2258640"
  },
  {
    "text": "correctly are you familiar with uh spotify's Luigi system or any of the other task management systems that are",
    "start": "2260960",
    "end": "2267160"
  },
  {
    "text": "starting to come in from the uh map reduce management world uh I'm not familiar with Spotify I am somewhat more",
    "start": "2267160",
    "end": "2273960"
  },
  {
    "text": "familiar with mesos and that the Apache World under there",
    "start": "2273960",
    "end": "2280160"
  },
  {
    "text": "uh I don't know again like I'm not going to complain it's certainly better uh I",
    "start": "2280160",
    "end": "2285880"
  },
  {
    "text": "think that there's a lot of stuff that is really built around manually kicking off jobs and I don't like that",
    "start": "2285880",
    "end": "2293400"
  },
  {
    "text": "idea that's a lot of the mesos world seems to be built around that uh people really need to move towards schedule",
    "start": "2293400",
    "end": "2300000"
  },
  {
    "text": "what's called resource schedulers which is what cloud formation is of uh document the the desired state of what",
    "start": "2300000",
    "end": "2306680"
  },
  {
    "text": "be running where rather than thinking it as running oneoff tasks in different",
    "start": "2306680",
    "end": "2312440"
  },
  {
    "text": "places any other",
    "start": "2313880",
    "end": "2317318"
  },
  {
    "text": "questions all right you ah sorry uh have you ever considered elastic search for a",
    "start": "2319400",
    "end": "2325720"
  },
  {
    "text": "distributed Vore yeah I actually use it uh I don't really think it's worth mentioning because it's pretty specific",
    "start": "2325720",
    "end": "2332000"
  },
  {
    "text": "to one use case and really your options if you want a search system are elastic",
    "start": "2332000",
    "end": "2337280"
  },
  {
    "text": "search and solar and nobody wants to use solar so it it is what it is and there's",
    "start": "2337280",
    "end": "2343319"
  },
  {
    "text": "basically no choice so if you want a system with faceted search you're using elastic search and it's pretty",
    "start": "2343319",
    "end": "2351079"
  },
  {
    "text": "good okay let's uh thank Simeon let's thank Noah for his first",
    "start": "2352599",
    "end": "2358460"
  },
  {
    "text": "[Applause]",
    "start": "2358460",
    "end": "2364280"
  },
  {
    "text": "talk",
    "start": "2365440",
    "end": "2368440"
  }
]