[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "[Music]",
    "start": "500",
    "end": "9360"
  },
  {
    "text": "all right good afternoon everybody uh so we're going to talk about speedy and HP",
    "start": "12599",
    "end": "18199"
  },
  {
    "text": "2.0 and how those two relate um it's a subject that's near and deer to my heart",
    "start": "18199",
    "end": "23560"
  },
  {
    "text": "uh so without making you wait right I'm sure everybody has had a long day this is what we're trying to get to with HTP",
    "start": "23560",
    "end": "30400"
  },
  {
    "text": "2.0 this is the promis line so specifically uh the first item on the agenda for HTP 2.0 is we want to improve",
    "start": "30400",
    "end": "37079"
  },
  {
    "text": "performance which is to say latency and we will actually talk about latency and why that's uh that's very important uh",
    "start": "37079",
    "end": "43239"
  },
  {
    "text": "as a focus area for C 2.0 then specifically we're going to try and solve this problem called head of line",
    "start": "43239",
    "end": "49440"
  },
  {
    "text": "so if that doesn't uh mean anything to you hopefully after this you'll actually understand what we're trying to solve there um multiple connections this is",
    "start": "49440",
    "end": "56600"
  },
  {
    "text": "something that we have to do today to make our web apps perform well hopefully we won't have to do that anymore once we",
    "start": "56600",
    "end": "62800"
  },
  {
    "text": "have HTP 2.0 and last but not least 2.0 sounds like a big thing it's like what do you guys going to do break the",
    "start": "62800",
    "end": "68799"
  },
  {
    "text": "internet change everything uh not quiet uh the intent is to be backwards compatible with 1.1 don't worry your app",
    "start": "68799",
    "end": "74759"
  },
  {
    "text": "will run on HTP 2.0 so uh with that in mind I I actually want to go kind of",
    "start": "74759",
    "end": "80200"
  },
  {
    "text": "deeper and understand why we're trying to make these changes right so I can easily just give you like here the",
    "start": "80200",
    "end": "85640"
  },
  {
    "text": "things that you will get once HP 2.0 is here but the the real question I think the real interesting question is why do",
    "start": "85640",
    "end": "92119"
  },
  {
    "text": "we need it in the first place and why are we doing this uh to begin with so first of all since we're talking about",
    "start": "92119",
    "end": "97479"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "performance and latency here are some just like kind of like usability oneone numbers so there's has been a number of",
    "start": "97479",
    "end": "104920"
  },
  {
    "text": "user studies done over time these results are actually old they're from Jacob n neelen uh but they've held",
    "start": "104920",
    "end": "112520"
  },
  {
    "text": "constant uh and basically what this tells you is that when an interaction happens on a page in your app wherever",
    "start": "112520",
    "end": "119399"
  },
  {
    "text": "Within milliseconds we mostly perceive it as instant it's instant feedback right you click on a button you get response great that's what you want 100",
    "start": "119399",
    "end": "126719"
  },
  {
    "text": "to 300 people start to respond um start to perceive some sort of a sluggish",
    "start": "126719",
    "end": "132840"
  },
  {
    "text": "performance like the B the button is sticky and it really depends on what you're trying to do and anytime you kind of go over one second that's when the",
    "start": "132840",
    "end": "140040"
  },
  {
    "text": "user has already made a context switch right you're you're typing something you press submit and all of a sudden you're",
    "start": "140040",
    "end": "145800"
  },
  {
    "text": "waiting and now you're like oh I need to email Bob right and then you lost the user so that's we're trying to solve right so ideally um we should be within",
    "start": "145800",
    "end": "153360"
  },
  {
    "text": "let's say 300 milliseconds and this is why uh for a lot of sites like Google Yahoo Facebook there's this kind of U",
    "start": "153360",
    "end": "161680"
  },
  {
    "text": "unofficial 250 millisecond uh time that",
    "start": "161680",
    "end": "166879"
  },
  {
    "text": "um all of the sites try to um perform within or return a web page within",
    "start": "166879",
    "end": "172360"
  },
  {
    "text": "because we know that that if we do that then it feels uh fast and responsive so",
    "start": "172360",
    "end": "177680"
  },
  {
    "text": "with that in mind how are we doing today uh we did did a study with Google analytics so this is data sampled across",
    "start": "177680",
    "end": "183159"
  },
  {
    "text": "hundreds of millions of users with real real performance data off their phones and desktop computers all over the web",
    "start": "183159",
    "end": "189080"
  },
  {
    "text": "and it turns out this is data as of April 2012 so five six months ago the median",
    "start": "189080",
    "end": "195280"
  },
  {
    "text": "loading time on the web is about 2.7 seconds and the mean is 6.9 so it's actually pretty high and mobile is much",
    "start": "195280",
    "end": "202799"
  },
  {
    "text": "worse so you know roughly speaking five and 10 seconds and that even those numbers are incredibly optimistic",
    "start": "202799",
    "end": "209400"
  },
  {
    "text": "because this is based on the latest Android phones right so if you're on the latest Android phone chances are you're",
    "start": "209400",
    "end": "214760"
  },
  {
    "text": "also on a fast Network because you're the early adopter so in reality these are very very optimistic and we do we",
    "start": "214760",
    "end": "221720"
  },
  {
    "text": "have a long way to go to get from 10 seconds or 5 Seconds to 2050 milliseconds right there's like 20 25x",
    "start": "221720",
    "end": "228959"
  },
  {
    "text": "in there so why is that right why do these Pages take so long to render and",
    "start": "228959",
    "end": "234879"
  },
  {
    "text": "if you look at data from hcpr archive.org which tracks performance data of how load across hundreds of",
    "start": "234879",
    "end": "241360"
  },
  {
    "text": "thousands of pages um you'll find that an average page on the web today takes about 84 requests to compose which is to",
    "start": "241360",
    "end": "248400"
  },
  {
    "text": "say there are many resources for which we need to make various requests in the process we connect to up to 30 different",
    "start": "248400",
    "end": "254959"
  },
  {
    "text": "hosts on average so 30 computers distinct computers on a network and all of that combined uh comes out to be",
    "start": "254959",
    "end": "261239"
  },
  {
    "text": "roughly one megabyte in size so an average page on a web today is one Meg in size and takes 84 requests right and",
    "start": "261239",
    "end": "267840"
  },
  {
    "text": "we want this to render in 250 m Ms or 500 milliseconds that's that's almost a",
    "start": "267840",
    "end": "273360"
  },
  {
    "text": "miracle uh but you know we make it work and some interesting observations in here you know 600 kilobytes out of that",
    "start": "273360",
    "end": "280120"
  },
  {
    "text": "one Meg is images so if you know if nothing else optimizing images on your site may be a very good place to look",
    "start": "280120",
    "end": "285759"
  },
  {
    "text": "for easy wins for how to accelerate your site and that's true in General on the web we find that image uh picking a good",
    "start": "285759",
    "end": "292360"
  },
  {
    "text": "image format is very important so at this point you should be saying like hey this is cool you know the pages are growing in size but we're also getting",
    "start": "292360",
    "end": "299080"
  },
  {
    "text": "much faster networks right you listen to any ad on TV radio whatever and there's",
    "start": "299080",
    "end": "304600"
  },
  {
    "text": "like 4G LTE speeds and uh 40 Meg Uplink on your Comcast whatever right it's like",
    "start": "304600",
    "end": "311120"
  },
  {
    "text": "great I'll just get a faster connection and everything will be good turns out that's not the case",
    "start": "311120",
    "end": "317319"
  },
  {
    "text": "um first of all let's rewind a little bit akami doeses or has this site called",
    "start": "317319",
    "end": "322680"
  },
  {
    "text": "ai. where to report um average connection speeds and a whole bunch of",
    "start": "322680",
    "end": "328520"
  },
  {
    "text": "other interesting data about General performance of the web so I just pulled this number for q1 2012 and this is",
    "start": "328520",
    "end": "334919"
  },
  {
    "text": "specifically for the United States and you can see that within the US an average consumer uh is basically on a",
    "start": "334919",
    "end": "341840"
  },
  {
    "text": "6.7 megabit pipe right so there's uh that's the available average available",
    "start": "341840",
    "end": "346960"
  },
  {
    "text": "bandwidth in the US and why is that interesting well sorry we'll come back",
    "start": "346960",
    "end": "352800"
  },
  {
    "text": "to that in a second hold that thought um that was bandwidth the other component of course when you talk about web",
    "start": "352800",
    "end": "358319"
  },
  {
    "text": "performance is latency so bandwidth and latency these are the two major things and uh here's some data from the FCC",
    "start": "358319",
    "end": "367319"
  },
  {
    "text": "report uh called measuring Broadband America so what they're doing is they're",
    "start": "367319",
    "end": "372599"
  },
  {
    "text": "deploying nodes within all the major networks to measure the latency between",
    "start": "372599",
    "end": "377639"
  },
  {
    "text": "your computer and the network itself right so your provider so this is just the latency between you and the core",
    "start": "377639",
    "end": "384039"
  },
  {
    "text": "network not even to the destination site and they're finding that um on average you know if you have fiber uh fiber at",
    "start": "384039",
    "end": "391160"
  },
  {
    "text": "home it's 18 milliseconds for cable it's 26 milliseconds DSL 43 milliseconds so",
    "start": "391160",
    "end": "396759"
  },
  {
    "text": "this kind of gives you a feel for what are you getting uh in terms of uh Broadband performance and we'll see why",
    "start": "396759",
    "end": "403120"
  },
  {
    "text": "latency is in fact one of the crucial metrics uh for us moving forward now at Google we also measure",
    "start": "403120",
    "end": "410319"
  },
  {
    "text": "this uh quite and we monitor this data quite closely and we know that uh worldwide the RT so the the latency to",
    "start": "410319",
    "end": "418440"
  },
  {
    "text": "the Google servers is about 100 milliseconds on average and within us",
    "start": "418440",
    "end": "423479"
  },
  {
    "text": "it's 50 to 60 milliseconds now this is data from 2012 uh the same same",
    "start": "423479",
    "end": "428800"
  },
  {
    "text": "measurement from a couple years back also had worldwide at 100 but had us at",
    "start": "428800",
    "end": "434280"
  },
  {
    "text": "60 to 70 so you know we've made some progress we we've um earned or we've won back about 10 milliseconds which is very",
    "start": "434280",
    "end": "440919"
  },
  {
    "text": "good news but nonetheless that's uh that's not enough and the problem here is that bandwidth doesn't actually help",
    "start": "440919",
    "end": "446520"
  },
  {
    "text": "us as much as you would think when it comes to rendering web pages and the question you should be asking yourself",
    "start": "446520",
    "end": "451879"
  },
  {
    "text": "at this point is why uh why wouldn't bandw make all of our Pages faster and",
    "start": "451879",
    "end": "457160"
  },
  {
    "start": "452000",
    "end": "452000"
  },
  {
    "text": "uh here's uh a study that we did this is from a couple of years back so this is what kicked off the Speedy work at",
    "start": "457160",
    "end": "463520"
  },
  {
    "text": "Google a few years back and the study was very simple uh we took uh a sample",
    "start": "463520",
    "end": "469000"
  },
  {
    "text": "of websites of popular websites and we varied the available bandwidth to the user and the latency to the server right",
    "start": "469000",
    "end": "475280"
  },
  {
    "text": "so it's kind of two independent variables and you can see the difference in how uh the PLT which is the page load",
    "start": "475280",
    "end": "482199"
  },
  {
    "text": "time right this total amount of time that the page took to load was affected so on on the left uh you have the uh",
    "start": "482199",
    "end": "490319"
  },
  {
    "text": "latency per bandwidth which is say we're varying bandwidth and when you're on a one megabit connection you know on",
    "start": "490319",
    "end": "495599"
  },
  {
    "text": "average these Pages took three seconds to load okay uh we doubled the bandwidth",
    "start": "495599",
    "end": "501080"
  },
  {
    "text": "to two megabits and all of a sudden the page load time drops almost by factor of two that's that's a that's a great win",
    "start": "501080",
    "end": "506800"
  },
  {
    "text": "that's what you would expect but shortly after that you see this kind of very quick Decay so after about five megabits",
    "start": "506800",
    "end": "513880"
  },
  {
    "text": "uh per second you're getting single percentage wins in terms of page loading time uh which is not very promising to",
    "start": "513880",
    "end": "521080"
  },
  {
    "text": "be honest right and why does this matter well think back to the number that we saw earlier from makamai on average a",
    "start": "521080",
    "end": "526800"
  },
  {
    "text": "consumer in us already has over 5 megabits per second so upgrading your connection today probably won't make the",
    "start": "526800",
    "end": "533560"
  },
  {
    "text": "pages load any faster that's a depressing thought now let's try this",
    "start": "533560",
    "end": "539480"
  },
  {
    "text": "the same experiment but by varying the rtt to the server so this is the latency between you and the server that you're",
    "start": "539480",
    "end": "545079"
  },
  {
    "text": "trying to communicate with and the you know the most obvious thing that you can see is as we decrease the latency the",
    "start": "545079",
    "end": "551079"
  },
  {
    "text": "performance improves linearly so there's a direct correlation there and at this point if you're familiar with kind of",
    "start": "551079",
    "end": "556920"
  },
  {
    "text": "the inner workings of TCP you're saying well of course you know that that's what you would expect and I'm not going to talk about",
    "start": "556920",
    "end": "564360"
  },
  {
    "start": "561000",
    "end": "561000"
  },
  {
    "text": "mobile specifically in this talk but everything that we are covering here applies directly to mobile except that",
    "start": "564360",
    "end": "570399"
  },
  {
    "text": "the situation there is much much worse right like orders of magnitude worse so",
    "start": "570399",
    "end": "575880"
  },
  {
    "text": "this is a a snippet I took from the Sprint FAQ right and they're telling you",
    "start": "575880",
    "end": "580959"
  },
  {
    "text": "that on the 4G network you should expect average latency of 150 milliseconds right so if you're one of these early",
    "start": "580959",
    "end": "587040"
  },
  {
    "text": "adopters who went out and got the the new 4G that's what you're going to get if you're in the 3G network you're going to expect latency of 400 milliseconds",
    "start": "587040",
    "end": "594600"
  },
  {
    "text": "right this is pretty brutal think back to the fiber at home with 18 milliseconds you're getting you know 10x",
    "start": "594600",
    "end": "600600"
  },
  {
    "text": "difference basically on your mobile phone or worse so you know in our test we didn't",
    "start": "600600",
    "end": "606680"
  },
  {
    "text": "even simulate uh the performance going over 240 so you know we should revisit that",
    "start": "606680",
    "end": "612360"
  },
  {
    "text": "test and the thing to mention about bandwidth latency is that you know",
    "start": "612360",
    "end": "617440"
  },
  {
    "text": "improving bandwidth is relatively easy and I put a lot of stars there because you know I'm sure somebody in the crowd will be like what are you talking about",
    "start": "617440",
    "end": "623920"
  },
  {
    "text": "this is incredibly expensive and it is right but it turns out that uh B",
    "start": "623920",
    "end": "629320"
  },
  {
    "text": "bandwidth can be increased by just providing more fiber and fiber is expensive to to just lay but for example",
    "start": "629320",
    "end": "636399"
  },
  {
    "text": "between 2007 in 2011 over 60% of the capacity that was added uh to our",
    "start": "636399",
    "end": "644160"
  },
  {
    "text": "existing infrastructure was through upgrades of existing cables which is to say we deployed better infrastructure on",
    "start": "644160",
    "end": "650839"
  },
  {
    "text": "both ends better modulation and all the rest and we got better throughput through existing cables so there's a lot of winds uh that are happening there and",
    "start": "650839",
    "end": "657600"
  },
  {
    "text": "there's also the possibility that we could just l another cable right like if if we're if the links are saturated between New York and London we can just",
    "start": "657600",
    "end": "664120"
  },
  {
    "text": "lay another link it's expensive but we can do that with latency the story is much much harder uh we have this thing",
    "start": "664120",
    "end": "670279"
  },
  {
    "text": "called the speed of light it's rather annoying a couple years back there was that announcement that you know we",
    "start": "670279",
    "end": "675519"
  },
  {
    "text": "figured out how to deliver stuff faster than the speed of light soon as out it was a broken cable damn it or a faulty cable so you",
    "start": "675519",
    "end": "683320"
  },
  {
    "text": "know still fingers crossed maybe we'll figure it out one day but in the meantime the only thing you can do is to lay a shorter cable right so if you have",
    "start": "683320",
    "end": "690000"
  },
  {
    "text": "a cable from London to New York that takes 5,000 mil maybe you can lay one that's 4500 miles and that's actually a",
    "start": "690000",
    "end": "697560"
  },
  {
    "text": "win so as an example uh just last year there was a project or yeah last year",
    "start": "697560",
    "end": "703560"
  },
  {
    "text": "there was a project kicked off uh by couple of companies which is called hiberia Express and the entire premise",
    "start": "703560",
    "end": "710760"
  },
  {
    "text": "of this project is that they are laying the shortest cable between North America",
    "start": "710760",
    "end": "716120"
  },
  {
    "text": "and London right and this cable will save five milliseconds of",
    "start": "716120",
    "end": "721240"
  },
  {
    "text": "latency and this cable is only going to be used by the financial institutions because they figured out that these guys",
    "start": "721240",
    "end": "726519"
  },
  {
    "text": "are willing to pay for this the project is going to cost $400 million so that you know doing basic math tells you that",
    "start": "726519",
    "end": "732399"
  },
  {
    "text": "a millisecond is worth about 80 million bucks um and that's not even the most expensive project so this this gives you",
    "start": "732399",
    "end": "739160"
  },
  {
    "text": "a feel right like we we're up against uh some really tough uh boundaries here and",
    "start": "739160",
    "end": "744639"
  },
  {
    "text": "not only that but when it comes to latency we're already within a like a small constant factor of the maximum of",
    "start": "744639",
    "end": "750199"
  },
  {
    "text": "the speed of light so we can't expect a 2X or a 10x Improvement anytime soon unless we actually figure out how to go",
    "start": "750199",
    "end": "756720"
  },
  {
    "text": "faster than the speed of light which is a minor complication so once again why is",
    "start": "756720",
    "end": "762959"
  },
  {
    "text": "latency the problem right uh let's let's we're trying to render web pages so if you guys are familiar with HTTP",
    "start": "762959",
    "end": "770000"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "right there is HTTP 1.1 introduced this concept of pipelining so the basic operation of HTTP is to say we have one",
    "start": "770000",
    "end": "776959"
  },
  {
    "text": "connection and you send the request wait for the response once we get the response you can send another request",
    "start": "776959",
    "end": "782440"
  },
  {
    "text": "very simple model pipelining which was introduced in HTP 1.1 basically says hey",
    "start": "782440",
    "end": "787720"
  },
  {
    "text": "you can send me multiple requests one after the other but I still I will only",
    "start": "787720",
    "end": "793639"
  },
  {
    "text": "respond in order so if you send me requests for images a b and c I will send you the entire response a then I",
    "start": "793639",
    "end": "800600"
  },
  {
    "text": "will send you the entire response B and then C right so there's no interleaving",
    "start": "800600",
    "end": "806120"
  },
  {
    "text": "uh between these images or any of these resources that you're requesting so why is this a problem well in that second",
    "start": "806120",
    "end": "812600"
  },
  {
    "text": "diagram it's you know it's very pretty because everything just goes a lot faster in reality what happens is that",
    "start": "812600",
    "end": "817760"
  },
  {
    "text": "we have this problem called headof line blocking where some requests so for example that first request could be a",
    "start": "817760",
    "end": "824560"
  },
  {
    "text": "dynamic uh image or you know a server action that takes a while and then everything is blocked behind it and this",
    "start": "824560",
    "end": "831959"
  },
  {
    "text": "turns out to be a huge scheduling problem so because of this pipelining hasn't actually seen um lots of adoption",
    "start": "831959",
    "end": "837920"
  },
  {
    "text": "it is being used on mobile browsers today uh but it's nonetheless it's hidden Miss right because if you",
    "start": "837920",
    "end": "843399"
  },
  {
    "text": "schedule something wrong and and you can only guess uh how you should schedule resources you may run into a case where",
    "start": "843399",
    "end": "849639"
  },
  {
    "text": "you pipeline these second and third resource and you would have been better off to wait and send those requests",
    "start": "849639",
    "end": "855120"
  },
  {
    "text": "another connection so generally speaking this is an unsolvable problem right like you can guess but you'll never win",
    "start": "855120",
    "end": "861920"
  },
  {
    "start": "860000",
    "end": "860000"
  },
  {
    "text": "entirely so what has our solution has been well we just open multiple connections right like to help with it",
    "start": "861920",
    "end": "867680"
  },
  {
    "text": "we'll just instead of uh sending six requests over the same connection will open six oh jeez uh six connections and",
    "start": "867680",
    "end": "875000"
  },
  {
    "text": "send a request on each and this is the uh basically the default number on all the browsers today uh this number has",
    "start": "875000",
    "end": "881440"
  },
  {
    "text": "varied over time based on what browser you're using but today most uh desktop",
    "start": "881440",
    "end": "886480"
  },
  {
    "text": "and mobile browsers have this limit of six connections per host name and of course what do we do six connections may",
    "start": "886480",
    "end": "892480"
  },
  {
    "text": "not be enough because you have 30 images on the page we do domain sharting all right so we'll put different subdomains",
    "start": "892480",
    "end": "900320"
  },
  {
    "text": "and then you'll open 30 connections right it's like problem solved uh",
    "start": "900320",
    "end": "905480"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "beautiful so why is this a problem let's go a level deeper right we're looking at HTTP the problem here is that new",
    "start": "905480",
    "end": "912880"
  },
  {
    "text": "connections also impose their own penalty and TCP has this feature uh",
    "start": "912880",
    "end": "919279"
  },
  {
    "text": "called uh slow start it's not a bug it is a feature where the observation that the",
    "start": "919279",
    "end": "925920"
  },
  {
    "text": "TCP guys made way back in the you know mid-50s that we have the server and the client may",
    "start": "925920",
    "end": "931759"
  },
  {
    "text": "have asymmetric links right you a server may have a very fast connection the client may not have a very fast",
    "start": "931759",
    "end": "937399"
  },
  {
    "text": "connection and we need to figure out the available capacity between these two channels uh or maybe some somewhere in",
    "start": "937399",
    "end": "942839"
  },
  {
    "text": "between there's a congested link so to be fair to everybody on the network we are going to start slow which is to say",
    "start": "942839",
    "end": "949680"
  },
  {
    "text": "we're going to start by sending a couple of packets and then once you act those packets we will grow this window size",
    "start": "949680",
    "end": "955240"
  },
  {
    "text": "and then you act it again and it will grow again this is exactly what is happening here right we start with three packets we get those AXS we increase the",
    "start": "955240",
    "end": "962319"
  },
  {
    "text": "window size to six so on and so forth so you can see that it's growing very fast and if you zoom out a little bit you",
    "start": "962319",
    "end": "968079"
  },
  {
    "text": "will usually see this sort of chart um for your TCP performance this is a new connection being started it ramps very",
    "start": "968079",
    "end": "975680"
  },
  {
    "text": "quickly relatively speaking um and then at certain point a packet loss occurs and then we enter a new congestion",
    "start": "975680",
    "end": "982759"
  },
  {
    "text": "control mechanism which we're not going to talk about but this has important implications on CCP performance",
    "start": "982759",
    "end": "989519"
  },
  {
    "text": "this right here is limited on latency so let's take a",
    "start": "989519",
    "end": "996480"
  },
  {
    "text": "look this tells us that you know within three rtts we can deliver 12 segments a",
    "start": "996480",
    "end": "1002319"
  },
  {
    "text": "segment is basically or you know 1500 bytes on the network so um we can",
    "start": "1002319",
    "end": "1007880"
  },
  {
    "text": "deliver 14 kilobytes within three rtts this is why latency",
    "start": "1007880",
    "end": "1013440"
  },
  {
    "text": "matters think back to our original problem we have a page that is roughly 1 Megabyte in size 80 requests if you do",
    "start": "1013440",
    "end": "1020800"
  },
  {
    "text": "the math it works out to be on average about 14 kiloby so although we have a lot of requests they're usually very",
    "start": "1020800",
    "end": "1026438"
  },
  {
    "text": "small requests because we're opening new connections we're always going through",
    "start": "1026439",
    "end": "1031640"
  },
  {
    "text": "the slow start phase and we're even though you have let's say a 5 megabit connection we're not able to make use of",
    "start": "1031640",
    "end": "1037280"
  },
  {
    "text": "it because we need to go through this process every single time so we start by sending you like a couple of kilobytes and then we wait and then we wait again",
    "start": "1037280",
    "end": "1044160"
  },
  {
    "text": "and the entire performance charact profile of of that page is then dictated by the latency between the server and",
    "start": "1044160",
    "end": "1049840"
  },
  {
    "text": "the client right that that's why decreasing that latency was very important and that's why mobile is such",
    "start": "1049840",
    "end": "1055360"
  },
  {
    "text": "a hard thing to get right because not only are the latencies higher they're also extremely variable due to any",
    "start": "1055360",
    "end": "1062440"
  },
  {
    "text": "number of reasons right a car pulls in in front of you the signal bounces and all of a sudden you know weird stuff",
    "start": "1062440",
    "end": "1067760"
  },
  {
    "text": "happens on the network so one solution uh that is",
    "start": "1067760",
    "end": "1072880"
  },
  {
    "text": "currently being deployed is called uh so it's increasing the original window size",
    "start": "1072880",
    "end": "1078120"
  },
  {
    "text": "so if I go back back here right we started with this with these three segments this was the default since",
    "start": "1078120",
    "end": "1083640"
  },
  {
    "text": "about 2002 um as of 2010 uh the new Linux kernels are actually have bumped",
    "start": "1083640",
    "end": "1090600"
  },
  {
    "text": "this to 10 segments and this is actually a very important win because with 10 segments we can deliver most of the",
    "start": "1090600",
    "end": "1095960"
  },
  {
    "text": "resources within that first push before we wait for the RT so if you you know if you if you run uh your servers you may",
    "start": "1095960",
    "end": "1103039"
  },
  {
    "text": "want to check your kernel and make sure that you have this enabled because this will actually make Pages go a lot faster",
    "start": "1103039",
    "end": "1108799"
  },
  {
    "text": "for you and your users so and this is the actual paper uh from Google that kind of motivated uh this",
    "start": "1108799",
    "end": "1116799"
  },
  {
    "text": "update so you know that was kind of a detour deep into the TCP stack so let's talk about um HTTP and Speedy so how do",
    "start": "1116799",
    "end": "1124440"
  },
  {
    "text": "these two relate I mentioned that we uh at Google started working on Speedy a couple years back and we've actually had",
    "start": "1124440",
    "end": "1130880"
  },
  {
    "text": "very good adoption so uh majority of the traffic at Google is now running on Speedy uh which is uh really awesome and",
    "start": "1130880",
    "end": "1138520"
  },
  {
    "text": "we also had a lot of adoption from uh thirdparty vendors as you will see in third party sites so because of this the",
    "start": "1138520",
    "end": "1144640"
  },
  {
    "text": "hcp bis working group actually kicked off an effort early this year for HTP 2.0 and this is already in progress if",
    "start": "1144640",
    "end": "1152200"
  },
  {
    "text": "you look at uh the the kind of the rough timeline here uh we had the call for proposals that was earlier in the year",
    "start": "1152200",
    "end": "1158480"
  },
  {
    "text": "this month uh we need to draft uh the first official proposal for HTP 2.0 so",
    "start": "1158480",
    "end": "1164240"
  },
  {
    "text": "this is like super exciting stuff for those of you who care about you know working groups and uh",
    "start": "1164240",
    "end": "1170280"
  },
  {
    "text": "rfc's but the timeline for the protocol itself is about 2014 so the first note um is",
    "start": "1170280",
    "end": "1178440"
  },
  {
    "text": "that Speedy is being adopted as a starting point for HT 2.0 that is not to",
    "start": "1178440",
    "end": "1184400"
  },
  {
    "text": "say that HTP 2.0 is Speedy right we're basically saying look we've deployed this it's been running for two years",
    "start": "1184400",
    "end": "1191559"
  },
  {
    "text": "we've learned a lot of things we can use this as a starting point it may change entirely or it may be very similar by",
    "start": "1191559",
    "end": "1196679"
  },
  {
    "text": "the time HP 2.0 here is here but the fundamental problems that we're trying to solve are the",
    "start": "1196679",
    "end": "1204120"
  },
  {
    "text": "same so this is directly from the working group uh mandate if you will um",
    "start": "1204120",
    "end": "1210000"
  },
  {
    "text": "you know we're not going to go through it's a lot of text basically I grouped them into three things make things",
    "start": "1210000",
    "end": "1215960"
  },
  {
    "text": "better build on HTP 1.1 and be extensible one of the core features of",
    "start": "1215960",
    "end": "1221159"
  },
  {
    "text": "HTP 1.1 is that it is extensible so we want to make sure that we preserve that uh we want to make sure that HP 1.1",
    "start": "1221159",
    "end": "1227640"
  },
  {
    "text": "continues to work and um you know as we covered in the beginning we want to make sure that we actually address the",
    "start": "1227640",
    "end": "1232880"
  },
  {
    "start": "1230000",
    "end": "1230000"
  },
  {
    "text": "fundamental limitations of HP 1.1 so we touched on this briefly but",
    "start": "1232880",
    "end": "1238440"
  },
  {
    "text": "you know here are some examples of the kinds of things that all of us today need to do to work around these",
    "start": "1238440",
    "end": "1245320"
  },
  {
    "text": "limitations for example spriting images why do we need to Sprite images well",
    "start": "1245320",
    "end": "1250799"
  },
  {
    "text": "connections are expensive right so what do we do we pull all the images together",
    "start": "1250799",
    "end": "1256000"
  },
  {
    "text": "and then we have this giant CSS hack to position it on the the page in in the right place um it's quite frankly it's",
    "start": "1256000",
    "end": "1262000"
  },
  {
    "text": "annoying to do uh we know how to do it but we shouldn't have to right if we didn't have this limitation uh domain",
    "start": "1262000",
    "end": "1268039"
  },
  {
    "text": "sharding is a great example right we're working around the fact that we have this connection limit in a browser uh",
    "start": "1268039",
    "end": "1273840"
  },
  {
    "text": "resource inlining is the same thing so all of these things will hopefully get addressed in the sense that once HTP 2.0",
    "start": "1273840",
    "end": "1279720"
  },
  {
    "text": "2.0 is here we actually won't have to do this stuff so life will get easier uh",
    "start": "1279720",
    "end": "1285279"
  },
  {
    "text": "which is nice so um you know H2 HP 2.0 will take",
    "start": "1285279",
    "end": "1291480"
  },
  {
    "text": "a while as you saw 2014 you know these things uh do take some time so what can you do in the meantime well you can use",
    "start": "1291480",
    "end": "1297600"
  },
  {
    "text": "Speedy so Speedy is already here it is supported by Chrome Opera and",
    "start": "1297600",
    "end": "1304200"
  },
  {
    "text": "Firefox and U it is compliant with HTTP",
    "start": "1304200",
    "end": "1309360"
  },
  {
    "text": "as in it's not like an entirely new protocol uh HP 2.0 this is another quote",
    "start": "1309360",
    "end": "1315600"
  },
  {
    "text": "from Mark Nottingham who leads the HP working group um you know what we're",
    "start": "1315600",
    "end": "1320679"
  },
  {
    "text": "doing in HP 2.0 is we're changing how the data is laid out on the wire we're not changing any of the semantics of HP",
    "start": "1320679",
    "end": "1326960"
  },
  {
    "text": "so all of the headers that you know cookies all that kind of stuff is all there it's all the same it's it's just",
    "start": "1326960",
    "end": "1333600"
  },
  {
    "text": "how it's shipped on The Wire so here is a very uh quick",
    "start": "1333600",
    "end": "1340480"
  },
  {
    "start": "1335000",
    "end": "1335000"
  },
  {
    "text": "introduction to Speedy we're not going to go very deep on this and this is specifically for Speedy version 2 so",
    "start": "1340480",
    "end": "1345799"
  },
  {
    "text": "Speedy has gone through we're actually right now working on speedy version 4 Speedy version 2 is what is being",
    "start": "1345799",
    "end": "1351640"
  },
  {
    "text": "adopted as a starting point for the spec so I will this is specifically for Speedy version 2 so first of all the",
    "start": "1351640",
    "end": "1360240"
  },
  {
    "text": "primary goal of Speedy is to allow you to use one connection and get all of your resources over it that means we can",
    "start": "1360240",
    "end": "1367440"
  },
  {
    "text": "really open that window very wide make use optimal use of your bandwidth and",
    "start": "1367440",
    "end": "1373320"
  },
  {
    "text": "you know everything should just run better requests are mapped to streams in",
    "start": "1373320",
    "end": "1378480"
  },
  {
    "text": "PD speak so you know if you just kind of replace that word one connection you have multiple streams over it uh and",
    "start": "1378480",
    "end": "1384880"
  },
  {
    "text": "each stream corresponds to a request and streams can be Multiplex which is to say they can be inter Le so I can send you a",
    "start": "1384880",
    "end": "1390240"
  },
  {
    "text": "little bit of data for this image and then I can send you a little bit of data for the CSS file JavaScript what have",
    "start": "1390240",
    "end": "1396640"
  },
  {
    "text": "you right so everything's good it is binary framed and there are two types of frames there's a control frame and a",
    "start": "1396640",
    "end": "1402600"
  },
  {
    "text": "data frame and I can tell you that having written an HP parser and a server",
    "start": "1402600",
    "end": "1408000"
  },
  {
    "text": "and a client and having written an Speedy client the Speedy client took me a weekend the HP",
    "start": "1408000",
    "end": "1414200"
  },
  {
    "text": "stuff took me like a year to get right so it's it's a lot easier to work with once you have a well- defined uh",
    "start": "1414200",
    "end": "1421480"
  },
  {
    "start": "1420000",
    "end": "1420000"
  },
  {
    "text": "format so here's an example right this is a sample Speedy frame this is a frame",
    "start": "1421480",
    "end": "1426760"
  },
  {
    "text": "that opens a new connection or sorry not a new connection a new Stream So what we're saying is this the first bit says",
    "start": "1426760",
    "end": "1433760"
  },
  {
    "text": "it's a control packet right so it's just one and then we're saying this is I'm speaking to you in Speedy version",
    "start": "1433760",
    "end": "1440360"
  },
  {
    "text": "2 uh the one represents that it's a sin stream which is to say we're opening a new Stream So this represents the type",
    "start": "1440360",
    "end": "1446760"
  },
  {
    "text": "of packet I'm going to skip the flags in length but then you have the request ID",
    "start": "1446760",
    "end": "1452200"
  },
  {
    "text": "so the client assigns uh or every request gets its own ID such that when data comes in we can actually look at",
    "start": "1452200",
    "end": "1458240"
  },
  {
    "text": "the frame and say oh hey this is data for request or sorry stream number 45 which corresponds to this image nice and",
    "start": "1458240",
    "end": "1465559"
  },
  {
    "text": "simple um and then we have priority as well so you can actually uh say hey I've",
    "start": "1465559",
    "end": "1471840"
  },
  {
    "text": "sent you requests for these five U images but now I've stumbled into this Javascript file which is very important",
    "start": "1471840",
    "end": "1478799"
  },
  {
    "text": "for me to render this page quickly give me a higher priority for this one right push back sending the image data which",
    "start": "1478799",
    "end": "1485679"
  },
  {
    "text": "is actually a very very nice feature today browsers are actually sometimes pessimistic they will find the resources",
    "start": "1485679",
    "end": "1492000"
  },
  {
    "text": "and they will wait and it will say hey maybe there's a Javascript file coming later which is actually more important",
    "start": "1492000",
    "end": "1497399"
  },
  {
    "text": "so I don't want to block the pipes if you will so I will wait and then kind of race it which is like once again it's a",
    "start": "1497399",
    "end": "1503799"
  },
  {
    "text": "game you can't win we're guessing so this will help us solve this issue and everything is length prefix prefixed",
    "start": "1503799",
    "end": "1510919"
  },
  {
    "text": "which is to say if you if you ever built a parser this makes life very very easy right because the first thing we tell",
    "start": "1510919",
    "end": "1516840"
  },
  {
    "text": "you is like this is the number of bites you should expect if you don't care about this Frame just skip right over it",
    "start": "1516840",
    "end": "1522080"
  },
  {
    "text": "this is not the case with hcp where you need to parse all of the damn headers and the body and then you like okay this",
    "start": "1522080",
    "end": "1527919"
  },
  {
    "text": "is the new request so this will actually make it uh much easier and then we have",
    "start": "1527919",
    "end": "1533000"
  },
  {
    "text": "things like you know sending actual uh headers so as part of the sream uh the next thing that comes is we sell you hey",
    "start": "1533000",
    "end": "1539960"
  },
  {
    "text": "I'm going to send you 10 headers right so we encode that directly and then we say by the way here's the length of the",
    "start": "1539960",
    "end": "1545559"
  },
  {
    "text": "name of the header here's the header here's the length of the value here's the value so it makes once again very easy to",
    "start": "1545559",
    "end": "1551960"
  },
  {
    "text": "purse so this is my um terrible artistic rendition of how speedy works",
    "start": "1551960",
    "end": "1558840"
  },
  {
    "start": "1558000",
    "end": "1558000"
  },
  {
    "text": "bear with me so we have three requests that we send from the client to the server these are streams that we open",
    "start": "1558840",
    "end": "1565000"
  },
  {
    "text": "and then the server says hey okay that's cool um this third request that you sent me I already have some data for it so",
    "start": "1565000",
    "end": "1570159"
  },
  {
    "text": "I'm going to start sending you these these frames back and then sometime later I have data for another uh from",
    "start": "1570159",
    "end": "1575480"
  },
  {
    "text": "another request so I can inter leave this stuff I can send it in parallel Etc so one connection everything flows over",
    "start": "1575480",
    "end": "1581799"
  },
  {
    "text": "it as long as it's on the same domain obviously and we'll come back to the well actually it's right here so domain",
    "start": "1581799",
    "end": "1587559"
  },
  {
    "text": "sharting is the problem right so if you've shed explicitly sharded your site to have multiple domains now we need the",
    "start": "1587559",
    "end": "1593559"
  },
  {
    "text": "great on sharding uh once we go to HP 2.0 uh we need to convince all of you",
    "start": "1593559",
    "end": "1598760"
  },
  {
    "text": "that that's that is actually counterproductive and if you put all the resources on the same page it'll make",
    "start": "1598760",
    "end": "1604480"
  },
  {
    "text": "your life better and Pages load faster so we're still working through how to actually do that well as you know as",
    "start": "1604480",
    "end": "1610799"
  },
  {
    "text": "opposed to just telling everybody to undo it so uh there's a lot of wins that",
    "start": "1610799",
    "end": "1616039"
  },
  {
    "text": "you get out of this performance there's also some gacha um especially in situations where you",
    "start": "1616039",
    "end": "1621720"
  },
  {
    "text": "have um really high latency networks we'll touch on that a little bit um near",
    "start": "1621720",
    "end": "1626919"
  },
  {
    "text": "the end so another optimization that is important and that is coming um that is",
    "start": "1626919",
    "end": "1634279"
  },
  {
    "start": "1627000",
    "end": "1627000"
  },
  {
    "text": "definitely in Speedy we'll see how it plays out in HP 2.0 is we need better header compression so we know that on",
    "start": "1634279",
    "end": "1640880"
  },
  {
    "text": "average request response headers those are sent in plain text in HTTP today you can compress the bodies via whatever",
    "start": "1640880",
    "end": "1648760"
  },
  {
    "text": "mechanism you wish but the headers are in plain text and on average that's 800 bytes on The Wire right so as an example",
    "start": "1648760",
    "end": "1656159"
  },
  {
    "text": "here this is very typical use case today I'm sending this like Json payload that says message oh high to random server",
    "start": "1656159",
    "end": "1663919"
  },
  {
    "text": "right and here's all of the HTTP headers that get appended to those like what is",
    "start": "1663919",
    "end": "1669039"
  },
  {
    "text": "it what 16 bytes of data that I'm trying to send right so the actual payload is",
    "start": "1669039",
    "end": "1674679"
  },
  {
    "text": "like tiny compared to all of this overhead and that's where that's what we want to solve in uh in HTP 2.0 so in",
    "start": "1674679",
    "end": "1681919"
  },
  {
    "text": "Speedy we actually just compress uh all of the headers which gives us a enormous",
    "start": "1681919",
    "end": "1687000"
  },
  {
    "text": "win in terms of overall performance in Speedy version 4 We're actually reworking uh or trying to rethink how",
    "start": "1687000",
    "end": "1694279"
  },
  {
    "text": "that all of that is done instead of using gzip compression we're actually doing kind of our own compressor which",
    "start": "1694279",
    "end": "1699399"
  },
  {
    "text": "is easier for um proxies and others to adopt so we talked about gzip um oh and",
    "start": "1699399",
    "end": "1708279"
  },
  {
    "text": "also in Speedy version 4 we have this idea that we're experimenting with which is to say a lot of headers that you send",
    "start": "1708279",
    "end": "1715640"
  },
  {
    "text": "today are the same for example your user agent probably doesn't change on every request",
    "start": "1715640",
    "end": "1722600"
  },
  {
    "text": "I hope it doesn't mine doesn't so why do we keep sending it right wouldn't it make sense when you open a new",
    "start": "1722600",
    "end": "1729120"
  },
  {
    "text": "connection to send that header once and say hey this is a connection level header and you know if you care just",
    "start": "1729120",
    "end": "1735120"
  },
  {
    "text": "apply it to every subsequent request so I said I don't need to send it you that's that in itself is a form of",
    "start": "1735120",
    "end": "1740240"
  },
  {
    "text": "compression of course so we're also playing with that idea and trying to figure out how we can make sense of this",
    "start": "1740240",
    "end": "1746039"
  },
  {
    "text": "this may enable very um very kind of compact representation of",
    "start": "1746039",
    "end": "1752720"
  },
  {
    "text": "headers so now we're getting into the fun territory uh you know some some people really misunderstand server push",
    "start": "1753080",
    "end": "1759360"
  },
  {
    "start": "1757000",
    "end": "1757000"
  },
  {
    "text": "so Speedy does have this feature where uh we have this observation basically where the server is serving you a file",
    "start": "1759360",
    "end": "1765880"
  },
  {
    "text": "and the server may know already the file the other files that you will be requesting right like I'm giving you the",
    "start": "1765880",
    "end": "1770919"
  },
  {
    "text": "HTML I know you're going to ask for the header image so why don't I just push the image to you and that's effectively",
    "start": "1770919",
    "end": "1777120"
  },
  {
    "text": "what server push is now uh this kind of raises a lot of alarms for a lot of people rightfully so because they're",
    "start": "1777120",
    "end": "1783480"
  },
  {
    "text": "saying well if you're going to start pushing resources that may be a problem because um what if I don't want it right",
    "start": "1783480",
    "end": "1789279"
  },
  {
    "text": "I'm on a mobile connection uh maybe I have it in my cache um I don't want for you to just kind of use up my data all",
    "start": "1789279",
    "end": "1796000"
  },
  {
    "text": "you need is like one bad guy to just push me like a gigabyte of whatevers right and everything's terrible so uh",
    "start": "1796000",
    "end": "1803960"
  },
  {
    "text": "the answer to that is you can cancel it uh the client will send a stream a s stream packet that you saw earlier and",
    "start": "1803960",
    "end": "1810760"
  },
  {
    "text": "you can look at that and say hey no I don't want this you can decline that uh but",
    "start": "1810760",
    "end": "1816399"
  },
  {
    "text": "also you are already using server push that is what we call inlining today",
    "start": "1816399",
    "end": "1821679"
  },
  {
    "text": "right when you inline when you use a data URI in your page you're basically saying I know you will ask me for the",
    "start": "1821679",
    "end": "1828240"
  },
  {
    "text": "image or whatever so here it is right in the HTML file that is server push like",
    "start": "1828240",
    "end": "1833519"
  },
  {
    "text": "that's manual server push if you will but that's effectively the use case that we're trying to solve and with proper",
    "start": "1833519",
    "end": "1839080"
  },
  {
    "text": "server push it actually works out much better because when you inline something into the page it becomes part of that page if you have for example a a small",
    "start": "1839080",
    "end": "1846600"
  },
  {
    "text": "icon that you keep inlining on every page it will literally become part of every page as opposed to being in a cach",
    "start": "1846600",
    "end": "1852240"
  },
  {
    "text": "and you know you can reuse the cach uh for all the requests so there's a lot of interesting things that you can do a",
    "start": "1852240",
    "end": "1858159"
  },
  {
    "text": "server push uh but there's also some gas and the the really interesting use cases for",
    "start": "1858159",
    "end": "1864120"
  },
  {
    "text": "this kind of stuff that I have haven't really seen a lot of people play with but I think it will come is something like Amazon silk so if you're using the",
    "start": "1864120",
    "end": "1871600"
  },
  {
    "text": "Kindle Fire uh tablet you are using a speedy proxy the way it works is when",
    "start": "1871600",
    "end": "1877120"
  },
  {
    "text": "you browse to http sites um the tablet itself has one connection",
    "start": "1877120",
    "end": "1884480"
  },
  {
    "text": "to an ec2 server or the Amazon silk server and that's talks over speedy and uh then Amazon fetches all",
    "start": "1884480",
    "end": "1893200"
  },
  {
    "text": "the resources optimizes them it may rewrite the images and push them to your tablet which in theory could accelerate",
    "start": "1893200",
    "end": "1898519"
  },
  {
    "text": "the browsing experience right which is great and in theory when you're shuttling all of your resources through",
    "start": "1898519",
    "end": "1903600"
  },
  {
    "text": "this proxy it could keep a very good picture of what's in your cach so it could be very smart about the things",
    "start": "1903600",
    "end": "1908679"
  },
  {
    "text": "that it can push into your cash so I think stuff like this will come and uh it'll be uh really really interesting",
    "start": "1908679",
    "end": "1915880"
  },
  {
    "text": "now the other thing you need to be aware of for speedy and this is up and open for debate with h with HP 2.0 right now",
    "start": "1915880",
    "end": "1922720"
  },
  {
    "start": "1922000",
    "end": "1922000"
  },
  {
    "text": "is Speedy does run over SSL and there are many discussions as to",
    "start": "1922720",
    "end": "1928960"
  },
  {
    "text": "why that is you know there are people U for philosophical or political reasons",
    "start": "1928960",
    "end": "1934240"
  },
  {
    "text": "believe that everything should be over SSL and you know frankly um it is kind of crazy that you can walk into a cafe",
    "start": "1934240",
    "end": "1941080"
  },
  {
    "text": "uh start a sniffer and you know get a bunch of passwords from a bunch of people that are just browsing the HP sites that's not a good story uh I think",
    "start": "1941080",
    "end": "1948519"
  },
  {
    "text": "we're solving that slowly but surely but that's not the reason why we use TLS for Speedy specifically we use TLS for",
    "start": "1948519",
    "end": "1954840"
  },
  {
    "text": "Speedy because we have a lot of intermediate proxies deployed on the web that you know operate on all these TCP",
    "start": "1954840",
    "end": "1961919"
  },
  {
    "text": "streams and hcp streams and many of them sometimes for good reasons sometimes for bad reasons um may drop this traffic so",
    "start": "1961919",
    "end": "1970080"
  },
  {
    "text": "for example your antivirus software may actually look at your HP traffic as it's flowing and say hey you're talking some",
    "start": "1970080",
    "end": "1977120"
  },
  {
    "text": "protocol I have no idea about smells like malware to me drop this connection",
    "start": "1977120",
    "end": "1982519"
  },
  {
    "text": "and all of a sudden uh your connection is gone right and and the client can communicate with your server so in",
    "start": "1982519",
    "end": "1988399"
  },
  {
    "text": "practice even something like websockets is deployed you know if you're deploying at scale especially in a mobile browsers",
    "start": "1988399",
    "end": "1994399"
  },
  {
    "text": "you use https because that gives you an endtoend encrypted tunnel where these intermediaries can't mck with your data",
    "start": "1994399",
    "end": "2001120"
  },
  {
    "text": "and can't drop the the connections in practice we find that you know 80 90% of",
    "start": "2001120",
    "end": "2006720"
  },
  {
    "text": "the time everything works just fine but then 10% of the time you have no idea the client just can't reach your server",
    "start": "2006720",
    "end": "2012440"
  },
  {
    "text": "which is obviously not a story you want for something like google.com right 10% of our users can't access the site not a",
    "start": "2012440",
    "end": "2018159"
  },
  {
    "text": "good deal so that is the number one reason for SSL right now and you know I mentioned websockets",
    "start": "2018159",
    "end": "2027120"
  },
  {
    "start": "2023000",
    "end": "2023000"
  },
  {
    "text": "SDHC now for TLS uh two things come up uh whenever you bring up TLS first of",
    "start": "2027120",
    "end": "2033399"
  },
  {
    "text": "all you know speed uh if we're talking about performance and the whole point of Speedy is performance doesn't TS work",
    "start": "2033399",
    "end": "2040399"
  },
  {
    "text": "against us and there are specifically two things CPU and",
    "start": "2040399",
    "end": "2046960"
  },
  {
    "text": "latency so for CPU it is definitely true that let's say five six 10 years ago the",
    "start": "2047359",
    "end": "2055760"
  },
  {
    "text": "handshake the cryptographic handshake was a bottleneck you actually needed dedicated Hardware to offload that too",
    "start": "2055760",
    "end": "2062240"
  },
  {
    "text": "but today all of the Modern Hardware has all of the stuff built right into the hardware such that it's actually very",
    "start": "2062240",
    "end": "2068320"
  },
  {
    "text": "cheap so uh this quote that I have here from Adam Langley who's our SSL guy at",
    "start": "2068320",
    "end": "2073760"
  },
  {
    "text": "Google and this is from his blog um when we turned on SSL Google wide you know",
    "start": "2073760",
    "end": "2079800"
  },
  {
    "text": "our CPU load on all of our service went up by one or two% there's no Hardware acceleration this is all done in",
    "start": "2079800",
    "end": "2085638"
  },
  {
    "text": "software Facebook also runs all of their SSL in software so the handshake latency or sorry the CPU load is actually not",
    "start": "2085639",
    "end": "2093280"
  },
  {
    "text": "that significant there are optimizations that that need to be made and can be made within the cell stack for better",
    "start": "2093280",
    "end": "2099280"
  },
  {
    "text": "performance like adjusting your cell buffers uh but that's really not the issue anymore and I hope we can put that",
    "start": "2099280",
    "end": "2105359"
  },
  {
    "text": "once a rest the bigger issue if anything is the latency because uh TCP when you",
    "start": "2105359",
    "end": "2110480"
  },
  {
    "text": "establish a new connection has the handshake which is a full round trip that before any data can be sent SSL",
    "start": "2110480",
    "end": "2116760"
  },
  {
    "text": "requires up to two additional round trips which is terrible if you think about it right I'm on my mobile phone I",
    "start": "2116760",
    "end": "2122480"
  },
  {
    "text": "need to establish an cell connection let's say my latency is 400 milliseconds that's over one",
    "start": "2122480",
    "end": "2128160"
  },
  {
    "text": "second before I can even send you the get request I mean that is terrible so",
    "start": "2128160",
    "end": "2133200"
  },
  {
    "text": "to address that we have uh a couple of proposals out there they're experimental called called false start and fast start",
    "start": "2133200",
    "end": "2140320"
  },
  {
    "text": "which try to reduce the extra roundt trips you know from two down to one and there's even a proposal that may actually take it down to Zero by",
    "start": "2140320",
    "end": "2146480"
  },
  {
    "text": "basically remembering kind of State on both ends so definitely an issue but it",
    "start": "2146480",
    "end": "2151880"
  },
  {
    "text": "gives us a lot of uh important characteristics that we saw earlier and I should also mention that",
    "start": "2151880",
    "end": "2158200"
  },
  {
    "text": "um as part of Speedy so Speedy uses this protocol extension called Next protocol",
    "start": "2158200",
    "end": "2163240"
  },
  {
    "text": "negotiation which pushes the negotiation of what protocol you're going to use into the SSL handshake itself so there's",
    "start": "2163240",
    "end": "2170640"
  },
  {
    "text": "no extra round trips if you think about websockets the way that's done is you send an hcp request with a header that",
    "start": "2170640",
    "end": "2176280"
  },
  {
    "text": "says I want to upgrade to a websocket connection which then in initiates another round of a roundtrip we uh",
    "start": "2176280",
    "end": "2182680"
  },
  {
    "text": "bypass that with uh TLS npn so if you're thinking of deploying pedd you will need",
    "start": "2182680",
    "end": "2188359"
  },
  {
    "text": "TLS npn and that is in op SSL by default uh",
    "start": "2188359",
    "end": "2193400"
  },
  {
    "text": "nowadays so who support Speedy today uh Chrome since ancient times uh we have",
    "start": "2193400",
    "end": "2200240"
  },
  {
    "start": "2199000",
    "end": "2199000"
  },
  {
    "text": "support on Android browsers we have support on iOS so this is a screenshot I took of chrome running on iOS it does",
    "start": "2200240",
    "end": "2208599"
  },
  {
    "text": "understand Speedy it uses the same network stack so you get all the same things which is really nice we have",
    "start": "2208599",
    "end": "2215160"
  },
  {
    "text": "Apache modules uh there's an engine module Jetty netti so a lot of the app",
    "start": "2215160",
    "end": "2220359"
  },
  {
    "text": "servers today already support speedy and I'll actually show you some examples of how to get started a little bit later we",
    "start": "2220359",
    "end": "2226319"
  },
  {
    "text": "also have big sites um outside of Google uh with support for Speedy so Twitter uh",
    "start": "2226319",
    "end": "2232800"
  },
  {
    "text": "supports Speedy uh we have WordPress WordPress runs on engine X they were",
    "start": "2232800",
    "end": "2238480"
  },
  {
    "text": "actually the ones that sponsored the engine X implementation of Speedy which is really cool um Facebook is not",
    "start": "2238480",
    "end": "2243960"
  },
  {
    "text": "running on Speedy but they've indicated that they are experimenting with it which which I think is really cool and there's also a lot of commercial pickup",
    "start": "2243960",
    "end": "2250040"
  },
  {
    "text": "on this stuff as well so aami announced that they will support it uh Q4 this year which I guess is now uh we have F5",
    "start": "2250040",
    "end": "2256960"
  },
  {
    "text": "with their Speedy Gateway Etc and of course you know I mentioned this already if you are using uh Google",
    "start": "2256960",
    "end": "2263560"
  },
  {
    "text": "services you are in all likelihood um accessing them over Speedy which sorry",
    "start": "2263560",
    "end": "2271040"
  },
  {
    "start": "2267000",
    "end": "2267000"
  },
  {
    "text": "uh which is pretty neat so I figured I'd answer some questions um preemptively because I know",
    "start": "2271040",
    "end": "2278920"
  },
  {
    "text": "that these questions come up all the time do I need to modify my site to work with HTP 2.0 or speedy and the answer is",
    "start": "2278920",
    "end": "2286079"
  },
  {
    "text": "no U we saw that nothing really changes HP headers are the same we're not asking you to change your you know angle",
    "start": "2286079",
    "end": "2291440"
  },
  {
    "text": "bracket syntax or anything like that but you can optimize your sites to make better advantage of Speedy the biggest",
    "start": "2291440",
    "end": "2297240"
  },
  {
    "text": "one is probably this the domain on charting if you will uh that's the number one win and then the others are",
    "start": "2297240",
    "end": "2303000"
  },
  {
    "text": "probably actually on the server so making sure that uh you because you're",
    "start": "2303000",
    "end": "2308079"
  },
  {
    "text": "using SSL you have the optimal certificate uh length you're not padding",
    "start": "2308079",
    "end": "2313240"
  },
  {
    "text": "extra data in there and you have your C window set to 10 and other things like",
    "start": "2313240",
    "end": "2318520"
  },
  {
    "text": "that so it's more in the server than the",
    "start": "2318520",
    "end": "2322440"
  },
  {
    "text": "client and I think we actually covered the rest so sounds complicated are there drop in Solutions yes we saw right",
    "start": "2324760",
    "end": "2329800"
  },
  {
    "text": "there's Speedy if you're running on if you have an app on App engine you will inherit the stuff for free which is really nice",
    "start": "2329800",
    "end": "2337839"
  },
  {
    "text": "but you know there's a gotcha and there's also a gotcha right so imagine in 2014 we have HTP 2.0 and life is",
    "start": "2337839",
    "end": "2344359"
  },
  {
    "text": "beautiful um problem solved right well not quite we took a problem in HTTP 1.1",
    "start": "2344359",
    "end": "2351160"
  },
  {
    "text": "we solved it by going to HTP 2.0 on and now we have as usual with performance we unlock another bottleneck and now that",
    "start": "2351160",
    "end": "2357599"
  },
  {
    "text": "bottleneck lives in TCP and in reality all we've done is we've moved the headof",
    "start": "2357599",
    "end": "2364040"
  },
  {
    "start": "2361000",
    "end": "2361000"
  },
  {
    "text": "line blocking issue from http into TCP so why is that recall this",
    "start": "2364040",
    "end": "2372680"
  },
  {
    "text": "diagram so TCP provides this abstraction of a reliable delivery on top of what is",
    "start": "2372680",
    "end": "2379920"
  },
  {
    "text": "effectively an unreliable Network there is packet loss on the internet in fact it's on average you know 1 to 2% uh",
    "start": "2379920",
    "end": "2386240"
  },
  {
    "text": "packet loss rate and what that means is you know we have a resource that we're trying to Shi to the client we push out",
    "start": "2386240",
    "end": "2393040"
  },
  {
    "text": "a whole bunch of packets or segments onto the network and let's say one one of those packets one of the first ones",
    "start": "2393040",
    "end": "2398839"
  },
  {
    "text": "gets lost for whatever reason right the rest get delivered all just fine but the",
    "start": "2398839",
    "end": "2404440"
  },
  {
    "text": "first one is lost what does that mean well that means that the receiver will keep all of the packets that are coming",
    "start": "2404440",
    "end": "2410000"
  },
  {
    "text": "after it in its own buffer and wait for the first one because it can't it promised you that we'll deliver",
    "start": "2410000",
    "end": "2415400"
  },
  {
    "text": "everything in order so that lag between uh losing that packet and then having to",
    "start": "2415400",
    "end": "2421520"
  },
  {
    "text": "retransmit it is what introduces this head of line blocking so arguably you know this is not maybe as",
    "start": "2421520",
    "end": "2428000"
  },
  {
    "text": "big as the as the problem H in originally HP 1.1 but this introduces a",
    "start": "2428000",
    "end": "2434839"
  },
  {
    "text": "lot of Jitter and kind of random delays into the performance so if you're trying to build a real time kind of interactive",
    "start": "2434839",
    "end": "2441240"
  },
  {
    "text": "experience this may actually be a problem this is the reason why we transfer game State video and audio kind",
    "start": "2441240",
    "end": "2448800"
  },
  {
    "text": "of stuff over UDP right because if you lost that packet that's okay maybe I can pave over it and do something else um so",
    "start": "2448800",
    "end": "2456800"
  },
  {
    "text": "that is a problem and we don't have a good solution for it uh this is not a goal for HTP 2.0 to solve but we are",
    "start": "2456800",
    "end": "2463680"
  },
  {
    "text": "aware that this is a limitation and this may be a limitation specifically on these kind of really high latency",
    "start": "2463680",
    "end": "2469800"
  },
  {
    "text": "networks when you have a user from Malaysia talking to your server in I don't know here right in San",
    "start": "2469800",
    "end": "2476920"
  },
  {
    "text": "Francisco so that's all cool what do I need to do to actually take advantage of this I",
    "start": "2476920",
    "end": "2483880"
  },
  {
    "text": "have a website that's running right now how do I get on speedy and the answer is",
    "start": "2483880",
    "end": "2488960"
  },
  {
    "text": "it's actually pretty simple so there's you know depending on which stack you're running on for example Apache uh we we",
    "start": "2488960",
    "end": "2495000"
  },
  {
    "text": "have a module that is being developed at Google called mod Speedy it is literally just uh a filter that you install into",
    "start": "2495000",
    "end": "2501720"
  },
  {
    "text": "your server and the rest is taken care of so remember once again we're not asking you to modify your pages we're",
    "start": "2501720",
    "end": "2507599"
  },
  {
    "text": "just making better use of the underlying connection and how the data is multiplexed so if uh if a client comes",
    "start": "2507599",
    "end": "2513640"
  },
  {
    "text": "with a chrome or Firefox browser to the Apache server it'll just deliver it over Speedy uh no difference there which is",
    "start": "2513640",
    "end": "2520200"
  },
  {
    "start": "2514000",
    "end": "2514000"
  },
  {
    "text": "uh really quite nice and you know to get started you download the the package in this in this case I'm using a a Deion",
    "start": "2520200",
    "end": "2526960"
  },
  {
    "text": "package you enable it in your Apache you restart Apache and you're up and running",
    "start": "2526960",
    "end": "2532119"
  },
  {
    "text": "which is pretty sweet and also you know Apache and other servers are often used as a front end a terminating node in",
    "start": "2532119",
    "end": "2540240"
  },
  {
    "text": "front of your app servers so your app servers could be written in Ruby it could be even node I don't know if somebody",
    "start": "2540240",
    "end": "2546920"
  },
  {
    "text": "would do that but uh maybe uh there's a really good tutorial in that gist link",
    "start": "2546920",
    "end": "2552319"
  },
  {
    "text": "and I'll share the slides at the end for where a guy wrote up a sequence of steps for enabling a patchy in front of his",
    "start": "2552319",
    "end": "2558880"
  },
  {
    "text": "earling web server right so he can whatever technology is on the back end even if it's a Java app server you can",
    "start": "2558880",
    "end": "2564440"
  },
  {
    "text": "put a patchy in front you can make use of this and what will happen is a Pache will terminate the Speedy connection the SSL connection and it will relay the",
    "start": "2564440",
    "end": "2571240"
  },
  {
    "text": "messages in plain HTP to your back end so your back end won't even know that you know it's talking and Speedy",
    "start": "2571240",
    "end": "2577880"
  },
  {
    "start": "2575000",
    "end": "2575000"
  },
  {
    "text": "engine X as I mentioned has support it's right now it is experimental um it is basic it's a patch although uh from",
    "start": "2577880",
    "end": "2585760"
  },
  {
    "text": "through the rumor mill apparently they're merging the support into core very soon as in like",
    "start": "2585760",
    "end": "2592559"
  },
  {
    "text": "maybe weeks so uh today you would actually have to download this patch it is an official patch from engine X and",
    "start": "2592559",
    "end": "2599440"
  },
  {
    "text": "you just build it with the latest open SSL and you're up and running which is also quite nice if you're running a node",
    "start": "2599440",
    "end": "2605760"
  },
  {
    "text": "server very simple there's a great module called uh node speedy and you can see here that we're",
    "start": "2605760",
    "end": "2611760"
  },
  {
    "text": "just uh setting up an SSL server if you've ever written a node server this is just your SSL server except that are",
    "start": "2611760",
    "end": "2618920"
  },
  {
    "text": "we calling speedy. creat server and that's all the rest to it really and the server takes care of the rest and uh",
    "start": "2618920",
    "end": "2625480"
  },
  {
    "text": "node Speedy actually also supports server push which is quite nice so you can do really interesting stuff with it",
    "start": "2625480",
    "end": "2630640"
  },
  {
    "text": "and you can experiment um with it quite well for Java um I was going to copy the",
    "start": "2630640",
    "end": "2638920"
  },
  {
    "text": "pages of XML and markup but figured I shouldn't so having said that there's",
    "start": "2638920",
    "end": "2646319"
  },
  {
    "text": "very good implementation for Jetty uh The Jetty guys have done an amazing job so uh you know at the bottom there's uh",
    "start": "2646319",
    "end": "2653200"
  },
  {
    "text": "a link that will walk you through all the steps you basically couple of things you have to add an extra uh jar to your",
    "start": "2653200",
    "end": "2660319"
  },
  {
    "text": "class path which adds this npn support for SSL negotiation that's step number one and then you use their Speedy client",
    "start": "2660319",
    "end": "2666559"
  },
  {
    "text": "or speedy server uh to enable it on your uh Java app server you know there's 50",
    "start": "2666559",
    "end": "2672000"
  },
  {
    "text": "pages of XML in there somewhere but it works and now finally you know if you're",
    "start": "2672000",
    "end": "2677200"
  },
  {
    "text": "the clients how do I how do you even know how do I debug this stuff so there",
    "start": "2677200",
    "end": "2682319"
  },
  {
    "start": "2679000",
    "end": "2679000"
  },
  {
    "text": "are for all the browsers that support it today uh there are extensions that you can install just if you're curious you",
    "start": "2682319",
    "end": "2688559"
  },
  {
    "text": "know if you're browsing around the web and you're curious am I on Speedy or am I using HTP so Chrome has a speedy",
    "start": "2688559",
    "end": "2694520"
  },
  {
    "text": "indicator you just you can search for it and you'll find I have no idea how this it's a little kind of green bolt icon",
    "start": "2694520",
    "end": "2700680"
  },
  {
    "text": "this is not an official icon I have no idea where it came from uh but I think you know the first implementation of this plugin was uh for Chrome I think",
    "start": "2700680",
    "end": "2708240"
  },
  {
    "text": "the guy just picked it and now all the browsers adopted it which is neat um so there you go so you know",
    "start": "2708240",
    "end": "2714800"
  },
  {
    "text": "it'll show up as a green bolt in chrome green bolt in Firefox and in Opera it actually has a dedicated space on the",
    "start": "2714800",
    "end": "2721680"
  },
  {
    "text": "right on the right side which is pretty cool so these are just kind of indicators for when you're on side that",
    "start": "2721680",
    "end": "2727200"
  },
  {
    "text": "supports Speedy in Chrome and also in Firefox you can also query from the command line and see which version of",
    "start": "2727200",
    "end": "2733559"
  },
  {
    "text": "Speedy am I using so for example here I'm just pulling up my console and I'm typing in window. chrome. load times and",
    "start": "2733559",
    "end": "2740079"
  },
  {
    "text": "I get this um object back uh which says that uh we negotiated",
    "start": "2740079",
    "end": "2745800"
  },
  {
    "text": "over npn Speedy version 3 so I'm speaking Speedy version 3 and uh you",
    "start": "2745800",
    "end": "2752240"
  },
  {
    "text": "this page was fetched vedd and you know it was negotiated over npn so so there's",
    "start": "2752240",
    "end": "2758200"
  },
  {
    "text": "um useful metadata there but this tell this now tells you that you are on",
    "start": "2758200",
    "end": "2763800"
  },
  {
    "text": "Speedy but can you go deeper and the answer is yes absolutely and probably one of the best tools is the Chrome net",
    "start": "2763800",
    "end": "2771160"
  },
  {
    "text": "internals pain if you guys have never played with net internals this is an excellent reason to uh peek inside and",
    "start": "2771160",
    "end": "2777559"
  },
  {
    "text": "see how it works so we have this separate pane for Speedy that you go",
    "start": "2777559",
    "end": "2782720"
  },
  {
    "text": "into and you will see all of the open Speedy connections and I will actually",
    "start": "2782720",
    "end": "2788200"
  },
  {
    "text": "you know with with luck I will show you this okay so uh speedy. iio is just like",
    "start": "2788200",
    "end": "2796680"
  },
  {
    "text": "a silly silly uh node server that I'm running that is delivering this hello",
    "start": "2796680",
    "end": "2802040"
  },
  {
    "text": "world message over Speedy right so I'm running this and now I'm going to go to Chrome net",
    "start": "2802040",
    "end": "2809640"
  },
  {
    "text": "internals into speedy and you can see that Speedy IO is listed as a speedy",
    "start": "2809640",
    "end": "2815559"
  },
  {
    "text": "version three let me make that a little bit bigger so we're talking Speedy version 3 to Speedy doio and I can",
    "start": "2815559",
    "end": "2822359"
  },
  {
    "text": "actually click on this uh",
    "start": "2822359",
    "end": "2825960"
  },
  {
    "text": "connection let me see there we go and we have our Speedy",
    "start": "2827920",
    "end": "2834720"
  },
  {
    "text": "session and then I can click on the Speedy session itself and you can actually see the exchange that this is",
    "start": "2834720",
    "end": "2841000"
  },
  {
    "text": "the stuff that flows on The Wire so you can actually see the the Speedy frames",
    "start": "2841000",
    "end": "2846680"
  },
  {
    "text": "um as their exchange so for example we have uh this sin stream remember we talked about Sin stream which is the uh",
    "start": "2846680",
    "end": "2853920"
  },
  {
    "text": "I would like to open a new request to the server and we're saying it's okay so I'm I'm sending a s stream here are all",
    "start": "2853920",
    "end": "2860680"
  },
  {
    "text": "my headers host method uh accept headers all the rest this is what you would expect out of a regular spe request and",
    "start": "2860680",
    "end": "2867559"
  },
  {
    "text": "then uh we get some 404 data back so if you need to debug speedy this",
    "start": "2867559",
    "end": "2874920"
  },
  {
    "text": "is probably the best tool uh to do that so definitely give it a try so with that um I'm happy to take",
    "start": "2874920",
    "end": "2882280"
  },
  {
    "text": "questions right as a quick summary and there's a mic in there if if you guys have any questions um but in the",
    "start": "2882280",
    "end": "2888240"
  },
  {
    "text": "meantime a couple of things right so just to come back full circle the core goal for hb.0 is to improve latency how",
    "start": "2888240",
    "end": "2895680"
  },
  {
    "text": "are we going to do that we're trying to remove uh the bottleneck in in the existing HTP 1.1 implementation which is",
    "start": "2895680",
    "end": "2902520"
  },
  {
    "text": "this head of head of line blocking uh we want to be able to Mox multiple requests",
    "start": "2902520",
    "end": "2907720"
  },
  {
    "text": "over the same connection such that we can open that you know big and wide and get all the resources as fast as we can",
    "start": "2907720",
    "end": "2913760"
  },
  {
    "text": "um it'll have all the same semantics uh and in the meantime you can use Speedy",
    "start": "2913760",
    "end": "2919640"
  },
  {
    "text": "to accelerate your site so uh one common question is well how what should I expect on my site and the answer is it",
    "start": "2919640",
    "end": "2925319"
  },
  {
    "text": "really depends um on architecture of your site if you have if you serve majority third-party content and you",
    "start": "2925319",
    "end": "2931480"
  },
  {
    "text": "have you know tons and tons of widgets you know you're you're not going to get as big of a win uh but we have have seen",
    "start": "2931480",
    "end": "2937640"
  },
  {
    "text": "big improvements uh the original goal for Speedy was to make uh was to accelerate the loading Time by 40 to 50%",
    "start": "2937640",
    "end": "2946119"
  },
  {
    "text": "and you know we're think we think we're on track for that your actual results May May Vary but this was very cool",
    "start": "2946119",
    "end": "2953160"
  },
  {
    "text": "because uh you can enable this you know your admin can enable this on the server",
    "start": "2953160",
    "end": "2958240"
  },
  {
    "text": "and the site just goes faster you haven't you haven't done anything to the underlying uh pages so that's The quick",
    "start": "2958240",
    "end": "2966119"
  },
  {
    "text": "summary um the slides are online so if you go to bitly hp2 Speedy you can find",
    "start": "2966119",
    "end": "2973000"
  },
  {
    "text": "those there me thank you [Applause]",
    "start": "2973000",
    "end": "2978559"
  }
]