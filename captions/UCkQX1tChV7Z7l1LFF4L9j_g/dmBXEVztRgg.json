[
  {
    "start": "0",
    "end": "256000"
  },
  {
    "text": "thanks to all of you for coming and this is a topic that I'm really excited about taking something I really love machine",
    "start": "3890",
    "end": "11269"
  },
  {
    "text": "learning and also blending that with my love for front-end JavaScript development and so today I just want to",
    "start": "11269",
    "end": "17390"
  },
  {
    "text": "talk tell you all about how you can also start to do that so my name is Victor DBA I'm a research scientist researcher",
    "start": "17390",
    "end": "26300"
  },
  {
    "text": "engineer with cloud they're a fast world Labs with respect to my background I have a mind some of my work has cut",
    "start": "26300",
    "end": "33650"
  },
  {
    "text": "across computer science software engineering I also have some formal training in human-computer interaction",
    "start": "33650",
    "end": "40460"
  },
  {
    "text": "and over the last four or five years I spent a lot of my time with applied machine learning and so a few years ago",
    "start": "40460",
    "end": "47149"
  },
  {
    "text": "I was the richest scientist at IBM's teacher Watson Research Lab at yorktown and I spent a lot of my time there",
    "start": "47149",
    "end": "53960"
  },
  {
    "text": "prototype in natural language and natural gesture interaction interfaces",
    "start": "53960",
    "end": "60850"
  },
  {
    "text": "more recently I tried to spend some time contributing to the community but in machine learning and in JavaScript and I",
    "start": "60969",
    "end": "67610"
  },
  {
    "text": "spent I serve as a developer expert for machine learning within the group develop expert program and currently I'm",
    "start": "67610",
    "end": "75470"
  },
  {
    "text": "a research engineer at Cloudera fast food labs so that's a little bit about me just to also give you a little bit of",
    "start": "75470",
    "end": "82520"
  },
  {
    "text": "a background about what we do as fast forward labs we like to think of ourselves as the bridge between academia",
    "start": "82520",
    "end": "88850"
  },
  {
    "text": "and industry and so as part of that process every quarter we will release a research report it will go through this",
    "start": "88850",
    "end": "96079"
  },
  {
    "text": "really comprehensive process of identifying topics from academia that",
    "start": "96079",
    "end": "102100"
  },
  {
    "text": "that there are deaths sweet spot of making the transition from academic research into stuff that our clients can",
    "start": "102100",
    "end": "108110"
  },
  {
    "text": "actually use and so what we'll do is that we'll spend a couple of months researching these topics and then we'll",
    "start": "108110",
    "end": "113119"
  },
  {
    "text": "drive reports around them and in addition to that we also build interactive prototypes that show like a",
    "start": "113119",
    "end": "119149"
  },
  {
    "text": "concrete demonstration of what these technologies could do and so the slide you see right now is a prototype we'd be",
    "start": "119149",
    "end": "125119"
  },
  {
    "text": "able to be released in just a couple of months ago something called complet playground so essentially if you think",
    "start": "125119",
    "end": "131240"
  },
  {
    "text": "of the task of semantic search actually given an image showing all other images",
    "start": "131240",
    "end": "136790"
  },
  {
    "text": "there it's a common problem and it turns out that you can solve it really efficiently using foreign models but there's still a",
    "start": "136790",
    "end": "144900"
  },
  {
    "text": "lot of decisions that the data scientist needs to make what model do I use inception v3 v g6 thing what does all of",
    "start": "144900",
    "end": "151860"
  },
  {
    "text": "that mean even when you select the model you use the entire model or do just take a small chunk of that model and so what",
    "start": "151860",
    "end": "158730"
  },
  {
    "text": "this prototype does is that it takes results from computations done and about",
    "start": "158730",
    "end": "164159"
  },
  {
    "text": "eight different models isn't about eight different models sub models constructed from each model and it shows you what",
    "start": "164159",
    "end": "171090"
  },
  {
    "text": "the result of performance search performance would look like if you use any of this and so this is just like a",
    "start": "171090",
    "end": "176760"
  },
  {
    "text": "really simple example of what that interface looks like you select an image you perform your search you can see",
    "start": "176760",
    "end": "182700"
  },
  {
    "text": "metrics about search score not just that you can select different models and then you can look at graphs that help you",
    "start": "182700",
    "end": "189000"
  },
  {
    "text": "compare all of this and say if you're interested in this sort of thing we have like a platform called experiments the",
    "start": "189000",
    "end": "195090"
  },
  {
    "text": "fast world lobster comm and these are all open open source projects or open",
    "start": "195090",
    "end": "201030"
  },
  {
    "text": "source interfaces that you can actually play with for the rest of our work it's we have a subscription service that",
    "start": "201030",
    "end": "207180"
  },
  {
    "text": "anyone can also join so that's a bit of a background on what I do and to today's",
    "start": "207180",
    "end": "213599"
  },
  {
    "text": "agenda which is the exciting part here's what I'm gonna go over so the first thing I want to give an introduction to",
    "start": "213599",
    "end": "219780"
  },
  {
    "text": "ml in the browser so I'll start with some terminology just make sure we're all on the same page and then I'll give",
    "start": "219780",
    "end": "226769"
  },
  {
    "text": "an overview of the tenza for the GS library so it's got two API is the low-level API for linear algebra and",
    "start": "226769",
    "end": "233669"
  },
  {
    "text": "also the high-level layers API that you'd actually want to use to build complex neural networks then finally",
    "start": "233669",
    "end": "240510"
  },
  {
    "text": "look at Hancock GS and so hundred GS is this JavaScript library for prototyping",
    "start": "240510",
    "end": "246150"
  },
  {
    "text": "gesture recognition completely in the browser which I developed this novices project and I'll go through how I",
    "start": "246150",
    "end": "252569"
  },
  {
    "text": "actually built this thing and made it available okay",
    "start": "252569",
    "end": "258630"
  },
  {
    "start": "256000",
    "end": "584000"
  },
  {
    "text": "why machine learning the browser but Before we jump into that let's let's",
    "start": "258630",
    "end": "263820"
  },
  {
    "text": "review some some least important terminology so the first speaker covered",
    "start": "263820",
    "end": "269370"
  },
  {
    "text": "the bitter DS by just want to make sure you know for those who entered that talk I just want to cover the basics and so",
    "start": "269370",
    "end": "274660"
  },
  {
    "text": "when we talk about artificial intelligence it's a super broad field this is really old this as far back as the 1950s and you",
    "start": "274660",
    "end": "282430"
  },
  {
    "text": "can think of it as just efforts directed towards making machines intelligent and",
    "start": "282430",
    "end": "288670"
  },
  {
    "text": "there are many ways you can do that a sub aspect to that is machine learning which is algorithms that enable machines",
    "start": "288670",
    "end": "295350"
  },
  {
    "text": "independently learn from data and so this idea is pretty powerful because there are a lot of problem spaces that",
    "start": "295350",
    "end": "301540"
  },
  {
    "text": "are software engineers it's almost impossible to write concrete rules for so if we take the classic example of how",
    "start": "301540",
    "end": "307420"
  },
  {
    "text": "do we differentiate a cat from a dog you want to do things like how many legs does he have it has four legs is it a",
    "start": "307420",
    "end": "313390"
  },
  {
    "text": "cat or dog if it has pointy ears it's a cat if it doesn't it's a butt that can really get complex if you have things",
    "start": "313390",
    "end": "319810"
  },
  {
    "text": "like multiple orientations occlusions and and all that sort of thing and so",
    "start": "319810",
    "end": "325630"
  },
  {
    "text": "you want an algorithm that rather than writing rules you shade a bunch of examples and it independently learns the",
    "start": "325630",
    "end": "331870"
  },
  {
    "text": "right patterns examples of these organisms are things like decision trees random forests reinforcement learning",
    "start": "331870",
    "end": "337810"
  },
  {
    "text": "and neural networks and which brings us to the interesting part deep learning so",
    "start": "337810",
    "end": "342850"
  },
  {
    "text": "deep learning is just a special case of machine learning but here the main algorithm we use our neural networks to",
    "start": "342850",
    "end": "351160"
  },
  {
    "text": "define neural networks I like to think of them as just a stack of computational units where you know computational fluid",
    "start": "351160",
    "end": "358000"
  },
  {
    "text": "from one unit to another and I'll give an example over the last few years deep",
    "start": "358000",
    "end": "363040"
  },
  {
    "text": "learning has become wildly popular and there are some reasons for that one of them is that it's one of the only",
    "start": "363040",
    "end": "368590"
  },
  {
    "text": "algorithm where your accuracy skills with data so the more data you have the more likely your model is going to get",
    "start": "368590",
    "end": "375040"
  },
  {
    "text": "more accurate which is a really interesting concept in addition over the last ten years there's been like a lot",
    "start": "375040",
    "end": "381250"
  },
  {
    "text": "of really great advances in neural network or games see you might have heard of things like ResNet inception",
    "start": "381250",
    "end": "388800"
  },
  {
    "text": "that's what image processing might have heard of things like birds for language processing so all of these things had",
    "start": "388800",
    "end": "395320"
  },
  {
    "text": "made neural networks really really popular and the other you're doing trust",
    "start": "395320",
    "end": "401560"
  },
  {
    "text": "in thing about this space is that this algorithms all almost always had the best performance for any given task the next interesting",
    "start": "401560",
    "end": "409449"
  },
  {
    "text": "thing that made this this deeply really interesting is GPUs and so researchers",
    "start": "409449",
    "end": "417129"
  },
  {
    "text": "and Industry practitioners have found ways to make neural networks and deploying or buildings run really fast",
    "start": "417129",
    "end": "423129"
  },
  {
    "text": "and GPUs and so for the rest of the talk whenever I mention AI and machine learning what I'm actually talking",
    "start": "423129",
    "end": "429879"
  },
  {
    "text": "talking about is deep learning and this supervised for most form of deep learning to cover a few more terms that",
    "start": "429879",
    "end": "441159"
  },
  {
    "text": "I'll use as the top progresses I just want to introduce some terms so first is input things like imputes",
    "start": "441159",
    "end": "448629"
  },
  {
    "text": "weights um some unbiased activation functions and output so the diagram you see here is an example of the most",
    "start": "448629",
    "end": "455229"
  },
  {
    "text": "simple neural network you ever see as typically does anyone know the name for this thing yeah anyone anyone yes okay",
    "start": "455229",
    "end": "466360"
  },
  {
    "text": "cool so it's typically called the perceptron is this a simple neural network is fine and everything you see",
    "start": "466360",
    "end": "472870"
  },
  {
    "text": "here is read it's really easy to understand so the first thing is you have here you inputs whatever it is",
    "start": "472870",
    "end": "478389"
  },
  {
    "text": "that's flows into the network the next thing you have is that this input is multiplied by some values called weights",
    "start": "478389",
    "end": "483969"
  },
  {
    "text": "all of that is summed and some constant values added called the bias and finally",
    "start": "483969",
    "end": "489310"
  },
  {
    "text": "you pass all of that through an activation function and then you get your output the beautiful thing here is",
    "start": "489310",
    "end": "494710"
  },
  {
    "text": "that if we select these weights really carefully and we select the bias really carefully and we select the right",
    "start": "494710",
    "end": "500080"
  },
  {
    "text": "activation function we can get this set of computation to kind of represent or",
    "start": "500080",
    "end": "505900"
  },
  {
    "text": "approximate functions that we are interested in so it turns out that this really simple neural network you have",
    "start": "505900",
    "end": "513399"
  },
  {
    "text": "here could approximate things like an end function and/or function or a sole function so the next question that your",
    "start": "513399",
    "end": "520120"
  },
  {
    "text": "mind is how do we select this magical values weights the bias and the",
    "start": "520120",
    "end": "525160"
  },
  {
    "text": "activation function so for the weights and the bias you kind of identified this through a process through the training",
    "start": "525160",
    "end": "531490"
  },
  {
    "text": "process I don't have enough time to go into much detail but I think you hopefully get a bit of the idea",
    "start": "531490",
    "end": "537570"
  },
  {
    "text": "so this is very simple version however it's probably too simple to solve most of the problems we we want to actually",
    "start": "537570",
    "end": "544500"
  },
  {
    "text": "solve in real life and so it changed that what just want very fast way to make the scale dissolve is to add a",
    "start": "544500",
    "end": "551250"
  },
  {
    "text": "bunch of these things to stacked a lot more of this simple networks together and here the terminology that you should",
    "start": "551250",
    "end": "558150"
  },
  {
    "text": "think of is you have your regular impute for any set of computational units that",
    "start": "558150",
    "end": "564060"
  },
  {
    "text": "between the input and the outputs you refer to these things as hidden layers and essentially for any set of layers",
    "start": "564060",
    "end": "570630"
  },
  {
    "text": "where all inputs from one layer are connected to all inputs from the next layer you call those things dense layers",
    "start": "570630",
    "end": "577010"
  },
  {
    "text": "so that's just a set of introductory terminology and so next if we think",
    "start": "577010",
    "end": "586980"
  },
  {
    "start": "584000",
    "end": "900000"
  },
  {
    "text": "about the languages for machine learning typically we'll see languages like",
    "start": "586980",
    "end": "593160"
  },
  {
    "text": "Python are Giulia and MATLAB occasionally you'll see some really brief and amazing individuals who are",
    "start": "593160",
    "end": "600930"
  },
  {
    "text": "actually doing machine learning these languages Java go C or C++ any one of them here okay some really brave",
    "start": "600930",
    "end": "608610"
  },
  {
    "text": "courageous individuals and so one thing you notice about this language is that",
    "start": "608610",
    "end": "614520"
  },
  {
    "text": "their back-end programming languages they're typically high-performance languages and they work really well",
    "start": "614520",
    "end": "620340"
  },
  {
    "text": "because they support things like multi-threading they have really fast io access however is this a real picture",
    "start": "620340",
    "end": "627420"
  },
  {
    "text": "of the landscape of languages that developers actually use and so to learn more about that I went to the 2019 Stack",
    "start": "627420",
    "end": "634380"
  },
  {
    "text": "Overflow survey of 90,000 developers and they were asked this question what programming language do you use the most",
    "start": "634380",
    "end": "641190"
  },
  {
    "text": "and here we see that javascript is a clever answer 67 percent of people actually focus in JavaScript similarly",
    "start": "641190",
    "end": "648360"
  },
  {
    "text": "they ask people if there's a language you don't currently use which of these",
    "start": "648360",
    "end": "654450"
  },
  {
    "text": "languages are you most interested do you want to actually learn and here again we sell a lot of interest in JavaScript",
    "start": "654450",
    "end": "662330"
  },
  {
    "text": "if we look at github the trend is pretty similar for the last ten years javascript representers have been the",
    "start": "662960",
    "end": "668810"
  },
  {
    "text": "most popular approaches trees and there's this really interesting article from a couple of years ago where someone",
    "start": "668810",
    "end": "676550"
  },
  {
    "text": "literally said that you know javascript is eating the entire world and so the idea is that on the backend people are",
    "start": "676550",
    "end": "682220"
  },
  {
    "text": "writing JavaScript server applications using the GS and on the front end people just like things are just like JavaScript you just taken over and so at",
    "start": "682220",
    "end": "690890"
  },
  {
    "text": "this point we know that people love javascript this we don't use it they want to use it and they're using it on",
    "start": "690890",
    "end": "697160"
  },
  {
    "text": "the backend using it on the front end so the idea is can we take JavaScript and can we like merge that when you're on",
    "start": "697160",
    "end": "703040"
  },
  {
    "text": "networks and so most of the time when I talk to people the first thing they're like oh my god this is a bad idea and",
    "start": "703040",
    "end": "711100"
  },
  {
    "text": "when you think about that typically they have a bunch of questions so the first",
    "start": "711100",
    "end": "717110"
  },
  {
    "text": "question is can I really train a neural network in JavaScript can i express ideas like LS CMS dense layers",
    "start": "717110",
    "end": "725920"
  },
  {
    "text": "convolutional layers can I do all of that but only in JavaScript and it turns out that yes you can and so your path to",
    "start": "725920",
    "end": "733459"
  },
  {
    "text": "that is the tensile for J's library so library for building building and training machine learning models completely in JavaScript the next",
    "start": "733459",
    "end": "740900"
  },
  {
    "text": "question that people would ask is related to speed so the first thing is JavaScript",
    "start": "740900",
    "end": "747020"
  },
  {
    "text": "while it's a relatively fast language it wasn't really designed for high performance computing in addition to",
    "start": "747020",
    "end": "753440"
  },
  {
    "text": "that neural networks tend to be a really computing intensive operation and so people wonder can I actually have fast",
    "start": "753440",
    "end": "761089"
  },
  {
    "text": "computation but all is expressed in JavaScript again the answer is yes and",
    "start": "761089",
    "end": "766250"
  },
  {
    "text": "how do you do that you do that again through a tenth of a GS on the browser",
    "start": "766250",
    "end": "771650"
  },
  {
    "text": "tensile for GS provides acceleration using WebGL how many of us are familiar WebGL",
    "start": "771650",
    "end": "777700"
  },
  {
    "text": "awesome so WebGL is this really nice standard that allows accelerated",
    "start": "777700",
    "end": "784040"
  },
  {
    "text": "graphics computing in the browser and what it means here what's relevant here",
    "start": "784040",
    "end": "789709"
  },
  {
    "text": "is that it does have access to a GPU and so if you do have a GPU or graphics card",
    "start": "789709",
    "end": "796040"
  },
  {
    "text": "and machine you can WebGL would let you take advantage of that for accelerated",
    "start": "796040",
    "end": "801960"
  },
  {
    "text": "computer browser tensive will take tens of logistics advantage of that and you get really fast computational inference",
    "start": "801960",
    "end": "808710"
  },
  {
    "text": "or training as you want in the browser on the back end you could use tensorflow with no jest and it gets its",
    "start": "808710",
    "end": "815670"
  },
  {
    "text": "acceleration by binding directly to the tensorflow capi so pretty much similar",
    "start": "815670",
    "end": "820890"
  },
  {
    "text": "performance you get from Python you get that from the GS on the back end and the final question is how much effort is",
    "start": "820890",
    "end": "828090"
  },
  {
    "text": "this and so for many teams it's a make-or-break decision they're worried you know we have a",
    "start": "828090",
    "end": "834480"
  },
  {
    "text": "mission learning team and they spent a lot of time building and training models intensive of Python and so if we want to",
    "start": "834480",
    "end": "840900"
  },
  {
    "text": "use JavaScript what is the effort associated with kind of integration that to our workflow and it turns up turns",
    "start": "840900",
    "end": "846960"
  },
  {
    "text": "out that not much effort and so one of the interesting things is that the tensile for J's API is similar to care",
    "start": "846960",
    "end": "853560"
  },
  {
    "text": "us to the chaos API so chaos is just a framework for training neural network",
    "start": "853560",
    "end": "859230"
  },
  {
    "text": "models so if you're familiar with chaos is an easy path of transition to actually start building models who tend",
    "start": "859230",
    "end": "865230"
  },
  {
    "text": "to the GS the other interesting thing is that if you have models that are already",
    "start": "865230",
    "end": "870540"
  },
  {
    "text": "trained in tens of a Python tensile for GS provides a converter that allows you",
    "start": "870540",
    "end": "875580"
  },
  {
    "text": "to take your train models and then convert that into a web model format that can be loaded into your JavaScript",
    "start": "875580",
    "end": "880890"
  },
  {
    "text": "application now get to that in a little bit more detail as the talk progresses",
    "start": "880890",
    "end": "885920"
  },
  {
    "text": "and so at this point I'm thinking yeah we know that you can do fast computation",
    "start": "885920",
    "end": "891900"
  },
  {
    "text": "we know that the amount of effort to move stance of GS is not that much and they are the benefits that you can get",
    "start": "891900",
    "end": "897690"
  },
  {
    "text": "by actually using tenth of a tenth of a GS and here my top four four reasons",
    "start": "897690",
    "end": "902880"
  },
  {
    "text": "so the first has to do with privacy across the the talks at the contract at",
    "start": "902880",
    "end": "909000"
  },
  {
    "text": "the conference this year it turns out that you probably have heard people talk about data privacy over and over again",
    "start": "909000",
    "end": "914880"
  },
  {
    "text": "and so with running machine learning models in the browser you get the opportunity to offer a really strong",
    "start": "914880",
    "end": "920910"
  },
  {
    "text": "notion of privacy most of the time you find that despite",
    "start": "920910",
    "end": "926130"
  },
  {
    "text": "the best intentions of many software company despite the efforts to protect data data",
    "start": "926130",
    "end": "933060"
  },
  {
    "text": "breeches always occur however with tencel 4GS you can offer a different kind of privacy speech you can say",
    "start": "933060",
    "end": "939540"
  },
  {
    "text": "things like we don't see your data and it never gets to a service as the person",
    "start": "939540",
    "end": "944670"
  },
  {
    "text": "saying things like we see our data but we promise to keep it and keep it safe and so for most software applications in",
    "start": "944670",
    "end": "952800"
  },
  {
    "text": "order to offer your user service you probably need to use their data many times user data is sensitive and so how",
    "start": "952800",
    "end": "959190"
  },
  {
    "text": "about we move the compute to the browser perform all our computation offer a",
    "start": "959190",
    "end": "964650"
  },
  {
    "text": "service and the data never gets to the server the other interesting ideas",
    "start": "964650",
    "end": "972120"
  },
  {
    "text": "around machine learn in the browser it is related to distribution and so at",
    "start": "972120",
    "end": "977760"
  },
  {
    "text": "this point I always like to tell a really simple story um about three years ago I had a few friends who wanted to",
    "start": "977760",
    "end": "983580"
  },
  {
    "text": "get into machine learning and the first step was to install tasks for tensa for the tensorflow software library in",
    "start": "983580",
    "end": "990930"
  },
  {
    "text": "Python and many of them just never got into machine learning because they could not install tensorflow",
    "start": "990930",
    "end": "996470"
  },
  {
    "text": "and so it's really it's a true story and-and-and-and that used to be a really",
    "start": "996470",
    "end": "1002480"
  },
  {
    "text": "complex process however while things have gotten a lot better you can do keep",
    "start": "1002480",
    "end": "1007490"
  },
  {
    "text": "installed tensa for now I can do content install tensive so when it comes to deploying machine learning applications",
    "start": "1007490",
    "end": "1013580"
  },
  {
    "text": "to end-users it can still be a really complex process if you do this in the browser this kind of simplifies that",
    "start": "1013580",
    "end": "1020540"
  },
  {
    "text": "whole workflow there are no installs or drivers no dependency issues it's as simple as going to URL and open a web",
    "start": "1020540",
    "end": "1027110"
  },
  {
    "text": "page and everything just works in addition if you will deploy your your",
    "start": "1027110",
    "end": "1032480"
  },
  {
    "text": "model hosted on NPM you can actually have all the benefits of model hosting Virginia and distribution that comes",
    "start": "1032480",
    "end": "1039380"
  },
  {
    "text": "with loaded or distributing libraries through NPM the next is has to do with",
    "start": "1039380",
    "end": "1047270"
  },
  {
    "text": "latency disease models can be optimized to run really fast and they can run really fast",
    "start": "1047270",
    "end": "1052760"
  },
  {
    "text": "in mobile and the browser and in some use cases it's actually faster to run your model in the browser rather than",
    "start": "1052760",
    "end": "1059240"
  },
  {
    "text": "send round-trip requests to a server and then render that request the user in addition for resource",
    "start": "1059240",
    "end": "1065500"
  },
  {
    "text": "constraint constraint regions like Africa and East East East Asia in this",
    "start": "1065500",
    "end": "1071110"
  },
  {
    "text": "regions you really cannot rely on the internet connectivity there and so it's a much better user experience to",
    "start": "1071110",
    "end": "1077679"
  },
  {
    "text": "download all all of the model locally to the device and then offer a smooth user",
    "start": "1077679",
    "end": "1082780"
  },
  {
    "text": "experience that doesn't depend on constant internet connection and then finally the browser is designed for",
    "start": "1082780",
    "end": "1089559"
  },
  {
    "text": "interactive experiences and machine learning can supercharge that and I'll show a few examples in a moment with",
    "start": "1089559",
    "end": "1096309"
  },
  {
    "text": "tens 4GS you can build models on the fly you can use rich user data available in",
    "start": "1096309",
    "end": "1102370"
  },
  {
    "text": "the browser or camera the camera sensors as possible you can retrain existing models and you can also enable a really",
    "start": "1102370",
    "end": "1109630"
  },
  {
    "text": "dynamic behavior and there there are applications for these in ml education",
    "start": "1109630",
    "end": "1114790"
  },
  {
    "text": "retail advertising arts entertainment and gaming so before I proceed I want to",
    "start": "1114790",
    "end": "1120280"
  },
  {
    "text": "give a few concrete business use cases of how have some some industries are",
    "start": "1120280",
    "end": "1125470"
  },
  {
    "text": "already using tens of GS an example is Airbnb something related to privacy",
    "start": "1125470",
    "end": "1131920"
  },
  {
    "text": "preserving sensitive content detection so as part of the user onboarding process they will ask the user to upload",
    "start": "1131920",
    "end": "1138250"
  },
  {
    "text": "an image and they have observed that in some cases uses my up upload images that",
    "start": "1138250",
    "end": "1143770"
  },
  {
    "text": "contain sensitive content like their driver's license and other sort of images and so what they've done here is",
    "start": "1143770",
    "end": "1149050"
  },
  {
    "text": "that they've put in a test for DES model that writing browser will tell the user hi your image contains sensitive content",
    "start": "1149050",
    "end": "1155710"
  },
  {
    "text": "we haven't seen it but we can offer the services of towing that you likely have sensitive content and you probably",
    "start": "1155710",
    "end": "1162010"
  },
  {
    "text": "should use another photograph another interesting library here is a nest of",
    "start": "1162010",
    "end": "1167530"
  },
  {
    "text": "NSFW GS where it allows you is a JavaScript library library and lets you",
    "start": "1167530",
    "end": "1174309"
  },
  {
    "text": "check if an image contains indecent content nudity and all of that but right then the browser without",
    "start": "1174309",
    "end": "1181300"
  },
  {
    "text": "sending that image or that content to any back-end server another interesting example I like is a",
    "start": "1181300",
    "end": "1188500"
  },
  {
    "text": "slide from the recently concluded test for world con",
    "start": "1188500",
    "end": "1193730"
  },
  {
    "text": "we're a team Mada face they had created",
    "start": "1193730",
    "end": "1198950"
  },
  {
    "text": "a JavaScript application with a footprint of about 1.8 megabytes and it",
    "start": "1198950",
    "end": "1204470"
  },
  {
    "text": "does virtual try ons in real time and so this is all integrated into the whatsapp",
    "start": "1204470",
    "end": "1209900"
  },
  {
    "text": "mini chat and one thing you should notice is that it works really well and so the hair color or the lady in the",
    "start": "1209900",
    "end": "1215660"
  },
  {
    "text": "image is changed in real time and it works as fast as 25 frames per second so this is a really fantastic example of",
    "start": "1215660",
    "end": "1223240"
  },
  {
    "text": "optimisation and performing machine learning in the browser in real time and",
    "start": "1223240",
    "end": "1229730"
  },
  {
    "text": "some of you might have seen a neural network playground which is released by the Google tensor 4GS team and just lets",
    "start": "1229730",
    "end": "1236840"
  },
  {
    "text": "you interactively learn about how machine learning works work you do data sets and different problems ok so now",
    "start": "1236840",
    "end": "1244760"
  },
  {
    "start": "1242000",
    "end": "1510000"
  },
  {
    "text": "that we have a pretty good idea you know good examples of tense 4GS when it works",
    "start": "1244760",
    "end": "1251720"
  },
  {
    "text": "and why you might want to use it let's dive a little bit more into how you actually get the stuff done and for that",
    "start": "1251720",
    "end": "1258860"
  },
  {
    "text": "we'll look through the tensile for GS API and so what can you do with tens of",
    "start": "1258860",
    "end": "1265550"
  },
  {
    "text": "GS so the first thing you can do is you can offer models and so it means you can compose compose your models define how",
    "start": "1265550",
    "end": "1274970"
  },
  {
    "text": "many layers you want define things like the type of blocks within your model you",
    "start": "1274970",
    "end": "1280160"
  },
  {
    "text": "can train this model test it and perform inference all in JavaScript and you can do this but in the backend in the GS and",
    "start": "1280160",
    "end": "1286310"
  },
  {
    "text": "you could do this in the browser and so I kind of think of this as something called the online flu the next thing you",
    "start": "1286310",
    "end": "1292730"
  },
  {
    "text": "can do with tencel 4GS is you can import between models for inference you trained",
    "start": "1292730",
    "end": "1298460"
  },
  {
    "text": "with your favorite computer environment GP clusters TP clusters you export your",
    "start": "1298460",
    "end": "1303680"
  },
  {
    "text": "model and then important to get into your JavaScript application and I'd like",
    "start": "1303680",
    "end": "1308960"
  },
  {
    "text": "to think of these as the offline flow so you can offline import import the model",
    "start": "1308960",
    "end": "1313990"
  },
  {
    "text": "and then you run inference and then finally we have the hybrid flow where",
    "start": "1313990",
    "end": "1320090"
  },
  {
    "text": "you probably train offline we import the model into your JavaScript application and then you can also use look",
    "start": "1320090",
    "end": "1326970"
  },
  {
    "text": "all data from from the environment and then fine tune that model and make it just a little better so that's more like",
    "start": "1326970",
    "end": "1333240"
  },
  {
    "text": "the hybrids flow some one thing that can be slightly confusing about tensile GS",
    "start": "1333240",
    "end": "1339570"
  },
  {
    "text": "is the fact that it runs in two different environments and so the first is the browser front ends if really",
    "start": "1339570",
    "end": "1345120"
  },
  {
    "text": "resource constrained environment and second is the GS which is a complete a",
    "start": "1345120",
    "end": "1350370"
  },
  {
    "text": "complete server environment and you can do a lot more there so I'll talk a little bit about what these two",
    "start": "1350370",
    "end": "1355950"
  },
  {
    "text": "environments look like so with the browser you can import tensile 4GS into",
    "start": "1355950",
    "end": "1362190"
  },
  {
    "text": "these but the first is that you could import import it using a script tag just like you would do it let's say jQuery",
    "start": "1362190",
    "end": "1368880"
  },
  {
    "text": "and you can also import it using NPM and so you can do NPA npm install tensile GS",
    "start": "1368880",
    "end": "1375900"
  },
  {
    "text": "and then include that in build frameworks and tools like reactive UGS",
    "start": "1375900",
    "end": "1381860"
  },
  {
    "text": "again in the browser accelerations achieved using WebGL and tensors are",
    "start": "1381860",
    "end": "1387780"
  },
  {
    "text": "implemented as shader programs and so that way if you have a GP available on",
    "start": "1387780",
    "end": "1393150"
  },
  {
    "text": "on that device all of the computation can be performed on the GPU the other",
    "start": "1393150",
    "end": "1399990"
  },
  {
    "text": "deployment environment is not GS and you install tents for GS using NPM install",
    "start": "1399990",
    "end": "1406909"
  },
  {
    "text": "so if you want just the CPU version you're using NPM install TF GS node and",
    "start": "1406909",
    "end": "1413280"
  },
  {
    "text": "if you have a GPU you do NPM install TF GS or GPU the only caveat here is that",
    "start": "1413280",
    "end": "1420390"
  },
  {
    "text": "right now similars the python api it's only it will only take advantage of",
    "start": "1420390",
    "end": "1426059"
  },
  {
    "text": "cuda enabled GPU cores and so if your GP is not an in video cuda in the world",
    "start": "1426059",
    "end": "1432059"
  },
  {
    "text": "core you probably can use it and then for acceleration is just provides",
    "start": "1432059",
    "end": "1437850"
  },
  {
    "text": "bindings to the low-level tensorflow C binary so that way you get fairly similar performance to what you",
    "start": "1437850",
    "end": "1444299"
  },
  {
    "text": "get from from Python so this is an overall picture of the the tens 4GS",
    "start": "1444299",
    "end": "1450870"
  },
  {
    "text": "ecosystem at the bottom we have the GS and the browser which is the two main deployment environments and on top of",
    "start": "1450870",
    "end": "1457590"
  },
  {
    "text": "that we have the two API that it's support the low level of API and the layers API",
    "start": "1457590",
    "end": "1463960"
  },
  {
    "text": "and so for the rest of the talk I'll walk through three examples the first is how you can use the low level of API to",
    "start": "1463960",
    "end": "1472070"
  },
  {
    "text": "fit a polynomial function so we have if you have a polynomial function how can",
    "start": "1472070",
    "end": "1477770"
  },
  {
    "text": "we create like a low level optimized optimizes to learn what that function",
    "start": "1477770",
    "end": "1484340"
  },
  {
    "text": "looks like the second thing I'll talk about is how we can build a two-layer auto-encoder which is a type of neural",
    "start": "1484340",
    "end": "1491090"
  },
  {
    "text": "network in the browser and while preparing for this talk I cannot spend some time building an interesting demo",
    "start": "1491090",
    "end": "1498350"
  },
  {
    "text": "that kind of shows out this idea which I'm really excited to show you guys and then finally how can we take a model",
    "start": "1498350",
    "end": "1504920"
  },
  {
    "text": "that's been trained offline and then import that and then use that in JavaScript ok so which because the",
    "start": "1504920",
    "end": "1513080"
  },
  {
    "text": "low-level ops API my suggestion is that you use with caution and only use it if",
    "start": "1513080",
    "end": "1518900"
  },
  {
    "text": "you really know what you're doing and so let's consider this use case we have a function a polynomial function f",
    "start": "1518900",
    "end": "1526310"
  },
  {
    "text": "of X is equal to ax squared plus BX plus C and in this case we want to learn the",
    "start": "1526310",
    "end": "1531410"
  },
  {
    "text": "parameters a B and C so how we're going to go ahead and implement that",
    "start": "1531410",
    "end": "1536600"
  },
  {
    "text": "intensified yes so the first thing we want to do is we want to import a tensor for J's library we want to also specify",
    "start": "1536600",
    "end": "1544010"
  },
  {
    "text": "the variables were interested in learning their parameters and here we define them as tensors we initialize",
    "start": "1544010",
    "end": "1550790"
  },
  {
    "text": "them with a value of 0.1 then we express the function is f of X is equal to ax",
    "start": "1550790",
    "end": "1558560"
  },
  {
    "text": "squared plus BX plus C and this is this is what the API syntax looks like the",
    "start": "1558560",
    "end": "1568730"
  },
  {
    "text": "next thing we want to do is given our data want to find ways to automatically identify a loss which is like the",
    "start": "1568730",
    "end": "1576320"
  },
  {
    "text": "difference between what our model predicts and the actual ground truth level so we create a loss function which",
    "start": "1576320",
    "end": "1583790"
  },
  {
    "text": "is based on mean square error so we get the difference between the subtraction",
    "start": "1583790",
    "end": "1589010"
  },
  {
    "text": "of the predictions and flip and under actual level squared computer mean and then we create an",
    "start": "1589010",
    "end": "1595460"
  },
  {
    "text": "optimizer which is just a function to tell to give some signal about how to update our parameters as training",
    "start": "1595460",
    "end": "1602540"
  },
  {
    "text": "progresses then we run all of these to through a given number of epochs and the",
    "start": "1602540",
    "end": "1609710"
  },
  {
    "text": "good thing is that each time we call optimizes that minimize it kind of updates the parameters we're interested",
    "start": "1609710",
    "end": "1615590"
  },
  {
    "text": "in learning so that's the we fast overview of the layers API all of the of",
    "start": "1615590",
    "end": "1622520"
  },
  {
    "start": "1616000",
    "end": "2118000"
  },
  {
    "text": "the low-level ops API so the next thing we want to we're going to talk about",
    "start": "1622520",
    "end": "1627650"
  },
  {
    "text": "with fast is the high level layers API so two things is the recommended API is",
    "start": "1627650",
    "end": "1636050"
  },
  {
    "text": "for building neural networks and it's really similar in spirit to the class library so for those who haven't used",
    "start": "1636050",
    "end": "1643640"
  },
  {
    "text": "Charis Charis is this really well-designed API for composing and training neural networks and so it gives",
    "start": "1643640",
    "end": "1649940"
  },
  {
    "text": "a really nice way to think about you know the components in your network and a really good way to express these",
    "start": "1649940",
    "end": "1656330"
  },
  {
    "text": "components and actual code ok so to illustrate the API I'd like us to walk",
    "start": "1656330",
    "end": "1664460"
  },
  {
    "text": "through the process of building something called an autoencoder so an autoencoder is a neural network that has two parts typically it's being",
    "start": "1664460",
    "end": "1671810"
  },
  {
    "text": "used for dimensionality reduction and a use cases that imagine that we have I",
    "start": "1671810",
    "end": "1677960"
  },
  {
    "text": "impute and it's 15 variables and we want to compress that into just to the two",
    "start": "1677960",
    "end": "1683540"
  },
  {
    "text": "variables that represent all of that in yeah in all of that all of the impute 15 variables so the two parts the first",
    "start": "1683540",
    "end": "1691760"
  },
  {
    "text": "part of the neural network is called an encoder it takes the high dimensions 15 and its goal is to output two values",
    "start": "1691760",
    "end": "1698600"
  },
  {
    "text": "which is called the bottleneck and you know the other requirement is that it",
    "start": "1698600",
    "end": "1705560"
  },
  {
    "text": "should learn a meaningful compression such that we can also extract or compute",
    "start": "1705560",
    "end": "1713840"
  },
  {
    "text": "the original input just from that bottleneck representation and so that's exactly what the decoder part of the",
    "start": "1713840",
    "end": "1720020"
  },
  {
    "text": "dinner neural network does it takes this input it takes this bottleneck that has been generated by the encoder",
    "start": "1720020",
    "end": "1725970"
  },
  {
    "text": "and it learns to reconstruct the original in peaceful form from that bottleneck and so one interesting thing",
    "start": "1725970",
    "end": "1733470"
  },
  {
    "text": "is that this whole model this auto encoder has been applied for the task of anomaly detection so the goal here is it",
    "start": "1733470",
    "end": "1740400"
  },
  {
    "text": "to be if we have some normal data and we can learn this this mapping from inputs",
    "start": "1740400",
    "end": "1745440"
  },
  {
    "text": "to bottlenecks small dimension then from small dimension to output if we train these on normal datasets that means",
    "start": "1745440",
    "end": "1752250"
  },
  {
    "text": "every time we fit in some new data and we perform a decoding we get an output",
    "start": "1752250",
    "end": "1759120"
  },
  {
    "text": "then we should get about the same thing and so how does this how is this",
    "start": "1759120",
    "end": "1766290"
  },
  {
    "text": "relevant to our normal detection and so if we train on normal data we get output",
    "start": "1766290",
    "end": "1772140"
  },
  {
    "text": "that's similar to the in peace whenever we have an anomaly a data said that this model has never seen if it goes into the",
    "start": "1772140",
    "end": "1778890"
  },
  {
    "text": "network and we try to reconstruct the output we will get something that's really really different and that's",
    "start": "1778890",
    "end": "1784320"
  },
  {
    "text": "called high reconstruction error and depending on the size of this era of reconstruction we can then flag stuff as",
    "start": "1784320",
    "end": "1790260"
  },
  {
    "text": "normal is not and so the idea is if we have normal data let's say if we have no",
    "start": "1790260",
    "end": "1798420"
  },
  {
    "text": "more data we have like an air of 0.8 and if you have on all the data we have our",
    "start": "1798420",
    "end": "1804360"
  },
  {
    "text": "air of 0.2 or the vice versa and we can set some kind of threshold walls here",
    "start": "1804360",
    "end": "1809580"
  },
  {
    "text": "when the reconstruction error is beyond this level then with like this this be a",
    "start": "1809580",
    "end": "1814680"
  },
  {
    "text": "lesson normally so how do we express all of this in in JavaScript so if you recall",
    "start": "1814680",
    "end": "1824430"
  },
  {
    "text": "we have an input layer which is 15 units we have a hidden layer we have an input",
    "start": "1824430",
    "end": "1830280"
  },
  {
    "text": "we have we passed it through dense layer that's 15 units we pass that through",
    "start": "1830280",
    "end": "1835410"
  },
  {
    "text": "another dense layer at seven units we have a bottleneck layer which is two units and then that composes our encoder",
    "start": "1835410",
    "end": "1841770"
  },
  {
    "text": "and then check other parts of the decoder to express this in in in code we",
    "start": "1841770",
    "end": "1849350"
  },
  {
    "text": "specify our inputs and on the left if we're going to use tensorflow Python and",
    "start": "1849350",
    "end": "1855150"
  },
  {
    "text": "Karass that's exactly how we do it in physical shape with specified number each the interesting thing that it's almost a",
    "start": "1855150",
    "end": "1862230"
  },
  {
    "text": "one-on-one conversion if you do that in Tesla yes so to specify a next layer we",
    "start": "1862230",
    "end": "1869040"
  },
  {
    "text": "have a 15 unit dense layer this is exactly how Dayton Python left and this",
    "start": "1869040",
    "end": "1874350"
  },
  {
    "text": "is how we'll do it in JavaScript on the right so we can see it's almost a one-on-one maken again we have as",
    "start": "1874350",
    "end": "1880290"
  },
  {
    "text": "opposed to just using games in Python we have TF totally as dance we specify units our specify activation function",
    "start": "1880290",
    "end": "1888110"
  },
  {
    "text": "similarly next layer of 15 they are dancing it's very very similar between",
    "start": "1888110",
    "end": "1893190"
  },
  {
    "text": "chaos and Python and then finally a bottleneck layer which we refer to as a",
    "start": "1893190",
    "end": "1899070"
  },
  {
    "text": "year which we also add to a model so the",
    "start": "1899070",
    "end": "1904470"
  },
  {
    "text": "other interesting thing is that in Python chaos we can easily do something called a model dot summary and it kind",
    "start": "1904470",
    "end": "1910919"
  },
  {
    "text": "of prints out all of the configuration of a model the exact same method is",
    "start": "1910919",
    "end": "1916380"
  },
  {
    "text": "available in JavaScript and that way you can compare if what you have in JavaScript is really equivalent to what",
    "start": "1916380",
    "end": "1921600"
  },
  {
    "text": "you've built in Python Macross and this is a really useful tool and so as part of this part of preparing for this talk",
    "start": "1921600",
    "end": "1929190"
  },
  {
    "text": "I built something core a normally detection model and so the data set here",
    "start": "1929190",
    "end": "1935130"
  },
  {
    "text": "is examples of hot reads HTG signals and the idea is that we have some normal",
    "start": "1935130",
    "end": "1940740"
  },
  {
    "text": "signals and then he'll also have a bunch of abnormal signals so the normal signals angry I am blue",
    "start": "1940740",
    "end": "1948480"
  },
  {
    "text": "and the abnormal signals angry and so here we have some levels for our train data we also have a test data where we",
    "start": "1948480",
    "end": "1954840"
  },
  {
    "text": "didn't have any levels and then the goal is that right in the browser we can",
    "start": "1954840",
    "end": "1960419"
  },
  {
    "text": "train a model such that a test time when we select a specific signal it can tell",
    "start": "1960419",
    "end": "1966690"
  },
  {
    "text": "us if this is this signal is actually normal it's likely abnormal in addition",
    "start": "1966690",
    "end": "1973260"
  },
  {
    "text": "to that because the browser is super interactive we can do things like plot histograms of the reconstruction error",
    "start": "1973260",
    "end": "1979530"
  },
  {
    "text": "and what you see here is that abnormal data has a reconstruction error that's",
    "start": "1979530",
    "end": "1987240"
  },
  {
    "text": "mostly between one and 1.04 and normal data has a reconstruction error does",
    "start": "1987240",
    "end": "1992520"
  },
  {
    "text": "which in open 95 on 1 and if we put a threshold right at 1 mark then we can",
    "start": "1992520",
    "end": "1998370"
  },
  {
    "text": "easily separate an awful normal and we can also visualize the visualize the",
    "start": "1998370",
    "end": "2006860"
  },
  {
    "text": "parameters learned in the bottleneck layer and the goal is that you know we want to see that there are linearly",
    "start": "2006860",
    "end": "2012380"
  },
  {
    "text": "separable differences between our normal data and abnormal data so it regards the",
    "start": "2012380",
    "end": "2019310"
  },
  {
    "text": "speed I did some benchmarking so how does how fast is in France in in Python",
    "start": "2019310",
    "end": "2025430"
  },
  {
    "text": "in the GS and in the browser and how fast is training in Python in the GS and",
    "start": "2025430",
    "end": "2031280"
  },
  {
    "text": "the browser and so what we have here is that I trained 2600 data points for",
    "start": "2031280",
    "end": "2037130"
  },
  {
    "text": "total cycle of 20 pox and we can see that Kara's Python has the best",
    "start": "2037130",
    "end": "2042890"
  },
  {
    "text": "performance for training times about 11.3 seconds the next best performance",
    "start": "2042890",
    "end": "2048320"
  },
  {
    "text": "comes from the GS which is node but JavaScript but using the C bindings and",
    "start": "2048320",
    "end": "2054409"
  },
  {
    "text": "then finally it takes the longest time in the browser so this is not exactly this was completely unexpected",
    "start": "2054410",
    "end": "2060830"
  },
  {
    "text": "the surprising interesting part was that when it was time for inference I ran in",
    "start": "2060830",
    "end": "2066230"
  },
  {
    "text": "France and 500 data points we see that chaos Python back-end has pretty okay",
    "start": "2066230",
    "end": "2073419"
  },
  {
    "text": "wrong time tens full GS node has takes even more time but then the browser has the best",
    "start": "2073419",
    "end": "2081560"
  },
  {
    "text": "performance and so one thing this is probably surprising to all of you but",
    "start": "2081560",
    "end": "2086600"
  },
  {
    "text": "there's a good explanation for this and so I run all of this benchmarks on my macbook computer so it turns out that my",
    "start": "2086600",
    "end": "2093919"
  },
  {
    "text": "macbook computer actually has a GPU a graphics card however it's not a critter enabled graphics card so what that means",
    "start": "2093919",
    "end": "2101150"
  },
  {
    "text": "is that back-end tends to flow is unable to take advantage of that but in the browser using WebGL we are able to",
    "start": "2101150",
    "end": "2108110"
  },
  {
    "text": "accelerate that computing that's why we have faster inference in the browser of course if I had a kid or enable",
    "start": "2108110",
    "end": "2114470"
  },
  {
    "text": "machine it's probably being much faster on the back okay so this is the last section of this",
    "start": "2114470",
    "end": "2123170"
  },
  {
    "start": "2118000",
    "end": "2418000"
  },
  {
    "text": "talk and essentially I'm gonna walk you guys through hundred GS so what is time",
    "start": "2123170",
    "end": "2128960"
  },
  {
    "text": "tracked yes contract yes is it's pretty simple giving an image predictive location the",
    "start": "2128960",
    "end": "2135499"
  },
  {
    "text": "bounding box of all hands that exist in this image underneath it uses a convolutional neural network for object",
    "start": "2135499",
    "end": "2141799"
  },
  {
    "text": "detection and all of this is bundled into bundled winter and a JavaScript",
    "start": "2141799",
    "end": "2148130"
  },
  {
    "text": "library that allows any developer to actually just import the library and writing the browser without in the",
    "start": "2148130",
    "end": "2154640"
  },
  {
    "text": "installation we can actually start tracking the locational hands in an image and it's also open source and so",
    "start": "2154640",
    "end": "2161630"
  },
  {
    "text": "what does that look like the only thing you need to do is you need to import the library and so it's hosted on jazz",
    "start": "2161630",
    "end": "2168109"
  },
  {
    "text": "deliver turns out that if you have your model deployed and NPN you can get",
    "start": "2168109",
    "end": "2173809"
  },
  {
    "text": "access to that the GSD deliver which is a content delivery network will",
    "start": "2173809",
    "end": "2179749"
  },
  {
    "text": "automatically serve serve your assets and so the only thing you need to do is",
    "start": "2179749",
    "end": "2185329"
  },
  {
    "text": "you need to load the model once it's loaded you can call the detect method and then they would return a JSON JSON",
    "start": "2185329",
    "end": "2192559"
  },
  {
    "text": "object that contains the location of hands in that image so this is what the results of that call looks like so you",
    "start": "2192559",
    "end": "2198170"
  },
  {
    "text": "get bounding box XY degree from the height name of the class which is hand and also some confidence but it says you",
    "start": "2198170",
    "end": "2204980"
  },
  {
    "text": "know I'm 0.5% confident is a handle dislocation of 0.9 percent confident",
    "start": "2204980",
    "end": "2210349"
  },
  {
    "text": "this handle dislocation so how did I build this so it's the typical process",
    "start": "2210349",
    "end": "2216400"
  },
  {
    "text": "machine learning process we start with collecting some data we train the model",
    "start": "2216400",
    "end": "2222859"
  },
  {
    "text": "in this case I use the tenth floor object detection API and then you convert that model into the web model",
    "start": "2222859",
    "end": "2229730"
  },
  {
    "text": "format using the test for cover and then bundle that into a web application so",
    "start": "2229730",
    "end": "2236119"
  },
  {
    "text": "starting with data assembly I started with a dataset called ego hands and so this dataset has its it's about 4,600",
    "start": "2236119",
    "end": "2245720"
  },
  {
    "text": "images of of hands he male hands from the egocentric viewpoints and so on I put on a",
    "start": "2245720",
    "end": "2251270"
  },
  {
    "text": "Google glass video vo device and had recorded a bunch of examples of people",
    "start": "2251270",
    "end": "2257740"
  },
  {
    "text": "performing different activities while looking down towards their hands the whole idea is that there isn't code that",
    "start": "2257740",
    "end": "2263960"
  },
  {
    "text": "converted the original labels which were polygons covered leaders into bounding boxes I didn't exported that into tents food",
    "start": "2263960",
    "end": "2271270"
  },
  {
    "text": "the TF records format required by tensor for training models and so the first",
    "start": "2271270",
    "end": "2278600"
  },
  {
    "text": "step is to convert your images into the tenth floor across form art for each image there's some metadata the list of",
    "start": "2278600",
    "end": "2285920"
  },
  {
    "text": "bounding boxes and levels I trained this using the tents for object detection API and so it's just a collection of code",
    "start": "2285920",
    "end": "2292670"
  },
  {
    "text": "that just makes it a little easier to perform transfer learning for the task of object detection it's an open-source",
    "start": "2292670",
    "end": "2298670"
  },
  {
    "text": "project and so I really recommend you used to look it up if you're interested in object detection problems so because",
    "start": "2298670",
    "end": "2306500"
  },
  {
    "text": "this was gonna run in the browser I selected mobile net SSD which is one of the fastest models available for for",
    "start": "2306500",
    "end": "2313490"
  },
  {
    "text": "object detection and once I had all of this trained I trained this using a cloud a cloud GPU cluster was I had all",
    "start": "2313490",
    "end": "2322700"
  },
  {
    "text": "of this done I exported the results of the resultant model as a state model the",
    "start": "2322700",
    "end": "2329810"
  },
  {
    "text": "next step was to find a way to get this model into tens 4GS and for that I used the tents 4GS converter and so to use",
    "start": "2329810",
    "end": "2338270"
  },
  {
    "text": "that converted all you need to do is to install install it in Python people install test 4GS then you can run the",
    "start": "2338270",
    "end": "2346130"
  },
  {
    "text": "tents for GS converter command from the command line and you need to supply",
    "start": "2346130",
    "end": "2351140"
  },
  {
    "text": "things like the location of the model the input format the output format the",
    "start": "2351140",
    "end": "2358220"
  },
  {
    "text": "good thing here is that if you have your it's suppose different tensile for",
    "start": "2358220",
    "end": "2364369"
  },
  {
    "text": "formats and so if you have your model training class you can import that to using you can import that if you also",
    "start": "2364369",
    "end": "2371600"
  },
  {
    "text": "want to use models from tens for hub you could also do that at the end of this",
    "start": "2371600",
    "end": "2377180"
  },
  {
    "text": "process the exported models about eighteen point five megabytes and so in",
    "start": "2377180",
    "end": "2382220"
  },
  {
    "text": "in web terms this is really really huge but in your network terms this is really small and so this only trade-offs that",
    "start": "2382220",
    "end": "2389320"
  },
  {
    "text": "you probably want to make so one other thing that the comfort it does is that it shots your your models into files",
    "start": "2389320",
    "end": "2396400"
  },
  {
    "text": "with a maximum size of 4.2 megabytes just to make it easier to load on the web and at the end of the process I",
    "start": "2396400",
    "end": "2402850"
  },
  {
    "text": "bundled all of this into an NPM library it's hosted on NPM and the good part",
    "start": "2402850",
    "end": "2408520"
  },
  {
    "text": "here is that for libraries you host on NPM you can do things like versioning you can serve it over city and jails",
    "start": "2408520",
    "end": "2415450"
  },
  {
    "text": "deliver and so it's something that's definitely recommended and so here I'll just show some examples of what people",
    "start": "2415450",
    "end": "2421570"
  },
  {
    "start": "2418000",
    "end": "2873000"
  },
  {
    "text": "have built with Henryk GS so this is an interactive exploration for looking",
    "start": "2421570",
    "end": "2427660"
  },
  {
    "text": "through the Maalik chemistry molecules this is a library someone built called",
    "start": "2427660",
    "end": "2434140"
  },
  {
    "text": "Gemma GS where they had used hundred GS to prototype a pinch in some kind of",
    "start": "2434140",
    "end": "2439690"
  },
  {
    "text": "interactions but using the entire human hand and this a really simple",
    "start": "2439690",
    "end": "2446950"
  },
  {
    "text": "application I built where you have a web server website open and you can control",
    "start": "2446950",
    "end": "2452500"
  },
  {
    "text": "a ping-pong game just by waving your hand in front of in front of the camera so this is actually an could pen if you",
    "start": "2452500",
    "end": "2458500"
  },
  {
    "text": "want a good day pop it open you can actually play this game yeah and so",
    "start": "2458500",
    "end": "2463840"
  },
  {
    "text": "here's the part where I do the thing that you're not supposed to do you do a live demo let's see and by the way you",
    "start": "2463840",
    "end": "2473890"
  },
  {
    "text": "can always try it out it's something that's out there so this is a simple",
    "start": "2473890",
    "end": "2480010"
  },
  {
    "text": "react application and so all that's happening here is each time I click an image the model looks at the content of",
    "start": "2480010",
    "end": "2486880"
  },
  {
    "text": "the image and it draws a bounding box around around the location of hands and so for each of these and you can do",
    "start": "2486880",
    "end": "2492940"
  },
  {
    "text": "things like vary the confidence threshold and so what happened what this just says is that each time there's a",
    "start": "2492940",
    "end": "2499330"
  },
  {
    "text": "prediction if the prediction is less than 0.5 if the confidence is less than 0.5 don't don't render that box so if",
    "start": "2499330",
    "end": "2507130"
  },
  {
    "text": "you really move things down they will start to find hands where they're not and you move it to the bottom it finds",
    "start": "2507130",
    "end": "2512710"
  },
  {
    "text": "hands where nothing exists but if you kind of you can find that sweet spot where you can have the coffee their hands you can do the",
    "start": "2512710",
    "end": "2519510"
  },
  {
    "text": "same here and the thing you learn here is that machine learning models are",
    "start": "2519510",
    "end": "2524670"
  },
  {
    "text": "probabilistic there's always a confidence level attached and it's always a good idea to visually",
    "start": "2524670",
    "end": "2530820"
  },
  {
    "text": "communicate that okay so let's make it a little more complex can we spin up video",
    "start": "2530820",
    "end": "2536430"
  },
  {
    "text": "and track hand and so you can actually see that the model is actually looking",
    "start": "2536430",
    "end": "2543120"
  },
  {
    "text": "at the feed for my for my camera and in real time as I move my hands around you",
    "start": "2543120",
    "end": "2548160"
  },
  {
    "text": "can actually see it actually following and and actually tracking that really well and so a simple example is that you",
    "start": "2548160",
    "end": "2555930"
  },
  {
    "text": "could actually connect this as a method of interaction and if i if i with my",
    "start": "2555930",
    "end": "2561480"
  },
  {
    "text": "hands i could actually control this little game i have here and it all runs in real time about 20 20 frames per",
    "start": "2561480",
    "end": "2567840"
  },
  {
    "text": "second you don't have to take my word for it you can just go to the website and actually try it okay so um another",
    "start": "2567840",
    "end": "2576560"
  },
  {
    "text": "model i demo i want to show you real fast and this is something that i probably release in reading the next",
    "start": "2576560",
    "end": "2582720"
  },
  {
    "text": "month or so is a simple interactive experience where you can build an",
    "start": "2582720",
    "end": "2588030"
  },
  {
    "text": "autoencoder so in this case you can add a couple of additional layers especially",
    "start": "2588030",
    "end": "2594060"
  },
  {
    "text": "here we have a an encoder with with twelve minutes ten years five minutes",
    "start": "2594060",
    "end": "2601590"
  },
  {
    "text": "three minutes and another three years and you can compile that model all of this is happening in the browser and you",
    "start": "2601590",
    "end": "2607620"
  },
  {
    "text": "can actually train it and so if we press if we click train we can actually see that you know we are learning to",
    "start": "2607620",
    "end": "2615900"
  },
  {
    "text": "reconstruct input data and we actually see that you know as we optimization",
    "start": "2615900",
    "end": "2621390"
  },
  {
    "text": "progresses we can see the loss or the arrows kind of go down the second",
    "start": "2621390",
    "end": "2627360"
  },
  {
    "text": "interactive graph you have here is a graph of mean square error so what it just says is that as the model has begun",
    "start": "2627360",
    "end": "2633600"
  },
  {
    "text": "to train its its reconstruction error from normal data is write the history",
    "start": "2633600",
    "end": "2640200"
  },
  {
    "text": "gravity on the left and this reconstruction error for normal data is the history gravity on the right and and",
    "start": "2640200",
    "end": "2645750"
  },
  {
    "text": "typically if we find if you set a threshold that's right at this point we can very easy",
    "start": "2645750",
    "end": "2651190"
  },
  {
    "text": "distinguish real phenomena out data and once we have this model trained we can go back to our data and say over here",
    "start": "2651190",
    "end": "2657849"
  },
  {
    "text": "for this data set that I for these data points I have here tell me if is normal abnormal for this data point I have here",
    "start": "2657849",
    "end": "2664990"
  },
  {
    "text": "tell me if it's normal abnormal to give some additional background the data I had here is from a dataset called ECG",
    "start": "2664990",
    "end": "2671680"
  },
  {
    "text": "5000 so just an example of about 3000 discretized exagerate recorded heart",
    "start": "2671680",
    "end": "2679270"
  },
  {
    "text": "rate signals and they are all labeled as either normal or having some kind of defect issues and you could train and",
    "start": "2679270",
    "end": "2685900"
  },
  {
    "text": "also included that learns kind of like tell these things apart okay",
    "start": "2685900",
    "end": "2692280"
  },
  {
    "text": "so right now I've talked about all the beautiful things tensile GS is amazing",
    "start": "2692280",
    "end": "2697329"
  },
  {
    "text": "it works really well but there are some challenges so the first thing challenging you think about is memory",
    "start": "2697329",
    "end": "2704260"
  },
  {
    "text": "management and so thanks for just implement stencils as WebGL textures the",
    "start": "2704260",
    "end": "2710020"
  },
  {
    "text": "implication of this is that you need to explicitly manage your tensors so if you don't delete them explicitly your",
    "start": "2710020",
    "end": "2716980"
  },
  {
    "text": "application just keep just keep them hard in memory the second thing is that the browser's limited its",
    "start": "2716980",
    "end": "2722650"
  },
  {
    "text": "single-threaded and compute heavy operations block the UI you need to think about this all the time that device fragmentation some",
    "start": "2722650",
    "end": "2731349"
  },
  {
    "text": "devices have CPUs some don't have GPUs and sometimes if your device goes into",
    "start": "2731349",
    "end": "2737050"
  },
  {
    "text": "the low-power mode it will disabled GPS so you can get wildly different performance so some good practices try",
    "start": "2737050",
    "end": "2745420"
  },
  {
    "text": "to spend some time optimizing model it might mean that you know if you compose your model you might want to stay away",
    "start": "2745420",
    "end": "2750880"
  },
  {
    "text": "from some compute heavy operations like for 2d convolutions I replace that let's say with depth wise",
    "start": "2750880",
    "end": "2756339"
  },
  {
    "text": "convolutions when I remove post-processing from your model graph you want to explore what all compression",
    "start": "2756339",
    "end": "2764430"
  },
  {
    "text": "proper cheese-like quantization distillation and pruning and you also want to look at auto auto ml or neural",
    "start": "2764430",
    "end": "2772510"
  },
  {
    "text": "architecture search because this can find really efficient energy efficient and device architectures automatically",
    "start": "2772510",
    "end": "2778740"
  },
  {
    "text": "other good practices learn to use asynchronous methods that way you kind",
    "start": "2778740",
    "end": "2784210"
  },
  {
    "text": "of avoid blocking the UI thread completely visually communicate model load and inference latency wherever possible",
    "start": "2784210",
    "end": "2792040"
  },
  {
    "text": "communicate any uncertainty associated with predictions the chrome profiler is",
    "start": "2792040",
    "end": "2798490"
  },
  {
    "text": "your friend that's one great read cannot see the applications hogging up more and more memory and then for more examples",
    "start": "2798490",
    "end": "2805840"
  },
  {
    "text": "on how to design human centered AI products I cannot recommend the Google",
    "start": "2805840",
    "end": "2810910"
  },
  {
    "text": "pair people plus AI guidebook so to conclude here the key takeaways machine",
    "start": "2810910",
    "end": "2817810"
  },
  {
    "text": "learning the browser it's really interesting and it's actually attractive if your use case has to do with privacy",
    "start": "2817810",
    "end": "2824290"
  },
  {
    "text": "if you want easy distribution the latency and interactivity how do you get",
    "start": "2824290",
    "end": "2830950"
  },
  {
    "text": "there you get the using test 4GS it provides an API for ml in JavaScript and",
    "start": "2830950",
    "end": "2836590"
  },
  {
    "text": "supports these three interesting flows online offline and ibrid in addition to",
    "start": "2836590",
    "end": "2841630"
  },
  {
    "text": "is it can be fast as acceleration the browser and also binding through the low-level seat post post API its",
    "start": "2841630",
    "end": "2848740"
  },
  {
    "text": "expressive and it actually plays well with the rest of the 10th floor ecosystem then finally research advances",
    "start": "2848740",
    "end": "2854950"
  },
  {
    "text": "in compression distillation pruning these things make models like run really",
    "start": "2854950",
    "end": "2860440"
  },
  {
    "text": "fast in addition there's some new standards that enabled accelerated",
    "start": "2860440",
    "end": "2865870"
  },
  {
    "text": "computation in the web so I think these two things come together to make this space extremely extremely exciting so",
    "start": "2865870",
    "end": "2873580"
  },
  {
    "start": "2873000",
    "end": "3035000"
  },
  {
    "text": "thank you if you want to look at the source code 400 GS this is the link to it happy to take any questions",
    "start": "2873580",
    "end": "2881340"
  },
  {
    "text": "Thank You Victor that was awesome we have two minutes for questions is there anyone who has one",
    "start": "2887589",
    "end": "2893450"
  },
  {
    "text": "they'd like to pose",
    "start": "2893450",
    "end": "2896890"
  },
  {
    "text": "I think's a great talk well it's pretty clear that you know there are obviously",
    "start": "2906130",
    "end": "2912400"
  },
  {
    "text": "lots of benefits of inference faced with tensorflow GS right at the same time",
    "start": "2912400",
    "end": "2918759"
  },
  {
    "text": "when you think about this online training mode and using tensorflow for",
    "start": "2918759",
    "end": "2923799"
  },
  {
    "text": "training and browser do you feel like we're ready what's your impression there you know rather limitations of signs of",
    "start": "2923799",
    "end": "2931359"
  },
  {
    "text": "a browser is it you don't where we are with this right by oh yeah so that's a",
    "start": "2931359",
    "end": "2939009"
  },
  {
    "text": "really good question for real large models for large data sets you probably",
    "start": "2939009",
    "end": "2946029"
  },
  {
    "text": "do not want to train all of that in the browser and so from my experience and from looking at the industry right now",
    "start": "2946029",
    "end": "2952059"
  },
  {
    "text": "the most popular flow is what I refer to as the offline flow so what most people",
    "start": "2952059",
    "end": "2958450"
  },
  {
    "text": "would is that they'll train their models using their GPU clusters or whatever",
    "start": "2958450",
    "end": "2963549"
  },
  {
    "text": "hardware acceleration is available to them and once they have it at a an accuracy level that they are really",
    "start": "2963549",
    "end": "2969789"
  },
  {
    "text": "comfortable with they'd spend more time doing optimization essentially bringing down the footprint of that model and",
    "start": "2969789",
    "end": "2976150"
  },
  {
    "text": "then finally convert that and perform a difference in the browser so I tend to",
    "start": "2976150",
    "end": "2981160"
  },
  {
    "text": "see more of that and then the next best thing to that is between the model you",
    "start": "2981160",
    "end": "2987099"
  },
  {
    "text": "quantize it to compress it you optimize it you import into the browser and then",
    "start": "2987099",
    "end": "2992410"
  },
  {
    "text": "maybe in the browser you could use user data to kind of fine-tune it so that's not an extremely expensive operation but",
    "start": "2992410",
    "end": "2999970"
  },
  {
    "text": "these are two ways in which people are actually solving this problem or getting this done in the demo I showed you you",
    "start": "2999970",
    "end": "3007109"
  },
  {
    "text": "could actually train the auto encoder from scratch but what I should right now",
    "start": "3007109",
    "end": "3012839"
  },
  {
    "text": "is about 2000 data points it data point is 140 variables so it's not an",
    "start": "3012839",
    "end": "3018869"
  },
  {
    "text": "extremely large data set but it's possible but if you're looking at images things become a lot more complicated and",
    "start": "3018869",
    "end": "3025740"
  },
  {
    "text": "definitely not recommended for training alright that's all we have time for Thank You Victor appreciate it",
    "start": "3025740",
    "end": "3032579"
  },
  {
    "text": "thank you",
    "start": "3032579",
    "end": "3035119"
  }
]