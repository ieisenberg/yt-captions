[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello everybody thanks for coming my",
    "start": "3969",
    "end": "9040"
  },
  {
    "text": "name is Ed Koch Shankar I am from Oracle Java performance team and my everyday",
    "start": "9040",
    "end": "14680"
  },
  {
    "text": "job is to make general faster I am working on always starting from class",
    "start": "14680",
    "end": "19779"
  },
  {
    "text": "libraries and featuring JIT compiler everywhere so right now I'd like to",
    "start": "19779",
    "end": "27640"
  },
  {
    "text": "share experience win with a sound technique which sometimes may be useful",
    "start": "27640",
    "end": "34630"
  },
  {
    "text": "for performance analysis to finding performance issues to do every single ad",
    "start": "34630",
    "end": "40420"
  },
  {
    "text": "so let's start as an order to employee I have to show you this slide in relay we",
    "start": "40420",
    "end": "48640"
  },
  {
    "text": "are presenters from Oracle loves this slide because of it means I could live for you television and it doesn't matter",
    "start": "48640",
    "end": "55390"
  },
  {
    "text": "it's safely okay so I'd like to start",
    "start": "55390",
    "end": "62140"
  },
  {
    "start": "60000",
    "end": "60000"
  },
  {
    "text": "free from one some example and some technical details will be explained later after that example so imagine we",
    "start": "62140",
    "end": "70689"
  },
  {
    "text": "have an application and we realize that our application is slow a couple bit",
    "start": "70689",
    "end": "78219"
  },
  {
    "text": "what does it mean that the application performance our application is slow in",
    "start": "78219",
    "end": "85179"
  },
  {
    "text": "reality there is only one matrix for that is customer satisfied or not and",
    "start": "85179",
    "end": "90880"
  },
  {
    "text": "this metric takes a boolean value it's very difficult to works with boolean values that's why we expand this is",
    "start": "90880",
    "end": "98979"
  },
  {
    "text": "doing some measurement and cetera anyway we examine we have a salmon application",
    "start": "98979",
    "end": "104009"
  },
  {
    "text": "it's slow and we find we found a hot",
    "start": "104009",
    "end": "109209"
  },
  {
    "text": "mess at inside our application for example this one do you know what",
    "start": "109209",
    "end": "117310"
  },
  {
    "text": "dozens me that do it's a matrix",
    "start": "117310",
    "end": "124390"
  },
  {
    "text": "multiplication straightforward from algebra please raise your hand who wrote",
    "start": "124390",
    "end": "131250"
  },
  {
    "text": "such kind of code in university in your college a lot of them okay and right now",
    "start": "131250",
    "end": "139000"
  },
  {
    "text": "please raise your hand who wrote such kind of code after after education in",
    "start": "139000",
    "end": "145810"
  },
  {
    "text": "your work nobody that's that's that's fine because of in reality there is a",
    "start": "145810",
    "end": "154360"
  },
  {
    "text": "very serious issue when you show performance examples on the real code",
    "start": "154360",
    "end": "159850"
  },
  {
    "text": "you show example you show how to solve the problem it start proliferating through Network different people it",
    "start": "159850",
    "end": "167530"
  },
  {
    "text": "became urban legend people start repeat that code but the situation change have",
    "start": "167530",
    "end": "172959"
  },
  {
    "text": "a change shift or Machine change that solution still don't work but it",
    "start": "172959",
    "end": "179890"
  },
  {
    "text": "continuing continue propagating through the code of other guys that's why I love",
    "start": "179890",
    "end": "185019"
  },
  {
    "text": "such kind of symmetrical examples what the problem is that code you know this",
    "start": "185019",
    "end": "191260"
  },
  {
    "text": "method is the hardest method in our application what's the problem here the",
    "start": "191260",
    "end": "196840"
  },
  {
    "text": "key problem that is cubic complexity the complexity of that code is three loops",
    "start": "196840",
    "end": "202510"
  },
  {
    "text": "and it's it's not a very very effective algorithm what usually we do if we be",
    "start": "202510",
    "end": "210400"
  },
  {
    "text": "stuck with some well-known algorithm with well-known things and we have to make it faster what usually you do for",
    "start": "210400",
    "end": "219549"
  },
  {
    "text": "that we are going to Google first",
    "start": "219549",
    "end": "225989"
  },
  {
    "start": "223000",
    "end": "223000"
  },
  {
    "text": "okay well known algorithm which preys",
    "start": "230210",
    "end": "235500"
  },
  {
    "text": "faster you sleep like three and 2.81",
    "start": "235500",
    "end": "241290"
  },
  {
    "text": "it's not a big difference but let's check it in reality let's implement the fastest trust now green 4matic",
    "start": "241290",
    "end": "247100"
  },
  {
    "text": "multiplication and compare okay I did it I measure it is different values for my",
    "start": "247100",
    "end": "254610"
  },
  {
    "text": "matrix and here is a time how many",
    "start": "254610",
    "end": "260489"
  },
  {
    "text": "seconds I need for one multiplication I'm sorry guys I came to show a chart you see",
    "start": "260489",
    "end": "268560"
  },
  {
    "text": "everybody loves charts but for these numbers are so different it won't be visible on a single charge so like for",
    "start": "268560",
    "end": "276930"
  },
  {
    "text": "matrix 8000 by a thousand elements I need almost an hour to do multiplication",
    "start": "276930",
    "end": "283740"
  },
  {
    "text": "in in the first way but when I did the stress no didn't I need less than 5 minutes okay",
    "start": "283740",
    "end": "290880"
  },
  {
    "text": "Goddard is our optimization done what do",
    "start": "290880",
    "end": "297000"
  },
  {
    "text": "you think it's classical way we found a better algorithm and it works and here is a chart to show speed up which we got",
    "start": "297000",
    "end": "303930"
  },
  {
    "text": "at our speed up with certain times for notch matrix let's let's try the other",
    "start": "303930",
    "end": "312090"
  },
  {
    "text": "way not going to bingo but trying to use some some cells okay what I do I collect",
    "start": "312090",
    "end": "320420"
  },
  {
    "start": "318000",
    "end": "318000"
  },
  {
    "text": "some basic have the counters for these matrix multiplications this is exactly",
    "start": "320420",
    "end": "326220"
  },
  {
    "text": "for these size of matrix and what could I see here I thought this details should",
    "start": "326220",
    "end": "333990"
  },
  {
    "text": "be explained later I see that I spent these huge numbers different events for",
    "start": "333990",
    "end": "342770"
  },
  {
    "text": "the whole multiplication and if normalize it per one iteration I mean",
    "start": "342770",
    "end": "348270"
  },
  {
    "text": "iteration of the most inner inner loop I need that most in the loop it's required eight",
    "start": "348270",
    "end": "357160"
  },
  {
    "text": "instruction to be executed because of I need a lot one element the second email",
    "start": "357160",
    "end": "363580"
  },
  {
    "text": "in multiply up way low finally what is",
    "start": "363580",
    "end": "368590"
  },
  {
    "text": "he here I see that inside one iteration of enormous cycle in innermost loop I do",
    "start": "368590",
    "end": "376710"
  },
  {
    "text": "for loading data from memory in that case they load it from from caches and",
    "start": "376710",
    "end": "384130"
  },
  {
    "text": "two of them are cache misses and we know",
    "start": "384130",
    "end": "389890"
  },
  {
    "text": "that cache is a provides fast operation for us but cache miss may be another",
    "start": "389890",
    "end": "397150"
  },
  {
    "text": "good for performance ok I know that the problem may be in",
    "start": "397150",
    "end": "403870"
  },
  {
    "text": "cache misses if half of my memory operations - missed it's a problem I will start another to collect another",
    "start": "403870",
    "end": "411850"
  },
  {
    "text": "statistic and pinpoint exactly place where the problem happened the problem happens definitely here and I didn't",
    "start": "411850",
    "end": "423970"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "show I don't show this on slide but particularly both cache misses are",
    "start": "423970",
    "end": "429970"
  },
  {
    "text": "happened from a loading data from B array do we have some some guys here who",
    "start": "429970",
    "end": "438670"
  },
  {
    "text": "deal with GM internals or something else could you guess why we have to cache",
    "start": "438670",
    "end": "444190"
  },
  {
    "text": "misses here",
    "start": "444190",
    "end": "446760"
  },
  {
    "text": "okay it is short queens I give a hint I want to say that we have",
    "start": "449530",
    "end": "457130"
  },
  {
    "text": "for memory loss one of my relatives from for array a and three memory loss for a",
    "start": "457130",
    "end": "463550"
  },
  {
    "text": "bee and two of them a cache misses I will explain later but after",
    "start": "463550",
    "end": "470210"
  },
  {
    "text": "presentation but maybe you have time to think about so ant our cache miss here",
    "start": "470210",
    "end": "475520"
  },
  {
    "text": "why we get here cache misses because of the most in the loop with the loop on a",
    "start": "475520",
    "end": "480770"
  },
  {
    "text": "k' index and we change that K index so access story be is not cache friendly",
    "start": "480770",
    "end": "486560"
  },
  {
    "text": "cache cache loves when you access for subsequent memory locations it's obvious",
    "start": "486560",
    "end": "493400"
  },
  {
    "text": "it's everywhere it and this this cache",
    "start": "493400",
    "end": "499880"
  },
  {
    "text": "friendliness it's how to independent like Java because each CPU right now has",
    "start": "499880",
    "end": "506270"
  },
  {
    "text": "a cache and every cache is a friendly for for subsequent access for sequential",
    "start": "506270",
    "end": "512000"
  },
  {
    "text": "access it doesn't require for us to know the details of hardware we just have to",
    "start": "512000",
    "end": "517700"
  },
  {
    "text": "understand what's happening here what we could do here how we could fight against",
    "start": "517700",
    "end": "523700"
  },
  {
    "text": "these cache misses yeah exactly",
    "start": "523700",
    "end": "529190"
  },
  {
    "text": "if we change interchange these two loops J and K in that case we'll got",
    "start": "529190",
    "end": "537730"
  },
  {
    "text": "sequential access for array B and nothing wrong will be happened with",
    "start": "537730",
    "end": "543380"
  },
  {
    "text": "visiray a because of eater parades winner a and K in excess and here is the",
    "start": "543380",
    "end": "550790"
  },
  {
    "text": "code here's the difference a little bit difference which may have influenced",
    "start": "550790",
    "end": "557120"
  },
  {
    "text": "late like here we make a soup of two vectors into one local variable s and we",
    "start": "557120",
    "end": "565400"
  },
  {
    "text": "hope and usually those did compiler locate this variable on a register and",
    "start": "565400",
    "end": "570520"
  },
  {
    "text": "only that we we are doing only one write to memory final result here we can't do that in",
    "start": "570520",
    "end": "577250"
  },
  {
    "text": "that case we should load a data from result and store result on each iteration will check out",
    "start": "577250",
    "end": "585230"
  },
  {
    "text": "influence okay here is results of that optimization here is old code old",
    "start": "585230",
    "end": "591850"
  },
  {
    "text": "sequence of new ijk as was written originally and he has a modified AKG",
    "start": "591850",
    "end": "599390"
  },
  {
    "text": "Renan interchange and here is a time he was multiplied here is trash stress and stress an algorithm here straight forth",
    "start": "599390",
    "end": "606350"
  },
  {
    "text": "multiplying again and we could see that the new algorithm is faster than a",
    "start": "606350",
    "end": "613760"
  },
  {
    "text": "Strassen algorithm in spite of the fact that Strassen algorithm obviously has",
    "start": "613760",
    "end": "618890"
  },
  {
    "text": "better theoretical complexity because of",
    "start": "618890",
    "end": "624400"
  },
  {
    "text": "Vigo doesn't show for us the constant which hidden by this because and here we",
    "start": "624400",
    "end": "630620"
  },
  {
    "text": "improve that constant and the other benefits which we get here the Strassen",
    "start": "630620",
    "end": "637100"
  },
  {
    "text": "algorithm doesn't work for small matrixes it's a partition algorithm and at some level it should use some kind of",
    "start": "637100",
    "end": "644480"
  },
  {
    "text": "convention and multiplication Street for multiplication because of it became an",
    "start": "644480",
    "end": "649610"
  },
  {
    "text": "effective and my experience show for Ag care loop ordering the 128 is the",
    "start": "649610",
    "end": "658490"
  },
  {
    "text": "minimum really when a Strassen algorithm a gift performance benefits below it",
    "start": "658490",
    "end": "664010"
  },
  {
    "text": "doesn't work no no effect from that and let's do",
    "start": "664010",
    "end": "670610"
  },
  {
    "text": "later because of stress now very even doesn't depends on the our inner loops",
    "start": "670610",
    "end": "677690"
  },
  {
    "text": "but it meets some basic multiplication aside it means that we could make a structure matrix multiplication over",
    "start": "677690",
    "end": "685150"
  },
  {
    "text": "updated sequence and here's our other",
    "start": "685150",
    "end": "690400"
  },
  {
    "text": "numbers in a second so the final here is",
    "start": "690400",
    "end": "696050"
  },
  {
    "start": "696000",
    "end": "696000"
  },
  {
    "text": "a chart the matrix here for 100 to 18 huge Trustin doesn't work it",
    "start": "696050",
    "end": "702959"
  },
  {
    "text": "doesn't give any performance benefits but here here is original Strathearn",
    "start": "702959",
    "end": "708429"
  },
  {
    "text": "here's improved our lip sequence and here is modified stress and finally we",
    "start": "708429",
    "end": "714220"
  },
  {
    "text": "got four watch matrixes we could get in soon up to 45 times performance boost at",
    "start": "714220",
    "end": "721920"
  },
  {
    "text": "significantly better any question about that example guys I will continue and it",
    "start": "721920",
    "end": "731850"
  },
  {
    "text": "doesn't relate to the topic of our presentation but it's nice example from",
    "start": "731850",
    "end": "738639"
  },
  {
    "text": "other things to talk about performance performance improvements is a non compos dosing if you have function I function",
    "start": "738639",
    "end": "745660"
  },
  {
    "text": "be doing in such composition you could from functional point of view you get a",
    "start": "745660",
    "end": "750730"
  },
  {
    "text": "combined result if you have a performance improvement a performance of human being you combine that you could",
    "start": "750730",
    "end": "757959"
  },
  {
    "text": "not you can get any kind of result you can get the performance benefits some a",
    "start": "757959",
    "end": "764470"
  },
  {
    "text": "plus plus B mark so from a and B even it could be worse and etc right like here",
    "start": "764470",
    "end": "772230"
  },
  {
    "text": "here's a combination of Strathearn and loop interchange approximately the same",
    "start": "772230",
    "end": "778179"
  },
  {
    "text": "but here to small performance improvements given results very huge",
    "start": "778179",
    "end": "784239"
  },
  {
    "text": "performance performance which much like an editable check what will happen later",
    "start": "784239",
    "end": "791249"
  },
  {
    "start": "787000",
    "end": "787000"
  },
  {
    "text": "here is my counters about instructions and cache misses what I see is green the",
    "start": "791249",
    "end": "797889"
  },
  {
    "text": "green color shows where I could see an improvement and I see that we have spent",
    "start": "797889",
    "end": "803679"
  },
  {
    "text": "much less cycles for our matrix multiplication much less instruction",
    "start": "803679",
    "end": "809739"
  },
  {
    "text": "much less data much less cache misses and more stores to date as as predicted",
    "start": "809739",
    "end": "820029"
  },
  {
    "text": "but anyway even we have storing the data 21 cache we have less store aneesa's so",
    "start": "820029",
    "end": "828850"
  },
  {
    "text": "it's good it's a fine optimization it doesn't creates problems for us",
    "start": "828850",
    "end": "834180"
  },
  {
    "text": "and there are English not issues a suspicious thing to which I could see",
    "start": "834180",
    "end": "840870"
  },
  {
    "text": "from that number is this I realize that if I normalize all these numbers by",
    "start": "840870",
    "end": "847860"
  },
  {
    "text": "amount of iteration that internal iteration requires only the single",
    "start": "847860",
    "end": "855440"
  },
  {
    "text": "assembly instruction so I need no data from one away from secondary multiply",
    "start": "855440",
    "end": "862650"
  },
  {
    "text": "them up to the previous value store how",
    "start": "862650",
    "end": "869130"
  },
  {
    "text": "could I do this into this one instruction the cingulate",
    "start": "869130",
    "end": "877440"
  },
  {
    "start": "875000",
    "end": "875000"
  },
  {
    "text": "we got a bit realization because of we were fighting against cache misses and",
    "start": "877440",
    "end": "884970"
  },
  {
    "text": "we did sequential access to elements of memory not even metrics that's the",
    "start": "884970",
    "end": "890430"
  },
  {
    "text": "cleanser accessed elements of memory and we know that such kind of musicians friendly vocations but also sequential",
    "start": "890430",
    "end": "898140"
  },
  {
    "text": "access to memory is friendly for vectorization and if in first case hot",
    "start": "898140",
    "end": "903540"
  },
  {
    "text": "spot can do victories Asian code because of it should load different elements",
    "start": "903540",
    "end": "910290"
  },
  {
    "text": "from different places but here we load a bunch mount of elements array by one",
    "start": "910290",
    "end": "917640"
  },
  {
    "text": "instruction multiply it with SSE operation on x86 okay that's all about",
    "start": "917640",
    "end": "927510"
  },
  {
    "start": "924000",
    "end": "924000"
  },
  {
    "text": "this example and here I'll show general introduction about the sinks of course",
    "start": "927510",
    "end": "933570"
  },
  {
    "text": "as this technique we show it's a not a silver ball and I want to show the",
    "start": "933570",
    "end": "939450"
  },
  {
    "text": "example where it may be useful aware not and again I would like to ask you if you",
    "start": "939450",
    "end": "946980"
  },
  {
    "text": "have a slow application what is your first first step",
    "start": "946980",
    "end": "953330"
  },
  {
    "text": "okay first step we should get an answer for the three questions in a direct",
    "start": "955080",
    "end": "963060"
  },
  {
    "start": "957000",
    "end": "957000"
  },
  {
    "text": "order first of all we should understand what's our problem what creates a",
    "start": "963060",
    "end": "969300"
  },
  {
    "text": "problem for us the second step you shouldn't wear it where is happens and only after that we should think",
    "start": "969300",
    "end": "976380"
  },
  {
    "text": "about how to fix it so we should usually we should start from when entering from profiling the second step and Kunik it's",
    "start": "976380",
    "end": "985620"
  },
  {
    "text": "a general direction and another thing which also useful to know from",
    "start": "985620",
    "end": "991890"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "transmitted disease top-down approach for job for palliative applications",
    "start": "991890",
    "end": "998370"
  },
  {
    "text": "there is no GLA also usually three levels for general we have four levels doesn't matter this is the difference",
    "start": "998370",
    "end": "1006920"
  },
  {
    "text": "between these levels and on higher layers the cost of performance issue much higher so he shouldn't he should be",
    "start": "1006920",
    "end": "1013730"
  },
  {
    "text": "dig into my critique attack shells and think about instruction cache misses and cetera if you just load in huge amount",
    "start": "1013730",
    "end": "1020810"
  },
  {
    "text": "of data from some hardware drive produced in 1995 because of you even",
    "start": "1020810",
    "end": "1029959"
  },
  {
    "text": "won't see that performance issue so we should start from the top we did some",
    "start": "1029959",
    "end": "1037040"
  },
  {
    "start": "1036000",
    "end": "1036000"
  },
  {
    "text": "presentation about that mean my colleagues and we recreated this mind map how to dig into some particular",
    "start": "1037040",
    "end": "1044270"
  },
  {
    "text": "areas in some case but it's impossible to fit it onto slides that I'll show you a link where you could find and read it",
    "start": "1044270",
    "end": "1054040"
  },
  {
    "text": "ok what we are doing will restart the system monitoring we start top-down",
    "start": "1054040",
    "end": "1059690"
  },
  {
    "start": "1055000",
    "end": "1055000"
  },
  {
    "text": "approach we check what happened in the system we understand that we've got a small",
    "start": "1059690",
    "end": "1066440"
  },
  {
    "text": "amount of system time if we have a lot of system time it's a topic of another",
    "start": "1066440",
    "end": "1072110"
  },
  {
    "text": "presentation we check interruption on other problems we check in to tout we",
    "start": "1072110",
    "end": "1079220"
  },
  {
    "text": "check we idle time and finally got it it's only place when we should start to",
    "start": "1079220",
    "end": "1085760"
  },
  {
    "text": "think about our hardware counters is a situation when we reached a high",
    "start": "1085760",
    "end": "1090890"
  },
  {
    "text": "CPU utilization before that is a problem or nozzle analyst is a you just need",
    "start": "1090890",
    "end": "1096740"
  },
  {
    "text": "don't need that tools and that technique and if the high CPU utilization is a",
    "start": "1096740",
    "end": "1103520"
  },
  {
    "text": "place where it could be useful and the key question what does 100 CPU",
    "start": "1103520",
    "end": "1111110"
  },
  {
    "start": "1108000",
    "end": "1108000"
  },
  {
    "text": "utilization means what no no no no okay",
    "start": "1111110",
    "end": "1122450"
  },
  {
    "text": "I say it's a classic consequence of that but what it means if you have one hand",
    "start": "1122450",
    "end": "1129200"
  },
  {
    "text": "on me or 100% CPU utilization yes",
    "start": "1129200",
    "end": "1137809"
  },
  {
    "text": "you just have enough something to do you don't know is it something useful is it",
    "start": "1137809",
    "end": "1144200"
  },
  {
    "text": "effective no you just have enough task to do and cook traditional profiling",
    "start": "1144200",
    "end": "1152600"
  },
  {
    "text": "help in that situation usually no because of profilers show where the",
    "start": "1152600",
    "end": "1158300"
  },
  {
    "text": "problem exists but not why of course if you kill profile you find where you",
    "start": "1158300",
    "end": "1164510"
  },
  {
    "text": "could you can looked into the problem way and you can guess about problems",
    "start": "1164510",
    "end": "1169760"
  },
  {
    "text": "very frequently it works but sometimes not and that is why I",
    "start": "1169760",
    "end": "1175790"
  },
  {
    "text": "suggest to use normal order why way how",
    "start": "1175790",
    "end": "1182200"
  },
  {
    "start": "1182000",
    "end": "1182000"
  },
  {
    "text": "so what the reason of this 160 percent utilization the reason of that the",
    "start": "1182200",
    "end": "1189500"
  },
  {
    "text": "difference we have just a lot of construction a lot of things to do and lower our course completely maybe we",
    "start": "1189500",
    "end": "1197990"
  },
  {
    "text": "have a memory intensive application and we are sitting in our CPU is just waiting loading data from memory pulling",
    "start": "1197990",
    "end": "1205070"
  },
  {
    "text": "data to memory etc but in that case you you also will be see 100% CPU",
    "start": "1205070",
    "end": "1210650"
  },
  {
    "text": "utilization there maybe have a some tricky algorithm which which has a lot",
    "start": "1210650",
    "end": "1216500"
  },
  {
    "text": "of branches a lot of conditions inside and you constantly stock with",
    "start": "1216500",
    "end": "1222260"
  },
  {
    "text": "by applying flashes after branch misprediction you will see on the top level you will see 100% utilization and",
    "start": "1222260",
    "end": "1229340"
  },
  {
    "text": "you you want no details about what happens at etcetera etcetera a lot of things inside CPU when executing",
    "start": "1229340",
    "end": "1238460"
  },
  {
    "text": "instruction here sheepy was told outside is shown as 100% CP a lot that is why so",
    "start": "1238460",
    "end": "1246770"
  },
  {
    "text": "definitely we need hardware counters to understand why our CPU is told stolen or",
    "start": "1246770",
    "end": "1252290"
  },
  {
    "start": "1248000",
    "end": "1248000"
  },
  {
    "text": "not okay just uh the card counters is quite a simple sink its internal in",
    "start": "1252290",
    "end": "1260320"
  },
  {
    "start": "1254000",
    "end": "1254000"
  },
  {
    "text": "hardware profiler inside CPU every CPU I don't know about ability area",
    "start": "1260320",
    "end": "1266090"
  },
  {
    "text": "unfortunately but every CPU nowadays has hardly counters the first appearance of",
    "start": "1266090",
    "end": "1274040"
  },
  {
    "text": "had my counters introduction CPUs it was a pain tomb the first Pentium they had",
    "start": "1274040",
    "end": "1279350"
  },
  {
    "text": "to ven's probably I don't remember exactly but it was so successful that it",
    "start": "1279350",
    "end": "1285049"
  },
  {
    "text": "started developing evaluated later and you should care about a lot of counters",
    "start": "1285049",
    "end": "1293450"
  },
  {
    "text": "so those things this counter just collect events for us and events is that",
    "start": "1293450",
    "end": "1298940"
  },
  {
    "text": "area which we should know which events we want to collect and which went",
    "start": "1298940",
    "end": "1304240"
  },
  {
    "text": "issuance should take care for our applications how to understand which",
    "start": "1304240",
    "end": "1311059"
  },
  {
    "text": "events we need like we could read Intel documentation it's intentionally unreadable because of its very awful",
    "start": "1311059",
    "end": "1318520"
  },
  {
    "text": "stuff I can't explain a lot of events",
    "start": "1318520",
    "end": "1324530"
  },
  {
    "text": "here I just show you that without reading documentation or reading documentation for particular tools when",
    "start": "1324530",
    "end": "1330740"
  },
  {
    "text": "these hundred events at least explain it",
    "start": "1330740",
    "end": "1336290"
  },
  {
    "text": "maybe you should do that anyway it's required unfortunately so which problems",
    "start": "1336290",
    "end": "1343040"
  },
  {
    "start": "1341000",
    "end": "1341000"
  },
  {
    "text": "are existence at around a lot of different events you should understand how how microstructure is wrong how CPU",
    "start": "1343040",
    "end": "1352000"
  },
  {
    "text": "down inside because of its for that era as a total indifference",
    "start": "1352000",
    "end": "1359350"
  },
  {
    "text": "like even inside to see one line of CPUs against may be changed because of",
    "start": "1359350",
    "end": "1366700"
  },
  {
    "text": "hardware vendors are free to do whatever they want here okay how do workers that",
    "start": "1366700",
    "end": "1373300"
  },
  {
    "text": "usually uh it's intentionally designed that counters works in two modes",
    "start": "1373300",
    "end": "1379890"
  },
  {
    "text": "counting mode just we execute our application count count events and got",
    "start": "1379890",
    "end": "1385660"
  },
  {
    "text": "the results of kind of application all selected or in during the selected",
    "start": "1385660",
    "end": "1390820"
  },
  {
    "text": "period of time it's a counting port but what's the most interesting things that all counters could be executed in a",
    "start": "1390820",
    "end": "1397420"
  },
  {
    "text": "sampling mode and if you reach Sumter's halt we raise interrupt and in that case",
    "start": "1397420",
    "end": "1404080"
  },
  {
    "text": "the tool which collect counters for you could find the place where as these",
    "start": "1404080",
    "end": "1409210"
  },
  {
    "text": "little flows this interruption happens and point you the places way and",
    "start": "1409210",
    "end": "1414580"
  },
  {
    "text": "happened that is why we could use profile there are profilers not only so",
    "start": "1414580",
    "end": "1421120"
  },
  {
    "text": "many West application spending time but show you which issues I exist in",
    "start": "1421120",
    "end": "1426430"
  },
  {
    "text": "different place and there's some some issues working with with counters just",
    "start": "1426430",
    "end": "1432730"
  },
  {
    "text": "just leave them like like we have a lot of advances really hundred against for",
    "start": "1432730",
    "end": "1438760"
  },
  {
    "text": "modern CPUs but the amount of hardware counters quite small for for for latest",
    "start": "1438760",
    "end": "1445660"
  },
  {
    "text": "not latest a little with modern CPUs are approximately four hundred counters",
    "start": "1445660",
    "end": "1452740"
  },
  {
    "text": "through fixed which can be changed and four counters which collect different",
    "start": "1452740",
    "end": "1457810"
  },
  {
    "text": "events it creates a problem for our experiments because of either we should",
    "start": "1457810",
    "end": "1463630"
  },
  {
    "text": "execute our application several times to collect different counters and we need",
    "start": "1463630",
    "end": "1468970"
  },
  {
    "text": "repeatability all the reason our situation samples unfortunately not all of them but some",
    "start": "1468970",
    "end": "1474790"
  },
  {
    "text": "tools could do multiplexing for you I thought I could set up for true I need",
    "start": "1474790",
    "end": "1480670"
  },
  {
    "text": "for execution for thirty seconds and I won't collect these thirty counters and",
    "start": "1480670",
    "end": "1486310"
  },
  {
    "text": "the two will change counters small period sometime during the same",
    "start": "1486310",
    "end": "1491500"
  },
  {
    "text": "run but in that case you should should should guarantee that the behavior of",
    "start": "1491500",
    "end": "1496750"
  },
  {
    "text": "your application is the same for a long period of time you call it steady state",
    "start": "1496750",
    "end": "1502919"
  },
  {
    "start": "1502000",
    "end": "1502000"
  },
  {
    "text": "sometimes it's hard to buy and to work with instruction and counters but it's a",
    "start": "1506130",
    "end": "1513760"
  },
  {
    "text": "key it's some national sinks from hardware and you could realize that if",
    "start": "1513760",
    "end": "1519039"
  },
  {
    "text": "for examples to show you that you have a cache miss on multiplication instruction",
    "start": "1519039",
    "end": "1526559"
  },
  {
    "text": "it's not it should be some load before that multiplication because of sometimes",
    "start": "1526559",
    "end": "1531820"
  },
  {
    "text": "cabinet could point exactly so typical usages of hardware counters",
    "start": "1531820",
    "end": "1537220"
  },
  {
    "start": "1534000",
    "end": "1534000"
  },
  {
    "text": "by design it was a to usages first of all as Hardware validation and performance analysis because of hardware",
    "start": "1537220",
    "end": "1543610"
  },
  {
    "text": "vendors loves do performance analysis application and doing their past but in reality in several years after that a",
    "start": "1543610",
    "end": "1551139"
  },
  {
    "text": "lot of other different use disappears in the world there are a lot of them like one timed unique jerky did it",
    "start": "1551139",
    "end": "1558639"
  },
  {
    "text": "who knows about Georgia rocket no no no",
    "start": "1558639",
    "end": "1563769"
  },
  {
    "text": "no no Mission Control is profiler",
    "start": "1563769",
    "end": "1570460"
  },
  {
    "text": "I mean it's run time tuning J rocket corrected have no counter statistic not",
    "start": "1570460",
    "end": "1577149"
  },
  {
    "text": "the profile which is doing but hotspot with sorry its setting different things",
    "start": "1577149",
    "end": "1583750"
  },
  {
    "text": "about code but it collects counters about application behavior and react to",
    "start": "1583750",
    "end": "1589120"
  },
  {
    "text": "Mai's code into new conditions unfortunately it brings some benefits",
    "start": "1589120",
    "end": "1597279"
  },
  {
    "text": "but not so much benefits of a conditional profiling during transport",
    "start": "1597279",
    "end": "1603340"
  },
  {
    "text": "compilations that is why it's not used in hospital for me for me it was very interesting to read a lot of articles",
    "start": "1603340",
    "end": "1609309"
  },
  {
    "text": "about security and defence areas like I saw a lot of station when guys collect",
    "start": "1609309",
    "end": "1618370"
  },
  {
    "text": "some hardware counters like branch misprediction or cache misses about the",
    "start": "1618370",
    "end": "1625580"
  },
  {
    "text": "application which doing the encryption and they significantly read use good for",
    "start": "1625580",
    "end": "1631370"
  },
  {
    "text": "space for attack that is why you can't get access to hardware counters directly",
    "start": "1631370",
    "end": "1638090"
  },
  {
    "text": "you need get secure user privileges in in any operating system because of its a",
    "start": "1638090",
    "end": "1646309"
  },
  {
    "text": "problem but i realize that other guys did some security defenses you have no",
    "start": "1646309",
    "end": "1651740"
  },
  {
    "text": "counter if you kept a long time and complication like a so it usually the plates in the same way you collect how",
    "start": "1651740",
    "end": "1658370"
  },
  {
    "text": "to the counters a lot of different hardware counters and making like snapshot about application behavior and",
    "start": "1658370",
    "end": "1664600"
  },
  {
    "text": "if these behaviors change it may may signaling about injection about tools on",
    "start": "1664600",
    "end": "1677720"
  },
  {
    "text": "this page i saw 3 to switch i'm using in my performance analysis first of all of",
    "start": "1677720",
    "end": "1684950"
  },
  {
    "text": "course it's Oracle Solaris to do performance no wiser don't afraid the",
    "start": "1684950",
    "end": "1691789"
  },
  {
    "text": "word Solaris it perfectly works on Linux",
    "start": "1691789",
    "end": "1697000"
  },
  {
    "text": "and it's free it's a perfect torrent",
    "start": "1697570",
    "end": "1704259"
  },
  {
    "text": "profiler which could profile you in a traditional way in a time and also",
    "start": "1704259",
    "end": "1710440"
  },
  {
    "text": "performance analyzer could collect you different kind of hardener counters and show you places of code whereas counters",
    "start": "1710440",
    "end": "1718279"
  },
  {
    "text": "located and the second thing the celebs to the perform oxidizer perfectly works",
    "start": "1718279",
    "end": "1723860"
  },
  {
    "text": "with Java like some some different tools don't don't work with general badly",
    "start": "1723860",
    "end": "1730279"
  },
  {
    "text": "workers job right powerful two things",
    "start": "1730279",
    "end": "1735370"
  },
  {
    "text": "there are two which I use in my everyday life it's called perf Linux guys should",
    "start": "1735370",
    "end": "1742370"
  },
  {
    "text": "know it's it's some some student be embedded into a Linux kernel and help",
    "start": "1742370",
    "end": "1748220"
  },
  {
    "text": "you quickly collect different cosmic counters they use the bad name because of by perfect",
    "start": "1748220",
    "end": "1755530"
  },
  {
    "text": "can't Google anything that is why is there help page and the documentation",
    "start": "1755530",
    "end": "1760870"
  },
  {
    "text": "called pair underscore events try to go by this and of course I have to use our",
    "start": "1760870",
    "end": "1768640"
  },
  {
    "text": "geometry Bhishma hardness it's a hardness which we created for writing micromesh much for Java which we",
    "start": "1768640",
    "end": "1775870"
  },
  {
    "text": "use in our ordinary life it it doesn't create benchmarks we just solve routine",
    "start": "1775870",
    "end": "1782530"
  },
  {
    "text": "routine problems for writing micro benchmarks and if has some intersection",
    "start": "1782530",
    "end": "1789070"
  },
  {
    "text": "with jmh image could just ask Perth to collect different halma counters but it",
    "start": "1789070",
    "end": "1795760"
  },
  {
    "text": "could normalize their preparations that sometimes may be useful Oh unit could you could show you assembly the most",
    "start": "1795760",
    "end": "1803580"
  },
  {
    "text": "expensive instruction of course there are other tools like first of all its",
    "start": "1803580",
    "end": "1809290"
  },
  {
    "start": "1805000",
    "end": "1805000"
  },
  {
    "text": "tools from vendors its MD code Excel it seemed to be Kuhn I heard some small all profile probably",
    "start": "1809290",
    "end": "1816460"
  },
  {
    "text": "it died already a lot of tools exist I I",
    "start": "1816460",
    "end": "1822220"
  },
  {
    "text": "don't use it so I I can't say anything about that I used with him ten years ago but I'm not using it right now",
    "start": "1822220",
    "end": "1830320"
  },
  {
    "text": "I heard rumors that it's significantly changed they did something very great to",
    "start": "1830320",
    "end": "1835660"
  },
  {
    "text": "show you details about your application behavior but it's not real you should",
    "start": "1835660",
    "end": "1840940"
  },
  {
    "text": "pay for info for that not only for CPU but for system and here is example and",
    "start": "1840940",
    "end": "1846040"
  },
  {
    "text": "no there is no common understanding about how to code these zillions for",
    "start": "1846040",
    "end": "1855610"
  },
  {
    "text": "these tools because of documentation we have one names in performance we have",
    "start": "1855610",
    "end": "1861130"
  },
  {
    "text": "the other names Oracle studio performance knowledge covers the different names so but it's a key if you",
    "start": "1861130",
    "end": "1869560"
  },
  {
    "start": "1863000",
    "end": "1863000"
  },
  {
    "text": "have two or three tools for your daily life you used that but the key ones here it's amount of cycles and instruction",
    "start": "1869560",
    "end": "1876610"
  },
  {
    "text": "okay I have the amount of time and a little bit later I'll show a couple",
    "start": "1876610",
    "end": "1885010"
  },
  {
    "start": "1877000",
    "end": "1877000"
  },
  {
    "text": "another example about what we have to do with hardware counters we",
    "start": "1885010",
    "end": "1890320"
  },
  {
    "text": "collected a lot of events what we have to do how how tallest and what doing that I'm just wanted to say that our",
    "start": "1890320",
    "end": "1897730"
  },
  {
    "start": "1894000",
    "end": "1894000"
  },
  {
    "text": "goal for performance improvements it's a reduced amount of cycles of course the",
    "start": "1897730",
    "end": "1903879"
  },
  {
    "text": "customer may be satisfied you should bring a bottle of liquid into him and",
    "start": "1903879",
    "end": "1910840"
  },
  {
    "text": "speed up frequency of your CPU but it's not our way it's not soft web team ization that our goal is reduced amount",
    "start": "1910840",
    "end": "1919179"
  },
  {
    "text": "of cycles which you spend for execution and usually if we collect statistic we should about application there is such",
    "start": "1919179",
    "end": "1927249"
  },
  {
    "start": "1921000",
    "end": "1921000"
  },
  {
    "text": "equation like Oh general amount of cycles is a path length just amount of stock instructions which you need for",
    "start": "1927249",
    "end": "1933340"
  },
  {
    "text": "some operation multiplied by CPI is the average number of cycles spent for one",
    "start": "1933340",
    "end": "1940330"
  },
  {
    "text": "instruction some guys use other metrics IPC but it almost the same but in",
    "start": "1940330",
    "end": "1946749"
  },
  {
    "text": "different order and what we have to do our goal to reduce amount of cycles so we have to reduce these result of that",
    "start": "1946749",
    "end": "1954190"
  },
  {
    "text": "multiplication our optimization should reduce path lengths or should reduce CPI",
    "start": "1954190",
    "end": "1960850"
  },
  {
    "text": "or maybe it's better to reduce both of them but anyway sometimes I'm reducing",
    "start": "1960850",
    "end": "1967119"
  },
  {
    "text": "supply but increasing path length after optimization but it's okay for the",
    "start": "1967119",
    "end": "1972629"
  },
  {
    "text": "multiplication still still low and what does it mean if we have path length is a",
    "start": "1972629",
    "end": "1981549"
  },
  {
    "text": "metric of your algorithmic efficiency it's just as simple as the number of instructions which you have to be queued",
    "start": "1981549",
    "end": "1988299"
  },
  {
    "text": "to do desired task it may be first of",
    "start": "1988299",
    "end": "1994029"
  },
  {
    "text": "all from karma counters or it's a assembly instruction but it's correlated",
    "start": "1994029",
    "end": "1999399"
  },
  {
    "text": "with the amount of Java instruction ask our instruction erode and CPI is a",
    "start": "1999399",
    "end": "2005820"
  },
  {
    "text": "number of metrics which show us solutions and here's a typical values",
    "start": "2005820",
    "end": "2013350"
  },
  {
    "text": "for modern architecture if I see that CPI is 4 it's a problem",
    "start": "2013350",
    "end": "2019340"
  },
  {
    "text": "kappa stalls and we should solve that if I see that Sofia is 0.4 I won't care",
    "start": "2019340",
    "end": "2026840"
  },
  {
    "text": "about any kind of stalls I would look them the path Landsat check if I could do something with pass lens to reduce",
    "start": "2026840",
    "end": "2034100"
  },
  {
    "text": "the amount of traction for my task its goal activity so if if I already got a",
    "start": "2034100",
    "end": "2042170"
  },
  {
    "text": "low CP I adjust universe reduce mountains instruction but if I've got a",
    "start": "2042170",
    "end": "2047540"
  },
  {
    "text": "higher CPI I should find the reason of stone it could be memories table rhinestones and etc there are different areas where",
    "start": "2047540",
    "end": "2055639"
  },
  {
    "text": "this instance appears but the most most frequently appeared problem is a memory",
    "start": "2055640",
    "end": "2063260"
  },
  {
    "text": "bound issues there are different issues here and all of them have descriptions and particular counters how correct the",
    "start": "2063260",
    "end": "2070970"
  },
  {
    "text": "second problems will be a core bound and we have reverse the finest memory but we",
    "start": "2070970",
    "end": "2076100"
  },
  {
    "text": "doing some expensive capitation inside our core front end bounds is at least",
    "start": "2076100",
    "end": "2082190"
  },
  {
    "text": "the least the least problems in real applications usually we can do anything",
    "start": "2082190",
    "end": "2088310"
  },
  {
    "text": "here we just talk with that problem if you stock with such issues like instruction cache misses but it's not",
    "start": "2088310",
    "end": "2095389"
  },
  {
    "text": "our job like in Java 9 we are D we implemented segmented code cache which significantly reduced instruction cache",
    "start": "2095390",
    "end": "2102740"
  },
  {
    "text": "misses for okay that's all what I want",
    "start": "2102740",
    "end": "2108920"
  },
  {
    "text": "to tell about hardware counters because of just shows us the guys there is such",
    "start": "2108920",
    "end": "2114890"
  },
  {
    "text": "things you could do Contessa I just want to show a couple of examples if I hope",
    "start": "2114890",
    "end": "2121280"
  },
  {
    "text": "you have time for that ok I I'll take the ROG standard",
    "start": "2121280",
    "end": "2128300"
  },
  {
    "start": "2125000",
    "end": "2125000"
  },
  {
    "text": "well-known for Java performance guys base work it doesn't matter which its",
    "start": "2128300",
    "end": "2133310"
  },
  {
    "text": "particular I take I took it and I collect hardware counter just just",
    "start": "2133310",
    "end": "2139820"
  },
  {
    "text": "manitto could you see the problem it's",
    "start": "2139820",
    "end": "2145400"
  },
  {
    "text": "impossible to much numbers I drop out everything which is bad",
    "start": "2145400",
    "end": "2152330"
  },
  {
    "start": "2147000",
    "end": "2147000"
  },
  {
    "text": "we wish irrelevant and try to make such table from here what do we have we have",
    "start": "2152330",
    "end": "2158420"
  },
  {
    "text": "CPI 1.85 its probe leads bed but what",
    "start": "2158420",
    "end": "2165770"
  },
  {
    "text": "doing later how to understand where is the problem here what what I see of my",
    "start": "2165770",
    "end": "2171590"
  },
  {
    "text": "first step I have a lot of cash load here cash load here first level cast",
    "start": "2171590",
    "end": "2176900"
  },
  {
    "text": "last level cache here maybe case and memory the logic data from memory could",
    "start": "2176900",
    "end": "2183260"
  },
  {
    "text": "be a problem let's check potential issues I know that",
    "start": "2183260",
    "end": "2189140"
  },
  {
    "text": "the cost of load data from my l1 is 4 cycles the load data from it on that",
    "start": "2189140",
    "end": "2195860"
  },
  {
    "text": "particular machine not in general but I did experiments on particular machine I know that load data from l2 is caused 12",
    "start": "2195860",
    "end": "2204590"
  },
  {
    "text": "cycles and load data from l3 cost 36 cycles",
    "start": "2204590",
    "end": "2209830"
  },
  {
    "text": "this is Lord superior Lord so I need this amount of cycles for loading data",
    "start": "2209830",
    "end": "2216380"
  },
  {
    "text": "from these amount of data to load a data from murcia I didn't get a true",
    "start": "2216380",
    "end": "2223280"
  },
  {
    "text": "statistic here the first execution it doesn't including list of default counters I should but I could guess that",
    "start": "2223280",
    "end": "2230960"
  },
  {
    "text": "if I don't hit into l1 but but if I have",
    "start": "2230960",
    "end": "2239750"
  },
  {
    "text": "a 1 means but and 3 hits this very those difference a hit and tell it's a pre",
    "start": "2239750",
    "end": "2247130"
  },
  {
    "text": "mystic assumption because of some of these reads could pass through a tube I don't have misses here but it's ok it's",
    "start": "2247130",
    "end": "2254780"
  },
  {
    "text": "low bounders what I got result for this is all beta wards only from criminals",
    "start": "2254780",
    "end": "2262310"
  },
  {
    "text": "remember I need more cycles than I ever spent of my problem execution how is",
    "start": "2262310",
    "end": "2270620"
  },
  {
    "text": "that possible which kind of parallelism no I have to",
    "start": "2270620",
    "end": "2288520"
  },
  {
    "text": "return us here nobody's noticed that",
    "start": "2288520",
    "end": "2294400"
  },
  {
    "text": "things we have the ideal CPI cycle spoons construction is 0.2 but really",
    "start": "2294400",
    "end": "2305319"
  },
  {
    "text": "the cycle is a clock tick inside CPU nothing in hardware can be done less",
    "start": "2305319",
    "end": "2312310"
  },
  {
    "text": "than in one clock it's it's a physical limitation of hardware how we can read",
    "start": "2312310",
    "end": "2319150"
  },
  {
    "text": "the sum less than one cycles per one",
    "start": "2319150",
    "end": "2324339"
  },
  {
    "text": "instruction execution so it because our",
    "start": "2324339",
    "end": "2329400"
  },
  {
    "text": "CPU has superscalar architecture and execute up a lot of instruction on fly",
    "start": "2329400",
    "end": "2335079"
  },
  {
    "text": "and it's an average male so here is the same station these loads from caches as",
    "start": "2335079",
    "end": "2344440"
  },
  {
    "text": "they have a lot of them but they enter leaved they intersect that's why in",
    "start": "2344440",
    "end": "2349900"
  },
  {
    "text": "reality we don't know how much time it's required he could make an assumption",
    "start": "2349900",
    "end": "2356140"
  },
  {
    "text": "that it's memory intensive application that maybe it's problem but without",
    "start": "2356140",
    "end": "2361150"
  },
  {
    "text": "further analysis to try and locate exact places we can understand where the issue",
    "start": "2361150",
    "end": "2366880"
  },
  {
    "text": "is the superscalar architecture ok the problem is here I show that example",
    "start": "2366880",
    "end": "2374530"
  },
  {
    "text": "because of if you have a memory intensive application you should look exactly entity will be it's the first",
    "start": "2374530",
    "end": "2381670"
  },
  {
    "text": "thing which you have to solve with memory intensive application who knows",
    "start": "2381670",
    "end": "2387369"
  },
  {
    "text": "what you'll be easel ok",
    "start": "2387369",
    "end": "2392410"
  },
  {
    "start": "2392000",
    "end": "2392000"
  },
  {
    "text": "it's a till be it's a small small but very very fast cash inside CPU which",
    "start": "2392410",
    "end": "2398859"
  },
  {
    "text": "help us when we need a translation from virtual address to physical address and",
    "start": "2398859",
    "end": "2405420"
  },
  {
    "text": "we exact translation for each memory access for each memory a lot and each memory",
    "start": "2405420",
    "end": "2410650"
  },
  {
    "text": "star that is why it should be very very fast cash and the that is why because of",
    "start": "2410650",
    "end": "2418930"
  },
  {
    "text": "its have a limitation is fast cash as small cash and if our value doesn't feel",
    "start": "2418930",
    "end": "2424510"
  },
  {
    "text": "he hit into that cash it cost us a lot of performance and happily we have",
    "start": "2424510",
    "end": "2430630"
  },
  {
    "text": "different events at least an info hardware which help us to understand where what the problems it's this is",
    "start": "2430630",
    "end": "2437500"
  },
  {
    "text": "called again to each show us where which",
    "start": "2437500",
    "end": "2442990"
  },
  {
    "text": "missus cause the work which we work the most expensive things and even there is another event which count for us the",
    "start": "2442990",
    "end": "2451840"
  },
  {
    "text": "amount of just works we just could get a statistics how much time to spend on",
    "start": "2451840",
    "end": "2458890"
  },
  {
    "text": "this page walks I collected it and I realize that what duration is certain",
    "start": "2458890",
    "end": "2465850"
  },
  {
    "text": "percent of time for that particular benchmark on that particular machine in",
    "start": "2465850",
    "end": "2471100"
  },
  {
    "text": "that particular execution I spent a certain percent of time doing nothing",
    "start": "2471100",
    "end": "2476370"
  },
  {
    "text": "execution of my extraction stopped and waiting until CPU asked operating system",
    "start": "2476370",
    "end": "2483430"
  },
  {
    "text": "I show me the address of page mapping how to map virtual address to physical",
    "start": "2483430",
    "end": "2489280"
  },
  {
    "text": "and as after that I will do the lot of these byte we could cause this for even",
    "start": "2489280",
    "end": "2497440"
  },
  {
    "text": "particularly separate byte how to solve will be problems there are usually two ways as I told every counter spokes not",
    "start": "2497440",
    "end": "2506860"
  },
  {
    "text": "only in statistical sampling mode in encounter mode when we collect all date and check what happening but you you can",
    "start": "2506860",
    "end": "2513820"
  },
  {
    "text": "design with and of course you could you can find the place where it happened you could change that",
    "start": "2513820",
    "end": "2519550"
  },
  {
    "text": "data load in general that suggestion to reduce working set it does mean of course it's ideal if your application",
    "start": "2519550",
    "end": "2525790"
  },
  {
    "text": "could less could consume less memory but just splitting can time",
    "start": "2525790",
    "end": "2531040"
  },
  {
    "text": "consume not less memory in a wrong execution but less memory particular",
    "start": "2531040",
    "end": "2536620"
  },
  {
    "text": "point of time will help you it's the first way and second way don't just do nothing can",
    "start": "2536620",
    "end": "2542770"
  },
  {
    "text": "turn on lodge pages because there are a lot of articles how to enable latch",
    "start": "2542770",
    "end": "2548410"
  },
  {
    "text": "pages for Jared how to work with that is that options I did it for my benchmark I",
    "start": "2548410",
    "end": "2553660"
  },
  {
    "text": "did mass and I didn't change the code I even doesn't don't I don't have the code",
    "start": "2553660",
    "end": "2558880"
  },
  {
    "text": "for that benchmark I just changed the comment line option and I got 20%",
    "start": "2558880",
    "end": "2564309"
  },
  {
    "text": "performance boost and a little bit",
    "start": "2564309",
    "end": "2569579"
  },
  {
    "text": "showing the difference who wish a better result I collect a statistic for for a fixed period of time that as well as the",
    "start": "2569579",
    "end": "2576520"
  },
  {
    "text": "amount of cycle is the same CPI is better as instruction we could execute us better even logic date is better but",
    "start": "2576520",
    "end": "2585030"
  },
  {
    "text": "significantly less she will be misses and time spent until B and this says the",
    "start": "2585030",
    "end": "2591010"
  },
  {
    "start": "2590000",
    "end": "2590000"
  },
  {
    "text": "same values but normalized per transaction like we have the same amount instruction here but in that case",
    "start": "2591010",
    "end": "2598119"
  },
  {
    "text": "different amount of cases and to show what the difference in that case of how",
    "start": "2598119",
    "end": "2604089"
  },
  {
    "text": "it cost okay do you have any question about this",
    "start": "2604089",
    "end": "2609480"
  },
  {
    "text": "yeah because of its default rates",
    "start": "2609480",
    "end": "2615700"
  },
  {
    "text": "possible huge pages are default on Solaris but on Linux Windows you need to do some",
    "start": "2615700",
    "end": "2622869"
  },
  {
    "text": "super user settings for your operating system that is why it can be done by",
    "start": "2622869",
    "end": "2629680"
  },
  {
    "text": "default the other options are at least for Linux is options which called",
    "start": "2629680",
    "end": "2634720"
  },
  {
    "text": "transparent hitch pages in case of transparent huge pages you even don't",
    "start": "2634720",
    "end": "2639789"
  },
  {
    "text": "need tabs is command line option because of in that case it is transparent the",
    "start": "2639789",
    "end": "2646510"
  },
  {
    "text": "huge pages provided by betting system for you but there is some community here",
    "start": "2646510",
    "end": "2652230"
  },
  {
    "text": "transparent huge pages may be inefficient in some cases I could",
    "start": "2652230",
    "end": "2657730"
  },
  {
    "text": "explain later wave if you observe skinny",
    "start": "2657730",
    "end": "2663430"
  },
  {
    "text": "when it comes to transplant huge pages that they are known to cause some GZ issues right",
    "start": "2663430",
    "end": "2669779"
  },
  {
    "text": "transplant hit pages they are known to cause some GC she's when collecting cries no it was",
    "start": "2669779",
    "end": "2677200"
  },
  {
    "text": "the compaction memory and stuff right of course operating system has GC four",
    "start": "2677200",
    "end": "2686730"
  },
  {
    "text": "pages and it's a problem not Java not for Java GC but but for putting system",
    "start": "2686730",
    "end": "2693430"
  },
  {
    "text": "when we collect small pages into large pages sometimes when we have large pages",
    "start": "2693430",
    "end": "2699460"
  },
  {
    "text": "they are not payable then also to hard disk and if you want to do paging of our",
    "start": "2699460",
    "end": "2707950"
  },
  {
    "text": "memory we need split large page small so in some scenarios it create performance issues sometimes no you have to check",
    "start": "2707950",
    "end": "2715110"
  },
  {
    "text": "it's elastic and just I don't know we",
    "start": "2715110",
    "end": "2720220"
  },
  {
    "text": "have only five minutes do you prefer so the examples of continuous questions it's last example",
    "start": "2720220",
    "end": "2728760"
  },
  {
    "text": "okay well as the example who knows what for sharing keys I realize that was last",
    "start": "2728820",
    "end": "2739360"
  },
  {
    "start": "2735000",
    "end": "2735000"
  },
  {
    "text": "couple years there were a lot of discussion about for sharing that is why I took that that example what is for",
    "start": "2739360",
    "end": "2746230"
  },
  {
    "text": "sharing if you have two variables located somewhere in memory one near",
    "start": "2746230",
    "end": "2751810"
  },
  {
    "text": "each other with the high probabilities they will be located inside one cache line and I have to say that from a",
    "start": "2751810",
    "end": "2759310"
  },
  {
    "text": "memory point of user is no such thing as a byte and even four bytes it's a",
    "start": "2759310",
    "end": "2766390"
  },
  {
    "text": "virtual entity because of bytes for you is provided by cache when you split but",
    "start": "2766390",
    "end": "2772150"
  },
  {
    "text": "from memory parent of user is one single and divided identity is called cache line and tall access to memory is",
    "start": "2772150",
    "end": "2779110"
  },
  {
    "text": "performed by cache lines the cutting these lines provides it's question near the CPU not from memory and if these two",
    "start": "2779110",
    "end": "2787480"
  },
  {
    "text": "elements two variables allocated in the same cache lines and you have two",
    "start": "2787480",
    "end": "2793810"
  },
  {
    "text": "threads which are doing modification of these variables from different course you are in trouble because of cash for",
    "start": "2793810",
    "end": "2801250"
  },
  {
    "text": "this core and cash for this course they have implement consistence of that cache line but come",
    "start": "2801250",
    "end": "2807460"
  },
  {
    "text": "is atomic entity in that place and it starts to run from one page to another",
    "start": "2807460",
    "end": "2814090"
  },
  {
    "text": "cache waiting until data arrives I think it gets a performance issue a lot of",
    "start": "2814090",
    "end": "2820510"
  },
  {
    "text": "suggestion how to fix it etcetera that evil we did for Java 8d sanitation",
    "start": "2820510",
    "end": "2827200"
  },
  {
    "text": "sanitation contended implemented by",
    "start": "2827200",
    "end": "2832620"
  },
  {
    "text": "142 it's not public unfortunately it's for internal use as there is an option",
    "start": "2832620",
    "end": "2840520"
  },
  {
    "text": "which enable you used as an say because",
    "start": "2840520",
    "end": "2845830"
  },
  {
    "text": "of really needs such kind of notation to do proper protection or for sharing for",
    "start": "2845830",
    "end": "2851140"
  },
  {
    "text": "very sensitive place and concurrent utilities in Java 2 concurrent package",
    "start": "2851140",
    "end": "2856930"
  },
  {
    "text": "and etc this annotation checks the existing Hardware just just move these",
    "start": "2856930",
    "end": "2862900"
  },
  {
    "text": "these fields inside one clause with the some gap because of of course there is a",
    "start": "2862900",
    "end": "2868720"
  },
  {
    "text": "way to do it wisp atom can source some variables between but it's not grantees and say you are not eliminated",
    "start": "2868720",
    "end": "2874440"
  },
  {
    "text": "compilation and just here is a code we have two fields here we are doing",
    "start": "2874440",
    "end": "2879790"
  },
  {
    "text": "increment from one Center and we are doing increment for others right and here is the results and our results they",
    "start": "2879790",
    "end": "2888040"
  },
  {
    "start": "2883000",
    "end": "2883000"
  },
  {
    "text": "depends on where our two sheds executed so in case of Windows they could execute",
    "start": "2888040",
    "end": "2894430"
  },
  {
    "text": "it on different course or on the same core which usually has a hyper threading",
    "start": "2894430",
    "end": "2899590"
  },
  {
    "text": "on two hyper threading the same cone or even on different sockets and in that",
    "start": "2899590",
    "end": "2904960"
  },
  {
    "text": "cases you have different different numbers it's amount of non a second per one increment in average so Charlotte",
    "start": "2904960",
    "end": "2913960"
  },
  {
    "text": "case it's case where we have Sharan current budget and when we don't have a false sharing issue for example in case",
    "start": "2913960",
    "end": "2921880"
  },
  {
    "text": "of different circuits is cost very much and the table I just show which we which",
    "start": "2921880",
    "end": "2927910"
  },
  {
    "text": "level which resources shared between this rest like of course on different cost we should communicate through l3",
    "start": "2927910",
    "end": "2935950"
  },
  {
    "text": "cache in case of hyper stress hyper threading we can and in case of a different course we",
    "start": "2935950",
    "end": "2944230"
  },
  {
    "text": "don't have any kind of sheriff - it's a problem all here is have no counters could you find a problem yeah yeah guys",
    "start": "2944230",
    "end": "2953680"
  },
  {
    "start": "2947000",
    "end": "2947000"
  },
  {
    "text": "not neither do I neither do i I just want to say that what the full shine",
    "start": "2953680",
    "end": "2961269"
  },
  {
    "text": "here in case of hyper thread our data in l1 cache where the full shank as the",
    "start": "2961269",
    "end": "2969130"
  },
  {
    "text": "problem is that I had called if execute two threads on a same call under hyper",
    "start": "2969130",
    "end": "2974980"
  },
  {
    "text": "threading there is no such thing as true fortunes it is a forceful shank in",
    "start": "2974980",
    "end": "2980410"
  },
  {
    "text": "different score we have full tool for sharing choir orchestra and running for monk asanas but here we got completely",
    "start": "2980410",
    "end": "2987730"
  },
  {
    "text": "different issue and probably somewhere in futures this issue will be solved but",
    "start": "2987730",
    "end": "2993489"
  },
  {
    "start": "2989000",
    "end": "2989000"
  },
  {
    "text": "as the issue is called memory ordering cause there is some some piece of card",
    "start": "2993489",
    "end": "2999339"
  },
  {
    "text": "which called disambiguate track writing from different hyper stress and some",
    "start": "2999339",
    "end": "3004710"
  },
  {
    "text": "hardware and try to understand is a conflict or not if this data tells the",
    "start": "3004710",
    "end": "3012509"
  },
  {
    "text": "CPU that there is no address conflicts for writing country in from memory this",
    "start": "3012509",
    "end": "3018690"
  },
  {
    "text": "application could be executed in parallel if there is a conflict it stop wait until some writing so flight first",
    "start": "3018690",
    "end": "3026460"
  },
  {
    "text": "and only after that start read and here is the problem for that particular case",
    "start": "3026460",
    "end": "3033259"
  },
  {
    "text": "we rewrite the different locations and different addresses but inside the same",
    "start": "3033259",
    "end": "3039150"
  },
  {
    "text": "cache lines from different hyper stress and into this greater fact out he can do",
    "start": "3039150",
    "end": "3045450"
  },
  {
    "text": "anything and but they help us as any particular event which looked into that",
    "start": "3045450",
    "end": "3051749"
  },
  {
    "text": "issue we could collect that event with that name and we could see that on the same core hyper strategies we have a lot",
    "start": "3051749",
    "end": "3060029"
  },
  {
    "text": "of machine clearance memory ordering bias they don't happens in any other",
    "start": "3060029",
    "end": "3065249"
  },
  {
    "text": "cases and it's how to call catch the situation for hyper-threading and for",
    "start": "3065249",
    "end": "3073339"
  },
  {
    "start": "3073000",
    "end": "3073000"
  },
  {
    "text": "for honestly different course we have to fight for of all requests for ownership in the situation when one course and",
    "start": "3073339",
    "end": "3080150"
  },
  {
    "text": "while one cache of one course and request to cache father called give me",
    "start": "3080150",
    "end": "3086390"
  },
  {
    "text": "this cache lines I am going to write here I want to write here and just we",
    "start": "3086390",
    "end": "3093349"
  },
  {
    "text": "could realize that these kind of events there's a difference kind of events",
    "start": "3093349",
    "end": "3098499"
  },
  {
    "text": "drastically different in case of zero in",
    "start": "3098499",
    "end": "3104420"
  },
  {
    "text": "Paget and functional case ok I'll skip this stuff and just summary about high",
    "start": "3104420",
    "end": "3110239"
  },
  {
    "start": "3108000",
    "end": "3108000"
  },
  {
    "text": "performance you shouldn't realize that sometimes you don't need even know that you can't",
    "start": "3110239",
    "end": "3116150"
  },
  {
    "text": "fight with that situation you you could achieve a high performance on other",
    "start": "3116150",
    "end": "3121400"
  },
  {
    "text": "levels more top layers but if you have to like people who is writing very",
    "start": "3121400",
    "end": "3127969"
  },
  {
    "text": "concurrent very fast performance application and etc you should know all this here you should know the full stack",
    "start": "3127969",
    "end": "3135859"
  },
  {
    "text": "but of course it's making problems of overflow for you and just some kind of",
    "start": "3135859",
    "end": "3142609"
  },
  {
    "text": "useful reading thank you guys [Applause]",
    "start": "3142609",
    "end": "3151019"
  }
]