[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Music]",
    "start": "1800",
    "end": "11170"
  },
  {
    "text": "my name is Lincoln Baxter and this talk is on URL rewriting what that means for",
    "start": "11360",
    "end": "16480"
  },
  {
    "text": "your own productivity the security of your applications and uh the usability",
    "start": "16480",
    "end": "21840"
  },
  {
    "text": "the end user usability of your applications this is what I look like in the morning um but I'd like to start",
    "start": "21840",
    "end": "29519"
  },
  {
    "start": "24000",
    "end": "90000"
  },
  {
    "text": "with a quote judgments prevent us from seeing the good that lies beyond",
    "start": "29519",
    "end": "34520"
  },
  {
    "text": "appearances when we think about the web we very quickly make judgments we make",
    "start": "34520",
    "end": "40879"
  },
  {
    "text": "judgments based on how the website looks how it feels if it's performant and",
    "start": "40879",
    "end": "46559"
  },
  {
    "text": "we're very quickly able to determine whether or not a website is going to be giving us a good experience or maybe an",
    "start": "46559",
    "end": "53360"
  },
  {
    "text": "experience that we can't trust or an experience that we feel might harm us or",
    "start": "53360",
    "end": "59039"
  },
  {
    "text": "just take too much of our time to be worth it and this is something that we're very good at in all aspects of our",
    "start": "59039",
    "end": "64799"
  },
  {
    "text": "life it's not just the web you know it's it's a it's a car it's you know the the type of music that's on the radio",
    "start": "64799",
    "end": "71040"
  },
  {
    "text": "station we're very good at this and if we're not careful if we don't take certain things into account we can",
    "start": "71040",
    "end": "77759"
  },
  {
    "text": "immediately turn people off to the website that we are developing and this",
    "start": "77759",
    "end": "83280"
  },
  {
    "text": "starts with the URL because that's the first thing that people see when they enter your site they get a link to it",
    "start": "83280",
    "end": "90040"
  },
  {
    "text": "somewhere so what is URL writing anyone here know",
    "start": "90040",
    "end": "96520"
  },
  {
    "text": "what do you think transforming one another right so transforming one URL",
    "start": "97759",
    "end": "102799"
  },
  {
    "text": "into another or I'd like to say any modification of the HTTP request",
    "start": "102799",
    "end": "108240"
  },
  {
    "text": "response life cycle uh as a more general application of that practice so we've got problems with the",
    "start": "108240",
    "end": "116079"
  },
  {
    "text": "web uh a lot of problems actually the first one is missing or relocated resources there's a lot of stuff out on",
    "start": "116079",
    "end": "122479"
  },
  {
    "text": "the web that it's just not there anymore uh there's a problem with readability",
    "start": "122479",
    "end": "128160"
  },
  {
    "text": "and clutter i'll explain that one a little bit later but this is just presenting people with too much information or the wrong",
    "start": "128160",
    "end": "134360"
  },
  {
    "text": "information there's the formatting of that information how do we present this to people in a human readable way so",
    "start": "134360",
    "end": "140640"
  },
  {
    "text": "that they can comprehend it the web was really designed a lot of aspects of the web were designed for machines but",
    "start": "140640",
    "end": "146000"
  },
  {
    "text": "there's a lot of aspects that are really designed for us as well and we need to make sure that we're presenting the right information to the right being",
    "start": "146000",
    "end": "153840"
  },
  {
    "text": "the other part is more related to security so revealing sensitive information what do we reveal to people",
    "start": "153840",
    "end": "160319"
  },
  {
    "text": "what do we reveal to the to the machines and the last one is the validation of the input that we get back from those",
    "start": "160319",
    "end": "166239"
  },
  {
    "text": "those sources so there are actually many more problems in this but these are just a few that we're going to touch on",
    "start": "166239",
    "end": "173080"
  },
  {
    "start": "167000",
    "end": "335000"
  },
  {
    "text": "today your rewriting is not a good choice for doing it wrong if you want to fix a lot of these problems your",
    "start": "173080",
    "end": "178640"
  },
  {
    "text": "rewriting is a good choice so this is the first problem missing or",
    "start": "178640",
    "end": "184480"
  },
  {
    "text": "relocated resources who saw this coming",
    "start": "184480",
    "end": "191080"
  },
  {
    "text": "you know we've seen a lot of examples of this over time in particular Oracle",
    "start": "191519",
    "end": "196720"
  },
  {
    "text": "bought Sun and they decided it would be a great idea to change everything from sun.com to oracle.com but they didn't",
    "start": "196720",
    "end": "204879"
  },
  {
    "text": "actually fix any of the links once they took Sun's website down and we ended up with this mess where none of the old",
    "start": "204879",
    "end": "210640"
  },
  {
    "text": "sign documentation worked that was easily avoidable but did",
    "start": "210640",
    "end": "216000"
  },
  {
    "text": "they do it no here's what I say about that right that",
    "start": "216000",
    "end": "222360"
  },
  {
    "text": "sucks and we start seeing this more and more on the web where we have people",
    "start": "222360",
    "end": "227760"
  },
  {
    "text": "creating fluffy cute little 404 pages because inevitably you're going to end up there sometimes and Blizzard actually",
    "start": "227760",
    "end": "235440"
  },
  {
    "text": "blames you for finding a page that didn't work people start getting a",
    "start": "235440",
    "end": "240799"
  },
  {
    "text": "little crazy and I have no idea what that",
    "start": "240799",
    "end": "247599"
  },
  {
    "text": "is but this is one of my favorites and this is",
    "start": "249080",
    "end": "256440"
  },
  {
    "text": "mine but eventually we start seeing people actually invest money in these things and I don't know how much money",
    "start": "256440",
    "end": "262960"
  },
  {
    "text": "this cost but it obviously took some time they hired a designer to make an animation that's you know clever you get there you're like \"Oh cool it's a little",
    "start": "262960",
    "end": "269320"
  },
  {
    "text": "robot.\" GitHub does the same thing you can move the mouse and the cat and the background shift dimensions a little bit",
    "start": "269320",
    "end": "276880"
  },
  {
    "text": "how many people here use GitHub a lot of you it's because you all do startups",
    "start": "276880",
    "end": "283000"
  },
  {
    "text": "probably um and then people like probably go a",
    "start": "283000",
    "end": "288479"
  },
  {
    "text": "little bit too far with things this is one that I found while searching for",
    "start": "288479",
    "end": "293520"
  },
  {
    "text": "creative 404 pages these two guys decided to make a",
    "start": "293520",
    "end": "298800"
  },
  {
    "text": "video and here they're they're now taking the page",
    "start": "300759",
    "end": "305880"
  },
  {
    "text": "down there it goes and Yep yep he's down he's down",
    "start": "305880",
    "end": "315280"
  },
  {
    "text": "then someone took drugs",
    "start": "315280",
    "end": "319000"
  },
  {
    "text": "this unicorn just won't quit so what does it mean what do these",
    "start": "330479",
    "end": "338160"
  },
  {
    "start": "335000",
    "end": "454000"
  },
  {
    "text": "four or four pages mean what does this experience it means that this happens a lot this is something that everyone",
    "start": "338160",
    "end": "344000"
  },
  {
    "text": "everyone lands on and it's something that if you don't you know provide a nice experience for",
    "start": "344000",
    "end": "350160"
  },
  {
    "text": "you're going to turn people off to your website but it's really just a distraction from failure this is",
    "start": "350160",
    "end": "356560"
  },
  {
    "text": "something that can be avoided and it's simple but there are two ways to have",
    "start": "356560",
    "end": "362160"
  },
  {
    "text": "this happen and there are also two pretty simple ways to fix it the first thing that happens is that the content",
    "start": "362160",
    "end": "367680"
  },
  {
    "text": "existed and now it is not in other words the website sucks or the content never existed and",
    "start": "367680",
    "end": "375199"
  },
  {
    "text": "you suck but either way no one's going to be happy so what do we",
    "start": "375199",
    "end": "381479"
  },
  {
    "text": "do easy we redirect we set up in a sense virtual links from the old resource to",
    "start": "381479",
    "end": "388160"
  },
  {
    "text": "the location of the new resource and we solve the problem",
    "start": "388160",
    "end": "393600"
  },
  {
    "text": "this is so much of a problem in fact that Google recommends that you maintain your redirects for 180 days so that brow",
    "start": "393600",
    "end": "399440"
  },
  {
    "text": "old browsers and search engines can reach all of the information that was",
    "start": "399440",
    "end": "404639"
  },
  {
    "text": "you know put there by the initial page all the initial response codes all the headers that are cached in the DNS uh",
    "start": "404639",
    "end": "410479"
  },
  {
    "text": "proxies all over the web 180 days is a long time but 404 page is not a",
    "start": "410479",
    "end": "419800"
  },
  {
    "text": "uh not something to trifle with apparently as Kenny found out so we have several options we can",
    "start": "419800",
    "end": "428160"
  },
  {
    "text": "use a tool like Apache mod rewrite how many of you guys have used that a bunch of you okay so the rewrite module of",
    "start": "428160",
    "end": "435440"
  },
  {
    "text": "Apache mod rewrite uh the mod rewrite module of Apache is what you would use to do this or you could use in Java the",
    "start": "435440",
    "end": "442240"
  },
  {
    "text": "Tucky URL rewrite filter or a new alternative um a tool that I created which is OCP soft rewrite which is a",
    "start": "442240",
    "end": "448800"
  },
  {
    "text": "more um Java like you code your rules in Java it gives you a more programmatic",
    "start": "448800",
    "end": "454680"
  },
  {
    "start": "454000",
    "end": "637000"
  },
  {
    "text": "approach but let's move on to number two URL readability i think that",
    "start": "454680",
    "end": "461720"
  },
  {
    "text": "this is the problem with URL readability on the",
    "start": "461720",
    "end": "466560"
  },
  {
    "text": "web and the reason is to buy that you have to go to this",
    "start": "467560",
    "end": "473919"
  },
  {
    "text": "link there's only three reasons why I would click this link if someone sent it to me in an email the first one",
    "start": "475240",
    "end": "483639"
  },
  {
    "text": "is it came from Amazon and that's a trusted source but if it were some link that I didn't really know of some store",
    "start": "483639",
    "end": "490080"
  },
  {
    "text": "some random place I would probably question whether or not I wanted to open that in my browser unless of course I",
    "start": "490080",
    "end": "496080"
  },
  {
    "text": "use Linux in which case I'm pretty fearless i don't care because I'm not going to get a virus and the third is",
    "start": "496080",
    "end": "501599"
  },
  {
    "text": "maybe we're friends and I might trust you but even so you get an email from",
    "start": "501599",
    "end": "507919"
  },
  {
    "text": "one of your friends maybe his email account got hacked maybe uh you know",
    "start": "507919",
    "end": "513360"
  },
  {
    "text": "someone else logged in and decided to play a prank on him or something like that you can you never be sure because this URL is just full of junk this is",
    "start": "513360",
    "end": "520640"
  },
  {
    "text": "what it should be amazon.com/shop/kindleouch it's",
    "start": "520640",
    "end": "526800"
  },
  {
    "text": "immediately clear to me what I'm going to get when I click this now Amazon actually has a couple",
    "start": "526800",
    "end": "533920"
  },
  {
    "text": "reasons why they have all that information in there they have uh a refer program so if you actually send",
    "start": "533920",
    "end": "540880"
  },
  {
    "text": "someone to Amazon's site they track based on the referral code in the URL uh who generated the link and then who",
    "start": "540880",
    "end": "547120"
  },
  {
    "text": "should get a percentage of the the sale of that product but they have an",
    "start": "547120",
    "end": "555000"
  },
  {
    "text": "option they don't actually need to show you any of this stuff in order to track that information",
    "start": "555000",
    "end": "561200"
  },
  {
    "text": "they can in fact make it abundantly clear that you should not care about it while",
    "start": "561200",
    "end": "567440"
  },
  {
    "text": "maintaining the cleanliness of the URL here we have amazon.com/shop/kindle touch question",
    "start": "567440",
    "end": "574320"
  },
  {
    "text": "mark query string all of the rest of the junk encoded into a string that I know",
    "start": "574320",
    "end": "581519"
  },
  {
    "text": "is not for me but I still know what is for me and that's what's in the path of the URL",
    "start": "581519",
    "end": "587839"
  },
  {
    "text": "this is one strategy this can also be used to actually secure the information in that URL the problem with Amazon's",
    "start": "587839",
    "end": "595560"
  },
  {
    "text": "website is this link is vulnerable it has this",
    "start": "595560",
    "end": "601839"
  },
  {
    "text": "uh pfrdt and pfrdp code and pdf pfdi",
    "start": "601839",
    "end": "607839"
  },
  {
    "text": "those three are the referer codes for the person that sent the link if I",
    "start": "607839",
    "end": "613120"
  },
  {
    "text": "really wanted to I could copy that link or intercept it insert my own link",
    "start": "613120",
    "end": "619040"
  },
  {
    "text": "insert my own codes as a referral and hijack people's uh referrals to Amazon",
    "start": "619040",
    "end": "626000"
  },
  {
    "text": "if I could intercept people's links when they posted them etc um Amazon could",
    "start": "626000",
    "end": "631200"
  },
  {
    "text": "protect themselves if they encrypted this and also present a nicer experience to their",
    "start": "631200",
    "end": "637720"
  },
  {
    "start": "637000",
    "end": "649000"
  },
  {
    "text": "users which gets me to the next point which is formatting this information as I already hinted there are some things",
    "start": "637720",
    "end": "644160"
  },
  {
    "text": "we can do to the URL path itself to make it more consumable for",
    "start": "644160",
    "end": "649560"
  },
  {
    "start": "649000",
    "end": "726000"
  },
  {
    "text": "people this example does not use the path very extensively we have a tople",
    "start": "649560",
    "end": "656320"
  },
  {
    "text": "domain and then a whole bunch of query parameters that tell our application what to do this is machine consumable",
    "start": "656320",
    "end": "662120"
  },
  {
    "text": "information there are a couple problems with this um the first one is it's not",
    "start": "662120",
    "end": "667839"
  },
  {
    "text": "cool so be cool and let's rethink",
    "start": "667839",
    "end": "675120"
  },
  {
    "text": "this example.com slashstore slash shoes slash one and",
    "start": "675480",
    "end": "684079"
  },
  {
    "text": "maybe we're purchasing that item the reason the old URL is bad for humans is because query parameters are",
    "start": "684079",
    "end": "691360"
  },
  {
    "text": "not necessarily ordered and being mostly a society and a culture that reads from",
    "start": "691360",
    "end": "696880"
  },
  {
    "text": "left to right an unordered query string me go back up there for a second is not necessarily in the order",
    "start": "696880",
    "end": "704000"
  },
  {
    "text": "that's going to be easiest for us to consume it actually takes me time in seconds to figure out what this means",
    "start": "704000",
    "end": "710880"
  },
  {
    "text": "and while it's not necessarily the worst experience in the world it's still something that's going to make people think huh should I really click that but",
    "start": "710880",
    "end": "718560"
  },
  {
    "text": "there's nothing malicious there it's just a link that's a little bit sloppy so we come down we can fix it quite",
    "start": "718560",
    "end": "725880"
  },
  {
    "text": "easily which brings me to my next question why are you afraid of buying a used car or what are you afraid of",
    "start": "725880",
    "end": "734920"
  },
  {
    "start": "726000",
    "end": "881000"
  },
  {
    "text": "subadequate parts substituted parts substituted parts maybe not everything is original yep anything else",
    "start": "737839",
    "end": "746839"
  },
  {
    "text": "maybe it breaks anyone else",
    "start": "746880",
    "end": "752200"
  },
  {
    "text": "you have no idea what anyone did to it before you have no idea what happened to it before what it really comes down to",
    "start": "753600",
    "end": "759600"
  },
  {
    "text": "all of those things is a lack of trust you have no idea what you're going to get and this is the same thing with a",
    "start": "759600",
    "end": "765600"
  },
  {
    "text": "URL really any URL when you click it you're you're making a you're you're taking a certain level of trust in that",
    "start": "765600",
    "end": "771440"
  },
  {
    "text": "URL that it's going to give you what you expect so do you trust me",
    "start": "771440",
    "end": "778399"
  },
  {
    "text": "no no not really would you click this link at work",
    "start": "778399",
    "end": "786120"
  },
  {
    "text": "you could get fired for clicking this link that's right so I'm not going to click that",
    "start": "790880",
    "end": "797480"
  },
  {
    "text": "but if we had not used an obfiscated URL we might have known that it would have",
    "start": "797480",
    "end": "803279"
  },
  {
    "text": "been a Rick roll how many people have been rickrolled in their life",
    "start": "803279",
    "end": "810000"
  },
  {
    "text": "how many people don't know what a rick roll is all right fine i'm gonna click it",
    "start": "810000",
    "end": "816920"
  },
  {
    "text": "this is a Rick roll that's Rick Ashley performing his lovely dance and I just",
    "start": "820560",
    "end": "825920"
  },
  {
    "text": "lost the game and this is you you send it to someone in the context of a conversation",
    "start": "825920",
    "end": "832560"
  },
  {
    "text": "where you're like \"Hey I just found a really cool car.\" And then you send them this link and there's this",
    "start": "832560",
    "end": "840079"
  },
  {
    "text": "not exactly a great experience so oh no that",
    "start": "840959",
    "end": "849480"
  },
  {
    "text": "was too far there we go right okay all right",
    "start": "849480",
    "end": "855279"
  },
  {
    "text": "that was the next section so build trust by reducing the clutter in your URLs and make it more easily uh apparent what",
    "start": "855279",
    "end": "862399"
  },
  {
    "text": "that URL is going to provide now YouTube again has a reason why they do the URL encoding that they do that's because",
    "start": "862399",
    "end": "868639"
  },
  {
    "text": "they have so many URLs so many accesses that they actually build in a strategy of performance optimization in their",
    "start": "868639",
    "end": "874320"
  },
  {
    "text": "URLs so they can serve things faster but this is a unique constraint to YouTube i don't think many of us have that much",
    "start": "874320",
    "end": "881560"
  },
  {
    "start": "881000",
    "end": "959000"
  },
  {
    "text": "traffic um which gets to my next point revealing sensitive",
    "start": "881560",
    "end": "887279"
  },
  {
    "text": "information no one likes to admit they use net not even",
    "start": "887480",
    "end": "894639"
  },
  {
    "text": "Microsoft they actually stripped off the ASPX suffix of this link why",
    "start": "896440",
    "end": "904199"
  },
  {
    "text": "well we have all of these different frameworks we have JSF Struts PHP Seam",
    "start": "904199",
    "end": "912000"
  },
  {
    "text": "Ruby Pearl CGI JSF again another um indication we have.NET net we have plain",
    "start": "912000",
    "end": "920800"
  },
  {
    "text": "Java JSP and many more the fact that I could name the technology that these suffixes",
    "start": "920800",
    "end": "928160"
  },
  {
    "text": "usually go with is a bad thing because that's the first piece of information",
    "start": "928160",
    "end": "933600"
  },
  {
    "text": "that people can start to use to attack our websites so the",
    "start": "933600",
    "end": "939480"
  },
  {
    "text": "alternative don't expose that information by hiding the suffix of the",
    "start": "939480",
    "end": "944880"
  },
  {
    "text": "technology we remove one piece of information that would give people insight into the way we've designed our systems and insight into the way you've",
    "start": "944880",
    "end": "951120"
  },
  {
    "text": "designed your system is the only way to compromise it pretty much unless you use something",
    "start": "951120",
    "end": "956639"
  },
  {
    "text": "someone else has done and someone else's insight a good magician never reveals their",
    "start": "956639",
    "end": "963759"
  },
  {
    "start": "959000",
    "end": "1012000"
  },
  {
    "text": "implementation how many people use Apache in some form or",
    "start": "963880",
    "end": "969639"
  },
  {
    "text": "another most of us right so Apache has this lovely little feature",
    "start": "969639",
    "end": "975519"
  },
  {
    "text": "where on the 404 page or even in the headers of every page that's served it",
    "start": "975519",
    "end": "981279"
  },
  {
    "text": "tells you the version number and the build number and the date of that build of the particular version of",
    "start": "981279",
    "end": "988160"
  },
  {
    "text": "Apache you're using does that seem like a good idea maybe it's good for popularity but",
    "start": "988160",
    "end": "996000"
  },
  {
    "text": "it's not really good for security so I actually recommend disabling all of",
    "start": "996000",
    "end": "1001040"
  },
  {
    "text": "these features whenever you can and if you can't disable it",
    "start": "1001040",
    "end": "1006600"
  },
  {
    "text": "with Apache sometimes you can strip these things out in your application it depends on your",
    "start": "1006600",
    "end": "1012759"
  },
  {
    "start": "1012000",
    "end": "1064000"
  },
  {
    "text": "environment so just get rid of it don't give people that",
    "start": "1012759",
    "end": "1018319"
  },
  {
    "text": "information the next part of security is the other way right we don't want to provide people with information that",
    "start": "1018600",
    "end": "1025199"
  },
  {
    "text": "they can use to attack us and we also want to make sure that the information we are giving them access to is actually",
    "start": "1025199",
    "end": "1030640"
  },
  {
    "text": "something that they can then uh that that we can verify and validate",
    "start": "1030640",
    "end": "1036280"
  },
  {
    "text": "so the URL is user input right it's something that comes from the user's",
    "start": "1036280",
    "end": "1042079"
  },
  {
    "text": "computer and comes to our system the same is true for request headers um any",
    "start": "1042079",
    "end": "1047360"
  },
  {
    "text": "request parameters these are all forms of user input and while many of us probably do know to validate this stuff",
    "start": "1047360",
    "end": "1053679"
  },
  {
    "text": "already sometimes we forget about headers sometimes we forget about the URL uh it's just it's the the less",
    "start": "1053679",
    "end": "1060400"
  },
  {
    "text": "common forms of attack but things that are still possible an interesting study released",
    "start": "1060400",
    "end": "1066400"
  },
  {
    "text": "by Aspect Security actually said that two of the three recent uh vulnerabilities discovered in web",
    "start": "1066400",
    "end": "1072080"
  },
  {
    "text": "frameworks were URL based and these were interesting because not only did they",
    "start": "1072080",
    "end": "1077600"
  },
  {
    "text": "give access to information in the system they gave actual root access and it was",
    "start": "1077600",
    "end": "1082720"
  },
  {
    "text": "really easy how many people are familiar with the expression language in",
    "start": "1082720",
    "end": "1087880"
  },
  {
    "text": "Java you basically you type in you provide a string and that string gets decoded by the system and then um that",
    "start": "1087880",
    "end": "1095760"
  },
  {
    "text": "that string gets evaluated and then executed and it actually lets you type",
    "start": "1095760",
    "end": "1102480"
  },
  {
    "text": "static Java method calls in there so if you type system.exec it'll evaluate",
    "start": "1102480",
    "end": "1109080"
  },
  {
    "text": "it system.exec exec gives you access to the root um to to the user's account on",
    "start": "1109080",
    "end": "1115200"
  },
  {
    "text": "the the the system that's running the Java application and that was an exploit in",
    "start": "1115200",
    "end": "1120799"
  },
  {
    "text": "Struts that was an exploit in Spring and also in Seam um I'm pretty sure that",
    "start": "1120799",
    "end": "1126640"
  },
  {
    "text": "both of these have already been fixed but still nonetheless there are people who probably have not patched their",
    "start": "1126640",
    "end": "1132000"
  },
  {
    "text": "versions of these applications and this is a URL based attack we can secure existing",
    "start": "1132000",
    "end": "1137120"
  },
  {
    "text": "applications without modifying the existing code by adding some functionality like this",
    "start": "1137120",
    "end": "1143799"
  },
  {
    "text": "so when we have an inbound request where the URL",
    "start": "1143799",
    "end": "1149440"
  },
  {
    "text": "uh is where either the URL is not constrained by the selected characters so there are some characters we don't",
    "start": "1149440",
    "end": "1155039"
  },
  {
    "text": "want to allow or maybe there's a request parameter that has some of this information that we don't want to allow",
    "start": "1155039",
    "end": "1161039"
  },
  {
    "text": "or maybe we can add headers there as well we just want to abort that request or we can take some other action",
    "start": "1161039",
    "end": "1168480"
  },
  {
    "text": "this is something you can do in any URL rewriting framework it just takes a little bit of work to set up your",
    "start": "1168480",
    "end": "1173679"
  },
  {
    "text": "constraints and your validations but it's something you might want to think about doing if you really",
    "start": "1173679",
    "end": "1179919"
  },
  {
    "text": "have a mission critical system because you don't want to leave these things",
    "start": "1179919",
    "end": "1186640"
  },
  {
    "text": "open this is a real life example",
    "start": "1189400",
    "end": "1194280"
  },
  {
    "text": "if anyone here can tell me where this link goes before I go to the next slide I'll",
    "start": "1197679",
    "end": "1203200"
  },
  {
    "text": "give you $10 what am I going to find on this page",
    "start": "1203200",
    "end": "1209720"
  },
  {
    "text": "okay that's good it's a It's an LLB catalog what What What kind of products",
    "start": "1216799",
    "end": "1222400"
  },
  {
    "text": "am I going to find there products in category 28 that's a good answer products in category 28 right",
    "start": "1222400",
    "end": "1230600"
  },
  {
    "text": "that URL should have been this and in fact if you go to this URL it sends you to the other",
    "start": "1231200",
    "end": "1238440"
  },
  {
    "text": "one why why why is this not good enough what what information in that other",
    "start": "1238440",
    "end": "1244520"
  },
  {
    "text": "thing was not good enough for us if we take another look at that we can",
    "start": "1244520",
    "end": "1250480"
  },
  {
    "text": "actually see that it's a web app cool i think I knew that already",
    "start": "1250480",
    "end": "1256760"
  },
  {
    "text": "right we can see that it was served from an IBM uh web store this is what the",
    "start": "1256760",
    "end": "1264679"
  },
  {
    "text": "WCS stands for um we can see that it was hosted from a serlet now we know we're",
    "start": "1264679",
    "end": "1270960"
  },
  {
    "text": "running Java we can see that there's some vectors for attack here category",
    "start": "1270960",
    "end": "1278440"
  },
  {
    "text": "28 and store ID 1 those are places where we can start entering information and trying to break our system now catalog",
    "start": "1278440",
    "end": "1286480"
  },
  {
    "text": "81 okay I could presume maybe there are options for different types of cataloges",
    "start": "1286480",
    "end": "1292240"
  },
  {
    "text": "out on the web like maybe they have a few varieties that they send out and they're tracking who goes to which but",
    "start": "1292240",
    "end": "1297760"
  },
  {
    "text": "language ID negative 1 i don't know who speaks that i mean I don't think computers even",
    "start": "1297760",
    "end": "1303600"
  },
  {
    "text": "speak negative one speak one and zero",
    "start": "1303600",
    "end": "1309158"
  },
  {
    "text": "and then I don't know what this is someone in my one of my previous talks",
    "start": "1309360",
    "end": "1314400"
  },
  {
    "text": "told me but I don't remember it has something to do with the IBM webs um web store so if there happens to be a",
    "start": "1314400",
    "end": "1319520"
  },
  {
    "text": "vulnerability in that congratulations you just exposed that as well",
    "start": "1319520",
    "end": "1325720"
  },
  {
    "text": "so clean it up don't show this information unless you really have to",
    "start": "1325720",
    "end": "1331120"
  },
  {
    "text": "and if you do have to as we'll see in the demos there are some ways that we can protect ourselves from this kind of",
    "start": "1331120",
    "end": "1336159"
  },
  {
    "text": "attack but since that was maybe a little bit heavy I'm going to take a brief",
    "start": "1336159",
    "end": "1344440"
  },
  {
    "text": "interlude and say that the HTTP 1.1",
    "start": "1344440",
    "end": "1351840"
  },
  {
    "text": "uh status code 418 has a small message for us it is a teapot the resulting entity",
    "start": "1351840",
    "end": "1358400"
  },
  {
    "text": "may be shortened out this is in the",
    "start": "1358400",
    "end": "1362960"
  },
  {
    "text": "spec all right that's cool i don't I don't really get it but that's",
    "start": "1363960",
    "end": "1370799"
  },
  {
    "text": "in the spec um so we've got some problems right we",
    "start": "1370799",
    "end": "1376320"
  },
  {
    "text": "have missing or relocated resources we have a readability problem",
    "start": "1376320",
    "end": "1382960"
  },
  {
    "text": "with people seeing URLs we have a formatting problem we want to",
    "start": "1382960",
    "end": "1390240"
  },
  {
    "text": "present information that people will be able to easily consume and not make one of those snap judgments when they come to our when they receive a link to our",
    "start": "1390240",
    "end": "1396880"
  },
  {
    "text": "website or see that link on the page we don't want to reveal too much information because we could potentially",
    "start": "1396880",
    "end": "1403600"
  },
  {
    "text": "expose ourselves to an attack and we want to make sure that the information we do expose is validated",
    "start": "1403600",
    "end": "1412440"
  },
  {
    "text": "so this leads us to our proposed solution URL rewriting or modifying the",
    "start": "1412840",
    "end": "1420080"
  },
  {
    "text": "inbound response and outbound requ uh inbound request and outbound",
    "start": "1420080",
    "end": "1425320"
  },
  {
    "text": "response there are a couple types of URL rewriting tools we have proxy based tools like",
    "start": "1425320",
    "end": "1432720"
  },
  {
    "text": "Apache mod rewrite one of the limitations of which is it is an inbound only tool so when",
    "start": "1432720",
    "end": "1440720"
  },
  {
    "text": "you have a request come in from a client browser into your server mod rewrite",
    "start": "1440720",
    "end": "1448080"
  },
  {
    "text": "gets a one chance to handle that which is right when it hits right before it",
    "start": "1448080",
    "end": "1453360"
  },
  {
    "text": "goes to your application anything your application sends back is",
    "start": "1453360",
    "end": "1459440"
  },
  {
    "text": "uh actually so there are there are two chances when your application sends a response back apache rewrite can",
    "start": "1459440",
    "end": "1465200"
  },
  {
    "text": "actually add headers to that but it can't change the content that's a problem because if you want to",
    "start": "1465200",
    "end": "1471840"
  },
  {
    "text": "apply a rewriting rule to an existing application you might be able to change links and redirect links that are coming",
    "start": "1471840",
    "end": "1477919"
  },
  {
    "text": "in but if you're still delivering links that are incorrect going out you're just perpetuating the problem then you have",
    "start": "1477919",
    "end": "1483600"
  },
  {
    "text": "to change code so it makes sense for us to be able to do that on the outbound as well and that's where the filterbased",
    "start": "1483600",
    "end": "1490320"
  },
  {
    "text": "tools come in and as I said there are a couple options i'll go over those but they let",
    "start": "1490320",
    "end": "1498159"
  },
  {
    "text": "us do inbound and outbound rewriting so we can modify not only the inbound request but also the outbound response",
    "start": "1498159",
    "end": "1504000"
  },
  {
    "text": "and the content of that response so there are a couple basic",
    "start": "1504000",
    "end": "1509440"
  },
  {
    "text": "things that we can do with all types of URL rewriting we can do redirection and relocation this",
    "start": "1509440",
    "end": "1517279"
  },
  {
    "text": "is to address our missing or relocated resources problem so we have all these requests coming into our system",
    "start": "1517279",
    "end": "1524960"
  },
  {
    "text": "and if they hit an old URL we're just going to send them to the new one the browser will update itself the bad links",
    "start": "1524960",
    "end": "1531919"
  },
  {
    "text": "will go away the problem fixes itself over time takes a long time but it",
    "start": "1531919",
    "end": "1538840"
  },
  {
    "start": "1535000",
    "end": "1579000"
  },
  {
    "text": "works we can do inbound parameterization this is an interesting strategy for",
    "start": "1538840",
    "end": "1545080"
  },
  {
    "text": "taking a not necessarily friendly URL and taking the query parameters out of",
    "start": "1545080",
    "end": "1552400"
  },
  {
    "text": "it and embedding them into the path so here this would be equivalent to um",
    "start": "1552400",
    "end": "1558880"
  },
  {
    "text": "accessing a web application with a question mark and then category equals whatever was at the category parameter",
    "start": "1558880",
    "end": "1565120"
  },
  {
    "text": "and then item equals whatever was at the item parameter yeah",
    "start": "1565120",
    "end": "1572440"
  },
  {
    "text": "so this is how we can take an old query string and turn it into a",
    "start": "1572440",
    "end": "1579039"
  },
  {
    "start": "1579000",
    "end": "2232000"
  },
  {
    "text": "path we can do URL validation we can inspect the values of",
    "start": "1579640",
    "end": "1585120"
  },
  {
    "text": "inbound links we can restrict what people can access our website with we can do header validation and",
    "start": "1585120",
    "end": "1593159"
  },
  {
    "text": "modification and I have no personal investment in any of these tools but",
    "start": "1593159",
    "end": "1598480"
  },
  {
    "text": "we're about to see some examples um the part that I really like is the",
    "start": "1598480",
    "end": "1605039"
  },
  {
    "text": "filterbased stuff because we can do a whole lot more we can do transformation",
    "start": "1605039",
    "end": "1612039"
  },
  {
    "text": "canonicalization so this is uh how many you know when when you type into Google right and you type a word wrong it says",
    "start": "1612039",
    "end": "1619360"
  },
  {
    "text": "did you mean you can actually do that for your website",
    "start": "1619360",
    "end": "1626080"
  },
  {
    "text": "you can add a couple parameters and then introduce a uh canonicalization system",
    "start": "1626080",
    "end": "1633279"
  },
  {
    "text": "oh yeah here we go where if someone types the case wrong we can we can make",
    "start": "1633279",
    "end": "1638480"
  },
  {
    "text": "the case correct this could be more complicated this could actually reach out to a system and say \"What words look",
    "start": "1638480",
    "end": "1645159"
  },
  {
    "text": "like what we got?\" Excuse me what words look like",
    "start": "1645159",
    "end": "1650400"
  },
  {
    "text": "what we got and what words does our site accept that are similar if there's one",
    "start": "1650400",
    "end": "1655520"
  },
  {
    "text": "that makes sense send them to",
    "start": "1655520",
    "end": "1658720"
  },
  {
    "text": "it sorry recovering from a cold",
    "start": "1661080",
    "end": "1667600"
  },
  {
    "text": "um the one on top here says um maybe we want to introduce",
    "start": "1673399",
    "end": "1681760"
  },
  {
    "text": "compression of certain resources we have a CSS file and we don't want to",
    "start": "1681760",
    "end": "1688399"
  },
  {
    "text": "have to compress that when we're developing we just want these resources to be compressed when we're hosting them at runtime so we say if any resource",
    "start": "1688399",
    "end": "1696720"
  },
  {
    "text": "request comes in that matches CSS run it through a filter that's going to perform",
    "start": "1696720",
    "end": "1702440"
  },
  {
    "text": "compression that's another kind of transformation we can do",
    "start": "1702440",
    "end": "1708120"
  },
  {
    "text": "we can do complex conversion and",
    "start": "1712159",
    "end": "1715760"
  },
  {
    "text": "validation here we have a web store and",
    "start": "1718039",
    "end": "1723279"
  },
  {
    "text": "that web store takes in a product ID which we've now restricted",
    "start": "1723279",
    "end": "1729840"
  },
  {
    "text": "to restricted to only the um numbers a",
    "start": "1730440",
    "end": "1736640"
  },
  {
    "text": "few word characters and a few more numbers whatever the format of our um of our parameter is then we bind that",
    "start": "1736640",
    "end": "1744320"
  },
  {
    "text": "to an expression language value we actually can directly inject that value",
    "start": "1744320",
    "end": "1749760"
  },
  {
    "text": "into our system and maybe we also want to convert that value into a product",
    "start": "1749760",
    "end": "1755440"
  },
  {
    "text": "itself and then validate the product we can do all of these kinds of things we could also perform request",
    "start": "1755440",
    "end": "1763159"
  },
  {
    "text": "interception this one's a little more complicated and this one",
    "start": "1763159",
    "end": "1768520"
  },
  {
    "text": "says \"When someone accesses your site maybe they have started to sign up",
    "start": "1768520",
    "end": "1775520"
  },
  {
    "text": "for your services but you don't want to make them type in a username and a password to get them access you send",
    "start": "1775520",
    "end": "1781919"
  },
  {
    "text": "them out to Google you say \"Hey Google can",
    "start": "1781919",
    "end": "1787080"
  },
  {
    "text": "you wow sorry hey Google can you authenticate can you authenticate this",
    "start": "1787080",
    "end": "1792880"
  },
  {
    "text": "person for me?\" And When you get the result back from Google",
    "start": "1792880",
    "end": "1798960"
  },
  {
    "text": "you know a couple things about them you know their name and you know their email address",
    "start": "1798960",
    "end": "1807080"
  },
  {
    "text": "but maybe we don't have a password for them yet maybe we'd like to to give them the ability to log in without Google so",
    "start": "1807080",
    "end": "1814559"
  },
  {
    "text": "what this says is okay we have a partially authenticated user they're in",
    "start": "1814559",
    "end": "1820159"
  },
  {
    "text": "the database but they have not confirmed their username yet oh right right sorry",
    "start": "1820159",
    "end": "1825520"
  },
  {
    "text": "uh we get the the their their actual name from Google and their email address but we don't have their username what they want to publicly display to people",
    "start": "1825520",
    "end": "1832000"
  },
  {
    "text": "when they come to your website so we see that they have an account in the database but they don't",
    "start": "1832000",
    "end": "1839279"
  },
  {
    "text": "have a username yet so if that's the case then we're going to redirect them to the uh account confirmation page this",
    "start": "1839279",
    "end": "1847840"
  },
  {
    "text": "is something else that we can do using a more native based rewriting solution that we would have trouble with doing in",
    "start": "1847840",
    "end": "1853600"
  },
  {
    "text": "a proxy based solution and in this case it's actually",
    "start": "1853600",
    "end": "1859120"
  },
  {
    "text": "doing a forward so they never experience a",
    "start": "1859120",
    "end": "1864240"
  },
  {
    "text": "redirect they access the page the URL they access stays the same they're just pres presented with a uh a form that",
    "start": "1864240",
    "end": "1873600"
  },
  {
    "text": "that lets them type in their username any questions about this",
    "start": "1873600",
    "end": "1880000"
  },
  {
    "text": "questions so far the downside to that though is I guess",
    "start": "1880000",
    "end": "1885440"
  },
  {
    "text": "the URL pass the same the issue comes in though is like relative references and things like that when you start to do",
    "start": "1885440",
    "end": "1891200"
  },
  {
    "text": "the forwards and there are there",
    "start": "1891200",
    "end": "1896480"
  },
  {
    "text": "are ways to handle image requests separately um I'm personally a fan of the uh rule",
    "start": "1896480",
    "end": "1904240"
  },
  {
    "text": "that said or the the the condition that says if this resource could be handled by a serlet or if this resource could be",
    "start": "1904240",
    "end": "1911120"
  },
  {
    "text": "handled or if this resource actually exists physically on the disk then don't apply this",
    "start": "1911120",
    "end": "1916440"
  },
  {
    "text": "rule so there are strategies but that's actually a very concern because you can shoot yourself in the foot pretty easily",
    "start": "1916440",
    "end": "1921519"
  },
  {
    "text": "with stuff like this there are some things that you shouldn't do with Java URL rewriting any",
    "start": "1921519",
    "end": "1927679"
  },
  {
    "text": "ideas what should you not do in Java",
    "start": "1927679",
    "end": "1933960"
  },
  {
    "text": "i wouldn't want to do data transformations okay data",
    "start": "1938320",
    "end": "1945278"
  },
  {
    "text": "transformations there's a pretty generally applicable rule I'd like to suggest and that is if",
    "start": "1945399",
    "end": "1952640"
  },
  {
    "text": "it needs to run when your app is not running don't put it in Java because it's not going to run",
    "start": "1952640",
    "end": "1959360"
  },
  {
    "text": "that's where you put it in a proxy so redirects and that kind of stuff you generally want to put in the proxy",
    "start": "1959360",
    "end": "1966320"
  },
  {
    "text": "layer so that was maybe uh a general overview of UR",
    "start": "1972279",
    "end": "1979240"
  },
  {
    "text": "writing but let's see how it actually",
    "start": "1979240",
    "end": "1984399"
  },
  {
    "text": "applies if you guys want to try out these demos and you have bar barcode scanners I'll try to put the barcode up",
    "start": "1985000",
    "end": "1991360"
  },
  {
    "text": "there for you and you can pull it up on your phone or you can just type in the URL as it appears on the",
    "start": "1991360",
    "end": "1999278"
  },
  {
    "text": "screen let me know if you got",
    "start": "2002440",
    "end": "2006240"
  },
  {
    "text": "it you got three seconds it's",
    "start": "2011320",
    "end": "2017759"
  },
  {
    "text": "access-rewite.rcloud.com but I'm going to show you guys",
    "start": "2019559",
    "end": "2024760"
  },
  {
    "text": "locally",
    "start": "2024760",
    "end": "2027760"
  },
  {
    "text": "so this is an example of using uritriting to control access to a website based on certain conditions",
    "start": "2029880",
    "end": "2038360"
  },
  {
    "text": "so here we are and I'm going to demonstrate timebased access and also domain based",
    "start": "2040960",
    "end": "2047600"
  },
  {
    "text": "access you would probably not usually want to put timebased access into your website in the Java layer i've done it",
    "start": "2047600",
    "end": "2054158"
  },
  {
    "text": "here because it's more convenient for examples sake but say you have a maintenance window when you want your",
    "start": "2054159",
    "end": "2060960"
  },
  {
    "text": "website to come down you want to show people some other content you can",
    "start": "2060960",
    "end": "2066839"
  },
  {
    "text": "introduce a rule which is going to restrict access based on what time it",
    "start": "2066839",
    "end": "2073320"
  },
  {
    "text": "is so here we see that our timer is ticking down we currently have access",
    "start": "2073320",
    "end": "2078398"
  },
  {
    "text": "but in 10 seconds we are going to be denied access and shown a different resource",
    "start": "2078399",
    "end": "2087000"
  },
  {
    "text": "there we are and just to prove to you guys let me un full screen",
    "start": "2091599",
    "end": "2098440"
  },
  {
    "text": "here this URL is going to remain the same for whichever whichever content is",
    "start": "2098440",
    "end": "2105480"
  },
  {
    "text": "displayed and the way we've done that we've simply introduced a rule that",
    "start": "2105480",
    "end": "2111800"
  },
  {
    "text": "says if uh Whoops wrong one",
    "start": "2111800",
    "end": "2117359"
  },
  {
    "text": "uh here we go join this",
    "start": "2117359",
    "end": "2124920"
  },
  {
    "text": "URL and if it's an inbound request and time condition is not",
    "start": "2124920",
    "end": "2131960"
  },
  {
    "text": "granted then don't actually provide",
    "start": "2131960",
    "end": "2138078"
  },
  {
    "text": "access this is a little bit more uh complicated than I would like but again I'm doing this in Java um the next",
    "start": "2138359",
    "end": "2145839"
  },
  {
    "text": "example the domain based makes a little bit more sense for certain",
    "start": "2145839",
    "end": "2151920"
  },
  {
    "text": "features so I've accessed this web application at localhost however if I",
    "start": "2154359",
    "end": "2161200"
  },
  {
    "text": "access it at 127.0.0.1 I'm denied",
    "start": "2161200",
    "end": "2169760"
  },
  {
    "text": "access maybe you have multiple clients maybe you want to dynamically control which client can access your website or",
    "start": "2169800",
    "end": "2175520"
  },
  {
    "text": "which parts of your website based on their permissions this is a strategy you could use to do that uh",
    "start": "2175520",
    "end": "2181720"
  },
  {
    "text": "it's again not really a a particularly productive example but it's just an",
    "start": "2181720",
    "end": "2188160"
  },
  {
    "text": "example of using this technology to do that kind of limitation so here we",
    "start": "2188160",
    "end": "2194119"
  },
  {
    "text": "join the URL to our resource on the server",
    "start": "2194119",
    "end": "2200040"
  },
  {
    "text": "and if the domain does not match localhost or the open shift cloud we're",
    "start": "2200040",
    "end": "2205839"
  },
  {
    "text": "going to deny access by returning",
    "start": "2205839",
    "end": "2211440"
  },
  {
    "text": "false excuse me any questions about that",
    "start": "2213560",
    "end": "2218920"
  },
  {
    "text": "so the next demo is a validation and conversion demo",
    "start": "2221839",
    "end": "2227680"
  },
  {
    "text": "and this one says um we're going to implement some REST web services but",
    "start": "2227680",
    "end": "2233920"
  },
  {
    "text": "we're actually going to implement them only using URL writing",
    "start": "2233920",
    "end": "2239560"
  },
  {
    "text": "tools more of a fun example but it also demonstrates how we can validate and convert the information we receive",
    "start": "2239560",
    "end": "2248680"
  },
  {
    "text": "so here's our demo sorry it's boring but again it was created without actually any HTML pages it's all being generated",
    "start": "2251440",
    "end": "2257440"
  },
  {
    "text": "by our rewriting configuration we can come in here we can",
    "start": "2257440",
    "end": "2262880"
  },
  {
    "start": "2260000",
    "end": "2408000"
  },
  {
    "text": "see the first product we can see the second product third product we can see all",
    "start": "2262880",
    "end": "2272280"
  },
  {
    "text": "products and we can actually add products i'm going to view source",
    "start": "2272280",
    "end": "2279400"
  },
  {
    "text": "here take one of",
    "start": "2279400",
    "end": "2282960"
  },
  {
    "text": "these open up the rest client paste in our",
    "start": "2285720",
    "end": "2291800"
  },
  {
    "text": "content i'm going to is it post that",
    "start": "2291800",
    "end": "2297480"
  },
  {
    "text": "creates and I'm going to post that to this URL",
    "start": "2297480",
    "end": "2304040"
  },
  {
    "text": "and if I did that right we get an okay response and now we should see two",
    "start": "2304240",
    "end": "2310960"
  },
  {
    "text": "tickets for the football team but because that was already in there let's make it a little different what should we add",
    "start": "2310960",
    "end": "2318640"
  },
  {
    "text": "did you get rid of the ID oh yeah getting rid of the ID would be good that actually doesn't matter in the system",
    "start": "2318640",
    "end": "2324000"
  },
  {
    "text": "but good point um let's add something that has",
    "start": "2324000",
    "end": "2329040"
  },
  {
    "text": "nothing to do with anything here um what kind of car do you",
    "start": "2329040",
    "end": "2334359"
  },
  {
    "text": "have do you What kind of bicycle okay no method of",
    "start": "2334359",
    "end": "2341960"
  },
  {
    "text": "transportation he is static",
    "start": "2341960",
    "end": "2347320"
  },
  {
    "text": "feet right and the price for feet is",
    "start": "2347320",
    "end": "2353359"
  },
  {
    "text": "priceless so we're going to send that now we should when we go back to our products list see",
    "start": "2353480",
    "end": "2360480"
  },
  {
    "text": "no method of transportation right here so let's take a look at the",
    "start": "2360480",
    "end": "2366160"
  },
  {
    "text": "interesting stuff the configuration here we have a rule that",
    "start": "2366160",
    "end": "2372160"
  },
  {
    "text": "says if the method is get and the URL has a product ID where that product ID",
    "start": "2372160",
    "end": "2379800"
  },
  {
    "text": "is a digit and also an integer this is",
    "start": "2379800",
    "end": "2385119"
  },
  {
    "text": "important for all reason I'll show you soon we're going to convert that into a product and then validate the product um",
    "start": "2385119",
    "end": "2393760"
  },
  {
    "text": "then we get the product the converted value",
    "start": "2393760",
    "end": "2398960"
  },
  {
    "text": "out of the context here you could actually just you know do your database load or whatever",
    "start": "2398960",
    "end": "2404800"
  },
  {
    "text": "and then stream that back to XML to the client but what happens if I get rid of",
    "start": "2404800",
    "end": "2410560"
  },
  {
    "start": "2408000",
    "end": "3073000"
  },
  {
    "text": "this integer constraint i'm going to save i come back to my product list my",
    "start": "2410560",
    "end": "2419119"
  },
  {
    "text": "single product and then I'm going to start trying to attack the",
    "start": "2419119",
    "end": "2424440"
  },
  {
    "text": "website actually how many nines do I",
    "start": "2424440",
    "end": "2430560"
  },
  {
    "text": "need all right 404 that's not what I wanted to show",
    "start": "2433400",
    "end": "2438799"
  },
  {
    "text": "you let's reload this",
    "start": "2439079",
    "end": "2443720"
  },
  {
    "text": "there we go so we actually had a number format exception because we overflowed the",
    "start": "2450079",
    "end": "2457240"
  },
  {
    "text": "integer a very simple example of why you should validate simple information",
    "start": "2457240",
    "end": "2462880"
  },
  {
    "text": "so when we come back and add in our integer constraint",
    "start": "2462880",
    "end": "2468319"
  },
  {
    "text": "which simply verifies that we can actually in fact convert what we got into an integer we'll",
    "start": "2468319",
    "end": "2476079"
  },
  {
    "text": "see that this works and now we just get a 404",
    "start": "2477720",
    "end": "2485560"
  },
  {
    "text": "the rest of this is pretty straightforward again we're handling the products and we're streaming all of them",
    "start": "2490720",
    "end": "2497000"
  },
  {
    "text": "then here's how we uh handle the post request where we reverse stream we",
    "start": "2497000",
    "end": "2502640"
  },
  {
    "text": "actually take the XML and then marshall it into a product then store it maybe into our database or",
    "start": "2502640",
    "end": "2507720"
  },
  {
    "text": "whatever not really practical because there are lots of ways to do rest that are already out there but just an example of the importance of why you",
    "start": "2507720",
    "end": "2514000"
  },
  {
    "text": "should validate and convert",
    "start": "2514000",
    "end": "2517640"
  },
  {
    "text": "so the next demo excuse me",
    "start": "2520359",
    "end": "2526720"
  },
  {
    "text": "is one of my favorites this gets back to the whole topic of exposing sensitive",
    "start": "2527160",
    "end": "2533839"
  },
  {
    "text": "information in your query string and also how we can protect",
    "start": "2533839",
    "end": "2539000"
  },
  {
    "text": "ourselves from attacks in the query string protect ourselves from manipulation and hijacking of query",
    "start": "2539000",
    "end": "2545599"
  },
  {
    "text": "string information and also make it abundantly",
    "start": "2545599",
    "end": "2551880"
  },
  {
    "text": "clear that the information we have in the query string is not meant for a",
    "start": "2551880",
    "end": "2557040"
  },
  {
    "text": "human it is in fact meant for a computer",
    "start": "2557040",
    "end": "2560880"
  },
  {
    "text": "so here we have a straightforward page and whatever I type into the address as",
    "start": "2566160",
    "end": "2572400"
  },
  {
    "text": "a query string is going to be encoded and encrypted so that we cannot modify",
    "start": "2572400",
    "end": "2578560"
  },
  {
    "text": "it and that data is hidden what should I type",
    "start": "2578560",
    "end": "2584280"
  },
  {
    "text": "anything equals what global",
    "start": "2587400",
    "end": "2593640"
  },
  {
    "text": "um give me something to type ssn",
    "start": "2593640",
    "end": "2599799"
  },
  {
    "text": "SSN okay what should I type",
    "start": "2602720",
    "end": "2610839"
  },
  {
    "text": "random things okay so here we can see we've been",
    "start": "2611800",
    "end": "2618319"
  },
  {
    "text": "redirected to an address with this long nasty thing that I have no idea what it",
    "start": "2618319",
    "end": "2623480"
  },
  {
    "text": "means but the application still knows that anything is global a random is a",
    "start": "2623480",
    "end": "2628960"
  },
  {
    "text": "thing and an SSN is one through zero and this is again the um value of",
    "start": "2628960",
    "end": "2637680"
  },
  {
    "text": "our other encrypted parameter so if we look at the page here",
    "start": "2637680",
    "end": "2647800"
  },
  {
    "text": "oops see we're just um I'm sorry that's not the right one",
    "start": "2657640",
    "end": "2667720"
  },
  {
    "text": "we're just actually printing out that information directly from the request so our rewriting tool has",
    "start": "2676640",
    "end": "2684079"
  },
  {
    "text": "modified modified the request to now",
    "start": "2684440",
    "end": "2688880"
  },
  {
    "text": "include more information than we were um or include the decrypted information as",
    "start": "2691079",
    "end": "2696720"
  },
  {
    "text": "if it had already been in the original request itself so here we just get the",
    "start": "2696720",
    "end": "2702400"
  },
  {
    "text": "request and then print out all the parameters on the page",
    "start": "2702400",
    "end": "2710680"
  },
  {
    "text": "so the interesting thing about this is not only we have have we obfuscated it",
    "start": "2710680",
    "end": "2716560"
  },
  {
    "text": "we've also encrypted it and if we try to modify it by adding some stuff in here",
    "start": "2716560",
    "end": "2722240"
  },
  {
    "text": "we have more information we now have the ability to detect when people are messing with",
    "start": "2722240",
    "end": "2729319"
  },
  {
    "text": "us and we can take some action",
    "start": "2729319",
    "end": "2734599"
  },
  {
    "text": "excuse me um how what happens if you append additional parameters",
    "start": "2739680",
    "end": "2745838"
  },
  {
    "text": "uh so I want another parameter i'm guessing that it's going to actually append this information and into the",
    "start": "2748000",
    "end": "2754079"
  },
  {
    "text": "encrypted string more info yeah so we got",
    "start": "2754079",
    "end": "2761599"
  },
  {
    "text": "uh we already have an encrypted parameter so it just didn't do anything with it you take where info is",
    "start": "2761599",
    "end": "2768960"
  },
  {
    "text": "oh yeah okay",
    "start": "2773599",
    "end": "2777079"
  },
  {
    "text": "it'll probably give us a hello oh no it didn't",
    "start": "2784960",
    "end": "2790680"
  },
  {
    "text": "yeah but I'm using Java server faces to print it out so that's protecting us inherently",
    "start": "2791839",
    "end": "2798839"
  },
  {
    "text": "but the idea is there right so we can do this kind of thing by saying that we",
    "start": "2800440",
    "end": "2807760"
  },
  {
    "text": "want to encode all query parameters into another parameter and then if there is a",
    "start": "2807760",
    "end": "2813760"
  },
  {
    "text": "check some failure we can take some action this is something you can implement with or without this kind of a tool but it's a strategy you could",
    "start": "2813760",
    "end": "2820400"
  },
  {
    "text": "consider if you want to maybe send secure URLs to people it's just an extra level of",
    "start": "2820400",
    "end": "2827519"
  },
  {
    "text": "protection so let's get back to the good stuff",
    "start": "2827560",
    "end": "2834078"
  },
  {
    "text": "hold",
    "start": "2834319",
    "end": "2836480"
  },
  {
    "text": "on so everything is going to client side",
    "start": "2840599",
    "end": "2848680"
  },
  {
    "text": "right and I don't really care about requests and responses anymore because",
    "start": "2848680",
    "end": "2854560"
  },
  {
    "text": "now we get a websocket connection it doesn't matter right i'm connected i can send whatever data I want back and forth",
    "start": "2854560",
    "end": "2860480"
  },
  {
    "text": "across SSL right well this is how lots of",
    "start": "2860480",
    "end": "2866880"
  },
  {
    "text": "applications work as client apps in the browser this is Twitter we can see at the top here this is the URL that I've",
    "start": "2866880",
    "end": "2873119"
  },
  {
    "text": "used to access Twitter and Twitter says okay I'm going to serve up the application and then",
    "start": "2873119",
    "end": "2880720"
  },
  {
    "text": "inspect the anchor tag and I know that I'm accessing either Lincoln 3 my",
    "start": "2880720",
    "end": "2885839"
  },
  {
    "text": "account or I'm accessing slashconnect or slashdiscocover to do a search and I'm",
    "start": "2885839",
    "end": "2891680"
  },
  {
    "text": "going to use that information to show what's relevant based on the URL that I was given but it's messy and with HTML 5 we",
    "start": "2891680",
    "end": "2901680"
  },
  {
    "text": "have a better choice with HTML 5 we have the push state method which lets us actually",
    "start": "2901680",
    "end": "2909240"
  },
  {
    "text": "take the URL and change it in the browser without redirecting or without actually sending",
    "start": "2909240",
    "end": "2915440"
  },
  {
    "text": "a new request back to the server this is interesting because now we can load a clientside application",
    "start": "2915440",
    "end": "2922480"
  },
  {
    "text": "that client side application can perform navigations without actually refreshing the browser while still preserving the",
    "start": "2922480",
    "end": "2928559"
  },
  {
    "text": "ability to bookmark your state bookmark where what you're looking at in that client side application this is",
    "start": "2928559",
    "end": "2933720"
  },
  {
    "text": "huge but there's kind of a problem because well first now you have to serve",
    "start": "2933720",
    "end": "2941760"
  },
  {
    "text": "that application from every possible bookmarkable URL you've got that's pretty simple right you just take all of",
    "start": "2941760",
    "end": "2947839"
  },
  {
    "text": "them and no matter what you request you always serve up the application that's",
    "start": "2947839",
    "end": "2953480"
  },
  {
    "text": "simple right so no matter what we get we're going to serve it up but then we",
    "start": "2953480",
    "end": "2959680"
  },
  {
    "text": "see something like this we have our example web page and then the example",
    "start": "2959680",
    "end": "2965839"
  },
  {
    "text": "web page with the username Lincoln and that user has a project called project",
    "start": "2965839",
    "end": "2970920"
  },
  {
    "text": "one then Lincoln decides to create a project called Lincoln now we start to have a",
    "start": "2970920",
    "end": "2978040"
  },
  {
    "text": "problem what is the root of this URL was it served from Lincoln or was it",
    "start": "2978040",
    "end": "2984960"
  },
  {
    "text": "served from link Lincoln are we looking at a user's account or are we looking at the user's project it's more difficult",
    "start": "2984960",
    "end": "2990160"
  },
  {
    "text": "for the application to tell we could hardcode this into our domain but if it's a product we're delivering to",
    "start": "2990160",
    "end": "2995559"
  },
  {
    "text": "people we don't know what the domain's going to be so we need to deliver that information somehow to the client and",
    "start": "2995559",
    "end": "3002160"
  },
  {
    "text": "this is something that you overring can help us with we serve up the application no matter what the requested URL was and",
    "start": "3002160",
    "end": "3009200"
  },
  {
    "text": "with the response we send a cookie that cookie contains the root of the application html 5 actually introduced a",
    "start": "3009200",
    "end": "3015599"
  },
  {
    "text": "new uh element called the base tag I believe which lets you serve that",
    "start": "3015599",
    "end": "3020960"
  },
  {
    "text": "information up in the HTML content that's another way to do it but if you're not doing either of those things",
    "start": "3020960",
    "end": "3026240"
  },
  {
    "text": "then you could also um maybe have your client application send another request back to the server and then receive the",
    "start": "3026240",
    "end": "3033119"
  },
  {
    "text": "information it needs before it loads once it's established the socket connection um that's just one of the strategies you",
    "start": "3033119",
    "end": "3040000"
  },
  {
    "text": "can use and it's just one of the little problems",
    "start": "3040000",
    "end": "3045280"
  },
  {
    "text": "that comes up every day one of the things that we have to deal with that URL rewriting can",
    "start": "3045280",
    "end": "3053480"
  },
  {
    "text": "address and we are always finding more applications of URL rewriting",
    "start": "3053480",
    "end": "3062359"
  },
  {
    "text": "so I'd like to posit that URL rewriting is not a good choice for doing it wrong if you want to fix",
    "start": "3062760",
    "end": "3069240"
  },
  {
    "text": "problems this should be one of the places you look first so is that the end absolutely not",
    "start": "3069240",
    "end": "3076079"
  },
  {
    "text": "i'm hoping that this is the beginning of your adventure with your rewriting and if you'd like more",
    "start": "3076079",
    "end": "3082280"
  },
  {
    "text": "information please stay in the loop you can visit the Rewrite Project website that's the project where you saw code",
    "start": "3082280",
    "end": "3088640"
  },
  {
    "text": "examples from today at ocpsoft.org/ org/rewrite you can follow OCPsoft on Twitter and you can definitely get",
    "start": "3088640",
    "end": "3095520"
  },
  {
    "text": "involved because this is all open source and we uh we would love to have your input so thank you very much any",
    "start": "3095520",
    "end": "3103470"
  },
  {
    "text": "[Applause] questions",
    "start": "3103470",
    "end": "3110000"
  },
  {
    "text": "questions in what scope do you define these rules are they can are they per",
    "start": "3110839",
    "end": "3117359"
  },
  {
    "text": "request global all of the above so question is",
    "start": "3117359",
    "end": "3122800"
  },
  {
    "text": "what in what scope are the rules being defined um in in this case you can actually",
    "start": "3122800",
    "end": "3128800"
  },
  {
    "text": "define them in whatever scope you want because are are you asking like in the",
    "start": "3128800",
    "end": "3133920"
  },
  {
    "text": "the bean management scope or just general scope so so the the potential issue I see here is complexity right",
    "start": "3133920",
    "end": "3140240"
  },
  {
    "text": "there's a lot of complexity in ensuring how you get things correct and how you more holes right because there's a large",
    "start": "3140240",
    "end": "3147760"
  },
  {
    "text": "rule set associated between most of the rules that we saw right i'm just curious to see where that fits in if you're kind",
    "start": "3147760",
    "end": "3154240"
  },
  {
    "text": "of applying some global filtering on all inbound requests maybe at some level",
    "start": "3154240",
    "end": "3161280"
  },
  {
    "text": "detailed transformations say a rest",
    "start": "3161280",
    "end": "3168319"
  },
  {
    "text": "right fairly cleanly so the rules that we saw here are generated on every",
    "start": "3168319",
    "end": "3175280"
  },
  {
    "text": "request and this works because we're doing it all in Java we're not parsing a",
    "start": "3175280",
    "end": "3180559"
  },
  {
    "text": "configuration file we're not doing anything like that so it's very fast and",
    "start": "3180559",
    "end": "3185760"
  },
  {
    "text": "if you want more speed you can actually cache the rule set based on whatever conditions you need but uh because this",
    "start": "3185760",
    "end": "3191839"
  },
  {
    "text": "happens on every request you can inspect the state of every request as it comes in and determine whether or not you want",
    "start": "3191839",
    "end": "3198079"
  },
  {
    "text": "to apply certain portions of that so you can enable or disable certain parts of the configuration based on the state of",
    "start": "3198079",
    "end": "3204559"
  },
  {
    "text": "the system by default it's request scoped if you would but you kind of",
    "start": "3204559",
    "end": "3210160"
  },
  {
    "text": "doing that as JSF request I think right so why why it's not like the server",
    "start": "3210160",
    "end": "3215520"
  },
  {
    "text": "context being passed into why was that just not a standard server filter so it is actually a serlet filter um there was",
    "start": "3215520",
    "end": "3222960"
  },
  {
    "text": "nothing JSF specific in this other than the fact that the demos use JSF to do the pages in one of the construction you",
    "start": "3222960",
    "end": "3228880"
  },
  {
    "text": "were taking a serlet contus why pass over that object versus like a request response so uh I can",
    "start": "3228880",
    "end": "3235920"
  },
  {
    "text": "explain that the reason the serlet um context is being passed into the rule",
    "start": "3235920",
    "end": "3241359"
  },
  {
    "text": "set is because sometimes you need to do things like get the context path okay",
    "start": "3241359",
    "end": "3247720"
  },
  {
    "text": "and um in order to verify that you're not doing some bad things in the",
    "start": "3247720",
    "end": "3253599"
  },
  {
    "text": "configuration because like you said you can actually shoot yourself in the foot pretty easily the configuration is built",
    "start": "3253599",
    "end": "3259599"
  },
  {
    "text": "once when the filter starts up to make sure that you're not doing anything on a per request basis um other than",
    "start": "3259599",
    "end": "3267319"
  },
  {
    "text": "inspecting or using deferred inspection of values so if you try to reference an object that's not available until a",
    "start": "3267319",
    "end": "3274480"
  },
  {
    "text": "request is active that is not allowed because",
    "start": "3274480",
    "end": "3279520"
  },
  {
    "text": "um you can have a reference to an object and then access it once it's available but if you do configuration on a per",
    "start": "3279520",
    "end": "3287280"
  },
  {
    "text": "request basis in a global configuration you can actually introduce um request",
    "start": "3287280",
    "end": "3294119"
  },
  {
    "text": "u you can bleed information between requests if you're not careful and so that's why that's not allowed but what",
    "start": "3294119",
    "end": "3301359"
  },
  {
    "text": "you can do is come down here and we're going to",
    "start": "3301359",
    "end": "3309079"
  },
  {
    "text": "say define rule when new HTTP",
    "start": "3309079",
    "end": "3316880"
  },
  {
    "text": "condition and now we have a serlet rewrite event and a rule evaluation",
    "start": "3316920",
    "end": "3322440"
  },
  {
    "text": "context this rewrite event has the request and the response in it and",
    "start": "3322440",
    "end": "3329359"
  },
  {
    "text": "that's where we get the ability to access the per request information but we're doing this within the confines of",
    "start": "3329359",
    "end": "3334559"
  },
  {
    "text": "an object that is only being accessed on that request and does not modify in",
    "start": "3334559",
    "end": "3339599"
  },
  {
    "text": "theory the other information",
    "start": "3339599",
    "end": "3343800"
  },
  {
    "text": "other questions",
    "start": "3345680",
    "end": "3349000"
  },
  {
    "text": "yeah so there are some pre-built rules uh such as join and join is pretty much the simplification of I want this URL to",
    "start": "3353440",
    "end": "3360319"
  },
  {
    "text": "go to this resource um but if you want to do something complicated and build up",
    "start": "3360319",
    "end": "3366160"
  },
  {
    "text": "your own more complex rule you can use define rule and then you can create your",
    "start": "3366160",
    "end": "3371440"
  },
  {
    "text": "own conditions you can also create your own operations in the perform",
    "start": "3371440",
    "end": "3379920"
  },
  {
    "text": "clause which is much very similar to the condition it's just the action that",
    "start": "3381079",
    "end": "3386480"
  },
  {
    "text": "you're defining and you can chain these things with and and you know build as as",
    "start": "3386480",
    "end": "3393040"
  },
  {
    "text": "much logical uh decision tree as you want cool thanks guys",
    "start": "3393040",
    "end": "3401558"
  },
  {
    "text": "[Music]",
    "start": "3404440",
    "end": "3407519"
  }
]