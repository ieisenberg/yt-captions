[
  {
    "text": "hi everybody I'm Steve and this is a talk called how rust views trade-offs I",
    "start": "4230",
    "end": "10820"
  },
  {
    "text": "am on the rust core team I'm currently in between jobs I used to work at Mozilla on rust but a recently left and",
    "start": "10820",
    "end": "17490"
  },
  {
    "text": "I don't know exactly what I'm doing yet we'll see what happens but I'm still gonna be heavily involved in rust development even though it's not",
    "start": "17490",
    "end": "23609"
  },
  {
    "text": "my day job anymore yeah so anyway uh",
    "start": "23609",
    "end": "29359"
  },
  {
    "text": "cool all right I guess I got to click so",
    "start": "29420",
    "end": "34440"
  },
  {
    "text": "this is a little overview of what I'm gonna be talking about today this is the like choose the right language for the",
    "start": "34440",
    "end": "40409"
  },
  {
    "text": "job track and so I wanted to talk about like how rust views trade-offs and the",
    "start": "40409",
    "end": "46170"
  },
  {
    "text": "way that they like what would make you choose rust or not and also just some ideas when you think about trade-offs so",
    "start": "46170",
    "end": "51659"
  },
  {
    "text": "we're gonna start off by talking about what even is a trade off in the first place and then we're gonna talk about",
    "start": "51659",
    "end": "56850"
  },
  {
    "text": "rusts bending the curve philosophy and I will it's how rust approaches thinking about trade-offs so we go talk about that",
    "start": "56850",
    "end": "63299"
  },
  {
    "text": "first and then we're gonna go into a small digression about how things get designed in the first place",
    "start": "63299",
    "end": "69509"
  },
  {
    "text": "and this concept of values and then lastly we're gonna go over these four different sort of case studies in areas",
    "start": "69509",
    "end": "75570"
  },
  {
    "text": "where rust has had to choose some sort of trade-off and why we picked the thing that we did and the thing that we didn't",
    "start": "75570",
    "end": "81840"
  },
  {
    "text": "do and all that kind of stuff so yeah alright briefly before I get into the",
    "start": "81840",
    "end": "88950"
  },
  {
    "text": "rest of the talk I want to thank Brian Cantrell a large part of this talk is sort of based on a framework that he",
    "start": "88950",
    "end": "94439"
  },
  {
    "text": "came up with there's this talk called platform as a reflection of values from node summit 2017 and it's kind about the",
    "start": "94439",
    "end": "100439"
  },
  {
    "text": "story of giant and node and I ojs and all that stuff and he's the one that really got me thinking about a lot of the stuff that ends up being in this",
    "start": "100439",
    "end": "106409"
  },
  {
    "text": "talk so I wanted to make sure to give him credit so you should you should watch this talk it's good ok so before",
    "start": "106409",
    "end": "113429"
  },
  {
    "text": "we talk about trade-offs it's important that we all agree like what a trade-off actually is I am like a amateur",
    "start": "113429",
    "end": "120030"
  },
  {
    "text": "philosophy enthusiast and one of the hardest problems when communicating with others is making sure that you're not",
    "start": "120030",
    "end": "125969"
  },
  {
    "text": "talking past each other you have to kind of you have to agree what words mean by using words which is like complicated so",
    "start": "125969",
    "end": "132420"
  },
  {
    "text": "so we're gonna get into what trade-offs are before we talk about the specific trade",
    "start": "132420",
    "end": "137680"
  },
  {
    "text": "in rust so everyone always does this and it's kind of boring and dumb and I'm",
    "start": "137680",
    "end": "142990"
  },
  {
    "text": "apologize but the dictionary defines trade off this is a little more interesting I swear a balance achieved",
    "start": "142990",
    "end": "148510"
  },
  {
    "text": "by two desirable but incompatible features or a compromise now the first thing is interesting I think is the",
    "start": "148510",
    "end": "154450"
  },
  {
    "text": "sentence a trade-off between objectivity and relevance that's kind of like an",
    "start": "154450",
    "end": "159940"
  },
  {
    "text": "interesting example of a trade-off like you can be objective or relevant so like you have to be subjective to apply to",
    "start": "159940",
    "end": "166750"
  },
  {
    "text": "reality like I might agree that I'm a little more but the reason I decided to put this on the slide is not because",
    "start": "166750",
    "end": "171970"
  },
  {
    "text": "like you know the dictionary says it's such a dumb meme but the thing right below this on the webpage if you google",
    "start": "171970",
    "end": "177310"
  },
  {
    "text": "this and I thought this is really interesting is this use over time graph",
    "start": "177310",
    "end": "182350"
  },
  {
    "text": "and I was like wait a minute just after 1950 is the first time we thought of the concept of trade-offs so",
    "start": "182350",
    "end": "188560"
  },
  {
    "text": "I went into like a deep rabbit hole you know you're supposed to be working on slides instead of working on your slides you're like I need to look up the",
    "start": "188560",
    "end": "194050"
  },
  {
    "text": "Linguistics about the word trade-off and it turns out the reason cool the reason",
    "start": "194050",
    "end": "199240"
  },
  {
    "text": "that graph that was there looked like that when you could see it is because obviously the concept of a trade-off did",
    "start": "199240",
    "end": "206440"
  },
  {
    "text": "not start in the early 1960s but it used to be the the words trade space off and",
    "start": "206440",
    "end": "213130"
  },
  {
    "text": "we only started putting them together into one word around the 1960s and so that's why this graph looks like this",
    "start": "213130",
    "end": "218380"
  },
  {
    "text": "obviously people use the words trade off and talked about discussions earlier but I just that was kind of interesting so",
    "start": "218380",
    "end": "223690"
  },
  {
    "text": "that's why the the dictionary thing is still up there language changes over time and it is cool all right so I got a",
    "start": "223690",
    "end": "233590"
  },
  {
    "text": "bachelor's in computer science and one of the things that sort of beat into you in at least in the States is that like there's trade-offs and you",
    "start": "233590",
    "end": "239920"
  },
  {
    "text": "have to deal with them and so here are three examples of like classic trade-offs in computer science or",
    "start": "239920",
    "end": "246700"
  },
  {
    "text": "programming that you might have dealt with before so one of the biggest ones is space versus time if you like Google",
    "start": "246700",
    "end": "253390"
  },
  {
    "text": "computer science trade-off like everyone's like the space time trade-off it's like the vast majority of things on",
    "start": "253390",
    "end": "258820"
  },
  {
    "text": "the web apparently and the basic idea is that you can either make something fast or you can make it small and these two",
    "start": "258820",
    "end": "264310"
  },
  {
    "text": "things are sort of like independent of each other and so that's like a common situation",
    "start": "264310",
    "end": "270340"
  },
  {
    "text": "when you're designing data structures talk about the network all these kind of things a second one is throughput versus latency and so these are two different",
    "start": "270340",
    "end": "278199"
  },
  {
    "text": "measures of network activity you know throughput is like how much stuff can you do in a given space of time and",
    "start": "278199",
    "end": "283870"
  },
  {
    "text": "latency is like how long does it take you to do the thing and so these are like two things that are often you can",
    "start": "283870",
    "end": "290199"
  },
  {
    "text": "get good at one or not the other and then finally a big classic one dynamic types versus static types",
    "start": "290199",
    "end": "296740"
  },
  {
    "text": "I wrote Ruby or Haskell because I was trying to think of the most trolli way to describe this description ever I",
    "start": "296740",
    "end": "302290"
  },
  {
    "text": "actually have a ruby tattooed on my body I used to do Ruby before rust it was a very dynamic typing enthusiast when I",
    "start": "302290",
    "end": "308800"
  },
  {
    "text": "friends Sean Griffin so like I've been going around for last couple years being like I have a ruby tattooed on my body that's how much I love Ruby my friend",
    "start": "308800",
    "end": "314350"
  },
  {
    "text": "Sean had his firstborn daughter and he named her Ruby so he like won up to me you like you think he'd get a tattoo and you're gonna",
    "start": "314350",
    "end": "320410"
  },
  {
    "text": "be like the biggest thing but I was like fine Sean you win anyway yeah so dynamic",
    "start": "320410",
    "end": "327100"
  },
  {
    "text": "versus static typing you know and trade offs so these these trade offs are are great and complicated and their core",
    "start": "327100",
    "end": "333940"
  },
  {
    "text": "aspect of our discipline and they're also core to another aspect of our discipline which is arguing on the internet people argue over which one of",
    "start": "333940",
    "end": "341020"
  },
  {
    "text": "these trade offs is the right thing to choose and like in some ways that's like kind of dumb but also I think the trade offs are sort of the core of what we do",
    "start": "341020",
    "end": "347860"
  },
  {
    "text": "if we think about programming is an engineering task like fundamentally you have to make choices between things",
    "start": "347860",
    "end": "353110"
  },
  {
    "text": "sometimes and so that's that's important so rust has this interesting approach to",
    "start": "353110",
    "end": "359800"
  },
  {
    "text": "trade-offs that we call bending the curve and this is like sort of an",
    "start": "359800",
    "end": "365590"
  },
  {
    "text": "attitude that got instilled in in the rust developers sort of fairly early on I'm not really sure who started trying",
    "start": "365590",
    "end": "371139"
  },
  {
    "text": "to think about things this way but it's a way that we like approach the problem of like you have these two things what",
    "start": "371139",
    "end": "376900"
  },
  {
    "text": "should you pick and so let's talk about that a little bit so when I was making",
    "start": "376900",
    "end": "383440"
  },
  {
    "text": "these slides I felt very clever because I looked at these three trade-offs and I was like wait a minute one of these trade-offs is actually different than",
    "start": "383440",
    "end": "389530"
  },
  {
    "text": "the other two I don't know if you have any ideas about which one might be the the different one here but I think I've",
    "start": "389530",
    "end": "396610"
  },
  {
    "text": "made a slide since I don't have my laptop it's like totally blank so we're gonna have a little bit of like fun did I guess my next slide correctly yeah",
    "start": "396610",
    "end": "403000"
  },
  {
    "text": "through versus latency so like this is often a",
    "start": "403000",
    "end": "408519"
  },
  {
    "text": "function of like physics but that doesn't necessarily mean it's always a trade-off right like you can sometimes",
    "start": "408519",
    "end": "413829"
  },
  {
    "text": "have systems that are have more throughput and less latency than a different system it's not always",
    "start": "413829",
    "end": "419529"
  },
  {
    "text": "inherently a trade off at some point you know physics and wires and stuff I don't fully understand comes into play but",
    "start": "419529",
    "end": "425529"
  },
  {
    "text": "like this is an interesting entry point into this idea that like these things don't always have to be at odds with one",
    "start": "425529",
    "end": "431529"
  },
  {
    "text": "another even when there's a trade-off and things are usually at odds and if we think about the other ones",
    "start": "431529",
    "end": "436599"
  },
  {
    "text": "this also becomes kind of true and so like again these dictionary definitions",
    "start": "436599",
    "end": "442239"
  },
  {
    "text": "I'm sorry bear with me briefly this is what Wikipedia has to say so that the dictionary I'll quote Wikipedia a",
    "start": "442239",
    "end": "447659"
  },
  {
    "text": "situational decision that involves diminishing or losing one quality or whatever in return for gains and some",
    "start": "447659",
    "end": "454209"
  },
  {
    "text": "other aspects basically one thing goes down and another thing goes up now if",
    "start": "454209",
    "end": "459369"
  },
  {
    "text": "you think about this a little more generally this is sort of weird with these things I presented to you as trade",
    "start": "459369",
    "end": "465309"
  },
  {
    "text": "offs like a lot of time something that smaller is actually faster if you do like high-performance computing and you",
    "start": "465309",
    "end": "471939"
  },
  {
    "text": "can fit your computation into your like l1 cache it becomes massively faster and",
    "start": "471939",
    "end": "477249"
  },
  {
    "text": "so the like what normally might be a space versus time like trade-off so like a common thing and like compiled",
    "start": "477249",
    "end": "483429"
  },
  {
    "text": "languages is like do you inline a function or not and the argument there is like if you in line the function everywhere your binary gets larger so",
    "start": "483429",
    "end": "490719"
  },
  {
    "text": "that's like a large issue but you get faster whereas if you do dynamic dispatch instead you know your binary is",
    "start": "490719",
    "end": "497679"
  },
  {
    "text": "smaller because you only have one copy of the code of that function but you end up being a little bit slower because you have to actually do the dispatch but in",
    "start": "497679",
    "end": "504009"
  },
  {
    "text": "other situations like this idea with the cache these two things aren't at odds and in fact smaller is often faster this",
    "start": "504009",
    "end": "509649"
  },
  {
    "text": "is also true for example if you've ever had to download jillian's of gigabytes of JavaScript to load a web page right",
    "start": "509649",
    "end": "515318"
  },
  {
    "text": "you're like man if this JavaScript was smaller my page would load faster and a lot of stuff around the web is about",
    "start": "515319",
    "end": "520448"
  },
  {
    "text": "making things smaller so they can be faster so sometimes this is not actually like a true dichotomy dynamic versus",
    "start": "520449",
    "end": "526990"
  },
  {
    "text": "static typing the non trolli resolution to this is a gradual typing right so you",
    "start": "526990",
    "end": "532300"
  },
  {
    "text": "can have things where you start off a little statically and you like move more dynamic or vice-versa there's also",
    "start": "532300",
    "end": "538120"
  },
  {
    "text": "is anyone ever heard people describe dynamic languages as unit typed languages before cool you don't know any",
    "start": "538120",
    "end": "544090"
  },
  {
    "text": "like functional programming control enthusiasts then great you have your better friends than I do there's an",
    "start": "544090",
    "end": "549490"
  },
  {
    "text": "argument that like all languages are statically typed because tights are only a compile-time construct and languages that are damned Italy typed only have",
    "start": "549490",
    "end": "555280"
  },
  {
    "text": "one type and everything is one type so haha you still have static types but that's totally useless and only good for",
    "start": "555280",
    "end": "560410"
  },
  {
    "text": "making other people mad it's a gradual typing gradual typing is a better example of how like static versus",
    "start": "560410",
    "end": "565840"
  },
  {
    "text": "dynamic is a real dichotomy and in fact even in most languages that you know give you static types there's some sort",
    "start": "565840",
    "end": "571450"
  },
  {
    "text": "of facility for dynamic types and we're seeing an increase in dynamic languages like Python is introducing this thing",
    "start": "571450",
    "end": "576940"
  },
  {
    "text": "called mypie which i think is in the language now that lets you like annotate",
    "start": "576940",
    "end": "582040"
  },
  {
    "text": "functions that you want to be annotated with types with types and your stuff gets faster and I like goodness so it's not exactly a pure dichotomy trade-off",
    "start": "582040",
    "end": "588970"
  },
  {
    "text": "and then finally as I sort already mentioned throughput versus latency like you can sometimes do better on both that",
    "start": "588970",
    "end": "595270"
  },
  {
    "text": "doesn't always mean you can but these are like actually different measurements like throughput is about amount over",
    "start": "595270",
    "end": "601630"
  },
  {
    "text": "time and latency is about the distance to like an individual thing so there it's kind of weird to even argue that",
    "start": "601630",
    "end": "607150"
  },
  {
    "text": "they're against each other because they're just fundamentally not measuring the same thing so with this idea that",
    "start": "607150",
    "end": "613870"
  },
  {
    "text": "like trade-offs don't have to purely be one thing goes up or goes down like if you have two options",
    "start": "613870",
    "end": "620290"
  },
  {
    "text": "like this that you see my amazing presentation drawing skills here get ready uh you know you really think that",
    "start": "620290",
    "end": "627400"
  },
  {
    "text": "we can choose something that's like here or something that's like there and you have to pick one of the other but in",
    "start": "627400",
    "end": "632650"
  },
  {
    "text": "reality this is more of a gradient and so you could like you could choose this instead right so it's like a little bit",
    "start": "632650",
    "end": "638380"
  },
  {
    "text": "closer to one than the other but like bending the curve I couldn't figure out how to draw a curve in Google",
    "start": "638380",
    "end": "644320"
  },
  {
    "text": "slides is the first presentation of using Google slides so bending the curve is about the idea of like what if you",
    "start": "644320",
    "end": "649330"
  },
  {
    "text": "could pick this instead and so this is the best I could do with a curve I'm sorry uh I used to write all my slides",
    "start": "649330",
    "end": "656470"
  },
  {
    "text": "in HTML and CSS and stuff but I'm really bad at CSS so I don't know why I kept doing that to myself and then PDF export",
    "start": "656470",
    "end": "662140"
  },
  {
    "text": "is terrible and this conference loves PDFs for your slides so like I just did Google slides and it's fine whatever but like the idea of is like",
    "start": "662140",
    "end": "668499"
  },
  {
    "text": "grab it in the middle and draw it up towards a different thing like we can we can do other stuff with trade-offs than",
    "start": "668499",
    "end": "673839"
  },
  {
    "text": "just look at like two different options and so we can get like unique solutions by thinking out of the box a little bit",
    "start": "673839",
    "end": "680109"
  },
  {
    "text": "I hope that was an enterprising enough sentence for you all and so like the way that we often think about trade-offs as",
    "start": "680109",
    "end": "686109"
  },
  {
    "text": "I mentioned earlier one thing increases another thing decreases right this is more commonly known as a zero-sum game",
    "start": "686109",
    "end": "693759"
  },
  {
    "text": "if you do any game theory or economic theory apparently cordilla but no so",
    "start": "693759",
    "end": "699879"
  },
  {
    "text": "like a zero-sum game basically means that like when you add up everyone's scores they end up being zero right so",
    "start": "699879",
    "end": "705009"
  },
  {
    "text": "like if you need to lose then I need to win and vice-versa well of course I'm",
    "start": "705009",
    "end": "710229"
  },
  {
    "text": "gonna be the one winning right it's the idea and so like but this this this problem is that when you think of",
    "start": "710229",
    "end": "715629"
  },
  {
    "text": "this way you start believing that other people inherently have to lose for you to win and it turns out that like not",
    "start": "715629",
    "end": "721839"
  },
  {
    "text": "very many things other than economic theory and game theory which are theories like is this actually true in",
    "start": "721839",
    "end": "727719"
  },
  {
    "text": "most situations including programming language design you can design things in a different way and that is like a",
    "start": "727719",
    "end": "733809"
  },
  {
    "text": "win-win game and so this is a game in which everyone wins or everyone loses we",
    "start": "733809",
    "end": "739239"
  },
  {
    "text": "like to focus on the everyone wins part and so it's not really inherently about like you must lose so that I must win is",
    "start": "739239",
    "end": "745779"
  },
  {
    "text": "about trying to figure out is there a way that we can both win and so like a win-win strategy means that you can like",
    "start": "745779",
    "end": "752919"
  },
  {
    "text": "you know try to figure out how that goes is this idea of bending the curve is fundamentally about when we look at trade-offs we try to figure out a way",
    "start": "752919",
    "end": "759309"
  },
  {
    "text": "that we can have both things at the same time and so this bend in the curve",
    "start": "759309",
    "end": "765279"
  },
  {
    "text": "really boils down to yeah I like is this trade-off fundamental sometimes it's absolutely true like you there is",
    "start": "765279",
    "end": "770649"
  },
  {
    "text": "situations in which someone has to lose for the other person to win but a lot of times we get too obsessed with that idea and we apply it where doesn't have to",
    "start": "770649",
    "end": "776679"
  },
  {
    "text": "work and so can we like be a little creative and instead you know have everyone win and this works way more",
    "start": "776679",
    "end": "783339"
  },
  {
    "text": "often than you might think all right so before we get into the case studies",
    "start": "783339",
    "end": "789519"
  },
  {
    "text": "about west rush what rust actually did so if we like if we think about okay",
    "start": "789519",
    "end": "794829"
  },
  {
    "text": "this is the approach we're gonna try to find like win-win solutions instead of you need to lose and I need to win we",
    "start": "794829",
    "end": "800679"
  },
  {
    "text": "need to talk about the game that we rack playing and in order to talk about that we have to think about like the concept",
    "start": "800679",
    "end": "806139"
  },
  {
    "text": "of design in like an abstract like what is the task when I'm the person in charge of designing a language or",
    "start": "806139",
    "end": "811509"
  },
  {
    "text": "designing a system like what is the thing I'm even trying to do like what is that activity if you know any like",
    "start": "811509",
    "end": "817389"
  },
  {
    "text": "architects you may ask yourself what is their job really so so this is the part",
    "start": "817389",
    "end": "824649"
  },
  {
    "text": "that largely relies on Bryan's work and so fundamental design is about values",
    "start": "824649",
    "end": "830379"
  },
  {
    "text": "and so when you're like thinking about a system and you're thinking about building it you need to understand what",
    "start": "830379",
    "end": "835809"
  },
  {
    "text": "is valuable to you and beyond that you really need to think about it a little more complicated than just like what do",
    "start": "835809",
    "end": "842139"
  },
  {
    "text": "I care about you need to think about like what are your core values that is what is this stuff you absolutely are",
    "start": "842139",
    "end": "847269"
  },
  {
    "text": "totally not willing to give up on like is there a hill that you will definitely die on and you're gonna die for sure and",
    "start": "847269",
    "end": "855819"
  },
  {
    "text": "so like you know what is that stuff but then also like secondary values there are some things that you know would be",
    "start": "855819",
    "end": "861609"
  },
  {
    "text": "nice to have but like if you don't get them it'll be okay and this is often you",
    "start": "861609",
    "end": "867549"
  },
  {
    "text": "know a little more complicated because a lot of people like to think that you know you can never compromise on anything and I definitely am that kind",
    "start": "867549",
    "end": "874929"
  },
  {
    "text": "of person sometimes but like a lot of the a lot of the creative process actually sticks into this like when",
    "start": "874929",
    "end": "880929"
  },
  {
    "text": "you're willing to give a little what do you get back from it and so having more secondary values like you would think",
    "start": "880929",
    "end": "886869"
  },
  {
    "text": "that having a lot of core values is very useful but it turns out those are those are useful in some situations but",
    "start": "886869",
    "end": "892269"
  },
  {
    "text": "they're not as useful as something you're actually willing to trade off for something else right so having a lot of",
    "start": "892269",
    "end": "898779"
  },
  {
    "text": "secondary values is also pretty good and so like what stuff do you want to have but you don't necessarily need to have and then finally what stuff do you just",
    "start": "898779",
    "end": "905379"
  },
  {
    "text": "not care about whatsoever and identifying this is really important too because it means that if there's",
    "start": "905379",
    "end": "910509"
  },
  {
    "text": "something that you do really want and you have a thing you're willing to give away it's really easy to get that thing if you can figure out how to do that",
    "start": "910509",
    "end": "917319"
  },
  {
    "text": "particular trade-off right and so being explicit about the things that you don't care about can be just as important as",
    "start": "917319",
    "end": "922839"
  },
  {
    "text": "it's caring about the things you actually do care about so let's talk",
    "start": "922839",
    "end": "928689"
  },
  {
    "text": "about rusts core values when it comes to designing things and now I will say that I am",
    "start": "928689",
    "end": "934670"
  },
  {
    "text": "on the language design team anymore it's complicated again in the history a little bit later and so this is kind of",
    "start": "934670",
    "end": "939980"
  },
  {
    "text": "like what I see so please take this as my personal interpretation obviously rust is designed by a lot of people well",
    "start": "939980",
    "end": "946070"
  },
  {
    "text": "maybe not obviously but we'll talk about that later rust is designed by a lot of people and so I'm not saying that they necessarily 100% agree with me that's another funny",
    "start": "946070",
    "end": "953120"
  },
  {
    "text": "part about designs you could argue about things Lots people so when I look at rust core values I sort of see these",
    "start": "953120",
    "end": "959870"
  },
  {
    "text": "three things as being what rust cares about a lot and I mentioned that they're",
    "start": "959870",
    "end": "965150"
  },
  {
    "text": "in a particular order because the funny thing about core values is you sort of also need to decide like if these things",
    "start": "965150",
    "end": "971330"
  },
  {
    "text": "come into conflict with each other will actually pick and so the thing rust cares about above all else is memory",
    "start": "971330",
    "end": "977720"
  },
  {
    "text": "safety and there's historic reasons for this largely because rust sort of whole idea is like what if we could make a C++",
    "start": "977720",
    "end": "984890"
  },
  {
    "text": "that's actually memory safe and so if you were to give up memory safety you'd be like what are we what are we doing here like this is kind of you know like",
    "start": "984890",
    "end": "991640"
  },
  {
    "text": "the whole point of the enterprise is wrong and so rust also really cares",
    "start": "991640",
    "end": "997430"
  },
  {
    "text": "about speed but rust cares about safety more than speed so if there's a situation and this is",
    "start": "997430",
    "end": "1002860"
  },
  {
    "text": "also why I said they're in order right like some historically speaking these two things are kind of at odds and so if",
    "start": "1002860",
    "end": "1009460"
  },
  {
    "text": "there's a situation in which in order to be safe rust has to give up a little bit of safety rust will do it but will try a",
    "start": "1009460",
    "end": "1015970"
  },
  {
    "text": "speed sorry thank you if there's a situation in which we need things to be safe but we have to give up a little bit",
    "start": "1015970",
    "end": "1022420"
  },
  {
    "text": "of speed we will do it but because speed is still a core value we will try our damndest to make sure that we can find",
    "start": "1022420",
    "end": "1028030"
  },
  {
    "text": "some other way to make that happen but every once in a while there's a situation where that's not actually the case and then finally I put proactivity",
    "start": "1028030",
    "end": "1035949"
  },
  {
    "text": "here which is a little bit of like a sort of I don't see like weasel word exactly it's like a little hard to",
    "start": "1035950",
    "end": "1041230"
  },
  {
    "text": "define what proactivity means but rust cares a lot about being a language that",
    "start": "1041230",
    "end": "1046449"
  },
  {
    "text": "is useful to people and so you'll sort of see this expressed differently and the things rust doesn't care about later",
    "start": "1046450",
    "end": "1052810"
  },
  {
    "text": "but basically like rust wants to make decisions that will make it be a thing that you want to use rusts a sentence is",
    "start": "1052810",
    "end": "1059980"
  },
  {
    "text": "terrible I'm sorry but like programmers need to use a language and rust is the language that wants to be used and there",
    "start": "1059980",
    "end": "1066040"
  },
  {
    "text": "are some languages that don't want you to use them surprisingly enough we'll get we'll get into that and that's totally fine like",
    "start": "1066040",
    "end": "1072700"
  },
  {
    "text": "again it's not a judgement about values it's about your judgement of your values so so these are the core things the rest",
    "start": "1072700",
    "end": "1079629"
  },
  {
    "text": "really cares about rust secondary values and these are the things that we would like to have but we're willing to give",
    "start": "1079629",
    "end": "1085389"
  },
  {
    "text": "up a lot of the times are ergonomically and speed rust has some stuff that makes",
    "start": "1085389",
    "end": "1092590"
  },
  {
    "text": "a little harder to use getting ahead of myself but like we'll give up those that ease of use sometimes to achieve those",
    "start": "1092590",
    "end": "1099909"
  },
  {
    "text": "other goals but we still would really like it to be as easy to use as possible another one and this is unfortunate if",
    "start": "1099909",
    "end": "1105909"
  },
  {
    "text": "you've ever used rust I'm sure you're not surprised by compile times being a secondary value the rusts compiler is",
    "start": "1105909",
    "end": "1111129"
  },
  {
    "text": "slow it's a problem we are working on it but like we care more about the final",
    "start": "1111129",
    "end": "1117369"
  },
  {
    "text": "speed of binaries than we do about making the compiler fast like we will always make your program faster if it",
    "start": "1117369",
    "end": "1123220"
  },
  {
    "text": "makes your compile time slower and that's just what it is that said a large part after this talk",
    "start": "1123220",
    "end": "1130359"
  },
  {
    "text": "I'm about to post the like proposal for this year's rust roadmap and one of the major features of it is like how are we",
    "start": "1130359",
    "end": "1135879"
  },
  {
    "text": "gonna make the compiler faster so like we do care about this and we want to get it done but uh you know we give it up",
    "start": "1135879",
    "end": "1141460"
  },
  {
    "text": "maybe a little more than we should even sometimes and then this is kinda interesting correctness is a secondary",
    "start": "1141460",
    "end": "1147700"
  },
  {
    "text": "value and what I mean by this this is rust really cares that your programs are right but like we're not",
    "start": "1147700",
    "end": "1154899"
  },
  {
    "text": "willing to go like full dependent types proof assistant make sure that your code",
    "start": "1154899",
    "end": "1160059"
  },
  {
    "text": "is right like it should be right but like we're not gonna make you prove that it's right and so that's why it's a",
    "start": "1160059",
    "end": "1166359"
  },
  {
    "text": "secondary value is because like we're willing to give up a little bit of correctness sometimes in order for for",
    "start": "1166359",
    "end": "1172600"
  },
  {
    "text": "example organ ama clike proof assistants are really hard to use and I don't expect that many of you in this room",
    "start": "1172600",
    "end": "1178210"
  },
  {
    "text": "have even used one let alone are comfortable using one and so you have to give up a little bit of those kind of correctness tools in order to achieve",
    "start": "1178210",
    "end": "1184779"
  },
  {
    "text": "Organon extend like productivity okay things that rust does not care about I",
    "start": "1184779",
    "end": "1191980"
  },
  {
    "text": "think this first one might be a surprise to a lot of you but it's actually in the name so blazing a new trail and",
    "start": "1191980",
    "end": "1198009"
  },
  {
    "text": "programming language theory the name rust evokes a lot of different things and actually there's no one",
    "start": "1198009",
    "end": "1204330"
  },
  {
    "text": "reason why rust is named rust the guy who made it originally graden used to just come up with new things of why",
    "start": "1204330",
    "end": "1209610"
  },
  {
    "text": "wouldn't whenever someone asked him so there's like six different many reasons out there but one of them is is that like rusts programming language theory",
    "start": "1209610",
    "end": "1217500"
  },
  {
    "text": "technology is like 2002-2006 era",
    "start": "1217500",
    "end": "1222560"
  },
  {
    "text": "programming language terminology it just happens that most languages we used today were made in like 1995 and so rust",
    "start": "1222560",
    "end": "1230460"
  },
  {
    "text": "seems like it's this like really big conceptual leap forward but if you talk to like somebody who is trying to get",
    "start": "1230460",
    "end": "1236340"
  },
  {
    "text": "their PhD in PLT they're gonna be like rust is like real boring like a lot of the text that rust is built on is",
    "start": "1236340",
    "end": "1242280"
  },
  {
    "text": "actually pretty old and so rust is not trying to be a research language we're",
    "start": "1242280",
    "end": "1248190"
  },
  {
    "text": "not trying to push programming language theory forward completely some of the people in language team might disagree",
    "start": "1248190",
    "end": "1253350"
  },
  {
    "text": "with me a little bit they have PhDs it's cool we do do some new stuff but it's",
    "start": "1253350",
    "end": "1258750"
  },
  {
    "text": "like not a thing we're like trying to do as a goal secondarily worse is better",
    "start": "1258750",
    "end": "1263940"
  },
  {
    "text": "rust like is not interested in just sort of throwing something out there and",
    "start": "1263940",
    "end": "1270720"
  },
  {
    "text": "hoping it's good enough and iterating we spend a lot of time trying to get things right and so on the sort of like you",
    "start": "1270720",
    "end": "1277080"
  },
  {
    "text": "know Jersey versus MIT like side of things we are more on the MIT side of things rust will spend a lot of time",
    "start": "1277080",
    "end": "1283500"
  },
  {
    "text": "iterating on features until they are good and we are sort of not willing to just kind of like throw stuff out there",
    "start": "1283500",
    "end": "1289530"
  },
  {
    "text": "and the way you can see this is in our standard library rust is a very small standard library and that's because",
    "start": "1289530",
    "end": "1295140"
  },
  {
    "text": "we're not totally sure that we have great libraries for things yet and so we're not just gonna throw like an XML",
    "start": "1295140",
    "end": "1300510"
  },
  {
    "text": "parser in the standard library unless we think we've got a great XML parsing library because the standard library is",
    "start": "1300510",
    "end": "1306510"
  },
  {
    "text": "where libraries go to die and that's no fun for anyone and so we we tend towards",
    "start": "1306510",
    "end": "1312180"
  },
  {
    "text": "the correctness side than just sort of the throw something out there kind of side of things and then a last one which",
    "start": "1312180",
    "end": "1317880"
  },
  {
    "text": "is kind of interesting for systems languages supporting certain kinds of old hardware an example of this",
    "start": "1317880",
    "end": "1323520"
  },
  {
    "text": "specifically is two's complement versus one's complement integers if you're",
    "start": "1323520",
    "end": "1329130"
  },
  {
    "text": "seeing C++ programmer you may know I hope you know that the representation of integers is undefined",
    "start": "1329130",
    "end": "1335549"
  },
  {
    "text": "and that leads to all sorts of fun shenanigans and that's because C and C++ were developed in an era where a lot of",
    "start": "1335549",
    "end": "1342029"
  },
  {
    "text": "hardware had different implementations of integers and so you're allowed to pick ones complement two's complement or assign magnitude for integers we",
    "start": "1342029",
    "end": "1349889"
  },
  {
    "text": "basically said listen literally all the hardware that gets made today uses two's complement atures so we're just gonna",
    "start": "1349889",
    "end": "1356220"
  },
  {
    "text": "assume you have two's complement integers and you can use a different language if you are programming the",
    "start": "1356220",
    "end": "1361379"
  },
  {
    "text": "machine from the 70s and this is this hardware support like is so true there's",
    "start": "1361379",
    "end": "1366779"
  },
  {
    "text": "actually a paper right now the feature freeze for C++ 2020 just passed but like",
    "start": "1366779",
    "end": "1372509"
  },
  {
    "text": "the next iteration of C++ 23 might also like declare that it only supports two's",
    "start": "1372509",
    "end": "1378119"
  },
  {
    "text": "complement Hardware because it turns out that like it's been a long time since anyone's made ones comment machines except for like one company and",
    "start": "1378119",
    "end": "1384480"
  },
  {
    "text": "everyone's like come on like so anyway we're like willing to ask you hardware",
    "start": "1384480",
    "end": "1391049"
  },
  {
    "text": "support for certain kinds of old things in a name of like we don't have those kind of integer undefined behaviors",
    "start": "1391049",
    "end": "1396649"
  },
  {
    "text": "because we're willing to just say it's two's complement like and that's fine and so that's a trade-off that we are",
    "start": "1396649",
    "end": "1402869"
  },
  {
    "text": "willing to make so there's some some examples of our values oh no now I don't know how to go back let's see there we",
    "start": "1402869",
    "end": "1410039"
  },
  {
    "text": "go cool all right so um a little bit more about values and design an",
    "start": "1410039",
    "end": "1415590"
  },
  {
    "text": "interesting thing is that uh you know it's not just you that has values in the system you're trying to build it's also",
    "start": "1415590",
    "end": "1421590"
  },
  {
    "text": "your users like they have a certain set of values or the things they're trying to accomplish and so as a programmer I",
    "start": "1421590",
    "end": "1427830"
  },
  {
    "text": "think it behooves us to like think about not just the values that we hold but the values of the people that use our",
    "start": "1427830",
    "end": "1434369"
  },
  {
    "text": "software hold and that comes with like you know as a programmer you should use",
    "start": "1434369",
    "end": "1440039"
  },
  {
    "text": "tools that align with your values I really like programming languages and learning new ones but there are some",
    "start": "1440039",
    "end": "1445259"
  },
  {
    "text": "that I have seen where I'm like you know what this language is not for me so I'm just not gonna use it and I'm not gonna denigrate any",
    "start": "1445259",
    "end": "1452220"
  },
  {
    "text": "languages by naming them but like it's it's true that I would be unhappy if I",
    "start": "1452220",
    "end": "1458429"
  },
  {
    "text": "had to program in some languages and that's because they value different things than I value and that's that's",
    "start": "1458429",
    "end": "1464070"
  },
  {
    "text": "totally chill there are other people who have different values than me they can use those languages they are super happy",
    "start": "1464070",
    "end": "1469230"
  },
  {
    "text": "that's literally why we have different languages like it's fine but like I've had frustrations with tools where I was",
    "start": "1469230",
    "end": "1475530"
  },
  {
    "text": "forced to use something and I was like man this tool sucks and then I realized it wasn't that the tool sucked it's that it cared about different things than I",
    "start": "1475530",
    "end": "1481620"
  },
  {
    "text": "cared about and that like weirdly made me more okay with using the tool because I was able to just be like I understand why this friction is happening and I",
    "start": "1481620",
    "end": "1488370"
  },
  {
    "text": "made that job easier and in general those kind of mismatches can cause those problems and I find that a lot of",
    "start": "1488370",
    "end": "1494669"
  },
  {
    "text": "programmers arguing on the Internet about whether something is great or terrible or awesome or horrible really",
    "start": "1494669",
    "end": "1499830"
  },
  {
    "text": "come down to that person has a certain set of values for the things they create and they're talking about a thing that",
    "start": "1499830",
    "end": "1505620"
  },
  {
    "text": "cares about completely different things and that's where a lot of arguments happen so for more than that watch Brian",
    "start": "1505620",
    "end": "1512070"
  },
  {
    "text": "stock it's great okay so uh when should use rust before we talk about the",
    "start": "1512070",
    "end": "1517470"
  },
  {
    "text": "specific trade-offs I figured I would put some examples of like when rust might make sense to you if you find",
    "start": "1517470",
    "end": "1523890"
  },
  {
    "text": "these values to be true in the software you write you may want to use rusts if not don't it's cool there are lots of",
    "start": "1523890",
    "end": "1530429"
  },
  {
    "text": "great languages so I think that rust is ideal whenever you need something that's both reliable and performance yes",
    "start": "1530429",
    "end": "1536400"
  },
  {
    "text": "performance is a word I don't care what you say language changes over time deal with it I've had a lot of bad arguments on the",
    "start": "1536400",
    "end": "1542669"
  },
  {
    "text": "internet I'm really sorry it's really shaped my worldview in many ways there are people who care if you use the word performant they will get mad at you and",
    "start": "1542669",
    "end": "1548520"
  },
  {
    "text": "I'm expecting tweets about it later so performance is important reliability is",
    "start": "1548520",
    "end": "1553919"
  },
  {
    "text": "important when you need those two things you might want to look to rust it's interesting because a lot of people like well when wouldn't I care about",
    "start": "1553919",
    "end": "1559950"
  },
  {
    "text": "reliability and performance and like let's be serious think about some systems you built there's been a lot of them that have not been reliable or",
    "start": "1559950",
    "end": "1565559"
  },
  {
    "text": "performant right like if this there's times in which you are willing to trade away those things and that's totally cool",
    "start": "1565559",
    "end": "1571140"
  },
  {
    "text": "the a lot of the sort of like rewrite it in rust meme comes from places that have",
    "start": "1571140",
    "end": "1576600"
  },
  {
    "text": "built something in a system that is not necessarily reliable performance and then got to scale and realize like oh my",
    "start": "1576600",
    "end": "1583679"
  },
  {
    "text": "god we need reliability and performance and they rewrote a portion of it in rust and we're happy and that's like a really great strategy for managing these kinds",
    "start": "1583679",
    "end": "1590610"
  },
  {
    "text": "of trade-offs I'll talk a little more about that later sometimes you need these things sometimes you don't need these things",
    "start": "1590610",
    "end": "1596250"
  },
  {
    "text": "and that's cool and yeah as I mentioned with the rewrite stuff like sometimes you don't need this things immediately",
    "start": "1596250",
    "end": "1601669"
  },
  {
    "text": "so we'll be here like it's cool go write stuff in other things all right so let's talk about",
    "start": "1601669",
    "end": "1607950"
  },
  {
    "text": "some case studies the first couple of case studies are gonna sort of be about the design of rust itself and trade-offs",
    "start": "1607950",
    "end": "1613920"
  },
  {
    "text": "in the design and the way we approach the design process and then I'll sort of get more specific we'll talk about threading models at the ends this is",
    "start": "1613920",
    "end": "1620400"
  },
  {
    "text": "gonna go in from like broad to concrete so BDF ELLs versus design by committee",
    "start": "1620400",
    "end": "1627140"
  },
  {
    "text": "this trade-off involves who is building your system and who gets to make the",
    "start": "1627140",
    "end": "1632520"
  },
  {
    "text": "calls like who's the decider one model is the BD FL model which is the",
    "start": "1632520",
    "end": "1637770"
  },
  {
    "text": "benevolent dictator for life they rule over their project with hopefully a velvet fist not an iron fist hope that's",
    "start": "1637770",
    "end": "1644490"
  },
  {
    "text": "not mixing too many metaphors they need to be benevolent or else you've got a dictator and that's bad but if their benevolent dictator it's",
    "start": "1644490",
    "end": "1650460"
  },
  {
    "text": "probably good and a lot of people like this model and a lot of programming languages designed this way the other option is designed by",
    "start": "1650460",
    "end": "1657900"
  },
  {
    "text": "committee where a bunch of people who are not invested in the system make the decisions and there's this quote I",
    "start": "1657900",
    "end": "1663870"
  },
  {
    "text": "forgot about this when I was looking at these slides a camel is a horse designed by committee I don't think it's really fair to camels I also have a pearl camel",
    "start": "1663870",
    "end": "1670440"
  },
  {
    "text": "tattoo but like you know there's sort of this like when you look up the",
    "start": "1670440",
    "end": "1675840"
  },
  {
    "text": "definition for this but like it's a pejorative term for and so you know like a lot of people think like oh if",
    "start": "1675840",
    "end": "1681120"
  },
  {
    "text": "something's designed by multiple people then that has also as chances to really go awry right and so we have these two",
    "start": "1681120",
    "end": "1687180"
  },
  {
    "text": "trade offs we let one person make all the decisions and if they make a bad decision we're totally screwed or make a",
    "start": "1687180",
    "end": "1692640"
  },
  {
    "text": "lot of people make decisions and when they make bad decisions we're totally screwed but like which one is actually better and so can we do things differently and",
    "start": "1692640",
    "end": "1700250"
  },
  {
    "text": "so West didn't ever really truly have a be DFL but we went from one person makes",
    "start": "1700250",
    "end": "1707850"
  },
  {
    "text": "decisions to lots of people making decisions over time as the project developed so originally rust was a side",
    "start": "1707850",
    "end": "1714120"
  },
  {
    "text": "project by graden and so he got to decide everything because he was the only person working on it like that's just what happens right you start a",
    "start": "1714120",
    "end": "1719940"
  },
  {
    "text": "project you're in charge like who but he was always extremely forward that",
    "start": "1719940",
    "end": "1725610"
  },
  {
    "text": "he did was not the BD FL which a lot of people were like that's a great sign in a BD FL and",
    "start": "1725610",
    "end": "1731480"
  },
  {
    "text": "and so so eventually he kind of like",
    "start": "1731480",
    "end": "1736519"
  },
  {
    "text": "gave up his power to a bunch of other people at which even more people wanted him to be to be it I fell because I love you're willing to give it up now like",
    "start": "1736519",
    "end": "1742250"
  },
  {
    "text": "you're gonna be great and he was like this whole thing makes me uncomfortable no so we developed the the rust core",
    "start": "1742250",
    "end": "1748880"
  },
  {
    "text": "team and so that became a small group of people whose decision is it was to make decisions about the language but",
    "start": "1748880",
    "end": "1755899"
  },
  {
    "text": "eventually we ran into issues of scale I believe it's my next slide and so we transitioned from having a group of",
    "start": "1755899",
    "end": "1762260"
  },
  {
    "text": "people to having a group of groups of people so now the rust project has our",
    "start": "1762260",
    "end": "1767389"
  },
  {
    "text": "core team which I'm a member of we also have what used to be called sub teams and are now just called teams but like",
    "start": "1767389",
    "end": "1773500"
  },
  {
    "text": "so for example I'm a member of the documentation team as well as the core team so I'm on both there are some",
    "start": "1773500",
    "end": "1779659"
  },
  {
    "text": "people who are on only one team and the idea is that all of the teams are actually equally in charge rust core",
    "start": "1779659",
    "end": "1785539"
  },
  {
    "text": "team is like more of a tiebreaking organization at this point than it is a like hierarchical thing but that's also",
    "start": "1785539",
    "end": "1792980"
  },
  {
    "text": "complicated weird I'm getting to it we don't really vote so we're gonna have ties to break but like it's fine the",
    "start": "1792980",
    "end": "1798529"
  },
  {
    "text": "important part is like rust used to have one person in charge and it had like six people in charge and now it has about a",
    "start": "1798529",
    "end": "1804380"
  },
  {
    "text": "hundred people in charge and so we've changed a lot as this works out and the",
    "start": "1804380",
    "end": "1810260"
  },
  {
    "text": "reason this happened is basically due to scale as the project grew we ran into",
    "start": "1810260",
    "end": "1815539"
  },
  {
    "text": "limits so I was on the core team whenever it was the only team and the problem was is that it was our job so",
    "start": "1815539",
    "end": "1822049"
  },
  {
    "text": "you decide on things and so every week we'd have a meeting and we decide on all the things we do decide on and by that I",
    "start": "1822049",
    "end": "1827389"
  },
  {
    "text": "mean there'd be this big giant list we get through some of them and the next week there'd be even more added on to the list and so it just started to grow",
    "start": "1827389",
    "end": "1833269"
  },
  {
    "text": "and people became frustrated that the core team was becoming his bottleneck and members of the core team were frustrated because like not every one of",
    "start": "1833269",
    "end": "1840620"
  },
  {
    "text": "those decisions was relevant to every member of the team and so if you wanted to talk about like variance in our type",
    "start": "1840620",
    "end": "1846320"
  },
  {
    "text": "system I like read reddit while those meetings happens like I wasn't paying attention but I still had to vote",
    "start": "1846320",
    "end": "1851929"
  },
  {
    "text": "because I was on the team so like that's weird and dumb and then when I was like I really want to talk about whether we",
    "start": "1851929",
    "end": "1857240"
  },
  {
    "text": "choose British or American English for our documentation standards like that was my jamm the people that the phd's in type theory were like yeah whatever",
    "start": "1857240",
    "end": "1863090"
  },
  {
    "text": "Steve says that's fine and so and it took so long to get through all these decisions that like",
    "start": "1863090",
    "end": "1869150"
  },
  {
    "text": "people would be like I've been waiting on a month for you all to make a decision on my pull request like what's going on it would be like sorry we can",
    "start": "1869150",
    "end": "1874400"
  },
  {
    "text": "all let's to decide so in order to scale we decided to sort of like make more",
    "start": "1874400",
    "end": "1880010"
  },
  {
    "text": "than just the core team and so you know that was this like creative solution to this problem and you know that's been",
    "start": "1880010",
    "end": "1886460"
  },
  {
    "text": "helpful but then that comes with new problem with zone because you know now when you have like a hundred people and",
    "start": "1886460",
    "end": "1891710"
  },
  {
    "text": "like 15 teams they all have to like coordinate and so recently I would like to announce that we're about to make our",
    "start": "1891710",
    "end": "1898670"
  },
  {
    "text": "governance team which is basically like a teams team so its job is to figure out where coordination issues are between",
    "start": "1898670",
    "end": "1904310"
  },
  {
    "text": "the teams and helping their team stuff work so it's kind of like a team making team programmers love recursion and so",
    "start": "1904310",
    "end": "1910730"
  },
  {
    "text": "this also means that like you know originally like one of the problems with be DFL versus design by committee that",
    "start": "1910730",
    "end": "1916100"
  },
  {
    "text": "people bring up he's like the B DFL has a grand vision that he toils over like an artist's or whatever and design by",
    "start": "1916100",
    "end": "1923570"
  },
  {
    "text": "committee has like no taste and so one of the problems is you move to multiple people you you lose this cohesion",
    "start": "1923570",
    "end": "1930230"
  },
  {
    "text": "unless you're explicit about these design values right so we all have to like agree like what are the principles that we use to make these decisions and",
    "start": "1930230",
    "end": "1936530"
  },
  {
    "text": "so that's something that we've been getting a little bit better at is communicating to each other like how we make these decisions and why and you",
    "start": "1936530",
    "end": "1943850"
  },
  {
    "text": "know dealing with those problems but so I don't want to say that aventure people run your language is a panacea because",
    "start": "1943850",
    "end": "1949310"
  },
  {
    "text": "it is not but it definitely has helped with the bottleneck of like having documentation people decide on language",
    "start": "1949310",
    "end": "1955760"
  },
  {
    "text": "features okay a second one stability without stagnation so i checked i me",
    "start": "1955760",
    "end": "1962900"
  },
  {
    "text": "real quick all right so stability I had",
    "start": "1962900",
    "end": "1968840"
  },
  {
    "text": "an argument the internet with somebody about what stability met recently they're like you added a new API this release so it's not stable stable means",
    "start": "1968840",
    "end": "1974450"
  },
  {
    "text": "unchanging and I'm like oh god so stability means things don't change but",
    "start": "1974450",
    "end": "1980060"
  },
  {
    "text": "like if you never change then you're also not growing a growth requires some",
    "start": "1980060",
    "end": "1985190"
  },
  {
    "text": "amount of change and so how do you like make sure that you're stable enough that",
    "start": "1985190",
    "end": "1990830"
  },
  {
    "text": "your users aren't dealing with like we changed everything so now your code doesn't compile like enjoy the new feature",
    "start": "1990830",
    "end": "1997720"
  },
  {
    "text": "versus like you know sorry we can't fix that bug because it's relied on in production by this large company and so",
    "start": "1997799",
    "end": "2005149"
  },
  {
    "text": "this is like a trade-off you have to deal with and so we want to be able to have change we also don't want it to",
    "start": "2005149",
    "end": "2010850"
  },
  {
    "text": "affect people that don't want it like opt in change and so we don't actually think that these two things are inherently at odds and so there's this",
    "start": "2010850",
    "end": "2018289"
  },
  {
    "text": "blog post called celebrity stability is deliverable and I have a couple citations from it but if you want to",
    "start": "2018289",
    "end": "2023629"
  },
  {
    "text": "look it up it's on the rust blog there's the URL I'm sure you'll type out that URL in the two seconds it takes me to describe this but you guys google for",
    "start": "2023629",
    "end": "2029929"
  },
  {
    "text": "this on the rest blog and it's like a thing but this sort of lays out our plan and our approach to stability and I'm not gonna get too deep into the weeds",
    "start": "2029929",
    "end": "2035539"
  },
  {
    "text": "but basically we don't want to mean that rust will stop evolving but we want to",
    "start": "2035539",
    "end": "2042559"
  },
  {
    "text": "release new versions of rust frequently and regularly and in order for people to be able to upgrade to those new versions",
    "start": "2042559",
    "end": "2048138"
  },
  {
    "text": "it has to be painless to do so so our responsibility is to make sure that you never dread upgrading rust and if your",
    "start": "2048139",
    "end": "2053809"
  },
  {
    "text": "code compiles on 1.0 it should compile on rust 1 point X without problems and",
    "start": "2053809",
    "end": "2059079"
  },
  {
    "text": "so this is sort of like continuous integration so all the rhetoric around",
    "start": "2059079",
    "end": "2064280"
  },
  {
    "text": "like continuous integration continuous deployment is like if you deploy twice a year and you fear deploy week if you",
    "start": "2064280",
    "end": "2070280"
  },
  {
    "text": "start deploying every week you get better at it right you get better at what you do so if you deploy often you",
    "start": "2070280",
    "end": "2075829"
  },
  {
    "text": "will be better at deploying so let's do that so we can't approach this with the language if we release the language",
    "start": "2075829",
    "end": "2081290"
  },
  {
    "text": "often then we will do a better job of making sure that we don't break stuff because it's not like once a year that",
    "start": "2081290",
    "end": "2087049"
  },
  {
    "text": "we check in with our users if we'd broken all their stuff and so this is kind of thing we do and so we actually copied browsers this basically just says",
    "start": "2087049",
    "end": "2094040"
  },
  {
    "text": "like we land stuff on master we have feature flags and then every six weeks",
    "start": "2094040",
    "end": "2099109"
  },
  {
    "text": "master becomes promoted to beta the previous beta becomes stable if you've ever used Chrome or Firefox you have",
    "start": "2099109",
    "end": "2104839"
  },
  {
    "text": "probably seen this model like every six weeks your browser's like hey new version of the browser came out we did the same thing with rust and that lets",
    "start": "2104839",
    "end": "2112579"
  },
  {
    "text": "us like do these releases but things don't get off of nightly Vic they don't get into a release until they're",
    "start": "2112579",
    "end": "2118760"
  },
  {
    "text": "explicitly marked as stable and what that lets us do is unless this experiment with new features on nightly",
    "start": "2118760",
    "end": "2123859"
  },
  {
    "text": "and actually ship the code and like put it into the the compiler but that won't affect stable users because you're not",
    "start": "2123859",
    "end": "2131089"
  },
  {
    "text": "allowed use Knightly features when you're unstable and so this lets you as a user of rust if you want to be involved and",
    "start": "2131089",
    "end": "2137240"
  },
  {
    "text": "try out new features and get goodies while they're still cooking you can do that by downloading a nightly version of the compiler and trying it out and give",
    "start": "2137240",
    "end": "2143900"
  },
  {
    "text": "us feedback and if you don't want to deal with that because that's a pain then you can use stable and never have to worry about that and stable becomes",
    "start": "2143900",
    "end": "2150380"
  },
  {
    "text": "really easy to update and all those kind of things this says what I just said I'm not gonna read slides to you so what's",
    "start": "2150380",
    "end": "2155930"
  },
  {
    "text": "the trade-off here like the thing with bending the curve is when you introduce a third thing into your this or that",
    "start": "2155930",
    "end": "2161390"
  },
  {
    "text": "like you're also probably introducing a fourth thing that's like you're giving up something there too right so I don't",
    "start": "2161390",
    "end": "2167599"
  },
  {
    "text": "want to always say this means you get everything and so this process is a lot of work for us we have a team for that",
    "start": "2167599",
    "end": "2173450"
  },
  {
    "text": "it's called the release team and also the infrastructure team they both deal with this problem so we've got two teams",
    "start": "2173450",
    "end": "2178579"
  },
  {
    "text": "working on this and so we had to put two teams together to work on it like that's a trade-off we also invested a lot in",
    "start": "2178579",
    "end": "2185000"
  },
  {
    "text": "continuous integration because we need to be testing we actually periodically download every open source package and",
    "start": "2185000",
    "end": "2190670"
  },
  {
    "text": "rust and try to compile it with the next version of the compiler to just double check we're not breaking your stuff that's really cool it also means",
    "start": "2190670",
    "end": "2198140"
  },
  {
    "text": "Mozilla's paying a bunch of money for some servers so thank them we developed",
    "start": "2198140",
    "end": "2203150"
  },
  {
    "text": "a lot of bots so Boris is our continuous integration bot it makes sure that everything passes the test suite before",
    "start": "2203150",
    "end": "2209359"
  },
  {
    "text": "it lands this also means that Bors is always the number one of our contributors list because he merges",
    "start": "2209359",
    "end": "2214369"
  },
  {
    "text": "every single pull request I got lots of stories about that that are funny but there's no time so sorry you got to be",
    "start": "2214369",
    "end": "2220520"
  },
  {
    "text": "about that later but bots are awesome and so basically this is one of those like our users versus us trade offs like",
    "start": "2220520",
    "end": "2227180"
  },
  {
    "text": "we're willing to put an effort to make things easier for our users and that is a trade-off that we will almost always take and so it is a trade-off and we pay",
    "start": "2227180",
    "end": "2234950"
  },
  {
    "text": "the price for you okay acceptable levels of complexity there is sort of two",
    "start": "2234950",
    "end": "2245000"
  },
  {
    "text": "different kinds of complexity there is inherent complexity and there's incidental complexity inherent",
    "start": "2245000",
    "end": "2250190"
  },
  {
    "text": "complexity is just like it's actually complicated and incidental complexity is like you made it complicated when you",
    "start": "2250190",
    "end": "2256549"
  },
  {
    "text": "have to make it complicated and so separating out these two things is important because you can't always get",
    "start": "2256549",
    "end": "2263839"
  },
  {
    "text": "inherent go away cuz its inherent like it's defined sort of in the word but",
    "start": "2263839",
    "end": "2269060"
  },
  {
    "text": "incidental complexity is the thing that you can fight because it's about you accidentally making things more",
    "start": "2269060",
    "end": "2274250"
  },
  {
    "text": "complicated than you needed to and so that's like a skill and a thing to like sort of work on and so but what's",
    "start": "2274250",
    "end": "2280490"
  },
  {
    "text": "interesting about this is something can be inherently complex for one design but",
    "start": "2280490",
    "end": "2286340"
  },
  {
    "text": "incidentally complex for another design and so that values list that you picked",
    "start": "2286340",
    "end": "2291590"
  },
  {
    "text": "earlier can often determine if something is inherent or incidentally complex here's what I mean by that Alan Perlis",
    "start": "2291590",
    "end": "2301610"
  },
  {
    "text": "is this guy I don't actually know what he did other than write witty stuff about programming to be honest but he",
    "start": "2301610",
    "end": "2306620"
  },
  {
    "text": "doesn't thing called epigrams and programming and I found several than I think that are interesting to Russ and so it's easier to write an incorrect",
    "start": "2306620",
    "end": "2312770"
  },
  {
    "text": "program than to understand a correct one a programming language is low level when it's programs require attention to the",
    "start": "2312770",
    "end": "2318650"
  },
  {
    "text": "irrelevant that was my favorite and then finally to understand a program you have to become both a machine and the program",
    "start": "2318650",
    "end": "2325100"
  },
  {
    "text": "he wrote these in the late 80s I believe not totally sure but I think these all apply to rust and what I mean by that is",
    "start": "2325100",
    "end": "2331040"
  },
  {
    "text": "that rust does want to help you write Connect software and Russ doesn't want",
    "start": "2331040",
    "end": "2336110"
  },
  {
    "text": "you to write fast software and so in order to do that like we expose a lot more error handling than many languages",
    "start": "2336110",
    "end": "2342530"
  },
  {
    "text": "do because a lot of stuff can go wrong when you're writing programs as it turns out the network can die in the middle of",
    "start": "2342530",
    "end": "2348380"
  },
  {
    "text": "a connection your user can type in something that doesn't make sense like all sorts of errors happen and so",
    "start": "2348380",
    "end": "2353420"
  },
  {
    "text": "we expose those errors many times when other languages just hide them away this happens in a language design level",
    "start": "2353420",
    "end": "2359720"
  },
  {
    "text": "because we have a type called result that returns from fallible operations we don't have exceptions a lot of languages",
    "start": "2359720",
    "end": "2365570"
  },
  {
    "text": "hide a lot of stuff in exceptions which is where you get that like catch e like throw all like you know the kind of",
    "start": "2365570",
    "end": "2371150"
  },
  {
    "text": "things were just like yeah whatever I have no idea what exceptions is throwing so I'm just gonna like catch them all and re throw it again somebody else can",
    "start": "2371150",
    "end": "2376640"
  },
  {
    "text": "deal with it somewhere else that's not great for correctness but it is easy to do and so we've introduced stuff like a",
    "start": "2376640",
    "end": "2383450"
  },
  {
    "text": "question mark operator to help reduce the complexity but it's still always going to be there because we want you to",
    "start": "2383450",
    "end": "2388880"
  },
  {
    "text": "be able to handle errors and that's important and so that's a way in which our design has made something inherently",
    "start": "2388880",
    "end": "2394370"
  },
  {
    "text": "complex languages that care about correctness or able just be like yep throws a bunch of random crap and",
    "start": "2394370",
    "end": "2399950"
  },
  {
    "text": "that's fine and it becomes much easier to use and so they're able to get rid of that stuff and so it's not inherent for",
    "start": "2399950",
    "end": "2406730"
  },
  {
    "text": "them and same thing with one way that rust does safety and speed together like",
    "start": "2406730",
    "end": "2411830"
  },
  {
    "text": "we achieve those two values at the same time is by having a really great static type system because types are checked at",
    "start": "2411830",
    "end": "2418160"
  },
  {
    "text": "compile time so they're free remember I said about long compile times earlier they're not actually free but at runtime",
    "start": "2418160",
    "end": "2423860"
  },
  {
    "text": "they're free so that's cool but if you ever used a really strong static type system you know they're complicated and",
    "start": "2423860",
    "end": "2430400"
  },
  {
    "text": "that means there's a user Russ is a little more complicated for you to use but the benefit of what you get out of that is programs that are really fast",
    "start": "2430400",
    "end": "2436580"
  },
  {
    "text": "and that's cool but that means that we have this sort of like inherent complexity to achieve our goals and",
    "start": "2436580",
    "end": "2442580"
  },
  {
    "text": "these things actually matter if your goals are not to have safety and speed at the same time to only be fast or only",
    "start": "2442580",
    "end": "2447590"
  },
  {
    "text": "be safe then like you don't need these complicated type systems and things become a lot easier for your users and",
    "start": "2447590",
    "end": "2452750"
  },
  {
    "text": "so that's not inherently complex anymore and this is what I said but that's slide",
    "start": "2452750",
    "end": "2458860"
  },
  {
    "text": "all right last case study before I go away green versus system threads this is",
    "start": "2458860",
    "end": "2465950"
  },
  {
    "text": "the most complicated like actual concrete case study I have for you here so there's these two different models of",
    "start": "2465950",
    "end": "2473060"
  },
  {
    "text": "threading there are more of them as well but for the purpose of this talk only these two exist I'm not gonna get into",
    "start": "2473060",
    "end": "2478430"
  },
  {
    "text": "the details that much but basically system threads are provided by your operating system they're an abstraction for running code you say hey OS please",
    "start": "2478430",
    "end": "2485240"
  },
  {
    "text": "run some more code at the same time and it goes cool it doesn't actually run at the same time but that's the whole separate story",
    "start": "2485240",
    "end": "2491410"
  },
  {
    "text": "green threads however are an API that's offered by your runtime and so this is like a programming language is like hey",
    "start": "2491410",
    "end": "2497510"
  },
  {
    "text": "I have this mechanism for running code at the same time and you're like cool I will use that sometimes this is called n2m threading because you have n system",
    "start": "2497510",
    "end": "2504890"
  },
  {
    "text": "threads that are running em green threads and sometimes system threads are called one-to-one threading because one system thread is one operating system",
    "start": "2504890",
    "end": "2511400"
  },
  {
    "text": "thread these terms are also incredibly loose and you can argue about them a lot on the internet if you want to you can",
    "start": "2511400",
    "end": "2517550"
  },
  {
    "text": "argue about a lot of things in internet if you want to okay so some of the trade-offs involving the picking these",
    "start": "2517550",
    "end": "2522830"
  },
  {
    "text": "things are system threads require that you call into the kernel it's a kernel API and they have a generally fixed",
    "start": "2522830",
    "end": "2528920"
  },
  {
    "text": "stack size yes you can this is a slide I'm not putting every last bit of POSIX on here you get a",
    "start": "2528920",
    "end": "2535160"
  },
  {
    "text": "megabyte 8 megabytes by default on x86 64 Linux green threads however because",
    "start": "2535160",
    "end": "2540740"
  },
  {
    "text": "they're run by your program they have no system calls so that's cool no overhead to calling in the kernel and they have a",
    "start": "2540740",
    "end": "2545750"
  },
  {
    "text": "lot smaller stack size for so for example a go routine has currently eight kilobytes of stack it used to be even",
    "start": "2545750",
    "end": "2550970"
  },
  {
    "text": "smaller they found out that was too small they made a little bigger so from these set of trade-offs it looks like you always want green threads like why",
    "start": "2550970",
    "end": "2557210"
  },
  {
    "text": "would you ever use system threads these are just better let's go there's only one slide I got more uh so as I",
    "start": "2557210",
    "end": "2565339"
  },
  {
    "text": "mentioned earlier about the like with the way rust development changed sometimes your values change over time so rust was before 1.0 for 5 whole years",
    "start": "2565339",
    "end": "2572660"
  },
  {
    "text": "and so originally even though rust had the same design goals and like values it expressed them very differently and so",
    "start": "2572660",
    "end": "2580190"
  },
  {
    "text": "originally rust was actually much more similar to Erlang than C++ it's kind a little weird was awesome but weird and",
    "start": "2580190",
    "end": "2587539"
  },
  {
    "text": "so it provided only green threads because that's what Erlang does and as the previous slide showed you obviously",
    "start": "2587539",
    "end": "2592579"
  },
  {
    "text": "we pick green threads in every situation but over time rust got lower and lower",
    "start": "2592579",
    "end": "2597859"
  },
  {
    "text": "level and we were able to commit more to our performance goals by doing shenanigans and so we had to sort of",
    "start": "2597859",
    "end": "2604940"
  },
  {
    "text": "re-evaluate this choice this was such a contentious like change there were people threatening to Forks",
    "start": "2604940",
    "end": "2610520"
  },
  {
    "text": "the language over it actually there's a whole nother story and I'm time for so",
    "start": "2610520",
    "end": "2615529"
  },
  {
    "text": "the argument goes like this you're supposed to be a systems programming language but you don't provide access to the operating systems API what does what",
    "start": "2615529",
    "end": "2622400"
  },
  {
    "text": "does that even mean and we're like yeah that makes sense and then also the downside of green threads because you have these small stacks and",
    "start": "2622400",
    "end": "2628579"
  },
  {
    "text": "they're different stacks if you want to call into see you have to switch to the regular operating system stack and so",
    "start": "2628579",
    "end": "2634220"
  },
  {
    "text": "that has a cost and that performance is like totally at odds with our previous performance to a goal as well right so",
    "start": "2634220",
    "end": "2641119"
  },
  {
    "text": "we tried to bend the curve and we failed what if we had a unified API to let you pick do you get green threads are you",
    "start": "2641119",
    "end": "2647930"
  },
  {
    "text": "get system threads whichever one you want you ready code one way they're just threading models right so you spent up a",
    "start": "2647930",
    "end": "2653119"
  },
  {
    "text": "new thread doesn't need to be a green thread or system thread it's fine so let's do both so we have this Lib native versus Lib green and you pick the one",
    "start": "2653119",
    "end": "2660109"
  },
  {
    "text": "you wanted at your program and people would write libraries that abstracted didn't care about the threading models you just get to do",
    "start": "2660109",
    "end": "2665500"
  },
  {
    "text": "whatever you want everything will be wonderful the problem is that this gave you the downsides of both and the advantages of neither so that was a",
    "start": "2665500",
    "end": "2674440"
  },
  {
    "text": "problem it turns out that our green threads weren't very lightweight they were actually pretty heavy and there's",
    "start": "2674440",
    "end": "2679930"
  },
  {
    "text": "some other things I have some lists here I'm not gonna read all this to you but basically some things only made sense",
    "start": "2679930",
    "end": "2685750"
  },
  {
    "text": "for one model not the other model but both models had to support both things so that was awkward it was a problem",
    "start": "2685750",
    "end": "2691780"
  },
  {
    "text": "with IO because like only some stuff work properly across both things or just implementation issue embedding rust so",
    "start": "2691780",
    "end": "2697990"
  },
  {
    "text": "if you want to write rust on an embedded system you'd have to say I never support the green threading runtime but the whole point is they're supposed to be",
    "start": "2697990",
    "end": "2703060"
  },
  {
    "text": "agnostic like how's that go and then finally like we committed to maintaining both things so like you just had to be",
    "start": "2703060",
    "end": "2709480"
  },
  {
    "text": "good enough to maintain both of them and that's like a really big burden so we eventually decided to kill it and that",
    "start": "2709480",
    "end": "2714790"
  },
  {
    "text": "was bad and so we realized that we were able to commit to some values more than others so the answers were different",
    "start": "2714790",
    "end": "2719860"
  },
  {
    "text": "there are other languages who only give you green threads that is awesome for them they have different values than we do and so you should take time as you're",
    "start": "2719860",
    "end": "2727270"
  },
  {
    "text": "designing a system to to check back in with yourself and say hey if my values change since I originally made this decision because maybe the decision I",
    "start": "2727270",
    "end": "2733630"
  },
  {
    "text": "made was a bad one and I need to reevaluate it and so yeah now we only have system threads in standard library",
    "start": "2733630",
    "end": "2740200"
  },
  {
    "text": "but I think I have said on this yeah so because we're not have run time it means",
    "start": "2740200",
    "end": "2745210"
  },
  {
    "text": "that you can write your own runtime and include it if you want so there is a two different packages one is called rayon",
    "start": "2745210",
    "end": "2751210"
  },
  {
    "text": "and one is called Tokyo and they are both ways of doing sort of green threads for different kinds of workloads don't",
    "start": "2751210",
    "end": "2757270"
  },
  {
    "text": "have time to get into it we can talk about it afterwards if you'd like there's also trade-offs here as well for example now you have to know about rayon",
    "start": "2757270",
    "end": "2763750"
  },
  {
    "text": "and or Tokyo and you have to pick the right one to use that's complicated and then finally what happens if people made like six packages to do this instead of",
    "start": "2763750",
    "end": "2769990"
  },
  {
    "text": "two so there's some downsides but I don't have any more time so with that",
    "start": "2769990",
    "end": "2775530"
  },
  {
    "text": "thank you so much for coming to my talk the three things you should take away from this are trade-offs are kind of an",
    "start": "2775530",
    "end": "2780640"
  },
  {
    "text": "inherent aspect of our domain but if you think outside the box you can sometimes have your cake and eat it too",
    "start": "2780640",
    "end": "2785650"
  },
  {
    "text": "and you should use rust when you really care about something being both robust and fast thank you so much",
    "start": "2785650",
    "end": "2791890"
  },
  {
    "text": "you",
    "start": "2791890",
    "end": "2793950"
  }
]