[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "so um yeah I'm going to talk about s bird uh this was something we've been working on for a while we we had a",
    "start": "8559",
    "end": "14440"
  },
  {
    "text": "internal uh piece of crap uh version of it about a year ago and I talked to some people at any scholar last year and uh",
    "start": "14440",
    "end": "21519"
  },
  {
    "text": "specifically uh Paul uh I'll butcher his last name so I'm not going to try it uh",
    "start": "21519",
    "end": "26840"
  },
  {
    "text": "but I should practice uh who who gave me a cool idea which had not thought of and we'll see how it came into play uh here",
    "start": "26840",
    "end": "33239"
  },
  {
    "text": "but uh what is Sun bird it's a it's a library to represent streaming map ruce",
    "start": "33239",
    "end": "38320"
  },
  {
    "text": "in a typ safe way so uh if you want to compose together a lot of map ruce flows",
    "start": "38320",
    "end": "44719"
  },
  {
    "text": "and that's something that I think about a lot uh but I don't want to do it in um with some of the poor uh solutions that",
    "start": "44719",
    "end": "50120"
  },
  {
    "text": "we have now uh and I want to do it in a way that will work in many different platforms that was what we kind of",
    "start": "50120",
    "end": "55520"
  },
  {
    "text": "developed it for this was work with uh several people uh sadly we lost Sam",
    "start": "55520",
    "end": "61239"
  },
  {
    "text": "Richie so uh he's there in black but uh Ashu singal and IO Connell is now one of",
    "start": "61239",
    "end": "67040"
  },
  {
    "text": "the the main guys contributing to this project now it's all on GitHub uh we do all the development on GitHub if you",
    "start": "67040",
    "end": "73080"
  },
  {
    "start": "69000",
    "end": "203000"
  },
  {
    "text": "make a bll request we do it we deploy that jar uh uh internally so uh totally",
    "start": "73080",
    "end": "78960"
  },
  {
    "text": "open source thing so what was the problem we were trying to address so uh the the main thing that we wanted to do",
    "start": "78960",
    "end": "84640"
  },
  {
    "text": "is make it easy to express uh correct code to deal with billions of events a day",
    "start": "84640",
    "end": "90520"
  },
  {
    "text": "uh we were really biased towards uh like being able to get it correct and handling um a lot of data uh maybe we",
    "start": "90520",
    "end": "98520"
  },
  {
    "text": "weren't as biased to making it super easy to deploy because uh we have a lot of people to help us do that and that's",
    "start": "98520",
    "end": "104000"
  },
  {
    "text": "like definitely an open area to make it easier to deploy but we wanted to make it easy to write the code uh easy to get",
    "start": "104000",
    "end": "109159"
  },
  {
    "text": "it right next we wanted to encode common patterns in the types so a lot of",
    "start": "109159",
    "end": "115079"
  },
  {
    "text": "analytics uh loads work look very similar to one another uh if you look at them long enough it gets pretty boring",
    "start": "115079",
    "end": "121399"
  },
  {
    "text": "so a lot of people if you've heard about Hadoop you'll see like all these word count examples and at first you're like",
    "start": "121399",
    "end": "126680"
  },
  {
    "text": "well that's really stupid why don't they do something more exciting but if you're working on these systems at all like everything is word count it's just like",
    "start": "126680",
    "end": "133080"
  },
  {
    "text": "the words are not like like words and maybe the integer is aren't like what you're adding up but it's like almost",
    "start": "133080",
    "end": "138239"
  },
  {
    "text": "all word count so there are a few more patterns than that but we wanted to take some of those and encode those into the",
    "start": "138239",
    "end": "144200"
  },
  {
    "text": "types and next we wanted to improve agility of teams within Twitter and get a lot of voluntary adoption",
    "start": "144200",
    "end": "150640"
  },
  {
    "text": "um one thing that maybe if you're at a smaller company or if you're an individual interested in Scala uh we",
    "start": "150640",
    "end": "156680"
  },
  {
    "text": "have a different Viewpoint a different I have a different perspective is that I'm at a relatively large company now uh and",
    "start": "156680",
    "end": "163080"
  },
  {
    "text": "we're using Scala uh industrially I mean we're like we're there like they're writing the code um and people have",
    "start": "163080",
    "end": "168800"
  },
  {
    "text": "their own opinions about how they want to code it so um you have people who want to use like more of the schol style",
    "start": "168800",
    "end": "174720"
  },
  {
    "text": "and then you have some people who are more like on the Ruby side like it's like statically compiled Ruby right so",
    "start": "174720",
    "end": "179840"
  },
  {
    "text": "so you have that whole gamut of of people there and you really don't generally force people to use your",
    "start": "179840",
    "end": "185680"
  },
  {
    "text": "library if you're a library designer if you're if you're working on platforms they have to kind of choose and if a",
    "start": "185680",
    "end": "190879"
  },
  {
    "text": "team thinks your stuff is crap they're just not going to use it so uh I'm using it myself but also I we the team needed",
    "start": "190879",
    "end": "197319"
  },
  {
    "text": "to get voluntary adoption or it's not going to be it's not the project won't continue so these were the kind of main",
    "start": "197319",
    "end": "203080"
  },
  {
    "start": "203000",
    "end": "295000"
  },
  {
    "text": "uh things that we were kind of thinking about so why wouldn't we just use storm I'm not sure how familiar many of you are with storm uh that's a good question",
    "start": "203080",
    "end": "211159"
  },
  {
    "text": "um why wouldn't we use storm so so storm if you're familiar with cascading at all which is a library for uh programming",
    "start": "211159",
    "end": "217959"
  },
  {
    "text": "Hadoop storm in my view is basically a real-time version of cascading uh it has a model of data where everything's named",
    "start": "217959",
    "end": "225760"
  },
  {
    "text": "but there are no types so you can name them as like quote age and like you'll",
    "start": "225760",
    "end": "231200"
  },
  {
    "text": "get it in any ref but like that's the extent of it um I'm surprised how often",
    "start": "231200",
    "end": "236360"
  },
  {
    "text": "I talk to Java programmers who don't really see anything exactly wrong with and I'm like I thought like I thought",
    "start": "236360",
    "end": "242680"
  },
  {
    "text": "they were like against the Ruby guys I'm like you know how like the way you think about the Ruby guys well that's what I'm",
    "start": "242680",
    "end": "248239"
  },
  {
    "text": "like just thinking about like what you're saying but whatever that's just not the case so um the next thing is",
    "start": "248239",
    "end": "254280"
  },
  {
    "text": "that storm has very few semantics and if you give someone this kind of just like oh just write some code they start doing",
    "start": "254280",
    "end": "260880"
  },
  {
    "text": "all kinds of things that are like they're not very scalable they they they don't lend themselves to uh easy",
    "start": "260880",
    "end": "266960"
  },
  {
    "text": "distributed programming um and I think it's just too much rope to hang yourself so we really wanted to constrain like as",
    "start": "266960",
    "end": "273440"
  },
  {
    "text": "much as we could like ridiculously so um the semantics that we gave next that the",
    "start": "273440",
    "end": "279160"
  },
  {
    "text": "code is not portable so if you write storm code you're you're going to run storm if tomorrow you decide you want to",
    "start": "279160",
    "end": "284440"
  },
  {
    "text": "deploy some kind of ACO system or you want to run it on Hadoop or you want to run it on spark a lot of these",
    "start": "284440",
    "end": "289919"
  },
  {
    "text": "semantically can be made to work the same but if you just code to uh storm that's not going to be the",
    "start": "289919",
    "end": "295880"
  },
  {
    "start": "295000",
    "end": "499000"
  },
  {
    "text": "case so what does a code wind up looking like so I hope you have a feel for the problem domain somewhat now",
    "start": "295880",
    "end": "303000"
  },
  {
    "text": "so uh this was uh this was uh I I don't know why it didn't occur to us before",
    "start": "303000",
    "end": "308800"
  },
  {
    "text": "but we had this really janky way of running on multiple platforms before I talked to Paul and he mentioned this like why don't you take this idea and",
    "start": "308800",
    "end": "315320"
  },
  {
    "text": "then so it winds up looking like this so you have a platform a platform is like you can think of like AKA or or spark or",
    "start": "315320",
    "end": "322280"
  },
  {
    "text": "storm and like it's like it's going to be the value p in this type Constructor and then on each of these platforms you",
    "start": "322280",
    "end": "328160"
  },
  {
    "text": "have a there's there's several abstract types that represent the concepts that you're going to have in these streaming aggregations so the simplest one to",
    "start": "328160",
    "end": "335039"
  },
  {
    "text": "think about the simplest two maybe would be source and sync a source is going to be something that's going to uh it has",
    "start": "335039",
    "end": "340639"
  },
  {
    "text": "one type parameter the thing that the type that it's going to emit so it's I'm going to get tweets out of the fire hose",
    "start": "340639",
    "end": "347360"
  },
  {
    "text": "and then a sync is going to take one type parameter that's going to like kind of eat those things like if I write onto a queue that someone else is going to do",
    "start": "347360",
    "end": "353319"
  },
  {
    "text": "something that that might be a sync a store is um uh it's it it's it's really",
    "start": "353319",
    "end": "361039"
  },
  {
    "text": "uh not the best name because it's it's not probably what you think uh but it's something that can uh you can merge",
    "start": "361039",
    "end": "367120"
  },
  {
    "text": "values into uh and we'll see more about that in a moment and a service is probably more what you think of as a",
    "start": "367120",
    "end": "373240"
  },
  {
    "text": "store a key Value Store it allows you to look things up by a key so if I give a user ID and I want to know what their",
    "start": "373240",
    "end": "379560"
  },
  {
    "text": "bio is uh that's what uh the service gives me and on each different platform these might be represented by different",
    "start": "379560",
    "end": "385120"
  },
  {
    "text": "types but conceptually these are the basic things lastly there's a plan probably isn't even really needed but",
    "start": "385120",
    "end": "391319"
  },
  {
    "text": "this is what the work of the platform will do is that I take a a completed tail producer the output of a total some",
    "start": "391319",
    "end": "397319"
  },
  {
    "text": "kind of aggregation job and I make some platform specific plan and then I guess if you that that plan if it's like a big",
    "start": "397319",
    "end": "404240"
  },
  {
    "text": "set of uh actors or if it's a Sor topology or whatever then you go on and",
    "start": "404240",
    "end": "410199"
  },
  {
    "text": "do your thing you deploy it so that's like kind of the basic thing I'm going to skip over what buffer is because I",
    "start": "410199",
    "end": "416360"
  },
  {
    "text": "mean you can see what it is but whatever so once you've got this you can then",
    "start": "416360",
    "end": "421520"
  },
  {
    "text": "write business logic in a way that's totally divorced from any of the systems",
    "start": "421520",
    "end": "427039"
  },
  {
    "text": "questions so here's well like I said it's like we're in analytics so we're just counting words all the time all day",
    "start": "427039",
    "end": "433000"
  },
  {
    "text": "long hope you like Words uh so uh here we go we have a word count it",
    "start": "433000",
    "end": "439680"
  },
  {
    "text": "works for any platform p uh we take a source it's a producer um uh on this",
    "start": "439680",
    "end": "446160"
  },
  {
    "text": "platform p and it produces statuses this actually is working on the uh on tweets",
    "start": "446160",
    "end": "451479"
  },
  {
    "text": "there's a data structure here so the status uh is has a text associated with",
    "start": "451479",
    "end": "456879"
  },
  {
    "text": "it and it's some Java Library so we got to put null checks all over the place apologies so we filter out all the",
    "start": "456879",
    "end": "462599"
  },
  {
    "text": "tweets that don't have null then we are going to flatten them down into with",
    "start": "462599",
    "end": "467800"
  },
  {
    "text": "some tokenized function this tokenized function is not on the page but it's just going to be a regular expression that splits on Whit space because we're",
    "start": "467800",
    "end": "474479"
  },
  {
    "text": "naive and like everything's crap um and then you map that onto just the pair the",
    "start": "474479",
    "end": "479639"
  },
  {
    "text": "word and the count this is the classic word count example you must have seen it 100 times if you've seen it uh if you've",
    "start": "479639",
    "end": "485720"
  },
  {
    "text": "looked at any of these uh analytics platforms and last we sum those up by",
    "start": "485720",
    "end": "490879"
  },
  {
    "text": "key into the store so that jams a a couple of Concepts together we're summing by key into a store okay let's",
    "start": "490879",
    "end": "499319"
  },
  {
    "start": "499000",
    "end": "568000"
  },
  {
    "text": "take a look at it so what are these stores so there are two libraries that I think turned out pretty well I'm happy",
    "start": "499319",
    "end": "505360"
  },
  {
    "text": "with them you may think they suck probably um uh they came out of summing bird and that were algird and uh",
    "start": "505360",
    "end": "511440"
  },
  {
    "text": "Storehouse uh alge bird was like a ridiculous like making fun of ourselves name um but somehow what happened was he",
    "start": "511440",
    "end": "518039"
  },
  {
    "text": "kept saying it and it doesn't sound ridiculous anymore so like if you if you get a chance like just remind me how",
    "start": "518039",
    "end": "524320"
  },
  {
    "text": "ridiculous that name was but anyways um Storehouse are is just a combinator",
    "start": "524320",
    "end": "529360"
  },
  {
    "text": "library for dealing with stores uh it came up fairly often that we wanted to like glue some stores together in some",
    "start": "529360",
    "end": "535680"
  },
  {
    "text": "ways and you can kind of think about what that means like map values right map values on a map as I'm sure you all",
    "start": "535680",
    "end": "541360"
  },
  {
    "text": "know and get burned by on some with some regularity mapping the value is lazy better keep that in mind so but",
    "start": "541360",
    "end": "549040"
  },
  {
    "text": "similarly you you would want that laziness with the store like if I don't want to map all the tweets to their",
    "start": "549040",
    "end": "554959"
  },
  {
    "text": "length I don't want to really go through and enumerate all like like in billion tweets and compute their link link and",
    "start": "554959",
    "end": "561600"
  },
  {
    "text": "materialize them but a store that gave me a view of that that would be handy that's a very simple uh type of",
    "start": "561600",
    "end": "567120"
  },
  {
    "text": "combinator that we need so there's a couple signatures we have when we use them to look things up that's that",
    "start": "567120",
    "end": "572600"
  },
  {
    "start": "568000",
    "end": "685000"
  },
  {
    "text": "service notion we talked about you just need this function from uh K to Future option v um future option could I like",
    "start": "572600",
    "end": "580880"
  },
  {
    "text": "argu it would be cool it should probably be its own type or maybe I should just totally geek out and we put the type",
    "start": "580880",
    "end": "586040"
  },
  {
    "text": "deps everywhere whatever uh but it's a monad it's got some like all the nice properties it's fun uh merge is another",
    "start": "586040",
    "end": "593160"
  },
  {
    "text": "thing that we we use a lot and we're going to see where we use that in a second but it's it's very commonly you",
    "start": "593160",
    "end": "599200"
  },
  {
    "text": "have some key I don't really care what the value is now I just want to increment it like how many times did I",
    "start": "599200",
    "end": "605200"
  },
  {
    "text": "say Hadoop in this talk and like it's like all you have to do is merge in one more for uh reasons why that which I can",
    "start": "605200",
    "end": "612320"
  },
  {
    "text": "like we can talk about probably later if you're interested what should the return of merge be I argue strongly that it",
    "start": "612320",
    "end": "618079"
  },
  {
    "text": "should be the value just prior immediately prior to the merge um I have a couple reasons for it and that's what it returns but we have this fun stuff we",
    "start": "618079",
    "end": "625920"
  },
  {
    "text": "have this combinator Library it's called Storehouse it's on GitHub and Doug here like it's like totally jamming on it",
    "start": "625920",
    "end": "631720"
  },
  {
    "text": "like uh like making it not suck so uh thanks Doug um so uh what are the sums",
    "start": "631720",
    "end": "638120"
  },
  {
    "text": "well we just heard all about what the sums probably are about they're monoids actually we got really distracted",
    "start": "638120",
    "end": "644519"
  },
  {
    "text": "everybody's into the monoid we realized actually we really probably just care about semigroups um and so one of the",
    "start": "644519",
    "end": "650480"
  },
  {
    "text": "best things I've probably done to Twitter is allow people to finally start saying monoid and semigroup like all the time with a straight face and like",
    "start": "650480",
    "end": "657040"
  },
  {
    "text": "here's my like ad engagement like counter semigroup and I'm like that is so cool that they're talking about ad",
    "start": "657040",
    "end": "662959"
  },
  {
    "text": "engagement semigroups and um anyway so on algebra we've got like a a crap ton",
    "start": "662959",
    "end": "668880"
  },
  {
    "text": "of them um like it's it's like the it's like the hackish industrial U version of",
    "start": "668880",
    "end": "675519"
  },
  {
    "text": "spire Spire is prettier uh we we we can all admit that but this is this you go to the you go to war with the algebra",
    "start": "675519",
    "end": "682160"
  },
  {
    "text": "you've got you know so um so that's what we do um but what other monoids that we",
    "start": "682160",
    "end": "688760"
  },
  {
    "start": "685000",
    "end": "934000"
  },
  {
    "text": "we use a lot we use quite a lot of sketching uh algorithms and those are probably the big difference between what",
    "start": "688760",
    "end": "695760"
  },
  {
    "text": "we've uh focused on in algebra and certainly what I've seen in scol z or in",
    "start": "695760",
    "end": "701320"
  },
  {
    "text": "uh Spire so it turns out that a lot of interesting calculations approximate",
    "start": "701320",
    "end": "706760"
  },
  {
    "text": "calculations are representable as monoids and this becomes very useful when you want to distribute over like",
    "start": "706760",
    "end": "713839"
  },
  {
    "text": "huge amounts of data uh I've I've talked about that I'm sick of hearing myself",
    "start": "713839",
    "end": "719000"
  },
  {
    "text": "talk about monoid frankly but uh you can look that up it's it's really interesting it's really um it's it's the",
    "start": "719000",
    "end": "725480"
  },
  {
    "text": "parallelism that you can get from the associativity is pretty powerful and you can also do another trick with it which",
    "start": "725480",
    "end": "731440"
  },
  {
    "text": "I will talk a little bit more about but if you're trying to count a lot of things it's I one of the big things that",
    "start": "731440",
    "end": "736920"
  },
  {
    "text": "I talk about a lot is it's really foolish to have like billions of tweets a day and then like really obsessed",
    "start": "736920",
    "end": "742040"
  },
  {
    "text": "about trying to count every single one so just because you can build a system with a queue and you're going to try to",
    "start": "742040",
    "end": "747120"
  },
  {
    "text": "do this this is a really really foolish thing because no system is perfect you're probably dropping some percentage",
    "start": "747120",
    "end": "752519"
  },
  {
    "text": "of the tweets at injest putting them on the Queue Etc so it's incredibly foolish in my view to then like totally geek out",
    "start": "752519",
    "end": "760399"
  },
  {
    "text": "about trying to keep an integer exactly right for all these keys that you know the input is got to be no more than like",
    "start": "760399",
    "end": "767800"
  },
  {
    "text": "no more than you know it's there's certainly more than 0.1% error right so",
    "start": "767800",
    "end": "772839"
  },
  {
    "text": "why not use an approximate data structure that can do it for you with 1%",
    "start": "772839",
    "end": "778120"
  },
  {
    "text": "one/ tenth of a percent at the storage space and that's what all these things offer you um super fun uh and even I'm",
    "start": "778120",
    "end": "787240"
  },
  {
    "text": "interested in some problems like this and I think there's a little bit of a mismatch between people in the uh kind",
    "start": "787240",
    "end": "792920"
  },
  {
    "text": "of data Community uh and machine learning community that I think could get a lot of mileage out of a lot of the",
    "start": "792920",
    "end": "799279"
  },
  {
    "text": "algebraic Concepts uh and and even the category theoretic Concepts which are a little bit distinct uh and what what",
    "start": "799279",
    "end": "806920"
  },
  {
    "text": "people who are really interested in say for instance U if you look at um hll or",
    "start": "806920",
    "end": "812120"
  },
  {
    "text": "or scol z u Leo I think I think I think Eric's very interested in actually doing",
    "start": "812120",
    "end": "817320"
  },
  {
    "text": "like arithmetic and math and and things like what we what you probably thought of as math is it as a as as a kid but",
    "start": "817320",
    "end": "825079"
  },
  {
    "text": "like there I'm really interested in this and I would like us to think about this what happens when you have these properties that we kind of like and",
    "start": "825079",
    "end": "831880"
  },
  {
    "text": "they're not always true and that actually seems to come up a lot of times like if we just heard about monoids and",
    "start": "831880",
    "end": "837880"
  },
  {
    "text": "we heard like the property need to have this associativity uh so so do semigroups but what if you have an",
    "start": "837880",
    "end": "844120"
  },
  {
    "text": "object that doesn't have that property exactly it's not exactly associative you",
    "start": "844120",
    "end": "850000"
  },
  {
    "text": "could like if you imagine a set a big set of items and you could build out a table you could say associativity put",
    "start": "850000",
    "end": "857800"
  },
  {
    "text": "some constraint on what that table can look like what if you just go in in a couple of places and break it like",
    "start": "857800",
    "end": "864160"
  },
  {
    "text": "addition modu 3 Okay and like in a couple of places you like just change",
    "start": "864160",
    "end": "869880"
  },
  {
    "text": "the number to zero okay you're going like if you unless you happen to choose the place where it was Zero you're going to break associativity by doing that but",
    "start": "869880",
    "end": "876680"
  },
  {
    "text": "what if you do it in very very few places and you had an approximation anyway you might not care you might be willing to run this kind of thing not",
    "start": "876680",
    "end": "884000"
  },
  {
    "text": "not for addition obviously but for an algorithm that's going to estimate like the direction of a vector if it's off by",
    "start": "884000",
    "end": "890279"
  },
  {
    "text": "a little bit you probably don't care and you might leverage some of the same systems benefits you've got from the",
    "start": "890279",
    "end": "895920"
  },
  {
    "text": "associativity to say I don't care a better example doubles and floats they're not associative as I I hope that",
    "start": "895920",
    "end": "902839"
  },
  {
    "text": "everyone knows um due to the i e 754 standard if you take a plus b and then",
    "start": "902839",
    "end": "909480"
  },
  {
    "text": "add C to it it will not necessarily and quite often be different from B plus C but then a was added to it but it's",
    "start": "909480",
    "end": "915959"
  },
  {
    "text": "probably not meaningfully different to you because you probably didn't care the order in which you got these doubles so that's another example where it's like",
    "start": "915959",
    "end": "922560"
  },
  {
    "text": "strictly speaking doubles are not associative but it's not meaningfully different because actually like I what",
    "start": "922560",
    "end": "928199"
  },
  {
    "text": "do I like Aver over any the three choose two ways to do that I don't",
    "start": "928199",
    "end": "934199"
  },
  {
    "start": "934000",
    "end": "1054000"
  },
  {
    "text": "know so anyways back to like uh like software I guess a lot of us are just",
    "start": "934199",
    "end": "939360"
  },
  {
    "text": "interested in types and how we like put our type parameters down so let's talk about that a little bit um in summing",
    "start": "939360",
    "end": "945839"
  },
  {
    "text": "bird we think of everything as a producer this is like they're they're very similar uh models of writing uh",
    "start": "945839",
    "end": "952160"
  },
  {
    "text": "computation uh that many people talked about I guess it's somewhat similar to all the iter stuff uh it's uh you can",
    "start": "952160",
    "end": "961120"
  },
  {
    "text": "it's a very simple concept but the idea of a producer is it's something that's going to come down",
    "start": "961120",
    "end": "966360"
  },
  {
    "text": "the pipe and one thing at a time is going to pop out of this you're never really going to have one in your hand it's like really",
    "start": "966360",
    "end": "972639"
  },
  {
    "text": "something that like describes a computation but that's kind of the model and once you've got this you've",
    "start": "972639",
    "end": "978440"
  },
  {
    "text": "got a bunch of simple operations most of these are mapping operations that take a simple thing take a single thing and",
    "start": "978440",
    "end": "983920"
  },
  {
    "text": "expand them out the other thing that you could do so is it like this is another annoying thing like as a community it'",
    "start": "983920",
    "end": "989480"
  },
  {
    "text": "be cool if we could like vote on what is the the name of the function that is kind of like bind the monatic bind but",
    "start": "989480",
    "end": "996319"
  },
  {
    "text": "isn't monatic Bine that you see popping up like all over the collections Library like that would be cool like what have",
    "start": "996319",
    "end": "1002600"
  },
  {
    "text": "we just called it like concat map or something or I don't know maybe we just should call the mon monatic bind bind",
    "start": "1002600",
    "end": "1007639"
  },
  {
    "text": "but anyways this is not a monad it's an applicative funter for those people who are like in the house who care about",
    "start": "1007639",
    "end": "1013399"
  },
  {
    "text": "such things but it does have a flatmap method because most people who work with the with the collections Library think they know what flat that means it means",
    "start": "1013399",
    "end": "1020240"
  },
  {
    "text": "take a single thing out put it onto more things but then flatten it down okay and",
    "start": "1020240",
    "end": "1026959"
  },
  {
    "text": "I'm not gonna be that dude at Twitter is like no seriously man that's not like flat map I'm not gonna ship it your code",
    "start": "1026959",
    "end": "1032798"
  },
  {
    "text": "I'm not I'm not that guy so um anyways one of the cool things you can do is you can look things up and",
    "start": "1032799",
    "end": "1039438"
  },
  {
    "text": "you can do some joins and we'll see more about that but suppose you have an IND you have a producer of Longs that",
    "start": "1039439",
    "end": "1045880"
  },
  {
    "text": "represent a user ID you might want to say how many tweets that person make and that's a lookup function um okay other",
    "start": "1045880",
    "end": "1053240"
  },
  {
    "text": "than that you're doing your thing so uh all the reductions so what",
    "start": "1053240",
    "end": "1058880"
  },
  {
    "start": "1054000",
    "end": "1439000"
  },
  {
    "text": "and I talked about we wanted to constrain uh the class of operations that you could do so actually all of the",
    "start": "1058880",
    "end": "1064640"
  },
  {
    "text": "reductions you can do are only semigroups at first we said monoid turns",
    "start": "1064640",
    "end": "1069760"
  },
  {
    "text": "out the zero is not very useful uh you can think about the the zero of the monoid being useful for stores like I",
    "start": "1069760",
    "end": "1076240"
  },
  {
    "text": "can have a sparse store where I don't need to store zeros uh it's an efficiency there but from a",
    "start": "1076240",
    "end": "1081320"
  },
  {
    "text": "systems perspective I don't think monoid is like really meaningfully better than um a semigroup when you're building",
    "start": "1081320",
    "end": "1087039"
  },
  {
    "text": "these kinds of systems um and we do get some parallelism from using that which I'll",
    "start": "1087039",
    "end": "1093080"
  },
  {
    "text": "describe in a moment but the only we have a producer if you have a producer that is a tuple of K andv then this can",
    "start": "1093080",
    "end": "1100559"
  },
  {
    "text": "be implicitly converted into a key producer and that gives us several other",
    "start": "1100559",
    "end": "1106120"
  },
  {
    "text": "methods so once you have a key down you can think about things like you can join",
    "start": "1106120",
    "end": "1111760"
  },
  {
    "text": "as a stream comes through this key and a value I can go take that key and look up some value uh some other U and attach it",
    "start": "1111760",
    "end": "1118600"
  },
  {
    "text": "this is a we call this the left join because it's it's semantically equivalent to like sqls notion of a left",
    "start": "1118600",
    "end": "1125480"
  },
  {
    "text": "join uh you can also join two streams together uh by these Keys um you can",
    "start": "1125480",
    "end": "1132240"
  },
  {
    "text": "probably imagine how that sort of thing is done but if I can if I take uh this stream over here as it comes in if I can",
    "start": "1132240",
    "end": "1139280"
  },
  {
    "text": "write it out to some store that can also act as a service then I could I mean all",
    "start": "1139280",
    "end": "1144480"
  },
  {
    "text": "you need the ability to do is to write and then read from services and those are again one of our four Primitives",
    "start": "1144480",
    "end": "1151080"
  },
  {
    "text": "syns the service the stores um we had some other uh option",
    "start": "1151080",
    "end": "1157080"
  },
  {
    "text": "map we have here a little bit like this idea of the canat map that actually is a very interesting notion um for uh uh",
    "start": "1157080",
    "end": "1165520"
  },
  {
    "text": "it's closed under composition so that function of something to an option of something else as close you can keep you",
    "start": "1165520",
    "end": "1171600"
  },
  {
    "text": "know cly combining those and it stays like that and the nice thing is it's a contract that I'm going to take things",
    "start": "1171600",
    "end": "1178200"
  },
  {
    "text": "and emit zero or one item back out whereas what we TP what we call a flat",
    "start": "1178200",
    "end": "1183880"
  },
  {
    "text": "map it could go from zero to a huge number for a systems person this might be relevant if I'm about to go across",
    "start": "1183880",
    "end": "1190760"
  },
  {
    "text": "the network I might choose to prefer to push up option map this notion that may",
    "start": "1190760",
    "end": "1196760"
  },
  {
    "text": "filter things out or change them and then send fewer things over and then try to put reductions next to Flat Maps",
    "start": "1196760",
    "end": "1204120"
  },
  {
    "text": "which may dramatically expand the number of items that I'm working on so that's why we called that out uh in this",
    "start": "1204120",
    "end": "1210840"
  },
  {
    "text": "API okay so looking back you've seen a few of these here uh uh we had the",
    "start": "1210840",
    "end": "1216159"
  },
  {
    "text": "filter we had the flat map we we can add more of these functions is an interesting kind of API question where",
    "start": "1216159",
    "end": "1221919"
  },
  {
    "text": "do you put like compositions of these functions in an API I'd be interested if someone has some strong feelings about",
    "start": "1221919",
    "end": "1227600"
  },
  {
    "text": "that to like to tell me where to put them uh one thing is to junk it all up and like you've got like traversible",
    "start": "1227600",
    "end": "1233320"
  },
  {
    "text": "once and like okay and now there's 10,000 methods I could have done with four each and like maybe you just jam it",
    "start": "1233320",
    "end": "1239760"
  },
  {
    "text": "right there in that trait I don't know maybe you do an enrichment and you say like actually I have this class of",
    "start": "1239760",
    "end": "1245159"
  },
  {
    "text": "things but I and I'm interested in a different one but we have some and here they are and here I'm applying a few of",
    "start": "1245159",
    "end": "1250559"
  },
  {
    "text": "them here so I'm taking a producer of p and I'm going to wind up producing",
    "start": "1250559",
    "end": "1255880"
  },
  {
    "text": "another producer at the end of the day and then I can schedule at so um so where where are the monads",
    "start": "1255880",
    "end": "1263600"
  },
  {
    "text": "here you know we got to we can't just we can't just stick with monoids uh they're",
    "start": "1263600",
    "end": "1268640"
  },
  {
    "text": "they're they're they're too limiting so uh we we we we have to have some kind of cred so uh we play around with monoids",
    "start": "1268640",
    "end": "1275720"
  },
  {
    "text": "uh monads in the um in the planter designs so the planners are are",
    "start": "1275720",
    "end": "1281120"
  },
  {
    "text": "implemented as monads over uh the kind of inputs that we need on these Java",
    "start": "1281120",
    "end": "1286600"
  },
  {
    "text": "based platforms such as Hado or uh stormm uh they have some mutable",
    "start": "1286600",
    "end": "1293440"
  },
  {
    "text": "data structure underneath and a common pattern that we found very nice was the reader uh so we use the reader monad to",
    "start": "1293440",
    "end": "1300799"
  },
  {
    "text": "uh rather than to do any mutation as we're planning we're composing this computation so we got the reat up there",
    "start": "1300799",
    "end": "1308039"
  },
  {
    "text": "and then we have some type that we Define this flow producer it's going to based on this flow input produce a flow",
    "start": "1308039",
    "end": "1314640"
  },
  {
    "text": "that's straightforward and then we can go through and in this planner that renders these graphs of maps and flat",
    "start": "1314640",
    "end": "1321440"
  },
  {
    "text": "maps that aren't flat maps and some by keys we're really just building up this computation that at the end of the day",
    "start": "1321440",
    "end": "1328039"
  },
  {
    "text": "once we've got the plan we can apply to like storm or like some system like samza or like Hadoop to build up the",
    "start": "1328039",
    "end": "1336159"
  },
  {
    "text": "actual description of the real computation and that planner we actually we had a few implementations um we've",
    "start": "1336159",
    "end": "1342559"
  },
  {
    "text": "we've had one for AA that we experimented with a little bit um it's not in production it's not actually even",
    "start": "1342559",
    "end": "1348200"
  },
  {
    "text": "a open pole request in the in the codebase now I'd love it if someone got into that um but we have some others",
    "start": "1348200",
    "end": "1353559"
  },
  {
    "text": "that we've built for uh for storm and for some inter internal platforms that we've played around with a little bit",
    "start": "1353559",
    "end": "1359440"
  },
  {
    "text": "and the nice thing is that we can share the optimizations on these graphs in one place so ways of composing these graphs",
    "start": "1359440",
    "end": "1366000"
  },
  {
    "text": "down in a nice way we can share at this kind of like planner that brings things to a certain physical layer and then",
    "start": "1366000",
    "end": "1371799"
  },
  {
    "text": "only have this last stage of rendering that physical layer into a into a like a",
    "start": "1371799",
    "end": "1377640"
  },
  {
    "text": "meaningful repres presentation on the underlying platform so um what are we doing uh next",
    "start": "1377640",
    "end": "1385240"
  },
  {
    "text": "uh we're trying to get a lot of shared opt lift for optimizing the hell out of algeb bird uh particularly like it's",
    "start": "1385240",
    "end": "1392360"
  },
  {
    "text": "nice to write these functional codes for instance we have the very functional implementation of most of the algorithms",
    "start": "1392360",
    "end": "1398240"
  },
  {
    "text": "that we that we write let's think for instance hyper log log but then these people are Deo like ah this is awesome",
    "start": "1398240",
    "end": "1404000"
  },
  {
    "text": "monoids are great hyper log logs cool let me go count a billion things per second and then it's like this",
    "start": "1404000",
    "end": "1410039"
  },
  {
    "text": "blows up immediately so so it turns out we got to like like",
    "start": "1410039",
    "end": "1415640"
  },
  {
    "text": "drop some Purity in some places we do some profiling and look internally internal to some of the methods like if",
    "start": "1415640",
    "end": "1421320"
  },
  {
    "text": "we really have to we might do use a VAR um but the API and everything else uh we",
    "start": "1421320",
    "end": "1427559"
  },
  {
    "text": "we try to keep clean and I think that's a really interesting area how can we optimize a lot of these sketching algorithms which are really heavily",
    "start": "1427559",
    "end": "1433039"
  },
  {
    "text": "numerical algorithms uh but make them still fit nicely into a way that you can reason about them in very functional",
    "start": "1433039",
    "end": "1438159"
  },
  {
    "text": "code uh the other thing that we're doing is we just uh a lot of different store implementations the storehouse uh that's",
    "start": "1438159",
    "end": "1444880"
  },
  {
    "start": "1439000",
    "end": "1856000"
  },
  {
    "text": "suitable for use even with a with an AA backend or or other backends that we could write we're thinking you know",
    "start": "1444880",
    "end": "1451360"
  },
  {
    "text": "perhaps a finagle based back end which is another kind of platform at Twitter um it also used outside of Twitter but",
    "start": "1451360",
    "end": "1457480"
  },
  {
    "text": "uh we have implementations for redis mcash MySQL Cassandra um uh so we have a",
    "start": "1457480",
    "end": "1464520"
  },
  {
    "text": "lot of backends there and that's nice and I would love to see a backend for AA but the fact of the matter is it",
    "start": "1464520",
    "end": "1469960"
  },
  {
    "text": "probably won't come from us just because our hands are full but uh we had a sketch one that Ian one of the main guys",
    "start": "1469960",
    "end": "1475720"
  },
  {
    "text": "in the team made but I'm sure someone else could like jam one out really quickly who is motivated to do so um",
    "start": "1475720",
    "end": "1480880"
  },
  {
    "text": "we're more motivated to build a spark planner uh which is something we're going to be working on soon and uh and the finagle planner",
    "start": "1480880",
    "end": "1487600"
  },
  {
    "text": "so anyway um I hope uh some of you might be interested in streaming uh compute",
    "start": "1487600",
    "end": "1495279"
  },
  {
    "text": "and be interested in making this easier to use uh some areas that could be easier to use is the deploy process",
    "start": "1495279",
    "end": "1501520"
  },
  {
    "text": "Twitter's got to be a big company so someone's going to help you deploy everything and like I just make this jar and it just magically runs on billions",
    "start": "1501520",
    "end": "1507679"
  },
  {
    "text": "of tweets but if you're like Doug who I like as far as I can tell like basically is like running Meetup off his laptop um",
    "start": "1507679",
    "end": "1514279"
  },
  {
    "text": "like it sounds like it's a it's a hard thing to do so uh so come help us out",
    "start": "1514279",
    "end": "1519399"
  },
  {
    "text": "with that there's the GitHub the uh Google group Etc so thank you all",
    "start": "1519399",
    "end": "1527080"
  },
  {
    "text": "uh so no no no no similar story at all and part of the issues part of the issue",
    "start": "1535000",
    "end": "1540919"
  },
  {
    "text": "is the following if you have this notion of this graph that you're going to then plan and then render and then submit um",
    "start": "1540919",
    "end": "1546320"
  },
  {
    "text": "I guess we could try to abstract over how other platforms would do that but in storm it wouldn't even be that well uh",
    "start": "1546320",
    "end": "1552039"
  },
  {
    "text": "defined because storm I mean it's really focused on a stream computation where you define it once for all time and then",
    "start": "1552039",
    "end": "1557760"
  },
  {
    "text": "you just show like data through it forever and I think you can imagine kind of staging it up",
    "start": "1557760",
    "end": "1563000"
  },
  {
    "text": "really quickly and maybe something like AA would be good there especially with the sampling kind of picture uh where",
    "start": "1563000",
    "end": "1568039"
  },
  {
    "text": "maybe you you're only sampling some of the the items that come into your inputs and just kind of see how it works but we",
    "start": "1568039",
    "end": "1573399"
  },
  {
    "text": "really don't do that much of that mostly because of our data the scale of our data like that doesn't really it it's",
    "start": "1573399",
    "end": "1579480"
  },
  {
    "text": "not that practical at a different data scale it might be more practical so if someone worked on that that would be",
    "start": "1579480",
    "end": "1585919"
  },
  {
    "text": "awesome underscore 8 that's like I don't know like Ask Josh or some typ safe dude about like what's going on with their",
    "start": "1586200",
    "end": "1592679"
  },
  {
    "text": "like Docks but uh so uh really uh so it's so it there's",
    "start": "1592679",
    "end": "1602559"
  },
  {
    "text": "this service type with a Sync It's really what it is so that plat there's a",
    "start": "1602559",
    "end": "1607760"
  },
  {
    "text": "platform p and that platform P defines this notion if you if we go way",
    "start": "1607760",
    "end": "1615158"
  },
  {
    "text": "back it has this type buffer which is exactly service with the sync",
    "start": "1615799",
    "end": "1622159"
  },
  {
    "text": "it probably should be something that extends the service with the sink hey spoiler alert like that's only been used",
    "start": "1622159",
    "end": "1628120"
  },
  {
    "text": "like once in production so probably we push on that a little bit we'd realize oh there's like some all kinds of things wrong with that type but that's the type",
    "start": "1628120",
    "end": "1634679"
  },
  {
    "text": "that it needs so it's buffer and so for whatever reason the Scola uh when we did",
    "start": "1634679",
    "end": "1640039"
  },
  {
    "text": "generated the Scala docs on that it created rather than buffer it created underscore do8 service with sync what",
    "start": "1640039",
    "end": "1647760"
  },
  {
    "text": "was that score I mean it's an existential it's not actually well so there's P we know if you scroll up this",
    "start": "1647760",
    "end": "1656399"
  },
  {
    "text": "is on the producer P so I would guess or or the the platform P so IID guess it would be P so P store would be the way",
    "start": "1656399",
    "end": "1664640"
  },
  {
    "text": "to refer to that abstract type normally I guess it should be pbuffer but I don't",
    "start": "1664640",
    "end": "1669720"
  },
  {
    "text": "know why it doesn't show up and when we write in the code it is p buffer",
    "start": "1669720",
    "end": "1676440"
  },
  {
    "text": "yes oh it's been really so that's been that's been cool so the first thing is",
    "start": "1676440",
    "end": "1682360"
  },
  {
    "text": "what's annoying is people are like oh you're only doing monoids my thing's not a monoid I'm like how do you know really",
    "start": "1682360",
    "end": "1688600"
  },
  {
    "text": "do you have a proof that that is not a monoid I don't think you have a proof it's not a monoid so I have to go and",
    "start": "1688600",
    "end": "1693679"
  },
  {
    "text": "like say and and even even but I will admit it's kind of hard I was working with Fabian over there and he's like I",
    "start": "1693679",
    "end": "1699559"
  },
  {
    "text": "want to do this thing and I'm like I'm not sure it's a mon like ah it's a m like come on so we sit down with it and",
    "start": "1699559",
    "end": "1704720"
  },
  {
    "text": "it's kind of like that old joke it's like you have this like it's like is that really trivial and the professor pisses around he looks at it stares",
    "start": "1704720",
    "end": "1711320"
  },
  {
    "text": "thanks a little bit and he goes off to his office comes back he's like yes it is actually trivial and",
    "start": "1711320",
    "end": "1717360"
  },
  {
    "text": "so so uh so that happened and then we worked on it we write some unit tests and like no actually like this damn",
    "start": "1717360",
    "end": "1723559"
  },
  {
    "text": "thing that I said was a monoid wasn't a monoid but then I went home and I thought about it again like no it is a monoid and so there is some amount of",
    "start": "1723559",
    "end": "1730279"
  },
  {
    "text": "that okay that having been said most people are adding up numbers or sets or hyper log logs or cman sketch it's",
    "start": "1730279",
    "end": "1737039"
  },
  {
    "text": "totally clear how what those patterns are and I think about between 2third and 75% of our streaming jobs now analytics",
    "start": "1737039",
    "end": "1744760"
  },
  {
    "text": "jobs are on summing bird rather than like pure storm so it's been very successful in that way um people hate I",
    "start": "1744760",
    "end": "1752240"
  },
  {
    "text": "would love to talk to I'm going to run out of time oh I've got a few a minute one thing that I really so I got really",
    "start": "1752240",
    "end": "1758000"
  },
  {
    "text": "into like let's make it as correct as possible the first time around but it turns out like people don't like I mean",
    "start": "1758000",
    "end": "1763399"
  },
  {
    "text": "I don't know I got up this morning and got on the gy on the treadmill at the gym I don't know how many of you did um but it's like people don't like them",
    "start": "1763399",
    "end": "1769440"
  },
  {
    "text": "taking their medicine and so like at the first like thing you got to do is like write down all these types they don't",
    "start": "1769440",
    "end": "1774840"
  },
  {
    "text": "like it now they certainly don't like it when they deploy their job and it fails and they like haha should have put some",
    "start": "1774840",
    "end": "1780279"
  },
  {
    "text": "types like they don't like that either uh but it's kind of like you know I didn't really want heart disease so I",
    "start": "1780279",
    "end": "1786279"
  },
  {
    "text": "should have gotten on the treadmill you know um but nobody really thinks that way and it's like some kind of medicine that they don't want to take so we're",
    "start": "1786279",
    "end": "1792799"
  },
  {
    "text": "trying to find this balance like we could have geeked out about serialization I had some tweets with with uh with Heather about like pickling",
    "start": "1792799",
    "end": "1800159"
  },
  {
    "text": "versus like like the Jank Fest that we have um but the um the thing about our",
    "start": "1800159",
    "end": "1806080"
  },
  {
    "text": "Jank Fest is it's our Jank no um is that uh that's probably true but uh the thing",
    "start": "1806080",
    "end": "1812240"
  },
  {
    "text": "about that is um is that people really don't want to specify serializers for every stage of that operation um and",
    "start": "1812240",
    "end": "1819240"
  },
  {
    "text": "most of the times they won't be needed because the compiler is going to crush these things down and most of like very",
    "start": "1819240",
    "end": "1824519"
  },
  {
    "text": "few of the types will cross between mapper and reducer it's not needed so so that's an example of a case where we we",
    "start": "1824519",
    "end": "1831240"
  },
  {
    "text": "relax some type safety we don't like there's not a type safe proof that you have serialization um and most people seem to",
    "start": "1831240",
    "end": "1837760"
  },
  {
    "text": "like that until their stuff doesn't work so I don't know it's like it's something I'd really like to have like a round",
    "start": "1837760",
    "end": "1842799"
  },
  {
    "text": "table on anyways I'm out of time thanks a lot",
    "start": "1842799",
    "end": "1848240"
  }
]