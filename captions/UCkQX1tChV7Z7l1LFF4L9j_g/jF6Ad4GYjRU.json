[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "190",
    "end": "16720"
  },
  {
    "text": "so obviously my name is Eric Burke I lead the Android team at at Square uh",
    "start": "16720",
    "end": "21760"
  },
  {
    "text": "when I started at Square it was March of 2010 there were just two of us it was me and crazy Bob Lee working in St Louis",
    "start": "21760",
    "end": "29480"
  },
  {
    "text": "back in B's house so we spent the first nine months working in his office and",
    "start": "29480",
    "end": "35480"
  },
  {
    "text": "his wife was amazing she would bring us lunch every day and and treated us really well but that was an amazing",
    "start": "35480",
    "end": "41039"
  },
  {
    "text": "experience um we've grown our team we're up to about five people and I just moved to San Francisco actually the first of",
    "start": "41039",
    "end": "48399"
  },
  {
    "text": "the month I've been living in an empty house all month and uh my wife and kids just moved out Friday so uh it's been a",
    "start": "48399",
    "end": "55600"
  },
  {
    "text": "busy time for me but I'm here in San Francisco now uh doing Android stuff for square and it's awesome so let's get",
    "start": "55600",
    "end": "62920"
  },
  {
    "text": "started this is our card case application so who in this room didn't",
    "start": "62920",
    "end": "70200"
  },
  {
    "text": "realize that square was available on Android one two three four five six",
    "start": "70200",
    "end": "78640"
  },
  {
    "text": "maybe people are being shy but I run into a lot of people who don't realize that we have Android software we",
    "start": "78640",
    "end": "84799"
  },
  {
    "text": "actually have supported Android all along we have iPhone iPad and Android appli applications this is our card case",
    "start": "84799",
    "end": "92399"
  },
  {
    "text": "application on Android uh this is you know I helped write this this is",
    "start": "92399",
    "end": "100040"
  },
  {
    "text": "another screen in the card case application so when you tap in the upper left corner it kind of flips over to the",
    "start": "100040",
    "end": "106640"
  },
  {
    "text": "payment pad and it lets you accept payments one of the things I really like about this screen it's a a a little hack",
    "start": "106640",
    "end": "112680"
  },
  {
    "text": "I did so when you're doing iPhone applications it's really easy for the",
    "start": "112680",
    "end": "118680"
  },
  {
    "text": "programmers and the design because they know exactly what the screen resolution is going to be so the designers always",
    "start": "118680",
    "end": "124240"
  },
  {
    "text": "give you the 1X and the 2x assets right so you get bit Maps you just drop them in and it's awesome it works perfectly",
    "start": "124240",
    "end": "130800"
  },
  {
    "text": "well not not so much so on Android right you got a million different screen sizes",
    "start": "130800",
    "end": "136000"
  },
  {
    "text": "so if you look at the top it's a little fuzzy on the projector but there's this",
    "start": "136000",
    "end": "142440"
  },
  {
    "text": "torn paper effect so the way I did that is I have a custom view that draws a",
    "start": "142440",
    "end": "150280"
  },
  {
    "text": "series of lines and when the view is created we create a random instance just",
    "start": "150280",
    "end": "155560"
  },
  {
    "text": "seated with the current time and it basically marches over a few pixels and then up and then down and over it just",
    "start": "155560",
    "end": "162000"
  },
  {
    "text": "zigzags picking random X and Y Deltas to jump across so it looks like a torn",
    "start": "162000",
    "end": "168280"
  },
  {
    "text": "sheet of paper and what's really cool about this is when you tap clear and it rips away that sheet of paper I pick a",
    "start": "168280",
    "end": "175519"
  },
  {
    "text": "new random seed so it looks like another random tear so it looks like another sheet of paper so uh that's the kind of",
    "start": "175519",
    "end": "182319"
  },
  {
    "text": "detail I like to put in the user interface uh it's better than a bitmap because it's scalable to any screen size",
    "start": "182319",
    "end": "189239"
  },
  {
    "text": "it looks crisp and clean no matter what device we're on uh unless we're on a projector then it looks a little fuzzy",
    "start": "189239",
    "end": "194840"
  },
  {
    "text": "and you can't even tell there's torn paper but if you get the application and look really carefully you'll see that tear effect but the random seat is kind",
    "start": "194840",
    "end": "202159"
  },
  {
    "text": "of a nice touch because it's different every time uh another",
    "start": "202159",
    "end": "208599"
  },
  {
    "text": "screen and and another screen and let's actually look at some",
    "start": "208599",
    "end": "215159"
  },
  {
    "text": "source code so we're going to start pretty simple with a custom view so has anybody written a custom view from",
    "start": "215159",
    "end": "221560"
  },
  {
    "text": "scratch on Android handful of people deps on what",
    "start": "221560",
    "end": "227280"
  },
  {
    "text": "you mean by scratch depends on what I mean by scratch done scch right okay so he's",
    "start": "227280",
    "end": "234959"
  },
  {
    "text": "done custom views but not from scratch like you might extend button and add a few attributes or extend View group or",
    "start": "234959",
    "end": "241920"
  },
  {
    "text": "or frame layout so here I'm extending view which doesn't give you much of anything so all I want to do first is to",
    "start": "241920",
    "end": "249000"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "keep this view perfectly Square no matter what screen I drop it on so this is called an editable photo and we'll",
    "start": "249000",
    "end": "255200"
  },
  {
    "text": "see why it's called editable photo in a little bit but to make it Square I override on measure and then there are",
    "start": "255200",
    "end": "262360"
  },
  {
    "text": "series of methods you can call that are built into the view class so all I'm doing is calling existing methods from",
    "start": "262360",
    "end": "268240"
  },
  {
    "text": "view so I'm calling get default size get suggested minimum width and then taking",
    "start": "268240",
    "end": "273800"
  },
  {
    "text": "that width measure spec so the width and height measure spec are passed in from Android and those are integers that have",
    "start": "273800",
    "end": "281880"
  },
  {
    "text": "the width and also like a constant saying like at most or exactly and then you break it up using this measure spec",
    "start": "281880",
    "end": "288560"
  },
  {
    "text": "class anyway it's kind of tedious kind of weird weird code But ultimately I'm",
    "start": "288560",
    "end": "293680"
  },
  {
    "text": "getting the measured width and height and then I take the minimum of those and then call set measured dimension",
    "start": "293680",
    "end": "300320"
  },
  {
    "text": "okay so this is the first tiny step to making a custom view I'm overriding on measure and I'm making sure that the",
    "start": "300320",
    "end": "306680"
  },
  {
    "text": "thing is completely Square all the time so here's what it looks like when I draw",
    "start": "306680",
    "end": "312120"
  },
  {
    "text": "an image so the bit map is square uh not terribly interesting yet",
    "start": "312120",
    "end": "318440"
  },
  {
    "text": "one thing I do want to show that we've got different sizes here so we can make the bearded man any any size we want and",
    "start": "318440",
    "end": "325479"
  },
  {
    "text": "it's always going to be square and then at the bottom we have a placeholder so the top two images are a bit map that",
    "start": "325479",
    "end": "332199"
  },
  {
    "text": "we've set through code we call set set image and give it a bit map the bottom one is a drawable that's embedded in our",
    "start": "332199",
    "end": "339840"
  },
  {
    "text": "Android APK file okay so when a bit map hasn't been set it uses that placeholder",
    "start": "339840",
    "end": "346080"
  },
  {
    "text": "photo when I zoom in a little bit though I want those Corners to be rounded I don't want perfectly square corners so",
    "start": "346080",
    "end": "352400"
  },
  {
    "text": "we want to soften it up a little bit so you may notice from the slide don't",
    "start": "352400",
    "end": "358680"
  },
  {
    "start": "354000",
    "end": "354000"
  },
  {
    "text": "do this and the red wrong way sign that this is not the way to do it um this",
    "start": "358680",
    "end": "365319"
  },
  {
    "text": "looks really simple though right we create a path and we can use that as a clip so from the path we add a round",
    "start": "365319",
    "end": "372400"
  },
  {
    "text": "rectangle you can act actually add any shape you want uh you could make a shape where you're curving around and making",
    "start": "372400",
    "end": "378120"
  },
  {
    "text": "like a picture of the android robot or whatever and then you just say canvas clip path and then from then on anything",
    "start": "378120",
    "end": "384639"
  },
  {
    "text": "you draw to the canvas is going to be clipped to that path so it won't exceed the bounds of the round rectangle then",
    "start": "384639",
    "end": "392120"
  },
  {
    "text": "we restore the canvas back to its original state so anytime you clip the path you want to restore so that",
    "start": "392120",
    "end": "398479"
  },
  {
    "text": "subsequent calls to the canvas are not affected by the clip path that you just set so this seems really easy and it",
    "start": "398479",
    "end": "405840"
  },
  {
    "text": "would make the corners rounded but you get these ugly Jagged Corners yeah you can see that even on",
    "start": "405840",
    "end": "412479"
  },
  {
    "text": "this projector you can see there's stair stepping and little pixels on the",
    "start": "412479",
    "end": "418120"
  },
  {
    "text": "corner the problem with this approach is that no matter what you do Android",
    "start": "418120",
    "end": "423560"
  },
  {
    "text": "doesn't do anti-aliasing when you use clip path it's just a fundamental platform limitation so even if you set a",
    "start": "423560",
    "end": "431039"
  },
  {
    "text": "paint or set flags and say paint. anti-alias flag and then you clip the path it doesn't work okay so you have to",
    "start": "431039",
    "end": "438400"
  },
  {
    "text": "have a completely different approach to round the corners in Android or to apply any other shape to a bit map all right",
    "start": "438400",
    "end": "449520"
  },
  {
    "text": "so lazy bitmap why do I say lazy bit map what I'm doing here",
    "start": "449639",
    "end": "454840"
  },
  {
    "start": "451000",
    "end": "451000"
  },
  {
    "text": "is I'm going to create a brand new bit map that is a copy of the original so",
    "start": "454840",
    "end": "462120"
  },
  {
    "text": "the original I either have the image which you set in code through set image and that's a picture of the bearded man",
    "start": "462120",
    "end": "468599"
  },
  {
    "text": "right or I have a placeholder which is the default silhouette that you saw on",
    "start": "468599",
    "end": "473879"
  },
  {
    "text": "the bottom picture on a few pages back when we had the three pictures and then we have this third bit",
    "start": "473879",
    "end": "480440"
  },
  {
    "text": "map the framed photo so the frame photo is the one that I'm going to generate in code it's an offscreen bit map that I",
    "start": "480440",
    "end": "486800"
  },
  {
    "text": "have to create to have those rounded Corners so I don't want to create that right away because in the oncreate",
    "start": "486800",
    "end": "493680"
  },
  {
    "text": "method of a view you don't know the width and height so we have to wait until later when the view is actually",
    "start": "493680",
    "end": "499560"
  },
  {
    "text": "drawn to compute the bounds so in the on draw method if both",
    "start": "499560",
    "end": "505520"
  },
  {
    "text": "the placeholder and the image are null we're just going to ignore it and return because 's nothing to draw so that's",
    "start": "505520",
    "end": "510560"
  },
  {
    "text": "kind of an uninteresting Edge case but we need to do that to avoid null pointer exceptions so next step if the frame",
    "start": "510560",
    "end": "516800"
  },
  {
    "text": "photo is null then we need to lazily create it now on draw could be called",
    "start": "516800",
    "end": "523800"
  },
  {
    "text": "over and over and over again if you're animating a view so you don't want to create a new bit map every frame of that",
    "start": "523800",
    "end": "530680"
  },
  {
    "text": "animation right you'd very quickly well you'd make your app really slow and potentially run out of bitmap memory so",
    "start": "530680",
    "end": "537240"
  },
  {
    "text": "you want to create the bit map once lazily when it's first requested and then after that you reuse the same",
    "start": "537240",
    "end": "543600"
  },
  {
    "text": "instance over and over and over again until the view resizes okay so I call a method create frame",
    "start": "543600",
    "end": "550760"
  },
  {
    "text": "photo and I pass in the the minimum of the width and height technically that's not necessary to call math. Min because",
    "start": "550760",
    "end": "557880"
  },
  {
    "text": "I also ensure that the views already Square so I could just take the width or the height uh I guess the code just",
    "start": "557880",
    "end": "564480"
  },
  {
    "text": "looked a little more clear to me doing it like this and then I call canvas draw bit map with the frame photo at the",
    "start": "564480",
    "end": "571320"
  },
  {
    "text": "upper leftand corner 0 and then I pass a null paint object so creating that frame",
    "start": "571320",
    "end": "577640"
  },
  {
    "text": "photo that's creating the offscreen bit map that has the rounded Corners that's where the magic",
    "start": "577640",
    "end": "584000"
  },
  {
    "text": "happens we have to use a technique called Alpha compositing so if you go to Google and you search for Alpha",
    "start": "584079",
    "end": "591440"
  },
  {
    "start": "587000",
    "end": "587000"
  },
  {
    "text": "compositing odds are the first hit or two is going to take you to this great Wikipedia article and this Wikipedia",
    "start": "591440",
    "end": "597920"
  },
  {
    "text": "article has this image on it so all we're trying to do here now I don't I",
    "start": "597920",
    "end": "603640"
  },
  {
    "text": "don't really get into all the math of this um you don't have to because Android gives you apis to work on this",
    "start": "603640",
    "end": "609680"
  },
  {
    "text": "without getting all mathy and Technical but the general idea is you start with a transparent canvas and you draw One",
    "start": "609680",
    "end": "617440"
  },
  {
    "text": "image and then you set this transfer mode and then you draw another image on",
    "start": "617440",
    "end": "622640"
  },
  {
    "text": "top of the original image and then depending on the intersection of the pixels in those two images you you'll",
    "start": "622640",
    "end": "629480"
  },
  {
    "text": "get a third resulting image that is the composite the composition of the two so",
    "start": "629480",
    "end": "635720"
  },
  {
    "text": "this diagram attempts to show you the different modes Like A over B a in b a",
    "start": "635720",
    "end": "640880"
  },
  {
    "text": "out Etc okay so it's almost like you're taking two sets and you're trying to get the intersection or the union of the",
    "start": "640880",
    "end": "648160"
  },
  {
    "text": "sets or whatever okay so there's different modes to Tinker with and that's how we're going to add the round",
    "start": "648160",
    "end": "653959"
  },
  {
    "text": "corners to the bit map so the create frame photo method takes a side that's the width and height",
    "start": "653959",
    "end": "660480"
  },
  {
    "start": "657000",
    "end": "657000"
  },
  {
    "text": "because we're making a square image first I create a drawable so",
    "start": "660480",
    "end": "666720"
  },
  {
    "text": "remember I have either the bitmap image that you set in code which is the bearded man or we have the placeholder",
    "start": "666720",
    "end": "672959"
  },
  {
    "text": "drawable which comes from a drawable that's embedded in your app so we've got",
    "start": "672959",
    "end": "678120"
  },
  {
    "text": "either a bit map or a drawable two different incompatible classes so what we need to do is take the bit map and",
    "start": "678120",
    "end": "685560"
  },
  {
    "text": "wrap it with a bit map drawable that's what this first line of code is doing it's kind of like housekeeping code once",
    "start": "685560",
    "end": "691680"
  },
  {
    "text": "we've got this now we have a drawable regardless of where it came from and we can work with it in a consistent",
    "start": "691680",
    "end": "699079"
  },
  {
    "text": "way so then we create the offscreen bit map so you say bit map create bit map",
    "start": "699079",
    "end": "705120"
  },
  {
    "text": "you give it a width you give it a height and then you give it a bitmap config so",
    "start": "705120",
    "end": "710440"
  },
  {
    "text": "the config I pretty much always use is argb 888 okay all that does is create a",
    "start": "710440",
    "end": "716839"
  },
  {
    "text": "bit map that has an alpha Channel so it supports",
    "start": "716839",
    "end": "721880"
  },
  {
    "text": "transparencies then another little bit of housekeeping I have to create a rectangle that matches the size of the",
    "start": "722200",
    "end": "729160"
  },
  {
    "text": "bit map and then I compute the outer radius so the corner radius in this case I take",
    "start": "729160",
    "end": "735800"
  },
  {
    "text": "the size of the bit map and divide it by 18 okay does anybody know what's magical about the number 18 when you're dealing",
    "start": "735800",
    "end": "742519"
  },
  {
    "text": "with Graphics like this any guesses something related to a nine",
    "start": "742519",
    "end": "750240"
  },
  {
    "text": "patch okay 9 * 9 9 * 2 is 18 okay that's a a good guess absolutely",
    "start": "750240",
    "end": "757680"
  },
  {
    "text": "nothing absolutely nothing right half of 36 no still absolutely",
    "start": "757680",
    "end": "764720"
  },
  {
    "text": "nothing is still the right answer what this was",
    "start": "764720",
    "end": "770800"
  },
  {
    "text": "was based on the width of the image I need to pick a corner radius as the",
    "start": "770800",
    "end": "775920"
  },
  {
    "text": "image gets bigger I want the corner radius to be bigger because bigger images have bigger corners and as you",
    "start": "775920",
    "end": "781279"
  },
  {
    "text": "shrink it down I want proportionally smaller Corner radiuses radi whatever so",
    "start": "781279",
    "end": "787440"
  },
  {
    "text": "this was me typing in a number compile deploy look at it nope that doesn't look",
    "start": "787440",
    "end": "793760"
  },
  {
    "text": "good let's try a different number compile deploy it just so happens 18 happened to look good to me okay so the",
    "start": "793760",
    "end": "801079"
  },
  {
    "text": "point is here uh you know I'm kind of teasing you guys a little bit but there's nothing special about 18 other",
    "start": "801079",
    "end": "807399"
  },
  {
    "text": "than I thought it looked good but the point is I don't use device independent pixels I don't use pixels instead I pick",
    "start": "807399",
    "end": "814880"
  },
  {
    "text": "a ratio of the width Andor height and then base the radius based on the size",
    "start": "814880",
    "end": "821240"
  },
  {
    "text": "of the view the reason I do it like this is because this is going to scale to any Android device it's going to work on the",
    "start": "821240",
    "end": "827440"
  },
  {
    "text": "Galaxy Tab the Dell Streak you know a hero without me having to get in there",
    "start": "827440",
    "end": "832720"
  },
  {
    "text": "and tweak pixels on every single phone okay so you're never going to completely",
    "start": "832720",
    "end": "838320"
  },
  {
    "text": "get away from pushing pixels on a UI but whenever possible you want to deal with",
    "start": "838320",
    "end": "844560"
  },
  {
    "text": "ratios and percentages of overall sizes that way your your UI is going to be",
    "start": "844560",
    "end": "849600"
  },
  {
    "text": "flexible to far more devices with far less work on your part okay so that's",
    "start": "849600",
    "end": "854839"
  },
  {
    "text": "where that 18 comes from is trial and error so I create a paint object at this",
    "start": "854839",
    "end": "860240"
  },
  {
    "start": "857000",
    "end": "857000"
  },
  {
    "text": "point we can specify anti-aliasing and what anti-aliasing does is gives us nice smooth",
    "start": "860240",
    "end": "866120"
  },
  {
    "text": "corners and I set the color and then I call canvas draw round rect give it the",
    "start": "866120",
    "end": "871240"
  },
  {
    "text": "rectangle the radius and the paint and then I have this beautiful opaque red",
    "start": "871240",
    "end": "876399"
  },
  {
    "text": "round rectangle with nice smooth round corners okay and if I stretch that to",
    "start": "876399",
    "end": "882320"
  },
  {
    "text": "any size the corners are going to stretch along with the image so it's a little strange to draw an opaque red",
    "start": "882320",
    "end": "887800"
  },
  {
    "text": "rectangle but remember we're going to use this Alpha compositing so the technique is to draw the rectangle first",
    "start": "887800",
    "end": "895079"
  },
  {
    "text": "on a transparent offscreen canvas then we draw the beard man the drawable on",
    "start": "895079",
    "end": "900440"
  },
  {
    "text": "top of that and then because we're using Porter Duff mode Source in any any pixel",
    "start": "900440",
    "end": "906560"
  },
  {
    "text": "that intersects will be kept and any pixel that falls in those transparent Corners is going to be dropped so we're",
    "start": "906560",
    "end": "913320"
  },
  {
    "text": "going to be left with this beautiful round rounded image with the rounded",
    "start": "913320",
    "end": "918880"
  },
  {
    "text": "Corners uh so in the previous slide I drew the round rectangle with red it doesn't have",
    "start": "918880",
    "end": "925440"
  },
  {
    "start": "923000",
    "end": "923000"
  },
  {
    "text": "to be red it can be any color it just has to be an opaque color I like to use red because when I'm testing it's this",
    "start": "925440",
    "end": "931880"
  },
  {
    "text": "vibrant in-your-face color and I can tell immediately what's going on if I had made it like black then I load it on",
    "start": "931880",
    "end": "939120"
  },
  {
    "text": "an Android device the default background is black I wouldn't be able to see what's happening so I just make it an",
    "start": "939120",
    "end": "944519"
  },
  {
    "text": "obnoxious primary color whenever I'm testing things so we set the porter Duff mode we",
    "start": "944519",
    "end": "950480"
  },
  {
    "text": "set the bounds of the drawable this is important if you remember we're dealing with drawables instead of a bit map so",
    "start": "950480",
    "end": "957199"
  },
  {
    "text": "whenever you paint a drawable on Android you have to explicitly set the boundaries of the drawable otherwise it",
    "start": "957199",
    "end": "963480"
  },
  {
    "text": "defaults to 0 by0 and then when you draw it you get nothing and then you're banging your head against your keyboard",
    "start": "963480",
    "end": "969279"
  },
  {
    "text": "wondering why isn't it drawing so you have to set the size then I save the",
    "start": "969279",
    "end": "974480"
  },
  {
    "text": "layer temporarily because again because I'm drawing a drawable I can't apply a paint directly I have to assign the paint to",
    "start": "974480",
    "end": "981279"
  },
  {
    "text": "the canvas so this is a little little trick you save the layer you give the paint as a second",
    "start": "981279",
    "end": "986920"
  },
  {
    "text": "argument uh I'm kind of gesturing towards my screen I don't know if that's all that helpful to you guys maybe I should point to the slide there um I",
    "start": "986920",
    "end": "995639"
  },
  {
    "text": "draw the bearded man on top of the round red square rectangle whatever and then I",
    "start": "995639",
    "end": "1003639"
  },
  {
    "text": "restore the canvas to its original state and then we're left with a nice image",
    "start": "1003639",
    "end": "1008759"
  },
  {
    "text": "that has nice smooth rounded Corners with anti- alosine so we get nice nice",
    "start": "1008759",
    "end": "1013839"
  },
  {
    "text": "round corners okay so we're getting a little closer to the editable photo that we want",
    "start": "1013839",
    "end": "1020839"
  },
  {
    "start": "1020000",
    "end": "1020000"
  },
  {
    "text": "what we want to do now is add a photo or a frame to the photo so I'm not going to show you every line of code like we did",
    "start": "1021319",
    "end": "1027120"
  },
  {
    "text": "in the previous step because it's essentially the exact same procedure so first we create an offscreen bit map and",
    "start": "1027120",
    "end": "1034240"
  },
  {
    "text": "we create a canvas that matches the size of the bit map then we draw an opaque round",
    "start": "1034240",
    "end": "1040319"
  },
  {
    "text": "rectangle in the middle so we're we're insetting it a little bit because we're we're going to punch this out as a whole",
    "start": "1040319",
    "end": "1047520"
  },
  {
    "text": "for you to see through and then we set the mode to Source out which is a slightly different mode",
    "start": "1047520",
    "end": "1053480"
  },
  {
    "text": "because we want to remove the area that's in the red rather than keeping that area and then I draw a larger round",
    "start": "1053480",
    "end": "1060360"
  },
  {
    "text": "rectangle with partial transparency right on top of the red and then that Center section actually gets",
    "start": "1060360",
    "end": "1067559"
  },
  {
    "text": "punched out and removed uh because of the porter Duff mode and I'll be",
    "start": "1067559",
    "end": "1072600"
  },
  {
    "text": "completely honest when I do stuff like this I usually guess the wrong Porter Duff mode and I just keep trying and",
    "start": "1072600",
    "end": "1078840"
  },
  {
    "text": "until I hit the right one it just you know it takes a while to sink in I guess",
    "start": "1078840",
    "end": "1084240"
  },
  {
    "text": "so we draw this round rectangle then we have another bit map we've got the original bit map and now we have this",
    "start": "1084240",
    "end": "1090120"
  },
  {
    "text": "round rectangle bit map we draw them on top of each other and then I draw the text edit on the bottom and then we have",
    "start": "1090120",
    "end": "1095840"
  },
  {
    "text": "this nice custom component that we can use that's why I call it editable photo because when you see this you can tap it",
    "start": "1095840",
    "end": "1102960"
  },
  {
    "text": "to edit your profile picture in our applications okay so that's basically",
    "start": "1102960",
    "end": "1108000"
  },
  {
    "text": "the steps I follow to create this custom view in Android now in Android it's nice because any view you can register an",
    "start": "1108000",
    "end": "1114520"
  },
  {
    "text": "onclick listener you don't have to do anything special for that so you just register an onclick listener and when",
    "start": "1114520",
    "end": "1119679"
  },
  {
    "text": "you tap it it gets an onclick event and then you can go into the the photo selection or whatever",
    "start": "1119679",
    "end": "1126799"
  },
  {
    "text": "okay are there any questions so far am i changing the state of the image on click",
    "start": "1126799",
    "end": "1133400"
  },
  {
    "text": "um like showing it like pressed or whatever so I'm not doing that no um if",
    "start": "1133400",
    "end": "1141400"
  },
  {
    "text": "I wanted to I suppose you know one thing you could do we're doing this elsewhere actually is we apply a partial",
    "start": "1141400",
    "end": "1148480"
  },
  {
    "text": "transparency like we set an alpha on on a component so when you press it it kind of looks dimmed out um a trick in",
    "start": "1148480",
    "end": "1156120"
  },
  {
    "text": "Android though is they didn't add the set Alpha capability until something like Android",
    "start": "1156120",
    "end": "1162520"
  },
  {
    "text": "2.3 uh so the question is how do you set an alpha on a on a view on older Android",
    "start": "1162520",
    "end": "1168720"
  },
  {
    "text": "releases and maintain compatibility does anybody have an idea how you would do that uh yeah overlay of view on",
    "start": "1168720",
    "end": "1176760"
  },
  {
    "text": "top um you could that's just going to kind of add a darkening or a brightening",
    "start": "1176760",
    "end": "1181919"
  },
  {
    "text": "effect actually the way you can set an alpha is you can create an animation that you they have an alpha",
    "start": "1181919",
    "end": "1190159"
  },
  {
    "text": "animation right so you can set the the an alpha animation with a duration of zero and you can set fill after to true",
    "start": "1190159",
    "end": "1198159"
  },
  {
    "text": "so when you apply that animation it instantly turns transparent or translucent and because fill after is",
    "start": "1198159",
    "end": "1204760"
  },
  {
    "text": "true it it sticks so once you press you could set the animation and then when you release",
    "start": "1204760",
    "end": "1210600"
  },
  {
    "text": "you could clear the animation and that would set an alpha on your component and that actually works on any view or you",
    "start": "1210600",
    "end": "1216320"
  },
  {
    "text": "could do it on a View group that has a bunch of children and uh we're actually doing that in the next version of our",
    "start": "1216320",
    "end": "1221520"
  },
  {
    "text": "card case when you tap on a card we're applying an alpha animation to make it partially transparent so you can drag",
    "start": "1221520",
    "end": "1227360"
  },
  {
    "text": "cards around and it looks really awesome so uh that's just a little Android hack you can use to apply an alpha to older",
    "start": "1227360",
    "end": "1234159"
  },
  {
    "text": "sdks even though they didn't add set Alpha until Android 23 or",
    "start": "1234159",
    "end": "1240200"
  },
  {
    "text": "so all right so this is uh Dr Evil on an edit",
    "start": "1240200",
    "end": "1246600"
  },
  {
    "text": "screen um Dr Evil is one of my go-to characters when I'm testing uh my",
    "start": "1246600",
    "end": "1252480"
  },
  {
    "text": "account I'm always either the bearded man or Dr Evil or Oprah um occasionally Jean Simmons also",
    "start": "1252480",
    "end": "1260960"
  },
  {
    "text": "so it's just a good way to know I'm I'm hitting the test server and not production data and actually charging myself",
    "start": "1260960",
    "end": "1266640"
  },
  {
    "text": "$10,000 uh I did come home once and my my son had been playing with my phone and I noticed in the payment history",
    "start": "1266640",
    "end": "1272640"
  },
  {
    "text": "there was a $1 million payment and uh fortunately it was on the staging",
    "start": "1272640",
    "end": "1278039"
  },
  {
    "text": "server so that really happened and it's still in payment history you can scroll way through my payment history and",
    "start": "1278039",
    "end": "1283400"
  },
  {
    "text": "eventually hit a $1 million payment like oh my gosh so",
    "start": "1283400",
    "end": "1289679"
  },
  {
    "text": "this screen's kind of fun so the background right now is solid gray so I",
    "start": "1289679",
    "end": "1295600"
  },
  {
    "text": "want to Jazz it up a little bit so um if you were to look at pretty much any",
    "start": "1295600",
    "end": "1301559"
  },
  {
    "text": "modern UI if you zoom way in you're going to notice that almost every screen in OSX or Windows or whatever they apply",
    "start": "1301559",
    "end": "1310520"
  },
  {
    "text": "gradients to everything so first thing I want to do is apply a gradient to the screen now this is not the real gradient",
    "start": "1310520",
    "end": "1317559"
  },
  {
    "text": "I mean this is way too to dark and way too ugly uh what we really want is a very very subtle gradient so you almost",
    "start": "1317559",
    "end": "1324799"
  },
  {
    "text": "don't notice the gradient uh but it does add texture and depth to the screen so",
    "start": "1324799",
    "end": "1330799"
  },
  {
    "text": "the reason I make it dark is again the same philosophy as the red rectangles",
    "start": "1330799",
    "end": "1335919"
  },
  {
    "text": "when I'm testing I want to pick bright dark colors so that it immediately pops",
    "start": "1335919",
    "end": "1341159"
  },
  {
    "text": "out at me yeah you're doing the right thing because when you create a gradient like this you have to choose an angle uh",
    "start": "1341159",
    "end": "1346279"
  },
  {
    "text": "I know now this is 270 degrees but when I first coded it I'm like okay does it",
    "start": "1346279",
    "end": "1351440"
  },
  {
    "text": "need to be 0 90 180 or 270 so you make it nice dark colors and then it jumps",
    "start": "1351440",
    "end": "1357000"
  },
  {
    "text": "out right away and you see if you're doing the right thing so the gradient just goes into resource drawable uh we",
    "start": "1357000",
    "end": "1363960"
  },
  {
    "start": "1361000",
    "end": "1361000"
  },
  {
    "text": "create a plastic background. XML and this is a standard Android drawable there's nothing custom here whatsoever",
    "start": "1363960",
    "end": "1370799"
  },
  {
    "text": "okay so just create a shape drawable gradient you give it a starting color an ending color and an angle",
    "start": "1370799",
    "end": "1379080"
  },
  {
    "text": "I'm going to extend linear layout I call it plastic linear layout because we want this this screen to look like a sheet of",
    "start": "1379080",
    "end": "1385559"
  },
  {
    "start": "1383000",
    "end": "1383000"
  },
  {
    "text": "plastic so in in our applications most of our screens look like paper but then",
    "start": "1385559",
    "end": "1390799"
  },
  {
    "text": "when you go over to the settings side of the application they look like plastic okay so extending linear layout in the",
    "start": "1390799",
    "end": "1399320"
  },
  {
    "text": "Constructor I call set background resource and r. drawable plastic window",
    "start": "1399320",
    "end": "1404720"
  },
  {
    "text": "background that's the XML file from the previous page so all it does is apply a very very subtle",
    "start": "1404720",
    "end": "1411159"
  },
  {
    "text": "gradient and you can't even tell it's there on the slide uh I probably need to make it a little more adjust the colors",
    "start": "1411159",
    "end": "1418600"
  },
  {
    "text": "a little bit I think it's a little too subtle uh but to really make it look like plastic we want to add a shiny",
    "start": "1418600",
    "end": "1424279"
  },
  {
    "text": "effect so again I pull out the primary colors I make it Pink just so I can see what's happening uh we want to draw this",
    "start": "1424279",
    "end": "1430840"
  },
  {
    "text": "triangle on top of the background but behind the children views so it goes",
    "start": "1430840",
    "end": "1436200"
  },
  {
    "text": "from the upper left corner down to 80 % of the height and there's a gradient",
    "start": "1436200",
    "end": "1441559"
  },
  {
    "text": "going from top to bottom in that triangle the way we do that is in that",
    "start": "1441559",
    "end": "1447960"
  },
  {
    "start": "1446000",
    "end": "1446000"
  },
  {
    "text": "plastic linear layout class I have a private method called create shine path and I asked the view for its width and I",
    "start": "1447960",
    "end": "1455799"
  },
  {
    "text": "ask the view for its height and then I multiply that by 085 just because through trial and error I found that 85%",
    "start": "1455799",
    "end": "1463039"
  },
  {
    "text": "of the height is a good approximation of the the mockup that the designer gave to",
    "start": "1463039",
    "end": "1469520"
  },
  {
    "text": "us okay so the designers are not going to give you a separate design for the Dell Streak and",
    "start": "1469520",
    "end": "1475960"
  },
  {
    "text": "for the Galaxy Tab and all these other devices they're going to give you one design and then you have to interpret it",
    "start": "1475960",
    "end": "1482200"
  },
  {
    "text": "for all the different Android phones so it makes your job really awesome",
    "start": "1482200",
    "end": "1487399"
  },
  {
    "text": "um so once I have that height and width I create a path object and then I don't",
    "start": "1487399",
    "end": "1493440"
  },
  {
    "text": "know if you work with a path before but you basically move to a starting point so 0 is in the upper left hand corner",
    "start": "1493440",
    "end": "1500039"
  },
  {
    "text": "and then you have a series of line twos so I draw a line from the upper left",
    "start": "1500039",
    "end": "1505520"
  },
  {
    "text": "corner to the upper right and then down and then close the path and it makes a triangle",
    "start": "1505520",
    "end": "1512039"
  },
  {
    "text": "okay in the Triangle I now need to create a linear",
    "start": "1512039",
    "end": "1517440"
  },
  {
    "text": "gradient this is a case where you need to create the gradient in code because I don't know what the height is so I'm",
    "start": "1517440",
    "end": "1523640"
  },
  {
    "text": "creating the gradient starting from the upper left hand corner 0 0 going down to",
    "start": "1523640",
    "end": "1529640"
  },
  {
    "text": "xal 0 and y equals the height so the gradient is going straight up and down",
    "start": "1529640",
    "end": "1536440"
  },
  {
    "text": "and then from the starting color to the ending color and then you give it this last parameter called clamp which means",
    "start": "1536440",
    "end": "1541840"
  },
  {
    "text": "the gradient stops when it gets to the bottom okay so you need to set this in code because you need to know the",
    "start": "1541840",
    "end": "1548080"
  },
  {
    "text": "dimensions of this gradient so once it's finished the shine path is is ah you can't even see it on",
    "start": "1548080",
    "end": "1555799"
  },
  {
    "text": "the projector I can see it on my screen it's really there uh you can see it on a phone too it's just this kind of path",
    "start": "1555799",
    "end": "1562600"
  },
  {
    "text": "that goes here and it makes it look like shiny shiny plastic okay uh I had this",
    "start": "1562600",
    "end": "1568240"
  },
  {
    "text": "idea I haven't done this yet but what I really want to do is hook this into the accelerometer so that when you rotate",
    "start": "1568240",
    "end": "1574200"
  },
  {
    "text": "the phone the angle changing I can just adjust the the brightness of the colors",
    "start": "1574200",
    "end": "1579320"
  },
  {
    "text": "so it looks like a shimmer like a reflection I think that would be really awesome and uh I'm either going to do it",
    "start": "1579320",
    "end": "1585000"
  },
  {
    "text": "or I'm going to make Demetrius do it where are you Demetrius he's another programmer on my team he's",
    "start": "1585000",
    "end": "1590559"
  },
  {
    "text": "in here somewhere he's cringing right now no not more work okay so plastic linear layout this",
    "start": "1590559",
    "end": "1598520"
  },
  {
    "text": "is the the class so we've got a private paint object that has anti-aliasing",
    "start": "1598520",
    "end": "1605600"
  },
  {
    "text": "set so I'm drawing a triangle but I'm still using anti-aliasing the reason I'm",
    "start": "1605600",
    "end": "1610880"
  },
  {
    "text": "using anti-aliasing is because the triangle goes diagonally down the screen and if you didn't use anti-aliasing you",
    "start": "1610880",
    "end": "1617159"
  },
  {
    "text": "would see little stair step pixels going across the screen so use anti-aliasing",
    "start": "1617159",
    "end": "1622360"
  },
  {
    "text": "to smooth it out um one of the few times that you don't use anti-aliasing is if you're drawing like a straight line or a",
    "start": "1622360",
    "end": "1629399"
  },
  {
    "text": "rectangle then you can get away with avoiding it but usually if you have angles or Curves you want to anti-alias",
    "start": "1629399",
    "end": "1637159"
  },
  {
    "text": "anti-alias just about everything in in your drawables so on the Constructor I",
    "start": "1637159",
    "end": "1642399"
  },
  {
    "text": "set the background resource we already saw this code all we're doing is ex extending the example to override",
    "start": "1642399",
    "end": "1648600"
  },
  {
    "text": "dispatch draw dispatch draw is in the base class we're overriding it here this",
    "start": "1648600",
    "end": "1654679"
  },
  {
    "text": "is called immediately before the children are drawn so this is your hook it's your opportunity to draw custom",
    "start": "1654679",
    "end": "1661679"
  },
  {
    "text": "stuff either before or after you draw the children or you can actually not",
    "start": "1661679",
    "end": "1668200"
  },
  {
    "text": "call Super you can just take over drawing yourself and do some really interesting uh kind of amazing things to",
    "start": "1668200",
    "end": "1675360"
  },
  {
    "text": "Children which I'll show you in a few minutes so we're overriding dispatch draw because uh I want to draw the shine",
    "start": "1675360",
    "end": "1682200"
  },
  {
    "text": "path behind the children so uh this is another example where I'm lazily",
    "start": "1682200",
    "end": "1687440"
  },
  {
    "text": "initializing things so I can't create that path in the Constructor and I can't",
    "start": "1687440",
    "end": "1693039"
  },
  {
    "text": "create that path in oncreate because I don't know the width and height of the view yet once on draw or dispatch draw",
    "start": "1693039",
    "end": "1700120"
  },
  {
    "text": "is called though I know that the view has been assigned Dimensions so I can go ahead and create the shine path at this",
    "start": "1700120",
    "end": "1707120"
  },
  {
    "text": "point only do it once though and hold on to it after that to avoid creating that",
    "start": "1707120",
    "end": "1712760"
  },
  {
    "text": "gradient object over and over again then I draw the path and then I call Super dispatch draw if I wanted to reverse",
    "start": "1712760",
    "end": "1720640"
  },
  {
    "text": "this order I would simply move dispatch draw up a few lines and then the path would be drawn on top of the children",
    "start": "1720640",
    "end": "1727519"
  },
  {
    "text": "instead of behind the children okay so this gives you a lot of uh fine grain control over when you draw things",
    "start": "1727519",
    "end": "1733840"
  },
  {
    "text": "relative to your children uh this would be useful for you know like if you're",
    "start": "1733840",
    "end": "1739600"
  },
  {
    "text": "like beta testing an app you could like draw like the word beta on top of an app",
    "start": "1739600",
    "end": "1745080"
  },
  {
    "text": "or whatever you could do some some kind of creative things with with dispatch draw I think and and some",
    "start": "1745080",
    "end": "1752120"
  },
  {
    "text": "transparency so whenever layout occurs this means that the bounds of the component have changed so what I like to",
    "start": "1752120",
    "end": "1759240"
  },
  {
    "text": "do is anything that needs to change based on the dimensions I just reset it back to null so here I just say shine",
    "start": "1759240",
    "end": "1765600"
  },
  {
    "text": "path equals null and then the next time onw is called it'll be lazily created",
    "start": "1765600",
    "end": "1771080"
  },
  {
    "text": "once again because I check for null and I create the shine path every time on draw or dispatch draw is called and then",
    "start": "1771080",
    "end": "1777519"
  },
  {
    "text": "this cre shine path is what we saw just a minute ago okay are there any",
    "start": "1777519",
    "end": "1782880"
  },
  {
    "text": "questions about this all right I've done an amazing job",
    "start": "1782880",
    "end": "1789200"
  },
  {
    "text": "explaining because there are no questions obviously uh oh",
    "start": "1789200",
    "end": "1795080"
  },
  {
    "text": "crap yeah okay so the question is he saw a demo where they're doing a like a like",
    "start": "1795080",
    "end": "1801519"
  },
  {
    "text": "a wizzywig kind of layout editor where you could see this stuff on",
    "start": "1801519",
    "end": "1808000"
  },
  {
    "text": "screen so here's the deal um we don't use any of the those tools at",
    "start": "1808880",
    "end": "1815200"
  },
  {
    "text": "Square um the reason is we have a very complicated application and the E clips",
    "start": "1815200",
    "end": "1822120"
  },
  {
    "text": "tooling and all that no longer works um so some of the issues we face",
    "start": "1822120",
    "end": "1828440"
  },
  {
    "text": "is we have two applications we have card case and we have square okay there's a",
    "start": "1828440",
    "end": "1834000"
  },
  {
    "text": "ton of code that's shared across both applications so all that code goes into",
    "start": "1834000",
    "end": "1839080"
  },
  {
    "text": "a project we call Core the other thing we have is we have beta versions of our applications so we",
    "start": "1839080",
    "end": "1846039"
  },
  {
    "text": "have card case beta and card case production square beta and square",
    "start": "1846039",
    "end": "1851519"
  },
  {
    "text": "production so on an Android device you cannot have two applications installed",
    "start": "1851519",
    "end": "1857279"
  },
  {
    "text": "on your device at the same time with the same package name so they have to have unique package names so for us to",
    "start": "1857279",
    "end": "1863880"
  },
  {
    "text": "compile our application the other piece of this is there's a bug in Android that they",
    "start": "1863880",
    "end": "1869519"
  },
  {
    "text": "haven't fixed there's no way to create a library project that has custom components that have custom XML",
    "start": "1869519",
    "end": "1876200"
  },
  {
    "text": "attributes because when you add custom attributes to a view you have to have those in a package name that matches",
    "start": "1876200",
    "end": "1882559"
  },
  {
    "text": "your app and then when you you basically can't bundle that core Library project",
    "start": "1882559",
    "end": "1888360"
  },
  {
    "text": "in a jar file and just reuse it you have to actually take those XML files copy them to your project rename the XML and",
    "start": "1888360",
    "end": "1897000"
  },
  {
    "text": "then we also have to rename the XML for our beta versus production apps so that they can coexist on the device at the",
    "start": "1897000",
    "end": "1902799"
  },
  {
    "text": "same time so you can imagine for a non-trivial project our build is very",
    "start": "1902799",
    "end": "1909880"
  },
  {
    "text": "complicated and unfortunately it's so custom that none of those tools work so",
    "start": "1909880",
    "end": "1915080"
  },
  {
    "text": "I can't really answer your question the good news is in R 15 of the uh",
    "start": "1915080",
    "end": "1920880"
  },
  {
    "text": "development tools they are allegedly going to fix this issue with Library projects and custom attributes so that",
    "start": "1920880",
    "end": "1929000"
  },
  {
    "text": "you'll be able to develop custom components and put them into a jar file and just share that jar file into your",
    "start": "1929000",
    "end": "1934639"
  },
  {
    "text": "applications so once that happens hopefully we'll be able to use more of the standard tooling and get that that",
    "start": "1934639",
    "end": "1941440"
  },
  {
    "text": "kind of real time layout and all that but right now we just hand hand code of",
    "start": "1941440",
    "end": "1947080"
  },
  {
    "text": "all of our XML you had a question yeah so the question is compositing are compositing and anti-aliasing Hardware",
    "start": "1947080",
    "end": "1955120"
  },
  {
    "text": "accelerated uh they are if you're on honeycomb or ice cream sandwich and you've enabled Hardware acceleration so",
    "start": "1955120",
    "end": "1962559"
  },
  {
    "text": "we haven't got there yet with our apps we go all the way back to API level 7 so",
    "start": "1962559",
    "end": "1968720"
  },
  {
    "text": "you know we're really looking forward to Honey or to ice cream sandwich but even so we're going to have to have",
    "start": "1968720",
    "end": "1974039"
  },
  {
    "text": "conditional logic in our app uh at some point or we're going to have to have another special",
    "start": "1974039",
    "end": "1979440"
  },
  {
    "text": "build so okay so takeaways use gradients",
    "start": "1979440",
    "end": "1984559"
  },
  {
    "start": "1981000",
    "end": "1981000"
  },
  {
    "text": "all over the place it makes your UI look great uh when you're testing use bright primary colors and only invalidate your",
    "start": "1984559",
    "end": "1992080"
  },
  {
    "text": "drawables when the boundaries change you don't want to reallocate bit maps and gradients and all that in on draw",
    "start": "1992080",
    "end": "1998080"
  },
  {
    "text": "because those are called over and over and over again you're going to use a ton of memory and you're going to make things really",
    "start": "1998080",
    "end": "2003440"
  },
  {
    "text": "slow so tools that I use constantly are Digital Color meter because you can just",
    "start": "2003440",
    "end": "2008519"
  },
  {
    "start": "2007000",
    "end": "2007000"
  },
  {
    "text": "zoom in and pick out colors uh in Lion though they took away the hex so kind of",
    "start": "2008519",
    "end": "2015440"
  },
  {
    "text": "made it useless so you can go buy a tool called xcope which unfortunately is $29 but it does essentially the same thing",
    "start": "2015440",
    "end": "2022600"
  },
  {
    "text": "uh as Digital Color meter so if you want to add custom attributes to components like that uh",
    "start": "2022600",
    "end": "2028919"
  },
  {
    "start": "2027000",
    "end": "2027000"
  },
  {
    "text": "you put those in Rees values add. XML uh in that XML file you would",
    "start": "2028919",
    "end": "2035639"
  },
  {
    "text": "declare a stylable give it a name like editable Photo in this case the photo editable photo matches my Java class",
    "start": "2035639",
    "end": "2043320"
  },
  {
    "text": "name and you list the attributes so these are name value pairs the value is the format and you have string Dimension",
    "start": "2043320",
    "end": "2050440"
  },
  {
    "text": "reference um I guess the way I learned how to do this is just to grab the source of",
    "start": "2050440",
    "end": "2055760"
  },
  {
    "text": "Android and study add. XML for all the stock components and kind of just learn",
    "start": "2055760",
    "end": "2061599"
  },
  {
    "text": "how they do things uh there are a few gotas like once you define a caption format equals string like if you have",
    "start": "2061599",
    "end": "2067720"
  },
  {
    "text": "another custom component later in the file that also uses a uh caption",
    "start": "2067720",
    "end": "2072800"
  },
  {
    "text": "attribute you have to omit the format if you list format equals string twice then",
    "start": "2072800",
    "end": "2077839"
  },
  {
    "text": "it blows up uh it doesn't like that so it's almost like these go into a kind of like a a global name space or whatever",
    "start": "2077839",
    "end": "2085040"
  },
  {
    "text": "and they collide with each other so it's just a little gotcha um to reference the component in your",
    "start": "2085040",
    "end": "2092839"
  },
  {
    "start": "2092000",
    "end": "2092000"
  },
  {
    "text": "XML file you have to give it a name space like XML namespace square and then",
    "start": "2092839",
    "end": "2099480"
  },
  {
    "text": "uses schema. android.com and then the last part com. square up matches your",
    "start": "2099480",
    "end": "2104839"
  },
  {
    "text": "application package so this is where when we build the production versus the beta version of our app we have to copy",
    "start": "2104839",
    "end": "2111599"
  },
  {
    "text": "the XML files and replace these name spaces with com square up development or",
    "start": "2111599",
    "end": "2117520"
  },
  {
    "text": "com square up beta so that we can have two versions of the app coexisting on the device at the same time um loads of",
    "start": "2117520",
    "end": "2125680"
  },
  {
    "text": "fun and then to reference the you whenever you have a custom view it's",
    "start": "2125680",
    "end": "2131200"
  },
  {
    "start": "2126000",
    "end": "2126000"
  },
  {
    "text": "a a Java class and odds art lives in a package so your XML tag just becomes the",
    "start": "2131200",
    "end": "2138320"
  },
  {
    "text": "class with the package so com square up editable photo is the tag name and then",
    "start": "2138320",
    "end": "2143520"
  },
  {
    "text": "the custom attributes are using your namespace like Square colon caption",
    "start": "2143520",
    "end": "2148680"
  },
  {
    "text": "caption size placeholder and then these are just they look like normal Android attributes except they're prefixed with",
    "start": "2148680",
    "end": "2155400"
  },
  {
    "text": "your application name space okay the really nasty code that I'm not going to",
    "start": "2155400",
    "end": "2161760"
  },
  {
    "text": "get into too much detail on is in the Constructor of editable photo the way you get to those custom attributes is",
    "start": "2161760",
    "end": "2169160"
  },
  {
    "text": "you obtain styled attributes from the context that gives you this typed array",
    "start": "2169160",
    "end": "2175400"
  },
  {
    "text": "class and then you have to grab like all these attributes from the typed array by calling me methods like get drawable get",
    "start": "2175400",
    "end": "2182440"
  },
  {
    "text": "string get Dimension all these lines in bold are generated as part of your",
    "start": "2182440",
    "end": "2187640"
  },
  {
    "text": "generated R file so you know in Android whenever you have XML like colors and",
    "start": "2187640",
    "end": "2193359"
  },
  {
    "text": "layouts they generate r. Java and that has r. layout. whatever r. color it also",
    "start": "2193359",
    "end": "2199960"
  },
  {
    "text": "has these custom attributes r. styleable for any anytime you have a custom XML",
    "start": "2199960",
    "end": "2205760"
  },
  {
    "text": "attribute it goes into that r. Java so that's where these all come from uh again this code gets kind of nasty so",
    "start": "2205760",
    "end": "2213319"
  },
  {
    "text": "you just I I think the best way to learn it is to study the source of Android um and and check out how how they do it",
    "start": "2213319",
    "end": "2220040"
  },
  {
    "text": "in the stock components all",
    "start": "2220040",
    "end": "2225119"
  },
  {
    "text": "right small things are really hard to touch",
    "start": "2225119",
    "end": "2231359"
  },
  {
    "text": "okay what this means is if you have a really small UI component and the user",
    "start": "2231359",
    "end": "2236440"
  },
  {
    "text": "picks up your phone and they're like why isn't this thing working makes your app feel broken it requires far too much",
    "start": "2236440",
    "end": "2244000"
  },
  {
    "text": "Precision to touch that tiny Target what you don't necessarily want to do though is make big",
    "start": "2244000",
    "end": "2250319"
  },
  {
    "text": "Goofy Dupo box Duplo you know what Duplo blocks are I can't say it you know",
    "start": "2250319",
    "end": "2257079"
  },
  {
    "text": "they're like the giant Kitty version of Legos they're they look terrible you don't want big Dupo UI components uh so",
    "start": "2257079",
    "end": "2264960"
  },
  {
    "text": "instead what you do is you make an invisible component behind the smaller",
    "start": "2264960",
    "end": "2270319"
  },
  {
    "text": "component and you create something called a touch delegate so that way it looks small and awesome but when the",
    "start": "2270319",
    "end": "2278200"
  },
  {
    "text": "user touches it there's this slop Factor they can touch anywhere in the nearby region it's hits that touch delegate and",
    "start": "2278200",
    "end": "2284720"
  },
  {
    "text": "it makes your UI feel more responsive the thing that's kind of nasty about touch delegates though is",
    "start": "2284720",
    "end": "2292400"
  },
  {
    "text": "the API is a little awkward so when you create the touch delegate you have to",
    "start": "2292400",
    "end": "2297480"
  },
  {
    "text": "know the width and height of the parent view so normally when you're setting up your layout you do it in the oncreate",
    "start": "2297480",
    "end": "2303800"
  },
  {
    "text": "method right well the problem is on create you don't know the diens ions of your component so the typical workaround",
    "start": "2303800",
    "end": "2310720"
  },
  {
    "text": "for this is to call you know like my button. poost you put something on the",
    "start": "2310720",
    "end": "2317160"
  },
  {
    "text": "event queue and then post gets processed after layout occurs and then the dimensions are known",
    "start": "2317160",
    "end": "2323760"
  },
  {
    "text": "so it's kind of cloy so uh all we did is we have this helper class called views",
    "start": "2323760",
    "end": "2329440"
  },
  {
    "text": "and we have a static method called expand touch area and it takes two arguments it takes",
    "start": "2329440",
    "end": "2335200"
  },
  {
    "text": "the big View and the small View uh that's another thing when I was working with a touch delegate directly",
    "start": "2335200",
    "end": "2342160"
  },
  {
    "text": "uh it was always confusing to me which of the two is the delegate is it the small one or the big one or whatever so",
    "start": "2342160",
    "end": "2347720"
  },
  {
    "text": "I just made this static method and I called them big view little view it makes it really obvious when you call it",
    "start": "2347720",
    "end": "2354880"
  },
  {
    "text": "uh so all I do is say big view. poost new runnable and then Big View set touch",
    "start": "2354880",
    "end": "2360800"
  },
  {
    "text": "delegate new touch delegate and the touch delegate is built into the Android apis right and you notice the first",
    "start": "2360800",
    "end": "2366880"
  },
  {
    "text": "argument is a rectangle so that's the bounds of the larger component and then",
    "start": "2366880",
    "end": "2372240"
  },
  {
    "text": "the second argument is the small component so that expands the touch area makes things easier to touch this is",
    "start": "2372240",
    "end": "2379280"
  },
  {
    "text": "actually based on a well documented Theory called Fitz's",
    "start": "2379280",
    "end": "2385640"
  },
  {
    "text": "law again if you search for Fitz's law you're going to be taken almost directly",
    "start": "2385640",
    "end": "2391480"
  },
  {
    "start": "2386000",
    "end": "2386000"
  },
  {
    "text": "to a Wikipedia article that lays it all out in great detail again it has a bunch of math behind it uh it's very well",
    "start": "2391480",
    "end": "2398280"
  },
  {
    "text": "documented it's basically talking about a speed and accuracy tradeoff so the",
    "start": "2398280",
    "end": "2404359"
  },
  {
    "text": "takeaway is make targets big and close so Fitz's law says that in a user",
    "start": "2404359",
    "end": "2410520"
  },
  {
    "text": "interface if something is far away this is usually not a problem on mobile so",
    "start": "2410520",
    "end": "2416240"
  },
  {
    "text": "much but if you have a mouse and a pointer and you have to move your mouse all the way across the other end of the",
    "start": "2416240",
    "end": "2421560"
  },
  {
    "text": "screen it makes you slower right also if targets are really tiny it also Al makes",
    "start": "2421560",
    "end": "2427640"
  },
  {
    "text": "you slow because now you have to be very precise when you tap on it or when you click on it so if you make things bigger",
    "start": "2427640",
    "end": "2433359"
  },
  {
    "text": "you can go really fast if you're on a Mac you have something up against the top of the screen you can just fling",
    "start": "2433359",
    "end": "2439160"
  },
  {
    "text": "your mouse up it just anchors at the top and you can tap and there's this sloppiness to it and it makes you super",
    "start": "2439160",
    "end": "2445160"
  },
  {
    "text": "fast so this is called Fitz's law and in the context of mobile I guess in general",
    "start": "2445160",
    "end": "2450640"
  },
  {
    "text": "it just means use Touch delegate whenever possible to make your touch areas larger okay",
    "start": "2450640",
    "end": "2459119"
  },
  {
    "text": "so another screen in our application we've got a map view uh this doesn't show it here but when you first come up",
    "start": "2459200",
    "end": "2466079"
  },
  {
    "text": "to this screen the map actually animates and moves around and then zeros in in your location so we wanted to make the",
    "start": "2466079",
    "end": "2473040"
  },
  {
    "text": "corners round like we did before with the photo of the bearded man",
    "start": "2473040",
    "end": "2478880"
  },
  {
    "text": "um but we didn't want to do it with offscreen bit Maps because that map is",
    "start": "2478880",
    "end": "2483960"
  },
  {
    "text": "animating and if we had made an offscreen bit map for every frame of Animation that would have kind of been",
    "start": "2483960",
    "end": "2489599"
  },
  {
    "text": "really slow so instead I extended frame layout call it round Corner viewport and",
    "start": "2489599",
    "end": "2497040"
  },
  {
    "text": "in the dispatch draw method again of this frame layout you can wrap this around any child now because it's a a",
    "start": "2497040",
    "end": "2503480"
  },
  {
    "text": "normal frame layout I save the layer and then I call canvas. cliip Path this is",
    "start": "2503480",
    "end": "2509760"
  },
  {
    "text": "exactly what I told you not to do a little while ago right I said don't use clip path because you get Jagged Corners",
    "start": "2509760",
    "end": "2515440"
  },
  {
    "text": "this is not an exception I call Super dispatch draw so this draws the map view that's contained with round corners and",
    "start": "2515440",
    "end": "2522359"
  },
  {
    "text": "then I restore it to the original state but you definitely get Jagged pixelated",
    "start": "2522359",
    "end": "2527400"
  },
  {
    "text": "Corners uh you can barely see it there it's it's definitely there though um the",
    "start": "2527400",
    "end": "2533760"
  },
  {
    "text": "way we fix that is we draw a round rectangle on top of",
    "start": "2533760",
    "end": "2540319"
  },
  {
    "text": "the jagged corners and we used a borderline paint which has like a six",
    "start": "2540319",
    "end": "2546119"
  },
  {
    "text": "pixel width stroke so it's kind of a hack all we're doing is we're drawing the round",
    "start": "2546119",
    "end": "2551839"
  },
  {
    "text": "rectangle and then we're drawing on top of it to cover up the nasty Jagged pixels uh but the end result is it looks",
    "start": "2551839",
    "end": "2558400"
  },
  {
    "text": "amazing and nobody knows what's behind the curtain uh but me and you but we'll",
    "start": "2558400",
    "end": "2564720"
  },
  {
    "text": "keep it a secret um I don't know if there's any profound lesson to learn to",
    "start": "2564720",
    "end": "2569920"
  },
  {
    "text": "be learned here but basically you know sometimes you just resort to uh stage magic I guess to uh you know whatever it",
    "start": "2569920",
    "end": "2577200"
  },
  {
    "text": "takes to make the UI work input method options kind of",
    "start": "2577200",
    "end": "2583520"
  },
  {
    "text": "jumping around here but uh this is really important I notice you know people get this wrong a lot in Android",
    "start": "2583520",
    "end": "2589760"
  },
  {
    "text": "uh it's a tiny easy thing you can do anytime you have an edit text in your UI",
    "start": "2589760",
    "end": "2595079"
  },
  {
    "text": "you should always set ime options so there's a variety of them like action",
    "start": "2595079",
    "end": "2600720"
  },
  {
    "text": "done action next uh what that'll do is it'll control the text on that button on",
    "start": "2600720",
    "end": "2605920"
  },
  {
    "text": "your keyboard in the lower right right hand corner uh and it just makes your UI a little a little faster and easier to",
    "start": "2605920",
    "end": "2612400"
  },
  {
    "text": "work with um not every phone honors this though uh I don't know if they fix this",
    "start": "2612400",
    "end": "2619359"
  },
  {
    "text": "or not but I think HTC Sense ignores this for Action done so it doesn't turn it into done uh they may have fixed that",
    "start": "2619359",
    "end": "2627000"
  },
  {
    "text": "in newer releases I'm just not sure but that's why we have the done button in the upper right corner because we can't",
    "start": "2627000",
    "end": "2632720"
  },
  {
    "text": "guarantee that it's going to be on the keyboard uh the best you can do is set the ime options as kind of a hint to the",
    "start": "2632720",
    "end": "2639520"
  },
  {
    "text": "platform to to hopefully make it into a done button other another thing you can do is",
    "start": "2639520",
    "end": "2645920"
  },
  {
    "text": "when when the user Taps that done button all it does is dismiss the keyboard but",
    "start": "2645920",
    "end": "2650960"
  },
  {
    "text": "what I wanted to do on this screen is when you tap done I want it to actually click that do the same thing that",
    "start": "2650960",
    "end": "2657119"
  },
  {
    "text": "tapping that button does so it actually dismisses the whole screen so all you do is you add an",
    "start": "2657119",
    "end": "2663000"
  },
  {
    "text": "editor uh on editor action listener to your text View and then if the action ID is ime action",
    "start": "2663000",
    "end": "2670720"
  },
  {
    "text": "done then you can call your done clicked method so that's all you have to do to tie into the done button on the keyboard",
    "start": "2670720",
    "end": "2678920"
  },
  {
    "text": "um is add that listener so some other things you should definitely look into is using action next so whenever you",
    "start": "2678920",
    "end": "2685920"
  },
  {
    "start": "2682000",
    "end": "2682000"
  },
  {
    "text": "have a series of fields that people have to edit um they can just tap the next",
    "start": "2685920",
    "end": "2691440"
  },
  {
    "text": "button and it moves Focus to the next field uh in your UI input type is important also when you set the input",
    "start": "2691440",
    "end": "2697760"
  },
  {
    "text": "type to phone or person name or cap words that controls what kind of keyboard appears so in the case of a",
    "start": "2697760",
    "end": "2704440"
  },
  {
    "text": "phone number you get the phone keyboard um and when you set the input",
    "start": "2704440",
    "end": "2709839"
  },
  {
    "text": "type to text person name text cap words as your typing it capitalizes the first letter of each word and there's another",
    "start": "2709839",
    "end": "2716880"
  },
  {
    "text": "option where you can capitalize every character so we use that when we're editing the state so you type CA both",
    "start": "2716880",
    "end": "2723359"
  },
  {
    "text": "are capitalized automatically so it just speeds people up a little bit",
    "start": "2723359",
    "end": "2728960"
  },
  {
    "text": "is anyone in the room thinking of using view flipper yes you were thinking of using",
    "start": "2729319",
    "end": "2736480"
  },
  {
    "text": "view flipper awesome I love view flipper uh view flipper is a great component um",
    "start": "2736480",
    "end": "2743640"
  },
  {
    "text": "what if you're not familiar with it what it is basically is it lets you show one child at a time so it's not it's not",
    "start": "2743640",
    "end": "2749880"
  },
  {
    "text": "actually flipping like a 3D Flip or anything like that instead what it's doing is more like a a card layout and",
    "start": "2749880",
    "end": "2756319"
  },
  {
    "text": "swing where you show one card at a time but what's great about view flipper is it lets you animate between views really",
    "start": "2756319",
    "end": "2763480"
  },
  {
    "text": "easily so we use that all over the place in square when we want when we want to slide a panel to the right or left or we",
    "start": "2763480",
    "end": "2769240"
  },
  {
    "text": "want to when we want to cross fade between views uh we use view flipper for that",
    "start": "2769240",
    "end": "2775119"
  },
  {
    "text": "sort of thing however view flipper has a nasty bug",
    "start": "2775119",
    "end": "2781440"
  },
  {
    "text": "6191 so anything prior to Honeycomb uh it would occasionally crash",
    "start": "2781440",
    "end": "2787839"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "your application uh we ran into this because our old version our original version of square way back in",
    "start": "2787839",
    "end": "2794720"
  },
  {
    "text": "2010 um we started seeing exceptions on the market from view flipper and what it was",
    "start": "2794720",
    "end": "2802160"
  },
  {
    "text": "when people would change the orientation of the phone between landscape and portrait The View flipper would just",
    "start": "2802160",
    "end": "2808119"
  },
  {
    "text": "occasionally throw an exception um it's not the kind of thing you're going to notice during",
    "start": "2808119",
    "end": "2813640"
  },
  {
    "text": "development because it's very rare but as you start getting 500 users and then",
    "start": "2813640",
    "end": "2820599"
  },
  {
    "text": "a th000 and then 20,000 and then 300,000 users you'll see this exception all the",
    "start": "2820599",
    "end": "2826640"
  },
  {
    "text": "time so the fix is override basically extend view flipper",
    "start": "2826640",
    "end": "2832880"
  },
  {
    "start": "2829000",
    "end": "2829000"
  },
  {
    "text": "so I wrote a class called safe view flipper and it's on I've got the URL there but the slides are going to be",
    "start": "2832880",
    "end": "2838520"
  },
  {
    "text": "available on the user group's website and also if you just Google safe view flipper you'll find this uh all I do is",
    "start": "2838520",
    "end": "2846359"
  },
  {
    "text": "override the method on detached from window I call Super undetached and just wrap it",
    "start": "2846359",
    "end": "2852440"
  },
  {
    "text": "in a tri catch block so when the super class occasionally just randomly throws",
    "start": "2852440",
    "end": "2857559"
  },
  {
    "text": "illegal argument exception I catch it call stop flipping and then I ignore the error now normally you don't want to",
    "start": "2857559",
    "end": "2863720"
  },
  {
    "text": "ignore errors but this is a platform bug and there's really nothing you can do so you just ignore it and then that way",
    "start": "2863720",
    "end": "2869960"
  },
  {
    "text": "your application doesn't crash um you're going to miss I I'm not",
    "start": "2869960",
    "end": "2875359"
  },
  {
    "text": "exactly sure what happens when you call stop flipping abruptly like this I suspect just the animation is",
    "start": "2875359",
    "end": "2881880"
  },
  {
    "text": "going to abruptly stop but it's better than crashing your app okay so use safe",
    "start": "2881880",
    "end": "2888240"
  },
  {
    "text": "view flipper and set those animations on it and makes your UI look great I love the component but it just has this kind",
    "start": "2888240",
    "end": "2894720"
  },
  {
    "text": "of nasty glitch that you need to know about this is our card case app um what",
    "start": "2894720",
    "end": "2901720"
  },
  {
    "text": "I'd like to do is kind of describe how we implemented this now I kind of F this out a little bit for keynote that card",
    "start": "2901720",
    "end": "2909599"
  },
  {
    "text": "in the middle the font doesn't match exactly that's because I tried to get keynote to show what happens when you",
    "start": "2909599",
    "end": "2915400"
  },
  {
    "text": "tap a card what happens when you tap a card it slides up out of the pocket and then it slides down to the middle of the",
    "start": "2915400",
    "end": "2921920"
  },
  {
    "text": "screen and the back of the screen Grays out but I didn't get that working in Keynotes so uh basically you just",
    "start": "2921920",
    "end": "2928559"
  },
  {
    "text": "imagine that's happening you tap it comes out slides down so that was a trick is how do you get a card to slide",
    "start": "2928559",
    "end": "2935000"
  },
  {
    "text": "into a pocket in a UI and then once it's at the top it comes down now it's on top",
    "start": "2935000",
    "end": "2940599"
  },
  {
    "text": "of everything else okay so the way we did that",
    "start": "2940599",
    "end": "2945838"
  },
  {
    "text": "was first I override a method called get child drawing order okay now the whole",
    "start": "2947119",
    "end": "2952839"
  },
  {
    "text": "thing is just a custom view that extends View group and then I just override a",
    "start": "2952839",
    "end": "2958319"
  },
  {
    "text": "series of methods so get child drawing order um all it does is normally when a",
    "start": "2958319",
    "end": "2965000"
  },
  {
    "text": "View group has a list of children Android just draws them in order from 0 1 2 3 4 and whatever get child draw",
    "start": "2965000",
    "end": "2972240"
  },
  {
    "text": "order lets you return an array where the indices are all shuffled around so when",
    "start": "2972240",
    "end": "2977640"
  },
  {
    "text": "a card is when they're in the pocket they're drawn in order but when it slides up and then down we alter the",
    "start": "2977640",
    "end": "2984400"
  },
  {
    "text": "drawing order so that card is drawn on top of everything else that's the first",
    "start": "2984400",
    "end": "2990880"
  },
  {
    "text": "uh call it technique I don't want to call it a hack it's a technique that we use to implement this screen",
    "start": "2990880",
    "end": "2998200"
  },
  {
    "text": "second thing is we override the draw child method every almost everything else in",
    "start": "2998200",
    "end": "3003680"
  },
  {
    "text": "this screen is done in the draw child method so canvas clip wck is a key",
    "start": "3003680",
    "end": "3009319"
  },
  {
    "text": "example each one of these cards is a child view that has its own layout and",
    "start": "3009319",
    "end": "3015079"
  },
  {
    "text": "buttons and all that so when the the over the overall panel draws the",
    "start": "3015079",
    "end": "3021240"
  },
  {
    "text": "children right when draw child is called we override that we call canvas clip",
    "start": "3021240",
    "end": "3027480"
  },
  {
    "text": "wrecked to set a clip boundaries or a boundary that goes right along the the",
    "start": "3027480",
    "end": "3033400"
  },
  {
    "text": "pocket here so the clip wck is like basically up here so anything drawn",
    "start": "3033400",
    "end": "3039799"
  },
  {
    "text": "outside of this rectangle will not be drawn so then we just call super. draw",
    "start": "3039799",
    "end": "3045160"
  },
  {
    "text": "child it draws this card and then we call canvas. Restore and then that's how",
    "start": "3045160",
    "end": "3051559"
  },
  {
    "text": "we get the cards to slide into the pocket now when we're animating the card",
    "start": "3051559",
    "end": "3056640"
  },
  {
    "text": "we really don't have to do anything special we just set an animation and tell it to go and then Android automatically keeps redrawing things and",
    "start": "3056640",
    "end": "3063680"
  },
  {
    "text": "each time draw a child is called we just set the clip wrecked and regardless of where the card is it's clipped right",
    "start": "3063680",
    "end": "3069440"
  },
  {
    "text": "along along that that pocket boundary we don't have to worry about",
    "start": "3069440",
    "end": "3074760"
  },
  {
    "text": "you know the jagged pixels and the corners and all that here because we're clipping a rectangle it's a straight",
    "start": "3074760",
    "end": "3080359"
  },
  {
    "text": "line okay so in a lot of respects we kind of got lucky that the design happened to be supported by some some",
    "start": "3080359",
    "end": "3088119"
  },
  {
    "text": "key apis in uh Android and then the last thing we do is combination of canvas",
    "start": "3088119",
    "end": "3094559"
  },
  {
    "text": "translate and canvas rotate if you notice on this last pocket this has four",
    "start": "3094559",
    "end": "3100119"
  },
  {
    "text": "cards in it or yeah so the first card is drawn straight the next one is",
    "start": "3100119",
    "end": "3106000"
  },
  {
    "text": "translated up a little bit the next one is translated but also rotated a little bit and then the next one is rotated the",
    "start": "3106000",
    "end": "3112799"
  },
  {
    "text": "other direction so it looks like they're kind of shuffled and kind of jammed in that last pocket we call this the Overflow pocket so again in the draw",
    "start": "3112799",
    "end": "3120480"
  },
  {
    "text": "child method we override that we call canvas translate canvas rotate then we",
    "start": "3120480",
    "end": "3125960"
  },
  {
    "text": "call super. draw child and then we call canvas restore which undoes the",
    "start": "3125960",
    "end": "3131119"
  },
  {
    "text": "translation and rotation and it makes the cards look like they're shuffled and kind of jammed in that that last pocket",
    "start": "3131119",
    "end": "3138319"
  },
  {
    "text": "okay so that's how we implemented this screen um so my parting advice for",
    "start": "3138319",
    "end": "3144440"
  },
  {
    "start": "3143000",
    "end": "3143000"
  },
  {
    "text": "Android developers in general is first of of all Do Not Crash uh I haven't really covered any special techniques so",
    "start": "3144440",
    "end": "3151599"
  },
  {
    "text": "uh the most important technique for Do Not Crash is when you're testing your Android app hold it sideways and then",
    "start": "3151599",
    "end": "3157640"
  },
  {
    "text": "rotate it and then rotate it again and then rotate it again so maybe make like a a you know one of the things we ought",
    "start": "3157640",
    "end": "3165280"
  },
  {
    "text": "to do is make like a Lego robot that just rotates the phone all day long that's got to be the number one cause of",
    "start": "3165280",
    "end": "3172799"
  },
  {
    "text": "exceptions in Android apps so test that don't crash um the other thing I think is just",
    "start": "3172799",
    "end": "3180559"
  },
  {
    "text": "Details Matter I think just in general uh one thing has been unique for me working at",
    "start": "3180559",
    "end": "3186520"
  },
  {
    "text": "Square as opposed to my previous life where I was in Corporate America for many years uh this is the first time",
    "start": "3186520",
    "end": "3192920"
  },
  {
    "text": "I've worked at a company that's actually driven by Design and it's not like yeah we hired a",
    "start": "3192920",
    "end": "3199720"
  },
  {
    "text": "designer and he tells us what his great ideas are and then we programmers just ignore it no the design ERS run the",
    "start": "3199720",
    "end": "3207440"
  },
  {
    "text": "company so every time we Implement a feature we have to go to a design review",
    "start": "3207440",
    "end": "3214000"
  },
  {
    "text": "and they sit there and they look at it and they nitpick it and they throw it back at you and then when we're done",
    "start": "3214000",
    "end": "3219440"
  },
  {
    "text": "with the design review before we release we have a jack review where we go sit down with Jack dorsy and he does the",
    "start": "3219440",
    "end": "3226520"
  },
  {
    "text": "exact same thing um and that's really awesome but what it's taught me is that Details Matter a lot and I always",
    "start": "3226520",
    "end": "3234400"
  },
  {
    "text": "thought I was good at UI design and then I just realized no I sucked um I wasn't",
    "start": "3234400",
    "end": "3239480"
  },
  {
    "text": "doing nearly enough you need to you know use that Digital Color meter tool because it lets you zoom in and look at",
    "start": "3239480",
    "end": "3245440"
  },
  {
    "text": "every little pixel um just obsess over making sure that things align if they're",
    "start": "3245440",
    "end": "3250960"
  },
  {
    "text": "off by one pixel you'll you won't necessarily consciously notice it but it makes your UI feel sloppy and kind of",
    "start": "3250960",
    "end": "3257480"
  },
  {
    "text": "broken and chintzy so just obsess over details like that and I use little",
    "start": "3257480",
    "end": "3262839"
  },
  {
    "text": "subtle animations leave plenty of white space things like that and above all I",
    "start": "3262839",
    "end": "3270240"
  },
  {
    "text": "think I I think a lesson is to really do as few features as",
    "start": "3270240",
    "end": "3276200"
  },
  {
    "text": "possible but to do those few features really well that is almost always better than a long feature list of poorly",
    "start": "3276200",
    "end": "3284040"
  },
  {
    "text": "implemented uh functionality okay so you know no matter what your users are going to complain they're going to say well",
    "start": "3284040",
    "end": "3290559"
  },
  {
    "text": "you don't support feature X well the worst thing you could do is just throw in feature X just to shut that person up",
    "start": "3290559",
    "end": "3296440"
  },
  {
    "text": "because then it's going to be a poorly implemented feature X because you're so busy throwing in features that you don't",
    "start": "3296440",
    "end": "3302079"
  },
  {
    "text": "have time to make it really amazing um so anyway that's just some some random advice take it or leave it uh we",
    "start": "3302079",
    "end": "3309319"
  },
  {
    "text": "definitely have time for some questions so the question is how do we display with how do we deal with multiple",
    "start": "3309319",
    "end": "3315079"
  },
  {
    "text": "display sizes with okay so so I've",
    "start": "3315079",
    "end": "3320400"
  },
  {
    "text": "already mentioned our our apps are just complicated enough where we can't just use the visual layout tools right so so",
    "start": "3320400",
    "end": "3326680"
  },
  {
    "text": "you know like one of the things on the round corner I and the the triangle I try to do things in terms of percentages",
    "start": "3326680",
    "end": "3332520"
  },
  {
    "text": "of the size when possible um one thing I look for when",
    "start": "3332520",
    "end": "3337559"
  },
  {
    "text": "I'm doing code reviews is if I see that people are using I mean we definitely",
    "start": "3337559",
    "end": "3343280"
  },
  {
    "text": "use DPS like device independent pixels all over the place right but usually I",
    "start": "3343280",
    "end": "3348760"
  },
  {
    "text": "use hardcoded Dimensions as padding between components if I'm doing a code",
    "start": "3348760",
    "end": "3354760"
  },
  {
    "text": "review and I see that you've created like the width of the entire Button as like 300 pixels or 180 device",
    "start": "3354760",
    "end": "3363200"
  },
  {
    "text": "independent pixels that's a red flag for me that you're probably doing layout wrong um usually you don't want to use",
    "start": "3363200",
    "end": "3371000"
  },
  {
    "text": "dimensions for large regions of space in your UI instead you want to use it for gaps",
    "start": "3371000",
    "end": "3377000"
  },
  {
    "text": "between things instead you want to really become a master of linear layout",
    "start": "3377000",
    "end": "3382680"
  },
  {
    "text": "relative layout and potentially even writing your own custom layout from scratch uh I think the key there's no",
    "start": "3382680",
    "end": "3389640"
  },
  {
    "text": "magic formula for this other than you really have to learn the layout managers well um the thing that served me really",
    "start": "3389640",
    "end": "3396760"
  },
  {
    "text": "well also is almost every UI you can break it down into one area that's",
    "start": "3396760",
    "end": "3402760"
  },
  {
    "text": "stretchy and everything else is fixed like you have a title bar at the top that's fixed and then you have a list",
    "start": "3402760",
    "end": "3408480"
  },
  {
    "text": "view that fills the remaining space so kind of the go-to technique for that is to use a linear layout that's vertical",
    "start": "3408480",
    "end": "3416280"
  },
  {
    "text": "you set the title bar to be like WRA content and",
    "start": "3416280",
    "end": "3421960"
  },
  {
    "text": "then the rest you set the height to be equal zero DP which is a little counterintuitive right you set it to be",
    "start": "3421960",
    "end": "3427559"
  },
  {
    "text": "zero but then you give it a layout weight of one so it takes 100% of the",
    "start": "3427559",
    "end": "3433039"
  },
  {
    "text": "remaining space and it just stretches or you could do that with a relative layout where you attach it to the top and you",
    "start": "3433039",
    "end": "3438599"
  },
  {
    "text": "attach it to the bottom give it a height of zero pixels or whatever but then it just becomes stretchy because of those",
    "start": "3438599",
    "end": "3444720"
  },
  {
    "text": "attachments so there there's no like Silver Bullet answer to how you get it scalable to any",
    "start": "3444720",
    "end": "3450839"
  },
  {
    "text": "screen size but picking a stretchy area really helps and just",
    "start": "3450839",
    "end": "3456400"
  },
  {
    "text": "watching for cases where you're using dimensions for big regions instead of just for little gaps and padding I think",
    "start": "3456400",
    "end": "3463079"
  },
  {
    "text": "it's kind of a red flag that you might not be using layout managers right so I hopefully that helps a little",
    "start": "3463079",
    "end": "3469200"
  },
  {
    "text": "bit so any other questions so the question is have we built a tablet",
    "start": "3469200",
    "end": "3474520"
  },
  {
    "text": "version of our app and if so did we use fragments uh no we have not built a",
    "start": "3474520",
    "end": "3482799"
  },
  {
    "text": "tablet version of square on Android",
    "start": "3482799",
    "end": "3488480"
  },
  {
    "text": "um you know some of that gets into talking about what our company plans are",
    "start": "3488480",
    "end": "3493559"
  },
  {
    "text": "and all that I I think as you know I think the Android team wants to get into the tablet space um to be honest there's",
    "start": "3493559",
    "end": "3500799"
  },
  {
    "text": "a couple things holding us back so far as one is just resources we haven't hired enough people uh we're just really",
    "start": "3500799",
    "end": "3507599"
  },
  {
    "text": "busy um the other thing is there hasn't been a compelling Android tablet that has a big enough market share at a low",
    "start": "3507599",
    "end": "3514760"
  },
  {
    "text": "low enough price point uh you know to really justify that for us I mean that",
    "start": "3514760",
    "end": "3520079"
  },
  {
    "text": "equation is going to be different for everybody so uh I I suspect somewhere down the line we'll get in that space",
    "start": "3520079",
    "end": "3525920"
  },
  {
    "text": "But we just haven't done it yet and uh no we're not using a lot of fragments we are starting to move towards dialogue",
    "start": "3525920",
    "end": "3531359"
  },
  {
    "text": "fragment we are using the compatibility Library there's some good stuff in there",
    "start": "3531359",
    "end": "3536520"
  },
  {
    "text": "um not regular fragments yet uh you know honestly so far I've been able to use",
    "start": "3536520",
    "end": "3542400"
  },
  {
    "text": "safe view flipper for a lot of the stuff that fragments can do and it seems sufficient yeah I'm glad someone noticed",
    "start": "3542400",
    "end": "3549400"
  },
  {
    "text": "that where did we get the helvetica font from so uh we we did license that font um I",
    "start": "3549400",
    "end": "3557640"
  },
  {
    "text": "don't know where we got it from because I wasn't it was a guy named Randy redig he licensed it",
    "start": "3557640",
    "end": "3566119"
  },
  {
    "text": "yeah so the way we got helvetica is we licensed the font you put the font",
    "start": "3566880",
    "end": "3572760"
  },
  {
    "text": "into um ah what's the directory um assets or",
    "start": "3572760",
    "end": "3579160"
  },
  {
    "text": "whatever and you unfortunately you have to write a custom view inflator so all",
    "start": "3579160",
    "end": "3585799"
  },
  {
    "text": "of our activities extend from a common Base Class called Square activity and in",
    "start": "3585799",
    "end": "3591000"
  },
  {
    "text": "the Base Class activity you can create a custom view inflator and we intercept all view inflation and if it's a text",
    "start": "3591000",
    "end": "3598720"
  },
  {
    "text": "component we check for that and then we set the font on it and it was a huge",
    "start": "3598720",
    "end": "3603839"
  },
  {
    "text": "amount of work and we still find cases where we've messed it up and we're it's just very timec consuming and uh it's",
    "start": "3603839",
    "end": "3611400"
  },
  {
    "text": "kind of an amazing hack uh one of our guys Patrick did that during hack week",
    "start": "3611400",
    "end": "3617280"
  },
  {
    "text": "uh he got helvetica working on Android um you know with with Ice Cream Sandwich",
    "start": "3617280",
    "end": "3622520"
  },
  {
    "text": "coming out with a new robado font uh I'm debating you know I haven't talked",
    "start": "3622520",
    "end": "3628280"
  },
  {
    "text": "to our designers about this but my thought is we might just go to robato because we'll just get it with ice cream",
    "start": "3628280",
    "end": "3633559"
  },
  {
    "text": "sandwich but then for all the older phones we'll we'll be able to match um our general direction is to try to",
    "start": "3633559",
    "end": "3640160"
  },
  {
    "text": "evolve towards more of an ice cream sandwich look and feel on all Android levels uh we haven't got there yet but",
    "start": "3640160",
    "end": "3646880"
  },
  {
    "text": "yeah how many yeah how many devices do we test against uh a lot um a lot of that is",
    "start": "3646880",
    "end": "3655319"
  },
  {
    "text": "because we do you know we have the the reader and we do audio processing so the",
    "start": "3655319",
    "end": "3660559"
  },
  {
    "text": "way the Square Reader works is it's essentially a a MAG stripe reader and a",
    "start": "3660559",
    "end": "3666319"
  },
  {
    "text": "resistor and it's basically treated like a microphone so the audio turns out to be very different on Motorola versus HTC",
    "start": "3666319",
    "end": "3673720"
  },
  {
    "text": "versus Samsung so we have to actually sit there and plug this in and take hundreds of test swipes on every phone",
    "start": "3673720",
    "end": "3681559"
  },
  {
    "text": "and uh do a lot of regression testing on that so uh yeah we've probably got at least 30 to 40 Android devices that we",
    "start": "3681559",
    "end": "3689960"
  },
  {
    "text": "test on yeah yeah so questions about assets do we use bit Maps or do we use",
    "start": "3689960",
    "end": "3696000"
  },
  {
    "text": "vectors so whenever possible we use vector graphics on Android um our app",
    "start": "3696000",
    "end": "3701520"
  },
  {
    "text": "hovers around 3 megabytes right now and at one point it was over 4 megabytes and",
    "start": "3701520",
    "end": "3707920"
  },
  {
    "text": "you get people complaining about it um they're like why don't you support move to SD card well the reason we don't is",
    "start": "3707920",
    "end": "3715000"
  },
  {
    "text": "because when you take a payment we use background cues and when you move to an",
    "start": "3715000",
    "end": "3721279"
  },
  {
    "text": "SD card if the user plugs in that wire and mounts the the drive all your",
    "start": "3721279",
    "end": "3727240"
  },
  {
    "text": "background services are instantly killed and then when you unmount or whatever",
    "start": "3727240",
    "end": "3732440"
  },
  {
    "text": "you're not restarted automatically until you run the app so what would happen is",
    "start": "3732440",
    "end": "3738359"
  },
  {
    "text": "people would lose payments so as a Payment Processing Company we can't do that so basically okay I'm getting way",
    "start": "3738359",
    "end": "3745119"
  },
  {
    "text": "off topic there but basically the the answer is we have to make our app as small as possible so you",
    "start": "3745119",
    "end": "3752240"
  },
  {
    "text": "really want to whenever possible avoid large bit maps and do as much vector graphics as possible all right thanks",
    "start": "3752240",
    "end": "3758480"
  },
  {
    "text": "for having me",
    "start": "3758480",
    "end": "3761880"
  },
  {
    "text": "[Music]",
    "start": "3765080",
    "end": "3774190"
  }
]