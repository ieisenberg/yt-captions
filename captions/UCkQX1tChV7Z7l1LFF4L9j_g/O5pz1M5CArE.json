[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "thanks everyone for joining me in this session about mobile JavaScript and performance and I'm really excited to be",
    "start": "8679",
    "end": "15839"
  },
  {
    "text": "here uh in forwardjs because I believe that JavaScript is shaping and will",
    "start": "15839",
    "end": "22279"
  },
  {
    "text": "continue to shape the future and in that future um there are no kind of network",
    "start": "22279",
    "end": "28080"
  },
  {
    "text": "of websites it's a network of things or network of applications so to speak it's",
    "start": "28080",
    "end": "33879"
  },
  {
    "text": "kind of contradictory to what Christian Hilman said in the keynote but it's going that way so that's why mobile is",
    "start": "33879",
    "end": "40960"
  },
  {
    "text": "so important in that feature and uh you as everyone in this room is a part of",
    "start": "40960",
    "end": "46360"
  },
  {
    "text": "that future and it's kind of really exciting to be in that kind of transitional area or in that kind of",
    "start": "46360",
    "end": "52160"
  },
  {
    "text": "transitional era but let's rewind back from the future and go to the present",
    "start": "52160",
    "end": "57920"
  },
  {
    "text": "time so picture this you're are in a line just trying to buy some snacks and",
    "start": "57920",
    "end": "63600"
  },
  {
    "start": "60000",
    "end": "60000"
  },
  {
    "text": "your movie is just about to start soon what will you do next chances are that you'll pick up your phone and uh start",
    "start": "63600",
    "end": "70280"
  },
  {
    "text": "playing Flappy Bird or poking poke someone on Facebook or I don't know do a checking on checking on first car which",
    "start": "70280",
    "end": "76840"
  },
  {
    "text": "has been swarm right now so it's ridiculous but anyway or do any bunch of other things that it doesn't take too",
    "start": "76840",
    "end": "84119"
  },
  {
    "text": "much time or too much attention uh the thing is there's some kind of hidden anxiety in this situation cuz because",
    "start": "84119",
    "end": "90479"
  },
  {
    "text": "you don't know when the cashier will call you next so uh this kind of lack of",
    "start": "90479",
    "end": "95920"
  },
  {
    "text": "time and lack of attention is really exactly the reason why uh mobile",
    "start": "95920",
    "end": "102000"
  },
  {
    "text": "development or creating a fast intuitive simplistic and responsive mobile application is really of",
    "start": "102000",
    "end": "108640"
  },
  {
    "text": "Premium uh and in this talk I'll try to emphasize on why creating or developing",
    "start": "108640",
    "end": "114560"
  },
  {
    "text": "for mobile environment is harder than it seems uh what are the typical challenges and limit STS of mobile and what we can",
    "start": "114560",
    "end": "122320"
  },
  {
    "text": "do to overcome them but before that let me briefly introduce myself my name is",
    "start": "122320",
    "end": "127720"
  },
  {
    "text": "Vulcan and I a mobile engineer at Jive Software and Jive is a platform that uh",
    "start": "127720",
    "end": "134080"
  },
  {
    "text": "does social business collaboration so to speak or you can think of J as something",
    "start": "134080",
    "end": "139239"
  },
  {
    "text": "that makes Monday morning suck less uh so my website is in in here my GitHub",
    "start": "139239",
    "end": "144680"
  },
  {
    "text": "handle is this one you replace o with an zero because there was a namesake that is not me uh and you can find all the",
    "start": "144680",
    "end": "153000"
  },
  {
    "start": "152000",
    "end": "152000"
  },
  {
    "text": "slides uh and source code of this presentation in my personal website so you don't have to take screenshots or",
    "start": "153000",
    "end": "160519"
  },
  {
    "text": "copy down everything but feel feel free to do so there is no you know uh disclaimer or something uh",
    "start": "160519",
    "end": "167720"
  },
  {
    "text": "basically and having said that in this talk in a nutshell uh we'll try to",
    "start": "167720",
    "end": "174640"
  },
  {
    "text": "figure out uh whether it's really possible to create a really fast and intuitive and Snappy JavaScript",
    "start": "174640",
    "end": "180760"
  },
  {
    "text": "application in a mobile context given that we are limited by every possible",
    "start": "180760",
    "end": "185840"
  },
  {
    "text": "constraint imaginable in a runtime environment that is not so friendly to us so uh JavaScript is kind of a",
    "start": "185840",
    "end": "193879"
  },
  {
    "text": "different past uh and when you dive into it be it on the server side or on the",
    "start": "193879",
    "end": "199760"
  },
  {
    "text": "client side it's all the debugging and closures and callback HS and memory",
    "start": "199760",
    "end": "205599"
  },
  {
    "text": "leaks and all the stuff and being in a limited container as in Mobile just",
    "start": "205599",
    "end": "211400"
  },
  {
    "text": "amplifies that kind of pains in the rear basically and we are try to we'll try to",
    "start": "211400",
    "end": "217280"
  },
  {
    "text": "see and figure out how to solve those kind of issues but before starting the",
    "start": "217280",
    "end": "222439"
  },
  {
    "text": "session I'd like to emphasize that uh whatever you hear is is totally",
    "start": "222439",
    "end": "227879"
  },
  {
    "text": "dependent on the context so don't take anything for granted just know that the",
    "start": "227879",
    "end": "233360"
  },
  {
    "text": "important thing is not the tips and tricks that I share in here it's the process it's how you approach a problem",
    "start": "233360",
    "end": "240159"
  },
  {
    "text": "how you solve it things might have been totally different in your situation and the only way to know that what's working",
    "start": "240159",
    "end": "247079"
  },
  {
    "text": "for you or not is to actually test it measure it and Benchmark it given your",
    "start": "247079",
    "end": "252239"
  },
  {
    "text": "uh particular setup or scenario um having said that let's dive",
    "start": "252239",
    "end": "258120"
  },
  {
    "text": "into the challenges and limitations of mobile as a platform mobile has uh several constraints uh one of them is",
    "start": "258120",
    "end": "265320"
  },
  {
    "start": "262000",
    "end": "262000"
  },
  {
    "text": "the network communication the other is the lack of battery or uh the power usage the other is the memory and the",
    "start": "265320",
    "end": "272320"
  },
  {
    "text": "other is the processing power uh when it when come when it comes to network communication uh network is really",
    "start": "272320",
    "end": "279199"
  },
  {
    "text": "expensive in Mobile in terms of lags and delays and connectivity issues and also",
    "start": "279199",
    "end": "285400"
  },
  {
    "text": "battery consumption is a major issue because everybody knows if you have an ie device the battery dies in a day",
    "start": "285400",
    "end": "292120"
  },
  {
    "text": "that's that's what kind of sucks and you have to be really cautious about what kills your battery and you have to take",
    "start": "292120",
    "end": "298199"
  },
  {
    "text": "special precautions against that and also memory is not as much as a desktop browser so in a typical mobile",
    "start": "298199",
    "end": "305240"
  },
  {
    "text": "device you have if you're lucky you have a gig of ram in an Android device you have half a me half a gigabyte of uh RAM",
    "start": "305240",
    "end": "312720"
  },
  {
    "text": "that's shared with all the applications that's that are active on the device so it's not too much and the other thing is",
    "start": "312720",
    "end": "319520"
  },
  {
    "text": "processing uh mobile processors are not designed to uh do fast computations",
    "start": "319520",
    "end": "325199"
  },
  {
    "text": "instead they are designed to uh dissipate as little heat as possible and also so they are designed to consume as",
    "start": "325199",
    "end": "332720"
  },
  {
    "text": "as less current as as possible which makes them slower than their desktop counterparts basically so we have those",
    "start": "332720",
    "end": "339319"
  },
  {
    "text": "kind of limitations uh we'll dive into each of them as the time goes on so but one",
    "start": "339319",
    "end": "346680"
  },
  {
    "start": "346000",
    "end": "346000"
  },
  {
    "text": "important thing is uh the battery because all of those constraints are kind of tied to battery consumption as",
    "start": "346680",
    "end": "353520"
  },
  {
    "text": "well the more Network you use the more you consume your battery the more complicated your JavaScript is the",
    "start": "353520",
    "end": "360160"
  },
  {
    "text": "the faster your battery dies and no matter how pretty your application is or no matter how you know useful your",
    "start": "360160",
    "end": "367080"
  },
  {
    "text": "application or your how simplistic your application is if it sucks the battery like a sponge then the first thing that",
    "start": "367080",
    "end": "374000"
  },
  {
    "text": "the user does will be uninstalling the application and the second thing that the user does will be swearing at you",
    "start": "374000",
    "end": "379880"
  },
  {
    "text": "publicly on Twitter and I have seen that so uh in not my company but I have seen",
    "start": "379880",
    "end": "385520"
  },
  {
    "text": "people just shouting at uh other companies in Twitter because they are Dr battery too too fast basically and there",
    "start": "385520",
    "end": "393319"
  },
  {
    "text": "are a bunch of factors that kill your battery one of them is Network requests cuz uh your phone is nothing but a you",
    "start": "393319",
    "end": "400520"
  },
  {
    "text": "know shiny D the radio antenna or radio radio basically and the radio",
    "start": "400520",
    "end": "406280"
  },
  {
    "text": "communication takes a lot of power so the more Network requests you do the more aax uh calls you make uh the more",
    "start": "406280",
    "end": "414440"
  },
  {
    "text": "uh kind of uh Power stat uh change in your uh mobile app application the the",
    "start": "414440",
    "end": "420720"
  },
  {
    "text": "faster your battery will drain so a way to overcome this will be to either cash",
    "start": "420720",
    "end": "425919"
  },
  {
    "text": "stuff or batch stuff and send instead of sending five requests sending a batch",
    "start": "425919",
    "end": "431840"
  },
  {
    "text": "request and receiving the the response in a batch way uh and the other thing",
    "start": "431840",
    "end": "437120"
  },
  {
    "text": "that consumes your battery is Javascript because JavaScript is processing and the more JavaScript you have uh the faster",
    "start": "437120",
    "end": "444080"
  },
  {
    "text": "your batter will be drained and there are a bunch of issues to it one of them is the uh complexity of the JavaScript",
    "start": "444080",
    "end": "450599"
  },
  {
    "text": "so the more kind of objectoriented you your structure is or the more objects",
    "start": "450599",
    "end": "455960"
  },
  {
    "text": "you have around or the more interaction in it so if you have a really complicated pops up pattern that does",
    "start": "455960",
    "end": "462160"
  },
  {
    "text": "some uh elegant architecture um chances are that it might be consuming your",
    "start": "462160",
    "end": "468280"
  },
  {
    "text": "battery and you might need to revisit that that architecture in the context of mobile if it it were a desktop",
    "start": "468280",
    "end": "474039"
  },
  {
    "text": "application it might not be that kind of an issue but in Mobile you have to be you have to learn to be frugal and the",
    "start": "474039",
    "end": "481080"
  },
  {
    "text": "other thing is images uh as a rule of Thum uh you should not display any images that are not inside the viewport",
    "start": "481080",
    "end": "488440"
  },
  {
    "text": "and secondly you have to use uh as little images as possible the ideal I",
    "start": "488440",
    "end": "493720"
  },
  {
    "text": "don't know in an ideal L there should be no images everything is like boxed and there's no Shadows no",
    "start": "493720",
    "end": "500199"
  },
  {
    "text": "gradients but we don't live in such a you know scenario so you use your own judgments the less images the better",
    "start": "500199",
    "end": "506319"
  },
  {
    "text": "basically and the the last but not the least past is Dum because D is a really",
    "start": "506319",
    "end": "512719"
  },
  {
    "text": "uh big monster to compute with or compete with and as a rule of thumb if",
    "start": "512719",
    "end": "517760"
  },
  {
    "text": "you have uh more than 5,000 notes in a page or in a viewport or if you have",
    "start": "517760",
    "end": "524000"
  },
  {
    "text": "more than 12 to 15 levels of Dom nesting then your applications performance will",
    "start": "524000",
    "end": "529839"
  },
  {
    "text": "uh gradually degrade so you have to try to keep the number of DB notes constant on your",
    "start": "529839",
    "end": "536000"
  },
  {
    "start": "536000",
    "end": "536000"
  },
  {
    "text": "application uh when we consider all those uh con constraints we tend to see",
    "start": "536000",
    "end": "541440"
  },
  {
    "text": "that mobile and desktop are although kind of look similar they are different they serve for different purposes uh",
    "start": "541440",
    "end": "549000"
  },
  {
    "text": "mobile is kind of more lightweight more general purpose and desktop per Contra",
    "start": "549000",
    "end": "554079"
  },
  {
    "text": "is more powerful basically but it doesn't mean that you cannot create a fast and intuitive uh application in",
    "start": "554079",
    "end": "561120"
  },
  {
    "text": "Mobile uh just you have to know your environment if you can embrace the fact",
    "start": "561120",
    "end": "566560"
  },
  {
    "text": "that mobile is something more General purpose then you can really create a",
    "start": "566560",
    "end": "572040"
  },
  {
    "text": "really nice and dandy and fast applications for it and we have to be",
    "start": "572040",
    "end": "577600"
  },
  {
    "start": "576000",
    "end": "576000"
  },
  {
    "text": "fast because as we have seen before our users want us to be fast and sometimes it's they want us to be faster than the",
    "start": "577600",
    "end": "584480"
  },
  {
    "text": "desktop application because the users have really limited time if you are on a",
    "start": "584480",
    "end": "589720"
  },
  {
    "text": "line waiting for I don't know some form to be processed and somebody's calling you next you don't want to just uh click",
    "start": "589720",
    "end": "597600"
  },
  {
    "text": "the button and load an application or you don't want to wait too much you have to your gestures and your responses",
    "start": "597600",
    "end": "605000"
  },
  {
    "text": "should be as simplistic and as quick as possible uh because you know users have",
    "start": "605000",
    "end": "610920"
  },
  {
    "text": "limited attention limited time and also limited Precision you know the finger is really fast it's not a",
    "start": "610920",
    "end": "617920"
  },
  {
    "text": "cursor and when it comes to speed there are a bunch of uh dimensions of the",
    "start": "618160",
    "end": "624880"
  },
  {
    "text": "speed one of them is a network layer overall network communication the other is is the performance in rendering how",
    "start": "624880",
    "end": "631560"
  },
  {
    "text": "fast you can render stuff the other is the caching layer and the other is reaction by reaction I mean how fast the",
    "start": "631560",
    "end": "638279"
  },
  {
    "text": "user response how how smooth the user gestures are and the other is the overall JavaScript execution how fast",
    "start": "638279",
    "end": "645440"
  },
  {
    "text": "your Loops are how how optimized your functions are and there are literally books written for each and every single",
    "start": "645440",
    "end": "651839"
  },
  {
    "text": "topic of uh on this and in this talk I won't be diving into too much details of this instead I'll try to give you some",
    "start": "651839",
    "end": "659399"
  },
  {
    "text": "cursors or pointers so that you can if you're interested you can dive in deeper",
    "start": "659399",
    "end": "664480"
  },
  {
    "text": "or read books about it or go to videos and watch the videos because it's too much stuff to cover in 40 minutes time",
    "start": "664480",
    "end": "672160"
  },
  {
    "text": "basically and so let's start with the funnest one the network communication",
    "start": "672160",
    "end": "677240"
  },
  {
    "text": "network is in Mobile is really expensive and the expensiveness is not the band",
    "start": "677240",
    "end": "683399"
  },
  {
    "text": "with is the latency because uh we know that we try to create",
    "start": "683399",
    "end": "690600"
  },
  {
    "text": "uh minimalistic applications in a mobile environment therefore we don't consume the network a lot it's basically a plain",
    "start": "690600",
    "end": "696680"
  },
  {
    "text": "text Json request or response and we don't send too much uh data and we don't",
    "start": "696680",
    "end": "702040"
  },
  {
    "text": "receive too much data but the thing is uh each and every single HTTP request",
    "start": "702040",
    "end": "707079"
  },
  {
    "text": "you make uh can come up with a latency of half a second or 1 second and seeing",
    "start": "707079",
    "end": "713279"
  },
  {
    "text": "3 to four seconds of latency in Mobile environments depending on the device's radio communication state is not",
    "start": "713279",
    "end": "719440"
  },
  {
    "text": "uncommon so you have to learn to live with latency latency is is not a luxury it's a given in Mobile and you have to",
    "start": "719440",
    "end": "726279"
  },
  {
    "text": "work around that as we'll see further and to reduce the latency or to fight",
    "start": "726279",
    "end": "731600"
  },
  {
    "start": "731000",
    "end": "731000"
  },
  {
    "text": "with latency there are a bunch of approaches that we can take firstly the the fastest Network request is no",
    "start": "731600",
    "end": "737800"
  },
  {
    "text": "network request at all so if you can put your assets like CSS JavaScript some",
    "start": "737800",
    "end": "743639"
  },
  {
    "text": "images I don't know some files locally on the device and serve them locally that's the fastest way and if you cannot",
    "start": "743639",
    "end": "750480"
  },
  {
    "text": "you can utilize caching techniques and also when you do an Ajax request uh use",
    "start": "750480",
    "end": "756399"
  },
  {
    "text": "kind of a smart caching technique with uh which you don't have to do the request over and over again if you have",
    "start": "756399",
    "end": "761920"
  },
  {
    "text": "it in the cache just serve the cach version and the other thing is to decouple the user experience from",
    "start": "761920",
    "end": "767440"
  },
  {
    "text": "Network activities and we'll see an example of this uh soon so to buy by",
    "start": "767440",
    "end": "774519"
  },
  {
    "start": "772000",
    "end": "772000"
  },
  {
    "text": "decoupling I mean you have to abstract your data access layer so if you in in",
    "start": "774519",
    "end": "779800"
  },
  {
    "text": "your mobile application code if you see some uh kind of request like this this is not not the best way to do it in in",
    "start": "779800",
    "end": "786839"
  },
  {
    "text": "this piece of code we are simply uh doing a network request to arrest API",
    "start": "786839",
    "end": "792079"
  },
  {
    "text": "endpoint and it really seems Innocent but uh we can do it better so instead of",
    "start": "792079",
    "end": "797680"
  },
  {
    "text": "doing this kind of a simple request we can try to abstract things uh and abstraction is a double-edged sort so if",
    "start": "797680",
    "end": "805320"
  },
  {
    "text": "you abstract things too much it will be harder to maintain harder to read and it will become slower in terms of",
    "start": "805320",
    "end": "810519"
  },
  {
    "text": "performance but certain parts of abstraction or certain parts of code when abstracted uh may be more",
    "start": "810519",
    "end": "817160"
  },
  {
    "text": "beneficial to you and let's see uh so one of the places that you can",
    "start": "817160",
    "end": "826079"
  },
  {
    "text": "abstract is a data access layer because you will be doing a lot of caching logic and a lot of um access manipulation uh",
    "start": "826079",
    "end": "834680"
  },
  {
    "text": "and all the black magic and the data access layer therefore being it abstracted away will uh decrease the",
    "start": "834680",
    "end": "840839"
  },
  {
    "text": "impact of uh regressions and all the code problems basically and the other thing that we can abstract is the",
    "start": "840839",
    "end": "846920"
  },
  {
    "text": "rendering layer because once we abstract the render layer then it will be much",
    "start": "846920",
    "end": "852120"
  },
  {
    "text": "easier to spot out uh Dom related performance problems if uh if the jQuery",
    "start": "852120",
    "end": "858279"
  },
  {
    "text": "or the whatever D code D filtering code you use is spread all over your code base then it will be really hard to",
    "start": "858279",
    "end": "865199"
  },
  {
    "text": "Benchmark things it will be hard to isolate things or write testc for it writing a test case for a you know web",
    "start": "865199",
    "end": "872360"
  },
  {
    "text": "view is a different topic of its own and whether we should write it or not is also a separate topic of its own but",
    "start": "872360",
    "end": "878560"
  },
  {
    "text": "abstracting them at least help it to isolate the issue a little",
    "start": "878560",
    "end": "883680"
  },
  {
    "text": "better and the other thing is latency and as I said it's not the Bandit that's",
    "start": "883680",
    "end": "890040"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "the problem it's a latency in the mobile network and mobile network requests are expensive and I won't dive into too much",
    "start": "890040",
    "end": "897279"
  },
  {
    "text": "detail because it's a real topic of it own but you can keep in mind that the latency and all the sluggishness of the",
    "start": "897279",
    "end": "904040"
  },
  {
    "text": "mobile network is due to the extreme complexity of the wireless mobile network architecture and if you want to",
    "start": "904040",
    "end": "911160"
  },
  {
    "text": "uh have in-depth information about this you can visit this link and get Ilia",
    "start": "911160",
    "end": "916480"
  },
  {
    "text": "Gregor's excellent book on the uh subject matter it's free to read online and if you can if you want you can",
    "start": "916480",
    "end": "923160"
  },
  {
    "text": "purchase it and get a print copy if you like and it's a perfect book I suggest if you have time to read it and you get",
    "start": "923160",
    "end": "929279"
  },
  {
    "text": "a grasp of uh the overall be background of",
    "start": "929279",
    "end": "934600"
  },
  {
    "text": "things so the bottom line is latency in Mobile is high and latency is Mobile in Mobile is highly variable and therefore",
    "start": "934600",
    "end": "941959"
  },
  {
    "text": "to sort things out you have to have an offline mode as we have seen in the beginning of beginning of this uh event",
    "start": "941959",
    "end": "948959"
  },
  {
    "text": "offline is not a luxury anymore you have to have an offline and you have to plan for an offline access because we are not",
    "start": "948959",
    "end": "955880"
  },
  {
    "text": "always offline online if you are in a conference room you'll try to fiddle out entering those you know wireless access",
    "start": "955880",
    "end": "963120"
  },
  {
    "text": "code and then pray for the conference guts that the access code will work as it's it's supposed to be but most of the",
    "start": "963120",
    "end": "970440"
  },
  {
    "text": "time conference Network sucks so uh offline is a is a part of Mobile mobile",
    "start": "970440",
    "end": "977079"
  },
  {
    "text": "life basically uh and to have an offline mode you have to uh have a caching strategy Al also and also you have to",
    "start": "977079",
    "end": "984199"
  },
  {
    "text": "have a intelligent backup strategy so you try a request if it fails you try it once more if it fails again you try it",
    "start": "984199",
    "end": "991399"
  },
  {
    "text": "once more with increasing intervals like in 2 seconds in 4 seconds in 8 seconds and if still if the request still fails",
    "start": "991399",
    "end": "998120"
  },
  {
    "text": "you just give up you don't try it over and over again because trying the network connection over and over again",
    "start": "998120",
    "end": "1004720"
  },
  {
    "text": "also consumes with battery and also it heats up the device uh I don't know you",
    "start": "1004720",
    "end": "1010519"
  },
  {
    "text": "I have experienced this myself and probably you have to uh there is poor",
    "start": "1010519",
    "end": "1015560"
  },
  {
    "text": "network connectivity and you see a loading spinner in the a phone screen or some kind of a network",
    "start": "1015560",
    "end": "1022240"
  },
  {
    "text": "connecting indicator and the phone is literally burning in your hand that's the reason why the net the the phone is",
    "start": "1022240",
    "end": "1029400"
  },
  {
    "text": "trying to connect to the base Tower and it's not getting a good communication and it's trying to retry the request",
    "start": "1029400",
    "end": "1035438"
  },
  {
    "text": "over and over again and uh the problem is in that kind of a scenario first the",
    "start": "1035439",
    "end": "1041720"
  },
  {
    "text": "phone hits and the the the heating of the phone means that uh the battery is",
    "start": "1041720",
    "end": "1048160"
  },
  {
    "text": "draining and the it's it's kind of a double wise problem so the phone is",
    "start": "1048160",
    "end": "1054039"
  },
  {
    "text": "hitting and your batter is draining like a like like lightning and it's two perfect reasons for your users to hate",
    "start": "1054039",
    "end": "1060480"
  },
  {
    "text": "you and uninstall the application and then you know curse you at Twitter basically and the other thing uh about",
    "start": "1060480",
    "end": "1069000"
  },
  {
    "text": "performance or speed is the rendering layer and when we think of L rendering",
    "start": "1069000",
    "end": "1074080"
  },
  {
    "text": "uh CSS paint times is not uh free and there are a bunch of CSS prop properties",
    "start": "1074080",
    "end": "1079280"
  },
  {
    "start": "1077000",
    "end": "1077000"
  },
  {
    "text": "that uh we need to pay special attention to and those are shadows and gradients",
    "start": "1079280",
    "end": "1085120"
  },
  {
    "text": "and uh like big fonts or custom fonts kind of and when we combine one or two",
    "start": "1085120",
    "end": "1091720"
  },
  {
    "text": "or more of these kind of things it might become uh gradually slower so especially",
    "start": "1091720",
    "end": "1098640"
  },
  {
    "text": "if you are trying to do cool CSS animations or cool CSS effects on a big",
    "start": "1098640",
    "end": "1104960"
  },
  {
    "text": "list of SC big infinite scrolling list then use see that the performance of",
    "start": "1104960",
    "end": "1110600"
  },
  {
    "text": "those scroll action is not as you expect so the less CSS you have the better",
    "start": "1110600",
    "end": "1115919"
  },
  {
    "text": "basically and also it's true for animations uh you can as a rule of thumb",
    "start": "1115919",
    "end": "1121440"
  },
  {
    "text": "think that on mobile the animations will be if you're if it's JavaScript written",
    "start": "1121440",
    "end": "1127240"
  },
  {
    "text": "uh the animations will be around three to four times slower than its desktop counterpart so try to use as little",
    "start": "1127240",
    "end": "1134480"
  },
  {
    "text": "animations as you can and try to use CSS for animation because it's uh GPU",
    "start": "1134480",
    "end": "1141000"
  },
  {
    "text": "accelerated and it's optimized for just animating or moving stuff around uh but",
    "start": "1141000",
    "end": "1147000"
  },
  {
    "text": "this is not also a hard and cold fact that you can do if if a you know jQuery",
    "start": "1147000",
    "end": "1152720"
  },
  {
    "text": "based animation works for you then go ahead with it but just test your assumptions basically uh but CSS is",
    "start": "1152720",
    "end": "1159679"
  },
  {
    "text": "always faster than a script based animation basically and the other thing that we",
    "start": "1159679",
    "end": "1165919"
  },
  {
    "text": "can optimize on the rendering layer is templates and and when it comes to templates going logicist is uh has a",
    "start": "1165919",
    "end": "1172799"
  },
  {
    "text": "bunch of advantages one of them is the template is generally at the bottom of your rendering hierarchy so the more",
    "start": "1172799",
    "end": "1179760"
  },
  {
    "text": "logic you put into the template uh the more complex your overall flow will be",
    "start": "1179760",
    "end": "1185159"
  },
  {
    "text": "and probably you are repeating the template in a repeater structure to render a kind of either nested tree of",
    "start": "1185159",
    "end": "1191799"
  },
  {
    "text": "things or list of items and the more logic it has the slower the overall flow will be so the other advantage of the",
    "start": "1191799",
    "end": "1199320"
  },
  {
    "text": "logicist templates is uh swap swapability basically so if you have",
    "start": "1199320",
    "end": "1205240"
  },
  {
    "text": "some server side templates and if you have some client side templates and then once in a while you decide to move the",
    "start": "1205240",
    "end": "1211520"
  },
  {
    "text": "client side templat to the server or take some template from the server and render it on the client you'll find out",
    "start": "1211520",
    "end": "1217520"
  },
  {
    "text": "that a logicist approach which will be much more versatile than trying to figure out which parameter goes where or",
    "start": "1217520",
    "end": "1223520"
  },
  {
    "text": "how we can express the if blog in that template language in a different way in the server side template",
    "start": "1223520",
    "end": "1229400"
  },
  {
    "text": "and the other thing is try to try not to Nest your templates and by the same token try not to Nest your VI objects",
    "start": "1229400",
    "end": "1237120"
  },
  {
    "text": "we'll see a bunch of examples regarding that soon uh so but before that uh let's see",
    "start": "1237120",
    "end": "1245159"
  },
  {
    "start": "1241000",
    "end": "1241000"
  },
  {
    "text": "our biggest enemy basically and our biggest enemy is Dom and there are a bunch of reasons for it one of them is",
    "start": "1245159",
    "end": "1252520"
  },
  {
    "text": "the fact that Dom is a slow and synchronous API and when you try to access a Dom uh uh element or when you",
    "start": "1252520",
    "end": "1259840"
  },
  {
    "text": "try to change the Dum since JavaScript is single threaded then uh you are kind",
    "start": "1259840",
    "end": "1265440"
  },
  {
    "text": "of tossed uh the unless the Dom operation completes uh your UI and your",
    "start": "1265440",
    "end": "1272640"
  },
  {
    "text": "UI freezes entirely therefore the less you touch the Dum the better and there",
    "start": "1272640",
    "end": "1278279"
  },
  {
    "text": "are a bunch of ways that you touch the Dum that you don't know of uh one of them is just reading an dumb attribute",
    "start": "1278279",
    "end": "1285919"
  },
  {
    "text": "even if you read an attribute on Dum like a offset top or offset left or a border uh kind of Dimension box uh box",
    "start": "1285919",
    "end": "1294559"
  },
  {
    "text": "size um the there will be a bunch of style recalculations that will trigger",
    "start": "1294559",
    "end": "1301000"
  },
  {
    "text": "layout trashing and which will make the things slower so try not to read D try",
    "start": "1301000",
    "end": "1306400"
  },
  {
    "text": "not to write to d uh so what else you can do but uh the thing is try to cat",
    "start": "1306400",
    "end": "1313159"
  },
  {
    "text": "things as much as you can so if you are reading some attribute from them just put it in a place",
    "start": "1313159",
    "end": "1319039"
  },
  {
    "text": "and then use the cach value instead of trying to read it over and over again and if you are trying to write something",
    "start": "1319039",
    "end": "1324200"
  },
  {
    "text": "to d one way to do it is to detach all the notes and do the manipulation offline and then reattach the notes back",
    "start": "1324200",
    "end": "1330720"
  },
  {
    "text": "into the Dom tree and the other way is to kind of yield your operations with a set",
    "start": "1330720",
    "end": "1337559"
  },
  {
    "text": "timeout so that it doesn't affect the overall flow of things but the bottom line is the less you touch them the",
    "start": "1337559",
    "end": "1343200"
  },
  {
    "text": "faster your application will be and there are a there are ways to measure uh the effect of your Dum manipulation or",
    "start": "1343200",
    "end": "1350760"
  },
  {
    "start": "1346000",
    "end": "1346000"
  },
  {
    "text": "css manipulation uh and there are tools for that so if you are using Chrome developer tools and if you enable The",
    "start": "1350760",
    "end": "1357480"
  },
  {
    "text": "Continuous repaint mode uh then you can take two different you can play with the",
    "start": "1357480",
    "end": "1363640"
  },
  {
    "text": "viewport you can add some CSS rules some Dum elements change the HTML and change",
    "start": "1363640",
    "end": "1368919"
  },
  {
    "text": "see what kind of uh layout uh combination is faster or renders faster",
    "start": "1368919",
    "end": "1375360"
  },
  {
    "text": "or has a higher frame rate and if you want something more granular then you",
    "start": "1375360",
    "end": "1380640"
  },
  {
    "text": "can use a high resolution timing API and in this example we are basically doing that too so in this example we are first",
    "start": "1380640",
    "end": "1388640"
  },
  {
    "text": "uh create getting an element and hiding the element and flushing all the style",
    "start": "1388640",
    "end": "1393840"
  },
  {
    "text": "changes then red displaying the element and flushing again the style changes and",
    "start": "1393840",
    "end": "1399360"
  },
  {
    "text": "taking two times stamp differences in between and the the difference between those time stamps is a rough estimate",
    "start": "1399360",
    "end": "1406600"
  },
  {
    "text": "about how how overall rendering or overall rendering load or overall rering",
    "start": "1406600",
    "end": "1413600"
  },
  {
    "text": "load of that chunk of element is and to make it reliable as in every statistical",
    "start": "1413600",
    "end": "1419200"
  },
  {
    "text": "thing this kind of test should be repeated over and over again and then H cut the edges should be cut out and then",
    "start": "1419200",
    "end": "1425679"
  },
  {
    "text": "the entire result set should be averaged out but at least this kind of approach gives you a a more granular way of",
    "start": "1425679",
    "end": "1433039"
  },
  {
    "text": "controlling things or measuring things and aside from open Chrome Opera Opera",
    "start": "1433039",
    "end": "1440440"
  },
  {
    "text": "has a CSS profiler and I'm sure Firefox has a similar profiler too but I have",
    "start": "1440440",
    "end": "1446000"
  },
  {
    "text": "not tested the other uh profilers myself and the other thing that we were",
    "start": "1446000",
    "end": "1452760"
  },
  {
    "start": "1450000",
    "end": "1450000"
  },
  {
    "text": "discussing is not to Nest view objects and we are seeing an anti pattern that",
    "start": "1452760",
    "end": "1458039"
  },
  {
    "text": "does it in this example so here uh we are appending a child note to a document",
    "start": "1458039",
    "end": "1464919"
  },
  {
    "text": "fragment uh by calling a rander method with of a view object basically and the",
    "start": "1464919",
    "end": "1471440"
  },
  {
    "text": "only purpose of this this view object is just to create an HTML chunk and append",
    "start": "1471440",
    "end": "1477159"
  },
  {
    "text": "to a dumb fragment and then this kind of uh newly created view object is",
    "start": "1477159",
    "end": "1482279"
  },
  {
    "text": "discarded for garbage collection and this is too much of a burden for our precious garbage collector and",
    "start": "1482279",
    "end": "1488799"
  },
  {
    "text": "especially if uh this uh is kind of representing an",
    "start": "1488799",
    "end": "1494240"
  },
  {
    "text": "infinitely scrolling list or a really fast changing part of Dum then the",
    "start": "1494240",
    "end": "1500039"
  },
  {
    "text": "garbage collection will be will be kind of shooting ourselves in the food uh and",
    "start": "1500039",
    "end": "1505240"
  },
  {
    "text": "we can uh kind of create a simplistic approach and instead of using a",
    "start": "1505240",
    "end": "1510360"
  },
  {
    "text": "full-blown view object that we will be discarding and not using at all we can use a simpler template based solution so",
    "start": "1510360",
    "end": "1517520"
  },
  {
    "text": "we can use a pre-compiled template and then put our whatever data structure we",
    "start": "1517520",
    "end": "1522960"
  },
  {
    "text": "have to just create a HTML uh to it this is kind of better uh because we first we",
    "start": "1522960",
    "end": "1530120"
  },
  {
    "text": "are using less objects and the the less amount of objects we use the uh the",
    "start": "1530120",
    "end": "1535840"
  },
  {
    "text": "less uh less force on the garbage collector that we'll have and the second thing is since the template function is",
    "start": "1535840",
    "end": "1541799"
  },
  {
    "text": "precompiled it will be kind of faster and we can do better though so",
    "start": "1541799",
    "end": "1548240"
  },
  {
    "text": "instead of using a template function if we know the difference of what parts of",
    "start": "1548240",
    "end": "1553520"
  },
  {
    "start": "1550000",
    "end": "1550000"
  },
  {
    "text": "the page change uh we can get the Delta of the changes like this SE of the page",
    "start": "1553520",
    "end": "1558840"
  },
  {
    "text": "changed and this section of the page hasn't changed and then for each change in our change set we can just uh",
    "start": "1558840",
    "end": "1566360"
  },
  {
    "text": "pinpoint and change modify that part of the Dom this is kind of implementing a",
    "start": "1566360",
    "end": "1572039"
  },
  {
    "text": "virtual Dom approach that uh that reactjs and other libraries are doing",
    "start": "1572039",
    "end": "1577279"
  },
  {
    "text": "but my my point is not that my point is uh the more optimization you do the more",
    "start": "1577279",
    "end": "1584320"
  },
  {
    "text": "complicated or the more complex your code gets and therefore you have to know which parts of the code base to optimize",
    "start": "1584320",
    "end": "1591000"
  },
  {
    "text": "because optimization comes with a maintenance cost uh with itself",
    "start": "1591000",
    "end": "1596039"
  },
  {
    "text": "therefore if you are in a you know ver pool of optimizing and optimizing and",
    "start": "1596039",
    "end": "1601640"
  },
  {
    "text": "you come to this kind of a conclusion that you have to take a Delta and loop all the noes and kind of come up with a",
    "start": "1601640",
    "end": "1609080"
  },
  {
    "text": "u faster solution just Benchmark and think whether it's worth it or not uh",
    "start": "1609080",
    "end": "1615880"
  },
  {
    "text": "maybe it's worth it maybe it's not but it totally depends on your application and you cannot know whether it's uh a",
    "start": "1615880",
    "end": "1623039"
  },
  {
    "text": "productive approach or not if you're not measuring it the other thing is Jank basting and I",
    "start": "1623039",
    "end": "1628880"
  },
  {
    "start": "1626000",
    "end": "1626000"
  },
  {
    "text": "don't have too much time to dive into this as well and I strongly suggest you to go to jankfree dorg and watch all the",
    "start": "1628880",
    "end": "1635200"
  },
  {
    "text": "videos and all the tutorials there because it's a a hell lot of information there to consume and they are really",
    "start": "1635200",
    "end": "1641360"
  },
  {
    "text": "quality resources I can say that you have two goals to hit uh in terms of",
    "start": "1641360",
    "end": "1648559"
  },
  {
    "text": "creating a Jank free application one of them is to create a 16 milliseconds per",
    "start": "1648559",
    "end": "1654000"
  },
  {
    "text": "frame kind of animation and the other is to have a consistent frame rate uh to",
    "start": "1654000",
    "end": "1660840"
  },
  {
    "text": "maintain a frame rate consistency you can utilize the request animation frame",
    "start": "1660840",
    "end": "1665919"
  },
  {
    "text": "API and it's not an easy task but it's not the hardest thing at all so it's not",
    "start": "1665919",
    "end": "1671000"
  },
  {
    "text": "rocket surgery basically but it's it takes some time to you know",
    "start": "1671000",
    "end": "1676360"
  },
  {
    "text": "practice but it's an important think especially in Mobile because the mobile users are less patient than the desktop",
    "start": "1676360",
    "end": "1684760"
  },
  {
    "text": "users basically and the other layer that we can optimize is the caching layer and we",
    "start": "1684760",
    "end": "1692919"
  },
  {
    "text": "have seen that we have a problem about the unreliability of network latency is",
    "start": "1692919",
    "end": "1698120"
  },
  {
    "start": "1693000",
    "end": "1693000"
  },
  {
    "text": "a killer in Mobile and network requests are expensive in terms of response times",
    "start": "1698120",
    "end": "1704240"
  },
  {
    "text": "and the solution is to bch your requests and then cash your respon responses and utilize offline modes and all that jazz",
    "start": "1704240",
    "end": "1711919"
  },
  {
    "text": "but when we try to come up with a caching solution we open another kind of forms so such as where to cach there are",
    "start": "1711919",
    "end": "1719760"
  },
  {
    "start": "1718000",
    "end": "1718000"
  },
  {
    "text": "a bunch of places that you can cach and one of them is the HTML5 application cach which sucks uh therefore it's hard",
    "start": "1719760",
    "end": "1728080"
  },
  {
    "text": "to you know deal with it index CV has issues with it web SQ is not supported anymore and in those kind of a scenario",
    "start": "1728080",
    "end": "1736000"
  },
  {
    "text": "when I bump into this kind of a scenario my thought would be to go with the dumbest solution that have in hand that",
    "start": "1736000",
    "end": "1742159"
  },
  {
    "text": "works so because if it works and it's dumb then it's not dumb basically and local storage tends to be",
    "start": "1742159",
    "end": "1749240"
  },
  {
    "text": "the simplest solution it's a simple API it's standardized it's well behaved it's",
    "start": "1749240",
    "end": "1754480"
  },
  {
    "start": "1751000",
    "end": "1751000"
  },
  {
    "text": "really fast it's just like a key value store and some people complain about the",
    "start": "1754480",
    "end": "1760320"
  },
  {
    "text": "you know IO rate of the local storage or say that you know the local storage",
    "start": "1760320",
    "end": "1766519"
  },
  {
    "text": "requests are causing a blocking IO and that might be slower uh which to my",
    "start": "1766519",
    "end": "1773039"
  },
  {
    "text": "observation is not the case because the it's not the io it's the it's not the io",
    "start": "1773039",
    "end": "1778200"
  },
  {
    "text": "that's the bottleneck most of the time it's the rendering it's a Dom it's a paring it's the layout thrashing it's",
    "start": "1778200",
    "end": "1784440"
  },
  {
    "text": "much higher or much different things that you need to focus on and when we",
    "start": "1784440",
    "end": "1789600"
  },
  {
    "text": "decide to use local storage then we open a different problem box which is what",
    "start": "1789600",
    "end": "1794919"
  },
  {
    "text": "what caching policy that we should use uh one of them is is one one problem is",
    "start": "1794919",
    "end": "1800559"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "uh the size limit of local storage although 5 megabytes might seem like a lot uh we'll soon see you'll soon see",
    "start": "1800559",
    "end": "1808399"
  },
  {
    "text": "that it's it will it will be eaten up uh in a practical real life",
    "start": "1808399",
    "end": "1816120"
  },
  {
    "text": "application as a solution you can partially store the data or Minify your Json responses which is a good thing",
    "start": "1816120",
    "end": "1822720"
  },
  {
    "text": "both in terms of network or and in terms of the object footprint on your",
    "start": "1822720",
    "end": "1828480"
  },
  {
    "text": "JavaScript application and also you can compress the data like using a zip likee",
    "start": "1828480",
    "end": "1834880"
  },
  {
    "text": "compression algorithm but when you compress the data there is also a decompression overhead so again you have",
    "start": "1834880",
    "end": "1840440"
  },
  {
    "text": "to test and verify and validate your assumptions in that uh I from time to time I have seen that compression works",
    "start": "1840440",
    "end": "1846919"
  },
  {
    "text": "great and particularly if you are targeting um kind of more recent mobile",
    "start": "1846919",
    "end": "1853000"
  },
  {
    "text": "devices like Android greater than jellan or iOS greater than iPhone 4 then",
    "start": "1853000",
    "end": "1859919"
  },
  {
    "text": "compression works fine but if you are uh kind of targeting lowend devices like ice cream sandwich and Below or iPhone",
    "start": "1859919",
    "end": "1867000"
  },
  {
    "text": "3GS and there still are users that use iPhone 3GS on the planet uh then uh",
    "start": "1867000",
    "end": "1873559"
  },
  {
    "text": "compression might be an over overburden in that case so it totally depends on your scenario your user base your Market",
    "start": "1873559",
    "end": "1881760"
  },
  {
    "text": "basically and we have seen that abstracting stuff is useful in certain",
    "start": "1881760",
    "end": "1887720"
  },
  {
    "text": "cases phes one of them was abstracting the rendering layer the other was",
    "start": "1887720",
    "end": "1892799"
  },
  {
    "text": "abstracting the network communication layer and it is also true for caching uh",
    "start": "1892799",
    "end": "1898519"
  },
  {
    "text": "try to abstract your cache layer and try to have a single cache entry point this will make it much easier to detect cash",
    "start": "1898519",
    "end": "1906080"
  },
  {
    "text": "related problems and the one other thing is to cap the size of each of your cash",
    "start": "1906080",
    "end": "1911600"
  },
  {
    "text": "entries cuz you would not like a I don't know a 3 megabyte blog post to or the",
    "start": "1911600",
    "end": "1918760"
  },
  {
    "text": "Json response of a 3 megabyte block post to consume up all your cash and don't",
    "start": "1918760",
    "end": "1923919"
  },
  {
    "text": "leave anything behind and when when we have cash a cash eviction policy is also",
    "start": "1923919",
    "end": "1930279"
  },
  {
    "text": "uh required and most of the time uh last recently used algorithm is the best way",
    "start": "1930279",
    "end": "1935360"
  },
  {
    "text": "to go but depending on your application structure you might want to do different cash eviction or cach usage algorithms",
    "start": "1935360",
    "end": "1944600"
  },
  {
    "text": "and when you try to implement that kind of an algorithm you have to know the size of your cache and since JavaScript",
    "start": "1944600",
    "end": "1951240"
  },
  {
    "text": "doesn't have a onet toone correspondence of creating a size of a object the only",
    "start": "1951240",
    "end": "1957159"
  },
  {
    "text": "way to use is to uh use the json. stringify uh of the local storage and",
    "start": "1957159",
    "end": "1963559"
  },
  {
    "text": "this is not a big kind of a burden because Json stringify is a native operation and it tends to run quite fast",
    "start": "1963559",
    "end": "1970639"
  },
  {
    "text": "I haven't tried to you know benchmark and uh test it to the limits of it but for all all practical produ ction code I",
    "start": "1970639",
    "end": "1978840"
  },
  {
    "text": "didn't have any issues by while I take the length of an item by stringifying",
    "start": "1978840",
    "end": "1984840"
  },
  {
    "text": "it and the next thing is the reaction which is the overall user",
    "start": "1984840",
    "end": "1991720"
  },
  {
    "text": "responsiveness and if you can think keep one thing in mind about the",
    "start": "1991720",
    "end": "1997519"
  },
  {
    "start": "1992000",
    "end": "1992000"
  },
  {
    "text": "reactiveness ER you should be considering not to block the UI basically so if the UI is if the user is",
    "start": "1997519",
    "end": "2006360"
  },
  {
    "text": "motion is in motion if the user is doing a gesture like panning swiping zooming pinching in pinching pinching in",
    "start": "2006360",
    "end": "2013039"
  },
  {
    "text": "pinching out so does the UI respond accordingly and there are two key metrics in here to accompany with that",
    "start": "2013039",
    "end": "2020279"
  },
  {
    "text": "one of them is the 16 milliseconds for per frame as we have seen before and the",
    "start": "2020279",
    "end": "2025639"
  },
  {
    "text": "other is 100 milliseconds per user action these are the psychological limits that uh the users intuitively",
    "start": "2025639",
    "end": "2033320"
  },
  {
    "text": "feel that the application is slower if they pass the that kind of threshold so",
    "start": "2033320",
    "end": "2039399"
  },
  {
    "text": "if you tap on a button and it the button doesn't respond to you for half a second",
    "start": "2039399",
    "end": "2044760"
  },
  {
    "text": "then it's kind of poor user feedback uh similarly if you swipe something and the",
    "start": "2044760",
    "end": "2050079"
  },
  {
    "text": "UI doesn't respond and once your gesture ends uh the UI changes its state then",
    "start": "2050079",
    "end": "2055520"
  },
  {
    "text": "it's also poor user feedback when the UI is in motion uh when the user's hand is in motion basically uh the UI also",
    "start": "2055520",
    "end": "2063000"
  },
  {
    "text": "should respond to the user accordingly and there are ways to uh accomplish it",
    "start": "2063000",
    "end": "2068599"
  },
  {
    "text": "as we'll see a bunch of examples soon uh this is also kind of an anti",
    "start": "2068599",
    "end": "2076638"
  },
  {
    "start": "2073000",
    "end": "2073000"
  },
  {
    "text": "pattern so in this function we are handling an Ajax response so what's wrong with that the thing is uh an Ajax",
    "start": "2076639",
    "end": "2084679"
  },
  {
    "text": "callbacks callback has a a feature of blocking a bunch of things one of them",
    "start": "2084679",
    "end": "2090040"
  },
  {
    "text": "is the request animation frame Loop and the other is the main UI thread and it depends from browser architecture to",
    "start": "2090040",
    "end": "2096599"
  },
  {
    "text": "browser architecture but generally if the user is doing kind of some kind of a gesture and then Ajax callback comes in",
    "start": "2096599",
    "end": "2104200"
  },
  {
    "text": "then the the screen freezes for a while and you can see this kind of interaction",
    "start": "2104200",
    "end": "2109359"
  },
  {
    "text": "or lack of interaction in again Infinity scrolling list while you come to the end",
    "start": "2109359",
    "end": "2114640"
  },
  {
    "text": "of the list you try to do another scroll uh the the application fetches the data",
    "start": "2114640",
    "end": "2120800"
  },
  {
    "text": "and tries to put the data to the bottom of the list while the user is trying to scroll it and the UI can freeze for a",
    "start": "2120800",
    "end": "2127040"
  },
  {
    "text": "couple of seconds in that scenario because it's trying to do too much as a rule of Thum you can if you can try not",
    "start": "2127040",
    "end": "2134480"
  },
  {
    "text": "to do any JavaScript action while the user is doing some kind of a gesture",
    "start": "2134480",
    "end": "2140040"
  },
  {
    "text": "because there are a lot of things going on like uh like rization or things being",
    "start": "2140040",
    "end": "2146119"
  },
  {
    "text": "uploaded to the GPU and things being stashed away and rendered back in so the",
    "start": "2146119",
    "end": "2152359"
  },
  {
    "text": "browser is doing too much and adding a bunch of additional burden on top of it is kind of counter productive and to",
    "start": "2152359",
    "end": "2159000"
  },
  {
    "text": "solve this kind of issue we can do a simple modification so we can create a",
    "start": "2159000",
    "end": "2164640"
  },
  {
    "text": "hold a flag that checks whether the UI is in motion or not and if the UI is not",
    "start": "2164640",
    "end": "2170359"
  },
  {
    "text": "in motion uh then we can handle the Ajax response uh so this kind of is useful uh",
    "start": "2170359",
    "end": "2179680"
  },
  {
    "text": "because if we are sure that user the user is not doing any kind of gesture uh it doesn't matter whether the content",
    "start": "2179680",
    "end": "2186720"
  },
  {
    "text": "loads in a second or in half a second because most probably the user is not",
    "start": "2186720",
    "end": "2191960"
  },
  {
    "text": "user is passively interacting with the UI is she's either looking at a as an image or she's reading kind of a title",
    "start": "2191960",
    "end": "2198440"
  },
  {
    "text": "or an article uh she's just consuming the content and it's it's a it's a a",
    "start": "2198440",
    "end": "2204319"
  },
  {
    "text": "perfect time to you know gather a different an additional set of content and try to prepare for it so this is",
    "start": "2204319",
    "end": "2211880"
  },
  {
    "text": "kind of a a solution for that this is not perfect there will be edge cases but",
    "start": "2211880",
    "end": "2217079"
  },
  {
    "text": "this kind of at least gives the concept of it and when it comes to UI and CSS and",
    "start": "2217079",
    "end": "2225400"
  },
  {
    "start": "2221000",
    "end": "2221000"
  },
  {
    "text": "all the stuff the next thing that comes to mind is event handling and when it",
    "start": "2225400",
    "end": "2230680"
  },
  {
    "text": "comes to thinking about event handling uh the first thing that comes to mind is to utilize event delegation event",
    "start": "2230680",
    "end": "2237359"
  },
  {
    "text": "delegation is a pattern that has been coined I don't know six or seven years ago or maybe before that uh that that",
    "start": "2237359",
    "end": "2246119"
  },
  {
    "text": "insist on using or binding The Binding the events to the container of a set of items",
    "start": "2246119",
    "end": "2253040"
  },
  {
    "text": "instead of binding to each and every single list item in a kind of list and this has a bunch of uses uh or a bunch",
    "start": "2253040",
    "end": "2260720"
  },
  {
    "text": "of advantages one of them is you create a lesser amount of functions so there is",
    "start": "2260720",
    "end": "2266400"
  },
  {
    "text": "less code to deal with and hence uh there is less uh chances of regression",
    "start": "2266400",
    "end": "2272560"
  },
  {
    "text": "or bugs and the second thing is it uses less memory so it is uh",
    "start": "2272560",
    "end": "2278119"
  },
  {
    "text": "friendlier on the memory side most of the time event delegation patterns are faster there are some exceptions to it",
    "start": "2278119",
    "end": "2285520"
  },
  {
    "text": "uh do when we compare certain kind of tap events on certain kind of items but",
    "start": "2285520",
    "end": "2292480"
  },
  {
    "text": "these are kind of edge cases and also event",
    "start": "2292480",
    "end": "2298839"
  },
  {
    "text": "delegation kind of helps uh I know it's generally useful um",
    "start": "2298839",
    "end": "2305240"
  },
  {
    "text": "the other thing that I see while attaching and detaching events in different uh kinds of codes is a pattern",
    "start": "2305240",
    "end": "2313040"
  },
  {
    "text": "that uh you try to attach something you and then after a action you detach those",
    "start": "2313040",
    "end": "2318680"
  },
  {
    "text": "kind of events and the most common thing that I see is uh during a a swipe event you attach a bunch bunch",
    "start": "2318680",
    "end": "2326599"
  },
  {
    "text": "of handlers and when you do a tap leave action you detach those handlers uh but",
    "start": "2326599",
    "end": "2334520"
  },
  {
    "text": "if we kind of follow a delegation philosophy then leaving those handlers intact would",
    "start": "2334520",
    "end": "2340040"
  },
  {
    "text": "be much better especially if you try to reduce the number of event handlers and",
    "start": "2340040",
    "end": "2345920"
  },
  {
    "text": "not to attach and detach events too much uh you'll really see that the overall",
    "start": "2345920",
    "end": "2351680"
  },
  {
    "text": "application performs better especially in lower grade devices you won't you might not see too much of an advantage",
    "start": "2351680",
    "end": "2358400"
  },
  {
    "text": "in a newer Android phone but you can see it's really shines in in older Androids",
    "start": "2358400",
    "end": "2363839"
  },
  {
    "text": "or older iOS devices and the other thing about events are",
    "start": "2363839",
    "end": "2370319"
  },
  {
    "start": "2367000",
    "end": "2367000"
  },
  {
    "text": "some of the events kind of fire too frequently like Mouse events or device",
    "start": "2370319",
    "end": "2375480"
  },
  {
    "text": "motion events or kind of scroll events and in those kind of scenarios uh the",
    "start": "2375480",
    "end": "2381400"
  },
  {
    "text": "best practice is to decouple the UI interaction with the event State data so",
    "start": "2381400",
    "end": "2387680"
  },
  {
    "text": "in this particular example we are trying to move a d note every time we get a",
    "start": "2387680",
    "end": "2392839"
  },
  {
    "text": "device motion event and this is kind of a killer in terms of memory in terms of performance in terms of CPU utilization",
    "start": "2392839",
    "end": "2399160"
  },
  {
    "text": "and in terms of battery uh so instead we can kind of decouple these",
    "start": "2399160",
    "end": "2406880"
  },
  {
    "text": "uh event state from the event action by using a request animation frame",
    "start": "2406880",
    "end": "2413200"
  },
  {
    "text": "Loop uh so this is kind of a simplistic solution to that so in the device motion",
    "start": "2413200",
    "end": "2421280"
  },
  {
    "text": "event we add an event listener and put all the device information all the information that we are interest",
    "start": "2421280",
    "end": "2427319"
  },
  {
    "text": "interested in in a state back and then we fire and request animation frame Loop",
    "start": "2427319",
    "end": "2433599"
  },
  {
    "text": "and when when we are sure that we can process those kind of event information",
    "start": "2433599",
    "end": "2439480"
  },
  {
    "text": "we just move uh move the object as to the place that we want to this is this",
    "start": "2439480",
    "end": "2445640"
  },
  {
    "text": "can be enhanced so this is kind of a simplistic example just to show the concept but the overall logic is to",
    "start": "2445640",
    "end": "2452480"
  },
  {
    "text": "decouple your uh event state from the event application to the D which also uh",
    "start": "2452480",
    "end": "2459599"
  },
  {
    "text": "is in parallel uh with the Moto that touch the Dom as little as you can so",
    "start": "2459599",
    "end": "2465359"
  },
  {
    "text": "and the ideal place to touch the D is generally when the uh animation frame",
    "start": "2465359",
    "end": "2470880"
  },
  {
    "text": "Fire or the animation frame ticks uh at certain times because at that time the",
    "start": "2470880",
    "end": "2477040"
  },
  {
    "text": "browser is sure that it can render an additional frame and it will be less damaging than the than trying to render",
    "start": "2477040",
    "end": "2484359"
  },
  {
    "text": "it at abrupt time time stamps basically this F delegating the frequently firing",
    "start": "2484359",
    "end": "2491880"
  },
  {
    "text": "events and those kind of events as I said are device motion scroll anything that uh you feel like is firing like",
    "start": "2491880",
    "end": "2499119"
  },
  {
    "text": "crazy is a target to this kind of optimization but it doesn't mean that you cannot do it in every single event",
    "start": "2499119",
    "end": "2504839"
  },
  {
    "text": "that you have it's just a trade-off that you have to decide by measuring it and this is how the things",
    "start": "2504839",
    "end": "2513520"
  },
  {
    "text": "working and the other thing is the overall execution speed but when it comes to execution",
    "start": "2513520",
    "end": "2520640"
  },
  {
    "start": "2518000",
    "end": "2518000"
  },
  {
    "text": "which uh is the JavaScript execution we have to look at the big picture first because it's not the JavaScript that",
    "start": "2520640",
    "end": "2527160"
  },
  {
    "text": "should be optimized per se it's the interaction of JavaScript with the rendering layer so it's most of the time",
    "start": "2527160",
    "end": "2535599"
  },
  {
    "text": "uh is not uh the the problem is not with the with the kind of loop or with the",
    "start": "2535599",
    "end": "2542040"
  },
  {
    "text": "kind of tree balancing algorithm that you have written the problem is uh the devices trying to render a big chunk of",
    "start": "2542040",
    "end": "2548720"
  },
  {
    "text": "thumb that it should not or there is some kind of layout thrashing that is preventing the application be snap here",
    "start": "2548720",
    "end": "2555920"
  },
  {
    "text": "or there's some kind of CSS issue or some kind of parsing issue that's going behind so it's the intersection point of",
    "start": "2555920",
    "end": "2562640"
  },
  {
    "text": "the JavaScript land with the user agent land or the browser land so uh no matter",
    "start": "2562640",
    "end": "2569559"
  },
  {
    "text": "how meticulously optimize your your I don't know your tree balancing algorithm or your search",
    "start": "2569559",
    "end": "2576440"
  },
  {
    "text": "algorithm uh chances are that it might it won't affect too much in the performance of your overall JavaScript",
    "start": "2576440",
    "end": "2583040"
  },
  {
    "text": "execution but as always it's also has to be measured to be decided for",
    "start": "2583040",
    "end": "2588760"
  },
  {
    "text": "sure and the other thing is the concept of entropy this is taken from this flame",
    "start": "2588760",
    "end": "2595160"
  },
  {
    "start": "2589000",
    "end": "2589000"
  },
  {
    "text": "chart is taken from a real life application that we were developing and we were able to reduce the what you see",
    "start": "2595160",
    "end": "2601520"
  },
  {
    "text": "in here to help by uh doing tricks like uh delegating complex computation",
    "start": "2601520",
    "end": "2609520"
  },
  {
    "text": "stuff to web workers and reducing number of event handlers and joining stuff and",
    "start": "2609520",
    "end": "2614599"
  },
  {
    "text": "getting rid of a bunch of objects but my point is again not that my point is uh",
    "start": "2614599",
    "end": "2619960"
  },
  {
    "text": "the more my point is the code also your code also degrades eventually and the",
    "start": "2619960",
    "end": "2627640"
  },
  {
    "text": "more time frames you have uh your code will expand to fill those time frames available and also entropy is a fact in",
    "start": "2627640",
    "end": "2635160"
  },
  {
    "text": "the code as well as time pass spy your code becomes more random more repetitive",
    "start": "2635160",
    "end": "2641000"
  },
  {
    "text": "more redundant and less useful therefore you have to keep an eye on the code always to make sure that everything is",
    "start": "2641000",
    "end": "2648440"
  },
  {
    "text": "ship shape and the only way to uh ensure it is to you know to measure it or to",
    "start": "2648440",
    "end": "2655680"
  },
  {
    "text": "track it or to to profile it and there is another the other side of the coin uh",
    "start": "2655680",
    "end": "2661960"
  },
  {
    "start": "2660000",
    "end": "2660000"
  },
  {
    "text": "the JavaScript engines are getting better uh for instance Chrome's Shadow",
    "start": "2661960",
    "end": "2667599"
  },
  {
    "text": "and gradient rendering performance is getting better uh JavaScript engines are getting clever in the finding figuring",
    "start": "2667599",
    "end": "2674200"
  },
  {
    "text": "out which parts of the code are had and they are trying to optimize the execution of those code the the engines",
    "start": "2674200",
    "end": "2680839"
  },
  {
    "text": "are using background classes like special classes uh and using pre-compiled",
    "start": "2680839",
    "end": "2687520"
  },
  {
    "text": "JavaScript uh execution to make things faster and there are a bunch of corollaries to that corer one is you",
    "start": "2687520",
    "end": "2695760"
  },
  {
    "text": "cannot know how fast the JavaScript piece of JavaScript code when you take",
    "start": "2695760",
    "end": "2701240"
  },
  {
    "text": "it out of the context of it because it the the performance of the code will depend on where you put the code if it's",
    "start": "2701240",
    "end": "2707800"
  },
  {
    "text": "in an isolated test case it can behave differently if it's in an production application it can behave differently",
    "start": "2707800",
    "end": "2714599"
  },
  {
    "text": "and the other thing is uh that's the second corollary the faster all these",
    "start": "2714599",
    "end": "2721000"
  },
  {
    "text": "optimization becomes the more things we push in the device to make it you know more elegant more shiny more Dandy and",
    "start": "2721000",
    "end": "2728000"
  },
  {
    "text": "it's kind of a vicious cycle uh so you have to know your frame budget and you have to uh prepare for uh for your",
    "start": "2728000",
    "end": "2737079"
  },
  {
    "text": "applications optimization basically and there are really great articles for V8",
    "start": "2737079",
    "end": "2742160"
  },
  {
    "text": "engine on the developers. gooogle comom website uh I haven't checked Mozilla and",
    "start": "2742160",
    "end": "2748240"
  },
  {
    "text": "other open source project yet but I'm sure they have also kind of Articles too if you into that this is kind of a",
    "start": "2748240",
    "end": "2754720"
  },
  {
    "text": "deeper uh part of the equ equation but if you are into that I suggest you go there and see what's going on in the",
    "start": "2754720",
    "end": "2761280"
  },
  {
    "text": "background especially the hidden classes that the rendering that the JavaScript engine uses is a really neat approach",
    "start": "2761280",
    "end": "2768520"
  },
  {
    "text": "that uh the engine takes to optimize stuff and the funnest part one of the",
    "start": "2768520",
    "end": "2776760"
  },
  {
    "text": "more funnest part is Frameworks and I have a love and hate relationship with using Frameworks because especially in",
    "start": "2776760",
    "end": "2783559"
  },
  {
    "text": "Mobile you have two limited resources that sometimes make the make using the",
    "start": "2783559",
    "end": "2789119"
  },
  {
    "text": "Frameworks kind of counterproductive and Frameworks are expensive because Frameworks have",
    "start": "2789119",
    "end": "2794520"
  },
  {
    "text": "economies of scale uh to utilize the framework or to make the use of your",
    "start": "2794520",
    "end": "2799880"
  },
  {
    "text": "framework you have to use the utilize all the functions that the framework",
    "start": "2799880",
    "end": "2806079"
  },
  {
    "text": "provides and in Mobile most of the time you don't use the entire framework you use only a subset of it and E also",
    "start": "2806079",
    "end": "2814480"
  },
  {
    "text": "Frameworks increase your dependency and also Frameworks kind of uh uh let me",
    "start": "2814480",
    "end": "2823680"
  },
  {
    "text": "think they can make your application slower because they increase the memory consumption and memory footprint as well",
    "start": "2823680",
    "end": "2829720"
  },
  {
    "text": "so I'm not saying don't use Frameworks because they are good uh places that you can utilize them but the thing is at",
    "start": "2829720",
    "end": "2837319"
  },
  {
    "text": "least try to min minimize the framework code you use try to detect the parts that you don't use and uh chop them off",
    "start": "2837319",
    "end": "2843599"
  },
  {
    "text": "and make a minified version of your your framework uh and also I have an example",
    "start": "2843599",
    "end": "2851920"
  },
  {
    "start": "2849000",
    "end": "2849000"
  },
  {
    "text": "to to show the overall impact of the framework code on your mobile application this is just a typical setup",
    "start": "2851920",
    "end": "2857960"
  },
  {
    "text": "there is nothing fancy it's a basically a backbone Jore mobilecore setup one",
    "start": "2857960",
    "end": "2863440"
  },
  {
    "text": "thing that I did is to add a a counter to each and every single of each and",
    "start": "2863440",
    "end": "2869640"
  },
  {
    "text": "every single function uh that was inside the framework code and here are the",
    "start": "2869640",
    "end": "2875680"
  },
  {
    "text": "results so when I add a bunch of framework code back to back I come up",
    "start": "2875680",
    "end": "2883280"
  },
  {
    "text": "with this kind of a result so this is just to warm things up and nothing is",
    "start": "2883280",
    "end": "2888800"
  },
  {
    "text": "rendered on the page yet there are no jcore widgets rendered there are no backbone views created it's just a",
    "start": "2888800",
    "end": "2895599"
  },
  {
    "text": "warm-up code and I can see 6,827 function calls just to initiate a",
    "start": "2895599",
    "end": "2902079"
  },
  {
    "text": "single plain boiler plate code and this not this is not the end of the story as well because you also have to add your",
    "start": "2902079",
    "end": "2909960"
  },
  {
    "text": "business logic layer data access layer caching layer and all the helper plugins that you have to attach to your shiny",
    "start": "2909960",
    "end": "2916720"
  },
  {
    "text": "Dand the framework and then after we add these all together it kind of becomes",
    "start": "2916720",
    "end": "2922599"
  },
  {
    "text": "like this uh so I know Frameworks are kind of like",
    "start": "2922599",
    "end": "2928760"
  },
  {
    "text": "burritos they are delish but they are hard to consume so you have to think",
    "start": "2928760",
    "end": "2933920"
  },
  {
    "text": "twice uh before using a framework uh and also since we are in a mobile",
    "start": "2933920",
    "end": "2940400"
  },
  {
    "text": "environment uh most of the things that we use in Frameworks are supported by",
    "start": "2940400",
    "end": "2946559"
  },
  {
    "text": "their modern API counterparts so instead of getting an using an ID selector you can use document get element by ID or",
    "start": "2946559",
    "end": "2953280"
  },
  {
    "text": "you can use Query selectors you can add event listener instead of biing a clink",
    "start": "2953280",
    "end": "2958559"
  },
  {
    "text": "listener kind of so you have to think about whether to use a framework or not",
    "start": "2958559",
    "end": "2964000"
  },
  {
    "text": "and this other thing is to optimize is memory leaks and memory leaks are not",
    "start": "2964000",
    "end": "2970040"
  },
  {
    "text": "magic it's basically as in every language it's just counting references",
    "start": "2970040",
    "end": "2975079"
  },
  {
    "text": "from the root object to a chunk of objects and if even if there is a single reference to that blob of objects the uh",
    "start": "2975079",
    "end": "2983440"
  },
  {
    "text": "the object cluster will remain in the memory and it will be seen as a memory leak and there are a bunch of suspects",
    "start": "2983440",
    "end": "2990480"
  },
  {
    "start": "2989000",
    "end": "2989000"
  },
  {
    "text": "that causes memory leaks one of them is event handlers or an event based architecture so if you using us a",
    "start": "2990480",
    "end": "2996960"
  },
  {
    "text": "publisher subscriber pattern or if you are using an observer pattern chances are that your memory may leak if you",
    "start": "2996960",
    "end": "3003319"
  },
  {
    "text": "don't detach uh your subscriptions and the other is timers some most of the",
    "start": "3003319",
    "end": "3008720"
  },
  {
    "text": "time you find uh forgetting dangling timer references that can leak memory",
    "start": "3008720",
    "end": "3014720"
  },
  {
    "text": "and also cache objects that are not being evicted can cause memory leaks and",
    "start": "3014720",
    "end": "3020480"
  },
  {
    "text": "there are some not so Usual Suspects of memory leaks as well one of them is closures because closures are a",
    "start": "3020480",
    "end": "3026680"
  },
  {
    "text": "controlled chunk of memory and you might have a you might have a cach object",
    "start": "3026680",
    "end": "3033000"
  },
  {
    "text": "inside the closure that's growing in size and you're not aware of it and any ER objects like manager renderer",
    "start": "3033000",
    "end": "3039599"
  },
  {
    "text": "controller provider can be a kind candidate for a memory leak and any object that touches St can leak and any",
    "start": "3039599",
    "end": "3046480"
  },
  {
    "text": "object that acts like a cach May leak and profiling memory is really hard",
    "start": "3046480",
    "end": "3053599"
  },
  {
    "start": "3050000",
    "end": "3050000"
  },
  {
    "text": "because you have to do a bunch of uh Heap snapshots and then you have to take",
    "start": "3053599",
    "end": "3058680"
  },
  {
    "text": "diffs of those Heap snapshots and I'd prefer root canal instead of Heap",
    "start": "3058680",
    "end": "3063720"
  },
  {
    "text": "profiling every single given moment in time and so the usual thing is to create",
    "start": "3063720",
    "end": "3069920"
  },
  {
    "start": "3068000",
    "end": "3068000"
  },
  {
    "text": "a code that doesn't leak in the first place instead of trying to figure out what part of your code causes leaks",
    "start": "3069920",
    "end": "3076359"
  },
  {
    "text": "which is hard to say you know you should not create leaks but have uh and in the",
    "start": "3076359",
    "end": "3082760"
  },
  {
    "text": "case that you find out leaks the technique called three snapshots technique is really helpful the",
    "start": "3082760",
    "end": "3088960"
  },
  {
    "text": "technique is kind of you do an action you take a heap snapshot you reverse the",
    "start": "3088960",
    "end": "3094000"
  },
  {
    "text": "action you take another Heap snapshat and then uh you kind of compare those",
    "start": "3094000",
    "end": "3099200"
  },
  {
    "text": "snapshots and uh it gives an indicator of what parts of your code is leaking",
    "start": "3099200",
    "end": "3104240"
  },
  {
    "text": "it's not still the best way or the fastest way to figure out leaks but it eases out your pain at",
    "start": "3104240",
    "end": "3111160"
  },
  {
    "start": "3111000",
    "end": "3111000"
  },
  {
    "text": "least and the other thing is reducing Dom access since I I'm lacking out of",
    "start": "3111160",
    "end": "3117559"
  },
  {
    "text": "time I'm skipping it the less Dom the less you touch the Dom the better the",
    "start": "3117559",
    "end": "3122880"
  },
  {
    "start": "3122000",
    "end": "3122000"
  },
  {
    "text": "faster and one of the one way to you know uh touch the Dom less is to or use",
    "start": "3122880",
    "end": "3130760"
  },
  {
    "text": "less JavaScript is to delegate your heavy computational operations to web workers and web workers are supported in",
    "start": "3130760",
    "end": "3137079"
  },
  {
    "text": "most of the mobile platforms so you can yield your conceptually heavy operations",
    "start": "3137079",
    "end": "3142960"
  },
  {
    "text": "to them with a with one caveat because web workers are not free they consume",
    "start": "3142960",
    "end": "3148000"
  },
  {
    "text": "CPU and they consume processing power therefore they will drain your battery so there is kind of a trade-off uh and",
    "start": "3148000",
    "end": "3154119"
  },
  {
    "text": "you have to decide what to upload to the workers and what not which takes us to the subject of being lean and by being",
    "start": "3154119",
    "end": "3161359"
  },
  {
    "text": "lean I mean being lean in whatever you do like reduce your CSS reduce your",
    "start": "3161359",
    "end": "3166559"
  },
  {
    "start": "3165000",
    "end": "3165000"
  },
  {
    "text": "JavaScript reduce your radio communication as fast as you can to do as little as possible and this article",
    "start": "3166559",
    "end": "3173480"
  },
  {
    "text": "this Al listart article is a really nice article that sign it up and the other thing is the overall",
    "start": "3173480",
    "end": "3180960"
  },
  {
    "text": "user perception so if you cannot make something faster you can always make it",
    "start": "3180960",
    "end": "3186760"
  },
  {
    "text": "to appear to have been faster and there are ways of doing it one of them is overestimating the remaining time so if",
    "start": "3186760",
    "end": "3193319"
  },
  {
    "start": "3190000",
    "end": "3190000"
  },
  {
    "text": "it says you know if your application says there it's it has 15 seconds to download and the app downloads in 5",
    "start": "3193319",
    "end": "3200640"
  },
  {
    "text": "seconds the user feel like yeah it's really fast but if it says you know it has a longer time to download but it's",
    "start": "3200640",
    "end": "3208400"
  },
  {
    "text": "downloads even longer then user feel will feel like it's it's kind of really slow and also feedback that starts",
    "start": "3208400",
    "end": "3214799"
  },
  {
    "text": "earlier feels sooner and one thing that's not in the slides is I am kind of",
    "start": "3214799",
    "end": "3220040"
  },
  {
    "text": "against the progress indicators instead of putting a progress indicator the UI should feel like gradually evolving so",
    "start": "3220040",
    "end": "3228160"
  },
  {
    "text": "like instead of putting a loading indicator there you can first create a like a frame or like initial frame of a",
    "start": "3228160",
    "end": "3236480"
  },
  {
    "text": "application then gradually put an image some descriptive text as the data comes the UI should progress gradually so that",
    "start": "3236480",
    "end": "3244599"
  },
  {
    "text": "you know the user feels something is Flowing instead of looking at blank spinner and doesn't know when the when",
    "start": "3244599",
    "end": "3250960"
  },
  {
    "text": "the hell the spinner will go up and simplicity is generally a way to go",
    "start": "3250960",
    "end": "3257359"
  },
  {
    "text": "because simpler code consumes less memory is generally faster and creates",
    "start": "3257359",
    "end": "3262520"
  },
  {
    "text": "less problems so when you are trying to put something to the code or remove",
    "start": "3262520",
    "end": "3267799"
  },
  {
    "text": "remove something from your code base General choice is to remove it and to go with simpler",
    "start": "3267799",
    "end": "3274680"
  },
  {
    "text": "Solutions and again a pointer to the entropy your application's performance",
    "start": "3274680",
    "end": "3280920"
  },
  {
    "text": "will not stay the same and if you don't put effort on it your application's performance will always degrade and as",
    "start": "3280920",
    "end": "3288160"
  },
  {
    "text": "in nature in code also entropy always wins unless you put additional effort to",
    "start": "3288160",
    "end": "3293359"
  },
  {
    "text": "it therefore uh try to I don't know if you're a scram user keep",
    "start": "3293359",
    "end": "3299319"
  },
  {
    "text": "the performance as a as a topic of your daily of your weekly Sprints or bi-",
    "start": "3299319",
    "end": "3305000"
  },
  {
    "text": "weekly Sprints and keep performance as a goal as a task to achieve achieve instead of something that should or",
    "start": "3305000",
    "end": "3311520"
  },
  {
    "text": "should not be done and that's I think most of the things that I'd like to talk about and one other thing is I'm not the",
    "start": "3311520",
    "end": "3318920"
  },
  {
    "start": "3316000",
    "end": "3316000"
  },
  {
    "text": "only one that comes up with those kind of ideas uh actually what what I talk in",
    "start": "3318920",
    "end": "3324599"
  },
  {
    "text": "here is kind of a combined wisdom of a community of Geeks",
    "start": "3324599",
    "end": "3329880"
  },
  {
    "text": "that are bigger than me and I'd like to suggest if you are not following uh them",
    "start": "3329880",
    "end": "3335119"
  },
  {
    "text": "already follow these guys and this is not a compressive comprehensive list and you can find more people to follow uh",
    "start": "3335119",
    "end": "3342280"
  },
  {
    "text": "always keeping you know keep in contact always try to learn new things because every couple of years some new stuff is",
    "start": "3342280",
    "end": "3349400"
  },
  {
    "text": "coming and making some of the suggestions outdated that's why I try to emphasize measuring and benchmarking",
    "start": "3349400",
    "end": "3355400"
  },
  {
    "text": "always because you don't know if you have a performance issue or not if you don't measure it having said that I'm",
    "start": "3355400",
    "end": "3363079"
  },
  {
    "text": "kind of out of my time so if you want if you have questions I can answer them offline and that's out of my talk thank",
    "start": "3363079",
    "end": "3370400"
  },
  {
    "text": "you for joining me",
    "start": "3370400",
    "end": "3374078"
  }
]