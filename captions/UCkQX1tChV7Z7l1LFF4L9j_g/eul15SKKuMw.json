[
  {
    "text": "[Music]",
    "start": "670",
    "end": "25359"
  },
  {
    "text": "um so let's start by uh taking ourselves",
    "start": "25359",
    "end": "29279"
  },
  {
    "text": "back to um the magical land of the early",
    "start": "29279",
    "end": "32558"
  },
  {
    "text": "2000s um we are at Google um at this",
    "start": "32559",
    "end": "35719"
  },
  {
    "text": "time I was in junior high school I think",
    "start": "35719",
    "end": "38559"
  },
  {
    "text": "um and so Google has this thing that",
    "start": "38559",
    "end": "41120"
  },
  {
    "text": "they have to do all the time and that is",
    "start": "41120",
    "end": "44000"
  },
  {
    "text": "for literally every page on the internet",
    "start": "44000",
    "end": "46239"
  },
  {
    "text": "they have to um uh do something like",
    "start": "46239",
    "end": "50079"
  },
  {
    "text": "this which is build an inverted index so",
    "start": "50079",
    "end": "51840"
  },
  {
    "text": "you want to know for the word cow um if",
    "start": "51840",
    "end": "54280"
  },
  {
    "text": "someone's going to type that into a",
    "start": "54280",
    "end": "55320"
  },
  {
    "text": "search box um every single uh website on",
    "start": "55320",
    "end": "58879"
  },
  {
    "text": "the internet that has the word it um so",
    "start": "58879",
    "end": "62280"
  },
  {
    "text": "as you know there are a lot of websites",
    "start": "62280",
    "end": "64158"
  },
  {
    "text": "there were fewer websites at the time um",
    "start": "64159",
    "end": "66080"
  },
  {
    "text": "but still uh quite a few um and in",
    "start": "66080",
    "end": "69960"
  },
  {
    "text": "addition to this they had tons of uh",
    "start": "69960",
    "end": "73080"
  },
  {
    "text": "General uh you know data preparation and",
    "start": "73080",
    "end": "76720"
  },
  {
    "text": "Analysis tax tasks um that ran over",
    "start": "76720",
    "end": "80799"
  },
  {
    "text": "enormous uh enormous amounts of data",
    "start": "80799",
    "end": "85159"
  },
  {
    "text": "um here we go so it's hard to do that on",
    "start": "85159",
    "end": "87759"
  },
  {
    "text": "a single computer um even really",
    "start": "87759",
    "end": "90640"
  },
  {
    "text": "powerful fast supercomputers it's hard",
    "start": "90640",
    "end": "92799"
  },
  {
    "text": "to do it on and they are very very",
    "start": "92799",
    "end": "96200"
  },
  {
    "text": "expensive um so the basic idea that they",
    "start": "96200",
    "end": "99640"
  },
  {
    "text": "came up with was you get a cluster um of",
    "start": "99640",
    "end": "103479"
  },
  {
    "text": "tens hundreds thousands 10 thousands of",
    "start": "103479",
    "end": "105880"
  },
  {
    "text": "uh commodity machines um and you get",
    "start": "105880",
    "end": "109000"
  },
  {
    "text": "them all to work together on uh solving",
    "start": "109000",
    "end": "111479"
  },
  {
    "text": "these types of",
    "start": "111479",
    "end": "113119"
  },
  {
    "text": "problems um so that is all nice and",
    "start": "113119",
    "end": "117200"
  },
  {
    "text": "dandy but if I want to be doing like",
    "start": "117200",
    "end": "119520"
  },
  {
    "text": "basic web analytics if I want to be",
    "start": "119520",
    "end": "121719"
  },
  {
    "text": "building a search engine I don't want to",
    "start": "121719",
    "end": "123039"
  },
  {
    "text": "have to think about um all the oops Yeah",
    "start": "123039",
    "end": "128160"
  },
  {
    "text": "I'm using the wrong computer thank you",
    "start": "128160",
    "end": "130319"
  },
  {
    "text": "um I don't want to have to be thinking",
    "start": "130319",
    "end": "132440"
  },
  {
    "text": "about all the complications that uh",
    "start": "132440",
    "end": "135480"
  },
  {
    "text": "arise when you're trying to build uh",
    "start": "135480",
    "end": "136879"
  },
  {
    "text": "distributed systems you know anything",
    "start": "136879",
    "end": "138800"
  },
  {
    "text": "can fail at any time um so you have to",
    "start": "138800",
    "end": "141920"
  },
  {
    "text": "maintain some sort of consistency um it",
    "start": "141920",
    "end": "144000"
  },
  {
    "text": "gets very complicated and very unhappy",
    "start": "144000",
    "end": "147080"
  },
  {
    "text": "uh very quickly um so",
    "start": "147080",
    "end": "150400"
  },
  {
    "text": "these people at Google came up with this",
    "start": "150400",
    "end": "152720"
  },
  {
    "text": "idea and this idea was map ruce um so",
    "start": "152720",
    "end": "158560"
  },
  {
    "text": "how does map produce work um at a very",
    "start": "158560",
    "end": "160800"
  },
  {
    "text": "high level um you as a map produce",
    "start": "160800",
    "end": "164000"
  },
  {
    "text": "programmer um write your program in",
    "start": "164000",
    "end": "165920"
  },
  {
    "text": "terms of two functions uh map function",
    "start": "165920",
    "end": "168080"
  },
  {
    "text": "and a reduce function um and the",
    "start": "168080",
    "end": "170840"
  },
  {
    "text": "framework pretty much take care takes",
    "start": "170840",
    "end": "172959"
  },
  {
    "text": "care of uh of the",
    "start": "172959",
    "end": "175920"
  },
  {
    "text": "rest um so what are these functions",
    "start": "175920",
    "end": "180800"
  },
  {
    "text": "uh well let's get that a little bit",
    "start": "180800",
    "end": "182239"
  },
  {
    "text": "later um so what are these functions",
    "start": "182239",
    "end": "185680"
  },
  {
    "text": "like um what a map function does is it",
    "start": "185680",
    "end": "189360"
  },
  {
    "text": "takes uh as input some key value pair um",
    "start": "189360",
    "end": "193000"
  },
  {
    "text": "and then it just outputs some other key",
    "start": "193000",
    "end": "195200"
  },
  {
    "text": "value pair",
    "start": "195200",
    "end": "197799"
  },
  {
    "text": "um the reduce function um so in between",
    "start": "197799",
    "end": "201280"
  },
  {
    "text": "me and reduce this magic happens where",
    "start": "201280",
    "end": "203440"
  },
  {
    "text": "um we should we don't have a whiteboard",
    "start": "203440",
    "end": "205680"
  },
  {
    "text": "do",
    "start": "205680",
    "end": "206440"
  },
  {
    "text": "we no it's too small um this uh this",
    "start": "206440",
    "end": "211360"
  },
  {
    "text": "magic happens",
    "start": "211360",
    "end": "213120"
  },
  {
    "text": "where um all the keys that were outputed",
    "start": "213120",
    "end": "217000"
  },
  {
    "text": "from the map function um all the values",
    "start": "217000",
    "end": "220599"
  },
  {
    "text": "corresponding to them get um combined",
    "start": "220599",
    "end": "223159"
  },
  {
    "text": "sorted together um and sent to a reducer",
    "start": "223159",
    "end": "225280"
  },
  {
    "text": "so I'm going to go into this a little",
    "start": "225280",
    "end": "227519"
  },
  {
    "text": "more heavily in the next slide um uh and",
    "start": "227519",
    "end": "230959"
  },
  {
    "text": "so reducer also gets a um a key with a",
    "start": "230959",
    "end": "234640"
  },
  {
    "text": "list of values that correspond to it as",
    "start": "234640",
    "end": "236560"
  },
  {
    "text": "input um and uh output it's something",
    "start": "236560",
    "end": "241360"
  },
  {
    "text": "else um so let's look at sort of the",
    "start": "241360",
    "end": "245920"
  },
  {
    "text": "uh the canonical map produce uh function",
    "start": "245920",
    "end": "250159"
  },
  {
    "text": "or the sorry the canonical map ruce",
    "start": "250159",
    "end": "251959"
  },
  {
    "text": "program is word",
    "start": "251959",
    "end": "254319"
  },
  {
    "text": "count",
    "start": "254319",
    "end": "256919"
  },
  {
    "text": "um",
    "start": "256919",
    "end": "258680"
  },
  {
    "text": "um so here we are uh back as Google or",
    "start": "258680",
    "end": "261959"
  },
  {
    "text": "really anyone um and we have some you",
    "start": "261959",
    "end": "265520"
  },
  {
    "text": "know enormous Corpus of tons and tons of",
    "start": "265520",
    "end": "267400"
  },
  {
    "text": "documents and we want to do some sort of",
    "start": "267400",
    "end": "268880"
  },
  {
    "text": "frequency analysis on it um so for every",
    "start": "268880",
    "end": "271560"
  },
  {
    "text": "word that shows up in those documents um",
    "start": "271560",
    "end": "274960"
  },
  {
    "text": "what we would like to be able to do is",
    "start": "274960",
    "end": "276639"
  },
  {
    "text": "uh output um account of how many times",
    "start": "276639",
    "end": "279160"
  },
  {
    "text": "that word appears in uh in all the",
    "start": "279160",
    "end": "281520"
  },
  {
    "text": "documents um so we start with our map",
    "start": "281520",
    "end": "285000"
  },
  {
    "text": "function um and our M function is very",
    "start": "285000",
    "end": "290199"
  },
  {
    "text": "simple um each uh each input to the map",
    "start": "290199",
    "end": "293880"
  },
  {
    "text": "function is one of the documents in our",
    "start": "293880",
    "end": "295960"
  },
  {
    "text": "Corpus um and uh an out put is so we",
    "start": "295960",
    "end": "302120"
  },
  {
    "text": "take that document uh we read it we",
    "start": "302120",
    "end": "304080"
  },
  {
    "text": "parse out tokenize all the words um and",
    "start": "304080",
    "end": "306800"
  },
  {
    "text": "then for each word in that document um",
    "start": "306800",
    "end": "310080"
  },
  {
    "text": "we are able to uh output uh that word",
    "start": "310080",
    "end": "313560"
  },
  {
    "text": "maap to the value one does that make",
    "start": "313560",
    "end": "316880"
  },
  {
    "text": "sense we're saying there's one of that",
    "start": "316880",
    "end": "318520"
  },
  {
    "text": "word in that document",
    "start": "318520",
    "end": "320270"
  },
  {
    "text": "[Music]",
    "start": "320270",
    "end": "321639"
  },
  {
    "text": "um um okay uh so at the end of our uh at",
    "start": "321639",
    "end": "325520"
  },
  {
    "text": "the end of all our mapping we've called",
    "start": "325520",
    "end": "327800"
  },
  {
    "text": "this map function on every doc ment uh",
    "start": "327800",
    "end": "330280"
  },
  {
    "text": "in our Corpus um and we have tons and",
    "start": "330280",
    "end": "333960"
  },
  {
    "text": "tons of uh these output uh key value",
    "start": "333960",
    "end": "337199"
  },
  {
    "text": "pairs right for uh for every single word",
    "start": "337199",
    "end": "340000"
  },
  {
    "text": "in every document that we have um we",
    "start": "340000",
    "end": "342919"
  },
  {
    "text": "have that map to the letter one um so",
    "start": "342919",
    "end": "346960"
  },
  {
    "text": "this magic happens in between map and",
    "start": "346960",
    "end": "348479"
  },
  {
    "text": "reduce where um for for all the keys for",
    "start": "348479",
    "end": "352199"
  },
  {
    "text": "all the output keys of our map function",
    "start": "352199",
    "end": "354440"
  },
  {
    "text": "um the ones that are the same are",
    "start": "354440",
    "end": "356000"
  },
  {
    "text": "grouped together so uh the word cow um",
    "start": "356000",
    "end": "361639"
  },
  {
    "text": "uh cow cow is mapped to one let's say",
    "start": "364759",
    "end": "367680"
  },
  {
    "text": "maybe 100 thousand times in in our",
    "start": "367680",
    "end": "369639"
  },
  {
    "text": "Corpus um so uh we we find we we go to",
    "start": "369639",
    "end": "375120"
  },
  {
    "text": "to all those things um and a single",
    "start": "375120",
    "end": "376840"
  },
  {
    "text": "reducer gets cow as a key and then",
    "start": "376840",
    "end": "378680"
  },
  {
    "text": "100,000 ones as the value um so the job",
    "start": "378680",
    "end": "382160"
  },
  {
    "text": "of the reducer then is to just sum all",
    "start": "382160",
    "end": "384319"
  },
  {
    "text": "those ones um and output that so the",
    "start": "384319",
    "end": "386680"
  },
  {
    "text": "reducer is going to Output cow um and",
    "start": "386680",
    "end": "388680"
  },
  {
    "text": "then 100,000",
    "start": "388680",
    "end": "391199"
  },
  {
    "text": "um any questions",
    "start": "391199",
    "end": "394120"
  },
  {
    "text": "there okay back to here's our uh Java",
    "start": "394120",
    "end": "398080"
  },
  {
    "text": "main function we want to run this word",
    "start": "398080",
    "end": "399720"
  },
  {
    "text": "count program um that we just wrote um",
    "start": "399720",
    "end": "402360"
  },
  {
    "text": "and so this is uh some simple Hado code",
    "start": "402360",
    "end": "405720"
  },
  {
    "text": "um to do just that",
    "start": "405720",
    "end": "407800"
  },
  {
    "text": "thing um we create a job configuration",
    "start": "407800",
    "end": "411599"
  },
  {
    "text": "object um which uh represents this uh",
    "start": "411599",
    "end": "415800"
  },
  {
    "text": "map Produce job that we want to run um",
    "start": "415800",
    "end": "419199"
  },
  {
    "text": "we",
    "start": "419199",
    "end": "420080"
  },
  {
    "text": "uh tell it so so our outputs are going",
    "start": "420080",
    "end": "422800"
  },
  {
    "text": "to be words mapped to numbers so we tell",
    "start": "422800",
    "end": "425199"
  },
  {
    "text": "it um if you can't read it it's set",
    "start": "425199",
    "end": "427759"
  },
  {
    "text": "output key class um to text. class",
    "start": "427759",
    "end": "430199"
  },
  {
    "text": "that's hadoop's way of saying string um",
    "start": "430199",
    "end": "434039"
  },
  {
    "text": "and uh set output value class to in",
    "start": "434039",
    "end": "437400"
  },
  {
    "text": "writable which is Hop's way of saying a",
    "start": "437400",
    "end": "440000"
  },
  {
    "text": "integer that is easy for it to serialize",
    "start": "440000",
    "end": "442599"
  },
  {
    "text": "um to send like across the network and",
    "start": "442599",
    "end": "444639"
  },
  {
    "text": "stuff like that um then we give it our",
    "start": "444639",
    "end": "447919"
  },
  {
    "text": "mapper class and our reducer class um",
    "start": "447919",
    "end": "450599"
  },
  {
    "text": "those are the classes that we defined",
    "start": "450599",
    "end": "453120"
  },
  {
    "text": "back here",
    "start": "453120",
    "end": "455720"
  },
  {
    "text": "um uh",
    "start": "455720",
    "end": "458440"
  },
  {
    "text": "we have this uh set input format and set",
    "start": "458440",
    "end": "461319"
  },
  {
    "text": "output format business that's something",
    "start": "461319",
    "end": "462879"
  },
  {
    "text": "we'll get to later um uh in general map",
    "start": "462879",
    "end": "466960"
  },
  {
    "text": "produce jobs are reading and writing to",
    "start": "466960",
    "end": "468840"
  },
  {
    "text": "this distributed file system uh called",
    "start": "468840",
    "end": "471240"
  },
  {
    "text": "htfs um and the input and output formats",
    "start": "471240",
    "end": "475000"
  },
  {
    "text": "tell us uh what formats the files will",
    "start": "475000",
    "end": "477199"
  },
  {
    "text": "be in on each DFS will they be uh um",
    "start": "477199",
    "end": "479960"
  },
  {
    "text": "text files will they be binary files um",
    "start": "479960",
    "end": "482240"
  },
  {
    "text": "do they have any like special structure",
    "start": "482240",
    "end": "484240"
  },
  {
    "text": "um that we have to know about um last of",
    "start": "484240",
    "end": "487159"
  },
  {
    "text": "all um the paths of the files and then",
    "start": "487159",
    "end": "489800"
  },
  {
    "text": "we can run our job and uh send it off to",
    "start": "489800",
    "end": "492800"
  },
  {
    "text": "a cluster of uh machines uh to get it",
    "start": "492800",
    "end": "497759"
  },
  {
    "text": "working um",
    "start": "497759",
    "end": "500560"
  },
  {
    "text": "one second okay so let's uh let's talk",
    "start": "500560",
    "end": "503720"
  },
  {
    "text": "about Hadoop in general a little more um",
    "start": "503720",
    "end": "507800"
  },
  {
    "text": "so where does all this data come from",
    "start": "507800",
    "end": "509560"
  },
  {
    "text": "and where does it go Hadoop is basic the",
    "start": "509560",
    "end": "512360"
  },
  {
    "text": "core components of Hadoop are these two",
    "start": "512360",
    "end": "514320"
  },
  {
    "text": "things um hdfs and map ruce this is",
    "start": "514320",
    "end": "517599"
  },
  {
    "text": "actually changing recently with yarn so",
    "start": "517599",
    "end": "519440"
  },
  {
    "text": "if anyone's curious about that I can",
    "start": "519440",
    "end": "520800"
  },
  {
    "text": "tell you about that um but this is what",
    "start": "520800",
    "end": "524039"
  },
  {
    "text": "you need to know for now um so hdfs the",
    "start": "524039",
    "end": "528760"
  },
  {
    "text": "Hadoop distributed file system is this",
    "start": "528760",
    "end": "531279"
  },
  {
    "text": "file system uh that runs on a cluster",
    "start": "531279",
    "end": "534160"
  },
  {
    "text": "and stores all of its data um across",
    "start": "534160",
    "end": "536399"
  },
  {
    "text": "different nodes um across different",
    "start": "536399",
    "end": "538800"
  },
  {
    "text": "commodity machines Mach um it replicates",
    "start": "538800",
    "end": "540800"
  },
  {
    "text": "data so you expect that you know your",
    "start": "540800",
    "end": "542920"
  },
  {
    "text": "machines might die on you um and luckily",
    "start": "542920",
    "end": "546000"
  },
  {
    "text": "there will be your data on other",
    "start": "546000",
    "end": "547079"
  },
  {
    "text": "machines and uh uh you know it'll heal",
    "start": "547079",
    "end": "549959"
  },
  {
    "text": "itself and replicate that again um and",
    "start": "549959",
    "end": "553320"
  },
  {
    "text": "so you use the same machines for hdfs",
    "start": "553320",
    "end": "555000"
  },
  {
    "text": "and not produce um so that the",
    "start": "555000",
    "end": "557160"
  },
  {
    "text": "computation that you're doing on your",
    "start": "557160",
    "end": "558360"
  },
  {
    "text": "data is in the exact same place as your",
    "start": "558360",
    "end": "561079"
  },
  {
    "text": "data um and you know what's great about",
    "start": "561079",
    "end": "563120"
  },
  {
    "text": "hdfs is you can it scales linear",
    "start": "563120",
    "end": "565920"
  },
  {
    "text": "linearly with a number of machines so if",
    "start": "565920",
    "end": "567600"
  },
  {
    "text": "you have like a 4,000 node cluster you",
    "start": "567600",
    "end": "569920"
  },
  {
    "text": "can scale you can yeah scale to you know",
    "start": "569920",
    "end": "572800"
  },
  {
    "text": "hundreds of pedabytes",
    "start": "572800",
    "end": "574880"
  },
  {
    "text": "um which is a lot of",
    "start": "574880",
    "end": "578560"
  },
  {
    "text": "bytes um any questions about had dup",
    "start": "579560",
    "end": "584640"
  },
  {
    "text": "hdfs",
    "start": "584640",
    "end": "586240"
  },
  {
    "text": "okay um so here is how map reduce Works",
    "start": "586240",
    "end": "589959"
  },
  {
    "text": "uh under the covers um",
    "start": "589959",
    "end": "593040"
  },
  {
    "text": "so sort of a high level diagram um in",
    "start": "593040",
    "end": "597000"
  },
  {
    "text": "terms of how the system uh Works itself",
    "start": "597000",
    "end": "600640"
  },
  {
    "text": "there's this uh Master process called",
    "start": "600640",
    "end": "603240"
  },
  {
    "text": "the uh the job tracker and the job",
    "start": "603240",
    "end": "605480"
  },
  {
    "text": "tracker is what you tell to run jobs for",
    "start": "605480",
    "end": "607440"
  },
  {
    "text": "you um it's in charge of pretty much",
    "start": "607440",
    "end": "609079"
  },
  {
    "text": "everything uh that goes on um it is a",
    "start": "609079",
    "end": "611680"
  },
  {
    "text": "single point of failure so if it dies um",
    "start": "611680",
    "end": "614079"
  },
  {
    "text": "you will have to manually restart it um",
    "start": "614079",
    "end": "615680"
  },
  {
    "text": "to get your map R jobs working again um",
    "start": "615680",
    "end": "618120"
  },
  {
    "text": "and that'll run on one machine in your",
    "start": "618120",
    "end": "619600"
  },
  {
    "text": "cluster um and on all the other machines",
    "start": "619600",
    "end": "622320"
  },
  {
    "text": "uh you run these processes called test",
    "start": "622320",
    "end": "623920"
  },
  {
    "text": "trackers um and a test tracker's job is",
    "start": "623920",
    "end": "626519"
  },
  {
    "text": "basically to um hear from the job",
    "start": "626519",
    "end": "629000"
  },
  {
    "text": "tracker that there's some maps reduces",
    "start": "629000",
    "end": "631320"
  },
  {
    "text": "that it needs to run um and then run",
    "start": "631320",
    "end": "633920"
  },
  {
    "text": "those um so on everything that we're",
    "start": "633920",
    "end": "638079"
  },
  {
    "text": "seeing in this diagram let's imagine",
    "start": "638079",
    "end": "639639"
  },
  {
    "text": "that each of those little boxes is a uh",
    "start": "639639",
    "end": "641600"
  },
  {
    "text": "is a different computer um there's a",
    "start": "641600",
    "end": "644720"
  },
  {
    "text": "task tracker running on that computer",
    "start": "644720",
    "end": "646519"
  },
  {
    "text": "that is uh running these",
    "start": "646519",
    "end": "649279"
  },
  {
    "text": "processes um so when we uh so we get our",
    "start": "649279",
    "end": "654600"
  },
  {
    "text": "you know enormous Corpus as input and",
    "start": "654600",
    "end": "656600"
  },
  {
    "text": "let's imagine for the sake of Simplicity",
    "start": "656600",
    "end": "658440"
  },
  {
    "text": "that it's one huge file um and each uh",
    "start": "658440",
    "end": "661120"
  },
  {
    "text": "each line in that file is a document um",
    "start": "661120",
    "end": "664959"
  },
  {
    "text": "so uh map ruce will and Hadoop will um",
    "start": "664959",
    "end": "670120"
  },
  {
    "text": "for us it will split up this file um",
    "start": "670120",
    "end": "672600"
  },
  {
    "text": "into different uh partitions um so you",
    "start": "672600",
    "end": "675680"
  },
  {
    "text": "know if we have 100,000 lines and 20",
    "start": "675680",
    "end": "678120"
  },
  {
    "text": "mappers it'll send however many mappers",
    "start": "678120",
    "end": "680880"
  },
  {
    "text": "lines per mapper that is um to each",
    "start": "680880",
    "end": "684160"
  },
  {
    "text": "one um so uh it reads all the the those",
    "start": "684160",
    "end": "688360"
  },
  {
    "text": "inputs um and sends the relevant data to",
    "start": "688360",
    "end": "690480"
  },
  {
    "text": "each mapper",
    "start": "690480",
    "end": "692920"
  },
  {
    "text": "um for each line the map function that",
    "start": "692920",
    "end": "695720"
  },
  {
    "text": "we talked about earlier like that uh",
    "start": "695720",
    "end": "697519"
  },
  {
    "text": "that word count um uh is called on that",
    "start": "697519",
    "end": "700680"
  },
  {
    "text": "line um and that me function produces",
    "start": "700680",
    "end": "705279"
  },
  {
    "text": "some number of uh output key values and",
    "start": "705279",
    "end": "708000"
  },
  {
    "text": "those were the uh the ones the words",
    "start": "708000",
    "end": "710560"
  },
  {
    "text": "mapped to the ones that we talked about",
    "start": "710560",
    "end": "712959"
  },
  {
    "text": "um so then we have the magic that I've",
    "start": "712959",
    "end": "715639"
  },
  {
    "text": "been alluding to um which is the shuffle",
    "start": "715639",
    "end": "718440"
  },
  {
    "text": "phase um so the maps are all done um the",
    "start": "718440",
    "end": "722920"
  },
  {
    "text": "job tracker tells the task trackers to",
    "start": "722920",
    "end": "724519"
  },
  {
    "text": "start a bunch of reducers on other",
    "start": "724519",
    "end": "726800"
  },
  {
    "text": "machines um and in addition to starting",
    "start": "726800",
    "end": "729680"
  },
  {
    "text": "them it it tells them okay so these are",
    "start": "729680",
    "end": "731399"
  },
  {
    "text": "the mappers that run and you know they",
    "start": "731399",
    "end": "733519"
  },
  {
    "text": "have data um uh that you might want so a",
    "start": "733519",
    "end": "739120"
  },
  {
    "text": "reducer let's say that top reducer is in",
    "start": "739120",
    "end": "742920"
  },
  {
    "text": "charge of um all the uh keys from cow to",
    "start": "742920",
    "end": "747480"
  },
  {
    "text": "milk so that producer will go out to",
    "start": "747480",
    "end": "750839"
  },
  {
    "text": "every mapper that outputed a cow key and",
    "start": "750839",
    "end": "755279"
  },
  {
    "text": "ask uh ask it whether it has um any ask",
    "start": "755279",
    "end": "759040"
  },
  {
    "text": "it for all its cow to one key value",
    "start": "759040",
    "end": "762519"
  },
  {
    "text": "mappings um so they they all get from",
    "start": "762519",
    "end": "764920"
  },
  {
    "text": "multiple mappers they all get sent over",
    "start": "764920",
    "end": "766560"
  },
  {
    "text": "to that reducer",
    "start": "766560",
    "end": "769079"
  },
  {
    "text": "um and uh the reducer is then able to um",
    "start": "769079",
    "end": "773160"
  },
  {
    "text": "merge those together merge you know cow",
    "start": "773160",
    "end": "775600"
  },
  {
    "text": "comma 1 C comma 1 on that machine with C",
    "start": "775600",
    "end": "778720"
  },
  {
    "text": "comma 1 CC one on another uh another",
    "start": "778720",
    "end": "781399"
  },
  {
    "text": "machine um then it supplies the reduced",
    "start": "781399",
    "end": "784240"
  },
  {
    "text": "function uh that we've defined um with",
    "start": "784240",
    "end": "786839"
  },
  {
    "text": "cow maap to like one a thousand times or",
    "start": "786839",
    "end": "789360"
  },
  {
    "text": "if we did it your Better Way cow mapped",
    "start": "789360",
    "end": "791839"
  },
  {
    "text": "to you know one or five or whatever it",
    "start": "791839",
    "end": "794560"
  },
  {
    "text": "is um the reduced function runs and then",
    "start": "794560",
    "end": "798880"
  },
  {
    "text": "Hadoop will uh take care of writing the",
    "start": "798880",
    "end": "801480"
  },
  {
    "text": "output of that back to hdfs uh wherever",
    "start": "801480",
    "end": "804480"
  },
  {
    "text": "you tell it to let's see what okay so",
    "start": "804480",
    "end": "807720"
  },
  {
    "text": "the last thing that we didn't cover um",
    "start": "807720",
    "end": "809800"
  },
  {
    "text": "is the real reason we need map ruce in",
    "start": "809800",
    "end": "811399"
  },
  {
    "text": "the first place um and this is more",
    "start": "811399",
    "end": "812800"
  },
  {
    "text": "another coverage stuff um what happens",
    "start": "812800",
    "end": "816560"
  },
  {
    "text": "if a task fails um while you're trying",
    "start": "816560",
    "end": "820120"
  },
  {
    "text": "to uh run your program like one of your",
    "start": "820120",
    "end": "822399"
  },
  {
    "text": "mappers dies um so you know in a naive",
    "start": "822399",
    "end": "825720"
  },
  {
    "text": "implementation your whole job would be",
    "start": "825720",
    "end": "827560"
  },
  {
    "text": "destroyed and you would need to um just",
    "start": "827560",
    "end": "829560"
  },
  {
    "text": "start over again but what map produce",
    "start": "829560",
    "end": "831839"
  },
  {
    "text": "does nicely for you is um it will rerun",
    "start": "831839",
    "end": "835880"
  },
  {
    "text": "that task for you so you don't have to",
    "start": "835880",
    "end": "837360"
  },
  {
    "text": "recompute all the data just whatever",
    "start": "837360",
    "end": "839480"
  },
  {
    "text": "amount of data was assigned to that",
    "start": "839480",
    "end": "840920"
  },
  {
    "text": "particular task um uh needs to be",
    "start": "840920",
    "end": "845920"
  },
  {
    "text": "redone um okay so are there any",
    "start": "846040",
    "end": "848720"
  },
  {
    "text": "questions about that I'm going to go",
    "start": "848720",
    "end": "850120"
  },
  {
    "text": "into uh one more",
    "start": "850120",
    "end": "853920"
  },
  {
    "text": "example okay cool um so another",
    "start": "853920",
    "end": "857160"
  },
  {
    "text": "canonical map reduce example is how is a",
    "start": "857160",
    "end": "860600"
  },
  {
    "text": "a program to calculate pi",
    "start": "860600",
    "end": "864360"
  },
  {
    "text": "um",
    "start": "864360",
    "end": "865920"
  },
  {
    "text": "so uh if you ever heard of the uh the",
    "start": "865920",
    "end": "868600"
  },
  {
    "text": "mon",
    "start": "868600",
    "end": "869639"
  },
  {
    "text": "method of calculating Pi basically what",
    "start": "869639",
    "end": "871600"
  },
  {
    "text": "you do is you imagine you have this I",
    "start": "871600",
    "end": "873880"
  },
  {
    "text": "know this was more of a rectangle but uh",
    "start": "873880",
    "end": "875959"
  },
  {
    "text": "you imagine you have this square and a",
    "start": "875959",
    "end": "878360"
  },
  {
    "text": "circle inside of it um and you have",
    "start": "878360",
    "end": "880480"
  },
  {
    "text": "millions and millions of darts um and",
    "start": "880480",
    "end": "883079"
  },
  {
    "text": "you keep throwing darts at that uh",
    "start": "883079",
    "end": "885240"
  },
  {
    "text": "dartboard so they'll land uniformly",
    "start": "885240",
    "end": "887480"
  },
  {
    "text": "somewhere in the uh in the Square um",
    "start": "887480",
    "end": "890399"
  },
  {
    "text": "doing that you can get a sense for um",
    "start": "890399",
    "end": "893160"
  },
  {
    "text": "for the area of that",
    "start": "893160",
    "end": "894839"
  },
  {
    "text": "Circle uh as it uh as it pertains to the",
    "start": "894839",
    "end": "899399"
  },
  {
    "text": "uh the square surrounding it um so you",
    "start": "899399",
    "end": "902759"
  },
  {
    "text": "know you you'll have let's say um out of",
    "start": "902759",
    "end": "906040"
  },
  {
    "text": "your 10,000 darts I'm not sure what pi",
    "start": "906040",
    "end": "909240"
  },
  {
    "text": "ided by four is but you'll have some",
    "start": "909240",
    "end": "911040"
  },
  {
    "text": "proportion of them that land inside the",
    "start": "911040",
    "end": "912480"
  },
  {
    "text": "circle I mean it's very it's very easy",
    "start": "912480",
    "end": "914199"
  },
  {
    "text": "to calculate um when you pick two random",
    "start": "914199",
    "end": "916480"
  },
  {
    "text": "numbers if that is close to the center",
    "start": "916480",
    "end": "918040"
  },
  {
    "text": "of a circle or not um and you'll have",
    "start": "918040",
    "end": "921279"
  },
  {
    "text": "some that lie outside the circle so",
    "start": "921279",
    "end": "923399"
  },
  {
    "text": "using you know the basic uh formula um",
    "start": "923399",
    "end": "926959"
  },
  {
    "text": "area equals pi r s",
    "start": "926959",
    "end": "929519"
  },
  {
    "text": "um you can look at the ratio uh between",
    "start": "929519",
    "end": "932639"
  },
  {
    "text": "the area of the square and the area of",
    "start": "932639",
    "end": "935120"
  },
  {
    "text": "the circle and get a pretty good",
    "start": "935120",
    "end": "937199"
  },
  {
    "text": "estimate for pi um so how would we do",
    "start": "937199",
    "end": "941000"
  },
  {
    "text": "this how would we make this better in",
    "start": "941000",
    "end": "943800"
  },
  {
    "text": "reproduce um would anybody be interested",
    "start": "943800",
    "end": "946680"
  },
  {
    "text": "in taking a guess what that M program",
    "start": "946680",
    "end": "950560"
  },
  {
    "text": "would look",
    "start": "950560",
    "end": "951639"
  },
  {
    "text": "like okay I'll put no one on the spot",
    "start": "951639",
    "end": "954399"
  },
  {
    "text": "cool so uh in in this case uh the way",
    "start": "954399",
    "end": "957279"
  },
  {
    "text": "the way we're doing it this is",
    "start": "957279",
    "end": "958480"
  },
  {
    "text": "functionally equivalent to the way you",
    "start": "958480",
    "end": "960160"
  },
  {
    "text": "explained it yours might actually be",
    "start": "960160",
    "end": "961399"
  },
  {
    "text": "even better um but uh we're going to uh",
    "start": "961399",
    "end": "965720"
  },
  {
    "text": "predefine for for each mapper the uh",
    "start": "965720",
    "end": "968319"
  },
  {
    "text": "number of darts is going to throw at",
    "start": "968319",
    "end": "969639"
  },
  {
    "text": "that board um and then let's say we have",
    "start": "969639",
    "end": "972040"
  },
  {
    "text": "like 2,000 mappers uh and we want to PR",
    "start": "972040",
    "end": "976000"
  },
  {
    "text": "you know Define the number of uh of",
    "start": "976000",
    "end": "977839"
  },
  {
    "text": "darts as 100 um we send uh uh we we",
    "start": "977839",
    "end": "982319"
  },
  {
    "text": "configure um 100 as this uh this uh numb",
    "start": "982319",
    "end": "987120"
  },
  {
    "text": "to run configuration parameter um and",
    "start": "987120",
    "end": "989160"
  },
  {
    "text": "that'll get sent over to our map Ru jobs",
    "start": "989160",
    "end": "992000"
  },
  {
    "text": "um so the mapper looks again pretty",
    "start": "992000",
    "end": "996000"
  },
  {
    "text": "simple uh what we do is for uh the",
    "start": "996000",
    "end": "1000079"
  },
  {
    "text": "number of darts that we want to throw uh",
    "start": "1000079",
    "end": "1002000"
  },
  {
    "text": "we pick a random",
    "start": "1002000",
    "end": "1003440"
  },
  {
    "text": "number um we figure out whether um it is",
    "start": "1003440",
    "end": "1008120"
  },
  {
    "text": "inside the circle um and if it is we",
    "start": "1008120",
    "end": "1011639"
  },
  {
    "text": "increment this uh number num inside um",
    "start": "1011639",
    "end": "1015040"
  },
  {
    "text": "in this case uh each mapper only outputs",
    "start": "1015040",
    "end": "1017279"
  },
  {
    "text": "a single",
    "start": "1017279",
    "end": "1019000"
  },
  {
    "text": "a single key value pair um and that's",
    "start": "1019000",
    "end": "1021959"
  },
  {
    "text": "because you know there's no reason to do",
    "start": "1021959",
    "end": "1023639"
  },
  {
    "text": "more we uh there's no reason to do one",
    "start": "1023639",
    "end": "1026360"
  },
  {
    "text": "for each start we can just sum all of",
    "start": "1026360",
    "end": "1027918"
  },
  {
    "text": "them to give to the",
    "start": "1027919",
    "end": "1030199"
  },
  {
    "text": "reducer",
    "start": "1030199",
    "end": "1032360"
  },
  {
    "text": "um whoa this is really terrible at this",
    "start": "1032360",
    "end": "1037959"
  },
  {
    "text": "uh yeah we're back here this is again so",
    "start": "1037959",
    "end": "1040000"
  },
  {
    "text": "we just want to go down",
    "start": "1040000",
    "end": "1043959"
  },
  {
    "text": "yeah scroll",
    "start": "1046559",
    "end": "1050559"
  },
  {
    "text": "oh I see we touched that okay screen",
    "start": "1050919",
    "end": "1054840"
  },
  {
    "text": "um where' it go okay wrong",
    "start": "1054840",
    "end": "1059880"
  },
  {
    "text": "slide okay so here is our reducer um and",
    "start": "1063480",
    "end": "1066120"
  },
  {
    "text": "for this uh for this P Monte Carlo",
    "start": "1066120",
    "end": "1068240"
  },
  {
    "text": "simulation um we only have one reducer",
    "start": "1068240",
    "end": "1070640"
  },
  {
    "text": "so every mapper to achieve this every",
    "start": "1070640",
    "end": "1072679"
  },
  {
    "text": "mapper outputs uh the same key um but",
    "start": "1072679",
    "end": "1075440"
  },
  {
    "text": "there may be different values for the",
    "start": "1075440",
    "end": "1076919"
  },
  {
    "text": "different number of darts that hit",
    "start": "1076919",
    "end": "1078080"
  },
  {
    "text": "inside um so the reducer then uh gets",
    "start": "1078080",
    "end": "1082080"
  },
  {
    "text": "all the different values the number of",
    "start": "1082080",
    "end": "1083440"
  },
  {
    "text": "darts that landed inside the circle from",
    "start": "1083440",
    "end": "1085400"
  },
  {
    "text": "uh from the mapper um it uh sums all of",
    "start": "1085400",
    "end": "1089120"
  },
  {
    "text": "those um and divides by the total number",
    "start": "1089120",
    "end": "1091679"
  },
  {
    "text": "of darts that were thrown um and then it",
    "start": "1091679",
    "end": "1094200"
  },
  {
    "text": "can easily estimate pi as four times uh",
    "start": "1094200",
    "end": "1097679"
  },
  {
    "text": "that",
    "start": "1097679",
    "end": "1098480"
  },
  {
    "text": "ratio",
    "start": "1098480",
    "end": "1100240"
  },
  {
    "text": "um let's see uh and then it sends a",
    "start": "1100240",
    "end": "1104559"
  },
  {
    "text": "single output which is its estimate for",
    "start": "1104559",
    "end": "1106520"
  },
  {
    "text": "pi um uh out to uh be written to hdfs um",
    "start": "1106520",
    "end": "1111840"
  },
  {
    "text": "does anybody have any questions about",
    "start": "1111840",
    "end": "1114080"
  },
  {
    "text": "that so uh this is this is more of a",
    "start": "1114080",
    "end": "1117600"
  },
  {
    "text": "best practice than how uh how map",
    "start": "1117600",
    "end": "1119400"
  },
  {
    "text": "produce Works um this is the distributed",
    "start": "1119400",
    "end": "1122360"
  },
  {
    "text": "cache um so it's very common that in",
    "start": "1122360",
    "end": "1125559"
  },
  {
    "text": "addition to whatever map produce",
    "start": "1125559",
    "end": "1127120"
  },
  {
    "text": "computation that you want to be doing um",
    "start": "1127120",
    "end": "1129080"
  },
  {
    "text": "you'll have some auxiliary files that",
    "start": "1129080",
    "end": "1131360"
  },
  {
    "text": "need to be uh used like for example if",
    "start": "1131360",
    "end": "1133840"
  },
  {
    "text": "you are actually doing an inverted",
    "start": "1133840",
    "end": "1135400"
  },
  {
    "text": "internet index of the internet um uh",
    "start": "1135400",
    "end": "1139000"
  },
  {
    "text": "you'd probably want a list of uh basic",
    "start": "1139000",
    "end": "1141200"
  },
  {
    "text": "words like and the that you don't uh you",
    "start": "1141200",
    "end": "1144240"
  },
  {
    "text": "aren't actually going to include in your",
    "start": "1144240",
    "end": "1145520"
  },
  {
    "text": "index um uh this is used for uh for",
    "start": "1145520",
    "end": "1148919"
  },
  {
    "text": "joins which we can talk about later um",
    "start": "1148919",
    "end": "1151679"
  },
  {
    "text": "so map produce allows you in your job",
    "start": "1151679",
    "end": "1153559"
  },
  {
    "text": "setup code to um add these uh these",
    "start": "1153559",
    "end": "1157400"
  },
  {
    "text": "files as a cache uh to the cache um and",
    "start": "1157400",
    "end": "1159760"
  },
  {
    "text": "then the framework will here I'm going",
    "start": "1159760",
    "end": "1162640"
  },
  {
    "text": "to zoom",
    "start": "1162640",
    "end": "1163799"
  },
  {
    "text": "in",
    "start": "1163799",
    "end": "1166760"
  },
  {
    "text": "uh will uh take care",
    "start": "1166760",
    "end": "1171039"
  },
  {
    "text": "of uh Distributing those files to",
    "start": "1171039",
    "end": "1174360"
  },
  {
    "text": "computers that your mappers are on so",
    "start": "1174360",
    "end": "1176240"
  },
  {
    "text": "they're able to uh use them when you",
    "start": "1176240",
    "end": "1178240"
  },
  {
    "text": "need them uh this is also how it uh",
    "start": "1178240",
    "end": "1180280"
  },
  {
    "text": "sends out your mapper jar to all the",
    "start": "1180280",
    "end": "1183320"
  },
  {
    "text": "files and uh you can send additional",
    "start": "1183320",
    "end": "1185280"
  },
  {
    "text": "jars that uh you might need to",
    "start": "1185280",
    "end": "1187880"
  },
  {
    "text": "use um any questions about",
    "start": "1187880",
    "end": "1191360"
  },
  {
    "text": "that cool um so",
    "start": "1191360",
    "end": "1197320"
  },
  {
    "text": "um so what's so great about map ruce um",
    "start": "1201200",
    "end": "1204039"
  },
  {
    "text": "what's so great is that it scales",
    "start": "1204039",
    "end": "1205120"
  },
  {
    "text": "linearly uh with either the size of the",
    "start": "1205120",
    "end": "1207400"
  },
  {
    "text": "data or um the complexity of your",
    "start": "1207400",
    "end": "1210559"
  },
  {
    "text": "analysis if you use the right algorithms",
    "start": "1210559",
    "end": "1213000"
  },
  {
    "text": "um so it's great for both doing",
    "start": "1213000",
    "end": "1215520"
  },
  {
    "text": "um uh data parallel type algorithms like",
    "start": "1215520",
    "end": "1218640"
  },
  {
    "text": "the word count that we talked about um",
    "start": "1218640",
    "end": "1220480"
  },
  {
    "text": "where you have tons and tons of data",
    "start": "1220480",
    "end": "1221919"
  },
  {
    "text": "let's say um you know you have uh logs",
    "start": "1221919",
    "end": "1225640"
  },
  {
    "text": "for your website um you know terabytes",
    "start": "1225640",
    "end": "1227760"
  },
  {
    "text": "and terabytes and want to look for you",
    "start": "1227760",
    "end": "1230400"
  },
  {
    "text": "know see if a certain word appears in",
    "start": "1230400",
    "end": "1233159"
  },
  {
    "text": "them Hado is great for that um it's also",
    "start": "1233159",
    "end": "1235600"
  },
  {
    "text": "great for uh you know these uh types of",
    "start": "1235600",
    "end": "1239080"
  },
  {
    "text": "analytic tasks like the Monte Carlo",
    "start": "1239080",
    "end": "1240880"
  },
  {
    "text": "simulation uh to calculate pi that we",
    "start": "1240880",
    "end": "1243120"
  },
  {
    "text": "talked about um uh as well as all sorts",
    "start": "1243120",
    "end": "1247120"
  },
  {
    "text": "of machine learning um and uh so yeah",
    "start": "1247120",
    "end": "1251240"
  },
  {
    "text": "and so Hado is great for both of these",
    "start": "1251240",
    "end": "1253000"
  },
  {
    "text": "applications",
    "start": "1253000",
    "end": "1254960"
  },
  {
    "text": "um here are some other things that it's",
    "start": "1254960",
    "end": "1257240"
  },
  {
    "text": "good for um GP through enormous data",
    "start": "1257240",
    "end": "1259559"
  },
  {
    "text": "sets uh analyzing your logs um",
    "start": "1259559",
    "end": "1263159"
  },
  {
    "text": "calculating statistics for enormous data",
    "start": "1263159",
    "end": "1264919"
  },
  {
    "text": "sets um running very large uh",
    "start": "1264919",
    "end": "1267760"
  },
  {
    "text": "simulations um doing uh extract",
    "start": "1267760",
    "end": "1270320"
  },
  {
    "text": "transform load uh types of things where",
    "start": "1270320",
    "end": "1273520"
  },
  {
    "text": "um you want to format uh data for input",
    "start": "1273520",
    "end": "1278200"
  },
  {
    "text": "to a database or take it out of a",
    "start": "1278200",
    "end": "1279760"
  },
  {
    "text": "database put it into another one um",
    "start": "1279760",
    "end": "1282880"
  },
  {
    "text": "great for machine learning great",
    "start": "1282880",
    "end": "1284360"
  },
  {
    "text": "obviously for building inverted indexes",
    "start": "1284360",
    "end": "1287200"
  },
  {
    "text": "um for sorting and much much more um so",
    "start": "1287200",
    "end": "1291559"
  },
  {
    "text": "what is me produce not good for um what",
    "start": "1291559",
    "end": "1295679"
  },
  {
    "text": "it's pretty terrible at is doing things",
    "start": "1295679",
    "end": "1297960"
  },
  {
    "text": "at real low",
    "start": "1297960",
    "end": "1299520"
  },
  {
    "text": "latency um so if you have something that",
    "start": "1299520",
    "end": "1302400"
  },
  {
    "text": "needs to be run immediately there's a",
    "start": "1302400",
    "end": "1303840"
  },
  {
    "text": "fair amount of overhead that goes in uh",
    "start": "1303840",
    "end": "1305880"
  },
  {
    "text": "setting up a map ruce job um so it's",
    "start": "1305880",
    "end": "1308240"
  },
  {
    "text": "really meant for batch processing",
    "start": "1308240",
    "end": "1310039"
  },
  {
    "text": "although there are Frameworks that are",
    "start": "1310039",
    "end": "1312400"
  },
  {
    "text": "trying to address this a little bit more",
    "start": "1312400",
    "end": "1314720"
  },
  {
    "text": "um it's terrible for highly sequential",
    "start": "1314720",
    "end": "1317240"
  },
  {
    "text": "algorithms if there's no good way to run",
    "start": "1317240",
    "end": "1318960"
  },
  {
    "text": "it in parallel map produce isn't going",
    "start": "1318960",
    "end": "1320240"
  },
  {
    "text": "to help you at all um and then a more",
    "start": "1320240",
    "end": "1323120"
  },
  {
    "text": "practical thing um that uh you sort of",
    "start": "1323120",
    "end": "1326559"
  },
  {
    "text": "think it would be good for but it's not",
    "start": "1326559",
    "end": "1327880"
  },
  {
    "text": "great for is joins so if you're trying",
    "start": "1327880",
    "end": "1330919"
  },
  {
    "text": "to um uh join some set of data with some",
    "start": "1330919",
    "end": "1334240"
  },
  {
    "text": "other set of data there's no uh really",
    "start": "1334240",
    "end": "1337080"
  },
  {
    "text": "elegant way of Translating that to the",
    "start": "1337080",
    "end": "1338880"
  },
  {
    "text": "map reduce model um if you're trying to",
    "start": "1338880",
    "end": "1341880"
  },
  {
    "text": "uh join a large set of data against a",
    "start": "1341880",
    "end": "1344360"
  },
  {
    "text": "small set of data you can send the small",
    "start": "1344360",
    "end": "1346600"
  },
  {
    "text": "set of data in the distributed cache out",
    "start": "1346600",
    "end": "1348679"
  },
  {
    "text": "to all your nodes um and that works very",
    "start": "1348679",
    "end": "1350480"
  },
  {
    "text": "well um but if you're doing it otherwise",
    "start": "1350480",
    "end": "1352600"
  },
  {
    "text": "you have to do a let's call A reduced",
    "start": "1352600",
    "end": "1354360"
  },
  {
    "text": "side join um and that uh uses a little",
    "start": "1354360",
    "end": "1358320"
  },
  {
    "text": "more IO and everything than uh you",
    "start": "1358320",
    "end": "1361520"
  },
  {
    "text": "really want it to be um I think that is",
    "start": "1361520",
    "end": "1366440"
  },
  {
    "text": "all that I",
    "start": "1366440",
    "end": "1368360"
  },
  {
    "text": "have all right uh thanks a lot everybody",
    "start": "1368360",
    "end": "1371600"
  },
  {
    "text": "for coming really appreciate it um and",
    "start": "1371600",
    "end": "1374640"
  },
  {
    "text": "yeah please talk to me afterwards",
    "start": "1374640",
    "end": "1378360"
  },
  {
    "text": "[Music]",
    "start": "1381190",
    "end": "1388799"
  }
]