[
  {
    "text": "[Music]",
    "start": "1330",
    "end": "4470"
  },
  {
    "text": "so let's take up uh one more topic and",
    "start": "8639",
    "end": "11639"
  },
  {
    "text": "yeah this will be the last topic for the",
    "start": "11639",
    "end": "12880"
  },
  {
    "text": "day I think in your curriculum if you're",
    "start": "12880",
    "end": "14559"
  },
  {
    "text": "paying attention to it uh you'll note",
    "start": "14559",
    "end": "16600"
  },
  {
    "text": "that our labs are different I did want",
    "start": "16600",
    "end": "18960"
  },
  {
    "text": "to make sure I pointed you at the lab",
    "start": "18960",
    "end": "20600"
  },
  {
    "text": "download if you're looking for extra",
    "start": "20600",
    "end": "22119"
  },
  {
    "text": "work to",
    "start": "22119",
    "end": "23199"
  },
  {
    "text": "do which I know you all are going back",
    "start": "23199",
    "end": "25320"
  },
  {
    "text": "to your hotel room and writing more",
    "start": "25320",
    "end": "27160"
  },
  {
    "text": "python code here",
    "start": "27160",
    "end": "30840"
  },
  {
    "text": "yeah um at simonf franklin.com python",
    "start": "34120",
    "end": "36160"
  },
  {
    "text": "labs. zip um there are files that",
    "start": "36160",
    "end": "38680"
  },
  {
    "text": "contain the labs that are in your",
    "start": "38680",
    "end": "40239"
  },
  {
    "text": "curriculum and we're mostly covering the",
    "start": "40239",
    "end": "42239"
  },
  {
    "text": "same topics I'm trying to rewrite the",
    "start": "42239",
    "end": "43920"
  },
  {
    "text": "labs in cohesive fashion so kind of um",
    "start": "43920",
    "end": "46800"
  },
  {
    "text": "tackling the same task and gradually",
    "start": "46800",
    "end": "48360"
  },
  {
    "text": "adding features to it um instead of each",
    "start": "48360",
    "end": "51239"
  },
  {
    "text": "lab being completely independent which",
    "start": "51239",
    "end": "53440"
  },
  {
    "text": "uh fits how I learn better anyways um we",
    "start": "53440",
    "end": "56480"
  },
  {
    "text": "are skipping section 12 which is regular",
    "start": "56480",
    "end": "59640"
  },
  {
    "text": "expr EXs uh my justification for",
    "start": "59640",
    "end": "62239"
  },
  {
    "text": "skipping regular expressions are the",
    "start": "62239",
    "end": "65080"
  },
  {
    "text": "python implementation of regular",
    "start": "65080",
    "end": "66439"
  },
  {
    "text": "expressions are pretty simple but",
    "start": "66439",
    "end": "68000"
  },
  {
    "text": "regular Expressions themselves are",
    "start": "68000",
    "end": "69200"
  },
  {
    "text": "complicated so if you already know",
    "start": "69200",
    "end": "70400"
  },
  {
    "text": "regular Expressions it'll be easy to",
    "start": "70400",
    "end": "72040"
  },
  {
    "text": "pick up the python implementation and if",
    "start": "72040",
    "end": "73759"
  },
  {
    "text": "you don't know regular Expressions we",
    "start": "73759",
    "end": "76320"
  },
  {
    "text": "don't have enough time in the class to",
    "start": "76320",
    "end": "77400"
  },
  {
    "text": "teach you what they are so that you can",
    "start": "77400",
    "end": "79000"
  },
  {
    "text": "then learn to use them but suffice it to",
    "start": "79000",
    "end": "81159"
  },
  {
    "text": "say it's a language with a it's a mini",
    "start": "81159",
    "end": "83320"
  },
  {
    "text": "language with a centax for doing pattern",
    "start": "83320",
    "end": "85040"
  },
  {
    "text": "matching on text in sophisticated",
    "start": "85040",
    "end": "87600"
  },
  {
    "text": "complicated ways um and if you do shelf",
    "start": "87600",
    "end": "89720"
  },
  {
    "text": "script scripting or PE scripting or",
    "start": "89720",
    "end": "90880"
  },
  {
    "text": "something you're probably pretty fluent",
    "start": "90880",
    "end": "92040"
  },
  {
    "text": "in regular Expressions already and",
    "start": "92040",
    "end": "93759"
  },
  {
    "text": "python has a I believe it's PC compliant",
    "start": "93759",
    "end": "97040"
  },
  {
    "text": "um regex Library so it's just like plar",
    "start": "97040",
    "end": "99079"
  },
  {
    "text": "regx is more or less and can do all the",
    "start": "99079",
    "end": "100840"
  },
  {
    "text": "same sort of stuff if not quite as",
    "start": "100840",
    "end": "102399"
  },
  {
    "text": "fluently since it's at library level",
    "start": "102399",
    "end": "104439"
  },
  {
    "text": "instead of syntactic level so skipping",
    "start": "104439",
    "end": "107200"
  },
  {
    "text": "the re section which is section 12",
    "start": "107200",
    "end": "111439"
  },
  {
    "text": "um we'll talk about doc",
    "start": "111439",
    "end": "113880"
  },
  {
    "text": "tests let's talk about doc test next on",
    "start": "113880",
    "end": "118000"
  },
  {
    "text": "the resources page",
    "start": "118000",
    "end": "120520"
  },
  {
    "text": "that I have",
    "start": "120520",
    "end": "122920"
  },
  {
    "text": "up I have a",
    "start": "123759",
    "end": "127160"
  },
  {
    "text": "overview of Doc test it's just a link to",
    "start": "127160",
    "end": "129640"
  },
  {
    "text": "the python standard lib",
    "start": "129640",
    "end": "131520"
  },
  {
    "text": "documentation and it describes doc tests",
    "start": "131520",
    "end": "133840"
  },
  {
    "text": "it's worth reading through to see all",
    "start": "133840",
    "end": "135519"
  },
  {
    "text": "the various complexities of Doc tests",
    "start": "135519",
    "end": "138040"
  },
  {
    "text": "but I can describe them very simply and",
    "start": "138040",
    "end": "139560"
  },
  {
    "text": "run you through some uh examples and",
    "start": "139560",
    "end": "141519"
  },
  {
    "text": "then I'd like you to add some Doc tests",
    "start": "141519",
    "end": "143599"
  },
  {
    "text": "to your classmates's file uh even some",
    "start": "143599",
    "end": "146440"
  },
  {
    "text": "simple ones and be able to run them so",
    "start": "146440",
    "end": "148760"
  },
  {
    "text": "the idea with Doc test are we can",
    "start": "148760",
    "end": "151280"
  },
  {
    "text": "embed sample console",
    "start": "151280",
    "end": "154440"
  },
  {
    "text": "sessions in the doc strings for our",
    "start": "154440",
    "end": "158760"
  },
  {
    "text": "program and its",
    "start": "158760",
    "end": "160920"
  },
  {
    "text": "functions and we can append the required",
    "start": "160920",
    "end": "163680"
  },
  {
    "text": "output from the console",
    "start": "163680",
    "end": "165480"
  },
  {
    "text": "session below the sample console session",
    "start": "165480",
    "end": "168040"
  },
  {
    "text": "and the dock test module will run our",
    "start": "168040",
    "end": "169879"
  },
  {
    "text": "code grab our dock tests look for",
    "start": "169879",
    "end": "172159"
  },
  {
    "text": "anything that's formatted like a console",
    "start": "172159",
    "end": "173680"
  },
  {
    "text": "session and execute it against our code",
    "start": "173680",
    "end": "177200"
  },
  {
    "text": "so this all sounds really complicated",
    "start": "177200",
    "end": "178840"
  },
  {
    "text": "but it's actually super simple and let",
    "start": "178840",
    "end": "180360"
  },
  {
    "text": "me",
    "start": "180360",
    "end": "182480"
  },
  {
    "text": "demonstrate let's write a function that",
    "start": "194799",
    "end": "198560"
  },
  {
    "text": "takes a list",
    "start": "198560",
    "end": "203120"
  },
  {
    "text": "and returns a CSV string with a new line",
    "start": "221159",
    "end": "226040"
  },
  {
    "text": "and you all have just written this line",
    "start": "247000",
    "end": "248640"
  },
  {
    "text": "of code",
    "start": "248640",
    "end": "251560"
  },
  {
    "text": "hopefully so this should look pretty",
    "start": "265160",
    "end": "266919"
  },
  {
    "text": "familiar too so function you pass it any",
    "start": "266919",
    "end": "270520"
  },
  {
    "text": "arbitrary length of sequence it joins by",
    "start": "270520",
    "end": "273960"
  },
  {
    "text": "a comma and pins a new",
    "start": "273960",
    "end": "277560"
  },
  {
    "text": "line",
    "start": "277840",
    "end": "280840"
  },
  {
    "text": "let's find my console here",
    "start": "283560",
    "end": "288560"
  },
  {
    "text": "and hey it works uh we can tell that",
    "start": "315720",
    "end": "317680"
  },
  {
    "text": "there is a new line in the string that's",
    "start": "317680",
    "end": "319720"
  },
  {
    "text": "returned because there's an additional",
    "start": "319720",
    "end": "321639"
  },
  {
    "text": "new line um outputed by the print so",
    "start": "321639",
    "end": "324280"
  },
  {
    "text": "we've got a blank line and how do we",
    "start": "324280",
    "end": "326199"
  },
  {
    "text": "normally tell that our stuff works well",
    "start": "326199",
    "end": "327479"
  },
  {
    "text": "we just run it and if it looks like",
    "start": "327479",
    "end": "328720"
  },
  {
    "text": "we're getting the right output then hey",
    "start": "328720",
    "end": "330280"
  },
  {
    "text": "it must work but we haven't really",
    "start": "330280",
    "end": "332520"
  },
  {
    "text": "tested it and if we go in and change we",
    "start": "332520",
    "end": "334479"
  },
  {
    "text": "need to remember to rerun it and look at",
    "start": "334479",
    "end": "335960"
  },
  {
    "text": "the output and hopefully not miss",
    "start": "335960",
    "end": "337120"
  },
  {
    "text": "anything to verify that it still works",
    "start": "337120",
    "end": "339199"
  },
  {
    "text": "so let's put in some tests and let's",
    "start": "339199",
    "end": "341280"
  },
  {
    "text": "make the tests also",
    "start": "341280",
    "end": "343880"
  },
  {
    "text": "be somewhat useful",
    "start": "343880",
    "end": "347600"
  },
  {
    "text": "documentation dock tests start with that",
    "start": "348440",
    "end": "351919"
  },
  {
    "text": "three arrows",
    "start": "351919",
    "end": "354759"
  },
  {
    "text": "thing and they're just getting",
    "start": "354919",
    "end": "358639"
  },
  {
    "text": "that from the standard python console",
    "start": "358639",
    "end": "361039"
  },
  {
    "text": "right you notice there's three arrows",
    "start": "361039",
    "end": "362080"
  },
  {
    "text": "off to the side that's the start of",
    "start": "362080",
    "end": "364199"
  },
  {
    "text": "every",
    "start": "364199",
    "end": "366400"
  },
  {
    "text": "line so it's a console session I'm",
    "start": "378240",
    "end": "381039"
  },
  {
    "text": "calling a function format line and I",
    "start": "381039",
    "end": "385240"
  },
  {
    "text": "expect to get back",
    "start": "385240",
    "end": "388960"
  },
  {
    "text": "ABC SL",
    "start": "396599",
    "end": "399639"
  },
  {
    "text": "in okay now I can run my test in a",
    "start": "401479",
    "end": "404280"
  },
  {
    "text": "couple ways I can import the doc test",
    "start": "404280",
    "end": "406120"
  },
  {
    "text": "module pass the dock test module the",
    "start": "406120",
    "end": "408000"
  },
  {
    "text": "name of the module that I want to test I",
    "start": "408000",
    "end": "411880"
  },
  {
    "text": "could switch my if name equals main here",
    "start": "411880",
    "end": "416080"
  },
  {
    "text": "again to import the doc test module and",
    "start": "416080",
    "end": "418400"
  },
  {
    "text": "run it on myself",
    "start": "418400",
    "end": "420120"
  },
  {
    "text": "but one shortcut frequently used",
    "start": "420120",
    "end": "425080"
  },
  {
    "text": "is to use the dhm switch of the Python",
    "start": "425319",
    "end": "428720"
  },
  {
    "text": "executable - M lets you specify a module",
    "start": "428720",
    "end": "431639"
  },
  {
    "text": "that should be",
    "start": "431639",
    "end": "434120"
  },
  {
    "text": "started so I'm running my python file",
    "start": "439479",
    "end": "442400"
  },
  {
    "text": "but I'm running it with in some way the",
    "start": "442400",
    "end": "445680"
  },
  {
    "text": "dock test module",
    "start": "445680",
    "end": "449120"
  },
  {
    "text": "and the doc test module complains and",
    "start": "449879",
    "end": "451720"
  },
  {
    "text": "says line six of the doc string for",
    "start": "451720",
    "end": "454160"
  },
  {
    "text": "scripting format line has inconsistent",
    "start": "454160",
    "end": "456879"
  },
  {
    "text": "leading white",
    "start": "456879",
    "end": "459560"
  },
  {
    "text": "space and I can see that it does I've",
    "start": "464280",
    "end": "469280"
  },
  {
    "text": "got one space before",
    "start": "469680",
    "end": "474120"
  },
  {
    "text": "okay uh oh line six of the dock string",
    "start": "477199",
    "end": "480919"
  },
  {
    "text": "one two three four",
    "start": "480919",
    "end": "483000"
  },
  {
    "text": "five",
    "start": "483000",
    "end": "486000"
  },
  {
    "text": "six now it doesn't like the inconsistent",
    "start": "494000",
    "end": "496879"
  },
  {
    "text": "leading white space there",
    "start": "496879",
    "end": "501000"
  },
  {
    "text": "there inconsistent leading white space",
    "start": "531399",
    "end": "532800"
  },
  {
    "text": "and it has a single quote what did I",
    "start": "532800",
    "end": "534560"
  },
  {
    "text": "format",
    "start": "534560",
    "end": "536360"
  },
  {
    "text": "wrong let's make",
    "start": "536360",
    "end": "538440"
  },
  {
    "text": "this deliberately wrong to start",
    "start": "538440",
    "end": "541279"
  },
  {
    "text": "with there we go",
    "start": "541279",
    "end": "545160"
  },
  {
    "text": "okay um so back here fixing my",
    "start": "545760",
    "end": "548920"
  },
  {
    "text": "formatting failures I've made it",
    "start": "548920",
    "end": "550399"
  },
  {
    "text": "deliberately wrong I took off the new",
    "start": "550399",
    "end": "552000"
  },
  {
    "text": "line at the end I also took off my",
    "start": "552000",
    "end": "554399"
  },
  {
    "text": "quotes my double quotes for throwing it",
    "start": "554399",
    "end": "556519"
  },
  {
    "text": "off and when I now",
    "start": "556519",
    "end": "559079"
  },
  {
    "text": "run python DM do test on my scripting",
    "start": "559079",
    "end": "562040"
  },
  {
    "text": "file it says failed example you called",
    "start": "562040",
    "end": "565240"
  },
  {
    "text": "format line with ABC as a sequence you",
    "start": "565240",
    "end": "568839"
  },
  {
    "text": "expected to get back a comma B comma C",
    "start": "568839",
    "end": "572839"
  },
  {
    "text": "and instead you got back single quote a",
    "start": "572839",
    "end": "575440"
  },
  {
    "text": "comma B comma c new line ending single",
    "start": "575440",
    "end": "578600"
  },
  {
    "text": "quote well that's actually the",
    "start": "578600",
    "end": "581000"
  },
  {
    "text": "format that I want so I'm going to",
    "start": "581000",
    "end": "583720"
  },
  {
    "text": "adjust my",
    "start": "583720",
    "end": "585320"
  },
  {
    "text": "test to be the proper",
    "start": "585320",
    "end": "589079"
  },
  {
    "text": "format I'm trying to adjust my test to",
    "start": "591320",
    "end": "593640"
  },
  {
    "text": "be the proper",
    "start": "593640",
    "end": "596079"
  },
  {
    "text": "format and it still doesn't like my my",
    "start": "597399",
    "end": "601519"
  },
  {
    "text": "leading new line why",
    "start": "601680",
    "end": "605600"
  },
  {
    "text": "not okay let me read the duck Test",
    "start": "625160",
    "end": "627640"
  },
  {
    "text": "example myself",
    "start": "627640",
    "end": "631240"
  },
  {
    "text": "get rid of all the leading",
    "start": "637200",
    "end": "640560"
  },
  {
    "text": "new line nonsense",
    "start": "640560",
    "end": "645000"
  },
  {
    "text": "that fixed my leading Whit space problem",
    "start": "664720",
    "end": "666760"
  },
  {
    "text": "and uh just noting here uh the doc",
    "start": "666760",
    "end": "669440"
  },
  {
    "text": "string does have to be indented the",
    "start": "669440",
    "end": "670720"
  },
  {
    "text": "function body has to be indented so like",
    "start": "670720",
    "end": "672360"
  },
  {
    "text": "if I unindented the first line of my doc",
    "start": "672360",
    "end": "675200"
  },
  {
    "text": "string this would be a syntax error it",
    "start": "675200",
    "end": "677320"
  },
  {
    "text": "expects an indented",
    "start": "677320",
    "end": "679320"
  },
  {
    "text": "block but once I'm inside of my triply",
    "start": "679320",
    "end": "682000"
  },
  {
    "text": "quoted string I can do whatever",
    "start": "682000",
    "end": "683360"
  },
  {
    "text": "including starting at the beginning of",
    "start": "683360",
    "end": "684360"
  },
  {
    "text": "the line if I want to um which I am",
    "start": "684360",
    "end": "686560"
  },
  {
    "text": "because for some reason my initial",
    "start": "686560",
    "end": "690720"
  },
  {
    "text": "tabs or spaces are throwing it off and",
    "start": "690720",
    "end": "692920"
  },
  {
    "text": "now it",
    "start": "692920",
    "end": "695440"
  },
  {
    "text": "once it's literally putting in the new",
    "start": "695560",
    "end": "700040"
  },
  {
    "text": "line there we go uh as with many Unix",
    "start": "700200",
    "end": "704279"
  },
  {
    "text": "tools silence is golden so the fact that",
    "start": "704279",
    "end": "707120"
  },
  {
    "text": "it just said nothing means that I was",
    "start": "707120",
    "end": "709000"
  },
  {
    "text": "successful but that kind of bugs me so",
    "start": "709000",
    "end": "711839"
  },
  {
    "text": "I'm going to use the dash V switch which",
    "start": "711839",
    "end": "713360"
  },
  {
    "text": "makes it verbose in output and it says",
    "start": "713360",
    "end": "716399"
  },
  {
    "text": "okay I'm trying a test format line",
    "start": "716399",
    "end": "719800"
  },
  {
    "text": "pass at this I'm expecting to get back",
    "start": "719800",
    "end": "723240"
  },
  {
    "text": "ABC sln and what I had to remember to do",
    "start": "723240",
    "end": "726920"
  },
  {
    "text": "is literally put the string slash in",
    "start": "726920",
    "end": "730760"
  },
  {
    "text": "which means I escaped my new line or I",
    "start": "730760",
    "end": "732480"
  },
  {
    "text": "escaped my back slash",
    "start": "732480",
    "end": "734880"
  },
  {
    "text": "twice that's correct one items had no",
    "start": "734880",
    "end": "737760"
  },
  {
    "text": "test what um what had no",
    "start": "737760",
    "end": "740360"
  },
  {
    "text": "test what things can have a doc",
    "start": "740360",
    "end": "743120"
  },
  {
    "text": "test or a doc string rather I've got one",
    "start": "743120",
    "end": "746519"
  },
  {
    "text": "up at the top right your whole file can",
    "start": "746519",
    "end": "748720"
  },
  {
    "text": "have a doc string string as well as each",
    "start": "748720",
    "end": "751480"
  },
  {
    "text": "function and the doc string for the",
    "start": "751480",
    "end": "753839"
  },
  {
    "text": "whole file didn't have a",
    "start": "753839",
    "end": "755920"
  },
  {
    "text": "test one item passed all tests which was",
    "start": "755920",
    "end": "759079"
  },
  {
    "text": "scripting do format line it specifies",
    "start": "759079",
    "end": "760920"
  },
  {
    "text": "the function one test in two items one",
    "start": "760920",
    "end": "763199"
  },
  {
    "text": "pass zero failed test passed lots of",
    "start": "763199",
    "end": "766120"
  },
  {
    "text": "verbos output to tell me it ran all the",
    "start": "766120",
    "end": "768440"
  },
  {
    "text": "test successfully and they all",
    "start": "768440",
    "end": "770800"
  },
  {
    "text": "passed it's extremely common to look at",
    "start": "770800",
    "end": "773160"
  },
  {
    "text": "people's python source",
    "start": "773160",
    "end": "774839"
  },
  {
    "text": "code um and I Wish by the way",
    "start": "774839",
    "end": "780720"
  },
  {
    "text": "that my formatting would work there we",
    "start": "784000",
    "end": "787760"
  },
  {
    "text": "go yay because that looks a lot cleaner",
    "start": "790360",
    "end": "793360"
  },
  {
    "text": "it's extremely common to read people's",
    "start": "793360",
    "end": "794720"
  },
  {
    "text": "python source code and see tests like",
    "start": "794720",
    "end": "796880"
  },
  {
    "text": "this in the documentation because it's",
    "start": "796880",
    "end": "798839"
  },
  {
    "text": "actually helpful to know what the",
    "start": "798839",
    "end": "800839"
  },
  {
    "text": "function does by looking at the sample",
    "start": "800839",
    "end": "802440"
  },
  {
    "text": "output the dock test module adds for you",
    "start": "802440",
    "end": "804839"
  },
  {
    "text": "the ability to make sure that your",
    "start": "804839",
    "end": "806240"
  },
  {
    "text": "documentation stays in sync with your",
    "start": "806240",
    "end": "808800"
  },
  {
    "text": "code",
    "start": "808800",
    "end": "809720"
  },
  {
    "text": "so one killer thing in comments and why",
    "start": "809720",
    "end": "812320"
  },
  {
    "text": "some people don't comment extensively is",
    "start": "812320",
    "end": "814480"
  },
  {
    "text": "comment rot you leave a lengthy comment",
    "start": "814480",
    "end": "816560"
  },
  {
    "text": "describing how your function Works later",
    "start": "816560",
    "end": "818440"
  },
  {
    "text": "on you have to change it under time",
    "start": "818440",
    "end": "819839"
  },
  {
    "text": "pressure and you change the",
    "start": "819839",
    "end": "820880"
  },
  {
    "text": "implementation and maybe the results but",
    "start": "820880",
    "end": "822800"
  },
  {
    "text": "you don't change your comment the only",
    "start": "822800",
    "end": "824639"
  },
  {
    "text": "thing worse than code that isn't",
    "start": "824639",
    "end": "825680"
  },
  {
    "text": "commented is code that is incorrectly",
    "start": "825680",
    "end": "829199"
  },
  {
    "text": "commented doc strings let you at least",
    "start": "829199",
    "end": "832000"
  },
  {
    "text": "run and check and see that your tests",
    "start": "832000",
    "end": "833639"
  },
  {
    "text": "still work and if your tests still work",
    "start": "833639",
    "end": "835320"
  },
  {
    "text": "then probably your documentation is not",
    "start": "835320",
    "end": "836720"
  },
  {
    "text": "too off so you can think about it as",
    "start": "836720",
    "end": "838360"
  },
  {
    "text": "test for your doc mation as much as test",
    "start": "838360",
    "end": "840240"
  },
  {
    "text": "for your",
    "start": "840240",
    "end": "841120"
  },
  {
    "text": "implementation yes it is we are",
    "start": "841120",
    "end": "843639"
  },
  {
    "text": "embedding tests in our comments and",
    "start": "843639",
    "end": "846079"
  },
  {
    "text": "obviously this would get onerous if you",
    "start": "846079",
    "end": "847839"
  },
  {
    "text": "had to do like 10 lines of stuff to set",
    "start": "847839",
    "end": "850120"
  },
  {
    "text": "up your test and then run your test now",
    "start": "850120",
    "end": "852680"
  },
  {
    "text": "your documentation is like really long",
    "start": "852680",
    "end": "854720"
  },
  {
    "text": "longer than is helpful so there's",
    "start": "854720",
    "end": "856800"
  },
  {
    "text": "another library for using um extensive",
    "start": "856800",
    "end": "859320"
  },
  {
    "text": "tests especially ones that require setup",
    "start": "859320",
    "end": "861440"
  },
  {
    "text": "but for short utility functions and",
    "start": "861440",
    "end": "863560"
  },
  {
    "text": "short tests that also serve as",
    "start": "863560",
    "end": "865240"
  },
  {
    "text": "documentation doc test is great",
    "start": "865240",
    "end": "869839"
  },
  {
    "text": "so if you're like me you're probably",
    "start": "870880",
    "end": "872519"
  },
  {
    "text": "going to have all sorts of I don't",
    "start": "872519",
    "end": "873880"
  },
  {
    "text": "recognize your format thing the main",
    "start": "873880",
    "end": "875720"
  },
  {
    "text": "thing I usually do with Doc tests is",
    "start": "875720",
    "end": "878040"
  },
  {
    "text": "forget the leading space and do this and",
    "start": "878040",
    "end": "879800"
  },
  {
    "text": "then it",
    "start": "879800",
    "end": "881120"
  },
  {
    "text": "complains not a valid doc test but I",
    "start": "881120",
    "end": "884560"
  },
  {
    "text": "would like you to add a dock test to",
    "start": "884560",
    "end": "886160"
  },
  {
    "text": "your classmate's",
    "start": "886160",
    "end": "887600"
  },
  {
    "text": "file and have it successfully pass and",
    "start": "887600",
    "end": "891120"
  },
  {
    "text": "it can be something simple like this",
    "start": "891120",
    "end": "892600"
  },
  {
    "text": "it's just a utility line that does",
    "start": "892600",
    "end": "894120"
  },
  {
    "text": "something like output it could be",
    "start": "894120",
    "end": "896360"
  },
  {
    "text": "something more complicated like your CSV",
    "start": "896360",
    "end": "898639"
  },
  {
    "text": "function",
    "start": "898639",
    "end": "899560"
  },
  {
    "text": "that reads from a CSV file and in that",
    "start": "899560",
    "end": "901639"
  },
  {
    "text": "case you might Supply a test CSV file",
    "start": "901639",
    "end": "904279"
  },
  {
    "text": "that does not change with your CSV",
    "start": "904279",
    "end": "907160"
  },
  {
    "text": "function call your CSV function with",
    "start": "907160",
    "end": "909480"
  },
  {
    "text": "your test file name and check and make",
    "start": "909480",
    "end": "912000"
  },
  {
    "text": "sure that the data structure that you",
    "start": "912000",
    "end": "913519"
  },
  {
    "text": "load is the data structure that you",
    "start": "913519",
    "end": "917160"
  },
  {
    "text": "expected so it's also common if you're",
    "start": "917160",
    "end": "919240"
  },
  {
    "text": "running extensive tests to have testing",
    "start": "919240",
    "end": "921959"
  },
  {
    "text": "data that goes along with",
    "start": "921959",
    "end": "923839"
  },
  {
    "text": "it but it's your",
    "start": "923839",
    "end": "926800"
  },
  {
    "text": "choice and to review briefly while",
    "start": "926800",
    "end": "929600"
  },
  {
    "text": "there's other ways of running doc tests",
    "start": "929600",
    "end": "931680"
  },
  {
    "text": "and the python documentation itself",
    "start": "931680",
    "end": "935440"
  },
  {
    "text": "suggests this",
    "start": "935440",
    "end": "937720"
  },
  {
    "text": "method Define a function that Imports",
    "start": "937720",
    "end": "939880"
  },
  {
    "text": "dock tests and call the test mod which",
    "start": "939880",
    "end": "941959"
  },
  {
    "text": "tests the current module and then if",
    "start": "941959",
    "end": "944959"
  },
  {
    "text": "your name equals main call your testing",
    "start": "944959",
    "end": "947639"
  },
  {
    "text": "function I'm happy to just do python DM",
    "start": "947639",
    "end": "951079"
  },
  {
    "text": "doc test and not add any doc test",
    "start": "951079",
    "end": "954000"
  },
  {
    "text": "running stuff to my script um yeah so",
    "start": "954000",
    "end": "956920"
  },
  {
    "text": "I'm done with the official lecture",
    "start": "956920",
    "end": "957880"
  },
  {
    "text": "portion we to like 4:00",
    "start": "957880",
    "end": "959480"
  },
  {
    "text": "but I am here till 5: to hang out if",
    "start": "959480",
    "end": "960920"
  },
  {
    "text": "people are contining to work on Labs um",
    "start": "960920",
    "end": "962920"
  },
  {
    "text": "I'll circulate and you can always kick",
    "start": "962920",
    "end": "964959"
  },
  {
    "text": "me around and say don't bother me and",
    "start": "964959",
    "end": "966319"
  },
  {
    "text": "I'll go read my email or something so",
    "start": "966319",
    "end": "967759"
  },
  {
    "text": "see all right see you tomorrow",
    "start": "967759",
    "end": "969910"
  },
  {
    "text": "[Music]",
    "start": "969910",
    "end": "982009"
  }
]