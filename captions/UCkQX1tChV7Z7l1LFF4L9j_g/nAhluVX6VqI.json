[
  {
    "text": "[Music]",
    "start": "3270",
    "end": "8730"
  },
  {
    "text": "thank you so much um so this is a little bit of a labor of love talk for me um so",
    "start": "13519",
    "end": "20840"
  },
  {
    "text": "um I hope my Indulgence um doesn't put you off too much um so my name is Martin",
    "start": "20840",
    "end": "26720"
  },
  {
    "text": "THS I am first and foremost an observability evangelist my um my approach to Building Systems is",
    "start": "26720",
    "end": "34320"
  },
  {
    "text": "about how do we understand them how do we understand them in production um and I also work for a company called",
    "start": "34320",
    "end": "39520"
  },
  {
    "text": "honeycomb um if you want to you can follow me on Twitter um or LinkedIn or",
    "start": "39520",
    "end": "44559"
  },
  {
    "text": "anything like that it is full of just a load of British snark and observability bits rolled in so you have been",
    "start": "44559",
    "end": "50800"
  },
  {
    "text": "warned um so a couple of years before I worked for honeycomb I was contracted to a",
    "start": "50800",
    "end": "58680"
  },
  {
    "text": "bank and I was brought in to start looking at a brand new system for the",
    "start": "58680",
    "end": "64040"
  },
  {
    "text": "bank core banking systems ledgers all of that kind of stuff writing them from",
    "start": "64040",
    "end": "70640"
  },
  {
    "text": "scratch which is a task should we say um",
    "start": "70640",
    "end": "76200"
  },
  {
    "text": "and we started to understand when we built that when we started building it that the thing that was really really",
    "start": "76200",
    "end": "81759"
  },
  {
    "text": "important to them was about correctness at a system and service level they didn't really",
    "start": "81759",
    "end": "89320"
  },
  {
    "text": "care about code quality they didn't care about database design all they really",
    "start": "89320",
    "end": "94600"
  },
  {
    "text": "cared about was the system was correct and what that came to was us trying to understand that actually the",
    "start": "94600",
    "end": "102640"
  },
  {
    "text": "problem that we were trying to solve was that production returned the right",
    "start": "102640",
    "end": "108240"
  },
  {
    "text": "data and that was a little bit liberating so some people may recognize",
    "start": "108240",
    "end": "115560"
  },
  {
    "text": "this diagram um this was a",
    "start": "115560",
    "end": "120680"
  },
  {
    "text": "2020 um article that monzo bank put out that wasn't the bank I was working with",
    "start": "120680",
    "end": "126360"
  },
  {
    "text": "um and this is a view of their microservices all 1500 of them and when",
    "start": "126360",
    "end": "132800"
  },
  {
    "text": "they put it out it's caused a little controversy um I think there was a lot of developers out in the world that sort",
    "start": "132800",
    "end": "139360"
  },
  {
    "text": "of looked at this with fear of I struggle to keep the class that I'm developing in my head never mind all",
    "start": "139360",
    "end": "145800"
  },
  {
    "text": "1500 microservices because I've been in this industry for a while and that's the",
    "start": "145800",
    "end": "151599"
  },
  {
    "text": "system I started working on it it had a box and it had a",
    "start": "151599",
    "end": "156640"
  },
  {
    "text": "cylinder um there was there was a person they they they hit my website and that",
    "start": "156640",
    "end": "162760"
  },
  {
    "text": "website loaded things from a database and put stuff back in a database which was incredibly easy to reason",
    "start": "162760",
    "end": "169920"
  },
  {
    "text": "about and that was really hard for me to get my head around when we start",
    "start": "169920",
    "end": "175080"
  },
  {
    "text": "thinking about large microservices systems where we've got lots and lots of independent systems that do independent",
    "start": "175080",
    "end": "181599"
  },
  {
    "text": "little things and trying to equate them to a time when I could write a test",
    "start": "181599",
    "end": "187440"
  },
  {
    "text": "against my Productions at my um blue box in this scenario where it would test a",
    "start": "187440",
    "end": "192799"
  },
  {
    "text": "couple of classes and I would feel a lot of confidence that my system's going to work because I could run the entire",
    "start": "192799",
    "end": "198080"
  },
  {
    "text": "thing locally can you imagine trying to run that on your machine I mean I'm pretty sure that an M3 Max Pro thing",
    "start": "198080",
    "end": "205040"
  },
  {
    "text": "won't do it either you just can't so the issue is that now our",
    "start": "205040",
    "end": "212159"
  },
  {
    "text": "systems look a little bit more like this we have some Services users may hit a",
    "start": "212159",
    "end": "218400"
  },
  {
    "text": "multiple Services you may have an API Gateway in there this is not meant to be a system that I would Design This is",
    "start": "218400",
    "end": "223720"
  },
  {
    "text": "meant to be a little bit of a pattern that we're going to talk about today so we've got independent systems",
    "start": "223720",
    "end": "230480"
  },
  {
    "text": "some of them are publicly accessible some of them aren't we've got some kind of message bus that allows us to be able",
    "start": "230480",
    "end": "236560"
  },
  {
    "text": "to send things between different systems a synchronously so we've got synchronous",
    "start": "236560",
    "end": "241640"
  },
  {
    "text": "communication asynchronous communication all those kind of things in",
    "start": "241640",
    "end": "247720"
  },
  {
    "text": "there so a little bit of a poll how many people in the room identify as a application developer engineer somebody",
    "start": "247720",
    "end": "254879"
  },
  {
    "text": "who writes code that their customers would use and interact with as opposed to maybe a devops engineer or an",
    "start": "254879",
    "end": "264000"
  },
  {
    "text": "Sr okay now please don't leave the room but this is a talk about testing",
    "start": "264120",
    "end": "271440"
  },
  {
    "text": "I'm sorry I mean it's really a talk about feedback loops because testing is a",
    "start": "271440",
    "end": "278639"
  },
  {
    "text": "feedback loop of how we understand our systems now if you were to take a",
    "start": "278639",
    "end": "284120"
  },
  {
    "text": "developer the fastest feedback loop that we have is a linter it will tell us whether our code",
    "start": "284120",
    "end": "292080"
  },
  {
    "text": "is formatted correctly whether we're using the right conventions and it will happen really",
    "start": "292080",
    "end": "297639"
  },
  {
    "text": "fast it happens as you type you don't really get much faster than that you're getting really rapid feedback to know",
    "start": "297639",
    "end": "303919"
  },
  {
    "text": "whether you're developing something that is correct the next time we have feedback",
    "start": "303919",
    "end": "309840"
  },
  {
    "text": "is the compiler if we're running in a compiled language we will compile all of those different classes together and it",
    "start": "309840",
    "end": "317199"
  },
  {
    "text": "will tell us no that method doesn't exist on that class if we're using languages that do support",
    "start": "317199",
    "end": "323440"
  },
  {
    "text": "compilation and again that's really really fast depending on what language you're using",
    "start": "323440",
    "end": "330120"
  },
  {
    "text": "and depending on how bad the code is but it is a fast feedback loop we're talking",
    "start": "330120",
    "end": "336440"
  },
  {
    "text": "we're up to seconds at this point the next feedback loop that we",
    "start": "336440",
    "end": "343120"
  },
  {
    "text": "have is developer tests the test that you write as a developer against your application now I'm I'm specifically not",
    "start": "343120",
    "end": "351319"
  },
  {
    "text": "mentioning two types of testing that would fall into that bracket because well they cause controversy if you call",
    "start": "351319",
    "end": "357800"
  },
  {
    "text": "one thing another thing and another thing another thing we'll come on to what those are in a",
    "start": "357800",
    "end": "363319"
  },
  {
    "text": "minute so then when we've got our developer tests we're we're talking now",
    "start": "363319",
    "end": "368720"
  },
  {
    "text": "maybe multiple seconds maybe tens of seconds depending on how big your tests are how many tests you have that are",
    "start": "368720",
    "end": "375199"
  },
  {
    "text": "running how fast those tests run but we're still local machine here we're",
    "start": "375199",
    "end": "380720"
  },
  {
    "text": "still able to get some really rapid feedback on whether our system is doing supposedly what we've been asking it to",
    "start": "380720",
    "end": "386880"
  },
  {
    "text": "do because let's face it computers only do what we ask them to do there aren't bugs there are just",
    "start": "386880",
    "end": "393280"
  },
  {
    "text": "things that you implemented incorrectly because well computers don't have a mind of their own",
    "start": "393280",
    "end": "399440"
  },
  {
    "text": "yet the next thing we have is I'll call them end to end tests there's lots of different words that you might use for",
    "start": "399440",
    "end": "405199"
  },
  {
    "text": "these but where we test a user flow across multiple different services or systems to ensure that things are",
    "start": "405199",
    "end": "412160"
  },
  {
    "text": "running properly this is where we add a lot of time these are tests that can take minutes and hours to run but we",
    "start": "412160",
    "end": "419639"
  },
  {
    "text": "still getting feedback in a fast cycle from there we have production",
    "start": "419639",
    "end": "427199"
  },
  {
    "text": "Telemetry see I told you I mentioned observably um so we have production Telemetry which is telling us how that",
    "start": "427199",
    "end": "433120"
  },
  {
    "text": "system is being used in production whether they errors whether things are running slow but again this is a faster",
    "start": "433120",
    "end": "439199"
  },
  {
    "text": "Fe this is a longer feedback loop each of these goes longer and then finally we have customer complaints because you",
    "start": "439199",
    "end": "444440"
  },
  {
    "text": "know that is a feedback loop really customers are very very good at telling you when things don't go right",
    "start": "444440",
    "end": "450319"
  },
  {
    "text": "um they just don't do it fast enough for me um so we've got all of these feedback",
    "start": "450319",
    "end": "458199"
  },
  {
    "text": "loops but they all take longer each different one of these is going to take longer it's not something you can",
    "start": "458199",
    "end": "463720"
  },
  {
    "text": "optimize it is something that's just going to take longer okay so now we get into something",
    "start": "463720",
    "end": "470639"
  },
  {
    "text": "that's a little bit more controversial when we talk about developer tests now a lot of people would see",
    "start": "470639",
    "end": "477159"
  },
  {
    "text": "developer tests as methods testing each individual method that we've got in our",
    "start": "477159",
    "end": "484639"
  },
  {
    "text": "system so we would we might call these unit tests coded tests there's lots of",
    "start": "484639",
    "end": "490680"
  },
  {
    "text": "different words that you might use for them beyond that we go a little bit",
    "start": "490680",
    "end": "496000"
  },
  {
    "text": "further out and we have classes an amalgamation of multiple different",
    "start": "496000",
    "end": "501280"
  },
  {
    "text": "methods there are some people who call these integration tests I do not",
    "start": "501280",
    "end": "506360"
  },
  {
    "text": "agree because integration test is not a thing it's a category of a",
    "start": "506360",
    "end": "511680"
  },
  {
    "text": "thing now if we go even a bit further out than that we've then got things like",
    "start": "511680",
    "end": "517479"
  },
  {
    "text": "controllers and handlers if we're using messaging contracts or cqrs that will",
    "start": "517479",
    "end": "523599"
  },
  {
    "text": "bring together multiple classes and test them together as a bit of",
    "start": "523599",
    "end": "530560"
  },
  {
    "text": "functionality and then we can go even a further Step Beyond there and then we've got API endpoints messages events",
    "start": "530959",
    "end": "539959"
  },
  {
    "text": "the external interactions of our system essentially the connection points into our",
    "start": "539959",
    "end": "546399"
  },
  {
    "text": "system because ultimately on the outside there that's the only thing that",
    "start": "546399",
    "end": "552639"
  },
  {
    "text": "matters we can write tests at the method level you I I would imagine that the all",
    "start": "552920",
    "end": "558640"
  },
  {
    "text": "those people who put their hand up before have likely got a class inside of their code base or a method inside of",
    "start": "558640",
    "end": "565160"
  },
  {
    "text": "their code space that has way more unit test than it needs",
    "start": "565160",
    "end": "570360"
  },
  {
    "text": "they spent hours building those tests and if you go and talk to them about it",
    "start": "570360",
    "end": "575800"
  },
  {
    "text": "it is the Pinnacle of developer Excellence this class with all of these",
    "start": "575800",
    "end": "581120"
  },
  {
    "text": "unit tests it's never going to fail but I come from a world where we've",
    "start": "581120",
    "end": "586880"
  },
  {
    "text": "got things like dependency injection and what will happen is you'll",
    "start": "586880",
    "end": "592240"
  },
  {
    "text": "do that class you'll make it amazing and then you'll try and run the application and realize oh yeah I didn't add that to",
    "start": "592240",
    "end": "598160"
  },
  {
    "text": "dependency injection so nothing works now I normally ask the question of how many people have um have deployed an",
    "start": "598160",
    "end": "606000"
  },
  {
    "text": "application and realized they hadn't added it to dependency injection um but now I just assume that everybody has",
    "start": "606000",
    "end": "611399"
  },
  {
    "text": "because everybody puts their hand up because we've all done it because the reality is when we're writing tests at",
    "start": "611399",
    "end": "617079"
  },
  {
    "text": "that level we're not really testing what's useful it's my favorite meme that",
    "start": "617079",
    "end": "626160"
  },
  {
    "text": "exists for those that don't understand this I'm sure both of those draws",
    "start": "626160",
    "end": "633040"
  },
  {
    "text": "worked but as soon as we try and put them together they don't now it doesn't matter how many",
    "start": "633040",
    "end": "641079"
  },
  {
    "text": "tests you write against your methods and your classes and even your handlers and",
    "start": "641079",
    "end": "646800"
  },
  {
    "text": "your controllers because the only thing that matters is those connection points at",
    "start": "646800",
    "end": "653720"
  },
  {
    "text": "the top no CEO is going to keep you in your",
    "start": "653720",
    "end": "658959"
  },
  {
    "text": "job when you say but all of the all of my unit tests passed I didn't mean us to lose 4",
    "start": "658959",
    "end": "667959"
  },
  {
    "text": "million so getting back to our system if we look at this example system",
    "start": "670959",
    "end": "678720"
  },
  {
    "text": "we've got three services that a customer can hit we've got one service which is",
    "start": "678720",
    "end": "683839"
  },
  {
    "text": "essentially fully asynchronous it has an internal API call so the red lines on here API calls the",
    "start": "683839",
    "end": "690440"
  },
  {
    "text": "blue lines are messages not wholly important for what we're doing but the thing that's important on",
    "start": "690440",
    "end": "697279"
  },
  {
    "text": "this diagram is these things these are our connection",
    "start": "697279",
    "end": "702519"
  },
  {
    "text": "points and I'll say it again these are the only things that",
    "start": "702519",
    "end": "707759"
  },
  {
    "text": "matter inside those blue boxes nobody",
    "start": "711600",
    "end": "716720"
  },
  {
    "text": "cares nobody cares if you are writing 400 classes one class nobody cares that",
    "start": "716720",
    "end": "722800"
  },
  {
    "text": "you've got an interface for every single class that you've created come on nobody cares about your factories of",
    "start": "722800",
    "end": "728880"
  },
  {
    "text": "factories that deliver factories that create",
    "start": "728880",
    "end": "733120"
  },
  {
    "text": "factories because ultimately unless those connection points that we're looking at here",
    "start": "734959",
    "end": "741680"
  },
  {
    "text": "work independently and together nobody will",
    "start": "741680",
    "end": "747000"
  },
  {
    "text": "care now small little anecdote from um the",
    "start": "747000",
    "end": "755160"
  },
  {
    "text": "bank we based everything based on requirements if we got a requirement for",
    "start": "755160",
    "end": "761440"
  },
  {
    "text": "something we'd write the tests and we'd Implement them so we get",
    "start": "761440",
    "end": "767000"
  },
  {
    "text": "requirements like this for instance the product Services list products endpoint",
    "start": "767000",
    "end": "772639"
  },
  {
    "text": "should not return products that have no stock it's very valid requirements and it because it's a Val",
    "start": "772639",
    "end": "779360"
  },
  {
    "text": "requirement it's something you could write a test for so in this diagram that's the only two things that matter",
    "start": "779360",
    "end": "785880"
  },
  {
    "text": "on that service those two connection points are the only two things that",
    "start": "785880",
    "end": "791399"
  },
  {
    "text": "matter you could spend hours building classes internally or you could spend you know",
    "start": "791399",
    "end": "798519"
  },
  {
    "text": "20 minutes building one class that does it you could spend ages building unit test around that class or those classes",
    "start": "798519",
    "end": "805480"
  },
  {
    "text": "but unless those two end points work you haven't done the work",
    "start": "805480",
    "end": "810880"
  },
  {
    "text": "but then there's another system that is something that we're going to receive because the warehouse service should",
    "start": "811760",
    "end": "817720"
  },
  {
    "text": "emit messages that contain the new stock level for a product whenever an order is",
    "start": "817720",
    "end": "825240"
  },
  {
    "text": "placed so again we've got some contracts now these are two independent",
    "start": "826519",
    "end": "834959"
  },
  {
    "text": "Services if we have to build them deploy them together they're not microservices",
    "start": "834959",
    "end": "841040"
  },
  {
    "text": "they are independent Services they emit messages they receive messages they take",
    "start": "842160",
    "end": "847519"
  },
  {
    "text": "API calls they emit messages they're to be treated in isolation because those are the",
    "start": "847519",
    "end": "853600"
  },
  {
    "text": "contracts that we've agreed to those contracts can't change because if they change the",
    "start": "853600",
    "end": "860079"
  },
  {
    "text": "consumers need to change now thing is ultimately this is",
    "start": "860079",
    "end": "866560"
  },
  {
    "text": "actually a talk about tdd it's not a talk about testing in general it's actually about talking about the",
    "start": "866560",
    "end": "873519"
  },
  {
    "text": "tdd workflow because tdd is not about unit tests it's not about testing methods",
    "start": "873519",
    "end": "879959"
  },
  {
    "text": "it's not about testing classes it's not about whether you use J unit or xunit or whatever it is that you're using from",
    "start": "879959",
    "end": "886800"
  },
  {
    "text": "that isn't what makes it a unit test that isn't what it makes it tdd might make it a unit test depending on how you",
    "start": "886800",
    "end": "893360"
  },
  {
    "text": "define a unit which between the US and America units are different apparently",
    "start": "893360",
    "end": "900639"
  },
  {
    "text": "um so Thomas has heard some of the jokes but not all of them um ultimately tdd is about a",
    "start": "902079",
    "end": "908959"
  },
  {
    "text": "workflow we write a test we write a test that fails we write an impl implementation",
    "start": "908959",
    "end": "916279"
  },
  {
    "text": "for that test that makes it pass and then we refactor and then we",
    "start": "916279",
    "end": "922079"
  },
  {
    "text": "just continue that cycle now if we go back to what I talked about with requirements",
    "start": "922079",
    "end": "929399"
  },
  {
    "text": "ultimately we're getting requirements from the business or even from internal Architects or we've designed them",
    "start": "930319",
    "end": "935959"
  },
  {
    "text": "ourselves to say this is the contract of our system well what we've done is we've generated a requirement which means we",
    "start": "935959",
    "end": "942399"
  },
  {
    "text": "can write a test for that requirement now at the bank what was",
    "start": "942399",
    "end": "948880"
  },
  {
    "text": "really interesting was we got really pedantic about it which is what I love about it because I'm a really pedantic",
    "start": "948880",
    "end": "956120"
  },
  {
    "text": "person really and we had this situation for around six months I think it was we",
    "start": "956120",
    "end": "961560"
  },
  {
    "text": "weren't live obviously but we had a situation for about six months where you could spend more than",
    "start": "961560",
    "end": "968440"
  },
  {
    "text": "your balance which apparently is a bad thing in",
    "start": "968440",
    "end": "973759"
  },
  {
    "text": "Banks but we had the ba come to us and say there's a bug in the platform like",
    "start": "974160",
    "end": "980880"
  },
  {
    "text": "okay said well you can spend more than you balance I'm like I'm so sorry um can you point me to the requirement so I can",
    "start": "980880",
    "end": "987680"
  },
  {
    "text": "put it on the bug report it's like oh there wasn't a requirement for it we just assumed that you'd build",
    "start": "987680",
    "end": "993480"
  },
  {
    "text": "that but the reality was because there was no requirement for it we hadn't",
    "start": "993480",
    "end": "998720"
  },
  {
    "text": "built a test we had built any tests around that we' built something because they",
    "start": "998720",
    "end": "1004720"
  },
  {
    "text": "said we need to get the balance we' built something because they said well we need to be able to post a",
    "start": "1004720",
    "end": "1011120"
  },
  {
    "text": "transaction but we hadn't built anything that said well throw an exception throw a 500 error throw a 409 error throw some",
    "start": "1011120",
    "end": "1019399"
  },
  {
    "text": "kind of error when they spend more than their balance and what that meant was they had",
    "start": "1019399",
    "end": "1027480"
  },
  {
    "text": "to tell us exactly what error message should be displayed under what",
    "start": "1027480",
    "end": "1032520"
  },
  {
    "text": "conditions and we had to validate that that error message was expressed in those",
    "start": "1032520",
    "end": "1039160"
  },
  {
    "text": "conditions and eventually um well I'd like to say eventually they came on board they",
    "start": "1039160",
    "end": "1045199"
  },
  {
    "text": "didn't um it was a constant bow But ultimately they got this idea that they have to define the",
    "start": "1045199",
    "end": "1052080"
  },
  {
    "text": "requirements not the implementation we got them coming a few times saying okay so we need you to add",
    "start": "1052080",
    "end": "1058400"
  },
  {
    "text": "this to the database like we don't have a database I'm like well but I need I need it in the database we use event",
    "start": "1058400",
    "end": "1063919"
  },
  {
    "text": "store it's not a database you need to update the balance column no stop talking about implementation details",
    "start": "1063919",
    "end": "1071480"
  },
  {
    "text": "tell me what you need it to do and we will build it which is very important when we talk about Legacy systems",
    "start": "1071480",
    "end": "1079039"
  },
  {
    "text": "because Legacy systems and the way that Legacy systems were developed was by that kind of low-level detail but if we",
    "start": "1079039",
    "end": "1086000"
  },
  {
    "text": "talk about working in a tdd way from the outside where people Define",
    "start": "1086000",
    "end": "1093559"
  },
  {
    "text": "requirements and we write tests for those requirements and then we write the",
    "start": "1093559",
    "end": "1100080"
  },
  {
    "text": "implementation that makes those requirements work what's really cool about that is we don't develop code that",
    "start": "1100080",
    "end": "1106200"
  },
  {
    "text": "isn't used we don't develop a test or 500",
    "start": "1106200",
    "end": "1111559"
  },
  {
    "text": "tests that test that a class is bulletproof where none of those conditions can ever be",
    "start": "1111559",
    "end": "1117520"
  },
  {
    "text": "met so we end up with a laner code base which you know lener code bases",
    "start": "1117520",
    "end": "1124400"
  },
  {
    "text": "easiest to support it also means you can get 100% code",
    "start": "1124400",
    "end": "1129919"
  },
  {
    "text": "coverage because the reality is if that code isn't hit by any of your outside in tests your API level tests then one of",
    "start": "1129919",
    "end": "1138200"
  },
  {
    "text": "two things is happened you've either missed a",
    "start": "1138200",
    "end": "1143400"
  },
  {
    "text": "requirement or that code can never be hit now what I'm saying here is not",
    "start": "1143400",
    "end": "1150600"
  },
  {
    "text": "something that I would like anybody to go away and cargo C and just say well Martin said that I should just do this",
    "start": "1150600",
    "end": "1157240"
  },
  {
    "text": "therefore if I lose my job I cons Sue Martin no it's not the way this thing works these are just different gears we",
    "start": "1157240",
    "end": "1165559"
  },
  {
    "text": "call these gears we've got lowlevel gears unit tests methods classes that allow us to",
    "start": "1165559",
    "end": "1173240"
  },
  {
    "text": "maneuver but you don't get very far fast because you've got to do more and more",
    "start": "1173240",
    "end": "1178919"
  },
  {
    "text": "work on the outside when we're testing our apis we can run really fast we can",
    "start": "1178919",
    "end": "1185200"
  },
  {
    "text": "test a lot of detail really really fast so those are your higher gears so",
    "start": "1185200",
    "end": "1191360"
  },
  {
    "text": "it's about Switching gears when you need to don't feel like you need to write",
    "start": "1191360",
    "end": "1197120"
  },
  {
    "text": "tests that aren't important so if we take for instance the warehouse",
    "start": "1197120",
    "end": "1202400"
  },
  {
    "text": "system essentially what we're trying to do here is we're going to write",
    "start": "1202400",
    "end": "1207840"
  },
  {
    "text": "tests that work at this level we're going to write",
    "start": "1207840",
    "end": "1214039"
  },
  {
    "text": "tests where what we do is we send in an order placed message but before that",
    "start": "1214039",
    "end": "1220360"
  },
  {
    "text": "we're going to send in some stock received messages because there's a requirement I've not told you that was",
    "start": "1220360",
    "end": "1226720"
  },
  {
    "text": "part of the system which is well when we see received a stock received message that's when we increase the stock levels",
    "start": "1226720",
    "end": "1233000"
  },
  {
    "text": "maybe we don't do an output at that point but each one of these would be a requirement that would require us to",
    "start": "1233000",
    "end": "1238880"
  },
  {
    "text": "write another test if somebody came to me with the requirement of saying put in the order place message and send out the",
    "start": "1238880",
    "end": "1244000"
  },
  {
    "text": "new stock I'd say well it'll fail at the moment because there's no stock okay so what's the requirement okay well when I",
    "start": "1244000",
    "end": "1250559"
  },
  {
    "text": "get new stock I need to increase the stock okay right and we start to build up this idea of",
    "start": "1250559",
    "end": "1256679"
  },
  {
    "text": "requirements we get Trace ability by somebody telling us what our system is",
    "start": "1256679",
    "end": "1261760"
  },
  {
    "text": "supposed to do and why it's supposed to do it which means we build up",
    "start": "1261760",
    "end": "1267600"
  },
  {
    "text": "documentation I mean I know everybody in the room loves writing their own documentation you know against your",
    "start": "1267600",
    "end": "1272840"
  },
  {
    "text": "classes and all of that kind of stuff writing those big Confluence documents everybody loves doing that yeah well how",
    "start": "1272840",
    "end": "1280320"
  },
  {
    "text": "one person in the back yeah that's pretty much my experience but ultimately when we're",
    "start": "1280320",
    "end": "1287159"
  },
  {
    "text": "building these things from requirements the requirements become our documentation we know who requested it",
    "start": "1287159",
    "end": "1293480"
  },
  {
    "text": "why they requested It ultimately what they were asking it to do not what it's",
    "start": "1293480",
    "end": "1301039"
  },
  {
    "text": "doing now when we place these two things in we then check to make sure that we've",
    "start": "1301200",
    "end": "1306440"
  },
  {
    "text": "received a stock receive message that's all that test should do",
    "start": "1306440",
    "end": "1312799"
  },
  {
    "text": "now a lot of people would call this integration testing I don't agree",
    "start": "1312799",
    "end": "1319200"
  },
  {
    "text": "I call these developer tests and the reason I call them developer tests is because we write these things in",
    "start": "1319200",
    "end": "1326520"
  },
  {
    "text": "memory we write these things against an API that we run locally against our",
    "start": "1326520",
    "end": "1331640"
  },
  {
    "text": "service the developers write these not some external company not some person who you've just",
    "start": "1331640",
    "end": "1338360"
  },
  {
    "text": "hired to go and sit on a desk not some intern the person who's writing this code the implementation has first wrote",
    "start": "1338360",
    "end": "1345760"
  },
  {
    "text": "these tests that will fail and then once they'",
    "start": "1345760",
    "end": "1352840"
  },
  {
    "text": "failed they'll write the implementation to make them pass it's that simple if",
    "start": "1352840",
    "end": "1358679"
  },
  {
    "text": "there's a requirement that you think is something that should be built you go back to the business and say I think",
    "start": "1358679",
    "end": "1365080"
  },
  {
    "text": "this should be a requirement yes I agree what's the requirement write the requirement now go and write the",
    "start": "1365080",
    "end": "1371720"
  },
  {
    "text": "test so you could call this rtdd requirements test driven development maybe I don't know I don't",
    "start": "1371720",
    "end": "1378080"
  },
  {
    "text": "like coming with names for things but ultimately what we're doing here is we're testing to make sure that",
    "start": "1378080",
    "end": "1384720"
  },
  {
    "text": "the things that happen in production produce the right outcomes",
    "start": "1384720",
    "end": "1391000"
  },
  {
    "text": "that should happen in",
    "start": "1391000",
    "end": "1394400"
  },
  {
    "text": "production now one of the things I see as an anti pattern when people start doing this is they do",
    "start": "1396120",
    "end": "1402480"
  },
  {
    "text": "this they'll go and inject a load of products into the SQL Server into the",
    "start": "1402480",
    "end": "1408080"
  },
  {
    "text": "database B into whatever it is that you're using as your data store as part of their test setup as part of preceded",
    "start": "1408080",
    "end": "1416039"
  },
  {
    "text": "data now I'm going to take a wild guess that that's not the way it happens in",
    "start": "1416039",
    "end": "1421960"
  },
  {
    "text": "production that when you get stock somebody doesn't craft some SQL queries and increase the stock and I'm looking",
    "start": "1421960",
    "end": "1428279"
  },
  {
    "text": "around the room there's a couple of people saying no no that's what we do I feel",
    "start": "1428279",
    "end": "1435000"
  },
  {
    "text": "you but ultimately that's not what you're expecting to happen what you're expecting to happen is you might expect",
    "start": "1435000",
    "end": "1441159"
  },
  {
    "text": "something to happen where the database already has some data but that's not how it's going to",
    "start": "1441159",
    "end": "1448880"
  },
  {
    "text": "happen in production and you get into this step of your tests being tightly coupled to your database",
    "start": "1448880",
    "end": "1456400"
  },
  {
    "text": "schema when they shouldn't be because if you have to change your test when you",
    "start": "1456400",
    "end": "1462240"
  },
  {
    "text": "write some new code you can no longer trust that test you don't know whether that test is",
    "start": "1462240",
    "end": "1469360"
  },
  {
    "text": "right it was right but now you've changed something in that test is it still right well yeah because",
    "start": "1469360",
    "end": "1477320"
  },
  {
    "text": "I don't write bad code but unfortunately that's not something that people believe I don't",
    "start": "1477320",
    "end": "1484039"
  },
  {
    "text": "know why um so ultimately what we're trying to do here is mimic what a production system",
    "start": "1484039",
    "end": "1492039"
  },
  {
    "text": "does in every single test that we do now we have had when we built",
    "start": "1492039",
    "end": "1500159"
  },
  {
    "text": "this around 8,000 of these tests per",
    "start": "1500159",
    "end": "1506799"
  },
  {
    "text": "service and they ran in under 10 seconds for context we running net when",
    "start": "1507000",
    "end": "1513760"
  },
  {
    "text": "we did this net has something called a web application Factory which runs up our entire API in memory so there is no",
    "start": "1513760",
    "end": "1521600"
  },
  {
    "text": "network calls because as soon as you add a network call you're add in at least a millisecond",
    "start": "1521600",
    "end": "1528880"
  },
  {
    "text": "so you need to think about how you test this it's not just let's run some test containers and run some Newman tests",
    "start": "1528880",
    "end": "1535520"
  },
  {
    "text": "against these test containers that'll do it that isn't how we do it you have to",
    "start": "1535520",
    "end": "1541240"
  },
  {
    "text": "think about it you have to spend the time to build the Frameworks that allow you to test this way but ultimately when",
    "start": "1541240",
    "end": "1549440"
  },
  {
    "text": "you have those 8,000 tests you have a ton of confidence it is a",
    "start": "1549440",
    "end": "1555840"
  },
  {
    "text": "journey we had a team that built this and then decided that their entire",
    "start": "1555840",
    "end": "1562320"
  },
  {
    "text": "internal implementation was wrong when a new requirement came in so the databased design that they'd come up with just",
    "start": "1562320",
    "end": "1567880"
  },
  {
    "text": "didn't work for this new thing so they rewrote everything the",
    "start": "1567880",
    "end": "1573440"
  },
  {
    "text": "entire blue box rewrote all of it contracts were the same on the",
    "start": "1573440",
    "end": "1579399"
  },
  {
    "text": "outside because well we're still going to get an order place message we're still going to get stock received",
    "start": "1579399",
    "end": "1584559"
  },
  {
    "text": "messages and we still need to Output the order place the stock chains messages",
    "start": "1584559",
    "end": "1589600"
  },
  {
    "text": "and they did that and then all the tests passed and they spent two days two days",
    "start": "1589600",
    "end": "1599440"
  },
  {
    "text": "procrastinating because they didn't feel confident because they'd rewrote the entire internal",
    "start": "1599440",
    "end": "1605120"
  },
  {
    "text": "implementation but the test still passed and I think that goes to show",
    "start": "1605120",
    "end": "1610520"
  },
  {
    "text": "that when we're writing and we're writing so much code we don't have confidence that we",
    "start": "1610520",
    "end": "1616279"
  },
  {
    "text": "can deploy things because what we're doing is we're designing our tests we're designing our confidence tests around",
    "start": "1616279",
    "end": "1623760"
  },
  {
    "text": "our local environment or at two lower level we're not going to the outside",
    "start": "1623760",
    "end": "1629399"
  },
  {
    "text": "we're not testing what production wants we're not testing what the business wants we're testing the code that we",
    "start": "1629399",
    "end": "1636440"
  },
  {
    "text": "wrote they eventually deployed it it all worked it was fine but I think that",
    "start": "1636440",
    "end": "1641640"
  },
  {
    "text": "really goes to show that you should really think about these tests and once you get that confidence you can run",
    "start": "1641640",
    "end": "1646919"
  },
  {
    "text": "really really fast with a lot of confidence this is how you get to these phases of people who are deploying per",
    "start": "1646919",
    "end": "1653720"
  },
  {
    "text": "commit because if your pipeline can run all of these tests and you can have 100%",
    "start": "1653720",
    "end": "1658880"
  },
  {
    "text": "confidence that every requirement that you had to achieve before achieved is achieved",
    "start": "1658880",
    "end": "1664640"
  },
  {
    "text": "now well just deploy it your new stuff might not be right but put that behind a feature",
    "start": "1664640",
    "end": "1672200"
  },
  {
    "text": "flag as long as all the old stuff still works just deploy it testing production",
    "start": "1672200",
    "end": "1680120"
  },
  {
    "text": "so I told you to talk a bit about honeycomb as well um so ultimately though there are",
    "start": "1680679",
    "end": "1686640"
  },
  {
    "text": "things that we can't test from the outside because from the outside some of",
    "start": "1686640",
    "end": "1692200"
  },
  {
    "text": "the things that we do may look the same we may say do a thing and the",
    "start": "1692200",
    "end": "1701240"
  },
  {
    "text": "outcome may be the same but the internals of what we expected might be different",
    "start": "1701240",
    "end": "1707640"
  },
  {
    "text": "so we can't do that from an outside in testing perspective but there is another",
    "start": "1708360",
    "end": "1715799"
  },
  {
    "text": "way because this is actually a talk about observability",
    "start": "1717120",
    "end": "1723919"
  },
  {
    "text": "sorry so what what do we mean by observability this is a a quote from our founder um observability actually comes",
    "start": "1724799",
    "end": "1731600"
  },
  {
    "text": "from something called control theory from the 1960s it's not new it's not something that the logging and mric",
    "start": "1731600",
    "end": "1738159"
  },
  {
    "text": "vendors came up with about seven years ago it's something that's ancient because there is nothing new in it",
    "start": "1738159",
    "end": "1745480"
  },
  {
    "text": "apparently but ultimately observability is about understanding and debugging unknown unknowns the ability to",
    "start": "1745480",
    "end": "1751840"
  },
  {
    "text": "understand the inner System state just from asking questions from the",
    "start": "1751840",
    "end": "1757360"
  },
  {
    "text": "outside that's the software definition based on Colman's paper on control",
    "start": "1757360",
    "end": "1764600"
  },
  {
    "text": "ability but I want to focus on one part of that which is the ability to",
    "start": "1764600",
    "end": "1769919"
  },
  {
    "text": "understand the inner System state any inner System state because I said there's things that",
    "start": "1769919",
    "end": "1776559"
  },
  {
    "text": "we can't test from the outside but are important for us to know that they went",
    "start": "1776559",
    "end": "1782760"
  },
  {
    "text": "through the right approaches now when we were writing",
    "start": "1782760",
    "end": "1788919"
  },
  {
    "text": "things for production we really need to know about how our software is going to work in a",
    "start": "1788919",
    "end": "1794840"
  },
  {
    "text": "production environment that's really really important to us and that's where we do things like",
    "start": "1794840",
    "end": "1800360"
  },
  {
    "text": "tracing and we get things like this which is a um a basic Trace waterfall now ultimately the business",
    "start": "1800360",
    "end": "1807440"
  },
  {
    "text": "only cares about that Top Line the outside they care about how long it",
    "start": "1807440",
    "end": "1813000"
  },
  {
    "text": "takes they care about it return the correct data but you as an engineer somebody",
    "start": "1813000",
    "end": "1818799"
  },
  {
    "text": "who's supporting that system May care about either the whole waterfall or just some individual sections of that",
    "start": "1818799",
    "end": "1825720"
  },
  {
    "text": "waterfall you may just care about your service your checkout service maybe that's the one that you're looking after",
    "start": "1825720",
    "end": "1831640"
  },
  {
    "text": "maybe the um cart service maybe you're looking after two of those",
    "start": "1831640",
    "end": "1836760"
  },
  {
    "text": "services this is what allows us to see in a system",
    "start": "1837240",
    "end": "1842519"
  },
  {
    "text": "State and this is what we see when we're in",
    "start": "1842519",
    "end": "1847039"
  },
  {
    "text": "production but what if we could use that locally and we call this something",
    "start": "1848519",
    "end": "1854120"
  },
  {
    "text": "called observability driven development which is how we look at the outside or the big service the big system how do we",
    "start": "1854120",
    "end": "1861760"
  },
  {
    "text": "use that information to help Drive our development flows to help drive more",
    "start": "1861760",
    "end": "1868080"
  },
  {
    "text": "requirements and therefore more tests and more implementations and more",
    "start": "1868080",
    "end": "1876000"
  },
  {
    "text": "refactoring so I've got an example um don't try and work out the language I specifically um talk about",
    "start": "1878840",
    "end": "1886519"
  },
  {
    "text": "six different languages try and together the syntax so that nobody thinks that I'm favoriting one particular language",
    "start": "1886519",
    "end": "1892760"
  },
  {
    "text": "um there may be a test afterwards to spot all the different design pans but let's say we've got a get price",
    "start": "1892760",
    "end": "1901760"
  },
  {
    "text": "for a product and we use pricing strategies based on the product ID maybe",
    "start": "1901760",
    "end": "1907840"
  },
  {
    "text": "the product ID has a different pricing strategy on there and those pricing strategies are something that we use to",
    "start": "1907840",
    "end": "1914440"
  },
  {
    "text": "calculate the new price of a product now if two of those pricing strategies",
    "start": "1914440",
    "end": "1921240"
  },
  {
    "text": "somehow converge maybe one of them's 10% um a",
    "start": "1921240",
    "end": "1926480"
  },
  {
    "text": "10% markup and one of them is a one pound markup if my product is 101 pound",
    "start": "1926480",
    "end": "1932559"
  },
  {
    "text": "they're both going to come out with the same outcome so from an outside I don't know",
    "start": "1932559",
    "end": "1938480"
  },
  {
    "text": "whether that is the right pricing strategy that has been",
    "start": "1938480",
    "end": "1942480"
  },
  {
    "text": "used but ultimately it's not just something I want to in my",
    "start": "1944279",
    "end": "1950000"
  },
  {
    "text": "tests it's something I want to know about my system when it's running as well because if it's important enough",
    "start": "1950000",
    "end": "1957080"
  },
  {
    "text": "for you to know whether it's correct in your tests and if we're writing tests from the outside to understand our",
    "start": "1957080",
    "end": "1962919"
  },
  {
    "text": "system it's important enough for you to give to either the people supporting your system or yourself if that's you",
    "start": "1962919",
    "end": "1968919"
  },
  {
    "text": "supporting that system and ultimately I'd like to think that everybody treats the people",
    "start": "1968919",
    "end": "1974080"
  },
  {
    "text": "supporting their system as if they were themselves anyway when we're not in a world anymore where we throw it over the",
    "start": "1974080",
    "end": "1979639"
  },
  {
    "text": "wall and somebody else can sort that like I've paid my Jews I'm going home I'm going to the",
    "start": "1979639",
    "end": "1985519"
  },
  {
    "text": "pub we're not in that world anymore so we need to be kind to ourselves about how we understand how the systems work",
    "start": "1985519",
    "end": "1991639"
  },
  {
    "text": "in production now we can use those same Concepts in our local development",
    "start": "1991639",
    "end": "1998120"
  },
  {
    "text": "because let's say we were writing a test to say well let's make sure our get product endpoint when it's got a valid product",
    "start": "1998120",
    "end": "2006200"
  },
  {
    "text": "uses the right strategy how would we do that how would we call our Ecom service API from the outside",
    "start": "2006200",
    "end": "2013159"
  },
  {
    "text": "our get products imagine this is a wrapper around our API that we've built inside of our",
    "start": "2013159",
    "end": "2018840"
  },
  {
    "text": "tests how do we test to make sure it's using the right",
    "start": "2018840",
    "end": "2024480"
  },
  {
    "text": "strategy well this is where we use either something called tracing or we use logs or we use some kind of",
    "start": "2024480",
    "end": "2031200"
  },
  {
    "text": "telemetry data that should be emitted in production to test locally",
    "start": "2031200",
    "end": "2038120"
  },
  {
    "text": "are you tracing I think it's superior but doesn't mean you have to",
    "start": "2038120",
    "end": "2043440"
  },
  {
    "text": "logs are just as useful in the circumstance now what we can do is we",
    "start": "2043440",
    "end": "2049240"
  },
  {
    "text": "can say well let's get the current span that's running and then let's set our product strategy",
    "start": "2049240",
    "end": "2054599"
  },
  {
    "text": "ID on our span and what that means is when we go",
    "start": "2054599",
    "end": "2059960"
  },
  {
    "text": "and then write the test well now we can go and say go and",
    "start": "2059960",
    "end": "2066240"
  },
  {
    "text": "work out what spans were emitted for this this particular test and then make sure that the",
    "start": "2066240",
    "end": "2071599"
  },
  {
    "text": "strategy ideas come out and then make sure it's using the right strategy",
    "start": "2071599",
    "end": "2078280"
  },
  {
    "text": "ID it sounds simple and that's because it",
    "start": "2078599",
    "end": "2084280"
  },
  {
    "text": "is it does however take work this is not something where you're just going to be able to take it out of the box open up a",
    "start": "2084280",
    "end": "2090720"
  },
  {
    "text": "C file or a Java file and just write something in but what we found when we were",
    "start": "2090720",
    "end": "2097720"
  },
  {
    "text": "writing things at the bank and the new people that we brought on is this was a a big knee-jerk reaction to people going",
    "start": "2097720",
    "end": "2103240"
  },
  {
    "text": "no no no no that's not the way we build things in finance it's like there's a reason for",
    "start": "2103240",
    "end": "2110640"
  },
  {
    "text": "that because we build things better when we're not in finance sorry I don't don't mean to",
    "start": "2110640",
    "end": "2117119"
  },
  {
    "text": "be but ultimately there's a there's a lot of Legacy that comes in with big bank finance systems that kind of stuff",
    "start": "2117119",
    "end": "2124400"
  },
  {
    "text": "these are new patterns but they're different strings to your",
    "start": "2124400",
    "end": "2129599"
  },
  {
    "text": "bow they're not something that can be used in isolation you're not going to get everything by doing these things but",
    "start": "2129599",
    "end": "2135440"
  },
  {
    "text": "you can do a lot of things now when you do things like this actually when you're writing your tests",
    "start": "2135440",
    "end": "2141560"
  },
  {
    "text": "and you're running your tests you can actually see what those that tracing data is going to look like what those",
    "start": "2141560",
    "end": "2147359"
  },
  {
    "text": "log data is going to look like if you in your local environments push to a system",
    "start": "2147359",
    "end": "2153079"
  },
  {
    "text": "like um Microsoft have just released a Spire for the net people that allows you to push stuff and see all of your",
    "start": "2153079",
    "end": "2158280"
  },
  {
    "text": "Telemetry data locally there's Jer there's um open search there's lots of",
    "start": "2158280",
    "end": "2163560"
  },
  {
    "text": "things that you can use but you're essentially now being able to see that data now the other thing that we found",
    "start": "2163560",
    "end": "2169599"
  },
  {
    "text": "when we started writing software like this very few people actually ran the",
    "start": "2169599",
    "end": "2176359"
  },
  {
    "text": "software very few people actually ran it locally they just ran the",
    "start": "2176359",
    "end": "2182040"
  },
  {
    "text": "tests because the tests were actually doing what they would do themselves they don't have to draft a",
    "start": "2182040",
    "end": "2188000"
  },
  {
    "text": "message stick it on service bus stick it in sqs well I just put it in the test and",
    "start": "2188000",
    "end": "2194319"
  },
  {
    "text": "the test tells me it works if you imagine how much time you spend hitting play on your IDE letting",
    "start": "2194319",
    "end": "2203760"
  },
  {
    "text": "that thing run going to your Swagger do putting in the information hitting",
    "start": "2203760",
    "end": "2209160"
  },
  {
    "text": "play or even just pressing play and hitting a HTTP Doc and hitting the send",
    "start": "2209160",
    "end": "2214280"
  },
  {
    "text": "request on those if you could get around all of that and you could test all of them all",
    "start": "2214280",
    "end": "2220319"
  },
  {
    "text": "the time how much more efficient would you be because what you've done is",
    "start": "2220319",
    "end": "2225400"
  },
  {
    "text": "you've built that system so it works in production not locally not your local um",
    "start": "2225400",
    "end": "2231319"
  },
  {
    "text": "not your local classes not your local methods you've built it so it works in",
    "start": "2231319",
    "end": "2237560"
  },
  {
    "text": "production I mean ultimately this talk is actually about writing for you a test because you can write fewer tests",
    "start": "2238079",
    "end": "2245040"
  },
  {
    "text": "on the outside that test more things than you can on the ins Inside by writing unit tests by writing those",
    "start": "2245040",
    "end": "2250359"
  },
  {
    "text": "method level tests so I want to leave you with a",
    "start": "2250359",
    "end": "2256160"
  },
  {
    "text": "couple of thoughts the first one is don't cargo cult this don't take this away and say",
    "start": "2256160",
    "end": "2263800"
  },
  {
    "text": "this is the thing that we're going to do now we're not going to do anything",
    "start": "2263800",
    "end": "2268960"
  },
  {
    "text": "else think about which gear you're in think about whether you need to move",
    "start": "2271359",
    "end": "2277000"
  },
  {
    "text": "down gears but don't just move down gears move up them as",
    "start": "2277000",
    "end": "2282040"
  },
  {
    "text": "well can I write a test at the controller level can I write a test at the API level and think about what extra",
    "start": "2282040",
    "end": "2290079"
  },
  {
    "text": "things you're testing as you go to the outside as's an example if you're at an",
    "start": "2290079",
    "end": "2295240"
  },
  {
    "text": "API level and you test things you're actually testing serialization and",
    "start": "2295240",
    "end": "2300760"
  },
  {
    "text": "deserialization because how many times have we seen somebody changing the casing of a Jason object",
    "start": "2300760",
    "end": "2308760"
  },
  {
    "text": "but think about what gear you're in think about what you're trying to test think about what your outcomes are that you're looking for and think about",
    "start": "2310560",
    "end": "2316880"
  },
  {
    "text": "whether this is the right gear for the test that you need to write but when you're doing that write",
    "start": "2316880",
    "end": "2324000"
  },
  {
    "text": "the tests that matter it does not matter that you have",
    "start": "2324000",
    "end": "2329960"
  },
  {
    "text": "a test that sets a property on a class and make sure you can get that property",
    "start": "2329960",
    "end": "2336440"
  },
  {
    "text": "back I can see a lot of people in the room going oh I've got loads of",
    "start": "2336440",
    "end": "2341760"
  },
  {
    "text": "those they're not that",
    "start": "2342079",
    "end": "2345760"
  },
  {
    "text": "useful don't make your applications brittle the more tests we write against",
    "start": "2347160",
    "end": "2352720"
  },
  {
    "text": "methods and classes the more brittle our um application framework becomes because",
    "start": "2352720",
    "end": "2358920"
  },
  {
    "text": "as soon as we try to make a change we've got to change tests those tests Cascade",
    "start": "2358920",
    "end": "2366800"
  },
  {
    "text": "and finally think about whether you're covering your requirements the requirements that the",
    "start": "2368440",
    "end": "2373680"
  },
  {
    "text": "business have put on you think about that because that's the",
    "start": "2373680",
    "end": "2379760"
  },
  {
    "text": "most important thing the requirements are what matter in production and if you're not testing the requirements",
    "start": "2379760",
    "end": "2386400"
  },
  {
    "text": "you're not building for production but that's all I've got and",
    "start": "2386400",
    "end": "2392800"
  },
  {
    "text": "I'm going to leave you with that um I will take questions now I am out on a booth outside so so come and see me I'll",
    "start": "2392800",
    "end": "2398160"
  },
  {
    "text": "be here all day tomorrow but I think we're going to do a couple of questions now yeah so uh first give a round of",
    "start": "2398160",
    "end": "2403200"
  },
  {
    "text": "applause to Martin and and put your put your hand up",
    "start": "2403200",
    "end": "2410560"
  },
  {
    "text": "if you have a question the volunteers will find you I want to start um so how do we know that these techniques will actually ensure that our applications",
    "start": "2410560",
    "end": "2416880"
  },
  {
    "text": "are easier to debug and uh than they're primed for use in production I think it's it's really",
    "start": "2416880",
    "end": "2425040"
  },
  {
    "text": "about the observability side because if you've been able to ebook something locally and you've been using the",
    "start": "2425040",
    "end": "2430240"
  },
  {
    "text": "observability techniques to do that you've essentially been debugging",
    "start": "2430240",
    "end": "2435920"
  },
  {
    "text": "your production system anyway when you've been writing the software because well you've been",
    "start": "2435920",
    "end": "2441240"
  },
  {
    "text": "debugging when a a message comes in and when a message goes out that's what you've been debugging and that's all",
    "start": "2441240",
    "end": "2446760"
  },
  {
    "text": "that's happening in production and that's the difference because if you debug a unit test locally you're",
    "start": "2446760",
    "end": "2452480"
  },
  {
    "text": "debugging a unit test you're not debugging an application you're not debugging a server service you're not",
    "start": "2452480",
    "end": "2458160"
  },
  {
    "text": "debugging a requirement or something that would happen in production do we have a question over",
    "start": "2458160",
    "end": "2464040"
  },
  {
    "text": "there I someone oh over here with the hand Hub and Martin if you could repeat the",
    "start": "2464040",
    "end": "2471079"
  },
  {
    "text": "question because your mic gets recorded thanks also for the great talk",
    "start": "2471079",
    "end": "2476200"
  },
  {
    "text": "um if you have a use case or requirement that also involves a different service",
    "start": "2476200",
    "end": "2483000"
  },
  {
    "text": "doing its thing how would you test that and if the answer is mocking that service how would",
    "start": "2483000",
    "end": "2489680"
  },
  {
    "text": "you handle changes to that service's requirements okay so the question is",
    "start": "2489680",
    "end": "2494880"
  },
  {
    "text": "about if we've got multiple services that are interacting together to achieve",
    "start": "2494880",
    "end": "2500119"
  },
  {
    "text": "something how do we test that scenario now ultimately you shouldn't",
    "start": "2500119",
    "end": "2506079"
  },
  {
    "text": "care about that other service that's that service's job to maintain its",
    "start": "2506079",
    "end": "2511880"
  },
  {
    "text": "contract each of those connection points that we're talking about is a contract that you've delivered to somebody you",
    "start": "2511880",
    "end": "2519119"
  },
  {
    "text": "can't change that contract because that will break things your tests in your service I mean you",
    "start": "2519119",
    "end": "2526880"
  },
  {
    "text": "might own both services but we work at a service level your test in your service",
    "start": "2526880",
    "end": "2531920"
  },
  {
    "text": "should make sure that that contract never changes or more specifically never unknowingly changes you might want to",
    "start": "2531920",
    "end": "2539480"
  },
  {
    "text": "change it but as soon as your tests fail on those contracts you know that your",
    "start": "2539480",
    "end": "2545760"
  },
  {
    "text": "consumer is going to fail so you know if you've got to change your",
    "start": "2545760",
    "end": "2550839"
  },
  {
    "text": "tests well you're going to have to tell consumers that they need to change their implementation but you shouldn't care",
    "start": "2550839",
    "end": "2557359"
  },
  {
    "text": "about what the other service is doing that's that service's job what you should know about is well I",
    "start": "2557359",
    "end": "2563800"
  },
  {
    "text": "know the contract that that service is going to give me so let's take an API contract the example I gave before was",
    "start": "2563800",
    "end": "2571480"
  },
  {
    "text": "the um checkout service is going to check the stock live via an API call into the warehouse service",
    "start": "2571480",
    "end": "2577839"
  },
  {
    "text": "and in that scenario you know what the contract of the warehouse service is going to be for that call well you",
    "start": "2577839",
    "end": "2584000"
  },
  {
    "text": "should put a mark a stub more specifically into that service that says when I call for these specific details I",
    "start": "2584000",
    "end": "2590920"
  },
  {
    "text": "expect you to give me this specific response because that's the pre-built contract that you've agreed with that",
    "start": "2590920",
    "end": "2597000"
  },
  {
    "text": "service if that service changes that's on that service that service is now broken but",
    "start": "2597000",
    "end": "2603800"
  },
  {
    "text": "it's that service's job to do the same thing if you want to do that then you've got",
    "start": "2603800",
    "end": "2609200"
  },
  {
    "text": "to do that with every single one of them and I can tell you that 1500 microservices locally is not the thing",
    "start": "2609200",
    "end": "2614680"
  },
  {
    "text": "you want to do you've got to take each of these Services individually you've got to make sure",
    "start": "2614680",
    "end": "2621319"
  },
  {
    "text": "that everybody buys into this approach that we are not going to change our contracts or that we are going to support that contract and if you do that",
    "start": "2621319",
    "end": "2628240"
  },
  {
    "text": "as an organization not only do you get the confidence that internal consumers are",
    "start": "2628240",
    "end": "2634280"
  },
  {
    "text": "not going to break you can also use this for external consumers as well because",
    "start": "2634280",
    "end": "2639400"
  },
  {
    "text": "we had a discussion in the on conference before about multiple different external consumers that you don't control when as",
    "start": "2639400",
    "end": "2645880"
  },
  {
    "text": "soon as it's public well you're going to have to support it the comment I used there was API contracts are for life not",
    "start": "2645880",
    "end": "2652559"
  },
  {
    "text": "just a major release",
    "start": "2652559",
    "end": "2656079"
  },
  {
    "text": "[Music]",
    "start": "2657630",
    "end": "2663078"
  }
]