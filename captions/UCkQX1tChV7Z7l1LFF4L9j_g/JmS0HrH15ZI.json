[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "[Music]",
    "start": "830",
    "end": "9280"
  },
  {
    "text": "all right everybody how you doing yeah last Talk of the day you guys excited to talk about",
    "start": "9280",
    "end": "17240"
  },
  {
    "text": "backbone all right me too okay so I'm Spike brim I'm a web",
    "start": "17240",
    "end": "22439"
  },
  {
    "start": "20000",
    "end": "40000"
  },
  {
    "text": "developer at uh Airbnb which is a local company couple blocks away uh and I want",
    "start": "22439",
    "end": "27679"
  },
  {
    "text": "to talk about render which is something that open sourcing today you can go check it out in GitHub",
    "start": "27679",
    "end": "33760"
  },
  {
    "text": "um uh and it's a it's a little little library that we've written that allows you to render your backb apps on the",
    "start": "33760",
    "end": "38879"
  },
  {
    "text": "client and then the server so I want to start with a brief history lesson of the",
    "start": "38879",
    "end": "44399"
  },
  {
    "start": "40000",
    "end": "105000"
  },
  {
    "text": "Airbnb web app so in 2008 which is when",
    "start": "44399",
    "end": "50000"
  },
  {
    "text": "we were founded uh this is what this is what it look like this was air bedandbreakfast.com it's a little rails",
    "start": "50000",
    "end": "57320"
  },
  {
    "text": "app very static very typical of the web in 2008 maybe a little bit of JavaScript",
    "start": "57320",
    "end": "63960"
  },
  {
    "text": "sprinkled here and there but for the most part completely serde and it's beautiful right",
    "start": "63960",
    "end": "70759"
  },
  {
    "text": "um and it's amazing in The Last 5 Years there's been so much that has happened I",
    "start": "70759",
    "end": "76159"
  },
  {
    "text": "mean I don't think this conference even existed 5 years ago um and so today our homepage looks like this and this is",
    "start": "76159",
    "end": "84720"
  },
  {
    "text": "basically when you land on the H page there's a backp app that bootstraps itself and there's way more JavaScript",
    "start": "84720",
    "end": "91600"
  },
  {
    "text": "uh way more everything I mean it's probably at least a megabyte sad to say",
    "start": "91600",
    "end": "97200"
  },
  {
    "text": "but uh there's there's been there's been so much Innovation the last few years and uh but I think we're not we're not",
    "start": "97200",
    "end": "103159"
  },
  {
    "text": "quite there yet so it's an exciting time in the world of web apps today there's all these cool Frameworks that allow you",
    "start": "103159",
    "end": "109560"
  },
  {
    "start": "105000",
    "end": "180000"
  },
  {
    "text": "to build Rich apps like backbone Ember",
    "start": "109560",
    "end": "117000"
  },
  {
    "text": "angular uh basically you know there's a million of them there's another one released every day",
    "start": "117119",
    "end": "123280"
  },
  {
    "text": "just like today render um um and there's a lot of fragmentation",
    "start": "123280",
    "end": "129160"
  },
  {
    "text": "and this is kind of what we're seeing mostly this is like the client side MVC model which is very popular these days",
    "start": "129160",
    "end": "134800"
  },
  {
    "text": "so you got the client on the top the server on the bottom basically the idea is most of your app runs on the client",
    "start": "134800",
    "end": "139840"
  },
  {
    "text": "side your your view rendering your routing your like model persistence internationalization all that stuff and",
    "start": "139840",
    "end": "145640"
  },
  {
    "text": "then your Javascript app which is running the client side talks to an API for data pretty standard and the server",
    "start": "145640",
    "end": "151879"
  },
  {
    "text": "can be various levels of Dumb and stateless um and so we've been we've",
    "start": "151879",
    "end": "157760"
  },
  {
    "text": "been making apps like this this is our wish lists app which we released this past I guess about six months ago and",
    "start": "157760",
    "end": "164720"
  },
  {
    "text": "it's a rich backbone app which laser loads data and uses push State and all this fancy stuff and you know it works",
    "start": "164720",
    "end": "171080"
  },
  {
    "text": "pretty well it's uh it's backbone on Rails",
    "start": "171080",
    "end": "176239"
  },
  {
    "text": "and it's it's it's a pretty nice user experience but there's a few isses issues that we noticed so first of all",
    "start": "176239",
    "end": "182280"
  },
  {
    "start": "180000",
    "end": "235000"
  },
  {
    "text": "there's poor SEO you all know why because it renders on the client side it's not serving anything to crawlers um but more importantly there's",
    "start": "182280",
    "end": "189959"
  },
  {
    "text": "a huge performance hit because before you can really render anything meaningful to the user you have to",
    "start": "189959",
    "end": "196480"
  },
  {
    "text": "download and parse a couple hundred kilobytes of JavaScript um and then evaluate it and",
    "start": "196480",
    "end": "202000"
  },
  {
    "text": "then finally you can start to render your UI and finally there's uh duplicated",
    "start": "202000",
    "end": "208840"
  },
  {
    "text": "application logic often times because especially if you start off with a rails app you tend to migrate more and more of",
    "start": "208840",
    "end": "215319"
  },
  {
    "text": "your logic to JavaScript to backbone and you start to duplicate things like currency formatting internationalization",
    "start": "215319",
    "end": "221439"
  },
  {
    "text": "like view logic weird you know weird model logic um and then finally context",
    "start": "221439",
    "end": "228159"
  },
  {
    "text": "switching so sometimes you'll be switching between working in JavaScript working in Ruby uh and I think that's a",
    "start": "228159",
    "end": "233400"
  },
  {
    "text": "bit of a drag and so it's still a bit of a pain in the ass to build fast maintainable",
    "start": "233400",
    "end": "239280"
  },
  {
    "start": "235000",
    "end": "252000"
  },
  {
    "text": "Rich client apps there's no Silver Bullet there's no like great way uh for a small team to build a really scalable",
    "start": "239280",
    "end": "247000"
  },
  {
    "text": "performant beautiful experience uh which is a shame so we started",
    "start": "247000",
    "end": "254159"
  },
  {
    "start": "252000",
    "end": "307000"
  },
  {
    "text": "thinking what if our Javascript app could run on both sides what problems would this",
    "start": "254159",
    "end": "259680"
  },
  {
    "text": "solve uh and wouldn't this be awesome I've been I've been daming of this for like years and we we're getting close um",
    "start": "259680",
    "end": "267440"
  },
  {
    "text": "so this is what that might look like this is the Holy Grail which you've probably you probably heard people refer to this as the Holy Grail so the bulk of",
    "start": "267440",
    "end": "273360"
  },
  {
    "text": "your application logic runs shared between the client and the server so it's routing your V rendering your model",
    "start": "273360",
    "end": "280560"
  },
  {
    "text": "logic all that kind of stuff and then of course certain things only happen on one side or the other whether that's handling user like you know browser",
    "start": "280560",
    "end": "287320"
  },
  {
    "text": "events or logging might just happen on the server but the idea is your",
    "start": "287320",
    "end": "293120"
  },
  {
    "text": "application the core of your application shouldn't be restricted to one environment or another it should be able to run on both sides and and both both",
    "start": "293120",
    "end": "301479"
  },
  {
    "text": "sides can talk to the same API in the same way this is this dream and so it'll provide SEO because",
    "start": "301479",
    "end": "309199"
  },
  {
    "text": "you're you're serving up real uh real content from your server and initial page load is",
    "start": "309199",
    "end": "316199"
  },
  {
    "text": "drastically faster I can't really stress this enough I mean you saw Steve sud's keynote this morning but um so Twitter",
    "start": "316199",
    "end": "323919"
  },
  {
    "text": "you remember Twitter used to have a hashbang in the oral about a year ago year and a half ago so they that was pretty cute this all client side is very",
    "start": "323919",
    "end": "330400"
  },
  {
    "text": "uh trendy but then they ended up spending a year and 40 developers switching it back to client side or",
    "start": "330400",
    "end": "336759"
  },
  {
    "text": "switching back to server side rendering because of performance and they had a metric which was first time to first tweet which is how long from refreshing",
    "start": "336759",
    "end": "343400"
  },
  {
    "text": "the page to seeing that first tweet show up and they cut that by five times which",
    "start": "343400",
    "end": "349199"
  },
  {
    "text": "is really significant and there's that's like very directly correlated to uh users staying on your site you",
    "start": "349199",
    "end": "356240"
  },
  {
    "text": "making money so that's that's huge and finally Consolidated application logic",
    "start": "356240",
    "end": "361639"
  },
  {
    "text": "because it's all in JavaScript um and it's all in one place you don't have to duplicate stuff which is",
    "start": "361639",
    "end": "368680"
  },
  {
    "text": "awesome so we started looking around we thought has anyone already done this because we don't want to be in the",
    "start": "368680",
    "end": "373880"
  },
  {
    "start": "369000",
    "end": "482000"
  },
  {
    "text": "business of creating Frameworks because that's not really fun to do or good use of time so we look there's there's a few",
    "start": "373880",
    "end": "381680"
  },
  {
    "text": "projects out there there's meteor which you've probably heard of um it's it's got some really interesting client",
    "start": "381680",
    "end": "387319"
  },
  {
    "text": "server side stuff it runs on node but it doesn't actually render on the server side it just has a phantomjs",
    "start": "387319",
    "end": "393960"
  },
  {
    "text": "plugin which is it can scrape itself so that that wasn't really cool uh and it",
    "start": "393960",
    "end": "399440"
  },
  {
    "text": "also owns the entire data layer it kind of expects everything to be in and uh it it wants to own that and it's hard",
    "start": "399440",
    "end": "406280"
  },
  {
    "text": "to attack that on to an to an existing app or to a restful API there's a similar project called",
    "start": "406280",
    "end": "412360"
  },
  {
    "text": "Derby uh which is also a node framework and this is cool it actually does client side server side rendering using",
    "start": "412360",
    "end": "418560"
  },
  {
    "text": "handlebars and does some really neat stuff it's real time um but again it owns that whole data layer in and",
    "start": "418560",
    "end": "425000"
  },
  {
    "text": "that wasn't going to fly for us and you guys might remember mojito",
    "start": "425000",
    "end": "430479"
  },
  {
    "text": "you guys have heard of mojito has anyone heard of mojito in the last two",
    "start": "430479",
    "end": "435520"
  },
  {
    "text": "years so it came out in 2010 and I was really excited about it uh because it was it's this node.js thing your your",
    "start": "435520",
    "end": "442199"
  },
  {
    "text": "app can run everywhere um but it didn't really catch on I think there's a couple reasons one is it's like very full stack",
    "start": "442199",
    "end": "448879"
  },
  {
    "text": "you have to you have to it's good for a green failed app right you have to write your whole app in mojito and another",
    "start": "448879",
    "end": "455680"
  },
  {
    "text": "issue is it's yui which is Yahoo user interface Library so Yahoo is a bit of a",
    "start": "455680",
    "end": "460960"
  },
  {
    "text": "baring problem with its open source projects if you were anything like me when you saw that blog post announcing",
    "start": "460960",
    "end": "467080"
  },
  {
    "text": "mojito and you look at the code sample the first thing you saw was yui dot then you stopped reading which is a kind of a",
    "start": "467080",
    "end": "473759"
  },
  {
    "text": "sad reality but um but M has some cool  in it I would like to look at that",
    "start": "473759",
    "end": "479639"
  },
  {
    "text": "uh that's be a cool another talk so we thought all right well how hard can it be let's see what we can",
    "start": "479639",
    "end": "488280"
  },
  {
    "start": "482000",
    "end": "528000"
  },
  {
    "text": "do and we started with our mobile web app mobile website so you could go check",
    "start": "488280",
    "end": "493720"
  },
  {
    "text": "this out on your phone if you want right now this is m. arb.com this was a backbone and rails",
    "start": "493720",
    "end": "499919"
  },
  {
    "text": "app just like our wish list app uh but we thought it would be a great test bed",
    "start": "499919",
    "end": "505560"
  },
  {
    "text": "to try a new approach because it's fairly separate from the rest of the site it was kind of its own little code",
    "start": "505560",
    "end": "511440"
  },
  {
    "text": "base so we decided to replace rails with node with",
    "start": "511440",
    "end": "517399"
  },
  {
    "text": "the the dream of sharing code between client server and this is in production this",
    "start": "517399",
    "end": "522479"
  },
  {
    "text": "has been in production since I guess December uh so you can check it out and so this was the Genesis of",
    "start": "522479",
    "end": "530880"
  },
  {
    "text": "render so what is render",
    "start": "530880",
    "end": "536240"
  },
  {
    "text": "it's JavaScript MVC on the client server so models views collections",
    "start": "536240",
    "end": "542760"
  },
  {
    "text": "Etc backbone and handlebars is the back is excuse me is the backbone of render",
    "start": "542760",
    "end": "548880"
  },
  {
    "text": "um and there's there's a bunch of Base classes which I'll get into later but but the the basic idea is it builds on",
    "start": "548880",
    "end": "555040"
  },
  {
    "text": "top of the standard backbone classes and then adds a few more and kind of decorates them rather than trying to",
    "start": "555040",
    "end": "561360"
  },
  {
    "text": "reinvent the wheel because many of us know the backbone conventions and so why would we uh rewrite that when we already",
    "start": "561360",
    "end": "567360"
  },
  {
    "text": "have a community and then finally it's a set of Express middleware because you know",
    "start": "567360",
    "end": "574000"
  },
  {
    "text": "Express is the the de facto node.js web server basically and the idea is Express",
    "start": "574000",
    "end": "579480"
  },
  {
    "text": "like backbone has a large community set of conventions so you can just tack on render app to an existing Express app",
    "start": "579480",
    "end": "585880"
  },
  {
    "text": "which is kind of cool then this is actually finally um and there's minimal",
    "start": "585880",
    "end": "591279"
  },
  {
    "text": "glue between client and server to make it all kind of work together so here's what it's not it's",
    "start": "591279",
    "end": "599440"
  },
  {
    "text": "not a batteries included web framework it's not something that you're going to go to your boss tomorrow and say I'm going to rewrite our entire site and",
    "start": "599440",
    "end": "605519"
  },
  {
    "text": "render um yet and it's not",
    "start": "605519",
    "end": "611320"
  },
  {
    "text": "finished so it's it's a bit of a prototype which we have running in production on a few apps and it works uh",
    "start": "611320",
    "end": "617000"
  },
  {
    "text": "and if you're the brave sort I encourage you to to download it today and uh poke around on it I'll show the link in a",
    "start": "617000",
    "end": "623600"
  },
  {
    "text": "bit so here were our basic design goals for render so the first and foremost is",
    "start": "623600",
    "end": "630920"
  },
  {
    "start": "624000",
    "end": "863000"
  },
  {
    "text": "write application logic agnostic to environment the core of your application logic is things like what data should I",
    "start": "630920",
    "end": "638040"
  },
  {
    "text": "fetch what attributes on this model am I interested in how do I transform those attributes into something to pass to a",
    "start": "638040",
    "end": "644639"
  },
  {
    "text": "view what is my template a lot of that um isn't necessarily tied to an",
    "start": "644639",
    "end": "650120"
  },
  {
    "text": "environment and so the goal is to abstract that out from from the environment so another",
    "start": "650120",
    "end": "657560"
  },
  {
    "text": "goal is to make it a library and not a framework and so I kind of think of",
    "start": "657560",
    "end": "665279"
  },
  {
    "text": "backbone versus Ember so backbone is very much a library it's kind of a set of set of classes you can build",
    "start": "665279",
    "end": "671800"
  },
  {
    "text": "upon uh rather than like an all-encompassing solution for every problem you could ever have and I think it's easier for people to get started",
    "start": "671800",
    "end": "678120"
  },
  {
    "text": "and it's easier to maintain and then people can write plugins to do the rest we want to minimize code that looks",
    "start": "678120",
    "end": "685480"
  },
  {
    "text": "like this if server then do some stuff else do some stuff if you've got code",
    "start": "685480",
    "end": "690920"
  },
  {
    "text": "like this that's like all over your application that's a sign that you did something wrong right that's a leaky abstraction and so of course sometimes",
    "start": "690920",
    "end": "697399"
  },
  {
    "text": "you have to do this but the idea is to consolidate that in certain places and and provide the abstractions so the",
    "start": "697399",
    "end": "703120"
  },
  {
    "text": "application developer doesn't have to think about that if they don't have to if they don't want to to go along with that we want to hide",
    "start": "703120",
    "end": "710839"
  },
  {
    "text": "as much of this complexity for solving this problem into the library rather than the application",
    "start": "710839",
    "end": "717399"
  },
  {
    "text": "code it was important for us to talk to a restful API for all the data because we already had it it was powering other",
    "start": "718240",
    "end": "724000"
  },
  {
    "text": "apps and um it's just you just like backbone is set up by default to talk to speak rest so this this was important",
    "start": "724000",
    "end": "730519"
  },
  {
    "text": "for us it also kind of precludes real time so real time is this other big area",
    "start": "730519",
    "end": "737160"
  },
  {
    "text": "of uh of research in web apps which we didn't even",
    "start": "737160",
    "end": "742240"
  },
  {
    "text": "address we didn't want to have a server side Dom there are implementations out there but they're slow and uh it just",
    "start": "742240",
    "end": "749519"
  },
  {
    "text": "doesn't feel right to have to use a server side Dom and like I mentioned before we want",
    "start": "749519",
    "end": "756720"
  },
  {
    "text": "it to be some a set of simple Express middleware that you can include into an Express",
    "start": "756720",
    "end": "763680"
  },
  {
    "text": "app so there's a few base classes I'm just going to mention quickly um that we",
    "start": "763680",
    "end": "768720"
  },
  {
    "text": "provide so there's a base app and app is the kind of the context that is the glue",
    "start": "768720",
    "end": "774160"
  },
  {
    "text": "that holds everything else together uh every model view collection has a refence to app which is uh kind of an",
    "start": "774160",
    "end": "782160"
  },
  {
    "text": "unfortunate thing that comes from the fact that on node you have these concurrent requests happening at all",
    "start": "782160",
    "end": "787519"
  },
  {
    "text": "times and you can't access a global in the browser you might be used to saying window. apppp do you know whatever and",
    "start": "787519",
    "end": "792720"
  },
  {
    "text": "mutate state or access State uh you can't do that so we have this app that we will inject down into every",
    "start": "792720",
    "end": "799959"
  },
  {
    "text": "class there's a base model which uh inherits from backbone model so I forgot",
    "start": "799959",
    "end": "805880"
  },
  {
    "text": "to mention that app also inherits from backbone model we do that mostly so we can can set attributes on it and we can listen for changes on attributes it's",
    "start": "805880",
    "end": "812399"
  },
  {
    "text": "just useful so base model extends back on model and that provides just a few",
    "start": "812399",
    "end": "819199"
  },
  {
    "text": "utilities for making it uh easier to to work within render and de handle like",
    "start": "819199",
    "end": "826240"
  },
  {
    "text": "whether you're on the client or the server basic collection is the same same",
    "start": "826240",
    "end": "831680"
  },
  {
    "text": "idea we've got base View and that's a little more interesting um on the server",
    "start": "831680",
    "end": "837360"
  },
  {
    "text": "we override all the Dom methods um and we also",
    "start": "837360",
    "end": "842519"
  },
  {
    "text": "provide kind of a view life cycle which is similar to some of these other backbone uh like plugins I I'll get into",
    "start": "842519",
    "end": "850240"
  },
  {
    "text": "that in a moment we've got an app view which extends base View and is responsible for",
    "start": "850240",
    "end": "856360"
  },
  {
    "text": "kind of global events like user action user interaction",
    "start": "856360",
    "end": "862079"
  },
  {
    "text": "events we've got a client router and a server router which extend a base router and this is this is not the backbone",
    "start": "862079",
    "end": "867440"
  },
  {
    "start": "863000",
    "end": "905000"
  },
  {
    "text": "router this is uh a class of our own so the base router handles holds all the",
    "start": "867440",
    "end": "873480"
  },
  {
    "text": "the common logic between parsing routes and uh and matching routes and handling",
    "start": "873480",
    "end": "881519"
  },
  {
    "text": "that part of the app and then the client router has a backbone router that it that it delegates to and then the server",
    "start": "881519",
    "end": "887240"
  },
  {
    "text": "router will just delegate to express there's also we have like a",
    "start": "887240",
    "end": "892519"
  },
  {
    "text": "model store in a collection store and a fetcher and these are a few classes that just make it easier to manage like",
    "start": "892519",
    "end": "899759"
  },
  {
    "text": "bootstrapping data into your application and I'll get into that in a",
    "start": "899759",
    "end": "904800"
  },
  {
    "text": "second so I thought it might be easy to start with the directory structure of first render and then of an application",
    "start": "904800",
    "end": "911519"
  },
  {
    "start": "905000",
    "end": "945000"
  },
  {
    "text": "so render is the library right not the application so render has a few main",
    "start": "911519",
    "end": "917199"
  },
  {
    "text": "directories things are split out into client shared and server then their subdirectories and the idea is that",
    "start": "917199",
    "end": "924279"
  },
  {
    "text": "client and shared we will send to the client we'll send to the browser",
    "start": "924279",
    "end": "929560"
  },
  {
    "text": "but server obviously we won't server might hold things like middleware and the server router and then client will",
    "start": "929560",
    "end": "936360"
  },
  {
    "text": "have the client router then shared is the bulk of it right there's like the base the base app the base model base",
    "start": "936360",
    "end": "944440"
  },
  {
    "text": "collection and so in an application there's pretty basic directory structure there's the app",
    "start": "944880",
    "end": "952759"
  },
  {
    "start": "945000",
    "end": "995000"
  },
  {
    "text": "directory um public which is assets and stuff and then server which is server specific stuff like middleware and so if",
    "start": "952759",
    "end": "959720"
  },
  {
    "text": "we look into app there's this kind of looks like hybrid of a rails app and a",
    "start": "959720",
    "end": "965440"
  },
  {
    "text": "backbone app kind of so there's like Collections and models which you're used to we've introduced",
    "start": "965440",
    "end": "971160"
  },
  {
    "text": "controllers there's views and templates and then a few Class A few a",
    "start": "971160",
    "end": "976759"
  },
  {
    "text": "few a few modules here app.js which is your your base application context that",
    "start": "976759",
    "end": "982560"
  },
  {
    "text": "ties everything together there's a router and a routes",
    "start": "982560",
    "end": "987920"
  },
  {
    "text": "file and so the entire app directory gets sent to the client because that's what's",
    "start": "987920",
    "end": "993759"
  },
  {
    "text": "shared so one thing that's really neat about this approach my probably my favorite part is uh using Stitch so I",
    "start": "993759",
    "end": "1000079"
  },
  {
    "start": "995000",
    "end": "1058000"
  },
  {
    "text": "don't know if you've heard of Stitch it's it's uh similar to browserify it's a way for you to package up your modules",
    "start": "1000079",
    "end": "1005959"
  },
  {
    "text": "to use them in a commonjs way in the in the client side and it allows us to to use modules",
    "start": "1005959",
    "end": "1012959"
  },
  {
    "text": "in the same way on the client server so on the server we might say VAR user equals require and then the path to the",
    "start": "1012959",
    "end": "1021160"
  },
  {
    "text": "user and one thing that we can also do on the server is so render is shipped as",
    "start": "1021160",
    "end": "1026438"
  },
  {
    "text": "an npm module so you you can require into an npm module to get at the modules",
    "start": "1026439",
    "end": "1032640"
  },
  {
    "text": "that are inside of it so we can say base view equals require and then the path to that base view within the module using",
    "start": "1032640",
    "end": "1039280"
  },
  {
    "text": "some Stitch trickery uh with Grunt in our deploy process we can do the same thing in the",
    "start": "1039280",
    "end": "1045880"
  },
  {
    "text": "client it's exactly the same that's that's really neat because you just think about the path to the module you",
    "start": "1045880",
    "end": "1051600"
  },
  {
    "text": "don't think about um you don't have to deal with AMD or anything like",
    "start": "1051600",
    "end": "1056960"
  },
  {
    "text": "that and here's the routes file it should look similar to rails basically you're matching a pattern to a",
    "start": "1057480",
    "end": "1065080"
  },
  {
    "text": "controller and an action and then you can also pass additional parameters if you want to but in this case this is the",
    "start": "1065080",
    "end": "1070720"
  },
  {
    "text": "user's controller and the show action so I'm going to walk through the",
    "start": "1070720",
    "end": "1077600"
  },
  {
    "text": "rendering cycle of like rendering a user show action it's a bit complicated so",
    "start": "1077600",
    "end": "1083440"
  },
  {
    "text": "stay with me so on the server it looks like this",
    "start": "1083440",
    "end": "1088880"
  },
  {
    "start": "1086000",
    "end": "1217000"
  },
  {
    "text": "when we start the express server we'll parse that routes file and mount uh",
    "start": "1088880",
    "end": "1094280"
  },
  {
    "text": "Express routes on the on the express app that correspond to each of those",
    "start": "1094280",
    "end": "1100760"
  },
  {
    "text": "routes and then let's say we've got a request coming in for users SL",
    "start": "1100760",
    "end": "1106000"
  },
  {
    "text": "someid uh users 1337 so this is this comes into the server uh Express will will handle it'll",
    "start": "1106000",
    "end": "1112960"
  },
  {
    "text": "match a route so there so then we have our router class that matches that pattern",
    "start": "1112960",
    "end": "1119120"
  },
  {
    "text": "to the user's show action and then it'll also create these",
    "start": "1119120",
    "end": "1124760"
  },
  {
    "text": "pams right and so it pulls the ID out of the pattern out of the URL and grabs",
    "start": "1124760",
    "end": "1129840"
  },
  {
    "text": "that so ID equals 1337 then the router will will grab the",
    "start": "1129840",
    "end": "1134880"
  },
  {
    "text": "controller and so we use naming conventions just to make it easier so user corresponds to user's controller so the",
    "start": "1134880",
    "end": "1141520"
  },
  {
    "text": "riter will grab that it'll execute the show action on the user controller and pass in these",
    "start": "1141520",
    "end": "1150640"
  },
  {
    "text": "prams and then what what the action does is the action just has two responsibilities",
    "start": "1151919",
    "end": "1157240"
  },
  {
    "text": "fetching the data and saying which view to render so the action in this case",
    "start": "1157240",
    "end": "1162760"
  },
  {
    "text": "will say fetch user number 1337 and then use the user Show view",
    "start": "1162760",
    "end": "1169000"
  },
  {
    "text": "class to render this",
    "start": "1169000",
    "end": "1172960"
  },
  {
    "text": "page so then the router will take that information it'll render the the it'll",
    "start": "1175240",
    "end": "1182039"
  },
  {
    "text": "create a new instance of the user Show view and it'll inject the data and then on that view instance",
    "start": "1182039",
    "end": "1189039"
  },
  {
    "text": "it'll call get HTML and so that's a method I've added to Backbone view to the Bas view so get HTML will do things",
    "start": "1189039",
    "end": "1195480"
  },
  {
    "text": "like uh you know evaluate the template with the data and it's the outer HTML of",
    "start": "1195480",
    "end": "1201880"
  },
  {
    "text": "the view and then we just hand that to express Express decorates that with a layout and serves it so it sounds pretty",
    "start": "1201880",
    "end": "1210000"
  },
  {
    "text": "basic right like a pretty basic kind of rendering flow of any MVC app um it's very similar on the client",
    "start": "1210000",
    "end": "1217240"
  },
  {
    "text": "side with a few differences so instead of on server startup we have on page load the router",
    "start": "1217240",
    "end": "1225280"
  },
  {
    "text": "will parse that routes file and mount each one of those as a backbone route",
    "start": "1225280",
    "end": "1230640"
  },
  {
    "text": "and when a push State event comes in because it's all push state if you don't have Push State enabled then you just",
    "start": "1231039",
    "end": "1236919"
  },
  {
    "text": "fall through to the server we don't even can deal with you it's nice um so when a push dat event comes in for a certain",
    "start": "1236919",
    "end": "1244240"
  },
  {
    "text": "path the router will match it to controller and action and prams it'll find the",
    "start": "1244240",
    "end": "1251480"
  },
  {
    "text": "controller it'll execute the show action with the parameters the show action says to fetch",
    "start": "1251480",
    "end": "1257520"
  },
  {
    "text": "this data use this view the rouer will then instantiate The View with the data all should sound",
    "start": "1257520",
    "end": "1264320"
  },
  {
    "text": "familiar and then the where the difference is the router calls view. render and so that",
    "start": "1264320",
    "end": "1271120"
  },
  {
    "text": "will then the view will create a dime element and insert all of the HTML into the Dom element and then we just insert",
    "start": "1271120",
    "end": "1278159"
  },
  {
    "text": "that into the Dom so this whole part is exactly the same",
    "start": "1278159",
    "end": "1285000"
  },
  {
    "text": "right this whole part is just application logic and it's it's not specific to environment at",
    "start": "1285000",
    "end": "1291200"
  },
  {
    "text": "all now the rest of it is uh is specific to environment but",
    "start": "1291200",
    "end": "1297640"
  },
  {
    "text": "it's analogous it's like this par it's a parallel metaphor that doesn't make",
    "start": "1297640",
    "end": "1304159"
  },
  {
    "text": "sense it's parallel um and so that's the whole idea behind render so I want to",
    "start": "1304159",
    "end": "1309400"
  },
  {
    "text": "look at some code so here's the users controller with",
    "start": "1309400",
    "end": "1314799"
  },
  {
    "text": "a show action and it's just a real basic commonjs module this is the most trivial case so we've",
    "start": "1314799",
    "end": "1321840"
  },
  {
    "text": "got the key here is that's the name of the action show um and we pass in several things to",
    "start": "1321840",
    "end": "1328720"
  },
  {
    "text": "it we pass in prams and then a call back prams in this case is ID equals",
    "start": "1328720",
    "end": "1334360"
  },
  {
    "text": "1337 and the call back is uh is kind of like the render call back so right here",
    "start": "1334360",
    "end": "1341640"
  },
  {
    "text": "calling it first argument is null which means because the first argument in no JS convention is often an error so this",
    "start": "1341640",
    "end": "1348000"
  },
  {
    "text": "means there's no error and then we're going to execute it with uh telling it",
    "start": "1348000",
    "end": "1353039"
  },
  {
    "text": "that this is the view we're going to render and that's that's like the total trivial case this is if you're not",
    "start": "1353039",
    "end": "1359360"
  },
  {
    "text": "fetching any data you're just rendering an action it's it's synchronous um that's what you do but",
    "start": "1359360",
    "end": "1366400"
  },
  {
    "text": "that's not very interesting so let's actually fetch the",
    "start": "1366400",
    "end": "1371919"
  },
  {
    "text": "data so it's a little more complicated once we fetched in data but basically the idea is is we",
    "start": "1373080",
    "end": "1381320"
  },
  {
    "start": "1374000",
    "end": "1511000"
  },
  {
    "text": "specify which which model or collection we want so here we're saying we have a a",
    "start": "1381320",
    "end": "1388200"
  },
  {
    "text": "model property and then that corresponds to a user model with prams you pass in",
    "start": "1388200",
    "end": "1395880"
  },
  {
    "text": "these prams and so pram ID equals",
    "start": "1395880",
    "end": "1399760"
  },
  {
    "text": "1337 uh and then we have we have access to our app here our little app uh",
    "start": "1401640",
    "end": "1407640"
  },
  {
    "text": "instance because we're executing this within the context of the router so you can call this do redirect to this dot uh",
    "start": "1407640",
    "end": "1413919"
  },
  {
    "text": "a few other things but the app is kind of the glue so the app has a fetch method which delegates to some fetcher",
    "start": "1413919",
    "end": "1420919"
  },
  {
    "text": "class uh so you you pass in what you want to fetch and then you give it a",
    "start": "1420919",
    "end": "1426520"
  },
  {
    "text": "call back and so when it's done fetching or if it's fetched from the",
    "start": "1426520",
    "end": "1432679"
  },
  {
    "text": "cache it will then it calls the call back and so that first parameter is air so if say",
    "start": "1432679",
    "end": "1439240"
  },
  {
    "text": "there was a 500 from the from the API or a 400 or a 404 whatever you can handle",
    "start": "1439240",
    "end": "1445080"
  },
  {
    "text": "that in the middleware so it just passes that through and then you tell what what the view is and then results here is an",
    "start": "1445080",
    "end": "1451480"
  },
  {
    "text": "object with the key is model and the value is the actual model instance so this is a bit of abstraction",
    "start": "1451480",
    "end": "1457279"
  },
  {
    "text": "right because you could imagine we could just create could do VAR user equals new user user. fetch um what what",
    "start": "1457279",
    "end": "1464159"
  },
  {
    "text": "abstracting this does is it is it gives us some flexibility and and it gives us like there's uh some caching that can",
    "start": "1464159",
    "end": "1470640"
  },
  {
    "text": "happen there's air handling also it it's important for the bootstrapping part uh for that first",
    "start": "1470640",
    "end": "1477960"
  },
  {
    "text": "render and I'll show you how that works but basically when we fetch all of our data for a certain view we end up",
    "start": "1477960",
    "end": "1483159"
  },
  {
    "text": "needing to bootstrap it onto the page and so this will handle that",
    "start": "1483159",
    "end": "1488760"
  },
  {
    "text": "part and now remember this code gets run on both sides this is run on the client side and the server",
    "start": "1488760",
    "end": "1495200"
  },
  {
    "text": "side it's kind of hard to wrap your head around it first so on push dat action this will this",
    "start": "1495200",
    "end": "1501200"
  },
  {
    "text": "will this will execute it'll fire an xhr to to the API get your data and then on",
    "start": "1501200",
    "end": "1507760"
  },
  {
    "text": "the server it'll just go straight to the API so let's look at a view this would be the view for this",
    "start": "1507760",
    "end": "1513880"
  },
  {
    "start": "1511000",
    "end": "1579000"
  },
  {
    "text": "action so we're going to extend the base View and you can see we're just using",
    "start": "1513880",
    "end": "1521000"
  },
  {
    "text": "like the commonjs pattern because we we we're using Stitch here and this is just classic backbone",
    "start": "1521000",
    "end": "1527480"
  },
  {
    "text": "right so base View do extend we'll pass in some stuff and so here we're passing class name you can also add advents hash",
    "start": "1527480",
    "end": "1534320"
  },
  {
    "text": "and all sorts of other methods but you notice there's no render method uh stay",
    "start": "1534320",
    "end": "1540200"
  },
  {
    "text": "tuned for that and we're also adding this ID to the Constructor this is a bit of a this",
    "start": "1540200",
    "end": "1546799"
  },
  {
    "text": "is this is one thing I'd like to find a better way to do to do this but",
    "start": "1546799",
    "end": "1552080"
  },
  {
    "text": "basically the The Constructor The View needs to know what it is and that helps for hydrating it later",
    "start": "1552080",
    "end": "1559200"
  },
  {
    "text": "once you get to the client side so okay yeah so we could add events to this event handlers different",
    "start": "1559200",
    "end": "1566320"
  },
  {
    "text": "things so this view does get run on both sides but none of that event stuff will",
    "start": "1566320",
    "end": "1572200"
  },
  {
    "text": "ever happen on the server it's just for the client and it's convenience to keep it in the same in the same",
    "start": "1572200",
    "end": "1578159"
  },
  {
    "text": "class so that's the user Show view here's the user Show view template and",
    "start": "1578159",
    "end": "1585440"
  },
  {
    "start": "1579000",
    "end": "1631000"
  },
  {
    "text": "um it's very basic we're just going to say username name from City this is this is",
    "start": "1585440",
    "end": "1590880"
  },
  {
    "text": "handlebars and what this turns into when you runer the HTML is something like this",
    "start": "1590880",
    "end": "1597399"
  },
  {
    "text": "so we've got our Dom element with the class name we specified we've got our content um but there's a few data",
    "start": "1597399",
    "end": "1604080"
  },
  {
    "text": "elements here sorry data attributes we've added so the first one is data- View and that specifies what the view",
    "start": "1604080",
    "end": "1611440"
  },
  {
    "text": "class is that we rendered that it corresponds to and that's important for once we get to the client side we need",
    "start": "1611440",
    "end": "1617240"
  },
  {
    "text": "to match set up with an actual class um we also specify what the the",
    "start": "1617240",
    "end": "1623080"
  },
  {
    "text": "user sorry what the model name and the model ID are because we need to fetch that from the bootstrap",
    "start": "1623080",
    "end": "1630000"
  },
  {
    "text": "data so you might be asking where did that data come from where's the render",
    "start": "1630000",
    "end": "1635080"
  },
  {
    "start": "1631000",
    "end": "1705000"
  },
  {
    "text": "method how do I customize what gets past the template and the answer is just sensible defaults so my one of my",
    "start": "1635080",
    "end": "1642640"
  },
  {
    "text": "hypothesis about views is you should never write a a render method ever unless you're doing something custom",
    "start": "1642640",
    "end": "1648559"
  },
  {
    "text": "which is what Daryl was saying um there's a few methods you can extend",
    "start": "1648559",
    "end": "1654640"
  },
  {
    "text": "so let's say so by default The View like if you call render",
    "start": "1654640",
    "end": "1659880"
  },
  {
    "text": "if you call get HTML it knows what the template name is based on the name of the view it knows what data by default",
    "start": "1659880",
    "end": "1666519"
  },
  {
    "text": "because uh if you pass it a model or a collection it'll basically just call two Json on it and do something smart but if",
    "start": "1666519",
    "end": "1672559"
  },
  {
    "text": "you want to change that you can so there's a get template data method for example which by default is just model",
    "start": "1672559",
    "end": "1677760"
  },
  {
    "text": "2J on so let's say we want to decorate what we're passing to the template with some",
    "start": "1677760",
    "end": "1683440"
  },
  {
    "text": "other data so we call Super here with JavaScript um and so data in this case",
    "start": "1683440",
    "end": "1691360"
  },
  {
    "text": "is basically just model. tojson and then we can decorate that with let's say name",
    "start": "1691360",
    "end": "1698000"
  },
  {
    "text": "uppercase because we're very shouty so uh return extend the data with name",
    "start": "1698000",
    "end": "1703519"
  },
  {
    "text": "uppercase then we can change our template to have the key",
    "start": "1703519",
    "end": "1708760"
  },
  {
    "start": "1705000",
    "end": "1780000"
  },
  {
    "text": "and then there it is so that's just a little example of with views there's a",
    "start": "1708760",
    "end": "1714440"
  },
  {
    "text": "lot of other stuff with views there's actually this whole view hierarchy and a declarative way of nesting your views uh using a handlebars Helper but I don't",
    "start": "1714440",
    "end": "1720679"
  },
  {
    "text": "think I have time to get into that quite yet so stay tuned for future updates here's",
    "start": "1720679",
    "end": "1727840"
  },
  {
    "text": "what that HTML looks like in the context of your entire page on your first load",
    "start": "1727840",
    "end": "1734080"
  },
  {
    "text": "so this is a bit simplified but and bold here that's that's our view",
    "start": "1734080",
    "end": "1739200"
  },
  {
    "text": "the rest of it's in the layout um and at the bottom we bootstrap",
    "start": "1739200",
    "end": "1746200"
  },
  {
    "text": "our app so we create our app instance and so window. apppp is app and that's really useful because you can go in the",
    "start": "1746200",
    "end": "1752720"
  },
  {
    "text": "in the inspector and type app. router do you know all sorts of stuff and kind of inspect the state of your app and then",
    "start": "1752720",
    "end": "1759640"
  },
  {
    "text": "we have a bootstrap data method so this is everything that we've all the data that we uh that we fetched in the",
    "start": "1759640",
    "end": "1766120"
  },
  {
    "text": "controller we want to pass that through so it can be hydrated into like real classes once we get to the client",
    "start": "1766120",
    "end": "1772159"
  },
  {
    "text": "side so in this case um it's it's a user there's the",
    "start": "1772159",
    "end": "1777840"
  },
  {
    "text": "data and and whatnot so this leads to view hydration",
    "start": "1777840",
    "end": "1783440"
  },
  {
    "start": "1780000",
    "end": "1896000"
  },
  {
    "text": "so one of the the tricky things when we first came across this problem is so do",
    "start": "1783440",
    "end": "1788799"
  },
  {
    "text": "you when you load the page how do you attach all your background views with the elements how do you attach with the",
    "start": "1788799",
    "end": "1794640"
  },
  {
    "text": "right data do you just you can do two things basically you could just rerender everything and",
    "start": "1794640",
    "end": "1801000"
  },
  {
    "text": "throw away what you had and then you would have uh then all your events are bound and you've got all everything",
    "start": "1801000",
    "end": "1806519"
  },
  {
    "text": "created nicely but then you might be a Flicker and you might lose some important context because somebody could",
    "start": "1806519",
    "end": "1812320"
  },
  {
    "text": "be typing in an input field or whatever and you would lose that um so and then the other approach which is what we",
    "start": "1812320",
    "end": "1817799"
  },
  {
    "text": "decided upon is to to reconstruct your your backbone classes based on the Dom",
    "start": "1817799",
    "end": "1823799"
  },
  {
    "text": "so that's what I'm calling view hydration so the first step is find all",
    "start": "1823799",
    "end": "1830440"
  },
  {
    "text": "the Dom elements with a data view attribute because those are those represent views and so this is like kind of pseudo",
    "start": "1830440",
    "end": "1838600"
  },
  {
    "text": "code to go along with it but basically we would use jQuery and find all the",
    "start": "1838600",
    "end": "1844320"
  },
  {
    "text": "elements and then we want to look at the data attributes and figure out if it",
    "start": "1844440",
    "end": "1849760"
  },
  {
    "text": "corresponds to a model or a collection or both and so we'll figure out what's",
    "start": "1849760",
    "end": "1856320"
  },
  {
    "text": "what's the model name what's the model ID and if we were to log this out in our",
    "start": "1856320",
    "end": "1861720"
  },
  {
    "text": "little example it would be user in 1337 so we know we know the name of the",
    "start": "1861720",
    "end": "1867440"
  },
  {
    "text": "view we know the name of the model so then we would fet fetch the",
    "start": "1867440",
    "end": "1874120"
  },
  {
    "text": "model or collection data from either the model store or the collection store and I'm not going to go too detail about",
    "start": "1874120",
    "end": "1881039"
  },
  {
    "text": "this but but that's when we bootstrap the data we're just shoving everything into the model store the collection store so we can say if our model equals",
    "start": "1881039",
    "end": "1887639"
  },
  {
    "text": "model mod store.get model name model ID and that'll return us like an actual user",
    "start": "1887639",
    "end": "1894518"
  },
  {
    "text": "instance so then we need to get the view class like the backround class that represents that view so we'll grab the",
    "start": "1895120",
    "end": "1903320"
  },
  {
    "start": "1896000",
    "end": "2013000"
  },
  {
    "text": "view name based on the data element we will Rec require that module",
    "start": "1903320",
    "end": "1910480"
  },
  {
    "text": "and then we just instantiate the view instance passing the data so in this case we'll do V view",
    "start": "1910480",
    "end": "1918399"
  },
  {
    "text": "equals New View class pass in the model a few other",
    "start": "1918399",
    "end": "1923279"
  },
  {
    "text": "things and then we'll attach to the to the Dom element that we already have",
    "start": "1923679",
    "end": "1929159"
  },
  {
    "text": "found so view set element VL and then delegate",
    "start": "1929159",
    "end": "1934799"
  },
  {
    "text": "events and that's pretty much all we need to do so then we have we have our view hierarchy can be reconstructed in",
    "start": "1934799",
    "end": "1941360"
  },
  {
    "text": "the client side the real they real backbone views they've got their proper",
    "start": "1941360",
    "end": "1946799"
  },
  {
    "text": "models and the vents are bound and so at that point you just have a backbone app",
    "start": "1946799",
    "end": "1952080"
  },
  {
    "text": "and then the final step is profit um so it's it's a bit of a hoop",
    "start": "1952080",
    "end": "1958159"
  },
  {
    "text": "you have to jump through but then you've got a fully working backb app work running the client",
    "start": "1958159",
    "end": "1964200"
  },
  {
    "text": "side you you browse around it fires per state events and it's just like any other backp app you've ever seen except",
    "start": "1964200",
    "end": "1971600"
  },
  {
    "text": "for that whole First Step so uh render is available starting today look under",
    "start": "1971600",
    "end": "1976960"
  },
  {
    "text": "your seats you've got render and",
    "start": "1976960",
    "end": "1982960"
  },
  {
    "text": "bees just kid I should have put that gif in um so if you go to Airbnb render you",
    "start": "1983320",
    "end": "1989559"
  },
  {
    "text": "can check it out disclaimer there's not enough documentation I'm working on that um",
    "start": "1989559",
    "end": "1994799"
  },
  {
    "text": "there's also a sample app which you can check out render Das app- template which you can find on the GitHub page and it's",
    "start": "1994799",
    "end": "2001360"
  },
  {
    "text": "just a real basic app which uses the public GitHub API as an example so I",
    "start": "2001360",
    "end": "2007320"
  },
  {
    "text": "encourage you to to boot that up and see how it works for",
    "start": "2007320",
    "end": "2012440"
  },
  {
    "text": "you so there's still a lot to do CU it turns out this is a really hard problem",
    "start": "2012440",
    "end": "2017840"
  },
  {
    "start": "2013000",
    "end": "2110000"
  },
  {
    "text": "and it's really difficult to get the right abstractions and you have to touch pretty much every part of the",
    "start": "2017840",
    "end": "2023639"
  },
  {
    "text": "application um so one of the things is to properly share the routing logic",
    "start": "2023639",
    "end": "2028760"
  },
  {
    "text": "between client and server so right now I mentioned we're using backbone router and backbone history in the client side",
    "start": "2028760",
    "end": "2035080"
  },
  {
    "text": "to do all that matching and then we use Express on the server side um that works except for some",
    "start": "2035080",
    "end": "2042799"
  },
  {
    "text": "special cases so until backbone 0.910 which was released I don't know a month ago if your url had a query string in it",
    "start": "2042799",
    "end": "2051839"
  },
  {
    "text": "then it wouldn't match so you end up having to duplicate all your routes or hack around that",
    "start": "2051839",
    "end": "2057320"
  },
  {
    "text": "another thing that's interesting is before matching all of your routes like if you if you have a backbone router and you list your routes backbone reverses",
    "start": "2057320",
    "end": "2065200"
  },
  {
    "text": "the object or the array whatever and then it matches them which is kind of",
    "start": "2065200",
    "end": "2070358"
  },
  {
    "text": "strange so you have to reverse those and then another one that bit Us in the butt a couple days ago on production uh was",
    "start": "2070359",
    "end": "2077679"
  },
  {
    "text": "trailing slashes what the so so on Express if you have a",
    "start": "2077679",
    "end": "2084839"
  },
  {
    "text": "trailing slash it doesn't care it's just you know it'll it'll it's it works fine in a backbone if you have a trailing",
    "start": "2084839",
    "end": "2090320"
  },
  {
    "text": "slash doesn't work um so I just got around that for now really simple",
    "start": "2090320",
    "end": "2095919"
  },
  {
    "text": "Express middleware if somebody lands on your on your site and there trailing slash just redirect them with a 301 that",
    "start": "2095919",
    "end": "2101079"
  },
  {
    "text": "works but if we shared that all that logic in a single",
    "start": "2101079",
    "end": "2106440"
  },
  {
    "text": "module then it wouldn't be an issue so another thing is I'd love to be",
    "start": "2106440",
    "end": "2112200"
  },
  {
    "start": "2110000",
    "end": "2213000"
  },
  {
    "text": "able to Lazy load like view classes and templates and model classes and stuff so at the moment we package everything up",
    "start": "2112200",
    "end": "2118160"
  },
  {
    "text": "into one big bundle which works fine for smaller apps but as our app grows it makes more sense to Lazy load those this",
    "start": "2118160",
    "end": "2128880"
  },
  {
    "text": "it'd be cool to support other templating languages so there's a few um handlebars view helpers which we're using which",
    "start": "2129240",
    "end": "2135520"
  },
  {
    "text": "allow you to do like nested uh view hierarchies and stuff but that's almost kind of a separate that could even be a",
    "start": "2135520",
    "end": "2140960"
  },
  {
    "text": "separate module so it'd be cool to support Jade and whatever else you guys like coffee",
    "start": "2140960",
    "end": "2146079"
  },
  {
    "text": "cup Eco ejs haml Erb on and on um and I'd like to",
    "start": "2146079",
    "end": "2155599"
  },
  {
    "text": "break it down into smaller modules because like for example The View hierarchy could be its own module this router could be its own module which you",
    "start": "2155599",
    "end": "2162079"
  },
  {
    "text": "could just use with a Express app without render um there's a lot of a lot of these little Concepts which would",
    "start": "2162079",
    "end": "2167720"
  },
  {
    "text": "make sense to break out but in our prototype in our getting things to work on production it's just kind of all in",
    "start": "2167720",
    "end": "2174200"
  },
  {
    "text": "there so there's there's some cleanup to be done and I invite you to help also uh we need to rewrite it in",
    "start": "2174200",
    "end": "2181000"
  },
  {
    "text": "JavaScript so right now it's mostly coffee script I know it's controversial it's probably not actually as controversial cuz you're all front end",
    "start": "2181000",
    "end": "2187200"
  },
  {
    "text": "Developers mostly but if you go to like a node.js conference and you say It's All Copy",
    "start": "2187200",
    "end": "2192880"
  },
  {
    "text": "script people won't be happy um so I think it I think it does make sense to",
    "start": "2192880",
    "end": "2198160"
  },
  {
    "text": "write it rewrite in JavaScript because it's easier to solicit contributions from this from the community it's less",
    "start": "2198160",
    "end": "2203480"
  },
  {
    "text": "fragmented um so that's ongoing feel free to help out and there's a lot more",
    "start": "2203480",
    "end": "2209800"
  },
  {
    "text": "to be done because you know I said one of my goals was to create a small Library which you",
    "start": "2209800",
    "end": "2217040"
  },
  {
    "start": "2213000",
    "end": "2312000"
  },
  {
    "text": "can build upon rather than a framework but it turns out Frameworks are useful um and right now it's somewhere in the",
    "start": "2217040",
    "end": "2222680"
  },
  {
    "text": "middle so it enforces some some amount of structure on your app and it'd be cool to make that more modular and",
    "start": "2222680",
    "end": "2229400"
  },
  {
    "text": "support different use cases so Packers are wanted uh I really would",
    "start": "2229400",
    "end": "2237200"
  },
  {
    "text": "love if if you guys are interested to clone the repo poke around in it and submit some issues because um it's",
    "start": "2237200",
    "end": "2243599"
  },
  {
    "text": "really only a few months old and it needs a lot more work but I think this is an interesting approach I don't",
    "start": "2243599",
    "end": "2250520"
  },
  {
    "text": "so for render I'm not in like intending for it to be like the next big thing that everyone uses for every app uh it's",
    "start": "2250520",
    "end": "2256839"
  },
  {
    "text": "more of a prototype and it works and we running in production but I imagine that",
    "start": "2256839",
    "end": "2262000"
  },
  {
    "text": "it's like one stepping stone along the road to a much brighter future um and there's tons of different approaches you",
    "start": "2262000",
    "end": "2268760"
  },
  {
    "text": "could take so in fact uh there was Tim Bron had another talk earlier today on backbone on the",
    "start": "2268760",
    "end": "2276480"
  },
  {
    "text": "server and his approach was very different but also very similar and then Lori is doing a talk tomorrow",
    "start": "2276480",
    "end": "2282880"
  },
  {
    "text": "on backgr on the server and his approach was very different to very similar to both of ours and so there's like a lot",
    "start": "2282880",
    "end": "2288000"
  },
  {
    "text": "of I'd imagine there's a lot of people trying to solve the same problem and there's some common ground uh which we",
    "start": "2288000",
    "end": "2294160"
  },
  {
    "text": "can take advantage of so that's that's actually all I have um so I guess I have",
    "start": "2294160",
    "end": "2301079"
  },
  {
    "text": "some time for questions and I can even show you some code if you want some code",
    "start": "2301079",
    "end": "2306780"
  },
  {
    "text": "[Music]",
    "start": "2306780",
    "end": "2311769"
  },
  {
    "start": "2312000",
    "end": "2542000"
  },
  {
    "text": "cach ability okay caching so there's a couple different caching there's a lot of",
    "start": "2312640",
    "end": "2318960"
  },
  {
    "text": "different layers of caching there could be right so you're talking about like when I mentioned the caching of uh",
    "start": "2318960",
    "end": "2325520"
  },
  {
    "text": "xhrs in the views oh interesting so the only caching we do right now is uh if",
    "start": "2326599",
    "end": "2333680"
  },
  {
    "text": "you're if you try to fetch a model with a certain ID or collection with certain parameters and we already have it then",
    "start": "2333680",
    "end": "2340920"
  },
  {
    "text": "we won't refetch it and we just cach it memory for while we were caching that in local storage which is cool but that",
    "start": "2340920",
    "end": "2347160"
  },
  {
    "text": "introduces a whole other set of problems like what if there's different users using it uh privacy um exceeding your",
    "start": "2347160",
    "end": "2353839"
  },
  {
    "text": "quota so we took that out so we're doing some very basic caching so if you it's",
    "start": "2353839",
    "end": "2359400"
  },
  {
    "text": "just caching within a certain page refresh now you you could add other layers we don't we're not caching views",
    "start": "2359400",
    "end": "2365480"
  },
  {
    "text": "or anything we have pre-compiled handlebars templates um you could add a caching layer on the",
    "start": "2365480",
    "end": "2370839"
  },
  {
    "text": "server or in like a reverse proxy and that wouldn't have anything to do with render",
    "start": "2370839",
    "end": "2376680"
  },
  {
    "text": "itself so to summarize what he asked is uh how the heck does the view hydration",
    "start": "2376680",
    "end": "2382480"
  },
  {
    "text": "really work and you're right so the idea is we go through let me look at a a real",
    "start": "2382480",
    "end": "2391079"
  },
  {
    "text": "app so this is Airbnb mobile oh wait you can't see that can you",
    "start": "2391079",
    "end": "2397960"
  },
  {
    "text": "it's really good resolution",
    "start": "2403480",
    "end": "2407720"
  },
  {
    "text": "so I'm going knock just knocking on",
    "start": "2408800",
    "end": "2413200"
  },
  {
    "text": "[Music] here okay so this is this is running on",
    "start": "2416630",
    "end": "2422960"
  },
  {
    "text": "production um this is made of a bunch of different views this is like the listings show page",
    "start": "2422960",
    "end": "2428160"
  },
  {
    "text": "page uh you can click to other places it's really it's really fast right push",
    "start": "2428160",
    "end": "2433280"
  },
  {
    "text": "State it's pretty cute okay but your question was about view hydration so if",
    "start": "2433280",
    "end": "2438359"
  },
  {
    "text": "we take a look at the source",
    "start": "2438359",
    "end": "2442279"
  },
  {
    "text": "here so there's a bunch of different views that have this data view",
    "start": "2445040",
    "end": "2451440"
  },
  {
    "text": "attribute and for so here is the listing view you can see that all right um so",
    "start": "2452839",
    "end": "2459720"
  },
  {
    "text": "yeah so so we just go through and look for every di element that has an attribute like that and then we can",
    "start": "2459720",
    "end": "2467200"
  },
  {
    "text": "require the the class and then you know the model appropriate",
    "start": "2467200",
    "end": "2472440"
  },
  {
    "text": "model on listing or model or collection and I mean that's about it",
    "start": "2472440",
    "end": "2478880"
  },
  {
    "text": "and so Tim Bron he he did the Flicker and uh in his approach he didn't do this",
    "start": "2478880",
    "end": "2485400"
  },
  {
    "text": "I think mostly because it's hard and it was bit of a prototype um and so but it it it basically works",
    "start": "2485400",
    "end": "2493040"
  },
  {
    "text": "right so you create a VI class for each one of these views and one thing that that it does as well so you see that",
    "start": "2493040",
    "end": "2500000"
  },
  {
    "text": "there's views within views here so when you hydrate it'll go through and create a hierarchy of",
    "start": "2500000",
    "end": "2505520"
  },
  {
    "text": "views and there's like a parent and children and so they can reconstruct all that and attach the right context and",
    "start": "2505520",
    "end": "2512200"
  },
  {
    "text": "attach the right models and collection to each one of those which is actually pretty cool I think um",
    "start": "2512200",
    "end": "2517760"
  },
  {
    "text": "did that answer your question oh and then at the bottom we we bootstrap all the data and so if you if you have an",
    "start": "2517760",
    "end": "2523599"
  },
  {
    "text": "unoptimized API inpoint like a public API which you're developing off of which has a bunch of extra crap in it then",
    "start": "2523599",
    "end": "2529200"
  },
  {
    "text": "this might be a bad idea because there'll be all this stuff which you don't need um but if you can have",
    "start": "2529200",
    "end": "2536599"
  },
  {
    "text": "control over your API responses it's not so bad",
    "start": "2536599",
    "end": "2542559"
  },
  {
    "start": "2542000",
    "end": "2625000"
  },
  {
    "text": "question yeah when you built this did you consider building off of yeah wow this is loud did you consider building",
    "start": "2542559",
    "end": "2549680"
  },
  {
    "text": "off of um backbone marionette or chaplain or one of these other libraries that already adds it some of these",
    "start": "2549680",
    "end": "2555480"
  },
  {
    "text": "additional features to the client side uh that's a good question so I looked at those looked at Marinette a bit I think",
    "start": "2555480",
    "end": "2562359"
  },
  {
    "text": "they all have really useful uh useful things that they add on top of render and I think they can all a lot of those",
    "start": "2562359",
    "end": "2569160"
  },
  {
    "text": "can be used directly with render or can be you could create similar plugins for",
    "start": "2569160",
    "end": "2574960"
  },
  {
    "text": "for render so I don't think render should have opinions about a lot of those things",
    "start": "2574960",
    "end": "2580359"
  },
  {
    "text": "right m marinette's a great example of of things which you can add on top of of it to make it easier and I would like to",
    "start": "2580359",
    "end": "2585880"
  },
  {
    "text": "leave that to the community but definitely some of those Concepts chaplain is really cool if you guys haven't seen chaplain it's it's awesome",
    "start": "2585880",
    "end": "2592760"
  },
  {
    "text": "it's a application framework built on backbone it's all in Coffey script and I was actually inspired by them a lot so",
    "start": "2592760",
    "end": "2598400"
  },
  {
    "text": "my routes file looks exactly like the chaplain routes file they that's where I got the idea for controllers um and they",
    "start": "2598400",
    "end": "2604079"
  },
  {
    "text": "do interesting stuff with how like events they all or sorry all the modules communicate with each other through via",
    "start": "2604079",
    "end": "2610079"
  },
  {
    "text": "events um which is really neat I I'd like to actually be more inspired by",
    "start": "2610079",
    "end": "2618000"
  },
  {
    "text": "it I think I got a few more minutes you guys want to see more code",
    "start": "2618000",
    "end": "2624200"
  },
  {
    "text": "that's how much so how much traffic can it withstand um so far a lot I mean our",
    "start": "2624200",
    "end": "2630400"
  },
  {
    "start": "2625000",
    "end": "2974000"
  },
  {
    "text": "mobile app doesn't get like a whole lot of traffic um but I we've got three web servers",
    "start": "2630400",
    "end": "2638319"
  },
  {
    "text": "running an AWS supporting this and the only reason we have so many is for redundancy I mean CPU is like pegged at",
    "start": "2638319",
    "end": "2644599"
  },
  {
    "text": "basically zero um I mean the the not is super fast compared to Ruby or where",
    "start": "2644599",
    "end": "2650240"
  },
  {
    "text": "else which this replaced um we're not seeing any issues there but I imagine those issues might arise um once we once",
    "start": "2650240",
    "end": "2656640"
  },
  {
    "text": "you start to push push it harder one thing another thing that I'll mention I didn't mention before is like session management so this is something that we",
    "start": "2656640",
    "end": "2662880"
  },
  {
    "text": "added in our apps but isn't part of the framework sorry or the library excuse me",
    "start": "2662880",
    "end": "2668200"
  },
  {
    "text": "um but it's easy to add you know it's use express session middleware and then you can you can uh add it to the to your",
    "start": "2668200",
    "end": "2675480"
  },
  {
    "text": "app instance and I'll I'll create I'll do that in the the sample the app sample",
    "start": "2675480",
    "end": "2680640"
  },
  {
    "text": "so you guys can see it unless there's any more questions I've got three more",
    "start": "2680640",
    "end": "2685880"
  },
  {
    "text": "minutes and I want to show you some code Okay cool so",
    "start": "2685880",
    "end": "2692880"
  },
  {
    "text": "uh okay so let's take a look at a real live",
    "start": "2692880",
    "end": "2700880"
  },
  {
    "text": "app so this is our mobile website um what's a good",
    "start": "2701920",
    "end": "2709040"
  },
  {
    "text": "example so this is this is the search view which corresponds",
    "start": "2710599",
    "end": "2716759"
  },
  {
    "text": "to to this um so you'll notice there's this view",
    "start": "2717000",
    "end": "2724920"
  },
  {
    "text": "Helper and here this is including the search bar view here with no arguments",
    "start": "2724920",
    "end": "2731520"
  },
  {
    "text": "here we're including a search listings view passing in the collection so this is this is an interesting concept which",
    "start": "2731520",
    "end": "2737079"
  },
  {
    "text": "I think is actually separate from render but um is pretty useful so the idea to declaratively Nest your",
    "start": "2737079",
    "end": "2743359"
  },
  {
    "text": "templates um and so this will create this will actually create a a",
    "start": "2743359",
    "end": "2748960"
  },
  {
    "text": "view hierarchy in the client side so if we were to look oops",
    "start": "2748960",
    "end": "2756440"
  },
  {
    "text": "so if we did well first of all here's our app instance right we've got app.",
    "start": "2757800",
    "end": "2762880"
  },
  {
    "text": "router which is a which is the client side router we can do app. router.",
    "start": "2762880",
    "end": "2769119"
  },
  {
    "text": "current view which is the search view so you see",
    "start": "2769119",
    "end": "2774760"
  },
  {
    "text": "here this is the current View and then you can also inspect different stuff in here right there's oh",
    "start": "2774760",
    "end": "2780359"
  },
  {
    "text": "there's no model here it's a collection I think it's a collection you can do",
    "start": "2780359",
    "end": "2785640"
  },
  {
    "text": "different stuff on it whatever um but there's also child",
    "start": "2785640",
    "end": "2792760"
  },
  {
    "text": "views so in this case there's two child views and this was all created using that view temp that view Helper and so",
    "start": "2792760",
    "end": "2798760"
  },
  {
    "text": "we've got the search bar view let's look at the search listings",
    "start": "2798760",
    "end": "2803838"
  },
  {
    "text": "view so you can see these are the listings um this actually sub classes",
    "start": "2806240",
    "end": "2811720"
  },
  {
    "text": "something which there there's like a couple levels of uh object oriented hierarchy here because it's this like",
    "start": "2811720",
    "end": "2817240"
  },
  {
    "text": "infinite list view so there's infinite scroll um and it manages that and we use",
    "start": "2817240",
    "end": "2822760"
  },
  {
    "text": "that a few different places but but it's neat because if we look here child",
    "start": "2822760",
    "end": "2828319"
  },
  {
    "text": "views there's each one of these is a separate background view with its own",
    "start": "2828319",
    "end": "2833799"
  },
  {
    "text": "model um that's kind of neat well what else so I mentioned bootstrapping so",
    "start": "2835200",
    "end": "2841160"
  },
  {
    "text": "we've got app. fetcher which is a little utility that helps us fetch things then",
    "start": "2841160",
    "end": "2846480"
  },
  {
    "text": "there's like a model store and there's a collection store um this is just kind of a central",
    "start": "2846480",
    "end": "2853160"
  },
  {
    "text": "place to stick these things when you when you fetch them from the API so the model store we've we've like",
    "start": "2853160",
    "end": "2861119"
  },
  {
    "text": "oops what we have in here so we've got all these different",
    "start": "2861119",
    "end": "2868200"
  },
  {
    "text": "basically all these different objects so you can see this this is the model the model name and ID um and one thing",
    "start": "2868200",
    "end": "2876480"
  },
  {
    "text": "that's need is so let's say we we refresh m. arb.com it Returns the full page um no",
    "start": "2876480",
    "end": "2884200"
  },
  {
    "text": "flicker or anything and but we we loaded we bootstrapped every model for each of these listings and so what we can do is",
    "start": "2884200",
    "end": "2891760"
  },
  {
    "text": "we we'll click on one of these and that was instant right because",
    "start": "2891760",
    "end": "2896960"
  },
  {
    "text": "we already had the data for that model but we don't have that's a",
    "start": "2896960",
    "end": "2903040"
  },
  {
    "text": "smaller representation when we get it in like a collection like that so we had a few really important things we had the",
    "start": "2903040",
    "end": "2909160"
  },
  {
    "text": "name we had the photo uh the first three photos and so what we'll do is we'll instantly render that but then in the",
    "start": "2909160",
    "end": "2915440"
  },
  {
    "text": "background it's actually doing a fetch oh jeez but we're we're fetching",
    "start": "2915440",
    "end": "2921240"
  },
  {
    "text": "from the API um and then re-rendering that smartly so that's that's like anything",
    "start": "2921240",
    "end": "2927800"
  },
  {
    "text": "that's actually built into render so far what does it look like you mean like",
    "start": "2927800",
    "end": "2935319"
  },
  {
    "text": "the actual UI or the code yeah sure so I actually might I'm just about out",
    "start": "2935319",
    "end": "2941599"
  },
  {
    "text": "of time um follow off on that with me I think that's all I have so if you have",
    "start": "2941599",
    "end": "2947680"
  },
  {
    "text": "more questions or you want to talk come find me find me on Twitter R find me on GitHub find every be a GitHub and",
    "start": "2947680",
    "end": "2954599"
  },
  {
    "text": "we're obviously hiring we're trying to hire as many great Jesus great Engineers as we can so that means you so can talk",
    "start": "2954599",
    "end": "2961200"
  },
  {
    "text": "to me all right thanks guys [Applause] [Music]",
    "start": "2961200",
    "end": "2966880"
  },
  {
    "text": "oh [Music]",
    "start": "2966880",
    "end": "2976189"
  }
]