[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "um so I work at this company called",
    "start": "9320",
    "end": "10800"
  },
  {
    "text": "Simple energy um we previously had a uh",
    "start": "10800",
    "end": "14920"
  },
  {
    "text": "developer that didn't know Scala and one",
    "start": "14920",
    "end": "17600"
  },
  {
    "text": "of the reasons that I use Scola is that",
    "start": "17600",
    "end": "19680"
  },
  {
    "text": "it's so flexible um but after seeing the",
    "start": "19680",
    "end": "22760"
  },
  {
    "text": "code that this guy's created after not",
    "start": "22760",
    "end": "24760"
  },
  {
    "text": "knowing Scala maybe flexibility isn't a",
    "start": "24760",
    "end": "27840"
  },
  {
    "text": "great thing um so what we've done so far",
    "start": "27840",
    "end": "31080"
  },
  {
    "text": "is deleted about 25,000 lines of code we",
    "start": "31080",
    "end": "32840"
  },
  {
    "text": "got 15,000 lines left and we're still",
    "start": "32840",
    "end": "34879"
  },
  {
    "text": "trying to manage it um but I think we'll",
    "start": "34879",
    "end": "36960"
  },
  {
    "text": "get it down to about 10,000 lines of",
    "start": "36960",
    "end": "38239"
  },
  {
    "text": "code um but we it will we'll actually",
    "start": "38239",
    "end": "41000"
  },
  {
    "text": "have it functional and working um but",
    "start": "41000",
    "end": "43680"
  },
  {
    "text": "basically I've I've come out against",
    "start": "43680",
    "end": "45559"
  },
  {
    "text": "flexibility in languages um after seeing",
    "start": "45559",
    "end": "48680"
  },
  {
    "text": "what a mess you can create with",
    "start": "48680",
    "end": "50160"
  },
  {
    "text": "flexibility in in Scala um I believe",
    "start": "50160",
    "end": "52920"
  },
  {
    "text": "that we should limit it and this is kind",
    "start": "52920",
    "end": "54680"
  },
  {
    "text": "of a bit of a talk about how we can how",
    "start": "54680",
    "end": "57120"
  },
  {
    "text": "we can limit the flexibility in Scala",
    "start": "57120",
    "end": "60399"
  },
  {
    "start": "60000",
    "end": "221000"
  },
  {
    "text": "so uh does anybody know what veruka",
    "start": "60399",
    "end": "61960"
  },
  {
    "text": "vulgaris",
    "start": "61960",
    "end": "63600"
  },
  {
    "text": "means common common word of",
    "start": "63600",
    "end": "67240"
  },
  {
    "text": "course um so I've been working on a tool",
    "start": "67240",
    "end": "69439"
  },
  {
    "text": "called uh W remover um awesome name I",
    "start": "69439",
    "end": "72439"
  },
  {
    "text": "know",
    "start": "72439",
    "end": "73920"
  },
  {
    "text": "um it originally started off as a pack a",
    "start": "73920",
    "end": "77280"
  },
  {
    "text": "trait that you would inherit into your",
    "start": "77280",
    "end": "79000"
  },
  {
    "text": "package object so for example we'd put",
    "start": "79000",
    "end": "80720"
  },
  {
    "text": "it into com. simple energy um and then",
    "start": "80720",
    "end": "83479"
  },
  {
    "text": "any packages under com. simple energy",
    "start": "83479",
    "end": "85640"
  },
  {
    "text": "would automatically get uh some",
    "start": "85640",
    "end": "87479"
  },
  {
    "text": "enhancements or some some limitations um",
    "start": "87479",
    "end": "90079"
  },
  {
    "text": "so used ambiguous implicit so does",
    "start": "90079",
    "end": "92159"
  },
  {
    "text": "anybody know about any two string",
    "start": "92159",
    "end": "94360"
  },
  {
    "text": "ad yeah it's awesome right",
    "start": "94360",
    "end": "98000"
  },
  {
    "text": "um so any two string ad is an implicit",
    "start": "98000",
    "end": "101399"
  },
  {
    "text": "that's in the predef and what you can do",
    "start": "101399",
    "end": "103280"
  },
  {
    "text": "is uh make that ambiguous by defining",
    "start": "103280",
    "end": "105280"
  },
  {
    "text": "two more implicits with the same type",
    "start": "105280",
    "end": "107439"
  },
  {
    "text": "and so when you go and uh when you when",
    "start": "107439",
    "end": "111360"
  },
  {
    "text": "when the scolar compiler would usually",
    "start": "111360",
    "end": "112840"
  },
  {
    "text": "insert any two string ad it would try",
    "start": "112840",
    "end": "114840"
  },
  {
    "text": "and look up the uh the implicits and",
    "start": "114840",
    "end": "116799"
  },
  {
    "text": "it'll find that there's more than one",
    "start": "116799",
    "end": "118000"
  },
  {
    "text": "and it wouldn't know what to do so it",
    "start": "118000",
    "end": "119439"
  },
  {
    "text": "would throw an error which is exactly",
    "start": "119439",
    "end": "121600"
  },
  {
    "text": "what I wanted I didn't want uh this this",
    "start": "121600",
    "end": "124280"
  },
  {
    "text": "what I thought was a wart to to to just",
    "start": "124280",
    "end": "126560"
  },
  {
    "text": "incur occur in my code and also",
    "start": "126560",
    "end": "130640"
  },
  {
    "text": "uh uh language features like the zp 18",
    "start": "130640",
    "end": "133800"
  },
  {
    "text": "language features like higher kinds",
    "start": "133800",
    "end": "136360"
  },
  {
    "text": "existentials uh there's things like",
    "start": "136360",
    "end": "138000"
  },
  {
    "text": "postfix Ops so you can actually they're",
    "start": "138000",
    "end": "140200"
  },
  {
    "text": "actually implemented using implicits so",
    "start": "140200",
    "end": "142160"
  },
  {
    "text": "when you go to use a feature scolar will",
    "start": "142160",
    "end": "143879"
  },
  {
    "text": "look up in scope uh is this is this",
    "start": "143879",
    "end": "146760"
  },
  {
    "text": "language feature enabled by looking at",
    "start": "146760",
    "end": "148080"
  },
  {
    "text": "the implicit and so um what you can do",
    "start": "148080",
    "end": "150800"
  },
  {
    "text": "is just turn that feature completely off",
    "start": "150800",
    "end": "152400"
  },
  {
    "text": "you can't enable it again because what",
    "start": "152400",
    "end": "153879"
  },
  {
    "text": "you can do is just uh make that",
    "start": "153879",
    "end": "156680"
  },
  {
    "text": "ambiguous implicit so when scy compiler",
    "start": "156680",
    "end": "158120"
  },
  {
    "text": "goes to look out the implicit it'll find",
    "start": "158120",
    "end": "159400"
  },
  {
    "text": "out it's ambiguous and then you can't",
    "start": "159400",
    "end": "160480"
  },
  {
    "text": "use the",
    "start": "160480",
    "end": "161720"
  },
  {
    "text": "feature um and also I def finded a",
    "start": "161720",
    "end": "164400"
  },
  {
    "text": "couple of WS so you would have couple",
    "start": "164400",
    "end": "166239"
  },
  {
    "text": "you could uh Define a um you could",
    "start": "166239",
    "end": "168480"
  },
  {
    "text": "Define a uh uh a block and inside that",
    "start": "168480",
    "end": "171840"
  },
  {
    "text": "you could use a macro on that block and",
    "start": "171840",
    "end": "173680"
  },
  {
    "text": "it would disable features",
    "start": "173680",
    "end": "176920"
  },
  {
    "text": "um so the first one wasn't very useful I",
    "start": "176920",
    "end": "179599"
  },
  {
    "text": "couldn't um I couldn't write all the I",
    "start": "179599",
    "end": "181720"
  },
  {
    "text": "couldn't disable as much as what I",
    "start": "181720",
    "end": "182879"
  },
  {
    "text": "wanted um so I decided to rewrite it and",
    "start": "182879",
    "end": "185319"
  },
  {
    "text": "make it a general purpose linter so I",
    "start": "185319",
    "end": "187319"
  },
  {
    "text": "took the idea of using the uh macros uh",
    "start": "187319",
    "end": "190400"
  },
  {
    "text": "the the the code that the macros that",
    "start": "190400",
    "end": "192239"
  },
  {
    "text": "would go over your blocks and try and",
    "start": "192239",
    "end": "194720"
  },
  {
    "text": "generalize it to be a pilot plugin as",
    "start": "194720",
    "end": "196640"
  },
  {
    "text": "well because they both use the",
    "start": "196640",
    "end": "197599"
  },
  {
    "text": "reflection",
    "start": "197599",
    "end": "199319"
  },
  {
    "text": "API so uh this this new W remover will",
    "start": "199319",
    "end": "203120"
  },
  {
    "text": "um you you write a general purpose uh",
    "start": "203120",
    "end": "205519"
  },
  {
    "text": "traversal um for finding ws and then it",
    "start": "205519",
    "end": "209599"
  },
  {
    "text": "would will be able to be run as a",
    "start": "209599",
    "end": "212080"
  },
  {
    "text": "compiler Plugin or as a as a macro over",
    "start": "212080",
    "end": "214560"
  },
  {
    "text": "a block or even as just a command line",
    "start": "214560",
    "end": "218280"
  },
  {
    "text": "tool um so there's the GI up repo if you",
    "start": "218280",
    "end": "220480"
  },
  {
    "text": "want to have a have a look at it um so",
    "start": "220480",
    "end": "222959"
  },
  {
    "start": "221000",
    "end": "612000"
  },
  {
    "text": "let's pretend we hate print line anybody",
    "start": "222959",
    "end": "224560"
  },
  {
    "text": "else hate print line like I do awesome",
    "start": "224560",
    "end": "228200"
  },
  {
    "text": "um yeah we hate print",
    "start": "228200",
    "end": "230439"
  },
  {
    "text": "line so uh taking this line of code it",
    "start": "230439",
    "end": "234400"
  },
  {
    "text": "compiles into this scolar a right um so",
    "start": "234400",
    "end": "237439"
  },
  {
    "text": "it apply it gets the function using the",
    "start": "237439",
    "end": "240239"
  },
  {
    "text": "name so it um accesses a print line on",
    "start": "240239",
    "end": "243040"
  },
  {
    "text": "the predef and then supplies an argument",
    "start": "243040",
    "end": "246040"
  },
  {
    "text": "which is a constant and then yeah",
    "start": "246040",
    "end": "248640"
  },
  {
    "text": "applies it to the",
    "start": "248640",
    "end": "251000"
  },
  {
    "text": "function um so I'm going to show how we",
    "start": "251000",
    "end": "253840"
  },
  {
    "text": "can uh disable this disable print line",
    "start": "253840",
    "end": "256840"
  },
  {
    "text": "using what",
    "start": "256840",
    "end": "259280"
  },
  {
    "text": "remover is that too",
    "start": "261160",
    "end": "264160"
  },
  {
    "text": "small is that okay hang on I'll let's be",
    "start": "264160",
    "end": "268759"
  },
  {
    "text": "better",
    "start": "268759",
    "end": "271160"
  },
  {
    "text": "um okay so to write your own W you uh",
    "start": "271160",
    "end": "275000"
  },
  {
    "text": "create a project spt project um and you",
    "start": "275000",
    "end": "278320"
  },
  {
    "text": "just create an object inside of there",
    "start": "278320",
    "end": "279639"
  },
  {
    "text": "that extends a what traverser and what",
    "start": "279639",
    "end": "281560"
  },
  {
    "text": "traverser just takes uh just has an",
    "start": "281560",
    "end": "283120"
  },
  {
    "text": "apply method which takes in a universe",
    "start": "283120",
    "end": "286000"
  },
  {
    "text": "uh which is an abstraction over the",
    "start": "286000",
    "end": "287600"
  },
  {
    "text": "scolar macro universe and the reflection",
    "start": "287600",
    "end": "289919"
  },
  {
    "text": "Universe uh we need both we need to",
    "start": "289919",
    "end": "292320"
  },
  {
    "text": "abstract both over both of those so they",
    "start": "292320",
    "end": "293639"
  },
  {
    "text": "can run run as compiler plugins and also",
    "start": "293639",
    "end": "295199"
  },
  {
    "text": "as",
    "start": "295199",
    "end": "297160"
  },
  {
    "text": "macros um so inside of that uh we we",
    "start": "297160",
    "end": "301639"
  },
  {
    "text": "have to spit out a traversa at the end",
    "start": "301639",
    "end": "304080"
  },
  {
    "text": "yes uh why did this",
    "start": "304080",
    "end": "307639"
  },
  {
    "text": "with why just compare left",
    "start": "307639",
    "end": "310479"
  },
  {
    "text": "with uh I tried that okay I tried it it",
    "start": "310479",
    "end": "315360"
  },
  {
    "text": "didn't work it's you your",
    "start": "315360",
    "end": "318199"
  },
  {
    "text": "fault um yeah I don't know anyway I'll",
    "start": "318199",
    "end": "321720"
  },
  {
    "text": "get to that anyway um so we sped out a",
    "start": "321720",
    "end": "323800"
  },
  {
    "text": "traversa which is uh something that we",
    "start": "323800",
    "end": "325800"
  },
  {
    "text": "Traverse over our scolar",
    "start": "325800",
    "end": "328039"
  },
  {
    "text": "as um so we defined a predef symbol so",
    "start": "328039",
    "end": "330720"
  },
  {
    "text": "this is a so predef is a module um it's",
    "start": "330720",
    "end": "334400"
  },
  {
    "text": "got all our stuff that automatically",
    "start": "334400",
    "end": "335720"
  },
  {
    "text": "gets import imported when we use a when",
    "start": "335720",
    "end": "337280"
  },
  {
    "text": "we write a Scala file um then we create",
    "start": "337280",
    "end": "339600"
  },
  {
    "text": "a term name called print",
    "start": "339600",
    "end": "340960"
  },
  {
    "text": "line um and so when we Traverse we just",
    "start": "340960",
    "end": "343280"
  },
  {
    "text": "look for anything that is uh accessing",
    "start": "343280",
    "end": "345479"
  },
  {
    "text": "print line so it doesn't even have to be",
    "start": "345479",
    "end": "346840"
  },
  {
    "text": "a function called to print line it could",
    "start": "346840",
    "end": "348280"
  },
  {
    "text": "just be x equals print line um any",
    "start": "348280",
    "end": "351560"
  },
  {
    "text": "anywhere that uh the print line is",
    "start": "351560",
    "end": "353160"
  },
  {
    "text": "accessed on prf um we throw an error so",
    "start": "353160",
    "end": "358440"
  },
  {
    "text": "we say you use print line you're bad um",
    "start": "358440",
    "end": "361600"
  },
  {
    "text": "you can see that we've got this what",
    "start": "361600",
    "end": "364000"
  },
  {
    "text": "what what Eugene was getting at was uh",
    "start": "364000",
    "end": "368639"
  },
  {
    "text": "this so we're checking that the uh side",
    "start": "368639",
    "end": "372080"
  },
  {
    "text": "the the thing on the left is the same as",
    "start": "372080",
    "end": "374360"
  },
  {
    "text": "uh is a subtype of um of the predi",
    "start": "374360",
    "end": "377840"
  },
  {
    "text": "symbol actually I I do know exactly why",
    "start": "377840",
    "end": "379639"
  },
  {
    "text": "and I'll show you in a minute",
    "start": "379639",
    "end": "382479"
  },
  {
    "text": "um so yeah we're just checking that the",
    "start": "382479",
    "end": "384840"
  },
  {
    "text": "thing that was the thing that we're",
    "start": "384840",
    "end": "386039"
  },
  {
    "text": "doing Dot print line on is a subtype of",
    "start": "386039",
    "end": "389039"
  },
  {
    "text": "predef",
    "start": "389039",
    "end": "391199"
  },
  {
    "text": "so let's um so when we when we want to",
    "start": "391199",
    "end": "395520"
  },
  {
    "text": "uh use our",
    "start": "395520",
    "end": "397199"
  },
  {
    "text": "macro uh sorry our our the W that we've",
    "start": "397199",
    "end": "400319"
  },
  {
    "text": "defined um we just include scaly options",
    "start": "400319",
    "end": "405039"
  },
  {
    "text": "uh so we say that we want to use this",
    "start": "405039",
    "end": "407160"
  },
  {
    "text": "uh- p is like a including a Scala C",
    "start": "407160",
    "end": "410120"
  },
  {
    "text": "plugin so it's actually plug in into",
    "start": "410120",
    "end": "411440"
  },
  {
    "text": "Scala c um so we include water remover",
    "start": "411440",
    "end": "414000"
  },
  {
    "text": "as a plugin and um we uh include uh we",
    "start": "414000",
    "end": "418759"
  },
  {
    "text": "we put on the class P the the jar that",
    "start": "418759",
    "end": "420680"
  },
  {
    "text": "contains our W that we've just defined",
    "start": "420680",
    "end": "422720"
  },
  {
    "text": "so in here I'm I'm using the the jar",
    "start": "422720",
    "end": "425960"
  },
  {
    "text": "that comes out of the",
    "start": "425960",
    "end": "427400"
  },
  {
    "text": "compilation um so when we actually",
    "start": "427400",
    "end": "429759"
  },
  {
    "text": "compile this project it'll spit out of",
    "start": "429759",
    "end": "431800"
  },
  {
    "text": "jar and we use that as the as as the uh",
    "start": "431800",
    "end": "435800"
  },
  {
    "text": "class path to to W",
    "start": "435800",
    "end": "437560"
  },
  {
    "text": "remover and then we just say we want to",
    "start": "437560",
    "end": "439720"
  },
  {
    "text": "use this traverser so that's the print",
    "start": "439720",
    "end": "441240"
  },
  {
    "text": "line traverser that we've just",
    "start": "441240",
    "end": "444039"
  },
  {
    "text": "defined so this will be running so you",
    "start": "444759",
    "end": "447400"
  },
  {
    "text": "can see that scaly options is in test so",
    "start": "447400",
    "end": "449240"
  },
  {
    "text": "anything that we put under test uh will",
    "start": "449240",
    "end": "451840"
  },
  {
    "text": "have print line",
    "start": "451840",
    "end": "453879"
  },
  {
    "text": "disabled so here we've got an",
    "start": "453879",
    "end": "457599"
  },
  {
    "text": "example so there you go it says now uh",
    "start": "463960",
    "end": "467080"
  },
  {
    "text": "yeah you use print line so you're bad",
    "start": "467080",
    "end": "469400"
  },
  {
    "text": "I'll demonstrate that it actually works",
    "start": "469400",
    "end": "471000"
  },
  {
    "text": "without print line and then we can",
    "start": "471000",
    "end": "472720"
  },
  {
    "text": "actually use other",
    "start": "472720",
    "end": "475280"
  },
  {
    "text": "things there we go so test pass even",
    "start": "476440",
    "end": "479039"
  },
  {
    "text": "though there's no test but yeah um so",
    "start": "479039",
    "end": "482520"
  },
  {
    "text": "one thing the reason why I've got the",
    "start": "482520",
    "end": "484479"
  },
  {
    "text": "sub type there is if I go Val xal",
    "start": "484479",
    "end": "488919"
  },
  {
    "text": "pred and then I do x. print",
    "start": "488919",
    "end": "492599"
  },
  {
    "text": "line does that make sense",
    "start": "492599",
    "end": "495440"
  },
  {
    "text": "now so we're not actually access oh make",
    "start": "495440",
    "end": "499280"
  },
  {
    "text": "that bigger so we're not accessing um",
    "start": "499280",
    "end": "502720"
  },
  {
    "text": "print line on prf we're accessing it on",
    "start": "502720",
    "end": "504840"
  },
  {
    "text": "X which is a subtype of prf I guess",
    "start": "504840",
    "end": "509479"
  },
  {
    "text": "um so what we can also do is now that",
    "start": "511000",
    "end": "512880"
  },
  {
    "text": "we've defined this",
    "start": "512880",
    "end": "514760"
  },
  {
    "text": "thing so I've got uh you can see here",
    "start": "514760",
    "end": "517560"
  },
  {
    "text": "I've imported macros and I've imported",
    "start": "517560",
    "end": "519039"
  },
  {
    "text": "our W let's try and make a macro out of",
    "start": "519039",
    "end": "521360"
  },
  {
    "text": "the W that we just",
    "start": "521360",
    "end": "523560"
  },
  {
    "text": "defined so we just say um no print",
    "start": "523560",
    "end": "529480"
  },
  {
    "text": "line uh takes an",
    "start": "530279",
    "end": "533839"
  },
  {
    "text": "any I think this will work there we go",
    "start": "536640",
    "end": "539760"
  },
  {
    "text": "so now we'll have a",
    "start": "539760",
    "end": "543320"
  },
  {
    "text": "macro and we can't use print line within",
    "start": "545200",
    "end": "547839"
  },
  {
    "text": "that macro but we can",
    "start": "547839",
    "end": "551240"
  },
  {
    "text": "say and that works so the traversa is",
    "start": "551839",
    "end": "555279"
  },
  {
    "text": "running over just that part of the code",
    "start": "555279",
    "end": "557279"
  },
  {
    "text": "and spinning out an error um so we can",
    "start": "557279",
    "end": "559200"
  },
  {
    "text": "have uh blocks inside of our code that",
    "start": "559200",
    "end": "561399"
  },
  {
    "text": "are",
    "start": "561399",
    "end": "562760"
  },
  {
    "text": "safe and the final thing I want to show",
    "start": "562760",
    "end": "565360"
  },
  {
    "text": "I'm really ahead of",
    "start": "565360",
    "end": "567120"
  },
  {
    "text": "schedule um which is awesome because I'm",
    "start": "567120",
    "end": "570399"
  },
  {
    "text": "sure Josh will talk a",
    "start": "570399",
    "end": "573640"
  },
  {
    "text": "lot as he usually",
    "start": "573640",
    "end": "577160"
  },
  {
    "text": "does um so the final thing is uh I've",
    "start": "577160",
    "end": "580360"
  },
  {
    "text": "got this shell script which will uh run",
    "start": "580360",
    "end": "583120"
  },
  {
    "text": "my wart from the command line so we can",
    "start": "583120",
    "end": "584440"
  },
  {
    "text": "actually run from the command line",
    "start": "584440",
    "end": "585279"
  },
  {
    "text": "instead of going through spt or going",
    "start": "585279",
    "end": "587000"
  },
  {
    "text": "through",
    "start": "587000",
    "end": "589200"
  },
  {
    "text": "macro so let's run it over out",
    "start": "591519",
    "end": "597279"
  },
  {
    "text": "test so there we go so you don't even",
    "start": "597640",
    "end": "600120"
  },
  {
    "text": "have to spin up um spt or anything you",
    "start": "600120",
    "end": "602279"
  },
  {
    "text": "can just run it from the command line",
    "start": "602279",
    "end": "603560"
  },
  {
    "text": "using a uh the scolar",
    "start": "603560",
    "end": "607040"
  },
  {
    "text": "plugin um so let me just show you what I",
    "start": "607079",
    "end": "609600"
  },
  {
    "text": "want to get done with uh with water",
    "start": "609600",
    "end": "612040"
  },
  {
    "start": "612000",
    "end": "639000"
  },
  {
    "text": "remover oh so uh we've got a bu a lot of",
    "start": "612040",
    "end": "615200"
  },
  {
    "text": "buil in W inside of water remover so it",
    "start": "615200",
    "end": "617839"
  },
  {
    "text": "uh I'm not sure which ones are by",
    "start": "617839",
    "end": "619279"
  },
  {
    "text": "default by we've got like a super class",
    "start": "619279",
    "end": "621839"
  },
  {
    "text": "we just got a heap of these all under",
    "start": "621839",
    "end": "623959"
  },
  {
    "text": "one one kind of uh one one one traversal",
    "start": "623959",
    "end": "627519"
  },
  {
    "text": "um but yeah like we disable any two",
    "start": "627519",
    "end": "629399"
  },
  {
    "text": "string ad null V all the bad things so",
    "start": "629399",
    "end": "631360"
  },
  {
    "text": "you don't you can't use",
    "start": "631360",
    "end": "632959"
  },
  {
    "text": "them um and also you can't use option",
    "start": "632959",
    "end": "636079"
  },
  {
    "text": "get which I know Daniel used to love to",
    "start": "636079",
    "end": "639120"
  },
  {
    "start": "639000",
    "end": "694000"
  },
  {
    "text": "do um so the wish list um I want to get",
    "start": "639120",
    "end": "642160"
  },
  {
    "text": "like we've got false positives and false",
    "start": "642160",
    "end": "643959"
  },
  {
    "text": "negatives so um sometimes it'll say you",
    "start": "643959",
    "end": "646480"
  },
  {
    "text": "know you're using option get here but",
    "start": "646480",
    "end": "647920"
  },
  {
    "text": "it's actually spit out by the scy",
    "start": "647920",
    "end": "649120"
  },
  {
    "text": "compiler and not not actually written by",
    "start": "649120",
    "end": "651200"
  },
  {
    "text": "you so the Scola compiler should be",
    "start": "651200",
    "end": "653560"
  },
  {
    "text": "doing the right thing hopefully who",
    "start": "653560",
    "end": "655120"
  },
  {
    "text": "knows though um so um we can we should",
    "start": "655120",
    "end": "659880"
  },
  {
    "text": "try and ignore everything that the",
    "start": "659880",
    "end": "660959"
  },
  {
    "text": "scalar compiler spits",
    "start": "660959",
    "end": "662600"
  },
  {
    "text": "out uh but that's actually tricky",
    "start": "662600",
    "end": "664560"
  },
  {
    "text": "because only some things are marked as",
    "start": "664560",
    "end": "666000"
  },
  {
    "text": "synthetic as in like generated by the",
    "start": "666000",
    "end": "667920"
  },
  {
    "text": "compiler so the compiler spits out",
    "start": "667920",
    "end": "669160"
  },
  {
    "text": "things and says well this stuff is but",
    "start": "669160",
    "end": "671639"
  },
  {
    "text": "then you look at somewhere else and it",
    "start": "671639",
    "end": "672760"
  },
  {
    "text": "says it doesn't have any annotation",
    "start": "672760",
    "end": "674320"
  },
  {
    "text": "saying this is this is this is synthetic",
    "start": "674320",
    "end": "676120"
  },
  {
    "text": "so it's it's actually a hard thing to to",
    "start": "676120",
    "end": "678279"
  },
  {
    "text": "tell if you've written it or not um and",
    "start": "678279",
    "end": "680519"
  },
  {
    "text": "I want to get more built-in WS there's",
    "start": "680519",
    "end": "681959"
  },
  {
    "text": "lots and lots of WS on the uh on the",
    "start": "681959",
    "end": "683920"
  },
  {
    "text": "GitHub issues um and they're actually",
    "start": "683920",
    "end": "686240"
  },
  {
    "text": "pretty easy to write as you can see so",
    "start": "686240",
    "end": "688040"
  },
  {
    "text": "if anyone wants to wants to get involved",
    "start": "688040",
    "end": "690200"
  },
  {
    "text": "um just take something off off the off",
    "start": "690200",
    "end": "691800"
  },
  {
    "text": "the issue because there there's dozens",
    "start": "691800",
    "end": "693560"
  },
  {
    "text": "of them uh I want to make Waters",
    "start": "693560",
    "end": "696000"
  },
  {
    "start": "694000",
    "end": "843000"
  },
  {
    "text": "warnings just so you don't always have",
    "start": "696000",
    "end": "697360"
  },
  {
    "text": "to have an error so you can have any two",
    "start": "697360",
    "end": "699560"
  },
  {
    "text": "string as ADD as just just an error",
    "start": "699560",
    "end": "702079"
  },
  {
    "text": "instead um in Mosaic wats don't Google",
    "start": "702079",
    "end": "704639"
  },
  {
    "text": "that don't Google imagees that um it's",
    "start": "704639",
    "end": "707639"
  },
  {
    "text": "bad um but basically uh when we want",
    "start": "707639",
    "end": "711480"
  },
  {
    "text": "when we Traverse over um when we",
    "start": "711480",
    "end": "713680"
  },
  {
    "text": "Traverse over the H we should only do it",
    "start": "713680",
    "end": "715120"
  },
  {
    "text": "once we shouldn't have to do it multiple",
    "start": "715120",
    "end": "716360"
  },
  {
    "text": "times per watt so if you enable three",
    "start": "716360",
    "end": "718240"
  },
  {
    "text": "wats it should only do it traversal of",
    "start": "718240",
    "end": "719839"
  },
  {
    "text": "the",
    "start": "719839",
    "end": "721120"
  },
  {
    "text": "H1s um that's",
    "start": "721120",
    "end": "724720"
  },
  {
    "text": "[Applause]",
    "start": "724720",
    "end": "733040"
  },
  {
    "text": "it oh so you want to let oh uh so the",
    "start": "733040",
    "end": "735639"
  },
  {
    "text": "question is do um can you uh like",
    "start": "735639",
    "end": "737880"
  },
  {
    "text": "suppress uh the W for a particular",
    "start": "737880",
    "end": "740160"
  },
  {
    "text": "region that is something I want to do um",
    "start": "740160",
    "end": "742880"
  },
  {
    "text": "I haven't got around to it yeah I'm not",
    "start": "742880",
    "end": "746040"
  },
  {
    "text": "sure a good implementation of that",
    "start": "746040",
    "end": "747920"
  },
  {
    "text": "so uh you mean comp compilation yeah um",
    "start": "747920",
    "end": "751519"
  },
  {
    "text": "no",
    "start": "751519",
    "end": "753680"
  },
  {
    "text": "idea",
    "start": "755880",
    "end": "757519"
  },
  {
    "text": "yeah it looks fast",
    "start": "757519",
    "end": "762040"
  },
  {
    "text": "yeah uh no we I mean I've tried running",
    "start": "763199",
    "end": "765680"
  },
  {
    "text": "it over but we I got I got false",
    "start": "765680",
    "end": "767760"
  },
  {
    "text": "positive and false negatives I tried",
    "start": "767760",
    "end": "768959"
  },
  {
    "text": "fixing up a couple this week but yeah",
    "start": "768959",
    "end": "771760"
  },
  {
    "text": "it's it's not it's not it's not quite",
    "start": "771760",
    "end": "773680"
  },
  {
    "text": "ready to run on the whole 15,000 lines",
    "start": "773680",
    "end": "775800"
  },
  {
    "text": "of code that I've got at the moment yeah",
    "start": "775800",
    "end": "778279"
  },
  {
    "text": "yes yes we've got two newbies and yeah",
    "start": "778279",
    "end": "781120"
  },
  {
    "text": "they're doing actually pretty well but",
    "start": "781120",
    "end": "782600"
  },
  {
    "text": "yeah it' be good to disable parts of it",
    "start": "782600",
    "end": "784120"
  },
  {
    "text": "for them yeah so the team now is not",
    "start": "784120",
    "end": "788360"
  },
  {
    "text": "going to write the awful code that we",
    "start": "788360",
    "end": "790160"
  },
  {
    "text": "had we inherited it from someone that",
    "start": "790160",
    "end": "792000"
  },
  {
    "text": "left the company and he basically wrote",
    "start": "792000",
    "end": "794199"
  },
  {
    "text": "a he Scala about 30,000 lines of code",
    "start": "794199",
    "end": "797320"
  },
  {
    "text": "and it was completely unmanageable he",
    "start": "797320",
    "end": "799000"
  },
  {
    "text": "couldn't really keep up and he left and",
    "start": "799000",
    "end": "800639"
  },
  {
    "text": "so uh we took over and we're trying to",
    "start": "800639",
    "end": "802880"
  },
  {
    "text": "fix it up and you're using REM we're not",
    "start": "802880",
    "end": "806360"
  },
  {
    "text": "using what we're not using what remover",
    "start": "806360",
    "end": "808279"
  },
  {
    "text": "at work now",
    "start": "808279",
    "end": "810240"
  },
  {
    "text": "no no uh but I do believe that you know",
    "start": "810240",
    "end": "813480"
  },
  {
    "text": "after seeing what what what someone is",
    "start": "813480",
    "end": "815000"
  },
  {
    "text": "capable of with scholar it's",
    "start": "815000",
    "end": "817880"
  },
  {
    "text": "um it's something I want to",
    "start": "817880",
    "end": "820839"
  },
  {
    "text": "prohibit yeah no no we should uh I mean",
    "start": "820839",
    "end": "825800"
  },
  {
    "text": "that it's it's meant to be like a code",
    "start": "825800",
    "end": "827079"
  },
  {
    "text": "lter so that's the direction I'm going",
    "start": "827079",
    "end": "829040"
  },
  {
    "text": "in yeah okay I think that's it thank you",
    "start": "829040",
    "end": "834839"
  }
]