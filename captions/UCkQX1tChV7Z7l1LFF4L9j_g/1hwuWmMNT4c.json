[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "I'm really excited to be here in New York and I was like I'm coming to Cuba",
    "start": "4010",
    "end": "9950"
  },
  {
    "text": "con and specialist is it's sort of humbling experience to be part of this excellent micro services track it's just",
    "start": "9950",
    "end": "15589"
  },
  {
    "text": "look I'm really looking forward to some excellent talks with a great talk directly for mine as well so I'll try to",
    "start": "15589",
    "end": "22130"
  },
  {
    "text": "add to the story by talking about you know hiking design event first macro",
    "start": "22130",
    "end": "27320"
  },
  {
    "text": "services so let's listen up dive into that it wasn't it will be sort of theoretical but but in somehow also",
    "start": "27320",
    "end": "34010"
  },
  {
    "text": "practical I said I'll try to desert break down some harder concepts and try to make them serve digestible but it's",
    "start": "34010",
    "end": "41090"
  },
  {
    "text": "more of a sort of food for thought and and and and for you to serve if you find",
    "start": "41090",
    "end": "46280"
  },
  {
    "text": "this interesting you know we know which areas you should dive dive down into it",
    "start": "46280",
    "end": "52280"
  },
  {
    "text": "and start exploring on your on your own so to speak so yeah I guess you want to",
    "start": "52280",
    "end": "57980"
  },
  {
    "start": "55000",
    "end": "142000"
  },
  {
    "text": "do micro services first time and hopefully it's for the it's for the right reasons you know there's a lot of",
    "start": "57980",
    "end": "63079"
  },
  {
    "text": "hype and buzz around my round micro services and and rightfully so I mean it's it's it's it's it's a really nice",
    "start": "63079",
    "end": "69590"
  },
  {
    "text": "sort of design pattern or a way to implement systems but it's also easier",
    "start": "69590",
    "end": "74719"
  },
  {
    "text": "to just carried away and does it drink the kool-aid I think that it's very it's very important that you that you sort of",
    "start": "74719",
    "end": "80270"
  },
  {
    "text": "take a step back you think do I need to do micro services in the frig in the first place you know micro services the",
    "start": "80270",
    "end": "85999"
  },
  {
    "text": "right reasons to do micro services in my opinion is to scale the organization you know users to break it up into sort of",
    "start": "85999",
    "end": "92509"
  },
  {
    "text": "multiple autonomous teams that can deliver software faster more intelligent we're time to market matters etc and and",
    "start": "92509",
    "end": "99920"
  },
  {
    "text": "not necessarily in to scale the system however if you do it right in my opinion",
    "start": "99920",
    "end": "105139"
  },
  {
    "text": "then I will try to show you in this talk then you can actually get the best of",
    "start": "105139",
    "end": "110479"
  },
  {
    "text": "both worlds you will actually end up with the system that can make it that you can use to roll out features and faster more predictably but also scale",
    "start": "110479",
    "end": "118459"
  },
  {
    "text": "the system in a much better way and build more resilient software you know we're using autonomous components that",
    "start": "118459",
    "end": "123740"
  },
  {
    "text": "can fail in isolation they can serve bounce back in isolation etc assess you",
    "start": "123740",
    "end": "130280"
  },
  {
    "text": "know cutting a short this cascading failures that was sometimes seen in the past using",
    "start": "130280",
    "end": "135319"
  },
  {
    "text": "UJ in application servers and we were really tightly coupled systems etc right",
    "start": "135319",
    "end": "141060"
  },
  {
    "text": "so I think I think it's important though that I mean when I'm out there I'm saying no not not all but many companies",
    "start": "141060",
    "end": "148120"
  },
  {
    "start": "142000",
    "end": "215000"
  },
  {
    "text": "were when they went when they go about micro services they end up with something like this that I calls in my micro lists were used where you have",
    "start": "148120",
    "end": "155110"
  },
  {
    "text": "where you're if you're going to go from a monolith to him to to micro services system you take all synchronous or",
    "start": "155110",
    "end": "161890"
  },
  {
    "text": "synchronous method like method calls the method to dispatch calls and you simply just replace them with with request",
    "start": "161890",
    "end": "168130"
  },
  {
    "text": "response in a synchronous manner synchronous RPC and we're still we're and we're still used I mean the o mighty",
    "start": "168130",
    "end": "175120"
  },
  {
    "text": "Oracle database or whatever using crud in this fully synchronous fashion you know the the problem here is if you",
    "start": "175120",
    "end": "181840"
  },
  {
    "text": "bring a lot of the problems from monoliths over to over to micro services and you maintain that strong coupling",
    "start": "181840",
    "end": "189010"
  },
  {
    "text": "that makes it really hard to build systems to scale and and and are available okay however you solve the",
    "start": "189010",
    "end": "195790"
  },
  {
    "text": "problem with scaling the organization you sort of miss out on all the other features or all the benefits of micro",
    "start": "195790",
    "end": "202060"
  },
  {
    "text": "service because you know this strong coupling does limit things like scale availability extensibility of the",
    "start": "202060",
    "end": "208120"
  },
  {
    "text": "maintainability the understandability of the system I think we can do better than",
    "start": "208120",
    "end": "213730"
  },
  {
    "text": "this right and grass grabbed this one and I think thinking in events really",
    "start": "213730",
    "end": "220390"
  },
  {
    "start": "215000",
    "end": "333000"
  },
  {
    "text": "can help here I think I mean domain driven design from an events first perspective and that's where the the",
    "start": "220390",
    "end": "226510"
  },
  {
    "text": "topic of this of this of this talk tried to sort of view the world through events and and and and so understanding what",
    "start": "226510",
    "end": "233740"
  },
  {
    "text": "that what that means you know my domain driven design I'm sure all of you are familiar with that I mean that was a",
    "start": "233740",
    "end": "240160"
  },
  {
    "text": "coin by Eric Evans in the I think 2003 is that did the canonical book come out",
    "start": "240160",
    "end": "247860"
  },
  {
    "text": "it has really served as well the last was he what is 50 like 15 years but the",
    "start": "247860",
    "end": "253570"
  },
  {
    "text": "problem is that it can easily lead us down the wrong path because it's it's it",
    "start": "253570",
    "end": "259299"
  },
  {
    "text": "it's er puts a focus on structure too early in the design process it puts a",
    "start": "259299",
    "end": "265810"
  },
  {
    "text": "focus on finding the domain objects you know finding all the nuns I mean I I was observing you know",
    "start": "265810",
    "end": "272560"
  },
  {
    "text": "learning computer science back in the day when object-oriented programming was almost really really popular and then I",
    "start": "272560",
    "end": "279700"
  },
  {
    "text": "was you know the first step was go out final final announce you know that's the same sort of thinking in domain-driven",
    "start": "279700",
    "end": "285310"
  },
  {
    "text": "design and it's it it's nothing per se that's bad about that it's just that in",
    "start": "285310",
    "end": "290680"
  },
  {
    "text": "this new world of distributed systems it it's not the ideal way to start I'd say",
    "start": "290680",
    "end": "296290"
  },
  {
    "text": "because it's a kiss yeah because I mean doing that means that that that Sarah as",
    "start": "296290",
    "end": "303940"
  },
  {
    "text": "I said it focused on the structure of the system too early and system instead",
    "start": "303940",
    "end": "309400"
  },
  {
    "text": "early in the design process instead of trying to understand what the system actually does which is really the",
    "start": "309400",
    "end": "315100"
  },
  {
    "text": "important thing and Greg young once said that when you start modeling in events",
    "start": "315100",
    "end": "320410"
  },
  {
    "text": "it forces you to think about the behavior of the system as opposed to thinking about the structure of the",
    "start": "320410",
    "end": "326080"
  },
  {
    "text": "system this is one of the written the main benefits of of events first type of design and so we should not focus on the",
    "start": "326080",
    "end": "335350"
  },
  {
    "start": "333000",
    "end": "364000"
  },
  {
    "text": "things the nouns the domain objects that we've been taught to do but instead I don't know when you stand here for this",
    "start": "335350",
    "end": "341620"
  },
  {
    "text": "to work well this crap this one I'm sorry",
    "start": "341620",
    "end": "347020"
  },
  {
    "text": "instead you should focus on what one what happens in the system find the verbs and the verbs are usually events",
    "start": "347020",
    "end": "354250"
  },
  {
    "text": "that flow in the system to try to understand who is communicating with who etc etc right I'll dive into what this",
    "start": "354250",
    "end": "361930"
  },
  {
    "text": "means in more detail soon but first let's start with the basics what is an event I'm sure there are zillions sort",
    "start": "361930",
    "end": "369850"
  },
  {
    "start": "364000",
    "end": "538000"
  },
  {
    "text": "of definitions right I'll give you mine so you know where I'm coming from this or the context that I'm coming from when",
    "start": "369850",
    "end": "375850"
  },
  {
    "text": "it comes to events you know first events represents or facts of information and",
    "start": "375850",
    "end": "382660"
  },
  {
    "text": "you know you know facts that's a fact is something effect in the world in the real world it's it's sort of something",
    "start": "382660",
    "end": "389350"
  },
  {
    "text": "that has already happened something that we can take for being the truth it might not be the truth you know wiki with",
    "start": "389350",
    "end": "394419"
  },
  {
    "text": "might beer or something or something that that's wrong but it's something that we saw accepted as being a fact and",
    "start": "394419",
    "end": "400150"
  },
  {
    "text": "so that means the facts are in the nature of fact is that there are immutable you cannot change the fact you can",
    "start": "400150",
    "end": "406320"
  },
  {
    "text": "change the fact that something has happened so to speak so this means that you know facts can only crew you know",
    "start": "406320",
    "end": "413310"
  },
  {
    "text": "knowledge can only grow we can only learn more and more and more in life we",
    "start": "413310",
    "end": "419940"
  },
  {
    "text": "keep some times we forget of course but in principle knowledge can only grow okay so the means of facts can only crew",
    "start": "419940",
    "end": "427140"
  },
  {
    "text": "you can't delete facts etc if sort of facts in this in this context I'm",
    "start": "427140",
    "end": "432960"
  },
  {
    "text": "talking about facts as represented as advance I may say first and facts they",
    "start": "432960",
    "end": "439110"
  },
  {
    "text": "can be however disregarded I can choose to not believe the certain fact I can",
    "start": "439110",
    "end": "444690"
  },
  {
    "text": "choose to ignore that it might be being violation with I already think is true etc so I can choose to disregard facts",
    "start": "444690",
    "end": "453200"
  },
  {
    "text": "but once I have accepted them in this or conceptual framework for facts they",
    "start": "453200",
    "end": "459660"
  },
  {
    "text": "cannot be retracted I can't go back and delete the fact something that I've already understood has happened okay and",
    "start": "459660",
    "end": "467790"
  },
  {
    "text": "since and since the facts can't be the Trachta means that they also can't be deleted however I mean with the gdpr and",
    "start": "467790",
    "end": "474510"
  },
  {
    "text": "everything you know there might be reasons where in facts actually in in",
    "start": "474510",
    "end": "480000"
  },
  {
    "text": "practice has to be deleted you know for legal reasons like GDP or for moral reasons you know you know keeping your",
    "start": "480000",
    "end": "487350"
  },
  {
    "text": "customers safe etc I have to say but in it but in impre-- in principle they",
    "start": "487350",
    "end": "494220"
  },
  {
    "text": "can't be deleted okay and but it but it's also very important that new facts that arrive into the system you know or",
    "start": "494220",
    "end": "500520"
  },
  {
    "text": "or that we as humans accept can however invalidate existing facts we do that",
    "start": "500520",
    "end": "507240"
  },
  {
    "text": "every day we'll learn more and we realize what we need what we thought we knew in the past it's actually not valid",
    "start": "507240",
    "end": "513060"
  },
  {
    "text": "anymore the world has moved on or we accepted some effect that actually Falls etc right so to sum up facts are",
    "start": "513060",
    "end": "521550"
  },
  {
    "text": "immutable facts just grow just accrue knowledge only grows you can",
    "start": "521550",
    "end": "526950"
  },
  {
    "text": "choose to disregard fact once except that you can't delete them but you put",
    "start": "526950",
    "end": "532050"
  },
  {
    "text": "and new facts that arrived us invalidate existing facts in some situations look",
    "start": "532050",
    "end": "538040"
  },
  {
    "start": "538000",
    "end": "563000"
  },
  {
    "text": "so what should we do that we should serve mr. Kamin to assist to design",
    "start": "538040",
    "end": "543750"
  },
  {
    "text": "process we just sort of ask ourselves what are the facts just like a detective coming into our crime scene most people",
    "start": "543750",
    "end": "550350"
  },
  {
    "text": "have seen CSI right or or read in their Sherlock Holmes right you should try to",
    "start": "550350",
    "end": "556080"
  },
  {
    "text": "mind them try to understand I mean causalities and things like that what happened what really went on in this",
    "start": "556080",
    "end": "561780"
  },
  {
    "text": "crime scene okay and events storming can really help here investor army service",
    "start": "561780",
    "end": "567530"
  },
  {
    "start": "563000",
    "end": "708000"
  },
  {
    "text": "sort of new technique came up than the in the last years five years or something like that we're sort of",
    "start": "567530",
    "end": "573960"
  },
  {
    "text": "bringing all the stakeholders into one single room physical room you know all",
    "start": "573960",
    "end": "579330"
  },
  {
    "text": "the old is although all the stakeholders meeting all the domain experts all the programmers etc and you have the post-it",
    "start": "579330",
    "end": "586080"
  },
  {
    "text": "notes and happiness or a brainstorm but trying to find understand what's going",
    "start": "586080",
    "end": "593070"
  },
  {
    "text": "on in the system from from you know how data flows in the system who's",
    "start": "593070",
    "end": "598620"
  },
  {
    "text": "communicating with who trying to mine the facts and and also trying to understand the commands I'll bring I'll",
    "start": "598620",
    "end": "605580"
  },
  {
    "text": "get two commands quite soon but but but but so we're trying to find cook the causality between your your components",
    "start": "605580",
    "end": "612900"
  },
  {
    "text": "and the service and and and and and the service and you know information flow it's actually business logic that's",
    "start": "612900",
    "end": "619620"
  },
  {
    "text": "usually where the value in your system resides more than in the nones you know",
    "start": "619620",
    "end": "625050"
  },
  {
    "text": "the actual things they can be replaced and they can be whatever but you know data flow is is value we all know the",
    "start": "625050",
    "end": "631350"
  },
  {
    "text": "data is value nowadays you know that's why people we gather more and more try to mine more more value out of them okay",
    "start": "631350",
    "end": "638660"
  },
  {
    "text": "so what we need to understand when we when we brainstorm this then it's first",
    "start": "638660",
    "end": "644580"
  },
  {
    "text": "to try to understand the intense okay the intense means I mean to find the",
    "start": "644580",
    "end": "650310"
  },
  {
    "text": "intensity we should look for things like communication who's communicating with you who's converse conversations like",
    "start": "650310",
    "end": "656640"
  },
  {
    "text": "that's the Serbs or session type of conversations expectations contracts between the different parties when we",
    "start": "656640",
    "end": "663870"
  },
  {
    "text": "are transfer of OPCON of control these are usually hints for for intense",
    "start": "663870",
    "end": "669540"
  },
  {
    "text": "okay and we should also look for facts then in fact our usual and hints for facts",
    "start": "669540",
    "end": "676390"
  },
  {
    "text": "are you should leave state history Kosala T has I've already said I mean",
    "start": "676390",
    "end": "682180"
  },
  {
    "text": "and why something happened in the relation to X Y etc notifications and",
    "start": "682180",
    "end": "689290"
  },
  {
    "text": "also transfer of state right in sort of the contrary to transfer or control and",
    "start": "689290",
    "end": "695970"
  },
  {
    "text": "intense are usually represented as commands while facts are usually",
    "start": "695970",
    "end": "703420"
  },
  {
    "text": "represented as events okay this is sort of a good model to do to know what to",
    "start": "703420",
    "end": "709060"
  },
  {
    "start": "708000",
    "end": "966000"
  },
  {
    "text": "look for when you when you when you think about these things but let's try to understand the difference between commands and events a little bit better",
    "start": "709060",
    "end": "715120"
  },
  {
    "text": "and most people have heard about it perhaps not everyone knows they actually different in semantics and meaning okay",
    "start": "715120",
    "end": "721030"
  },
  {
    "text": "sir sorry command is sort of the object form of Oban or the sort of a method call or",
    "start": "721030",
    "end": "727000"
  },
  {
    "text": "or or an action request okay it's it's it's it's a verb you know and it should",
    "start": "727000",
    "end": "733180"
  },
  {
    "text": "be phrased in the imperative things I mean sort of common names are things",
    "start": "733180",
    "end": "739750"
  },
  {
    "text": "like create the order ship product etc sort of the intent to do something that",
    "start": "739750",
    "end": "746920"
  },
  {
    "text": "I want someone to do something for me okay however we serve so and and the flow is",
    "start": "746920",
    "end": "754390"
  },
  {
    "text": "often then as when they when when that did when these commands are accepted by some sort of component some sort of",
    "start": "754390",
    "end": "760450"
  },
  {
    "text": "service etc that you shouldn't causes some sort of reaction you know commands are all about the intent of a command is",
    "start": "760450",
    "end": "767230"
  },
  {
    "text": "to do side effecting and that asks someone else to do something you know that has some sort of reaction causes",
    "start": "767230",
    "end": "773710"
  },
  {
    "text": "some sort of effect okay so it crept so so then that reaction however that sort",
    "start": "773710",
    "end": "780580"
  },
  {
    "text": "of side effect usually then emits and creates it represented as you might say",
    "start": "780580",
    "end": "785950"
  },
  {
    "text": "an event okay because an event represent that something has already happened that",
    "start": "785950",
    "end": "791290"
  },
  {
    "text": "that that the facts are speak that the reaction happened and completed okay and",
    "start": "791290",
    "end": "796810"
  },
  {
    "text": "events are usually before us or a phrase in past tense order created that the order has been created compared to",
    "start": "796810",
    "end": "804130"
  },
  {
    "text": "create order the sort of the AAB of trying to oblige someone to do something for me okay and or product shipped etc so they have very",
    "start": "804130",
    "end": "813310"
  },
  {
    "text": "different meanings Center semantically and there was a very different meaning when it comes to how designed the system",
    "start": "813310",
    "end": "819280"
  },
  {
    "text": "etc okay but let's dig a little bit deeper here sir commands are really all",
    "start": "819280",
    "end": "824890"
  },
  {
    "text": "about intent while events they're totally intent --less okay they just represent the sound the fact that",
    "start": "824890",
    "end": "830050"
  },
  {
    "text": "something has already happened commands are directed you know I want to tell someone specifically to do",
    "start": "830050",
    "end": "837160"
  },
  {
    "text": "something can be one or many but but they are really so specific in terms of",
    "start": "837160",
    "end": "843130"
  },
  {
    "text": "their direction while events are fully anonymous okay commands are they have a single",
    "start": "843130",
    "end": "849370"
  },
  {
    "text": "addressable the destination I'm sending it to a specific point asking a specific service to do something events they just",
    "start": "849370",
    "end": "856060"
  },
  {
    "text": "happens for anyone to observe that might be interesting can be zero can be 100",
    "start": "856060",
    "end": "861070"
  },
  {
    "text": "can be 1000 can be whatever can be all the different sort of intense for",
    "start": "861070",
    "end": "866130"
  },
  {
    "text": "subscribing to the events as well etc okay commands the model personal",
    "start": "866130",
    "end": "871960"
  },
  {
    "text": "communication okay while events they were Model broadcast so to speak",
    "start": "871960",
    "end": "877990"
  },
  {
    "text": "speakers corner how me standing up here talking to you I'm just served a broadcasting events",
    "start": "877990",
    "end": "883120"
  },
  {
    "text": "and you can sort of choose to accept them as facts or ignore them hopefully the former and commands they then they",
    "start": "883120",
    "end": "890950"
  },
  {
    "text": "have a distributed focus you know they move between contexts are very often across the network while events they are",
    "start": "890950",
    "end": "898750"
  },
  {
    "text": "they have a local focus you just they're just the services just emits event locally were they were they were were",
    "start": "898750",
    "end": "906130"
  },
  {
    "text": "they happen to be okay no address symbol destinations or anything like this just",
    "start": "906130",
    "end": "912760"
  },
  {
    "text": "local so if you actually want to have advanced transfer across the network then you have to wrap them in messages",
    "start": "912760",
    "end": "919930"
  },
  {
    "text": "and send them over and pretend that they happen over there are you following with me okay commands are really all about",
    "start": "919930",
    "end": "928270"
  },
  {
    "text": "command and control I won't to oblige someone to do something for me okay hope",
    "start": "928270",
    "end": "933970"
  },
  {
    "text": "you better you know do as I say while events are really all about autonomy",
    "start": "933970",
    "end": "939220"
  },
  {
    "text": "and that's one of the keys to other but I think events can really help us build truly available available systems",
    "start": "939220",
    "end": "946120"
  },
  {
    "text": "because it it breaks free of the coupling of commands okay not saying the commands are bad they have it in place",
    "start": "946120",
    "end": "952000"
  },
  {
    "text": "but I personally favor to start thinking in events and and and and and try to",
    "start": "952000",
    "end": "957580"
  },
  {
    "text": "design my system using events as much as possible just because it gives me a greater path towards autonomy and LU and",
    "start": "957580",
    "end": "964840"
  },
  {
    "text": "lose your coupling okay so let us LITTLEST so we should listen let the defend the events is define our",
    "start": "964840",
    "end": "971530"
  },
  {
    "start": "966000",
    "end": "1010000"
  },
  {
    "text": "bounded contexts which events come in and which events come out and we do that",
    "start": "971530",
    "end": "977020"
  },
  {
    "text": "by defining and working hard at finding the right protocols for these these for",
    "start": "977020",
    "end": "983920"
  },
  {
    "text": "these boundaries it's extremely important and because if we do this right",
    "start": "983920",
    "end": "989470"
  },
  {
    "text": "events can actually help us to invert the control it and put to serve the",
    "start": "989470",
    "end": "994690"
  },
  {
    "text": "service itself in charge you know I can choose which events I accept no one can",
    "start": "994690",
    "end": "999910"
  },
  {
    "text": "oblige me to do anything really okay so it serves or it gives us an inversion of",
    "start": "999910",
    "end": "1006090"
  },
  {
    "text": "control that can be really helpful when designing these type of systems okay so",
    "start": "1006090",
    "end": "1011700"
  },
  {
    "start": "1010000",
    "end": "1060000"
  },
  {
    "text": "but what are the characteristics of an event we have a service that yeah first event an event driven service then can",
    "start": "1011700",
    "end": "1018390"
  },
  {
    "text": "receive and react and if you if you choose to events that's we're coming to it or or commands right so essentially",
    "start": "1018390",
    "end": "1027750"
  },
  {
    "text": "reactive facts anything can also after the reaction that essentially done",
    "start": "1027750",
    "end": "1033060"
  },
  {
    "text": "something survey concur so create a new fact representing the fact you know that",
    "start": "1033060",
    "end": "1040020"
  },
  {
    "text": "something happened you know it performs some sort of operation and and is as a",
    "start": "1040020",
    "end": "1045959"
  },
  {
    "text": "result of that it creates a new fact and then it can choose to publish that to the world okay in an asynchronous",
    "start": "1045959",
    "end": "1052560"
  },
  {
    "text": "fashion as I said already is already inverse this control for minimize the coupling which is really really helpful",
    "start": "1052560",
    "end": "1058290"
  },
  {
    "text": "and you know it's a lot of talk about immutable events here some people might",
    "start": "1058290",
    "end": "1063390"
  },
  {
    "start": "1060000",
    "end": "1158000"
  },
  {
    "text": "think then what about mutable state I mean I'm used to thinking immutable state I'm used to thinking in terms of a",
    "start": "1063390",
    "end": "1069140"
  },
  {
    "text": "more imperative type of code there might be a lot of functional programmers here as well but most people",
    "start": "1069140",
    "end": "1075010"
  },
  {
    "text": "are probably from an imperative background but I have to say the mutable state is still fine you know but the",
    "start": "1075010",
    "end": "1081220"
  },
  {
    "text": "important thing here the key thing it really needs to be contained it means to be not observable",
    "start": "1081220",
    "end": "1086470"
  },
  {
    "text": "to the rest of the world as long as you contain mutable state you know you confine it to the service it's fine you",
    "start": "1086470",
    "end": "1094870"
  },
  {
    "text": "can use it it's more intuitive for a lot of people you can actually I perform as improvements etc to do to do processing",
    "start": "1094870",
    "end": "1100179"
  },
  {
    "text": "etc but needs to be contained in sort of the safe haven not observable to the to the rest of the world and you know when",
    "start": "1100179",
    "end": "1107320"
  },
  {
    "text": "you have a case accepted of fact and and as you do your processing and you sort",
    "start": "1107320",
    "end": "1113470"
  },
  {
    "text": "of you end up with the with with the result then you can choose them to create a fact out of that the fact that",
    "start": "1113470",
    "end": "1120730"
  },
  {
    "text": "something's already happened and then you publish that to the outside world you know this means that that other",
    "start": "1120730",
    "end": "1126820"
  },
  {
    "text": "components can rely on stable values they can rely their reasoning of things",
    "start": "1126820",
    "end": "1133450"
  },
  {
    "text": "that you won't change you know if you publish mutable things that means that things can change right under the hood",
    "start": "1133450",
    "end": "1139510"
  },
  {
    "text": "right now right on the ice you know of the guys using it and that sort of makes for very for very very brittle protocols",
    "start": "1139510",
    "end": "1146290"
  },
  {
    "text": "by but but by communicating only through facts I mean you get really reliable",
    "start": "1146290",
    "end": "1152830"
  },
  {
    "text": "stable sort of communication protocols and how do we model this then in ddd in",
    "start": "1152830",
    "end": "1160780"
  },
  {
    "text": "ddd i mean people talk about you know services and and you know boundary context and and and the aggregate is",
    "start": "1160780",
    "end": "1167770"
  },
  {
    "text": "where you put your serve your state normally i mean that's usually persist it down down and down to disk so it's I",
    "start": "1167770",
    "end": "1175270"
  },
  {
    "text": "think the aggregate is the perfect serve keeper of your events or speak it",
    "start": "1175270",
    "end": "1180700"
  },
  {
    "text": "maintains the integrity and the consistency of your service it is serve our unit of consistency our",
    "start": "1180700",
    "end": "1186940"
  },
  {
    "text": "unit of failure as well what I mean by that is that if if an aggregate fails it",
    "start": "1186940",
    "end": "1193570"
  },
  {
    "text": "needs to fail as a whole it can't fail partially okay because that means that",
    "start": "1193570",
    "end": "1198610"
  },
  {
    "text": "that you might end up being fully inconsistent fashion within yourself which is really a bad thing okay",
    "start": "1198610",
    "end": "1204790"
  },
  {
    "text": "so so it's really an either/or thing and it's really a sort of and if we serve",
    "start": "1204790",
    "end": "1211360"
  },
  {
    "text": "adhere to that and make sure that if if and if an aggregate fails it fails as a whole that means that we can actually",
    "start": "1211360",
    "end": "1218250"
  },
  {
    "text": "sort of ensure strong consistency within within the aggregate which is we wish is",
    "start": "1218250",
    "end": "1224940"
  },
  {
    "text": "essential in order to be able to reason with you know sanely across the street",
    "start": "1224940",
    "end": "1231160"
  },
  {
    "text": "in services in a distributed system so then it becomes through our unit of determinism we can assure ensure that",
    "start": "1231160",
    "end": "1238120"
  },
  {
    "text": "within our service we have full determinism and I'll get back to why",
    "start": "1238120",
    "end": "1243760"
  },
  {
    "text": "this is important later okay it also gives us full autonomy which means that",
    "start": "1243760",
    "end": "1249010"
  },
  {
    "text": "the answer that the entities can come and go we got without stroke or fail and",
    "start": "1249010",
    "end": "1254500"
  },
  {
    "text": "and answer bounced back without affecting any other services in the system which is extremely important so",
    "start": "1254500",
    "end": "1262050"
  },
  {
    "text": "that was a lot of theories let's try to dive in a little bit you know practically what what it can look like",
    "start": "1262050",
    "end": "1268180"
  },
  {
    "text": "when event-driven service is communicated let's say we have some sort of user here the user might be another",
    "start": "1268180",
    "end": "1273370"
  },
  {
    "text": "service it might be another system it might be actually physical human sending a requesting okay so it sense that by",
    "start": "1273370",
    "end": "1280840"
  },
  {
    "text": "command it wants to do something okay that command is up on them it ends up on",
    "start": "1280840",
    "end": "1286060"
  },
  {
    "text": "the mailbox of the service and some sort of action is triggered okay out of that action is we create an event okay and we",
    "start": "1286060",
    "end": "1293860"
  },
  {
    "text": "publish that to our event stream or event bus servo or day of data fabric",
    "start": "1293860",
    "end": "1299740"
  },
  {
    "text": "you you might call it whatever you like I call it event stream okay and then you",
    "start": "1299740",
    "end": "1307570"
  },
  {
    "text": "know this event stream sort of relays that event to anyone that might be interested everyone that has subscribed",
    "start": "1307570",
    "end": "1313110"
  },
  {
    "text": "to that yeah and as all of that means that the event is relayed to to the to the other services mailboxes triggers in",
    "start": "1313110",
    "end": "1320500"
  },
  {
    "text": "action of some sort that might also trigger an event etc you know there might be an event sent back to the to",
    "start": "1320500",
    "end": "1327070"
  },
  {
    "text": "the user now completing the tasks etc or sent out to some other service due to to",
    "start": "1327070",
    "end": "1333100"
  },
  {
    "text": "continue to perform some sort of some sort of function it's also important that it doesn't necessarily",
    "start": "1333100",
    "end": "1338500"
  },
  {
    "text": "need to be services that sort of subscribe to these events it might be some sort of external a system or",
    "start": "1338500",
    "end": "1345490"
  },
  {
    "text": "summary in this case a database for example it might be H HDFS because I",
    "start": "1345490",
    "end": "1350680"
  },
  {
    "text": "mean we have we have did data processing service or services that rounds nicely",
    "start": "1350680",
    "end": "1356590"
  },
  {
    "text": "for example doing data mining on whatever events happen in the system etc",
    "start": "1356590",
    "end": "1361620"
  },
  {
    "text": "or it might be other type of services for external services etc I mean so the",
    "start": "1361620",
    "end": "1368760"
  },
  {
    "text": "really interesting thing here though is that this model requires a mindset that",
    "start": "1368760",
    "end": "1374560"
  },
  {
    "text": "is that that's it is at peace with eventual consistency you know because",
    "start": "1374560",
    "end": "1380140"
  },
  {
    "text": "because all these events are the commands flow in a fully asynchronous fashion which which might take some time",
    "start": "1380140",
    "end": "1387640"
  },
  {
    "text": "to wrap wrap your head around if you if you use the monolithic services or monolithic systems etc okay but the",
    "start": "1387640",
    "end": "1396250"
  },
  {
    "text": "event stream used in this fashion is great for a lot of things it can be used",
    "start": "1396250",
    "end": "1401260"
  },
  {
    "text": "as or community as a communication fabric it can be used as our integration",
    "start": "1401260",
    "end": "1406480"
  },
  {
    "text": "fabric integrating with other systems etc if you use be used as a replication",
    "start": "1406480",
    "end": "1411810"
  },
  {
    "text": "fabric to replicate data for availability okay it can be used as our",
    "start": "1411810",
    "end": "1417490"
  },
  {
    "text": "consensus fabric to make to make sense of the state across a distributed system",
    "start": "1417490",
    "end": "1424080"
  },
  {
    "text": "etc it can also be used as the persistence fabric to actually give you really available and reliable sort of",
    "start": "1424080",
    "end": "1432550"
  },
  {
    "text": "data prata persistence being the sort actual source of truth I'll dive into",
    "start": "1432550",
    "end": "1437560"
  },
  {
    "text": "this more later ok so and then side ask persistence some people might say then",
    "start": "1437560",
    "end": "1443830"
  },
  {
    "start": "1440000",
    "end": "1566000"
  },
  {
    "text": "ok but what's wrong with crud then I'm yeah I'm actually used to using crud yeah I'd say that crud is totally fine",
    "start": "1443830",
    "end": "1451000"
  },
  {
    "text": "for totally isolated data however most services don't have totally isolated",
    "start": "1451000",
    "end": "1457600"
  },
  {
    "text": "data what I beam a totally isolated you mean data there's no other service might ever be interested in totally isolated",
    "start": "1457600",
    "end": "1463990"
  },
  {
    "text": "data ok as soon as you as you don't have that as soon as you need to do some sauce cross service consistency ok",
    "start": "1463990",
    "end": "1472310"
  },
  {
    "text": "then then I think crowd completely breaks breaks down why because it's really really hard to do joins okay it",
    "start": "1472310",
    "end": "1480800"
  },
  {
    "text": "gives us I mean we can really can't use any of our old tricks like normalization joins and all this you know they all the",
    "start": "1480800",
    "end": "1488270"
  },
  {
    "text": "great things that we have in in sequel that would just take for granted they have we have with one single system image you know all that breaks down when",
    "start": "1488270",
    "end": "1495620"
  },
  {
    "text": "you have split up your daytime serve across multiple services with a networking between okay",
    "start": "1495620",
    "end": "1501620"
  },
  {
    "text": "it really gives us all the ad-hoc and very weak consistency guarantees",
    "start": "1501620",
    "end": "1506740"
  },
  {
    "text": "sometimes that often to ask so weeks they are unusable okay are you often you",
    "start": "1506740",
    "end": "1513650"
  },
  {
    "text": "know here customers complain about this though the reality continues to ruin to",
    "start": "1513650",
    "end": "1518690"
  },
  {
    "text": "ruin my life you know the problem is that as Pat Allen said two-phase commit is the anti availability protocol it's",
    "start": "1518690",
    "end": "1525710"
  },
  {
    "text": "extremely hard to build available systems using the distributed transaction two-phase commit etc so",
    "start": "1525710",
    "end": "1532490"
  },
  {
    "text": "we're maintaining or it's actually the Illuma trying to pretend that that the",
    "start": "1532490",
    "end": "1537740"
  },
  {
    "text": "world is strongly consistent across the network you know that's an illusion that",
    "start": "1537740",
    "end": "1542900"
  },
  {
    "text": "we've been living with for too long I believe it's time that we were to end that announce or accept the fact that",
    "start": "1542900",
    "end": "1548390"
  },
  {
    "text": "there that the world is eventually consistent there's really no such thing as strong consistency in the real world",
    "start": "1548390",
    "end": "1553460"
  },
  {
    "text": "it's just something we we as developers try to shoehorn into our or a very sort of limited model of the world and we are",
    "start": "1553460",
    "end": "1559100"
  },
  {
    "text": "surprised when it falls to Bart we shouldn't be you know it doesn't map how the reality actually actually",
    "start": "1559100",
    "end": "1564560"
  },
  {
    "text": "actually works strong consistent day is really the wrong default as I said",
    "start": "1564560",
    "end": "1571340"
  },
  {
    "start": "1566000",
    "end": "1598000"
  },
  {
    "text": "before I mean this roughly is really nothing wrong with the crowd it's really nothing wrong per se with strong",
    "start": "1571340",
    "end": "1576500"
  },
  {
    "text": "consistency it's it can really help us to to think in terms you know around",
    "start": "1576500",
    "end": "1581900"
  },
  {
    "text": "hard concepts in computer science it's a great thing a strong consistency but I believe it's the wrong thing to start",
    "start": "1581900",
    "end": "1588290"
  },
  {
    "text": "with when you design your system it will lead you down the wrong path okay",
    "start": "1588290",
    "end": "1593510"
  },
  {
    "text": "it makes yeah I think it just makes things worse so to speak so what can we",
    "start": "1593510",
    "end": "1598580"
  },
  {
    "start": "1598000",
    "end": "1626000"
  },
  {
    "text": "do then yeah we really have to rely on eventual consistency from the start and",
    "start": "1598580",
    "end": "1603890"
  },
  {
    "text": "then Oh on strong consistency when we have a chance okay instead of the other way",
    "start": "1603890",
    "end": "1611720"
  },
  {
    "text": "around Starkist wrong consistency and try to loosen it up here and there for",
    "start": "1611720",
    "end": "1617210"
  },
  {
    "text": "availability and and scale etc okay because I really think it's actually how",
    "start": "1617210",
    "end": "1623809"
  },
  {
    "text": "the world works okay we need to be bed rest or are just embracing reality in",
    "start": "1623809",
    "end": "1630289"
  },
  {
    "start": "1626000",
    "end": "1659000"
  },
  {
    "text": "our design session look at how the world actually works not the way we want it to work you know in order to teach to fit",
    "start": "1630289",
    "end": "1636710"
  },
  {
    "text": "you know the way we learn to design systems the last pen in 10 20 years we should don't fight reality we should",
    "start": "1636710",
    "end": "1643669"
  },
  {
    "text": "embrace it we will actually be better off in this new world of cloud computing and multi-core architectures were",
    "start": "1643669",
    "end": "1649909"
  },
  {
    "text": "actually we actually do have a distributed system right in the course you know even we even though we don't",
    "start": "1649909",
    "end": "1655909"
  },
  {
    "text": "think about it like that okay you know it's a fact of life that",
    "start": "1655909",
    "end": "1661340"
  },
  {
    "start": "1659000",
    "end": "1690000"
  },
  {
    "text": "you know information travels at the speed at the speed of light and that",
    "start": "1661340",
    "end": "1666380"
  },
  {
    "text": "puts a limit on the speed of information in in our in our system this means that",
    "start": "1666380",
    "end": "1671690"
  },
  {
    "text": "information has latency it's actually contrary than what Newton thought but then the later Einstein proved that you",
    "start": "1671690",
    "end": "1677390"
  },
  {
    "text": "know it's all in the in the eye of the beholder so to speak and this is a reality systems today it's not just an",
    "start": "1677390",
    "end": "1682970"
  },
  {
    "text": "esoteric thing it really affects systems today that this latency is there it's",
    "start": "1682970",
    "end": "1688789"
  },
  {
    "text": "something that we need to think of to think about you know but when we think about it you know information is always",
    "start": "1688789",
    "end": "1695659"
  },
  {
    "start": "1690000",
    "end": "1743000"
  },
  {
    "text": "from the past you know it's really true for everything we observe in the real in the real world when we've seen something",
    "start": "1695659",
    "end": "1701179"
  },
  {
    "text": "or hear something or experience something it's already very often happen quite some time ago there's always this",
    "start": "1701179",
    "end": "1707840"
  },
  {
    "text": "delay you know sir we're also looking into the past it's always in the eye of the beholder you know this means that",
    "start": "1707840",
    "end": "1714409"
  },
  {
    "text": "the present then now is actually relative we all experiencing different presses sorry for being you're going",
    "start": "1714409",
    "end": "1721100"
  },
  {
    "text": "going off or philosophical on you here but I really think that we need to fully",
    "start": "1721100",
    "end": "1726230"
  },
  {
    "text": "embrace this view of the world that there is no now okay everything is relative this means that when we design",
    "start": "1726230",
    "end": "1734000"
  },
  {
    "text": "microservices system we need to think about each services having their own now then that's that it's okay that it's not",
    "start": "1734000",
    "end": "1741559"
  },
  {
    "text": "fully consistent to cross services you know because as soon as we exit the boundary of the service we enter this",
    "start": "1741559",
    "end": "1748610"
  },
  {
    "start": "1743000",
    "end": "1795000"
  },
  {
    "text": "wild ocean of non-determinism you know that's the world of distributed systems it's a quite scary world you know where",
    "start": "1748610",
    "end": "1755450"
  },
  {
    "text": "systems failed in the most spectacular ways intricate ways you know where messages get lost never to be found",
    "start": "1755450",
    "end": "1761840"
  },
  {
    "text": "again you know where messages get garbled get a good reorder etc you know and we're failure detection it's really",
    "start": "1761840",
    "end": "1767720"
  },
  {
    "text": "nothing but a guessing game you have really no clue for sure if the services that you talked to us down we're just",
    "start": "1767720",
    "end": "1773929"
  },
  {
    "text": "doing GC who's out for lunch or whatever you know this might sound terrifying but",
    "start": "1773929",
    "end": "1779240"
  },
  {
    "text": "it's also this world the space in between the services the non-determinism between the services that gives us tools",
    "start": "1779240",
    "end": "1785720"
  },
  {
    "text": "for resiliency elasticity isolation etc",
    "start": "1785720",
    "end": "1791390"
  },
  {
    "text": "without this just really no isolation etc etc right so what I think what we need to do is find have better tools for",
    "start": "1791390",
    "end": "1798200"
  },
  {
    "start": "1795000",
    "end": "1867000"
  },
  {
    "text": "modeling this uncertainty between the services because you know a lot of people say yeah micro services is not",
    "start": "1798200",
    "end": "1804470"
  },
  {
    "text": "that hard they say just you know you know you know generate a micro service eg or PC or whatever and I'm done you",
    "start": "1804470",
    "end": "1809780"
  },
  {
    "text": "know no I mean the e that's the easy part the services themselves is the easy part the hard part is the thing in",
    "start": "1809780",
    "end": "1815750"
  },
  {
    "text": "between the micro services okay and yeah at the end I mean we've learned the hard",
    "start": "1815750",
    "end": "1822350"
  },
  {
    "text": "way not to hide complexities you know not to hide the network for example we",
    "start": "1822350",
    "end": "1828500"
  },
  {
    "text": "try that with our PC to fail we try to incorporate ABS etc the list you know is",
    "start": "1828500",
    "end": "1834919"
  },
  {
    "text": "long the graveyard of distributed systems you know things that didn't work you know it's always better to embrace",
    "start": "1834919",
    "end": "1840790"
  },
  {
    "text": "the constraints the constraints of the network the constraints of reality and",
    "start": "1840790",
    "end": "1846230"
  },
  {
    "text": "and work with things instead of trying to you know pretend that they're there they're not there so Patel and once said",
    "start": "1846230",
    "end": "1852980"
  },
  {
    "text": "you know that in a system which can encounter disabilities did distributed transaction the management of a surgery",
    "start": "1852980",
    "end": "1859010"
  },
  {
    "text": "must be implemented in the business logic you know how a harm in doing the",
    "start": "1859010",
    "end": "1864770"
  },
  {
    "text": "protocols how events flow between the systems and I really believe that events can lead to greater certainty in the",
    "start": "1864770",
    "end": "1871100"
  },
  {
    "start": "1867000",
    "end": "1872000"
  },
  {
    "text": "system you know mark burgers he wrote this great book in search of certainty I",
    "start": "1871100",
    "end": "1876810"
  },
  {
    "start": "1872000",
    "end": "1912000"
  },
  {
    "text": "really recommend you to read it it talks a lot about autonomy and it is very applicable to this new world ok and and",
    "start": "1876810",
    "end": "1884280"
  },
  {
    "text": "where it says that an autonomous component can only promise its own behavior autonomy makes information",
    "start": "1884280",
    "end": "1891030"
  },
  {
    "text": "local which leads to greater certainty and stability",
    "start": "1891030",
    "end": "1897050"
  },
  {
    "text": "essentially since if you what it says that if you're only relying on local information there's not couple to",
    "start": "1897050",
    "end": "1903030"
  },
  {
    "text": "anything else in the world then you're fully autonomous you're in charge of your own decisions",
    "start": "1903030",
    "end": "1909230"
  },
  {
    "text": "ok and that's a really really good thing ok so events can really help us craft",
    "start": "1909230",
    "end": "1914790"
  },
  {
    "start": "1912000",
    "end": "1952000"
  },
  {
    "text": "sir these autonomous islands of determinism mr. shields us from this",
    "start": "1914790",
    "end": "1921030"
  },
  {
    "text": "craziness this crazy ocean of non-determinism where you are safe you know we can use mutable state where",
    "start": "1921030",
    "end": "1926940"
  },
  {
    "text": "things are strongly consistent sorweful things are fully deterministic etc where you can live happily under the illusion",
    "start": "1926940",
    "end": "1933420"
  },
  {
    "text": "that you know there is that that time is absolute that there is a single now so",
    "start": "1933420",
    "end": "1939360"
  },
  {
    "text": "to speak and and we need in order to do that we need to craft well-defined protocols which events you accept and",
    "start": "1939360",
    "end": "1946260"
  },
  {
    "text": "which events you omit which facts you accept which facts you omit ok the",
    "start": "1946260",
    "end": "1952680"
  },
  {
    "start": "1952000",
    "end": "1959000"
  },
  {
    "text": "question there I mean how can we work with data across isolated services how can we assure consistency and consensus",
    "start": "1952680",
    "end": "1958290"
  },
  {
    "text": "yep at Elland again he has a really nice framework I think for how to think of a consistency in this new world sir he",
    "start": "1958290",
    "end": "1965280"
  },
  {
    "start": "1959000",
    "end": "2003000"
  },
  {
    "text": "talks about inside data as for current present that's the state inside your",
    "start": "1965280",
    "end": "1970350"
  },
  {
    "text": "service ok then he talks about outside data as the blast from the past",
    "start": "1970350",
    "end": "1976350"
  },
  {
    "text": "you know that's the events arriving to you things that already happen you can choose to accept or ignore ok",
    "start": "1976350",
    "end": "1982830"
  },
  {
    "text": "and then we then between services he talks about hope for the future which is",
    "start": "1982830",
    "end": "1989160"
  },
  {
    "text": "like almost poetic yes I love that you know that's our commands that someone sends to command hoping that someone",
    "start": "1989160",
    "end": "1995490"
  },
  {
    "text": "else would care and do something about it ok this is a really good way there's mental model like to think about these",
    "start": "1995490",
    "end": "2002120"
  },
  {
    "text": "these types of systems it's also important to understand that Oh microservices is really a",
    "start": "2002120",
    "end": "2008150"
  },
  {
    "start": "2003000",
    "end": "2046000"
  },
  {
    "text": "never-ending stream towards convergence you will never ever really reach full",
    "start": "2008150",
    "end": "2016160"
  },
  {
    "text": "convergence you're always trying to catch up you're always trying to reach that you might actually reach it for a",
    "start": "2016160",
    "end": "2022100"
  },
  {
    "text": "millisecond but then you're you know behind again right because the system is",
    "start": "2022100",
    "end": "2027800"
  },
  {
    "text": "in constant motion data constantly arrives at faster and faster speeds you",
    "start": "2027800",
    "end": "2033260"
  },
  {
    "text": "know it really is know globally consistent now this is also a nice",
    "start": "2033260",
    "end": "2038600"
  },
  {
    "text": "mental model I think in order to to try to understand how to think about systems",
    "start": "2038600",
    "end": "2043790"
  },
  {
    "text": "in this new world ok another fundamental lesson I've learned the hard ways that resilience is",
    "start": "2043790",
    "end": "2049878"
  },
  {
    "text": "by design ok this is a photo of a home in Christ",
    "start": "2049879",
    "end": "2055190"
  },
  {
    "text": "in Gil Christ in Texas it was designed to service these flood waters and you",
    "start": "2055190",
    "end": "2063710"
  },
  {
    "text": "can see I'm sure when when Hurricane Ike Karen if you remember that in 2008 came in is one of the few houses actually",
    "start": "2063710",
    "end": "2069830"
  },
  {
    "text": "stood strong why because it was it was designed for resilience from the start",
    "start": "2069830",
    "end": "2075530"
  },
  {
    "text": "ok and I really think that events can help us manage failure instead of trying",
    "start": "2075530",
    "end": "2081020"
  },
  {
    "start": "2076000",
    "end": "2157000"
  },
  {
    "text": "to avoid it I see way way too many times when people building you know systems",
    "start": "2081020",
    "end": "2086960"
  },
  {
    "text": "with track at statements literally everywhere but we're trying to prevent it's really really scared about failures",
    "start": "2086960",
    "end": "2092870"
  },
  {
    "text": "and we call them exceptions if they're even though they're really not exceptional at all there are normally",
    "start": "2092870",
    "end": "2098060"
  },
  {
    "text": "guaranteed to happen and as a real sewer service or Arcos are literally sort of",
    "start": "2098060",
    "end": "2104980"
  },
  {
    "text": "sort of we scatter track caches across our code base everywhere but I really",
    "start": "2104980",
    "end": "2111350"
  },
  {
    "text": "think that that's sort of the fundamentally wrong way to think to think about failure failures is sort of nothing to be scared about it's now is",
    "start": "2111350",
    "end": "2118600"
  },
  {
    "text": "inevitable I mean it will happen even if you don't like it or not that it's better just to think about how to manage",
    "start": "2118600",
    "end": "2124940"
  },
  {
    "text": "failure than trying to work hard to prevent it all the time you know being scared about of it it's actually a",
    "start": "2124940",
    "end": "2131420"
  },
  {
    "text": "natural state in the application life cycle in the in the services life cycle I mean it's you have start you have stop",
    "start": "2131420",
    "end": "2138170"
  },
  {
    "text": "your resume you have failed you know and if you draw it up it's this as a state machine and",
    "start": "2138170",
    "end": "2144890"
  },
  {
    "text": "and and and if you then end up in the failed state you know that all this was",
    "start": "2144890",
    "end": "2149930"
  },
  {
    "text": "actually accept and expected and you know exactly how to get out of there instead of being scared you know that",
    "start": "2149930",
    "end": "2155749"
  },
  {
    "text": "everything will blow will blow up and I really believe that events and this",
    "start": "2155749",
    "end": "2161150"
  },
  {
    "start": "2157000",
    "end": "2255000"
  },
  {
    "text": "isolation that micro-services gives us can really help with building these type of reliable systems you know and and and",
    "start": "2161150",
    "end": "2168259"
  },
  {
    "text": "I think the requirements that I have for it for this we're saying failure model compared to you know this the strong",
    "start": "2168259",
    "end": "2174170"
  },
  {
    "text": "clapping that we have often having MA in model lifts with one one failed looking like you know blow the whole pull stack",
    "start": "2174170",
    "end": "2179420"
  },
  {
    "text": "all the way up in the users face is that failures need to be contained fully contained isolated to avoid cascading",
    "start": "2179420",
    "end": "2186920"
  },
  {
    "text": "failures they need to be refined as events they need to be signaled asynchronously to whoever might be",
    "start": "2186920",
    "end": "2193279"
  },
  {
    "text": "interested in learning that I just died okay and they need to be they're not observed ideal about AB at least one but",
    "start": "2193279",
    "end": "2199819"
  },
  {
    "text": "why not by many okay and then they need to be managed so outside or they're all",
    "start": "2199819",
    "end": "2205400"
  },
  {
    "text": "the failed context in this and here we have the network it's a really good boundary between the failed component or",
    "start": "2205400",
    "end": "2211549"
  },
  {
    "text": "the failed service and ourselves you know and anis and there's no surprise that this model is very much as I talked",
    "start": "2211549",
    "end": "2218210"
  },
  {
    "text": "about in the venturi with services if you look at if you see failure like this just being an event that means that it",
    "start": "2218210",
    "end": "2224390"
  },
  {
    "text": "will fit right into the rest of the workflow it's just an event flower flow it's just business logic instead of you",
    "start": "2224390",
    "end": "2231470"
  },
  {
    "text": "know coming emitting a valence you know from the result that you just computed",
    "start": "2231470",
    "end": "2236690"
  },
  {
    "text": "to whoever's interested you emit an event see ya okay I couldn't complete this just died sorry to the to ever",
    "start": "2236690",
    "end": "2243109"
  },
  {
    "text": "might be interested there's nothing exceptional about the way information flows you know when it comes to failures",
    "start": "2243109",
    "end": "2249589"
  },
  {
    "text": "either just fits right into it and and and you have a really good way of managing failure they'd failure this way",
    "start": "2249589",
    "end": "2256450"
  },
  {
    "text": "finally event event I was gonna talk a little bit about vent based persistence because it's it's something that people",
    "start": "2256450",
    "end": "2262130"
  },
  {
    "start": "2262000",
    "end": "2417000"
  },
  {
    "text": "talk a lot about but not perhaps everyone knows exactly what it means so how",
    "start": "2262130",
    "end": "2270530"
  },
  {
    "text": "one person that that I get a lot is like how can we transition from a crowd based system to a more a more event-driven",
    "start": "2270530",
    "end": "2278390"
  },
  {
    "text": "system okay as I said I think it's fine to use crowd but if you want to use it",
    "start": "2278390",
    "end": "2284300"
  },
  {
    "text": "to serve more and it worked towards a more event-driven system a really nice pattern is to combine that with event",
    "start": "2284300",
    "end": "2291200"
  },
  {
    "text": "stream the event stream that I just showed you in these illustrations some some some some time ago okay and you can",
    "start": "2291200",
    "end": "2297530"
  },
  {
    "text": "use that to get sort of an internal ecosystem materialized view of the world so try to illustrate what I mean here if",
    "start": "2297530",
    "end": "2303950"
  },
  {
    "text": "let's say we have two services service a and service B both of them are using crowd okay sort of storing your data in",
    "start": "2303950",
    "end": "2312380"
  },
  {
    "text": "table a and table B let's say and here and both of them have sort of hook to",
    "start": "2312380",
    "end": "2318080"
  },
  {
    "text": "our event bus okay let now when when when service a in crowd stores some some",
    "start": "2318080",
    "end": "2327680"
  },
  {
    "text": "record in table a it's also in anatomic fashion that's important pushes that",
    "start": "2327680",
    "end": "2334430"
  },
  {
    "text": "change out to the event bus okay it's in either or either both of these operations fails or a Norden or not none",
    "start": "2334430",
    "end": "2340250"
  },
  {
    "text": "of them fails if we have that in place you know we are on a good path here because we're then in the in let's say",
    "start": "2340250",
    "end": "2347480"
  },
  {
    "text": "the service sir that the service B here also wants to sort of do the sale you do the same thing right then in service C",
    "start": "2347480",
    "end": "2354920"
  },
  {
    "text": "services interested in updates of both or a loops service a and service be here",
    "start": "2354920",
    "end": "2361670"
  },
  {
    "text": "okay so it's then it's served just subscribes",
    "start": "2361670",
    "end": "2367280"
  },
  {
    "text": "to the events from both of these event streams and it can then it sits itself",
    "start": "2367280",
    "end": "2373640"
  },
  {
    "text": "internally join table a in table B all the records that have be stored there",
    "start": "2373640",
    "end": "2379720"
  },
  {
    "text": "eventually because this is also eventually consistent so ends up in in",
    "start": "2379720",
    "end": "2386060"
  },
  {
    "text": "services C own own an internal table acid acid acid join and then it can",
    "start": "2386060",
    "end": "2391340"
  },
  {
    "text": "serve the user using this this materialized view so to speak but it's",
    "start": "2391340",
    "end": "2397190"
  },
  {
    "text": "also very important here that this is still eventually consistent so we doesn't we don't solve the problem of",
    "start": "2397190",
    "end": "2403280"
  },
  {
    "text": "having strong curses across the network we just in serve loosening up the guarantees a little bit",
    "start": "2403280",
    "end": "2409130"
  },
  {
    "text": "and we're on a path towards marriage medicine marrying crud with a more event",
    "start": "2409130",
    "end": "2415220"
  },
  {
    "text": "based way way of thinking okay but I think we can do better I mean Jim Gray was said that update in place strikes",
    "start": "2415220",
    "end": "2421550"
  },
  {
    "start": "2417000",
    "end": "2480000"
  },
  {
    "text": "system designer as the cardinal sin it violates the cap traditional accounting principles that's been used that that's",
    "start": "2421550",
    "end": "2429710"
  },
  {
    "text": "been absurd for hundreds of years you know the the per the main problem with crowd is update in place that we actually have destructive updates you",
    "start": "2429710",
    "end": "2436400"
  },
  {
    "text": "know yet again I think we need to relearn and learn from the real world will relearn basic accounting principles",
    "start": "2436400",
    "end": "2443990"
  },
  {
    "text": "how things have actually these things have been done on pen and paper for hundreds of years okay Patel and also said that the truth",
    "start": "2443990",
    "end": "2451280"
  },
  {
    "text": "is the law the database is the cache of the subset of the log the question is why work with the cache of the subset",
    "start": "2451280",
    "end": "2458510"
  },
  {
    "text": "when it could work with the real thing I mean there is a reason why we use it update in place you know disk space used",
    "start": "2458510",
    "end": "2464720"
  },
  {
    "text": "to be extremely expensive so there was a reason that you actually have to preserve disk space but today this",
    "start": "2464720",
    "end": "2471260"
  },
  {
    "text": "debase is incredibly cheap there's no reason to throw away historic data and",
    "start": "2471260",
    "end": "2476720"
  },
  {
    "text": "here the amount log can really really be a great thing a really brilliant log in",
    "start": "2476720",
    "end": "2482090"
  },
  {
    "start": "2480000",
    "end": "2553000"
  },
  {
    "text": "here can be sort of the bedrock on which we can build a lot of the hard things here like consistency like availability",
    "start": "2482090",
    "end": "2488090"
  },
  {
    "text": "scalability and traceability etc and you know Event log is all about storing each",
    "start": "2488090",
    "end": "2493850"
  },
  {
    "text": "event in order as they arrive on disk sir in is in for durable ledger okay",
    "start": "2493850",
    "end": "2502670"
  },
  {
    "text": "like just like a transaction log is used you know in in Oracle or or any sort of",
    "start": "2502670",
    "end": "2508130"
  },
  {
    "text": "sequel database is just that we we expose it to us as developers write off and a great Patrick on top event logging",
    "start": "2508130",
    "end": "2514910"
  },
  {
    "text": "is something called the best sourcing its sister that's the and that can work its where as secure for this card little",
    "start": "2514910",
    "end": "2521660"
  },
  {
    "text": "scene of destructive updates and it's really that you log it works that you log all state changing events in the",
    "start": "2521660",
    "end": "2528620"
  },
  {
    "text": "event log everything that will update the state of your internal state of your of your component right so we use it to",
    "start": "2528620",
    "end": "2536060"
  },
  {
    "text": "back up the the aggregate this will give us a way to have strong consistency within each each service",
    "start": "2536060",
    "end": "2542720"
  },
  {
    "text": "backed by a durable event log okay but we can add eventual consistency between the IRA gates so I think it really gives",
    "start": "2542720",
    "end": "2550190"
  },
  {
    "text": "us the best of both worlds and sir the way it works is that let's say we have",
    "start": "2550190",
    "end": "2557720"
  },
  {
    "start": "2553000",
    "end": "2936000"
  },
  {
    "text": "the happy path first in the in the in the happy path we first receive and verify the command let's say it is an",
    "start": "2557720",
    "end": "2563720"
  },
  {
    "text": "approved payment we we create the event sort of representing that that action",
    "start": "2563720",
    "end": "2571820"
  },
  {
    "text": "that we're about to do let's call it payment to prove we append it to the event log and then so we update in our",
    "start": "2571820",
    "end": "2578990"
  },
  {
    "text": "internal component state and then finally we Robert where other side effects to whoever the fire fire the",
    "start": "2578990",
    "end": "2584330"
  },
  {
    "text": "nukes or whatever I were in the end the sad pathway we want to recover from failure for example I wonder we replay",
    "start": "2584330",
    "end": "2590840"
  },
  {
    "text": "it because we wanted replicate it for redundancy etc or replay it for debug",
    "start": "2590840",
    "end": "2597290"
  },
  {
    "text": "ability or etc I mean then the only thing we do into a real we rerun sort of",
    "start": "2597290",
    "end": "2602810"
  },
  {
    "text": "stage 3 we rehydrate the events from the event log and we update the internal component state we don't round the side",
    "start": "2602810",
    "end": "2609560"
  },
  {
    "text": "effects again we just bring it back where it were when it's failed ok and this is something that marking foul",
    "start": "2609560",
    "end": "2616150"
  },
  {
    "text": "sometimes called the memory image pattern we can wish you can have you",
    "start": "2616150",
    "end": "2621500"
  },
  {
    "text": "know you serve your your service having in mem and like just in memory data you",
    "start": "2621500",
    "end": "2628010"
  },
  {
    "text": "know but it still durably persisted on disk for full availability and there is",
    "start": "2628010",
    "end": "2634190"
  },
  {
    "text": "the nice thing here is that we have one single source of truth for all our history and that's ever happened in the",
    "start": "2634190",
    "end": "2639920"
  },
  {
    "text": "in the service and in all services it allows for this a durable in-memory state that can be extremely fast you",
    "start": "2639920",
    "end": "2647960"
  },
  {
    "text": "know it's extremely easy to work with because it avoids this you know this in famous object relational impedance",
    "start": "2647960",
    "end": "2654830"
  },
  {
    "text": "mismatch there's no reason to map your objects or your your your your runtime",
    "start": "2654830",
    "end": "2660080"
  },
  {
    "text": "representation down to tables anymore which also saves a lot of time and a lot of hassles and it also allows others to",
    "start": "2660080",
    "end": "2667880"
  },
  {
    "text": "subscribe on these on the on this on this stage Changez okay I mean there might be",
    "start": "2667880",
    "end": "2674150"
  },
  {
    "text": "others there might be interested in it you know there are other serve serve others other type of systems you know",
    "start": "2674150",
    "end": "2680800"
  },
  {
    "text": "running Hadoop jobs later on on the on the on the full data set you know the",
    "start": "2680800",
    "end": "2686000"
  },
  {
    "text": "join of all your services etc etc it also tends Event log in general test a",
    "start": "2686000",
    "end": "2692090"
  },
  {
    "text": "very good mechanical sympathy be kind of sympathy sort of a coin by Morton Thompson but what it means that that is",
    "start": "2692090",
    "end": "2698150"
  },
  {
    "text": "sort of the pattern of the way design software matches very well with how modern hardware works you know the event",
    "start": "2698150",
    "end": "2705380"
  },
  {
    "text": "log gives us a way to have a single writer writing right down to this in order you know fully fully uncontained",
    "start": "2705380",
    "end": "2713060"
  },
  {
    "text": "it and you know if you've been around the block if we're building so concurrent systems or distribution",
    "start": "2713060",
    "end": "2719780"
  },
  {
    "text": "systems for a while you know that contention is the biggest scalability care killer and and also contention you",
    "start": "2719780",
    "end": "2726070"
  },
  {
    "text": "can also really bring down availability etc so another great sir we're great",
    "start": "2726070",
    "end": "2734210"
  },
  {
    "text": "pattern on top or in tandem I'd say with the way the event sourcing is a",
    "start": "2734210",
    "end": "2740000"
  },
  {
    "text": "practical CQRS you know securest gives us a great tool for the problem of when",
    "start": "2740000",
    "end": "2747290"
  },
  {
    "text": "observe serve it gives us the great tool",
    "start": "2747290",
    "end": "2752420"
  },
  {
    "text": "for so separating reads and writes it might be you know you're the reason in the system might have very different",
    "start": "2752420",
    "end": "2758870"
  },
  {
    "text": "characteristics than write that then the writes sort of characteristic both in",
    "start": "2758870",
    "end": "2764630"
  },
  {
    "text": "terms of consistency performance availability its etc secure server allows you to decouple these worlds and",
    "start": "2764630",
    "end": "2771080"
  },
  {
    "text": "store both of these the read side and the right side and the optimal format for its purpose so sort of sort of so to",
    "start": "2771080",
    "end": "2779090"
  },
  {
    "text": "speak you know you might for example have it have a read heavy system you know that then you can search you to",
    "start": "2779090",
    "end": "2785090"
  },
  {
    "text": "scale out the read side independently author of the right side etc instead of",
    "start": "2785090",
    "end": "2791570"
  },
  {
    "text": "having no all lumped together makes it really hard to give it like turn turn there right now it's you know she'll",
    "start": "2791570",
    "end": "2797450"
  },
  {
    "text": "turn you to scale or both at the same time etc and and you know if you if you should",
    "start": "2797450",
    "end": "2804980"
  },
  {
    "text": "combine this with the event sourcing there's I mean if that mean that means that you can use the the event log as a right side",
    "start": "2804980",
    "end": "2810710"
  },
  {
    "text": "we all talked a lot about that it's really good fit for storing events in in",
    "start": "2810710",
    "end": "2816110"
  },
  {
    "text": "in in an event-driven system however event logging makes it really hard to do queries to do joint etc and this is why",
    "start": "2816110",
    "end": "2822830"
  },
  {
    "text": "CQRS who comes in very handy because it allows that to store the the real model",
    "start": "2822830",
    "end": "2827900"
  },
  {
    "text": "in an optimal format for reading and that's often you know an AR DBMS or a",
    "start": "2827900",
    "end": "2834280"
  },
  {
    "text": "relational database or or enough sequel database source or a graph database or",
    "start": "2834280",
    "end": "2839810"
  },
  {
    "text": "something like that no so let's say that we have we have we have a user here that",
    "start": "2839810",
    "end": "2845420"
  },
  {
    "text": "says the commands to the right side model here the right side instance just writes it down to the amount log in",
    "start": "2845420",
    "end": "2851840"
  },
  {
    "text": "order very fast very convenient the its it also then sort of woman wants it down",
    "start": "2851840",
    "end": "2858380"
  },
  {
    "text": "that's a syrup amidst an event saying I just store this in my event log who's who's who's interested okay then it",
    "start": "2858380",
    "end": "2866000"
  },
  {
    "text": "might be another system here the read side mul that that's interested in this",
    "start": "2866000",
    "end": "2871640"
  },
  {
    "text": "in this in this update and it can serve subscribe to that and then choose to store that in the ultimate format for",
    "start": "2871640",
    "end": "2878600"
  },
  {
    "text": "the read side often a sequel databases or Cassandra or something like that and then and then serve that mall to the",
    "start": "2878600",
    "end": "2884810"
  },
  {
    "text": "user so you can do queries using you know traditional sequel for example while still reaping all the benefits of",
    "start": "2884810",
    "end": "2891530"
  },
  {
    "text": "the event-driven designed for for the for the for the durable data storage once again here it's important to",
    "start": "2891530",
    "end": "2898700"
  },
  {
    "text": "understand this eventual consistent between these two subsystems so this there might be you know a delay for",
    "start": "2898700",
    "end": "2905090"
  },
  {
    "text": "queries you might not even be read your own rights etc this of course ways to to add layer of reliability to that using",
    "start": "2905090",
    "end": "2911870"
  },
  {
    "text": "stuff like raft or things like that you know but the bare-bones you know view of",
    "start": "2911870",
    "end": "2917390"
  },
  {
    "text": "this is that it's eventually consistent between sir events can also really help",
    "start": "2917390",
    "end": "2923630"
  },
  {
    "text": "us or manage time which is also a quite interesting thing you know Greg young wants that the modeling events forces",
    "start": "2923630",
    "end": "2929180"
  },
  {
    "text": "you to have a temporal focus on what's going on the system where time becomes a crucial factor in the system",
    "start": "2929180",
    "end": "2936000"
  },
  {
    "start": "2936000",
    "end": "2969000"
  },
  {
    "text": "and what I mean by that is events the real events working really allows us to model time in Nice where we're events",
    "start": "2936000",
    "end": "2942000"
  },
  {
    "text": "can be sort of event is our snapshot in time you know the latest event this is where we are right now right an event ID",
    "start": "2942000",
    "end": "2949200"
  },
  {
    "text": "can be an index of the time so the cursor how time flows through the system and the bount log is our full history",
    "start": "2949200",
    "end": "2956160"
  },
  {
    "text": "you know with everything that's ever happened is there a database on the past as well as database of the present well the",
    "start": "2956160",
    "end": "2963510"
  },
  {
    "text": "regular single day sequel databases are just the database of the prescient discarding the past okay and",
    "start": "2963510",
    "end": "2969420"
  },
  {
    "start": "2969000",
    "end": "2974000"
  },
  {
    "text": "and one finally one interesting thing is that it really allows for time travel okay we can where you can have things",
    "start": "2969420",
    "end": "2975630"
  },
  {
    "start": "2974000",
    "end": "3007000"
  },
  {
    "text": "like you can replay the log for historic debugging for auditing for food food for full traceability understandable what",
    "start": "2975630",
    "end": "2982590"
  },
  {
    "text": "went wrong and why it went wrong is replay the event log bringing component up to state you can replay it slowly etc",
    "start": "2982590",
    "end": "2989010"
  },
  {
    "text": "you replay the logon failure you can replay or so bring the component up to",
    "start": "2989010",
    "end": "2994170"
  },
  {
    "text": "the state where it was you can replay it for replication as well you can have all kind of replicas all that is essentially",
    "start": "2994170",
    "end": "3000140"
  },
  {
    "text": "free because you can all you need is subscribers to the event log and choose to sort of replay it at any point so kid",
    "start": "3000140",
    "end": "3008990"
  },
  {
    "start": "3007000",
    "end": "3052000"
  },
  {
    "text": "so I'm I just want to give you the key takeaway sir if the events first design helps your a reduce risk when",
    "start": "3008990",
    "end": "3015380"
  },
  {
    "text": "modernizing application I really be believe there is a name able to move faster into this new world sir tours are",
    "start": "3015380",
    "end": "3022520"
  },
  {
    "text": "resilient and fully scalable architecture by design autonomous services by usually invert the control",
    "start": "3022520",
    "end": "3028460"
  },
  {
    "text": "flow compared to two regular systems it allows you to balance certainty and uncertainty and avoid things like like",
    "start": "3028460",
    "end": "3035540"
  },
  {
    "text": "lock rod in orem the impedance mismatch etcetera take control of your systems history etc and and balance for strong",
    "start": "3035540",
    "end": "3044780"
  },
  {
    "text": "and eventual consistency in in in which is really the hardest thing you can do I think in a distributed system in general",
    "start": "3044780",
    "end": "3052040"
  },
  {
    "start": "3052000",
    "end": "3066000"
  },
  {
    "text": "I mean I I personally come from experience learning this to Hardware",
    "start": "3052040",
    "end": "3057050"
  },
  {
    "text": "using arca archa is a great tool kit for that if you give to build like autonomous resilient services based on",
    "start": "3057050",
    "end": "3063440"
  },
  {
    "text": "the actor model you can just go and check it out on our Kyodai oh I won't give you any more plugs about that if",
    "start": "3063440",
    "end": "3068810"
  },
  {
    "start": "3066000",
    "end": "3088000"
  },
  {
    "text": "you want to learn more about this I wrote this mini book this for death free it's free it's freely available on our Riley it goes",
    "start": "3068810",
    "end": "3075890"
  },
  {
    "text": "down into a little bit of more detail so you can download here a bitly reactive Microsystems so that's all I had sorry",
    "start": "3075890",
    "end": "3082640"
  },
  {
    "text": "for being overtime a minute thanks for attention [Applause]",
    "start": "3082640",
    "end": "3090339"
  }
]