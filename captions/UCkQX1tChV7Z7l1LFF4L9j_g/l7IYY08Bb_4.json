[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "[Music]",
    "start": "2550",
    "end": "12920"
  },
  {
    "text": "I'm Michael side um I currently work for Booze Allen Hamilton and I've been using Scala for about a year now um I started",
    "start": "12920",
    "end": "21680"
  },
  {
    "text": "was a big Java developer back in the day and started with play one back when Scala was just a package and uh as they",
    "start": "21680",
    "end": "30000"
  },
  {
    "text": "maned to play too I uh kind of got the Scola bug and I've caught it and been ever since so um just a few questions to",
    "start": "30000",
    "end": "38160"
  },
  {
    "text": "you guys as the audience so I can kind of gear my talk uh please feel free to encourage they're not hard questions uh",
    "start": "38160",
    "end": "44160"
  },
  {
    "text": "first off who went to Josh's talk earlier today all right that's what I was scared",
    "start": "44160",
    "end": "50160"
  },
  {
    "text": "of not really um so he had a good nice talk on uh futures um which is uh one",
    "start": "50160",
    "end": "55840"
  },
  {
    "text": "one of my main topics of what I was going to cover today but I'll kind of fast forward through that part and kind of explore some other aspects of play",
    "start": "55840",
    "end": "61960"
  },
  {
    "text": "that I really like um so my next question is has anybody",
    "start": "61960",
    "end": "68400"
  },
  {
    "start": "66000",
    "end": "116000"
  },
  {
    "text": "ever used or seen of play framework before all right awesome now who has put",
    "start": "68400",
    "end": "74000"
  },
  {
    "text": "a website online with said play framework all right sweet so we got a",
    "start": "74000",
    "end": "79680"
  },
  {
    "text": "lot of people who are comfortable out there and I'm sure you guys have used um AA which is a pretty sweet package that",
    "start": "79680",
    "end": "86320"
  },
  {
    "text": "is uh on the typ safe platform so uh I'm going to go ahead and uh just give you a little overview of my talk uh this is",
    "start": "86320",
    "end": "92920"
  },
  {
    "text": "about just building the web service for a common man um a lot of the talks we've we've seen today are SE uh very big",
    "start": "92920",
    "end": "99439"
  },
  {
    "text": "optimizations um and so I kind of want to take a step back from it and kind of say hey this is how you start and uh and",
    "start": "99439",
    "end": "106520"
  },
  {
    "text": "then build using your web services and then hopefully we can get to the point where a hop cluster would be kind of cool um but you can't really when you",
    "start": "106520",
    "end": "112640"
  },
  {
    "text": "build your startup you can't really do that at the very beginning so um first uh the basics uh",
    "start": "112640",
    "end": "120000"
  },
  {
    "start": "116000",
    "end": "173000"
  },
  {
    "text": "async versus blocking IO right so one of the cool things that Scala allows you to",
    "start": "120000",
    "end": "125920"
  },
  {
    "text": "do is to create these really nice callbacks if you have ever seen a nodejs application you understand the Callback",
    "start": "125920",
    "end": "131800"
  },
  {
    "text": "hell that exists right so what the the map functions and all of these callback",
    "start": "131800",
    "end": "137959"
  },
  {
    "text": "functions really make it nice and easy for you to create really consistent and clean code so what we're trying to",
    "start": "137959",
    "end": "143879"
  },
  {
    "text": "prevent here is to kind of create this nonblocking area so you can see on the",
    "start": "143879",
    "end": "150519"
  },
  {
    "text": "left with the uh red side you have to wait for your web service to come back for you even while you're even before",
    "start": "150519",
    "end": "156599"
  },
  {
    "text": "your database call right because database calls at least for most of the",
    "start": "156599",
    "end": "162200"
  },
  {
    "text": "well at least the stuff that I use um that use a jdbc and that is blocking so",
    "start": "162200",
    "end": "167440"
  },
  {
    "text": "on the right you can obviously see you're going to save yourself a good a good percentage of",
    "start": "167440",
    "end": "172920"
  },
  {
    "text": "time all right so play framework I'll go through this with because most of you guys have done it um one of the major",
    "start": "172920",
    "end": "178519"
  },
  {
    "start": "173000",
    "end": "212000"
  },
  {
    "text": "features I loved about it was the one click reload uh it will recompile your app for you on the fly through the",
    "start": "178519",
    "end": "184519"
  },
  {
    "text": "browser um it comes out of the box with all these cool features like less um coffee script uh the fun stuff that make",
    "start": "184519",
    "end": "192080"
  },
  {
    "text": "web development what we all know and love um it's done by types safe they've done a hell of a good job uh especially",
    "start": "192080",
    "end": "198760"
  },
  {
    "text": "over the last week they released 2. one which is a huge milestone as well as uh",
    "start": "198760",
    "end": "204840"
  },
  {
    "text": "uh slick one as well uh so there's been a huge updates and it's really cool to see them uh doing their work and I thank",
    "start": "204840",
    "end": "210640"
  },
  {
    "text": "them uh immensely so a quick demo here um so I",
    "start": "210640",
    "end": "216480"
  },
  {
    "start": "212000",
    "end": "266000"
  },
  {
    "text": "kind of created like a little uh here you go demo of how to create a simple web service so if the internet works uh",
    "start": "216480",
    "end": "222959"
  },
  {
    "text": "what it's doing is it's fetching a web service it's actually really slow and it's actually pretty cool that I kind of",
    "start": "222959",
    "end": "228920"
  },
  {
    "text": "uh made it so it's safe it's not going to throw an error back on our system and I'll show you the code in a little bit but uh but basically it says oops our",
    "start": "228920",
    "end": "235560"
  },
  {
    "text": "service our Currency Service has failed sorry so one of the main um features that I really liked about",
    "start": "235560",
    "end": "242239"
  },
  {
    "text": "Scala and uh and the play framework especially was that it was very easy to make it very safe you kind of caught",
    "start": "242239",
    "end": "249079"
  },
  {
    "text": "your errors where you needed to you can make your fallbacks you can be repetitive if you wanted to but at the same time um it wasn't it wasn't too",
    "start": "249079",
    "end": "256440"
  },
  {
    "text": "excessive it wasn't too a verose so um so that's uh that's just a cool little",
    "start": "256440",
    "end": "262360"
  },
  {
    "text": "demo and we'll kind of go into that in a bunch in a bunch more detail okay so let's review some",
    "start": "262360",
    "end": "268560"
  },
  {
    "text": "definitions uh uh threads uh as joshh said before these are your these are your single blocks of of instructions",
    "start": "268560",
    "end": "276840"
  },
  {
    "text": "that are computed right so you can have many processes or you can have a process that contains many threads and you can",
    "start": "276840",
    "end": "283080"
  },
  {
    "text": "have these pools of threads right um these are called execution contexts and",
    "start": "283080",
    "end": "288560"
  },
  {
    "text": "we'll go over this in a little bit but these are what actually runs in compuer code uh future right so a placeholder",
    "start": "288560",
    "end": "296759"
  },
  {
    "start": "293000",
    "end": "329000"
  },
  {
    "text": "which represents a value which may become available at another point so Josh again did a really good job at",
    "start": "296759",
    "end": "303280"
  },
  {
    "text": "covering this today and explain to you the basic functions but I just wanted to kind of show you um some of of the",
    "start": "303280",
    "end": "309280"
  },
  {
    "text": "functions in the trait uh from Scola Source because there are some uh rather",
    "start": "309280",
    "end": "314360"
  },
  {
    "text": "interesting things especially when it comes to failing over so in the second section the first section was pretty",
    "start": "314360",
    "end": "320039"
  },
  {
    "text": "easy uh it's pretty self-explanatory can you guys see it in the back",
    "start": "320039",
    "end": "326160"
  },
  {
    "text": "is no okay",
    "start": "326160",
    "end": "331000"
  },
  {
    "start": "329000",
    "end": "377000"
  },
  {
    "text": "better okay maybe it's a little better I have good eyes I apologize um so um so",
    "start": "332960",
    "end": "340520"
  },
  {
    "text": "the cool thing is uh failed and recover um it's a very nice way of checking to",
    "start": "340520",
    "end": "346440"
  },
  {
    "text": "see obviously if your if your future has failed and if you recover what you should recover with now the partial",
    "start": "346440",
    "end": "353440"
  },
  {
    "text": "function right that is being brought into the into the recover function is",
    "start": "353440",
    "end": "358520"
  },
  {
    "text": "really what you can use and you can can adapt that to any way that you want um some common methods I've I've seen are",
    "start": "358520",
    "end": "365039"
  },
  {
    "text": "are three-time retry so if you can retry it three times and if they all fail then you can handle it somewhere else or you",
    "start": "365039",
    "end": "371800"
  },
  {
    "text": "can just throw a failure and have the user retry it's uh really up to you so that's a",
    "start": "371800",
    "end": "379360"
  },
  {
    "start": "377000",
    "end": "440000"
  },
  {
    "text": "future um a simple example of a future Josh kind went over this so I'll skip it",
    "start": "379360",
    "end": "385000"
  },
  {
    "text": "um a promise A promise is a placeholder which contains a future so it's kind of",
    "start": "385000",
    "end": "391840"
  },
  {
    "text": "one of these things that you can use as like an Interceptor um let's just you can you can complete a future with uh so",
    "start": "391840",
    "end": "399120"
  },
  {
    "text": "a promise when you declare a promise you can then uh gather its future so uh Josh",
    "start": "399120",
    "end": "405680"
  },
  {
    "text": "didn't really cover this earlier so uh I'm going to go over it a little bit so you have a future right your computation",
    "start": "405680",
    "end": "411520"
  },
  {
    "text": "of a Fibonacci number and you have your promise right and you say uh you map",
    "start": "411520",
    "end": "418800"
  },
  {
    "text": "your promise to your future right and you say the future on success right that's normal",
    "start": "418800",
    "end": "426000"
  },
  {
    "text": "but let's just say you want a little more creative and you wanted to have some other function that may intercept it you could say p. fail or or uh you",
    "start": "426000",
    "end": "434680"
  },
  {
    "text": "can do many other things with with the promise and you could pass the promise around instead of the",
    "start": "434680",
    "end": "440520"
  },
  {
    "start": "440000",
    "end": "463000"
  },
  {
    "text": "Future Okay execution contexts these are your containers of your threads um",
    "start": "440520",
    "end": "446560"
  },
  {
    "text": "similar to a process but not really you can create them in a various uh various",
    "start": "446560",
    "end": "452560"
  },
  {
    "text": "different manners so when you create your context pool what you can do is uh",
    "start": "452560",
    "end": "459039"
  },
  {
    "text": "is you you create your you create your context and you can pass this context around",
    "start": "459039",
    "end": "464560"
  },
  {
    "text": "so I'm going to show you guys a little bit of this in the source code can you guys see in the back",
    "start": "464560",
    "end": "474360"
  },
  {
    "text": "all right we're going to be scrolling a lot today so um we have our execution context right now I want to keep my",
    "start": "481120",
    "end": "487879"
  },
  {
    "text": "database calls separate from my CPU heavy calls right because I they're database calls are blocking right so I",
    "start": "487879",
    "end": "494919"
  },
  {
    "text": "can handle it a little differently and manage my threads a little differently than if I were to have some very",
    "start": "494919",
    "end": "500440"
  },
  {
    "text": "computational heavy um let's just say uh you know calculation calls right so you",
    "start": "500440",
    "end": "507199"
  },
  {
    "text": "create your execution context and then you create a",
    "start": "507199",
    "end": "513758"
  },
  {
    "text": "new scheduled thread pool and you say how many so this number right here is 10",
    "start": "513919",
    "end": "519959"
  },
  {
    "text": "so I said I want 10 threads and instead of scrolling up there I'm going to zoom",
    "start": "519959",
    "end": "525279"
  },
  {
    "text": "it and it should work all right cool so you can control how many threads you actually create in a given thread pool",
    "start": "525279",
    "end": "532040"
  },
  {
    "text": "and in your execution context so one thing to keep in mind when you are creating these threads and the thread",
    "start": "532040",
    "end": "538880"
  },
  {
    "text": "pool is that you really can't overload it right threads are not these magical",
    "start": "538880",
    "end": "544040"
  },
  {
    "text": "things that you can just change every time every time you swap a thread there's a context switch in the in the",
    "start": "544040",
    "end": "550399"
  },
  {
    "text": "in the processor which uh has overhead in itself so the more things you have going at one time the more things get",
    "start": "550399",
    "end": "556399"
  },
  {
    "text": "multi multiplexed through the pipeline processor and there's more switches so",
    "start": "556399",
    "end": "561920"
  },
  {
    "text": "at a certain point if you overload your machine um you'll end up seeing that most of your computer processing time is",
    "start": "561920",
    "end": "568240"
  },
  {
    "text": "actually switching between your thread as actually opposed to doing your threads so when you design your system",
    "start": "568240",
    "end": "573920"
  },
  {
    "text": "you need to be a little bit careful about what you're doing um some rule of",
    "start": "573920",
    "end": "579800"
  },
  {
    "start": "578000",
    "end": "604000"
  },
  {
    "text": "thumbs that I have that have been fine for me um I'm not a Twitter so I don't",
    "start": "579800",
    "end": "585200"
  },
  {
    "text": "have these huge like uh load things and no tumbler but um I said I've used uh",
    "start": "585200",
    "end": "591800"
  },
  {
    "text": "about 10 per core and then about three execution contacts and that's worked very well for me um I haven't had two",
    "start": "591800",
    "end": "599440"
  },
  {
    "text": "much overhead in terms of switching and it's worked rather well",
    "start": "599440",
    "end": "605200"
  },
  {
    "start": "604000",
    "end": "693000"
  },
  {
    "text": "um okay so oops not",
    "start": "605200",
    "end": "613680"
  },
  {
    "text": "that so actors right um some some people have touched on this a little bit before",
    "start": "616560",
    "end": "623279"
  },
  {
    "text": "but What actors are are a nice abstraction for creating Futures and",
    "start": "623279",
    "end": "629440"
  },
  {
    "text": "different asynchronous comput computations right so um they're they're",
    "start": "629440",
    "end": "635200"
  },
  {
    "text": "very uh the AA gives us a really nice API to work on um and you can create lots of them",
    "start": "635200",
    "end": "642120"
  },
  {
    "text": "and network them in a in a pretty nice tree so um the fall tolerance is one of",
    "start": "642120",
    "end": "648959"
  },
  {
    "text": "the main features that I really enjoy about AA and that is that it's a it's I I I think it falls under the supervisor",
    "start": "648959",
    "end": "655440"
  },
  {
    "text": "pattern that's what um that's what generally works best basically what that means is that as you create your",
    "start": "655440",
    "end": "662160"
  },
  {
    "text": "different application you can create a supervisor that basically supervises all of your",
    "start": "662160",
    "end": "668440"
  },
  {
    "text": "let's say worker nodes and if one of those fails they'll send a message back up to the supervisor and the supervisor",
    "start": "668440",
    "end": "673920"
  },
  {
    "text": "can handle it so you're not handling errors within the specific uh worker",
    "start": "673920",
    "end": "679240"
  },
  {
    "text": "node but you can handle it from above and it really provides a nice clean and elegant way of creating code without",
    "start": "679240",
    "end": "686480"
  },
  {
    "text": "actually having to handle each error case in the specific number",
    "start": "686480",
    "end": "691959"
  },
  {
    "text": "crunch um we'll go into that a little more so um as obviously as Josh",
    "start": "691959",
    "end": "698920"
  },
  {
    "start": "693000",
    "end": "783000"
  },
  {
    "text": "mentioned before um four comprehensions are one of your best friends they are really nice when you uh chain uh chain a",
    "start": "698920",
    "end": "707399"
  },
  {
    "text": "a given future so you can instead of having to say let's wait for this to come or zip them together um this is",
    "start": "707399",
    "end": "713959"
  },
  {
    "text": "another alternative so one thing to note here is",
    "start": "713959",
    "end": "719040"
  },
  {
    "text": "um so let me uh go go through this example line by line and sorry for you guys who",
    "start": "719040",
    "end": "724920"
  },
  {
    "text": "already know play but uh for those of you guys who don't um this is in a controller okay um in the MVC pattern",
    "start": "724920",
    "end": "733000"
  },
  {
    "text": "I'm I hope if if you guys are not not familiar with it it's basically the thing that executes are code from the",
    "start": "733000",
    "end": "738920"
  },
  {
    "text": "very beginning um so the action is called right and async these tags",
    "start": "738920",
    "end": "745920"
  },
  {
    "text": "basically notify play to that it is an AS synchronous tag and and that it will return a future um a future result",
    "start": "745920",
    "end": "754000"
  },
  {
    "text": "instead of an actual result so um basically what it's doing is it's just adding it into a closure and running it",
    "start": "754000",
    "end": "761519"
  },
  {
    "text": "as such so you can do um recent uh posts. recent right and",
    "start": "761519",
    "end": "768560"
  },
  {
    "text": "then you can take the tags and then calculate a word cloud from it and then",
    "start": "768560",
    "end": "773880"
  },
  {
    "text": "you yield your result and you can yield uh you can yield different results like okay internal server server errors",
    "start": "773880",
    "end": "782839"
  },
  {
    "text": "Etc so one thing that I really like to do in this so in the um in the little",
    "start": "782839",
    "end": "791360"
  },
  {
    "start": "783000",
    "end": "907000"
  },
  {
    "text": "post and you saw the error right so what I did here is uh we have our the so the",
    "start": "791360",
    "end": "798519"
  },
  {
    "text": "account function is what I actually called that you saw that error if it if",
    "start": "798519",
    "end": "803760"
  },
  {
    "text": "my internet was working what you'd see is I have these bank accounts and I converted it into to uh Euros right so I",
    "start": "803760",
    "end": "811560"
  },
  {
    "text": "I call this web service I would take a currency and it would give me a rate but",
    "start": "811560",
    "end": "816600"
  },
  {
    "text": "so this is a little fault tolerant um service right so you have your account",
    "start": "816600",
    "end": "822399"
  },
  {
    "text": "which you which you find from a database and you find your rate which is a service um one thing to note here is",
    "start": "822399",
    "end": "830639"
  },
  {
    "text": "this fallback two that's basically the bread and butter of the fault Tolerance on this",
    "start": "830639",
    "end": "837600"
  },
  {
    "text": "simple simple level so basically if the future fails right so um the the play",
    "start": "837600",
    "end": "846279"
  },
  {
    "text": "framework um web service is actually built asynchronously so it handles very nice with the future it actually only",
    "start": "846279",
    "end": "853040"
  },
  {
    "text": "Returns the future and You' have to either wait for a result uh which is a blocking operation or you can have it",
    "start": "853040",
    "end": "859079"
  },
  {
    "text": "mapped to a future um so I actually fall back to a future of none",
    "start": "859079",
    "end": "866519"
  },
  {
    "text": "right so if I have the account right and say okay no accounts found because I",
    "start": "866519",
    "end": "872759"
  },
  {
    "text": "don't have an account or if I have if I have an account and I have some account",
    "start": "872759",
    "end": "877920"
  },
  {
    "text": "instance and I have a rate and I actually have a rate I can convert it I",
    "start": "877920",
    "end": "883240"
  },
  {
    "text": "can basically say hey the account put it in the curreny and then return it back to the user otherwise if I don't have a",
    "start": "883240",
    "end": "891279"
  },
  {
    "text": "have a account I return a bad request and I say our Currency Service has failed sry",
    "start": "891279",
    "end": "896839"
  },
  {
    "text": "chaps so that's a uh pretty easy",
    "start": "896839",
    "end": "902240"
  },
  {
    "text": "way of of doing some simple fault",
    "start": "902240",
    "end": "908079"
  },
  {
    "start": "907000",
    "end": "994000"
  },
  {
    "text": "tolerance so let's do another demo real quick so",
    "start": "909880",
    "end": "916000"
  },
  {
    "text": "building asynchronous web services are cool but one of I think the biggest things in uh in applications nowadays",
    "start": "916000",
    "end": "922800"
  },
  {
    "text": "are websockets and real time single page applications so have so so everybody's",
    "start": "922800",
    "end": "929440"
  },
  {
    "text": "heard of websockets right okay do you guys know what you is is there so",
    "start": "929440",
    "end": "934519"
  },
  {
    "text": "basically there's also this thing called comment which is for for browsers that are old which none of us like to develop",
    "start": "934519",
    "end": "941720"
  },
  {
    "text": "for but it's a sad reality and especially for the government you have to use this stuff um so some reason",
    "start": "941720",
    "end": "947920"
  },
  {
    "text": "they're stuck in i7 don't ask me why anyways um Comet provides a really cool",
    "start": "947920",
    "end": "953120"
  },
  {
    "text": "way of you literally just inject JavaScript onto your onto your Dom and then it'll execute so in this simple",
    "start": "953120",
    "end": "960600"
  },
  {
    "text": "application I can just post and it fetches um it fetches it live from the",
    "start": "960600",
    "end": "966199"
  },
  {
    "text": "database right so as well show you the code real",
    "start": "966199",
    "end": "972880"
  },
  {
    "text": "quick where is it one",
    "start": "976199",
    "end": "982360"
  },
  {
    "text": "second wrong",
    "start": "987920",
    "end": "991279"
  },
  {
    "text": "package okay so here is the dashboard stream right so",
    "start": "993639",
    "end": "999880"
  },
  {
    "start": "994000",
    "end": "1104000"
  },
  {
    "text": "that's what we're invoking at the very beginning to basically call this Comet",
    "start": "999880",
    "end": "1005040"
  },
  {
    "text": "service right and we are streaming back results this is not this not a it's not",
    "start": "1005040",
    "end": "1010800"
  },
  {
    "text": "a polling service right so it's actually a chunked HTTP request that's always",
    "start": "1010800",
    "end": "1016759"
  },
  {
    "text": "loading right you'll notice in the top left corner of the dashboard that it's always reloading right it's one of the",
    "start": "1016759",
    "end": "1024000"
  },
  {
    "text": "fallbacks of the Comet thing you can't have your cool favicon on there there are workarounds but out of the box it's",
    "start": "1024000",
    "end": "1030079"
  },
  {
    "text": "just not worth it um so so it's literally just keep on it's it's having",
    "start": "1030079",
    "end": "1036480"
  },
  {
    "text": "a chunked one huge request that keeps on coming in it's uh similar to what Twitter does when they feed you your",
    "start": "1036480",
    "end": "1044880"
  },
  {
    "text": "feed so in our stream right we have have",
    "start": "1044880",
    "end": "1050480"
  },
  {
    "text": "our we have our enumerators which produce the given feedback right so",
    "start": "1050480",
    "end": "1057039"
  },
  {
    "text": "let's go back and say we want in our stream we want to see the transactions amounts we want to we want to update the",
    "start": "1057039",
    "end": "1063240"
  },
  {
    "text": "balances and we want to get a transaction total right and we feed this all to our Comet which is actually",
    "start": "1063240",
    "end": "1069640"
  },
  {
    "text": "provided by play framework to parent. dashboard. message",
    "start": "1069640",
    "end": "1076000"
  },
  {
    "text": "now this call back is actually a JavaScript function that you build on",
    "start": "1076000",
    "end": "1081480"
  },
  {
    "text": "your client side that basically figures out how to consume the given inputs right cuz the what the comet does is at",
    "start": "1081480",
    "end": "1089039"
  },
  {
    "text": "least in the way that I built this system is that it just G it takes that",
    "start": "1089039",
    "end": "1094159"
  },
  {
    "text": "it composes this huge string and then throws it to the client and the client parses it and then updates the Dom",
    "start": "1094159",
    "end": "1101879"
  },
  {
    "start": "1104000",
    "end": "1202000"
  },
  {
    "text": "appropriately so enumerators are have you guys heard of enumerators and and uh",
    "start": "1104320",
    "end": "1112159"
  },
  {
    "text": "iterates a little bit um if you if you haven't heard of it uh clout made a",
    "start": "1112159",
    "end": "1118480"
  },
  {
    "text": "really awesome blog post about three weeks ago that really uh kind of broke down how they work but basically an",
    "start": "1118480",
    "end": "1125840"
  },
  {
    "text": "enumerator is like a producer and iter is a consumer and uh instead of having",
    "start": "1125840",
    "end": "1132640"
  },
  {
    "text": "to rebuild stuff every time you want to fetch something they're kind of there and you can just get what you want at the rate you want it",
    "start": "1132640",
    "end": "1140320"
  },
  {
    "text": "so um in our an numurs um you can actually uh so I I",
    "start": "1140320",
    "end": "1147840"
  },
  {
    "text": "kind of say and I build these strings they get sent over so that's the comet way of doing",
    "start": "1147840",
    "end": "1156440"
  },
  {
    "text": "things um not not the ideal if there if you have websockets you should use",
    "start": "1156440",
    "end": "1161559"
  },
  {
    "text": "websockets um so websockets again it's a uh it's a native thing built into play",
    "start": "1161559",
    "end": "1168520"
  },
  {
    "text": "frame framework thank you very much not my doing but thank you type safe and play um is that uh so you can have it",
    "start": "1168520",
    "end": "1176720"
  },
  {
    "text": "come in and then you have an iter consuming the given the given input and",
    "start": "1176720",
    "end": "1182159"
  },
  {
    "text": "you can parse it out and do whatever you want and then you can stream it out um",
    "start": "1182159",
    "end": "1187440"
  },
  {
    "text": "as you can see below so um again this is this is a simple example but it kind of",
    "start": "1187440",
    "end": "1193120"
  },
  {
    "text": "shows you the power of what play frameware can do in the this kind of TR",
    "start": "1193120",
    "end": "1198480"
  },
  {
    "text": "out the Box um",
    "start": "1198480",
    "end": "1203840"
  },
  {
    "start": "1202000",
    "end": "1304000"
  },
  {
    "text": "so some cool things about AA that are um pretty",
    "start": "1203840",
    "end": "1210240"
  },
  {
    "text": "awesome is the is the ask and tell system okay so when you pass a message",
    "start": "1210240",
    "end": "1218360"
  },
  {
    "text": "there are two ways to pass a message you can say fire and forget which is an",
    "start": "1218360",
    "end": "1223400"
  },
  {
    "text": "exclamation point which is basically like hey handle this so one cool thing",
    "start": "1223400",
    "end": "1229159"
  },
  {
    "text": "that I use the fire and forget for are for sending emails right I I see no reason to have it stuck in my controller",
    "start": "1229159",
    "end": "1235480"
  },
  {
    "text": "and having to wait and confirm that a email is sent out I design my system in such a way that I fire it off and then",
    "start": "1235480",
    "end": "1244000"
  },
  {
    "text": "and then ensure that once the supervisor gets it it the supervisor is 100% responsible for sending that email um if",
    "start": "1244000",
    "end": "1251039"
  },
  {
    "text": "it was a financial service it maybe a bit differently but for my emails I found that very doable and a good",
    "start": "1251039",
    "end": "1258159"
  },
  {
    "text": "solution to into my problem so once you fire and forget it obviously as it says you fire and then you forget it um if",
    "start": "1258159",
    "end": "1265720"
  },
  {
    "text": "you if you at so let's just say so this uh I have a little thing that says uh",
    "start": "1265720",
    "end": "1272400"
  },
  {
    "text": "generate a report right there's a few other stuff but ignore the Clutter I'll just zoom it in so we won't even see",
    "start": "1272400",
    "end": "1280278"
  },
  {
    "text": "it so in the report actor you ask it a message right with the account and the",
    "start": "1281760",
    "end": "1288000"
  },
  {
    "text": "transaction and you can and then you map the result",
    "start": "1288000",
    "end": "1293320"
  },
  {
    "text": "which is coming back so in the report",
    "start": "1293320",
    "end": "1298320"
  },
  {
    "start": "1304000",
    "end": "1383000"
  },
  {
    "text": "actor okay one thing to note that I probably should have mentioned before is uh how an actor generally works so you",
    "start": "1306240",
    "end": "1313320"
  },
  {
    "text": "make an actor class you extend from the AA Octor and you have to only Implement one function or a partial function which",
    "start": "1313320",
    "end": "1320960"
  },
  {
    "text": "is receive and receive is basically like a little switchboard in your actor and",
    "start": "1320960",
    "end": "1327000"
  },
  {
    "text": "you going to have it handle as many different requests as you want and uh and then it will route them or do",
    "start": "1327000",
    "end": "1333799"
  },
  {
    "text": "whatever you want with them right so um so you receive and if it's a report",
    "start": "1333799",
    "end": "1341320"
  },
  {
    "text": "request you basically what I did was that I generated the report and then the sender sends back the report",
    "start": "1341320",
    "end": "1349679"
  },
  {
    "text": "right easy enough because at that point in the report actor you fire and forget you have nothing more to do now",
    "start": "1349679",
    "end": "1357159"
  },
  {
    "text": "sometimes actually many times in my application what I've done is that there",
    "start": "1357159",
    "end": "1362279"
  },
  {
    "text": "I I I feel they need to have this Cascade right so I go all the way down to do some computations and then have to",
    "start": "1362279",
    "end": "1369799"
  },
  {
    "text": "have to relay actions all the way back up there's actually a uh really cool feature um that I actually took way too",
    "start": "1369799",
    "end": "1377240"
  },
  {
    "text": "long to find um that you can actually forward the",
    "start": "1377240",
    "end": "1383360"
  },
  {
    "start": "1383000",
    "end": "1438000"
  },
  {
    "text": "um you can actually forward this the original sender to your context to your",
    "start": "1383360",
    "end": "1389039"
  },
  {
    "text": "child actor so it's uh a little more of Rose but it's you can uh tell your actor your",
    "start": "1389039",
    "end": "1396159"
  },
  {
    "text": "message and the sender so when in the in the new actor you send it you do sender",
    "start": "1396159",
    "end": "1402200"
  },
  {
    "text": "exclamation point message and it goes all the way back up so um a lot of times",
    "start": "1402200",
    "end": "1407640"
  },
  {
    "text": "I find myself building these AKA trees in uh such a in such a fashion that it kind of uh looks like a finite State",
    "start": "1407640",
    "end": "1414520"
  },
  {
    "text": "machine um a lot of times they each handle their very little piece of knowledge and if they do break they",
    "start": "1414520",
    "end": "1421080"
  },
  {
    "text": "report back to who they came from and then you can handle it appropriately um so a lot of times my the finest save",
    "start": "1421080",
    "end": "1428400"
  },
  {
    "text": "machines actually have this really nice comeback Loop so I actually do end up sending the sender around a",
    "start": "1428400",
    "end": "1435919"
  },
  {
    "text": "lot um um does anybody have any questions before I continue on a little",
    "start": "1437320",
    "end": "1444799"
  },
  {
    "start": "1438000",
    "end": "1611000"
  },
  {
    "text": "bit I don't know if that's a good thing or a bad thing but we'll continue on",
    "start": "1445400",
    "end": "1451320"
  },
  {
    "text": "um another cool feature of AA and that they built out really nicely is the AA",
    "start": "1451320",
    "end": "1458760"
  },
  {
    "text": "router so let me find it real",
    "start": "1459039",
    "end": "1463519"
  },
  {
    "text": "quick so an AAR router basically what it does is it allows you to Simply use a bunch of",
    "start": "1466799",
    "end": "1474760"
  },
  {
    "text": "different actors at the same time um so if you thought if if you thought about",
    "start": "1474760",
    "end": "1480840"
  },
  {
    "text": "what I was doing before right I created an actor let's just say a transaction actor right and I passed the transaction",
    "start": "1480840",
    "end": "1487720"
  },
  {
    "text": "actor to that I've pass the message to the transaction actor that's literally only one reference of that actor right",
    "start": "1487720",
    "end": "1495440"
  },
  {
    "text": "now that's not going to scale I'm basically just having one work or thread do everything that's very simple and",
    "start": "1495440",
    "end": "1502480"
  },
  {
    "text": "won't be able to scale pretty much at all so um what you can do is you can",
    "start": "1502480",
    "end": "1508039"
  },
  {
    "text": "have a router so you create a an a router is really nothing more than an",
    "start": "1508039",
    "end": "1514559"
  },
  {
    "text": "that pre-made actor um so when you create your router you do",
    "start": "1514559",
    "end": "1521640"
  },
  {
    "text": "you create it a a actor in the system right with a router so there's a bunch",
    "start": "1521640",
    "end": "1529080"
  },
  {
    "text": "of different um different types of routing systems you can actually build your own if you want to um but uh the",
    "start": "1529080",
    "end": "1535880"
  },
  {
    "text": "smallest mailbox router is one that just makes the most sense to me um basically what it does is that it kind of cues",
    "start": "1535880",
    "end": "1542080"
  },
  {
    "text": "everything underneath it and if one actor is going really fast or on one machine it's going really fast you can",
    "start": "1542080",
    "end": "1548120"
  },
  {
    "text": "just keep on feeding it to it there's round robin routing um as Wells Auto",
    "start": "1548120",
    "end": "1553559"
  },
  {
    "text": "things so a cool part about the router is it's a it can be automatic really",
    "start": "1553559",
    "end": "1558919"
  },
  {
    "text": "resized right so instead of building some complex logic that'll help you scale and shrink your application as",
    "start": "1558919",
    "end": "1564840"
  },
  {
    "text": "according to what it needs um you can actually have a lower bound and upper bound of a default resizer that'll help",
    "start": "1564840",
    "end": "1571840"
  },
  {
    "text": "you use use your resources most wisely um times that have come in handy for me",
    "start": "1571840",
    "end": "1577799"
  },
  {
    "text": "is during when I deploy a system uh for work and during signup there's a big",
    "start": "1577799",
    "end": "1584600"
  },
  {
    "text": "load on sign up we don't have't load anywhere else it's actually really nice to be able to use that uh use your",
    "start": "1584600",
    "end": "1591520"
  },
  {
    "text": "resources only for your your your sign up actors and your email services and",
    "start": "1591520",
    "end": "1598240"
  },
  {
    "text": "stuff like that so and then as you obiously finish them you can shrink them up over the course of",
    "start": "1598240",
    "end": "1605480"
  },
  {
    "text": "time let me uh see what else is out",
    "start": "1606360",
    "end": "1611480"
  },
  {
    "start": "1611000",
    "end": "1665000"
  },
  {
    "text": "there so is there anything you guys are specifically interested in or have had roadblocks hitting with um play",
    "start": "1611640",
    "end": "1618320"
  },
  {
    "text": "framework at all anything that really confused you",
    "start": "1618320",
    "end": "1624000"
  },
  {
    "text": "okay so um one thing that confused the hell out of me personally um was how",
    "start": "1624000",
    "end": "1631080"
  },
  {
    "text": "tedious it was to deal with Json in 2.0 release it was such a pain um I felt",
    "start": "1631080",
    "end": "1639520"
  },
  {
    "text": "that a lot of it was very repetitive and I would be end up just creating these maps to objects that were I felt that",
    "start": "1639520",
    "end": "1645159"
  },
  {
    "text": "and other systems did very well dynamically so so um Mand dubian uh",
    "start": "1645159",
    "end": "1650520"
  },
  {
    "text": "Twitter handle I forget his real name off the top of my head created a really awesome macro that creates um that's",
    "start": "1650520",
    "end": "1656520"
  },
  {
    "text": "literally um one line of",
    "start": "1656520",
    "end": "1660960"
  },
  {
    "text": "code so you see this currency Json format you do json. format and the",
    "start": "1664720",
    "end": "1670519"
  },
  {
    "start": "1665000",
    "end": "1791000"
  },
  {
    "text": "currency and it will during compile time create your readers and writers so that",
    "start": "1670519",
    "end": "1677240"
  },
  {
    "text": "saves you a ton T of time um it does not include the validation that that you can",
    "start": "1677240",
    "end": "1682279"
  },
  {
    "text": "get when you do um your own but it's a uh cause and effect that you kind of",
    "start": "1682279",
    "end": "1687519"
  },
  {
    "text": "have to guess and kind of pick pick and choose your battles um other really cool features in",
    "start": "1687519",
    "end": "1694880"
  },
  {
    "text": "2.1 um is that filters you can now intercept requests and handle them and",
    "start": "1694880",
    "end": "1700399"
  },
  {
    "text": "kind of make sure that you can do them properly uh this comes in handy for uh csrf for security and uh other potential",
    "start": "1700399",
    "end": "1708799"
  },
  {
    "text": "middle middlewares so you can actually intercept your emails and handle them somewhere else if you want to um you can",
    "start": "1708799",
    "end": "1714240"
  },
  {
    "text": "add more modularization you can add routes in your subdirectories um and kind of keep your your application",
    "start": "1714240",
    "end": "1720640"
  },
  {
    "text": "really modularized keep your admin section completely separate whereas before you had to glue them in more than",
    "start": "1720640",
    "end": "1726000"
  },
  {
    "text": "I would have liked you can also do manage controller in",
    "start": "1726000",
    "end": "1731399"
  },
  {
    "text": "instantiation um before you had to create an object that extended your",
    "start": "1731399",
    "end": "1736679"
  },
  {
    "text": "traits uh that was actually well you don't have to you could use an object if you wanted to",
    "start": "1736679",
    "end": "1742720"
  },
  {
    "text": "but for testing it posed a a really difficult um you couldn't uh it was really not flexible so uh what they",
    "start": "1742720",
    "end": "1749320"
  },
  {
    "text": "decided to do is that you can actually have uh in your routes you can choose to instantiate a new controller for your",
    "start": "1749320",
    "end": "1754840"
  },
  {
    "text": "request and it'll handle it for you um you can do requirejs out of the box so",
    "start": "1754840",
    "end": "1760360"
  },
  {
    "text": "that you can have a very uh a very JavaScript heavy application run really",
    "start": "1760360",
    "end": "1766080"
  },
  {
    "text": "quickly um and content negoti a which is basically oh I want XML instead of Json",
    "start": "1766080",
    "end": "1771559"
  },
  {
    "text": "Sweet let's use that instead so uh those are all really cool features that are um done in 2.1 and uh",
    "start": "1771559",
    "end": "1780960"
  },
  {
    "text": "they are still improving it like every day um you can live on the bleeding edge and have it checked out um otherwise you",
    "start": "1780960",
    "end": "1788320"
  },
  {
    "text": "can just stick with study release um some resources that really helped me",
    "start": "1788320",
    "end": "1794159"
  },
  {
    "start": "1791000",
    "end": "1845000"
  },
  {
    "text": "out uh the documentation has gotten a whole lot better I really encourage you to check it out especially recently um",
    "start": "1794159",
    "end": "1800840"
  },
  {
    "text": "if you are working with the bleeding edge definitely go to the Wii on the play framework GitHub repo because",
    "start": "1800840",
    "end": "1807919"
  },
  {
    "text": "there's actually quite a bit of difference and you'd be shocked at how much it kind of kicks you in the butt one way or the other um the samples as",
    "start": "1807919",
    "end": "1815600"
  },
  {
    "text": "well um The Scholar school by Twitter that's a really cool um kind of a",
    "start": "1815600",
    "end": "1821720"
  },
  {
    "text": "resource they put together if internet works um and if you",
    "start": "1821720",
    "end": "1827360"
  },
  {
    "text": "have any more questions uh feel free to contact me uh MBS side uh Gmail uh I",
    "start": "1827360",
    "end": "1834799"
  },
  {
    "text": "just do this stuff for fun and I really enjoy it and feel free to contact me and uh learn more",
    "start": "1834799",
    "end": "1842279"
  },
  {
    "text": "questions could you talk about your experiences with aor at all pardon a",
    "start": "1844919",
    "end": "1850039"
  },
  {
    "start": "1845000",
    "end": "1902000"
  },
  {
    "text": "norm could you talk about aor at all okay um yeah I really dislike it um so I",
    "start": "1850039",
    "end": "1856519"
  },
  {
    "text": "got really spoiled um RM is awesome um I have a I have a post on my blog about",
    "start": "1856519",
    "end": "1863320"
  },
  {
    "text": "how I actually use the Java eban as my model and have it in a subdirectory uh",
    "start": "1863320",
    "end": "1868720"
  },
  {
    "text": "if you have it in the same directory as same project as your scol application the Scola get compiled first and none of",
    "start": "1868720",
    "end": "1875960"
  },
  {
    "text": "your functions you have in your Java because it does a lot of bite code manipulation under the hood for Java um",
    "start": "1875960",
    "end": "1882320"
  },
  {
    "text": "will get brought into to your Scola so it throws a whole lot of compile errors so what I actually did and it actually",
    "start": "1882320",
    "end": "1888039"
  },
  {
    "text": "has paid off greatly in my design decisions is create my model as a standalone play package PR project and I",
    "start": "1888039",
    "end": "1893919"
  },
  {
    "text": "can actually import that into my API and do that so it's actually very modular so I don't have to have a one big",
    "start": "1893919",
    "end": "1899120"
  },
  {
    "text": "monolithic application that can move it around so talking about creating a",
    "start": "1899120",
    "end": "1904159"
  },
  {
    "start": "1902000",
    "end": "2026000"
  },
  {
    "text": "separate project uh you know I'm I'm interested in in creating a project and",
    "start": "1904159",
    "end": "1910399"
  },
  {
    "text": "then creating lots of different themes of that play application like for you",
    "start": "1910399",
    "end": "1915720"
  },
  {
    "text": "know reselling the core project to different clients um customized in different ways so how would you go about",
    "start": "1915720",
    "end": "1925960"
  },
  {
    "text": "like like with your models example if you stick those in a separate package um",
    "start": "1925960",
    "end": "1931279"
  },
  {
    "text": "or or a separate library and get sub module it in or something like that it seems like it would be a real pain to",
    "start": "1931279",
    "end": "1939240"
  },
  {
    "text": "you know commit between different projects and push and if you you make a",
    "start": "1939240",
    "end": "1945960"
  },
  {
    "text": "change in your template over here and you need add a new field to the model then you've got to go like recompile",
    "start": "1945960",
    "end": "1951880"
  },
  {
    "text": "this separate project and so um so there's I when I when I said sub",
    "start": "1951880",
    "end": "1957679"
  },
  {
    "text": "projects uh it might have been unclear and I apologize for that um I actually don't do separate GitHub projects and a",
    "start": "1957679",
    "end": "1963200"
  },
  {
    "text": "separate repos um what I have are uh SBT Play Projects um so you can actually do",
    "start": "1963200",
    "end": "1969799"
  },
  {
    "text": "uh dependson and have it depend on another project and you can have it depend on as many as you want so uh",
    "start": "1969799",
    "end": "1977320"
  },
  {
    "text": "basically that it it'll actually recompile your other one first before compiling your parent application so",
    "start": "1977320",
    "end": "1984679"
  },
  {
    "text": "you'll see my I have one Play application at the very front and it actually has nothing in it besides",
    "start": "1984679",
    "end": "1990080"
  },
  {
    "text": "depending on a whole lot of sub modules um so and then you can actually like ensure that your compilation order is",
    "start": "1990080",
    "end": "1995960"
  },
  {
    "text": "done right through that does that make sense yeah uh so so when I when I do push to GitHub or",
    "start": "1995960",
    "end": "2004039"
  },
  {
    "text": "whatever I mean have you have you worked with subm modules or is there a um I use",
    "start": "2004039",
    "end": "2011200"
  },
  {
    "text": "subm modules for packages that I don't control um in general I haven't really worked with a big enough the scale that",
    "start": "2011200",
    "end": "2018840"
  },
  {
    "text": "I have had to have more than one different project to do different things okay so I really haven't done anything",
    "start": "2018840",
    "end": "2024639"
  },
  {
    "text": "like that okay uh one last feature I'd like to share with play in the last two minutes",
    "start": "2024639",
    "end": "2030880"
  },
  {
    "start": "2026000",
    "end": "2099000"
  },
  {
    "text": "I have is the debug feature um so that has saved my bum so many times um uh to",
    "start": "2030880",
    "end": "2038240"
  },
  {
    "text": "start it you exit back to your shell and you do play debug right and it basically",
    "start": "2038240",
    "end": "2045360"
  },
  {
    "text": "creates this socket 999 that you can use to debug your application um in intellig you can do uh",
    "start": "2045360",
    "end": "2055480"
  },
  {
    "text": "run your edit configurations create a new",
    "start": "2055480",
    "end": "2061040"
  },
  {
    "text": "remote change the port to",
    "start": "2061040",
    "end": "2066200"
  },
  {
    "text": "9999 apply okay run the",
    "start": "2066200",
    "end": "2071240"
  },
  {
    "text": "debugger and Bam you can throw break points anywhere um saved my butt so many",
    "start": "2071240",
    "end": "2077599"
  },
  {
    "text": "times uh so I don't know why I didn't know that earlier but it's that easy any other",
    "start": "2077599",
    "end": "2085440"
  },
  {
    "text": "questions hope you guys learned something [Applause]",
    "start": "2085440",
    "end": "2093809"
  },
  {
    "text": "[Music]",
    "start": "2094070",
    "end": "2101699"
  }
]