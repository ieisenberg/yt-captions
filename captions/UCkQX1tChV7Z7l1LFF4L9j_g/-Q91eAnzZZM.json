[
  {
    "text": "hey folks qcon New York is returning to",
    "start": "319",
    "end": "3000"
  },
  {
    "text": "Brooklyn this June 13th the 15th learn",
    "start": "3000",
    "end": "5460"
  },
  {
    "text": "from over 80 senior software leaders at",
    "start": "5460",
    "end": "7259"
  },
  {
    "text": "early adopter companies as they share",
    "start": "7259",
    "end": "9000"
  },
  {
    "text": "their first-hand experiences",
    "start": "9000",
    "end": "10200"
  },
  {
    "text": "implementing emerging Trends and best",
    "start": "10200",
    "end": "12300"
  },
  {
    "text": "practices from practical techniques to",
    "start": "12300",
    "end": "14280"
  },
  {
    "text": "pitfalls to avoid you'll gain valuable",
    "start": "14280",
    "end": "16198"
  },
  {
    "text": "insights to help you make better",
    "start": "16199",
    "end": "17400"
  },
  {
    "text": "decisions and ensure you adopt the right",
    "start": "17400",
    "end": "19500"
  },
  {
    "text": "organizational patterns and practices",
    "start": "19500",
    "end": "21240"
  },
  {
    "text": "whether you're a senior software",
    "start": "21240",
    "end": "22740"
  },
  {
    "text": "developer an architect or team lead qcon",
    "start": "22740",
    "end": "25140"
  },
  {
    "text": "New York features over 75 technical",
    "start": "25140",
    "end": "27119"
  },
  {
    "text": "talks across 15 tracks covering ml Ops",
    "start": "27119",
    "end": "30180"
  },
  {
    "text": "software architectures resilient",
    "start": "30180",
    "end": "32099"
  },
  {
    "text": "security staff Plus Engineering and more",
    "start": "32099",
    "end": "34200"
  },
  {
    "text": "to help you level up on what's next",
    "start": "34200",
    "end": "36239"
  },
  {
    "text": "learn more at qconnewyork.com we hope to",
    "start": "36239",
    "end": "39780"
  },
  {
    "text": "see you there",
    "start": "39780",
    "end": "42140"
  },
  {
    "text": "welcome everyone to the info queue",
    "start": "44059",
    "end": "46800"
  },
  {
    "text": "podcast my name is Roland Mertens your",
    "start": "46800",
    "end": "50100"
  },
  {
    "text": "host today and I will be interviewing",
    "start": "50100",
    "end": "52260"
  },
  {
    "text": "Thomas neubauer he is the CTO and",
    "start": "52260",
    "end": "55739"
  },
  {
    "text": "founder of Quicks we are talking to each",
    "start": "55739",
    "end": "58260"
  },
  {
    "text": "other in person at the qcon London",
    "start": "58260",
    "end": "60840"
  },
  {
    "text": "conference where he gave the",
    "start": "60840",
    "end": "62399"
  },
  {
    "text": "presentation simplifying real-time ml",
    "start": "62399",
    "end": "65280"
  },
  {
    "text": "pipelines with quick streams and open",
    "start": "65280",
    "end": "67680"
  },
  {
    "text": "source python library from ml engineers",
    "start": "67680",
    "end": "70080"
  },
  {
    "text": "make sure to watch his presentation as",
    "start": "70080",
    "end": "72540"
  },
  {
    "text": "it delivers tremendous insights into",
    "start": "72540",
    "end": "74760"
  },
  {
    "text": "Review Time ml pipelines and how to get",
    "start": "74760",
    "end": "77580"
  },
  {
    "text": "started with quick streams yourself",
    "start": "77580",
    "end": "79619"
  },
  {
    "text": "during today's interview we will dive",
    "start": "79619",
    "end": "82080"
  },
  {
    "text": "deeper into the topic of real-time ml I",
    "start": "82080",
    "end": "85320"
  },
  {
    "text": "hope you enjoy it and I hope you can",
    "start": "85320",
    "end": "87119"
  },
  {
    "text": "learn something from it Thomas welcome",
    "start": "87119",
    "end": "89220"
  },
  {
    "text": "to the infography podcast thank you for",
    "start": "89220",
    "end": "90840"
  },
  {
    "text": "having me you're giving your talk",
    "start": "90840",
    "end": "92280"
  },
  {
    "text": "tomorrow here at qcon London can you",
    "start": "92280",
    "end": "94380"
  },
  {
    "text": "maybe give a short summary of your talk",
    "start": "94380",
    "end": "96600"
  },
  {
    "text": "sure yeah so I'm talking about open",
    "start": "96600",
    "end": "99119"
  },
  {
    "text": "source Library quick streams it's a",
    "start": "99119",
    "end": "100920"
  },
  {
    "text": "python stream processing library for",
    "start": "100920",
    "end": "102960"
  },
  {
    "text": "data clothes on top of Kafka and I'm",
    "start": "102960",
    "end": "106259"
  },
  {
    "text": "talking about how to use this library in",
    "start": "106259",
    "end": "108720"
  },
  {
    "text": "projects that involves real-time machine",
    "start": "108720",
    "end": "110640"
  },
  {
    "text": "learning and talk about the landscape",
    "start": "110640",
    "end": "112979"
  },
  {
    "text": "different architecture designs to solve",
    "start": "112979",
    "end": "115500"
  },
  {
    "text": "this problem pros and cons of each and",
    "start": "115500",
    "end": "118200"
  },
  {
    "text": "then I kind of put this against a real",
    "start": "118200",
    "end": "121140"
  },
  {
    "text": "use case which I at the end of the",
    "start": "121140",
    "end": "123420"
  },
  {
    "text": "presentation develop on stage from",
    "start": "123420",
    "end": "125939"
  },
  {
    "text": "scratch and in this case it's detecting",
    "start": "125939",
    "end": "128160"
  },
  {
    "text": "the cyclist crash so imagine the fitness",
    "start": "128160",
    "end": "130500"
  },
  {
    "text": "app running on your handlebars and you",
    "start": "130500",
    "end": "133080"
  },
  {
    "text": "crashed and you want to inform your",
    "start": "133080",
    "end": "134640"
  },
  {
    "text": "relatives or Emergency Services",
    "start": "134640",
    "end": "136560"
  },
  {
    "text": "so then you are programming this demo",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "live on stage which programming language",
    "start": "138720",
    "end": "140400"
  },
  {
    "text": "are you using for this yes I'm using the",
    "start": "140400",
    "end": "142319"
  },
  {
    "text": "open source Library quick stream so I'm",
    "start": "142319",
    "end": "143879"
  },
  {
    "text": "using Python and yeah I'm basically",
    "start": "143879",
    "end": "145920"
  },
  {
    "text": "start with having just the data from the",
    "start": "145920",
    "end": "147900"
  },
  {
    "text": "app telemetic data like GeForce sensor",
    "start": "147900",
    "end": "150720"
  },
  {
    "text": "GPS location speed Etc and I use machine",
    "start": "150720",
    "end": "155040"
  },
  {
    "text": "learning model that has been trained on",
    "start": "155040",
    "end": "156840"
  },
  {
    "text": "historic data to detect that the cycle",
    "start": "156840",
    "end": "159360"
  },
  {
    "text": "is crashed and what kind of machine",
    "start": "159360",
    "end": "161099"
  },
  {
    "text": "learning model is this it's a tensorflow",
    "start": "161099",
    "end": "163200"
  },
  {
    "text": "model and to be basically trained it",
    "start": "163200",
    "end": "165840"
  },
  {
    "text": "before so that's not done on the stage",
    "start": "165840",
    "end": "168120"
  },
  {
    "text": "and we label data correctly and train it",
    "start": "168120",
    "end": "171060"
  },
  {
    "text": "in Google collab and I'm gonna talk",
    "start": "171060",
    "end": "173879"
  },
  {
    "text": "about how to get that model from that",
    "start": "173879",
    "end": "175980"
  },
  {
    "text": "Co-op to production yeah and so if",
    "start": "175980",
    "end": "178620"
  },
  {
    "text": "you're talking about real-time machine",
    "start": "178620",
    "end": "180180"
  },
  {
    "text": "learning what do you mean with real time",
    "start": "180180",
    "end": "182040"
  },
  {
    "text": "how fast is real time when can you",
    "start": "182040",
    "end": "184260"
  },
  {
    "text": "really say this is real-time ml well",
    "start": "184260",
    "end": "186780"
  },
  {
    "text": "real-time in this case would be five",
    "start": "186780",
    "end": "189480"
  },
  {
    "text": "times per second we will receive",
    "start": "189480",
    "end": "191519"
  },
  {
    "text": "Telemetry data points from the cyclist",
    "start": "191519",
    "end": "194099"
  },
  {
    "text": "so all of these parameters that I made",
    "start": "194099",
    "end": "196500"
  },
  {
    "text": "mentioned will be five times per second",
    "start": "196500",
    "end": "198360"
  },
  {
    "text": "stream to the cloud and we will with I",
    "start": "198360",
    "end": "202080"
  },
  {
    "text": "would say 50 milliseconds delay in form",
    "start": "202080",
    "end": "204959"
  },
  {
    "text": "either the services or a consuming",
    "start": "204959",
    "end": "207959"
  },
  {
    "text": "application that dials a crash there's",
    "start": "207959",
    "end": "210180"
  },
  {
    "text": "no one hour one day one minute delay",
    "start": "210180",
    "end": "213900"
  },
  {
    "text": "yeah okay so you get this data from your",
    "start": "213900",
    "end": "218099"
  },
  {
    "text": "smart device and you're cutting this up",
    "start": "218099",
    "end": "220319"
  },
  {
    "text": "into chunks which are then sending to",
    "start": "220319",
    "end": "222360"
  },
  {
    "text": "your API or to your application so we",
    "start": "222360",
    "end": "225720"
  },
  {
    "text": "streaming this data directly through the",
    "start": "225720",
    "end": "228480"
  },
  {
    "text": "pipeline without batching anything so",
    "start": "228480",
    "end": "231480"
  },
  {
    "text": "basically it's coming piece by piece and",
    "start": "231480",
    "end": "234239"
  },
  {
    "text": "we are not waiting for anything either",
    "start": "234239",
    "end": "235560"
  },
  {
    "text": "so every 200 milliseconds we do this",
    "start": "235560",
    "end": "239879"
  },
  {
    "text": "detection and either say this is not a",
    "start": "239879",
    "end": "243120"
  },
  {
    "text": "crash or this is a crash and in the end",
    "start": "243120",
    "end": "245400"
  },
  {
    "text": "of the presentation I would have a",
    "start": "245400",
    "end": "247080"
  },
  {
    "text": "simple front-end application with a map",
    "start": "247080",
    "end": "249060"
  },
  {
    "text": "and alert because obviously someone got",
    "start": "249060",
    "end": "251519"
  },
  {
    "text": "crash bike on the stage I'm gonna have a",
    "start": "251519",
    "end": "254939"
  },
  {
    "text": "similar model that would detect shaking",
    "start": "254939",
    "end": "256440"
  },
  {
    "text": "with the phone and I'm going to show",
    "start": "256440",
    "end": "258239"
  },
  {
    "text": "everyone that the shake is detected and",
    "start": "258239",
    "end": "260220"
  },
  {
    "text": "where does this come from how did you",
    "start": "260220",
    "end": "261540"
  },
  {
    "text": "get started with this the roots of this",
    "start": "261540",
    "end": "263759"
  },
  {
    "text": "idea for this open source library is",
    "start": "263759",
    "end": "265740"
  },
  {
    "text": "coming from my previous job where I was",
    "start": "265740",
    "end": "267840"
  },
  {
    "text": "working in McLaren and I was leading a",
    "start": "267840",
    "end": "269940"
  },
  {
    "text": "team that was connecting F1 cars to the",
    "start": "269940",
    "end": "272759"
  },
  {
    "text": "cloud and therefore to the factory so",
    "start": "272759",
    "end": "275699"
  },
  {
    "text": "people don't have to travel every second",
    "start": "275699",
    "end": "277139"
  },
  {
    "text": "weekend around the world to build",
    "start": "277139",
    "end": "279240"
  },
  {
    "text": "real-time decision insights what I mean",
    "start": "279240",
    "end": "281699"
  },
  {
    "text": "by that is basically deciding in the",
    "start": "281699",
    "end": "283860"
  },
  {
    "text": "split second that the car needs",
    "start": "283860",
    "end": "285419"
  },
  {
    "text": "different tires different settings for",
    "start": "285419",
    "end": "287160"
  },
  {
    "text": "the wing Etc and it was challenging use",
    "start": "287160",
    "end": "290220"
  },
  {
    "text": "case lots of data around 30 Million",
    "start": "290220",
    "end": "292620"
  },
  {
    "text": "numbers per minute from each car and so",
    "start": "292620",
    "end": "294960"
  },
  {
    "text": "we couldn't use any sort of database",
    "start": "294960",
    "end": "297720"
  },
  {
    "text": "technology that I'm going to talk about",
    "start": "297720",
    "end": "299160"
  },
  {
    "text": "in a presentation and we had to adopt",
    "start": "299160",
    "end": "301979"
  },
  {
    "text": "streaming technology but the biggest",
    "start": "301979",
    "end": "304020"
  },
  {
    "text": "problem we faced actually was to get",
    "start": "304020",
    "end": "306360"
  },
  {
    "text": "this technology to the hands of arcus",
    "start": "306360",
    "end": "308580"
  },
  {
    "text": "functional team which were made of",
    "start": "308580",
    "end": "310800"
  },
  {
    "text": "mechanical engineers ml Engineers data",
    "start": "310800",
    "end": "312960"
  },
  {
    "text": "scientists they all use Python and",
    "start": "312960",
    "end": "315600"
  },
  {
    "text": "really struggled to use this new tag",
    "start": "315600",
    "end": "317759"
  },
  {
    "text": "that we give them and how should I see",
    "start": "317759",
    "end": "319979"
  },
  {
    "text": "this so you have this car going over",
    "start": "319979",
    "end": "322080"
  },
  {
    "text": "circuits generating a lot of data this",
    "start": "322080",
    "end": "325199"
  },
  {
    "text": "sends it back to some kind of like",
    "start": "325199",
    "end": "327120"
  },
  {
    "text": "ground station and then do you have",
    "start": "327120",
    "end": "329520"
  },
  {
    "text": "humans making decisions real time or is",
    "start": "329520",
    "end": "332580"
  },
  {
    "text": "this also ml models which are making",
    "start": "332580",
    "end": "334979"
  },
  {
    "text": "decisions the way how it works is that",
    "start": "334979",
    "end": "337080"
  },
  {
    "text": "in the card there are sensors that",
    "start": "337080",
    "end": "338820"
  },
  {
    "text": "collecting data some of them are even",
    "start": "338820",
    "end": "340979"
  },
  {
    "text": "more than kilohertz or more than",
    "start": "340979",
    "end": "342780"
  },
  {
    "text": "thousand numbers per second that is",
    "start": "342780",
    "end": "344400"
  },
  {
    "text": "streamed over the radio to the garage",
    "start": "344400",
    "end": "346440"
  },
  {
    "text": "where there's a direct connection to the",
    "start": "346440",
    "end": "348900"
  },
  {
    "text": "cloud and then through the cloud",
    "start": "348900",
    "end": "350520"
  },
  {
    "text": "infrastructure it's being consumed in a",
    "start": "350520",
    "end": "353039"
  },
  {
    "text": "factory where people during the week",
    "start": "353039",
    "end": "355800"
  },
  {
    "text": "building new models and then in a race",
    "start": "355800",
    "end": "359039"
  },
  {
    "text": "day there is plenty of screens in the",
    "start": "359039",
    "end": "361380"
  },
  {
    "text": "garage where there are dashboards and",
    "start": "361380",
    "end": "363840"
  },
  {
    "text": "different waveforms which basically",
    "start": "363840",
    "end": "366060"
  },
  {
    "text": "visualizing the result of these models",
    "start": "366060",
    "end": "368100"
  },
  {
    "text": "so the people in the garage can",
    "start": "368100",
    "end": "369900"
  },
  {
    "text": "immediately decide that kind something",
    "start": "369900",
    "end": "371639"
  },
  {
    "text": "else and so this is all part of the race",
    "start": "371639",
    "end": "373979"
  },
  {
    "text": "strategy where people need to make",
    "start": "373979",
    "end": "375600"
  },
  {
    "text": "decisions in split seconds and this",
    "start": "375600",
    "end": "377340"
  },
  {
    "text": "needs the data to be available and the",
    "start": "377340",
    "end": "379199"
  },
  {
    "text": "models to run in Split seconds yeah",
    "start": "379199",
    "end": "381180"
  },
  {
    "text": "exactly and basically during my time in",
    "start": "381180",
    "end": "384240"
  },
  {
    "text": "McLean we took that know-how from racing",
    "start": "384240",
    "end": "387060"
  },
  {
    "text": "and actually applied outside so at the",
    "start": "387060",
    "end": "389340"
  },
  {
    "text": "end we end up doing the same thing for",
    "start": "389340",
    "end": "391500"
  },
  {
    "text": "high-speed Railway in Singapore where",
    "start": "391500",
    "end": "393900"
  },
  {
    "text": "basically we were using a machine",
    "start": "393900",
    "end": "395400"
  },
  {
    "text": "learning to detect and Brake and",
    "start": "395400",
    "end": "397560"
  },
  {
    "text": "suspension deterioration based on the",
    "start": "397560",
    "end": "399840"
  },
  {
    "text": "historic data so there are certain",
    "start": "399840",
    "end": "401280"
  },
  {
    "text": "vibration signatures that will lead to a",
    "start": "401280",
    "end": "404580"
  },
  {
    "text": "iteration of the object and you were",
    "start": "404580",
    "end": "406259"
  },
  {
    "text": "talking about like different programming",
    "start": "406259",
    "end": "408120"
  },
  {
    "text": "languages like other Java or python how",
    "start": "408120",
    "end": "410699"
  },
  {
    "text": "does this integrate with what you're",
    "start": "410699",
    "end": "412139"
  },
  {
    "text": "working on basically the whole streaming",
    "start": "412139",
    "end": "414960"
  },
  {
    "text": "world is traditionally Java based most",
    "start": "414960",
    "end": "418800"
  },
  {
    "text": "of the Brokers are built in javascala",
    "start": "418800",
    "end": "421259"
  },
  {
    "text": "and as a result most of the tools around",
    "start": "421259",
    "end": "423960"
  },
  {
    "text": "it and most of the libraries and",
    "start": "423960",
    "end": "425880"
  },
  {
    "text": "Frameworks are built in Java although",
    "start": "425880",
    "end": "428100"
  },
  {
    "text": "there are some ports and some libraries",
    "start": "428100",
    "end": "430620"
  },
  {
    "text": "that lets you use these libraries from",
    "start": "430620",
    "end": "432240"
  },
  {
    "text": "python although there are just a few of",
    "start": "432240",
    "end": "434520"
  },
  {
    "text": "them it's quite painful because this",
    "start": "434520",
    "end": "436919"
  },
  {
    "text": "connection doesn't really work well and",
    "start": "436919",
    "end": "438660"
  },
  {
    "text": "therefore it's quite difficult for",
    "start": "438660",
    "end": "440460"
  },
  {
    "text": "patent people especially people from",
    "start": "440460",
    "end": "442440"
  },
  {
    "text": "data teams to leverage this stack and as",
    "start": "442440",
    "end": "444720"
  },
  {
    "text": "a result most of the projects really",
    "start": "444720",
    "end": "447300"
  },
  {
    "text": "doesn't work that way and most of the",
    "start": "447300",
    "end": "449280"
  },
  {
    "text": "people work intubating on books in silos",
    "start": "449280",
    "end": "451139"
  },
  {
    "text": "and then software engineering taking",
    "start": "451139",
    "end": "452699"
  },
  {
    "text": "these models into production yeah so",
    "start": "452699",
    "end": "455580"
  },
  {
    "text": "what do you do to improve this what I",
    "start": "455580",
    "end": "458160"
  },
  {
    "text": "believe is that unless data team Work",
    "start": "458160",
    "end": "460139"
  },
  {
    "text": "Direct on product it's never going to",
    "start": "460139",
    "end": "462120"
  },
  {
    "text": "work really well because people don't",
    "start": "462120",
    "end": "463800"
  },
  {
    "text": "see the result of their work immediately",
    "start": "463800",
    "end": "465419"
  },
  {
    "text": "and they are dependent on the teams and",
    "start": "465419",
    "end": "467639"
  },
  {
    "text": "every time that one team is depending",
    "start": "467639",
    "end": "469020"
  },
  {
    "text": "another it just kills Innovation and",
    "start": "469020",
    "end": "470940"
  },
  {
    "text": "efficiency so the idea of this is that a",
    "start": "470940",
    "end": "474180"
  },
  {
    "text": "data team directly contribute to a",
    "start": "474180",
    "end": "476400"
  },
  {
    "text": "product and can test and develop",
    "start": "476400",
    "end": "479099"
  },
  {
    "text": "straight away so the code doesn't run",
    "start": "479099",
    "end": "481139"
  },
  {
    "text": "into a notebook or stays there but",
    "start": "481139",
    "end": "483479"
  },
  {
    "text": "actually goes to real-time pipelines and",
    "start": "483479",
    "end": "486060"
  },
  {
    "text": "so people can immediately see result of",
    "start": "486060",
    "end": "488039"
  },
  {
    "text": "their work on a physical thing and you",
    "start": "488039",
    "end": "490319"
  },
  {
    "text": "mentioned that there's different ways",
    "start": "490319",
    "end": "491940"
  },
  {
    "text": "people can orchestrate something like",
    "start": "491940",
    "end": "493380"
  },
  {
    "text": "this like there's different ml",
    "start": "493380",
    "end": "494639"
  },
  {
    "text": "architectures you could use user you",
    "start": "494639",
    "end": "497039"
  },
  {
    "text": "could use for such an approach which",
    "start": "497039",
    "end": "498780"
  },
  {
    "text": "ones are there yeah so there's many",
    "start": "498780",
    "end": "501539"
  },
  {
    "text": "options to choose from from all",
    "start": "501539",
    "end": "504180"
  },
  {
    "text": "different dimensions that you look at",
    "start": "504180",
    "end": "506039"
  },
  {
    "text": "the architecture of building such a",
    "start": "506039",
    "end": "508020"
  },
  {
    "text": "system but one of them is obviously if",
    "start": "508020",
    "end": "510180"
  },
  {
    "text": "you're gonna go for batch or streaming",
    "start": "510180",
    "end": "511919"
  },
  {
    "text": "so are you going to use technology like",
    "start": "511919",
    "end": "513959"
  },
  {
    "text": "a spark and react to data in batches or",
    "start": "513959",
    "end": "517800"
  },
  {
    "text": "you need a real-time system where you",
    "start": "517800",
    "end": "521159"
  },
  {
    "text": "need to use something like Kafka or",
    "start": "521159",
    "end": "523140"
  },
  {
    "text": "Pulsar or other streaming Technologies",
    "start": "523140",
    "end": "525360"
  },
  {
    "text": "and the second thing is how you're",
    "start": "525360",
    "end": "527279"
  },
  {
    "text": "actually going to use your ml models so",
    "start": "527279",
    "end": "529500"
  },
  {
    "text": "you can deploy them behind the API or",
    "start": "529500",
    "end": "532260"
  },
  {
    "text": "you can actually embed them to a",
    "start": "532260",
    "end": "534120"
  },
  {
    "text": "streaming transformation and discuss",
    "start": "534120",
    "end": "536580"
  },
  {
    "text": "both content problems of each solution",
    "start": "536580",
    "end": "538740"
  },
  {
    "text": "and what do you then mean as a streaming",
    "start": "538740",
    "end": "540959"
  },
  {
    "text": "transformation this is a fundamental",
    "start": "540959",
    "end": "543360"
  },
  {
    "text": "major concept of what I'm going to talk",
    "start": "543360",
    "end": "545519"
  },
  {
    "text": "about which is a pop and sub service so",
    "start": "545519",
    "end": "547980"
  },
  {
    "text": "basically we're gonna subscribe in our",
    "start": "547980",
    "end": "550019"
  },
  {
    "text": "model to a topic where we're gonna get",
    "start": "550019",
    "end": "552060"
  },
  {
    "text": "input data from the phone and we're",
    "start": "552060",
    "end": "554160"
  },
  {
    "text": "going to Output the results therefore is",
    "start": "554160",
    "end": "556140"
  },
  {
    "text": "is there a question now and this is the",
    "start": "556140",
    "end": "559200"
  },
  {
    "text": "major architectural Cornerstone of this",
    "start": "559200",
    "end": "561600"
  },
  {
    "text": "approach okay and you mentioned for",
    "start": "561600",
    "end": "564180"
  },
  {
    "text": "example Kafka and you mentioned some",
    "start": "564180",
    "end": "566160"
  },
  {
    "text": "other tools how does your work then",
    "start": "566160",
    "end": "568620"
  },
  {
    "text": "relate to this yeah well what we found",
    "start": "568620",
    "end": "571440"
  },
  {
    "text": "out is that Kafka although it's powerful",
    "start": "571440",
    "end": "573839"
  },
  {
    "text": "it's quite difficult to use so we have",
    "start": "573839",
    "end": "577200"
  },
  {
    "text": "built the level of abstraction on top of",
    "start": "577200",
    "end": "579180"
  },
  {
    "text": "it then we found that that's not enough",
    "start": "579180",
    "end": "582480"
  },
  {
    "text": "actually because streaming on itself",
    "start": "582480",
    "end": "585260"
  },
  {
    "text": "introduce complexities and different",
    "start": "585260",
    "end": "587820"
  },
  {
    "text": "approaches to common problems I have a",
    "start": "587820",
    "end": "589980"
  },
  {
    "text": "nice example of that tomorrow so we are",
    "start": "589980",
    "end": "592860"
  },
  {
    "text": "building abstraction on top of streaming",
    "start": "592860",
    "end": "595200"
  },
  {
    "text": "concept as well which means that you",
    "start": "595200",
    "end": "597420"
  },
  {
    "text": "would operate and you would develop your",
    "start": "597420",
    "end": "599760"
  },
  {
    "text": "code in python as it would be in Jupiter",
    "start": "599760",
    "end": "602399"
  },
  {
    "text": "notebook so what you are used to when",
    "start": "602399",
    "end": "604860"
  },
  {
    "text": "you're working with the static data",
    "start": "604860",
    "end": "606480"
  },
  {
    "text": "would apply to building a streaming",
    "start": "606480",
    "end": "608519"
  },
  {
    "text": "transformation and how do you do this",
    "start": "608519",
    "end": "610500"
  },
  {
    "text": "how can people test this with a",
    "start": "610500",
    "end": "612899"
  },
  {
    "text": "pre-recorded stream which they then",
    "start": "612899",
    "end": "614519"
  },
  {
    "text": "replay and can you still use it you a",
    "start": "614519",
    "end": "616740"
  },
  {
    "text": "notebook or do you as a machine learning",
    "start": "616740",
    "end": "619019"
  },
  {
    "text": "like as a data scientist do you then you",
    "start": "619019",
    "end": "621180"
  },
  {
    "text": "lose part of your tooling or so this",
    "start": "621180",
    "end": "624000"
  },
  {
    "text": "quick stream is open source library that",
    "start": "624000",
    "end": "625680"
  },
  {
    "text": "you can just download from pip and use",
    "start": "625680",
    "end": "628260"
  },
  {
    "text": "and connect to your broker if you don't",
    "start": "628260",
    "end": "630300"
  },
  {
    "text": "have a broker you can set it up it's",
    "start": "630300",
    "end": "632160"
  },
  {
    "text": "open source software as well if you",
    "start": "632160",
    "end": "634080"
  },
  {
    "text": "don't want to you can use our manage",
    "start": "634080",
    "end": "636180"
  },
  {
    "text": "broker as well as the method Works same",
    "start": "636180",
    "end": "638160"
  },
  {
    "text": "and then we have some open source",
    "start": "638160",
    "end": "640860"
  },
  {
    "text": "simulators of data that you can use if",
    "start": "640860",
    "end": "643320"
  },
  {
    "text": "you don't have your own so for example",
    "start": "643320",
    "end": "645180"
  },
  {
    "text": "we have F1 simulator which will give you",
    "start": "645180",
    "end": "648600"
  },
  {
    "text": "higher solution data so that's quite",
    "start": "648600",
    "end": "650100"
  },
  {
    "text": "cool you can also for example subscribe",
    "start": "650100",
    "end": "652500"
  },
  {
    "text": "to Reddit and get messages on Reddit or",
    "start": "652500",
    "end": "656040"
  },
  {
    "text": "you can use the app I'm going to show",
    "start": "656040",
    "end": "657540"
  },
  {
    "text": "you tomorrow it's also open source so",
    "start": "657540",
    "end": "659399"
  },
  {
    "text": "you can install it from App Store or",
    "start": "659399",
    "end": "661920"
  },
  {
    "text": "possibly you can even clone it and",
    "start": "661920",
    "end": "663779"
  },
  {
    "text": "change it to Studio need and they play",
    "start": "663779",
    "end": "665940"
  },
  {
    "text": "by yourself so then clicks handles both",
    "start": "665940",
    "end": "669120"
  },
  {
    "text": "text messages but also audio or what",
    "start": "669120",
    "end": "672360"
  },
  {
    "text": "kind of data do you handle yeah so we",
    "start": "672360",
    "end": "675000"
  },
  {
    "text": "handle Time series data which involves a",
    "start": "675000",
    "end": "678600"
  },
  {
    "text": "numerical and string values then we",
    "start": "678600",
    "end": "681420"
  },
  {
    "text": "handle binary data which is audio and",
    "start": "681420",
    "end": "684000"
  },
  {
    "text": "video and geospatial Etc where we kind",
    "start": "684000",
    "end": "687480"
  },
  {
    "text": "of allow developers to just attach its",
    "start": "687480",
    "end": "689579"
  },
  {
    "text": "own column and then we have a metadata",
    "start": "689579",
    "end": "692220"
  },
  {
    "text": "so you don't have to repeat for example",
    "start": "692220",
    "end": "694440"
  },
  {
    "text": "that this bike has a firmware 1.5 you",
    "start": "694440",
    "end": "698459"
  },
  {
    "text": "just send it once and the stateful",
    "start": "698459",
    "end": "699899"
  },
  {
    "text": "pipeline will persist that information",
    "start": "699899",
    "end": "702260"
  },
  {
    "text": "and then at the end you also can send",
    "start": "702260",
    "end": "704940"
  },
  {
    "text": "events so for example crash is a good",
    "start": "704940",
    "end": "707519"
  },
  {
    "text": "example of event which doesn't have any",
    "start": "707519",
    "end": "709500"
  },
  {
    "text": "continuous information yeah okay so can",
    "start": "709500",
    "end": "712560"
  },
  {
    "text": "you also connect these pipelines such",
    "start": "712560",
    "end": "714180"
  },
  {
    "text": "that one pipeline for example gets all",
    "start": "714180",
    "end": "716459"
  },
  {
    "text": "the information from your sensor and",
    "start": "716459",
    "end": "718440"
  },
  {
    "text": "then sends events to another pipeline",
    "start": "718440",
    "end": "720300"
  },
  {
    "text": "this is something which is changeable",
    "start": "720300",
    "end": "721920"
  },
  {
    "text": "yes so the whole idea of building",
    "start": "721920",
    "end": "725459"
  },
  {
    "text": "systems with this approach is to",
    "start": "725459",
    "end": "727740"
  },
  {
    "text": "building pipelines so each node in your",
    "start": "727740",
    "end": "731399"
  },
  {
    "text": "architecture is a container that",
    "start": "731399",
    "end": "733860"
  },
  {
    "text": "connects to one or more in input topics",
    "start": "733860",
    "end": "737160"
  },
  {
    "text": "and output results to one or more output",
    "start": "737160",
    "end": "740160"
  },
  {
    "text": "topics you create like a pipeline that",
    "start": "740160",
    "end": "742560"
  },
  {
    "text": "has multiple branches sometimes they",
    "start": "742560",
    "end": "744600"
  },
  {
    "text": "join back together sometimes they end",
    "start": "744600",
    "end": "746700"
  },
  {
    "text": "and when they end they usually either go",
    "start": "746700",
    "end": "749100"
  },
  {
    "text": "to database or back to the product and",
    "start": "749100",
    "end": "751620"
  },
  {
    "text": "same is with the start start could be",
    "start": "751620",
    "end": "753300"
  },
  {
    "text": "from your product or could be CDC from",
    "start": "753300",
    "end": "755220"
  },
  {
    "text": "database so you have multiple sources",
    "start": "755220",
    "end": "757019"
  },
  {
    "text": "multiple destinations and in the middle",
    "start": "757019",
    "end": "758579"
  },
  {
    "text": "you have one or more Transformations and",
    "start": "758579",
    "end": "761279"
  },
  {
    "text": "is there some kind of limit to the",
    "start": "761279",
    "end": "762959"
  },
  {
    "text": "amount of input or the amount of",
    "start": "762959",
    "end": "765000"
  },
  {
    "text": "consumers you have for a pipeline that",
    "start": "765000",
    "end": "767160"
  },
  {
    "text": "isn't really limits to number of",
    "start": "767160",
    "end": "769740"
  },
  {
    "text": "Transformations or sources one thing is",
    "start": "769740",
    "end": "772320"
  },
  {
    "text": "that Kafka is designed to be one to one",
    "start": "772320",
    "end": "776100"
  },
  {
    "text": "or one to a small number of consumers",
    "start": "776100",
    "end": "778860"
  },
  {
    "text": "and producers so if you have a use case",
    "start": "778860",
    "end": "780720"
  },
  {
    "text": "like we're gonna do today with the",
    "start": "780720",
    "end": "782339"
  },
  {
    "text": "phones where you can possibly have",
    "start": "782339",
    "end": "784019"
  },
  {
    "text": "thousands or Millions users you need to",
    "start": "784019",
    "end": "786060"
  },
  {
    "text": "put some sort of Gateway between your",
    "start": "786060",
    "end": "787800"
  },
  {
    "text": "devices and Kafka which we will do and",
    "start": "787800",
    "end": "790320"
  },
  {
    "text": "in our case it would be a websocket",
    "start": "790320",
    "end": "791820"
  },
  {
    "text": "Gateway collecting data and then",
    "start": "791820",
    "end": "793620"
  },
  {
    "text": "funneling it to topic yeah okay so do",
    "start": "793620",
    "end": "795600"
  },
  {
    "text": "yourself some kind of Q in between or so",
    "start": "795600",
    "end": "798540"
  },
  {
    "text": "there's really any queue in between but",
    "start": "798540",
    "end": "800579"
  },
  {
    "text": "there's a queue obviously in Kafka so as",
    "start": "800579",
    "end": "802620"
  },
  {
    "text": "the data flowing to the Gateway they are",
    "start": "802620",
    "end": "805320"
  },
  {
    "text": "being put to the queue in topic and then",
    "start": "805320",
    "end": "807540"
  },
  {
    "text": "the service is listening to it will just",
    "start": "807540",
    "end": "810000"
  },
  {
    "text": "collect consume and process this data",
    "start": "810000",
    "end": "812279"
  },
  {
    "text": "from that queue you already have some",
    "start": "812279",
    "end": "814260"
  },
  {
    "text": "consumers who are using this in some",
    "start": "814260",
    "end": "815940"
  },
  {
    "text": "creative or interesting ways what's the",
    "start": "815940",
    "end": "818459"
  },
  {
    "text": "most interesting use cases you've seen",
    "start": "818459",
    "end": "819899"
  },
  {
    "text": "yes so one really cool use case is from",
    "start": "819899",
    "end": "823019"
  },
  {
    "text": "Healthcare where there's a census on",
    "start": "823019",
    "end": "825360"
  },
  {
    "text": "your lump and listening to your",
    "start": "825360",
    "end": "826860"
  },
  {
    "text": "breathing and then being sent to cloud",
    "start": "826860",
    "end": "829040"
  },
  {
    "text": "and machine learning is used to detect",
    "start": "829040",
    "end": "831839"
  },
  {
    "text": "different illnesses that you have and",
    "start": "831839",
    "end": "834420"
  },
  {
    "text": "that's all going to the companion app so",
    "start": "834420",
    "end": "836519"
  },
  {
    "text": "it's quite similar to what we're gonna",
    "start": "836519",
    "end": "837720"
  },
  {
    "text": "do here then second quite interesting",
    "start": "837720",
    "end": "840000"
  },
  {
    "text": "use cases in the public transport Wi-Fi",
    "start": "840000",
    "end": "842519"
  },
  {
    "text": "sensors detecting the occupation of the",
    "start": "842519",
    "end": "845399"
  },
  {
    "text": "underground stations and automatically",
    "start": "845399",
    "end": "847560"
  },
  {
    "text": "closing opening doors and sending people",
    "start": "847560",
    "end": "850200"
  },
  {
    "text": "to a less occupied part of the stations",
    "start": "850200",
    "end": "853079"
  },
  {
    "text": "oh interesting so then you have some",
    "start": "853079",
    "end": "855540"
  },
  {
    "text": "kind of signal which signals which tells",
    "start": "855540",
    "end": "857760"
  },
  {
    "text": "you how many people are in certain parts",
    "start": "857760",
    "end": "859740"
  },
  {
    "text": "of the station yes correct so you have",
    "start": "859740",
    "end": "861660"
  },
  {
    "text": "the rotors all around the station and",
    "start": "861660",
    "end": "864240"
  },
  {
    "text": "then in real time you know that in the",
    "start": "864240",
    "end": "866820"
  },
  {
    "text": "north part of the station there's more",
    "start": "866820",
    "end": "868200"
  },
  {
    "text": "people in the South and therefore it",
    "start": "868200",
    "end": "869519"
  },
  {
    "text": "will be better if people can come from",
    "start": "869519",
    "end": "871139"
  },
  {
    "text": "the south and you can do this in a Split",
    "start": "871139",
    "end": "872760"
  },
  {
    "text": "Second",
    "start": "872760",
    "end": "873480"
  },
  {
    "text": "oh interesting and then in terms of",
    "start": "873480",
    "end": "875339"
  },
  {
    "text": "implementation if we for example want to",
    "start": "875339",
    "end": "877500"
  },
  {
    "text": "have some machine learning model act on",
    "start": "877500",
    "end": "879240"
  },
  {
    "text": "it Are there specific limitations or",
    "start": "879240",
    "end": "880980"
  },
  {
    "text": "specific Frameworks you have to use so",
    "start": "880980",
    "end": "883260"
  },
  {
    "text": "basically the beauty of this approach is",
    "start": "883260",
    "end": "885420"
  },
  {
    "text": "and I think that's why it's so suited to",
    "start": "885420",
    "end": "887880"
  },
  {
    "text": "machine learning is that it's just a",
    "start": "887880",
    "end": "890220"
  },
  {
    "text": "python at the end where all the magic",
    "start": "890220",
    "end": "892800"
  },
  {
    "text": "happening so you read data from Kafka",
    "start": "892800",
    "end": "895440"
  },
  {
    "text": "into Python and then in that code you",
    "start": "895440",
    "end": "898199"
  },
  {
    "text": "are free to do whatever you want so that",
    "start": "898199",
    "end": "900240"
  },
  {
    "text": "could be using any pip package out there",
    "start": "900240",
    "end": "903660"
  },
  {
    "text": "you can use the library like opencv for",
    "start": "903660",
    "end": "906360"
  },
  {
    "text": "image processing and really anything",
    "start": "906360",
    "end": "908699"
  },
  {
    "text": "that is possible in Python is possible",
    "start": "908699",
    "end": "911940"
  },
  {
    "text": "with this approach and then you just",
    "start": "911940",
    "end": "913680"
  },
  {
    "text": "output it again with the python",
    "start": "913680",
    "end": "915120"
  },
  {
    "text": "interface so there's no black box",
    "start": "915120",
    "end": "917480"
  },
  {
    "text": "operation there's no domain specific",
    "start": "917480",
    "end": "920040"
  },
  {
    "text": "language like you would find in Flink so",
    "start": "920040",
    "end": "922199"
  },
  {
    "text": "do I basically just say whenever you",
    "start": "922199",
    "end": "924000"
  },
  {
    "text": "have a new piece of data called this",
    "start": "924000",
    "end": "926040"
  },
  {
    "text": "python function with these arguments",
    "start": "926040",
    "end": "928320"
  },
  {
    "text": "correct and even modern python functions",
    "start": "928320",
    "end": "931199"
  },
  {
    "text": "you can build python classes with all",
    "start": "931199",
    "end": "933120"
  },
  {
    "text": "the structure sure that you are using",
    "start": "933120",
    "end": "934980"
  },
  {
    "text": "python you can also try in Jupiter",
    "start": "934980",
    "end": "937199"
  },
  {
    "text": "notebook so the library will work in a",
    "start": "937199",
    "end": "939360"
  },
  {
    "text": "Cell in Japan book so again there's",
    "start": "939360",
    "end": "941639"
  },
  {
    "text": "basically a freedom of deployment and",
    "start": "941639",
    "end": "943740"
  },
  {
    "text": "running this code anywhere it's just a",
    "start": "943740",
    "end": "945540"
  },
  {
    "text": "python so if people are listening and",
    "start": "945540",
    "end": "947579"
  },
  {
    "text": "they are beginners in real-time machine",
    "start": "947579",
    "end": "949320"
  },
  {
    "text": "learning how would you get started what",
    "start": "949320",
    "end": "951240"
  },
  {
    "text": "would you recommend to people yeah well",
    "start": "951240",
    "end": "953399"
  },
  {
    "text": "first of all what I'm doing here today",
    "start": "953399",
    "end": "955620"
  },
  {
    "text": "it's available as a tutorial all the",
    "start": "955620",
    "end": "958740"
  },
  {
    "text": "code is open source so you can basically",
    "start": "958740",
    "end": "960540"
  },
  {
    "text": "try it by yourself there are other",
    "start": "960540",
    "end": "962160"
  },
  {
    "text": "tutorials that we have published that go",
    "start": "962160",
    "end": "964860"
  },
  {
    "text": "into different use cases and going step",
    "start": "964860",
    "end": "966959"
  },
  {
    "text": "by step from literally installing python",
    "start": "966959",
    "end": "970380"
  },
  {
    "text": "installing Kafka things like that to get",
    "start": "970380",
    "end": "972779"
  },
  {
    "text": "it going from the start so I recommend",
    "start": "972779",
    "end": "975000"
  },
  {
    "text": "to people that go to docs that we have",
    "start": "975000",
    "end": "977519"
  },
  {
    "text": "for the library there are tutorials and",
    "start": "977519",
    "end": "979800"
  },
  {
    "text": "there are some Concepts described like",
    "start": "979800",
    "end": "981779"
  },
  {
    "text": "what is the detail of this so yeah that",
    "start": "981779",
    "end": "984240"
  },
  {
    "text": "would be the best place to start Are",
    "start": "984240",
    "end": "985800"
  },
  {
    "text": "there specific Concepts which are",
    "start": "985800",
    "end": "987180"
  },
  {
    "text": "difficult to grasp or is it relatively",
    "start": "987180",
    "end": "988860"
  },
  {
    "text": "straightforward so what is really",
    "start": "988860",
    "end": "991320"
  },
  {
    "text": "complicated is a staple process thing",
    "start": "991320",
    "end": "993839"
  },
  {
    "text": "they'll be trying to solve and Abstract",
    "start": "993839",
    "end": "995519"
  },
  {
    "text": "from but if you are interested to learn",
    "start": "995519",
    "end": "997800"
  },
  {
    "text": "more about staple processing we have it",
    "start": "997800",
    "end": "999959"
  },
  {
    "text": "in the docs explained that's a very",
    "start": "999959",
    "end": "1002360"
  },
  {
    "text": "interesting concept and it will open the",
    "start": "1002360",
    "end": "1004880"
  },
  {
    "text": "intricacy of the stream processing but I",
    "start": "1004880",
    "end": "1006860"
  },
  {
    "text": "think the goal of the library really is",
    "start": "1006860",
    "end": "1008420"
  },
  {
    "text": "to make it simpler obviously it's a",
    "start": "1008420",
    "end": "1010759"
  },
  {
    "text": "journey but I'm confident that we",
    "start": "1010759",
    "end": "1012800"
  },
  {
    "text": "already have done a great job in making",
    "start": "1012800",
    "end": "1015199"
  },
  {
    "text": "it a bit easier than it was yeah thank",
    "start": "1015199",
    "end": "1017180"
  },
  {
    "text": "you very much thank you for joining the",
    "start": "1017180",
    "end": "1018740"
  },
  {
    "text": "podcast and good luck with your talk",
    "start": "1018740",
    "end": "1020300"
  },
  {
    "text": "tomorrow and hopefully people can watch",
    "start": "1020300",
    "end": "1022220"
  },
  {
    "text": "the recording online yeah thank you for",
    "start": "1022220",
    "end": "1023839"
  },
  {
    "text": "having me",
    "start": "1023839",
    "end": "1026140"
  },
  {
    "text": "[Music]",
    "start": "1029530",
    "end": "1036940"
  },
  {
    "text": "thank you thank you foreign",
    "start": "1038980",
    "end": "1043360"
  }
]