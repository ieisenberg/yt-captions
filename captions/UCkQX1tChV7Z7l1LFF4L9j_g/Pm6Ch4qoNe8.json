[
  {
    "text": "um I'm I'm thrilled to be here uh so I'm a software engineer for Zinga and we're actually up here on our work week um and",
    "start": "18080",
    "end": "24279"
  },
  {
    "text": "I'm flying home tomorrow so I was really glad got a chance to kind of squeeze this event in uh San Francisco you guys",
    "start": "24279",
    "end": "30320"
  },
  {
    "text": "are an awesome town like I've been here a few times but I'm just blown away um by the response to an event like this",
    "start": "30320",
    "end": "36120"
  },
  {
    "text": "like I'm I'm nobody and you guys came out to hear me so that's pretty awesome um so uh I have been doing JavaScript",
    "start": "36120",
    "end": "43719"
  },
  {
    "text": "development for a long time as a matter of fact I sort of self-describe myself um as a JavaScript snob so there's a lot",
    "start": "43719",
    "end": "50079"
  },
  {
    "text": "of people out there that feel like they want to be polyglots and into a whole bunch of different things and I'm the opposite of that uh I I focus entirely",
    "start": "50079",
    "end": "56640"
  },
  {
    "text": "on web stack technology and JavaScript and I'm pretty much bored by anything else so uh if that's if you hear that",
    "start": "56640",
    "end": "63399"
  },
  {
    "text": "perspective in what I'm talking about tonight uh that's why um I've written a couple of different open source projects",
    "start": "63399",
    "end": "68920"
  },
  {
    "text": "that have gotten some traction uh namely one there's actually one that I believe at least at one point may be still true",
    "start": "68920",
    "end": "74880"
  },
  {
    "text": "being used by formspring is lab JS it's a JavaScript Dynamic loader um if you're",
    "start": "74880",
    "end": "80360"
  },
  {
    "text": "interested in that sort of world and want to ask me questions about that please feel free um so uh we'll jump in",
    "start": "80360",
    "end": "87400"
  },
  {
    "text": "this this website GE ay. me that has all of my contact information except for my personal cell phone but every other",
    "start": "87400",
    "end": "93399"
  },
  {
    "text": "piece way that you could possibly get in contact with me it's up there so if you have any questions afterwards or even",
    "start": "93399",
    "end": "99720"
  },
  {
    "text": "during but I won't answer during but if you have any questions just feel free to grab one of those your prefer preferred",
    "start": "99720",
    "end": "106159"
  },
  {
    "text": "contact UM off of that site um so as they alluded to HTML 5 Cookbook just",
    "start": "106159",
    "end": "112280"
  },
  {
    "text": "came out back right the like the day after Thanksgiving it's already doing um we pleased phenomenally well and I",
    "start": "112280",
    "end": "118880"
  },
  {
    "text": "encourage everybody if uh if you have not gotten a good HTML 5 book um just",
    "start": "118880",
    "end": "124200"
  },
  {
    "text": "take a look at this one it's available in ebook form we've got discount codes um we put a lot of work into it this",
    "start": "124200",
    "end": "129319"
  },
  {
    "text": "talk actually came because doing the uh the JavaScript heavy lifting for this",
    "start": "129319",
    "end": "134920"
  },
  {
    "text": "book as uh my co-author came to me and said hey I need somebody to do some JavaScript and I said sure I'm I'm into",
    "start": "134920",
    "end": "140319"
  },
  {
    "text": "that and uh I said I'll take over the JavaScript part and we got some other co-authors for some of the like the more",
    "start": "140319",
    "end": "145760"
  },
  {
    "text": "boring stuff like articles and sections and stuff like that that people don't care about but um so I did the JavaScript part and and one of the",
    "start": "145760",
    "end": "152040"
  },
  {
    "text": "chapters in there is Advanced JavaScript where we really kind of dive into some of the more heavy lifting of the apis",
    "start": "152040",
    "end": "158239"
  },
  {
    "text": "and so out of that came this talk I decided to um figure out a single demo",
    "start": "158239",
    "end": "165159"
  },
  {
    "text": "that I could build from scratch that would weave all of these different apis into one because what was frustrating me actually writing the book was we were",
    "start": "165159",
    "end": "172360"
  },
  {
    "text": "using all these disjoint examples so you had an example for history API and a totally different example for something",
    "start": "172360",
    "end": "178200"
  },
  {
    "text": "like local storage and it did didn't seem coherent and and that's actually one of my regrets a little bit from um",
    "start": "178200",
    "end": "184400"
  },
  {
    "text": "from the book is that unfortunately some of those examples are destroying but that's the reason for this talk is we're",
    "start": "184400",
    "end": "189840"
  },
  {
    "text": "going to actually build we're going to talk about the building of a single game it's a multiplayer online game it's the",
    "start": "189840",
    "end": "196159"
  },
  {
    "text": "server is not currently up right now but at the end of the talk I will put it up and if you those of you that have laptops if you want to connect and play",
    "start": "196159",
    "end": "202280"
  },
  {
    "text": "we can have fun with that um but we're going to talk through weaving several of these Advanced apis together into making",
    "start": "202280",
    "end": "208120"
  },
  {
    "text": "a game um this is going to be extremely JavaScript heavy and code heavy some of this code maybe because of the lighting",
    "start": "208120",
    "end": "214200"
  },
  {
    "text": "may be a little bit hard to read I'll try to explain some code um but they will have the code uh the the slides up",
    "start": "214200",
    "end": "219879"
  },
  {
    "text": "online so you can refer to it later if you want to so without any further Ado we'll jump right into the code and um",
    "start": "219879",
    "end": "226920"
  },
  {
    "text": "we're not going to see any kind of semantic tags this is all JavaScript uh the code for today I forgot to mention",
    "start": "226920",
    "end": "231959"
  },
  {
    "text": "the code for today will be available uh is available up on GitHub all this stuff both server side and client side um this",
    "start": "231959",
    "end": "239079"
  },
  {
    "text": "web address you don't the only part that you need is the part that's in bold and and per case letters",
    "start": "239079",
    "end": "244840"
  },
  {
    "text": "5.get um the other part's just gravy but that will take you to the GitHub repo and now let's jump into some code so",
    "start": "244840",
    "end": "251560"
  },
  {
    "text": "we're going to first talk about canvas so um this particular project um I I'm",
    "start": "251560",
    "end": "257280"
  },
  {
    "text": "using canvas it's not in the traditional way that you might expect for canvas is that a little easier for people to read",
    "start": "257280",
    "end": "262520"
  },
  {
    "text": "okay great um this particular project uh is not the typical one drawing arcs and",
    "start": "262520",
    "end": "268360"
  },
  {
    "text": "gradients and stuff like that this I'm using some of the more um in-depth features that don't get as much coverage",
    "start": "268360",
    "end": "274120"
  },
  {
    "text": "um things like Global composite operation and things like that so um what I'm using uh it for is a couple of",
    "start": "274120",
    "end": "279960"
  },
  {
    "text": "different things in this particular case this code build preview grid I call this function when you have uploaded an oh",
    "start": "279960",
    "end": "286320"
  },
  {
    "text": "let me back up and explain what this game does so you have some context this game is a multiplayer puzzle solving",
    "start": "286320",
    "end": "291400"
  },
  {
    "text": "game you upload an image it slices it up into a bunch of different tiles mixes them up and then people collaboratively",
    "start": "291400",
    "end": "297680"
  },
  {
    "text": "you can see people dragging pieces around and you're trying trying to put pieces in the correct location as quickly as possible uh so we have a",
    "start": "297680",
    "end": "304120"
  },
  {
    "text": "preview grid when you are uploading an image and it's a it's an overlay on top of the image element and simply shows",
    "start": "304120",
    "end": "309639"
  },
  {
    "text": "you based upon the difficulty setting where that grid where those slices are going to be made so rather than just",
    "start": "309639",
    "end": "315440"
  },
  {
    "text": "simply draw some white or black lines on top of the image what I realized is that people are going to upload light images",
    "start": "315440",
    "end": "321680"
  },
  {
    "text": "dark images it's hard to figure out it's hard to inspect that image and figure out what line color to draw so I was",
    "start": "321680",
    "end": "327479"
  },
  {
    "text": "trying to figure out a way that I could sort of superimpose the image of this grid on top of an image and what I came up with was Global",
    "start": "327479",
    "end": "333639"
  },
  {
    "text": "composite operation in canvas so essentially what I do um as I to draw",
    "start": "333639",
    "end": "338720"
  },
  {
    "text": "the grid I'm I'm using uh if you see line line 300 um and also line 303 so",
    "start": "338720",
    "end": "345800"
  },
  {
    "text": "I'm I'm instead of drawing lines I'm going to draw rectangles that are one or",
    "start": "345800",
    "end": "350960"
  },
  {
    "text": "no two pixels wide so I'm essentially drawing lines but with rectangles and the reason for that is I want to use them as a clip or as a clipping mask as",
    "start": "350960",
    "end": "358520"
  },
  {
    "text": "it's referred to that that essentially means that I want to draw something onto a canvas but only in the place where the",
    "start": "358520",
    "end": "364160"
  },
  {
    "text": "mask is and not anywhere else so I'm going to draw the grid as a mask and then I'm going to draw something on top",
    "start": "364160",
    "end": "369800"
  },
  {
    "text": "of that and it will only draw into those grid lines what am I going to draw on top of it is the image itself and I'm",
    "start": "369800",
    "end": "375039"
  },
  {
    "text": "going to do that twice the first time I'll lay it over and then I set the global composite mode which I think is",
    "start": "375039",
    "end": "380240"
  },
  {
    "text": "in the next slide I set the global composite mode here on line 327 to lighter and then I",
    "start": "380240",
    "end": "386520"
  },
  {
    "text": "do the exact same thing again what I get is the effect it's the the exact same image data but it's been lightened by",
    "start": "386520",
    "end": "392120"
  },
  {
    "text": "half and that's overlaid on top and what we'll see here we go we so context draw image",
    "start": "392120",
    "end": "398960"
  },
  {
    "text": "is how we draw from an image element into a canvas",
    "start": "398960",
    "end": "404160"
  },
  {
    "text": "element we'll have a screenshot here in just a moment I'll come back to this so you can see here when I have this image",
    "start": "404599",
    "end": "411160"
  },
  {
    "text": "I don't have actual lines what I have is the effective Lines by lightening those pixels using the global composite",
    "start": "411160",
    "end": "416720"
  },
  {
    "text": "operation so let me go back actually to some code uh there's a couple of other places that I'm using uh a couple of",
    "start": "416720",
    "end": "422039"
  },
  {
    "text": "other ways that I'm using canvas um one is to slice up those tiles so I have one",
    "start": "422039",
    "end": "427080"
  },
  {
    "text": "big image and I can calculate I use some you know fancy math to calculate where how I want to size things and how I want",
    "start": "427080",
    "end": "432479"
  },
  {
    "text": "to slice up all those tiles but how do I get that image data out well there's a function to get image data out of a",
    "start": "432479",
    "end": "437759"
  },
  {
    "text": "canvas element so if I draw an image into the canvas element and I can give it coordinates so I'm simply going to",
    "start": "437759",
    "end": "443440"
  },
  {
    "text": "Loop through I think that is I'm going to Loop through and use",
    "start": "443440",
    "end": "451120"
  },
  {
    "text": "context. draw image on line 259 and I'm going to grab only those slices one at a",
    "start": "451120",
    "end": "456199"
  },
  {
    "text": "time so I Loop through one at a time and grab the data out of the canvas element and get it as a data URL that way I",
    "start": "456199",
    "end": "461319"
  },
  {
    "text": "effectively split one image up into 20 30 50 separate images so again CA canvas",
    "start": "461319",
    "end": "467400"
  },
  {
    "text": "has these really helpful methods and it's kind of funny you find yourself sort of jockeying between an image element and a canvas and back and forth",
    "start": "467400",
    "end": "473199"
  },
  {
    "text": "because the image element has width and height properties that you want to read about an image and the canvas element",
    "start": "473199",
    "end": "478240"
  },
  {
    "text": "allows you to grab the data manipulate the data so I find myself in this project kind of drawing it into an image",
    "start": "478240",
    "end": "483280"
  },
  {
    "text": "element back into a canvas and so forth kind of swapping that but once you get the feeling for that it's actually really powerful to manipulate image",
    "start": "483280",
    "end": "492479"
  },
  {
    "text": "data this is what it looks like once the uh image has been sliced up you see the tiles there they're all mixed up and",
    "start": "492479",
    "end": "498479"
  },
  {
    "text": "then you drag those into the grid okay so the next API that we'll jump into is",
    "start": "498479",
    "end": "503720"
  },
  {
    "text": "appcash and let me give you a giant caveat um before we jump in and explain appcash I don't use appcash and I don't",
    "start": "503720",
    "end": "510840"
  },
  {
    "text": "like appcash I think it's kind of a sucky API um I think it's got a lot of problems before it uh gets to the point",
    "start": "510840",
    "end": "517000"
  },
  {
    "text": "where it's going to be useful uh but I thought it was useful for us to actually learn what it does and what what are the",
    "start": "517000",
    "end": "522320"
  },
  {
    "text": "pros and cons because uh if any of you do mobile development you've probably heard a lot about using appcash uh it's",
    "start": "522320",
    "end": "528480"
  },
  {
    "text": "one of those buzzwords in Mobile development um it's probably useful in desktop development too but certainly more so for so appcache so the theory",
    "start": "528480",
    "end": "535959"
  },
  {
    "text": "behind appcache is that the caching that we have in browsers is too volatile and too unreliable for the types of things",
    "start": "535959",
    "end": "543519"
  },
  {
    "text": "that we want to do in these really complex web applications where we're shoving sometimes 80 90 even 100% of the",
    "start": "543519",
    "end": "550320"
  },
  {
    "text": "code down through the browser Through the Wire to the browser and we're relying on all that code and all of that",
    "start": "550320",
    "end": "556600"
  },
  {
    "text": "code to be there and be available and If even a single file is not available the whole application's going to break it's",
    "start": "556600",
    "end": "562120"
  },
  {
    "text": "like getting a corrupted download of an app so um appcache says well we need to",
    "start": "562120",
    "end": "567480"
  },
  {
    "text": "solve that problem we need to create a more persistent and more reliable caching mechanism and there's a couple of offshoots that happen in addition to",
    "start": "567480",
    "end": "576440"
  },
  {
    "text": "um app cach kind of giving us the ability to make sure we can rely on the cash and one of those is uh related to",
    "start": "576440",
    "end": "582519"
  },
  {
    "text": "the online offline status so um you'll see down here at the bottom of this file which will explain in a moment there's a",
    "start": "582519",
    "end": "588440"
  },
  {
    "text": "fallback section uh it was brought up that perhaps this game could have sort of a fallback mode where if you're not",
    "start": "588440",
    "end": "594519"
  },
  {
    "text": "online you just fall back to single player mode sure um in this case I probably just would have an offline HTML",
    "start": "594519",
    "end": "600040"
  },
  {
    "text": "and say hey uh you need to have a connection to to play a multiplayer online game but uh in some cases you may",
    "start": "600040",
    "end": "606440"
  },
  {
    "text": "have fallback content and you would you would um list what the browser should do so in the offline case the browser would",
    "start": "606440",
    "end": "612519"
  },
  {
    "text": "use that instead of one of the other resources that you had provided so this",
    "start": "612519",
    "end": "617560"
  },
  {
    "text": "file is uh I I name this file cash. manifest. text um you can name it whatever you want the important thing",
    "start": "617560",
    "end": "624040"
  },
  {
    "text": "actually which you'll see later is that it has a content type very specific content type but this file is what we",
    "start": "624040",
    "end": "629800"
  },
  {
    "text": "create to tell the browser all of the resources that are actually really critical that we're going to download and make sure that the browser caches in",
    "start": "629800",
    "end": "637000"
  },
  {
    "text": "this special app cache and so we list them in the cach section and then we have a network session section starting",
    "start": "637000",
    "end": "643880"
  },
  {
    "text": "there on line 17 you see that I just have that star there essentially I'm saying every ax request that I make",
    "start": "643880",
    "end": "650440"
  },
  {
    "text": "needs to be available if you do not specify a location in an app cached",
    "start": "650440",
    "end": "656360"
  },
  {
    "text": "application if you don't specify an online location that you're going to make Network requests to in this section",
    "start": "656360",
    "end": "663120"
  },
  {
    "text": "the browser actually won't let you connect so this is one of those other offshoots it's almost sort of a pseudo security thing that it will not let an",
    "start": "663120",
    "end": "670320"
  },
  {
    "text": "offline application or even an online application connect to one of those Network locations unless it's explicitly",
    "start": "670320",
    "end": "676320"
  },
  {
    "text": "listed here I took the lazy Road and explicitly listed star so that I get everything but um that's another thing",
    "start": "676320",
    "end": "682839"
  },
  {
    "text": "that you can use the network section for but the main meat that we're dealing with here is the cash section we're listing all the different things that we",
    "start": "682839",
    "end": "688519"
  },
  {
    "text": "want to make sure and you can see I have the absolute address for jQuery and then I have my other HTML and JavaScript and",
    "start": "688519",
    "end": "693600"
  },
  {
    "text": "CSS files this tells the browser create a special cache that's not subject to the normal rules of expiration that the",
    "start": "693600",
    "end": "701160"
  },
  {
    "text": "caches are U subject to it's not subject even to clearing through the normal methods of clearing a user actually has",
    "start": "701160",
    "end": "707639"
  },
  {
    "text": "to take a special step in their browser and in some browsers you can't really like clear it it's not that easy um but",
    "start": "707639",
    "end": "715000"
  },
  {
    "text": "it says make sure that there's this special app cach in place to hold all of this stuff and so that sounds well all",
    "start": "715000",
    "end": "721160"
  },
  {
    "text": "well and fine that sounds actually really good for us because um we know that the browser will make sure that's available every time the user opens",
    "start": "721160",
    "end": "727639"
  },
  {
    "text": "their page the problem is the reason I don't use appcash is it's actually really really good at what it does it",
    "start": "727639",
    "end": "734399"
  },
  {
    "text": "persistently caches it so well that it's really hard to update resources so let's",
    "start": "734399",
    "end": "740279"
  },
  {
    "text": "say I have this list of resources and I change a line in my Javascript file most of us are probably familiar with the",
    "start": "740279",
    "end": "745519"
  },
  {
    "text": "shift reload Paradigm where we shift reload or even clear our cash and we make sure that we get that new version",
    "start": "745519",
    "end": "751120"
  },
  {
    "text": "of the JavaScript file not true with appcache you can change those files all day long on the server they're not going",
    "start": "751120",
    "end": "756320"
  },
  {
    "text": "to get ever redownloaded to the client there's only one way to force the browser to revalidate those resources",
    "start": "756320",
    "end": "763480"
  },
  {
    "text": "and that's to change the Manifest file well what if we don't want to change the Manifest file because we're not adding",
    "start": "763480",
    "end": "768839"
  },
  {
    "text": "files we're just changing the contents of files so it came along on on line two the kind of the best practice if you",
    "start": "768839",
    "end": "774720"
  },
  {
    "text": "will is to put a comment in there and change the comment because if you change the comment in that file that's enough",
    "start": "774720",
    "end": "779760"
  },
  {
    "text": "to let the browser know hey I should get the new contents of the file and therefore go and revalidate all those",
    "start": "779760",
    "end": "785440"
  },
  {
    "text": "resources so this would be something that you would hook up into your build step for instance you would write out",
    "start": "785440",
    "end": "790639"
  },
  {
    "text": "this file and You' write out a new version every time you built your application or something like that that's unfortunately um just a reality",
    "start": "790639",
    "end": "797720"
  },
  {
    "text": "of the way appcash works and you have to force that but there's even yet a further complication which is yet",
    "start": "797720",
    "end": "803399"
  },
  {
    "text": "another reason why I don't like appcache that much um the complication is this let's say that a user has your",
    "start": "803399",
    "end": "808720"
  },
  {
    "text": "application open and you change a file and maybe you even publish out some sort of update and you tell people hey go",
    "start": "808720",
    "end": "815160"
  },
  {
    "text": "ahead and refresh your page so that you can update it I've changed the Manifest file the browser's going to download it everything's going to be cool they",
    "start": "815160",
    "end": "821279"
  },
  {
    "text": "refresh it and they still have the old version of the file and you're like what the hell why would they still have the",
    "start": "821279",
    "end": "827240"
  },
  {
    "text": "old version of the file when I changed the Manifest file the reason is this the browser in the loading of the page it",
    "start": "827240",
    "end": "833000"
  },
  {
    "text": "will see that there's a new manifest file and and it will do its due diligence to go and request all those files in the background while the page",
    "start": "833000",
    "end": "839320"
  },
  {
    "text": "is loading but it says well I already have a good version of these files so I'm going to go ahead and serve the page with the old version of the files and in",
    "start": "839320",
    "end": "845680"
  },
  {
    "text": "the background load the new version of the files so you actually end up having to refresh the page twice to get a new",
    "start": "845680",
    "end": "851000"
  },
  {
    "text": "update to code and I don't know about you that do development in web applications but I don't like refreshing",
    "start": "851000",
    "end": "856279"
  },
  {
    "text": "once so I'm definitely not going to refresh twice that's why I don't have appcache hooked up while I'm developing this application um there are uh the",
    "start": "856279",
    "end": "863959"
  },
  {
    "text": "reason why we're covering this though is that there are ways to get around this a little bit they did give us a somewhat",
    "start": "863959",
    "end": "869120"
  },
  {
    "text": "of a helpful API but before we get to that the way you hook up a manifest file you st up on line to the HTML tag we set",
    "start": "869120",
    "end": "875199"
  },
  {
    "text": "a manifest attribute we give it a URL to our manifest that's all you have to do now the browser is in this special app",
    "start": "875199",
    "end": "881399"
  },
  {
    "text": "caching mode um so I don't I do not have that in mind if you go and do a view Source this will not be in mine yet but",
    "start": "881399",
    "end": "887279"
  },
  {
    "text": "that's how you would hook it up does give us a JavaScript API to help us get around this and what it does is",
    "start": "887279",
    "end": "893759"
  },
  {
    "text": "it allows in JavaScript for us to forcibly tell the browser go check and see if there's a new manif FS file",
    "start": "893759",
    "end": "899880"
  },
  {
    "text": "instead of waiting for a refresh we can actually do so with JavaScript so what we can do is we can say um let's see",
    "start": "899880",
    "end": "907600"
  },
  {
    "text": "it's line line 52 cache. update this tells the browser to proactively go and check",
    "start": "907600",
    "end": "914680"
  },
  {
    "text": "and see if there's a new version of the Manifest file and if so start downloading those resources as soon as it finishes downloading the new version",
    "start": "914680",
    "end": "921639"
  },
  {
    "text": "of those resources it will file the fire the event update ready and it'll let us know that those updates are there and",
    "start": "921639",
    "end": "928000"
  },
  {
    "text": "they're ready in memory so in this case what I'm doing is I'm saying I might hook this function up to run once every",
    "start": "928000",
    "end": "933120"
  },
  {
    "text": "30 minutes just to check to see if there are any updates into my application something like a Gmail for instance I",
    "start": "933120",
    "end": "939319"
  },
  {
    "text": "Mayan have that thing running just on a 30 second or I mean a 30 minute cycle in the background for people that leave the",
    "start": "939319",
    "end": "944399"
  },
  {
    "text": "application open for a long time but I don't want to refresh the page without them knowing because they may be doing",
    "start": "944399",
    "end": "949519"
  },
  {
    "text": "something and and lose the work so I just pop up a little confirm box that says hey there's an update available would you like me to be helpful and go",
    "start": "949519",
    "end": "955839"
  },
  {
    "text": "ahead and refresh the page yes or no um if you instead had you know an application button inside of your web",
    "start": "955839",
    "end": "961759"
  },
  {
    "text": "app that was a refresh button that allowed a user to proactively do that then you could um do away with the",
    "start": "961759",
    "end": "967680"
  },
  {
    "text": "confirm because they've already told you they want to refresh um but this is the API that we get we get one event and we",
    "start": "967680",
    "end": "973160"
  },
  {
    "text": "get this uh Cash Out update which fores this ends up giving us the behavior of getting a single refresh instead of",
    "start": "973160",
    "end": "979560"
  },
  {
    "text": "having to wait for two refreshes U but it's still kind of awkward still difficult to deal with so my recommendation use appcash once you're",
    "start": "979560",
    "end": "986000"
  },
  {
    "text": "fully production ready for an application don't use it before all right we'll jump into local storage",
    "start": "986000",
    "end": "992160"
  },
  {
    "text": "and session storage next uh local storage and session storage are the exact same API the only difference is",
    "start": "992160",
    "end": "999040"
  },
  {
    "text": "other than the name the only difference is how long the browser maintains or persists this data session storage",
    "start": "999040",
    "end": "1006040"
  },
  {
    "text": "unsurprisingly maintains that data only for the session and it defines that session in most cases based upon the",
    "start": "1006040",
    "end": "1012560"
  },
  {
    "text": "lifetime of the tab that the application is running in so as soon as you open up a new tab in a browser that's a new",
    "start": "1012560",
    "end": "1018319"
  },
  {
    "text": "session as and as you close a tab that session dies so you have um in the cookie world when we did cookies there",
    "start": "1018319",
    "end": "1024558"
  },
  {
    "text": "were this concept of session based cookies um browser session based cookies that would die once the browser session",
    "start": "1024559",
    "end": "1030798"
  },
  {
    "text": "died same concept the local this the session storage will be cleared out won't be available once you have ended a",
    "start": "1030799",
    "end": "1037760"
  },
  {
    "text": "tab session that does mean however that somebody can't share between multiple tabs so if they're logged in the same",
    "start": "1037760",
    "end": "1043918"
  },
  {
    "text": "application across multiple tabs those are different sessions and they're not going to be able to share that local",
    "start": "1043919",
    "end": "1049280"
  },
  {
    "text": "storage on the other hand is fully persistent storage both these apis give you five megabytes local storage um will",
    "start": "1049280",
    "end": "1055960"
  },
  {
    "text": "stick around forever so you actually probably want to do some sort of rudimentary expiration mechanism or at",
    "start": "1055960",
    "end": "1063000"
  },
  {
    "text": "least carefully manage your data so that you're not just filling up somebody's data so for instance if you had an app",
    "start": "1063000",
    "end": "1068320"
  },
  {
    "text": "that they used and and every couple months you changed your scheme and wrote out different key names if you don't",
    "start": "1068320",
    "end": "1073440"
  },
  {
    "text": "clean up after yourself you're going to end up just leaving a bunch of extra data in that person's uh local storage unless they're diligent about cleaning",
    "start": "1073440",
    "end": "1079679"
  },
  {
    "text": "that out so be careful about that um in this application I'm using them for very simple tasks for the session storage I'm",
    "start": "1079679",
    "end": "1086000"
  },
  {
    "text": "keeping track of the person's session that they've established with the game server so that when they refresh the",
    "start": "1086000",
    "end": "1092039"
  },
  {
    "text": "page um they don't have to relog in so that's basic I'm keeping track of",
    "start": "1092039",
    "end": "1097080"
  },
  {
    "text": "session storage that login session is lost if they close the tab or go to a different browser but at least across",
    "start": "1097080",
    "end": "1102799"
  },
  {
    "text": "refreshes it will keep them connected or be able to reestablish the socket connection right away local storage I'm",
    "start": "1102799",
    "end": "1108559"
  },
  {
    "text": "using for a very simple task to maintain the user's name and email address in the login form so they don't have to retype",
    "start": "1108559",
    "end": "1114799"
  },
  {
    "text": "it so as soon as you've typed that in it stores that in local storage and it'll keep that across sessions even though",
    "start": "1114799",
    "end": "1120039"
  },
  {
    "text": "you so when you come back and it says you have to log in you don't have to retype in that data so again very basic usages one caveat on local storage and",
    "start": "1120039",
    "end": "1128039"
  },
  {
    "text": "session storage API and this kind of the performance side of things because I'm also a performance geek um these are",
    "start": "1128039",
    "end": "1133640"
  },
  {
    "text": "synchronous apis and um for for those of you that don't understand the much the",
    "start": "1133640",
    "end": "1139000"
  },
  {
    "text": "difference between synchronous and asynchronous uh from a browser vendor perspective I used to work for Milla",
    "start": "1139000",
    "end": "1144360"
  },
  {
    "text": "before I worked at Zinga from a browser vendor perspective a synchronous API is the worst possible performance that we",
    "start": "1144360",
    "end": "1151080"
  },
  {
    "text": "can get so the browser vendors all sort of cringed when the people that designed these things came up with synchronous",
    "start": "1151080",
    "end": "1156880"
  },
  {
    "text": "apis it's nice and easy for us because we just call get item and it immediately returns us the item it's lots and lots",
    "start": "1156880",
    "end": "1162520"
  },
  {
    "text": "of pain for the browser vendors because they sometimes many of these browsers like Chrome for instance they have multiple processes and your storage may",
    "start": "1162520",
    "end": "1169559"
  },
  {
    "text": "not actually be in that process it may be interprocess and creating synchronous communication across those things is",
    "start": "1169559",
    "end": "1175039"
  },
  {
    "text": "horribly inefficient so the moral of the story is do not use local storage and session storage in performance sensitive",
    "start": "1175039",
    "end": "1182200"
  },
  {
    "text": "code for instance inside of a loop where you're throwing a whole bunch of stuff data into something because that will lag very quickly um you can like you",
    "start": "1182200",
    "end": "1189960"
  },
  {
    "text": "would never want to use that in something like a in an animation you know I don't know why you would do it but you'd never want to read or write",
    "start": "1189960",
    "end": "1195720"
  },
  {
    "text": "from a from local storage or session storage when you're doing something time sensitive like animation but in this",
    "start": "1195720",
    "end": "1200799"
  },
  {
    "text": "case we're just doing a single read and write per page refresh so it's not a big deal uh just keep that in mind the",
    "start": "1200799",
    "end": "1205919"
  },
  {
    "text": "synchronous API makes it easier for developers to deal with we don't have to have call back soup but it has the",
    "start": "1205919",
    "end": "1210960"
  },
  {
    "text": "negatives that unfortunately we have um this performance implication to",
    "start": "1210960",
    "end": "1216799"
  },
  {
    "text": "browsers um I think I've already covered this but we have local storage. set item to set in some user info we have get",
    "start": "1216799",
    "end": "1223440"
  },
  {
    "text": "item to get it out and remove item to delete it it's pretty straightforward it's going to be the same thing uh this",
    "start": "1223440",
    "end": "1228799"
  },
  {
    "text": "is what it looks like for you know it's remembered that my name and email address is there in the forum for me",
    "start": "1228799",
    "end": "1234480"
  },
  {
    "text": "tells me that I need to log in okay so next we're going to jump into the history API um history API means that we",
    "start": "1234480",
    "end": "1242039"
  },
  {
    "text": "have taken several big problems that we had with history Management in the browser and we fixed them across a",
    "start": "1242039",
    "end": "1248000"
  },
  {
    "text": "couple of different apis in the application and by fix them I mean we found all these problems that we've been dealing with for years like the hashbang",
    "start": "1248000",
    "end": "1254919"
  },
  {
    "text": "Ridiculousness and actually fixed it so that we could do the things we need to do do in an application so in a in a",
    "start": "1254919",
    "end": "1261200"
  },
  {
    "text": "basic sense the biggest problem that applications have faced is that we got into the Ajax era where we realized we",
    "start": "1261200",
    "end": "1268120"
  },
  {
    "text": "don't want to create a new page refresh every time there's new page content that's being asked for but when we did",
    "start": "1268120",
    "end": "1274440"
  },
  {
    "text": "that when we said hey we've got this uh you know this nice ability to Ajax some",
    "start": "1274440",
    "end": "1280000"
  },
  {
    "text": "data from the server and we don't have to page refresh but we do want the user to see the update in the address bar we",
    "start": "1280000",
    "end": "1285960"
  },
  {
    "text": "do want for them to have backward forward capability because that's useful and we do want them for them to be able",
    "start": "1285960",
    "end": "1291120"
  },
  {
    "text": "to bookmark a URL save that URL and come back to it later and we lose that when we have this whole Ajax concept so we",
    "start": "1291120",
    "end": "1296960"
  },
  {
    "text": "got this whole idea of storing the state of a page in the hash of that URL",
    "start": "1296960",
    "end": "1303240"
  },
  {
    "text": "because you can change the hash without causing a page refresh and this worked okay but it created lots of other bugs",
    "start": "1303240",
    "end": "1309360"
  },
  {
    "text": "and lots of other problems so HTML 5 came along and said let's fix these problems let's give the existing apis",
    "start": "1309360",
    "end": "1314919"
  },
  {
    "text": "the capability they need so that you're not having to do that kind of stuff anymore so so now when I Ajax um request",
    "start": "1314919",
    "end": "1321679"
  },
  {
    "text": "some data on the page in this particular game you click on a link to go to the login page for instance the address bar",
    "start": "1321679",
    "end": "1327720"
  },
  {
    "text": "updates to say login. HTML but we didn't do a page refresh to login. HTML we",
    "start": "1327720",
    "end": "1333240"
  },
  {
    "text": "simply went and requested that over Ajax using a normal jQuery ajax request for instance we got that content we replaced",
    "start": "1333240",
    "end": "1339919"
  },
  {
    "text": "the content in the page and then I told the browser to update the address bar and that's very simple to do this Ajax",
    "start": "1339919",
    "end": "1346799"
  },
  {
    "text": "link function is how I hijack all those links and you see the bottom line is on on line 30 I call go to page if this is",
    "start": "1346799",
    "end": "1353000"
  },
  {
    "text": "a link I want to hijack so goto page we have um here I'm asking if it's already",
    "start": "1353000",
    "end": "1359640"
  },
  {
    "text": "in sort of in my in page cache so I don't have to keep refreshing it I I kind of manage an in in page cache if",
    "start": "1359640",
    "end": "1365159"
  },
  {
    "text": "it's already there I use it otherwise I go ahead and request it using an Ajax request post injection is the function",
    "start": "1365159",
    "end": "1371320"
  },
  {
    "text": "that's going to call our history API so we'll look at post injection before we do that here's what",
    "start": "1371320",
    "end": "1377520"
  },
  {
    "text": "this looks like you can see that I've gone to the login page and I have an entry in my history so I can click back",
    "start": "1377520",
    "end": "1383279"
  },
  {
    "text": "and go back to the homepage from the login page I have an entry in the history I have the address bar updated",
    "start": "1383279",
    "end": "1388840"
  },
  {
    "text": "I've uh blurred out that address because I don't want you guys playing the game yet I want you to pay attention to I talk but we'll get to the game",
    "start": "1388840",
    "end": "1394960"
  },
  {
    "text": "later um but it has the entry in that history and it would work for both backward and forward history entry just",
    "start": "1394960",
    "end": "1400320"
  },
  {
    "text": "like we want here's post injection so post injection says okay we have we have",
    "start": "1400320",
    "end": "1406679"
  },
  {
    "text": "already updated our content now we just need to take care of the history management and you'll see on line 82 and",
    "start": "1406679",
    "end": "1413000"
  },
  {
    "text": "line 85 is where it does uses either replace state or push date now replace date means what it says whatever the",
    "start": "1413000",
    "end": "1420200"
  },
  {
    "text": "current address entry in the browser replace it with this new thing that I want here's the address URL that's the",
    "start": "1420200",
    "end": "1426279"
  },
  {
    "text": "third parameter to the call uh update the address bar and update the entry um",
    "start": "1426279",
    "end": "1431520"
  },
  {
    "text": "the existing entry to what I'm asking you is this new state so I use replace State when I am making the login page",
    "start": "1431520",
    "end": "1438279"
  },
  {
    "text": "what is called an interstitial when you navigate to the login page you can click backward and forward as soon as you have",
    "start": "1438279",
    "end": "1445039"
  },
  {
    "text": "logged in now I don't want login. HTML to be part of your backward forward history because there's no reason for",
    "start": "1445039",
    "end": "1450559"
  },
  {
    "text": "you to ever go back to that page so as soon as you're finished logging in I replace the next page refresh I replace",
    "start": "1450559",
    "end": "1457360"
  },
  {
    "text": "uh on top of login. HTML and you end up being able to go directly from the homepage to a logged in page so that's",
    "start": "1457360",
    "end": "1463520"
  },
  {
    "text": "what replace state is and push State unsurprisingly adds history state to it so history. push State and history.",
    "start": "1463520",
    "end": "1470039"
  },
  {
    "text": "repace State are actually calls to an API called history.js This is a shim for",
    "start": "1470039",
    "end": "1475399"
  },
  {
    "text": "browsers that don't have these new functions they implement it and they fake it in some in some other ways for you so I highly recommend using",
    "start": "1475399",
    "end": "1482200"
  },
  {
    "text": "history.js makes it totally stupid simple to use and um they give you but",
    "start": "1482200",
    "end": "1487320"
  },
  {
    "text": "these are underlying functions that You' be able to call in the native API if you felt so again here's what it looks like after",
    "start": "1487320",
    "end": "1493679"
  },
  {
    "text": "I've already logged in I only have two entries from we puzzle it into the in the forward backward because I've",
    "start": "1493679",
    "end": "1500080"
  },
  {
    "text": "replaced the login page with this",
    "start": "1500080",
    "end": "1504200"
  },
  {
    "text": "page the last thing that we need to do to deal with history API is that we need to be able to respond when that when",
    "start": "1505559",
    "end": "1512200"
  },
  {
    "text": "that URL changes outside of the control of our code what we just saw in the previous slides was when we are",
    "start": "1512200",
    "end": "1518880"
  },
  {
    "text": "specifically having the user we're responding to a user clicking something and navigating them to a page and we want to update it but what happens if",
    "start": "1518880",
    "end": "1525000"
  },
  {
    "text": "the user clicks the backward or forward button or the user pastes any a URL from a bookmark or something like that we",
    "start": "1525000",
    "end": "1530440"
  },
  {
    "text": "want to respond to that as well we simply listen for the event you can see on line 38 we listen for the event State",
    "start": "1530440",
    "end": "1536279"
  },
  {
    "text": "change and then we go ahead and do the underlying work so whichever one comes first the underlying page refresh",
    "start": "1536279",
    "end": "1542039"
  },
  {
    "text": "happens and then we update the history or the history changes and we update the page either way we can take care of it",
    "start": "1542039",
    "end": "1547919"
  },
  {
    "text": "and these are additions that have been added on to Native HTML 5 history handling and again history.js is a very",
    "start": "1547919",
    "end": "1554080"
  },
  {
    "text": "nice API to manage it next one of my most uh favorite",
    "start": "1554080",
    "end": "1559720"
  },
  {
    "text": "topics that we deal with websockets how many of you are familiar with what websockets means okay good a fair fair amount of",
    "start": "1559720",
    "end": "1566600"
  },
  {
    "text": "you I'd say like 60% of you great so uh I use a a library sort of a shim just",
    "start": "1566600",
    "end": "1572480"
  },
  {
    "text": "like history.js I use a library called socket.io it implements sockets both on the server as well as in the browser in",
    "start": "1572480",
    "end": "1579080"
  },
  {
    "text": "the browser it has several different fallbacks if the browser doesn't support sockets so it uses like an invisible",
    "start": "1579080",
    "end": "1584279"
  },
  {
    "text": "flash socket and several other um workarounds for sockets long pole Ajax and things like that and on the server",
    "start": "1584279",
    "end": "1589880"
  },
  {
    "text": "it implements the latest version of the socket protocol so it takes care of all the server things it's implemented",
    "start": "1589880",
    "end": "1595279"
  },
  {
    "text": "either in node.js they've got ports to Python and Java and C++ and other things like that so whatever your back end is",
    "start": "1595279",
    "end": "1601679"
  },
  {
    "text": "there's a good chance you can probably get a port of saga Dio but it gives you the exact same API for listening and",
    "start": "1601679",
    "end": "1608520"
  },
  {
    "text": "subscribing to events and emitting events that's all this is is a two-way communication between your browser and",
    "start": "1608520",
    "end": "1613720"
  },
  {
    "text": "your server to send events back and forth instead of a one-way Channel we have a full duplex two-way Channel we",
    "start": "1613720",
    "end": "1619600"
  },
  {
    "text": "listen to events and we send events and they can be any events we want custom name events so you see here I'm knitting",
    "start": "1619600",
    "end": "1625240"
  },
  {
    "text": "a session uh on line 8:25 uh I'm listening for the disconnect event on line 818 or 819 whatever that is that's",
    "start": "1625240",
    "end": "1633159"
  },
  {
    "text": "the line where I'm connecting it's very simple then I I start listening for events with socket. on and then we see",
    "start": "1633159",
    "end": "1639760"
  },
  {
    "text": "um socket. Amit on line 868 socket. is how we send an event so this is happening in the browser this is how we",
    "start": "1639760",
    "end": "1645760"
  },
  {
    "text": "listen for events from the server you can see I just have you know custom names for these events there's nothing special going on um and I can send Json",
    "start": "1645760",
    "end": "1653039"
  },
  {
    "text": "data back and forth between the server and the browser it's fully asynchronous and and and very performant it's it's",
    "start": "1653039",
    "end": "1659080"
  },
  {
    "text": "actually surprisingly performant if you play this game on a good you know internet connection you'll see it's",
    "start": "1659080",
    "end": "1664240"
  },
  {
    "text": "unbelievable to think that literally thousands of messages a second are traveling back and forth between the server and the browser and you don't see",
    "start": "1664240",
    "end": "1670240"
  },
  {
    "text": "any lag at all so um so here I'm emitting a a a suck event to say I want",
    "start": "1670240",
    "end": "1675919"
  },
  {
    "text": "to actually I want to ask the server to validate my session and I'm going to listen for some responses like new session or",
    "start": "1675919",
    "end": "1683000"
  },
  {
    "text": "whatever um again if if when we do socket Doon that's adding an event Lister you're probably also familiar",
    "start": "1683000",
    "end": "1689039"
  },
  {
    "text": "with removing event listeners so you can clean up after yourselves and it's socket. remove listeners it's a very simple API if you have ever done any",
    "start": "1689039",
    "end": "1695960"
  },
  {
    "text": "kind of event oriented programming in JavaScript which most of you probably have responding to click events it works",
    "start": "1695960",
    "end": "1701440"
  },
  {
    "text": "exactly the same way you don't even have to think about it it's just very simple this is on the server and you'll notice",
    "start": "1701440",
    "end": "1707880"
  },
  {
    "text": "that the this code looks a lot the same of course I'm using JavaScript and nodejs which is nice but this code the API looks a lot the same so I have",
    "start": "1707880",
    "end": "1714600"
  },
  {
    "text": "socket. on socket. AIT just like I have in my JavaScript code this actually allows you if you had the opportunity",
    "start": "1714600",
    "end": "1720679"
  },
  {
    "text": "and you know and you could work the code the right way you literally could use the same code in both",
    "start": "1720679",
    "end": "1726120"
  },
  {
    "text": "places again some more socket. iion I've got uh line 362 for instance there's some fancy stuff that's supported only",
    "start": "1726159",
    "end": "1732640"
  },
  {
    "text": "on the server I'm listening to a channel called site so I have two different channels of my socket connections CH",
    "start": "1732640",
    "end": "1739080"
  },
  {
    "text": "actually that's a name space called site and then in game and game ID on that line is a channel so that's a way to",
    "start": "1739080",
    "end": "1745919"
  },
  {
    "text": "partition out your messages so if you broadcast a message it doesn't have to go to everybody it can go only to the",
    "start": "1745919",
    "end": "1751559"
  },
  {
    "text": "people in a particular game or only the people in a game in a particular state so it gives you the flexibility to",
    "start": "1751559",
    "end": "1757640"
  },
  {
    "text": "partition out your messages from the server there there questions yeah asking about",
    "start": "1757640",
    "end": "1763799"
  },
  {
    "text": "the uhhuh that no so the of is for name spacing and in",
    "start": "1763799",
    "end": "1772000"
  },
  {
    "text": "is for channeling um and there's not really for the for the purposes of most discussions not really that big of a",
    "start": "1772000",
    "end": "1778760"
  },
  {
    "text": "difference in my particular case I have two main socket connections that each browser makes one is for the site",
    "start": "1778760",
    "end": "1785399"
  },
  {
    "text": "management like your login session and all that stuff and another one is when you are in a game it's managing all the",
    "start": "1785399",
    "end": "1790519"
  },
  {
    "text": "communication the dragging of pieces and all that stuff so I established two socket connections and I have them",
    "start": "1790519",
    "end": "1795840"
  },
  {
    "text": "namespaced as/ site and /ww and then I have channels for each",
    "start": "1795840",
    "end": "1801720"
  },
  {
    "text": "one of my games so I can further partition the data okay on to web workers um I have to",
    "start": "1801720",
    "end": "1810760"
  },
  {
    "text": "admit that before I got into this project I felt like web workers was probably one of the most like academic",
    "start": "1810760",
    "end": "1816200"
  },
  {
    "text": "apis yeah it sounds cool on paper but will I ever find a real use for something like web workers and the truth",
    "start": "1816200",
    "end": "1822720"
  },
  {
    "text": "is that it's actually really useful and really cool and the nice part is it looks a whole lot like working with web",
    "start": "1822720",
    "end": "1828200"
  },
  {
    "text": "sockets you are remoting a message to another thread just like you're remoting a message to a server from the browser",
    "start": "1828200",
    "end": "1834679"
  },
  {
    "text": "it looks the same way you're sending messages back and forth asynchronously um so again no mental context shift at",
    "start": "1834679",
    "end": "1840640"
  },
  {
    "text": "all it slightly different API but no mental context shift at all it's the same idea here we create a game worker",
    "start": "1840640",
    "end": "1846840"
  },
  {
    "text": "on line 294 we give it a URL for a separate Javascript file it will load up",
    "start": "1846840",
    "end": "1852200"
  },
  {
    "text": "that separate Javascript file into a separate thread of execution why is this important well some some of you may be",
    "start": "1852200",
    "end": "1858440"
  },
  {
    "text": "aware and this is another one of those performance things some of you may be aware that um when you have a browser",
    "start": "1858440",
    "end": "1864440"
  },
  {
    "text": "that has has rendered a page and you make some change on the page like you move an element or change a style or css",
    "start": "1864440",
    "end": "1870639"
  },
  {
    "text": "browser has to do re-rendering of that page it has to recalculate the position recalculate all the rendering and",
    "start": "1870639",
    "end": "1875919"
  },
  {
    "text": "repaint that page all of that stuff happens on your main browser session or your main browser thread um JavaScript",
    "start": "1875919",
    "end": "1883240"
  },
  {
    "text": "shares that same thread which means if you have a long running algorithm you're going to cause slowdowns of that repaint",
    "start": "1883240",
    "end": "1890360"
  },
  {
    "text": "even things like garbage collection inside of your main JavaScript can slow down the repaint so you've probably been",
    "start": "1890360",
    "end": "1895559"
  },
  {
    "text": "to pages and you've seen what should be a nice smooth animation but it starts becoming laggy and jaggy because of that",
    "start": "1895559",
    "end": "1902399"
  },
  {
    "text": "exact problem that you're sharing this thread and it simply can't do enough especially on low power mobile devices it just simply can't do enough well we",
    "start": "1902399",
    "end": "1909240"
  },
  {
    "text": "have this solution we can run a long running JavaScript or an intensive processing JavaScript in an entirely",
    "start": "1909240",
    "end": "1914600"
  },
  {
    "text": "different thread and it will not affect the rendering thread of the browser at all so we can get back to that more ideal",
    "start": "1914600",
    "end": "1921039"
  },
  {
    "text": "place where the browser is able to repaint itself in a much smoother fashion and we can have long running or more complex JavaScript happening",
    "start": "1921039",
    "end": "1927000"
  },
  {
    "text": "elsewhere so for the purposes of my game what I wanted was to have this other sandbox where code was harder for people",
    "start": "1927000",
    "end": "1933559"
  },
  {
    "text": "to kind of muck around with because it really is a fully closed off thing they can't change the prototypes in there and",
    "start": "1933559",
    "end": "1940159"
  },
  {
    "text": "and muck with your code inside of a web worker like you can um in the browser Dom and also it has the the the",
    "start": "1940159",
    "end": "1946240"
  },
  {
    "text": "performance nicity that any any intensity of communication between the browser and server all the messages of",
    "start": "1946240",
    "end": "1952159"
  },
  {
    "text": "updating pieces and stuff I can buffer all that stuff inside of the web worker and send those messages over to the",
    "start": "1952159",
    "end": "1957720"
  },
  {
    "text": "browser rendering thread and hopefully have a lot less slowdown in the browser thread so for a real-time game web",
    "start": "1957720",
    "end": "1963639"
  },
  {
    "text": "workers actually have a lot of really cool potential so um game worker is what I",
    "start": "1963639",
    "end": "1969799"
  },
  {
    "text": "create my game worker I have on message that listens for messages from the worker and then um down here I want to",
    "start": "1969799",
    "end": "1977080"
  },
  {
    "text": "send a message so I do gamew worker. poost message pretty straightforward yeah um I think we're almost done with",
    "start": "1977080",
    "end": "1984039"
  },
  {
    "text": "the web worker stuff I wanted to show you this is what it looks like inside of that ww. JS this is what a web worker",
    "start": "1984039",
    "end": "1991000"
  },
  {
    "text": "code look looks like we have only a couple of things that look different from normal JavaScript we have an import scripts function that's how we can",
    "start": "1991000",
    "end": "1997519"
  },
  {
    "text": "synchronously import other scripts so here you can see I'm loading up the socket iio library inside of um inside",
    "start": "1997519",
    "end": "2003440"
  },
  {
    "text": "of our web worker and then I you know normal stuff variable DEC ation and function",
    "start": "2003440",
    "end": "2009159"
  },
  {
    "text": "declarations the only difference here is if I want to listen for messages from the server I do self. on message to",
    "start": "2009159",
    "end": "2014679"
  },
  {
    "text": "listen for message not from the server from the browser thread and then I can do self. emit to send messages back",
    "start": "2014679",
    "end": "2021360"
  },
  {
    "text": "pretty straightforward it looks the same in both places last thing I wanted to show um",
    "start": "2021360",
    "end": "2026480"
  },
  {
    "text": "was that we have um so some browsers do not have web workers and there's not really a way to shim the missing web",
    "start": "2026480",
    "end": "2034360"
  },
  {
    "text": "worker so that you get full parallel threads you can't create threads where the browser doesn't let you create",
    "start": "2034360",
    "end": "2040440"
  },
  {
    "text": "threads but you can create an API that looks exactly the same and you can take advantage of the fact that you don't",
    "start": "2040440",
    "end": "2045880"
  },
  {
    "text": "have to have totally different code so that's what I did here is I wrote a simple little shim gives me the post message and on message behavior for a",
    "start": "2045880",
    "end": "2052040"
  },
  {
    "text": "browser that doesn't have a web worker still going to my code's going to function the same just going to be slightly less performant because we're",
    "start": "2052040",
    "end": "2057280"
  },
  {
    "text": "not taking advantage of having that separate thread there are better shims than the one that I wrote in this",
    "start": "2057280",
    "end": "2062358"
  },
  {
    "text": "project that are much more full and complete I just wrote a very very simple strip down one um for for managing the",
    "start": "2062359",
    "end": "2068480"
  },
  {
    "text": "code but this is the shim for dealing with web workers I would encourage you to search on GitHub you'll find better",
    "start": "2068480",
    "end": "2074200"
  },
  {
    "text": "ones than the one I wrote last apaa that we're going to talk about is local file access this is actually one of the more",
    "start": "2074200",
    "end": "2079240"
  },
  {
    "text": "exciting ones as well um for years and years we had the ability in an input type uh you know a file selector we",
    "start": "2079240",
    "end": "2085118"
  },
  {
    "text": "could select a file reference and we could attach it to a form and upload it on the form but we in the JavaScript",
    "start": "2085119",
    "end": "2090878"
  },
  {
    "text": "world had absolutely no control or readability into the data that was getting sent so we'd have to do these",
    "start": "2090879",
    "end": "2096440"
  },
  {
    "text": "stupid things like up flad a file to the server and then tell the server you know to to send it right back down to the",
    "start": "2096440",
    "end": "2101960"
  },
  {
    "text": "browser or things like that so um this is a terrible problem that we just dealt",
    "start": "2101960",
    "end": "2107119"
  },
  {
    "text": "with for years and years and it's mostly because of the security concerns that they had they didn't deal with that",
    "start": "2107119",
    "end": "2112800"
  },
  {
    "text": "security in a smart way so they just said simply don't give them any access at all to somebody's local file system",
    "start": "2112800",
    "end": "2118200"
  },
  {
    "text": "thankfully HTML 5 came along and said no not any longer we got to give them access to the file contents you do still",
    "start": "2118200",
    "end": "2123880"
  },
  {
    "text": "have to have a user initiated action so it does still have the same security protections that it otherwise would the",
    "start": "2123880",
    "end": "2129960"
  },
  {
    "text": "user has to pop open a file input box or they literally have to drag a file from their desktop onto the browser to",
    "start": "2129960",
    "end": "2136800"
  },
  {
    "text": "initiate a file selection event in the browser but once a file selection event",
    "start": "2136800",
    "end": "2142079"
  },
  {
    "text": "has been initiated by a user then your JavaScript is capable of grabbing a reference to that file and reading its",
    "start": "2142079",
    "end": "2148480"
  },
  {
    "text": "contents and reading its properties so what we use this for obviously is when you're uploading an image in this game",
    "start": "2148480",
    "end": "2154520"
  },
  {
    "text": "it shows you the image right away and it does that overlay of the grid and stuff like that nothing has been sent to the server at that point we're manipulating",
    "start": "2154520",
    "end": "2161119"
  },
  {
    "text": "that image using canvas that way I don't have to actually go you can do that image manipulation on the server but I",
    "start": "2161119",
    "end": "2166960"
  },
  {
    "text": "didn't want to go to the trouble to do that if I've got the browser and I've got canvas and all that let's do it all inside of the browser manage all that",
    "start": "2166960",
    "end": "2172960"
  },
  {
    "text": "data and then once we're fully done processing it we'll send it to the server so here we see I've got a a",
    "start": "2172960",
    "end": "2179200"
  },
  {
    "text": "reference to my file selector and I'm listening for the change event as soon as the change event fires I have an",
    "start": "2179200",
    "end": "2185800"
  },
  {
    "text": "array of files that were selected in this case I'm only GNA let I'm only going to pay attention to the first file",
    "start": "2185800",
    "end": "2190960"
  },
  {
    "text": "you can't select multiple files but theoretically you could have an array of files to process uh so I grab the first",
    "start": "2190960",
    "end": "2197119"
  },
  {
    "text": "file and I immediately start doing something cool I look at its image type I mean I look at its file type its MIM",
    "start": "2197119",
    "end": "2202480"
  },
  {
    "text": "type and I make sure that it's an image that has the word image in its MIM type so that you're not uploading you know malicious Word document macros or",
    "start": "2202480",
    "end": "2209000"
  },
  {
    "text": "something like that so I check to make sure it's got the right type then uh online uh 717 I check to make sure that",
    "start": "2209000",
    "end": "2215520"
  },
  {
    "text": "it's got the right file size so it's not too big I don't want you to you know upload a 16 megabyte file and crash my",
    "start": "2215520",
    "end": "2220720"
  },
  {
    "text": "server or something so checking for Max file size so I'm I'm getting access to these properties right away on this file",
    "start": "2220720",
    "end": "2226359"
  },
  {
    "text": "reference that I never had access to before and this is pretty awesome then on line 721 I call read file um that's",
    "start": "2226359",
    "end": "2233880"
  },
  {
    "text": "another function that I wrote which we'll see here in just a moment but I'm essentially saying at this point I've checked that the file is the right type",
    "start": "2233880",
    "end": "2239359"
  },
  {
    "text": "I've checked that it's the right size let's go ahead and read its local file contents and we're going to paint that directly into an image element and then",
    "start": "2239359",
    "end": "2245680"
  },
  {
    "text": "use our canvas to mess around with it so read file very straightforwardly they're on line 477 at the top we create",
    "start": "2245680",
    "end": "2253359"
  },
  {
    "text": "a new API called file reader this a nice little API we get the opportunity to provide it a file reference and ask it",
    "start": "2253359",
    "end": "2259960"
  },
  {
    "text": "to read it it's an asynchronous thing obviously we ask it to read that file we listen we have an onload listener that",
    "start": "2259960",
    "end": "2265960"
  },
  {
    "text": "listens for when that finishes and once we get the contents from it then I'm going to call render preview so it's",
    "start": "2265960",
    "end": "2271920"
  },
  {
    "text": "very straightforward I simply say read and then on line 493 read as data URL there's read as binary type or blob or",
    "start": "2271920",
    "end": "2278760"
  },
  {
    "text": "something like that there a couple different reads in this case I would like to have a dating URL because I can stuff stuff that right into the source",
    "start": "2278760",
    "end": "2284280"
  },
  {
    "text": "attribute of an image element so read is a dating URL this is what it looks like I click",
    "start": "2284280",
    "end": "2290880"
  },
  {
    "text": "the choose file it pops up the file open box and goes for it so that's uh the apis that we're",
    "start": "2290880",
    "end": "2298160"
  },
  {
    "text": "going to look at tonight This Server um I'm going to go ahead and switch over and start up the game server if any of",
    "start": "2298160",
    "end": "2303599"
  },
  {
    "text": "you have managed to figure out how to get access to the game in just a moment hp. gefy um is where that'll take you to",
    "start": "2303599",
    "end": "2310839"
  },
  {
    "text": "the game we'll be able to play it so we'll see if we have any luck in actually showing off live demo",
    "start": "2310839",
    "end": "2316560"
  },
  {
    "text": "here all right so I'm connected to this game I'm going to go and click log in we've already seen this before now I'm",
    "start": "2316560",
    "end": "2323000"
  },
  {
    "text": "connected onto the page all that's happening without refreshing the page at all make your own puzzle um for those of",
    "start": "2323000",
    "end": "2329960"
  },
  {
    "text": "you who are trying this out maybe you don't have images on your computer I've got uh a set of sample images that you can just grab and try to play with um to",
    "start": "2329960",
    "end": "2337440"
  },
  {
    "text": "upload I've already checked those out but we'll just grab one of these files let's see uh this is one of my favorite ones some",
    "start": "2337440",
    "end": "2344480"
  },
  {
    "text": "of you guys may know Ryan doll we've got an image of him so that's not really refreshing very",
    "start": "2344480",
    "end": "2352000"
  },
  {
    "text": "well let me refresh this let's pick a different one see if",
    "start": "2352000",
    "end": "2357160"
  },
  {
    "text": "that work renders it better okay we got a crowd here I've got a difficulty selector so it's going to it's not",
    "start": "2357160",
    "end": "2363480"
  },
  {
    "text": "really drawing these lines very well let me close this browser and Chrome's sometimes funny about getting into weird",
    "start": "2363480",
    "end": "2370400"
  },
  {
    "text": "memory",
    "start": "2370400",
    "end": "2372799"
  },
  {
    "text": "State oh look it remembered my login information that's cool",
    "start": "2382680",
    "end": "2388720"
  },
  {
    "text": "used oh there we go that's a little bit better so you see it's drawing those GP lines on top of Ryan if I select it as",
    "start": "2393119",
    "end": "2400240"
  },
  {
    "text": "you know medium difficulty it's going to draw smaller tiles and hard difficulty let's go ahead and try one of these hard",
    "start": "2400240",
    "end": "2406160"
  },
  {
    "text": "ones we'll create the puzzle so it's already sliced all that image side sent all that image data up to the server",
    "start": "2406160",
    "end": "2412400"
  },
  {
    "text": "created files and reloaded it and that was pretty darn quick so now we have all these tile images and let's see if I can",
    "start": "2412400",
    "end": "2418880"
  },
  {
    "text": "figure out like uh let's drag this to here maybe yep I got that one correct so",
    "start": "2418880",
    "end": "2424440"
  },
  {
    "text": "if any of you guys can actually yep see so you can see that other people are playing the game and you can see where",
    "start": "2424440",
    "end": "2429800"
  },
  {
    "text": "people are dragging images around so this can actually get kind of fun so all that's happening right here my browser's",
    "start": "2429800",
    "end": "2435800"
  },
  {
    "text": "connected on a socket your browser's connected on a socket and every time you move I'm sending those XY coordinates",
    "start": "2435800",
    "end": "2441480"
  },
  {
    "text": "down to the server and then broadcasting that as to all connected that's how we're getting hundreds thousands of these messages getting sent out and",
    "start": "2441480",
    "end": "2447839"
  },
  {
    "text": "you're able to see that without too much lag we're seeing uh the dragging of all those images so this you can see how",
    "start": "2447839",
    "end": "2454040"
  },
  {
    "text": "that can get kind of fun in terms of your collaborative gameplay and so forth and see we see the uh Liz is doing",
    "start": "2454040",
    "end": "2459880"
  },
  {
    "text": "really well scoring lots of points already so we can take a look and see if anybody's creating we can create some",
    "start": "2459880",
    "end": "2465280"
  },
  {
    "text": "more puzzles here for people to play with let's try uh let's try creepy",
    "start": "2465280",
    "end": "2472280"
  },
  {
    "text": "clown create that one let's try another",
    "start": "2475400",
    "end": "2482200"
  },
  {
    "text": "one bird is actually really pretty picture just stole all of these off of Google Images so I apologize to the",
    "start": "2485000",
    "end": "2491680"
  },
  {
    "text": "author of these images but I'm not making money off of it so so there you go I am hugely grateful",
    "start": "2491680",
    "end": "2499800"
  },
  {
    "text": "for the opportunity to come and do this and I hope that what you get out of this more than anything is not my specific code but I hope you're inspired that",
    "start": "2499800",
    "end": "2506560"
  },
  {
    "text": "there's a lot of really cool stuff and it is actually practical to weave this stuff into something useful in real",
    "start": "2506560",
    "end": "2511920"
  },
  {
    "text": "world and it's not just a game there's ways to weave these apis together and make real and useful stuff this is not",
    "start": "2511920",
    "end": "2517280"
  },
  {
    "text": "not just the stuff of academics it's not just the stuff of books although please go buy my book um but take the stuff",
    "start": "2517280",
    "end": "2524160"
  },
  {
    "text": "from that book and go build cool stuff like this and I hope you're inspired by that and thanks for the opportunity",
    "start": "2524160",
    "end": "2531200"
  },
  {
    "text": "[Music] [Applause]",
    "start": "2531300",
    "end": "2534960"
  }
]