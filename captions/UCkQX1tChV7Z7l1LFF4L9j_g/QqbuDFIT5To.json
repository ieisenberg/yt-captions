[
  {
    "start": "0",
    "end": "227000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "25519"
  },
  {
    "text": "so um my name is Arun Gupta I as Sasha said and I was working with some",
    "start": "25519",
    "end": "30640"
  },
  {
    "text": "now with Oracle for about 14 years so um I was part of the team that started the",
    "start": "30640",
    "end": "36559"
  },
  {
    "text": "j2e that time it used to be called j2e uh the very first release that we did was in December of 99 so since then I",
    "start": "36559",
    "end": "44520"
  },
  {
    "text": "know I mean the very first Alpha release we released in March of 99 April of 99",
    "start": "44520",
    "end": "50239"
  },
  {
    "text": "since then I've been with the team in different roles and capacities you know in past six years or so I've been doing",
    "start": "50239",
    "end": "56440"
  },
  {
    "text": "primarily technology advocacy um means different things to different people I'm",
    "start": "56440",
    "end": "62399"
  },
  {
    "text": "primarily more on the side of Technology I'm no selling I'm don't get any commission for selling my product even",
    "start": "62399",
    "end": "69080"
  },
  {
    "text": "though I have a product I'm more about technology so um I learn the technology",
    "start": "69080",
    "end": "74280"
  },
  {
    "text": "by holding it by the gut you know I've authored a book on Java E6 um I blog",
    "start": "74280",
    "end": "79600"
  },
  {
    "text": "pretty excessively this is my blog URL and I I'll share the slides on my blog as well um I got about 1350 blogs over",
    "start": "79600",
    "end": "87479"
  },
  {
    "text": "past 6 and a half years so tons of technical content on my blog with that so the way I'm going to structure The",
    "start": "87479",
    "end": "94240"
  },
  {
    "text": "Talk today given that I have about hour and a half or so well 1 hour 25 minutes",
    "start": "94240",
    "end": "99600"
  },
  {
    "text": "so I'll cover a broader overview of the platform of java E7 in the first 20 25",
    "start": "99600",
    "end": "105719"
  },
  {
    "text": "minutes and the last one hour I will keep it for the websocket API which is a brand new API that is getting added to",
    "start": "105719",
    "end": "112280"
  },
  {
    "text": "the platform so we'll talk about what that API going to offer how many folks are familiar with websocket Concepts",
    "start": "112280",
    "end": "120439"
  },
  {
    "text": "okay yeah that's about the number I expected so what I'll do is first 25 minutes about Java E7 overview and I'll",
    "start": "120439",
    "end": "127320"
  },
  {
    "text": "quickly run through some of the slides I'll not go through as I originally planned so you'll see me skipping some",
    "start": "127320",
    "end": "132440"
  },
  {
    "text": "slides then in the next hour or so I'll give I'll split that between giving websocket primer and talking about the",
    "start": "132440",
    "end": "139760"
  },
  {
    "text": "websocket API that is coming as part of jsr 356 how many of you don't know what",
    "start": "139760",
    "end": "144800"
  },
  {
    "text": "a jsr is okay very few of you well jsr is Java",
    "start": "144800",
    "end": "150519"
  },
  {
    "text": "specification request that's the way we create brand new standards in the Java land um and each jsr is given a unique",
    "start": "150519",
    "end": "157360"
  },
  {
    "text": "number jsr 356 being the API The Way We Were defining websocket API in the Java",
    "start": "157360",
    "end": "163280"
  },
  {
    "text": "e platform all right let's get started one thing that Oracle makes us",
    "start": "163280",
    "end": "169640"
  },
  {
    "text": "do to put this legal slide in all our technical presentations simply ignore it",
    "start": "169640",
    "end": "175599"
  },
  {
    "text": "just ignore it all it means is the dates here are only indicative they're not",
    "start": "175599",
    "end": "180760"
  },
  {
    "text": "definitive you know you can't sue Oracle or me for seeing the",
    "start": "180760",
    "end": "185840"
  },
  {
    "text": "dates anyway so Java E6 the platform itself know which is the latest version",
    "start": "185879",
    "end": "191040"
  },
  {
    "text": "of the platform that is in production was released over 3 years ago uh tons of",
    "start": "191040",
    "end": "196080"
  },
  {
    "text": "features in there um but before we get into the features itself you know there are tons of vendors that have Java E6",
    "start": "196080",
    "end": "202760"
  },
  {
    "text": "compliant application servers um you can see pretty much all the names that are in the Java e landan they have a",
    "start": "202760",
    "end": "209400"
  },
  {
    "text": "compliance application server so open source offerings commercial offerings all sorts of plays are in there in the",
    "start": "209400",
    "end": "215599"
  },
  {
    "text": "game so you can have you can build your application to Java e and deploy them on",
    "start": "215599",
    "end": "220879"
  },
  {
    "text": "a Java e compliance server there's plenty and plenty of choice that is available in the market today",
    "start": "220879",
    "end": "226840"
  },
  {
    "text": "okay in terms of the features I won't dig deeper into it but there are lots of improvements that were made in the Java",
    "start": "226840",
    "end": "233040"
  },
  {
    "text": "E6 programming model we actually did a Java E6 Hands-On Workshop in the San Francisco Java Meetup I think about",
    "start": "233040",
    "end": "239879"
  },
  {
    "text": "couple of years ago yeah we did a Hands-On workshop for two consecutive days there were three and a half hour",
    "start": "239879",
    "end": "245159"
  },
  {
    "text": "long sessions so about 7 hour of Hands-On workshop and we can come back again you know when Java E7 is released",
    "start": "245159",
    "end": "251680"
  },
  {
    "text": "which is uh Q2 of this year we'll come back with the Java E7 Hands-On Workshop giving you a lot more Taste of what's",
    "start": "251680",
    "end": "257400"
  },
  {
    "text": "coming in the platform lots of features in Java E6 in general uh simplified ejb deployment you",
    "start": "257400",
    "end": "264320"
  },
  {
    "start": "259000",
    "end": "361000"
  },
  {
    "text": "know the typically when you say ejb people just push back oh no no no this is bulky heavy weight single class no",
    "start": "264320",
    "end": "271160"
  },
  {
    "text": "deployment descriptor packaging in war file that's how we Define egb just just a poo just annotation on it that's about",
    "start": "271160",
    "end": "278039"
  },
  {
    "text": "it that's what egb gives you um standards based type safe dependency",
    "start": "278039",
    "end": "283520"
  },
  {
    "text": "injection in the platform that is CDI or jsr 299 that gives you full dependency",
    "start": "283520",
    "end": "289759"
  },
  {
    "text": "injection which is type safe not string based unlike other proprietary Frameworks uh huge improvements in the",
    "start": "289759",
    "end": "295800"
  },
  {
    "text": "Java server faces platform itself which allows you to use faceless as the",
    "start": "295800",
    "end": "300960"
  },
  {
    "text": "templating language um let's see what else um several other improvements in",
    "start": "300960",
    "end": "307000"
  },
  {
    "text": "ejb again I won't get into those but you know this is sort of my top 10 list um",
    "start": "307000",
    "end": "312919"
  },
  {
    "text": "um what else uh web profile you know we talk about Java e being heavyweight so",
    "start": "312919",
    "end": "318280"
  },
  {
    "text": "we we Define something called as Java e web profile which is a lightweight um",
    "start": "318280",
    "end": "323919"
  },
  {
    "text": "version of java e and so glassfish which is a reference implementation of java e",
    "start": "323919",
    "end": "330319"
  },
  {
    "text": "comes in two flavors there's a web profile download and there's a full platform download the web profile",
    "start": "330319",
    "end": "335479"
  },
  {
    "text": "download is 30 megabytes in those 30 megabytes you get a subset of the",
    "start": "335479",
    "end": "340840"
  },
  {
    "text": "specification of the platform with which you can write a modern web application so you all the components like you know",
    "start": "340840",
    "end": "347199"
  },
  {
    "text": "seress EB jpa all those components you know typical your database middle tier",
    "start": "347199",
    "end": "352600"
  },
  {
    "text": "transactions web services all those components are part of that 30 megab download tested and supported for You by",
    "start": "352600",
    "end": "360319"
  },
  {
    "text": "all of these vendors now with Java E7 the earlier",
    "start": "360319",
    "end": "367360"
  },
  {
    "text": "path that we took was oh we're going to have we're going to provide a standards based PA platform that means you would",
    "start": "367360",
    "end": "373240"
  },
  {
    "text": "be able to write a application using Java E7 apis and then you can deploy it",
    "start": "373240",
    "end": "378360"
  },
  {
    "text": "on any Java E7 compliant container that would run in the cloud so kind of providing true Cloud portability using",
    "start": "378360",
    "end": "385919"
  },
  {
    "text": "Java e but then we realize you know after talking to our customers Partners vendors that is too early there's still",
    "start": "385919",
    "end": "392199"
  },
  {
    "text": "a lot of standardization that needs to happen in the cloud World essentially more importantly Innovation that needs",
    "start": "392199",
    "end": "398000"
  },
  {
    "text": "to happen in the cloud world so we kind of pull back from that based upon the feedback from the community and we said",
    "start": "398000",
    "end": "404199"
  },
  {
    "text": "okay you know what the focus of java E7 is going to be productivity and HTML 5",
    "start": "404199",
    "end": "409599"
  },
  {
    "text": "and how are we going to give you those well in terms of HTML 5 you know we're providing a standard API to do",
    "start": "409599",
    "end": "415560"
  },
  {
    "text": "websockets uh Jon API you know HTML 5 data attributes we're going to support",
    "start": "415560",
    "end": "420759"
  },
  {
    "text": "those in terms of productivity uh jsrs like JMS have been going through major",
    "start": "420759",
    "end": "426080"
  },
  {
    "text": "overhaul allowing you to write very simplified code and if time permitted I may be able to show you a small sample",
    "start": "426080",
    "end": "431720"
  },
  {
    "text": "of that so it shows exactly how 18 lines of code just to send a message could be",
    "start": "431720",
    "end": "437479"
  },
  {
    "text": "easily crunched to just single line of code basically leveraging you know dependency injection and the language",
    "start": "437479",
    "end": "443319"
  },
  {
    "text": "features that are already available in the platform HTML you also supporting",
    "start": "443319",
    "end": "451479"
  },
  {
    "text": "CSS there is no support that is really required to be done as okay the question is when you say HTML5 are you supporting",
    "start": "451479",
    "end": "458720"
  },
  {
    "text": "css3 as well there is no additional that needs to be done from the platform for css3 support that comes as part of the",
    "start": "458720",
    "end": "465639"
  },
  {
    "text": "know browser itself there's nothing that needs to be done in the platform per se um but",
    "start": "465639",
    "end": "471039"
  },
  {
    "text": "um when I go back here when I say HTML 5 forms what it means is mapping those",
    "start": "471039",
    "end": "477039"
  },
  {
    "text": "HTML 5 forms natively to ajs F2 form and kind of defining a correlation between",
    "start": "477039",
    "end": "482199"
  },
  {
    "text": "those two thank now this is what we call as a",
    "start": "482199",
    "end": "487520"
  },
  {
    "text": "pancake diagram for Java E7 now you um there are different ways you can interpret it but the basic idea is um",
    "start": "487520",
    "end": "494280"
  },
  {
    "text": "there are there are tons of specifications in the Java E7 platform and the color Legend you can see at the",
    "start": "494280",
    "end": "499800"
  },
  {
    "text": "bottom for example JMS Jrs and expression languages those three are",
    "start": "499800",
    "end": "505639"
  },
  {
    "text": "going through major updates as part of the platform and if maybe I can show some quick updates on that as well",
    "start": "505639",
    "end": "511960"
  },
  {
    "text": "several other specifications are going through minor update and the one on the far right are the brand new additions to",
    "start": "511960",
    "end": "517839"
  },
  {
    "text": "the platform itself so think about building a standard based websocket driven application and I'll show you why",
    "start": "517839",
    "end": "524320"
  },
  {
    "text": "it is important to build a standards based application think about instead of depend relying upon or. Jon or a",
    "start": "524320",
    "end": "530600"
  },
  {
    "text": "thirdparty Jon library that being available as part of the platform itself wherein you don't need to bundle a third",
    "start": "530600",
    "end": "536880"
  },
  {
    "text": "party Json Library where you know portable is guaranteed you know across your different application servers",
    "start": "536880",
    "end": "542839"
  },
  {
    "text": "similarly uh Java caching API that'll give you you know um a simple key value pair for um scaling your applications",
    "start": "542839",
    "end": "551120"
  },
  {
    "text": "very easily um we also have batch applications that is coming as part of the Java E7 so the point being there are",
    "start": "551120",
    "end": "558760"
  },
  {
    "text": "lots of existing content that is being revamped for productivity and HTML 5 and",
    "start": "558760",
    "end": "564040"
  },
  {
    "text": "same thing same philosophy with the new set of specifications that are coming in well today we we going to click on Java",
    "start": "564040",
    "end": "572600"
  },
  {
    "text": "API for websocket which is jsr 357 56 so we'll double click on that and provide lot more details on",
    "start": "572600",
    "end": "580040"
  },
  {
    "start": "578000",
    "end": "651000"
  },
  {
    "text": "that now in terms of Jrs 2.0 which is sort of the big update that is coming as",
    "start": "580720",
    "end": "586480"
  },
  {
    "text": "part of java E7 platform tons of new features that are getting added now if",
    "start": "586480",
    "end": "591600"
  },
  {
    "text": "you realize how many folks are using Jax RS today okay some of you well Jax RS is a",
    "start": "591600",
    "end": "598480"
  },
  {
    "text": "standard way to build a restful web service um and effectively in jackor",
    "start": "598480",
    "end": "604079"
  },
  {
    "text": "first version what you could do is take a pojo put annotation on it and say I want to publish this pojo as a rest end",
    "start": "604079",
    "end": "611360"
  },
  {
    "text": "point everything else was done by the JX RS runtime so then you could say oh what",
    "start": "611360",
    "end": "616880"
  },
  {
    "text": "are my marshalling unmarshaling Concepts you know what are my different sub resources or uh what are my HTTP getput",
    "start": "616880",
    "end": "623720"
  },
  {
    "text": "post delete methods how do they map to my resource methods all of that was defined by Jack sarus In a standard",
    "start": "623720",
    "end": "630240"
  },
  {
    "text": "way now if you realize it was all server Centric so one of the new features that we're adding as part of Jax rs2 is to do",
    "start": "630240",
    "end": "638519"
  },
  {
    "text": "client side API what that means is using similar Concepts you can invoke a rest",
    "start": "638519",
    "end": "644360"
  },
  {
    "text": "end point using a client API again giving you portable applications effectively um and let's see a quick",
    "start": "644360",
    "end": "650959"
  },
  {
    "text": "sample of that so today if you want to invoke uh rest endpoint know let's say",
    "start": "650959",
    "end": "656920"
  },
  {
    "start": "651000",
    "end": "920000"
  },
  {
    "text": "you want to use your only option is either use a proprietary API or you use the one that is bundled as part of jdk",
    "start": "656920",
    "end": "663880"
  },
  {
    "text": "so you have to really create your new URL HTTP URL connection set the meta",
    "start": "663880",
    "end": "669160"
  },
  {
    "text": "data and go through this nasty loop it's kind of hard to understand but you have to go through that loop with Jack RS 2.0",
    "start": "669160",
    "end": "676440"
  },
  {
    "text": "you can just do a clean API all you say is I want to create a new client with",
    "start": "676440",
    "end": "682639"
  },
  {
    "text": "the client I want to set the target this is the URI that I want to invoke I want to resolve the template that this is my",
    "start": "682639",
    "end": "688600"
  },
  {
    "text": "variable part of the URI I want to set up a query parameter which is question mark name equals value I'm going to set",
    "start": "688600",
    "end": "695519"
  },
  {
    "text": "those I'm going to build the request I'm going to do HTTP get and I I know that",
    "start": "695519",
    "end": "700639"
  },
  {
    "text": "I'm going to get a string response back so very clean very simple API I'm not",
    "start": "700639",
    "end": "706000"
  },
  {
    "text": "digging into it but that's one of the areas where we could talk a lot more extensively on how we can use it so for",
    "start": "706000",
    "end": "711839"
  },
  {
    "text": "example here instead of get you can say put post delete and all of those different verbs are available you could",
    "start": "711839",
    "end": "717360"
  },
  {
    "text": "start getting fancy where you could say you could Define what type of data",
    "start": "717360",
    "end": "722519"
  },
  {
    "text": "payload is going over the wire you could even start putting your HTTP accept header oh I expect you know um",
    "start": "722519",
    "end": "728560"
  },
  {
    "text": "application SL Jon MIM type coming back as part of the response so you can start getting Fancy with all those things",
    "start": "728560",
    "end": "735399"
  },
  {
    "text": "filters and entity interceptors A New Concept that we're adding as part of Jax RS itself that allows you to have U",
    "start": "735399",
    "end": "742800"
  },
  {
    "text": "request processing hooks or extensions effectively which you can do for request and response uh typical way is you want",
    "start": "742800",
    "end": "750519"
  },
  {
    "text": "to do um logging or any cross cutting concerns or you want to do auditing or security for a Jax RS request now there",
    "start": "750519",
    "end": "758639"
  },
  {
    "text": "are several implementations of Jax RS which were actually having those features in there already this is again",
    "start": "758639",
    "end": "764480"
  },
  {
    "text": "a standard way again promising the portability um um promised to you so the",
    "start": "764480",
    "end": "769600"
  },
  {
    "text": "idea is you could write a standard filter which is primarily looking at the",
    "start": "769600",
    "end": "775399"
  },
  {
    "text": "HTTP headers or you could say I want to take start look looking at the body and maybe start modifying the body itself so",
    "start": "775399",
    "end": "783079"
  },
  {
    "text": "for example if if you know that the request coming from the client side is",
    "start": "783079",
    "end": "788199"
  },
  {
    "text": "gzip encoded you can dynamically plug in a gzip um inter Interceptor for example",
    "start": "788199",
    "end": "795320"
  },
  {
    "text": "which would know exactly how to read the request or if you know the client can understand you know gzip encoded content",
    "start": "795320",
    "end": "802519"
  },
  {
    "text": "then you can dynamically put it on the server side uh gzip response Handler",
    "start": "802519",
    "end": "808399"
  },
  {
    "text": "which would allow you to gzip your response dynamically so your business logic doesn't change but your cross",
    "start": "808399",
    "end": "813760"
  },
  {
    "text": "cutting concern just simply sit right there as an Interceptor and this is completely Dynamic by the way so the",
    "start": "813760",
    "end": "819040"
  },
  {
    "text": "question is I'm using this in Jersey already today what about backwards compatibility Jersey is the reference",
    "start": "819040",
    "end": "824720"
  },
  {
    "text": "implementation of JX RS so now Jax RS of",
    "start": "824720",
    "end": "829760"
  },
  {
    "text": "course the lot of feedback came from Jersey per se that how these features need to be built into the platform but",
    "start": "829760",
    "end": "836399"
  },
  {
    "text": "the features that you're using for Jersey they continue to b r specific they may be supported some of them may",
    "start": "836399",
    "end": "842320"
  },
  {
    "text": "be supported in Jersey 2.0 but the the definite guidance is to move towards",
    "start": "842320",
    "end": "848199"
  },
  {
    "text": "standard",
    "start": "848199",
    "end": "850560"
  },
  {
    "text": "API one of the features little Nifty features that we're adding as part of Jax RS is how you can do server side",
    "start": "853399",
    "end": "860120"
  },
  {
    "text": "content negotiation well today in the content negotiation what you what that means is the client is saying oh you",
    "start": "860120",
    "end": "866639"
  },
  {
    "text": "know what I'm sending a request I want a response back now what kind of response do I want back I'm a browser so I want",
    "start": "866639",
    "end": "873880"
  },
  {
    "text": "HTML response back or I'm an application so I want Jon response back so you can",
    "start": "873880",
    "end": "878959"
  },
  {
    "text": "actually Define that by using HTTP accept header now if the request goes to a server and server don't care you know",
    "start": "878959",
    "end": "886360"
  },
  {
    "text": "um what is the response goes back it could send anything now with this what you're doing is for example here your",
    "start": "886360",
    "end": "892959"
  },
  {
    "text": "defining if the client does not say what response should come back the server is",
    "start": "892959",
    "end": "898560"
  },
  {
    "text": "defining a priority he's saying application Jon by default the priority is one so he's saying by default I'm",
    "start": "898560",
    "end": "905320"
  },
  {
    "text": "going to send Jon payload and if the client says text XML explicitly I'm",
    "start": "905320",
    "end": "910440"
  },
  {
    "text": "going to honor that as well but by default that's a lower priority so small Nifty features but hopefully we'll have",
    "start": "910440",
    "end": "915880"
  },
  {
    "text": "a bigger detail talk on Jax RS by",
    "start": "915880",
    "end": "920440"
  },
  {
    "start": "920000",
    "end": "998000"
  },
  {
    "text": "itself now JMS JMS was revamped or last revised in December of 201",
    "start": "921480",
    "end": "929519"
  },
  {
    "text": "3 um long back long back so um well we're 2013 so almost 10 years ago",
    "start": "929519",
    "end": "935880"
  },
  {
    "text": "effectively um by that time jdk 1.4 was not released so there are a lot of",
    "start": "935880",
    "end": "942199"
  },
  {
    "text": "changes that have been made in the Java platform itself and the goal of gms2 is",
    "start": "942199",
    "end": "947240"
  },
  {
    "text": "really to catch up with all those features or the improvements that have been made in the Java platform and incorporate those features as part of",
    "start": "947240",
    "end": "954120"
  },
  {
    "text": "GMS 2.0 API so if I were to quickly run you through this code",
    "start": "954120",
    "end": "959680"
  },
  {
    "text": "now this is all the boilerplate code that you need to write as part of just sending a simple message and what are",
    "start": "959680",
    "end": "966759"
  },
  {
    "text": "the problems with this code if you take a look at it um there's lots of boilerplate code over here your goal is to send a text",
    "start": "966759",
    "end": "974600"
  },
  {
    "text": "message to a message producer but all of this boilerplate codes to needs to be written there are tons of apis that",
    "start": "974600",
    "end": "980920"
  },
  {
    "text": "needs to be honored because that's how GMS is defined you know you have to do the exception handling you have to close",
    "start": "980920",
    "end": "987399"
  },
  {
    "text": "the resources you have to inject the resources you have to create these resources so there's tons of stuff that",
    "start": "987399",
    "end": "993240"
  },
  {
    "text": "is happening just to send a simple message now see how that changes as part of java",
    "start": "993240",
    "end": "998759"
  },
  {
    "start": "998000",
    "end": "1130000"
  },
  {
    "text": "E7 this is the updated code as part of java E7 I mean I didn't walk through all those slides but the idea is we're just",
    "start": "998759",
    "end": "1006319"
  },
  {
    "text": "using CDI first of all we're saying just inject a GMS context GMS context will",
    "start": "1006319",
    "end": "1012279"
  },
  {
    "text": "have the encapsulation of the existing apis that are available like producer and uh consumer",
    "start": "1012279",
    "end": "1019519"
  },
  {
    "text": "then I'm going to say okay inject my Q here you know and this of course this is your specific Q so you're going to",
    "start": "1019519",
    "end": "1025720"
  },
  {
    "text": "Define this by yourself and then in terms of send message all you're saying is from the jmss context that is",
    "start": "1025720",
    "end": "1031959"
  },
  {
    "text": "injected for you create the producer send to this demo que and the payload no",
    "start": "1031959",
    "end": "1037720"
  },
  {
    "text": "boiler plate very clean API so effectively there is no exception handling that's happening here there is",
    "start": "1037720",
    "end": "1044000"
  },
  {
    "text": "no resource handling that needs to happen that is because jdk7 defines how if a resource goes out of scope it is",
    "start": "1044000",
    "end": "1051200"
  },
  {
    "text": "automatically collected so functionality that like that know have been used or incorporated into the API to make it",
    "start": "1051200",
    "end": "1058000"
  },
  {
    "text": "much simpler and easier to use now uh that doesn't mean that the",
    "start": "1058000",
    "end": "1065000"
  },
  {
    "text": "older API is going away because it has been into existence and usage for such a long time this is a new API that we are",
    "start": "1065000",
    "end": "1072320"
  },
  {
    "text": "defining so that means your JMS 1.1 programs will continue to work as is but",
    "start": "1072320",
    "end": "1077600"
  },
  {
    "text": "the idea again is to kind of start migrating towards JMS 2.0 yes",
    "start": "1077600",
    "end": "1083280"
  },
  {
    "text": "sir so here what you're doing effectively is you're just creating a JMS context in the terms of JMS context",
    "start": "1089520",
    "end": "1096159"
  },
  {
    "text": "you're creating a producer now in the JMS context what I'm not specifying here is what is my Q or what is my JMS uh",
    "start": "1096159",
    "end": "1103240"
  },
  {
    "text": "connection Factory that I'm using effectively now depending upon how you have configured your GMS connection Factory it might be creating new",
    "start": "1103240",
    "end": "1109760"
  },
  {
    "text": "producers or new uh consumers every time sorry the question was what is the performance impact of this code over the",
    "start": "1109760",
    "end": "1116840"
  },
  {
    "text": "previous code but there are dials and knobs that are available by which you can control",
    "start": "1116840",
    "end": "1122799"
  },
  {
    "text": "that now Java API for Json processing that's the brand new API that we adding as part of the Java E7 platform this API",
    "start": "1129520",
    "end": "1137000"
  },
  {
    "start": "1130000",
    "end": "1182000"
  },
  {
    "text": "will allow you to parse or generate a Json object using standard API and just",
    "start": "1137000",
    "end": "1143000"
  },
  {
    "text": "like jxp or Java API for XML processing and jaxb or Java API for XML binding",
    "start": "1143000",
    "end": "1149520"
  },
  {
    "text": "there is a Dom model and there is a data binding model that is available here effectively so",
    "start": "1149520",
    "end": "1155960"
  },
  {
    "text": "um oh actually in jaxp for example there is a streaming API and a Dom API so in",
    "start": "1155960",
    "end": "1161480"
  },
  {
    "text": "the first version what we defining is a streaming API and a Dom API for Jon subsequently we will have a Jon binding",
    "start": "1161480",
    "end": "1168799"
  },
  {
    "text": "API where on a Java object you could specify annotation and it'll assume",
    "start": "1168799",
    "end": "1173960"
  },
  {
    "text": "defaults and automatically bind that pojo to Jon or vice versa but for now",
    "start": "1173960",
    "end": "1179280"
  },
  {
    "text": "it's only streaming and Dom API in terms of streaming API so think",
    "start": "1179280",
    "end": "1185360"
  },
  {
    "start": "1182000",
    "end": "1224000"
  },
  {
    "text": "about this is how your Jon fragment looks like you could um if you're",
    "start": "1185360",
    "end": "1190480"
  },
  {
    "text": "familiar with JP how streaming really works so all you could do here is I want to listen to the event so the first",
    "start": "1190480",
    "end": "1196760"
  },
  {
    "text": "event is fired is start object or key name or key value string or value number",
    "start": "1196760",
    "end": "1201880"
  },
  {
    "text": "so on so forth you could actually act upon those events as they're being fired and do the relevant",
    "start": "1201880",
    "end": "1208919"
  },
  {
    "text": "thing um a short code that basically says you know this is my entire fragment",
    "start": "1208919",
    "end": "1216000"
  },
  {
    "text": "on the I get from the parsel I get an iterator I just do next next next and then eventually these are the events",
    "start": "1216000",
    "end": "1221679"
  },
  {
    "text": "that are being fired on each particular event B validation this was a new specification that was added as part of",
    "start": "1221679",
    "end": "1228080"
  },
  {
    "start": "1224000",
    "end": "1318000"
  },
  {
    "text": "the Java e platform now the beauty of bean validation is it allows you to specify validation constraints on your",
    "start": "1228080",
    "end": "1235720"
  },
  {
    "text": "beans so think about a pojo which is what you're using or a jpa entity for example which is what you're using to",
    "start": "1235720",
    "end": "1241799"
  },
  {
    "text": "purist to the database now or think about a backing Bean for a JSF page",
    "start": "1241799",
    "end": "1247320"
  },
  {
    "text": "where you're capturing results from a web page now you could do the validation",
    "start": "1247320",
    "end": "1252840"
  },
  {
    "text": "in the JavaScript you could do the validation when you're capturing the data or before you're persisting the data to the database",
    "start": "1252840",
    "end": "1259320"
  },
  {
    "text": "the beauty of bean validation is on the bean itself you can Define the validation constraint and the way the",
    "start": "1259320",
    "end": "1265840"
  },
  {
    "text": "integration is defined across the platform is a bean validator would automatically kick in and would try to",
    "start": "1265840",
    "end": "1272520"
  },
  {
    "text": "validate whatever constraints you have defined for example let's say you have a jpa entity in the entity you said I",
    "start": "1272520",
    "end": "1279679"
  },
  {
    "text": "don't want the name to be more than 30 characters now when you're trying to persist The jpa Entity to the database",
    "start": "1279679",
    "end": "1286000"
  },
  {
    "text": "it will say oh um let me make sure the valid constraint specified on the bean are actually being honored if not the",
    "start": "1286000",
    "end": "1292760"
  },
  {
    "text": "validator will kick in and it will throw a validation constraint exception now either you do that in your application",
    "start": "1292760",
    "end": "1299279"
  },
  {
    "text": "or you rely upon the Java E6 runtime to do the validation for you if you don't do it it goes to the database and it",
    "start": "1299279",
    "end": "1305159"
  },
  {
    "text": "throws an error back as well so the idea is the cost you know if you don't do it in your application or the bean",
    "start": "1305159",
    "end": "1310679"
  },
  {
    "text": "validation doesn't do it for you it anyway goes to the database and the error comes back to you so but this",
    "start": "1310679",
    "end": "1316279"
  },
  {
    "text": "certainly makes it much easy something that they're doing as part of",
    "start": "1316279",
    "end": "1321600"
  },
  {
    "text": "bean validation 1.1 that is coming in the Java E7 platform is how you can start putting those constraints on your",
    "start": "1321600",
    "end": "1327960"
  },
  {
    "text": "simple methods so for example let's say you're invoking a you have a pojo in which you have a place order method in",
    "start": "1327960",
    "end": "1334919"
  },
  {
    "text": "the place order method you want to make sure that if um the product name that is",
    "start": "1334919",
    "end": "1341200"
  },
  {
    "text": "being passed is to is to be not null instead of saying add not null in your",
    "start": "1341200",
    "end": "1347159"
  },
  {
    "text": "application code which is in the place order method you could start checking oh if product name equals null then throw",
    "start": "1347159",
    "end": "1352960"
  },
  {
    "text": "some exception or things like that or you could say if the integer quantity is not 10 then throw an error back here it",
    "start": "1352960",
    "end": "1361240"
  },
  {
    "text": "improves the semantic readability of your code just by putting those annotations effectively what you're",
    "start": "1361240",
    "end": "1366640"
  },
  {
    "text": "saying is oh I don't want this to be null I don't want this to be you know I want this to be a not null but the",
    "start": "1366640",
    "end": "1371919"
  },
  {
    "text": "maximum value should be 10 the one at the bottom for example says if I'm returning a date from the existing",
    "start": "1371919",
    "end": "1379200"
  },
  {
    "text": "function I want it to be in future based upon the current jbm timestamp so it's",
    "start": "1379200",
    "end": "1384480"
  },
  {
    "text": "getting fancier and fancier effectively improving the semantic readability as I said earlier of your code and allowing",
    "start": "1384480",
    "end": "1391320"
  },
  {
    "text": "you to focus on your code competency which is writing the business logic itself is this an extension of jsr 303",
    "start": "1391320",
    "end": "1398520"
  },
  {
    "text": "this is jsr 303 this is jsr 303 so B validation 1.0 was J well is it an",
    "start": "1398520",
    "end": "1404320"
  },
  {
    "text": "extension of jsr 303 so jsr 303 was being validation this is been validation",
    "start": "1404320",
    "end": "1409559"
  },
  {
    "text": "1.1 the next version of it",
    "start": "1409559",
    "end": "1413640"
  },
  {
    "text": "exactly now one of the points that I want to highlight here is these constraints for example not null Max",
    "start": "1416039",
    "end": "1422080"
  },
  {
    "text": "those are built in but you can Define your custom constraint here example for example here I'm using add customer I",
    "start": "1422080",
    "end": "1428360"
  },
  {
    "text": "want this customer to be of a specific type and I I have my own constraints around it so instead of putting you know",
    "start": "1428360",
    "end": "1433960"
  },
  {
    "text": "at not null at Max at this at that I can put all the constraints together together in my simple class again it's a",
    "start": "1433960",
    "end": "1440039"
  },
  {
    "text": "separation of concerns I put my all my constraints in a separate class and I put that class as a constraint here on",
    "start": "1440039",
    "end": "1446600"
  },
  {
    "text": "the customer itself much simpler new functionality that is",
    "start": "1446600",
    "end": "1453200"
  },
  {
    "start": "1450000",
    "end": "1582000"
  },
  {
    "text": "getting added to the Java E7 platform is how you can write a simple batch application I won't dig into the details",
    "start": "1453200",
    "end": "1459720"
  },
  {
    "text": "here but just to kind of give you overall concept um there is a job repository",
    "start": "1459720",
    "end": "1466080"
  },
  {
    "text": "where which is where all the jobs are um stored which is where all the metadata is stored a job operator can look at the",
    "start": "1466080",
    "end": "1472960"
  },
  {
    "text": "job repository trigger the job a job effectively consist of one is to Star so multiple steps now a step as they have",
    "start": "1472960",
    "end": "1481640"
  },
  {
    "text": "defined is has two different mechanisms it could be either a bachlet uh which is",
    "start": "1481640",
    "end": "1486960"
  },
  {
    "text": "sort of a onetime job that you want to fire like upload a file or do something or more typical a more typical and",
    "start": "1486960",
    "end": "1494039"
  },
  {
    "text": "recommended design pattern is chunked processing which is where you're doing read writer reader processor and writer",
    "start": "1494039",
    "end": "1500159"
  },
  {
    "text": "so let's talk more about that a little bit so this is the Chun and the bachet",
    "start": "1500159",
    "end": "1507679"
  },
  {
    "text": "processing but a more typical design pattern is um Chun uh step so what that",
    "start": "1507679",
    "end": "1513320"
  },
  {
    "text": "means is effectively you are reading an item and",
    "start": "1513320",
    "end": "1518600"
  },
  {
    "text": "processing an item you're reading an item processing an item and you're probably doing that n number of times",
    "start": "1518600",
    "end": "1525399"
  },
  {
    "text": "and after you have done that n number of times then you're saying oh I'm going to now going to write the items write the items literally does not mean writing",
    "start": "1525399",
    "end": "1532200"
  },
  {
    "text": "the items it could be oh um for example here I'm going to calculate the balance of the account and I'm done read the",
    "start": "1532200",
    "end": "1539039"
  },
  {
    "text": "account calculate the balance read the account calculate the balance and I'm going to do that for 10 of those",
    "start": "1539039",
    "end": "1545200"
  },
  {
    "text": "accounts together and then I Define what my chunk step is and once I've defined",
    "start": "1545200",
    "end": "1550480"
  },
  {
    "text": "my chunk step after those 10 accounts have been read and processed now I'm going to shoot an email to all those you",
    "start": "1550480",
    "end": "1556039"
  },
  {
    "text": "know hey your your account statement is ready for ex example uh these batch steps could be scheduled could be ad hoc",
    "start": "1556039",
    "end": "1562799"
  },
  {
    "text": "and all kind of things and we we trying to figure out well we're working on exactly how this batch uh API could work",
    "start": "1562799",
    "end": "1570279"
  },
  {
    "text": "very well for example uh with egb schedules you know you have a egb cron based job how would you trigger it",
    "start": "1570279",
    "end": "1576799"
  },
  {
    "text": "automatically from there so that integration is um still being",
    "start": "1576799",
    "end": "1582279"
  },
  {
    "start": "1582000",
    "end": "1622000"
  },
  {
    "text": "defined the central point where and how the job is being fired is really defined",
    "start": "1584760",
    "end": "1590520"
  },
  {
    "text": "using job XML so if you guys have used spring batch uh this concept is actually taken from there for example so here",
    "start": "1590520",
    "end": "1596840"
  },
  {
    "text": "what we're saying is oh I have a job this is a ID my job has two steps here",
    "start": "1596840",
    "end": "1602360"
  },
  {
    "text": "this step the ID is in it it's a chunk type this is my reader writer processor",
    "start": "1602360",
    "end": "1607760"
  },
  {
    "text": "I can Define the sequencing if fail happens do this and then this is my bachelet which is saying okay process an",
    "start": "1607760",
    "end": "1613799"
  },
  {
    "text": "email onetime job so the job XML itself is pretty comprehensive but the concept",
    "start": "1613799",
    "end": "1619120"
  },
  {
    "text": "is actually being borrowed from Spring",
    "start": "1619120",
    "end": "1623080"
  },
  {
    "start": "1622000",
    "end": "1667000"
  },
  {
    "text": "batch um if I were to correlate the job XML with the actual pojos which is how",
    "start": "1624440",
    "end": "1629520"
  },
  {
    "text": "my uh application is being structured so I have uh in my chunk for example",
    "start": "1629520",
    "end": "1634760"
  },
  {
    "text": "account reader account processor and an email writer I would Define a pojo which would say oh this is my um well I have",
    "start": "1634760",
    "end": "1642760"
  },
  {
    "text": "The annotation read item here but I will Define a pojo which will say item reader",
    "start": "1642760",
    "end": "1648200"
  },
  {
    "text": "on the class in the class the moment I say item reader it has to implement certain methods and then one of the",
    "start": "1648200",
    "end": "1654440"
  },
  {
    "text": "methods is called as read item which is saying okay I'm going to read an account this is where possibly you're using jpa",
    "start": "1654440",
    "end": "1660440"
  },
  {
    "text": "talking to the database and getting an account back so you see this is an account that is coming back to you",
    "start": "1660440",
    "end": "1666880"
  },
  {
    "start": "1667000",
    "end": "1702000"
  },
  {
    "text": "here now then you are saying okay what is my account processor then you saying you're defining a pojo which is account",
    "start": "1667799",
    "end": "1674679"
  },
  {
    "text": "processor in which you have ADD process item annotation on a particular method which is where you're probably",
    "start": "1674679",
    "end": "1680360"
  },
  {
    "text": "calculating the balance and finally you have write items which is where you are",
    "start": "1680360",
    "end": "1685480"
  },
  {
    "text": "processing the list of account well you're not passing it's automatically getting passed by the concept that you've defined a chunk over here and",
    "start": "1685480",
    "end": "1692159"
  },
  {
    "text": "this is you're using Java mail to send email so purely within using Java E standard Concepts you can do all of",
    "start": "1692159",
    "end": "1698760"
  },
  {
    "text": "these batch processing Concepts very easily yeah the question is is the are",
    "start": "1698760",
    "end": "1704240"
  },
  {
    "start": "1702000",
    "end": "1878000"
  },
  {
    "text": "the jobs stored somewhere so the job repository is where all the jobs and the metadata of the jobs are stored",
    "start": "1704240",
    "end": "1710720"
  },
  {
    "text": "now if the container crashes are the jobs resumed after that that is still a",
    "start": "1710720",
    "end": "1718120"
  },
  {
    "text": "TBD yeah now as I said only job XML is",
    "start": "1718640",
    "end": "1723720"
  },
  {
    "text": "borrowed from Spring batch that's not the B best batch implementation though job XML",
    "start": "1723720",
    "end": "1730320"
  },
  {
    "text": "yes now uh Java temporary cach Yeah question",
    "start": "1731480",
    "end": "1737600"
  },
  {
    "text": "um you can have multiple pojos but a chunk would Define only one reader",
    "start": "1739559",
    "end": "1744640"
  },
  {
    "text": "writer and processor so you cannot have multiple of those you can have multiple of those methods but then they would be",
    "start": "1744640",
    "end": "1750559"
  },
  {
    "text": "corresponding to multiple chunks effectively so um for example in my War",
    "start": "1750559",
    "end": "1756120"
  },
  {
    "text": "file uh what I could do is in mea INF I could have multiple batch. XML job 1.xml",
    "start": "1756120",
    "end": "1761960"
  },
  {
    "text": "job 2.xml job 3. XML each of those jobs could be end of the day job or",
    "start": "1761960",
    "end": "1768600"
  },
  {
    "text": "um end of the month job things like that or midnight job um and then those jobs",
    "start": "1768600",
    "end": "1773679"
  },
  {
    "text": "are automatically scheduled maybe say using EBS at schedule annotation in in the job so you will",
    "start": "1773679",
    "end": "1780519"
  },
  {
    "text": "have a job operator. start method over there which is referring to that job. XML in that job XML you have multiples",
    "start": "1780519",
    "end": "1787399"
  },
  {
    "text": "reader writers and processors which are corresponding to multiple pojos which have multiple methods so that's s of the",
    "start": "1787399",
    "end": "1793840"
  },
  {
    "text": "structure of how the batch War file would be defined question is there a Java API for it too",
    "start": "1793840",
    "end": "1801039"
  },
  {
    "text": "you have to use no there is a Java API is there a Java API for batch applications yes I prefer The annotation",
    "start": "1801039",
    "end": "1807640"
  },
  {
    "text": "route much simpler but you can go the interface route as well so you could say extends or implements and all that",
    "start": "1807640",
    "end": "1814000"
  },
  {
    "text": "concept s of no I mean to instead of gluing those things together in XML",
    "start": "1814000",
    "end": "1819679"
  },
  {
    "text": "can you glue them together in Java oh um no instead of gluing them together in XML can we glue them together using Java",
    "start": "1819679",
    "end": "1826440"
  },
  {
    "text": "no there is no Java API as I understand the first version of batch only has the job XML as sort of the primary entry",
    "start": "1826440",
    "end": "1834200"
  },
  {
    "text": "point would that be useful I think",
    "start": "1834200",
    "end": "1839360"
  },
  {
    "text": "it's well and I rais that point as well to the spec lead as well um I think about a couple of weeks ago my and the",
    "start": "1839360",
    "end": "1847159"
  },
  {
    "text": "reason I got back was because if you take a look at the job XML specification it's pretty complex you can do parallel",
    "start": "1847159",
    "end": "1854039"
  },
  {
    "text": "jobs serialized jobs you could Define dependency on the jobs so it's it's a pretty complex DSL by",
    "start": "1854039",
    "end": "1860760"
  },
  {
    "text": "itself capturing all of that in the Java language would not be easy um as a",
    "start": "1860760",
    "end": "1866080"
  },
  {
    "text": "matter of fact we have already kind of parked that issue we're not going to deal with that in batch 1.0 but probably",
    "start": "1866080",
    "end": "1871200"
  },
  {
    "text": "in a future",
    "start": "1871200",
    "end": "1873679"
  },
  {
    "start": "1878000",
    "end": "1936000"
  },
  {
    "text": "version this is a standard concurrence uh sorry uh simp standard caching API that we are defining as part of java E7",
    "start": "1879200",
    "end": "1886600"
  },
  {
    "text": "won't dig more into it but we have this concept of a cache manager which has multiple caches um",
    "start": "1886600",
    "end": "1894120"
  },
  {
    "text": "caches has multiple entries it's effectively a key value pair so we're defining how that semantics is going to",
    "start": "1894120",
    "end": "1899320"
  },
  {
    "text": "work and again there is an annotation driven approach over here or a interface driven approach both the approaches are",
    "start": "1899320",
    "end": "1905000"
  },
  {
    "text": "available here if I were to show you a simple",
    "start": "1905000",
    "end": "1910159"
  },
  {
    "text": "sample so for example what you would do is you would obtain a simple cash manager so you say cash manager. get",
    "start": "1910159",
    "end": "1916639"
  },
  {
    "text": "well first of all you get a cash manager by using Services mechanism or automatically identified",
    "start": "1916639",
    "end": "1923880"
  },
  {
    "text": "from the cash manager you get a cash so what is my test cache for example and then you know you can start",
    "start": "1923880",
    "end": "1930039"
  },
  {
    "text": "playing around with it you know you can start configuring the cash how the cash is going to look like what the values are going to go",
    "start": "1930039",
    "end": "1936840"
  },
  {
    "text": "in this is how you put a value in the cach so you just doing a simple get me",
    "start": "1937679",
    "end": "1942840"
  },
  {
    "text": "the cache give me the integer cash. put okay this is how you can get a value",
    "start": "1942840",
    "end": "1948080"
  },
  {
    "text": "from the cache or remove from the cache and now let's take a look at The",
    "start": "1948080",
    "end": "1953279"
  },
  {
    "text": "annotation driven example so let's say I have a pojo which is where I have already implemented for example a Blog",
    "start": "1953279",
    "end": "1958760"
  },
  {
    "text": "manager how would I jcash enable it for example well all you do is you start",
    "start": "1958760",
    "end": "1964000"
  },
  {
    "text": "putting at cach put annotation where the entry is being created you just Define what the cach name is going to look like",
    "start": "1964000",
    "end": "1970840"
  },
  {
    "text": "and the jcash run time will automatically kick in and create the cache for you every time you're creating a title with a Blog you just say what is",
    "start": "1970840",
    "end": "1977679"
  },
  {
    "text": "my my key what is my value you start sprinkling your annotation and those values are automatically stored for you",
    "start": "1977679",
    "end": "1983360"
  },
  {
    "text": "in the cache so is it like what kind of CAS it's it's a key value pair like is it a",
    "start": "1983360",
    "end": "1990279"
  },
  {
    "start": "1984000",
    "end": "2181000"
  },
  {
    "text": "distributed or local there are both the distributed is a distributed or local they're both the versions that are",
    "start": "1990279",
    "end": "1995960"
  },
  {
    "text": "available um as part of jsr 107 there are several implementations that are",
    "start": "1995960",
    "end": "2001519"
  },
  {
    "text": "being plann there are six or seven implementations that are being planned uh the local version is required as part",
    "start": "2001519",
    "end": "2006880"
  },
  {
    "text": "of jsr 7 distributed is optional so we expect some some implementations will offer both some will offer only",
    "start": "2006880",
    "end": "2015880"
  },
  {
    "text": "local now similarly the way we have create an entry we could say get blog",
    "start": "2016639",
    "end": "2021679"
  },
  {
    "text": "entry then you can say just add cash result from this cash this is my key just give me the value or I want to get",
    "start": "2021679",
    "end": "2029600"
  },
  {
    "text": "cash entry only so you could pass a random or well in this case by default this is only one parameter that is the",
    "start": "2029600",
    "end": "2036399"
  },
  {
    "text": "key in this case if I'm saying a specific method then I could pass random Arc and I can even tag it what my key is",
    "start": "2036399",
    "end": "2043559"
  },
  {
    "text": "so those annotations and convenience are all there similarly I can say remove blog",
    "start": "2043559",
    "end": "2049520"
  },
  {
    "text": "entry and remove all blogs there are corresponding annotations for that so cache enabling an existing pojo is",
    "start": "2049520",
    "end": "2056200"
  },
  {
    "text": "pretty",
    "start": "2056200",
    "end": "2058398"
  },
  {
    "text": "straightforward one of the new features that is being being added to jpa 2.1 or Java persistence API 2.1 is how you can",
    "start": "2065359",
    "end": "2073200"
  },
  {
    "text": "take a jpa entity and generate schema from it now if you realize Java",
    "start": "2073200",
    "end": "2079440"
  },
  {
    "text": "persistence API works on a pluggable persistence provider mechanism so Eclipse link or hibernate are",
    "start": "2079440",
    "end": "2084960"
  },
  {
    "text": "persistence providers now most of those persistence provider Define a mechanism or if your JP entity says at entity at",
    "start": "2084960",
    "end": "2093200"
  },
  {
    "text": "column this this this we're going to we can generate a ddl or a DML from that",
    "start": "2093200",
    "end": "2099000"
  },
  {
    "text": "this is effectively standardizing that so you could say you know what if my um",
    "start": "2099000",
    "end": "2104400"
  },
  {
    "text": "jpa or my entity is going to look like this then I could specify certain properties in persistence.xml and that",
    "start": "2104400",
    "end": "2110760"
  },
  {
    "text": "would basically allow me to um generate my ddl and where it's going to generate",
    "start": "2110760",
    "end": "2116640"
  },
  {
    "text": "is it going to be just into the database or I'm going to generate actual SQL script all those options are available",
    "start": "2116640",
    "end": "2122640"
  },
  {
    "text": "to you",
    "start": "2122640",
    "end": "2125799"
  },
  {
    "text": "one of the new features that we're adding as part of seret 3.1 which is again the update for seret 3.0 is how",
    "start": "2143280",
    "end": "2149160"
  },
  {
    "text": "you can do nonblocking IO very standard methodology in the sense that well today",
    "start": "2149160",
    "end": "2155000"
  },
  {
    "text": "if you have to do IO or in a traditional way what you would do is in a do get method you say I'm getting the request",
    "start": "2155000",
    "end": "2161560"
  },
  {
    "text": "from the input stream I'm going to read keep reading it until it says okay I'm done so this is blocked effectively you",
    "start": "2161560",
    "end": "2168280"
  },
  {
    "text": "are blocked on reading the input until the stream is closed from the other side so the workaround is you know which is a",
    "start": "2168280",
    "end": "2174119"
  },
  {
    "text": "very standard way we're defining call back handlers",
    "start": "2174119",
    "end": "2178599"
  },
  {
    "start": "2181000",
    "end": "2228000"
  },
  {
    "text": "here say again something like minor minor the way minor does Apache minor I",
    "start": "2181119",
    "end": "2186920"
  },
  {
    "text": "don't know what Apache well I know what a patch Mina is but I don't know what they do I mean it has a call of when you",
    "start": "2186920",
    "end": "2192520"
  },
  {
    "text": "get dat possibly yeah it's it's a very standard approach though",
    "start": "2192520",
    "end": "2198440"
  },
  {
    "text": "yeah so here for example what I'm saying is um on the input stream I'm just setting",
    "start": "2198440",
    "end": "2205160"
  },
  {
    "text": "a read listener what is my new read listener and then my read listener actually has on data available method so",
    "start": "2205160",
    "end": "2212200"
  },
  {
    "text": "whenever you know data is available it just calls that read listener it runs in a separate thread and it says okay input",
    "start": "2212200",
    "end": "2218880"
  },
  {
    "text": "is ready I'm going to keep reading it till the data is available to me and I just Loop through it so it's very",
    "start": "2218880",
    "end": "2223920"
  },
  {
    "text": "standard you know very stereotype",
    "start": "2223920",
    "end": "2228680"
  },
  {
    "start": "2228000",
    "end": "2268000"
  },
  {
    "text": "concept uh this is yet another API that is getting added new to the platform is I know it's jsr 236 so it's kind of old",
    "start": "2230839",
    "end": "2238280"
  },
  {
    "text": "working been working for it for a long time but finally getting included as part of the platform one of the",
    "start": "2238280",
    "end": "2243480"
  },
  {
    "text": "limitations so to say that people feel for the Java platform is they they cannot create new threads know that's",
    "start": "2243480",
    "end": "2249319"
  },
  {
    "text": "not required or permitted by the specification although some of the containers do permit it now with this",
    "start": "2249319",
    "end": "2255240"
  },
  {
    "text": "you can actually have managed executor threads the idea is you can ask the container to create threads for you and",
    "start": "2255240",
    "end": "2261560"
  },
  {
    "text": "the container will manage it for you so that's sort of what this concurrency utilities for Java e will provide",
    "start": "2261560",
    "end": "2269480"
  },
  {
    "start": "2268000",
    "end": "2310000"
  },
  {
    "text": "you the idea is you know you can Define in your jdi resource references oh this",
    "start": "2271319",
    "end": "2277640"
  },
  {
    "text": "is my manage executor service what is my reference type and this is how where I want going to have my batch executor so",
    "start": "2277640",
    "end": "2285040"
  },
  {
    "text": "you you inject a batch executor effectively using j& reference then from that batch executor you can say start",
    "start": "2285040",
    "end": "2290800"
  },
  {
    "text": "spinning up new threads for me so here for example I'm saying okay inject my batch executor which is my",
    "start": "2290800",
    "end": "2297839"
  },
  {
    "text": "manage executor service on the executor I can say submit by the way here you can also Define how many threads you want to",
    "start": "2297839",
    "end": "2305400"
  },
  {
    "text": "be available in the pool so all those parameters are",
    "start": "2305400",
    "end": "2309920"
  },
  {
    "start": "2310000",
    "end": "2405000"
  },
  {
    "text": "configurable one of the improvements that we're doing as part of the broader Java platform is how we are taking for",
    "start": "2321920",
    "end": "2329040"
  },
  {
    "text": "example ejb has this core concept of each method is inherently transactional for example um unless you explicitly",
    "start": "2329040",
    "end": "2336119"
  },
  {
    "text": "call it that okay it's not transac actional now that concept is relevant to the broader platform as well so what",
    "start": "2336119",
    "end": "2342640"
  },
  {
    "text": "we're saying is let's take that concept out of EB and make it much more widely",
    "start": "2342640",
    "end": "2347960"
  },
  {
    "text": "applicable so for example uh this is a add transactional uh annotation that",
    "start": "2347960",
    "end": "2353560"
  },
  {
    "text": "could be applied to Ajo now what that means is this the semantics are defined",
    "start": "2353560",
    "end": "2359240"
  },
  {
    "text": "by egb or the semantics are defined by JTA which is Java transaction API we",
    "start": "2359240",
    "end": "2364520"
  },
  {
    "text": "reving that part of the as part of the platform as well GTA will Define what add transactional will do but you can",
    "start": "2364520",
    "end": "2371160"
  },
  {
    "text": "actually put it on any pojo and the way it works is because Java E7 has context",
    "start": "2371160",
    "end": "2376480"
  },
  {
    "text": "and dependency injection which by the way introduces you know your transactional interceptors over there or",
    "start": "2376480",
    "end": "2382880"
  },
  {
    "text": "at least interceptors is basically leveraging those concepts for making it you know seamless for you the idea",
    "start": "2382880",
    "end": "2388920"
  },
  {
    "text": "is it need not be an EB if it has to be transactional you can make your pojos as inherently transactional by just putting",
    "start": "2388920",
    "end": "2396040"
  },
  {
    "text": "this annotation if you put it on a method the method becomes transactional you put it on a class all the methods in",
    "start": "2396040",
    "end": "2401680"
  },
  {
    "text": "that class become",
    "start": "2401680",
    "end": "2404359"
  },
  {
    "start": "2405000",
    "end": "2450000"
  },
  {
    "text": "transactional all right now most of the apis that I talked about um other than",
    "start": "2407720",
    "end": "2415640"
  },
  {
    "text": "say concurrency utilities batch and jcash those are the three big",
    "start": "2415640",
    "end": "2423400"
  },
  {
    "text": "ones that are not there as part of download today but most of the API are already integrated and implemented as",
    "start": "2423400",
    "end": "2429839"
  },
  {
    "text": "part of glassfish 4 so you can download the latest promoted build here uh build 70 was done on January 3rd which is what",
    "start": "2429839",
    "end": "2437520"
  },
  {
    "text": "I'm running on my machine today and I'm going to show you some sample code with websocket and so all those apis are integrated you can try it you can play",
    "start": "2437520",
    "end": "2444040"
  },
  {
    "text": "with it you can provide feedback on that and I think that's a good segue for something I want to talk",
    "start": "2444040",
    "end": "2451720"
  },
  {
    "start": "2450000",
    "end": "2588000"
  },
  {
    "text": "about how many of you are familiar with the adopter jsr effort one 2 3 4 okay excellent good",
    "start": "2451720",
    "end": "2460000"
  },
  {
    "text": "audience then then I can explain it well adopter jsr was an effort that was originally started by London Java grip",
    "start": "2460000",
    "end": "2467720"
  },
  {
    "text": "they started looking at different jsrs in terms of oh let's take a look at jmss 2.0 and you know as a jug we're going to",
    "start": "2467720",
    "end": "2475400"
  },
  {
    "text": "meet together and have a hack day and we're going to download the specification we're going to read the",
    "start": "2475400",
    "end": "2480680"
  },
  {
    "text": "Java doc see if it makes sense see if there are any typos we're going to build an application using JMS 2.0 things like",
    "start": "2480680",
    "end": "2487400"
  },
  {
    "text": "that now what they did is they sort of formalized the program where other jugs",
    "start": "2487400",
    "end": "2492920"
  },
  {
    "text": "um could actually take that same concept and they say oh we're going to adopt a jsr not just a jsr you could adopt a",
    "start": "2492920",
    "end": "2499079"
  },
  {
    "text": "bunch of jsrs so now what happens is Java E7 is",
    "start": "2499079",
    "end": "2505040"
  },
  {
    "text": "the one Java E7 jsrs are the ones that are most active today so as part of that",
    "start": "2505040",
    "end": "2510800"
  },
  {
    "text": "we formally launched a Java E7 adapter jsr program so for example somebody in",
    "start": "2510800",
    "end": "2516520"
  },
  {
    "text": "San Francisco Java a user group or in this Meetup for example could say oh you know what I really care about Jon API being done right so I'm going to build",
    "start": "2516520",
    "end": "2523280"
  },
  {
    "text": "an application or I have a use case I'm going to use that API to implement my use case and see if that API fulfills my",
    "start": "2523280",
    "end": "2530000"
  },
  {
    "text": "need or I'm going to talk about websocket API now and you feel excited about the websocket API so I'm going to",
    "start": "2530000",
    "end": "2536040"
  },
  {
    "text": "adopt that jsr as part of the web so of the San Francisco Java Meetup and I'm going to start playing with the API what",
    "start": "2536040",
    "end": "2543040"
  },
  {
    "text": "that could mean is um you can download the spec look at the Java do build an",
    "start": "2543040",
    "end": "2550040"
  },
  {
    "text": "application you can even start contributing to the implementation or you can even provide a proposal to the",
    "start": "2550040",
    "end": "2555319"
  },
  {
    "text": "specification oh I know how websocket and serlet and egb should work with each",
    "start": "2555319",
    "end": "2560839"
  },
  {
    "text": "other and I think this this is critical enough that it should be specified in the specification so there are whole",
    "start": "2560839",
    "end": "2567000"
  },
  {
    "text": "tons of activities that you can do as part of adopter jsr effort it could be as simple as just understanding the",
    "start": "2567000",
    "end": "2573040"
  },
  {
    "text": "specification talking about it with your friends and your company giving a presentation at the Meetup could be",
    "start": "2573040",
    "end": "2579000"
  },
  {
    "text": "writing a proposal to the specification could be implementing it talking at a conference any sort of activity can be",
    "start": "2579000",
    "end": "2584800"
  },
  {
    "text": "done as part of adopter jsr effort so how do you get started that's",
    "start": "2584800",
    "end": "2590680"
  },
  {
    "start": "2588000",
    "end": "2628000"
  },
  {
    "text": "the typical question people ask me okay fine I'm so I want to get started so what we did is on gloss fish. org",
    "start": "2590680",
    "end": "2598200"
  },
  {
    "text": "adopter jsr we worked with different specification leads and we said okay what are the areas where you're looking",
    "start": "2598200",
    "end": "2604640"
  },
  {
    "text": "feedback for so on this URL I have this list of specifications so",
    "start": "2604640",
    "end": "2610480"
  },
  {
    "text": "the ones that are in Black they don't have a specific list so there we have general areas of feedback that are",
    "start": "2610480",
    "end": "2615680"
  },
  {
    "text": "recommended but otherwise for most of the apis you have specific areas where",
    "start": "2615680",
    "end": "2621040"
  },
  {
    "text": "the specification leads are looking for feedback now you may wonder who is doing adop a",
    "start": "2621040",
    "end": "2626880"
  },
  {
    "text": "jsr so today there are 15 Java user groups around the world that are",
    "start": "2626880",
    "end": "2632160"
  },
  {
    "start": "2628000",
    "end": "2766000"
  },
  {
    "text": "actually doing adopter jsr so for example um this is he Java User Group",
    "start": "2632160",
    "end": "2638680"
  },
  {
    "text": "what they're doing is they are building an application using different Java E7 component and literally there was this",
    "start": "2638680",
    "end": "2646000"
  },
  {
    "text": "one girl in Hyderabad I met her at Java 1 she reached out to me Arun I care about jpa and I want to adopt a jsr The",
    "start": "2646000",
    "end": "2653640"
  },
  {
    "text": "Jug leaders are not responding so I went from the other side I know The Jug leaders I can to Coke them in I",
    "start": "2653640",
    "end": "2658920"
  },
  {
    "text": "connected the dots and now they're working together to build an application using Java E7 they're actually",
    "start": "2658920",
    "end": "2664559"
  },
  {
    "text": "organizing hack days for example um bej which is Belgium ju these are the",
    "start": "2664559",
    "end": "2671000"
  },
  {
    "text": "guys who organize devox for example they have adopted jsr 356 the webset API so",
    "start": "2671000",
    "end": "2677040"
  },
  {
    "text": "what they're doing is um they have actually given contributions to the ri already you know they have actively",
    "start": "2677040",
    "end": "2683160"
  },
  {
    "text": "participating in the ri list not only that but they're already planning to organize hack day so they're going to",
    "start": "2683160",
    "end": "2689359"
  },
  {
    "text": "build a tic tactoe kind of an application using web",
    "start": "2689359",
    "end": "2694400"
  },
  {
    "text": "socket so Java there actively contributing for example to Java server fa is 2.2 they have contributed a JSF",
    "start": "2695000",
    "end": "2701359"
  },
  {
    "text": "application already you know in earlier days before adopt a jsr and they're continuing to enhance those incorporate",
    "start": "2701359",
    "end": "2707839"
  },
  {
    "text": "JSF 2.2 features uh London Java Community these guys are very big big big on GMS they've already organized",
    "start": "2707839",
    "end": "2715119"
  },
  {
    "text": "organized GMS hack days um I believe it's cologne jug that have started contributing to Jon performance issues",
    "start": "2715119",
    "end": "2723079"
  },
  {
    "text": "so there's a tons of activity that you could do here you know it would be great if one of you could take a leadership",
    "start": "2723079",
    "end": "2728720"
  },
  {
    "text": "and I'm local here so I'm happy to kind of do a hangout with you or you know come back again kind of organize a hack",
    "start": "2728720",
    "end": "2735079"
  },
  {
    "text": "day oh let me give you a quick overview of all the Java E7 Technologies help you define the application and then you run",
    "start": "2735079",
    "end": "2741760"
  },
  {
    "text": "by yourself you know I'm here to help it facilitate the key point being Java E7",
    "start": "2741760",
    "end": "2747720"
  },
  {
    "text": "is scheduled to go Final in Q2 2013 so all this work needs to happen pretty much now so you know somebody needs to",
    "start": "2747720",
    "end": "2754720"
  },
  {
    "text": "kind of while driving back to your home the bulb needs to light up and say hey I'm going to do it send me an email or",
    "start": "2754720",
    "end": "2760720"
  },
  {
    "text": "send Sasha an email and I'm happy to kind of coordinate that effort with you",
    "start": "2760720",
    "end": "2766000"
  },
  {
    "start": "2766000",
    "end": "2833000"
  },
  {
    "text": "guys let's switch the slides let's talk about HTTP um HTTP has",
    "start": "2766920",
    "end": "2775640"
  },
  {
    "text": "served us really well so far um the purpose of it is served really well you",
    "start": "2775640",
    "end": "2781000"
  },
  {
    "text": "know and all the web is resting on it but effectively it's half duplex in the sense you know you send a",
    "start": "2781000",
    "end": "2788200"
  },
  {
    "text": "request you know a client can send a request and then once the request is received that's when the response comes",
    "start": "2788200",
    "end": "2794240"
  },
  {
    "text": "back um is chatty it's very verbos just to send a simple hello world you have to",
    "start": "2794240",
    "end": "2801119"
  },
  {
    "text": "send like about two kilobytes of data is exchanged between client and server just",
    "start": "2801119",
    "end": "2806599"
  },
  {
    "text": "look at the amount of HTTP headers bare minimal that is required so it's very chatty so it's not not really effective",
    "start": "2806599",
    "end": "2812880"
  },
  {
    "text": "for Real Time Communication that you want to do on the web at least so it doesn't scale for that um so people",
    "start": "2812880",
    "end": "2819920"
  },
  {
    "text": "started hacking around HTTP uh server push comat different technologies that",
    "start": "2819920",
    "end": "2826319"
  },
  {
    "text": "are coming along as part of it but again those stay to be hacked so there's no standard mechanism up until",
    "start": "2826319",
    "end": "2832520"
  },
  {
    "text": "now so that's exactly where web socket come to the rescue now originally web socket was proposed as part of HTML 5",
    "start": "2832520",
    "end": "2840000"
  },
  {
    "start": "2833000",
    "end": "2912000"
  },
  {
    "text": "standard but HTML 5 itself is not going to be a standard until 2014 until next",
    "start": "2840000",
    "end": "2845760"
  },
  {
    "text": "year so what they did is they pulled websocket out of it and they said okay it's going to be a ietf document which",
    "start": "2845760",
    "end": "2852839"
  },
  {
    "text": "is a fairly well-known body and it's it's a standard basically HTTP is a ietf document effectively",
    "start": "2852839",
    "end": "2859599"
  },
  {
    "text": "so there are two things that are defined as part of websocket first is the wire",
    "start": "2859599",
    "end": "2864720"
  },
  {
    "text": "protocol as in how the wire protocol is going to look like there's still a concept of a client and a server so when",
    "start": "2864720",
    "end": "2870280"
  },
  {
    "text": "the client and the server are talking how does the handshake happen how does the on thewire message look like how do",
    "start": "2870280",
    "end": "2875720"
  },
  {
    "text": "we get away of the chattiness of HTTP and things like that and then the second part to web socket is the JavaScript API",
    "start": "2875720",
    "end": "2883720"
  },
  {
    "text": "you know we're talking about web JavaScript being the linga Franco of the web we're defining how a JavaScript API",
    "start": "2883720",
    "end": "2889599"
  },
  {
    "text": "is going to look like so JavaScript API is defined by w3c it's in candidate",
    "start": "2889599",
    "end": "2895079"
  },
  {
    "text": "recommendation which is a fairly Advanced stage the next one is pretty much recommendation and ietf is already",
    "start": "2895079",
    "end": "2900920"
  },
  {
    "text": "uh defined protocol so just Google for RFC 6445 and that tells you exactly it's",
    "start": "2900920",
    "end": "2906119"
  },
  {
    "text": "a fairly well written document it's not one of those geeky ones so you can easily read it and still understand",
    "start": "2906119",
    "end": "2913880"
  },
  {
    "start": "2912000",
    "end": "2975000"
  },
  {
    "text": "it so what's the basic idea now well let's flip the slide I think",
    "start": "2914400",
    "end": "2919800"
  },
  {
    "text": "there's too much details in there but the basic idea really is you know you have a client and a server okay now",
    "start": "2919800",
    "end": "2926599"
  },
  {
    "text": "client and a server they're talking HTTP on HTTP you can know HTTP defines a",
    "start": "2926599",
    "end": "2933920"
  },
  {
    "text": "upgrade mechanism which is defined as part of the HTTP specification itself that upgrade mechanism was",
    "start": "2933920",
    "end": "2939760"
  },
  {
    "text": "defined say you want to upgrade from one version of HTTP to a newer version of HTTP or from HTTP to secure HTTP and",
    "start": "2939760",
    "end": "2946960"
  },
  {
    "text": "things like that so if you're doing HTTP communication already websocket defines",
    "start": "2946960",
    "end": "2953799"
  },
  {
    "text": "how you can use that upgrade mechanism to upgrade from HTTP to websocket and",
    "start": "2953799",
    "end": "2959480"
  },
  {
    "text": "that is called as handshake so there's a client and a server client sends a",
    "start": "2959480",
    "end": "2965040"
  },
  {
    "text": "handshake request the server under understands the request and says okay I'm talking websocket handshake response",
    "start": "2965040",
    "end": "2971640"
  },
  {
    "text": "or if it's not talking then there's no handshake response effectively you break the communication right",
    "start": "2971640",
    "end": "2976720"
  },
  {
    "start": "2975000",
    "end": "3057000"
  },
  {
    "text": "there how does the handshake request look like so let's look at these headers now these are the bunch of HTTP headers",
    "start": "2976720",
    "end": "2983119"
  },
  {
    "text": "that go as part of the handshake request you're saying I want to do a get",
    "start": "2983119",
    "end": "2988200"
  },
  {
    "text": "which is a standard HTTP which is going to this URL using HTTP version 1.1 you",
    "start": "2988200",
    "end": "2993359"
  },
  {
    "text": "got a host these two are the critical headers that go as part the request so you say I'm requesting an upgrade to",
    "start": "2993359",
    "end": "2999559"
  },
  {
    "text": "websocket and it's connection type upgrade and then there are a whole bunch of you know metadata that goes along with it you know origin security Etc not",
    "start": "2999559",
    "end": "3007359"
  },
  {
    "text": "really relevant now if that request goes to a endpoint that understands or knows",
    "start": "3007359",
    "end": "3013799"
  },
  {
    "text": "how to talk back websocket it responds back like this oh yeah I got that request I know you are trying to do a",
    "start": "3013799",
    "end": "3020720"
  },
  {
    "text": "connection upgrade upgrade to web socket so I'm switching protocols now I'm switching from http to web socket this",
    "start": "3020720",
    "end": "3028119"
  },
  {
    "text": "is the very important line that you must see in the protocol response back response coming back and then it's you",
    "start": "3028119",
    "end": "3034440"
  },
  {
    "text": "know it responds back with the metadata as well so that's sort of the handshake request response now remember this runs",
    "start": "3034440",
    "end": "3041000"
  },
  {
    "text": "on top of existing HTTP so you make the initial connection using HTTP you send a",
    "start": "3041000",
    "end": "3047119"
  },
  {
    "text": "a request and the connection gets upgraded to websocket none of the HTTP semantics are valid after that on that",
    "start": "3047119",
    "end": "3054319"
  },
  {
    "text": "connection so once the handshake request and",
    "start": "3054319",
    "end": "3059559"
  },
  {
    "text": "response let me go through this flow then we'll take questions now once the handshake request and response is done",
    "start": "3059559",
    "end": "3065760"
  },
  {
    "text": "that means my client and server are connected now the important part to realize is the client is only client",
    "start": "3065760",
    "end": "3071839"
  },
  {
    "text": "from the perspective that it is initiating the connection and server is only server from the perspective it is",
    "start": "3071839",
    "end": "3078000"
  },
  {
    "text": "receiving the connection once the two are connected they're both peers they're both equally capable of sending as many",
    "start": "3078000",
    "end": "3084920"
  },
  {
    "text": "messages as many times and terminating the connection that's why it's full duplex client and server can send any",
    "start": "3084920",
    "end": "3092200"
  },
  {
    "text": "messages any time can initiate the termination any point of",
    "start": "3092200",
    "end": "3097519"
  },
  {
    "text": "time we'll get to that what is the role of browsers to it so we'll get to",
    "start": "3100119",
    "end": "3107359"
  },
  {
    "text": "that so now once the connection is established now imagine even though I'm using the",
    "start": "3108520",
    "end": "3114599"
  },
  {
    "text": "words client and server they're effectively peers so once the peers are established um there is a call back",
    "start": "3114599",
    "end": "3121559"
  },
  {
    "text": "handlers that are on both the sides client and server open open so you can do some processing over there now client",
    "start": "3121559",
    "end": "3128839"
  },
  {
    "text": "can start sending messages 1 two three as many as it wants server can send as many messages um there is no predefined",
    "start": "3128839",
    "end": "3136880"
  },
  {
    "text": "that okay client has sent a request the response has to come back client can send as many requests is these are",
    "start": "3136880",
    "end": "3142480"
  },
  {
    "text": "unidirectional requests us unidirectional messages so to say you can the client can send or this peer the",
    "start": "3142480",
    "end": "3148559"
  },
  {
    "text": "peer on the left side say can send as many requests and similarly the peer on the right side can send as many",
    "start": "3148559",
    "end": "3155880"
  },
  {
    "text": "requests there may be an error you know I don't like the data format for some reason and",
    "start": "3155960",
    "end": "3161559"
  },
  {
    "text": "finally um one of them either client or server could initiate the termination in",
    "start": "3161559",
    "end": "3166799"
  },
  {
    "text": "which case the connection is terminated and all that state is lost so that's",
    "start": "3166799",
    "end": "3171880"
  },
  {
    "text": "sort of the flow basically you would see now remember the number of messages on",
    "start": "3171880",
    "end": "3177119"
  },
  {
    "text": "the client need not equate the number of responses on the server so effectively you get a very very lowlevel protocol",
    "start": "3177119",
    "end": "3184520"
  },
  {
    "text": "here where client can send as many messages server can send as many messages to each other you build your",
    "start": "3184520",
    "end": "3191520"
  },
  {
    "text": "message exchange patterns on top of that now whether it's request response whether it's one request five response",
    "start": "3191520",
    "end": "3198119"
  },
  {
    "text": "you define that and there are well- defined mechanisms on how you can do that within the web socket that's the",
    "start": "3198119",
    "end": "3203960"
  },
  {
    "text": "concept of subprotocols we'll not cover that today but that's how you can Define it and there are connection negotiation",
    "start": "3203960",
    "end": "3210359"
  },
  {
    "text": "mechanisms that are defined on how those sub protocols kick",
    "start": "3210359",
    "end": "3215400"
  },
  {
    "start": "3214000",
    "end": "3306000"
  },
  {
    "text": "in now you were asking the question about what is the role of um browsers in",
    "start": "3217079",
    "end": "3222240"
  },
  {
    "text": "here well the browsers uh we we said",
    "start": "3222240",
    "end": "3227799"
  },
  {
    "text": "JavaScript is the Ling of franka now effectively if you're writing a web application that is talking to websocket",
    "start": "3227799",
    "end": "3233359"
  },
  {
    "text": "endpoint so you're using JavaScript API now this is the JavaScript API which is",
    "start": "3233359",
    "end": "3239000"
  },
  {
    "text": "a candidate recommendation that is defined by w3c and if you take a look at it it",
    "start": "3239000",
    "end": "3244680"
  },
  {
    "text": "says this is a web socket API um this is a URL where you are",
    "start": "3244680",
    "end": "3249920"
  },
  {
    "text": "connecting to there are some St uh steady state uh ready State variables these are my call back",
    "start": "3249920",
    "end": "3256160"
  },
  {
    "text": "handlers so for example if the websocket connection is open then call this if there's an error called this you know",
    "start": "3256160",
    "end": "3262680"
  },
  {
    "text": "these are my extensions this is my protocol um here I can actually pass my uh subprotocols that I care about which",
    "start": "3262680",
    "end": "3269040"
  },
  {
    "text": "we talked about briefly and these are the methods by which I send a request",
    "start": "3269040",
    "end": "3275160"
  },
  {
    "text": "from one peer to the other peer and I can here I can send for example string data or I could send binary data now",
    "start": "3275160",
    "end": "3282359"
  },
  {
    "text": "JavaScript has native binary uh arrays and you can use all of that by browser",
    "start": "3282359",
    "end": "3287720"
  },
  {
    "text": "compatibility what we really mean is does the brow well you can't take this JavaScript API",
    "start": "3287720",
    "end": "3294799"
  },
  {
    "text": "bundle it as part of application so by browser compatibility what we mean is is this API supported natively in the",
    "start": "3294799",
    "end": "3301079"
  },
  {
    "text": "browser that's the key",
    "start": "3301079",
    "end": "3304480"
  },
  {
    "start": "3306000",
    "end": "3363000"
  },
  {
    "text": "part it's a very detail oriented protocol in the sense it exactly defines",
    "start": "3308720",
    "end": "3315200"
  },
  {
    "text": "how your data frame needs to look like well if a you send a websocket message it goes as a frame now it defines",
    "start": "3315200",
    "end": "3322119"
  },
  {
    "text": "exactly how the framing should look like and you can see by detail I really mean is it really really get down to you know",
    "start": "3322119",
    "end": "3327680"
  },
  {
    "text": "zeroth bit first bit second bit these are bits so really in terms of",
    "start": "3327680",
    "end": "3333359"
  },
  {
    "text": "chattiness where we're talking about 2 kilobytes of messages being exchanged or 2 kilobytes worth of data being",
    "start": "3333359",
    "end": "3339240"
  },
  {
    "text": "exchanged between client and server here we are really talking about a two bite",
    "start": "3339240",
    "end": "3344359"
  },
  {
    "text": "two bite of overhead for each message exchange that is basically the framing bite everything after that is data now",
    "start": "3344359",
    "end": "3352039"
  },
  {
    "text": "of course the connection negotiation of course is a little bit chatty because that's relying upon http but after that",
    "start": "3352039",
    "end": "3357480"
  },
  {
    "text": "it works pretty clean much much less um",
    "start": "3357480",
    "end": "3363039"
  },
  {
    "start": "3363000",
    "end": "3452000"
  },
  {
    "text": "veros talking about a little bit more about browser so you can go to this website called as can I",
    "start": "3364119",
    "end": "3369200"
  },
  {
    "text": "use.com websockets um let me ask a trick question how many of you use IE Internet",
    "start": "3369200",
    "end": "3376559"
  },
  {
    "text": "Explorer as your primary browser what is the one",
    "start": "3376559",
    "end": "3383720"
  },
  {
    "text": "hand and the reason I asked that is this chart was updated in literally December",
    "start": "3383720",
    "end": "3389160"
  },
  {
    "text": "23rd of last year up until then IE did not had the websocket support now they",
    "start": "3389160",
    "end": "3396559"
  },
  {
    "text": "finally have um uh so if for example I9 is your primary browser do not expect",
    "start": "3396559",
    "end": "3403079"
  },
  {
    "text": "websocket from it it will just not work um as a matter of fact um Firefox Chrome",
    "start": "3403079",
    "end": "3410039"
  },
  {
    "text": "Safari Opera they have had this support for a while of course Firefox and chrome have it have had it for the longest time",
    "start": "3410039",
    "end": "3415839"
  },
  {
    "text": "effective now one thing that I fail to understand is why Android browser doesn't have that",
    "start": "3415839",
    "end": "3421920"
  },
  {
    "text": "support I don't know but if you download Chrome on your Android phone then it has",
    "start": "3421920",
    "end": "3427280"
  },
  {
    "text": "that support just the native Android browser doesn't have it",
    "start": "3427280",
    "end": "3432558"
  },
  {
    "text": "download uh IE download for what will",
    "start": "3434039",
    "end": "3439520"
  },
  {
    "text": "allow I I don't use iie so I don't know what's happening in the IE land and I'm on a Mac so I'm thankfully away",
    "start": "3441359",
    "end": "3448880"
  },
  {
    "text": "from that",
    "start": "3448880",
    "end": "3451759"
  },
  {
    "start": "3452000",
    "end": "3475000"
  },
  {
    "text": "virus now we saw there is a JavaScript API for building the web socket",
    "start": "3454000",
    "end": "3459680"
  },
  {
    "text": "applications uh what happens on the server side so on the server side there are a whole bunch of Frameworks that are",
    "start": "3459680",
    "end": "3464920"
  },
  {
    "text": "available by which you can build a web socket uh application and these are some of them these are only some of them and",
    "start": "3464920",
    "end": "3471799"
  },
  {
    "text": "that's exactly the problem that the Java API for web soet is trying to solve",
    "start": "3471799",
    "end": "3477039"
  },
  {
    "start": "3475000",
    "end": "3500000"
  },
  {
    "text": "so jsr 356 is going to define a standard API for building web socket application",
    "start": "3477039",
    "end": "3482720"
  },
  {
    "text": "now as part of w3c we have defined how the JavaScript API is going to look like 356 or jsr 356 will also Define how a",
    "start": "3482720",
    "end": "3490480"
  },
  {
    "text": "Java API for that would look like so it's defining not only the server programming model but the client",
    "start": "3490480",
    "end": "3496680"
  },
  {
    "text": "programming model as well uh Tyrus is the uh reference",
    "start": "3496680",
    "end": "3504559"
  },
  {
    "start": "3500000",
    "end": "3512000"
  },
  {
    "text": "implementation name it is already integrated did well into glassfish 4 and I'll show you some demos on how the code would look like for that skip through",
    "start": "3504559",
    "end": "3512480"
  },
  {
    "start": "3512000",
    "end": "3599000"
  },
  {
    "text": "that yeah so um there is um API for client and endpoints we'll cover these a",
    "start": "3512480",
    "end": "3518839"
  },
  {
    "text": "little bit more um websocket has this concept of extensions you know which is",
    "start": "3518839",
    "end": "3524520"
  },
  {
    "text": "sort of defined in the protocol itself now as I said web soet is a very low-level protocol um and it's text and",
    "start": "3524520",
    "end": "3532400"
  },
  {
    "text": "binary supported both what if you want to do multiplexing on that you want to can take it a notch above that so",
    "start": "3532400",
    "end": "3538880"
  },
  {
    "text": "multiplexing you know that's a or compression for example on your websocket protocol that is being",
    "start": "3538880",
    "end": "3544680"
  },
  {
    "text": "supported using um extensions in websocket so now the websocket protocol defines that but that's still in a very",
    "start": "3544680",
    "end": "3550880"
  },
  {
    "text": "early stage there are some experimental work going on around that but that's not going to be supported as part of the",
    "start": "3550880",
    "end": "3556079"
  },
  {
    "text": "Java API and that's the reason that was originally in the scope but we can of ruled it out that is too aggressive to",
    "start": "3556079",
    "end": "3561960"
  },
  {
    "text": "support that specifically given the state of extensions in websocket",
    "start": "3561960",
    "end": "3568720"
  },
  {
    "text": "protocol",
    "start": "3568880",
    "end": "3571880"
  },
  {
    "text": "Yeahs any issues",
    "start": "3582640",
    "end": "3589039"
  },
  {
    "text": "vulnerability so what are the security issues around web soet specifically with denial of service now just like like you",
    "start": "3590119",
    "end": "3596440"
  },
  {
    "text": "know your standard um uh HTTP that can happen here as well",
    "start": "3596440",
    "end": "3603240"
  },
  {
    "text": "now and I I'll show talk more about that once you establish a connection you can establish a connection using plain WS",
    "start": "3603240",
    "end": "3610640"
  },
  {
    "text": "colon protocol so instead of HTTP colon protocol you make connection using WS protocol WS colon protocol or you can",
    "start": "3610640",
    "end": "3618039"
  },
  {
    "text": "make it using WSS which is secure so you can get away with that so extending the keys every time",
    "start": "3618039",
    "end": "3626160"
  },
  {
    "text": "the compation is done like that key handling and all that is not defined as part of the protocol so that is done",
    "start": "3626160",
    "end": "3632559"
  },
  {
    "text": "exactly the way HTTP is doing it so it's exactly leveraging that those exact",
    "start": "3632559",
    "end": "3637960"
  },
  {
    "text": "Concepts and extending them to",
    "start": "3637960",
    "end": "3641599"
  },
  {
    "text": "websocket is there a way by which we can switch standard Java servet to websocket model no that's not that's that's not",
    "start": "3646440",
    "end": "3653760"
  },
  {
    "text": "how we expect it to work and hopefully I'll I mean I'll jump into the code soon and then you'll get a better",
    "start": "3653760",
    "end": "3659599"
  },
  {
    "text": "understanding of how we expect it to",
    "start": "3659599",
    "end": "3662760"
  },
  {
    "text": "work just a warning that's my legal disclaimer by the",
    "start": "3665319",
    "end": "3670760"
  },
  {
    "text": "way so this is how I Define my web socket endpoint for example so just read",
    "start": "3671200",
    "end": "3676240"
  },
  {
    "text": "the code that is in the black for example I'm saying public class hello bean simple say hello method take a",
    "start": "3676240",
    "end": "3682119"
  },
  {
    "text": "parameter hello name that's it right I want to convert it to a web socket endpoint so I say okay import Java X websocket",
    "start": "3682119",
    "end": "3689680"
  },
  {
    "text": "package and host the websocket endpoint websocket is effectively an endpoint this is which is where my client is",
    "start": "3689680",
    "end": "3695960"
  },
  {
    "text": "talking to so saying host the websocket endpoint at /hello so you just provide The annotation put the path in there the",
    "start": "3695960",
    "end": "3703400"
  },
  {
    "text": "websocket or jsr 356 runtime kicks in automatically hosts it for you that",
    "start": "3703400",
    "end": "3709160"
  },
  {
    "text": "means it understands the requests that are being made to this endpoint using WS",
    "start": "3709160",
    "end": "3714920"
  },
  {
    "text": "colon protocol all of those it will understand all the semantics protocols Etc connection negotiation it'll",
    "start": "3714920",
    "end": "3720400"
  },
  {
    "text": "understand all of that you're saying whenever a request is coming to this endpoint invoke this method you're",
    "start": "3720400",
    "end": "3727480"
  },
  {
    "text": "tagging it as a websocket message now there could be multiple methods that could be websocket message and I'll talk about that but this is your simplistic",
    "start": "3727480",
    "end": "3734480"
  },
  {
    "text": "most trivial hello world example for getting started with websocket message or websocket",
    "start": "3734480",
    "end": "3741480"
  },
  {
    "text": "endpoint there are lots of other annotations as part of java X websocket star package um we looked at the first",
    "start": "3741960",
    "end": "3748839"
  },
  {
    "text": "one if you want to make a client you know then you can just put annotation at websocket client annotation now of",
    "start": "3748839",
    "end": "3755359"
  },
  {
    "text": "course there are packaging on how you do the packaging how do you bootstrap what URL is listening to and I can cover that",
    "start": "3755359",
    "end": "3761400"
  },
  {
    "text": "if we have time but that's sort of the basic idea here now you do a websocket endpoint on a pojo it becomes a webset",
    "start": "3761400",
    "end": "3767279"
  },
  {
    "text": "endpoint you make ADD web soet client then you have mechanisms on how it can connect to server and then become pure",
    "start": "3767279",
    "end": "3773240"
  },
  {
    "text": "to that Network effectively uh there are call back back handlers like open close open close uh error you can Define path",
    "start": "3773240",
    "end": "3781640"
  },
  {
    "text": "parameter just like Jax RS that if you know let's say a request is coming in as part of the URI you can say this is a",
    "start": "3781640",
    "end": "3788640"
  },
  {
    "text": "variable part of the URI map it to this particular parameter of the method all that is",
    "start": "3788640",
    "end": "3795359"
  },
  {
    "text": "possible within the web socket endpoint there are four attributes that are available today well first of course is",
    "start": "3796440",
    "end": "3802079"
  },
  {
    "text": "a value which is defined the URI at which the endpoint is listening now as I said the web socket endpoint",
    "start": "3802079",
    "end": "3808880"
  },
  {
    "text": "itself can receive text data or binary data um the the one of the linga franer",
    "start": "3808880",
    "end": "3816359"
  },
  {
    "text": "of the web is for example Json format so now does that mean every time you receive a Jon object or a Json fragment",
    "start": "3816359",
    "end": "3824319"
  },
  {
    "text": "is received as string then you use a third party Json API to process it and then you're going to play around with it",
    "start": "3824319",
    "end": "3830319"
  },
  {
    "text": "and then finally convert it back to string and send it back no well that's how people do it",
    "start": "3830319",
    "end": "3836279"
  },
  {
    "text": "but what we expect is you would Define a encoder and a decoder and that encod in",
    "start": "3836279",
    "end": "3841839"
  },
  {
    "text": "that encoder and decoder again going by the separation of concerns design pattern in that encoder and decoder is",
    "start": "3841839",
    "end": "3848119"
  },
  {
    "text": "where you'll specify that oh string is coming in I'm going to convert the string to my pojo oh that's my decoder",
    "start": "3848119",
    "end": "3857079"
  },
  {
    "text": "right now going out you could say oh I have I want to deal with my pojo but effectively on The Wire what has to go",
    "start": "3857079",
    "end": "3863680"
  },
  {
    "text": "out is Jon so and decoder will or encoder will do from my pojo to Jon this",
    "start": "3863680",
    "end": "3870200"
  },
  {
    "text": "this is exactly what you specify in encoders and decoders so try to get hold of the concepts and I'm going to show",
    "start": "3870200",
    "end": "3875440"
  },
  {
    "text": "you a much more comprehensive sample covering all these Concepts in the code question",
    "start": "3875440",
    "end": "3883920"
  },
  {
    "text": "is there any integration of JMS with websocket not at this point of time and that's exactly the point for our next",
    "start": "3898520",
    "end": "3905119"
  },
  {
    "text": "Bullet For example sub protocols now as I said GM uh web socket is a very",
    "start": "3905119",
    "end": "3911240"
  },
  {
    "text": "lowlevel protocol any messages that goes on top of it you define the semantics for it so there are four predefined",
    "start": "3911240",
    "end": "3919920"
  },
  {
    "text": "subprotocols that have been submitted I there's a formal process on how you can define a subprotocol as part of the",
    "start": "3919920",
    "end": "3926160"
  },
  {
    "text": "subprotocol you need to Define oh what is the request response message pattern and how those responses need to be dealt",
    "start": "3926160",
    "end": "3932279"
  },
  {
    "text": "and how those request need to be dealt etc etc so the one of the um message",
    "start": "3932279",
    "end": "3938000"
  },
  {
    "text": "exchange pattern is for example how you could do GMS style messaging with that",
    "start": "3938000",
    "end": "3943240"
  },
  {
    "text": "so that may be something that you can take a look at but I think that's a very bleeding edge area very gray area um",
    "start": "3943240",
    "end": "3950640"
  },
  {
    "text": "more than welcome to take a look at it I've looked at the proposal by itself but I don't know if there are any",
    "start": "3950640",
    "end": "3955720"
  },
  {
    "text": "implementations I think um Vamp is WM is what you may want to look at it talks",
    "start": "3955720",
    "end": "3962119"
  },
  {
    "text": "about a little bit about how that protocol is implemented within",
    "start": "3962119",
    "end": "3967039"
  },
  {
    "text": "them so we were talking about how I can convert you know from Jon to my pojo and",
    "start": "3970079",
    "end": "3975760"
  },
  {
    "text": "pojo to my Jon you define those encoders and decoders and you effectively put them right here in this annotation how",
    "start": "3975760",
    "end": "3983160"
  },
  {
    "text": "would the code look like well uh I have public class my message I'm defining",
    "start": "3983160",
    "end": "3988640"
  },
  {
    "text": "decoder do text I know that this is going to be a text message coming to me and I want to encode it back to the text",
    "start": "3988640",
    "end": "3995240"
  },
  {
    "text": "so I'm going to implement decoder do text and encoder do text and all I'm doing is in the decode well first of all",
    "start": "3995240",
    "end": "4001480"
  },
  {
    "text": "will decode that means in terms of decoder if the string is coming to me",
    "start": "4001480",
    "end": "4006799"
  },
  {
    "text": "string is the payload coming to me and I can maybe read ahead in the string and",
    "start": "4006799",
    "end": "4012400"
  },
  {
    "text": "return true oh I can process this message so I return true otherwise I return false now this is how the Jack or",
    "start": "4012400",
    "end": "4020279"
  },
  {
    "text": "websocket runtime or jsr 356 runtime will decide whether the encoder can handle the message from one format to",
    "start": "4020279",
    "end": "4026720"
  },
  {
    "text": "other that's one and then there's a decode method here which says oh okay I got the string now I want to convert",
    "start": "4026720",
    "end": "4033000"
  },
  {
    "text": "this to Jon object and then go that goes right here so that's sort of the decoding part of it similarly encoding",
    "start": "4033000",
    "end": "4039279"
  },
  {
    "text": "you can say oh take the my pojo object which is my message in this case convert it to string so just simple method",
    "start": "4039279",
    "end": "4046839"
  },
  {
    "text": "methods similarly you can do that same thing for binary as well so you can start playing around with binary data",
    "start": "4046839",
    "end": "4053880"
  },
  {
    "text": "convert encode and decode from binary to your",
    "start": "4053880",
    "end": "4058640"
  },
  {
    "text": "pojo right well the question is if you're writing this Java web socket code is",
    "start": "4062559",
    "end": "4068680"
  },
  {
    "text": "that part of the war file yes it is part of the war file and so that specifi that relative to the",
    "start": "4068680",
    "end": "4076279"
  },
  {
    "text": "context of that that's right the excellent question is the URI of the",
    "start": "4076279",
    "end": "4081760"
  },
  {
    "text": "websocket endpoint relative to the context root of the application yes it is so again I'm just going through the",
    "start": "4081760",
    "end": "4088559"
  },
  {
    "text": "concepts quickly then I'm going to jump into the application there we can I know see a lot more details on how this is",
    "start": "4088559",
    "end": "4093920"
  },
  {
    "text": "actually being implemented say again oh I know my time don't",
    "start": "4093920",
    "end": "4102199"
  },
  {
    "text": "worry you want me to stop now um this is how we would write a very",
    "start": "4102199",
    "end": "4108318"
  },
  {
    "text": "simple chat sample for example um I have a chat Bean I'm going to say in the chat",
    "start": "4108319",
    "end": "4114719"
  },
  {
    "text": "Bean I'm going to collect a set of session now session encapsulates how a client is making a",
    "start": "4114719",
    "end": "4120159"
  },
  {
    "text": "request to the endpoint and that's the list of sessions for example I'm going to just maintain that list of session so",
    "start": "4120159",
    "end": "4126719"
  },
  {
    "text": "the way I would write a simple chat CL chat Cent and this is a full fully operated operational chat server for",
    "start": "4126719",
    "end": "4132120"
  },
  {
    "text": "example here I'm saying on open by tagging add websocket open annotation on",
    "start": "4132120",
    "end": "4137238"
  },
  {
    "text": "it I'm just adding to the set over here on close I'm removing the from the",
    "start": "4137239",
    "end": "4142600"
  },
  {
    "text": "set and then whenever a message is being received I just broadcast the message to everybody very simple chat server fully",
    "start": "4142600",
    "end": "4149838"
  },
  {
    "text": "operational and it's not fancy but it does the job very",
    "start": "4149839",
    "end": "4154679"
  },
  {
    "text": "well so let me show the sample",
    "start": "4155679",
    "end": "4159839"
  },
  {
    "text": "now so I have a simple whiteboard application okay let me show the application first then I'll walk you",
    "start": "4161199",
    "end": "4167080"
  },
  {
    "text": "through the code the directory structure and the calls and the flow",
    "start": "4167080",
    "end": "4173080"
  },
  {
    "text": "Etc so right click and run",
    "start": "4174520",
    "end": "4179199"
  },
  {
    "text": "it this is running on glassfish build 70 which is the most recent one that was promoted January 3rd I",
    "start": "4179679",
    "end": "4188520"
  },
  {
    "text": "think the idea is this is a collaborative whiteboard you know whatever you draw on one browser gets",
    "start": "4190920",
    "end": "4196600"
  },
  {
    "text": "displayed on another browser so this is what I'm using is Chrome um let me open up a safari window",
    "start": "4196600",
    "end": "4203280"
  },
  {
    "text": "here and I can use Firefox as well by the way so let me refresh this guy here",
    "start": "4203280",
    "end": "4212840"
  },
  {
    "text": "okay for",
    "start": "4224320",
    "end": "4228320"
  },
  {
    "text": "so I just refreshed the page so let's focus on the left window first",
    "start": "4260760",
    "end": "4266120"
  },
  {
    "text": "okay so I can I'm looking at the developer tools here I can click on web sockets here this is going to show me",
    "start": "4267640",
    "end": "4274239"
  },
  {
    "text": "only the web socket connections that are happening as part of this network traffic now if I take a look at that so",
    "start": "4274239",
    "end": "4281719"
  },
  {
    "text": "it says okay I'm requesting the URL which is on WS colon now remember I said",
    "start": "4281719",
    "end": "4286800"
  },
  {
    "text": "this is not HTTP colon this is Ws colon URL so it's making a request to this URL",
    "start": "4286800",
    "end": "4292640"
  },
  {
    "text": "whiteboard is the name of the application websocket is my endpoint where it's being hosted the question",
    "start": "4292640",
    "end": "4298120"
  },
  {
    "text": "that we were asking earlier um so the headers you know the response",
    "start": "4298120",
    "end": "4303719"
  },
  {
    "text": "that I'm getting back is um HTTP 101 switching protocols and",
    "start": "4303719",
    "end": "4310120"
  },
  {
    "text": "um these are the request headers so I'm saying connection upgrade this is the origin h post version Etc and then in",
    "start": "4310120",
    "end": "4318000"
  },
  {
    "text": "the response I'm saying connection upgraded of the type web socket okay so that's",
    "start": "4318000",
    "end": "4325280"
  },
  {
    "text": "that so let's keep it minimal for",
    "start": "4325280",
    "end": "4330520"
  },
  {
    "text": "now so the way this application works is um let's say",
    "start": "4331040",
    "end": "4338000"
  },
  {
    "text": "I what happen here",
    "start": "4338520",
    "end": "4343040"
  },
  {
    "text": "Connection close frame okay let me restart my server because I",
    "start": "4361480",
    "end": "4366960"
  },
  {
    "text": "think it was running already and once I come here I join a different network so",
    "start": "4366960",
    "end": "4372040"
  },
  {
    "text": "it gets confused by the IP servers uh IP addresses let me run it once",
    "start": "4372040",
    "end": "4378000"
  },
  {
    "text": "again now in terms of how the application would behave",
    "start": "4379480",
    "end": "4386360"
  },
  {
    "text": "is okay that's how it should work so the idea is thank you",
    "start": "4398600",
    "end": "4405800"
  },
  {
    "text": "okay so whatever I type you know whatever I do this is a collaborative whiteboard the idea is imagine you",
    "start": "4405800",
    "end": "4413080"
  },
  {
    "text": "running the show and whatever you're typing on your whiteboard you want it to be reflected across different browsers",
    "start": "4413080",
    "end": "4419920"
  },
  {
    "text": "now in this case I'm just running two separate browsers but if you have access to this network then you can actually",
    "start": "4419920",
    "end": "4425600"
  },
  {
    "text": "access this machine on your iPhone or whatever it is and then you would see the exact same replica for",
    "start": "4425600",
    "end": "4432840"
  },
  {
    "text": "example say right so the let's look at the application first",
    "start": "4433800",
    "end": "4439840"
  },
  {
    "text": "then we'll talk about that okay let's try to understand the basic web socket Concepts here first so now um if I show you the",
    "start": "4439840",
    "end": "4447520"
  },
  {
    "text": "developer tools for example here once",
    "start": "4447520",
    "end": "4451360"
  },
  {
    "text": "again and refresh it here refresh it",
    "start": "4452960",
    "end": "4458560"
  },
  {
    "text": "here just look at the web sockets show me the web socket",
    "start": "4459159",
    "end": "4468040"
  },
  {
    "text": "only oh what happened what happened why did my server",
    "start": "4471600",
    "end": "4478920"
  },
  {
    "text": "die operation timed out okay let's try it again",
    "start": "4485120",
    "end": "4493079"
  },
  {
    "text": "operation timed out",
    "start": "4498760",
    "end": "4502719"
  },
  {
    "text": "so let me show you the index.jsp page in the meanwhile so in the index.jsp",
    "start": "4534080",
    "end": "4541679"
  },
  {
    "text": "page um all I have is a HTML 5 canvas and I",
    "start": "4542639",
    "end": "4548320"
  },
  {
    "text": "have some radio buttons on you choose the color you choose the shape and then you could do transfer and the the",
    "start": "4548320",
    "end": "4554600"
  },
  {
    "text": "transfer in the sense you could transfer as soon as I click on the browser I",
    "start": "4554600",
    "end": "4559639"
  },
  {
    "text": "don't if it's up or not yet oh there you go I think is it coming",
    "start": "4559639",
    "end": "4567960"
  },
  {
    "text": "live or",
    "start": "4567960",
    "end": "4570400"
  },
  {
    "text": "not oh it's still",
    "start": "4574080",
    "end": "4577520"
  },
  {
    "text": "starting oh I just started the server I didn't run the application itself",
    "start": "4581480",
    "end": "4587800"
  },
  {
    "text": "okay let me walk you through the application first show The behavior",
    "start": "4599239",
    "end": "4605080"
  },
  {
    "text": "effectively so here for example whatever I click here that gets shown over there",
    "start": "4605800",
    "end": "4611920"
  },
  {
    "text": "I could choose a different color that gets instantly transferred now I say you",
    "start": "4611920",
    "end": "4616960"
  },
  {
    "text": "know what I don't want to do instant transfer I want to go offline I want to do some my of my own work so then I say",
    "start": "4616960",
    "end": "4623040"
  },
  {
    "text": "don't do instant transfer select some other stuff here other",
    "start": "4623040",
    "end": "4630600"
  },
  {
    "text": "shapes other color play around with that and then I say now send a",
    "start": "4630600",
    "end": "4637679"
  },
  {
    "text": "snapshot so the use case here is every time I'm clicking effectively is",
    "start": "4637679",
    "end": "4644239"
  },
  {
    "text": "capturing the Jon coordinates well this is a predefined template right both of them are accessing the exactly same web",
    "start": "4644239",
    "end": "4650040"
  },
  {
    "text": "application so every time I'm clicking on this browser is capturing the Json coordinates sending broadcasting it in",
    "start": "4650040",
    "end": "4657120"
  },
  {
    "text": "just a my J chat server it broadcasting it to all of my clients that are listening to it and that's how they're",
    "start": "4657120",
    "end": "4663360"
  },
  {
    "text": "getting reflected over here the moment I say don't send instant transfer that transfer is not happening and when I say",
    "start": "4663360",
    "end": "4670120"
  },
  {
    "text": "snapshot effectively is taking a snapshot of this HTML 5 canvas and is",
    "start": "4670120",
    "end": "4675280"
  },
  {
    "text": "sending a binary Snapshot not text this time is checking a binary transfer and sending it to the all the other browsers",
    "start": "4675280",
    "end": "4681760"
  },
  {
    "text": "so for example let's say if a third browser now joins in I don't know what the timing timing out problem but let's",
    "start": "4681760",
    "end": "4687520"
  },
  {
    "text": "try this so let's say I start a third",
    "start": "4687520",
    "end": "4692800"
  },
  {
    "text": "browser I go go here",
    "start": "4695400",
    "end": "4701198"
  },
  {
    "text": "and here I say for example snapshot again so the same thing is sent",
    "start": "4701360",
    "end": "4706920"
  },
  {
    "text": "instantly again now it's a very simple sample but the concept it conveys is you can do multitude of things with this",
    "start": "4706920",
    "end": "4714400"
  },
  {
    "text": "application let's take a look at the code with",
    "start": "4714400",
    "end": "4718360"
  },
  {
    "text": "this so this is my instant box so as soon as I say instant is sending the",
    "start": "4720199",
    "end": "4725760"
  },
  {
    "text": "Json coordinates back to all the clients and if I'm saying um instant is false that means",
    "start": "4725760",
    "end": "4732760"
  },
  {
    "text": "I'm send sending a binary data here okay and see how that's being done so if I take a look at my websocket DJs",
    "start": "4732760",
    "end": "4740679"
  },
  {
    "text": "here in websocket DJs is where I'm actually making a connection to the back",
    "start": "4740679",
    "end": "4745800"
  },
  {
    "text": "end instead of using HTTP colon I'm saying WS colon location host location",
    "start": "4745800",
    "end": "4751440"
  },
  {
    "text": "path name and websocket which is where my where my endpoint is hosted so if I take a look at my endpoint for a",
    "start": "4751440",
    "end": "4758920"
  },
  {
    "text": "second so this is where my my websocket endpoint is hosted okay and in this all",
    "start": "4762400",
    "end": "4767920"
  },
  {
    "text": "I have is websocket open close and I'm saying broadcast figure",
    "start": "4767920",
    "end": "4773400"
  },
  {
    "text": "this is using figure now figure is my pojo which is where I'm sending my Json coordinates and then here I have bite",
    "start": "4773400",
    "end": "4780719"
  },
  {
    "text": "buffer remember I said you could have multiple websocket messages the first one is what takes the",
    "start": "4780719",
    "end": "4787480"
  },
  {
    "text": "um uh text version of the Json coordinates the second one is what is taking the binary snapshot and",
    "start": "4787480",
    "end": "4793360"
  },
  {
    "text": "broadcasting it to all the different servers or all the different peers say",
    "start": "4793360",
    "end": "4800960"
  },
  {
    "text": "again if you take a look at figure for example up here that figure is supported",
    "start": "4802159",
    "end": "4807360"
  },
  {
    "text": "using these encoders which are defined in my websocket annotation itself now if I take a look at figure",
    "start": "4807360",
    "end": "4813800"
  },
  {
    "text": "encoder it says it's encode implementing encoder text figure so that's s of the algorithm it says oh let me take a look",
    "start": "4813800",
    "end": "4820040"
  },
  {
    "text": "at all the encoders decoders you have specified as part of The websocket annotation if any encoder serves that",
    "start": "4820040",
    "end": "4825440"
  },
  {
    "text": "then I'm going to take string map it to that particular encoder convert it to the pojo and dispatch to the appropriate",
    "start": "4825440",
    "end": "4832000"
  },
  {
    "text": "websocket message",
    "start": "4832000",
    "end": "4834800"
  },
  {
    "text": "method now these are my simple coordinates this is just a there's nothing fancy",
    "start": "4841400",
    "end": "4848880"
  },
  {
    "text": "here if I take a look at my figure object itself and figure effectively all I'm",
    "start": "4848880",
    "end": "4854800"
  },
  {
    "text": "doing is storing the Json coordinates okay and if I were to show you for",
    "start": "4854800",
    "end": "4860040"
  },
  {
    "text": "example my whiteboard. Js which is um where my application",
    "start": "4860040",
    "end": "4865600"
  },
  {
    "text": "logic is in there um again there I'm just using standard HTML or JavaScript syntax I'm just using you know get me",
    "start": "4865600",
    "end": "4872679"
  },
  {
    "text": "the element by ID get me the context which are standard HTML 5 apis I'm defining the image you know based upon",
    "start": "4872679",
    "end": "4879080"
  },
  {
    "text": "my radio buttons that are being selected and this is my defined image binary again I'm using HTML 5 apis here",
    "start": "4879080",
    "end": "4886400"
  },
  {
    "text": "or JavaScript apis from the context I'm getting the image data creating my array buffer and sending it",
    "start": "4886400",
    "end": "4893040"
  },
  {
    "text": "over okay this is my draw image text which is where I'm directly transmitting",
    "start": "4893040",
    "end": "4898280"
  },
  {
    "text": "all the Json coordinates of the image for example you can see it did it required",
    "start": "4898280",
    "end": "4904920"
  },
  {
    "text": "me a lot of experimenting to get this code working but this code is all available I mean a full blog which shows",
    "start": "4904920",
    "end": "4910840"
  },
  {
    "text": "exactly how this application should work in terms of glassfish Bill source code all is available already published on my",
    "start": "4910840",
    "end": "4919120"
  },
  {
    "text": "blog um now if I go to for example files here whiteboard",
    "start": "4919639",
    "end": "4926000"
  },
  {
    "text": "Target take a look at my whiteboard. War file now this is generated with Maven so",
    "start": "4926000",
    "end": "4932120"
  },
  {
    "text": "of course it has some additional classes but if I take a look at my web classes effectively um those are all my classes",
    "start": "4932120",
    "end": "4938800"
  },
  {
    "text": "in there so there's no serlet no ejb nothing of that sort in there just my websocket endpoint classes",
    "start": "4938800",
    "end": "4945199"
  },
  {
    "text": "and in terms of web and if lib uh jison and STX API are bundled in",
    "start": "4945199",
    "end": "4951080"
  },
  {
    "text": "there but I could actually move them into the provided category and they won't be required as well uh this",
    "start": "4951080",
    "end": "4956679"
  },
  {
    "text": "particular version again I I think I should be able to move it to the provided category and that should work",
    "start": "4956679",
    "end": "4963360"
  },
  {
    "text": "too question",
    "start": "4964440",
    "end": "4970120"
  },
  {
    "text": "coll I it with my iPad my iPhones and across Windows well not well yeah Chrome",
    "start": "4973159",
    "end": "4980080"
  },
  {
    "text": "on Windows um and mac and some other machines and it did work yeah the main",
    "start": "4980080",
    "end": "4987000"
  },
  {
    "text": "requirement being the compatibility with the websocket API you know you need to have that websocket API implemented as",
    "start": "4987000",
    "end": "4992360"
  },
  {
    "text": "part of the browser that is the only dependency because the endpoint is hosted by the glass fish onun time you",
    "start": "4992360",
    "end": "4999600"
  },
  {
    "text": "would need a websocket container at least some sort of websocket container so um for now I'm using glossface which",
    "start": "4999600",
    "end": "5006159"
  },
  {
    "text": "actually has the tyus implementation integrated in there um so you need some sort of websocket container that will",
    "start": "5006159",
    "end": "5012080"
  },
  {
    "text": "understand that you know WS protocol be able to do connection negotiation handshake all that stuff understand",
    "start": "5012080",
    "end": "5019800"
  },
  {
    "text": "right yeah how does web socket scale effectively I think the way we see it is",
    "start": "5019800",
    "end": "5026920"
  },
  {
    "text": "HTTP is about horizontal scaling this is more about vertical scaling uh websocket",
    "start": "5026920",
    "end": "5033239"
  },
  {
    "text": "in terms of that you know s GTP you can easily add more processors and say you know what I'm going to run uh scaling",
    "start": "5033239",
    "end": "5038800"
  },
  {
    "text": "that way in websocket you are definitely limited by the number of ports that are available on your machine so for example",
    "start": "5038800",
    "end": "5046719"
  },
  {
    "text": "if you're opening a websocket connection on one websocket endpoint you know you",
    "start": "5046719",
    "end": "5052040"
  },
  {
    "text": "can open as many as you want but that is again restricted by the number of ports that are available so is the scalability",
    "start": "5052040",
    "end": "5058040"
  },
  {
    "text": "concerns I have not studied myself well and I've not started playing around with it yet so I don't have a conclusive",
    "start": "5058040",
    "end": "5064040"
  },
  {
    "text": "answer but that's how I understand yeah the question is um uh is there any analysis that is being done in terms of",
    "start": "5064040",
    "end": "5070400"
  },
  {
    "text": "either using HTTP and web socket in terms of how much chattiness is actually being reduced so if you take a look at",
    "start": "5070400",
    "end": "5076719"
  },
  {
    "text": "the HD uh I think the one of the nonnormative websocket documents it that",
    "start": "5076719",
    "end": "5082800"
  },
  {
    "text": "means a sample websocket document itself says how a simple hello world takes over",
    "start": "5082800",
    "end": "5088760"
  },
  {
    "text": "2 kilobytes of data that is used to be exchanged between client and server with websocket that can be done in about",
    "start": "5088760",
    "end": "5095360"
  },
  {
    "text": "about I think about 150 bytes or so so there is definitely a huge performance Improvement and that's actually a um",
    "start": "5095360",
    "end": "5103199"
  },
  {
    "text": "quote coming from Ian Hixon who actually authored the very first version of the websocket specification",
    "start": "5103199",
    "end": "5109040"
  },
  {
    "text": "itself the question was now that there's Java API for web socket are there plans for Java API for web RTC realtime",
    "start": "5109040",
    "end": "5117080"
  },
  {
    "text": "communication take a lead you know run a show run a jsr by all means we take contributions",
    "start": "5117080",
    "end": "5124639"
  },
  {
    "text": "[Music]",
    "start": "5126440",
    "end": "5134050"
  }
]