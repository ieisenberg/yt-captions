[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7819"
  },
  {
    "text": "well thanks for coming all uh we'll go ahead and get started so uh this presentation is going to talk a lot",
    "start": "8000",
    "end": "13559"
  },
  {
    "text": "about um some of the edge technology that's used at Netflix and by Edge we",
    "start": "13559",
    "end": "19400"
  },
  {
    "text": "mean what your Wiis and such hit first in the network and go go over some uh",
    "start": "19400",
    "end": "25800"
  },
  {
    "text": "Java software um that that I've been working on as a part of Netflix",
    "start": "25800",
    "end": "31160"
  },
  {
    "text": "so I'm Adrien Cole um the other Adrian Cloud guy there's Adrien cockro who also",
    "start": "31160",
    "end": "37640"
  },
  {
    "text": "wres a lot of presentations and and works right next to me and um I started",
    "start": "37640",
    "end": "43079"
  },
  {
    "text": "at Netflix in late December last year um after spending about four years on an",
    "start": "43079",
    "end": "49719"
  },
  {
    "text": "open source project I founded called jclouds and I've been working on cloud portability at Netflix with regards to",
    "start": "49719",
    "end": "56239"
  },
  {
    "text": "DNS and so you hear a lot about that through the mix and I hope you found yourself in the right",
    "start": "56239",
    "end": "62879"
  },
  {
    "text": "room so how many here know how Netflix streaming",
    "start": "62879",
    "end": "69119"
  },
  {
    "start": "64000",
    "end": "233000"
  },
  {
    "text": "works okay well issues are uh a few and no hands for the rest so that won't be",
    "start": "69119",
    "end": "76200"
  },
  {
    "text": "boring um how about DNS in general how do people feel about DNS thing that puts",
    "start": "76200",
    "end": "82920"
  },
  {
    "text": "names to IP addresses yeah that that works um so I'll do I",
    "start": "82920",
    "end": "89600"
  },
  {
    "text": "always go through a little bit of DNS just to make sure it's not complete Greek um but this won't go into like",
    "start": "89600",
    "end": "96759"
  },
  {
    "text": "deep 20year 400 page book DNS stuff um intentionally avoiding that because if",
    "start": "96759",
    "end": "103399"
  },
  {
    "text": "you're really interested in DNS programming you can always join the open source project and talk to me after the",
    "start": "103399",
    "end": "109439"
  },
  {
    "text": "the session um we'll go over in depth uh the Java code um that myself and others in",
    "start": "109439",
    "end": "116240"
  },
  {
    "text": "the project have been working on that's called denominator and uh this is part of the Netflix",
    "start": "116240",
    "end": "121759"
  },
  {
    "text": "OSS um GitHub repository um how many here use",
    "start": "121759",
    "end": "127440"
  },
  {
    "text": "GitHub so quite a few um GitHub for those who who aren't using that is",
    "start": "127440",
    "end": "132680"
  },
  {
    "text": "basically a a source control um collaborative Source control um that",
    "start": "132680",
    "end": "137840"
  },
  {
    "text": "that's free for uh developers um and uh we have repositories on Netflix about",
    "start": "137840",
    "end": "144440"
  },
  {
    "text": "well a few few dozen I guess and um all of the code that are in those repositories are things that that we",
    "start": "144440",
    "end": "150480"
  },
  {
    "text": "actually use in production so uh and we don't have Forks internally either um so",
    "start": "150480",
    "end": "156519"
  },
  {
    "text": "it's very interesting place because you can literally see the the bits that are responsible for for playing uh your",
    "start": "156519",
    "end": "163239"
  },
  {
    "text": "favorite films or documentaries or TV shows um finally uh Cloud price um have",
    "start": "163239",
    "end": "170440"
  },
  {
    "text": "anyone heard about the cloud price before the Netflix Cloud price uh one hand I have two hands three hands all",
    "start": "170440",
    "end": "178440"
  },
  {
    "text": "right okay not so bad um have a a bit at the end um uh discussing the cloud prize",
    "start": "178440",
    "end": "185440"
  },
  {
    "text": "in short uh we're giving um we're doing our own sort of emys for open source",
    "start": "185440",
    "end": "191000"
  },
  {
    "text": "software and um the cloud prize uh will have 10 categories of awards uh for",
    "start": "191000",
    "end": "198319"
  },
  {
    "text": "contributing and improving um the Netflix Open Source ecosystem um and uh there will be a",
    "start": "198319",
    "end": "204760"
  },
  {
    "text": "panel of Judges um some pretty famous folks there um and the winners uh will",
    "start": "204760",
    "end": "211239"
  },
  {
    "text": "be given $10,000 each um that could be a person or could be a team of people uh",
    "start": "211239",
    "end": "217159"
  },
  {
    "text": "as well round trip tickets to go to the Amazon revent um conference later this year",
    "start": "217159",
    "end": "223560"
  },
  {
    "text": "which is where the award ceremony will be so it's kind of fun and I'll spend a",
    "start": "223560",
    "end": "229159"
  },
  {
    "text": "couple minutes just talking about that too so this is where it all starts right",
    "start": "229159",
    "end": "236239"
  },
  {
    "start": "233000",
    "end": "275000"
  },
  {
    "text": "um and this changes uh some of you have seen Netflix change over the years",
    "start": "236239",
    "end": "241400"
  },
  {
    "text": "although The Branding is pretty consistent um the content definitely does change and it's it's personalized",
    "start": "241400",
    "end": "248040"
  },
  {
    "text": "uh you you'll have noticed um there there's a number of of uh",
    "start": "248040",
    "end": "253519"
  },
  {
    "text": "recommendations coming from what's generally popular or what's popular to",
    "start": "253519",
    "end": "258560"
  },
  {
    "text": "you um or folks that have hijacked your Netflix account um this is actually not",
    "start": "258560",
    "end": "264600"
  },
  {
    "text": "mine this is the other Adrian's Netflix screen crab but I suppose I wouldn't mind ing those shows um but we're going",
    "start": "264600",
    "end": "271919"
  },
  {
    "text": "to talk about how that content gets there and in a nutshell uh you know it's",
    "start": "271919",
    "end": "278160"
  },
  {
    "start": "275000",
    "end": "494000"
  },
  {
    "text": "a distributed system um how many here have heard about or knew that um Netflix",
    "start": "278160",
    "end": "284400"
  },
  {
    "text": "uses the Amazon Cloud for some of its architecture and so that's that's pretty",
    "start": "284400",
    "end": "290240"
  },
  {
    "text": "uh wide known um one of the things that's that's really good for cloud computing in general is that uh Netflix",
    "start": "290240",
    "end": "297160"
  },
  {
    "text": "has kind of um trailblaze a lot of stuff um in the earlier days of Amazon and",
    "start": "297160",
    "end": "303960"
  },
  {
    "text": "helped helped get Netflix and Amazon through some scaling issues so a lot of",
    "start": "303960",
    "end": "309840"
  },
  {
    "text": "folks who use n uh Amazon now probably have a a slightly better place because of the collaboration over the years it's",
    "start": "309840",
    "end": "316280"
  },
  {
    "text": "been a very good relationship but Amazon is not the only Cloud that we use um so",
    "start": "316280",
    "end": "321840"
  },
  {
    "text": "for example all the bits in the movies um you can think of the films being U",
    "start": "321840",
    "end": "328280"
  },
  {
    "text": "split up into various like second or two second pieces and distributed all over the place and they're encrypted and and",
    "start": "328280",
    "end": "336280"
  },
  {
    "text": "the massive amount of data that that is is actually on a Content delivery Network and um that's that's actually a",
    "start": "336280",
    "end": "343560"
  },
  {
    "text": "cloud service um how many have heard of the term content delivery Network before",
    "start": "343560",
    "end": "349360"
  },
  {
    "text": "so a good majority but those who haven't it's basically like a cache um Network",
    "start": "349360",
    "end": "355240"
  },
  {
    "text": "where uh the whoever the client is is going to be getting content close to where they are um super helpful when",
    "start": "355240",
    "end": "363400"
  },
  {
    "text": "you've probably heard the statistic that Netflix uh is responsible for a third of the bandwidth in the US optimizing where",
    "start": "363400",
    "end": "370360"
  },
  {
    "text": "those bits are coming from close to the user is really important and and that's actually the majority of the Netflix",
    "start": "370360",
    "end": "376759"
  },
  {
    "text": "traffic and I'll go into more of a breakdown there so we certainly do use",
    "start": "376759",
    "end": "382440"
  },
  {
    "text": "um Amazon uh for just about well our entire control plane uh we don't have we",
    "start": "382440",
    "end": "388880"
  },
  {
    "text": "basically I think we may have a server or two left in the data center but it's been pretty much um all uh redesigned um",
    "start": "388880",
    "end": "396560"
  },
  {
    "text": "for the cloud most of the content is served through this like uh Service uh",
    "start": "396560",
    "end": "401720"
  },
  {
    "text": "that's a combination of um existing large scale CDN uh content delivery",
    "start": "401720",
    "end": "407039"
  },
  {
    "text": "networks and then our own thing called um open connect um and of course nothing will",
    "start": "407039",
    "end": "413160"
  },
  {
    "text": "work at all unless there was a client player and so Netflix is also uh Works",
    "start": "413160",
    "end": "418240"
  },
  {
    "text": "tight with Device teams um to make sure that not just silver light but other things like your your Wiis and your",
    "start": "418240",
    "end": "424280"
  },
  {
    "text": "PlayStations and everything can connect and use those protocols so for example",
    "start": "424280",
    "end": "429440"
  },
  {
    "text": "what generally will happen is it's a series of like um restful metadata API",
    "start": "429440",
    "end": "435160"
  },
  {
    "text": "traffic that's responsible for Netflix delivering your browser whatever content",
    "start": "435160",
    "end": "441080"
  },
  {
    "text": "and that metadata is going to have things like the thumbnails of the of the films that you see uh the",
    "start": "441080",
    "end": "446680"
  },
  {
    "text": "recommendations if you if you uh you vote on it that's going back through a rest call uh when you start to play the",
    "start": "446680",
    "end": "454160"
  },
  {
    "text": "whole licensing dance is going through uh the rest apis and you're going to get basically a u you know behind the scenes",
    "start": "454160",
    "end": "461759"
  },
  {
    "text": "is actually kind of assembling a playlist of of sort of video Pack video",
    "start": "461759",
    "end": "466919"
  },
  {
    "text": "audio packets that are going to be pulled by you directly from the content delivery",
    "start": "466919",
    "end": "472319"
  },
  {
    "text": "Network um if you tried to make your own like dumb version of Netflix what you would probably do is split up your films",
    "start": "472319",
    "end": "480400"
  },
  {
    "text": "similar to like a a bit T put them on like Amazon S3 and do out signed URLs",
    "start": "480400",
    "end": "486360"
  },
  {
    "text": "for temporary periods of time that would be really dumb down version and obviously Netflix is more complex than",
    "start": "486360",
    "end": "493440"
  },
  {
    "text": "that our content delivery uh service U open connect is a open Hardware spec and",
    "start": "493440",
    "end": "500919"
  },
  {
    "start": "494000",
    "end": "567000"
  },
  {
    "text": "it's basically um what we do is is in order to U kind of reduce the burden of",
    "start": "500919",
    "end": "508520"
  },
  {
    "text": "Netflix traffic on all the isps and and the uh exchanges we have our own",
    "start": "508520",
    "end": "514200"
  },
  {
    "text": "exchanges that uh will basically help install these appliances on on an ISP",
    "start": "514200",
    "end": "521560"
  },
  {
    "text": "which would help prevent the traffic that would otherwise go from all those films from like consuming their uplinks",
    "start": "521560",
    "end": "528519"
  },
  {
    "text": "so what would happen is that like we would actually manage the catalog um and distributed to all of these all these",
    "start": "528519",
    "end": "536080"
  },
  {
    "text": "little isps that might have open connect boxes running in them so so it's a sustainability effort to help um you",
    "start": "536080",
    "end": "542519"
  },
  {
    "text": "know get uh you know less less of that you know Uplink um saturated by only",
    "start": "542519",
    "end": "549360"
  },
  {
    "text": "Netflix traffic and so it's it's good for the isps it's good for us users get better performance because um they're",
    "start": "549360",
    "end": "556480"
  },
  {
    "text": "getting their content directly from their their isps Network so there's a lot of good information about open",
    "start": "556480",
    "end": "561880"
  },
  {
    "text": "connect and you can just check that out on the website or or ask folks later this is a traffic we have a",
    "start": "561880",
    "end": "569000"
  },
  {
    "start": "567000",
    "end": "673000"
  },
  {
    "text": "wonderful program as Netflix employees inside you get the ability to see the uh",
    "start": "569000",
    "end": "575640"
  },
  {
    "text": "um how everything works we have these like Netflix University and so in November the folks that are responsible",
    "start": "575640",
    "end": "582600"
  },
  {
    "text": "for all of our content uh gave us a nice class about how all this stuff works and",
    "start": "582600",
    "end": "588760"
  },
  {
    "text": "it's really nice as Netflix employees we have access to like all all of the information that maybe I can't talk",
    "start": "588760",
    "end": "595959"
  },
  {
    "text": "about like the specific like how many U people use Netflix from here or there but we can internally so this is a wased",
    "start": "595959",
    "end": "603480"
  },
  {
    "text": "slide from an internal presentation uh of some information that we can publish without violating our shareholders and",
    "start": "603480",
    "end": "610880"
  },
  {
    "text": "um what this shows is that as of November um Netflix you know is responsible for you know a a vast",
    "start": "610880",
    "end": "618440"
  },
  {
    "text": "majority of us traffic um coming down um but it's also a pretty pretty high up",
    "start": "618440",
    "end": "623760"
  },
  {
    "text": "there as far as uplinks too and that's the API traffic that's a lot of the other things that are coming from people",
    "start": "623760",
    "end": "629320"
  },
  {
    "text": "people's devices and so it's it's a significant amount and a lot of that Uplink traffic is actually coming",
    "start": "629320",
    "end": "635440"
  },
  {
    "text": "through our services on Amazon S3 I mean on Amazon web services so uh basically",
    "start": "635440",
    "end": "642639"
  },
  {
    "text": "this is um like we have a farm um folks may have heard that our region in in Us",
    "start": "642639",
    "end": "649560"
  },
  {
    "text": "East is about 10,000 machines and then we have another region in uh UK that has",
    "start": "649560",
    "end": "655399"
  },
  {
    "text": "another few thousand I'm sorry in Ireland that has another few thousand so there's there's still quite a lot I",
    "start": "655399",
    "end": "662600"
  },
  {
    "text": "mean and and 4 and a half% of the Upstream traffic is is no small deal so",
    "start": "662600",
    "end": "667959"
  },
  {
    "text": "so our cloud is used quite a bit and and the one way to figure out the control traffic is to look at the",
    "start": "667959",
    "end": "673000"
  },
  {
    "text": "Uplink um we also work with a company um called app Dynamics for a few years now",
    "start": "673000",
    "end": "680880"
  },
  {
    "text": "um which is one of our monitoring Services we we use a lot of services um and they've they've grown over time to",
    "start": "680880",
    "end": "687200"
  },
  {
    "text": "help us make sense of our graph when you have a graph of of several thousand servers even if they're um bundled into",
    "start": "687200",
    "end": "694519"
  },
  {
    "text": "clusters you still end up with a deal where there's there's a lot of complexity to figure out um what your",
    "start": "694519",
    "end": "700560"
  },
  {
    "text": "dependency graph is and so our dependency graph um is pretty widely",
    "start": "700560",
    "end": "705839"
  },
  {
    "text": "known that we're big Cassandra users we use Cassandra for a lot of things and one of the merits we have is that it",
    "start": "705839",
    "end": "711399"
  },
  {
    "text": "helps us deal with multi- region U replication meaning that we can take",
    "start": "711399",
    "end": "716639"
  },
  {
    "text": "content and use Cassandra technology replicated between like East Coast and West Coast or between uh you know Europe",
    "start": "716639",
    "end": "724360"
  },
  {
    "text": "and and us and so that helps us a lot for the content that we do need to Global globally",
    "start": "724360",
    "end": "729560"
  },
  {
    "text": "synchronize um but we also use a number of other things we use mcash clusters we use S3 we use um Dynamo simple DB we use",
    "start": "729560",
    "end": "738040"
  },
  {
    "text": "a lot of Amazon web services and um so our graph has to be able to represent both things that we run and and and",
    "start": "738040",
    "end": "744839"
  },
  {
    "text": "services we rely on when we're looking at actually what what ends up working through so this is just sort of what a",
    "start": "744839",
    "end": "751880"
  },
  {
    "text": "starting point like where the start point is basically our API server and they have to connect to all of our 200",
    "start": "751880",
    "end": "758199"
  },
  {
    "text": "microservices inside and and what that actually ends up looking like it's kind of hard to look at to be",
    "start": "758199",
    "end": "765839"
  },
  {
    "text": "honest um so uh how many here have heard of Asgard or seen Asgard Asgard is like",
    "start": "767720",
    "end": "774839"
  },
  {
    "start": "768000",
    "end": "862000"
  },
  {
    "text": "our our Command and control console it's sort of like a replacement for amaz 's",
    "start": "774839",
    "end": "780000"
  },
  {
    "text": "uh web console uh and it does a lot of cool stuff and um it it actually",
    "start": "780000",
    "end": "785519"
  },
  {
    "text": "recently can do pretty sophisticated things like workflow deployments um because it's going to be integrated with",
    "start": "785519",
    "end": "792800"
  },
  {
    "text": "uh Amazon's simple workflow service which would allow us to do things like staging deployment task multi-step tasks",
    "start": "792800",
    "end": "800240"
  },
  {
    "text": "but before getting to to something too fancy what you see is just basically how we how we release apps we use this uh",
    "start": "800240",
    "end": "807880"
  },
  {
    "text": "concept called um Auto scaling groups um and the ASG and Asgard stands for auto",
    "start": "807880",
    "end": "813079"
  },
  {
    "text": "scaling group and um so when we roll out everything's a cluster until proven",
    "start": "813079",
    "end": "818440"
  },
  {
    "text": "otherwise so autoscaling group uh can have a fixed or variable number of servers in it and we bake an Ami with a",
    "start": "818440",
    "end": "827199"
  },
  {
    "text": "project that's open source called amator and it will have a naming convention including the version of the deployment",
    "start": "827199",
    "end": "833680"
  },
  {
    "text": "and um so Asgard sort of built around our deployment model um so that you can",
    "start": "833680",
    "end": "839279"
  },
  {
    "text": "release and and uh put more or less traffic on clusters that are are often",
    "start": "839279",
    "end": "845800"
  },
  {
    "text": "but not necessarily um fronted by load balancers so for example a lot of our internal Services um we we connect with",
    "start": "845800",
    "end": "853880"
  },
  {
    "text": "our Discovery Services directly uh called Eureka as opposed to using a low",
    "start": "853880",
    "end": "860720"
  },
  {
    "text": "balancer um so the DNS side of things uh comes into play more often when we're",
    "start": "861680",
    "end": "867759"
  },
  {
    "start": "862000",
    "end": "974000"
  },
  {
    "text": "talking about U multi agent meaning that um just having an IP address of below",
    "start": "867759",
    "end": "873839"
  },
  {
    "text": "balancer is not enough um and so it's same issue with with inside the same",
    "start": "873839",
    "end": "878959"
  },
  {
    "text": "region if you had redundant entry points but in a happy world what we're going to",
    "start": "878959",
    "end": "884360"
  },
  {
    "text": "be able to do is use our uh various DNS providers and um control them in a",
    "start": "884360",
    "end": "890639"
  },
  {
    "text": "similar fashion so that when someone resolves to say one of our our API endpoints um we can U Point them and",
    "start": "890639",
    "end": "898680"
  },
  {
    "text": "allow them to have the ability to fail over to a new low balancer or an",
    "start": "898680",
    "end": "904759"
  },
  {
    "text": "existing low balancer that's healthier than the one they're currently using um or even move their traffic over uh just",
    "start": "904759",
    "end": "911880"
  },
  {
    "text": "to facilitate an upgrade um netflex does a lot of product testing and a lot of um",
    "start": "911880",
    "end": "918000"
  },
  {
    "text": "system testing and often times we will uh before we do something major we will",
    "start": "918000",
    "end": "923880"
  },
  {
    "text": "move like a couple States over to this new service make sure it works properly before turning on the floodgates and",
    "start": "923880",
    "end": "930920"
  },
  {
    "text": "that's not just States but countries so the project that um I've",
    "start": "930920",
    "end": "936279"
  },
  {
    "text": "been working on since since being at Netflix is called uh denominator uh the first production deployment of that was",
    "start": "936279",
    "end": "942680"
  },
  {
    "text": "actually um barely after it finished back in March um in this uh open connect so when",
    "start": "942680",
    "end": "950680"
  },
  {
    "text": "new appliances are being registered they're they're being Auto registered with DNS um but we also use it U for",
    "start": "950680",
    "end": "958199"
  },
  {
    "text": "naming our load balancers and and shifting traffic between",
    "start": "958199",
    "end": "963240"
  },
  {
    "text": "them so it's cool logo thanks to Jeff demic from autra DNS who found the um",
    "start": "963240",
    "end": "970279"
  },
  {
    "text": "app that generates things like this um and so uh we have a number of use",
    "start": "970279",
    "end": "977800"
  },
  {
    "text": "cases U multi- region failover being one of them but we also have things like ETA",
    "start": "977800",
    "end": "983079"
  },
  {
    "text": "which is our service for um sort of understanding the audit log of all of",
    "start": "983079",
    "end": "988759"
  },
  {
    "text": "our configuration over time and um and then of course things that we didn't",
    "start": "988759",
    "end": "994319"
  },
  {
    "text": "necessarily plan on for example the introduction of denominator into the cach service happened without me knowing",
    "start": "994319",
    "end": "1000480"
  },
  {
    "text": "it um that's pretty cool um and also when some of the folks in our deployment",
    "start": "1000480",
    "end": "1006319"
  },
  {
    "text": "teams were looking at a denominator to register our ec2 instances with DNS on bud up just to give them a more friendly",
    "start": "1006319",
    "end": "1013199"
  },
  {
    "text": "name than i-h whatever um the common model is is is a",
    "start": "1013199",
    "end": "1018959"
  },
  {
    "text": "model on DNS and then we have uh plugins which we call providers for each of the uh Services we use Netflix currently",
    "start": "1018959",
    "end": "1026038"
  },
  {
    "text": "uses three different DNS providers um Amazon for internal stuff um we use dck",
    "start": "1026039",
    "end": "1033000"
  },
  {
    "text": "um D does most of our um our CDN uh so this and these are going to be tens of",
    "start": "1033000",
    "end": "1039079"
  },
  {
    "text": "thousands of of cache nodes and then uh we use utns predominantly for all all",
    "start": "1039079",
    "end": "1044640"
  },
  {
    "text": "our API um and like so for example anything that uh Asgard controls",
    "start": "1044640",
    "end": "1050400"
  },
  {
    "text": "typically is registered in Ultra DNS um and they they're all different",
    "start": "1050400",
    "end": "1055760"
  },
  {
    "text": "API models mostly broken and um so this is one of the challenges uh is that some",
    "start": "1055760",
    "end": "1063280"
  },
  {
    "text": "of the um you know Clarity you might have with certain modern apis like github's a pretty good API um none of",
    "start": "1063280",
    "end": "1069840"
  },
  {
    "text": "these are like that um so some of the features sets that we were focusing on with",
    "start": "1069840",
    "end": "1076159"
  },
  {
    "start": "1072000",
    "end": "1194000"
  },
  {
    "text": "denominator were to do things in batches um because particularly we have um some",
    "start": "1076159",
    "end": "1083159"
  },
  {
    "text": "pretty large zones um and so if you have something with 10,000 records in it then",
    "start": "1083159",
    "end": "1088320"
  },
  {
    "text": "you're not really going to want to do those one at a time you end up with um in instead of um constant time for",
    "start": "1088320",
    "end": "1095159"
  },
  {
    "text": "operations you end up with linear time which really hurts you if you have uh a lot of of Records to deal with um also",
    "start": "1095159",
    "end": "1103400"
  },
  {
    "text": "being able to cleanly handle advanced records and I'll talk more about advanced records but basically anything",
    "start": "1103400",
    "end": "1109120"
  },
  {
    "text": "that has a server side profile like for example if it's latency optimized or if it's bound to a certain set of Geo",
    "start": "1109120",
    "end": "1115960"
  },
  {
    "text": "territories um this would be something that I would refer to as advanced record",
    "start": "1115960",
    "end": "1121039"
  },
  {
    "text": "um and play nights with persistence uh because uh we persist uh internally uh",
    "start": "1121039",
    "end": "1128000"
  },
  {
    "text": "we interact with this uh and we back it with a service called denominator which is a control plane that's built on",
    "start": "1128000",
    "end": "1134960"
  },
  {
    "text": "Cassandra and we want to make sure that these this data is easy to query and easy to get in and out of Json stuff",
    "start": "1134960",
    "end": "1141600"
  },
  {
    "text": "like that so and finally don't do too much Netflix has a lot of projects for",
    "start": "1141600",
    "end": "1147559"
  },
  {
    "text": "things like resiliency and uh command retries and circuit breakers so we want",
    "start": "1147559",
    "end": "1153480"
  },
  {
    "text": "to make sure that each of our um each of our components we design are not also doing all of those things because then",
    "start": "1153480",
    "end": "1159720"
  },
  {
    "text": "you just end up with a you know complex web we'd rather Bol on the things that we need so we want to make sure that",
    "start": "1159720",
    "end": "1166200"
  },
  {
    "text": "denominator doesn't try to do too much because we have a lot of tools for doing the system aspects that we can just use",
    "start": "1166200",
    "end": "1172679"
  },
  {
    "text": "around them one of them for example is a service we have ribbon uh which is a client on the open source site and this",
    "start": "1172679",
    "end": "1179799"
  },
  {
    "text": "allows like a normal rest or RPC client to to be able to use low balancers and",
    "start": "1179799",
    "end": "1185559"
  },
  {
    "text": "things like that so we don't need to deal with like the retry and a for Loop stuff that you end up having with rest",
    "start": "1185559",
    "end": "1193400"
  },
  {
    "text": "clients cool things is also important um keeps you motivated when you're working with soap so um this is what it looks",
    "start": "1193400",
    "end": "1200640"
  },
  {
    "start": "1194000",
    "end": "1330000"
  },
  {
    "text": "like to start denominator from java um and this is uh one of the thing that",
    "start": "1200640",
    "end": "1208720"
  },
  {
    "text": "most people don't really like so much is the fact that it uses iterators um and",
    "start": "1208720",
    "end": "1215320"
  },
  {
    "text": "there's two reasons for this one is is that we have a pretty cool project called RX Java which is um functional",
    "start": "1215320",
    "end": "1223280"
  },
  {
    "text": "reactive programming it's Observer model and observer model is a fantastic way of",
    "start": "1223280",
    "end": "1228360"
  },
  {
    "text": "AG gting resources and things like lists and things are are",
    "start": "1228360",
    "end": "1235000"
  },
  {
    "text": "less good but particularly they often line because most of the contracts for things like iterable imply that you're supposed to",
    "start": "1235000",
    "end": "1241440"
  },
  {
    "text": "be able to replay things I'm supposed to be able to to call iterator more than once and because these are network",
    "start": "1241440",
    "end": "1247520"
  },
  {
    "text": "connections and trying not to do that too much thing we don't want to cash this data particularly because you can",
    "start": "1247520",
    "end": "1253679"
  },
  {
    "text": "blow up your HEAP so the optimization is that okay we will probably have a",
    "start": "1253679",
    "end": "1259520"
  },
  {
    "text": "functional reactive model which will allow us to push like Zone information to you um and in the meantime we don't",
    "start": "1259520",
    "end": "1266960"
  },
  {
    "text": "want our normal like iterator thing um to be too cachy just because there's a",
    "start": "1266960",
    "end": "1272679"
  },
  {
    "text": "short form of the for Loop in Java for iterable and so that's that's the",
    "start": "1272679",
    "end": "1279000"
  },
  {
    "text": "rationale and I'm I'm positive some folks are not going to particularly care for it but I figured i' put it out there",
    "start": "1279000",
    "end": "1284960"
  },
  {
    "text": "just so your your blood can boil a little um when denominator creates uh a",
    "start": "1284960",
    "end": "1291559"
  },
  {
    "text": "lot of our providers have multi-art credentials so some of them have just a user and password some of them require a",
    "start": "1291559",
    "end": "1297600"
  },
  {
    "text": "tenant uh and some other things like that so we we have some mechanisms to support variable length and and map",
    "start": "1297600",
    "end": "1304080"
  },
  {
    "text": "keyed credentials and Abstract as well as the ability to do that on demand from",
    "start": "1304080",
    "end": "1309799"
  },
  {
    "text": "various suppliers uh for example we have a um a service uh ribbon that allows it",
    "start": "1309799",
    "end": "1317120"
  },
  {
    "text": "to inject things like um end points dynamically based on what's what's",
    "start": "1317120",
    "end": "1322440"
  },
  {
    "text": "registered in Zookeeper so we might we might get things from different places um but this is a way to",
    "start": "1322440",
    "end": "1328640"
  },
  {
    "text": "statically define it um DNS lingo uh so zone is what a lot",
    "start": "1328640",
    "end": "1336880"
  },
  {
    "start": "1330000",
    "end": "1486000"
  },
  {
    "text": "of people call a domain or subdomain um technically speaking uh DNS is a tree",
    "start": "1336880",
    "end": "1342679"
  },
  {
    "text": "and it makes things really complicated if you think too hard um so zone is is",
    "start": "1342679",
    "end": "1348279"
  },
  {
    "text": "uh sort of a a noun that's defined in like the main implementation of DNS",
    "start": "1348279",
    "end": "1353559"
  },
  {
    "text": "called bind and we're using that word most people use it um records are things",
    "start": "1353559",
    "end": "1360919"
  },
  {
    "text": "inside of it and so uh Records are really the things you tend to be looking up um zone is like a name space for",
    "start": "1360919",
    "end": "1367679"
  },
  {
    "text": "those records now um what most people get confused about in DNS is like C name",
    "start": "1367679",
    "end": "1373760"
  },
  {
    "text": "versus a um and basically in DNS there's a kind of a record format and on the far",
    "start": "1373760",
    "end": "1381000"
  },
  {
    "text": "right is the data and the far left is the name of it and the type is describing what's on the far right",
    "start": "1381000",
    "end": "1387120"
  },
  {
    "text": "what's the data so if the the record name is a then that means that there's",
    "start": "1387120",
    "end": "1392559"
  },
  {
    "text": "an address at the right hand side that's an IP address if it's quad it's an IP",
    "start": "1392559",
    "end": "1398400"
  },
  {
    "text": "address four times as big which means it's an IPv6 address um C name means canonical name",
    "start": "1398400",
    "end": "1406080"
  },
  {
    "text": "and it's an interesting thing because canonical implies the one like the Highlander one so if I have a c name",
    "start": "1406080",
    "end": "1413960"
  },
  {
    "text": "that I'm pointing to my like canonical name uh what is the real name for this",
    "start": "1413960",
    "end": "1419600"
  },
  {
    "text": "thing so if you're making a DNS record and you're and you're putting a name in the field for data it's a c name record",
    "start": "1419600",
    "end": "1426760"
  },
  {
    "text": "and C names are are weird because of this implication of being canonical means that a c name can only have one",
    "start": "1426760",
    "end": "1433039"
  },
  {
    "text": "name at the right hand side whereas an address is not trying to be so I could put a list of IP addresses there I could",
    "start": "1433039",
    "end": "1438960"
  },
  {
    "text": "I could give uh eight IP addresses and then my JavaScript could just round robin through all of them because in one",
    "start": "1438960",
    "end": "1445039"
  },
  {
    "text": "DNS query it's valid to have many IP addresses returned from an a record um C",
    "start": "1445039",
    "end": "1450559"
  },
  {
    "text": "name because by definition it can only have one like Highlander one then if I",
    "start": "1450559",
    "end": "1455880"
  },
  {
    "text": "have a JavaScript thing that pulls back that I'm going to get one value um now I",
    "start": "1455880",
    "end": "1462039"
  },
  {
    "text": "can resolve that back to IP addresses but um the one value thing makes for",
    "start": "1462039",
    "end": "1467600"
  },
  {
    "text": "advanced records um and um so basically you you you would",
    "start": "1467600",
    "end": "1472760"
  },
  {
    "text": "probably want to for availability concerns be able to to allow the client",
    "start": "1472760",
    "end": "1477880"
  },
  {
    "text": "to use multiple load balancers not just one and so this is this is sort of how we start getting into advanced",
    "start": "1477880",
    "end": "1485760"
  },
  {
    "text": "records um when writing denominator we optimize for record sets um this",
    "start": "1485760",
    "end": "1492440"
  },
  {
    "text": "basically means uh anything with the same name and type so netflix.com address type record you",
    "start": "1492440",
    "end": "1499480"
  },
  {
    "text": "might have you know several IPS coming back to you um those would all be in the same record",
    "start": "1499480",
    "end": "1505960"
  },
  {
    "text": "set and um this is also helpful because DNS security DNS SEC um likes to sign",
    "start": "1505960",
    "end": "1512520"
  },
  {
    "text": "Things based on a query tupple and that query Tuple includes the name and the type and so uh there would be a",
    "start": "1512520",
    "end": "1519799"
  },
  {
    "text": "corresponding signature for that name and type and so for the for DNS records",
    "start": "1519799",
    "end": "1525159"
  },
  {
    "text": "that need to be signed um you have to really aggre them into record sets anyway um very few people do that",
    "start": "1525159",
    "end": "1531720"
  },
  {
    "text": "because there's a lot of maintenance involved in DNS SEC but that's one of the reasons",
    "start": "1531720",
    "end": "1537520"
  },
  {
    "text": "why um DNS things um name servers are uh servers that typically list in on Port",
    "start": "1537520",
    "end": "1544279"
  },
  {
    "start": "1538000",
    "end": "1597000"
  },
  {
    "text": "53 that's why Amazon Services named Route 53 a pun on Route 66 but using",
    "start": "1544279",
    "end": "1549720"
  },
  {
    "text": "Port 53 um resolver is a thing that's asking the server",
    "start": "1549720",
    "end": "1555320"
  },
  {
    "text": "questions and so the resolver could be inside your it could be inside your um",
    "start": "1555320",
    "end": "1561440"
  },
  {
    "text": "ja Java virtual machine um it could be delegated back to your OSX or whatever",
    "start": "1561440",
    "end": "1567000"
  },
  {
    "text": "it is that you happen to be using but the resolver is the thing making the qu making the questions the name server is",
    "start": "1567000",
    "end": "1572039"
  },
  {
    "text": "the thing trying to find the answers and when I use the word API of course that can be used for anything but I'm just",
    "start": "1572039",
    "end": "1577559"
  },
  {
    "text": "trying to differentiate between sort of the line of fire stuff which is between this resolver and the name servers and",
    "start": "1577559",
    "end": "1585080"
  },
  {
    "text": "your control plane work where you're actually going through and um trying to",
    "start": "1585080",
    "end": "1590240"
  },
  {
    "text": "reorganize your domains or your records and that's that's what I'm going to use the word API",
    "start": "1590240",
    "end": "1596559"
  },
  {
    "text": "for now um dagger is pretty cool how many here have heard of dagger before",
    "start": "1596559",
    "end": "1603600"
  },
  {
    "start": "1597000",
    "end": "1861000"
  },
  {
    "text": "and I'm switching to Java by the way this is not a DNS concept um how many here have heard of",
    "start": "1603600",
    "end": "1610840"
  },
  {
    "text": "juice uh how many here have heard of spring okay we got spring definitely so",
    "start": "1610840",
    "end": "1616760"
  },
  {
    "text": "spring and and a lot of people new juice so spring uh is literally 10 years old I",
    "start": "1616760",
    "end": "1622080"
  },
  {
    "text": "think maybe as of a week ago um so uh spring popularized uh dependency",
    "start": "1622080",
    "end": "1628279"
  },
  {
    "text": "injection right and um and then I think five years ago um uh juice came around",
    "start": "1628279",
    "end": "1636559"
  },
  {
    "text": "and it said hey uh we're writing in Java why don't we write our configuration in Java too and drop the drop the config",
    "start": "1636559",
    "end": "1644799"
  },
  {
    "text": "files and allowed you to do things like um you know uh be able to check in your",
    "start": "1644799",
    "end": "1650200"
  },
  {
    "text": "eclipse or whatever your favorite IDE is and find the references to all your configuration and and things and it was",
    "start": "1650200",
    "end": "1656880"
  },
  {
    "text": "much smaller like 500k um or even I think maybe even smaller than that um dagger was made by",
    "start": "1656880",
    "end": "1664159"
  },
  {
    "text": "uh crazy Bob and Jesse Wilson and the folks that made juice uh that were formerly at Google and now are working",
    "start": "1664159",
    "end": "1671120"
  },
  {
    "text": "at Square like the critic card Square um and uh this is this has made to optimize",
    "start": "1671120",
    "end": "1677320"
  },
  {
    "text": "it the dependency injection problem a little bit further and also make it possible to use the same model on uh",
    "start": "1677320",
    "end": "1685200"
  },
  {
    "text": "regular Java as you do for guit or uh Android and so for example can you do U",
    "start": "1685200",
    "end": "1693159"
  },
  {
    "text": "dependency injection with with no reflection and that's the problem that they're attacking it's very interesting",
    "start": "1693159",
    "end": "1699159"
  },
  {
    "text": "technology um in a nutshell it it says okay do it in Java C instead of at",
    "start": "1699159",
    "end": "1705000"
  },
  {
    "text": "runtime so so basically if I if I forgot to wire up something together Java c",
    "start": "1705000",
    "end": "1711240"
  },
  {
    "text": "will fail that's pretty cool right so inside of of a denominator we",
    "start": "1711240",
    "end": "1719279"
  },
  {
    "text": "wire things together up with with a dagger so for example this is a a",
    "start": "1719279",
    "end": "1724399"
  },
  {
    "text": "jclouds context Builder thing and so on the left hand side you're providing",
    "start": "1724399",
    "end": "1729519"
  },
  {
    "text": "things on the right hand side you're requesting things and so I'm saying I I want to provide a Singleton and when",
    "start": "1729519",
    "end": "1736480"
  },
  {
    "text": "this if I have like all these a bunch of methods like this um I'm basically building a graph right and um the cool",
    "start": "1736480",
    "end": "1744640"
  },
  {
    "text": "there's a couple cool things about dagger one is is that um if you think it through my graph is validated and",
    "start": "1744640",
    "end": "1750840"
  },
  {
    "text": "compiled into Java code um so that means that it's it's static and that means it's it should be faster than than doing",
    "start": "1750840",
    "end": "1757960"
  },
  {
    "text": "runtime analysis and then trying to figure it out as you go along probably will have less problems at runtime",
    "start": "1757960",
    "end": "1763640"
  },
  {
    "text": "because your grass's not going to change on you um the other thing that is kind of Handy is especially because it's not",
    "start": "1763640",
    "end": "1770799"
  },
  {
    "text": "runtime uh aspects such as Singleton or lazy or other things um are are actually",
    "start": "1770799",
    "end": "1777000"
  },
  {
    "text": "a lot more useful uh for those of you who've used dependency injectors that have Scopes like single tin and things",
    "start": "1777000",
    "end": "1783440"
  },
  {
    "text": "like that you notice to make it at runtime they have to sometimes make really coarse locks to to get that to",
    "start": "1783440",
    "end": "1789039"
  },
  {
    "text": "work um when you do it at compile time you don't have as much complexity",
    "start": "1789039",
    "end": "1794600"
  },
  {
    "text": "because you don't have to consider things changing on you um and so so it's it's pretty interesting and at the end",
    "start": "1794600",
    "end": "1800200"
  },
  {
    "text": "of the day you can look at the code the classes will end up being named dollar sign dollar sign inject adapter so if I",
    "start": "1800200",
    "end": "1808320"
  },
  {
    "text": "if I was um producing this I would have a class in my source uh my uh Target",
    "start": "1808320",
    "end": "1815679"
  },
  {
    "text": "classes directory called Route 53 API dollar sign dollar sign um inject",
    "start": "1815679",
    "end": "1820960"
  },
  {
    "text": "adapter and I can just look at the code and see how it works it's pretty pretty nice dagger's runtime is is no run time",
    "start": "1820960",
    "end": "1828559"
  },
  {
    "text": "because all of it's done at compile time which means that the overhead of dagger is I think 5",
    "start": "1828559",
    "end": "1834480"
  },
  {
    "text": "kiloby so um I can't fathom any dependency injection",
    "start": "1834480",
    "end": "1840519"
  },
  {
    "text": "system you know like that right spring was made to kind of like make what was",
    "start": "1840519",
    "end": "1846360"
  },
  {
    "text": "then web logic and J boss which seemed very heavy lighter juice was made to",
    "start": "1846360",
    "end": "1851720"
  },
  {
    "text": "look make spring lighter and then diger made to make this lighter I don't know if we'll get lower than 5K but I'm sure",
    "start": "1851720",
    "end": "1858320"
  },
  {
    "text": "someone will figure that out uh we use adapters on vendor",
    "start": "1858320",
    "end": "1864880"
  },
  {
    "start": "1861000",
    "end": "1887000"
  },
  {
    "text": "specifics so for example in this in this jcla API um it has a a robust",
    "start": "1864880",
    "end": "1871440"
  },
  {
    "text": "implementation of the DX service but we only need a few bits from that so we",
    "start": "1871440",
    "end": "1876519"
  },
  {
    "text": "adapt out and uh we we adapt out into the denominator model which is simpler",
    "start": "1876519",
    "end": "1882399"
  },
  {
    "text": "doesn't mean that it's not powerful and our model ALS also has some",
    "start": "1882399",
    "end": "1888559"
  },
  {
    "start": "1887000",
    "end": "1977000"
  },
  {
    "text": "interesting things that some people will will love or hate uh one is is that anything that is",
    "start": "1888559",
    "end": "1894840"
  },
  {
    "text": "extensible um we Implement as extending a forwarding",
    "start": "1894840",
    "end": "1900600"
  },
  {
    "text": "map and there's a very good reason for this uh one is you don't know what your",
    "start": "1900600",
    "end": "1905880"
  },
  {
    "text": "extensions are ahead of time and we have we have Java it's nice and type safe and we like our Getters and stuff and we",
    "start": "1905880",
    "end": "1912760"
  },
  {
    "text": "know they're not going to change on us but um we don't want to if you don't",
    "start": "1912760",
    "end": "1918480"
  },
  {
    "text": "want to deal with a registration model always but you do want to be able to facilitate um uh advanced records from",
    "start": "1918480",
    "end": "1926120"
  },
  {
    "text": "any given DNS provider without having to a Lynch pin of coordination to decide what those class models are then you do",
    "start": "1926120",
    "end": "1932240"
  },
  {
    "text": "the sort of Json thing which is you punt to map and and so that's what what we do",
    "start": "1932240",
    "end": "1939240"
  },
  {
    "text": "in our denominator any model that we have that's extensible so we have this thing called profile which describes the",
    "start": "1939240",
    "end": "1945519"
  },
  {
    "text": "advanced uh record type and and we have corresponding um getter with with the",
    "start": "1945519",
    "end": "1952320"
  },
  {
    "text": "map keys that are enforced uh when we actually right into the Constructor so we still do the type safety um but for",
    "start": "1952320",
    "end": "1960039"
  },
  {
    "text": "convenience and also for help just arbitrarily um bumping this out into Json or allowing folks to um to be able",
    "start": "1960039",
    "end": "1969440"
  },
  {
    "text": "to do ex do extensions without even publishing them um we use maps for",
    "start": "1969440",
    "end": "1974760"
  },
  {
    "text": "things like that uh the profiles are the server side",
    "start": "1974760",
    "end": "1980720"
  },
  {
    "start": "1977000",
    "end": "2016000"
  },
  {
    "text": "configuration so these are things like um is this latency optimized for Europe",
    "start": "1980720",
    "end": "1987159"
  },
  {
    "text": "or is this um does this have health checks built in like that it's automatically going to fail over when",
    "start": "1987159",
    "end": "1992840"
  },
  {
    "text": "something happens that's what we use profiles for and so for example the most",
    "start": "1992840",
    "end": "1999480"
  },
  {
    "text": "uh important profile for Netflix is a goo profile because that's how we can transition uh like Argentina to use a a",
    "start": "1999480",
    "end": "2007320"
  },
  {
    "text": "test version of an application that might be U optimized for",
    "start": "2007320",
    "end": "2015039"
  },
  {
    "text": "Argentina now when we're looking at managing availability um what we are",
    "start": "2015200",
    "end": "2020799"
  },
  {
    "start": "2016000",
    "end": "2170000"
  },
  {
    "text": "looking at is a combination of dealing with different territories and also the",
    "start": "2020799",
    "end": "2026639"
  },
  {
    "text": "way that territories are defined in different API models so we have the UN",
    "start": "2026639",
    "end": "2032720"
  },
  {
    "text": "we have um the iso organizations and there's probably a few few dozen ways to",
    "start": "2032720",
    "end": "2039240"
  },
  {
    "text": "describe a a country or a state and and this is a reality we have there's",
    "start": "2039240",
    "end": "2044960"
  },
  {
    "text": "there's a lot of different ways of doing it I can do it from sort of a geological standpoint I can do it from a jurisdictional standpoint uh there's",
    "start": "2044960",
    "end": "2051960"
  },
  {
    "text": "many ways and many types of of depth there so it's not wrong that the models are a little bit different for example",
    "start": "2051960",
    "end": "2058720"
  },
  {
    "text": "inside of ultra DNS it's it's more like the iso",
    "start": "2058720",
    "end": "2064200"
  },
  {
    "text": "3166 uh which means like us hyen ca for California or ar for",
    "start": "2064200",
    "end": "2070960"
  },
  {
    "text": "Argentina um and but in DNS what we're really doing is it's not magic um if I",
    "start": "2070960",
    "end": "2080560"
  },
  {
    "text": "know someone's in California I only know that because I've looked up their IP address and and I have some database",
    "start": "2080560",
    "end": "2086679"
  },
  {
    "text": "that tells me that this IP address is likely to have originated from California there's there's uh uh at",
    "start": "2086679",
    "end": "2093960"
  },
  {
    "text": "least in DNS DNS doesn't have the metadata about someone's GPS so unless you have a service that",
    "start": "2093960",
    "end": "2101320"
  },
  {
    "text": "can actually propagate uh GPS data then you can't really guarantee that that",
    "start": "2101320",
    "end": "2107520"
  },
  {
    "text": "that um um that entity that has an IP address is coming from a specific spot",
    "start": "2107520",
    "end": "2112960"
  },
  {
    "text": "so that's how it works in DNS um now uh Netflix itself after DNS we have our own",
    "start": "2112960",
    "end": "2119720"
  },
  {
    "text": "thing called Geo which is a service that even can read G GPS data and ver verify",
    "start": "2119720",
    "end": "2125160"
  },
  {
    "text": "locations of folks but this is mainly just turn the hose in the right direction knowing that some will have to",
    "start": "2125160",
    "end": "2131079"
  },
  {
    "text": "redirect out but at least you get the the 90 some per and so that's that's how we how we use this stuff and we use it",
    "start": "2131079",
    "end": "2137760"
  },
  {
    "text": "also to deal with migration so for example say we're bringing on a new uh low balancer for the West Coast uh and",
    "start": "2137760",
    "end": "2145400"
  },
  {
    "text": "we want to test that service out we can um just pluck States on we literally do that we we've ranked um the 50 US states",
    "start": "2145400",
    "end": "2154720"
  },
  {
    "text": "into um basically prioritize bucket based on traffic and then and then we",
    "start": "2154720",
    "end": "2159800"
  },
  {
    "text": "can move um you know two states at a time test youat make sure everything works and that way we can go through and",
    "start": "2159800",
    "end": "2167119"
  },
  {
    "text": "and go back pretty easily um so basically in availability",
    "start": "2167119",
    "end": "2172640"
  },
  {
    "start": "2170000",
    "end": "2246000"
  },
  {
    "text": "terms we're looking to achieve availability by reshaping traffic to places where kind of we know better",
    "start": "2172640",
    "end": "2180040"
  },
  {
    "text": "because we have health metrics about certain things that would allow us to say for example Virginia's in trouble",
    "start": "2180040",
    "end": "2187119"
  },
  {
    "text": "even if in Virginia use California um these are sort sort of things that we can do sort of like override switches we",
    "start": "2187119",
    "end": "2194079"
  },
  {
    "text": "have when we when we can control based on the client's origin um I can't release the actual um",
    "start": "2194079",
    "end": "2201200"
  },
  {
    "text": "traffic distribution per state but it's very very interesting um some states uh",
    "start": "2201200",
    "end": "2206960"
  },
  {
    "text": "you know have an order of magnitude more traffic than others even at the same time of day um so it's not just like the",
    "start": "2206960",
    "end": "2213200"
  },
  {
    "text": "hours of the day going by there's a lot of different like social behaviors and people just like particular content more",
    "start": "2213200",
    "end": "2220280"
  },
  {
    "text": "and so uh there there's a lot of reasons why traffic could be um more interesting",
    "start": "2220280",
    "end": "2226599"
  },
  {
    "text": "than just um what time of day it is stuff like that so we can use these tools to do this this is just an image",
    "start": "2226599",
    "end": "2232520"
  },
  {
    "text": "of ultra DNS they have some uh pretty interesting um analytics tools now for",
    "start": "2232520",
    "end": "2238599"
  },
  {
    "text": "uh showing distribution and time series data of of U where client queries are",
    "start": "2238599",
    "end": "2244560"
  },
  {
    "text": "coming from so this Geo profile um what we have",
    "start": "2244560",
    "end": "2250079"
  },
  {
    "start": "2246000",
    "end": "2322000"
  },
  {
    "text": "is we have uh you know it's a profile so we need to know what type it is it's Geo",
    "start": "2250079",
    "end": "2256200"
  },
  {
    "text": "um the groups that we have in Netflix typically we have a group per um per",
    "start": "2256200",
    "end": "2261599"
  },
  {
    "text": "traffic bucket so for example uh for services where we have low balancers in",
    "start": "2261599",
    "end": "2267480"
  },
  {
    "text": "uh EU Us West and Us East we will we will make up a geog group that sounds",
    "start": "2267480",
    "end": "2274280"
  },
  {
    "text": "like that and generally it's like this this this and everybody else because it",
    "start": "2274280",
    "end": "2280480"
  },
  {
    "text": "isn't just that we're serving traffic for us uh east and west and Europe we're",
    "start": "2280480",
    "end": "2286400"
  },
  {
    "text": "serving traffic for the entire world so we need to figure out which of these",
    "start": "2286400",
    "end": "2291640"
  },
  {
    "text": "which of these um groups um when assigned to the right lad balancers can",
    "start": "2291640",
    "end": "2297359"
  },
  {
    "text": "can take the rest of the world's traffic because we don't have API servers in",
    "start": "2297359",
    "end": "2302520"
  },
  {
    "text": "every single data center in the world although we do have this massive cach grid um our all of our apis like all of",
    "start": "2302520",
    "end": "2309760"
  },
  {
    "text": "our rest apis are running out of Amazon clouds and there's there's only so many regions they have so we do need to make",
    "start": "2309760",
    "end": "2315599"
  },
  {
    "text": "choices as far as which countries go to which uh Cloud",
    "start": "2315599",
    "end": "2321318"
  },
  {
    "text": "endpoints this is sort of what the Java looks like um so uh what we do is uh",
    "start": "2321960",
    "end": "2329079"
  },
  {
    "start": "2322000",
    "end": "2392000"
  },
  {
    "text": "this is using uh guava how many here have you have used or heard of guava before uh guava is like a functional",
    "start": "2329079",
    "end": "2336160"
  },
  {
    "text": "Java uh and Effective Java uh in a library it's kind of nice it adds new",
    "start": "2336160",
    "end": "2342359"
  },
  {
    "text": "types called multimap and things like that table some extra collection types and some uh uh function and predicate",
    "start": "2342359",
    "end": "2349800"
  },
  {
    "text": "logic so if you like using languages like closure or Scala uh you'll probably",
    "start": "2349800",
    "end": "2355720"
  },
  {
    "text": "enjoy Java more if you use guava and pitch um basically what I'm saying here",
    "start": "2355720",
    "end": "2361839"
  },
  {
    "text": "is I I want to move um the the territories that I have except for",
    "start": "2361839",
    "end": "2367960"
  },
  {
    "text": "California uh someplace else and so I can write write code to do that in",
    "start": "2367960",
    "end": "2373040"
  },
  {
    "text": "reality we we use uh uh our control plane uses Cassandra and we will have uh",
    "start": "2373040",
    "end": "2379520"
  },
  {
    "text": "some queries that happen there so we'll just prepare the entire like record set update out of a Cassandra query um but",
    "start": "2379520",
    "end": "2387160"
  },
  {
    "text": "this is how you could do it programmatically in Java um Airline is a project we use um",
    "start": "2387160",
    "end": "2394359"
  },
  {
    "start": "2392000",
    "end": "2992000"
  },
  {
    "text": "so one of the things about denominators is that a Java library but we also know that we have a lot of network",
    "start": "2394359",
    "end": "2401280"
  },
  {
    "text": "administrators that use DNS right unsurprisingly and not many of them would prefer to operate in Eclipse like",
    "start": "2401280",
    "end": "2410240"
  },
  {
    "text": "they're not going to say oh I need to make a DNS change let me fire up Eclipse so we need to make a a command line tool",
    "start": "2410240",
    "end": "2416680"
  },
  {
    "text": "to facilitate the reality of this this problem domain and so there's a really",
    "start": "2416680",
    "end": "2421800"
  },
  {
    "text": "cool um project uh in the airlift um uh Repository",
    "start": "2421800",
    "end": "2427960"
  },
  {
    "text": "uh called Airline and um this basically allows us to write um get like",
    "start": "2427960",
    "end": "2435000"
  },
  {
    "text": "clis and so uh things with expected um naming conventions for commands and",
    "start": "2435000",
    "end": "2441520"
  },
  {
    "text": "parameters and help statements without as much of the work and so um we're also",
    "start": "2441520",
    "end": "2447560"
  },
  {
    "text": "using a process uh now Airline I believe was um originally authored by um Brian",
    "start": "2447560",
    "end": "2454280"
  },
  {
    "text": "mallister who had this uh process called really executable jar and what that",
    "start": "2454280",
    "end": "2459839"
  },
  {
    "text": "means is that you can actually take a Java jar file and and execute it without saying Java minus jar that file you can",
    "start": "2459839",
    "end": "2466880"
  },
  {
    "text": "just do slash it on a Unix prompt and it's a pretty interesting trick um and",
    "start": "2466880",
    "end": "2472800"
  },
  {
    "text": "uh that's that's baked into our build scripts um so anyway you mark up a a",
    "start": "2472800",
    "end": "2479200"
  },
  {
    "text": "pojo basically U it doesn't have to implement any interface that just happens to be a a abstract class I have",
    "start": "2479200",
    "end": "2485839"
  },
  {
    "text": "called denominator command and so those descriptions and everything will will magically Place themselves inside the",
    "start": "2485839",
    "end": "2493480"
  },
  {
    "text": "the resulting executable pretty cool stuff um now I figured I've talked quite",
    "start": "2493480",
    "end": "2500960"
  },
  {
    "text": "enough and got enough time to answer some quick questions and also click",
    "start": "2500960",
    "end": "2506040"
  },
  {
    "text": "around and show you some things so go ahead that thing you said about",
    "start": "2506040",
    "end": "2513039"
  },
  {
    "text": "really yeah sure I can randomly click over there so let's",
    "start": "2514319",
    "end": "2521000"
  },
  {
    "text": "see if I make",
    "start": "2521000",
    "end": "2524920"
  },
  {
    "text": "sure all right so if I go to this is the checkout of denominator denominators on",
    "start": "2526400",
    "end": "2532560"
  },
  {
    "text": "GitHub under Netflix and if I go to the",
    "start": "2532560",
    "end": "2537880"
  },
  {
    "text": "CLI now uh we're we're using Gradle for the Bild tool but you could do this with Maven there's a built-in Maven plugin",
    "start": "2537880",
    "end": "2544040"
  },
  {
    "text": "called really executable jar plugin um but",
    "start": "2544040",
    "end": "2551559"
  },
  {
    "text": "um uh if I look at my build Gradle here um",
    "start": "2551559",
    "end": "2559480"
  },
  {
    "text": "so here's a really ex goodable jar stuff so Brian's website's called",
    "start": "2561000",
    "end": "2566200"
  },
  {
    "text": "Sky um and uh this is the the the",
    "start": "2566200",
    "end": "2571960"
  },
  {
    "text": "Wizardry basically what happens is that if so so a jar um you could open in your",
    "start": "2571960",
    "end": "2579960"
  },
  {
    "text": "text editor if you really wanted to it wouldn't be fun but it can work um the",
    "start": "2579960",
    "end": "2585880"
  },
  {
    "text": "zip format ignores the header basically before it before it gets there's a certain there's a certain marker in zip",
    "start": "2585880",
    "end": "2593040"
  },
  {
    "text": "format that after which it starts reading and before which it ignores you can use that header spot and stuff in a",
    "start": "2593040",
    "end": "2600839"
  },
  {
    "text": "shell script that says exec Java so if you write a shell script that",
    "start": "2600839",
    "end": "2606640"
  },
  {
    "text": "just says EXA Java and then you cat to the end of that your jar file then after",
    "start": "2606640",
    "end": "2611680"
  },
  {
    "text": "that you can just um use it so for example if I have uh right now um we",
    "start": "2611680",
    "end": "2619319"
  },
  {
    "text": "have this uploaded into home brew so if you did like Brew install denominator it",
    "start": "2619319",
    "end": "2624920"
  },
  {
    "text": "would work um but I already have it installed but if I just do denominator",
    "start": "2624920",
    "end": "2631480"
  },
  {
    "text": "version um I didn't have to do Java whatever but if I I look at denominator",
    "start": "2631480",
    "end": "2640960"
  },
  {
    "text": "itself oh yeah let's see look at the first two",
    "start": "2641160",
    "end": "2648839"
  },
  {
    "text": "lines of that file now there's my thing that redirects",
    "start": "2648839",
    "end": "2655359"
  },
  {
    "text": "me into Java but if I looked further I would just see Nast nasty you know jar",
    "start": "2655359",
    "end": "2662480"
  },
  {
    "text": "stuff and I can jar minus tvf that file",
    "start": "2662480",
    "end": "2668480"
  },
  {
    "text": "it's perfectly valid right but I'm tricking the file",
    "start": "2668480",
    "end": "2674800"
  },
  {
    "text": "system a little bit because it it thinks my jar file is a shell script now so",
    "start": "2674800",
    "end": "2681559"
  },
  {
    "text": "it's this makes for a very easy distribution model of command line tools um and uh recently a guy in um in",
    "start": "2681559",
    "end": "2692000"
  },
  {
    "text": "uh the open source group we're working with uh Shane he's digital sanctum he added uh",
    "start": "2692000",
    "end": "2697880"
  },
  {
    "text": "um config file support So denominator uh you can do commands like I want to look",
    "start": "2697880",
    "end": "2704400"
  },
  {
    "text": "at my my Ral 53 test",
    "start": "2704400",
    "end": "2709520"
  },
  {
    "text": "environment um and my config file would be denominator",
    "start": "2709520",
    "end": "2715240"
  },
  {
    "text": "whatever I do a list of my [Music] zones um one of the things that this is",
    "start": "2715240",
    "end": "2722520"
  },
  {
    "text": "denominator 1.1 one of the things we're working on in 1.2 is to make this faster",
    "start": "2722520",
    "end": "2728160"
  },
  {
    "text": "because there's a lot of overhead um this still uses juice and um juice is",
    "start": "2728160",
    "end": "2736400"
  },
  {
    "text": "responsible because because of a lot of the single tins that are in the existing code um it does take a lot longer than",
    "start": "2736400",
    "end": "2744520"
  },
  {
    "text": "you would expect a command to take and particularly if you're working with uh systems administrators they're not really kind of happy with all these few",
    "start": "2744520",
    "end": "2751880"
  },
  {
    "text": "second lags um they're used to curl and other utilities they just return like NS",
    "start": "2751880",
    "end": "2757800"
  },
  {
    "text": "lookup right if I want to do NS lookup yahoo.com I would want it to happen",
    "start": "2757800",
    "end": "2764040"
  },
  {
    "text": "quickly like very responsively like 20 now in Java we're never going to get to",
    "start": "2764040",
    "end": "2769359"
  },
  {
    "text": "20 milliseconds because the jvm takes longer than that to start up however if we look at if we look at what our",
    "start": "2769359",
    "end": "2776119"
  },
  {
    "text": "overhead is if I do time of denominator using our",
    "start": "2776119",
    "end": "2783519"
  },
  {
    "text": "mock uh minus provider mock zone",
    "start": "2784119",
    "end": "2790000"
  },
  {
    "text": "list then you know my jvm is pro you know it's not too bad I",
    "start": "2790280",
    "end": "2797640"
  },
  {
    "text": "happen to know that 100 milliseconds of that is actually parsing the command line arguments with airlift but uh it's still it's you know",
    "start": "2797640",
    "end": "2805839"
  },
  {
    "text": "you should be able to make a web service call and return in less than a second if my whole",
    "start": "2805839",
    "end": "2811000"
  },
  {
    "text": "jvm it only takes 300 milliseconds so one of the things that's happening now with uh denominator is",
    "start": "2811000",
    "end": "2819319"
  },
  {
    "text": "we're working on a new um uh core",
    "start": "2819319",
    "end": "2824960"
  },
  {
    "text": "Library um that's based 100% on dagger so everything's compile time or as much as we can and it's",
    "start": "2824960",
    "end": "2832520"
  },
  {
    "text": "called because a lot of the apis we deal with are figing restfulness they're not really restful they're kind of weird",
    "start": "2832520",
    "end": "2838079"
  },
  {
    "text": "they're HTP um but they're but they're not that simple to use and what Fain does is it allows to",
    "start": "2838079",
    "end": "2847160"
  },
  {
    "text": "use things like regular Expressions to uh to parse your responses as opposed to",
    "start": "2847160",
    "end": "2852720"
  },
  {
    "text": "like um a jaxby thing that would take you 100 milliseconds to initialize or",
    "start": "2852720",
    "end": "2858000"
  },
  {
    "text": "longer um and it also is completely written from ground up in dagger and",
    "start": "2858000",
    "end": "2865720"
  },
  {
    "text": "guava only which means that the jar file even with five providers even every",
    "start": "2865720",
    "end": "2871280"
  },
  {
    "text": "every dependency included is 2 and2 megabytes so that's very fast for jav to",
    "start": "2871280",
    "end": "2877200"
  },
  {
    "text": "launch it's very fast for it to scan the class path and because everything's uh woven together at compile time the",
    "start": "2877200",
    "end": "2884160"
  },
  {
    "text": "processing is is very fast so the overhead dropped uh when I I have a example of of working with this where",
    "start": "2884160",
    "end": "2891319"
  },
  {
    "text": "the overhead dropped from uh 680 milliseconds to 50 so that was kind of",
    "start": "2891319",
    "end": "2897280"
  },
  {
    "text": "cool and basically what Fain",
    "start": "2897280",
    "end": "2902440"
  },
  {
    "text": "implies is you you end up with a factory so",
    "start": "2902440",
    "end": "2908559"
  },
  {
    "text": "so I can create new instances of a marked up API that's marked up with um",
    "start": "2908559",
    "end": "2914280"
  },
  {
    "text": "like Jacks annotations and then the couple extended ones and I can make many",
    "start": "2914280",
    "end": "2919440"
  },
  {
    "text": "apis out of that now in Netflix uh we have uh some pretty interesting concerns",
    "start": "2919440",
    "end": "2926400"
  },
  {
    "text": "because a lot of our services are looked up by a zookeeper um we have a lot of dynamic service Discovery uh going on so",
    "start": "2926400",
    "end": "2934000"
  },
  {
    "text": "when we want to find the URLs for services and and how we actually interact with them we need to be able to",
    "start": "2934000",
    "end": "2940319"
  },
  {
    "text": "do that at runtime so one of the things that Fain optimizes for is that you can",
    "start": "2940319",
    "end": "2946760"
  },
  {
    "text": "not only dynamically change the url but you can dynamically change any part of the request before it sent which means",
    "start": "2946760",
    "end": "2954400"
  },
  {
    "text": "that I can strip all tokens from here use this different service I can fall back to something else and I have a very",
    "start": "2954400",
    "end": "2960480"
  },
  {
    "text": "simple interface just using a guava function in equals out and and do that",
    "start": "2960480",
    "end": "2965720"
  },
  {
    "text": "so um F's pretty exciting tool and that that will result in denominator one two",
    "start": "2965720",
    "end": "2972720"
  },
  {
    "text": "which should hopefully be at least previewable in the next week or two um",
    "start": "2972720",
    "end": "2978400"
  },
  {
    "text": "return a command um like from R 53 in about a second so at that point um the",
    "start": "2978400",
    "end": "2987640"
  },
  {
    "text": "only way that your network administrator would know that it was written in Java is if you told them all right I'm going",
    "start": "2987640",
    "end": "2992799"
  },
  {
    "text": "to switch right back I think I probably only have one or two minutes but I I promised I would go to the cloud price",
    "start": "2992799",
    "end": "2998200"
  },
  {
    "text": "so don't want to leave you without that so um here are the categories um of the 10 categories now",
    "start": "2998200",
    "end": "3006640"
  },
  {
    "start": "3001000",
    "end": "3055000"
  },
  {
    "text": "some of you have heard of monkeys those are the things that kind of they're like our cron jobs uh and they look at things",
    "start": "3006640",
    "end": "3012559"
  },
  {
    "text": "and they report and they sometimes take action sometimes kill things um do we",
    "start": "3012559",
    "end": "3017799"
  },
  {
    "text": "have ways of contributing to qu quality that we have't thought up like sometimes people looking at Netflix code may say",
    "start": "3017799",
    "end": "3023720"
  },
  {
    "text": "man you guys should be doing this it so sucks well here's your opportunity to show us and and get you know Fame glory",
    "start": "3023720",
    "end": "3030319"
  },
  {
    "text": "and 10K um portability enhancements uh would allow you to like run Netflix on",
    "start": "3030319",
    "end": "3035720"
  },
  {
    "text": "different languages or different clouds or whatever stuff you might be interested in um I can read all these",
    "start": "3035720",
    "end": "3041440"
  },
  {
    "text": "categories to you but there's 10 categories that's the important thing and then there's the the we know we",
    "start": "3041440",
    "end": "3047960"
  },
  {
    "text": "haven't figured out all the interesting things you might come up with so there's a judge's Choice Award for the category that doesn't",
    "start": "3047960",
    "end": "3054359"
  },
  {
    "text": "exist um the process is we're underway every contribution has",
    "start": "3054359",
    "end": "3059640"
  },
  {
    "text": "to be aache licensed so we can sub license it out to folks in Apache license so if it ain't Apache ain't",
    "start": "3059640",
    "end": "3065680"
  },
  {
    "text": "going to be accepted um still time uh the entry is closed on September 15th so",
    "start": "3065680",
    "end": "3072160"
  },
  {
    "text": "we highly expect a lot of them on September 13th um and then the award ceremony are",
    "start": "3072160",
    "end": "3078680"
  },
  {
    "text": "are our emies is going to happen at the Amazon reinvent conference uh and that's",
    "start": "3078680",
    "end": "3084799"
  },
  {
    "text": "the judges um uh we'll be selecting from uh nominations that that were",
    "start": "3084799",
    "end": "3092000"
  },
  {
    "text": "categorized um and suggested through the engineering team the entrance um uh if",
    "start": "3092000",
    "end": "3098880"
  },
  {
    "text": "you look can follow those those lines basically um my myself and others and",
    "start": "3098880",
    "end": "3104040"
  },
  {
    "text": "the team will help filter these into into the the right uh categories the main responsibilities from the entrance",
    "start": "3104040",
    "end": "3110240"
  },
  {
    "text": "are just go to GitHub uh Netflix Cloud prizes a repository it has instructions",
    "start": "3110240",
    "end": "3116240"
  },
  {
    "text": "they're not too difficult um so there's not many rules as as it is like in Netflix in general um but you make sure",
    "start": "3116240",
    "end": "3125079"
  },
  {
    "text": "your code works at least if it's code and um the more traction the better so",
    "start": "3125079",
    "end": "3131839"
  },
  {
    "text": "um we are in the cloud but we're not about Pie in the Sky everything on netflex open source repository is used in production so um if you have",
    "start": "3131839",
    "end": "3139520"
  },
  {
    "text": "something that's that's uh working and also has traction from someone that's that's definitely going to bump you into",
    "start": "3139520",
    "end": "3145440"
  },
  {
    "text": "the higher consideration categories uh it's not just cash you also get 5,000 Amazon credits I always forget to",
    "start": "3145440",
    "end": "3151119"
  },
  {
    "text": "mention that but for some people that's pretty important um pretty nice and a",
    "start": "3151119",
    "end": "3156480"
  },
  {
    "text": "trophy that'd be cool so um the uh and for those who",
    "start": "3156480",
    "end": "3162760"
  },
  {
    "start": "3158000",
    "end": "3210000"
  },
  {
    "text": "aren't interested in why why Netflix does open source uh last a little bit on that we spent a lot of time on Netflix",
    "start": "3162760",
    "end": "3169480"
  },
  {
    "text": "uh working on functionality and scale um knowing that when you optimize for certain things you're not optimizing for",
    "start": "3169480",
    "end": "3175760"
  },
  {
    "text": "something else um so we're currently working on portability denominator is part of that but also some of the open source work is",
    "start": "3175760",
    "end": "3183000"
  },
  {
    "text": "is helping us with that um we've been we have a bunch of projects but we're",
    "start": "3183000",
    "end": "3188720"
  },
  {
    "text": "working towards a platform that you could deploy and be able to sort of have the whole application life cycle uh",
    "start": "3188720",
    "end": "3195359"
  },
  {
    "text": "similar to what we use if it's helpful to you and um generally what we're",
    "start": "3195359",
    "end": "3200559"
  },
  {
    "text": "trying to do is make sure that that we increase our our um uh our ability to",
    "start": "3200559",
    "end": "3207359"
  },
  {
    "text": "evolve and get done so takeway is",
    "start": "3207359",
    "end": "3212440"
  },
  {
    "text": "denominator is what we're using for DNS it's got cool stuff in it too um we're",
    "start": "3212440",
    "end": "3217599"
  },
  {
    "text": "fixing the DNS apis like the last release of denominator included a lot of serious fixes that dramatically increase",
    "start": "3217599",
    "end": "3223960"
  },
  {
    "text": "the performance of the clouds uh we have leverage to do that being Netflix we're pretty important customers so we can",
    "start": "3223960",
    "end": "3229960"
  },
  {
    "text": "definitely help proxy some serious issues and um I guess I don't want you",
    "start": "3229960",
    "end": "3235079"
  },
  {
    "text": "to subscribe to anything because I put them in unreadable links um but uh anyway we have Google",
    "start": "3235079",
    "end": "3242040"
  },
  {
    "text": "Groups for denominator we have GitHub account and uh and you can also follow",
    "start": "3242040",
    "end": "3247079"
  },
  {
    "text": "on Twitter so thanks for coming [Applause]",
    "start": "3247079",
    "end": "3254250"
  },
  {
    "text": "[Music]",
    "start": "3254250",
    "end": "3262719"
  }
]