[
  {
    "text": "[Music]",
    "start": "1800",
    "end": "11840"
  },
  {
    "text": "uh I'm going to talk about new challenges and approaches for Enterprise Java is there if there are any questions",
    "start": "11840",
    "end": "17039"
  },
  {
    "text": "feel free to ask me um let me spend a little bit of time talking about myself",
    "start": "17039",
    "end": "24519"
  },
  {
    "text": "so my name is IA hard wolf I'm the architecture and Technology manager of",
    "start": "24519",
    "end": "30000"
  },
  {
    "text": "for adesso adesu is um an it consultancy in Germany you can probably tell by my",
    "start": "30000",
    "end": "36120"
  },
  {
    "text": "um English that I'm from Germany uh so I'm a speaker I wrote the first um",
    "start": "36120",
    "end": "41760"
  },
  {
    "text": "German Spring Book and several other books mostly German uh I do have a Blog which is in English I I'm on Twitter",
    "start": "41760",
    "end": "48879"
  },
  {
    "text": "almost all of the tweets are in English um presentations also all of them in English and there is an email address if",
    "start": "48879",
    "end": "55480"
  },
  {
    "text": "you want to reach me okay so what we are going to talk about is uh or what I'm going to talk",
    "start": "55480",
    "end": "61399"
  },
  {
    "text": "about is uh which challenges I see for Enterprise Java in general and uh which",
    "start": "61399",
    "end": "68880"
  },
  {
    "text": "I think um Solutions we have for them or answers we have for them so let me start",
    "start": "68880",
    "end": "74439"
  },
  {
    "text": "by talking about why I think this presentation makes some sense Java has a",
    "start": "74439",
    "end": "80680"
  },
  {
    "text": "broad support in the industry and in particular in the Enterprise there is a lot of java being used um at the same",
    "start": "80680",
    "end": "88400"
  },
  {
    "text": "time the world changing so there are no SQL databases there is the devops",
    "start": "88400",
    "end": "93759"
  },
  {
    "text": "movement that uh joins development and operations there is the cloud which",
    "start": "93759",
    "end": "99960"
  },
  {
    "text": "seems to change quite a few things and if you look at in particular startups",
    "start": "99960",
    "end": "105880"
  },
  {
    "text": "and um what they are doing they are using those Technologies so I think in",
    "start": "105880",
    "end": "111759"
  },
  {
    "text": "the traditional Enterprise um space there is something to be learned from those startups and also if you look at",
    "start": "111759",
    "end": "117920"
  },
  {
    "text": "it quite a few of these things are are tied to technologies that are not really Java like Ruby for example so the",
    "start": "117920",
    "end": "124920"
  },
  {
    "text": "question is what is the impact of this whole thing to us as Enterprise Java",
    "start": "124920",
    "end": "130360"
  },
  {
    "text": "developers um this is sort of an well sort of a silly slide so I mean what is",
    "start": "130360",
    "end": "136959"
  },
  {
    "text": "Java so if you look at it there is the language there is a programming model called Java e for the Enterprise there",
    "start": "136959",
    "end": "143760"
  },
  {
    "text": "is there are web servers or servers in general and there is the jvm I think",
    "start": "143760",
    "end": "150959"
  },
  {
    "text": "the most important parts of the Su Java ecosystems are the service and the jvm",
    "start": "150959",
    "end": "156720"
  },
  {
    "text": "the reason for that is because they are ubiquitous and also the jbm is well optimized so if you look at the",
    "start": "156720",
    "end": "163519"
  },
  {
    "text": "competitive Advantage compared to other ecosystems I think it boils down to the",
    "start": "163519",
    "end": "169400"
  },
  {
    "text": "to the fact that servers javab base servers are everywhere and that is also",
    "start": "169400",
    "end": "174800"
  },
  {
    "text": "why programming languages like closure for example are running on the jvm and don't",
    "start": "174800",
    "end": "180640"
  },
  {
    "text": "um don't invent their own virtual machines so like all these new languages and like",
    "start": "180640",
    "end": "188560"
  },
  {
    "text": "all the other things that are going on there I think the Enterprise developers also have to ask themselves how they can",
    "start": "188560",
    "end": "195200"
  },
  {
    "text": "Leverage The this ecosystems in the best way um yeah this is all subjective these",
    "start": "195200",
    "end": "202400"
  },
  {
    "text": "are my own uh opinions and uh it is obviously hard to predict the future so",
    "start": "202400",
    "end": "207920"
  },
  {
    "text": "this is just my attempt on doing so so let's start off by taking a look",
    "start": "207920",
    "end": "214840"
  },
  {
    "text": "at the traditional web applications that we are probably all used to so if you",
    "start": "214840",
    "end": "220040"
  },
  {
    "text": "look at them the way they work is there is a browser that talks",
    "start": "220040",
    "end": "225280"
  },
  {
    "text": "HTTP uh to a web application server and um then HTML is generated on that web",
    "start": "225280",
    "end": "234079"
  },
  {
    "text": "application server and then there is a database or some backend systems that you talk to uh using jdbc or web",
    "start": "234079",
    "end": "241360"
  },
  {
    "text": "services or whatever there is um the role that Java plays in this game is",
    "start": "241360",
    "end": "248480"
  },
  {
    "text": "that it renders the HTML so there is a lot of logic that just takes the stuff from the database from the back end and",
    "start": "248480",
    "end": "254959"
  },
  {
    "text": "renders HTML out of that implemented is this using surls so um",
    "start": "254959",
    "end": "264759"
  },
  {
    "text": "the model used here is the surl model it uses a thread pool and if a new request",
    "start": "264759",
    "end": "270160"
  },
  {
    "text": "comes in uh a threat is taken from the pool the request is um served worked on",
    "start": "270160",
    "end": "278560"
  },
  {
    "text": "and uh then the HTML is generated and",
    "start": "278560",
    "end": "284600"
  },
  {
    "text": "returned in suret 3.0 it is possible to suspend and resume handling of a request",
    "start": "284600",
    "end": "291840"
  },
  {
    "text": "the reason is because uh that way you can uh freeze some resources while uh",
    "start": "291840",
    "end": "298280"
  },
  {
    "text": "suspending the the operations on the request so that more requests can be",
    "start": "298280",
    "end": "303800"
  },
  {
    "text": "done in parallel and threats are not hanging around there uh being blocked by",
    "start": "303800",
    "end": "309000"
  },
  {
    "text": "IO instead they they will be uh suspended for the time the io takes",
    "start": "309000",
    "end": "314320"
  },
  {
    "text": "however that is not too easy so you actually have to call um a method on the",
    "start": "314320",
    "end": "320120"
  },
  {
    "text": "request to suspend uh the work on the request okay now there are new web",
    "start": "320120",
    "end": "326800"
  },
  {
    "text": "applications and if you look at them they are quite different so uh what we are seeing there is a",
    "start": "326800",
    "end": "333240"
  },
  {
    "text": "browser that does the HTML rendering implemented in JavaScript these are the",
    "start": "333240",
    "end": "338720"
  },
  {
    "text": "famous onepage applications where you have a JavaScript uh application framework that talks to some no SQL",
    "start": "338720",
    "end": "346440"
  },
  {
    "text": "databases for example using HTTP and rest so there are no SQL databases that just return the data in Jon which can",
    "start": "346440",
    "end": "355400"
  },
  {
    "text": "easily be used by the JavaScript system in the browser and be rendered into",
    "start": "355400",
    "end": "361880"
  },
  {
    "text": "HTML this used to be something that you would do on the server side using Java",
    "start": "361880",
    "end": "367039"
  },
  {
    "text": "the other thing that is happening is that there are other backend systems that are still implemented using Java um",
    "start": "367039",
    "end": "374000"
  },
  {
    "text": "and they talk to the to the front end using rest and HTTP which is actually quite similar to the model that you're",
    "start": "374000",
    "end": "379720"
  },
  {
    "text": "used to because the model that you're used to using surfs does the same thing so there is HTTP there is stuff returned",
    "start": "379720",
    "end": "387360"
  },
  {
    "text": "and speaking rest over HTT p with let's say Json it's not that different from",
    "start": "387360",
    "end": "393440"
  },
  {
    "text": "what uh HTML does however there are also websockets that's a new protocol uh that",
    "start": "393440",
    "end": "400479"
  },
  {
    "text": "allows you to do uh Communication in both directions from the client to the server and the other way around uh for",
    "start": "400479",
    "end": "408360"
  },
  {
    "text": "Real Time updates for example and this is actually a new challenge so we will take talk about that in more detail the",
    "start": "408360",
    "end": "415039"
  },
  {
    "text": "web or application server is has a pretty reduced role in this setting",
    "start": "415039",
    "end": "420759"
  },
  {
    "text": "because all it does is it just returns basic static HTML the JavaScript code",
    "start": "420759",
    "end": "428240"
  },
  {
    "text": "and that's it so there is no in the most radical form there is no logic",
    "start": "428240",
    "end": "434160"
  },
  {
    "text": "implemented on the web server anymore it's all done in JavaScript there might",
    "start": "434160",
    "end": "439240"
  },
  {
    "text": "still be logic and then you would have a hybrid between this model and the the",
    "start": "439240",
    "end": "444280"
  },
  {
    "text": "old model but uh generally speaking that's not necessary so the new thing",
    "start": "444280",
    "end": "450720"
  },
  {
    "text": "here and the new technology here that is that matters are web sockets and if",
    "start": "450720",
    "end": "456680"
  },
  {
    "text": "you look at it uh the other thing that is also happening is that there is more logic in JavaScript so that means that",
    "start": "456680",
    "end": "465240"
  },
  {
    "text": "um stuff that you would otherwise write in Java is now done in",
    "start": "465240",
    "end": "470720"
  },
  {
    "text": "JavaScript websockets is also interesting because um there is not no",
    "start": "470720",
    "end": "475960"
  },
  {
    "text": "standard yet so if you look at Java e and the standardized Java ecosystem it",
    "start": "475960",
    "end": "482680"
  },
  {
    "text": "doesn't really have an answer to that at the moment um the other problem is the surl",
    "start": "482680",
    "end": "488960"
  },
  {
    "text": "model won't work for web sockets the reason is because in the web socket",
    "start": "488960",
    "end": "494599"
  },
  {
    "text": "space every client has its own connection and if you use the surfleet",
    "start": "494599",
    "end": "500080"
  },
  {
    "text": "model that basically has one thread for each connection you will have an enormous number of open threats and open",
    "start": "500080",
    "end": "507800"
  },
  {
    "text": "connections and that is not really possible on a server so what you need to",
    "start": "507800",
    "end": "514560"
  },
  {
    "text": "do is you need to somehow work asynchronously so first of all you need",
    "start": "514560",
    "end": "519839"
  },
  {
    "text": "to be able to handle more than one connection using one thread because otherwise you will have uh the number of",
    "start": "519839",
    "end": "525760"
  },
  {
    "text": "threats will be too large and the other problem is that if there is some IO going on and the thread is blocked then",
    "start": "525760",
    "end": "533279"
  },
  {
    "text": "that might have severe consequences because one threat is responsible for quite a few clients and all these",
    "start": "533279",
    "end": "539120"
  },
  {
    "text": "clients cents would wait for the thread to be freed and do its work so that",
    "start": "539120",
    "end": "545360"
  },
  {
    "text": "means that the add synchronous behavior that was added to Surf flets shouldn't really be an afterthought it should be",
    "start": "545360",
    "end": "551399"
  },
  {
    "text": "baked into the model firsthand and it should probably be used throughout the deack because if you do",
    "start": "551399",
    "end": "558560"
  },
  {
    "text": "some IO so you go to the file system for example you it is not you shouldn't",
    "start": "558560",
    "end": "564000"
  },
  {
    "text": "block the current work on the current websocket instead another web blet",
    "start": "564000",
    "end": "569760"
  },
  {
    "text": "should be served while you're waiting for the io on the file and so on so you should have non-blocking IO asynchronous",
    "start": "569760",
    "end": "577640"
  },
  {
    "text": "work and so on there is a way to do that um or there",
    "start": "577640",
    "end": "583880"
  },
  {
    "text": "is a model that um is quite a good fit for that uh the ector model the idea of",
    "start": "583880",
    "end": "589600"
  },
  {
    "text": "the ector model that um is implemented in Scala for example but also in other",
    "start": "589600",
    "end": "595040"
  },
  {
    "text": "languages like earling basically says there is a single threaded Act",
    "start": "595040",
    "end": "600079"
  },
  {
    "text": "that also encapsulates the state the benefit of this model is that there is just one threat working on the state so",
    "start": "600079",
    "end": "608000"
  },
  {
    "text": "there is no concurrent access to state so there is a lot less problems concerning uh",
    "start": "608000",
    "end": "614279"
  },
  {
    "text": "concurrency the other thing that happens is that this actor um receives messages",
    "start": "614279",
    "end": "621240"
  },
  {
    "text": "and sends messages and these messages are queued up so what you can easily do",
    "start": "621240",
    "end": "626640"
  },
  {
    "text": "now is you can use this model to work with um websocket so let's take a look",
    "start": "626640",
    "end": "634040"
  },
  {
    "text": "at the ector model in more detail um it's quite a nice model for developers",
    "start": "634040",
    "end": "640120"
  },
  {
    "text": "because all they see is the single thread model which is nice it's not too hard to to reason about it concurrency",
    "start": "640120",
    "end": "647200"
  },
  {
    "text": "is solved by running uh multiple actors in parallel so that's how you get",
    "start": "647200",
    "end": "652600"
  },
  {
    "text": "concurrency in there by just execute by just having more actors uh so for",
    "start": "652600",
    "end": "658720"
  },
  {
    "text": "example one actor for each client when um a message is received it",
    "start": "658720",
    "end": "665360"
  },
  {
    "text": "will at one point be handled so that's asynchronous there is no waiting no",
    "start": "665360",
    "end": "671519"
  },
  {
    "text": "synchronous communication to the outside instead a message is handled and at one point uh an answer sent out so you can",
    "start": "671519",
    "end": "680600"
  },
  {
    "text": "run quite a lot of actors you can have one threat serving multiple actors and",
    "start": "680600",
    "end": "688920"
  },
  {
    "text": "um working on quite a few message cues models that or Frameworks that actually",
    "start": "688920",
    "end": "694839"
  },
  {
    "text": "Implement that is are for example e AKA which is uh based on Scala the other",
    "start": "694839",
    "end": "700639"
  },
  {
    "text": "framework that is probably not too well known is uh vertex vertex is actually I",
    "start": "700639",
    "end": "707320"
  },
  {
    "text": "think quite an interesting uh technology so we are going to talk about I'm going to talk about vertex in quite a few",
    "start": "707320",
    "end": "713639"
  },
  {
    "text": "places um it is you can think of it as um sort of a clone of the ideas in",
    "start": "713639",
    "end": "721800"
  },
  {
    "text": "nodejs so asynchronous Behavior asynchronous programming model and uh I",
    "start": "721800",
    "end": "728200"
  },
  {
    "text": "think it's quite interesting as we will see later on because it actually takes it to um to quite a distance okay",
    "start": "728200",
    "end": "738360"
  },
  {
    "text": "so that's the ector model and they are I believe they are",
    "start": "738360",
    "end": "743519"
  },
  {
    "text": "quite a good foundation for websockets because what you can do now is you can just have one actor for each web socket",
    "start": "743519",
    "end": "750600"
  },
  {
    "text": "and um they are only they only do consume resources when a message arrives",
    "start": "750600",
    "end": "756480"
  },
  {
    "text": "so when there the threat the CPU is only really executed and used when there is a",
    "start": "756480",
    "end": "763600"
  },
  {
    "text": "message that needs to be worked on um I think this might actually quite",
    "start": "763600",
    "end": "770040"
  },
  {
    "text": "interesting because so far actors have really had their strength in areas where",
    "start": "770040",
    "end": "776399"
  },
  {
    "text": "there is a lot of concurrent processing that needs to take place um and in particular in the",
    "start": "776399",
    "end": "782760"
  },
  {
    "text": "Enterprise bace I'm not sure whether there are a lot of applications that actually have a need for these kinds of",
    "start": "782760",
    "end": "790000"
  },
  {
    "text": "parallel processing uh most of the time the the Enterprise applications that at least I",
    "start": "790000",
    "end": "796240"
  },
  {
    "text": "know are concerned with transforming data handling HTTP requests and not with",
    "start": "796240",
    "end": "801760"
  },
  {
    "text": "complex calculations that need to be paralyzed so I believe that um actors",
    "start": "801760",
    "end": "809240"
  },
  {
    "text": "are a good fit for the websocket model and for that reason uh they actually",
    "start": "809240",
    "end": "815320"
  },
  {
    "text": "might um add some value here to web Frameworks and might um be become much",
    "start": "815320",
    "end": "823000"
  },
  {
    "text": "more popular examples of that are uh the play framework again using uh AKA for",
    "start": "823000",
    "end": "829600"
  },
  {
    "text": "websockets and again the web vertex framework which uses its own actor- like",
    "start": "829600",
    "end": "835279"
  },
  {
    "text": "model to also handle websockets",
    "start": "835279",
    "end": "840040"
  },
  {
    "text": "so to sum up um more of the logic more of the HTML rendering is done in",
    "start": "840360",
    "end": "845480"
  },
  {
    "text": "JavaScript instead of java I believe the important new technology that might",
    "start": "845480",
    "end": "851880"
  },
  {
    "text": "impact the Java world are web sockets because if you look at rest backends",
    "start": "851880",
    "end": "857120"
  },
  {
    "text": "that's not too different from what we are used to it's just that we are rendering uh Json instead of HTML or XML",
    "start": "857120",
    "end": "864399"
  },
  {
    "text": "or whatever but web sockets are different I'm not sure how important they actually will be because the the",
    "start": "864399",
    "end": "871240"
  },
  {
    "text": "big benefit of websockets is to have communication in both directions so basically the question is how many",
    "start": "871240",
    "end": "877440"
  },
  {
    "text": "applications are you going to implement in the future that actually have um a",
    "start": "877440",
    "end": "883199"
  },
  {
    "text": "server talking to a client and pushing data from the server to the client if",
    "start": "883199",
    "end": "889079"
  },
  {
    "text": "that is the case then you will probably go for websockets and then you will probably need to have a different programming",
    "start": "889079",
    "end": "895519"
  },
  {
    "text": "model because websockets are hard to a support using a model that is that is",
    "start": "895519",
    "end": "901639"
  },
  {
    "text": "inspired by surfleet and I believe actors might be a good solution for that",
    "start": "901639",
    "end": "906720"
  },
  {
    "text": "so that's I think the first thing concerning um HTML and and web",
    "start": "906720",
    "end": "914399"
  },
  {
    "text": "applications there are other more General um issues if you look at the",
    "start": "914399",
    "end": "920360"
  },
  {
    "text": "Java e model I mean uh what has been criticized in the past is the",
    "start": "920360",
    "end": "925600"
  },
  {
    "text": "programming model and uh the Java e model has learned from that and has a",
    "start": "925600",
    "end": "930680"
  },
  {
    "text": "pretty much uh improved programming model there however there is also the",
    "start": "930680",
    "end": "937040"
  },
  {
    "text": "development model and the original plan for Java Enterprise was to have one Java e server that would serve multiple",
    "start": "937040",
    "end": "944160"
  },
  {
    "text": "applications so in my case there is one Java e server and there are three applications running on top of that and",
    "start": "944160",
    "end": "951600"
  },
  {
    "text": "that is if you look at it what was originally intended with Java e however",
    "start": "951600",
    "end": "958440"
  },
  {
    "text": "if you look at the real world today what you usually end up with",
    "start": "958440",
    "end": "963680"
  },
  {
    "text": "is quite a few servers serving the same application so it's actually quite the",
    "start": "963680",
    "end": "969519"
  },
  {
    "text": "opposite the reason is um you want to to use a cluster for load balancing for",
    "start": "969519",
    "end": "976240"
  },
  {
    "text": "easy scaling out for high availability and so on and um you well can sort of",
    "start": "976240",
    "end": "984560"
  },
  {
    "text": "saturate one server already with one application there",
    "start": "984560",
    "end": "990279"
  },
  {
    "text": "are other issues um so the Java e model",
    "start": "990279",
    "end": "996319"
  },
  {
    "text": "tries to isolate the applications because each application has its own class Lo so there is no way that the",
    "start": "996319",
    "end": "1003000"
  },
  {
    "text": "applications can see classes from one another so in that sense they isolated however the problem is that it's only",
    "start": "1003000",
    "end": "1010319"
  },
  {
    "text": "the classes that are isolated from one another so if um the application server",
    "start": "1010319",
    "end": "1016639"
  },
  {
    "text": "for example does garbage collection then the performance hit will be taken by all",
    "start": "1016639",
    "end": "1021880"
  },
  {
    "text": "applications so they will all stop so that means if you talk if you",
    "start": "1021880",
    "end": "1028760"
  },
  {
    "text": "talk about memory and CPU actually the applications on a Java",
    "start": "1028760",
    "end": "1034520"
  },
  {
    "text": "server are not isolated from one another and that's a problem because there is no",
    "start": "1034520",
    "end": "1040520"
  },
  {
    "text": "way that you can it doesn't make a lot of sense to run several different applications on the same server if you",
    "start": "1040520",
    "end": "1047400"
  },
  {
    "text": "can't really isolate them because and if one application goes nuts then it hits all the",
    "start": "1047400",
    "end": "1053919"
  },
  {
    "text": "applications so the isolation in Java e is sort of",
    "start": "1053919",
    "end": "1059039"
  },
  {
    "text": "Half Baked and the problem is that this Half Bake isolation leads to other problems",
    "start": "1059039",
    "end": "1066360"
  },
  {
    "text": "so if you look at it um we all know modularization is a",
    "start": "1066360",
    "end": "1072000"
  },
  {
    "text": "good thing uh so we want to apply that to Java e and let's assume that we want",
    "start": "1072000",
    "end": "1078600"
  },
  {
    "text": "to to uh deploy those modules independently so the idea is there's",
    "start": "1078600",
    "end": "1084840"
  },
  {
    "text": "some piece of logic that is shared by multiple applications and this piece of logic needs to be updated independently",
    "start": "1084840",
    "end": "1091840"
  },
  {
    "text": "from the applications because you want to well simplify the process and so on and so on",
    "start": "1091840",
    "end": "1100320"
  },
  {
    "text": "that is not possible because models modules cannot share classes because they are isolated from one another the",
    "start": "1100320",
    "end": "1106760"
  },
  {
    "text": "only exceptions are ear files uh so in an e file you can have several",
    "start": "1106760",
    "end": "1112240"
  },
  {
    "text": "modules and those modules can share classes with one another but then you still haven't solved the problem because",
    "start": "1112240",
    "end": "1119400"
  },
  {
    "text": "these individual PS of the ear file cannot be deployed",
    "start": "1119400",
    "end": "1125280"
  },
  {
    "text": "independently so what people usually end up with is um a",
    "start": "1125280",
    "end": "1130840"
  },
  {
    "text": "system um that uses uh the web services",
    "start": "1130840",
    "end": "1136080"
  },
  {
    "text": "uh anti pattern I called it so what they do is they create a system like this",
    "start": "1136080",
    "end": "1141960"
  },
  {
    "text": "where there is an application that talks soap to some module and this module",
    "start": "1141960",
    "end": "1147760"
  },
  {
    "text": "again talks soap to another module all the modules uh are War files and they",
    "start": "1147760",
    "end": "1153880"
  },
  {
    "text": "can obviously be deployed independently because well um deploying an",
    "start": "1153880",
    "end": "1160200"
  },
  {
    "text": "application or a war file is of course very possible however um it is a complex",
    "start": "1160200",
    "end": "1169480"
  },
  {
    "text": "and inefficient model because what you do is uh you are",
    "start": "1169480",
    "end": "1174720"
  },
  {
    "text": "talking over HTTP over soap over XML uh to some other system running on the very",
    "start": "1174720",
    "end": "1181559"
  },
  {
    "text": "same machine and you could easily have a local call instead which would eliminate",
    "start": "1181559",
    "end": "1187200"
  },
  {
    "text": "the XML handling as well as the HTTP and would therefore become be much less",
    "start": "1187200",
    "end": "1193559"
  },
  {
    "text": "complex and also much more efficient and so this is not really a",
    "start": "1193559",
    "end": "1199080"
  },
  {
    "text": "good solution this is an anti pattern because there is so much performance that you're losing",
    "start": "1199080",
    "end": "1206759"
  },
  {
    "text": "there okay so we need to have a solution for that there are other problems as",
    "start": "1207000",
    "end": "1212400"
  },
  {
    "text": "well uh so not too long ago I was sitting next to a guy in my company and",
    "start": "1212400",
    "end": "1217440"
  },
  {
    "text": "we were trying to solve a problem and what happened was that we changed some code we compiled the classes uh an an",
    "start": "1217440",
    "end": "1225640"
  },
  {
    "text": "script was run and it zipped together w that wfire was deployed then the war was",
    "start": "1225640",
    "end": "1231679"
  },
  {
    "text": "unzipped and so on and so on so basically what you're doing is um you're",
    "start": "1231679",
    "end": "1236720"
  },
  {
    "text": "zipping the whole thing in a war file you're deploying it and you're unzipping it again almost immediately so all",
    "start": "1236720",
    "end": "1244400"
  },
  {
    "text": "you're doing is you're heating up the CPU and that's it and it doesn't really solve any",
    "start": "1244400",
    "end": "1249960"
  },
  {
    "text": "problems it's just a waste of time and um that is actually quite",
    "start": "1249960",
    "end": "1255280"
  },
  {
    "text": "unfortunate and the reason why this is happening is because um the Java e specification doesn't",
    "start": "1255280",
    "end": "1261400"
  },
  {
    "text": "really talk about an easier model for deployment you",
    "start": "1261400",
    "end": "1267000"
  },
  {
    "text": "could which is again sort of strange because if you look at jsps I mean one",
    "start": "1267000",
    "end": "1273039"
  },
  {
    "text": "of the original reasons for jsps was to the ability to change code in the JSP",
    "start": "1273039",
    "end": "1279600"
  },
  {
    "text": "and get immediate feedback however somehow this was was lost later on with",
    "start": "1279600",
    "end": "1285159"
  },
  {
    "text": "uh packaging war fights and so on there are solutions to that so there is a jrebel that allows you to",
    "start": "1285159",
    "end": "1293000"
  },
  {
    "text": "um to deploy new applications or new classes on the run while the system is",
    "start": "1293000",
    "end": "1299480"
  },
  {
    "text": "running without shutting it down there are solutions like play Grails or the",
    "start": "1299480",
    "end": "1304679"
  },
  {
    "text": "maven Tom Maven tomare plugin that um sort of tries to solve the the problem",
    "start": "1304679",
    "end": "1312279"
  },
  {
    "text": "in specific circumstances so they have their own um environments that are",
    "start": "1312279",
    "end": "1317520"
  },
  {
    "text": "specifically tuned for development however there is no General",
    "start": "1317520",
    "end": "1324080"
  },
  {
    "text": "standardized solution so there is no common solution for all the web servers and I believe this is quite important",
    "start": "1324080",
    "end": "1331080"
  },
  {
    "text": "because there might be quite a productivity gain because you get um a much faster turnaround",
    "start": "1331080",
    "end": "1339120"
  },
  {
    "text": "time so this independent deployment is actually um quite a",
    "start": "1339279",
    "end": "1349000"
  },
  {
    "text": "significant point and as I said earlier there are issues there um I think again",
    "start": "1349000",
    "end": "1355679"
  },
  {
    "text": "actors might be a solution there because if you look at it actors already have",
    "start": "1355679",
    "end": "1361960"
  },
  {
    "text": "this message CU where cues are piled up and the only thing that you need to do is you need to have a way for those",
    "start": "1361960",
    "end": "1370159"
  },
  {
    "text": "actors to work without any shared classes now that's not too hard and we",
    "start": "1370159",
    "end": "1376200"
  },
  {
    "text": "already know the solution because that's what Al what we're doing in this web service anti pattern instead of using",
    "start": "1376200",
    "end": "1381720"
  },
  {
    "text": "shared classes we use a different mechanism or a different data modeling",
    "start": "1381720",
    "end": "1387320"
  },
  {
    "text": "like Json for example or XML again vertex um has a solution like this built",
    "start": "1387320",
    "end": "1394600"
  },
  {
    "text": "in so what it has is there is uh a bus",
    "start": "1394600",
    "end": "1400000"
  },
  {
    "text": "that you that uh can exchange messages and you can use Json as a",
    "start": "1400000",
    "end": "1406400"
  },
  {
    "text": "payload and then you exactly have you you're ex exactly ending up with the",
    "start": "1406400",
    "end": "1411559"
  },
  {
    "text": "model that I'm proposing so a model where there is um data modeled as Json so there are no",
    "start": "1411559",
    "end": "1420279"
  },
  {
    "text": "shared classes um all the communication is asychronous so even if you if you uh rip",
    "start": "1420279",
    "end": "1428000"
  },
  {
    "text": "out the um receiver of the messages the system will still run because the messages are just piled up and as soon",
    "start": "1428000",
    "end": "1435679"
  },
  {
    "text": "as the system comes the the the actor comes up again uh it will work again and",
    "start": "1435679",
    "end": "1441600"
  },
  {
    "text": "work on those messages that have piled up so that's a solution however rather",
    "start": "1441600",
    "end": "1448200"
  },
  {
    "text": "well it's it's early for that solution another solution that comes to mind is",
    "start": "1448200",
    "end": "1454000"
  },
  {
    "text": "osgi it's interesting because uh nowadays OSG is actually gaining traction on the server so if you look at",
    "start": "1454000",
    "end": "1461159"
  },
  {
    "text": "the most popular Java e servers they actually do have support for SGI um and the US GI solution is",
    "start": "1461159",
    "end": "1469279"
  },
  {
    "text": "probably the most complete solution however it's also quite complex the reason why it is so complex is because",
    "start": "1469279",
    "end": "1478039"
  },
  {
    "text": "osgi allows you to reload classes at run time which is exactly what I want I want",
    "start": "1478039",
    "end": "1483360"
  },
  {
    "text": "to be able to redeploy parts of my application so I need to reload classes",
    "start": "1483360",
    "end": "1488840"
  },
  {
    "text": "however that's not too easy in particular it's not too easy when several modules somehow share",
    "start": "1488840",
    "end": "1495559"
  },
  {
    "text": "classes um and it only go takes you so far I mean the main uh oggi application",
    "start": "1495559",
    "end": "1502760"
  },
  {
    "text": "these days probably is eclipse and uh when you update eclipse and you you load new updates you usually you usually have",
    "start": "1502760",
    "end": "1510000"
  },
  {
    "text": "to restart so it means that even in this uh sort of most important application",
    "start": "1510000",
    "end": "1516000"
  },
  {
    "text": "there is for HGI even in that application it's not easy to redeploy modules without restarting those",
    "start": "1516000",
    "end": "1523360"
  },
  {
    "text": "system so that might be an alternative and um yeah it's actually quite nice",
    "start": "1523360",
    "end": "1528640"
  },
  {
    "text": "that it's now implemented in quite a few servers so that's great um the other thing that you can C",
    "start": "1528640",
    "end": "1536279"
  },
  {
    "text": "up with are embedded servers so the idea here is instead of deploying the",
    "start": "1536279",
    "end": "1541960"
  },
  {
    "text": "application to a server which at the end of the day really doesn't make a lot of sense because you won't deploy more than",
    "start": "1541960",
    "end": "1547919"
  },
  {
    "text": "one application to your server as I said earlier in the most cases you would just",
    "start": "1547919",
    "end": "1554399"
  },
  {
    "text": "deploy one single application because you can't isolate more than one application",
    "start": "1554399",
    "end": "1559720"
  },
  {
    "text": "anyway so instead of doing that which is sort of pointless because you're not sharing a",
    "start": "1559720",
    "end": "1565760"
  },
  {
    "text": "server you just start a Java application that includes the server um yeah that might even be easier",
    "start": "1565760",
    "end": "1574039"
  },
  {
    "text": "so customizing the server quite easy so it's just part of the thing that you're",
    "start": "1574039",
    "end": "1580039"
  },
  {
    "text": "uh that you are giving to the customer and if there are specific jvm parameters",
    "start": "1580039",
    "end": "1586360"
  },
  {
    "text": "it's just going to be part of what you give to the customer so the shell script that is running the the application or",
    "start": "1586360",
    "end": "1593000"
  },
  {
    "text": "whatever however again this is not covered by standard deployments so",
    "start": "1593000",
    "end": "1598399"
  },
  {
    "text": "standard deployments only talk about war files ear files and so on the programming model will be very similar",
    "start": "1598399",
    "end": "1605840"
  },
  {
    "text": "however this uh deployment model using embedded servers is quite different and",
    "start": "1605840",
    "end": "1611320"
  },
  {
    "text": "it's not covered by the standard of course you can still do it so",
    "start": "1611320",
    "end": "1618600"
  },
  {
    "text": "I think if you look at it um the deployment model should probably",
    "start": "1618600",
    "end": "1626279"
  },
  {
    "text": "be improved um I think embedded servers are quite",
    "start": "1626279",
    "end": "1632799"
  },
  {
    "text": "interesting I will talk about a few other problems or a few other reasons why I believe uh this to be interesting",
    "start": "1632799",
    "end": "1640279"
  },
  {
    "text": "osgi is I would say complex it is a very um it's it's a very good solution it's a",
    "start": "1640279",
    "end": "1647760"
  },
  {
    "text": "very comp compl solution but it's rather complex and there are some Alternatives again vertex um as I said jrebel it's",
    "start": "1647760",
    "end": "1655200"
  },
  {
    "text": "not a complete list there might be other technologies that also solve some",
    "start": "1655200",
    "end": "1660919"
  },
  {
    "text": "problems okay then there is the famous",
    "start": "1660919",
    "end": "1667440"
  },
  {
    "text": "Cloud again the question is why would I even care so why is this something that I a Java developer would care about the",
    "start": "1667440",
    "end": "1675360"
  },
  {
    "text": "reason I believe is it's much easier to create a new environment",
    "start": "1675360",
    "end": "1681480"
  },
  {
    "text": "so um if you look at the typical Cloud environments basically uh you just take",
    "start": "1681480",
    "end": "1688000"
  },
  {
    "text": "the application you deploy it to an environment and you're done so there is no purchase for new server there is you",
    "start": "1688000",
    "end": "1696159"
  },
  {
    "text": "don't really have to wait for a long time until the application is there it",
    "start": "1696159",
    "end": "1701320"
  },
  {
    "text": "is just pressing a button at one point and then you get the application running the other Pro the other Ben",
    "start": "1701320",
    "end": "1708120"
  },
  {
    "text": "benefit that's more like a management um cost type of thing you only pay what you",
    "start": "1708120",
    "end": "1714120"
  },
  {
    "text": "need so you only pay the resources that you're consuming at one specific point so instead of buying a server for",
    "start": "1714120",
    "end": "1721960"
  },
  {
    "text": "$10,000 you just um well rent a server for a few hours and see whether it works",
    "start": "1721960",
    "end": "1729880"
  },
  {
    "text": "um and then uh that's it and it would just cost you a few",
    "start": "1729880",
    "end": "1735480"
  },
  {
    "text": "bucks so that's great however there are challenges and I believe the main",
    "start": "1735480",
    "end": "1741840"
  },
  {
    "text": "problem is that servers can and will fail so if you look at what we as",
    "start": "1741840",
    "end": "1750159"
  },
  {
    "text": "Enterprise developers are used to we have this highly available hardware and",
    "start": "1750159",
    "end": "1756640"
  },
  {
    "text": "a server that is failing is really a bad thing and someone in",
    "start": "1756640",
    "end": "1761760"
  },
  {
    "text": "operations uh will have well will have to report to his boss and answer the",
    "start": "1761760",
    "end": "1768240"
  },
  {
    "text": "question why the server failed and the cloud that is more or less what is happening all the time so if you look at",
    "start": "1768240",
    "end": "1774200"
  },
  {
    "text": "the Amazon terms and conditions what they say in a way is if one of our data",
    "start": "1774200",
    "end": "1779519"
  },
  {
    "text": "centers fails uh that's fine and you have to deal with it and I don't think",
    "start": "1779519",
    "end": "1785080"
  },
  {
    "text": "that's a bad thing uh actually I believe it's a it's a good thing because it will",
    "start": "1785080",
    "end": "1790480"
  },
  {
    "text": "we will end up with uh architectures that are more stable and uh more and can",
    "start": "1790480",
    "end": "1796640"
  },
  {
    "text": "deal with uh individual servers failing the other thing if you look at",
    "start": "1796640",
    "end": "1801760"
  },
  {
    "text": "it so you're paying what you use so that means you should only use what you",
    "start": "1801760",
    "end": "1807720"
  },
  {
    "text": "really need at a specific point in time so instead of the traditional Enterprise",
    "start": "1807720",
    "end": "1813799"
  },
  {
    "text": "systems where you would just scale your system to or where where you would size",
    "start": "1813799",
    "end": "1818880"
  },
  {
    "text": "your servers to the maximum load and the cloud that's not a good idea what you need to do is you need to have some",
    "start": "1818880",
    "end": "1824960"
  },
  {
    "text": "means to uh scale up and down so that depending on the load the the right",
    "start": "1824960",
    "end": "1831840"
  },
  {
    "text": "amount of resources are consumed okay so what's the impact on Java",
    "start": "1831840",
    "end": "1838559"
  },
  {
    "text": "then well um the approaches that we need to support are uh scale out so we need",
    "start": "1838559",
    "end": "1845720"
  },
  {
    "text": "to start new servers if there is high load we need to stop servers when there is lower load and replication data",
    "start": "1845720",
    "end": "1853760"
  },
  {
    "text": "replicating data is also quite important",
    "start": "1853760",
    "end": "1858240"
  },
  {
    "text": "um there are some impacts so if you look at HTTP sessions for example so in an",
    "start": "1858880",
    "end": "1864519"
  },
  {
    "text": "HTTP session you can store specific data for one user that is logged into the",
    "start": "1864519",
    "end": "1870279"
  },
  {
    "text": "system um and if the server the user is connected to",
    "start": "1870279",
    "end": "1876600"
  },
  {
    "text": "fails then usually the HTTP session information is lost you can set up",
    "start": "1876600",
    "end": "1882919"
  },
  {
    "text": "um clustering however that consumes quite a few resources",
    "start": "1882919",
    "end": "1888600"
  },
  {
    "text": "uh because the information for the HTTP session would need to be replicated across to at least one other server",
    "start": "1888600",
    "end": "1896039"
  },
  {
    "text": "probably also quite a few more servers if you really want to have high availability and it only really works",
    "start": "1896039",
    "end": "1903919"
  },
  {
    "text": "with a small number of servers so I think one of the impacts of this whole system is that you will probably end up",
    "start": "1903919",
    "end": "1911200"
  },
  {
    "text": "with applications that don't really use HTTP sessions and you need to store the data elsewhere so on the database",
    "start": "1911200",
    "end": "1918720"
  },
  {
    "text": "um on the client HTML5 local storage actually gives you a good way to store a",
    "start": "1918720",
    "end": "1924120"
  },
  {
    "text": "significant amount of of uh data on the client or you can have alternative",
    "start": "1924120",
    "end": "1930120"
  },
  {
    "text": "solutions for the HTTP session so one Cloud environment that uh we are using",
    "start": "1930120",
    "end": "1936120"
  },
  {
    "text": "internally at adesso um we have set up a mkd cluster to uh store all the HTTP",
    "start": "1936120",
    "end": "1945120"
  },
  {
    "text": "session information and that cluster highly uh available so if one of the servers in",
    "start": "1945120",
    "end": "1950799"
  },
  {
    "text": "the cluster fails then the data is still replicated across to other nodes and",
    "start": "1950799",
    "end": "1956559"
  },
  {
    "text": "that is plugged into Tomcat as an ex as an external session storage mechanism so",
    "start": "1956559",
    "end": "1963360"
  },
  {
    "text": "that's an alternative Reason by the way was that uh the software that we are running in",
    "start": "1963360",
    "end": "1970120"
  },
  {
    "text": "the cloud um is using the HTTP session so the alternative would have been to do",
    "start": "1970120",
    "end": "1975519"
  },
  {
    "text": "a rewrite which we didn't really want to do so to sum up this case so session",
    "start": "1975519",
    "end": "1984240"
  },
  {
    "text": "application is not that useful in the cloud because servers might fail and it's probably better to store your data",
    "start": "1984240",
    "end": "1990679"
  },
  {
    "text": "somewhere else and um because session application isn't that important simple",
    "start": "1990679",
    "end": "1997919"
  },
  {
    "text": "servers that don't really support session application or are not configured to use session applications",
    "start": "1997919",
    "end": "2004120"
  },
  {
    "text": "are more important or preferable in the cloud",
    "start": "2004120",
    "end": "2009760"
  },
  {
    "text": "then the other thing that's like the probably the the basic uh thing about uh",
    "start": "2010720",
    "end": "2017000"
  },
  {
    "text": "cloud or one of the most important theorems about cloud is the cap theorem",
    "start": "2017000",
    "end": "2023000"
  },
  {
    "text": "it says there are three properties that your system might have so consistency",
    "start": "2023000",
    "end": "2030600"
  },
  {
    "text": "says all nodes in the system see the same data or have the same data store",
    "start": "2030600",
    "end": "2036159"
  },
  {
    "text": "availability basically says you're not shutting down an individual",
    "start": "2036159",
    "end": "2041200"
  },
  {
    "text": "Noe and P is partition tolerance so if",
    "start": "2041200",
    "end": "2046279"
  },
  {
    "text": "there is a network failure the system still runs and what the cap theorem uh",
    "start": "2046279",
    "end": "2051679"
  },
  {
    "text": "says is pick any of those to you can talk about it in more detail so I could",
    "start": "2051679",
    "end": "2058079"
  },
  {
    "text": "spend probably an hour or so uh discussing it in more detail but that's uh the short",
    "start": "2058079",
    "end": "2064720"
  },
  {
    "text": "version so in in the cloud machines do actually fail there is no high",
    "start": "2065399",
    "end": "2072520"
  },
  {
    "text": "availability so at one point there will be a partition so you will have a system",
    "start": "2072520",
    "end": "2079679"
  },
  {
    "text": "where at least two systems can't talk to each other because there's a failure of one kind or another so at that point you",
    "start": "2079679",
    "end": "2086520"
  },
  {
    "text": "either have to sacrifice a or C so that means at that point you either have to detect the um condition and shut down",
    "start": "2086520",
    "end": "2094480"
  },
  {
    "text": "one of the systems so you would sacrifice a um shutting down the system of course",
    "start": "2094480",
    "end": "2101480"
  },
  {
    "text": "means that you're sacrificing part of the availability or you would still give",
    "start": "2101480",
    "end": "2107240"
  },
  {
    "text": "answers and return data even though you're aware of the fact that you can't talk to the other node and the other",
    "start": "2107240",
    "end": "2112839"
  },
  {
    "text": "node might have inconsistent data so you would sacrifice",
    "start": "2112839",
    "end": "2117838"
  },
  {
    "text": "consistency um why is this important I think it's",
    "start": "2119240",
    "end": "2125440"
  },
  {
    "text": "interesting because it's actually a cont contradiction to what we are used to so if you look at the two-phase commit",
    "start": "2125440",
    "end": "2132400"
  },
  {
    "text": "protocol um it is basically meant to have multiple systems and make them",
    "start": "2132400",
    "end": "2139040"
  },
  {
    "text": "consistent so what the two-phase commit protocol does is it says okay here are some databases in the first phase I'm",
    "start": "2139040",
    "end": "2145800"
  },
  {
    "text": "going to ask all the databases whether they can write the data and in the next",
    "start": "2145800",
    "end": "2151240"
  },
  {
    "text": "phase if all the systems agree that the data can be written and is valid the",
    "start": "2151240",
    "end": "2156480"
  },
  {
    "text": "data will actually be written so the idea is to coordinate the systems in",
    "start": "2156480",
    "end": "2161560"
  },
  {
    "text": "those two faces by having a vote first and then actually writing the data",
    "start": "2161560",
    "end": "2166680"
  },
  {
    "text": "you're coordinating the systems in a way that uh they're consistent however if during the process",
    "start": "2166680",
    "end": "2174680"
  },
  {
    "text": "uh your network connection goes down then you do have a problem and you are not able to successfully U make all the",
    "start": "2174680",
    "end": "2181680"
  },
  {
    "text": "systems consistent so that means that the two-phase commit protocol is actually not that great if fit for the",
    "start": "2181680",
    "end": "2188160"
  },
  {
    "text": "cloud because usually in the cloud the tradeoff is to um be partition tolerant",
    "start": "2188160",
    "end": "2196119"
  },
  {
    "text": "and either sacrifice say C or a but not P because systems might",
    "start": "2196119",
    "end": "2203599"
  },
  {
    "text": "fail I'm not saying that it doesn't make any sense whatsoever to use two face commit protocol in the cloud if you have",
    "start": "2203599",
    "end": "2210720"
  },
  {
    "text": "a limited system and you can deal with failures it might still be okay but what",
    "start": "2210720",
    "end": "2216720"
  },
  {
    "text": "I am saying is it's not the ideal system for the cloud and not the ideal protocol for the",
    "start": "2216720",
    "end": "2222920"
  },
  {
    "text": "cloud so bringing that back to Java usually",
    "start": "2222920",
    "end": "2229800"
  },
  {
    "text": "this is accessed using the JTA API and the two-phase commit protocol and the",
    "start": "2229800",
    "end": "2236839"
  },
  {
    "text": "implementation of the two-phase commit protocol is actually in my opinion one of the main differences between Java e",
    "start": "2236839",
    "end": "2243920"
  },
  {
    "text": "servers and simple web servers like tomat why because all the other features",
    "start": "2243920",
    "end": "2249960"
  },
  {
    "text": "nowadays can be implemented using libraries so there are libraries that would allow you to use egbs JSF CDI all",
    "start": "2249960",
    "end": "2257720"
  },
  {
    "text": "the nice features of java e however it's different for JTA there are ways to",
    "start": "2257720",
    "end": "2263760"
  },
  {
    "text": "integrate a two-phase commit protocol in tomap but that's a rather complex",
    "start": "2263760",
    "end": "2269160"
  },
  {
    "text": "solution and you probably don't want to go there also it is quite hard to",
    "start": "2269160",
    "end": "2274400"
  },
  {
    "text": "implement such a transaction system correctly uh because you really have to make it",
    "start": "2274400",
    "end": "2280720"
  },
  {
    "text": "bulletproof because if you don't that's the whole reason why you're using two",
    "start": "2280720",
    "end": "2285839"
  },
  {
    "text": "commit uh protocol from the start because you really want to make sure that in a case of an error you still",
    "start": "2285839",
    "end": "2293240"
  },
  {
    "text": "have transactions and it still works for you and also it is uh something that",
    "start": "2293240",
    "end": "2299839"
  },
  {
    "text": "influences databases and uh all the other resources so uh that means that uh",
    "start": "2299839",
    "end": "2308040"
  },
  {
    "text": "it is something that uh influences the basic of your web server",
    "start": "2308040",
    "end": "2316000"
  },
  {
    "text": "it goes through to all the different resources you might",
    "start": "2316000",
    "end": "2321359"
  },
  {
    "text": "have okay so that again means that simple web servers that don't really Implement Two-Face Comm protocol um are",
    "start": "2321359",
    "end": "2328920"
  },
  {
    "text": "a better fit for the cloud because the lack of Two-Face commit protocol isn't that bad a",
    "start": "2328920",
    "end": "2334480"
  },
  {
    "text": "thing um and there are other reasons so simple",
    "start": "2334480",
    "end": "2340880"
  },
  {
    "text": "web servers won't include all the features that Java e servers have so you can",
    "start": "2340880",
    "end": "2347280"
  },
  {
    "text": "basically come up with your own uh libraries in your own applications and",
    "start": "2347280",
    "end": "2353760"
  },
  {
    "text": "you will consume less resources because all the libraries that you don't want well you won't include them in your",
    "start": "2353760",
    "end": "2359560"
  },
  {
    "text": "application and you end up with a solution that consumes less resources which is great because all the resources",
    "start": "2359560",
    "end": "2364720"
  },
  {
    "text": "you're consuming you actually pay for so these simple web servers like tomit",
    "start": "2364720",
    "end": "2371960"
  },
  {
    "text": "and other Solutions are actually preferable in the cloud and if you look at it that's",
    "start": "2371960",
    "end": "2378599"
  },
  {
    "text": "actually also what people are doing so Tomcat is used in Amazon it's also used",
    "start": "2378599",
    "end": "2383640"
  },
  {
    "text": "in Cloud Foundry uh in Heroku there is Tom Cat Jetty or a wide variety of embedded",
    "start": "2383640",
    "end": "2391079"
  },
  {
    "text": "other embeded servers that you can use so play for example is supported there as well there is an even more Li mited",
    "start": "2391079",
    "end": "2397760"
  },
  {
    "text": "system on Google app engine so it's uh based on jti I think but there is a wide",
    "start": "2397760",
    "end": "2405000"
  },
  {
    "text": "list of classes that you can use on Google app engine so it's a very limited implementation of",
    "start": "2405000",
    "end": "2411319"
  },
  {
    "text": "java cloudbees offers Java e web profile so that's uh a little bit broader and",
    "start": "2411319",
    "end": "2418000"
  },
  {
    "text": "then there is redhead and Oracle uh who are offering full stake Java e so if you",
    "start": "2418000",
    "end": "2423800"
  },
  {
    "text": "look at it uh there are quite a few big players like like Amazon or Heroku or",
    "start": "2423800",
    "end": "2430520"
  },
  {
    "text": "Google that are actually doing exactly what I'm what I'm proposing using very",
    "start": "2430520",
    "end": "2436480"
  },
  {
    "text": "simple web servers in the cloud instead of full-blown Java servers because it is",
    "start": "2436480",
    "end": "2442240"
  },
  {
    "text": "it consumes less resources and the features in the Java e servers are not that important for the",
    "start": "2442240",
    "end": "2448400"
  },
  {
    "text": "cloud like to face Comm protocol so again cloud is also a reason for using",
    "start": "2448400",
    "end": "2454000"
  },
  {
    "text": "simple web servers like tomat for example yeah yeah MTI tendency that's",
    "start": "2454000",
    "end": "2459800"
  },
  {
    "text": "actually a good point so it's very it's interesting because um",
    "start": "2459800",
    "end": "2467800"
  },
  {
    "text": "if you look at it there are several different ways of implementing multi tendency so one way of implementing M",
    "start": "2467800",
    "end": "2474680"
  },
  {
    "text": "tendency is what they are doing in Java E7 which is basically storing specific",
    "start": "2474680",
    "end": "2480000"
  },
  {
    "text": "which is basically sort of adding a hook to your o mapper and then you say okay",
    "start": "2480000",
    "end": "2485560"
  },
  {
    "text": "if there is a you add something to the query that says only return the data for the current",
    "start": "2485560",
    "end": "2492720"
  },
  {
    "text": "tenant that's what they are doing um the model here is that you're",
    "start": "2492720",
    "end": "2498560"
  },
  {
    "text": "running one instance of your application to support multi tency so you log into the",
    "start": "2498560",
    "end": "2506200"
  },
  {
    "text": "application two tenants log into the very same application and they see their own data that's basically how it",
    "start": "2506200",
    "end": "2513720"
  },
  {
    "text": "works um there are other ways ways to do that in the cloud so what you could do is you",
    "start": "2513720",
    "end": "2520079"
  },
  {
    "text": "could run two virtual machines with two different instances of the application",
    "start": "2520079",
    "end": "2526400"
  },
  {
    "text": "so one user from one tenant would connect to an instance specific to that",
    "start": "2526400",
    "end": "2531760"
  },
  {
    "text": "tenant and the other user would connect to a different machine with a different tenant which is by the way not too too",
    "start": "2531760",
    "end": "2538800"
  },
  {
    "text": "bad I think it's probably even better it has it its advantages because there is a",
    "start": "2538800",
    "end": "2545359"
  },
  {
    "text": "stronger separation right basically the only reason the only way to escape your",
    "start": "2545359",
    "end": "2550880"
  },
  {
    "text": "machine is by some buck in the virtualization layer which is probably not there um also it is easier to",
    "start": "2550880",
    "end": "2560280"
  },
  {
    "text": "separate them again concerning garbage collection CPU consumption and so on and",
    "start": "2560280",
    "end": "2567000"
  },
  {
    "text": "for that reason I actually believe that uh this situation is probably not going",
    "start": "2567000",
    "end": "2573160"
  },
  {
    "text": "to change uh because there is just this one this one way that multi tendency is",
    "start": "2573160",
    "end": "2580400"
  },
  {
    "text": "currently as far as I know to be supported in Java E7 and that's just one",
    "start": "2580400",
    "end": "2586200"
  },
  {
    "text": "way of doing it and in particular in the cloud there are other ways so I mean one of the reasons why we introduced this",
    "start": "2586200",
    "end": "2592240"
  },
  {
    "text": "cloud system that I've been talking about before is uh at adesso is because",
    "start": "2592240",
    "end": "2597280"
  },
  {
    "text": "we wanted to have an even better separation between the tenants and a better uh service level that we could",
    "start": "2597280",
    "end": "2604359"
  },
  {
    "text": "offer to them so and we do that by separating them on the Virtual Machine",
    "start": "2604359",
    "end": "2610200"
  },
  {
    "text": "level because previously we we tried to do that by having multi tendency in in",
    "start": "2610200",
    "end": "2615480"
  },
  {
    "text": "the application itself and that only takes you so far okay any other questions so thanks a",
    "start": "2615480",
    "end": "2625640"
  },
  {
    "text": "lot okay so that's it so my point was that if you look at the cloud that's",
    "start": "2625640",
    "end": "2631400"
  },
  {
    "text": "another good reason for simple web servers like tomat then there is cloud I ecture",
    "start": "2631400",
    "end": "2638839"
  },
  {
    "text": "so again as I said the main point is in the cloud servers might fail this also",
    "start": "2638839",
    "end": "2645520"
  },
  {
    "text": "has an impact on the architecture of your applications so if you look at",
    "start": "2645520",
    "end": "2651800"
  },
  {
    "text": "traditional um at your traditional application you would probably uh end up",
    "start": "2651800",
    "end": "2658240"
  },
  {
    "text": "separating your web server from a database server that makes a lot of sense because the characteristics of a",
    "start": "2658240",
    "end": "2666319"
  },
  {
    "text": "database server is quite different from the characteristics of web server because well there is more IO more disk",
    "start": "2666319",
    "end": "2673880"
  },
  {
    "text": "and so on problem is if you look at it the probability for this service to fail",
    "start": "2673880",
    "end": "2680520"
  },
  {
    "text": "is about twice the probability of one individual server",
    "start": "2680520",
    "end": "2685559"
  },
  {
    "text": "failing maybe we can do better and obviously we can by uh having",
    "start": "2685559",
    "end": "2692640"
  },
  {
    "text": "the web and the database server running on the same machine now this seems a little bit strange",
    "start": "2692640",
    "end": "2700079"
  },
  {
    "text": "because usually web and database servers U are well have different requirements",
    "start": "2700079",
    "end": "2707160"
  },
  {
    "text": "in terms of uh the hardware they need however um if you look at the nosql",
    "start": "2707160",
    "end": "2714079"
  },
  {
    "text": "space in particular um there are databases that have uh less hard",
    "start": "2714079",
    "end": "2722160"
  },
  {
    "text": "requirements on the hardware so using a no SQL database actually makes that a",
    "start": "2722160",
    "end": "2728040"
  },
  {
    "text": "pretty good option um and also with replication and so on in the nosql space",
    "start": "2728040",
    "end": "2734440"
  },
  {
    "text": "that's definitely doable so what you will end up with is a",
    "start": "2734440",
    "end": "2740839"
  },
  {
    "text": "system where you will probably uh separate your system in",
    "start": "2740839",
    "end": "2748119"
  },
  {
    "text": "Services smaller independent services to H keep the results of a",
    "start": "2748119",
    "end": "2755280"
  },
  {
    "text": "failure low so if one of the servers in this case fails it will only mean that",
    "start": "2755280",
    "end": "2761520"
  },
  {
    "text": "one service fails not the whole application um and probably you will end",
    "start": "2761520",
    "end": "2767880"
  },
  {
    "text": "up with this separation be because those Services might fail for different reasons so a customer service might talk",
    "start": "2767880",
    "end": "2774880"
  },
  {
    "text": "to your CRM system and might fail if the CRM system is down uh or they might use",
    "start": "2774880",
    "end": "2781559"
  },
  {
    "text": "different databases so it might be wise to uh separate",
    "start": "2781559",
    "end": "2789359"
  },
  {
    "text": "them remember however there is the first law of distributed objects and that says",
    "start": "2789359",
    "end": "2795480"
  },
  {
    "text": "Don't distribute your objects so what you should be doing what you should think about in this case is still",
    "start": "2795480",
    "end": "2801960"
  },
  {
    "text": "whether you will really want to separate your application in different uh servers",
    "start": "2801960",
    "end": "2807920"
  },
  {
    "text": "because that might cause a performance overhead because of distributed communication and so on there are ways",
    "start": "2807920",
    "end": "2814079"
  },
  {
    "text": "to solve that so if you look at the system that I that I've just spoken about you could for example say Okay",
    "start": "2814079",
    "end": "2821119"
  },
  {
    "text": "each of these Services has its own HTML front end and if I open a page that is",
    "start": "2821119",
    "end": "2827079"
  },
  {
    "text": "specific to a specific server service you go to that server and get the HTML",
    "start": "2827079",
    "end": "2832440"
  },
  {
    "text": "from that very server and then you don't have distributed objects instead it's just where your HTML and HTTP comes",
    "start": "2832440",
    "end": "2841079"
  },
  {
    "text": "from challenges well we have more services we have more server um",
    "start": "2841079",
    "end": "2846920"
  },
  {
    "text": "infrastructure overhead caus by Java e is even less acceptable and even the jvm might be a",
    "start": "2846920",
    "end": "2854040"
  },
  {
    "text": "problem in this regard um and it is also it's sort of a",
    "start": "2854040",
    "end": "2859280"
  },
  {
    "text": "contradiction to the ER model where you have all the modules in one place in one",
    "start": "2859280",
    "end": "2865079"
  },
  {
    "text": "server so it's very very different in that regard and this is by the way really",
    "start": "2865079",
    "end": "2871920"
  },
  {
    "text": "hard challenge I mean if you look at the jvm the jvm has this problem that it h",
    "start": "2871920",
    "end": "2878440"
  },
  {
    "text": "it's rather memory inefficient because of the way that garbage collection is done and that in turn means if you",
    "start": "2878440",
    "end": "2884880"
  },
  {
    "text": "really want to run a lot of jvms on a virtual on on a cloud environment you're",
    "start": "2884880",
    "end": "2890040"
  },
  {
    "text": "probably going to uh consume a lot of resources which will cost a lot of",
    "start": "2890040",
    "end": "2896319"
  },
  {
    "text": "money so uh Cloud needs these small Services that's again not a great fit for Java and maybe not even for the jvm",
    "start": "2897160",
    "end": "2905280"
  },
  {
    "text": "so we'll see about that okay so another techn technology",
    "start": "2905280",
    "end": "2911480"
  },
  {
    "text": "challenge is no SQL the thing to point to note here is",
    "start": "2911480",
    "end": "2918520"
  },
  {
    "text": "uh no SQL is actually not just one specific technology the most simple technology no",
    "start": "2918520",
    "end": "2926760"
  },
  {
    "text": "SQL technology are key value stores so they just store a value um under a",
    "start": "2926760",
    "end": "2934440"
  },
  {
    "text": "specific key it's like a map basically like a Java map that only takes you so far so what",
    "start": "2934440",
    "end": "2943040"
  },
  {
    "text": "people came up with is the idea of these large column stores and then there is a key and you",
    "start": "2943040",
    "end": "2950799"
  },
  {
    "text": "actually get um a structure structured data that contains multiple columns",
    "start": "2950799",
    "end": "2957440"
  },
  {
    "text": "document oriented stores uh well give you",
    "start": "2957440",
    "end": "2962520"
  },
  {
    "text": "documents for large column as well as document uh stores you can actually have queries so return all the documents or",
    "start": "2962520",
    "end": "2971960"
  },
  {
    "text": "all uh the data sets that have a specific characteristic and then there are graph",
    "start": "2971960",
    "end": "2979200"
  },
  {
    "text": "databases um that have nodes edges and properties and so on and so",
    "start": "2979200",
    "end": "2984799"
  },
  {
    "text": "on none of these support joints the reason is if you do a join you B you",
    "start": "2984799",
    "end": "2991040"
  },
  {
    "text": "basically have to have all the data in one place calculate the join filter it",
    "start": "2991040",
    "end": "2997200"
  },
  {
    "text": "out and so on and that means that you lose the ability for horizontal scalability so you can't distribute your",
    "start": "2997200",
    "end": "3003880"
  },
  {
    "text": "data across multiple servers anymore because you have to have a way to get all the data in one place and that's",
    "start": "3003880",
    "end": "3010760"
  },
  {
    "text": "sort of a contradiction so I think that's like the basic limitation of no",
    "start": "3010760",
    "end": "3016440"
  },
  {
    "text": "SQL um choosing one of these Technologies is clearly a a trade-off so",
    "start": "3016960",
    "end": "3023240"
  },
  {
    "text": "if you look at it you would use one of these Technologies because because there is a specific problem that you're facing",
    "start": "3023240",
    "end": "3029440"
  },
  {
    "text": "and you want to use one of these because um they have specific strength so if you",
    "start": "3029440",
    "end": "3036799"
  },
  {
    "text": "look even if you look at one specific nosql flavor there is still a choice to",
    "start": "3036799",
    "end": "3042720"
  },
  {
    "text": "be made so red is for example is a key value store it's in memory it's very",
    "start": "3042720",
    "end": "3048280"
  },
  {
    "text": "fast but because it is in memory there is only so much data you can store riak",
    "start": "3048280",
    "end": "3054359"
  },
  {
    "text": "is very different that's very scalable so so you can store a very very large amount of data in",
    "start": "3054359",
    "end": "3060920"
  },
  {
    "text": "it so I believe a standard really does make a lot of sense because it will would",
    "start": "3060920",
    "end": "3067520"
  },
  {
    "text": "level these strength and would sort of make it pointless because the reason I",
    "start": "3067520",
    "end": "3074119"
  },
  {
    "text": "mean the reason or the the the main message behind behind no SQL is basically here is the choice of",
    "start": "3074119",
    "end": "3080839"
  },
  {
    "text": "Technology um choose the technology that is the best fit for your scenario and a",
    "start": "3080839",
    "end": "3087240"
  },
  {
    "text": "standard really doesn't make a lot of sense there um so that also means that a",
    "start": "3087240",
    "end": "3093799"
  },
  {
    "text": "general Universal no sequest Java API doesn't really make a lot of sense because there are so many different ways",
    "start": "3093799",
    "end": "3100200"
  },
  {
    "text": "of doing it in particular jpa is a bad fit for it",
    "start": "3100200",
    "end": "3105520"
  },
  {
    "text": "uh because jpa depends on the relational model and it uses joints for example and",
    "start": "3105520",
    "end": "3112319"
  },
  {
    "text": "as I said earlier joints and no SQL doesn't make a lot of sense because it would basically sacrifice um horizontal",
    "start": "3112319",
    "end": "3119720"
  },
  {
    "text": "scalability now of course there are general concepts in jpa that you can use with any data store like the entity",
    "start": "3119720",
    "end": "3127640"
  },
  {
    "text": "annotation for example and you could somehow tweak it to make it work you",
    "start": "3127640",
    "end": "3133240"
  },
  {
    "text": "know you know you could say okay so we are using add entity we are using some other annotations but sorry no joints",
    "start": "3133240",
    "end": "3140920"
  },
  {
    "text": "but that's sort of pretty weird because I mean the reason for for having a standard in the first first place is",
    "start": "3140920",
    "end": "3148040"
  },
  {
    "text": "that it's well the standard so you just program to the standard and it just",
    "start": "3148040",
    "end": "3155240"
  },
  {
    "text": "works using that approach would basically mean well you know um so you can use add entity uh but all the other",
    "start": "3155240",
    "end": "3162880"
  },
  {
    "text": "stuff is not usable so um it's not really the standard so it is in a way",
    "start": "3162880",
    "end": "3168640"
  },
  {
    "text": "proprietary because there are limitations actually this is what what the Google app engine does with its uh",
    "start": "3168640",
    "end": "3175400"
  },
  {
    "text": "no SQL data stores so they are using jpa and there are other projects that do",
    "start": "3175400",
    "end": "3180960"
  },
  {
    "text": "similar things I think a much better approach um is what spring data does so",
    "start": "3180960",
    "end": "3188079"
  },
  {
    "text": "if you the the idea of spring data is actually from uh the original spring",
    "start": "3188079",
    "end": "3194160"
  },
  {
    "text": "project and the idea is to have all these different apis that are out there",
    "start": "3194160",
    "end": "3200240"
  },
  {
    "text": "like hibernate jpa and jdbc and have an abstraction of top on top of that that",
    "start": "3200240",
    "end": "3206559"
  },
  {
    "text": "that unifies the parts of these specific apis that can be unified like the",
    "start": "3206559",
    "end": "3212359"
  },
  {
    "text": "exceptions for example or to make the API similar so exceptions I mean you can",
    "start": "3212359",
    "end": "3218599"
  },
  {
    "text": "come up with all the errors you might ever have like there might be a constraint problem there might be a",
    "start": "3218599",
    "end": "3225079"
  },
  {
    "text": "problem with a general problem of some kind and so on and so on you can build up exceptions for each of them and uh",
    "start": "3225079",
    "end": "3232640"
  },
  {
    "text": "use them for all the apis and that's what spring originally did",
    "start": "3232640",
    "end": "3238400"
  },
  {
    "text": "it's not a full abstraction so you can still use the specific parts of the API",
    "start": "3238400",
    "end": "3244119"
  },
  {
    "text": "or the hibernate classes or the jpa classes or the jdbc classes if you need",
    "start": "3244119",
    "end": "3250480"
  },
  {
    "text": "to and this model is actually a good fit for no SQL because again you have you",
    "start": "3250480",
    "end": "3256040"
  },
  {
    "text": "have the same problems the same exceptions and they can be unified",
    "start": "3256040",
    "end": "3263799"
  },
  {
    "text": "um and you can still have a way to",
    "start": "3263799",
    "end": "3269160"
  },
  {
    "text": "access the specifics of these apis so if there is a specific so redis has some",
    "start": "3269160",
    "end": "3275160"
  },
  {
    "text": "specific uh features like a messaging service for example and that can easily",
    "start": "3275160",
    "end": "3280599"
  },
  {
    "text": "be used using the proprietary API while there might be a general key value API",
    "start": "3280599",
    "end": "3285839"
  },
  {
    "text": "that can be used with redis as well as Rak which makes a lot of sense and the reason why it makes sense is because",
    "start": "3285839",
    "end": "3291640"
  },
  {
    "text": "it's easier to learn so once you're using you are used to the general idea of spring data it's easier to learn",
    "start": "3291640",
    "end": "3298680"
  },
  {
    "text": "specific nosql databases and there are additional things so it's easy to create",
    "start": "3298680",
    "end": "3304160"
  },
  {
    "text": "a repository or data access object because that's supported by Spring data so if you want to have your CR",
    "start": "3304160",
    "end": "3310920"
  },
  {
    "text": "operations that's easy to do and there is support for rest services so it's quite easy to come up with a rest",
    "start": "3310920",
    "end": "3317400"
  },
  {
    "text": "service on top of an existing",
    "start": "3317400",
    "end": "3321599"
  },
  {
    "text": "database um the other impact that no SQL has is is shown in this graph that I",
    "start": "3323000",
    "end": "3328799"
  },
  {
    "text": "showed before so basically direct access from JavaScript to the database in the",
    "start": "3328799",
    "end": "3335280"
  },
  {
    "text": "back end instead of going through uh your middle tier that would recite on a web or application",
    "start": "3335280",
    "end": "3342200"
  },
  {
    "text": "server um so what I think is interesting is that JavaScript is becoming very",
    "start": "3342200",
    "end": "3348640"
  },
  {
    "text": "important in the new SQL space because quite a few uh document oriented",
    "start": "3348640",
    "end": "3353880"
  },
  {
    "text": "databases uses Jon as a data representation uh and if you look at mongodb for",
    "start": "3353880",
    "end": "3359880"
  },
  {
    "text": "example there is a strong JavaScript support for queries and these kinds of things so in a way that's like jdbc and",
    "start": "3359880",
    "end": "3367799"
  },
  {
    "text": "relational database system so it seems that JavaScript is very important for",
    "start": "3367799",
    "end": "3373400"
  },
  {
    "text": "the nosql databases while Java is only a secondary concern so to sum up no SQL is hard to",
    "start": "3373400",
    "end": "3383359"
  },
  {
    "text": "standardize because it's such a broad variety of Technologies JPI is not a good fit for this model and",
    "start": "3383359",
    "end": "3390680"
  },
  {
    "text": "I would suggest to look at Spring data because it makes life easier concerning no SQL databases it's not a complete",
    "start": "3390680",
    "end": "3397039"
  },
  {
    "text": "solution so there are just there are not all nosql databases are supported but at",
    "start": "3397039",
    "end": "3402760"
  },
  {
    "text": "least a few important ones yeah last Point def hops so devops",
    "start": "3402760",
    "end": "3412000"
  },
  {
    "text": "is um basically says that development and operations uh cooperate collaborate",
    "start": "3412000",
    "end": "3418400"
  },
  {
    "text": "more strongly and continuous delivery is one of the practices of devops and it says",
    "start": "3418400",
    "end": "3426039"
  },
  {
    "text": "that you should automate and optimize the pipeline that leads to re uh to your",
    "start": "3426039",
    "end": "3432520"
  },
  {
    "text": "releases um we are going to have a keynote about that tomorrow so I'm looking forward to",
    "start": "3432520",
    "end": "3438799"
  },
  {
    "text": "that what does that mean for uh for us well first of all",
    "start": "3438799",
    "end": "3444319"
  },
  {
    "text": "continuous delivery is an important part of Def props um",
    "start": "3444319",
    "end": "3450440"
  },
  {
    "text": "and because at least during deployment development operations have to collaborate it's no there is no way that",
    "start": "3450440",
    "end": "3457359"
  },
  {
    "text": "one of these two parties can do a successful deployment on their",
    "start": "3457359",
    "end": "3463720"
  },
  {
    "text": "own so the impact on Java I think what is interesting is that",
    "start": "3463720",
    "end": "3472720"
  },
  {
    "text": "uh quite a few of the continuous delivery tools are written in rub be like puppet or Chef or some of the other",
    "start": "3472720",
    "end": "3480440"
  },
  {
    "text": "ones so what I'm seeing at least in my company is that this might strengthen",
    "start": "3480440",
    "end": "3488480"
  },
  {
    "text": "Ruby and if you so what is happening there is that people start using Ruby",
    "start": "3488480",
    "end": "3494000"
  },
  {
    "text": "for these automations and then they start using it for other things in the",
    "start": "3494000",
    "end": "3499079"
  },
  {
    "text": "projects as well um and if you look at it that's also how Java got started so",
    "start": "3499079",
    "end": "3506119"
  },
  {
    "text": "Java originally started with applets and now nobody is basically doing applets anymore instead we are using it for",
    "start": "3506119",
    "end": "3512359"
  },
  {
    "text": "Enterprise application development and maybe something similar is going on in this",
    "start": "3512359",
    "end": "3518440"
  },
  {
    "text": "space and that's also different from continuous integration where we have quite a few Java tools the impact on",
    "start": "3518440",
    "end": "3525079"
  },
  {
    "text": "environments again if you look at it these continuously continuous delivery Tools in a way compete with server and",
    "start": "3525079",
    "end": "3533119"
  },
  {
    "text": "cluster management tools um because these continuous delivery tools allow",
    "start": "3533119",
    "end": "3538599"
  },
  {
    "text": "you to set up a cluster of application servers quite easily and that was one of the uh",
    "start": "3538599",
    "end": "3546400"
  },
  {
    "text": "advantages of some Java e servers that they have that they have a more",
    "start": "3546400",
    "end": "3552720"
  },
  {
    "text": "sophisticated way of handling a large number of cluster nodes and that is uh",
    "start": "3552720",
    "end": "3558079"
  },
  {
    "text": "being leveled Now by continuous delivery so again here you can see that",
    "start": "3558079",
    "end": "3564200"
  },
  {
    "text": "simpler Ser simple services uh simple servers are uh preferred and the missing",
    "start": "3564200",
    "end": "3570839"
  },
  {
    "text": "management features that some of them have uh can be compensated by those continuous delivery",
    "start": "3570839",
    "end": "3577440"
  },
  {
    "text": "tools so again uh we see I I think we will see a",
    "start": "3577440",
    "end": "3584039"
  },
  {
    "text": "push here for simple web servers we will see probably a push for Ruby in this",
    "start": "3584039",
    "end": "3589319"
  },
  {
    "text": "space and that's another impact so this should be it yeah so uh um thanks a lot",
    "start": "3589319",
    "end": "3597680"
  },
  {
    "text": "for listening",
    "start": "3597680",
    "end": "3600838"
  },
  {
    "text": "[Music]",
    "start": "3603830",
    "end": "3612300"
  }
]