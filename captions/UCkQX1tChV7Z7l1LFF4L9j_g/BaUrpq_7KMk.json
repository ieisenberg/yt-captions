[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "[Music]",
    "start": "3320",
    "end": "8769"
  },
  {
    "text": "[Applause] right so um today I'm going to talk",
    "start": "10010",
    "end": "15440"
  },
  {
    "text": "about how Netflix is really using Java but maybe if you've been at cuon before or if you've been reading our Tech blogs",
    "start": "15440",
    "end": "21359"
  },
  {
    "text": "over the past several years you kind of already know all this because you probably know that Netflix is really",
    "start": "21359",
    "end": "26760"
  },
  {
    "text": "just about RX Java microservices with histric and spring cloud out and really Kos monkeys are just running the show",
    "start": "26760",
    "end": "33840"
  },
  {
    "text": "well I'm only half getting here because a few years ago um this was actually mostly true maybe except the chos",
    "start": "33840",
    "end": "40000"
  },
  {
    "text": "monkeys but um this Tech was something that we were building on um in in the",
    "start": "40000",
    "end": "45160"
  },
  {
    "text": "last several years um but things have changed and quite often I have conversations with people um at",
    "start": "45160",
    "end": "51079"
  },
  {
    "text": "conferences like like this one where they're like well yeah we using the Netflix stack and like which stack",
    "start": "51079",
    "end": "57520"
  },
  {
    "text": "exactly are you talking about and it's almost never St that we're actually using these are just things that people",
    "start": "57520",
    "end": "62840"
  },
  {
    "text": "associate with Netflix because we've been talking about our technology for so so many years um but things might have",
    "start": "62840",
    "end": "68680"
  },
  {
    "text": "been changed a little bit so today we're going to BU some Ms we're going to take a look at what we're actually doing with",
    "start": "68680",
    "end": "74840"
  },
  {
    "text": "Java and um things are ever evolving things are literally just changing all the time and um my name is Paul I'm in",
    "start": "74840",
    "end": "83119"
  },
  {
    "text": "Java platform at Netflix um Java platform is responsible for um the the",
    "start": "83119",
    "end": "88400"
  },
  {
    "text": "libraries Frameworks and tooling that we built around um Java so that all our Java developers have a um a good time",
    "start": "88400",
    "end": "95960"
  },
  {
    "text": "developing um Java applications I'm also Java Champion I've been in Java space for quite a long time and um in the past",
    "start": "95960",
    "end": "103320"
  },
  {
    "text": "I've wrote two books about Java modularity um I'm also one of the first authors of the dgs framework that's the",
    "start": "103320",
    "end": "110000"
  },
  {
    "text": "graph qu framework we use for Java uh we'll talk quite a bit about DJs and how that all fits in the in architecture um",
    "start": "110000",
    "end": "117000"
  },
  {
    "text": "so yeah that's me um before we start diving into um",
    "start": "117000",
    "end": "122119"
  },
  {
    "start": "118000",
    "end": "142000"
  },
  {
    "text": "jpms and and how we use Java um and the framework that we're using we have to understand a little bit better um how",
    "start": "122119",
    "end": "128800"
  },
  {
    "text": "our architecture has been evolving and that kind of explains why we did things",
    "start": "128800",
    "end": "134599"
  },
  {
    "text": "in a certain way with Java several years ago and we're doing things things quite differently um",
    "start": "134599",
    "end": "141800"
  },
  {
    "text": "today so what you should understand about Java at Netflix is that uh we have",
    "start": "141800",
    "end": "147680"
  },
  {
    "start": "142000",
    "end": "218000"
  },
  {
    "text": "a lot of java we are basically a Java sh and every back end um at at Netflix is",
    "start": "147680",
    "end": "153360"
  },
  {
    "text": "basically a Java app and um we have many applications at the size of of of",
    "start": "153360",
    "end": "158760"
  },
  {
    "text": "Netflix um there's lots of internal applications to just keep track of things um we're also one of the largest",
    "start": "158760",
    "end": "164519"
  },
  {
    "text": "film studios in the world so there's um a lot of software being developed just to produce films basically um again all",
    "start": "164519",
    "end": "172120"
  },
  {
    "text": "Java um and then of course we have the what we call the streaming app which is basically the Netflix app as you",
    "start": "172120",
    "end": "178760"
  },
  {
    "text": "probably know it and that is what we're looking at here so this screen here is what we call the L the list of list of",
    "start": "178760",
    "end": "184599"
  },
  {
    "text": "movies and that is just one example of um a a um well part of of of an",
    "start": "184599",
    "end": "191440"
  },
  {
    "text": "application that is um backed by Java um but you should understand that pretty much everything that I'm talking about",
    "start": "191440",
    "end": "197080"
  },
  {
    "text": "today um that is true for basically every back end at Java we use the same",
    "start": "197080",
    "end": "202280"
  },
  {
    "text": "architecture now for pretty much all our different systems both internal and um consumer facing and um we use the same",
    "start": "202280",
    "end": "209319"
  },
  {
    "text": "text TCH everywhere so although I'm giving this example because just kind of a nice example to play with um it it's",
    "start": "209319",
    "end": "215280"
  },
  {
    "text": "kind of much more Universal than that so when I joined Netflix almost",
    "start": "215280",
    "end": "221000"
  },
  {
    "start": "218000",
    "end": "567000"
  },
  {
    "text": "seven years ago um we were in what I call The Groovy era and um what you",
    "start": "221000",
    "end": "227200"
  },
  {
    "text": "probably know about Netflix and this is still true is that Netflix has a microservices ecosystem so um basically",
    "start": "227200",
    "end": "234159"
  },
  {
    "text": "every piece of functionality and every uh piece of data is owned by a specific microsurface and there's many of them",
    "start": "234159",
    "end": "241159"
  },
  {
    "text": "literally thousands of them um what I have on slid here I kind",
    "start": "241159",
    "end": "246360"
  },
  {
    "text": "of just made it up because it kind of Mak sense in my head and um it's a much simplified version of what we actually",
    "start": "246360",
    "end": "253000"
  },
  {
    "text": "have in in production um but think about this L screen this list of list of movies as we just looked at at a",
    "start": "253000",
    "end": "258919"
  },
  {
    "text": "previous slide you're probably familiar with that screen um that to to render",
    "start": "258919",
    "end": "264400"
  },
  {
    "text": "that screen we would to to have to fetch data from many different microservices so maybe there's like a top 10 service",
    "start": "264400",
    "end": "271000"
  },
  {
    "text": "um that we need because we need a top 10 list of of of of movies um so that's",
    "start": "271000",
    "end": "276759"
  },
  {
    "text": "backed by specific surface and then there's an artwork surface that gives us the images that we show on the loo and",
    "start": "276759",
    "end": "282880"
  },
  {
    "text": "these are all personalized as well um and there's probably a movie metadata service which gives us movie",
    "start": "282880",
    "end": "289000"
  },
  {
    "text": "titles and actors and the descriptions of movies and there's probably a l more",
    "start": "289000",
    "end": "294479"
  },
  {
    "text": "service which is actually uh giving us what lists to actually render which again is personal",
    "start": "294479",
    "end": "301639"
  },
  {
    "text": "now um let's say that we have maybe 10 services to call out to it would be hugely inefficient if your device let's",
    "start": "301840",
    "end": "309000"
  },
  {
    "text": "say your TV or your iOS device would just do 10 Network calls to the to these",
    "start": "309000",
    "end": "314199"
  },
  {
    "text": "different microservices it would just not scale at all and you would have a very bad customer experience it would",
    "start": "314199",
    "end": "319520"
  },
  {
    "text": "kind of feel like using the Disney app um it's just not ideal",
    "start": "319520",
    "end": "325039"
  },
  {
    "text": "um so um instead what we need we need a single door um for the API where your",
    "start": "325039",
    "end": "332120"
  },
  {
    "text": "device is calling out to and um from there you do do a fan out to all the different microservices because now we",
    "start": "332120",
    "end": "338120"
  },
  {
    "text": "are in in our Network um we're on a very fast Network um so now we can do that fan out without um performance um",
    "start": "338120",
    "end": "346759"
  },
  {
    "text": "implications now we have another problem to solve because um all these different devices they're actually in Cal ways",
    "start": "346759",
    "end": "354199"
  },
  {
    "text": "they're all a little bit different we try to make to we we try to make the the",
    "start": "354199",
    "end": "359360"
  },
  {
    "text": "UI kind of look and behave similar on every different device but all these different devices like a TV versus an",
    "start": "359360",
    "end": "366199"
  },
  {
    "text": "iOS device they have very different um limitations when it comes to um memory",
    "start": "366199",
    "end": "373240"
  },
  {
    "text": "uh Network bandwidth so they actually load data in subtly different ways now",
    "start": "373240",
    "end": "379199"
  },
  {
    "text": "think about how would you create an API that would work for all these different devices let's say you create a rest API",
    "start": "379199",
    "end": "386039"
  },
  {
    "text": "we're probably going to get either too little or too much data so if we create one rest API to rule",
    "start": "386039",
    "end": "391960"
  },
  {
    "text": "them all it's kind of going going to be a bad experience for all these different devices because we always waste some",
    "start": "391960",
    "end": "398000"
  },
  {
    "text": "sort of data or we have to do multiple Network calls which is also bad to fix that problem um what we did",
    "start": "398000",
    "end": "405000"
  },
  {
    "text": "is we used the what you call a back end for front end pattern so basically every",
    "start": "405000",
    "end": "410160"
  },
  {
    "text": "front end every UI get its own mini back end and that mini back end is then",
    "start": "410160",
    "end": "416199"
  },
  {
    "text": "responsible for doing the fan out and get the data that that uh um UI exactly needs at that specific point and they",
    "start": "416199",
    "end": "423960"
  },
  {
    "text": "used to be um backed by a groovy script so that mini back end was basically a groovy script for a specific screen on a",
    "start": "423960",
    "end": "430800"
  },
  {
    "text": "specific device or actually a version of a specific device and these scripts would be written by UI developers",
    "start": "430800",
    "end": "437039"
  },
  {
    "text": "because they are the only ones who actually know what data exactly they need to render a specific",
    "start": "437039",
    "end": "442199"
  },
  {
    "text": "screen now this groovy script uh would just live in the API server which is a giant Java app basically and um it would",
    "start": "442199",
    "end": "451319"
  },
  {
    "text": "do a call out or a fan out to all these different microservices by just calling Java client libraries and these client",
    "start": "451319",
    "end": "457479"
  },
  {
    "text": "libraries are just basically rappers um for either a grpc service or a a rest",
    "start": "457479",
    "end": "463560"
  },
  {
    "text": "client now here we start to see an interesting um problem because how do you take care of such a uh a fan out in",
    "start": "463560",
    "end": "470479"
  },
  {
    "text": "Java that's actually really not trivial because if you would do this like the traditional way just you create a bunch",
    "start": "470479",
    "end": "477479"
  },
  {
    "text": "of threads and you start to manage um that fan out with with just manual threat management that gets very hairy",
    "start": "477479",
    "end": "483599"
  },
  {
    "text": "very quickly because it's not just managing a bunch of threats it is also",
    "start": "483599",
    "end": "489319"
  },
  {
    "text": "um taking care of fall tolerance what if one of those Services is not responding quickly enough what if it is just",
    "start": "489319",
    "end": "494960"
  },
  {
    "text": "failing now we have to clean up threads and make sure that everything comes together nicely again um again not trial",
    "start": "494960",
    "end": "503879"
  },
  {
    "text": "at all now this is where RX Java and reactive programming really came in because um itive programming gives you a",
    "start": "503879",
    "end": "510840"
  },
  {
    "text": "much better way to do such such such fan outs and um it will take care of all the",
    "start": "510840",
    "end": "516680"
  },
  {
    "text": "threat management and stuff like that you need to uh need to do exactly because of this fan out",
    "start": "516680",
    "end": "522880"
  },
  {
    "text": "behavior that is why we went so deep into um like the reactive programming space and um we are partly responsible",
    "start": "522880",
    "end": "531399"
  },
  {
    "text": "for making RS Java kind of a big thing um many years ago and on top of ARX Java",
    "start": "531399",
    "end": "537480"
  },
  {
    "text": "we created histrix which is kind of the Fall tolerant Library which takes care of failover and bulkheading and all these these",
    "start": "537480",
    "end": "543640"
  },
  {
    "text": "things okay so this made a lot of sense um seven years ago when I joined and",
    "start": "543640",
    "end": "549800"
  },
  {
    "text": "this was kind of the big architecture that was serving most traffic actually it is still a big part of our",
    "start": "549800",
    "end": "555160"
  },
  {
    "text": "architecture because depending on what device you're using it's a slightly older device you probably still get",
    "start": "555160",
    "end": "560959"
  },
  {
    "text": "served by this API because we don't have just the one architecture we have many architectures because it's just nicer",
    "start": "560959",
    "end": "566279"
  },
  {
    "text": "that way um there's some limitations although this this obviously works really well",
    "start": "566279",
    "end": "572920"
  },
  {
    "start": "567000",
    "end": "646000"
  },
  {
    "text": "because we have been able to grow um our Our member base based on this architecture primarily um but one",
    "start": "572920",
    "end": "579040"
  },
  {
    "text": "downside is that there's a script for each endpoint um because again we need an API for each of these different uis",
    "start": "579040",
    "end": "586560"
  },
  {
    "text": "and there just a lot of scripts to uh to maintain and manage another problem is that because",
    "start": "586560",
    "end": "592360"
  },
  {
    "text": "the the UI developers have to create those mini backends because they are know the ones who know what data they",
    "start": "592360",
    "end": "597480"
  },
  {
    "text": "need um they have to write but um now they are in the groovey Java space and using RX Java and um although",
    "start": "597480",
    "end": "606000"
  },
  {
    "text": "they're very capable of doing so it's probably not a primary language that they are using on a daily base but the",
    "start": "606000",
    "end": "612360"
  },
  {
    "text": "main problem is really that reactive is just really hard and um just speaking for myself I've been doing reactive",
    "start": "612360",
    "end": "618320"
  },
  {
    "text": "programming for at least 10 years and I used to be extremely excited about it and tell everyone about it how great it",
    "start": "618320",
    "end": "624440"
  },
  {
    "text": "all is it is actually kind of hard because even if I um with that",
    "start": "624440",
    "end": "629600"
  },
  {
    "text": "experience look at a non-al piece of reactive code I have no clue what's going on and it takes me quite a a bit",
    "start": "629600",
    "end": "636720"
  },
  {
    "text": "of time to actually wrap my head around okay this is actually what's happening and these are the operations that are supposed to happen and this is the",
    "start": "636720",
    "end": "642000"
  },
  {
    "text": "fallback Behavior Etc it's hard um now slowly we have been",
    "start": "642000",
    "end": "649519"
  },
  {
    "start": "646000",
    "end": "755000"
  },
  {
    "text": "migrating to a completely new architecture and that is really putting things in quite a different perspective",
    "start": "649519",
    "end": "655000"
  },
  {
    "text": "and that's all based on graph Federation now for those who uh for for those of you who are not familiar with gra yet",
    "start": "655000",
    "end": "661639"
  },
  {
    "text": "this is like the one minute introduction um comparing it to rest one really important aspect of graph qu is that",
    "start": "661639",
    "end": "668399"
  },
  {
    "text": "with graph qu you always have a schema and um in your schema you put all your",
    "start": "668399",
    "end": "673600"
  },
  {
    "text": "operations so your queries and your uh mutations and you define them and you",
    "start": "673600",
    "end": "679399"
  },
  {
    "text": "tell it exactly which fields are available um from the types that you're returning from your",
    "start": "679399",
    "end": "685560"
  },
  {
    "text": "queries so here we have a shows query which returns a show type and a show has",
    "start": "685560",
    "end": "690639"
  },
  {
    "text": "a title and it has reviews reviews again is another type that we Define and then we can um send a query",
    "start": "690639",
    "end": "698320"
  },
  {
    "text": "um to our API which is on the right hand side of the of the slide and what we have to do there and this is again",
    "start": "698320",
    "end": "703480"
  },
  {
    "text": "really important um we have to be explicit about our field selection so we can't just ask for shows",
    "start": "703480",
    "end": "711000"
  },
  {
    "text": "and get all data from shows no we have to say specifically that you want to get a title and the star score on reviews on",
    "start": "711000",
    "end": "718240"
  },
  {
    "text": "a show um if you're not asking for a field we're not getting the field and this is",
    "start": "718240",
    "end": "723320"
  },
  {
    "text": "super important because um again compared with rest where you basically just you get whatever the rest service",
    "start": "723320",
    "end": "729120"
  },
  {
    "text": "decides to send you um we're just getting the data that you're explicitly asking for it's more more work if you",
    "start": "729120",
    "end": "736399"
  },
  {
    "text": "specify your query but it um solves the whole problem of over fetching where you get much more data than you actually",
    "start": "736399",
    "end": "742160"
  },
  {
    "text": "need and this makes it much easier to create a one API um that serves all the different",
    "start": "742160",
    "end": "747920"
  },
  {
    "text": "uis and typically um when you send a gra qu you will just get the result back um",
    "start": "747920",
    "end": "753519"
  },
  {
    "text": "and coded as Json now we're not just doing graph um we're actually doing graph Federation to",
    "start": "753519",
    "end": "760600"
  },
  {
    "start": "755000",
    "end": "892000"
  },
  {
    "text": "fit it back into our microservices architecture so in this um picture we",
    "start": "760600",
    "end": "766240"
  },
  {
    "text": "still have our microservices but now we call them dgss and it's just a term that we Netflix came up with it's a domain",
    "start": "766240",
    "end": "772600"
  },
  {
    "text": "graph surface um basically just a graph qu surface there's really nothing special about them but we call them djss",
    "start": "772600",
    "end": "780240"
  },
  {
    "text": "and um a DS is just a um a Java microser U but it has a graph endpoint so it has",
    "start": "780240",
    "end": "786040"
  },
  {
    "text": "a graph API and um that also means it has a schema because we said that for",
    "start": "786040",
    "end": "791399"
  },
  {
    "text": "graph you always have a schema now the interesting thing is that we have of course many different um",
    "start": "791399",
    "end": "798120"
  },
  {
    "text": "digestors many different microservices from the perspective of a device so from the perspective of your",
    "start": "798120",
    "end": "805199"
  },
  {
    "text": "TV for example there's just the one big graph well schema and the graph schema",
    "start": "805199",
    "end": "810839"
  },
  {
    "text": "contains all the possible data um that we have to render let's say a",
    "start": "810839",
    "end": "816440"
  },
  {
    "text": "Lolo um your device doesn't care that there might be a whole bunch of",
    "start": "816440",
    "end": "821760"
  },
  {
    "text": "different microsources in the back end and that these different microsources might provide part of that",
    "start": "821760",
    "end": "827600"
  },
  {
    "text": "schema now on the other side of the of the story on the microservices side um",
    "start": "827600",
    "end": "832800"
  },
  {
    "text": "in this example our Lolo dgs is defining a type show with just a title now the",
    "start": "832800",
    "end": "839399"
  },
  {
    "text": "dgs can extend that type show and add an artwork URL to it so the these two",
    "start": "839399",
    "end": "846320"
  },
  {
    "text": "different dgs don't know anything about each other other than the fact that there is a show type but they can both",
    "start": "846320",
    "end": "852519"
  },
  {
    "text": "contribute U parts of that schema even on the same on the same types now all",
    "start": "852519",
    "end": "857959"
  },
  {
    "text": "they need to do is publish their schema to the Federated Gateway and now the",
    "start": "857959",
    "end": "863160"
  },
  {
    "text": "Federated Gateway just knows that well it knows how to talk to a dgs because they all have a SL Graal Point that's it",
    "start": "863160",
    "end": "871120"
  },
  {
    "text": "and um it knows these different parts of the schema so if a query comes in where we ask for both title and artwork URL it",
    "start": "871120",
    "end": "877920"
  },
  {
    "text": "knows that it has to call out to these different djss and fetch the data that it that it",
    "start": "877920",
    "end": "884480"
  },
  {
    "text": "needs so on a very high level not that different from what you previously had",
    "start": "884480",
    "end": "890480"
  },
  {
    "text": "but there's a lot of differences in the details now how there a change our story here first of all we don't have any API",
    "start": "890480",
    "end": "896959"
  },
  {
    "text": "duplication anymore we don't need a back and for front end anymore because graph qu as an API is um flexible enough",
    "start": "896959",
    "end": "904399"
  },
  {
    "text": "because of field selection that we don't really need to create those device specific apis anymore that also means we",
    "start": "904399",
    "end": "909839"
  },
  {
    "text": "don't have serice side development for UI Engineers anymore that's great but we do get a schema to collaborate on and",
    "start": "909839",
    "end": "916199"
  },
  {
    "text": "that's kind of a big deal because now we have um kind of closed the gap between",
    "start": "916199",
    "end": "921440"
  },
  {
    "text": "UI developers and backend um Engineers because now they can collaborate on a schema and figure out okay what data do",
    "start": "921440",
    "end": "927720"
  },
  {
    "text": "we need in what format and very importantly we don't have any client libraries in Java anymore because",
    "start": "927720",
    "end": "934800"
  },
  {
    "text": "the Federated Gateway just knows how to talk to um a generic graph qu service it",
    "start": "934800",
    "end": "940120"
  },
  {
    "text": "doesn't need specific code to call out this to this specific API it's all this",
    "start": "940120",
    "end": "945240"
  },
  {
    "text": "graph qu and all it needs to know how to talk to a graph qu service that that's all and it's all based on specification",
    "start": "945240",
    "end": "951480"
  },
  {
    "text": "on the graph qu specification so we don't need specific code to call to a specific micros service any anymore",
    "start": "951480",
    "end": "960279"
  },
  {
    "start": "959000",
    "end": "1026000"
  },
  {
    "text": "now we get into how does that chance our Java stack well there's really no any place anymore where we need RX or",
    "start": "960279",
    "end": "966880"
  },
  {
    "text": "histric or such things because previously we needed this because we needed that specific code to call out",
    "start": "966880",
    "end": "973240"
  },
  {
    "text": "okay I want to call this microservice and then this microservice and at the same time this other microservice we needed an API for that we don't need it",
    "start": "973240",
    "end": "980519"
  },
  {
    "text": "anymore because that's not taken care of by the graph Federation um specification",
    "start": "980519",
    "end": "986279"
  },
  {
    "text": "now that's not completely true because the Federated Gateway itself is actually still using a um web client to call the",
    "start": "986279",
    "end": "993720"
  },
  {
    "text": "different dgss and that is still um reactive however it is not using any",
    "start": "993720",
    "end": "998959"
  },
  {
    "text": "specific code for these micros servic anymore it's actually a very straightforward piece of web client code",
    "start": "998959",
    "end": "1004079"
  },
  {
    "text": "where it knows okay I have to call these three services just go do it and um it's all profit so it's it's it's fairly",
    "start": "1004079",
    "end": "1011560"
  },
  {
    "text": "simple all the dgss and the other microservices in the back end they're all just normal Java apps there's not",
    "start": "1011560",
    "end": "1018480"
  },
  {
    "text": "really any anything specific about them and they don't need to do any um reactive style of of programming pretty",
    "start": "1018480",
    "end": "1025480"
  },
  {
    "text": "much anywhere now before we read uh dive deep into um the rest of our Java stack um I",
    "start": "1025480",
    "end": "1032079"
  },
  {
    "start": "1026000",
    "end": "1124000"
  },
  {
    "text": "want to speak a little bit about the micro in microservices uh because there's another thing that um people seem to be confused",
    "start": "1032079",
    "end": "1038880"
  },
  {
    "text": "about how um how that actually works in practice so it is true that a microser owns a specific functionality or data",
    "start": "1038880",
    "end": "1045600"
  },
  {
    "text": "set and more importantly that um SE a microservices owned by a single team and",
    "start": "1045600",
    "end": "1051160"
  },
  {
    "text": "that is really important part about microservices and this is all even more true with this um graphic Federated",
    "start": "1051160",
    "end": "1057200"
  },
  {
    "text": "architecture because it's now even easier to just split things out in different microservices and make that",
    "start": "1057200",
    "end": "1062520"
  },
  {
    "text": "all work very nicely however don't be fooled by the size of those microservices because a",
    "start": "1062520",
    "end": "1068960"
  },
  {
    "text": "lot of those so-called microservices at Netflix are a lot larger just looking at a code base than like the big monolith",
    "start": "1068960",
    "end": "1075880"
  },
  {
    "text": "that I've worked at at many other companies so these some of these systems are are really really big there's a lot",
    "start": "1075880",
    "end": "1081840"
  },
  {
    "text": "of code there and um and of course when they get deployed they might be deployed on clusters of thousands of um AWS",
    "start": "1081840",
    "end": "1089080"
  },
  {
    "text": "instances so there's really nothing small about them um that kind of also answers the question should I do",
    "start": "1089080",
    "end": "1094919"
  },
  {
    "text": "microservices well it depends on your team size do you have like the one team that takes care of everything and it's",
    "start": "1094919",
    "end": "1100840"
  },
  {
    "text": "just a small team if you would add microservices there you're just adding um complexity at that point for no good",
    "start": "1100840",
    "end": "1107120"
  },
  {
    "text": "reason but if you want to split your team um to into into smaller teams",
    "start": "1107120",
    "end": "1112159"
  },
  {
    "text": "basically just because of Team size then it also makes sense to split up your larger system into smaller pieces so",
    "start": "1112159",
    "end": "1117919"
  },
  {
    "text": "that each team can own and U operate one of those uh one or more of those",
    "start": "1117919",
    "end": "1124320"
  },
  {
    "start": "1124000",
    "end": "1254000"
  },
  {
    "text": "Services right um time to actually we get into the Java side of things uh we",
    "start": "1124320",
    "end": "1129640"
  },
  {
    "text": "now know on a higher level how we are how in where we're using Java U but now we talk about um how it actually looks",
    "start": "1129640",
    "end": "1137039"
  },
  {
    "text": "like um we're now mostly on Java Java 17 and that is about time um and we're",
    "start": "1137039",
    "end": "1143720"
  },
  {
    "text": "already um also actively testing and rolling out with Java 21 uh Java 21 just",
    "start": "1143720",
    "end": "1149200"
  },
  {
    "text": "came out um last week officially and we're just using a regular aul Zulu uh",
    "start": "1149200",
    "end": "1154880"
  },
  {
    "text": "jvm so just an open jdk build um we are not building our own jvm we don't have",
    "start": "1154880",
    "end": "1159960"
  },
  {
    "text": "any plans to build our own jvm although there was a very interesting Reddit Thread about claiming that we do um we",
    "start": "1159960",
    "end": "1165520"
  },
  {
    "text": "really don't uh and have no interest in doing so open J reg grade um we have",
    "start": "1165520",
    "end": "1171480"
  },
  {
    "text": "about 2800 Java applications and um these are mostly all uh microservices of",
    "start": "1171480",
    "end": "1178679"
  },
  {
    "text": "a variety of sizes and then about, 1500 internal libraries some of them are",
    "start": "1178679",
    "end": "1184400"
  },
  {
    "text": "actual libraries and many of them are just uh kind of client libraries which is basically just sitting in front of a",
    "start": "1184400",
    "end": "1190039"
  },
  {
    "text": "gopc or rest surface um for our build system we use",
    "start": "1190039",
    "end": "1195480"
  },
  {
    "text": "gradal and on top of gradal we have nebula that's a set of Open Source gridle plugins and the most important",
    "start": "1195480",
    "end": "1201200"
  },
  {
    "text": "aspect of nebula and I I highly recommend looking into this is um version resolution of libraries so um as",
    "start": "1201200",
    "end": "1208799"
  },
  {
    "text": "you know Java has a flat class spot so um you only want the one you can only have the one version of your library at",
    "start": "1208799",
    "end": "1214799"
  },
  {
    "text": "a given time if you have more than one version interesting things happen um and",
    "start": "1214799",
    "end": "1220720"
  },
  {
    "text": "to prevent these interesting things from happening you really want to just pick one basically and Nea takes care of that",
    "start": "1220720",
    "end": "1226120"
  },
  {
    "text": "and um the next thing that Nea does is first loing so basically you will get",
    "start": "1226120",
    "end": "1231360"
  },
  {
    "text": "reproducible builds that you always build with the same set of versions of libraries until you explicitly upgrade",
    "start": "1231360",
    "end": "1237559"
  },
  {
    "text": "and um that makes it all very uh reproducible and we're pretty much exclusively using intell as our ID and",
    "start": "1237559",
    "end": "1245080"
  },
  {
    "text": "in the last few years we have also um invested a lot of effort in actually developing intellig plugins um to kind",
    "start": "1245080",
    "end": "1251600"
  },
  {
    "text": "of help developers doing the right thing so I mentioned we are mostly on",
    "start": "1251600",
    "end": "1256760"
  },
  {
    "start": "1254000",
    "end": "1439000"
  },
  {
    "text": "Java 17 and that is actually kind of a big deal because um this is sort of embarrassing but at the beginning of the",
    "start": "1256760",
    "end": "1262679"
  },
  {
    "text": "year we're mostly on Java 8 and um Java 8 is kind of old um so why were we still",
    "start": "1262679",
    "end": "1268799"
  },
  {
    "text": "on Java 8 because um we had Java 11 and then Java 17 available for a very long",
    "start": "1268799",
    "end": "1274760"
  },
  {
    "text": "time already um but somehow we just didn't move well one of the reasons is that",
    "start": "1274760",
    "end": "1280400"
  },
  {
    "text": "until about a year ago um about half of our microservices especially the bigger ones were still on our old application",
    "start": "1280400",
    "end": "1287279"
  },
  {
    "text": "stack it was not spring we'll talk about that that later it was some home homegrown um thing based on juice and a",
    "start": "1287279",
    "end": "1294120"
  },
  {
    "text": "lot of old um jav e uh apis um lots of old libraries that were no longer",
    "start": "1294120",
    "end": "1299480"
  },
  {
    "text": "maintained and at the very beginning when we started upgrading to Java 11 initially um a lot of these older",
    "start": "1299480",
    "end": "1305799"
  },
  {
    "text": "libraries were just not compatible and then developers just got the the impression that well this upgrade is",
    "start": "1305799",
    "end": "1311679"
  },
  {
    "text": "kind of hard and it breaks things and I should probably just not do it um on the other hand there was also",
    "start": "1311679",
    "end": "1318000"
  },
  {
    "text": "very limited the perceived benefits for developers because if you compare Java 8 to Java 17 there's definitely some nice",
    "start": "1318000",
    "end": "1324559"
  },
  {
    "text": "language features I mean text blocks alone are enough reason for me to upgrade um but it's not that big of a",
    "start": "1324559",
    "end": "1332400"
  },
  {
    "text": "deal right the differences between eight to 17 is it's kind of nice but it's it's not like changing your your life that",
    "start": "1332400",
    "end": "1339120"
  },
  {
    "text": "much actually you saw more excitement about moving to cot Lan than we did just",
    "start": "1339120",
    "end": "1344840"
  },
  {
    "text": "upgrading the jdk now when we finally did start pushing um on updating to Java 17 uh we",
    "start": "1344840",
    "end": "1352039"
  },
  {
    "text": "saw something really interesting we saw about 20% better CPU usage on 17 versus",
    "start": "1352039",
    "end": "1357520"
  },
  {
    "text": "Java 8 without any code changes and it was all just because of improvements in",
    "start": "1357520",
    "end": "1363080"
  },
  {
    "text": "G1 the garbage collector that we're mostly using um and 20% better CPU is like kind",
    "start": "1363080",
    "end": "1369080"
  },
  {
    "text": "of a big deal at a scale that we're running that's that's a lot of money potentially um and speaking about G1 uh",
    "start": "1369080",
    "end": "1375559"
  },
  {
    "text": "G1 is the garbage collector that we use for most of our workloads um at the moment we've tested with all the",
    "start": "1375559",
    "end": "1381480"
  },
  {
    "text": "different um different garbage collectors um available but G1 is generally the best balance um where you",
    "start": "1381480",
    "end": "1389279"
  },
  {
    "text": "get like the the best balance of tradeoffs um there are some exceptions um for example zul which is our proxy um",
    "start": "1389279",
    "end": "1395919"
  },
  {
    "text": "runs on shanoa that's the low part time garbage collector U but for most",
    "start": "1395919",
    "end": "1401159"
  },
  {
    "text": "workloads um shanoa doesn't work as well as G1 does so although G1 isn't that",
    "start": "1401159",
    "end": "1407400"
  },
  {
    "text": "exciting anymore it is still just really really good so now that we have finally made",
    "start": "1407400",
    "end": "1414120"
  },
  {
    "text": "that big push to Java 17 and we've got most Services just upgraded um we also",
    "start": "1414120",
    "end": "1420080"
  },
  {
    "text": "have Java 21 available which again just came out um last last week uh but we've",
    "start": "1420080",
    "end": "1425320"
  },
  {
    "text": "been testing with that for quite a few months already and now things really get exciting well the first exciting thing",
    "start": "1425320",
    "end": "1430720"
  },
  {
    "text": "is that if you're on Java 17 upgrading to Java 21 is kind of almost a noop it's just super easy you don't have the",
    "start": "1430720",
    "end": "1436640"
  },
  {
    "text": "problems that we had from java 8 two newer versions um but there's also just a lot more interesting uh",
    "start": "1436640",
    "end": "1443640"
  },
  {
    "start": "1439000",
    "end": "1674000"
  },
  {
    "text": "features and the first obvious one that I'm super excited about is virtual threads and um this is just copy pasted",
    "start": "1443640",
    "end": "1451159"
  },
  {
    "text": "from uh the Jep the specification from uh Java 21 or virtual threats um it's supposed to enable surf applications",
    "start": "1451159",
    "end": "1457880"
  },
  {
    "text": "written in a simple thread per request style to scale with near optimal heart utilization sounds pretty good um well",
    "start": "1457880",
    "end": "1465600"
  },
  {
    "text": "this thread request style if you're not familiar with that with that means if you're using something that's based on surls so spring web MVC or any other",
    "start": "1465600",
    "end": "1473480"
  },
  {
    "text": "framework based on surls uh thread request is basically what you get um a request comes in you give Tomcat or",
    "start": "1473480",
    "end": "1480600"
  },
  {
    "text": "whatever server you're using gives it a thread and that thread is basically where all the work happens or start",
    "start": "1480600",
    "end": "1486320"
  },
  {
    "text": "starts happening for the specific request and stays with that request until the request is done now that is a very simple style um",
    "start": "1486320",
    "end": "1494360"
  },
  {
    "text": "and easy to understand style of um of programming and a lot of Frameworks are based on that uh but it has some",
    "start": "1494360",
    "end": "1499600"
  },
  {
    "text": "scalability limitations because you can only have so many threats um effectively running in a system and if you have a",
    "start": "1499600",
    "end": "1507120"
  },
  {
    "text": "lot of requests coming in which we obviously have then um the number of threads is just a limiting factor in how",
    "start": "1507120",
    "end": "1513760"
  },
  {
    "text": "you can scale your systems so changing that uh that model is um is is really",
    "start": "1513760",
    "end": "1519120"
  },
  {
    "text": "important the alternative to that is of course um doing reactive again so do",
    "start": "1519120",
    "end": "1524960"
  },
  {
    "text": "something like V flux uh but that also gets you in reactive programming again with all the complexities that we",
    "start": "1524960",
    "end": "1530039"
  },
  {
    "text": "already talked about now I think that virtual threats is probably the most exciting Java feature since probably",
    "start": "1530039",
    "end": "1536600"
  },
  {
    "text": "lambdas and I think that um down the line it is really going to uh CH the a",
    "start": "1536600",
    "end": "1542840"
  },
  {
    "text": "um right and scale our Java code and I think that in the end it is probably",
    "start": "1542840",
    "end": "1548480"
  },
  {
    "text": "going to further reduce reactive uh code because it's just not really any um need for it anymore and it it just takes away",
    "start": "1548480",
    "end": "1554679"
  },
  {
    "text": "that complexity um we have already been running ftual thread in production for",
    "start": "1554679",
    "end": "1560320"
  },
  {
    "text": "um the last month or so um kind of experimenting with it with it a little bit I'll get back to that in more detail",
    "start": "1560320",
    "end": "1567320"
  },
  {
    "text": "and then the other interesting feature in Java 21 is um the new garbage collector or the updated garbage",
    "start": "1567320",
    "end": "1572559"
  },
  {
    "text": "collector I should say because zgz um is not new that was already available in previous versions um but they now made",
    "start": "1572559",
    "end": "1579480"
  },
  {
    "text": "it generational and that makes it behave more similar to what G1 or give it more",
    "start": "1579480",
    "end": "1585880"
  },
  {
    "text": "of the benefits of a G1 as a garbage collector has and that will make the zgz um a better",
    "start": "1585880",
    "end": "1592760"
  },
  {
    "text": "Fit For A broader variety of workloads so it's still focused on low low p p",
    "start": "1592760",
    "end": "1598480"
  },
  {
    "text": "times um but it will just work in a in a broader variety of use cases and um it's",
    "start": "1598480",
    "end": "1604640"
  },
  {
    "text": "a little bit early to tell because we haven't done enough testing with this yet but we're expecting that uh zgz is",
    "start": "1604640",
    "end": "1610399"
  },
  {
    "text": "now going to be a really good performance upgrade basically um for a",
    "start": "1610399",
    "end": "1615720"
  },
  {
    "text": "lot of our workloads and a lot of our services and again again these things are are a really big deal where we can save a lot of money on uh on",
    "start": "1615720",
    "end": "1623360"
  },
  {
    "text": "resources um Shan andoa is also now generational but that is still in preview but again we're going to um just",
    "start": "1623360",
    "end": "1629960"
  },
  {
    "text": "run with that and see what see what happens um garbage colleting collection is really just too complex of a topic to",
    "start": "1629960",
    "end": "1636320"
  },
  {
    "text": "just know that oh I drop drop in there garbage collector with these flag and it's all going to be magic and super",
    "start": "1636320",
    "end": "1641720"
  },
  {
    "text": "fast just doesn't work that way um it's kind of a business where you just try things out and it TW it a bit try it",
    "start": "1641720",
    "end": "1648480"
  },
  {
    "text": "again and then you find the optimal State um we're not quite there yet but we are expecting uh to see some very",
    "start": "1648480",
    "end": "1654640"
  },
  {
    "text": "interesting things there and then finally in Java 21 you just also have a lot of nice language features and we get",
    "start": "1654640",
    "end": "1661519"
  },
  {
    "text": "this concept of data oriented programming now in the Java language and it is really nice it's kind of the combination of records and um um pattern",
    "start": "1661519",
    "end": "1669880"
  },
  {
    "text": "matching and things like that um so Java is pretty nice uh right now right back to Virtual threats um",
    "start": "1669880",
    "end": "1677559"
  },
  {
    "start": "1674000",
    "end": "1952000"
  },
  {
    "text": "although it's said this is kind of a big deal and is um probably going to change the way we write our code and scale our",
    "start": "1677559",
    "end": "1684600"
  },
  {
    "text": "code it is also not a free lunch it's not just that you enable Java 21 on your",
    "start": "1684600",
    "end": "1690080"
  },
  {
    "text": "uh instances and now by the magic of virtual threads everything uh runs faster it doesn't work that",
    "start": "1690080",
    "end": "1696200"
  },
  {
    "text": "way um first of all we have to change our framework library and to some extent",
    "start": "1696200",
    "end": "1702159"
  },
  {
    "text": "application code to actually start leveraging for Threads that's step one there's a few sort of obvious places",
    "start": "1702159",
    "end": "1708200"
  },
  {
    "text": "where we can do that and already started experimenting um so the Tomcat connection pool um again this is the",
    "start": "1708200",
    "end": "1714559"
  },
  {
    "text": "pool of threads where it gives a thread per request um that seems a very obvious",
    "start": "1714559",
    "end": "1720880"
  },
  {
    "text": "place where we can just use Virtual threads instead so instead of using a thread pool you use Virtual threads um",
    "start": "1720880",
    "end": "1726519"
  },
  {
    "text": "we've already enabled that we already already running in some some big services in production uh with virtual threads enabled um it doesn't",
    "start": "1726519",
    "end": "1733960"
  },
  {
    "text": "automatically make things a lot faster because you need to do other things as well to we leverage it um but it also",
    "start": "1733960",
    "end": "1740480"
  },
  {
    "text": "doesn't make things things worse so we can just safely enable this basically um sometimes get some benefits out of it",
    "start": "1740480",
    "end": "1746320"
  },
  {
    "text": "sometimes it doesn't really change it because it wasn't a a limiting factor um but that's something that you should",
    "start": "1746320",
    "end": "1752000"
  },
  {
    "text": "probably start with um Asing task execution in uh",
    "start": "1752000",
    "end": "1757039"
  },
  {
    "text": "spring um that is again just a thread pool um and very of often you get U",
    "start": "1757039",
    "end": "1762720"
  },
  {
    "text": "blocking code for like other network calls Etc there anyway seems to be a good candidate four virtual threads um",
    "start": "1762720",
    "end": "1769399"
  },
  {
    "text": "so we enabled it there then a really big one that we haven't really gotten into yet but I expect that will be um kind of",
    "start": "1769399",
    "end": "1775720"
  },
  {
    "text": "game changing is um How We Do graph qu query execution so um potentially with",
    "start": "1775720",
    "end": "1782000"
  },
  {
    "text": "graph qu um every field can be fetched in parallel and um it makes a lot of",
    "start": "1782000",
    "end": "1787880"
  },
  {
    "text": "sense that we would actually do that um on Virtual threats because again this is often blocking code where you do more",
    "start": "1787880",
    "end": "1793559"
  },
  {
    "text": "Network calls and things like that um the virtual threat just make a lot of s",
    "start": "1793559",
    "end": "1798760"
  },
  {
    "text": "there but we have to um yeah implement this and test it out and it'll probably take a little bit of time before we get",
    "start": "1798760",
    "end": "1804880"
  },
  {
    "text": "the optimal model model there then we have some other places that seemed obvious um for example we have a worker",
    "start": "1804880",
    "end": "1812679"
  },
  {
    "text": "a threat worker pool for GPC clients where the GPC calls um to outgoing Services happen and it seemed like such",
    "start": "1812679",
    "end": "1818880"
  },
  {
    "text": "an obvious place like oh let's drop in Virtual threads there and then we saw that we actually decreased performance",
    "start": "1818880",
    "end": "1824120"
  },
  {
    "text": "by a few percent um and it turns out that these GPC client worker pools are very CPU intensive and if you then drop",
    "start": "1824120",
    "end": "1831440"
  },
  {
    "text": "in Virtual threats you actually make things worse so that's not a bad thing necessarily there is just something that",
    "start": "1831440",
    "end": "1836919"
  },
  {
    "text": "we had to learn uh but it does show that this is not a free lunch we actually have to figure out where does it make",
    "start": "1836919",
    "end": "1842480"
  },
  {
    "text": "sense where does it not make sense and um Implement virtual threats at the right points basically the good news is",
    "start": "1842480",
    "end": "1848679"
  },
  {
    "text": "this is mostly all framework work at this point um we can do it as as a",
    "start": "1848679",
    "end": "1853960"
  },
  {
    "text": "platform team and we can do it in open source libraries that we're using um and then our developers will just um get",
    "start": "1853960",
    "end": "1861760"
  },
  {
    "text": "faster apps basically and that's good um in Spring 6.1 or spring boot 3.2 um",
    "start": "1861760",
    "end": "1868159"
  },
  {
    "text": "there's a lot of work being done to leverage virtual threats out of the box uh that will come out next month and we",
    "start": "1868159",
    "end": "1873519"
  },
  {
    "text": "will probably adopt that um somewhere early next year and then there's a really interesting discussion going on",
    "start": "1873519",
    "end": "1879600"
  },
  {
    "text": "in uh on gab in graphic field Java about um changing the uh graph FY execution um",
    "start": "1879600",
    "end": "1887600"
  },
  {
    "text": "or potentially even rewriting it to fully leverage fful threats um that is not figured out yet it's a discussion",
    "start": "1887600",
    "end": "1894120"
  },
  {
    "text": "going on but if you're in that space that's definitely something to um um contribute to I think um and then for",
    "start": "1894120",
    "end": "1901200"
  },
  {
    "text": "the user code because all this other stuff is mostly framework code for user code I think structur concurrency is um",
    "start": "1901200",
    "end": "1907919"
  },
  {
    "text": "the other place that we're going to um see a lot of replacement of reactive code because struct concurrency is",
    "start": "1907919",
    "end": "1914120"
  },
  {
    "text": "finally giving us the API to deal with things like fanous and then bring um everything together again uh",
    "start": "1914120",
    "end": "1920120"
  },
  {
    "text": "structure concurrency is still in preview in Java 21 but it seems very close to final so I think it's it's at",
    "start": "1920120",
    "end": "1926679"
  },
  {
    "text": "least safe to start experimenting with this and um try things out and then a",
    "start": "1926679",
    "end": "1931799"
  },
  {
    "text": "little bit further down the line we also get scoped values which is another um new specification coming out related to",
    "start": "1931799",
    "end": "1938080"
  },
  {
    "text": "FAL threats and uh that is going to give us a way to basically get rid of thread",
    "start": "1938080",
    "end": "1943279"
  },
  {
    "text": "local and this is again mostly framework related work um but it's just a much nicer and more efficient way of um",
    "start": "1943279",
    "end": "1949799"
  },
  {
    "text": "something similar to threat local right so I've already kind of",
    "start": "1949799",
    "end": "1955880"
  },
  {
    "start": "1952000",
    "end": "2096000"
  },
  {
    "text": "mentioned a little bit um that we use spring Boot and um since about a year or",
    "start": "1955880",
    "end": "1960960"
  },
  {
    "text": "so we are completely standard standardized on Spring boot so up until a year ago about 50% of our application",
    "start": "1960960",
    "end": "1967320"
  },
  {
    "text": "were still on our own homegrown U not maintained at all Java stack based on juice and um a bunch of very outdated um",
    "start": "1967320",
    "end": "1975159"
  },
  {
    "text": "Java e uh libraries and and um we didn't really make a good push in getting",
    "start": "1975159",
    "end": "1981200"
  },
  {
    "text": "everything on Spring boot uh but all the new applications were based on Spring boot already now um that became very",
    "start": "1981200",
    "end": "1987039"
  },
  {
    "text": "messy especially because that old homegrown framework just wasn't maintained very well so we made a a",
    "start": "1987039",
    "end": "1992600"
  },
  {
    "text": "really big effort to just get all the services migrated to Spring boot um that migration was mostly just a lot of blood",
    "start": "1992600",
    "end": "1999000"
  },
  {
    "text": "sweat and tears tears of a lot of teams um it's just not easy to go from one program program model to another one uh",
    "start": "1999000",
    "end": "2006240"
  },
  {
    "text": "but as platform teams we did provide a lot of tooling for example intellig plugins um to take care of kind of where",
    "start": "2006240",
    "end": "2012919"
  },
  {
    "text": "possible um the code migrations and uh configuration migrations and things like that but still it was just a lot of work",
    "start": "2012919",
    "end": "2019720"
  },
  {
    "text": "um pretty painful now that we are on Spring boot though um we have like the one framework that everyone is using and",
    "start": "2019720",
    "end": "2026240"
  },
  {
    "text": "that makes things um a lot nicer for everyone now we are trying to mostly",
    "start": "2026240",
    "end": "2032000"
  },
  {
    "text": "just use the latest version of os spring boot um we're currently using 31 um and",
    "start": "2032000",
    "end": "2038919"
  },
  {
    "text": "um uh try to stay as close as possible to the open source Community because that's where we get the most benefit but",
    "start": "2038919",
    "end": "2045039"
  },
  {
    "text": "on top of that we need a lot of integration with our Netflix ecosystem and um like the infrastructure that we",
    "start": "2045039",
    "end": "2050638"
  },
  {
    "text": "have so that is what we call Spring boot Netflix and that's basically just a whole set of modules we buildt on top of",
    "start": "2050639",
    "end": "2056200"
  },
  {
    "text": "spring Boot and um that's basically just um developed in the same way as spring",
    "start": "2056200",
    "end": "2061638"
  },
  {
    "text": "boot itself has built so lots of Auto configurations and that's where we add things like GPC client and surfice",
    "start": "2061639",
    "end": "2068480"
  },
  {
    "text": "support um that's very integrated with our SSO stack um so for outz and outn um",
    "start": "2068480",
    "end": "2075040"
  },
  {
    "text": "you get observability so tracing metrics and uh distributed logging um we have a",
    "start": "2075040",
    "end": "2080679"
  },
  {
    "text": "whole bunch of HTP clients that take care of mtls and again observability and integration with a security stack and U",
    "start": "2080679",
    "end": "2088000"
  },
  {
    "text": "we deploy all these applications with embedded Tomcat um which is pretty standard uh for a um a spring spring",
    "start": "2088000",
    "end": "2094520"
  },
  {
    "text": "boot application now to give an idea of um kind of the features how that um how",
    "start": "2094520",
    "end": "2101400"
  },
  {
    "start": "2096000",
    "end": "2128000"
  },
  {
    "text": "that looks like um we have for example a um at uh GPC spring client and um this",
    "start": "2101400",
    "end": "2108160"
  },
  {
    "text": "looks very spring-- like right but this is something that we added and basically this is referencing a property files",
    "start": "2108160",
    "end": "2114400"
  },
  {
    "text": "which describes the uh GPC service it tells where the service lives and it uh configures like fail failover behavior",
    "start": "2114400",
    "end": "2122000"
  },
  {
    "text": "and that way you can just use a Java API with an exra annotation uh to call another uh GPC",
    "start": "2122000",
    "end": "2128440"
  },
  {
    "start": "2128000",
    "end": "2141000"
  },
  {
    "text": "surface and with that you also get um things like observability completely for free for so for any request either GPC",
    "start": "2128440",
    "end": "2134680"
  },
  {
    "text": "or HTTP you get observability for free with tracing and and and metrics and all",
    "start": "2134680",
    "end": "2139720"
  },
  {
    "text": "these things um available um another example is um we integrate with spring security so uh we",
    "start": "2139720",
    "end": "2146680"
  },
  {
    "start": "2141000",
    "end": "2170000"
  },
  {
    "text": "can uh get our SSO color so um you get the user basically that culture surface",
    "start": "2146680",
    "end": "2153200"
  },
  {
    "text": "even if there were many services in between um that in in in in the C chain",
    "start": "2153200",
    "end": "2159319"
  },
  {
    "text": "um and as I said we integrate with Spring Security to also do like role based um authentication based on our own",
    "start": "2159319",
    "end": "2167319"
  },
  {
    "text": "um authentication uh models now you might be wondering why are we using spring boot why not some",
    "start": "2167319",
    "end": "2173400"
  },
  {
    "start": "2170000",
    "end": "2233000"
  },
  {
    "text": "other more fancy framework because of course there's been a lot of innovation in the Java space in the last few years",
    "start": "2173400",
    "end": "2179240"
  },
  {
    "text": "with other uh Frameworks available but spring boot is really the most popular Java framework that doesn't necessarily",
    "start": "2179240",
    "end": "2185200"
  },
  {
    "text": "make it better uh but it does give a lot of when it comes to um using the open",
    "start": "2185200",
    "end": "2190400"
  },
  {
    "text": "source Community which is B big of course for spring boot um and existing",
    "start": "2190400",
    "end": "2195480"
  },
  {
    "text": "uh documentation training and all these things but more importantly I think is um just looking at the spring framework",
    "start": "2195480",
    "end": "2202000"
  },
  {
    "text": "it has been just so well maintained over over the years um I think I started using the spring framework 15 years ago",
    "start": "2202000",
    "end": "2209359"
  },
  {
    "text": "um and it is quite amazing actually that um that framework has been so stable and",
    "start": "2209359",
    "end": "2215319"
  },
  {
    "text": "so well evolved basically over time it's not the same thing as it was 15 years ago but um a lot of the concepts are",
    "start": "2215319",
    "end": "2221760"
  },
  {
    "text": "still uh still there um and that gives us a lot of Trust basically in the in",
    "start": "2221760",
    "end": "2227160"
  },
  {
    "text": "the spring team that um also in the future this will be a very good place to be",
    "start": "2227160",
    "end": "2233760"
  },
  {
    "start": "2233000",
    "end": "2379000"
  },
  {
    "text": "basically now you might know that um a year ago um almost a year ago spring boot 3 came out and that was kind of a",
    "start": "2233760",
    "end": "2240200"
  },
  {
    "text": "big deal because spring boot 3 really just unblocks the Jaffa ecosystem I think because the Jaffa ecosystem was a",
    "start": "2240200",
    "end": "2246400"
  },
  {
    "text": "little bit stuck in two different ways the first reason is that um if you look",
    "start": "2246400",
    "end": "2251480"
  },
  {
    "text": "at the like the open source ecosystem in Java it was stuck on Java 8 because a",
    "start": "2251480",
    "end": "2256520"
  },
  {
    "text": "lot of companies were stuck on Java 8 and no one wanted to be the first one who would break break that basically um",
    "start": "2256520",
    "end": "2263280"
  },
  {
    "text": "and companies didn't upgrade because everything just worked fine on Java 8 anyway now finally the spring team I",
    "start": "2263280",
    "end": "2268480"
  },
  {
    "text": "said we're done with Java 8 Java 17 is your new Baseline so now we force the whole Community basically to say okay",
    "start": "2268480",
    "end": "2275400"
  },
  {
    "text": "fine we'll we'll do Java 17 and everything can start moving again and now we can start leveraging those new uh",
    "start": "2275400",
    "end": "2281720"
  },
  {
    "text": "language features and it also makes it possible that although it's just Baseline on Java 17 we can actually also",
    "start": "2281720",
    "end": "2288119"
  },
  {
    "text": "start using Java 21 with virtual threads under the hood and that's exactly what they're doing now unfortunately oh oh",
    "start": "2288119",
    "end": "2295040"
  },
  {
    "text": "then the second part is the the whole mes around Java X to Jakarta um than Oracle um this is just a simple",
    "start": "2295040",
    "end": "2302160"
  },
  {
    "text": "namespace ch um but um it is extremely complex for a library ecosystem because",
    "start": "2302160",
    "end": "2308240"
  },
  {
    "text": "a library um can either use Java X or Jakarta and that makes it either",
    "start": "2308240",
    "end": "2313319"
  },
  {
    "text": "compatible with one but not the other and that's that's super painful now because the spring team is now saying",
    "start": "2313319",
    "end": "2319040"
  },
  {
    "text": "okay we're just doing Jakarta now the whole ecosystem can start moving because it has such a big impact and we we",
    "start": "2319040",
    "end": "2325480"
  },
  {
    "text": "finally get past that that that point that we were kind of stuck on it is a big chance to get on these um",
    "start": "2325480",
    "end": "2332640"
  },
  {
    "text": "new things though so moving to Spring boot three isn't trivial and uh we've done a lot of tooling work to make that",
    "start": "2332640",
    "end": "2338839"
  },
  {
    "text": "happen um probably the most interesting one there is the um open source a gradal plugin that does bite code",
    "start": "2338839",
    "end": "2345480"
  },
  {
    "text": "transformation at um artifact resolution time so when you download an artifact at jar file it will do a bite bite code",
    "start": "2345480",
    "end": "2353560"
  },
  {
    "text": "translation um if you're on Spring boot tree from java X to Jakarta so it basically just fixes that whole",
    "start": "2353560",
    "end": "2360079"
  },
  {
    "text": "namespace problem on the Fly you don't have to change your library and that kind of gets us unstuck now did a much",
    "start": "2360079",
    "end": "2366160"
  },
  {
    "text": "broader topic and my coworker AI um just did a session on um uh on Spring One V",
    "start": "2366160",
    "end": "2371760"
  },
  {
    "text": "explore and that session is online so um if you want to know more about this upgrade specifically um I recommend",
    "start": "2371760",
    "end": "2377359"
  },
  {
    "text": "watching that talk I'll skip this um then I talked quite a bit about DJs",
    "start": "2377359",
    "end": "2384880"
  },
  {
    "start": "2379000",
    "end": "2473000"
  },
  {
    "text": "and DJs is not not some sort of concept graphical Federation is the concept uh the dgs framework is just the framework",
    "start": "2384880",
    "end": "2391720"
  },
  {
    "text": "that um that we use to build those graph F services in Java now about three or four years ago when we started um kind",
    "start": "2391720",
    "end": "2398800"
  },
  {
    "text": "of the journey um onto graph and graph Federation um there really wasn't any",
    "start": "2398800",
    "end": "2404960"
  },
  {
    "text": "good Java framework out there um that was kind of mature enough um for um for",
    "start": "2404960",
    "end": "2410160"
  },
  {
    "text": "us to use it at our scale there was graph qu Java which is kind of a lower level graph um Library um that library",
    "start": "2410160",
    "end": "2418839"
  },
  {
    "text": "is great and we're building on top of it so this is completely uh crucial for uh for us but it's too low level to use",
    "start": "2418839",
    "end": "2425319"
  },
  {
    "text": "directly an application um at least in in my opinion so what we really wanted is a",
    "start": "2425319",
    "end": "2432440"
  },
  {
    "text": "graph 12 framework for spring Boot and um basically giving a programming",
    "start": "2432440",
    "end": "2438400"
  },
  {
    "text": "program programing model based on annotations as you're used to in Spring Boot and we needed things like code",
    "start": "2438400",
    "end": "2444319"
  },
  {
    "text": "generation for schema types and support for Federation and all these things and that's exactly what you're getting with",
    "start": "2444319",
    "end": "2450079"
  },
  {
    "text": "the dgs framework now about I think it's almost three years ago um we decided to",
    "start": "2450079",
    "end": "2455400"
  },
  {
    "text": "open source the dgs framework uh it's on GitHub um there's a really large community there's lots of companies",
    "start": "2455400",
    "end": "2460800"
  },
  {
    "text": "using it now and um it's also exactly the version that we are using at Netflix so we're not using a fork or anything",
    "start": "2460800",
    "end": "2468240"
  },
  {
    "text": "like that um so it's um very evolved very nicely over the last few years now",
    "start": "2468240",
    "end": "2474079"
  },
  {
    "start": "2473000",
    "end": "2572000"
  },
  {
    "text": "you might be wondering if you are if you are actually in a graph in Spring space um You probably have seen that in Spring",
    "start": "2474079",
    "end": "2480000"
  },
  {
    "text": "boot 3 the spring team also added graph support which they call Spring graph and that was kind of not IDE for",
    "start": "2480000",
    "end": "2488480"
  },
  {
    "text": "um the larger Community because now the community would have to choose between okay do I bet on the dgs framework or do",
    "start": "2488480",
    "end": "2494160"
  },
  {
    "text": "I go with spring R will and both seem interesting both seem great both have um a interesting feature set but a",
    "start": "2494160",
    "end": "2499920"
  },
  {
    "text": "different feature set um what do I bet on and I could um go and sell you the",
    "start": "2499920",
    "end": "2505960"
  },
  {
    "text": "dgs framework how that's better and better evolved and faster and all these things which is right now probably true",
    "start": "2505960",
    "end": "2511160"
  },
  {
    "text": "uh because we've been around for a little bit longer but that's really not the point the point is that you shouldn't have to choose so um in the",
    "start": "2511160",
    "end": "2517359"
  },
  {
    "text": "last few months we've been working with a spring team um to get full integration between those two Frameworks and what",
    "start": "2517359",
    "end": "2524119"
  },
  {
    "text": "you basically get with that is that you can combine the dgs and spring graph F programming models and its features in",
    "start": "2524119",
    "end": "2531040"
  },
  {
    "text": "the same app and it will just happily live together and that's possible because we're both using um graphic",
    "start": "2531040",
    "end": "2538319"
  },
  {
    "text": "called Java as kind of the lowlevel library that's kind of how it all uh fits together and we just integrated the",
    "start": "2538319",
    "end": "2543880"
  },
  {
    "text": "framework really deeply um we're still finishing that and that is probably",
    "start": "2543880",
    "end": "2548960"
  },
  {
    "text": "going to be released early 2024 um at least that gives you kind of um an",
    "start": "2548960",
    "end": "2556440"
  },
  {
    "text": "an idea it doesn't really matter um if you would pick the dgs framework today",
    "start": "2556440",
    "end": "2562040"
  },
  {
    "text": "um it doesn't kind of get you stuck in in in there um and not be able to leverage features coming from Spring",
    "start": "2562040",
    "end": "2568079"
  },
  {
    "text": "team because very soon you will just be able to combine uh both very nicely and I think that gets me very",
    "start": "2568079",
    "end": "2575400"
  },
  {
    "start": "2572000",
    "end": "3030000"
  },
  {
    "text": "close to 40 minutes yeah um and we have a few minutes left for",
    "start": "2575400",
    "end": "2581558"
  },
  {
    "text": "questions thank you so much Paul I loved uh the plugin for G1",
    "start": "2582559",
    "end": "2588960"
  },
  {
    "text": "GC it was a nice talk are you guys still using zul we are",
    "start": "2591839",
    "end": "2597960"
  },
  {
    "text": "yes I didn't talk about zul but zul is sitting in front of literally every request and so Z is just a uh just a",
    "start": "2597960",
    "end": "2604680"
  },
  {
    "text": "proxy so it's not um it's doing a lot of traffic control basically but it's not um it's not the",
    "start": "2604680",
    "end": "2611839"
  },
  {
    "text": "API server that we talked about uh um earlier um zul sits in front of either the dgs Federated architecture or like",
    "start": "2611839",
    "end": "2619400"
  },
  {
    "text": "the old",
    "start": "2619400",
    "end": "2622279"
  },
  {
    "text": "[Music] architecture hi talk you talked about",
    "start": "2625850",
    "end": "2632760"
  },
  {
    "text": "the upgrade for Java having a limited perceived value there I think that's interesting I think a lot of Enterprises",
    "start": "2632760",
    "end": "2639000"
  },
  {
    "text": "tend to have this mindset if think it ain't broke don't fix it we're just going to St here forever what did you do to change that perception or was it just",
    "start": "2639000",
    "end": "2645880"
  },
  {
    "text": "a spring upgrade that kind of kicked your guys The Bu made you do the upgrade no actually the the main story was the",
    "start": "2645880",
    "end": "2651880"
  },
  {
    "text": "performance uh benefit so the fact that we could uh say that hey you get 20 20%",
    "start": "2651880",
    "end": "2657000"
  },
  {
    "text": "better um performance um and it depends a little bit on the",
    "start": "2657000",
    "end": "2662280"
  },
  {
    "text": "surface how that number actually looks like and what it actually means but um the number is real um the fact that you",
    "start": "2662280",
    "end": "2667920"
  },
  {
    "text": "could say that that made a lot of service owners more interested in it but it also gave leadership higher up just a",
    "start": "2667920",
    "end": "2673520"
  },
  {
    "text": "push like this is going to save money go do it um and that that was actually the most helpful thing uh the kind of the",
    "start": "2673520",
    "end": "2680720"
  },
  {
    "text": "spring boot upgrade came later and also forces the issue um but it was kind of after effect thank you a lot of",
    "start": "2680720",
    "end": "2688760"
  },
  {
    "text": "advancements open jdk from 8 to 17 did he direct go from 8 to 17 so we had",
    "start": "2688760",
    "end": "2695960"
  },
  {
    "text": "Services running on J 11 because the plan was 8 11 17 um 11 we had Services",
    "start": "2695960",
    "end": "2702760"
  },
  {
    "text": "running there it never really took off because it just wasn't enough benefit um so yeah we mostly went from 8 to 17 yeah",
    "start": "2702760",
    "end": "2709760"
  },
  {
    "text": "and then that's one of the things you know depending on the collectors as he was talking about there is some impact",
    "start": "2709760",
    "end": "2714800"
  },
  {
    "text": "with respect to stop the world cuses and some kind of background collections that's happening with cha and zgc so",
    "start": "2714800",
    "end": "2721000"
  },
  {
    "text": "there's a tradeoff but a lot of improvements went into kind of reducing the limit sets and everything like that",
    "start": "2721000",
    "end": "2726800"
  },
  {
    "text": "so I guess the follow then so you mentioned the 20% was kind of the push you needed",
    "start": "2726800",
    "end": "2731880"
  },
  {
    "text": "but how did you even secure the time to actually experiment with that how you convinc stakeholders the same we're",
    "start": "2731880",
    "end": "2737160"
  },
  {
    "text": "going to spend some time doing an upgrade on some services and then we'll demonstrate the Val to now right so that",
    "start": "2737160",
    "end": "2742720"
  },
  {
    "text": "is the benefit of having a platform team uh as we have so um if I look at my own time I can do whatever I want if I think",
    "start": "2742720",
    "end": "2748640"
  },
  {
    "text": "something is interesting this is not true at all but um I I make it I make it",
    "start": "2748640",
    "end": "2754359"
  },
  {
    "text": "that way uh if I think there is some some interesting fail to be had um in experimented garbage collectors I'm",
    "start": "2754359",
    "end": "2760400"
  },
  {
    "text": "actually not mostly doing performance work there's actually other folks who are much better at that um this just an",
    "start": "2760400",
    "end": "2766160"
  },
  {
    "text": "example um if there is um potential failure in there we can get a time to just experiment with it and and play",
    "start": "2766160",
    "end": "2772079"
  },
  {
    "text": "with it basically because our our time of like one or two people is like drops",
    "start": "2772079",
    "end": "2777720"
  },
  {
    "text": "in the water thank",
    "start": "2777720",
    "end": "2781440"
  },
  {
    "text": "you thank you very much very nice uh talking and going in dep with what net",
    "start": "2782800",
    "end": "2788559"
  },
  {
    "text": "is doing so I have a couple of questions if you have time one is regarding virtual threats so did you um see any uh",
    "start": "2788559",
    "end": "2795520"
  },
  {
    "text": "difference in the memory footprint between virtual thread where is a traditional one for the same number of",
    "start": "2795520",
    "end": "2801280"
  },
  {
    "text": "request uh responses and the second is regarding the graph ql versus traditional soap because soap was",
    "start": "2801280",
    "end": "2808559"
  },
  {
    "text": "superseded by rest back in the days when uh you I would say data was very precious and the network was very",
    "start": "2808559",
    "end": "2815160"
  },
  {
    "text": "important you could not have a lar large number of data going through easily now the data is cheap um and so has that",
    "start": "2815160",
    "end": "2823480"
  },
  {
    "text": "disadvantage of a schema being going between the client and the server I see that graph C also has the same problem",
    "start": "2823480",
    "end": "2829880"
  },
  {
    "text": "now that you have to have the Cure query and the schema going between the client and the server so how how you do see the",
    "start": "2829880",
    "end": "2836680"
  },
  {
    "text": "rest uh soap and graph Q in that conjunction right um I think soap had",
    "start": "2836680",
    "end": "2843800"
  },
  {
    "text": "conceptually a few things right for example the fact that there is a schema that was a good thing um but it was so",
    "start": "2843800",
    "end": "2849440"
  },
  {
    "text": "incredibly hard to use and complex that um the overhead of doing the right",
    "start": "2849440",
    "end": "2854599"
  },
  {
    "text": "things was just too much and then rest went the U at least the way everyone is",
    "start": "2854599",
    "end": "2859960"
  },
  {
    "text": "using rest went kind of The Other Extreme like no schema no nothing at all nothing is defin you just throw in some",
    "start": "2859960",
    "end": "2865599"
  },
  {
    "text": "data and um we're all good um I think gra kind of sits in the middle there it",
    "start": "2865599",
    "end": "2871240"
  },
  {
    "text": "doesn't have a lot of um overhead for developers to um implement the schema it's very easy it's much easier than um",
    "start": "2871240",
    "end": "2878040"
  },
  {
    "text": "than than soap was just from from using it U but you do get a schema and that takes um takes away a lot of the the",
    "start": "2878040",
    "end": "2885880"
  },
  {
    "text": "downsides of just having rest without any schema so um it feels like it is it",
    "start": "2885880",
    "end": "2891640"
  },
  {
    "text": "has found a sweet spot for apis um probably if I'm back here in 10 years from now I'm like CFT terrible idea how",
    "start": "2891640",
    "end": "2898839"
  },
  {
    "text": "how how did we ever get to that um but you know how that goes right now it feels like a sweet spot and I forgot",
    "start": "2898839",
    "end": "2904280"
  },
  {
    "text": "about your other question the virtual thre oh uh yes yes there is a difference um it that",
    "start": "2904280",
    "end": "2913119"
  },
  {
    "text": "that is why we have to be very careful about um adding virtual threads uh where we replace like traditional thread pools",
    "start": "2913119",
    "end": "2919400"
  },
  {
    "text": "depending on if um these thread pools are very CPU intensive or not it does or",
    "start": "2919400",
    "end": "2924760"
  },
  {
    "text": "does not make um a lot of sense the memory food print doesn't seem to be a big factor we we haven't seen um any",
    "start": "2924760",
    "end": "2932079"
  },
  {
    "text": "significant bumps there um at all but again this all very early days and we're just um experimenting with everything so",
    "start": "2932079",
    "end": "2939200"
  },
  {
    "text": "um we haven't quite figured it out yet but it seems to be um very straightforward from",
    "start": "2939200",
    "end": "2945799"
  },
  {
    "text": "memory and then I was just wondering about your cin usage percentage and how",
    "start": "2945799",
    "end": "2952280"
  },
  {
    "text": "would that kind um I don't know the percentage exactly but it is fairly low um so uh",
    "start": "2952280",
    "end": "2960359"
  },
  {
    "text": "for a while we we had a bunch of teams including my own team uh very excited about cotlin um the dgs framework is",
    "start": "2960359",
    "end": "2966680"
  },
  {
    "text": "itself is written in cotlin although it's targeting mostly Java apps that's my choice um and we have microservices",
    "start": "2966680",
    "end": "2974280"
  },
  {
    "text": "written in cotlin as well um the only downside that we uh receive with cotlin",
    "start": "2974280",
    "end": "2979319"
  },
  {
    "text": "is we invest more and more in developer tooling so intellig plugins and automated um tooling based on Gradle um",
    "start": "2979319",
    "end": "2987280"
  },
  {
    "text": "to help with these version upgrades with spring and all these things um that story is much harder for a platform team",
    "start": "2987280",
    "end": "2995240"
  },
  {
    "text": "if you have to deal with multiple languag because even for an intellig plugin even if it's both from jet brains you need to",
    "start": "2995240",
    "end": "3001559"
  },
  {
    "text": "write your inspections in intell twice if you want to use both Java and Golan and it's just a lot more work so it's",
    "start": "3001559",
    "end": "3008400"
  },
  {
    "text": "just a lot easier for platform teams if everyone is just happily using Java that doesn't make C Lane bad though we have",
    "start": "3008400",
    "end": "3014440"
  },
  {
    "text": "only seen good things about C Lane and um it works just very well um it's a great language",
    "start": "3014440",
    "end": "3022559"
  },
  {
    "text": "[Music]",
    "start": "3023800",
    "end": "3029249"
  }
]