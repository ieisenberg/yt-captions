[
  {
    "text": "[Music]",
    "start": "3250",
    "end": "11519"
  },
  {
    "text": "thanks for joining my session here at info cue live i'm going to be talking today about the",
    "start": "11519",
    "end": "16960"
  },
  {
    "text": "top five challenges of running a service mesh in an enterprise",
    "start": "16960",
    "end": "23039"
  },
  {
    "text": "so my name is christian posta i'm a vp and field cto here at solo.io",
    "start": "23039",
    "end": "29679"
  },
  {
    "text": "here at solo we focus on application networking and connecting securing observing",
    "start": "29679",
    "end": "35760"
  },
  {
    "text": "various services across clouds across clusters regions zones and so on and i've been here almost three years",
    "start": "35760",
    "end": "42320"
  },
  {
    "text": "been focused on on integration and distributed systems and building cloud architectures for quite some time now",
    "start": "42320",
    "end": "49360"
  },
  {
    "text": "author of a few books including a book that will be released um",
    "start": "49360",
    "end": "54960"
  },
  {
    "text": "i think pretty soon in the next few months called istio in action from manny",
    "start": "54960",
    "end": "61440"
  },
  {
    "text": "so as i mentioned at solo we're working on application networking and doing that in a way that better fits cloud",
    "start": "61440",
    "end": "68159"
  },
  {
    "text": "architectures and modern architectures we have two main products glue edge",
    "start": "68159",
    "end": "73520"
  },
  {
    "text": "which is our modern api gateway and and glue mesh which is our enterprise",
    "start": "73520",
    "end": "78960"
  },
  {
    "text": "service mesh and we've seen in the analyst reports",
    "start": "78960",
    "end": "84400"
  },
  {
    "text": "recently how our vision our products how we compare to our competitors you know",
    "start": "84400",
    "end": "90159"
  },
  {
    "text": "start to outperform and you know service measures still relatively new evolving and maturing",
    "start": "90159",
    "end": "95520"
  },
  {
    "text": "space um but you can see in one of the first analyst reports that we performed very",
    "start": "95520",
    "end": "101200"
  },
  {
    "text": "strongly and i'm happy to announce as of last week we made public that we raised our series c",
    "start": "101200",
    "end": "109200"
  },
  {
    "text": "at a billion dollar valuation and this is definitely a testament to our customers the work we're doing with",
    "start": "109200",
    "end": "115840"
  },
  {
    "text": "the the industry and working with organizations deploying",
    "start": "115840",
    "end": "120880"
  },
  {
    "text": "envoy based technology at massive massive scale including service mesh istio and these types of things",
    "start": "120880",
    "end": "127920"
  },
  {
    "text": "and the tremendous success that we've had so let's get on to the point of the talk here there's an area of very deep",
    "start": "127920",
    "end": "134879"
  },
  {
    "text": "interest for us at solo we are service mesh experts we are application networking experts through and through",
    "start": "134879",
    "end": "142160"
  },
  {
    "text": "and let's take a look at some of the challenges that we've seen",
    "start": "142160",
    "end": "147680"
  },
  {
    "text": "organizations face as they start to adopt this technology or the next phase of modernizing",
    "start": "147680",
    "end": "154000"
  },
  {
    "text": "their application infrastructure so again the talk is on service mesh and",
    "start": "154000",
    "end": "162160"
  },
  {
    "text": "some of the challenges of adopting it but we probably want to take a step back and understand what is the challenge what is the",
    "start": "162160",
    "end": "168560"
  },
  {
    "text": "problem that we're trying to solve with a mesh and it's around service connectivity partially right i think",
    "start": "168560",
    "end": "175040"
  },
  {
    "text": "that's a big tactical part of why we're talking about service mesh but then operationally how can we",
    "start": "175040",
    "end": "182720"
  },
  {
    "text": "bring and apply policies about how services communicate with each other um independent of how they were written",
    "start": "182720",
    "end": "189519"
  },
  {
    "text": "how they're deployed and the service mesh brings a lot of value to being able to do that so it's two main areas one is",
    "start": "189519",
    "end": "196000"
  },
  {
    "text": "the technical side one is the is more of the operational or efficiency and",
    "start": "196000",
    "end": "202159"
  },
  {
    "text": "um sort of principle way of how we how we build and manage these types of",
    "start": "202159",
    "end": "209599"
  },
  {
    "text": "infrastructures in the cloud so service connectivity things that we typically",
    "start": "209599",
    "end": "215040"
  },
  {
    "text": "worry about service discovery load balancing timeouts retry circuit breaking",
    "start": "215040",
    "end": "221040"
  },
  {
    "text": "transport security observability you know how we solve these problems these are",
    "start": "221040",
    "end": "226239"
  },
  {
    "text": "not optional things to solve we need to solve them somehow and in the past we've seen",
    "start": "226239",
    "end": "231680"
  },
  {
    "text": "either the cloud uh generation even before enterprises started getting in",
    "start": "231680",
    "end": "237280"
  },
  {
    "text": "things like uh amazon and netflix and so on how they how they started to do it",
    "start": "237280",
    "end": "243519"
  },
  {
    "text": "was to build things into the applications themselves try to",
    "start": "243519",
    "end": "248799"
  },
  {
    "text": "govern the teams so that they you know use these specific libraries these particular pieces of infrastructure to",
    "start": "248799",
    "end": "255040"
  },
  {
    "text": "implement the patterns correctly but across languages",
    "start": "255040",
    "end": "260479"
  },
  {
    "text": "across different frameworks especially an organization that has been around for 50 years and is",
    "start": "260479",
    "end": "266400"
  },
  {
    "text": "very successful and now they're trying to modernize those types of things get very very",
    "start": "266400",
    "end": "271600"
  },
  {
    "text": "difficult to operate another approach that we saw in an organization large organizations",
    "start": "271600",
    "end": "279280"
  },
  {
    "text": "is to stand up some centralized team and system through which all the traffic in",
    "start": "279280",
    "end": "286240"
  },
  {
    "text": "the company should should flow through whether that's enterprise service bus whether that's some centralized api",
    "start": "286240",
    "end": "292400"
  },
  {
    "text": "management server you know we've seen this before but this doesn't scale very well the the",
    "start": "292400",
    "end": "299280"
  },
  {
    "text": "decentralized approach this scaled fine just had came with other challenges this does not scale well and has",
    "start": "299280",
    "end": "306320"
  },
  {
    "text": "uh bottleneck challenges whether that's the technology obviously or more",
    "start": "306320",
    "end": "311520"
  },
  {
    "text": "importantly the processes that built up around these teams and how you know service",
    "start": "311520",
    "end": "317360"
  },
  {
    "text": "a the team that support service a how do they go about making changes they go to some centralized team and say",
    "start": "317360",
    "end": "323440"
  },
  {
    "text": "hey can you do this for me let's open tickets and i slow things down so what we want is some balance in",
    "start": "323440",
    "end": "330320"
  },
  {
    "text": "between and that's where the service mesh and the surrounding and supporting components come into play it's the",
    "start": "330320",
    "end": "336479"
  },
  {
    "text": "decentralization as well as the self-service and the automation around the policies",
    "start": "336479",
    "end": "343840"
  },
  {
    "text": "that would be enforced in the mesh that allow an organization to move faster that's the whole point of these",
    "start": "343840",
    "end": "350479"
  },
  {
    "text": "modern architectures and adopting things like containers kubernetes ci cd is to",
    "start": "350479",
    "end": "355840"
  },
  {
    "text": "move faster and the last missing piece of that is how surfaces communicate with each other",
    "start": "355840",
    "end": "361680"
  },
  {
    "text": "and decentralizing that communication is very important so the service mesh",
    "start": "361680",
    "end": "367919"
  },
  {
    "text": "brings a pattern that is based on offloading some of the application",
    "start": "367919",
    "end": "374639"
  },
  {
    "text": "networking concerns to something else an agent a proxy and",
    "start": "374639",
    "end": "380160"
  },
  {
    "text": "in this case a lot of the service meshes have implemented the proxy with a technology called envoy",
    "start": "380160",
    "end": "386639"
  },
  {
    "text": "and so in this model the application talks when it talks to the network talks through this proxy first",
    "start": "386639",
    "end": "392880"
  },
  {
    "text": "when a service communicates with another services or inbound traffic it goes",
    "start": "392880",
    "end": "398000"
  },
  {
    "text": "through this proxy first and then to the app and these proxies are co-located with the app instance these are not like",
    "start": "398000",
    "end": "404639"
  },
  {
    "text": "reverse proxies um they're actually one-to-one with the application instance and become",
    "start": "404639",
    "end": "411360"
  },
  {
    "text": "atomically associated with the application and in these proxies is work we can",
    "start": "411360",
    "end": "418000"
  },
  {
    "text": "implement consistently regardless of what language and framework that was used to write the app we can",
    "start": "418000",
    "end": "425280"
  },
  {
    "text": "consistently apply uh application networking",
    "start": "425280",
    "end": "430319"
  },
  {
    "text": "implementations and policies around things like timeouts and retries and service discovery and",
    "start": "430319",
    "end": "435840"
  },
  {
    "text": "circuit breaking and load balancing and uh and not have to worry about what the applications were written in",
    "start": "435840",
    "end": "442319"
  },
  {
    "text": "what frameworks and we can control and manage this stuff uh remotely so",
    "start": "442319",
    "end": "447360"
  },
  {
    "text": "that's where the control plane starts to come into the picture control plane configures the individual proxies that",
    "start": "447360",
    "end": "453520"
  },
  {
    "text": "live with each of these instances so this sounds",
    "start": "453520",
    "end": "459039"
  },
  {
    "text": "good on one hand the architecture fits what we're trying to do by modernizing",
    "start": "459039",
    "end": "466080"
  },
  {
    "text": "the the benefits of doing this decoupling some of these policies automating them away removing the burden",
    "start": "466080",
    "end": "473440"
  },
  {
    "text": "from developers actually has a very big win a lot of value brings a lot of value but do you",
    "start": "473440",
    "end": "478560"
  },
  {
    "text": "need a service mesh the first step to deciding and what we we work with organizations all the time that are",
    "start": "478560",
    "end": "484879"
  },
  {
    "text": "going through this process do they need a service match because maybe they don't and that's going to be very context",
    "start": "484879",
    "end": "491360"
  },
  {
    "text": "specific you will have to decide that are you building a microservices style",
    "start": "491360",
    "end": "496720"
  },
  {
    "text": "architecture do you have you know tens or hundreds of different applications or services that you are deploying",
    "start": "496720",
    "end": "504000"
  },
  {
    "text": "are you allowing teams to quote unquote use the right tool for the job or the right language for",
    "start": "504000",
    "end": "510240"
  },
  {
    "text": "that particular team's skill set microservices in general are complicated",
    "start": "510240",
    "end": "517039"
  },
  {
    "text": "the more moving pieces you have the more that you put out over the network",
    "start": "517039",
    "end": "523039"
  },
  {
    "text": "the less you have sort of governed and centralized it could create a you know",
    "start": "523039",
    "end": "528720"
  },
  {
    "text": "big mess and this is where service mesh at least on the application networking side can help",
    "start": "528720",
    "end": "535600"
  },
  {
    "text": "establish some consistency and some knowns about the system especially when things start to go wrong",
    "start": "535600",
    "end": "542640"
  },
  {
    "text": "are you using things like containers and kubernetes or cloud infrastructure that scales elastically",
    "start": "542640",
    "end": "549680"
  },
  {
    "text": "are you you know communicating more over the network rpc style maybe maybe uh async or",
    "start": "549680",
    "end": "557440"
  },
  {
    "text": "messaging base but typically grpc and rest and graphql and scope and",
    "start": "557440",
    "end": "562800"
  },
  {
    "text": "these types of rpc style communications are where a service mesh brings its biggest value",
    "start": "562800",
    "end": "570640"
  },
  {
    "text": "and then of course deploying a large set of services where you need to have some consistency",
    "start": "570640",
    "end": "577200"
  },
  {
    "text": "over the the policies about how services communicate with each other if you have an environment that resembles this or",
    "start": "577200",
    "end": "583760"
  },
  {
    "text": "will tend toward this then a service mesh might be a",
    "start": "583760",
    "end": "589279"
  },
  {
    "text": "good solution or a good good thing to start looking at so let's take a look at some of the",
    "start": "589279",
    "end": "594880"
  },
  {
    "text": "challenges of running a service mesh at scale in an enterprise",
    "start": "594880",
    "end": "601839"
  },
  {
    "text": "so the first one starts with what service mesh to pick now",
    "start": "601839",
    "end": "606959"
  },
  {
    "text": "there over the last three or four years a lot of different vendors",
    "start": "606959",
    "end": "612959"
  },
  {
    "text": "have entered this this ecosystem with different options for which service",
    "start": "612959",
    "end": "619200"
  },
  {
    "text": "mesh to pick um you know there are various technologies",
    "start": "619200",
    "end": "625200"
  },
  {
    "text": "that are being used different architectures envy that are being used and different strengths or focal points initial focal",
    "start": "625200",
    "end": "631839"
  },
  {
    "text": "points of of what a particular mesh might be trying to solve for the most part",
    "start": "631839",
    "end": "638079"
  },
  {
    "text": "a large percentage of the meshes are converging and using",
    "start": "638079",
    "end": "643839"
  },
  {
    "text": "uh envoy proxy they're converging around this technology",
    "start": "643839",
    "end": "649040"
  },
  {
    "text": "which brings a lot of different features for being able to do service to service communication and some meshes are",
    "start": "649040",
    "end": "655600"
  },
  {
    "text": "opting to either reuse technology that they already have or rebuild something completely new from scratch",
    "start": "655600",
    "end": "662240"
  },
  {
    "text": "you also want to evaluate what are the what are your use cases and",
    "start": "662240",
    "end": "668000"
  },
  {
    "text": "what is the maturity or battle tested",
    "start": "668000",
    "end": "673519"
  },
  {
    "text": "implementations that could support your use cases we've noticed that solo",
    "start": "673519",
    "end": "680240"
  },
  {
    "text": "after observing this market for the last four years that istio has become",
    "start": "680240",
    "end": "686399"
  },
  {
    "text": "one of the more mature um deployments of a service mesh especially at scale especially on an",
    "start": "686399",
    "end": "693040"
  },
  {
    "text": "enterprise with a lot of those unique let's say edge cases",
    "start": "693040",
    "end": "698880"
  },
  {
    "text": "um that you know some of the other meshes are are still trying to catch up and figure out how to how to solve or",
    "start": "698880",
    "end": "705600"
  },
  {
    "text": "haven't even seen those problems yet um where do you go for help surface mesh",
    "start": "705600",
    "end": "712399"
  },
  {
    "text": "and deploying this kind of technology uh requires a deep level of expertise",
    "start": "712399",
    "end": "718560"
  },
  {
    "text": "and and where can you go for help or partner either with an open source community or with a vendor of your",
    "start": "718560",
    "end": "725680"
  },
  {
    "text": "choice we see that the community itself has sort of converged around istio",
    "start": "725680",
    "end": "733200"
  },
  {
    "text": "while some of the others are supported by single vendors and",
    "start": "733200",
    "end": "738320"
  },
  {
    "text": "you know some don't have any real commercial support at all",
    "start": "738320",
    "end": "744399"
  },
  {
    "text": "the next question is how do api gateways fit into this mix",
    "start": "744399",
    "end": "749600"
  },
  {
    "text": "so some meshes have a a a gateway implementation istio is a",
    "start": "749839",
    "end": "756399"
  },
  {
    "text": "good example have an issue ingress gateway and then you start to bring that in and say",
    "start": "756399",
    "end": "762880"
  },
  {
    "text": "well just use the gateway and then you realize oh wait a minute i i have the need for",
    "start": "762880",
    "end": "769360"
  },
  {
    "text": "things like integrating with oidc or web application firewalling or i need to do message transformations or i need",
    "start": "769360",
    "end": "776000"
  },
  {
    "text": "to do more sophisticated rate limiting or quota policy enforcement",
    "start": "776000",
    "end": "781360"
  },
  {
    "text": "and then you start to build all this stuff yourself so then the question is what is the role",
    "start": "781360",
    "end": "787519"
  },
  {
    "text": "of api gateway how does this fit in with service mesh and i'm supposed to go build all this stuff myself",
    "start": "787519",
    "end": "793519"
  },
  {
    "text": "now there are solutions you can just stand up and you know one of your existing api",
    "start": "793519",
    "end": "798720"
  },
  {
    "text": "gateways in front of your services and try to route them into the service mesh",
    "start": "798720",
    "end": "805680"
  },
  {
    "text": "you could offload some of the api gateway capabilities to your applications themselves although that seems to be going in a sort of a back",
    "start": "805680",
    "end": "813200"
  },
  {
    "text": "step backwards or you could use an api gateway that is native to istio or a",
    "start": "813200",
    "end": "820320"
  },
  {
    "text": "particular service mesh and by native i mean is actually built on the proxy that is built on",
    "start": "820320",
    "end": "826959"
  },
  {
    "text": "and provides the various capabilities that you will likely need at the edge things like",
    "start": "826959",
    "end": "832320"
  },
  {
    "text": "transformation things like data loss prevention web application",
    "start": "832320",
    "end": "837760"
  },
  {
    "text": "firewalling maybe even you know not not not hopefully not in this",
    "start": "837760",
    "end": "843760"
  },
  {
    "text": "situation but maybe even things like soap translation things that gateways can kind of do",
    "start": "843760",
    "end": "850240"
  },
  {
    "text": "today but now you can pull this and make it native into the surface smash and start instead of trying to hack together",
    "start": "850240",
    "end": "856480"
  },
  {
    "text": "some thing that you're going to have to maintain around your existing gateways",
    "start": "856480",
    "end": "862240"
  },
  {
    "text": "then there's the point around deploying across multiple clusters",
    "start": "862240",
    "end": "867600"
  },
  {
    "text": "how services find each other across multiple clusters and then building a highly available service to service",
    "start": "867600",
    "end": "874560"
  },
  {
    "text": "communication fabric and so we'll we'll come back to that",
    "start": "874560",
    "end": "880079"
  },
  {
    "text": "uh in the demo but basically it comes down to you know where you what you did in the past well",
    "start": "880079",
    "end": "887120"
  },
  {
    "text": "i'll just set up a bunch of hardware load balancers and the load balancer when you call it will spread into a pool of uh spraying",
    "start": "887120",
    "end": "894320"
  },
  {
    "text": "the call into a pool of of services well that incurs additional expense",
    "start": "894320",
    "end": "901760"
  },
  {
    "text": "that incurs additional um you know um hops in the network",
    "start": "901760",
    "end": "908000"
  },
  {
    "text": "and it might be more worthwhile to instead of forcing everything out of a cluster back through gateway",
    "start": "908000",
    "end": "915120"
  },
  {
    "text": "into the cluster and then back out again when services need to talk with each other uh the ability to talk directly to each",
    "start": "915120",
    "end": "920639"
  },
  {
    "text": "other when it makes sense and to be smart enough to know how to route and how to fail over without having to rely",
    "start": "920639",
    "end": "927199"
  },
  {
    "text": "on some external and expensive load balancers",
    "start": "927199",
    "end": "932720"
  },
  {
    "text": "so something more like like this where traffic from app a can go to app b even",
    "start": "932720",
    "end": "938160"
  },
  {
    "text": "across failure domains without having to cross back through some centralized load",
    "start": "938160",
    "end": "943920"
  },
  {
    "text": "balancer and so we'll take a look at that in in the demo um",
    "start": "943920",
    "end": "949040"
  },
  {
    "text": "another really big topic when it comes to adopting and operating a service mesh in",
    "start": "949040",
    "end": "955680"
  },
  {
    "text": "these organizations is how do we",
    "start": "955680",
    "end": "960720"
  },
  {
    "text": "how do we solve for the certificate management problems when",
    "start": "960720",
    "end": "965759"
  },
  {
    "text": "we're talking about enabling mutual tls so that's one of the benefits of using a service mesh",
    "start": "965759",
    "end": "972240"
  },
  {
    "text": "at layer seven where applications are communicating with each other we can assign identity",
    "start": "972240",
    "end": "977360"
  },
  {
    "text": "to the applications encode that identity in the transport",
    "start": "977360",
    "end": "983680"
  },
  {
    "text": "isn't using certificates and then apply policies to those identities so when a talks to b",
    "start": "983680",
    "end": "990880"
  },
  {
    "text": "write policies about whether a is allowed to talk with b um and to do this the underpinnings of",
    "start": "990880",
    "end": "999360"
  },
  {
    "text": "a an implementation like this right now depend on certificates",
    "start": "999360",
    "end": "1005120"
  },
  {
    "text": "and you will likely want to tie that back into your own pki public uh key",
    "start": "1005120",
    "end": "1011360"
  },
  {
    "text": "infrastructure and you might have vault you might be using one of the cloud",
    "start": "1011360",
    "end": "1017199"
  },
  {
    "text": "cas or something like that and safely doing this because you don't want to start handing out intermediate",
    "start": "1017199",
    "end": "1023759"
  },
  {
    "text": "signing cas or root ca or any of this stuff into your infrastructure without keeping things extremely",
    "start": "1023759",
    "end": "1029600"
  },
  {
    "text": "secure so this is definitely an area where um you know first of all don't write things to disk don't put things in",
    "start": "1029600",
    "end": "1036400"
  },
  {
    "text": "secrets keep things in in memory uh offload root ca handling to",
    "start": "1036400",
    "end": "1042240"
  },
  {
    "text": "um to some some hardware you know offline hardware uh management",
    "start": "1042240",
    "end": "1047600"
  },
  {
    "text": "uh these these are all compatible um",
    "start": "1047600",
    "end": "1052720"
  },
  {
    "text": "compatible practices when deploying a service mesh and and getting this right is extremely important",
    "start": "1052720",
    "end": "1060480"
  },
  {
    "text": "one of the last pieces that i will cover here real quick before i jump into a demo is actually extending the service",
    "start": "1060480",
    "end": "1068160"
  },
  {
    "text": "mesh so the proxies are on the request path in",
    "start": "1068160",
    "end": "1074160"
  },
  {
    "text": "the mesh and they can be configured with the control plane",
    "start": "1074160",
    "end": "1080559"
  },
  {
    "text": "but the proxies have a set of capabilities that are coded into the proxy",
    "start": "1080559",
    "end": "1088000"
  },
  {
    "text": "that you can use or not use but you might need a customization",
    "start": "1088000",
    "end": "1094960"
  },
  {
    "text": "to fit maybe what your organizations are already doing typically what we've seen here at solo",
    "start": "1094960",
    "end": "1101679"
  },
  {
    "text": "is that those customizations are around security like",
    "start": "1101679",
    "end": "1107600"
  },
  {
    "text": "you have you were trying to retrofit the mesh into a brownfield environment",
    "start": "1107600",
    "end": "1113679"
  },
  {
    "text": "where services are already communicating with each other and",
    "start": "1113679",
    "end": "1119039"
  },
  {
    "text": "they have some existing security protocol maybe they're passing some kind of token",
    "start": "1119039",
    "end": "1125280"
  },
  {
    "text": "or signature and you have to validate verify that maybe it's not using jot or some",
    "start": "1125280",
    "end": "1130880"
  },
  {
    "text": "accepted practice it's something that was built 10 years ago and you need to be backward compatible",
    "start": "1130880",
    "end": "1136400"
  },
  {
    "text": "with that so at solo one of the things we've been excited about for a while now is uh and",
    "start": "1136400",
    "end": "1143440"
  },
  {
    "text": "and we've seen the adoption of is webassembly to extend the capabilities of the of the proxy",
    "start": "1143440",
    "end": "1152080"
  },
  {
    "text": "and do that dynamically so you can write your plug in your security plug-in in web assembly",
    "start": "1152080",
    "end": "1158480"
  },
  {
    "text": "and then inject that into the proxies that you know where it makes sense the applications that care about that",
    "start": "1158480",
    "end": "1164559"
  },
  {
    "text": "and dynamically alter the behavior of the mesh this is an extremely important",
    "start": "1164559",
    "end": "1170480"
  },
  {
    "text": "and uh and versatile way of fit you know getting that last 10 or",
    "start": "1170480",
    "end": "1177120"
  },
  {
    "text": "that last mile fit for your organization's use cases by making the customizations yourself without having",
    "start": "1177120",
    "end": "1183679"
  },
  {
    "text": "to dig into you know envoy proxy and c plus plus and managing a build of envoy and you know",
    "start": "1183679",
    "end": "1190400"
  },
  {
    "text": "for basically forking envoy maintaining your own build um you know you can use web assembly to do",
    "start": "1190400",
    "end": "1197200"
  },
  {
    "text": "that which is pretty powerful all right i lied there's there's actually one more really important",
    "start": "1197200",
    "end": "1203360"
  },
  {
    "text": "concept that comes up when deploying a service mesh into an enterprise and that is a lot of the meshes can run nicely on",
    "start": "1203360",
    "end": "1209919"
  },
  {
    "text": "kubernetes which is uh containerized workflows workloads",
    "start": "1209919",
    "end": "1214960"
  },
  {
    "text": "but a lot of their workloads actually run on vms and we need a way to integrate those vms into the mesh",
    "start": "1214960",
    "end": "1221039"
  },
  {
    "text": "so either deploying the side car or using some gateways to integrate the",
    "start": "1221039",
    "end": "1227840"
  },
  {
    "text": "vms into the service mesh different mesh providers have different level of",
    "start": "1227840",
    "end": "1234159"
  },
  {
    "text": "support for this things like uh console from hashicorp started off kind of in that generation",
    "start": "1234159",
    "end": "1241200"
  },
  {
    "text": "of technology on the vms and they're slowly trying to inch into",
    "start": "1241200",
    "end": "1246840"
  },
  {
    "text": "kubernetes um you have people like linker d who are not doing anything with vms",
    "start": "1246840",
    "end": "1252320"
  },
  {
    "text": "and then you have you know istio which is kind of in the middle that started off with kubernetes with kubernetes",
    "start": "1252320",
    "end": "1257600"
  },
  {
    "text": "first but not only and offers support for integrating vms as",
    "start": "1257600",
    "end": "1262880"
  },
  {
    "text": "first-class citizens into the mesh so those that's a very important uh",
    "start": "1262880",
    "end": "1269200"
  },
  {
    "text": "piece of the puzzle when adopting a service mesh so let's go back to a big use case",
    "start": "1269200",
    "end": "1275440"
  },
  {
    "text": "i i like to say that uh people don't want a service mesh but they have needs",
    "start": "1275440",
    "end": "1280640"
  },
  {
    "text": "around consistent policies failover high availability",
    "start": "1280640",
    "end": "1285919"
  },
  {
    "text": "uh compliance requirements and so on and the service mesh can be used to solve that",
    "start": "1285919",
    "end": "1291120"
  },
  {
    "text": "so let's take a look at an example and a demo that i'll show quickly",
    "start": "1291120",
    "end": "1296480"
  },
  {
    "text": "around an architecture that sort of illustrates or mimics some things that you might",
    "start": "1296480",
    "end": "1303280"
  },
  {
    "text": "want to do in a multi-cluster setup and in this case we have two different",
    "start": "1303280",
    "end": "1309039"
  },
  {
    "text": "clusters one one in the west region one in the east region",
    "start": "1309039",
    "end": "1314720"
  },
  {
    "text": "we also have a third cluster at the bottom that is a",
    "start": "1314720",
    "end": "1320559"
  },
  {
    "text": "is our glue mesh management uh controllers which automates the configuration",
    "start": "1320559",
    "end": "1326080"
  },
  {
    "text": "federation of multiple clusters and then on the top uh part of the diagram we have another",
    "start": "1326080",
    "end": "1332880"
  },
  {
    "text": "cluster with uh with a with gateways api gateways that are",
    "start": "1332880",
    "end": "1338640"
  },
  {
    "text": "built on istio and tie back into so basically it's another multi-cluster istio scenario but the api",
    "start": "1338640",
    "end": "1345360"
  },
  {
    "text": "gateways uh can do things like rate limiting and web application firewalling request",
    "start": "1345360",
    "end": "1350480"
  },
  {
    "text": "transformation you know invoking aws lambdas these kind of things directly",
    "start": "1350480",
    "end": "1356000"
  },
  {
    "text": "and so traffic flows through them into the clusters and then when traffic is in the clusters and in the match",
    "start": "1356000",
    "end": "1362720"
  },
  {
    "text": "then we can apply these uh these failover policies so everything looks transparent when failing over and",
    "start": "1362720",
    "end": "1369440"
  },
  {
    "text": "maintaining continuity uh whether you're calling from the outside of the mesh or whether you're a client",
    "start": "1369440",
    "end": "1375919"
  },
  {
    "text": "inside the mesh so let's go ahead and take a quick look at that",
    "start": "1375919",
    "end": "1381120"
  },
  {
    "text": "here what we're going to see is we are outside the mesh we're calling",
    "start": "1381120",
    "end": "1387679"
  },
  {
    "text": "from my laptop a curl command to",
    "start": "1387679",
    "end": "1393520"
  },
  {
    "text": "a set of services so it'll go through the gateway the the name will get",
    "start": "1393520",
    "end": "1399760"
  },
  {
    "text": "resolved using external dns nothing's too super special about this and the call will go through the",
    "start": "1399760",
    "end": "1405840"
  },
  {
    "text": "gateways into an app called web api which then calls recommendation",
    "start": "1405840",
    "end": "1413039"
  },
  {
    "text": "which then calls purchase history so there's a graph of of calls sequence of calls here",
    "start": "1413039",
    "end": "1420080"
  },
  {
    "text": "and if things fail over or stop working in this cluster then we should be able to fail over",
    "start": "1420080",
    "end": "1425520"
  },
  {
    "text": "without in going back through the gateways the api gateways directly between clusters so let's see how that",
    "start": "1425520",
    "end": "1432400"
  },
  {
    "text": "works so in this particular call looks like",
    "start": "1432400",
    "end": "1437919"
  },
  {
    "text": "the dns routed me to cluster two and that's fine call it a couple more",
    "start": "1437919",
    "end": "1443840"
  },
  {
    "text": "times looks like i got cluster two again now i got cluster one call it a few more times we see",
    "start": "1443840",
    "end": "1449760"
  },
  {
    "text": "externally we sort of land on the cluster that's actually closest to me that happens to be the west",
    "start": "1449760",
    "end": "1455919"
  },
  {
    "text": "cluster and that's cluster one now one thing we'll notice is that we are",
    "start": "1455919",
    "end": "1461120"
  },
  {
    "text": "calling the global names whether that is externally here from my laptop",
    "start": "1461120",
    "end": "1467120"
  },
  {
    "text": "or internally within the service mesh we're calling global names we're not we don't want to pin ourselves",
    "start": "1467120",
    "end": "1473840"
  },
  {
    "text": "to topology specific names cube service uh cube proxy service names",
    "start": "1473840",
    "end": "1480320"
  },
  {
    "text": "um cube dns i mean and what we want to use is global names",
    "start": "1480320",
    "end": "1485360"
  },
  {
    "text": "deploy the app so when they're running inside the mesh they behave a certain way when they run outside the mesh they behave a certain way but the apps don't",
    "start": "1485360",
    "end": "1491840"
  },
  {
    "text": "know and they don't care and they shouldn't um so now if we come into we see here in",
    "start": "1491840",
    "end": "1498159"
  },
  {
    "text": "the top right here top pane we see uh cluster one which has web api",
    "start": "1498159",
    "end": "1504880"
  },
  {
    "text": "which calls recommendation which calls purchase history",
    "start": "1504880",
    "end": "1509919"
  },
  {
    "text": "on the bottom pane we see cluster two same thing now if i come back here to cluster one i go into a sleep",
    "start": "1509919",
    "end": "1517760"
  },
  {
    "text": "pod or a client here and i do a curl on web api",
    "start": "1517760",
    "end": "1524320"
  },
  {
    "text": "uh service we will see the response and it will",
    "start": "1524320",
    "end": "1529440"
  },
  {
    "text": "come let's see we can see the full response again we're uh we're calling the full",
    "start": "1529440",
    "end": "1536400"
  },
  {
    "text": "the global name and it's going into cluster one",
    "start": "1536400",
    "end": "1542559"
  },
  {
    "text": "and it will always go into cluster one and it will stay in cluster one unless",
    "start": "1542559",
    "end": "1547760"
  },
  {
    "text": "there's some failure of our event we won't see the load balancing like we did in the previous",
    "start": "1547760",
    "end": "1553520"
  },
  {
    "text": "um in what i was calling for my laptop another thing to notice",
    "start": "1553520",
    "end": "1559440"
  },
  {
    "text": "is if i do a little bit more verbose call here",
    "start": "1559440",
    "end": "1564000"
  },
  {
    "text": "we are resolving to an ip address so when i did this curl here or resolving to an ip",
    "start": "1565440",
    "end": "1572080"
  },
  {
    "text": "address that is not a public gateway it's not a public address it is",
    "start": "1572080",
    "end": "1579440"
  },
  {
    "text": "an internal mesh only address so we're not going out back through the api gateways for this call we're going from",
    "start": "1579440",
    "end": "1586640"
  },
  {
    "text": "the client which is a mesh to the web api service which is also in the mesh directly",
    "start": "1586640",
    "end": "1592799"
  },
  {
    "text": "right now we let the service mesh apply its policies for that communication",
    "start": "1592799",
    "end": "1598640"
  },
  {
    "text": "the last thing that i'll show here is uh",
    "start": "1598640",
    "end": "1603600"
  },
  {
    "text": "if i if i take down",
    "start": "1604320",
    "end": "1609840"
  },
  {
    "text": "the purchase history replica running in this cluster so take that down",
    "start": "1609840",
    "end": "1616240"
  },
  {
    "text": "that becomes zero replicas and we come back to the client",
    "start": "1616240",
    "end": "1623120"
  },
  {
    "text": "in the mesh and we make a call to the web api service",
    "start": "1623120",
    "end": "1629360"
  },
  {
    "text": "we'll notice that the call ended up in cluster one like we",
    "start": "1629360",
    "end": "1635600"
  },
  {
    "text": "expected so we have uh what we have there actually is locality where routing",
    "start": "1635600",
    "end": "1641120"
  },
  {
    "text": "and then when it hits the purchase history service",
    "start": "1641120",
    "end": "1645600"
  },
  {
    "text": "it will actually fail over to cluster two automatically and transparently again we're calling",
    "start": "1647360",
    "end": "1652399"
  },
  {
    "text": "the global name purchase history and",
    "start": "1652399",
    "end": "1658000"
  },
  {
    "text": "the network the application network is responsible for",
    "start": "1658000",
    "end": "1663279"
  },
  {
    "text": "implementing the various failover and priority and sometimes regulatory",
    "start": "1663279",
    "end": "1669520"
  },
  {
    "text": "uh policies about how traffic should flow through the system in this case we correctly failed over to",
    "start": "1669520",
    "end": "1675760"
  },
  {
    "text": "cluster two so i mean there's actually a lot more here but",
    "start": "1675760",
    "end": "1682640"
  },
  {
    "text": "let's let's let's pause it right there um so that's that's all i have uh we are at",
    "start": "1682640",
    "end": "1688799"
  },
  {
    "text": "solo you know we are the leaders in this space we're working with some of the largest",
    "start": "1688799",
    "end": "1694640"
  },
  {
    "text": "probably the largest deployments of service mesh in the world is a great place to uh to work to learn",
    "start": "1694640",
    "end": "1702399"
  },
  {
    "text": "uh to contribute to open source to contribute to you know the",
    "start": "1702399",
    "end": "1707840"
  },
  {
    "text": "the ecosystem and the industry in general around the space uh definitely look look reach out you",
    "start": "1707840",
    "end": "1713679"
  },
  {
    "text": "know we're all over the world so it doesn't matter where you're located um and",
    "start": "1713679",
    "end": "1720399"
  },
  {
    "text": "yeah thank you for uh oops that's a little bit old old slides uh thanks for",
    "start": "1720399",
    "end": "1725440"
  },
  {
    "text": "joining the uh the talk and definitely reach out to me",
    "start": "1725440",
    "end": "1731279"
  },
  {
    "text": "or to solo if you have any questions or follow up and at this point i will be",
    "start": "1731279",
    "end": "1739360"
  },
  {
    "text": "transitioning to a live q a so thank you very much",
    "start": "1739360",
    "end": "1745720"
  },
  {
    "text": "hi christian thanks hey ronaldo how are you doing i'm all right i'm all right i really really",
    "start": "1759600",
    "end": "1766399"
  },
  {
    "text": "enjoyed the token roma sold the demo at the end and uh yeah how you really cycling really really",
    "start": "1766399",
    "end": "1772480"
  },
  {
    "text": "interesting i have actually well first of all i will start with a question that i see from the audience",
    "start": "1772480",
    "end": "1778320"
  },
  {
    "text": "that i had a similar question as well i had the very same problem is that the kind of chicken hair problem that is you",
    "start": "1778320",
    "end": "1785760"
  },
  {
    "text": "start with some micro services you have something at the beginning",
    "start": "1785760",
    "end": "1790799"
  },
  {
    "text": "and uh when should you really start to think about the server mesh i mean i'm a new",
    "start": "1790799",
    "end": "1796399"
  },
  {
    "text": "startup i've knew my project or whatever i have something already running or i'm",
    "start": "1796399",
    "end": "1801520"
  },
  {
    "text": "slowly growing i have high hopes but uh when is the tipping point",
    "start": "1801520",
    "end": "1808640"
  },
  {
    "text": "that's a good question um so i guess it first starts off with",
    "start": "1808640",
    "end": "1816480"
  },
  {
    "text": "your microservice journey in general because",
    "start": "1816480",
    "end": "1823120"
  },
  {
    "text": "microservices you know getting building a system as a set of services",
    "start": "1823120",
    "end": "1829039"
  },
  {
    "text": "that are communicating over the network and you plan on adding more and more",
    "start": "1829039",
    "end": "1834880"
  },
  {
    "text": "that by itself is already a fairly complicated situation",
    "start": "1834880",
    "end": "1840000"
  },
  {
    "text": "um so you need to have the supporting infrastructure",
    "start": "1840000",
    "end": "1846320"
  },
  {
    "text": "to be able to run that and to be able to you know operate that going forward",
    "start": "1846320",
    "end": "1853360"
  },
  {
    "text": "so the the first things that you want to consider in that scenario probably not service",
    "start": "1853360",
    "end": "1860640"
  },
  {
    "text": "mesh there are probably things like well how do we how do we deploy these",
    "start": "1860640",
    "end": "1868399"
  },
  {
    "text": "where do we deploy them how are the teams going to make updates to them",
    "start": "1868399",
    "end": "1875519"
  },
  {
    "text": "how do we build a process to enable self-service because a big part of why you're likely building",
    "start": "1875519",
    "end": "1882320"
  },
  {
    "text": "microservices is to be able to move faster so they're those are some of the initial things that you want to consider",
    "start": "1882320",
    "end": "1890399"
  },
  {
    "text": "and you also have to factor in the rate",
    "start": "1890399",
    "end": "1896000"
  },
  {
    "text": "of either you know learning or adoption",
    "start": "1896000",
    "end": "1901440"
  },
  {
    "text": "uh you know how comfortable an organization is with you know building those pieces out first",
    "start": "1901440",
    "end": "1908880"
  },
  {
    "text": "you don't want to try to do everything all at once because that's not going to be very fruitful",
    "start": "1908880",
    "end": "1914960"
  },
  {
    "text": "you have to consider you know who's driving this in the organization is it the developers is it bottom up is",
    "start": "1914960",
    "end": "1921360"
  },
  {
    "text": "it the executives is it top down is it somewhere in the middle you know all of these things contribute so",
    "start": "1921360",
    "end": "1928240"
  },
  {
    "text": "once you get that stuff sorted out and you figure out how am i going to bring two three five microservices into",
    "start": "1928240",
    "end": "1936159"
  },
  {
    "text": "a working environment then you have to worry about and consider the network",
    "start": "1936159",
    "end": "1941760"
  },
  {
    "text": "that that problem will never go away when you're talking about microservices you're putting things on the network",
    "start": "1941760",
    "end": "1947519"
  },
  {
    "text": "you're putting requests response and you're you're [Music] you're you have to deal with",
    "start": "1947519",
    "end": "1955039"
  },
  {
    "text": "the realities of the network front and center now if you happen to be adopting",
    "start": "1955039",
    "end": "1960399"
  },
  {
    "text": "something like kubernetes some of that stuff you know kubernetes does start helping",
    "start": "1960399",
    "end": "1966960"
  },
  {
    "text": "with with some of those things so if a service goes down kubernetes will try to bring it back up",
    "start": "1966960",
    "end": "1972720"
  },
  {
    "text": "if you are trying to look for some basic service discovery kubernetes has stuff like so so you",
    "start": "1972720",
    "end": "1979120"
  },
  {
    "text": "might be able to get something out of your platform even if it's just a core bare bones platform",
    "start": "1979120",
    "end": "1984880"
  },
  {
    "text": "already that you should consider um as uh",
    "start": "1984880",
    "end": "1990640"
  },
  {
    "text": "as a step in that direction there are other things like if you have a small number of services",
    "start": "1990640",
    "end": "1996320"
  },
  {
    "text": "where it might make sense to look at a gateway you know a more modern uh edge",
    "start": "1996320",
    "end": "2002399"
  },
  {
    "text": "gateway ingress gateway api gateway and actually i would say that",
    "start": "2002399",
    "end": "2009360"
  },
  {
    "text": "the way a lot of people start with",
    "start": "2009360",
    "end": "2014480"
  },
  {
    "text": "let's say something like istio is to deploy the ingress gateway first",
    "start": "2014480",
    "end": "2021120"
  },
  {
    "text": "okay and start operationalizing those pieces and use that for some basic routing and",
    "start": "2021120",
    "end": "2028480"
  },
  {
    "text": "then start to tiptoe into all right let's start exploring how side cars work for my application so i mean there's no",
    "start": "2028480",
    "end": "2035039"
  },
  {
    "text": "hard and fast rules here there are you know areas that you want to consider",
    "start": "2035039",
    "end": "2041360"
  },
  {
    "text": "you know have some foundational infrastructure in place first to support microservices then you know think about the growth of",
    "start": "2041360",
    "end": "2048560"
  },
  {
    "text": "the platform how you're going to operate it uh so for some teams that might be",
    "start": "2048560",
    "end": "2054398"
  },
  {
    "text": "yeah you look at service mesh right away because maybe they're already familiar with kubernetes maybe they already have",
    "start": "2054399",
    "end": "2059520"
  },
  {
    "text": "ci cd maybe they have their security pipelines and scanning and all that stuff all set up now they're just trying to spin up a new set of apps",
    "start": "2059520",
    "end": "2067200"
  },
  {
    "text": "so you see that there's an easier transition at that point i mean it really depends as well but as you",
    "start": "2067200",
    "end": "2072240"
  },
  {
    "text": "mentioned is already with a single digit number of services you might already have a very good use case to",
    "start": "2072240",
    "end": "2078720"
  },
  {
    "text": "to move to or definitely start to work on it uh i see another interesting question is you talk about i",
    "start": "2078720",
    "end": "2086638"
  },
  {
    "text": "talk as well about microservices but the question is is something that is just a service measure",
    "start": "2086639",
    "end": "2093599"
  },
  {
    "text": "something for microservices or how do you see that",
    "start": "2093599",
    "end": "2100320"
  },
  {
    "text": "um i think anything that communicates over the network could tend",
    "start": "2100839",
    "end": "2106960"
  },
  {
    "text": "to benefit from what the service mesh is doing it just happens to be",
    "start": "2106960",
    "end": "2113440"
  },
  {
    "text": "that for a you know larger scale services",
    "start": "2113440",
    "end": "2118720"
  },
  {
    "text": "environment where communication over the network",
    "start": "2118720",
    "end": "2123920"
  },
  {
    "text": "is has become you know more proliferated",
    "start": "2123920",
    "end": "2129440"
  },
  {
    "text": "then you know that that then the surface mesh brings more value in those environments if you just have",
    "start": "2129440",
    "end": "2135280"
  },
  {
    "text": "one monolith um then maybe less so maybe maybe a simple",
    "start": "2135280",
    "end": "2142000"
  },
  {
    "text": "gateway will be useful there but if you have the more things you have",
    "start": "2142000",
    "end": "2147839"
  },
  {
    "text": "communicating over the network which in today's it age that's that's becoming more and more right",
    "start": "2147839",
    "end": "2154160"
  },
  {
    "text": "uh even to the extent that you scale out to iod and so the network is being highly highly",
    "start": "2154160",
    "end": "2160320"
  },
  {
    "text": "leveraged here and um and and then the last piece is the",
    "start": "2160320",
    "end": "2166400"
  },
  {
    "text": "type of infrastructure that you're deploying to as well because if you're if you're",
    "start": "2166400",
    "end": "2171760"
  },
  {
    "text": "let's say you have 10 physical boxes machines and you're deploying applications on 10",
    "start": "2171760",
    "end": "2178640"
  },
  {
    "text": "of those but that's not a very dynamic environment you're starting to use the network so",
    "start": "2178640",
    "end": "2184400"
  },
  {
    "text": "you still need to solve these network concerns but um you know",
    "start": "2184400",
    "end": "2190160"
  },
  {
    "text": "if it's not if the infrastructure's not all that dynamic applications are not uh changing and so on",
    "start": "2190160",
    "end": "2196880"
  },
  {
    "text": "then maybe a gateway would be sufficient for for something like that but",
    "start": "2196880",
    "end": "2202000"
  },
  {
    "text": "if you see that the infrastructure you know applications could be becoming",
    "start": "2202000",
    "end": "2207119"
  },
  {
    "text": "healthy unhealthy going away completely scaling auto scaling then that adds",
    "start": "2207119",
    "end": "2212480"
  },
  {
    "text": "another element another variable that exacerbates the problems around the",
    "start": "2212480",
    "end": "2218160"
  },
  {
    "text": "network that's a very good point i have unfortunately we are running out of time we'll keep the",
    "start": "2218160",
    "end": "2224880"
  },
  {
    "text": "conversation done in zoom but i have time for one more question for you uh",
    "start": "2224880",
    "end": "2230400"
  },
  {
    "text": "coming again from the audience is observability so",
    "start": "2230400",
    "end": "2236000"
  },
  {
    "text": "how do you basically implement observability on a service mesh um",
    "start": "2236000",
    "end": "2243280"
  },
  {
    "text": "so a service mesh gives you inspire how will you integrate basically",
    "start": "2243280",
    "end": "2249440"
  },
  {
    "text": "what you have as well in terms of observability yeah right so",
    "start": "2249440",
    "end": "2256560"
  },
  {
    "text": "observability is isn't is a property of a system first of",
    "start": "2256560",
    "end": "2262800"
  },
  {
    "text": "all let's start off with that right um and the what that means is observability has",
    "start": "2262800",
    "end": "2269119"
  },
  {
    "text": "to be taken into account at all levels of the system um what you want to build",
    "start": "2269119",
    "end": "2274560"
  },
  {
    "text": "an observable system for why you want to do that is so that when things go wrong you can you can",
    "start": "2274560",
    "end": "2280800"
  },
  {
    "text": "start asking questions and figure out pull back the the onion and figure out what's happening and have enough data to",
    "start": "2280800",
    "end": "2286400"
  },
  {
    "text": "be able to do that that's an observable system now the service mesh",
    "start": "2286400",
    "end": "2292480"
  },
  {
    "text": "is playing on uh the the layers of the network between the applications",
    "start": "2292480",
    "end": "2300560"
  },
  {
    "text": "at the application uh level so it's looking at http requests it's looking at you know application",
    "start": "2300560",
    "end": "2306640"
  },
  {
    "text": "layer uh protocol and request and so it plays a part in that",
    "start": "2306640",
    "end": "2313520"
  },
  {
    "text": "in that observability story um and typically how people are",
    "start": "2313520",
    "end": "2319359"
  },
  {
    "text": "integrating the mesh with that the rest of the story is by",
    "start": "2319359",
    "end": "2325440"
  },
  {
    "text": "you know starting off at least with what are the top line",
    "start": "2325440",
    "end": "2330480"
  },
  {
    "text": "application application networking metrics that you might be interested in things like",
    "start": "2330480",
    "end": "2335920"
  },
  {
    "text": "how many requests are going from service a to b okay so high level request",
    "start": "2335920",
    "end": "2341839"
  },
  {
    "text": "and uh ia level so latency error rates",
    "start": "2341839",
    "end": "2347760"
  },
  {
    "text": "saturation you know these four or five top level you know important metrics",
    "start": "2347760",
    "end": "2354240"
  },
  {
    "text": "that you might want to capture between services okay now you can also do things like distributed tracing",
    "start": "2354240",
    "end": "2360000"
  },
  {
    "text": "uh capturing access logs these types of things um but but then you want to pull that back",
    "start": "2360000",
    "end": "2365760"
  },
  {
    "text": "into your larger system and use that for observability",
    "start": "2365760",
    "end": "2372720"
  },
  {
    "text": "okay thanks so much coincidence unfortunately we are running out of uh time on this one i invite there are",
    "start": "2372720",
    "end": "2378640"
  },
  {
    "text": "still great questions in the chat so i invite everyone to join in this luck channel as or in the zoom",
    "start": "2378640",
    "end": "2384400"
  },
  {
    "text": "chat to a video to keep the conversation going for now thank you",
    "start": "2384400",
    "end": "2389680"
  },
  {
    "text": "and goodbye [Music]",
    "start": "2389680",
    "end": "2402640"
  },
  {
    "text": "you",
    "start": "2402640",
    "end": "2404720"
  }
]