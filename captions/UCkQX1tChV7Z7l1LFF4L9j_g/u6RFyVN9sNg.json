[
  {
    "text": "so today I'm here to talk about ember chance this is actually the first big",
    "start": "8270",
    "end": "15209"
  },
  {
    "text": "talk I'm giving on ember in a little while so if you're familiar at all of ember a lot of change in the past six",
    "start": "15209",
    "end": "20789"
  },
  {
    "text": "months or so and so what's what I'm gonna do today is sort of a talk in",
    "start": "20789",
    "end": "26460"
  },
  {
    "text": "three acts so I'm gonna first start by talking a little bit about what does ember why is it why I think it's cool",
    "start": "26460",
    "end": "32279"
  },
  {
    "text": "why I think you should think it's cool whatever the big picture idea as an ember I'm not going to go into a lot of",
    "start": "32279",
    "end": "37440"
  },
  {
    "text": "nitty-gritty about the about the implementation because part two is just gonna be a live demo I'm gonna build an",
    "start": "37440",
    "end": "44010"
  },
  {
    "text": "app and then the third part is me just talking about where the web is going and",
    "start": "44010",
    "end": "49020"
  },
  {
    "text": "how amber fits into that so I think a lot of times people want to talk about or want to think about okay so 2013",
    "start": "49020",
    "end": "56930"
  },
  {
    "text": "April 2013 web pretty cool but I can see that some things are changing how do i",
    "start": "56930",
    "end": "62550"
  },
  {
    "text": "future-proof myself I think there's a difference between how I ember future purpose itself and how your app future",
    "start": "62550",
    "end": "67860"
  },
  {
    "text": "proves itself just because I hope embers around in five years but probably most apps that start today are gonna be in",
    "start": "67860",
    "end": "73500"
  },
  {
    "text": "maintenance mode in five years so maybe not all but many apps so I think there's a difference between how you should",
    "start": "73500",
    "end": "79710"
  },
  {
    "text": "think about future proofing your apps and how we think about future proofing things I'll talk really about both of those things towards the end of my talk",
    "start": "79710",
    "end": "85260"
  },
  {
    "text": "so the first thing I want to say is I think now is really a great time to be a",
    "start": "85260",
    "end": "90390"
  },
  {
    "text": "web developer I think it's never a bit there's never been a better time in fact to be a web developer if you go look at",
    "start": "90390",
    "end": "95610"
  },
  {
    "text": "pretty much every single web site of any person that has a browser they have hundreds and hundreds of really cool",
    "start": "95610",
    "end": "101310"
  },
  {
    "text": "experiments that they're they want you to want to show you that there's really new things going on so there's all the",
    "start": "101310",
    "end": "106380"
  },
  {
    "text": "Google stuff even Microsoft has all these html5 labs new features that",
    "start": "106380",
    "end": "112409"
  },
  {
    "text": "they're prototyping that you can play with I think Mozilla stuff is really cool there you're there",
    "start": "112409",
    "end": "118170"
  },
  {
    "text": "graphics are the nicest of all the demo sites but they have do really cool stuff they have like 3d shooters they have",
    "start": "118170",
    "end": "124079"
  },
  {
    "text": "games I think Firefox OS is really pushing them so what I think if you go back when",
    "start": "124079",
    "end": "129840"
  },
  {
    "text": "I started doing web development solidly in 2005 we were kind of in a dark ages",
    "start": "129840",
    "end": "134849"
  },
  {
    "text": "I think ie 6 was still really the only browser Firefox had just started to pick up a",
    "start": "134849",
    "end": "140870"
  },
  {
    "text": "little bit of steam so people cared a little bit about multiple browsers but really ie6 had 90% market share and I",
    "start": "140870",
    "end": "148579"
  },
  {
    "text": "think back then people talked a lot about the fact that you know cool story you know the next version of JavaScript",
    "start": "148579",
    "end": "154760"
  },
  {
    "text": "or whatever someone's working on of html5 when am I gonna get to use that and I think that was a reasonable thing",
    "start": "154760",
    "end": "160370"
  },
  {
    "text": "to think in 2005 after five years of stagnation but I think people just kept saying that so in 2013 after the last",
    "start": "160370",
    "end": "167569"
  },
  {
    "text": "five years of extremely rapid development and I'll talk about that more at the end of my talk we're still",
    "start": "167569",
    "end": "173079"
  },
  {
    "text": "talking about talking about the web as though five years from now we're gonna be in a stagnated State and I think if",
    "start": "173079",
    "end": "178639"
  },
  {
    "text": "you look back at the last five years that's just not reasonable it's not a reasonable way to look at how the web is",
    "start": "178639",
    "end": "183829"
  },
  {
    "text": "progressing I'm not but I think even if you just look at 2013 things are really great it's a really great time to be a",
    "start": "183829",
    "end": "189829"
  },
  {
    "text": "web developer so the first thing I want to sort of talk about is there's two",
    "start": "189829",
    "end": "195139"
  },
  {
    "text": "websites that I didn't showing here there's the New York Times and discourse and the New York Times of course is a",
    "start": "195139",
    "end": "200420"
  },
  {
    "text": "site that is mostly dealing with content it's mostly a content driven website discourse also it's a form piece of form",
    "start": "200420",
    "end": "207560"
  },
  {
    "text": "software built on ember also a content driven website the New York Times I",
    "start": "207560",
    "end": "212989"
  },
  {
    "text": "think is what usually people talk about when they say this is an example of a site you should not build using a single page app so the question that I have is",
    "start": "212989",
    "end": "219530"
  },
  {
    "text": "is why what are the differences really between these two sites and the first thing that I'll say is it's certainly",
    "start": "219530",
    "end": "225590"
  },
  {
    "text": "not the amount of JavaScript if you go look at the New York Times you'll find that the New York Times has 802",
    "start": "225590",
    "end": "231290"
  },
  {
    "text": "kilobytes of JavaScript and discourse this is over the wire dollar script this course has 284 kilobytes and I'm not",
    "start": "231290",
    "end": "236599"
  },
  {
    "text": "saying this to say look ember so small I actually the 284 kilobytes of JavaScript there's nothing to sneeze at what I'm",
    "start": "236599",
    "end": "242750"
  },
  {
    "text": "saying is that sometimes you look at sites you think this is just a static a piece of static content and there's just a ton of JavaScript in the New York",
    "start": "242750",
    "end": "248750"
  },
  {
    "text": "Times this case there's there's a bunch of ads stuff there's some external services that they're using for video",
    "start": "248750",
    "end": "254139"
  },
  {
    "text": "there's just all this stuff and if you looked in your time they end up it ends up adding up to something like 5 seconds",
    "start": "254139",
    "end": "259789"
  },
  {
    "text": "of before Dom ready this course has a much smaller time so it's the answer to",
    "start": "259789",
    "end": "265130"
  },
  {
    "text": "the question what is the difference between these two apps is not how much JavaScript there is I think people talk about single page apps or JavaScript",
    "start": "265130",
    "end": "271700"
  },
  {
    "text": "heavy as the distinction and I'm just saying as a practical matter in 2013 almost every app that is a serious app that's",
    "start": "271700",
    "end": "278550"
  },
  {
    "text": "doing real things on the internet that is what people would consider just a Content app or just a document app has a",
    "start": "278550",
    "end": "284519"
  },
  {
    "text": "lot of JavaScript on it for whatever reason it just turns out to be the case and what I'm saying is that the",
    "start": "284519",
    "end": "290099"
  },
  {
    "text": "difference actually is whether the app is designed to be long-lived or not so I",
    "start": "290099",
    "end": "295259"
  },
  {
    "text": "think the reason why people think of the New York Times as a Content site and they think of discourse as an app is",
    "start": "295259",
    "end": "300330"
  },
  {
    "text": "that the New York Times every single time you click on a link you get a new page the page gets removed then it gets",
    "start": "300330",
    "end": "305759"
  },
  {
    "text": "added now in New York Times this case there's a lot of JavaScript so it's not again about the amount of JavaScript",
    "start": "305759",
    "end": "311219"
  },
  {
    "text": "that gets loaded on any given page but there is a difference this course has a",
    "start": "311219",
    "end": "317009"
  },
  {
    "text": "single piece of JavaScript it gets loaded one time and then you stay on this the discourse page forever you stay",
    "start": "317009",
    "end": "322319"
  },
  {
    "text": "on the discourse page for a long time as you navigate around as you look at different pieces of content so these are",
    "start": "322319",
    "end": "327419"
  },
  {
    "text": "two different two different ways of building applications and if you want to build your app as a long-lived app as",
    "start": "327419",
    "end": "336029"
  },
  {
    "text": "opposed to a short-lived app what ends up happening is that you have different kinds of data that need to reflect the",
    "start": "336029",
    "end": "343439"
  },
  {
    "text": "life cycle the application so you have things that usually are called models and what a model is is something that",
    "start": "343439",
    "end": "348529"
  },
  {
    "text": "lasts across all sessions so no matter you reload the page you bookmark it you give it to your friend you command tab",
    "start": "348529",
    "end": "355439"
  },
  {
    "text": "models are basically the same always now they may happen to get stored in local storage they may get sorted index DB",
    "start": "355439",
    "end": "361769"
  },
  {
    "text": "they may get stored on a server you might use meteor parse but all these things are examples of pieces of data",
    "start": "361769",
    "end": "367589"
  },
  {
    "text": "that are long-lived that live across the entire lifetime of your of your application be across page reloads and",
    "start": "367589",
    "end": "374449"
  },
  {
    "text": "then people usually call talk about the controller and I think in most systems",
    "start": "374449",
    "end": "380550"
  },
  {
    "text": "that caught that pretend or talked about being MVC in some way or another this is really the role of the controller",
    "start": "380550",
    "end": "386219"
  },
  {
    "text": "regardless of where it sits in the architecture it's managing pieces of data that live across the entire",
    "start": "386219",
    "end": "392429"
  },
  {
    "text": "lifetime of your application but not across reload so if you you know for example if you have a piece of content",
    "start": "392429",
    "end": "397979"
  },
  {
    "text": "that you could expand or contract a little triangle maybe that information wants to live across the entire time",
    "start": "397979",
    "end": "403409"
  },
  {
    "text": "that your user is moving around the application because you know if you move out of a tab and come back to the tab",
    "start": "403409",
    "end": "408749"
  },
  {
    "text": "you don't want that state to go away but if the user reloads you're gonna want to start from scratch so usually in the",
    "start": "408749",
    "end": "413939"
  },
  {
    "text": "controller manages state that's just for this session and the template of review whatever you're calling it in your",
    "start": "413939",
    "end": "420629"
  },
  {
    "text": "framework dujour manages what is currently on the screen what is currently visible and I think different",
    "start": "420629",
    "end": "428339"
  },
  {
    "text": "frameworks do a better or worse job of building an architecture around the fact",
    "start": "428339",
    "end": "433589"
  },
  {
    "text": "that this is what is going on but I think fundamentally this has got what's going on and it's how ember thinks about the division of responsibilities it's",
    "start": "433589",
    "end": "439619"
  },
  {
    "text": "mostly about the lifetime of your application so why does this why does it matter what these different what these",
    "start": "439619",
    "end": "445860"
  },
  {
    "text": "different pieces of your application how long they live so one really big reason is garbage so obviously you don't want",
    "start": "445860",
    "end": "453869"
  },
  {
    "text": "to be collecting your models so there are some frameworks that say garbage collection is such an important problem",
    "start": "453869",
    "end": "458879"
  },
  {
    "text": "that we're just as soon as you leave the page we're gonna just nuke your models and if you happen to come back to it",
    "start": "458879",
    "end": "464490"
  },
  {
    "text": "just to make another request to your server and the problem with that line of reasoning is that the models actually by",
    "start": "464490",
    "end": "470519"
  },
  {
    "text": "definition are things that should not get new they're by definition things that last a very very long time you unless you have a hundred thousand",
    "start": "470519",
    "end": "477689"
  },
  {
    "text": "pieces of that or something from your server and you really really need direct control over the memory you normally want that stuff to stick around you want",
    "start": "477689",
    "end": "483509"
  },
  {
    "text": "it to be around over the lifetime grappling and then similarly a lot of",
    "start": "483509",
    "end": "488909"
  },
  {
    "text": "people will end up mashing together their state of things like is this triangle expander or not together with",
    "start": "488909",
    "end": "493919"
  },
  {
    "text": "their view state with their template state and what that can mean is that you have to choose between either leaving",
    "start": "493919",
    "end": "500009"
  },
  {
    "text": "all of your views around all the time because they have all if this important state and usually that means keeping around Dom nodes and means keeping",
    "start": "500009",
    "end": "506459"
  },
  {
    "text": "around all kinds of expensive state or you have to say you know what I'm just gonna throw it away and the users are",
    "start": "506459",
    "end": "512130"
  },
  {
    "text": "gonna come back to this tab and they're just gonna have to re-expand that thing and I think both of those choices are bad and so what that means is that what",
    "start": "512130",
    "end": "518880"
  },
  {
    "text": "you really want is a piece of your architecture that's designed around the second piece of type of state it's designed around the exact route long",
    "start": "518880",
    "end": "526139"
  },
  {
    "text": "live hole session state and then finally I think there is a route there is room",
    "start": "526139",
    "end": "532170"
  },
  {
    "text": "for your view state which is basically things that if you leave you can easily regenerate because now",
    "start": "532170",
    "end": "537209"
  },
  {
    "text": "you've moved all the important state out of the view you can easily throw away the DOM and just bring it back to life",
    "start": "537209",
    "end": "542579"
  },
  {
    "text": "from the other state now I think one thing that simpler solutions often do is",
    "start": "542579",
    "end": "548699"
  },
  {
    "text": "they try to combine some of these levels so for example a lot of backbone apps combine the model and the controller",
    "start": "548699",
    "end": "554369"
  },
  {
    "text": "into one into one place on the grounds that you should just be able to generate your view from some other layer and I",
    "start": "554369",
    "end": "559800"
  },
  {
    "text": "think that's fine I think there's I think there's utility in once you divide up the things that are easily",
    "start": "559800",
    "end": "565319"
  },
  {
    "text": "regenerated bull and the things that are not I think that's really a huge win in and of itself but we have found is that",
    "start": "565319",
    "end": "570420"
  },
  {
    "text": "dividing these things up into three layers provides both good semantics for what things can stick around and what",
    "start": "570420",
    "end": "575699"
  },
  {
    "text": "things should be nuked but also general organization so I think it turns out that there's good organization reasons",
    "start": "575699",
    "end": "582019"
  },
  {
    "text": "to differentiate between things that are going to be sticking around when you reload the page and things that are just",
    "start": "582019",
    "end": "588420"
  },
  {
    "text": "temporary for this particular session so really what ember tries to do is it tries to think about ways to divide up",
    "start": "588420",
    "end": "595019"
  },
  {
    "text": "your application into reasonable buckets that into the particularly these three buckets so that's number one number two",
    "start": "595019",
    "end": "603509"
  },
  {
    "text": "is ember is just HTML so some of you might know ember is history we come from",
    "start": "603509",
    "end": "609420"
  },
  {
    "text": "this proper framework and sprout core like a lot of frameworks that were being created around that time cappucino EXT",
    "start": "609420",
    "end": "615540"
  },
  {
    "text": "j/s they try to abstract away HTML they try to tell you you just write some JavaScript you write some widgets and",
    "start": "615540",
    "end": "622410"
  },
  {
    "text": "we'll put some HTML on the screen for you and I think the problem with that is that people already know HTML people already know CSS either on your own or",
    "start": "622410",
    "end": "630869"
  },
  {
    "text": "with the rest of a team you have techniques for dealing with CSS somebody's gonna write a piece of HTML and give it to you you need to use it",
    "start": "630869",
    "end": "637049"
  },
  {
    "text": "you need to use some CSS that already exists maybe your application already has a style that you want to use and being told no problem just rewrite your",
    "start": "637049",
    "end": "644610"
  },
  {
    "text": "theme using cappuccinos theming system that doesn't really it's fine if you're gonna really bet everything on that and",
    "start": "644610",
    "end": "650279"
  },
  {
    "text": "spend months and months to figure out how the system works but I think it's really it's a lot better to just say we're just we're just doing HTML we're",
    "start": "650279",
    "end": "657600"
  },
  {
    "text": "adding some features to HTML so an example of this would be in ember if you",
    "start": "657600",
    "end": "665579"
  },
  {
    "text": "have an image tag which is the top you can actually bind automatically without having Ember to know anything about an image tag you",
    "start": "665579",
    "end": "671610"
  },
  {
    "text": "combined its source attribute to some piece of model state so you can imagine having a URL triggered on your model and",
    "start": "671610",
    "end": "676619"
  },
  {
    "text": "you can bind the source attribute to that and if it happens to change the image will automatically update and I",
    "start": "676619",
    "end": "681749"
  },
  {
    "text": "think the really great thing about the fact that it's based on HTML Dom attributes is that if you go and you",
    "start": "681749",
    "end": "688649"
  },
  {
    "text": "have an audio tag which has an SRC so the web's the web is all based around tags and attributes the same exact",
    "start": "688649",
    "end": "695369"
  },
  {
    "text": "techniques work without ever having to do anything special without ever having to learn any new tricks the normal",
    "start": "695369",
    "end": "700470"
  },
  {
    "text": "actually binding solutions the normal mechanisms for generating for building",
    "start": "700470",
    "end": "705929"
  },
  {
    "text": "HTML all that stuff will continue to work so I think this actually turned out",
    "start": "705929",
    "end": "711689"
  },
  {
    "text": "to be really cool we were doing a training a few months ago and we wanted to do an RTO application and we didn't",
    "start": "711689",
    "end": "717360"
  },
  {
    "text": "have to add anything to ember for it to handle the audio tag which is really great so again I think the important",
    "start": "717360",
    "end": "725040"
  },
  {
    "text": "thing here is we don't want to replace HTML we think hTML is the way that",
    "start": "725040",
    "end": "730110"
  },
  {
    "text": "people should build applications we want to add to it we want to augment it to it using handlebars which is a very popular",
    "start": "730110",
    "end": "735809"
  },
  {
    "text": "templating engine already we basically use that same templating engine to add features to HTML but which are live",
    "start": "735809",
    "end": "741660"
  },
  {
    "text": "bound which are gonna be working inside of Ember so that's number two and number three is is URLs so I think a lot of",
    "start": "741660",
    "end": "750179"
  },
  {
    "text": "people look at URLs they build they build they start with building something like the New York Times and you or you",
    "start": "750179",
    "end": "756449"
  },
  {
    "text": "get URLs for free and people get really used to using URLs and in all kinds of contexts and then they go to build a",
    "start": "756449",
    "end": "762119"
  },
  {
    "text": "single page application and they're so busy with the UI with the UX whatever their designer gave them that they completely forget URLs they completely",
    "start": "762119",
    "end": "769379"
  },
  {
    "text": "forget that you or else exists so for example to do MVC today handles URLs so",
    "start": "769379",
    "end": "774480"
  },
  {
    "text": "today you'll see the little R box means that there's a URL support and the to do MVC example but the first version of to",
    "start": "774480",
    "end": "780720"
  },
  {
    "text": "do MVC didn't support URLs at all so you would go learn about how to build a single page a single page web",
    "start": "780720",
    "end": "786600"
  },
  {
    "text": "application using all these frameworks and there was nothing at all in the first version about URLs now of course",
    "start": "786600",
    "end": "792290"
  },
  {
    "text": "it became obvious to addy that this is an important feature so he added it as a",
    "start": "792290",
    "end": "797399"
  },
  {
    "text": "requirement but I think unfortunately for many frameworks this is a sort of tack on feature it's something that you",
    "start": "797399",
    "end": "802589"
  },
  {
    "text": "think about down the road do I really need a URL or do I not need a URL and I think the interesting thing",
    "start": "802589",
    "end": "809850"
  },
  {
    "text": "is that when you look at applications like discourse or applications like Facebook keep your eye on the URL bar",
    "start": "809850",
    "end": "816960"
  },
  {
    "text": "for applications like Twitter or even applications like our do you find out",
    "start": "816960",
    "end": "822930"
  },
  {
    "text": "that people who are doing this for real people who are really building web applications no matter how single Paigey",
    "start": "822930",
    "end": "829530"
  },
  {
    "text": "they are have really good URL experiences people really think hard about how to make URLs good and that's",
    "start": "829530",
    "end": "836850"
  },
  {
    "text": "because people expect that when they're inside of the browser they expect the UI to be there is a URL bar and you can",
    "start": "836850",
    "end": "842850"
  },
  {
    "text": "copy something and it will have something to do with the current state of where you are and you can share that state with your friends so I took a look",
    "start": "842850",
    "end": "849300"
  },
  {
    "text": "at my Twitter feed yesterday just randomly the top post and I noticed that pretty much every post on here has a URL",
    "start": "849300",
    "end": "857370"
  },
  {
    "text": "in it and I think it's hard it's easy to forget when you're going you're building these single page applications you're",
    "start": "857370",
    "end": "862800"
  },
  {
    "text": "you know you're jumping in and you're focusing on all the single page EE the JavaScript heavy the client-side",
    "start": "862800",
    "end": "867960"
  },
  {
    "text": "application it's easy to forget that the way that people still mostly interact with the web is as a URL box on top bar",
    "start": "867960",
    "end": "873930"
  },
  {
    "text": "on top and a black box on the bottom and they want to make sure that as they're moving around conceptually around the application into different areas of",
    "start": "873930",
    "end": "880170"
  },
  {
    "text": "content that they can copy something from there and paste it I think for example it's kind of annoying that in",
    "start": "880170",
    "end": "885650"
  },
  {
    "text": "Gmail sorry not in Gmail in Google Maps you have to say give me a URL I think",
    "start": "885650",
    "end": "891210"
  },
  {
    "text": "those UI's everybody can feel something's wrong about that right you want to just be able to copy it out of the URL bar why do I have to ask for URL",
    "start": "891210",
    "end": "897750"
  },
  {
    "text": "why is this not working what is that URL bar for in the first place and what I",
    "start": "897750",
    "end": "903210"
  },
  {
    "text": "would say is the URL is actually if you want to think about what is the UI of the web how is the web different from",
    "start": "903210",
    "end": "909090"
  },
  {
    "text": "native fundamentally the URL is the UI of the web people use the UI for",
    "start": "909090",
    "end": "914450"
  },
  {
    "text": "bookmarking people use it for sharing with other people on Twitter on Facebook on Google+ people use it for emailing I",
    "start": "914450",
    "end": "920730"
  },
  {
    "text": "looked at my email box 80% of the top 50 emails in my email box had a URL one or",
    "start": "920730",
    "end": "926160"
  },
  {
    "text": "more URLs in them so people are really people really want to be able to pass around URLs their application people use",
    "start": "926160",
    "end": "932340"
  },
  {
    "text": "the command tab feature to open things in a new tab or right-click open a new tab right people are really relying on",
    "start": "932340",
    "end": "937590"
  },
  {
    "text": "the fact that as they're navigating around applications they get URL support and I would go a little bit further to",
    "start": "937590",
    "end": "943710"
  },
  {
    "text": "say if your application doesn't have URL support it is not a web app it's an application it happens to be delivered",
    "start": "943710",
    "end": "950070"
  },
  {
    "text": "using web technologies you happen to get to it through the web browser but the",
    "start": "950070",
    "end": "956070"
  },
  {
    "text": "application fundamentally is an application is not a web application it's an app it's a application written",
    "start": "956070",
    "end": "961770"
  },
  {
    "text": "using JavaScript and I think one thing that's interesting is that once you",
    "start": "961770",
    "end": "966810"
  },
  {
    "text": "start thinking of URLs as fundamental to what you're doing what you realize is",
    "start": "966810",
    "end": "971910"
  },
  {
    "text": "that there's a lot of places where you would think this is completely inappropriate place for URLs but where it's really valuable so for example",
    "start": "971910",
    "end": "977760"
  },
  {
    "text": "imagine I'm playing a first-person shooter and I could just grab the URL and I am my friend hey won't you join me here now obviously you're not going to",
    "start": "977760",
    "end": "984510"
  },
  {
    "text": "give the your friend all the state exactly you know all the exact specific state that you have but maybe it will",
    "start": "984510",
    "end": "990870"
  },
  {
    "text": "give them enough information to join you at the appropriate level or around the same location that you are in the game",
    "start": "990870",
    "end": "996020"
  },
  {
    "text": "imagine that I'm in Gmail and I can just take a link the current URL for an email",
    "start": "996020",
    "end": "1002390"
  },
  {
    "text": "and send it to my friend who I see a CC so I say hey friend I would like you to go look at this email and I can see that",
    "start": "1002390",
    "end": "1008060"
  },
  {
    "text": "you're a CC so you should have access to it why don't you we'll take a look at this instead of telling them go search for this subject 1 or I think one of my",
    "start": "1008060",
    "end": "1015950"
  },
  {
    "text": "favorite examples is if you go into the chrome settings you get everything you do including modal dialogues is a URL",
    "start": "1015950",
    "end": "1022040"
  },
  {
    "text": "and I think that's really helpful sometimes you know my mom calls up and she says I don't really know what to do I'm trying to like you know add",
    "start": "1022040",
    "end": "1027620"
  },
  {
    "text": "something to my phone I'm trying to change this setting and the fact that I can go in there go exactly where I need",
    "start": "1027620",
    "end": "1032959"
  },
  {
    "text": "to be and I amber a link that says here is where you need to go into settings this is pretty this app seems pretty unusual in the sense that it's my",
    "start": "1032959",
    "end": "1039589"
  },
  {
    "text": "personal settings I have a modal dialog up what does it have to do with URLs but when you think about how valuable it is",
    "start": "1039590",
    "end": "1045260"
  },
  {
    "text": "to share with your friends share by email share by bookmarking don't think",
    "start": "1045260",
    "end": "1051650"
  },
  {
    "text": "about whether or not you should add a URL you should be thinking about whether it's appropriate to eliminate it but it's appropriate to leave it out so this",
    "start": "1051650",
    "end": "1060020"
  },
  {
    "text": "is I think fundamentally what ember is about today it's about making it so that you don't have a choice if you want to",
    "start": "1060020",
    "end": "1065600"
  },
  {
    "text": "opt-out of URLs you have to think hard and long about it and you basically get URLs as part of the packages building a number application",
    "start": "1065600",
    "end": "1072400"
  },
  {
    "text": "so with that why don't I start by why don't I go build something so let me let's build an application let me swap",
    "start": "1072400",
    "end": "1087510"
  },
  {
    "text": "ok so now I'm just gonna go and build and build an app ok so let me let me",
    "start": "1087510",
    "end": "1096160"
  },
  {
    "text": "just start so here i've downloaded the ember starter kit i've made a few small tweaks to it the first thing is that I",
    "start": "1096160",
    "end": "1101920"
  },
  {
    "text": "am down I'm using the ember nightly build instead of the one that we just released there's a few changes in it",
    "start": "1101920",
    "end": "1107080"
  },
  {
    "text": "that matter to me I'm well I've also included the showdown library which is a markdown library and I've also included",
    "start": "1107080",
    "end": "1112780"
  },
  {
    "text": "the Twitter bootstrap library CSS framework and what I'm gonna be doing today is build a simple markdown editor",
    "start": "1112780",
    "end": "1119050"
  },
  {
    "text": "a little place for you to have a list of files that you can that you can edit etc",
    "start": "1119050",
    "end": "1124810"
  },
  {
    "text": "so we're gonna start by just allowing me I'm gonna start by allowing me to edit",
    "start": "1124810",
    "end": "1130510"
  },
  {
    "text": "my name so I want to have an input tag here so input type equals text value",
    "start": "1130510",
    "end": "1138220"
  },
  {
    "text": "equals name and then we're gonna put an h2 and h1 here which basically says",
    "start": "1138220",
    "end": "1145230"
  },
  {
    "text": "markdown files by name ok so a few",
    "start": "1145230",
    "end": "1152560"
  },
  {
    "text": "things I want to point out here so this here is a script tag and it's basically just a template it's the main template",
    "start": "1152560",
    "end": "1158650"
  },
  {
    "text": "for application it doesn't have a name so it's basically what ember will use if you don't do anything if you don't have any URLs its gonna render this first so",
    "start": "1158650",
    "end": "1166570"
  },
  {
    "text": "also I want to point out this info tag here is basically it's obviously not using angle brackets and that's because",
    "start": "1166570",
    "end": "1173650"
  },
  {
    "text": "it's dynamic so it's basically the same thing as regular input ID but it has dynamic properties in this case we're",
    "start": "1173650",
    "end": "1179530"
  },
  {
    "text": "gonna say that its value is the same as this name thing and that's gonna be bound to this name field over here so",
    "start": "1179530",
    "end": "1186400"
  },
  {
    "text": "let me open it great so I'm going to say you two cats",
    "start": "1186400",
    "end": "1195720"
  },
  {
    "text": "and great so it works so that's the first starting point unfortunately if I reload now of course it's going to get",
    "start": "1195720",
    "end": "1201000"
  },
  {
    "text": "lost so let's fix that let's have that information get persisted to local storage so what I'm gonna do here is I'm",
    "start": "1201000",
    "end": "1207270"
  },
  {
    "text": "going to tell my input that it has an action which is save name and that",
    "start": "1207270",
    "end": "1212850"
  },
  {
    "text": "action by default is going to get triggered when I hit enter so I'm gonna go into here and I'm going to create the",
    "start": "1212850",
    "end": "1220190"
  },
  {
    "text": "application controller and the application controller is basically just the object that handles events from the",
    "start": "1220190",
    "end": "1226710"
  },
  {
    "text": "application template so it's gonna be an ember controller and I'm going to say",
    "start": "1226710",
    "end": "1233570"
  },
  {
    "text": "save name it's going to get the value which is the current name that's in text",
    "start": "1233570",
    "end": "1238590"
  },
  {
    "text": "box and what I'm going to do here is I'm going to say okay I want to save this to local storage so local storage dot say",
    "start": "1238590",
    "end": "1248910"
  },
  {
    "text": "app name equals value and so that's fine that's gonna save it but of course I",
    "start": "1248910",
    "end": "1254730"
  },
  {
    "text": "also need to load it in the first place from somewhere so I'm going to say that there is an initialization here so this is just a constructor function for this",
    "start": "1254730",
    "end": "1262170"
  },
  {
    "text": "controller and I'm gonna say this dot set name local storage dot app name so",
    "start": "1262170",
    "end": "1270900"
  },
  {
    "text": "basically what I've done here is we have this can we have this template over here it's getting its information from the",
    "start": "1270900",
    "end": "1276180"
  },
  {
    "text": "controller that is the same name the application controller and what we're doing is we're saying whenever this controller gets initialized which is",
    "start": "1276180",
    "end": "1282240"
  },
  {
    "text": "going to happen right away when the application boots set its name property to the local storage information and",
    "start": "1282240",
    "end": "1288390"
  },
  {
    "text": "when you hit enter which is going to trigger this safe name function I should probably then save it to local storage",
    "start": "1288390",
    "end": "1298530"
  },
  {
    "text": "so let me do this you to cats",
    "start": "1298530",
    "end": "1304160"
  },
  {
    "text": "and now let's go here we can see local storage app name right correct and if I",
    "start": "1304160",
    "end": "1311780"
  },
  {
    "text": "reload you'll see it works and importantly you can see that both the input field and the the text over here",
    "start": "1311780",
    "end": "1318440"
  },
  {
    "text": "got the information so now we've stored the information in local storage so now the next thing that I want to do is I",
    "start": "1318440",
    "end": "1324890"
  },
  {
    "text": "want to list out all the files that I have so in order to do this I'm going to make a second template so it's going to",
    "start": "1324890",
    "end": "1331220"
  },
  {
    "text": "be script type equals text X handlebars and now I'm gonna say that a template",
    "start": "1331220",
    "end": "1337190"
  },
  {
    "text": "name equals files and this is gonna be a list of all the files that I have and you'll see over here I basically created",
    "start": "1337190",
    "end": "1343850"
  },
  {
    "text": "a list of files over here that have little slug title etc and then I've also over here all I've done is I've made",
    "start": "1343850",
    "end": "1350570"
  },
  {
    "text": "that same array have indexed them by the slug so that way I later on when I'm gonna want to get it from the URL I have",
    "start": "1350570",
    "end": "1356600"
  },
  {
    "text": "an easy way to get it so of course in practice you would probably do something a little more complicated than this but this is just for for demo purposes it's",
    "start": "1356600",
    "end": "1363950"
  },
  {
    "text": "pretty straightforward so what I want to do here and I'm gonna grab some HTML from I'm gonna grab some Twitter",
    "start": "1363950",
    "end": "1374960"
  },
  {
    "text": "bootstrap HTML from here let me",
    "start": "1374960",
    "end": "1381100"
  },
  {
    "text": "so it's just simple Twitter bootstrap we have a container we have row span three which is a table which has a list of",
    "start": "1384790",
    "end": "1391210"
  },
  {
    "text": "files in it and then span 9 which is where we're gonna put the individual files actually let me I'll kill that for",
    "start": "1391210",
    "end": "1396400"
  },
  {
    "text": "now so we reload it and nothing happens",
    "start": "1396400",
    "end": "1401560"
  },
  {
    "text": "and so that seems that seems problematic and the reason that nothing happened is as I said before everything in ember is",
    "start": "1401560",
    "end": "1408430"
  },
  {
    "text": "driven by a URL so the first thing that we need to do is we need to provide a URL for that files location so we're",
    "start": "1408430",
    "end": "1414850"
  },
  {
    "text": "gonna say this dot resource files ok so",
    "start": "1414850",
    "end": "1420370"
  },
  {
    "text": "now if I go back and add files again nothing's going to happen so why has nothing happened well the reason nothing",
    "start": "1420370",
    "end": "1426970"
  },
  {
    "text": "happened is that I haven't told the application where it should put that files template inside of my main",
    "start": "1426970",
    "end": "1432160"
  },
  {
    "text": "template so of course we want this is the template that we want to appear all the time no matter what we're doing and",
    "start": "1432160",
    "end": "1437500"
  },
  {
    "text": "we need to say ok here is where you should here's an outlet and that means when you want to put another template in",
    "start": "1437500",
    "end": "1444100"
  },
  {
    "text": "here's the place that it goes so now if I reload you can see great so the other",
    "start": "1444100",
    "end": "1449290"
  },
  {
    "text": "template appears now unfortunately having it be a piece of static content is not very useful if I keep going down",
    "start": "1449290",
    "end": "1454810"
  },
  {
    "text": "this path you're gonna start wondering why I'm not using Django or Rails or something like that so let's start let's",
    "start": "1454810",
    "end": "1460030"
  },
  {
    "text": "do some dynamic content so here we can see we're inside of a table with a TR",
    "start": "1460030",
    "end": "1465220"
  },
  {
    "text": "and I'm gonna say each file in model and",
    "start": "1465220",
    "end": "1471880"
  },
  {
    "text": "I'm going to say here's a TR here's a TD and I'm going to say chip each file",
    "start": "1471880",
    "end": "1478870"
  },
  {
    "text": "sorry file dot was it title yep file",
    "start": "1478870",
    "end": "1485470"
  },
  {
    "text": "that title by file by author",
    "start": "1485470",
    "end": "1491070"
  },
  {
    "text": "nice okay so we're gonna have a problem though if we reload of course we have no",
    "start": "1491950",
    "end": "1499710"
  },
  {
    "text": "model so so far we've said loop over all the things that are in my model but we have not told it what the model is so",
    "start": "1499710",
    "end": "1505590"
  },
  {
    "text": "it's looping over nothing so what we need to do is we need to tell it what the model is and the way you do that an",
    "start": "1505590",
    "end": "1510840"
  },
  {
    "text": "ember is that you create a route so app dot files route and there's a function",
    "start": "1510840",
    "end": "1520770"
  },
  {
    "text": "called model over here and basically this model is just you tell it what the model is and then that becomes the model",
    "start": "1520770",
    "end": "1526380"
  },
  {
    "text": "inside of your template by the same name so we're just gonna return files here",
    "start": "1526380",
    "end": "1531710"
  },
  {
    "text": "right and that base is gonna say this array of files is going to become the",
    "start": "1531710",
    "end": "1537060"
  },
  {
    "text": "model over here that we're looping over it's by the same name so great so now we",
    "start": "1537060",
    "end": "1542130"
  },
  {
    "text": "have we've looped over the model so awesome so the next thing we probably",
    "start": "1542130",
    "end": "1547620"
  },
  {
    "text": "want to do is okay I want to actually go look at one of those individual files so you guessed it then we're gonna want to",
    "start": "1547620",
    "end": "1554970"
  },
  {
    "text": "make another template for each individual file so script type equals text X handlebars data template name",
    "start": "1554970",
    "end": "1561930"
  },
  {
    "text": "equals individual file script and what",
    "start": "1561930",
    "end": "1568740"
  },
  {
    "text": "we're gonna do is we're gonna say h2 title - god sublime is really screwing",
    "start": "1568740",
    "end": "1578730"
  },
  {
    "text": "me here h3 author will save by author",
    "start": "1578730",
    "end": "1586550"
  },
  {
    "text": "slash h3 and then we will just put a div here let me see if I know just the div",
    "start": "1586550",
    "end": "1597020"
  },
  {
    "text": "and we're gonna put the contents in here right so basically now we're looking at an individual file and we want to put",
    "start": "1597750",
    "end": "1603750"
  },
  {
    "text": "the title author in context so again as you probably expected so we have a template here but we haven't actually",
    "start": "1603750",
    "end": "1609510"
  },
  {
    "text": "said how to get to it so we need to provide a route for individual files so let's go back to our router we're gonna",
    "start": "1609510",
    "end": "1617400"
  },
  {
    "text": "say that we want a resource for individual file and in this case we have to provide a path and the reason we have",
    "start": "1617400",
    "end": "1626700"
  },
  {
    "text": "to provide the path is of course there are many different files and it's not instead of there just being one file so we need to provide a little dynamic",
    "start": "1626700",
    "end": "1632220"
  },
  {
    "text": "segment there that says this is gonna be the files ID now if I was to go to files",
    "start": "1632220",
    "end": "1637800"
  },
  {
    "text": "/ let's say one of the IDs is rails is omakase it did enter nothing is",
    "start": "1637800",
    "end": "1645360"
  },
  {
    "text": "going to happen and if you go look at it it's going to say hey you assertion",
    "start": "1645360",
    "end": "1653010"
  },
  {
    "text": "failed you use the dynamic segment hold on let me disable this so that it does not cause problems in the future it says",
    "start": "1653010",
    "end": "1660450"
  },
  {
    "text": "hey you used the dynamic second file ID but you didn't have a plot file which is how other member data hooks into it but",
    "start": "1660450",
    "end": "1669240"
  },
  {
    "text": "also you did not override your routes I cannot you cannot get to the other side",
    "start": "1669240",
    "end": "1674880"
  },
  {
    "text": "but it basically says you didn't override your routes model hook so in order to actually say what is gone what file to use we have to override the",
    "start": "1674880",
    "end": "1681480"
  },
  {
    "text": "routes model hooks so let's go do that so we have basically the same thing app that individual file route equals M bar",
    "start": "1681480",
    "end": "1688800"
  },
  {
    "text": "out extend it has a model this time it's gonna take a list of all the parameters",
    "start": "1688800",
    "end": "1694230"
  },
  {
    "text": "that came in from from the URL you have a files ID and we're going to return files params dot file ID right so that /",
    "start": "1694230",
    "end": "1704820"
  },
  {
    "text": "am is gonna come from here and we've indexed this little loop over here indexed all them by their ID so now we",
    "start": "1704820",
    "end": "1710550"
  },
  {
    "text": "are going to do we're going to do that so now we can see that we have gone to",
    "start": "1710550",
    "end": "1716190"
  },
  {
    "text": "files rails is omaha say and now we can see that it's here well there's one small issue here which",
    "start": "1716190",
    "end": "1722010"
  },
  {
    "text": "is that you can see if you look at the original source that there is",
    "start": "1722010",
    "end": "1727700"
  },
  {
    "text": "it's hard to see it but it is marked down and we would like that to actually be marked on so it actually would be",
    "start": "1728250",
    "end": "1733440"
  },
  {
    "text": "easier if we go to Y Ruby so we can see that there is some work down here and we",
    "start": "1733440",
    "end": "1739320"
  },
  {
    "text": "would like to actually present that as markdown we would not like to present that as as just plain text so the way",
    "start": "1739320",
    "end": "1745830"
  },
  {
    "text": "that you do this in ember is that you create what is called a helper so I've included the showdown library and the",
    "start": "1745830",
    "end": "1752130"
  },
  {
    "text": "showdown library is going to allow us to convert normal text into HTML and we're gonna say ember dot handlebars dot",
    "start": "1752130",
    "end": "1759210"
  },
  {
    "text": "helper markdown it takes it's a function which takes a value which is basically",
    "start": "1759210",
    "end": "1764549"
  },
  {
    "text": "just whatever it is that we're in the we want to convert we're gonna save our converter equals new showdown converter",
    "start": "1764549",
    "end": "1772770"
  },
  {
    "text": "and then we're gonna return converter dot make HTML value now we just go back",
    "start": "1772770",
    "end": "1781380"
  },
  {
    "text": "here we say okay we would like this contents to be displayed as markdown refresh well so this is not exactly what",
    "start": "1781380",
    "end": "1788400"
  },
  {
    "text": "we wanted we can see that everything's escaped so the reason that everything's escaped is that in ember by default any text that you put into the page left",
    "start": "1788400",
    "end": "1794880"
  },
  {
    "text": "escaped and this is to prevent you from having to deal with XSS in order to tell ember specifically that what you want",
    "start": "1794880",
    "end": "1800940"
  },
  {
    "text": "here is something that is safe so I know that I put it through markdown therefore I know that it's safe what I do is I can",
    "start": "1800940",
    "end": "1806610"
  },
  {
    "text": "go here and I can say this is a new handlebars dot safe spring and that",
    "start": "1806610",
    "end": "1814320"
  },
  {
    "text": "basically says you can safely convert render this as HTML and now it's HTML",
    "start": "1814320",
    "end": "1821809"
  },
  {
    "text": "there's something weird with the CSS here but ok and you can see by the way",
    "start": "1821809",
    "end": "1826919"
  },
  {
    "text": "that as I go back and forth everything is doing the right thing well so we've done all this but now if we go back to",
    "start": "1826919",
    "end": "1833159"
  },
  {
    "text": "the files list we have no way to actually get to the individual pages so that's X well there's good news which is",
    "start": "1833159",
    "end": "1839730"
  },
  {
    "text": "that we have already specified the route profile so we can just go in here and we can say link to individual file and then",
    "start": "1839730",
    "end": "1848909"
  },
  {
    "text": "we just pass the file that's currently in scope",
    "start": "1848909",
    "end": "1852799"
  },
  {
    "text": "this is a little weird and then we close the link - so what's happening here is",
    "start": "1857750",
    "end": "1863670"
  },
  {
    "text": "that we're basically we have a file in scope a file object and we're basically passing it along and what's going to happen is that ember is going to",
    "start": "1863670",
    "end": "1869400"
  },
  {
    "text": "automatically pull its ID out and it's going to use that as the URL to generate the URL it's basically going to put it",
    "start": "1869400",
    "end": "1875220"
  },
  {
    "text": "replace it with replace this little segment over here with the ID from that object so now if i refresh it you can",
    "start": "1875220",
    "end": "1881400"
  },
  {
    "text": "see that there is URLs if you see on the bottom right rails as ohmic I say if I",
    "start": "1881400",
    "end": "1888420"
  },
  {
    "text": "click on it great it's going to come in here so great so we've done good so far and if you go back of course you get the",
    "start": "1888420",
    "end": "1895500"
  },
  {
    "text": "lists now I hope that what you're noticing is that everything in ember is really URL driven it's very there's not",
    "start": "1895500",
    "end": "1900840"
  },
  {
    "text": "an easy way to think about these things in terms of oh I just want to click on this and have something appear you really think about in terms of URLs but",
    "start": "1900840",
    "end": "1907020"
  },
  {
    "text": "we've made it so simple to use URLs that you really have no excuse not to so you get really the benefits of sharing",
    "start": "1907020",
    "end": "1912360"
  },
  {
    "text": "bookmarking so for example if I go back here and command click sorry if I go down here and open link in new tab",
    "start": "1912360",
    "end": "1919430"
  },
  {
    "text": "you'll see that it of course does the right thing which means if I put it on Twitter or something it's all going to work so that's great so now the last",
    "start": "1919430",
    "end": "1929880"
  },
  {
    "text": "thing I want to do before I get into editing how much time do I have does anyone know ok great I'm still on",
    "start": "1929880",
    "end": "1936750"
  },
  {
    "text": "track so the last thing that I want to do before I get into editing is what if",
    "start": "1936750",
    "end": "1942060"
  },
  {
    "text": "I want to actually leave them both on the same screen at the same time so I want to have what is called the nesting UI so sort of like what Gmail as where",
    "start": "1942060",
    "end": "1948600"
  },
  {
    "text": "you leave a read-along the list on the left side even though you're a middle viewing something on the right side so this is something that is can be a",
    "start": "1948600",
    "end": "1955140"
  },
  {
    "text": "little bit tricky in some frameworks and ember we thought about out of the way that our outlets and our routes work from the ground up to support this use",
    "start": "1955140",
    "end": "1961350"
  },
  {
    "text": "case so what we're gonna do here is we're going to put in the first thing",
    "start": "1961350",
    "end": "1966660"
  },
  {
    "text": "we're gonna do is we're gonna say that our route should be nested so instead of having two separate routes we're going",
    "start": "1966660",
    "end": "1972000"
  },
  {
    "text": "to grab this and we're gonna put it inside and of course we don't need to",
    "start": "1972000",
    "end": "1978660"
  },
  {
    "text": "put files here anymore right so now we have it nested inside but there's gonna be a small issue which",
    "start": "1978660",
    "end": "1987170"
  },
  {
    "text": "is that if I go to rails as omec I say nothing is going to happen and the",
    "start": "1987170",
    "end": "1992390"
  },
  {
    "text": "reason is similar to what happened before which is that I haven't actually told ember where to put that child template so I've told them where I would",
    "start": "1992390",
    "end": "1998600"
  },
  {
    "text": "like you to render the file template inside of the files template but I've not actually pulled it where to put it",
    "start": "1998600",
    "end": "2004930"
  },
  {
    "text": "so that's actually rather straightforward how to fix it so we basically go here we create another div",
    "start": "2004930",
    "end": "2013450"
  },
  {
    "text": "with class equals let's say span nine and inside of that div we throw in an",
    "start": "2013450",
    "end": "2020290"
  },
  {
    "text": "outlet and now what we can see is that",
    "start": "2020290",
    "end": "2026850"
  },
  {
    "text": "and now what we can see is that the child template you can see that we have",
    "start": "2026850",
    "end": "2034120"
  },
  {
    "text": "a child route files and then inside was rails omeka SE and we can see that that same route structure that we've set up",
    "start": "2034120",
    "end": "2039250"
  },
  {
    "text": "over here represents the nesting of the UI structure so basically you can have nested you eyes and have them be",
    "start": "2039250",
    "end": "2045640"
  },
  {
    "text": "reflected in the URL very very simply which is great now another thing that I thought I would I point out is that you",
    "start": "2045640",
    "end": "2052240"
  },
  {
    "text": "can see that these why is why Ruby and rails omeka say are becoming bolded as I click on them and that's because when",
    "start": "2052240",
    "end": "2058450"
  },
  {
    "text": "you use the link to help here we are automatically adding an active class if the thing that you are rendering happens",
    "start": "2058450",
    "end": "2064300"
  },
  {
    "text": "to be the current active State so without you having to do any additional work you can just you can just kind of",
    "start": "2064300",
    "end": "2069460"
  },
  {
    "text": "this active State and if you look at the CSS here you can just see that I have said when a link is active and make it",
    "start": "2069460",
    "end": "2074710"
  },
  {
    "text": "bold different great so now the very last thing that I want to show you in the demo is okay what if I want to",
    "start": "2074710",
    "end": "2080889"
  },
  {
    "text": "actually edit these individual files so the first thing I'm going to do is I'm",
    "start": "2080890",
    "end": "2086408"
  },
  {
    "text": "going to go into my file and I'm going to add some text I'm going to add some form fields so input well let's let's",
    "start": "2086409",
    "end": "2094030"
  },
  {
    "text": "throw in a label label 4 equals title",
    "start": "2094030",
    "end": "2100290"
  },
  {
    "text": "title slash label",
    "start": "2100290",
    "end": "2105420"
  },
  {
    "text": "and then I'm going to put an input type equals text I'm going to have ID equals",
    "start": "2105650",
    "end": "2111650"
  },
  {
    "text": "title and then I'm going to have value equals title what is going on here great",
    "start": "2111650",
    "end": "2117410"
  },
  {
    "text": "value equals title and then I'm going to say slash man and now you can see that",
    "start": "2117410",
    "end": "2125210"
  },
  {
    "text": "if I go and change things you can see that it's changing in all the locations and now I'll just do a few more of these",
    "start": "2125210",
    "end": "2132530"
  },
  {
    "text": "right I'll add a text field for the author",
    "start": "2132530",
    "end": "2138550"
  },
  {
    "text": "and I will add a text area",
    "start": "2147330",
    "end": "2150980"
  },
  {
    "text": "for the contents and this yes so this",
    "start": "2152640",
    "end": "2157680"
  },
  {
    "text": "guy is gonna be a text area his ID is going to be contents and its value is",
    "start": "2157680",
    "end": "2164760"
  },
  {
    "text": "going to be contents so if I go in here",
    "start": "2164760",
    "end": "2171540"
  },
  {
    "text": "and I actually let me throw in I can add rows equals ten great so now if I want",
    "start": "2171540",
    "end": "2180600"
  },
  {
    "text": "to go in and say you know I want to say rails is what I say you can see that I'm",
    "start": "2180600",
    "end": "2186150"
  },
  {
    "text": "getting a live markdown editor over here and I didn't really have to write any code to make that live markdown it in there work the fact that it's going",
    "start": "2186150",
    "end": "2192720"
  },
  {
    "text": "through the markdown helper and the fact that it's bound to the same code the same that attributes that's making",
    "start": "2192720",
    "end": "2197970"
  },
  {
    "text": "everything just work everything is just hooked up together got me asked me to do anything else okay and the last thing I",
    "start": "2197970",
    "end": "2203850"
  },
  {
    "text": "want to sit show is basically okay I probably don't want to have these edit options open the entire time so let me",
    "start": "2203850",
    "end": "2210120"
  },
  {
    "text": "make it possible to just optionally put in edit or not so the first thing I'm going to do is pull out this block here",
    "start": "2210120",
    "end": "2216750"
  },
  {
    "text": "into a partial so I'm gonna say script type equals text X handlebars data",
    "start": "2216750",
    "end": "2225690"
  },
  {
    "text": "template name equals file slash underscore form / script one time it was",
    "start": "2225690",
    "end": "2233430"
  },
  {
    "text": "useful okay so I have this form and then inside of here I'm gonna the first thing",
    "start": "2233430",
    "end": "2238800"
  },
  {
    "text": "I'm going to do is just change it to a partial file slash form and that's going",
    "start": "2238800",
    "end": "2243990"
  },
  {
    "text": "to basically throw in the partial so you'll see okay everything of course still works as before but what we want",
    "start": "2243990",
    "end": "2249510"
  },
  {
    "text": "to do is we want to say okay I only want to show this form if I'm in the middle if I'm in an editing mode so I'm gonna say okay if I mean if is",
    "start": "2249510",
    "end": "2256620"
  },
  {
    "text": "editing if I'm in editing mode show the form and show a button whose action is",
    "start": "2256620",
    "end": "2262830"
  },
  {
    "text": "done and I'll put this done thing here otherwise just show a button that says",
    "start": "2262830",
    "end": "2271200"
  },
  {
    "text": "that goes into edit and have an edit button",
    "start": "2271200",
    "end": "2278160"
  },
  {
    "text": "okay so /if and we have an edit button",
    "start": "2278160",
    "end": "2285240"
  },
  {
    "text": "but of course I haven't told it to do anything so that's not going to do us a lot of good so we're inside of the file",
    "start": "2285240",
    "end": "2290309"
  },
  {
    "text": "templates so we're gonna handle these actions through the file controller so let's go over here and we'll say app dot",
    "start": "2290309",
    "end": "2297660"
  },
  {
    "text": "file controller equals ember dot object controller dot extend the object",
    "start": "2297660",
    "end": "2303000"
  },
  {
    "text": "controller is basically just because we're showing an individual object here instead of a list which would be in a",
    "start": "2303000",
    "end": "2308400"
  },
  {
    "text": "RAID controller and the first thing we're gonna do is we're going to say okay the default for is editing is gonna be false and then we're gonna have a",
    "start": "2308400",
    "end": "2314700"
  },
  {
    "text": "thing a method called edit and that method called edit is going to say this",
    "start": "2314700",
    "end": "2321780"
  },
  {
    "text": "dot set is editing true and we're gonna have it done which is gonna say this dot",
    "start": "2321780",
    "end": "2329760"
  },
  {
    "text": "set is editing false okay now if I press",
    "start": "2329760",
    "end": "2336390"
  },
  {
    "text": "the edit button we get all the things I say done we're done so I actually had more in my demo which was to now hook up",
    "start": "2336390",
    "end": "2341760"
  },
  {
    "text": "this saving to local storage the way you I'll just describe how you do it and it can be left as an exercise to the reader",
    "start": "2341760",
    "end": "2347640"
  },
  {
    "text": "so we already talked about how to do local storage here you would basically do a similar thing down here and when you click done you basically persist the",
    "start": "2347640",
    "end": "2353760"
  },
  {
    "text": "current object of local storage and when you boot it up the application you would read all the objects out of local storage in the first place so instead of",
    "start": "2353760",
    "end": "2359400"
  },
  {
    "text": "hard-coding this files list you would be getting it out of local storage and then and everything would just work exactly the same you wouldn't have to change",
    "start": "2359400",
    "end": "2365250"
  },
  {
    "text": "basically anything about your application other than how you happen to persist the data into the local storage instead of a memory so cool so that is",
    "start": "2365250",
    "end": "2372660"
  },
  {
    "text": "that's the demo and now let me move on to the future of the world",
    "start": "2372660",
    "end": "2377720"
  },
  {
    "text": "so now we have built something so I want to reiterate that I think it's never it's really never been a better time to",
    "start": "2380089",
    "end": "2385819"
  },
  {
    "text": "be a web developer you can do really cool stuff you can see there's 3d Mozilla has just released a first-person",
    "start": "2385819",
    "end": "2391819"
  },
  {
    "text": "shooter that runs at nearly native speeds using 3d so you look at this this",
    "start": "2391819",
    "end": "2397160"
  },
  {
    "text": "is a series of features that are common in native environments and actually we",
    "start": "2397160",
    "end": "2402650"
  },
  {
    "text": "have all these features today on the web we have typed arrays which basically allow you to control granularly pieces",
    "start": "2402650",
    "end": "2409130"
  },
  {
    "text": "blocks of memory with you know integers and not have to worry about the GC we",
    "start": "2409130",
    "end": "2414709"
  },
  {
    "text": "have WebSockets that you open up sockets anywhere we have web workers which allow you to have threads we have WebGL which",
    "start": "2414709",
    "end": "2420619"
  },
  {
    "text": "is basically a port of opengl to the web and we even have asm.js now which allows you to compile C directly into something",
    "start": "2420619",
    "end": "2427729"
  },
  {
    "text": "that runs me maybe only one and a half or two times slower than C even though it's compiled down into JavaScript so",
    "start": "2427729",
    "end": "2433099"
  },
  {
    "text": "Mozilla has has recently shipped this thing which basically will look at a subset of JavaScript and compile it",
    "start": "2433099",
    "end": "2438619"
  },
  {
    "text": "directly into C so it's a little bit around the side but it's compatible with any JavaScript which means it runs in",
    "start": "2438619",
    "end": "2444890"
  },
  {
    "text": "chrome today chrome hasn't shipped any kind of special C optimizations it runs in chrome today a little bit",
    "start": "2444890",
    "end": "2450499"
  },
  {
    "text": "slower of course than Mozilla but there was now a path to running something that is very very close to native speeds",
    "start": "2450499",
    "end": "2456140"
  },
  {
    "text": "directly on the web so you could compile your C code directly to the web so we've gotten really really far I think again I",
    "start": "2456140",
    "end": "2462049"
  },
  {
    "text": "think this is what I was talking about before if you look five years ago basically none of these features existed and now all these features existed the",
    "start": "2462049",
    "end": "2467809"
  },
  {
    "text": "web is really moving forward quickly I don't think there's a lot that you can't do today on the web platform and I think",
    "start": "2467809",
    "end": "2472939"
  },
  {
    "text": "if you grow your year from now that will be even more the case I think between Mozilla and Google and even Microsoft I",
    "start": "2472939",
    "end": "2479269"
  },
  {
    "text": "think we were really making a lot of progress so I want to talk a little bit",
    "start": "2479269",
    "end": "2484489"
  },
  {
    "text": "about es6 so I'm a member of Tizen 39 which is the committee that works on the next version of JavaScript and the thing",
    "start": "2484489",
    "end": "2491119"
  },
  {
    "text": "that we're working on right now most heavily is es6 and one thing that really",
    "start": "2491119",
    "end": "2496459"
  },
  {
    "text": "excites me is today every single framework every backbone Emporer angular",
    "start": "2496459",
    "end": "2502609"
  },
  {
    "text": "knockout all of us have our own systems for doing something that's like a class like abstraction which makes it really",
    "start": "2502609",
    "end": "2507619"
  },
  {
    "text": "hard for ember to publish some little library and for angular to use it or vice versa for ember to build on top of backbone",
    "start": "2507619",
    "end": "2514470"
  },
  {
    "text": "because there's so much cross just in terms of building up a usable JavaScript runtime model and es6 provides a single",
    "start": "2514470",
    "end": "2521850"
  },
  {
    "text": "class like abstraction that everyone can use and so what I would hope that would happen in the near future is that think",
    "start": "2521850",
    "end": "2527490"
  },
  {
    "text": "people like Ember could really build on top of the lower level abstractions that other people are building because we",
    "start": "2527490",
    "end": "2532680"
  },
  {
    "text": "might share the same abstractions and I think that's really that fun thing about es6 but for me what's even more exciting",
    "start": "2532680",
    "end": "2539760"
  },
  {
    "text": "is that once you start going down this path of having class like abstractions and a lot of the other features that are",
    "start": "2539760",
    "end": "2545640"
  },
  {
    "text": "in es6 which I don't have time to talk about we start getting to a point where we could start thinking about things",
    "start": "2545640",
    "end": "2551460"
  },
  {
    "text": "like this so web components are a feature that allows you to basically build your own elements and part of the",
    "start": "2551460",
    "end": "2557040"
  },
  {
    "text": "idea behind web components is that you should be able to just subclass HTML elements so you could imagine that that",
    "start": "2557040",
    "end": "2562230"
  },
  {
    "text": "in a few years ember views will just be subclasses of HTML elements they won't be this heavy",
    "start": "2562230",
    "end": "2567510"
  },
  {
    "text": "special abstraction that's trying to deal with deficiencies of the web they will instead just be subclasses of HTML",
    "start": "2567510",
    "end": "2573840"
  },
  {
    "text": "element and I think when we think about the future we don't really think about trying to polyfill this type of thing",
    "start": "2573840",
    "end": "2579060"
  },
  {
    "text": "right now because by definition it's it's almost impossible to polyfill right now but what we think about is building",
    "start": "2579060",
    "end": "2585360"
  },
  {
    "text": "our building the Ember architecture so that's easy to swap in so we're taking a very close look and all these things I'm",
    "start": "2585360",
    "end": "2592290"
  },
  {
    "text": "actually involved closely in a lot of the work that's going into this and we're thinking about ok so as we're closing in on ember 1.0 as we start work",
    "start": "2592290",
    "end": "2599760"
  },
  {
    "text": "on ember 1.1 what can we do that will make us more easy to adopt these things in the future and I think it's it's worth mentioning that like I said",
    "start": "2599760",
    "end": "2607110"
  },
  {
    "text": "earlier for ember this is crucial for ember we're gonna be around in two or three years when this stuff drops and if",
    "start": "2607110",
    "end": "2612120"
  },
  {
    "text": "we have to go spend a year to refactor everything we did to take advantage of new features we're gonna be hosed but",
    "start": "2612120",
    "end": "2618450"
  },
  {
    "text": "for your application I don't think I don't think you want to pay the short-term performance penalties and complexity penalties to try to get high",
    "start": "2618450",
    "end": "2625470"
  },
  {
    "text": "fidelity polyfills of these features so I think for your application you what you want is the best possible",
    "start": "2625470",
    "end": "2631500"
  },
  {
    "text": "performance the simplest possible architecture that works on today's web and you but you also want it to be",
    "start": "2631500",
    "end": "2637170"
  },
  {
    "text": "future proof you want it you want it you want us to be thinking about what it means in three years for ember to still exist and to adopt these new features so",
    "start": "2637170",
    "end": "2643830"
  },
  {
    "text": "that's sort we take a sort of pragmatic middle-of-the-road approach we're not trying to polyfill what we what looks",
    "start": "2643830",
    "end": "2648989"
  },
  {
    "text": "like might happen in a few years and we don't we don't even really know yet but we are looking very closely at what is what looks like is going to happen to",
    "start": "2648989",
    "end": "2655469"
  },
  {
    "text": "think about how that fits into our mental model of the world and I think",
    "start": "2655469",
    "end": "2661799"
  },
  {
    "text": "one thing that's really interesting to me when you look at all those new features you look at you know we have",
    "start": "2661799",
    "end": "2667140"
  },
  {
    "text": "sockets now we have malloc we have WebGL one thing that we don't have even even web components one thing",
    "start": "2667140",
    "end": "2673529"
  },
  {
    "text": "that we don't have is anything that's really taking a look at the higher level architecture point I think URLs are",
    "start": "2673529",
    "end": "2679140"
  },
  {
    "text": "crucial and there's really nothing in the web platform that's trying to take it that's trying to take a look at how you should make people build front-end",
    "start": "2679140",
    "end": "2685439"
  },
  {
    "text": "web applications that are URLs front and center I think that's something that ember is doing and I hope that in the future the web platform tackles it but",
    "start": "2685439",
    "end": "2692579"
  },
  {
    "text": "for now really it's left to frameworks to tackle the architecture point and I think for now this is something that",
    "start": "2692579",
    "end": "2697880"
  },
  {
    "text": "we're looking at both how to take advantage of these new features like web components but also how to make sure",
    "start": "2697880",
    "end": "2702900"
  },
  {
    "text": "that you have a higher level abstraction for building your application that doesn't stop at the HTML oval so custom",
    "start": "2702900",
    "end": "2708809"
  },
  {
    "text": "HTML tags is great but that's really not the end of the story I think we all know custom H developments are much nicer way",
    "start": "2708809",
    "end": "2714420"
  },
  {
    "text": "of building jQuery UI but jQuery UI really isn't enough to build an application and I think everybody knows that so we're really thinking about a",
    "start": "2714420",
    "end": "2720749"
  },
  {
    "text": "higher level we're not just thinking about building more you know making HTML better although that's certainly a part",
    "start": "2720749",
    "end": "2725999"
  },
  {
    "text": "of what we're doing but we're also thinking about what the architecture of an application looks like like I said my",
    "start": "2725999",
    "end": "2733079"
  },
  {
    "text": "plans to be around for a long time we're not playing going anywhere so we're really thinking about what it means to",
    "start": "2733079",
    "end": "2738839"
  },
  {
    "text": "be future proof and how it fits in with the direction of the web I think for me things like class view extends HTML",
    "start": "2738839",
    "end": "2745349"
  },
  {
    "text": "element is really the core of how we think about things going in the future but I think one thing that I would point",
    "start": "2745349",
    "end": "2751019"
  },
  {
    "text": "out is that nothing is done yet there's a lot that has changed about web components just in the past few months so it's a it's quite hard to talk about",
    "start": "2751019",
    "end": "2758309"
  },
  {
    "text": "ok-hee we know what components are gonna be X or this a SM bs is gonna be Y therefore we are going to like bet hard",
    "start": "2758309",
    "end": "2765089"
  },
  {
    "text": "on the exact state of the feature today we're thinking about sort of the bigger picture what it means to subclass an",
    "start": "2765089",
    "end": "2770369"
  },
  {
    "text": "HTML element and less about the exact specifics of how that is going to work I have just a couple slides left so here",
    "start": "2770369",
    "end": "2779540"
  },
  {
    "text": "are features that if I were you I would keep an eye on these are features that we are thinking hard about how they fit into the two amber so things like",
    "start": "2779540",
    "end": "2785359"
  },
  {
    "text": "modules es6 is gonna have a standard module system that sort of replaces commonjs and AMD and the Yui module",
    "start": "2785359",
    "end": "2793160"
  },
  {
    "text": "loader all these things just like there's a class abstraction that replaces everyone's classes there's a module abstraction that replaces",
    "start": "2793160",
    "end": "2798950"
  },
  {
    "text": "everyone's modules we're thinking about how that fits in because right now pretty much everyone does this like single global application namespace",
    "start": "2798950",
    "end": "2805190"
  },
  {
    "text": "modules are a different way of thinking about things so we're sort of building the core of how ember looks up objects",
    "start": "2805190",
    "end": "2810200"
  },
  {
    "text": "so that it's compatible with both a single application namespace and module lookup similarly classes are gonna be around",
    "start": "2810200",
    "end": "2816230"
  },
  {
    "text": "embers thinking about how to do that object that observe in a rate observer are really exciting they're basically a",
    "start": "2816230",
    "end": "2821869"
  },
  {
    "text": "mechanism for getting information without having to override setting yet about what what things have changed in",
    "start": "2821869",
    "end": "2827030"
  },
  {
    "text": "an object both of those are really exciting they're things that Google has been working on for the past year or so",
    "start": "2827030",
    "end": "2832790"
  },
  {
    "text": "together with tc39 i've been watching with great excitement",
    "start": "2832790",
    "end": "2838430"
  },
  {
    "text": "as every meeting they come in with more information they've already shipped an experiment inside of chrome behind a flag so this",
    "start": "2838430",
    "end": "2845240"
  },
  {
    "text": "is really exciting to me and it's the sort of thing that I don't I don't think we can get high fidelity today but we",
    "start": "2845240",
    "end": "2850609"
  },
  {
    "text": "definitely want to build our architecture so for example object that observes ship delivers messages",
    "start": "2850609",
    "end": "2855829"
  },
  {
    "text": "asynchronously doesn't deliver them immediately when the change happens so ember from the beginning has always has",
    "start": "2855829",
    "end": "2862010"
  },
  {
    "text": "always followed this as always not try to make any guarantees about when exactly messages will get delivered and",
    "start": "2862010",
    "end": "2867200"
  },
  {
    "text": "we're thinking about even more going further in that direction so that it will be easier to adopt object that observes when it lands proxies are",
    "start": "2867200",
    "end": "2874190"
  },
  {
    "text": "basically a way of overriding you know every set every get the in call all these things directly on side on an",
    "start": "2874190",
    "end": "2880520"
  },
  {
    "text": "object and we're thinking about how to make ember objects feel better so you don't have to go through these special api's right so you go through what look",
    "start": "2880520",
    "end": "2886819"
  },
  {
    "text": "like the standard api is but you get the benefits because now you can override basically everything and like I said web",
    "start": "2886819",
    "end": "2892369"
  },
  {
    "text": "components web components are coming in the future they're still changing a lot but the idea of you know an ember view",
    "start": "2892369",
    "end": "2898790"
  },
  {
    "text": "just being a subclass of HTML and it is really exciting to me so I'll close by saying yet again there's never been a",
    "start": "2898790",
    "end": "2905750"
  },
  {
    "text": "better time to build to be a web developer we can see things like high fidelity you know unreal just",
    "start": "2905750",
    "end": "2912340"
  },
  {
    "text": "announced with Mozilla that their Unreal Engine is coming to JavaScript through a fmjs which is really awesome there are",
    "start": "2912340",
    "end": "2919030"
  },
  {
    "text": "really great things coming down the pike embers that ember gives you the tools to build applications that leverage all",
    "start": "2919030",
    "end": "2924340"
  },
  {
    "text": "these things that thinks about the future but we don't want to forget about the feature that made the web possible",
    "start": "2924340",
    "end": "2930190"
  },
  {
    "text": "and exciting and awesome in the first place which is the humble URL thank you very much",
    "start": "2930190",
    "end": "2936450"
  }
]