[
  {
    "text": "thank you all for coming here my name is selina i'm developer advocate for growl vm i'm happy to see you here certainly i",
    "start": "4560",
    "end": "10639"
  },
  {
    "text": "didn't expect this session to make it to the list of top most anticipated talks today but i'm",
    "start": "10639",
    "end": "15839"
  },
  {
    "text": "happy that you showed up so in this session we'll talk about some of the opportunities to optimize your",
    "start": "15839",
    "end": "20880"
  },
  {
    "text": "application performance and how you can use growl vm to achieve that",
    "start": "20880",
    "end": "27039"
  },
  {
    "text": "so why grow vm why are we talking about in this session and what exactly can it do for you so growl vm is a universal virtual",
    "start": "27039",
    "end": "33840"
  },
  {
    "text": "machine universal because it can run a bunch of different languages and also has this mission",
    "start": "33840",
    "end": "39200"
  },
  {
    "text": "to run programs written in different languages really fast and in fact it's quite a big and complex",
    "start": "39200",
    "end": "45039"
  },
  {
    "text": "project and there are many things that you can do with it so first thing is you can have high",
    "start": "45039",
    "end": "50160"
  },
  {
    "text": "performance for abstractions of any language and we think this is important because some of the languages out there do not",
    "start": "50160",
    "end": "56640"
  },
  {
    "text": "really have this high performance so we would like to give it to them another thing here is that sometimes",
    "start": "56640",
    "end": "62960"
  },
  {
    "text": "performance is considered to be a trade-off with abstractions meaning if you write good abstracted",
    "start": "62960",
    "end": "68799"
  },
  {
    "text": "code some people think that it will not be really fast or if you want it to be fast you need to write it in this performance of our",
    "start": "68799",
    "end": "75600"
  },
  {
    "text": "manner uh well we think that it's not necessarily has to be the case and you can give this",
    "start": "75600",
    "end": "80960"
  },
  {
    "text": "optimizations to your underlying platform a vm in our case and we can do this automatically for you another thing that",
    "start": "80960",
    "end": "88080"
  },
  {
    "text": "growl vm can do for you is introduce this new operation mode for java and jvm applications",
    "start": "88080",
    "end": "94000"
  },
  {
    "text": "in which you can compile them ahead of time into native binaries so they can start really fast and don't",
    "start": "94000",
    "end": "99600"
  },
  {
    "text": "need that much memory as comparing to traditional setup so these two things we'll be talking",
    "start": "99600",
    "end": "104880"
  },
  {
    "text": "about most of the session today one more thing is since there are multiple languages",
    "start": "104880",
    "end": "110479"
  },
  {
    "text": "already implemented on top of galvian platform you can use different languages in your application",
    "start": "110479",
    "end": "116240"
  },
  {
    "text": "or in case you have your own custom in-house language you can also implement it on top of bralvian platform",
    "start": "116240",
    "end": "122719"
  },
  {
    "text": "and get access to the common tooling and optimizations and interrupt with other languages and",
    "start": "122719",
    "end": "128160"
  },
  {
    "text": "the right the last one here is that it can be easily embeddable in various environments in this way",
    "start": "128160",
    "end": "133599"
  },
  {
    "text": "bring these languages and features to those environments so this is a high-level overview of what",
    "start": "133599",
    "end": "138959"
  },
  {
    "text": "role vm can offer for you and you see that there are a lot of things happening here so on top here there are languages which",
    "start": "138959",
    "end": "145599"
  },
  {
    "text": "you can use in grow vm and below are the platforms in which you can use it so as you can see you can run the normal",
    "start": "145599",
    "end": "152640"
  },
  {
    "text": "java jvm applications on top of crawl vm that will be in the context of open jdk here",
    "start": "152640",
    "end": "158080"
  },
  {
    "text": "so we are talking about normal jit way of running your applications no any",
    "start": "158080",
    "end": "164480"
  },
  {
    "text": "migration efforts needed from your site it just works out of the box one more thing here is javascript so we",
    "start": "164480",
    "end": "170319"
  },
  {
    "text": "have also a javascript engine it's called crawl gs so you can run your javascript code fast",
    "start": "170319",
    "end": "176319"
  },
  {
    "text": "and this engine is also highly compatible with the ecmascript standards the same goes for ruby and also if you",
    "start": "176319",
    "end": "183360"
  },
  {
    "text": "are interested in things like statistics and data processing machine learning you might be interested",
    "start": "183360",
    "end": "188400"
  },
  {
    "text": "in languages like r or python for that the last one here is that we have an lvm",
    "start": "188400",
    "end": "193760"
  },
  {
    "text": "runtime so you can also run languages like cc plus on top of growella vm",
    "start": "193760",
    "end": "198879"
  },
  {
    "text": "so talking about platforms i already mentioned open jdk the same goes for node.js so you can run your",
    "start": "198879",
    "end": "204480"
  },
  {
    "text": "unmodified node.js apps on growl vm a quite interesting case is that you can use raw vm in a database",
    "start": "204480",
    "end": "210959"
  },
  {
    "text": "and this way have access to those languages and features right in your database and the last one is a standalone mode",
    "start": "210959",
    "end": "216480"
  },
  {
    "text": "where growl vm is the only platform and runtime you need to run your application so that is this",
    "start": "216480",
    "end": "222239"
  },
  {
    "text": "ahead of time compilation native image mode so as you see there are multiple",
    "start": "222239",
    "end": "227760"
  },
  {
    "text": "languages and an interesting fact about it is that recently we had this poll on twitter and we asked people what is the most",
    "start": "227760",
    "end": "234560"
  },
  {
    "text": "kind of interesting and exciting role vm language for you so how you how do you think",
    "start": "234560",
    "end": "240159"
  },
  {
    "text": "which one of those languages won that you can just shout out versions i mean",
    "start": "240159",
    "end": "245599"
  },
  {
    "text": "they're all here python why python it's just very popular",
    "start": "245599",
    "end": "251280"
  },
  {
    "text": "okay yeah so yeah technically we did not include java and gvm land pages because first of",
    "start": "251280",
    "end": "256560"
  },
  {
    "text": "all it wouldn't be a fair competition right if you included those and second is because on twitter you have very limited list of options for voting it's",
    "start": "256560",
    "end": "263280"
  },
  {
    "text": "only four so in fact this gentleman over here is right my personal bet was on javascript",
    "start": "263280",
    "end": "269600"
  },
  {
    "text": "somehow i started following but in fact python won so it's not that yeah it's just an interesting",
    "start": "269600",
    "end": "275120"
  },
  {
    "text": "case it's not that it's the main language or the only language that you can run on top of raw vm but it's a nice and interesting feedback",
    "start": "275120",
    "end": "281360"
  },
  {
    "text": "from our community about the popularity of those other languages on top of our platform",
    "start": "281360",
    "end": "287120"
  },
  {
    "text": "so production ready uh that was a huge milestone for us it was may last year because the growl vm originated in our r",
    "start": "287120",
    "end": "294240"
  },
  {
    "text": "d department oracle labs so it was a massive scientific research project and right now it's also production ready",
    "start": "294240",
    "end": "301039"
  },
  {
    "text": "so you can safely use it in your production environment and also it comes in two editions so",
    "start": "301039",
    "end": "306639"
  },
  {
    "text": "there is community edition which is open source free to use development is happening on github you can track it",
    "start": "306639",
    "end": "312400"
  },
  {
    "text": "see it's under the hood and also we have an enterprise edition which would require for you to have a",
    "start": "312400",
    "end": "317840"
  },
  {
    "text": "commercial license to run it in production but it's also free for things like evaluation purposes doing proof",
    "start": "317840",
    "end": "324000"
  },
  {
    "text": "of concept these kind of things and you can get both of them from growlview.org that's the main entry point for all the",
    "start": "324000",
    "end": "330240"
  },
  {
    "text": "things scroll vm related and since i mentioned already this quite",
    "start": "330240",
    "end": "335919"
  },
  {
    "text": "massive project i wanted also to share this kind of infographic with you so these are different",
    "start": "335919",
    "end": "341360"
  },
  {
    "text": "repositories that contribute to this big main repository so you see that we have kind of core repository which has",
    "start": "341360",
    "end": "348080"
  },
  {
    "text": "compiler and language implementation api things like that also we have language implementations and",
    "start": "348080",
    "end": "353759"
  },
  {
    "text": "tools and they all contribute to this massive repository so talking about performance i think",
    "start": "353759",
    "end": "360960"
  },
  {
    "text": "that you heard enough about it on this track i want to also offer one more one more way to look at it",
    "start": "360960",
    "end": "367199"
  },
  {
    "text": "so from compiler perspective you might be uh looking at all kind of different things one thing",
    "start": "367199",
    "end": "372400"
  },
  {
    "text": "perhaps you always think about when you optimize for performance is big throughput right so that's number one magic most of the",
    "start": "372400",
    "end": "379120"
  },
  {
    "text": "people care about or also optimizing for uh reducing max latency",
    "start": "379120",
    "end": "384160"
  },
  {
    "text": "one more thing that you can be looking at is actually startup speed because this may be important in your",
    "start": "384160",
    "end": "389600"
  },
  {
    "text": "like cloud and microservice environment or for example when you want to scale this may be something you will be most",
    "start": "389600",
    "end": "395600"
  },
  {
    "text": "interested in another thing and it was also mentioned at this track today so you can be also",
    "start": "395600",
    "end": "401199"
  },
  {
    "text": "optimizing for reducing memory usage because specifically in cloud environments it might be something",
    "start": "401199",
    "end": "406960"
  },
  {
    "text": "your cloud vendor will be charging you based on and the last one well it's less i would",
    "start": "406960",
    "end": "413759"
  },
  {
    "text": "say priority for server side deployments but also in some cases in some devices you might be looking at",
    "start": "413759",
    "end": "420080"
  },
  {
    "text": "small packaging size of your application and we'll compare later on this presentation how",
    "start": "420080",
    "end": "425759"
  },
  {
    "text": "different mode of operation of global vm can help you optimize for either of those metrics",
    "start": "425759",
    "end": "433680"
  },
  {
    "text": "so talking about performance and what you can do for your java application with growl vm",
    "start": "433759",
    "end": "438960"
  },
  {
    "text": "this is the number one slide and decision that you need to make if you're considering migrating to grow vm",
    "start": "438960",
    "end": "444880"
  },
  {
    "text": "because raw vm can work with your java application in two modes it can do jit meaning dynamic",
    "start": "444880",
    "end": "451440"
  },
  {
    "text": "compilations like you normally do with your jvm or it can compile a java application into a native",
    "start": "451440",
    "end": "456800"
  },
  {
    "text": "image and this way they will have very different performance uh benefits and trade-offs so to compare",
    "start": "456800",
    "end": "463120"
  },
  {
    "text": "those two closer uh let's take a look at what the vm native image",
    "start": "463120",
    "end": "468400"
  },
  {
    "text": "actually is so it's your java program that has been compiled ahead of time into a native executable",
    "start": "468400",
    "end": "474400"
  },
  {
    "text": "and since it no longer needs a runtime java runtime to run it can have this startup and memory",
    "start": "474400",
    "end": "481039"
  },
  {
    "text": "benefits and also interesting thing about it is it is it is compiled using the same compiler that is working in",
    "start": "481039",
    "end": "487599"
  },
  {
    "text": "jet mode so with this compiler you can do really both things so how do they compare and why they are",
    "start": "487599",
    "end": "494240"
  },
  {
    "text": "so different in terms of performance so when you run your java application in",
    "start": "494240",
    "end": "500080"
  },
  {
    "text": "jet mode meaning dynamic compilation there is quite a lot of quite a lot of things happening so as",
    "start": "500080",
    "end": "506080"
  },
  {
    "text": "you see first your code is loaded then it's verified interpreted profile compiled and that is quite a lot of operations",
    "start": "506080",
    "end": "513200"
  },
  {
    "text": "and also they're quite expensive for your machine to run those with scroll vm native image things are",
    "start": "513200",
    "end": "518240"
  },
  {
    "text": "slightly different so you can think of it as of uh working with your application in two phases so",
    "start": "518240",
    "end": "525200"
  },
  {
    "text": "first you have the build phase where you build your native image and then you can run it when it's ready",
    "start": "525200",
    "end": "530720"
  },
  {
    "text": "and the idea here is to move all the heavy lifting all the expensive operations to image build time",
    "start": "530720",
    "end": "536399"
  },
  {
    "text": "so you can do it once do all those expensive operations and afterwards you can start really fast",
    "start": "536399",
    "end": "542160"
  },
  {
    "text": "every single time you actually run your application so how it works inside and how it is actually possible",
    "start": "542160",
    "end": "548080"
  },
  {
    "text": "to compile java ahead of time so what happens is that we take your application and when you run our native image",
    "start": "548080",
    "end": "554640"
  },
  {
    "text": "command we start analyzing your application starting from its main entry point and we look for all the code that is",
    "start": "554640",
    "end": "560839"
  },
  {
    "text": "reachable and we also run initialization so we can perform heap snapshotting so you can",
    "start": "560839",
    "end": "566560"
  },
  {
    "text": "start with a proper pre-populated version of your heap and we repeat those two operations until",
    "start": "566560",
    "end": "572320"
  },
  {
    "text": "we see that the fixed point is reached so we see all the code that needs to end up in your application for it",
    "start": "572320",
    "end": "577680"
  },
  {
    "text": "to be possible to run and then when we have it we optimize it and we compile it into",
    "start": "577680",
    "end": "582959"
  },
  {
    "text": "this native executable so how does it affect startup",
    "start": "582959",
    "end": "589680"
  },
  {
    "text": "so as you've discussed when you look at what happens when you first run the application in jet mode there is quite a",
    "start": "589680",
    "end": "594800"
  },
  {
    "text": "lot of those operations happening and they need to happen so the application can run of course",
    "start": "594800",
    "end": "600880"
  },
  {
    "text": "here is another trade-off then once you've done all of that your application can really go really",
    "start": "600880",
    "end": "606000"
  },
  {
    "text": "fast for quite a long time but if if for your project startup is more important",
    "start": "606000",
    "end": "611519"
  },
  {
    "text": "then all these warm-up operations might not be that important and that relevant for you",
    "start": "611519",
    "end": "617360"
  },
  {
    "text": "on contrary in iot mode what happens when you actually start the application is just your executable needs to start",
    "start": "617360",
    "end": "625120"
  },
  {
    "text": "and then you can immediately run this code that was already optimized at the image build time",
    "start": "625120",
    "end": "630720"
  },
  {
    "text": "the same goes for memory so if you compare what happens to memory and how memory much memory you need in both of",
    "start": "630720",
    "end": "636160"
  },
  {
    "text": "those modes you see that in jet mode you need to keep around a lot of memory",
    "start": "636160",
    "end": "641519"
  },
  {
    "text": "for all those structures so for the gvm executable itself for application data for metadata stuff",
    "start": "641519",
    "end": "647920"
  },
  {
    "text": "once again with iot you only need to load your application into memory and keep around",
    "start": "647920",
    "end": "653519"
  },
  {
    "text": "application data but that's basically where this time and memory differences are coming from",
    "start": "653519",
    "end": "660000"
  },
  {
    "text": "so if you go back to our performance metrics and now take a look at about at how those two compare you will see",
    "start": "660000",
    "end": "666160"
  },
  {
    "text": "that jit and i guess all of you know it yeah so jit system meaning running on hotspot vm",
    "start": "666160",
    "end": "671920"
  },
  {
    "text": "or graph vm inject mode it's really good for optimizing for those two things iot on contrary is",
    "start": "671920",
    "end": "678160"
  },
  {
    "text": "quite different and you see that it's kind of a trade-off and based on your preferences and your",
    "start": "678160",
    "end": "683760"
  },
  {
    "text": "priorities you can really choose for which of those you want to optimize so based on your project goals based on",
    "start": "683760",
    "end": "691120"
  },
  {
    "text": "what things matter most to you you can really optimize for either of those so let's see how it works",
    "start": "691120",
    "end": "699360"
  },
  {
    "text": "i have a demo application here and not this one this one so",
    "start": "699360",
    "end": "705680"
  },
  {
    "text": "i'm running all vm so first i will run it in jet mode",
    "start": "705680",
    "end": "711600"
  },
  {
    "text": "okay so it's not really fair because i was preparing for my session and i run it a few times so it's",
    "start": "712880",
    "end": "718560"
  },
  {
    "text": "a bit warmed up but when it's really cold start i think this time it was around three",
    "start": "718560",
    "end": "725040"
  },
  {
    "text": "seconds but usually it's about two to something seconds it's jit mode",
    "start": "725040",
    "end": "730399"
  },
  {
    "text": "so it's up and running let's see what it actually does",
    "start": "730399",
    "end": "734879"
  },
  {
    "text": "so it basically returns me a random conference name so that's inject mode let me kill it",
    "start": "737040",
    "end": "746000"
  },
  {
    "text": "and just make sure that it's actually dead because i want to reuse it yeah so i actually have it compiled",
    "start": "746000",
    "end": "754160"
  },
  {
    "text": "already too so all these files those are my compiled native executables",
    "start": "754160",
    "end": "760800"
  },
  {
    "text": "and when i run it like this you see well this one is uh warmed up a",
    "start": "760800",
    "end": "768320"
  },
  {
    "text": "bit too once again i tried already two but the cold start was about 100 something milliseconds so comparing to",
    "start": "768320",
    "end": "774800"
  },
  {
    "text": "two or three seconds that much faster let's just double check that it does the same thing",
    "start": "774800",
    "end": "781839"
  },
  {
    "text": "yeah you see that functionally they are equal but there is this significant startup time difference",
    "start": "782800",
    "end": "788720"
  },
  {
    "text": "so that's we are talking about time to just start your application but what if you wanted to kind of go",
    "start": "788720",
    "end": "795760"
  },
  {
    "text": "deeper and understand more about the startup behavior of your application so i can also measure how much resources",
    "start": "795760",
    "end": "803120"
  },
  {
    "text": "it needs to start in every scenario so for that i have the script",
    "start": "803120",
    "end": "812399"
  },
  {
    "text": "so in jet mode you see that it started spend some time to do it and in terms of cpu usage it used this",
    "start": "812480",
    "end": "819120"
  },
  {
    "text": "number of cpu time if i apply the same measurement",
    "start": "819120",
    "end": "824399"
  },
  {
    "text": "technique to my compiled native image hopefully it will be much faster and wouldn't need that much",
    "start": "824399",
    "end": "831600"
  },
  {
    "text": "resources yeah it is so you see that it also doesn't need that much cpu",
    "start": "831600",
    "end": "837279"
  },
  {
    "text": "because we already uh optimized everything at the image build time but that's cpu so i also",
    "start": "837279",
    "end": "845040"
  },
  {
    "text": "talked about memory so how can we compare memory usage for both of this i can use for that a tool called ps",
    "start": "845040",
    "end": "853040"
  },
  {
    "text": "record and it will observe and will output for me uh cpu and memory usage and it will",
    "start": "853040",
    "end": "860079"
  },
  {
    "text": "uh send through i will send three requests to this application to have data and see",
    "start": "860079",
    "end": "866160"
  },
  {
    "text": "how it is performing in voice modes so you see that we got our server up and running we have sent those requests",
    "start": "866160",
    "end": "873279"
  },
  {
    "text": "and let's see the image okay so what's the time um looks like",
    "start": "873279",
    "end": "880639"
  },
  {
    "text": "that's it no yes 31 seconds",
    "start": "880639",
    "end": "887760"
  },
  {
    "text": "yeah should be it uh so you see here so that's a jade mod",
    "start": "890000",
    "end": "895440"
  },
  {
    "text": "right and in red this is cpu usage and horizontal blue line that is memory usage so you",
    "start": "895440",
    "end": "900800"
  },
  {
    "text": "see that up until one and half second there is quite a lot of work happening so we are starting our",
    "start": "900800",
    "end": "906880"
  },
  {
    "text": "system we are loading the code optimizing the chord doing all of that heavy lifting so let me just rename it so we can use",
    "start": "906880",
    "end": "913920"
  },
  {
    "text": "the same thing and now we will run it in iot mode and see",
    "start": "913920",
    "end": "919199"
  },
  {
    "text": "how different those metrics will be",
    "start": "919199",
    "end": "927680"
  },
  {
    "text": "yes all right let's run it once again",
    "start": "927680",
    "end": "941839"
  },
  {
    "text": "so doing the same thing getting up and running serving those few requests and the image should be",
    "start": "942079",
    "end": "947920"
  },
  {
    "text": "ready by now okay so if you look at both of those we",
    "start": "947920",
    "end": "955199"
  },
  {
    "text": "see that here on the right you see that this chart is much cleaner because there isn't that much work",
    "start": "955199",
    "end": "960959"
  },
  {
    "text": "happening anymore and also if you take closer look at this one on the left you may notice that",
    "start": "960959",
    "end": "966720"
  },
  {
    "text": "those operations in the very beginning they are quite expensive so we are using a lot of resources but afterwards uh those smaller spikes",
    "start": "966720",
    "end": "974320"
  },
  {
    "text": "these are actually valuable operations meaning serving those requests so this overhead work comparing to the",
    "start": "974320",
    "end": "981440"
  },
  {
    "text": "actual valuable work is so much bigger and needs much more resources so when you compare those two you see",
    "start": "981440",
    "end": "987680"
  },
  {
    "text": "that for a system that needs to you know to get up and running from time to time to serve some requests",
    "start": "987680",
    "end": "992959"
  },
  {
    "text": "and then go back down you see that on the right the iot mode might be much more suitable so that was",
    "start": "992959",
    "end": "1001759"
  },
  {
    "text": "startup and memory yeah and also i wanted to show you this",
    "start": "1001759",
    "end": "1007600"
  },
  {
    "text": "infographic with a few micro service frameworks and how they compare in jit and iot mode",
    "start": "1007600",
    "end": "1013199"
  },
  {
    "text": "i just encourage you to look at this as of comparison of different operation modes not comparing the",
    "start": "1013199",
    "end": "1018480"
  },
  {
    "text": "frameworks to one another because they have different you know design and architecture and stuff so in this",
    "start": "1018480",
    "end": "1024400"
  },
  {
    "text": "light green one that's that is grow vm native image mode and orange and red these are traditional",
    "start": "1024400",
    "end": "1030720"
  },
  {
    "text": "regular jdks so you see that in terms of startup time and basically the same is the same is also true for memory usage",
    "start": "1030720",
    "end": "1038079"
  },
  {
    "text": "with scrolling native image mode you can really reduce this time and memory requirements for get your",
    "start": "1038079",
    "end": "1043678"
  },
  {
    "text": "application up and running so peak performance what about it because we all know and love java for",
    "start": "1043679",
    "end": "1050640"
  },
  {
    "text": "peak performance right so how those two compare in terms of peak performance so in terms of peak performance jet",
    "start": "1050640",
    "end": "1057520"
  },
  {
    "text": "systems really have this benefit that since they have profile information they can really adapt to",
    "start": "1057520",
    "end": "1064400"
  },
  {
    "text": "your application behavior and adapt as you go and also they can make those very aggressive and optimistic",
    "start": "1064400",
    "end": "1071280"
  },
  {
    "text": "assumptions about your application behavior because if those are no longer true they can de-optimize and go back but",
    "start": "1071280",
    "end": "1077280"
  },
  {
    "text": "other than that they can really optimize your code really well based on this information so in iot mode by default that",
    "start": "1077280",
    "end": "1083840"
  },
  {
    "text": "information is not available because we are doing things in advance meaning we don't have that information yet so what we can do for",
    "start": "1083840",
    "end": "1091360"
  },
  {
    "text": "iot mode to get it closer to this good big performance is that first of all we do handle all",
    "start": "1091360",
    "end": "1097760"
  },
  {
    "text": "the cases in machine code because we by default cannot predict what will happen",
    "start": "1097760",
    "end": "1104000"
  },
  {
    "text": "at runtime but there are some things that can help so for example if you're looking at",
    "start": "1104000",
    "end": "1109200"
  },
  {
    "text": "predictable performance and i actually had one of those conversation here this conference so there are some cases in which you",
    "start": "1109200",
    "end": "1115280"
  },
  {
    "text": "want to start with fairly good performance and keep at that level so you're not interested in warming up you want to",
    "start": "1115280",
    "end": "1121600"
  },
  {
    "text": "start with good performance and you want to have kind of ability to predict performance so in this case crawling",
    "start": "1121600",
    "end": "1127760"
  },
  {
    "text": "native image can be really helpful for you and another thing that can be helpful is profile guided optimizations",
    "start": "1127760",
    "end": "1136320"
  },
  {
    "text": "so how does it work you can observe this profile this runtime information about",
    "start": "1136320",
    "end": "1142720"
  },
  {
    "text": "your application you can collect this profile information and if you give it to us at the image",
    "start": "1142720",
    "end": "1148000"
  },
  {
    "text": "build time we can actually build this image with this profile and information in mind in this way we can actually optimize for",
    "start": "1148000",
    "end": "1154720"
  },
  {
    "text": "those cases that were the most relevant for your application behavior and if we actually do that so on this",
    "start": "1154720",
    "end": "1161600"
  },
  {
    "text": "chart over here you see that in green that is jdka java hotspot vm",
    "start": "1161600",
    "end": "1167200"
  },
  {
    "text": "uh yellow one is called vm native image and the red one is global native image with those profile guide optimizations",
    "start": "1167200",
    "end": "1173919"
  },
  {
    "text": "uh available so you see that growl vm native image in both cases",
    "start": "1173919",
    "end": "1179679"
  },
  {
    "text": "starts with fairly high performance so sometimes in your case if you want to do something quickly that",
    "start": "1179679",
    "end": "1185440"
  },
  {
    "text": "may be enough for you but if you are really looking for big performance you might notice that",
    "start": "1185440",
    "end": "1190720"
  },
  {
    "text": "uh glorious native image with special solve the red line is really on pair with",
    "start": "1190720",
    "end": "1197840"
  },
  {
    "text": "a jdk hotspot vm of course it's slightly lower but in most cases that",
    "start": "1197840",
    "end": "1203600"
  },
  {
    "text": "would be a significant difference for you so you can get faster fast startup time",
    "start": "1203600",
    "end": "1208880"
  },
  {
    "text": "you can get really low memory consumption but you can also optimize for very good peak performance",
    "start": "1208880",
    "end": "1215039"
  },
  {
    "text": "so as we already talked currently this comparison jit versus aut is like this",
    "start": "1215039",
    "end": "1221360"
  },
  {
    "text": "but if you would like to be for crawling negative image like this so you can really get",
    "start": "1221360",
    "end": "1226400"
  },
  {
    "text": "all the performance metric to be on maximum and not really you know to have to decide on which one to focus",
    "start": "1226400",
    "end": "1233039"
  },
  {
    "text": "so that's currently something we work on and i also wanted to talk to you about a bit",
    "start": "1233039",
    "end": "1238080"
  },
  {
    "text": "how to get started with global native image for a project that you may be working on or about to start so",
    "start": "1238080",
    "end": "1243919"
  },
  {
    "text": "what's the best way to start with it there are a few helpful things to do so",
    "start": "1243919",
    "end": "1249120"
  },
  {
    "text": "first of all things like uh reflection and jni and so on can be uh more challenging with grow via",
    "start": "1249120",
    "end": "1256720"
  },
  {
    "text": "a native image because it's it is built under a closed world assumption meaning that in those cases when you for",
    "start": "1256720",
    "end": "1263280"
  },
  {
    "text": "example use those things you would need to provide a configuration file for us so we can know",
    "start": "1263280",
    "end": "1269039"
  },
  {
    "text": "that you want to access those things with your native image you can do this configuration file manually",
    "start": "1269039",
    "end": "1275200"
  },
  {
    "text": "and we have instruction for that but perhaps the easiest way is to use our tracing agent which can observe",
    "start": "1275200",
    "end": "1280799"
  },
  {
    "text": "your application behavior and output this information for you so you don't have to do it manually",
    "start": "1280799",
    "end": "1286559"
  },
  {
    "text": "another helpful thing which sometimes i get questions about so we also have maven plugin which you can use and you",
    "start": "1286559",
    "end": "1292960"
  },
  {
    "text": "can read about it also in this blog post and also fairly easy way to",
    "start": "1292960",
    "end": "1298400"
  },
  {
    "text": "get started with scrolling native image is to go with one of those frameworks there are multiple with them that work",
    "start": "1298400",
    "end": "1304080"
  },
  {
    "text": "with scroll vm native image and here is a quick guide to either of them",
    "start": "1304080",
    "end": "1309679"
  },
  {
    "text": "so you can do this you can go with micronaut and here is a guide for you to build your first application if that framework is working",
    "start": "1309679",
    "end": "1316240"
  },
  {
    "text": "for you another one you can do is halidon so once again you have a guide over here and also uh",
    "start": "1316240",
    "end": "1322960"
  },
  {
    "text": "my colleague peter is also in the room he's from halidon team so if you want if you have done specific questions you",
    "start": "1322960",
    "end": "1328960"
  },
  {
    "text": "can also talk to him so i guess i don't need to introduce you to quarkus because",
    "start": "1328960",
    "end": "1334320"
  },
  {
    "text": "i assume some of you have been in this nice session by signing today so he really helped me i can skip all",
    "start": "1334320",
    "end": "1340159"
  },
  {
    "text": "this part about the presentation and demo he already did it and one more thing uh which you might be",
    "start": "1340159",
    "end": "1345760"
  },
  {
    "text": "interested in and i get sometimes questions about this so spring wood applications as crawl vm",
    "start": "1345760",
    "end": "1351600"
  },
  {
    "text": "native image so this is a screenshot from a conference talk by their team members i",
    "start": "1351600",
    "end": "1358799"
  },
  {
    "text": "think it was last year so they presented a current work in progress uh on running a sprint boot applications",
    "start": "1358799",
    "end": "1366159"
  },
  {
    "text": "as crawl vm native image so you can google that video or maybe you know type that url",
    "start": "1366159",
    "end": "1373200"
  },
  {
    "text": "in the nutshell what you can do if you want to try running sprint boot applications at grow vm native images",
    "start": "1373200",
    "end": "1378320"
  },
  {
    "text": "you can go to their github repository there is this experimental project it's called spring roll native",
    "start": "1378320",
    "end": "1383760"
  },
  {
    "text": "you can get it build it it also comes with some sample applications that you already can build and run",
    "start": "1383760",
    "end": "1389919"
  },
  {
    "text": "really fast because already compiled as a native image i also wanted to show this demo for you",
    "start": "1389919",
    "end": "1396799"
  },
  {
    "text": "i hope it works so what i have here is one of those applications i've already started",
    "start": "1396799",
    "end": "1403200"
  },
  {
    "text": "already compiled it and it's ready to be run so if i run it",
    "start": "1403200",
    "end": "1409520"
  },
  {
    "text": "okay once again this is warmed up because i was i wanted to check my demos before i go on the stage but the very",
    "start": "1409840",
    "end": "1415039"
  },
  {
    "text": "first time i run it it should be somewhere here [Music] so yeah it was it started",
    "start": "1415039",
    "end": "1423240"
  },
  {
    "text": "0.6 seconds so that was your springboard application getting up and running ready to",
    "start": "1423240",
    "end": "1430080"
  },
  {
    "text": "do its work so something once again that you can check",
    "start": "1430080",
    "end": "1435440"
  },
  {
    "text": "so just to summarize this whole jit comparing to iot story when should you use either of",
    "start": "1436240",
    "end": "1443039"
  },
  {
    "text": "those of course that's your decision but what we typically recommend is that you can use crawl vm native image",
    "start": "1443039",
    "end": "1448480"
  },
  {
    "text": "if things like startup time and memory usage really are important for you that can be your number one option in",
    "start": "1448480",
    "end": "1454559"
  },
  {
    "text": "case you are looking at you know those more long running applications where you need to really optimize for peak",
    "start": "1454559",
    "end": "1460960"
  },
  {
    "text": "performance you can compare those two but it is likely that going with scroll vmg",
    "start": "1460960",
    "end": "1466400"
  },
  {
    "text": "might be a better choice for you because for those long running systems having this profiling information and",
    "start": "1466400",
    "end": "1473279"
  },
  {
    "text": "also dynamic compilation can be really beneficial and i also want to talk a bit about some",
    "start": "1473279",
    "end": "1479919"
  },
  {
    "text": "other languages so in fact there are many languages as we've already seen supported in raw vm platform and the",
    "start": "1479919",
    "end": "1486559"
  },
  {
    "text": "best part is that you can use them together but also there is this uh",
    "start": "1486559",
    "end": "1491840"
  },
  {
    "text": "summed value of all those languages running on one platform and it enables some interesting cases",
    "start": "1491840",
    "end": "1497679"
  },
  {
    "text": "so for example in raw vm you can use javascript you can run a javascript we have this",
    "start": "1497679",
    "end": "1503039"
  },
  {
    "text": "highly compatible highly tested javascript engine if you're interested in some particular",
    "start": "1503039",
    "end": "1508480"
  },
  {
    "text": "npm module or maybe rubygem or something you can test we have this compatibility tool and you can see",
    "start": "1508480",
    "end": "1515360"
  },
  {
    "text": "whether or not we support your library or module or whatever and see which version are",
    "start": "1515360",
    "end": "1521360"
  },
  {
    "text": "supported and interesting case which i really like about grow vm javascript engine",
    "start": "1521360",
    "end": "1527200"
  },
  {
    "text": "is it for example if you're doing uh things like server side rendering or javascript",
    "start": "1527200",
    "end": "1532480"
  },
  {
    "text": "so you might be interested in role gs because that's something you can use from your java application and that's an",
    "start": "1532480",
    "end": "1538480"
  },
  {
    "text": "example of where we ported this application to our javascript engine and you see",
    "start": "1538480",
    "end": "1543840"
  },
  {
    "text": "that comparing to naz horn you can really get this uh nice speed up also as you might know nashorn is",
    "start": "1543840",
    "end": "1550799"
  },
  {
    "text": "deprecated now so you might be looking for an option to like where to switch and where to",
    "start": "1550799",
    "end": "1556720"
  },
  {
    "text": "migrate to yeah actually we have a migration guide so if you are looking into migrating",
    "start": "1556720",
    "end": "1562559"
  },
  {
    "text": "from men's horn that can be helpful for you also talking about some more fantastic",
    "start": "1562559",
    "end": "1567600"
  },
  {
    "text": "cases so you can run even applications written like this on raw vms so this is",
    "start": "1567600",
    "end": "1572960"
  },
  {
    "text": "java code plus javascript code plus r and they are all working together to output this application and it's fairly",
    "start": "1572960",
    "end": "1580400"
  },
  {
    "text": "easy to work with different languages to grow vm you basically just need to create this context and tell us which language is",
    "start": "1580400",
    "end": "1586799"
  },
  {
    "text": "that and provide this code and that will be all working together",
    "start": "1586799",
    "end": "1592080"
  },
  {
    "text": "also if you are doing r you might be looking into coral vm too we have this high performance implementation it's",
    "start": "1592080",
    "end": "1598559"
  },
  {
    "text": "called fast r and python we have implementation of python three i just need to warn you that python is",
    "start": "1598559",
    "end": "1605600"
  },
  {
    "text": "more like early stage support language on top of crawl vm so not every single python application out there will",
    "start": "1605600",
    "end": "1612000"
  },
  {
    "text": "already run grow vm but if you are interested in python specifically you can try it and you can",
    "start": "1612000",
    "end": "1617440"
  },
  {
    "text": "also talk to us about your experience if you want to share it with us so once again talking about fantastic",
    "start": "1617440",
    "end": "1624000"
  },
  {
    "text": "stuff so we are working with this team they are called glue on so you can write your application in",
    "start": "1624000",
    "end": "1629760"
  },
  {
    "text": "java and run it on devices like ios and things like that and why this is interesting so the way i",
    "start": "1629760",
    "end": "1636480"
  },
  {
    "text": "understand it is that on ios you cannot really dynamically execute code so this uh static ahead of time",
    "start": "1636480",
    "end": "1642720"
  },
  {
    "text": "compilation that we offer really helps to bring your java applications on this kind of platforms",
    "start": "1642720",
    "end": "1649120"
  },
  {
    "text": "and if you are doing those polyglot applications you might look into visual vm as a tool to learn more about",
    "start": "1649120",
    "end": "1655919"
  },
  {
    "text": "them and we also have this collaboration with nvidia so if you're interested in using",
    "start": "1655919",
    "end": "1662080"
  },
  {
    "text": "gpus from your gall vm applications that is already possible too and i wanted to share a few",
    "start": "1662080",
    "end": "1668240"
  },
  {
    "text": "of stories because i've told so many things about different use cases of growl vm where you can use",
    "start": "1668240",
    "end": "1673360"
  },
  {
    "text": "it so i also wanted to share with you some stories of companies who already use it and how they actually apply it to their",
    "start": "1673360",
    "end": "1679600"
  },
  {
    "text": "production environments so you might know this guy his name is chris he is quite active he speaks in",
    "start": "1679600",
    "end": "1684960"
  },
  {
    "text": "many conferences so twitter is one of the first early adopters of growl vm they have been running in production for",
    "start": "1684960",
    "end": "1691679"
  },
  {
    "text": "about two and a half years now so if you're a twitter user you might have been already kind of",
    "start": "1691679",
    "end": "1697520"
  },
  {
    "text": "facing it without knowing it and since they have their uh workload written in scala",
    "start": "1697520",
    "end": "1703120"
  },
  {
    "text": "that is some something that we're growing vm compiler can be specifically useful since it it's",
    "start": "1703120",
    "end": "1708799"
  },
  {
    "text": "able to speed up scholar code really well but also java code too another interesting case which i also",
    "start": "1708799",
    "end": "1714960"
  },
  {
    "text": "really like is the dutch national police so they have this interesting project where they uh",
    "start": "1714960",
    "end": "1720880"
  },
  {
    "text": "do a lot of try to migrate their paperwork in the digital environment and for that they have their scholar application",
    "start": "1720880",
    "end": "1727679"
  },
  {
    "text": "but also they want to do some statistics and data processing for r because that's easier to do in r so they",
    "start": "1727679",
    "end": "1734399"
  },
  {
    "text": "are just using raw vm to run this scala plus r thing is one thing and also we are",
    "start": "1734399",
    "end": "1740720"
  },
  {
    "text": "using raw vm internally at oracle so oracle cloud infrastructure migrated some of their",
    "start": "1740720",
    "end": "1746320"
  },
  {
    "text": "services from java to grow vm and they reported this kind of peak performance and garbage collection",
    "start": "1746320",
    "end": "1752000"
  },
  {
    "text": "times improvements and yeah i already mentioned the nvidia case one more interesting and that's more of",
    "start": "1752000",
    "end": "1758880"
  },
  {
    "text": "recent stories so this company okay roo they also using role vm for this case of",
    "start": "1758880",
    "end": "1764559"
  },
  {
    "text": "server side rendering of javascript and they have interesting blog posts about it how they actually migrated",
    "start": "1764559",
    "end": "1769679"
  },
  {
    "text": "their system to grow vm javascript engine so project roadmap if you're",
    "start": "1769679",
    "end": "1774799"
  },
  {
    "text": "evaluating raw vm perhaps you would be interested in how project goes on and have different",
    "start": "1774799",
    "end": "1779840"
  },
  {
    "text": "versions appear and when do you need to prepare for newer version so for that we have this tool it's",
    "start": "1779840",
    "end": "1785120"
  },
  {
    "text": "called virtual roadmap so on our website you can check when the next version is going live and which kind of version is it",
    "start": "1785120",
    "end": "1792080"
  },
  {
    "text": "the lightest one is 20. and some of the recent updates so for",
    "start": "1792080",
    "end": "1797279"
  },
  {
    "text": "quite some time we only had jdk8 based builds but i also have jdk 11. so that is something you are doing you can",
    "start": "1797279",
    "end": "1803840"
  },
  {
    "text": "evaluate role vm too also we got this request that we people want to see gc improvements in",
    "start": "1803840",
    "end": "1810799"
  },
  {
    "text": "native image so right now as of the recent release a few weeks ago you can also try this low latin cgc incrawlium native image",
    "start": "1810799",
    "end": "1818159"
  },
  {
    "text": "which should also contribute to additional performance improvements and yeah in case you are an open source",
    "start": "1818159",
    "end": "1824799"
  },
  {
    "text": "contributor or if you are looking to become one we are happy to accept contributions so that's something interesting for you",
    "start": "1824799",
    "end": "1831360"
  },
  {
    "text": "here are a couple of ways in which you can contribute so just to summarize this session when",
    "start": "1831360",
    "end": "1836960"
  },
  {
    "text": "you can use raw vm and for what you can use it first of all is high performance uh if",
    "start": "1836960",
    "end": "1842000"
  },
  {
    "text": "you want to have your application running really fast you should evaluate grow a vm in jet mode if you want to have this",
    "start": "1842000",
    "end": "1848799"
  },
  {
    "text": "first startup and low memory footprint for your java applications please take a look vm native image may",
    "start": "1848799",
    "end": "1854720"
  },
  {
    "text": "be adjusted or one of those frameworks that's supported another one is that you if you want to have convenient language interrupt and",
    "start": "1854720",
    "end": "1862000"
  },
  {
    "text": "it can be you know not only crazy cases like doing many languages at one time but maybe you'd be interested in",
    "start": "1862000",
    "end": "1867919"
  },
  {
    "text": "having your application written in one language but you also may need this one library from another language",
    "start": "1867919",
    "end": "1874000"
  },
  {
    "text": "so that could be a good case to use crawler v and polyglot capabilities and the last one is it can be easily",
    "start": "1874000",
    "end": "1879440"
  },
  {
    "text": "embedded in various environments so you can use its languages and features in those environments",
    "start": "1879440",
    "end": "1885120"
  },
  {
    "text": "so how to get started you can download grow vm from this website growlvm.org and it",
    "start": "1885120",
    "end": "1890799"
  },
  {
    "text": "also comes with documentation and samples and some helpful common line flags if you're",
    "start": "1890799",
    "end": "1896640"
  },
  {
    "text": "looking into following the updates perhaps the best source will be twitter that's where we are the most active and if you want to get help we",
    "start": "1896640",
    "end": "1903679"
  },
  {
    "text": "have this mailing list but perhaps the fastest way is that we have this community slack with our community members and team",
    "start": "1903679",
    "end": "1909760"
  },
  {
    "text": "members so you can talk to us there that's basically all i had",
    "start": "1909760",
    "end": "1915039"
  },
  {
    "text": "i also will be around here today and tomorrow so if you would rather ask your question privately i'll be happy to answer and also i have",
    "start": "1915039",
    "end": "1922720"
  },
  {
    "text": "growl vm stickers so if you like stickers please come to me and i will be happy to share thank you",
    "start": "1922720",
    "end": "1935360"
  },
  {
    "text": "do you have questions yeah go",
    "start": "1935360",
    "end": "1941518"
  },
  {
    "text": "to ahead yeah i repeat your question for the recording so by the way non-prolovian native image is portable",
    "start": "1946960",
    "end": "1953840"
  },
  {
    "text": "so uh if you're asking about things like cross platform compilation currently",
    "start": "1953840",
    "end": "1959919"
  },
  {
    "text": "unfortunately it's not supported you can try boring with you know containerized environments it can be an",
    "start": "1959919",
    "end": "1965200"
  },
  {
    "text": "option but by default you would need to build on the targeted platform",
    "start": "1965200",
    "end": "1971440"
  },
  {
    "text": "yep yeah go ahead can you talk about the",
    "start": "1971440",
    "end": "1976720"
  },
  {
    "text": "differences between the community and the enterprise distribution",
    "start": "1976720",
    "end": "1981760"
  },
  {
    "text": "yeah uh so you're asking about differences uh between community edition and enterprise",
    "start": "1981760",
    "end": "1986799"
  },
  {
    "text": "edition uh well of course difference is licensed right so licensing policy is different but uh functionally component wise",
    "start": "1986799",
    "end": "1994960"
  },
  {
    "text": "they are equal so if you want to do polyglot or native or whatever you can do it with both editions",
    "start": "1994960",
    "end": "2001039"
  },
  {
    "text": "and also well first of all we want ce version to be fully you know functional but also we want to you always to have",
    "start": "2001039",
    "end": "2007519"
  },
  {
    "text": "this option that if you're using an enterprise edition and at some point you're not really happy about it you can always go back to community",
    "start": "2007519",
    "end": "2014159"
  },
  {
    "text": "edition so uh component wise they are equal but there are some additional optimizations",
    "start": "2014159",
    "end": "2020000"
  },
  {
    "text": "that we that allow you to get even more performance with enterprise edition so typically what we recommend is that",
    "start": "2020000",
    "end": "2026480"
  },
  {
    "text": "you get both of those you evaluate both of those and if you see because everyone's workload",
    "start": "2026480",
    "end": "2032000"
  },
  {
    "text": "everyone's application is different so if you see some like very distinct performance",
    "start": "2032000",
    "end": "2037039"
  },
  {
    "text": "improvements with enterprise edition and that is something you are willing to pay for then yeah you can go visit if you see",
    "start": "2037039",
    "end": "2043279"
  },
  {
    "text": "enough improvements with community edition once again we are happy to see that you can go with community edition",
    "start": "2043279",
    "end": "2049280"
  },
  {
    "text": "thank you okay i'm staying around so if you would rather ask a question privately please come to me and thank",
    "start": "2049280",
    "end": "2055760"
  },
  {
    "text": "you for your attention",
    "start": "2055760",
    "end": "2061839"
  }
]