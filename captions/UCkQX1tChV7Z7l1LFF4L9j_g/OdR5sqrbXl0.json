[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "session today so let's start with if I",
    "start": "5890",
    "end": "10990"
  },
  {
    "text": "can click yeah let's start with an idealized representation of networked",
    "start": "10990",
    "end": "17320"
  },
  {
    "text": "applications and at its most basic we have clients that communicate over the",
    "start": "17320",
    "end": "23109"
  },
  {
    "text": "network to a server with a request and then the server responding back to the",
    "start": "23109",
    "end": "28300"
  },
  {
    "text": "client over the network so in the middle here we have api's and that's what we've",
    "start": "28300",
    "end": "35020"
  },
  {
    "text": "been talking about all day today there are the contracts that establish how clients communicate with servers and",
    "start": "35020",
    "end": "41020"
  },
  {
    "text": "their this boundary that creates the standards for that communication however",
    "start": "41020",
    "end": "46149"
  },
  {
    "text": "I'm sure most of you have experience with architectures that don't look like this they probably look you know a",
    "start": "46149",
    "end": "51609"
  },
  {
    "text": "little bit closer to to that or you know maybe maybe an even nastier or you know",
    "start": "51609",
    "end": "57730"
  },
  {
    "text": "in a particularly bad day when you're on call probably looks like that",
    "start": "57730",
    "end": "62879"
  },
  {
    "text": "but my name is Jose Nino and I am an infrastructure engineer at lift where",
    "start": "62879",
    "end": "68470"
  },
  {
    "text": "I've worked for the past four years building systems that take this reality and try to make them feel more like this",
    "start": "68470",
    "end": "76030"
  },
  {
    "text": "idealized version so for the first 3 years that I worked at lift I worked in",
    "start": "76030",
    "end": "82630"
  },
  {
    "text": "the server networking team and there we recognized that there were two dimensions to API management there was",
    "start": "82630",
    "end": "90220"
  },
  {
    "text": "the what data do we send to in Envy our api's and this is the shape of our API",
    "start": "90220",
    "end": "96009"
  },
  {
    "text": "and then there was how do we send that data and I'm going to call that the transport of our API so server side",
    "start": "96009",
    "end": "105479"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "after some evolution we standardized a long ideal and the delight the",
    "start": "105479",
    "end": "112590"
  },
  {
    "text": "technology that we use there is protobuf so whenever a new a new service pops up",
    "start": "112590",
    "end": "118750"
  },
  {
    "text": "at lift the product engineers need to define their models in protobuf and then",
    "start": "118750",
    "end": "123939"
  },
  {
    "text": "protobuf is able to we're able to compare both to generate both the client",
    "start": "123939",
    "end": "129310"
  },
  {
    "text": "and the server subs and here client I refer to you know another service in our",
    "start": "129310",
    "end": "134620"
  },
  {
    "text": "back-end infrastructure that's trying to communicate across the network now in the transport dimension my team",
    "start": "134620",
    "end": "142080"
  },
  {
    "text": "created envoy a little bit over five years ago and opensource said a little bit over three an envoy at its most",
    "start": "142080",
    "end": "149250"
  },
  {
    "text": "basic is a network proxy and it can be run standalone or as a Sai car and",
    "start": "149250",
    "end": "154770"
  },
  {
    "text": "importantly for our back-end infrastructure we standardize the transport of our site cars by using",
    "start": "154770",
    "end": "160380"
  },
  {
    "text": "envoy at every hop of the network so every service runs with envoy as a sidecar and then what this has resulted",
    "start": "160380",
    "end": "167250"
  },
  {
    "text": "for us is we have a common network substrate that all services used to communicate with one another",
    "start": "167250",
    "end": "174650"
  },
  {
    "text": "so together in the backend what we've produced here is an ecosystem of",
    "start": "174650",
    "end": "180030"
  },
  {
    "text": "strongly type api's that are guaranteed by our proto models and a common",
    "start": "180030",
    "end": "186390"
  },
  {
    "text": "universal network primitive guaranteed by envoy and you know this would have",
    "start": "186390",
    "end": "192990"
  },
  {
    "text": "been the end of my talk circle at the beginning of 2019 we felt pretty good about the state of our back end",
    "start": "192990",
    "end": "199320"
  },
  {
    "text": "obviously there's always more room for improvement but what we started thinking a group of us at the beginning of 2019",
    "start": "199320",
    "end": "206370"
  },
  {
    "text": "is that we had left the most important hop out of this ecosystem and that hub",
    "start": "206370",
    "end": "211560"
  },
  {
    "text": "is a mobile client because traditionally with treat our clients as independent",
    "start": "211560",
    "end": "216810"
  },
  {
    "text": "from the back-end infrastructure and we've built unique solutions for what we thought were unique problems so what we",
    "start": "216810",
    "end": "225630"
  },
  {
    "text": "identified here was a technology gap because in spite of all the work that we had done server-side to increase",
    "start": "225630",
    "end": "232280"
  },
  {
    "text": "consistency and reliability we we recognized that increasing reliability",
    "start": "232280",
    "end": "237870"
  },
  {
    "text": "to 99 percent on the server side is really meaningless if we leave out the",
    "start": "237870",
    "end": "242880"
  },
  {
    "text": "the mobile clients because they're the ones that are being used by our end users to interact with the platforms",
    "start": "242880",
    "end": "248790"
  },
  {
    "text": "that we build so we started thinking what do we want from our client api's",
    "start": "248790",
    "end": "256260"
  },
  {
    "text": "and really what we wanted were the same guarantees that we had given for the",
    "start": "256260",
    "end": "261450"
  },
  {
    "text": "server and most importantly when problems do occur we wanted the same tooling and observability in order to",
    "start": "261450",
    "end": "268169"
  },
  {
    "text": "identify them so in brief what we were what we were proposing is",
    "start": "268169",
    "end": "274320"
  },
  {
    "text": "that we don't need to treat the mobile clients any different from our back-end infrastructure we want the mobile",
    "start": "274320",
    "end": "280260"
  },
  {
    "text": "clients to be another node in the network and other part of this mesh so",
    "start": "280260",
    "end": "287640"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "this is going to be the focus of the rest of the talk hence the title of next generation api's with unbeli mobile and about a year ago",
    "start": "287640",
    "end": "296220"
  },
  {
    "text": "I formed a new team called the client networking team and there we started",
    "start": "296220",
    "end": "303420"
  },
  {
    "text": "evolving how client API is were defined in shape at lift and also we started",
    "start": "303420",
    "end": "308700"
  },
  {
    "text": "evolving how we how we transport them so today I'm going to take you a little bit",
    "start": "308700",
    "end": "313920"
  },
  {
    "text": "through that evolution of both the shape of the API and how that evolution culminated in Android mobile which is a",
    "start": "313920",
    "end": "320880"
  },
  {
    "text": "new networking library that takes envoy and brings it to the mobile clients all",
    "start": "320880",
    "end": "330090"
  },
  {
    "text": "right so let's start with the evolution of the shape of the API at lift so this",
    "start": "330090",
    "end": "337050"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "is the earliest workflow hmm no picture this is the earliest workflow that that",
    "start": "337050",
    "end": "344670"
  },
  {
    "text": "engineers use that live to defined their current API so they discover a new product feature that they wanted to have",
    "start": "344670",
    "end": "350640"
  },
  {
    "text": "wrote a textbook about it and then went and hand rode all the API calls both for",
    "start": "350640",
    "end": "356790"
  },
  {
    "text": "the client and for the server but we quickly realized that there were problems with this approach right",
    "start": "356790",
    "end": "362850"
  },
  {
    "start": "360000",
    "end": "360000"
  },
  {
    "text": "because for instance programming errors could lead to different fields in the in",
    "start": "362850",
    "end": "368670"
  },
  {
    "text": "the payloads where for example iOS might have a particular key but Android might",
    "start": "368670",
    "end": "374310"
  },
  {
    "text": "have you know a misspelled key and because this was freeform JSON that we",
    "start": "374310",
    "end": "380070"
  },
  {
    "text": "weren't sent we were sending over the wire the Jason would end up in the server and then you know the server would catch on",
    "start": "380070",
    "end": "386310"
  },
  {
    "text": "fire and then our server engineers would say don't don't worry about it you know we can we can fix this with",
    "start": "386310",
    "end": "392910"
  },
  {
    "text": "just a feature flag tagging your client but you know we recognize that this was",
    "start": "392910",
    "end": "399300"
  },
  {
    "text": "not an ideal situation we clearly had problems because we have no visibility",
    "start": "399300",
    "end": "404310"
  },
  {
    "text": "over problems with our page until they hit the server so a few of",
    "start": "404310",
    "end": "410970"
  },
  {
    "text": "our Android engineers took on on themselves to try and fix this problem and they introduced llamo schema into",
    "start": "410970",
    "end": "417360"
  },
  {
    "text": "our API definitions and what they tried to do with that was to have guarantees",
    "start": "417360",
    "end": "422669"
  },
  {
    "start": "418000",
    "end": "418000"
  },
  {
    "text": "about the fields that should go in in the payload but this had a large problem which was that this was only deployed to",
    "start": "422669",
    "end": "429449"
  },
  {
    "text": "our Android clients so we still had inconsistencies between our iOS and Android clients and really what this",
    "start": "429449",
    "end": "437160"
  },
  {
    "text": "meant was that there was no source of truth for our client api's there was no guarantee that both of our clients would",
    "start": "437160",
    "end": "444090"
  },
  {
    "text": "behave the same way so what we were shooting for here was consistency",
    "start": "444090",
    "end": "449720"
  },
  {
    "text": "between between our client API so we wanted a single source of truth that",
    "start": "449720",
    "end": "455010"
  },
  {
    "text": "determined that the shape of the API was going to be the same between the two clients and the server and really what",
    "start": "455010",
    "end": "463440"
  },
  {
    "text": "we wanted was to do the same thing that we had done for server internal api's we wanted to provide that consistency",
    "start": "463440",
    "end": "469470"
  },
  {
    "text": "guarantee so what we envisioned was a workflow that looked similar to the to",
    "start": "469470",
    "end": "478500"
  },
  {
    "text": "what this the internal API is looked like we wanted to go from techSpec to a commit in our ideal repo and then from",
    "start": "478500",
    "end": "485820"
  },
  {
    "text": "our ideal repo we wanted to trigger to trigger CCD to automatically generate",
    "start": "485820",
    "end": "492120"
  },
  {
    "text": "both the client and the server stubs we didn't want to stop just at the server",
    "start": "492120",
    "end": "497460"
  },
  {
    "text": "we wanted to do that also for the client so we used protocol again to solve this",
    "start": "497460",
    "end": "504900"
  },
  {
    "text": "problem and I want to stop and describe a little bit about why we why we chose product off well first paragraph is",
    "start": "504900",
    "end": "512700"
  },
  {
    "text": "strongly typed so we had run we had compiled time guarantees about what the runtime payload would be second protobuf",
    "start": "512700",
    "end": "521400"
  },
  {
    "text": "also gives us Jason dissertation and serialization this means that we had a path for migrating",
    "start": "521400",
    "end": "528420"
  },
  {
    "text": "the legacy api's that were in free form Jason into this new strongly typed api's",
    "start": "528420",
    "end": "534750"
  },
  {
    "text": "and lastly we were also using this server side so we were going to have",
    "start": "534750",
    "end": "539790"
  },
  {
    "text": "guarantee consistency guarantees not only between our two mobile clients but also between the mobile clients and the",
    "start": "539790",
    "end": "546630"
  },
  {
    "text": "server and we could also benefit from all the operational knowledge that we had already derived by working with",
    "start": "546630",
    "end": "552930"
  },
  {
    "text": "pearlberg on the server side for years so that's what we did for our public",
    "start": "552930",
    "end": "560640"
  },
  {
    "text": "client api's we made a pipeline so that when engineers wrote a commit into their",
    "start": "560640",
    "end": "567420"
  },
  {
    "text": "their proto extending the models that a particular public API had that would",
    "start": "567420",
    "end": "573060"
  },
  {
    "text": "trigger generators that then would create not only our server stubs but",
    "start": "573060",
    "end": "578520"
  },
  {
    "text": "also our client stubs and with the client stubs we went a little bit",
    "start": "578520",
    "end": "584220"
  },
  {
    "text": "further and pre compile those files into into modules based on the API package",
    "start": "584220",
    "end": "589740"
  },
  {
    "text": "that they belong to and we did this to reduce compilation times and also to better organize our API so that mobile",
    "start": "589740",
    "end": "596640"
  },
  {
    "text": "client mobile engineers could work with them easily alright so let's take a look",
    "start": "596640",
    "end": "603840"
  },
  {
    "text": "at what the code generators do once once they run and here I'm going to show you",
    "start": "603840",
    "end": "609180"
  },
  {
    "text": "Swift code but you can assume that the cuddling code for our Android clients looks basically the same so first we",
    "start": "609180",
    "end": "620400"
  },
  {
    "text": "generate the models for their requests and the responses and what this strongly-typed models",
    "start": "620400",
    "end": "625910"
  },
  {
    "text": "ensure is that we detect problems with the payload at compile time and not as a",
    "start": "625910",
    "end": "631560"
  },
  {
    "text": "fire in the server second we generate",
    "start": "631560",
    "end": "636630"
  },
  {
    "text": "API stubs that are consistent between iOS and Android and extremely",
    "start": "636630",
    "end": "641700"
  },
  {
    "text": "importantly we abstracted the implementation of the transport of SA P is in other words now that we're",
    "start": "641700",
    "end": "648960"
  },
  {
    "text": "migrating to this generator ap is my team as a platform team is able to go and change the underlying infrastructure",
    "start": "648960",
    "end": "655890"
  },
  {
    "text": "of this transport layer to bring new changes and this is a foresight that we",
    "start": "655890",
    "end": "661260"
  },
  {
    "text": "have going into the rest of the talk and lastly we also generate mocks for our",
    "start": "661260",
    "end": "668580"
  },
  {
    "text": "client API s and this marks conform to the same protocol the production code and what this does",
    "start": "668580",
    "end": "674070"
  },
  {
    "text": "is that it encourages our kind engineers to go and test all of our public api's",
    "start": "674070",
    "end": "679080"
  },
  {
    "text": "so this is another piece where we're trying to prevent runtime errors by",
    "start": "679080",
    "end": "684560"
  },
  {
    "text": "having prevention at CI time when we run jobs on our on our pull requests all",
    "start": "684560",
    "end": "696120"
  },
  {
    "text": "right so I've been describing some problems that we had and you know a solution that we reach - so what are some of the benefits that we got here",
    "start": "696120",
    "end": "702839"
  },
  {
    "text": "well we finally have the single source of truth between not only all of our",
    "start": "702839",
    "end": "709050"
  },
  {
    "text": "client API is between Android and iOS but also between the mobile clients and the server so now we have the fact that",
    "start": "709050",
    "end": "717000"
  },
  {
    "text": "engineers don't need to discuss or investigate discrepancies when we have incidents and this is because we have",
    "start": "717000",
    "end": "724440"
  },
  {
    "text": "created highly testable consistent strongly typed api's that can be checked",
    "start": "724440",
    "end": "730170"
  },
  {
    "text": "for errors at compile time rather than you know runtime problems on the wire and most importantly for the for the",
    "start": "730170",
    "end": "739100"
  },
  {
    "text": "evolution of Transport at lyft we have abstracted that implementation so again my team can go in and make",
    "start": "739100",
    "end": "747420"
  },
  {
    "text": "improvements underneath the hood without worrying of massive migrations with long tails and having to disrupt the",
    "start": "747420",
    "end": "754709"
  },
  {
    "text": "workflows of a lot of client engineers so by having this consistency on this",
    "start": "754709",
    "end": "760829"
  },
  {
    "text": "guarantee we could start as a platform team working on providing the other guarantees that we wanted to work on for",
    "start": "760829",
    "end": "767250"
  },
  {
    "text": "our client API so one of the things that",
    "start": "767250",
    "end": "772440"
  },
  {
    "text": "we did at first when we had this consistent platform is that we started optimizing the encoding of our api's",
    "start": "772440",
    "end": "778260"
  },
  {
    "text": "earlier today in the brief description of brief history of the api's we heard",
    "start": "778260",
    "end": "784709"
  },
  {
    "text": "about protobufs binary encoding and that's something that we use that lift",
    "start": "784709",
    "end": "790560"
  },
  {
    "text": "so remember that before we had clients that talked over freeform JSON to",
    "start": "790560",
    "end": "796110"
  },
  {
    "text": "services and then services responded with Jason well now that we had our",
    "start": "796110",
    "end": "801320"
  },
  {
    "start": "801000",
    "end": "801000"
  },
  {
    "text": "generated api's we could swap the encoding that we actually sent over the wire for",
    "start": "801320",
    "end": "807889"
  },
  {
    "text": "a more efficient format so what we did is we we changed from Jason to binary",
    "start": "807889",
    "end": "814670"
  },
  {
    "text": "encoding and importantly we did this without having kind engineers have to",
    "start": "814670",
    "end": "819679"
  },
  {
    "text": "worry about what was going on on the transport layer because now that we generated this api's we could actually",
    "start": "819679",
    "end": "825889"
  },
  {
    "text": "negotiate the content between client and server the client could send a protobuf",
    "start": "825889",
    "end": "831139"
  },
  {
    "text": "request and if the server did not understand that it could negotiate a JSON request instead so this allowed us",
    "start": "831139",
    "end": "837529"
  },
  {
    "text": "to decouple migrations of our clients and our servers understanding the the",
    "start": "837529",
    "end": "842839"
  },
  {
    "text": "wire encoding and what we saw were huge improvements here on average we saw",
    "start": "842839",
    "end": "850369"
  },
  {
    "text": "about 40 percent reduction in the payload sizes between in green our JSON",
    "start": "850369",
    "end": "856309"
  },
  {
    "text": "payloads and in blue our binary encoding payloads and what this means in turn is",
    "start": "856309",
    "end": "862429"
  },
  {
    "text": "that we saw a big improvement in in request success and also a big reduction",
    "start": "862429",
    "end": "869300"
  },
  {
    "text": "in request latency because mobile networks are particularly sensitive to that to the size of the payload so it",
    "start": "869300",
    "end": "875749"
  },
  {
    "text": "makes sense that if we've reduced the payload size then we got better performance out but most importantly",
    "start": "875749",
    "end": "883549"
  },
  {
    "text": "this change was transparent to our engineers this means that we didn't have",
    "start": "883549",
    "end": "890149"
  },
  {
    "text": "to run a migration as to after migration as we wanted to roll the improvements that we were working on now that we have",
    "start": "890149",
    "end": "896540"
  },
  {
    "text": "the platform again we can go as a platform team and improve things under the hood ok so let's take a step back",
    "start": "896540",
    "end": "905389"
  },
  {
    "text": "and see where we are in the journey that I set out to to describe so we achieve consistency across our mobile platforms",
    "start": "905389",
    "end": "912499"
  },
  {
    "text": "and with the server via this protocol of defiant automatically-generated api's and we started to improve performance a",
    "start": "912499",
    "end": "919369"
  },
  {
    "text": "little bit by experimenting with the wire format of of the payloads that we send over so by using this generated API",
    "start": "919369",
    "end": "927769"
  },
  {
    "text": "is like I've said again we had a platform to start executing more on these guarantees that we wanted we",
    "start": "927769",
    "end": "933679"
  },
  {
    "text": "wanted to provide so another thing that we wanted to do for instance is",
    "start": "933679",
    "end": "939420"
  },
  {
    "text": "protobuf allows us to define extensions on the fields and what this extensions",
    "start": "939420",
    "end": "945660"
  },
  {
    "text": "allow us to do is to create declarative api's instead of just having fields in the API we can start declaring what the",
    "start": "945660",
    "end": "952800"
  },
  {
    "text": "behavior of the API should be so for example if we have a polling API we might be able to define the polling",
    "start": "952800",
    "end": "959459"
  },
  {
    "text": "interval of that API in in the in the message that that is actually being",
    "start": "959459",
    "end": "964980"
  },
  {
    "text": "defined or you know we were already pretty satisfied with going from JSON to",
    "start": "964980",
    "end": "970290"
  },
  {
    "text": "binary encoding but if we want to go even further and reduce our payload sizes we might enable gzip compression",
    "start": "970290",
    "end": "976920"
  },
  {
    "text": "and with protobuf extensions we can do that declaratively but to enact this",
    "start": "976920",
    "end": "985949"
  },
  {
    "text": "behaviors we need to use the transport layer so in the server side we already have envoy for our internal API is",
    "start": "985949",
    "end": "993149"
  },
  {
    "text": "communicating between services and having this unified network primitive but in the mobile clients we had two",
    "start": "993149",
    "end": "1000439"
  },
  {
    "text": "different libraries both iOS and Android have have different libraries and historically we've used URL session for",
    "start": "1000439",
    "end": "1007459"
  },
  {
    "text": "iOS and HTTP for Android but the problem of having these three places where we",
    "start": "1007459",
    "end": "1014029"
  },
  {
    "text": "need to enact behavior is that it made it hard to focus our engineering efforts in solving these problems so we went",
    "start": "1014029",
    "end": "1022519"
  },
  {
    "text": "back to this guarantees and we asked ourselves how are we going to deliver this this guarantee is because to be",
    "start": "1022519",
    "end": "1028760"
  },
  {
    "text": "able to provide them we couldn't stop at just having a platform a unified platform for the shape of our API so we",
    "start": "1028760",
    "end": "1034938"
  },
  {
    "text": "needed an ecosystem on par with what we had with a server we needed to control both the shape and the transport of our",
    "start": "1034939",
    "end": "1041688"
  },
  {
    "text": "client api's in in other words we we had",
    "start": "1041689",
    "end": "1048048"
  },
  {
    "text": "to focus not only on the shape but also the transport so what we theorized here",
    "start": "1048049",
    "end": "1055250"
  },
  {
    "text": "is that if we went for from two different libraries in our mobile clients then we could more effectively",
    "start": "1055250",
    "end": "1060710"
  },
  {
    "text": "use our resources right we're going from three different implementations of our transport to two implementations the",
    "start": "1060710",
    "end": "1067399"
  },
  {
    "text": "mobile client and the server and we actually started thinking well",
    "start": "1067399",
    "end": "1072740"
  },
  {
    "text": "you know we could go one step further because given that we had worked to achieve true standardization in the",
    "start": "1072740",
    "end": "1079100"
  },
  {
    "text": "server side there was nothing that stopped us from believing that we could benefit from powering our clients with",
    "start": "1079100",
    "end": "1085010"
  },
  {
    "text": "the same transport layer envoy so in the beginning of 2019 my team started",
    "start": "1085010",
    "end": "1091270"
  },
  {
    "text": "investing in this new networking library called envoy mobile and we believe that",
    "start": "1091270",
    "end": "1097850"
  },
  {
    "text": "it has the potential to redefine transport in mobile client applications the same way that it did for back in",
    "start": "1097850",
    "end": "1103640"
  },
  {
    "text": "infrastructure so with this project and by extending the last mile of our",
    "start": "1103640",
    "end": "1109640"
  },
  {
    "start": "1106000",
    "end": "1106000"
  },
  {
    "text": "network topology to be part of this mesh what we achieve is true standardization of the network similar to what",
    "start": "1109640",
    "end": "1115790"
  },
  {
    "text": "kubernetes has done for container orchestration we want that we want envoy to do the same thing with for for the",
    "start": "1115790",
    "end": "1123500"
  },
  {
    "text": "network transport and we believe that we can do that with Android proxy on the server and with Android mobile on the",
    "start": "1123500",
    "end": "1129470"
  },
  {
    "text": "mobile clients and so why is this standardization so important well we",
    "start": "1129470",
    "end": "1135559"
  },
  {
    "text": "believe that for the same reasons that standardization was important in the server standardization can also bring as",
    "start": "1135559",
    "end": "1142460"
  },
  {
    "text": "the same benefits between the client and the server and these are just some of",
    "start": "1142460",
    "end": "1147710"
  },
  {
    "text": "the tenants that we use to think about this the first one being right once and deploy everywhere so this is what I've",
    "start": "1147710",
    "end": "1154220"
  },
  {
    "text": "been talking about instead of having to have your engineering resources be split amongst three implementations",
    "start": "1154220",
    "end": "1160370"
  },
  {
    "text": "iOS Android and the server by having this one unified transport we can focus",
    "start": "1160370",
    "end": "1166730"
  },
  {
    "text": "our resources in just that one platform second we can share common tooling for",
    "start": "1166730",
    "end": "1172940"
  },
  {
    "text": "common problems so for example with observability instead of having an",
    "start": "1172940",
    "end": "1178040"
  },
  {
    "text": "observability stack for your mobile clients and an observability stack for your server by having the same the same",
    "start": "1178040",
    "end": "1185600"
  },
  {
    "text": "omission of metrics from both places we can start utilizing the same",
    "start": "1185600",
    "end": "1190970"
  },
  {
    "text": "infrastructure that we use in both places and third by homogenizing the",
    "start": "1190970",
    "end": "1196490"
  },
  {
    "text": "network and the behavior guarantees that we that we provide we make life easier for system operators right instead of",
    "start": "1196490",
    "end": "1203840"
  },
  {
    "text": "having to reason about three different systems on how they interact with each other by having this universal",
    "start": "1203840",
    "end": "1210050"
  },
  {
    "text": "network primitive we actually reduce the cognitive load that they have",
    "start": "1210050",
    "end": "1215770"
  },
  {
    "text": "so all these three reasons sounded very compelling to us to go ahead and build",
    "start": "1216490",
    "end": "1222170"
  },
  {
    "text": "this new transport transport layer and so that's what we did for the past nine",
    "start": "1222170",
    "end": "1227180"
  },
  {
    "text": "months we've been working on Android mobile and in that time we've had three releases the first release it was",
    "start": "1227180",
    "end": "1234140"
  },
  {
    "text": "version 3.1 and that was just a proof-of-concept release we wanted to see can we actually compile envoy which",
    "start": "1234140",
    "end": "1241490"
  },
  {
    "text": "is meant to run on servers and run it in our mobile applications can we actually route requests through them but",
    "start": "1241490",
    "end": "1248870"
  },
  {
    "text": "importantly even when we release this initial proof-of-concept demo we actually went an open-source set because",
    "start": "1248870",
    "end": "1255140"
  },
  {
    "text": "we believe that this library has a lot of potential and the power of an open",
    "start": "1255140",
    "end": "1260240"
  },
  {
    "text": "source community has been clear in onboarding and we wanted to do the same for ongoing mobile with the 0.2 release",
    "start": "1260240",
    "end": "1267770"
  },
  {
    "text": "we started to lay the foundation of the library we actually started adapting how envoy operates to provide a platform so",
    "start": "1267770",
    "end": "1274820"
  },
  {
    "text": "that mobile applications could use it and then with the 0.3 release which we're going to cut in the next couple of",
    "start": "1274820",
    "end": "1281570"
  },
  {
    "text": "weeks we're actually going to call it the first production ready release not only because we've hardened the library",
    "start": "1281570",
    "end": "1288140"
  },
  {
    "text": "a lot but also because we've started running production experiments in the lift app ok so that bursts the question",
    "start": "1288140",
    "end": "1300380"
  },
  {
    "text": "of how do we take this thing that was the networked proxy envoy and turn it",
    "start": "1300380",
    "end": "1306680"
  },
  {
    "text": "into a mobile networking library envoy mobile and so let's take a deeper look",
    "start": "1306680",
    "end": "1312440"
  },
  {
    "text": "into the architecture of the library starting with its build system I know everyone loves to talk about build",
    "start": "1312440",
    "end": "1318890"
  },
  {
    "start": "1314000",
    "end": "1314000"
  },
  {
    "text": "system systems and what we used was basil for two particular reasons first it has actually pretty good",
    "start": "1318890",
    "end": "1325660"
  },
  {
    "text": "cross-platform support here we needed to compile five languages and target to",
    "start": "1325660",
    "end": "1332210"
  },
  {
    "text": "mobile mobile platforms over a lot of different chipset architectures and basil provided as a tool",
    "start": "1332210",
    "end": "1338950"
  },
  {
    "text": "that actually allowed us to do this and second and perhaps a more practical reason was that envoy was already built",
    "start": "1338950",
    "end": "1346270"
  },
  {
    "text": "with Basel so we can leverage a lot of the same solutions that Android had had",
    "start": "1346270",
    "end": "1351460"
  },
  {
    "text": "in envoy Mobile so this gives us a",
    "start": "1351460",
    "end": "1357240"
  },
  {
    "start": "1355000",
    "end": "1355000"
  },
  {
    "text": "high-level overview of the organization of the library and this organization",
    "start": "1357240",
    "end": "1363370"
  },
  {
    "text": "also leads us to understand how the library's architecture architected so on",
    "start": "1363370",
    "end": "1369040"
  },
  {
    "text": "the left in red you have the platform targets and these are targets that are",
    "start": "1369040",
    "end": "1374050"
  },
  {
    "text": "actually being compiled for iOS and for Android and it has the Swift and the",
    "start": "1374050",
    "end": "1379390"
  },
  {
    "text": "cutting code that actually allowed the mobile clients to interact with the Android mobile engine then in the middle",
    "start": "1379390",
    "end": "1386260"
  },
  {
    "text": "in blue we have the C bridging code and we decided to write this bridging code",
    "start": "1386260",
    "end": "1391810"
  },
  {
    "text": "in C because we see a lot of interrelated opportunities for angular",
    "start": "1391810",
    "end": "1397420"
  },
  {
    "text": "mobile to not only power mobile devices but perhaps other things that want to use Envoy as a library that's that's a",
    "start": "1397420",
    "end": "1404050"
  },
  {
    "text": "topic for another talk and then on the right we have the green targets and",
    "start": "1404050",
    "end": "1409930"
  },
  {
    "text": "these are the native C++ targets not only the C++ code that we have written",
    "start": "1409930",
    "end": "1415240"
  },
  {
    "text": "in Android mobile to make to adapt I'm going to become to become a platform in",
    "start": "1415240",
    "end": "1422080"
  },
  {
    "text": "mobile clients but also envoy itself because envoy remember is at the core of Android mobile so that gives us an",
    "start": "1422080",
    "end": "1431920"
  },
  {
    "text": "overview of one of the dimensions of the library how is it organized and how its architected",
    "start": "1431920",
    "end": "1437290"
  },
  {
    "text": "now across the another important dimension is how do we take this thing",
    "start": "1437290",
    "end": "1444220"
  },
  {
    "text": "that was supposed to be a multi-threaded process the Android proxy and turn it into a single threaded context in a",
    "start": "1444220",
    "end": "1451780"
  },
  {
    "text": "sandbox mobile application and with mobile in other words how do we turn something that was supposed to be a",
    "start": "1451780",
    "end": "1458590"
  },
  {
    "text": "proxy and turn it into an engine so that",
    "start": "1458590",
    "end": "1463660"
  },
  {
    "start": "1463000",
    "end": "1463000"
  },
  {
    "text": "concern that is to this dimension and that is the threading context that occur",
    "start": "1463660",
    "end": "1468700"
  },
  {
    "text": "in this mobile optic in this mobile library the first threading context up top is the application threats this are",
    "start": "1468700",
    "end": "1475750"
  },
  {
    "text": "the threats that interact with the engine and actually issue network requests in the middle we have the envoy",
    "start": "1475750",
    "end": "1482800"
  },
  {
    "text": "threat which actually runs the Envoy engine and then at the bottom we have the callback threats and these are",
    "start": "1482800",
    "end": "1489280"
  },
  {
    "text": "threats that the engine can use to dispatch control back to the application when responses come in the network and",
    "start": "1489280",
    "end": "1496140"
  },
  {
    "text": "if we overlay then the architecture",
    "start": "1496140",
    "end": "1501610"
  },
  {
    "text": "dimension on top of the threading dimension we get this matrix that's going to allow me to explain to you how",
    "start": "1501610",
    "end": "1507880"
  },
  {
    "text": "the engine actually works all right so",
    "start": "1507880",
    "end": "1513130"
  },
  {
    "text": "the first thing that happens in the application threads and in the platform layer is that we create the Envoy engine",
    "start": "1513130",
    "end": "1519429"
  },
  {
    "text": "object and this is the object that allows the application to run envoy and provide initial configuration from the",
    "start": "1519429",
    "end": "1527340"
  },
  {
    "text": "application envoy engine we start the Envoy main thread and unlike anvil",
    "start": "1527340",
    "end": "1532570"
  },
  {
    "text": "running the server and we mobile does all of its work in the main thread so this this was enabled by one of our",
    "start": "1532570",
    "end": "1541210"
  },
  {
    "start": "1538000",
    "end": "1538000"
  },
  {
    "text": "voice key design principles which is that most code in Envoy is actually single threaded code when anvil is",
    "start": "1541210",
    "end": "1548290"
  },
  {
    "text": "running in the server and voice main thread is mostly responsible for lifecycle updates and then when requests",
    "start": "1548290",
    "end": "1555370"
  },
  {
    "text": "come in they are actually attached to worker threads now if worker threads need to communicate to an voice main thread",
    "start": "1555370",
    "end": "1562360"
  },
  {
    "text": "envoy has an event dispatcher this is what allows us to cross threading",
    "start": "1562360",
    "end": "1567520"
  },
  {
    "text": "barriers both from the worker threads to the main thread and also from the main",
    "start": "1567520",
    "end": "1572530"
  },
  {
    "text": "thread over to worker threads the second important concept here is that when",
    "start": "1572530",
    "end": "1579520"
  },
  {
    "text": "Envoy is making HTTP requests it uses an HTTP manager and this HTTP manager is",
    "start": "1579520",
    "end": "1587020"
  },
  {
    "text": "the basis of on voice HTTP stack and we'll see how this becomes really important in a few in a few slides so",
    "start": "1587020",
    "end": "1594730"
  },
  {
    "text": "what we did in envoy Mobile is actually we hoisted these two constructs the",
    "start": "1594730",
    "end": "1599740"
  },
  {
    "start": "1595000",
    "end": "1595000"
  },
  {
    "text": "event dispatcher and the HTTP manager and we bolted them together into what we",
    "start": "1599740",
    "end": "1605410"
  },
  {
    "text": "call the anvil engine because the HTTP dispatcher allows us to cross this threading",
    "start": "1605410",
    "end": "1612409"
  },
  {
    "text": "context that I've been describing and then the HTTP the HTTP manager allows us",
    "start": "1612409",
    "end": "1619129"
  },
  {
    "text": "to actually make HB calls out into the network and so what I want to highlight",
    "start": "1619129",
    "end": "1625009"
  },
  {
    "text": "here is that we have lifted this constructs from Android itself so while",
    "start": "1625009",
    "end": "1630679"
  },
  {
    "text": "I'm going mobile is a newer library the the real underlying implementations of",
    "start": "1630679",
    "end": "1636470"
  },
  {
    "text": "all of our engine is the wealth other paths of Android constructs that have a",
    "start": "1636470",
    "end": "1642289"
  },
  {
    "text": "lot of industry production experience",
    "start": "1642289",
    "end": "1647320"
  },
  {
    "text": "alright so after after we have the engine started then the application",
    "start": "1647740",
    "end": "1653120"
  },
  {
    "text": "threads can create HTTP streams and the HTTP streams then can issue calls across",
    "start": "1653120",
    "end": "1659899"
  },
  {
    "text": "the application thread into the Android engine with the event dispatcher and then into the HTTP manager and then from",
    "start": "1659899",
    "end": "1667639"
  },
  {
    "text": "the HTTP manager we go out into the Internet and so I want to swim here into",
    "start": "1667639",
    "end": "1673879"
  },
  {
    "text": "the HTTP manager because the as I said the HTTP manager is the foundational",
    "start": "1673879",
    "end": "1679269"
  },
  {
    "text": "basis of the HTTP stack in Envoy and it's also a big extension point for",
    "start": "1679269",
    "end": "1685610"
  },
  {
    "text": "Envoy because it has this concept of HTTP filters that attach unto the HTTP",
    "start": "1685610",
    "end": "1692750"
  },
  {
    "text": "manager and what these filters do is they enact behavior on to every single",
    "start": "1692750",
    "end": "1697909"
  },
  {
    "text": "HTTP request that goes out of the engine and then every HTTP response that comes",
    "start": "1697909",
    "end": "1704179"
  },
  {
    "text": "back in so really this I want to put a pin here because this is exactly what we",
    "start": "1704179",
    "end": "1710090"
  },
  {
    "text": "were looking for before a place where we can enact these behaviors that we had declared unto our api's all right so",
    "start": "1710090",
    "end": "1719389"
  },
  {
    "text": "after we have the request go out into the internet and our services do whatever they need to do the response",
    "start": "1719389",
    "end": "1725090"
  },
  {
    "text": "comes back into the engine and when the response comes back into the engine we",
    "start": "1725090",
    "end": "1731240"
  },
  {
    "text": "have some bridging code that calls callbacks back into the platform and",
    "start": "1731240",
    "end": "1737960"
  },
  {
    "text": "this is done via platform-specific callback mechanisms so it allows us to then again dispatch from the main thread",
    "start": "1737960",
    "end": "1745640"
  },
  {
    "text": "into the callback threats and give control back to the application layer",
    "start": "1745640",
    "end": "1752170"
  },
  {
    "text": "now an important design decision that I'd like to discuss here is that we unsynchronized both the request path and",
    "start": "1752740",
    "end": "1759890"
  },
  {
    "text": "the response path there's at no point a moment of synchronization and we did",
    "start": "1759890",
    "end": "1765710"
  },
  {
    "text": "this deliberately because we didn't want any platform code to actually hang on to",
    "start": "1765710",
    "end": "1771670"
  },
  {
    "text": "to actually hang on to operations while we were issuing Network requests but the",
    "start": "1771670",
    "end": "1778730"
  },
  {
    "text": "only point that we added synchronization here is for stream cancellation but even that is done in the native layer this",
    "start": "1778730",
    "end": "1785960"
  },
  {
    "text": "means that even the one part of the of the puzzle that is a little bit complex doesn't have to have two different",
    "start": "1785960",
    "end": "1792350"
  },
  {
    "text": "implementations in iOS and in Android it's all done in the in the shared native code what this results in is a",
    "start": "1792350",
    "end": "1799790"
  },
  {
    "text": "dramatically simpler implementation in the library and also as well as easier usage by an end user that we use that",
    "start": "1799790",
    "end": "1807320"
  },
  {
    "text": "would use the library so this is an overview of how the engine works let's",
    "start": "1807320",
    "end": "1812840"
  },
  {
    "text": "now take a look at what the platform code looks like when you're actually using Android mobile and here I want to",
    "start": "1812840",
    "end": "1821480"
  },
  {
    "start": "1814000",
    "end": "1814000"
  },
  {
    "text": "highlight again that while I'm showing you Swift code the cutland code for android looks exactly the same and this",
    "start": "1821480",
    "end": "1828170"
  },
  {
    "text": "was again deliberately done because we wanted the consistency guarantees between the two platforms so the first",
    "start": "1828170",
    "end": "1837080"
  },
  {
    "start": "1836000",
    "end": "1836000"
  },
  {
    "text": "thing that happens at the platform layer is that we build an android client to make the network calls and internally",
    "start": "1837080",
    "end": "1842840"
  },
  {
    "text": "this starts the engine and all the processes that that I just showed you at",
    "start": "1842840",
    "end": "1848510"
  },
  {
    "text": "this point in the engine we also allow the at this point of creating the android client we also allow you to",
    "start": "1848510",
    "end": "1854770"
  },
  {
    "text": "configure the client differently depending on what your needs might be so you might want different logging levels",
    "start": "1854770",
    "end": "1860660"
  },
  {
    "text": "or different stats flushing intervals so now I'll get to why stats is up here",
    "start": "1860660",
    "end": "1868210"
  },
  {
    "text": "then you can build a request with their request builder and this is the object that we use to",
    "start": "1868210",
    "end": "1873660"
  },
  {
    "start": "1869000",
    "end": "1869000"
  },
  {
    "text": "actually start the HTTP streams and make requests from your client out into the internet and with requests we are we",
    "start": "1873660",
    "end": "1881610"
  },
  {
    "text": "have also exposed places that you can you can modify things so for example you can add different headers to the",
    "start": "1881610",
    "end": "1886830"
  },
  {
    "text": "requests in a in a programmatic way and lastly you build a request or our",
    "start": "1886830",
    "end": "1893790"
  },
  {
    "text": "response handler that will receive the callbacks in that in that diagram that I",
    "start": "1893790",
    "end": "1898950"
  },
  {
    "text": "showed you where the engine then gives back the response to the platform and it",
    "start": "1898950",
    "end": "1904440"
  },
  {
    "text": "allows then the product engineers to write whatever the business logic is so for example it has a callback for when",
    "start": "1904440",
    "end": "1911460"
  },
  {
    "text": "headers are received and then that gives control back to the business logic",
    "start": "1911460",
    "end": "1917480"
  },
  {
    "text": "alright so that was a deep dive into how anvil in mobile works and the the API",
    "start": "1917480",
    "end": "1923460"
  },
  {
    "text": "that we expose for clients to use so let's go back at where we started the",
    "start": "1923460",
    "end": "1928890"
  },
  {
    "text": "conversation of why we went ahead and wanted to create a new transport layer",
    "start": "1928890",
    "end": "1934010"
  },
  {
    "text": "it's because we wanted to deliver a consistent behavior not only be able to",
    "start": "1934010",
    "end": "1939210"
  },
  {
    "text": "describe it consistently but actually enact that behavior consistently across our mobile clients",
    "start": "1939210",
    "end": "1946490"
  },
  {
    "text": "so in our generated pipeline what I didn't show you before is that like I",
    "start": "1947510",
    "end": "1954270"
  },
  {
    "text": "said we abstracted the implementation of the actual generator API so initially",
    "start": "1954270",
    "end": "1959730"
  },
  {
    "text": "the underneath of that work API calls into nsurl session for iOS and ok HTTP",
    "start": "1959730",
    "end": "1967320"
  },
  {
    "text": "for android but now that we had Android mobile as this transport layer we could",
    "start": "1967320",
    "end": "1973080"
  },
  {
    "text": "just go in and swap those two libraries for API calls into angular mobile and",
    "start": "1973080",
    "end": "1978960"
  },
  {
    "text": "again this was transparent to our mobile engineers they didn't have to know what was being generated under the hood so we",
    "start": "1978960",
    "end": "1988560"
  },
  {
    "text": "had reached a point in our mobile client development development that we had reached with the server we now had a",
    "start": "1988560",
    "end": "1995310"
  },
  {
    "text": "full ecosystem where we controlled both the shape of our API with generated",
    "start": "1995310",
    "end": "2001210"
  },
  {
    "text": "clients and also the transport of our API with ongoing mobile so let's get back to",
    "start": "2001210",
    "end": "2009600"
  },
  {
    "text": "our chart and let's see how standardization of our transport layer is helping us achieve some of these",
    "start": "2009600",
    "end": "2015090"
  },
  {
    "text": "missing goals that we had so going back",
    "start": "2015090",
    "end": "2020100"
  },
  {
    "text": "into into this story we had already a way to declare",
    "start": "2020100",
    "end": "2025730"
  },
  {
    "text": "consistent behavior between our API right via protocol annotations so like",
    "start": "2025730",
    "end": "2032310"
  },
  {
    "text": "like I said before by having these annotations we could declare behavior of our API so we could declare that a",
    "start": "2032310",
    "end": "2039180"
  },
  {
    "text": "particular payload could be gzip and get benefits from that compression but we",
    "start": "2039180",
    "end": "2044760"
  },
  {
    "text": "didn't have a way to enact them because we had to go out and implement three",
    "start": "2044760",
    "end": "2050340"
  },
  {
    "text": "different places where this compression might take place in the iOS client and the android client and then",
    "start": "2050340",
    "end": "2056658"
  },
  {
    "text": "decompression had to happen in the server so we previously we couldn't",
    "start": "2056659",
    "end": "2062010"
  },
  {
    "text": "execute on this right we had three different places who needed to do that but now by having android mobile as our",
    "start": "2062010",
    "end": "2070200"
  },
  {
    "text": "transport layer in the client and envoy in the backend we now finally had a place to actually enact this declarative",
    "start": "2070200",
    "end": "2077490"
  },
  {
    "text": "behavior that we had attached to our client api s-- and so remember i pinned",
    "start": "2077490",
    "end": "2083310"
  },
  {
    "text": "the the fact about HTTP filters because this is the place where we could enact that behavior because every single HTTP",
    "start": "2083310",
    "end": "2090030"
  },
  {
    "text": "request coming out of android mobile and coming back into envoy mobile had had to",
    "start": "2090030",
    "end": "2096810"
  },
  {
    "text": "go through this HTTP filters and this HTTP filters allowed us to really enact",
    "start": "2096810",
    "end": "2102900"
  },
  {
    "text": "the behavior that we wanted from our mobile mobile ap is so we can focus our",
    "start": "2102900",
    "end": "2110760"
  },
  {
    "text": "engineering resources because we have to implement it only only once right so now",
    "start": "2110760",
    "end": "2116910"
  },
  {
    "text": "we have a client that wants to send a request and in their API they have declared please gzip this request I want",
    "start": "2116910",
    "end": "2123540"
  },
  {
    "text": "full compression and so that request goes out from the mobile clients via Android mobile and it goes through a",
    "start": "2123540",
    "end": "2130350"
  },
  {
    "text": "compression filter in this HTTP stack so the request is then compressed and sent",
    "start": "2130350",
    "end": "2135720"
  },
  {
    "text": "over the wire then when it gets to our edge infrastructure where envoy is running we",
    "start": "2135720",
    "end": "2141130"
  },
  {
    "text": "have again the compression filter and this compression filter understands that the payload has been compressed and is",
    "start": "2141130",
    "end": "2148000"
  },
  {
    "text": "able to unzip this payload and pass it on to the service that requires it this",
    "start": "2148000",
    "end": "2156339"
  },
  {
    "start": "2155000",
    "end": "2155000"
  },
  {
    "text": "is just the beginning of what we want to do with envoy mobile and the ambulances",
    "start": "2156339",
    "end": "2161589"
  },
  {
    "text": "what we're creating here is an advanced suite of of network behavior for mobile",
    "start": "2161589",
    "end": "2167290"
  },
  {
    "text": "clients and this is really unparalleled in scope in in other places and in other libraries especially because we're",
    "start": "2167290",
    "end": "2173950"
  },
  {
    "text": "bringing consistency in this behavior not only between our mobile clients but also between the mobile clients and the",
    "start": "2173950",
    "end": "2180640"
  },
  {
    "text": "server so let's go and imagine some of this use cases so for example we might",
    "start": "2180640",
    "end": "2187930"
  },
  {
    "start": "2184000",
    "end": "2184000"
  },
  {
    "text": "have deferred requests so what happens when when a service goes down and then",
    "start": "2187930",
    "end": "2195220"
  },
  {
    "text": "you have a user trying to use your mobile application you might have to fill that request but it would be really",
    "start": "2195220",
    "end": "2201010"
  },
  {
    "text": "nice if what we could do was actually notice that the network condition is poor and not send that request then",
    "start": "2201010",
    "end": "2208150"
  },
  {
    "text": "resolve things in the client to pretend to to make your customer believe that",
    "start": "2208150",
    "end": "2214569"
  },
  {
    "text": "the request has succeeded and hold that request in an ongoing filter and then",
    "start": "2214569",
    "end": "2220510"
  },
  {
    "text": "later on when the service is back up and healthy we could actually dispatch all those requests and create consistent",
    "start": "2220510",
    "end": "2227140"
  },
  {
    "text": "behave consistency with with the server all this without your customer noticing",
    "start": "2227140",
    "end": "2232569"
  },
  {
    "text": "that they went through a tunnel or they lost connectivity when they went into an elevator let's imagine another use case",
    "start": "2232569",
    "end": "2242440"
  },
  {
    "text": "for security so we might want to have requests signing I know that at lift we receive a lot of spoof requests from",
    "start": "2242440",
    "end": "2250799"
  },
  {
    "text": "malicious clients that want to commit fraud in our platform so a common thing",
    "start": "2250799",
    "end": "2256450"
  },
  {
    "text": "that we could do is sign those requests in our official mobile clients and then",
    "start": "2256450",
    "end": "2262030"
  },
  {
    "text": "have the server verify that those requests are valid well again this could be this could be really hard to",
    "start": "2262030",
    "end": "2268390"
  },
  {
    "text": "implement if we had to know only implement a request signing library in Android a request signing library in",
    "start": "2268390",
    "end": "2275660"
  },
  {
    "text": "iOS but also a way to verify that in the server well now imagine if we could just",
    "start": "2275660",
    "end": "2282290"
  },
  {
    "text": "implement one request signing filter in Envoy by default we get not only the",
    "start": "2282290",
    "end": "2288560"
  },
  {
    "text": "mobile cannon from implementation to sign this request but also the server-side implementation to verify",
    "start": "2288560",
    "end": "2294620"
  },
  {
    "text": "that this requests are valid and not fraudulent so this is just the beginning",
    "start": "2294620",
    "end": "2301460"
  },
  {
    "text": "this is just a list of some ideas that my team has and wants to start",
    "start": "2301460",
    "end": "2306740"
  },
  {
    "text": "implementing and again this would be intractable if we had to implement this in three places rather than just one all",
    "start": "2306740",
    "end": "2316160"
  },
  {
    "text": "right so let's switch gears outside of HTTP filters for a little bit and talk about observability because I said at",
    "start": "2316160",
    "end": "2324320"
  },
  {
    "text": "the beginning that it wasn't only enough to have consistent behavior when things",
    "start": "2324320",
    "end": "2329690"
  },
  {
    "text": "were going well but also it's important that when things do go wrong we have the",
    "start": "2329690",
    "end": "2335300"
  },
  {
    "text": "right observability stack to analyze how things are going wrong and go fix them",
    "start": "2335300",
    "end": "2340540"
  },
  {
    "text": "so one of our voice main driving features is its unparalleled unparalleled observability at lift we",
    "start": "2340540",
    "end": "2348470"
  },
  {
    "text": "use android on the server-side to observe Network behavior end to end and we have dashboards that we auto generate",
    "start": "2348470",
    "end": "2354260"
  },
  {
    "text": "for every single service in order to know what's happening with Android",
    "start": "2354260",
    "end": "2360170"
  },
  {
    "text": "mobile we wanted to bring that same observer ability that we had in the back-end infrastructure all the way to",
    "start": "2360170",
    "end": "2366770"
  },
  {
    "text": "the missing hub our mobile clients so the goal is that an engineer that is",
    "start": "2366770",
    "end": "2373190"
  },
  {
    "start": "2370000",
    "end": "2370000"
  },
  {
    "text": "curious about a particular thing in our network doesn't have to worry about getting observability from all sorts of",
    "start": "2373190",
    "end": "2379970"
  },
  {
    "text": "places they can they we want them to be able to reason about the network and to",
    "start": "2379970",
    "end": "2385310"
  },
  {
    "text": "end all the way from our mobile clients into the edge of our infrastructure and our service mesh using the same metrics",
    "start": "2385310",
    "end": "2393310"
  },
  {
    "text": "so for example you might imagine someone is interested in looking at request",
    "start": "2393310",
    "end": "2398330"
  },
  {
    "text": "volume and so instead of having to go and do some analytics queries to",
    "start": "2398330",
    "end": "2403900"
  },
  {
    "text": "what the mobile clients are doing you could just query for the same metrics that you would query on a back-end",
    "start": "2403900",
    "end": "2410260"
  },
  {
    "text": "service and so that is what we did with ongoing mobile in our in the lyft app",
    "start": "2410260",
    "end": "2417720"
  },
  {
    "start": "2413000",
    "end": "2413000"
  },
  {
    "text": "and this is a place where invoice extensibility also helped us because invoice only extension points are not",
    "start": "2417720",
    "end": "2424809"
  },
  {
    "text": "HTTP filters but it also has a plethora of other extension points that we can use and one of those extension points is",
    "start": "2424809",
    "end": "2431589"
  },
  {
    "text": "the stat sink so it allows us to determine different places where we might flush our time-series metrics and",
    "start": "2431589",
    "end": "2437950"
  },
  {
    "text": "one of the stat sinks that has been implemented by the community is the metric service stat sink so this allowed",
    "start": "2437950",
    "end": "2445210"
  },
  {
    "text": "us to build a GRS a very simple G RPC service that would then receive the",
    "start": "2445210",
    "end": "2451359"
  },
  {
    "text": "influx from all of our mobile clients and then it would aggregate them and",
    "start": "2451359",
    "end": "2456640"
  },
  {
    "text": "flush them to our already existing that's the implementation so here we not",
    "start": "2456640",
    "end": "2463119"
  },
  {
    "text": "only leveraged the fact that Envoy has existing time-series metrics and exist",
    "start": "2463119",
    "end": "2468849"
  },
  {
    "text": "existing observability extension points but we were also leveraging already",
    "start": "2468849",
    "end": "2475599"
  },
  {
    "text": "existing observability infrastructure that we had at lift for the backend and",
    "start": "2475599",
    "end": "2481289"
  },
  {
    "text": "this is what we got I want to emphasize just how important this graph is up top",
    "start": "2481289",
    "end": "2487420"
  },
  {
    "text": "we have metrics coming from lifts mobile clients and down below we have the exact",
    "start": "2487420",
    "end": "2494559"
  },
  {
    "text": "same metric that we're receiving at the edge and this is insight that we did not",
    "start": "2494559",
    "end": "2499869"
  },
  {
    "text": "have before leveraging ongoing mobile for mobile clients and the existing observability infrastructure that we",
    "start": "2499869",
    "end": "2506140"
  },
  {
    "text": "have so this is really showing us the true power of having this unified network primitive all the way from our",
    "start": "2506140",
    "end": "2512829"
  },
  {
    "text": "mobile clients to our server we can understand the network and to end using",
    "start": "2512829",
    "end": "2518770"
  },
  {
    "text": "the same concepts this is the place where we start acting on that reduction",
    "start": "2518770",
    "end": "2524770"
  },
  {
    "text": "of cognitive load that our operators have to have in order to understand the system all right",
    "start": "2524770",
    "end": "2532569"
  },
  {
    "text": "so let's go back to this laundry list that I started with at the beginning I want to pass it and hopefully I've",
    "start": "2532569",
    "end": "2539519"
  },
  {
    "text": "shown to you that by having an ecosystem where we understand both the shape of",
    "start": "2539519",
    "end": "2544529"
  },
  {
    "text": "our api's and the transport I've shown you how my team has started to provide",
    "start": "2544529",
    "end": "2549720"
  },
  {
    "text": "the same guarantees that we have server-side also in our client api's but",
    "start": "2549720",
    "end": "2556559"
  },
  {
    "text": "this is only the beginning because I'm going mobile is the first open source solution that provides the same software",
    "start": "2556559",
    "end": "2562829"
  },
  {
    "text": "stack not only between the edge and the backend with Android proxy but also now all the way to the mobile clients with",
    "start": "2562829",
    "end": "2570359"
  },
  {
    "text": "Android mobile and I hope that I've shown you some of the range of potentials that we have with with this",
    "start": "2570359",
    "end": "2578009"
  },
  {
    "text": "paradigm not only with the functionality of filters but we could also start doing protocol experimentation if you were in",
    "start": "2578009",
    "end": "2585450"
  },
  {
    "text": "the panel earlier today Richard Lee from data wire and I were talking over lunch",
    "start": "2585450",
    "end": "2590490"
  },
  {
    "text": "about quick experimentation HTTP 3 over quick has shown historically in",
    "start": "2590490",
    "end": "2596549"
  },
  {
    "text": "experiments done by Google and Facebook and uber that we really have dramatic",
    "start": "2596549",
    "end": "2601579"
  },
  {
    "text": "performance improvements especially in networks with low connectivity and low",
    "start": "2601579",
    "end": "2607769"
  },
  {
    "text": "bandwidth and so this is the type of problems that only large companies like",
    "start": "2607769",
    "end": "2613079"
  },
  {
    "text": "Google or Facebook were able to tackle before because they had their engineering resources to go and deploy",
    "start": "2613079",
    "end": "2619230"
  },
  {
    "text": "three different implementations of quick one for iOS one for Android and one for",
    "start": "2619230",
    "end": "2624420"
  },
  {
    "text": "the back end but now that we have the same transport implementation in all",
    "start": "2624420",
    "end": "2629489"
  },
  {
    "text": "three places we can deploy a team of four like my teammates and actually go and do these",
    "start": "2629489",
    "end": "2635339"
  },
  {
    "text": "big projects and lastly we also want to",
    "start": "2635339",
    "end": "2641670"
  },
  {
    "text": "open-source the code generators for it for for our mobile kind api's that go",
    "start": "2641670",
    "end": "2647910"
  },
  {
    "text": "from the profiles into the swift and the cotman stubs because we want to give the",
    "start": "2647910",
    "end": "2653190"
  },
  {
    "text": "community not only the transport layer but also the shape of the api we want to",
    "start": "2653190",
    "end": "2658289"
  },
  {
    "text": "give the community this whole ecosystem in order to go and enhance their client",
    "start": "2658289",
    "end": "2665190"
  },
  {
    "text": "api s-- because at the end of the day what we believe for next generation can a",
    "start": "2665190",
    "end": "2670230"
  },
  {
    "text": "guys is that the this API sir model-based ap is that are defined",
    "start": "2670230",
    "end": "2675600"
  },
  {
    "text": "strongly in a typed I do like protobuf so that platform engineers like myself",
    "start": "2675600",
    "end": "2681090"
  },
  {
    "text": "can go and iterate on this behavior by using a common transport layer which is",
    "start": "2681090",
    "end": "2686490"
  },
  {
    "text": "Android mobile so I wanted to go back",
    "start": "2686490",
    "end": "2691950"
  },
  {
    "text": "down memory lane this is a picture of my team taking the first lift right ever dispatch through ongoing mobile and so",
    "start": "2691950",
    "end": "2699150"
  },
  {
    "text": "at that point we actually had Network requests going from the mobile client all the way to the database flowing",
    "start": "2699150",
    "end": "2705600"
  },
  {
    "text": "through envoy and now in just a couple weeks we're going to start doing",
    "start": "2705600",
    "end": "2711600"
  },
  {
    "text": "production experiments with angular Mobile and so what we believe is that ongoing Mobile on the backend and I'm",
    "start": "2711600",
    "end": "2718890"
  },
  {
    "text": "sorry Android proxy on the backend and Android mobile on our mobile clients are the basis for this ecosystem of next",
    "start": "2718890",
    "end": "2726359"
  },
  {
    "text": "generation API and we will continue investing heavily on on it at lift but",
    "start": "2726359",
    "end": "2731880"
  },
  {
    "text": "more importantly however we believe in the power of open source community and that's why we open source Android mobile",
    "start": "2731880",
    "end": "2738600"
  },
  {
    "text": "from the very very beginning so I hope you check the project out and join us thank you for your time",
    "start": "2738600",
    "end": "2745790"
  },
  {
    "text": "[Applause]",
    "start": "2745790",
    "end": "2750079"
  }
]