[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "thank everyone for coming so this is a talk about distributed tracing micro",
    "start": "4400",
    "end": "9650"
  },
  {
    "text": "services and about complexity of those things and an agenda so I will introduce",
    "start": "9650",
    "end": "17680"
  },
  {
    "text": "briefly what distributed tracing is and why were using it and I will talk about",
    "start": "17680",
    "end": "23480"
  },
  {
    "text": "different ways of using tracing data that we found useful at uber and so the",
    "start": "23480",
    "end": "31279"
  },
  {
    "text": "basically there is four sections that I will be presenting and then we have a time for Q&A so just to introduce myself",
    "start": "31279",
    "end": "39199"
  },
  {
    "text": "as John suzanne mentioned I I work at uber in observability team been there",
    "start": "39199",
    "end": "44480"
  },
  {
    "text": "about four years I primarily work on distributed tracing and our tracing",
    "start": "44480",
    "end": "50570"
  },
  {
    "text": "system Jaeger it's open-source we donated the to cloud native computing",
    "start": "50570",
    "end": "55699"
  },
  {
    "text": "foundation couple years ago I also work with two other CN CF projects open",
    "start": "55699",
    "end": "61249"
  },
  {
    "text": "tracing and open telemetry which are the sort of the instrumentation side of open",
    "start": "61249",
    "end": "66320"
  },
  {
    "text": "tracing and of tracing and metrics and I'll touch on those briefly and also as",
    "start": "66320",
    "end": "74000"
  },
  {
    "text": "Suzanne mentioned I published a book recently this this book is kind of I had",
    "start": "74000",
    "end": "80450"
  },
  {
    "text": "about four years of experience during the tracing so I decided to write about it and it kind of covers a lot of",
    "start": "80450",
    "end": "85840"
  },
  {
    "text": "tracing history current state of the industry a lot of different standards and it's also very practical guide you",
    "start": "85840",
    "end": "92900"
  },
  {
    "text": "can just dive in and start instrumenting the applications and plus a lot of advice from my own experiences and so if",
    "start": "92900",
    "end": "100340"
  },
  {
    "text": "you wanna if you're interested it's you can find it from my website so before I",
    "start": "100340",
    "end": "107240"
  },
  {
    "start": "105000",
    "end": "140000"
  },
  {
    "text": "start I just want to maybe take a quick poll so I'm assuming like everyone is",
    "start": "107240",
    "end": "112970"
  },
  {
    "text": "using micro services if you are in this uh-huh in this room but how many people",
    "start": "112970",
    "end": "118880"
  },
  {
    "text": "actually know what distributed tracing is alright so hard to count but I think",
    "start": "118880",
    "end": "127340"
  },
  {
    "text": "it's roughly forty percent maybe and how many of you actually use the civil tracing in production okay so the good",
    "start": "127340",
    "end": "136670"
  },
  {
    "text": "amount about maybe ten percent so so that's worth speaking about like",
    "start": "136670",
    "end": "143060"
  },
  {
    "start": "140000",
    "end": "193000"
  },
  {
    "text": "why would you in distributed tracing and it's it's not a new thing right the the",
    "start": "143060",
    "end": "148459"
  },
  {
    "text": "papers on extra is and dapper at Google appeared on more than ten years ago but",
    "start": "148459",
    "end": "154610"
  },
  {
    "text": "tracing this kind of gaining popularity recently and in part is because I think of the microservices movements as well",
    "start": "154610",
    "end": "162470"
  },
  {
    "text": "and so I want to cover a few trends in the industry that sort of lead to I",
    "start": "162470",
    "end": "167659"
  },
  {
    "text": "think why my tracing becomes important now so one is not really a trend it's a done deal but as as internet company",
    "start": "167659",
    "end": "175250"
  },
  {
    "text": "started like having to serve millions of users the basic we had to start building",
    "start": "175250",
    "end": "181910"
  },
  {
    "text": "very complex distributed system scale from one computer to two hundred thousands right and so that basically",
    "start": "181910",
    "end": "189910"
  },
  {
    "text": "created a lot of complexity already the the other trend is as people were",
    "start": "189910",
    "end": "197870"
  },
  {
    "start": "193000",
    "end": "234000"
  },
  {
    "text": "developing monitors you could scale a monolith 2,000 costs that's fine but at",
    "start": "197870",
    "end": "204260"
  },
  {
    "text": "some point as Jurgen ization grows you reach a point where the Mondelez creates",
    "start": "204260",
    "end": "209389"
  },
  {
    "text": "an organizational challenge you you can't deploy features fast enough because like everything is intertwined and so people start breaking up money",
    "start": "209389",
    "end": "217489"
  },
  {
    "text": "listen to micro services and which allows like a lot of different benefits",
    "start": "217489",
    "end": "223880"
  },
  {
    "text": "but also micro services creates like enormous amount of challenges for operating them analyst change in them",
    "start": "223880",
    "end": "229910"
  },
  {
    "text": "which is what I'm going to be talking about and a third trend is sort of in",
    "start": "229910",
    "end": "239359"
  },
  {
    "start": "234000",
    "end": "368000"
  },
  {
    "text": "evolution of our programming paradigms we traditionally well maybe early 2000",
    "start": "239359",
    "end": "246319"
  },
  {
    "text": "if you had the Java server it would run a few threads and each thread would execute one request at a time right the",
    "start": "246319",
    "end": "252709"
  },
  {
    "text": "sort of the logic of that was pretty simple and if you need to debug that system it was fairly straightforward but",
    "start": "252709",
    "end": "258680"
  },
  {
    "text": "then we've introduced new types of concurrency we will introduce the",
    "start": "258680",
    "end": "263840"
  },
  {
    "text": "synchronous program and where a single request like think about futures or promises or event-driven frameworks",
    "start": "263840",
    "end": "270310"
  },
  {
    "text": "we're a single request can start with one thread and get paused get put on another thread and so if you try to",
    "start": "270310",
    "end": "276190"
  },
  {
    "text": "debug that that becomes much harder because like where do you look for like how do you look for a log for example",
    "start": "276190",
    "end": "281860"
  },
  {
    "text": "from that request and finally when we blew that up into micro-services world",
    "start": "281860",
    "end": "286990"
  },
  {
    "text": "that became even kind of we were created the distributed concurrency where a single requests not only jumps across",
    "start": "286990",
    "end": "293440"
  },
  {
    "text": "threads but across threads in different processes different nodes and so understanding these systems and",
    "start": "293440",
    "end": "300010"
  },
  {
    "text": "debugging them became really really hard not a Twizy before with distributed systems so the communal combinations of",
    "start": "300010",
    "end": "310360"
  },
  {
    "text": "this sort of micro sources architecture like the one at uber where we have over 3,000 services and they are all in",
    "start": "310360",
    "end": "318220"
  },
  {
    "text": "multiple programming languages so this diagram is a rendered by j√§ger is a",
    "start": "318220",
    "end": "323350"
  },
  {
    "text": "portion of a portion of that architecture I think nodes represent like the services and the size one was",
    "start": "323350",
    "end": "329860"
  },
  {
    "text": "roughly proportion to the traffic and age is a connection between those services their RPC code that they make",
    "start": "329860",
    "end": "335160"
  },
  {
    "text": "and what's interesting is that if you click a button at uber a transaction can",
    "start": "335160",
    "end": "341680"
  },
  {
    "text": "hit that architecture which looks like this right so it it can touch like hundreds of nodes multiple types of",
    "start": "341680",
    "end": "348880"
  },
  {
    "text": "surfaces like from different business domains so what what would you when",
    "start": "348880",
    "end": "355630"
  },
  {
    "text": "something goes wrong in a circuit action right and another thing that",
    "start": "355630",
    "end": "360700"
  },
  {
    "text": "microservices architecture introduces is an increase in the number of failure domains because",
    "start": "360700",
    "end": "368140"
  },
  {
    "start": "368000",
    "end": "397000"
  },
  {
    "text": "we know that like if you read any distributed distributed systems paper",
    "start": "368140",
    "end": "373750"
  },
  {
    "text": "they would mention communication are not reliable right this is kind of the basic premise of distributed systems design",
    "start": "373750",
    "end": "379150"
  },
  {
    "text": "and then while Microsoft says let's bet down on this unreliable communications and use it for everything inside our",
    "start": "379150",
    "end": "386260"
  },
  {
    "text": "system right and so the this number of communications increases exponentially in the micro services architecture and",
    "start": "386260",
    "end": "393039"
  },
  {
    "text": "that increases the number of failure nodes failure modes so in order to",
    "start": "393039",
    "end": "398979"
  },
  {
    "start": "397000",
    "end": "429000"
  },
  {
    "text": "operate such complex systems it's almost impossible without very strong good durability systems into into what's",
    "start": "398979",
    "end": "406039"
  },
  {
    "text": "going on and specifically we we can't understand what's going on in the system",
    "start": "406039",
    "end": "411860"
  },
  {
    "text": "before looking at just one single node of it right we kind from the transaction before if it touches 15 nodes I kinda",
    "start": "411860",
    "end": "417919"
  },
  {
    "text": "need to understand what happened along the path of that whole transaction before I can reason about what happened",
    "start": "417919",
    "end": "423349"
  },
  {
    "text": "in the request and so we need to monitor this distributed transactions now I want",
    "start": "423349",
    "end": "429020"
  },
  {
    "start": "429000",
    "end": "618000"
  },
  {
    "text": "to touch about like what is observability right and specifically how",
    "start": "429020",
    "end": "434089"
  },
  {
    "text": "is it different from monitoring I mean I sometimes people people kind of think",
    "start": "434089",
    "end": "439610"
  },
  {
    "text": "that observable just a fancy name for for monitoring but I think of them very differently because to me if you think",
    "start": "439610",
    "end": "445939"
  },
  {
    "text": "about the word monitoring from the dictionary it says well you decided what to measure you decided that it's",
    "start": "445939",
    "end": "451909"
  },
  {
    "text": "important for you to measure that and you monitor that right well that is not the thing that humans should be doing in",
    "start": "451909",
    "end": "458869"
  },
  {
    "text": "production because there's so many things that important and you need to monitor so you just go and automate that",
    "start": "458869",
    "end": "463999"
  },
  {
    "text": "you put alerts on those things right so to me monitoring us think that you knew a priori are going to be important and",
    "start": "463999",
    "end": "470389"
  },
  {
    "text": "that you need to automate completely the humans should not be involved in monitoring human is involved once the",
    "start": "470389",
    "end": "476719"
  },
  {
    "text": "alert fires then then you have to involve human to debug the problem right whereas observability is actually",
    "start": "476719",
    "end": "484659"
  },
  {
    "text": "observability is really an ability to ask questions about your system and",
    "start": "484659",
    "end": "492409"
  },
  {
    "text": "those are the questions that you don't know up front so that's the main difference from monitoring and",
    "start": "492409",
    "end": "498159"
  },
  {
    "text": "distributed tracing is kind of it's it's",
    "start": "498159",
    "end": "503269"
  },
  {
    "text": "in a unique position across all observability tools that it can answer questions that no other systems can",
    "start": "503269",
    "end": "509360"
  },
  {
    "text": "answer it I'm not going to read all this but just to give a taste is that if you have a long request like which service",
    "start": "509360",
    "end": "516459"
  },
  {
    "text": "created a fault in that request rate how do you find out what if you got an alert from your business metrics saying users",
    "start": "516459",
    "end": "523219"
  },
  {
    "text": "can't take trips on uber right that's what we monitor that's what we should monitor that's the metric that's",
    "start": "523219",
    "end": "528709"
  },
  {
    "text": "important to us but how do you go from that to some service acts that's actually misbehaving or having capacity",
    "start": "528709",
    "end": "534260"
  },
  {
    "text": "issue so that's what we want to be able to answer this is the types of questions and the last one question is kind of",
    "start": "534260",
    "end": "543149"
  },
  {
    "text": "funny right it's but that's one of the most important one because if you imagine the architecture like 3000",
    "start": "543149",
    "end": "550290"
  },
  {
    "text": "micro-service is a tuber or any organization which has a sizable",
    "start": "550290",
    "end": "556110"
  },
  {
    "text": "architecture I can guarantee there's not a single person that knows whatever those services are doing right so it's",
    "start": "556110",
    "end": "561510"
  },
  {
    "text": "impossible to keep everything in your head so the like if you are responding",
    "start": "561510",
    "end": "567089"
  },
  {
    "text": "to an alert about the business metrics falling down your first goal is to basically isolate where the problem is",
    "start": "567089",
    "end": "573690"
  },
  {
    "text": "and find the person who can actually solve that problem right you you probably not going to know what the",
    "start": "573690",
    "end": "579329"
  },
  {
    "text": "service X is actually about and what it's doing and so distributed tracing is kind of in a unique position to point",
    "start": "579329",
    "end": "585570"
  },
  {
    "text": "you quickly in that direction and I couldn't find unfortunately for the slide but there was a recent tweet from",
    "start": "585570",
    "end": "591540"
  },
  {
    "text": "charity major CEO Connie calm she said like one of the hardest thing is observability is actually not finding",
    "start": "591540",
    "end": "598829"
  },
  {
    "text": "why something is failing but where it's failing right and that's that's actually rings very true to me because I've seen",
    "start": "598829",
    "end": "604980"
  },
  {
    "text": "that at uber with the first responders where they just spent half an hour trying to just narrow down the problem",
    "start": "604980",
    "end": "611160"
  },
  {
    "text": "where to choose service and then once it's there that's actually figuring out the problem becomes much easier and so",
    "start": "611160",
    "end": "618329"
  },
  {
    "start": "618000",
    "end": "705000"
  },
  {
    "text": "distributed tracing is it's very well-positioned to answer these questions and accelerate root cause",
    "start": "618329",
    "end": "625260"
  },
  {
    "text": "analysis which is an important part in in outage mitigation so let me start",
    "start": "625260",
    "end": "634380"
  },
  {
    "text": "just very quickly overview for distributed tracing how it works right so the idea is exceptionally simple you",
    "start": "634380",
    "end": "641130"
  },
  {
    "text": "you have a request coming in in architecture we assign the unique ID and we'll make sure that we pass that unique",
    "start": "641130",
    "end": "647310"
  },
  {
    "text": "IDs through all the calls that that service makes and all the downstream services make if it's a fusion messaging",
    "start": "647310",
    "end": "654360"
  },
  {
    "text": "it works the same way so while we're doing that we have a background sort of",
    "start": "654360",
    "end": "660510"
  },
  {
    "text": "process in each service which collects the telemetry data tagged with those unique IDs and then",
    "start": "660510",
    "end": "667620"
  },
  {
    "text": "sends it out to the tracing system which allows us to recon basically a workflow the lifecycle of",
    "start": "667620",
    "end": "674110"
  },
  {
    "text": "that request and it collects timing data causality data like who called whom things like that and all kinds of other",
    "start": "674110",
    "end": "680320"
  },
  {
    "text": "attributes about the request like what's the URL for a given endpoint and so on",
    "start": "680320",
    "end": "686230"
  },
  {
    "text": "the right side you can see this is very typical like a Gantt chart view of the trace where it's a collection of spans",
    "start": "686230",
    "end": "692920"
  },
  {
    "text": "so like I I will probably be using turn span so I want to bring wrap up transplant it's just like one unit of",
    "start": "692920",
    "end": "698440"
  },
  {
    "text": "work usually like a service endpoint but could be something smaller within that",
    "start": "698440",
    "end": "703780"
  },
  {
    "text": "as well and and what trace is is really it's a narrative about a request it's",
    "start": "703780",
    "end": "710890"
  },
  {
    "start": "705000",
    "end": "941000"
  },
  {
    "text": "what happened to that request in a distributed architecture and so let's let's take a look at a real example of a",
    "start": "710890",
    "end": "717250"
  },
  {
    "text": "trace well it's not quite real it's a toy example still but so it's it's a",
    "start": "717250",
    "end": "724870"
  },
  {
    "text": "Gantt chart and we can see that like on the left side there is a sort of a",
    "start": "724870",
    "end": "731260"
  },
  {
    "text": "hierarchy of parent-child relationships between services and operations who called home and then we have a time line",
    "start": "731260",
    "end": "740430"
  },
  {
    "text": "like with the time measures above the timeline there is a mini-map of that whole trace because sometimes the full",
    "start": "740430",
    "end": "747580"
  },
  {
    "text": "trace is sort of very many pages long so if you want to get a grasp of what looks overall then that mini-map shows you the",
    "start": "747580",
    "end": "754390"
  },
  {
    "text": "kind of the total structure of it it's specific to Jaeger but some other tracing systems have that visualization",
    "start": "754390",
    "end": "760780"
  },
  {
    "text": "as well and then some of the things that tracing makes like immediately apparent",
    "start": "760780",
    "end": "766150"
  },
  {
    "text": "is that here's the block in transaction right so the separation MySQL query",
    "start": "766150",
    "end": "771420"
  },
  {
    "text": "blocks all the up up like calls above it right and like nothing can proceed until",
    "start": "771420",
    "end": "777040"
  },
  {
    "text": "these things we can really clearly see that just from the layout of the of the Gantt chart and then on the other hand",
    "start": "777040",
    "end": "782650"
  },
  {
    "text": "on the right side we have a series of steps we should a staircase that indicates that okay well there is a",
    "start": "782650",
    "end": "789760"
  },
  {
    "text": "number of operations happening but they all seem to be happening sequentially right so if you were troubleshooting a",
    "start": "789760",
    "end": "795070"
  },
  {
    "text": "specific performance issues and that clearly point you to two places where you can potentially improve things right",
    "start": "795070",
    "end": "800500"
  },
  {
    "text": "try to reduce the SQL or and try to paralyze these things why Nolan cereal I mean there might be good",
    "start": "800500",
    "end": "806390"
  },
  {
    "text": "reason why they didn't in cereal but in this case like if you knew that application that there isn't that could be paralyzed right",
    "start": "806390",
    "end": "812480"
  },
  {
    "text": "and finally on there's a tiny thing that's like a red exclamation point so",
    "start": "812480",
    "end": "817820"
  },
  {
    "text": "when there is an error instrumentation captures that and tags it with a buddhist panel so we can display it it's",
    "start": "817820",
    "end": "824570"
  },
  {
    "text": "not very visible but that they are sort of bubbles up if you start collapsing the hierarchy on the left so sometimes",
    "start": "824570",
    "end": "830660"
  },
  {
    "text": "it's actually very easy to navigate from the very top one you will get an error you expand it out the air actually move",
    "start": "830660",
    "end": "836150"
  },
  {
    "text": "to one of the five services or something and you can drill down this way and",
    "start": "836150",
    "end": "841160"
  },
  {
    "text": "finally when you click on one span you can get into details about that span and",
    "start": "841160",
    "end": "846200"
  },
  {
    "text": "those details are usually very rich right you obviously have some timing information when it started but you also",
    "start": "846200",
    "end": "851840"
  },
  {
    "text": "have two sets of metadata called tags and logs so tags are more just like some",
    "start": "851840",
    "end": "858290"
  },
  {
    "text": "key value pairs attached to span and one of them for example is SQL query which could be very useful when you",
    "start": "858290",
    "end": "863780"
  },
  {
    "text": "investigate in a problem that it could be very detailed you can include all the parameters of that query again I mean if",
    "start": "863780",
    "end": "870860"
  },
  {
    "text": "you there's like very few tools that give you that kind of information right and the logs are sort of just you can",
    "start": "870860",
    "end": "878870"
  },
  {
    "text": "think of just timed events within the life cycle of a span but they look like logs just like it's actually limited to",
    "start": "878870",
    "end": "885860"
  },
  {
    "text": "the span and I think that's like an important distinction of the tracing as a tool is that all the information and",
    "start": "885860",
    "end": "892730"
  },
  {
    "text": "the trace is very contextual right it's if that query SQL query it belongs just",
    "start": "892730",
    "end": "898850"
  },
  {
    "text": "to the span if you have another span there's going to be another scale query or the logs they also structured within",
    "start": "898850",
    "end": "904970"
  },
  {
    "text": "this single span so that's very different from the normal log and tools where you just have a stream of things",
    "start": "904970",
    "end": "910280"
  },
  {
    "text": "and then you need to somehow filter them is to like okay what happened in this one single request even if it's on a",
    "start": "910280",
    "end": "916340"
  },
  {
    "text": "single thread it's kind of hard so tracing certain makes it a lot easier to navigate I I spoke to one of the users",
    "start": "916340",
    "end": "925130"
  },
  {
    "text": "of Jaeger open source and they said they kind of stopped doing login altogether and they look only to the traces right",
    "start": "925130",
    "end": "932060"
  },
  {
    "text": "because that allows them much like easier investigation of things than doing like normal login and - Elka",
    "start": "932060",
    "end": "939170"
  },
  {
    "text": "something and we can also trace a synchronous workflows with this - like",
    "start": "939170",
    "end": "945830"
  },
  {
    "start": "941000",
    "end": "1050000"
  },
  {
    "text": "this example was purely RPC right but but if you have a system based on Kafka",
    "start": "945830",
    "end": "950960"
  },
  {
    "text": "in fact I when I was writing my book I had a chapter about exactly that so I",
    "start": "950960",
    "end": "956960"
  },
  {
    "text": "can decided to put it in a slide so those like this more complication tracing talk which is like online chat",
    "start": "956960",
    "end": "962120"
  },
  {
    "text": "application where you can chat with someone and then you can also put like a giffy and some title and it will pull an",
    "start": "962120",
    "end": "968810"
  },
  {
    "text": "image right very standard thing and so the architecture of that application looked like this you have a JavaScript",
    "start": "968810",
    "end": "974570"
  },
  {
    "text": "front-end an IP h api server which receives the messages and that's what",
    "start": "974570",
    "end": "979940"
  },
  {
    "text": "represents the actual trace like the transaction coming into the api service and then it deals was like the registers",
    "start": "979940",
    "end": "986990"
  },
  {
    "text": "used to store the messages Kafka is used to communicate between all the components within one right and then",
    "start": "986990",
    "end": "992930"
  },
  {
    "text": "making calls to the gif is external and so if you take the trace that's what it",
    "start": "992930",
    "end": "999080"
  },
  {
    "text": "looks like it's so very similar to the previous Artie hit trace on the Left we have the hierarchy of sort of operations",
    "start": "999080",
    "end": "1006040"
  },
  {
    "text": "happening in in another and then this this span I don't know if you can read",
    "start": "1006040",
    "end": "1013390"
  },
  {
    "text": "that but it says like storage service receive like chatty API sent right so",
    "start": "1013390",
    "end": "1018760"
  },
  {
    "text": "that's the chat API application sending a message and and that's the record it",
    "start": "1018760",
    "end": "1024069"
  },
  {
    "text": "as a long span and why it's long but it's kind of performance issues with the drivers and then they are that you spend",
    "start": "1024069",
    "end": "1030130"
  },
  {
    "text": "the tiny ones are the two other services receiving this message so even though",
    "start": "1030130",
    "end": "1035558"
  },
  {
    "text": "it's a Kafka streaming application sort of or messaging at least not streaming you can still use tracing and",
    "start": "1035559",
    "end": "1042069"
  },
  {
    "text": "investigate and all the power of that like - Latoya described before is still there you can drill down and do the",
    "start": "1042069",
    "end": "1047678"
  },
  {
    "text": "interesting things so to summarize this so a single trace is is very powerful",
    "start": "1047679",
    "end": "1054540"
  },
  {
    "start": "1050000",
    "end": "1301000"
  },
  {
    "text": "rich source of data to investigate the behavior given request right you can",
    "start": "1054540",
    "end": "1060420"
  },
  {
    "text": "it's it's it tells the story of what happens for that request across all the micro services and it's contextual it",
    "start": "1060420",
    "end": "1067690"
  },
  {
    "text": "allows like very deep drill down - what exactly happened at every step and that's kind of the more",
    "start": "1067690",
    "end": "1073360"
  },
  {
    "text": "instrumentation you put into more details you will get so it's like a knob you have to control it you can think of",
    "start": "1073360",
    "end": "1080680"
  },
  {
    "text": "it as the distributed stack tree sometimes right so this is one of the issues with micro sources as you split the manalese",
    "start": "1080680",
    "end": "1085960"
  },
  {
    "text": "in the Manolis one exception happens you get two full stack trace you kind of know where the things happened",
    "start": "1085960",
    "end": "1090970"
  },
  {
    "text": "whereas in distributed system you just get one single piece of it and what trace gives you the stack trace back",
    "start": "1090970",
    "end": "1097210"
  },
  {
    "text": "essentially across micro-services however there are some issues with using",
    "start": "1097210",
    "end": "1102310"
  },
  {
    "text": "that as to solve like all the troubleshooting problems one of them is well it talks about a single transaction",
    "start": "1102310",
    "end": "1109180"
  },
  {
    "text": "right well how do you know that that transaction is actually representative of anything so yes if it was a specific",
    "start": "1109180",
    "end": "1115360"
  },
  {
    "text": "problem that you were trying to investigate and that's the trace representing that transaction then it's",
    "start": "1115360",
    "end": "1120520"
  },
  {
    "text": "useful but what if you are trying to analyze some performance issues let's say like I said users can take right at",
    "start": "1120520",
    "end": "1127030"
  },
  {
    "text": "over what what happened right so you drill down you need to find out what causes this",
    "start": "1127030",
    "end": "1132220"
  },
  {
    "text": "and if you pick one transaction and it has some issue in it that may not in any way correlate with",
    "start": "1132220",
    "end": "1138130"
  },
  {
    "text": "the issue of the actual alert that you get right and another problem which you",
    "start": "1138130",
    "end": "1144100"
  },
  {
    "text": "couldn't see in the previous examples is that but traces themselves can get exceptionally complex I will show some",
    "start": "1144100",
    "end": "1151210"
  },
  {
    "text": "statistics soon so this is an example real example from from Jager production",
    "start": "1151210",
    "end": "1158830"
  },
  {
    "text": "at uber so I think driver goes on line that's like a type of request and when",
    "start": "1158830",
    "end": "1164680"
  },
  {
    "text": "the drivers start their app right so we can see here that there's a this doesn't",
    "start": "1164680",
    "end": "1172210"
  },
  {
    "text": "work the number 30 services involved in that request 200 spans so it's about",
    "start": "1172210",
    "end": "1179230"
  },
  {
    "text": "like hundred two more RPC calls in that request that's a pretty big thing right",
    "start": "1179230",
    "end": "1184390"
  },
  {
    "text": "so I like I couldn't display it so I put a mini-map at the bottom you can see that's pretty complex structure already",
    "start": "1184390",
    "end": "1190810"
  },
  {
    "text": "so if you put it as a Gantt chart on the screen then you have pages and pages to scroll if you want to try to to actually",
    "start": "1190810",
    "end": "1197350"
  },
  {
    "text": "reason about this thing right and that's that that's not the largest trace at all right so here I have another",
    "start": "1197350",
    "end": "1204260"
  },
  {
    "text": "this is a heat map of our like in the egg reproduction trace sizes A to B right so we can see that well most of",
    "start": "1204260",
    "end": "1211190"
  },
  {
    "text": "the time we kind of in a small ranges but we pretty often get traces which",
    "start": "1211190",
    "end": "1218960"
  },
  {
    "text": "what about like 60 50 thousand spans in a trace right occasionally we get 100",
    "start": "1218960",
    "end": "1225860"
  },
  {
    "text": "or 500 sometimes we get this one was like whatever 10 million spans in it if",
    "start": "1225860",
    "end": "1231020"
  },
  {
    "text": "so what do you do with that right how do you even visualize this thing or what try to troubleshoot that and so I mean",
    "start": "1231020",
    "end": "1239210"
  },
  {
    "text": "there are various techniques of doing that one is sort of more number based",
    "start": "1239210",
    "end": "1244280"
  },
  {
    "text": "right and actually Facebook is doing that so Facebook they have a infrastructure very advanced because",
    "start": "1244280",
    "end": "1250130"
  },
  {
    "text": "they've been doing tracing for like 10 years where you can run a heat your extraction on the two populations of",
    "start": "1250130",
    "end": "1256160"
  },
  {
    "text": "traces and then you compare compare them like the performance characteristics saying like Oh on average this call was",
    "start": "1256160",
    "end": "1261260"
  },
  {
    "text": "here but in this population D this the same call is like taking twice as long right across many traces so that like",
    "start": "1261260",
    "end": "1268640"
  },
  {
    "text": "removes the anomalous we're very good one but one issue with that approach well maybe not issue but but like sort",
    "start": "1268640",
    "end": "1275360"
  },
  {
    "text": "of going back to the durability versus monitoring is that when you start taking numbers that means that you are already",
    "start": "1275360",
    "end": "1281300"
  },
  {
    "text": "looking for answers to questions you need to ask upfront right you decided",
    "start": "1281300",
    "end": "1286310"
  },
  {
    "text": "that that number is going to be important and I'm approaching it from what what if I didn't know what you",
    "start": "1286310",
    "end": "1292280"
  },
  {
    "text": "asked like if I knew what to ask maybe I even knew what to fix in the first place right why should I have like the",
    "start": "1292280",
    "end": "1297320"
  },
  {
    "text": "monitoring for this one and so I really want to be able to ask questions that I",
    "start": "1297320",
    "end": "1303440"
  },
  {
    "start": "1301000",
    "end": "1481000"
  },
  {
    "text": "didn't think I needed to ask upfront right and that led us into a different",
    "start": "1303440",
    "end": "1308960"
  },
  {
    "text": "direction with with our tooling at uber we just we decided to explore like various visualization techniques that",
    "start": "1308960",
    "end": "1314750"
  },
  {
    "text": "allows us to tackle complexity of like these traces in a different way and so that's one of them is just taking",
    "start": "1314750",
    "end": "1325670"
  },
  {
    "text": "a different representation of the trace instead of a Gantt chart it's just a graph of articles right may or may not",
    "start": "1325670",
    "end": "1333230"
  },
  {
    "text": "be useful but one thing that it so it's it's sort of vertically time order so you can",
    "start": "1333230",
    "end": "1339200"
  },
  {
    "text": "you can read it again as a narrative these things happens in that order right and then another thing is that a lot of",
    "start": "1339200",
    "end": "1346130"
  },
  {
    "text": "times services make repeated calls to each other like if you call and radius then I like this is a previous example",
    "start": "1346130",
    "end": "1353350"
  },
  {
    "text": "the toy example where is like a staircase there's ten calls to radius from one service so in this graph that's",
    "start": "1353350",
    "end": "1360020"
  },
  {
    "text": "going to be just one single edge we collapse the repeated edges because well well they're important if you actually drill them down they're still there it's",
    "start": "1360020",
    "end": "1366409"
  },
  {
    "text": "just it's just visualization it's not like an aggregation but in order to comprehend them they are kind of just",
    "start": "1366409",
    "end": "1373490"
  },
  {
    "text": "noise they don't add too much to do to your comprehension right and so this is like basic techniques that they may not",
    "start": "1373490",
    "end": "1379220"
  },
  {
    "text": "be exceptionally useful just on this graph but you will keep using them for more visualizations that are helpful",
    "start": "1379220",
    "end": "1386120"
  },
  {
    "text": "that I'll show you later another thing that we also tried is the color coding",
    "start": "1386120",
    "end": "1393440"
  },
  {
    "text": "here right the color coordinates I think by service which again is not super useful although you can you can even",
    "start": "1393440",
    "end": "1399470"
  },
  {
    "text": "imagine other color coding maybe like if you color it by the type of technology",
    "start": "1399470",
    "end": "1405140"
  },
  {
    "text": "using by the service so you can say oh these are my Java services this is my database service it seemed like that that might be a lot more useful",
    "start": "1405140",
    "end": "1410450"
  },
  {
    "text": "organization than just random sort of by service color coding but the other type of color coding is is a heat map or",
    "start": "1410450",
    "end": "1416990"
  },
  {
    "text": "latencies right so here we essentially just reuse the red heat map to represent",
    "start": "1416990",
    "end": "1424549"
  },
  {
    "text": "the longest duration of a span and that gives you immediately a path to understand well if you look in for",
    "start": "1424549",
    "end": "1431270"
  },
  {
    "text": "latency in the stress it's obvious where it is right use well the top one is obviously the longest one because that",
    "start": "1431270",
    "end": "1437029"
  },
  {
    "text": "was the experience but if you kind of follow follow and then this is the section where bad things happens right",
    "start": "1437029",
    "end": "1444230"
  },
  {
    "text": "so you see that and that's like your past you to understand this so that's",
    "start": "1444230",
    "end": "1450890"
  },
  {
    "text": "good however it's not good enough if you are imagine you have two software",
    "start": "1450890",
    "end": "1458630"
  },
  {
    "text": "two versions of software deployed and one like the later version like has a box or an air or something right how do",
    "start": "1458630",
    "end": "1465200"
  },
  {
    "text": "you understand that do you just go dump the source code of that latest version",
    "start": "1465200",
    "end": "1470400"
  },
  {
    "text": "to regional front to back no right you look at the diffs what happened between those two inversions that's the primary",
    "start": "1470400",
    "end": "1477180"
  },
  {
    "text": "way to understand what's what change in the code and so jefes are actually is a",
    "start": "1477180",
    "end": "1482510"
  },
  {
    "start": "1481000",
    "end": "1685000"
  },
  {
    "text": "traditional way of looking at performance profiles and comparing them right if you are investigating a memory",
    "start": "1482510",
    "end": "1488040"
  },
  {
    "text": "leak how do you do typically you take two snapshots and you compare them and so that was natural for us to explore that",
    "start": "1488040",
    "end": "1494430"
  },
  {
    "text": "well we can do that with traces as well right which led us to that a tool which just does a comparison of two traces right",
    "start": "1494430",
    "end": "1502080"
  },
  {
    "text": "and you can think about what yeah well you pick a trace which is successful at a given end point and then a trace which",
    "start": "1502080",
    "end": "1507960"
  },
  {
    "text": "failed and then you compare them and you try to understand like looking at one of them is very hard like we said it's like",
    "start": "1507960",
    "end": "1513840"
  },
  {
    "text": "can be millions of spans in it but comparison reduces that complexity a lot and and here is an example that I'm",
    "start": "1513840",
    "end": "1521130"
  },
  {
    "text": "gonna walk through so the I don't know if you can see that but yeah it's very",
    "start": "1521130",
    "end": "1526890"
  },
  {
    "text": "small but the left trace has 500 spans the right one has 300 spans right so",
    "start": "1526890",
    "end": "1532200"
  },
  {
    "text": "cycle rated twice as large as that scary trace that I showed before for driver Gore online and so and as I said the",
    "start": "1532200",
    "end": "1542250"
  },
  {
    "text": "same principles of graph constructions apply here so it's like a chronologically sorted top-down and",
    "start": "1542250",
    "end": "1547950"
  },
  {
    "text": "repeated edges are removed and then we",
    "start": "1547950",
    "end": "1554730"
  },
  {
    "text": "do the structural comparison of this here and we color code that structure comparison so on number one we see a",
    "start": "1554730",
    "end": "1561390"
  },
  {
    "text": "bunch of gray noise which means that they are present in both traces on left and right so there's no change between in the",
    "start": "1561390",
    "end": "1567420"
  },
  {
    "text": "behavior then at the bottom we see there's like a whole section in red and",
    "start": "1567420",
    "end": "1574020"
  },
  {
    "text": "the color coding is inspired by the code gives tools so that everyone is familiar with the division is like it's missing from the right right so like it's",
    "start": "1574020",
    "end": "1580860"
  },
  {
    "text": "present tonal about missing on the right that's the red color then at the top",
    "start": "1580860",
    "end": "1586800"
  },
  {
    "text": "right we have like slightly light colors again because the edges are collapsed there might be differences the number of",
    "start": "1586800",
    "end": "1593790"
  },
  {
    "text": "those edges right and so those colors like light colors are present so this is that structurally they're similar but there are some statistical differences",
    "start": "1593790",
    "end": "1600480"
  },
  {
    "text": "in how many calls happens between these things and finally so the important part of the tool is that",
    "start": "1600480",
    "end": "1605620"
  },
  {
    "text": "you look at this you immediately see okay well there's something wrong going on at the bottom but because the whole",
    "start": "1605620",
    "end": "1611950"
  },
  {
    "text": "swath of calls didn't happen and so if you want to investigate the problem that's probably where you should look",
    "start": "1611950",
    "end": "1617650"
  },
  {
    "text": "for right and this actually is a real production trace from uber its application so the",
    "start": "1617650",
    "end": "1625690"
  },
  {
    "text": "order couldn't complete I think transaction like some there's some problem with the credit card so",
    "start": "1625690",
    "end": "1632500"
  },
  {
    "text": "transaction rollback and therefore the whole section below didn't happen in a file trace on the race so that that's",
    "start": "1632500",
    "end": "1638650"
  },
  {
    "text": "the explanation one other thing is that again because this is just visualization not an aggregation you can go back to",
    "start": "1638650",
    "end": "1645250"
  },
  {
    "text": "the raw trace and investigate right so we can go to the file trace and we drill down and we can see a key of all these",
    "start": "1645250",
    "end": "1652419"
  },
  {
    "text": "are the details and this is like an exception saying you have outstanding bonds that's why the credit card check",
    "start": "1652419",
    "end": "1658360"
  },
  {
    "text": "failed or something like that right we could have gotten here by looking at the trace from the beginning but again if",
    "start": "1658360",
    "end": "1665049"
  },
  {
    "text": "that trace has I don't know Chan 10,000 spans then it would have been pretty hard whereas with with the diff tool first we",
    "start": "1665049",
    "end": "1673090"
  },
  {
    "text": "narrow down the place where the problem resides and then we have a deep link from that going into the span details",
    "start": "1673090",
    "end": "1679450"
  },
  {
    "text": "that you can drill down further so",
    "start": "1679450",
    "end": "1685110"
  },
  {
    "start": "1685000",
    "end": "1782000"
  },
  {
    "text": "another production story we used to have a like last year or maybe two years ago",
    "start": "1685110",
    "end": "1692650"
  },
  {
    "text": "we're doing the migration from one data center to another and the data centers",
    "start": "1692650",
    "end": "1697690"
  },
  {
    "text": "were nearby right so what I mean nearby I mean in America distance is measured in units of time right like how far are",
    "start": "1697690",
    "end": "1704620"
  },
  {
    "text": "you I'm 10 minutes away so same here the data centers were like few milliseconds",
    "start": "1704620",
    "end": "1709630"
  },
  {
    "text": "away so when we migrated a whole bunch of services to the second data center we were expecting latency to not be",
    "start": "1709630",
    "end": "1715929"
  },
  {
    "text": "affected much like what within a second that's fine but instead we saw that the",
    "start": "1715929",
    "end": "1721330"
  },
  {
    "text": "latency almost doubled and we were trying to investigate why that is and so",
    "start": "1721330",
    "end": "1726419"
  },
  {
    "text": "we tried that difference tool that I just showed before right and so and that",
    "start": "1726419",
    "end": "1731679"
  },
  {
    "text": "was the sort of the outcome right so there's like very similar structure a lot of gray",
    "start": "1731679",
    "end": "1736840"
  },
  {
    "text": "notes not a lot of changes but then there is some sections so here's yeah",
    "start": "1736840",
    "end": "1744279"
  },
  {
    "text": "the 2.7 seconds and and the right one is like two four seconds so that's twice",
    "start": "1744279",
    "end": "1750580"
  },
  {
    "text": "almost 50% increase in latency right so when we look at the difference this is here we go see we see the like a new",
    "start": "1750580",
    "end": "1757539"
  },
  {
    "text": "section of calls being made which kind strange why just the moving services to microcell to data center but we still",
    "start": "1757539",
    "end": "1765010"
  },
  {
    "text": "don't know from this view whether this green nodes actually responsible for almost like this massive increase in",
    "start": "1765010",
    "end": "1770860"
  },
  {
    "text": "latency another option maybe this whole increases actually spread out across multiple nodes because again this view",
    "start": "1770860",
    "end": "1777850"
  },
  {
    "text": "just doesn't show that it's not built for latency investigation and so as a",
    "start": "1777850",
    "end": "1782860"
  },
  {
    "start": "1782000",
    "end": "1929000"
  },
  {
    "text": "result we said well let's use the heat maps instead and that's the color coding we already saw and that became a lot",
    "start": "1782860",
    "end": "1789580"
  },
  {
    "text": "more useful in this case so we kind of saw that before but this is the difference now between two traces and so",
    "start": "1789580",
    "end": "1795909"
  },
  {
    "text": "again we have a section where there are no changes similar durations between in",
    "start": "1795909",
    "end": "1801640"
  },
  {
    "text": "spans right then we have a section with like white nose that saying well we can't compare it because that was the",
    "start": "1801640",
    "end": "1807159"
  },
  {
    "text": "section that was new in trace B so we kinda know what's going on there but even if we ignore that we can see",
    "start": "1807159",
    "end": "1812980"
  },
  {
    "text": "that there is already a very clear path of where the latency was introduced right and so once we drill down into",
    "start": "1812980",
    "end": "1821350"
  },
  {
    "text": "that service we realize that when the migration happened so like 3,000 microsomes you can't actually migrate",
    "start": "1821350",
    "end": "1827770"
  },
  {
    "text": "all of them at once right it's it's a process and so some of them weren't like migrated properly and so the particular",
    "start": "1827770",
    "end": "1835960"
  },
  {
    "text": "one was experienced in latency because of that it was like starting making cross it didn't understand as the configuration was messed up so instead",
    "start": "1835960",
    "end": "1842470"
  },
  {
    "text": "of calling locally within the data center who's callin across the region and introducing this huge delays and it",
    "start": "1842470",
    "end": "1849070"
  },
  {
    "text": "was doing it very many times so that what was responsible for the issue right so you can you can obviously mouse over",
    "start": "1849070",
    "end": "1856899"
  },
  {
    "text": "and see the details it says like what the percentage of latency increase this one is the most responsible this one is",
    "start": "1856899",
    "end": "1863500"
  },
  {
    "text": "like about 50% of total latency so you can also do another type of heat map was a sort of so-called self time over",
    "start": "1863500",
    "end": "1870370"
  },
  {
    "text": "span where you take all the time spent and the children subtract it and then keep that only as you're as you're like",
    "start": "1870370",
    "end": "1877720"
  },
  {
    "text": "indicator for latency that highlights the different types of issues so to summarize how this how this",
    "start": "1877720",
    "end": "1890290"
  },
  {
    "text": "approach is different from from just a single trace right so one is it's like it surfaces a lot less information about",
    "start": "1890290",
    "end": "1897309"
  },
  {
    "text": "the trace we condense that information and that allows us to actually comprehend the complex structure of a",
    "start": "1897309",
    "end": "1904270"
  },
  {
    "text": "trace much better and emphasizing the differences is really the key part because when you investigating",
    "start": "1904270",
    "end": "1910870"
  },
  {
    "text": "performance that gives you a lot narrower surface to focus then if you look at the whole thing at once right",
    "start": "1910870",
    "end": "1917170"
  },
  {
    "text": "and finally distinct comparison modes are very helpful because you can tune",
    "start": "1917170",
    "end": "1922480"
  },
  {
    "text": "them to specific problem that you investigation and they helpful more than",
    "start": "1922480",
    "end": "1927970"
  },
  {
    "text": "that way but there are some challenges with this one still so I said that",
    "start": "1927970",
    "end": "1936179"
  },
  {
    "start": "1929000",
    "end": "1978000"
  },
  {
    "text": "traces env water day one is successful another is unsuccessful but kind of like",
    "start": "1936179",
    "end": "1942010"
  },
  {
    "text": "first of all you have to pick the right baseline what is the successful trace and even if you pick one which had no",
    "start": "1942010",
    "end": "1947710"
  },
  {
    "text": "errors which looked normal from statistical distribution that may still be an anomaly that something wrong",
    "start": "1947710",
    "end": "1953860"
  },
  {
    "text": "happened here on average it doesn't happen right and so you compare and necessarily not necessarily the best",
    "start": "1953860",
    "end": "1960429"
  },
  {
    "text": "things right so what you really want is comparing a trace versus some sort of a",
    "start": "1960429",
    "end": "1965559"
  },
  {
    "text": "average behavior of the system that gives you much better understanding of how that failing trace is actually",
    "start": "1965559",
    "end": "1971860"
  },
  {
    "text": "different from the normal behavior and for that there is a next next tool that",
    "start": "1971860",
    "end": "1979720"
  },
  {
    "start": "1978000",
    "end": "2169000"
  },
  {
    "text": "I will present right now I know basically we have millions of traces in",
    "start": "1979720",
    "end": "1985990"
  },
  {
    "text": "the database so creating an aggregate of the behavior is in that heart so by the",
    "start": "1985990",
    "end": "1991600"
  },
  {
    "text": "way up until now I think all of that was open source and Jager this new tool is",
    "start": "1991600",
    "end": "1996910"
  },
  {
    "text": "its internal for uber for now we and spent time on open-source it so here",
    "start": "1996910",
    "end": "2006440"
  },
  {
    "text": "is the tool is specifically designed for root cause analysis it uses slightly",
    "start": "2006440",
    "end": "2012080"
  },
  {
    "text": "different color coding but and some other improvements but overall it's still very similar right so we see that",
    "start": "2012080",
    "end": "2018770"
  },
  {
    "text": "we have like a top-level operation and then po and there is a key it's actually empty here but you have a request and",
    "start": "2018770",
    "end": "2025250"
  },
  {
    "text": "response that can contain like a payload of the request sometimes very useful to drill down at the top outcome you can",
    "start": "2025250",
    "end": "2031310"
  },
  {
    "text": "understand what's going on in and also you can always go back to the the raw data will present in that tray so if you",
    "start": "2031310",
    "end": "2037880"
  },
  {
    "text": "want to drill down more details finally missing nodes are represented in",
    "start": "2037880",
    "end": "2044300"
  },
  {
    "text": "black so again our attention is immediately visually draw to this place saying yell this is the the area of the",
    "start": "2044300",
    "end": "2051260"
  },
  {
    "text": "of the trace that something bad happened and yet the color code is different the",
    "start": "2051260",
    "end": "2059990"
  },
  {
    "text": "white is sort of like a no change and red is reserved for like nodes with the error is specifically happening because",
    "start": "2059990",
    "end": "2066020"
  },
  {
    "text": "that's also sometimes very useful to to look at so this is a node that shows",
    "start": "2066020",
    "end": "2071210"
  },
  {
    "text": "there's an error and there's actually two errors so when you click on it you get the details on the right that kind",
    "start": "2071210",
    "end": "2078800"
  },
  {
    "text": "of describes what type of error was actually happening in there so this tool",
    "start": "2078800",
    "end": "2087340"
  },
  {
    "text": "has been exceptionally helpful in the past few months a tuber that once we rolled it out like the first responders",
    "start": "2087340",
    "end": "2093740"
  },
  {
    "text": "when they go from the business matrix failing to investigating where the issues occur they had anecdotes were",
    "start": "2093740",
    "end": "2101660"
  },
  {
    "text": "like the instead of 30 millions now they spent like two minutes to solve that thing right to two again to solve that",
    "start": "2101660",
    "end": "2107090"
  },
  {
    "text": "biggest problems that where the things are failing not why like in some cases tells you why in some cases doesn't but",
    "start": "2107090",
    "end": "2114530"
  },
  {
    "text": "at least where is the like the very time-consuming thing and very often once you know where you can already start to",
    "start": "2114530",
    "end": "2121190"
  },
  {
    "text": "think of how to remediate it without even figuring out why it's failing right because you can say well let's just",
    "start": "2121190",
    "end": "2126440"
  },
  {
    "text": "bypass the service let's like reroute around it something like that so there's lots of opportunities at that point once",
    "start": "2126440",
    "end": "2131870"
  },
  {
    "text": "you know where things are wrong and so what is the main difference of this approach it is like the this most",
    "start": "2131870",
    "end": "2138200"
  },
  {
    "text": "is like much broader context you don't compare one trace with another where they can be like the another one could",
    "start": "2138200",
    "end": "2144230"
  },
  {
    "text": "be anomaly and not represented if you really comparing with the population which is guaranteed to sort of smooth",
    "start": "2144230",
    "end": "2149330"
  },
  {
    "text": "out outages and the other one is that that tool was specifically built for root cause analysis right so there's",
    "start": "2149330",
    "end": "2155750"
  },
  {
    "text": "like there's like we're not trying to make it a very general purpose",
    "start": "2155750",
    "end": "2161000"
  },
  {
    "text": "investigative tools or even performance there's no performance analysis and to let just like outage mitigation is the",
    "start": "2161000",
    "end": "2167060"
  },
  {
    "text": "first thing and so like my last section is complexity of micro service is not",
    "start": "2167060",
    "end": "2176090"
  },
  {
    "start": "2169000",
    "end": "2341000"
  },
  {
    "text": "just about this sort of like communications of micro services it's also about data complexity because",
    "start": "2176090",
    "end": "2181190"
  },
  {
    "text": "imagine of how much data actually goes through that architecture and tracking that data is also important and trying",
    "start": "2181190",
    "end": "2188480"
  },
  {
    "text": "to understand where it goes and who were obviously the data company as such be",
    "start": "2188480",
    "end": "2193910"
  },
  {
    "text": "like if you will compute ETS compute route so we we need we use a lot of data all the time to actually operate the",
    "start": "2193910",
    "end": "2200000"
  },
  {
    "text": "system right and so our typical sort of flow of data is that there's a lot of",
    "start": "2200000",
    "end": "2205120"
  },
  {
    "text": "exchange is happening in our machine space then there is some eye synchronous asynchronous processing via Kafka",
    "start": "2205120",
    "end": "2211940"
  },
  {
    "text": "messaging and then in the end some of that data ends up with like in the data legs with HDFS and so understanding that",
    "start": "2211940",
    "end": "2220730"
  },
  {
    "text": "like the quality of the data can be very hard and so if you if you have a hive table and suddenly it's like it looks",
    "start": "2220730",
    "end": "2227840"
  },
  {
    "text": "completely wrong and you try to answer all where this data came from well it came from this 500 transformations",
    "start": "2227840",
    "end": "2233600"
  },
  {
    "text": "upstream right well you need to be able to trace that somehow and tracing is not",
    "start": "2233600",
    "end": "2239030"
  },
  {
    "text": "necessarily always like able to solve that but it's part of the solution right so the solution is that we will build a",
    "start": "2239030",
    "end": "2244850"
  },
  {
    "text": "tool internally I'm sure it's too small but it just like conceptually you can",
    "start": "2244850",
    "end": "2250490"
  },
  {
    "text": "understand so on the Left there's a direct EC space right so something happening that the data be transformed and in the middle there is some Kafka",
    "start": "2250490",
    "end": "2257210"
  },
  {
    "text": "stream and then on the right side there's like a series of five tables like Kafka he ends up in one table as",
    "start": "2257210",
    "end": "2263540"
  },
  {
    "text": "this and then it gets transformed or transformed etc potentially joined so this tool actually",
    "start": "2263540",
    "end": "2269000"
  },
  {
    "text": "looks at individual data elements right in this case I focus was the Kafka",
    "start": "2269000",
    "end": "2274640"
  },
  {
    "text": "stream like how the messages in this Kafka stream where they come from and where they end up right and so that",
    "start": "2274640",
    "end": "2280850"
  },
  {
    "text": "that's what the graph shows you can refocus it to other things you can also filter it down to specific data elements",
    "start": "2280850",
    "end": "2286610"
  },
  {
    "text": "that saying I'm not interested in the whole trip I'm interested in I don't know let's start point of the trip like",
    "start": "2286610",
    "end": "2291920"
  },
  {
    "text": "where that came from right and so you can you can drill down and so the tracing part here is really the RPC",
    "start": "2291920",
    "end": "2297980"
  },
  {
    "text": "space and some partially Kafka teen Kafka space but the hive transformations",
    "start": "2297980",
    "end": "2303830"
  },
  {
    "text": "those are done more with the static analysis of like the relationships between tables",
    "start": "2303830",
    "end": "2309530"
  },
  {
    "text": "I mean tracing sometimes like has a problem in that space because of tracing",
    "start": "2309530",
    "end": "2315410"
  },
  {
    "text": "works when you have a very well-defined transaction when you start like join in an aggregation data then the notion of a",
    "start": "2315410",
    "end": "2322880"
  },
  {
    "text": "transaction becomes very vague so we actually combine in a lot of different data and so tracing naturally stops",
    "start": "2322880",
    "end": "2328460"
  },
  {
    "text": "there you can't really model that only just analogical scale so and just to",
    "start": "2328460",
    "end": "2334760"
  },
  {
    "text": "close this quickly all of this is only possible if we have very high quality",
    "start": "2334760",
    "end": "2341710"
  },
  {
    "text": "instrumentation in the systems right and instrumentation is actually the hardest part of tracing getting it in there and",
    "start": "2341710",
    "end": "2348500"
  },
  {
    "text": "collecting data is hard building tools is easy part and today all our software",
    "start": "2348500",
    "end": "2353540"
  },
  {
    "text": "is very highly composable we tend to use a lot of open source frameworks in our application right so if you have a micro",
    "start": "2353540",
    "end": "2360080"
  },
  {
    "text": "service you probably have some server framework that you use do you have some RPC framework to make calls downstream",
    "start": "2360080",
    "end": "2366110"
  },
  {
    "text": "some database drivers and message drivers so if we want to trace all of that we need instrumentation and at all",
    "start": "2366110",
    "end": "2373520"
  },
  {
    "text": "those components and that instrumentation needs to work together and so but if they're open-source",
    "start": "2373520",
    "end": "2379610"
  },
  {
    "text": "MA sort of like you need some sort of a standard to actually have them speak the",
    "start": "2379610",
    "end": "2384980"
  },
  {
    "text": "same language right because if they don't we have traces which come into a service and die and then the next phrase",
    "start": "2384980",
    "end": "2390950"
  },
  {
    "text": "goes out of your service that's not what we want we want the continue each of the trace right so and I want to just call",
    "start": "2390950",
    "end": "2397130"
  },
  {
    "text": "out to two projects that happen in the industry today one is an open telemetry a new project announced at sin CF it's a",
    "start": "2397130",
    "end": "2404590"
  },
  {
    "text": "it's a next iteration of two previous project open tracing and open sensors if you've heard of them right so those two",
    "start": "2404590",
    "end": "2410650"
  },
  {
    "text": "projects decided to merge the efforts and basically become one single standard rather than competing standards and the",
    "start": "2410650",
    "end": "2416680"
  },
  {
    "text": "other one is in the w3c there's the working group which works on the data formats for tracing that includes like",
    "start": "2416680",
    "end": "2422620"
  },
  {
    "text": "how you pass data between processes so called trace context and in the future it will also include how you send traces",
    "start": "2422620",
    "end": "2429250"
  },
  {
    "text": "out of process that's like early work started but hasn't been done a lot of it",
    "start": "2429250",
    "end": "2436080"
  },
  {
    "start": "2436000",
    "end": "2517000"
  },
  {
    "text": "and to summarize distributed tracing is definitely one of the most helpful tools",
    "start": "2436080",
    "end": "2443560"
  },
  {
    "text": "for well observability tools at least for understanding and and tackling the complexity introduced by micro services",
    "start": "2443560",
    "end": "2450960"
  },
  {
    "text": "visualizations are an important part of that because the tools itself collects",
    "start": "2450960",
    "end": "2457330"
  },
  {
    "text": "so much data that it's very hard to just look at that data in the raw format so we realizations help our visual cortex",
    "start": "2457330",
    "end": "2465430"
  },
  {
    "text": "to process that data and much quicker and sort of narrow down things that are important out of this mass of data and",
    "start": "2465430",
    "end": "2472300"
  },
  {
    "text": "finally distributed tracing I personally think we just scratched the surface with",
    "start": "2472300",
    "end": "2478120"
  },
  {
    "text": "that because we think that it's going to be sort of like a core driver for",
    "start": "2478120",
    "end": "2484770"
  },
  {
    "text": "automating a lot of our operations with micro services because that gives us like unparalleled insights about how our",
    "start": "2484770",
    "end": "2491920"
  },
  {
    "text": "architecture operates in reality right so we have engineers who design those",
    "start": "2491920",
    "end": "2497230"
  },
  {
    "text": "systems and they think they know how the system works but I mean the system like behaves the way it wants to behave right",
    "start": "2497230",
    "end": "2503590"
  },
  {
    "text": "and when we have so many services and all the interactions happening all the time so tracing monitors that in real",
    "start": "2503590",
    "end": "2509650"
  },
  {
    "text": "time it gives a very accurate picture of what happens today and not what you thought you designed in the system and",
    "start": "2509650",
    "end": "2515980"
  },
  {
    "text": "that's my talk thank you very much and if you want to find me well social media I have it on on the website",
    "start": "2515980",
    "end": "2522440"
  },
  {
    "start": "2517000",
    "end": "2847000"
  },
  {
    "text": "[Applause]",
    "start": "2522440",
    "end": "2528960"
  },
  {
    "text": "so we have time for questions - that someone has a question hi thanks for the",
    "start": "2528960",
    "end": "2540400"
  },
  {
    "text": "talk this open telemetry combine and open sends us an open trace and BGP is gonna choose it's a new API but it will",
    "start": "2540400",
    "end": "2548500"
  },
  {
    "text": "provide the backwards compatibility shrimp's for both of those so the existing instrumentation would work with",
    "start": "2548500",
    "end": "2553630"
  },
  {
    "text": "open telemetry thank you another question",
    "start": "2553630",
    "end": "2559530"
  },
  {
    "text": "thank you for your talk I have a question do you use some sampling strategies for specifically enumerators",
    "start": "2562200",
    "end": "2570670"
  },
  {
    "text": "in the request yes we do sample all the requests and what is a reasonable",
    "start": "2570670",
    "end": "2576640"
  },
  {
    "text": "sampling configuration it's actually very varied because we have adaptive sampling which sensitive to the type of",
    "start": "2576640",
    "end": "2583420"
  },
  {
    "text": "service and the traffic that service generates and so if you have low key peers service will sample probably",
    "start": "2583420",
    "end": "2589120"
  },
  {
    "text": "hundred percent of it if it's a very high then it's gonna read decrease that oh and and what is operational",
    "start": "2589120",
    "end": "2595320"
  },
  {
    "text": "complexity cost to manage all those traces store this data there isn't much",
    "start": "2595320",
    "end": "2600790"
  },
  {
    "text": "I mean it's kind of depends on how how well you have infrastructure support and in terms of storage because we we had a",
    "start": "2600790",
    "end": "2607570"
  },
  {
    "text": "bunch of issues with Cassandra we had to manage it once we moved to manage Cassandra by another team sort of the",
    "start": "2607570",
    "end": "2613210"
  },
  {
    "text": "operational challenge we went away for us almost so yeah it kind of depends on the maturity of the organization more",
    "start": "2613210",
    "end": "2619510"
  },
  {
    "text": "than the tracing technology by itself is not really that hard so we depend on Kafka and Cassandra those are our main",
    "start": "2619510",
    "end": "2626230"
  },
  {
    "text": "dependencies okay thank you hi thanks",
    "start": "2626230",
    "end": "2635680"
  },
  {
    "text": "for the talk what what's your assessment on the current maturity level of the",
    "start": "2635680",
    "end": "2640900"
  },
  {
    "text": "distributed test tracing within the over a course could you be that I didn't get it what's the maturity level of distributed",
    "start": "2640900",
    "end": "2647980"
  },
  {
    "text": "tracing within over maturity well how do you find maturity level like adoption or",
    "start": "2647980",
    "end": "2654220"
  },
  {
    "text": "I mean so I think there are several",
    "start": "2654220",
    "end": "2659470"
  },
  {
    "text": "things here like adoption is what what I count as a doctrine is how many service is actually generating traces",
    "start": "2659470",
    "end": "2665069"
  },
  {
    "text": "right and so we're probably like 70% so it's pretty high but it's very hard to",
    "start": "2665069",
    "end": "2670829"
  },
  {
    "text": "get to the long tail because we started tracing when there's already a lot of services and so like you better start",
    "start": "2670829",
    "end": "2677880"
  },
  {
    "text": "when you just decide in the Microsoft architecture so I actually in my book I have a whole chapter about how to do",
    "start": "2677880",
    "end": "2683880"
  },
  {
    "text": "that right like because we didn't and so you want it like there's a lot of sort",
    "start": "2683880",
    "end": "2689579"
  },
  {
    "text": "of steps you want to take upfront you to make sure that this is sort of sustainable process right but another",
    "start": "2689579",
    "end": "2696240"
  },
  {
    "text": "aspect of maturity I guess is like how much usage the tracing gets and that I think we're still still pretty pretty",
    "start": "2696240",
    "end": "2702329"
  },
  {
    "text": "new to that I mean the what's interesting is that performance like",
    "start": "2702329",
    "end": "2707999"
  },
  {
    "text": "tracing was originally created to solve performance problems like people think oh this is for latency investigation",
    "start": "2707999",
    "end": "2713400"
  },
  {
    "text": "right and that was not the use case at all at uber ever like there's probably like a few I know power users who use",
    "start": "2713400",
    "end": "2720269"
  },
  {
    "text": "that fellating septum use Asians right I've seen examples of people doing that but by far that's not what you overuse",
    "start": "2720269",
    "end": "2726420"
  },
  {
    "text": "trace for it's it's for that it's for understanding the complexity for root cause analysis it's basically dealing",
    "start": "2726420",
    "end": "2731970"
  },
  {
    "text": "with the microservices complexity rather than I want to sort of like start optimizing performance I",
    "start": "2731970",
    "end": "2737670"
  },
  {
    "text": "guess we were still young company where we probably haven't reached the maturity where we actually like need to drill",
    "start": "2737670",
    "end": "2743430"
  },
  {
    "text": "down into performance issues that much do we have another question over there",
    "start": "2743430",
    "end": "2750890"
  },
  {
    "text": "thanks for the talk I have a quick question there you know pick up an",
    "start": "2755990",
    "end": "2763580"
  },
  {
    "text": "asynchronous call across the systems how is the the tracing metadata passed along is it part of the payload or so yeah I",
    "start": "2763580",
    "end": "2772460"
  },
  {
    "text": "mean it can be but I like internally to bar I strongly advised against that and",
    "start": "2772460",
    "end": "2777950"
  },
  {
    "text": "so what we're doing is we upgraded Kafka to 1.1 which supports records headers right and so with it passed the trace in",
    "start": "2777950",
    "end": "2785480"
  },
  {
    "text": "context is passed in the headers so that you da you don't touch the pale of the business payload because otherwise it",
    "start": "2785480",
    "end": "2791180"
  },
  {
    "text": "gets best like deploying it becomes much harder if you introduce it in all kinds of various business palos right and so",
    "start": "2791180",
    "end": "2797570"
  },
  {
    "text": "it's the same basically metadata headers is the same principle as works for RPC",
    "start": "2797570",
    "end": "2802760"
  },
  {
    "text": "calls an HTTP etcetera so I kind of I I would recommend to stick to that so if",
    "start": "2802760",
    "end": "2808160"
  },
  {
    "text": "you have different messaging system you would have to have custom logic to pass along this metadata or no there's no",
    "start": "2808160",
    "end": "2815720"
  },
  {
    "text": "customer logic because people use like standard drivers to write messages to Kafka let's say right and so that driver",
    "start": "2815720",
    "end": "2823250"
  },
  {
    "text": "has an instrumentation a middleware and it which says I'm going to take three contexts and packages into the record headers thanks so we have time for one",
    "start": "2823250",
    "end": "2834020"
  },
  {
    "text": "other questions do you have another question okay so then thanks a lot Yuri for you",
    "start": "2834020",
    "end": "2842300"
  },
  {
    "text": "awesome talk and give them a warm [Applause]",
    "start": "2842300",
    "end": "2848640"
  }
]