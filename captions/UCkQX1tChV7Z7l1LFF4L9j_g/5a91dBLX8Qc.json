[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "610",
    "end": "9339"
  },
  {
    "start": "25000",
    "end": "178000"
  },
  {
    "text": "the first thing I would like to talk about is uh y cradle you know why another build system right um can you",
    "start": "25160",
    "end": "32320"
  },
  {
    "text": "hear me well even in the last rows so um requirements for build systems have",
    "start": "32320",
    "end": "39120"
  },
  {
    "text": "changed tremendously in the last 10 15 years I remember when n came out I was so happy right I could uh I could",
    "start": "39120",
    "end": "45239"
  },
  {
    "text": "finally compile and jar my stuff up and copy some stuff around that was all I wanted to need to do basically and I",
    "start": "45239",
    "end": "53039"
  },
  {
    "text": "finally didn't need my IDE anymore to do that right so that was before test driven development that was uh before",
    "start": "53039",
    "end": "59320"
  },
  {
    "text": "edile develop velopment so don't tell you how how old I am um that was uh",
    "start": "59320",
    "end": "65840"
  },
  {
    "text": "definitely way before devops that was definitely way before the whole idea of continuous delivery right and uh uh all",
    "start": "65840",
    "end": "72840"
  },
  {
    "text": "this advancements in software development uh put a complete new load",
    "start": "72840",
    "end": "78680"
  },
  {
    "text": "on requirements onto the build systems right uh uh building the jar and copying",
    "start": "78680",
    "end": "84960"
  },
  {
    "text": "some stuff around and compiling is a tiny fraction of what you need to do when you automate your Enterprise you",
    "start": "84960",
    "end": "91320"
  },
  {
    "text": "have a heterogenous software St Scala JavaScript mobile application C++ and",
    "start": "91320",
    "end": "96880"
  },
  {
    "text": "when you want to do full continuous delivery you want to you need to you need to harmonize you need to you need",
    "start": "96880",
    "end": "102560"
  },
  {
    "text": "to standardize on on on this heterogenity you want to have a a standard binary dependency management",
    "start": "102560",
    "end": "109079"
  },
  {
    "text": "for all these different platforms uh you want to have a standard workflow a standard staging that the software often",
    "start": "109079",
    "end": "114640"
  },
  {
    "text": "needs to collaborate Java needs to talk with C++ or vice versa etc etc you have uh",
    "start": "114640",
    "end": "120479"
  },
  {
    "text": "you have a software stack that has grown in size the average software stack is much grow much bigger much larger than",
    "start": "120479",
    "end": "126320"
  },
  {
    "text": "it has been 10 years ago uh so you have uh uh you have performance issues um uh",
    "start": "126320",
    "end": "132400"
  },
  {
    "text": "feedback feedback Cycles are often way too long um so",
    "start": "132400",
    "end": "138400"
  },
  {
    "text": "um when you want to do Agile development it's it's even more important to get that in shape right uh uh that means you",
    "start": "138400",
    "end": "146120"
  },
  {
    "text": "want to integrate very often uh teams that work across continents want to integrate very often not as in the old",
    "start": "146120",
    "end": "152519"
  },
  {
    "text": "days where everyone was doing a job and then after one year you Tred to integrate it right so uh the",
    "start": "152519",
    "end": "158440"
  },
  {
    "text": "requirements have changed tremendously and out of out of those requirements",
    "start": "158440",
    "end": "164159"
  },
  {
    "text": "Gradle basically was was created the heart of Gradle is uh uh doing the heavy",
    "start": "164159",
    "end": "170159"
  },
  {
    "text": "lifting right for for the requirements of nowaday project Automation and",
    "start": "170159",
    "end": "176879"
  },
  {
    "text": "um one important important part of that that story is uh uh is the is the",
    "start": "176879",
    "end": "183760"
  },
  {
    "start": "178000",
    "end": "235000"
  },
  {
    "text": "difference between declarative and imperative build systems right what uh what does it mean how does this affect",
    "start": "183760",
    "end": "190879"
  },
  {
    "text": "the design of cradle I guess you all know an imperative build system in a Java World which is and and you all know",
    "start": "190879",
    "end": "197319"
  },
  {
    "text": "in the cative build system which is Maven so who of you is using and mostly for building Java",
    "start": "197319",
    "end": "203560"
  },
  {
    "text": "stuff who have used using Maven who have used using Gradle",
    "start": "203560",
    "end": "211680"
  },
  {
    "text": "thanks Peter for the end so uh yeah that's that's kind of the market share we we we used to sometimes",
    "start": "211840",
    "end": "219200"
  },
  {
    "text": "end is more than MAV and sometimes the other way around okay so um let's start with some demo uh",
    "start": "219200",
    "end": "227280"
  },
  {
    "text": "of uh GR in action to illustrate some of the concepts I will be talking deeper",
    "start": "227280",
    "end": "233000"
  },
  {
    "text": "about uh in in a couple of minutes so um this is the imperative layer of Gradle",
    "start": "233000",
    "end": "239560"
  },
  {
    "start": "235000",
    "end": "284000"
  },
  {
    "text": "right right you uh uh we don't call it targets we call it tasks and um you can",
    "start": "239560",
    "end": "245760"
  },
  {
    "text": "start with an empty Gradle build script right and create a task and you can execute it and it says hello world wow",
    "start": "245760",
    "end": "252280"
  },
  {
    "text": "there's more to say about this imperative layer but uh you have this this is this is the lowlevel layer of",
    "start": "252280",
    "end": "257759"
  },
  {
    "text": "Gradle right so now let's say you want to build a Java project right uh well",
    "start": "257759",
    "end": "263120"
  },
  {
    "text": "you could now do it the end way compile tasks create a compile task a process resources task a test task Etc",
    "start": "263120",
    "end": "270160"
  },
  {
    "text": "but you have a more declarative way of doing this right so here we have a Java",
    "start": "270160",
    "end": "275240"
  },
  {
    "text": "project production code lives in Source main Java test code lives in Source test Java some might know this",
    "start": "275240",
    "end": "281759"
  },
  {
    "text": "pattern and uh okay what can we do well we can tell Gradle hey Gradle this is a",
    "start": "281759",
    "end": "287759"
  },
  {
    "start": "284000",
    "end": "370000"
  },
  {
    "text": "Java project and if we now ask Gradle what we can do with this oops we have now a full life cycle of working with",
    "start": "287759",
    "end": "293919"
  },
  {
    "text": "the Java project right can you read well in the last row otherwise there are still there are",
    "start": "293919",
    "end": "301280"
  },
  {
    "text": "more seats available okay but it's not impossible",
    "start": "301280",
    "end": "307600"
  },
  {
    "text": "to read okay so uh you have a full life cycle for dealing with Java project you",
    "start": "307600",
    "end": "313199"
  },
  {
    "text": "can build you can test you can compile you can jar you can Java do Etc okay so",
    "start": "313199",
    "end": "320639"
  },
  {
    "text": "let's try this out let's try to build this Java project we have some compile error well we need or Apache commment",
    "start": "320639",
    "end": "328479"
  },
  {
    "text": "collections right so let's add that so we tell gr hey get your repositories get",
    "start": "328479",
    "end": "333600"
  },
  {
    "text": "your dependencies from Maven Central and um we declare for compiling we need",
    "start": "333600",
    "end": "339600"
  },
  {
    "text": "commment collection here we go run it one one more",
    "start": "339600",
    "end": "346639"
  },
  {
    "text": "time yeah another error another compile error",
    "start": "346639",
    "end": "351960"
  },
  {
    "text": "what is missing well junit right so we have to tell hey Gradle uh for compiling",
    "start": "351960",
    "end": "359960"
  },
  {
    "text": "and running the test you need junit good we add that boom we now buildt and",
    "start": "359960",
    "end": "367120"
  },
  {
    "text": "everything should be fine okay so uh so pretty similar to",
    "start": "367120",
    "end": "374160"
  },
  {
    "start": "370000",
    "end": "410000"
  },
  {
    "text": "Maven right you just say it's a Java project declare some dependencies and you stick",
    "start": "374160",
    "end": "379759"
  },
  {
    "text": "to certain conventions and everything works out of the box okay so",
    "start": "379759",
    "end": "386840"
  },
  {
    "text": "uh if we look now in a build there is a build directory the convention is that the jars end up in the lips directory",
    "start": "386840",
    "end": "394160"
  },
  {
    "text": "well this jar doesn't have a version number so let's declare a version for this project one Z and let's reexecute the",
    "start": "394160",
    "end": "404599"
  },
  {
    "text": "build and here we go there is now a Java standard one z.j okay now let's add some",
    "start": "404759",
    "end": "413479"
  },
  {
    "start": "410000",
    "end": "459000"
  },
  {
    "text": "requirements the requirement we want to add is uh we have integration tests we",
    "start": "413479",
    "end": "419000"
  },
  {
    "text": "want to to run as part of this project right and those integration tests have",
    "start": "419000",
    "end": "426039"
  },
  {
    "text": "specific external dependencies that are only that only apply to the integration test like XML unit okay so how would you",
    "start": "426039",
    "end": "434080"
  },
  {
    "text": "solve that requirement with Maven I want to run integration tests with specific",
    "start": "434080",
    "end": "441280"
  },
  {
    "text": "external dependencies within the same project I compile my production code and I run my unit tests Maven build Masters",
    "start": "441280",
    "end": "448720"
  },
  {
    "text": "provide your solu",
    "start": "448720",
    "end": "451319"
  },
  {
    "text": "right so you would you would write your own integration test plugin so the recommendation as the",
    "start": "458879",
    "end": "465879"
  },
  {
    "start": "459000",
    "end": "506000"
  },
  {
    "text": "recommendation would be create another sub project right basically uh the maven",
    "start": "465879",
    "end": "471759"
  },
  {
    "text": "way is that you don't have your integration tests in this project the maven way is create another sub project",
    "start": "471759",
    "end": "478440"
  },
  {
    "text": "for the integration test that works right it's just not the way you wanted to do it okay the tool wins the",
    "start": "478440",
    "end": "483680"
  },
  {
    "text": "framework wins another time right but get me done that way how would you",
    "start": "483680",
    "end": "489039"
  },
  {
    "text": "do this with ant pretty easy just copy yeah sorry",
    "start": "489039",
    "end": "494199"
  },
  {
    "text": "yeah",
    "start": "494199",
    "end": "496360"
  },
  {
    "text": "please with with NN IV oh yeah with NN IV you could easily solve this yes yeah",
    "start": "505159",
    "end": "511800"
  },
  {
    "start": "506000",
    "end": "557000"
  },
  {
    "text": "absolutely that's that's my point with and you would just copy another Java Target another copy Target for copying",
    "start": "511800",
    "end": "519640"
  },
  {
    "text": "the resources and uh uh and then a test Target that executes it with Ivy you",
    "start": "519640",
    "end": "524760"
  },
  {
    "text": "could deal with the external dependency management and would easily solve this problem not very declarative right but",
    "start": "524760",
    "end": "532279"
  },
  {
    "text": "you could easily solve it which is good the absolute quality of end right it",
    "start": "532279",
    "end": "537720"
  },
  {
    "text": "hardly logs you in until Things become unmaintainable but that's",
    "start": "537720",
    "end": "544240"
  },
  {
    "text": "yeah but that depends a lot also on the skills of course of the end buil Masters",
    "start": "544240",
    "end": "549320"
  },
  {
    "text": "so Carl definitely wouldn't accept the attribute unmaintainable for the Netflix build for good reasons I'm sure so uh",
    "start": "549320",
    "end": "557079"
  },
  {
    "start": "557000",
    "end": "595000"
  },
  {
    "text": "okay how can you do this with Gradle well you could do it the end way right you could say uh I create a compile task",
    "start": "557079",
    "end": "563760"
  },
  {
    "text": "and etc etc but can you can you solve it declaratively so here we have to",
    "start": "563760",
    "end": "569240"
  },
  {
    "text": "integration tests right Source integration test Java so uh let's let's",
    "start": "569240",
    "end": "575640"
  },
  {
    "text": "tell it to Gradle hey cradle I have sources I give them the name inte",
    "start": "575640",
    "end": "582079"
  },
  {
    "text": "integration tests they live in Source integration test Java and the resources",
    "start": "582079",
    "end": "588720"
  },
  {
    "text": "live in Source integration tests resources",
    "start": "588720",
    "end": "594760"
  },
  {
    "text": "okay and if you now look at the tasks you you see there is an intch test",
    "start": "594760",
    "end": "601079"
  },
  {
    "start": "595000",
    "end": "645000"
  },
  {
    "text": "classes task you did right I could have declared it directly all those tasks but",
    "start": "601079",
    "end": "606920"
  },
  {
    "text": "I have here in declarative element Source set intch test and by declaring I have sources by telling Gradle to what I",
    "start": "606920",
    "end": "614399"
  },
  {
    "text": "automatically get the how what can I do with those I automatically get an intch test classes task that compiles those",
    "start": "614399",
    "end": "621440"
  },
  {
    "text": "makees sense without explicitly declaring this tasks so that that's the",
    "start": "621440",
    "end": "626839"
  },
  {
    "text": "so it's a declarative way of saying I have additional sources right let's um",
    "start": "626839",
    "end": "632040"
  },
  {
    "text": "let's execute this intch test classes task oops again compile error after compile",
    "start": "632040",
    "end": "637600"
  },
  {
    "text": "eror okay couple of stuff is missing junit is missing ah or cradle person is",
    "start": "637600",
    "end": "643279"
  },
  {
    "text": "missing which is part of the production code well in my integration test I usually need my production classes to do",
    "start": "643279",
    "end": "648839"
  },
  {
    "start": "645000",
    "end": "682000"
  },
  {
    "text": "the integration test right another thing that is missing is or XML unit which I",
    "start": "648839",
    "end": "653959"
  },
  {
    "text": "which I need so let's take R hey for compiling those guys I need the the",
    "start": "653959",
    "end": "659240"
  },
  {
    "text": "output of the main source set the Java plugin is adding two Source sets with the name Main and test one represents",
    "start": "659240",
    "end": "667320"
  },
  {
    "text": "the production code the other represents the unit test and I can access them I can I can ask them hey main source set",
    "start": "667320",
    "end": "675000"
  },
  {
    "text": "give me your output and this output should be part of the compile class path right for the integration tests okay now",
    "start": "675000",
    "end": "682519"
  },
  {
    "start": "682000",
    "end": "731000"
  },
  {
    "text": "what do I do with the uh external dependencies well I declare an additional scope right it's dependency",
    "start": "682519",
    "end": "689760"
  },
  {
    "text": "configuration how we call it I call it intch test and I tell it this intch test",
    "start": "689760",
    "end": "694920"
  },
  {
    "text": "dependency container should contain all the dependencies of the test runtime uh container which has all the dependencies",
    "start": "694920",
    "end": "702120"
  },
  {
    "text": "of test compile etc etc those ones here compile test compile test runtime they",
    "start": "702120",
    "end": "708360"
  },
  {
    "text": "are added by the Java plugin and I can further add dependency containers right",
    "start": "708360",
    "end": "713839"
  },
  {
    "text": "so and now I add a dep actual dependency to this intake test dependency container",
    "start": "713839",
    "end": "719320"
  },
  {
    "text": "and then I can tell Gradle hey the compile class pass for the integration tests should have all the dependencies",
    "start": "719320",
    "end": "727560"
  },
  {
    "text": "assigned to intake test right okay so uh now let's compile",
    "start": "727560",
    "end": "734040"
  },
  {
    "start": "731000",
    "end": "804000"
  },
  {
    "text": "the whole thing and let's see if that works yes successfully compiled okay",
    "start": "734040",
    "end": "740440"
  },
  {
    "text": "let's continue let's execute the tests right so we create we create an integration test",
    "start": "740440",
    "end": "746480"
  },
  {
    "text": "task specify the test classes du sour sets intch output classes dur and",
    "start": "746480",
    "end": "753680"
  },
  {
    "text": "the class pass for running the tests where we say the runtime class path of",
    "start": "753680",
    "end": "758959"
  },
  {
    "text": "the intch test we haven't defined it yet we Define it runtime class path is the output which is the output of this intch",
    "start": "758959",
    "end": "765880"
  },
  {
    "text": "test object the compiled integration Test Plus its compiled class path right that's what you need for running the",
    "start": "765880",
    "end": "771440"
  },
  {
    "text": "integration test okay",
    "start": "771440",
    "end": "777839"
  },
  {
    "text": "oops so we run them and everything should be",
    "start": "777839",
    "end": "783120"
  },
  {
    "text": "fine well not strictly so where we are okay let's first see",
    "start": "783120",
    "end": "790480"
  },
  {
    "text": "that there are that they are really have been",
    "start": "790480",
    "end": "794160"
  },
  {
    "text": "executed our nice test reporting and uh person integration test has been",
    "start": "795680",
    "end": "801320"
  },
  {
    "text": "executed right plus person test which was a unit test so one thing we haven't done yet the Java plugin defined a part",
    "start": "801320",
    "end": "809160"
  },
  {
    "start": "804000",
    "end": "839000"
  },
  {
    "text": "life cycle for a Java project this integration test task is not part of that life cycle yet you have to execute",
    "start": "809160",
    "end": "815279"
  },
  {
    "text": "it explicitly but if you tell cradle build a whole project integration test won't be executed so the Java plugin",
    "start": "815279",
    "end": "821959"
  },
  {
    "text": "adds a check task as a life cycle task to a Java project and all the code",
    "start": "821959",
    "end": "828120"
  },
  {
    "text": "quality related tasks hook into this check task so the check task depends on",
    "start": "828120",
    "end": "833199"
  },
  {
    "text": "a junit task they depend if you add them on a check style task on a FB task you get the idea",
    "start": "833199",
    "end": "839279"
  },
  {
    "start": "839000",
    "end": "865000"
  },
  {
    "text": "and now we tell the check task hey you also depend on the integration test task boom we can now tell Gradle build the",
    "start": "839279",
    "end": "846079"
  },
  {
    "text": "whole thing and yeah everything is built including",
    "start": "846079",
    "end": "851839"
  },
  {
    "text": "that the integration tests are executed so so you took basically the standard life cycle for a cradle Java project and",
    "start": "851839",
    "end": "857759"
  },
  {
    "text": "extended it with your own requirements right",
    "start": "857759",
    "end": "863399"
  },
  {
    "text": "okay so now this first this Java project is not",
    "start": "863399",
    "end": "870639"
  },
  {
    "text": "a Java Library it is a Java application it has a me it has a class person that",
    "start": "870639",
    "end": "876399"
  },
  {
    "text": "has a main method right so you want to you want to be able to uh do something with this application you want to build",
    "start": "876399",
    "end": "883079"
  },
  {
    "text": "a distribution with uh start scripts and you want to um you want to be able to",
    "start": "883079",
    "end": "889120"
  },
  {
    "text": "run it from the build script to see if everything is okay so how could you do that well I already told you how to do",
    "start": "889120",
    "end": "895680"
  },
  {
    "text": "that again two ways you could do it the end way create a run task that that that",
    "start": "895680",
    "end": "901240"
  },
  {
    "text": "that that calls the main method create a dis uh ZIP task that builds the distribution Etc but you can tell cradle",
    "start": "901240",
    "end": "908320"
  },
  {
    "text": "hey this is not a ja normal Java Library this is an application the application name is super app the main class name is",
    "start": "908320",
    "end": "914240"
  },
  {
    "text": "orc cradle person okay",
    "start": "914240",
    "end": "919800"
  },
  {
    "text": "so and you see now by adding this you now have an additional in this ZIP task",
    "start": "920160",
    "end": "925519"
  },
  {
    "start": "921000",
    "end": "955000"
  },
  {
    "text": "an install app task and a run task let's call the runas task the Run task compiles everything and",
    "start": "925519",
    "end": "932199"
  },
  {
    "text": "executes the main method the application basically right uh the install app",
    "start": "932199",
    "end": "938680"
  },
  {
    "text": "task builds the application and you can see there's no an install directory with a super app",
    "start": "938680",
    "end": "946000"
  },
  {
    "text": "directory which has a bin directory with the start scripts and a lip directory with the needed with the necessary",
    "start": "946000",
    "end": "952279"
  },
  {
    "text": "dependencies right so and it is extremely easy to extend",
    "start": "952279",
    "end": "960240"
  },
  {
    "start": "955000",
    "end": "1024000"
  },
  {
    "text": "cradle to extract the specifics of your company into into a plugin and to",
    "start": "960240",
    "end": "966560"
  },
  {
    "text": "shareed with the rest of the world so the application plugin is is an example how we extend the Java plugin uh uh in",
    "start": "966560",
    "end": "973079"
  },
  {
    "text": "in the Cradle core distribution but you could easily",
    "start": "973079",
    "end": "978160"
  },
  {
    "text": "extract stuff with cradle so I create a cradle directory",
    "start": "978160",
    "end": "983600"
  },
  {
    "text": "here I create a file called integration",
    "start": "983600",
    "end": "990279"
  },
  {
    "text": "test cradle and I now go to my build",
    "start": "990279",
    "end": "996880"
  },
  {
    "text": "script and cut",
    "start": "997519",
    "end": "1001279"
  },
  {
    "text": "out all the stuff I've added for dealing with the integration",
    "start": "1004040",
    "end": "1009800"
  },
  {
    "text": "tests and now I go into my project and say hey apply the integration test",
    "start": "1009800",
    "end": "1017480"
  },
  {
    "text": "plugin",
    "start": "1017480",
    "end": "1020480"
  },
  {
    "text": "so and that way you have defined now your own",
    "start": "1023520",
    "end": "1029720"
  },
  {
    "start": "1024000",
    "end": "1055000"
  },
  {
    "text": "extended standard this is this could now be your Enterprise plugin applied to any to all the projects in your company and",
    "start": "1029720",
    "end": "1036360"
  },
  {
    "text": "there is now the notion of integration tests being part of your normal Java story right and uh going back um to yeah",
    "start": "1036360",
    "end": "1048160"
  },
  {
    "text": "how could you do this with Maven right the nor the answer would be create another sub project which works but uh",
    "start": "1048160",
    "end": "1056600"
  },
  {
    "start": "1055000",
    "end": "1119000"
  },
  {
    "text": "that's not a way I I want to how I want to model that in Gradle we have integration tests that are that are",
    "start": "1056600",
    "end": "1062799"
  },
  {
    "text": "testing the whole distribution they should live in a separate sub project but we also have integration tests we",
    "start": "1062799",
    "end": "1067880"
  },
  {
    "text": "have 30 or 40 components right which are component specific which only test the IDE aspects and those integration test",
    "start": "1067880",
    "end": "1074720"
  },
  {
    "text": "they belong to this project I don't want to have a tool that tells me no they must live somewhere else this code",
    "start": "1074720",
    "end": "1080799"
  },
  {
    "text": "no I want to live it there that's where they that's where the code belongs now uh if we would follow this pattern well",
    "start": "1080799",
    "end": "1088240"
  },
  {
    "text": "that that we would have to create for every component a component Dash Integra",
    "start": "1088240",
    "end": "1094640"
  },
  {
    "text": "test project we wouldn't have in Eclipse now 40 project we would have 80 projects at one point that's a",
    "start": "1094640",
    "end": "1100960"
  },
  {
    "text": "scalability thing the refreshing eclipse is not your best friend right so uh so",
    "start": "1100960",
    "end": "1109280"
  },
  {
    "text": "we think it's extremely important that you are able uh to model the stuff exactly how you want where how you want",
    "start": "1109280",
    "end": "1116480"
  },
  {
    "text": "to have it right so declarative yes rigid no only when you want to be rigid",
    "start": "1116480",
    "end": "1122520"
  },
  {
    "start": "1119000",
    "end": "1193000"
  },
  {
    "text": "with your developers you can tell the story with Gradle but the build system shouldn't be riched with the build masters of the world they know their",
    "start": "1122520",
    "end": "1129520"
  },
  {
    "text": "domain better than the build Masters we provide standards if they suit you use them but you must be able to extend them",
    "start": "1129520",
    "end": "1135840"
  },
  {
    "text": "and to tell your own story and now we come basic it's it's this lies at the heart",
    "start": "1135840",
    "end": "1141360"
  },
  {
    "text": "of Gradle there is a fantastic interview a couple of years ago between arish GMA",
    "start": "1141360",
    "end": "1147080"
  },
  {
    "text": "the gang of four arish GMA and Bill venas on ata.com and arish talks about",
    "start": "1147080",
    "end": "1152880"
  },
  {
    "text": "the dangers of doing Frameworks big Frameworks uh right and uh and he's",
    "start": "1152880",
    "end": "1158960"
  },
  {
    "text": "saying the danger with big Frameworks is at the beginning it's fun you get all",
    "start": "1158960",
    "end": "1164080"
  },
  {
    "text": "the functionality for free but once you have't require is that is unanticipated by the",
    "start": "1164080",
    "end": "1170320"
  },
  {
    "text": "framework you start to fight with the framework well and you start to lose 100% right this was the case with ejb2",
    "start": "1170320",
    "end": "1177640"
  },
  {
    "text": "container manag persistant who has survived this yeah geez and this is the",
    "start": "1177640",
    "end": "1184480"
  },
  {
    "text": "case with some build systems which also have survived uh so um so what is our",
    "start": "1184480",
    "end": "1190480"
  },
  {
    "text": "answer to that so at the heart of Gradle is a",
    "start": "1190480",
    "end": "1196360"
  },
  {
    "text": "build language right a tool toolkit because that's arish gma's recommendation build toolkits and",
    "start": "1196360",
    "end": "1203720"
  },
  {
    "text": "optional smaller Frameworks on top of this toolkit right a toolkit that has no opinion with some Frameworks that have",
    "start": "1203720",
    "end": "1211679"
  },
  {
    "text": "an opinion because the Gradle Java plugin is a little framework it has it has an opinion it has the opinion the",
    "start": "1211679",
    "end": "1218120"
  },
  {
    "text": "production code lives in the same project as the unit test code so the guys from LinkedIn have a different",
    "start": "1218120",
    "end": "1223440"
  },
  {
    "text": "opinion they have separate projects for production code and unit test code",
    "start": "1223440",
    "end": "1229360"
  },
  {
    "text": "so and for good reasons one reason is they want to have clear class path in eclipse eclipse doesn't have any class",
    "start": "1229360",
    "end": "1235840"
  },
  {
    "text": "path scope right so uh so how would they how would they deal with that well if",
    "start": "1235840",
    "end": "1242120"
  },
  {
    "text": "Gradle were just the framework we could say well just apply the Java plugin then your production code project has a test",
    "start": "1242120",
    "end": "1250480"
  },
  {
    "text": "task well but it doesn't really hurt and your test project has some production",
    "start": "1250480",
    "end": "1256039"
  },
  {
    "text": "code compilation step it doesn't really hurt well just go ahead somehow somehow it",
    "start": "1256039",
    "end": "1261360"
  },
  {
    "text": "will do the job right and then and then you hire a new person right and uh this person works on a production CT runs the",
    "start": "1261360",
    "end": "1268480"
  },
  {
    "text": "test hey tests are successful well there are no tests right in a production court so he commits the stuff stuff is broken",
    "start": "1268480",
    "end": "1274640"
  },
  {
    "text": "so then you decide hey every new developer must get his build system briefing telling him all the pathologies",
    "start": "1274640",
    "end": "1280720"
  },
  {
    "text": "all the stuff that is weird that shouldn't be as it is but he has to be aware of no no no that's not how you",
    "start": "1280720",
    "end": "1288919"
  },
  {
    "text": "should model your production domain and that's not how you should model your uh uh build domain the same principles of",
    "start": "1288919",
    "end": "1296320"
  },
  {
    "text": "you know of good design you apply to your production code you should apply to modeling your build domain and in in",
    "start": "1296320",
    "end": "1302840"
  },
  {
    "text": "fact there are a couple of smells if you read the refactoring book uh for you can",
    "start": "1302840",
    "end": "1308480"
  },
  {
    "text": "you can transfer uh to the build domain forcing someone to create a sub project",
    "start": "1308480",
    "end": "1314400"
  },
  {
    "text": "just for a couple of classes right that that that's for me a lazy project smell corresponding to the lazy class smell of",
    "start": "1314400",
    "end": "1320679"
  },
  {
    "text": "the you have in your production cord right unnecessary abstractions etc etc",
    "start": "1320679",
    "end": "1325720"
  },
  {
    "text": "there's could give a whole talk on that topic so okay but what is the greater solution right uh it's the solution is",
    "start": "1325720",
    "end": "1334400"
  },
  {
    "start": "1329000",
    "end": "1393000"
  },
  {
    "text": "hey don't use our opinionated little Java framework right but don't go back",
    "start": "1334400",
    "end": "1340400"
  },
  {
    "text": "to Adam and Eve to the lowest layer and now use the grader task to do everything",
    "start": "1340400",
    "end": "1346400"
  },
  {
    "text": "on the low level use the build language you have you have very a very rich",
    "start": "1346400",
    "end": "1351520"
  },
  {
    "text": "language to describe a Java project right sour sets Etc this is a domain",
    "start": "1351520",
    "end": "1357080"
  },
  {
    "text": "specific language for telling your your story for Java projects right so and",
    "start": "1357080",
    "end": "1362840"
  },
  {
    "text": "with this it would be very easy to tell the story what a LinkedIn Java project",
    "start": "1362840",
    "end": "1367919"
  },
  {
    "text": "is so integration test is also an opinionated plugin one integration test per",
    "start": "1367919",
    "end": "1373880"
  },
  {
    "text": "project it might be exactly what you want for your company but but maybe you have a couple of teams that are saying",
    "start": "1373880",
    "end": "1380440"
  },
  {
    "text": "hold on sometimes we have multiple sets of integration tests per project right",
    "start": "1380440",
    "end": "1385640"
  },
  {
    "text": "with different external libraries now you could tell tell them oh and create another sub",
    "start": "1385640",
    "end": "1391559"
  },
  {
    "text": "project right no that wouldn't be the solution the solution would be extensible you can create your own",
    "start": "1391559",
    "end": "1400440"
  },
  {
    "start": "1393000",
    "end": "1479000"
  },
  {
    "text": "language elements you could easily I don't have the time to show that",
    "start": "1400440",
    "end": "1406200"
  },
  {
    "text": "uh like like the is a source sets element to declare sources you could add",
    "start": "1406200",
    "end": "1411960"
  },
  {
    "text": "an integration test element where people could just use it integration test tell",
    "start": "1411960",
    "end": "1417080"
  },
  {
    "text": "the source directory and everything would be set up a task to compile them a task to run them etc etc and that would",
    "start": "1417080",
    "end": "1424799"
  },
  {
    "text": "be the solution right you might have an opinionated framework but you also provide a language element for people",
    "start": "1424799",
    "end": "1431000"
  },
  {
    "text": "that need more flexibility but for but for them it will be very easy they don't need to do much copy and pasting they",
    "start": "1431000",
    "end": "1436240"
  },
  {
    "text": "say exactly what they need in integration test and that's the whole purpose of of writing dsls we come",
    "start": "1436240",
    "end": "1442240"
  },
  {
    "text": "across a lot nowadays uh of companies who are now using Scala preferably for",
    "start": "1442240",
    "end": "1449240"
  },
  {
    "text": "creating dsls for domain expert domain experts in the financial Industries domain experts in the Biotech Industry",
    "start": "1449240",
    "end": "1456080"
  },
  {
    "text": "etc etc right they don't they don't want to know anything about Scala they want they are experts in their domain the",
    "start": "1456080",
    "end": "1462240"
  },
  {
    "text": "same is true for build systems software developers shouldn't be experts in build systems they are experts in what they",
    "start": "1462240",
    "end": "1469880"
  },
  {
    "text": "want to do with their software projects and you should provide them a language where they can easily describe their requirements and not have Wiki Pages",
    "start": "1469880",
    "end": "1476640"
  },
  {
    "text": "after Wiki Pages how they have to deal with that so this is this",
    "start": "1476640",
    "end": "1482320"
  },
  {
    "start": "1479000",
    "end": "1562000"
  },
  {
    "text": "is when you can read this in the last in the last row you get this",
    "start": "1482320",
    "end": "1488120"
  },
  {
    "text": "book but what build system is that and for some reason you can you you you can",
    "start": "1488880",
    "end": "1495080"
  },
  {
    "text": "realize what it is so um this this is a build system uh from a company called",
    "start": "1495080",
    "end": "1502559"
  },
  {
    "text": "automated logic they do they do building automation pretty complex stuff big building automation right so not home",
    "start": "1502559",
    "end": "1510080"
  },
  {
    "text": "not home not private homes and uh they have a they have 100 plus developers and",
    "start": "1510080",
    "end": "1517000"
  },
  {
    "text": "also 100 plus subm modules and um they have a pretty complex uh Matrix uh",
    "start": "1517000",
    "end": "1524760"
  },
  {
    "text": "depending on the building type and the customer type they must assemble distributions right which are",
    "start": "1524760",
    "end": "1530240"
  },
  {
    "text": "specifically configured so these distributions take a subset of their of their components configure them in a",
    "start": "1530240",
    "end": "1536520"
  },
  {
    "text": "specific way burn everything on a CD or what now USB s whatever and ship it to",
    "start": "1536520",
    "end": "1541799"
  },
  {
    "text": "the building right very high QA requirements there's no way to easily uh uh have a hot fix right and and a domain",
    "start": "1541799",
    "end": "1549880"
  },
  {
    "text": "which is pretty sensitive you don't want to screw up the the climate the the what",
    "start": "1549880",
    "end": "1555440"
  },
  {
    "text": "do you say anyway you know what I mean so uh climate control so what you",
    "start": "1555440",
    "end": "1563360"
  },
  {
    "start": "1562000",
    "end": "1661000"
  },
  {
    "text": "see here was necessary for a normal developer to add another sub module this",
    "start": "1563360",
    "end": "1569039"
  },
  {
    "text": "was a lot of copy and paste and those were all different property files they had to touch an extent to add their",
    "start": "1569039",
    "end": "1576799"
  },
  {
    "text": "their new module to the end build framework and those were smart guys but they pushed end to the limits right",
    "start": "1576799",
    "end": "1584200"
  },
  {
    "text": "right they wanted to have some something that models their domain but they couldn't hide the complexity so this was",
    "start": "1584200",
    "end": "1590559"
  },
  {
    "text": "extremely aror prone and developers were completely they hated it but they at one",
    "start": "1590559",
    "end": "1596760"
  },
  {
    "text": "point boycotted they said we don't add any other sub modules fix this we don't deal with this anymore so uh their pain",
    "start": "1596760",
    "end": "1604640"
  },
  {
    "text": "was so high this this is a critical this is their software stack right their pain",
    "start": "1604640",
    "end": "1610000"
  },
  {
    "text": "was so high that they switched to Gradle when Gradle was 0.5.2 our first big Enterprise build",
    "start": "1610000",
    "end": "1617120"
  },
  {
    "text": "right so uh and the one of the things they LED was that they could create a",
    "start": "1617120",
    "end": "1623360"
  },
  {
    "text": "DSL for their guys so now a software developer doesn't need to do anything with and they they're not even aware",
    "start": "1623360",
    "end": "1629840"
  },
  {
    "text": "necessarily that they're using Gradle that say Hey for the for this product we",
    "start": "1629840",
    "end": "1634919"
  },
  {
    "text": "use we need the subcomponents we have some dependencies for the doc uh we have",
    "start": "1634919",
    "end": "1640840"
  },
  {
    "text": "this documentation text requires license and and specify a laun sh this is a",
    "start": "1640840",
    "end": "1645919"
  },
  {
    "text": "specification this is a story that makes sense to you with the little background I I've given you right for",
    "start": "1645919",
    "end": "1651799"
  },
  {
    "text": "that they're building some kind of of of application and distribution big progress",
    "start": "1651799",
    "end": "1660200"
  },
  {
    "text": "right okay so one thing that Maven really added to the domain was the idea",
    "start": "1660720",
    "end": "1666880"
  },
  {
    "start": "1661000",
    "end": "1762000"
  },
  {
    "text": "of standardization right absolutely and uh uh standardization based on opinionated",
    "start": "1666880",
    "end": "1675360"
  },
  {
    "text": "Frameworks with a built by convention approach approach and they did that long before it was hyped with something like",
    "start": "1675360",
    "end": "1681559"
  },
  {
    "text": "Ruby on Rails so I really give them credit to come up with such a mechanism very very early and uh and and many",
    "start": "1681559",
    "end": "1690039"
  },
  {
    "text": "people love Maven because uh uh it took them out of their and",
    "start": "1690039",
    "end": "1696960"
  },
  {
    "text": "nightmarish completely non-standardized built environments right",
    "start": "1696960",
    "end": "1703360"
  },
  {
    "text": "so and and we for us standardization is is very important",
    "start": "1703360",
    "end": "1709000"
  },
  {
    "text": "aspect specifically for for larger shops and um but the main point for us is not",
    "start": "1709000",
    "end": "1716840"
  },
  {
    "text": "that Gradle provides some outof the Box standards for you like this is a Java project this is nice to have right but",
    "start": "1716840",
    "end": "1724000"
  },
  {
    "text": "the real value ad for companies for us is that Gradle is a standardization",
    "start": "1724000",
    "end": "1729120"
  },
  {
    "text": "toolkit that allows you to Define your own standards for all the stuff that are that are that doesn't come out of the",
    "start": "1729120",
    "end": "1735120"
  },
  {
    "text": "box with the build system and I I guarantee you there is a lot I mean if I look at the Cradle build what we have to",
    "start": "1735120",
    "end": "1741159"
  },
  {
    "text": "standardize and uh uh and do for our automation which is on a l not so large",
    "start": "1741159",
    "end": "1747200"
  },
  {
    "text": "scale than than any significant uh Enterprise build uh we think this is",
    "start": "1747200",
    "end": "1753000"
  },
  {
    "text": "this is this is very important that it's easy for you to standardize the stuff and and deploy those rules across the",
    "start": "1753000",
    "end": "1759440"
  },
  {
    "text": "whole companies how to do this we will learn later so another thing so even if",
    "start": "1759440",
    "end": "1764960"
  },
  {
    "start": "1762000",
    "end": "1955000"
  },
  {
    "text": "you don't care about standardization if you say hey I'm from a small shop we don't have many teams right we just want",
    "start": "1764960",
    "end": "1770120"
  },
  {
    "text": "to have a good build system um crle is not a Java build system where",
    "start": "1770120",
    "end": "1779120"
  },
  {
    "text": "you might be able to squeeze building other platforms somehow into it right",
    "start": "1779120",
    "end": "1784840"
  },
  {
    "text": "it's extremely open and flexible for any platform right Java Android C++",
    "start": "1784840",
    "end": "1790919"
  },
  {
    "text": "JavaScript Etc and um we are very excited that we are working working",
    "start": "1790919",
    "end": "1797640"
  },
  {
    "text": "together now with the Google Android team to make cradle the next default build system for building Android apps",
    "start": "1797640",
    "end": "1803600"
  },
  {
    "text": "and Android libraries so that that's great news for everyone I think but also",
    "start": "1803600",
    "end": "1809080"
  },
  {
    "text": "for us uh at least for for the Android world and uh because they there are some",
    "start": "1809080",
    "end": "1815120"
  },
  {
    "text": "issues with building Android apps right and uh uh and the Android the Android SDK people what they did before they",
    "start": "1815120",
    "end": "1821799"
  },
  {
    "text": "were thinking about tools they were writing a build spec what should a build system for Android should be able to do",
    "start": "1821799",
    "end": "1827320"
  },
  {
    "text": "and they created a terminology like product flavors and build types and they could take this back or we together took",
    "start": "1827320",
    "end": "1835760"
  },
  {
    "text": "this spe and extended the Cradle build language to capture that you can say hey Android I have this product flavors a",
    "start": "1835760",
    "end": "1841840"
  },
  {
    "text": "free version and a paid version you can specify that and and under the hood you get all the complex logic out of that",
    "start": "1841840",
    "end": "1849000"
  },
  {
    "text": "and is pretty complex you know with all the emulators and the specific testing requirements this yeah you can specify",
    "start": "1849000",
    "end": "1855720"
  },
  {
    "text": "the what and the how is done for you and it integrates deeply with the with the",
    "start": "1855720",
    "end": "1861039"
  },
  {
    "text": "existing cradle build language so when you specify a free product flavor a free",
    "start": "1861039",
    "end": "1866120"
  },
  {
    "text": "sour set gets automatically created which you then can further configure etc etc so even if you don't care about",
    "start": "1866120",
    "end": "1872360"
  },
  {
    "text": "standardization the fact that Gradle is extremely open uh uh will will make it a",
    "start": "1872360",
    "end": "1881320"
  },
  {
    "text": "first how do you say a tool of choice for you know modeling any domain right",
    "start": "1881320",
    "end": "1887000"
  },
  {
    "text": "and so uh and give you a very good experience whatever whatever software stack you're",
    "start": "1887000",
    "end": "1894120"
  },
  {
    "text": "using yeah one interesting thing about uh declarative elements they are",
    "start": "1894120",
    "end": "1899279"
  },
  {
    "text": "queriable I mean it's very hard to query an end build ask ask an end build for anything hey what are your Source",
    "start": "1899279",
    "end": "1905639"
  },
  {
    "text": "directories what are your test directories right you might have some conventions but you couldn't ask the",
    "start": "1905639",
    "end": "1910880"
  },
  {
    "text": "build you could have some heuristics or whatever and having declarative elements you can you now have have an OP cph you",
    "start": "1910880",
    "end": "1917720"
  },
  {
    "text": "can say hey give me all the product flavors that are free and whatever over all my software stack",
    "start": "1917720",
    "end": "1923679"
  },
  {
    "text": "oops so uh that was the declarative layer but at one but you also well at",
    "start": "1923679",
    "end": "1930039"
  },
  {
    "text": "one point the what is one thing but as the build master you also have to define the how somewhere",
    "start": "1930039",
    "end": "1936720"
  },
  {
    "text": "right what should how should things be done so cradle also has a very rich",
    "start": "1936720",
    "end": "1943159"
  },
  {
    "text": "imperative layer so in that respect we think Gradle is also the better and so on on the low level and I will show you",
    "start": "1943159",
    "end": "1949799"
  },
  {
    "text": "some examples why we think this is the case so task dependency",
    "start": "1949799",
    "end": "1956279"
  },
  {
    "start": "1955000",
    "end": "2066000"
  },
  {
    "text": "inference okay let's take this example from the integration test and now let's add the requirement hey I want a jar",
    "start": "1956279",
    "end": "1963919"
  },
  {
    "text": "task that uh uh jars up my compiled unit tests for whatever reason I want to have",
    "start": "1963919",
    "end": "1970840"
  },
  {
    "text": "that okay I tell Gradle hey test sourcer said give me",
    "start": "1970840",
    "end": "1977480"
  },
  {
    "text": "your output and you specify a naming pattern and",
    "start": "1977480",
    "end": "1983639"
  },
  {
    "text": "uh what's going on here and you now can execute this test jar task and what is kind of interesting",
    "start": "1983679",
    "end": "1992600"
  },
  {
    "text": "is the classes are compiled the test classes are compiled and then the jar is",
    "start": "1992600",
    "end": "1998080"
  },
  {
    "text": "built Did we tell this to cradle right no we",
    "start": "1998080",
    "end": "2003840"
  },
  {
    "text": "didn't the only thing we specified was",
    "start": "2003840",
    "end": "2008960"
  },
  {
    "text": "uh that it should use come on that it should use uh uh the test output and",
    "start": "2012799",
    "end": "2019240"
  },
  {
    "text": "this output object is a rich object that knows a lot not just that it's not just a string that represents the path right",
    "start": "2019240",
    "end": "2027960"
  },
  {
    "text": "so",
    "start": "2027960",
    "end": "2030760"
  },
  {
    "text": "um see here's the Java standard test",
    "start": "2034440",
    "end": "2039559"
  },
  {
    "text": "10 um in cradle the output objects know",
    "start": "2039559",
    "end": "2046799"
  },
  {
    "text": "what needs to be done to create the content so the test output object represents the directory of the compiled",
    "start": "2046799",
    "end": "2053679"
  },
  {
    "text": "unit test classes but it also knows that it needs the compile task to",
    "start": "2053679",
    "end": "2058878"
  },
  {
    "text": "create the content of this directory so you encapsulate that in an object it's reasonable objectoriented design compare",
    "start": "2058879",
    "end": "2065320"
  },
  {
    "text": "this with end you have a property with the name classes there right and then",
    "start": "2065320",
    "end": "2070440"
  },
  {
    "text": "you have a a Target compile tests which pushes the stuff into glasses door then",
    "start": "2070440",
    "end": "2076560"
  },
  {
    "text": "you have a test Target which depends on compile test and needs the glasses door you have a test jar Target which depends",
    "start": "2076560",
    "end": "2082599"
  },
  {
    "text": "on compile test and just the classes to now let's assume the rules how you",
    "start": "2082599",
    "end": "2089520"
  },
  {
    "text": "create the binaries of the unit tests are changing let's say you don't compile them anymore right let's say you must",
    "start": "2089520",
    "end": "2097880"
  },
  {
    "text": "get them from some zip zip file in some binary repository right could be with",
    "start": "2097880",
    "end": "2104359"
  },
  {
    "text": "and you have to go to all your build scripts and and change the depends",
    "start": "2104359",
    "end": "2110040"
  },
  {
    "text": "relation right you have to say everywhere don't depend on compile test now depend on uh extract zip file right",
    "start": "2110040",
    "end": "2118320"
  },
  {
    "text": "you have to repeat yourself you say you need to classes there and by the way classes there depend on compile test use",
    "start": "2118320",
    "end": "2124960"
  },
  {
    "text": "the right and so you have to specify this rule over and over again when you change it you have to change it over and",
    "start": "2124960",
    "end": "2130920"
  },
  {
    "text": "over again in grader you can specify a classes to a property as a rich object",
    "start": "2130920",
    "end": "2135960"
  },
  {
    "text": "and tell this property hey you need this task to create your output and then you",
    "start": "2135960",
    "end": "2142839"
  },
  {
    "text": "just tell cradle hey you need this output property and the wiring of the tasks happens",
    "start": "2142839",
    "end": "2149280"
  },
  {
    "text": "automatically right so just one maintainability advantage",
    "start": "2149280",
    "end": "2155800"
  },
  {
    "text": "right another thing smart exclusion I",
    "start": "2155800",
    "end": "2161160"
  },
  {
    "start": "2158000",
    "end": "2266000"
  },
  {
    "text": "mean this is the build master tool let's say I want to build a it depends on b b",
    "start": "2161160",
    "end": "2166480"
  },
  {
    "text": "takes usually 15 minutes some document generation and now you're debugging something in a you want to you want you",
    "start": "2166480",
    "end": "2172599"
  },
  {
    "text": "working with it you want to execute it you know you have to execute it five times a minute and now B always takes so",
    "start": "2172599",
    "end": "2180000"
  },
  {
    "text": "long so what do you do in",
    "start": "2180000",
    "end": "2185119"
  },
  {
    "text": "end pardon",
    "start": "2185720",
    "end": "2191839"
  },
  {
    "text": "me well yeah but you you might not want to touch the build it would be a",
    "start": "2192160",
    "end": "2197800"
  },
  {
    "text": "way another way you might also don't want to touch the build you could introduce skip properties",
    "start": "2197800",
    "end": "2205000"
  },
  {
    "text": "unless right okay I mean better than nothing right so but you have to say it explicitly I want I want to Define this",
    "start": "2205000",
    "end": "2212280"
  },
  {
    "text": "property to skip this task but then let's say B depends on C and D you also have to say oh damn I also have to",
    "start": "2212280",
    "end": "2218400"
  },
  {
    "text": "define the same skip property for C and for D so you told and already B depends",
    "start": "2218400",
    "end": "2224280"
  },
  {
    "text": "on c and d and now with the skip properties you tell the same story another time right with grad you don't",
    "start": "2224280",
    "end": "2229680"
  },
  {
    "text": "need to do anything I mean skipping is just the built-in feature and when you when you execute A and Skip",
    "start": "2229680",
    "end": "2236640"
  },
  {
    "text": "B the task C and D will also be skipped because B depends on them if none of the",
    "start": "2236640",
    "end": "2241680"
  },
  {
    "text": "tasks that are executed depend on them it's simple but hey hey it's it's it's",
    "start": "2241680",
    "end": "2248480"
  },
  {
    "text": "it's cool and I mean other build system don't even have the notion of skipping right you depend on the mercy of their",
    "start": "2248480",
    "end": "2254000"
  },
  {
    "text": "plugins whether they are skippable or not and that's for a build master pain in the ass I mean when I have to execute",
    "start": "2254000",
    "end": "2261079"
  },
  {
    "text": "something over and over again always have to wait I mean it's ridiculous I mean so hey one of the",
    "start": "2261079",
    "end": "2271040"
  },
  {
    "start": "2266000",
    "end": "2346000"
  },
  {
    "text": "highlights see how oh doing fine in time incremental belt",
    "start": "2271200",
    "end": "2278040"
  },
  {
    "text": "who is always doing a clean when the end build is",
    "start": "2278040",
    "end": "2283160"
  },
  {
    "text": "executed when the M build is executed oh a lot of brave people out here so who is not doing who is usually",
    "start": "2283160",
    "end": "2291880"
  },
  {
    "text": "not doing a clean in an Maven if you don't do a clean it doesn't give you that much",
    "start": "2291880",
    "end": "2298760"
  },
  {
    "text": "performance Advantage the Java dog is still generated the tests are still executed the uh uh the ja are still",
    "start": "2298760",
    "end": "2305839"
  },
  {
    "text": "created the only thing that Java only recompiles the Java files that have been",
    "start": "2305839",
    "end": "2314319"
  },
  {
    "text": "touched but only those not the ones this file depends on so you have a pretty",
    "start": "2314319",
    "end": "2319680"
  },
  {
    "text": "unreliable compile so you you take quite a bit of risk for not getting much out",
    "start": "2319680",
    "end": "2325000"
  },
  {
    "text": "of it so therefore most therefore I got used to always do a clean right uh I mean are you using at you build the and",
    "start": "2325000",
    "end": "2331760"
  },
  {
    "text": "check some tasks to make things faster Che yeah and has some some stuff where",
    "start": "2331760",
    "end": "2337599"
  },
  {
    "text": "you can where you can where you can check whether out input has changed or",
    "start": "2337599",
    "end": "2343480"
  },
  {
    "text": "so yeah okay understood so okay let's see how grader behaves here so we have",
    "start": "2344000",
    "end": "2349400"
  },
  {
    "text": "another normal Java project um now let's do a clean build",
    "start": "2349400",
    "end": "2357520"
  },
  {
    "text": "only once just to start from scratch now",
    "start": "2357520",
    "end": "2362800"
  },
  {
    "text": "let's do a normal build and a non-clean build boom everything is up",
    "start": "2362800",
    "end": "2369800"
  },
  {
    "text": "to date right very fast so now let's",
    "start": "2369800",
    "end": "2375480"
  },
  {
    "text": "change the production code let's remove this field name two",
    "start": "2375480",
    "end": "2383240"
  },
  {
    "text": "and let's rebuild",
    "start": "2383240",
    "end": "2386160"
  },
  {
    "text": "again aha this was picked up by Gradle right so um uh everything was recompiled",
    "start": "2388560",
    "end": "2397920"
  },
  {
    "text": "the bite code has changed so the jaar was rebuilt uh so the class pass had",
    "start": "2397920",
    "end": "2403079"
  },
  {
    "text": "changed for the test they need to be recompiled and re-executed okay so this up to date here means there are no",
    "start": "2403079",
    "end": "2409599"
  },
  {
    "text": "resources to process so that therefore this is always up to date but the other stuff needed to be re-executed okay by",
    "start": "2409599",
    "end": "2415760"
  },
  {
    "text": "the way compile Java and process resources are aggregated by the classes Tas so this is an aggregator task when",
    "start": "2415760",
    "end": "2421800"
  },
  {
    "text": "you say hey I want all my binaries this task depends on compile Java and process resources to do the two steps that are",
    "start": "2421800",
    "end": "2427760"
  },
  {
    "text": "necessary to create the binaries okay now let's do something else let's remove",
    "start": "2427760",
    "end": "2434079"
  },
  {
    "text": "a commment right let's re-execute the",
    "start": "2434079",
    "end": "2441119"
  },
  {
    "text": "build and Ah that's that's interesting it was recompiled right but the bite",
    "start": "2441119",
    "end": "2446720"
  },
  {
    "text": "code hasn't changed so the J is up to date test don't need to be recompiled",
    "start": "2446720",
    "end": "2453200"
  },
  {
    "text": "Etc okay let's do something else let's change the source compatibility layer",
    "start": "2454319",
    "end": "2460240"
  },
  {
    "text": "which is not a file it's a property of the build right will this be",
    "start": "2460240",
    "end": "2465560"
  },
  {
    "text": "detected yes and of course the bite code changes so everything needs to be redone",
    "start": "2465560",
    "end": "2470680"
  },
  {
    "text": "right J needs to be rebuilt Etc let's change the version of the junit dependency for compiling the test will",
    "start": "2470680",
    "end": "2477960"
  },
  {
    "text": "that be detected I hope",
    "start": "2477960",
    "end": "2482599"
  },
  {
    "text": "so yes tests are recompiled the rest is up to date but tests are recompiled and re-executed now let's now so far we only",
    "start": "2483079",
    "end": "2491319"
  },
  {
    "text": "changed the input now let's change the output of the previous run right let's remove one of the compiled production",
    "start": "2491319",
    "end": "2498440"
  },
  {
    "text": "classes let's re-execute the build and boom recompiled but the bite",
    "start": "2498440",
    "end": "2505240"
  },
  {
    "text": "code was up to date so the rest is up to date",
    "start": "2505240",
    "end": "2510680"
  },
  {
    "text": "okay so um okay",
    "start": "2510680",
    "end": "2517000"
  },
  {
    "text": "so the interesting question is now um this is kind of the this is the",
    "start": "2517000",
    "end": "2522720"
  },
  {
    "text": "behavior of the default Gradle task how can you use incremental build of Gradle for your own custom build logic",
    "start": "2522720",
    "end": "2529720"
  },
  {
    "text": "right can you use it so we have here a mountains XML file and the requirement",
    "start": "2529720",
    "end": "2536400"
  },
  {
    "start": "2531000",
    "end": "2755000"
  },
  {
    "text": "is for each note of this XML file for each Mountain node we want to create a",
    "start": "2536400",
    "end": "2542640"
  },
  {
    "text": "text file where the name of the text file is the name of the mountain and the head of the the head where the and the head of the",
    "start": "2542640",
    "end": "2549280"
  },
  {
    "text": "mountain is the content of the text file so let's just do some groovy stuff we",
    "start": "2549280",
    "end": "2554960"
  },
  {
    "text": "don't need to care about here I created a task generate Mountain files with some groovy XML passing that generates those",
    "start": "2554960",
    "end": "2561000"
  },
  {
    "text": "text files right so let's execute this",
    "start": "2561000",
    "end": "2566680"
  },
  {
    "text": "task Isn't that cool gmf you can use ceml case task execution on a command",
    "start": "2566680",
    "end": "2572839"
  },
  {
    "text": "line and grle will find the correct task so the big question is now okay now",
    "start": "2572839",
    "end": "2579760"
  },
  {
    "text": "first I want to show you that the task did what it was supposed to do yeah let's refresh the eclipse workspace you",
    "start": "2579760",
    "end": "2586119"
  },
  {
    "text": "have a mountains directory a K2 text and yeah amount aest text okay",
    "start": "2586119",
    "end": "2591800"
  },
  {
    "text": "requirement solved now let's go back and reexecute the",
    "start": "2591800",
    "end": "2597640"
  },
  {
    "text": "task will it be up to",
    "start": "2597640",
    "end": "2601359"
  },
  {
    "text": "date what is your trust in Gradle come all the way from",
    "start": "2604160",
    "end": "2612319"
  },
  {
    "text": "Germany to show you some crappy up to date shaking no of course of course it's up to date it's",
    "start": "2612319",
    "end": "2618960"
  },
  {
    "text": "not up to date let's try it",
    "start": "2618960",
    "end": "2623078"
  },
  {
    "text": "again okay up to date check for custom Bill code is part of the commercial",
    "start": "2624400",
    "end": "2629520"
  },
  {
    "text": "cradle offerings no",
    "start": "2629520",
    "end": "2634040"
  },
  {
    "text": "no it's not not let's revisit this guy here is not my friend",
    "start": "2634720",
    "end": "2642119"
  },
  {
    "text": "for various reasons first of all I mean analyzing what the what what the input and output oops I don't want to",
    "start": "2642119",
    "end": "2649680"
  },
  {
    "text": "analyzing what the input and output of this uh of",
    "start": "2649680",
    "end": "2654800"
  },
  {
    "text": "descripting implicit code is would be very hard right the other thing is I talked about declarative build scripts",
    "start": "2654800",
    "end": "2661599"
  },
  {
    "text": "right and in Gradle we always try to separate the declarative from the imperative right the build script the",
    "start": "2661599",
    "end": "2667440"
  },
  {
    "text": "normal build script should be spec like so now we have this the scripting code",
    "start": "2667440",
    "end": "2672920"
  },
  {
    "text": "in there you can easily imagine if this is getting out of hand you have you have completely messy non- declarative hardto",
    "start": "2672920",
    "end": "2681119"
  },
  {
    "text": "read build scripts so this is something I don't like so what can we do to improve",
    "start": "2681119",
    "end": "2687640"
  },
  {
    "text": "that we can create a custom task we call it convert Mountain XML and uh we say hey the input file the",
    "start": "2687640",
    "end": "2696079"
  },
  {
    "text": "mountains XML file is a property of this task the separator feed colum number and",
    "start": "2696079",
    "end": "2703160"
  },
  {
    "text": "the output directory where the text files are generated then we have a task action the action that is actually",
    "start": "2703160",
    "end": "2709480"
  },
  {
    "text": "executed by this task right and um and now let's get rid of this guy",
    "start": "2709480",
    "end": "2716440"
  },
  {
    "text": "here and make it more declarative say this task is of type convert Mountain",
    "start": "2716440",
    "end": "2721599"
  },
  {
    "text": "XML the output there is build deer mountains the input file is uh Source",
    "start": "2721599",
    "end": "2730680"
  },
  {
    "text": "mountains XML and the separator is a column hey this is much nicer right now",
    "start": "2730680",
    "end": "2737400"
  },
  {
    "text": "let's reexecute",
    "start": "2737400",
    "end": "2740720"
  },
  {
    "text": "Okay regenerated now let's reexecute with AO clean hey everything's up to date free",
    "start": "2742760",
    "end": "2750079"
  },
  {
    "text": "and open source for you um so so now let's let's see if it's",
    "start": "2750079",
    "end": "2757760"
  },
  {
    "text": "if it's really working here we go K2 text and mount a",
    "start": "2757760",
    "end": "2765160"
  },
  {
    "text": "text okay so let's change the mountains XML the numbers are anyhow crap but let's change them to another crap number",
    "start": "2765160",
    "end": "2771480"
  },
  {
    "text": "and uh you see no longer up to date regenerated if you execute again up to",
    "start": "2771480",
    "end": "2777040"
  },
  {
    "text": "date one more one more uh thing to try out if we change the separator which is",
    "start": "2777040",
    "end": "2782960"
  },
  {
    "text": "a really a property of the task not a file to simp column uh we",
    "start": "2782960",
    "end": "2788880"
  },
  {
    "text": "execute it's picked up this change and you see yes please reload we now",
    "start": "2788880",
    "end": "2797599"
  },
  {
    "text": "have a semicolon right and the what is really cool here I think you didn't need to",
    "start": "2797599",
    "end": "2804760"
  },
  {
    "text": "tell Gradle anything about incremental build we just Gradle just provides you a way to describe the input and output of",
    "start": "2804760",
    "end": "2811240"
  },
  {
    "text": "your tasks and this very powerful functionality of an incremental build you get for free and this is so simple",
    "start": "2811240",
    "end": "2818359"
  },
  {
    "text": "you can go home now you understood all you need to do and you now have incremental build but there is more you",
    "start": "2818359",
    "end": "2823839"
  },
  {
    "text": "get out of that let's let's uh specify an XML file that doesn't",
    "start": "2823839",
    "end": "2830000"
  },
  {
    "text": "exist well we know it's an input and you now get a nice error reporting you don't need your own checking if file doesn't",
    "start": "2830000",
    "end": "2836880"
  },
  {
    "text": "exist make a nice error message you get that for free another thing that is pretty cool is",
    "start": "2836880",
    "end": "2844680"
  },
  {
    "text": "uh you can now say cradle clean generate",
    "start": "2844720",
    "end": "2851680"
  },
  {
    "text": "Mountain files so for every task you have you get a clean task that only deletes the output of that task another",
    "start": "2851680",
    "end": "2858200"
  },
  {
    "text": "sharp tool for the build master let's say something is corrupted but you have a build build output that is pretty",
    "start": "2858200",
    "end": "2864160"
  },
  {
    "text": "expensive to create you can very sharply say only create the output of this guy",
    "start": "2864160",
    "end": "2869319"
  },
  {
    "text": "and how can we do that well you told us what are the output doors of that task right so it's pretty",
    "start": "2869319",
    "end": "2874720"
  },
  {
    "text": "easy and you see it's it's deleted and another thing is you don't need to do a",
    "start": "2874720",
    "end": "2881240"
  },
  {
    "text": "make dur well we we we Gradle automatically creates all the out all",
    "start": "2881240",
    "end": "2886480"
  },
  {
    "text": "the files that are declared as output directory before the task is executed little stuff a lot of goodness we can",
    "start": "2886480",
    "end": "2892960"
  },
  {
    "text": "derive because you you are you can describe the input and output of",
    "start": "2892960",
    "end": "2900280"
  },
  {
    "text": "tasks so it's restarted okay",
    "start": "2901520",
    "end": "2906720"
  },
  {
    "start": "2905000",
    "end": "3005000"
  },
  {
    "text": "so next topic expect the",
    "start": "2906720",
    "end": "2914078"
  },
  {
    "text": "unexpected expect Clint is wood talking to empty chairs that's what",
    "start": "2915079",
    "end": "2921000"
  },
  {
    "text": "I um so the build domain is a complex domain",
    "start": "2923240",
    "end": "2930000"
  },
  {
    "text": "there are many requirements I'm always surprised to hear them right and uh uh so many",
    "start": "2930000",
    "end": "2937000"
  },
  {
    "text": "requirements out there we I would never anticipate as a build system so somehow you have to write a build system basic",
    "start": "2937000",
    "end": "2944280"
  },
  {
    "text": "and and any software for a very complex and unknown domain in a way that it Embraces the unknown not in a way oh",
    "start": "2944280",
    "end": "2951760"
  },
  {
    "text": "unknown keep out of here right uh this is the way to do things right and",
    "start": "2951760",
    "end": "2957920"
  },
  {
    "text": "uh that's that's another thing that is at the heart of Gradle so uh just we",
    "start": "2957920",
    "end": "2963599"
  },
  {
    "text": "just look at an example we have uh",
    "start": "2963599",
    "end": "2968599"
  },
  {
    "text": "another another Java project and uh this Java project has",
    "start": "2969319",
    "end": "2975480"
  },
  {
    "text": "quite a bit of spring related code right so and we want to create separate jars",
    "start": "2975480",
    "end": "2981280"
  },
  {
    "text": "for our spring code that relates to the spring DB layer for our spring code that relates to the core layer Etc the",
    "start": "2981280",
    "end": "2987599"
  },
  {
    "text": "default jar is added by the Java plugin by default it contains all the binaries we tell it hey don't include our spring",
    "start": "2987599",
    "end": "2993880"
  },
  {
    "text": "related code right and then we we have a spring DB jar AS set um a spring core",
    "start": "2993880",
    "end": "3000559"
  },
  {
    "text": "jar and a spring messaging jar so one thing you can now easily do",
    "start": "3000559",
    "end": "3007640"
  },
  {
    "start": "3005000",
    "end": "3295000"
  },
  {
    "text": "with Gradle you can tell Gradle hey",
    "start": "3007640",
    "end": "3013280"
  },
  {
    "text": "uh build use the assemble task which is a dynamic task run it and it it builds",
    "start": "3013280",
    "end": "3021200"
  },
  {
    "text": "all the archives you have declared right it's it checks what what uh what archives are there and it builds",
    "start": "3021200",
    "end": "3027480"
  },
  {
    "text": "them all okay so and you see built by convention there's a lips directory and here we go",
    "start": "3027480",
    "end": "3034280"
  },
  {
    "text": "you see the naming pattern in place the appendix is spring DB so the name is the name of the project rules spring db- one",
    "start": "3034280",
    "end": "3042559"
  },
  {
    "text": "z.j okay that was the pr preliminary",
    "start": "3042559",
    "end": "3048160"
  },
  {
    "text": "now I don't know if you've heard that uh spring Source has changed their license",
    "start": "3048160",
    "end": "3054440"
  },
  {
    "text": "agreement the license the new license agreement",
    "start": "3054440",
    "end": "3059839"
  },
  {
    "text": "says um that every jar that has the name",
    "start": "3059839",
    "end": "3065960"
  },
  {
    "text": "spring in its name must contain a picture of Rod",
    "start": "3065960",
    "end": "3071160"
  },
  {
    "text": "Johnson in The Meta INF directory of that job can you believe",
    "start": "3071160",
    "end": "3076160"
  },
  {
    "text": "that so here's the picture of Rod it's a good by present to Rod I",
    "start": "3077200",
    "end": "3084040"
  },
  {
    "text": "think so here we go now end build masters of the world",
    "start": "3084040",
    "end": "3092720"
  },
  {
    "text": "how do you solve that with end right you could say okay we don't use the default jars of end anymore in",
    "start": "3092720",
    "end": "3098480"
  },
  {
    "text": "this Enterprise we have our own macro Def and every jar must use this macro Dev which then does something like that",
    "start": "3098480",
    "end": "3103920"
  },
  {
    "text": "okay Maven extend the assembly",
    "start": "3103920",
    "end": "3109359"
  },
  {
    "text": "plugin okay how can you do it with Gradle oops damn sorry wrong",
    "start": "3112760",
    "end": "3119880"
  },
  {
    "text": "button okay here we go okay in grer we can say hey Gradle for all ties tasks of",
    "start": "3119880",
    "end": "3125319"
  },
  {
    "text": "type jar which are matching a certain pattern jar archive name contains spring",
    "start": "3125319",
    "end": "3131680"
  },
  {
    "text": "for all those jars add the picture of Rod to The Meta",
    "start": "3131680",
    "end": "3138839"
  },
  {
    "text": "directory so is this pseud code or is it real too good to be true right uh so",
    "start": "3138839",
    "end": "3146200"
  },
  {
    "text": "let's execute Gradle",
    "start": "3146200",
    "end": "3151040"
  },
  {
    "text": "assemble okay one cool thing jar is up to date we haven't changed it but the",
    "start": "3151920",
    "end": "3157559"
  },
  {
    "text": "other jars have picked up oh The Meta imp probably has changed hopefully let's",
    "start": "3157559",
    "end": "3163200"
  },
  {
    "text": "see let's see what's in the zip in the jar I",
    "start": "3163240",
    "end": "3168960"
  },
  {
    "text": "mean here we go faster",
    "start": "3168960",
    "end": "3174240"
  },
  {
    "text": "video you see Rod JPEG and to be",
    "start": "3174240",
    "end": "3180240"
  },
  {
    "text": "sure we look at the standard jar no Rod jpeg",
    "start": "3180240",
    "end": "3186400"
  },
  {
    "text": "okay hey problem solved right now QA is extremely concerned the fees",
    "start": "3186400",
    "end": "3195119"
  },
  {
    "text": "are very high for violating this new agreement and they want to do you know",
    "start": "3195119",
    "end": "3200280"
  },
  {
    "text": "checks now and then whether those jar really have the picture on the other hand there some really big builds out",
    "start": "3200280",
    "end": "3206440"
  },
  {
    "text": "there where the jar takes 30 minutes to be built with all the documentation generation so they're saying hey guys",
    "start": "3206440",
    "end": "3212200"
  },
  {
    "text": "give me a task that only builds the spring jars I'm not I I have better things to do than to wait 30 minutes for",
    "start": "3212200",
    "end": "3218359"
  },
  {
    "text": "a jar to be built that I don't need right okay how can you do that well just",
    "start": "3218359",
    "end": "3224200"
  },
  {
    "text": "do a little refactoring extract variable all spring",
    "start": "3224200",
    "end": "3229960"
  },
  {
    "text": "jars you have an object model right tasks is a is of type t task container",
    "start": "3229960",
    "end": "3236119"
  },
  {
    "text": "with type jar returns another filter jar container matching returns another filter jar container hey you know this",
    "start": "3236119",
    "end": "3241839"
  },
  {
    "text": "is a rich object model so this guy here represents a filter task container now",
    "start": "3241839",
    "end": "3247079"
  },
  {
    "text": "let's apply the rule all all task in this filter task container should have",
    "start": "3247079",
    "end": "3252400"
  },
  {
    "text": "this me should uh uh uh should contain the picture and then use this filter task container to create a task spring",
    "start": "3252400",
    "end": "3258920"
  },
  {
    "text": "Jas that depends on a filter task container a oneliner now you just say hey Gradle",
    "start": "3258920",
    "end": "3267720"
  },
  {
    "text": "spring jars camel case execution boom only the spring jars are",
    "start": "3267720",
    "end": "3274319"
  },
  {
    "text": "built okay now let's add a little bit because it's fun uh the next requirement you need to",
    "start": "3277839",
    "end": "3285640"
  },
  {
    "text": "create you want to create some check some files for the jars to better track them right so you can add Behavior to",
    "start": "3285640",
    "end": "3291359"
  },
  {
    "text": "those spring jars that you say hey for every jar create a checkm",
    "start": "3291359",
    "end": "3296760"
  },
  {
    "start": "3295000",
    "end": "3415000"
  },
  {
    "text": "task does Gradle have a checkm task yes because ant has a checkm task and Gradle",
    "start": "3296760",
    "end": "3301799"
  },
  {
    "text": "ships with ant ant is part of the greater distribution so everything that is an end is your",
    "start": "3301799",
    "end": "3307240"
  },
  {
    "text": "friend so we",
    "start": "3307240",
    "end": "3313240"
  },
  {
    "text": "executing the spring jaws and you see build lips here we go check sum is there",
    "start": "3313240",
    "end": "3321880"
  },
  {
    "text": "okay now oh the next thing is a bit a little bit",
    "start": "3321880",
    "end": "3330359"
  },
  {
    "text": "the next requirement I mean this is not only part of this project but you want to apply this stuff to all your projects",
    "start": "3330359",
    "end": "3339000"
  },
  {
    "text": "in the Enterprise right so oops sorry so the first thing we need to",
    "start": "3339000",
    "end": "3346240"
  },
  {
    "text": "do the first thing we need to do is at the moment the picture is",
    "start": "3346720",
    "end": "3353799"
  },
  {
    "text": "um is is part of the of the sourcer of this project so we want to use a picture",
    "start": "3353799",
    "end": "3360799"
  },
  {
    "text": "of Rod that is in a repository and can be retrieved from every project so how do we do that well we declare a",
    "start": "3360799",
    "end": "3367240"
  },
  {
    "text": "repository a maven repository somewhere repo atr.org grer demo then we create a",
    "start": "3367240",
    "end": "3373359"
  },
  {
    "text": "custom dependency configuration and add the image that is in this repository com",
    "start": "3373359",
    "end": "3379119"
  },
  {
    "text": "my comp spring rot 10 jpeg as a dependency like you can add a",
    "start": "3379119",
    "end": "3385520"
  },
  {
    "text": "j as a dependency you can also add a JPEG as a dependency that would work with Maven or with grad or with Ivy that",
    "start": "3385520",
    "end": "3390760"
  },
  {
    "text": "you can do that right uh so and then in the from section of the meta imp we just",
    "start": "3390760",
    "end": "3396640"
  },
  {
    "text": "say from configuration spring boom We Now retrieve the image from from Rod",
    "start": "3396640",
    "end": "3403359"
  },
  {
    "text": "from a remote repository and uh um that's the first step to be able to share this logic",
    "start": "3403359",
    "end": "3410119"
  },
  {
    "text": "across projects right you see Rod 10 jpeg now",
    "start": "3410119",
    "end": "3416280"
  },
  {
    "start": "3415000",
    "end": "3599000"
  },
  {
    "text": "now the next thing we want to do is to share this how can we do that well let's",
    "start": "3416280",
    "end": "3423280"
  },
  {
    "text": "cut this guy out let's go to",
    "start": "3423280",
    "end": "3431079"
  },
  {
    "text": "GitHub it's my GitHub repository I have a couple of plugins there and there is a",
    "start": "3434000",
    "end": "3439799"
  },
  {
    "text": "spring. Gradle file which I already put there it's exactly the same code I just cut out of my build script",
    "start": "3439799",
    "end": "3448079"
  },
  {
    "text": "right it's exactly the same code so I now",
    "start": "3448079",
    "end": "3455920"
  },
  {
    "text": "uh take the raw URL see this is this is just the URL to",
    "start": "3455920",
    "end": "3461359"
  },
  {
    "text": "this file copy it and say apply from",
    "start": "3461359",
    "end": "3469359"
  },
  {
    "text": "boom this is a remote cradle script A Gradle plugin and say clean spring jars",
    "start": "3469359",
    "end": "3478000"
  },
  {
    "text": "and unzip R's picture is there now every project in your Enterprise can use that",
    "start": "3478000",
    "end": "3484559"
  },
  {
    "text": "it gets even more interesting later when we show you how you can Auto apply such plugins that the developers don't even",
    "start": "3484559",
    "end": "3490000"
  },
  {
    "text": "need to apply them explicitly okay so before you",
    "start": "3490000",
    "end": "3497920"
  },
  {
    "text": "tweet spring sauce has changed the license agreement they haven't as you can imagine but the set",
    "start": "3497920",
    "end": "3506520"
  },
  {
    "text": "of requirements that's the typical thing that happens to you when you when you need to do automation this is not a",
    "start": "3506520",
    "end": "3512480"
  },
  {
    "text": "bizarre requirement I've I've seen more bizarre requirements I've seen requirements like this unit test this",
    "start": "3512480",
    "end": "3517680"
  },
  {
    "text": "one unit test only uh fails always when you run it the first time when you run it the second time and when it then",
    "start": "3517680",
    "end": "3524240"
  },
  {
    "text": "fails it fails when it then when it succeeds it succeeds and there's nothing those guys could do about it because it",
    "start": "3524240",
    "end": "3530680"
  },
  {
    "text": "was a complex test the infrastructure team was involved they didn't want to do the change changes to fix it so there",
    "start": "3530680",
    "end": "3536400"
  },
  {
    "text": "are always situations you have to deal with and it doesn't help you if there is a tool that says well it shouldn't be",
    "start": "3536400",
    "end": "3542319"
  },
  {
    "text": "like this well bloody hell I know that it shouldn't be like this but it is like this and it is not in my power to change",
    "start": "3542319",
    "end": "3549839"
  },
  {
    "text": "that so should I disable the test is that better of course not so you need",
    "start": "3549839",
    "end": "3555240"
  },
  {
    "text": "and this is a when I came across this requirement I mean I haven't thought about this or we when we were creating",
    "start": "3555240",
    "end": "3561440"
  },
  {
    "text": "Gradle but in Gradle you can hook into the into the test into the test Runner you could you could deal with this",
    "start": "3561440",
    "end": "3568280"
  },
  {
    "text": "requirement and then the other thing is if you have such a pathological requirement even and you would ask us",
    "start": "3568280",
    "end": "3574880"
  },
  {
    "text": "could you please in the next release of cradle at a method uh fail only uh after",
    "start": "3574880",
    "end": "3580960"
  },
  {
    "text": "so and so many runs we would say no no no no our API stays",
    "start": "3580960",
    "end": "3586240"
  },
  {
    "text": "lean this this crap no we don't if you are a big framework the only thing you can do to",
    "start": "3586240",
    "end": "3593039"
  },
  {
    "text": "accommodate the pathologies of the world is to blad up your API because people can can't can't extend it right so you",
    "start": "3593039",
    "end": "3600079"
  },
  {
    "text": "have to wait for the next release and then yeah either they they they screw up the API to help you or not so but I",
    "start": "3600079",
    "end": "3607520"
  },
  {
    "text": "would say hey use the grader toolkit to express that you could even just as a side",
    "start": "3607520",
    "end": "3614319"
  },
  {
    "text": "note extend a grader test task easily to say hey test task I add another property",
    "start": "3614319",
    "end": "3620559"
  },
  {
    "text": "fail after so many runs just for your Enterprise build infrastructure you can extend even the API of the Gradle task",
    "start": "3620559",
    "end": "3627599"
  },
  {
    "text": "but please that will never be part of the public API of the Gradle distribution but you can model",
    "start": "3627599",
    "end": "3634960"
  },
  {
    "text": "that so multimodule builds multi project build I should",
    "start": "3635839",
    "end": "3642839"
  },
  {
    "text": "decide on a terminology so [Music] um here we have a root directory is",
    "start": "3642839",
    "end": "3650200"
  },
  {
    "text": "called multiproject and we have three components API shared web server so three terms we have now component module",
    "start": "3650200",
    "end": "3658359"
  },
  {
    "text": "project yeah I always I don't know one day I have to decide which one I should use but",
    "start": "3658359",
    "end": "3664480"
  },
  {
    "text": "anyhow so uh how can you and they they have dependencies between each other how",
    "start": "3664480",
    "end": "3669839"
  },
  {
    "text": "can you model this with Gradle well the first thing you do is to",
    "start": "3669839",
    "end": "3675319"
  },
  {
    "text": "say hey I create a settings. Gradle file and I tell cradle those are the",
    "start": "3675319",
    "end": "3682960"
  },
  {
    "text": "components the sub compon components that take part of this single build API",
    "start": "3682960",
    "end": "3688880"
  },
  {
    "text": "shared and web service okay so you can now ask Gradle hey show",
    "start": "3688880",
    "end": "3695559"
  },
  {
    "text": "me the projects and",
    "start": "3695559",
    "end": "3700720"
  },
  {
    "text": "sorry and you get such a report you got the project structure can even be nested",
    "start": "3703480",
    "end": "3708599"
  },
  {
    "text": "it can have it can have multiple hierarchies okay that was the first step we need to do the next thing we create a",
    "start": "3708599",
    "end": "3714240"
  },
  {
    "text": "build build script in the root project in multiproject and tell tell cradle",
    "start": "3714240",
    "end": "3719480"
  },
  {
    "text": "what is common between all the components so for all the components we say they are Java projects all the",
    "start": "3719480",
    "end": "3725119"
  },
  {
    "text": "components should get their repositories from Maven Central and all the components should use junit for A2 for",
    "start": "3725119",
    "end": "3730520"
  },
  {
    "text": "compiling and running the tests and all the components are version one Z okay good now the shared component doesn't",
    "start": "3730520",
    "end": "3739119"
  },
  {
    "text": "have a build script on its own it just you it's just happy with the with the",
    "start": "3739119",
    "end": "3744520"
  },
  {
    "text": "stuff that is uh uh uh defined in the in the root project so we go to shared and",
    "start": "3744520",
    "end": "3750279"
  },
  {
    "text": "we can now say hey Gradle build shared and shed is built okay boom so API is our next",
    "start": "3750279",
    "end": "3759039"
  },
  {
    "text": "candidate okay shed 10 o jar API is different we need a spe we need a",
    "start": "3759039",
    "end": "3765839"
  },
  {
    "text": "build script for API because API has uh uh dependencies that need to be defined right so the first thing API depends on",
    "start": "3765839",
    "end": "3773559"
  },
  {
    "text": "shared if it needs the output of shared for compiling so in Gradle we have a",
    "start": "3773559",
    "end": "3780000"
  },
  {
    "text": "specific notations for saying this is a project dependency this is a dependency to another component versus an external",
    "start": "3780000",
    "end": "3785880"
  },
  {
    "text": "dependency right and it also needs Commons Lang for compiling okay let's go",
    "start": "3785880",
    "end": "3792559"
  },
  {
    "text": "to API and let's run the",
    "start": "3792559",
    "end": "3798359"
  },
  {
    "text": "build and what is interesting now is that grade will automatically build shared before it build API right so",
    "start": "3798760",
    "end": "3807119"
  },
  {
    "text": "which is yeah pretty cool when you have a larger code base and you're",
    "start": "3807119",
    "end": "3812520"
  },
  {
    "text": "debugging uh your application you you often don't know in which components you you're you're",
    "start": "3812520",
    "end": "3818520"
  },
  {
    "text": "you're changing Stuff Etc and then when you then run the build to figure out if everything is working you don't want to",
    "start": "3818520",
    "end": "3824079"
  },
  {
    "text": "manually uh uh rebuild the components you have changed but you also don't want to do a full build because it takes too",
    "start": "3824079",
    "end": "3829760"
  },
  {
    "text": "long right so okay shared is not fully built it's",
    "start": "3829760",
    "end": "3835039"
  },
  {
    "text": "not tested right it's only only the J is produced API is fully built okay now",
    "start": "3835039",
    "end": "3840200"
  },
  {
    "text": "let's deal with web service web service also needs to have a build script on its own because it's a it's a war project it",
    "start": "3840200",
    "end": "3848319"
  },
  {
    "text": "extends the Java project and it has also dependencies um commment",
    "start": "3848319",
    "end": "3855000"
  },
  {
    "text": "collection Commons IO and a dependency",
    "start": "3856039",
    "end": "3861400"
  },
  {
    "text": "on API so let's build web",
    "start": "3861400",
    "end": "3867079"
  },
  {
    "text": "service that's what we call a partial build and you see first Shar is built",
    "start": "3867400",
    "end": "3873359"
  },
  {
    "text": "then API is built and then web service is fully",
    "start": "3873359",
    "end": "3877599"
  },
  {
    "text": "built okay so let's go to",
    "start": "3879599",
    "end": "3886279"
  },
  {
    "text": "API so and the question is if you did a change to API as a developer and you you",
    "start": "3886279",
    "end": "3893160"
  },
  {
    "text": "build API the tests are running Etc um are you good enough for",
    "start": "3893160",
    "end": "3898559"
  },
  {
    "text": "committing the code why",
    "start": "3898559",
    "end": "3904480"
  },
  {
    "text": "not exactly so I would like to",
    "start": "3904480",
    "end": "3909720"
  },
  {
    "text": "know so I tell Gradle build API and build build all the dependent components",
    "start": "3909720",
    "end": "3915240"
  },
  {
    "text": "as well and you see API is fully built and tested and now web service is fully built and",
    "start": "3915240",
    "end": "3920839"
  },
  {
    "text": "tested web service cons is consuming API right now you're good to",
    "start": "3920839",
    "end": "3926599"
  },
  {
    "text": "commit this partial build that only builds a subcraft of the components plus",
    "start": "3926599",
    "end": "3932240"
  },
  {
    "text": "incremental build is a tramatic time saer to get the average build time down you could even say",
    "start": "3932240",
    "end": "3937960"
  },
  {
    "text": "hey build the components of API that depend on API and also build fully the",
    "start": "3937960",
    "end": "3943400"
  },
  {
    "text": "components that a is are needed by API so Shar is now also built and tested",
    "start": "3943400",
    "end": "3950000"
  },
  {
    "text": "okay the last thing I would like to show with multiproject builds is um",
    "start": "3950000",
    "end": "3955960"
  },
  {
    "text": "you can of course go to the root project and build everything and that's what we're doing together with the D- profile",
    "start": "3955960",
    "end": "3961480"
  },
  {
    "text": "option Gradle creates a profile",
    "start": "3961480",
    "end": "3967480"
  },
  {
    "text": "report that shows you uh the performance characteristics of that build right",
    "start": "3967480",
    "end": "3974160"
  },
  {
    "text": "total build time startup time how long it took to configure the build how long",
    "start": "3974160",
    "end": "3979240"
  },
  {
    "text": "dependency resolution took for the for the different Scopes and how long the T",
    "start": "3979240",
    "end": "3984279"
  },
  {
    "text": "execution took that's so we take performance very seriously",
    "start": "3984279",
    "end": "3989960"
  },
  {
    "text": "so you could even do stuff like here we said this is common for all sub projects",
    "start": "3989960",
    "end": "3997279"
  },
  {
    "text": "now we can do something what we call filtered injection we can specify the stuff that is only common for libraries",
    "start": "3997279",
    "end": "4003720"
  },
  {
    "text": "for example in this case for API and for shared and then we def Define hey",
    "start": "4003720",
    "end": "4010640"
  },
  {
    "text": "libraries are all a sub projects that don't have the name web in inside you can use whatever filter you want right",
    "start": "4010640",
    "end": "4017119"
  },
  {
    "text": "that don't start with web and that way you can Define in your root build all the stuff that is common for all the",
    "start": "4017119",
    "end": "4022880"
  },
  {
    "text": "component the stuff that is common for the libraries that is common for the web project that is common for the documentation projects Etc so very fine",
    "start": "4022880",
    "end": "4029599"
  },
  {
    "text": "grain way of injecting things not a single inheritance-based model",
    "start": "4029599",
    "end": "4035000"
  },
  {
    "text": "right you can do some other cool stuff you see here all those build.",
    "start": "4035000",
    "end": "4040520"
  },
  {
    "text": "gradles damn what build. Gradle is what build. Gradle you have now multiple components so you could easily tell",
    "start": "4040520",
    "end": "4047400"
  },
  {
    "text": "Gradle hey Gradle I want to have a different naming pattern for all my subcomponents the build file name should",
    "start": "4047400",
    "end": "4054400"
  },
  {
    "text": "be the should be the project name do Gradle even this is something you can configure and then you just rename the",
    "start": "4054400",
    "end": "4062640"
  },
  {
    "text": "build.gradle of web service to web service.",
    "start": "4062640",
    "end": "4066838"
  },
  {
    "text": "Gradle we should have made this the default behavior of Gradle but now backwards compatibility wise we can't",
    "start": "4068359",
    "end": "4073480"
  },
  {
    "text": "change it but it's easy for you to to do this to do this right",
    "start": "4073480",
    "end": "4081760"
  },
  {
    "text": "okay oh and you can import easily such a multim module build into",
    "start": "4081880",
    "end": "4088520"
  },
  {
    "text": "Eclipse we go we go to our",
    "start": "4088599",
    "end": "4095839"
  },
  {
    "text": "multi C the multi project buil we tell Eclipse built a model we tell now",
    "start": "4095839",
    "end": "4103080"
  },
  {
    "text": "eclipse import everything we could even specify tasks that should be that should be run",
    "start": "4103080",
    "end": "4108440"
  },
  {
    "text": "before and after the import and we say finish and",
    "start": "4108440",
    "end": "4114400"
  },
  {
    "text": "uh everything is now imported into",
    "start": "4114799",
    "end": "4119158"
  },
  {
    "text": "Eclipse select working set multiproject boom here we go and there is now a",
    "start": "4121080",
    "end": "4128798"
  },
  {
    "text": "cradle dependency container in eclipse and uh the source folders are correctly configured Etc okay now coming to one to",
    "start": "4128799",
    "end": "4138120"
  },
  {
    "text": "the to the Highlight I have still a little bit of time left build Master's",
    "start": "4138120",
    "end": "4144359"
  },
  {
    "text": "Delight what do we mean by",
    "start": "4144359",
    "end": "4148278"
  },
  {
    "text": "that the greater rapper is one of those pieces we we really like let's demo this",
    "start": "4150080",
    "end": "4155920"
  },
  {
    "text": "to you so we have here a normal Java project and we created the build master",
    "start": "4155920",
    "end": "4161880"
  },
  {
    "text": "would create a task called rapper nothing else just task repper type",
    "start": "4161880",
    "end": "4167440"
  },
  {
    "text": "rapper and if the build master then executes this",
    "start": "4167440",
    "end": "4172838"
  },
  {
    "text": "task the following is happening if you look",
    "start": "4173480",
    "end": "4179000"
  },
  {
    "text": "here this task creates a cradle w a cradle",
    "start": "4179040",
    "end": "4185080"
  },
  {
    "text": "wbat and in a cradle directory it creates a repper directory with grader",
    "start": "4185080",
    "end": "4190318"
  },
  {
    "text": "repper jar and Gradle repper properties and this is the greater repper properties",
    "start": "4190319",
    "end": "4196320"
  },
  {
    "text": "file so those four files you would commit to Version Control the next time",
    "start": "4196320",
    "end": "4203840"
  },
  {
    "text": "one of your developers updates from Version Control the developer can build with",
    "start": "4203840",
    "end": "4209640"
  },
  {
    "text": "Gradle even if Gradle is not installed on the machine the developer would just say Gradle W instead of Gradle and then",
    "start": "4209640",
    "end": "4216000"
  },
  {
    "text": "does all what he wants to do with Gradle and then the rapper would go to this distribution URL and download this",
    "start": "4216000",
    "end": "4222640"
  },
  {
    "text": "specific version of Gradle and installs it to the machine of the developer if you upgrade to a new version of Gradle",
    "start": "4222640",
    "end": "4229159"
  },
  {
    "text": "two weeks later you just change the repper properties file with a new with the new URL committed to Version Control",
    "start": "4229159",
    "end": "4235920"
  },
  {
    "text": "people next time people do an update from Version Control they use the the new version of cradle extremely",
    "start": "4235920",
    "end": "4241560"
  },
  {
    "text": "convenient for developers one aspect the other thing is historical builds compliance you now",
    "start": "4241560",
    "end": "4250719"
  },
  {
    "text": "have inversion control the build system that is needed to build this software right it's",
    "start": "4250719",
    "end": "4257760"
  },
  {
    "text": "nailed down so and no longer support issues like it doesn't build with my",
    "start": "4257760",
    "end": "4264280"
  },
  {
    "text": "version of grader say well interesting use the rapper right so",
    "start": "4264280",
    "end": "4269900"
  },
  {
    "text": "[Music] um okay next power feature in it",
    "start": "4269900",
    "end": "4278039"
  },
  {
    "text": "scripts it's our La last section so let's say in all your",
    "start": "4278840",
    "end": "4285760"
  },
  {
    "text": "projects you have the requirement that the repository should be retrieved from Aven",
    "start": "4285760",
    "end": "4292159"
  },
  {
    "text": "Central so we have here normal Java project we cut this out that that the",
    "start": "4292159",
    "end": "4299639"
  },
  {
    "text": "dependencies are retrieved from Maven Central and we just take some in it script and we say all projects",
    "start": "4299639",
    "end": "4307080"
  },
  {
    "text": "repositories Maven Central this is some script somewhere on your machine right",
    "start": "4307080",
    "end": "4312239"
  },
  {
    "text": "so you now can go to this",
    "start": "4312239",
    "end": "4316559"
  },
  {
    "text": "build testing with Gradle right where we just remove the",
    "start": "4317920",
    "end": "4323280"
  },
  {
    "text": "repository declaration and you can say hey cradle build this guy but inject",
    "start": "4323280",
    "end": "4330000"
  },
  {
    "text": "this init script into the build and it",
    "start": "4330000",
    "end": "4336400"
  },
  {
    "text": "works right the repositories are retrieved from Maven Central everything is fine although it was not specified in",
    "start": "4336400",
    "end": "4342000"
  },
  {
    "text": "the build of the testing with Gradle project now let's do some cooler stuff",
    "start": "4342000",
    "end": "4347159"
  },
  {
    "text": "Gradle has a very deep API you can hook into every aspect of the build life",
    "start": "4347159",
    "end": "4352360"
  },
  {
    "text": "cycle so for example what about a warning when the tests are taking long",
    "start": "4352360",
    "end": "4358480"
  },
  {
    "text": "when a test method takes longer than 20 milliseconds to run would be cool so the Cradle object here is",
    "start": "4358480",
    "end": "4366960"
  },
  {
    "text": "available in an init script it represents the Cradle runtime and we now tell the Cradle build runtime hey cradle",
    "start": "4366960",
    "end": "4373600"
  },
  {
    "text": "after all your build build projects components are evaluated right do the",
    "start": "4373600",
    "end": "4381800"
  },
  {
    "text": "following give me the root project and now access all projects in",
    "start": "4381880",
    "end": "4388280"
  },
  {
    "text": "this in this build and for all tasks of type test",
    "start": "4388280",
    "end": "4394199"
  },
  {
    "text": "right hook in a test listener calculate the time it took to",
    "start": "4394199",
    "end": "4402239"
  },
  {
    "text": "run the test check whether it was too long and then",
    "start": "4402239",
    "end": "4408840"
  },
  {
    "text": "issue a warning with the name of the",
    "start": "4408840",
    "end": "4414120"
  },
  {
    "text": "test okay now let's reexecute testing with",
    "start": "4415280",
    "end": "4423000"
  },
  {
    "text": "Gradle with this init script and you see you now have those",
    "start": "4423000",
    "end": "4429719"
  },
  {
    "text": "warnings now you don't always want to specify an init script right right so what can you do to make it common",
    "start": "4429719",
    "end": "4436120"
  },
  {
    "text": "Behavior you take this you take you go to the Gradle",
    "start": "4436120",
    "end": "4441960"
  },
  {
    "text": "distribution and every Gradle distribution has an init.d directory you create now a script in",
    "start": "4443080",
    "end": "4450840"
  },
  {
    "text": "this init.d directory my init do Gradle whatever however you call",
    "start": "4450840",
    "end": "4458000"
  },
  {
    "text": "it paste this code go back to the command",
    "start": "4458199",
    "end": "4466198"
  },
  {
    "text": "line now you don't need to specify the in script",
    "start": "4466639",
    "end": "4471520"
  },
  {
    "text": "anymore run the tests and you see the warnings are",
    "start": "4474120",
    "end": "4481960"
  },
  {
    "text": "printed so and now the full story is the following you take a greater",
    "start": "4483679",
    "end": "4490360"
  },
  {
    "text": "distribution as the build master at the stuff you want to Auto apply to all",
    "start": "4490360",
    "end": "4496560"
  },
  {
    "text": "of your projects in in A.D directory and then you point the rapper properties to",
    "start": "4496560",
    "end": "4501920"
  },
  {
    "text": "this distribution right in a reper properties file you can point to your Enterprise",
    "start": "4501920",
    "end": "4508080"
  },
  {
    "text": "grader distribution with the init.d directory with your Enterprise",
    "start": "4508080",
    "end": "4514400"
  },
  {
    "text": "customizations does it make sense and then all your developers will have this",
    "start": "4514400",
    "end": "4520159"
  },
  {
    "text": "Behavior including the picture of Ron Rod Johnson in a meta in directory",
    "start": "4520159",
    "end": "4527400"
  },
  {
    "text": "right pardon me don't have exactly it's completely transparent they don't have to read a Wiki how to set up my local",
    "start": "4528239",
    "end": "4534719"
  },
  {
    "text": "build system so and this is a really deep API I mean it's one thing to define",
    "start": "4534719",
    "end": "4540000"
  },
  {
    "text": "a repository it's another thing to hook into the test into the Gradle JV end that running the test and get events",
    "start": "4540000",
    "end": "4546159"
  },
  {
    "text": "back and do something with them of course you can also use init scripts and say hey this init script is all only for",
    "start": "4546159",
    "end": "4552520"
  },
  {
    "text": "CI so stuff you only want to do on CI you can tell the CI hey use this init script",
    "start": "4552520",
    "end": "4559400"
  },
  {
    "text": "that is not happening on local bills for example the init script could check uh and now we we're back to the build",
    "start": "4559400",
    "end": "4565800"
  },
  {
    "text": "language hey cradle build give me all your repositories did you dare to",
    "start": "4565800",
    "end": "4571719"
  },
  {
    "text": "declare your own repositories in the project build and not use the company",
    "start": "4571719",
    "end": "4576800"
  },
  {
    "text": "repository no no no no build fail right you want to allow that on a",
    "start": "4576800",
    "end": "4581960"
  },
  {
    "text": "local build because people want to try out stuff but maybe not on the C build right so",
    "start": "4581960",
    "end": "4589199"
  },
  {
    "text": "uh yeah you can go yeah it's it's Gradle is deep you can go you can go into the",
    "start": "4589199",
    "end": "4595000"
  },
  {
    "text": "guts of Gradle to to model your requirements so the other thing you can",
    "start": "4595000",
    "end": "4601600"
  },
  {
    "text": "do is in in a project directory in in one",
    "start": "4601600",
    "end": "4607159"
  },
  {
    "text": "of your projects you can you can or in any of your projects you can put a cradle. properties file right and you",
    "start": "4607159",
    "end": "4613400"
  },
  {
    "text": "can specify certain properties let's not talk about the demon right now you can specify the Java home that should be",
    "start": "4613400",
    "end": "4620159"
  },
  {
    "text": "used to run the build and you can specify the jvm arcs that should be used",
    "start": "4620159",
    "end": "4626120"
  },
  {
    "text": "by the jvm that is executing the build again no build Wicky that is saying",
    "start": "4626120",
    "end": "4631600"
  },
  {
    "text": "please set your end Ops or cradle Ops to that value which is anyhow then Global",
    "start": "4631600",
    "end": "4636679"
  },
  {
    "text": "for all the projects you can lock this down it's version controlled it's his it's historical it might change over",
    "start": "4636679",
    "end": "4643520"
  },
  {
    "text": "time right so so that means when cradle runs it",
    "start": "4643520",
    "end": "4649840"
  },
  {
    "text": "checks is the jvm arcs property set if it is set it fires up another jvm that",
    "start": "4649840",
    "end": "4657280"
  },
  {
    "text": "then executes the build right and if you use the demon then then things are much",
    "start": "4657280",
    "end": "4662400"
  },
  {
    "text": "more efficient because grad then has a long running jvm that is warmed up and is much more responsive so so so then",
    "start": "4662400",
    "end": "4671120"
  },
  {
    "text": "Gradle just checks do we have already a demon jvm with those jvm AR setting well then reuse it",
    "start": "4671120",
    "end": "4677040"
  },
  {
    "text": "right okay so I'm running out of time so uh yeah Gradle has very good end",
    "start": "4677040",
    "end": "4683600"
  },
  {
    "text": "integration you can reuse any end task right with Gradle you can even import end builds into cradle and Gradle reps",
    "start": "4683600",
    "end": "4690800"
  },
  {
    "text": "the end targets at runtime you can inject properties into end builds from Gradle so with end we have a very deep",
    "start": "4690800",
    "end": "4697000"
  },
  {
    "text": "integration with Maven we integrate very well on a repository level so grad is",
    "start": "4697000",
    "end": "4703000"
  },
  {
    "text": "able to generate PS right to publish uh artifacts with the p to to Maven",
    "start": "4703000",
    "end": "4710280"
  },
  {
    "text": "repositories Maven cradle understands P understands Maven snapshots on a dependency level Maven is two things",
    "start": "4710280",
    "end": "4717400"
  },
  {
    "text": "Maven is a build system and Maven is also a protocol for dependency Management on a protocol for dependency",
    "start": "4717400",
    "end": "4723280"
  },
  {
    "text": "management level we are fully compatible with Maven right so if different components different teams interact in a",
    "start": "4723280",
    "end": "4730120"
  },
  {
    "text": "company via a maven repository they the other team won't notice whether you're using Gradle or Maven right we are",
    "start": "4730120",
    "end": "4737719"
  },
  {
    "text": "working on also on a way to import Maven builds to convert Maven builds to cradle",
    "start": "4737719",
    "end": "4744159"
  },
  {
    "text": "so in 1 three in a which is should be our in in four weeks or so you should see a first a first conversion plug-in",
    "start": "4744159",
    "end": "4752560"
  },
  {
    "text": "that's migration is a very interesting topic build migration it's a it's",
    "start": "4752560",
    "end": "4757639"
  },
  {
    "text": "Mission critical right I mean for many builds so you want to you want to do this in a very safe way way and uh uh",
    "start": "4757639",
    "end": "4764520"
  },
  {
    "text": "what we usually recommend is use a build system that doesn't force you to tear",
    "start": "4764520",
    "end": "4769639"
  },
  {
    "text": "apart the existing input structure if you have a build system that says well what this end build is using I can't",
    "start": "4769639",
    "end": "4776159"
  },
  {
    "text": "reproduce you have to completely change your Source structure well this is an",
    "start": "4776159",
    "end": "4782600"
  },
  {
    "text": "end build 100 people are using every day and this is this is this is code that is constant code that is constantly",
    "start": "4782600",
    "end": "4788800"
  },
  {
    "text": "developed so what do they say well then you have to Branch I suppose well I I suppose you have to Branch then correct",
    "start": "4788800",
    "end": "4795719"
  },
  {
    "text": "so then every day have fun with the syncing of the different repositories have fun with comparing the",
    "start": "4795719",
    "end": "4802840"
  },
  {
    "text": "results never do build migration like that uh and if you have the choice",
    "start": "4802840",
    "end": "4808880"
  },
  {
    "text": "choose a tool that doesn't force you to do it like that what we usually recommend is don't touch the existing",
    "start": "4808880",
    "end": "4815239"
  },
  {
    "text": "input structure until the the the end build for example as long as it's as it's life at a cradle build that",
    "start": "4815239",
    "end": "4823400"
  },
  {
    "text": "consumes the same input structure and Gradle is extremely flexible so we had companies that were using classb files",
    "start": "4823400",
    "end": "4829719"
  },
  {
    "text": "from Eclipse as their Master dependency metadata well I wouldn't give them a book for",
    "start": "4829719",
    "end": "4837440"
  },
  {
    "text": "that but I told them don't change it right now you know we want to have comp",
    "start": "4837440",
    "end": "4843159"
  },
  {
    "text": "we want to we want to be able to compare results right so we wrote an adapter that translated",
    "start": "4843159",
    "end": "4849719"
  },
  {
    "text": "theclass pass file into the Crader dependency notation and then we we we started to build up",
    "start": "4849719",
    "end": "4856440"
  },
  {
    "text": "the functionality of the end build with Gradle and for every relevant output of the build the archives the Java docs the",
    "start": "4856440",
    "end": "4863639"
  },
  {
    "text": "test that are run we wrote cradle tasks that compared are the archives exactly the same that are produced by the Cradle",
    "start": "4863639",
    "end": "4869600"
  },
  {
    "text": "build compared to the end build are the same tests around is Java do the same I couldn't imagine to do any significant",
    "start": "4869600",
    "end": "4876199"
  },
  {
    "text": "build migration without such tests it's a nightmare and I've seen people suffering heavily from doing build",
    "start": "4876199",
    "end": "4882199"
  },
  {
    "text": "migration without such a safety net I would never do that because what is the",
    "start": "4882199",
    "end": "4888120"
  },
  {
    "text": "same tomorrow might be not today might be not the same tomorrow right this this is this is code under development this",
    "start": "4888120",
    "end": "4893960"
  },
  {
    "text": "is a moving Target so you want to have always the possibility to say is M Gradle build doing the same and if it's",
    "start": "4893960",
    "end": "4899520"
  },
  {
    "text": "not long any longer doing the same you have to figure out why at one point the Gradle build is uh is capable of",
    "start": "4899520",
    "end": "4906360"
  },
  {
    "text": "reproducing all the functionality the tests are running and then you can say Okay I I switch right now the Cradle",
    "start": "4906360",
    "end": "4911760"
  },
  {
    "text": "build is my production build and then you can start to say okay maybe finally",
    "start": "4911760",
    "end": "4917440"
  },
  {
    "text": "it's time for the do class pass to be derived metadata and no longer Master metadata etc",
    "start": "4917440",
    "end": "4924000"
  },
  {
    "text": "etc but test test driven build migration is is the way to",
    "start": "4924000",
    "end": "4929440"
  },
  {
    "text": "go a little bit background information so Gradle is a is a very active project",
    "start": "4929440",
    "end": "4935880"
  },
  {
    "text": "right we have a Vibrant Community um and um very proud of our",
    "start": "4935880",
    "end": "4942239"
  },
  {
    "text": "community um yeah I think we have very very nice team of developers so the the founder of",
    "start": "4942239",
    "end": "4949520"
  },
  {
    "text": "the moito testing framework is part of the Gradle team the author of the The Spock framework one of the founders of",
    "start": "4949520",
    "end": "4955440"
  },
  {
    "text": "selenium so yeah very the Gradle cor committers and and and part of Gradle",
    "start": "4955440",
    "end": "4961920"
  },
  {
    "text": "Weare uh we release frequently with the m Stones people",
    "start": "4961920",
    "end": "4967400"
  },
  {
    "text": "didn't realize that we release frequently but now since 10 every six weeks",
    "start": "4967400",
    "end": "4973080"
  },
  {
    "text": "there has been a new Gradle version one two one one one two 13 will be out there",
    "start": "4973080",
    "end": "4979320"
  },
  {
    "text": "in in a couple of or in four weeks so uh we practice what we preach with continuous delivery and and we are able",
    "start": "4979320",
    "end": "4985920"
  },
  {
    "text": "to do this because we are highly automated we have a oneclick release and we have a pretty complex release process",
    "start": "4985920",
    "end": "4992159"
  },
  {
    "text": "right and we have 8,000 unit test to guarantee the quality so that's uh",
    "start": "4992159",
    "end": "5001199"
  },
  {
    "text": "um yeah so uh uh many significant projects have switched to cradle you",
    "start": "5001199",
    "end": "5007360"
  },
  {
    "text": "know the first one was hibernate a couple of years ago and spring Source has has completely switched and almost",
    "start": "5007360",
    "end": "5014679"
  },
  {
    "text": "completely and uh yeah many Enterprises are using cradle in production for quite",
    "start": "5014679",
    "end": "5020239"
  },
  {
    "text": "a while even before 10 was out so uh so and it's getting it's getting more and",
    "start": "5020239",
    "end": "5026080"
  },
  {
    "text": "more there's a there's a there's a strong momentum going on um and uh with",
    "start": "5026080",
    "end": "5032480"
  },
  {
    "text": "which which is important when you when you choose such a such an infrastructure technology right you want to be sure",
    "start": "5032480",
    "end": "5038560"
  },
  {
    "text": "that uh that it that it will be around also in five years right so uh there's a company behind Gradle called Gradle",
    "start": "5038560",
    "end": "5045320"
  },
  {
    "text": "Weare which provides uh support subscription now all the Professional Service model training on-site",
    "start": "5045320",
    "end": "5051960"
  },
  {
    "text": "Consulting remote Consulting um uh prioritized open source development custom development Etc delivered by",
    "start": "5051960",
    "end": "5058800"
  },
  {
    "text": "Cradle core developers so um yeah that's it for tonight thank you for",
    "start": "5058800",
    "end": "5067679"
  },
  {
    "text": "your [Applause]",
    "start": "5067679",
    "end": "5072690"
  },
  {
    "text": "[Music]",
    "start": "5072690",
    "end": "5078119"
  },
  {
    "text": "attention",
    "start": "5078119",
    "end": "5081119"
  }
]