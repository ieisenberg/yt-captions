[
  {
    "start": "0",
    "end": "94000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "23560"
  },
  {
    "text": "so uh I want to talk to you today about um styles and themes in",
    "start": "25439",
    "end": "30920"
  },
  {
    "text": "Android it's not a very technical talk um but it is probably it is one of the",
    "start": "30920",
    "end": "38280"
  },
  {
    "text": "things that you will find uh most useful I think uh I think you will find it most",
    "start": "38280",
    "end": "45039"
  },
  {
    "text": "useful um that's me uh feel free to uh",
    "start": "45039",
    "end": "50719"
  },
  {
    "text": "um give me email send me an email or something like that if you have questions after this uh",
    "start": "50719",
    "end": "57239"
  },
  {
    "text": "presentation as Sasha said this stuff will be all up on the web so this captures it um by all means send",
    "start": "57239",
    "end": "66320"
  },
  {
    "text": "email that tiny little thing over there so I didn't know what size these slides were going to be but the tiny little",
    "start": "66320",
    "end": "72439"
  },
  {
    "text": "thing over there is the agenda for my talk so I want to talk start with with just a couple of Basics and then I want",
    "start": "72439",
    "end": "78560"
  },
  {
    "text": "to introduce attributes um just so we're you probably all know about them but just so we're",
    "start": "78560",
    "end": "85159"
  },
  {
    "text": "all this on the same page and then I want to move up to styles",
    "start": "85159",
    "end": "90400"
  },
  {
    "text": "and finally to themes and why am I doing this there are",
    "start": "90400",
    "end": "97479"
  },
  {
    "start": "94000",
    "end": "94000"
  },
  {
    "text": "there are two reasons I have two goals in mind um the first one is that I want",
    "start": "97479",
    "end": "103439"
  },
  {
    "text": "to separate design from coding um I would very much like it that um a",
    "start": "103439",
    "end": "108560"
  },
  {
    "text": "designer um could make my code look beautiful make my uis look nice because I sure as blazes",
    "start": "108560",
    "end": "115039"
  },
  {
    "text": "can't um and I would like that that um",
    "start": "115039",
    "end": "120200"
  },
  {
    "text": "that same guide to stay out of my code whenever possible I would love it if he his making changes to my application um",
    "start": "120200",
    "end": "129000"
  },
  {
    "text": "um didn't have caused me to go back and write new code each time I needed to to",
    "start": "129000",
    "end": "134680"
  },
  {
    "text": "update for update the appearance the other thing I want is shrink wrappable",
    "start": "134680",
    "end": "140959"
  },
  {
    "text": "widgets um I don't know if you did any of you are any of you um Veterans of uh",
    "start": "140959",
    "end": "147239"
  },
  {
    "text": "ActiveX Visual Basic those kinds of things well I'll tell you one of the",
    "start": "147239",
    "end": "153000"
  },
  {
    "text": "things that Microsoft totally had right was the community of the the community",
    "start": "153000",
    "end": "159000"
  },
  {
    "text": "of widget developers there were a billion widgets people would put together little",
    "start": "159000",
    "end": "165400"
  },
  {
    "text": "there must have been 47,000 different calendar widgets alone people would write widgets package them up and then",
    "start": "165400",
    "end": "172319"
  },
  {
    "text": "either give them away or sell them and it made the platform move forward at an",
    "start": "172319",
    "end": "177400"
  },
  {
    "text": "incredible rate it um things got prettier and prettier it got possible to make things",
    "start": "177400",
    "end": "184040"
  },
  {
    "text": "prettier and prettier it also got possible to make things junkier and junkier but for the most PE part people",
    "start": "184040",
    "end": "190480"
  },
  {
    "text": "avoided that um unfortunately that's just really",
    "start": "190480",
    "end": "195720"
  },
  {
    "text": "hard to do in Android yeah oh I mean you just answered I was going to ask you is",
    "start": "195720",
    "end": "202040"
  },
  {
    "text": "what do you mean by like you know we have with nativ Android but yes try to make your own right so is it like action",
    "start": "202040",
    "end": "209280"
  },
  {
    "text": "bar so action bar Sherlock is a is exactly the example that I was going to bring up",
    "start": "209280",
    "end": "214640"
  },
  {
    "text": "action bar Sherlock succeeds for exactly two reasons action bar Sherlock succeeds",
    "start": "214640",
    "end": "220080"
  },
  {
    "text": "first of all because the guy who wrote it is willing to give it away he he hands you the source code right and it",
    "start": "220080",
    "end": "227959"
  },
  {
    "text": "wouldn't work otherwise and the second thing is that it's big enough project it's a big enough piece of code so that",
    "start": "227959",
    "end": "234360"
  },
  {
    "text": "it's worth making a library to your Android application if I wrote a",
    "start": "234360",
    "end": "239920"
  },
  {
    "text": "calendar if I wrote a calendar widget there's no way I'd get you to to add you",
    "start": "239920",
    "end": "246000"
  },
  {
    "text": "know the 37 or 80 different Library projects to your Android project all all",
    "start": "246000",
    "end": "253079"
  },
  {
    "text": "30 of them you know there just to include One widget each it would be",
    "start": "253079",
    "end": "258880"
  },
  {
    "text": "crazy it would be an engineering nightmare it be a a pain in the neck to maintain and that's not what people are",
    "start": "258880",
    "end": "265040"
  },
  {
    "text": "going to do action bar Sherlock though succeeds because for for those two reasons he's willing to give it away and",
    "start": "265040",
    "end": "272400"
  },
  {
    "text": "he's uh it's a big enough piece of code so that nobody so that people are willing",
    "start": "272400",
    "end": "277720"
  },
  {
    "text": "to add it it's like the one Library project they",
    "start": "277720",
    "end": "282639"
  },
  {
    "start": "283000",
    "end": "283000"
  },
  {
    "text": "have some of these I'm going to have to shrink back down but for the time being let's make it a little bigger if you've",
    "start": "286680",
    "end": "292520"
  },
  {
    "text": "seen if you've seen any Android program if you've written who who here has written an Android program okay so you",
    "start": "292520",
    "end": "298720"
  },
  {
    "text": "all know what this does right there's nothing magic about it it exactly replaces code that does exactly what",
    "start": "298720",
    "end": "305759"
  },
  {
    "text": "you'd expect it creates a new instance of text View and then it initializes it with a bunch of parameters there's",
    "start": "305759",
    "end": "312320"
  },
  {
    "text": "nothing tricky about this um first of all it's not necessary to do it this way you could do it with",
    "start": "312320",
    "end": "318160"
  },
  {
    "text": "code um and second of all even if you did it with code you'd probably do it",
    "start": "318160",
    "end": "323280"
  },
  {
    "text": "almost exactly the same way that Android does it is it reads these things and just executes the same code that you",
    "start": "323280",
    "end": "331479"
  },
  {
    "text": "um the other thing that that is important to understand for this talk is that most of this stuff comes from a",
    "start": "334319",
    "end": "340080"
  },
  {
    "text": "most of this stuff has nothing has very little to do with runtime Androids runtime most of the stuff the way you",
    "start": "340080",
    "end": "347479"
  },
  {
    "text": "encounter it is through a program called AAP right so so it is true that these",
    "start": "347479",
    "end": "355080"
  },
  {
    "text": "that the layouts that you build get repared once they they um once once they",
    "start": "355080",
    "end": "362039"
  },
  {
    "text": "get bundled into the into your application into your APK they get repared and uh re well turned into to",
    "start": "362039",
    "end": "371039"
  },
  {
    "text": "view trees on the other hand the way you will encounter these things is with AAP",
    "start": "371039",
    "end": "376199"
  },
  {
    "text": "when you see an error it's AAP that's giving it to you when you can't figure out whether to use a namespace or not",
    "start": "376199",
    "end": "383880"
  },
  {
    "text": "it's because you can't figure out what AAP is doing um it is surprising inly written",
    "start": "383880",
    "end": "390080"
  },
  {
    "start": "388000",
    "end": "388000"
  },
  {
    "text": "in C C half C half C++ it uses xat as the parser it is",
    "start": "390080",
    "end": "396800"
  },
  {
    "text": "bizarrely complex it is a huge program and um and it it takes your XML",
    "start": "396800",
    "end": "403759"
  },
  {
    "text": "resources everything that's in the assets directory and everything that's in the XML directory and it bundles it",
    "start": "403759",
    "end": "409440"
  },
  {
    "text": "all up into stuff that goes in the APK it's the thing that um it surely knows about uh resource",
    "start": "409440",
    "end": "417160"
  },
  {
    "text": "qualifiers it surely knows about what's in the Manifest it knows all of that",
    "start": "417160",
    "end": "423919"
  },
  {
    "text": "stuff if you need to research this stuff it's AAP that you're going to have to",
    "start": "424080",
    "end": "431039"
  },
  {
    "start": "430000",
    "end": "430000"
  },
  {
    "text": "read so where did predefined attributes come from and you'll see in a minute",
    "start": "431400",
    "end": "438319"
  },
  {
    "text": "there's a different there's another kind right so um the the the attributes that you use",
    "start": "438319",
    "end": "445599"
  },
  {
    "text": "in your Android program um you'll find them documented in the various sub classes of",
    "start": "445599",
    "end": "451080"
  },
  {
    "text": "view um if you look at one of these for",
    "start": "451080",
    "end": "456478"
  },
  {
    "text": "instance here they are they're all andred um andred does a very good job of",
    "start": "463520",
    "end": "469080"
  },
  {
    "text": "documenting these things okay the ones that that they want you to know about they're all sitting right there and how",
    "start": "469080",
    "end": "475400"
  },
  {
    "text": "how to use them is pretty well explained it's it's it's not bad stuff",
    "start": "475400",
    "end": "481319"
  },
  {
    "text": "um where are they defined they're defined in the source in the this aters file",
    "start": "481440",
    "end": "492038"
  },
  {
    "text": ".xml and um these things are designed for extension what happens is that each view",
    "start": "492520",
    "end": "499120"
  },
  {
    "text": "parses the entire pile of attributes that it is given and it ignores the ones",
    "start": "499120",
    "end": "505000"
  },
  {
    "text": "that it doesn't understand so for instance a text view will parse off the ones typically begin with",
    "start": "505000",
    "end": "511479"
  },
  {
    "text": "text but it won't touch the ones that begin with layout and the view will parse the ones that begin with layout so",
    "start": "511479",
    "end": "519080"
  },
  {
    "text": "each guy parses his attributes and then calls his super class and the superclass",
    "start": "519080",
    "end": "525839"
  },
  {
    "text": "passes his attributes the result of this of course is that if you misspell something it will silently go go ignored",
    "start": "525839",
    "end": "533279"
  },
  {
    "text": "it will be silently ignored on the other hand that's what AAP does AAP has um",
    "start": "533279",
    "end": "539880"
  },
  {
    "text": "when it parses your XML it uh verifies it and it guarantees that the that all",
    "start": "539880",
    "end": "546519"
  },
  {
    "text": "of these attributes are in the name",
    "start": "546519",
    "end": "550000"
  },
  {
    "text": "space so actually if you look here you will find",
    "start": "553000",
    "end": "559360"
  },
  {
    "text": "attributes that you actually can't use and the reason is that Android has a wh listed",
    "start": "559360",
    "end": "567720"
  },
  {
    "text": "API the white list is in this file here if what happens is that this that",
    "start": "567720",
    "end": "575279"
  },
  {
    "text": "that XML file gets turned among other things into a class called r.",
    "start": "575279",
    "end": "582519"
  },
  {
    "text": "adders and r. adders like every other um Java API in",
    "start": "582519",
    "end": "589200"
  },
  {
    "text": "Android um r. adders is subject to whitelisting and unless it's been wh",
    "start": "589200",
    "end": "595680"
  },
  {
    "text": "listed here you can't see it and as the tiny little note down here says so so I",
    "start": "595680",
    "end": "602279"
  },
  {
    "text": "can get this out of the way before you ask me um no I don't understand why that makes it invisible in XML so that",
    "start": "602279",
    "end": "609200"
  },
  {
    "text": "explains why you can't get at it from java but I spent um many I I spent a",
    "start": "609200",
    "end": "614480"
  },
  {
    "text": "fair amount of time trying to sort through AAP on this and I can't actually fig I have not yet figured out why it is",
    "start": "614480",
    "end": "622120"
  },
  {
    "text": "that these things are illegal in XML as well but they are it's the same it is",
    "start": "622120",
    "end": "629399"
  },
  {
    "text": "probably the same control it is probably a hide or public um declaration that hides",
    "start": "629399",
    "end": "638560"
  },
  {
    "start": "638000",
    "end": "638000"
  },
  {
    "text": "them so suppose we decide to package a widget we've we've written our new",
    "start": "639800",
    "end": "646079"
  },
  {
    "text": "widget and we want to package it up and we want it to be configurable we want folks out there to be able to configure",
    "start": "646079",
    "end": "652600"
  },
  {
    "text": "it well you'll actually see a fair amount of this the way that people one",
    "start": "652600",
    "end": "657760"
  },
  {
    "text": "of the ways that people will do this is they create an abstract parent class",
    "start": "657760",
    "end": "664959"
  },
  {
    "text": "with this huge wonking Constructor and you create a subass of",
    "start": "664959",
    "end": "670680"
  },
  {
    "text": "their class which doesn't do anything except initialize all the values in the",
    "start": "670680",
    "end": "678200"
  },
  {
    "text": "Constructor okay this is a this was this has been a very common way of of um",
    "start": "678200",
    "end": "685800"
  },
  {
    "text": "customizing widgets in Android you'll see a lot of code that looks like this",
    "start": "685800",
    "end": "691480"
  },
  {
    "text": "and it's fairly awful it's a fairly bad idea once's better use custom",
    "start": "691480",
    "end": "699639"
  },
  {
    "text": "attributes so let's add new attributes that our view can read our view looks at",
    "start": "699639",
    "end": "706639"
  },
  {
    "text": "these attributes and configures itself that means that the person writing the",
    "start": "706639",
    "end": "711959"
  },
  {
    "text": "layout the person writing the XML simply add needs to add new attributes to your",
    "start": "711959",
    "end": "718440"
  },
  {
    "text": "view your custom View and your view gets its gets its configuration the same way",
    "start": "718440",
    "end": "724440"
  },
  {
    "text": "other views get their configuration from that that list of of",
    "start": "724440",
    "end": "730880"
  },
  {
    "text": "attributes it's a three-step process therefore a",
    "start": "730880",
    "end": "736000"
  },
  {
    "text": "waltz so the way you do this is you create a new direct a new file down here in the values directory called",
    "start": "741560",
    "end": "747880"
  },
  {
    "text": "adders",
    "start": "747880",
    "end": "750880"
  },
  {
    "text": "H",
    "start": "770519",
    "end": "773519"
  },
  {
    "text": "and I need to def find some attributes you put them in a declare",
    "start": "777440",
    "end": "782480"
  },
  {
    "start": "778000",
    "end": "778000"
  },
  {
    "text": "styleable element and within the declare styleable",
    "start": "782480",
    "end": "788839"
  },
  {
    "text": "element you simply name the attributes so the name piece is the name of the",
    "start": "788839",
    "end": "795199"
  },
  {
    "text": "attribute and the format format describes what that attribute is going to look for as its argument as its value",
    "start": "795199",
    "end": "804120"
  },
  {
    "text": "okay so the attribute is the thing that is that follows the name and the type of",
    "start": "804120",
    "end": "812600"
  },
  {
    "text": "the value is the thing is the thing described by reference and that one",
    "start": "812600",
    "end": "818079"
  },
  {
    "text": "that's missing the one that's got a quote quote there won't work I don't know what's up with that but that won't",
    "start": "818079",
    "end": "823839"
  },
  {
    "text": "work the the bad news here is that um is",
    "start": "823839",
    "end": "828880"
  },
  {
    "text": "that you you might think that this tag view here this guy is a name",
    "start": "828880",
    "end": "836199"
  },
  {
    "text": "space and that your tags are inside that name space unfortunately it's not true",
    "start": "836199",
    "end": "842040"
  },
  {
    "text": "all of the attributes that are used in your application have to be uh unique if",
    "start": "842040",
    "end": "847959"
  },
  {
    "text": "you think about it for a second you can see how that's going to work they're all turned into r. Adder do something right",
    "start": "847959",
    "end": "856759"
  },
  {
    "text": "they're all they're all going to be turned into Java names and those Java names have to be unique and those Java",
    "start": "856759",
    "end": "864399"
  },
  {
    "text": "names don't include this thing up here so this part has to be unique so you end",
    "start": "864399",
    "end": "870440"
  },
  {
    "text": "up with these bizarre names okay so this gets you the",
    "start": "870440",
    "end": "879000"
  },
  {
    "text": "attribute right now you have an attribute",
    "start": "879000",
    "end": "883959"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "declared the things out there in the format section they're as far as I can",
    "start": "885440",
    "end": "890720"
  },
  {
    "text": "tell they're completely undocumented um there are 10 of them they're liist listed in tiny letters on",
    "start": "890720",
    "end": "897040"
  },
  {
    "text": "the edge of the screen there um they're",
    "start": "897040",
    "end": "903040"
  },
  {
    "text": "actually they're defined right here in this file resourc table.",
    "start": "903720",
    "end": "912279"
  },
  {
    "text": "CPP like that that's that's the definition of those attributes",
    "start": "912279",
    "end": "919000"
  },
  {
    "text": "types um when you build the attribute types",
    "start": "922720",
    "end": "928759"
  },
  {
    "start": "927000",
    "end": "927000"
  },
  {
    "text": "when you build the the type of an attribute when you set its format you can or together several attributes",
    "start": "928759",
    "end": "934560"
  },
  {
    "text": "they're they're bits so you can or them together they have bit values so you can or them together you can say for",
    "start": "934560",
    "end": "940519"
  },
  {
    "text": "instance say that this is dimension or a reference to a dimmension in fact it turns out that that's usually",
    "start": "940519",
    "end": "946560"
  },
  {
    "text": "redundant and in fact you will probably never use an or it doesn't make any sense to say that this is either a color",
    "start": "946560",
    "end": "952800"
  },
  {
    "text": "or a dimension that's just nonsense but what does make sense is to say that it it is either a color or a reference but",
    "start": "952800",
    "end": "960319"
  },
  {
    "text": "it turns out that that the code for color for picking up a color now handles",
    "start": "960319",
    "end": "965440"
  },
  {
    "text": "references so you don't need to say or reference okay there are some places where you will want to say just",
    "start": "965440",
    "end": "971759"
  },
  {
    "text": "reference but you almost never need to say uh need to or it in uh pay attention to the um syntax of",
    "start": "971759",
    "end": "980199"
  },
  {
    "text": "ene enum is the way you do for instance true false in this case or Styles",
    "start": "980199",
    "end": "986759"
  },
  {
    "text": "suppose you wanted to to um suppose you wanted serif sand serif",
    "start": "986759",
    "end": "993519"
  },
  {
    "text": "you know um and monospaced fonts you could do it with one of these enes but",
    "start": "993519",
    "end": "1000199"
  },
  {
    "text": "the way you do it is with the attribute tag is of type ene and then you just include the include enes inside",
    "start": "1000199",
    "end": "1009800"
  },
  {
    "text": "it this is uh one of the more important slides here um there's no way to digest",
    "start": "1010959",
    "end": "1017399"
  },
  {
    "text": "this I suppose in one in one reading but it is the code for parsing an",
    "start": "1017399",
    "end": "1024360"
  },
  {
    "text": "attribute let me see here a",
    "start": "1026720",
    "end": "1030678"
  },
  {
    "text": "second so there are there are um a couple of important points here that I",
    "start": "1045919",
    "end": "1053080"
  },
  {
    "text": "will show you on the next page one",
    "start": "1053080",
    "end": "1058919"
  },
  {
    "text": "three and four what happened to two there was a two I know there was so",
    "start": "1059080",
    "end": "1068760"
  },
  {
    "text": "um so I'll switch back and forth between these two slides as I explain",
    "start": "1068760",
    "end": "1074760"
  },
  {
    "text": "them so the first thing is the first thing is to be sure to call your super",
    "start": "1074760",
    "end": "1079840"
  },
  {
    "text": "Constructor as I said it is it is essential that the whole point of this",
    "start": "1079840",
    "end": "1085240"
  },
  {
    "text": "is that you parse the attributes you know about and then you call the super Constructor to let it parse the things",
    "start": "1085240",
    "end": "1092200"
  },
  {
    "text": "it knows about and so on till you get back to view okay and view I mean it is",
    "start": "1092200",
    "end": "1097720"
  },
  {
    "text": "essential that view runs its code looks very like this and it's essential that",
    "start": "1097720",
    "end": "1103159"
  },
  {
    "text": "it runs otherwise your layout won't happen right and and your your um your",
    "start": "1103159",
    "end": "1108919"
  },
  {
    "text": "object won't have a minimum size and it won't work at all okay so it's essential",
    "start": "1108919",
    "end": "1114280"
  },
  {
    "text": "that you call the super",
    "start": "1114280",
    "end": "1117440"
  },
  {
    "text": "Constructor so the second thing is that",
    "start": "1120640",
    "end": "1126120"
  },
  {
    "text": "it is a good idea to get this typed array oh that's what happened it got it's way out here I'll bet you it's just",
    "start": "1126120",
    "end": "1133760"
  },
  {
    "text": "um it's just the two is right about here on the wall",
    "start": "1133760",
    "end": "1140320"
  },
  {
    "text": "so um so you actually can this attribute set that you're pasted here you actually",
    "start": "1142120",
    "end": "1148120"
  },
  {
    "text": "can simply parse the attribute set there's no reason not to do it it's unnecessarily complicated to do that",
    "start": "1148120",
    "end": "1155080"
  },
  {
    "text": "though because um styles haven't been applied yet and references haven't been followed yet if you if you use this",
    "start": "1155080",
    "end": "1162760"
  },
  {
    "text": "obtained styled attributes then all the Styles get applied so things that used to not have values now have Val",
    "start": "1162760",
    "end": "1169159"
  },
  {
    "text": "and things that used to be references that is things that had signs in them you all know what signs are right",
    "start": "1169159",
    "end": "1175440"
  },
  {
    "text": "references to other objects to other other bits of your your other",
    "start": "1175440",
    "end": "1181120"
  },
  {
    "text": "resources so things that are at signs have already been resolved okay so definitely this is the",
    "start": "1181120",
    "end": "1187520"
  },
  {
    "text": "way to do it get the typed array from the the attribute set and once you've got that you just walk through them and",
    "start": "1187520",
    "end": "1195400"
  },
  {
    "text": "case on each one run the these cases okay and you'll recognize",
    "start": "1195400",
    "end": "1203840"
  },
  {
    "text": "this that's Java for",
    "start": "1204320",
    "end": "1212120"
  },
  {
    "text": "this okay so this got turned into r. style. that",
    "start": "1212120",
    "end": "1218240"
  },
  {
    "text": "thing and here it is right here r. stylable",
    "start": "1218240",
    "end": "1224480"
  },
  {
    "text": "Etc okay so you pick the",
    "start": "1224480",
    "end": "1231200"
  },
  {
    "text": "mount and set the values in your in your object based on these",
    "start": "1231200",
    "end": "1236720"
  },
  {
    "text": "things and you're good to",
    "start": "1236720",
    "end": "1240320"
  },
  {
    "text": "go typed array has has uh methods that correspond pretty much exactly to the 10",
    "start": "1242000",
    "end": "1249400"
  },
  {
    "text": "types so you can get a color you can get a dimension there are a couple of extra",
    "start": "1249400",
    "end": "1254880"
  },
  {
    "text": "things there's pixel pixel offset and for instance if you want to get a",
    "start": "1254880",
    "end": "1260159"
  },
  {
    "text": "drawable you declare it as a reference and then you get the drawable from the",
    "start": "1260159",
    "end": "1266360"
  },
  {
    "text": "reference the last bit there is be sure that this doesn't scroll off your",
    "start": "1267000",
    "end": "1273320"
  },
  {
    "text": "screen all right be sure to recycle the typed array when you're done with it the typed array is a big thing and it won't",
    "start": "1273320",
    "end": "1279559"
  },
  {
    "text": "go away until you recycle it you need to tell the garbage collector it can have it",
    "start": "1279559",
    "end": "1286360"
  },
  {
    "text": "back um I will suggest a style for doing this",
    "start": "1287039",
    "end": "1293919"
  },
  {
    "start": "1288000",
    "end": "1288000"
  },
  {
    "text": "so the style I suggest is that you have a um a stack variable a local variable",
    "start": "1293919",
    "end": "1302880"
  },
  {
    "text": "whose name corresponds to the attribute and you set it to the default value that you choose for the",
    "start": "1302880",
    "end": "1310720"
  },
  {
    "text": "attribute so right here I set this value this",
    "start": "1311520",
    "end": "1317320"
  },
  {
    "text": "variable I give it the default value that I want this thing to have then down",
    "start": "1317320",
    "end": "1324400"
  },
  {
    "text": "here I actually get the value from the XML in the case statement I actually get",
    "start": "1324400",
    "end": "1330799"
  },
  {
    "text": "the value but I pass the value in the default value to start with this it it",
    "start": "1330799",
    "end": "1336720"
  },
  {
    "text": "sets all it puts all the setting of default values together in one place all",
    "start": "1336720",
    "end": "1342520"
  },
  {
    "text": "of the parsing together in another place and then finally set your final variable",
    "start": "1342520",
    "end": "1348000"
  },
  {
    "text": "abl the final variables in your class so this is all done in the Constructor set the final variables for your class as",
    "start": "1348000",
    "end": "1354880"
  },
  {
    "text": "the last thing so there once again it's another Walts there so many things are it there are three steps first of all",
    "start": "1354880",
    "end": "1360679"
  },
  {
    "text": "set the default VAR values then get the actual values if they exist and finally",
    "start": "1360679",
    "end": "1367760"
  },
  {
    "text": "set the finals that are the the uh class in",
    "start": "1367760",
    "end": "1372919"
  },
  {
    "text": "variance if there are a lot of these things you might want to consider using a builder okay you might you might",
    "start": "1372919",
    "end": "1378080"
  },
  {
    "text": "consider pulling this whole piece out making it into a builder and just getting back a config object from your",
    "start": "1378080",
    "end": "1384919"
  },
  {
    "text": "parser still has to happen in the Constructor though are there any questions about",
    "start": "1384919",
    "end": "1390720"
  },
  {
    "text": "this this is almost the end of styles is this making making making sense is this all",
    "start": "1390720",
    "end": "1398720"
  },
  {
    "text": "plausible custom attributes yes so there",
    "start": "1398720",
    "end": "1403559"
  },
  {
    "text": "one where do you that",
    "start": "1406880",
    "end": "1413159"
  },
  {
    "text": "ah this one so it's impossible to see this but",
    "start": "1413159",
    "end": "1419400"
  },
  {
    "text": "what this is is uh in the in the values so re let me do it this",
    "start": "1419400",
    "end": "1425559"
  },
  {
    "text": "way so that my videographer doesn't kill me afterwards in re in the res",
    "start": "1425559",
    "end": "1432480"
  },
  {
    "text": "directory in the values directory inside that there's a new thing called",
    "start": "1432480",
    "end": "1438559"
  },
  {
    "text": "adders adders XML and it's the thing that contains the",
    "start": "1438559",
    "end": "1445760"
  },
  {
    "text": "declare",
    "start": "1445760",
    "end": "1448159"
  },
  {
    "text": "styleable so then you just use them there's only one tricky part and that is that you",
    "start": "1454080",
    "end": "1461039"
  },
  {
    "text": "need to set the name space that they're in you need to tell Android you need to tell essentially what you're doing here",
    "start": "1461039",
    "end": "1466919"
  },
  {
    "text": "is telling AAP where to find these custom attributes this is always your package",
    "start": "1466919",
    "end": "1474120"
  },
  {
    "text": "name always regardless of whether these things are defined in a library file in",
    "start": "1474120",
    "end": "1479200"
  },
  {
    "text": "in a library project or something like that use your package name here okay so",
    "start": "1479200",
    "end": "1485520"
  },
  {
    "text": "it always says HTTP colon yeah when's the right time to",
    "start": "1485520",
    "end": "1491640"
  },
  {
    "text": "use res Auto I've had to use that in like Library projects where the uh the",
    "start": "1491640",
    "end": "1496960"
  },
  {
    "text": "library need to go through your I don't even know what res Auto",
    "start": "1496960",
    "end": "1502919"
  },
  {
    "text": "does sorry I have no clue sometimes you got to put res Auto",
    "start": "1502919",
    "end": "1509320"
  },
  {
    "text": "there H um the only thing I've seen along",
    "start": "1509320",
    "end": "1514919"
  },
  {
    "text": "those lines is that um even within a project Eclipse",
    "start": "1514919",
    "end": "1521120"
  },
  {
    "text": "will for Eclipse can't Eclipse doesn't follow references Eclipse doesn't know",
    "start": "1521120",
    "end": "1526880"
  },
  {
    "text": "how to follow these references if you make a a reference to something here and then change the thing",
    "start": "1526880",
    "end": "1532960"
  },
  {
    "text": "at the far end of the reference Eclipse will not update stuff it will not run",
    "start": "1532960",
    "end": "1539080"
  },
  {
    "text": "the the oh it runs the AAP again it will not update uh views and things like that",
    "start": "1539080",
    "end": "1545440"
  },
  {
    "text": "it will not redraw the image editor the layout",
    "start": "1545440",
    "end": "1551039"
  },
  {
    "text": "editor um the only thing I can imagine is that so when when you have a library project",
    "start": "1551039",
    "end": "1557799"
  },
  {
    "text": "it is AAP is in fact sucking in the resources from that project and building",
    "start": "1557799",
    "end": "1563240"
  },
  {
    "text": "them in the local project that's the only thing I can think of but no I've never used it is it do have you used it",
    "start": "1563240",
    "end": "1570440"
  },
  {
    "text": "with action bar Sherlock um I've used it when I pulled my old app into uh a library project and",
    "start": "1570440",
    "end": "1578080"
  },
  {
    "text": "try to use custom attributes that way it's a new property new mechan has of like r h yeah haven't met it yeah",
    "start": "1578080",
    "end": "1587760"
  },
  {
    "text": "haven't met it cool um so be sure you get the be sure you get the",
    "start": "1587760",
    "end": "1594799"
  },
  {
    "text": "um be sure you get the namespace right this says that I now have a a namespace",
    "start": "1594799",
    "end": "1600000"
  },
  {
    "text": "called tag view right here the namespace is tag View and as I said this part is",
    "start": "1600000",
    "end": "1606919"
  },
  {
    "text": "completely predefined you must what this has to be is everything up to Res slash",
    "start": "1606919",
    "end": "1614399"
  },
  {
    "text": "and then exactly your package name name from your",
    "start": "1614399",
    "end": "1620840"
  },
  {
    "text": "manifest once you do that you can use the you can use",
    "start": "1620840",
    "end": "1628240"
  },
  {
    "text": "these the name spaces and um AAP will understand your",
    "start": "1628240",
    "end": "1634960"
  },
  {
    "text": "it will do all of everything it needs to do it will do everything right it will for instance not let you type put a",
    "start": "1634960",
    "end": "1642200"
  },
  {
    "text": "color here it will not let you put a reference to a um a drawable here all",
    "start": "1642200",
    "end": "1648679"
  },
  {
    "text": "that kind of stuff okay so AAP will parse this correctly once you get that",
    "start": "1648679",
    "end": "1654399"
  },
  {
    "text": "name space right okay yeah",
    "start": "1654399",
    "end": "1661200"
  },
  {
    "text": "we name name yeah yeah that name shows up",
    "start": "1661200",
    "end": "1668320"
  },
  {
    "text": "here I'm sorry that's right uh so the question is the question is if you let's",
    "start": "1668320",
    "end": "1673480"
  },
  {
    "text": "see when you when you define the attribute",
    "start": "1673480",
    "end": "1678720"
  },
  {
    "text": "the attribute set has a name the styled attributes have a name does that is that name used anywhere",
    "start": "1678720",
    "end": "1686159"
  },
  {
    "text": "and see it is but you know I can't remember",
    "start": "1686159",
    "end": "1697320"
  },
  {
    "text": "where maybe it's not I don't know I don't know that's very",
    "start": "1705440",
    "end": "1711760"
  },
  {
    "text": "you know I could swear I remember writing that down someplace and I don't recall where uh I mean using that having",
    "start": "1711760",
    "end": "1718679"
  },
  {
    "text": "those have seeing the unpleasant tag view. tag view do tag view. tag view-",
    "start": "1718679",
    "end": "1726880"
  },
  {
    "text": "something but I don't recall where sorry about",
    "start": "1726880",
    "end": "1732080"
  },
  {
    "start": "1734000",
    "end": "1734000"
  },
  {
    "text": "that there are only two places that you use those things one is the Java when you're parsing them and the other is",
    "start": "1736399",
    "end": "1743039"
  },
  {
    "text": "here so I'm think despite my recollection that I have used them I don't see them here and this works so",
    "start": "1743039",
    "end": "1751000"
  },
  {
    "text": "perhaps you just don't um",
    "start": "1751000",
    "end": "1757640"
  },
  {
    "text": "yeah okay that's it for for uh creating your own attributes you now have a way",
    "start": "1757640",
    "end": "1763440"
  },
  {
    "text": "to to initialize to let anyone who wants to include the code for your custom",
    "start": "1763440",
    "end": "1770120"
  },
  {
    "text": "widget and then customize it from the layout instead of from uh you know by by",
    "start": "1770120",
    "end": "1776600"
  },
  {
    "text": "creating a subass or something like that all right any questions about this any",
    "start": "1776600",
    "end": "1781799"
  },
  {
    "text": "questions that I can answer about this somebody throw me a softball all right so let's talk about",
    "start": "1781799",
    "end": "1789760"
  },
  {
    "text": "styles styles are next styles are simply collections of attributes so it's it's",
    "start": "1789760",
    "end": "1796399"
  },
  {
    "text": "really simple it's really straightforward to to create a style um you simply translate Android colon",
    "start": "1796399",
    "end": "1802679"
  },
  {
    "text": "attribute equals value into so that the attribute goes becomes the pro the value",
    "start": "1802679",
    "end": "1809600"
  },
  {
    "text": "of the name attribute and the value becomes the contents of the",
    "start": "1809600",
    "end": "1815480"
  },
  {
    "text": "element right and then you apply it by saying",
    "start": "1815480",
    "end": "1822039"
  },
  {
    "text": "apply the style notice that style doesn't have a name space Prett weird",
    "start": "1822039",
    "end": "1828080"
  },
  {
    "text": "but it",
    "start": "1828080",
    "end": "1830398"
  },
  {
    "start": "1833000",
    "end": "1833000"
  },
  {
    "text": "doesn't so here's a basic use of a style so this is a text view in which",
    "start": "1834360",
    "end": "1840200"
  },
  {
    "text": "the text size is 64s and it's green and we simply separate that into a style",
    "start": "1840200",
    "end": "1845960"
  },
  {
    "text": "that says big green so the style is a reference down here to this style which",
    "start": "1845960",
    "end": "1852480"
  },
  {
    "text": "is in a different file okay so the everything above the two sections above are in layout files and the section",
    "start": "1852480",
    "end": "1858880"
  },
  {
    "text": "below is in a style.xml file the style is a resource it lives in a resource element",
    "start": "1858880",
    "end": "1866320"
  },
  {
    "text": "and it's the big green style and it just as I said all of the",
    "start": "1866320",
    "end": "1872840"
  },
  {
    "text": "um all of the attribute names become values of the name attribute and then",
    "start": "1872840",
    "end": "1878559"
  },
  {
    "text": "the value of the attribute turns into the contents of the element",
    "start": "1878559",
    "end": "1885360"
  },
  {
    "text": "okay Styles inherent from one another this gets you CSS or uh this has this doesn't",
    "start": "1886159",
    "end": "1894679"
  },
  {
    "text": "have the power of CSS but at least starts it's at least it's at least in",
    "start": "1894679",
    "end": "1899960"
  },
  {
    "text": "the right general direction um there are two ways to inherit from another style and",
    "start": "1899960",
    "end": "1906679"
  },
  {
    "start": "1901000",
    "end": "1901000"
  },
  {
    "text": "inheritance works the same way it does everywhere um you can inherit from",
    "start": "1906679",
    "end": "1911799"
  },
  {
    "text": "another style you can either add to it or you can override it so if you inher",
    "start": "1911799",
    "end": "1917320"
  },
  {
    "text": "it from some other style and replace some value in that style with some other",
    "start": "1917320",
    "end": "1922360"
  },
  {
    "text": "value what you get is the most recent right so if for instance green so big",
    "start": "1922360",
    "end": "1929159"
  },
  {
    "text": "sets the text size to 64 SP if green set if big green set the text size to 32 SP",
    "start": "1929159",
    "end": "1936720"
  },
  {
    "text": "the size would be 32 SP Android takes these things um in",
    "start": "1936720",
    "end": "1944080"
  },
  {
    "text": "order of proximity so the most recent uh the the lowest child in the tree wins",
    "start": "1944080",
    "end": "1950919"
  },
  {
    "text": "and furthermore if there are if there are specific constraints on the on The",
    "start": "1950919",
    "end": "1956320"
  },
  {
    "text": "View itself those beat out any style okay so so the",
    "start": "1956320",
    "end": "1963240"
  },
  {
    "text": "the the attributes given here on The View always beat the",
    "start": "1963240",
    "end": "1970840"
  },
  {
    "text": "style and the the nearest child always wins can you repeat",
    "start": "1975399",
    "end": "1984240"
  },
  {
    "text": "that so so big green always beats G big",
    "start": "1985240",
    "end": "1990360"
  },
  {
    "text": "okay the lowest child the the youngest child always wins and even the youngest",
    "start": "1990360",
    "end": "1995960"
  },
  {
    "text": "child gets beat by by attributes specified on The View so I could say big",
    "start": "1995960",
    "end": "2001760"
  },
  {
    "text": "green here and override this with a text size of 128 and regard of what the",
    "start": "2001760",
    "end": "2007559"
  },
  {
    "text": "previous two guys said that's what I'd get yeah",
    "start": "2007559",
    "end": "2013240"
  },
  {
    "text": "one that's right there's only one parent",
    "start": "2013240",
    "end": "2020200"
  },
  {
    "text": "yeah even if you give them a name and a parent tag yes one there can be only",
    "start": "2020679",
    "end": "2029759"
  },
  {
    "text": "one um the second way to inherit is with the parent tag and we'll see that that's",
    "start": "2031600",
    "end": "2037679"
  },
  {
    "text": "that's uh the parent attribute we'll see that that's important in just a minute",
    "start": "2037679",
    "end": "2044639"
  },
  {
    "text": "because well as I said the wind here is obvious right so among other",
    "start": "2045919",
    "end": "2052040"
  },
  {
    "text": "things um the designer now gets to control can",
    "start": "2052040",
    "end": "2057800"
  },
  {
    "text": "set up standard appearances for your application can set up a limited number",
    "start": "2057800",
    "end": "2062839"
  },
  {
    "text": "of of standard appearances standard colors standard Tex sizes standard",
    "start": "2062839",
    "end": "2069398"
  },
  {
    "text": "weights all of that kind of stuff and you just apply them in your code and not only that but when she changes her mind",
    "start": "2069399",
    "end": "2076240"
  },
  {
    "text": "and decides to do it a different way then it there's no no change necessary",
    "start": "2076240",
    "end": "2082200"
  },
  {
    "text": "in the code that's the best thing factoring out makes the Styles less brittle if you decide to change the",
    "start": "2082200",
    "end": "2088440"
  },
  {
    "text": "style in one place it changes everywhere whereas if the styles are embedded in",
    "start": "2088440",
    "end": "2093878"
  },
  {
    "text": "each view in the layout changing one I mean you you have to go through and find them all and finally most important like",
    "start": "2093879",
    "end": "2102000"
  },
  {
    "text": "any other resource a style resource is subject to Resource qualifiers you all",
    "start": "2102000",
    "end": "2107359"
  },
  {
    "text": "know what resource qualifiers right are right they're those the things after The Hyphen in the names of",
    "start": "2107359",
    "end": "2116119"
  },
  {
    "text": "the these things hard to see I suspect oh no",
    "start": "2116280",
    "end": "2123440"
  },
  {
    "text": "they're just fine but these things the the thing after The Hyphen here is a resource qualifier and it says that this",
    "start": "2123440",
    "end": "2131119"
  },
  {
    "start": "2131000",
    "end": "2131000"
  },
  {
    "text": "is that this set of resources is only applicable under these conditions for",
    "start": "2131119",
    "end": "2137480"
  },
  {
    "text": "instance the one we just looked at says those set of resources are only applicable if you're using version 11 of",
    "start": "2137480",
    "end": "2144880"
  },
  {
    "text": "Android or greater so you can set up resources you",
    "start": "2144880",
    "end": "2151160"
  },
  {
    "text": "can set up styles that are only applied depending on whether that are only applied if you're in landscape mode mode",
    "start": "2151160",
    "end": "2157800"
  },
  {
    "text": "or only applied if you're on a big device you can make your your application look good whether it's on a",
    "start": "2157800",
    "end": "2164680"
  },
  {
    "text": "TV or whether it's on my phone just by using Styles this is this is this is",
    "start": "2164680",
    "end": "2172319"
  },
  {
    "text": "pretty significant the most common way to use Styles is to inherit from the Android",
    "start": "2172319",
    "end": "2179040"
  },
  {
    "text": "Styles and override them so if you want your button if you don't want to figure",
    "start": "2179040",
    "end": "2184480"
  },
  {
    "text": "out what your button should look like from top to bottom override the button style",
    "start": "2184480",
    "end": "2191240"
  },
  {
    "text": "Android's button style so inherent from it and change a piece of it and then",
    "start": "2191240",
    "end": "2197319"
  },
  {
    "text": "apply it to your code you can't inherit from a an Android",
    "start": "2197319",
    "end": "2205880"
  },
  {
    "text": "style basically what it is is it's the namespace you can't inherit from something outside your namespace by",
    "start": "2205880",
    "end": "2212839"
  },
  {
    "text": "using the dot syntax in order to inherit from something outside your name space",
    "start": "2212839",
    "end": "2218280"
  },
  {
    "text": "you need to use parent use the parent",
    "start": "2218280",
    "end": "2222720"
  },
  {
    "text": "attribute the dot trick is actually fairly new I don't know when it was introduced but it's it's fairly new um a",
    "start": "2223440",
    "end": "2230839"
  },
  {
    "text": "quick aside if you haven't read re met resource drawables you really should",
    "start": "2230839",
    "end": "2237680"
  },
  {
    "text": "there's probably nothing you could do that makes your app that customizes your app quicker than than having um cool",
    "start": "2237680",
    "end": "2245839"
  },
  {
    "text": "looking buttons and you can do that almost for free with a resource drawable these things are",
    "start": "2245839",
    "end": "2251560"
  },
  {
    "text": "pretty neat um this is a piece of a resource drable or a piece of a button",
    "start": "2251560",
    "end": "2256920"
  },
  {
    "text": "definition an actual button definition would be um a layered resource which",
    "start": "2256920",
    "end": "2263560"
  },
  {
    "text": "would which um was composed of several rectangles all very similar and these",
    "start": "2263560",
    "end": "2270720"
  },
  {
    "text": "rectangles these similar rectangles would have different highlight States they'd represent the different highlight",
    "start": "2270720",
    "end": "2275920"
  },
  {
    "text": "States for the button so you can build a resource entirely out of XML that'll just make your make your",
    "start": "2275920",
    "end": "2282560"
  },
  {
    "text": "application look a lot better great",
    "start": "2282560",
    "end": "2288119"
  },
  {
    "start": "2288000",
    "end": "2288000"
  },
  {
    "text": "idea so I said a slide ago two slides ago there that one of the best things to",
    "start": "2288599",
    "end": "2295119"
  },
  {
    "text": "do is to inherit your styles from Android Styles so if you decide to do",
    "start": "2295119",
    "end": "2300720"
  },
  {
    "text": "that how do you know what the Android styles are how do you find them well it's a lot like finding the",
    "start": "2300720",
    "end": "2308000"
  },
  {
    "text": "attributes they're all defined in r. style or they're described in the",
    "start": "2308000",
    "end": "2316079"
  },
  {
    "text": "documentation in r. style. HTML those are the ones you can see they're defined",
    "start": "2316079",
    "end": "2321960"
  },
  {
    "text": "there in in the styles.xml and as usual their visibility",
    "start": "2321960",
    "end": "2327720"
  },
  {
    "text": "is controlled the same way everything else is that's a class unless those things are visible the r. Styles class",
    "start": "2327720",
    "end": "2335280"
  },
  {
    "text": "unless the um API file down there makes those members of the style class visible",
    "start": "2335280",
    "end": "2343040"
  },
  {
    "text": "you can't have them there's one in particular that's real popular called uh widget. button. transparent that",
    "start": "2343040",
    "end": "2350079"
  },
  {
    "text": "everybody knows is there and everybody would like to use and you can't can't have",
    "start": "2350079",
    "end": "2355839"
  },
  {
    "text": "it and again I don't know why these aren't visible in XML but they're",
    "start": "2355839",
    "end": "2362000"
  },
  {
    "text": "not so the last piece the last thing there any questions about styles do you I mean you see what a style is a style",
    "start": "2363280",
    "end": "2370480"
  },
  {
    "text": "is simply the way to take a bunch of attributes from an A View object and to",
    "start": "2370480",
    "end": "2376839"
  },
  {
    "start": "2376000",
    "end": "2376000"
  },
  {
    "text": "bundle them up as a style and then to apply them yeah to what extent are",
    "start": "2376839",
    "end": "2382160"
  },
  {
    "text": "resource draw sty I don't believe they are at",
    "start": "2382160",
    "end": "2388359"
  },
  {
    "text": "all I don't believe that yeah I don't believe that you can style them at all",
    "start": "2388359",
    "end": "2394000"
  },
  {
    "text": "it it w it turns out that you can use themes on them and I'll show you that in in just a second but I don't believe you",
    "start": "2394000",
    "end": "2399839"
  },
  {
    "text": "can style them at all would be refen precisely",
    "start": "2399839",
    "end": "2407560"
  },
  {
    "text": "precisely so a theme you'll you'll see a lot out there you'll see people talk about themes as if they were Styles or a",
    "start": "2409160",
    "end": "2416920"
  },
  {
    "text": "collection of styles or something like that I urge you not to think of them that way I urge you to think of of a",
    "start": "2416920",
    "end": "2423040"
  },
  {
    "text": "theme as um as a function patch table a",
    "start": "2423040",
    "end": "2428280"
  },
  {
    "text": "theme is a collection of definitions it's a bunch of it's a bunch of pointers",
    "start": "2428280",
    "end": "2433760"
  },
  {
    "text": "to things um as I say A dispatch table isn't a bad way to think of it this is a",
    "start": "2433760",
    "end": "2440599"
  },
  {
    "text": "tiny segment from theme Hollow and you can see what's defined here those things",
    "start": "2440599",
    "end": "2447640"
  },
  {
    "text": "all of those all of those names here each of these names there's there's no way to tell",
    "start": "2447640",
    "end": "2454760"
  },
  {
    "text": "these names apart they don't have type these names are simply references",
    "start": "2454760",
    "end": "2461400"
  },
  {
    "text": "but there are references to two Styles a reference to an",
    "start": "2461400",
    "end": "2468520"
  },
  {
    "text": "ene and a reference to a drawable and they all look the",
    "start": "2468520",
    "end": "2474880"
  },
  {
    "text": "same um I personally find it incredibly confusing that these are defined as Styles not only that but so does",
    "start": "2474880",
    "end": "2483079"
  },
  {
    "text": "AAP um we'll see that in a second",
    "start": "2483079",
    "end": "2488240"
  },
  {
    "text": "so the thing about style is that it allows you to back fit the appearance of",
    "start": "2488880",
    "end": "2495079"
  },
  {
    "text": "Android of of bits of Android I have a quick demo to do here it's really",
    "start": "2495079",
    "end": "2502440"
  },
  {
    "text": "fast oh maybe I",
    "start": "2502440",
    "end": "2506920"
  },
  {
    "text": "don't I have a quick demo to do in just a few minutes because when we changed",
    "start": "2507720",
    "end": "2513079"
  },
  {
    "text": "screen size I turned off the emulator later so it'll take a Month of Sundays",
    "start": "2513079",
    "end": "2518839"
  },
  {
    "text": "to get that running",
    "start": "2518839",
    "end": "2521720"
  },
  {
    "start": "2524000",
    "end": "2524000"
  },
  {
    "text": "again so themes Al Android Android sets the styles of",
    "start": "2528800",
    "end": "2536880"
  },
  {
    "text": "things that it puts on the screen things over which you know have no control it",
    "start": "2536880",
    "end": "2542359"
  },
  {
    "text": "sets them according to the theme if you assign a theme to an application or to a",
    "start": "2542359",
    "end": "2549640"
  },
  {
    "text": "component in that application Android Honors that theme while it is drawing all of the objects",
    "start": "2549640",
    "end": "2557960"
  },
  {
    "text": "that are under that component's control you can assign themes to as I",
    "start": "2557960",
    "end": "2563480"
  },
  {
    "text": "said to the application or to each activity you can assign different activities different themes so for",
    "start": "2563480",
    "end": "2569960"
  },
  {
    "text": "instance if you have an introduction page that you want to look one way um",
    "start": "2569960",
    "end": "2575240"
  },
  {
    "text": "want it to have a an action bar and to look like a normal Android application",
    "start": "2575240",
    "end": "2580839"
  },
  {
    "text": "and then you push the start button and it goes into game mode where it's using the full screen you can control those",
    "start": "2580839",
    "end": "2587119"
  },
  {
    "text": "things simply by assigning two different themes to the two different activities it works",
    "start": "2587119",
    "end": "2593839"
  },
  {
    "text": "great what I want to show you here is this",
    "start": "2597119",
    "end": "2602640"
  },
  {
    "text": "application here's the base activity",
    "start": "2603760",
    "end": "2608079"
  },
  {
    "text": "it's called activity zero here's Activity one it does nothing new it is",
    "start": "2609240",
    "end": "2614640"
  },
  {
    "text": "simply its sole reason for existence is that it's different from activity",
    "start": "2614640",
    "end": "2620000"
  },
  {
    "text": "two okay there are two activities which use exactly the same code right when I",
    "start": "2620000",
    "end": "2626559"
  },
  {
    "text": "run them however this one is green and notice",
    "start": "2626559",
    "end": "2633160"
  },
  {
    "text": "that the background on this is green the background on the menu bar is",
    "start": "2633160",
    "end": "2638559"
  },
  {
    "text": "green and if I push two the background on the menu bar is",
    "start": "2638559",
    "end": "2644240"
  },
  {
    "text": "purple that's because I've set two different themes",
    "start": "2644240",
    "end": "2649440"
  },
  {
    "text": "here on the two different activities theme one app Theme one is applied to",
    "start": "2651400",
    "end": "2658640"
  },
  {
    "text": "Activity one and app Theme 2 is applied to Activity",
    "start": "2658640",
    "end": "2663799"
  },
  {
    "text": "2 and if you look in style the way those two themes differ is the",
    "start": "2664000",
    "end": "2671440"
  },
  {
    "text": "background but the most important thing the thing that I want to make sure you you see is that I am not only affecting",
    "start": "2671520",
    "end": "2679160"
  },
  {
    "text": "the background of my program of my bits of bits of the view that I control I'm",
    "start": "2679160",
    "end": "2684480"
  },
  {
    "text": "also affecting bits that Android controls okay the background for these",
    "start": "2684480",
    "end": "2690839"
  },
  {
    "text": "pieces of the menu bar this this this and this all of those pieces of the menu bar bar were affected simply by setting",
    "start": "2690839",
    "end": "2699119"
  },
  {
    "text": "the theme that's pretty good okay that's pretty good that means for instance that",
    "start": "2699119",
    "end": "2705839"
  },
  {
    "text": "you now have a prayer of dealing with the gingerbread honeycomb divide where",
    "start": "2705839",
    "end": "2711200"
  },
  {
    "text": "Android got rid of the of the menu and put in the action",
    "start": "2711200",
    "end": "2717280"
  },
  {
    "text": "bar you can simply have different themes and in fact that's exactly what",
    "start": "2717280",
    "end": "2722680"
  },
  {
    "text": "action bar Sherlock does these two different themes affect your look different way and they're controlled by",
    "start": "2722680",
    "end": "2729680"
  },
  {
    "text": "resource qualifiers the same resource qualifier that the same resource qualifier that I",
    "start": "2729680",
    "end": "2735720"
  },
  {
    "text": "just showed you a few seconds ago that shows v11 or v14 those can deal with the",
    "start": "2735720",
    "end": "2741559"
  },
  {
    "text": "menu with the action bar they can set up the appearance of the action bar whereas the the views that are on versions older",
    "start": "2741559",
    "end": "2747880"
  },
  {
    "text": "than that",
    "start": "2747880",
    "end": "2750440"
  },
  {
    "text": "don't",
    "start": "2754880",
    "end": "2757880"
  },
  {
    "text": "so if you want to if you want to right so if you want",
    "start": "2764920",
    "end": "2771400"
  },
  {
    "text": "to refer to a member of a theme okay and",
    "start": "2771400",
    "end": "2776800"
  },
  {
    "text": "this is important down here this sentence is very important this is this is the place that you could confuse AAP",
    "start": "2776800",
    "end": "2783880"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "so if you want to refer to a member of a theme so in this case we know that the",
    "start": "2783880",
    "end": "2790240"
  },
  {
    "text": "theme defined an attribute called button style we know that that's part of the",
    "start": "2790240",
    "end": "2796960"
  },
  {
    "text": "theme if that's part of the theme I can refer to it it is a style it is a style",
    "start": "2796960",
    "end": "2803119"
  },
  {
    "text": "that is piece of the a piece of the current theme and I can refer to it as I",
    "start": "2803119",
    "end": "2808599"
  },
  {
    "text": "did right there with a question mark syntax this only works for things that",
    "start": "2808599",
    "end": "2814839"
  },
  {
    "text": "are pieces of themes it it doesn't work for Styles and by the way Android play",
    "start": "2814839",
    "end": "2822400"
  },
  {
    "text": "plays pretty fast and loose with these attribute names there are plenty of attribute names that are both style",
    "start": "2822400",
    "end": "2829680"
  },
  {
    "text": "attributes and theme attributes when they are both what's",
    "start": "2829680",
    "end": "2836079"
  },
  {
    "text": "happening is you're getting the one from the theme and that works if you are simply referring to a",
    "start": "2836079",
    "end": "2843640"
  },
  {
    "text": "style attribute this will compile but it will not",
    "start": "2843640",
    "end": "2849119"
  },
  {
    "text": "run at startup time you'll get um you'll get a kind of an odd error that says",
    "start": "2849119",
    "end": "2855280"
  },
  {
    "text": "that for instance that's not a style that the thing that is pointing to there",
    "start": "2855280",
    "end": "2860680"
  },
  {
    "text": "is not a style even though you know full well that it",
    "start": "2860680",
    "end": "2865440"
  },
  {
    "text": "is only use question marks with",
    "start": "2867319",
    "end": "2871880"
  },
  {
    "text": "themes themes with resource qualifiers are incredibly powerful this gives you almost everything you need you can make",
    "start": "2872880",
    "end": "2879440"
  },
  {
    "text": "your application look completely different right down to the stuff that doesn't belong to you okay right down to",
    "start": "2879440",
    "end": "2886640"
  },
  {
    "text": "the appearance of the action bar you can change the appearance of the action bar depending on what version of Android",
    "start": "2886640",
    "end": "2893160"
  },
  {
    "text": "you're on and there's just one more thing we",
    "start": "2893160",
    "end": "2899280"
  },
  {
    "text": "need to do to tie this all together and that is way back at the beginning I",
    "start": "2899280",
    "end": "2904640"
  },
  {
    "text": "showed you how to create custom attributes for your",
    "start": "2904640",
    "end": "2909839"
  },
  {
    "text": "widgets well what you want to do is you want to style your custom widget based",
    "start": "2909839",
    "end": "2916400"
  },
  {
    "start": "2912000",
    "end": "2912000"
  },
  {
    "text": "on the version of Android you're on okay this is the big deal this is the",
    "start": "2916400",
    "end": "2922520"
  },
  {
    "text": "payoff okay so what I want to do now is I want to say my tag view when it's",
    "start": "2922520",
    "end": "2929480"
  },
  {
    "text": "running on version 11 looks one way and might or more more useful let's let's",
    "start": "2929480",
    "end": "2935760"
  },
  {
    "text": "say I want my tag view to use um a Big Font when it's running on a TV and a",
    "start": "2935760",
    "end": "2942760"
  },
  {
    "text": "small font when it's running on somebody's phone all right so what I want is I want",
    "start": "2942760",
    "end": "2949000"
  },
  {
    "text": "a theme that can style my custom",
    "start": "2949000",
    "end": "2955160"
  },
  {
    "text": "attribute so how do you do that well it takes three things first of all we have",
    "start": "2955680",
    "end": "2962200"
  },
  {
    "text": "to go back to that adders file and we have to Define find some new",
    "start": "2962200",
    "end": "2967640"
  },
  {
    "text": "attributes these are attributes that are used nowhere else except as references in that",
    "start": "2967640",
    "end": "2974160"
  },
  {
    "text": "theme the next thing we need to",
    "start": "2974160",
    "end": "2978160"
  },
  {
    "text": "do let create a parent theme that defines the attributes I'll show you these things in code in just a",
    "start": "2980359",
    "end": "2985960"
  },
  {
    "text": "minute and finally you use you use the question mark syntax throughout your code to",
    "start": "2985960",
    "end": "2992319"
  },
  {
    "text": "refer to the con refer to the style okay so now now your tag my custom tag no longer",
    "start": "2992319",
    "end": "3002680"
  },
  {
    "text": "it is no longer styled using a style it is styled indirectly using a reference",
    "start": "3002680",
    "end": "3009680"
  },
  {
    "text": "through a theme and I'll show you how that",
    "start": "3009680",
    "end": "3014880"
  },
  {
    "text": "works so first of all here in",
    "start": "3017480",
    "end": "3023838"
  },
  {
    "text": "attributes I create two names that are not attributes I expect",
    "start": "3024200",
    "end": "3030720"
  },
  {
    "text": "to be used anywhere these are going to become theme just theme",
    "start": "3030720",
    "end": "3037119"
  },
  {
    "text": "members next in my style I create a",
    "start": "3038359",
    "end": "3046200"
  },
  {
    "text": "theme and this is just the default this is the standard one the def it uses these two new",
    "start": "3047079",
    "end": "3056040"
  },
  {
    "text": "attributes and notice that in this file I do not have this it will not work if",
    "start": "3056040",
    "end": "3062200"
  },
  {
    "text": "you try to do this with a nam space you must do this without a name space right there's no name space here",
    "start": "3062200",
    "end": "3070720"
  },
  {
    "text": "and there's no name space declared up here but I create a new",
    "start": "3070720",
    "end": "3078240"
  },
  {
    "text": "theme and the theme has uses these two new attributes and the attributes refer to",
    "start": "3078240",
    "end": "3087880"
  },
  {
    "text": "Styles so now I have an indirect reference to the style that I want to",
    "start": "3089520",
    "end": "3095920"
  },
  {
    "text": "use now in my",
    "start": "3096119",
    "end": "3101240"
  },
  {
    "text": "layout I refer to the style as the member of the",
    "start": "3101599",
    "end": "3107119"
  },
  {
    "text": "theme once again notice no namespace if you try to use a",
    "start": "3107119",
    "end": "3113359"
  },
  {
    "text": "namespace it won't work",
    "start": "3113359",
    "end": "3117359"
  },
  {
    "text": "now because this is an indirect reference when I Chang the theme when I",
    "start": "3118559",
    "end": "3123640"
  },
  {
    "text": "create new themes for new versions of of Android or old versions of Android or",
    "start": "3123640",
    "end": "3129520"
  },
  {
    "text": "different screen layouts or whatever since this is an indirect reference I'll",
    "start": "3129520",
    "end": "3134680"
  },
  {
    "text": "get whatever style is declared in the",
    "start": "3134680",
    "end": "3139480"
  },
  {
    "text": "theme that that does it okay now you're pretty much Home",
    "start": "3140760",
    "end": "3146839"
  },
  {
    "text": "Free so you can custom you can build your custom widget style it with custom",
    "start": "3146839",
    "end": "3153680"
  },
  {
    "text": "attributes assign create sets of custom attributes that belong for as Styles and",
    "start": "3153680",
    "end": "3161799"
  },
  {
    "text": "then assign those custom attributes to The Single theme and reference the Styles",
    "start": "3161799",
    "end": "3169280"
  },
  {
    "text": "indirectly through the theme and you get",
    "start": "3169280",
    "end": "3177240"
  },
  {
    "text": "this so these things this for instance is a text view but its style is",
    "start": "3178559",
    "end": "3184920"
  },
  {
    "text": "controlled by header style and header",
    "start": "3184920",
    "end": "3190119"
  },
  {
    "text": "style is this guy down here or",
    "start": "3190119",
    "end": "3197200"
  },
  {
    "text": "that and I still don't get my shrink wrapped widgets I want shrink wrapped widgets thanks a",
    "start": "3197200",
    "end": "3204160"
  },
  {
    "text": "lot [Music]",
    "start": "3204160",
    "end": "3216359"
  }
]