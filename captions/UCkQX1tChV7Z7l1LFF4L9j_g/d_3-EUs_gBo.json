[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "hey everyone so it's kind of late in the day and after listening to all the other talks my brain is kind of over an",
    "start": "3879",
    "end": "11170"
  },
  {
    "text": "overflow mode and luckily this is not a very deep talk so it's going to be kind",
    "start": "11170",
    "end": "16600"
  },
  {
    "text": "of an overview starting five years back we started doing micro services we tried",
    "start": "16600",
    "end": "21610"
  },
  {
    "text": "some sayings we had some issues we tried other things we kind of go through the problems and different solutions of how",
    "start": "21610",
    "end": "27850"
  },
  {
    "text": "micro services architectures evolved and where this is all taking us but I'm not going to go super deep into any of those",
    "start": "27850",
    "end": "34570"
  },
  {
    "text": "topics some of those topics have been went through in depth in this track already so if you didn't listen to the",
    "start": "34570",
    "end": "40929"
  },
  {
    "text": "other talks you can catch up on video and some of them it will just be a pointer if you want to know more about",
    "start": "40929",
    "end": "46499"
  },
  {
    "text": "service missions there will be a list of references at the end of my slide deck",
    "start": "46499",
    "end": "51940"
  },
  {
    "text": "once you download it from the cocoon site you can go and explore more this is",
    "start": "51940",
    "end": "57100"
  },
  {
    "text": "kind of highlights so don't write in your speaker notes at the end oh when did not go into depths into anything",
    "start": "57100",
    "end": "63429"
  },
  {
    "text": "I'm telling you up front I'm not going to depth into anything okay so let's go",
    "start": "63429",
    "end": "69430"
  },
  {
    "start": "68000",
    "end": "88000"
  },
  {
    "text": "all the way back to the beginning I think in my recollection the hype cycle",
    "start": "69430",
    "end": "74590"
  },
  {
    "text": "for micro services really started maybe five six years ago I know some people have been doing it for longer I've seen",
    "start": "74590",
    "end": "81369"
  },
  {
    "text": "some references going back to 2011 but let's go all the way back when we first",
    "start": "81369",
    "end": "86710"
  },
  {
    "text": "decided to use micro services we had those big monolithic applications and every time we had to make a change it",
    "start": "86710",
    "end": "93700"
  },
  {
    "text": "was kind of hostage negotiation between five different teams and the essary organization which back then may not",
    "start": "93700",
    "end": "99729"
  },
  {
    "text": "have existed under the name ester reorganization as they think of it and the application was the hostage and you",
    "start": "99729",
    "end": "105909"
  },
  {
    "text": "had to have everyone agree in order to make a step forward this was slow we were frustrated and we said what if we",
    "start": "105909",
    "end": "111999"
  },
  {
    "text": "break these things up into those isolated contexts where a team can own an entire context of execution start to",
    "start": "111999",
    "end": "119619"
  },
  {
    "text": "finish write it test it take it to the production the protons are on timelines",
    "start": "119619",
    "end": "124960"
  },
  {
    "text": "make changes in their own timelines surely we can move a lot faster that way and to a large extent it worked quite",
    "start": "124960",
    "end": "132490"
  },
  {
    "start": "129000",
    "end": "140000"
  },
  {
    "text": "well it has definitely become the architecture of choice in most",
    "start": "132490",
    "end": "138220"
  },
  {
    "text": "fast-moving companies today but there was a catch we took what used to be in",
    "start": "138220",
    "end": "143980"
  },
  {
    "text": "one application and we broke it down into parts it shouldn't be is that surprising that they still have to work",
    "start": "143980",
    "end": "150400"
  },
  {
    "text": "together they still have to communicate with each other and what we started out doing is say oh every language in the",
    "start": "150400",
    "end": "158050"
  },
  {
    "text": "world everything that I do has HTTP I know how to do rest I know how to send",
    "start": "158050",
    "end": "164319"
  },
  {
    "text": "JSON everything has JSON support and if it doesn't I can write it down in a weekend I mean three months I mean maybe two",
    "start": "164319",
    "end": "170080"
  },
  {
    "text": "years and the library will surely be done and it sounds fairly straightforward and easy and that's what",
    "start": "170080",
    "end": "176470"
  },
  {
    "text": "pretty much universally we all did but as we discovered this type of pattern in",
    "start": "176470",
    "end": "183910"
  },
  {
    "start": "180000",
    "end": "216000"
  },
  {
    "text": "a lot of contexts basically caused us to fall back into tight coupling and this",
    "start": "183910",
    "end": "191410"
  },
  {
    "text": "ended up getting the fun nickname of distributed monolith where you have all",
    "start": "191410",
    "end": "196840"
  },
  {
    "text": "of the problems of micro-services and yet somehow none of the benefits so the",
    "start": "196840",
    "end": "203170"
  },
  {
    "text": "button is pure hell but you still kind of have to negotiate every change and I'm going to walk you",
    "start": "203170",
    "end": "209170"
  },
  {
    "text": "through some of the ways that this happened to us because then I'll talk about the patterns that evolved to solve",
    "start": "209170",
    "end": "215380"
  },
  {
    "text": "the problem so the first thing that happened if you weren't careful is that clients started knowing way too much",
    "start": "215380",
    "end": "221980"
  },
  {
    "start": "216000",
    "end": "255000"
  },
  {
    "text": "about the internal organizations that you had because suddenly inverses and just talking to one application and",
    "start": "221980",
    "end": "229120"
  },
  {
    "text": "sending everything to this one application plus minus few DNS names they had to know that in order to do",
    "start": "229120",
    "end": "234340"
  },
  {
    "text": "returns I'm talking over here in order to do inventory I'm talking over there this is a serious problem because",
    "start": "234340",
    "end": "239739"
  },
  {
    "text": "clients are not updated on your schedule they're updated on someone else's",
    "start": "239739",
    "end": "244810"
  },
  {
    "text": "schedule which means that if you lick your internal architecture to a client you are basically stuck with it for five",
    "start": "244810",
    "end": "251590"
  },
  {
    "text": "plus years you definitely don't want to end up there so that was kind of one problem the other problem is that during",
    "start": "251590",
    "end": "259060"
  },
  {
    "start": "255000",
    "end": "347000"
  },
  {
    "text": "those lines of communication you had weird shifts of responsibilities so imagine that one of the server",
    "start": "259060",
    "end": "264820"
  },
  {
    "text": "is an order service I'm going to talk about order services a lot more and one of them is a validation the order",
    "start": "264820",
    "end": "271570"
  },
  {
    "text": "service has to know that once an order is created it has to go to call validation and the validation has to",
    "start": "271570",
    "end": "278530"
  },
  {
    "text": "know what to call next so suddenly a lot of the business logic is really encapsulated into those micro services",
    "start": "278530",
    "end": "286660"
  },
  {
    "text": "and why may wonder whether your order service has to know the validation rules and who to talk to about validation one",
    "start": "286660",
    "end": "293710"
  },
  {
    "text": "may wonder if you're a create a new insurance policy has to know about the",
    "start": "293710",
    "end": "300250"
  },
  {
    "text": "call to check where the person lives in order to figure out the correct insurance rate service these things end",
    "start": "300250",
    "end": "307540"
  },
  {
    "text": "up having those making your business logic is now leaked all over the place if you're not careful to make things",
    "start": "307540",
    "end": "314290"
  },
  {
    "text": "worse a lot of the concerns are actually common to a lot of those services so if you have a validation service maybe you",
    "start": "314290",
    "end": "320530"
  },
  {
    "text": "have a bunch of services that depend on it which means that all of them have to know what to do if the validation",
    "start": "320530",
    "end": "325960"
  },
  {
    "text": "service is done do I kill events do I retry do I offend some calls and so",
    "start": "325960",
    "end": "331240"
  },
  {
    "text": "there is a bunch of logic that is basically kind of spread out all over the place leading to redundancy and",
    "start": "331240",
    "end": "337570"
  },
  {
    "text": "shifting responsibility maybe your order service shouldn't have to worry at all about whether validation services up or",
    "start": "337570",
    "end": "344800"
  },
  {
    "text": "not maybe it's not none of their problem the other thing is this architecture",
    "start": "344800",
    "end": "350710"
  },
  {
    "start": "347000",
    "end": "377000"
  },
  {
    "text": "becomes kind of more complex and making changes become riskier and you have to test more and more of those services",
    "start": "350710",
    "end": "357700"
  },
  {
    "text": "together again if you are not careful they're always together on that that's exactly what the rest of my talk will be but if you're very naive you can get",
    "start": "357700",
    "end": "364960"
  },
  {
    "text": "into a point where oh no it cannot make this change without talking to five other services that may depend on me and",
    "start": "364960",
    "end": "370570"
  },
  {
    "text": "then I'll break service number six that I didn't even know that talks to me because we don't always know who is",
    "start": "370570",
    "end": "376060"
  },
  {
    "text": "talking to each other so we kind of need to solve that the other thing and I",
    "start": "376060",
    "end": "381640"
  },
  {
    "start": "377000",
    "end": "442000"
  },
  {
    "text": "think that's one of the biggest problems that really slows down innovation a lot of companies is that in order to end",
    "start": "381640",
    "end": "388540"
  },
  {
    "text": "anything - this graph of micro services I need to convince someone else to call",
    "start": "388540",
    "end": "393550"
  },
  {
    "text": "me so imagine that they have this amazing innovative service that really handles shipping",
    "start": "393550",
    "end": "398890"
  },
  {
    "text": "with errors way better than anything else that we had before I cannot really add any value to the company before I",
    "start": "398890",
    "end": "406120"
  },
  {
    "text": "convince someone else to call my service instead of maybe the old service and",
    "start": "406120",
    "end": "411300"
  },
  {
    "text": "these other people are kind of busy people they have their own priorities they have their own deliverables they",
    "start": "411300",
    "end": "416530"
  },
  {
    "text": "have stuff to do if I'm not proving to them that I'm adding value to their life why would they even call my service so",
    "start": "416530",
    "end": "423820"
  },
  {
    "text": "I'm stuck in this horrible chicken-and-egg cycle where I cannot prove that my service is valuable until",
    "start": "423820",
    "end": "429310"
  },
  {
    "text": "you call me but you have no reason to call me until I've proven that my service is valuable whoops that like the",
    "start": "429310",
    "end": "436210"
  },
  {
    "text": "motivation to innovate just goes way down because you know it's not going to be very easy and then the last thing",
    "start": "436210",
    "end": "443980"
  },
  {
    "start": "442000",
    "end": "497000"
  },
  {
    "text": "it's kind of minor but it's also kind of annoying basically jason has to be serialized in",
    "start": "443980",
    "end": "449710"
  },
  {
    "text": "deserialized on every hope HTTP has to open and close connections on pretty",
    "start": "449710",
    "end": "455050"
  },
  {
    "text": "much anything this adds latency and you cannot really reduce latency by adding",
    "start": "455050",
    "end": "461170"
  },
  {
    "text": "more micro services and if somehow it happened that in micro services architectures the only way we know how",
    "start": "461170",
    "end": "467170"
  },
  {
    "text": "to build these problems is add more microservices on top and I don't know exactly how it happened I also seen it",
    "start": "467170",
    "end": "473170"
  },
  {
    "text": "happen in my company we had a bunch of micro services making a chance required actually changing like three four five",
    "start": "473170",
    "end": "479800"
  },
  {
    "text": "different ones it was really painful we complained we had a bunch of architects we had a discussion Simone at the end we",
    "start": "479800",
    "end": "486130"
  },
  {
    "text": "move through five to something like eleven it's that how it goes so you have",
    "start": "486130",
    "end": "491410"
  },
  {
    "text": "to be mindful of latency it's not exactly a big concern but it's also not an entirely dismissible one so clearly",
    "start": "491410",
    "end": "499000"
  },
  {
    "text": "with all those problems if you do things Lavely it looks like we can do things a bit",
    "start": "499000",
    "end": "504130"
  },
  {
    "text": "better so I want to talk about how we'll do things better the reason I'm here talking to you about that is that I have",
    "start": "504130",
    "end": "510310"
  },
  {
    "text": "been solving these kind of problems for a long time and sometimes the consultants sometimes is an engineer and",
    "start": "510310",
    "end": "517050"
  },
  {
    "text": "recently I became an engineering manager which means that when I talk about developer productivity now and how to",
    "start": "517050",
    "end": "522729"
  },
  {
    "text": "make engineering teams move faster I now have a lot more skin in the game it used to be very abstract let's talk about",
    "start": "522729",
    "end": "528300"
  },
  {
    "text": "architectures that are terrifically fast now I'm kind of like with a stopwatch is the future done why are you wasting time",
    "start": "528300",
    "end": "533990"
  },
  {
    "text": "dude so yeah I am have that interest in all of us building things that make",
    "start": "533990",
    "end": "539990"
  },
  {
    "text": "developers more efficient also I tweet a lot which clearly makes me an expert so",
    "start": "539990",
    "end": "546710"
  },
  {
    "start": "544000",
    "end": "660000"
  },
  {
    "text": "the first pattern I'd like to share is that often API gateway it should be",
    "start": "546710",
    "end": "552620"
  },
  {
    "text": "fairly easy how many of you have AP I get when you're architecture yeah I kind of expected every hand to go",
    "start": "552620",
    "end": "558380"
  },
  {
    "text": "up that's kind of well-known and I don't think anyone lives without it I'm actually at the point where when I",
    "start": "558380",
    "end": "565070"
  },
  {
    "text": "interview engineers we have those few design questions that we always ask and usually like they draw the usual boxes",
    "start": "565070",
    "end": "571790"
  },
  {
    "text": "here's the observer here's the cache is the database and then they kind of throw an API get on top and ask what is it for",
    "start": "571790",
    "end": "577940"
  },
  {
    "text": "and say oh we're going to need it trust me yeah yeah that's kind of how it works so API gate was originally introduced to",
    "start": "577940",
    "end": "585530"
  },
  {
    "text": "solve the problem of a client knowing too much with the ideas that we can put an API gateway to hide all those",
    "start": "585530",
    "end": "591530"
  },
  {
    "text": "complexity from the clients but they turned out to be even more useful than that they can also handle the fact if",
    "start": "591530",
    "end": "598730"
  },
  {
    "text": "you think about it once you expose a lot of micro services to the clients all of them have to authenticate and whether",
    "start": "598730",
    "end": "605360"
  },
  {
    "text": "every service should be responsible for syndication whether the services were",
    "start": "605360",
    "end": "610400"
  },
  {
    "text": "unlikely key enough to be kind of closer to the clients should be responsible for syndication whether this is something",
    "start": "610400",
    "end": "616430"
  },
  {
    "text": "that you really want to implement multiple times is very very questionable so API gateways also solve that and they",
    "start": "616430",
    "end": "623540"
  },
  {
    "text": "ended up solving a lot of different things so the main pattern is that we'll throw an API gateway to front all the",
    "start": "623540",
    "end": "630320"
  },
  {
    "text": "requests so clients will always talk to the API gateway and say I want to talk to the returns and the point of an API",
    "start": "630320",
    "end": "635840"
  },
  {
    "text": "gateway and the API gateway will route it correctly and because now all the routing happens through the API gateway",
    "start": "635840",
    "end": "642560"
  },
  {
    "text": "it can also do things like oh if it's v1 returns we'll send you over here but",
    "start": "642560",
    "end": "647960"
  },
  {
    "text": "it's v2 it returns we actually have a new way to service that we are a be testing or that works faster if you have",
    "start": "647960",
    "end": "654800"
  },
  {
    "text": "a newer client or whatever it is at him and so it's actually routing can get quite smart so the main benefits we have",
    "start": "654800",
    "end": "662480"
  },
  {
    "start": "660000",
    "end": "722000"
  },
  {
    "text": "for API gateways is they take responsibility for things that a lot of services need they do",
    "start": "662480",
    "end": "668089"
  },
  {
    "text": "authentication they do the routing they also do rate limiting which is kind of a",
    "start": "668089",
    "end": "673759"
  },
  {
    "text": "huge deal if you are open to the entire Internet you don't want every single request to",
    "start": "673759",
    "end": "679459"
  },
  {
    "text": "hit you straight in the database you want to have layers of control around that I've heard that as evil services",
    "start": "679459",
    "end": "686569"
  },
  {
    "text": "like AWS lambda or other function architectures they can basically scale into the thousands at the drop of a hat",
    "start": "686569",
    "end": "692649"
  },
  {
    "text": "someone may try to use that to you know speed order iPads before they run out so",
    "start": "692649",
    "end": "698930"
  },
  {
    "text": "rate limiting can be incredibly useful and then because it's the first place where clients hit your back-end it's",
    "start": "698930",
    "end": "706339"
  },
  {
    "text": "also in a really good place if you do things like tracing and spanning and",
    "start": "706339",
    "end": "711470"
  },
  {
    "text": "trying to code or observability it's a very good place to log the first access point and start timing your back-end",
    "start": "711470",
    "end": "718160"
  },
  {
    "text": "from there so a lot of logging in analytics goes there to this things that",
    "start": "718160",
    "end": "723740"
  },
  {
    "start": "722000",
    "end": "778000"
  },
  {
    "text": "sometimes happens as you noticed the API gateway is super useful and you know",
    "start": "723740",
    "end": "729769"
  },
  {
    "text": "sometimes I want to talk to another service and know that I will be routed to correct one and be rate limited and",
    "start": "729769",
    "end": "736730"
  },
  {
    "text": "get all this logging like it just sounds like a really good thing so what sometimes happens is its",
    "start": "736730",
    "end": "742130"
  },
  {
    "text": "internal services start talking to each other via the API a great way because it makes life a lot easier it's like this",
    "start": "742130",
    "end": "748760"
  },
  {
    "text": "one point that you know you get routed and everything will happen correctly it definitely started happening to us where",
    "start": "748760",
    "end": "755660"
  },
  {
    "text": "we have an API gateway and basically the guys who own it kind of set rules and",
    "start": "755660",
    "end": "761149"
  },
  {
    "text": "they're kind of willing to protect them with their lives like know if you're if you exist in one of our smaller regions",
    "start": "761149",
    "end": "767029"
  },
  {
    "text": "you are not allowed to talk back to do the Gateway like that's the worst anti-pattern so we learned but we still",
    "start": "767029",
    "end": "772970"
  },
  {
    "text": "want this goodness right it's still kind of good things come with the API gateways which brings us to service mesh",
    "start": "772970",
    "end": "781189"
  },
  {
    "start": "778000",
    "end": "786000"
  },
  {
    "text": "which is in one word like API gateways but internally so basically the way we",
    "start": "781189",
    "end": "788149"
  },
  {
    "start": "786000",
    "end": "797000"
  },
  {
    "text": "normally talk about API gateways is we talk about north-south traffic this is from extern the outside world into the",
    "start": "788149",
    "end": "795470"
  },
  {
    "text": "depths of our data center the data insider data center is normally",
    "start": "795470",
    "end": "800580"
  },
  {
    "start": "797000",
    "end": "819000"
  },
  {
    "text": "called east-west traffic if you are have very good eyes you can see that a colored things in slightly different",
    "start": "800580",
    "end": "805890"
  },
  {
    "text": "colors it doesn't come out right in this light I swear it looked better on my laptop earlier in the day but you can",
    "start": "805890",
    "end": "813570"
  },
  {
    "text": "see that east-west traffic is the traffic between the micro-services not the one coming from the client and the",
    "start": "813570",
    "end": "820290"
  },
  {
    "start": "819000",
    "end": "948000"
  },
  {
    "text": "way we implemented API gateway for the east-west services so one other thing to notice is that we have a lot of a lot",
    "start": "820290",
    "end": "827670"
  },
  {
    "text": "more connections going to east-west than we do north-south pretty much by definition the internal web is much more",
    "start": "827670",
    "end": "834750"
  },
  {
    "text": "dense which means that having one API gateway is kind of dismal it's that everything goes through as a single",
    "start": "834750",
    "end": "840630"
  },
  {
    "text": "point of failure as a single bottleneck is not going to work and scale at all so the pattern is implemented is to take",
    "start": "840630",
    "end": "847500"
  },
  {
    "text": "all the things that we want an API gateway to do and scale it out and the pattern that was used to scale it out is",
    "start": "847500",
    "end": "853980"
  },
  {
    "text": "what is known as a sidecar the idea of the sidecar is that you take short",
    "start": "853980",
    "end": "858990"
  },
  {
    "text": "functionality that every one of your application is going to need and create its own a very small application that",
    "start": "858990",
    "end": "866940"
  },
  {
    "text": "can be deployed next to in the same pod in the same container on the same host",
    "start": "866940",
    "end": "872070"
  },
  {
    "text": "as your actual applications why an application and not a library because",
    "start": "872070",
    "end": "878520"
  },
  {
    "text": "these days a lot of times companies have multiple programming languages even as we're a small company we have maybe a",
    "start": "878520",
    "end": "885150"
  },
  {
    "text": "hundred ish engineers and we ended up with Python Guo Java Scala some people",
    "start": "885150",
    "end": "891360"
  },
  {
    "text": "are trying to introduce rust we're not going to let them yes so having a",
    "start": "891360",
    "end": "897060"
  },
  {
    "text": "sidecar means because it's independent functionality and it talks via network calls mostly HTTP network calls it means",
    "start": "897060",
    "end": "904800"
  },
  {
    "text": "that you don't have to implement the library in multiple languages on trying to do Interop from Java to C to go kind",
    "start": "904800",
    "end": "913470"
  },
  {
    "text": "of thing that would be really fast if we try to do it clearly so sidecars it is and basically that's kind of the way it",
    "start": "913470",
    "end": "920040"
  },
  {
    "text": "looks so the colored circles are my micro services and I put kind of a small",
    "start": "920040",
    "end": "925080"
  },
  {
    "text": "proxy next to each one of them Y proxy my application sinks that it's talking",
    "start": "925080",
    "end": "931180"
  },
  {
    "text": "to basically some kind of a port on the localhost but our said car knows words actually",
    "start": "931180",
    "end": "938710"
  },
  {
    "text": "try to talk to and routes the data correctly and on the way does a lot of the goodness that API Gators would also",
    "start": "938710",
    "end": "945100"
  },
  {
    "text": "do and sometimes actually a lot more so one of the things it can do is that",
    "start": "945100",
    "end": "951100"
  },
  {
    "start": "948000",
    "end": "1010000"
  },
  {
    "text": "especially if you run on kubernetes how many of you are running anything on kubernetes at all okay there I'm sorry",
    "start": "951100",
    "end": "957790"
  },
  {
    "text": "to hear that we'll have a support session later and one of the things that happened a lot when you run kubernetes",
    "start": "957790",
    "end": "964120"
  },
  {
    "text": "is that IP is change a lot and sometimes and you have a bunch of kind of load",
    "start": "964120",
    "end": "969610"
  },
  {
    "text": "balancers and things that require to know about it and one of the nice things that the proxy can do is basically you",
    "start": "969610",
    "end": "976780"
  },
  {
    "text": "talk locally you keep talking to the same port on localhost and the proxy is the one that is aware that things moved",
    "start": "976780",
    "end": "984010"
  },
  {
    "text": "around and routes data correctly same thing if you want to upgrade from one version of the pink application to the",
    "start": "984010",
    "end": "991540"
  },
  {
    "text": "other you basically route it to another version if you want to do a bit is testing pink application versus green",
    "start": "991540",
    "end": "998140"
  },
  {
    "text": "application you can do the routing and you're the purple application does not not have to know anything about that it",
    "start": "998140",
    "end": "1004230"
  },
  {
    "text": "still thinks it's talking to the exact same thing routing happens magically in the background the other really nice",
    "start": "1004230",
    "end": "1011490"
  },
  {
    "start": "1010000",
    "end": "1116000"
  },
  {
    "text": "thing is that it can happen internally is right limiting it basically means that a lot of intelligence about error",
    "start": "1011490",
    "end": "1018180"
  },
  {
    "text": "recovery and and also was an entire talk about error recovery a lot of the intelligence doesn't have to be built",
    "start": "1018180",
    "end": "1024060"
  },
  {
    "text": "into every single application which is very very powerful because as engineers",
    "start": "1024060",
    "end": "1030120"
  },
  {
    "text": "actually a lot of us don't want to think about error handling at all if we could and a lot of times we don't and then we",
    "start": "1030120",
    "end": "1036270"
  },
  {
    "text": "write kind of bad applications that do bad things when errors happen and one of",
    "start": "1036270",
    "end": "1041370"
  },
  {
    "text": "the really bad patterns that sometimes happen is that you send something to the server the server sends you back some",
    "start": "1041370",
    "end": "1048480"
  },
  {
    "text": "kind of an error it has some kind of a delay and instead of handling the error like a grown up you kind of throw",
    "start": "1048480",
    "end": "1055500"
  },
  {
    "text": "tantrum and it just keep you trying but until the basically the server give happened ice mostly happens a lot on",
    "start": "1055500",
    "end": "1064120"
  },
  {
    "text": "databases like one of the first errors I ever troubleshooted in my career was in MySQL that got viciously attacked by a",
    "start": "1064120",
    "end": "1071680"
  },
  {
    "text": "set of PHP applications but funny enough this keeps on happening almost 20 years",
    "start": "1071680",
    "end": "1077050"
  },
  {
    "text": "later some things never go away so the idea is that the client can be as buggy",
    "start": "1077050",
    "end": "1083410"
  },
  {
    "text": "as you want and keep retrying the proxy knows about rate limiting and it will drop the majority of the retries",
    "start": "1083410",
    "end": "1089800"
  },
  {
    "text": "so the server will actually be protected it can recover in peace from whatever error just happened but maybe more",
    "start": "1089800",
    "end": "1096640"
  },
  {
    "text": "importantly it can actually because we are dropping just the retries the",
    "start": "1096640",
    "end": "1102220"
  },
  {
    "text": "important traffic that will actually maybe get stuck in a very long queue behind all those retries now has a",
    "start": "1102220",
    "end": "1108280"
  },
  {
    "text": "chance of actually getting processed by the server so this architecture is significantly more resilient than a lot",
    "start": "1108280",
    "end": "1114280"
  },
  {
    "text": "of alternatives okay so we had server mesh which solved a lot of our internal",
    "start": "1114280",
    "end": "1120810"
  },
  {
    "start": "1116000",
    "end": "1134000"
  },
  {
    "text": "communication problems but maybe not quite all of them and I'm going to switch to talking to what is probably my",
    "start": "1120810",
    "end": "1127840"
  },
  {
    "text": "favorite design pattern and the one that I've really been talking about for five",
    "start": "1127840",
    "end": "1133120"
  },
  {
    "text": "years or so maybe and the thing that we really want to solve is the fact that",
    "start": "1133120",
    "end": "1138580"
  },
  {
    "text": "because of those point-to-point request response communications changes are",
    "start": "1138580",
    "end": "1144700"
  },
  {
    "text": "riskier than d2 applications are more aware of each other than they have to be and adding new things is much harder",
    "start": "1144700",
    "end": "1152170"
  },
  {
    "text": "than we would like it to be and the problem or at least something that is",
    "start": "1152170",
    "end": "1159250"
  },
  {
    "text": "overused and could be used only in special cases and a lot less than it currently does is what we call request",
    "start": "1159250",
    "end": "1165820"
  },
  {
    "text": "driven pattern in the request response pattern I as a service talk to other",
    "start": "1165820",
    "end": "1172000"
  },
  {
    "text": "services I initiate the communication and I initially did with maybe two ideas",
    "start": "1172000",
    "end": "1177070"
  },
  {
    "text": "in one mind the first one is that sometimes I want to tell you what to do I'm the order service I need you to",
    "start": "1177070",
    "end": "1183220"
  },
  {
    "text": "validate my order please validate my orders thank you and the other scenario is that sometimes I have a question to",
    "start": "1183220",
    "end": "1189790"
  },
  {
    "text": "ask sometimes I am the shipping service and I need to ship something I don't actually know where",
    "start": "1189790",
    "end": "1195950"
  },
  {
    "text": "this customer ID lives so I talked to another service and say hey do you know where customers 526 lives and you get a",
    "start": "1195950",
    "end": "1204169"
  },
  {
    "text": "dress and now you can continue processing and this is fine but this kind of creates those couple patterns",
    "start": "1204169",
    "end": "1210470"
  },
  {
    "text": "that I didn't win like if when driven kind of switches this pattern on its head and makes every service more",
    "start": "1210470",
    "end": "1216740"
  },
  {
    "text": "autonomous which is exactly what we're after in the first place when we first came up with micro services let's take a",
    "start": "1216740",
    "end": "1223340"
  },
  {
    "text": "step five years back we really wanted to make services independent so teams have",
    "start": "1223340",
    "end": "1228379"
  },
  {
    "text": "more autonomy in this case every service is responsible for broadcasting events events is anything that changes the",
    "start": "1228379",
    "end": "1235549"
  },
  {
    "text": "state of the world an order was created a shipment was sent a shipment was arrived something was validated a person",
    "start": "1235549",
    "end": "1242120"
  },
  {
    "text": "moved to a new address you keep broadcasting those changes to the state of the world and then you have other",
    "start": "1242120",
    "end": "1248389"
  },
  {
    "text": "services every service is also responsible to listen again to events on how the world change and when you get an",
    "start": "1248389",
    "end": "1256250"
  },
  {
    "text": "event is that tells you the world changed you can do a bunch of stuff you can discard it this is not yes something happened but I don't care that it",
    "start": "1256250",
    "end": "1262429"
  },
  {
    "text": "happened it can be like Oh an order was created I have to handle it I know what",
    "start": "1262429",
    "end": "1268700"
  },
  {
    "text": "to do it's my responsibility to pick up orders and handle them nobody's really telling me what to do I noticed a change",
    "start": "1268700",
    "end": "1274639"
  },
  {
    "text": "in the world and it can also create a local cash out of those events and store",
    "start": "1274639",
    "end": "1282139"
  },
  {
    "text": "basically a small copy of the state of the world for its own later use and because this is kind of a lot I'm going",
    "start": "1282139",
    "end": "1288919"
  },
  {
    "text": "to work through an example but the thing I want you to keep in mind to kind of clarify the other thing is that you have",
    "start": "1288919",
    "end": "1295100"
  },
  {
    "text": "those events about hey the world changed and the fact that the world changes effect you can store it in a database",
    "start": "1295100",
    "end": "1301220"
  },
  {
    "text": "and it's a trigger it can cause you to do something so let's talk about buying",
    "start": "1301220",
    "end": "1308179"
  },
  {
    "text": "hype iPads I do maybe slightly too much of that we have an order service and in",
    "start": "1308179",
    "end": "1314690"
  },
  {
    "text": "order to buy an iPod the over service has to call the shipping service and tell it hey there's a new order please",
    "start": "1314690",
    "end": "1322269"
  },
  {
    "text": "ship something and the shipping services like okay a new order I have to ship something to",
    "start": "1322269",
    "end": "1328580"
  },
  {
    "text": "customer 526 but I don't know where it lives calling the customer service",
    "start": "1328580",
    "end": "1333620"
  },
  {
    "text": "getting the customer address and shipping it this is reasonable we've all done that of course things will go wrong",
    "start": "1333620",
    "end": "1340550"
  },
  {
    "text": "shipping service can go down and now orders have to figure out what to do with all those extra orders that we",
    "start": "1340550",
    "end": "1345590"
  },
  {
    "text": "cannot temporarily ship customer service can go down we can suddenly basically",
    "start": "1345590",
    "end": "1351230"
  },
  {
    "text": "stop shipping stuff accidentally that will be a problem we want to improve this and the first order of improvement",
    "start": "1351230",
    "end": "1357890"
  },
  {
    "start": "1355000",
    "end": "1425000"
  },
  {
    "text": "is to start using events for notification so when an order is created the other service doesn't call the",
    "start": "1357890",
    "end": "1364160"
  },
  {
    "text": "shipping service it updates this stream of events and say hey in order was",
    "start": "1364160",
    "end": "1369440"
  },
  {
    "text": "created and here's another one know that those orders get logged to a persistent stream no matter whether the shipping",
    "start": "1369440",
    "end": "1377360"
  },
  {
    "text": "service is up listening or not which is fantastic because when the shipping service has time his energy is available",
    "start": "1377360",
    "end": "1385130"
  },
  {
    "text": "it can go start picking orders and shipping them it will and then if what",
    "start": "1385130",
    "end": "1390140"
  },
  {
    "text": "if it doesn't no worry we get a log of all the orders maybe log of orders and cancellations so relieve the shipping",
    "start": "1390140",
    "end": "1396740"
  },
  {
    "text": "service even if it's up but overloaded or it's up with the customer service database is down all those things don't",
    "start": "1396740",
    "end": "1402440"
  },
  {
    "text": "matter orders will keep getting created customers will get an acknowledged will ship it to them maybe five hours later",
    "start": "1402440",
    "end": "1408530"
  },
  {
    "text": "when we deal with our outage but nobody ever noticed a five hour delay in shipping unless it's like those two hour",
    "start": "1408530",
    "end": "1414950"
  },
  {
    "text": "stuff of that whole foods kind of does that will be a problem but other than that nobody really cares so this is much",
    "start": "1414950",
    "end": "1422210"
  },
  {
    "text": "more resilient architectures than we had before to improve it a bit more we can start using the events as notifications",
    "start": "1422210",
    "end": "1430990"
  },
  {
    "start": "1425000",
    "end": "1502000"
  },
  {
    "text": "as data that is shared between multiple services so whenever the customer",
    "start": "1430990",
    "end": "1436610"
  },
  {
    "text": "service sees that a customer changed the address changed the phone number change",
    "start": "1436610",
    "end": "1441950"
  },
  {
    "text": "the gender this gets written to database but an event is published because the state of the world is changed and",
    "start": "1441950",
    "end": "1447440"
  },
  {
    "text": "everyone needs to know that the world has changed shipping service that maybe doesn't care whether or not I changed my",
    "start": "1447440",
    "end": "1453110"
  },
  {
    "text": "gender but it definitely cares that I my address so the shipping service leases to those events and creates a",
    "start": "1453110",
    "end": "1459470"
  },
  {
    "text": "small copy of the database really small just customer ID shipping address that's usually enough and this small copy of",
    "start": "1459470",
    "end": "1467000"
  },
  {
    "text": "database allows it that whenever it gets a request to ship something which happens by the way far more than people",
    "start": "1467000",
    "end": "1474290"
  },
  {
    "text": "change their home address it can basically answer the question from its own local database which is very fast",
    "start": "1474290",
    "end": "1481460"
  },
  {
    "text": "very powerful and it makes it completely independent from whether the customer service is up or not so now we created a",
    "start": "1481460",
    "end": "1488150"
  },
  {
    "text": "much more fully decoupled architecture where people really can deploy things independently and don't have to say hey",
    "start": "1488150",
    "end": "1495140"
  },
  {
    "text": "customer service needs to be doing maintenance is it okay if we stop shipping stuff for few hours this is",
    "start": "1495140",
    "end": "1500300"
  },
  {
    "text": "much better the one objections that always comes up is whether it's really",
    "start": "1500300",
    "end": "1506660"
  },
  {
    "start": "1502000",
    "end": "1614000"
  },
  {
    "text": "safe to have a DB for each micro service I've had a bunch of I just walking the",
    "start": "1506660",
    "end": "1511670"
  },
  {
    "text": "hallway I heard a bunch of people say you know these days were just duplicating data everywhere and I'm not",
    "start": "1511670",
    "end": "1517100"
  },
  {
    "text": "very comfortable duplicating data everywhere and I kind of get that but I want to",
    "start": "1517100",
    "end": "1522290"
  },
  {
    "text": "point out few things the first thing I want to point out is that it's actually safer than you think because all these",
    "start": "1522290",
    "end": "1528260"
  },
  {
    "text": "databases are created from a shared stream of events about the state of the world and the stream of events is",
    "start": "1528260",
    "end": "1533870"
  },
  {
    "text": "persistent if you know about event sourcing you know exactly what I'm talking about it means that all those",
    "start": "1533870",
    "end": "1539120"
  },
  {
    "text": "common all of different databases will have a common source of truths they are not going to diverge kind of into lala",
    "start": "1539120",
    "end": "1545300"
  },
  {
    "text": "land and the other thing to keep in mind is that if I suspect that the database went wrong and something is not doesn't",
    "start": "1545300",
    "end": "1552950"
  },
  {
    "text": "look right I can completely delete the database and recreate it from the history of events now it's gonna take",
    "start": "1552950",
    "end": "1558500"
  },
  {
    "text": "some time this is not necessarily something you can do in a second you can try to paralyze it speed it up but you",
    "start": "1558500",
    "end": "1563780"
  },
  {
    "text": "have the ability to do that so it's much safer than you imagined the other thing is that you get those custom projections",
    "start": "1563780",
    "end": "1570760"
  },
  {
    "text": "every service will have the data it needs just the data is in the exact",
    "start": "1570760",
    "end": "1575870"
  },
  {
    "text": "format that it needs it because it creates its own small database without ever bothering a DBA no more go to the",
    "start": "1575870",
    "end": "1584180"
  },
  {
    "text": "DBA and like I want to add this field but this may take too much space and to approve it with the other department",
    "start": "1584180",
    "end": "1590659"
  },
  {
    "text": "as well it's your own database you store that the way you want if any of you attended the data Lake sorry the data",
    "start": "1590659",
    "end": "1597049"
  },
  {
    "text": "mesh presentation very very similar idea you own your destiny and your data in",
    "start": "1597049",
    "end": "1602480"
  },
  {
    "text": "your context of execution and then over the obvious benefit is that you get the",
    "start": "1602480",
    "end": "1607970"
  },
  {
    "text": "reduced dependencies and you get low latency everyone loves lower latency and",
    "start": "1607970",
    "end": "1614659"
  },
  {
    "start": "1614000",
    "end": "1644000"
  },
  {
    "text": "the thing to note here is that when I talk about event-driven micro-services by and large they're stateful because",
    "start": "1614659",
    "end": "1622249"
  },
  {
    "text": "they have their own database and they maintain and this thing is important",
    "start": "1622249",
    "end": "1627679"
  },
  {
    "text": "because you can see how much faster more independent and more powerful stateful",
    "start": "1627679",
    "end": "1632989"
  },
  {
    "text": "micro services are and this is important because in about 10 slides we're going to lose the state again to new",
    "start": "1632989",
    "end": "1640279"
  },
  {
    "text": "advancement and we're going to miss it when it's gone the last thing I want to",
    "start": "1640279",
    "end": "1645889"
  },
  {
    "start": "1644000",
    "end": "1752000"
  },
  {
    "text": "put out about event-driven micro services is that the enable the kind of innovations that I really want to see",
    "start": "1645889",
    "end": "1652129"
  },
  {
    "text": "because suppose that I you know I had the order services and I had an inventory service suppose I want to add",
    "start": "1652129",
    "end": "1658249"
  },
  {
    "text": "the pricing service to the mix and we only had something that it's pricing but it was very fixed like the inventory",
    "start": "1658249",
    "end": "1664039"
  },
  {
    "text": "service just had a fixed price for everything but I think I can do better I watched Airlines very carefully and I",
    "start": "1664039",
    "end": "1671659"
  },
  {
    "text": "know that you can subtly shift prices in response to supply and demand maybe I",
    "start": "1671659",
    "end": "1676970"
  },
  {
    "text": "used to work at uber so I actually know how to do it but I don't know how to",
    "start": "1676970",
    "end": "1682190"
  },
  {
    "text": "convince other people in the companies that it's also a good idea to do it for my iPad shipping service and not just",
    "start": "1682190",
    "end": "1688519"
  },
  {
    "text": "for uber so I can go and create my own pricing service based on everything that",
    "start": "1688519",
    "end": "1694519"
  },
  {
    "text": "I learned at my previous job and plug it into this shared Universal source of",
    "start": "1694519",
    "end": "1699889"
  },
  {
    "text": "events for my company and now I'm going to know about every channel to inventory every orders that happened every order",
    "start": "1699889",
    "end": "1705950"
  },
  {
    "text": "that maybe cannot be fulfilled because we're out of stock and I can find you in my pricing algorithm and then I can",
    "start": "1705950",
    "end": "1712399"
  },
  {
    "text": "start publishing pricing to the stream of events so anyone who wants to check how would our revenue look if used my",
    "start": "1712399",
    "end": "1719509"
  },
  {
    "text": "pricing versus the existing pricing can basically look at all those events and kind of compare them so I can",
    "start": "1719509",
    "end": "1725660"
  },
  {
    "text": "actually go to different departments like the iPod Services and say hey do",
    "start": "1725660",
    "end": "1730760"
  },
  {
    "text": "you want to use my pricing versus the old pricing because look how much better it's going to be and I don't have to ask",
    "start": "1730760",
    "end": "1736520"
  },
  {
    "text": "them to trust me I actually have proof or at least some semblance of proof shadow proof of how much better life",
    "start": "1736520",
    "end": "1743030"
  },
  {
    "text": "would be so it's a much healthier process you can make more data-driven decisions that way which is something",
    "start": "1743030",
    "end": "1749180"
  },
  {
    "text": "that I'm a big big fan of okay now we still have all those services talking to",
    "start": "1749180",
    "end": "1756440"
  },
  {
    "start": "1752000",
    "end": "1774000"
  },
  {
    "text": "each other whether it's request response whether some of them are now talking in an event-driven way they're still",
    "start": "1756440",
    "end": "1762830"
  },
  {
    "text": "talking to each other and this still has some issues involved so yeah it can be",
    "start": "1762830",
    "end": "1768890"
  },
  {
    "text": "either way it doesn't matter either you send those commands or you write events it doesn't matter how you do it",
    "start": "1768890",
    "end": "1776090"
  },
  {
    "text": "because we until now we've only talked about the medium how you send events we",
    "start": "1776090",
    "end": "1781790"
  },
  {
    "text": "haven't talked about the events themselves and what's in them so the medium is the message of this",
    "start": "1781790",
    "end": "1787730"
  },
  {
    "text": "presentation but it's not the messages that are sent in your architecture if that makes any sense",
    "start": "1787730",
    "end": "1793090"
  },
  {
    "start": "1793000",
    "end": "1809000"
  },
  {
    "text": "so this is what your messages will probably look like you know it's a JSON",
    "start": "1793090",
    "end": "1798110"
  },
  {
    "text": "it has a bunch of fields it's actually the property ID a bunch of stuff in there lots and lots and lots of metadata",
    "start": "1798110",
    "end": "1804170"
  },
  {
    "text": "about everything that's going on in the world and this is pretty good it has",
    "start": "1804170",
    "end": "1809600"
  },
  {
    "start": "1809000",
    "end": "1840000"
  },
  {
    "text": "some problems one of the big ones is that as we said in the beginning HTTP and JSON can be incredibly slow and this",
    "start": "1809600",
    "end": "1816860"
  },
  {
    "text": "is I can't say it easily so a little but a very very popular solution these days",
    "start": "1816860",
    "end": "1822050"
  },
  {
    "text": "is to use HTTP 2 and G RPC and we've used solid using geo PC if you use go",
    "start": "1822050",
    "end": "1829670"
  },
  {
    "text": "it's fairly easy it's fairly built-in it doesn't solve all of the problems but it",
    "start": "1829670",
    "end": "1835550"
  },
  {
    "text": "does make things significantly faster so definitely worth exploring but the other",
    "start": "1835550",
    "end": "1842060"
  },
  {
    "start": "1840000",
    "end": "1852000"
  },
  {
    "text": "thing is that the government refuse your PC or JSON some type of changes are",
    "start": "1842060",
    "end": "1847430"
  },
  {
    "text": "still quite risky and I want to talk a bit about those and I'm going to use",
    "start": "1847430",
    "end": "1854630"
  },
  {
    "start": "1852000",
    "end": "1966000"
  },
  {
    "text": "event-driven as example because I lived in the world for a long time but you can have the exact same problems in a slightly lighter",
    "start": "1854630",
    "end": "1860990"
  },
  {
    "text": "weight for a fashion if you are using request/response and the problem is that",
    "start": "1860990",
    "end": "1866390"
  },
  {
    "text": "when you communicate with messages the messages have schema it has fields and",
    "start": "1866390",
    "end": "1872270"
  },
  {
    "text": "the fields have data types but if you never really need any relation or testing you have a bunch of things that",
    "start": "1872270",
    "end": "1879260"
  },
  {
    "text": "depend on the exact data types and exact field names and you maybe not even know about them so you make what you think is",
    "start": "1879260",
    "end": "1886940"
  },
  {
    "text": "a fairly innocent change and it's very likely that it will immediately break everything now you'll think that it will",
    "start": "1886940",
    "end": "1893900"
  },
  {
    "text": "be an incredibly silly change how would anyone not notice that you change",
    "start": "1893900",
    "end": "1899480"
  },
  {
    "text": "something from a long to a string clearly it was not a compatible changing will break everything it turns out that",
    "start": "1899480",
    "end": "1906110"
  },
  {
    "text": "basically it's been done over and over and at first you know one customer and like okay these guys are kind of new",
    "start": "1906110",
    "end": "1912880"
  },
  {
    "text": "things happen whatever they didn't know very well as any disco go to a talk by uber and he discovers that it also",
    "start": "1912880",
    "end": "1918890"
  },
  {
    "text": "happened to Oberer and I okay is there maybe kind of aquatic companies I move fast and break things surely it will",
    "start": "1918890",
    "end": "1924770"
  },
  {
    "text": "never happen to me well guess to guess what March early on the year and this is incredibly",
    "start": "1924770",
    "end": "1930770"
  },
  {
    "text": "embarrassing I'll talk about it a bit for later but the key is that if you don't have a good way to test is that",
    "start": "1930770",
    "end": "1936890"
  },
  {
    "text": "your schema changes are compatible you are likely to cause huge amount of damage it's worse if you have this event",
    "start": "1936890",
    "end": "1943790"
  },
  {
    "text": "stream because remember we want to store it forever so if you wrote things that are incompatible at any point in time a",
    "start": "1943790",
    "end": "1950450"
  },
  {
    "text": "service of any version can read a data point in any version right because a new service can go all the way back to the",
    "start": "1950450",
    "end": "1956840"
  },
  {
    "text": "past or an old service can just stick around and keep on reading new messages you have basically no control over who",
    "start": "1956840",
    "end": "1963590"
  },
  {
    "text": "is reading what which is incredibly scary so the way to really look at it is",
    "start": "1963590",
    "end": "1968720"
  },
  {
    "text": "that whether you're using G RPC or rest all your writing events you have those",
    "start": "1968720",
    "end": "1974360"
  },
  {
    "text": "contracts of what the communication looks like what is in the message and those contracts are api's and they have",
    "start": "1974360",
    "end": "1980720"
  },
  {
    "text": "to be tested and they have to be validated and the way we do it in the",
    "start": "1980720",
    "end": "1985990"
  },
  {
    "start": "1983000",
    "end": "2034000"
  },
  {
    "text": "event-driven world if you scuff is your big message queue which by the",
    "start": "1985990",
    "end": "1991130"
  },
  {
    "text": "way how many of you do use Kafka haven't asked yay so my favorite project if so",
    "start": "1991130",
    "end": "1998410"
  },
  {
    "text": "we we normally use schema registries confluent has one a lot of other companies have one and the idea is that",
    "start": "1998410",
    "end": "2005500"
  },
  {
    "text": "when you produce events you register the schema of the event in a registry and",
    "start": "2005500",
    "end": "2011320"
  },
  {
    "text": "you also automatically gets validated with all the existing schemas in the",
    "start": "2011320",
    "end": "2017050"
  },
  {
    "text": "registry and if it turns out to break a compatibility rule the producer will get incompatible data serialization error",
    "start": "2017050",
    "end": "2023740"
  },
  {
    "text": "and you physically cannot produce an incompatible event which is fantastic because you just prevented a massive",
    "start": "2023740",
    "end": "2030610"
  },
  {
    "text": "breakdown for everything downstream so but obviously waiting until something",
    "start": "2030610",
    "end": "2037270"
  },
  {
    "start": "2034000",
    "end": "2183000"
  },
  {
    "text": "hits production in order to reject your messages is kind of a crappy developer experience what we really want is to",
    "start": "2037270",
    "end": "2044530"
  },
  {
    "text": "catch it in the development phase and this came if you just give a registry there is a maven plugin that basically",
    "start": "2044530",
    "end": "2050230"
  },
  {
    "text": "you run maven plugin validate schema you give it your schema definition it goes",
    "start": "2050230",
    "end": "2056050"
  },
  {
    "text": "up to a schema registry of your choice and basically just checks compatibility for you and then you can do it before",
    "start": "2056050",
    "end": "2061899"
  },
  {
    "text": "you marriage you can do it on your test system etc and I don't exactly know how",
    "start": "2061900",
    "end": "2067870"
  },
  {
    "text": "to do it with Geo PC and it's but I know how not to do it because we ended up",
    "start": "2067870",
    "end": "2073480"
  },
  {
    "text": "with a system that I'm not a huge fan of and what we did is basically on your PC",
    "start": "2073480",
    "end": "2078940"
  },
  {
    "text": "you create all those trucks right and obviously those trucks are used to communicate between micro services so",
    "start": "2078940",
    "end": "2084310"
  },
  {
    "text": "they have to be shared so we created this repository with all those structs that everyone has dependency on so they",
    "start": "2084310",
    "end": "2091570"
  },
  {
    "text": "can share it now imagine that you go to that repository which remember does not really have code it only has structs",
    "start": "2091570",
    "end": "2097900"
  },
  {
    "text": "which means that it doesn't really have tests and you make a change and okay you",
    "start": "2097900",
    "end": "2103810"
  },
  {
    "text": "change it and you need it in your service so you go to your service you bump up the version so now you depend on",
    "start": "2103810",
    "end": "2108910"
  },
  {
    "text": "the new version of that request everything works fantastic now I want to",
    "start": "2108910",
    "end": "2115480"
  },
  {
    "text": "make a change I go in I make a change in my own a struct but when I go in",
    "start": "2115480",
    "end": "2121040"
  },
  {
    "text": "version my service also gets your changes so now I have a new version of two different structs and my tests could",
    "start": "2121040",
    "end": "2129890"
  },
  {
    "text": "still fail with the new version even though I haven't touched it it works for you but we both have dependency on that",
    "start": "2129890",
    "end": "2136820"
  },
  {
    "text": "struct and only your tests ran after you may make the change not my tests so it",
    "start": "2136820",
    "end": "2143180"
  },
  {
    "text": "looks like if we have this repository of structs and someone makes a change we actually have to bump up the version",
    "start": "2143180",
    "end": "2149030"
  },
  {
    "text": "across the entire universe and run tests across the entire universe which makes me think the time all the way back in my",
    "start": "2149030",
    "end": "2155360"
  },
  {
    "text": "distributed model it again which is not where I wanted to be and so we're truly still trying to make sense of it and I'm",
    "start": "2155360",
    "end": "2162800"
  },
  {
    "text": "a bigger fan of event-driven and those easy to validate neck you have a schema repository and can validate changes",
    "start": "2162800",
    "end": "2169340"
  },
  {
    "text": "within the schema repository itself which is something I haven't found anything that allows me to validate",
    "start": "2169340",
    "end": "2175550"
  },
  {
    "text": "automate automate compatibility validations of ERP C changes which is",
    "start": "2175550",
    "end": "2180620"
  },
  {
    "text": "what I really really want in life so we solved some problems we created some",
    "start": "2180620",
    "end": "2186980"
  },
  {
    "start": "2183000",
    "end": "2206000"
  },
  {
    "text": "problems but then we discovered that the really big problem is that running services is not very easy the plumbing",
    "start": "2186980",
    "end": "2194540"
  },
  {
    "text": "services the monitoring them making sure that you have enough capacity in making sure your scale all this takes a lot of",
    "start": "2194540",
    "end": "2200990"
  },
  {
    "text": "time and a lot of effort and we started thinking that maybe we can do better with that as well so we end up with",
    "start": "2200990",
    "end": "2207020"
  },
  {
    "start": "2206000",
    "end": "2247000"
  },
  {
    "text": "service if you lived under a rock for the last year to a server less is",
    "start": "2207020",
    "end": "2212690"
  },
  {
    "text": "incredibly popular function as a service AWS lambda there was talk earlier about",
    "start": "2212690",
    "end": "2218140"
  },
  {
    "text": "similar things from Microsoft the idea is that you just write your function the",
    "start": "2218140",
    "end": "2223610"
  },
  {
    "text": "function has one main method which is handle event so the only thing is that",
    "start": "2223610",
    "end": "2229310"
  },
  {
    "text": "you get an event and you spit out her response everything else is kind of up to you and you give it to a cloud",
    "start": "2229310",
    "end": "2235010"
  },
  {
    "text": "provider and a cliff someone sends an event the cloud to an endpoint the carbon value is responsible to spin up a",
    "start": "2235010",
    "end": "2241430"
  },
  {
    "text": "VM start a function and run it for you that's already quite useful it gets better because if nobody sends an event",
    "start": "2241430",
    "end": "2248690"
  },
  {
    "start": "2247000",
    "end": "2267000"
  },
  {
    "text": "this is not running and note this you are not paying for it",
    "start": "2248690",
    "end": "2253710"
  },
  {
    "text": "in the old way I had a microservice and whether or not it handled events I still had to pay for the fact that it's running on a machine this one",
    "start": "2253710",
    "end": "2260430"
  },
  {
    "text": "if there is no events you don't pay which is a really big improvement and everyone really likes that the other big",
    "start": "2260430",
    "end": "2268050"
  },
  {
    "start": "2267000",
    "end": "2303000"
  },
  {
    "text": "thing is that sometimes I have a lot of events and I don't have to know about it in advance and I don't have to plan and",
    "start": "2268050",
    "end": "2273119"
  },
  {
    "text": "I don't have to do capacity planning which is really cool I just have to open my wallet that's the only condition",
    "start": "2273119",
    "end": "2278540"
  },
  {
    "text": "basically cloud provider makes money when you handle events it does not make money if you are rate limited and cannot",
    "start": "2278540",
    "end": "2285390"
  },
  {
    "text": "handle events so they have every interest in making sure you can scale immediately far and wide to handle every",
    "start": "2285390",
    "end": "2291960"
  },
  {
    "text": "single event that comes your way and they mostly do a fantastic job at that so and give them that so this is a very",
    "start": "2291960",
    "end": "2299040"
  },
  {
    "text": "very nice and easy way to scale simple micro services it also kind of matches",
    "start": "2299040",
    "end": "2304920"
  },
  {
    "start": "2303000",
    "end": "2327000"
  },
  {
    "text": "some of the very simple event-driven patterns where you kind of get an event you do something to it and you speed",
    "start": "2304920",
    "end": "2311640"
  },
  {
    "text": "back a response the validation service that I kind of mentioned earlier that you get orders and validate them it's",
    "start": "2311640",
    "end": "2317160"
  },
  {
    "text": "kind of like that right you get an order you do some checks and you produce an output so this is really cool there is",
    "start": "2317160",
    "end": "2324330"
  },
  {
    "text": "only really one thing that's missing in my picture which is that we kind of lost",
    "start": "2324330",
    "end": "2330390"
  },
  {
    "text": "the state on the way and I mentioned earlier is that having steak in my micro service is incredibly powerful and we'll",
    "start": "2330390",
    "end": "2337080"
  },
  {
    "text": "miss it when it's gone well it's kind of gone and I kind of miss it so why do I",
    "start": "2337080",
    "end": "2343890"
  },
  {
    "start": "2342000",
    "end": "2375000"
  },
  {
    "text": "miss State so much I miss having state because sometimes my rules are dynamic I",
    "start": "2343890",
    "end": "2349680"
  },
  {
    "text": "cannot hard-code them I have to look them up somewhere sometimes my events contain some of the data that I need an",
    "start": "2349680",
    "end": "2355950"
  },
  {
    "text": "ID but not the rest of the data that they need so I have to look it up somewhere sometimes I have to join",
    "start": "2355950",
    "end": "2361710"
  },
  {
    "text": "multiple events Netflix had a good talk about it earlier in the day and sometimes I just want to aggregate a",
    "start": "2361710",
    "end": "2367380"
  },
  {
    "text": "number of events per second number of orders per second dollars per hour all these kind of things are important so in",
    "start": "2367380",
    "end": "2374730"
  },
  {
    "text": "each state and the way I currently do state is something like that once my",
    "start": "2374730",
    "end": "2380330"
  },
  {
    "start": "2375000",
    "end": "2411000"
  },
  {
    "text": "function is running I call the database I do a select I call the database I do an insert this database is like",
    "start": "2380330",
    "end": "2387099"
  },
  {
    "text": "s3 DynamoDB or all of them are quite popular note that where I'm paying I'm",
    "start": "2387099",
    "end": "2393579"
  },
  {
    "text": "paying for running my function I'm paying for every meaning that my function is up for the memory it's using for the CPU it's using I'm also paying",
    "start": "2393579",
    "end": "2400450"
  },
  {
    "text": "for memory CPU and I hopes on the database side so this is significantly",
    "start": "2400450",
    "end": "2405970"
  },
  {
    "text": "expensive when you try doing it at scale can we do better a bit we can do a bit",
    "start": "2405970",
    "end": "2412420"
  },
  {
    "start": "2411000",
    "end": "2468000"
  },
  {
    "text": "better we can we know our logic and we can say okay it's very likely that if",
    "start": "2412420",
    "end": "2417670"
  },
  {
    "text": "someone checks the status of the order there will be other people who want to check the status for the order I know",
    "start": "2417670",
    "end": "2422710"
  },
  {
    "text": "that when the function is running I have about five minutes period where if I get",
    "start": "2422710",
    "end": "2428410"
  },
  {
    "text": "more events this function instance will be reused so I can actually create a small cache of all the hot orders do one",
    "start": "2428410",
    "end": "2436119"
  },
  {
    "text": "database call get all of them catch them and maybe save on some data calls in the future this is kind of what some people",
    "start": "2436119",
    "end": "2443950"
  },
  {
    "text": "will call an ugly hock and what some finance departments will think is genius depending on exactly where you work",
    "start": "2443950",
    "end": "2450190"
  },
  {
    "text": "but you definitely don't want to do too much of that ideally this will all be hidden from you completely but the",
    "start": "2450190",
    "end": "2458170"
  },
  {
    "text": "things that they really want back is really this shirts a source of events that I could always create my own",
    "start": "2458170",
    "end": "2465130"
  },
  {
    "text": "personal data store from and I really don't have it and I kind of miss it if I",
    "start": "2465130",
    "end": "2470170"
  },
  {
    "text": "had it I could do things like create order just rights events to the stream of events validate orders picks them up",
    "start": "2470170",
    "end": "2476619"
  },
  {
    "text": "populates the local database maybe it also reads rules and inventory from another database into the local database",
    "start": "2476619",
    "end": "2483279"
  },
  {
    "text": "validate stuff locally posts the status and then anyone who wants status scan",
    "start": "2483279",
    "end": "2488349"
  },
  {
    "text": "the status service also has its own small database it can handle locally you can actually do really really cool",
    "start": "2488349",
    "end": "2493900"
  },
  {
    "text": "things if you could have local state in the cloud that is continuously updated by new events and maybe even",
    "start": "2493900",
    "end": "2500079"
  },
  {
    "text": "continuously synced with a longer-term database this would be amazing rumors",
    "start": "2500079",
    "end": "2505749"
  },
  {
    "text": "are that some cloud services are doing it maybe some of you attended a talk about durable function earlier in the",
    "start": "2505749",
    "end": "2511660"
  },
  {
    "text": "days that does some of what we're really looking for it doesn't have great integration with databases though which",
    "start": "2511660",
    "end": "2519130"
  },
  {
    "start": "2518000",
    "end": "2622000"
  },
  {
    "text": "brings us to these things I would really like to see in a service world and one of them is the whole idea",
    "start": "2519130",
    "end": "2525700"
  },
  {
    "text": "of durable functions and Microsoft is doing it apparently in Azure people told me that",
    "start": "2525700",
    "end": "2532750"
  },
  {
    "text": "AWS has something but to be honest I haven't a search and I haven't managed to find anything but as long as it's not",
    "start": "2532750",
    "end": "2539800"
  },
  {
    "text": "the exact same thing in every cloud it will be really hard I think to get a lot",
    "start": "2539800",
    "end": "2545170"
  },
  {
    "text": "of traction people seem to be afraid to implement something that is so deeply",
    "start": "2545170",
    "end": "2550210"
  },
  {
    "text": "coupled with architectures that are only runnable in Azure even if you don't have",
    "start": "2550210",
    "end": "2555310"
  },
  {
    "text": "any immediate plan to run multi cloud which by the way after two years of experience don't if you don't have to",
    "start": "2555310",
    "end": "2561490"
  },
  {
    "text": "don't but if you but you still don't want to be that idea into something that",
    "start": "2561490",
    "end": "2567810"
  },
  {
    "text": "relatively few people are doing and you don't know if it caught on or not so I really want to see this idea of",
    "start": "2567810",
    "end": "2574830"
  },
  {
    "text": "functions we state catching on I want to see them much better integrated with",
    "start": "2574830",
    "end": "2581710"
  },
  {
    "text": "databases because as we said data is a type of events an event is a type of",
    "start": "2581710",
    "end": "2587110"
  },
  {
    "text": "data you can see if flows going back and forward I think that Amazon actually has",
    "start": "2587110",
    "end": "2592870"
  },
  {
    "text": "something that gets events from dynamodb as a kind of function event you could",
    "start": "2592870",
    "end": "2598240"
  },
  {
    "text": "trigger functions based on things that happen in dynamo which is pretty cool and another thing that we really want is",
    "start": "2598240",
    "end": "2603910"
  },
  {
    "text": "really a unified view of current state what is happening in the local data",
    "start": "2603910",
    "end": "2610450"
  },
  {
    "text": "store of every one of my functions and every one of my macro services cannot be able to pull together unified reports",
    "start": "2610450",
    "end": "2616660"
  },
  {
    "text": "where if you have a shared source of events becomes much more tractable so",
    "start": "2616660",
    "end": "2622960"
  },
  {
    "start": "2622000",
    "end": "2897000"
  },
  {
    "text": "that's it I hope I gave you a good overview and some ideas of maybe what",
    "start": "2622960",
    "end": "2628570"
  },
  {
    "text": "one of you could implement in the future",
    "start": "2628570",
    "end": "2632340"
  },
  {
    "text": "thanks Gwen we have five minutes for questions if there's any questions",
    "start": "2641130",
    "end": "2647280"
  },
  {
    "text": "um thank you for the great talk I have a question about the life cycle of like schemas like do you ever deprecated",
    "start": "2651530",
    "end": "2658280"
  },
  {
    "text": "schemas once it's registered yeah that's a fantastic question",
    "start": "2658280",
    "end": "2663860"
  },
  {
    "text": "I can only deprecated schemas if I know for sure that a nobody is using them and",
    "start": "2663860",
    "end": "2671140"
  },
  {
    "text": "these are not stored anywhere so if all of my streams have very short retention",
    "start": "2671140",
    "end": "2678500"
  },
  {
    "text": "policy say 7 days or 30 days and if I know which one of my micro-services is",
    "start": "2678500",
    "end": "2685730"
  },
  {
    "text": "using which schema which I could know because they're all validating it against the registry I can try to track",
    "start": "2685730",
    "end": "2691340"
  },
  {
    "text": "who is talking to the registry and which questions is it asking then I could deprecated schemas currently I'm not",
    "start": "2691340",
    "end": "2698240"
  },
  {
    "text": "doing it all the schemas are kind of cheap in my mind but and again consumers",
    "start": "2698240",
    "end": "2703700"
  },
  {
    "text": "that want to stop supporting them can stop supporting them producers that won't stop producing all the schemas can",
    "start": "2703700",
    "end": "2708710"
  },
  {
    "text": "stop if you maintain compatibility all schemas are quite cheap so I'm not too",
    "start": "2708710",
    "end": "2713810"
  },
  {
    "text": "worried but it's possible if I really have to there ways that I can do it",
    "start": "2713810",
    "end": "2718930"
  },
  {
    "text": "any more questions",
    "start": "2718930",
    "end": "2722559"
  },
  {
    "text": "so you mentioned that we should separate out databases for micro services and in",
    "start": "2727630",
    "end": "2734920"
  },
  {
    "text": "my workplace the problem was that if you separate out the databases you know you have to pay more and they were a little",
    "start": "2734920",
    "end": "2740920"
  },
  {
    "text": "bit hesitant to do that so we sort of compromised with having separate schemas",
    "start": "2740920",
    "end": "2746710"
  },
  {
    "text": "instead of separate databases so what do you think about that yeah this works to",
    "start": "2746710",
    "end": "2756760"
  },
  {
    "text": "an extent I think I mean because even if you separate them to separate schemas",
    "start": "2756760",
    "end": "2763120"
  },
  {
    "text": "your database is still kind of a monolith right everyone is talking to the same database everyone is limited by",
    "start": "2763120",
    "end": "2769000"
  },
  {
    "text": "how much your database can scale if you chose the relational database then everyone has to be relational if you",
    "start": "2769000",
    "end": "2775930"
  },
  {
    "text": "chose some Cassandra everyone has to do Cassandra so I think to an extent it's",
    "start": "2775930",
    "end": "2781660"
  },
  {
    "text": "possible but I think we're going to world the world where engineering teams",
    "start": "2781660",
    "end": "2787870"
  },
  {
    "text": "have good reasons for choosing the databases and the data stores that we choose and the cost of running",
    "start": "2787870",
    "end": "2795730"
  },
  {
    "text": "additional databases is usually lower than the cost of forcing every team to",
    "start": "2795730",
    "end": "2801910"
  },
  {
    "text": "be tied to one big database and also scaling one day big database is not as free as one may want to think we have",
    "start": "2801910",
    "end": "2811390"
  },
  {
    "text": "time for one more question so in the even driven architecture right how do we",
    "start": "2811390",
    "end": "2818170"
  },
  {
    "text": "solve the duplicate message say for example because of evil retry you will get the same message created like for a",
    "start": "2818170",
    "end": "2824290"
  },
  {
    "text": "single order to shipping even message is created how do we solve that in any area on that so there is basically two ways",
    "start": "2824290",
    "end": "2831190"
  },
  {
    "text": "to solve it you either help someone detect duplicates and kingdom up for you which is kind of expensive or you make",
    "start": "2831190",
    "end": "2839050"
  },
  {
    "text": "sure you design your entire event architecture so events are important idempotent events basically means that",
    "start": "2839050",
    "end": "2845800"
  },
  {
    "text": "if you get the same event twice nothing bad happens so this means that the event cannot be a ship an iPod it can be ship",
    "start": "2845800",
    "end": "2854830"
  },
  {
    "text": "a single iPod on this date and no more to this person",
    "start": "2854830",
    "end": "2860870"
  },
  {
    "text": "it cannot be add $50 to an account it can be the account balance in this",
    "start": "2860870",
    "end": "2866990"
  },
  {
    "text": "account is now three hundred and fifty dollars and then if you get two notifications like that it's fine they",
    "start": "2866990",
    "end": "2873320"
  },
  {
    "text": "basically act exactly like their one so either you figure out a good way to do it and a lot of places figure out",
    "start": "2873320",
    "end": "2880220"
  },
  {
    "text": "good ways to do it because it's so much more efficient than having a service that kind of tries to figure out what to",
    "start": "2880220",
    "end": "2885830"
  },
  {
    "text": "duplicate and cleans it up okay that's the end of our talks and the micro",
    "start": "2885830",
    "end": "2892430"
  },
  {
    "text": "services track let's thank one again [Applause]",
    "start": "2892430",
    "end": "2898820"
  }
]