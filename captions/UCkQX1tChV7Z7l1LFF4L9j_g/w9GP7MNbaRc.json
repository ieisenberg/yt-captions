[
  {
    "text": "hi uh thanks for thanks so much for having me um my name is denise this is the talk why our distributed system's so hard",
    "start": "4640",
    "end": "10960"
  },
  {
    "text": "if you're in this room by accident you have a few more minutes to shuffle out and find the talk that you're meant to be seeing",
    "start": "10960",
    "end": "16320"
  },
  {
    "text": "um but i actually want to start off oh we're actually a few minutes early okay that's right i kind of run dangerously close to time",
    "start": "16320",
    "end": "22320"
  },
  {
    "text": "anyway so i'll just start um so i actually want to start by launching into a meta discussion",
    "start": "22320",
    "end": "27760"
  },
  {
    "text": "which is why should we even bother learning about distributed computing in the year 2020",
    "start": "27760",
    "end": "33360"
  },
  {
    "text": "after all we've all been using the cloud for a couple of years many of us are using open source orchestration tools like kubernetes for",
    "start": "33360",
    "end": "39440"
  },
  {
    "text": "example to manage our services for us so the question remains why worry about distributed systems theory and history",
    "start": "39440",
    "end": "46800"
  },
  {
    "text": "in 2020 when we arguably have tools that might do our jobs better than we can",
    "start": "46800",
    "end": "52960"
  },
  {
    "text": "because after all we've known for a very very long time how to run services and isn't it the",
    "start": "52960",
    "end": "59199"
  },
  {
    "text": "case that microservices are just smaller versions of services",
    "start": "59199",
    "end": "64799"
  },
  {
    "text": "so why why pursue this type of architecture why pursue smaller decomposed decoupled services",
    "start": "64799",
    "end": "71439"
  },
  {
    "text": "i generally think that microservice architecture is motivated by a set of socio-technical goals among those goals are perhaps you want",
    "start": "71439",
    "end": "78320"
  },
  {
    "text": "to make your engineering team boundaries reflect the boundaries of your business domains for example if you work for an",
    "start": "78320",
    "end": "83680"
  },
  {
    "text": "e-commerce company rather than having all your front-end people over there and all your database administrators over here",
    "start": "83680",
    "end": "89040"
  },
  {
    "text": "you might instead build cross-functional integrated teams so that they all work on maybe maybe some of them work on payments",
    "start": "89040",
    "end": "94799"
  },
  {
    "text": "maybe some of them work on search and so on and so forth but why do you want to do this",
    "start": "94799",
    "end": "100560"
  },
  {
    "text": "well if you can decouple your engineering teams to look like your business boundaries maybe that means that you enable these",
    "start": "100560",
    "end": "106720"
  },
  {
    "text": "teams to release and deploy more frequently and more independently so the payments team",
    "start": "106720",
    "end": "111920"
  },
  {
    "text": "might not be blocked on a feature that the search team has to merge into trunk before you ship right so continuous delivery like higher",
    "start": "111920",
    "end": "118479"
  },
  {
    "text": "frequency higher higher more rapid deploys all these are good things but why care about that so i think like the",
    "start": "118479",
    "end": "126159"
  },
  {
    "text": "pursuit of these goals supports the overarching goal that we ultimately want to improve the resiliency of critical systems that we",
    "start": "126159",
    "end": "132959"
  },
  {
    "text": "need for our businesses to run we want to protect these systems against catastrophic and show-stopping events there's a lot",
    "start": "132959",
    "end": "140080"
  },
  {
    "text": "of cat pictures in this deck you've been warned because after all like we've had microservices for a",
    "start": "140080",
    "end": "146239"
  },
  {
    "text": "couple years now after all we know that if we're doing microservices we can make a change to one microservice",
    "start": "146239",
    "end": "153440"
  },
  {
    "text": "without having to change any others right okay i'm just gonna",
    "start": "153440",
    "end": "160400"
  },
  {
    "text": "say that take that as a yes so but i'm not gonna stand here and preach the converted i'm not gonna spend the rest",
    "start": "160400",
    "end": "165440"
  },
  {
    "text": "of this talk rattling off a list of why microservices might be good they might be useful in the right context i'm going to presume that you're all",
    "start": "165440",
    "end": "171440"
  },
  {
    "text": "here because you've at least heard of microservices before maybe you've used them maybe you're here",
    "start": "171440",
    "end": "176480"
  },
  {
    "text": "because you have a healthy skepticism towards them that's all fine but the thing is that everybody",
    "start": "176480",
    "end": "182400"
  },
  {
    "text": "every team who runs microservices is now at the helm of a large distributed system and how",
    "start": "182400",
    "end": "188080"
  },
  {
    "text": "large of course is going to depend on the specifics of your business so it's almost like",
    "start": "188080",
    "end": "193280"
  },
  {
    "text": "a law and talks about microservices you need to have one slide that shows somebody else's architecture",
    "start": "193280",
    "end": "199280"
  },
  {
    "text": "and that's this is my slide for that so monzo is a bank here great company fantastic people i love them to death",
    "start": "199280",
    "end": "206080"
  },
  {
    "text": "um monzo hit 1 500 micro services at the end of last year so this diagram",
    "start": "206080",
    "end": "212799"
  },
  {
    "text": "shows all of their networking rules that govern how one service talks to all the other services in the system but",
    "start": "212799",
    "end": "218799"
  },
  {
    "text": "even if your architecture doesn't look like this yet maybe the truth is that the specific",
    "start": "218799",
    "end": "225120"
  },
  {
    "text": "technologies that we use to manage and deploy and orchestrate these systems will come and go",
    "start": "225120",
    "end": "230720"
  },
  {
    "text": "and technology trends honestly are really fickle just like my cat's dietary habits",
    "start": "230720",
    "end": "237280"
  },
  {
    "text": "but the fundamental principles for designing and operating services on top of distributed systems",
    "start": "237280",
    "end": "243439"
  },
  {
    "text": "haven't changed that much in the last few decades and understanding the fundamentals taking",
    "start": "243439",
    "end": "249439"
  },
  {
    "text": "some time to learn this stuff and to internalize it is the best way to future proof the systems that we're building today",
    "start": "249439",
    "end": "257199"
  },
  {
    "text": "and beyond that i honestly think that just learning about distributed systems is really rewarding and it's really fun",
    "start": "257199",
    "end": "263040"
  },
  {
    "text": "so i hope that in the next 45 minutes and 35 seconds if nothing else you'll have fun like i hope that you'll",
    "start": "263040",
    "end": "268880"
  },
  {
    "text": "laugh at least once i hope you'll enjoy the cat pictures i found it really fun to learn about this stuff and i hope you will too",
    "start": "268880",
    "end": "275199"
  },
  {
    "text": "so by way of introduction my name's denise that's my twitter that's the wrong hashtag is actually",
    "start": "275199",
    "end": "280320"
  },
  {
    "text": "qconlondon so for accessibility reasons i actually like to upload my slides 100 online before my talk starts so you",
    "start": "280320",
    "end": "287680"
  },
  {
    "text": "can access them right now if you go to deniseo.ioslash qcon i grant you permission to take pictures",
    "start": "287680",
    "end": "293520"
  },
  {
    "text": "like live tweet whatever it is that you want to do if you want to use the highest resolution pictures they are on there",
    "start": "293520",
    "end": "298560"
  },
  {
    "text": "not the ones you're snapping on your phone so i'm a senior engineer at github i",
    "start": "298560",
    "end": "303759"
  },
  {
    "text": "work on the community and safety team broadly my team builds tools to make github a more productive and safer place",
    "start": "303759",
    "end": "309280"
  },
  {
    "text": "to build communities i actually haven't started yet so if you have specific questions about the team i'll direct you to my future colleagues",
    "start": "309280",
    "end": "315039"
  },
  {
    "text": "after um i'm based in toronto go leaps any other canadians here",
    "start": "315039",
    "end": "320800"
  },
  {
    "text": "okay there's like four of us yes actually i'm not canadian i'm american but i",
    "start": "320800",
    "end": "326000"
  },
  {
    "text": "lived here for five years so uh it's really fun to be back um and finally when i'm not on stage rambling",
    "start": "326000",
    "end": "331600"
  },
  {
    "text": "about cats and distributed systems i spend my time making art about tech that bridges gaps in understanding",
    "start": "331600",
    "end": "337199"
  },
  {
    "text": "so feel free to check it out later if you want a lot of the images in this talk are borrowed from a book that i'm",
    "start": "337199",
    "end": "342960"
  },
  {
    "text": "co-authoring with my friend steve smith so if you have any nephews or nieces or children in your life who are going to",
    "start": "342960",
    "end": "348240"
  },
  {
    "text": "be writing enterprise software please consider buying them my book",
    "start": "348240",
    "end": "354320"
  },
  {
    "text": "so let's go on a journey together today so broadly we're going to cover a few big topic areas we're going to talk",
    "start": "354320",
    "end": "359440"
  },
  {
    "text": "about why distributed systems why distributed computing is even a thing we're going to do a recap if you study",
    "start": "359440",
    "end": "365360"
  },
  {
    "text": "distribute assistance theory before you might know that already if not don't worry you'll know by the end we're going to talk a lot about networks",
    "start": "365360",
    "end": "370639"
  },
  {
    "text": "and partial failures and then we're going to close out by talking about the human side of things so sociotechnical mitigations and how the",
    "start": "370639",
    "end": "377759"
  },
  {
    "text": "human part of system is the most adaptive but possibly the most complex part of it so history lesson time how did this all",
    "start": "377759",
    "end": "385199"
  },
  {
    "text": "happen how do we get to where we are today a long time ago in a data center not too",
    "start": "385199",
    "end": "390720"
  },
  {
    "text": "far away maybe some of you know where from your own experiences where this data center is all your business",
    "start": "390720",
    "end": "396240"
  },
  {
    "text": "applications tended to be structured like this so client server architecture you had multiple applications they all read and write from the same",
    "start": "396240",
    "end": "402240"
  },
  {
    "text": "database that one database like one database was probably hosted on some machine that was in a server room",
    "start": "402240",
    "end": "408400"
  },
  {
    "text": "with no windows in the basement of your building and this worked for quite a long time",
    "start": "408400",
    "end": "415039"
  },
  {
    "text": "it worked because it was just sort of a necessary evil it was a cost center that we needed to support so that other",
    "start": "415039",
    "end": "420240"
  },
  {
    "text": "people could go and do the real money making operations but this stopped being true at some point in the 90s when computers",
    "start": "420240",
    "end": "426960"
  },
  {
    "text": "stopped being this cost center for a lot of companies i mean there's that famous mark in recent quote about",
    "start": "426960",
    "end": "432080"
  },
  {
    "text": "how software is eating the world but like at some point in the 90s computers actually started being",
    "start": "432080",
    "end": "438000"
  },
  {
    "text": "business differentiators and competitive advantages which meant that we had to start taking our it functions a lot more",
    "start": "438000",
    "end": "443440"
  },
  {
    "text": "seriously and of course the core value for a lot of businesses then and for a lot of businesses today",
    "start": "443440",
    "end": "449520"
  },
  {
    "text": "is customer data so we as an industry have always needed better ways to read and write to store and retrieve our",
    "start": "449520",
    "end": "456319"
  },
  {
    "text": "customers data so as it became a differentiator the way that we stored and retrieved our data of course evolved",
    "start": "456319",
    "end": "462080"
  },
  {
    "text": "so today it's usually not like i don't want to say it doesn't work for anybody but for most companies it's not sufficient",
    "start": "462080",
    "end": "467680"
  },
  {
    "text": "to just have your one massive database on one server on your in your basement anymore why though so one one sort of pusher",
    "start": "467680",
    "end": "475199"
  },
  {
    "text": "here was that data-driven business analysis is increasingly important and you know business analysts and",
    "start": "475199",
    "end": "480479"
  },
  {
    "text": "product managers want to run expensive sql queries so they can make informed decisions about business also",
    "start": "480479",
    "end": "486720"
  },
  {
    "text": "things like uh machine learning artificial intelligence natural language processing created a new set of requirements for",
    "start": "486720",
    "end": "492479"
  },
  {
    "text": "how we interact with our data and the truth is that we just have more data than we've ever had before in human",
    "start": "492479",
    "end": "498240"
  },
  {
    "text": "history and that statement will always be true which is why i like saying it so you have intermediate layers like key",
    "start": "498240",
    "end": "504160"
  },
  {
    "text": "value caches and things like that that help us to speed up data retrieval in a lot of different circumstances but",
    "start": "504160",
    "end": "509280"
  },
  {
    "text": "this means our data is more distributed than it used to be so the first thing we did was we scaled vertically which means to just bolt more",
    "start": "509280",
    "end": "515919"
  },
  {
    "text": "compute power onto the machines that you already have and this worked for a while until it",
    "start": "515919",
    "end": "521360"
  },
  {
    "text": "went through a degree but at some point it no longer made financial sense for a lot of companies to add that last one percent and so this",
    "start": "521360",
    "end": "527120"
  },
  {
    "text": "is sort of like unit economics the the cost of the margin was more than it was more than the value that it granted to companies",
    "start": "527120",
    "end": "533760"
  },
  {
    "text": "but even if you had really deep pockets and you're like i want all the cpu like just give me all of it",
    "start": "533760",
    "end": "538880"
  },
  {
    "text": "at some point you actually hit the current limits of hardware engineering what do i mean by that so the physical limits of hardware",
    "start": "538880",
    "end": "545200"
  },
  {
    "text": "engineering moore's law is like the most common way to think of it moore's law states that roughly every",
    "start": "545200",
    "end": "550720"
  },
  {
    "text": "two years the number of transistors on an integrated circuit chippewa doubles which basically means that processing power doubles just like the",
    "start": "550720",
    "end": "557120"
  },
  {
    "text": "size of my kitten in the first two years of his life um and like i know that moore's law is becoming less and less true these days",
    "start": "557120",
    "end": "563279"
  },
  {
    "text": "but historically speaking this has been a pretty good way to track uh the increase increased processing power",
    "start": "563279",
    "end": "569200"
  },
  {
    "text": "so lucky for us in the early 2000s came along cloud computing solutions so of course",
    "start": "569200",
    "end": "574560"
  },
  {
    "text": "we know and love amazon web services google cloud microsoft azure but you also have like if you you know",
    "start": "574560",
    "end": "580640"
  },
  {
    "text": "like need to store your data on premises there are uh solutions that you can roll out over your existing hardware like",
    "start": "580640",
    "end": "586240"
  },
  {
    "text": "vsphere or vmware i think is one of the most well known options not the only one but you can take your own hardware and",
    "start": "586240",
    "end": "591360"
  },
  {
    "text": "make it behave like a cloud so cloud computing gave us an easy way to provision new machines in an",
    "start": "591360",
    "end": "597120"
  },
  {
    "text": "on-demand fashion like you get it just in time just when you need to scale up which means that we are no longer constrained",
    "start": "597120",
    "end": "603200"
  },
  {
    "text": "by the verticals by the limits of vertical scaling because now we can do this thing called horizontal scaling which means you can",
    "start": "603200",
    "end": "609279"
  },
  {
    "text": "take a workload and you can distribute it over multiple machines now so why my teams want to leverage this",
    "start": "609279",
    "end": "616560"
  },
  {
    "text": "ability to horizontally distribute the first reason is scalability which means that sometimes you have",
    "start": "616560",
    "end": "622560"
  },
  {
    "text": "a machine that can't handle the volume of data you're looking to store or maybe the request sizes are too big so one solution is to split that data",
    "start": "622560",
    "end": "629040"
  },
  {
    "text": "into multiple chunks by some index kind of like an encyclopedia like you don't have volumes of encyclopedias that",
    "start": "629040",
    "end": "634240"
  },
  {
    "text": "are like one book that's four feet long you encyclopedias are real-life examples of sharding where you break it into",
    "start": "634240",
    "end": "639680"
  },
  {
    "text": "multiple volumes by first letter so another reason is availability if you're operating with multiple machines",
    "start": "639680",
    "end": "646000"
  },
  {
    "text": "it means that you gain the ability to have multiple copies of your data stored in different locations so by having your data served up by more",
    "start": "646000",
    "end": "652560"
  },
  {
    "text": "than one machine we build redundancy into our systems and the final reason is latency",
    "start": "652560",
    "end": "658399"
  },
  {
    "text": "so if you can store your data physically closer to where your end users are going to be requesting it from it means that data has to travel over",
    "start": "658399",
    "end": "665839"
  },
  {
    "text": "like pulses have to travel over less less cable but request times are going to be faster",
    "start": "665839",
    "end": "671760"
  },
  {
    "text": "so now i want to spend a little bit of time talking about modern distributed systems so you may have come across the term",
    "start": "671760",
    "end": "677600"
  },
  {
    "text": "shared nothing architecture before it's okay if you haven't but this is the most popular form of network computing",
    "start": "677600",
    "end": "683440"
  },
  {
    "text": "and it basically means that different processes on the same machine don't share access to physical resources",
    "start": "683440",
    "end": "690399"
  },
  {
    "text": "so they don't share in like memory they don't share cpu they don't share devices",
    "start": "690399",
    "end": "695440"
  },
  {
    "text": "honestly like honestly this is a really reasonable and sensible design even if it makes life a little harder for",
    "start": "695440",
    "end": "700959"
  },
  {
    "text": "lazy programmers like myself who are like oh just give me the pointer all the time like no don't that's actually bad so in",
    "start": "700959",
    "end": "707200"
  },
  {
    "text": "fact it's so sensible that the idea of process-based memory isolation is baked into some programming languages",
    "start": "707200",
    "end": "712399"
  },
  {
    "text": "by default in the go programming language for example rob pike who's one of the biggest contributors to the language",
    "start": "712399",
    "end": "718320"
  },
  {
    "text": "said don't communicate memory by sharing share memory by communicating which",
    "start": "718320",
    "end": "723360"
  },
  {
    "text": "basically means have your processes send messages to each other don't let them arbitrarily read and write to the same locations on",
    "start": "723360",
    "end": "729279"
  },
  {
    "text": "memory that are currently being accessed by other processes so let's zoom out for a second what does",
    "start": "729279",
    "end": "734959"
  },
  {
    "text": "it actually mean to run a distributed system today today i think it's pretty clear to most",
    "start": "734959",
    "end": "741200"
  },
  {
    "text": "people in this room either through some intuition or things that you've run or read about in the past that building",
    "start": "741200",
    "end": "746720"
  },
  {
    "text": "and operating a distributed system is a fundamentally different ball game than building a system where everything",
    "start": "746720",
    "end": "752560"
  },
  {
    "text": "is function calls on the same host in the same process space but this intuition and this insight wasn't always",
    "start": "752560",
    "end": "758959"
  },
  {
    "text": "super obvious one of the earliest discussions about how distributed computing works",
    "start": "758959",
    "end": "764399"
  },
  {
    "text": "um about like the fundamental difference here is the classic 1994 paper called a note on distributed computing by jim",
    "start": "764399",
    "end": "771040"
  },
  {
    "text": "waldo jeff wyatt and wool wrath and sam kendall who all work together at sun microsystems",
    "start": "771040",
    "end": "776880"
  },
  {
    "text": "this paper is really neat it's like a blast of the past because in 1994 nobody was building",
    "start": "776880",
    "end": "782800"
  },
  {
    "text": "distributed systems at the scale that we see and take for granted today so a lot of people at that point were just kind of like still hand waving and",
    "start": "782800",
    "end": "789519"
  },
  {
    "text": "still theorizing about what these systems will look like and people were asking maybe hardware engineering will just solve our problems for us by the time we",
    "start": "789519",
    "end": "796160"
  },
  {
    "text": "need to build those systems spoiler it didn't probably never going to",
    "start": "796160",
    "end": "802480"
  },
  {
    "text": "so this paper is really worth reading in its entirety if you're interested in this kind of stuff but i'll try to summarize it briefly for",
    "start": "802480",
    "end": "808160"
  },
  {
    "text": "you here so in this paper they identify three reasons that distributed computing is a fundamentally different",
    "start": "808160",
    "end": "814000"
  },
  {
    "text": "beast than local computing the first is latency which means the difference between processor speed and network speed",
    "start": "814000",
    "end": "819680"
  },
  {
    "text": "memory access so this idea of like accessing pointers and locations and partial failures i would say that of",
    "start": "819680",
    "end": "825839"
  },
  {
    "text": "these three memory access has been the one that turned out not to be so much of a show stopper because let's think back to our earlier discussion about",
    "start": "825839",
    "end": "831920"
  },
  {
    "text": "shared nothing architecture but of course like latency has been addressed a little bit by being able to replicate",
    "start": "831920",
    "end": "837360"
  },
  {
    "text": "data you can reduce that delta a little bit but of course like not a totally solved problem and partial failures is the thing we're",
    "start": "837360",
    "end": "844079"
  },
  {
    "text": "going to dig into the most throughout this talk so according to martin klutman like i think a good",
    "start": "844079",
    "end": "849519"
  },
  {
    "text": "summary of these challenges is modern distributed systems look like this you have a lot of different machines",
    "start": "849519",
    "end": "855120"
  },
  {
    "text": "they're running different processes and they only have message passing via unreliable networks with variable delays and the system may",
    "start": "855120",
    "end": "861680"
  },
  {
    "text": "suffer from a host of partial failures unreliable clocks and process pauses",
    "start": "861680",
    "end": "868079"
  },
  {
    "text": "so distributed computing is really hard to reason about we've known this since the early 90s we've probably always known this since",
    "start": "868079",
    "end": "874639"
  },
  {
    "text": "like you know this was on the radar people building building computer-based systems in the 90s a different group of people",
    "start": "874639",
    "end": "880800"
  },
  {
    "text": "at sun microsystems came up with so originally it was seven but number eight was added by the java guy james",
    "start": "880800",
    "end": "886800"
  },
  {
    "text": "gosling later on but eight fallacies of distributed computing so to quickly run through them",
    "start": "886800",
    "end": "891839"
  },
  {
    "text": "we know today that networks are not reliable we know today that latency is not zero that bandwidth is",
    "start": "891839",
    "end": "897120"
  },
  {
    "text": "not infinite of course that the network cannot be assumed to be secure that topology",
    "start": "897120",
    "end": "902320"
  },
  {
    "text": "should be assumed like we should assume that that will change we know that there's usually not one administrator sometimes there's no administrator",
    "start": "902320",
    "end": "908240"
  },
  {
    "text": "sometimes we're all the administrator if you don't secure your systems sometimes like we know that transport costs are not zero and",
    "start": "908240",
    "end": "914800"
  },
  {
    "text": "these days with more and more different devices that are connecting to the internet we know that networks are not homogeneous so we're going to dig into",
    "start": "914800",
    "end": "922160"
  },
  {
    "text": "this one the most although all of them are worth discussing but i only have so much time in this talk pretty dangerously close to it so when i",
    "start": "922160",
    "end": "929600"
  },
  {
    "text": "was learning about this kind of about distributed computing i kind of felt like every new paper i read fenced off a",
    "start": "929600",
    "end": "934800"
  },
  {
    "text": "whole category of things that i wasn't supposed to believe in and i wasn't supposed to assume to be true and i kind of felt at",
    "start": "934800",
    "end": "940000"
  },
  {
    "text": "multiple times like wow there's so much unreliability there are so many things that are like conditionally true if other if a very",
    "start": "940000",
    "end": "946160"
  },
  {
    "text": "specific like you know very specific things are true so how can we know what's even true about the state of the",
    "start": "946160",
    "end": "952000"
  },
  {
    "text": "world when we're starting to you know start start out with learning and building distributed systems",
    "start": "952000",
    "end": "957680"
  },
  {
    "text": "so this actually brought me back so i studied philosophy in undergrad and i like never thought that i would be talking about my philosophy degree at a",
    "start": "957680",
    "end": "964160"
  },
  {
    "text": "tech conference but here we are um so i actually thought this is actually an epistemology problem",
    "start": "964160",
    "end": "969199"
  },
  {
    "text": "like it almost sounds like an epistemology problem and epistemology is the philosophical study of knowledge",
    "start": "969199",
    "end": "974720"
  },
  {
    "text": "it's a it's a branch of philosophy that asks the question so we we think we know some things but how do i really know",
    "start": "974720",
    "end": "981120"
  },
  {
    "text": "that i'm in london speaking of qcon standing on a stage like how do i know that like this is not just an illusion",
    "start": "981120",
    "end": "987199"
  },
  {
    "text": "and broadly within epistemic philosophy you have two main schools we have foundationalism which says that",
    "start": "987199",
    "end": "992560"
  },
  {
    "text": "there are fundamental truths about the universe kind of like how their first principles in mathematics and everything else is built on them or",
    "start": "992560",
    "end": "999199"
  },
  {
    "text": "you have coherentism the second school which says that nothing is absolutely true on its own but when we have enough other",
    "start": "999199",
    "end": "1004880"
  },
  {
    "text": "interlocking and reinforcing truths they kind of support each other kind of like matchsticks can't stand on their",
    "start": "1004880",
    "end": "1010079"
  },
  {
    "text": "own so in distributed systems reasoning regardless of which school of epistemology you subscribe to",
    "start": "1010079",
    "end": "1015600"
  },
  {
    "text": "it's pretty hard to start to define you know the basic building blocks of truth and of course what if we're all just",
    "start": "1015600",
    "end": "1020959"
  },
  {
    "text": "brains and vats and nothing is real uh skeptics by the way were like they don't you won't find this in philosophy",
    "start": "1020959",
    "end": "1027038"
  },
  {
    "text": "textbooks but they actually were the world's first internet trolls fun fact so on top of that",
    "start": "1027039",
    "end": "1033520"
  },
  {
    "text": "uh so let's go back to message passing for a second unreliable message delivery is totally a thing so another thing in",
    "start": "1033520",
    "end": "1039280"
  },
  {
    "text": "like the category of unreliable like uncertainty uh uncertainties so the classic case that people talk about is the byzantine",
    "start": "1039280",
    "end": "1045438"
  },
  {
    "text": "generals problem so imagine like the thought experiment goes imagine two generals they're trying to coordinate a war",
    "start": "1045439",
    "end": "1050720"
  },
  {
    "text": "but they can't communicate directly so they rely on this little unreliable messenger guy to vary messages between the two but the",
    "start": "1050720",
    "end": "1057520"
  },
  {
    "text": "whole time they can't know for certainty they can't know for certain whether the message actually even came from the other general",
    "start": "1057520",
    "end": "1063200"
  },
  {
    "text": "whether it was manipulated in flight whether it was delivered to some wrong place altogether",
    "start": "1063200",
    "end": "1068400"
  },
  {
    "text": "so this is kind of silly but this principle actually happens all the time when you're building distributed systems",
    "start": "1068400",
    "end": "1074160"
  },
  {
    "text": "so we have of course like some some tools some technical mitigations like we have tools to",
    "start": "1074160",
    "end": "1079360"
  },
  {
    "text": "verify the validity of the sender for example but we always have to be thinking about things like spoofing and messages being dropped",
    "start": "1079360",
    "end": "1085840"
  },
  {
    "text": "and messages that get corrupted in flight of course we can mitigate a lot of these",
    "start": "1085840",
    "end": "1091120"
  },
  {
    "text": "things by doing a good job of monitoring and observing and tracing our systems but this is not a talk on any of those",
    "start": "1091120",
    "end": "1097120"
  },
  {
    "text": "things today i can refer you to other people who can talk about these topics more so there are a lot of things that we're",
    "start": "1097120",
    "end": "1102960"
  },
  {
    "text": "just never going to be able to know but we can we can be certain of one thing",
    "start": "1102960",
    "end": "1109280"
  },
  {
    "text": "shit's gonna fail which brings us to the next chapter of this talk",
    "start": "1109280",
    "end": "1114320"
  },
  {
    "text": "the cap theorem so the cap theorem debuted dropped whatever in the year",
    "start": "1114320",
    "end": "1121520"
  },
  {
    "text": "2000 when dr eric brewer from google gave a talk at the principles of computing conference called towards robust",
    "start": "1121520",
    "end": "1127200"
  },
  {
    "text": "distributed systems and in the time since a lot of people on the internet like to write about the cap",
    "start": "1127200",
    "end": "1132799"
  },
  {
    "text": "theorem like this they're like here are three things you can have two of them like you can choose any two you can just throw the third one",
    "start": "1132799",
    "end": "1138480"
  },
  {
    "text": "away but that doesn't really make sense actually um that's wrong it's not possible to design a",
    "start": "1138480",
    "end": "1143919"
  },
  {
    "text": "distributed system that way these things there are a lot of different alternative frameworks the cap",
    "start": "1143919",
    "end": "1149280"
  },
  {
    "text": "cap is not the only way to think about the trade-offs for distributed assistance design but you should at least think about it like this",
    "start": "1149280",
    "end": "1155520"
  },
  {
    "text": "with partition tolerance being the constant that we sort of trade off against on either side of the reason why is you",
    "start": "1155520",
    "end": "1161280"
  },
  {
    "text": "can't sacrifice partition tolerance like that statement doesn't even really make sense i'll talk about this a lot more soon but",
    "start": "1161280",
    "end": "1167360"
  },
  {
    "text": "even if you're running a distributed system within one data center even in like one physical host even",
    "start": "1167360",
    "end": "1173280"
  },
  {
    "text": "you can't 100 immunize yourself against network partitions or partition events",
    "start": "1173280",
    "end": "1178799"
  },
  {
    "text": "literally the only way you could 100 prevent the possibility of a partition is to only have one node which at which",
    "start": "1178799",
    "end": "1184880"
  },
  {
    "text": "point you're definitionally not running a distributed system and brewer himself has talked about this",
    "start": "1184880",
    "end": "1190480"
  },
  {
    "text": "in a um in this update uh the cap 12 years later in 2012 so he acknowledges that um as",
    "start": "1190480",
    "end": "1198000"
  },
  {
    "text": "some researchers point out exactly what it means to forfeit p partition tolerance is unclear",
    "start": "1198000",
    "end": "1203360"
  },
  {
    "text": "so i realize i haven't actually gone through each letter yet so let's let's do that let's get a",
    "start": "1203360",
    "end": "1208480"
  },
  {
    "text": "little bit deeper into each part of cap c is 4 anyone know",
    "start": "1208480",
    "end": "1214158"
  },
  {
    "text": "c is for linearizability you're all wrong it's funny because it doesn't begin with",
    "start": "1215039",
    "end": "1220400"
  },
  {
    "text": "c um so what does this mean so linearizability is a super narrow form",
    "start": "1220400",
    "end": "1226000"
  },
  {
    "text": "of consistency it means that and the the word you'll encounter in the literature is register it means you have an operation to a",
    "start": "1226000",
    "end": "1232000"
  },
  {
    "text": "register update which you can think of that as like one row in a database it can only have one value at any given point in time right",
    "start": "1232000",
    "end": "1237520"
  },
  {
    "text": "so imagine you have a register update where from time zero which is before time one the cat's state changes from hungry to",
    "start": "1237520",
    "end": "1244159"
  },
  {
    "text": "full so under linearizability this means that if any single client saw that the cat is",
    "start": "1244159",
    "end": "1250720"
  },
  {
    "text": "full from now on all nodes in the cluster have to return that the cat is full you're not allowed to show to any client that the cat is",
    "start": "1250720",
    "end": "1257039"
  },
  {
    "text": "hungry anymore this is really really hard this is like ridiculously hard probably impossible",
    "start": "1257039",
    "end": "1262559"
  },
  {
    "text": "actually this is a super strong sense of the word consistency because it basically demands instant and universal replication but",
    "start": "1262559",
    "end": "1269440"
  },
  {
    "text": "replication can't really be zero like we know that there's always going to be replication lag you at least need like the speed of",
    "start": "1269440",
    "end": "1275360"
  },
  {
    "text": "light that that's your upper bound like the time it takes for a pulse to travel along some fiber optic cable",
    "start": "1275360",
    "end": "1281840"
  },
  {
    "text": "but what can we do about this well people who work on databases of course spend a lot of time and a lot of energy trying to reduce replication lag",
    "start": "1281840",
    "end": "1288559"
  },
  {
    "text": "but of course there are other trade-offs that they have to make along the way and the final note i want to make here",
    "start": "1288559",
    "end": "1293600"
  },
  {
    "text": "is that eventual consistency doesn't count so when you have background asynchronous replication that's not the formulation of cap we're",
    "start": "1293600",
    "end": "1299919"
  },
  {
    "text": "not talking about background background replication so there are a lot of different ways to define",
    "start": "1299919",
    "end": "1305520"
  },
  {
    "text": "consistency and if you haven't seen this blog post before by kyle kingsbury on the jepsen.io blog",
    "start": "1305520",
    "end": "1310799"
  },
  {
    "text": "i really recommend you check it out so he maps out all the different definitions of consistency that we kind of casually use and what they each",
    "start": "1310799",
    "end": "1317520"
  },
  {
    "text": "logically imply it's really mind-boggling how many different ways there are to define",
    "start": "1317520",
    "end": "1322559"
  },
  {
    "text": "consistency like a word that we think we understand the takeaway here that i want you to like walk away with is that consistency",
    "start": "1322559",
    "end": "1329440"
  },
  {
    "text": "is not a binary state i don't really want to say it's a spectrum because that kind of implies like continuous data but it's more",
    "start": "1329440",
    "end": "1335679"
  },
  {
    "text": "it's a matter of degrees there are many different degrees of consistency so we just have to be really deliberate and",
    "start": "1335679",
    "end": "1341120"
  },
  {
    "text": "careful about which one we actually need to design for so next letter a is for availability",
    "start": "1341120",
    "end": "1347760"
  },
  {
    "text": "which refers to the ability of clients to update data on when they're connected to any node",
    "start": "1347760",
    "end": "1354000"
  },
  {
    "text": "so we tend to think of availability as being a binary state but again like reality is a lot messier",
    "start": "1354000",
    "end": "1360559"
  },
  {
    "text": "because of this wonderful thing called latency um so if you try to issue an update for",
    "start": "1360559",
    "end": "1367280"
  },
  {
    "text": "example and you don't get a response for a long time because maybe latency but maybe like what if that's because the node is down",
    "start": "1367280",
    "end": "1373280"
  },
  {
    "text": "and like your request is not able to be processed at that given point because there's some outage so latency wasn't part of the original",
    "start": "1373280",
    "end": "1379600"
  },
  {
    "text": "cap formulation but it has some really important impacts on detecting and responding to network partitions",
    "start": "1379600",
    "end": "1385840"
  },
  {
    "text": "it's like a real world example like everyone's got a chronically late friend right you're like oh how long should we wait for our friend",
    "start": "1385840",
    "end": "1391840"
  },
  {
    "text": "before we like give up our dinner reservation so one way to deal with this in real life and and when you're building",
    "start": "1391840",
    "end": "1398640"
  },
  {
    "text": "systems is to set a timeout so you can just say i'm only going to wait 10 minutes for my friend to turn up",
    "start": "1398640",
    "end": "1403840"
  },
  {
    "text": "that's kind of a long time effort like building a computer system but determining what constitutes a",
    "start": "1403840",
    "end": "1409760"
  },
  {
    "text": "reasonable timeout is really tricky and the first time that you set up a system you have no historical data like",
    "start": "1409760",
    "end": "1414960"
  },
  {
    "text": "you might as well just roll some dice if you're like oh yeah 12 seconds sounds good but of course like monitoring over time is a good way to",
    "start": "1414960",
    "end": "1421360"
  },
  {
    "text": "learn what's normal you might be lucky enough to pick software that can learn on its own what a reasonable timeout is",
    "start": "1421360",
    "end": "1426559"
  },
  {
    "text": "over time and the final letter p is for partition tolerance",
    "start": "1426559",
    "end": "1431679"
  },
  {
    "text": "a partition in this case refers to a network partition i know sometimes this word gets used to refer to the individual like encyclopedia volumes",
    "start": "1431679",
    "end": "1438159"
  },
  {
    "text": "when you're talking about database sharding that's not the sense that i mean partitioned today i mean a network fault",
    "start": "1438159",
    "end": "1443840"
  },
  {
    "text": "or a net split a partition event lots of different terms for this it basically means when you have an",
    "start": "1443840",
    "end": "1449919"
  },
  {
    "text": "event that interrupts connectivity between two nodes of your system that are running either in the same data center different data centers whatever",
    "start": "1449919",
    "end": "1457520"
  },
  {
    "text": "so during a partition event your notes might as well be on different sides of a wormhole like there's no way to know what's going",
    "start": "1457520",
    "end": "1463360"
  },
  {
    "text": "on on the other side you don't know the other side is responding to health checks you don't know if it's continuing to read and write and process",
    "start": "1463360",
    "end": "1469360"
  },
  {
    "text": "client requests so let's quickly recap c is for consistency with an asterisk",
    "start": "1469360",
    "end": "1475600"
  },
  {
    "text": "availability and partition tolerance so the proof of the cap theorem is",
    "start": "1475600",
    "end": "1481120"
  },
  {
    "text": "actually pretty straightforward and like not you know rigorous mathematical proof or anything but uh intuitively we can reason that if you",
    "start": "1481120",
    "end": "1487919"
  },
  {
    "text": "have a partition event that happens imagine this is your you know like your server setup you two nodes in a cluster which actually is",
    "start": "1487919",
    "end": "1493679"
  },
  {
    "text": "not a good way to design a cluster but imagine you have two nodes and you have three different clients connected one on the right side",
    "start": "1493679",
    "end": "1499279"
  },
  {
    "text": "two on the left side a partition happens you only have two logical ways to respond now",
    "start": "1499279",
    "end": "1505120"
  },
  {
    "text": "either you let the clients continue to read and write on both sides of the split but if you do this you necessarily",
    "start": "1505120",
    "end": "1511120"
  },
  {
    "text": "sacrifice linearizability because if any updates happen on the green side of the split the pink client will never be able to see it or",
    "start": "1511120",
    "end": "1519279"
  },
  {
    "text": "you pause right in one side of the partition until in one side of the cluster until the partition event ends",
    "start": "1519279",
    "end": "1525200"
  },
  {
    "text": "which also necessarily sacrifices availability because the side that's paused won't be able to receive updates",
    "start": "1525200",
    "end": "1531760"
  },
  {
    "text": "so we'll finish by zooming in a little bit more on partition tolerance like what is this idea why can't why can't i just wheel it away",
    "start": "1531760",
    "end": "1538640"
  },
  {
    "text": "so the reason why is because network partitions partition events are inevitable how inevitable i'm going to pick on a",
    "start": "1538640",
    "end": "1546240"
  },
  {
    "text": "small startup that probably knows a little bit about this space so google in the first year of a google",
    "start": "1546240",
    "end": "1552880"
  },
  {
    "text": "cluster's life it will experience five rack failures three router failures eight network maintenances and a host of",
    "start": "1552880",
    "end": "1559279"
  },
  {
    "text": "other hardware related problems that jeff dean has written about extensively why though why can't huge companies like",
    "start": "1559279",
    "end": "1566720"
  },
  {
    "text": "hugely successful companies with lots of smart people can't just wheel away hardware failures",
    "start": "1566720",
    "end": "1572240"
  },
  {
    "text": "well hardware is just going to fail like you can't 100 design unfailable hardware",
    "start": "1572240",
    "end": "1577360"
  },
  {
    "text": "for example maybe your in the routers like the hardware holding",
    "start": "1577360",
    "end": "1582640"
  },
  {
    "text": "your routers together mysteriously fails i don't know network cables will eventually just give out",
    "start": "1582640",
    "end": "1588640"
  },
  {
    "text": "and in fact apparently sometimes sharks mistake underseat cables for fish because of the little electrical pulses",
    "start": "1588640",
    "end": "1594960"
  },
  {
    "text": "and they try to eat them but it's okay because some journalists at rs technica want you to know that as",
    "start": "1594960",
    "end": "1601120"
  },
  {
    "text": "of 2015 sharks are no longer a threat to subsea internet cables because google and facebook lay them and",
    "start": "1601120",
    "end": "1607520"
  },
  {
    "text": "they wrap them in kevlar before they go underwater so the second category of reasons does",
    "start": "1607520",
    "end": "1614000"
  },
  {
    "text": "anyone who like who's like written software will probably know that like sometimes the software we write can do things that we don't expect it to do",
    "start": "1614000",
    "end": "1620240"
  },
  {
    "text": "um and some of those unexpected things will result in events that look like or feel a lot like network outages",
    "start": "1620240",
    "end": "1627200"
  },
  {
    "text": "so in multi-tenant servers which is almost always the case for public clouds uh we don't have perfect resource isolation which means that some",
    "start": "1627200",
    "end": "1634000"
  },
  {
    "text": "like users can burst a little bit in cpu or memory as they need to but that's actually a good thing overall",
    "start": "1634000",
    "end": "1639279"
  },
  {
    "text": "but it can be it can result in this weird case where if you have a process as part of your system running",
    "start": "1639279",
    "end": "1644320"
  },
  {
    "text": "somewhere else on that same host and everyone else is bursting your process can slow down it can look like there's a",
    "start": "1644320",
    "end": "1650000"
  },
  {
    "text": "partition event it can look like there's an outage over there uh some languages have stopped the world",
    "start": "1650000",
    "end": "1655919"
  },
  {
    "text": "garbage collection so if you're running low on memory we got to like pause everything reclaim some resources",
    "start": "1655919",
    "end": "1661039"
  },
  {
    "text": "so that we can carry on this causes everything to suspend which also makes it look like a node is down",
    "start": "1661039",
    "end": "1666880"
  },
  {
    "text": "and network glitches just randomly happen this isn't really an illustration of the principle it's just the character glitch from",
    "start": "1666880",
    "end": "1672240"
  },
  {
    "text": "wreck-it ralph which is a great movie i recommend you see it it's about the internet",
    "start": "1672240",
    "end": "1677360"
  },
  {
    "text": "and also like sometimes people glitch right sometimes people do bad things so in april 2009 a person took",
    "start": "1677360",
    "end": "1684320"
  },
  {
    "text": "a giant i think it was an axe actually i don't know why i drew scissors someone crawled into a manhole and chopped through a bunch of fiber optic",
    "start": "1684320",
    "end": "1690320"
  },
  {
    "text": "cables in san jose so like a lot of people and a lot of data centers in southern california",
    "start": "1690320",
    "end": "1695360"
  },
  {
    "text": "were on the bad end of a network partition for a little while so i hope you're convinced either by",
    "start": "1695360",
    "end": "1700960"
  },
  {
    "text": "this talk or by your own experience it's more likely by your own experiences that running building operating distributed",
    "start": "1700960",
    "end": "1706720"
  },
  {
    "text": "systems is really really hard peter alvaro who's a professor out in california asked the students to",
    "start": "1706720",
    "end": "1713360"
  },
  {
    "text": "think about like what's the one hard thing about distributed systems if you had to pick one word and so one student goes",
    "start": "1713360",
    "end": "1720720"
  },
  {
    "text": "uncertainty yes very good uncertainty and then another student raises their hand and says docker",
    "start": "1720720",
    "end": "1729278"
  },
  {
    "text": "and the first student is like actually yeah that's better why not all right thanks for coming no just kidding",
    "start": "1729679",
    "end": "1736240"
  },
  {
    "text": "so why does any of this matter um you might be sitting there wondering okay like that was a good cool story bro like why why are you",
    "start": "1736320",
    "end": "1742240"
  },
  {
    "text": "telling me all this well the practical reality is that we can't guarantee that every node of a system",
    "start": "1742240",
    "end": "1747520"
  },
  {
    "text": "will always be alive and reachable so it means that some part of every single distributed system will always be at some risk of failure",
    "start": "1747520",
    "end": "1754480"
  },
  {
    "text": "like think about how hard it is to coordinate plans with your friend who's having bad luck right it's that like on a like",
    "start": "1754480",
    "end": "1760480"
  },
  {
    "text": "huge scale over and over again with a lot of machines that you can't you can't see them you can't text them i",
    "start": "1760480",
    "end": "1765919"
  },
  {
    "text": "think maybe you can text machines now i don't know but this whole discussion points to the fischer lynch patterson",
    "start": "1765919",
    "end": "1771760"
  },
  {
    "text": "correctness result which is the output of a very famous landmark paper from 1985 which basically states that",
    "start": "1771760",
    "end": "1778559"
  },
  {
    "text": "distributed consensus is impossible when at least one process might fail",
    "start": "1778559",
    "end": "1784720"
  },
  {
    "text": "so there's quite a bit here to unpack in the references to this talk i've linked to more resources if",
    "start": "1784720",
    "end": "1790000"
  },
  {
    "text": "you want to dig further into this so we've just seen that in almost every case of running a distributed system",
    "start": "1790000",
    "end": "1795360"
  },
  {
    "text": "today there's at least one element out of your control which represents the possibility for failure",
    "start": "1795360",
    "end": "1801919"
  },
  {
    "text": "so what can we do about this um we can't will away failure we can't deny that it's going to happen but what",
    "start": "1801919",
    "end": "1808320"
  },
  {
    "text": "we can do is we can manage it we can build for it so to manage uncertainty we have a set of technical mitigation strategies",
    "start": "1808320",
    "end": "1815200"
  },
  {
    "text": "and just like a warning um i'm going to put up two pretty high density slides i don't expect you to read everything on",
    "start": "1815200",
    "end": "1820960"
  },
  {
    "text": "them i'm going to hand wave over them a little bit but they're on the they're going to be sent out later so",
    "start": "1820960",
    "end": "1827360"
  },
  {
    "text": "one category one genre of strategy is we can limit the amount of chaos in the world by",
    "start": "1827360",
    "end": "1832559"
  },
  {
    "text": "limiting who can write at any point in time so a very common pattern here is the leader",
    "start": "1832559",
    "end": "1837919"
  },
  {
    "text": "follower pattern where you have the leader the leader is the only node who can write new data",
    "start": "1837919",
    "end": "1842960"
  },
  {
    "text": "of course followers can receive requests but they have to forward those right requests to the leader who then figures out what order to write them all in but the",
    "start": "1842960",
    "end": "1849840"
  },
  {
    "text": "challenging part is that the leader is also a node that can become disconnected so we need a contingency plan to keep",
    "start": "1849840",
    "end": "1855760"
  },
  {
    "text": "things writable in case that node goes offline so we use a process called leader election to elect a new leader from the",
    "start": "1855760",
    "end": "1862080"
  },
  {
    "text": "remaining nodes who are responsive and then a failover which normally has to be like a person needs to say okay like that can",
    "start": "1862080",
    "end": "1867440"
  },
  {
    "text": "be the new leader that's fine trigger failover to promote the new leader another genre of ways to mitigate",
    "start": "1867440",
    "end": "1874640"
  },
  {
    "text": "uncertainty is to make some rules for how many yes votes from the whole cluster is enough to",
    "start": "1874640",
    "end": "1879679"
  },
  {
    "text": "proceed so that's a bit this is a bit of an oversimplification but these rule sets can generally be thought",
    "start": "1879679",
    "end": "1886080"
  },
  {
    "text": "of as consensus algorithms raft is one of many two-phase commit strategies that try to keep a simple",
    "start": "1886080",
    "end": "1892080"
  },
  {
    "text": "majority of nodes in agreement about what's the latest data and what's the latest thing going into the uh the register or the ledger or",
    "start": "1892080",
    "end": "1898320"
  },
  {
    "text": "whatever so of course some of them use leader follower inside of them for like extra extra mitigation also i love telling",
    "start": "1898320",
    "end": "1905440"
  },
  {
    "text": "people who don't know this yet did you know that raft doesn't stand for anything it's called raft because it's a bunch of",
    "start": "1905440",
    "end": "1912000"
  },
  {
    "text": "blogs seriously that's true",
    "start": "1912000",
    "end": "1917200"
  },
  {
    "text": "and also i've heard that people use raft to escape from pak sauce island which i don't know",
    "start": "1917200",
    "end": "1922480"
  },
  {
    "text": "whatever so what's even harder than getting machines",
    "start": "1922480",
    "end": "1927600"
  },
  {
    "text": "to agree like we've had consensus algorithms we're coming up with better consensus algorithms every single day but the",
    "start": "1927600",
    "end": "1933200"
  },
  {
    "text": "thing that we haven't quite cracked is getting humans to agree and getting humans to work together",
    "start": "1933200",
    "end": "1938480"
  },
  {
    "text": "so i'm going to spend the final part of this talk talking not about computer systems but on human systems so here's the thing",
    "start": "1938480",
    "end": "1945760"
  },
  {
    "text": "the more fault tolerant we try to make our systems the more complex they inherently become when we start",
    "start": "1945760",
    "end": "1952159"
  },
  {
    "text": "adding things to accommodate for distributed failures like messages being dropped message queues perhaps",
    "start": "1952159",
    "end": "1958480"
  },
  {
    "text": "or maybe load balancers and replication of different members of the of the system or maybe we",
    "start": "1958480",
    "end": "1965679"
  },
  {
    "text": "can sprinkle a little of our favorite container orchestration uh what do you even call this",
    "start": "1965679",
    "end": "1971200"
  },
  {
    "text": "uh container-based workflow orchestration engine as kubernetes okay we introduce complexity into systems and",
    "start": "1971200",
    "end": "1977919"
  },
  {
    "text": "this complexity is not a bad thing i'm not saying like never never use kubernetes not saying that use kubernetes sometimes",
    "start": "1977919",
    "end": "1984399"
  },
  {
    "text": "it's not a bad thing like inherent complexity is something you have to bite to build the systems with the degree of resiliency and fault tolerance",
    "start": "1984399",
    "end": "1991360"
  },
  {
    "text": "that you need for your systems but of course like uncertainty is also introduced by",
    "start": "1991360",
    "end": "1997360"
  },
  {
    "text": "the humans that are operating and building your systems so charity majors talks about this",
    "start": "1997360",
    "end": "2003360"
  },
  {
    "text": "extensively about this growing complexity systems today are getting more complicated mental models are getting",
    "start": "2003360",
    "end": "2009200"
  },
  {
    "text": "harder to build and we are all distributed systems engineers now so it's getting harder for us to reason",
    "start": "2009200",
    "end": "2015440"
  },
  {
    "text": "about what's going on underneath so how do we manage this growing complexity",
    "start": "2015440",
    "end": "2020640"
  },
  {
    "text": "well the first step is we need to spend some time understanding where the cognitive complexity comes from",
    "start": "2020640",
    "end": "2026799"
  },
  {
    "text": "so as we build complex systems out of microservices out of whatever it is that you want to use wood's theorem becomes increasingly",
    "start": "2026799",
    "end": "2034080"
  },
  {
    "text": "important dr david woods wrote in 1988 that as the complexity of a system increases",
    "start": "2034080",
    "end": "2040000"
  },
  {
    "text": "the accuracy of any single agent's own model of that system decreases rapidly so as humans operating",
    "start": "2040000",
    "end": "2047039"
  },
  {
    "text": "big and invisible systems we all sort of maintain mental models of what we think is going on so imagine when you first join a new team",
    "start": "2047039",
    "end": "2052878"
  },
  {
    "text": "or you first you know start to learn a new system i think we kind of think that we build mental models like this right",
    "start": "2052879",
    "end": "2058158"
  },
  {
    "text": "we take a new piece of knowledge and we stack it neatly on top of a piece of knowledge that we had from before",
    "start": "2058159",
    "end": "2063280"
  },
  {
    "text": "but in reality we don't always have the time or resources to build those neat mental models and a lot of the time like the context",
    "start": "2063280",
    "end": "2069118"
  },
  {
    "text": "that we're building on top of shifts right from under our feet so more often than not we're just doing our best to hang on to the",
    "start": "2069119",
    "end": "2075760"
  },
  {
    "text": "few relevant bits because just like for computers like humans are limited by the size of your level one",
    "start": "2075760",
    "end": "2081040"
  },
  {
    "text": "cache right like i know i am so the question we're trying to ask when we're building complex systems as teams",
    "start": "2081040",
    "end": "2086960"
  },
  {
    "text": "of humans is how can we achieve consensus with our understandings of the world when a lot of the time we don't even",
    "start": "2086960",
    "end": "2093118"
  },
  {
    "text": "have very good language to compare and contrast what's in our heads so like in this example you tell three",
    "start": "2093119",
    "end": "2099040"
  },
  {
    "text": "you know like software engineers like we're going to have fish for dinner they might have different conceptions of what that actually means",
    "start": "2099040",
    "end": "2105359"
  },
  {
    "text": "or maybe they have different mental models about what our systems look like under the hood like the systems that we're building and",
    "start": "2105359",
    "end": "2111040"
  },
  {
    "text": "running are really complex they're more complex possibly than the conscious bit that we can hold in our brains which makes having conversations about them",
    "start": "2111040",
    "end": "2117359"
  },
  {
    "text": "really hard so the next best thing we can do is we can try to tease out this information by looking for situations that are",
    "start": "2117359",
    "end": "2123359"
  },
  {
    "text": "information rich proxies so incident analysis incident analysis is really really",
    "start": "2123359",
    "end": "2129520"
  },
  {
    "text": "a ripe uh place for mental model examination so what is instant analysis so usually",
    "start": "2129520",
    "end": "2136000"
  },
  {
    "text": "teams conduct an incident review sometimes called a postmortem although personally i don't like the term postmortem because it implies that",
    "start": "2136000",
    "end": "2141920"
  },
  {
    "text": "something terrible happened and something died like maybe your soul dies a little bit i don't know but like nobody died",
    "start": "2141920",
    "end": "2147200"
  },
  {
    "text": "maybe depending on your systems i guess but like incidents are actually",
    "start": "2147200",
    "end": "2152720"
  },
  {
    "text": "opportunities for fresh conversations and fresh learnings if you want to know more about this i",
    "start": "2152720",
    "end": "2157839"
  },
  {
    "text": "really recommend and i've like linked some resources that you seek out the work that john ospal and his team have been conducting for the last few years",
    "start": "2157839",
    "end": "2164000"
  },
  {
    "text": "you can also come to my ama with dr laura mcguire at 4 10 today she knows a lot more about this than i",
    "start": "2164000",
    "end": "2169440"
  },
  {
    "text": "do but so how does instant analysis tease out mental models like where's this connection",
    "start": "2169440",
    "end": "2175200"
  },
  {
    "text": "well so like um during an incident review there's a couple of typical activities that teams might do you might like make a timeline of everything that",
    "start": "2175200",
    "end": "2181680"
  },
  {
    "text": "happened you might create architectural diagrams try to you know like figure out the decision trees um it doesn't really matter in the",
    "start": "2181680",
    "end": "2188240"
  },
  {
    "text": "end whatever format you choose the goal of this meeting is to create an environment where the team can learn from incidents",
    "start": "2188240",
    "end": "2194079"
  },
  {
    "text": "the one non-negotiable component of incident review is that it has to be blameless so blameless",
    "start": "2194079",
    "end": "2200400"
  },
  {
    "text": "discussions focus on learning rather than on justice so by having these conversations you'll",
    "start": "2200400",
    "end": "2205760"
  },
  {
    "text": "almost certainly discover that every person in the room had a different idea of what they thought was going on",
    "start": "2205760",
    "end": "2211119"
  },
  {
    "text": "so just to close on this point and blame those postmortems i think one really clear litmus test on",
    "start": "2211119",
    "end": "2216240"
  },
  {
    "text": "whether your incident reviews are blameless or not is to listen for counterfactuals so counterfactuals are statements like",
    "start": "2216240",
    "end": "2222800"
  },
  {
    "text": "had denise not put the coffee cup on the table when the cat was out in the room then the incident would not have occurred so",
    "start": "2222800",
    "end": "2230480"
  },
  {
    "text": "counterfactuals are difficult because they're hypotheticals they're like had x happened then why would or would not have",
    "start": "2230480",
    "end": "2235680"
  },
  {
    "text": "happened um so like so what if you established that a different course of events could have happened",
    "start": "2235680",
    "end": "2241520"
  },
  {
    "text": "like they didn't you can't observe them you can't learn from them they're not actionable so here's the",
    "start": "2241520",
    "end": "2247680"
  },
  {
    "text": "thing human decisions never occur in a vacuum the slide is really silly",
    "start": "2247680",
    "end": "2253920"
  },
  {
    "text": "i miss this little henry vacuum we don't have him in canada so be henry and we ask what seemed",
    "start": "2253920",
    "end": "2260240"
  },
  {
    "text": "reasonable at the time because all human decisions were formed by some belief that a course of",
    "start": "2260240",
    "end": "2267200"
  },
  {
    "text": "action was reasonable given the circumstances if you want to learn more about this i've linked to courtney and lex's presentation from sr econ last year",
    "start": "2267200",
    "end": "2273839"
  },
  {
    "text": "where they do a whole workshop on this it's really great so in addition to running your incident reviews in a",
    "start": "2273839",
    "end": "2279920"
  },
  {
    "text": "blameless manner please keep this in mind like please don't accept human error don't say like oh denise screwed up and that's why the",
    "start": "2279920",
    "end": "2286400"
  },
  {
    "text": "incident happened like don't accept human error as the root cause so ask like dig deeper ask harder",
    "start": "2286400",
    "end": "2292800"
  },
  {
    "text": "questions that will actually be more more useful like ask for example was a user misled by some design that",
    "start": "2292800",
    "end": "2299200"
  },
  {
    "text": "was really unintuitive or really difficult to navigate or maybe somebody had too many alerts",
    "start": "2299200",
    "end": "2304560"
  },
  {
    "text": "and they were frazzled they had they were experiencing alert fatigue or maybe the way that some software was",
    "start": "2304560",
    "end": "2310079"
  },
  {
    "text": "designed didn't take into account the assumptions that a user would bring with them into you know like maybe",
    "start": "2310079",
    "end": "2315200"
  },
  {
    "text": "into the web portal into the control room whatever it is and in fact if you start reading into",
    "start": "2315200",
    "end": "2320560"
  },
  {
    "text": "the latest thinking around resilience engineering there are a lot of folks suggesting that maybe there are no root causes one of",
    "start": "2320560",
    "end": "2326960"
  },
  {
    "text": "the best talks on this is by ryan kitchen from netflix um also linked in the notes",
    "start": "2326960",
    "end": "2332640"
  },
  {
    "text": "so i kind of was half joking about that epistemology thing later i just wanted a way to shoehorn my philosophy degree into this talk i'm like oh",
    "start": "2332640",
    "end": "2338960"
  },
  {
    "text": "make everyone learn about epistemology but in all seriousness we all have different frames of reference and we don't have great vocabulary to",
    "start": "2338960",
    "end": "2345599"
  },
  {
    "text": "figure out the differences so of course humans can make mistakes like i think that's just part of being human",
    "start": "2345599",
    "end": "2350960"
  },
  {
    "text": "but the great thing about humans is that we're also a lot more adaptable than machines the more we depend on",
    "start": "2350960",
    "end": "2357760"
  },
  {
    "text": "technology and push it to its limits the more we're going to need highly trained",
    "start": "2357760",
    "end": "2362960"
  },
  {
    "text": "highly skilled rather well-trained and well-practiced people to make our systems resilient acting as the last",
    "start": "2362960",
    "end": "2368880"
  },
  {
    "text": "line of defense against the failures that will inevitably occur this is a paper titled the ironies of automation still going",
    "start": "2368880",
    "end": "2375359"
  },
  {
    "text": "strong at 30. also really good read check it out so in pursuit of the socio-technical goals",
    "start": "2375359",
    "end": "2383119"
  },
  {
    "text": "for building microservices for building resilient systems for building large sprawling distributed",
    "start": "2383119",
    "end": "2389200"
  },
  {
    "text": "systems we're always taking a loan taking out a loan against inherent complexity",
    "start": "2389200",
    "end": "2396000"
  },
  {
    "text": "but we as humans can learn and adapt that's our superpower so with this superpower i challenge you",
    "start": "2396000",
    "end": "2403359"
  },
  {
    "text": "to challenge yourselves to empathize with each and every user not just the customers not just the",
    "start": "2403359",
    "end": "2409119"
  },
  {
    "text": "paying ones but also the ones who are operating your systems the ones who are going to get paged at 2 am",
    "start": "2409119",
    "end": "2415359"
  },
  {
    "text": "when we think about where to draw the lines for for example for bounded context those are design decisions right those",
    "start": "2415359",
    "end": "2420880"
  },
  {
    "text": "are not technical technical decisions like quote um those are design choices and we",
    "start": "2420880",
    "end": "2425920"
  },
  {
    "text": "should always be challenging ourselves to make those choices in a way that optimizes for the humans that operates",
    "start": "2425920",
    "end": "2432079"
  },
  {
    "text": "that operate and build these systems that means that we should choose tools and processes that promote the things that help humans do",
    "start": "2432079",
    "end": "2437839"
  },
  {
    "text": "their job better make sure your tools and processes are promoting learning and sustainable pace",
    "start": "2437839",
    "end": "2443839"
  },
  {
    "text": "because after all we owe it to our end users and to our teams to understand and design for the whole",
    "start": "2443839",
    "end": "2449680"
  },
  {
    "text": "system including the fleshy human parts thank you so much to",
    "start": "2449680",
    "end": "2455359"
  },
  {
    "text": "nikki wrightson and for kucon for having me um here to talk about cats today i guess um",
    "start": "2455359",
    "end": "2462000"
  },
  {
    "text": "again one more time those are the slides and references thank you so much for listening",
    "start": "2462000",
    "end": "2467838"
  }
]