[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "foreign [Music]",
    "start": "0",
    "end": "16400"
  },
  {
    "text": "talk my talk for today is JFR as an observability tool my name is Ben Evans",
    "start": "16400",
    "end": "22800"
  },
  {
    "text": "and I'm a senior principal software engineer at red hat for those of you who may not have come across me before very",
    "start": "22800",
    "end": "29699"
  },
  {
    "text": "quick rundown on on the sorts of things I've got up to before joining red hat I",
    "start": "29699",
    "end": "35040"
  },
  {
    "text": "was lead architecture for instrumentation at New Relic and before that I co-founded a Java performance",
    "start": "35040",
    "end": "40379"
  },
  {
    "text": "company called J Clarity which was acquired by Microsoft in 2019. before",
    "start": "40379",
    "end": "45420"
  },
  {
    "text": "that I spent a lot of time working with banks and financial companies and also gaming as well",
    "start": "45420",
    "end": "51899"
  },
  {
    "text": "in addition to my work in my career I'm also known for something I work in the community I'm a Java Champion I drive",
    "start": "51899",
    "end": "58260"
  },
  {
    "text": "one rock star speaker and for six years I served on the Java Community process executive committee which is the body",
    "start": "58260",
    "end": "64018"
  },
  {
    "text": "that oversees all new Java standards these days I live in Sunny Barcelona but until uh quite recently I guess about",
    "start": "64019",
    "end": "71100"
  },
  {
    "text": "three years ago now I lived in London where I was deeply involved with the London Java Community which is one of",
    "start": "71100",
    "end": "76860"
  },
  {
    "text": "the largest and most influential Java user groups in the world so that's probably enough about me what",
    "start": "76860",
    "end": "84420"
  },
  {
    "text": "are we going to talk about today well we're going to talk about observability and I think there's there's some context",
    "start": "84420",
    "end": "89880"
  },
  {
    "text": "that we really need to give around observability because it's it's talked about quite a lot but I think there are",
    "start": "89880",
    "end": "95220"
  },
  {
    "text": "still a lot of people especially in the Java world who find that it's confusing or a bit vague or they're not quite sure",
    "start": "95220",
    "end": "101880"
  },
  {
    "text": "exactly what it is um and actually that's that's that's kind of silly because observability is",
    "start": "101880",
    "end": "107820"
  },
  {
    "text": "is really not um all that conceptually difficult to understand it it does it",
    "start": "107820",
    "end": "113040"
  },
  {
    "text": "have some some Concepts which you might not be used to but it doesn't actually take that much to uh to explain them so",
    "start": "113040",
    "end": "118860"
  },
  {
    "text": "I want to explain a bit about what observability is I want to explain open Telemetry which is an open source",
    "start": "118860",
    "end": "125759"
  },
  {
    "text": "project and a set of Open Standards which fit into the general framework of observability",
    "start": "125759",
    "end": "131400"
  },
  {
    "text": "and then with those two two bits of theory in hand we can turn and look at a technology called JFR or jdk flight",
    "start": "131400",
    "end": "137459"
  },
  {
    "text": "recorder which is a a fantastic piece of engineering and a great source of data",
    "start": "137459",
    "end": "143280"
  },
  {
    "text": "that can be really really useful for for Java developers who care about observability then we'll take a quick look as to sort",
    "start": "143280",
    "end": "149879"
  },
  {
    "text": "of where we are take the temperature of our current status and then we'll talk a little bit about the future of roadmap because I know that developers always",
    "start": "149879",
    "end": "155940"
  },
  {
    "text": "love that so let's kick off by thinking about what observability is and in order to really",
    "start": "155940",
    "end": "161700"
  },
  {
    "text": "do that I want to start from this question of why why do we want to do it why why is it necessary well",
    "start": "161700",
    "end": "167160"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "I've got some interesting numbers here um the one I want to draw your attention to is is the one on the left hand side",
    "start": "167160",
    "end": "173000"
  },
  {
    "text": "which says roughly 63 of jvms that are running in production currently are are",
    "start": "173000",
    "end": "180180"
  },
  {
    "text": "containerized now this number has come from our friends at New Relic who who publish data uh and since I put the",
    "start": "180180",
    "end": "187319"
  },
  {
    "text": "stack together they actually have a nice New result out which actually says that this number because you can see this is actually from last year",
    "start": "187319",
    "end": "193739"
  },
  {
    "text": "um the the 2022 numbers are actually a bit higher so now that they're seeing roughly 70 of all jvm-based applications",
    "start": "193739",
    "end": "201000"
  },
  {
    "text": "being being containerized for fun on the right hand side here I'm also showing you the breakdown of the",
    "start": "201000",
    "end": "207000"
  },
  {
    "text": "Java versions again these numbers are about a year out of date and in fact if",
    "start": "207000",
    "end": "212040"
  },
  {
    "text": "we looked at them again today we would see that in fact Java 11 has increased even more than that whichever 11 is now",
    "start": "212040",
    "end": "217560"
  },
  {
    "text": "in the lead very slightly average of right um I know that people were always curious",
    "start": "217560",
    "end": "222840"
  },
  {
    "text": "about these numbers and obviously they're not a perfect proxy for the for the draft Market as a whole because it's just new Rolex customers but it still",
    "start": "222840",
    "end": "229440"
  },
  {
    "text": "represents a a sample of tens of millions of jvms I think Gartner",
    "start": "229440",
    "end": "235260"
  },
  {
    "text": "estimate that around about one percent of all production jvms uh show up in the new Reddit data so not a perfect uh data",
    "start": "235260",
    "end": "243840"
  },
  {
    "text": "set by any means but certainly a very interesting one unfortunately we should uh we probably don't have enough time to",
    "start": "243840",
    "end": "249720"
  },
  {
    "text": "talk about it in in full depth and full full detail so we should we should move on the big takeaway that I want you to",
    "start": "249720",
    "end": "256739"
  },
  {
    "text": "um to get at from here is that cloud native is increasingly our reality 70 of applications containerized and",
    "start": "256739",
    "end": "262680"
  },
  {
    "text": "that number is still rising Rising very quickly depends upon the market segment of course it depends upon the maturity that",
    "start": "262680",
    "end": "268440"
  },
  {
    "text": "individual organizations have but it is still a big number and it is still you",
    "start": "268440",
    "end": "273540"
  },
  {
    "text": "know a a serious Trend that I think we need to um we need to to take seriously",
    "start": "273540",
    "end": "280020"
  },
  {
    "text": "um for many reasons but but particularly because it has been uh such a fast",
    "start": "280020",
    "end": "285660"
  },
  {
    "text": "growing segment um containerization has happened really remarkably quickly and so when when an",
    "start": "285660",
    "end": "292380"
  },
  {
    "text": "industry adopts a new practice as as rapidly and as wholesalers as they have",
    "start": "292380",
    "end": "298560"
  },
  {
    "text": "in this case then I think that that's a uh a sign that you need to take it seriously into pay some attention to it",
    "start": "298560",
    "end": "305400"
  },
  {
    "text": "okay so why does this happen well because observability really helps solve a problem which it exists in other",
    "start": "305400",
    "end": "312780"
  },
  {
    "text": "architectures but it's particularly apparent in uh in Cloud native and that's an increase in complexity we",
    "start": "312780",
    "end": "319800"
  },
  {
    "text": "see this with things like microservices we we see it with certain other aspects of cloud native architectures as well",
    "start": "319800",
    "end": "325800"
  },
  {
    "text": "which is that because there's just more stuff in a cloud native architecture than most Services there there's all",
    "start": "325800",
    "end": "333539"
  },
  {
    "text": "kinds of um new technologies the traditional APM application performance",
    "start": "333539",
    "end": "338580"
  },
  {
    "text": "monitoring that's what IBM stands for those types of approaches just aren't really as suitable for cloud native so",
    "start": "338580",
    "end": "344759"
  },
  {
    "text": "we need to do something new and something which is more suitable you know to to put this into some context",
    "start": "344759",
    "end": "350039"
  },
  {
    "text": "and kind of justify a little bit we can look back I guess 15 years we go back to 15 years ago",
    "start": "350039",
    "end": "356180"
  },
  {
    "text": "2007 now I guess um I was working at Morgan Stanley we certainly had APM software that we were",
    "start": "356180",
    "end": "363000"
  },
  {
    "text": "deploying into our production environments um and you know they they were the first generation of those types of",
    "start": "363000",
    "end": "369000"
  },
  {
    "text": "Technologies but they did exist 15 years ago and we did get useful information after them but let's remember what the",
    "start": "369000",
    "end": "375360"
  },
  {
    "text": "the world of software development was like 15 years ago it was a completely different world we had really cycles",
    "start": "375360",
    "end": "381180"
  },
  {
    "text": "that we measured in months not in days or hours you know quite often the applications that I was working with",
    "start": "381180",
    "end": "386460"
  },
  {
    "text": "back in those days we would have maybe a release every six weeks maybe release every couple of months and that was the",
    "start": "386460",
    "end": "393360"
  },
  {
    "text": "Cadence at which new versions of the software came out this was before microservices so we had",
    "start": "393360",
    "end": "398520"
  },
  {
    "text": "a service-based architecture but these were large-scale quite monolithic services and of course we ran this all",
    "start": "398520",
    "end": "404880"
  },
  {
    "text": "in our own data centers or rented data centers there was no notion of an on-demand cloud in that in the same way",
    "start": "404880",
    "end": "411120"
  },
  {
    "text": "that we have these days and what this means is is that well two things because the architectures are",
    "start": "411120",
    "end": "417539"
  },
  {
    "text": "stable for a period of months a good operations team can get a handle on how the architecture behaves they can",
    "start": "417539",
    "end": "424080"
  },
  {
    "text": "develop intuition for how the the the different pieces of the architecture fit together the kind of things that can go",
    "start": "424080",
    "end": "430380"
  },
  {
    "text": "wrong um and so if you if you have a sense of what can go wrong you can make sure that",
    "start": "430380",
    "end": "435780"
  },
  {
    "text": "you gather data at those points and and see whether whether things are going to go wrong you know so you end up with a typical",
    "start": "435780",
    "end": "442979"
  },
  {
    "start": "442000",
    "end": "442000"
  },
  {
    "text": "view of an architecture like this a traditional three-tier architecture still a classic",
    "start": "442979",
    "end": "448860"
  },
  {
    "text": "um data source jvm level for application Services web servers and some clustering load balancing",
    "start": "448860",
    "end": "454740"
  },
  {
    "text": "Technologies so pretty pretty standard sort of stuff you know what can break well the load balances",
    "start": "454740",
    "end": "460560"
  },
  {
    "text": "can break uh the the web servers you know mostly are just serving static content aren't doing a great deal so yes",
    "start": "460560",
    "end": "467280"
  },
  {
    "text": "you could push a bad config or some bad routing to the web layer but in practice that if you if you do that you're going",
    "start": "467280",
    "end": "473220"
  },
  {
    "text": "to find it pretty quickly um the clustering software can can have some slightly odd failure modes and so",
    "start": "473220",
    "end": "479160"
  },
  {
    "text": "on and so forth but it's not that complicated there's just not the same level of of stuff that can go wrong that",
    "start": "479160",
    "end": "485759"
  },
  {
    "text": "we see for cloud native um here's a more modern example so yeah",
    "start": "485759",
    "end": "490979"
  },
  {
    "start": "487000",
    "end": "487000"
  },
  {
    "text": "I worked with red hat so of course I have to show you at least one slide which has got openshift on it so there",
    "start": "490979",
    "end": "496020"
  },
  {
    "text": "we have a bunch of different things and what you'll notice here is that this is a much more um",
    "start": "496020",
    "end": "501660"
  },
  {
    "text": "complex and much more sophisticated architecture we have some bespoke services so we've got an EAP service",
    "start": "501660",
    "end": "507240"
  },
  {
    "text": "there we've got quakus which is uh Red Hats kubernetes native uh Java",
    "start": "507240",
    "end": "514320"
  },
  {
    "text": "deployment if you like we've even got some things which aren't written in Java we've got node.js but we've also got",
    "start": "514320",
    "end": "520620"
  },
  {
    "text": "some things which are still labeled as services but they're actually much more like appliances and so when we have",
    "start": "520620",
    "end": "526800"
  },
  {
    "text": "Kafka for example Kafka is a data transport layer it's it's it's moving you know information from from place to",
    "start": "526800",
    "end": "534180"
  },
  {
    "text": "place and sharing it between Services it's not a lot of bespoke coding that's going on there instead that is that is",
    "start": "534180",
    "end": "540300"
  },
  {
    "text": "something which is more like infrastructure than a piece of bespoke code",
    "start": "540300",
    "end": "545580"
  },
  {
    "text": "so here like the clear separation between the tiers is much more blurry and we've got a great admixture of",
    "start": "545580",
    "end": "552899"
  },
  {
    "text": "microservices and infrastructural components like Kafka and so on and so forth the data player is still there but",
    "start": "552899",
    "end": "559260"
  },
  {
    "text": "it's now uh the it's now sort of augmented by a much greater complexity for for services in the uh in in that",
    "start": "559260",
    "end": "567060"
  },
  {
    "text": "part of the architecture moving on from that we also have architectures which look nothing like",
    "start": "567060",
    "end": "572820"
  },
  {
    "text": "traditional three-tier architectures this is a serverless example this one really is cloud native this one really",
    "start": "572820",
    "end": "577920"
  },
  {
    "text": "is the kind of thing that it will be very very difficult to build with traditional iot architectures so here we",
    "start": "577920",
    "end": "583920"
  },
  {
    "text": "we have iot so the internet of things we have a bunch of sensors coming in from",
    "start": "583920",
    "end": "588959"
  },
  {
    "text": "well they could come in from anywhere and then we have some sort of server or even serverless provisioning which",
    "start": "588959",
    "end": "595560"
  },
  {
    "text": "produces an iot stream job which is fed into into a main data store and then we have other components which are are",
    "start": "595560",
    "end": "601519"
  },
  {
    "text": "watching the serverless data store and have some kind of machine learning model that's been being applied over the top",
    "start": "601519",
    "end": "606720"
  },
  {
    "text": "of it so so now the components are actually simpler in some ways but a lot of the complexity",
    "start": "606720",
    "end": "613800"
  },
  {
    "text": "has been hidden and is being handled by the cloud provider uh themselves for us",
    "start": "613800",
    "end": "618839"
  },
  {
    "text": "so this is very much closer to a serverless type of deployment so this basically brings us to the heart",
    "start": "618839",
    "end": "625320"
  },
  {
    "text": "of how and why Cloud native applications are different they're much more complex they are more services there are more",
    "start": "625320",
    "end": "631440"
  },
  {
    "text": "components the topology the way that the services interconnect with each other is far more complicated",
    "start": "631440",
    "end": "637500"
  },
  {
    "text": "and there are more sources of change and that change is occurring more rapidly",
    "start": "637500",
    "end": "642720"
  },
  {
    "text": "so this has moved us a long way away from the sorts of architectures that I I would have been dealing with at the",
    "start": "642720",
    "end": "647940"
  },
  {
    "text": "early point in my career not only is that complexity and that more rapid change a major factor",
    "start": "647940",
    "end": "654959"
  },
  {
    "text": "we also must understand that there are new technologies with genuinely new behaviors of the type that we have never",
    "start": "654959",
    "end": "660480"
  },
  {
    "text": "seen before I mean things like there are Services which scale dynamically there are of course containers there are things like",
    "start": "660480",
    "end": "667620"
  },
  {
    "text": "Kafka um there are functions as a service and and serverless Technologies and then",
    "start": "667620",
    "end": "674339"
  },
  {
    "text": "finally of course there is kubernetes which is a huge Topic in and of its own",
    "start": "674339",
    "end": "679800"
  },
  {
    "text": "right and one I'm sure that several of my my colleagues and the other speakers will be talking to I won't be saying a",
    "start": "679800",
    "end": "685560"
  },
  {
    "text": "great deal about kubernetes don't worry so that's our world those are the things",
    "start": "685560",
    "end": "690899"
  },
  {
    "text": "that we have to face those are the challenges and that's why we we need to do things in a different way",
    "start": "690899",
    "end": "696180"
  },
  {
    "text": "but having said that despite all of that additional complexity and all of that additional change in our landscape",
    "start": "696180",
    "end": "701640"
  },
  {
    "text": "certain questions certain aspects we still need answers too we still need answers to the sorts of questions like",
    "start": "701640",
    "end": "708300"
  },
  {
    "text": "what is the overall health of the solution what about root cause analysis what about performance bottlenecks what",
    "start": "708300",
    "end": "714600"
  },
  {
    "text": "about is this change bad have I introduced some sort of regression but by changing the software and doing a",
    "start": "714600",
    "end": "721079"
  },
  {
    "text": "rollout and overall what does the customer think about all of this key questions there was true on every",
    "start": "721079",
    "end": "729600"
  },
  {
    "text": "um type of architecture you deploy whether this is an old school three-tier architecture all the way through to the",
    "start": "729600",
    "end": "734640"
  },
  {
    "text": "latest and greatest Cloud native architecture these concerns these things that we care about are still the same",
    "start": "734640",
    "end": "741360"
  },
  {
    "text": "so that is why observability we have a new world of cloud native and we require",
    "start": "741360",
    "end": "748560"
  },
  {
    "text": "the same answers to some of the same old questions and maybe a few new answers to",
    "start": "748560",
    "end": "754260"
  },
  {
    "text": "a few new questions as well um but broadly we need to adapt our our notion of what it is to to provide good",
    "start": "754260",
    "end": "761160"
  },
  {
    "text": "service and to have the tools and the capabilities to do that so that's why observability but what",
    "start": "761160",
    "end": "767040"
  },
  {
    "text": "about what what is it exactly well",
    "start": "767040",
    "end": "772260"
  },
  {
    "start": "772000",
    "end": "772000"
  },
  {
    "text": "there's a lot of people that talked about this and I think that a lot of the the discussion around it is over complicated I don't think the",
    "start": "772260",
    "end": "778680"
  },
  {
    "text": "observability is actually that difficult to understand conceptually the way that I would explain it is like",
    "start": "778680",
    "end": "785519"
  },
  {
    "text": "this first of all we instrument our systems and applications to collect the data",
    "start": "785519",
    "end": "791160"
  },
  {
    "text": "that we need to answer those user level questions that we had that we were just talking about a moment or two ago",
    "start": "791160",
    "end": "798000"
  },
  {
    "text": "you send that data outside of your production system you send it to somewhere completely",
    "start": "798000",
    "end": "803820"
  },
  {
    "text": "different which is an isolated external system the reason why",
    "start": "803820",
    "end": "809100"
  },
  {
    "text": "because if you don't if you attempt to store and analyze that system that data within your production system",
    "start": "809100",
    "end": "815700"
  },
  {
    "text": "if your system is down you may not be able to understand or analyze the data because you may have a",
    "start": "815700",
    "end": "821639"
  },
  {
    "text": "dependency on the system which is causing the outage so for that reason you send it to",
    "start": "821639",
    "end": "826800"
  },
  {
    "text": "someone that's isolated and external once you have that data you can then use",
    "start": "826800",
    "end": "833700"
  },
  {
    "text": "things like a query language or and almost like an experimental approach of",
    "start": "833700",
    "end": "839220"
  },
  {
    "text": "looking at the data of digging into it and trying to to see what's going on by by asking open-ended questions",
    "start": "839220",
    "end": "846060"
  },
  {
    "text": "and that flexibility is key because it's that what provides you um with the insights and you don't",
    "start": "846060",
    "end": "852240"
  },
  {
    "text": "necessarily know what you need going to need to ask when you start trying to figure out what is the root cause of this of this outage why why are we",
    "start": "852240",
    "end": "858600"
  },
  {
    "text": "seeing problems in the system um so so that flexibility that the",
    "start": "858600",
    "end": "863820"
  },
  {
    "text": "unknown unknowns if you like the questions you didn't know you you need to ask that's very key for what makes a",
    "start": "863820",
    "end": "870300"
  },
  {
    "text": "system an observability system rather than just a monitoring system ultimately of course you know the",
    "start": "870300",
    "end": "875399"
  },
  {
    "text": "foundation of this is systems control theory so which is how well can we understand this the internal state of a",
    "start": "875399",
    "end": "881339"
  },
  {
    "text": "system from outside of it um but that's that's kind of a fairly theoretical underpinning",
    "start": "881339",
    "end": "888360"
  },
  {
    "text": "um we're interested in the practitioner approach here we're interested in what what insights that could lead you to",
    "start": "888360",
    "end": "894360"
  },
  {
    "text": "taking action about your entire system can you can you um Can You observe so",
    "start": "894360",
    "end": "899820"
  },
  {
    "text": "not just a single piece but all of it so now the complexity of microservice",
    "start": "899820",
    "end": "905760"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "architecture starts to come in it's not just that there are larger numbers of smaller Services it's not just that",
    "start": "905760",
    "end": "911519"
  },
  {
    "text": "there are multiple people who care about this Dev devops management Etc it's also things like the heterogeneous Tech stats",
    "start": "911519",
    "end": "918060"
  },
  {
    "text": "you know important applications you don't build every service or every component out of the same the same Tech stack and then finally again touch some",
    "start": "918060",
    "end": "926100"
  },
  {
    "text": "kubernetes service costs to scale quite often that's one dynamically or automatically these days and so that",
    "start": "926100",
    "end": "932760"
  },
  {
    "text": "that additional layer of complexity is is it's added to to what we have with microservices",
    "start": "932760",
    "end": "939120"
  },
  {
    "text": "now to help with diagnosing all of this we we have a concept uh of What's called the three pillars three pillars of",
    "start": "939120",
    "end": "946260"
  },
  {
    "start": "941000",
    "end": "941000"
  },
  {
    "text": "observability and this this concept is a little um it's a little tiny bit controversial",
    "start": "946260",
    "end": "951899"
  },
  {
    "text": "some of the providers of obserability solutions and some of the thinkers in the in the space claim that this is not",
    "start": "951899",
    "end": "957300"
  },
  {
    "text": "actually that helpful a model um my take on it is that",
    "start": "957300",
    "end": "962820"
  },
  {
    "text": "especially for people who are just coming to the to the field and who are new to observability but this is",
    "start": "962820",
    "end": "968220"
  },
  {
    "text": "actually a pretty good mental model because these are things that people may already be slightly familiar with and it",
    "start": "968220",
    "end": "974639"
  },
  {
    "text": "can provide them with a useful on-ramp to get into the uh into the data and into the observability mindset and then",
    "start": "974639",
    "end": "980880"
  },
  {
    "text": "they can decide whether or not to discard the mental model later or not so Matrix logs and traces",
    "start": "980880",
    "end": "987540"
  },
  {
    "text": "these are very different data types and they behave differently and they have different properties so metric is just a number that",
    "start": "987540",
    "end": "993600"
  },
  {
    "text": "describes a particular process or an activity the number of transactions in",
    "start": "993600",
    "end": "998940"
  },
  {
    "text": "in let's say a 10 second window right that's a metric the CPU utilization on a",
    "start": "998940",
    "end": "1004940"
  },
  {
    "text": "particular container that's a metric you know so notice it's a time stamp and it's a single number measured over a",
    "start": "1004940",
    "end": "1011000"
  },
  {
    "text": "fixed interval time width basically okay a log isn't it a record an",
    "start": "1011000",
    "end": "1018019"
  },
  {
    "text": "immutable record of an event that happened at a point in time so that is is blurs the distinction",
    "start": "1018019",
    "end": "1023779"
  },
  {
    "text": "between a log and an event you know a log might just be a you know an entry in a syslog or an application log Good Old",
    "start": "1023779",
    "end": "1030558"
  },
  {
    "text": "Log for J or something like that but it might be something else as well and then a trace a trace is a piece of",
    "start": "1030559",
    "end": "1037160"
  },
  {
    "text": "data which is is used to show what uh was triggered by an individual user",
    "start": "1037160",
    "end": "1044418"
  },
  {
    "text": "level request okay so metrics not really tied to",
    "start": "1044419",
    "end": "1049580"
  },
  {
    "text": "particularly particular requests traces are very much tied to a particular request analogs somewhere in the middle",
    "start": "1049580",
    "end": "1056960"
  },
  {
    "text": "we'll talk more about the the different aspects of data that these things have uh a little bit later",
    "start": "1056960",
    "end": "1063799"
  },
  {
    "text": "so if you're cynical um I'm sure you're not but if you if you were aware of a cynical mind you might",
    "start": "1063799",
    "end": "1069200"
  },
  {
    "text": "might ask isn't this just APM with new marketing and here's why here's five reasons why I think it's not",
    "start": "1069200",
    "end": "1075980"
  },
  {
    "text": "um it's vastly would you spend a look in the open specification of the protocol",
    "start": "1075980",
    "end": "1081440"
  },
  {
    "text": "is on The Wire the open sourcing of at least some of the components especially the client-side components that you put into",
    "start": "1081440",
    "end": "1088340"
  },
  {
    "text": "your application those hugely help to reduce vendor locking",
    "start": "1088340",
    "end": "1094700"
  },
  {
    "text": "so that helps keep vendors in the space competitive and it helps keep them honest because if you have the ability",
    "start": "1094700",
    "end": "1101780"
  },
  {
    "text": "to switch wire protocol and maybe you don't even need to change the client component then that means that you can",
    "start": "1101780",
    "end": "1107299"
  },
  {
    "text": "you can easily migrate to another vendor should you wish to related to that you will also see",
    "start": "1107299",
    "end": "1113179"
  },
  {
    "text": "standardized architecture patterns and the fact that because people are now cooperating on protocols cooperating on",
    "start": "1113179",
    "end": "1118400"
  },
  {
    "text": "standards and on the client components we can now start to to have a discourse amongst Architects and amongst",
    "start": "1118400",
    "end": "1124280"
  },
  {
    "text": "practitioners as to how we build this stuff out in a reliable and sustainable way and that leads to better architecture",
    "start": "1124280",
    "end": "1131240"
  },
  {
    "text": "practice which also then feeds back into the protocols and the components moving on from that we also see that the",
    "start": "1131240",
    "end": "1138200"
  },
  {
    "text": "client components are not the only pieces that are being developed and there is an increase in quantity and quality of back-end components as well",
    "start": "1138200",
    "end": "1145100"
  },
  {
    "start": "1145000",
    "end": "1145000"
  },
  {
    "text": "in this new approach we can see that we've started from the the point of view of instrumenting the client side which",
    "start": "1145100",
    "end": "1153380"
  },
  {
    "text": "in this case really means the the applications in fact most of these things are going to be server components",
    "start": "1153380",
    "end": "1158840"
  },
  {
    "text": "um but it's typically thought of as being the client side for the observability protocols this will mean",
    "start": "1158840",
    "end": "1164660"
  },
  {
    "text": "things like Java agents and and other components that we're going to place into uh our code whether that's bespoke",
    "start": "1164660",
    "end": "1171320"
  },
  {
    "text": "or the the app the infrastructural components which we will also need to integrate with from there we'll send the",
    "start": "1171320",
    "end": "1177860"
  },
  {
    "text": "data over the wire into a separate system which is marked here's data collection this component 2 is likely to",
    "start": "1177860",
    "end": "1184820"
  },
  {
    "text": "be open source uh at least for the for the receiving part and then we also require some sort of of data processing",
    "start": "1184820",
    "end": "1192860"
  },
  {
    "text": "so the first two steps are now very heavily dominated by open source components for data processing that",
    "start": "1192860",
    "end": "1199640"
  },
  {
    "text": "process is still ongoing so it is still possible to either use an open source component",
    "start": "1199640",
    "end": "1205400"
  },
  {
    "text": "um or a vendor for for that part The Next Step closing the loop between",
    "start": "1205400",
    "end": "1210559"
  },
  {
    "text": "background to the user for gaming specialization again there are good stories here both from from vendor code",
    "start": "1210559",
    "end": "1215960"
  },
  {
    "text": "and from open source Solutions and the the market is still developing for these",
    "start": "1215960",
    "end": "1221600"
  },
  {
    "text": "final two pieces in terms of today's market and and what",
    "start": "1221600",
    "end": "1227480"
  },
  {
    "start": "1224000",
    "end": "1224000"
  },
  {
    "text": "is actually in use the there was a recent survey by the cncf the cloud native compute foundation and they found",
    "start": "1227480",
    "end": "1233960"
  },
  {
    "text": "that um Prometheus which is a slightly older metrics technology is probably what most",
    "start": "1233960",
    "end": "1241039"
  },
  {
    "text": "widely used observability technology around today they found that this was used by roughly",
    "start": "1241039",
    "end": "1248179"
  },
  {
    "text": "86 of all projects that they surveyed um this is of course a self-reported",
    "start": "1248179",
    "end": "1253400"
  },
  {
    "text": "survey and only the people who are actively interested and involved with with observability will have responded",
    "start": "1253400",
    "end": "1259520"
  },
  {
    "text": "to this so it's important to to to to treat this data with with a a suitable amount of seasoning it it may not be",
    "start": "1259520",
    "end": "1267080"
  },
  {
    "text": "um you know it's it's a big number and and it may not have as much statistical",
    "start": "1267080",
    "end": "1272360"
  },
  {
    "text": "validity as we might think um the the project that we're going to spend a lot of time talking about today",
    "start": "1272360",
    "end": "1277820"
  },
  {
    "text": "which is open Telemetry was the second most widely used project uh at 49 and",
    "start": "1277820",
    "end": "1283760"
  },
  {
    "text": "then some other other tools as well like fluid D and Diego um what takeaways do we do we have from",
    "start": "1283760",
    "end": "1290539"
  },
  {
    "text": "this well one other point which is interesting is that 72 percent of respondents employ up to nine different",
    "start": "1290539",
    "end": "1295760"
  },
  {
    "text": "tools so there is still a lack of consolidation and even amongst the folks",
    "start": "1295760",
    "end": "1300860"
  },
  {
    "text": "who are already interested in observability and producing uh and adopting within their organizations over",
    "start": "1300860",
    "end": "1306740"
  },
  {
    "text": "one-third of them complain that their organization lacks a proper strategy for this so it is still early days",
    "start": "1306740",
    "end": "1314600"
  },
  {
    "text": "um we are already starting to see some signs of consolidation the reason why we're focusing we're so",
    "start": "1314600",
    "end": "1321260"
  },
  {
    "text": "interested on open Telemetry is because the open temperature usage is rising sharply",
    "start": "1321260",
    "end": "1326419"
  },
  {
    "text": "um it's risen to 49 in just a couple of years Prometheus has been around for a",
    "start": "1326419",
    "end": "1331520"
  },
  {
    "text": "lot longer and it's it seems to have mostly reached Market saturation whereas",
    "start": "1331520",
    "end": "1336679"
  },
  {
    "text": "open Telemetry is only still in some aspects moving out of beta it's not fully GA yet and yet it's already being",
    "start": "1336679",
    "end": "1343159"
  },
  {
    "text": "being used by about half of the folks who are adopting observability as a whole",
    "start": "1343159",
    "end": "1350360"
  },
  {
    "text": "in particular Jaeger which is a tracing solution have decided to end of life",
    "start": "1350360",
    "end": "1355700"
  },
  {
    "text": "their client libraries so Jaeger is pivoting to be a a tracing back end and",
    "start": "1355700",
    "end": "1361100"
  },
  {
    "text": "for its client and it's it's um data ingest libraries to to switch",
    "start": "1361100",
    "end": "1366620"
  },
  {
    "text": "over completely to using open telemetry so that is just one sign of how the",
    "start": "1366620",
    "end": "1371840"
  },
  {
    "text": "market is already beginning to to consolidate and this is part of the process which we see where APM",
    "start": "1371840",
    "end": "1379039"
  },
  {
    "start": "1375000",
    "end": "1375000"
  },
  {
    "text": "monitoring traditionally nominated by proprietary vendors now is starting to to move into this inflection point where",
    "start": "1379039",
    "end": "1385460"
  },
  {
    "text": "we are moving from proprietary to a open source LED Solutions and more and more",
    "start": "1385460",
    "end": "1391580"
  },
  {
    "text": "of the vendors are switching to open source when I was at New Relic I was one of the people who who led that switch of",
    "start": "1391580",
    "end": "1397880"
  },
  {
    "text": "new Radix code base from being primarily proprietary uh on the instrumentation side to being completely open source so",
    "start": "1397880",
    "end": "1405799"
  },
  {
    "text": "in the course of seven months one of the last things I did at neurotic before I left was helped oversee the open",
    "start": "1405799",
    "end": "1411679"
  },
  {
    "text": "sourcing of about 600 million dollars worth of intellectual property",
    "start": "1411679",
    "end": "1416860"
  },
  {
    "text": "so the market is definitely all having uh in this in this general direction and",
    "start": "1416860",
    "end": "1422179"
  },
  {
    "text": "one of the Technologies one of the key things behind this is open Telemetry so let's let's take a look and let's see",
    "start": "1422179",
    "end": "1427580"
  },
  {
    "text": "what open Telemetry actually is so open Telemetry is a set of formats",
    "start": "1427580",
    "end": "1435559"
  },
  {
    "start": "1430000",
    "end": "1430000"
  },
  {
    "text": "Open Standards and libraries it is not about data ingest",
    "start": "1435559",
    "end": "1441380"
  },
  {
    "text": "uh back end or providing visualizations it is about the the components which uh",
    "start": "1441380",
    "end": "1448520"
  },
  {
    "text": "end users will fit into their applications and their infrastructure and it is designed to be very flexible",
    "start": "1448520",
    "end": "1455600"
  },
  {
    "text": "and it is very explicitly across platform is not just a Java standard",
    "start": "1455600",
    "end": "1460659"
  },
  {
    "text": "Java is just one implementation of it uh there are there are others for all of",
    "start": "1460659",
    "end": "1466460"
  },
  {
    "text": "the major languages you can think of at different levels of maturity so Java is a very mature implementation we also see",
    "start": "1466460",
    "end": "1472520"
  },
  {
    "text": "things like um.net and node and go are all fairly mature as well you know other",
    "start": "1472520",
    "end": "1478100"
  },
  {
    "text": "languages python Ruby PHP rust or varying um stages of that maturity life cycle",
    "start": "1478100",
    "end": "1485240"
  },
  {
    "text": "now it is possible to get open symmetry to work on top of bare metal or in just in VMS but there is no getting away from",
    "start": "1485240",
    "end": "1492380"
  },
  {
    "text": "the fact that it is very definitely a cloud-first sort of technology and the",
    "start": "1492380",
    "end": "1499340"
  },
  {
    "text": "the cncf have um have fostered this and they are in charge of of the standard",
    "start": "1499340",
    "end": "1506419"
  },
  {
    "text": "so there are really sort of three pieces to it that you might might want to look at well two maybe three",
    "start": "1506419",
    "end": "1513200"
  },
  {
    "text": "um the two big ones are the API on the sdks the API is what the um",
    "start": "1513200",
    "end": "1519860"
  },
  {
    "text": "the developers of of instrumentation and all of the um the opportunity standard",
    "start": "1519860",
    "end": "1526400"
  },
  {
    "text": "itself tend to use because they contain the the interfaces and from there you can do things like um",
    "start": "1526400",
    "end": "1533840"
  },
  {
    "text": "you can you can write an event exporter you can write a attribute libraries Etc",
    "start": "1533840",
    "end": "1539960"
  },
  {
    "text": "um the the actual users the application owners the end users if you like will",
    "start": "1539960",
    "end": "1545480"
  },
  {
    "text": "typically configure the SDK now the SDK is an implementation of the API and it's",
    "start": "1545480",
    "end": "1551299"
  },
  {
    "text": "the default one and it's the one you get by default um so you can when you download OpenFlow",
    "start": "1551299",
    "end": "1558020"
  },
  {
    "text": "I'm not sure you get the API you also get the SDK as a default implementation of that API that that then is is the",
    "start": "1558020",
    "end": "1564080"
  },
  {
    "text": "basis which you you have for for instrumenting your application using open Telemetry and that will be",
    "start": "1564080",
    "end": "1571279"
  },
  {
    "text": "um your starting point if you're new to the to the project there was also the plugin interfaces",
    "start": "1571279",
    "end": "1576740"
  },
  {
    "text": "which I I used by by a small group of um of folks who are interested in creating",
    "start": "1576740",
    "end": "1582260"
  },
  {
    "text": "new plugins and extending the open Telemetry framework so this is the same information only",
    "start": "1582260",
    "end": "1587600"
  },
  {
    "start": "1586000",
    "end": "1586000"
  },
  {
    "text": "presented in a slightly clearer font um the folks at open symmetry have got that nice diagram but it's a little bit",
    "start": "1587600",
    "end": "1594020"
  },
  {
    "text": "hard to read one thing I want to draw your attention to is that they describe that the support guarantees so the API",
    "start": "1594020",
    "end": "1599840"
  },
  {
    "text": "is guaranteed for three years plug-in interfaces are guaranteed for one year and so it is the SDK basically",
    "start": "1599840",
    "end": "1607100"
  },
  {
    "text": "it's worth noting that the the different components metrics logs and tracing are",
    "start": "1607100",
    "end": "1612740"
  },
  {
    "text": "different statuses at different points in their life cycle So currently the only thing which is is considered in",
    "start": "1612740",
    "end": "1618740"
  },
  {
    "text": "scope for support is tracing although the The Matrix piece will probably also",
    "start": "1618740",
    "end": "1623779"
  },
  {
    "text": "come into sport very soon when it reaches 1.0 um some organizations depending upon your",
    "start": "1623779",
    "end": "1630500"
  },
  {
    "text": "the the way you you think about sport might consider these are not particularly long time scales",
    "start": "1630500",
    "end": "1636380"
  },
  {
    "text": "um and it will be interesting to see what individual vendors will do in terms of of whether they honor these these",
    "start": "1636380",
    "end": "1642140"
  },
  {
    "text": "guarantees or whether they will treat them as a minimum and in fact support for longer than this",
    "start": "1642140",
    "end": "1647240"
  },
  {
    "text": "I don't have any information about what red hap is doing yet but watch this space",
    "start": "1647240",
    "end": "1653240"
  },
  {
    "text": "so here are our components and this is really what makes up open Telemetry the specification comprising the API the SDK",
    "start": "1653240",
    "end": "1660799"
  },
  {
    "text": "data and semantic conventions and those are cross-language and cross-platform so",
    "start": "1660799",
    "end": "1666620"
  },
  {
    "text": "so all implementations must have the same view as far as possible as to what",
    "start": "1666620",
    "end": "1671840"
  },
  {
    "text": "those things mean each individual language then also needs not only an API and an SDK but well we",
    "start": "1671840",
    "end": "1678200"
  },
  {
    "text": "need to to instrument all of the libraries and Frameworks and applications that we uh that we have",
    "start": "1678200",
    "end": "1683240"
  },
  {
    "text": "available and that should work as far as possible completely out of the box so that instrumentation piece is a is a",
    "start": "1683240",
    "end": "1690559"
  },
  {
    "text": "separate component from the the specification and the and the SDK finally one other very important",
    "start": "1690559",
    "end": "1696919"
  },
  {
    "text": "component of the uh of the open Geometry Suite is what we call the collector",
    "start": "1696919",
    "end": "1702020"
  },
  {
    "text": "and The Collector is it's a slightly I think it's a slightly problematic name",
    "start": "1702020",
    "end": "1707600"
  },
  {
    "text": "because when people think of a collector they think of something which is going to store and process their data for them",
    "start": "1707600",
    "end": "1712700"
  },
  {
    "text": "and it doesn't do that what it really is is a very um capable Network protocol",
    "start": "1712700",
    "end": "1718700"
  },
  {
    "text": "Terminator it's able to to to to speak a whole variety of different network",
    "start": "1718700",
    "end": "1724460"
  },
  {
    "text": "formats and it effectively acts as a switching station or a router or a a",
    "start": "1724460",
    "end": "1730940"
  },
  {
    "text": "traffic Terminator and it's all about receiving processing and re-exporting Telemetry data in whatever format then",
    "start": "1730940",
    "end": "1737179"
  },
  {
    "text": "it can it can find it in okay so those are the the primary open",
    "start": "1737179",
    "end": "1743299"
  },
  {
    "text": "Telemetry components let's move on and meet jdk flight recorder",
    "start": "1743299",
    "end": "1749260"
  },
  {
    "start": "1749000",
    "end": "1749000"
  },
  {
    "text": "so the next section is all about JFR um it is a pretty pretty nice profiling",
    "start": "1749960",
    "end": "1756559"
  },
  {
    "text": "tool um it's been around for a a long time it was originally first in in well Java 7",
    "start": "1756559",
    "end": "1763600"
  },
  {
    "text": "the first release of java from Oracle um which is now God well over 10 years",
    "start": "1763600",
    "end": "1769640"
  },
  {
    "text": "ago and it it's kind of got symmetric history because it actually Oracle",
    "start": "1769640",
    "end": "1775399"
  },
  {
    "text": "didn't invent it they bought it when they bought uh Bea systems so so long",
    "start": "1775399",
    "end": "1780500"
  },
  {
    "text": "before they did the deal with some Microsystems they they bought Bea and Bea had a their own jvm called J rocket",
    "start": "1780500",
    "end": "1787940"
  },
  {
    "text": "so JFR originally stood for J rocket flight recorder when they merged it into hotspot which I",
    "start": "1787940",
    "end": "1795140"
  },
  {
    "text": "was selling it became Java flight recorder and then when they open sourced it because from java 7 up to driver 11",
    "start": "1795140",
    "end": "1802840"
  },
  {
    "text": "JFR was a proprietary tool it didn't have an open source supplementation you could only use it in production if you",
    "start": "1802840",
    "end": "1809179"
  },
  {
    "text": "were prepared to pay Oracle for a license but in in Java 11",
    "start": "1809179",
    "end": "1814580"
  },
  {
    "text": "jdk flight recorder was added to open jdk renowned to jdk flight recorder and now",
    "start": "1814580",
    "end": "1820640"
  },
  {
    "text": "everybody can use it it's a very nice profiling tool it's extremely low overhead",
    "start": "1820640",
    "end": "1827659"
  },
  {
    "text": "Oracle claim that it gives you about a one percent impact um I think that's probably overstating",
    "start": "1827659",
    "end": "1834679"
  },
  {
    "text": "the case um it depends of course a great deal on on what you actually collect the more",
    "start": "1834679",
    "end": "1842179"
  },
  {
    "text": "data collect you collect the more you disturb the process that's under observation it's almost like quantum mechanics you",
    "start": "1842179",
    "end": "1847880"
  },
  {
    "text": "know the more the more you look at something and The More You observe it the more you discard it and and mess around with it",
    "start": "1847880",
    "end": "1854299"
  },
  {
    "text": "I've certainly seen on on a reasonable data collection profile around about three percent",
    "start": "1854299",
    "end": "1859760"
  },
  {
    "text": "and if you're prepared to to to be more light touch than that maybe you can get it down even further",
    "start": "1859760",
    "end": "1865520"
  },
  {
    "text": "traditionally JFR data is displayed in a GUI console called mission control or",
    "start": "1865520",
    "end": "1870679"
  },
  {
    "text": "JMC and that's that's fine but it has two",
    "start": "1870679",
    "end": "1876500"
  },
  {
    "text": "problems that we're gonna going to talk about it J5 by default generates an output file",
    "start": "1876500",
    "end": "1881960"
  },
  {
    "text": "so it just generates a recording file like an airplane black box and JMC",
    "start": "1881960",
    "end": "1887539"
  },
  {
    "text": "Mission Control only allows you to load in one file at a time so then you have the problem that you",
    "start": "1887539",
    "end": "1894620"
  },
  {
    "text": "are trying to um to to to If you're looking across an entire cluster you need lots and lots of",
    "start": "1894620",
    "end": "1901640"
  },
  {
    "text": "GUI windows open in order to see the the different types of data from the different machines that's not typically",
    "start": "1901640",
    "end": "1907700"
  },
  {
    "text": "how we want to do things for observability so at first sight it doesn't look like JF arm is that suitable",
    "start": "1907700",
    "end": "1913820"
  },
  {
    "text": "because I'll have to talk about how we get around that so how does it work well you can start it with a command line flag it generates",
    "start": "1913820",
    "end": "1920120"
  },
  {
    "text": "this output file and that there are a couple of pre-configured profiles they call them which can can be used to",
    "start": "1920120",
    "end": "1926360"
  },
  {
    "text": "determine what data is captured because it generates an output file and dumps it to a disk",
    "start": "1926360",
    "end": "1932600"
  },
  {
    "text": "um and because of the the usage of command line Flags this can be a bit of a challenge in containers",
    "start": "1932600",
    "end": "1939380"
  },
  {
    "text": "as we'll see so here's what some of the the startup Flags might look like so",
    "start": "1939380",
    "end": "1944539"
  },
  {
    "text": "we've got a Java minus XX start flight recorder and then we've got a duration",
    "start": "1944539",
    "end": "1950419"
  },
  {
    "text": "and then a file name to dump it out to so this will this this bottom example",
    "start": "1950419",
    "end": "1955520"
  },
  {
    "text": "will will allow you to uh to start a flight recording and it when the process",
    "start": "1955520",
    "end": "1960559"
  },
  {
    "text": "starts it will run for 200 seconds and then it will dump out the file for long running processes this is",
    "start": "1960559",
    "end": "1966380"
  },
  {
    "text": "obviously not great because instead what's happening is that you are um well you've only got the first 200 seconds of",
    "start": "1966380",
    "end": "1973159"
  },
  {
    "text": "the VM and if you your process is up for days that's actually not all that helpful",
    "start": "1973159",
    "end": "1979039"
  },
  {
    "text": "now there is a command called uh jcmd jcmd is used not just to control JFR but",
    "start": "1979039",
    "end": "1985460"
  },
  {
    "text": "it can be used to control many aspects of the Java virtual machine so if you're on on the The Machine's um",
    "start": "1985460",
    "end": "1991700"
  },
  {
    "text": "console you can start and stop and control JFR from the command line",
    "start": "1991700",
    "end": "1997340"
  },
  {
    "text": "again this is not really that useful for for containers and for devops because in",
    "start": "1997340",
    "end": "2004480"
  },
  {
    "start": "1999000",
    "end": "1999000"
  },
  {
    "text": "many cases with modern containers and modern deployments you can't log into the machine",
    "start": "2004480",
    "end": "2009760"
  },
  {
    "text": "so how do you how do you get into it in order to issue the command in order to start the recording",
    "start": "2009760",
    "end": "2016659"
  },
  {
    "text": "um there are also some practices you can do to mitigate this you can set things up so that JFR is configured as a ring",
    "start": "2016659",
    "end": "2022299"
  },
  {
    "text": "buffer so what that means is the the buffer is constantly running and it's recording the last however many seconds or however",
    "start": "2022299",
    "end": "2030100"
  },
  {
    "text": "many megabytes of JFR information and then you can trigger JFR to to dump that buffer out as a file",
    "start": "2030100",
    "end": "2037960"
  },
  {
    "text": "um so let's have a quick look at this in a demo",
    "start": "2037960",
    "end": "2043559"
  },
  {
    "text": "so here's one I made earlier what we look at here is the um",
    "start": "2047740",
    "end": "2054460"
  },
  {
    "text": "this application is called hypothesis this is by our our friends and",
    "start": "2054460",
    "end": "2059980"
  },
  {
    "text": "colleagues at um uh Amazon and it is a memory benchmarking tool so",
    "start": "2059980",
    "end": "2067000"
  },
  {
    "text": "I think I'm just gonna well we don't we don't want to do too much so let's let's give this a duration",
    "start": "2067000",
    "end": "2073658"
  },
  {
    "text": "30 seconds to run rather than the three minutes",
    "start": "2073659",
    "end": "2078540"
  },
  {
    "text": "let's just change the final as well just I don't obliterate the last one I have so there we go you can see that I've",
    "start": "2078820",
    "end": "2085179"
  },
  {
    "text": "started this up you can see that the the recording is is working and in about 30",
    "start": "2085179",
    "end": "2090339"
  },
  {
    "text": "seconds we should get an output to say that we've finished",
    "start": "2090339",
    "end": "2096899"
  },
  {
    "text": "The hyperaloc Benchmark by the way which is is part of a director called hypothesis",
    "start": "2097619",
    "end": "2104140"
  },
  {
    "text": "is a very very useful Benchmark for um for playing with with the memory",
    "start": "2104140",
    "end": "2109599"
  },
  {
    "text": "subsystem I use it a lot for some of my my testing and some of my research into garbage collection okay so here we go we",
    "start": "2109599",
    "end": "2116859"
  },
  {
    "text": "have now got a new flask there it is",
    "start": "2116859",
    "end": "2121560"
  },
  {
    "text": "so now I can from from the commander there's actually a JFR command",
    "start": "2123760",
    "end": "2129099"
  },
  {
    "text": "so here we go JFR print",
    "start": "2129099",
    "end": "2132540"
  },
  {
    "text": "and also there's loads and loads and loads of data um lots of things to do with GC",
    "start": "2138040",
    "end": "2143079"
  },
  {
    "text": "configuration and all kinds of things code cache statistics all sorts of things that we might we",
    "start": "2143079",
    "end": "2149380"
  },
  {
    "text": "might want um lots of things to do in the module system",
    "start": "2149380",
    "end": "2154320"
  },
  {
    "text": "so let's let's just maybe have some",
    "start": "2155260",
    "end": "2161099"
  },
  {
    "text": "look here's lots and lots of CPU load events if you look very carefully you can see that they are about once a second",
    "start": "2164859",
    "end": "2172060"
  },
  {
    "text": "so it is providing ticks which could easily be turned into metrics for CPU utilization and so forth as well and you",
    "start": "2172060",
    "end": "2179200"
  },
  {
    "text": "see we've got lots of nice numbers here we've got the",
    "start": "2179200",
    "end": "2184540"
  },
  {
    "text": "jvm user the jvm system and the total of the machine as well",
    "start": "2184540",
    "end": "2191020"
  },
  {
    "text": "so we can lose these types of things with with the command line um",
    "start": "2191020",
    "end": "2196420"
  },
  {
    "text": "what else can we do from the command line",
    "start": "2196420",
    "end": "2199740"
  },
  {
    "text": "let's just reset this back to 180 so that I can",
    "start": "2209140",
    "end": "2213900"
  },
  {
    "text": "so now I'm just going to take all of the uh all of the detail out so we're not going to start at startup",
    "start": "2223480",
    "end": "2228760"
  },
  {
    "text": "uh instead I'm going to run that",
    "start": "2228760",
    "end": "2234099"
  },
  {
    "text": "look at JPS from here and now I can address CMD",
    "start": "2234099",
    "end": "2239460"
  },
  {
    "text": "and we'll just leave that running for for a short amount of time",
    "start": "2246400",
    "end": "2251099"
  },
  {
    "text": "and now we can stop it and then we need",
    "start": "2259000",
    "end": "2263160"
  },
  {
    "text": "okay and I forgot to get a phone to dump it never mind so yeah so as well as the",
    "start": "2270760",
    "end": "2277060"
  },
  {
    "text": "starting stock commands I forgot to a dump in the meantime okay you actually also needed a a a JFR",
    "start": "2277060",
    "end": "2282760"
  },
  {
    "text": "dump in there as well never mind okay so that's just a brief example of showing you how you can you can do some",
    "start": "2282760",
    "end": "2289119"
  },
  {
    "text": "of that with the with the command line um the other thing which you can do is is actually programmatic you can",
    "start": "2289119",
    "end": "2295660"
  },
  {
    "text": "actually um take a file and um",
    "start": "2295660",
    "end": "2302579"
  },
  {
    "text": "here's one I made earlier within the the modern so 11 plus jdk you",
    "start": "2303640",
    "end": "2312940"
  },
  {
    "text": "can see that we actually had a couple of of um event trees recording event recorded file this enables us to process",
    "start": "2312940",
    "end": "2318400"
  },
  {
    "text": "the file so so down here for example on line 19 assume the font size of it",
    "start": "2318400",
    "end": "2325200"
  },
  {
    "text": "we can take in a recording file and then process it in a while loop where we take individual events",
    "start": "2325300",
    "end": "2332380"
  },
  {
    "text": "which are of this type jdk.jfr.consumer.recorded event",
    "start": "2332380",
    "end": "2337420"
  },
  {
    "text": "and then we can have some some way of processing the events um I use a pattern for for",
    "start": "2337420",
    "end": "2342660"
  },
  {
    "text": "programmatically handling JFR events which involves",
    "start": "2342660",
    "end": "2348579"
  },
  {
    "text": "building these handlers so I have an interface called a recorded",
    "start": "2348579",
    "end": "2353920"
  },
  {
    "text": "event handler which combines both the consumer and the predicate so effectively you test to see whether",
    "start": "2353920",
    "end": "2359980"
  },
  {
    "text": "or not you you will handle this event and then if you can then you can see that",
    "start": "2359980",
    "end": "2365140"
  },
  {
    "text": "so here's the here's the test event here's the predicate",
    "start": "2365140",
    "end": "2370920"
  },
  {
    "text": "and then the other event that we will we will typically also see is um is the consumer so is the",
    "start": "2371380",
    "end": "2379660"
  },
  {
    "text": "is the accept so then basically what this what this boils down to is that something like a",
    "start": "2379660",
    "end": "2386260"
  },
  {
    "text": "G1 Handler this one can handle a bunch of different events G1 Heap summary",
    "start": "2386260",
    "end": "2393520"
  },
  {
    "text": "GC Heap summary and juicy phase parallel and",
    "start": "2393520",
    "end": "2400380"
  },
  {
    "text": "then the accept event looks like this to be basically if you look at the incoming name and figure out which of",
    "start": "2400960",
    "end": "2407560"
  },
  {
    "text": "these it is and then delegate to a an overload of accept",
    "start": "2407560",
    "end": "2414660"
  },
  {
    "text": "okay so that's just some code for for programmatically handling events like",
    "start": "2415300",
    "end": "2420460"
  },
  {
    "text": "this and for generating CSV files from them um and",
    "start": "2420460",
    "end": "2426579"
  },
  {
    "text": "this point we should probably move on and come back to uh just talking about some slides",
    "start": "2426579",
    "end": "2433240"
  },
  {
    "text": "so one of the other things which is also um happened with recent versions of JFR",
    "start": "2433240",
    "end": "2439060"
  },
  {
    "text": "is this move away from dealing with with files JFR files are great if what you're",
    "start": "2439060",
    "end": "2444220"
  },
  {
    "text": "doing is fundamentally performance analysis but unfortunately it it has it has problems you know for doing",
    "start": "2444220",
    "end": "2450940"
  },
  {
    "text": "observability and for for long term always-on production profiling what we",
    "start": "2450940",
    "end": "2456460"
  },
  {
    "text": "need to have is some sort of of telemetry stream of information",
    "start": "2456460",
    "end": "2461800"
  },
  {
    "text": "so the first step towards this is in Java 14 which came out oh over a year",
    "start": "2461800",
    "end": "2467079"
  },
  {
    "text": "ago two years ago now and and that basically provided a mode for JFR where you could get a call back so instead of",
    "start": "2467079",
    "end": "2473500"
  },
  {
    "text": "having to to start and stop recordings and control them you could you could just set up a thread which said every",
    "start": "2473500",
    "end": "2480520"
  },
  {
    "text": "time one of these events that I've registered appears please call me back and I will um I will respond to the",
    "start": "2480520",
    "end": "2486640"
  },
  {
    "text": "event and of course one way that you might want to do this is with a Java agent",
    "start": "2486640",
    "end": "2492700"
  },
  {
    "text": "so you could for example produce some very simple code like this and this is actually a complete working",
    "start": "2492700",
    "end": "2499359"
  },
  {
    "start": "2493000",
    "end": "2493000"
  },
  {
    "text": "um Java agent we've got a pre-made method so we will attach",
    "start": "2499359",
    "end": "2505839"
  },
  {
    "text": "and then we have a run method and I've cheated a little",
    "start": "2505839",
    "end": "2511660"
  },
  {
    "text": "tiny bit because there's there's a stream Event Center object which I haven't implemented and I'm showing you",
    "start": "2511660",
    "end": "2516880"
  },
  {
    "text": "what it does but it basically it sends up the events to anything we would want so you might imagine that those just go",
    "start": "2516880",
    "end": "2522460"
  },
  {
    "text": "over the network um and now instead of having a recording file we have a recording stream",
    "start": "2522460",
    "end": "2529900"
  },
  {
    "text": "and then all we need to do is to to tell it which events we want to enable so a CPU load",
    "start": "2529900",
    "end": "2536560"
  },
  {
    "text": "and there's also one called Java monitor enter this basically is is an event which lets",
    "start": "2536560",
    "end": "2542320"
  },
  {
    "text": "you know when you're holding a lock for too long so that will get a JFR event triggered every time a a synchronized lock",
    "start": "2542320",
    "end": "2550359"
  },
  {
    "text": "is held by any thread for more than 10 milliseconds so long held locks effectively is what",
    "start": "2550359",
    "end": "2556420"
  },
  {
    "text": "you can detect with that you set those two up with the Callback which is",
    "start": "2556420",
    "end": "2562839"
  },
  {
    "text": "the on event lines and then finally you call rs.start that method does not return",
    "start": "2562839",
    "end": "2569800"
  },
  {
    "text": "because now you you your thread is just been centered as an event Loop and it will receive events from the JFR",
    "start": "2569800",
    "end": "2577720"
  },
  {
    "text": "subsystem as things happen okay A bit more detail about the event",
    "start": "2577720",
    "end": "2583720"
  },
  {
    "start": "2581000",
    "end": "2581000"
  },
  {
    "text": "filtering there I'll just leave that up um you should probably do some research if you want to hear more about that",
    "start": "2583720",
    "end": "2590140"
  },
  {
    "start": "2588000",
    "end": "2588000"
  },
  {
    "text": "so what else can we say how can we marry up JFR with open",
    "start": "2590140",
    "end": "2595960"
  },
  {
    "text": "Telemetry well let's take a quick look at what the status of open Telemetry actually is",
    "start": "2595960",
    "end": "2601660"
  },
  {
    "text": "traces are 1.0 they've been 1.04 I think about a year now they allow you to track",
    "start": "2601660",
    "end": "2607240"
  },
  {
    "text": "the the progress of a single request and they are basically replacing uh",
    "start": "2607240",
    "end": "2613300"
  },
  {
    "text": "older Open Standards including open tracing including Jaeger's client libraries",
    "start": "2613300",
    "end": "2618900"
  },
  {
    "text": "distributed tracing within open Telemetry is eating the lunch of all of those projects and it's it seems very",
    "start": "2618900",
    "end": "2626260"
  },
  {
    "text": "clear that that is how the industry not just in Java is going to do tracing going forwards",
    "start": "2626260",
    "end": "2632680"
  },
  {
    "text": "metrics is so close to hitting 1.0 and in fact it may go 1.0 as early as",
    "start": "2632680",
    "end": "2638500"
  },
  {
    "text": "this week now for jvm that means both application and runtime metrics there is still some",
    "start": "2638500",
    "end": "2644619"
  },
  {
    "text": "work to do to make the jvm metrics the ones that are produced directly by the VM itself I.E the ones that will use JFR",
    "start": "2644619",
    "end": "2650980"
  },
  {
    "text": "for um in order to get that to to completely align it's the focus of ongoing work",
    "start": "2650980",
    "end": "2657099"
  },
  {
    "text": "but metrics is now very close as well logging is still in draft State we do",
    "start": "2657099",
    "end": "2663400"
  },
  {
    "text": "not expect that that we will get a 1.0 log standard until late 2022 at the earliest",
    "start": "2663400",
    "end": "2670000"
  },
  {
    "text": "um so anything which is not a trace for a metric is considered to be a log there's some debate about whether or not we as well as logs we need events as a",
    "start": "2670000",
    "end": "2678280"
  },
  {
    "text": "related or subtype uh of logs that we have so the maturities are",
    "start": "2678280",
    "end": "2684520"
  },
  {
    "text": "different in some ways traces hotel is basically out in front Prometheus there's already a lot of",
    "start": "2684520",
    "end": "2691480"
  },
  {
    "text": "folks using Prometheus especially for kubernetes however it's less well established elsewhere and it hasn't really moved a",
    "start": "2691480",
    "end": "2697720"
  },
  {
    "text": "lot lately so I think that is that is a space where otel and a combined approach",
    "start": "2697720",
    "end": "2704079"
  },
  {
    "text": "which uses Hotel traces and hotel metrics can really potentially make some makes them Headway",
    "start": "2704079",
    "end": "2709420"
  },
  {
    "text": "um the logging landscape is more complicated because there are lots and lots of existing Solutions out there and",
    "start": "2709420",
    "end": "2714700"
  },
  {
    "text": "it's not clear to me that that auto logging will make that much of an impact yet",
    "start": "2714700",
    "end": "2720400"
  },
  {
    "text": "but it's very very early days for that last one and in General open cemetery is",
    "start": "2720400",
    "end": "2725980"
  },
  {
    "text": "going to be declared as 1.0 as soon as traces and metrics are done so the overall standard as a whole will go 1.0",
    "start": "2725980",
    "end": "2733359"
  },
  {
    "text": "very soon moving on let's talk about Java and open telemetry",
    "start": "2733359",
    "end": "2739000"
  },
  {
    "start": "2735000",
    "end": "2735000"
  },
  {
    "text": "we've talked about some of these Concepts already but now let's try and weave the threads together and bring it into uh into the realm of what a Java",
    "start": "2739000",
    "end": "2746859"
  },
  {
    "text": "developer or a Java devops person would be expected to do day-to-day first of all we need to talk a little",
    "start": "2746859",
    "end": "2753640"
  },
  {
    "text": "tiny bit about manual versus automatic instrumentation in Java unlike some other languages",
    "start": "2753640",
    "end": "2758740"
  },
  {
    "text": "there are really two ways of doing things there is manual instrumentation where you need to you have full control",
    "start": "2758740",
    "end": "2764800"
  },
  {
    "text": "you can write whatever you like you could instrument whatever you like but you have to do it all yourself and you",
    "start": "2764800",
    "end": "2770200"
  },
  {
    "text": "have a direct coupling to the observability libraries and apis there's also the horrible possibility of",
    "start": "2770200",
    "end": "2776560"
  },
  {
    "text": "human error here because what happens if you don't instrument the right things or you think something isn't important and",
    "start": "2776560",
    "end": "2781780"
  },
  {
    "text": "it turns out to be important well not only do you not have the data but you may not know that you don't have",
    "start": "2781780",
    "end": "2787359"
  },
  {
    "text": "it so manual instrumentation can be error-prone alternatively",
    "start": "2787359",
    "end": "2793359"
  },
  {
    "text": "some people like automatic instrumentation this requires you to use a Java agent or to use a framework which",
    "start": "2793359",
    "end": "2800560"
  },
  {
    "text": "automatically supports open internal tree caucus for example has automatic",
    "start": "2800560",
    "end": "2806020"
  },
  {
    "text": "inbuilt Hotel support you don't need a driver agent you don't need to instrument everything manually instead",
    "start": "2806020",
    "end": "2812859"
  },
  {
    "text": "the framework will do a lot to support you it's not a free lunch you still require some config and in particular when",
    "start": "2812859",
    "end": "2819940"
  },
  {
    "text": "you've got a complex application you may have to tell it certain things not to instrument just to make sure you don't",
    "start": "2819940",
    "end": "2825339"
  },
  {
    "text": "drown in too much data the downside of automatic is there could be a startup time impact if you're using",
    "start": "2825339",
    "end": "2831040"
  },
  {
    "text": "a Java agent and there might be some performance penalties as well you have to measure that you have to",
    "start": "2831040",
    "end": "2837220"
  },
  {
    "text": "determine for yourself which which of these two routes is right for you there's also something which is a little bit of a hybrid approach which you could",
    "start": "2837220",
    "end": "2843220"
  },
  {
    "text": "do as well um different applications will reach different solutions",
    "start": "2843220",
    "end": "2848260"
  },
  {
    "start": "2848000",
    "end": "2848000"
  },
  {
    "text": "foreign within the open Telemetry GitHub org there are three main projects that we we",
    "start": "2848260",
    "end": "2854020"
  },
  {
    "text": "care about within the Java world there's open symmetry Java this is the main instrumentation repo it includes the API",
    "start": "2854020",
    "end": "2859780"
  },
  {
    "text": "it includes the SDK those open Factory Java instrumentation this is the instrumentation for",
    "start": "2859780",
    "end": "2866020"
  },
  {
    "text": "libraries and other components and things that you you can't directly modify it also provides an agent which",
    "start": "2866020",
    "end": "2872920"
  },
  {
    "text": "enables you to to instrument your applications as well there's also open Telemetry dialocon",
    "start": "2872920",
    "end": "2878560"
  },
  {
    "text": "trip this is the Standalone libraries the things which which are accompaniments to this it's also where",
    "start": "2878560",
    "end": "2884560"
  },
  {
    "text": "anything which is intended for the main repos either the main Hotel Java or the",
    "start": "2884560",
    "end": "2891160"
  },
  {
    "text": "Java instrumentation repo they go into Contra first the biggest pieces of of work that are",
    "start": "2891160",
    "end": "2897339"
  },
  {
    "text": "in Java contrib right now are gathering metrics by jmx and JFR support which is",
    "start": "2897339",
    "end": "2904540"
  },
  {
    "text": "still very much in beta we haven't finished it yet but we are still working on it this leads us to an architecture which",
    "start": "2904540",
    "end": "2910540"
  },
  {
    "start": "2909000",
    "end": "2909000"
  },
  {
    "text": "looks a lot like this you have applications with libraries the which depend directly upon the API",
    "start": "2910540",
    "end": "2916780"
  },
  {
    "text": "and then we have an SDK which provides us with exporters which will send the the data Across The Wire",
    "start": "2916780",
    "end": "2925380"
  },
  {
    "text": "for tracing we we will always require some configuration because we need to show whether traces are sent to",
    "start": "2925420",
    "end": "2932380"
  },
  {
    "start": "2931000",
    "end": "2931000"
  },
  {
    "text": "typically traces will be sampled it is not normally possible to to collect data",
    "start": "2932380",
    "end": "2938020"
  },
  {
    "text": "about every single transaction every single user requester is is sent in so",
    "start": "2938020",
    "end": "2943960"
  },
  {
    "text": "we need to sample and the question is how do we do the sampling do we sample everything at the same rate",
    "start": "2943960",
    "end": "2949960"
  },
  {
    "text": "um some people noticeably the honeycomb folks very much want to sample errors more frequently",
    "start": "2949960",
    "end": "2955359"
  },
  {
    "text": "there is an argument to be made the errors should be sampled at 100 200 oks maybe not",
    "start": "2955359",
    "end": "2963280"
  },
  {
    "text": "there's also the question about whether you should sample uniformly or whether you should use some sort of other distribution for determining how you how",
    "start": "2963280",
    "end": "2969819"
  },
  {
    "text": "you sample in particular could you do some sort of long tail sampling where slow requests",
    "start": "2969819",
    "end": "2975280"
  },
  {
    "text": "are also sampled more heavily than than the requests which complete closer to the meantime",
    "start": "2975280",
    "end": "2982800"
  },
  {
    "text": "action is also handled by the the SDK we have a matrix provider which is usually Global as an entry point and we have",
    "start": "2984280",
    "end": "2992500"
  },
  {
    "text": "three things that we care about we have counters where which only ever increase so transaction count something like that",
    "start": "2992500",
    "end": "2999420"
  },
  {
    "text": "we have measures which are values aggregated over time and observers which are the most complex type and provide",
    "start": "2999420",
    "end": "3005280"
  },
  {
    "text": "effectively a callback one of the things which we should also",
    "start": "3005280",
    "end": "3010560"
  },
  {
    "text": "say about open Geometry is open symmetry is a big scale project it is designed for to scale up to very large systems so",
    "start": "3010560",
    "end": "3019440"
  },
  {
    "text": "in some ways it's an example of a system which is built for the big scale but is still usable at medium and small scales",
    "start": "3019440",
    "end": "3027060"
  },
  {
    "text": "because it's designed for big systems it Aggregates and aggregation happens not",
    "start": "3027060",
    "end": "3032460"
  },
  {
    "text": "particularly in your your app code or under control of the user but in the sdks and it's possible to build complex",
    "start": "3032460",
    "end": "3039839"
  },
  {
    "text": "architectures which do multiple aggregations at multiple scales",
    "start": "3039839",
    "end": "3045800"
  },
  {
    "text": "where are we with metrics metrics for manually instrumented code are stable the Wi-Fi format is stable",
    "start": "3047040",
    "end": "3053819"
  },
  {
    "text": "we are 100 production ready on the code the one thing which we still might have",
    "start": "3053819",
    "end": "3059220"
  },
  {
    "text": "a slight bit of variation on and as soon as the next release drops that that won't change is the exact nature or",
    "start": "3059220",
    "end": "3066900"
  },
  {
    "text": "meaning of the data that's being collected from hotel metrics but if you are ready to to start deploying open",
    "start": "3066900",
    "end": "3073380"
  },
  {
    "text": "sanitary I I would not hold back at this point uh on on taking the the hotel",
    "start": "3073380",
    "end": "3078720"
  },
  {
    "text": "metrics as well there are a lot of problems with manual",
    "start": "3078720",
    "end": "3084300"
  },
  {
    "start": "3081000",
    "end": "3081000"
  },
  {
    "text": "instrumentation trying to keep it up to date is is difficult you have confirmation biases that you you may not",
    "start": "3084300",
    "end": "3090780"
  },
  {
    "text": "know what's important and what counts as important will probably change as the application changes over time",
    "start": "3090780",
    "end": "3096960"
  },
  {
    "text": "and there's a nasty problem with my new instrumentation which is that you quite often only find out",
    "start": "3096960",
    "end": "3102599"
  },
  {
    "text": "what is really important to replication in an outage which goes against the whole purpose of",
    "start": "3102599",
    "end": "3107940"
  },
  {
    "text": "observability the whole purpose of ability is to to not have to predict what is important to be able to ask",
    "start": "3107940",
    "end": "3114000"
  },
  {
    "text": "those questions where you didn't know you'd need to answer ask them at the outset and many instrumentation sort of",
    "start": "3114000",
    "end": "3120540"
  },
  {
    "text": "goes against that goal so for that reason lots of people like",
    "start": "3120540",
    "end": "3126300"
  },
  {
    "text": "to use automatic instrumentation and just to to show very quickly",
    "start": "3126300",
    "end": "3132720"
  },
  {
    "start": "3129000",
    "end": "3129000"
  },
  {
    "text": "um don't really have time to do a lot of detail about how Java agents work but basically Java agents install a hook",
    "start": "3132720",
    "end": "3141359"
  },
  {
    "text": "I did Show an example of this earlier on which contains a pre-made method and that's called a pre-registration hook it",
    "start": "3141359",
    "end": "3146940"
  },
  {
    "text": "runs before the main method of your Java application and it allows you to",
    "start": "3146940",
    "end": "3152819"
  },
  {
    "text": "install Transformer classes if you like which have the ability to rewrite code",
    "start": "3152819",
    "end": "3159359"
  },
  {
    "text": "as it's seen so so basically they're they're",
    "start": "3159359",
    "end": "3164400"
  },
  {
    "start": "3164000",
    "end": "3164000"
  },
  {
    "text": "there is an API with a very simple book there's a class called instrumentation",
    "start": "3164400",
    "end": "3169680"
  },
  {
    "text": "and you can you can add bytecode Transformers and Weavers and then add",
    "start": "3169680",
    "end": "3175740"
  },
  {
    "text": "them in as as as class Transformers into instrumentation that's where the real work is done so",
    "start": "3175740",
    "end": "3183000"
  },
  {
    "text": "that when the pre-made method exits those Transformers have been registered and those Transformers will be Rewritten",
    "start": "3183000",
    "end": "3191059"
  },
  {
    "text": "and able to spin up new code and to insert by code into classes as they're",
    "start": "3191059",
    "end": "3196319"
  },
  {
    "text": "loaded um there are key libraries for doing this",
    "start": "3196319",
    "end": "3201720"
  },
  {
    "start": "3198000",
    "end": "3198000"
  },
  {
    "text": "in open Telemetry we use the one called byte buddy there's also a very popular bytecode rewriting Library called ASM",
    "start": "3201720",
    "end": "3208859"
  },
  {
    "text": "which is used internally by the jdk I'll skip that example",
    "start": "3208859",
    "end": "3216380"
  },
  {
    "text": "so the the jar version that's provided by open symmetry can attach to any Java 8 and above application it dynamically",
    "start": "3216660",
    "end": "3222839"
  },
  {
    "text": "injects bytecode to capture the traces and it supports a lot of the the popular libraries and Frameworks completely out",
    "start": "3222839",
    "end": "3229260"
  },
  {
    "text": "of the box it uses the otrp exporter otrp is the open Telemetry line protocol",
    "start": "3229260",
    "end": "3235940"
  },
  {
    "text": "the network protocol which is really Google protocol buffers over grpc which",
    "start": "3235940",
    "end": "3243059"
  },
  {
    "text": "is kind of a an HTTP 2 style of of protocol",
    "start": "3243059",
    "end": "3249680"
  },
  {
    "start": "3248000",
    "end": "3248000"
  },
  {
    "text": "foreign don't really have time for a Code walkthrough as I know that we are we are",
    "start": "3249720",
    "end": "3255300"
  },
  {
    "text": "at at time or thereabouts so if you want to have a look at the the projects the",
    "start": "3255300",
    "end": "3261420"
  },
  {
    "text": "open Telemetry Java is probably the best place to start it is a large and sophisticated project and I would very",
    "start": "3261420",
    "end": "3268319"
  },
  {
    "text": "much recommend that you take some time to to look through it if you're interested in becoming a developer on it",
    "start": "3268319",
    "end": "3274380"
  },
  {
    "text": "um if you just want to be a user I would just consume a published artifact um from",
    "start": "3274380",
    "end": "3280079"
  },
  {
    "text": "um from Maven Central or from your from your vendor in conclusion observability is a growing",
    "start": "3280079",
    "end": "3287520"
  },
  {
    "text": "trend for cloud native Developers there are still plenty of people using things like Prometheus and Jaeger today",
    "start": "3287520",
    "end": "3293579"
  },
  {
    "text": "open symmetry is coming it is a uh quite",
    "start": "3293579",
    "end": "3298859"
  },
  {
    "text": "staggering how quickly and it is growing and how many new developers are on boarding to it",
    "start": "3298859",
    "end": "3304559"
  },
  {
    "text": "um Java has great data sources which could be used to drive open symmetry including",
    "start": "3304559",
    "end": "3309780"
  },
  {
    "text": "technology like Java agents and JFR and they're active open source work to",
    "start": "3309780",
    "end": "3314819"
  },
  {
    "text": "bring these two strands together and with that thank you very much and I hope to see",
    "start": "3314819",
    "end": "3321300"
  },
  {
    "text": "you again at another talk or in person soon",
    "start": "3321300",
    "end": "3325400"
  },
  {
    "text": "[Music]",
    "start": "3327870",
    "end": "3333329"
  }
]